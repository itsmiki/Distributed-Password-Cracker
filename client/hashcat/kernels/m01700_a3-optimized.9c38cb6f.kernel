//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.5
.target sm_61, texmode_independent
.address_size 64

	// .globl	m01700_m04
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .global .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .const .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 8 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 1 m01700_m04_param_20,
	.param .u64 .ptr .global .align 1 m01700_m04_param_21,
	.param .u64 .ptr .global .align 1 m01700_m04_param_22,
	.param .u64 .ptr .global .align 1 m01700_m04_param_23,
	.param .u64 .ptr .global .align 8 m01700_m04_param_24
)
{
	.local .align 4 .b8 	__local_depot0[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .b32 	%r<806>;
	.reg .b64 	%rd<1128>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd87, [m01700_m04_param_0];
	ld.param.u64 	%rd100, [m01700_m04_param_19];
	ld.param.u64 	%rd101, [m01700_m04_param_24];
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r37, %ntid.x;
	mov.b32	%r38, %envreg3;
	mad.lo.s32 	%r39, %r36, %r37, %r38;
	mov.u32 	%r40, %tid.x;
	add.s32 	%r1, %r39, %r40;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd101, 56;
	ld.global.u64 	%rd102, [%rd101+56];
	setp.ge.u64	%p1, %rd1, %rd102;
	@%p1 bra 	BB0_33;

	ld.global.u32 	%r41, [%rd2+-32];
	setp.eq.s32	%p2, %r41, 0;
	@%p2 bra 	BB0_33;

	mul.wide.s32 	%rd106, %r1, 260;
	add.s64 	%rd107, %rd87, %rd106;
	ld.global.u32 	%r2, [%rd107];
	ld.global.u32 	%r3, [%rd107+4];
	ld.global.u32 	%r43, [%rd107+8];
	ld.global.u32 	%r44, [%rd107+12];
	mov.b64	%rd6, {%r44, %r43};
	ld.global.u32 	%r45, [%rd107+60];
	mov.u32 	%r800, 0;
	mov.b64	%rd7, {%r45, %r800};
	ld.const.u64 	%rd108, [k_sha512];
	add.s64 	%rd8, %rd108, 6620516959819538809;
	ld.const.u64 	%rd109, [k_sha512+8];
	add.s64 	%rd110, %rd6, %rd109;
	add.s64 	%rd9, %rd110, 2270897969802886507;
	ld.const.u64 	%rd111, [k_sha512+16];
	add.s64 	%rd10, %rd111, -7276294671716946913;
	ld.const.u64 	%rd112, [k_sha512+24];
	add.s64 	%rd11, %rd112, 5840696475078001361;

BB0_3:
	ld.const.u64 	%rd1088, [k_sha512+120];
	ld.const.u64 	%rd1087, [k_sha512+112];
	ld.const.u64 	%rd1086, [k_sha512+104];
	ld.const.u64 	%rd1085, [k_sha512+96];
	ld.const.u64 	%rd1084, [k_sha512+88];
	ld.const.u64 	%rd1083, [k_sha512+80];
	ld.const.u64 	%rd1082, [k_sha512+72];
	ld.const.u64 	%rd1081, [k_sha512+64];
	ld.const.u64 	%rd1080, [k_sha512+56];
	ld.const.u64 	%rd1079, [k_sha512+48];
	ld.const.u64 	%rd1078, [k_sha512+40];
	ld.const.u64 	%rd1077, [k_sha512+32];
	ld.param.u64 	%rd1076, [m01700_m04_param_3];
	mul.wide.u32 	%rd127, %r800, 4;
	add.s64 	%rd128, %rd1076, %rd127;
	ld.const.u32 	%r47, [%rd128];
	or.b32  	%r48, %r47, %r2;
	mov.b64	%rd1108, {%r3, %r48};
	add.s64 	%rd129, %rd8, %rd1108;
	add.s64 	%rd130, %rd129, 6412459576335945718;
	add.s64 	%rd131, %rd129, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r49,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd130;
	}
	shf.r.wrap.b32 	%r51, %r50, %r49, 14;
	shf.r.wrap.b32 	%r52, %r49, %r50, 14;
	mov.b64 	%rd132, {%r52, %r51};
	shf.r.wrap.b32 	%r53, %r50, %r49, 18;
	shf.r.wrap.b32 	%r54, %r49, %r50, 18;
	mov.b64 	%rd133, {%r54, %r53};
	xor.b64  	%rd134, %rd133, %rd132;
	shf.l.wrap.b32 	%r55, %r49, %r50, 23;
	shf.l.wrap.b32 	%r56, %r50, %r49, 23;
	mov.b64 	%rd135, {%r56, %r55};
	xor.b64  	%rd136, %rd134, %rd135;
	and.b64  	%rd137, %rd130, -3887949035690463538;
	xor.b64  	%rd138, %rd137, -7276294671716946913;
	add.s64 	%rd139, %rd9, %rd136;
	add.s64 	%rd140, %rd139, %rd138;
	add.s64 	%rd141, %rd140, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd131;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 28;
	shf.r.wrap.b32 	%r60, %r57, %r58, 28;
	mov.b64 	%rd142, {%r60, %r59};
	shf.l.wrap.b32 	%r61, %r57, %r58, 30;
	shf.l.wrap.b32 	%r62, %r58, %r57, 30;
	mov.b64 	%rd143, {%r62, %r61};
	xor.b64  	%rd144, %rd143, %rd142;
	shf.l.wrap.b32 	%r63, %r57, %r58, 25;
	shf.l.wrap.b32 	%r64, %r58, %r57, 25;
	mov.b64 	%rd145, {%r64, %r63};
	xor.b64  	%rd146, %rd144, %rd145;
	add.s64 	%rd147, %rd140, %rd146;
	and.b64  	%rd148, %rd131, 7640891576956012808;
	and.b64  	%rd149, %rd131, -4942790177534073029;
	xor.b64  	%rd150, %rd149, 3026882967131160840;
	or.b64  	%rd151, %rd150, %rd148;
	add.s64 	%rd152, %rd147, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd141;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 14;
	shf.r.wrap.b32 	%r68, %r65, %r66, 14;
	mov.b64 	%rd153, {%r68, %r67};
	shf.r.wrap.b32 	%r69, %r66, %r65, 18;
	shf.r.wrap.b32 	%r70, %r65, %r66, 18;
	mov.b64 	%rd154, {%r70, %r69};
	xor.b64  	%rd155, %rd154, %rd153;
	shf.l.wrap.b32 	%r71, %r65, %r66, 23;
	shf.l.wrap.b32 	%r72, %r66, %r65, 23;
	mov.b64 	%rd156, {%r72, %r71};
	xor.b64  	%rd157, %rd155, %rd156;
	xor.b64  	%rd158, %rd130, 5840696475078001361;
	and.b64  	%rd159, %rd141, %rd158;
	xor.b64  	%rd160, %rd159, 5840696475078001361;
	add.s64 	%rd161, %rd10, %rd160;
	add.s64 	%rd162, %rd161, %rd157;
	add.s64 	%rd163, %rd162, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd152;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 28;
	shf.r.wrap.b32 	%r76, %r73, %r74, 28;
	mov.b64 	%rd164, {%r76, %r75};
	shf.l.wrap.b32 	%r77, %r73, %r74, 30;
	shf.l.wrap.b32 	%r78, %r74, %r73, 30;
	mov.b64 	%rd165, {%r78, %r77};
	xor.b64  	%rd166, %rd165, %rd164;
	shf.l.wrap.b32 	%r79, %r73, %r74, 25;
	shf.l.wrap.b32 	%r80, %r74, %r73, 25;
	mov.b64 	%rd167, {%r80, %r79};
	xor.b64  	%rd168, %rd166, %rd167;
	and.b64  	%rd169, %rd152, %rd131;
	xor.b64  	%rd170, %rd152, %rd131;
	and.b64  	%rd171, %rd170, 7640891576956012808;
	or.b64  	%rd172, %rd171, %rd169;
	add.s64 	%rd173, %rd172, %rd162;
	add.s64 	%rd174, %rd173, %rd168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd163;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 14;
	shf.r.wrap.b32 	%r84, %r81, %r82, 14;
	mov.b64 	%rd175, {%r84, %r83};
	shf.r.wrap.b32 	%r85, %r82, %r81, 18;
	shf.r.wrap.b32 	%r86, %r81, %r82, 18;
	mov.b64 	%rd176, {%r86, %r85};
	xor.b64  	%rd177, %rd176, %rd175;
	shf.l.wrap.b32 	%r87, %r81, %r82, 23;
	shf.l.wrap.b32 	%r88, %r82, %r81, 23;
	mov.b64 	%rd178, {%r88, %r87};
	xor.b64  	%rd179, %rd177, %rd178;
	xor.b64  	%rd180, %rd141, %rd130;
	and.b64  	%rd181, %rd163, %rd180;
	xor.b64  	%rd182, %rd181, %rd130;
	add.s64 	%rd183, %rd11, %rd182;
	add.s64 	%rd184, %rd183, %rd179;
	add.s64 	%rd185, %rd184, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd174;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 28;
	shf.r.wrap.b32 	%r92, %r89, %r90, 28;
	mov.b64 	%rd186, {%r92, %r91};
	shf.l.wrap.b32 	%r93, %r89, %r90, 30;
	shf.l.wrap.b32 	%r94, %r90, %r89, 30;
	mov.b64 	%rd187, {%r94, %r93};
	xor.b64  	%rd188, %rd187, %rd186;
	shf.l.wrap.b32 	%r95, %r89, %r90, 25;
	shf.l.wrap.b32 	%r96, %r90, %r89, 25;
	mov.b64 	%rd189, {%r96, %r95};
	xor.b64  	%rd190, %rd188, %rd189;
	and.b64  	%rd191, %rd174, %rd152;
	xor.b64  	%rd192, %rd174, %rd152;
	and.b64  	%rd193, %rd192, %rd131;
	or.b64  	%rd194, %rd193, %rd191;
	add.s64 	%rd195, %rd184, %rd194;
	add.s64 	%rd196, %rd195, %rd190;
	add.s64 	%rd197, %rd1077, %rd130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd185;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 14;
	shf.r.wrap.b32 	%r100, %r97, %r98, 14;
	mov.b64 	%rd198, {%r100, %r99};
	shf.r.wrap.b32 	%r101, %r98, %r97, 18;
	shf.r.wrap.b32 	%r102, %r97, %r98, 18;
	mov.b64 	%rd199, {%r102, %r101};
	xor.b64  	%rd200, %rd199, %rd198;
	shf.l.wrap.b32 	%r103, %r97, %r98, 23;
	shf.l.wrap.b32 	%r104, %r98, %r97, 23;
	mov.b64 	%rd201, {%r104, %r103};
	xor.b64  	%rd202, %rd200, %rd201;
	xor.b64  	%rd203, %rd163, %rd141;
	and.b64  	%rd204, %rd185, %rd203;
	xor.b64  	%rd205, %rd204, %rd141;
	add.s64 	%rd206, %rd197, %rd205;
	add.s64 	%rd207, %rd206, %rd202;
	add.s64 	%rd208, %rd207, %rd131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd196;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 28;
	shf.r.wrap.b32 	%r108, %r105, %r106, 28;
	mov.b64 	%rd209, {%r108, %r107};
	shf.l.wrap.b32 	%r109, %r105, %r106, 30;
	shf.l.wrap.b32 	%r110, %r106, %r105, 30;
	mov.b64 	%rd210, {%r110, %r109};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r111, %r105, %r106, 25;
	shf.l.wrap.b32 	%r112, %r106, %r105, 25;
	mov.b64 	%rd212, {%r112, %r111};
	xor.b64  	%rd213, %rd211, %rd212;
	and.b64  	%rd214, %rd196, %rd174;
	xor.b64  	%rd215, %rd196, %rd174;
	and.b64  	%rd216, %rd215, %rd152;
	or.b64  	%rd217, %rd216, %rd214;
	add.s64 	%rd218, %rd207, %rd217;
	add.s64 	%rd219, %rd218, %rd213;
	add.s64 	%rd220, %rd1078, %rd141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd208;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 14;
	shf.r.wrap.b32 	%r116, %r113, %r114, 14;
	mov.b64 	%rd221, {%r116, %r115};
	shf.r.wrap.b32 	%r117, %r114, %r113, 18;
	shf.r.wrap.b32 	%r118, %r113, %r114, 18;
	mov.b64 	%rd222, {%r118, %r117};
	xor.b64  	%rd223, %rd222, %rd221;
	shf.l.wrap.b32 	%r119, %r113, %r114, 23;
	shf.l.wrap.b32 	%r120, %r114, %r113, 23;
	mov.b64 	%rd224, {%r120, %r119};
	xor.b64  	%rd225, %rd223, %rd224;
	xor.b64  	%rd226, %rd185, %rd163;
	and.b64  	%rd227, %rd208, %rd226;
	xor.b64  	%rd228, %rd227, %rd163;
	add.s64 	%rd229, %rd220, %rd228;
	add.s64 	%rd230, %rd229, %rd225;
	add.s64 	%rd231, %rd230, %rd152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd219;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 28;
	shf.r.wrap.b32 	%r124, %r121, %r122, 28;
	mov.b64 	%rd232, {%r124, %r123};
	shf.l.wrap.b32 	%r125, %r121, %r122, 30;
	shf.l.wrap.b32 	%r126, %r122, %r121, 30;
	mov.b64 	%rd233, {%r126, %r125};
	xor.b64  	%rd234, %rd233, %rd232;
	shf.l.wrap.b32 	%r127, %r121, %r122, 25;
	shf.l.wrap.b32 	%r128, %r122, %r121, 25;
	mov.b64 	%rd235, {%r128, %r127};
	xor.b64  	%rd236, %rd234, %rd235;
	and.b64  	%rd237, %rd219, %rd196;
	xor.b64  	%rd238, %rd219, %rd196;
	and.b64  	%rd239, %rd238, %rd174;
	or.b64  	%rd240, %rd239, %rd237;
	add.s64 	%rd241, %rd230, %rd240;
	add.s64 	%rd242, %rd241, %rd236;
	add.s64 	%rd243, %rd1079, %rd163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd231;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 14;
	shf.r.wrap.b32 	%r132, %r129, %r130, 14;
	mov.b64 	%rd244, {%r132, %r131};
	shf.r.wrap.b32 	%r133, %r130, %r129, 18;
	shf.r.wrap.b32 	%r134, %r129, %r130, 18;
	mov.b64 	%rd245, {%r134, %r133};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r135, %r129, %r130, 23;
	shf.l.wrap.b32 	%r136, %r130, %r129, 23;
	mov.b64 	%rd247, {%r136, %r135};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd208, %rd185;
	and.b64  	%rd250, %rd231, %rd249;
	xor.b64  	%rd251, %rd250, %rd185;
	add.s64 	%rd252, %rd243, %rd251;
	add.s64 	%rd253, %rd252, %rd248;
	add.s64 	%rd254, %rd253, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd242;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 28;
	shf.r.wrap.b32 	%r140, %r137, %r138, 28;
	mov.b64 	%rd255, {%r140, %r139};
	shf.l.wrap.b32 	%r141, %r137, %r138, 30;
	shf.l.wrap.b32 	%r142, %r138, %r137, 30;
	mov.b64 	%rd256, {%r142, %r141};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r143, %r137, %r138, 25;
	shf.l.wrap.b32 	%r144, %r138, %r137, 25;
	mov.b64 	%rd258, {%r144, %r143};
	xor.b64  	%rd259, %rd257, %rd258;
	and.b64  	%rd260, %rd242, %rd219;
	xor.b64  	%rd261, %rd242, %rd219;
	and.b64  	%rd262, %rd261, %rd196;
	or.b64  	%rd263, %rd262, %rd260;
	add.s64 	%rd264, %rd253, %rd263;
	add.s64 	%rd265, %rd264, %rd259;
	add.s64 	%rd266, %rd1080, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd254;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 14;
	shf.r.wrap.b32 	%r148, %r145, %r146, 14;
	mov.b64 	%rd267, {%r148, %r147};
	shf.r.wrap.b32 	%r149, %r146, %r145, 18;
	shf.r.wrap.b32 	%r150, %r145, %r146, 18;
	mov.b64 	%rd268, {%r150, %r149};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r151, %r145, %r146, 23;
	shf.l.wrap.b32 	%r152, %r146, %r145, 23;
	mov.b64 	%rd270, {%r152, %r151};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd231, %rd208;
	and.b64  	%rd273, %rd254, %rd272;
	xor.b64  	%rd274, %rd273, %rd208;
	add.s64 	%rd275, %rd266, %rd274;
	add.s64 	%rd276, %rd275, %rd271;
	add.s64 	%rd277, %rd276, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd265;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 28;
	shf.r.wrap.b32 	%r156, %r153, %r154, 28;
	mov.b64 	%rd278, {%r156, %r155};
	shf.l.wrap.b32 	%r157, %r153, %r154, 30;
	shf.l.wrap.b32 	%r158, %r154, %r153, 30;
	mov.b64 	%rd279, {%r158, %r157};
	xor.b64  	%rd280, %rd279, %rd278;
	shf.l.wrap.b32 	%r159, %r153, %r154, 25;
	shf.l.wrap.b32 	%r160, %r154, %r153, 25;
	mov.b64 	%rd281, {%r160, %r159};
	xor.b64  	%rd282, %rd280, %rd281;
	and.b64  	%rd283, %rd265, %rd242;
	xor.b64  	%rd284, %rd265, %rd242;
	and.b64  	%rd285, %rd284, %rd219;
	or.b64  	%rd286, %rd285, %rd283;
	add.s64 	%rd287, %rd276, %rd286;
	add.s64 	%rd288, %rd287, %rd282;
	add.s64 	%rd289, %rd1081, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd277;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 14;
	shf.r.wrap.b32 	%r164, %r161, %r162, 14;
	mov.b64 	%rd290, {%r164, %r163};
	shf.r.wrap.b32 	%r165, %r162, %r161, 18;
	shf.r.wrap.b32 	%r166, %r161, %r162, 18;
	mov.b64 	%rd291, {%r166, %r165};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r167, %r161, %r162, 23;
	shf.l.wrap.b32 	%r168, %r162, %r161, 23;
	mov.b64 	%rd293, {%r168, %r167};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd231;
	and.b64  	%rd296, %rd277, %rd295;
	xor.b64  	%rd297, %rd296, %rd231;
	add.s64 	%rd298, %rd289, %rd297;
	add.s64 	%rd299, %rd298, %rd294;
	add.s64 	%rd300, %rd299, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd288;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 28;
	shf.r.wrap.b32 	%r172, %r169, %r170, 28;
	mov.b64 	%rd301, {%r172, %r171};
	shf.l.wrap.b32 	%r173, %r169, %r170, 30;
	shf.l.wrap.b32 	%r174, %r170, %r169, 30;
	mov.b64 	%rd302, {%r174, %r173};
	xor.b64  	%rd303, %rd302, %rd301;
	shf.l.wrap.b32 	%r175, %r169, %r170, 25;
	shf.l.wrap.b32 	%r176, %r170, %r169, 25;
	mov.b64 	%rd304, {%r176, %r175};
	xor.b64  	%rd305, %rd303, %rd304;
	and.b64  	%rd306, %rd288, %rd265;
	xor.b64  	%rd307, %rd288, %rd265;
	and.b64  	%rd308, %rd307, %rd242;
	or.b64  	%rd309, %rd308, %rd306;
	add.s64 	%rd310, %rd299, %rd309;
	add.s64 	%rd311, %rd310, %rd305;
	add.s64 	%rd312, %rd1082, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd300;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 14;
	shf.r.wrap.b32 	%r180, %r177, %r178, 14;
	mov.b64 	%rd313, {%r180, %r179};
	shf.r.wrap.b32 	%r181, %r178, %r177, 18;
	shf.r.wrap.b32 	%r182, %r177, %r178, 18;
	mov.b64 	%rd314, {%r182, %r181};
	xor.b64  	%rd315, %rd314, %rd313;
	shf.l.wrap.b32 	%r183, %r177, %r178, 23;
	shf.l.wrap.b32 	%r184, %r178, %r177, 23;
	mov.b64 	%rd316, {%r184, %r183};
	xor.b64  	%rd317, %rd315, %rd316;
	xor.b64  	%rd318, %rd277, %rd254;
	and.b64  	%rd319, %rd300, %rd318;
	xor.b64  	%rd320, %rd319, %rd254;
	add.s64 	%rd321, %rd312, %rd320;
	add.s64 	%rd322, %rd321, %rd317;
	add.s64 	%rd323, %rd322, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd311;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 28;
	shf.r.wrap.b32 	%r188, %r185, %r186, 28;
	mov.b64 	%rd324, {%r188, %r187};
	shf.l.wrap.b32 	%r189, %r185, %r186, 30;
	shf.l.wrap.b32 	%r190, %r186, %r185, 30;
	mov.b64 	%rd325, {%r190, %r189};
	xor.b64  	%rd326, %rd325, %rd324;
	shf.l.wrap.b32 	%r191, %r185, %r186, 25;
	shf.l.wrap.b32 	%r192, %r186, %r185, 25;
	mov.b64 	%rd327, {%r192, %r191};
	xor.b64  	%rd328, %rd326, %rd327;
	and.b64  	%rd329, %rd311, %rd288;
	xor.b64  	%rd330, %rd311, %rd288;
	and.b64  	%rd331, %rd330, %rd265;
	or.b64  	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd322, %rd332;
	add.s64 	%rd334, %rd333, %rd328;
	add.s64 	%rd335, %rd1083, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd323;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 14;
	shf.r.wrap.b32 	%r196, %r193, %r194, 14;
	mov.b64 	%rd336, {%r196, %r195};
	shf.r.wrap.b32 	%r197, %r194, %r193, 18;
	shf.r.wrap.b32 	%r198, %r193, %r194, 18;
	mov.b64 	%rd337, {%r198, %r197};
	xor.b64  	%rd338, %rd337, %rd336;
	shf.l.wrap.b32 	%r199, %r193, %r194, 23;
	shf.l.wrap.b32 	%r200, %r194, %r193, 23;
	mov.b64 	%rd339, {%r200, %r199};
	xor.b64  	%rd340, %rd338, %rd339;
	xor.b64  	%rd341, %rd300, %rd277;
	and.b64  	%rd342, %rd323, %rd341;
	xor.b64  	%rd343, %rd342, %rd277;
	add.s64 	%rd344, %rd335, %rd343;
	add.s64 	%rd345, %rd344, %rd340;
	add.s64 	%rd346, %rd345, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd334;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 28;
	shf.r.wrap.b32 	%r204, %r201, %r202, 28;
	mov.b64 	%rd347, {%r204, %r203};
	shf.l.wrap.b32 	%r205, %r201, %r202, 30;
	shf.l.wrap.b32 	%r206, %r202, %r201, 30;
	mov.b64 	%rd348, {%r206, %r205};
	xor.b64  	%rd349, %rd348, %rd347;
	shf.l.wrap.b32 	%r207, %r201, %r202, 25;
	shf.l.wrap.b32 	%r208, %r202, %r201, 25;
	mov.b64 	%rd350, {%r208, %r207};
	xor.b64  	%rd351, %rd349, %rd350;
	and.b64  	%rd352, %rd334, %rd311;
	xor.b64  	%rd353, %rd334, %rd311;
	and.b64  	%rd354, %rd353, %rd288;
	or.b64  	%rd355, %rd354, %rd352;
	add.s64 	%rd356, %rd345, %rd355;
	add.s64 	%rd357, %rd356, %rd351;
	add.s64 	%rd358, %rd1084, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd346;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 14;
	shf.r.wrap.b32 	%r212, %r209, %r210, 14;
	mov.b64 	%rd359, {%r212, %r211};
	shf.r.wrap.b32 	%r213, %r210, %r209, 18;
	shf.r.wrap.b32 	%r214, %r209, %r210, 18;
	mov.b64 	%rd360, {%r214, %r213};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r215, %r209, %r210, 23;
	shf.l.wrap.b32 	%r216, %r210, %r209, 23;
	mov.b64 	%rd362, {%r216, %r215};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd323, %rd300;
	and.b64  	%rd365, %rd346, %rd364;
	xor.b64  	%rd366, %rd365, %rd300;
	add.s64 	%rd367, %rd358, %rd366;
	add.s64 	%rd368, %rd367, %rd363;
	add.s64 	%rd369, %rd368, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd357;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 28;
	shf.r.wrap.b32 	%r220, %r217, %r218, 28;
	mov.b64 	%rd370, {%r220, %r219};
	shf.l.wrap.b32 	%r221, %r217, %r218, 30;
	shf.l.wrap.b32 	%r222, %r218, %r217, 30;
	mov.b64 	%rd371, {%r222, %r221};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r223, %r217, %r218, 25;
	shf.l.wrap.b32 	%r224, %r218, %r217, 25;
	mov.b64 	%rd373, {%r224, %r223};
	xor.b64  	%rd374, %rd372, %rd373;
	and.b64  	%rd375, %rd357, %rd334;
	xor.b64  	%rd376, %rd357, %rd334;
	and.b64  	%rd377, %rd376, %rd311;
	or.b64  	%rd378, %rd377, %rd375;
	add.s64 	%rd379, %rd368, %rd378;
	add.s64 	%rd380, %rd379, %rd374;
	add.s64 	%rd381, %rd1085, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd369;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 14;
	shf.r.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd382, {%r228, %r227};
	shf.r.wrap.b32 	%r229, %r226, %r225, 18;
	shf.r.wrap.b32 	%r230, %r225, %r226, 18;
	mov.b64 	%rd383, {%r230, %r229};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r231, %r225, %r226, 23;
	shf.l.wrap.b32 	%r232, %r226, %r225, 23;
	mov.b64 	%rd385, {%r232, %r231};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd346, %rd323;
	and.b64  	%rd388, %rd369, %rd387;
	xor.b64  	%rd389, %rd388, %rd323;
	add.s64 	%rd390, %rd381, %rd389;
	add.s64 	%rd391, %rd390, %rd386;
	add.s64 	%rd1104, %rd391, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd380;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 28;
	shf.r.wrap.b32 	%r236, %r233, %r234, 28;
	mov.b64 	%rd392, {%r236, %r235};
	shf.l.wrap.b32 	%r237, %r233, %r234, 30;
	shf.l.wrap.b32 	%r238, %r234, %r233, 30;
	mov.b64 	%rd393, {%r238, %r237};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r239, %r233, %r234, 25;
	shf.l.wrap.b32 	%r240, %r234, %r233, 25;
	mov.b64 	%rd395, {%r240, %r239};
	xor.b64  	%rd396, %rd394, %rd395;
	and.b64  	%rd397, %rd380, %rd357;
	xor.b64  	%rd398, %rd380, %rd357;
	and.b64  	%rd399, %rd398, %rd334;
	or.b64  	%rd400, %rd399, %rd397;
	add.s64 	%rd401, %rd391, %rd400;
	add.s64 	%rd1127, %rd401, %rd396;
	add.s64 	%rd402, %rd1086, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd1104;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 14;
	shf.r.wrap.b32 	%r244, %r241, %r242, 14;
	mov.b64 	%rd403, {%r244, %r243};
	shf.r.wrap.b32 	%r245, %r242, %r241, 18;
	shf.r.wrap.b32 	%r246, %r241, %r242, 18;
	mov.b64 	%rd404, {%r246, %r245};
	xor.b64  	%rd405, %rd404, %rd403;
	shf.l.wrap.b32 	%r247, %r241, %r242, 23;
	shf.l.wrap.b32 	%r248, %r242, %r241, 23;
	mov.b64 	%rd406, {%r248, %r247};
	xor.b64  	%rd407, %rd405, %rd406;
	xor.b64  	%rd408, %rd369, %rd346;
	and.b64  	%rd409, %rd1104, %rd408;
	xor.b64  	%rd410, %rd409, %rd346;
	add.s64 	%rd411, %rd402, %rd410;
	add.s64 	%rd412, %rd411, %rd407;
	add.s64 	%rd1105, %rd412, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd1127;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 28;
	shf.r.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd413, {%r252, %r251};
	shf.l.wrap.b32 	%r253, %r249, %r250, 30;
	shf.l.wrap.b32 	%r254, %r250, %r249, 30;
	mov.b64 	%rd414, {%r254, %r253};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r255, %r249, %r250, 25;
	shf.l.wrap.b32 	%r256, %r250, %r249, 25;
	mov.b64 	%rd416, {%r256, %r255};
	xor.b64  	%rd417, %rd415, %rd416;
	and.b64  	%rd418, %rd1127, %rd380;
	xor.b64  	%rd419, %rd1127, %rd380;
	and.b64  	%rd420, %rd419, %rd357;
	or.b64  	%rd421, %rd420, %rd418;
	add.s64 	%rd422, %rd412, %rd421;
	add.s64 	%rd1126, %rd422, %rd417;
	add.s64 	%rd423, %rd1087, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd1105;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 14;
	shf.r.wrap.b32 	%r260, %r257, %r258, 14;
	mov.b64 	%rd424, {%r260, %r259};
	shf.r.wrap.b32 	%r261, %r258, %r257, 18;
	shf.r.wrap.b32 	%r262, %r257, %r258, 18;
	mov.b64 	%rd425, {%r262, %r261};
	xor.b64  	%rd426, %rd425, %rd424;
	shf.l.wrap.b32 	%r263, %r257, %r258, 23;
	shf.l.wrap.b32 	%r264, %r258, %r257, 23;
	mov.b64 	%rd427, {%r264, %r263};
	xor.b64  	%rd428, %rd426, %rd427;
	xor.b64  	%rd429, %rd1104, %rd369;
	and.b64  	%rd430, %rd1105, %rd429;
	xor.b64  	%rd431, %rd430, %rd369;
	add.s64 	%rd432, %rd423, %rd431;
	add.s64 	%rd433, %rd432, %rd428;
	add.s64 	%rd1106, %rd433, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd1126;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 28;
	shf.r.wrap.b32 	%r268, %r265, %r266, 28;
	mov.b64 	%rd434, {%r268, %r267};
	shf.l.wrap.b32 	%r269, %r265, %r266, 30;
	shf.l.wrap.b32 	%r270, %r266, %r265, 30;
	mov.b64 	%rd435, {%r270, %r269};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r271, %r265, %r266, 25;
	shf.l.wrap.b32 	%r272, %r266, %r265, 25;
	mov.b64 	%rd437, {%r272, %r271};
	xor.b64  	%rd438, %rd436, %rd437;
	and.b64  	%rd439, %rd1126, %rd1127;
	xor.b64  	%rd440, %rd1126, %rd1127;
	and.b64  	%rd441, %rd440, %rd380;
	or.b64  	%rd442, %rd441, %rd439;
	add.s64 	%rd443, %rd433, %rd442;
	add.s64 	%rd1125, %rd443, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd1106;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 14;
	shf.r.wrap.b32 	%r276, %r273, %r274, 14;
	mov.b64 	%rd444, {%r276, %r275};
	shf.r.wrap.b32 	%r277, %r274, %r273, 18;
	shf.r.wrap.b32 	%r278, %r273, %r274, 18;
	mov.b64 	%rd445, {%r278, %r277};
	xor.b64  	%rd446, %rd445, %rd444;
	shf.l.wrap.b32 	%r279, %r273, %r274, 23;
	shf.l.wrap.b32 	%r280, %r274, %r273, 23;
	mov.b64 	%rd447, {%r280, %r279};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd1105, %rd1104;
	and.b64  	%rd450, %rd1106, %rd449;
	xor.b64  	%rd451, %rd450, %rd1104;
	add.s64 	%rd452, %rd369, %rd7;
	add.s64 	%rd453, %rd452, %rd1088;
	add.s64 	%rd454, %rd453, %rd451;
	add.s64 	%rd455, %rd454, %rd448;
	add.s64 	%rd1107, %rd455, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd1125;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 28;
	shf.r.wrap.b32 	%r284, %r281, %r282, 28;
	mov.b64 	%rd456, {%r284, %r283};
	shf.l.wrap.b32 	%r285, %r281, %r282, 30;
	shf.l.wrap.b32 	%r286, %r282, %r281, 30;
	mov.b64 	%rd457, {%r286, %r285};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r287, %r281, %r282, 25;
	shf.l.wrap.b32 	%r288, %r282, %r281, 25;
	mov.b64 	%rd459, {%r288, %r287};
	xor.b64  	%rd460, %rd458, %rd459;
	and.b64  	%rd461, %rd1125, %rd1126;
	xor.b64  	%rd462, %rd1125, %rd1126;
	and.b64  	%rd463, %rd462, %rd1127;
	or.b64  	%rd464, %rd463, %rd461;
	add.s64 	%rd465, %rd455, %rd464;
	add.s64 	%rd1124, %rd465, %rd460;
	mov.u64 	%rd1110, 0;
	mov.u32 	%r801, 16;
	mov.u64 	%rd1103, k_sha512;
	mov.u64 	%rd1109, %rd6;
	mov.u64 	%rd1111, %rd1110;
	mov.u64 	%rd1112, %rd1110;
	mov.u64 	%rd1113, %rd1110;
	mov.u64 	%rd1114, %rd1110;
	mov.u64 	%rd1115, %rd1110;
	mov.u64 	%rd1116, %rd1110;
	mov.u64 	%rd1117, %rd1110;
	mov.u64 	%rd1118, %rd1110;
	mov.u64 	%rd1119, %rd1110;
	mov.u64 	%rd1120, %rd1110;
	mov.u64 	%rd1121, %rd1110;
	mov.u64 	%rd1122, %rd1110;
	mov.u64 	%rd1123, %rd7;

BB0_4:
	shr.u64 	%rd466, %rd1122, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd1122;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 19;
	shf.r.wrap.b32 	%r292, %r289, %r290, 19;
	mov.b64 	%rd467, {%r292, %r291};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r293, %r289, %r290, 3;
	shf.l.wrap.b32 	%r294, %r290, %r289, 3;
	mov.b64 	%rd469, {%r294, %r293};
	xor.b64  	%rd470, %rd468, %rd469;
	shr.u64 	%rd471, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd1109;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 1;
	shf.r.wrap.b32 	%r298, %r295, %r296, 1;
	mov.b64 	%rd472, {%r298, %r297};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.r.wrap.b32 	%r299, %r296, %r295, 8;
	shf.r.wrap.b32 	%r300, %r295, %r296, 8;
	mov.b64 	%rd474, {%r300, %r299};
	xor.b64  	%rd475, %rd473, %rd474;
	add.s64 	%rd476, %rd1108, %rd1117;
	add.s64 	%rd477, %rd476, %rd470;
	add.s64 	%rd1108, %rd477, %rd475;
	shr.u64 	%rd478, %rd1123, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd1123;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 19;
	shf.r.wrap.b32 	%r304, %r301, %r302, 19;
	mov.b64 	%rd479, {%r304, %r303};
	xor.b64  	%rd480, %rd479, %rd478;
	shf.l.wrap.b32 	%r305, %r301, %r302, 3;
	shf.l.wrap.b32 	%r306, %r302, %r301, 3;
	mov.b64 	%rd481, {%r306, %r305};
	xor.b64  	%rd482, %rd480, %rd481;
	shr.u64 	%rd483, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1110;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 1;
	shf.r.wrap.b32 	%r310, %r307, %r308, 1;
	mov.b64 	%rd484, {%r310, %r309};
	xor.b64  	%rd485, %rd484, %rd483;
	shf.r.wrap.b32 	%r311, %r308, %r307, 8;
	shf.r.wrap.b32 	%r312, %r307, %r308, 8;
	mov.b64 	%rd486, {%r312, %r311};
	xor.b64  	%rd487, %rd485, %rd486;
	add.s64 	%rd488, %rd1109, %rd1118;
	add.s64 	%rd489, %rd488, %rd482;
	add.s64 	%rd1109, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd1108;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 19;
	shf.r.wrap.b32 	%r316, %r313, %r314, 19;
	mov.b64 	%rd490, {%r316, %r315};
	shf.l.wrap.b32 	%r317, %r313, %r314, 3;
	shf.l.wrap.b32 	%r318, %r314, %r313, 3;
	mov.b64 	%rd491, {%r318, %r317};
	shr.u64 	%rd492, %rd1108, 6;
	xor.b64  	%rd493, %rd490, %rd492;
	xor.b64  	%rd494, %rd493, %rd491;
	shr.u64 	%rd495, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd1111;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 1;
	shf.r.wrap.b32 	%r322, %r319, %r320, 1;
	mov.b64 	%rd496, {%r322, %r321};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.r.wrap.b32 	%r323, %r320, %r319, 8;
	shf.r.wrap.b32 	%r324, %r319, %r320, 8;
	mov.b64 	%rd498, {%r324, %r323};
	xor.b64  	%rd499, %rd497, %rd498;
	add.s64 	%rd500, %rd1110, %rd1119;
	add.s64 	%rd501, %rd500, %rd494;
	add.s64 	%rd1110, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd1109;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 19;
	shf.r.wrap.b32 	%r328, %r325, %r326, 19;
	mov.b64 	%rd502, {%r328, %r327};
	shf.l.wrap.b32 	%r329, %r325, %r326, 3;
	shf.l.wrap.b32 	%r330, %r326, %r325, 3;
	mov.b64 	%rd503, {%r330, %r329};
	shr.u64 	%rd504, %rd1109, 6;
	xor.b64  	%rd505, %rd502, %rd504;
	xor.b64  	%rd506, %rd505, %rd503;
	shr.u64 	%rd507, %rd1112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd1112;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 1;
	shf.r.wrap.b32 	%r334, %r331, %r332, 1;
	mov.b64 	%rd508, {%r334, %r333};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.r.wrap.b32 	%r335, %r332, %r331, 8;
	shf.r.wrap.b32 	%r336, %r331, %r332, 8;
	mov.b64 	%rd510, {%r336, %r335};
	xor.b64  	%rd511, %rd509, %rd510;
	add.s64 	%rd512, %rd1111, %rd1120;
	add.s64 	%rd513, %rd512, %rd506;
	add.s64 	%rd1111, %rd513, %rd511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd1110;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 19;
	shf.r.wrap.b32 	%r340, %r337, %r338, 19;
	mov.b64 	%rd514, {%r340, %r339};
	shf.l.wrap.b32 	%r341, %r337, %r338, 3;
	shf.l.wrap.b32 	%r342, %r338, %r337, 3;
	mov.b64 	%rd515, {%r342, %r341};
	shr.u64 	%rd516, %rd1110, 6;
	xor.b64  	%rd517, %rd514, %rd516;
	xor.b64  	%rd518, %rd517, %rd515;
	shr.u64 	%rd519, %rd1113, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd1113;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 1;
	shf.r.wrap.b32 	%r346, %r343, %r344, 1;
	mov.b64 	%rd520, {%r346, %r345};
	xor.b64  	%rd521, %rd520, %rd519;
	shf.r.wrap.b32 	%r347, %r344, %r343, 8;
	shf.r.wrap.b32 	%r348, %r343, %r344, 8;
	mov.b64 	%rd522, {%r348, %r347};
	xor.b64  	%rd523, %rd521, %rd522;
	add.s64 	%rd524, %rd1112, %rd1121;
	add.s64 	%rd525, %rd524, %rd518;
	add.s64 	%rd1112, %rd525, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd1111;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 19;
	shf.r.wrap.b32 	%r352, %r349, %r350, 19;
	mov.b64 	%rd526, {%r352, %r351};
	shf.l.wrap.b32 	%r353, %r349, %r350, 3;
	shf.l.wrap.b32 	%r354, %r350, %r349, 3;
	mov.b64 	%rd527, {%r354, %r353};
	shr.u64 	%rd528, %rd1111, 6;
	xor.b64  	%rd529, %rd526, %rd528;
	xor.b64  	%rd530, %rd529, %rd527;
	shr.u64 	%rd531, %rd1114, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd1114;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 1;
	shf.r.wrap.b32 	%r358, %r355, %r356, 1;
	mov.b64 	%rd532, {%r358, %r357};
	xor.b64  	%rd533, %rd532, %rd531;
	shf.r.wrap.b32 	%r359, %r356, %r355, 8;
	shf.r.wrap.b32 	%r360, %r355, %r356, 8;
	mov.b64 	%rd534, {%r360, %r359};
	xor.b64  	%rd535, %rd533, %rd534;
	add.s64 	%rd536, %rd1113, %rd1122;
	add.s64 	%rd537, %rd536, %rd530;
	add.s64 	%rd1113, %rd537, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd1112;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 19;
	shf.r.wrap.b32 	%r364, %r361, %r362, 19;
	mov.b64 	%rd538, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 3;
	shf.l.wrap.b32 	%r366, %r362, %r361, 3;
	mov.b64 	%rd539, {%r366, %r365};
	shr.u64 	%rd540, %rd1112, 6;
	xor.b64  	%rd541, %rd538, %rd540;
	xor.b64  	%rd542, %rd541, %rd539;
	shr.u64 	%rd543, %rd1115, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd1115;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 1;
	shf.r.wrap.b32 	%r370, %r367, %r368, 1;
	mov.b64 	%rd544, {%r370, %r369};
	xor.b64  	%rd545, %rd544, %rd543;
	shf.r.wrap.b32 	%r371, %r368, %r367, 8;
	shf.r.wrap.b32 	%r372, %r367, %r368, 8;
	mov.b64 	%rd546, {%r372, %r371};
	xor.b64  	%rd547, %rd545, %rd546;
	add.s64 	%rd548, %rd1114, %rd1123;
	add.s64 	%rd549, %rd548, %rd542;
	add.s64 	%rd1114, %rd549, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd1113;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 19;
	shf.r.wrap.b32 	%r376, %r373, %r374, 19;
	mov.b64 	%rd550, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 3;
	shf.l.wrap.b32 	%r378, %r374, %r373, 3;
	mov.b64 	%rd551, {%r378, %r377};
	shr.u64 	%rd552, %rd1113, 6;
	xor.b64  	%rd553, %rd550, %rd552;
	xor.b64  	%rd554, %rd553, %rd551;
	shr.u64 	%rd555, %rd1116, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd1116;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 1;
	shf.r.wrap.b32 	%r382, %r379, %r380, 1;
	mov.b64 	%rd556, {%r382, %r381};
	xor.b64  	%rd557, %rd556, %rd555;
	shf.r.wrap.b32 	%r383, %r380, %r379, 8;
	shf.r.wrap.b32 	%r384, %r379, %r380, 8;
	mov.b64 	%rd558, {%r384, %r383};
	xor.b64  	%rd559, %rd557, %rd558;
	add.s64 	%rd560, %rd1108, %rd1115;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd1115, %rd561, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd1114;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd562, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd563, {%r390, %r389};
	shr.u64 	%rd564, %rd1114, 6;
	xor.b64  	%rd565, %rd562, %rd564;
	xor.b64  	%rd566, %rd565, %rd563;
	shr.u64 	%rd567, %rd1117, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd1117;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 1;
	shf.r.wrap.b32 	%r394, %r391, %r392, 1;
	mov.b64 	%rd568, {%r394, %r393};
	xor.b64  	%rd569, %rd568, %rd567;
	shf.r.wrap.b32 	%r395, %r392, %r391, 8;
	shf.r.wrap.b32 	%r396, %r391, %r392, 8;
	mov.b64 	%rd570, {%r396, %r395};
	xor.b64  	%rd571, %rd569, %rd570;
	add.s64 	%rd572, %rd1109, %rd1116;
	add.s64 	%rd573, %rd572, %rd566;
	add.s64 	%rd1116, %rd573, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1115;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd574, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd575, {%r402, %r401};
	shr.u64 	%rd576, %rd1115, 6;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	shr.u64 	%rd579, %rd1118, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd1118;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 1;
	shf.r.wrap.b32 	%r406, %r403, %r404, 1;
	mov.b64 	%rd580, {%r406, %r405};
	xor.b64  	%rd581, %rd580, %rd579;
	shf.r.wrap.b32 	%r407, %r404, %r403, 8;
	shf.r.wrap.b32 	%r408, %r403, %r404, 8;
	mov.b64 	%rd582, {%r408, %r407};
	xor.b64  	%rd583, %rd581, %rd582;
	add.s64 	%rd584, %rd1110, %rd1117;
	add.s64 	%rd585, %rd584, %rd578;
	add.s64 	%rd1117, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd1116;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd586, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd587, {%r414, %r413};
	shr.u64 	%rd588, %rd1116, 6;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	shr.u64 	%rd591, %rd1119, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd1119;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 1;
	shf.r.wrap.b32 	%r418, %r415, %r416, 1;
	mov.b64 	%rd592, {%r418, %r417};
	xor.b64  	%rd593, %rd592, %rd591;
	shf.r.wrap.b32 	%r419, %r416, %r415, 8;
	shf.r.wrap.b32 	%r420, %r415, %r416, 8;
	mov.b64 	%rd594, {%r420, %r419};
	xor.b64  	%rd595, %rd593, %rd594;
	add.s64 	%rd596, %rd1111, %rd1118;
	add.s64 	%rd597, %rd596, %rd590;
	add.s64 	%rd1118, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd1117;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 19;
	shf.r.wrap.b32 	%r424, %r421, %r422, 19;
	mov.b64 	%rd598, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 3;
	shf.l.wrap.b32 	%r426, %r422, %r421, 3;
	mov.b64 	%rd599, {%r426, %r425};
	shr.u64 	%rd600, %rd1117, 6;
	xor.b64  	%rd601, %rd598, %rd600;
	xor.b64  	%rd602, %rd601, %rd599;
	shr.u64 	%rd603, %rd1120, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd1120;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 1;
	shf.r.wrap.b32 	%r430, %r427, %r428, 1;
	mov.b64 	%rd604, {%r430, %r429};
	xor.b64  	%rd605, %rd604, %rd603;
	shf.r.wrap.b32 	%r431, %r428, %r427, 8;
	shf.r.wrap.b32 	%r432, %r427, %r428, 8;
	mov.b64 	%rd606, {%r432, %r431};
	xor.b64  	%rd607, %rd605, %rd606;
	add.s64 	%rd608, %rd1112, %rd1119;
	add.s64 	%rd609, %rd608, %rd602;
	add.s64 	%rd1119, %rd609, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd1118;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 19;
	shf.r.wrap.b32 	%r436, %r433, %r434, 19;
	mov.b64 	%rd610, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 3;
	shf.l.wrap.b32 	%r438, %r434, %r433, 3;
	mov.b64 	%rd611, {%r438, %r437};
	shr.u64 	%rd612, %rd1118, 6;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	shr.u64 	%rd615, %rd1121, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd1121;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 1;
	shf.r.wrap.b32 	%r442, %r439, %r440, 1;
	mov.b64 	%rd616, {%r442, %r441};
	xor.b64  	%rd617, %rd616, %rd615;
	shf.r.wrap.b32 	%r443, %r440, %r439, 8;
	shf.r.wrap.b32 	%r444, %r439, %r440, 8;
	mov.b64 	%rd618, {%r444, %r443};
	xor.b64  	%rd619, %rd617, %rd618;
	add.s64 	%rd620, %rd1113, %rd1120;
	add.s64 	%rd621, %rd620, %rd614;
	add.s64 	%rd1120, %rd621, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd1119;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 19;
	shf.r.wrap.b32 	%r448, %r445, %r446, 19;
	mov.b64 	%rd622, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 3;
	shf.l.wrap.b32 	%r450, %r446, %r445, 3;
	mov.b64 	%rd623, {%r450, %r449};
	shr.u64 	%rd624, %rd1119, 6;
	xor.b64  	%rd625, %rd622, %rd624;
	xor.b64  	%rd626, %rd625, %rd623;
	shr.u64 	%rd627, %rd1122, 7;
	shf.r.wrap.b32 	%r451, %r290, %r289, 1;
	shf.r.wrap.b32 	%r452, %r289, %r290, 1;
	mov.b64 	%rd628, {%r452, %r451};
	xor.b64  	%rd629, %rd628, %rd627;
	shf.r.wrap.b32 	%r453, %r290, %r289, 8;
	shf.r.wrap.b32 	%r454, %r289, %r290, 8;
	mov.b64 	%rd630, {%r454, %r453};
	xor.b64  	%rd631, %rd629, %rd630;
	add.s64 	%rd632, %rd1114, %rd1121;
	add.s64 	%rd633, %rd632, %rd626;
	add.s64 	%rd1121, %rd633, %rd631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd1120;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 19;
	shf.r.wrap.b32 	%r458, %r455, %r456, 19;
	mov.b64 	%rd634, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 3;
	shf.l.wrap.b32 	%r460, %r456, %r455, 3;
	mov.b64 	%rd635, {%r460, %r459};
	shr.u64 	%rd636, %rd1120, 6;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	shr.u64 	%rd639, %rd1123, 7;
	shf.r.wrap.b32 	%r461, %r302, %r301, 1;
	shf.r.wrap.b32 	%r462, %r301, %r302, 1;
	mov.b64 	%rd640, {%r462, %r461};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.r.wrap.b32 	%r463, %r302, %r301, 8;
	shf.r.wrap.b32 	%r464, %r301, %r302, 8;
	mov.b64 	%rd642, {%r464, %r463};
	xor.b64  	%rd643, %rd641, %rd642;
	add.s64 	%rd644, %rd1115, %rd1122;
	add.s64 	%rd645, %rd644, %rd638;
	add.s64 	%rd1122, %rd645, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd1121;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 19;
	shf.r.wrap.b32 	%r468, %r465, %r466, 19;
	mov.b64 	%rd646, {%r468, %r467};
	shf.l.wrap.b32 	%r469, %r465, %r466, 3;
	shf.l.wrap.b32 	%r470, %r466, %r465, 3;
	mov.b64 	%rd647, {%r470, %r469};
	shr.u64 	%rd648, %rd1121, 6;
	xor.b64  	%rd649, %rd646, %rd648;
	xor.b64  	%rd650, %rd649, %rd647;
	shf.r.wrap.b32 	%r471, %r314, %r313, 1;
	shf.r.wrap.b32 	%r472, %r313, %r314, 1;
	mov.b64 	%rd651, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r314, %r313, 8;
	shf.r.wrap.b32 	%r474, %r313, %r314, 8;
	mov.b64 	%rd652, {%r474, %r473};
	shr.u64 	%rd653, %rd1108, 7;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd1116, %rd1123;
	add.s64 	%rd657, %rd656, %rd650;
	add.s64 	%rd1123, %rd657, %rd655;
	add.s64 	%rd83, %rd1103, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd1107;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 18;
	shf.r.wrap.b32 	%r478, %r475, %r476, 18;
	mov.b64 	%rd658, {%r478, %r477};
	shf.r.wrap.b32 	%r479, %r476, %r475, 14;
	shf.r.wrap.b32 	%r480, %r475, %r476, 14;
	mov.b64 	%rd659, {%r480, %r479};
	xor.b64  	%rd660, %rd658, %rd659;
	shf.l.wrap.b32 	%r481, %r475, %r476, 23;
	shf.l.wrap.b32 	%r482, %r476, %r475, 23;
	mov.b64 	%rd661, {%r482, %r481};
	xor.b64  	%rd662, %rd660, %rd661;
	xor.b64  	%rd663, %rd1105, %rd1106;
	and.b64  	%rd664, %rd663, %rd1107;
	xor.b64  	%rd665, %rd664, %rd1105;
	add.s64 	%rd666, %rd665, %rd1104;
	add.s64 	%rd667, %rd666, %rd1108;
	ld.const.u64 	%rd668, [%rd1103+128];
	add.s64 	%rd669, %rd667, %rd668;
	add.s64 	%rd670, %rd669, %rd662;
	add.s64 	%rd671, %rd670, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd1124;
	}
	shf.l.wrap.b32 	%r485, %r484, %r483, 30;
	shf.l.wrap.b32 	%r486, %r483, %r484, 30;
	mov.b64 	%rd672, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r483, %r484, 28;
	shf.r.wrap.b32 	%r488, %r484, %r483, 28;
	mov.b64 	%rd673, {%r488, %r487};
	xor.b64  	%rd674, %rd672, %rd673;
	shf.l.wrap.b32 	%r489, %r484, %r483, 25;
	shf.l.wrap.b32 	%r490, %r483, %r484, 25;
	mov.b64 	%rd675, {%r490, %r489};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd1124, %rd1125;
	and.b64  	%rd678, %rd677, %rd1126;
	and.b64  	%rd679, %rd1124, %rd1125;
	or.b64  	%rd680, %rd678, %rd679;
	add.s64 	%rd681, %rd670, %rd680;
	add.s64 	%rd682, %rd681, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd671;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 14;
	shf.r.wrap.b32 	%r494, %r491, %r492, 14;
	mov.b64 	%rd683, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 18;
	shf.r.wrap.b32 	%r496, %r491, %r492, 18;
	mov.b64 	%rd684, {%r496, %r495};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.l.wrap.b32 	%r497, %r491, %r492, 23;
	shf.l.wrap.b32 	%r498, %r492, %r491, 23;
	mov.b64 	%rd686, {%r498, %r497};
	xor.b64  	%rd687, %rd685, %rd686;
	xor.b64  	%rd688, %rd1106, %rd1107;
	and.b64  	%rd689, %rd671, %rd688;
	xor.b64  	%rd690, %rd689, %rd1106;
	add.s64 	%rd691, %rd1109, %rd1105;
	ld.const.u64 	%rd692, [%rd1103+136];
	add.s64 	%rd693, %rd691, %rd692;
	add.s64 	%rd694, %rd693, %rd690;
	add.s64 	%rd695, %rd694, %rd687;
	add.s64 	%rd696, %rd695, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd682;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 28;
	shf.r.wrap.b32 	%r502, %r499, %r500, 28;
	mov.b64 	%rd697, {%r502, %r501};
	shf.l.wrap.b32 	%r503, %r499, %r500, 30;
	shf.l.wrap.b32 	%r504, %r500, %r499, 30;
	mov.b64 	%rd698, {%r504, %r503};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r505, %r499, %r500, 25;
	shf.l.wrap.b32 	%r506, %r500, %r499, 25;
	mov.b64 	%rd700, {%r506, %r505};
	xor.b64  	%rd701, %rd699, %rd700;
	and.b64  	%rd702, %rd682, %rd1124;
	xor.b64  	%rd703, %rd682, %rd1124;
	and.b64  	%rd704, %rd703, %rd1125;
	or.b64  	%rd705, %rd704, %rd702;
	add.s64 	%rd706, %rd695, %rd705;
	add.s64 	%rd707, %rd706, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd696;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 14;
	shf.r.wrap.b32 	%r510, %r507, %r508, 14;
	mov.b64 	%rd708, {%r510, %r509};
	shf.r.wrap.b32 	%r511, %r508, %r507, 18;
	shf.r.wrap.b32 	%r512, %r507, %r508, 18;
	mov.b64 	%rd709, {%r512, %r511};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.l.wrap.b32 	%r513, %r507, %r508, 23;
	shf.l.wrap.b32 	%r514, %r508, %r507, 23;
	mov.b64 	%rd711, {%r514, %r513};
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd671, %rd1107;
	and.b64  	%rd714, %rd696, %rd713;
	xor.b64  	%rd715, %rd714, %rd1107;
	add.s64 	%rd716, %rd1110, %rd1106;
	ld.const.u64 	%rd717, [%rd1103+144];
	add.s64 	%rd718, %rd716, %rd717;
	add.s64 	%rd719, %rd718, %rd715;
	add.s64 	%rd720, %rd719, %rd712;
	add.s64 	%rd721, %rd720, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd707;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 28;
	shf.r.wrap.b32 	%r518, %r515, %r516, 28;
	mov.b64 	%rd722, {%r518, %r517};
	shf.l.wrap.b32 	%r519, %r515, %r516, 30;
	shf.l.wrap.b32 	%r520, %r516, %r515, 30;
	mov.b64 	%rd723, {%r520, %r519};
	xor.b64  	%rd724, %rd723, %rd722;
	shf.l.wrap.b32 	%r521, %r515, %r516, 25;
	shf.l.wrap.b32 	%r522, %r516, %r515, 25;
	mov.b64 	%rd725, {%r522, %r521};
	xor.b64  	%rd726, %rd724, %rd725;
	and.b64  	%rd727, %rd707, %rd682;
	xor.b64  	%rd728, %rd707, %rd682;
	and.b64  	%rd729, %rd728, %rd1124;
	or.b64  	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd720, %rd730;
	add.s64 	%rd732, %rd731, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd721;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 14;
	shf.r.wrap.b32 	%r526, %r523, %r524, 14;
	mov.b64 	%rd733, {%r526, %r525};
	shf.r.wrap.b32 	%r527, %r524, %r523, 18;
	shf.r.wrap.b32 	%r528, %r523, %r524, 18;
	mov.b64 	%rd734, {%r528, %r527};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r529, %r523, %r524, 23;
	shf.l.wrap.b32 	%r530, %r524, %r523, 23;
	mov.b64 	%rd736, {%r530, %r529};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd696, %rd671;
	and.b64  	%rd739, %rd721, %rd738;
	xor.b64  	%rd740, %rd739, %rd671;
	add.s64 	%rd741, %rd1111, %rd1107;
	ld.const.u64 	%rd742, [%rd1103+152];
	add.s64 	%rd743, %rd741, %rd742;
	add.s64 	%rd744, %rd743, %rd740;
	add.s64 	%rd745, %rd744, %rd737;
	add.s64 	%rd746, %rd745, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd732;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 28;
	shf.r.wrap.b32 	%r534, %r531, %r532, 28;
	mov.b64 	%rd747, {%r534, %r533};
	shf.l.wrap.b32 	%r535, %r531, %r532, 30;
	shf.l.wrap.b32 	%r536, %r532, %r531, 30;
	mov.b64 	%rd748, {%r536, %r535};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r537, %r531, %r532, 25;
	shf.l.wrap.b32 	%r538, %r532, %r531, 25;
	mov.b64 	%rd750, {%r538, %r537};
	xor.b64  	%rd751, %rd749, %rd750;
	and.b64  	%rd752, %rd732, %rd707;
	xor.b64  	%rd753, %rd732, %rd707;
	and.b64  	%rd754, %rd753, %rd682;
	or.b64  	%rd755, %rd754, %rd752;
	add.s64 	%rd756, %rd745, %rd755;
	add.s64 	%rd757, %rd756, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd746;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 14;
	shf.r.wrap.b32 	%r542, %r539, %r540, 14;
	mov.b64 	%rd758, {%r542, %r541};
	shf.r.wrap.b32 	%r543, %r540, %r539, 18;
	shf.r.wrap.b32 	%r544, %r539, %r540, 18;
	mov.b64 	%rd759, {%r544, %r543};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.l.wrap.b32 	%r545, %r539, %r540, 23;
	shf.l.wrap.b32 	%r546, %r540, %r539, 23;
	mov.b64 	%rd761, {%r546, %r545};
	xor.b64  	%rd762, %rd760, %rd761;
	xor.b64  	%rd763, %rd721, %rd696;
	and.b64  	%rd764, %rd746, %rd763;
	xor.b64  	%rd765, %rd764, %rd696;
	add.s64 	%rd766, %rd671, %rd1112;
	ld.const.u64 	%rd767, [%rd1103+160];
	add.s64 	%rd768, %rd766, %rd767;
	add.s64 	%rd769, %rd768, %rd765;
	add.s64 	%rd770, %rd769, %rd762;
	add.s64 	%rd771, %rd770, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd757;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 28;
	shf.r.wrap.b32 	%r550, %r547, %r548, 28;
	mov.b64 	%rd772, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 30;
	shf.l.wrap.b32 	%r552, %r548, %r547, 30;
	mov.b64 	%rd773, {%r552, %r551};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r553, %r547, %r548, 25;
	shf.l.wrap.b32 	%r554, %r548, %r547, 25;
	mov.b64 	%rd775, {%r554, %r553};
	xor.b64  	%rd776, %rd774, %rd775;
	and.b64  	%rd777, %rd757, %rd732;
	xor.b64  	%rd778, %rd757, %rd732;
	and.b64  	%rd779, %rd778, %rd707;
	or.b64  	%rd780, %rd779, %rd777;
	add.s64 	%rd781, %rd770, %rd780;
	add.s64 	%rd782, %rd781, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd771;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 14;
	shf.r.wrap.b32 	%r558, %r555, %r556, 14;
	mov.b64 	%rd783, {%r558, %r557};
	shf.r.wrap.b32 	%r559, %r556, %r555, 18;
	shf.r.wrap.b32 	%r560, %r555, %r556, 18;
	mov.b64 	%rd784, {%r560, %r559};
	xor.b64  	%rd785, %rd784, %rd783;
	shf.l.wrap.b32 	%r561, %r555, %r556, 23;
	shf.l.wrap.b32 	%r562, %r556, %r555, 23;
	mov.b64 	%rd786, {%r562, %r561};
	xor.b64  	%rd787, %rd785, %rd786;
	xor.b64  	%rd788, %rd746, %rd721;
	and.b64  	%rd789, %rd771, %rd788;
	xor.b64  	%rd790, %rd789, %rd721;
	add.s64 	%rd791, %rd696, %rd1113;
	ld.const.u64 	%rd792, [%rd1103+168];
	add.s64 	%rd793, %rd791, %rd792;
	add.s64 	%rd794, %rd793, %rd790;
	add.s64 	%rd795, %rd794, %rd787;
	add.s64 	%rd796, %rd795, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd782;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 28;
	shf.r.wrap.b32 	%r566, %r563, %r564, 28;
	mov.b64 	%rd797, {%r566, %r565};
	shf.l.wrap.b32 	%r567, %r563, %r564, 30;
	shf.l.wrap.b32 	%r568, %r564, %r563, 30;
	mov.b64 	%rd798, {%r568, %r567};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r569, %r563, %r564, 25;
	shf.l.wrap.b32 	%r570, %r564, %r563, 25;
	mov.b64 	%rd800, {%r570, %r569};
	xor.b64  	%rd801, %rd799, %rd800;
	and.b64  	%rd802, %rd782, %rd757;
	xor.b64  	%rd803, %rd782, %rd757;
	and.b64  	%rd804, %rd803, %rd732;
	or.b64  	%rd805, %rd804, %rd802;
	add.s64 	%rd806, %rd795, %rd805;
	add.s64 	%rd807, %rd806, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd796;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 14;
	shf.r.wrap.b32 	%r574, %r571, %r572, 14;
	mov.b64 	%rd808, {%r574, %r573};
	shf.r.wrap.b32 	%r575, %r572, %r571, 18;
	shf.r.wrap.b32 	%r576, %r571, %r572, 18;
	mov.b64 	%rd809, {%r576, %r575};
	xor.b64  	%rd810, %rd809, %rd808;
	shf.l.wrap.b32 	%r577, %r571, %r572, 23;
	shf.l.wrap.b32 	%r578, %r572, %r571, 23;
	mov.b64 	%rd811, {%r578, %r577};
	xor.b64  	%rd812, %rd810, %rd811;
	xor.b64  	%rd813, %rd771, %rd746;
	and.b64  	%rd814, %rd796, %rd813;
	xor.b64  	%rd815, %rd814, %rd746;
	add.s64 	%rd816, %rd721, %rd1114;
	ld.const.u64 	%rd817, [%rd1103+176];
	add.s64 	%rd818, %rd816, %rd817;
	add.s64 	%rd819, %rd818, %rd815;
	add.s64 	%rd820, %rd819, %rd812;
	add.s64 	%rd821, %rd820, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd807;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 28;
	shf.r.wrap.b32 	%r582, %r579, %r580, 28;
	mov.b64 	%rd822, {%r582, %r581};
	shf.l.wrap.b32 	%r583, %r579, %r580, 30;
	shf.l.wrap.b32 	%r584, %r580, %r579, 30;
	mov.b64 	%rd823, {%r584, %r583};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r585, %r579, %r580, 25;
	shf.l.wrap.b32 	%r586, %r580, %r579, 25;
	mov.b64 	%rd825, {%r586, %r585};
	xor.b64  	%rd826, %rd824, %rd825;
	and.b64  	%rd827, %rd807, %rd782;
	xor.b64  	%rd828, %rd807, %rd782;
	and.b64  	%rd829, %rd828, %rd757;
	or.b64  	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd820, %rd830;
	add.s64 	%rd832, %rd831, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd821;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 14;
	shf.r.wrap.b32 	%r590, %r587, %r588, 14;
	mov.b64 	%rd833, {%r590, %r589};
	shf.r.wrap.b32 	%r591, %r588, %r587, 18;
	shf.r.wrap.b32 	%r592, %r587, %r588, 18;
	mov.b64 	%rd834, {%r592, %r591};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r593, %r587, %r588, 23;
	shf.l.wrap.b32 	%r594, %r588, %r587, 23;
	mov.b64 	%rd836, {%r594, %r593};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd796, %rd771;
	and.b64  	%rd839, %rd821, %rd838;
	xor.b64  	%rd840, %rd839, %rd771;
	add.s64 	%rd841, %rd746, %rd1115;
	ld.const.u64 	%rd842, [%rd1103+184];
	add.s64 	%rd843, %rd841, %rd842;
	add.s64 	%rd844, %rd843, %rd840;
	add.s64 	%rd845, %rd844, %rd837;
	add.s64 	%rd846, %rd845, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd832;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 28;
	shf.r.wrap.b32 	%r598, %r595, %r596, 28;
	mov.b64 	%rd847, {%r598, %r597};
	shf.l.wrap.b32 	%r599, %r595, %r596, 30;
	shf.l.wrap.b32 	%r600, %r596, %r595, 30;
	mov.b64 	%rd848, {%r600, %r599};
	xor.b64  	%rd849, %rd848, %rd847;
	shf.l.wrap.b32 	%r601, %r595, %r596, 25;
	shf.l.wrap.b32 	%r602, %r596, %r595, 25;
	mov.b64 	%rd850, {%r602, %r601};
	xor.b64  	%rd851, %rd849, %rd850;
	and.b64  	%rd852, %rd832, %rd807;
	xor.b64  	%rd853, %rd832, %rd807;
	and.b64  	%rd854, %rd853, %rd782;
	or.b64  	%rd855, %rd854, %rd852;
	add.s64 	%rd856, %rd845, %rd855;
	add.s64 	%rd857, %rd856, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd846;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 14;
	shf.r.wrap.b32 	%r606, %r603, %r604, 14;
	mov.b64 	%rd858, {%r606, %r605};
	shf.r.wrap.b32 	%r607, %r604, %r603, 18;
	shf.r.wrap.b32 	%r608, %r603, %r604, 18;
	mov.b64 	%rd859, {%r608, %r607};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r609, %r603, %r604, 23;
	shf.l.wrap.b32 	%r610, %r604, %r603, 23;
	mov.b64 	%rd861, {%r610, %r609};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd821, %rd796;
	and.b64  	%rd864, %rd846, %rd863;
	xor.b64  	%rd865, %rd864, %rd796;
	add.s64 	%rd866, %rd771, %rd1116;
	ld.const.u64 	%rd867, [%rd1103+192];
	add.s64 	%rd868, %rd866, %rd867;
	add.s64 	%rd869, %rd868, %rd865;
	add.s64 	%rd870, %rd869, %rd862;
	add.s64 	%rd871, %rd870, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd857;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 28;
	shf.r.wrap.b32 	%r614, %r611, %r612, 28;
	mov.b64 	%rd872, {%r614, %r613};
	shf.l.wrap.b32 	%r615, %r611, %r612, 30;
	shf.l.wrap.b32 	%r616, %r612, %r611, 30;
	mov.b64 	%rd873, {%r616, %r615};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r617, %r611, %r612, 25;
	shf.l.wrap.b32 	%r618, %r612, %r611, 25;
	mov.b64 	%rd875, {%r618, %r617};
	xor.b64  	%rd876, %rd874, %rd875;
	and.b64  	%rd877, %rd857, %rd832;
	xor.b64  	%rd878, %rd857, %rd832;
	and.b64  	%rd879, %rd878, %rd807;
	or.b64  	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd870, %rd880;
	add.s64 	%rd882, %rd881, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd871;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 14;
	shf.r.wrap.b32 	%r622, %r619, %r620, 14;
	mov.b64 	%rd883, {%r622, %r621};
	shf.r.wrap.b32 	%r623, %r620, %r619, 18;
	shf.r.wrap.b32 	%r624, %r619, %r620, 18;
	mov.b64 	%rd884, {%r624, %r623};
	xor.b64  	%rd885, %rd884, %rd883;
	shf.l.wrap.b32 	%r625, %r619, %r620, 23;
	shf.l.wrap.b32 	%r626, %r620, %r619, 23;
	mov.b64 	%rd886, {%r626, %r625};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd846, %rd821;
	and.b64  	%rd889, %rd871, %rd888;
	xor.b64  	%rd890, %rd889, %rd821;
	add.s64 	%rd891, %rd796, %rd1117;
	ld.const.u64 	%rd892, [%rd1103+200];
	add.s64 	%rd893, %rd891, %rd892;
	add.s64 	%rd894, %rd893, %rd890;
	add.s64 	%rd895, %rd894, %rd887;
	add.s64 	%rd896, %rd895, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd882;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 28;
	shf.r.wrap.b32 	%r630, %r627, %r628, 28;
	mov.b64 	%rd897, {%r630, %r629};
	shf.l.wrap.b32 	%r631, %r627, %r628, 30;
	shf.l.wrap.b32 	%r632, %r628, %r627, 30;
	mov.b64 	%rd898, {%r632, %r631};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r633, %r627, %r628, 25;
	shf.l.wrap.b32 	%r634, %r628, %r627, 25;
	mov.b64 	%rd900, {%r634, %r633};
	xor.b64  	%rd901, %rd899, %rd900;
	and.b64  	%rd902, %rd882, %rd857;
	xor.b64  	%rd903, %rd882, %rd857;
	and.b64  	%rd904, %rd903, %rd832;
	or.b64  	%rd905, %rd904, %rd902;
	add.s64 	%rd906, %rd895, %rd905;
	add.s64 	%rd907, %rd906, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd896;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 14;
	shf.r.wrap.b32 	%r638, %r635, %r636, 14;
	mov.b64 	%rd908, {%r638, %r637};
	shf.r.wrap.b32 	%r639, %r636, %r635, 18;
	shf.r.wrap.b32 	%r640, %r635, %r636, 18;
	mov.b64 	%rd909, {%r640, %r639};
	xor.b64  	%rd910, %rd909, %rd908;
	shf.l.wrap.b32 	%r641, %r635, %r636, 23;
	shf.l.wrap.b32 	%r642, %r636, %r635, 23;
	mov.b64 	%rd911, {%r642, %r641};
	xor.b64  	%rd912, %rd910, %rd911;
	xor.b64  	%rd913, %rd871, %rd846;
	and.b64  	%rd914, %rd896, %rd913;
	xor.b64  	%rd915, %rd914, %rd846;
	add.s64 	%rd916, %rd821, %rd1118;
	ld.const.u64 	%rd917, [%rd1103+208];
	add.s64 	%rd918, %rd916, %rd917;
	add.s64 	%rd919, %rd918, %rd915;
	add.s64 	%rd920, %rd919, %rd912;
	add.s64 	%rd921, %rd920, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd907;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 28;
	shf.r.wrap.b32 	%r646, %r643, %r644, 28;
	mov.b64 	%rd922, {%r646, %r645};
	shf.l.wrap.b32 	%r647, %r643, %r644, 30;
	shf.l.wrap.b32 	%r648, %r644, %r643, 30;
	mov.b64 	%rd923, {%r648, %r647};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r649, %r643, %r644, 25;
	shf.l.wrap.b32 	%r650, %r644, %r643, 25;
	mov.b64 	%rd925, {%r650, %r649};
	xor.b64  	%rd926, %rd924, %rd925;
	and.b64  	%rd927, %rd907, %rd882;
	xor.b64  	%rd928, %rd907, %rd882;
	and.b64  	%rd929, %rd928, %rd857;
	or.b64  	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd920, %rd930;
	add.s64 	%rd932, %rd931, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd921;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 14;
	shf.r.wrap.b32 	%r654, %r651, %r652, 14;
	mov.b64 	%rd933, {%r654, %r653};
	shf.r.wrap.b32 	%r655, %r652, %r651, 18;
	shf.r.wrap.b32 	%r656, %r651, %r652, 18;
	mov.b64 	%rd934, {%r656, %r655};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r657, %r651, %r652, 23;
	shf.l.wrap.b32 	%r658, %r652, %r651, 23;
	mov.b64 	%rd936, {%r658, %r657};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd896, %rd871;
	and.b64  	%rd939, %rd921, %rd938;
	xor.b64  	%rd940, %rd939, %rd871;
	add.s64 	%rd941, %rd846, %rd1119;
	ld.const.u64 	%rd942, [%rd1103+216];
	add.s64 	%rd943, %rd941, %rd942;
	add.s64 	%rd944, %rd943, %rd940;
	add.s64 	%rd945, %rd944, %rd937;
	add.s64 	%rd946, %rd945, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd932;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 28;
	shf.r.wrap.b32 	%r662, %r659, %r660, 28;
	mov.b64 	%rd947, {%r662, %r661};
	shf.l.wrap.b32 	%r663, %r659, %r660, 30;
	shf.l.wrap.b32 	%r664, %r660, %r659, 30;
	mov.b64 	%rd948, {%r664, %r663};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r665, %r659, %r660, 25;
	shf.l.wrap.b32 	%r666, %r660, %r659, 25;
	mov.b64 	%rd950, {%r666, %r665};
	xor.b64  	%rd951, %rd949, %rd950;
	and.b64  	%rd952, %rd932, %rd907;
	xor.b64  	%rd953, %rd932, %rd907;
	and.b64  	%rd954, %rd953, %rd882;
	or.b64  	%rd955, %rd954, %rd952;
	add.s64 	%rd956, %rd945, %rd955;
	add.s64 	%rd957, %rd956, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd946;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 14;
	shf.r.wrap.b32 	%r670, %r667, %r668, 14;
	mov.b64 	%rd958, {%r670, %r669};
	shf.r.wrap.b32 	%r671, %r668, %r667, 18;
	shf.r.wrap.b32 	%r672, %r667, %r668, 18;
	mov.b64 	%rd959, {%r672, %r671};
	xor.b64  	%rd960, %rd959, %rd958;
	shf.l.wrap.b32 	%r673, %r667, %r668, 23;
	shf.l.wrap.b32 	%r674, %r668, %r667, 23;
	mov.b64 	%rd961, {%r674, %r673};
	xor.b64  	%rd962, %rd960, %rd961;
	xor.b64  	%rd963, %rd921, %rd896;
	and.b64  	%rd964, %rd946, %rd963;
	xor.b64  	%rd965, %rd964, %rd896;
	add.s64 	%rd966, %rd871, %rd1120;
	ld.const.u64 	%rd967, [%rd1103+224];
	add.s64 	%rd968, %rd966, %rd967;
	add.s64 	%rd969, %rd968, %rd965;
	add.s64 	%rd970, %rd969, %rd962;
	add.s64 	%rd1104, %rd970, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd957;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 28;
	shf.r.wrap.b32 	%r678, %r675, %r676, 28;
	mov.b64 	%rd971, {%r678, %r677};
	shf.l.wrap.b32 	%r679, %r675, %r676, 30;
	shf.l.wrap.b32 	%r680, %r676, %r675, 30;
	mov.b64 	%rd972, {%r680, %r679};
	xor.b64  	%rd973, %rd972, %rd971;
	shf.l.wrap.b32 	%r681, %r675, %r676, 25;
	shf.l.wrap.b32 	%r682, %r676, %r675, 25;
	mov.b64 	%rd974, {%r682, %r681};
	xor.b64  	%rd975, %rd973, %rd974;
	and.b64  	%rd976, %rd957, %rd932;
	xor.b64  	%rd977, %rd957, %rd932;
	and.b64  	%rd978, %rd977, %rd907;
	or.b64  	%rd979, %rd978, %rd976;
	add.s64 	%rd980, %rd970, %rd979;
	add.s64 	%rd1127, %rd980, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd1104;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 14;
	shf.r.wrap.b32 	%r686, %r683, %r684, 14;
	mov.b64 	%rd981, {%r686, %r685};
	shf.r.wrap.b32 	%r687, %r684, %r683, 18;
	shf.r.wrap.b32 	%r688, %r683, %r684, 18;
	mov.b64 	%rd982, {%r688, %r687};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r689, %r683, %r684, 23;
	shf.l.wrap.b32 	%r690, %r684, %r683, 23;
	mov.b64 	%rd984, {%r690, %r689};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd946, %rd921;
	and.b64  	%rd987, %rd1104, %rd986;
	xor.b64  	%rd988, %rd987, %rd921;
	add.s64 	%rd989, %rd896, %rd1121;
	ld.const.u64 	%rd990, [%rd1103+232];
	add.s64 	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd991, %rd988;
	add.s64 	%rd993, %rd992, %rd985;
	add.s64 	%rd1105, %rd993, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r691,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd1127;
	}
	shf.r.wrap.b32 	%r693, %r692, %r691, 28;
	shf.r.wrap.b32 	%r694, %r691, %r692, 28;
	mov.b64 	%rd994, {%r694, %r693};
	shf.l.wrap.b32 	%r695, %r691, %r692, 30;
	shf.l.wrap.b32 	%r696, %r692, %r691, 30;
	mov.b64 	%rd995, {%r696, %r695};
	xor.b64  	%rd996, %rd995, %rd994;
	shf.l.wrap.b32 	%r697, %r691, %r692, 25;
	shf.l.wrap.b32 	%r698, %r692, %r691, 25;
	mov.b64 	%rd997, {%r698, %r697};
	xor.b64  	%rd998, %rd996, %rd997;
	and.b64  	%rd999, %rd1127, %rd957;
	xor.b64  	%rd1000, %rd1127, %rd957;
	and.b64  	%rd1001, %rd1000, %rd932;
	or.b64  	%rd1002, %rd1001, %rd999;
	add.s64 	%rd1003, %rd993, %rd1002;
	add.s64 	%rd1126, %rd1003, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1105;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 14;
	shf.r.wrap.b32 	%r702, %r699, %r700, 14;
	mov.b64 	%rd1004, {%r702, %r701};
	shf.r.wrap.b32 	%r703, %r700, %r699, 18;
	shf.r.wrap.b32 	%r704, %r699, %r700, 18;
	mov.b64 	%rd1005, {%r704, %r703};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	shf.l.wrap.b32 	%r705, %r699, %r700, 23;
	shf.l.wrap.b32 	%r706, %r700, %r699, 23;
	mov.b64 	%rd1007, {%r706, %r705};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd1104, %rd946;
	and.b64  	%rd1010, %rd1105, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd946;
	add.s64 	%rd1012, %rd921, %rd1122;
	ld.const.u64 	%rd1013, [%rd1103+240];
	add.s64 	%rd1014, %rd1012, %rd1013;
	add.s64 	%rd1015, %rd1014, %rd1011;
	add.s64 	%rd1016, %rd1015, %rd1008;
	add.s64 	%rd1106, %rd1016, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd1126;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 28;
	shf.r.wrap.b32 	%r710, %r707, %r708, 28;
	mov.b64 	%rd1017, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 30;
	shf.l.wrap.b32 	%r712, %r708, %r707, 30;
	mov.b64 	%rd1018, {%r712, %r711};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r713, %r707, %r708, 25;
	shf.l.wrap.b32 	%r714, %r708, %r707, 25;
	mov.b64 	%rd1020, {%r714, %r713};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	and.b64  	%rd1022, %rd1126, %rd1127;
	xor.b64  	%rd1023, %rd1126, %rd1127;
	and.b64  	%rd1024, %rd1023, %rd957;
	or.b64  	%rd1025, %rd1024, %rd1022;
	add.s64 	%rd1026, %rd1016, %rd1025;
	add.s64 	%rd1125, %rd1026, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd1106;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 14;
	shf.r.wrap.b32 	%r718, %r715, %r716, 14;
	mov.b64 	%rd1027, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r716, %r715, 18;
	shf.r.wrap.b32 	%r720, %r715, %r716, 18;
	mov.b64 	%rd1028, {%r720, %r719};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r721, %r715, %r716, 23;
	shf.l.wrap.b32 	%r722, %r716, %r715, 23;
	mov.b64 	%rd1030, {%r722, %r721};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd1105, %rd1104;
	and.b64  	%rd1033, %rd1106, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1104;
	add.s64 	%rd1035, %rd946, %rd1123;
	ld.const.u64 	%rd1036, [%rd1103+248];
	add.s64 	%rd1037, %rd1035, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1034;
	add.s64 	%rd1039, %rd1038, %rd1031;
	add.s64 	%rd1107, %rd1039, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1125;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 28;
	shf.r.wrap.b32 	%r726, %r723, %r724, 28;
	mov.b64 	%rd1040, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 30;
	shf.l.wrap.b32 	%r728, %r724, %r723, 30;
	mov.b64 	%rd1041, {%r728, %r727};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	shf.l.wrap.b32 	%r729, %r723, %r724, 25;
	shf.l.wrap.b32 	%r730, %r724, %r723, 25;
	mov.b64 	%rd1043, {%r730, %r729};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	and.b64  	%rd1045, %rd1125, %rd1126;
	xor.b64  	%rd1046, %rd1125, %rd1126;
	and.b64  	%rd1047, %rd1046, %rd1127;
	or.b64  	%rd1048, %rd1047, %rd1045;
	add.s64 	%rd1049, %rd1039, %rd1048;
	add.s64 	%rd1124, %rd1049, %rd1044;
	add.s32 	%r801, %r801, 16;
	setp.lt.s32	%p3, %r801, 80;
	mov.u64 	%rd1103, %rd83;
	@%p3 bra 	BB0_4;

	ld.param.u64 	%rd1073, [m01700_m04_param_6];
	mov.b64	{%r7, %r8}, %rd1104;
	mov.u32 	%r731, 1;
	mov.b64	{%r9, %r10}, %rd1127;
	add.s64 	%rd84, %rd2, -56;
	ld.global.u32 	%r732, [%rd2+-52];
	and.b32  	%r11, %r732, 31;
	shr.u32 	%r733, %r7, %r11;
	ld.global.u32 	%r12, [%rd2+-56];
	and.b32  	%r734, %r733, %r12;
	mul.wide.u32 	%rd1050, %r734, 4;
	add.s64 	%rd1051, %rd1073, %rd1050;
	and.b32  	%r735, %r7, 31;
	shl.b32 	%r13, %r731, %r735;
	ld.global.u32 	%r736, [%rd1051];
	and.b32  	%r737, %r736, %r13;
	setp.eq.s32	%p4, %r737, 0;
	@%p4 bra 	BB0_32;

	ld.param.u64 	%rd1074, [m01700_m04_param_7];
	shr.u32 	%r738, %r8, %r11;
	and.b32  	%r739, %r738, %r12;
	mul.wide.u32 	%rd1052, %r739, 4;
	add.s64 	%rd1053, %rd1074, %rd1052;
	and.b32  	%r740, %r8, 31;
	shl.b32 	%r14, %r731, %r740;
	ld.global.u32 	%r742, [%rd1053];
	and.b32  	%r743, %r742, %r14;
	setp.eq.s32	%p5, %r743, 0;
	@%p5 bra 	BB0_32;

	ld.param.u64 	%rd1075, [m01700_m04_param_8];
	shr.u32 	%r744, %r9, %r11;
	and.b32  	%r745, %r744, %r12;
	mul.wide.u32 	%rd1054, %r745, 4;
	add.s64 	%rd1055, %rd1075, %rd1054;
	and.b32  	%r746, %r9, 31;
	shl.b32 	%r15, %r731, %r746;
	ld.global.u32 	%r748, [%rd1055];
	and.b32  	%r749, %r748, %r15;
	setp.eq.s32	%p6, %r749, 0;
	@%p6 bra 	BB0_32;

	ld.param.u64 	%rd1089, [m01700_m04_param_9];
	shr.u32 	%r750, %r10, %r11;
	and.b32  	%r751, %r750, %r12;
	mul.wide.u32 	%rd1056, %r751, 4;
	add.s64 	%rd1057, %rd1089, %rd1056;
	and.b32  	%r752, %r10, 31;
	shl.b32 	%r16, %r731, %r752;
	ld.global.u32 	%r754, [%rd1057];
	and.b32  	%r755, %r754, %r16;
	setp.eq.s32	%p7, %r755, 0;
	@%p7 bra 	BB0_32;

	ld.param.u64 	%rd1090, [m01700_m04_param_10];
	ld.global.u32 	%r756, [%rd84+8];
	and.b32  	%r17, %r756, 31;
	shr.u32 	%r757, %r7, %r17;
	and.b32  	%r758, %r757, %r12;
	mul.wide.u32 	%rd1058, %r758, 4;
	add.s64 	%rd1059, %rd1090, %rd1058;
	ld.global.u32 	%r759, [%rd1059];
	and.b32  	%r760, %r759, %r13;
	setp.eq.s32	%p8, %r760, 0;
	@%p8 bra 	BB0_32;

	ld.param.u64 	%rd1091, [m01700_m04_param_11];
	shr.u32 	%r761, %r8, %r17;
	and.b32  	%r762, %r761, %r12;
	mul.wide.u32 	%rd1060, %r762, 4;
	add.s64 	%rd1061, %rd1091, %rd1060;
	ld.global.u32 	%r763, [%rd1061];
	and.b32  	%r764, %r763, %r14;
	setp.eq.s32	%p9, %r764, 0;
	@%p9 bra 	BB0_32;

	ld.param.u64 	%rd1092, [m01700_m04_param_12];
	shr.u32 	%r765, %r9, %r17;
	and.b32  	%r766, %r765, %r12;
	mul.wide.u32 	%rd1062, %r766, 4;
	add.s64 	%rd1063, %rd1092, %rd1062;
	ld.global.u32 	%r767, [%rd1063];
	and.b32  	%r768, %r767, %r15;
	setp.eq.s32	%p10, %r768, 0;
	@%p10 bra 	BB0_32;

	ld.param.u64 	%rd1093, [m01700_m04_param_13];
	shr.u32 	%r769, %r10, %r17;
	and.b32  	%r770, %r769, %r12;
	mul.wide.u32 	%rd1064, %r770, 4;
	add.s64 	%rd1065, %rd1093, %rd1064;
	ld.global.u32 	%r771, [%rd1065];
	and.b32  	%r772, %r771, %r16;
	setp.eq.s32	%p11, %r772, 0;
	@%p11 bra 	BB0_32;

	ld.global.u32 	%rd85, [%rd2+-24];
	ld.global.u32 	%r802, [%rd2+-28];
	setp.eq.s32	%p12, %r802, 0;
	mov.u32 	%r803, 0;
	mov.u32 	%r773, -1;
	@%p12 bra 	BB0_26;

BB0_14:
	ld.param.u64 	%rd1094, [m01700_m04_param_15];
	shr.u32 	%r21, %r802, 1;
	add.s32 	%r805, %r21, %r803;
	cvt.u64.u32	%rd1066, %r805;
	add.s64 	%rd1067, %rd1066, %rd85;
	shl.b64 	%rd1068, %rd1067, 6;
	add.s64 	%rd86, %rd1094, %rd1068;
	ld.global.u32 	%r23, [%rd86+28];
	setp.gt.u32	%p13, %r10, %r23;
	mov.u32 	%r804, %r731;
	@%p13 bra 	BB0_24;

	setp.lt.u32	%p14, %r10, %r23;
	mov.u32 	%r776, -1;
	@%p14 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r804, %r776;
	bra.uni 	BB0_24;

BB0_17:
	ld.global.u32 	%r24, [%rd86+24];
	setp.gt.u32	%p15, %r9, %r24;
	mov.u32 	%r804, %r731;
	@%p15 bra 	BB0_24;

	setp.lt.u32	%p16, %r9, %r24;
	@%p16 bra 	BB0_19;
	bra.uni 	BB0_20;

BB0_19:
	mov.u32 	%r804, %r776;
	bra.uni 	BB0_24;

BB0_20:
	ld.global.u32 	%r25, [%rd86+60];
	setp.gt.u32	%p17, %r8, %r25;
	mov.u32 	%r804, %r731;
	@%p17 bra 	BB0_24;

	setp.lt.u32	%p18, %r8, %r25;
	mov.u32 	%r804, %r776;
	@%p18 bra 	BB0_24;

	ld.global.u32 	%r26, [%rd86+56];
	setp.gt.u32	%p19, %r7, %r26;
	mov.u32 	%r804, %r731;
	@%p19 bra 	BB0_24;

	setp.lt.u32	%p20, %r7, %r26;
	selp.b32	%r804, -1, 0, %p20;

BB0_24:
	add.s32 	%r782, %r21, 1;
	setp.gt.s32	%p21, %r804, 0;
	selp.b32	%r783, %r782, 0, %p21;
	add.s32 	%r803, %r783, %r803;
	selp.b32	%r784, -1, 0, %p21;
	add.s32 	%r785, %r784, %r802;
	shr.u32 	%r802, %r785, 1;
	setp.eq.s32	%p22, %r804, 0;
	@%p22 bra 	BB0_27;

	setp.ne.s32	%p23, %r802, 0;
	@%p23 bra 	BB0_14;

BB0_26:
	mov.u32 	%r805, %r773;

BB0_27:
	setp.eq.s32	%p24, %r805, -1;
	@%p24 bra 	BB0_32;

	add.u64 	%rd1096, %SPL, 8;
	ld.param.u64 	%rd1095, [m01700_m04_param_16];
	cvt.u32.u64	%r787, %rd85;
	add.s32 	%r32, %r787, %r805;
	mul.wide.u32 	%rd1069, %r32, 4;
	add.s64 	%rd1070, %rd1095, %rd1069;
	mov.u32 	%r788, 1;
	st.local.u32 	[%rd1096], %r788;
	ld.local.u32 	%r789, [%rd1096];
	atom.global.add.u32 	%r790, [%rd1070], %r789;
	setp.ne.s32	%p25, %r790, 0;
	@%p25 bra 	BB0_32;

	add.u64 	%rd1098, %SPL, 4;
	ld.global.u32 	%r33, [%rd2+-44];
	ld.global.u32 	%r791, [%rd2+-28];
	st.local.u32 	[%rd1098], %r788;
	ld.local.u32 	%r793, [%rd1098];
	atom.global.add.u32 	%r34, [%rd100], %r793;
	setp.lt.u32	%p26, %r34, %r791;
	@%p26 bra 	BB0_31;
	bra.uni 	BB0_30;

BB0_31:
	ld.param.u64 	%rd1102, [m01700_m04_param_14];
	mul.wide.u32 	%rd1071, %r34, 32;
	add.s64 	%rd1072, %rd1102, %rd1071;
	st.global.u32 	[%rd1072+12], %r33;
	st.global.u32 	[%rd1072+16], %r805;
	st.global.u32 	[%rd1072+20], %r32;
	st.global.u64 	[%rd1072], %rd1;
	st.global.u32 	[%rd1072+8], %r800;
	mov.u32 	%r798, 0;
	st.global.u32 	[%rd1072+24], %r798;
	st.global.u32 	[%rd1072+28], %r798;
	bra.uni 	BB0_32;

BB0_30:
	add.u64 	%rd1100, %SPL, 0;
	st.local.u32 	[%rd1100], %r788;
	ld.local.u32 	%r795, [%rd1100];
	neg.s32 	%r796, %r795;
	atom.global.add.u32 	%r797, [%rd100], %r796;

BB0_32:
	add.s32 	%r800, %r800, 1;
	ld.global.u32 	%r799, [%rd2+-32];
	setp.lt.u32	%p27, %r800, %r799;
	@%p27 bra 	BB0_3;

BB0_33:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .global .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .const .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 8 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 1 m01700_m08_param_20,
	.param .u64 .ptr .global .align 1 m01700_m08_param_21,
	.param .u64 .ptr .global .align 1 m01700_m08_param_22,
	.param .u64 .ptr .global .align 1 m01700_m08_param_23,
	.param .u64 .ptr .global .align 8 m01700_m08_param_24
)
{
	.local .align 4 .b8 	__local_depot1[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .b32 	%r<810>;
	.reg .b64 	%rd<1128>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd88, [m01700_m08_param_0];
	ld.param.u64 	%rd101, [m01700_m08_param_19];
	ld.param.u64 	%rd102, [m01700_m08_param_24];
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r37, %ntid.x;
	mov.b32	%r38, %envreg3;
	mad.lo.s32 	%r39, %r36, %r37, %r38;
	mov.u32 	%r40, %tid.x;
	add.s32 	%r1, %r39, %r40;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd102, 56;
	ld.global.u64 	%rd103, [%rd102+56];
	setp.ge.u64	%p1, %rd1, %rd103;
	@%p1 bra 	BB1_33;

	ld.global.u32 	%r41, [%rd2+-32];
	setp.eq.s32	%p2, %r41, 0;
	@%p2 bra 	BB1_33;

	mul.wide.s32 	%rd106, %r1, 260;
	add.s64 	%rd107, %rd88, %rd106;
	ld.global.u32 	%r2, [%rd107];
	ld.global.u32 	%r3, [%rd107+4];
	ld.global.u32 	%r43, [%rd107+8];
	ld.global.u32 	%r44, [%rd107+12];
	mov.b64	%rd5, {%r44, %r43};
	ld.global.u32 	%r45, [%rd107+16];
	ld.global.u32 	%r46, [%rd107+20];
	mov.b64	%rd6, {%r46, %r45};
	ld.global.u32 	%r47, [%rd107+24];
	ld.global.u32 	%r48, [%rd107+28];
	mov.b64	%rd7, {%r48, %r47};
	ld.global.u32 	%r49, [%rd107+60];
	mov.u32 	%r804, 0;
	mov.b64	%rd8, {%r49, %r804};
	ld.const.u64 	%rd108, [k_sha512];
	add.s64 	%rd9, %rd108, 6620516959819538809;
	ld.const.u64 	%rd109, [k_sha512+8];
	add.s64 	%rd110, %rd5, %rd109;
	add.s64 	%rd10, %rd110, 2270897969802886507;
	ld.const.u64 	%rd111, [k_sha512+16];
	add.s64 	%rd112, %rd6, %rd111;
	add.s64 	%rd11, %rd112, -7276294671716946913;
	ld.const.u64 	%rd113, [k_sha512+24];
	add.s64 	%rd114, %rd7, %rd113;
	add.s64 	%rd12, %rd114, 5840696475078001361;

BB1_3:
	ld.const.u64 	%rd1089, [k_sha512+120];
	ld.const.u64 	%rd1088, [k_sha512+112];
	ld.const.u64 	%rd1087, [k_sha512+104];
	ld.const.u64 	%rd1086, [k_sha512+96];
	ld.const.u64 	%rd1085, [k_sha512+88];
	ld.const.u64 	%rd1084, [k_sha512+80];
	ld.const.u64 	%rd1083, [k_sha512+72];
	ld.const.u64 	%rd1082, [k_sha512+64];
	ld.const.u64 	%rd1081, [k_sha512+56];
	ld.const.u64 	%rd1080, [k_sha512+48];
	ld.const.u64 	%rd1079, [k_sha512+40];
	ld.const.u64 	%rd1078, [k_sha512+32];
	ld.param.u64 	%rd1077, [m01700_m08_param_3];
	mul.wide.u32 	%rd127, %r804, 4;
	add.s64 	%rd128, %rd1077, %rd127;
	ld.const.u32 	%r51, [%rd128];
	or.b32  	%r52, %r51, %r2;
	mov.b64	%rd1108, {%r3, %r52};
	add.s64 	%rd129, %rd9, %rd1108;
	add.s64 	%rd130, %rd129, 6412459576335945718;
	add.s64 	%rd131, %rd129, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd130;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 14;
	shf.r.wrap.b32 	%r56, %r53, %r54, 14;
	mov.b64 	%rd132, {%r56, %r55};
	shf.r.wrap.b32 	%r57, %r54, %r53, 18;
	shf.r.wrap.b32 	%r58, %r53, %r54, 18;
	mov.b64 	%rd133, {%r58, %r57};
	xor.b64  	%rd134, %rd133, %rd132;
	shf.l.wrap.b32 	%r59, %r53, %r54, 23;
	shf.l.wrap.b32 	%r60, %r54, %r53, 23;
	mov.b64 	%rd135, {%r60, %r59};
	xor.b64  	%rd136, %rd134, %rd135;
	and.b64  	%rd137, %rd130, -3887949035690463538;
	xor.b64  	%rd138, %rd137, -7276294671716946913;
	add.s64 	%rd139, %rd10, %rd136;
	add.s64 	%rd140, %rd139, %rd138;
	add.s64 	%rd141, %rd140, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd131;
	}
	shf.r.wrap.b32 	%r63, %r62, %r61, 28;
	shf.r.wrap.b32 	%r64, %r61, %r62, 28;
	mov.b64 	%rd142, {%r64, %r63};
	shf.l.wrap.b32 	%r65, %r61, %r62, 30;
	shf.l.wrap.b32 	%r66, %r62, %r61, 30;
	mov.b64 	%rd143, {%r66, %r65};
	xor.b64  	%rd144, %rd143, %rd142;
	shf.l.wrap.b32 	%r67, %r61, %r62, 25;
	shf.l.wrap.b32 	%r68, %r62, %r61, 25;
	mov.b64 	%rd145, {%r68, %r67};
	xor.b64  	%rd146, %rd144, %rd145;
	add.s64 	%rd147, %rd140, %rd146;
	and.b64  	%rd148, %rd131, 7640891576956012808;
	and.b64  	%rd149, %rd131, -4942790177534073029;
	xor.b64  	%rd150, %rd149, 3026882967131160840;
	or.b64  	%rd151, %rd150, %rd148;
	add.s64 	%rd152, %rd147, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd141;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 14;
	shf.r.wrap.b32 	%r72, %r69, %r70, 14;
	mov.b64 	%rd153, {%r72, %r71};
	shf.r.wrap.b32 	%r73, %r70, %r69, 18;
	shf.r.wrap.b32 	%r74, %r69, %r70, 18;
	mov.b64 	%rd154, {%r74, %r73};
	xor.b64  	%rd155, %rd154, %rd153;
	shf.l.wrap.b32 	%r75, %r69, %r70, 23;
	shf.l.wrap.b32 	%r76, %r70, %r69, 23;
	mov.b64 	%rd156, {%r76, %r75};
	xor.b64  	%rd157, %rd155, %rd156;
	xor.b64  	%rd158, %rd130, 5840696475078001361;
	and.b64  	%rd159, %rd141, %rd158;
	xor.b64  	%rd160, %rd159, 5840696475078001361;
	add.s64 	%rd161, %rd11, %rd160;
	add.s64 	%rd162, %rd161, %rd157;
	add.s64 	%rd163, %rd162, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd152;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 28;
	shf.r.wrap.b32 	%r80, %r77, %r78, 28;
	mov.b64 	%rd164, {%r80, %r79};
	shf.l.wrap.b32 	%r81, %r77, %r78, 30;
	shf.l.wrap.b32 	%r82, %r78, %r77, 30;
	mov.b64 	%rd165, {%r82, %r81};
	xor.b64  	%rd166, %rd165, %rd164;
	shf.l.wrap.b32 	%r83, %r77, %r78, 25;
	shf.l.wrap.b32 	%r84, %r78, %r77, 25;
	mov.b64 	%rd167, {%r84, %r83};
	xor.b64  	%rd168, %rd166, %rd167;
	and.b64  	%rd169, %rd152, %rd131;
	xor.b64  	%rd170, %rd152, %rd131;
	and.b64  	%rd171, %rd170, 7640891576956012808;
	or.b64  	%rd172, %rd171, %rd169;
	add.s64 	%rd173, %rd172, %rd162;
	add.s64 	%rd174, %rd173, %rd168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd163;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 14;
	shf.r.wrap.b32 	%r88, %r85, %r86, 14;
	mov.b64 	%rd175, {%r88, %r87};
	shf.r.wrap.b32 	%r89, %r86, %r85, 18;
	shf.r.wrap.b32 	%r90, %r85, %r86, 18;
	mov.b64 	%rd176, {%r90, %r89};
	xor.b64  	%rd177, %rd176, %rd175;
	shf.l.wrap.b32 	%r91, %r85, %r86, 23;
	shf.l.wrap.b32 	%r92, %r86, %r85, 23;
	mov.b64 	%rd178, {%r92, %r91};
	xor.b64  	%rd179, %rd177, %rd178;
	xor.b64  	%rd180, %rd141, %rd130;
	and.b64  	%rd181, %rd163, %rd180;
	xor.b64  	%rd182, %rd181, %rd130;
	add.s64 	%rd183, %rd12, %rd182;
	add.s64 	%rd184, %rd183, %rd179;
	add.s64 	%rd185, %rd184, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd174;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 28;
	shf.r.wrap.b32 	%r96, %r93, %r94, 28;
	mov.b64 	%rd186, {%r96, %r95};
	shf.l.wrap.b32 	%r97, %r93, %r94, 30;
	shf.l.wrap.b32 	%r98, %r94, %r93, 30;
	mov.b64 	%rd187, {%r98, %r97};
	xor.b64  	%rd188, %rd187, %rd186;
	shf.l.wrap.b32 	%r99, %r93, %r94, 25;
	shf.l.wrap.b32 	%r100, %r94, %r93, 25;
	mov.b64 	%rd189, {%r100, %r99};
	xor.b64  	%rd190, %rd188, %rd189;
	and.b64  	%rd191, %rd174, %rd152;
	xor.b64  	%rd192, %rd174, %rd152;
	and.b64  	%rd193, %rd192, %rd131;
	or.b64  	%rd194, %rd193, %rd191;
	add.s64 	%rd195, %rd184, %rd194;
	add.s64 	%rd196, %rd195, %rd190;
	add.s64 	%rd197, %rd1078, %rd130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd185;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 14;
	shf.r.wrap.b32 	%r104, %r101, %r102, 14;
	mov.b64 	%rd198, {%r104, %r103};
	shf.r.wrap.b32 	%r105, %r102, %r101, 18;
	shf.r.wrap.b32 	%r106, %r101, %r102, 18;
	mov.b64 	%rd199, {%r106, %r105};
	xor.b64  	%rd200, %rd199, %rd198;
	shf.l.wrap.b32 	%r107, %r101, %r102, 23;
	shf.l.wrap.b32 	%r108, %r102, %r101, 23;
	mov.b64 	%rd201, {%r108, %r107};
	xor.b64  	%rd202, %rd200, %rd201;
	xor.b64  	%rd203, %rd163, %rd141;
	and.b64  	%rd204, %rd185, %rd203;
	xor.b64  	%rd205, %rd204, %rd141;
	add.s64 	%rd206, %rd197, %rd205;
	add.s64 	%rd207, %rd206, %rd202;
	add.s64 	%rd208, %rd207, %rd131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd196;
	}
	shf.r.wrap.b32 	%r111, %r110, %r109, 28;
	shf.r.wrap.b32 	%r112, %r109, %r110, 28;
	mov.b64 	%rd209, {%r112, %r111};
	shf.l.wrap.b32 	%r113, %r109, %r110, 30;
	shf.l.wrap.b32 	%r114, %r110, %r109, 30;
	mov.b64 	%rd210, {%r114, %r113};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r115, %r109, %r110, 25;
	shf.l.wrap.b32 	%r116, %r110, %r109, 25;
	mov.b64 	%rd212, {%r116, %r115};
	xor.b64  	%rd213, %rd211, %rd212;
	and.b64  	%rd214, %rd196, %rd174;
	xor.b64  	%rd215, %rd196, %rd174;
	and.b64  	%rd216, %rd215, %rd152;
	or.b64  	%rd217, %rd216, %rd214;
	add.s64 	%rd218, %rd207, %rd217;
	add.s64 	%rd219, %rd218, %rd213;
	add.s64 	%rd220, %rd1079, %rd141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd208;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 14;
	shf.r.wrap.b32 	%r120, %r117, %r118, 14;
	mov.b64 	%rd221, {%r120, %r119};
	shf.r.wrap.b32 	%r121, %r118, %r117, 18;
	shf.r.wrap.b32 	%r122, %r117, %r118, 18;
	mov.b64 	%rd222, {%r122, %r121};
	xor.b64  	%rd223, %rd222, %rd221;
	shf.l.wrap.b32 	%r123, %r117, %r118, 23;
	shf.l.wrap.b32 	%r124, %r118, %r117, 23;
	mov.b64 	%rd224, {%r124, %r123};
	xor.b64  	%rd225, %rd223, %rd224;
	xor.b64  	%rd226, %rd185, %rd163;
	and.b64  	%rd227, %rd208, %rd226;
	xor.b64  	%rd228, %rd227, %rd163;
	add.s64 	%rd229, %rd220, %rd228;
	add.s64 	%rd230, %rd229, %rd225;
	add.s64 	%rd231, %rd230, %rd152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd219;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 28;
	shf.r.wrap.b32 	%r128, %r125, %r126, 28;
	mov.b64 	%rd232, {%r128, %r127};
	shf.l.wrap.b32 	%r129, %r125, %r126, 30;
	shf.l.wrap.b32 	%r130, %r126, %r125, 30;
	mov.b64 	%rd233, {%r130, %r129};
	xor.b64  	%rd234, %rd233, %rd232;
	shf.l.wrap.b32 	%r131, %r125, %r126, 25;
	shf.l.wrap.b32 	%r132, %r126, %r125, 25;
	mov.b64 	%rd235, {%r132, %r131};
	xor.b64  	%rd236, %rd234, %rd235;
	and.b64  	%rd237, %rd219, %rd196;
	xor.b64  	%rd238, %rd219, %rd196;
	and.b64  	%rd239, %rd238, %rd174;
	or.b64  	%rd240, %rd239, %rd237;
	add.s64 	%rd241, %rd230, %rd240;
	add.s64 	%rd242, %rd241, %rd236;
	add.s64 	%rd243, %rd1080, %rd163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd231;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 14;
	shf.r.wrap.b32 	%r136, %r133, %r134, 14;
	mov.b64 	%rd244, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r134, %r133, 18;
	shf.r.wrap.b32 	%r138, %r133, %r134, 18;
	mov.b64 	%rd245, {%r138, %r137};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r139, %r133, %r134, 23;
	shf.l.wrap.b32 	%r140, %r134, %r133, 23;
	mov.b64 	%rd247, {%r140, %r139};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd208, %rd185;
	and.b64  	%rd250, %rd231, %rd249;
	xor.b64  	%rd251, %rd250, %rd185;
	add.s64 	%rd252, %rd243, %rd251;
	add.s64 	%rd253, %rd252, %rd248;
	add.s64 	%rd254, %rd253, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd242;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 28;
	shf.r.wrap.b32 	%r144, %r141, %r142, 28;
	mov.b64 	%rd255, {%r144, %r143};
	shf.l.wrap.b32 	%r145, %r141, %r142, 30;
	shf.l.wrap.b32 	%r146, %r142, %r141, 30;
	mov.b64 	%rd256, {%r146, %r145};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r147, %r141, %r142, 25;
	shf.l.wrap.b32 	%r148, %r142, %r141, 25;
	mov.b64 	%rd258, {%r148, %r147};
	xor.b64  	%rd259, %rd257, %rd258;
	and.b64  	%rd260, %rd242, %rd219;
	xor.b64  	%rd261, %rd242, %rd219;
	and.b64  	%rd262, %rd261, %rd196;
	or.b64  	%rd263, %rd262, %rd260;
	add.s64 	%rd264, %rd253, %rd263;
	add.s64 	%rd265, %rd264, %rd259;
	add.s64 	%rd266, %rd1081, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd254;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 14;
	shf.r.wrap.b32 	%r152, %r149, %r150, 14;
	mov.b64 	%rd267, {%r152, %r151};
	shf.r.wrap.b32 	%r153, %r150, %r149, 18;
	shf.r.wrap.b32 	%r154, %r149, %r150, 18;
	mov.b64 	%rd268, {%r154, %r153};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r155, %r149, %r150, 23;
	shf.l.wrap.b32 	%r156, %r150, %r149, 23;
	mov.b64 	%rd270, {%r156, %r155};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd231, %rd208;
	and.b64  	%rd273, %rd254, %rd272;
	xor.b64  	%rd274, %rd273, %rd208;
	add.s64 	%rd275, %rd266, %rd274;
	add.s64 	%rd276, %rd275, %rd271;
	add.s64 	%rd277, %rd276, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd265;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd278, {%r160, %r159};
	shf.l.wrap.b32 	%r161, %r157, %r158, 30;
	shf.l.wrap.b32 	%r162, %r158, %r157, 30;
	mov.b64 	%rd279, {%r162, %r161};
	xor.b64  	%rd280, %rd279, %rd278;
	shf.l.wrap.b32 	%r163, %r157, %r158, 25;
	shf.l.wrap.b32 	%r164, %r158, %r157, 25;
	mov.b64 	%rd281, {%r164, %r163};
	xor.b64  	%rd282, %rd280, %rd281;
	and.b64  	%rd283, %rd265, %rd242;
	xor.b64  	%rd284, %rd265, %rd242;
	and.b64  	%rd285, %rd284, %rd219;
	or.b64  	%rd286, %rd285, %rd283;
	add.s64 	%rd287, %rd276, %rd286;
	add.s64 	%rd288, %rd287, %rd282;
	add.s64 	%rd289, %rd1082, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd277;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 14;
	shf.r.wrap.b32 	%r168, %r165, %r166, 14;
	mov.b64 	%rd290, {%r168, %r167};
	shf.r.wrap.b32 	%r169, %r166, %r165, 18;
	shf.r.wrap.b32 	%r170, %r165, %r166, 18;
	mov.b64 	%rd291, {%r170, %r169};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r171, %r165, %r166, 23;
	shf.l.wrap.b32 	%r172, %r166, %r165, 23;
	mov.b64 	%rd293, {%r172, %r171};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd231;
	and.b64  	%rd296, %rd277, %rd295;
	xor.b64  	%rd297, %rd296, %rd231;
	add.s64 	%rd298, %rd289, %rd297;
	add.s64 	%rd299, %rd298, %rd294;
	add.s64 	%rd300, %rd299, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd288;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 28;
	shf.r.wrap.b32 	%r176, %r173, %r174, 28;
	mov.b64 	%rd301, {%r176, %r175};
	shf.l.wrap.b32 	%r177, %r173, %r174, 30;
	shf.l.wrap.b32 	%r178, %r174, %r173, 30;
	mov.b64 	%rd302, {%r178, %r177};
	xor.b64  	%rd303, %rd302, %rd301;
	shf.l.wrap.b32 	%r179, %r173, %r174, 25;
	shf.l.wrap.b32 	%r180, %r174, %r173, 25;
	mov.b64 	%rd304, {%r180, %r179};
	xor.b64  	%rd305, %rd303, %rd304;
	and.b64  	%rd306, %rd288, %rd265;
	xor.b64  	%rd307, %rd288, %rd265;
	and.b64  	%rd308, %rd307, %rd242;
	or.b64  	%rd309, %rd308, %rd306;
	add.s64 	%rd310, %rd299, %rd309;
	add.s64 	%rd311, %rd310, %rd305;
	add.s64 	%rd312, %rd1083, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd300;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 14;
	shf.r.wrap.b32 	%r184, %r181, %r182, 14;
	mov.b64 	%rd313, {%r184, %r183};
	shf.r.wrap.b32 	%r185, %r182, %r181, 18;
	shf.r.wrap.b32 	%r186, %r181, %r182, 18;
	mov.b64 	%rd314, {%r186, %r185};
	xor.b64  	%rd315, %rd314, %rd313;
	shf.l.wrap.b32 	%r187, %r181, %r182, 23;
	shf.l.wrap.b32 	%r188, %r182, %r181, 23;
	mov.b64 	%rd316, {%r188, %r187};
	xor.b64  	%rd317, %rd315, %rd316;
	xor.b64  	%rd318, %rd277, %rd254;
	and.b64  	%rd319, %rd300, %rd318;
	xor.b64  	%rd320, %rd319, %rd254;
	add.s64 	%rd321, %rd312, %rd320;
	add.s64 	%rd322, %rd321, %rd317;
	add.s64 	%rd323, %rd322, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd311;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 28;
	shf.r.wrap.b32 	%r192, %r189, %r190, 28;
	mov.b64 	%rd324, {%r192, %r191};
	shf.l.wrap.b32 	%r193, %r189, %r190, 30;
	shf.l.wrap.b32 	%r194, %r190, %r189, 30;
	mov.b64 	%rd325, {%r194, %r193};
	xor.b64  	%rd326, %rd325, %rd324;
	shf.l.wrap.b32 	%r195, %r189, %r190, 25;
	shf.l.wrap.b32 	%r196, %r190, %r189, 25;
	mov.b64 	%rd327, {%r196, %r195};
	xor.b64  	%rd328, %rd326, %rd327;
	and.b64  	%rd329, %rd311, %rd288;
	xor.b64  	%rd330, %rd311, %rd288;
	and.b64  	%rd331, %rd330, %rd265;
	or.b64  	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd322, %rd332;
	add.s64 	%rd334, %rd333, %rd328;
	add.s64 	%rd335, %rd1084, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd323;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 14;
	shf.r.wrap.b32 	%r200, %r197, %r198, 14;
	mov.b64 	%rd336, {%r200, %r199};
	shf.r.wrap.b32 	%r201, %r198, %r197, 18;
	shf.r.wrap.b32 	%r202, %r197, %r198, 18;
	mov.b64 	%rd337, {%r202, %r201};
	xor.b64  	%rd338, %rd337, %rd336;
	shf.l.wrap.b32 	%r203, %r197, %r198, 23;
	shf.l.wrap.b32 	%r204, %r198, %r197, 23;
	mov.b64 	%rd339, {%r204, %r203};
	xor.b64  	%rd340, %rd338, %rd339;
	xor.b64  	%rd341, %rd300, %rd277;
	and.b64  	%rd342, %rd323, %rd341;
	xor.b64  	%rd343, %rd342, %rd277;
	add.s64 	%rd344, %rd335, %rd343;
	add.s64 	%rd345, %rd344, %rd340;
	add.s64 	%rd346, %rd345, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd334;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 28;
	shf.r.wrap.b32 	%r208, %r205, %r206, 28;
	mov.b64 	%rd347, {%r208, %r207};
	shf.l.wrap.b32 	%r209, %r205, %r206, 30;
	shf.l.wrap.b32 	%r210, %r206, %r205, 30;
	mov.b64 	%rd348, {%r210, %r209};
	xor.b64  	%rd349, %rd348, %rd347;
	shf.l.wrap.b32 	%r211, %r205, %r206, 25;
	shf.l.wrap.b32 	%r212, %r206, %r205, 25;
	mov.b64 	%rd350, {%r212, %r211};
	xor.b64  	%rd351, %rd349, %rd350;
	and.b64  	%rd352, %rd334, %rd311;
	xor.b64  	%rd353, %rd334, %rd311;
	and.b64  	%rd354, %rd353, %rd288;
	or.b64  	%rd355, %rd354, %rd352;
	add.s64 	%rd356, %rd345, %rd355;
	add.s64 	%rd357, %rd356, %rd351;
	add.s64 	%rd358, %rd1085, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd346;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 14;
	shf.r.wrap.b32 	%r216, %r213, %r214, 14;
	mov.b64 	%rd359, {%r216, %r215};
	shf.r.wrap.b32 	%r217, %r214, %r213, 18;
	shf.r.wrap.b32 	%r218, %r213, %r214, 18;
	mov.b64 	%rd360, {%r218, %r217};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r219, %r213, %r214, 23;
	shf.l.wrap.b32 	%r220, %r214, %r213, 23;
	mov.b64 	%rd362, {%r220, %r219};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd323, %rd300;
	and.b64  	%rd365, %rd346, %rd364;
	xor.b64  	%rd366, %rd365, %rd300;
	add.s64 	%rd367, %rd358, %rd366;
	add.s64 	%rd368, %rd367, %rd363;
	add.s64 	%rd369, %rd368, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd357;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 28;
	shf.r.wrap.b32 	%r224, %r221, %r222, 28;
	mov.b64 	%rd370, {%r224, %r223};
	shf.l.wrap.b32 	%r225, %r221, %r222, 30;
	shf.l.wrap.b32 	%r226, %r222, %r221, 30;
	mov.b64 	%rd371, {%r226, %r225};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r227, %r221, %r222, 25;
	shf.l.wrap.b32 	%r228, %r222, %r221, 25;
	mov.b64 	%rd373, {%r228, %r227};
	xor.b64  	%rd374, %rd372, %rd373;
	and.b64  	%rd375, %rd357, %rd334;
	xor.b64  	%rd376, %rd357, %rd334;
	and.b64  	%rd377, %rd376, %rd311;
	or.b64  	%rd378, %rd377, %rd375;
	add.s64 	%rd379, %rd368, %rd378;
	add.s64 	%rd380, %rd379, %rd374;
	add.s64 	%rd381, %rd1086, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd369;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 14;
	shf.r.wrap.b32 	%r232, %r229, %r230, 14;
	mov.b64 	%rd382, {%r232, %r231};
	shf.r.wrap.b32 	%r233, %r230, %r229, 18;
	shf.r.wrap.b32 	%r234, %r229, %r230, 18;
	mov.b64 	%rd383, {%r234, %r233};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r235, %r229, %r230, 23;
	shf.l.wrap.b32 	%r236, %r230, %r229, 23;
	mov.b64 	%rd385, {%r236, %r235};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd346, %rd323;
	and.b64  	%rd388, %rd369, %rd387;
	xor.b64  	%rd389, %rd388, %rd323;
	add.s64 	%rd390, %rd381, %rd389;
	add.s64 	%rd391, %rd390, %rd386;
	add.s64 	%rd1104, %rd391, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd380;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 28;
	shf.r.wrap.b32 	%r240, %r237, %r238, 28;
	mov.b64 	%rd392, {%r240, %r239};
	shf.l.wrap.b32 	%r241, %r237, %r238, 30;
	shf.l.wrap.b32 	%r242, %r238, %r237, 30;
	mov.b64 	%rd393, {%r242, %r241};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r243, %r237, %r238, 25;
	shf.l.wrap.b32 	%r244, %r238, %r237, 25;
	mov.b64 	%rd395, {%r244, %r243};
	xor.b64  	%rd396, %rd394, %rd395;
	and.b64  	%rd397, %rd380, %rd357;
	xor.b64  	%rd398, %rd380, %rd357;
	and.b64  	%rd399, %rd398, %rd334;
	or.b64  	%rd400, %rd399, %rd397;
	add.s64 	%rd401, %rd391, %rd400;
	add.s64 	%rd1127, %rd401, %rd396;
	add.s64 	%rd402, %rd1087, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd1104;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 14;
	shf.r.wrap.b32 	%r248, %r245, %r246, 14;
	mov.b64 	%rd403, {%r248, %r247};
	shf.r.wrap.b32 	%r249, %r246, %r245, 18;
	shf.r.wrap.b32 	%r250, %r245, %r246, 18;
	mov.b64 	%rd404, {%r250, %r249};
	xor.b64  	%rd405, %rd404, %rd403;
	shf.l.wrap.b32 	%r251, %r245, %r246, 23;
	shf.l.wrap.b32 	%r252, %r246, %r245, 23;
	mov.b64 	%rd406, {%r252, %r251};
	xor.b64  	%rd407, %rd405, %rd406;
	xor.b64  	%rd408, %rd369, %rd346;
	and.b64  	%rd409, %rd1104, %rd408;
	xor.b64  	%rd410, %rd409, %rd346;
	add.s64 	%rd411, %rd402, %rd410;
	add.s64 	%rd412, %rd411, %rd407;
	add.s64 	%rd1105, %rd412, %rd334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd1127;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 28;
	shf.r.wrap.b32 	%r256, %r253, %r254, 28;
	mov.b64 	%rd413, {%r256, %r255};
	shf.l.wrap.b32 	%r257, %r253, %r254, 30;
	shf.l.wrap.b32 	%r258, %r254, %r253, 30;
	mov.b64 	%rd414, {%r258, %r257};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r259, %r253, %r254, 25;
	shf.l.wrap.b32 	%r260, %r254, %r253, 25;
	mov.b64 	%rd416, {%r260, %r259};
	xor.b64  	%rd417, %rd415, %rd416;
	and.b64  	%rd418, %rd1127, %rd380;
	xor.b64  	%rd419, %rd1127, %rd380;
	and.b64  	%rd420, %rd419, %rd357;
	or.b64  	%rd421, %rd420, %rd418;
	add.s64 	%rd422, %rd412, %rd421;
	add.s64 	%rd1126, %rd422, %rd417;
	add.s64 	%rd423, %rd1088, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd1105;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 14;
	shf.r.wrap.b32 	%r264, %r261, %r262, 14;
	mov.b64 	%rd424, {%r264, %r263};
	shf.r.wrap.b32 	%r265, %r262, %r261, 18;
	shf.r.wrap.b32 	%r266, %r261, %r262, 18;
	mov.b64 	%rd425, {%r266, %r265};
	xor.b64  	%rd426, %rd425, %rd424;
	shf.l.wrap.b32 	%r267, %r261, %r262, 23;
	shf.l.wrap.b32 	%r268, %r262, %r261, 23;
	mov.b64 	%rd427, {%r268, %r267};
	xor.b64  	%rd428, %rd426, %rd427;
	xor.b64  	%rd429, %rd1104, %rd369;
	and.b64  	%rd430, %rd1105, %rd429;
	xor.b64  	%rd431, %rd430, %rd369;
	add.s64 	%rd432, %rd423, %rd431;
	add.s64 	%rd433, %rd432, %rd428;
	add.s64 	%rd1106, %rd433, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd1126;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 28;
	shf.r.wrap.b32 	%r272, %r269, %r270, 28;
	mov.b64 	%rd434, {%r272, %r271};
	shf.l.wrap.b32 	%r273, %r269, %r270, 30;
	shf.l.wrap.b32 	%r274, %r270, %r269, 30;
	mov.b64 	%rd435, {%r274, %r273};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r275, %r269, %r270, 25;
	shf.l.wrap.b32 	%r276, %r270, %r269, 25;
	mov.b64 	%rd437, {%r276, %r275};
	xor.b64  	%rd438, %rd436, %rd437;
	and.b64  	%rd439, %rd1126, %rd1127;
	xor.b64  	%rd440, %rd1126, %rd1127;
	and.b64  	%rd441, %rd440, %rd380;
	or.b64  	%rd442, %rd441, %rd439;
	add.s64 	%rd443, %rd433, %rd442;
	add.s64 	%rd1125, %rd443, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd1106;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 14;
	shf.r.wrap.b32 	%r280, %r277, %r278, 14;
	mov.b64 	%rd444, {%r280, %r279};
	shf.r.wrap.b32 	%r281, %r278, %r277, 18;
	shf.r.wrap.b32 	%r282, %r277, %r278, 18;
	mov.b64 	%rd445, {%r282, %r281};
	xor.b64  	%rd446, %rd445, %rd444;
	shf.l.wrap.b32 	%r283, %r277, %r278, 23;
	shf.l.wrap.b32 	%r284, %r278, %r277, 23;
	mov.b64 	%rd447, {%r284, %r283};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd1105, %rd1104;
	and.b64  	%rd450, %rd1106, %rd449;
	xor.b64  	%rd451, %rd450, %rd1104;
	add.s64 	%rd452, %rd369, %rd8;
	add.s64 	%rd453, %rd452, %rd1089;
	add.s64 	%rd454, %rd453, %rd451;
	add.s64 	%rd455, %rd454, %rd448;
	add.s64 	%rd1107, %rd455, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd1125;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 28;
	shf.r.wrap.b32 	%r288, %r285, %r286, 28;
	mov.b64 	%rd456, {%r288, %r287};
	shf.l.wrap.b32 	%r289, %r285, %r286, 30;
	shf.l.wrap.b32 	%r290, %r286, %r285, 30;
	mov.b64 	%rd457, {%r290, %r289};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r291, %r285, %r286, 25;
	shf.l.wrap.b32 	%r292, %r286, %r285, 25;
	mov.b64 	%rd459, {%r292, %r291};
	xor.b64  	%rd460, %rd458, %rd459;
	and.b64  	%rd461, %rd1125, %rd1126;
	xor.b64  	%rd462, %rd1125, %rd1126;
	and.b64  	%rd463, %rd462, %rd1127;
	or.b64  	%rd464, %rd463, %rd461;
	add.s64 	%rd465, %rd455, %rd464;
	add.s64 	%rd1124, %rd465, %rd460;
	mov.u64 	%rd1112, 0;
	mov.u32 	%r805, 16;
	mov.u64 	%rd1103, k_sha512;
	mov.u64 	%rd1109, %rd5;
	mov.u64 	%rd1110, %rd6;
	mov.u64 	%rd1111, %rd7;
	mov.u64 	%rd1113, %rd1112;
	mov.u64 	%rd1114, %rd1112;
	mov.u64 	%rd1115, %rd1112;
	mov.u64 	%rd1116, %rd1112;
	mov.u64 	%rd1117, %rd1112;
	mov.u64 	%rd1118, %rd1112;
	mov.u64 	%rd1119, %rd1112;
	mov.u64 	%rd1120, %rd1112;
	mov.u64 	%rd1121, %rd1112;
	mov.u64 	%rd1122, %rd1112;
	mov.u64 	%rd1123, %rd8;

BB1_4:
	shr.u64 	%rd466, %rd1122, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd1122;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 19;
	shf.r.wrap.b32 	%r296, %r293, %r294, 19;
	mov.b64 	%rd467, {%r296, %r295};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r297, %r293, %r294, 3;
	shf.l.wrap.b32 	%r298, %r294, %r293, 3;
	mov.b64 	%rd469, {%r298, %r297};
	xor.b64  	%rd470, %rd468, %rd469;
	shr.u64 	%rd471, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd1109;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 1;
	shf.r.wrap.b32 	%r302, %r299, %r300, 1;
	mov.b64 	%rd472, {%r302, %r301};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.r.wrap.b32 	%r303, %r300, %r299, 8;
	shf.r.wrap.b32 	%r304, %r299, %r300, 8;
	mov.b64 	%rd474, {%r304, %r303};
	xor.b64  	%rd475, %rd473, %rd474;
	add.s64 	%rd476, %rd1108, %rd1117;
	add.s64 	%rd477, %rd476, %rd470;
	add.s64 	%rd1108, %rd477, %rd475;
	shr.u64 	%rd478, %rd1123, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd1123;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 19;
	shf.r.wrap.b32 	%r308, %r305, %r306, 19;
	mov.b64 	%rd479, {%r308, %r307};
	xor.b64  	%rd480, %rd479, %rd478;
	shf.l.wrap.b32 	%r309, %r305, %r306, 3;
	shf.l.wrap.b32 	%r310, %r306, %r305, 3;
	mov.b64 	%rd481, {%r310, %r309};
	xor.b64  	%rd482, %rd480, %rd481;
	shr.u64 	%rd483, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd1110;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 1;
	shf.r.wrap.b32 	%r314, %r311, %r312, 1;
	mov.b64 	%rd484, {%r314, %r313};
	xor.b64  	%rd485, %rd484, %rd483;
	shf.r.wrap.b32 	%r315, %r312, %r311, 8;
	shf.r.wrap.b32 	%r316, %r311, %r312, 8;
	mov.b64 	%rd486, {%r316, %r315};
	xor.b64  	%rd487, %rd485, %rd486;
	add.s64 	%rd488, %rd1109, %rd1118;
	add.s64 	%rd489, %rd488, %rd482;
	add.s64 	%rd1109, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd1108;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 19;
	shf.r.wrap.b32 	%r320, %r317, %r318, 19;
	mov.b64 	%rd490, {%r320, %r319};
	shf.l.wrap.b32 	%r321, %r317, %r318, 3;
	shf.l.wrap.b32 	%r322, %r318, %r317, 3;
	mov.b64 	%rd491, {%r322, %r321};
	shr.u64 	%rd492, %rd1108, 6;
	xor.b64  	%rd493, %rd490, %rd492;
	xor.b64  	%rd494, %rd493, %rd491;
	shr.u64 	%rd495, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd1111;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 1;
	shf.r.wrap.b32 	%r326, %r323, %r324, 1;
	mov.b64 	%rd496, {%r326, %r325};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.r.wrap.b32 	%r327, %r324, %r323, 8;
	shf.r.wrap.b32 	%r328, %r323, %r324, 8;
	mov.b64 	%rd498, {%r328, %r327};
	xor.b64  	%rd499, %rd497, %rd498;
	add.s64 	%rd500, %rd1110, %rd1119;
	add.s64 	%rd501, %rd500, %rd494;
	add.s64 	%rd1110, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd1109;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 19;
	shf.r.wrap.b32 	%r332, %r329, %r330, 19;
	mov.b64 	%rd502, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 3;
	shf.l.wrap.b32 	%r334, %r330, %r329, 3;
	mov.b64 	%rd503, {%r334, %r333};
	shr.u64 	%rd504, %rd1109, 6;
	xor.b64  	%rd505, %rd502, %rd504;
	xor.b64  	%rd506, %rd505, %rd503;
	shr.u64 	%rd507, %rd1112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd1112;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 1;
	shf.r.wrap.b32 	%r338, %r335, %r336, 1;
	mov.b64 	%rd508, {%r338, %r337};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.r.wrap.b32 	%r339, %r336, %r335, 8;
	shf.r.wrap.b32 	%r340, %r335, %r336, 8;
	mov.b64 	%rd510, {%r340, %r339};
	xor.b64  	%rd511, %rd509, %rd510;
	add.s64 	%rd512, %rd1111, %rd1120;
	add.s64 	%rd513, %rd512, %rd506;
	add.s64 	%rd1111, %rd513, %rd511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd1110;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 19;
	shf.r.wrap.b32 	%r344, %r341, %r342, 19;
	mov.b64 	%rd514, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 3;
	shf.l.wrap.b32 	%r346, %r342, %r341, 3;
	mov.b64 	%rd515, {%r346, %r345};
	shr.u64 	%rd516, %rd1110, 6;
	xor.b64  	%rd517, %rd514, %rd516;
	xor.b64  	%rd518, %rd517, %rd515;
	shr.u64 	%rd519, %rd1113, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd1113;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 1;
	shf.r.wrap.b32 	%r350, %r347, %r348, 1;
	mov.b64 	%rd520, {%r350, %r349};
	xor.b64  	%rd521, %rd520, %rd519;
	shf.r.wrap.b32 	%r351, %r348, %r347, 8;
	shf.r.wrap.b32 	%r352, %r347, %r348, 8;
	mov.b64 	%rd522, {%r352, %r351};
	xor.b64  	%rd523, %rd521, %rd522;
	add.s64 	%rd524, %rd1112, %rd1121;
	add.s64 	%rd525, %rd524, %rd518;
	add.s64 	%rd1112, %rd525, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd1111;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 19;
	shf.r.wrap.b32 	%r356, %r353, %r354, 19;
	mov.b64 	%rd526, {%r356, %r355};
	shf.l.wrap.b32 	%r357, %r353, %r354, 3;
	shf.l.wrap.b32 	%r358, %r354, %r353, 3;
	mov.b64 	%rd527, {%r358, %r357};
	shr.u64 	%rd528, %rd1111, 6;
	xor.b64  	%rd529, %rd526, %rd528;
	xor.b64  	%rd530, %rd529, %rd527;
	shr.u64 	%rd531, %rd1114, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd1114;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 1;
	shf.r.wrap.b32 	%r362, %r359, %r360, 1;
	mov.b64 	%rd532, {%r362, %r361};
	xor.b64  	%rd533, %rd532, %rd531;
	shf.r.wrap.b32 	%r363, %r360, %r359, 8;
	shf.r.wrap.b32 	%r364, %r359, %r360, 8;
	mov.b64 	%rd534, {%r364, %r363};
	xor.b64  	%rd535, %rd533, %rd534;
	add.s64 	%rd536, %rd1113, %rd1122;
	add.s64 	%rd537, %rd536, %rd530;
	add.s64 	%rd1113, %rd537, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd1112;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 19;
	shf.r.wrap.b32 	%r368, %r365, %r366, 19;
	mov.b64 	%rd538, {%r368, %r367};
	shf.l.wrap.b32 	%r369, %r365, %r366, 3;
	shf.l.wrap.b32 	%r370, %r366, %r365, 3;
	mov.b64 	%rd539, {%r370, %r369};
	shr.u64 	%rd540, %rd1112, 6;
	xor.b64  	%rd541, %rd538, %rd540;
	xor.b64  	%rd542, %rd541, %rd539;
	shr.u64 	%rd543, %rd1115, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd1115;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 1;
	shf.r.wrap.b32 	%r374, %r371, %r372, 1;
	mov.b64 	%rd544, {%r374, %r373};
	xor.b64  	%rd545, %rd544, %rd543;
	shf.r.wrap.b32 	%r375, %r372, %r371, 8;
	shf.r.wrap.b32 	%r376, %r371, %r372, 8;
	mov.b64 	%rd546, {%r376, %r375};
	xor.b64  	%rd547, %rd545, %rd546;
	add.s64 	%rd548, %rd1114, %rd1123;
	add.s64 	%rd549, %rd548, %rd542;
	add.s64 	%rd1114, %rd549, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd1113;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 19;
	shf.r.wrap.b32 	%r380, %r377, %r378, 19;
	mov.b64 	%rd550, {%r380, %r379};
	shf.l.wrap.b32 	%r381, %r377, %r378, 3;
	shf.l.wrap.b32 	%r382, %r378, %r377, 3;
	mov.b64 	%rd551, {%r382, %r381};
	shr.u64 	%rd552, %rd1113, 6;
	xor.b64  	%rd553, %rd550, %rd552;
	xor.b64  	%rd554, %rd553, %rd551;
	shr.u64 	%rd555, %rd1116, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd1116;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 1;
	shf.r.wrap.b32 	%r386, %r383, %r384, 1;
	mov.b64 	%rd556, {%r386, %r385};
	xor.b64  	%rd557, %rd556, %rd555;
	shf.r.wrap.b32 	%r387, %r384, %r383, 8;
	shf.r.wrap.b32 	%r388, %r383, %r384, 8;
	mov.b64 	%rd558, {%r388, %r387};
	xor.b64  	%rd559, %rd557, %rd558;
	add.s64 	%rd560, %rd1108, %rd1115;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd1115, %rd561, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd1114;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 19;
	shf.r.wrap.b32 	%r392, %r389, %r390, 19;
	mov.b64 	%rd562, {%r392, %r391};
	shf.l.wrap.b32 	%r393, %r389, %r390, 3;
	shf.l.wrap.b32 	%r394, %r390, %r389, 3;
	mov.b64 	%rd563, {%r394, %r393};
	shr.u64 	%rd564, %rd1114, 6;
	xor.b64  	%rd565, %rd562, %rd564;
	xor.b64  	%rd566, %rd565, %rd563;
	shr.u64 	%rd567, %rd1117, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd1117;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 1;
	shf.r.wrap.b32 	%r398, %r395, %r396, 1;
	mov.b64 	%rd568, {%r398, %r397};
	xor.b64  	%rd569, %rd568, %rd567;
	shf.r.wrap.b32 	%r399, %r396, %r395, 8;
	shf.r.wrap.b32 	%r400, %r395, %r396, 8;
	mov.b64 	%rd570, {%r400, %r399};
	xor.b64  	%rd571, %rd569, %rd570;
	add.s64 	%rd572, %rd1109, %rd1116;
	add.s64 	%rd573, %rd572, %rd566;
	add.s64 	%rd1116, %rd573, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd1115;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 19;
	shf.r.wrap.b32 	%r404, %r401, %r402, 19;
	mov.b64 	%rd574, {%r404, %r403};
	shf.l.wrap.b32 	%r405, %r401, %r402, 3;
	shf.l.wrap.b32 	%r406, %r402, %r401, 3;
	mov.b64 	%rd575, {%r406, %r405};
	shr.u64 	%rd576, %rd1115, 6;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	shr.u64 	%rd579, %rd1118, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd1118;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 1;
	shf.r.wrap.b32 	%r410, %r407, %r408, 1;
	mov.b64 	%rd580, {%r410, %r409};
	xor.b64  	%rd581, %rd580, %rd579;
	shf.r.wrap.b32 	%r411, %r408, %r407, 8;
	shf.r.wrap.b32 	%r412, %r407, %r408, 8;
	mov.b64 	%rd582, {%r412, %r411};
	xor.b64  	%rd583, %rd581, %rd582;
	add.s64 	%rd584, %rd1110, %rd1117;
	add.s64 	%rd585, %rd584, %rd578;
	add.s64 	%rd1117, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd1116;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 19;
	shf.r.wrap.b32 	%r416, %r413, %r414, 19;
	mov.b64 	%rd586, {%r416, %r415};
	shf.l.wrap.b32 	%r417, %r413, %r414, 3;
	shf.l.wrap.b32 	%r418, %r414, %r413, 3;
	mov.b64 	%rd587, {%r418, %r417};
	shr.u64 	%rd588, %rd1116, 6;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	shr.u64 	%rd591, %rd1119, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd1119;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 1;
	shf.r.wrap.b32 	%r422, %r419, %r420, 1;
	mov.b64 	%rd592, {%r422, %r421};
	xor.b64  	%rd593, %rd592, %rd591;
	shf.r.wrap.b32 	%r423, %r420, %r419, 8;
	shf.r.wrap.b32 	%r424, %r419, %r420, 8;
	mov.b64 	%rd594, {%r424, %r423};
	xor.b64  	%rd595, %rd593, %rd594;
	add.s64 	%rd596, %rd1111, %rd1118;
	add.s64 	%rd597, %rd596, %rd590;
	add.s64 	%rd1118, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd1117;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 19;
	shf.r.wrap.b32 	%r428, %r425, %r426, 19;
	mov.b64 	%rd598, {%r428, %r427};
	shf.l.wrap.b32 	%r429, %r425, %r426, 3;
	shf.l.wrap.b32 	%r430, %r426, %r425, 3;
	mov.b64 	%rd599, {%r430, %r429};
	shr.u64 	%rd600, %rd1117, 6;
	xor.b64  	%rd601, %rd598, %rd600;
	xor.b64  	%rd602, %rd601, %rd599;
	shr.u64 	%rd603, %rd1120, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd1120;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 1;
	shf.r.wrap.b32 	%r434, %r431, %r432, 1;
	mov.b64 	%rd604, {%r434, %r433};
	xor.b64  	%rd605, %rd604, %rd603;
	shf.r.wrap.b32 	%r435, %r432, %r431, 8;
	shf.r.wrap.b32 	%r436, %r431, %r432, 8;
	mov.b64 	%rd606, {%r436, %r435};
	xor.b64  	%rd607, %rd605, %rd606;
	add.s64 	%rd608, %rd1112, %rd1119;
	add.s64 	%rd609, %rd608, %rd602;
	add.s64 	%rd1119, %rd609, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd1118;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 19;
	shf.r.wrap.b32 	%r440, %r437, %r438, 19;
	mov.b64 	%rd610, {%r440, %r439};
	shf.l.wrap.b32 	%r441, %r437, %r438, 3;
	shf.l.wrap.b32 	%r442, %r438, %r437, 3;
	mov.b64 	%rd611, {%r442, %r441};
	shr.u64 	%rd612, %rd1118, 6;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	shr.u64 	%rd615, %rd1121, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd1121;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 1;
	shf.r.wrap.b32 	%r446, %r443, %r444, 1;
	mov.b64 	%rd616, {%r446, %r445};
	xor.b64  	%rd617, %rd616, %rd615;
	shf.r.wrap.b32 	%r447, %r444, %r443, 8;
	shf.r.wrap.b32 	%r448, %r443, %r444, 8;
	mov.b64 	%rd618, {%r448, %r447};
	xor.b64  	%rd619, %rd617, %rd618;
	add.s64 	%rd620, %rd1113, %rd1120;
	add.s64 	%rd621, %rd620, %rd614;
	add.s64 	%rd1120, %rd621, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd1119;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 19;
	shf.r.wrap.b32 	%r452, %r449, %r450, 19;
	mov.b64 	%rd622, {%r452, %r451};
	shf.l.wrap.b32 	%r453, %r449, %r450, 3;
	shf.l.wrap.b32 	%r454, %r450, %r449, 3;
	mov.b64 	%rd623, {%r454, %r453};
	shr.u64 	%rd624, %rd1119, 6;
	xor.b64  	%rd625, %rd622, %rd624;
	xor.b64  	%rd626, %rd625, %rd623;
	shr.u64 	%rd627, %rd1122, 7;
	shf.r.wrap.b32 	%r455, %r294, %r293, 1;
	shf.r.wrap.b32 	%r456, %r293, %r294, 1;
	mov.b64 	%rd628, {%r456, %r455};
	xor.b64  	%rd629, %rd628, %rd627;
	shf.r.wrap.b32 	%r457, %r294, %r293, 8;
	shf.r.wrap.b32 	%r458, %r293, %r294, 8;
	mov.b64 	%rd630, {%r458, %r457};
	xor.b64  	%rd631, %rd629, %rd630;
	add.s64 	%rd632, %rd1114, %rd1121;
	add.s64 	%rd633, %rd632, %rd626;
	add.s64 	%rd1121, %rd633, %rd631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd1120;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 19;
	shf.r.wrap.b32 	%r462, %r459, %r460, 19;
	mov.b64 	%rd634, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 3;
	shf.l.wrap.b32 	%r464, %r460, %r459, 3;
	mov.b64 	%rd635, {%r464, %r463};
	shr.u64 	%rd636, %rd1120, 6;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	shr.u64 	%rd639, %rd1123, 7;
	shf.r.wrap.b32 	%r465, %r306, %r305, 1;
	shf.r.wrap.b32 	%r466, %r305, %r306, 1;
	mov.b64 	%rd640, {%r466, %r465};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.r.wrap.b32 	%r467, %r306, %r305, 8;
	shf.r.wrap.b32 	%r468, %r305, %r306, 8;
	mov.b64 	%rd642, {%r468, %r467};
	xor.b64  	%rd643, %rd641, %rd642;
	add.s64 	%rd644, %rd1115, %rd1122;
	add.s64 	%rd645, %rd644, %rd638;
	add.s64 	%rd1122, %rd645, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd1121;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 19;
	shf.r.wrap.b32 	%r472, %r469, %r470, 19;
	mov.b64 	%rd646, {%r472, %r471};
	shf.l.wrap.b32 	%r473, %r469, %r470, 3;
	shf.l.wrap.b32 	%r474, %r470, %r469, 3;
	mov.b64 	%rd647, {%r474, %r473};
	shr.u64 	%rd648, %rd1121, 6;
	xor.b64  	%rd649, %rd646, %rd648;
	xor.b64  	%rd650, %rd649, %rd647;
	shf.r.wrap.b32 	%r475, %r318, %r317, 1;
	shf.r.wrap.b32 	%r476, %r317, %r318, 1;
	mov.b64 	%rd651, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r318, %r317, 8;
	shf.r.wrap.b32 	%r478, %r317, %r318, 8;
	mov.b64 	%rd652, {%r478, %r477};
	shr.u64 	%rd653, %rd1108, 7;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd1116, %rd1123;
	add.s64 	%rd657, %rd656, %rd650;
	add.s64 	%rd1123, %rd657, %rd655;
	add.s64 	%rd84, %rd1103, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd1107;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 18;
	shf.r.wrap.b32 	%r482, %r479, %r480, 18;
	mov.b64 	%rd658, {%r482, %r481};
	shf.r.wrap.b32 	%r483, %r480, %r479, 14;
	shf.r.wrap.b32 	%r484, %r479, %r480, 14;
	mov.b64 	%rd659, {%r484, %r483};
	xor.b64  	%rd660, %rd658, %rd659;
	shf.l.wrap.b32 	%r485, %r479, %r480, 23;
	shf.l.wrap.b32 	%r486, %r480, %r479, 23;
	mov.b64 	%rd661, {%r486, %r485};
	xor.b64  	%rd662, %rd660, %rd661;
	xor.b64  	%rd663, %rd1105, %rd1106;
	and.b64  	%rd664, %rd663, %rd1107;
	xor.b64  	%rd665, %rd664, %rd1105;
	add.s64 	%rd666, %rd665, %rd1104;
	add.s64 	%rd667, %rd666, %rd1108;
	ld.const.u64 	%rd668, [%rd1103+128];
	add.s64 	%rd669, %rd667, %rd668;
	add.s64 	%rd670, %rd669, %rd662;
	add.s64 	%rd671, %rd670, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd1124;
	}
	shf.l.wrap.b32 	%r489, %r488, %r487, 30;
	shf.l.wrap.b32 	%r490, %r487, %r488, 30;
	mov.b64 	%rd672, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r487, %r488, 28;
	shf.r.wrap.b32 	%r492, %r488, %r487, 28;
	mov.b64 	%rd673, {%r492, %r491};
	xor.b64  	%rd674, %rd672, %rd673;
	shf.l.wrap.b32 	%r493, %r488, %r487, 25;
	shf.l.wrap.b32 	%r494, %r487, %r488, 25;
	mov.b64 	%rd675, {%r494, %r493};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd1124, %rd1125;
	and.b64  	%rd678, %rd677, %rd1126;
	and.b64  	%rd679, %rd1124, %rd1125;
	or.b64  	%rd680, %rd678, %rd679;
	add.s64 	%rd681, %rd670, %rd680;
	add.s64 	%rd682, %rd681, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd671;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 14;
	shf.r.wrap.b32 	%r498, %r495, %r496, 14;
	mov.b64 	%rd683, {%r498, %r497};
	shf.r.wrap.b32 	%r499, %r496, %r495, 18;
	shf.r.wrap.b32 	%r500, %r495, %r496, 18;
	mov.b64 	%rd684, {%r500, %r499};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.l.wrap.b32 	%r501, %r495, %r496, 23;
	shf.l.wrap.b32 	%r502, %r496, %r495, 23;
	mov.b64 	%rd686, {%r502, %r501};
	xor.b64  	%rd687, %rd685, %rd686;
	xor.b64  	%rd688, %rd1106, %rd1107;
	and.b64  	%rd689, %rd671, %rd688;
	xor.b64  	%rd690, %rd689, %rd1106;
	add.s64 	%rd691, %rd1109, %rd1105;
	ld.const.u64 	%rd692, [%rd1103+136];
	add.s64 	%rd693, %rd691, %rd692;
	add.s64 	%rd694, %rd693, %rd690;
	add.s64 	%rd695, %rd694, %rd687;
	add.s64 	%rd696, %rd695, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd682;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 28;
	shf.r.wrap.b32 	%r506, %r503, %r504, 28;
	mov.b64 	%rd697, {%r506, %r505};
	shf.l.wrap.b32 	%r507, %r503, %r504, 30;
	shf.l.wrap.b32 	%r508, %r504, %r503, 30;
	mov.b64 	%rd698, {%r508, %r507};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r509, %r503, %r504, 25;
	shf.l.wrap.b32 	%r510, %r504, %r503, 25;
	mov.b64 	%rd700, {%r510, %r509};
	xor.b64  	%rd701, %rd699, %rd700;
	and.b64  	%rd702, %rd682, %rd1124;
	xor.b64  	%rd703, %rd682, %rd1124;
	and.b64  	%rd704, %rd703, %rd1125;
	or.b64  	%rd705, %rd704, %rd702;
	add.s64 	%rd706, %rd695, %rd705;
	add.s64 	%rd707, %rd706, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd696;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 14;
	shf.r.wrap.b32 	%r514, %r511, %r512, 14;
	mov.b64 	%rd708, {%r514, %r513};
	shf.r.wrap.b32 	%r515, %r512, %r511, 18;
	shf.r.wrap.b32 	%r516, %r511, %r512, 18;
	mov.b64 	%rd709, {%r516, %r515};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.l.wrap.b32 	%r517, %r511, %r512, 23;
	shf.l.wrap.b32 	%r518, %r512, %r511, 23;
	mov.b64 	%rd711, {%r518, %r517};
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd671, %rd1107;
	and.b64  	%rd714, %rd696, %rd713;
	xor.b64  	%rd715, %rd714, %rd1107;
	add.s64 	%rd716, %rd1110, %rd1106;
	ld.const.u64 	%rd717, [%rd1103+144];
	add.s64 	%rd718, %rd716, %rd717;
	add.s64 	%rd719, %rd718, %rd715;
	add.s64 	%rd720, %rd719, %rd712;
	add.s64 	%rd721, %rd720, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd707;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 28;
	shf.r.wrap.b32 	%r522, %r519, %r520, 28;
	mov.b64 	%rd722, {%r522, %r521};
	shf.l.wrap.b32 	%r523, %r519, %r520, 30;
	shf.l.wrap.b32 	%r524, %r520, %r519, 30;
	mov.b64 	%rd723, {%r524, %r523};
	xor.b64  	%rd724, %rd723, %rd722;
	shf.l.wrap.b32 	%r525, %r519, %r520, 25;
	shf.l.wrap.b32 	%r526, %r520, %r519, 25;
	mov.b64 	%rd725, {%r526, %r525};
	xor.b64  	%rd726, %rd724, %rd725;
	and.b64  	%rd727, %rd707, %rd682;
	xor.b64  	%rd728, %rd707, %rd682;
	and.b64  	%rd729, %rd728, %rd1124;
	or.b64  	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd720, %rd730;
	add.s64 	%rd732, %rd731, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd721;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 14;
	shf.r.wrap.b32 	%r530, %r527, %r528, 14;
	mov.b64 	%rd733, {%r530, %r529};
	shf.r.wrap.b32 	%r531, %r528, %r527, 18;
	shf.r.wrap.b32 	%r532, %r527, %r528, 18;
	mov.b64 	%rd734, {%r532, %r531};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r533, %r527, %r528, 23;
	shf.l.wrap.b32 	%r534, %r528, %r527, 23;
	mov.b64 	%rd736, {%r534, %r533};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd696, %rd671;
	and.b64  	%rd739, %rd721, %rd738;
	xor.b64  	%rd740, %rd739, %rd671;
	add.s64 	%rd741, %rd1111, %rd1107;
	ld.const.u64 	%rd742, [%rd1103+152];
	add.s64 	%rd743, %rd741, %rd742;
	add.s64 	%rd744, %rd743, %rd740;
	add.s64 	%rd745, %rd744, %rd737;
	add.s64 	%rd746, %rd745, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd732;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 28;
	shf.r.wrap.b32 	%r538, %r535, %r536, 28;
	mov.b64 	%rd747, {%r538, %r537};
	shf.l.wrap.b32 	%r539, %r535, %r536, 30;
	shf.l.wrap.b32 	%r540, %r536, %r535, 30;
	mov.b64 	%rd748, {%r540, %r539};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r541, %r535, %r536, 25;
	shf.l.wrap.b32 	%r542, %r536, %r535, 25;
	mov.b64 	%rd750, {%r542, %r541};
	xor.b64  	%rd751, %rd749, %rd750;
	and.b64  	%rd752, %rd732, %rd707;
	xor.b64  	%rd753, %rd732, %rd707;
	and.b64  	%rd754, %rd753, %rd682;
	or.b64  	%rd755, %rd754, %rd752;
	add.s64 	%rd756, %rd745, %rd755;
	add.s64 	%rd757, %rd756, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd746;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 14;
	shf.r.wrap.b32 	%r546, %r543, %r544, 14;
	mov.b64 	%rd758, {%r546, %r545};
	shf.r.wrap.b32 	%r547, %r544, %r543, 18;
	shf.r.wrap.b32 	%r548, %r543, %r544, 18;
	mov.b64 	%rd759, {%r548, %r547};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.l.wrap.b32 	%r549, %r543, %r544, 23;
	shf.l.wrap.b32 	%r550, %r544, %r543, 23;
	mov.b64 	%rd761, {%r550, %r549};
	xor.b64  	%rd762, %rd760, %rd761;
	xor.b64  	%rd763, %rd721, %rd696;
	and.b64  	%rd764, %rd746, %rd763;
	xor.b64  	%rd765, %rd764, %rd696;
	add.s64 	%rd766, %rd671, %rd1112;
	ld.const.u64 	%rd767, [%rd1103+160];
	add.s64 	%rd768, %rd766, %rd767;
	add.s64 	%rd769, %rd768, %rd765;
	add.s64 	%rd770, %rd769, %rd762;
	add.s64 	%rd771, %rd770, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd757;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 28;
	shf.r.wrap.b32 	%r554, %r551, %r552, 28;
	mov.b64 	%rd772, {%r554, %r553};
	shf.l.wrap.b32 	%r555, %r551, %r552, 30;
	shf.l.wrap.b32 	%r556, %r552, %r551, 30;
	mov.b64 	%rd773, {%r556, %r555};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r557, %r551, %r552, 25;
	shf.l.wrap.b32 	%r558, %r552, %r551, 25;
	mov.b64 	%rd775, {%r558, %r557};
	xor.b64  	%rd776, %rd774, %rd775;
	and.b64  	%rd777, %rd757, %rd732;
	xor.b64  	%rd778, %rd757, %rd732;
	and.b64  	%rd779, %rd778, %rd707;
	or.b64  	%rd780, %rd779, %rd777;
	add.s64 	%rd781, %rd770, %rd780;
	add.s64 	%rd782, %rd781, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd771;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd783, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd784, {%r564, %r563};
	xor.b64  	%rd785, %rd784, %rd783;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd786, {%r566, %r565};
	xor.b64  	%rd787, %rd785, %rd786;
	xor.b64  	%rd788, %rd746, %rd721;
	and.b64  	%rd789, %rd771, %rd788;
	xor.b64  	%rd790, %rd789, %rd721;
	add.s64 	%rd791, %rd696, %rd1113;
	ld.const.u64 	%rd792, [%rd1103+168];
	add.s64 	%rd793, %rd791, %rd792;
	add.s64 	%rd794, %rd793, %rd790;
	add.s64 	%rd795, %rd794, %rd787;
	add.s64 	%rd796, %rd795, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd782;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd797, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd798, {%r572, %r571};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd800, {%r574, %r573};
	xor.b64  	%rd801, %rd799, %rd800;
	and.b64  	%rd802, %rd782, %rd757;
	xor.b64  	%rd803, %rd782, %rd757;
	and.b64  	%rd804, %rd803, %rd732;
	or.b64  	%rd805, %rd804, %rd802;
	add.s64 	%rd806, %rd795, %rd805;
	add.s64 	%rd807, %rd806, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd796;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 14;
	shf.r.wrap.b32 	%r578, %r575, %r576, 14;
	mov.b64 	%rd808, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 18;
	shf.r.wrap.b32 	%r580, %r575, %r576, 18;
	mov.b64 	%rd809, {%r580, %r579};
	xor.b64  	%rd810, %rd809, %rd808;
	shf.l.wrap.b32 	%r581, %r575, %r576, 23;
	shf.l.wrap.b32 	%r582, %r576, %r575, 23;
	mov.b64 	%rd811, {%r582, %r581};
	xor.b64  	%rd812, %rd810, %rd811;
	xor.b64  	%rd813, %rd771, %rd746;
	and.b64  	%rd814, %rd796, %rd813;
	xor.b64  	%rd815, %rd814, %rd746;
	add.s64 	%rd816, %rd721, %rd1114;
	ld.const.u64 	%rd817, [%rd1103+176];
	add.s64 	%rd818, %rd816, %rd817;
	add.s64 	%rd819, %rd818, %rd815;
	add.s64 	%rd820, %rd819, %rd812;
	add.s64 	%rd821, %rd820, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd807;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 28;
	shf.r.wrap.b32 	%r586, %r583, %r584, 28;
	mov.b64 	%rd822, {%r586, %r585};
	shf.l.wrap.b32 	%r587, %r583, %r584, 30;
	shf.l.wrap.b32 	%r588, %r584, %r583, 30;
	mov.b64 	%rd823, {%r588, %r587};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r589, %r583, %r584, 25;
	shf.l.wrap.b32 	%r590, %r584, %r583, 25;
	mov.b64 	%rd825, {%r590, %r589};
	xor.b64  	%rd826, %rd824, %rd825;
	and.b64  	%rd827, %rd807, %rd782;
	xor.b64  	%rd828, %rd807, %rd782;
	and.b64  	%rd829, %rd828, %rd757;
	or.b64  	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd820, %rd830;
	add.s64 	%rd832, %rd831, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd821;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 14;
	shf.r.wrap.b32 	%r594, %r591, %r592, 14;
	mov.b64 	%rd833, {%r594, %r593};
	shf.r.wrap.b32 	%r595, %r592, %r591, 18;
	shf.r.wrap.b32 	%r596, %r591, %r592, 18;
	mov.b64 	%rd834, {%r596, %r595};
	xor.b64  	%rd835, %rd834, %rd833;
	shf.l.wrap.b32 	%r597, %r591, %r592, 23;
	shf.l.wrap.b32 	%r598, %r592, %r591, 23;
	mov.b64 	%rd836, {%r598, %r597};
	xor.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd796, %rd771;
	and.b64  	%rd839, %rd821, %rd838;
	xor.b64  	%rd840, %rd839, %rd771;
	add.s64 	%rd841, %rd746, %rd1115;
	ld.const.u64 	%rd842, [%rd1103+184];
	add.s64 	%rd843, %rd841, %rd842;
	add.s64 	%rd844, %rd843, %rd840;
	add.s64 	%rd845, %rd844, %rd837;
	add.s64 	%rd846, %rd845, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd832;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 28;
	shf.r.wrap.b32 	%r602, %r599, %r600, 28;
	mov.b64 	%rd847, {%r602, %r601};
	shf.l.wrap.b32 	%r603, %r599, %r600, 30;
	shf.l.wrap.b32 	%r604, %r600, %r599, 30;
	mov.b64 	%rd848, {%r604, %r603};
	xor.b64  	%rd849, %rd848, %rd847;
	shf.l.wrap.b32 	%r605, %r599, %r600, 25;
	shf.l.wrap.b32 	%r606, %r600, %r599, 25;
	mov.b64 	%rd850, {%r606, %r605};
	xor.b64  	%rd851, %rd849, %rd850;
	and.b64  	%rd852, %rd832, %rd807;
	xor.b64  	%rd853, %rd832, %rd807;
	and.b64  	%rd854, %rd853, %rd782;
	or.b64  	%rd855, %rd854, %rd852;
	add.s64 	%rd856, %rd845, %rd855;
	add.s64 	%rd857, %rd856, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd846;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 14;
	shf.r.wrap.b32 	%r610, %r607, %r608, 14;
	mov.b64 	%rd858, {%r610, %r609};
	shf.r.wrap.b32 	%r611, %r608, %r607, 18;
	shf.r.wrap.b32 	%r612, %r607, %r608, 18;
	mov.b64 	%rd859, {%r612, %r611};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r613, %r607, %r608, 23;
	shf.l.wrap.b32 	%r614, %r608, %r607, 23;
	mov.b64 	%rd861, {%r614, %r613};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd821, %rd796;
	and.b64  	%rd864, %rd846, %rd863;
	xor.b64  	%rd865, %rd864, %rd796;
	add.s64 	%rd866, %rd771, %rd1116;
	ld.const.u64 	%rd867, [%rd1103+192];
	add.s64 	%rd868, %rd866, %rd867;
	add.s64 	%rd869, %rd868, %rd865;
	add.s64 	%rd870, %rd869, %rd862;
	add.s64 	%rd871, %rd870, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd857;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 28;
	shf.r.wrap.b32 	%r618, %r615, %r616, 28;
	mov.b64 	%rd872, {%r618, %r617};
	shf.l.wrap.b32 	%r619, %r615, %r616, 30;
	shf.l.wrap.b32 	%r620, %r616, %r615, 30;
	mov.b64 	%rd873, {%r620, %r619};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r621, %r615, %r616, 25;
	shf.l.wrap.b32 	%r622, %r616, %r615, 25;
	mov.b64 	%rd875, {%r622, %r621};
	xor.b64  	%rd876, %rd874, %rd875;
	and.b64  	%rd877, %rd857, %rd832;
	xor.b64  	%rd878, %rd857, %rd832;
	and.b64  	%rd879, %rd878, %rd807;
	or.b64  	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd870, %rd880;
	add.s64 	%rd882, %rd881, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd871;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 14;
	shf.r.wrap.b32 	%r626, %r623, %r624, 14;
	mov.b64 	%rd883, {%r626, %r625};
	shf.r.wrap.b32 	%r627, %r624, %r623, 18;
	shf.r.wrap.b32 	%r628, %r623, %r624, 18;
	mov.b64 	%rd884, {%r628, %r627};
	xor.b64  	%rd885, %rd884, %rd883;
	shf.l.wrap.b32 	%r629, %r623, %r624, 23;
	shf.l.wrap.b32 	%r630, %r624, %r623, 23;
	mov.b64 	%rd886, {%r630, %r629};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd846, %rd821;
	and.b64  	%rd889, %rd871, %rd888;
	xor.b64  	%rd890, %rd889, %rd821;
	add.s64 	%rd891, %rd796, %rd1117;
	ld.const.u64 	%rd892, [%rd1103+200];
	add.s64 	%rd893, %rd891, %rd892;
	add.s64 	%rd894, %rd893, %rd890;
	add.s64 	%rd895, %rd894, %rd887;
	add.s64 	%rd896, %rd895, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd882;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 28;
	shf.r.wrap.b32 	%r634, %r631, %r632, 28;
	mov.b64 	%rd897, {%r634, %r633};
	shf.l.wrap.b32 	%r635, %r631, %r632, 30;
	shf.l.wrap.b32 	%r636, %r632, %r631, 30;
	mov.b64 	%rd898, {%r636, %r635};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r637, %r631, %r632, 25;
	shf.l.wrap.b32 	%r638, %r632, %r631, 25;
	mov.b64 	%rd900, {%r638, %r637};
	xor.b64  	%rd901, %rd899, %rd900;
	and.b64  	%rd902, %rd882, %rd857;
	xor.b64  	%rd903, %rd882, %rd857;
	and.b64  	%rd904, %rd903, %rd832;
	or.b64  	%rd905, %rd904, %rd902;
	add.s64 	%rd906, %rd895, %rd905;
	add.s64 	%rd907, %rd906, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd896;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 14;
	shf.r.wrap.b32 	%r642, %r639, %r640, 14;
	mov.b64 	%rd908, {%r642, %r641};
	shf.r.wrap.b32 	%r643, %r640, %r639, 18;
	shf.r.wrap.b32 	%r644, %r639, %r640, 18;
	mov.b64 	%rd909, {%r644, %r643};
	xor.b64  	%rd910, %rd909, %rd908;
	shf.l.wrap.b32 	%r645, %r639, %r640, 23;
	shf.l.wrap.b32 	%r646, %r640, %r639, 23;
	mov.b64 	%rd911, {%r646, %r645};
	xor.b64  	%rd912, %rd910, %rd911;
	xor.b64  	%rd913, %rd871, %rd846;
	and.b64  	%rd914, %rd896, %rd913;
	xor.b64  	%rd915, %rd914, %rd846;
	add.s64 	%rd916, %rd821, %rd1118;
	ld.const.u64 	%rd917, [%rd1103+208];
	add.s64 	%rd918, %rd916, %rd917;
	add.s64 	%rd919, %rd918, %rd915;
	add.s64 	%rd920, %rd919, %rd912;
	add.s64 	%rd921, %rd920, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd907;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 28;
	shf.r.wrap.b32 	%r650, %r647, %r648, 28;
	mov.b64 	%rd922, {%r650, %r649};
	shf.l.wrap.b32 	%r651, %r647, %r648, 30;
	shf.l.wrap.b32 	%r652, %r648, %r647, 30;
	mov.b64 	%rd923, {%r652, %r651};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r653, %r647, %r648, 25;
	shf.l.wrap.b32 	%r654, %r648, %r647, 25;
	mov.b64 	%rd925, {%r654, %r653};
	xor.b64  	%rd926, %rd924, %rd925;
	and.b64  	%rd927, %rd907, %rd882;
	xor.b64  	%rd928, %rd907, %rd882;
	and.b64  	%rd929, %rd928, %rd857;
	or.b64  	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd920, %rd930;
	add.s64 	%rd932, %rd931, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd921;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 14;
	shf.r.wrap.b32 	%r658, %r655, %r656, 14;
	mov.b64 	%rd933, {%r658, %r657};
	shf.r.wrap.b32 	%r659, %r656, %r655, 18;
	shf.r.wrap.b32 	%r660, %r655, %r656, 18;
	mov.b64 	%rd934, {%r660, %r659};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r661, %r655, %r656, 23;
	shf.l.wrap.b32 	%r662, %r656, %r655, 23;
	mov.b64 	%rd936, {%r662, %r661};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd896, %rd871;
	and.b64  	%rd939, %rd921, %rd938;
	xor.b64  	%rd940, %rd939, %rd871;
	add.s64 	%rd941, %rd846, %rd1119;
	ld.const.u64 	%rd942, [%rd1103+216];
	add.s64 	%rd943, %rd941, %rd942;
	add.s64 	%rd944, %rd943, %rd940;
	add.s64 	%rd945, %rd944, %rd937;
	add.s64 	%rd946, %rd945, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd932;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 28;
	shf.r.wrap.b32 	%r666, %r663, %r664, 28;
	mov.b64 	%rd947, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 30;
	shf.l.wrap.b32 	%r668, %r664, %r663, 30;
	mov.b64 	%rd948, {%r668, %r667};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r669, %r663, %r664, 25;
	shf.l.wrap.b32 	%r670, %r664, %r663, 25;
	mov.b64 	%rd950, {%r670, %r669};
	xor.b64  	%rd951, %rd949, %rd950;
	and.b64  	%rd952, %rd932, %rd907;
	xor.b64  	%rd953, %rd932, %rd907;
	and.b64  	%rd954, %rd953, %rd882;
	or.b64  	%rd955, %rd954, %rd952;
	add.s64 	%rd956, %rd945, %rd955;
	add.s64 	%rd957, %rd956, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd946;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 14;
	shf.r.wrap.b32 	%r674, %r671, %r672, 14;
	mov.b64 	%rd958, {%r674, %r673};
	shf.r.wrap.b32 	%r675, %r672, %r671, 18;
	shf.r.wrap.b32 	%r676, %r671, %r672, 18;
	mov.b64 	%rd959, {%r676, %r675};
	xor.b64  	%rd960, %rd959, %rd958;
	shf.l.wrap.b32 	%r677, %r671, %r672, 23;
	shf.l.wrap.b32 	%r678, %r672, %r671, 23;
	mov.b64 	%rd961, {%r678, %r677};
	xor.b64  	%rd962, %rd960, %rd961;
	xor.b64  	%rd963, %rd921, %rd896;
	and.b64  	%rd964, %rd946, %rd963;
	xor.b64  	%rd965, %rd964, %rd896;
	add.s64 	%rd966, %rd871, %rd1120;
	ld.const.u64 	%rd967, [%rd1103+224];
	add.s64 	%rd968, %rd966, %rd967;
	add.s64 	%rd969, %rd968, %rd965;
	add.s64 	%rd970, %rd969, %rd962;
	add.s64 	%rd1104, %rd970, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd957;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 28;
	shf.r.wrap.b32 	%r682, %r679, %r680, 28;
	mov.b64 	%rd971, {%r682, %r681};
	shf.l.wrap.b32 	%r683, %r679, %r680, 30;
	shf.l.wrap.b32 	%r684, %r680, %r679, 30;
	mov.b64 	%rd972, {%r684, %r683};
	xor.b64  	%rd973, %rd972, %rd971;
	shf.l.wrap.b32 	%r685, %r679, %r680, 25;
	shf.l.wrap.b32 	%r686, %r680, %r679, 25;
	mov.b64 	%rd974, {%r686, %r685};
	xor.b64  	%rd975, %rd973, %rd974;
	and.b64  	%rd976, %rd957, %rd932;
	xor.b64  	%rd977, %rd957, %rd932;
	and.b64  	%rd978, %rd977, %rd907;
	or.b64  	%rd979, %rd978, %rd976;
	add.s64 	%rd980, %rd970, %rd979;
	add.s64 	%rd1127, %rd980, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd1104;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 14;
	shf.r.wrap.b32 	%r690, %r687, %r688, 14;
	mov.b64 	%rd981, {%r690, %r689};
	shf.r.wrap.b32 	%r691, %r688, %r687, 18;
	shf.r.wrap.b32 	%r692, %r687, %r688, 18;
	mov.b64 	%rd982, {%r692, %r691};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r693, %r687, %r688, 23;
	shf.l.wrap.b32 	%r694, %r688, %r687, 23;
	mov.b64 	%rd984, {%r694, %r693};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd946, %rd921;
	and.b64  	%rd987, %rd1104, %rd986;
	xor.b64  	%rd988, %rd987, %rd921;
	add.s64 	%rd989, %rd896, %rd1121;
	ld.const.u64 	%rd990, [%rd1103+232];
	add.s64 	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd991, %rd988;
	add.s64 	%rd993, %rd992, %rd985;
	add.s64 	%rd1105, %rd993, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1127;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 28;
	shf.r.wrap.b32 	%r698, %r695, %r696, 28;
	mov.b64 	%rd994, {%r698, %r697};
	shf.l.wrap.b32 	%r699, %r695, %r696, 30;
	shf.l.wrap.b32 	%r700, %r696, %r695, 30;
	mov.b64 	%rd995, {%r700, %r699};
	xor.b64  	%rd996, %rd995, %rd994;
	shf.l.wrap.b32 	%r701, %r695, %r696, 25;
	shf.l.wrap.b32 	%r702, %r696, %r695, 25;
	mov.b64 	%rd997, {%r702, %r701};
	xor.b64  	%rd998, %rd996, %rd997;
	and.b64  	%rd999, %rd1127, %rd957;
	xor.b64  	%rd1000, %rd1127, %rd957;
	and.b64  	%rd1001, %rd1000, %rd932;
	or.b64  	%rd1002, %rd1001, %rd999;
	add.s64 	%rd1003, %rd993, %rd1002;
	add.s64 	%rd1126, %rd1003, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1105;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 14;
	shf.r.wrap.b32 	%r706, %r703, %r704, 14;
	mov.b64 	%rd1004, {%r706, %r705};
	shf.r.wrap.b32 	%r707, %r704, %r703, 18;
	shf.r.wrap.b32 	%r708, %r703, %r704, 18;
	mov.b64 	%rd1005, {%r708, %r707};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	shf.l.wrap.b32 	%r709, %r703, %r704, 23;
	shf.l.wrap.b32 	%r710, %r704, %r703, 23;
	mov.b64 	%rd1007, {%r710, %r709};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd1104, %rd946;
	and.b64  	%rd1010, %rd1105, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd946;
	add.s64 	%rd1012, %rd921, %rd1122;
	ld.const.u64 	%rd1013, [%rd1103+240];
	add.s64 	%rd1014, %rd1012, %rd1013;
	add.s64 	%rd1015, %rd1014, %rd1011;
	add.s64 	%rd1016, %rd1015, %rd1008;
	add.s64 	%rd1106, %rd1016, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd1126;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 28;
	shf.r.wrap.b32 	%r714, %r711, %r712, 28;
	mov.b64 	%rd1017, {%r714, %r713};
	shf.l.wrap.b32 	%r715, %r711, %r712, 30;
	shf.l.wrap.b32 	%r716, %r712, %r711, 30;
	mov.b64 	%rd1018, {%r716, %r715};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r717, %r711, %r712, 25;
	shf.l.wrap.b32 	%r718, %r712, %r711, 25;
	mov.b64 	%rd1020, {%r718, %r717};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	and.b64  	%rd1022, %rd1126, %rd1127;
	xor.b64  	%rd1023, %rd1126, %rd1127;
	and.b64  	%rd1024, %rd1023, %rd957;
	or.b64  	%rd1025, %rd1024, %rd1022;
	add.s64 	%rd1026, %rd1016, %rd1025;
	add.s64 	%rd1125, %rd1026, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd1106;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 14;
	shf.r.wrap.b32 	%r722, %r719, %r720, 14;
	mov.b64 	%rd1027, {%r722, %r721};
	shf.r.wrap.b32 	%r723, %r720, %r719, 18;
	shf.r.wrap.b32 	%r724, %r719, %r720, 18;
	mov.b64 	%rd1028, {%r724, %r723};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r725, %r719, %r720, 23;
	shf.l.wrap.b32 	%r726, %r720, %r719, 23;
	mov.b64 	%rd1030, {%r726, %r725};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd1105, %rd1104;
	and.b64  	%rd1033, %rd1106, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1104;
	add.s64 	%rd1035, %rd946, %rd1123;
	ld.const.u64 	%rd1036, [%rd1103+248];
	add.s64 	%rd1037, %rd1035, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1034;
	add.s64 	%rd1039, %rd1038, %rd1031;
	add.s64 	%rd1107, %rd1039, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd1125;
	}
	shf.r.wrap.b32 	%r729, %r728, %r727, 28;
	shf.r.wrap.b32 	%r730, %r727, %r728, 28;
	mov.b64 	%rd1040, {%r730, %r729};
	shf.l.wrap.b32 	%r731, %r727, %r728, 30;
	shf.l.wrap.b32 	%r732, %r728, %r727, 30;
	mov.b64 	%rd1041, {%r732, %r731};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	shf.l.wrap.b32 	%r733, %r727, %r728, 25;
	shf.l.wrap.b32 	%r734, %r728, %r727, 25;
	mov.b64 	%rd1043, {%r734, %r733};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	and.b64  	%rd1045, %rd1125, %rd1126;
	xor.b64  	%rd1046, %rd1125, %rd1126;
	and.b64  	%rd1047, %rd1046, %rd1127;
	or.b64  	%rd1048, %rd1047, %rd1045;
	add.s64 	%rd1049, %rd1039, %rd1048;
	add.s64 	%rd1124, %rd1049, %rd1044;
	add.s32 	%r805, %r805, 16;
	setp.lt.s32	%p3, %r805, 80;
	mov.u64 	%rd1103, %rd84;
	@%p3 bra 	BB1_4;

	ld.param.u64 	%rd1075, [m01700_m08_param_6];
	mov.b64	{%r7, %r8}, %rd1104;
	mov.u32 	%r735, 1;
	mov.b64	{%r9, %r10}, %rd1127;
	add.s64 	%rd85, %rd2, -56;
	ld.global.u32 	%r736, [%rd2+-52];
	and.b32  	%r11, %r736, 31;
	shr.u32 	%r737, %r7, %r11;
	ld.global.u32 	%r12, [%rd2+-56];
	and.b32  	%r738, %r737, %r12;
	mul.wide.u32 	%rd1050, %r738, 4;
	add.s64 	%rd1051, %rd1075, %rd1050;
	and.b32  	%r739, %r7, 31;
	shl.b32 	%r13, %r735, %r739;
	ld.global.u32 	%r740, [%rd1051];
	and.b32  	%r741, %r740, %r13;
	setp.eq.s32	%p4, %r741, 0;
	@%p4 bra 	BB1_32;

	ld.param.u64 	%rd1076, [m01700_m08_param_7];
	shr.u32 	%r742, %r8, %r11;
	and.b32  	%r743, %r742, %r12;
	mul.wide.u32 	%rd1052, %r743, 4;
	add.s64 	%rd1053, %rd1076, %rd1052;
	and.b32  	%r744, %r8, 31;
	shl.b32 	%r14, %r735, %r744;
	ld.global.u32 	%r746, [%rd1053];
	and.b32  	%r747, %r746, %r14;
	setp.eq.s32	%p5, %r747, 0;
	@%p5 bra 	BB1_32;

	ld.param.u64 	%rd1090, [m01700_m08_param_8];
	shr.u32 	%r748, %r9, %r11;
	and.b32  	%r749, %r748, %r12;
	mul.wide.u32 	%rd1054, %r749, 4;
	add.s64 	%rd1055, %rd1090, %rd1054;
	and.b32  	%r750, %r9, 31;
	shl.b32 	%r15, %r735, %r750;
	ld.global.u32 	%r752, [%rd1055];
	and.b32  	%r753, %r752, %r15;
	setp.eq.s32	%p6, %r753, 0;
	@%p6 bra 	BB1_32;

	ld.param.u64 	%rd1091, [m01700_m08_param_9];
	shr.u32 	%r754, %r10, %r11;
	and.b32  	%r755, %r754, %r12;
	mul.wide.u32 	%rd1056, %r755, 4;
	add.s64 	%rd1057, %rd1091, %rd1056;
	and.b32  	%r756, %r10, 31;
	shl.b32 	%r16, %r735, %r756;
	ld.global.u32 	%r758, [%rd1057];
	and.b32  	%r759, %r758, %r16;
	setp.eq.s32	%p7, %r759, 0;
	@%p7 bra 	BB1_32;

	ld.param.u64 	%rd1092, [m01700_m08_param_10];
	ld.global.u32 	%r760, [%rd85+8];
	and.b32  	%r17, %r760, 31;
	shr.u32 	%r761, %r7, %r17;
	and.b32  	%r762, %r761, %r12;
	mul.wide.u32 	%rd1058, %r762, 4;
	add.s64 	%rd1059, %rd1092, %rd1058;
	ld.global.u32 	%r763, [%rd1059];
	and.b32  	%r764, %r763, %r13;
	setp.eq.s32	%p8, %r764, 0;
	@%p8 bra 	BB1_32;

	ld.param.u64 	%rd1093, [m01700_m08_param_11];
	shr.u32 	%r765, %r8, %r17;
	and.b32  	%r766, %r765, %r12;
	mul.wide.u32 	%rd1060, %r766, 4;
	add.s64 	%rd1061, %rd1093, %rd1060;
	ld.global.u32 	%r767, [%rd1061];
	and.b32  	%r768, %r767, %r14;
	setp.eq.s32	%p9, %r768, 0;
	@%p9 bra 	BB1_32;

	ld.param.u64 	%rd1094, [m01700_m08_param_12];
	shr.u32 	%r769, %r9, %r17;
	and.b32  	%r770, %r769, %r12;
	mul.wide.u32 	%rd1062, %r770, 4;
	add.s64 	%rd1063, %rd1094, %rd1062;
	ld.global.u32 	%r771, [%rd1063];
	and.b32  	%r772, %r771, %r15;
	setp.eq.s32	%p10, %r772, 0;
	@%p10 bra 	BB1_32;

	ld.param.u64 	%rd1095, [m01700_m08_param_13];
	shr.u32 	%r773, %r10, %r17;
	and.b32  	%r774, %r773, %r12;
	mul.wide.u32 	%rd1064, %r774, 4;
	add.s64 	%rd1065, %rd1095, %rd1064;
	ld.global.u32 	%r775, [%rd1065];
	and.b32  	%r776, %r775, %r16;
	setp.eq.s32	%p11, %r776, 0;
	@%p11 bra 	BB1_32;

	ld.global.u32 	%rd86, [%rd2+-24];
	ld.global.u32 	%r806, [%rd2+-28];
	setp.eq.s32	%p12, %r806, 0;
	mov.u32 	%r807, 0;
	mov.u32 	%r777, -1;
	@%p12 bra 	BB1_26;

BB1_14:
	ld.param.u64 	%rd1096, [m01700_m08_param_15];
	shr.u32 	%r21, %r806, 1;
	add.s32 	%r809, %r21, %r807;
	cvt.u64.u32	%rd1066, %r809;
	add.s64 	%rd1067, %rd1066, %rd86;
	shl.b64 	%rd1068, %rd1067, 6;
	add.s64 	%rd87, %rd1096, %rd1068;
	ld.global.u32 	%r23, [%rd87+28];
	setp.gt.u32	%p13, %r10, %r23;
	mov.u32 	%r808, %r735;
	@%p13 bra 	BB1_24;

	setp.lt.u32	%p14, %r10, %r23;
	mov.u32 	%r780, -1;
	@%p14 bra 	BB1_16;
	bra.uni 	BB1_17;

BB1_16:
	mov.u32 	%r808, %r780;
	bra.uni 	BB1_24;

BB1_17:
	ld.global.u32 	%r24, [%rd87+24];
	setp.gt.u32	%p15, %r9, %r24;
	mov.u32 	%r808, %r735;
	@%p15 bra 	BB1_24;

	setp.lt.u32	%p16, %r9, %r24;
	@%p16 bra 	BB1_19;
	bra.uni 	BB1_20;

BB1_19:
	mov.u32 	%r808, %r780;
	bra.uni 	BB1_24;

BB1_20:
	ld.global.u32 	%r25, [%rd87+60];
	setp.gt.u32	%p17, %r8, %r25;
	mov.u32 	%r808, %r735;
	@%p17 bra 	BB1_24;

	setp.lt.u32	%p18, %r8, %r25;
	mov.u32 	%r808, %r780;
	@%p18 bra 	BB1_24;

	ld.global.u32 	%r26, [%rd87+56];
	setp.gt.u32	%p19, %r7, %r26;
	mov.u32 	%r808, %r735;
	@%p19 bra 	BB1_24;

	setp.lt.u32	%p20, %r7, %r26;
	selp.b32	%r808, -1, 0, %p20;

BB1_24:
	add.s32 	%r786, %r21, 1;
	setp.gt.s32	%p21, %r808, 0;
	selp.b32	%r787, %r786, 0, %p21;
	add.s32 	%r807, %r787, %r807;
	selp.b32	%r788, -1, 0, %p21;
	add.s32 	%r789, %r788, %r806;
	shr.u32 	%r806, %r789, 1;
	setp.eq.s32	%p22, %r808, 0;
	@%p22 bra 	BB1_27;

	setp.ne.s32	%p23, %r806, 0;
	@%p23 bra 	BB1_14;

BB1_26:
	mov.u32 	%r809, %r777;

BB1_27:
	setp.eq.s32	%p24, %r809, -1;
	@%p24 bra 	BB1_32;

	add.u64 	%rd1098, %SPL, 4;
	ld.param.u64 	%rd1097, [m01700_m08_param_16];
	cvt.u32.u64	%r791, %rd86;
	add.s32 	%r32, %r791, %r809;
	mul.wide.u32 	%rd1069, %r32, 4;
	add.s64 	%rd1070, %rd1097, %rd1069;
	mov.u32 	%r792, 1;
	st.local.u32 	[%rd1098], %r792;
	ld.local.u32 	%r793, [%rd1098];
	atom.global.add.u32 	%r794, [%rd1070], %r793;
	setp.ne.s32	%p25, %r794, 0;
	@%p25 bra 	BB1_32;

	ld.global.u32 	%r33, [%rd2+-44];
	ld.global.u32 	%r795, [%rd2+-28];
	add.u64 	%rd1072, %SPL, 8;
	st.local.u32 	[%rd1072], %r792;
	ld.local.u32 	%r797, [%rd1072];
	atom.global.add.u32 	%r34, [%rd101], %r797;
	setp.lt.u32	%p26, %r34, %r795;
	@%p26 bra 	BB1_31;
	bra.uni 	BB1_30;

BB1_31:
	ld.param.u64 	%rd1102, [m01700_m08_param_14];
	mul.wide.u32 	%rd1073, %r34, 32;
	add.s64 	%rd1074, %rd1102, %rd1073;
	st.global.u32 	[%rd1074+12], %r33;
	st.global.u32 	[%rd1074+16], %r809;
	st.global.u32 	[%rd1074+20], %r32;
	st.global.u64 	[%rd1074], %rd1;
	st.global.u32 	[%rd1074+8], %r804;
	mov.u32 	%r802, 0;
	st.global.u32 	[%rd1074+24], %r802;
	st.global.u32 	[%rd1074+28], %r802;
	bra.uni 	BB1_32;

BB1_30:
	add.u64 	%rd1100, %SPL, 0;
	st.local.u32 	[%rd1100], %r792;
	ld.local.u32 	%r799, [%rd1100];
	neg.s32 	%r800, %r799;
	atom.global.add.u32 	%r801, [%rd101], %r800;

BB1_32:
	add.s32 	%r804, %r804, 1;
	ld.global.u32 	%r803, [%rd2+-32];
	setp.lt.u32	%p27, %r804, %r803;
	@%p27 bra 	BB1_3;

BB1_33:
	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .global .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .const .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 8 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 1 m01700_m16_param_20,
	.param .u64 .ptr .global .align 1 m01700_m16_param_21,
	.param .u64 .ptr .global .align 1 m01700_m16_param_22,
	.param .u64 .ptr .global .align 1 m01700_m16_param_23,
	.param .u64 .ptr .global .align 8 m01700_m16_param_24
)
{
	.local .align 4 .b8 	__local_depot2[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .b32 	%r<818>;
	.reg .b64 	%rd<1126>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd88, [m01700_m16_param_0];
	ld.param.u64 	%rd101, [m01700_m16_param_19];
	ld.param.u64 	%rd102, [m01700_m16_param_24];
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mov.b32	%r39, %envreg3;
	mad.lo.s32 	%r40, %r37, %r38, %r39;
	mov.u32 	%r41, %tid.x;
	add.s32 	%r1, %r40, %r41;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd102, 56;
	ld.global.u64 	%rd103, [%rd102+56];
	setp.ge.u64	%p1, %rd1, %rd103;
	@%p1 bra 	BB2_33;

	ld.global.u32 	%r42, [%rd2+-32];
	setp.eq.s32	%p2, %r42, 0;
	@%p2 bra 	BB2_33;

	mul.wide.s32 	%rd104, %r1, 260;
	add.s64 	%rd105, %rd88, %rd104;
	ld.global.u32 	%r2, [%rd105];
	ld.global.u32 	%r3, [%rd105+4];
	ld.global.u32 	%r44, [%rd105+8];
	ld.global.u32 	%r45, [%rd105+12];
	mov.u32 	%r812, 0;
	mov.b64	%rd3, {%r45, %r44};
	ld.global.u32 	%r46, [%rd105+16];
	ld.global.u32 	%r47, [%rd105+20];
	mov.b64	%rd4, {%r47, %r46};
	ld.global.u32 	%r48, [%rd105+24];
	ld.global.u32 	%r49, [%rd105+28];
	mov.b64	%rd5, {%r49, %r48};
	ld.global.u32 	%r50, [%rd105+32];
	ld.global.u32 	%r51, [%rd105+36];
	mov.b64	%rd6, {%r51, %r50};
	ld.global.u32 	%r52, [%rd105+40];
	ld.global.u32 	%r53, [%rd105+44];
	mov.b64	%rd7, {%r53, %r52};
	ld.global.u32 	%r54, [%rd105+48];
	ld.global.u32 	%r55, [%rd105+52];
	mov.b64	%rd8, {%r55, %r54};
	ld.global.u32 	%r56, [%rd105+56];
	ld.global.u32 	%r57, [%rd105+60];
	mov.b64	%rd9, {%r57, %r56};
	ld.const.u64 	%rd106, [k_sha512];
	add.s64 	%rd10, %rd106, 6620516959819538809;
	ld.const.u64 	%rd107, [k_sha512+8];
	add.s64 	%rd108, %rd3, %rd107;
	add.s64 	%rd11, %rd108, 2270897969802886507;
	ld.const.u64 	%rd109, [k_sha512+16];
	add.s64 	%rd110, %rd4, %rd109;
	add.s64 	%rd12, %rd110, -7276294671716946913;
	ld.const.u64 	%rd111, [k_sha512+24];
	add.s64 	%rd112, %rd5, %rd111;
	add.s64 	%rd13, %rd112, 5840696475078001361;

BB2_3:
	ld.const.u64 	%rd1090, [k_sha512+120];
	ld.const.u64 	%rd1089, [k_sha512+112];
	ld.const.u64 	%rd1088, [k_sha512+104];
	ld.const.u64 	%rd1087, [k_sha512+96];
	ld.const.u64 	%rd1086, [k_sha512+88];
	ld.const.u64 	%rd1085, [k_sha512+80];
	ld.const.u64 	%rd1084, [k_sha512+72];
	ld.const.u64 	%rd1083, [k_sha512+64];
	ld.const.u64 	%rd1082, [k_sha512+56];
	ld.const.u64 	%rd1081, [k_sha512+48];
	ld.const.u64 	%rd1080, [k_sha512+40];
	ld.const.u64 	%rd1079, [k_sha512+32];
	ld.param.u64 	%rd1078, [m01700_m16_param_3];
	mul.wide.u32 	%rd122, %r812, 4;
	add.s64 	%rd123, %rd1078, %rd122;
	ld.const.u32 	%r59, [%rd123];
	or.b32  	%r60, %r59, %r2;
	mov.b64	%rd1106, {%r3, %r60};
	add.s64 	%rd124, %rd10, %rd1106;
	add.s64 	%rd125, %rd124, 6412459576335945718;
	add.s64 	%rd126, %rd124, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd125;
	}
	shf.r.wrap.b32 	%r63, %r62, %r61, 14;
	shf.r.wrap.b32 	%r64, %r61, %r62, 14;
	mov.b64 	%rd127, {%r64, %r63};
	shf.r.wrap.b32 	%r65, %r62, %r61, 18;
	shf.r.wrap.b32 	%r66, %r61, %r62, 18;
	mov.b64 	%rd128, {%r66, %r65};
	xor.b64  	%rd129, %rd128, %rd127;
	shf.l.wrap.b32 	%r67, %r61, %r62, 23;
	shf.l.wrap.b32 	%r68, %r62, %r61, 23;
	mov.b64 	%rd130, {%r68, %r67};
	xor.b64  	%rd131, %rd129, %rd130;
	and.b64  	%rd132, %rd125, -3887949035690463538;
	xor.b64  	%rd133, %rd132, -7276294671716946913;
	add.s64 	%rd134, %rd11, %rd131;
	add.s64 	%rd135, %rd134, %rd133;
	add.s64 	%rd136, %rd135, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd126;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 28;
	shf.r.wrap.b32 	%r72, %r69, %r70, 28;
	mov.b64 	%rd137, {%r72, %r71};
	shf.l.wrap.b32 	%r73, %r69, %r70, 30;
	shf.l.wrap.b32 	%r74, %r70, %r69, 30;
	mov.b64 	%rd138, {%r74, %r73};
	xor.b64  	%rd139, %rd138, %rd137;
	shf.l.wrap.b32 	%r75, %r69, %r70, 25;
	shf.l.wrap.b32 	%r76, %r70, %r69, 25;
	mov.b64 	%rd140, {%r76, %r75};
	xor.b64  	%rd141, %rd139, %rd140;
	add.s64 	%rd142, %rd135, %rd141;
	and.b64  	%rd143, %rd126, 7640891576956012808;
	and.b64  	%rd144, %rd126, -4942790177534073029;
	xor.b64  	%rd145, %rd144, 3026882967131160840;
	or.b64  	%rd146, %rd145, %rd143;
	add.s64 	%rd147, %rd142, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd136;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 14;
	shf.r.wrap.b32 	%r80, %r77, %r78, 14;
	mov.b64 	%rd148, {%r80, %r79};
	shf.r.wrap.b32 	%r81, %r78, %r77, 18;
	shf.r.wrap.b32 	%r82, %r77, %r78, 18;
	mov.b64 	%rd149, {%r82, %r81};
	xor.b64  	%rd150, %rd149, %rd148;
	shf.l.wrap.b32 	%r83, %r77, %r78, 23;
	shf.l.wrap.b32 	%r84, %r78, %r77, 23;
	mov.b64 	%rd151, {%r84, %r83};
	xor.b64  	%rd152, %rd150, %rd151;
	xor.b64  	%rd153, %rd125, 5840696475078001361;
	and.b64  	%rd154, %rd136, %rd153;
	xor.b64  	%rd155, %rd154, 5840696475078001361;
	add.s64 	%rd156, %rd12, %rd155;
	add.s64 	%rd157, %rd156, %rd152;
	add.s64 	%rd158, %rd157, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd147;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 28;
	shf.r.wrap.b32 	%r88, %r85, %r86, 28;
	mov.b64 	%rd159, {%r88, %r87};
	shf.l.wrap.b32 	%r89, %r85, %r86, 30;
	shf.l.wrap.b32 	%r90, %r86, %r85, 30;
	mov.b64 	%rd160, {%r90, %r89};
	xor.b64  	%rd161, %rd160, %rd159;
	shf.l.wrap.b32 	%r91, %r85, %r86, 25;
	shf.l.wrap.b32 	%r92, %r86, %r85, 25;
	mov.b64 	%rd162, {%r92, %r91};
	xor.b64  	%rd163, %rd161, %rd162;
	and.b64  	%rd164, %rd147, %rd126;
	xor.b64  	%rd165, %rd147, %rd126;
	and.b64  	%rd166, %rd165, 7640891576956012808;
	or.b64  	%rd167, %rd166, %rd164;
	add.s64 	%rd168, %rd167, %rd157;
	add.s64 	%rd169, %rd168, %rd163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd158;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 14;
	shf.r.wrap.b32 	%r96, %r93, %r94, 14;
	mov.b64 	%rd170, {%r96, %r95};
	shf.r.wrap.b32 	%r97, %r94, %r93, 18;
	shf.r.wrap.b32 	%r98, %r93, %r94, 18;
	mov.b64 	%rd171, {%r98, %r97};
	xor.b64  	%rd172, %rd171, %rd170;
	shf.l.wrap.b32 	%r99, %r93, %r94, 23;
	shf.l.wrap.b32 	%r100, %r94, %r93, 23;
	mov.b64 	%rd173, {%r100, %r99};
	xor.b64  	%rd174, %rd172, %rd173;
	xor.b64  	%rd175, %rd136, %rd125;
	and.b64  	%rd176, %rd158, %rd175;
	xor.b64  	%rd177, %rd176, %rd125;
	add.s64 	%rd178, %rd13, %rd177;
	add.s64 	%rd179, %rd178, %rd174;
	add.s64 	%rd180, %rd179, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd169;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 28;
	shf.r.wrap.b32 	%r104, %r101, %r102, 28;
	mov.b64 	%rd181, {%r104, %r103};
	shf.l.wrap.b32 	%r105, %r101, %r102, 30;
	shf.l.wrap.b32 	%r106, %r102, %r101, 30;
	mov.b64 	%rd182, {%r106, %r105};
	xor.b64  	%rd183, %rd182, %rd181;
	shf.l.wrap.b32 	%r107, %r101, %r102, 25;
	shf.l.wrap.b32 	%r108, %r102, %r101, 25;
	mov.b64 	%rd184, {%r108, %r107};
	xor.b64  	%rd185, %rd183, %rd184;
	and.b64  	%rd186, %rd169, %rd147;
	xor.b64  	%rd187, %rd169, %rd147;
	and.b64  	%rd188, %rd187, %rd126;
	or.b64  	%rd189, %rd188, %rd186;
	add.s64 	%rd190, %rd179, %rd189;
	add.s64 	%rd191, %rd190, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd180;
	}
	shf.r.wrap.b32 	%r111, %r110, %r109, 14;
	shf.r.wrap.b32 	%r112, %r109, %r110, 14;
	mov.b64 	%rd192, {%r112, %r111};
	shf.r.wrap.b32 	%r113, %r110, %r109, 18;
	shf.r.wrap.b32 	%r114, %r109, %r110, 18;
	mov.b64 	%rd193, {%r114, %r113};
	xor.b64  	%rd194, %rd193, %rd192;
	shf.l.wrap.b32 	%r115, %r109, %r110, 23;
	shf.l.wrap.b32 	%r116, %r110, %r109, 23;
	mov.b64 	%rd195, {%r116, %r115};
	xor.b64  	%rd196, %rd194, %rd195;
	xor.b64  	%rd197, %rd158, %rd136;
	and.b64  	%rd198, %rd180, %rd197;
	xor.b64  	%rd199, %rd198, %rd136;
	add.s64 	%rd200, %rd125, %rd6;
	add.s64 	%rd201, %rd200, %rd1079;
	add.s64 	%rd202, %rd201, %rd199;
	add.s64 	%rd203, %rd202, %rd196;
	add.s64 	%rd204, %rd203, %rd126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd191;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 28;
	shf.r.wrap.b32 	%r120, %r117, %r118, 28;
	mov.b64 	%rd205, {%r120, %r119};
	shf.l.wrap.b32 	%r121, %r117, %r118, 30;
	shf.l.wrap.b32 	%r122, %r118, %r117, 30;
	mov.b64 	%rd206, {%r122, %r121};
	xor.b64  	%rd207, %rd206, %rd205;
	shf.l.wrap.b32 	%r123, %r117, %r118, 25;
	shf.l.wrap.b32 	%r124, %r118, %r117, 25;
	mov.b64 	%rd208, {%r124, %r123};
	xor.b64  	%rd209, %rd207, %rd208;
	and.b64  	%rd210, %rd191, %rd169;
	xor.b64  	%rd211, %rd191, %rd169;
	and.b64  	%rd212, %rd211, %rd147;
	or.b64  	%rd213, %rd212, %rd210;
	add.s64 	%rd214, %rd203, %rd213;
	add.s64 	%rd215, %rd214, %rd209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd204;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 14;
	shf.r.wrap.b32 	%r128, %r125, %r126, 14;
	mov.b64 	%rd216, {%r128, %r127};
	shf.r.wrap.b32 	%r129, %r126, %r125, 18;
	shf.r.wrap.b32 	%r130, %r125, %r126, 18;
	mov.b64 	%rd217, {%r130, %r129};
	xor.b64  	%rd218, %rd217, %rd216;
	shf.l.wrap.b32 	%r131, %r125, %r126, 23;
	shf.l.wrap.b32 	%r132, %r126, %r125, 23;
	mov.b64 	%rd219, {%r132, %r131};
	xor.b64  	%rd220, %rd218, %rd219;
	xor.b64  	%rd221, %rd180, %rd158;
	and.b64  	%rd222, %rd204, %rd221;
	xor.b64  	%rd223, %rd222, %rd158;
	add.s64 	%rd224, %rd136, %rd7;
	add.s64 	%rd225, %rd224, %rd1080;
	add.s64 	%rd226, %rd225, %rd223;
	add.s64 	%rd227, %rd226, %rd220;
	add.s64 	%rd228, %rd227, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd215;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 28;
	shf.r.wrap.b32 	%r136, %r133, %r134, 28;
	mov.b64 	%rd229, {%r136, %r135};
	shf.l.wrap.b32 	%r137, %r133, %r134, 30;
	shf.l.wrap.b32 	%r138, %r134, %r133, 30;
	mov.b64 	%rd230, {%r138, %r137};
	xor.b64  	%rd231, %rd230, %rd229;
	shf.l.wrap.b32 	%r139, %r133, %r134, 25;
	shf.l.wrap.b32 	%r140, %r134, %r133, 25;
	mov.b64 	%rd232, {%r140, %r139};
	xor.b64  	%rd233, %rd231, %rd232;
	and.b64  	%rd234, %rd215, %rd191;
	xor.b64  	%rd235, %rd215, %rd191;
	and.b64  	%rd236, %rd235, %rd169;
	or.b64  	%rd237, %rd236, %rd234;
	add.s64 	%rd238, %rd227, %rd237;
	add.s64 	%rd239, %rd238, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd228;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 14;
	shf.r.wrap.b32 	%r144, %r141, %r142, 14;
	mov.b64 	%rd240, {%r144, %r143};
	shf.r.wrap.b32 	%r145, %r142, %r141, 18;
	shf.r.wrap.b32 	%r146, %r141, %r142, 18;
	mov.b64 	%rd241, {%r146, %r145};
	xor.b64  	%rd242, %rd241, %rd240;
	shf.l.wrap.b32 	%r147, %r141, %r142, 23;
	shf.l.wrap.b32 	%r148, %r142, %r141, 23;
	mov.b64 	%rd243, {%r148, %r147};
	xor.b64  	%rd244, %rd242, %rd243;
	xor.b64  	%rd245, %rd204, %rd180;
	and.b64  	%rd246, %rd228, %rd245;
	xor.b64  	%rd247, %rd246, %rd180;
	add.s64 	%rd248, %rd158, %rd8;
	add.s64 	%rd249, %rd248, %rd1081;
	add.s64 	%rd250, %rd249, %rd247;
	add.s64 	%rd251, %rd250, %rd244;
	add.s64 	%rd252, %rd251, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd239;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 28;
	shf.r.wrap.b32 	%r152, %r149, %r150, 28;
	mov.b64 	%rd253, {%r152, %r151};
	shf.l.wrap.b32 	%r153, %r149, %r150, 30;
	shf.l.wrap.b32 	%r154, %r150, %r149, 30;
	mov.b64 	%rd254, {%r154, %r153};
	xor.b64  	%rd255, %rd254, %rd253;
	shf.l.wrap.b32 	%r155, %r149, %r150, 25;
	shf.l.wrap.b32 	%r156, %r150, %r149, 25;
	mov.b64 	%rd256, {%r156, %r155};
	xor.b64  	%rd257, %rd255, %rd256;
	and.b64  	%rd258, %rd239, %rd215;
	xor.b64  	%rd259, %rd239, %rd215;
	and.b64  	%rd260, %rd259, %rd191;
	or.b64  	%rd261, %rd260, %rd258;
	add.s64 	%rd262, %rd251, %rd261;
	add.s64 	%rd263, %rd262, %rd257;
	add.s64 	%rd264, %rd1082, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd252;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 14;
	shf.r.wrap.b32 	%r160, %r157, %r158, 14;
	mov.b64 	%rd265, {%r160, %r159};
	shf.r.wrap.b32 	%r161, %r158, %r157, 18;
	shf.r.wrap.b32 	%r162, %r157, %r158, 18;
	mov.b64 	%rd266, {%r162, %r161};
	xor.b64  	%rd267, %rd266, %rd265;
	shf.l.wrap.b32 	%r163, %r157, %r158, 23;
	shf.l.wrap.b32 	%r164, %r158, %r157, 23;
	mov.b64 	%rd268, {%r164, %r163};
	xor.b64  	%rd269, %rd267, %rd268;
	xor.b64  	%rd270, %rd228, %rd204;
	and.b64  	%rd271, %rd252, %rd270;
	xor.b64  	%rd272, %rd271, %rd204;
	add.s64 	%rd273, %rd264, %rd272;
	add.s64 	%rd274, %rd273, %rd269;
	add.s64 	%rd275, %rd274, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd263;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 28;
	shf.r.wrap.b32 	%r168, %r165, %r166, 28;
	mov.b64 	%rd276, {%r168, %r167};
	shf.l.wrap.b32 	%r169, %r165, %r166, 30;
	shf.l.wrap.b32 	%r170, %r166, %r165, 30;
	mov.b64 	%rd277, {%r170, %r169};
	xor.b64  	%rd278, %rd277, %rd276;
	shf.l.wrap.b32 	%r171, %r165, %r166, 25;
	shf.l.wrap.b32 	%r172, %r166, %r165, 25;
	mov.b64 	%rd279, {%r172, %r171};
	xor.b64  	%rd280, %rd278, %rd279;
	and.b64  	%rd281, %rd263, %rd239;
	xor.b64  	%rd282, %rd263, %rd239;
	and.b64  	%rd283, %rd282, %rd215;
	or.b64  	%rd284, %rd283, %rd281;
	add.s64 	%rd285, %rd274, %rd284;
	add.s64 	%rd286, %rd285, %rd280;
	add.s64 	%rd287, %rd1083, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd275;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 14;
	shf.r.wrap.b32 	%r176, %r173, %r174, 14;
	mov.b64 	%rd288, {%r176, %r175};
	shf.r.wrap.b32 	%r177, %r174, %r173, 18;
	shf.r.wrap.b32 	%r178, %r173, %r174, 18;
	mov.b64 	%rd289, {%r178, %r177};
	xor.b64  	%rd290, %rd289, %rd288;
	shf.l.wrap.b32 	%r179, %r173, %r174, 23;
	shf.l.wrap.b32 	%r180, %r174, %r173, 23;
	mov.b64 	%rd291, {%r180, %r179};
	xor.b64  	%rd292, %rd290, %rd291;
	xor.b64  	%rd293, %rd252, %rd228;
	and.b64  	%rd294, %rd275, %rd293;
	xor.b64  	%rd295, %rd294, %rd228;
	add.s64 	%rd296, %rd287, %rd295;
	add.s64 	%rd297, %rd296, %rd292;
	add.s64 	%rd298, %rd297, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd286;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 28;
	shf.r.wrap.b32 	%r184, %r181, %r182, 28;
	mov.b64 	%rd299, {%r184, %r183};
	shf.l.wrap.b32 	%r185, %r181, %r182, 30;
	shf.l.wrap.b32 	%r186, %r182, %r181, 30;
	mov.b64 	%rd300, {%r186, %r185};
	xor.b64  	%rd301, %rd300, %rd299;
	shf.l.wrap.b32 	%r187, %r181, %r182, 25;
	shf.l.wrap.b32 	%r188, %r182, %r181, 25;
	mov.b64 	%rd302, {%r188, %r187};
	xor.b64  	%rd303, %rd301, %rd302;
	and.b64  	%rd304, %rd286, %rd263;
	xor.b64  	%rd305, %rd286, %rd263;
	and.b64  	%rd306, %rd305, %rd239;
	or.b64  	%rd307, %rd306, %rd304;
	add.s64 	%rd308, %rd297, %rd307;
	add.s64 	%rd309, %rd308, %rd303;
	add.s64 	%rd310, %rd1084, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd298;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 14;
	shf.r.wrap.b32 	%r192, %r189, %r190, 14;
	mov.b64 	%rd311, {%r192, %r191};
	shf.r.wrap.b32 	%r193, %r190, %r189, 18;
	shf.r.wrap.b32 	%r194, %r189, %r190, 18;
	mov.b64 	%rd312, {%r194, %r193};
	xor.b64  	%rd313, %rd312, %rd311;
	shf.l.wrap.b32 	%r195, %r189, %r190, 23;
	shf.l.wrap.b32 	%r196, %r190, %r189, 23;
	mov.b64 	%rd314, {%r196, %r195};
	xor.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd275, %rd252;
	and.b64  	%rd317, %rd298, %rd316;
	xor.b64  	%rd318, %rd317, %rd252;
	add.s64 	%rd319, %rd310, %rd318;
	add.s64 	%rd320, %rd319, %rd315;
	add.s64 	%rd321, %rd320, %rd239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd309;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 28;
	shf.r.wrap.b32 	%r200, %r197, %r198, 28;
	mov.b64 	%rd322, {%r200, %r199};
	shf.l.wrap.b32 	%r201, %r197, %r198, 30;
	shf.l.wrap.b32 	%r202, %r198, %r197, 30;
	mov.b64 	%rd323, {%r202, %r201};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r203, %r197, %r198, 25;
	shf.l.wrap.b32 	%r204, %r198, %r197, 25;
	mov.b64 	%rd325, {%r204, %r203};
	xor.b64  	%rd326, %rd324, %rd325;
	and.b64  	%rd327, %rd309, %rd286;
	xor.b64  	%rd328, %rd309, %rd286;
	and.b64  	%rd329, %rd328, %rd263;
	or.b64  	%rd330, %rd329, %rd327;
	add.s64 	%rd331, %rd320, %rd330;
	add.s64 	%rd332, %rd331, %rd326;
	add.s64 	%rd333, %rd1085, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd321;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 14;
	shf.r.wrap.b32 	%r208, %r205, %r206, 14;
	mov.b64 	%rd334, {%r208, %r207};
	shf.r.wrap.b32 	%r209, %r206, %r205, 18;
	shf.r.wrap.b32 	%r210, %r205, %r206, 18;
	mov.b64 	%rd335, {%r210, %r209};
	xor.b64  	%rd336, %rd335, %rd334;
	shf.l.wrap.b32 	%r211, %r205, %r206, 23;
	shf.l.wrap.b32 	%r212, %r206, %r205, 23;
	mov.b64 	%rd337, {%r212, %r211};
	xor.b64  	%rd338, %rd336, %rd337;
	xor.b64  	%rd339, %rd298, %rd275;
	and.b64  	%rd340, %rd321, %rd339;
	xor.b64  	%rd341, %rd340, %rd275;
	add.s64 	%rd342, %rd333, %rd341;
	add.s64 	%rd343, %rd342, %rd338;
	add.s64 	%rd344, %rd343, %rd263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd332;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 28;
	shf.r.wrap.b32 	%r216, %r213, %r214, 28;
	mov.b64 	%rd345, {%r216, %r215};
	shf.l.wrap.b32 	%r217, %r213, %r214, 30;
	shf.l.wrap.b32 	%r218, %r214, %r213, 30;
	mov.b64 	%rd346, {%r218, %r217};
	xor.b64  	%rd347, %rd346, %rd345;
	shf.l.wrap.b32 	%r219, %r213, %r214, 25;
	shf.l.wrap.b32 	%r220, %r214, %r213, 25;
	mov.b64 	%rd348, {%r220, %r219};
	xor.b64  	%rd349, %rd347, %rd348;
	and.b64  	%rd350, %rd332, %rd309;
	xor.b64  	%rd351, %rd332, %rd309;
	and.b64  	%rd352, %rd351, %rd286;
	or.b64  	%rd353, %rd352, %rd350;
	add.s64 	%rd354, %rd343, %rd353;
	add.s64 	%rd355, %rd354, %rd349;
	add.s64 	%rd356, %rd1086, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd344;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 14;
	shf.r.wrap.b32 	%r224, %r221, %r222, 14;
	mov.b64 	%rd357, {%r224, %r223};
	shf.r.wrap.b32 	%r225, %r222, %r221, 18;
	shf.r.wrap.b32 	%r226, %r221, %r222, 18;
	mov.b64 	%rd358, {%r226, %r225};
	xor.b64  	%rd359, %rd358, %rd357;
	shf.l.wrap.b32 	%r227, %r221, %r222, 23;
	shf.l.wrap.b32 	%r228, %r222, %r221, 23;
	mov.b64 	%rd360, {%r228, %r227};
	xor.b64  	%rd361, %rd359, %rd360;
	xor.b64  	%rd362, %rd321, %rd298;
	and.b64  	%rd363, %rd344, %rd362;
	xor.b64  	%rd364, %rd363, %rd298;
	add.s64 	%rd365, %rd356, %rd364;
	add.s64 	%rd366, %rd365, %rd361;
	add.s64 	%rd367, %rd366, %rd286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd355;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 28;
	shf.r.wrap.b32 	%r232, %r229, %r230, 28;
	mov.b64 	%rd368, {%r232, %r231};
	shf.l.wrap.b32 	%r233, %r229, %r230, 30;
	shf.l.wrap.b32 	%r234, %r230, %r229, 30;
	mov.b64 	%rd369, {%r234, %r233};
	xor.b64  	%rd370, %rd369, %rd368;
	shf.l.wrap.b32 	%r235, %r229, %r230, 25;
	shf.l.wrap.b32 	%r236, %r230, %r229, 25;
	mov.b64 	%rd371, {%r236, %r235};
	xor.b64  	%rd372, %rd370, %rd371;
	and.b64  	%rd373, %rd355, %rd332;
	xor.b64  	%rd374, %rd355, %rd332;
	and.b64  	%rd375, %rd374, %rd309;
	or.b64  	%rd376, %rd375, %rd373;
	add.s64 	%rd377, %rd366, %rd376;
	add.s64 	%rd378, %rd377, %rd372;
	add.s64 	%rd379, %rd1087, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd367;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 14;
	shf.r.wrap.b32 	%r240, %r237, %r238, 14;
	mov.b64 	%rd380, {%r240, %r239};
	shf.r.wrap.b32 	%r241, %r238, %r237, 18;
	shf.r.wrap.b32 	%r242, %r237, %r238, 18;
	mov.b64 	%rd381, {%r242, %r241};
	xor.b64  	%rd382, %rd381, %rd380;
	shf.l.wrap.b32 	%r243, %r237, %r238, 23;
	shf.l.wrap.b32 	%r244, %r238, %r237, 23;
	mov.b64 	%rd383, {%r244, %r243};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd344, %rd321;
	and.b64  	%rd386, %rd367, %rd385;
	xor.b64  	%rd387, %rd386, %rd321;
	add.s64 	%rd388, %rd379, %rd387;
	add.s64 	%rd389, %rd388, %rd384;
	add.s64 	%rd1102, %rd389, %rd309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd378;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 28;
	shf.r.wrap.b32 	%r248, %r245, %r246, 28;
	mov.b64 	%rd390, {%r248, %r247};
	shf.l.wrap.b32 	%r249, %r245, %r246, 30;
	shf.l.wrap.b32 	%r250, %r246, %r245, 30;
	mov.b64 	%rd391, {%r250, %r249};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r251, %r245, %r246, 25;
	shf.l.wrap.b32 	%r252, %r246, %r245, 25;
	mov.b64 	%rd393, {%r252, %r251};
	xor.b64  	%rd394, %rd392, %rd393;
	and.b64  	%rd395, %rd378, %rd355;
	xor.b64  	%rd396, %rd378, %rd355;
	and.b64  	%rd397, %rd396, %rd332;
	or.b64  	%rd398, %rd397, %rd395;
	add.s64 	%rd399, %rd389, %rd398;
	add.s64 	%rd1125, %rd399, %rd394;
	add.s64 	%rd400, %rd1088, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd1102;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 14;
	shf.r.wrap.b32 	%r256, %r253, %r254, 14;
	mov.b64 	%rd401, {%r256, %r255};
	shf.r.wrap.b32 	%r257, %r254, %r253, 18;
	shf.r.wrap.b32 	%r258, %r253, %r254, 18;
	mov.b64 	%rd402, {%r258, %r257};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r259, %r253, %r254, 23;
	shf.l.wrap.b32 	%r260, %r254, %r253, 23;
	mov.b64 	%rd404, {%r260, %r259};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd367, %rd344;
	and.b64  	%rd407, %rd1102, %rd406;
	xor.b64  	%rd408, %rd407, %rd344;
	add.s64 	%rd409, %rd400, %rd408;
	add.s64 	%rd410, %rd409, %rd405;
	add.s64 	%rd1103, %rd410, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd1125;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 28;
	shf.r.wrap.b32 	%r264, %r261, %r262, 28;
	mov.b64 	%rd411, {%r264, %r263};
	shf.l.wrap.b32 	%r265, %r261, %r262, 30;
	shf.l.wrap.b32 	%r266, %r262, %r261, 30;
	mov.b64 	%rd412, {%r266, %r265};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r267, %r261, %r262, 25;
	shf.l.wrap.b32 	%r268, %r262, %r261, 25;
	mov.b64 	%rd414, {%r268, %r267};
	xor.b64  	%rd415, %rd413, %rd414;
	and.b64  	%rd416, %rd1125, %rd378;
	xor.b64  	%rd417, %rd1125, %rd378;
	and.b64  	%rd418, %rd417, %rd355;
	or.b64  	%rd419, %rd418, %rd416;
	add.s64 	%rd420, %rd410, %rd419;
	add.s64 	%rd1124, %rd420, %rd415;
	add.s64 	%rd421, %rd1089, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd1103;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 14;
	shf.r.wrap.b32 	%r272, %r269, %r270, 14;
	mov.b64 	%rd422, {%r272, %r271};
	shf.r.wrap.b32 	%r273, %r270, %r269, 18;
	shf.r.wrap.b32 	%r274, %r269, %r270, 18;
	mov.b64 	%rd423, {%r274, %r273};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r275, %r269, %r270, 23;
	shf.l.wrap.b32 	%r276, %r270, %r269, 23;
	mov.b64 	%rd425, {%r276, %r275};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd1102, %rd367;
	and.b64  	%rd428, %rd1103, %rd427;
	xor.b64  	%rd429, %rd428, %rd367;
	add.s64 	%rd430, %rd421, %rd429;
	add.s64 	%rd431, %rd430, %rd426;
	add.s64 	%rd1104, %rd431, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd1124;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 28;
	shf.r.wrap.b32 	%r280, %r277, %r278, 28;
	mov.b64 	%rd432, {%r280, %r279};
	shf.l.wrap.b32 	%r281, %r277, %r278, 30;
	shf.l.wrap.b32 	%r282, %r278, %r277, 30;
	mov.b64 	%rd433, {%r282, %r281};
	xor.b64  	%rd434, %rd433, %rd432;
	shf.l.wrap.b32 	%r283, %r277, %r278, 25;
	shf.l.wrap.b32 	%r284, %r278, %r277, 25;
	mov.b64 	%rd435, {%r284, %r283};
	xor.b64  	%rd436, %rd434, %rd435;
	and.b64  	%rd437, %rd1124, %rd1125;
	xor.b64  	%rd438, %rd1124, %rd1125;
	and.b64  	%rd439, %rd438, %rd378;
	or.b64  	%rd440, %rd439, %rd437;
	add.s64 	%rd441, %rd431, %rd440;
	add.s64 	%rd1123, %rd441, %rd436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd1104;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 14;
	shf.r.wrap.b32 	%r288, %r285, %r286, 14;
	mov.b64 	%rd442, {%r288, %r287};
	shf.r.wrap.b32 	%r289, %r286, %r285, 18;
	shf.r.wrap.b32 	%r290, %r285, %r286, 18;
	mov.b64 	%rd443, {%r290, %r289};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r291, %r285, %r286, 23;
	shf.l.wrap.b32 	%r292, %r286, %r285, 23;
	mov.b64 	%rd445, {%r292, %r291};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd1103, %rd1102;
	and.b64  	%rd448, %rd1104, %rd447;
	xor.b64  	%rd449, %rd448, %rd1102;
	add.s64 	%rd450, %rd367, %rd9;
	add.s64 	%rd451, %rd450, %rd1090;
	add.s64 	%rd452, %rd451, %rd449;
	add.s64 	%rd453, %rd452, %rd446;
	add.s64 	%rd1105, %rd453, %rd378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd1123;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 28;
	shf.r.wrap.b32 	%r296, %r293, %r294, 28;
	mov.b64 	%rd454, {%r296, %r295};
	shf.l.wrap.b32 	%r297, %r293, %r294, 30;
	shf.l.wrap.b32 	%r298, %r294, %r293, 30;
	mov.b64 	%rd455, {%r298, %r297};
	xor.b64  	%rd456, %rd455, %rd454;
	shf.l.wrap.b32 	%r299, %r293, %r294, 25;
	shf.l.wrap.b32 	%r300, %r294, %r293, 25;
	mov.b64 	%rd457, {%r300, %r299};
	xor.b64  	%rd458, %rd456, %rd457;
	and.b64  	%rd459, %rd1123, %rd1124;
	xor.b64  	%rd460, %rd1123, %rd1124;
	and.b64  	%rd461, %rd460, %rd1125;
	or.b64  	%rd462, %rd461, %rd459;
	add.s64 	%rd463, %rd453, %rd462;
	add.s64 	%rd1122, %rd463, %rd458;
	mov.u64 	%rd1113, 0;
	mov.u32 	%r813, 16;
	mov.u64 	%rd1101, k_sha512;
	mov.u64 	%rd1107, %rd3;
	mov.u64 	%rd1108, %rd4;
	mov.u64 	%rd1109, %rd5;
	mov.u64 	%rd1110, %rd6;
	mov.u64 	%rd1111, %rd7;
	mov.u64 	%rd1112, %rd8;
	mov.u64 	%rd1114, %rd1113;
	mov.u64 	%rd1115, %rd1113;
	mov.u64 	%rd1116, %rd1113;
	mov.u64 	%rd1117, %rd1113;
	mov.u64 	%rd1118, %rd1113;
	mov.u64 	%rd1119, %rd1113;
	mov.u64 	%rd1120, %rd1113;
	mov.u64 	%rd1121, %rd9;

BB2_4:
	shr.u64 	%rd464, %rd1120, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd1120;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 19;
	shf.r.wrap.b32 	%r304, %r301, %r302, 19;
	mov.b64 	%rd465, {%r304, %r303};
	xor.b64  	%rd466, %rd465, %rd464;
	shf.l.wrap.b32 	%r305, %r301, %r302, 3;
	shf.l.wrap.b32 	%r306, %r302, %r301, 3;
	mov.b64 	%rd467, {%r306, %r305};
	xor.b64  	%rd468, %rd466, %rd467;
	shr.u64 	%rd469, %rd1107, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1107;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 1;
	shf.r.wrap.b32 	%r310, %r307, %r308, 1;
	mov.b64 	%rd470, {%r310, %r309};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.r.wrap.b32 	%r311, %r308, %r307, 8;
	shf.r.wrap.b32 	%r312, %r307, %r308, 8;
	mov.b64 	%rd472, {%r312, %r311};
	xor.b64  	%rd473, %rd471, %rd472;
	add.s64 	%rd474, %rd1106, %rd1115;
	add.s64 	%rd475, %rd474, %rd468;
	add.s64 	%rd1106, %rd475, %rd473;
	shr.u64 	%rd476, %rd1121, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd1121;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 19;
	shf.r.wrap.b32 	%r316, %r313, %r314, 19;
	mov.b64 	%rd477, {%r316, %r315};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r317, %r313, %r314, 3;
	shf.l.wrap.b32 	%r318, %r314, %r313, 3;
	mov.b64 	%rd479, {%r318, %r317};
	xor.b64  	%rd480, %rd478, %rd479;
	shr.u64 	%rd481, %rd1108, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd1108;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 1;
	shf.r.wrap.b32 	%r322, %r319, %r320, 1;
	mov.b64 	%rd482, {%r322, %r321};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.r.wrap.b32 	%r323, %r320, %r319, 8;
	shf.r.wrap.b32 	%r324, %r319, %r320, 8;
	mov.b64 	%rd484, {%r324, %r323};
	xor.b64  	%rd485, %rd483, %rd484;
	add.s64 	%rd486, %rd1107, %rd1116;
	add.s64 	%rd487, %rd486, %rd480;
	add.s64 	%rd1107, %rd487, %rd485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd1106;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 19;
	shf.r.wrap.b32 	%r328, %r325, %r326, 19;
	mov.b64 	%rd488, {%r328, %r327};
	shf.l.wrap.b32 	%r329, %r325, %r326, 3;
	shf.l.wrap.b32 	%r330, %r326, %r325, 3;
	mov.b64 	%rd489, {%r330, %r329};
	shr.u64 	%rd490, %rd1106, 6;
	xor.b64  	%rd491, %rd488, %rd490;
	xor.b64  	%rd492, %rd491, %rd489;
	shr.u64 	%rd493, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd1109;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 1;
	shf.r.wrap.b32 	%r334, %r331, %r332, 1;
	mov.b64 	%rd494, {%r334, %r333};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.r.wrap.b32 	%r335, %r332, %r331, 8;
	shf.r.wrap.b32 	%r336, %r331, %r332, 8;
	mov.b64 	%rd496, {%r336, %r335};
	xor.b64  	%rd497, %rd495, %rd496;
	add.s64 	%rd498, %rd1108, %rd1117;
	add.s64 	%rd499, %rd498, %rd492;
	add.s64 	%rd1108, %rd499, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd1107;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 19;
	shf.r.wrap.b32 	%r340, %r337, %r338, 19;
	mov.b64 	%rd500, {%r340, %r339};
	shf.l.wrap.b32 	%r341, %r337, %r338, 3;
	shf.l.wrap.b32 	%r342, %r338, %r337, 3;
	mov.b64 	%rd501, {%r342, %r341};
	shr.u64 	%rd502, %rd1107, 6;
	xor.b64  	%rd503, %rd500, %rd502;
	xor.b64  	%rd504, %rd503, %rd501;
	shr.u64 	%rd505, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd1110;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 1;
	shf.r.wrap.b32 	%r346, %r343, %r344, 1;
	mov.b64 	%rd506, {%r346, %r345};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.r.wrap.b32 	%r347, %r344, %r343, 8;
	shf.r.wrap.b32 	%r348, %r343, %r344, 8;
	mov.b64 	%rd508, {%r348, %r347};
	xor.b64  	%rd509, %rd507, %rd508;
	add.s64 	%rd510, %rd1109, %rd1118;
	add.s64 	%rd511, %rd510, %rd504;
	add.s64 	%rd1109, %rd511, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd1108;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 19;
	shf.r.wrap.b32 	%r352, %r349, %r350, 19;
	mov.b64 	%rd512, {%r352, %r351};
	shf.l.wrap.b32 	%r353, %r349, %r350, 3;
	shf.l.wrap.b32 	%r354, %r350, %r349, 3;
	mov.b64 	%rd513, {%r354, %r353};
	shr.u64 	%rd514, %rd1108, 6;
	xor.b64  	%rd515, %rd512, %rd514;
	xor.b64  	%rd516, %rd515, %rd513;
	shr.u64 	%rd517, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd1111;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 1;
	shf.r.wrap.b32 	%r358, %r355, %r356, 1;
	mov.b64 	%rd518, {%r358, %r357};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.r.wrap.b32 	%r359, %r356, %r355, 8;
	shf.r.wrap.b32 	%r360, %r355, %r356, 8;
	mov.b64 	%rd520, {%r360, %r359};
	xor.b64  	%rd521, %rd519, %rd520;
	add.s64 	%rd522, %rd1110, %rd1119;
	add.s64 	%rd523, %rd522, %rd516;
	add.s64 	%rd1110, %rd523, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd1109;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 19;
	shf.r.wrap.b32 	%r364, %r361, %r362, 19;
	mov.b64 	%rd524, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 3;
	shf.l.wrap.b32 	%r366, %r362, %r361, 3;
	mov.b64 	%rd525, {%r366, %r365};
	shr.u64 	%rd526, %rd1109, 6;
	xor.b64  	%rd527, %rd524, %rd526;
	xor.b64  	%rd528, %rd527, %rd525;
	shr.u64 	%rd529, %rd1112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd1112;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 1;
	shf.r.wrap.b32 	%r370, %r367, %r368, 1;
	mov.b64 	%rd530, {%r370, %r369};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.r.wrap.b32 	%r371, %r368, %r367, 8;
	shf.r.wrap.b32 	%r372, %r367, %r368, 8;
	mov.b64 	%rd532, {%r372, %r371};
	xor.b64  	%rd533, %rd531, %rd532;
	add.s64 	%rd534, %rd1111, %rd1120;
	add.s64 	%rd535, %rd534, %rd528;
	add.s64 	%rd1111, %rd535, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd1110;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 19;
	shf.r.wrap.b32 	%r376, %r373, %r374, 19;
	mov.b64 	%rd536, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 3;
	shf.l.wrap.b32 	%r378, %r374, %r373, 3;
	mov.b64 	%rd537, {%r378, %r377};
	shr.u64 	%rd538, %rd1110, 6;
	xor.b64  	%rd539, %rd536, %rd538;
	xor.b64  	%rd540, %rd539, %rd537;
	shr.u64 	%rd541, %rd1113, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd1113;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 1;
	shf.r.wrap.b32 	%r382, %r379, %r380, 1;
	mov.b64 	%rd542, {%r382, %r381};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.r.wrap.b32 	%r383, %r380, %r379, 8;
	shf.r.wrap.b32 	%r384, %r379, %r380, 8;
	mov.b64 	%rd544, {%r384, %r383};
	xor.b64  	%rd545, %rd543, %rd544;
	add.s64 	%rd546, %rd1112, %rd1121;
	add.s64 	%rd547, %rd546, %rd540;
	add.s64 	%rd1112, %rd547, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd1111;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd548, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd549, {%r390, %r389};
	shr.u64 	%rd550, %rd1111, 6;
	xor.b64  	%rd551, %rd548, %rd550;
	xor.b64  	%rd552, %rd551, %rd549;
	shr.u64 	%rd553, %rd1114, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd1114;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 1;
	shf.r.wrap.b32 	%r394, %r391, %r392, 1;
	mov.b64 	%rd554, {%r394, %r393};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.r.wrap.b32 	%r395, %r392, %r391, 8;
	shf.r.wrap.b32 	%r396, %r391, %r392, 8;
	mov.b64 	%rd556, {%r396, %r395};
	xor.b64  	%rd557, %rd555, %rd556;
	add.s64 	%rd558, %rd1106, %rd1113;
	add.s64 	%rd559, %rd558, %rd552;
	add.s64 	%rd1113, %rd559, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1112;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd560, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd561, {%r402, %r401};
	shr.u64 	%rd562, %rd1112, 6;
	xor.b64  	%rd563, %rd560, %rd562;
	xor.b64  	%rd564, %rd563, %rd561;
	shr.u64 	%rd565, %rd1115, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd1115;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 1;
	shf.r.wrap.b32 	%r406, %r403, %r404, 1;
	mov.b64 	%rd566, {%r406, %r405};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.r.wrap.b32 	%r407, %r404, %r403, 8;
	shf.r.wrap.b32 	%r408, %r403, %r404, 8;
	mov.b64 	%rd568, {%r408, %r407};
	xor.b64  	%rd569, %rd567, %rd568;
	add.s64 	%rd570, %rd1107, %rd1114;
	add.s64 	%rd571, %rd570, %rd564;
	add.s64 	%rd1114, %rd571, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd1113;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd572, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd573, {%r414, %r413};
	shr.u64 	%rd574, %rd1113, 6;
	xor.b64  	%rd575, %rd572, %rd574;
	xor.b64  	%rd576, %rd575, %rd573;
	shr.u64 	%rd577, %rd1116, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd1116;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 1;
	shf.r.wrap.b32 	%r418, %r415, %r416, 1;
	mov.b64 	%rd578, {%r418, %r417};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.r.wrap.b32 	%r419, %r416, %r415, 8;
	shf.r.wrap.b32 	%r420, %r415, %r416, 8;
	mov.b64 	%rd580, {%r420, %r419};
	xor.b64  	%rd581, %rd579, %rd580;
	add.s64 	%rd582, %rd1108, %rd1115;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd1115, %rd583, %rd581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd1114;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 19;
	shf.r.wrap.b32 	%r424, %r421, %r422, 19;
	mov.b64 	%rd584, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 3;
	shf.l.wrap.b32 	%r426, %r422, %r421, 3;
	mov.b64 	%rd585, {%r426, %r425};
	shr.u64 	%rd586, %rd1114, 6;
	xor.b64  	%rd587, %rd584, %rd586;
	xor.b64  	%rd588, %rd587, %rd585;
	shr.u64 	%rd589, %rd1117, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd1117;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 1;
	shf.r.wrap.b32 	%r430, %r427, %r428, 1;
	mov.b64 	%rd590, {%r430, %r429};
	xor.b64  	%rd591, %rd590, %rd589;
	shf.r.wrap.b32 	%r431, %r428, %r427, 8;
	shf.r.wrap.b32 	%r432, %r427, %r428, 8;
	mov.b64 	%rd592, {%r432, %r431};
	xor.b64  	%rd593, %rd591, %rd592;
	add.s64 	%rd594, %rd1109, %rd1116;
	add.s64 	%rd595, %rd594, %rd588;
	add.s64 	%rd1116, %rd595, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd1115;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 19;
	shf.r.wrap.b32 	%r436, %r433, %r434, 19;
	mov.b64 	%rd596, {%r436, %r435};
	shf.l.wrap.b32 	%r437, %r433, %r434, 3;
	shf.l.wrap.b32 	%r438, %r434, %r433, 3;
	mov.b64 	%rd597, {%r438, %r437};
	shr.u64 	%rd598, %rd1115, 6;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	shr.u64 	%rd601, %rd1118, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd1118;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 1;
	shf.r.wrap.b32 	%r442, %r439, %r440, 1;
	mov.b64 	%rd602, {%r442, %r441};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.r.wrap.b32 	%r443, %r440, %r439, 8;
	shf.r.wrap.b32 	%r444, %r439, %r440, 8;
	mov.b64 	%rd604, {%r444, %r443};
	xor.b64  	%rd605, %rd603, %rd604;
	add.s64 	%rd606, %rd1110, %rd1117;
	add.s64 	%rd607, %rd606, %rd600;
	add.s64 	%rd1117, %rd607, %rd605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd1116;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 19;
	shf.r.wrap.b32 	%r448, %r445, %r446, 19;
	mov.b64 	%rd608, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 3;
	shf.l.wrap.b32 	%r450, %r446, %r445, 3;
	mov.b64 	%rd609, {%r450, %r449};
	shr.u64 	%rd610, %rd1116, 6;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	shr.u64 	%rd613, %rd1119, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd1119;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 1;
	shf.r.wrap.b32 	%r454, %r451, %r452, 1;
	mov.b64 	%rd614, {%r454, %r453};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.r.wrap.b32 	%r455, %r452, %r451, 8;
	shf.r.wrap.b32 	%r456, %r451, %r452, 8;
	mov.b64 	%rd616, {%r456, %r455};
	xor.b64  	%rd617, %rd615, %rd616;
	add.s64 	%rd618, %rd1111, %rd1118;
	add.s64 	%rd619, %rd618, %rd612;
	add.s64 	%rd1118, %rd619, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd1117;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 19;
	shf.r.wrap.b32 	%r460, %r457, %r458, 19;
	mov.b64 	%rd620, {%r460, %r459};
	shf.l.wrap.b32 	%r461, %r457, %r458, 3;
	shf.l.wrap.b32 	%r462, %r458, %r457, 3;
	mov.b64 	%rd621, {%r462, %r461};
	shr.u64 	%rd622, %rd1117, 6;
	xor.b64  	%rd623, %rd620, %rd622;
	xor.b64  	%rd624, %rd623, %rd621;
	shr.u64 	%rd625, %rd1120, 7;
	shf.r.wrap.b32 	%r463, %r302, %r301, 1;
	shf.r.wrap.b32 	%r464, %r301, %r302, 1;
	mov.b64 	%rd626, {%r464, %r463};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.r.wrap.b32 	%r465, %r302, %r301, 8;
	shf.r.wrap.b32 	%r466, %r301, %r302, 8;
	mov.b64 	%rd628, {%r466, %r465};
	xor.b64  	%rd629, %rd627, %rd628;
	add.s64 	%rd630, %rd1112, %rd1119;
	add.s64 	%rd631, %rd630, %rd624;
	add.s64 	%rd1119, %rd631, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd1118;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 19;
	shf.r.wrap.b32 	%r470, %r467, %r468, 19;
	mov.b64 	%rd632, {%r470, %r469};
	shf.l.wrap.b32 	%r471, %r467, %r468, 3;
	shf.l.wrap.b32 	%r472, %r468, %r467, 3;
	mov.b64 	%rd633, {%r472, %r471};
	shr.u64 	%rd634, %rd1118, 6;
	xor.b64  	%rd635, %rd632, %rd634;
	xor.b64  	%rd636, %rd635, %rd633;
	shr.u64 	%rd637, %rd1121, 7;
	shf.r.wrap.b32 	%r473, %r314, %r313, 1;
	shf.r.wrap.b32 	%r474, %r313, %r314, 1;
	mov.b64 	%rd638, {%r474, %r473};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.r.wrap.b32 	%r475, %r314, %r313, 8;
	shf.r.wrap.b32 	%r476, %r313, %r314, 8;
	mov.b64 	%rd640, {%r476, %r475};
	xor.b64  	%rd641, %rd639, %rd640;
	add.s64 	%rd642, %rd1113, %rd1120;
	add.s64 	%rd643, %rd642, %rd636;
	add.s64 	%rd1120, %rd643, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd1119;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 19;
	shf.r.wrap.b32 	%r480, %r477, %r478, 19;
	mov.b64 	%rd644, {%r480, %r479};
	shf.l.wrap.b32 	%r481, %r477, %r478, 3;
	shf.l.wrap.b32 	%r482, %r478, %r477, 3;
	mov.b64 	%rd645, {%r482, %r481};
	shr.u64 	%rd646, %rd1119, 6;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	shf.r.wrap.b32 	%r483, %r326, %r325, 1;
	shf.r.wrap.b32 	%r484, %r325, %r326, 1;
	mov.b64 	%rd649, {%r484, %r483};
	shf.r.wrap.b32 	%r485, %r326, %r325, 8;
	shf.r.wrap.b32 	%r486, %r325, %r326, 8;
	mov.b64 	%rd650, {%r486, %r485};
	shr.u64 	%rd651, %rd1106, 7;
	xor.b64  	%rd652, %rd649, %rd651;
	xor.b64  	%rd653, %rd652, %rd650;
	add.s64 	%rd654, %rd1114, %rd1121;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd1121, %rd655, %rd653;
	add.s64 	%rd84, %rd1101, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd1105;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 18;
	shf.r.wrap.b32 	%r490, %r487, %r488, 18;
	mov.b64 	%rd656, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 14;
	shf.r.wrap.b32 	%r492, %r487, %r488, 14;
	mov.b64 	%rd657, {%r492, %r491};
	xor.b64  	%rd658, %rd656, %rd657;
	shf.l.wrap.b32 	%r493, %r487, %r488, 23;
	shf.l.wrap.b32 	%r494, %r488, %r487, 23;
	mov.b64 	%rd659, {%r494, %r493};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd1103, %rd1104;
	and.b64  	%rd662, %rd661, %rd1105;
	xor.b64  	%rd663, %rd662, %rd1103;
	add.s64 	%rd664, %rd663, %rd1102;
	add.s64 	%rd665, %rd664, %rd1106;
	ld.const.u64 	%rd666, [%rd1101+128];
	add.s64 	%rd667, %rd665, %rd666;
	add.s64 	%rd668, %rd667, %rd660;
	add.s64 	%rd669, %rd668, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd1122;
	}
	shf.l.wrap.b32 	%r497, %r496, %r495, 30;
	shf.l.wrap.b32 	%r498, %r495, %r496, 30;
	mov.b64 	%rd670, {%r498, %r497};
	shf.r.wrap.b32 	%r499, %r495, %r496, 28;
	shf.r.wrap.b32 	%r500, %r496, %r495, 28;
	mov.b64 	%rd671, {%r500, %r499};
	xor.b64  	%rd672, %rd670, %rd671;
	shf.l.wrap.b32 	%r501, %r496, %r495, 25;
	shf.l.wrap.b32 	%r502, %r495, %r496, 25;
	mov.b64 	%rd673, {%r502, %r501};
	xor.b64  	%rd674, %rd672, %rd673;
	xor.b64  	%rd675, %rd1122, %rd1123;
	and.b64  	%rd676, %rd675, %rd1124;
	and.b64  	%rd677, %rd1122, %rd1123;
	or.b64  	%rd678, %rd676, %rd677;
	add.s64 	%rd679, %rd668, %rd678;
	add.s64 	%rd680, %rd679, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd669;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd681, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd682, {%r508, %r507};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd684, {%r510, %r509};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd1104, %rd1105;
	and.b64  	%rd687, %rd669, %rd686;
	xor.b64  	%rd688, %rd687, %rd1104;
	add.s64 	%rd689, %rd1107, %rd1103;
	ld.const.u64 	%rd690, [%rd1101+136];
	add.s64 	%rd691, %rd689, %rd690;
	add.s64 	%rd692, %rd691, %rd688;
	add.s64 	%rd693, %rd692, %rd685;
	add.s64 	%rd694, %rd693, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd680;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd695, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd696, {%r516, %r515};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd698, {%r518, %r517};
	xor.b64  	%rd699, %rd697, %rd698;
	and.b64  	%rd700, %rd680, %rd1122;
	xor.b64  	%rd701, %rd680, %rd1122;
	and.b64  	%rd702, %rd701, %rd1123;
	or.b64  	%rd703, %rd702, %rd700;
	add.s64 	%rd704, %rd693, %rd703;
	add.s64 	%rd705, %rd704, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd694;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 14;
	shf.r.wrap.b32 	%r522, %r519, %r520, 14;
	mov.b64 	%rd706, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 18;
	shf.r.wrap.b32 	%r524, %r519, %r520, 18;
	mov.b64 	%rd707, {%r524, %r523};
	xor.b64  	%rd708, %rd707, %rd706;
	shf.l.wrap.b32 	%r525, %r519, %r520, 23;
	shf.l.wrap.b32 	%r526, %r520, %r519, 23;
	mov.b64 	%rd709, {%r526, %r525};
	xor.b64  	%rd710, %rd708, %rd709;
	xor.b64  	%rd711, %rd669, %rd1105;
	and.b64  	%rd712, %rd694, %rd711;
	xor.b64  	%rd713, %rd712, %rd1105;
	add.s64 	%rd714, %rd1108, %rd1104;
	ld.const.u64 	%rd715, [%rd1101+144];
	add.s64 	%rd716, %rd714, %rd715;
	add.s64 	%rd717, %rd716, %rd713;
	add.s64 	%rd718, %rd717, %rd710;
	add.s64 	%rd719, %rd718, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd705;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 28;
	shf.r.wrap.b32 	%r530, %r527, %r528, 28;
	mov.b64 	%rd720, {%r530, %r529};
	shf.l.wrap.b32 	%r531, %r527, %r528, 30;
	shf.l.wrap.b32 	%r532, %r528, %r527, 30;
	mov.b64 	%rd721, {%r532, %r531};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r533, %r527, %r528, 25;
	shf.l.wrap.b32 	%r534, %r528, %r527, 25;
	mov.b64 	%rd723, {%r534, %r533};
	xor.b64  	%rd724, %rd722, %rd723;
	and.b64  	%rd725, %rd705, %rd680;
	xor.b64  	%rd726, %rd705, %rd680;
	and.b64  	%rd727, %rd726, %rd1122;
	or.b64  	%rd728, %rd727, %rd725;
	add.s64 	%rd729, %rd718, %rd728;
	add.s64 	%rd730, %rd729, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd719;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 14;
	shf.r.wrap.b32 	%r538, %r535, %r536, 14;
	mov.b64 	%rd731, {%r538, %r537};
	shf.r.wrap.b32 	%r539, %r536, %r535, 18;
	shf.r.wrap.b32 	%r540, %r535, %r536, 18;
	mov.b64 	%rd732, {%r540, %r539};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r541, %r535, %r536, 23;
	shf.l.wrap.b32 	%r542, %r536, %r535, 23;
	mov.b64 	%rd734, {%r542, %r541};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd694, %rd669;
	and.b64  	%rd737, %rd719, %rd736;
	xor.b64  	%rd738, %rd737, %rd669;
	add.s64 	%rd739, %rd1109, %rd1105;
	ld.const.u64 	%rd740, [%rd1101+152];
	add.s64 	%rd741, %rd739, %rd740;
	add.s64 	%rd742, %rd741, %rd738;
	add.s64 	%rd743, %rd742, %rd735;
	add.s64 	%rd744, %rd743, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd730;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 28;
	shf.r.wrap.b32 	%r546, %r543, %r544, 28;
	mov.b64 	%rd745, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 30;
	shf.l.wrap.b32 	%r548, %r544, %r543, 30;
	mov.b64 	%rd746, {%r548, %r547};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r549, %r543, %r544, 25;
	shf.l.wrap.b32 	%r550, %r544, %r543, 25;
	mov.b64 	%rd748, {%r550, %r549};
	xor.b64  	%rd749, %rd747, %rd748;
	and.b64  	%rd750, %rd730, %rd705;
	xor.b64  	%rd751, %rd730, %rd705;
	and.b64  	%rd752, %rd751, %rd680;
	or.b64  	%rd753, %rd752, %rd750;
	add.s64 	%rd754, %rd743, %rd753;
	add.s64 	%rd755, %rd754, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd744;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 14;
	shf.r.wrap.b32 	%r554, %r551, %r552, 14;
	mov.b64 	%rd756, {%r554, %r553};
	shf.r.wrap.b32 	%r555, %r552, %r551, 18;
	shf.r.wrap.b32 	%r556, %r551, %r552, 18;
	mov.b64 	%rd757, {%r556, %r555};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.l.wrap.b32 	%r557, %r551, %r552, 23;
	shf.l.wrap.b32 	%r558, %r552, %r551, 23;
	mov.b64 	%rd759, {%r558, %r557};
	xor.b64  	%rd760, %rd758, %rd759;
	xor.b64  	%rd761, %rd719, %rd694;
	and.b64  	%rd762, %rd744, %rd761;
	xor.b64  	%rd763, %rd762, %rd694;
	add.s64 	%rd764, %rd669, %rd1110;
	ld.const.u64 	%rd765, [%rd1101+160];
	add.s64 	%rd766, %rd764, %rd765;
	add.s64 	%rd767, %rd766, %rd763;
	add.s64 	%rd768, %rd767, %rd760;
	add.s64 	%rd769, %rd768, %rd680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd755;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 28;
	shf.r.wrap.b32 	%r562, %r559, %r560, 28;
	mov.b64 	%rd770, {%r562, %r561};
	shf.l.wrap.b32 	%r563, %r559, %r560, 30;
	shf.l.wrap.b32 	%r564, %r560, %r559, 30;
	mov.b64 	%rd771, {%r564, %r563};
	xor.b64  	%rd772, %rd771, %rd770;
	shf.l.wrap.b32 	%r565, %r559, %r560, 25;
	shf.l.wrap.b32 	%r566, %r560, %r559, 25;
	mov.b64 	%rd773, {%r566, %r565};
	xor.b64  	%rd774, %rd772, %rd773;
	and.b64  	%rd775, %rd755, %rd730;
	xor.b64  	%rd776, %rd755, %rd730;
	and.b64  	%rd777, %rd776, %rd705;
	or.b64  	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd768, %rd778;
	add.s64 	%rd780, %rd779, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd769;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 14;
	shf.r.wrap.b32 	%r570, %r567, %r568, 14;
	mov.b64 	%rd781, {%r570, %r569};
	shf.r.wrap.b32 	%r571, %r568, %r567, 18;
	shf.r.wrap.b32 	%r572, %r567, %r568, 18;
	mov.b64 	%rd782, {%r572, %r571};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.l.wrap.b32 	%r573, %r567, %r568, 23;
	shf.l.wrap.b32 	%r574, %r568, %r567, 23;
	mov.b64 	%rd784, {%r574, %r573};
	xor.b64  	%rd785, %rd783, %rd784;
	xor.b64  	%rd786, %rd744, %rd719;
	and.b64  	%rd787, %rd769, %rd786;
	xor.b64  	%rd788, %rd787, %rd719;
	add.s64 	%rd789, %rd694, %rd1111;
	ld.const.u64 	%rd790, [%rd1101+168];
	add.s64 	%rd791, %rd789, %rd790;
	add.s64 	%rd792, %rd791, %rd788;
	add.s64 	%rd793, %rd792, %rd785;
	add.s64 	%rd794, %rd793, %rd705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd780;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 28;
	shf.r.wrap.b32 	%r578, %r575, %r576, 28;
	mov.b64 	%rd795, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 30;
	shf.l.wrap.b32 	%r580, %r576, %r575, 30;
	mov.b64 	%rd796, {%r580, %r579};
	xor.b64  	%rd797, %rd796, %rd795;
	shf.l.wrap.b32 	%r581, %r575, %r576, 25;
	shf.l.wrap.b32 	%r582, %r576, %r575, 25;
	mov.b64 	%rd798, {%r582, %r581};
	xor.b64  	%rd799, %rd797, %rd798;
	and.b64  	%rd800, %rd780, %rd755;
	xor.b64  	%rd801, %rd780, %rd755;
	and.b64  	%rd802, %rd801, %rd730;
	or.b64  	%rd803, %rd802, %rd800;
	add.s64 	%rd804, %rd793, %rd803;
	add.s64 	%rd805, %rd804, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd794;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 14;
	shf.r.wrap.b32 	%r586, %r583, %r584, 14;
	mov.b64 	%rd806, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 18;
	shf.r.wrap.b32 	%r588, %r583, %r584, 18;
	mov.b64 	%rd807, {%r588, %r587};
	xor.b64  	%rd808, %rd807, %rd806;
	shf.l.wrap.b32 	%r589, %r583, %r584, 23;
	shf.l.wrap.b32 	%r590, %r584, %r583, 23;
	mov.b64 	%rd809, {%r590, %r589};
	xor.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd769, %rd744;
	and.b64  	%rd812, %rd794, %rd811;
	xor.b64  	%rd813, %rd812, %rd744;
	add.s64 	%rd814, %rd719, %rd1112;
	ld.const.u64 	%rd815, [%rd1101+176];
	add.s64 	%rd816, %rd814, %rd815;
	add.s64 	%rd817, %rd816, %rd813;
	add.s64 	%rd818, %rd817, %rd810;
	add.s64 	%rd819, %rd818, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd805;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 28;
	shf.r.wrap.b32 	%r594, %r591, %r592, 28;
	mov.b64 	%rd820, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 30;
	shf.l.wrap.b32 	%r596, %r592, %r591, 30;
	mov.b64 	%rd821, {%r596, %r595};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r597, %r591, %r592, 25;
	shf.l.wrap.b32 	%r598, %r592, %r591, 25;
	mov.b64 	%rd823, {%r598, %r597};
	xor.b64  	%rd824, %rd822, %rd823;
	and.b64  	%rd825, %rd805, %rd780;
	xor.b64  	%rd826, %rd805, %rd780;
	and.b64  	%rd827, %rd826, %rd755;
	or.b64  	%rd828, %rd827, %rd825;
	add.s64 	%rd829, %rd818, %rd828;
	add.s64 	%rd830, %rd829, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd819;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 14;
	shf.r.wrap.b32 	%r602, %r599, %r600, 14;
	mov.b64 	%rd831, {%r602, %r601};
	shf.r.wrap.b32 	%r603, %r600, %r599, 18;
	shf.r.wrap.b32 	%r604, %r599, %r600, 18;
	mov.b64 	%rd832, {%r604, %r603};
	xor.b64  	%rd833, %rd832, %rd831;
	shf.l.wrap.b32 	%r605, %r599, %r600, 23;
	shf.l.wrap.b32 	%r606, %r600, %r599, 23;
	mov.b64 	%rd834, {%r606, %r605};
	xor.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd794, %rd769;
	and.b64  	%rd837, %rd819, %rd836;
	xor.b64  	%rd838, %rd837, %rd769;
	add.s64 	%rd839, %rd744, %rd1113;
	ld.const.u64 	%rd840, [%rd1101+184];
	add.s64 	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd841, %rd838;
	add.s64 	%rd843, %rd842, %rd835;
	add.s64 	%rd844, %rd843, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd830;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 28;
	shf.r.wrap.b32 	%r610, %r607, %r608, 28;
	mov.b64 	%rd845, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 30;
	shf.l.wrap.b32 	%r612, %r608, %r607, 30;
	mov.b64 	%rd846, {%r612, %r611};
	xor.b64  	%rd847, %rd846, %rd845;
	shf.l.wrap.b32 	%r613, %r607, %r608, 25;
	shf.l.wrap.b32 	%r614, %r608, %r607, 25;
	mov.b64 	%rd848, {%r614, %r613};
	xor.b64  	%rd849, %rd847, %rd848;
	and.b64  	%rd850, %rd830, %rd805;
	xor.b64  	%rd851, %rd830, %rd805;
	and.b64  	%rd852, %rd851, %rd780;
	or.b64  	%rd853, %rd852, %rd850;
	add.s64 	%rd854, %rd843, %rd853;
	add.s64 	%rd855, %rd854, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd844;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd856, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd857, {%r620, %r619};
	xor.b64  	%rd858, %rd857, %rd856;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd859, {%r622, %r621};
	xor.b64  	%rd860, %rd858, %rd859;
	xor.b64  	%rd861, %rd819, %rd794;
	and.b64  	%rd862, %rd844, %rd861;
	xor.b64  	%rd863, %rd862, %rd794;
	add.s64 	%rd864, %rd769, %rd1114;
	ld.const.u64 	%rd865, [%rd1101+192];
	add.s64 	%rd866, %rd864, %rd865;
	add.s64 	%rd867, %rd866, %rd863;
	add.s64 	%rd868, %rd867, %rd860;
	add.s64 	%rd869, %rd868, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd855;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd870, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd871, {%r628, %r627};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd873, {%r630, %r629};
	xor.b64  	%rd874, %rd872, %rd873;
	and.b64  	%rd875, %rd855, %rd830;
	xor.b64  	%rd876, %rd855, %rd830;
	and.b64  	%rd877, %rd876, %rd805;
	or.b64  	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd868, %rd878;
	add.s64 	%rd880, %rd879, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd869;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 14;
	shf.r.wrap.b32 	%r634, %r631, %r632, 14;
	mov.b64 	%rd881, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 18;
	shf.r.wrap.b32 	%r636, %r631, %r632, 18;
	mov.b64 	%rd882, {%r636, %r635};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r637, %r631, %r632, 23;
	shf.l.wrap.b32 	%r638, %r632, %r631, 23;
	mov.b64 	%rd884, {%r638, %r637};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd844, %rd819;
	and.b64  	%rd887, %rd869, %rd886;
	xor.b64  	%rd888, %rd887, %rd819;
	add.s64 	%rd889, %rd794, %rd1115;
	ld.const.u64 	%rd890, [%rd1101+200];
	add.s64 	%rd891, %rd889, %rd890;
	add.s64 	%rd892, %rd891, %rd888;
	add.s64 	%rd893, %rd892, %rd885;
	add.s64 	%rd894, %rd893, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd880;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 28;
	shf.r.wrap.b32 	%r642, %r639, %r640, 28;
	mov.b64 	%rd895, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 30;
	shf.l.wrap.b32 	%r644, %r640, %r639, 30;
	mov.b64 	%rd896, {%r644, %r643};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r645, %r639, %r640, 25;
	shf.l.wrap.b32 	%r646, %r640, %r639, 25;
	mov.b64 	%rd898, {%r646, %r645};
	xor.b64  	%rd899, %rd897, %rd898;
	and.b64  	%rd900, %rd880, %rd855;
	xor.b64  	%rd901, %rd880, %rd855;
	and.b64  	%rd902, %rd901, %rd830;
	or.b64  	%rd903, %rd902, %rd900;
	add.s64 	%rd904, %rd893, %rd903;
	add.s64 	%rd905, %rd904, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd894;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd906, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd907, {%r652, %r651};
	xor.b64  	%rd908, %rd907, %rd906;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd909, {%r654, %r653};
	xor.b64  	%rd910, %rd908, %rd909;
	xor.b64  	%rd911, %rd869, %rd844;
	and.b64  	%rd912, %rd894, %rd911;
	xor.b64  	%rd913, %rd912, %rd844;
	add.s64 	%rd914, %rd819, %rd1116;
	ld.const.u64 	%rd915, [%rd1101+208];
	add.s64 	%rd916, %rd914, %rd915;
	add.s64 	%rd917, %rd916, %rd913;
	add.s64 	%rd918, %rd917, %rd910;
	add.s64 	%rd919, %rd918, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd905;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd920, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd921, {%r660, %r659};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd923, {%r662, %r661};
	xor.b64  	%rd924, %rd922, %rd923;
	and.b64  	%rd925, %rd905, %rd880;
	xor.b64  	%rd926, %rd905, %rd880;
	and.b64  	%rd927, %rd926, %rd855;
	or.b64  	%rd928, %rd927, %rd925;
	add.s64 	%rd929, %rd918, %rd928;
	add.s64 	%rd930, %rd929, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd919;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 14;
	shf.r.wrap.b32 	%r666, %r663, %r664, 14;
	mov.b64 	%rd931, {%r666, %r665};
	shf.r.wrap.b32 	%r667, %r664, %r663, 18;
	shf.r.wrap.b32 	%r668, %r663, %r664, 18;
	mov.b64 	%rd932, {%r668, %r667};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r669, %r663, %r664, 23;
	shf.l.wrap.b32 	%r670, %r664, %r663, 23;
	mov.b64 	%rd934, {%r670, %r669};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd894, %rd869;
	and.b64  	%rd937, %rd919, %rd936;
	xor.b64  	%rd938, %rd937, %rd869;
	add.s64 	%rd939, %rd844, %rd1117;
	ld.const.u64 	%rd940, [%rd1101+216];
	add.s64 	%rd941, %rd939, %rd940;
	add.s64 	%rd942, %rd941, %rd938;
	add.s64 	%rd943, %rd942, %rd935;
	add.s64 	%rd944, %rd943, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd930;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 28;
	shf.r.wrap.b32 	%r674, %r671, %r672, 28;
	mov.b64 	%rd945, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 30;
	shf.l.wrap.b32 	%r676, %r672, %r671, 30;
	mov.b64 	%rd946, {%r676, %r675};
	xor.b64  	%rd947, %rd946, %rd945;
	shf.l.wrap.b32 	%r677, %r671, %r672, 25;
	shf.l.wrap.b32 	%r678, %r672, %r671, 25;
	mov.b64 	%rd948, {%r678, %r677};
	xor.b64  	%rd949, %rd947, %rd948;
	and.b64  	%rd950, %rd930, %rd905;
	xor.b64  	%rd951, %rd930, %rd905;
	and.b64  	%rd952, %rd951, %rd880;
	or.b64  	%rd953, %rd952, %rd950;
	add.s64 	%rd954, %rd943, %rd953;
	add.s64 	%rd955, %rd954, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd944;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 14;
	shf.r.wrap.b32 	%r682, %r679, %r680, 14;
	mov.b64 	%rd956, {%r682, %r681};
	shf.r.wrap.b32 	%r683, %r680, %r679, 18;
	shf.r.wrap.b32 	%r684, %r679, %r680, 18;
	mov.b64 	%rd957, {%r684, %r683};
	xor.b64  	%rd958, %rd957, %rd956;
	shf.l.wrap.b32 	%r685, %r679, %r680, 23;
	shf.l.wrap.b32 	%r686, %r680, %r679, 23;
	mov.b64 	%rd959, {%r686, %r685};
	xor.b64  	%rd960, %rd958, %rd959;
	xor.b64  	%rd961, %rd919, %rd894;
	and.b64  	%rd962, %rd944, %rd961;
	xor.b64  	%rd963, %rd962, %rd894;
	add.s64 	%rd964, %rd869, %rd1118;
	ld.const.u64 	%rd965, [%rd1101+224];
	add.s64 	%rd966, %rd964, %rd965;
	add.s64 	%rd967, %rd966, %rd963;
	add.s64 	%rd968, %rd967, %rd960;
	add.s64 	%rd1102, %rd968, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd955;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 28;
	shf.r.wrap.b32 	%r690, %r687, %r688, 28;
	mov.b64 	%rd969, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 30;
	shf.l.wrap.b32 	%r692, %r688, %r687, 30;
	mov.b64 	%rd970, {%r692, %r691};
	xor.b64  	%rd971, %rd970, %rd969;
	shf.l.wrap.b32 	%r693, %r687, %r688, 25;
	shf.l.wrap.b32 	%r694, %r688, %r687, 25;
	mov.b64 	%rd972, {%r694, %r693};
	xor.b64  	%rd973, %rd971, %rd972;
	and.b64  	%rd974, %rd955, %rd930;
	xor.b64  	%rd975, %rd955, %rd930;
	and.b64  	%rd976, %rd975, %rd905;
	or.b64  	%rd977, %rd976, %rd974;
	add.s64 	%rd978, %rd968, %rd977;
	add.s64 	%rd1125, %rd978, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1102;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 14;
	shf.r.wrap.b32 	%r698, %r695, %r696, 14;
	mov.b64 	%rd979, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 18;
	shf.r.wrap.b32 	%r700, %r695, %r696, 18;
	mov.b64 	%rd980, {%r700, %r699};
	xor.b64  	%rd981, %rd980, %rd979;
	shf.l.wrap.b32 	%r701, %r695, %r696, 23;
	shf.l.wrap.b32 	%r702, %r696, %r695, 23;
	mov.b64 	%rd982, {%r702, %r701};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd944, %rd919;
	and.b64  	%rd985, %rd1102, %rd984;
	xor.b64  	%rd986, %rd985, %rd919;
	add.s64 	%rd987, %rd894, %rd1119;
	ld.const.u64 	%rd988, [%rd1101+232];
	add.s64 	%rd989, %rd987, %rd988;
	add.s64 	%rd990, %rd989, %rd986;
	add.s64 	%rd991, %rd990, %rd983;
	add.s64 	%rd1103, %rd991, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1125;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 28;
	shf.r.wrap.b32 	%r706, %r703, %r704, 28;
	mov.b64 	%rd992, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 30;
	shf.l.wrap.b32 	%r708, %r704, %r703, 30;
	mov.b64 	%rd993, {%r708, %r707};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r709, %r703, %r704, 25;
	shf.l.wrap.b32 	%r710, %r704, %r703, 25;
	mov.b64 	%rd995, {%r710, %r709};
	xor.b64  	%rd996, %rd994, %rd995;
	and.b64  	%rd997, %rd1125, %rd955;
	xor.b64  	%rd998, %rd1125, %rd955;
	and.b64  	%rd999, %rd998, %rd930;
	or.b64  	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd991, %rd1000;
	add.s64 	%rd1124, %rd1001, %rd996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd1103;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 14;
	shf.r.wrap.b32 	%r714, %r711, %r712, 14;
	mov.b64 	%rd1002, {%r714, %r713};
	shf.r.wrap.b32 	%r715, %r712, %r711, 18;
	shf.r.wrap.b32 	%r716, %r711, %r712, 18;
	mov.b64 	%rd1003, {%r716, %r715};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	shf.l.wrap.b32 	%r717, %r711, %r712, 23;
	shf.l.wrap.b32 	%r718, %r712, %r711, 23;
	mov.b64 	%rd1005, {%r718, %r717};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	xor.b64  	%rd1007, %rd1102, %rd944;
	and.b64  	%rd1008, %rd1103, %rd1007;
	xor.b64  	%rd1009, %rd1008, %rd944;
	add.s64 	%rd1010, %rd919, %rd1120;
	ld.const.u64 	%rd1011, [%rd1101+240];
	add.s64 	%rd1012, %rd1010, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1009;
	add.s64 	%rd1014, %rd1013, %rd1006;
	add.s64 	%rd1104, %rd1014, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd1124;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 28;
	shf.r.wrap.b32 	%r722, %r719, %r720, 28;
	mov.b64 	%rd1015, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 30;
	shf.l.wrap.b32 	%r724, %r720, %r719, 30;
	mov.b64 	%rd1016, {%r724, %r723};
	xor.b64  	%rd1017, %rd1016, %rd1015;
	shf.l.wrap.b32 	%r725, %r719, %r720, 25;
	shf.l.wrap.b32 	%r726, %r720, %r719, 25;
	mov.b64 	%rd1018, {%r726, %r725};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	and.b64  	%rd1020, %rd1124, %rd1125;
	xor.b64  	%rd1021, %rd1124, %rd1125;
	and.b64  	%rd1022, %rd1021, %rd955;
	or.b64  	%rd1023, %rd1022, %rd1020;
	add.s64 	%rd1024, %rd1014, %rd1023;
	add.s64 	%rd1123, %rd1024, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd1104;
	}
	shf.r.wrap.b32 	%r729, %r728, %r727, 14;
	shf.r.wrap.b32 	%r730, %r727, %r728, 14;
	mov.b64 	%rd1025, {%r730, %r729};
	shf.r.wrap.b32 	%r731, %r728, %r727, 18;
	shf.r.wrap.b32 	%r732, %r727, %r728, 18;
	mov.b64 	%rd1026, {%r732, %r731};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	shf.l.wrap.b32 	%r733, %r727, %r728, 23;
	shf.l.wrap.b32 	%r734, %r728, %r727, 23;
	mov.b64 	%rd1028, {%r734, %r733};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	xor.b64  	%rd1030, %rd1103, %rd1102;
	and.b64  	%rd1031, %rd1104, %rd1030;
	xor.b64  	%rd1032, %rd1031, %rd1102;
	add.s64 	%rd1033, %rd944, %rd1121;
	ld.const.u64 	%rd1034, [%rd1101+248];
	add.s64 	%rd1035, %rd1033, %rd1034;
	add.s64 	%rd1036, %rd1035, %rd1032;
	add.s64 	%rd1037, %rd1036, %rd1029;
	add.s64 	%rd1105, %rd1037, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd1123;
	}
	shf.r.wrap.b32 	%r737, %r736, %r735, 28;
	shf.r.wrap.b32 	%r738, %r735, %r736, 28;
	mov.b64 	%rd1038, {%r738, %r737};
	shf.l.wrap.b32 	%r739, %r735, %r736, 30;
	shf.l.wrap.b32 	%r740, %r736, %r735, 30;
	mov.b64 	%rd1039, {%r740, %r739};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.l.wrap.b32 	%r741, %r735, %r736, 25;
	shf.l.wrap.b32 	%r742, %r736, %r735, 25;
	mov.b64 	%rd1041, {%r742, %r741};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	and.b64  	%rd1043, %rd1123, %rd1124;
	xor.b64  	%rd1044, %rd1123, %rd1124;
	and.b64  	%rd1045, %rd1044, %rd1125;
	or.b64  	%rd1046, %rd1045, %rd1043;
	add.s64 	%rd1047, %rd1037, %rd1046;
	add.s64 	%rd1122, %rd1047, %rd1042;
	add.s32 	%r813, %r813, 16;
	setp.lt.s32	%p3, %r813, 80;
	mov.u64 	%rd1101, %rd84;
	@%p3 bra 	BB2_4;

	ld.param.u64 	%rd1077, [m01700_m16_param_6];
	mov.b64	{%r7, %r9}, %rd1102;
	mov.u32 	%r743, 1;
	mov.b64	{%r10, %r11}, %rd1125;
	ld.global.u32 	%r744, [%rd102+4];
	and.b32  	%r12, %r744, 31;
	shr.u32 	%r745, %r7, %r12;
	ld.global.u32 	%r13, [%rd102];
	and.b32  	%r746, %r745, %r13;
	mul.wide.u32 	%rd1048, %r746, 4;
	add.s64 	%rd1049, %rd1077, %rd1048;
	and.b32  	%r747, %r7, 31;
	shl.b32 	%r14, %r743, %r747;
	ld.global.u32 	%r748, [%rd1049];
	and.b32  	%r749, %r748, %r14;
	setp.eq.s32	%p4, %r749, 0;
	@%p4 bra 	BB2_32;

	ld.param.u64 	%rd1091, [m01700_m16_param_7];
	shr.u32 	%r750, %r9, %r12;
	and.b32  	%r751, %r750, %r13;
	mul.wide.u32 	%rd1050, %r751, 4;
	add.s64 	%rd1051, %rd1091, %rd1050;
	and.b32  	%r752, %r9, 31;
	shl.b32 	%r15, %r743, %r752;
	ld.global.u32 	%r754, [%rd1051];
	and.b32  	%r755, %r754, %r15;
	setp.eq.s32	%p5, %r755, 0;
	@%p5 bra 	BB2_32;

	ld.param.u64 	%rd1092, [m01700_m16_param_8];
	shr.u32 	%r756, %r10, %r12;
	and.b32  	%r757, %r756, %r13;
	mul.wide.u32 	%rd1052, %r757, 4;
	add.s64 	%rd1053, %rd1092, %rd1052;
	and.b32  	%r758, %r10, 31;
	shl.b32 	%r16, %r743, %r758;
	ld.global.u32 	%r760, [%rd1053];
	and.b32  	%r761, %r760, %r16;
	setp.eq.s32	%p6, %r761, 0;
	@%p6 bra 	BB2_32;

	ld.param.u64 	%rd1093, [m01700_m16_param_9];
	shr.u32 	%r762, %r11, %r12;
	and.b32  	%r763, %r762, %r13;
	mul.wide.u32 	%rd1054, %r763, 4;
	add.s64 	%rd1055, %rd1093, %rd1054;
	and.b32  	%r764, %r11, 31;
	shl.b32 	%r17, %r743, %r764;
	ld.global.u32 	%r766, [%rd1055];
	and.b32  	%r767, %r766, %r17;
	setp.eq.s32	%p7, %r767, 0;
	@%p7 bra 	BB2_32;

	ld.param.u64 	%rd1094, [m01700_m16_param_10];
	ld.global.u32 	%r768, [%rd102+8];
	and.b32  	%r18, %r768, 31;
	shr.u32 	%r769, %r7, %r18;
	and.b32  	%r770, %r769, %r13;
	mul.wide.u32 	%rd1056, %r770, 4;
	add.s64 	%rd1057, %rd1094, %rd1056;
	ld.global.u32 	%r771, [%rd1057];
	and.b32  	%r772, %r771, %r14;
	setp.eq.s32	%p8, %r772, 0;
	@%p8 bra 	BB2_32;

	ld.param.u64 	%rd1095, [m01700_m16_param_11];
	shr.u32 	%r773, %r9, %r18;
	and.b32  	%r774, %r773, %r13;
	mul.wide.u32 	%rd1058, %r774, 4;
	add.s64 	%rd1059, %rd1095, %rd1058;
	ld.global.u32 	%r775, [%rd1059];
	and.b32  	%r776, %r775, %r15;
	setp.eq.s32	%p9, %r776, 0;
	@%p9 bra 	BB2_32;

	ld.param.u64 	%rd1096, [m01700_m16_param_12];
	shr.u32 	%r777, %r10, %r18;
	and.b32  	%r778, %r777, %r13;
	mul.wide.u32 	%rd1060, %r778, 4;
	add.s64 	%rd1061, %rd1096, %rd1060;
	ld.global.u32 	%r779, [%rd1061];
	and.b32  	%r780, %r779, %r16;
	setp.eq.s32	%p10, %r780, 0;
	@%p10 bra 	BB2_32;

	ld.param.u64 	%rd1097, [m01700_m16_param_13];
	shr.u32 	%r781, %r11, %r18;
	and.b32  	%r782, %r781, %r13;
	mul.wide.u32 	%rd1062, %r782, 4;
	add.s64 	%rd1063, %rd1097, %rd1062;
	ld.global.u32 	%r783, [%rd1063];
	and.b32  	%r784, %r783, %r17;
	setp.eq.s32	%p11, %r784, 0;
	@%p11 bra 	BB2_32;

	ld.global.u32 	%rd86, [%rd102+32];
	ld.global.u32 	%r814, [%rd102+28];
	setp.eq.s32	%p12, %r814, 0;
	mov.u32 	%r815, 0;
	mov.u32 	%r785, -1;
	@%p12 bra 	BB2_26;

BB2_14:
	ld.param.u64 	%rd1098, [m01700_m16_param_15];
	shr.u32 	%r22, %r814, 1;
	add.s32 	%r817, %r22, %r815;
	cvt.u64.u32	%rd1064, %r817;
	add.s64 	%rd1065, %rd1064, %rd86;
	shl.b64 	%rd1066, %rd1065, 6;
	add.s64 	%rd87, %rd1098, %rd1066;
	ld.global.u32 	%r24, [%rd87+28];
	setp.gt.u32	%p13, %r11, %r24;
	mov.u32 	%r816, %r743;
	@%p13 bra 	BB2_24;

	setp.lt.u32	%p14, %r11, %r24;
	mov.u32 	%r788, -1;
	@%p14 bra 	BB2_16;
	bra.uni 	BB2_17;

BB2_16:
	mov.u32 	%r816, %r788;
	bra.uni 	BB2_24;

BB2_17:
	ld.global.u32 	%r25, [%rd87+24];
	setp.gt.u32	%p15, %r10, %r25;
	mov.u32 	%r816, %r743;
	@%p15 bra 	BB2_24;

	setp.lt.u32	%p16, %r10, %r25;
	@%p16 bra 	BB2_19;
	bra.uni 	BB2_20;

BB2_19:
	mov.u32 	%r816, %r788;
	bra.uni 	BB2_24;

BB2_20:
	ld.global.u32 	%r26, [%rd87+60];
	setp.gt.u32	%p17, %r9, %r26;
	mov.u32 	%r816, %r743;
	@%p17 bra 	BB2_24;

	setp.lt.u32	%p18, %r9, %r26;
	mov.u32 	%r816, %r788;
	@%p18 bra 	BB2_24;

	ld.global.u32 	%r27, [%rd87+56];
	setp.gt.u32	%p19, %r7, %r27;
	mov.u32 	%r816, %r743;
	@%p19 bra 	BB2_24;

	setp.lt.u32	%p20, %r7, %r27;
	selp.b32	%r816, -1, 0, %p20;

BB2_24:
	add.s32 	%r794, %r22, 1;
	setp.gt.s32	%p21, %r816, 0;
	selp.b32	%r795, %r794, 0, %p21;
	add.s32 	%r815, %r795, %r815;
	selp.b32	%r796, -1, 0, %p21;
	add.s32 	%r797, %r796, %r814;
	shr.u32 	%r814, %r797, 1;
	setp.eq.s32	%p22, %r816, 0;
	@%p22 bra 	BB2_27;

	setp.ne.s32	%p23, %r814, 0;
	@%p23 bra 	BB2_14;

BB2_26:
	mov.u32 	%r817, %r785;

BB2_27:
	setp.eq.s32	%p24, %r817, -1;
	@%p24 bra 	BB2_32;

	ld.param.u64 	%rd1099, [m01700_m16_param_16];
	cvt.u32.u64	%r799, %rd86;
	add.s32 	%r33, %r799, %r817;
	mul.wide.u32 	%rd1067, %r33, 4;
	add.s64 	%rd1068, %rd1099, %rd1067;
	add.u64 	%rd1070, %SPL, 8;
	mov.u32 	%r800, 1;
	st.local.u32 	[%rd1070], %r800;
	ld.local.u32 	%r801, [%rd1070];
	atom.global.add.u32 	%r802, [%rd1068], %r801;
	setp.ne.s32	%p25, %r802, 0;
	@%p25 bra 	BB2_32;

	ld.global.u32 	%r34, [%rd102+12];
	ld.global.u32 	%r803, [%rd102+28];
	add.u64 	%rd1072, %SPL, 4;
	st.local.u32 	[%rd1072], %r800;
	ld.local.u32 	%r805, [%rd1072];
	atom.global.add.u32 	%r35, [%rd101], %r805;
	setp.lt.u32	%p26, %r35, %r803;
	@%p26 bra 	BB2_31;
	bra.uni 	BB2_30;

BB2_31:
	ld.param.u64 	%rd1100, [m01700_m16_param_14];
	mul.wide.u32 	%rd1075, %r35, 32;
	add.s64 	%rd1076, %rd1100, %rd1075;
	st.global.u32 	[%rd1076+12], %r34;
	st.global.u32 	[%rd1076+16], %r817;
	st.global.u32 	[%rd1076+20], %r33;
	st.global.u64 	[%rd1076], %rd1;
	st.global.u32 	[%rd1076+8], %r812;
	mov.u32 	%r810, 0;
	st.global.u32 	[%rd1076+24], %r810;
	st.global.u32 	[%rd1076+28], %r810;
	bra.uni 	BB2_32;

BB2_30:
	add.u64 	%rd1074, %SPL, 0;
	st.local.u32 	[%rd1074], %r800;
	ld.local.u32 	%r807, [%rd1074];
	neg.s32 	%r808, %r807;
	atom.global.add.u32 	%r809, [%rd101], %r808;

BB2_32:
	add.s32 	%r812, %r812, 1;
	ld.global.u32 	%r811, [%rd102+24];
	setp.lt.u32	%p27, %r812, %r811;
	@%p27 bra 	BB2_3;

BB2_33:
	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .global .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .const .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 8 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 1 m01700_s04_param_20,
	.param .u64 .ptr .global .align 1 m01700_s04_param_21,
	.param .u64 .ptr .global .align 1 m01700_s04_param_22,
	.param .u64 .ptr .global .align 1 m01700_s04_param_23,
	.param .u64 .ptr .global .align 8 m01700_s04_param_24
)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<729>;
	.reg .b64 	%rd<1092>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd85, [m01700_s04_param_0];
	ld.param.u64 	%rd88, [m01700_s04_param_15];
	ld.param.u64 	%rd90, [m01700_s04_param_19];
	ld.param.u64 	%rd91, [m01700_s04_param_24];
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.b32	%r19, %envreg3;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd91, 56;
	ld.global.u64 	%rd92, [%rd91+56];
	setp.ge.u64	%p1, %rd1, %rd92;
	@%p1 bra 	BB3_12;

	ld.global.u32 	%r22, [%rd2+-32];
	setp.eq.s32	%p2, %r22, 0;
	@%p2 bra 	BB3_12;

	mul.wide.s32 	%rd96, %r1, 260;
	add.s64 	%rd97, %rd85, %rd96;
	ld.global.u32 	%r2, [%rd97];
	ld.global.u32 	%r3, [%rd97+4];
	ld.global.u32 	%r24, [%rd2+-24];
	mul.wide.u32 	%rd98, %r24, 64;
	add.s64 	%rd99, %rd88, %rd98;
	ld.global.u32 	%r4, [%rd99+56];
	ld.global.u32 	%r5, [%rd99+60];
	ld.global.u32 	%r6, [%rd99+24];
	ld.global.u32 	%r7, [%rd99+28];
	ld.global.u32 	%r25, [%rd97+8];
	ld.global.u32 	%r26, [%rd97+12];
	mov.b64	%rd7, {%r26, %r25};
	ld.global.u32 	%r27, [%rd97+60];
	mov.u32 	%r727, 0;
	mov.b64	%rd8, {%r27, %r727};
	ld.const.u64 	%rd100, [k_sha512];
	add.s64 	%rd9, %rd100, 6620516959819538809;
	ld.const.u64 	%rd101, [k_sha512+8];
	add.s64 	%rd102, %rd7, %rd101;
	add.s64 	%rd10, %rd102, 2270897969802886507;
	ld.const.u64 	%rd103, [k_sha512+16];
	add.s64 	%rd11, %rd103, -7276294671716946913;
	ld.const.u64 	%rd104, [k_sha512+24];
	add.s64 	%rd12, %rd104, 5840696475078001361;

BB3_3:
	ld.const.u64 	%rd1058, [k_sha512+120];
	ld.const.u64 	%rd1057, [k_sha512+112];
	ld.const.u64 	%rd1056, [k_sha512+104];
	ld.const.u64 	%rd1055, [k_sha512+96];
	ld.const.u64 	%rd1054, [k_sha512+88];
	ld.const.u64 	%rd1053, [k_sha512+80];
	ld.const.u64 	%rd1052, [k_sha512+72];
	ld.const.u64 	%rd1051, [k_sha512+64];
	ld.const.u64 	%rd1050, [k_sha512+56];
	ld.const.u64 	%rd1049, [k_sha512+48];
	ld.const.u64 	%rd1048, [k_sha512+40];
	ld.const.u64 	%rd1047, [k_sha512+32];
	ld.param.u64 	%rd1046, [m01700_s04_param_3];
	mul.wide.u32 	%rd119, %r727, 4;
	add.s64 	%rd120, %rd1046, %rd119;
	ld.const.u32 	%r29, [%rd120];
	or.b32  	%r30, %r29, %r2;
	mov.b64	%rd1072, {%r3, %r30};
	add.s64 	%rd121, %rd9, %rd1072;
	add.s64 	%rd122, %rd121, 6412459576335945718;
	add.s64 	%rd123, %rd121, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd122;
	}
	shf.r.wrap.b32 	%r33, %r32, %r31, 14;
	shf.r.wrap.b32 	%r34, %r31, %r32, 14;
	mov.b64 	%rd124, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r32, %r31, 18;
	shf.r.wrap.b32 	%r36, %r31, %r32, 18;
	mov.b64 	%rd125, {%r36, %r35};
	xor.b64  	%rd126, %rd125, %rd124;
	shf.l.wrap.b32 	%r37, %r31, %r32, 23;
	shf.l.wrap.b32 	%r38, %r32, %r31, 23;
	mov.b64 	%rd127, {%r38, %r37};
	xor.b64  	%rd128, %rd126, %rd127;
	and.b64  	%rd129, %rd122, -3887949035690463538;
	xor.b64  	%rd130, %rd129, -7276294671716946913;
	add.s64 	%rd131, %rd10, %rd128;
	add.s64 	%rd132, %rd131, %rd130;
	add.s64 	%rd133, %rd132, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd123;
	}
	shf.r.wrap.b32 	%r41, %r40, %r39, 28;
	shf.r.wrap.b32 	%r42, %r39, %r40, 28;
	mov.b64 	%rd134, {%r42, %r41};
	shf.l.wrap.b32 	%r43, %r39, %r40, 30;
	shf.l.wrap.b32 	%r44, %r40, %r39, 30;
	mov.b64 	%rd135, {%r44, %r43};
	xor.b64  	%rd136, %rd135, %rd134;
	shf.l.wrap.b32 	%r45, %r39, %r40, 25;
	shf.l.wrap.b32 	%r46, %r40, %r39, 25;
	mov.b64 	%rd137, {%r46, %r45};
	xor.b64  	%rd138, %rd136, %rd137;
	add.s64 	%rd139, %rd132, %rd138;
	and.b64  	%rd140, %rd123, 7640891576956012808;
	and.b64  	%rd141, %rd123, -4942790177534073029;
	xor.b64  	%rd142, %rd141, 3026882967131160840;
	or.b64  	%rd143, %rd142, %rd140;
	add.s64 	%rd144, %rd139, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r47,%dummy}, %rd133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r48}, %rd133;
	}
	shf.r.wrap.b32 	%r49, %r48, %r47, 14;
	shf.r.wrap.b32 	%r50, %r47, %r48, 14;
	mov.b64 	%rd145, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r48, %r47, 18;
	shf.r.wrap.b32 	%r52, %r47, %r48, 18;
	mov.b64 	%rd146, {%r52, %r51};
	xor.b64  	%rd147, %rd146, %rd145;
	shf.l.wrap.b32 	%r53, %r47, %r48, 23;
	shf.l.wrap.b32 	%r54, %r48, %r47, 23;
	mov.b64 	%rd148, {%r54, %r53};
	xor.b64  	%rd149, %rd147, %rd148;
	xor.b64  	%rd150, %rd122, 5840696475078001361;
	and.b64  	%rd151, %rd133, %rd150;
	xor.b64  	%rd152, %rd151, 5840696475078001361;
	add.s64 	%rd153, %rd11, %rd152;
	add.s64 	%rd154, %rd153, %rd149;
	add.s64 	%rd155, %rd154, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd144;
	}
	shf.r.wrap.b32 	%r57, %r56, %r55, 28;
	shf.r.wrap.b32 	%r58, %r55, %r56, 28;
	mov.b64 	%rd156, {%r58, %r57};
	shf.l.wrap.b32 	%r59, %r55, %r56, 30;
	shf.l.wrap.b32 	%r60, %r56, %r55, 30;
	mov.b64 	%rd157, {%r60, %r59};
	xor.b64  	%rd158, %rd157, %rd156;
	shf.l.wrap.b32 	%r61, %r55, %r56, 25;
	shf.l.wrap.b32 	%r62, %r56, %r55, 25;
	mov.b64 	%rd159, {%r62, %r61};
	xor.b64  	%rd160, %rd158, %rd159;
	and.b64  	%rd161, %rd144, %rd123;
	xor.b64  	%rd162, %rd144, %rd123;
	and.b64  	%rd163, %rd162, 7640891576956012808;
	or.b64  	%rd164, %rd163, %rd161;
	add.s64 	%rd165, %rd164, %rd154;
	add.s64 	%rd166, %rd165, %rd160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd155;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 14;
	shf.r.wrap.b32 	%r66, %r63, %r64, 14;
	mov.b64 	%rd167, {%r66, %r65};
	shf.r.wrap.b32 	%r67, %r64, %r63, 18;
	shf.r.wrap.b32 	%r68, %r63, %r64, 18;
	mov.b64 	%rd168, {%r68, %r67};
	xor.b64  	%rd169, %rd168, %rd167;
	shf.l.wrap.b32 	%r69, %r63, %r64, 23;
	shf.l.wrap.b32 	%r70, %r64, %r63, 23;
	mov.b64 	%rd170, {%r70, %r69};
	xor.b64  	%rd171, %rd169, %rd170;
	xor.b64  	%rd172, %rd133, %rd122;
	and.b64  	%rd173, %rd155, %rd172;
	xor.b64  	%rd174, %rd173, %rd122;
	add.s64 	%rd175, %rd12, %rd174;
	add.s64 	%rd176, %rd175, %rd171;
	add.s64 	%rd177, %rd176, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd166;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 28;
	shf.r.wrap.b32 	%r74, %r71, %r72, 28;
	mov.b64 	%rd178, {%r74, %r73};
	shf.l.wrap.b32 	%r75, %r71, %r72, 30;
	shf.l.wrap.b32 	%r76, %r72, %r71, 30;
	mov.b64 	%rd179, {%r76, %r75};
	xor.b64  	%rd180, %rd179, %rd178;
	shf.l.wrap.b32 	%r77, %r71, %r72, 25;
	shf.l.wrap.b32 	%r78, %r72, %r71, 25;
	mov.b64 	%rd181, {%r78, %r77};
	xor.b64  	%rd182, %rd180, %rd181;
	and.b64  	%rd183, %rd166, %rd144;
	xor.b64  	%rd184, %rd166, %rd144;
	and.b64  	%rd185, %rd184, %rd123;
	or.b64  	%rd186, %rd185, %rd183;
	add.s64 	%rd187, %rd176, %rd186;
	add.s64 	%rd188, %rd187, %rd182;
	add.s64 	%rd189, %rd1047, %rd122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd177;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 14;
	shf.r.wrap.b32 	%r82, %r79, %r80, 14;
	mov.b64 	%rd190, {%r82, %r81};
	shf.r.wrap.b32 	%r83, %r80, %r79, 18;
	shf.r.wrap.b32 	%r84, %r79, %r80, 18;
	mov.b64 	%rd191, {%r84, %r83};
	xor.b64  	%rd192, %rd191, %rd190;
	shf.l.wrap.b32 	%r85, %r79, %r80, 23;
	shf.l.wrap.b32 	%r86, %r80, %r79, 23;
	mov.b64 	%rd193, {%r86, %r85};
	xor.b64  	%rd194, %rd192, %rd193;
	xor.b64  	%rd195, %rd155, %rd133;
	and.b64  	%rd196, %rd177, %rd195;
	xor.b64  	%rd197, %rd196, %rd133;
	add.s64 	%rd198, %rd189, %rd197;
	add.s64 	%rd199, %rd198, %rd194;
	add.s64 	%rd200, %rd199, %rd123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd188;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 28;
	shf.r.wrap.b32 	%r90, %r87, %r88, 28;
	mov.b64 	%rd201, {%r90, %r89};
	shf.l.wrap.b32 	%r91, %r87, %r88, 30;
	shf.l.wrap.b32 	%r92, %r88, %r87, 30;
	mov.b64 	%rd202, {%r92, %r91};
	xor.b64  	%rd203, %rd202, %rd201;
	shf.l.wrap.b32 	%r93, %r87, %r88, 25;
	shf.l.wrap.b32 	%r94, %r88, %r87, 25;
	mov.b64 	%rd204, {%r94, %r93};
	xor.b64  	%rd205, %rd203, %rd204;
	and.b64  	%rd206, %rd188, %rd166;
	xor.b64  	%rd207, %rd188, %rd166;
	and.b64  	%rd208, %rd207, %rd144;
	or.b64  	%rd209, %rd208, %rd206;
	add.s64 	%rd210, %rd199, %rd209;
	add.s64 	%rd211, %rd210, %rd205;
	add.s64 	%rd212, %rd1048, %rd133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd200;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 14;
	shf.r.wrap.b32 	%r98, %r95, %r96, 14;
	mov.b64 	%rd213, {%r98, %r97};
	shf.r.wrap.b32 	%r99, %r96, %r95, 18;
	shf.r.wrap.b32 	%r100, %r95, %r96, 18;
	mov.b64 	%rd214, {%r100, %r99};
	xor.b64  	%rd215, %rd214, %rd213;
	shf.l.wrap.b32 	%r101, %r95, %r96, 23;
	shf.l.wrap.b32 	%r102, %r96, %r95, 23;
	mov.b64 	%rd216, {%r102, %r101};
	xor.b64  	%rd217, %rd215, %rd216;
	xor.b64  	%rd218, %rd177, %rd155;
	and.b64  	%rd219, %rd200, %rd218;
	xor.b64  	%rd220, %rd219, %rd155;
	add.s64 	%rd221, %rd212, %rd220;
	add.s64 	%rd222, %rd221, %rd217;
	add.s64 	%rd223, %rd222, %rd144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd211;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 28;
	shf.r.wrap.b32 	%r106, %r103, %r104, 28;
	mov.b64 	%rd224, {%r106, %r105};
	shf.l.wrap.b32 	%r107, %r103, %r104, 30;
	shf.l.wrap.b32 	%r108, %r104, %r103, 30;
	mov.b64 	%rd225, {%r108, %r107};
	xor.b64  	%rd226, %rd225, %rd224;
	shf.l.wrap.b32 	%r109, %r103, %r104, 25;
	shf.l.wrap.b32 	%r110, %r104, %r103, 25;
	mov.b64 	%rd227, {%r110, %r109};
	xor.b64  	%rd228, %rd226, %rd227;
	and.b64  	%rd229, %rd211, %rd188;
	xor.b64  	%rd230, %rd211, %rd188;
	and.b64  	%rd231, %rd230, %rd166;
	or.b64  	%rd232, %rd231, %rd229;
	add.s64 	%rd233, %rd222, %rd232;
	add.s64 	%rd234, %rd233, %rd228;
	add.s64 	%rd235, %rd1049, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd223;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 14;
	shf.r.wrap.b32 	%r114, %r111, %r112, 14;
	mov.b64 	%rd236, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r112, %r111, 18;
	shf.r.wrap.b32 	%r116, %r111, %r112, 18;
	mov.b64 	%rd237, {%r116, %r115};
	xor.b64  	%rd238, %rd237, %rd236;
	shf.l.wrap.b32 	%r117, %r111, %r112, 23;
	shf.l.wrap.b32 	%r118, %r112, %r111, 23;
	mov.b64 	%rd239, {%r118, %r117};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd200, %rd177;
	and.b64  	%rd242, %rd223, %rd241;
	xor.b64  	%rd243, %rd242, %rd177;
	add.s64 	%rd244, %rd235, %rd243;
	add.s64 	%rd245, %rd244, %rd240;
	add.s64 	%rd246, %rd245, %rd166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd234;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 28;
	shf.r.wrap.b32 	%r122, %r119, %r120, 28;
	mov.b64 	%rd247, {%r122, %r121};
	shf.l.wrap.b32 	%r123, %r119, %r120, 30;
	shf.l.wrap.b32 	%r124, %r120, %r119, 30;
	mov.b64 	%rd248, {%r124, %r123};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r125, %r119, %r120, 25;
	shf.l.wrap.b32 	%r126, %r120, %r119, 25;
	mov.b64 	%rd250, {%r126, %r125};
	xor.b64  	%rd251, %rd249, %rd250;
	and.b64  	%rd252, %rd234, %rd211;
	xor.b64  	%rd253, %rd234, %rd211;
	and.b64  	%rd254, %rd253, %rd188;
	or.b64  	%rd255, %rd254, %rd252;
	add.s64 	%rd256, %rd245, %rd255;
	add.s64 	%rd257, %rd256, %rd251;
	add.s64 	%rd258, %rd1050, %rd177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd246;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 14;
	shf.r.wrap.b32 	%r130, %r127, %r128, 14;
	mov.b64 	%rd259, {%r130, %r129};
	shf.r.wrap.b32 	%r131, %r128, %r127, 18;
	shf.r.wrap.b32 	%r132, %r127, %r128, 18;
	mov.b64 	%rd260, {%r132, %r131};
	xor.b64  	%rd261, %rd260, %rd259;
	shf.l.wrap.b32 	%r133, %r127, %r128, 23;
	shf.l.wrap.b32 	%r134, %r128, %r127, 23;
	mov.b64 	%rd262, {%r134, %r133};
	xor.b64  	%rd263, %rd261, %rd262;
	xor.b64  	%rd264, %rd223, %rd200;
	and.b64  	%rd265, %rd246, %rd264;
	xor.b64  	%rd266, %rd265, %rd200;
	add.s64 	%rd267, %rd258, %rd266;
	add.s64 	%rd268, %rd267, %rd263;
	add.s64 	%rd269, %rd268, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd257;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 28;
	shf.r.wrap.b32 	%r138, %r135, %r136, 28;
	mov.b64 	%rd270, {%r138, %r137};
	shf.l.wrap.b32 	%r139, %r135, %r136, 30;
	shf.l.wrap.b32 	%r140, %r136, %r135, 30;
	mov.b64 	%rd271, {%r140, %r139};
	xor.b64  	%rd272, %rd271, %rd270;
	shf.l.wrap.b32 	%r141, %r135, %r136, 25;
	shf.l.wrap.b32 	%r142, %r136, %r135, 25;
	mov.b64 	%rd273, {%r142, %r141};
	xor.b64  	%rd274, %rd272, %rd273;
	and.b64  	%rd275, %rd257, %rd234;
	xor.b64  	%rd276, %rd257, %rd234;
	and.b64  	%rd277, %rd276, %rd211;
	or.b64  	%rd278, %rd277, %rd275;
	add.s64 	%rd279, %rd268, %rd278;
	add.s64 	%rd280, %rd279, %rd274;
	add.s64 	%rd281, %rd1051, %rd200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd269;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 14;
	shf.r.wrap.b32 	%r146, %r143, %r144, 14;
	mov.b64 	%rd282, {%r146, %r145};
	shf.r.wrap.b32 	%r147, %r144, %r143, 18;
	shf.r.wrap.b32 	%r148, %r143, %r144, 18;
	mov.b64 	%rd283, {%r148, %r147};
	xor.b64  	%rd284, %rd283, %rd282;
	shf.l.wrap.b32 	%r149, %r143, %r144, 23;
	shf.l.wrap.b32 	%r150, %r144, %r143, 23;
	mov.b64 	%rd285, {%r150, %r149};
	xor.b64  	%rd286, %rd284, %rd285;
	xor.b64  	%rd287, %rd246, %rd223;
	and.b64  	%rd288, %rd269, %rd287;
	xor.b64  	%rd289, %rd288, %rd223;
	add.s64 	%rd290, %rd281, %rd289;
	add.s64 	%rd291, %rd290, %rd286;
	add.s64 	%rd292, %rd291, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd280;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 28;
	shf.r.wrap.b32 	%r154, %r151, %r152, 28;
	mov.b64 	%rd293, {%r154, %r153};
	shf.l.wrap.b32 	%r155, %r151, %r152, 30;
	shf.l.wrap.b32 	%r156, %r152, %r151, 30;
	mov.b64 	%rd294, {%r156, %r155};
	xor.b64  	%rd295, %rd294, %rd293;
	shf.l.wrap.b32 	%r157, %r151, %r152, 25;
	shf.l.wrap.b32 	%r158, %r152, %r151, 25;
	mov.b64 	%rd296, {%r158, %r157};
	xor.b64  	%rd297, %rd295, %rd296;
	and.b64  	%rd298, %rd280, %rd257;
	xor.b64  	%rd299, %rd280, %rd257;
	and.b64  	%rd300, %rd299, %rd234;
	or.b64  	%rd301, %rd300, %rd298;
	add.s64 	%rd302, %rd291, %rd301;
	add.s64 	%rd303, %rd302, %rd297;
	add.s64 	%rd304, %rd1052, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd292;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 14;
	shf.r.wrap.b32 	%r162, %r159, %r160, 14;
	mov.b64 	%rd305, {%r162, %r161};
	shf.r.wrap.b32 	%r163, %r160, %r159, 18;
	shf.r.wrap.b32 	%r164, %r159, %r160, 18;
	mov.b64 	%rd306, {%r164, %r163};
	xor.b64  	%rd307, %rd306, %rd305;
	shf.l.wrap.b32 	%r165, %r159, %r160, 23;
	shf.l.wrap.b32 	%r166, %r160, %r159, 23;
	mov.b64 	%rd308, {%r166, %r165};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd269, %rd246;
	and.b64  	%rd311, %rd292, %rd310;
	xor.b64  	%rd312, %rd311, %rd246;
	add.s64 	%rd313, %rd304, %rd312;
	add.s64 	%rd314, %rd313, %rd309;
	add.s64 	%rd315, %rd314, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd303;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 28;
	shf.r.wrap.b32 	%r170, %r167, %r168, 28;
	mov.b64 	%rd316, {%r170, %r169};
	shf.l.wrap.b32 	%r171, %r167, %r168, 30;
	shf.l.wrap.b32 	%r172, %r168, %r167, 30;
	mov.b64 	%rd317, {%r172, %r171};
	xor.b64  	%rd318, %rd317, %rd316;
	shf.l.wrap.b32 	%r173, %r167, %r168, 25;
	shf.l.wrap.b32 	%r174, %r168, %r167, 25;
	mov.b64 	%rd319, {%r174, %r173};
	xor.b64  	%rd320, %rd318, %rd319;
	and.b64  	%rd321, %rd303, %rd280;
	xor.b64  	%rd322, %rd303, %rd280;
	and.b64  	%rd323, %rd322, %rd257;
	or.b64  	%rd324, %rd323, %rd321;
	add.s64 	%rd325, %rd314, %rd324;
	add.s64 	%rd326, %rd325, %rd320;
	add.s64 	%rd327, %rd1053, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd315;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 14;
	shf.r.wrap.b32 	%r178, %r175, %r176, 14;
	mov.b64 	%rd328, {%r178, %r177};
	shf.r.wrap.b32 	%r179, %r176, %r175, 18;
	shf.r.wrap.b32 	%r180, %r175, %r176, 18;
	mov.b64 	%rd329, {%r180, %r179};
	xor.b64  	%rd330, %rd329, %rd328;
	shf.l.wrap.b32 	%r181, %r175, %r176, 23;
	shf.l.wrap.b32 	%r182, %r176, %r175, 23;
	mov.b64 	%rd331, {%r182, %r181};
	xor.b64  	%rd332, %rd330, %rd331;
	xor.b64  	%rd333, %rd292, %rd269;
	and.b64  	%rd334, %rd315, %rd333;
	xor.b64  	%rd335, %rd334, %rd269;
	add.s64 	%rd336, %rd327, %rd335;
	add.s64 	%rd337, %rd336, %rd332;
	add.s64 	%rd338, %rd337, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd326;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 28;
	shf.r.wrap.b32 	%r186, %r183, %r184, 28;
	mov.b64 	%rd339, {%r186, %r185};
	shf.l.wrap.b32 	%r187, %r183, %r184, 30;
	shf.l.wrap.b32 	%r188, %r184, %r183, 30;
	mov.b64 	%rd340, {%r188, %r187};
	xor.b64  	%rd341, %rd340, %rd339;
	shf.l.wrap.b32 	%r189, %r183, %r184, 25;
	shf.l.wrap.b32 	%r190, %r184, %r183, 25;
	mov.b64 	%rd342, {%r190, %r189};
	xor.b64  	%rd343, %rd341, %rd342;
	and.b64  	%rd344, %rd326, %rd303;
	xor.b64  	%rd345, %rd326, %rd303;
	and.b64  	%rd346, %rd345, %rd280;
	or.b64  	%rd347, %rd346, %rd344;
	add.s64 	%rd348, %rd337, %rd347;
	add.s64 	%rd349, %rd348, %rd343;
	add.s64 	%rd350, %rd1054, %rd269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd338;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 14;
	shf.r.wrap.b32 	%r194, %r191, %r192, 14;
	mov.b64 	%rd351, {%r194, %r193};
	shf.r.wrap.b32 	%r195, %r192, %r191, 18;
	shf.r.wrap.b32 	%r196, %r191, %r192, 18;
	mov.b64 	%rd352, {%r196, %r195};
	xor.b64  	%rd353, %rd352, %rd351;
	shf.l.wrap.b32 	%r197, %r191, %r192, 23;
	shf.l.wrap.b32 	%r198, %r192, %r191, 23;
	mov.b64 	%rd354, {%r198, %r197};
	xor.b64  	%rd355, %rd353, %rd354;
	xor.b64  	%rd356, %rd315, %rd292;
	and.b64  	%rd357, %rd338, %rd356;
	xor.b64  	%rd358, %rd357, %rd292;
	add.s64 	%rd359, %rd350, %rd358;
	add.s64 	%rd360, %rd359, %rd355;
	add.s64 	%rd361, %rd360, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd349;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 28;
	shf.r.wrap.b32 	%r202, %r199, %r200, 28;
	mov.b64 	%rd362, {%r202, %r201};
	shf.l.wrap.b32 	%r203, %r199, %r200, 30;
	shf.l.wrap.b32 	%r204, %r200, %r199, 30;
	mov.b64 	%rd363, {%r204, %r203};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r205, %r199, %r200, 25;
	shf.l.wrap.b32 	%r206, %r200, %r199, 25;
	mov.b64 	%rd365, {%r206, %r205};
	xor.b64  	%rd366, %rd364, %rd365;
	and.b64  	%rd367, %rd349, %rd326;
	xor.b64  	%rd368, %rd349, %rd326;
	and.b64  	%rd369, %rd368, %rd303;
	or.b64  	%rd370, %rd369, %rd367;
	add.s64 	%rd371, %rd360, %rd370;
	add.s64 	%rd372, %rd371, %rd366;
	add.s64 	%rd373, %rd1055, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd361;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 14;
	shf.r.wrap.b32 	%r210, %r207, %r208, 14;
	mov.b64 	%rd374, {%r210, %r209};
	shf.r.wrap.b32 	%r211, %r208, %r207, 18;
	shf.r.wrap.b32 	%r212, %r207, %r208, 18;
	mov.b64 	%rd375, {%r212, %r211};
	xor.b64  	%rd376, %rd375, %rd374;
	shf.l.wrap.b32 	%r213, %r207, %r208, 23;
	shf.l.wrap.b32 	%r214, %r208, %r207, 23;
	mov.b64 	%rd377, {%r214, %r213};
	xor.b64  	%rd378, %rd376, %rd377;
	xor.b64  	%rd379, %rd338, %rd315;
	and.b64  	%rd380, %rd361, %rd379;
	xor.b64  	%rd381, %rd380, %rd315;
	add.s64 	%rd382, %rd373, %rd381;
	add.s64 	%rd383, %rd382, %rd378;
	add.s64 	%rd1068, %rd383, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd372;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 28;
	shf.r.wrap.b32 	%r218, %r215, %r216, 28;
	mov.b64 	%rd384, {%r218, %r217};
	shf.l.wrap.b32 	%r219, %r215, %r216, 30;
	shf.l.wrap.b32 	%r220, %r216, %r215, 30;
	mov.b64 	%rd385, {%r220, %r219};
	xor.b64  	%rd386, %rd385, %rd384;
	shf.l.wrap.b32 	%r221, %r215, %r216, 25;
	shf.l.wrap.b32 	%r222, %r216, %r215, 25;
	mov.b64 	%rd387, {%r222, %r221};
	xor.b64  	%rd388, %rd386, %rd387;
	and.b64  	%rd389, %rd372, %rd349;
	xor.b64  	%rd390, %rd372, %rd349;
	and.b64  	%rd391, %rd390, %rd326;
	or.b64  	%rd392, %rd391, %rd389;
	add.s64 	%rd393, %rd383, %rd392;
	add.s64 	%rd1091, %rd393, %rd388;
	add.s64 	%rd394, %rd1056, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd1068;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 14;
	shf.r.wrap.b32 	%r226, %r223, %r224, 14;
	mov.b64 	%rd395, {%r226, %r225};
	shf.r.wrap.b32 	%r227, %r224, %r223, 18;
	shf.r.wrap.b32 	%r228, %r223, %r224, 18;
	mov.b64 	%rd396, {%r228, %r227};
	xor.b64  	%rd397, %rd396, %rd395;
	shf.l.wrap.b32 	%r229, %r223, %r224, 23;
	shf.l.wrap.b32 	%r230, %r224, %r223, 23;
	mov.b64 	%rd398, {%r230, %r229};
	xor.b64  	%rd399, %rd397, %rd398;
	xor.b64  	%rd400, %rd361, %rd338;
	and.b64  	%rd401, %rd1068, %rd400;
	xor.b64  	%rd402, %rd401, %rd338;
	add.s64 	%rd403, %rd394, %rd402;
	add.s64 	%rd404, %rd403, %rd399;
	add.s64 	%rd1069, %rd404, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd1091;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 28;
	shf.r.wrap.b32 	%r234, %r231, %r232, 28;
	mov.b64 	%rd405, {%r234, %r233};
	shf.l.wrap.b32 	%r235, %r231, %r232, 30;
	shf.l.wrap.b32 	%r236, %r232, %r231, 30;
	mov.b64 	%rd406, {%r236, %r235};
	xor.b64  	%rd407, %rd406, %rd405;
	shf.l.wrap.b32 	%r237, %r231, %r232, 25;
	shf.l.wrap.b32 	%r238, %r232, %r231, 25;
	mov.b64 	%rd408, {%r238, %r237};
	xor.b64  	%rd409, %rd407, %rd408;
	and.b64  	%rd410, %rd1091, %rd372;
	xor.b64  	%rd411, %rd1091, %rd372;
	and.b64  	%rd412, %rd411, %rd349;
	or.b64  	%rd413, %rd412, %rd410;
	add.s64 	%rd414, %rd404, %rd413;
	add.s64 	%rd1090, %rd414, %rd409;
	add.s64 	%rd415, %rd1057, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd1069;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 14;
	shf.r.wrap.b32 	%r242, %r239, %r240, 14;
	mov.b64 	%rd416, {%r242, %r241};
	shf.r.wrap.b32 	%r243, %r240, %r239, 18;
	shf.r.wrap.b32 	%r244, %r239, %r240, 18;
	mov.b64 	%rd417, {%r244, %r243};
	xor.b64  	%rd418, %rd417, %rd416;
	shf.l.wrap.b32 	%r245, %r239, %r240, 23;
	shf.l.wrap.b32 	%r246, %r240, %r239, 23;
	mov.b64 	%rd419, {%r246, %r245};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd1068, %rd361;
	and.b64  	%rd422, %rd1069, %rd421;
	xor.b64  	%rd423, %rd422, %rd361;
	add.s64 	%rd424, %rd415, %rd423;
	add.s64 	%rd425, %rd424, %rd420;
	add.s64 	%rd1070, %rd425, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd1090;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 28;
	shf.r.wrap.b32 	%r250, %r247, %r248, 28;
	mov.b64 	%rd426, {%r250, %r249};
	shf.l.wrap.b32 	%r251, %r247, %r248, 30;
	shf.l.wrap.b32 	%r252, %r248, %r247, 30;
	mov.b64 	%rd427, {%r252, %r251};
	xor.b64  	%rd428, %rd427, %rd426;
	shf.l.wrap.b32 	%r253, %r247, %r248, 25;
	shf.l.wrap.b32 	%r254, %r248, %r247, 25;
	mov.b64 	%rd429, {%r254, %r253};
	xor.b64  	%rd430, %rd428, %rd429;
	and.b64  	%rd431, %rd1090, %rd1091;
	xor.b64  	%rd432, %rd1090, %rd1091;
	and.b64  	%rd433, %rd432, %rd372;
	or.b64  	%rd434, %rd433, %rd431;
	add.s64 	%rd435, %rd425, %rd434;
	add.s64 	%rd1089, %rd435, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd1070;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 14;
	shf.r.wrap.b32 	%r258, %r255, %r256, 14;
	mov.b64 	%rd436, {%r258, %r257};
	shf.r.wrap.b32 	%r259, %r256, %r255, 18;
	shf.r.wrap.b32 	%r260, %r255, %r256, 18;
	mov.b64 	%rd437, {%r260, %r259};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r261, %r255, %r256, 23;
	shf.l.wrap.b32 	%r262, %r256, %r255, 23;
	mov.b64 	%rd439, {%r262, %r261};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd1069, %rd1068;
	and.b64  	%rd442, %rd1070, %rd441;
	xor.b64  	%rd443, %rd442, %rd1068;
	add.s64 	%rd444, %rd361, %rd8;
	add.s64 	%rd445, %rd444, %rd1058;
	add.s64 	%rd446, %rd445, %rd443;
	add.s64 	%rd447, %rd446, %rd440;
	add.s64 	%rd1071, %rd447, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd1089;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 28;
	shf.r.wrap.b32 	%r266, %r263, %r264, 28;
	mov.b64 	%rd448, {%r266, %r265};
	shf.l.wrap.b32 	%r267, %r263, %r264, 30;
	shf.l.wrap.b32 	%r268, %r264, %r263, 30;
	mov.b64 	%rd449, {%r268, %r267};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r269, %r263, %r264, 25;
	shf.l.wrap.b32 	%r270, %r264, %r263, 25;
	mov.b64 	%rd451, {%r270, %r269};
	xor.b64  	%rd452, %rd450, %rd451;
	and.b64  	%rd453, %rd1089, %rd1090;
	xor.b64  	%rd454, %rd1089, %rd1090;
	and.b64  	%rd455, %rd454, %rd1091;
	or.b64  	%rd456, %rd455, %rd453;
	add.s64 	%rd457, %rd447, %rd456;
	add.s64 	%rd1088, %rd457, %rd452;
	mov.u64 	%rd1074, 0;
	mov.u32 	%r728, 16;
	mov.u64 	%rd1067, k_sha512;
	mov.u64 	%rd1073, %rd7;
	mov.u64 	%rd1075, %rd1074;
	mov.u64 	%rd1076, %rd1074;
	mov.u64 	%rd1077, %rd1074;
	mov.u64 	%rd1078, %rd1074;
	mov.u64 	%rd1079, %rd1074;
	mov.u64 	%rd1080, %rd1074;
	mov.u64 	%rd1081, %rd1074;
	mov.u64 	%rd1082, %rd1074;
	mov.u64 	%rd1083, %rd1074;
	mov.u64 	%rd1084, %rd1074;
	mov.u64 	%rd1085, %rd1074;
	mov.u64 	%rd1086, %rd1074;
	mov.u64 	%rd1087, %rd8;

BB3_4:
	shr.u64 	%rd458, %rd1086, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd1086;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 19;
	shf.r.wrap.b32 	%r274, %r271, %r272, 19;
	mov.b64 	%rd459, {%r274, %r273};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.l.wrap.b32 	%r275, %r271, %r272, 3;
	shf.l.wrap.b32 	%r276, %r272, %r271, 3;
	mov.b64 	%rd461, {%r276, %r275};
	xor.b64  	%rd462, %rd460, %rd461;
	shr.u64 	%rd463, %rd1073, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd1073;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 1;
	shf.r.wrap.b32 	%r280, %r277, %r278, 1;
	mov.b64 	%rd464, {%r280, %r279};
	xor.b64  	%rd465, %rd464, %rd463;
	shf.r.wrap.b32 	%r281, %r278, %r277, 8;
	shf.r.wrap.b32 	%r282, %r277, %r278, 8;
	mov.b64 	%rd466, {%r282, %r281};
	xor.b64  	%rd467, %rd465, %rd466;
	add.s64 	%rd468, %rd1072, %rd1081;
	add.s64 	%rd469, %rd468, %rd462;
	add.s64 	%rd1072, %rd469, %rd467;
	shr.u64 	%rd470, %rd1087, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd1087;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 19;
	shf.r.wrap.b32 	%r286, %r283, %r284, 19;
	mov.b64 	%rd471, {%r286, %r285};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.l.wrap.b32 	%r287, %r283, %r284, 3;
	shf.l.wrap.b32 	%r288, %r284, %r283, 3;
	mov.b64 	%rd473, {%r288, %r287};
	xor.b64  	%rd474, %rd472, %rd473;
	shr.u64 	%rd475, %rd1074, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd1074;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 1;
	shf.r.wrap.b32 	%r292, %r289, %r290, 1;
	mov.b64 	%rd476, {%r292, %r291};
	xor.b64  	%rd477, %rd476, %rd475;
	shf.r.wrap.b32 	%r293, %r290, %r289, 8;
	shf.r.wrap.b32 	%r294, %r289, %r290, 8;
	mov.b64 	%rd478, {%r294, %r293};
	xor.b64  	%rd479, %rd477, %rd478;
	add.s64 	%rd480, %rd1073, %rd1082;
	add.s64 	%rd481, %rd480, %rd474;
	add.s64 	%rd1073, %rd481, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd1072;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 19;
	shf.r.wrap.b32 	%r298, %r295, %r296, 19;
	mov.b64 	%rd482, {%r298, %r297};
	shf.l.wrap.b32 	%r299, %r295, %r296, 3;
	shf.l.wrap.b32 	%r300, %r296, %r295, 3;
	mov.b64 	%rd483, {%r300, %r299};
	shr.u64 	%rd484, %rd1072, 6;
	xor.b64  	%rd485, %rd482, %rd484;
	xor.b64  	%rd486, %rd485, %rd483;
	shr.u64 	%rd487, %rd1075, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd1075;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 1;
	shf.r.wrap.b32 	%r304, %r301, %r302, 1;
	mov.b64 	%rd488, {%r304, %r303};
	xor.b64  	%rd489, %rd488, %rd487;
	shf.r.wrap.b32 	%r305, %r302, %r301, 8;
	shf.r.wrap.b32 	%r306, %r301, %r302, 8;
	mov.b64 	%rd490, {%r306, %r305};
	xor.b64  	%rd491, %rd489, %rd490;
	add.s64 	%rd492, %rd1074, %rd1083;
	add.s64 	%rd493, %rd492, %rd486;
	add.s64 	%rd1074, %rd493, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1073;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 19;
	shf.r.wrap.b32 	%r310, %r307, %r308, 19;
	mov.b64 	%rd494, {%r310, %r309};
	shf.l.wrap.b32 	%r311, %r307, %r308, 3;
	shf.l.wrap.b32 	%r312, %r308, %r307, 3;
	mov.b64 	%rd495, {%r312, %r311};
	shr.u64 	%rd496, %rd1073, 6;
	xor.b64  	%rd497, %rd494, %rd496;
	xor.b64  	%rd498, %rd497, %rd495;
	shr.u64 	%rd499, %rd1076, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd1076;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 1;
	shf.r.wrap.b32 	%r316, %r313, %r314, 1;
	mov.b64 	%rd500, {%r316, %r315};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.r.wrap.b32 	%r317, %r314, %r313, 8;
	shf.r.wrap.b32 	%r318, %r313, %r314, 8;
	mov.b64 	%rd502, {%r318, %r317};
	xor.b64  	%rd503, %rd501, %rd502;
	add.s64 	%rd504, %rd1075, %rd1084;
	add.s64 	%rd505, %rd504, %rd498;
	add.s64 	%rd1075, %rd505, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd1074;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 19;
	shf.r.wrap.b32 	%r322, %r319, %r320, 19;
	mov.b64 	%rd506, {%r322, %r321};
	shf.l.wrap.b32 	%r323, %r319, %r320, 3;
	shf.l.wrap.b32 	%r324, %r320, %r319, 3;
	mov.b64 	%rd507, {%r324, %r323};
	shr.u64 	%rd508, %rd1074, 6;
	xor.b64  	%rd509, %rd506, %rd508;
	xor.b64  	%rd510, %rd509, %rd507;
	shr.u64 	%rd511, %rd1077, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd1077;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 1;
	shf.r.wrap.b32 	%r328, %r325, %r326, 1;
	mov.b64 	%rd512, {%r328, %r327};
	xor.b64  	%rd513, %rd512, %rd511;
	shf.r.wrap.b32 	%r329, %r326, %r325, 8;
	shf.r.wrap.b32 	%r330, %r325, %r326, 8;
	mov.b64 	%rd514, {%r330, %r329};
	xor.b64  	%rd515, %rd513, %rd514;
	add.s64 	%rd516, %rd1076, %rd1085;
	add.s64 	%rd517, %rd516, %rd510;
	add.s64 	%rd1076, %rd517, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd1075;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 19;
	shf.r.wrap.b32 	%r334, %r331, %r332, 19;
	mov.b64 	%rd518, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 3;
	shf.l.wrap.b32 	%r336, %r332, %r331, 3;
	mov.b64 	%rd519, {%r336, %r335};
	shr.u64 	%rd520, %rd1075, 6;
	xor.b64  	%rd521, %rd518, %rd520;
	xor.b64  	%rd522, %rd521, %rd519;
	shr.u64 	%rd523, %rd1078, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd1078;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 1;
	shf.r.wrap.b32 	%r340, %r337, %r338, 1;
	mov.b64 	%rd524, {%r340, %r339};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.r.wrap.b32 	%r341, %r338, %r337, 8;
	shf.r.wrap.b32 	%r342, %r337, %r338, 8;
	mov.b64 	%rd526, {%r342, %r341};
	xor.b64  	%rd527, %rd525, %rd526;
	add.s64 	%rd528, %rd1077, %rd1086;
	add.s64 	%rd529, %rd528, %rd522;
	add.s64 	%rd1077, %rd529, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd1076;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 19;
	shf.r.wrap.b32 	%r346, %r343, %r344, 19;
	mov.b64 	%rd530, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 3;
	shf.l.wrap.b32 	%r348, %r344, %r343, 3;
	mov.b64 	%rd531, {%r348, %r347};
	shr.u64 	%rd532, %rd1076, 6;
	xor.b64  	%rd533, %rd530, %rd532;
	xor.b64  	%rd534, %rd533, %rd531;
	shr.u64 	%rd535, %rd1079, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd1079;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 1;
	shf.r.wrap.b32 	%r352, %r349, %r350, 1;
	mov.b64 	%rd536, {%r352, %r351};
	xor.b64  	%rd537, %rd536, %rd535;
	shf.r.wrap.b32 	%r353, %r350, %r349, 8;
	shf.r.wrap.b32 	%r354, %r349, %r350, 8;
	mov.b64 	%rd538, {%r354, %r353};
	xor.b64  	%rd539, %rd537, %rd538;
	add.s64 	%rd540, %rd1078, %rd1087;
	add.s64 	%rd541, %rd540, %rd534;
	add.s64 	%rd1078, %rd541, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd1077;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd542, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd543, {%r360, %r359};
	shr.u64 	%rd544, %rd1077, 6;
	xor.b64  	%rd545, %rd542, %rd544;
	xor.b64  	%rd546, %rd545, %rd543;
	shr.u64 	%rd547, %rd1080, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd1080;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 1;
	shf.r.wrap.b32 	%r364, %r361, %r362, 1;
	mov.b64 	%rd548, {%r364, %r363};
	xor.b64  	%rd549, %rd548, %rd547;
	shf.r.wrap.b32 	%r365, %r362, %r361, 8;
	shf.r.wrap.b32 	%r366, %r361, %r362, 8;
	mov.b64 	%rd550, {%r366, %r365};
	xor.b64  	%rd551, %rd549, %rd550;
	add.s64 	%rd552, %rd1072, %rd1079;
	add.s64 	%rd553, %rd552, %rd546;
	add.s64 	%rd1079, %rd553, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd1078;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd554, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd555, {%r372, %r371};
	shr.u64 	%rd556, %rd1078, 6;
	xor.b64  	%rd557, %rd554, %rd556;
	xor.b64  	%rd558, %rd557, %rd555;
	shr.u64 	%rd559, %rd1081, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd1081;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 1;
	shf.r.wrap.b32 	%r376, %r373, %r374, 1;
	mov.b64 	%rd560, {%r376, %r375};
	xor.b64  	%rd561, %rd560, %rd559;
	shf.r.wrap.b32 	%r377, %r374, %r373, 8;
	shf.r.wrap.b32 	%r378, %r373, %r374, 8;
	mov.b64 	%rd562, {%r378, %r377};
	xor.b64  	%rd563, %rd561, %rd562;
	add.s64 	%rd564, %rd1073, %rd1080;
	add.s64 	%rd565, %rd564, %rd558;
	add.s64 	%rd1080, %rd565, %rd563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd1079;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd566, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd567, {%r384, %r383};
	shr.u64 	%rd568, %rd1079, 6;
	xor.b64  	%rd569, %rd566, %rd568;
	xor.b64  	%rd570, %rd569, %rd567;
	shr.u64 	%rd571, %rd1082, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd1082;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 1;
	shf.r.wrap.b32 	%r388, %r385, %r386, 1;
	mov.b64 	%rd572, {%r388, %r387};
	xor.b64  	%rd573, %rd572, %rd571;
	shf.r.wrap.b32 	%r389, %r386, %r385, 8;
	shf.r.wrap.b32 	%r390, %r385, %r386, 8;
	mov.b64 	%rd574, {%r390, %r389};
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd1074, %rd1081;
	add.s64 	%rd577, %rd576, %rd570;
	add.s64 	%rd1081, %rd577, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd1080;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 19;
	shf.r.wrap.b32 	%r394, %r391, %r392, 19;
	mov.b64 	%rd578, {%r394, %r393};
	shf.l.wrap.b32 	%r395, %r391, %r392, 3;
	shf.l.wrap.b32 	%r396, %r392, %r391, 3;
	mov.b64 	%rd579, {%r396, %r395};
	shr.u64 	%rd580, %rd1080, 6;
	xor.b64  	%rd581, %rd578, %rd580;
	xor.b64  	%rd582, %rd581, %rd579;
	shr.u64 	%rd583, %rd1083, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1083;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 1;
	shf.r.wrap.b32 	%r400, %r397, %r398, 1;
	mov.b64 	%rd584, {%r400, %r399};
	xor.b64  	%rd585, %rd584, %rd583;
	shf.r.wrap.b32 	%r401, %r398, %r397, 8;
	shf.r.wrap.b32 	%r402, %r397, %r398, 8;
	mov.b64 	%rd586, {%r402, %r401};
	xor.b64  	%rd587, %rd585, %rd586;
	add.s64 	%rd588, %rd1075, %rd1082;
	add.s64 	%rd589, %rd588, %rd582;
	add.s64 	%rd1082, %rd589, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd1081;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 19;
	shf.r.wrap.b32 	%r406, %r403, %r404, 19;
	mov.b64 	%rd590, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 3;
	shf.l.wrap.b32 	%r408, %r404, %r403, 3;
	mov.b64 	%rd591, {%r408, %r407};
	shr.u64 	%rd592, %rd1081, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	shr.u64 	%rd595, %rd1084, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd1084;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 1;
	shf.r.wrap.b32 	%r412, %r409, %r410, 1;
	mov.b64 	%rd596, {%r412, %r411};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.r.wrap.b32 	%r413, %r410, %r409, 8;
	shf.r.wrap.b32 	%r414, %r409, %r410, 8;
	mov.b64 	%rd598, {%r414, %r413};
	xor.b64  	%rd599, %rd597, %rd598;
	add.s64 	%rd600, %rd1076, %rd1083;
	add.s64 	%rd601, %rd600, %rd594;
	add.s64 	%rd1083, %rd601, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd1082;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd602, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd603, {%r420, %r419};
	shr.u64 	%rd604, %rd1082, 6;
	xor.b64  	%rd605, %rd602, %rd604;
	xor.b64  	%rd606, %rd605, %rd603;
	shr.u64 	%rd607, %rd1085, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd1085;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 1;
	shf.r.wrap.b32 	%r424, %r421, %r422, 1;
	mov.b64 	%rd608, {%r424, %r423};
	xor.b64  	%rd609, %rd608, %rd607;
	shf.r.wrap.b32 	%r425, %r422, %r421, 8;
	shf.r.wrap.b32 	%r426, %r421, %r422, 8;
	mov.b64 	%rd610, {%r426, %r425};
	xor.b64  	%rd611, %rd609, %rd610;
	add.s64 	%rd612, %rd1077, %rd1084;
	add.s64 	%rd613, %rd612, %rd606;
	add.s64 	%rd1084, %rd613, %rd611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd1083;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 19;
	shf.r.wrap.b32 	%r430, %r427, %r428, 19;
	mov.b64 	%rd614, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 3;
	shf.l.wrap.b32 	%r432, %r428, %r427, 3;
	mov.b64 	%rd615, {%r432, %r431};
	shr.u64 	%rd616, %rd1083, 6;
	xor.b64  	%rd617, %rd614, %rd616;
	xor.b64  	%rd618, %rd617, %rd615;
	shr.u64 	%rd619, %rd1086, 7;
	shf.r.wrap.b32 	%r433, %r272, %r271, 1;
	shf.r.wrap.b32 	%r434, %r271, %r272, 1;
	mov.b64 	%rd620, {%r434, %r433};
	xor.b64  	%rd621, %rd620, %rd619;
	shf.r.wrap.b32 	%r435, %r272, %r271, 8;
	shf.r.wrap.b32 	%r436, %r271, %r272, 8;
	mov.b64 	%rd622, {%r436, %r435};
	xor.b64  	%rd623, %rd621, %rd622;
	add.s64 	%rd624, %rd1078, %rd1085;
	add.s64 	%rd625, %rd624, %rd618;
	add.s64 	%rd1085, %rd625, %rd623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd1084;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 19;
	shf.r.wrap.b32 	%r440, %r437, %r438, 19;
	mov.b64 	%rd626, {%r440, %r439};
	shf.l.wrap.b32 	%r441, %r437, %r438, 3;
	shf.l.wrap.b32 	%r442, %r438, %r437, 3;
	mov.b64 	%rd627, {%r442, %r441};
	shr.u64 	%rd628, %rd1084, 6;
	xor.b64  	%rd629, %rd626, %rd628;
	xor.b64  	%rd630, %rd629, %rd627;
	shr.u64 	%rd631, %rd1087, 7;
	shf.r.wrap.b32 	%r443, %r284, %r283, 1;
	shf.r.wrap.b32 	%r444, %r283, %r284, 1;
	mov.b64 	%rd632, {%r444, %r443};
	xor.b64  	%rd633, %rd632, %rd631;
	shf.r.wrap.b32 	%r445, %r284, %r283, 8;
	shf.r.wrap.b32 	%r446, %r283, %r284, 8;
	mov.b64 	%rd634, {%r446, %r445};
	xor.b64  	%rd635, %rd633, %rd634;
	add.s64 	%rd636, %rd1079, %rd1086;
	add.s64 	%rd637, %rd636, %rd630;
	add.s64 	%rd1086, %rd637, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd1085;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 19;
	shf.r.wrap.b32 	%r450, %r447, %r448, 19;
	mov.b64 	%rd638, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 3;
	shf.l.wrap.b32 	%r452, %r448, %r447, 3;
	mov.b64 	%rd639, {%r452, %r451};
	shr.u64 	%rd640, %rd1085, 6;
	xor.b64  	%rd641, %rd638, %rd640;
	xor.b64  	%rd642, %rd641, %rd639;
	shf.r.wrap.b32 	%r453, %r296, %r295, 1;
	shf.r.wrap.b32 	%r454, %r295, %r296, 1;
	mov.b64 	%rd643, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r296, %r295, 8;
	shf.r.wrap.b32 	%r456, %r295, %r296, 8;
	mov.b64 	%rd644, {%r456, %r455};
	shr.u64 	%rd645, %rd1072, 7;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	add.s64 	%rd648, %rd1080, %rd1087;
	add.s64 	%rd649, %rd648, %rd642;
	add.s64 	%rd1087, %rd649, %rd647;
	add.s64 	%rd84, %rd1067, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd1071;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 18;
	shf.r.wrap.b32 	%r460, %r457, %r458, 18;
	mov.b64 	%rd650, {%r460, %r459};
	shf.r.wrap.b32 	%r461, %r458, %r457, 14;
	shf.r.wrap.b32 	%r462, %r457, %r458, 14;
	mov.b64 	%rd651, {%r462, %r461};
	xor.b64  	%rd652, %rd650, %rd651;
	shf.l.wrap.b32 	%r463, %r457, %r458, 23;
	shf.l.wrap.b32 	%r464, %r458, %r457, 23;
	mov.b64 	%rd653, {%r464, %r463};
	xor.b64  	%rd654, %rd652, %rd653;
	xor.b64  	%rd655, %rd1069, %rd1070;
	and.b64  	%rd656, %rd655, %rd1071;
	xor.b64  	%rd657, %rd656, %rd1069;
	add.s64 	%rd658, %rd657, %rd1068;
	add.s64 	%rd659, %rd658, %rd1072;
	ld.const.u64 	%rd660, [%rd1067+128];
	add.s64 	%rd661, %rd659, %rd660;
	add.s64 	%rd662, %rd661, %rd654;
	add.s64 	%rd663, %rd662, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd1088;
	}
	shf.l.wrap.b32 	%r467, %r466, %r465, 30;
	shf.l.wrap.b32 	%r468, %r465, %r466, 30;
	mov.b64 	%rd664, {%r468, %r467};
	shf.r.wrap.b32 	%r469, %r465, %r466, 28;
	shf.r.wrap.b32 	%r470, %r466, %r465, 28;
	mov.b64 	%rd665, {%r470, %r469};
	xor.b64  	%rd666, %rd664, %rd665;
	shf.l.wrap.b32 	%r471, %r466, %r465, 25;
	shf.l.wrap.b32 	%r472, %r465, %r466, 25;
	mov.b64 	%rd667, {%r472, %r471};
	xor.b64  	%rd668, %rd666, %rd667;
	xor.b64  	%rd669, %rd1088, %rd1089;
	and.b64  	%rd670, %rd669, %rd1090;
	and.b64  	%rd671, %rd1088, %rd1089;
	or.b64  	%rd672, %rd670, %rd671;
	add.s64 	%rd673, %rd662, %rd672;
	add.s64 	%rd674, %rd673, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd663;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd675, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd676, {%r478, %r477};
	xor.b64  	%rd677, %rd676, %rd675;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd678, {%r480, %r479};
	xor.b64  	%rd679, %rd677, %rd678;
	xor.b64  	%rd680, %rd1070, %rd1071;
	and.b64  	%rd681, %rd663, %rd680;
	xor.b64  	%rd682, %rd681, %rd1070;
	add.s64 	%rd683, %rd1073, %rd1069;
	ld.const.u64 	%rd684, [%rd1067+136];
	add.s64 	%rd685, %rd683, %rd684;
	add.s64 	%rd686, %rd685, %rd682;
	add.s64 	%rd687, %rd686, %rd679;
	add.s64 	%rd688, %rd687, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd674;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd689, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd690, {%r486, %r485};
	xor.b64  	%rd691, %rd690, %rd689;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd692, {%r488, %r487};
	xor.b64  	%rd693, %rd691, %rd692;
	and.b64  	%rd694, %rd674, %rd1088;
	xor.b64  	%rd695, %rd674, %rd1088;
	and.b64  	%rd696, %rd695, %rd1089;
	or.b64  	%rd697, %rd696, %rd694;
	add.s64 	%rd698, %rd687, %rd697;
	add.s64 	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd688;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 14;
	shf.r.wrap.b32 	%r492, %r489, %r490, 14;
	mov.b64 	%rd700, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 18;
	shf.r.wrap.b32 	%r494, %r489, %r490, 18;
	mov.b64 	%rd701, {%r494, %r493};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd703, {%r496, %r495};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd663, %rd1071;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd1071;
	add.s64 	%rd708, %rd1074, %rd1070;
	ld.const.u64 	%rd709, [%rd1067+144];
	add.s64 	%rd710, %rd708, %rd709;
	add.s64 	%rd711, %rd710, %rd707;
	add.s64 	%rd712, %rd711, %rd704;
	add.s64 	%rd713, %rd712, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd699;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 28;
	shf.r.wrap.b32 	%r500, %r497, %r498, 28;
	mov.b64 	%rd714, {%r500, %r499};
	shf.l.wrap.b32 	%r501, %r497, %r498, 30;
	shf.l.wrap.b32 	%r502, %r498, %r497, 30;
	mov.b64 	%rd715, {%r502, %r501};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.l.wrap.b32 	%r503, %r497, %r498, 25;
	shf.l.wrap.b32 	%r504, %r498, %r497, 25;
	mov.b64 	%rd717, {%r504, %r503};
	xor.b64  	%rd718, %rd716, %rd717;
	and.b64  	%rd719, %rd699, %rd674;
	xor.b64  	%rd720, %rd699, %rd674;
	and.b64  	%rd721, %rd720, %rd1088;
	or.b64  	%rd722, %rd721, %rd719;
	add.s64 	%rd723, %rd712, %rd722;
	add.s64 	%rd724, %rd723, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd713;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd725, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd726, {%r510, %r509};
	xor.b64  	%rd727, %rd726, %rd725;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd728, {%r512, %r511};
	xor.b64  	%rd729, %rd727, %rd728;
	xor.b64  	%rd730, %rd688, %rd663;
	and.b64  	%rd731, %rd713, %rd730;
	xor.b64  	%rd732, %rd731, %rd663;
	add.s64 	%rd733, %rd1075, %rd1071;
	ld.const.u64 	%rd734, [%rd1067+152];
	add.s64 	%rd735, %rd733, %rd734;
	add.s64 	%rd736, %rd735, %rd732;
	add.s64 	%rd737, %rd736, %rd729;
	add.s64 	%rd738, %rd737, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd724;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd739, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd740, {%r518, %r517};
	xor.b64  	%rd741, %rd740, %rd739;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd742, {%r520, %r519};
	xor.b64  	%rd743, %rd741, %rd742;
	and.b64  	%rd744, %rd724, %rd699;
	xor.b64  	%rd745, %rd724, %rd699;
	and.b64  	%rd746, %rd745, %rd674;
	or.b64  	%rd747, %rd746, %rd744;
	add.s64 	%rd748, %rd737, %rd747;
	add.s64 	%rd749, %rd748, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd738;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd750, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd751, {%r526, %r525};
	xor.b64  	%rd752, %rd751, %rd750;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd753, {%r528, %r527};
	xor.b64  	%rd754, %rd752, %rd753;
	xor.b64  	%rd755, %rd713, %rd688;
	and.b64  	%rd756, %rd738, %rd755;
	xor.b64  	%rd757, %rd756, %rd688;
	add.s64 	%rd758, %rd663, %rd1076;
	ld.const.u64 	%rd759, [%rd1067+160];
	add.s64 	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd760, %rd757;
	add.s64 	%rd762, %rd761, %rd754;
	add.s64 	%rd763, %rd762, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd749;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd764, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd765, {%r534, %r533};
	xor.b64  	%rd766, %rd765, %rd764;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd767, {%r536, %r535};
	xor.b64  	%rd768, %rd766, %rd767;
	and.b64  	%rd769, %rd749, %rd724;
	xor.b64  	%rd770, %rd749, %rd724;
	and.b64  	%rd771, %rd770, %rd699;
	or.b64  	%rd772, %rd771, %rd769;
	add.s64 	%rd773, %rd762, %rd772;
	add.s64 	%rd774, %rd773, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd763;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd775, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd776, {%r542, %r541};
	xor.b64  	%rd777, %rd776, %rd775;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd778, {%r544, %r543};
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd738, %rd713;
	and.b64  	%rd781, %rd763, %rd780;
	xor.b64  	%rd782, %rd781, %rd713;
	add.s64 	%rd783, %rd688, %rd1077;
	ld.const.u64 	%rd784, [%rd1067+168];
	add.s64 	%rd785, %rd783, %rd784;
	add.s64 	%rd786, %rd785, %rd782;
	add.s64 	%rd787, %rd786, %rd779;
	add.s64 	%rd788, %rd787, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd774;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd789, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd790, {%r550, %r549};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd792, {%r552, %r551};
	xor.b64  	%rd793, %rd791, %rd792;
	and.b64  	%rd794, %rd774, %rd749;
	xor.b64  	%rd795, %rd774, %rd749;
	and.b64  	%rd796, %rd795, %rd724;
	or.b64  	%rd797, %rd796, %rd794;
	add.s64 	%rd798, %rd787, %rd797;
	add.s64 	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd788;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd800, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd801, {%r558, %r557};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd803, {%r560, %r559};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd763, %rd738;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd738;
	add.s64 	%rd808, %rd713, %rd1078;
	ld.const.u64 	%rd809, [%rd1067+176];
	add.s64 	%rd810, %rd808, %rd809;
	add.s64 	%rd811, %rd810, %rd807;
	add.s64 	%rd812, %rd811, %rd804;
	add.s64 	%rd813, %rd812, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd799;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd814, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd815, {%r566, %r565};
	xor.b64  	%rd816, %rd815, %rd814;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd817, {%r568, %r567};
	xor.b64  	%rd818, %rd816, %rd817;
	and.b64  	%rd819, %rd799, %rd774;
	xor.b64  	%rd820, %rd799, %rd774;
	and.b64  	%rd821, %rd820, %rd749;
	or.b64  	%rd822, %rd821, %rd819;
	add.s64 	%rd823, %rd812, %rd822;
	add.s64 	%rd824, %rd823, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd813;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd825, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd826, {%r574, %r573};
	xor.b64  	%rd827, %rd826, %rd825;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd828, {%r576, %r575};
	xor.b64  	%rd829, %rd827, %rd828;
	xor.b64  	%rd830, %rd788, %rd763;
	and.b64  	%rd831, %rd813, %rd830;
	xor.b64  	%rd832, %rd831, %rd763;
	add.s64 	%rd833, %rd738, %rd1079;
	ld.const.u64 	%rd834, [%rd1067+184];
	add.s64 	%rd835, %rd833, %rd834;
	add.s64 	%rd836, %rd835, %rd832;
	add.s64 	%rd837, %rd836, %rd829;
	add.s64 	%rd838, %rd837, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd824;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd839, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd840, {%r582, %r581};
	xor.b64  	%rd841, %rd840, %rd839;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd842, {%r584, %r583};
	xor.b64  	%rd843, %rd841, %rd842;
	and.b64  	%rd844, %rd824, %rd799;
	xor.b64  	%rd845, %rd824, %rd799;
	and.b64  	%rd846, %rd845, %rd774;
	or.b64  	%rd847, %rd846, %rd844;
	add.s64 	%rd848, %rd837, %rd847;
	add.s64 	%rd849, %rd848, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd838;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd850, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd851, {%r590, %r589};
	xor.b64  	%rd852, %rd851, %rd850;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd853, {%r592, %r591};
	xor.b64  	%rd854, %rd852, %rd853;
	xor.b64  	%rd855, %rd813, %rd788;
	and.b64  	%rd856, %rd838, %rd855;
	xor.b64  	%rd857, %rd856, %rd788;
	add.s64 	%rd858, %rd763, %rd1080;
	ld.const.u64 	%rd859, [%rd1067+192];
	add.s64 	%rd860, %rd858, %rd859;
	add.s64 	%rd861, %rd860, %rd857;
	add.s64 	%rd862, %rd861, %rd854;
	add.s64 	%rd863, %rd862, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd849;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd864, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd865, {%r598, %r597};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd867, {%r600, %r599};
	xor.b64  	%rd868, %rd866, %rd867;
	and.b64  	%rd869, %rd849, %rd824;
	xor.b64  	%rd870, %rd849, %rd824;
	and.b64  	%rd871, %rd870, %rd799;
	or.b64  	%rd872, %rd871, %rd869;
	add.s64 	%rd873, %rd862, %rd872;
	add.s64 	%rd874, %rd873, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd863;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd875, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd876, {%r606, %r605};
	xor.b64  	%rd877, %rd876, %rd875;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd878, {%r608, %r607};
	xor.b64  	%rd879, %rd877, %rd878;
	xor.b64  	%rd880, %rd838, %rd813;
	and.b64  	%rd881, %rd863, %rd880;
	xor.b64  	%rd882, %rd881, %rd813;
	add.s64 	%rd883, %rd788, %rd1081;
	ld.const.u64 	%rd884, [%rd1067+200];
	add.s64 	%rd885, %rd883, %rd884;
	add.s64 	%rd886, %rd885, %rd882;
	add.s64 	%rd887, %rd886, %rd879;
	add.s64 	%rd888, %rd887, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd874;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd889, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd890, {%r614, %r613};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd892, {%r616, %r615};
	xor.b64  	%rd893, %rd891, %rd892;
	and.b64  	%rd894, %rd874, %rd849;
	xor.b64  	%rd895, %rd874, %rd849;
	and.b64  	%rd896, %rd895, %rd824;
	or.b64  	%rd897, %rd896, %rd894;
	add.s64 	%rd898, %rd887, %rd897;
	add.s64 	%rd899, %rd898, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd888;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd900, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd901, {%r622, %r621};
	xor.b64  	%rd902, %rd901, %rd900;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd903, {%r624, %r623};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd863, %rd838;
	and.b64  	%rd906, %rd888, %rd905;
	xor.b64  	%rd907, %rd906, %rd838;
	add.s64 	%rd908, %rd813, %rd1082;
	ld.const.u64 	%rd909, [%rd1067+208];
	add.s64 	%rd910, %rd908, %rd909;
	add.s64 	%rd911, %rd910, %rd907;
	add.s64 	%rd912, %rd911, %rd904;
	add.s64 	%rd913, %rd912, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd899;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd914, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd915, {%r630, %r629};
	xor.b64  	%rd916, %rd915, %rd914;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd917, {%r632, %r631};
	xor.b64  	%rd918, %rd916, %rd917;
	and.b64  	%rd919, %rd899, %rd874;
	xor.b64  	%rd920, %rd899, %rd874;
	and.b64  	%rd921, %rd920, %rd849;
	or.b64  	%rd922, %rd921, %rd919;
	add.s64 	%rd923, %rd912, %rd922;
	add.s64 	%rd924, %rd923, %rd918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd913;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd925, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd926, {%r638, %r637};
	xor.b64  	%rd927, %rd926, %rd925;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd928, {%r640, %r639};
	xor.b64  	%rd929, %rd927, %rd928;
	xor.b64  	%rd930, %rd888, %rd863;
	and.b64  	%rd931, %rd913, %rd930;
	xor.b64  	%rd932, %rd931, %rd863;
	add.s64 	%rd933, %rd838, %rd1083;
	ld.const.u64 	%rd934, [%rd1067+216];
	add.s64 	%rd935, %rd933, %rd934;
	add.s64 	%rd936, %rd935, %rd932;
	add.s64 	%rd937, %rd936, %rd929;
	add.s64 	%rd938, %rd937, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd924;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd939, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd940, {%r646, %r645};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd942, {%r648, %r647};
	xor.b64  	%rd943, %rd941, %rd942;
	and.b64  	%rd944, %rd924, %rd899;
	xor.b64  	%rd945, %rd924, %rd899;
	and.b64  	%rd946, %rd945, %rd874;
	or.b64  	%rd947, %rd946, %rd944;
	add.s64 	%rd948, %rd937, %rd947;
	add.s64 	%rd949, %rd948, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd938;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd950, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd951, {%r654, %r653};
	xor.b64  	%rd952, %rd951, %rd950;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd953, {%r656, %r655};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd913, %rd888;
	and.b64  	%rd956, %rd938, %rd955;
	xor.b64  	%rd957, %rd956, %rd888;
	add.s64 	%rd958, %rd863, %rd1084;
	ld.const.u64 	%rd959, [%rd1067+224];
	add.s64 	%rd960, %rd958, %rd959;
	add.s64 	%rd961, %rd960, %rd957;
	add.s64 	%rd962, %rd961, %rd954;
	add.s64 	%rd1068, %rd962, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd949;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd963, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd964, {%r662, %r661};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd966, {%r664, %r663};
	xor.b64  	%rd967, %rd965, %rd966;
	and.b64  	%rd968, %rd949, %rd924;
	xor.b64  	%rd969, %rd949, %rd924;
	and.b64  	%rd970, %rd969, %rd899;
	or.b64  	%rd971, %rd970, %rd968;
	add.s64 	%rd972, %rd962, %rd971;
	add.s64 	%rd1091, %rd972, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd1068;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd973, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd974, {%r670, %r669};
	xor.b64  	%rd975, %rd974, %rd973;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd976, {%r672, %r671};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd938, %rd913;
	and.b64  	%rd979, %rd1068, %rd978;
	xor.b64  	%rd980, %rd979, %rd913;
	add.s64 	%rd981, %rd888, %rd1085;
	ld.const.u64 	%rd982, [%rd1067+232];
	add.s64 	%rd983, %rd981, %rd982;
	add.s64 	%rd984, %rd983, %rd980;
	add.s64 	%rd985, %rd984, %rd977;
	add.s64 	%rd1069, %rd985, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1091;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd986, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd987, {%r678, %r677};
	xor.b64  	%rd988, %rd987, %rd986;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd989, {%r680, %r679};
	xor.b64  	%rd990, %rd988, %rd989;
	and.b64  	%rd991, %rd1091, %rd949;
	xor.b64  	%rd992, %rd1091, %rd949;
	and.b64  	%rd993, %rd992, %rd924;
	or.b64  	%rd994, %rd993, %rd991;
	add.s64 	%rd995, %rd985, %rd994;
	add.s64 	%rd1090, %rd995, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1069;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 14;
	shf.r.wrap.b32 	%r684, %r681, %r682, 14;
	mov.b64 	%rd996, {%r684, %r683};
	shf.r.wrap.b32 	%r685, %r682, %r681, 18;
	shf.r.wrap.b32 	%r686, %r681, %r682, 18;
	mov.b64 	%rd997, {%r686, %r685};
	xor.b64  	%rd998, %rd997, %rd996;
	shf.l.wrap.b32 	%r687, %r681, %r682, 23;
	shf.l.wrap.b32 	%r688, %r682, %r681, 23;
	mov.b64 	%rd999, {%r688, %r687};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd1068, %rd938;
	and.b64  	%rd1002, %rd1069, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd938;
	add.s64 	%rd1004, %rd913, %rd1086;
	ld.const.u64 	%rd1005, [%rd1067+240];
	add.s64 	%rd1006, %rd1004, %rd1005;
	add.s64 	%rd1007, %rd1006, %rd1003;
	add.s64 	%rd1008, %rd1007, %rd1000;
	add.s64 	%rd1070, %rd1008, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd1090;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 28;
	shf.r.wrap.b32 	%r692, %r689, %r690, 28;
	mov.b64 	%rd1009, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 30;
	shf.l.wrap.b32 	%r694, %r690, %r689, 30;
	mov.b64 	%rd1010, {%r694, %r693};
	xor.b64  	%rd1011, %rd1010, %rd1009;
	shf.l.wrap.b32 	%r695, %r689, %r690, 25;
	shf.l.wrap.b32 	%r696, %r690, %r689, 25;
	mov.b64 	%rd1012, {%r696, %r695};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	and.b64  	%rd1014, %rd1090, %rd1091;
	xor.b64  	%rd1015, %rd1090, %rd1091;
	and.b64  	%rd1016, %rd1015, %rd949;
	or.b64  	%rd1017, %rd1016, %rd1014;
	add.s64 	%rd1018, %rd1008, %rd1017;
	add.s64 	%rd1089, %rd1018, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd1070;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 14;
	shf.r.wrap.b32 	%r700, %r697, %r698, 14;
	mov.b64 	%rd1019, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r698, %r697, 18;
	shf.r.wrap.b32 	%r702, %r697, %r698, 18;
	mov.b64 	%rd1020, {%r702, %r701};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r703, %r697, %r698, 23;
	shf.l.wrap.b32 	%r704, %r698, %r697, 23;
	mov.b64 	%rd1022, {%r704, %r703};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1069, %rd1068;
	and.b64  	%rd1025, %rd1070, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd1068;
	add.s64 	%rd1027, %rd938, %rd1087;
	ld.const.u64 	%rd1028, [%rd1067+248];
	add.s64 	%rd1029, %rd1027, %rd1028;
	add.s64 	%rd1030, %rd1029, %rd1026;
	add.s64 	%rd1031, %rd1030, %rd1023;
	add.s64 	%rd1071, %rd1031, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1089;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 28;
	shf.r.wrap.b32 	%r708, %r705, %r706, 28;
	mov.b64 	%rd1032, {%r708, %r707};
	shf.l.wrap.b32 	%r709, %r705, %r706, 30;
	shf.l.wrap.b32 	%r710, %r706, %r705, 30;
	mov.b64 	%rd1033, {%r710, %r709};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r711, %r705, %r706, 25;
	shf.l.wrap.b32 	%r712, %r706, %r705, 25;
	mov.b64 	%rd1035, {%r712, %r711};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	and.b64  	%rd1037, %rd1089, %rd1090;
	xor.b64  	%rd1038, %rd1089, %rd1090;
	and.b64  	%rd1039, %rd1038, %rd1091;
	or.b64  	%rd1040, %rd1039, %rd1037;
	add.s64 	%rd1041, %rd1031, %rd1040;
	add.s64 	%rd1088, %rd1041, %rd1036;
	add.s32 	%r728, %r728, 16;
	setp.lt.s32	%p3, %r728, 80;
	mov.u64 	%rd1067, %rd84;
	@%p3 bra 	BB3_4;

	mov.b64	{%r11, %r12}, %rd1068;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB3_11;

	mov.b64	{%r713, %r714}, %rd1091;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r713, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r714, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB3_11;

	add.u64 	%rd1060, %SPL, 8;
	ld.param.u64 	%rd1059, [m01700_s04_param_16];
	ld.global.u32 	%r13, [%rd2+-24];
	mul.wide.u32 	%rd1042, %r13, 4;
	add.s64 	%rd1043, %rd1059, %rd1042;
	mov.u32 	%r715, 1;
	st.local.u32 	[%rd1060], %r715;
	ld.local.u32 	%r716, [%rd1060];
	atom.global.add.u32 	%r717, [%rd1043], %r716;
	setp.ne.s32	%p10, %r717, 0;
	@%p10 bra 	BB3_11;

	add.u64 	%rd1062, %SPL, 4;
	ld.global.u32 	%r14, [%rd2+-44];
	ld.global.u32 	%r718, [%rd2+-28];
	st.local.u32 	[%rd1062], %r715;
	ld.local.u32 	%r720, [%rd1062];
	atom.global.add.u32 	%r15, [%rd90], %r720;
	setp.lt.u32	%p11, %r15, %r718;
	@%p11 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_10:
	ld.param.u64 	%rd1066, [m01700_s04_param_14];
	mul.wide.u32 	%rd1044, %r15, 32;
	add.s64 	%rd1045, %rd1066, %rd1044;
	st.global.u32 	[%rd1045+12], %r14;
	mov.u32 	%r725, 0;
	st.global.u32 	[%rd1045+16], %r725;
	st.global.u32 	[%rd1045+20], %r13;
	st.global.u64 	[%rd1045], %rd1;
	st.global.u32 	[%rd1045+8], %r727;
	st.global.u32 	[%rd1045+24], %r725;
	st.global.u32 	[%rd1045+28], %r725;
	bra.uni 	BB3_11;

BB3_9:
	add.u64 	%rd1064, %SPL, 0;
	st.local.u32 	[%rd1064], %r715;
	ld.local.u32 	%r722, [%rd1064];
	neg.s32 	%r723, %r722;
	atom.global.add.u32 	%r724, [%rd90], %r723;

BB3_11:
	add.s32 	%r727, %r727, 1;
	ld.global.u32 	%r726, [%rd2+-32];
	setp.lt.u32	%p12, %r727, %r726;
	@%p12 bra 	BB3_3;

BB3_12:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .global .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .const .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 8 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 1 m01700_s08_param_20,
	.param .u64 .ptr .global .align 1 m01700_s08_param_21,
	.param .u64 .ptr .global .align 1 m01700_s08_param_22,
	.param .u64 .ptr .global .align 1 m01700_s08_param_23,
	.param .u64 .ptr .global .align 8 m01700_s08_param_24
)
{
	.local .align 4 .b8 	__local_depot4[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<733>;
	.reg .b64 	%rd<1094>;


	mov.u64 	%SPL, __local_depot4;
	ld.param.u64 	%rd87, [m01700_s08_param_0];
	ld.param.u64 	%rd90, [m01700_s08_param_15];
	ld.param.u64 	%rd92, [m01700_s08_param_19];
	ld.param.u64 	%rd93, [m01700_s08_param_24];
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.b32	%r19, %envreg3;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd93, 56;
	ld.global.u64 	%rd94, [%rd93+56];
	setp.ge.u64	%p1, %rd1, %rd94;
	@%p1 bra 	BB4_12;

	ld.global.u32 	%r22, [%rd2+-32];
	setp.eq.s32	%p2, %r22, 0;
	@%p2 bra 	BB4_12;

	mul.wide.s32 	%rd98, %r1, 260;
	add.s64 	%rd99, %rd87, %rd98;
	ld.global.u32 	%r2, [%rd99];
	ld.global.u32 	%r3, [%rd99+4];
	ld.global.u32 	%r24, [%rd2+-24];
	mul.wide.u32 	%rd100, %r24, 64;
	add.s64 	%rd101, %rd90, %rd100;
	ld.global.u32 	%r4, [%rd101+56];
	ld.global.u32 	%r5, [%rd101+60];
	ld.global.u32 	%r6, [%rd101+24];
	ld.global.u32 	%r7, [%rd101+28];
	ld.global.u32 	%r25, [%rd99+8];
	ld.global.u32 	%r26, [%rd99+12];
	mov.b64	%rd7, {%r26, %r25};
	ld.global.u32 	%r27, [%rd99+16];
	ld.global.u32 	%r28, [%rd99+20];
	mov.b64	%rd8, {%r28, %r27};
	ld.global.u32 	%r29, [%rd99+24];
	ld.global.u32 	%r30, [%rd99+28];
	mov.b64	%rd9, {%r30, %r29};
	ld.global.u32 	%r31, [%rd99+60];
	mov.u32 	%r731, 0;
	mov.b64	%rd10, {%r31, %r731};
	ld.const.u64 	%rd102, [k_sha512];
	add.s64 	%rd11, %rd102, 6620516959819538809;
	ld.const.u64 	%rd103, [k_sha512+8];
	add.s64 	%rd104, %rd7, %rd103;
	add.s64 	%rd12, %rd104, 2270897969802886507;
	ld.const.u64 	%rd105, [k_sha512+16];
	add.s64 	%rd106, %rd8, %rd105;
	add.s64 	%rd13, %rd106, -7276294671716946913;
	ld.const.u64 	%rd107, [k_sha512+24];
	add.s64 	%rd108, %rd9, %rd107;
	add.s64 	%rd14, %rd108, 5840696475078001361;

BB4_3:
	ld.const.u64 	%rd1060, [k_sha512+120];
	ld.const.u64 	%rd1059, [k_sha512+112];
	ld.const.u64 	%rd1058, [k_sha512+104];
	ld.const.u64 	%rd1057, [k_sha512+96];
	ld.const.u64 	%rd1056, [k_sha512+88];
	ld.const.u64 	%rd1055, [k_sha512+80];
	ld.const.u64 	%rd1054, [k_sha512+72];
	ld.const.u64 	%rd1053, [k_sha512+64];
	ld.const.u64 	%rd1052, [k_sha512+56];
	ld.const.u64 	%rd1051, [k_sha512+48];
	ld.const.u64 	%rd1050, [k_sha512+40];
	ld.const.u64 	%rd1049, [k_sha512+32];
	ld.param.u64 	%rd1048, [m01700_s08_param_3];
	mul.wide.u32 	%rd121, %r731, 4;
	add.s64 	%rd122, %rd1048, %rd121;
	ld.const.u32 	%r33, [%rd122];
	or.b32  	%r34, %r33, %r2;
	mov.b64	%rd1074, {%r3, %r34};
	add.s64 	%rd123, %rd11, %rd1074;
	add.s64 	%rd124, %rd123, 6412459576335945718;
	add.s64 	%rd125, %rd123, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36}, %rd124;
	}
	shf.r.wrap.b32 	%r37, %r36, %r35, 14;
	shf.r.wrap.b32 	%r38, %r35, %r36, 14;
	mov.b64 	%rd126, {%r38, %r37};
	shf.r.wrap.b32 	%r39, %r36, %r35, 18;
	shf.r.wrap.b32 	%r40, %r35, %r36, 18;
	mov.b64 	%rd127, {%r40, %r39};
	xor.b64  	%rd128, %rd127, %rd126;
	shf.l.wrap.b32 	%r41, %r35, %r36, 23;
	shf.l.wrap.b32 	%r42, %r36, %r35, 23;
	mov.b64 	%rd129, {%r42, %r41};
	xor.b64  	%rd130, %rd128, %rd129;
	and.b64  	%rd131, %rd124, -3887949035690463538;
	xor.b64  	%rd132, %rd131, -7276294671716946913;
	add.s64 	%rd133, %rd12, %rd130;
	add.s64 	%rd134, %rd133, %rd132;
	add.s64 	%rd135, %rd134, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r43,%dummy}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r44}, %rd125;
	}
	shf.r.wrap.b32 	%r45, %r44, %r43, 28;
	shf.r.wrap.b32 	%r46, %r43, %r44, 28;
	mov.b64 	%rd136, {%r46, %r45};
	shf.l.wrap.b32 	%r47, %r43, %r44, 30;
	shf.l.wrap.b32 	%r48, %r44, %r43, 30;
	mov.b64 	%rd137, {%r48, %r47};
	xor.b64  	%rd138, %rd137, %rd136;
	shf.l.wrap.b32 	%r49, %r43, %r44, 25;
	shf.l.wrap.b32 	%r50, %r44, %r43, 25;
	mov.b64 	%rd139, {%r50, %r49};
	xor.b64  	%rd140, %rd138, %rd139;
	add.s64 	%rd141, %rd134, %rd140;
	and.b64  	%rd142, %rd125, 7640891576956012808;
	and.b64  	%rd143, %rd125, -4942790177534073029;
	xor.b64  	%rd144, %rd143, 3026882967131160840;
	or.b64  	%rd145, %rd144, %rd142;
	add.s64 	%rd146, %rd141, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r51,%dummy}, %rd135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r52}, %rd135;
	}
	shf.r.wrap.b32 	%r53, %r52, %r51, 14;
	shf.r.wrap.b32 	%r54, %r51, %r52, 14;
	mov.b64 	%rd147, {%r54, %r53};
	shf.r.wrap.b32 	%r55, %r52, %r51, 18;
	shf.r.wrap.b32 	%r56, %r51, %r52, 18;
	mov.b64 	%rd148, {%r56, %r55};
	xor.b64  	%rd149, %rd148, %rd147;
	shf.l.wrap.b32 	%r57, %r51, %r52, 23;
	shf.l.wrap.b32 	%r58, %r52, %r51, 23;
	mov.b64 	%rd150, {%r58, %r57};
	xor.b64  	%rd151, %rd149, %rd150;
	xor.b64  	%rd152, %rd124, 5840696475078001361;
	and.b64  	%rd153, %rd135, %rd152;
	xor.b64  	%rd154, %rd153, 5840696475078001361;
	add.s64 	%rd155, %rd13, %rd154;
	add.s64 	%rd156, %rd155, %rd151;
	add.s64 	%rd157, %rd156, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd146;
	}
	shf.r.wrap.b32 	%r61, %r60, %r59, 28;
	shf.r.wrap.b32 	%r62, %r59, %r60, 28;
	mov.b64 	%rd158, {%r62, %r61};
	shf.l.wrap.b32 	%r63, %r59, %r60, 30;
	shf.l.wrap.b32 	%r64, %r60, %r59, 30;
	mov.b64 	%rd159, {%r64, %r63};
	xor.b64  	%rd160, %rd159, %rd158;
	shf.l.wrap.b32 	%r65, %r59, %r60, 25;
	shf.l.wrap.b32 	%r66, %r60, %r59, 25;
	mov.b64 	%rd161, {%r66, %r65};
	xor.b64  	%rd162, %rd160, %rd161;
	and.b64  	%rd163, %rd146, %rd125;
	xor.b64  	%rd164, %rd146, %rd125;
	and.b64  	%rd165, %rd164, 7640891576956012808;
	or.b64  	%rd166, %rd165, %rd163;
	add.s64 	%rd167, %rd166, %rd156;
	add.s64 	%rd168, %rd167, %rd162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r67,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r68}, %rd157;
	}
	shf.r.wrap.b32 	%r69, %r68, %r67, 14;
	shf.r.wrap.b32 	%r70, %r67, %r68, 14;
	mov.b64 	%rd169, {%r70, %r69};
	shf.r.wrap.b32 	%r71, %r68, %r67, 18;
	shf.r.wrap.b32 	%r72, %r67, %r68, 18;
	mov.b64 	%rd170, {%r72, %r71};
	xor.b64  	%rd171, %rd170, %rd169;
	shf.l.wrap.b32 	%r73, %r67, %r68, 23;
	shf.l.wrap.b32 	%r74, %r68, %r67, 23;
	mov.b64 	%rd172, {%r74, %r73};
	xor.b64  	%rd173, %rd171, %rd172;
	xor.b64  	%rd174, %rd135, %rd124;
	and.b64  	%rd175, %rd157, %rd174;
	xor.b64  	%rd176, %rd175, %rd124;
	add.s64 	%rd177, %rd14, %rd176;
	add.s64 	%rd178, %rd177, %rd173;
	add.s64 	%rd179, %rd178, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd168;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 28;
	shf.r.wrap.b32 	%r78, %r75, %r76, 28;
	mov.b64 	%rd180, {%r78, %r77};
	shf.l.wrap.b32 	%r79, %r75, %r76, 30;
	shf.l.wrap.b32 	%r80, %r76, %r75, 30;
	mov.b64 	%rd181, {%r80, %r79};
	xor.b64  	%rd182, %rd181, %rd180;
	shf.l.wrap.b32 	%r81, %r75, %r76, 25;
	shf.l.wrap.b32 	%r82, %r76, %r75, 25;
	mov.b64 	%rd183, {%r82, %r81};
	xor.b64  	%rd184, %rd182, %rd183;
	and.b64  	%rd185, %rd168, %rd146;
	xor.b64  	%rd186, %rd168, %rd146;
	and.b64  	%rd187, %rd186, %rd125;
	or.b64  	%rd188, %rd187, %rd185;
	add.s64 	%rd189, %rd178, %rd188;
	add.s64 	%rd190, %rd189, %rd184;
	add.s64 	%rd191, %rd1049, %rd124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd179;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 14;
	shf.r.wrap.b32 	%r86, %r83, %r84, 14;
	mov.b64 	%rd192, {%r86, %r85};
	shf.r.wrap.b32 	%r87, %r84, %r83, 18;
	shf.r.wrap.b32 	%r88, %r83, %r84, 18;
	mov.b64 	%rd193, {%r88, %r87};
	xor.b64  	%rd194, %rd193, %rd192;
	shf.l.wrap.b32 	%r89, %r83, %r84, 23;
	shf.l.wrap.b32 	%r90, %r84, %r83, 23;
	mov.b64 	%rd195, {%r90, %r89};
	xor.b64  	%rd196, %rd194, %rd195;
	xor.b64  	%rd197, %rd157, %rd135;
	and.b64  	%rd198, %rd179, %rd197;
	xor.b64  	%rd199, %rd198, %rd135;
	add.s64 	%rd200, %rd191, %rd199;
	add.s64 	%rd201, %rd200, %rd196;
	add.s64 	%rd202, %rd201, %rd125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd190;
	}
	shf.r.wrap.b32 	%r93, %r92, %r91, 28;
	shf.r.wrap.b32 	%r94, %r91, %r92, 28;
	mov.b64 	%rd203, {%r94, %r93};
	shf.l.wrap.b32 	%r95, %r91, %r92, 30;
	shf.l.wrap.b32 	%r96, %r92, %r91, 30;
	mov.b64 	%rd204, {%r96, %r95};
	xor.b64  	%rd205, %rd204, %rd203;
	shf.l.wrap.b32 	%r97, %r91, %r92, 25;
	shf.l.wrap.b32 	%r98, %r92, %r91, 25;
	mov.b64 	%rd206, {%r98, %r97};
	xor.b64  	%rd207, %rd205, %rd206;
	and.b64  	%rd208, %rd190, %rd168;
	xor.b64  	%rd209, %rd190, %rd168;
	and.b64  	%rd210, %rd209, %rd146;
	or.b64  	%rd211, %rd210, %rd208;
	add.s64 	%rd212, %rd201, %rd211;
	add.s64 	%rd213, %rd212, %rd207;
	add.s64 	%rd214, %rd1050, %rd135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd202;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 14;
	shf.r.wrap.b32 	%r102, %r99, %r100, 14;
	mov.b64 	%rd215, {%r102, %r101};
	shf.r.wrap.b32 	%r103, %r100, %r99, 18;
	shf.r.wrap.b32 	%r104, %r99, %r100, 18;
	mov.b64 	%rd216, {%r104, %r103};
	xor.b64  	%rd217, %rd216, %rd215;
	shf.l.wrap.b32 	%r105, %r99, %r100, 23;
	shf.l.wrap.b32 	%r106, %r100, %r99, 23;
	mov.b64 	%rd218, {%r106, %r105};
	xor.b64  	%rd219, %rd217, %rd218;
	xor.b64  	%rd220, %rd179, %rd157;
	and.b64  	%rd221, %rd202, %rd220;
	xor.b64  	%rd222, %rd221, %rd157;
	add.s64 	%rd223, %rd214, %rd222;
	add.s64 	%rd224, %rd223, %rd219;
	add.s64 	%rd225, %rd224, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd213;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 28;
	shf.r.wrap.b32 	%r110, %r107, %r108, 28;
	mov.b64 	%rd226, {%r110, %r109};
	shf.l.wrap.b32 	%r111, %r107, %r108, 30;
	shf.l.wrap.b32 	%r112, %r108, %r107, 30;
	mov.b64 	%rd227, {%r112, %r111};
	xor.b64  	%rd228, %rd227, %rd226;
	shf.l.wrap.b32 	%r113, %r107, %r108, 25;
	shf.l.wrap.b32 	%r114, %r108, %r107, 25;
	mov.b64 	%rd229, {%r114, %r113};
	xor.b64  	%rd230, %rd228, %rd229;
	and.b64  	%rd231, %rd213, %rd190;
	xor.b64  	%rd232, %rd213, %rd190;
	and.b64  	%rd233, %rd232, %rd168;
	or.b64  	%rd234, %rd233, %rd231;
	add.s64 	%rd235, %rd224, %rd234;
	add.s64 	%rd236, %rd235, %rd230;
	add.s64 	%rd237, %rd1051, %rd157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd225;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 14;
	shf.r.wrap.b32 	%r118, %r115, %r116, 14;
	mov.b64 	%rd238, {%r118, %r117};
	shf.r.wrap.b32 	%r119, %r116, %r115, 18;
	shf.r.wrap.b32 	%r120, %r115, %r116, 18;
	mov.b64 	%rd239, {%r120, %r119};
	xor.b64  	%rd240, %rd239, %rd238;
	shf.l.wrap.b32 	%r121, %r115, %r116, 23;
	shf.l.wrap.b32 	%r122, %r116, %r115, 23;
	mov.b64 	%rd241, {%r122, %r121};
	xor.b64  	%rd242, %rd240, %rd241;
	xor.b64  	%rd243, %rd202, %rd179;
	and.b64  	%rd244, %rd225, %rd243;
	xor.b64  	%rd245, %rd244, %rd179;
	add.s64 	%rd246, %rd237, %rd245;
	add.s64 	%rd247, %rd246, %rd242;
	add.s64 	%rd248, %rd247, %rd168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd236;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 28;
	shf.r.wrap.b32 	%r126, %r123, %r124, 28;
	mov.b64 	%rd249, {%r126, %r125};
	shf.l.wrap.b32 	%r127, %r123, %r124, 30;
	shf.l.wrap.b32 	%r128, %r124, %r123, 30;
	mov.b64 	%rd250, {%r128, %r127};
	xor.b64  	%rd251, %rd250, %rd249;
	shf.l.wrap.b32 	%r129, %r123, %r124, 25;
	shf.l.wrap.b32 	%r130, %r124, %r123, 25;
	mov.b64 	%rd252, {%r130, %r129};
	xor.b64  	%rd253, %rd251, %rd252;
	and.b64  	%rd254, %rd236, %rd213;
	xor.b64  	%rd255, %rd236, %rd213;
	and.b64  	%rd256, %rd255, %rd190;
	or.b64  	%rd257, %rd256, %rd254;
	add.s64 	%rd258, %rd247, %rd257;
	add.s64 	%rd259, %rd258, %rd253;
	add.s64 	%rd260, %rd1052, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd248;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 14;
	shf.r.wrap.b32 	%r134, %r131, %r132, 14;
	mov.b64 	%rd261, {%r134, %r133};
	shf.r.wrap.b32 	%r135, %r132, %r131, 18;
	shf.r.wrap.b32 	%r136, %r131, %r132, 18;
	mov.b64 	%rd262, {%r136, %r135};
	xor.b64  	%rd263, %rd262, %rd261;
	shf.l.wrap.b32 	%r137, %r131, %r132, 23;
	shf.l.wrap.b32 	%r138, %r132, %r131, 23;
	mov.b64 	%rd264, {%r138, %r137};
	xor.b64  	%rd265, %rd263, %rd264;
	xor.b64  	%rd266, %rd225, %rd202;
	and.b64  	%rd267, %rd248, %rd266;
	xor.b64  	%rd268, %rd267, %rd202;
	add.s64 	%rd269, %rd260, %rd268;
	add.s64 	%rd270, %rd269, %rd265;
	add.s64 	%rd271, %rd270, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd259;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 28;
	shf.r.wrap.b32 	%r142, %r139, %r140, 28;
	mov.b64 	%rd272, {%r142, %r141};
	shf.l.wrap.b32 	%r143, %r139, %r140, 30;
	shf.l.wrap.b32 	%r144, %r140, %r139, 30;
	mov.b64 	%rd273, {%r144, %r143};
	xor.b64  	%rd274, %rd273, %rd272;
	shf.l.wrap.b32 	%r145, %r139, %r140, 25;
	shf.l.wrap.b32 	%r146, %r140, %r139, 25;
	mov.b64 	%rd275, {%r146, %r145};
	xor.b64  	%rd276, %rd274, %rd275;
	and.b64  	%rd277, %rd259, %rd236;
	xor.b64  	%rd278, %rd259, %rd236;
	and.b64  	%rd279, %rd278, %rd213;
	or.b64  	%rd280, %rd279, %rd277;
	add.s64 	%rd281, %rd270, %rd280;
	add.s64 	%rd282, %rd281, %rd276;
	add.s64 	%rd283, %rd1053, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd271;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 14;
	shf.r.wrap.b32 	%r150, %r147, %r148, 14;
	mov.b64 	%rd284, {%r150, %r149};
	shf.r.wrap.b32 	%r151, %r148, %r147, 18;
	shf.r.wrap.b32 	%r152, %r147, %r148, 18;
	mov.b64 	%rd285, {%r152, %r151};
	xor.b64  	%rd286, %rd285, %rd284;
	shf.l.wrap.b32 	%r153, %r147, %r148, 23;
	shf.l.wrap.b32 	%r154, %r148, %r147, 23;
	mov.b64 	%rd287, {%r154, %r153};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd248, %rd225;
	and.b64  	%rd290, %rd271, %rd289;
	xor.b64  	%rd291, %rd290, %rd225;
	add.s64 	%rd292, %rd283, %rd291;
	add.s64 	%rd293, %rd292, %rd288;
	add.s64 	%rd294, %rd293, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd282;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 28;
	shf.r.wrap.b32 	%r158, %r155, %r156, 28;
	mov.b64 	%rd295, {%r158, %r157};
	shf.l.wrap.b32 	%r159, %r155, %r156, 30;
	shf.l.wrap.b32 	%r160, %r156, %r155, 30;
	mov.b64 	%rd296, {%r160, %r159};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r161, %r155, %r156, 25;
	shf.l.wrap.b32 	%r162, %r156, %r155, 25;
	mov.b64 	%rd298, {%r162, %r161};
	xor.b64  	%rd299, %rd297, %rd298;
	and.b64  	%rd300, %rd282, %rd259;
	xor.b64  	%rd301, %rd282, %rd259;
	and.b64  	%rd302, %rd301, %rd236;
	or.b64  	%rd303, %rd302, %rd300;
	add.s64 	%rd304, %rd293, %rd303;
	add.s64 	%rd305, %rd304, %rd299;
	add.s64 	%rd306, %rd1054, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd294;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 14;
	shf.r.wrap.b32 	%r166, %r163, %r164, 14;
	mov.b64 	%rd307, {%r166, %r165};
	shf.r.wrap.b32 	%r167, %r164, %r163, 18;
	shf.r.wrap.b32 	%r168, %r163, %r164, 18;
	mov.b64 	%rd308, {%r168, %r167};
	xor.b64  	%rd309, %rd308, %rd307;
	shf.l.wrap.b32 	%r169, %r163, %r164, 23;
	shf.l.wrap.b32 	%r170, %r164, %r163, 23;
	mov.b64 	%rd310, {%r170, %r169};
	xor.b64  	%rd311, %rd309, %rd310;
	xor.b64  	%rd312, %rd271, %rd248;
	and.b64  	%rd313, %rd294, %rd312;
	xor.b64  	%rd314, %rd313, %rd248;
	add.s64 	%rd315, %rd306, %rd314;
	add.s64 	%rd316, %rd315, %rd311;
	add.s64 	%rd317, %rd316, %rd236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd305;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 28;
	shf.r.wrap.b32 	%r174, %r171, %r172, 28;
	mov.b64 	%rd318, {%r174, %r173};
	shf.l.wrap.b32 	%r175, %r171, %r172, 30;
	shf.l.wrap.b32 	%r176, %r172, %r171, 30;
	mov.b64 	%rd319, {%r176, %r175};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r177, %r171, %r172, 25;
	shf.l.wrap.b32 	%r178, %r172, %r171, 25;
	mov.b64 	%rd321, {%r178, %r177};
	xor.b64  	%rd322, %rd320, %rd321;
	and.b64  	%rd323, %rd305, %rd282;
	xor.b64  	%rd324, %rd305, %rd282;
	and.b64  	%rd325, %rd324, %rd259;
	or.b64  	%rd326, %rd325, %rd323;
	add.s64 	%rd327, %rd316, %rd326;
	add.s64 	%rd328, %rd327, %rd322;
	add.s64 	%rd329, %rd1055, %rd248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd317;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 14;
	shf.r.wrap.b32 	%r182, %r179, %r180, 14;
	mov.b64 	%rd330, {%r182, %r181};
	shf.r.wrap.b32 	%r183, %r180, %r179, 18;
	shf.r.wrap.b32 	%r184, %r179, %r180, 18;
	mov.b64 	%rd331, {%r184, %r183};
	xor.b64  	%rd332, %rd331, %rd330;
	shf.l.wrap.b32 	%r185, %r179, %r180, 23;
	shf.l.wrap.b32 	%r186, %r180, %r179, 23;
	mov.b64 	%rd333, {%r186, %r185};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd294, %rd271;
	and.b64  	%rd336, %rd317, %rd335;
	xor.b64  	%rd337, %rd336, %rd271;
	add.s64 	%rd338, %rd329, %rd337;
	add.s64 	%rd339, %rd338, %rd334;
	add.s64 	%rd340, %rd339, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd328;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 28;
	shf.r.wrap.b32 	%r190, %r187, %r188, 28;
	mov.b64 	%rd341, {%r190, %r189};
	shf.l.wrap.b32 	%r191, %r187, %r188, 30;
	shf.l.wrap.b32 	%r192, %r188, %r187, 30;
	mov.b64 	%rd342, {%r192, %r191};
	xor.b64  	%rd343, %rd342, %rd341;
	shf.l.wrap.b32 	%r193, %r187, %r188, 25;
	shf.l.wrap.b32 	%r194, %r188, %r187, 25;
	mov.b64 	%rd344, {%r194, %r193};
	xor.b64  	%rd345, %rd343, %rd344;
	and.b64  	%rd346, %rd328, %rd305;
	xor.b64  	%rd347, %rd328, %rd305;
	and.b64  	%rd348, %rd347, %rd282;
	or.b64  	%rd349, %rd348, %rd346;
	add.s64 	%rd350, %rd339, %rd349;
	add.s64 	%rd351, %rd350, %rd345;
	add.s64 	%rd352, %rd1056, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd340;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 14;
	shf.r.wrap.b32 	%r198, %r195, %r196, 14;
	mov.b64 	%rd353, {%r198, %r197};
	shf.r.wrap.b32 	%r199, %r196, %r195, 18;
	shf.r.wrap.b32 	%r200, %r195, %r196, 18;
	mov.b64 	%rd354, {%r200, %r199};
	xor.b64  	%rd355, %rd354, %rd353;
	shf.l.wrap.b32 	%r201, %r195, %r196, 23;
	shf.l.wrap.b32 	%r202, %r196, %r195, 23;
	mov.b64 	%rd356, {%r202, %r201};
	xor.b64  	%rd357, %rd355, %rd356;
	xor.b64  	%rd358, %rd317, %rd294;
	and.b64  	%rd359, %rd340, %rd358;
	xor.b64  	%rd360, %rd359, %rd294;
	add.s64 	%rd361, %rd352, %rd360;
	add.s64 	%rd362, %rd361, %rd357;
	add.s64 	%rd363, %rd362, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd351;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 28;
	shf.r.wrap.b32 	%r206, %r203, %r204, 28;
	mov.b64 	%rd364, {%r206, %r205};
	shf.l.wrap.b32 	%r207, %r203, %r204, 30;
	shf.l.wrap.b32 	%r208, %r204, %r203, 30;
	mov.b64 	%rd365, {%r208, %r207};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r209, %r203, %r204, 25;
	shf.l.wrap.b32 	%r210, %r204, %r203, 25;
	mov.b64 	%rd367, {%r210, %r209};
	xor.b64  	%rd368, %rd366, %rd367;
	and.b64  	%rd369, %rd351, %rd328;
	xor.b64  	%rd370, %rd351, %rd328;
	and.b64  	%rd371, %rd370, %rd305;
	or.b64  	%rd372, %rd371, %rd369;
	add.s64 	%rd373, %rd362, %rd372;
	add.s64 	%rd374, %rd373, %rd368;
	add.s64 	%rd375, %rd1057, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd363;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 14;
	shf.r.wrap.b32 	%r214, %r211, %r212, 14;
	mov.b64 	%rd376, {%r214, %r213};
	shf.r.wrap.b32 	%r215, %r212, %r211, 18;
	shf.r.wrap.b32 	%r216, %r211, %r212, 18;
	mov.b64 	%rd377, {%r216, %r215};
	xor.b64  	%rd378, %rd377, %rd376;
	shf.l.wrap.b32 	%r217, %r211, %r212, 23;
	shf.l.wrap.b32 	%r218, %r212, %r211, 23;
	mov.b64 	%rd379, {%r218, %r217};
	xor.b64  	%rd380, %rd378, %rd379;
	xor.b64  	%rd381, %rd340, %rd317;
	and.b64  	%rd382, %rd363, %rd381;
	xor.b64  	%rd383, %rd382, %rd317;
	add.s64 	%rd384, %rd375, %rd383;
	add.s64 	%rd385, %rd384, %rd380;
	add.s64 	%rd1070, %rd385, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd374;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 28;
	shf.r.wrap.b32 	%r222, %r219, %r220, 28;
	mov.b64 	%rd386, {%r222, %r221};
	shf.l.wrap.b32 	%r223, %r219, %r220, 30;
	shf.l.wrap.b32 	%r224, %r220, %r219, 30;
	mov.b64 	%rd387, {%r224, %r223};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r225, %r219, %r220, 25;
	shf.l.wrap.b32 	%r226, %r220, %r219, 25;
	mov.b64 	%rd389, {%r226, %r225};
	xor.b64  	%rd390, %rd388, %rd389;
	and.b64  	%rd391, %rd374, %rd351;
	xor.b64  	%rd392, %rd374, %rd351;
	and.b64  	%rd393, %rd392, %rd328;
	or.b64  	%rd394, %rd393, %rd391;
	add.s64 	%rd395, %rd385, %rd394;
	add.s64 	%rd1093, %rd395, %rd390;
	add.s64 	%rd396, %rd1058, %rd317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd1070;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 14;
	shf.r.wrap.b32 	%r230, %r227, %r228, 14;
	mov.b64 	%rd397, {%r230, %r229};
	shf.r.wrap.b32 	%r231, %r228, %r227, 18;
	shf.r.wrap.b32 	%r232, %r227, %r228, 18;
	mov.b64 	%rd398, {%r232, %r231};
	xor.b64  	%rd399, %rd398, %rd397;
	shf.l.wrap.b32 	%r233, %r227, %r228, 23;
	shf.l.wrap.b32 	%r234, %r228, %r227, 23;
	mov.b64 	%rd400, {%r234, %r233};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd363, %rd340;
	and.b64  	%rd403, %rd1070, %rd402;
	xor.b64  	%rd404, %rd403, %rd340;
	add.s64 	%rd405, %rd396, %rd404;
	add.s64 	%rd406, %rd405, %rd401;
	add.s64 	%rd1071, %rd406, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd1093;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 28;
	shf.r.wrap.b32 	%r238, %r235, %r236, 28;
	mov.b64 	%rd407, {%r238, %r237};
	shf.l.wrap.b32 	%r239, %r235, %r236, 30;
	shf.l.wrap.b32 	%r240, %r236, %r235, 30;
	mov.b64 	%rd408, {%r240, %r239};
	xor.b64  	%rd409, %rd408, %rd407;
	shf.l.wrap.b32 	%r241, %r235, %r236, 25;
	shf.l.wrap.b32 	%r242, %r236, %r235, 25;
	mov.b64 	%rd410, {%r242, %r241};
	xor.b64  	%rd411, %rd409, %rd410;
	and.b64  	%rd412, %rd1093, %rd374;
	xor.b64  	%rd413, %rd1093, %rd374;
	and.b64  	%rd414, %rd413, %rd351;
	or.b64  	%rd415, %rd414, %rd412;
	add.s64 	%rd416, %rd406, %rd415;
	add.s64 	%rd1092, %rd416, %rd411;
	add.s64 	%rd417, %rd1059, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd1071;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 14;
	shf.r.wrap.b32 	%r246, %r243, %r244, 14;
	mov.b64 	%rd418, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 18;
	shf.r.wrap.b32 	%r248, %r243, %r244, 18;
	mov.b64 	%rd419, {%r248, %r247};
	xor.b64  	%rd420, %rd419, %rd418;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd421, {%r250, %r249};
	xor.b64  	%rd422, %rd420, %rd421;
	xor.b64  	%rd423, %rd1070, %rd363;
	and.b64  	%rd424, %rd1071, %rd423;
	xor.b64  	%rd425, %rd424, %rd363;
	add.s64 	%rd426, %rd417, %rd425;
	add.s64 	%rd427, %rd426, %rd422;
	add.s64 	%rd1072, %rd427, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd1092;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd428, {%r254, %r253};
	shf.l.wrap.b32 	%r255, %r251, %r252, 30;
	shf.l.wrap.b32 	%r256, %r252, %r251, 30;
	mov.b64 	%rd429, {%r256, %r255};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r257, %r251, %r252, 25;
	shf.l.wrap.b32 	%r258, %r252, %r251, 25;
	mov.b64 	%rd431, {%r258, %r257};
	xor.b64  	%rd432, %rd430, %rd431;
	and.b64  	%rd433, %rd1092, %rd1093;
	xor.b64  	%rd434, %rd1092, %rd1093;
	and.b64  	%rd435, %rd434, %rd374;
	or.b64  	%rd436, %rd435, %rd433;
	add.s64 	%rd437, %rd427, %rd436;
	add.s64 	%rd1091, %rd437, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd1072;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd438, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd439, {%r264, %r263};
	xor.b64  	%rd440, %rd439, %rd438;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd441, {%r266, %r265};
	xor.b64  	%rd442, %rd440, %rd441;
	xor.b64  	%rd443, %rd1071, %rd1070;
	and.b64  	%rd444, %rd1072, %rd443;
	xor.b64  	%rd445, %rd444, %rd1070;
	add.s64 	%rd446, %rd363, %rd10;
	add.s64 	%rd447, %rd446, %rd1060;
	add.s64 	%rd448, %rd447, %rd445;
	add.s64 	%rd449, %rd448, %rd442;
	add.s64 	%rd1073, %rd449, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd1091;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd450, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd451, {%r272, %r271};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd453, {%r274, %r273};
	xor.b64  	%rd454, %rd452, %rd453;
	and.b64  	%rd455, %rd1091, %rd1092;
	xor.b64  	%rd456, %rd1091, %rd1092;
	and.b64  	%rd457, %rd456, %rd1093;
	or.b64  	%rd458, %rd457, %rd455;
	add.s64 	%rd459, %rd449, %rd458;
	add.s64 	%rd1090, %rd459, %rd454;
	mov.u64 	%rd1078, 0;
	mov.u32 	%r732, 16;
	mov.u64 	%rd1069, k_sha512;
	mov.u64 	%rd1075, %rd7;
	mov.u64 	%rd1076, %rd8;
	mov.u64 	%rd1077, %rd9;
	mov.u64 	%rd1079, %rd1078;
	mov.u64 	%rd1080, %rd1078;
	mov.u64 	%rd1081, %rd1078;
	mov.u64 	%rd1082, %rd1078;
	mov.u64 	%rd1083, %rd1078;
	mov.u64 	%rd1084, %rd1078;
	mov.u64 	%rd1085, %rd1078;
	mov.u64 	%rd1086, %rd1078;
	mov.u64 	%rd1087, %rd1078;
	mov.u64 	%rd1088, %rd1078;
	mov.u64 	%rd1089, %rd10;

BB4_4:
	shr.u64 	%rd460, %rd1088, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd1088;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 19;
	shf.r.wrap.b32 	%r278, %r275, %r276, 19;
	mov.b64 	%rd461, {%r278, %r277};
	xor.b64  	%rd462, %rd461, %rd460;
	shf.l.wrap.b32 	%r279, %r275, %r276, 3;
	shf.l.wrap.b32 	%r280, %r276, %r275, 3;
	mov.b64 	%rd463, {%r280, %r279};
	xor.b64  	%rd464, %rd462, %rd463;
	shr.u64 	%rd465, %rd1075, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd1075;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 1;
	shf.r.wrap.b32 	%r284, %r281, %r282, 1;
	mov.b64 	%rd466, {%r284, %r283};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.r.wrap.b32 	%r285, %r282, %r281, 8;
	shf.r.wrap.b32 	%r286, %r281, %r282, 8;
	mov.b64 	%rd468, {%r286, %r285};
	xor.b64  	%rd469, %rd467, %rd468;
	add.s64 	%rd470, %rd1074, %rd1083;
	add.s64 	%rd471, %rd470, %rd464;
	add.s64 	%rd1074, %rd471, %rd469;
	shr.u64 	%rd472, %rd1089, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd1089;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 19;
	shf.r.wrap.b32 	%r290, %r287, %r288, 19;
	mov.b64 	%rd473, {%r290, %r289};
	xor.b64  	%rd474, %rd473, %rd472;
	shf.l.wrap.b32 	%r291, %r287, %r288, 3;
	shf.l.wrap.b32 	%r292, %r288, %r287, 3;
	mov.b64 	%rd475, {%r292, %r291};
	xor.b64  	%rd476, %rd474, %rd475;
	shr.u64 	%rd477, %rd1076, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd1076;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 1;
	shf.r.wrap.b32 	%r296, %r293, %r294, 1;
	mov.b64 	%rd478, {%r296, %r295};
	xor.b64  	%rd479, %rd478, %rd477;
	shf.r.wrap.b32 	%r297, %r294, %r293, 8;
	shf.r.wrap.b32 	%r298, %r293, %r294, 8;
	mov.b64 	%rd480, {%r298, %r297};
	xor.b64  	%rd481, %rd479, %rd480;
	add.s64 	%rd482, %rd1075, %rd1084;
	add.s64 	%rd483, %rd482, %rd476;
	add.s64 	%rd1075, %rd483, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd1074;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 19;
	shf.r.wrap.b32 	%r302, %r299, %r300, 19;
	mov.b64 	%rd484, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 3;
	shf.l.wrap.b32 	%r304, %r300, %r299, 3;
	mov.b64 	%rd485, {%r304, %r303};
	shr.u64 	%rd486, %rd1074, 6;
	xor.b64  	%rd487, %rd484, %rd486;
	xor.b64  	%rd488, %rd487, %rd485;
	shr.u64 	%rd489, %rd1077, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd1077;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 1;
	shf.r.wrap.b32 	%r308, %r305, %r306, 1;
	mov.b64 	%rd490, {%r308, %r307};
	xor.b64  	%rd491, %rd490, %rd489;
	shf.r.wrap.b32 	%r309, %r306, %r305, 8;
	shf.r.wrap.b32 	%r310, %r305, %r306, 8;
	mov.b64 	%rd492, {%r310, %r309};
	xor.b64  	%rd493, %rd491, %rd492;
	add.s64 	%rd494, %rd1076, %rd1085;
	add.s64 	%rd495, %rd494, %rd488;
	add.s64 	%rd1076, %rd495, %rd493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd1075;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 19;
	shf.r.wrap.b32 	%r314, %r311, %r312, 19;
	mov.b64 	%rd496, {%r314, %r313};
	shf.l.wrap.b32 	%r315, %r311, %r312, 3;
	shf.l.wrap.b32 	%r316, %r312, %r311, 3;
	mov.b64 	%rd497, {%r316, %r315};
	shr.u64 	%rd498, %rd1075, 6;
	xor.b64  	%rd499, %rd496, %rd498;
	xor.b64  	%rd500, %rd499, %rd497;
	shr.u64 	%rd501, %rd1078, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd1078;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 1;
	shf.r.wrap.b32 	%r320, %r317, %r318, 1;
	mov.b64 	%rd502, {%r320, %r319};
	xor.b64  	%rd503, %rd502, %rd501;
	shf.r.wrap.b32 	%r321, %r318, %r317, 8;
	shf.r.wrap.b32 	%r322, %r317, %r318, 8;
	mov.b64 	%rd504, {%r322, %r321};
	xor.b64  	%rd505, %rd503, %rd504;
	add.s64 	%rd506, %rd1077, %rd1086;
	add.s64 	%rd507, %rd506, %rd500;
	add.s64 	%rd1077, %rd507, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd1076;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 19;
	shf.r.wrap.b32 	%r326, %r323, %r324, 19;
	mov.b64 	%rd508, {%r326, %r325};
	shf.l.wrap.b32 	%r327, %r323, %r324, 3;
	shf.l.wrap.b32 	%r328, %r324, %r323, 3;
	mov.b64 	%rd509, {%r328, %r327};
	shr.u64 	%rd510, %rd1076, 6;
	xor.b64  	%rd511, %rd508, %rd510;
	xor.b64  	%rd512, %rd511, %rd509;
	shr.u64 	%rd513, %rd1079, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd1079;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 1;
	shf.r.wrap.b32 	%r332, %r329, %r330, 1;
	mov.b64 	%rd514, {%r332, %r331};
	xor.b64  	%rd515, %rd514, %rd513;
	shf.r.wrap.b32 	%r333, %r330, %r329, 8;
	shf.r.wrap.b32 	%r334, %r329, %r330, 8;
	mov.b64 	%rd516, {%r334, %r333};
	xor.b64  	%rd517, %rd515, %rd516;
	add.s64 	%rd518, %rd1078, %rd1087;
	add.s64 	%rd519, %rd518, %rd512;
	add.s64 	%rd1078, %rd519, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd1077;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 19;
	shf.r.wrap.b32 	%r338, %r335, %r336, 19;
	mov.b64 	%rd520, {%r338, %r337};
	shf.l.wrap.b32 	%r339, %r335, %r336, 3;
	shf.l.wrap.b32 	%r340, %r336, %r335, 3;
	mov.b64 	%rd521, {%r340, %r339};
	shr.u64 	%rd522, %rd1077, 6;
	xor.b64  	%rd523, %rd520, %rd522;
	xor.b64  	%rd524, %rd523, %rd521;
	shr.u64 	%rd525, %rd1080, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd1080;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 1;
	shf.r.wrap.b32 	%r344, %r341, %r342, 1;
	mov.b64 	%rd526, {%r344, %r343};
	xor.b64  	%rd527, %rd526, %rd525;
	shf.r.wrap.b32 	%r345, %r342, %r341, 8;
	shf.r.wrap.b32 	%r346, %r341, %r342, 8;
	mov.b64 	%rd528, {%r346, %r345};
	xor.b64  	%rd529, %rd527, %rd528;
	add.s64 	%rd530, %rd1079, %rd1088;
	add.s64 	%rd531, %rd530, %rd524;
	add.s64 	%rd1079, %rd531, %rd529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd1078;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 19;
	shf.r.wrap.b32 	%r350, %r347, %r348, 19;
	mov.b64 	%rd532, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 3;
	shf.l.wrap.b32 	%r352, %r348, %r347, 3;
	mov.b64 	%rd533, {%r352, %r351};
	shr.u64 	%rd534, %rd1078, 6;
	xor.b64  	%rd535, %rd532, %rd534;
	xor.b64  	%rd536, %rd535, %rd533;
	shr.u64 	%rd537, %rd1081, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd1081;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 1;
	shf.r.wrap.b32 	%r356, %r353, %r354, 1;
	mov.b64 	%rd538, {%r356, %r355};
	xor.b64  	%rd539, %rd538, %rd537;
	shf.r.wrap.b32 	%r357, %r354, %r353, 8;
	shf.r.wrap.b32 	%r358, %r353, %r354, 8;
	mov.b64 	%rd540, {%r358, %r357};
	xor.b64  	%rd541, %rd539, %rd540;
	add.s64 	%rd542, %rd1080, %rd1089;
	add.s64 	%rd543, %rd542, %rd536;
	add.s64 	%rd1080, %rd543, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd1079;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 19;
	shf.r.wrap.b32 	%r362, %r359, %r360, 19;
	mov.b64 	%rd544, {%r362, %r361};
	shf.l.wrap.b32 	%r363, %r359, %r360, 3;
	shf.l.wrap.b32 	%r364, %r360, %r359, 3;
	mov.b64 	%rd545, {%r364, %r363};
	shr.u64 	%rd546, %rd1079, 6;
	xor.b64  	%rd547, %rd544, %rd546;
	xor.b64  	%rd548, %rd547, %rd545;
	shr.u64 	%rd549, %rd1082, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd1082;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 1;
	shf.r.wrap.b32 	%r368, %r365, %r366, 1;
	mov.b64 	%rd550, {%r368, %r367};
	xor.b64  	%rd551, %rd550, %rd549;
	shf.r.wrap.b32 	%r369, %r366, %r365, 8;
	shf.r.wrap.b32 	%r370, %r365, %r366, 8;
	mov.b64 	%rd552, {%r370, %r369};
	xor.b64  	%rd553, %rd551, %rd552;
	add.s64 	%rd554, %rd1074, %rd1081;
	add.s64 	%rd555, %rd554, %rd548;
	add.s64 	%rd1081, %rd555, %rd553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd1080;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 19;
	shf.r.wrap.b32 	%r374, %r371, %r372, 19;
	mov.b64 	%rd556, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 3;
	shf.l.wrap.b32 	%r376, %r372, %r371, 3;
	mov.b64 	%rd557, {%r376, %r375};
	shr.u64 	%rd558, %rd1080, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	shr.u64 	%rd561, %rd1083, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd1083;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 1;
	shf.r.wrap.b32 	%r380, %r377, %r378, 1;
	mov.b64 	%rd562, {%r380, %r379};
	xor.b64  	%rd563, %rd562, %rd561;
	shf.r.wrap.b32 	%r381, %r378, %r377, 8;
	shf.r.wrap.b32 	%r382, %r377, %r378, 8;
	mov.b64 	%rd564, {%r382, %r381};
	xor.b64  	%rd565, %rd563, %rd564;
	add.s64 	%rd566, %rd1075, %rd1082;
	add.s64 	%rd567, %rd566, %rd560;
	add.s64 	%rd1082, %rd567, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd1081;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 19;
	shf.r.wrap.b32 	%r386, %r383, %r384, 19;
	mov.b64 	%rd568, {%r386, %r385};
	shf.l.wrap.b32 	%r387, %r383, %r384, 3;
	shf.l.wrap.b32 	%r388, %r384, %r383, 3;
	mov.b64 	%rd569, {%r388, %r387};
	shr.u64 	%rd570, %rd1081, 6;
	xor.b64  	%rd571, %rd568, %rd570;
	xor.b64  	%rd572, %rd571, %rd569;
	shr.u64 	%rd573, %rd1084, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd1084;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 1;
	shf.r.wrap.b32 	%r392, %r389, %r390, 1;
	mov.b64 	%rd574, {%r392, %r391};
	xor.b64  	%rd575, %rd574, %rd573;
	shf.r.wrap.b32 	%r393, %r390, %r389, 8;
	shf.r.wrap.b32 	%r394, %r389, %r390, 8;
	mov.b64 	%rd576, {%r394, %r393};
	xor.b64  	%rd577, %rd575, %rd576;
	add.s64 	%rd578, %rd1076, %rd1083;
	add.s64 	%rd579, %rd578, %rd572;
	add.s64 	%rd1083, %rd579, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd1082;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 19;
	shf.r.wrap.b32 	%r398, %r395, %r396, 19;
	mov.b64 	%rd580, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 3;
	shf.l.wrap.b32 	%r400, %r396, %r395, 3;
	mov.b64 	%rd581, {%r400, %r399};
	shr.u64 	%rd582, %rd1082, 6;
	xor.b64  	%rd583, %rd580, %rd582;
	xor.b64  	%rd584, %rd583, %rd581;
	shr.u64 	%rd585, %rd1085, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd1085;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 1;
	shf.r.wrap.b32 	%r404, %r401, %r402, 1;
	mov.b64 	%rd586, {%r404, %r403};
	xor.b64  	%rd587, %rd586, %rd585;
	shf.r.wrap.b32 	%r405, %r402, %r401, 8;
	shf.r.wrap.b32 	%r406, %r401, %r402, 8;
	mov.b64 	%rd588, {%r406, %r405};
	xor.b64  	%rd589, %rd587, %rd588;
	add.s64 	%rd590, %rd1077, %rd1084;
	add.s64 	%rd591, %rd590, %rd584;
	add.s64 	%rd1084, %rd591, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd1083;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd592, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd593, {%r412, %r411};
	shr.u64 	%rd594, %rd1083, 6;
	xor.b64  	%rd595, %rd592, %rd594;
	xor.b64  	%rd596, %rd595, %rd593;
	shr.u64 	%rd597, %rd1086, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd1086;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 1;
	shf.r.wrap.b32 	%r416, %r413, %r414, 1;
	mov.b64 	%rd598, {%r416, %r415};
	xor.b64  	%rd599, %rd598, %rd597;
	shf.r.wrap.b32 	%r417, %r414, %r413, 8;
	shf.r.wrap.b32 	%r418, %r413, %r414, 8;
	mov.b64 	%rd600, {%r418, %r417};
	xor.b64  	%rd601, %rd599, %rd600;
	add.s64 	%rd602, %rd1078, %rd1085;
	add.s64 	%rd603, %rd602, %rd596;
	add.s64 	%rd1085, %rd603, %rd601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd1084;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 19;
	shf.r.wrap.b32 	%r422, %r419, %r420, 19;
	mov.b64 	%rd604, {%r422, %r421};
	shf.l.wrap.b32 	%r423, %r419, %r420, 3;
	shf.l.wrap.b32 	%r424, %r420, %r419, 3;
	mov.b64 	%rd605, {%r424, %r423};
	shr.u64 	%rd606, %rd1084, 6;
	xor.b64  	%rd607, %rd604, %rd606;
	xor.b64  	%rd608, %rd607, %rd605;
	shr.u64 	%rd609, %rd1087, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd1087;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 1;
	shf.r.wrap.b32 	%r428, %r425, %r426, 1;
	mov.b64 	%rd610, {%r428, %r427};
	xor.b64  	%rd611, %rd610, %rd609;
	shf.r.wrap.b32 	%r429, %r426, %r425, 8;
	shf.r.wrap.b32 	%r430, %r425, %r426, 8;
	mov.b64 	%rd612, {%r430, %r429};
	xor.b64  	%rd613, %rd611, %rd612;
	add.s64 	%rd614, %rd1079, %rd1086;
	add.s64 	%rd615, %rd614, %rd608;
	add.s64 	%rd1086, %rd615, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd1085;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 19;
	shf.r.wrap.b32 	%r434, %r431, %r432, 19;
	mov.b64 	%rd616, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 3;
	shf.l.wrap.b32 	%r436, %r432, %r431, 3;
	mov.b64 	%rd617, {%r436, %r435};
	shr.u64 	%rd618, %rd1085, 6;
	xor.b64  	%rd619, %rd616, %rd618;
	xor.b64  	%rd620, %rd619, %rd617;
	shr.u64 	%rd621, %rd1088, 7;
	shf.r.wrap.b32 	%r437, %r276, %r275, 1;
	shf.r.wrap.b32 	%r438, %r275, %r276, 1;
	mov.b64 	%rd622, {%r438, %r437};
	xor.b64  	%rd623, %rd622, %rd621;
	shf.r.wrap.b32 	%r439, %r276, %r275, 8;
	shf.r.wrap.b32 	%r440, %r275, %r276, 8;
	mov.b64 	%rd624, {%r440, %r439};
	xor.b64  	%rd625, %rd623, %rd624;
	add.s64 	%rd626, %rd1080, %rd1087;
	add.s64 	%rd627, %rd626, %rd620;
	add.s64 	%rd1087, %rd627, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd1086;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 19;
	shf.r.wrap.b32 	%r444, %r441, %r442, 19;
	mov.b64 	%rd628, {%r444, %r443};
	shf.l.wrap.b32 	%r445, %r441, %r442, 3;
	shf.l.wrap.b32 	%r446, %r442, %r441, 3;
	mov.b64 	%rd629, {%r446, %r445};
	shr.u64 	%rd630, %rd1086, 6;
	xor.b64  	%rd631, %rd628, %rd630;
	xor.b64  	%rd632, %rd631, %rd629;
	shr.u64 	%rd633, %rd1089, 7;
	shf.r.wrap.b32 	%r447, %r288, %r287, 1;
	shf.r.wrap.b32 	%r448, %r287, %r288, 1;
	mov.b64 	%rd634, {%r448, %r447};
	xor.b64  	%rd635, %rd634, %rd633;
	shf.r.wrap.b32 	%r449, %r288, %r287, 8;
	shf.r.wrap.b32 	%r450, %r287, %r288, 8;
	mov.b64 	%rd636, {%r450, %r449};
	xor.b64  	%rd637, %rd635, %rd636;
	add.s64 	%rd638, %rd1081, %rd1088;
	add.s64 	%rd639, %rd638, %rd632;
	add.s64 	%rd1088, %rd639, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd1087;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 19;
	shf.r.wrap.b32 	%r454, %r451, %r452, 19;
	mov.b64 	%rd640, {%r454, %r453};
	shf.l.wrap.b32 	%r455, %r451, %r452, 3;
	shf.l.wrap.b32 	%r456, %r452, %r451, 3;
	mov.b64 	%rd641, {%r456, %r455};
	shr.u64 	%rd642, %rd1087, 6;
	xor.b64  	%rd643, %rd640, %rd642;
	xor.b64  	%rd644, %rd643, %rd641;
	shf.r.wrap.b32 	%r457, %r300, %r299, 1;
	shf.r.wrap.b32 	%r458, %r299, %r300, 1;
	mov.b64 	%rd645, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r300, %r299, 8;
	shf.r.wrap.b32 	%r460, %r299, %r300, 8;
	mov.b64 	%rd646, {%r460, %r459};
	shr.u64 	%rd647, %rd1074, 7;
	xor.b64  	%rd648, %rd645, %rd647;
	xor.b64  	%rd649, %rd648, %rd646;
	add.s64 	%rd650, %rd1082, %rd1089;
	add.s64 	%rd651, %rd650, %rd644;
	add.s64 	%rd1089, %rd651, %rd649;
	add.s64 	%rd86, %rd1069, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r461,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r462}, %rd1073;
	}
	shf.r.wrap.b32 	%r463, %r462, %r461, 18;
	shf.r.wrap.b32 	%r464, %r461, %r462, 18;
	mov.b64 	%rd652, {%r464, %r463};
	shf.r.wrap.b32 	%r465, %r462, %r461, 14;
	shf.r.wrap.b32 	%r466, %r461, %r462, 14;
	mov.b64 	%rd653, {%r466, %r465};
	xor.b64  	%rd654, %rd652, %rd653;
	shf.l.wrap.b32 	%r467, %r461, %r462, 23;
	shf.l.wrap.b32 	%r468, %r462, %r461, 23;
	mov.b64 	%rd655, {%r468, %r467};
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd1071, %rd1072;
	and.b64  	%rd658, %rd657, %rd1073;
	xor.b64  	%rd659, %rd658, %rd1071;
	add.s64 	%rd660, %rd659, %rd1070;
	add.s64 	%rd661, %rd660, %rd1074;
	ld.const.u64 	%rd662, [%rd1069+128];
	add.s64 	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd663, %rd656;
	add.s64 	%rd665, %rd664, %rd1093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd1090;
	}
	shf.l.wrap.b32 	%r471, %r470, %r469, 30;
	shf.l.wrap.b32 	%r472, %r469, %r470, 30;
	mov.b64 	%rd666, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r469, %r470, 28;
	shf.r.wrap.b32 	%r474, %r470, %r469, 28;
	mov.b64 	%rd667, {%r474, %r473};
	xor.b64  	%rd668, %rd666, %rd667;
	shf.l.wrap.b32 	%r475, %r470, %r469, 25;
	shf.l.wrap.b32 	%r476, %r469, %r470, 25;
	mov.b64 	%rd669, {%r476, %r475};
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd1090, %rd1091;
	and.b64  	%rd672, %rd671, %rd1092;
	and.b64  	%rd673, %rd1090, %rd1091;
	or.b64  	%rd674, %rd672, %rd673;
	add.s64 	%rd675, %rd664, %rd674;
	add.s64 	%rd676, %rd675, %rd670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd665;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 14;
	shf.r.wrap.b32 	%r480, %r477, %r478, 14;
	mov.b64 	%rd677, {%r480, %r479};
	shf.r.wrap.b32 	%r481, %r478, %r477, 18;
	shf.r.wrap.b32 	%r482, %r477, %r478, 18;
	mov.b64 	%rd678, {%r482, %r481};
	xor.b64  	%rd679, %rd678, %rd677;
	shf.l.wrap.b32 	%r483, %r477, %r478, 23;
	shf.l.wrap.b32 	%r484, %r478, %r477, 23;
	mov.b64 	%rd680, {%r484, %r483};
	xor.b64  	%rd681, %rd679, %rd680;
	xor.b64  	%rd682, %rd1072, %rd1073;
	and.b64  	%rd683, %rd665, %rd682;
	xor.b64  	%rd684, %rd683, %rd1072;
	add.s64 	%rd685, %rd1075, %rd1071;
	ld.const.u64 	%rd686, [%rd1069+136];
	add.s64 	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd687, %rd684;
	add.s64 	%rd689, %rd688, %rd681;
	add.s64 	%rd690, %rd689, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd676;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 28;
	shf.r.wrap.b32 	%r488, %r485, %r486, 28;
	mov.b64 	%rd691, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 30;
	shf.l.wrap.b32 	%r490, %r486, %r485, 30;
	mov.b64 	%rd692, {%r490, %r489};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r491, %r485, %r486, 25;
	shf.l.wrap.b32 	%r492, %r486, %r485, 25;
	mov.b64 	%rd694, {%r492, %r491};
	xor.b64  	%rd695, %rd693, %rd694;
	and.b64  	%rd696, %rd676, %rd1090;
	xor.b64  	%rd697, %rd676, %rd1090;
	and.b64  	%rd698, %rd697, %rd1091;
	or.b64  	%rd699, %rd698, %rd696;
	add.s64 	%rd700, %rd689, %rd699;
	add.s64 	%rd701, %rd700, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r494}, %rd690;
	}
	shf.r.wrap.b32 	%r495, %r494, %r493, 14;
	shf.r.wrap.b32 	%r496, %r493, %r494, 14;
	mov.b64 	%rd702, {%r496, %r495};
	shf.r.wrap.b32 	%r497, %r494, %r493, 18;
	shf.r.wrap.b32 	%r498, %r493, %r494, 18;
	mov.b64 	%rd703, {%r498, %r497};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r499, %r493, %r494, 23;
	shf.l.wrap.b32 	%r500, %r494, %r493, 23;
	mov.b64 	%rd705, {%r500, %r499};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd665, %rd1073;
	and.b64  	%rd708, %rd690, %rd707;
	xor.b64  	%rd709, %rd708, %rd1073;
	add.s64 	%rd710, %rd1076, %rd1072;
	ld.const.u64 	%rd711, [%rd1069+144];
	add.s64 	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd712, %rd709;
	add.s64 	%rd714, %rd713, %rd706;
	add.s64 	%rd715, %rd714, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd701;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 28;
	shf.r.wrap.b32 	%r504, %r501, %r502, 28;
	mov.b64 	%rd716, {%r504, %r503};
	shf.l.wrap.b32 	%r505, %r501, %r502, 30;
	shf.l.wrap.b32 	%r506, %r502, %r501, 30;
	mov.b64 	%rd717, {%r506, %r505};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r507, %r501, %r502, 25;
	shf.l.wrap.b32 	%r508, %r502, %r501, 25;
	mov.b64 	%rd719, {%r508, %r507};
	xor.b64  	%rd720, %rd718, %rd719;
	and.b64  	%rd721, %rd701, %rd676;
	xor.b64  	%rd722, %rd701, %rd676;
	and.b64  	%rd723, %rd722, %rd1090;
	or.b64  	%rd724, %rd723, %rd721;
	add.s64 	%rd725, %rd714, %rd724;
	add.s64 	%rd726, %rd725, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd715;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 14;
	shf.r.wrap.b32 	%r512, %r509, %r510, 14;
	mov.b64 	%rd727, {%r512, %r511};
	shf.r.wrap.b32 	%r513, %r510, %r509, 18;
	shf.r.wrap.b32 	%r514, %r509, %r510, 18;
	mov.b64 	%rd728, {%r514, %r513};
	xor.b64  	%rd729, %rd728, %rd727;
	shf.l.wrap.b32 	%r515, %r509, %r510, 23;
	shf.l.wrap.b32 	%r516, %r510, %r509, 23;
	mov.b64 	%rd730, {%r516, %r515};
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd690, %rd665;
	and.b64  	%rd733, %rd715, %rd732;
	xor.b64  	%rd734, %rd733, %rd665;
	add.s64 	%rd735, %rd1077, %rd1073;
	ld.const.u64 	%rd736, [%rd1069+152];
	add.s64 	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd737, %rd734;
	add.s64 	%rd739, %rd738, %rd731;
	add.s64 	%rd740, %rd739, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd726;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 28;
	shf.r.wrap.b32 	%r520, %r517, %r518, 28;
	mov.b64 	%rd741, {%r520, %r519};
	shf.l.wrap.b32 	%r521, %r517, %r518, 30;
	shf.l.wrap.b32 	%r522, %r518, %r517, 30;
	mov.b64 	%rd742, {%r522, %r521};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r523, %r517, %r518, 25;
	shf.l.wrap.b32 	%r524, %r518, %r517, 25;
	mov.b64 	%rd744, {%r524, %r523};
	xor.b64  	%rd745, %rd743, %rd744;
	and.b64  	%rd746, %rd726, %rd701;
	xor.b64  	%rd747, %rd726, %rd701;
	and.b64  	%rd748, %rd747, %rd676;
	or.b64  	%rd749, %rd748, %rd746;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd740;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd752, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd753, {%r530, %r529};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd755, {%r532, %r531};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd715, %rd690;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd690;
	add.s64 	%rd760, %rd665, %rd1078;
	ld.const.u64 	%rd761, [%rd1069+160];
	add.s64 	%rd762, %rd760, %rd761;
	add.s64 	%rd763, %rd762, %rd759;
	add.s64 	%rd764, %rd763, %rd756;
	add.s64 	%rd765, %rd764, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd751;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd766, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd767, {%r538, %r537};
	xor.b64  	%rd768, %rd767, %rd766;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd769, {%r540, %r539};
	xor.b64  	%rd770, %rd768, %rd769;
	and.b64  	%rd771, %rd751, %rd726;
	xor.b64  	%rd772, %rd751, %rd726;
	and.b64  	%rd773, %rd772, %rd701;
	or.b64  	%rd774, %rd773, %rd771;
	add.s64 	%rd775, %rd764, %rd774;
	add.s64 	%rd776, %rd775, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd765;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 14;
	shf.r.wrap.b32 	%r544, %r541, %r542, 14;
	mov.b64 	%rd777, {%r544, %r543};
	shf.r.wrap.b32 	%r545, %r542, %r541, 18;
	shf.r.wrap.b32 	%r546, %r541, %r542, 18;
	mov.b64 	%rd778, {%r546, %r545};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.l.wrap.b32 	%r547, %r541, %r542, 23;
	shf.l.wrap.b32 	%r548, %r542, %r541, 23;
	mov.b64 	%rd780, {%r548, %r547};
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd740, %rd715;
	and.b64  	%rd783, %rd765, %rd782;
	xor.b64  	%rd784, %rd783, %rd715;
	add.s64 	%rd785, %rd690, %rd1079;
	ld.const.u64 	%rd786, [%rd1069+168];
	add.s64 	%rd787, %rd785, %rd786;
	add.s64 	%rd788, %rd787, %rd784;
	add.s64 	%rd789, %rd788, %rd781;
	add.s64 	%rd790, %rd789, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd776;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 28;
	shf.r.wrap.b32 	%r552, %r549, %r550, 28;
	mov.b64 	%rd791, {%r552, %r551};
	shf.l.wrap.b32 	%r553, %r549, %r550, 30;
	shf.l.wrap.b32 	%r554, %r550, %r549, 30;
	mov.b64 	%rd792, {%r554, %r553};
	xor.b64  	%rd793, %rd792, %rd791;
	shf.l.wrap.b32 	%r555, %r549, %r550, 25;
	shf.l.wrap.b32 	%r556, %r550, %r549, 25;
	mov.b64 	%rd794, {%r556, %r555};
	xor.b64  	%rd795, %rd793, %rd794;
	and.b64  	%rd796, %rd776, %rd751;
	xor.b64  	%rd797, %rd776, %rd751;
	and.b64  	%rd798, %rd797, %rd726;
	or.b64  	%rd799, %rd798, %rd796;
	add.s64 	%rd800, %rd789, %rd799;
	add.s64 	%rd801, %rd800, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r557,%dummy}, %rd790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd790;
	}
	shf.r.wrap.b32 	%r559, %r558, %r557, 14;
	shf.r.wrap.b32 	%r560, %r557, %r558, 14;
	mov.b64 	%rd802, {%r560, %r559};
	shf.r.wrap.b32 	%r561, %r558, %r557, 18;
	shf.r.wrap.b32 	%r562, %r557, %r558, 18;
	mov.b64 	%rd803, {%r562, %r561};
	xor.b64  	%rd804, %rd803, %rd802;
	shf.l.wrap.b32 	%r563, %r557, %r558, 23;
	shf.l.wrap.b32 	%r564, %r558, %r557, 23;
	mov.b64 	%rd805, {%r564, %r563};
	xor.b64  	%rd806, %rd804, %rd805;
	xor.b64  	%rd807, %rd765, %rd740;
	and.b64  	%rd808, %rd790, %rd807;
	xor.b64  	%rd809, %rd808, %rd740;
	add.s64 	%rd810, %rd715, %rd1080;
	ld.const.u64 	%rd811, [%rd1069+176];
	add.s64 	%rd812, %rd810, %rd811;
	add.s64 	%rd813, %rd812, %rd809;
	add.s64 	%rd814, %rd813, %rd806;
	add.s64 	%rd815, %rd814, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd801;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 28;
	shf.r.wrap.b32 	%r568, %r565, %r566, 28;
	mov.b64 	%rd816, {%r568, %r567};
	shf.l.wrap.b32 	%r569, %r565, %r566, 30;
	shf.l.wrap.b32 	%r570, %r566, %r565, 30;
	mov.b64 	%rd817, {%r570, %r569};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r571, %r565, %r566, 25;
	shf.l.wrap.b32 	%r572, %r566, %r565, 25;
	mov.b64 	%rd819, {%r572, %r571};
	xor.b64  	%rd820, %rd818, %rd819;
	and.b64  	%rd821, %rd801, %rd776;
	xor.b64  	%rd822, %rd801, %rd776;
	and.b64  	%rd823, %rd822, %rd751;
	or.b64  	%rd824, %rd823, %rd821;
	add.s64 	%rd825, %rd814, %rd824;
	add.s64 	%rd826, %rd825, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r574}, %rd815;
	}
	shf.r.wrap.b32 	%r575, %r574, %r573, 14;
	shf.r.wrap.b32 	%r576, %r573, %r574, 14;
	mov.b64 	%rd827, {%r576, %r575};
	shf.r.wrap.b32 	%r577, %r574, %r573, 18;
	shf.r.wrap.b32 	%r578, %r573, %r574, 18;
	mov.b64 	%rd828, {%r578, %r577};
	xor.b64  	%rd829, %rd828, %rd827;
	shf.l.wrap.b32 	%r579, %r573, %r574, 23;
	shf.l.wrap.b32 	%r580, %r574, %r573, 23;
	mov.b64 	%rd830, {%r580, %r579};
	xor.b64  	%rd831, %rd829, %rd830;
	xor.b64  	%rd832, %rd790, %rd765;
	and.b64  	%rd833, %rd815, %rd832;
	xor.b64  	%rd834, %rd833, %rd765;
	add.s64 	%rd835, %rd740, %rd1081;
	ld.const.u64 	%rd836, [%rd1069+184];
	add.s64 	%rd837, %rd835, %rd836;
	add.s64 	%rd838, %rd837, %rd834;
	add.s64 	%rd839, %rd838, %rd831;
	add.s64 	%rd840, %rd839, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd826;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 28;
	shf.r.wrap.b32 	%r584, %r581, %r582, 28;
	mov.b64 	%rd841, {%r584, %r583};
	shf.l.wrap.b32 	%r585, %r581, %r582, 30;
	shf.l.wrap.b32 	%r586, %r582, %r581, 30;
	mov.b64 	%rd842, {%r586, %r585};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r587, %r581, %r582, 25;
	shf.l.wrap.b32 	%r588, %r582, %r581, 25;
	mov.b64 	%rd844, {%r588, %r587};
	xor.b64  	%rd845, %rd843, %rd844;
	and.b64  	%rd846, %rd826, %rd801;
	xor.b64  	%rd847, %rd826, %rd801;
	and.b64  	%rd848, %rd847, %rd776;
	or.b64  	%rd849, %rd848, %rd846;
	add.s64 	%rd850, %rd839, %rd849;
	add.s64 	%rd851, %rd850, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd840;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 14;
	shf.r.wrap.b32 	%r592, %r589, %r590, 14;
	mov.b64 	%rd852, {%r592, %r591};
	shf.r.wrap.b32 	%r593, %r590, %r589, 18;
	shf.r.wrap.b32 	%r594, %r589, %r590, 18;
	mov.b64 	%rd853, {%r594, %r593};
	xor.b64  	%rd854, %rd853, %rd852;
	shf.l.wrap.b32 	%r595, %r589, %r590, 23;
	shf.l.wrap.b32 	%r596, %r590, %r589, 23;
	mov.b64 	%rd855, {%r596, %r595};
	xor.b64  	%rd856, %rd854, %rd855;
	xor.b64  	%rd857, %rd815, %rd790;
	and.b64  	%rd858, %rd840, %rd857;
	xor.b64  	%rd859, %rd858, %rd790;
	add.s64 	%rd860, %rd765, %rd1082;
	ld.const.u64 	%rd861, [%rd1069+192];
	add.s64 	%rd862, %rd860, %rd861;
	add.s64 	%rd863, %rd862, %rd859;
	add.s64 	%rd864, %rd863, %rd856;
	add.s64 	%rd865, %rd864, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd851;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 28;
	shf.r.wrap.b32 	%r600, %r597, %r598, 28;
	mov.b64 	%rd866, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 30;
	shf.l.wrap.b32 	%r602, %r598, %r597, 30;
	mov.b64 	%rd867, {%r602, %r601};
	xor.b64  	%rd868, %rd867, %rd866;
	shf.l.wrap.b32 	%r603, %r597, %r598, 25;
	shf.l.wrap.b32 	%r604, %r598, %r597, 25;
	mov.b64 	%rd869, {%r604, %r603};
	xor.b64  	%rd870, %rd868, %rd869;
	and.b64  	%rd871, %rd851, %rd826;
	xor.b64  	%rd872, %rd851, %rd826;
	and.b64  	%rd873, %rd872, %rd801;
	or.b64  	%rd874, %rd873, %rd871;
	add.s64 	%rd875, %rd864, %rd874;
	add.s64 	%rd876, %rd875, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd865;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 14;
	shf.r.wrap.b32 	%r608, %r605, %r606, 14;
	mov.b64 	%rd877, {%r608, %r607};
	shf.r.wrap.b32 	%r609, %r606, %r605, 18;
	shf.r.wrap.b32 	%r610, %r605, %r606, 18;
	mov.b64 	%rd878, {%r610, %r609};
	xor.b64  	%rd879, %rd878, %rd877;
	shf.l.wrap.b32 	%r611, %r605, %r606, 23;
	shf.l.wrap.b32 	%r612, %r606, %r605, 23;
	mov.b64 	%rd880, {%r612, %r611};
	xor.b64  	%rd881, %rd879, %rd880;
	xor.b64  	%rd882, %rd840, %rd815;
	and.b64  	%rd883, %rd865, %rd882;
	xor.b64  	%rd884, %rd883, %rd815;
	add.s64 	%rd885, %rd790, %rd1083;
	ld.const.u64 	%rd886, [%rd1069+200];
	add.s64 	%rd887, %rd885, %rd886;
	add.s64 	%rd888, %rd887, %rd884;
	add.s64 	%rd889, %rd888, %rd881;
	add.s64 	%rd890, %rd889, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd876;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 28;
	shf.r.wrap.b32 	%r616, %r613, %r614, 28;
	mov.b64 	%rd891, {%r616, %r615};
	shf.l.wrap.b32 	%r617, %r613, %r614, 30;
	shf.l.wrap.b32 	%r618, %r614, %r613, 30;
	mov.b64 	%rd892, {%r618, %r617};
	xor.b64  	%rd893, %rd892, %rd891;
	shf.l.wrap.b32 	%r619, %r613, %r614, 25;
	shf.l.wrap.b32 	%r620, %r614, %r613, 25;
	mov.b64 	%rd894, {%r620, %r619};
	xor.b64  	%rd895, %rd893, %rd894;
	and.b64  	%rd896, %rd876, %rd851;
	xor.b64  	%rd897, %rd876, %rd851;
	and.b64  	%rd898, %rd897, %rd826;
	or.b64  	%rd899, %rd898, %rd896;
	add.s64 	%rd900, %rd889, %rd899;
	add.s64 	%rd901, %rd900, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd890;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 14;
	shf.r.wrap.b32 	%r624, %r621, %r622, 14;
	mov.b64 	%rd902, {%r624, %r623};
	shf.r.wrap.b32 	%r625, %r622, %r621, 18;
	shf.r.wrap.b32 	%r626, %r621, %r622, 18;
	mov.b64 	%rd903, {%r626, %r625};
	xor.b64  	%rd904, %rd903, %rd902;
	shf.l.wrap.b32 	%r627, %r621, %r622, 23;
	shf.l.wrap.b32 	%r628, %r622, %r621, 23;
	mov.b64 	%rd905, {%r628, %r627};
	xor.b64  	%rd906, %rd904, %rd905;
	xor.b64  	%rd907, %rd865, %rd840;
	and.b64  	%rd908, %rd890, %rd907;
	xor.b64  	%rd909, %rd908, %rd840;
	add.s64 	%rd910, %rd815, %rd1084;
	ld.const.u64 	%rd911, [%rd1069+208];
	add.s64 	%rd912, %rd910, %rd911;
	add.s64 	%rd913, %rd912, %rd909;
	add.s64 	%rd914, %rd913, %rd906;
	add.s64 	%rd915, %rd914, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd901;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 28;
	shf.r.wrap.b32 	%r632, %r629, %r630, 28;
	mov.b64 	%rd916, {%r632, %r631};
	shf.l.wrap.b32 	%r633, %r629, %r630, 30;
	shf.l.wrap.b32 	%r634, %r630, %r629, 30;
	mov.b64 	%rd917, {%r634, %r633};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r635, %r629, %r630, 25;
	shf.l.wrap.b32 	%r636, %r630, %r629, 25;
	mov.b64 	%rd919, {%r636, %r635};
	xor.b64  	%rd920, %rd918, %rd919;
	and.b64  	%rd921, %rd901, %rd876;
	xor.b64  	%rd922, %rd901, %rd876;
	and.b64  	%rd923, %rd922, %rd851;
	or.b64  	%rd924, %rd923, %rd921;
	add.s64 	%rd925, %rd914, %rd924;
	add.s64 	%rd926, %rd925, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd915;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd927, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd928, {%r642, %r641};
	xor.b64  	%rd929, %rd928, %rd927;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd930, {%r644, %r643};
	xor.b64  	%rd931, %rd929, %rd930;
	xor.b64  	%rd932, %rd890, %rd865;
	and.b64  	%rd933, %rd915, %rd932;
	xor.b64  	%rd934, %rd933, %rd865;
	add.s64 	%rd935, %rd840, %rd1085;
	ld.const.u64 	%rd936, [%rd1069+216];
	add.s64 	%rd937, %rd935, %rd936;
	add.s64 	%rd938, %rd937, %rd934;
	add.s64 	%rd939, %rd938, %rd931;
	add.s64 	%rd940, %rd939, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd926;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd941, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd942, {%r650, %r649};
	xor.b64  	%rd943, %rd942, %rd941;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd944, {%r652, %r651};
	xor.b64  	%rd945, %rd943, %rd944;
	and.b64  	%rd946, %rd926, %rd901;
	xor.b64  	%rd947, %rd926, %rd901;
	and.b64  	%rd948, %rd947, %rd876;
	or.b64  	%rd949, %rd948, %rd946;
	add.s64 	%rd950, %rd939, %rd949;
	add.s64 	%rd951, %rd950, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd940;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 14;
	shf.r.wrap.b32 	%r656, %r653, %r654, 14;
	mov.b64 	%rd952, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 18;
	shf.r.wrap.b32 	%r658, %r653, %r654, 18;
	mov.b64 	%rd953, {%r658, %r657};
	xor.b64  	%rd954, %rd953, %rd952;
	shf.l.wrap.b32 	%r659, %r653, %r654, 23;
	shf.l.wrap.b32 	%r660, %r654, %r653, 23;
	mov.b64 	%rd955, {%r660, %r659};
	xor.b64  	%rd956, %rd954, %rd955;
	xor.b64  	%rd957, %rd915, %rd890;
	and.b64  	%rd958, %rd940, %rd957;
	xor.b64  	%rd959, %rd958, %rd890;
	add.s64 	%rd960, %rd865, %rd1086;
	ld.const.u64 	%rd961, [%rd1069+224];
	add.s64 	%rd962, %rd960, %rd961;
	add.s64 	%rd963, %rd962, %rd959;
	add.s64 	%rd964, %rd963, %rd956;
	add.s64 	%rd1070, %rd964, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd951;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 28;
	shf.r.wrap.b32 	%r664, %r661, %r662, 28;
	mov.b64 	%rd965, {%r664, %r663};
	shf.l.wrap.b32 	%r665, %r661, %r662, 30;
	shf.l.wrap.b32 	%r666, %r662, %r661, 30;
	mov.b64 	%rd966, {%r666, %r665};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r667, %r661, %r662, 25;
	shf.l.wrap.b32 	%r668, %r662, %r661, 25;
	mov.b64 	%rd968, {%r668, %r667};
	xor.b64  	%rd969, %rd967, %rd968;
	and.b64  	%rd970, %rd951, %rd926;
	xor.b64  	%rd971, %rd951, %rd926;
	and.b64  	%rd972, %rd971, %rd901;
	or.b64  	%rd973, %rd972, %rd970;
	add.s64 	%rd974, %rd964, %rd973;
	add.s64 	%rd1093, %rd974, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1070;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 14;
	shf.r.wrap.b32 	%r672, %r669, %r670, 14;
	mov.b64 	%rd975, {%r672, %r671};
	shf.r.wrap.b32 	%r673, %r670, %r669, 18;
	shf.r.wrap.b32 	%r674, %r669, %r670, 18;
	mov.b64 	%rd976, {%r674, %r673};
	xor.b64  	%rd977, %rd976, %rd975;
	shf.l.wrap.b32 	%r675, %r669, %r670, 23;
	shf.l.wrap.b32 	%r676, %r670, %r669, 23;
	mov.b64 	%rd978, {%r676, %r675};
	xor.b64  	%rd979, %rd977, %rd978;
	xor.b64  	%rd980, %rd940, %rd915;
	and.b64  	%rd981, %rd1070, %rd980;
	xor.b64  	%rd982, %rd981, %rd915;
	add.s64 	%rd983, %rd890, %rd1087;
	ld.const.u64 	%rd984, [%rd1069+232];
	add.s64 	%rd985, %rd983, %rd984;
	add.s64 	%rd986, %rd985, %rd982;
	add.s64 	%rd987, %rd986, %rd979;
	add.s64 	%rd1071, %rd987, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1093;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 28;
	shf.r.wrap.b32 	%r680, %r677, %r678, 28;
	mov.b64 	%rd988, {%r680, %r679};
	shf.l.wrap.b32 	%r681, %r677, %r678, 30;
	shf.l.wrap.b32 	%r682, %r678, %r677, 30;
	mov.b64 	%rd989, {%r682, %r681};
	xor.b64  	%rd990, %rd989, %rd988;
	shf.l.wrap.b32 	%r683, %r677, %r678, 25;
	shf.l.wrap.b32 	%r684, %r678, %r677, 25;
	mov.b64 	%rd991, {%r684, %r683};
	xor.b64  	%rd992, %rd990, %rd991;
	and.b64  	%rd993, %rd1093, %rd951;
	xor.b64  	%rd994, %rd1093, %rd951;
	and.b64  	%rd995, %rd994, %rd926;
	or.b64  	%rd996, %rd995, %rd993;
	add.s64 	%rd997, %rd987, %rd996;
	add.s64 	%rd1092, %rd997, %rd992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd1071;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 14;
	shf.r.wrap.b32 	%r688, %r685, %r686, 14;
	mov.b64 	%rd998, {%r688, %r687};
	shf.r.wrap.b32 	%r689, %r686, %r685, 18;
	shf.r.wrap.b32 	%r690, %r685, %r686, 18;
	mov.b64 	%rd999, {%r690, %r689};
	xor.b64  	%rd1000, %rd999, %rd998;
	shf.l.wrap.b32 	%r691, %r685, %r686, 23;
	shf.l.wrap.b32 	%r692, %r686, %r685, 23;
	mov.b64 	%rd1001, {%r692, %r691};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	xor.b64  	%rd1003, %rd1070, %rd940;
	and.b64  	%rd1004, %rd1071, %rd1003;
	xor.b64  	%rd1005, %rd1004, %rd940;
	add.s64 	%rd1006, %rd915, %rd1088;
	ld.const.u64 	%rd1007, [%rd1069+240];
	add.s64 	%rd1008, %rd1006, %rd1007;
	add.s64 	%rd1009, %rd1008, %rd1005;
	add.s64 	%rd1010, %rd1009, %rd1002;
	add.s64 	%rd1072, %rd1010, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1092;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 28;
	shf.r.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1011, {%r696, %r695};
	shf.l.wrap.b32 	%r697, %r693, %r694, 30;
	shf.l.wrap.b32 	%r698, %r694, %r693, 30;
	mov.b64 	%rd1012, {%r698, %r697};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	shf.l.wrap.b32 	%r699, %r693, %r694, 25;
	shf.l.wrap.b32 	%r700, %r694, %r693, 25;
	mov.b64 	%rd1014, {%r700, %r699};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	and.b64  	%rd1016, %rd1092, %rd1093;
	xor.b64  	%rd1017, %rd1092, %rd1093;
	and.b64  	%rd1018, %rd1017, %rd951;
	or.b64  	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd1010, %rd1019;
	add.s64 	%rd1091, %rd1020, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1072;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 14;
	shf.r.wrap.b32 	%r704, %r701, %r702, 14;
	mov.b64 	%rd1021, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r702, %r701, 18;
	shf.r.wrap.b32 	%r706, %r701, %r702, 18;
	mov.b64 	%rd1022, {%r706, %r705};
	xor.b64  	%rd1023, %rd1022, %rd1021;
	shf.l.wrap.b32 	%r707, %r701, %r702, 23;
	shf.l.wrap.b32 	%r708, %r702, %r701, 23;
	mov.b64 	%rd1024, {%r708, %r707};
	xor.b64  	%rd1025, %rd1023, %rd1024;
	xor.b64  	%rd1026, %rd1071, %rd1070;
	and.b64  	%rd1027, %rd1072, %rd1026;
	xor.b64  	%rd1028, %rd1027, %rd1070;
	add.s64 	%rd1029, %rd940, %rd1089;
	ld.const.u64 	%rd1030, [%rd1069+248];
	add.s64 	%rd1031, %rd1029, %rd1030;
	add.s64 	%rd1032, %rd1031, %rd1028;
	add.s64 	%rd1033, %rd1032, %rd1025;
	add.s64 	%rd1073, %rd1033, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1091;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 28;
	shf.r.wrap.b32 	%r712, %r709, %r710, 28;
	mov.b64 	%rd1034, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 30;
	shf.l.wrap.b32 	%r714, %r710, %r709, 30;
	mov.b64 	%rd1035, {%r714, %r713};
	xor.b64  	%rd1036, %rd1035, %rd1034;
	shf.l.wrap.b32 	%r715, %r709, %r710, 25;
	shf.l.wrap.b32 	%r716, %r710, %r709, 25;
	mov.b64 	%rd1037, {%r716, %r715};
	xor.b64  	%rd1038, %rd1036, %rd1037;
	and.b64  	%rd1039, %rd1091, %rd1092;
	xor.b64  	%rd1040, %rd1091, %rd1092;
	and.b64  	%rd1041, %rd1040, %rd1093;
	or.b64  	%rd1042, %rd1041, %rd1039;
	add.s64 	%rd1043, %rd1033, %rd1042;
	add.s64 	%rd1090, %rd1043, %rd1038;
	add.s32 	%r732, %r732, 16;
	setp.lt.s32	%p3, %r732, 80;
	mov.u64 	%rd1069, %rd86;
	@%p3 bra 	BB4_4;

	mov.b64	{%r11, %r12}, %rd1070;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB4_11;

	mov.b64	{%r717, %r718}, %rd1093;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r717, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r718, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB4_11;

	add.u64 	%rd1062, %SPL, 8;
	ld.param.u64 	%rd1061, [m01700_s08_param_16];
	ld.global.u32 	%r13, [%rd2+-24];
	mul.wide.u32 	%rd1044, %r13, 4;
	add.s64 	%rd1045, %rd1061, %rd1044;
	mov.u32 	%r719, 1;
	st.local.u32 	[%rd1062], %r719;
	ld.local.u32 	%r720, [%rd1062];
	atom.global.add.u32 	%r721, [%rd1045], %r720;
	setp.ne.s32	%p10, %r721, 0;
	@%p10 bra 	BB4_11;

	add.u64 	%rd1064, %SPL, 4;
	ld.global.u32 	%r14, [%rd2+-44];
	ld.global.u32 	%r722, [%rd2+-28];
	st.local.u32 	[%rd1064], %r719;
	ld.local.u32 	%r724, [%rd1064];
	atom.global.add.u32 	%r15, [%rd92], %r724;
	setp.lt.u32	%p11, %r15, %r722;
	@%p11 bra 	BB4_10;
	bra.uni 	BB4_9;

BB4_10:
	ld.param.u64 	%rd1068, [m01700_s08_param_14];
	mul.wide.u32 	%rd1046, %r15, 32;
	add.s64 	%rd1047, %rd1068, %rd1046;
	st.global.u32 	[%rd1047+12], %r14;
	mov.u32 	%r729, 0;
	st.global.u32 	[%rd1047+16], %r729;
	st.global.u32 	[%rd1047+20], %r13;
	st.global.u64 	[%rd1047], %rd1;
	st.global.u32 	[%rd1047+8], %r731;
	st.global.u32 	[%rd1047+24], %r729;
	st.global.u32 	[%rd1047+28], %r729;
	bra.uni 	BB4_11;

BB4_9:
	add.u64 	%rd1066, %SPL, 0;
	st.local.u32 	[%rd1066], %r719;
	ld.local.u32 	%r726, [%rd1066];
	neg.s32 	%r727, %r726;
	atom.global.add.u32 	%r728, [%rd92], %r727;

BB4_11:
	add.s32 	%r731, %r731, 1;
	ld.global.u32 	%r730, [%rd2+-32];
	setp.lt.u32	%p12, %r731, %r730;
	@%p12 bra 	BB4_3;

BB4_12:
	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .global .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .const .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 8 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 1 m01700_s16_param_20,
	.param .u64 .ptr .global .align 1 m01700_s16_param_21,
	.param .u64 .ptr .global .align 1 m01700_s16_param_22,
	.param .u64 .ptr .global .align 1 m01700_s16_param_23,
	.param .u64 .ptr .global .align 8 m01700_s16_param_24
)
{
	.local .align 4 .b8 	__local_depot5[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<740>;
	.reg .b64 	%rd<1091>;


	mov.u64 	%SPL, __local_depot5;
	ld.param.u64 	%rd87, [m01700_s16_param_0];
	ld.param.u64 	%rd90, [m01700_s16_param_15];
	ld.param.u64 	%rd92, [m01700_s16_param_19];
	ld.param.u64 	%rd93, [m01700_s16_param_24];
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %ntid.x;
	mov.b32	%r19, %envreg3;
	mad.lo.s32 	%r20, %r17, %r18, %r19;
	mov.u32 	%r21, %tid.x;
	add.s32 	%r1, %r20, %r21;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd93, 56;
	ld.global.u64 	%rd94, [%rd93+56];
	setp.ge.u64	%p1, %rd1, %rd94;
	@%p1 bra 	BB5_12;

	ld.global.u32 	%r22, [%rd2+-32];
	setp.eq.s32	%p2, %r22, 0;
	@%p2 bra 	BB5_12;

	mul.wide.s32 	%rd95, %r1, 260;
	add.s64 	%rd96, %rd87, %rd95;
	ld.global.u32 	%r2, [%rd96];
	ld.global.u32 	%r3, [%rd96+4];
	ld.global.u32 	%r24, [%rd2+-24];
	mul.wide.u32 	%rd97, %r24, 64;
	add.s64 	%rd98, %rd90, %rd97;
	ld.global.u32 	%r4, [%rd98+56];
	ld.global.u32 	%r5, [%rd98+60];
	ld.global.u32 	%r6, [%rd98+24];
	ld.global.u32 	%r7, [%rd98+28];
	ld.global.u32 	%r25, [%rd96+8];
	ld.global.u32 	%r26, [%rd96+12];
	mov.u32 	%r738, 0;
	mov.b64	%rd4, {%r26, %r25};
	ld.global.u32 	%r27, [%rd96+16];
	ld.global.u32 	%r28, [%rd96+20];
	mov.b64	%rd5, {%r28, %r27};
	ld.global.u32 	%r29, [%rd96+24];
	ld.global.u32 	%r30, [%rd96+28];
	mov.b64	%rd6, {%r30, %r29};
	ld.global.u32 	%r31, [%rd96+32];
	ld.global.u32 	%r32, [%rd96+36];
	mov.b64	%rd7, {%r32, %r31};
	ld.global.u32 	%r33, [%rd96+40];
	ld.global.u32 	%r34, [%rd96+44];
	mov.b64	%rd8, {%r34, %r33};
	ld.global.u32 	%r35, [%rd96+48];
	ld.global.u32 	%r36, [%rd96+52];
	mov.b64	%rd9, {%r36, %r35};
	ld.global.u32 	%r37, [%rd96+56];
	ld.global.u32 	%r38, [%rd96+60];
	mov.b64	%rd10, {%r38, %r37};
	ld.const.u64 	%rd99, [k_sha512];
	add.s64 	%rd11, %rd99, 6620516959819538809;
	ld.const.u64 	%rd100, [k_sha512+8];
	add.s64 	%rd101, %rd4, %rd100;
	add.s64 	%rd12, %rd101, 2270897969802886507;
	ld.const.u64 	%rd102, [k_sha512+16];
	add.s64 	%rd103, %rd5, %rd102;
	add.s64 	%rd13, %rd103, -7276294671716946913;
	ld.const.u64 	%rd104, [k_sha512+24];
	add.s64 	%rd105, %rd6, %rd104;
	add.s64 	%rd14, %rd105, 5840696475078001361;

BB5_3:
	ld.const.u64 	%rd1063, [k_sha512+120];
	ld.const.u64 	%rd1062, [k_sha512+112];
	ld.const.u64 	%rd1061, [k_sha512+104];
	ld.const.u64 	%rd1060, [k_sha512+96];
	ld.const.u64 	%rd1059, [k_sha512+88];
	ld.const.u64 	%rd1058, [k_sha512+80];
	ld.const.u64 	%rd1057, [k_sha512+72];
	ld.const.u64 	%rd1056, [k_sha512+64];
	ld.const.u64 	%rd1055, [k_sha512+56];
	ld.const.u64 	%rd1054, [k_sha512+48];
	ld.const.u64 	%rd1053, [k_sha512+40];
	ld.const.u64 	%rd1052, [k_sha512+32];
	ld.param.u64 	%rd1051, [m01700_s16_param_3];
	mul.wide.u32 	%rd115, %r738, 4;
	add.s64 	%rd116, %rd1051, %rd115;
	ld.const.u32 	%r40, [%rd116];
	or.b32  	%r41, %r40, %r2;
	mov.b64	%rd1071, {%r3, %r41};
	add.s64 	%rd117, %rd11, %rd1071;
	add.s64 	%rd118, %rd117, 6412459576335945718;
	add.s64 	%rd119, %rd117, -656841070309142950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r42,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r43}, %rd118;
	}
	shf.r.wrap.b32 	%r44, %r43, %r42, 14;
	shf.r.wrap.b32 	%r45, %r42, %r43, 14;
	mov.b64 	%rd120, {%r45, %r44};
	shf.r.wrap.b32 	%r46, %r43, %r42, 18;
	shf.r.wrap.b32 	%r47, %r42, %r43, 18;
	mov.b64 	%rd121, {%r47, %r46};
	xor.b64  	%rd122, %rd121, %rd120;
	shf.l.wrap.b32 	%r48, %r42, %r43, 23;
	shf.l.wrap.b32 	%r49, %r43, %r42, 23;
	mov.b64 	%rd123, {%r49, %r48};
	xor.b64  	%rd124, %rd122, %rd123;
	and.b64  	%rd125, %rd118, -3887949035690463538;
	xor.b64  	%rd126, %rd125, -7276294671716946913;
	add.s64 	%rd127, %rd12, %rd124;
	add.s64 	%rd128, %rd127, %rd126;
	add.s64 	%rd129, %rd128, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r50,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r51}, %rd119;
	}
	shf.r.wrap.b32 	%r52, %r51, %r50, 28;
	shf.r.wrap.b32 	%r53, %r50, %r51, 28;
	mov.b64 	%rd130, {%r53, %r52};
	shf.l.wrap.b32 	%r54, %r50, %r51, 30;
	shf.l.wrap.b32 	%r55, %r51, %r50, 30;
	mov.b64 	%rd131, {%r55, %r54};
	xor.b64  	%rd132, %rd131, %rd130;
	shf.l.wrap.b32 	%r56, %r50, %r51, 25;
	shf.l.wrap.b32 	%r57, %r51, %r50, 25;
	mov.b64 	%rd133, {%r57, %r56};
	xor.b64  	%rd134, %rd132, %rd133;
	add.s64 	%rd135, %rd128, %rd134;
	and.b64  	%rd136, %rd119, 7640891576956012808;
	and.b64  	%rd137, %rd119, -4942790177534073029;
	xor.b64  	%rd138, %rd137, 3026882967131160840;
	or.b64  	%rd139, %rd138, %rd136;
	add.s64 	%rd140, %rd135, %rd139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r58,%dummy}, %rd129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r59}, %rd129;
	}
	shf.r.wrap.b32 	%r60, %r59, %r58, 14;
	shf.r.wrap.b32 	%r61, %r58, %r59, 14;
	mov.b64 	%rd141, {%r61, %r60};
	shf.r.wrap.b32 	%r62, %r59, %r58, 18;
	shf.r.wrap.b32 	%r63, %r58, %r59, 18;
	mov.b64 	%rd142, {%r63, %r62};
	xor.b64  	%rd143, %rd142, %rd141;
	shf.l.wrap.b32 	%r64, %r58, %r59, 23;
	shf.l.wrap.b32 	%r65, %r59, %r58, 23;
	mov.b64 	%rd144, {%r65, %r64};
	xor.b64  	%rd145, %rd143, %rd144;
	xor.b64  	%rd146, %rd118, 5840696475078001361;
	and.b64  	%rd147, %rd129, %rd146;
	xor.b64  	%rd148, %rd147, 5840696475078001361;
	add.s64 	%rd149, %rd13, %rd148;
	add.s64 	%rd150, %rd149, %rd145;
	add.s64 	%rd151, %rd150, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r66,%dummy}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r67}, %rd140;
	}
	shf.r.wrap.b32 	%r68, %r67, %r66, 28;
	shf.r.wrap.b32 	%r69, %r66, %r67, 28;
	mov.b64 	%rd152, {%r69, %r68};
	shf.l.wrap.b32 	%r70, %r66, %r67, 30;
	shf.l.wrap.b32 	%r71, %r67, %r66, 30;
	mov.b64 	%rd153, {%r71, %r70};
	xor.b64  	%rd154, %rd153, %rd152;
	shf.l.wrap.b32 	%r72, %r66, %r67, 25;
	shf.l.wrap.b32 	%r73, %r67, %r66, 25;
	mov.b64 	%rd155, {%r73, %r72};
	xor.b64  	%rd156, %rd154, %rd155;
	and.b64  	%rd157, %rd140, %rd119;
	xor.b64  	%rd158, %rd140, %rd119;
	and.b64  	%rd159, %rd158, 7640891576956012808;
	or.b64  	%rd160, %rd159, %rd157;
	add.s64 	%rd161, %rd160, %rd150;
	add.s64 	%rd162, %rd161, %rd156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r74,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r75}, %rd151;
	}
	shf.r.wrap.b32 	%r76, %r75, %r74, 14;
	shf.r.wrap.b32 	%r77, %r74, %r75, 14;
	mov.b64 	%rd163, {%r77, %r76};
	shf.r.wrap.b32 	%r78, %r75, %r74, 18;
	shf.r.wrap.b32 	%r79, %r74, %r75, 18;
	mov.b64 	%rd164, {%r79, %r78};
	xor.b64  	%rd165, %rd164, %rd163;
	shf.l.wrap.b32 	%r80, %r74, %r75, 23;
	shf.l.wrap.b32 	%r81, %r75, %r74, 23;
	mov.b64 	%rd166, {%r81, %r80};
	xor.b64  	%rd167, %rd165, %rd166;
	xor.b64  	%rd168, %rd129, %rd118;
	and.b64  	%rd169, %rd151, %rd168;
	xor.b64  	%rd170, %rd169, %rd118;
	add.s64 	%rd171, %rd14, %rd170;
	add.s64 	%rd172, %rd171, %rd167;
	add.s64 	%rd173, %rd172, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r82,%dummy}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r83}, %rd162;
	}
	shf.r.wrap.b32 	%r84, %r83, %r82, 28;
	shf.r.wrap.b32 	%r85, %r82, %r83, 28;
	mov.b64 	%rd174, {%r85, %r84};
	shf.l.wrap.b32 	%r86, %r82, %r83, 30;
	shf.l.wrap.b32 	%r87, %r83, %r82, 30;
	mov.b64 	%rd175, {%r87, %r86};
	xor.b64  	%rd176, %rd175, %rd174;
	shf.l.wrap.b32 	%r88, %r82, %r83, 25;
	shf.l.wrap.b32 	%r89, %r83, %r82, 25;
	mov.b64 	%rd177, {%r89, %r88};
	xor.b64  	%rd178, %rd176, %rd177;
	and.b64  	%rd179, %rd162, %rd140;
	xor.b64  	%rd180, %rd162, %rd140;
	and.b64  	%rd181, %rd180, %rd119;
	or.b64  	%rd182, %rd181, %rd179;
	add.s64 	%rd183, %rd172, %rd182;
	add.s64 	%rd184, %rd183, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r90,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r91}, %rd173;
	}
	shf.r.wrap.b32 	%r92, %r91, %r90, 14;
	shf.r.wrap.b32 	%r93, %r90, %r91, 14;
	mov.b64 	%rd185, {%r93, %r92};
	shf.r.wrap.b32 	%r94, %r91, %r90, 18;
	shf.r.wrap.b32 	%r95, %r90, %r91, 18;
	mov.b64 	%rd186, {%r95, %r94};
	xor.b64  	%rd187, %rd186, %rd185;
	shf.l.wrap.b32 	%r96, %r90, %r91, 23;
	shf.l.wrap.b32 	%r97, %r91, %r90, 23;
	mov.b64 	%rd188, {%r97, %r96};
	xor.b64  	%rd189, %rd187, %rd188;
	xor.b64  	%rd190, %rd151, %rd129;
	and.b64  	%rd191, %rd173, %rd190;
	xor.b64  	%rd192, %rd191, %rd129;
	add.s64 	%rd193, %rd118, %rd7;
	add.s64 	%rd194, %rd193, %rd1052;
	add.s64 	%rd195, %rd194, %rd192;
	add.s64 	%rd196, %rd195, %rd189;
	add.s64 	%rd197, %rd196, %rd119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r98,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r99}, %rd184;
	}
	shf.r.wrap.b32 	%r100, %r99, %r98, 28;
	shf.r.wrap.b32 	%r101, %r98, %r99, 28;
	mov.b64 	%rd198, {%r101, %r100};
	shf.l.wrap.b32 	%r102, %r98, %r99, 30;
	shf.l.wrap.b32 	%r103, %r99, %r98, 30;
	mov.b64 	%rd199, {%r103, %r102};
	xor.b64  	%rd200, %rd199, %rd198;
	shf.l.wrap.b32 	%r104, %r98, %r99, 25;
	shf.l.wrap.b32 	%r105, %r99, %r98, 25;
	mov.b64 	%rd201, {%r105, %r104};
	xor.b64  	%rd202, %rd200, %rd201;
	and.b64  	%rd203, %rd184, %rd162;
	xor.b64  	%rd204, %rd184, %rd162;
	and.b64  	%rd205, %rd204, %rd140;
	or.b64  	%rd206, %rd205, %rd203;
	add.s64 	%rd207, %rd196, %rd206;
	add.s64 	%rd208, %rd207, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r107}, %rd197;
	}
	shf.r.wrap.b32 	%r108, %r107, %r106, 14;
	shf.r.wrap.b32 	%r109, %r106, %r107, 14;
	mov.b64 	%rd209, {%r109, %r108};
	shf.r.wrap.b32 	%r110, %r107, %r106, 18;
	shf.r.wrap.b32 	%r111, %r106, %r107, 18;
	mov.b64 	%rd210, {%r111, %r110};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r112, %r106, %r107, 23;
	shf.l.wrap.b32 	%r113, %r107, %r106, 23;
	mov.b64 	%rd212, {%r113, %r112};
	xor.b64  	%rd213, %rd211, %rd212;
	xor.b64  	%rd214, %rd173, %rd151;
	and.b64  	%rd215, %rd197, %rd214;
	xor.b64  	%rd216, %rd215, %rd151;
	add.s64 	%rd217, %rd129, %rd8;
	add.s64 	%rd218, %rd217, %rd1053;
	add.s64 	%rd219, %rd218, %rd216;
	add.s64 	%rd220, %rd219, %rd213;
	add.s64 	%rd221, %rd220, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r114,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r115}, %rd208;
	}
	shf.r.wrap.b32 	%r116, %r115, %r114, 28;
	shf.r.wrap.b32 	%r117, %r114, %r115, 28;
	mov.b64 	%rd222, {%r117, %r116};
	shf.l.wrap.b32 	%r118, %r114, %r115, 30;
	shf.l.wrap.b32 	%r119, %r115, %r114, 30;
	mov.b64 	%rd223, {%r119, %r118};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r120, %r114, %r115, 25;
	shf.l.wrap.b32 	%r121, %r115, %r114, 25;
	mov.b64 	%rd225, {%r121, %r120};
	xor.b64  	%rd226, %rd224, %rd225;
	and.b64  	%rd227, %rd208, %rd184;
	xor.b64  	%rd228, %rd208, %rd184;
	and.b64  	%rd229, %rd228, %rd162;
	or.b64  	%rd230, %rd229, %rd227;
	add.s64 	%rd231, %rd220, %rd230;
	add.s64 	%rd232, %rd231, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r123}, %rd221;
	}
	shf.r.wrap.b32 	%r124, %r123, %r122, 14;
	shf.r.wrap.b32 	%r125, %r122, %r123, 14;
	mov.b64 	%rd233, {%r125, %r124};
	shf.r.wrap.b32 	%r126, %r123, %r122, 18;
	shf.r.wrap.b32 	%r127, %r122, %r123, 18;
	mov.b64 	%rd234, {%r127, %r126};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r128, %r122, %r123, 23;
	shf.l.wrap.b32 	%r129, %r123, %r122, 23;
	mov.b64 	%rd236, {%r129, %r128};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd197, %rd173;
	and.b64  	%rd239, %rd221, %rd238;
	xor.b64  	%rd240, %rd239, %rd173;
	add.s64 	%rd241, %rd151, %rd9;
	add.s64 	%rd242, %rd241, %rd1054;
	add.s64 	%rd243, %rd242, %rd240;
	add.s64 	%rd244, %rd243, %rd237;
	add.s64 	%rd245, %rd244, %rd162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r130,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r131}, %rd232;
	}
	shf.r.wrap.b32 	%r132, %r131, %r130, 28;
	shf.r.wrap.b32 	%r133, %r130, %r131, 28;
	mov.b64 	%rd246, {%r133, %r132};
	shf.l.wrap.b32 	%r134, %r130, %r131, 30;
	shf.l.wrap.b32 	%r135, %r131, %r130, 30;
	mov.b64 	%rd247, {%r135, %r134};
	xor.b64  	%rd248, %rd247, %rd246;
	shf.l.wrap.b32 	%r136, %r130, %r131, 25;
	shf.l.wrap.b32 	%r137, %r131, %r130, 25;
	mov.b64 	%rd249, {%r137, %r136};
	xor.b64  	%rd250, %rd248, %rd249;
	and.b64  	%rd251, %rd232, %rd208;
	xor.b64  	%rd252, %rd232, %rd208;
	and.b64  	%rd253, %rd252, %rd184;
	or.b64  	%rd254, %rd253, %rd251;
	add.s64 	%rd255, %rd244, %rd254;
	add.s64 	%rd256, %rd255, %rd250;
	add.s64 	%rd257, %rd1055, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd245;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 14;
	shf.r.wrap.b32 	%r141, %r138, %r139, 14;
	mov.b64 	%rd258, {%r141, %r140};
	shf.r.wrap.b32 	%r142, %r139, %r138, 18;
	shf.r.wrap.b32 	%r143, %r138, %r139, 18;
	mov.b64 	%rd259, {%r143, %r142};
	xor.b64  	%rd260, %rd259, %rd258;
	shf.l.wrap.b32 	%r144, %r138, %r139, 23;
	shf.l.wrap.b32 	%r145, %r139, %r138, 23;
	mov.b64 	%rd261, {%r145, %r144};
	xor.b64  	%rd262, %rd260, %rd261;
	xor.b64  	%rd263, %rd221, %rd197;
	and.b64  	%rd264, %rd245, %rd263;
	xor.b64  	%rd265, %rd264, %rd197;
	add.s64 	%rd266, %rd257, %rd265;
	add.s64 	%rd267, %rd266, %rd262;
	add.s64 	%rd268, %rd267, %rd184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r147}, %rd256;
	}
	shf.r.wrap.b32 	%r148, %r147, %r146, 28;
	shf.r.wrap.b32 	%r149, %r146, %r147, 28;
	mov.b64 	%rd269, {%r149, %r148};
	shf.l.wrap.b32 	%r150, %r146, %r147, 30;
	shf.l.wrap.b32 	%r151, %r147, %r146, 30;
	mov.b64 	%rd270, {%r151, %r150};
	xor.b64  	%rd271, %rd270, %rd269;
	shf.l.wrap.b32 	%r152, %r146, %r147, 25;
	shf.l.wrap.b32 	%r153, %r147, %r146, 25;
	mov.b64 	%rd272, {%r153, %r152};
	xor.b64  	%rd273, %rd271, %rd272;
	and.b64  	%rd274, %rd256, %rd232;
	xor.b64  	%rd275, %rd256, %rd232;
	and.b64  	%rd276, %rd275, %rd208;
	or.b64  	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd267, %rd277;
	add.s64 	%rd279, %rd278, %rd273;
	add.s64 	%rd280, %rd1056, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r155}, %rd268;
	}
	shf.r.wrap.b32 	%r156, %r155, %r154, 14;
	shf.r.wrap.b32 	%r157, %r154, %r155, 14;
	mov.b64 	%rd281, {%r157, %r156};
	shf.r.wrap.b32 	%r158, %r155, %r154, 18;
	shf.r.wrap.b32 	%r159, %r154, %r155, 18;
	mov.b64 	%rd282, {%r159, %r158};
	xor.b64  	%rd283, %rd282, %rd281;
	shf.l.wrap.b32 	%r160, %r154, %r155, 23;
	shf.l.wrap.b32 	%r161, %r155, %r154, 23;
	mov.b64 	%rd284, {%r161, %r160};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd245, %rd221;
	and.b64  	%rd287, %rd268, %rd286;
	xor.b64  	%rd288, %rd287, %rd221;
	add.s64 	%rd289, %rd280, %rd288;
	add.s64 	%rd290, %rd289, %rd285;
	add.s64 	%rd291, %rd290, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd279;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd292, {%r165, %r164};
	shf.l.wrap.b32 	%r166, %r162, %r163, 30;
	shf.l.wrap.b32 	%r167, %r163, %r162, 30;
	mov.b64 	%rd293, {%r167, %r166};
	xor.b64  	%rd294, %rd293, %rd292;
	shf.l.wrap.b32 	%r168, %r162, %r163, 25;
	shf.l.wrap.b32 	%r169, %r163, %r162, 25;
	mov.b64 	%rd295, {%r169, %r168};
	xor.b64  	%rd296, %rd294, %rd295;
	and.b64  	%rd297, %rd279, %rd256;
	xor.b64  	%rd298, %rd279, %rd256;
	and.b64  	%rd299, %rd298, %rd232;
	or.b64  	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd290, %rd300;
	add.s64 	%rd302, %rd301, %rd296;
	add.s64 	%rd303, %rd1057, %rd221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd291;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 14;
	shf.r.wrap.b32 	%r173, %r170, %r171, 14;
	mov.b64 	%rd304, {%r173, %r172};
	shf.r.wrap.b32 	%r174, %r171, %r170, 18;
	shf.r.wrap.b32 	%r175, %r170, %r171, 18;
	mov.b64 	%rd305, {%r175, %r174};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r176, %r170, %r171, 23;
	shf.l.wrap.b32 	%r177, %r171, %r170, 23;
	mov.b64 	%rd307, {%r177, %r176};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd268, %rd245;
	and.b64  	%rd310, %rd291, %rd309;
	xor.b64  	%rd311, %rd310, %rd245;
	add.s64 	%rd312, %rd303, %rd311;
	add.s64 	%rd313, %rd312, %rd308;
	add.s64 	%rd314, %rd313, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd302;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 28;
	shf.r.wrap.b32 	%r181, %r178, %r179, 28;
	mov.b64 	%rd315, {%r181, %r180};
	shf.l.wrap.b32 	%r182, %r178, %r179, 30;
	shf.l.wrap.b32 	%r183, %r179, %r178, 30;
	mov.b64 	%rd316, {%r183, %r182};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r184, %r178, %r179, 25;
	shf.l.wrap.b32 	%r185, %r179, %r178, 25;
	mov.b64 	%rd318, {%r185, %r184};
	xor.b64  	%rd319, %rd317, %rd318;
	and.b64  	%rd320, %rd302, %rd279;
	xor.b64  	%rd321, %rd302, %rd279;
	and.b64  	%rd322, %rd321, %rd256;
	or.b64  	%rd323, %rd322, %rd320;
	add.s64 	%rd324, %rd313, %rd323;
	add.s64 	%rd325, %rd324, %rd319;
	add.s64 	%rd326, %rd1058, %rd245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd314;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 14;
	shf.r.wrap.b32 	%r189, %r186, %r187, 14;
	mov.b64 	%rd327, {%r189, %r188};
	shf.r.wrap.b32 	%r190, %r187, %r186, 18;
	shf.r.wrap.b32 	%r191, %r186, %r187, 18;
	mov.b64 	%rd328, {%r191, %r190};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r192, %r186, %r187, 23;
	shf.l.wrap.b32 	%r193, %r187, %r186, 23;
	mov.b64 	%rd330, {%r193, %r192};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd291, %rd268;
	and.b64  	%rd333, %rd314, %rd332;
	xor.b64  	%rd334, %rd333, %rd268;
	add.s64 	%rd335, %rd326, %rd334;
	add.s64 	%rd336, %rd335, %rd331;
	add.s64 	%rd337, %rd336, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd325;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 28;
	shf.r.wrap.b32 	%r197, %r194, %r195, 28;
	mov.b64 	%rd338, {%r197, %r196};
	shf.l.wrap.b32 	%r198, %r194, %r195, 30;
	shf.l.wrap.b32 	%r199, %r195, %r194, 30;
	mov.b64 	%rd339, {%r199, %r198};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r200, %r194, %r195, 25;
	shf.l.wrap.b32 	%r201, %r195, %r194, 25;
	mov.b64 	%rd341, {%r201, %r200};
	xor.b64  	%rd342, %rd340, %rd341;
	and.b64  	%rd343, %rd325, %rd302;
	xor.b64  	%rd344, %rd325, %rd302;
	and.b64  	%rd345, %rd344, %rd279;
	or.b64  	%rd346, %rd345, %rd343;
	add.s64 	%rd347, %rd336, %rd346;
	add.s64 	%rd348, %rd347, %rd342;
	add.s64 	%rd349, %rd1059, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r203}, %rd337;
	}
	shf.r.wrap.b32 	%r204, %r203, %r202, 14;
	shf.r.wrap.b32 	%r205, %r202, %r203, 14;
	mov.b64 	%rd350, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r203, %r202, 18;
	shf.r.wrap.b32 	%r207, %r202, %r203, 18;
	mov.b64 	%rd351, {%r207, %r206};
	xor.b64  	%rd352, %rd351, %rd350;
	shf.l.wrap.b32 	%r208, %r202, %r203, 23;
	shf.l.wrap.b32 	%r209, %r203, %r202, 23;
	mov.b64 	%rd353, {%r209, %r208};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd314, %rd291;
	and.b64  	%rd356, %rd337, %rd355;
	xor.b64  	%rd357, %rd356, %rd291;
	add.s64 	%rd358, %rd349, %rd357;
	add.s64 	%rd359, %rd358, %rd354;
	add.s64 	%rd360, %rd359, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r211}, %rd348;
	}
	shf.r.wrap.b32 	%r212, %r211, %r210, 28;
	shf.r.wrap.b32 	%r213, %r210, %r211, 28;
	mov.b64 	%rd361, {%r213, %r212};
	shf.l.wrap.b32 	%r214, %r210, %r211, 30;
	shf.l.wrap.b32 	%r215, %r211, %r210, 30;
	mov.b64 	%rd362, {%r215, %r214};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r216, %r210, %r211, 25;
	shf.l.wrap.b32 	%r217, %r211, %r210, 25;
	mov.b64 	%rd364, {%r217, %r216};
	xor.b64  	%rd365, %rd363, %rd364;
	and.b64  	%rd366, %rd348, %rd325;
	xor.b64  	%rd367, %rd348, %rd325;
	and.b64  	%rd368, %rd367, %rd302;
	or.b64  	%rd369, %rd368, %rd366;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	add.s64 	%rd372, %rd1060, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd360;
	}
	shf.r.wrap.b32 	%r220, %r219, %r218, 14;
	shf.r.wrap.b32 	%r221, %r218, %r219, 14;
	mov.b64 	%rd373, {%r221, %r220};
	shf.r.wrap.b32 	%r222, %r219, %r218, 18;
	shf.r.wrap.b32 	%r223, %r218, %r219, 18;
	mov.b64 	%rd374, {%r223, %r222};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r224, %r218, %r219, 23;
	shf.l.wrap.b32 	%r225, %r219, %r218, 23;
	mov.b64 	%rd376, {%r225, %r224};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd337, %rd314;
	and.b64  	%rd379, %rd360, %rd378;
	xor.b64  	%rd380, %rd379, %rd314;
	add.s64 	%rd381, %rd372, %rd380;
	add.s64 	%rd382, %rd381, %rd377;
	add.s64 	%rd1067, %rd382, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd371;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 28;
	shf.r.wrap.b32 	%r229, %r226, %r227, 28;
	mov.b64 	%rd383, {%r229, %r228};
	shf.l.wrap.b32 	%r230, %r226, %r227, 30;
	shf.l.wrap.b32 	%r231, %r227, %r226, 30;
	mov.b64 	%rd384, {%r231, %r230};
	xor.b64  	%rd385, %rd384, %rd383;
	shf.l.wrap.b32 	%r232, %r226, %r227, 25;
	shf.l.wrap.b32 	%r233, %r227, %r226, 25;
	mov.b64 	%rd386, {%r233, %r232};
	xor.b64  	%rd387, %rd385, %rd386;
	and.b64  	%rd388, %rd371, %rd348;
	xor.b64  	%rd389, %rd371, %rd348;
	and.b64  	%rd390, %rd389, %rd325;
	or.b64  	%rd391, %rd390, %rd388;
	add.s64 	%rd392, %rd382, %rd391;
	add.s64 	%rd1090, %rd392, %rd387;
	add.s64 	%rd393, %rd1061, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd1067;
	}
	shf.r.wrap.b32 	%r236, %r235, %r234, 14;
	shf.r.wrap.b32 	%r237, %r234, %r235, 14;
	mov.b64 	%rd394, {%r237, %r236};
	shf.r.wrap.b32 	%r238, %r235, %r234, 18;
	shf.r.wrap.b32 	%r239, %r234, %r235, 18;
	mov.b64 	%rd395, {%r239, %r238};
	xor.b64  	%rd396, %rd395, %rd394;
	shf.l.wrap.b32 	%r240, %r234, %r235, 23;
	shf.l.wrap.b32 	%r241, %r235, %r234, 23;
	mov.b64 	%rd397, {%r241, %r240};
	xor.b64  	%rd398, %rd396, %rd397;
	xor.b64  	%rd399, %rd360, %rd337;
	and.b64  	%rd400, %rd1067, %rd399;
	xor.b64  	%rd401, %rd400, %rd337;
	add.s64 	%rd402, %rd393, %rd401;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd1068, %rd403, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd1090;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 28;
	shf.r.wrap.b32 	%r245, %r242, %r243, 28;
	mov.b64 	%rd404, {%r245, %r244};
	shf.l.wrap.b32 	%r246, %r242, %r243, 30;
	shf.l.wrap.b32 	%r247, %r243, %r242, 30;
	mov.b64 	%rd405, {%r247, %r246};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r248, %r242, %r243, 25;
	shf.l.wrap.b32 	%r249, %r243, %r242, 25;
	mov.b64 	%rd407, {%r249, %r248};
	xor.b64  	%rd408, %rd406, %rd407;
	and.b64  	%rd409, %rd1090, %rd371;
	xor.b64  	%rd410, %rd1090, %rd371;
	and.b64  	%rd411, %rd410, %rd348;
	or.b64  	%rd412, %rd411, %rd409;
	add.s64 	%rd413, %rd403, %rd412;
	add.s64 	%rd1089, %rd413, %rd408;
	add.s64 	%rd414, %rd1062, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd1068;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 14;
	shf.r.wrap.b32 	%r253, %r250, %r251, 14;
	mov.b64 	%rd415, {%r253, %r252};
	shf.r.wrap.b32 	%r254, %r251, %r250, 18;
	shf.r.wrap.b32 	%r255, %r250, %r251, 18;
	mov.b64 	%rd416, {%r255, %r254};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r256, %r250, %r251, 23;
	shf.l.wrap.b32 	%r257, %r251, %r250, 23;
	mov.b64 	%rd418, {%r257, %r256};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd1067, %rd360;
	and.b64  	%rd421, %rd1068, %rd420;
	xor.b64  	%rd422, %rd421, %rd360;
	add.s64 	%rd423, %rd414, %rd422;
	add.s64 	%rd424, %rd423, %rd419;
	add.s64 	%rd1069, %rd424, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r259}, %rd1089;
	}
	shf.r.wrap.b32 	%r260, %r259, %r258, 28;
	shf.r.wrap.b32 	%r261, %r258, %r259, 28;
	mov.b64 	%rd425, {%r261, %r260};
	shf.l.wrap.b32 	%r262, %r258, %r259, 30;
	shf.l.wrap.b32 	%r263, %r259, %r258, 30;
	mov.b64 	%rd426, {%r263, %r262};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r264, %r258, %r259, 25;
	shf.l.wrap.b32 	%r265, %r259, %r258, 25;
	mov.b64 	%rd428, {%r265, %r264};
	xor.b64  	%rd429, %rd427, %rd428;
	and.b64  	%rd430, %rd1089, %rd1090;
	xor.b64  	%rd431, %rd1089, %rd1090;
	and.b64  	%rd432, %rd431, %rd371;
	or.b64  	%rd433, %rd432, %rd430;
	add.s64 	%rd434, %rd424, %rd433;
	add.s64 	%rd1088, %rd434, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd1069;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 14;
	shf.r.wrap.b32 	%r269, %r266, %r267, 14;
	mov.b64 	%rd435, {%r269, %r268};
	shf.r.wrap.b32 	%r270, %r267, %r266, 18;
	shf.r.wrap.b32 	%r271, %r266, %r267, 18;
	mov.b64 	%rd436, {%r271, %r270};
	xor.b64  	%rd437, %rd436, %rd435;
	shf.l.wrap.b32 	%r272, %r266, %r267, 23;
	shf.l.wrap.b32 	%r273, %r267, %r266, 23;
	mov.b64 	%rd438, {%r273, %r272};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd1068, %rd1067;
	and.b64  	%rd441, %rd1069, %rd440;
	xor.b64  	%rd442, %rd441, %rd1067;
	add.s64 	%rd443, %rd360, %rd10;
	add.s64 	%rd444, %rd443, %rd1063;
	add.s64 	%rd445, %rd444, %rd442;
	add.s64 	%rd446, %rd445, %rd439;
	add.s64 	%rd1070, %rd446, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd1088;
	}
	shf.r.wrap.b32 	%r276, %r275, %r274, 28;
	shf.r.wrap.b32 	%r277, %r274, %r275, 28;
	mov.b64 	%rd447, {%r277, %r276};
	shf.l.wrap.b32 	%r278, %r274, %r275, 30;
	shf.l.wrap.b32 	%r279, %r275, %r274, 30;
	mov.b64 	%rd448, {%r279, %r278};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r280, %r274, %r275, 25;
	shf.l.wrap.b32 	%r281, %r275, %r274, 25;
	mov.b64 	%rd450, {%r281, %r280};
	xor.b64  	%rd451, %rd449, %rd450;
	and.b64  	%rd452, %rd1088, %rd1089;
	xor.b64  	%rd453, %rd1088, %rd1089;
	and.b64  	%rd454, %rd453, %rd1090;
	or.b64  	%rd455, %rd454, %rd452;
	add.s64 	%rd456, %rd446, %rd455;
	add.s64 	%rd1087, %rd456, %rd451;
	mov.u64 	%rd1078, 0;
	mov.u32 	%r739, 16;
	mov.u64 	%rd1066, k_sha512;
	mov.u64 	%rd1072, %rd4;
	mov.u64 	%rd1073, %rd5;
	mov.u64 	%rd1074, %rd6;
	mov.u64 	%rd1075, %rd7;
	mov.u64 	%rd1076, %rd8;
	mov.u64 	%rd1077, %rd9;
	mov.u64 	%rd1079, %rd1078;
	mov.u64 	%rd1080, %rd1078;
	mov.u64 	%rd1081, %rd1078;
	mov.u64 	%rd1082, %rd1078;
	mov.u64 	%rd1083, %rd1078;
	mov.u64 	%rd1084, %rd1078;
	mov.u64 	%rd1085, %rd1078;
	mov.u64 	%rd1086, %rd10;

BB5_4:
	shr.u64 	%rd457, %rd1085, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r283}, %rd1085;
	}
	shf.r.wrap.b32 	%r284, %r283, %r282, 19;
	shf.r.wrap.b32 	%r285, %r282, %r283, 19;
	mov.b64 	%rd458, {%r285, %r284};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r286, %r282, %r283, 3;
	shf.l.wrap.b32 	%r287, %r283, %r282, 3;
	mov.b64 	%rd460, {%r287, %r286};
	xor.b64  	%rd461, %rd459, %rd460;
	shr.u64 	%rd462, %rd1072, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd1072;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 1;
	shf.r.wrap.b32 	%r291, %r288, %r289, 1;
	mov.b64 	%rd463, {%r291, %r290};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.r.wrap.b32 	%r292, %r289, %r288, 8;
	shf.r.wrap.b32 	%r293, %r288, %r289, 8;
	mov.b64 	%rd465, {%r293, %r292};
	xor.b64  	%rd466, %rd464, %rd465;
	add.s64 	%rd467, %rd1071, %rd1080;
	add.s64 	%rd468, %rd467, %rd461;
	add.s64 	%rd1071, %rd468, %rd466;
	shr.u64 	%rd469, %rd1086, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd1086;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 19;
	shf.r.wrap.b32 	%r297, %r294, %r295, 19;
	mov.b64 	%rd470, {%r297, %r296};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r298, %r294, %r295, 3;
	shf.l.wrap.b32 	%r299, %r295, %r294, 3;
	mov.b64 	%rd472, {%r299, %r298};
	xor.b64  	%rd473, %rd471, %rd472;
	shr.u64 	%rd474, %rd1073, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd1073;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 1;
	shf.r.wrap.b32 	%r303, %r300, %r301, 1;
	mov.b64 	%rd475, {%r303, %r302};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.r.wrap.b32 	%r304, %r301, %r300, 8;
	shf.r.wrap.b32 	%r305, %r300, %r301, 8;
	mov.b64 	%rd477, {%r305, %r304};
	xor.b64  	%rd478, %rd476, %rd477;
	add.s64 	%rd479, %rd1072, %rd1081;
	add.s64 	%rd480, %rd479, %rd473;
	add.s64 	%rd1072, %rd480, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd1071;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 19;
	shf.r.wrap.b32 	%r309, %r306, %r307, 19;
	mov.b64 	%rd481, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 3;
	shf.l.wrap.b32 	%r311, %r307, %r306, 3;
	mov.b64 	%rd482, {%r311, %r310};
	shr.u64 	%rd483, %rd1071, 6;
	xor.b64  	%rd484, %rd481, %rd483;
	xor.b64  	%rd485, %rd484, %rd482;
	shr.u64 	%rd486, %rd1074, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd1074;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 1;
	shf.r.wrap.b32 	%r315, %r312, %r313, 1;
	mov.b64 	%rd487, {%r315, %r314};
	xor.b64  	%rd488, %rd487, %rd486;
	shf.r.wrap.b32 	%r316, %r313, %r312, 8;
	shf.r.wrap.b32 	%r317, %r312, %r313, 8;
	mov.b64 	%rd489, {%r317, %r316};
	xor.b64  	%rd490, %rd488, %rd489;
	add.s64 	%rd491, %rd1073, %rd1082;
	add.s64 	%rd492, %rd491, %rd485;
	add.s64 	%rd1073, %rd492, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd1072;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 19;
	shf.r.wrap.b32 	%r321, %r318, %r319, 19;
	mov.b64 	%rd493, {%r321, %r320};
	shf.l.wrap.b32 	%r322, %r318, %r319, 3;
	shf.l.wrap.b32 	%r323, %r319, %r318, 3;
	mov.b64 	%rd494, {%r323, %r322};
	shr.u64 	%rd495, %rd1072, 6;
	xor.b64  	%rd496, %rd493, %rd495;
	xor.b64  	%rd497, %rd496, %rd494;
	shr.u64 	%rd498, %rd1075, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd1075;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 1;
	shf.r.wrap.b32 	%r327, %r324, %r325, 1;
	mov.b64 	%rd499, {%r327, %r326};
	xor.b64  	%rd500, %rd499, %rd498;
	shf.r.wrap.b32 	%r328, %r325, %r324, 8;
	shf.r.wrap.b32 	%r329, %r324, %r325, 8;
	mov.b64 	%rd501, {%r329, %r328};
	xor.b64  	%rd502, %rd500, %rd501;
	add.s64 	%rd503, %rd1074, %rd1083;
	add.s64 	%rd504, %rd503, %rd497;
	add.s64 	%rd1074, %rd504, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd1073;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 19;
	shf.r.wrap.b32 	%r333, %r330, %r331, 19;
	mov.b64 	%rd505, {%r333, %r332};
	shf.l.wrap.b32 	%r334, %r330, %r331, 3;
	shf.l.wrap.b32 	%r335, %r331, %r330, 3;
	mov.b64 	%rd506, {%r335, %r334};
	shr.u64 	%rd507, %rd1073, 6;
	xor.b64  	%rd508, %rd505, %rd507;
	xor.b64  	%rd509, %rd508, %rd506;
	shr.u64 	%rd510, %rd1076, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd1076;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 1;
	shf.r.wrap.b32 	%r339, %r336, %r337, 1;
	mov.b64 	%rd511, {%r339, %r338};
	xor.b64  	%rd512, %rd511, %rd510;
	shf.r.wrap.b32 	%r340, %r337, %r336, 8;
	shf.r.wrap.b32 	%r341, %r336, %r337, 8;
	mov.b64 	%rd513, {%r341, %r340};
	xor.b64  	%rd514, %rd512, %rd513;
	add.s64 	%rd515, %rd1075, %rd1084;
	add.s64 	%rd516, %rd515, %rd509;
	add.s64 	%rd1075, %rd516, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd1074;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 19;
	shf.r.wrap.b32 	%r345, %r342, %r343, 19;
	mov.b64 	%rd517, {%r345, %r344};
	shf.l.wrap.b32 	%r346, %r342, %r343, 3;
	shf.l.wrap.b32 	%r347, %r343, %r342, 3;
	mov.b64 	%rd518, {%r347, %r346};
	shr.u64 	%rd519, %rd1074, 6;
	xor.b64  	%rd520, %rd517, %rd519;
	xor.b64  	%rd521, %rd520, %rd518;
	shr.u64 	%rd522, %rd1077, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd1077;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 1;
	shf.r.wrap.b32 	%r351, %r348, %r349, 1;
	mov.b64 	%rd523, {%r351, %r350};
	xor.b64  	%rd524, %rd523, %rd522;
	shf.r.wrap.b32 	%r352, %r349, %r348, 8;
	shf.r.wrap.b32 	%r353, %r348, %r349, 8;
	mov.b64 	%rd525, {%r353, %r352};
	xor.b64  	%rd526, %rd524, %rd525;
	add.s64 	%rd527, %rd1076, %rd1085;
	add.s64 	%rd528, %rd527, %rd521;
	add.s64 	%rd1076, %rd528, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd1075;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 19;
	shf.r.wrap.b32 	%r357, %r354, %r355, 19;
	mov.b64 	%rd529, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 3;
	shf.l.wrap.b32 	%r359, %r355, %r354, 3;
	mov.b64 	%rd530, {%r359, %r358};
	shr.u64 	%rd531, %rd1075, 6;
	xor.b64  	%rd532, %rd529, %rd531;
	xor.b64  	%rd533, %rd532, %rd530;
	shr.u64 	%rd534, %rd1078, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd1078;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 1;
	shf.r.wrap.b32 	%r363, %r360, %r361, 1;
	mov.b64 	%rd535, {%r363, %r362};
	xor.b64  	%rd536, %rd535, %rd534;
	shf.r.wrap.b32 	%r364, %r361, %r360, 8;
	shf.r.wrap.b32 	%r365, %r360, %r361, 8;
	mov.b64 	%rd537, {%r365, %r364};
	xor.b64  	%rd538, %rd536, %rd537;
	add.s64 	%rd539, %rd1077, %rd1086;
	add.s64 	%rd540, %rd539, %rd533;
	add.s64 	%rd1077, %rd540, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd1076;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 19;
	shf.r.wrap.b32 	%r369, %r366, %r367, 19;
	mov.b64 	%rd541, {%r369, %r368};
	shf.l.wrap.b32 	%r370, %r366, %r367, 3;
	shf.l.wrap.b32 	%r371, %r367, %r366, 3;
	mov.b64 	%rd542, {%r371, %r370};
	shr.u64 	%rd543, %rd1076, 6;
	xor.b64  	%rd544, %rd541, %rd543;
	xor.b64  	%rd545, %rd544, %rd542;
	shr.u64 	%rd546, %rd1079, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd1079;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 1;
	shf.r.wrap.b32 	%r375, %r372, %r373, 1;
	mov.b64 	%rd547, {%r375, %r374};
	xor.b64  	%rd548, %rd547, %rd546;
	shf.r.wrap.b32 	%r376, %r373, %r372, 8;
	shf.r.wrap.b32 	%r377, %r372, %r373, 8;
	mov.b64 	%rd549, {%r377, %r376};
	xor.b64  	%rd550, %rd548, %rd549;
	add.s64 	%rd551, %rd1071, %rd1078;
	add.s64 	%rd552, %rd551, %rd545;
	add.s64 	%rd1078, %rd552, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd1077;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 19;
	shf.r.wrap.b32 	%r381, %r378, %r379, 19;
	mov.b64 	%rd553, {%r381, %r380};
	shf.l.wrap.b32 	%r382, %r378, %r379, 3;
	shf.l.wrap.b32 	%r383, %r379, %r378, 3;
	mov.b64 	%rd554, {%r383, %r382};
	shr.u64 	%rd555, %rd1077, 6;
	xor.b64  	%rd556, %rd553, %rd555;
	xor.b64  	%rd557, %rd556, %rd554;
	shr.u64 	%rd558, %rd1080, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd1080;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 1;
	shf.r.wrap.b32 	%r387, %r384, %r385, 1;
	mov.b64 	%rd559, {%r387, %r386};
	xor.b64  	%rd560, %rd559, %rd558;
	shf.r.wrap.b32 	%r388, %r385, %r384, 8;
	shf.r.wrap.b32 	%r389, %r384, %r385, 8;
	mov.b64 	%rd561, {%r389, %r388};
	xor.b64  	%rd562, %rd560, %rd561;
	add.s64 	%rd563, %rd1072, %rd1079;
	add.s64 	%rd564, %rd563, %rd557;
	add.s64 	%rd1079, %rd564, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd1078;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 19;
	shf.r.wrap.b32 	%r393, %r390, %r391, 19;
	mov.b64 	%rd565, {%r393, %r392};
	shf.l.wrap.b32 	%r394, %r390, %r391, 3;
	shf.l.wrap.b32 	%r395, %r391, %r390, 3;
	mov.b64 	%rd566, {%r395, %r394};
	shr.u64 	%rd567, %rd1078, 6;
	xor.b64  	%rd568, %rd565, %rd567;
	xor.b64  	%rd569, %rd568, %rd566;
	shr.u64 	%rd570, %rd1081, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd1081;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 1;
	shf.r.wrap.b32 	%r399, %r396, %r397, 1;
	mov.b64 	%rd571, {%r399, %r398};
	xor.b64  	%rd572, %rd571, %rd570;
	shf.r.wrap.b32 	%r400, %r397, %r396, 8;
	shf.r.wrap.b32 	%r401, %r396, %r397, 8;
	mov.b64 	%rd573, {%r401, %r400};
	xor.b64  	%rd574, %rd572, %rd573;
	add.s64 	%rd575, %rd1073, %rd1080;
	add.s64 	%rd576, %rd575, %rd569;
	add.s64 	%rd1080, %rd576, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd1079;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 19;
	shf.r.wrap.b32 	%r405, %r402, %r403, 19;
	mov.b64 	%rd577, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 3;
	shf.l.wrap.b32 	%r407, %r403, %r402, 3;
	mov.b64 	%rd578, {%r407, %r406};
	shr.u64 	%rd579, %rd1079, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	shr.u64 	%rd582, %rd1082, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd1082;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 1;
	shf.r.wrap.b32 	%r411, %r408, %r409, 1;
	mov.b64 	%rd583, {%r411, %r410};
	xor.b64  	%rd584, %rd583, %rd582;
	shf.r.wrap.b32 	%r412, %r409, %r408, 8;
	shf.r.wrap.b32 	%r413, %r408, %r409, 8;
	mov.b64 	%rd585, {%r413, %r412};
	xor.b64  	%rd586, %rd584, %rd585;
	add.s64 	%rd587, %rd1074, %rd1081;
	add.s64 	%rd588, %rd587, %rd581;
	add.s64 	%rd1081, %rd588, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd1080;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 19;
	shf.r.wrap.b32 	%r417, %r414, %r415, 19;
	mov.b64 	%rd589, {%r417, %r416};
	shf.l.wrap.b32 	%r418, %r414, %r415, 3;
	shf.l.wrap.b32 	%r419, %r415, %r414, 3;
	mov.b64 	%rd590, {%r419, %r418};
	shr.u64 	%rd591, %rd1080, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	shr.u64 	%rd594, %rd1083, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd1083;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 1;
	shf.r.wrap.b32 	%r423, %r420, %r421, 1;
	mov.b64 	%rd595, {%r423, %r422};
	xor.b64  	%rd596, %rd595, %rd594;
	shf.r.wrap.b32 	%r424, %r421, %r420, 8;
	shf.r.wrap.b32 	%r425, %r420, %r421, 8;
	mov.b64 	%rd597, {%r425, %r424};
	xor.b64  	%rd598, %rd596, %rd597;
	add.s64 	%rd599, %rd1075, %rd1082;
	add.s64 	%rd600, %rd599, %rd593;
	add.s64 	%rd1082, %rd600, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd1081;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 19;
	shf.r.wrap.b32 	%r429, %r426, %r427, 19;
	mov.b64 	%rd601, {%r429, %r428};
	shf.l.wrap.b32 	%r430, %r426, %r427, 3;
	shf.l.wrap.b32 	%r431, %r427, %r426, 3;
	mov.b64 	%rd602, {%r431, %r430};
	shr.u64 	%rd603, %rd1081, 6;
	xor.b64  	%rd604, %rd601, %rd603;
	xor.b64  	%rd605, %rd604, %rd602;
	shr.u64 	%rd606, %rd1084, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd1084;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 1;
	shf.r.wrap.b32 	%r435, %r432, %r433, 1;
	mov.b64 	%rd607, {%r435, %r434};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.r.wrap.b32 	%r436, %r433, %r432, 8;
	shf.r.wrap.b32 	%r437, %r432, %r433, 8;
	mov.b64 	%rd609, {%r437, %r436};
	xor.b64  	%rd610, %rd608, %rd609;
	add.s64 	%rd611, %rd1076, %rd1083;
	add.s64 	%rd612, %rd611, %rd605;
	add.s64 	%rd1083, %rd612, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd1082;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 19;
	shf.r.wrap.b32 	%r441, %r438, %r439, 19;
	mov.b64 	%rd613, {%r441, %r440};
	shf.l.wrap.b32 	%r442, %r438, %r439, 3;
	shf.l.wrap.b32 	%r443, %r439, %r438, 3;
	mov.b64 	%rd614, {%r443, %r442};
	shr.u64 	%rd615, %rd1082, 6;
	xor.b64  	%rd616, %rd613, %rd615;
	xor.b64  	%rd617, %rd616, %rd614;
	shr.u64 	%rd618, %rd1085, 7;
	shf.r.wrap.b32 	%r444, %r283, %r282, 1;
	shf.r.wrap.b32 	%r445, %r282, %r283, 1;
	mov.b64 	%rd619, {%r445, %r444};
	xor.b64  	%rd620, %rd619, %rd618;
	shf.r.wrap.b32 	%r446, %r283, %r282, 8;
	shf.r.wrap.b32 	%r447, %r282, %r283, 8;
	mov.b64 	%rd621, {%r447, %r446};
	xor.b64  	%rd622, %rd620, %rd621;
	add.s64 	%rd623, %rd1077, %rd1084;
	add.s64 	%rd624, %rd623, %rd617;
	add.s64 	%rd1084, %rd624, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd1083;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 19;
	shf.r.wrap.b32 	%r451, %r448, %r449, 19;
	mov.b64 	%rd625, {%r451, %r450};
	shf.l.wrap.b32 	%r452, %r448, %r449, 3;
	shf.l.wrap.b32 	%r453, %r449, %r448, 3;
	mov.b64 	%rd626, {%r453, %r452};
	shr.u64 	%rd627, %rd1083, 6;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	shr.u64 	%rd630, %rd1086, 7;
	shf.r.wrap.b32 	%r454, %r295, %r294, 1;
	shf.r.wrap.b32 	%r455, %r294, %r295, 1;
	mov.b64 	%rd631, {%r455, %r454};
	xor.b64  	%rd632, %rd631, %rd630;
	shf.r.wrap.b32 	%r456, %r295, %r294, 8;
	shf.r.wrap.b32 	%r457, %r294, %r295, 8;
	mov.b64 	%rd633, {%r457, %r456};
	xor.b64  	%rd634, %rd632, %rd633;
	add.s64 	%rd635, %rd1078, %rd1085;
	add.s64 	%rd636, %rd635, %rd629;
	add.s64 	%rd1085, %rd636, %rd634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd1084;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 19;
	shf.r.wrap.b32 	%r461, %r458, %r459, 19;
	mov.b64 	%rd637, {%r461, %r460};
	shf.l.wrap.b32 	%r462, %r458, %r459, 3;
	shf.l.wrap.b32 	%r463, %r459, %r458, 3;
	mov.b64 	%rd638, {%r463, %r462};
	shr.u64 	%rd639, %rd1084, 6;
	xor.b64  	%rd640, %rd637, %rd639;
	xor.b64  	%rd641, %rd640, %rd638;
	shf.r.wrap.b32 	%r464, %r307, %r306, 1;
	shf.r.wrap.b32 	%r465, %r306, %r307, 1;
	mov.b64 	%rd642, {%r465, %r464};
	shf.r.wrap.b32 	%r466, %r307, %r306, 8;
	shf.r.wrap.b32 	%r467, %r306, %r307, 8;
	mov.b64 	%rd643, {%r467, %r466};
	shr.u64 	%rd644, %rd1071, 7;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd1079, %rd1086;
	add.s64 	%rd648, %rd647, %rd641;
	add.s64 	%rd1086, %rd648, %rd646;
	add.s64 	%rd86, %rd1066, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1070;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 18;
	shf.r.wrap.b32 	%r471, %r468, %r469, 18;
	mov.b64 	%rd649, {%r471, %r470};
	shf.r.wrap.b32 	%r472, %r469, %r468, 14;
	shf.r.wrap.b32 	%r473, %r468, %r469, 14;
	mov.b64 	%rd650, {%r473, %r472};
	xor.b64  	%rd651, %rd649, %rd650;
	shf.l.wrap.b32 	%r474, %r468, %r469, 23;
	shf.l.wrap.b32 	%r475, %r469, %r468, 23;
	mov.b64 	%rd652, {%r475, %r474};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd1068, %rd1069;
	and.b64  	%rd655, %rd654, %rd1070;
	xor.b64  	%rd656, %rd655, %rd1068;
	add.s64 	%rd657, %rd656, %rd1067;
	add.s64 	%rd658, %rd657, %rd1071;
	ld.const.u64 	%rd659, [%rd1066+128];
	add.s64 	%rd660, %rd658, %rd659;
	add.s64 	%rd661, %rd660, %rd653;
	add.s64 	%rd662, %rd661, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd1087;
	}
	shf.l.wrap.b32 	%r478, %r477, %r476, 30;
	shf.l.wrap.b32 	%r479, %r476, %r477, 30;
	mov.b64 	%rd663, {%r479, %r478};
	shf.r.wrap.b32 	%r480, %r476, %r477, 28;
	shf.r.wrap.b32 	%r481, %r477, %r476, 28;
	mov.b64 	%rd664, {%r481, %r480};
	xor.b64  	%rd665, %rd663, %rd664;
	shf.l.wrap.b32 	%r482, %r477, %r476, 25;
	shf.l.wrap.b32 	%r483, %r476, %r477, 25;
	mov.b64 	%rd666, {%r483, %r482};
	xor.b64  	%rd667, %rd665, %rd666;
	xor.b64  	%rd668, %rd1087, %rd1088;
	and.b64  	%rd669, %rd668, %rd1089;
	and.b64  	%rd670, %rd1087, %rd1088;
	or.b64  	%rd671, %rd669, %rd670;
	add.s64 	%rd672, %rd661, %rd671;
	add.s64 	%rd673, %rd672, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd662;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd674, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd675, {%r489, %r488};
	xor.b64  	%rd676, %rd675, %rd674;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd677, {%r491, %r490};
	xor.b64  	%rd678, %rd676, %rd677;
	xor.b64  	%rd679, %rd1069, %rd1070;
	and.b64  	%rd680, %rd662, %rd679;
	xor.b64  	%rd681, %rd680, %rd1069;
	add.s64 	%rd682, %rd1072, %rd1068;
	ld.const.u64 	%rd683, [%rd1066+136];
	add.s64 	%rd684, %rd682, %rd683;
	add.s64 	%rd685, %rd684, %rd681;
	add.s64 	%rd686, %rd685, %rd678;
	add.s64 	%rd687, %rd686, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd673;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd688, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd689, {%r497, %r496};
	xor.b64  	%rd690, %rd689, %rd688;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd691, {%r499, %r498};
	xor.b64  	%rd692, %rd690, %rd691;
	and.b64  	%rd693, %rd673, %rd1087;
	xor.b64  	%rd694, %rd673, %rd1087;
	and.b64  	%rd695, %rd694, %rd1088;
	or.b64  	%rd696, %rd695, %rd693;
	add.s64 	%rd697, %rd686, %rd696;
	add.s64 	%rd698, %rd697, %rd692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd687;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 14;
	shf.r.wrap.b32 	%r503, %r500, %r501, 14;
	mov.b64 	%rd699, {%r503, %r502};
	shf.r.wrap.b32 	%r504, %r501, %r500, 18;
	shf.r.wrap.b32 	%r505, %r500, %r501, 18;
	mov.b64 	%rd700, {%r505, %r504};
	xor.b64  	%rd701, %rd700, %rd699;
	shf.l.wrap.b32 	%r506, %r500, %r501, 23;
	shf.l.wrap.b32 	%r507, %r501, %r500, 23;
	mov.b64 	%rd702, {%r507, %r506};
	xor.b64  	%rd703, %rd701, %rd702;
	xor.b64  	%rd704, %rd662, %rd1070;
	and.b64  	%rd705, %rd687, %rd704;
	xor.b64  	%rd706, %rd705, %rd1070;
	add.s64 	%rd707, %rd1073, %rd1069;
	ld.const.u64 	%rd708, [%rd1066+144];
	add.s64 	%rd709, %rd707, %rd708;
	add.s64 	%rd710, %rd709, %rd706;
	add.s64 	%rd711, %rd710, %rd703;
	add.s64 	%rd712, %rd711, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd698;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 28;
	shf.r.wrap.b32 	%r511, %r508, %r509, 28;
	mov.b64 	%rd713, {%r511, %r510};
	shf.l.wrap.b32 	%r512, %r508, %r509, 30;
	shf.l.wrap.b32 	%r513, %r509, %r508, 30;
	mov.b64 	%rd714, {%r513, %r512};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r514, %r508, %r509, 25;
	shf.l.wrap.b32 	%r515, %r509, %r508, 25;
	mov.b64 	%rd716, {%r515, %r514};
	xor.b64  	%rd717, %rd715, %rd716;
	and.b64  	%rd718, %rd698, %rd673;
	xor.b64  	%rd719, %rd698, %rd673;
	and.b64  	%rd720, %rd719, %rd1087;
	or.b64  	%rd721, %rd720, %rd718;
	add.s64 	%rd722, %rd711, %rd721;
	add.s64 	%rd723, %rd722, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd712;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 14;
	shf.r.wrap.b32 	%r519, %r516, %r517, 14;
	mov.b64 	%rd724, {%r519, %r518};
	shf.r.wrap.b32 	%r520, %r517, %r516, 18;
	shf.r.wrap.b32 	%r521, %r516, %r517, 18;
	mov.b64 	%rd725, {%r521, %r520};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r522, %r516, %r517, 23;
	shf.l.wrap.b32 	%r523, %r517, %r516, 23;
	mov.b64 	%rd727, {%r523, %r522};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd687, %rd662;
	and.b64  	%rd730, %rd712, %rd729;
	xor.b64  	%rd731, %rd730, %rd662;
	add.s64 	%rd732, %rd1074, %rd1070;
	ld.const.u64 	%rd733, [%rd1066+152];
	add.s64 	%rd734, %rd732, %rd733;
	add.s64 	%rd735, %rd734, %rd731;
	add.s64 	%rd736, %rd735, %rd728;
	add.s64 	%rd737, %rd736, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd723;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 28;
	shf.r.wrap.b32 	%r527, %r524, %r525, 28;
	mov.b64 	%rd738, {%r527, %r526};
	shf.l.wrap.b32 	%r528, %r524, %r525, 30;
	shf.l.wrap.b32 	%r529, %r525, %r524, 30;
	mov.b64 	%rd739, {%r529, %r528};
	xor.b64  	%rd740, %rd739, %rd738;
	shf.l.wrap.b32 	%r530, %r524, %r525, 25;
	shf.l.wrap.b32 	%r531, %r525, %r524, 25;
	mov.b64 	%rd741, {%r531, %r530};
	xor.b64  	%rd742, %rd740, %rd741;
	and.b64  	%rd743, %rd723, %rd698;
	xor.b64  	%rd744, %rd723, %rd698;
	and.b64  	%rd745, %rd744, %rd673;
	or.b64  	%rd746, %rd745, %rd743;
	add.s64 	%rd747, %rd736, %rd746;
	add.s64 	%rd748, %rd747, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd737;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 14;
	shf.r.wrap.b32 	%r535, %r532, %r533, 14;
	mov.b64 	%rd749, {%r535, %r534};
	shf.r.wrap.b32 	%r536, %r533, %r532, 18;
	shf.r.wrap.b32 	%r537, %r532, %r533, 18;
	mov.b64 	%rd750, {%r537, %r536};
	xor.b64  	%rd751, %rd750, %rd749;
	shf.l.wrap.b32 	%r538, %r532, %r533, 23;
	shf.l.wrap.b32 	%r539, %r533, %r532, 23;
	mov.b64 	%rd752, {%r539, %r538};
	xor.b64  	%rd753, %rd751, %rd752;
	xor.b64  	%rd754, %rd712, %rd687;
	and.b64  	%rd755, %rd737, %rd754;
	xor.b64  	%rd756, %rd755, %rd687;
	add.s64 	%rd757, %rd662, %rd1075;
	ld.const.u64 	%rd758, [%rd1066+160];
	add.s64 	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd759, %rd756;
	add.s64 	%rd761, %rd760, %rd753;
	add.s64 	%rd762, %rd761, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd748;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 28;
	shf.r.wrap.b32 	%r543, %r540, %r541, 28;
	mov.b64 	%rd763, {%r543, %r542};
	shf.l.wrap.b32 	%r544, %r540, %r541, 30;
	shf.l.wrap.b32 	%r545, %r541, %r540, 30;
	mov.b64 	%rd764, {%r545, %r544};
	xor.b64  	%rd765, %rd764, %rd763;
	shf.l.wrap.b32 	%r546, %r540, %r541, 25;
	shf.l.wrap.b32 	%r547, %r541, %r540, 25;
	mov.b64 	%rd766, {%r547, %r546};
	xor.b64  	%rd767, %rd765, %rd766;
	and.b64  	%rd768, %rd748, %rd723;
	xor.b64  	%rd769, %rd748, %rd723;
	and.b64  	%rd770, %rd769, %rd698;
	or.b64  	%rd771, %rd770, %rd768;
	add.s64 	%rd772, %rd761, %rd771;
	add.s64 	%rd773, %rd772, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd762;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 14;
	shf.r.wrap.b32 	%r551, %r548, %r549, 14;
	mov.b64 	%rd774, {%r551, %r550};
	shf.r.wrap.b32 	%r552, %r549, %r548, 18;
	shf.r.wrap.b32 	%r553, %r548, %r549, 18;
	mov.b64 	%rd775, {%r553, %r552};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r554, %r548, %r549, 23;
	shf.l.wrap.b32 	%r555, %r549, %r548, 23;
	mov.b64 	%rd777, {%r555, %r554};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd737, %rd712;
	and.b64  	%rd780, %rd762, %rd779;
	xor.b64  	%rd781, %rd780, %rd712;
	add.s64 	%rd782, %rd687, %rd1076;
	ld.const.u64 	%rd783, [%rd1066+168];
	add.s64 	%rd784, %rd782, %rd783;
	add.s64 	%rd785, %rd784, %rd781;
	add.s64 	%rd786, %rd785, %rd778;
	add.s64 	%rd787, %rd786, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd773;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 28;
	shf.r.wrap.b32 	%r559, %r556, %r557, 28;
	mov.b64 	%rd788, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 30;
	shf.l.wrap.b32 	%r561, %r557, %r556, 30;
	mov.b64 	%rd789, {%r561, %r560};
	xor.b64  	%rd790, %rd789, %rd788;
	shf.l.wrap.b32 	%r562, %r556, %r557, 25;
	shf.l.wrap.b32 	%r563, %r557, %r556, 25;
	mov.b64 	%rd791, {%r563, %r562};
	xor.b64  	%rd792, %rd790, %rd791;
	and.b64  	%rd793, %rd773, %rd748;
	xor.b64  	%rd794, %rd773, %rd748;
	and.b64  	%rd795, %rd794, %rd723;
	or.b64  	%rd796, %rd795, %rd793;
	add.s64 	%rd797, %rd786, %rd796;
	add.s64 	%rd798, %rd797, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r565}, %rd787;
	}
	shf.r.wrap.b32 	%r566, %r565, %r564, 14;
	shf.r.wrap.b32 	%r567, %r564, %r565, 14;
	mov.b64 	%rd799, {%r567, %r566};
	shf.r.wrap.b32 	%r568, %r565, %r564, 18;
	shf.r.wrap.b32 	%r569, %r564, %r565, 18;
	mov.b64 	%rd800, {%r569, %r568};
	xor.b64  	%rd801, %rd800, %rd799;
	shf.l.wrap.b32 	%r570, %r564, %r565, 23;
	shf.l.wrap.b32 	%r571, %r565, %r564, 23;
	mov.b64 	%rd802, {%r571, %r570};
	xor.b64  	%rd803, %rd801, %rd802;
	xor.b64  	%rd804, %rd762, %rd737;
	and.b64  	%rd805, %rd787, %rd804;
	xor.b64  	%rd806, %rd805, %rd737;
	add.s64 	%rd807, %rd712, %rd1077;
	ld.const.u64 	%rd808, [%rd1066+176];
	add.s64 	%rd809, %rd807, %rd808;
	add.s64 	%rd810, %rd809, %rd806;
	add.s64 	%rd811, %rd810, %rd803;
	add.s64 	%rd812, %rd811, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd798;
	}
	shf.r.wrap.b32 	%r574, %r573, %r572, 28;
	shf.r.wrap.b32 	%r575, %r572, %r573, 28;
	mov.b64 	%rd813, {%r575, %r574};
	shf.l.wrap.b32 	%r576, %r572, %r573, 30;
	shf.l.wrap.b32 	%r577, %r573, %r572, 30;
	mov.b64 	%rd814, {%r577, %r576};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.l.wrap.b32 	%r578, %r572, %r573, 25;
	shf.l.wrap.b32 	%r579, %r573, %r572, 25;
	mov.b64 	%rd816, {%r579, %r578};
	xor.b64  	%rd817, %rd815, %rd816;
	and.b64  	%rd818, %rd798, %rd773;
	xor.b64  	%rd819, %rd798, %rd773;
	and.b64  	%rd820, %rd819, %rd748;
	or.b64  	%rd821, %rd820, %rd818;
	add.s64 	%rd822, %rd811, %rd821;
	add.s64 	%rd823, %rd822, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd812;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 14;
	shf.r.wrap.b32 	%r583, %r580, %r581, 14;
	mov.b64 	%rd824, {%r583, %r582};
	shf.r.wrap.b32 	%r584, %r581, %r580, 18;
	shf.r.wrap.b32 	%r585, %r580, %r581, 18;
	mov.b64 	%rd825, {%r585, %r584};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r586, %r580, %r581, 23;
	shf.l.wrap.b32 	%r587, %r581, %r580, 23;
	mov.b64 	%rd827, {%r587, %r586};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd787, %rd762;
	and.b64  	%rd830, %rd812, %rd829;
	xor.b64  	%rd831, %rd830, %rd762;
	add.s64 	%rd832, %rd737, %rd1078;
	ld.const.u64 	%rd833, [%rd1066+184];
	add.s64 	%rd834, %rd832, %rd833;
	add.s64 	%rd835, %rd834, %rd831;
	add.s64 	%rd836, %rd835, %rd828;
	add.s64 	%rd837, %rd836, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd823;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 28;
	shf.r.wrap.b32 	%r591, %r588, %r589, 28;
	mov.b64 	%rd838, {%r591, %r590};
	shf.l.wrap.b32 	%r592, %r588, %r589, 30;
	shf.l.wrap.b32 	%r593, %r589, %r588, 30;
	mov.b64 	%rd839, {%r593, %r592};
	xor.b64  	%rd840, %rd839, %rd838;
	shf.l.wrap.b32 	%r594, %r588, %r589, 25;
	shf.l.wrap.b32 	%r595, %r589, %r588, 25;
	mov.b64 	%rd841, {%r595, %r594};
	xor.b64  	%rd842, %rd840, %rd841;
	and.b64  	%rd843, %rd823, %rd798;
	xor.b64  	%rd844, %rd823, %rd798;
	and.b64  	%rd845, %rd844, %rd773;
	or.b64  	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd836, %rd846;
	add.s64 	%rd848, %rd847, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd837;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd849, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd850, {%r601, %r600};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd852, {%r603, %r602};
	xor.b64  	%rd853, %rd851, %rd852;
	xor.b64  	%rd854, %rd812, %rd787;
	and.b64  	%rd855, %rd837, %rd854;
	xor.b64  	%rd856, %rd855, %rd787;
	add.s64 	%rd857, %rd762, %rd1079;
	ld.const.u64 	%rd858, [%rd1066+192];
	add.s64 	%rd859, %rd857, %rd858;
	add.s64 	%rd860, %rd859, %rd856;
	add.s64 	%rd861, %rd860, %rd853;
	add.s64 	%rd862, %rd861, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd848;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd863, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd864, {%r609, %r608};
	xor.b64  	%rd865, %rd864, %rd863;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd866, {%r611, %r610};
	xor.b64  	%rd867, %rd865, %rd866;
	and.b64  	%rd868, %rd848, %rd823;
	xor.b64  	%rd869, %rd848, %rd823;
	and.b64  	%rd870, %rd869, %rd798;
	or.b64  	%rd871, %rd870, %rd868;
	add.s64 	%rd872, %rd861, %rd871;
	add.s64 	%rd873, %rd872, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd862;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 14;
	shf.r.wrap.b32 	%r615, %r612, %r613, 14;
	mov.b64 	%rd874, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 18;
	shf.r.wrap.b32 	%r617, %r612, %r613, 18;
	mov.b64 	%rd875, {%r617, %r616};
	xor.b64  	%rd876, %rd875, %rd874;
	shf.l.wrap.b32 	%r618, %r612, %r613, 23;
	shf.l.wrap.b32 	%r619, %r613, %r612, 23;
	mov.b64 	%rd877, {%r619, %r618};
	xor.b64  	%rd878, %rd876, %rd877;
	xor.b64  	%rd879, %rd837, %rd812;
	and.b64  	%rd880, %rd862, %rd879;
	xor.b64  	%rd881, %rd880, %rd812;
	add.s64 	%rd882, %rd787, %rd1080;
	ld.const.u64 	%rd883, [%rd1066+200];
	add.s64 	%rd884, %rd882, %rd883;
	add.s64 	%rd885, %rd884, %rd881;
	add.s64 	%rd886, %rd885, %rd878;
	add.s64 	%rd887, %rd886, %rd798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd873;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 28;
	shf.r.wrap.b32 	%r623, %r620, %r621, 28;
	mov.b64 	%rd888, {%r623, %r622};
	shf.l.wrap.b32 	%r624, %r620, %r621, 30;
	shf.l.wrap.b32 	%r625, %r621, %r620, 30;
	mov.b64 	%rd889, {%r625, %r624};
	xor.b64  	%rd890, %rd889, %rd888;
	shf.l.wrap.b32 	%r626, %r620, %r621, 25;
	shf.l.wrap.b32 	%r627, %r621, %r620, 25;
	mov.b64 	%rd891, {%r627, %r626};
	xor.b64  	%rd892, %rd890, %rd891;
	and.b64  	%rd893, %rd873, %rd848;
	xor.b64  	%rd894, %rd873, %rd848;
	and.b64  	%rd895, %rd894, %rd823;
	or.b64  	%rd896, %rd895, %rd893;
	add.s64 	%rd897, %rd886, %rd896;
	add.s64 	%rd898, %rd897, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd887;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd899, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd900, {%r633, %r632};
	xor.b64  	%rd901, %rd900, %rd899;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd902, {%r635, %r634};
	xor.b64  	%rd903, %rd901, %rd902;
	xor.b64  	%rd904, %rd862, %rd837;
	and.b64  	%rd905, %rd887, %rd904;
	xor.b64  	%rd906, %rd905, %rd837;
	add.s64 	%rd907, %rd812, %rd1081;
	ld.const.u64 	%rd908, [%rd1066+208];
	add.s64 	%rd909, %rd907, %rd908;
	add.s64 	%rd910, %rd909, %rd906;
	add.s64 	%rd911, %rd910, %rd903;
	add.s64 	%rd912, %rd911, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd898;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd913, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd914, {%r641, %r640};
	xor.b64  	%rd915, %rd914, %rd913;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd916, {%r643, %r642};
	xor.b64  	%rd917, %rd915, %rd916;
	and.b64  	%rd918, %rd898, %rd873;
	xor.b64  	%rd919, %rd898, %rd873;
	and.b64  	%rd920, %rd919, %rd848;
	or.b64  	%rd921, %rd920, %rd918;
	add.s64 	%rd922, %rd911, %rd921;
	add.s64 	%rd923, %rd922, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd912;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd924, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd925, {%r649, %r648};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd927, {%r651, %r650};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd887, %rd862;
	and.b64  	%rd930, %rd912, %rd929;
	xor.b64  	%rd931, %rd930, %rd862;
	add.s64 	%rd932, %rd837, %rd1082;
	ld.const.u64 	%rd933, [%rd1066+216];
	add.s64 	%rd934, %rd932, %rd933;
	add.s64 	%rd935, %rd934, %rd931;
	add.s64 	%rd936, %rd935, %rd928;
	add.s64 	%rd937, %rd936, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd923;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd938, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd939, {%r657, %r656};
	xor.b64  	%rd940, %rd939, %rd938;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd941, {%r659, %r658};
	xor.b64  	%rd942, %rd940, %rd941;
	and.b64  	%rd943, %rd923, %rd898;
	xor.b64  	%rd944, %rd923, %rd898;
	and.b64  	%rd945, %rd944, %rd873;
	or.b64  	%rd946, %rd945, %rd943;
	add.s64 	%rd947, %rd936, %rd946;
	add.s64 	%rd948, %rd947, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd937;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 14;
	shf.r.wrap.b32 	%r663, %r660, %r661, 14;
	mov.b64 	%rd949, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r661, %r660, 18;
	shf.r.wrap.b32 	%r665, %r660, %r661, 18;
	mov.b64 	%rd950, {%r665, %r664};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r666, %r660, %r661, 23;
	shf.l.wrap.b32 	%r667, %r661, %r660, 23;
	mov.b64 	%rd952, {%r667, %r666};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd912, %rd887;
	and.b64  	%rd955, %rd937, %rd954;
	xor.b64  	%rd956, %rd955, %rd887;
	add.s64 	%rd957, %rd862, %rd1083;
	ld.const.u64 	%rd958, [%rd1066+224];
	add.s64 	%rd959, %rd957, %rd958;
	add.s64 	%rd960, %rd959, %rd956;
	add.s64 	%rd961, %rd960, %rd953;
	add.s64 	%rd1067, %rd961, %rd873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd948;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 28;
	shf.r.wrap.b32 	%r671, %r668, %r669, 28;
	mov.b64 	%rd962, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 30;
	shf.l.wrap.b32 	%r673, %r669, %r668, 30;
	mov.b64 	%rd963, {%r673, %r672};
	xor.b64  	%rd964, %rd963, %rd962;
	shf.l.wrap.b32 	%r674, %r668, %r669, 25;
	shf.l.wrap.b32 	%r675, %r669, %r668, 25;
	mov.b64 	%rd965, {%r675, %r674};
	xor.b64  	%rd966, %rd964, %rd965;
	and.b64  	%rd967, %rd948, %rd923;
	xor.b64  	%rd968, %rd948, %rd923;
	and.b64  	%rd969, %rd968, %rd898;
	or.b64  	%rd970, %rd969, %rd967;
	add.s64 	%rd971, %rd961, %rd970;
	add.s64 	%rd1090, %rd971, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1067;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd972, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd973, {%r681, %r680};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd975, {%r683, %r682};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd937, %rd912;
	and.b64  	%rd978, %rd1067, %rd977;
	xor.b64  	%rd979, %rd978, %rd912;
	add.s64 	%rd980, %rd887, %rd1084;
	ld.const.u64 	%rd981, [%rd1066+232];
	add.s64 	%rd982, %rd980, %rd981;
	add.s64 	%rd983, %rd982, %rd979;
	add.s64 	%rd984, %rd983, %rd976;
	add.s64 	%rd1068, %rd984, %rd898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1090;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd985, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd986, {%r689, %r688};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd988, {%r691, %r690};
	xor.b64  	%rd989, %rd987, %rd988;
	and.b64  	%rd990, %rd1090, %rd948;
	xor.b64  	%rd991, %rd1090, %rd948;
	and.b64  	%rd992, %rd991, %rd923;
	or.b64  	%rd993, %rd992, %rd990;
	add.s64 	%rd994, %rd984, %rd993;
	add.s64 	%rd1089, %rd994, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1068;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 14;
	shf.r.wrap.b32 	%r695, %r692, %r693, 14;
	mov.b64 	%rd995, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r693, %r692, 18;
	shf.r.wrap.b32 	%r697, %r692, %r693, 18;
	mov.b64 	%rd996, {%r697, %r696};
	xor.b64  	%rd997, %rd996, %rd995;
	shf.l.wrap.b32 	%r698, %r692, %r693, 23;
	shf.l.wrap.b32 	%r699, %r693, %r692, 23;
	mov.b64 	%rd998, {%r699, %r698};
	xor.b64  	%rd999, %rd997, %rd998;
	xor.b64  	%rd1000, %rd1067, %rd937;
	and.b64  	%rd1001, %rd1068, %rd1000;
	xor.b64  	%rd1002, %rd1001, %rd937;
	add.s64 	%rd1003, %rd912, %rd1085;
	ld.const.u64 	%rd1004, [%rd1066+240];
	add.s64 	%rd1005, %rd1003, %rd1004;
	add.s64 	%rd1006, %rd1005, %rd1002;
	add.s64 	%rd1007, %rd1006, %rd999;
	add.s64 	%rd1069, %rd1007, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1089;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 28;
	shf.r.wrap.b32 	%r703, %r700, %r701, 28;
	mov.b64 	%rd1008, {%r703, %r702};
	shf.l.wrap.b32 	%r704, %r700, %r701, 30;
	shf.l.wrap.b32 	%r705, %r701, %r700, 30;
	mov.b64 	%rd1009, {%r705, %r704};
	xor.b64  	%rd1010, %rd1009, %rd1008;
	shf.l.wrap.b32 	%r706, %r700, %r701, 25;
	shf.l.wrap.b32 	%r707, %r701, %r700, 25;
	mov.b64 	%rd1011, {%r707, %r706};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	and.b64  	%rd1013, %rd1089, %rd1090;
	xor.b64  	%rd1014, %rd1089, %rd1090;
	and.b64  	%rd1015, %rd1014, %rd948;
	or.b64  	%rd1016, %rd1015, %rd1013;
	add.s64 	%rd1017, %rd1007, %rd1016;
	add.s64 	%rd1088, %rd1017, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1069;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1018, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1019, {%r713, %r712};
	xor.b64  	%rd1020, %rd1019, %rd1018;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1021, {%r715, %r714};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	xor.b64  	%rd1023, %rd1068, %rd1067;
	and.b64  	%rd1024, %rd1069, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd1067;
	add.s64 	%rd1026, %rd937, %rd1086;
	ld.const.u64 	%rd1027, [%rd1066+248];
	add.s64 	%rd1028, %rd1026, %rd1027;
	add.s64 	%rd1029, %rd1028, %rd1025;
	add.s64 	%rd1030, %rd1029, %rd1022;
	add.s64 	%rd1070, %rd1030, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1088;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1031, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1032, {%r721, %r720};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1034, {%r723, %r722};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	and.b64  	%rd1036, %rd1088, %rd1089;
	xor.b64  	%rd1037, %rd1088, %rd1089;
	and.b64  	%rd1038, %rd1037, %rd1090;
	or.b64  	%rd1039, %rd1038, %rd1036;
	add.s64 	%rd1040, %rd1030, %rd1039;
	add.s64 	%rd1087, %rd1040, %rd1035;
	add.s32 	%r739, %r739, 16;
	setp.lt.s32	%p3, %r739, 80;
	mov.u64 	%rd1066, %rd86;
	@%p3 bra 	BB5_4;

	mov.b64	{%r11, %r12}, %rd1067;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB5_11;

	mov.b64	{%r724, %r725}, %rd1090;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r724, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r725, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB5_11;

	ld.param.u64 	%rd1064, [m01700_s16_param_16];
	ld.global.u32 	%r13, [%rd93+32];
	mul.wide.u32 	%rd1041, %r13, 4;
	add.s64 	%rd1042, %rd1064, %rd1041;
	add.u64 	%rd1044, %SPL, 8;
	mov.u32 	%r726, 1;
	st.local.u32 	[%rd1044], %r726;
	ld.local.u32 	%r727, [%rd1044];
	atom.global.add.u32 	%r728, [%rd1042], %r727;
	setp.ne.s32	%p10, %r728, 0;
	@%p10 bra 	BB5_11;

	ld.global.u32 	%r14, [%rd2+-44];
	ld.global.u32 	%r729, [%rd2+-28];
	add.u64 	%rd1046, %SPL, 4;
	st.local.u32 	[%rd1046], %r726;
	ld.local.u32 	%r731, [%rd1046];
	atom.global.add.u32 	%r15, [%rd92], %r731;
	setp.lt.u32	%p11, %r15, %r729;
	@%p11 bra 	BB5_10;
	bra.uni 	BB5_9;

BB5_10:
	ld.param.u64 	%rd1065, [m01700_s16_param_14];
	mul.wide.u32 	%rd1049, %r15, 32;
	add.s64 	%rd1050, %rd1065, %rd1049;
	st.global.u32 	[%rd1050+12], %r14;
	mov.u32 	%r736, 0;
	st.global.u32 	[%rd1050+16], %r736;
	st.global.u32 	[%rd1050+20], %r13;
	st.global.u64 	[%rd1050], %rd1;
	st.global.u32 	[%rd1050+8], %r738;
	st.global.u32 	[%rd1050+24], %r736;
	st.global.u32 	[%rd1050+28], %r736;
	bra.uni 	BB5_11;

BB5_9:
	add.u64 	%rd1048, %SPL, 0;
	st.local.u32 	[%rd1048], %r726;
	ld.local.u32 	%r733, [%rd1048];
	neg.s32 	%r734, %r733;
	atom.global.add.u32 	%r735, [%rd92], %r734;

BB5_11:
	add.s32 	%r738, %r738, 1;
	ld.global.u32 	%r737, [%rd93+24];
	setp.lt.u32	%p12, %r738, %r737;
	@%p12 bra 	BB5_3;

BB5_12:
	ret;
}


  
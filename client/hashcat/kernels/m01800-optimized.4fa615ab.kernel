//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.5
.target sm_61, texmode_independent
.address_size 64

	// .globl	m01800_init
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry m01800_init(
	.param .u64 .ptr .global .align 4 m01800_init_param_0,
	.param .u64 .ptr .global .align 4 m01800_init_param_1,
	.param .u64 .ptr .global .align 4 m01800_init_param_2,
	.param .u64 .ptr .const .align 4 m01800_init_param_3,
	.param .u64 .ptr .global .align 8 m01800_init_param_4,
	.param .u64 .ptr .global .align 1 m01800_init_param_5,
	.param .u64 .ptr .global .align 4 m01800_init_param_6,
	.param .u64 .ptr .global .align 4 m01800_init_param_7,
	.param .u64 .ptr .global .align 4 m01800_init_param_8,
	.param .u64 .ptr .global .align 4 m01800_init_param_9,
	.param .u64 .ptr .global .align 4 m01800_init_param_10,
	.param .u64 .ptr .global .align 4 m01800_init_param_11,
	.param .u64 .ptr .global .align 4 m01800_init_param_12,
	.param .u64 .ptr .global .align 4 m01800_init_param_13,
	.param .u64 .ptr .global .align 8 m01800_init_param_14,
	.param .u64 .ptr .global .align 4 m01800_init_param_15,
	.param .u64 .ptr .global .align 4 m01800_init_param_16,
	.param .u64 .ptr .global .align 4 m01800_init_param_17,
	.param .u64 .ptr .global .align 1 m01800_init_param_18,
	.param .u64 .ptr .global .align 4 m01800_init_param_19,
	.param .u64 .ptr .global .align 1 m01800_init_param_20,
	.param .u64 .ptr .global .align 1 m01800_init_param_21,
	.param .u64 .ptr .global .align 1 m01800_init_param_22,
	.param .u64 .ptr .global .align 1 m01800_init_param_23,
	.param .u64 .ptr .global .align 8 m01800_init_param_24
)
{
	.local .align 16 .b8 	__local_depot0[304];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<169>;
	.reg .b16 	%rs<271>;
	.reg .b32 	%r<12715>;
	.reg .b64 	%rd<18744>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd1440, [m01800_init_param_0];
	ld.param.u64 	%rd1442, [m01800_init_param_17];
	ld.param.u64 	%rd1443, [m01800_init_param_24];
	add.u64 	%rd1, %SPL, 32;
	mov.u32 	%r400, %ctaid.x;
	mov.u32 	%r401, %ntid.x;
	mov.b32	%r402, %envreg3;
	mad.lo.s32 	%r403, %r400, %r401, %r402;
	mov.u32 	%r404, %tid.x;
	add.s32 	%r1, %r403, %r404;
	cvt.s64.s32	%rd1445, %r1;
	add.s64 	%rd2, %rd1443, 56;
	ld.global.u64 	%rd1446, [%rd1443+56];
	setp.ge.u64	%p1, %rd1445, %rd1446;
	@%p1 bra 	BB0_277;

	mul.wide.s32 	%rd1455, %r1, 260;
	add.s64 	%rd1456, %rd1440, %rd1455;
	ld.global.u32 	%r438, [%rd1456+256];
	and.b32  	%r2, %r438, 15;
	ld.global.u32 	%r439, [%rd2+-44];
	mul.wide.u32 	%rd1457, %r439, 568;
	add.s64 	%rd1458, %rd1442, %rd1457;
	ld.global.u32 	%r3, [%rd1458+512];
	ld.global.u32 	%r440, [%rd1456+4];
	ld.global.u32 	%r441, [%rd1456];
	mov.u32 	%r12548, 0;
	mov.b64	%rd1447, {%r441, %r440};
	ld.global.u32 	%r442, [%rd1456+12];
	ld.global.u32 	%r443, [%rd1456+8];
	ld.global.u32 	%r444, [%rd1458+4];
	ld.global.u32 	%r445, [%rd1458];
	ld.global.u32 	%r446, [%rd1458+12];
	ld.global.u32 	%r447, [%rd1458+8];
	// inline asm
	mov.b64 {%r405, %r406}, %rd1447;
	// inline asm
	// inline asm
	prmt.b32 %r407, %r405, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r409, %r406, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1448, {%r409, %r407};
	// inline asm
	add.u64 	%rd1460, %SPL, 0;
	st.local.u64 	[%rd1460], %rd1448;
	mov.b64	%rd1449, {%r443, %r442};
	// inline asm
	mov.b64 {%r413, %r414}, %rd1449;
	// inline asm
	// inline asm
	prmt.b32 %r415, %r413, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r417, %r414, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1450, {%r417, %r415};
	// inline asm
	st.local.u64 	[%rd1460+8], %rd1450;
	mov.b64	%rd1451, {%r445, %r444};
	// inline asm
	mov.b64 {%r421, %r422}, %rd1451;
	// inline asm
	// inline asm
	prmt.b32 %r423, %r421, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r425, %r422, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1452, {%r425, %r423};
	// inline asm
	add.u64 	%rd1462, %SPL, 16;
	st.local.u64 	[%rd1462], %rd1452;
	mov.b64	%rd1453, {%r447, %r446};
	// inline asm
	mov.b64 {%r429, %r430}, %rd1453;
	// inline asm
	// inline asm
	prmt.b32 %r431, %r429, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r433, %r430, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1454, {%r433, %r431};
	// inline asm
	st.local.u64 	[%rd1462+8], %rd1454;
	mov.u64 	%rd1463, 7640891576956012808;
	st.local.u64 	[%rd1], %rd1463;
	mov.u64 	%rd1464, -4942790177534073029;
	st.local.u64 	[%rd1+8], %rd1464;
	mov.u64 	%rd1465, 4354685564936845355;
	st.local.u64 	[%rd1+16], %rd1465;
	mov.u64 	%rd1466, -6534734903238641935;
	st.local.u64 	[%rd1+24], %rd1466;
	mov.u64 	%rd1467, 5840696475078001361;
	st.local.u64 	[%rd1+32], %rd1467;
	mov.u64 	%rd1468, -7276294671716946913;
	st.local.u64 	[%rd1+40], %rd1468;
	mov.u64 	%rd1469, 2270897969802886507;
	st.local.u64 	[%rd1+48], %rd1469;
	mov.u64 	%rd1470, 6620516959819538809;
	st.local.u64 	[%rd1+56], %rd1470;
	st.local.u32 	[%rd1+192], %r2;
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_5;

	add.s64 	%rd5, %rd1, 64;
	mov.u32 	%r12547, 0;

BB0_3:
	xor.b32  	%r449, %r12547, 7;
	cvt.s64.s32	%rd1472, %r449;
	add.s64 	%rd1473, %rd1460, %rd1472;
	ld.local.u8 	%rs9, [%rd1473];
	add.s64 	%rd1474, %rd5, %rd1472;
	st.local.u8 	[%rd1474], %rs9;
	add.s32 	%r12547, %r12547, 1;
	setp.lt.s32	%p3, %r12547, %r2;
	@%p3 bra 	BB0_3;

	ld.local.u32 	%r12548, [%rd1+192];

BB0_5:
	add.s32 	%r450, %r12548, %r3;
	st.local.u32 	[%rd1+192], %r450;
	and.b32  	%r8, %r12548, 127;
	add.s32 	%r9, %r8, %r3;
	setp.lt.s32	%p4, %r9, 128;
	@%p4 bra 	BB0_26;
	bra.uni 	BB0_6;

BB0_26:
	setp.lt.s32	%p17, %r3, 1;
	@%p17 bra 	BB0_35;

	add.s64 	%rd89, %rd1, 64;
	and.b32  	%r1219, %r3, 3;
	mov.u32 	%r12563, 0;
	setp.eq.s32	%p18, %r1219, 0;
	@%p18 bra 	BB0_33;

	setp.eq.s32	%p19, %r1219, 1;
	@%p19 bra 	BB0_32;

	setp.eq.s32	%p20, %r1219, 2;
	@%p20 bra 	BB0_31;

	ld.local.u8 	%rs24, [%rd1462+7];
	xor.b32  	%r1221, %r8, 7;
	cvt.u64.u32	%rd2546, %r1221;
	add.s64 	%rd2547, %rd89, %rd2546;
	st.local.u8 	[%rd2547], %rs24;
	add.s32 	%r8, %r8, 1;
	mov.u32 	%r12563, 1;

BB0_31:
	xor.b32  	%r1222, %r12563, 7;
	cvt.u64.u32	%rd2548, %r1222;
	add.s64 	%rd2549, %rd1462, %rd2548;
	ld.local.u8 	%rs25, [%rd2549];
	xor.b32  	%r1223, %r8, 7;
	cvt.s64.s32	%rd2550, %r1223;
	add.s64 	%rd2551, %rd89, %rd2550;
	st.local.u8 	[%rd2551], %rs25;
	add.s32 	%r8, %r8, 1;
	add.s32 	%r12563, %r12563, 1;

BB0_32:
	xor.b32  	%r1224, %r12563, 7;
	cvt.s64.s32	%rd2552, %r1224;
	add.s64 	%rd2553, %rd1462, %rd2552;
	ld.local.u8 	%rs26, [%rd2553];
	xor.b32  	%r1225, %r8, 7;
	cvt.s64.s32	%rd2554, %r1225;
	add.s64 	%rd2555, %rd89, %rd2554;
	st.local.u8 	[%rd2555], %rs26;
	add.s32 	%r8, %r8, 1;
	add.s32 	%r12563, %r12563, 1;

BB0_33:
	setp.lt.u32	%p21, %r3, 4;
	@%p21 bra 	BB0_35;

BB0_34:
	xor.b32  	%r1226, %r12563, 7;
	cvt.s64.s32	%rd2556, %r1226;
	add.s64 	%rd2557, %rd1462, %rd2556;
	ld.local.u8 	%rs27, [%rd2557];
	xor.b32  	%r1227, %r8, 7;
	cvt.s64.s32	%rd2558, %r1227;
	add.s64 	%rd2559, %rd89, %rd2558;
	st.local.u8 	[%rd2559], %rs27;
	add.s32 	%r1228, %r12563, 1;
	xor.b32  	%r1229, %r1228, 7;
	cvt.s64.s32	%rd2560, %r1229;
	add.s64 	%rd2561, %rd1462, %rd2560;
	ld.local.u8 	%rs28, [%rd2561];
	add.s32 	%r1230, %r8, 1;
	xor.b32  	%r1231, %r1230, 7;
	cvt.s64.s32	%rd2562, %r1231;
	add.s64 	%rd2563, %rd89, %rd2562;
	st.local.u8 	[%rd2563], %rs28;
	add.s32 	%r1232, %r12563, 2;
	xor.b32  	%r1233, %r1232, 7;
	cvt.s64.s32	%rd2564, %r1233;
	add.s64 	%rd2565, %rd1462, %rd2564;
	ld.local.u8 	%rs29, [%rd2565];
	add.s32 	%r1234, %r8, 2;
	xor.b32  	%r1235, %r1234, 7;
	cvt.s64.s32	%rd2566, %r1235;
	add.s64 	%rd2567, %rd89, %rd2566;
	st.local.u8 	[%rd2567], %rs29;
	add.s32 	%r1236, %r12563, 3;
	xor.b32  	%r1237, %r1236, 7;
	cvt.s64.s32	%rd2568, %r1237;
	add.s64 	%rd2569, %rd1462, %rd2568;
	ld.local.u8 	%rs30, [%rd2569];
	add.s32 	%r1238, %r8, 3;
	xor.b32  	%r1239, %r1238, 7;
	cvt.s64.s32	%rd2570, %r1239;
	add.s64 	%rd2571, %rd89, %rd2570;
	st.local.u8 	[%rd2571], %rs30;
	add.s32 	%r12563, %r12563, 4;
	setp.lt.s32	%p22, %r12563, %r3;
	add.s32 	%r8, %r8, 4;
	@%p22 bra 	BB0_34;
	bra.uni 	BB0_35;

BB0_6:
	mov.u32 	%r452, 128;
	sub.s32 	%r10, %r452, %r8;
	add.s64 	%rd6, %rd1, 64;
	mov.u32 	%r453, 1;
	max.u32 	%r11, %r10, %r453;
	and.b32  	%r12, %r11, 3;
	setp.eq.s32	%p5, %r12, 0;
	mov.u32 	%r12555, 0;
	@%p5 bra 	BB0_13;

	setp.eq.s32	%p6, %r12, 1;
	mov.u32 	%r12551, 0;
	@%p6 bra 	BB0_12;

	setp.eq.s32	%p7, %r12, 2;
	mov.u32 	%r455, 0;
	@%p7 bra 	BB0_9;
	bra.uni 	BB0_10;

BB0_9:
	mov.u32 	%r453, %r455;
	bra.uni 	BB0_11;

BB0_10:
	ld.local.u8 	%rs10, [%rd1462+7];
	xor.b32  	%r457, %r8, 7;
	cvt.u64.u32	%rd1476, %r457;
	add.s64 	%rd1477, %rd6, %rd1476;
	st.local.u8 	[%rd1477], %rs10;
	add.s32 	%r8, %r8, 1;

BB0_11:
	xor.b32  	%r458, %r453, 7;
	cvt.u64.u32	%rd1478, %r458;
	add.s64 	%rd1479, %rd1462, %rd1478;
	ld.local.u8 	%rs11, [%rd1479];
	xor.b32  	%r459, %r8, 7;
	cvt.s64.s32	%rd1480, %r459;
	add.s64 	%rd1481, %rd6, %rd1480;
	st.local.u8 	[%rd1481], %rs11;
	add.s32 	%r8, %r8, 1;
	add.s32 	%r12551, %r453, 1;

BB0_12:
	xor.b32  	%r460, %r12551, 7;
	cvt.s64.s32	%rd1482, %r460;
	add.s64 	%rd1483, %rd1462, %rd1482;
	ld.local.u8 	%rs12, [%rd1483];
	xor.b32  	%r461, %r8, 7;
	cvt.s64.s32	%rd1484, %r461;
	add.s64 	%rd1485, %rd6, %rd1484;
	st.local.u8 	[%rd1485], %rs12;
	add.s32 	%r8, %r8, 1;
	add.s32 	%r12555, %r12551, 1;

BB0_13:
	setp.lt.u32	%p8, %r11, 4;
	@%p8 bra 	BB0_15;

BB0_14:
	xor.b32  	%r462, %r12555, 7;
	cvt.s64.s32	%rd1486, %r462;
	add.s64 	%rd1487, %rd1462, %rd1486;
	ld.local.u8 	%rs13, [%rd1487];
	xor.b32  	%r463, %r8, 7;
	cvt.s64.s32	%rd1488, %r463;
	add.s64 	%rd1489, %rd6, %rd1488;
	st.local.u8 	[%rd1489], %rs13;
	add.s32 	%r464, %r12555, 1;
	xor.b32  	%r465, %r464, 7;
	cvt.s64.s32	%rd1490, %r465;
	add.s64 	%rd1491, %rd1462, %rd1490;
	ld.local.u8 	%rs14, [%rd1491];
	add.s32 	%r466, %r8, 1;
	xor.b32  	%r467, %r466, 7;
	cvt.s64.s32	%rd1492, %r467;
	add.s64 	%rd1493, %rd6, %rd1492;
	st.local.u8 	[%rd1493], %rs14;
	add.s32 	%r468, %r12555, 2;
	xor.b32  	%r469, %r468, 7;
	cvt.s64.s32	%rd1494, %r469;
	add.s64 	%rd1495, %rd1462, %rd1494;
	ld.local.u8 	%rs15, [%rd1495];
	add.s32 	%r470, %r8, 2;
	xor.b32  	%r471, %r470, 7;
	cvt.s64.s32	%rd1496, %r471;
	add.s64 	%rd1497, %rd6, %rd1496;
	st.local.u8 	[%rd1497], %rs15;
	add.s32 	%r472, %r12555, 3;
	xor.b32  	%r473, %r472, 7;
	cvt.s64.s32	%rd1498, %r473;
	add.s64 	%rd1499, %rd1462, %rd1498;
	ld.local.u8 	%rs16, [%rd1499];
	add.s32 	%r474, %r8, 3;
	xor.b32  	%r475, %r474, 7;
	cvt.s64.s32	%rd1500, %r475;
	add.s64 	%rd1501, %rd6, %rd1500;
	st.local.u8 	[%rd1501], %rs16;
	add.s32 	%r12555, %r12555, 4;
	setp.lt.s32	%p9, %r12555, %r10;
	add.s32 	%r8, %r8, 4;
	@%p9 bra 	BB0_14;

BB0_15:
	ld.local.u64 	%rd8, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd8;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd8;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 14;
	shf.r.wrap.b32 	%r480, %r477, %r478, 14;
	mov.b64 	%rd1502, {%r480, %r479};
	shf.r.wrap.b32 	%r481, %r478, %r477, 18;
	shf.r.wrap.b32 	%r482, %r477, %r478, 18;
	mov.b64 	%rd1503, {%r482, %r481};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	shf.l.wrap.b32 	%r483, %r477, %r478, 23;
	shf.l.wrap.b32 	%r484, %r478, %r477, 23;
	mov.b64 	%rd1505, {%r484, %r483};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	ld.local.u64 	%rd9, [%rd1+48];
	ld.local.u64 	%rd10, [%rd1+40];
	xor.b64  	%rd1507, %rd9, %rd10;
	and.b64  	%rd1508, %rd1507, %rd8;
	xor.b64  	%rd1509, %rd1508, %rd9;
	ld.local.u64 	%rd11, [%rd1+56];
	ld.local.u64 	%rd18267, [%rd6];
	add.s64 	%rd1510, %rd11, %rd18267;
	ld.const.u64 	%rd1511, [k_sha512];
	add.s64 	%rd1512, %rd1510, %rd1511;
	add.s64 	%rd1513, %rd1512, %rd1509;
	add.s64 	%rd1514, %rd1513, %rd1506;
	ld.local.u64 	%rd13, [%rd1+24];
	add.s64 	%rd1515, %rd1514, %rd13;
	ld.local.u64 	%rd14, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd14;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd14;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 28;
	shf.r.wrap.b32 	%r488, %r485, %r486, 28;
	mov.b64 	%rd1516, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 30;
	shf.l.wrap.b32 	%r490, %r486, %r485, 30;
	mov.b64 	%rd1517, {%r490, %r489};
	xor.b64  	%rd1518, %rd1517, %rd1516;
	shf.l.wrap.b32 	%r491, %r485, %r486, 25;
	shf.l.wrap.b32 	%r492, %r486, %r485, 25;
	mov.b64 	%rd1519, {%r492, %r491};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	ld.local.u64 	%rd15, [%rd1+8];
	and.b64  	%rd1521, %rd15, %rd14;
	xor.b64  	%rd1522, %rd15, %rd14;
	ld.local.u64 	%rd16, [%rd1+16];
	and.b64  	%rd1523, %rd16, %rd1522;
	or.b64  	%rd1524, %rd1523, %rd1521;
	add.s64 	%rd1525, %rd1514, %rd1524;
	add.s64 	%rd1526, %rd1525, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r494}, %rd1515;
	}
	shf.r.wrap.b32 	%r495, %r494, %r493, 14;
	shf.r.wrap.b32 	%r496, %r493, %r494, 14;
	mov.b64 	%rd1527, {%r496, %r495};
	shf.r.wrap.b32 	%r497, %r494, %r493, 18;
	shf.r.wrap.b32 	%r498, %r493, %r494, 18;
	mov.b64 	%rd1528, {%r498, %r497};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	shf.l.wrap.b32 	%r499, %r493, %r494, 23;
	shf.l.wrap.b32 	%r500, %r494, %r493, 23;
	mov.b64 	%rd1530, {%r500, %r499};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	xor.b64  	%rd1532, %rd10, %rd8;
	and.b64  	%rd1533, %rd1515, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd10;
	ld.local.u64 	%rd18268, [%rd1+72];
	add.s64 	%rd1535, %rd9, %rd18268;
	ld.const.u64 	%rd1536, [k_sha512+8];
	add.s64 	%rd1537, %rd1535, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1534;
	add.s64 	%rd1539, %rd1538, %rd1531;
	add.s64 	%rd1540, %rd1539, %rd16;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd1526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd1526;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 28;
	shf.r.wrap.b32 	%r504, %r501, %r502, 28;
	mov.b64 	%rd1541, {%r504, %r503};
	shf.l.wrap.b32 	%r505, %r501, %r502, 30;
	shf.l.wrap.b32 	%r506, %r502, %r501, 30;
	mov.b64 	%rd1542, {%r506, %r505};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r507, %r501, %r502, 25;
	shf.l.wrap.b32 	%r508, %r502, %r501, 25;
	mov.b64 	%rd1544, {%r508, %r507};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	and.b64  	%rd1546, %rd1526, %rd14;
	xor.b64  	%rd1547, %rd1526, %rd14;
	and.b64  	%rd1548, %rd1547, %rd15;
	or.b64  	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1539, %rd1549;
	add.s64 	%rd1551, %rd1550, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd1540;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 14;
	shf.r.wrap.b32 	%r512, %r509, %r510, 14;
	mov.b64 	%rd1552, {%r512, %r511};
	shf.r.wrap.b32 	%r513, %r510, %r509, 18;
	shf.r.wrap.b32 	%r514, %r509, %r510, 18;
	mov.b64 	%rd1553, {%r514, %r513};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	shf.l.wrap.b32 	%r515, %r509, %r510, 23;
	shf.l.wrap.b32 	%r516, %r510, %r509, 23;
	mov.b64 	%rd1555, {%r516, %r515};
	xor.b64  	%rd1556, %rd1554, %rd1555;
	xor.b64  	%rd1557, %rd1515, %rd8;
	and.b64  	%rd1558, %rd1540, %rd1557;
	xor.b64  	%rd1559, %rd1558, %rd8;
	ld.local.u64 	%rd18269, [%rd1+80];
	add.s64 	%rd1560, %rd10, %rd18269;
	ld.const.u64 	%rd1561, [k_sha512+16];
	add.s64 	%rd1562, %rd1560, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1559;
	add.s64 	%rd1564, %rd1563, %rd1556;
	add.s64 	%rd1565, %rd1564, %rd15;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd1551;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 28;
	shf.r.wrap.b32 	%r520, %r517, %r518, 28;
	mov.b64 	%rd1566, {%r520, %r519};
	shf.l.wrap.b32 	%r521, %r517, %r518, 30;
	shf.l.wrap.b32 	%r522, %r518, %r517, 30;
	mov.b64 	%rd1567, {%r522, %r521};
	xor.b64  	%rd1568, %rd1567, %rd1566;
	shf.l.wrap.b32 	%r523, %r517, %r518, 25;
	shf.l.wrap.b32 	%r524, %r518, %r517, 25;
	mov.b64 	%rd1569, {%r524, %r523};
	xor.b64  	%rd1570, %rd1568, %rd1569;
	and.b64  	%rd1571, %rd1551, %rd1526;
	xor.b64  	%rd1572, %rd1551, %rd1526;
	and.b64  	%rd1573, %rd1572, %rd14;
	or.b64  	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1564, %rd1574;
	add.s64 	%rd1576, %rd1575, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd1565;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd1577, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd1578, {%r530, %r529};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd1580, {%r532, %r531};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	xor.b64  	%rd1582, %rd1540, %rd1515;
	and.b64  	%rd1583, %rd1565, %rd1582;
	xor.b64  	%rd1584, %rd1583, %rd1515;
	ld.local.u64 	%rd18270, [%rd1+88];
	add.s64 	%rd1585, %rd8, %rd18270;
	ld.const.u64 	%rd1586, [k_sha512+24];
	add.s64 	%rd1587, %rd1585, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1584;
	add.s64 	%rd1589, %rd1588, %rd1581;
	add.s64 	%rd1590, %rd1589, %rd14;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd1576;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd1591, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd1592, {%r538, %r537};
	xor.b64  	%rd1593, %rd1592, %rd1591;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd1594, {%r540, %r539};
	xor.b64  	%rd1595, %rd1593, %rd1594;
	and.b64  	%rd1596, %rd1576, %rd1551;
	xor.b64  	%rd1597, %rd1576, %rd1551;
	and.b64  	%rd1598, %rd1597, %rd1526;
	or.b64  	%rd1599, %rd1598, %rd1596;
	add.s64 	%rd1600, %rd1589, %rd1599;
	add.s64 	%rd1601, %rd1600, %rd1595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd1590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd1590;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 14;
	shf.r.wrap.b32 	%r544, %r541, %r542, 14;
	mov.b64 	%rd1602, {%r544, %r543};
	shf.r.wrap.b32 	%r545, %r542, %r541, 18;
	shf.r.wrap.b32 	%r546, %r541, %r542, 18;
	mov.b64 	%rd1603, {%r546, %r545};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	shf.l.wrap.b32 	%r547, %r541, %r542, 23;
	shf.l.wrap.b32 	%r548, %r542, %r541, 23;
	mov.b64 	%rd1605, {%r548, %r547};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	xor.b64  	%rd1607, %rd1565, %rd1540;
	and.b64  	%rd1608, %rd1590, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1540;
	ld.local.u64 	%rd18271, [%rd1+96];
	add.s64 	%rd1610, %rd1515, %rd18271;
	ld.const.u64 	%rd1611, [k_sha512+32];
	add.s64 	%rd1612, %rd1610, %rd1611;
	add.s64 	%rd1613, %rd1612, %rd1609;
	add.s64 	%rd1614, %rd1613, %rd1606;
	add.s64 	%rd1615, %rd1614, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd1601;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 28;
	shf.r.wrap.b32 	%r552, %r549, %r550, 28;
	mov.b64 	%rd1616, {%r552, %r551};
	shf.l.wrap.b32 	%r553, %r549, %r550, 30;
	shf.l.wrap.b32 	%r554, %r550, %r549, 30;
	mov.b64 	%rd1617, {%r554, %r553};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r555, %r549, %r550, 25;
	shf.l.wrap.b32 	%r556, %r550, %r549, 25;
	mov.b64 	%rd1619, {%r556, %r555};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	and.b64  	%rd1621, %rd1601, %rd1576;
	xor.b64  	%rd1622, %rd1601, %rd1576;
	and.b64  	%rd1623, %rd1622, %rd1551;
	or.b64  	%rd1624, %rd1623, %rd1621;
	add.s64 	%rd1625, %rd1614, %rd1624;
	add.s64 	%rd1626, %rd1625, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r557,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd1615;
	}
	shf.r.wrap.b32 	%r559, %r558, %r557, 14;
	shf.r.wrap.b32 	%r560, %r557, %r558, 14;
	mov.b64 	%rd1627, {%r560, %r559};
	shf.r.wrap.b32 	%r561, %r558, %r557, 18;
	shf.r.wrap.b32 	%r562, %r557, %r558, 18;
	mov.b64 	%rd1628, {%r562, %r561};
	xor.b64  	%rd1629, %rd1628, %rd1627;
	shf.l.wrap.b32 	%r563, %r557, %r558, 23;
	shf.l.wrap.b32 	%r564, %r558, %r557, 23;
	mov.b64 	%rd1630, {%r564, %r563};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd1590, %rd1565;
	and.b64  	%rd1633, %rd1615, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1565;
	ld.local.u64 	%rd18272, [%rd1+104];
	add.s64 	%rd1635, %rd1540, %rd18272;
	ld.const.u64 	%rd1636, [k_sha512+40];
	add.s64 	%rd1637, %rd1635, %rd1636;
	add.s64 	%rd1638, %rd1637, %rd1634;
	add.s64 	%rd1639, %rd1638, %rd1631;
	add.s64 	%rd1640, %rd1639, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd1626;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 28;
	shf.r.wrap.b32 	%r568, %r565, %r566, 28;
	mov.b64 	%rd1641, {%r568, %r567};
	shf.l.wrap.b32 	%r569, %r565, %r566, 30;
	shf.l.wrap.b32 	%r570, %r566, %r565, 30;
	mov.b64 	%rd1642, {%r570, %r569};
	xor.b64  	%rd1643, %rd1642, %rd1641;
	shf.l.wrap.b32 	%r571, %r565, %r566, 25;
	shf.l.wrap.b32 	%r572, %r566, %r565, 25;
	mov.b64 	%rd1644, {%r572, %r571};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	and.b64  	%rd1646, %rd1626, %rd1601;
	xor.b64  	%rd1647, %rd1626, %rd1601;
	and.b64  	%rd1648, %rd1647, %rd1576;
	or.b64  	%rd1649, %rd1648, %rd1646;
	add.s64 	%rd1650, %rd1639, %rd1649;
	add.s64 	%rd1651, %rd1650, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r574}, %rd1640;
	}
	shf.r.wrap.b32 	%r575, %r574, %r573, 14;
	shf.r.wrap.b32 	%r576, %r573, %r574, 14;
	mov.b64 	%rd1652, {%r576, %r575};
	shf.r.wrap.b32 	%r577, %r574, %r573, 18;
	shf.r.wrap.b32 	%r578, %r573, %r574, 18;
	mov.b64 	%rd1653, {%r578, %r577};
	xor.b64  	%rd1654, %rd1653, %rd1652;
	shf.l.wrap.b32 	%r579, %r573, %r574, 23;
	shf.l.wrap.b32 	%r580, %r574, %r573, 23;
	mov.b64 	%rd1655, {%r580, %r579};
	xor.b64  	%rd1656, %rd1654, %rd1655;
	xor.b64  	%rd1657, %rd1615, %rd1590;
	and.b64  	%rd1658, %rd1640, %rd1657;
	xor.b64  	%rd1659, %rd1658, %rd1590;
	ld.local.u64 	%rd18273, [%rd1+112];
	add.s64 	%rd1660, %rd1565, %rd18273;
	ld.const.u64 	%rd1661, [k_sha512+48];
	add.s64 	%rd1662, %rd1660, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd1659;
	add.s64 	%rd1664, %rd1663, %rd1656;
	add.s64 	%rd1665, %rd1664, %rd1576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd1651;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 28;
	shf.r.wrap.b32 	%r584, %r581, %r582, 28;
	mov.b64 	%rd1666, {%r584, %r583};
	shf.l.wrap.b32 	%r585, %r581, %r582, 30;
	shf.l.wrap.b32 	%r586, %r582, %r581, 30;
	mov.b64 	%rd1667, {%r586, %r585};
	xor.b64  	%rd1668, %rd1667, %rd1666;
	shf.l.wrap.b32 	%r587, %r581, %r582, 25;
	shf.l.wrap.b32 	%r588, %r582, %r581, 25;
	mov.b64 	%rd1669, {%r588, %r587};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	and.b64  	%rd1671, %rd1651, %rd1626;
	xor.b64  	%rd1672, %rd1651, %rd1626;
	and.b64  	%rd1673, %rd1672, %rd1601;
	or.b64  	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1664, %rd1674;
	add.s64 	%rd1676, %rd1675, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1665;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 14;
	shf.r.wrap.b32 	%r592, %r589, %r590, 14;
	mov.b64 	%rd1677, {%r592, %r591};
	shf.r.wrap.b32 	%r593, %r590, %r589, 18;
	shf.r.wrap.b32 	%r594, %r589, %r590, 18;
	mov.b64 	%rd1678, {%r594, %r593};
	xor.b64  	%rd1679, %rd1678, %rd1677;
	shf.l.wrap.b32 	%r595, %r589, %r590, 23;
	shf.l.wrap.b32 	%r596, %r590, %r589, 23;
	mov.b64 	%rd1680, {%r596, %r595};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	xor.b64  	%rd1682, %rd1640, %rd1615;
	and.b64  	%rd1683, %rd1665, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1615;
	ld.local.u64 	%rd18274, [%rd1+120];
	add.s64 	%rd1685, %rd1590, %rd18274;
	ld.const.u64 	%rd1686, [k_sha512+56];
	add.s64 	%rd1687, %rd1685, %rd1686;
	add.s64 	%rd1688, %rd1687, %rd1684;
	add.s64 	%rd1689, %rd1688, %rd1681;
	add.s64 	%rd1690, %rd1689, %rd1601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1676;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 28;
	shf.r.wrap.b32 	%r600, %r597, %r598, 28;
	mov.b64 	%rd1691, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 30;
	shf.l.wrap.b32 	%r602, %r598, %r597, 30;
	mov.b64 	%rd1692, {%r602, %r601};
	xor.b64  	%rd1693, %rd1692, %rd1691;
	shf.l.wrap.b32 	%r603, %r597, %r598, 25;
	shf.l.wrap.b32 	%r604, %r598, %r597, 25;
	mov.b64 	%rd1694, {%r604, %r603};
	xor.b64  	%rd1695, %rd1693, %rd1694;
	and.b64  	%rd1696, %rd1676, %rd1651;
	xor.b64  	%rd1697, %rd1676, %rd1651;
	and.b64  	%rd1698, %rd1697, %rd1626;
	or.b64  	%rd1699, %rd1698, %rd1696;
	add.s64 	%rd1700, %rd1689, %rd1699;
	add.s64 	%rd1701, %rd1700, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd1690;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 14;
	shf.r.wrap.b32 	%r608, %r605, %r606, 14;
	mov.b64 	%rd1702, {%r608, %r607};
	shf.r.wrap.b32 	%r609, %r606, %r605, 18;
	shf.r.wrap.b32 	%r610, %r605, %r606, 18;
	mov.b64 	%rd1703, {%r610, %r609};
	xor.b64  	%rd1704, %rd1703, %rd1702;
	shf.l.wrap.b32 	%r611, %r605, %r606, 23;
	shf.l.wrap.b32 	%r612, %r606, %r605, 23;
	mov.b64 	%rd1705, {%r612, %r611};
	xor.b64  	%rd1706, %rd1704, %rd1705;
	xor.b64  	%rd1707, %rd1665, %rd1640;
	and.b64  	%rd1708, %rd1690, %rd1707;
	xor.b64  	%rd1709, %rd1708, %rd1640;
	ld.local.u64 	%rd18258, [%rd1+128];
	add.s64 	%rd1710, %rd1615, %rd18258;
	ld.const.u64 	%rd1711, [k_sha512+64];
	add.s64 	%rd1712, %rd1710, %rd1711;
	add.s64 	%rd1713, %rd1712, %rd1709;
	add.s64 	%rd1714, %rd1713, %rd1706;
	add.s64 	%rd1715, %rd1714, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd1701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd1701;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 28;
	shf.r.wrap.b32 	%r616, %r613, %r614, 28;
	mov.b64 	%rd1716, {%r616, %r615};
	shf.l.wrap.b32 	%r617, %r613, %r614, 30;
	shf.l.wrap.b32 	%r618, %r614, %r613, 30;
	mov.b64 	%rd1717, {%r618, %r617};
	xor.b64  	%rd1718, %rd1717, %rd1716;
	shf.l.wrap.b32 	%r619, %r613, %r614, 25;
	shf.l.wrap.b32 	%r620, %r614, %r613, 25;
	mov.b64 	%rd1719, {%r620, %r619};
	xor.b64  	%rd1720, %rd1718, %rd1719;
	and.b64  	%rd1721, %rd1701, %rd1676;
	xor.b64  	%rd1722, %rd1701, %rd1676;
	and.b64  	%rd1723, %rd1722, %rd1651;
	or.b64  	%rd1724, %rd1723, %rd1721;
	add.s64 	%rd1725, %rd1714, %rd1724;
	add.s64 	%rd1726, %rd1725, %rd1720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd1715;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 14;
	shf.r.wrap.b32 	%r624, %r621, %r622, 14;
	mov.b64 	%rd1727, {%r624, %r623};
	shf.r.wrap.b32 	%r625, %r622, %r621, 18;
	shf.r.wrap.b32 	%r626, %r621, %r622, 18;
	mov.b64 	%rd1728, {%r626, %r625};
	xor.b64  	%rd1729, %rd1728, %rd1727;
	shf.l.wrap.b32 	%r627, %r621, %r622, 23;
	shf.l.wrap.b32 	%r628, %r622, %r621, 23;
	mov.b64 	%rd1730, {%r628, %r627};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	xor.b64  	%rd1732, %rd1690, %rd1665;
	and.b64  	%rd1733, %rd1715, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1665;
	ld.local.u64 	%rd18257, [%rd1+136];
	add.s64 	%rd1735, %rd1640, %rd18257;
	ld.const.u64 	%rd1736, [k_sha512+72];
	add.s64 	%rd1737, %rd1735, %rd1736;
	add.s64 	%rd1738, %rd1737, %rd1734;
	add.s64 	%rd1739, %rd1738, %rd1731;
	add.s64 	%rd1740, %rd1739, %rd1651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd1726;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 28;
	shf.r.wrap.b32 	%r632, %r629, %r630, 28;
	mov.b64 	%rd1741, {%r632, %r631};
	shf.l.wrap.b32 	%r633, %r629, %r630, 30;
	shf.l.wrap.b32 	%r634, %r630, %r629, 30;
	mov.b64 	%rd1742, {%r634, %r633};
	xor.b64  	%rd1743, %rd1742, %rd1741;
	shf.l.wrap.b32 	%r635, %r629, %r630, 25;
	shf.l.wrap.b32 	%r636, %r630, %r629, 25;
	mov.b64 	%rd1744, {%r636, %r635};
	xor.b64  	%rd1745, %rd1743, %rd1744;
	and.b64  	%rd1746, %rd1726, %rd1701;
	xor.b64  	%rd1747, %rd1726, %rd1701;
	and.b64  	%rd1748, %rd1747, %rd1676;
	or.b64  	%rd1749, %rd1748, %rd1746;
	add.s64 	%rd1750, %rd1739, %rd1749;
	add.s64 	%rd1751, %rd1750, %rd1745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1740;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd1752, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd1753, {%r642, %r641};
	xor.b64  	%rd1754, %rd1753, %rd1752;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd1755, {%r644, %r643};
	xor.b64  	%rd1756, %rd1754, %rd1755;
	xor.b64  	%rd1757, %rd1715, %rd1690;
	and.b64  	%rd1758, %rd1740, %rd1757;
	xor.b64  	%rd1759, %rd1758, %rd1690;
	ld.local.u64 	%rd18256, [%rd1+144];
	add.s64 	%rd1760, %rd1665, %rd18256;
	ld.const.u64 	%rd1761, [k_sha512+80];
	add.s64 	%rd1762, %rd1760, %rd1761;
	add.s64 	%rd1763, %rd1762, %rd1759;
	add.s64 	%rd1764, %rd1763, %rd1756;
	add.s64 	%rd1765, %rd1764, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1751;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd1766, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd1767, {%r650, %r649};
	xor.b64  	%rd1768, %rd1767, %rd1766;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd1769, {%r652, %r651};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	and.b64  	%rd1771, %rd1751, %rd1726;
	xor.b64  	%rd1772, %rd1751, %rd1726;
	and.b64  	%rd1773, %rd1772, %rd1701;
	or.b64  	%rd1774, %rd1773, %rd1771;
	add.s64 	%rd1775, %rd1764, %rd1774;
	add.s64 	%rd1776, %rd1775, %rd1770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1765;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 14;
	shf.r.wrap.b32 	%r656, %r653, %r654, 14;
	mov.b64 	%rd1777, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 18;
	shf.r.wrap.b32 	%r658, %r653, %r654, 18;
	mov.b64 	%rd1778, {%r658, %r657};
	xor.b64  	%rd1779, %rd1778, %rd1777;
	shf.l.wrap.b32 	%r659, %r653, %r654, 23;
	shf.l.wrap.b32 	%r660, %r654, %r653, 23;
	mov.b64 	%rd1780, {%r660, %r659};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	xor.b64  	%rd1782, %rd1740, %rd1715;
	and.b64  	%rd1783, %rd1765, %rd1782;
	xor.b64  	%rd1784, %rd1783, %rd1715;
	ld.local.u64 	%rd18255, [%rd1+152];
	add.s64 	%rd1785, %rd1690, %rd18255;
	ld.const.u64 	%rd1786, [k_sha512+88];
	add.s64 	%rd1787, %rd1785, %rd1786;
	add.s64 	%rd1788, %rd1787, %rd1784;
	add.s64 	%rd1789, %rd1788, %rd1781;
	add.s64 	%rd1790, %rd1789, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd1776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd1776;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 28;
	shf.r.wrap.b32 	%r664, %r661, %r662, 28;
	mov.b64 	%rd1791, {%r664, %r663};
	shf.l.wrap.b32 	%r665, %r661, %r662, 30;
	shf.l.wrap.b32 	%r666, %r662, %r661, 30;
	mov.b64 	%rd1792, {%r666, %r665};
	xor.b64  	%rd1793, %rd1792, %rd1791;
	shf.l.wrap.b32 	%r667, %r661, %r662, 25;
	shf.l.wrap.b32 	%r668, %r662, %r661, 25;
	mov.b64 	%rd1794, {%r668, %r667};
	xor.b64  	%rd1795, %rd1793, %rd1794;
	and.b64  	%rd1796, %rd1776, %rd1751;
	xor.b64  	%rd1797, %rd1776, %rd1751;
	and.b64  	%rd1798, %rd1797, %rd1726;
	or.b64  	%rd1799, %rd1798, %rd1796;
	add.s64 	%rd1800, %rd1789, %rd1799;
	add.s64 	%rd1801, %rd1800, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1790;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 14;
	shf.r.wrap.b32 	%r672, %r669, %r670, 14;
	mov.b64 	%rd1802, {%r672, %r671};
	shf.r.wrap.b32 	%r673, %r670, %r669, 18;
	shf.r.wrap.b32 	%r674, %r669, %r670, 18;
	mov.b64 	%rd1803, {%r674, %r673};
	xor.b64  	%rd1804, %rd1803, %rd1802;
	shf.l.wrap.b32 	%r675, %r669, %r670, 23;
	shf.l.wrap.b32 	%r676, %r670, %r669, 23;
	mov.b64 	%rd1805, {%r676, %r675};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	xor.b64  	%rd1807, %rd1765, %rd1740;
	and.b64  	%rd1808, %rd1790, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1740;
	ld.local.u64 	%rd18254, [%rd1+160];
	add.s64 	%rd1810, %rd1715, %rd18254;
	ld.const.u64 	%rd1811, [k_sha512+96];
	add.s64 	%rd1812, %rd1810, %rd1811;
	add.s64 	%rd1813, %rd1812, %rd1809;
	add.s64 	%rd1814, %rd1813, %rd1806;
	add.s64 	%rd18266, %rd1814, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1801;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 28;
	shf.r.wrap.b32 	%r680, %r677, %r678, 28;
	mov.b64 	%rd1815, {%r680, %r679};
	shf.l.wrap.b32 	%r681, %r677, %r678, 30;
	shf.l.wrap.b32 	%r682, %r678, %r677, 30;
	mov.b64 	%rd1816, {%r682, %r681};
	xor.b64  	%rd1817, %rd1816, %rd1815;
	shf.l.wrap.b32 	%r683, %r677, %r678, 25;
	shf.l.wrap.b32 	%r684, %r678, %r677, 25;
	mov.b64 	%rd1818, {%r684, %r683};
	xor.b64  	%rd1819, %rd1817, %rd1818;
	and.b64  	%rd1820, %rd1801, %rd1776;
	xor.b64  	%rd1821, %rd1801, %rd1776;
	and.b64  	%rd1822, %rd1821, %rd1751;
	or.b64  	%rd1823, %rd1822, %rd1820;
	add.s64 	%rd1824, %rd1814, %rd1823;
	add.s64 	%rd18262, %rd1824, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd18266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd18266;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 14;
	shf.r.wrap.b32 	%r688, %r685, %r686, 14;
	mov.b64 	%rd1825, {%r688, %r687};
	shf.r.wrap.b32 	%r689, %r686, %r685, 18;
	shf.r.wrap.b32 	%r690, %r685, %r686, 18;
	mov.b64 	%rd1826, {%r690, %r689};
	xor.b64  	%rd1827, %rd1826, %rd1825;
	shf.l.wrap.b32 	%r691, %r685, %r686, 23;
	shf.l.wrap.b32 	%r692, %r686, %r685, 23;
	mov.b64 	%rd1828, {%r692, %r691};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	xor.b64  	%rd1830, %rd1790, %rd1765;
	and.b64  	%rd1831, %rd18266, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1765;
	ld.local.u64 	%rd18253, [%rd1+168];
	add.s64 	%rd1833, %rd1740, %rd18253;
	ld.const.u64 	%rd1834, [k_sha512+104];
	add.s64 	%rd1835, %rd1833, %rd1834;
	add.s64 	%rd1836, %rd1835, %rd1832;
	add.s64 	%rd1837, %rd1836, %rd1829;
	add.s64 	%rd18265, %rd1837, %rd1751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd18262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd18262;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 28;
	shf.r.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1838, {%r696, %r695};
	shf.l.wrap.b32 	%r697, %r693, %r694, 30;
	shf.l.wrap.b32 	%r698, %r694, %r693, 30;
	mov.b64 	%rd1839, {%r698, %r697};
	xor.b64  	%rd1840, %rd1839, %rd1838;
	shf.l.wrap.b32 	%r699, %r693, %r694, 25;
	shf.l.wrap.b32 	%r700, %r694, %r693, 25;
	mov.b64 	%rd1841, {%r700, %r699};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	and.b64  	%rd1843, %rd18262, %rd1801;
	xor.b64  	%rd1844, %rd18262, %rd1801;
	and.b64  	%rd1845, %rd1844, %rd1776;
	or.b64  	%rd1846, %rd1845, %rd1843;
	add.s64 	%rd1847, %rd1837, %rd1846;
	add.s64 	%rd18261, %rd1847, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd18265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd18265;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 14;
	shf.r.wrap.b32 	%r704, %r701, %r702, 14;
	mov.b64 	%rd1848, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r702, %r701, 18;
	shf.r.wrap.b32 	%r706, %r701, %r702, 18;
	mov.b64 	%rd1849, {%r706, %r705};
	xor.b64  	%rd1850, %rd1849, %rd1848;
	shf.l.wrap.b32 	%r707, %r701, %r702, 23;
	shf.l.wrap.b32 	%r708, %r702, %r701, 23;
	mov.b64 	%rd1851, {%r708, %r707};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	xor.b64  	%rd1853, %rd18266, %rd1790;
	and.b64  	%rd1854, %rd18265, %rd1853;
	xor.b64  	%rd1855, %rd1854, %rd1790;
	ld.local.u64 	%rd18252, [%rd1+176];
	add.s64 	%rd1856, %rd1765, %rd18252;
	ld.const.u64 	%rd1857, [k_sha512+112];
	add.s64 	%rd1858, %rd1856, %rd1857;
	add.s64 	%rd1859, %rd1858, %rd1855;
	add.s64 	%rd1860, %rd1859, %rd1852;
	add.s64 	%rd18264, %rd1860, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd18261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd18261;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 28;
	shf.r.wrap.b32 	%r712, %r709, %r710, 28;
	mov.b64 	%rd1861, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 30;
	shf.l.wrap.b32 	%r714, %r710, %r709, 30;
	mov.b64 	%rd1862, {%r714, %r713};
	xor.b64  	%rd1863, %rd1862, %rd1861;
	shf.l.wrap.b32 	%r715, %r709, %r710, 25;
	shf.l.wrap.b32 	%r716, %r710, %r709, 25;
	mov.b64 	%rd1864, {%r716, %r715};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	and.b64  	%rd1866, %rd18261, %rd18262;
	xor.b64  	%rd1867, %rd18261, %rd18262;
	and.b64  	%rd1868, %rd1867, %rd1801;
	or.b64  	%rd1869, %rd1868, %rd1866;
	add.s64 	%rd1870, %rd1860, %rd1869;
	add.s64 	%rd18260, %rd1870, %rd1865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd18264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd18264;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 14;
	shf.r.wrap.b32 	%r720, %r717, %r718, 14;
	mov.b64 	%rd1871, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r718, %r717, 18;
	shf.r.wrap.b32 	%r722, %r717, %r718, 18;
	mov.b64 	%rd1872, {%r722, %r721};
	xor.b64  	%rd1873, %rd1872, %rd1871;
	shf.l.wrap.b32 	%r723, %r717, %r718, 23;
	shf.l.wrap.b32 	%r724, %r718, %r717, 23;
	mov.b64 	%rd1874, {%r724, %r723};
	xor.b64  	%rd1875, %rd1873, %rd1874;
	xor.b64  	%rd1876, %rd18265, %rd18266;
	and.b64  	%rd1877, %rd18264, %rd1876;
	xor.b64  	%rd1878, %rd1877, %rd18266;
	ld.local.u64 	%rd18251, [%rd1+184];
	add.s64 	%rd1879, %rd1790, %rd18251;
	ld.const.u64 	%rd1880, [k_sha512+120];
	add.s64 	%rd1881, %rd1879, %rd1880;
	add.s64 	%rd1882, %rd1881, %rd1878;
	add.s64 	%rd1883, %rd1882, %rd1875;
	add.s64 	%rd18263, %rd1883, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd18260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd18260;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 28;
	shf.r.wrap.b32 	%r728, %r725, %r726, 28;
	mov.b64 	%rd1884, {%r728, %r727};
	shf.l.wrap.b32 	%r729, %r725, %r726, 30;
	shf.l.wrap.b32 	%r730, %r726, %r725, 30;
	mov.b64 	%rd1885, {%r730, %r729};
	xor.b64  	%rd1886, %rd1885, %rd1884;
	shf.l.wrap.b32 	%r731, %r725, %r726, 25;
	shf.l.wrap.b32 	%r732, %r726, %r725, 25;
	mov.b64 	%rd1887, {%r732, %r731};
	xor.b64  	%rd1888, %rd1886, %rd1887;
	and.b64  	%rd1889, %rd18260, %rd18261;
	xor.b64  	%rd1890, %rd18260, %rd18261;
	and.b64  	%rd1891, %rd1890, %rd18262;
	or.b64  	%rd1892, %rd1891, %rd1889;
	add.s64 	%rd1893, %rd1883, %rd1892;
	add.s64 	%rd18259, %rd1893, %rd1888;
	mov.u32 	%r12557, 16;

BB0_16:
	shr.u64 	%rd1894, %rd18252, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd18252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd18252;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 19;
	shf.r.wrap.b32 	%r736, %r733, %r734, 19;
	mov.b64 	%rd1895, {%r736, %r735};
	xor.b64  	%rd1896, %rd1895, %rd1894;
	shf.l.wrap.b32 	%r737, %r733, %r734, 3;
	shf.l.wrap.b32 	%r738, %r734, %r733, 3;
	mov.b64 	%rd1897, {%r738, %r737};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	shr.u64 	%rd1899, %rd18268, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd18268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd18268;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 1;
	shf.r.wrap.b32 	%r742, %r739, %r740, 1;
	mov.b64 	%rd1900, {%r742, %r741};
	xor.b64  	%rd1901, %rd1900, %rd1899;
	shf.r.wrap.b32 	%r743, %r740, %r739, 8;
	shf.r.wrap.b32 	%r744, %r739, %r740, 8;
	mov.b64 	%rd1902, {%r744, %r743};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	add.s64 	%rd1904, %rd18257, %rd18267;
	add.s64 	%rd1905, %rd1904, %rd1898;
	add.s64 	%rd18267, %rd1905, %rd1903;
	shr.u64 	%rd1906, %rd18251, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd18251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd18251;
	}
	shf.r.wrap.b32 	%r747, %r746, %r745, 19;
	shf.r.wrap.b32 	%r748, %r745, %r746, 19;
	mov.b64 	%rd1907, {%r748, %r747};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r749, %r745, %r746, 3;
	shf.l.wrap.b32 	%r750, %r746, %r745, 3;
	mov.b64 	%rd1909, {%r750, %r749};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	shr.u64 	%rd1911, %rd18269, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd18269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd18269;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 1;
	shf.r.wrap.b32 	%r754, %r751, %r752, 1;
	mov.b64 	%rd1912, {%r754, %r753};
	xor.b64  	%rd1913, %rd1912, %rd1911;
	shf.r.wrap.b32 	%r755, %r752, %r751, 8;
	shf.r.wrap.b32 	%r756, %r751, %r752, 8;
	mov.b64 	%rd1914, {%r756, %r755};
	xor.b64  	%rd1915, %rd1913, %rd1914;
	add.s64 	%rd1916, %rd18256, %rd18268;
	add.s64 	%rd1917, %rd1916, %rd1910;
	add.s64 	%rd18268, %rd1917, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd18267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd18267;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 19;
	shf.r.wrap.b32 	%r760, %r757, %r758, 19;
	mov.b64 	%rd1918, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 3;
	shf.l.wrap.b32 	%r762, %r758, %r757, 3;
	mov.b64 	%rd1919, {%r762, %r761};
	shr.u64 	%rd1920, %rd18267, 6;
	xor.b64  	%rd1921, %rd1918, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1919;
	shr.u64 	%rd1923, %rd18270, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd18270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd18270;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 1;
	shf.r.wrap.b32 	%r766, %r763, %r764, 1;
	mov.b64 	%rd1924, {%r766, %r765};
	xor.b64  	%rd1925, %rd1924, %rd1923;
	shf.r.wrap.b32 	%r767, %r764, %r763, 8;
	shf.r.wrap.b32 	%r768, %r763, %r764, 8;
	mov.b64 	%rd1926, {%r768, %r767};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	add.s64 	%rd1928, %rd18255, %rd18269;
	add.s64 	%rd1929, %rd1928, %rd1922;
	add.s64 	%rd18269, %rd1929, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd18268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd18268;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 19;
	shf.r.wrap.b32 	%r772, %r769, %r770, 19;
	mov.b64 	%rd1930, {%r772, %r771};
	shf.l.wrap.b32 	%r773, %r769, %r770, 3;
	shf.l.wrap.b32 	%r774, %r770, %r769, 3;
	mov.b64 	%rd1931, {%r774, %r773};
	shr.u64 	%rd1932, %rd18268, 6;
	xor.b64  	%rd1933, %rd1930, %rd1932;
	xor.b64  	%rd1934, %rd1933, %rd1931;
	shr.u64 	%rd1935, %rd18271, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd18271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd18271;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 1;
	shf.r.wrap.b32 	%r778, %r775, %r776, 1;
	mov.b64 	%rd1936, {%r778, %r777};
	xor.b64  	%rd1937, %rd1936, %rd1935;
	shf.r.wrap.b32 	%r779, %r776, %r775, 8;
	shf.r.wrap.b32 	%r780, %r775, %r776, 8;
	mov.b64 	%rd1938, {%r780, %r779};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	add.s64 	%rd1940, %rd18254, %rd18270;
	add.s64 	%rd1941, %rd1940, %rd1934;
	add.s64 	%rd18270, %rd1941, %rd1939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd18269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r782}, %rd18269;
	}
	shf.r.wrap.b32 	%r783, %r782, %r781, 19;
	shf.r.wrap.b32 	%r784, %r781, %r782, 19;
	mov.b64 	%rd1942, {%r784, %r783};
	shf.l.wrap.b32 	%r785, %r781, %r782, 3;
	shf.l.wrap.b32 	%r786, %r782, %r781, 3;
	mov.b64 	%rd1943, {%r786, %r785};
	shr.u64 	%rd1944, %rd18269, 6;
	xor.b64  	%rd1945, %rd1942, %rd1944;
	xor.b64  	%rd1946, %rd1945, %rd1943;
	shr.u64 	%rd1947, %rd18272, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd18272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd18272;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 1;
	shf.r.wrap.b32 	%r790, %r787, %r788, 1;
	mov.b64 	%rd1948, {%r790, %r789};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	shf.r.wrap.b32 	%r791, %r788, %r787, 8;
	shf.r.wrap.b32 	%r792, %r787, %r788, 8;
	mov.b64 	%rd1950, {%r792, %r791};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	add.s64 	%rd1952, %rd18253, %rd18271;
	add.s64 	%rd1953, %rd1952, %rd1946;
	add.s64 	%rd18271, %rd1953, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd18270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd18270;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 19;
	shf.r.wrap.b32 	%r796, %r793, %r794, 19;
	mov.b64 	%rd1954, {%r796, %r795};
	shf.l.wrap.b32 	%r797, %r793, %r794, 3;
	shf.l.wrap.b32 	%r798, %r794, %r793, 3;
	mov.b64 	%rd1955, {%r798, %r797};
	shr.u64 	%rd1956, %rd18270, 6;
	xor.b64  	%rd1957, %rd1954, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1955;
	shr.u64 	%rd1959, %rd18273, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd18273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd18273;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 1;
	shf.r.wrap.b32 	%r802, %r799, %r800, 1;
	mov.b64 	%rd1960, {%r802, %r801};
	xor.b64  	%rd1961, %rd1960, %rd1959;
	shf.r.wrap.b32 	%r803, %r800, %r799, 8;
	shf.r.wrap.b32 	%r804, %r799, %r800, 8;
	mov.b64 	%rd1962, {%r804, %r803};
	xor.b64  	%rd1963, %rd1961, %rd1962;
	add.s64 	%rd1964, %rd18252, %rd18272;
	add.s64 	%rd1965, %rd1964, %rd1958;
	add.s64 	%rd18272, %rd1965, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd18271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd18271;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 19;
	shf.r.wrap.b32 	%r808, %r805, %r806, 19;
	mov.b64 	%rd1966, {%r808, %r807};
	shf.l.wrap.b32 	%r809, %r805, %r806, 3;
	shf.l.wrap.b32 	%r810, %r806, %r805, 3;
	mov.b64 	%rd1967, {%r810, %r809};
	shr.u64 	%rd1968, %rd18271, 6;
	xor.b64  	%rd1969, %rd1966, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1967;
	shr.u64 	%rd1971, %rd18274, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r811,%dummy}, %rd18274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd18274;
	}
	shf.r.wrap.b32 	%r813, %r812, %r811, 1;
	shf.r.wrap.b32 	%r814, %r811, %r812, 1;
	mov.b64 	%rd1972, {%r814, %r813};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.r.wrap.b32 	%r815, %r812, %r811, 8;
	shf.r.wrap.b32 	%r816, %r811, %r812, 8;
	mov.b64 	%rd1974, {%r816, %r815};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	add.s64 	%rd1976, %rd18251, %rd18273;
	add.s64 	%rd1977, %rd1976, %rd1970;
	add.s64 	%rd18273, %rd1977, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd18272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd18272;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 19;
	shf.r.wrap.b32 	%r820, %r817, %r818, 19;
	mov.b64 	%rd1978, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 3;
	shf.l.wrap.b32 	%r822, %r818, %r817, 3;
	mov.b64 	%rd1979, {%r822, %r821};
	shr.u64 	%rd1980, %rd18272, 6;
	xor.b64  	%rd1981, %rd1978, %rd1980;
	xor.b64  	%rd1982, %rd1981, %rd1979;
	shr.u64 	%rd1983, %rd18258, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r823,%dummy}, %rd18258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd18258;
	}
	shf.r.wrap.b32 	%r825, %r824, %r823, 1;
	shf.r.wrap.b32 	%r826, %r823, %r824, 1;
	mov.b64 	%rd1984, {%r826, %r825};
	xor.b64  	%rd1985, %rd1984, %rd1983;
	shf.r.wrap.b32 	%r827, %r824, %r823, 8;
	shf.r.wrap.b32 	%r828, %r823, %r824, 8;
	mov.b64 	%rd1986, {%r828, %r827};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	add.s64 	%rd1988, %rd18267, %rd18274;
	add.s64 	%rd1989, %rd1988, %rd1982;
	add.s64 	%rd18274, %rd1989, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd18273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd18273;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 19;
	shf.r.wrap.b32 	%r832, %r829, %r830, 19;
	mov.b64 	%rd1990, {%r832, %r831};
	shf.l.wrap.b32 	%r833, %r829, %r830, 3;
	shf.l.wrap.b32 	%r834, %r830, %r829, 3;
	mov.b64 	%rd1991, {%r834, %r833};
	shr.u64 	%rd1992, %rd18273, 6;
	xor.b64  	%rd1993, %rd1990, %rd1992;
	xor.b64  	%rd1994, %rd1993, %rd1991;
	shr.u64 	%rd1995, %rd18257, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd18257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd18257;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 1;
	shf.r.wrap.b32 	%r838, %r835, %r836, 1;
	mov.b64 	%rd1996, {%r838, %r837};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.r.wrap.b32 	%r839, %r836, %r835, 8;
	shf.r.wrap.b32 	%r840, %r835, %r836, 8;
	mov.b64 	%rd1998, {%r840, %r839};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	add.s64 	%rd2000, %rd18268, %rd18258;
	add.s64 	%rd2001, %rd2000, %rd1994;
	add.s64 	%rd18258, %rd2001, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd18274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd18274;
	}
	shf.r.wrap.b32 	%r843, %r842, %r841, 19;
	shf.r.wrap.b32 	%r844, %r841, %r842, 19;
	mov.b64 	%rd2002, {%r844, %r843};
	shf.l.wrap.b32 	%r845, %r841, %r842, 3;
	shf.l.wrap.b32 	%r846, %r842, %r841, 3;
	mov.b64 	%rd2003, {%r846, %r845};
	shr.u64 	%rd2004, %rd18274, 6;
	xor.b64  	%rd2005, %rd2002, %rd2004;
	xor.b64  	%rd2006, %rd2005, %rd2003;
	shr.u64 	%rd2007, %rd18256, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd18256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd18256;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 1;
	shf.r.wrap.b32 	%r850, %r847, %r848, 1;
	mov.b64 	%rd2008, {%r850, %r849};
	xor.b64  	%rd2009, %rd2008, %rd2007;
	shf.r.wrap.b32 	%r851, %r848, %r847, 8;
	shf.r.wrap.b32 	%r852, %r847, %r848, 8;
	mov.b64 	%rd2010, {%r852, %r851};
	xor.b64  	%rd2011, %rd2009, %rd2010;
	add.s64 	%rd2012, %rd18269, %rd18257;
	add.s64 	%rd2013, %rd2012, %rd2006;
	add.s64 	%rd18257, %rd2013, %rd2011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd18258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd18258;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 19;
	shf.r.wrap.b32 	%r856, %r853, %r854, 19;
	mov.b64 	%rd2014, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 3;
	shf.l.wrap.b32 	%r858, %r854, %r853, 3;
	mov.b64 	%rd2015, {%r858, %r857};
	shr.u64 	%rd2016, %rd18258, 6;
	xor.b64  	%rd2017, %rd2014, %rd2016;
	xor.b64  	%rd2018, %rd2017, %rd2015;
	shr.u64 	%rd2019, %rd18255, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd18255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd18255;
	}
	shf.r.wrap.b32 	%r861, %r860, %r859, 1;
	shf.r.wrap.b32 	%r862, %r859, %r860, 1;
	mov.b64 	%rd2020, {%r862, %r861};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.r.wrap.b32 	%r863, %r860, %r859, 8;
	shf.r.wrap.b32 	%r864, %r859, %r860, 8;
	mov.b64 	%rd2022, {%r864, %r863};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	add.s64 	%rd2024, %rd18270, %rd18256;
	add.s64 	%rd2025, %rd2024, %rd2018;
	add.s64 	%rd18256, %rd2025, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd18257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd18257;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 19;
	shf.r.wrap.b32 	%r868, %r865, %r866, 19;
	mov.b64 	%rd2026, {%r868, %r867};
	shf.l.wrap.b32 	%r869, %r865, %r866, 3;
	shf.l.wrap.b32 	%r870, %r866, %r865, 3;
	mov.b64 	%rd2027, {%r870, %r869};
	shr.u64 	%rd2028, %rd18257, 6;
	xor.b64  	%rd2029, %rd2026, %rd2028;
	xor.b64  	%rd2030, %rd2029, %rd2027;
	shr.u64 	%rd2031, %rd18254, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd18254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd18254;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 1;
	shf.r.wrap.b32 	%r874, %r871, %r872, 1;
	mov.b64 	%rd2032, {%r874, %r873};
	xor.b64  	%rd2033, %rd2032, %rd2031;
	shf.r.wrap.b32 	%r875, %r872, %r871, 8;
	shf.r.wrap.b32 	%r876, %r871, %r872, 8;
	mov.b64 	%rd2034, {%r876, %r875};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	add.s64 	%rd2036, %rd18271, %rd18255;
	add.s64 	%rd2037, %rd2036, %rd2030;
	add.s64 	%rd18255, %rd2037, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd18256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd18256;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 19;
	shf.r.wrap.b32 	%r880, %r877, %r878, 19;
	mov.b64 	%rd2038, {%r880, %r879};
	shf.l.wrap.b32 	%r881, %r877, %r878, 3;
	shf.l.wrap.b32 	%r882, %r878, %r877, 3;
	mov.b64 	%rd2039, {%r882, %r881};
	shr.u64 	%rd2040, %rd18256, 6;
	xor.b64  	%rd2041, %rd2038, %rd2040;
	xor.b64  	%rd2042, %rd2041, %rd2039;
	shr.u64 	%rd2043, %rd18253, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r883,%dummy}, %rd18253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd18253;
	}
	shf.r.wrap.b32 	%r885, %r884, %r883, 1;
	shf.r.wrap.b32 	%r886, %r883, %r884, 1;
	mov.b64 	%rd2044, {%r886, %r885};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.r.wrap.b32 	%r887, %r884, %r883, 8;
	shf.r.wrap.b32 	%r888, %r883, %r884, 8;
	mov.b64 	%rd2046, {%r888, %r887};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	add.s64 	%rd2048, %rd18272, %rd18254;
	add.s64 	%rd2049, %rd2048, %rd2042;
	add.s64 	%rd18254, %rd2049, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r889,%dummy}, %rd18255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r890}, %rd18255;
	}
	shf.r.wrap.b32 	%r891, %r890, %r889, 19;
	shf.r.wrap.b32 	%r892, %r889, %r890, 19;
	mov.b64 	%rd2050, {%r892, %r891};
	shf.l.wrap.b32 	%r893, %r889, %r890, 3;
	shf.l.wrap.b32 	%r894, %r890, %r889, 3;
	mov.b64 	%rd2051, {%r894, %r893};
	shr.u64 	%rd2052, %rd18255, 6;
	xor.b64  	%rd2053, %rd2050, %rd2052;
	xor.b64  	%rd2054, %rd2053, %rd2051;
	shr.u64 	%rd2055, %rd18252, 7;
	shf.r.wrap.b32 	%r895, %r734, %r733, 1;
	shf.r.wrap.b32 	%r896, %r733, %r734, 1;
	mov.b64 	%rd2056, {%r896, %r895};
	xor.b64  	%rd2057, %rd2056, %rd2055;
	shf.r.wrap.b32 	%r897, %r734, %r733, 8;
	shf.r.wrap.b32 	%r898, %r733, %r734, 8;
	mov.b64 	%rd2058, {%r898, %r897};
	xor.b64  	%rd2059, %rd2057, %rd2058;
	add.s64 	%rd2060, %rd18273, %rd18253;
	add.s64 	%rd2061, %rd2060, %rd2054;
	add.s64 	%rd18253, %rd2061, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd18254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd18254;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 19;
	shf.r.wrap.b32 	%r902, %r899, %r900, 19;
	mov.b64 	%rd2062, {%r902, %r901};
	shf.l.wrap.b32 	%r903, %r899, %r900, 3;
	shf.l.wrap.b32 	%r904, %r900, %r899, 3;
	mov.b64 	%rd2063, {%r904, %r903};
	shr.u64 	%rd2064, %rd18254, 6;
	xor.b64  	%rd2065, %rd2062, %rd2064;
	xor.b64  	%rd2066, %rd2065, %rd2063;
	shr.u64 	%rd2067, %rd18251, 7;
	shf.r.wrap.b32 	%r905, %r746, %r745, 1;
	shf.r.wrap.b32 	%r906, %r745, %r746, 1;
	mov.b64 	%rd2068, {%r906, %r905};
	xor.b64  	%rd2069, %rd2068, %rd2067;
	shf.r.wrap.b32 	%r907, %r746, %r745, 8;
	shf.r.wrap.b32 	%r908, %r745, %r746, 8;
	mov.b64 	%rd2070, {%r908, %r907};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	add.s64 	%rd2072, %rd18274, %rd18252;
	add.s64 	%rd2073, %rd2072, %rd2066;
	add.s64 	%rd18252, %rd2073, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd18253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd18253;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 19;
	shf.r.wrap.b32 	%r912, %r909, %r910, 19;
	mov.b64 	%rd2074, {%r912, %r911};
	shf.l.wrap.b32 	%r913, %r909, %r910, 3;
	shf.l.wrap.b32 	%r914, %r910, %r909, 3;
	mov.b64 	%rd2075, {%r914, %r913};
	shr.u64 	%rd2076, %rd18253, 6;
	xor.b64  	%rd2077, %rd2074, %rd2076;
	xor.b64  	%rd2078, %rd2077, %rd2075;
	shf.r.wrap.b32 	%r915, %r758, %r757, 1;
	shf.r.wrap.b32 	%r916, %r757, %r758, 1;
	mov.b64 	%rd2079, {%r916, %r915};
	shf.r.wrap.b32 	%r917, %r758, %r757, 8;
	shf.r.wrap.b32 	%r918, %r757, %r758, 8;
	mov.b64 	%rd2080, {%r918, %r917};
	shr.u64 	%rd2081, %rd18267, 7;
	xor.b64  	%rd2082, %rd2079, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2080;
	add.s64 	%rd2084, %rd18258, %rd18251;
	add.s64 	%rd2085, %rd2084, %rd2078;
	add.s64 	%rd18251, %rd2085, %rd2083;
	mul.wide.s32 	%rd2086, %r12557, 8;
	mov.u64 	%rd2087, k_sha512;
	add.s64 	%rd2088, %rd2087, %rd2086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd18263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd18263;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 18;
	shf.r.wrap.b32 	%r922, %r919, %r920, 18;
	mov.b64 	%rd2089, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 14;
	shf.r.wrap.b32 	%r924, %r919, %r920, 14;
	mov.b64 	%rd2090, {%r924, %r923};
	xor.b64  	%rd2091, %rd2089, %rd2090;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd2092, {%r926, %r925};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	xor.b64  	%rd2094, %rd18264, %rd18265;
	and.b64  	%rd2095, %rd18263, %rd2094;
	xor.b64  	%rd2096, %rd2095, %rd18265;
	add.s64 	%rd2097, %rd2096, %rd18266;
	add.s64 	%rd2098, %rd2097, %rd18267;
	ld.const.u64 	%rd2099, [%rd2088];
	add.s64 	%rd2100, %rd2098, %rd2099;
	add.s64 	%rd2101, %rd2100, %rd2093;
	add.s64 	%rd2102, %rd2101, %rd18262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd18259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd18259;
	}
	shf.l.wrap.b32 	%r929, %r928, %r927, 30;
	shf.l.wrap.b32 	%r930, %r927, %r928, 30;
	mov.b64 	%rd2103, {%r930, %r929};
	shf.r.wrap.b32 	%r931, %r927, %r928, 28;
	shf.r.wrap.b32 	%r932, %r928, %r927, 28;
	mov.b64 	%rd2104, {%r932, %r931};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	shf.l.wrap.b32 	%r933, %r928, %r927, 25;
	shf.l.wrap.b32 	%r934, %r927, %r928, 25;
	mov.b64 	%rd2106, {%r934, %r933};
	xor.b64  	%rd2107, %rd2105, %rd2106;
	xor.b64  	%rd2108, %rd18259, %rd18260;
	and.b64  	%rd2109, %rd2108, %rd18261;
	and.b64  	%rd2110, %rd18259, %rd18260;
	or.b64  	%rd2111, %rd2109, %rd2110;
	add.s64 	%rd2112, %rd2101, %rd2111;
	add.s64 	%rd2113, %rd2112, %rd2107;
	add.s32 	%r935, %r12557, 1;
	mul.wide.s32 	%rd2114, %r935, 8;
	add.s64 	%rd2115, %rd2087, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd2102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd2102;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 14;
	shf.r.wrap.b32 	%r939, %r936, %r937, 14;
	mov.b64 	%rd2116, {%r939, %r938};
	shf.r.wrap.b32 	%r940, %r937, %r936, 18;
	shf.r.wrap.b32 	%r941, %r936, %r937, 18;
	mov.b64 	%rd2117, {%r941, %r940};
	xor.b64  	%rd2118, %rd2117, %rd2116;
	shf.l.wrap.b32 	%r942, %r936, %r937, 23;
	shf.l.wrap.b32 	%r943, %r937, %r936, 23;
	mov.b64 	%rd2119, {%r943, %r942};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	xor.b64  	%rd2121, %rd18263, %rd18264;
	and.b64  	%rd2122, %rd2102, %rd2121;
	xor.b64  	%rd2123, %rd2122, %rd18264;
	add.s64 	%rd2124, %rd18268, %rd18265;
	ld.const.u64 	%rd2125, [%rd2115];
	add.s64 	%rd2126, %rd2124, %rd2125;
	add.s64 	%rd2127, %rd2126, %rd2123;
	add.s64 	%rd2128, %rd2127, %rd2120;
	add.s64 	%rd2129, %rd2128, %rd18261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd2113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd2113;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 28;
	shf.r.wrap.b32 	%r947, %r944, %r945, 28;
	mov.b64 	%rd2130, {%r947, %r946};
	shf.l.wrap.b32 	%r948, %r944, %r945, 30;
	shf.l.wrap.b32 	%r949, %r945, %r944, 30;
	mov.b64 	%rd2131, {%r949, %r948};
	xor.b64  	%rd2132, %rd2131, %rd2130;
	shf.l.wrap.b32 	%r950, %r944, %r945, 25;
	shf.l.wrap.b32 	%r951, %r945, %r944, 25;
	mov.b64 	%rd2133, {%r951, %r950};
	xor.b64  	%rd2134, %rd2132, %rd2133;
	and.b64  	%rd2135, %rd2113, %rd18259;
	xor.b64  	%rd2136, %rd2113, %rd18259;
	and.b64  	%rd2137, %rd2136, %rd18260;
	or.b64  	%rd2138, %rd2137, %rd2135;
	add.s64 	%rd2139, %rd2128, %rd2138;
	add.s64 	%rd2140, %rd2139, %rd2134;
	add.s32 	%r952, %r12557, 2;
	mul.wide.s32 	%rd2141, %r952, 8;
	add.s64 	%rd2142, %rd2087, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r953,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r954}, %rd2129;
	}
	shf.r.wrap.b32 	%r955, %r954, %r953, 14;
	shf.r.wrap.b32 	%r956, %r953, %r954, 14;
	mov.b64 	%rd2143, {%r956, %r955};
	shf.r.wrap.b32 	%r957, %r954, %r953, 18;
	shf.r.wrap.b32 	%r958, %r953, %r954, 18;
	mov.b64 	%rd2144, {%r958, %r957};
	xor.b64  	%rd2145, %rd2144, %rd2143;
	shf.l.wrap.b32 	%r959, %r953, %r954, 23;
	shf.l.wrap.b32 	%r960, %r954, %r953, 23;
	mov.b64 	%rd2146, {%r960, %r959};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	xor.b64  	%rd2148, %rd2102, %rd18263;
	and.b64  	%rd2149, %rd2129, %rd2148;
	xor.b64  	%rd2150, %rd2149, %rd18263;
	add.s64 	%rd2151, %rd18269, %rd18264;
	ld.const.u64 	%rd2152, [%rd2142];
	add.s64 	%rd2153, %rd2151, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2150;
	add.s64 	%rd2155, %rd2154, %rd2147;
	add.s64 	%rd2156, %rd2155, %rd18260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd2140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r962}, %rd2140;
	}
	shf.r.wrap.b32 	%r963, %r962, %r961, 28;
	shf.r.wrap.b32 	%r964, %r961, %r962, 28;
	mov.b64 	%rd2157, {%r964, %r963};
	shf.l.wrap.b32 	%r965, %r961, %r962, 30;
	shf.l.wrap.b32 	%r966, %r962, %r961, 30;
	mov.b64 	%rd2158, {%r966, %r965};
	xor.b64  	%rd2159, %rd2158, %rd2157;
	shf.l.wrap.b32 	%r967, %r961, %r962, 25;
	shf.l.wrap.b32 	%r968, %r962, %r961, 25;
	mov.b64 	%rd2160, {%r968, %r967};
	xor.b64  	%rd2161, %rd2159, %rd2160;
	and.b64  	%rd2162, %rd2140, %rd2113;
	xor.b64  	%rd2163, %rd2140, %rd2113;
	and.b64  	%rd2164, %rd2163, %rd18259;
	or.b64  	%rd2165, %rd2164, %rd2162;
	add.s64 	%rd2166, %rd2155, %rd2165;
	add.s64 	%rd2167, %rd2166, %rd2161;
	add.s32 	%r969, %r12557, 3;
	mul.wide.s32 	%rd2168, %r969, 8;
	add.s64 	%rd2169, %rd2087, %rd2168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd2156;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 14;
	shf.r.wrap.b32 	%r973, %r970, %r971, 14;
	mov.b64 	%rd2170, {%r973, %r972};
	shf.r.wrap.b32 	%r974, %r971, %r970, 18;
	shf.r.wrap.b32 	%r975, %r970, %r971, 18;
	mov.b64 	%rd2171, {%r975, %r974};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	shf.l.wrap.b32 	%r976, %r970, %r971, 23;
	shf.l.wrap.b32 	%r977, %r971, %r970, 23;
	mov.b64 	%rd2173, {%r977, %r976};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	xor.b64  	%rd2175, %rd2129, %rd2102;
	and.b64  	%rd2176, %rd2156, %rd2175;
	xor.b64  	%rd2177, %rd2176, %rd2102;
	add.s64 	%rd2178, %rd18270, %rd18263;
	ld.const.u64 	%rd2179, [%rd2169];
	add.s64 	%rd2180, %rd2178, %rd2179;
	add.s64 	%rd2181, %rd2180, %rd2177;
	add.s64 	%rd2182, %rd2181, %rd2174;
	add.s64 	%rd2183, %rd2182, %rd18259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd2167;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 28;
	shf.r.wrap.b32 	%r981, %r978, %r979, 28;
	mov.b64 	%rd2184, {%r981, %r980};
	shf.l.wrap.b32 	%r982, %r978, %r979, 30;
	shf.l.wrap.b32 	%r983, %r979, %r978, 30;
	mov.b64 	%rd2185, {%r983, %r982};
	xor.b64  	%rd2186, %rd2185, %rd2184;
	shf.l.wrap.b32 	%r984, %r978, %r979, 25;
	shf.l.wrap.b32 	%r985, %r979, %r978, 25;
	mov.b64 	%rd2187, {%r985, %r984};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	and.b64  	%rd2189, %rd2167, %rd2140;
	xor.b64  	%rd2190, %rd2167, %rd2140;
	and.b64  	%rd2191, %rd2190, %rd2113;
	or.b64  	%rd2192, %rd2191, %rd2189;
	add.s64 	%rd2193, %rd2182, %rd2192;
	add.s64 	%rd2194, %rd2193, %rd2188;
	add.s32 	%r986, %r12557, 4;
	mul.wide.s32 	%rd2195, %r986, 8;
	add.s64 	%rd2196, %rd2087, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r988}, %rd2183;
	}
	shf.r.wrap.b32 	%r989, %r988, %r987, 14;
	shf.r.wrap.b32 	%r990, %r987, %r988, 14;
	mov.b64 	%rd2197, {%r990, %r989};
	shf.r.wrap.b32 	%r991, %r988, %r987, 18;
	shf.r.wrap.b32 	%r992, %r987, %r988, 18;
	mov.b64 	%rd2198, {%r992, %r991};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	shf.l.wrap.b32 	%r993, %r987, %r988, 23;
	shf.l.wrap.b32 	%r994, %r988, %r987, 23;
	mov.b64 	%rd2200, {%r994, %r993};
	xor.b64  	%rd2201, %rd2199, %rd2200;
	xor.b64  	%rd2202, %rd2156, %rd2129;
	and.b64  	%rd2203, %rd2183, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2129;
	add.s64 	%rd2205, %rd2102, %rd18271;
	ld.const.u64 	%rd2206, [%rd2196];
	add.s64 	%rd2207, %rd2205, %rd2206;
	add.s64 	%rd2208, %rd2207, %rd2204;
	add.s64 	%rd2209, %rd2208, %rd2201;
	add.s64 	%rd2210, %rd2209, %rd2113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd2194;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 28;
	shf.r.wrap.b32 	%r998, %r995, %r996, 28;
	mov.b64 	%rd2211, {%r998, %r997};
	shf.l.wrap.b32 	%r999, %r995, %r996, 30;
	shf.l.wrap.b32 	%r1000, %r996, %r995, 30;
	mov.b64 	%rd2212, {%r1000, %r999};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r1001, %r995, %r996, 25;
	shf.l.wrap.b32 	%r1002, %r996, %r995, 25;
	mov.b64 	%rd2214, {%r1002, %r1001};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	and.b64  	%rd2216, %rd2194, %rd2167;
	xor.b64  	%rd2217, %rd2194, %rd2167;
	and.b64  	%rd2218, %rd2217, %rd2140;
	or.b64  	%rd2219, %rd2218, %rd2216;
	add.s64 	%rd2220, %rd2209, %rd2219;
	add.s64 	%rd2221, %rd2220, %rd2215;
	add.s32 	%r1003, %r12557, 5;
	mul.wide.s32 	%rd2222, %r1003, 8;
	add.s64 	%rd2223, %rd2087, %rd2222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd2210;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 14;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 14;
	mov.b64 	%rd2224, {%r1007, %r1006};
	shf.r.wrap.b32 	%r1008, %r1005, %r1004, 18;
	shf.r.wrap.b32 	%r1009, %r1004, %r1005, 18;
	mov.b64 	%rd2225, {%r1009, %r1008};
	xor.b64  	%rd2226, %rd2225, %rd2224;
	shf.l.wrap.b32 	%r1010, %r1004, %r1005, 23;
	shf.l.wrap.b32 	%r1011, %r1005, %r1004, 23;
	mov.b64 	%rd2227, {%r1011, %r1010};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	xor.b64  	%rd2229, %rd2183, %rd2156;
	and.b64  	%rd2230, %rd2210, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2156;
	add.s64 	%rd2232, %rd2129, %rd18272;
	ld.const.u64 	%rd2233, [%rd2223];
	add.s64 	%rd2234, %rd2232, %rd2233;
	add.s64 	%rd2235, %rd2234, %rd2231;
	add.s64 	%rd2236, %rd2235, %rd2228;
	add.s64 	%rd2237, %rd2236, %rd2140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd2221;
	}
	shf.r.wrap.b32 	%r1014, %r1013, %r1012, 28;
	shf.r.wrap.b32 	%r1015, %r1012, %r1013, 28;
	mov.b64 	%rd2238, {%r1015, %r1014};
	shf.l.wrap.b32 	%r1016, %r1012, %r1013, 30;
	shf.l.wrap.b32 	%r1017, %r1013, %r1012, 30;
	mov.b64 	%rd2239, {%r1017, %r1016};
	xor.b64  	%rd2240, %rd2239, %rd2238;
	shf.l.wrap.b32 	%r1018, %r1012, %r1013, 25;
	shf.l.wrap.b32 	%r1019, %r1013, %r1012, 25;
	mov.b64 	%rd2241, {%r1019, %r1018};
	xor.b64  	%rd2242, %rd2240, %rd2241;
	and.b64  	%rd2243, %rd2221, %rd2194;
	xor.b64  	%rd2244, %rd2221, %rd2194;
	and.b64  	%rd2245, %rd2244, %rd2167;
	or.b64  	%rd2246, %rd2245, %rd2243;
	add.s64 	%rd2247, %rd2236, %rd2246;
	add.s64 	%rd2248, %rd2247, %rd2242;
	add.s32 	%r1020, %r12557, 6;
	mul.wide.s32 	%rd2249, %r1020, 8;
	add.s64 	%rd2250, %rd2087, %rd2249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd2237;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd2251, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd2252, {%r1026, %r1025};
	xor.b64  	%rd2253, %rd2252, %rd2251;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd2254, {%r1028, %r1027};
	xor.b64  	%rd2255, %rd2253, %rd2254;
	xor.b64  	%rd2256, %rd2210, %rd2183;
	and.b64  	%rd2257, %rd2237, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2183;
	add.s64 	%rd2259, %rd2156, %rd18273;
	ld.const.u64 	%rd2260, [%rd2250];
	add.s64 	%rd2261, %rd2259, %rd2260;
	add.s64 	%rd2262, %rd2261, %rd2258;
	add.s64 	%rd2263, %rd2262, %rd2255;
	add.s64 	%rd2264, %rd2263, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd2248;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd2265, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd2266, {%r1034, %r1033};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd2268, {%r1036, %r1035};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	and.b64  	%rd2270, %rd2248, %rd2221;
	xor.b64  	%rd2271, %rd2248, %rd2221;
	and.b64  	%rd2272, %rd2271, %rd2194;
	or.b64  	%rd2273, %rd2272, %rd2270;
	add.s64 	%rd2274, %rd2263, %rd2273;
	add.s64 	%rd2275, %rd2274, %rd2269;
	add.s32 	%r1037, %r12557, 7;
	mul.wide.s32 	%rd2276, %r1037, 8;
	add.s64 	%rd2277, %rd2087, %rd2276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd2264;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 14;
	mov.b64 	%rd2278, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 18;
	mov.b64 	%rd2279, {%r1043, %r1042};
	xor.b64  	%rd2280, %rd2279, %rd2278;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd2281, {%r1045, %r1044};
	xor.b64  	%rd2282, %rd2280, %rd2281;
	xor.b64  	%rd2283, %rd2237, %rd2210;
	and.b64  	%rd2284, %rd2264, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2210;
	add.s64 	%rd2286, %rd2183, %rd18274;
	ld.const.u64 	%rd2287, [%rd2277];
	add.s64 	%rd2288, %rd2286, %rd2287;
	add.s64 	%rd2289, %rd2288, %rd2285;
	add.s64 	%rd2290, %rd2289, %rd2282;
	add.s64 	%rd2291, %rd2290, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd2275;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 28;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 28;
	mov.b64 	%rd2292, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 30;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 30;
	mov.b64 	%rd2293, {%r1051, %r1050};
	xor.b64  	%rd2294, %rd2293, %rd2292;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 25;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 25;
	mov.b64 	%rd2295, {%r1053, %r1052};
	xor.b64  	%rd2296, %rd2294, %rd2295;
	and.b64  	%rd2297, %rd2275, %rd2248;
	xor.b64  	%rd2298, %rd2275, %rd2248;
	and.b64  	%rd2299, %rd2298, %rd2221;
	or.b64  	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2290, %rd2300;
	add.s64 	%rd2302, %rd2301, %rd2296;
	add.s32 	%r1054, %r12557, 8;
	mul.wide.s32 	%rd2303, %r1054, 8;
	add.s64 	%rd2304, %rd2087, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd2291;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 14;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 14;
	mov.b64 	%rd2305, {%r1058, %r1057};
	shf.r.wrap.b32 	%r1059, %r1056, %r1055, 18;
	shf.r.wrap.b32 	%r1060, %r1055, %r1056, 18;
	mov.b64 	%rd2306, {%r1060, %r1059};
	xor.b64  	%rd2307, %rd2306, %rd2305;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 23;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 23;
	mov.b64 	%rd2308, {%r1062, %r1061};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	xor.b64  	%rd2310, %rd2264, %rd2237;
	and.b64  	%rd2311, %rd2291, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2237;
	add.s64 	%rd2313, %rd2210, %rd18258;
	ld.const.u64 	%rd2314, [%rd2304];
	add.s64 	%rd2315, %rd2313, %rd2314;
	add.s64 	%rd2316, %rd2315, %rd2312;
	add.s64 	%rd2317, %rd2316, %rd2309;
	add.s64 	%rd2318, %rd2317, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd2302;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 28;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 28;
	mov.b64 	%rd2319, {%r1066, %r1065};
	shf.l.wrap.b32 	%r1067, %r1063, %r1064, 30;
	shf.l.wrap.b32 	%r1068, %r1064, %r1063, 30;
	mov.b64 	%rd2320, {%r1068, %r1067};
	xor.b64  	%rd2321, %rd2320, %rd2319;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 25;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 25;
	mov.b64 	%rd2322, {%r1070, %r1069};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	and.b64  	%rd2324, %rd2302, %rd2275;
	xor.b64  	%rd2325, %rd2302, %rd2275;
	and.b64  	%rd2326, %rd2325, %rd2248;
	or.b64  	%rd2327, %rd2326, %rd2324;
	add.s64 	%rd2328, %rd2317, %rd2327;
	add.s64 	%rd2329, %rd2328, %rd2323;
	add.s32 	%r1071, %r12557, 9;
	mul.wide.s32 	%rd2330, %r1071, 8;
	add.s64 	%rd2331, %rd2087, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd2318;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 14;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 14;
	mov.b64 	%rd2332, {%r1075, %r1074};
	shf.r.wrap.b32 	%r1076, %r1073, %r1072, 18;
	shf.r.wrap.b32 	%r1077, %r1072, %r1073, 18;
	mov.b64 	%rd2333, {%r1077, %r1076};
	xor.b64  	%rd2334, %rd2333, %rd2332;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 23;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 23;
	mov.b64 	%rd2335, {%r1079, %r1078};
	xor.b64  	%rd2336, %rd2334, %rd2335;
	xor.b64  	%rd2337, %rd2291, %rd2264;
	and.b64  	%rd2338, %rd2318, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2264;
	add.s64 	%rd2340, %rd2237, %rd18257;
	ld.const.u64 	%rd2341, [%rd2331];
	add.s64 	%rd2342, %rd2340, %rd2341;
	add.s64 	%rd2343, %rd2342, %rd2339;
	add.s64 	%rd2344, %rd2343, %rd2336;
	add.s64 	%rd2345, %rd2344, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd2329;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 28;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 28;
	mov.b64 	%rd2346, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 30;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 30;
	mov.b64 	%rd2347, {%r1085, %r1084};
	xor.b64  	%rd2348, %rd2347, %rd2346;
	shf.l.wrap.b32 	%r1086, %r1080, %r1081, 25;
	shf.l.wrap.b32 	%r1087, %r1081, %r1080, 25;
	mov.b64 	%rd2349, {%r1087, %r1086};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	and.b64  	%rd2351, %rd2329, %rd2302;
	xor.b64  	%rd2352, %rd2329, %rd2302;
	and.b64  	%rd2353, %rd2352, %rd2275;
	or.b64  	%rd2354, %rd2353, %rd2351;
	add.s64 	%rd2355, %rd2344, %rd2354;
	add.s64 	%rd2356, %rd2355, %rd2350;
	add.s32 	%r1088, %r12557, 10;
	mul.wide.s32 	%rd2357, %r1088, 8;
	add.s64 	%rd2358, %rd2087, %rd2357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd2345;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 14;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 14;
	mov.b64 	%rd2359, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r1090, %r1089, 18;
	shf.r.wrap.b32 	%r1094, %r1089, %r1090, 18;
	mov.b64 	%rd2360, {%r1094, %r1093};
	xor.b64  	%rd2361, %rd2360, %rd2359;
	shf.l.wrap.b32 	%r1095, %r1089, %r1090, 23;
	shf.l.wrap.b32 	%r1096, %r1090, %r1089, 23;
	mov.b64 	%rd2362, {%r1096, %r1095};
	xor.b64  	%rd2363, %rd2361, %rd2362;
	xor.b64  	%rd2364, %rd2318, %rd2291;
	and.b64  	%rd2365, %rd2345, %rd2364;
	xor.b64  	%rd2366, %rd2365, %rd2291;
	add.s64 	%rd2367, %rd2264, %rd18256;
	ld.const.u64 	%rd2368, [%rd2358];
	add.s64 	%rd2369, %rd2367, %rd2368;
	add.s64 	%rd2370, %rd2369, %rd2366;
	add.s64 	%rd2371, %rd2370, %rd2363;
	add.s64 	%rd2372, %rd2371, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd2356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd2356;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 28;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 28;
	mov.b64 	%rd2373, {%r1100, %r1099};
	shf.l.wrap.b32 	%r1101, %r1097, %r1098, 30;
	shf.l.wrap.b32 	%r1102, %r1098, %r1097, 30;
	mov.b64 	%rd2374, {%r1102, %r1101};
	xor.b64  	%rd2375, %rd2374, %rd2373;
	shf.l.wrap.b32 	%r1103, %r1097, %r1098, 25;
	shf.l.wrap.b32 	%r1104, %r1098, %r1097, 25;
	mov.b64 	%rd2376, {%r1104, %r1103};
	xor.b64  	%rd2377, %rd2375, %rd2376;
	and.b64  	%rd2378, %rd2356, %rd2329;
	xor.b64  	%rd2379, %rd2356, %rd2329;
	and.b64  	%rd2380, %rd2379, %rd2302;
	or.b64  	%rd2381, %rd2380, %rd2378;
	add.s64 	%rd2382, %rd2371, %rd2381;
	add.s64 	%rd2383, %rd2382, %rd2377;
	add.s32 	%r1105, %r12557, 11;
	mul.wide.s32 	%rd2384, %r1105, 8;
	add.s64 	%rd2385, %rd2087, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd2372;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 14;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 14;
	mov.b64 	%rd2386, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 18;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 18;
	mov.b64 	%rd2387, {%r1111, %r1110};
	xor.b64  	%rd2388, %rd2387, %rd2386;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 23;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 23;
	mov.b64 	%rd2389, {%r1113, %r1112};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	xor.b64  	%rd2391, %rd2345, %rd2318;
	and.b64  	%rd2392, %rd2372, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2318;
	add.s64 	%rd2394, %rd2291, %rd18255;
	ld.const.u64 	%rd2395, [%rd2385];
	add.s64 	%rd2396, %rd2394, %rd2395;
	add.s64 	%rd2397, %rd2396, %rd2393;
	add.s64 	%rd2398, %rd2397, %rd2390;
	add.s64 	%rd2399, %rd2398, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd2383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd2383;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 28;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 28;
	mov.b64 	%rd2400, {%r1117, %r1116};
	shf.l.wrap.b32 	%r1118, %r1114, %r1115, 30;
	shf.l.wrap.b32 	%r1119, %r1115, %r1114, 30;
	mov.b64 	%rd2401, {%r1119, %r1118};
	xor.b64  	%rd2402, %rd2401, %rd2400;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 25;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 25;
	mov.b64 	%rd2403, {%r1121, %r1120};
	xor.b64  	%rd2404, %rd2402, %rd2403;
	and.b64  	%rd2405, %rd2383, %rd2356;
	xor.b64  	%rd2406, %rd2383, %rd2356;
	and.b64  	%rd2407, %rd2406, %rd2329;
	or.b64  	%rd2408, %rd2407, %rd2405;
	add.s64 	%rd2409, %rd2398, %rd2408;
	add.s64 	%rd2410, %rd2409, %rd2404;
	add.s32 	%r1122, %r12557, 12;
	mul.wide.s32 	%rd2411, %r1122, 8;
	add.s64 	%rd2412, %rd2087, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd2399;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 14;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 14;
	mov.b64 	%rd2413, {%r1126, %r1125};
	shf.r.wrap.b32 	%r1127, %r1124, %r1123, 18;
	shf.r.wrap.b32 	%r1128, %r1123, %r1124, 18;
	mov.b64 	%rd2414, {%r1128, %r1127};
	xor.b64  	%rd2415, %rd2414, %rd2413;
	shf.l.wrap.b32 	%r1129, %r1123, %r1124, 23;
	shf.l.wrap.b32 	%r1130, %r1124, %r1123, 23;
	mov.b64 	%rd2416, {%r1130, %r1129};
	xor.b64  	%rd2417, %rd2415, %rd2416;
	xor.b64  	%rd2418, %rd2372, %rd2345;
	and.b64  	%rd2419, %rd2399, %rd2418;
	xor.b64  	%rd2420, %rd2419, %rd2345;
	add.s64 	%rd2421, %rd2318, %rd18254;
	ld.const.u64 	%rd2422, [%rd2412];
	add.s64 	%rd2423, %rd2421, %rd2422;
	add.s64 	%rd2424, %rd2423, %rd2420;
	add.s64 	%rd2425, %rd2424, %rd2417;
	add.s64 	%rd18266, %rd2425, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd2410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd2410;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 28;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 28;
	mov.b64 	%rd2426, {%r1134, %r1133};
	shf.l.wrap.b32 	%r1135, %r1131, %r1132, 30;
	shf.l.wrap.b32 	%r1136, %r1132, %r1131, 30;
	mov.b64 	%rd2427, {%r1136, %r1135};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r1137, %r1131, %r1132, 25;
	shf.l.wrap.b32 	%r1138, %r1132, %r1131, 25;
	mov.b64 	%rd2429, {%r1138, %r1137};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	and.b64  	%rd2431, %rd2410, %rd2383;
	xor.b64  	%rd2432, %rd2410, %rd2383;
	and.b64  	%rd2433, %rd2432, %rd2356;
	or.b64  	%rd2434, %rd2433, %rd2431;
	add.s64 	%rd2435, %rd2425, %rd2434;
	add.s64 	%rd18262, %rd2435, %rd2430;
	add.s32 	%r1139, %r12557, 13;
	mul.wide.s32 	%rd2436, %r1139, 8;
	add.s64 	%rd2437, %rd2087, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd18266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd18266;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 14;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 14;
	mov.b64 	%rd2438, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r1141, %r1140, 18;
	shf.r.wrap.b32 	%r1145, %r1140, %r1141, 18;
	mov.b64 	%rd2439, {%r1145, %r1144};
	xor.b64  	%rd2440, %rd2439, %rd2438;
	shf.l.wrap.b32 	%r1146, %r1140, %r1141, 23;
	shf.l.wrap.b32 	%r1147, %r1141, %r1140, 23;
	mov.b64 	%rd2441, {%r1147, %r1146};
	xor.b64  	%rd2442, %rd2440, %rd2441;
	xor.b64  	%rd2443, %rd2399, %rd2372;
	and.b64  	%rd2444, %rd18266, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2372;
	add.s64 	%rd2446, %rd2345, %rd18253;
	ld.const.u64 	%rd2447, [%rd2437];
	add.s64 	%rd2448, %rd2446, %rd2447;
	add.s64 	%rd2449, %rd2448, %rd2445;
	add.s64 	%rd2450, %rd2449, %rd2442;
	add.s64 	%rd18265, %rd2450, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd18262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd18262;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 28;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 28;
	mov.b64 	%rd2451, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 30;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 30;
	mov.b64 	%rd2452, {%r1153, %r1152};
	xor.b64  	%rd2453, %rd2452, %rd2451;
	shf.l.wrap.b32 	%r1154, %r1148, %r1149, 25;
	shf.l.wrap.b32 	%r1155, %r1149, %r1148, 25;
	mov.b64 	%rd2454, {%r1155, %r1154};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	and.b64  	%rd2456, %rd18262, %rd2410;
	xor.b64  	%rd2457, %rd18262, %rd2410;
	and.b64  	%rd2458, %rd2457, %rd2383;
	or.b64  	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2450, %rd2459;
	add.s64 	%rd18261, %rd2460, %rd2455;
	add.s32 	%r1156, %r12557, 14;
	mul.wide.s32 	%rd2461, %r1156, 8;
	add.s64 	%rd2462, %rd2087, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd18265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd18265;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 14;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 14;
	mov.b64 	%rd2463, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1162, %r1157, %r1158, 18;
	mov.b64 	%rd2464, {%r1162, %r1161};
	xor.b64  	%rd2465, %rd2464, %rd2463;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 23;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 23;
	mov.b64 	%rd2466, {%r1164, %r1163};
	xor.b64  	%rd2467, %rd2465, %rd2466;
	xor.b64  	%rd2468, %rd18266, %rd2399;
	and.b64  	%rd2469, %rd18265, %rd2468;
	xor.b64  	%rd2470, %rd2469, %rd2399;
	add.s64 	%rd2471, %rd2372, %rd18252;
	ld.const.u64 	%rd2472, [%rd2462];
	add.s64 	%rd2473, %rd2471, %rd2472;
	add.s64 	%rd2474, %rd2473, %rd2470;
	add.s64 	%rd2475, %rd2474, %rd2467;
	add.s64 	%rd18264, %rd2475, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd18261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd18261;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 28;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 28;
	mov.b64 	%rd2476, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 30;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 30;
	mov.b64 	%rd2477, {%r1170, %r1169};
	xor.b64  	%rd2478, %rd2477, %rd2476;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 25;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 25;
	mov.b64 	%rd2479, {%r1172, %r1171};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	and.b64  	%rd2481, %rd18261, %rd18262;
	xor.b64  	%rd2482, %rd18261, %rd18262;
	and.b64  	%rd2483, %rd2482, %rd2410;
	or.b64  	%rd2484, %rd2483, %rd2481;
	add.s64 	%rd2485, %rd2475, %rd2484;
	add.s64 	%rd18260, %rd2485, %rd2480;
	add.s32 	%r1173, %r12557, 15;
	mul.wide.s32 	%rd2486, %r1173, 8;
	add.s64 	%rd2487, %rd2087, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1174,%dummy}, %rd18264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd18264;
	}
	shf.r.wrap.b32 	%r1176, %r1175, %r1174, 14;
	shf.r.wrap.b32 	%r1177, %r1174, %r1175, 14;
	mov.b64 	%rd2488, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r1175, %r1174, 18;
	shf.r.wrap.b32 	%r1179, %r1174, %r1175, 18;
	mov.b64 	%rd2489, {%r1179, %r1178};
	xor.b64  	%rd2490, %rd2489, %rd2488;
	shf.l.wrap.b32 	%r1180, %r1174, %r1175, 23;
	shf.l.wrap.b32 	%r1181, %r1175, %r1174, 23;
	mov.b64 	%rd2491, {%r1181, %r1180};
	xor.b64  	%rd2492, %rd2490, %rd2491;
	xor.b64  	%rd2493, %rd18265, %rd18266;
	and.b64  	%rd2494, %rd18264, %rd2493;
	xor.b64  	%rd2495, %rd2494, %rd18266;
	add.s64 	%rd2496, %rd2399, %rd18251;
	ld.const.u64 	%rd2497, [%rd2487];
	add.s64 	%rd2498, %rd2496, %rd2497;
	add.s64 	%rd2499, %rd2498, %rd2495;
	add.s64 	%rd2500, %rd2499, %rd2492;
	add.s64 	%rd18263, %rd2500, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd18260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd18260;
	}
	shf.r.wrap.b32 	%r1184, %r1183, %r1182, 28;
	shf.r.wrap.b32 	%r1185, %r1182, %r1183, 28;
	mov.b64 	%rd2501, {%r1185, %r1184};
	shf.l.wrap.b32 	%r1186, %r1182, %r1183, 30;
	shf.l.wrap.b32 	%r1187, %r1183, %r1182, 30;
	mov.b64 	%rd2502, {%r1187, %r1186};
	xor.b64  	%rd2503, %rd2502, %rd2501;
	shf.l.wrap.b32 	%r1188, %r1182, %r1183, 25;
	shf.l.wrap.b32 	%r1189, %r1183, %r1182, 25;
	mov.b64 	%rd2504, {%r1189, %r1188};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	and.b64  	%rd2506, %rd18260, %rd18261;
	xor.b64  	%rd2507, %rd18260, %rd18261;
	and.b64  	%rd2508, %rd2507, %rd18262;
	or.b64  	%rd2509, %rd2508, %rd2506;
	add.s64 	%rd2510, %rd2500, %rd2509;
	add.s64 	%rd18259, %rd2510, %rd2505;
	add.s32 	%r12557, %r12557, 16;
	setp.lt.s32	%p10, %r12557, 80;
	@%p10 bra 	BB0_16;

	add.s64 	%rd2511, %rd14, %rd18259;
	st.local.u64 	[%rd1], %rd2511;
	add.s64 	%rd2512, %rd15, %rd18260;
	st.local.u64 	[%rd1+8], %rd2512;
	add.s64 	%rd2513, %rd16, %rd18261;
	st.local.u64 	[%rd1+16], %rd2513;
	add.s64 	%rd2514, %rd13, %rd18262;
	st.local.u64 	[%rd1+24], %rd2514;
	add.s64 	%rd2515, %rd8, %rd18263;
	st.local.u64 	[%rd1+32], %rd2515;
	add.s64 	%rd2516, %rd10, %rd18264;
	st.local.u64 	[%rd1+40], %rd2516;
	add.s64 	%rd2517, %rd9, %rd18265;
	st.local.u64 	[%rd1+48], %rd2517;
	add.s64 	%rd2518, %rd11, %rd18266;
	st.local.u64 	[%rd1+56], %rd2518;
	sub.s32 	%r30, %r3, %r10;
	setp.lt.s32	%p11, %r30, 1;
	@%p11 bra 	BB0_35;

	add.s32 	%r31, %r9, -128;
	and.b32  	%r32, %r31, 3;
	setp.eq.s32	%p12, %r32, 0;
	mov.u32 	%r12561, 0;
	@%p12 bra 	BB0_24;

	setp.eq.s32	%p13, %r32, 1;
	mov.u32 	%r12559, 0;
	@%p13 bra 	BB0_23;

	setp.eq.s32	%p14, %r32, 2;
	mov.u32 	%r12558, 0;
	@%p14 bra 	BB0_22;

	xor.b32  	%r1194, %r10, 7;
	cvt.u64.u32	%rd2519, %r1194;
	add.s64 	%rd2520, %rd1462, %rd2519;
	ld.local.u8 	%rs17, [%rd2520];
	st.local.u8 	[%rd6+7], %rs17;
	mov.u32 	%r12558, 1;

BB0_22:
	add.s32 	%r1195, %r12558, %r10;
	xor.b32  	%r1196, %r1195, 7;
	cvt.s64.s32	%rd2521, %r1196;
	add.s64 	%rd2522, %rd1462, %rd2521;
	ld.local.u8 	%rs18, [%rd2522];
	xor.b32  	%r1197, %r12558, 7;
	cvt.u64.u32	%rd2523, %r1197;
	add.s64 	%rd2524, %rd6, %rd2523;
	st.local.u8 	[%rd2524], %rs18;
	add.s32 	%r12559, %r12558, 1;

BB0_23:
	add.s32 	%r1198, %r12559, %r10;
	xor.b32  	%r1199, %r1198, 7;
	cvt.s64.s32	%rd2525, %r1199;
	add.s64 	%rd2526, %rd1462, %rd2525;
	ld.local.u8 	%rs19, [%rd2526];
	xor.b32  	%r1200, %r12559, 7;
	cvt.s64.s32	%rd2527, %r1200;
	add.s64 	%rd2528, %rd6, %rd2527;
	st.local.u8 	[%rd2528], %rs19;
	add.s32 	%r12561, %r12559, 1;

BB0_24:
	setp.lt.u32	%p15, %r31, 4;
	@%p15 bra 	BB0_35;

BB0_25:
	add.s32 	%r1201, %r12561, %r10;
	xor.b32  	%r1202, %r1201, 7;
	cvt.s64.s32	%rd2529, %r1202;
	add.s64 	%rd2530, %rd1462, %rd2529;
	ld.local.u8 	%rs20, [%rd2530];
	xor.b32  	%r1203, %r12561, 7;
	cvt.s64.s32	%rd2531, %r1203;
	add.s64 	%rd2532, %rd6, %rd2531;
	st.local.u8 	[%rd2532], %rs20;
	add.s32 	%r1204, %r12561, 1;
	add.s32 	%r1205, %r1204, %r10;
	xor.b32  	%r1206, %r1205, 7;
	cvt.s64.s32	%rd2533, %r1206;
	add.s64 	%rd2534, %rd1462, %rd2533;
	ld.local.u8 	%rs21, [%rd2534];
	xor.b32  	%r1207, %r1204, 7;
	cvt.s64.s32	%rd2535, %r1207;
	add.s64 	%rd2536, %rd6, %rd2535;
	st.local.u8 	[%rd2536], %rs21;
	add.s32 	%r1208, %r12561, 2;
	add.s32 	%r1209, %r1208, %r10;
	xor.b32  	%r1210, %r1209, 7;
	cvt.s64.s32	%rd2537, %r1210;
	add.s64 	%rd2538, %rd1462, %rd2537;
	ld.local.u8 	%rs22, [%rd2538];
	xor.b32  	%r1211, %r1208, 7;
	cvt.s64.s32	%rd2539, %r1211;
	add.s64 	%rd2540, %rd6, %rd2539;
	st.local.u8 	[%rd2540], %rs22;
	add.s32 	%r1212, %r12561, 3;
	add.s32 	%r1213, %r1212, %r10;
	xor.b32  	%r1214, %r1213, 7;
	cvt.s64.s32	%rd2541, %r1214;
	add.s64 	%rd2542, %rd1462, %rd2541;
	ld.local.u8 	%rs23, [%rd2542];
	xor.b32  	%r1215, %r1212, 7;
	cvt.s64.s32	%rd2543, %r1215;
	add.s64 	%rd2544, %rd6, %rd2543;
	st.local.u8 	[%rd2544], %rs23;
	add.s32 	%r12561, %r12561, 4;
	setp.lt.s32	%p16, %r12561, %r30;
	@%p16 bra 	BB0_25;

BB0_35:
	ld.local.u32 	%r55, [%rd1+192];
	and.b32  	%r56, %r55, 127;
	add.s32 	%r1240, %r55, %r2;
	st.local.u32 	[%rd1+192], %r1240;
	add.s32 	%r1241, %r56, %r2;
	setp.lt.s32	%p23, %r1241, 128;
	add.s64 	%rd90, %rd1, 64;
	@%p23 bra 	BB0_50;
	bra.uni 	BB0_36;

BB0_50:
	@%p2 bra 	BB0_53;

	mov.u32 	%r12582, 0;

BB0_52:
	xor.b32  	%r1987, %r12582, 7;
	cvt.s64.s32	%rd3621, %r1987;
	add.s64 	%rd3622, %rd1460, %rd3621;
	ld.local.u8 	%rs39, [%rd3622];
	xor.b32  	%r1988, %r56, 7;
	cvt.s64.s32	%rd3623, %r1988;
	add.s64 	%rd3624, %rd90, %rd3623;
	st.local.u8 	[%rd3624], %rs39;
	add.s32 	%r56, %r56, 1;
	add.s32 	%r12582, %r12582, 1;
	setp.lt.s32	%p33, %r12582, %r2;
	@%p33 bra 	BB0_52;
	bra.uni 	BB0_53;

BB0_36:
	mov.u32 	%r1243, 128;
	sub.s32 	%r57, %r1243, %r56;
	mov.u32 	%r1244, 1;
	max.u32 	%r58, %r57, %r1244;
	and.b32  	%r59, %r58, 3;
	setp.eq.s32	%p24, %r59, 0;
	mov.u32 	%r12576, 0;
	@%p24 bra 	BB0_43;

	setp.eq.s32	%p25, %r59, 1;
	mov.u32 	%r12572, 0;
	@%p25 bra 	BB0_42;

	setp.eq.s32	%p26, %r59, 2;
	mov.u32 	%r1246, 0;
	@%p26 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r1244, %r1246;
	bra.uni 	BB0_41;

BB0_40:
	ld.local.u8 	%rs31, [%rd1460+7];
	xor.b32  	%r1248, %r56, 7;
	cvt.u64.u32	%rd2573, %r1248;
	add.s64 	%rd2574, %rd90, %rd2573;
	st.local.u8 	[%rd2574], %rs31;
	add.s32 	%r56, %r56, 1;

BB0_41:
	xor.b32  	%r1249, %r1244, 7;
	cvt.u64.u32	%rd2575, %r1249;
	add.s64 	%rd2576, %rd1460, %rd2575;
	ld.local.u8 	%rs32, [%rd2576];
	xor.b32  	%r1250, %r56, 7;
	cvt.s64.s32	%rd2577, %r1250;
	add.s64 	%rd2578, %rd90, %rd2577;
	st.local.u8 	[%rd2578], %rs32;
	add.s32 	%r56, %r56, 1;
	add.s32 	%r12572, %r1244, 1;

BB0_42:
	xor.b32  	%r1251, %r12572, 7;
	cvt.s64.s32	%rd2579, %r1251;
	add.s64 	%rd2580, %rd1460, %rd2579;
	ld.local.u8 	%rs33, [%rd2580];
	xor.b32  	%r1252, %r56, 7;
	cvt.s64.s32	%rd2581, %r1252;
	add.s64 	%rd2582, %rd90, %rd2581;
	st.local.u8 	[%rd2582], %rs33;
	add.s32 	%r56, %r56, 1;
	add.s32 	%r12576, %r12572, 1;

BB0_43:
	setp.lt.u32	%p27, %r58, 4;
	@%p27 bra 	BB0_45;

BB0_44:
	xor.b32  	%r1253, %r12576, 7;
	cvt.s64.s32	%rd2583, %r1253;
	add.s64 	%rd2584, %rd1460, %rd2583;
	ld.local.u8 	%rs34, [%rd2584];
	xor.b32  	%r1254, %r56, 7;
	cvt.s64.s32	%rd2585, %r1254;
	add.s64 	%rd2586, %rd90, %rd2585;
	st.local.u8 	[%rd2586], %rs34;
	add.s32 	%r1255, %r12576, 1;
	xor.b32  	%r1256, %r1255, 7;
	cvt.s64.s32	%rd2587, %r1256;
	add.s64 	%rd2588, %rd1460, %rd2587;
	ld.local.u8 	%rs35, [%rd2588];
	add.s32 	%r1257, %r56, 1;
	xor.b32  	%r1258, %r1257, 7;
	cvt.s64.s32	%rd2589, %r1258;
	add.s64 	%rd2590, %rd90, %rd2589;
	st.local.u8 	[%rd2590], %rs35;
	add.s32 	%r1259, %r12576, 2;
	xor.b32  	%r1260, %r1259, 7;
	cvt.s64.s32	%rd2591, %r1260;
	add.s64 	%rd2592, %rd1460, %rd2591;
	ld.local.u8 	%rs36, [%rd2592];
	add.s32 	%r1261, %r56, 2;
	xor.b32  	%r1262, %r1261, 7;
	cvt.s64.s32	%rd2593, %r1262;
	add.s64 	%rd2594, %rd90, %rd2593;
	st.local.u8 	[%rd2594], %rs36;
	add.s32 	%r1263, %r12576, 3;
	xor.b32  	%r1264, %r1263, 7;
	cvt.s64.s32	%rd2595, %r1264;
	add.s64 	%rd2596, %rd1460, %rd2595;
	ld.local.u8 	%rs37, [%rd2596];
	add.s32 	%r1265, %r56, 3;
	xor.b32  	%r1266, %r1265, 7;
	cvt.s64.s32	%rd2597, %r1266;
	add.s64 	%rd2598, %rd90, %rd2597;
	st.local.u8 	[%rd2598], %rs37;
	add.s32 	%r12576, %r12576, 4;
	setp.lt.s32	%p28, %r12576, %r57;
	add.s32 	%r56, %r56, 4;
	@%p28 bra 	BB0_44;

BB0_45:
	ld.local.u64 	%rd92, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd92;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd92;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 14;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 14;
	mov.b64 	%rd2599, {%r1271, %r1270};
	shf.r.wrap.b32 	%r1272, %r1269, %r1268, 18;
	shf.r.wrap.b32 	%r1273, %r1268, %r1269, 18;
	mov.b64 	%rd2600, {%r1273, %r1272};
	xor.b64  	%rd2601, %rd2600, %rd2599;
	shf.l.wrap.b32 	%r1274, %r1268, %r1269, 23;
	shf.l.wrap.b32 	%r1275, %r1269, %r1268, 23;
	mov.b64 	%rd2602, {%r1275, %r1274};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	ld.local.u64 	%rd93, [%rd1+48];
	ld.local.u64 	%rd94, [%rd1+40];
	xor.b64  	%rd2604, %rd93, %rd94;
	and.b64  	%rd2605, %rd2604, %rd92;
	xor.b64  	%rd2606, %rd2605, %rd93;
	ld.local.u64 	%rd95, [%rd1+56];
	ld.local.u64 	%rd18291, [%rd1+64];
	add.s64 	%rd2607, %rd95, %rd18291;
	ld.const.u64 	%rd2608, [k_sha512];
	add.s64 	%rd2609, %rd2607, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2606;
	add.s64 	%rd2611, %rd2610, %rd2603;
	ld.local.u64 	%rd97, [%rd1+24];
	add.s64 	%rd2612, %rd2611, %rd97;
	ld.local.u64 	%rd98, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd98;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd98;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 28;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 28;
	mov.b64 	%rd2613, {%r1279, %r1278};
	shf.l.wrap.b32 	%r1280, %r1276, %r1277, 30;
	shf.l.wrap.b32 	%r1281, %r1277, %r1276, 30;
	mov.b64 	%rd2614, {%r1281, %r1280};
	xor.b64  	%rd2615, %rd2614, %rd2613;
	shf.l.wrap.b32 	%r1282, %r1276, %r1277, 25;
	shf.l.wrap.b32 	%r1283, %r1277, %r1276, 25;
	mov.b64 	%rd2616, {%r1283, %r1282};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	ld.local.u64 	%rd99, [%rd1+8];
	and.b64  	%rd2618, %rd99, %rd98;
	xor.b64  	%rd2619, %rd99, %rd98;
	ld.local.u64 	%rd100, [%rd1+16];
	and.b64  	%rd2620, %rd100, %rd2619;
	or.b64  	%rd2621, %rd2620, %rd2618;
	add.s64 	%rd2622, %rd2611, %rd2621;
	add.s64 	%rd2623, %rd2622, %rd2617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd2612;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd2624, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd2625, {%r1289, %r1288};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd2627, {%r1291, %r1290};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	xor.b64  	%rd2629, %rd94, %rd92;
	and.b64  	%rd2630, %rd2612, %rd2629;
	xor.b64  	%rd2631, %rd2630, %rd94;
	ld.local.u64 	%rd18292, [%rd1+72];
	add.s64 	%rd2632, %rd93, %rd18292;
	ld.const.u64 	%rd2633, [k_sha512+8];
	add.s64 	%rd2634, %rd2632, %rd2633;
	add.s64 	%rd2635, %rd2634, %rd2631;
	add.s64 	%rd2636, %rd2635, %rd2628;
	add.s64 	%rd2637, %rd2636, %rd100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd2623;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd2638, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd2639, {%r1297, %r1296};
	xor.b64  	%rd2640, %rd2639, %rd2638;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd2641, {%r1299, %r1298};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	and.b64  	%rd2643, %rd2623, %rd98;
	xor.b64  	%rd2644, %rd2623, %rd98;
	and.b64  	%rd2645, %rd2644, %rd99;
	or.b64  	%rd2646, %rd2645, %rd2643;
	add.s64 	%rd2647, %rd2636, %rd2646;
	add.s64 	%rd2648, %rd2647, %rd2642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd2637;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 14;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 14;
	mov.b64 	%rd2649, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 18;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 18;
	mov.b64 	%rd2650, {%r1305, %r1304};
	xor.b64  	%rd2651, %rd2650, %rd2649;
	shf.l.wrap.b32 	%r1306, %r1300, %r1301, 23;
	shf.l.wrap.b32 	%r1307, %r1301, %r1300, 23;
	mov.b64 	%rd2652, {%r1307, %r1306};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	xor.b64  	%rd2654, %rd2612, %rd92;
	and.b64  	%rd2655, %rd2637, %rd2654;
	xor.b64  	%rd2656, %rd2655, %rd92;
	ld.local.u64 	%rd18293, [%rd1+80];
	add.s64 	%rd2657, %rd94, %rd18293;
	ld.const.u64 	%rd2658, [k_sha512+16];
	add.s64 	%rd2659, %rd2657, %rd2658;
	add.s64 	%rd2660, %rd2659, %rd2656;
	add.s64 	%rd2661, %rd2660, %rd2653;
	add.s64 	%rd2662, %rd2661, %rd99;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd2648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd2648;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 28;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 28;
	mov.b64 	%rd2663, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 30;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 30;
	mov.b64 	%rd2664, {%r1313, %r1312};
	xor.b64  	%rd2665, %rd2664, %rd2663;
	shf.l.wrap.b32 	%r1314, %r1308, %r1309, 25;
	shf.l.wrap.b32 	%r1315, %r1309, %r1308, 25;
	mov.b64 	%rd2666, {%r1315, %r1314};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	and.b64  	%rd2668, %rd2648, %rd2623;
	xor.b64  	%rd2669, %rd2648, %rd2623;
	and.b64  	%rd2670, %rd2669, %rd98;
	or.b64  	%rd2671, %rd2670, %rd2668;
	add.s64 	%rd2672, %rd2661, %rd2671;
	add.s64 	%rd2673, %rd2672, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd2662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd2662;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 14;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 14;
	mov.b64 	%rd2674, {%r1319, %r1318};
	shf.r.wrap.b32 	%r1320, %r1317, %r1316, 18;
	shf.r.wrap.b32 	%r1321, %r1316, %r1317, 18;
	mov.b64 	%rd2675, {%r1321, %r1320};
	xor.b64  	%rd2676, %rd2675, %rd2674;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 23;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 23;
	mov.b64 	%rd2677, {%r1323, %r1322};
	xor.b64  	%rd2678, %rd2676, %rd2677;
	xor.b64  	%rd2679, %rd2637, %rd2612;
	and.b64  	%rd2680, %rd2662, %rd2679;
	xor.b64  	%rd2681, %rd2680, %rd2612;
	ld.local.u64 	%rd18294, [%rd1+88];
	add.s64 	%rd2682, %rd92, %rd18294;
	ld.const.u64 	%rd2683, [k_sha512+24];
	add.s64 	%rd2684, %rd2682, %rd2683;
	add.s64 	%rd2685, %rd2684, %rd2681;
	add.s64 	%rd2686, %rd2685, %rd2678;
	add.s64 	%rd2687, %rd2686, %rd98;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd2673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd2673;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 28;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 28;
	mov.b64 	%rd2688, {%r1327, %r1326};
	shf.l.wrap.b32 	%r1328, %r1324, %r1325, 30;
	shf.l.wrap.b32 	%r1329, %r1325, %r1324, 30;
	mov.b64 	%rd2689, {%r1329, %r1328};
	xor.b64  	%rd2690, %rd2689, %rd2688;
	shf.l.wrap.b32 	%r1330, %r1324, %r1325, 25;
	shf.l.wrap.b32 	%r1331, %r1325, %r1324, 25;
	mov.b64 	%rd2691, {%r1331, %r1330};
	xor.b64  	%rd2692, %rd2690, %rd2691;
	and.b64  	%rd2693, %rd2673, %rd2648;
	xor.b64  	%rd2694, %rd2673, %rd2648;
	and.b64  	%rd2695, %rd2694, %rd2623;
	or.b64  	%rd2696, %rd2695, %rd2693;
	add.s64 	%rd2697, %rd2686, %rd2696;
	add.s64 	%rd2698, %rd2697, %rd2692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1333}, %rd2687;
	}
	shf.r.wrap.b32 	%r1334, %r1333, %r1332, 14;
	shf.r.wrap.b32 	%r1335, %r1332, %r1333, 14;
	mov.b64 	%rd2699, {%r1335, %r1334};
	shf.r.wrap.b32 	%r1336, %r1333, %r1332, 18;
	shf.r.wrap.b32 	%r1337, %r1332, %r1333, 18;
	mov.b64 	%rd2700, {%r1337, %r1336};
	xor.b64  	%rd2701, %rd2700, %rd2699;
	shf.l.wrap.b32 	%r1338, %r1332, %r1333, 23;
	shf.l.wrap.b32 	%r1339, %r1333, %r1332, 23;
	mov.b64 	%rd2702, {%r1339, %r1338};
	xor.b64  	%rd2703, %rd2701, %rd2702;
	xor.b64  	%rd2704, %rd2662, %rd2637;
	and.b64  	%rd2705, %rd2687, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2637;
	ld.local.u64 	%rd18295, [%rd1+96];
	add.s64 	%rd2707, %rd2612, %rd18295;
	ld.const.u64 	%rd2708, [k_sha512+32];
	add.s64 	%rd2709, %rd2707, %rd2708;
	add.s64 	%rd2710, %rd2709, %rd2706;
	add.s64 	%rd2711, %rd2710, %rd2703;
	add.s64 	%rd2712, %rd2711, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd2698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd2698;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 28;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 28;
	mov.b64 	%rd2713, {%r1343, %r1342};
	shf.l.wrap.b32 	%r1344, %r1340, %r1341, 30;
	shf.l.wrap.b32 	%r1345, %r1341, %r1340, 30;
	mov.b64 	%rd2714, {%r1345, %r1344};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r1346, %r1340, %r1341, 25;
	shf.l.wrap.b32 	%r1347, %r1341, %r1340, 25;
	mov.b64 	%rd2716, {%r1347, %r1346};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	and.b64  	%rd2718, %rd2698, %rd2673;
	xor.b64  	%rd2719, %rd2698, %rd2673;
	and.b64  	%rd2720, %rd2719, %rd2648;
	or.b64  	%rd2721, %rd2720, %rd2718;
	add.s64 	%rd2722, %rd2711, %rd2721;
	add.s64 	%rd2723, %rd2722, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd2712;
	}
	shf.r.wrap.b32 	%r1350, %r1349, %r1348, 14;
	shf.r.wrap.b32 	%r1351, %r1348, %r1349, 14;
	mov.b64 	%rd2724, {%r1351, %r1350};
	shf.r.wrap.b32 	%r1352, %r1349, %r1348, 18;
	shf.r.wrap.b32 	%r1353, %r1348, %r1349, 18;
	mov.b64 	%rd2725, {%r1353, %r1352};
	xor.b64  	%rd2726, %rd2725, %rd2724;
	shf.l.wrap.b32 	%r1354, %r1348, %r1349, 23;
	shf.l.wrap.b32 	%r1355, %r1349, %r1348, 23;
	mov.b64 	%rd2727, {%r1355, %r1354};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	xor.b64  	%rd2729, %rd2687, %rd2662;
	and.b64  	%rd2730, %rd2712, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2662;
	ld.local.u64 	%rd18296, [%rd1+104];
	add.s64 	%rd2732, %rd2637, %rd18296;
	ld.const.u64 	%rd2733, [k_sha512+40];
	add.s64 	%rd2734, %rd2732, %rd2733;
	add.s64 	%rd2735, %rd2734, %rd2731;
	add.s64 	%rd2736, %rd2735, %rd2728;
	add.s64 	%rd2737, %rd2736, %rd2648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd2723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd2723;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 28;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 28;
	mov.b64 	%rd2738, {%r1359, %r1358};
	shf.l.wrap.b32 	%r1360, %r1356, %r1357, 30;
	shf.l.wrap.b32 	%r1361, %r1357, %r1356, 30;
	mov.b64 	%rd2739, {%r1361, %r1360};
	xor.b64  	%rd2740, %rd2739, %rd2738;
	shf.l.wrap.b32 	%r1362, %r1356, %r1357, 25;
	shf.l.wrap.b32 	%r1363, %r1357, %r1356, 25;
	mov.b64 	%rd2741, {%r1363, %r1362};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	and.b64  	%rd2743, %rd2723, %rd2698;
	xor.b64  	%rd2744, %rd2723, %rd2698;
	and.b64  	%rd2745, %rd2744, %rd2673;
	or.b64  	%rd2746, %rd2745, %rd2743;
	add.s64 	%rd2747, %rd2736, %rd2746;
	add.s64 	%rd2748, %rd2747, %rd2742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1364,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd2737;
	}
	shf.r.wrap.b32 	%r1366, %r1365, %r1364, 14;
	shf.r.wrap.b32 	%r1367, %r1364, %r1365, 14;
	mov.b64 	%rd2749, {%r1367, %r1366};
	shf.r.wrap.b32 	%r1368, %r1365, %r1364, 18;
	shf.r.wrap.b32 	%r1369, %r1364, %r1365, 18;
	mov.b64 	%rd2750, {%r1369, %r1368};
	xor.b64  	%rd2751, %rd2750, %rd2749;
	shf.l.wrap.b32 	%r1370, %r1364, %r1365, 23;
	shf.l.wrap.b32 	%r1371, %r1365, %r1364, 23;
	mov.b64 	%rd2752, {%r1371, %r1370};
	xor.b64  	%rd2753, %rd2751, %rd2752;
	xor.b64  	%rd2754, %rd2712, %rd2687;
	and.b64  	%rd2755, %rd2737, %rd2754;
	xor.b64  	%rd2756, %rd2755, %rd2687;
	ld.local.u64 	%rd18297, [%rd1+112];
	add.s64 	%rd2757, %rd2662, %rd18297;
	ld.const.u64 	%rd2758, [k_sha512+48];
	add.s64 	%rd2759, %rd2757, %rd2758;
	add.s64 	%rd2760, %rd2759, %rd2756;
	add.s64 	%rd2761, %rd2760, %rd2753;
	add.s64 	%rd2762, %rd2761, %rd2673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd2748;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 28;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 28;
	mov.b64 	%rd2763, {%r1375, %r1374};
	shf.l.wrap.b32 	%r1376, %r1372, %r1373, 30;
	shf.l.wrap.b32 	%r1377, %r1373, %r1372, 30;
	mov.b64 	%rd2764, {%r1377, %r1376};
	xor.b64  	%rd2765, %rd2764, %rd2763;
	shf.l.wrap.b32 	%r1378, %r1372, %r1373, 25;
	shf.l.wrap.b32 	%r1379, %r1373, %r1372, 25;
	mov.b64 	%rd2766, {%r1379, %r1378};
	xor.b64  	%rd2767, %rd2765, %rd2766;
	and.b64  	%rd2768, %rd2748, %rd2723;
	xor.b64  	%rd2769, %rd2748, %rd2723;
	and.b64  	%rd2770, %rd2769, %rd2698;
	or.b64  	%rd2771, %rd2770, %rd2768;
	add.s64 	%rd2772, %rd2761, %rd2771;
	add.s64 	%rd2773, %rd2772, %rd2767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1380,%dummy}, %rd2762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1381}, %rd2762;
	}
	shf.r.wrap.b32 	%r1382, %r1381, %r1380, 14;
	shf.r.wrap.b32 	%r1383, %r1380, %r1381, 14;
	mov.b64 	%rd2774, {%r1383, %r1382};
	shf.r.wrap.b32 	%r1384, %r1381, %r1380, 18;
	shf.r.wrap.b32 	%r1385, %r1380, %r1381, 18;
	mov.b64 	%rd2775, {%r1385, %r1384};
	xor.b64  	%rd2776, %rd2775, %rd2774;
	shf.l.wrap.b32 	%r1386, %r1380, %r1381, 23;
	shf.l.wrap.b32 	%r1387, %r1381, %r1380, 23;
	mov.b64 	%rd2777, {%r1387, %r1386};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	xor.b64  	%rd2779, %rd2737, %rd2712;
	and.b64  	%rd2780, %rd2762, %rd2779;
	xor.b64  	%rd2781, %rd2780, %rd2712;
	ld.local.u64 	%rd18298, [%rd1+120];
	add.s64 	%rd2782, %rd2687, %rd18298;
	ld.const.u64 	%rd2783, [k_sha512+56];
	add.s64 	%rd2784, %rd2782, %rd2783;
	add.s64 	%rd2785, %rd2784, %rd2781;
	add.s64 	%rd2786, %rd2785, %rd2778;
	add.s64 	%rd2787, %rd2786, %rd2698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd2773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd2773;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 28;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 28;
	mov.b64 	%rd2788, {%r1391, %r1390};
	shf.l.wrap.b32 	%r1392, %r1388, %r1389, 30;
	shf.l.wrap.b32 	%r1393, %r1389, %r1388, 30;
	mov.b64 	%rd2789, {%r1393, %r1392};
	xor.b64  	%rd2790, %rd2789, %rd2788;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 25;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 25;
	mov.b64 	%rd2791, {%r1395, %r1394};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	and.b64  	%rd2793, %rd2773, %rd2748;
	xor.b64  	%rd2794, %rd2773, %rd2748;
	and.b64  	%rd2795, %rd2794, %rd2723;
	or.b64  	%rd2796, %rd2795, %rd2793;
	add.s64 	%rd2797, %rd2786, %rd2796;
	add.s64 	%rd2798, %rd2797, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd2787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd2787;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 14;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 14;
	mov.b64 	%rd2799, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 18;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 18;
	mov.b64 	%rd2800, {%r1401, %r1400};
	xor.b64  	%rd2801, %rd2800, %rd2799;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 23;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 23;
	mov.b64 	%rd2802, {%r1403, %r1402};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	xor.b64  	%rd2804, %rd2762, %rd2737;
	and.b64  	%rd2805, %rd2787, %rd2804;
	xor.b64  	%rd2806, %rd2805, %rd2737;
	ld.local.u64 	%rd18282, [%rd1+128];
	add.s64 	%rd2807, %rd2712, %rd18282;
	ld.const.u64 	%rd2808, [k_sha512+64];
	add.s64 	%rd2809, %rd2807, %rd2808;
	add.s64 	%rd2810, %rd2809, %rd2806;
	add.s64 	%rd2811, %rd2810, %rd2803;
	add.s64 	%rd2812, %rd2811, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd2798;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 28;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 28;
	mov.b64 	%rd2813, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 30;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 30;
	mov.b64 	%rd2814, {%r1409, %r1408};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	shf.l.wrap.b32 	%r1410, %r1404, %r1405, 25;
	shf.l.wrap.b32 	%r1411, %r1405, %r1404, 25;
	mov.b64 	%rd2816, {%r1411, %r1410};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	and.b64  	%rd2818, %rd2798, %rd2773;
	xor.b64  	%rd2819, %rd2798, %rd2773;
	and.b64  	%rd2820, %rd2819, %rd2748;
	or.b64  	%rd2821, %rd2820, %rd2818;
	add.s64 	%rd2822, %rd2811, %rd2821;
	add.s64 	%rd2823, %rd2822, %rd2817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd2812;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 14;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 14;
	mov.b64 	%rd2824, {%r1415, %r1414};
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 18;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 18;
	mov.b64 	%rd2825, {%r1417, %r1416};
	xor.b64  	%rd2826, %rd2825, %rd2824;
	shf.l.wrap.b32 	%r1418, %r1412, %r1413, 23;
	shf.l.wrap.b32 	%r1419, %r1413, %r1412, 23;
	mov.b64 	%rd2827, {%r1419, %r1418};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	xor.b64  	%rd2829, %rd2787, %rd2762;
	and.b64  	%rd2830, %rd2812, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2762;
	ld.local.u64 	%rd18281, [%rd1+136];
	add.s64 	%rd2832, %rd2737, %rd18281;
	ld.const.u64 	%rd2833, [k_sha512+72];
	add.s64 	%rd2834, %rd2832, %rd2833;
	add.s64 	%rd2835, %rd2834, %rd2831;
	add.s64 	%rd2836, %rd2835, %rd2828;
	add.s64 	%rd2837, %rd2836, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd2823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd2823;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 28;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 28;
	mov.b64 	%rd2838, {%r1423, %r1422};
	shf.l.wrap.b32 	%r1424, %r1420, %r1421, 30;
	shf.l.wrap.b32 	%r1425, %r1421, %r1420, 30;
	mov.b64 	%rd2839, {%r1425, %r1424};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shf.l.wrap.b32 	%r1426, %r1420, %r1421, 25;
	shf.l.wrap.b32 	%r1427, %r1421, %r1420, 25;
	mov.b64 	%rd2841, {%r1427, %r1426};
	xor.b64  	%rd2842, %rd2840, %rd2841;
	and.b64  	%rd2843, %rd2823, %rd2798;
	xor.b64  	%rd2844, %rd2823, %rd2798;
	and.b64  	%rd2845, %rd2844, %rd2773;
	or.b64  	%rd2846, %rd2845, %rd2843;
	add.s64 	%rd2847, %rd2836, %rd2846;
	add.s64 	%rd2848, %rd2847, %rd2842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd2837;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 14;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 14;
	mov.b64 	%rd2849, {%r1431, %r1430};
	shf.r.wrap.b32 	%r1432, %r1429, %r1428, 18;
	shf.r.wrap.b32 	%r1433, %r1428, %r1429, 18;
	mov.b64 	%rd2850, {%r1433, %r1432};
	xor.b64  	%rd2851, %rd2850, %rd2849;
	shf.l.wrap.b32 	%r1434, %r1428, %r1429, 23;
	shf.l.wrap.b32 	%r1435, %r1429, %r1428, 23;
	mov.b64 	%rd2852, {%r1435, %r1434};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	xor.b64  	%rd2854, %rd2812, %rd2787;
	and.b64  	%rd2855, %rd2837, %rd2854;
	xor.b64  	%rd2856, %rd2855, %rd2787;
	ld.local.u64 	%rd18280, [%rd1+144];
	add.s64 	%rd2857, %rd2762, %rd18280;
	ld.const.u64 	%rd2858, [k_sha512+80];
	add.s64 	%rd2859, %rd2857, %rd2858;
	add.s64 	%rd2860, %rd2859, %rd2856;
	add.s64 	%rd2861, %rd2860, %rd2853;
	add.s64 	%rd2862, %rd2861, %rd2773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd2848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd2848;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 28;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 28;
	mov.b64 	%rd2863, {%r1439, %r1438};
	shf.l.wrap.b32 	%r1440, %r1436, %r1437, 30;
	shf.l.wrap.b32 	%r1441, %r1437, %r1436, 30;
	mov.b64 	%rd2864, {%r1441, %r1440};
	xor.b64  	%rd2865, %rd2864, %rd2863;
	shf.l.wrap.b32 	%r1442, %r1436, %r1437, 25;
	shf.l.wrap.b32 	%r1443, %r1437, %r1436, 25;
	mov.b64 	%rd2866, {%r1443, %r1442};
	xor.b64  	%rd2867, %rd2865, %rd2866;
	and.b64  	%rd2868, %rd2848, %rd2823;
	xor.b64  	%rd2869, %rd2848, %rd2823;
	and.b64  	%rd2870, %rd2869, %rd2798;
	or.b64  	%rd2871, %rd2870, %rd2868;
	add.s64 	%rd2872, %rd2861, %rd2871;
	add.s64 	%rd2873, %rd2872, %rd2867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd2862;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 14;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 14;
	mov.b64 	%rd2874, {%r1447, %r1446};
	shf.r.wrap.b32 	%r1448, %r1445, %r1444, 18;
	shf.r.wrap.b32 	%r1449, %r1444, %r1445, 18;
	mov.b64 	%rd2875, {%r1449, %r1448};
	xor.b64  	%rd2876, %rd2875, %rd2874;
	shf.l.wrap.b32 	%r1450, %r1444, %r1445, 23;
	shf.l.wrap.b32 	%r1451, %r1445, %r1444, 23;
	mov.b64 	%rd2877, {%r1451, %r1450};
	xor.b64  	%rd2878, %rd2876, %rd2877;
	xor.b64  	%rd2879, %rd2837, %rd2812;
	and.b64  	%rd2880, %rd2862, %rd2879;
	xor.b64  	%rd2881, %rd2880, %rd2812;
	ld.local.u64 	%rd18279, [%rd1+152];
	add.s64 	%rd2882, %rd2787, %rd18279;
	ld.const.u64 	%rd2883, [k_sha512+88];
	add.s64 	%rd2884, %rd2882, %rd2883;
	add.s64 	%rd2885, %rd2884, %rd2881;
	add.s64 	%rd2886, %rd2885, %rd2878;
	add.s64 	%rd2887, %rd2886, %rd2798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd2873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd2873;
	}
	shf.r.wrap.b32 	%r1454, %r1453, %r1452, 28;
	shf.r.wrap.b32 	%r1455, %r1452, %r1453, 28;
	mov.b64 	%rd2888, {%r1455, %r1454};
	shf.l.wrap.b32 	%r1456, %r1452, %r1453, 30;
	shf.l.wrap.b32 	%r1457, %r1453, %r1452, 30;
	mov.b64 	%rd2889, {%r1457, %r1456};
	xor.b64  	%rd2890, %rd2889, %rd2888;
	shf.l.wrap.b32 	%r1458, %r1452, %r1453, 25;
	shf.l.wrap.b32 	%r1459, %r1453, %r1452, 25;
	mov.b64 	%rd2891, {%r1459, %r1458};
	xor.b64  	%rd2892, %rd2890, %rd2891;
	and.b64  	%rd2893, %rd2873, %rd2848;
	xor.b64  	%rd2894, %rd2873, %rd2848;
	and.b64  	%rd2895, %rd2894, %rd2823;
	or.b64  	%rd2896, %rd2895, %rd2893;
	add.s64 	%rd2897, %rd2886, %rd2896;
	add.s64 	%rd2898, %rd2897, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd2887;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 14;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 14;
	mov.b64 	%rd2899, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1461, %r1460, 18;
	shf.r.wrap.b32 	%r1465, %r1460, %r1461, 18;
	mov.b64 	%rd2900, {%r1465, %r1464};
	xor.b64  	%rd2901, %rd2900, %rd2899;
	shf.l.wrap.b32 	%r1466, %r1460, %r1461, 23;
	shf.l.wrap.b32 	%r1467, %r1461, %r1460, 23;
	mov.b64 	%rd2902, {%r1467, %r1466};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	xor.b64  	%rd2904, %rd2862, %rd2837;
	and.b64  	%rd2905, %rd2887, %rd2904;
	xor.b64  	%rd2906, %rd2905, %rd2837;
	ld.local.u64 	%rd18278, [%rd1+160];
	add.s64 	%rd2907, %rd2812, %rd18278;
	ld.const.u64 	%rd2908, [k_sha512+96];
	add.s64 	%rd2909, %rd2907, %rd2908;
	add.s64 	%rd2910, %rd2909, %rd2906;
	add.s64 	%rd2911, %rd2910, %rd2903;
	add.s64 	%rd18290, %rd2911, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd2898;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 28;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 28;
	mov.b64 	%rd2912, {%r1471, %r1470};
	shf.l.wrap.b32 	%r1472, %r1468, %r1469, 30;
	shf.l.wrap.b32 	%r1473, %r1469, %r1468, 30;
	mov.b64 	%rd2913, {%r1473, %r1472};
	xor.b64  	%rd2914, %rd2913, %rd2912;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 25;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 25;
	mov.b64 	%rd2915, {%r1475, %r1474};
	xor.b64  	%rd2916, %rd2914, %rd2915;
	and.b64  	%rd2917, %rd2898, %rd2873;
	xor.b64  	%rd2918, %rd2898, %rd2873;
	and.b64  	%rd2919, %rd2918, %rd2848;
	or.b64  	%rd2920, %rd2919, %rd2917;
	add.s64 	%rd2921, %rd2911, %rd2920;
	add.s64 	%rd18286, %rd2921, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd18290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd18290;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 14;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 14;
	mov.b64 	%rd2922, {%r1479, %r1478};
	shf.r.wrap.b32 	%r1480, %r1477, %r1476, 18;
	shf.r.wrap.b32 	%r1481, %r1476, %r1477, 18;
	mov.b64 	%rd2923, {%r1481, %r1480};
	xor.b64  	%rd2924, %rd2923, %rd2922;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 23;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 23;
	mov.b64 	%rd2925, {%r1483, %r1482};
	xor.b64  	%rd2926, %rd2924, %rd2925;
	xor.b64  	%rd2927, %rd2887, %rd2862;
	and.b64  	%rd2928, %rd18290, %rd2927;
	xor.b64  	%rd2929, %rd2928, %rd2862;
	ld.local.u64 	%rd18277, [%rd1+168];
	add.s64 	%rd2930, %rd2837, %rd18277;
	ld.const.u64 	%rd2931, [k_sha512+104];
	add.s64 	%rd2932, %rd2930, %rd2931;
	add.s64 	%rd2933, %rd2932, %rd2929;
	add.s64 	%rd2934, %rd2933, %rd2926;
	add.s64 	%rd18289, %rd2934, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd18286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd18286;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 28;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 28;
	mov.b64 	%rd2935, {%r1487, %r1486};
	shf.l.wrap.b32 	%r1488, %r1484, %r1485, 30;
	shf.l.wrap.b32 	%r1489, %r1485, %r1484, 30;
	mov.b64 	%rd2936, {%r1489, %r1488};
	xor.b64  	%rd2937, %rd2936, %rd2935;
	shf.l.wrap.b32 	%r1490, %r1484, %r1485, 25;
	shf.l.wrap.b32 	%r1491, %r1485, %r1484, 25;
	mov.b64 	%rd2938, {%r1491, %r1490};
	xor.b64  	%rd2939, %rd2937, %rd2938;
	and.b64  	%rd2940, %rd18286, %rd2898;
	xor.b64  	%rd2941, %rd18286, %rd2898;
	and.b64  	%rd2942, %rd2941, %rd2873;
	or.b64  	%rd2943, %rd2942, %rd2940;
	add.s64 	%rd2944, %rd2934, %rd2943;
	add.s64 	%rd18285, %rd2944, %rd2939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd18289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd18289;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2945, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2946, {%r1497, %r1496};
	xor.b64  	%rd2947, %rd2946, %rd2945;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2948, {%r1499, %r1498};
	xor.b64  	%rd2949, %rd2947, %rd2948;
	xor.b64  	%rd2950, %rd18290, %rd2887;
	and.b64  	%rd2951, %rd18289, %rd2950;
	xor.b64  	%rd2952, %rd2951, %rd2887;
	ld.local.u64 	%rd18276, [%rd1+176];
	add.s64 	%rd2953, %rd2862, %rd18276;
	ld.const.u64 	%rd2954, [k_sha512+112];
	add.s64 	%rd2955, %rd2953, %rd2954;
	add.s64 	%rd2956, %rd2955, %rd2952;
	add.s64 	%rd2957, %rd2956, %rd2949;
	add.s64 	%rd18288, %rd2957, %rd2873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd18285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd18285;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2958, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2959, {%r1505, %r1504};
	xor.b64  	%rd2960, %rd2959, %rd2958;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2961, {%r1507, %r1506};
	xor.b64  	%rd2962, %rd2960, %rd2961;
	and.b64  	%rd2963, %rd18285, %rd18286;
	xor.b64  	%rd2964, %rd18285, %rd18286;
	and.b64  	%rd2965, %rd2964, %rd2898;
	or.b64  	%rd2966, %rd2965, %rd2963;
	add.s64 	%rd2967, %rd2957, %rd2966;
	add.s64 	%rd18284, %rd2967, %rd2962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd18288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd18288;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 14;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 14;
	mov.b64 	%rd2968, {%r1511, %r1510};
	shf.r.wrap.b32 	%r1512, %r1509, %r1508, 18;
	shf.r.wrap.b32 	%r1513, %r1508, %r1509, 18;
	mov.b64 	%rd2969, {%r1513, %r1512};
	xor.b64  	%rd2970, %rd2969, %rd2968;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 23;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 23;
	mov.b64 	%rd2971, {%r1515, %r1514};
	xor.b64  	%rd2972, %rd2970, %rd2971;
	xor.b64  	%rd2973, %rd18289, %rd18290;
	and.b64  	%rd2974, %rd18288, %rd2973;
	xor.b64  	%rd2975, %rd2974, %rd18290;
	ld.local.u64 	%rd18275, [%rd1+184];
	add.s64 	%rd2976, %rd2887, %rd18275;
	ld.const.u64 	%rd2977, [k_sha512+120];
	add.s64 	%rd2978, %rd2976, %rd2977;
	add.s64 	%rd2979, %rd2978, %rd2975;
	add.s64 	%rd2980, %rd2979, %rd2972;
	add.s64 	%rd18287, %rd2980, %rd2898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd18284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd18284;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 28;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 28;
	mov.b64 	%rd2981, {%r1519, %r1518};
	shf.l.wrap.b32 	%r1520, %r1516, %r1517, 30;
	shf.l.wrap.b32 	%r1521, %r1517, %r1516, 30;
	mov.b64 	%rd2982, {%r1521, %r1520};
	xor.b64  	%rd2983, %rd2982, %rd2981;
	shf.l.wrap.b32 	%r1522, %r1516, %r1517, 25;
	shf.l.wrap.b32 	%r1523, %r1517, %r1516, 25;
	mov.b64 	%rd2984, {%r1523, %r1522};
	xor.b64  	%rd2985, %rd2983, %rd2984;
	and.b64  	%rd2986, %rd18284, %rd18285;
	xor.b64  	%rd2987, %rd18284, %rd18285;
	and.b64  	%rd2988, %rd2987, %rd18286;
	or.b64  	%rd2989, %rd2988, %rd2986;
	add.s64 	%rd2990, %rd2980, %rd2989;
	add.s64 	%rd18283, %rd2990, %rd2985;
	mov.u32 	%r12578, 16;

BB0_46:
	shr.u64 	%rd2991, %rd18276, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd18276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd18276;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 19;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 19;
	mov.b64 	%rd2992, {%r1527, %r1526};
	xor.b64  	%rd2993, %rd2992, %rd2991;
	shf.l.wrap.b32 	%r1528, %r1524, %r1525, 3;
	shf.l.wrap.b32 	%r1529, %r1525, %r1524, 3;
	mov.b64 	%rd2994, {%r1529, %r1528};
	xor.b64  	%rd2995, %rd2993, %rd2994;
	shr.u64 	%rd2996, %rd18292, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd18292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd18292;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 1;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 1;
	mov.b64 	%rd2997, {%r1533, %r1532};
	xor.b64  	%rd2998, %rd2997, %rd2996;
	shf.r.wrap.b32 	%r1534, %r1531, %r1530, 8;
	shf.r.wrap.b32 	%r1535, %r1530, %r1531, 8;
	mov.b64 	%rd2999, {%r1535, %r1534};
	xor.b64  	%rd3000, %rd2998, %rd2999;
	add.s64 	%rd3001, %rd18281, %rd18291;
	add.s64 	%rd3002, %rd3001, %rd2995;
	add.s64 	%rd18291, %rd3002, %rd3000;
	shr.u64 	%rd3003, %rd18275, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd18275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd18275;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 19;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 19;
	mov.b64 	%rd3004, {%r1539, %r1538};
	xor.b64  	%rd3005, %rd3004, %rd3003;
	shf.l.wrap.b32 	%r1540, %r1536, %r1537, 3;
	shf.l.wrap.b32 	%r1541, %r1537, %r1536, 3;
	mov.b64 	%rd3006, {%r1541, %r1540};
	xor.b64  	%rd3007, %rd3005, %rd3006;
	shr.u64 	%rd3008, %rd18293, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd18293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd18293;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 1;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 1;
	mov.b64 	%rd3009, {%r1545, %r1544};
	xor.b64  	%rd3010, %rd3009, %rd3008;
	shf.r.wrap.b32 	%r1546, %r1543, %r1542, 8;
	shf.r.wrap.b32 	%r1547, %r1542, %r1543, 8;
	mov.b64 	%rd3011, {%r1547, %r1546};
	xor.b64  	%rd3012, %rd3010, %rd3011;
	add.s64 	%rd3013, %rd18280, %rd18292;
	add.s64 	%rd3014, %rd3013, %rd3007;
	add.s64 	%rd18292, %rd3014, %rd3012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1548,%dummy}, %rd18291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd18291;
	}
	shf.r.wrap.b32 	%r1550, %r1549, %r1548, 19;
	shf.r.wrap.b32 	%r1551, %r1548, %r1549, 19;
	mov.b64 	%rd3015, {%r1551, %r1550};
	shf.l.wrap.b32 	%r1552, %r1548, %r1549, 3;
	shf.l.wrap.b32 	%r1553, %r1549, %r1548, 3;
	mov.b64 	%rd3016, {%r1553, %r1552};
	shr.u64 	%rd3017, %rd18291, 6;
	xor.b64  	%rd3018, %rd3015, %rd3017;
	xor.b64  	%rd3019, %rd3018, %rd3016;
	shr.u64 	%rd3020, %rd18294, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd18294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd18294;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 1;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 1;
	mov.b64 	%rd3021, {%r1557, %r1556};
	xor.b64  	%rd3022, %rd3021, %rd3020;
	shf.r.wrap.b32 	%r1558, %r1555, %r1554, 8;
	shf.r.wrap.b32 	%r1559, %r1554, %r1555, 8;
	mov.b64 	%rd3023, {%r1559, %r1558};
	xor.b64  	%rd3024, %rd3022, %rd3023;
	add.s64 	%rd3025, %rd18279, %rd18293;
	add.s64 	%rd3026, %rd3025, %rd3019;
	add.s64 	%rd18293, %rd3026, %rd3024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd18292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd18292;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 19;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 19;
	mov.b64 	%rd3027, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 3;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 3;
	mov.b64 	%rd3028, {%r1565, %r1564};
	shr.u64 	%rd3029, %rd18292, 6;
	xor.b64  	%rd3030, %rd3027, %rd3029;
	xor.b64  	%rd3031, %rd3030, %rd3028;
	shr.u64 	%rd3032, %rd18295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd18295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd18295;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 1;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 1;
	mov.b64 	%rd3033, {%r1569, %r1568};
	xor.b64  	%rd3034, %rd3033, %rd3032;
	shf.r.wrap.b32 	%r1570, %r1567, %r1566, 8;
	shf.r.wrap.b32 	%r1571, %r1566, %r1567, 8;
	mov.b64 	%rd3035, {%r1571, %r1570};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	add.s64 	%rd3037, %rd18278, %rd18294;
	add.s64 	%rd3038, %rd3037, %rd3031;
	add.s64 	%rd18294, %rd3038, %rd3036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd18293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1573}, %rd18293;
	}
	shf.r.wrap.b32 	%r1574, %r1573, %r1572, 19;
	shf.r.wrap.b32 	%r1575, %r1572, %r1573, 19;
	mov.b64 	%rd3039, {%r1575, %r1574};
	shf.l.wrap.b32 	%r1576, %r1572, %r1573, 3;
	shf.l.wrap.b32 	%r1577, %r1573, %r1572, 3;
	mov.b64 	%rd3040, {%r1577, %r1576};
	shr.u64 	%rd3041, %rd18293, 6;
	xor.b64  	%rd3042, %rd3039, %rd3041;
	xor.b64  	%rd3043, %rd3042, %rd3040;
	shr.u64 	%rd3044, %rd18296, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd18296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd18296;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 1;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 1;
	mov.b64 	%rd3045, {%r1581, %r1580};
	xor.b64  	%rd3046, %rd3045, %rd3044;
	shf.r.wrap.b32 	%r1582, %r1579, %r1578, 8;
	shf.r.wrap.b32 	%r1583, %r1578, %r1579, 8;
	mov.b64 	%rd3047, {%r1583, %r1582};
	xor.b64  	%rd3048, %rd3046, %rd3047;
	add.s64 	%rd3049, %rd18277, %rd18295;
	add.s64 	%rd3050, %rd3049, %rd3043;
	add.s64 	%rd18295, %rd3050, %rd3048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd18294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd18294;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd3051, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd3052, {%r1589, %r1588};
	shr.u64 	%rd3053, %rd18294, 6;
	xor.b64  	%rd3054, %rd3051, %rd3053;
	xor.b64  	%rd3055, %rd3054, %rd3052;
	shr.u64 	%rd3056, %rd18297, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1590,%dummy}, %rd18297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1591}, %rd18297;
	}
	shf.r.wrap.b32 	%r1592, %r1591, %r1590, 1;
	shf.r.wrap.b32 	%r1593, %r1590, %r1591, 1;
	mov.b64 	%rd3057, {%r1593, %r1592};
	xor.b64  	%rd3058, %rd3057, %rd3056;
	shf.r.wrap.b32 	%r1594, %r1591, %r1590, 8;
	shf.r.wrap.b32 	%r1595, %r1590, %r1591, 8;
	mov.b64 	%rd3059, {%r1595, %r1594};
	xor.b64  	%rd3060, %rd3058, %rd3059;
	add.s64 	%rd3061, %rd18276, %rd18296;
	add.s64 	%rd3062, %rd3061, %rd3055;
	add.s64 	%rd18296, %rd3062, %rd3060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd18295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd18295;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 19;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 19;
	mov.b64 	%rd3063, {%r1599, %r1598};
	shf.l.wrap.b32 	%r1600, %r1596, %r1597, 3;
	shf.l.wrap.b32 	%r1601, %r1597, %r1596, 3;
	mov.b64 	%rd3064, {%r1601, %r1600};
	shr.u64 	%rd3065, %rd18295, 6;
	xor.b64  	%rd3066, %rd3063, %rd3065;
	xor.b64  	%rd3067, %rd3066, %rd3064;
	shr.u64 	%rd3068, %rd18298, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd18298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd18298;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 1;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 1;
	mov.b64 	%rd3069, {%r1605, %r1604};
	xor.b64  	%rd3070, %rd3069, %rd3068;
	shf.r.wrap.b32 	%r1606, %r1603, %r1602, 8;
	shf.r.wrap.b32 	%r1607, %r1602, %r1603, 8;
	mov.b64 	%rd3071, {%r1607, %r1606};
	xor.b64  	%rd3072, %rd3070, %rd3071;
	add.s64 	%rd3073, %rd18275, %rd18297;
	add.s64 	%rd3074, %rd3073, %rd3067;
	add.s64 	%rd18297, %rd3074, %rd3072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd18296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd18296;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 19;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 19;
	mov.b64 	%rd3075, {%r1611, %r1610};
	shf.l.wrap.b32 	%r1612, %r1608, %r1609, 3;
	shf.l.wrap.b32 	%r1613, %r1609, %r1608, 3;
	mov.b64 	%rd3076, {%r1613, %r1612};
	shr.u64 	%rd3077, %rd18296, 6;
	xor.b64  	%rd3078, %rd3075, %rd3077;
	xor.b64  	%rd3079, %rd3078, %rd3076;
	shr.u64 	%rd3080, %rd18282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd18282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd18282;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 1;
	mov.b64 	%rd3081, {%r1617, %r1616};
	xor.b64  	%rd3082, %rd3081, %rd3080;
	shf.r.wrap.b32 	%r1618, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r1619, %r1614, %r1615, 8;
	mov.b64 	%rd3083, {%r1619, %r1618};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	add.s64 	%rd3085, %rd18291, %rd18298;
	add.s64 	%rd3086, %rd3085, %rd3079;
	add.s64 	%rd18298, %rd3086, %rd3084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1620,%dummy}, %rd18297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd18297;
	}
	shf.r.wrap.b32 	%r1622, %r1621, %r1620, 19;
	shf.r.wrap.b32 	%r1623, %r1620, %r1621, 19;
	mov.b64 	%rd3087, {%r1623, %r1622};
	shf.l.wrap.b32 	%r1624, %r1620, %r1621, 3;
	shf.l.wrap.b32 	%r1625, %r1621, %r1620, 3;
	mov.b64 	%rd3088, {%r1625, %r1624};
	shr.u64 	%rd3089, %rd18297, 6;
	xor.b64  	%rd3090, %rd3087, %rd3089;
	xor.b64  	%rd3091, %rd3090, %rd3088;
	shr.u64 	%rd3092, %rd18281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd18281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd18281;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 1;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 1;
	mov.b64 	%rd3093, {%r1629, %r1628};
	xor.b64  	%rd3094, %rd3093, %rd3092;
	shf.r.wrap.b32 	%r1630, %r1627, %r1626, 8;
	shf.r.wrap.b32 	%r1631, %r1626, %r1627, 8;
	mov.b64 	%rd3095, {%r1631, %r1630};
	xor.b64  	%rd3096, %rd3094, %rd3095;
	add.s64 	%rd3097, %rd18292, %rd18282;
	add.s64 	%rd3098, %rd3097, %rd3091;
	add.s64 	%rd18282, %rd3098, %rd3096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd18298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd18298;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 19;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 19;
	mov.b64 	%rd3099, {%r1635, %r1634};
	shf.l.wrap.b32 	%r1636, %r1632, %r1633, 3;
	shf.l.wrap.b32 	%r1637, %r1633, %r1632, 3;
	mov.b64 	%rd3100, {%r1637, %r1636};
	shr.u64 	%rd3101, %rd18298, 6;
	xor.b64  	%rd3102, %rd3099, %rd3101;
	xor.b64  	%rd3103, %rd3102, %rd3100;
	shr.u64 	%rd3104, %rd18280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd18280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd18280;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 1;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 1;
	mov.b64 	%rd3105, {%r1641, %r1640};
	xor.b64  	%rd3106, %rd3105, %rd3104;
	shf.r.wrap.b32 	%r1642, %r1639, %r1638, 8;
	shf.r.wrap.b32 	%r1643, %r1638, %r1639, 8;
	mov.b64 	%rd3107, {%r1643, %r1642};
	xor.b64  	%rd3108, %rd3106, %rd3107;
	add.s64 	%rd3109, %rd18293, %rd18281;
	add.s64 	%rd3110, %rd3109, %rd3103;
	add.s64 	%rd18281, %rd3110, %rd3108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd18282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd18282;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd3111, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd3112, {%r1649, %r1648};
	shr.u64 	%rd3113, %rd18282, 6;
	xor.b64  	%rd3114, %rd3111, %rd3113;
	xor.b64  	%rd3115, %rd3114, %rd3112;
	shr.u64 	%rd3116, %rd18279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd18279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd18279;
	}
	shf.r.wrap.b32 	%r1652, %r1651, %r1650, 1;
	shf.r.wrap.b32 	%r1653, %r1650, %r1651, 1;
	mov.b64 	%rd3117, {%r1653, %r1652};
	xor.b64  	%rd3118, %rd3117, %rd3116;
	shf.r.wrap.b32 	%r1654, %r1651, %r1650, 8;
	shf.r.wrap.b32 	%r1655, %r1650, %r1651, 8;
	mov.b64 	%rd3119, {%r1655, %r1654};
	xor.b64  	%rd3120, %rd3118, %rd3119;
	add.s64 	%rd3121, %rd18294, %rd18280;
	add.s64 	%rd3122, %rd3121, %rd3115;
	add.s64 	%rd18280, %rd3122, %rd3120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd18281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd18281;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 19;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 19;
	mov.b64 	%rd3123, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 3;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 3;
	mov.b64 	%rd3124, {%r1661, %r1660};
	shr.u64 	%rd3125, %rd18281, 6;
	xor.b64  	%rd3126, %rd3123, %rd3125;
	xor.b64  	%rd3127, %rd3126, %rd3124;
	shr.u64 	%rd3128, %rd18278, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd18278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd18278;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 1;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 1;
	mov.b64 	%rd3129, {%r1665, %r1664};
	xor.b64  	%rd3130, %rd3129, %rd3128;
	shf.r.wrap.b32 	%r1666, %r1663, %r1662, 8;
	shf.r.wrap.b32 	%r1667, %r1662, %r1663, 8;
	mov.b64 	%rd3131, {%r1667, %r1666};
	xor.b64  	%rd3132, %rd3130, %rd3131;
	add.s64 	%rd3133, %rd18295, %rd18279;
	add.s64 	%rd3134, %rd3133, %rd3127;
	add.s64 	%rd18279, %rd3134, %rd3132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd18280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd18280;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 19;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 19;
	mov.b64 	%rd3135, {%r1671, %r1670};
	shf.l.wrap.b32 	%r1672, %r1668, %r1669, 3;
	shf.l.wrap.b32 	%r1673, %r1669, %r1668, 3;
	mov.b64 	%rd3136, {%r1673, %r1672};
	shr.u64 	%rd3137, %rd18280, 6;
	xor.b64  	%rd3138, %rd3135, %rd3137;
	xor.b64  	%rd3139, %rd3138, %rd3136;
	shr.u64 	%rd3140, %rd18277, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd18277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd18277;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 1;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 1;
	mov.b64 	%rd3141, {%r1677, %r1676};
	xor.b64  	%rd3142, %rd3141, %rd3140;
	shf.r.wrap.b32 	%r1678, %r1675, %r1674, 8;
	shf.r.wrap.b32 	%r1679, %r1674, %r1675, 8;
	mov.b64 	%rd3143, {%r1679, %r1678};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	add.s64 	%rd3145, %rd18296, %rd18278;
	add.s64 	%rd3146, %rd3145, %rd3139;
	add.s64 	%rd18278, %rd3146, %rd3144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd18279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd18279;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 19;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 19;
	mov.b64 	%rd3147, {%r1683, %r1682};
	shf.l.wrap.b32 	%r1684, %r1680, %r1681, 3;
	shf.l.wrap.b32 	%r1685, %r1681, %r1680, 3;
	mov.b64 	%rd3148, {%r1685, %r1684};
	shr.u64 	%rd3149, %rd18279, 6;
	xor.b64  	%rd3150, %rd3147, %rd3149;
	xor.b64  	%rd3151, %rd3150, %rd3148;
	shr.u64 	%rd3152, %rd18276, 7;
	shf.r.wrap.b32 	%r1686, %r1525, %r1524, 1;
	shf.r.wrap.b32 	%r1687, %r1524, %r1525, 1;
	mov.b64 	%rd3153, {%r1687, %r1686};
	xor.b64  	%rd3154, %rd3153, %rd3152;
	shf.r.wrap.b32 	%r1688, %r1525, %r1524, 8;
	shf.r.wrap.b32 	%r1689, %r1524, %r1525, 8;
	mov.b64 	%rd3155, {%r1689, %r1688};
	xor.b64  	%rd3156, %rd3154, %rd3155;
	add.s64 	%rd3157, %rd18297, %rd18277;
	add.s64 	%rd3158, %rd3157, %rd3151;
	add.s64 	%rd18277, %rd3158, %rd3156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd18278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1691}, %rd18278;
	}
	shf.r.wrap.b32 	%r1692, %r1691, %r1690, 19;
	shf.r.wrap.b32 	%r1693, %r1690, %r1691, 19;
	mov.b64 	%rd3159, {%r1693, %r1692};
	shf.l.wrap.b32 	%r1694, %r1690, %r1691, 3;
	shf.l.wrap.b32 	%r1695, %r1691, %r1690, 3;
	mov.b64 	%rd3160, {%r1695, %r1694};
	shr.u64 	%rd3161, %rd18278, 6;
	xor.b64  	%rd3162, %rd3159, %rd3161;
	xor.b64  	%rd3163, %rd3162, %rd3160;
	shr.u64 	%rd3164, %rd18275, 7;
	shf.r.wrap.b32 	%r1696, %r1537, %r1536, 1;
	shf.r.wrap.b32 	%r1697, %r1536, %r1537, 1;
	mov.b64 	%rd3165, {%r1697, %r1696};
	xor.b64  	%rd3166, %rd3165, %rd3164;
	shf.r.wrap.b32 	%r1698, %r1537, %r1536, 8;
	shf.r.wrap.b32 	%r1699, %r1536, %r1537, 8;
	mov.b64 	%rd3167, {%r1699, %r1698};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	add.s64 	%rd3169, %rd18298, %rd18276;
	add.s64 	%rd3170, %rd3169, %rd3163;
	add.s64 	%rd18276, %rd3170, %rd3168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd18277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd18277;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 19;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 19;
	mov.b64 	%rd3171, {%r1703, %r1702};
	shf.l.wrap.b32 	%r1704, %r1700, %r1701, 3;
	shf.l.wrap.b32 	%r1705, %r1701, %r1700, 3;
	mov.b64 	%rd3172, {%r1705, %r1704};
	shr.u64 	%rd3173, %rd18277, 6;
	xor.b64  	%rd3174, %rd3171, %rd3173;
	xor.b64  	%rd3175, %rd3174, %rd3172;
	shf.r.wrap.b32 	%r1706, %r1549, %r1548, 1;
	shf.r.wrap.b32 	%r1707, %r1548, %r1549, 1;
	mov.b64 	%rd3176, {%r1707, %r1706};
	shf.r.wrap.b32 	%r1708, %r1549, %r1548, 8;
	shf.r.wrap.b32 	%r1709, %r1548, %r1549, 8;
	mov.b64 	%rd3177, {%r1709, %r1708};
	shr.u64 	%rd3178, %rd18291, 7;
	xor.b64  	%rd3179, %rd3176, %rd3178;
	xor.b64  	%rd3180, %rd3179, %rd3177;
	add.s64 	%rd3181, %rd18282, %rd18275;
	add.s64 	%rd3182, %rd3181, %rd3175;
	add.s64 	%rd18275, %rd3182, %rd3180;
	mul.wide.s32 	%rd3183, %r12578, 8;
	mov.u64 	%rd3184, k_sha512;
	add.s64 	%rd3185, %rd3184, %rd3183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd18287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd18287;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 18;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 18;
	mov.b64 	%rd3186, {%r1713, %r1712};
	shf.r.wrap.b32 	%r1714, %r1711, %r1710, 14;
	shf.r.wrap.b32 	%r1715, %r1710, %r1711, 14;
	mov.b64 	%rd3187, {%r1715, %r1714};
	xor.b64  	%rd3188, %rd3186, %rd3187;
	shf.l.wrap.b32 	%r1716, %r1710, %r1711, 23;
	shf.l.wrap.b32 	%r1717, %r1711, %r1710, 23;
	mov.b64 	%rd3189, {%r1717, %r1716};
	xor.b64  	%rd3190, %rd3188, %rd3189;
	xor.b64  	%rd3191, %rd18288, %rd18289;
	and.b64  	%rd3192, %rd18287, %rd3191;
	xor.b64  	%rd3193, %rd3192, %rd18289;
	add.s64 	%rd3194, %rd3193, %rd18290;
	add.s64 	%rd3195, %rd3194, %rd18291;
	ld.const.u64 	%rd3196, [%rd3185];
	add.s64 	%rd3197, %rd3195, %rd3196;
	add.s64 	%rd3198, %rd3197, %rd3190;
	add.s64 	%rd3199, %rd3198, %rd18286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd18283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd18283;
	}
	shf.l.wrap.b32 	%r1720, %r1719, %r1718, 30;
	shf.l.wrap.b32 	%r1721, %r1718, %r1719, 30;
	mov.b64 	%rd3200, {%r1721, %r1720};
	shf.r.wrap.b32 	%r1722, %r1718, %r1719, 28;
	shf.r.wrap.b32 	%r1723, %r1719, %r1718, 28;
	mov.b64 	%rd3201, {%r1723, %r1722};
	xor.b64  	%rd3202, %rd3200, %rd3201;
	shf.l.wrap.b32 	%r1724, %r1719, %r1718, 25;
	shf.l.wrap.b32 	%r1725, %r1718, %r1719, 25;
	mov.b64 	%rd3203, {%r1725, %r1724};
	xor.b64  	%rd3204, %rd3202, %rd3203;
	xor.b64  	%rd3205, %rd18283, %rd18284;
	and.b64  	%rd3206, %rd3205, %rd18285;
	and.b64  	%rd3207, %rd18283, %rd18284;
	or.b64  	%rd3208, %rd3206, %rd3207;
	add.s64 	%rd3209, %rd3198, %rd3208;
	add.s64 	%rd3210, %rd3209, %rd3204;
	add.s32 	%r1726, %r12578, 1;
	mul.wide.s32 	%rd3211, %r1726, 8;
	add.s64 	%rd3212, %rd3184, %rd3211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd3199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd3199;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 14;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 14;
	mov.b64 	%rd3213, {%r1730, %r1729};
	shf.r.wrap.b32 	%r1731, %r1728, %r1727, 18;
	shf.r.wrap.b32 	%r1732, %r1727, %r1728, 18;
	mov.b64 	%rd3214, {%r1732, %r1731};
	xor.b64  	%rd3215, %rd3214, %rd3213;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 23;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 23;
	mov.b64 	%rd3216, {%r1734, %r1733};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	xor.b64  	%rd3218, %rd18287, %rd18288;
	and.b64  	%rd3219, %rd3199, %rd3218;
	xor.b64  	%rd3220, %rd3219, %rd18288;
	add.s64 	%rd3221, %rd18292, %rd18289;
	ld.const.u64 	%rd3222, [%rd3212];
	add.s64 	%rd3223, %rd3221, %rd3222;
	add.s64 	%rd3224, %rd3223, %rd3220;
	add.s64 	%rd3225, %rd3224, %rd3217;
	add.s64 	%rd3226, %rd3225, %rd18285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd3210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd3210;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 28;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 28;
	mov.b64 	%rd3227, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 30;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 30;
	mov.b64 	%rd3228, {%r1740, %r1739};
	xor.b64  	%rd3229, %rd3228, %rd3227;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 25;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 25;
	mov.b64 	%rd3230, {%r1742, %r1741};
	xor.b64  	%rd3231, %rd3229, %rd3230;
	and.b64  	%rd3232, %rd3210, %rd18283;
	xor.b64  	%rd3233, %rd3210, %rd18283;
	and.b64  	%rd3234, %rd3233, %rd18284;
	or.b64  	%rd3235, %rd3234, %rd3232;
	add.s64 	%rd3236, %rd3225, %rd3235;
	add.s64 	%rd3237, %rd3236, %rd3231;
	add.s32 	%r1743, %r12578, 2;
	mul.wide.s32 	%rd3238, %r1743, 8;
	add.s64 	%rd3239, %rd3184, %rd3238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd3226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd3226;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 14;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 14;
	mov.b64 	%rd3240, {%r1747, %r1746};
	shf.r.wrap.b32 	%r1748, %r1745, %r1744, 18;
	shf.r.wrap.b32 	%r1749, %r1744, %r1745, 18;
	mov.b64 	%rd3241, {%r1749, %r1748};
	xor.b64  	%rd3242, %rd3241, %rd3240;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 23;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 23;
	mov.b64 	%rd3243, {%r1751, %r1750};
	xor.b64  	%rd3244, %rd3242, %rd3243;
	xor.b64  	%rd3245, %rd3199, %rd18287;
	and.b64  	%rd3246, %rd3226, %rd3245;
	xor.b64  	%rd3247, %rd3246, %rd18287;
	add.s64 	%rd3248, %rd18293, %rd18288;
	ld.const.u64 	%rd3249, [%rd3239];
	add.s64 	%rd3250, %rd3248, %rd3249;
	add.s64 	%rd3251, %rd3250, %rd3247;
	add.s64 	%rd3252, %rd3251, %rd3244;
	add.s64 	%rd3253, %rd3252, %rd18284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd3237;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 28;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 28;
	mov.b64 	%rd3254, {%r1755, %r1754};
	shf.l.wrap.b32 	%r1756, %r1752, %r1753, 30;
	shf.l.wrap.b32 	%r1757, %r1753, %r1752, 30;
	mov.b64 	%rd3255, {%r1757, %r1756};
	xor.b64  	%rd3256, %rd3255, %rd3254;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 25;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 25;
	mov.b64 	%rd3257, {%r1759, %r1758};
	xor.b64  	%rd3258, %rd3256, %rd3257;
	and.b64  	%rd3259, %rd3237, %rd3210;
	xor.b64  	%rd3260, %rd3237, %rd3210;
	and.b64  	%rd3261, %rd3260, %rd18283;
	or.b64  	%rd3262, %rd3261, %rd3259;
	add.s64 	%rd3263, %rd3252, %rd3262;
	add.s64 	%rd3264, %rd3263, %rd3258;
	add.s32 	%r1760, %r12578, 3;
	mul.wide.s32 	%rd3265, %r1760, 8;
	add.s64 	%rd3266, %rd3184, %rd3265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd3253;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 14;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 14;
	mov.b64 	%rd3267, {%r1764, %r1763};
	shf.r.wrap.b32 	%r1765, %r1762, %r1761, 18;
	shf.r.wrap.b32 	%r1766, %r1761, %r1762, 18;
	mov.b64 	%rd3268, {%r1766, %r1765};
	xor.b64  	%rd3269, %rd3268, %rd3267;
	shf.l.wrap.b32 	%r1767, %r1761, %r1762, 23;
	shf.l.wrap.b32 	%r1768, %r1762, %r1761, 23;
	mov.b64 	%rd3270, {%r1768, %r1767};
	xor.b64  	%rd3271, %rd3269, %rd3270;
	xor.b64  	%rd3272, %rd3226, %rd3199;
	and.b64  	%rd3273, %rd3253, %rd3272;
	xor.b64  	%rd3274, %rd3273, %rd3199;
	add.s64 	%rd3275, %rd18294, %rd18287;
	ld.const.u64 	%rd3276, [%rd3266];
	add.s64 	%rd3277, %rd3275, %rd3276;
	add.s64 	%rd3278, %rd3277, %rd3274;
	add.s64 	%rd3279, %rd3278, %rd3271;
	add.s64 	%rd3280, %rd3279, %rd18283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1769,%dummy}, %rd3264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd3264;
	}
	shf.r.wrap.b32 	%r1771, %r1770, %r1769, 28;
	shf.r.wrap.b32 	%r1772, %r1769, %r1770, 28;
	mov.b64 	%rd3281, {%r1772, %r1771};
	shf.l.wrap.b32 	%r1773, %r1769, %r1770, 30;
	shf.l.wrap.b32 	%r1774, %r1770, %r1769, 30;
	mov.b64 	%rd3282, {%r1774, %r1773};
	xor.b64  	%rd3283, %rd3282, %rd3281;
	shf.l.wrap.b32 	%r1775, %r1769, %r1770, 25;
	shf.l.wrap.b32 	%r1776, %r1770, %r1769, 25;
	mov.b64 	%rd3284, {%r1776, %r1775};
	xor.b64  	%rd3285, %rd3283, %rd3284;
	and.b64  	%rd3286, %rd3264, %rd3237;
	xor.b64  	%rd3287, %rd3264, %rd3237;
	and.b64  	%rd3288, %rd3287, %rd3210;
	or.b64  	%rd3289, %rd3288, %rd3286;
	add.s64 	%rd3290, %rd3279, %rd3289;
	add.s64 	%rd3291, %rd3290, %rd3285;
	add.s32 	%r1777, %r12578, 4;
	mul.wide.s32 	%rd3292, %r1777, 8;
	add.s64 	%rd3293, %rd3184, %rd3292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd3280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd3280;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 14;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 14;
	mov.b64 	%rd3294, {%r1781, %r1780};
	shf.r.wrap.b32 	%r1782, %r1779, %r1778, 18;
	shf.r.wrap.b32 	%r1783, %r1778, %r1779, 18;
	mov.b64 	%rd3295, {%r1783, %r1782};
	xor.b64  	%rd3296, %rd3295, %rd3294;
	shf.l.wrap.b32 	%r1784, %r1778, %r1779, 23;
	shf.l.wrap.b32 	%r1785, %r1779, %r1778, 23;
	mov.b64 	%rd3297, {%r1785, %r1784};
	xor.b64  	%rd3298, %rd3296, %rd3297;
	xor.b64  	%rd3299, %rd3253, %rd3226;
	and.b64  	%rd3300, %rd3280, %rd3299;
	xor.b64  	%rd3301, %rd3300, %rd3226;
	add.s64 	%rd3302, %rd3199, %rd18295;
	ld.const.u64 	%rd3303, [%rd3293];
	add.s64 	%rd3304, %rd3302, %rd3303;
	add.s64 	%rd3305, %rd3304, %rd3301;
	add.s64 	%rd3306, %rd3305, %rd3298;
	add.s64 	%rd3307, %rd3306, %rd3210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd3291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd3291;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 28;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 28;
	mov.b64 	%rd3308, {%r1789, %r1788};
	shf.l.wrap.b32 	%r1790, %r1786, %r1787, 30;
	shf.l.wrap.b32 	%r1791, %r1787, %r1786, 30;
	mov.b64 	%rd3309, {%r1791, %r1790};
	xor.b64  	%rd3310, %rd3309, %rd3308;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 25;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 25;
	mov.b64 	%rd3311, {%r1793, %r1792};
	xor.b64  	%rd3312, %rd3310, %rd3311;
	and.b64  	%rd3313, %rd3291, %rd3264;
	xor.b64  	%rd3314, %rd3291, %rd3264;
	and.b64  	%rd3315, %rd3314, %rd3237;
	or.b64  	%rd3316, %rd3315, %rd3313;
	add.s64 	%rd3317, %rd3306, %rd3316;
	add.s64 	%rd3318, %rd3317, %rd3312;
	add.s32 	%r1794, %r12578, 5;
	mul.wide.s32 	%rd3319, %r1794, 8;
	add.s64 	%rd3320, %rd3184, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1795,%dummy}, %rd3307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd3307;
	}
	shf.r.wrap.b32 	%r1797, %r1796, %r1795, 14;
	shf.r.wrap.b32 	%r1798, %r1795, %r1796, 14;
	mov.b64 	%rd3321, {%r1798, %r1797};
	shf.r.wrap.b32 	%r1799, %r1796, %r1795, 18;
	shf.r.wrap.b32 	%r1800, %r1795, %r1796, 18;
	mov.b64 	%rd3322, {%r1800, %r1799};
	xor.b64  	%rd3323, %rd3322, %rd3321;
	shf.l.wrap.b32 	%r1801, %r1795, %r1796, 23;
	shf.l.wrap.b32 	%r1802, %r1796, %r1795, 23;
	mov.b64 	%rd3324, {%r1802, %r1801};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	xor.b64  	%rd3326, %rd3280, %rd3253;
	and.b64  	%rd3327, %rd3307, %rd3326;
	xor.b64  	%rd3328, %rd3327, %rd3253;
	add.s64 	%rd3329, %rd3226, %rd18296;
	ld.const.u64 	%rd3330, [%rd3320];
	add.s64 	%rd3331, %rd3329, %rd3330;
	add.s64 	%rd3332, %rd3331, %rd3328;
	add.s64 	%rd3333, %rd3332, %rd3325;
	add.s64 	%rd3334, %rd3333, %rd3237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1803,%dummy}, %rd3318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1804}, %rd3318;
	}
	shf.r.wrap.b32 	%r1805, %r1804, %r1803, 28;
	shf.r.wrap.b32 	%r1806, %r1803, %r1804, 28;
	mov.b64 	%rd3335, {%r1806, %r1805};
	shf.l.wrap.b32 	%r1807, %r1803, %r1804, 30;
	shf.l.wrap.b32 	%r1808, %r1804, %r1803, 30;
	mov.b64 	%rd3336, {%r1808, %r1807};
	xor.b64  	%rd3337, %rd3336, %rd3335;
	shf.l.wrap.b32 	%r1809, %r1803, %r1804, 25;
	shf.l.wrap.b32 	%r1810, %r1804, %r1803, 25;
	mov.b64 	%rd3338, {%r1810, %r1809};
	xor.b64  	%rd3339, %rd3337, %rd3338;
	and.b64  	%rd3340, %rd3318, %rd3291;
	xor.b64  	%rd3341, %rd3318, %rd3291;
	and.b64  	%rd3342, %rd3341, %rd3264;
	or.b64  	%rd3343, %rd3342, %rd3340;
	add.s64 	%rd3344, %rd3333, %rd3343;
	add.s64 	%rd3345, %rd3344, %rd3339;
	add.s32 	%r1811, %r12578, 6;
	mul.wide.s32 	%rd3346, %r1811, 8;
	add.s64 	%rd3347, %rd3184, %rd3346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd3334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd3334;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 14;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 14;
	mov.b64 	%rd3348, {%r1815, %r1814};
	shf.r.wrap.b32 	%r1816, %r1813, %r1812, 18;
	shf.r.wrap.b32 	%r1817, %r1812, %r1813, 18;
	mov.b64 	%rd3349, {%r1817, %r1816};
	xor.b64  	%rd3350, %rd3349, %rd3348;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 23;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 23;
	mov.b64 	%rd3351, {%r1819, %r1818};
	xor.b64  	%rd3352, %rd3350, %rd3351;
	xor.b64  	%rd3353, %rd3307, %rd3280;
	and.b64  	%rd3354, %rd3334, %rd3353;
	xor.b64  	%rd3355, %rd3354, %rd3280;
	add.s64 	%rd3356, %rd3253, %rd18297;
	ld.const.u64 	%rd3357, [%rd3347];
	add.s64 	%rd3358, %rd3356, %rd3357;
	add.s64 	%rd3359, %rd3358, %rd3355;
	add.s64 	%rd3360, %rd3359, %rd3352;
	add.s64 	%rd3361, %rd3360, %rd3264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd3345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd3345;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 28;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 28;
	mov.b64 	%rd3362, {%r1823, %r1822};
	shf.l.wrap.b32 	%r1824, %r1820, %r1821, 30;
	shf.l.wrap.b32 	%r1825, %r1821, %r1820, 30;
	mov.b64 	%rd3363, {%r1825, %r1824};
	xor.b64  	%rd3364, %rd3363, %rd3362;
	shf.l.wrap.b32 	%r1826, %r1820, %r1821, 25;
	shf.l.wrap.b32 	%r1827, %r1821, %r1820, 25;
	mov.b64 	%rd3365, {%r1827, %r1826};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	and.b64  	%rd3367, %rd3345, %rd3318;
	xor.b64  	%rd3368, %rd3345, %rd3318;
	and.b64  	%rd3369, %rd3368, %rd3291;
	or.b64  	%rd3370, %rd3369, %rd3367;
	add.s64 	%rd3371, %rd3360, %rd3370;
	add.s64 	%rd3372, %rd3371, %rd3366;
	add.s32 	%r1828, %r12578, 7;
	mul.wide.s32 	%rd3373, %r1828, 8;
	add.s64 	%rd3374, %rd3184, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd3361;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 14;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 14;
	mov.b64 	%rd3375, {%r1832, %r1831};
	shf.r.wrap.b32 	%r1833, %r1830, %r1829, 18;
	shf.r.wrap.b32 	%r1834, %r1829, %r1830, 18;
	mov.b64 	%rd3376, {%r1834, %r1833};
	xor.b64  	%rd3377, %rd3376, %rd3375;
	shf.l.wrap.b32 	%r1835, %r1829, %r1830, 23;
	shf.l.wrap.b32 	%r1836, %r1830, %r1829, 23;
	mov.b64 	%rd3378, {%r1836, %r1835};
	xor.b64  	%rd3379, %rd3377, %rd3378;
	xor.b64  	%rd3380, %rd3334, %rd3307;
	and.b64  	%rd3381, %rd3361, %rd3380;
	xor.b64  	%rd3382, %rd3381, %rd3307;
	add.s64 	%rd3383, %rd3280, %rd18298;
	ld.const.u64 	%rd3384, [%rd3374];
	add.s64 	%rd3385, %rd3383, %rd3384;
	add.s64 	%rd3386, %rd3385, %rd3382;
	add.s64 	%rd3387, %rd3386, %rd3379;
	add.s64 	%rd3388, %rd3387, %rd3291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd3372;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 28;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 28;
	mov.b64 	%rd3389, {%r1840, %r1839};
	shf.l.wrap.b32 	%r1841, %r1837, %r1838, 30;
	shf.l.wrap.b32 	%r1842, %r1838, %r1837, 30;
	mov.b64 	%rd3390, {%r1842, %r1841};
	xor.b64  	%rd3391, %rd3390, %rd3389;
	shf.l.wrap.b32 	%r1843, %r1837, %r1838, 25;
	shf.l.wrap.b32 	%r1844, %r1838, %r1837, 25;
	mov.b64 	%rd3392, {%r1844, %r1843};
	xor.b64  	%rd3393, %rd3391, %rd3392;
	and.b64  	%rd3394, %rd3372, %rd3345;
	xor.b64  	%rd3395, %rd3372, %rd3345;
	and.b64  	%rd3396, %rd3395, %rd3318;
	or.b64  	%rd3397, %rd3396, %rd3394;
	add.s64 	%rd3398, %rd3387, %rd3397;
	add.s64 	%rd3399, %rd3398, %rd3393;
	add.s32 	%r1845, %r12578, 8;
	mul.wide.s32 	%rd3400, %r1845, 8;
	add.s64 	%rd3401, %rd3184, %rd3400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd3388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd3388;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 14;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 14;
	mov.b64 	%rd3402, {%r1849, %r1848};
	shf.r.wrap.b32 	%r1850, %r1847, %r1846, 18;
	shf.r.wrap.b32 	%r1851, %r1846, %r1847, 18;
	mov.b64 	%rd3403, {%r1851, %r1850};
	xor.b64  	%rd3404, %rd3403, %rd3402;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 23;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 23;
	mov.b64 	%rd3405, {%r1853, %r1852};
	xor.b64  	%rd3406, %rd3404, %rd3405;
	xor.b64  	%rd3407, %rd3361, %rd3334;
	and.b64  	%rd3408, %rd3388, %rd3407;
	xor.b64  	%rd3409, %rd3408, %rd3334;
	add.s64 	%rd3410, %rd3307, %rd18282;
	ld.const.u64 	%rd3411, [%rd3401];
	add.s64 	%rd3412, %rd3410, %rd3411;
	add.s64 	%rd3413, %rd3412, %rd3409;
	add.s64 	%rd3414, %rd3413, %rd3406;
	add.s64 	%rd3415, %rd3414, %rd3318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd3399;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 28;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 28;
	mov.b64 	%rd3416, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 30;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 30;
	mov.b64 	%rd3417, {%r1859, %r1858};
	xor.b64  	%rd3418, %rd3417, %rd3416;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 25;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 25;
	mov.b64 	%rd3419, {%r1861, %r1860};
	xor.b64  	%rd3420, %rd3418, %rd3419;
	and.b64  	%rd3421, %rd3399, %rd3372;
	xor.b64  	%rd3422, %rd3399, %rd3372;
	and.b64  	%rd3423, %rd3422, %rd3345;
	or.b64  	%rd3424, %rd3423, %rd3421;
	add.s64 	%rd3425, %rd3414, %rd3424;
	add.s64 	%rd3426, %rd3425, %rd3420;
	add.s32 	%r1862, %r12578, 9;
	mul.wide.s32 	%rd3427, %r1862, 8;
	add.s64 	%rd3428, %rd3184, %rd3427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd3415;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 14;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 14;
	mov.b64 	%rd3429, {%r1866, %r1865};
	shf.r.wrap.b32 	%r1867, %r1864, %r1863, 18;
	shf.r.wrap.b32 	%r1868, %r1863, %r1864, 18;
	mov.b64 	%rd3430, {%r1868, %r1867};
	xor.b64  	%rd3431, %rd3430, %rd3429;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 23;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 23;
	mov.b64 	%rd3432, {%r1870, %r1869};
	xor.b64  	%rd3433, %rd3431, %rd3432;
	xor.b64  	%rd3434, %rd3388, %rd3361;
	and.b64  	%rd3435, %rd3415, %rd3434;
	xor.b64  	%rd3436, %rd3435, %rd3361;
	add.s64 	%rd3437, %rd3334, %rd18281;
	ld.const.u64 	%rd3438, [%rd3428];
	add.s64 	%rd3439, %rd3437, %rd3438;
	add.s64 	%rd3440, %rd3439, %rd3436;
	add.s64 	%rd3441, %rd3440, %rd3433;
	add.s64 	%rd3442, %rd3441, %rd3345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd3426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd3426;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 28;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 28;
	mov.b64 	%rd3443, {%r1874, %r1873};
	shf.l.wrap.b32 	%r1875, %r1871, %r1872, 30;
	shf.l.wrap.b32 	%r1876, %r1872, %r1871, 30;
	mov.b64 	%rd3444, {%r1876, %r1875};
	xor.b64  	%rd3445, %rd3444, %rd3443;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 25;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 25;
	mov.b64 	%rd3446, {%r1878, %r1877};
	xor.b64  	%rd3447, %rd3445, %rd3446;
	and.b64  	%rd3448, %rd3426, %rd3399;
	xor.b64  	%rd3449, %rd3426, %rd3399;
	and.b64  	%rd3450, %rd3449, %rd3372;
	or.b64  	%rd3451, %rd3450, %rd3448;
	add.s64 	%rd3452, %rd3441, %rd3451;
	add.s64 	%rd3453, %rd3452, %rd3447;
	add.s32 	%r1879, %r12578, 10;
	mul.wide.s32 	%rd3454, %r1879, 8;
	add.s64 	%rd3455, %rd3184, %rd3454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1880,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd3442;
	}
	shf.r.wrap.b32 	%r1882, %r1881, %r1880, 14;
	shf.r.wrap.b32 	%r1883, %r1880, %r1881, 14;
	mov.b64 	%rd3456, {%r1883, %r1882};
	shf.r.wrap.b32 	%r1884, %r1881, %r1880, 18;
	shf.r.wrap.b32 	%r1885, %r1880, %r1881, 18;
	mov.b64 	%rd3457, {%r1885, %r1884};
	xor.b64  	%rd3458, %rd3457, %rd3456;
	shf.l.wrap.b32 	%r1886, %r1880, %r1881, 23;
	shf.l.wrap.b32 	%r1887, %r1881, %r1880, 23;
	mov.b64 	%rd3459, {%r1887, %r1886};
	xor.b64  	%rd3460, %rd3458, %rd3459;
	xor.b64  	%rd3461, %rd3415, %rd3388;
	and.b64  	%rd3462, %rd3442, %rd3461;
	xor.b64  	%rd3463, %rd3462, %rd3388;
	add.s64 	%rd3464, %rd3361, %rd18280;
	ld.const.u64 	%rd3465, [%rd3455];
	add.s64 	%rd3466, %rd3464, %rd3465;
	add.s64 	%rd3467, %rd3466, %rd3463;
	add.s64 	%rd3468, %rd3467, %rd3460;
	add.s64 	%rd3469, %rd3468, %rd3372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1888,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd3453;
	}
	shf.r.wrap.b32 	%r1890, %r1889, %r1888, 28;
	shf.r.wrap.b32 	%r1891, %r1888, %r1889, 28;
	mov.b64 	%rd3470, {%r1891, %r1890};
	shf.l.wrap.b32 	%r1892, %r1888, %r1889, 30;
	shf.l.wrap.b32 	%r1893, %r1889, %r1888, 30;
	mov.b64 	%rd3471, {%r1893, %r1892};
	xor.b64  	%rd3472, %rd3471, %rd3470;
	shf.l.wrap.b32 	%r1894, %r1888, %r1889, 25;
	shf.l.wrap.b32 	%r1895, %r1889, %r1888, 25;
	mov.b64 	%rd3473, {%r1895, %r1894};
	xor.b64  	%rd3474, %rd3472, %rd3473;
	and.b64  	%rd3475, %rd3453, %rd3426;
	xor.b64  	%rd3476, %rd3453, %rd3426;
	and.b64  	%rd3477, %rd3476, %rd3399;
	or.b64  	%rd3478, %rd3477, %rd3475;
	add.s64 	%rd3479, %rd3468, %rd3478;
	add.s64 	%rd3480, %rd3479, %rd3474;
	add.s32 	%r1896, %r12578, 11;
	mul.wide.s32 	%rd3481, %r1896, 8;
	add.s64 	%rd3482, %rd3184, %rd3481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1897,%dummy}, %rd3469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1898}, %rd3469;
	}
	shf.r.wrap.b32 	%r1899, %r1898, %r1897, 14;
	shf.r.wrap.b32 	%r1900, %r1897, %r1898, 14;
	mov.b64 	%rd3483, {%r1900, %r1899};
	shf.r.wrap.b32 	%r1901, %r1898, %r1897, 18;
	shf.r.wrap.b32 	%r1902, %r1897, %r1898, 18;
	mov.b64 	%rd3484, {%r1902, %r1901};
	xor.b64  	%rd3485, %rd3484, %rd3483;
	shf.l.wrap.b32 	%r1903, %r1897, %r1898, 23;
	shf.l.wrap.b32 	%r1904, %r1898, %r1897, 23;
	mov.b64 	%rd3486, {%r1904, %r1903};
	xor.b64  	%rd3487, %rd3485, %rd3486;
	xor.b64  	%rd3488, %rd3442, %rd3415;
	and.b64  	%rd3489, %rd3469, %rd3488;
	xor.b64  	%rd3490, %rd3489, %rd3415;
	add.s64 	%rd3491, %rd3388, %rd18279;
	ld.const.u64 	%rd3492, [%rd3482];
	add.s64 	%rd3493, %rd3491, %rd3492;
	add.s64 	%rd3494, %rd3493, %rd3490;
	add.s64 	%rd3495, %rd3494, %rd3487;
	add.s64 	%rd3496, %rd3495, %rd3399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1905,%dummy}, %rd3480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1906}, %rd3480;
	}
	shf.r.wrap.b32 	%r1907, %r1906, %r1905, 28;
	shf.r.wrap.b32 	%r1908, %r1905, %r1906, 28;
	mov.b64 	%rd3497, {%r1908, %r1907};
	shf.l.wrap.b32 	%r1909, %r1905, %r1906, 30;
	shf.l.wrap.b32 	%r1910, %r1906, %r1905, 30;
	mov.b64 	%rd3498, {%r1910, %r1909};
	xor.b64  	%rd3499, %rd3498, %rd3497;
	shf.l.wrap.b32 	%r1911, %r1905, %r1906, 25;
	shf.l.wrap.b32 	%r1912, %r1906, %r1905, 25;
	mov.b64 	%rd3500, {%r1912, %r1911};
	xor.b64  	%rd3501, %rd3499, %rd3500;
	and.b64  	%rd3502, %rd3480, %rd3453;
	xor.b64  	%rd3503, %rd3480, %rd3453;
	and.b64  	%rd3504, %rd3503, %rd3426;
	or.b64  	%rd3505, %rd3504, %rd3502;
	add.s64 	%rd3506, %rd3495, %rd3505;
	add.s64 	%rd3507, %rd3506, %rd3501;
	add.s32 	%r1913, %r12578, 12;
	mul.wide.s32 	%rd3508, %r1913, 8;
	add.s64 	%rd3509, %rd3184, %rd3508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd3496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd3496;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 14;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 14;
	mov.b64 	%rd3510, {%r1917, %r1916};
	shf.r.wrap.b32 	%r1918, %r1915, %r1914, 18;
	shf.r.wrap.b32 	%r1919, %r1914, %r1915, 18;
	mov.b64 	%rd3511, {%r1919, %r1918};
	xor.b64  	%rd3512, %rd3511, %rd3510;
	shf.l.wrap.b32 	%r1920, %r1914, %r1915, 23;
	shf.l.wrap.b32 	%r1921, %r1915, %r1914, 23;
	mov.b64 	%rd3513, {%r1921, %r1920};
	xor.b64  	%rd3514, %rd3512, %rd3513;
	xor.b64  	%rd3515, %rd3469, %rd3442;
	and.b64  	%rd3516, %rd3496, %rd3515;
	xor.b64  	%rd3517, %rd3516, %rd3442;
	add.s64 	%rd3518, %rd3415, %rd18278;
	ld.const.u64 	%rd3519, [%rd3509];
	add.s64 	%rd3520, %rd3518, %rd3519;
	add.s64 	%rd3521, %rd3520, %rd3517;
	add.s64 	%rd3522, %rd3521, %rd3514;
	add.s64 	%rd18290, %rd3522, %rd3426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1922,%dummy}, %rd3507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1923}, %rd3507;
	}
	shf.r.wrap.b32 	%r1924, %r1923, %r1922, 28;
	shf.r.wrap.b32 	%r1925, %r1922, %r1923, 28;
	mov.b64 	%rd3523, {%r1925, %r1924};
	shf.l.wrap.b32 	%r1926, %r1922, %r1923, 30;
	shf.l.wrap.b32 	%r1927, %r1923, %r1922, 30;
	mov.b64 	%rd3524, {%r1927, %r1926};
	xor.b64  	%rd3525, %rd3524, %rd3523;
	shf.l.wrap.b32 	%r1928, %r1922, %r1923, 25;
	shf.l.wrap.b32 	%r1929, %r1923, %r1922, 25;
	mov.b64 	%rd3526, {%r1929, %r1928};
	xor.b64  	%rd3527, %rd3525, %rd3526;
	and.b64  	%rd3528, %rd3507, %rd3480;
	xor.b64  	%rd3529, %rd3507, %rd3480;
	and.b64  	%rd3530, %rd3529, %rd3453;
	or.b64  	%rd3531, %rd3530, %rd3528;
	add.s64 	%rd3532, %rd3522, %rd3531;
	add.s64 	%rd18286, %rd3532, %rd3527;
	add.s32 	%r1930, %r12578, 13;
	mul.wide.s32 	%rd3533, %r1930, 8;
	add.s64 	%rd3534, %rd3184, %rd3533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd18290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd18290;
	}
	shf.r.wrap.b32 	%r1933, %r1932, %r1931, 14;
	shf.r.wrap.b32 	%r1934, %r1931, %r1932, 14;
	mov.b64 	%rd3535, {%r1934, %r1933};
	shf.r.wrap.b32 	%r1935, %r1932, %r1931, 18;
	shf.r.wrap.b32 	%r1936, %r1931, %r1932, 18;
	mov.b64 	%rd3536, {%r1936, %r1935};
	xor.b64  	%rd3537, %rd3536, %rd3535;
	shf.l.wrap.b32 	%r1937, %r1931, %r1932, 23;
	shf.l.wrap.b32 	%r1938, %r1932, %r1931, 23;
	mov.b64 	%rd3538, {%r1938, %r1937};
	xor.b64  	%rd3539, %rd3537, %rd3538;
	xor.b64  	%rd3540, %rd3496, %rd3469;
	and.b64  	%rd3541, %rd18290, %rd3540;
	xor.b64  	%rd3542, %rd3541, %rd3469;
	add.s64 	%rd3543, %rd3442, %rd18277;
	ld.const.u64 	%rd3544, [%rd3534];
	add.s64 	%rd3545, %rd3543, %rd3544;
	add.s64 	%rd3546, %rd3545, %rd3542;
	add.s64 	%rd3547, %rd3546, %rd3539;
	add.s64 	%rd18289, %rd3547, %rd3453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1939,%dummy}, %rd18286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1940}, %rd18286;
	}
	shf.r.wrap.b32 	%r1941, %r1940, %r1939, 28;
	shf.r.wrap.b32 	%r1942, %r1939, %r1940, 28;
	mov.b64 	%rd3548, {%r1942, %r1941};
	shf.l.wrap.b32 	%r1943, %r1939, %r1940, 30;
	shf.l.wrap.b32 	%r1944, %r1940, %r1939, 30;
	mov.b64 	%rd3549, {%r1944, %r1943};
	xor.b64  	%rd3550, %rd3549, %rd3548;
	shf.l.wrap.b32 	%r1945, %r1939, %r1940, 25;
	shf.l.wrap.b32 	%r1946, %r1940, %r1939, 25;
	mov.b64 	%rd3551, {%r1946, %r1945};
	xor.b64  	%rd3552, %rd3550, %rd3551;
	and.b64  	%rd3553, %rd18286, %rd3507;
	xor.b64  	%rd3554, %rd18286, %rd3507;
	and.b64  	%rd3555, %rd3554, %rd3480;
	or.b64  	%rd3556, %rd3555, %rd3553;
	add.s64 	%rd3557, %rd3547, %rd3556;
	add.s64 	%rd18285, %rd3557, %rd3552;
	add.s32 	%r1947, %r12578, 14;
	mul.wide.s32 	%rd3558, %r1947, 8;
	add.s64 	%rd3559, %rd3184, %rd3558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd18289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd18289;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 14;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 14;
	mov.b64 	%rd3560, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1949, %r1948, 18;
	shf.r.wrap.b32 	%r1953, %r1948, %r1949, 18;
	mov.b64 	%rd3561, {%r1953, %r1952};
	xor.b64  	%rd3562, %rd3561, %rd3560;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 23;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 23;
	mov.b64 	%rd3563, {%r1955, %r1954};
	xor.b64  	%rd3564, %rd3562, %rd3563;
	xor.b64  	%rd3565, %rd18290, %rd3496;
	and.b64  	%rd3566, %rd18289, %rd3565;
	xor.b64  	%rd3567, %rd3566, %rd3496;
	add.s64 	%rd3568, %rd3469, %rd18276;
	ld.const.u64 	%rd3569, [%rd3559];
	add.s64 	%rd3570, %rd3568, %rd3569;
	add.s64 	%rd3571, %rd3570, %rd3567;
	add.s64 	%rd3572, %rd3571, %rd3564;
	add.s64 	%rd18288, %rd3572, %rd3480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd18285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd18285;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 28;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 28;
	mov.b64 	%rd3573, {%r1959, %r1958};
	shf.l.wrap.b32 	%r1960, %r1956, %r1957, 30;
	shf.l.wrap.b32 	%r1961, %r1957, %r1956, 30;
	mov.b64 	%rd3574, {%r1961, %r1960};
	xor.b64  	%rd3575, %rd3574, %rd3573;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 25;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 25;
	mov.b64 	%rd3576, {%r1963, %r1962};
	xor.b64  	%rd3577, %rd3575, %rd3576;
	and.b64  	%rd3578, %rd18285, %rd18286;
	xor.b64  	%rd3579, %rd18285, %rd18286;
	and.b64  	%rd3580, %rd3579, %rd3507;
	or.b64  	%rd3581, %rd3580, %rd3578;
	add.s64 	%rd3582, %rd3572, %rd3581;
	add.s64 	%rd18284, %rd3582, %rd3577;
	add.s32 	%r1964, %r12578, 15;
	mul.wide.s32 	%rd3583, %r1964, 8;
	add.s64 	%rd3584, %rd3184, %rd3583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd18288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd18288;
	}
	shf.r.wrap.b32 	%r1967, %r1966, %r1965, 14;
	shf.r.wrap.b32 	%r1968, %r1965, %r1966, 14;
	mov.b64 	%rd3585, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1966, %r1965, 18;
	shf.r.wrap.b32 	%r1970, %r1965, %r1966, 18;
	mov.b64 	%rd3586, {%r1970, %r1969};
	xor.b64  	%rd3587, %rd3586, %rd3585;
	shf.l.wrap.b32 	%r1971, %r1965, %r1966, 23;
	shf.l.wrap.b32 	%r1972, %r1966, %r1965, 23;
	mov.b64 	%rd3588, {%r1972, %r1971};
	xor.b64  	%rd3589, %rd3587, %rd3588;
	xor.b64  	%rd3590, %rd18289, %rd18290;
	and.b64  	%rd3591, %rd18288, %rd3590;
	xor.b64  	%rd3592, %rd3591, %rd18290;
	add.s64 	%rd3593, %rd3496, %rd18275;
	ld.const.u64 	%rd3594, [%rd3584];
	add.s64 	%rd3595, %rd3593, %rd3594;
	add.s64 	%rd3596, %rd3595, %rd3592;
	add.s64 	%rd3597, %rd3596, %rd3589;
	add.s64 	%rd18287, %rd3597, %rd3507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd18284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1974}, %rd18284;
	}
	shf.r.wrap.b32 	%r1975, %r1974, %r1973, 28;
	shf.r.wrap.b32 	%r1976, %r1973, %r1974, 28;
	mov.b64 	%rd3598, {%r1976, %r1975};
	shf.l.wrap.b32 	%r1977, %r1973, %r1974, 30;
	shf.l.wrap.b32 	%r1978, %r1974, %r1973, 30;
	mov.b64 	%rd3599, {%r1978, %r1977};
	xor.b64  	%rd3600, %rd3599, %rd3598;
	shf.l.wrap.b32 	%r1979, %r1973, %r1974, 25;
	shf.l.wrap.b32 	%r1980, %r1974, %r1973, 25;
	mov.b64 	%rd3601, {%r1980, %r1979};
	xor.b64  	%rd3602, %rd3600, %rd3601;
	and.b64  	%rd3603, %rd18284, %rd18285;
	xor.b64  	%rd3604, %rd18284, %rd18285;
	and.b64  	%rd3605, %rd3604, %rd18286;
	or.b64  	%rd3606, %rd3605, %rd3603;
	add.s64 	%rd3607, %rd3597, %rd3606;
	add.s64 	%rd18283, %rd3607, %rd3602;
	add.s32 	%r12578, %r12578, 16;
	setp.lt.s32	%p29, %r12578, 80;
	@%p29 bra 	BB0_46;

	add.s64 	%rd3608, %rd98, %rd18283;
	st.local.u64 	[%rd1], %rd3608;
	add.s64 	%rd3609, %rd99, %rd18284;
	st.local.u64 	[%rd1+8], %rd3609;
	add.s64 	%rd3610, %rd100, %rd18285;
	st.local.u64 	[%rd1+16], %rd3610;
	add.s64 	%rd3611, %rd97, %rd18286;
	st.local.u64 	[%rd1+24], %rd3611;
	add.s64 	%rd3612, %rd92, %rd18287;
	st.local.u64 	[%rd1+32], %rd3612;
	add.s64 	%rd3613, %rd94, %rd18288;
	st.local.u64 	[%rd1+40], %rd3613;
	add.s64 	%rd3614, %rd93, %rd18289;
	st.local.u64 	[%rd1+48], %rd3614;
	add.s64 	%rd3615, %rd95, %rd18290;
	st.local.u64 	[%rd1+56], %rd3615;
	sub.s32 	%r77, %r2, %r57;
	setp.lt.s32	%p30, %r77, 1;
	@%p30 bra 	BB0_53;

	mov.u32 	%r12546, 128;
	and.b32  	%r1982, %r55, 127;
	sub.s32 	%r12579, %r12546, %r1982;
	mov.u32 	%r12580, 0;

BB0_49:
	xor.b32  	%r1984, %r12579, 7;
	cvt.s64.s32	%rd3616, %r1984;
	add.s64 	%rd3617, %rd1460, %rd3616;
	ld.local.u8 	%rs38, [%rd3617];
	xor.b32  	%r1985, %r12580, 7;
	cvt.s64.s32	%rd3618, %r1985;
	add.s64 	%rd3619, %rd90, %rd3618;
	st.local.u8 	[%rd3619], %rs38;
	add.s32 	%r12579, %r12579, 1;
	add.s32 	%r12580, %r12580, 1;
	setp.lt.s32	%p31, %r12580, %r77;
	@%p31 bra 	BB0_49;

BB0_53:
	ld.local.u32 	%r1989, [%rd1+192];
	and.b32  	%r87, %r1989, 127;
	mov.u32 	%r1990, 128;
	sub.s32 	%r88, %r1990, %r87;
	and.b32  	%r89, %r88, 3;
	setp.eq.s32	%p34, %r89, 0;
	mov.u32 	%r12586, %r87;
	@%p34 bra 	BB0_59;

	setp.eq.s32	%p35, %r89, 1;
	mov.u32 	%r12584, %r87;
	@%p35 bra 	BB0_58;

	setp.eq.s32	%p36, %r89, 2;
	mov.u32 	%r12583, %r87;
	@%p36 bra 	BB0_57;

	xor.b32  	%r1991, %r87, 7;
	cvt.u64.u32	%rd3625, %r1991;
	add.s64 	%rd3626, %rd90, %rd3625;
	mov.u16 	%rs40, 0;
	st.local.u8 	[%rd3626], %rs40;
	add.s32 	%r12583, %r87, 1;

BB0_57:
	xor.b32  	%r1992, %r12583, 7;
	cvt.s64.s32	%rd3627, %r1992;
	add.s64 	%rd3628, %rd90, %rd3627;
	mov.u16 	%rs41, 0;
	st.local.u8 	[%rd3628], %rs41;
	add.s32 	%r12584, %r12583, 1;

BB0_58:
	xor.b32  	%r1993, %r12584, 7;
	cvt.s64.s32	%rd3629, %r1993;
	add.s64 	%rd3630, %rd90, %rd3629;
	mov.u16 	%rs42, 0;
	st.local.u8 	[%rd3630], %rs42;
	add.s32 	%r12586, %r12584, 1;

BB0_59:
	setp.lt.u32	%p37, %r88, 4;
	@%p37 bra 	BB0_61;

BB0_60:
	xor.b32  	%r1994, %r12586, 7;
	cvt.s64.s32	%rd3631, %r1994;
	add.s64 	%rd3632, %rd90, %rd3631;
	mov.u16 	%rs43, 0;
	st.local.u8 	[%rd3632], %rs43;
	add.s32 	%r1995, %r12586, 1;
	xor.b32  	%r1996, %r1995, 7;
	cvt.s64.s32	%rd3633, %r1996;
	add.s64 	%rd3634, %rd90, %rd3633;
	st.local.u8 	[%rd3634], %rs43;
	add.s32 	%r1997, %r12586, 2;
	xor.b32  	%r1998, %r1997, 7;
	cvt.s64.s32	%rd3635, %r1998;
	add.s64 	%rd3636, %rd90, %rd3635;
	st.local.u8 	[%rd3636], %rs43;
	add.s32 	%r1999, %r12586, 3;
	xor.b32  	%r2000, %r1999, 7;
	cvt.s64.s32	%rd3637, %r2000;
	add.s64 	%rd3638, %rd90, %rd3637;
	st.local.u8 	[%rd3638], %rs43;
	add.s32 	%r12586, %r12586, 4;
	setp.lt.s32	%p38, %r12586, 128;
	@%p38 bra 	BB0_60;

BB0_61:
	xor.b32  	%r2001, %r87, 7;
	cvt.u64.u32	%rd3639, %r2001;
	add.s64 	%rd3640, %rd90, %rd3639;
	mov.u16 	%rs44, 128;
	st.local.u8 	[%rd3640], %rs44;
	ld.local.u64 	%rd18378, [%rd1+64];
	ld.local.u64 	%rd18379, [%rd1+72];
	ld.local.u64 	%rd18380, [%rd1+80];
	ld.local.u64 	%rd18381, [%rd1+88];
	ld.local.u64 	%rd18382, [%rd1+96];
	ld.local.u64 	%rd18383, [%rd1+104];
	ld.local.u64 	%rd18384, [%rd1+112];
	ld.local.u64 	%rd18385, [%rd1+120];
	ld.local.u64 	%rd18369, [%rd1+128];
	ld.local.u64 	%rd18368, [%rd1+136];
	ld.local.u64 	%rd18367, [%rd1+144];
	ld.local.u64 	%rd18366, [%rd1+152];
	ld.local.u64 	%rd18365, [%rd1+160];
	ld.local.u64 	%rd18364, [%rd1+168];
	ld.local.u64 	%rd18363, [%rd1+176];
	setp.gt.u32	%p39, %r87, 111;
	@%p39 bra 	BB0_63;
	bra.uni 	BB0_62;

BB0_63:
	ld.local.u64 	%rd212, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd212;
	}
	shf.r.wrap.b32 	%r2005, %r2004, %r2003, 14;
	shf.r.wrap.b32 	%r2006, %r2003, %r2004, 14;
	mov.b64 	%rd3641, {%r2006, %r2005};
	shf.r.wrap.b32 	%r2007, %r2004, %r2003, 18;
	shf.r.wrap.b32 	%r2008, %r2003, %r2004, 18;
	mov.b64 	%rd3642, {%r2008, %r2007};
	xor.b64  	%rd3643, %rd3642, %rd3641;
	shf.l.wrap.b32 	%r2009, %r2003, %r2004, 23;
	shf.l.wrap.b32 	%r2010, %r2004, %r2003, 23;
	mov.b64 	%rd3644, {%r2010, %r2009};
	xor.b64  	%rd3645, %rd3643, %rd3644;
	ld.local.u64 	%rd213, [%rd1+48];
	ld.local.u64 	%rd214, [%rd1+40];
	xor.b64  	%rd3646, %rd213, %rd214;
	and.b64  	%rd3647, %rd3646, %rd212;
	xor.b64  	%rd3648, %rd3647, %rd213;
	ld.local.u64 	%rd215, [%rd1+56];
	add.s64 	%rd3649, %rd215, %rd18378;
	ld.const.u64 	%rd18338, [k_sha512];
	add.s64 	%rd3650, %rd3649, %rd18338;
	add.s64 	%rd3651, %rd3650, %rd3648;
	add.s64 	%rd3652, %rd3651, %rd3645;
	ld.local.u64 	%rd217, [%rd1+24];
	add.s64 	%rd3653, %rd3652, %rd217;
	ld.local.u64 	%rd218, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd218;
	}
	shf.r.wrap.b32 	%r2013, %r2012, %r2011, 28;
	shf.r.wrap.b32 	%r2014, %r2011, %r2012, 28;
	mov.b64 	%rd3654, {%r2014, %r2013};
	shf.l.wrap.b32 	%r2015, %r2011, %r2012, 30;
	shf.l.wrap.b32 	%r2016, %r2012, %r2011, 30;
	mov.b64 	%rd3655, {%r2016, %r2015};
	xor.b64  	%rd3656, %rd3655, %rd3654;
	shf.l.wrap.b32 	%r2017, %r2011, %r2012, 25;
	shf.l.wrap.b32 	%r2018, %r2012, %r2011, 25;
	mov.b64 	%rd3657, {%r2018, %r2017};
	xor.b64  	%rd3658, %rd3656, %rd3657;
	ld.local.u64 	%rd219, [%rd1+8];
	and.b64  	%rd3659, %rd219, %rd218;
	xor.b64  	%rd3660, %rd219, %rd218;
	ld.local.u64 	%rd220, [%rd1+16];
	and.b64  	%rd3661, %rd220, %rd3660;
	or.b64  	%rd3662, %rd3661, %rd3659;
	add.s64 	%rd3663, %rd3652, %rd3662;
	add.s64 	%rd3664, %rd3663, %rd3658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd3653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd3653;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 14;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 14;
	mov.b64 	%rd3665, {%r2022, %r2021};
	shf.r.wrap.b32 	%r2023, %r2020, %r2019, 18;
	shf.r.wrap.b32 	%r2024, %r2019, %r2020, 18;
	mov.b64 	%rd3666, {%r2024, %r2023};
	xor.b64  	%rd3667, %rd3666, %rd3665;
	shf.l.wrap.b32 	%r2025, %r2019, %r2020, 23;
	shf.l.wrap.b32 	%r2026, %r2020, %r2019, 23;
	mov.b64 	%rd3668, {%r2026, %r2025};
	xor.b64  	%rd3669, %rd3667, %rd3668;
	xor.b64  	%rd3670, %rd214, %rd212;
	and.b64  	%rd3671, %rd3653, %rd3670;
	xor.b64  	%rd3672, %rd3671, %rd214;
	add.s64 	%rd3673, %rd213, %rd18379;
	ld.const.u64 	%rd18337, [k_sha512+8];
	add.s64 	%rd3674, %rd3673, %rd18337;
	add.s64 	%rd3675, %rd3674, %rd3672;
	add.s64 	%rd3676, %rd3675, %rd3669;
	add.s64 	%rd3677, %rd3676, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd3664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd3664;
	}
	shf.r.wrap.b32 	%r2029, %r2028, %r2027, 28;
	shf.r.wrap.b32 	%r2030, %r2027, %r2028, 28;
	mov.b64 	%rd3678, {%r2030, %r2029};
	shf.l.wrap.b32 	%r2031, %r2027, %r2028, 30;
	shf.l.wrap.b32 	%r2032, %r2028, %r2027, 30;
	mov.b64 	%rd3679, {%r2032, %r2031};
	xor.b64  	%rd3680, %rd3679, %rd3678;
	shf.l.wrap.b32 	%r2033, %r2027, %r2028, 25;
	shf.l.wrap.b32 	%r2034, %r2028, %r2027, 25;
	mov.b64 	%rd3681, {%r2034, %r2033};
	xor.b64  	%rd3682, %rd3680, %rd3681;
	and.b64  	%rd3683, %rd3664, %rd218;
	xor.b64  	%rd3684, %rd3664, %rd218;
	and.b64  	%rd3685, %rd3684, %rd219;
	or.b64  	%rd3686, %rd3685, %rd3683;
	add.s64 	%rd3687, %rd3676, %rd3686;
	add.s64 	%rd3688, %rd3687, %rd3682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2035,%dummy}, %rd3677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd3677;
	}
	shf.r.wrap.b32 	%r2037, %r2036, %r2035, 14;
	shf.r.wrap.b32 	%r2038, %r2035, %r2036, 14;
	mov.b64 	%rd3689, {%r2038, %r2037};
	shf.r.wrap.b32 	%r2039, %r2036, %r2035, 18;
	shf.r.wrap.b32 	%r2040, %r2035, %r2036, 18;
	mov.b64 	%rd3690, {%r2040, %r2039};
	xor.b64  	%rd3691, %rd3690, %rd3689;
	shf.l.wrap.b32 	%r2041, %r2035, %r2036, 23;
	shf.l.wrap.b32 	%r2042, %r2036, %r2035, 23;
	mov.b64 	%rd3692, {%r2042, %r2041};
	xor.b64  	%rd3693, %rd3691, %rd3692;
	xor.b64  	%rd3694, %rd3653, %rd212;
	and.b64  	%rd3695, %rd3677, %rd3694;
	xor.b64  	%rd3696, %rd3695, %rd212;
	add.s64 	%rd3697, %rd214, %rd18380;
	ld.const.u64 	%rd222, [k_sha512+16];
	add.s64 	%rd3698, %rd3697, %rd222;
	add.s64 	%rd3699, %rd3698, %rd3696;
	add.s64 	%rd3700, %rd3699, %rd3693;
	add.s64 	%rd3701, %rd3700, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2043,%dummy}, %rd3688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd3688;
	}
	shf.r.wrap.b32 	%r2045, %r2044, %r2043, 28;
	shf.r.wrap.b32 	%r2046, %r2043, %r2044, 28;
	mov.b64 	%rd3702, {%r2046, %r2045};
	shf.l.wrap.b32 	%r2047, %r2043, %r2044, 30;
	shf.l.wrap.b32 	%r2048, %r2044, %r2043, 30;
	mov.b64 	%rd3703, {%r2048, %r2047};
	xor.b64  	%rd3704, %rd3703, %rd3702;
	shf.l.wrap.b32 	%r2049, %r2043, %r2044, 25;
	shf.l.wrap.b32 	%r2050, %r2044, %r2043, 25;
	mov.b64 	%rd3705, {%r2050, %r2049};
	xor.b64  	%rd3706, %rd3704, %rd3705;
	and.b64  	%rd3707, %rd3688, %rd3664;
	xor.b64  	%rd3708, %rd3688, %rd3664;
	and.b64  	%rd3709, %rd3708, %rd218;
	or.b64  	%rd3710, %rd3709, %rd3707;
	add.s64 	%rd3711, %rd3700, %rd3710;
	add.s64 	%rd3712, %rd3711, %rd3706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd3701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd3701;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 14;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 14;
	mov.b64 	%rd3713, {%r2054, %r2053};
	shf.r.wrap.b32 	%r2055, %r2052, %r2051, 18;
	shf.r.wrap.b32 	%r2056, %r2051, %r2052, 18;
	mov.b64 	%rd3714, {%r2056, %r2055};
	xor.b64  	%rd3715, %rd3714, %rd3713;
	shf.l.wrap.b32 	%r2057, %r2051, %r2052, 23;
	shf.l.wrap.b32 	%r2058, %r2052, %r2051, 23;
	mov.b64 	%rd3716, {%r2058, %r2057};
	xor.b64  	%rd3717, %rd3715, %rd3716;
	xor.b64  	%rd3718, %rd3677, %rd3653;
	and.b64  	%rd3719, %rd3701, %rd3718;
	xor.b64  	%rd3720, %rd3719, %rd3653;
	add.s64 	%rd3721, %rd212, %rd18381;
	ld.const.u64 	%rd223, [k_sha512+24];
	add.s64 	%rd3722, %rd3721, %rd223;
	add.s64 	%rd3723, %rd3722, %rd3720;
	add.s64 	%rd3724, %rd3723, %rd3717;
	add.s64 	%rd3725, %rd3724, %rd218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2059,%dummy}, %rd3712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd3712;
	}
	shf.r.wrap.b32 	%r2061, %r2060, %r2059, 28;
	shf.r.wrap.b32 	%r2062, %r2059, %r2060, 28;
	mov.b64 	%rd3726, {%r2062, %r2061};
	shf.l.wrap.b32 	%r2063, %r2059, %r2060, 30;
	shf.l.wrap.b32 	%r2064, %r2060, %r2059, 30;
	mov.b64 	%rd3727, {%r2064, %r2063};
	xor.b64  	%rd3728, %rd3727, %rd3726;
	shf.l.wrap.b32 	%r2065, %r2059, %r2060, 25;
	shf.l.wrap.b32 	%r2066, %r2060, %r2059, 25;
	mov.b64 	%rd3729, {%r2066, %r2065};
	xor.b64  	%rd3730, %rd3728, %rd3729;
	and.b64  	%rd3731, %rd3712, %rd3688;
	xor.b64  	%rd3732, %rd3712, %rd3688;
	and.b64  	%rd3733, %rd3732, %rd3664;
	or.b64  	%rd3734, %rd3733, %rd3731;
	add.s64 	%rd3735, %rd3724, %rd3734;
	add.s64 	%rd3736, %rd3735, %rd3730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd3725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd3725;
	}
	shf.r.wrap.b32 	%r2069, %r2068, %r2067, 14;
	shf.r.wrap.b32 	%r2070, %r2067, %r2068, 14;
	mov.b64 	%rd3737, {%r2070, %r2069};
	shf.r.wrap.b32 	%r2071, %r2068, %r2067, 18;
	shf.r.wrap.b32 	%r2072, %r2067, %r2068, 18;
	mov.b64 	%rd3738, {%r2072, %r2071};
	xor.b64  	%rd3739, %rd3738, %rd3737;
	shf.l.wrap.b32 	%r2073, %r2067, %r2068, 23;
	shf.l.wrap.b32 	%r2074, %r2068, %r2067, 23;
	mov.b64 	%rd3740, {%r2074, %r2073};
	xor.b64  	%rd3741, %rd3739, %rd3740;
	xor.b64  	%rd3742, %rd3701, %rd3677;
	and.b64  	%rd3743, %rd3725, %rd3742;
	xor.b64  	%rd3744, %rd3743, %rd3677;
	add.s64 	%rd3745, %rd3653, %rd18382;
	ld.const.u64 	%rd224, [k_sha512+32];
	add.s64 	%rd3746, %rd3745, %rd224;
	add.s64 	%rd3747, %rd3746, %rd3744;
	add.s64 	%rd3748, %rd3747, %rd3741;
	add.s64 	%rd3749, %rd3748, %rd3664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd3736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd3736;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 28;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 28;
	mov.b64 	%rd3750, {%r2078, %r2077};
	shf.l.wrap.b32 	%r2079, %r2075, %r2076, 30;
	shf.l.wrap.b32 	%r2080, %r2076, %r2075, 30;
	mov.b64 	%rd3751, {%r2080, %r2079};
	xor.b64  	%rd3752, %rd3751, %rd3750;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 25;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 25;
	mov.b64 	%rd3753, {%r2082, %r2081};
	xor.b64  	%rd3754, %rd3752, %rd3753;
	and.b64  	%rd3755, %rd3736, %rd3712;
	xor.b64  	%rd3756, %rd3736, %rd3712;
	and.b64  	%rd3757, %rd3756, %rd3688;
	or.b64  	%rd3758, %rd3757, %rd3755;
	add.s64 	%rd3759, %rd3748, %rd3758;
	add.s64 	%rd3760, %rd3759, %rd3754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd3749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd3749;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 14;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 14;
	mov.b64 	%rd3761, {%r2086, %r2085};
	shf.r.wrap.b32 	%r2087, %r2084, %r2083, 18;
	shf.r.wrap.b32 	%r2088, %r2083, %r2084, 18;
	mov.b64 	%rd3762, {%r2088, %r2087};
	xor.b64  	%rd3763, %rd3762, %rd3761;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 23;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 23;
	mov.b64 	%rd3764, {%r2090, %r2089};
	xor.b64  	%rd3765, %rd3763, %rd3764;
	xor.b64  	%rd3766, %rd3725, %rd3701;
	and.b64  	%rd3767, %rd3749, %rd3766;
	xor.b64  	%rd3768, %rd3767, %rd3701;
	add.s64 	%rd3769, %rd3677, %rd18383;
	ld.const.u64 	%rd225, [k_sha512+40];
	add.s64 	%rd3770, %rd3769, %rd225;
	add.s64 	%rd3771, %rd3770, %rd3768;
	add.s64 	%rd3772, %rd3771, %rd3765;
	add.s64 	%rd3773, %rd3772, %rd3688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2091,%dummy}, %rd3760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd3760;
	}
	shf.r.wrap.b32 	%r2093, %r2092, %r2091, 28;
	shf.r.wrap.b32 	%r2094, %r2091, %r2092, 28;
	mov.b64 	%rd3774, {%r2094, %r2093};
	shf.l.wrap.b32 	%r2095, %r2091, %r2092, 30;
	shf.l.wrap.b32 	%r2096, %r2092, %r2091, 30;
	mov.b64 	%rd3775, {%r2096, %r2095};
	xor.b64  	%rd3776, %rd3775, %rd3774;
	shf.l.wrap.b32 	%r2097, %r2091, %r2092, 25;
	shf.l.wrap.b32 	%r2098, %r2092, %r2091, 25;
	mov.b64 	%rd3777, {%r2098, %r2097};
	xor.b64  	%rd3778, %rd3776, %rd3777;
	and.b64  	%rd3779, %rd3760, %rd3736;
	xor.b64  	%rd3780, %rd3760, %rd3736;
	and.b64  	%rd3781, %rd3780, %rd3712;
	or.b64  	%rd3782, %rd3781, %rd3779;
	add.s64 	%rd3783, %rd3772, %rd3782;
	add.s64 	%rd3784, %rd3783, %rd3778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2099,%dummy}, %rd3773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2100}, %rd3773;
	}
	shf.r.wrap.b32 	%r2101, %r2100, %r2099, 14;
	shf.r.wrap.b32 	%r2102, %r2099, %r2100, 14;
	mov.b64 	%rd3785, {%r2102, %r2101};
	shf.r.wrap.b32 	%r2103, %r2100, %r2099, 18;
	shf.r.wrap.b32 	%r2104, %r2099, %r2100, 18;
	mov.b64 	%rd3786, {%r2104, %r2103};
	xor.b64  	%rd3787, %rd3786, %rd3785;
	shf.l.wrap.b32 	%r2105, %r2099, %r2100, 23;
	shf.l.wrap.b32 	%r2106, %r2100, %r2099, 23;
	mov.b64 	%rd3788, {%r2106, %r2105};
	xor.b64  	%rd3789, %rd3787, %rd3788;
	xor.b64  	%rd3790, %rd3749, %rd3725;
	and.b64  	%rd3791, %rd3773, %rd3790;
	xor.b64  	%rd3792, %rd3791, %rd3725;
	add.s64 	%rd3793, %rd3701, %rd18384;
	ld.const.u64 	%rd226, [k_sha512+48];
	add.s64 	%rd3794, %rd3793, %rd226;
	add.s64 	%rd3795, %rd3794, %rd3792;
	add.s64 	%rd3796, %rd3795, %rd3789;
	add.s64 	%rd3797, %rd3796, %rd3712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2107,%dummy}, %rd3784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd3784;
	}
	shf.r.wrap.b32 	%r2109, %r2108, %r2107, 28;
	shf.r.wrap.b32 	%r2110, %r2107, %r2108, 28;
	mov.b64 	%rd3798, {%r2110, %r2109};
	shf.l.wrap.b32 	%r2111, %r2107, %r2108, 30;
	shf.l.wrap.b32 	%r2112, %r2108, %r2107, 30;
	mov.b64 	%rd3799, {%r2112, %r2111};
	xor.b64  	%rd3800, %rd3799, %rd3798;
	shf.l.wrap.b32 	%r2113, %r2107, %r2108, 25;
	shf.l.wrap.b32 	%r2114, %r2108, %r2107, 25;
	mov.b64 	%rd3801, {%r2114, %r2113};
	xor.b64  	%rd3802, %rd3800, %rd3801;
	and.b64  	%rd3803, %rd3784, %rd3760;
	xor.b64  	%rd3804, %rd3784, %rd3760;
	and.b64  	%rd3805, %rd3804, %rd3736;
	or.b64  	%rd3806, %rd3805, %rd3803;
	add.s64 	%rd3807, %rd3796, %rd3806;
	add.s64 	%rd3808, %rd3807, %rd3802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2115,%dummy}, %rd3797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2116}, %rd3797;
	}
	shf.r.wrap.b32 	%r2117, %r2116, %r2115, 14;
	shf.r.wrap.b32 	%r2118, %r2115, %r2116, 14;
	mov.b64 	%rd3809, {%r2118, %r2117};
	shf.r.wrap.b32 	%r2119, %r2116, %r2115, 18;
	shf.r.wrap.b32 	%r2120, %r2115, %r2116, 18;
	mov.b64 	%rd3810, {%r2120, %r2119};
	xor.b64  	%rd3811, %rd3810, %rd3809;
	shf.l.wrap.b32 	%r2121, %r2115, %r2116, 23;
	shf.l.wrap.b32 	%r2122, %r2116, %r2115, 23;
	mov.b64 	%rd3812, {%r2122, %r2121};
	xor.b64  	%rd3813, %rd3811, %rd3812;
	xor.b64  	%rd3814, %rd3773, %rd3749;
	and.b64  	%rd3815, %rd3797, %rd3814;
	xor.b64  	%rd3816, %rd3815, %rd3749;
	add.s64 	%rd3817, %rd3725, %rd18385;
	ld.const.u64 	%rd18331, [k_sha512+56];
	add.s64 	%rd3818, %rd3817, %rd18331;
	add.s64 	%rd3819, %rd3818, %rd3816;
	add.s64 	%rd3820, %rd3819, %rd3813;
	add.s64 	%rd3821, %rd3820, %rd3736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd3808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2124}, %rd3808;
	}
	shf.r.wrap.b32 	%r2125, %r2124, %r2123, 28;
	shf.r.wrap.b32 	%r2126, %r2123, %r2124, 28;
	mov.b64 	%rd3822, {%r2126, %r2125};
	shf.l.wrap.b32 	%r2127, %r2123, %r2124, 30;
	shf.l.wrap.b32 	%r2128, %r2124, %r2123, 30;
	mov.b64 	%rd3823, {%r2128, %r2127};
	xor.b64  	%rd3824, %rd3823, %rd3822;
	shf.l.wrap.b32 	%r2129, %r2123, %r2124, 25;
	shf.l.wrap.b32 	%r2130, %r2124, %r2123, 25;
	mov.b64 	%rd3825, {%r2130, %r2129};
	xor.b64  	%rd3826, %rd3824, %rd3825;
	and.b64  	%rd3827, %rd3808, %rd3784;
	xor.b64  	%rd3828, %rd3808, %rd3784;
	and.b64  	%rd3829, %rd3828, %rd3760;
	or.b64  	%rd3830, %rd3829, %rd3827;
	add.s64 	%rd3831, %rd3820, %rd3830;
	add.s64 	%rd3832, %rd3831, %rd3826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd3821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2132}, %rd3821;
	}
	shf.r.wrap.b32 	%r2133, %r2132, %r2131, 14;
	shf.r.wrap.b32 	%r2134, %r2131, %r2132, 14;
	mov.b64 	%rd3833, {%r2134, %r2133};
	shf.r.wrap.b32 	%r2135, %r2132, %r2131, 18;
	shf.r.wrap.b32 	%r2136, %r2131, %r2132, 18;
	mov.b64 	%rd3834, {%r2136, %r2135};
	xor.b64  	%rd3835, %rd3834, %rd3833;
	shf.l.wrap.b32 	%r2137, %r2131, %r2132, 23;
	shf.l.wrap.b32 	%r2138, %r2132, %r2131, 23;
	mov.b64 	%rd3836, {%r2138, %r2137};
	xor.b64  	%rd3837, %rd3835, %rd3836;
	xor.b64  	%rd3838, %rd3797, %rd3773;
	and.b64  	%rd3839, %rd3821, %rd3838;
	xor.b64  	%rd3840, %rd3839, %rd3773;
	add.s64 	%rd3841, %rd3749, %rd18369;
	ld.const.u64 	%rd18330, [k_sha512+64];
	add.s64 	%rd3842, %rd3841, %rd18330;
	add.s64 	%rd3843, %rd3842, %rd3840;
	add.s64 	%rd3844, %rd3843, %rd3837;
	add.s64 	%rd3845, %rd3844, %rd3760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2139,%dummy}, %rd3832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2140}, %rd3832;
	}
	shf.r.wrap.b32 	%r2141, %r2140, %r2139, 28;
	shf.r.wrap.b32 	%r2142, %r2139, %r2140, 28;
	mov.b64 	%rd3846, {%r2142, %r2141};
	shf.l.wrap.b32 	%r2143, %r2139, %r2140, 30;
	shf.l.wrap.b32 	%r2144, %r2140, %r2139, 30;
	mov.b64 	%rd3847, {%r2144, %r2143};
	xor.b64  	%rd3848, %rd3847, %rd3846;
	shf.l.wrap.b32 	%r2145, %r2139, %r2140, 25;
	shf.l.wrap.b32 	%r2146, %r2140, %r2139, 25;
	mov.b64 	%rd3849, {%r2146, %r2145};
	xor.b64  	%rd3850, %rd3848, %rd3849;
	and.b64  	%rd3851, %rd3832, %rd3808;
	xor.b64  	%rd3852, %rd3832, %rd3808;
	and.b64  	%rd3853, %rd3852, %rd3784;
	or.b64  	%rd3854, %rd3853, %rd3851;
	add.s64 	%rd3855, %rd3844, %rd3854;
	add.s64 	%rd3856, %rd3855, %rd3850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2147,%dummy}, %rd3845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2148}, %rd3845;
	}
	shf.r.wrap.b32 	%r2149, %r2148, %r2147, 14;
	shf.r.wrap.b32 	%r2150, %r2147, %r2148, 14;
	mov.b64 	%rd3857, {%r2150, %r2149};
	shf.r.wrap.b32 	%r2151, %r2148, %r2147, 18;
	shf.r.wrap.b32 	%r2152, %r2147, %r2148, 18;
	mov.b64 	%rd3858, {%r2152, %r2151};
	xor.b64  	%rd3859, %rd3858, %rd3857;
	shf.l.wrap.b32 	%r2153, %r2147, %r2148, 23;
	shf.l.wrap.b32 	%r2154, %r2148, %r2147, 23;
	mov.b64 	%rd3860, {%r2154, %r2153};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	xor.b64  	%rd3862, %rd3821, %rd3797;
	and.b64  	%rd3863, %rd3845, %rd3862;
	xor.b64  	%rd3864, %rd3863, %rd3797;
	add.s64 	%rd3865, %rd3773, %rd18368;
	ld.const.u64 	%rd229, [k_sha512+72];
	add.s64 	%rd3866, %rd3865, %rd229;
	add.s64 	%rd3867, %rd3866, %rd3864;
	add.s64 	%rd3868, %rd3867, %rd3861;
	add.s64 	%rd3869, %rd3868, %rd3784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2155,%dummy}, %rd3856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2156}, %rd3856;
	}
	shf.r.wrap.b32 	%r2157, %r2156, %r2155, 28;
	shf.r.wrap.b32 	%r2158, %r2155, %r2156, 28;
	mov.b64 	%rd3870, {%r2158, %r2157};
	shf.l.wrap.b32 	%r2159, %r2155, %r2156, 30;
	shf.l.wrap.b32 	%r2160, %r2156, %r2155, 30;
	mov.b64 	%rd3871, {%r2160, %r2159};
	xor.b64  	%rd3872, %rd3871, %rd3870;
	shf.l.wrap.b32 	%r2161, %r2155, %r2156, 25;
	shf.l.wrap.b32 	%r2162, %r2156, %r2155, 25;
	mov.b64 	%rd3873, {%r2162, %r2161};
	xor.b64  	%rd3874, %rd3872, %rd3873;
	and.b64  	%rd3875, %rd3856, %rd3832;
	xor.b64  	%rd3876, %rd3856, %rd3832;
	and.b64  	%rd3877, %rd3876, %rd3808;
	or.b64  	%rd3878, %rd3877, %rd3875;
	add.s64 	%rd3879, %rd3868, %rd3878;
	add.s64 	%rd3880, %rd3879, %rd3874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2163,%dummy}, %rd3869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2164}, %rd3869;
	}
	shf.r.wrap.b32 	%r2165, %r2164, %r2163, 14;
	shf.r.wrap.b32 	%r2166, %r2163, %r2164, 14;
	mov.b64 	%rd3881, {%r2166, %r2165};
	shf.r.wrap.b32 	%r2167, %r2164, %r2163, 18;
	shf.r.wrap.b32 	%r2168, %r2163, %r2164, 18;
	mov.b64 	%rd3882, {%r2168, %r2167};
	xor.b64  	%rd3883, %rd3882, %rd3881;
	shf.l.wrap.b32 	%r2169, %r2163, %r2164, 23;
	shf.l.wrap.b32 	%r2170, %r2164, %r2163, 23;
	mov.b64 	%rd3884, {%r2170, %r2169};
	xor.b64  	%rd3885, %rd3883, %rd3884;
	xor.b64  	%rd3886, %rd3845, %rd3821;
	and.b64  	%rd3887, %rd3869, %rd3886;
	xor.b64  	%rd3888, %rd3887, %rd3821;
	add.s64 	%rd3889, %rd3797, %rd18367;
	ld.const.u64 	%rd230, [k_sha512+80];
	add.s64 	%rd3890, %rd3889, %rd230;
	add.s64 	%rd3891, %rd3890, %rd3888;
	add.s64 	%rd3892, %rd3891, %rd3885;
	add.s64 	%rd3893, %rd3892, %rd3808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2171,%dummy}, %rd3880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2172}, %rd3880;
	}
	shf.r.wrap.b32 	%r2173, %r2172, %r2171, 28;
	shf.r.wrap.b32 	%r2174, %r2171, %r2172, 28;
	mov.b64 	%rd3894, {%r2174, %r2173};
	shf.l.wrap.b32 	%r2175, %r2171, %r2172, 30;
	shf.l.wrap.b32 	%r2176, %r2172, %r2171, 30;
	mov.b64 	%rd3895, {%r2176, %r2175};
	xor.b64  	%rd3896, %rd3895, %rd3894;
	shf.l.wrap.b32 	%r2177, %r2171, %r2172, 25;
	shf.l.wrap.b32 	%r2178, %r2172, %r2171, 25;
	mov.b64 	%rd3897, {%r2178, %r2177};
	xor.b64  	%rd3898, %rd3896, %rd3897;
	and.b64  	%rd3899, %rd3880, %rd3856;
	xor.b64  	%rd3900, %rd3880, %rd3856;
	and.b64  	%rd3901, %rd3900, %rd3832;
	or.b64  	%rd3902, %rd3901, %rd3899;
	add.s64 	%rd3903, %rd3892, %rd3902;
	add.s64 	%rd3904, %rd3903, %rd3898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd3893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2180}, %rd3893;
	}
	shf.r.wrap.b32 	%r2181, %r2180, %r2179, 14;
	shf.r.wrap.b32 	%r2182, %r2179, %r2180, 14;
	mov.b64 	%rd3905, {%r2182, %r2181};
	shf.r.wrap.b32 	%r2183, %r2180, %r2179, 18;
	shf.r.wrap.b32 	%r2184, %r2179, %r2180, 18;
	mov.b64 	%rd3906, {%r2184, %r2183};
	xor.b64  	%rd3907, %rd3906, %rd3905;
	shf.l.wrap.b32 	%r2185, %r2179, %r2180, 23;
	shf.l.wrap.b32 	%r2186, %r2180, %r2179, 23;
	mov.b64 	%rd3908, {%r2186, %r2185};
	xor.b64  	%rd3909, %rd3907, %rd3908;
	xor.b64  	%rd3910, %rd3869, %rd3845;
	and.b64  	%rd3911, %rd3893, %rd3910;
	xor.b64  	%rd3912, %rd3911, %rd3845;
	add.s64 	%rd3913, %rd3821, %rd18366;
	ld.const.u64 	%rd231, [k_sha512+88];
	add.s64 	%rd3914, %rd3913, %rd231;
	add.s64 	%rd3915, %rd3914, %rd3912;
	add.s64 	%rd3916, %rd3915, %rd3909;
	add.s64 	%rd3917, %rd3916, %rd3832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2187,%dummy}, %rd3904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2188}, %rd3904;
	}
	shf.r.wrap.b32 	%r2189, %r2188, %r2187, 28;
	shf.r.wrap.b32 	%r2190, %r2187, %r2188, 28;
	mov.b64 	%rd3918, {%r2190, %r2189};
	shf.l.wrap.b32 	%r2191, %r2187, %r2188, 30;
	shf.l.wrap.b32 	%r2192, %r2188, %r2187, 30;
	mov.b64 	%rd3919, {%r2192, %r2191};
	xor.b64  	%rd3920, %rd3919, %rd3918;
	shf.l.wrap.b32 	%r2193, %r2187, %r2188, 25;
	shf.l.wrap.b32 	%r2194, %r2188, %r2187, 25;
	mov.b64 	%rd3921, {%r2194, %r2193};
	xor.b64  	%rd3922, %rd3920, %rd3921;
	and.b64  	%rd3923, %rd3904, %rd3880;
	xor.b64  	%rd3924, %rd3904, %rd3880;
	and.b64  	%rd3925, %rd3924, %rd3856;
	or.b64  	%rd3926, %rd3925, %rd3923;
	add.s64 	%rd3927, %rd3916, %rd3926;
	add.s64 	%rd3928, %rd3927, %rd3922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2195,%dummy}, %rd3917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2196}, %rd3917;
	}
	shf.r.wrap.b32 	%r2197, %r2196, %r2195, 14;
	shf.r.wrap.b32 	%r2198, %r2195, %r2196, 14;
	mov.b64 	%rd3929, {%r2198, %r2197};
	shf.r.wrap.b32 	%r2199, %r2196, %r2195, 18;
	shf.r.wrap.b32 	%r2200, %r2195, %r2196, 18;
	mov.b64 	%rd3930, {%r2200, %r2199};
	xor.b64  	%rd3931, %rd3930, %rd3929;
	shf.l.wrap.b32 	%r2201, %r2195, %r2196, 23;
	shf.l.wrap.b32 	%r2202, %r2196, %r2195, 23;
	mov.b64 	%rd3932, {%r2202, %r2201};
	xor.b64  	%rd3933, %rd3931, %rd3932;
	xor.b64  	%rd3934, %rd3893, %rd3869;
	and.b64  	%rd3935, %rd3917, %rd3934;
	xor.b64  	%rd3936, %rd3935, %rd3869;
	add.s64 	%rd3937, %rd3845, %rd18365;
	ld.const.u64 	%rd232, [k_sha512+96];
	add.s64 	%rd3938, %rd3937, %rd232;
	add.s64 	%rd3939, %rd3938, %rd3936;
	add.s64 	%rd3940, %rd3939, %rd3933;
	add.s64 	%rd18314, %rd3940, %rd3856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd3928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd3928;
	}
	shf.r.wrap.b32 	%r2205, %r2204, %r2203, 28;
	shf.r.wrap.b32 	%r2206, %r2203, %r2204, 28;
	mov.b64 	%rd3941, {%r2206, %r2205};
	shf.l.wrap.b32 	%r2207, %r2203, %r2204, 30;
	shf.l.wrap.b32 	%r2208, %r2204, %r2203, 30;
	mov.b64 	%rd3942, {%r2208, %r2207};
	xor.b64  	%rd3943, %rd3942, %rd3941;
	shf.l.wrap.b32 	%r2209, %r2203, %r2204, 25;
	shf.l.wrap.b32 	%r2210, %r2204, %r2203, 25;
	mov.b64 	%rd3944, {%r2210, %r2209};
	xor.b64  	%rd3945, %rd3943, %rd3944;
	and.b64  	%rd3946, %rd3928, %rd3904;
	xor.b64  	%rd3947, %rd3928, %rd3904;
	and.b64  	%rd3948, %rd3947, %rd3880;
	or.b64  	%rd3949, %rd3948, %rd3946;
	add.s64 	%rd3950, %rd3940, %rd3949;
	add.s64 	%rd18310, %rd3950, %rd3945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2211,%dummy}, %rd18314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2212}, %rd18314;
	}
	shf.r.wrap.b32 	%r2213, %r2212, %r2211, 14;
	shf.r.wrap.b32 	%r2214, %r2211, %r2212, 14;
	mov.b64 	%rd3951, {%r2214, %r2213};
	shf.r.wrap.b32 	%r2215, %r2212, %r2211, 18;
	shf.r.wrap.b32 	%r2216, %r2211, %r2212, 18;
	mov.b64 	%rd3952, {%r2216, %r2215};
	xor.b64  	%rd3953, %rd3952, %rd3951;
	shf.l.wrap.b32 	%r2217, %r2211, %r2212, 23;
	shf.l.wrap.b32 	%r2218, %r2212, %r2211, 23;
	mov.b64 	%rd3954, {%r2218, %r2217};
	xor.b64  	%rd3955, %rd3953, %rd3954;
	xor.b64  	%rd3956, %rd3917, %rd3893;
	and.b64  	%rd3957, %rd18314, %rd3956;
	xor.b64  	%rd3958, %rd3957, %rd3893;
	add.s64 	%rd3959, %rd3869, %rd18364;
	ld.const.u64 	%rd235, [k_sha512+104];
	add.s64 	%rd3960, %rd3959, %rd235;
	add.s64 	%rd3961, %rd3960, %rd3958;
	add.s64 	%rd3962, %rd3961, %rd3955;
	add.s64 	%rd18313, %rd3962, %rd3880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2219,%dummy}, %rd18310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2220}, %rd18310;
	}
	shf.r.wrap.b32 	%r2221, %r2220, %r2219, 28;
	shf.r.wrap.b32 	%r2222, %r2219, %r2220, 28;
	mov.b64 	%rd3963, {%r2222, %r2221};
	shf.l.wrap.b32 	%r2223, %r2219, %r2220, 30;
	shf.l.wrap.b32 	%r2224, %r2220, %r2219, 30;
	mov.b64 	%rd3964, {%r2224, %r2223};
	xor.b64  	%rd3965, %rd3964, %rd3963;
	shf.l.wrap.b32 	%r2225, %r2219, %r2220, 25;
	shf.l.wrap.b32 	%r2226, %r2220, %r2219, 25;
	mov.b64 	%rd3966, {%r2226, %r2225};
	xor.b64  	%rd3967, %rd3965, %rd3966;
	and.b64  	%rd3968, %rd18310, %rd3928;
	xor.b64  	%rd3969, %rd18310, %rd3928;
	and.b64  	%rd3970, %rd3969, %rd3904;
	or.b64  	%rd3971, %rd3970, %rd3968;
	add.s64 	%rd3972, %rd3962, %rd3971;
	add.s64 	%rd18309, %rd3972, %rd3967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2227,%dummy}, %rd18313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2228}, %rd18313;
	}
	shf.r.wrap.b32 	%r2229, %r2228, %r2227, 14;
	shf.r.wrap.b32 	%r2230, %r2227, %r2228, 14;
	mov.b64 	%rd3973, {%r2230, %r2229};
	shf.r.wrap.b32 	%r2231, %r2228, %r2227, 18;
	shf.r.wrap.b32 	%r2232, %r2227, %r2228, 18;
	mov.b64 	%rd3974, {%r2232, %r2231};
	xor.b64  	%rd3975, %rd3974, %rd3973;
	shf.l.wrap.b32 	%r2233, %r2227, %r2228, 23;
	shf.l.wrap.b32 	%r2234, %r2228, %r2227, 23;
	mov.b64 	%rd3976, {%r2234, %r2233};
	xor.b64  	%rd3977, %rd3975, %rd3976;
	xor.b64  	%rd3978, %rd18314, %rd3917;
	and.b64  	%rd3979, %rd18313, %rd3978;
	xor.b64  	%rd3980, %rd3979, %rd3917;
	add.s64 	%rd3981, %rd3893, %rd18363;
	ld.const.u64 	%rd238, [k_sha512+112];
	add.s64 	%rd3982, %rd3981, %rd238;
	add.s64 	%rd3983, %rd3982, %rd3980;
	add.s64 	%rd3984, %rd3983, %rd3977;
	add.s64 	%rd18312, %rd3984, %rd3904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2235,%dummy}, %rd18309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd18309;
	}
	shf.r.wrap.b32 	%r2237, %r2236, %r2235, 28;
	shf.r.wrap.b32 	%r2238, %r2235, %r2236, 28;
	mov.b64 	%rd3985, {%r2238, %r2237};
	shf.l.wrap.b32 	%r2239, %r2235, %r2236, 30;
	shf.l.wrap.b32 	%r2240, %r2236, %r2235, 30;
	mov.b64 	%rd3986, {%r2240, %r2239};
	xor.b64  	%rd3987, %rd3986, %rd3985;
	shf.l.wrap.b32 	%r2241, %r2235, %r2236, 25;
	shf.l.wrap.b32 	%r2242, %r2236, %r2235, 25;
	mov.b64 	%rd3988, {%r2242, %r2241};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	and.b64  	%rd3990, %rd18309, %rd18310;
	xor.b64  	%rd3991, %rd18309, %rd18310;
	and.b64  	%rd3992, %rd3991, %rd3928;
	or.b64  	%rd3993, %rd3992, %rd3990;
	add.s64 	%rd3994, %rd3984, %rd3993;
	add.s64 	%rd18308, %rd3994, %rd3989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2243,%dummy}, %rd18312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2244}, %rd18312;
	}
	shf.r.wrap.b32 	%r2245, %r2244, %r2243, 14;
	shf.r.wrap.b32 	%r2246, %r2243, %r2244, 14;
	mov.b64 	%rd3995, {%r2246, %r2245};
	shf.r.wrap.b32 	%r2247, %r2244, %r2243, 18;
	shf.r.wrap.b32 	%r2248, %r2243, %r2244, 18;
	mov.b64 	%rd3996, {%r2248, %r2247};
	xor.b64  	%rd3997, %rd3996, %rd3995;
	shf.l.wrap.b32 	%r2249, %r2243, %r2244, 23;
	shf.l.wrap.b32 	%r2250, %r2244, %r2243, 23;
	mov.b64 	%rd3998, {%r2250, %r2249};
	xor.b64  	%rd3999, %rd3997, %rd3998;
	xor.b64  	%rd4000, %rd18313, %rd18314;
	and.b64  	%rd4001, %rd18312, %rd4000;
	xor.b64  	%rd4002, %rd4001, %rd18314;
	ld.local.u64 	%rd18299, [%rd1+184];
	add.s64 	%rd4003, %rd3917, %rd18299;
	ld.const.u64 	%rd242, [k_sha512+120];
	add.s64 	%rd4004, %rd4003, %rd242;
	add.s64 	%rd4005, %rd4004, %rd4002;
	add.s64 	%rd4006, %rd4005, %rd3999;
	add.s64 	%rd18311, %rd4006, %rd3928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2251,%dummy}, %rd18308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2252}, %rd18308;
	}
	shf.r.wrap.b32 	%r2253, %r2252, %r2251, 28;
	shf.r.wrap.b32 	%r2254, %r2251, %r2252, 28;
	mov.b64 	%rd4007, {%r2254, %r2253};
	shf.l.wrap.b32 	%r2255, %r2251, %r2252, 30;
	shf.l.wrap.b32 	%r2256, %r2252, %r2251, 30;
	mov.b64 	%rd4008, {%r2256, %r2255};
	xor.b64  	%rd4009, %rd4008, %rd4007;
	shf.l.wrap.b32 	%r2257, %r2251, %r2252, 25;
	shf.l.wrap.b32 	%r2258, %r2252, %r2251, 25;
	mov.b64 	%rd4010, {%r2258, %r2257};
	xor.b64  	%rd4011, %rd4009, %rd4010;
	and.b64  	%rd4012, %rd18308, %rd18309;
	xor.b64  	%rd4013, %rd18308, %rd18309;
	and.b64  	%rd4014, %rd4013, %rd18310;
	or.b64  	%rd4015, %rd4014, %rd4012;
	add.s64 	%rd4016, %rd4006, %rd4015;
	add.s64 	%rd18307, %rd4016, %rd4011;
	mov.u32 	%r12587, 16;

BB0_64:
	shr.u64 	%rd4017, %rd18363, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd18363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd18363;
	}
	shf.r.wrap.b32 	%r2261, %r2260, %r2259, 19;
	shf.r.wrap.b32 	%r2262, %r2259, %r2260, 19;
	mov.b64 	%rd4018, {%r2262, %r2261};
	xor.b64  	%rd4019, %rd4018, %rd4017;
	shf.l.wrap.b32 	%r2263, %r2259, %r2260, 3;
	shf.l.wrap.b32 	%r2264, %r2260, %r2259, 3;
	mov.b64 	%rd4020, {%r2264, %r2263};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	shr.u64 	%rd4022, %rd18379, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd18379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd18379;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 1;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 1;
	mov.b64 	%rd4023, {%r2268, %r2267};
	xor.b64  	%rd4024, %rd4023, %rd4022;
	shf.r.wrap.b32 	%r2269, %r2266, %r2265, 8;
	shf.r.wrap.b32 	%r2270, %r2265, %r2266, 8;
	mov.b64 	%rd4025, {%r2270, %r2269};
	xor.b64  	%rd4026, %rd4024, %rd4025;
	add.s64 	%rd4027, %rd18368, %rd18378;
	add.s64 	%rd4028, %rd4027, %rd4021;
	add.s64 	%rd18378, %rd4028, %rd4026;
	shr.u64 	%rd4029, %rd18299, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2271,%dummy}, %rd18299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2272}, %rd18299;
	}
	shf.r.wrap.b32 	%r2273, %r2272, %r2271, 19;
	shf.r.wrap.b32 	%r2274, %r2271, %r2272, 19;
	mov.b64 	%rd4030, {%r2274, %r2273};
	xor.b64  	%rd4031, %rd4030, %rd4029;
	shf.l.wrap.b32 	%r2275, %r2271, %r2272, 3;
	shf.l.wrap.b32 	%r2276, %r2272, %r2271, 3;
	mov.b64 	%rd4032, {%r2276, %r2275};
	xor.b64  	%rd4033, %rd4031, %rd4032;
	shr.u64 	%rd4034, %rd18380, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd18380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd18380;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 1;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 1;
	mov.b64 	%rd4035, {%r2280, %r2279};
	xor.b64  	%rd4036, %rd4035, %rd4034;
	shf.r.wrap.b32 	%r2281, %r2278, %r2277, 8;
	shf.r.wrap.b32 	%r2282, %r2277, %r2278, 8;
	mov.b64 	%rd4037, {%r2282, %r2281};
	xor.b64  	%rd4038, %rd4036, %rd4037;
	add.s64 	%rd4039, %rd18367, %rd18379;
	add.s64 	%rd4040, %rd4039, %rd4033;
	add.s64 	%rd18379, %rd4040, %rd4038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd18378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2284}, %rd18378;
	}
	shf.r.wrap.b32 	%r2285, %r2284, %r2283, 19;
	shf.r.wrap.b32 	%r2286, %r2283, %r2284, 19;
	mov.b64 	%rd4041, {%r2286, %r2285};
	shf.l.wrap.b32 	%r2287, %r2283, %r2284, 3;
	shf.l.wrap.b32 	%r2288, %r2284, %r2283, 3;
	mov.b64 	%rd4042, {%r2288, %r2287};
	shr.u64 	%rd4043, %rd18378, 6;
	xor.b64  	%rd4044, %rd4041, %rd4043;
	xor.b64  	%rd4045, %rd4044, %rd4042;
	shr.u64 	%rd4046, %rd18381, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2289,%dummy}, %rd18381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2290}, %rd18381;
	}
	shf.r.wrap.b32 	%r2291, %r2290, %r2289, 1;
	shf.r.wrap.b32 	%r2292, %r2289, %r2290, 1;
	mov.b64 	%rd4047, {%r2292, %r2291};
	xor.b64  	%rd4048, %rd4047, %rd4046;
	shf.r.wrap.b32 	%r2293, %r2290, %r2289, 8;
	shf.r.wrap.b32 	%r2294, %r2289, %r2290, 8;
	mov.b64 	%rd4049, {%r2294, %r2293};
	xor.b64  	%rd4050, %rd4048, %rd4049;
	add.s64 	%rd4051, %rd18366, %rd18380;
	add.s64 	%rd4052, %rd4051, %rd4045;
	add.s64 	%rd18380, %rd4052, %rd4050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2295,%dummy}, %rd18379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2296}, %rd18379;
	}
	shf.r.wrap.b32 	%r2297, %r2296, %r2295, 19;
	shf.r.wrap.b32 	%r2298, %r2295, %r2296, 19;
	mov.b64 	%rd4053, {%r2298, %r2297};
	shf.l.wrap.b32 	%r2299, %r2295, %r2296, 3;
	shf.l.wrap.b32 	%r2300, %r2296, %r2295, 3;
	mov.b64 	%rd4054, {%r2300, %r2299};
	shr.u64 	%rd4055, %rd18379, 6;
	xor.b64  	%rd4056, %rd4053, %rd4055;
	xor.b64  	%rd4057, %rd4056, %rd4054;
	shr.u64 	%rd4058, %rd18382, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd18382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd18382;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 1;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 1;
	mov.b64 	%rd4059, {%r2304, %r2303};
	xor.b64  	%rd4060, %rd4059, %rd4058;
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 8;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 8;
	mov.b64 	%rd4061, {%r2306, %r2305};
	xor.b64  	%rd4062, %rd4060, %rd4061;
	add.s64 	%rd4063, %rd18365, %rd18381;
	add.s64 	%rd4064, %rd4063, %rd4057;
	add.s64 	%rd18381, %rd4064, %rd4062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd18380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd18380;
	}
	shf.r.wrap.b32 	%r2309, %r2308, %r2307, 19;
	shf.r.wrap.b32 	%r2310, %r2307, %r2308, 19;
	mov.b64 	%rd4065, {%r2310, %r2309};
	shf.l.wrap.b32 	%r2311, %r2307, %r2308, 3;
	shf.l.wrap.b32 	%r2312, %r2308, %r2307, 3;
	mov.b64 	%rd4066, {%r2312, %r2311};
	shr.u64 	%rd4067, %rd18380, 6;
	xor.b64  	%rd4068, %rd4065, %rd4067;
	xor.b64  	%rd4069, %rd4068, %rd4066;
	shr.u64 	%rd4070, %rd18383, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2313,%dummy}, %rd18383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2314}, %rd18383;
	}
	shf.r.wrap.b32 	%r2315, %r2314, %r2313, 1;
	shf.r.wrap.b32 	%r2316, %r2313, %r2314, 1;
	mov.b64 	%rd4071, {%r2316, %r2315};
	xor.b64  	%rd4072, %rd4071, %rd4070;
	shf.r.wrap.b32 	%r2317, %r2314, %r2313, 8;
	shf.r.wrap.b32 	%r2318, %r2313, %r2314, 8;
	mov.b64 	%rd4073, {%r2318, %r2317};
	xor.b64  	%rd4074, %rd4072, %rd4073;
	add.s64 	%rd4075, %rd18364, %rd18382;
	add.s64 	%rd4076, %rd4075, %rd4069;
	add.s64 	%rd18382, %rd4076, %rd4074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd18381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd18381;
	}
	shf.r.wrap.b32 	%r2321, %r2320, %r2319, 19;
	shf.r.wrap.b32 	%r2322, %r2319, %r2320, 19;
	mov.b64 	%rd4077, {%r2322, %r2321};
	shf.l.wrap.b32 	%r2323, %r2319, %r2320, 3;
	shf.l.wrap.b32 	%r2324, %r2320, %r2319, 3;
	mov.b64 	%rd4078, {%r2324, %r2323};
	shr.u64 	%rd4079, %rd18381, 6;
	xor.b64  	%rd4080, %rd4077, %rd4079;
	xor.b64  	%rd4081, %rd4080, %rd4078;
	shr.u64 	%rd4082, %rd18384, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd18384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd18384;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 1;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 1;
	mov.b64 	%rd4083, {%r2328, %r2327};
	xor.b64  	%rd4084, %rd4083, %rd4082;
	shf.r.wrap.b32 	%r2329, %r2326, %r2325, 8;
	shf.r.wrap.b32 	%r2330, %r2325, %r2326, 8;
	mov.b64 	%rd4085, {%r2330, %r2329};
	xor.b64  	%rd4086, %rd4084, %rd4085;
	add.s64 	%rd4087, %rd18363, %rd18383;
	add.s64 	%rd4088, %rd4087, %rd4081;
	add.s64 	%rd18383, %rd4088, %rd4086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd18382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd18382;
	}
	shf.r.wrap.b32 	%r2333, %r2332, %r2331, 19;
	shf.r.wrap.b32 	%r2334, %r2331, %r2332, 19;
	mov.b64 	%rd4089, {%r2334, %r2333};
	shf.l.wrap.b32 	%r2335, %r2331, %r2332, 3;
	shf.l.wrap.b32 	%r2336, %r2332, %r2331, 3;
	mov.b64 	%rd4090, {%r2336, %r2335};
	shr.u64 	%rd4091, %rd18382, 6;
	xor.b64  	%rd4092, %rd4089, %rd4091;
	xor.b64  	%rd4093, %rd4092, %rd4090;
	shr.u64 	%rd4094, %rd18385, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2338}, %rd18385;
	}
	shf.r.wrap.b32 	%r2339, %r2338, %r2337, 1;
	shf.r.wrap.b32 	%r2340, %r2337, %r2338, 1;
	mov.b64 	%rd4095, {%r2340, %r2339};
	xor.b64  	%rd4096, %rd4095, %rd4094;
	shf.r.wrap.b32 	%r2341, %r2338, %r2337, 8;
	shf.r.wrap.b32 	%r2342, %r2337, %r2338, 8;
	mov.b64 	%rd4097, {%r2342, %r2341};
	xor.b64  	%rd4098, %rd4096, %rd4097;
	add.s64 	%rd4099, %rd18299, %rd18384;
	add.s64 	%rd4100, %rd4099, %rd4093;
	add.s64 	%rd18384, %rd4100, %rd4098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd18383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd18383;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 19;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 19;
	mov.b64 	%rd4101, {%r2346, %r2345};
	shf.l.wrap.b32 	%r2347, %r2343, %r2344, 3;
	shf.l.wrap.b32 	%r2348, %r2344, %r2343, 3;
	mov.b64 	%rd4102, {%r2348, %r2347};
	shr.u64 	%rd4103, %rd18383, 6;
	xor.b64  	%rd4104, %rd4101, %rd4103;
	xor.b64  	%rd4105, %rd4104, %rd4102;
	shr.u64 	%rd4106, %rd18369, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd18369;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 1;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 1;
	mov.b64 	%rd4107, {%r2352, %r2351};
	xor.b64  	%rd4108, %rd4107, %rd4106;
	shf.r.wrap.b32 	%r2353, %r2350, %r2349, 8;
	shf.r.wrap.b32 	%r2354, %r2349, %r2350, 8;
	mov.b64 	%rd4109, {%r2354, %r2353};
	xor.b64  	%rd4110, %rd4108, %rd4109;
	add.s64 	%rd4111, %rd18378, %rd18385;
	add.s64 	%rd4112, %rd4111, %rd4105;
	add.s64 	%rd18385, %rd4112, %rd4110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2355,%dummy}, %rd18384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2356}, %rd18384;
	}
	shf.r.wrap.b32 	%r2357, %r2356, %r2355, 19;
	shf.r.wrap.b32 	%r2358, %r2355, %r2356, 19;
	mov.b64 	%rd4113, {%r2358, %r2357};
	shf.l.wrap.b32 	%r2359, %r2355, %r2356, 3;
	shf.l.wrap.b32 	%r2360, %r2356, %r2355, 3;
	mov.b64 	%rd4114, {%r2360, %r2359};
	shr.u64 	%rd4115, %rd18384, 6;
	xor.b64  	%rd4116, %rd4113, %rd4115;
	xor.b64  	%rd4117, %rd4116, %rd4114;
	shr.u64 	%rd4118, %rd18368, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2361,%dummy}, %rd18368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2362}, %rd18368;
	}
	shf.r.wrap.b32 	%r2363, %r2362, %r2361, 1;
	shf.r.wrap.b32 	%r2364, %r2361, %r2362, 1;
	mov.b64 	%rd4119, {%r2364, %r2363};
	xor.b64  	%rd4120, %rd4119, %rd4118;
	shf.r.wrap.b32 	%r2365, %r2362, %r2361, 8;
	shf.r.wrap.b32 	%r2366, %r2361, %r2362, 8;
	mov.b64 	%rd4121, {%r2366, %r2365};
	xor.b64  	%rd4122, %rd4120, %rd4121;
	add.s64 	%rd4123, %rd18379, %rd18369;
	add.s64 	%rd4124, %rd4123, %rd4117;
	add.s64 	%rd18369, %rd4124, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd18385;
	}
	shf.r.wrap.b32 	%r2369, %r2368, %r2367, 19;
	shf.r.wrap.b32 	%r2370, %r2367, %r2368, 19;
	mov.b64 	%rd4125, {%r2370, %r2369};
	shf.l.wrap.b32 	%r2371, %r2367, %r2368, 3;
	shf.l.wrap.b32 	%r2372, %r2368, %r2367, 3;
	mov.b64 	%rd4126, {%r2372, %r2371};
	shr.u64 	%rd4127, %rd18385, 6;
	xor.b64  	%rd4128, %rd4125, %rd4127;
	xor.b64  	%rd4129, %rd4128, %rd4126;
	shr.u64 	%rd4130, %rd18367, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd18367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd18367;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 1;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 1;
	mov.b64 	%rd4131, {%r2376, %r2375};
	xor.b64  	%rd4132, %rd4131, %rd4130;
	shf.r.wrap.b32 	%r2377, %r2374, %r2373, 8;
	shf.r.wrap.b32 	%r2378, %r2373, %r2374, 8;
	mov.b64 	%rd4133, {%r2378, %r2377};
	xor.b64  	%rd4134, %rd4132, %rd4133;
	add.s64 	%rd4135, %rd18380, %rd18368;
	add.s64 	%rd4136, %rd4135, %rd4129;
	add.s64 	%rd18368, %rd4136, %rd4134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2380}, %rd18369;
	}
	shf.r.wrap.b32 	%r2381, %r2380, %r2379, 19;
	shf.r.wrap.b32 	%r2382, %r2379, %r2380, 19;
	mov.b64 	%rd4137, {%r2382, %r2381};
	shf.l.wrap.b32 	%r2383, %r2379, %r2380, 3;
	shf.l.wrap.b32 	%r2384, %r2380, %r2379, 3;
	mov.b64 	%rd4138, {%r2384, %r2383};
	shr.u64 	%rd4139, %rd18369, 6;
	xor.b64  	%rd4140, %rd4137, %rd4139;
	xor.b64  	%rd4141, %rd4140, %rd4138;
	shr.u64 	%rd4142, %rd18366, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd18366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd18366;
	}
	shf.r.wrap.b32 	%r2387, %r2386, %r2385, 1;
	shf.r.wrap.b32 	%r2388, %r2385, %r2386, 1;
	mov.b64 	%rd4143, {%r2388, %r2387};
	xor.b64  	%rd4144, %rd4143, %rd4142;
	shf.r.wrap.b32 	%r2389, %r2386, %r2385, 8;
	shf.r.wrap.b32 	%r2390, %r2385, %r2386, 8;
	mov.b64 	%rd4145, {%r2390, %r2389};
	xor.b64  	%rd4146, %rd4144, %rd4145;
	add.s64 	%rd4147, %rd18381, %rd18367;
	add.s64 	%rd4148, %rd4147, %rd4141;
	add.s64 	%rd18367, %rd4148, %rd4146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2391,%dummy}, %rd18368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2392}, %rd18368;
	}
	shf.r.wrap.b32 	%r2393, %r2392, %r2391, 19;
	shf.r.wrap.b32 	%r2394, %r2391, %r2392, 19;
	mov.b64 	%rd4149, {%r2394, %r2393};
	shf.l.wrap.b32 	%r2395, %r2391, %r2392, 3;
	shf.l.wrap.b32 	%r2396, %r2392, %r2391, 3;
	mov.b64 	%rd4150, {%r2396, %r2395};
	shr.u64 	%rd4151, %rd18368, 6;
	xor.b64  	%rd4152, %rd4149, %rd4151;
	xor.b64  	%rd4153, %rd4152, %rd4150;
	shr.u64 	%rd4154, %rd18365, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2398}, %rd18365;
	}
	shf.r.wrap.b32 	%r2399, %r2398, %r2397, 1;
	shf.r.wrap.b32 	%r2400, %r2397, %r2398, 1;
	mov.b64 	%rd4155, {%r2400, %r2399};
	xor.b64  	%rd4156, %rd4155, %rd4154;
	shf.r.wrap.b32 	%r2401, %r2398, %r2397, 8;
	shf.r.wrap.b32 	%r2402, %r2397, %r2398, 8;
	mov.b64 	%rd4157, {%r2402, %r2401};
	xor.b64  	%rd4158, %rd4156, %rd4157;
	add.s64 	%rd4159, %rd18382, %rd18366;
	add.s64 	%rd4160, %rd4159, %rd4153;
	add.s64 	%rd18366, %rd4160, %rd4158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2403,%dummy}, %rd18367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2404}, %rd18367;
	}
	shf.r.wrap.b32 	%r2405, %r2404, %r2403, 19;
	shf.r.wrap.b32 	%r2406, %r2403, %r2404, 19;
	mov.b64 	%rd4161, {%r2406, %r2405};
	shf.l.wrap.b32 	%r2407, %r2403, %r2404, 3;
	shf.l.wrap.b32 	%r2408, %r2404, %r2403, 3;
	mov.b64 	%rd4162, {%r2408, %r2407};
	shr.u64 	%rd4163, %rd18367, 6;
	xor.b64  	%rd4164, %rd4161, %rd4163;
	xor.b64  	%rd4165, %rd4164, %rd4162;
	shr.u64 	%rd4166, %rd18364, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2409,%dummy}, %rd18364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2410}, %rd18364;
	}
	shf.r.wrap.b32 	%r2411, %r2410, %r2409, 1;
	shf.r.wrap.b32 	%r2412, %r2409, %r2410, 1;
	mov.b64 	%rd4167, {%r2412, %r2411};
	xor.b64  	%rd4168, %rd4167, %rd4166;
	shf.r.wrap.b32 	%r2413, %r2410, %r2409, 8;
	shf.r.wrap.b32 	%r2414, %r2409, %r2410, 8;
	mov.b64 	%rd4169, {%r2414, %r2413};
	xor.b64  	%rd4170, %rd4168, %rd4169;
	add.s64 	%rd4171, %rd18383, %rd18365;
	add.s64 	%rd4172, %rd4171, %rd4165;
	add.s64 	%rd18365, %rd4172, %rd4170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2415,%dummy}, %rd18366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd18366;
	}
	shf.r.wrap.b32 	%r2417, %r2416, %r2415, 19;
	shf.r.wrap.b32 	%r2418, %r2415, %r2416, 19;
	mov.b64 	%rd4173, {%r2418, %r2417};
	shf.l.wrap.b32 	%r2419, %r2415, %r2416, 3;
	shf.l.wrap.b32 	%r2420, %r2416, %r2415, 3;
	mov.b64 	%rd4174, {%r2420, %r2419};
	shr.u64 	%rd4175, %rd18366, 6;
	xor.b64  	%rd4176, %rd4173, %rd4175;
	xor.b64  	%rd4177, %rd4176, %rd4174;
	shr.u64 	%rd4178, %rd18363, 7;
	shf.r.wrap.b32 	%r2421, %r2260, %r2259, 1;
	shf.r.wrap.b32 	%r2422, %r2259, %r2260, 1;
	mov.b64 	%rd4179, {%r2422, %r2421};
	xor.b64  	%rd4180, %rd4179, %rd4178;
	shf.r.wrap.b32 	%r2423, %r2260, %r2259, 8;
	shf.r.wrap.b32 	%r2424, %r2259, %r2260, 8;
	mov.b64 	%rd4181, {%r2424, %r2423};
	xor.b64  	%rd4182, %rd4180, %rd4181;
	add.s64 	%rd4183, %rd18384, %rd18364;
	add.s64 	%rd4184, %rd4183, %rd4177;
	add.s64 	%rd18364, %rd4184, %rd4182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2425,%dummy}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2426}, %rd18365;
	}
	shf.r.wrap.b32 	%r2427, %r2426, %r2425, 19;
	shf.r.wrap.b32 	%r2428, %r2425, %r2426, 19;
	mov.b64 	%rd4185, {%r2428, %r2427};
	shf.l.wrap.b32 	%r2429, %r2425, %r2426, 3;
	shf.l.wrap.b32 	%r2430, %r2426, %r2425, 3;
	mov.b64 	%rd4186, {%r2430, %r2429};
	shr.u64 	%rd4187, %rd18365, 6;
	xor.b64  	%rd4188, %rd4185, %rd4187;
	xor.b64  	%rd4189, %rd4188, %rd4186;
	shr.u64 	%rd4190, %rd18299, 7;
	shf.r.wrap.b32 	%r2431, %r2272, %r2271, 1;
	shf.r.wrap.b32 	%r2432, %r2271, %r2272, 1;
	mov.b64 	%rd4191, {%r2432, %r2431};
	xor.b64  	%rd4192, %rd4191, %rd4190;
	shf.r.wrap.b32 	%r2433, %r2272, %r2271, 8;
	shf.r.wrap.b32 	%r2434, %r2271, %r2272, 8;
	mov.b64 	%rd4193, {%r2434, %r2433};
	xor.b64  	%rd4194, %rd4192, %rd4193;
	add.s64 	%rd4195, %rd18385, %rd18363;
	add.s64 	%rd4196, %rd4195, %rd4189;
	add.s64 	%rd18363, %rd4196, %rd4194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2435,%dummy}, %rd18364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd18364;
	}
	shf.r.wrap.b32 	%r2437, %r2436, %r2435, 19;
	shf.r.wrap.b32 	%r2438, %r2435, %r2436, 19;
	mov.b64 	%rd4197, {%r2438, %r2437};
	shf.l.wrap.b32 	%r2439, %r2435, %r2436, 3;
	shf.l.wrap.b32 	%r2440, %r2436, %r2435, 3;
	mov.b64 	%rd4198, {%r2440, %r2439};
	shr.u64 	%rd4199, %rd18364, 6;
	xor.b64  	%rd4200, %rd4197, %rd4199;
	xor.b64  	%rd4201, %rd4200, %rd4198;
	shf.r.wrap.b32 	%r2441, %r2284, %r2283, 1;
	shf.r.wrap.b32 	%r2442, %r2283, %r2284, 1;
	mov.b64 	%rd4202, {%r2442, %r2441};
	shf.r.wrap.b32 	%r2443, %r2284, %r2283, 8;
	shf.r.wrap.b32 	%r2444, %r2283, %r2284, 8;
	mov.b64 	%rd4203, {%r2444, %r2443};
	shr.u64 	%rd4204, %rd18378, 7;
	xor.b64  	%rd4205, %rd4202, %rd4204;
	xor.b64  	%rd4206, %rd4205, %rd4203;
	add.s64 	%rd4207, %rd18369, %rd18299;
	add.s64 	%rd4208, %rd4207, %rd4201;
	add.s64 	%rd18299, %rd4208, %rd4206;
	mul.wide.s32 	%rd4209, %r12587, 8;
	mov.u64 	%rd4210, k_sha512;
	add.s64 	%rd4211, %rd4210, %rd4209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd18311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd18311;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 18;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 18;
	mov.b64 	%rd4212, {%r2448, %r2447};
	shf.r.wrap.b32 	%r2449, %r2446, %r2445, 14;
	shf.r.wrap.b32 	%r2450, %r2445, %r2446, 14;
	mov.b64 	%rd4213, {%r2450, %r2449};
	xor.b64  	%rd4214, %rd4212, %rd4213;
	shf.l.wrap.b32 	%r2451, %r2445, %r2446, 23;
	shf.l.wrap.b32 	%r2452, %r2446, %r2445, 23;
	mov.b64 	%rd4215, {%r2452, %r2451};
	xor.b64  	%rd4216, %rd4214, %rd4215;
	xor.b64  	%rd4217, %rd18312, %rd18313;
	and.b64  	%rd4218, %rd18311, %rd4217;
	xor.b64  	%rd4219, %rd4218, %rd18313;
	add.s64 	%rd4220, %rd4219, %rd18314;
	add.s64 	%rd4221, %rd4220, %rd18378;
	ld.const.u64 	%rd4222, [%rd4211];
	add.s64 	%rd4223, %rd4221, %rd4222;
	add.s64 	%rd4224, %rd4223, %rd4216;
	add.s64 	%rd4225, %rd4224, %rd18310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd18307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2454,%dummy}, %rd18307;
	}
	shf.l.wrap.b32 	%r2455, %r2454, %r2453, 30;
	shf.l.wrap.b32 	%r2456, %r2453, %r2454, 30;
	mov.b64 	%rd4226, {%r2456, %r2455};
	shf.r.wrap.b32 	%r2457, %r2453, %r2454, 28;
	shf.r.wrap.b32 	%r2458, %r2454, %r2453, 28;
	mov.b64 	%rd4227, {%r2458, %r2457};
	xor.b64  	%rd4228, %rd4226, %rd4227;
	shf.l.wrap.b32 	%r2459, %r2454, %r2453, 25;
	shf.l.wrap.b32 	%r2460, %r2453, %r2454, 25;
	mov.b64 	%rd4229, {%r2460, %r2459};
	xor.b64  	%rd4230, %rd4228, %rd4229;
	xor.b64  	%rd4231, %rd18307, %rd18308;
	and.b64  	%rd4232, %rd4231, %rd18309;
	and.b64  	%rd4233, %rd18307, %rd18308;
	or.b64  	%rd4234, %rd4232, %rd4233;
	add.s64 	%rd4235, %rd4224, %rd4234;
	add.s64 	%rd4236, %rd4235, %rd4230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2461,%dummy}, %rd4225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2462}, %rd4225;
	}
	shf.r.wrap.b32 	%r2463, %r2462, %r2461, 14;
	shf.r.wrap.b32 	%r2464, %r2461, %r2462, 14;
	mov.b64 	%rd4237, {%r2464, %r2463};
	shf.r.wrap.b32 	%r2465, %r2462, %r2461, 18;
	shf.r.wrap.b32 	%r2466, %r2461, %r2462, 18;
	mov.b64 	%rd4238, {%r2466, %r2465};
	xor.b64  	%rd4239, %rd4238, %rd4237;
	shf.l.wrap.b32 	%r2467, %r2461, %r2462, 23;
	shf.l.wrap.b32 	%r2468, %r2462, %r2461, 23;
	mov.b64 	%rd4240, {%r2468, %r2467};
	xor.b64  	%rd4241, %rd4239, %rd4240;
	xor.b64  	%rd4242, %rd18311, %rd18312;
	and.b64  	%rd4243, %rd4225, %rd4242;
	xor.b64  	%rd4244, %rd4243, %rd18312;
	add.s64 	%rd4245, %rd18379, %rd18313;
	ld.const.u64 	%rd4246, [%rd4211+8];
	add.s64 	%rd4247, %rd4245, %rd4246;
	add.s64 	%rd4248, %rd4247, %rd4244;
	add.s64 	%rd4249, %rd4248, %rd4241;
	add.s64 	%rd4250, %rd4249, %rd18309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2469,%dummy}, %rd4236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2470}, %rd4236;
	}
	shf.r.wrap.b32 	%r2471, %r2470, %r2469, 28;
	shf.r.wrap.b32 	%r2472, %r2469, %r2470, 28;
	mov.b64 	%rd4251, {%r2472, %r2471};
	shf.l.wrap.b32 	%r2473, %r2469, %r2470, 30;
	shf.l.wrap.b32 	%r2474, %r2470, %r2469, 30;
	mov.b64 	%rd4252, {%r2474, %r2473};
	xor.b64  	%rd4253, %rd4252, %rd4251;
	shf.l.wrap.b32 	%r2475, %r2469, %r2470, 25;
	shf.l.wrap.b32 	%r2476, %r2470, %r2469, 25;
	mov.b64 	%rd4254, {%r2476, %r2475};
	xor.b64  	%rd4255, %rd4253, %rd4254;
	and.b64  	%rd4256, %rd4236, %rd18307;
	xor.b64  	%rd4257, %rd4236, %rd18307;
	and.b64  	%rd4258, %rd4257, %rd18308;
	or.b64  	%rd4259, %rd4258, %rd4256;
	add.s64 	%rd4260, %rd4249, %rd4259;
	add.s64 	%rd4261, %rd4260, %rd4255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd4250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd4250;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 14;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 14;
	mov.b64 	%rd4262, {%r2480, %r2479};
	shf.r.wrap.b32 	%r2481, %r2478, %r2477, 18;
	shf.r.wrap.b32 	%r2482, %r2477, %r2478, 18;
	mov.b64 	%rd4263, {%r2482, %r2481};
	xor.b64  	%rd4264, %rd4263, %rd4262;
	shf.l.wrap.b32 	%r2483, %r2477, %r2478, 23;
	shf.l.wrap.b32 	%r2484, %r2478, %r2477, 23;
	mov.b64 	%rd4265, {%r2484, %r2483};
	xor.b64  	%rd4266, %rd4264, %rd4265;
	xor.b64  	%rd4267, %rd4225, %rd18311;
	and.b64  	%rd4268, %rd4250, %rd4267;
	xor.b64  	%rd4269, %rd4268, %rd18311;
	add.s64 	%rd4270, %rd18380, %rd18312;
	ld.const.u64 	%rd4271, [%rd4211+16];
	add.s64 	%rd4272, %rd4270, %rd4271;
	add.s64 	%rd4273, %rd4272, %rd4269;
	add.s64 	%rd4274, %rd4273, %rd4266;
	add.s64 	%rd4275, %rd4274, %rd18308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2485,%dummy}, %rd4261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2486}, %rd4261;
	}
	shf.r.wrap.b32 	%r2487, %r2486, %r2485, 28;
	shf.r.wrap.b32 	%r2488, %r2485, %r2486, 28;
	mov.b64 	%rd4276, {%r2488, %r2487};
	shf.l.wrap.b32 	%r2489, %r2485, %r2486, 30;
	shf.l.wrap.b32 	%r2490, %r2486, %r2485, 30;
	mov.b64 	%rd4277, {%r2490, %r2489};
	xor.b64  	%rd4278, %rd4277, %rd4276;
	shf.l.wrap.b32 	%r2491, %r2485, %r2486, 25;
	shf.l.wrap.b32 	%r2492, %r2486, %r2485, 25;
	mov.b64 	%rd4279, {%r2492, %r2491};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	and.b64  	%rd4281, %rd4261, %rd4236;
	xor.b64  	%rd4282, %rd4261, %rd4236;
	and.b64  	%rd4283, %rd4282, %rd18307;
	or.b64  	%rd4284, %rd4283, %rd4281;
	add.s64 	%rd4285, %rd4274, %rd4284;
	add.s64 	%rd4286, %rd4285, %rd4280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2493,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2494}, %rd4275;
	}
	shf.r.wrap.b32 	%r2495, %r2494, %r2493, 14;
	shf.r.wrap.b32 	%r2496, %r2493, %r2494, 14;
	mov.b64 	%rd4287, {%r2496, %r2495};
	shf.r.wrap.b32 	%r2497, %r2494, %r2493, 18;
	shf.r.wrap.b32 	%r2498, %r2493, %r2494, 18;
	mov.b64 	%rd4288, {%r2498, %r2497};
	xor.b64  	%rd4289, %rd4288, %rd4287;
	shf.l.wrap.b32 	%r2499, %r2493, %r2494, 23;
	shf.l.wrap.b32 	%r2500, %r2494, %r2493, 23;
	mov.b64 	%rd4290, {%r2500, %r2499};
	xor.b64  	%rd4291, %rd4289, %rd4290;
	xor.b64  	%rd4292, %rd4250, %rd4225;
	and.b64  	%rd4293, %rd4275, %rd4292;
	xor.b64  	%rd4294, %rd4293, %rd4225;
	add.s64 	%rd4295, %rd18381, %rd18311;
	ld.const.u64 	%rd4296, [%rd4211+24];
	add.s64 	%rd4297, %rd4295, %rd4296;
	add.s64 	%rd4298, %rd4297, %rd4294;
	add.s64 	%rd4299, %rd4298, %rd4291;
	add.s64 	%rd4300, %rd4299, %rd18307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd4286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd4286;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 28;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 28;
	mov.b64 	%rd4301, {%r2504, %r2503};
	shf.l.wrap.b32 	%r2505, %r2501, %r2502, 30;
	shf.l.wrap.b32 	%r2506, %r2502, %r2501, 30;
	mov.b64 	%rd4302, {%r2506, %r2505};
	xor.b64  	%rd4303, %rd4302, %rd4301;
	shf.l.wrap.b32 	%r2507, %r2501, %r2502, 25;
	shf.l.wrap.b32 	%r2508, %r2502, %r2501, 25;
	mov.b64 	%rd4304, {%r2508, %r2507};
	xor.b64  	%rd4305, %rd4303, %rd4304;
	and.b64  	%rd4306, %rd4286, %rd4261;
	xor.b64  	%rd4307, %rd4286, %rd4261;
	and.b64  	%rd4308, %rd4307, %rd4236;
	or.b64  	%rd4309, %rd4308, %rd4306;
	add.s64 	%rd4310, %rd4299, %rd4309;
	add.s64 	%rd4311, %rd4310, %rd4305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd4300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2510}, %rd4300;
	}
	shf.r.wrap.b32 	%r2511, %r2510, %r2509, 14;
	shf.r.wrap.b32 	%r2512, %r2509, %r2510, 14;
	mov.b64 	%rd4312, {%r2512, %r2511};
	shf.r.wrap.b32 	%r2513, %r2510, %r2509, 18;
	shf.r.wrap.b32 	%r2514, %r2509, %r2510, 18;
	mov.b64 	%rd4313, {%r2514, %r2513};
	xor.b64  	%rd4314, %rd4313, %rd4312;
	shf.l.wrap.b32 	%r2515, %r2509, %r2510, 23;
	shf.l.wrap.b32 	%r2516, %r2510, %r2509, 23;
	mov.b64 	%rd4315, {%r2516, %r2515};
	xor.b64  	%rd4316, %rd4314, %rd4315;
	xor.b64  	%rd4317, %rd4275, %rd4250;
	and.b64  	%rd4318, %rd4300, %rd4317;
	xor.b64  	%rd4319, %rd4318, %rd4250;
	add.s64 	%rd4320, %rd4225, %rd18382;
	ld.const.u64 	%rd4321, [%rd4211+32];
	add.s64 	%rd4322, %rd4320, %rd4321;
	add.s64 	%rd4323, %rd4322, %rd4319;
	add.s64 	%rd4324, %rd4323, %rd4316;
	add.s64 	%rd4325, %rd4324, %rd4236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2517,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2518}, %rd4311;
	}
	shf.r.wrap.b32 	%r2519, %r2518, %r2517, 28;
	shf.r.wrap.b32 	%r2520, %r2517, %r2518, 28;
	mov.b64 	%rd4326, {%r2520, %r2519};
	shf.l.wrap.b32 	%r2521, %r2517, %r2518, 30;
	shf.l.wrap.b32 	%r2522, %r2518, %r2517, 30;
	mov.b64 	%rd4327, {%r2522, %r2521};
	xor.b64  	%rd4328, %rd4327, %rd4326;
	shf.l.wrap.b32 	%r2523, %r2517, %r2518, 25;
	shf.l.wrap.b32 	%r2524, %r2518, %r2517, 25;
	mov.b64 	%rd4329, {%r2524, %r2523};
	xor.b64  	%rd4330, %rd4328, %rd4329;
	and.b64  	%rd4331, %rd4311, %rd4286;
	xor.b64  	%rd4332, %rd4311, %rd4286;
	and.b64  	%rd4333, %rd4332, %rd4261;
	or.b64  	%rd4334, %rd4333, %rd4331;
	add.s64 	%rd4335, %rd4324, %rd4334;
	add.s64 	%rd4336, %rd4335, %rd4330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2525,%dummy}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2526}, %rd4325;
	}
	shf.r.wrap.b32 	%r2527, %r2526, %r2525, 14;
	shf.r.wrap.b32 	%r2528, %r2525, %r2526, 14;
	mov.b64 	%rd4337, {%r2528, %r2527};
	shf.r.wrap.b32 	%r2529, %r2526, %r2525, 18;
	shf.r.wrap.b32 	%r2530, %r2525, %r2526, 18;
	mov.b64 	%rd4338, {%r2530, %r2529};
	xor.b64  	%rd4339, %rd4338, %rd4337;
	shf.l.wrap.b32 	%r2531, %r2525, %r2526, 23;
	shf.l.wrap.b32 	%r2532, %r2526, %r2525, 23;
	mov.b64 	%rd4340, {%r2532, %r2531};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	xor.b64  	%rd4342, %rd4300, %rd4275;
	and.b64  	%rd4343, %rd4325, %rd4342;
	xor.b64  	%rd4344, %rd4343, %rd4275;
	add.s64 	%rd4345, %rd4250, %rd18383;
	ld.const.u64 	%rd4346, [%rd4211+40];
	add.s64 	%rd4347, %rd4345, %rd4346;
	add.s64 	%rd4348, %rd4347, %rd4344;
	add.s64 	%rd4349, %rd4348, %rd4341;
	add.s64 	%rd4350, %rd4349, %rd4261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2533,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2534}, %rd4336;
	}
	shf.r.wrap.b32 	%r2535, %r2534, %r2533, 28;
	shf.r.wrap.b32 	%r2536, %r2533, %r2534, 28;
	mov.b64 	%rd4351, {%r2536, %r2535};
	shf.l.wrap.b32 	%r2537, %r2533, %r2534, 30;
	shf.l.wrap.b32 	%r2538, %r2534, %r2533, 30;
	mov.b64 	%rd4352, {%r2538, %r2537};
	xor.b64  	%rd4353, %rd4352, %rd4351;
	shf.l.wrap.b32 	%r2539, %r2533, %r2534, 25;
	shf.l.wrap.b32 	%r2540, %r2534, %r2533, 25;
	mov.b64 	%rd4354, {%r2540, %r2539};
	xor.b64  	%rd4355, %rd4353, %rd4354;
	and.b64  	%rd4356, %rd4336, %rd4311;
	xor.b64  	%rd4357, %rd4336, %rd4311;
	and.b64  	%rd4358, %rd4357, %rd4286;
	or.b64  	%rd4359, %rd4358, %rd4356;
	add.s64 	%rd4360, %rd4349, %rd4359;
	add.s64 	%rd4361, %rd4360, %rd4355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2541,%dummy}, %rd4350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2542}, %rd4350;
	}
	shf.r.wrap.b32 	%r2543, %r2542, %r2541, 14;
	shf.r.wrap.b32 	%r2544, %r2541, %r2542, 14;
	mov.b64 	%rd4362, {%r2544, %r2543};
	shf.r.wrap.b32 	%r2545, %r2542, %r2541, 18;
	shf.r.wrap.b32 	%r2546, %r2541, %r2542, 18;
	mov.b64 	%rd4363, {%r2546, %r2545};
	xor.b64  	%rd4364, %rd4363, %rd4362;
	shf.l.wrap.b32 	%r2547, %r2541, %r2542, 23;
	shf.l.wrap.b32 	%r2548, %r2542, %r2541, 23;
	mov.b64 	%rd4365, {%r2548, %r2547};
	xor.b64  	%rd4366, %rd4364, %rd4365;
	xor.b64  	%rd4367, %rd4325, %rd4300;
	and.b64  	%rd4368, %rd4350, %rd4367;
	xor.b64  	%rd4369, %rd4368, %rd4300;
	add.s64 	%rd4370, %rd4275, %rd18384;
	ld.const.u64 	%rd4371, [%rd4211+48];
	add.s64 	%rd4372, %rd4370, %rd4371;
	add.s64 	%rd4373, %rd4372, %rd4369;
	add.s64 	%rd4374, %rd4373, %rd4366;
	add.s64 	%rd4375, %rd4374, %rd4286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2549,%dummy}, %rd4361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2550}, %rd4361;
	}
	shf.r.wrap.b32 	%r2551, %r2550, %r2549, 28;
	shf.r.wrap.b32 	%r2552, %r2549, %r2550, 28;
	mov.b64 	%rd4376, {%r2552, %r2551};
	shf.l.wrap.b32 	%r2553, %r2549, %r2550, 30;
	shf.l.wrap.b32 	%r2554, %r2550, %r2549, 30;
	mov.b64 	%rd4377, {%r2554, %r2553};
	xor.b64  	%rd4378, %rd4377, %rd4376;
	shf.l.wrap.b32 	%r2555, %r2549, %r2550, 25;
	shf.l.wrap.b32 	%r2556, %r2550, %r2549, 25;
	mov.b64 	%rd4379, {%r2556, %r2555};
	xor.b64  	%rd4380, %rd4378, %rd4379;
	and.b64  	%rd4381, %rd4361, %rd4336;
	xor.b64  	%rd4382, %rd4361, %rd4336;
	and.b64  	%rd4383, %rd4382, %rd4311;
	or.b64  	%rd4384, %rd4383, %rd4381;
	add.s64 	%rd4385, %rd4374, %rd4384;
	add.s64 	%rd4386, %rd4385, %rd4380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd4375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2558}, %rd4375;
	}
	shf.r.wrap.b32 	%r2559, %r2558, %r2557, 14;
	shf.r.wrap.b32 	%r2560, %r2557, %r2558, 14;
	mov.b64 	%rd4387, {%r2560, %r2559};
	shf.r.wrap.b32 	%r2561, %r2558, %r2557, 18;
	shf.r.wrap.b32 	%r2562, %r2557, %r2558, 18;
	mov.b64 	%rd4388, {%r2562, %r2561};
	xor.b64  	%rd4389, %rd4388, %rd4387;
	shf.l.wrap.b32 	%r2563, %r2557, %r2558, 23;
	shf.l.wrap.b32 	%r2564, %r2558, %r2557, 23;
	mov.b64 	%rd4390, {%r2564, %r2563};
	xor.b64  	%rd4391, %rd4389, %rd4390;
	xor.b64  	%rd4392, %rd4350, %rd4325;
	and.b64  	%rd4393, %rd4375, %rd4392;
	xor.b64  	%rd4394, %rd4393, %rd4325;
	add.s64 	%rd4395, %rd4300, %rd18385;
	ld.const.u64 	%rd4396, [%rd4211+56];
	add.s64 	%rd4397, %rd4395, %rd4396;
	add.s64 	%rd4398, %rd4397, %rd4394;
	add.s64 	%rd4399, %rd4398, %rd4391;
	add.s64 	%rd4400, %rd4399, %rd4311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd4386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd4386;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 28;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 28;
	mov.b64 	%rd4401, {%r2568, %r2567};
	shf.l.wrap.b32 	%r2569, %r2565, %r2566, 30;
	shf.l.wrap.b32 	%r2570, %r2566, %r2565, 30;
	mov.b64 	%rd4402, {%r2570, %r2569};
	xor.b64  	%rd4403, %rd4402, %rd4401;
	shf.l.wrap.b32 	%r2571, %r2565, %r2566, 25;
	shf.l.wrap.b32 	%r2572, %r2566, %r2565, 25;
	mov.b64 	%rd4404, {%r2572, %r2571};
	xor.b64  	%rd4405, %rd4403, %rd4404;
	and.b64  	%rd4406, %rd4386, %rd4361;
	xor.b64  	%rd4407, %rd4386, %rd4361;
	and.b64  	%rd4408, %rd4407, %rd4336;
	or.b64  	%rd4409, %rd4408, %rd4406;
	add.s64 	%rd4410, %rd4399, %rd4409;
	add.s64 	%rd4411, %rd4410, %rd4405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2573,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2574}, %rd4400;
	}
	shf.r.wrap.b32 	%r2575, %r2574, %r2573, 14;
	shf.r.wrap.b32 	%r2576, %r2573, %r2574, 14;
	mov.b64 	%rd4412, {%r2576, %r2575};
	shf.r.wrap.b32 	%r2577, %r2574, %r2573, 18;
	shf.r.wrap.b32 	%r2578, %r2573, %r2574, 18;
	mov.b64 	%rd4413, {%r2578, %r2577};
	xor.b64  	%rd4414, %rd4413, %rd4412;
	shf.l.wrap.b32 	%r2579, %r2573, %r2574, 23;
	shf.l.wrap.b32 	%r2580, %r2574, %r2573, 23;
	mov.b64 	%rd4415, {%r2580, %r2579};
	xor.b64  	%rd4416, %rd4414, %rd4415;
	xor.b64  	%rd4417, %rd4375, %rd4350;
	and.b64  	%rd4418, %rd4400, %rd4417;
	xor.b64  	%rd4419, %rd4418, %rd4350;
	add.s64 	%rd4420, %rd4325, %rd18369;
	ld.const.u64 	%rd4421, [%rd4211+64];
	add.s64 	%rd4422, %rd4420, %rd4421;
	add.s64 	%rd4423, %rd4422, %rd4419;
	add.s64 	%rd4424, %rd4423, %rd4416;
	add.s64 	%rd4425, %rd4424, %rd4336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2581,%dummy}, %rd4411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2582}, %rd4411;
	}
	shf.r.wrap.b32 	%r2583, %r2582, %r2581, 28;
	shf.r.wrap.b32 	%r2584, %r2581, %r2582, 28;
	mov.b64 	%rd4426, {%r2584, %r2583};
	shf.l.wrap.b32 	%r2585, %r2581, %r2582, 30;
	shf.l.wrap.b32 	%r2586, %r2582, %r2581, 30;
	mov.b64 	%rd4427, {%r2586, %r2585};
	xor.b64  	%rd4428, %rd4427, %rd4426;
	shf.l.wrap.b32 	%r2587, %r2581, %r2582, 25;
	shf.l.wrap.b32 	%r2588, %r2582, %r2581, 25;
	mov.b64 	%rd4429, {%r2588, %r2587};
	xor.b64  	%rd4430, %rd4428, %rd4429;
	and.b64  	%rd4431, %rd4411, %rd4386;
	xor.b64  	%rd4432, %rd4411, %rd4386;
	and.b64  	%rd4433, %rd4432, %rd4361;
	or.b64  	%rd4434, %rd4433, %rd4431;
	add.s64 	%rd4435, %rd4424, %rd4434;
	add.s64 	%rd4436, %rd4435, %rd4430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2589,%dummy}, %rd4425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2590}, %rd4425;
	}
	shf.r.wrap.b32 	%r2591, %r2590, %r2589, 14;
	shf.r.wrap.b32 	%r2592, %r2589, %r2590, 14;
	mov.b64 	%rd4437, {%r2592, %r2591};
	shf.r.wrap.b32 	%r2593, %r2590, %r2589, 18;
	shf.r.wrap.b32 	%r2594, %r2589, %r2590, 18;
	mov.b64 	%rd4438, {%r2594, %r2593};
	xor.b64  	%rd4439, %rd4438, %rd4437;
	shf.l.wrap.b32 	%r2595, %r2589, %r2590, 23;
	shf.l.wrap.b32 	%r2596, %r2590, %r2589, 23;
	mov.b64 	%rd4440, {%r2596, %r2595};
	xor.b64  	%rd4441, %rd4439, %rd4440;
	xor.b64  	%rd4442, %rd4400, %rd4375;
	and.b64  	%rd4443, %rd4425, %rd4442;
	xor.b64  	%rd4444, %rd4443, %rd4375;
	add.s64 	%rd4445, %rd4350, %rd18368;
	ld.const.u64 	%rd4446, [%rd4211+72];
	add.s64 	%rd4447, %rd4445, %rd4446;
	add.s64 	%rd4448, %rd4447, %rd4444;
	add.s64 	%rd4449, %rd4448, %rd4441;
	add.s64 	%rd4450, %rd4449, %rd4361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2597,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2598}, %rd4436;
	}
	shf.r.wrap.b32 	%r2599, %r2598, %r2597, 28;
	shf.r.wrap.b32 	%r2600, %r2597, %r2598, 28;
	mov.b64 	%rd4451, {%r2600, %r2599};
	shf.l.wrap.b32 	%r2601, %r2597, %r2598, 30;
	shf.l.wrap.b32 	%r2602, %r2598, %r2597, 30;
	mov.b64 	%rd4452, {%r2602, %r2601};
	xor.b64  	%rd4453, %rd4452, %rd4451;
	shf.l.wrap.b32 	%r2603, %r2597, %r2598, 25;
	shf.l.wrap.b32 	%r2604, %r2598, %r2597, 25;
	mov.b64 	%rd4454, {%r2604, %r2603};
	xor.b64  	%rd4455, %rd4453, %rd4454;
	and.b64  	%rd4456, %rd4436, %rd4411;
	xor.b64  	%rd4457, %rd4436, %rd4411;
	and.b64  	%rd4458, %rd4457, %rd4386;
	or.b64  	%rd4459, %rd4458, %rd4456;
	add.s64 	%rd4460, %rd4449, %rd4459;
	add.s64 	%rd4461, %rd4460, %rd4455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2605,%dummy}, %rd4450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2606}, %rd4450;
	}
	shf.r.wrap.b32 	%r2607, %r2606, %r2605, 14;
	shf.r.wrap.b32 	%r2608, %r2605, %r2606, 14;
	mov.b64 	%rd4462, {%r2608, %r2607};
	shf.r.wrap.b32 	%r2609, %r2606, %r2605, 18;
	shf.r.wrap.b32 	%r2610, %r2605, %r2606, 18;
	mov.b64 	%rd4463, {%r2610, %r2609};
	xor.b64  	%rd4464, %rd4463, %rd4462;
	shf.l.wrap.b32 	%r2611, %r2605, %r2606, 23;
	shf.l.wrap.b32 	%r2612, %r2606, %r2605, 23;
	mov.b64 	%rd4465, {%r2612, %r2611};
	xor.b64  	%rd4466, %rd4464, %rd4465;
	xor.b64  	%rd4467, %rd4425, %rd4400;
	and.b64  	%rd4468, %rd4450, %rd4467;
	xor.b64  	%rd4469, %rd4468, %rd4400;
	add.s64 	%rd4470, %rd4375, %rd18367;
	ld.const.u64 	%rd4471, [%rd4211+80];
	add.s64 	%rd4472, %rd4470, %rd4471;
	add.s64 	%rd4473, %rd4472, %rd4469;
	add.s64 	%rd4474, %rd4473, %rd4466;
	add.s64 	%rd4475, %rd4474, %rd4386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd4461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd4461;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 28;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 28;
	mov.b64 	%rd4476, {%r2616, %r2615};
	shf.l.wrap.b32 	%r2617, %r2613, %r2614, 30;
	shf.l.wrap.b32 	%r2618, %r2614, %r2613, 30;
	mov.b64 	%rd4477, {%r2618, %r2617};
	xor.b64  	%rd4478, %rd4477, %rd4476;
	shf.l.wrap.b32 	%r2619, %r2613, %r2614, 25;
	shf.l.wrap.b32 	%r2620, %r2614, %r2613, 25;
	mov.b64 	%rd4479, {%r2620, %r2619};
	xor.b64  	%rd4480, %rd4478, %rd4479;
	and.b64  	%rd4481, %rd4461, %rd4436;
	xor.b64  	%rd4482, %rd4461, %rd4436;
	and.b64  	%rd4483, %rd4482, %rd4411;
	or.b64  	%rd4484, %rd4483, %rd4481;
	add.s64 	%rd4485, %rd4474, %rd4484;
	add.s64 	%rd4486, %rd4485, %rd4480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd4475;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 14;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 14;
	mov.b64 	%rd4487, {%r2624, %r2623};
	shf.r.wrap.b32 	%r2625, %r2622, %r2621, 18;
	shf.r.wrap.b32 	%r2626, %r2621, %r2622, 18;
	mov.b64 	%rd4488, {%r2626, %r2625};
	xor.b64  	%rd4489, %rd4488, %rd4487;
	shf.l.wrap.b32 	%r2627, %r2621, %r2622, 23;
	shf.l.wrap.b32 	%r2628, %r2622, %r2621, 23;
	mov.b64 	%rd4490, {%r2628, %r2627};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	xor.b64  	%rd4492, %rd4450, %rd4425;
	and.b64  	%rd4493, %rd4475, %rd4492;
	xor.b64  	%rd4494, %rd4493, %rd4425;
	add.s64 	%rd4495, %rd4400, %rd18366;
	ld.const.u64 	%rd4496, [%rd4211+88];
	add.s64 	%rd4497, %rd4495, %rd4496;
	add.s64 	%rd4498, %rd4497, %rd4494;
	add.s64 	%rd4499, %rd4498, %rd4491;
	add.s64 	%rd4500, %rd4499, %rd4411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2629,%dummy}, %rd4486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2630}, %rd4486;
	}
	shf.r.wrap.b32 	%r2631, %r2630, %r2629, 28;
	shf.r.wrap.b32 	%r2632, %r2629, %r2630, 28;
	mov.b64 	%rd4501, {%r2632, %r2631};
	shf.l.wrap.b32 	%r2633, %r2629, %r2630, 30;
	shf.l.wrap.b32 	%r2634, %r2630, %r2629, 30;
	mov.b64 	%rd4502, {%r2634, %r2633};
	xor.b64  	%rd4503, %rd4502, %rd4501;
	shf.l.wrap.b32 	%r2635, %r2629, %r2630, 25;
	shf.l.wrap.b32 	%r2636, %r2630, %r2629, 25;
	mov.b64 	%rd4504, {%r2636, %r2635};
	xor.b64  	%rd4505, %rd4503, %rd4504;
	and.b64  	%rd4506, %rd4486, %rd4461;
	xor.b64  	%rd4507, %rd4486, %rd4461;
	and.b64  	%rd4508, %rd4507, %rd4436;
	or.b64  	%rd4509, %rd4508, %rd4506;
	add.s64 	%rd4510, %rd4499, %rd4509;
	add.s64 	%rd4511, %rd4510, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2637,%dummy}, %rd4500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2638}, %rd4500;
	}
	shf.r.wrap.b32 	%r2639, %r2638, %r2637, 14;
	shf.r.wrap.b32 	%r2640, %r2637, %r2638, 14;
	mov.b64 	%rd4512, {%r2640, %r2639};
	shf.r.wrap.b32 	%r2641, %r2638, %r2637, 18;
	shf.r.wrap.b32 	%r2642, %r2637, %r2638, 18;
	mov.b64 	%rd4513, {%r2642, %r2641};
	xor.b64  	%rd4514, %rd4513, %rd4512;
	shf.l.wrap.b32 	%r2643, %r2637, %r2638, 23;
	shf.l.wrap.b32 	%r2644, %r2638, %r2637, 23;
	mov.b64 	%rd4515, {%r2644, %r2643};
	xor.b64  	%rd4516, %rd4514, %rd4515;
	xor.b64  	%rd4517, %rd4475, %rd4450;
	and.b64  	%rd4518, %rd4500, %rd4517;
	xor.b64  	%rd4519, %rd4518, %rd4450;
	add.s64 	%rd4520, %rd4425, %rd18365;
	ld.const.u64 	%rd4521, [%rd4211+96];
	add.s64 	%rd4522, %rd4520, %rd4521;
	add.s64 	%rd4523, %rd4522, %rd4519;
	add.s64 	%rd4524, %rd4523, %rd4516;
	add.s64 	%rd18314, %rd4524, %rd4436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2645,%dummy}, %rd4511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2646}, %rd4511;
	}
	shf.r.wrap.b32 	%r2647, %r2646, %r2645, 28;
	shf.r.wrap.b32 	%r2648, %r2645, %r2646, 28;
	mov.b64 	%rd4525, {%r2648, %r2647};
	shf.l.wrap.b32 	%r2649, %r2645, %r2646, 30;
	shf.l.wrap.b32 	%r2650, %r2646, %r2645, 30;
	mov.b64 	%rd4526, {%r2650, %r2649};
	xor.b64  	%rd4527, %rd4526, %rd4525;
	shf.l.wrap.b32 	%r2651, %r2645, %r2646, 25;
	shf.l.wrap.b32 	%r2652, %r2646, %r2645, 25;
	mov.b64 	%rd4528, {%r2652, %r2651};
	xor.b64  	%rd4529, %rd4527, %rd4528;
	and.b64  	%rd4530, %rd4511, %rd4486;
	xor.b64  	%rd4531, %rd4511, %rd4486;
	and.b64  	%rd4532, %rd4531, %rd4461;
	or.b64  	%rd4533, %rd4532, %rd4530;
	add.s64 	%rd4534, %rd4524, %rd4533;
	add.s64 	%rd18310, %rd4534, %rd4529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2653,%dummy}, %rd18314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2654}, %rd18314;
	}
	shf.r.wrap.b32 	%r2655, %r2654, %r2653, 14;
	shf.r.wrap.b32 	%r2656, %r2653, %r2654, 14;
	mov.b64 	%rd4535, {%r2656, %r2655};
	shf.r.wrap.b32 	%r2657, %r2654, %r2653, 18;
	shf.r.wrap.b32 	%r2658, %r2653, %r2654, 18;
	mov.b64 	%rd4536, {%r2658, %r2657};
	xor.b64  	%rd4537, %rd4536, %rd4535;
	shf.l.wrap.b32 	%r2659, %r2653, %r2654, 23;
	shf.l.wrap.b32 	%r2660, %r2654, %r2653, 23;
	mov.b64 	%rd4538, {%r2660, %r2659};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	xor.b64  	%rd4540, %rd4500, %rd4475;
	and.b64  	%rd4541, %rd18314, %rd4540;
	xor.b64  	%rd4542, %rd4541, %rd4475;
	add.s64 	%rd4543, %rd4450, %rd18364;
	ld.const.u64 	%rd4544, [%rd4211+104];
	add.s64 	%rd4545, %rd4543, %rd4544;
	add.s64 	%rd4546, %rd4545, %rd4542;
	add.s64 	%rd4547, %rd4546, %rd4539;
	add.s64 	%rd18313, %rd4547, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2661,%dummy}, %rd18310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2662}, %rd18310;
	}
	shf.r.wrap.b32 	%r2663, %r2662, %r2661, 28;
	shf.r.wrap.b32 	%r2664, %r2661, %r2662, 28;
	mov.b64 	%rd4548, {%r2664, %r2663};
	shf.l.wrap.b32 	%r2665, %r2661, %r2662, 30;
	shf.l.wrap.b32 	%r2666, %r2662, %r2661, 30;
	mov.b64 	%rd4549, {%r2666, %r2665};
	xor.b64  	%rd4550, %rd4549, %rd4548;
	shf.l.wrap.b32 	%r2667, %r2661, %r2662, 25;
	shf.l.wrap.b32 	%r2668, %r2662, %r2661, 25;
	mov.b64 	%rd4551, {%r2668, %r2667};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	and.b64  	%rd4553, %rd18310, %rd4511;
	xor.b64  	%rd4554, %rd18310, %rd4511;
	and.b64  	%rd4555, %rd4554, %rd4486;
	or.b64  	%rd4556, %rd4555, %rd4553;
	add.s64 	%rd4557, %rd4547, %rd4556;
	add.s64 	%rd18309, %rd4557, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd18313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2670}, %rd18313;
	}
	shf.r.wrap.b32 	%r2671, %r2670, %r2669, 14;
	shf.r.wrap.b32 	%r2672, %r2669, %r2670, 14;
	mov.b64 	%rd4558, {%r2672, %r2671};
	shf.r.wrap.b32 	%r2673, %r2670, %r2669, 18;
	shf.r.wrap.b32 	%r2674, %r2669, %r2670, 18;
	mov.b64 	%rd4559, {%r2674, %r2673};
	xor.b64  	%rd4560, %rd4559, %rd4558;
	shf.l.wrap.b32 	%r2675, %r2669, %r2670, 23;
	shf.l.wrap.b32 	%r2676, %r2670, %r2669, 23;
	mov.b64 	%rd4561, {%r2676, %r2675};
	xor.b64  	%rd4562, %rd4560, %rd4561;
	xor.b64  	%rd4563, %rd18314, %rd4500;
	and.b64  	%rd4564, %rd18313, %rd4563;
	xor.b64  	%rd4565, %rd4564, %rd4500;
	add.s64 	%rd4566, %rd4475, %rd18363;
	ld.const.u64 	%rd4567, [%rd4211+112];
	add.s64 	%rd4568, %rd4566, %rd4567;
	add.s64 	%rd4569, %rd4568, %rd4565;
	add.s64 	%rd4570, %rd4569, %rd4562;
	add.s64 	%rd18312, %rd4570, %rd4486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd18309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd18309;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 28;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 28;
	mov.b64 	%rd4571, {%r2680, %r2679};
	shf.l.wrap.b32 	%r2681, %r2677, %r2678, 30;
	shf.l.wrap.b32 	%r2682, %r2678, %r2677, 30;
	mov.b64 	%rd4572, {%r2682, %r2681};
	xor.b64  	%rd4573, %rd4572, %rd4571;
	shf.l.wrap.b32 	%r2683, %r2677, %r2678, 25;
	shf.l.wrap.b32 	%r2684, %r2678, %r2677, 25;
	mov.b64 	%rd4574, {%r2684, %r2683};
	xor.b64  	%rd4575, %rd4573, %rd4574;
	and.b64  	%rd4576, %rd18309, %rd18310;
	xor.b64  	%rd4577, %rd18309, %rd18310;
	and.b64  	%rd4578, %rd4577, %rd4511;
	or.b64  	%rd4579, %rd4578, %rd4576;
	add.s64 	%rd4580, %rd4570, %rd4579;
	add.s64 	%rd18308, %rd4580, %rd4575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd18312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd18312;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 14;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 14;
	mov.b64 	%rd4581, {%r2688, %r2687};
	shf.r.wrap.b32 	%r2689, %r2686, %r2685, 18;
	shf.r.wrap.b32 	%r2690, %r2685, %r2686, 18;
	mov.b64 	%rd4582, {%r2690, %r2689};
	xor.b64  	%rd4583, %rd4582, %rd4581;
	shf.l.wrap.b32 	%r2691, %r2685, %r2686, 23;
	shf.l.wrap.b32 	%r2692, %r2686, %r2685, 23;
	mov.b64 	%rd4584, {%r2692, %r2691};
	xor.b64  	%rd4585, %rd4583, %rd4584;
	xor.b64  	%rd4586, %rd18313, %rd18314;
	and.b64  	%rd4587, %rd18312, %rd4586;
	xor.b64  	%rd4588, %rd4587, %rd18314;
	add.s64 	%rd4589, %rd4500, %rd18299;
	ld.const.u64 	%rd4590, [%rd4211+120];
	add.s64 	%rd4591, %rd4589, %rd4590;
	add.s64 	%rd4592, %rd4591, %rd4588;
	add.s64 	%rd4593, %rd4592, %rd4585;
	add.s64 	%rd18311, %rd4593, %rd4511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2693,%dummy}, %rd18308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2694}, %rd18308;
	}
	shf.r.wrap.b32 	%r2695, %r2694, %r2693, 28;
	shf.r.wrap.b32 	%r2696, %r2693, %r2694, 28;
	mov.b64 	%rd4594, {%r2696, %r2695};
	shf.l.wrap.b32 	%r2697, %r2693, %r2694, 30;
	shf.l.wrap.b32 	%r2698, %r2694, %r2693, 30;
	mov.b64 	%rd4595, {%r2698, %r2697};
	xor.b64  	%rd4596, %rd4595, %rd4594;
	shf.l.wrap.b32 	%r2699, %r2693, %r2694, 25;
	shf.l.wrap.b32 	%r2700, %r2694, %r2693, 25;
	mov.b64 	%rd4597, {%r2700, %r2699};
	xor.b64  	%rd4598, %rd4596, %rd4597;
	and.b64  	%rd4599, %rd18308, %rd18309;
	xor.b64  	%rd4600, %rd18308, %rd18309;
	and.b64  	%rd4601, %rd4600, %rd18310;
	or.b64  	%rd4602, %rd4601, %rd4599;
	add.s64 	%rd4603, %rd4593, %rd4602;
	add.s64 	%rd18307, %rd4603, %rd4598;
	add.s32 	%r12587, %r12587, 16;
	setp.lt.s32	%p40, %r12587, 80;
	@%p40 bra 	BB0_64;

	ld.const.u64 	%rd18329, [k_sha512+72];
	ld.const.u64 	%rd18328, [k_sha512+80];
	ld.const.u64 	%rd18327, [k_sha512+88];
	ld.const.u64 	%rd18326, [k_sha512+96];
	ld.const.u64 	%rd18325, [k_sha512+104];
	ld.const.u64 	%rd18324, [k_sha512+112];
	ld.const.u64 	%rd18323, [k_sha512+120];
	ld.const.u64 	%rd18336, [k_sha512+16];
	ld.const.u64 	%rd18335, [k_sha512+24];
	ld.const.u64 	%rd18334, [k_sha512+32];
	ld.const.u64 	%rd18333, [k_sha512+40];
	ld.const.u64 	%rd18332, [k_sha512+48];
	add.s64 	%rd18346, %rd218, %rd18307;
	st.local.u64 	[%rd1], %rd18346;
	add.s64 	%rd18345, %rd219, %rd18308;
	st.local.u64 	[%rd1+8], %rd18345;
	add.s64 	%rd18344, %rd220, %rd18309;
	st.local.u64 	[%rd1+16], %rd18344;
	add.s64 	%rd18343, %rd217, %rd18310;
	st.local.u64 	[%rd1+24], %rd18343;
	add.s64 	%rd18342, %rd212, %rd18311;
	st.local.u64 	[%rd1+32], %rd18342;
	add.s64 	%rd18341, %rd214, %rd18312;
	st.local.u64 	[%rd1+40], %rd18341;
	add.s64 	%rd18340, %rd213, %rd18313;
	st.local.u64 	[%rd1+48], %rd18340;
	add.s64 	%rd18339, %rd215, %rd18314;
	st.local.u64 	[%rd1+56], %rd18339;
	mov.u64 	%rd18363, 0;
	st.local.u64 	[%rd1+64], %rd18363;
	st.local.u64 	[%rd1+72], %rd18363;
	st.local.u64 	[%rd1+80], %rd18363;
	st.local.u64 	[%rd1+88], %rd18363;
	st.local.u64 	[%rd1+96], %rd18363;
	st.local.u64 	[%rd1+104], %rd18363;
	st.local.u64 	[%rd1+112], %rd18363;
	st.local.u64 	[%rd1+120], %rd18363;
	st.local.u64 	[%rd1+128], %rd18363;
	st.local.u64 	[%rd1+136], %rd18363;
	st.local.u64 	[%rd1+144], %rd18363;
	st.local.u64 	[%rd1+152], %rd18363;
	st.local.u64 	[%rd1+160], %rd18363;
	st.local.u64 	[%rd1+168], %rd18363;
	st.local.u64 	[%rd1+176], %rd18363;
	st.local.u64 	[%rd1+184], %rd18363;
	mov.u64 	%rd18364, %rd18363;
	mov.u64 	%rd18365, %rd18363;
	mov.u64 	%rd18366, %rd18363;
	mov.u64 	%rd18367, %rd18363;
	mov.u64 	%rd18368, %rd18363;
	mov.u64 	%rd18369, %rd18363;
	mov.u64 	%rd18385, %rd18363;
	mov.u64 	%rd18384, %rd18363;
	mov.u64 	%rd18383, %rd18363;
	mov.u64 	%rd18382, %rd18363;
	mov.u64 	%rd18381, %rd18363;
	mov.u64 	%rd18380, %rd18363;
	mov.u64 	%rd18379, %rd18363;
	mov.u64 	%rd18378, %rd18363;
	bra.uni 	BB0_66;

BB0_62:
	ld.local.u64 	%rd18346, [%rd1];
	ld.local.u64 	%rd18345, [%rd1+8];
	ld.local.u64 	%rd18344, [%rd1+16];
	ld.local.u64 	%rd18343, [%rd1+24];
	ld.local.u64 	%rd18342, [%rd1+32];
	ld.local.u64 	%rd18341, [%rd1+40];
	ld.local.u64 	%rd18340, [%rd1+48];
	ld.local.u64 	%rd18339, [%rd1+56];
	ld.const.u64 	%rd18338, [k_sha512];
	ld.const.u64 	%rd18337, [k_sha512+8];
	ld.const.u64 	%rd18336, [k_sha512+16];
	ld.const.u64 	%rd18335, [k_sha512+24];
	ld.const.u64 	%rd18334, [k_sha512+32];
	ld.const.u64 	%rd18333, [k_sha512+40];
	ld.const.u64 	%rd18332, [k_sha512+48];
	ld.const.u64 	%rd18331, [k_sha512+56];
	ld.const.u64 	%rd18330, [k_sha512+64];
	ld.const.u64 	%rd18329, [k_sha512+72];
	ld.const.u64 	%rd18328, [k_sha512+80];
	ld.const.u64 	%rd18327, [k_sha512+88];
	ld.const.u64 	%rd18326, [k_sha512+96];
	ld.const.u64 	%rd18325, [k_sha512+104];
	ld.const.u64 	%rd18324, [k_sha512+112];
	ld.const.u64 	%rd18323, [k_sha512+120];

BB0_66:
	ld.local.u32 	%r2702, [%rd1+192];
	shl.b32 	%r2703, %r2702, 3;
	cvt.s64.s32	%rd18362, %r2703;
	st.local.u64 	[%rd1+184], %rd18362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd18342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd18342;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 18;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 18;
	mov.b64 	%rd4619, {%r2707, %r2706};
	shf.r.wrap.b32 	%r2708, %r2705, %r2704, 14;
	shf.r.wrap.b32 	%r2709, %r2704, %r2705, 14;
	mov.b64 	%rd4620, {%r2709, %r2708};
	xor.b64  	%rd4621, %rd4619, %rd4620;
	shf.l.wrap.b32 	%r2710, %r2704, %r2705, 23;
	shf.l.wrap.b32 	%r2711, %r2705, %r2704, 23;
	mov.b64 	%rd4622, {%r2711, %r2710};
	xor.b64  	%rd4623, %rd4621, %rd4622;
	xor.b64  	%rd4624, %rd18340, %rd18341;
	and.b64  	%rd4625, %rd4624, %rd18342;
	xor.b64  	%rd4626, %rd4625, %rd18340;
	add.s64 	%rd4627, %rd18339, %rd18378;
	add.s64 	%rd4628, %rd4627, %rd18338;
	add.s64 	%rd4629, %rd4628, %rd4626;
	add.s64 	%rd4630, %rd4629, %rd4623;
	add.s64 	%rd4631, %rd4630, %rd18343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd18346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2713,%dummy}, %rd18346;
	}
	shf.l.wrap.b32 	%r2714, %r2713, %r2712, 30;
	shf.l.wrap.b32 	%r2715, %r2712, %r2713, 30;
	mov.b64 	%rd4632, {%r2715, %r2714};
	shf.r.wrap.b32 	%r2716, %r2712, %r2713, 28;
	shf.r.wrap.b32 	%r2717, %r2713, %r2712, 28;
	mov.b64 	%rd4633, {%r2717, %r2716};
	xor.b64  	%rd4634, %rd4632, %rd4633;
	shf.l.wrap.b32 	%r2718, %r2713, %r2712, 25;
	shf.l.wrap.b32 	%r2719, %r2712, %r2713, 25;
	mov.b64 	%rd4635, {%r2719, %r2718};
	xor.b64  	%rd4636, %rd4634, %rd4635;
	xor.b64  	%rd4637, %rd18345, %rd18346;
	and.b64  	%rd4638, %rd18344, %rd4637;
	and.b64  	%rd4639, %rd18345, %rd18346;
	or.b64  	%rd4640, %rd4638, %rd4639;
	add.s64 	%rd4641, %rd4630, %rd4640;
	add.s64 	%rd4642, %rd4641, %rd4636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd4631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd4631;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 14;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 14;
	mov.b64 	%rd4643, {%r2723, %r2722};
	shf.r.wrap.b32 	%r2724, %r2721, %r2720, 18;
	shf.r.wrap.b32 	%r2725, %r2720, %r2721, 18;
	mov.b64 	%rd4644, {%r2725, %r2724};
	xor.b64  	%rd4645, %rd4644, %rd4643;
	shf.l.wrap.b32 	%r2726, %r2720, %r2721, 23;
	shf.l.wrap.b32 	%r2727, %r2721, %r2720, 23;
	mov.b64 	%rd4646, {%r2727, %r2726};
	xor.b64  	%rd4647, %rd4645, %rd4646;
	xor.b64  	%rd4648, %rd18341, %rd18342;
	and.b64  	%rd4649, %rd4631, %rd4648;
	xor.b64  	%rd4650, %rd4649, %rd18341;
	add.s64 	%rd4651, %rd18340, %rd18379;
	add.s64 	%rd4652, %rd4651, %rd18337;
	add.s64 	%rd4653, %rd4652, %rd4650;
	add.s64 	%rd4654, %rd4653, %rd4647;
	add.s64 	%rd4655, %rd4654, %rd18344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd4642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd4642;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 28;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 28;
	mov.b64 	%rd4656, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 30;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 30;
	mov.b64 	%rd4657, {%r2733, %r2732};
	xor.b64  	%rd4658, %rd4657, %rd4656;
	shf.l.wrap.b32 	%r2734, %r2728, %r2729, 25;
	shf.l.wrap.b32 	%r2735, %r2729, %r2728, 25;
	mov.b64 	%rd4659, {%r2735, %r2734};
	xor.b64  	%rd4660, %rd4658, %rd4659;
	and.b64  	%rd4661, %rd4642, %rd18346;
	xor.b64  	%rd4662, %rd4642, %rd18346;
	and.b64  	%rd4663, %rd4662, %rd18345;
	or.b64  	%rd4664, %rd4663, %rd4661;
	add.s64 	%rd4665, %rd4654, %rd4664;
	add.s64 	%rd4666, %rd4665, %rd4660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd4655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd4655;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 14;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 14;
	mov.b64 	%rd4667, {%r2739, %r2738};
	shf.r.wrap.b32 	%r2740, %r2737, %r2736, 18;
	shf.r.wrap.b32 	%r2741, %r2736, %r2737, 18;
	mov.b64 	%rd4668, {%r2741, %r2740};
	xor.b64  	%rd4669, %rd4668, %rd4667;
	shf.l.wrap.b32 	%r2742, %r2736, %r2737, 23;
	shf.l.wrap.b32 	%r2743, %r2737, %r2736, 23;
	mov.b64 	%rd4670, {%r2743, %r2742};
	xor.b64  	%rd4671, %rd4669, %rd4670;
	xor.b64  	%rd4672, %rd4631, %rd18342;
	and.b64  	%rd4673, %rd4655, %rd4672;
	xor.b64  	%rd4674, %rd4673, %rd18342;
	add.s64 	%rd4675, %rd18341, %rd18380;
	add.s64 	%rd4676, %rd4675, %rd18336;
	add.s64 	%rd4677, %rd4676, %rd4674;
	add.s64 	%rd4678, %rd4677, %rd4671;
	add.s64 	%rd4679, %rd4678, %rd18345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2744,%dummy}, %rd4666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd4666;
	}
	shf.r.wrap.b32 	%r2746, %r2745, %r2744, 28;
	shf.r.wrap.b32 	%r2747, %r2744, %r2745, 28;
	mov.b64 	%rd4680, {%r2747, %r2746};
	shf.l.wrap.b32 	%r2748, %r2744, %r2745, 30;
	shf.l.wrap.b32 	%r2749, %r2745, %r2744, 30;
	mov.b64 	%rd4681, {%r2749, %r2748};
	xor.b64  	%rd4682, %rd4681, %rd4680;
	shf.l.wrap.b32 	%r2750, %r2744, %r2745, 25;
	shf.l.wrap.b32 	%r2751, %r2745, %r2744, 25;
	mov.b64 	%rd4683, {%r2751, %r2750};
	xor.b64  	%rd4684, %rd4682, %rd4683;
	and.b64  	%rd4685, %rd4666, %rd4642;
	xor.b64  	%rd4686, %rd4666, %rd4642;
	and.b64  	%rd4687, %rd4686, %rd18346;
	or.b64  	%rd4688, %rd4687, %rd4685;
	add.s64 	%rd4689, %rd4678, %rd4688;
	add.s64 	%rd4690, %rd4689, %rd4684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2752,%dummy}, %rd4679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2753}, %rd4679;
	}
	shf.r.wrap.b32 	%r2754, %r2753, %r2752, 14;
	shf.r.wrap.b32 	%r2755, %r2752, %r2753, 14;
	mov.b64 	%rd4691, {%r2755, %r2754};
	shf.r.wrap.b32 	%r2756, %r2753, %r2752, 18;
	shf.r.wrap.b32 	%r2757, %r2752, %r2753, 18;
	mov.b64 	%rd4692, {%r2757, %r2756};
	xor.b64  	%rd4693, %rd4692, %rd4691;
	shf.l.wrap.b32 	%r2758, %r2752, %r2753, 23;
	shf.l.wrap.b32 	%r2759, %r2753, %r2752, 23;
	mov.b64 	%rd4694, {%r2759, %r2758};
	xor.b64  	%rd4695, %rd4693, %rd4694;
	xor.b64  	%rd4696, %rd4655, %rd4631;
	and.b64  	%rd4697, %rd4679, %rd4696;
	xor.b64  	%rd4698, %rd4697, %rd4631;
	add.s64 	%rd4699, %rd18342, %rd18381;
	add.s64 	%rd4700, %rd4699, %rd18335;
	add.s64 	%rd4701, %rd4700, %rd4698;
	add.s64 	%rd4702, %rd4701, %rd4695;
	add.s64 	%rd4703, %rd4702, %rd18346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd4690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd4690;
	}
	shf.r.wrap.b32 	%r2762, %r2761, %r2760, 28;
	shf.r.wrap.b32 	%r2763, %r2760, %r2761, 28;
	mov.b64 	%rd4704, {%r2763, %r2762};
	shf.l.wrap.b32 	%r2764, %r2760, %r2761, 30;
	shf.l.wrap.b32 	%r2765, %r2761, %r2760, 30;
	mov.b64 	%rd4705, {%r2765, %r2764};
	xor.b64  	%rd4706, %rd4705, %rd4704;
	shf.l.wrap.b32 	%r2766, %r2760, %r2761, 25;
	shf.l.wrap.b32 	%r2767, %r2761, %r2760, 25;
	mov.b64 	%rd4707, {%r2767, %r2766};
	xor.b64  	%rd4708, %rd4706, %rd4707;
	and.b64  	%rd4709, %rd4690, %rd4666;
	xor.b64  	%rd4710, %rd4690, %rd4666;
	and.b64  	%rd4711, %rd4710, %rd4642;
	or.b64  	%rd4712, %rd4711, %rd4709;
	add.s64 	%rd4713, %rd4702, %rd4712;
	add.s64 	%rd4714, %rd4713, %rd4708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd4703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd4703;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd4715, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 18;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 18;
	mov.b64 	%rd4716, {%r2773, %r2772};
	xor.b64  	%rd4717, %rd4716, %rd4715;
	shf.l.wrap.b32 	%r2774, %r2768, %r2769, 23;
	shf.l.wrap.b32 	%r2775, %r2769, %r2768, 23;
	mov.b64 	%rd4718, {%r2775, %r2774};
	xor.b64  	%rd4719, %rd4717, %rd4718;
	xor.b64  	%rd4720, %rd4679, %rd4655;
	and.b64  	%rd4721, %rd4703, %rd4720;
	xor.b64  	%rd4722, %rd4721, %rd4655;
	add.s64 	%rd4723, %rd4631, %rd18382;
	add.s64 	%rd4724, %rd4723, %rd18334;
	add.s64 	%rd4725, %rd4724, %rd4722;
	add.s64 	%rd4726, %rd4725, %rd4719;
	add.s64 	%rd4727, %rd4726, %rd4642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2776,%dummy}, %rd4714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd4714;
	}
	shf.r.wrap.b32 	%r2778, %r2777, %r2776, 28;
	shf.r.wrap.b32 	%r2779, %r2776, %r2777, 28;
	mov.b64 	%rd4728, {%r2779, %r2778};
	shf.l.wrap.b32 	%r2780, %r2776, %r2777, 30;
	shf.l.wrap.b32 	%r2781, %r2777, %r2776, 30;
	mov.b64 	%rd4729, {%r2781, %r2780};
	xor.b64  	%rd4730, %rd4729, %rd4728;
	shf.l.wrap.b32 	%r2782, %r2776, %r2777, 25;
	shf.l.wrap.b32 	%r2783, %r2777, %r2776, 25;
	mov.b64 	%rd4731, {%r2783, %r2782};
	xor.b64  	%rd4732, %rd4730, %rd4731;
	and.b64  	%rd4733, %rd4714, %rd4690;
	xor.b64  	%rd4734, %rd4714, %rd4690;
	and.b64  	%rd4735, %rd4734, %rd4666;
	or.b64  	%rd4736, %rd4735, %rd4733;
	add.s64 	%rd4737, %rd4726, %rd4736;
	add.s64 	%rd4738, %rd4737, %rd4732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2784,%dummy}, %rd4727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd4727;
	}
	shf.r.wrap.b32 	%r2786, %r2785, %r2784, 14;
	shf.r.wrap.b32 	%r2787, %r2784, %r2785, 14;
	mov.b64 	%rd4739, {%r2787, %r2786};
	shf.r.wrap.b32 	%r2788, %r2785, %r2784, 18;
	shf.r.wrap.b32 	%r2789, %r2784, %r2785, 18;
	mov.b64 	%rd4740, {%r2789, %r2788};
	xor.b64  	%rd4741, %rd4740, %rd4739;
	shf.l.wrap.b32 	%r2790, %r2784, %r2785, 23;
	shf.l.wrap.b32 	%r2791, %r2785, %r2784, 23;
	mov.b64 	%rd4742, {%r2791, %r2790};
	xor.b64  	%rd4743, %rd4741, %rd4742;
	xor.b64  	%rd4744, %rd4703, %rd4679;
	and.b64  	%rd4745, %rd4727, %rd4744;
	xor.b64  	%rd4746, %rd4745, %rd4679;
	add.s64 	%rd4747, %rd4655, %rd18383;
	add.s64 	%rd4748, %rd4747, %rd18333;
	add.s64 	%rd4749, %rd4748, %rd4746;
	add.s64 	%rd4750, %rd4749, %rd4743;
	add.s64 	%rd4751, %rd4750, %rd4666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2792,%dummy}, %rd4738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2793}, %rd4738;
	}
	shf.r.wrap.b32 	%r2794, %r2793, %r2792, 28;
	shf.r.wrap.b32 	%r2795, %r2792, %r2793, 28;
	mov.b64 	%rd4752, {%r2795, %r2794};
	shf.l.wrap.b32 	%r2796, %r2792, %r2793, 30;
	shf.l.wrap.b32 	%r2797, %r2793, %r2792, 30;
	mov.b64 	%rd4753, {%r2797, %r2796};
	xor.b64  	%rd4754, %rd4753, %rd4752;
	shf.l.wrap.b32 	%r2798, %r2792, %r2793, 25;
	shf.l.wrap.b32 	%r2799, %r2793, %r2792, 25;
	mov.b64 	%rd4755, {%r2799, %r2798};
	xor.b64  	%rd4756, %rd4754, %rd4755;
	and.b64  	%rd4757, %rd4738, %rd4714;
	xor.b64  	%rd4758, %rd4738, %rd4714;
	and.b64  	%rd4759, %rd4758, %rd4690;
	or.b64  	%rd4760, %rd4759, %rd4757;
	add.s64 	%rd4761, %rd4750, %rd4760;
	add.s64 	%rd4762, %rd4761, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2800,%dummy}, %rd4751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2801}, %rd4751;
	}
	shf.r.wrap.b32 	%r2802, %r2801, %r2800, 14;
	shf.r.wrap.b32 	%r2803, %r2800, %r2801, 14;
	mov.b64 	%rd4763, {%r2803, %r2802};
	shf.r.wrap.b32 	%r2804, %r2801, %r2800, 18;
	shf.r.wrap.b32 	%r2805, %r2800, %r2801, 18;
	mov.b64 	%rd4764, {%r2805, %r2804};
	xor.b64  	%rd4765, %rd4764, %rd4763;
	shf.l.wrap.b32 	%r2806, %r2800, %r2801, 23;
	shf.l.wrap.b32 	%r2807, %r2801, %r2800, 23;
	mov.b64 	%rd4766, {%r2807, %r2806};
	xor.b64  	%rd4767, %rd4765, %rd4766;
	xor.b64  	%rd4768, %rd4727, %rd4703;
	and.b64  	%rd4769, %rd4751, %rd4768;
	xor.b64  	%rd4770, %rd4769, %rd4703;
	add.s64 	%rd4771, %rd4679, %rd18384;
	add.s64 	%rd4772, %rd4771, %rd18332;
	add.s64 	%rd4773, %rd4772, %rd4770;
	add.s64 	%rd4774, %rd4773, %rd4767;
	add.s64 	%rd4775, %rd4774, %rd4690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd4762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd4762;
	}
	shf.r.wrap.b32 	%r2810, %r2809, %r2808, 28;
	shf.r.wrap.b32 	%r2811, %r2808, %r2809, 28;
	mov.b64 	%rd4776, {%r2811, %r2810};
	shf.l.wrap.b32 	%r2812, %r2808, %r2809, 30;
	shf.l.wrap.b32 	%r2813, %r2809, %r2808, 30;
	mov.b64 	%rd4777, {%r2813, %r2812};
	xor.b64  	%rd4778, %rd4777, %rd4776;
	shf.l.wrap.b32 	%r2814, %r2808, %r2809, 25;
	shf.l.wrap.b32 	%r2815, %r2809, %r2808, 25;
	mov.b64 	%rd4779, {%r2815, %r2814};
	xor.b64  	%rd4780, %rd4778, %rd4779;
	and.b64  	%rd4781, %rd4762, %rd4738;
	xor.b64  	%rd4782, %rd4762, %rd4738;
	and.b64  	%rd4783, %rd4782, %rd4714;
	or.b64  	%rd4784, %rd4783, %rd4781;
	add.s64 	%rd4785, %rd4774, %rd4784;
	add.s64 	%rd4786, %rd4785, %rd4780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2816,%dummy}, %rd4775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2817}, %rd4775;
	}
	shf.r.wrap.b32 	%r2818, %r2817, %r2816, 14;
	shf.r.wrap.b32 	%r2819, %r2816, %r2817, 14;
	mov.b64 	%rd4787, {%r2819, %r2818};
	shf.r.wrap.b32 	%r2820, %r2817, %r2816, 18;
	shf.r.wrap.b32 	%r2821, %r2816, %r2817, 18;
	mov.b64 	%rd4788, {%r2821, %r2820};
	xor.b64  	%rd4789, %rd4788, %rd4787;
	shf.l.wrap.b32 	%r2822, %r2816, %r2817, 23;
	shf.l.wrap.b32 	%r2823, %r2817, %r2816, 23;
	mov.b64 	%rd4790, {%r2823, %r2822};
	xor.b64  	%rd4791, %rd4789, %rd4790;
	xor.b64  	%rd4792, %rd4751, %rd4727;
	and.b64  	%rd4793, %rd4775, %rd4792;
	xor.b64  	%rd4794, %rd4793, %rd4727;
	add.s64 	%rd4795, %rd4703, %rd18385;
	add.s64 	%rd4796, %rd4795, %rd18331;
	add.s64 	%rd4797, %rd4796, %rd4794;
	add.s64 	%rd4798, %rd4797, %rd4791;
	add.s64 	%rd4799, %rd4798, %rd4714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd4786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd4786;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 28;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 28;
	mov.b64 	%rd4800, {%r2827, %r2826};
	shf.l.wrap.b32 	%r2828, %r2824, %r2825, 30;
	shf.l.wrap.b32 	%r2829, %r2825, %r2824, 30;
	mov.b64 	%rd4801, {%r2829, %r2828};
	xor.b64  	%rd4802, %rd4801, %rd4800;
	shf.l.wrap.b32 	%r2830, %r2824, %r2825, 25;
	shf.l.wrap.b32 	%r2831, %r2825, %r2824, 25;
	mov.b64 	%rd4803, {%r2831, %r2830};
	xor.b64  	%rd4804, %rd4802, %rd4803;
	and.b64  	%rd4805, %rd4786, %rd4762;
	xor.b64  	%rd4806, %rd4786, %rd4762;
	and.b64  	%rd4807, %rd4806, %rd4738;
	or.b64  	%rd4808, %rd4807, %rd4805;
	add.s64 	%rd4809, %rd4798, %rd4808;
	add.s64 	%rd4810, %rd4809, %rd4804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd4799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd4799;
	}
	shf.r.wrap.b32 	%r2834, %r2833, %r2832, 14;
	shf.r.wrap.b32 	%r2835, %r2832, %r2833, 14;
	mov.b64 	%rd4811, {%r2835, %r2834};
	shf.r.wrap.b32 	%r2836, %r2833, %r2832, 18;
	shf.r.wrap.b32 	%r2837, %r2832, %r2833, 18;
	mov.b64 	%rd4812, {%r2837, %r2836};
	xor.b64  	%rd4813, %rd4812, %rd4811;
	shf.l.wrap.b32 	%r2838, %r2832, %r2833, 23;
	shf.l.wrap.b32 	%r2839, %r2833, %r2832, 23;
	mov.b64 	%rd4814, {%r2839, %r2838};
	xor.b64  	%rd4815, %rd4813, %rd4814;
	xor.b64  	%rd4816, %rd4775, %rd4751;
	and.b64  	%rd4817, %rd4799, %rd4816;
	xor.b64  	%rd4818, %rd4817, %rd4751;
	add.s64 	%rd4819, %rd4727, %rd18369;
	add.s64 	%rd4820, %rd4819, %rd18330;
	add.s64 	%rd4821, %rd4820, %rd4818;
	add.s64 	%rd4822, %rd4821, %rd4815;
	add.s64 	%rd4823, %rd4822, %rd4738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd4810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd4810;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 28;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 28;
	mov.b64 	%rd4824, {%r2843, %r2842};
	shf.l.wrap.b32 	%r2844, %r2840, %r2841, 30;
	shf.l.wrap.b32 	%r2845, %r2841, %r2840, 30;
	mov.b64 	%rd4825, {%r2845, %r2844};
	xor.b64  	%rd4826, %rd4825, %rd4824;
	shf.l.wrap.b32 	%r2846, %r2840, %r2841, 25;
	shf.l.wrap.b32 	%r2847, %r2841, %r2840, 25;
	mov.b64 	%rd4827, {%r2847, %r2846};
	xor.b64  	%rd4828, %rd4826, %rd4827;
	and.b64  	%rd4829, %rd4810, %rd4786;
	xor.b64  	%rd4830, %rd4810, %rd4786;
	and.b64  	%rd4831, %rd4830, %rd4762;
	or.b64  	%rd4832, %rd4831, %rd4829;
	add.s64 	%rd4833, %rd4822, %rd4832;
	add.s64 	%rd4834, %rd4833, %rd4828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2848,%dummy}, %rd4823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2849}, %rd4823;
	}
	shf.r.wrap.b32 	%r2850, %r2849, %r2848, 14;
	shf.r.wrap.b32 	%r2851, %r2848, %r2849, 14;
	mov.b64 	%rd4835, {%r2851, %r2850};
	shf.r.wrap.b32 	%r2852, %r2849, %r2848, 18;
	shf.r.wrap.b32 	%r2853, %r2848, %r2849, 18;
	mov.b64 	%rd4836, {%r2853, %r2852};
	xor.b64  	%rd4837, %rd4836, %rd4835;
	shf.l.wrap.b32 	%r2854, %r2848, %r2849, 23;
	shf.l.wrap.b32 	%r2855, %r2849, %r2848, 23;
	mov.b64 	%rd4838, {%r2855, %r2854};
	xor.b64  	%rd4839, %rd4837, %rd4838;
	xor.b64  	%rd4840, %rd4799, %rd4775;
	and.b64  	%rd4841, %rd4823, %rd4840;
	xor.b64  	%rd4842, %rd4841, %rd4775;
	add.s64 	%rd4843, %rd4751, %rd18368;
	add.s64 	%rd4844, %rd4843, %rd18329;
	add.s64 	%rd4845, %rd4844, %rd4842;
	add.s64 	%rd4846, %rd4845, %rd4839;
	add.s64 	%rd4847, %rd4846, %rd4762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2856,%dummy}, %rd4834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2857}, %rd4834;
	}
	shf.r.wrap.b32 	%r2858, %r2857, %r2856, 28;
	shf.r.wrap.b32 	%r2859, %r2856, %r2857, 28;
	mov.b64 	%rd4848, {%r2859, %r2858};
	shf.l.wrap.b32 	%r2860, %r2856, %r2857, 30;
	shf.l.wrap.b32 	%r2861, %r2857, %r2856, 30;
	mov.b64 	%rd4849, {%r2861, %r2860};
	xor.b64  	%rd4850, %rd4849, %rd4848;
	shf.l.wrap.b32 	%r2862, %r2856, %r2857, 25;
	shf.l.wrap.b32 	%r2863, %r2857, %r2856, 25;
	mov.b64 	%rd4851, {%r2863, %r2862};
	xor.b64  	%rd4852, %rd4850, %rd4851;
	and.b64  	%rd4853, %rd4834, %rd4810;
	xor.b64  	%rd4854, %rd4834, %rd4810;
	and.b64  	%rd4855, %rd4854, %rd4786;
	or.b64  	%rd4856, %rd4855, %rd4853;
	add.s64 	%rd4857, %rd4846, %rd4856;
	add.s64 	%rd4858, %rd4857, %rd4852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2864,%dummy}, %rd4847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2865}, %rd4847;
	}
	shf.r.wrap.b32 	%r2866, %r2865, %r2864, 14;
	shf.r.wrap.b32 	%r2867, %r2864, %r2865, 14;
	mov.b64 	%rd4859, {%r2867, %r2866};
	shf.r.wrap.b32 	%r2868, %r2865, %r2864, 18;
	shf.r.wrap.b32 	%r2869, %r2864, %r2865, 18;
	mov.b64 	%rd4860, {%r2869, %r2868};
	xor.b64  	%rd4861, %rd4860, %rd4859;
	shf.l.wrap.b32 	%r2870, %r2864, %r2865, 23;
	shf.l.wrap.b32 	%r2871, %r2865, %r2864, 23;
	mov.b64 	%rd4862, {%r2871, %r2870};
	xor.b64  	%rd4863, %rd4861, %rd4862;
	xor.b64  	%rd4864, %rd4823, %rd4799;
	and.b64  	%rd4865, %rd4847, %rd4864;
	xor.b64  	%rd4866, %rd4865, %rd4799;
	add.s64 	%rd4867, %rd4775, %rd18367;
	add.s64 	%rd4868, %rd4867, %rd18328;
	add.s64 	%rd4869, %rd4868, %rd4866;
	add.s64 	%rd4870, %rd4869, %rd4863;
	add.s64 	%rd4871, %rd4870, %rd4786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2872,%dummy}, %rd4858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2873}, %rd4858;
	}
	shf.r.wrap.b32 	%r2874, %r2873, %r2872, 28;
	shf.r.wrap.b32 	%r2875, %r2872, %r2873, 28;
	mov.b64 	%rd4872, {%r2875, %r2874};
	shf.l.wrap.b32 	%r2876, %r2872, %r2873, 30;
	shf.l.wrap.b32 	%r2877, %r2873, %r2872, 30;
	mov.b64 	%rd4873, {%r2877, %r2876};
	xor.b64  	%rd4874, %rd4873, %rd4872;
	shf.l.wrap.b32 	%r2878, %r2872, %r2873, 25;
	shf.l.wrap.b32 	%r2879, %r2873, %r2872, 25;
	mov.b64 	%rd4875, {%r2879, %r2878};
	xor.b64  	%rd4876, %rd4874, %rd4875;
	and.b64  	%rd4877, %rd4858, %rd4834;
	xor.b64  	%rd4878, %rd4858, %rd4834;
	and.b64  	%rd4879, %rd4878, %rd4810;
	or.b64  	%rd4880, %rd4879, %rd4877;
	add.s64 	%rd4881, %rd4870, %rd4880;
	add.s64 	%rd4882, %rd4881, %rd4876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2880,%dummy}, %rd4871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2881}, %rd4871;
	}
	shf.r.wrap.b32 	%r2882, %r2881, %r2880, 14;
	shf.r.wrap.b32 	%r2883, %r2880, %r2881, 14;
	mov.b64 	%rd4883, {%r2883, %r2882};
	shf.r.wrap.b32 	%r2884, %r2881, %r2880, 18;
	shf.r.wrap.b32 	%r2885, %r2880, %r2881, 18;
	mov.b64 	%rd4884, {%r2885, %r2884};
	xor.b64  	%rd4885, %rd4884, %rd4883;
	shf.l.wrap.b32 	%r2886, %r2880, %r2881, 23;
	shf.l.wrap.b32 	%r2887, %r2881, %r2880, 23;
	mov.b64 	%rd4886, {%r2887, %r2886};
	xor.b64  	%rd4887, %rd4885, %rd4886;
	xor.b64  	%rd4888, %rd4847, %rd4823;
	and.b64  	%rd4889, %rd4871, %rd4888;
	xor.b64  	%rd4890, %rd4889, %rd4823;
	add.s64 	%rd4891, %rd4799, %rd18366;
	add.s64 	%rd4892, %rd4891, %rd18327;
	add.s64 	%rd4893, %rd4892, %rd4890;
	add.s64 	%rd4894, %rd4893, %rd4887;
	add.s64 	%rd4895, %rd4894, %rd4810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2888,%dummy}, %rd4882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd4882;
	}
	shf.r.wrap.b32 	%r2890, %r2889, %r2888, 28;
	shf.r.wrap.b32 	%r2891, %r2888, %r2889, 28;
	mov.b64 	%rd4896, {%r2891, %r2890};
	shf.l.wrap.b32 	%r2892, %r2888, %r2889, 30;
	shf.l.wrap.b32 	%r2893, %r2889, %r2888, 30;
	mov.b64 	%rd4897, {%r2893, %r2892};
	xor.b64  	%rd4898, %rd4897, %rd4896;
	shf.l.wrap.b32 	%r2894, %r2888, %r2889, 25;
	shf.l.wrap.b32 	%r2895, %r2889, %r2888, 25;
	mov.b64 	%rd4899, {%r2895, %r2894};
	xor.b64  	%rd4900, %rd4898, %rd4899;
	and.b64  	%rd4901, %rd4882, %rd4858;
	xor.b64  	%rd4902, %rd4882, %rd4858;
	and.b64  	%rd4903, %rd4902, %rd4834;
	or.b64  	%rd4904, %rd4903, %rd4901;
	add.s64 	%rd4905, %rd4894, %rd4904;
	add.s64 	%rd4906, %rd4905, %rd4900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2896,%dummy}, %rd4895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2897}, %rd4895;
	}
	shf.r.wrap.b32 	%r2898, %r2897, %r2896, 14;
	shf.r.wrap.b32 	%r2899, %r2896, %r2897, 14;
	mov.b64 	%rd4907, {%r2899, %r2898};
	shf.r.wrap.b32 	%r2900, %r2897, %r2896, 18;
	shf.r.wrap.b32 	%r2901, %r2896, %r2897, 18;
	mov.b64 	%rd4908, {%r2901, %r2900};
	xor.b64  	%rd4909, %rd4908, %rd4907;
	shf.l.wrap.b32 	%r2902, %r2896, %r2897, 23;
	shf.l.wrap.b32 	%r2903, %r2897, %r2896, 23;
	mov.b64 	%rd4910, {%r2903, %r2902};
	xor.b64  	%rd4911, %rd4909, %rd4910;
	xor.b64  	%rd4912, %rd4871, %rd4847;
	and.b64  	%rd4913, %rd4895, %rd4912;
	xor.b64  	%rd4914, %rd4913, %rd4847;
	add.s64 	%rd4915, %rd4823, %rd18365;
	add.s64 	%rd4916, %rd4915, %rd18326;
	add.s64 	%rd4917, %rd4916, %rd4914;
	add.s64 	%rd4918, %rd4917, %rd4911;
	add.s64 	%rd18377, %rd4918, %rd4834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2904,%dummy}, %rd4906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2905}, %rd4906;
	}
	shf.r.wrap.b32 	%r2906, %r2905, %r2904, 28;
	shf.r.wrap.b32 	%r2907, %r2904, %r2905, 28;
	mov.b64 	%rd4919, {%r2907, %r2906};
	shf.l.wrap.b32 	%r2908, %r2904, %r2905, 30;
	shf.l.wrap.b32 	%r2909, %r2905, %r2904, 30;
	mov.b64 	%rd4920, {%r2909, %r2908};
	xor.b64  	%rd4921, %rd4920, %rd4919;
	shf.l.wrap.b32 	%r2910, %r2904, %r2905, 25;
	shf.l.wrap.b32 	%r2911, %r2905, %r2904, 25;
	mov.b64 	%rd4922, {%r2911, %r2910};
	xor.b64  	%rd4923, %rd4921, %rd4922;
	and.b64  	%rd4924, %rd4906, %rd4882;
	xor.b64  	%rd4925, %rd4906, %rd4882;
	and.b64  	%rd4926, %rd4925, %rd4858;
	or.b64  	%rd4927, %rd4926, %rd4924;
	add.s64 	%rd4928, %rd4918, %rd4927;
	add.s64 	%rd18373, %rd4928, %rd4923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2912,%dummy}, %rd18377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2913}, %rd18377;
	}
	shf.r.wrap.b32 	%r2914, %r2913, %r2912, 14;
	shf.r.wrap.b32 	%r2915, %r2912, %r2913, 14;
	mov.b64 	%rd4929, {%r2915, %r2914};
	shf.r.wrap.b32 	%r2916, %r2913, %r2912, 18;
	shf.r.wrap.b32 	%r2917, %r2912, %r2913, 18;
	mov.b64 	%rd4930, {%r2917, %r2916};
	xor.b64  	%rd4931, %rd4930, %rd4929;
	shf.l.wrap.b32 	%r2918, %r2912, %r2913, 23;
	shf.l.wrap.b32 	%r2919, %r2913, %r2912, 23;
	mov.b64 	%rd4932, {%r2919, %r2918};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	xor.b64  	%rd4934, %rd4895, %rd4871;
	and.b64  	%rd4935, %rd18377, %rd4934;
	xor.b64  	%rd4936, %rd4935, %rd4871;
	add.s64 	%rd4937, %rd4847, %rd18364;
	add.s64 	%rd4938, %rd4937, %rd18325;
	add.s64 	%rd4939, %rd4938, %rd4936;
	add.s64 	%rd4940, %rd4939, %rd4933;
	add.s64 	%rd18376, %rd4940, %rd4858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2920,%dummy}, %rd18373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2921}, %rd18373;
	}
	shf.r.wrap.b32 	%r2922, %r2921, %r2920, 28;
	shf.r.wrap.b32 	%r2923, %r2920, %r2921, 28;
	mov.b64 	%rd4941, {%r2923, %r2922};
	shf.l.wrap.b32 	%r2924, %r2920, %r2921, 30;
	shf.l.wrap.b32 	%r2925, %r2921, %r2920, 30;
	mov.b64 	%rd4942, {%r2925, %r2924};
	xor.b64  	%rd4943, %rd4942, %rd4941;
	shf.l.wrap.b32 	%r2926, %r2920, %r2921, 25;
	shf.l.wrap.b32 	%r2927, %r2921, %r2920, 25;
	mov.b64 	%rd4944, {%r2927, %r2926};
	xor.b64  	%rd4945, %rd4943, %rd4944;
	and.b64  	%rd4946, %rd18373, %rd4906;
	xor.b64  	%rd4947, %rd18373, %rd4906;
	and.b64  	%rd4948, %rd4947, %rd4882;
	or.b64  	%rd4949, %rd4948, %rd4946;
	add.s64 	%rd4950, %rd4940, %rd4949;
	add.s64 	%rd18372, %rd4950, %rd4945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd18376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd18376;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 14;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 14;
	mov.b64 	%rd4951, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 18;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 18;
	mov.b64 	%rd4952, {%r2933, %r2932};
	xor.b64  	%rd4953, %rd4952, %rd4951;
	shf.l.wrap.b32 	%r2934, %r2928, %r2929, 23;
	shf.l.wrap.b32 	%r2935, %r2929, %r2928, 23;
	mov.b64 	%rd4954, {%r2935, %r2934};
	xor.b64  	%rd4955, %rd4953, %rd4954;
	xor.b64  	%rd4956, %rd18377, %rd4895;
	and.b64  	%rd4957, %rd18376, %rd4956;
	xor.b64  	%rd4958, %rd4957, %rd4895;
	add.s64 	%rd4959, %rd4871, %rd18363;
	add.s64 	%rd4960, %rd4959, %rd18324;
	add.s64 	%rd4961, %rd4960, %rd4958;
	add.s64 	%rd4962, %rd4961, %rd4955;
	add.s64 	%rd18375, %rd4962, %rd4882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd18372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd18372;
	}
	shf.r.wrap.b32 	%r2938, %r2937, %r2936, 28;
	shf.r.wrap.b32 	%r2939, %r2936, %r2937, 28;
	mov.b64 	%rd4963, {%r2939, %r2938};
	shf.l.wrap.b32 	%r2940, %r2936, %r2937, 30;
	shf.l.wrap.b32 	%r2941, %r2937, %r2936, 30;
	mov.b64 	%rd4964, {%r2941, %r2940};
	xor.b64  	%rd4965, %rd4964, %rd4963;
	shf.l.wrap.b32 	%r2942, %r2936, %r2937, 25;
	shf.l.wrap.b32 	%r2943, %r2937, %r2936, 25;
	mov.b64 	%rd4966, {%r2943, %r2942};
	xor.b64  	%rd4967, %rd4965, %rd4966;
	and.b64  	%rd4968, %rd18372, %rd18373;
	xor.b64  	%rd4969, %rd18372, %rd18373;
	and.b64  	%rd4970, %rd4969, %rd4906;
	or.b64  	%rd4971, %rd4970, %rd4968;
	add.s64 	%rd4972, %rd4962, %rd4971;
	add.s64 	%rd18371, %rd4972, %rd4967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd18375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd18375;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 14;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 14;
	mov.b64 	%rd4973, {%r2947, %r2946};
	shf.r.wrap.b32 	%r2948, %r2945, %r2944, 18;
	shf.r.wrap.b32 	%r2949, %r2944, %r2945, 18;
	mov.b64 	%rd4974, {%r2949, %r2948};
	xor.b64  	%rd4975, %rd4974, %rd4973;
	shf.l.wrap.b32 	%r2950, %r2944, %r2945, 23;
	shf.l.wrap.b32 	%r2951, %r2945, %r2944, 23;
	mov.b64 	%rd4976, {%r2951, %r2950};
	xor.b64  	%rd4977, %rd4975, %rd4976;
	xor.b64  	%rd4978, %rd18376, %rd18377;
	and.b64  	%rd4979, %rd18375, %rd4978;
	xor.b64  	%rd4980, %rd4979, %rd18377;
	add.s64 	%rd4981, %rd4895, %rd18362;
	add.s64 	%rd4982, %rd4981, %rd18323;
	add.s64 	%rd4983, %rd4982, %rd4980;
	add.s64 	%rd4984, %rd4983, %rd4977;
	add.s64 	%rd18374, %rd4984, %rd4906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2952,%dummy}, %rd18371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2953}, %rd18371;
	}
	shf.r.wrap.b32 	%r2954, %r2953, %r2952, 28;
	shf.r.wrap.b32 	%r2955, %r2952, %r2953, 28;
	mov.b64 	%rd4985, {%r2955, %r2954};
	shf.l.wrap.b32 	%r2956, %r2952, %r2953, 30;
	shf.l.wrap.b32 	%r2957, %r2953, %r2952, 30;
	mov.b64 	%rd4986, {%r2957, %r2956};
	xor.b64  	%rd4987, %rd4986, %rd4985;
	shf.l.wrap.b32 	%r2958, %r2952, %r2953, 25;
	shf.l.wrap.b32 	%r2959, %r2953, %r2952, 25;
	mov.b64 	%rd4988, {%r2959, %r2958};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	and.b64  	%rd4990, %rd18371, %rd18372;
	xor.b64  	%rd4991, %rd18371, %rd18372;
	and.b64  	%rd4992, %rd4991, %rd18373;
	or.b64  	%rd4993, %rd4992, %rd4990;
	add.s64 	%rd4994, %rd4984, %rd4993;
	add.s64 	%rd18370, %rd4994, %rd4989;
	add.u64 	%rd349, %SPL, 240;
	mov.u32 	%r12588, 16;

BB0_67:
	shr.u64 	%rd4996, %rd18363, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2960,%dummy}, %rd18363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2961}, %rd18363;
	}
	shf.r.wrap.b32 	%r2962, %r2961, %r2960, 19;
	shf.r.wrap.b32 	%r2963, %r2960, %r2961, 19;
	mov.b64 	%rd4997, {%r2963, %r2962};
	xor.b64  	%rd4998, %rd4997, %rd4996;
	shf.l.wrap.b32 	%r2964, %r2960, %r2961, 3;
	shf.l.wrap.b32 	%r2965, %r2961, %r2960, 3;
	mov.b64 	%rd4999, {%r2965, %r2964};
	xor.b64  	%rd5000, %rd4998, %rd4999;
	shr.u64 	%rd5001, %rd18379, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2966,%dummy}, %rd18379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2967}, %rd18379;
	}
	shf.r.wrap.b32 	%r2968, %r2967, %r2966, 1;
	shf.r.wrap.b32 	%r2969, %r2966, %r2967, 1;
	mov.b64 	%rd5002, {%r2969, %r2968};
	xor.b64  	%rd5003, %rd5002, %rd5001;
	shf.r.wrap.b32 	%r2970, %r2967, %r2966, 8;
	shf.r.wrap.b32 	%r2971, %r2966, %r2967, 8;
	mov.b64 	%rd5004, {%r2971, %r2970};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	add.s64 	%rd5006, %rd18368, %rd18378;
	add.s64 	%rd5007, %rd5006, %rd5000;
	add.s64 	%rd18378, %rd5007, %rd5005;
	shr.u64 	%rd5008, %rd18362, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2972,%dummy}, %rd18362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2973}, %rd18362;
	}
	shf.r.wrap.b32 	%r2974, %r2973, %r2972, 19;
	shf.r.wrap.b32 	%r2975, %r2972, %r2973, 19;
	mov.b64 	%rd5009, {%r2975, %r2974};
	xor.b64  	%rd5010, %rd5009, %rd5008;
	shf.l.wrap.b32 	%r2976, %r2972, %r2973, 3;
	shf.l.wrap.b32 	%r2977, %r2973, %r2972, 3;
	mov.b64 	%rd5011, {%r2977, %r2976};
	xor.b64  	%rd5012, %rd5010, %rd5011;
	shr.u64 	%rd5013, %rd18380, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd18380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd18380;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 1;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 1;
	mov.b64 	%rd5014, {%r2981, %r2980};
	xor.b64  	%rd5015, %rd5014, %rd5013;
	shf.r.wrap.b32 	%r2982, %r2979, %r2978, 8;
	shf.r.wrap.b32 	%r2983, %r2978, %r2979, 8;
	mov.b64 	%rd5016, {%r2983, %r2982};
	xor.b64  	%rd5017, %rd5015, %rd5016;
	add.s64 	%rd5018, %rd18367, %rd18379;
	add.s64 	%rd5019, %rd5018, %rd5012;
	add.s64 	%rd18379, %rd5019, %rd5017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2984,%dummy}, %rd18378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2985}, %rd18378;
	}
	shf.r.wrap.b32 	%r2986, %r2985, %r2984, 19;
	shf.r.wrap.b32 	%r2987, %r2984, %r2985, 19;
	mov.b64 	%rd5020, {%r2987, %r2986};
	shf.l.wrap.b32 	%r2988, %r2984, %r2985, 3;
	shf.l.wrap.b32 	%r2989, %r2985, %r2984, 3;
	mov.b64 	%rd5021, {%r2989, %r2988};
	shr.u64 	%rd5022, %rd18378, 6;
	xor.b64  	%rd5023, %rd5020, %rd5022;
	xor.b64  	%rd5024, %rd5023, %rd5021;
	shr.u64 	%rd5025, %rd18381, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd18381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd18381;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 1;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 1;
	mov.b64 	%rd5026, {%r2993, %r2992};
	xor.b64  	%rd5027, %rd5026, %rd5025;
	shf.r.wrap.b32 	%r2994, %r2991, %r2990, 8;
	shf.r.wrap.b32 	%r2995, %r2990, %r2991, 8;
	mov.b64 	%rd5028, {%r2995, %r2994};
	xor.b64  	%rd5029, %rd5027, %rd5028;
	add.s64 	%rd5030, %rd18366, %rd18380;
	add.s64 	%rd5031, %rd5030, %rd5024;
	add.s64 	%rd18380, %rd5031, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2996,%dummy}, %rd18379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2997}, %rd18379;
	}
	shf.r.wrap.b32 	%r2998, %r2997, %r2996, 19;
	shf.r.wrap.b32 	%r2999, %r2996, %r2997, 19;
	mov.b64 	%rd5032, {%r2999, %r2998};
	shf.l.wrap.b32 	%r3000, %r2996, %r2997, 3;
	shf.l.wrap.b32 	%r3001, %r2997, %r2996, 3;
	mov.b64 	%rd5033, {%r3001, %r3000};
	shr.u64 	%rd5034, %rd18379, 6;
	xor.b64  	%rd5035, %rd5032, %rd5034;
	xor.b64  	%rd5036, %rd5035, %rd5033;
	shr.u64 	%rd5037, %rd18382, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3002,%dummy}, %rd18382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd18382;
	}
	shf.r.wrap.b32 	%r3004, %r3003, %r3002, 1;
	shf.r.wrap.b32 	%r3005, %r3002, %r3003, 1;
	mov.b64 	%rd5038, {%r3005, %r3004};
	xor.b64  	%rd5039, %rd5038, %rd5037;
	shf.r.wrap.b32 	%r3006, %r3003, %r3002, 8;
	shf.r.wrap.b32 	%r3007, %r3002, %r3003, 8;
	mov.b64 	%rd5040, {%r3007, %r3006};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	add.s64 	%rd5042, %rd18365, %rd18381;
	add.s64 	%rd5043, %rd5042, %rd5036;
	add.s64 	%rd18381, %rd5043, %rd5041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3008,%dummy}, %rd18380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3009}, %rd18380;
	}
	shf.r.wrap.b32 	%r3010, %r3009, %r3008, 19;
	shf.r.wrap.b32 	%r3011, %r3008, %r3009, 19;
	mov.b64 	%rd5044, {%r3011, %r3010};
	shf.l.wrap.b32 	%r3012, %r3008, %r3009, 3;
	shf.l.wrap.b32 	%r3013, %r3009, %r3008, 3;
	mov.b64 	%rd5045, {%r3013, %r3012};
	shr.u64 	%rd5046, %rd18380, 6;
	xor.b64  	%rd5047, %rd5044, %rd5046;
	xor.b64  	%rd5048, %rd5047, %rd5045;
	shr.u64 	%rd5049, %rd18383, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd18383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd18383;
	}
	shf.r.wrap.b32 	%r3016, %r3015, %r3014, 1;
	shf.r.wrap.b32 	%r3017, %r3014, %r3015, 1;
	mov.b64 	%rd5050, {%r3017, %r3016};
	xor.b64  	%rd5051, %rd5050, %rd5049;
	shf.r.wrap.b32 	%r3018, %r3015, %r3014, 8;
	shf.r.wrap.b32 	%r3019, %r3014, %r3015, 8;
	mov.b64 	%rd5052, {%r3019, %r3018};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	add.s64 	%rd5054, %rd18364, %rd18382;
	add.s64 	%rd5055, %rd5054, %rd5048;
	add.s64 	%rd18382, %rd5055, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3020,%dummy}, %rd18381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3021}, %rd18381;
	}
	shf.r.wrap.b32 	%r3022, %r3021, %r3020, 19;
	shf.r.wrap.b32 	%r3023, %r3020, %r3021, 19;
	mov.b64 	%rd5056, {%r3023, %r3022};
	shf.l.wrap.b32 	%r3024, %r3020, %r3021, 3;
	shf.l.wrap.b32 	%r3025, %r3021, %r3020, 3;
	mov.b64 	%rd5057, {%r3025, %r3024};
	shr.u64 	%rd5058, %rd18381, 6;
	xor.b64  	%rd5059, %rd5056, %rd5058;
	xor.b64  	%rd5060, %rd5059, %rd5057;
	shr.u64 	%rd5061, %rd18384, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd18384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd18384;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 1;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 1;
	mov.b64 	%rd5062, {%r3029, %r3028};
	xor.b64  	%rd5063, %rd5062, %rd5061;
	shf.r.wrap.b32 	%r3030, %r3027, %r3026, 8;
	shf.r.wrap.b32 	%r3031, %r3026, %r3027, 8;
	mov.b64 	%rd5064, {%r3031, %r3030};
	xor.b64  	%rd5065, %rd5063, %rd5064;
	add.s64 	%rd5066, %rd18363, %rd18383;
	add.s64 	%rd5067, %rd5066, %rd5060;
	add.s64 	%rd18383, %rd5067, %rd5065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3032,%dummy}, %rd18382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd18382;
	}
	shf.r.wrap.b32 	%r3034, %r3033, %r3032, 19;
	shf.r.wrap.b32 	%r3035, %r3032, %r3033, 19;
	mov.b64 	%rd5068, {%r3035, %r3034};
	shf.l.wrap.b32 	%r3036, %r3032, %r3033, 3;
	shf.l.wrap.b32 	%r3037, %r3033, %r3032, 3;
	mov.b64 	%rd5069, {%r3037, %r3036};
	shr.u64 	%rd5070, %rd18382, 6;
	xor.b64  	%rd5071, %rd5068, %rd5070;
	xor.b64  	%rd5072, %rd5071, %rd5069;
	shr.u64 	%rd5073, %rd18385, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3039}, %rd18385;
	}
	shf.r.wrap.b32 	%r3040, %r3039, %r3038, 1;
	shf.r.wrap.b32 	%r3041, %r3038, %r3039, 1;
	mov.b64 	%rd5074, {%r3041, %r3040};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.r.wrap.b32 	%r3042, %r3039, %r3038, 8;
	shf.r.wrap.b32 	%r3043, %r3038, %r3039, 8;
	mov.b64 	%rd5076, {%r3043, %r3042};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	add.s64 	%rd5078, %rd18362, %rd18384;
	add.s64 	%rd5079, %rd5078, %rd5072;
	add.s64 	%rd18384, %rd5079, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3044,%dummy}, %rd18383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3045}, %rd18383;
	}
	shf.r.wrap.b32 	%r3046, %r3045, %r3044, 19;
	shf.r.wrap.b32 	%r3047, %r3044, %r3045, 19;
	mov.b64 	%rd5080, {%r3047, %r3046};
	shf.l.wrap.b32 	%r3048, %r3044, %r3045, 3;
	shf.l.wrap.b32 	%r3049, %r3045, %r3044, 3;
	mov.b64 	%rd5081, {%r3049, %r3048};
	shr.u64 	%rd5082, %rd18383, 6;
	xor.b64  	%rd5083, %rd5080, %rd5082;
	xor.b64  	%rd5084, %rd5083, %rd5081;
	shr.u64 	%rd5085, %rd18369, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd18369;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 1;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 1;
	mov.b64 	%rd5086, {%r3053, %r3052};
	xor.b64  	%rd5087, %rd5086, %rd5085;
	shf.r.wrap.b32 	%r3054, %r3051, %r3050, 8;
	shf.r.wrap.b32 	%r3055, %r3050, %r3051, 8;
	mov.b64 	%rd5088, {%r3055, %r3054};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	add.s64 	%rd5090, %rd18378, %rd18385;
	add.s64 	%rd5091, %rd5090, %rd5084;
	add.s64 	%rd18385, %rd5091, %rd5089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3056,%dummy}, %rd18384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3057}, %rd18384;
	}
	shf.r.wrap.b32 	%r3058, %r3057, %r3056, 19;
	shf.r.wrap.b32 	%r3059, %r3056, %r3057, 19;
	mov.b64 	%rd5092, {%r3059, %r3058};
	shf.l.wrap.b32 	%r3060, %r3056, %r3057, 3;
	shf.l.wrap.b32 	%r3061, %r3057, %r3056, 3;
	mov.b64 	%rd5093, {%r3061, %r3060};
	shr.u64 	%rd5094, %rd18384, 6;
	xor.b64  	%rd5095, %rd5092, %rd5094;
	xor.b64  	%rd5096, %rd5095, %rd5093;
	shr.u64 	%rd5097, %rd18368, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3062,%dummy}, %rd18368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3063}, %rd18368;
	}
	shf.r.wrap.b32 	%r3064, %r3063, %r3062, 1;
	shf.r.wrap.b32 	%r3065, %r3062, %r3063, 1;
	mov.b64 	%rd5098, {%r3065, %r3064};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.r.wrap.b32 	%r3066, %r3063, %r3062, 8;
	shf.r.wrap.b32 	%r3067, %r3062, %r3063, 8;
	mov.b64 	%rd5100, {%r3067, %r3066};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	add.s64 	%rd5102, %rd18379, %rd18369;
	add.s64 	%rd5103, %rd5102, %rd5096;
	add.s64 	%rd18369, %rd5103, %rd5101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3068,%dummy}, %rd18385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3069}, %rd18385;
	}
	shf.r.wrap.b32 	%r3070, %r3069, %r3068, 19;
	shf.r.wrap.b32 	%r3071, %r3068, %r3069, 19;
	mov.b64 	%rd5104, {%r3071, %r3070};
	shf.l.wrap.b32 	%r3072, %r3068, %r3069, 3;
	shf.l.wrap.b32 	%r3073, %r3069, %r3068, 3;
	mov.b64 	%rd5105, {%r3073, %r3072};
	shr.u64 	%rd5106, %rd18385, 6;
	xor.b64  	%rd5107, %rd5104, %rd5106;
	xor.b64  	%rd5108, %rd5107, %rd5105;
	shr.u64 	%rd5109, %rd18367, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd18367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd18367;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 1;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 1;
	mov.b64 	%rd5110, {%r3077, %r3076};
	xor.b64  	%rd5111, %rd5110, %rd5109;
	shf.r.wrap.b32 	%r3078, %r3075, %r3074, 8;
	shf.r.wrap.b32 	%r3079, %r3074, %r3075, 8;
	mov.b64 	%rd5112, {%r3079, %r3078};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	add.s64 	%rd5114, %rd18380, %rd18368;
	add.s64 	%rd5115, %rd5114, %rd5108;
	add.s64 	%rd18368, %rd5115, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3080,%dummy}, %rd18369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3081}, %rd18369;
	}
	shf.r.wrap.b32 	%r3082, %r3081, %r3080, 19;
	shf.r.wrap.b32 	%r3083, %r3080, %r3081, 19;
	mov.b64 	%rd5116, {%r3083, %r3082};
	shf.l.wrap.b32 	%r3084, %r3080, %r3081, 3;
	shf.l.wrap.b32 	%r3085, %r3081, %r3080, 3;
	mov.b64 	%rd5117, {%r3085, %r3084};
	shr.u64 	%rd5118, %rd18369, 6;
	xor.b64  	%rd5119, %rd5116, %rd5118;
	xor.b64  	%rd5120, %rd5119, %rd5117;
	shr.u64 	%rd5121, %rd18366, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3086,%dummy}, %rd18366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3087}, %rd18366;
	}
	shf.r.wrap.b32 	%r3088, %r3087, %r3086, 1;
	shf.r.wrap.b32 	%r3089, %r3086, %r3087, 1;
	mov.b64 	%rd5122, {%r3089, %r3088};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.r.wrap.b32 	%r3090, %r3087, %r3086, 8;
	shf.r.wrap.b32 	%r3091, %r3086, %r3087, 8;
	mov.b64 	%rd5124, {%r3091, %r3090};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	add.s64 	%rd5126, %rd18381, %rd18367;
	add.s64 	%rd5127, %rd5126, %rd5120;
	add.s64 	%rd18367, %rd5127, %rd5125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3092,%dummy}, %rd18368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd18368;
	}
	shf.r.wrap.b32 	%r3094, %r3093, %r3092, 19;
	shf.r.wrap.b32 	%r3095, %r3092, %r3093, 19;
	mov.b64 	%rd5128, {%r3095, %r3094};
	shf.l.wrap.b32 	%r3096, %r3092, %r3093, 3;
	shf.l.wrap.b32 	%r3097, %r3093, %r3092, 3;
	mov.b64 	%rd5129, {%r3097, %r3096};
	shr.u64 	%rd5130, %rd18368, 6;
	xor.b64  	%rd5131, %rd5128, %rd5130;
	xor.b64  	%rd5132, %rd5131, %rd5129;
	shr.u64 	%rd5133, %rd18365, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd18365;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 1;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 1;
	mov.b64 	%rd5134, {%r3101, %r3100};
	xor.b64  	%rd5135, %rd5134, %rd5133;
	shf.r.wrap.b32 	%r3102, %r3099, %r3098, 8;
	shf.r.wrap.b32 	%r3103, %r3098, %r3099, 8;
	mov.b64 	%rd5136, {%r3103, %r3102};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	add.s64 	%rd5138, %rd18382, %rd18366;
	add.s64 	%rd5139, %rd5138, %rd5132;
	add.s64 	%rd18366, %rd5139, %rd5137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3104,%dummy}, %rd18367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3105}, %rd18367;
	}
	shf.r.wrap.b32 	%r3106, %r3105, %r3104, 19;
	shf.r.wrap.b32 	%r3107, %r3104, %r3105, 19;
	mov.b64 	%rd5140, {%r3107, %r3106};
	shf.l.wrap.b32 	%r3108, %r3104, %r3105, 3;
	shf.l.wrap.b32 	%r3109, %r3105, %r3104, 3;
	mov.b64 	%rd5141, {%r3109, %r3108};
	shr.u64 	%rd5142, %rd18367, 6;
	xor.b64  	%rd5143, %rd5140, %rd5142;
	xor.b64  	%rd5144, %rd5143, %rd5141;
	shr.u64 	%rd5145, %rd18364, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd18364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd18364;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 1;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 1;
	mov.b64 	%rd5146, {%r3113, %r3112};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.r.wrap.b32 	%r3114, %r3111, %r3110, 8;
	shf.r.wrap.b32 	%r3115, %r3110, %r3111, 8;
	mov.b64 	%rd5148, {%r3115, %r3114};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	add.s64 	%rd5150, %rd18383, %rd18365;
	add.s64 	%rd5151, %rd5150, %rd5144;
	add.s64 	%rd18365, %rd5151, %rd5149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3116,%dummy}, %rd18366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3117}, %rd18366;
	}
	shf.r.wrap.b32 	%r3118, %r3117, %r3116, 19;
	shf.r.wrap.b32 	%r3119, %r3116, %r3117, 19;
	mov.b64 	%rd5152, {%r3119, %r3118};
	shf.l.wrap.b32 	%r3120, %r3116, %r3117, 3;
	shf.l.wrap.b32 	%r3121, %r3117, %r3116, 3;
	mov.b64 	%rd5153, {%r3121, %r3120};
	shr.u64 	%rd5154, %rd18366, 6;
	xor.b64  	%rd5155, %rd5152, %rd5154;
	xor.b64  	%rd5156, %rd5155, %rd5153;
	shr.u64 	%rd5157, %rd18363, 7;
	shf.r.wrap.b32 	%r3122, %r2961, %r2960, 1;
	shf.r.wrap.b32 	%r3123, %r2960, %r2961, 1;
	mov.b64 	%rd5158, {%r3123, %r3122};
	xor.b64  	%rd5159, %rd5158, %rd5157;
	shf.r.wrap.b32 	%r3124, %r2961, %r2960, 8;
	shf.r.wrap.b32 	%r3125, %r2960, %r2961, 8;
	mov.b64 	%rd5160, {%r3125, %r3124};
	xor.b64  	%rd5161, %rd5159, %rd5160;
	add.s64 	%rd5162, %rd18384, %rd18364;
	add.s64 	%rd5163, %rd5162, %rd5156;
	add.s64 	%rd18364, %rd5163, %rd5161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd18365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd18365;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 19;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 19;
	mov.b64 	%rd5164, {%r3129, %r3128};
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 3;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 3;
	mov.b64 	%rd5165, {%r3131, %r3130};
	shr.u64 	%rd5166, %rd18365, 6;
	xor.b64  	%rd5167, %rd5164, %rd5166;
	xor.b64  	%rd5168, %rd5167, %rd5165;
	shr.u64 	%rd5169, %rd18362, 7;
	shf.r.wrap.b32 	%r3132, %r2973, %r2972, 1;
	shf.r.wrap.b32 	%r3133, %r2972, %r2973, 1;
	mov.b64 	%rd5170, {%r3133, %r3132};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.r.wrap.b32 	%r3134, %r2973, %r2972, 8;
	shf.r.wrap.b32 	%r3135, %r2972, %r2973, 8;
	mov.b64 	%rd5172, {%r3135, %r3134};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	add.s64 	%rd5174, %rd18385, %rd18363;
	add.s64 	%rd5175, %rd5174, %rd5168;
	add.s64 	%rd18363, %rd5175, %rd5173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd18364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd18364;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 19;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 19;
	mov.b64 	%rd5176, {%r3139, %r3138};
	shf.l.wrap.b32 	%r3140, %r3136, %r3137, 3;
	shf.l.wrap.b32 	%r3141, %r3137, %r3136, 3;
	mov.b64 	%rd5177, {%r3141, %r3140};
	shr.u64 	%rd5178, %rd18364, 6;
	xor.b64  	%rd5179, %rd5176, %rd5178;
	xor.b64  	%rd5180, %rd5179, %rd5177;
	shf.r.wrap.b32 	%r3142, %r2985, %r2984, 1;
	shf.r.wrap.b32 	%r3143, %r2984, %r2985, 1;
	mov.b64 	%rd5181, {%r3143, %r3142};
	shf.r.wrap.b32 	%r3144, %r2985, %r2984, 8;
	shf.r.wrap.b32 	%r3145, %r2984, %r2985, 8;
	mov.b64 	%rd5182, {%r3145, %r3144};
	shr.u64 	%rd5183, %rd18378, 7;
	xor.b64  	%rd5184, %rd5181, %rd5183;
	xor.b64  	%rd5185, %rd5184, %rd5182;
	add.s64 	%rd5186, %rd18369, %rd18362;
	add.s64 	%rd5187, %rd5186, %rd5180;
	add.s64 	%rd18362, %rd5187, %rd5185;
	mul.wide.s32 	%rd5188, %r12588, 8;
	mov.u64 	%rd5189, k_sha512;
	add.s64 	%rd5190, %rd5189, %rd5188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd18374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd18374;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 18;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 18;
	mov.b64 	%rd5191, {%r3149, %r3148};
	shf.r.wrap.b32 	%r3150, %r3147, %r3146, 14;
	shf.r.wrap.b32 	%r3151, %r3146, %r3147, 14;
	mov.b64 	%rd5192, {%r3151, %r3150};
	xor.b64  	%rd5193, %rd5191, %rd5192;
	shf.l.wrap.b32 	%r3152, %r3146, %r3147, 23;
	shf.l.wrap.b32 	%r3153, %r3147, %r3146, 23;
	mov.b64 	%rd5194, {%r3153, %r3152};
	xor.b64  	%rd5195, %rd5193, %rd5194;
	xor.b64  	%rd5196, %rd18375, %rd18376;
	and.b64  	%rd5197, %rd18374, %rd5196;
	xor.b64  	%rd5198, %rd5197, %rd18376;
	add.s64 	%rd5199, %rd5198, %rd18377;
	add.s64 	%rd5200, %rd5199, %rd18378;
	ld.const.u64 	%rd5201, [%rd5190];
	add.s64 	%rd5202, %rd5200, %rd5201;
	add.s64 	%rd5203, %rd5202, %rd5195;
	add.s64 	%rd5204, %rd5203, %rd18373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3154}, %rd18370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3155,%dummy}, %rd18370;
	}
	shf.l.wrap.b32 	%r3156, %r3155, %r3154, 30;
	shf.l.wrap.b32 	%r3157, %r3154, %r3155, 30;
	mov.b64 	%rd5205, {%r3157, %r3156};
	shf.r.wrap.b32 	%r3158, %r3154, %r3155, 28;
	shf.r.wrap.b32 	%r3159, %r3155, %r3154, 28;
	mov.b64 	%rd5206, {%r3159, %r3158};
	xor.b64  	%rd5207, %rd5205, %rd5206;
	shf.l.wrap.b32 	%r3160, %r3155, %r3154, 25;
	shf.l.wrap.b32 	%r3161, %r3154, %r3155, 25;
	mov.b64 	%rd5208, {%r3161, %r3160};
	xor.b64  	%rd5209, %rd5207, %rd5208;
	xor.b64  	%rd5210, %rd18370, %rd18371;
	and.b64  	%rd5211, %rd5210, %rd18372;
	and.b64  	%rd5212, %rd18370, %rd18371;
	or.b64  	%rd5213, %rd5211, %rd5212;
	add.s64 	%rd5214, %rd5203, %rd5213;
	add.s64 	%rd5215, %rd5214, %rd5209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd5204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd5204;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 14;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 14;
	mov.b64 	%rd5216, {%r3165, %r3164};
	shf.r.wrap.b32 	%r3166, %r3163, %r3162, 18;
	shf.r.wrap.b32 	%r3167, %r3162, %r3163, 18;
	mov.b64 	%rd5217, {%r3167, %r3166};
	xor.b64  	%rd5218, %rd5217, %rd5216;
	shf.l.wrap.b32 	%r3168, %r3162, %r3163, 23;
	shf.l.wrap.b32 	%r3169, %r3163, %r3162, 23;
	mov.b64 	%rd5219, {%r3169, %r3168};
	xor.b64  	%rd5220, %rd5218, %rd5219;
	xor.b64  	%rd5221, %rd18374, %rd18375;
	and.b64  	%rd5222, %rd5204, %rd5221;
	xor.b64  	%rd5223, %rd5222, %rd18375;
	add.s64 	%rd5224, %rd18379, %rd18376;
	ld.const.u64 	%rd5225, [%rd5190+8];
	add.s64 	%rd5226, %rd5224, %rd5225;
	add.s64 	%rd5227, %rd5226, %rd5223;
	add.s64 	%rd5228, %rd5227, %rd5220;
	add.s64 	%rd5229, %rd5228, %rd18372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd5215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3171}, %rd5215;
	}
	shf.r.wrap.b32 	%r3172, %r3171, %r3170, 28;
	shf.r.wrap.b32 	%r3173, %r3170, %r3171, 28;
	mov.b64 	%rd5230, {%r3173, %r3172};
	shf.l.wrap.b32 	%r3174, %r3170, %r3171, 30;
	shf.l.wrap.b32 	%r3175, %r3171, %r3170, 30;
	mov.b64 	%rd5231, {%r3175, %r3174};
	xor.b64  	%rd5232, %rd5231, %rd5230;
	shf.l.wrap.b32 	%r3176, %r3170, %r3171, 25;
	shf.l.wrap.b32 	%r3177, %r3171, %r3170, 25;
	mov.b64 	%rd5233, {%r3177, %r3176};
	xor.b64  	%rd5234, %rd5232, %rd5233;
	and.b64  	%rd5235, %rd5215, %rd18370;
	xor.b64  	%rd5236, %rd5215, %rd18370;
	and.b64  	%rd5237, %rd5236, %rd18371;
	or.b64  	%rd5238, %rd5237, %rd5235;
	add.s64 	%rd5239, %rd5228, %rd5238;
	add.s64 	%rd5240, %rd5239, %rd5234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd5229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd5229;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 14;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 14;
	mov.b64 	%rd5241, {%r3181, %r3180};
	shf.r.wrap.b32 	%r3182, %r3179, %r3178, 18;
	shf.r.wrap.b32 	%r3183, %r3178, %r3179, 18;
	mov.b64 	%rd5242, {%r3183, %r3182};
	xor.b64  	%rd5243, %rd5242, %rd5241;
	shf.l.wrap.b32 	%r3184, %r3178, %r3179, 23;
	shf.l.wrap.b32 	%r3185, %r3179, %r3178, 23;
	mov.b64 	%rd5244, {%r3185, %r3184};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	xor.b64  	%rd5246, %rd5204, %rd18374;
	and.b64  	%rd5247, %rd5229, %rd5246;
	xor.b64  	%rd5248, %rd5247, %rd18374;
	add.s64 	%rd5249, %rd18380, %rd18375;
	ld.const.u64 	%rd5250, [%rd5190+16];
	add.s64 	%rd5251, %rd5249, %rd5250;
	add.s64 	%rd5252, %rd5251, %rd5248;
	add.s64 	%rd5253, %rd5252, %rd5245;
	add.s64 	%rd5254, %rd5253, %rd18371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd5240;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 28;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 28;
	mov.b64 	%rd5255, {%r3189, %r3188};
	shf.l.wrap.b32 	%r3190, %r3186, %r3187, 30;
	shf.l.wrap.b32 	%r3191, %r3187, %r3186, 30;
	mov.b64 	%rd5256, {%r3191, %r3190};
	xor.b64  	%rd5257, %rd5256, %rd5255;
	shf.l.wrap.b32 	%r3192, %r3186, %r3187, 25;
	shf.l.wrap.b32 	%r3193, %r3187, %r3186, 25;
	mov.b64 	%rd5258, {%r3193, %r3192};
	xor.b64  	%rd5259, %rd5257, %rd5258;
	and.b64  	%rd5260, %rd5240, %rd5215;
	xor.b64  	%rd5261, %rd5240, %rd5215;
	and.b64  	%rd5262, %rd5261, %rd18370;
	or.b64  	%rd5263, %rd5262, %rd5260;
	add.s64 	%rd5264, %rd5253, %rd5263;
	add.s64 	%rd5265, %rd5264, %rd5259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd5254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd5254;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 14;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 14;
	mov.b64 	%rd5266, {%r3197, %r3196};
	shf.r.wrap.b32 	%r3198, %r3195, %r3194, 18;
	shf.r.wrap.b32 	%r3199, %r3194, %r3195, 18;
	mov.b64 	%rd5267, {%r3199, %r3198};
	xor.b64  	%rd5268, %rd5267, %rd5266;
	shf.l.wrap.b32 	%r3200, %r3194, %r3195, 23;
	shf.l.wrap.b32 	%r3201, %r3195, %r3194, 23;
	mov.b64 	%rd5269, {%r3201, %r3200};
	xor.b64  	%rd5270, %rd5268, %rd5269;
	xor.b64  	%rd5271, %rd5229, %rd5204;
	and.b64  	%rd5272, %rd5254, %rd5271;
	xor.b64  	%rd5273, %rd5272, %rd5204;
	add.s64 	%rd5274, %rd18381, %rd18374;
	ld.const.u64 	%rd5275, [%rd5190+24];
	add.s64 	%rd5276, %rd5274, %rd5275;
	add.s64 	%rd5277, %rd5276, %rd5273;
	add.s64 	%rd5278, %rd5277, %rd5270;
	add.s64 	%rd5279, %rd5278, %rd18370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3202,%dummy}, %rd5265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3203}, %rd5265;
	}
	shf.r.wrap.b32 	%r3204, %r3203, %r3202, 28;
	shf.r.wrap.b32 	%r3205, %r3202, %r3203, 28;
	mov.b64 	%rd5280, {%r3205, %r3204};
	shf.l.wrap.b32 	%r3206, %r3202, %r3203, 30;
	shf.l.wrap.b32 	%r3207, %r3203, %r3202, 30;
	mov.b64 	%rd5281, {%r3207, %r3206};
	xor.b64  	%rd5282, %rd5281, %rd5280;
	shf.l.wrap.b32 	%r3208, %r3202, %r3203, 25;
	shf.l.wrap.b32 	%r3209, %r3203, %r3202, 25;
	mov.b64 	%rd5283, {%r3209, %r3208};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	and.b64  	%rd5285, %rd5265, %rd5240;
	xor.b64  	%rd5286, %rd5265, %rd5240;
	and.b64  	%rd5287, %rd5286, %rd5215;
	or.b64  	%rd5288, %rd5287, %rd5285;
	add.s64 	%rd5289, %rd5278, %rd5288;
	add.s64 	%rd5290, %rd5289, %rd5284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd5279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd5279;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 14;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 14;
	mov.b64 	%rd5291, {%r3213, %r3212};
	shf.r.wrap.b32 	%r3214, %r3211, %r3210, 18;
	shf.r.wrap.b32 	%r3215, %r3210, %r3211, 18;
	mov.b64 	%rd5292, {%r3215, %r3214};
	xor.b64  	%rd5293, %rd5292, %rd5291;
	shf.l.wrap.b32 	%r3216, %r3210, %r3211, 23;
	shf.l.wrap.b32 	%r3217, %r3211, %r3210, 23;
	mov.b64 	%rd5294, {%r3217, %r3216};
	xor.b64  	%rd5295, %rd5293, %rd5294;
	xor.b64  	%rd5296, %rd5254, %rd5229;
	and.b64  	%rd5297, %rd5279, %rd5296;
	xor.b64  	%rd5298, %rd5297, %rd5229;
	add.s64 	%rd5299, %rd5204, %rd18382;
	ld.const.u64 	%rd5300, [%rd5190+32];
	add.s64 	%rd5301, %rd5299, %rd5300;
	add.s64 	%rd5302, %rd5301, %rd5298;
	add.s64 	%rd5303, %rd5302, %rd5295;
	add.s64 	%rd5304, %rd5303, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd5290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd5290;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 28;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 28;
	mov.b64 	%rd5305, {%r3221, %r3220};
	shf.l.wrap.b32 	%r3222, %r3218, %r3219, 30;
	shf.l.wrap.b32 	%r3223, %r3219, %r3218, 30;
	mov.b64 	%rd5306, {%r3223, %r3222};
	xor.b64  	%rd5307, %rd5306, %rd5305;
	shf.l.wrap.b32 	%r3224, %r3218, %r3219, 25;
	shf.l.wrap.b32 	%r3225, %r3219, %r3218, 25;
	mov.b64 	%rd5308, {%r3225, %r3224};
	xor.b64  	%rd5309, %rd5307, %rd5308;
	and.b64  	%rd5310, %rd5290, %rd5265;
	xor.b64  	%rd5311, %rd5290, %rd5265;
	and.b64  	%rd5312, %rd5311, %rd5240;
	or.b64  	%rd5313, %rd5312, %rd5310;
	add.s64 	%rd5314, %rd5303, %rd5313;
	add.s64 	%rd5315, %rd5314, %rd5309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd5304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3227}, %rd5304;
	}
	shf.r.wrap.b32 	%r3228, %r3227, %r3226, 14;
	shf.r.wrap.b32 	%r3229, %r3226, %r3227, 14;
	mov.b64 	%rd5316, {%r3229, %r3228};
	shf.r.wrap.b32 	%r3230, %r3227, %r3226, 18;
	shf.r.wrap.b32 	%r3231, %r3226, %r3227, 18;
	mov.b64 	%rd5317, {%r3231, %r3230};
	xor.b64  	%rd5318, %rd5317, %rd5316;
	shf.l.wrap.b32 	%r3232, %r3226, %r3227, 23;
	shf.l.wrap.b32 	%r3233, %r3227, %r3226, 23;
	mov.b64 	%rd5319, {%r3233, %r3232};
	xor.b64  	%rd5320, %rd5318, %rd5319;
	xor.b64  	%rd5321, %rd5279, %rd5254;
	and.b64  	%rd5322, %rd5304, %rd5321;
	xor.b64  	%rd5323, %rd5322, %rd5254;
	add.s64 	%rd5324, %rd5229, %rd18383;
	ld.const.u64 	%rd5325, [%rd5190+40];
	add.s64 	%rd5326, %rd5324, %rd5325;
	add.s64 	%rd5327, %rd5326, %rd5323;
	add.s64 	%rd5328, %rd5327, %rd5320;
	add.s64 	%rd5329, %rd5328, %rd5240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3234,%dummy}, %rd5315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd5315;
	}
	shf.r.wrap.b32 	%r3236, %r3235, %r3234, 28;
	shf.r.wrap.b32 	%r3237, %r3234, %r3235, 28;
	mov.b64 	%rd5330, {%r3237, %r3236};
	shf.l.wrap.b32 	%r3238, %r3234, %r3235, 30;
	shf.l.wrap.b32 	%r3239, %r3235, %r3234, 30;
	mov.b64 	%rd5331, {%r3239, %r3238};
	xor.b64  	%rd5332, %rd5331, %rd5330;
	shf.l.wrap.b32 	%r3240, %r3234, %r3235, 25;
	shf.l.wrap.b32 	%r3241, %r3235, %r3234, 25;
	mov.b64 	%rd5333, {%r3241, %r3240};
	xor.b64  	%rd5334, %rd5332, %rd5333;
	and.b64  	%rd5335, %rd5315, %rd5290;
	xor.b64  	%rd5336, %rd5315, %rd5290;
	and.b64  	%rd5337, %rd5336, %rd5265;
	or.b64  	%rd5338, %rd5337, %rd5335;
	add.s64 	%rd5339, %rd5328, %rd5338;
	add.s64 	%rd5340, %rd5339, %rd5334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd5329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd5329;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 14;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 14;
	mov.b64 	%rd5341, {%r3245, %r3244};
	shf.r.wrap.b32 	%r3246, %r3243, %r3242, 18;
	shf.r.wrap.b32 	%r3247, %r3242, %r3243, 18;
	mov.b64 	%rd5342, {%r3247, %r3246};
	xor.b64  	%rd5343, %rd5342, %rd5341;
	shf.l.wrap.b32 	%r3248, %r3242, %r3243, 23;
	shf.l.wrap.b32 	%r3249, %r3243, %r3242, 23;
	mov.b64 	%rd5344, {%r3249, %r3248};
	xor.b64  	%rd5345, %rd5343, %rd5344;
	xor.b64  	%rd5346, %rd5304, %rd5279;
	and.b64  	%rd5347, %rd5329, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd5279;
	add.s64 	%rd5349, %rd5254, %rd18384;
	ld.const.u64 	%rd5350, [%rd5190+48];
	add.s64 	%rd5351, %rd5349, %rd5350;
	add.s64 	%rd5352, %rd5351, %rd5348;
	add.s64 	%rd5353, %rd5352, %rd5345;
	add.s64 	%rd5354, %rd5353, %rd5265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd5340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3251}, %rd5340;
	}
	shf.r.wrap.b32 	%r3252, %r3251, %r3250, 28;
	shf.r.wrap.b32 	%r3253, %r3250, %r3251, 28;
	mov.b64 	%rd5355, {%r3253, %r3252};
	shf.l.wrap.b32 	%r3254, %r3250, %r3251, 30;
	shf.l.wrap.b32 	%r3255, %r3251, %r3250, 30;
	mov.b64 	%rd5356, {%r3255, %r3254};
	xor.b64  	%rd5357, %rd5356, %rd5355;
	shf.l.wrap.b32 	%r3256, %r3250, %r3251, 25;
	shf.l.wrap.b32 	%r3257, %r3251, %r3250, 25;
	mov.b64 	%rd5358, {%r3257, %r3256};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	and.b64  	%rd5360, %rd5340, %rd5315;
	xor.b64  	%rd5361, %rd5340, %rd5315;
	and.b64  	%rd5362, %rd5361, %rd5290;
	or.b64  	%rd5363, %rd5362, %rd5360;
	add.s64 	%rd5364, %rd5353, %rd5363;
	add.s64 	%rd5365, %rd5364, %rd5359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd5354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd5354;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 14;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 14;
	mov.b64 	%rd5366, {%r3261, %r3260};
	shf.r.wrap.b32 	%r3262, %r3259, %r3258, 18;
	shf.r.wrap.b32 	%r3263, %r3258, %r3259, 18;
	mov.b64 	%rd5367, {%r3263, %r3262};
	xor.b64  	%rd5368, %rd5367, %rd5366;
	shf.l.wrap.b32 	%r3264, %r3258, %r3259, 23;
	shf.l.wrap.b32 	%r3265, %r3259, %r3258, 23;
	mov.b64 	%rd5369, {%r3265, %r3264};
	xor.b64  	%rd5370, %rd5368, %rd5369;
	xor.b64  	%rd5371, %rd5329, %rd5304;
	and.b64  	%rd5372, %rd5354, %rd5371;
	xor.b64  	%rd5373, %rd5372, %rd5304;
	add.s64 	%rd5374, %rd5279, %rd18385;
	ld.const.u64 	%rd5375, [%rd5190+56];
	add.s64 	%rd5376, %rd5374, %rd5375;
	add.s64 	%rd5377, %rd5376, %rd5373;
	add.s64 	%rd5378, %rd5377, %rd5370;
	add.s64 	%rd5379, %rd5378, %rd5290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd5365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd5365;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 28;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 28;
	mov.b64 	%rd5380, {%r3269, %r3268};
	shf.l.wrap.b32 	%r3270, %r3266, %r3267, 30;
	shf.l.wrap.b32 	%r3271, %r3267, %r3266, 30;
	mov.b64 	%rd5381, {%r3271, %r3270};
	xor.b64  	%rd5382, %rd5381, %rd5380;
	shf.l.wrap.b32 	%r3272, %r3266, %r3267, 25;
	shf.l.wrap.b32 	%r3273, %r3267, %r3266, 25;
	mov.b64 	%rd5383, {%r3273, %r3272};
	xor.b64  	%rd5384, %rd5382, %rd5383;
	and.b64  	%rd5385, %rd5365, %rd5340;
	xor.b64  	%rd5386, %rd5365, %rd5340;
	and.b64  	%rd5387, %rd5386, %rd5315;
	or.b64  	%rd5388, %rd5387, %rd5385;
	add.s64 	%rd5389, %rd5378, %rd5388;
	add.s64 	%rd5390, %rd5389, %rd5384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd5379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd5379;
	}
	shf.r.wrap.b32 	%r3276, %r3275, %r3274, 14;
	shf.r.wrap.b32 	%r3277, %r3274, %r3275, 14;
	mov.b64 	%rd5391, {%r3277, %r3276};
	shf.r.wrap.b32 	%r3278, %r3275, %r3274, 18;
	shf.r.wrap.b32 	%r3279, %r3274, %r3275, 18;
	mov.b64 	%rd5392, {%r3279, %r3278};
	xor.b64  	%rd5393, %rd5392, %rd5391;
	shf.l.wrap.b32 	%r3280, %r3274, %r3275, 23;
	shf.l.wrap.b32 	%r3281, %r3275, %r3274, 23;
	mov.b64 	%rd5394, {%r3281, %r3280};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	xor.b64  	%rd5396, %rd5354, %rd5329;
	and.b64  	%rd5397, %rd5379, %rd5396;
	xor.b64  	%rd5398, %rd5397, %rd5329;
	add.s64 	%rd5399, %rd5304, %rd18369;
	ld.const.u64 	%rd5400, [%rd5190+64];
	add.s64 	%rd5401, %rd5399, %rd5400;
	add.s64 	%rd5402, %rd5401, %rd5398;
	add.s64 	%rd5403, %rd5402, %rd5395;
	add.s64 	%rd5404, %rd5403, %rd5315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd5390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd5390;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 28;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 28;
	mov.b64 	%rd5405, {%r3285, %r3284};
	shf.l.wrap.b32 	%r3286, %r3282, %r3283, 30;
	shf.l.wrap.b32 	%r3287, %r3283, %r3282, 30;
	mov.b64 	%rd5406, {%r3287, %r3286};
	xor.b64  	%rd5407, %rd5406, %rd5405;
	shf.l.wrap.b32 	%r3288, %r3282, %r3283, 25;
	shf.l.wrap.b32 	%r3289, %r3283, %r3282, 25;
	mov.b64 	%rd5408, {%r3289, %r3288};
	xor.b64  	%rd5409, %rd5407, %rd5408;
	and.b64  	%rd5410, %rd5390, %rd5365;
	xor.b64  	%rd5411, %rd5390, %rd5365;
	and.b64  	%rd5412, %rd5411, %rd5340;
	or.b64  	%rd5413, %rd5412, %rd5410;
	add.s64 	%rd5414, %rd5403, %rd5413;
	add.s64 	%rd5415, %rd5414, %rd5409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd5404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd5404;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 14;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 14;
	mov.b64 	%rd5416, {%r3293, %r3292};
	shf.r.wrap.b32 	%r3294, %r3291, %r3290, 18;
	shf.r.wrap.b32 	%r3295, %r3290, %r3291, 18;
	mov.b64 	%rd5417, {%r3295, %r3294};
	xor.b64  	%rd5418, %rd5417, %rd5416;
	shf.l.wrap.b32 	%r3296, %r3290, %r3291, 23;
	shf.l.wrap.b32 	%r3297, %r3291, %r3290, 23;
	mov.b64 	%rd5419, {%r3297, %r3296};
	xor.b64  	%rd5420, %rd5418, %rd5419;
	xor.b64  	%rd5421, %rd5379, %rd5354;
	and.b64  	%rd5422, %rd5404, %rd5421;
	xor.b64  	%rd5423, %rd5422, %rd5354;
	add.s64 	%rd5424, %rd5329, %rd18368;
	ld.const.u64 	%rd5425, [%rd5190+72];
	add.s64 	%rd5426, %rd5424, %rd5425;
	add.s64 	%rd5427, %rd5426, %rd5423;
	add.s64 	%rd5428, %rd5427, %rd5420;
	add.s64 	%rd5429, %rd5428, %rd5340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd5415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd5415;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 28;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 28;
	mov.b64 	%rd5430, {%r3301, %r3300};
	shf.l.wrap.b32 	%r3302, %r3298, %r3299, 30;
	shf.l.wrap.b32 	%r3303, %r3299, %r3298, 30;
	mov.b64 	%rd5431, {%r3303, %r3302};
	xor.b64  	%rd5432, %rd5431, %rd5430;
	shf.l.wrap.b32 	%r3304, %r3298, %r3299, 25;
	shf.l.wrap.b32 	%r3305, %r3299, %r3298, 25;
	mov.b64 	%rd5433, {%r3305, %r3304};
	xor.b64  	%rd5434, %rd5432, %rd5433;
	and.b64  	%rd5435, %rd5415, %rd5390;
	xor.b64  	%rd5436, %rd5415, %rd5390;
	and.b64  	%rd5437, %rd5436, %rd5365;
	or.b64  	%rd5438, %rd5437, %rd5435;
	add.s64 	%rd5439, %rd5428, %rd5438;
	add.s64 	%rd5440, %rd5439, %rd5434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3306,%dummy}, %rd5429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3307}, %rd5429;
	}
	shf.r.wrap.b32 	%r3308, %r3307, %r3306, 14;
	shf.r.wrap.b32 	%r3309, %r3306, %r3307, 14;
	mov.b64 	%rd5441, {%r3309, %r3308};
	shf.r.wrap.b32 	%r3310, %r3307, %r3306, 18;
	shf.r.wrap.b32 	%r3311, %r3306, %r3307, 18;
	mov.b64 	%rd5442, {%r3311, %r3310};
	xor.b64  	%rd5443, %rd5442, %rd5441;
	shf.l.wrap.b32 	%r3312, %r3306, %r3307, 23;
	shf.l.wrap.b32 	%r3313, %r3307, %r3306, 23;
	mov.b64 	%rd5444, {%r3313, %r3312};
	xor.b64  	%rd5445, %rd5443, %rd5444;
	xor.b64  	%rd5446, %rd5404, %rd5379;
	and.b64  	%rd5447, %rd5429, %rd5446;
	xor.b64  	%rd5448, %rd5447, %rd5379;
	add.s64 	%rd5449, %rd5354, %rd18367;
	ld.const.u64 	%rd5450, [%rd5190+80];
	add.s64 	%rd5451, %rd5449, %rd5450;
	add.s64 	%rd5452, %rd5451, %rd5448;
	add.s64 	%rd5453, %rd5452, %rd5445;
	add.s64 	%rd5454, %rd5453, %rd5365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd5440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd5440;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 28;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 28;
	mov.b64 	%rd5455, {%r3317, %r3316};
	shf.l.wrap.b32 	%r3318, %r3314, %r3315, 30;
	shf.l.wrap.b32 	%r3319, %r3315, %r3314, 30;
	mov.b64 	%rd5456, {%r3319, %r3318};
	xor.b64  	%rd5457, %rd5456, %rd5455;
	shf.l.wrap.b32 	%r3320, %r3314, %r3315, 25;
	shf.l.wrap.b32 	%r3321, %r3315, %r3314, 25;
	mov.b64 	%rd5458, {%r3321, %r3320};
	xor.b64  	%rd5459, %rd5457, %rd5458;
	and.b64  	%rd5460, %rd5440, %rd5415;
	xor.b64  	%rd5461, %rd5440, %rd5415;
	and.b64  	%rd5462, %rd5461, %rd5390;
	or.b64  	%rd5463, %rd5462, %rd5460;
	add.s64 	%rd5464, %rd5453, %rd5463;
	add.s64 	%rd5465, %rd5464, %rd5459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd5454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd5454;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 14;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 14;
	mov.b64 	%rd5466, {%r3325, %r3324};
	shf.r.wrap.b32 	%r3326, %r3323, %r3322, 18;
	shf.r.wrap.b32 	%r3327, %r3322, %r3323, 18;
	mov.b64 	%rd5467, {%r3327, %r3326};
	xor.b64  	%rd5468, %rd5467, %rd5466;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 23;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 23;
	mov.b64 	%rd5469, {%r3329, %r3328};
	xor.b64  	%rd5470, %rd5468, %rd5469;
	xor.b64  	%rd5471, %rd5429, %rd5404;
	and.b64  	%rd5472, %rd5454, %rd5471;
	xor.b64  	%rd5473, %rd5472, %rd5404;
	add.s64 	%rd5474, %rd5379, %rd18366;
	ld.const.u64 	%rd5475, [%rd5190+88];
	add.s64 	%rd5476, %rd5474, %rd5475;
	add.s64 	%rd5477, %rd5476, %rd5473;
	add.s64 	%rd5478, %rd5477, %rd5470;
	add.s64 	%rd5479, %rd5478, %rd5390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd5465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd5465;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 28;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 28;
	mov.b64 	%rd5480, {%r3333, %r3332};
	shf.l.wrap.b32 	%r3334, %r3330, %r3331, 30;
	shf.l.wrap.b32 	%r3335, %r3331, %r3330, 30;
	mov.b64 	%rd5481, {%r3335, %r3334};
	xor.b64  	%rd5482, %rd5481, %rd5480;
	shf.l.wrap.b32 	%r3336, %r3330, %r3331, 25;
	shf.l.wrap.b32 	%r3337, %r3331, %r3330, 25;
	mov.b64 	%rd5483, {%r3337, %r3336};
	xor.b64  	%rd5484, %rd5482, %rd5483;
	and.b64  	%rd5485, %rd5465, %rd5440;
	xor.b64  	%rd5486, %rd5465, %rd5440;
	and.b64  	%rd5487, %rd5486, %rd5415;
	or.b64  	%rd5488, %rd5487, %rd5485;
	add.s64 	%rd5489, %rd5478, %rd5488;
	add.s64 	%rd5490, %rd5489, %rd5484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd5479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd5479;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 14;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 14;
	mov.b64 	%rd5491, {%r3341, %r3340};
	shf.r.wrap.b32 	%r3342, %r3339, %r3338, 18;
	shf.r.wrap.b32 	%r3343, %r3338, %r3339, 18;
	mov.b64 	%rd5492, {%r3343, %r3342};
	xor.b64  	%rd5493, %rd5492, %rd5491;
	shf.l.wrap.b32 	%r3344, %r3338, %r3339, 23;
	shf.l.wrap.b32 	%r3345, %r3339, %r3338, 23;
	mov.b64 	%rd5494, {%r3345, %r3344};
	xor.b64  	%rd5495, %rd5493, %rd5494;
	xor.b64  	%rd5496, %rd5454, %rd5429;
	and.b64  	%rd5497, %rd5479, %rd5496;
	xor.b64  	%rd5498, %rd5497, %rd5429;
	add.s64 	%rd5499, %rd5404, %rd18365;
	ld.const.u64 	%rd5500, [%rd5190+96];
	add.s64 	%rd5501, %rd5499, %rd5500;
	add.s64 	%rd5502, %rd5501, %rd5498;
	add.s64 	%rd5503, %rd5502, %rd5495;
	add.s64 	%rd18377, %rd5503, %rd5415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3346,%dummy}, %rd5490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3347}, %rd5490;
	}
	shf.r.wrap.b32 	%r3348, %r3347, %r3346, 28;
	shf.r.wrap.b32 	%r3349, %r3346, %r3347, 28;
	mov.b64 	%rd5504, {%r3349, %r3348};
	shf.l.wrap.b32 	%r3350, %r3346, %r3347, 30;
	shf.l.wrap.b32 	%r3351, %r3347, %r3346, 30;
	mov.b64 	%rd5505, {%r3351, %r3350};
	xor.b64  	%rd5506, %rd5505, %rd5504;
	shf.l.wrap.b32 	%r3352, %r3346, %r3347, 25;
	shf.l.wrap.b32 	%r3353, %r3347, %r3346, 25;
	mov.b64 	%rd5507, {%r3353, %r3352};
	xor.b64  	%rd5508, %rd5506, %rd5507;
	and.b64  	%rd5509, %rd5490, %rd5465;
	xor.b64  	%rd5510, %rd5490, %rd5465;
	and.b64  	%rd5511, %rd5510, %rd5440;
	or.b64  	%rd5512, %rd5511, %rd5509;
	add.s64 	%rd5513, %rd5503, %rd5512;
	add.s64 	%rd18373, %rd5513, %rd5508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd18377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3355}, %rd18377;
	}
	shf.r.wrap.b32 	%r3356, %r3355, %r3354, 14;
	shf.r.wrap.b32 	%r3357, %r3354, %r3355, 14;
	mov.b64 	%rd5514, {%r3357, %r3356};
	shf.r.wrap.b32 	%r3358, %r3355, %r3354, 18;
	shf.r.wrap.b32 	%r3359, %r3354, %r3355, 18;
	mov.b64 	%rd5515, {%r3359, %r3358};
	xor.b64  	%rd5516, %rd5515, %rd5514;
	shf.l.wrap.b32 	%r3360, %r3354, %r3355, 23;
	shf.l.wrap.b32 	%r3361, %r3355, %r3354, 23;
	mov.b64 	%rd5517, {%r3361, %r3360};
	xor.b64  	%rd5518, %rd5516, %rd5517;
	xor.b64  	%rd5519, %rd5479, %rd5454;
	and.b64  	%rd5520, %rd18377, %rd5519;
	xor.b64  	%rd5521, %rd5520, %rd5454;
	add.s64 	%rd5522, %rd5429, %rd18364;
	ld.const.u64 	%rd5523, [%rd5190+104];
	add.s64 	%rd5524, %rd5522, %rd5523;
	add.s64 	%rd5525, %rd5524, %rd5521;
	add.s64 	%rd5526, %rd5525, %rd5518;
	add.s64 	%rd18376, %rd5526, %rd5440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd18373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd18373;
	}
	shf.r.wrap.b32 	%r3364, %r3363, %r3362, 28;
	shf.r.wrap.b32 	%r3365, %r3362, %r3363, 28;
	mov.b64 	%rd5527, {%r3365, %r3364};
	shf.l.wrap.b32 	%r3366, %r3362, %r3363, 30;
	shf.l.wrap.b32 	%r3367, %r3363, %r3362, 30;
	mov.b64 	%rd5528, {%r3367, %r3366};
	xor.b64  	%rd5529, %rd5528, %rd5527;
	shf.l.wrap.b32 	%r3368, %r3362, %r3363, 25;
	shf.l.wrap.b32 	%r3369, %r3363, %r3362, 25;
	mov.b64 	%rd5530, {%r3369, %r3368};
	xor.b64  	%rd5531, %rd5529, %rd5530;
	and.b64  	%rd5532, %rd18373, %rd5490;
	xor.b64  	%rd5533, %rd18373, %rd5490;
	and.b64  	%rd5534, %rd5533, %rd5465;
	or.b64  	%rd5535, %rd5534, %rd5532;
	add.s64 	%rd5536, %rd5526, %rd5535;
	add.s64 	%rd18372, %rd5536, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd18376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd18376;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 14;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 14;
	mov.b64 	%rd5537, {%r3373, %r3372};
	shf.r.wrap.b32 	%r3374, %r3371, %r3370, 18;
	shf.r.wrap.b32 	%r3375, %r3370, %r3371, 18;
	mov.b64 	%rd5538, {%r3375, %r3374};
	xor.b64  	%rd5539, %rd5538, %rd5537;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 23;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 23;
	mov.b64 	%rd5540, {%r3377, %r3376};
	xor.b64  	%rd5541, %rd5539, %rd5540;
	xor.b64  	%rd5542, %rd18377, %rd5479;
	and.b64  	%rd5543, %rd18376, %rd5542;
	xor.b64  	%rd5544, %rd5543, %rd5479;
	add.s64 	%rd5545, %rd5454, %rd18363;
	ld.const.u64 	%rd5546, [%rd5190+112];
	add.s64 	%rd5547, %rd5545, %rd5546;
	add.s64 	%rd5548, %rd5547, %rd5544;
	add.s64 	%rd5549, %rd5548, %rd5541;
	add.s64 	%rd18375, %rd5549, %rd5465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd18372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd18372;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 28;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 28;
	mov.b64 	%rd5550, {%r3381, %r3380};
	shf.l.wrap.b32 	%r3382, %r3378, %r3379, 30;
	shf.l.wrap.b32 	%r3383, %r3379, %r3378, 30;
	mov.b64 	%rd5551, {%r3383, %r3382};
	xor.b64  	%rd5552, %rd5551, %rd5550;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 25;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 25;
	mov.b64 	%rd5553, {%r3385, %r3384};
	xor.b64  	%rd5554, %rd5552, %rd5553;
	and.b64  	%rd5555, %rd18372, %rd18373;
	xor.b64  	%rd5556, %rd18372, %rd18373;
	and.b64  	%rd5557, %rd5556, %rd5490;
	or.b64  	%rd5558, %rd5557, %rd5555;
	add.s64 	%rd5559, %rd5549, %rd5558;
	add.s64 	%rd18371, %rd5559, %rd5554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd18375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd18375;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 14;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 14;
	mov.b64 	%rd5560, {%r3389, %r3388};
	shf.r.wrap.b32 	%r3390, %r3387, %r3386, 18;
	shf.r.wrap.b32 	%r3391, %r3386, %r3387, 18;
	mov.b64 	%rd5561, {%r3391, %r3390};
	xor.b64  	%rd5562, %rd5561, %rd5560;
	shf.l.wrap.b32 	%r3392, %r3386, %r3387, 23;
	shf.l.wrap.b32 	%r3393, %r3387, %r3386, 23;
	mov.b64 	%rd5563, {%r3393, %r3392};
	xor.b64  	%rd5564, %rd5562, %rd5563;
	xor.b64  	%rd5565, %rd18376, %rd18377;
	and.b64  	%rd5566, %rd18375, %rd5565;
	xor.b64  	%rd5567, %rd5566, %rd18377;
	add.s64 	%rd5568, %rd5479, %rd18362;
	ld.const.u64 	%rd5569, [%rd5190+120];
	add.s64 	%rd5570, %rd5568, %rd5569;
	add.s64 	%rd5571, %rd5570, %rd5567;
	add.s64 	%rd5572, %rd5571, %rd5564;
	add.s64 	%rd18374, %rd5572, %rd5490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd18371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3395}, %rd18371;
	}
	shf.r.wrap.b32 	%r3396, %r3395, %r3394, 28;
	shf.r.wrap.b32 	%r3397, %r3394, %r3395, 28;
	mov.b64 	%rd5573, {%r3397, %r3396};
	shf.l.wrap.b32 	%r3398, %r3394, %r3395, 30;
	shf.l.wrap.b32 	%r3399, %r3395, %r3394, 30;
	mov.b64 	%rd5574, {%r3399, %r3398};
	xor.b64  	%rd5575, %rd5574, %rd5573;
	shf.l.wrap.b32 	%r3400, %r3394, %r3395, 25;
	shf.l.wrap.b32 	%r3401, %r3395, %r3394, 25;
	mov.b64 	%rd5576, {%r3401, %r3400};
	xor.b64  	%rd5577, %rd5575, %rd5576;
	and.b64  	%rd5578, %rd18371, %rd18372;
	xor.b64  	%rd5579, %rd18371, %rd18372;
	and.b64  	%rd5580, %rd5579, %rd18373;
	or.b64  	%rd5581, %rd5580, %rd5578;
	add.s64 	%rd5582, %rd5572, %rd5581;
	add.s64 	%rd18370, %rd5582, %rd5577;
	add.s32 	%r12588, %r12588, 16;
	setp.lt.s32	%p41, %r12588, 80;
	@%p41 bra 	BB0_67;

	mov.u64 	%rd18234, 6620516959819538809;
	mov.u64 	%rd18233, 2270897969802886507;
	mov.u64 	%rd18232, -7276294671716946913;
	mov.u64 	%rd18231, 5840696475078001361;
	mov.u64 	%rd18230, -6534734903238641935;
	mov.u64 	%rd18229, 4354685564936845355;
	mov.u64 	%rd18228, -4942790177534073029;
	mov.u64 	%rd18227, 7640891576956012808;
	mov.u32 	%r12590, 0;
	add.s64 	%rd398, %rd18346, %rd18370;
	add.s64 	%rd399, %rd18345, %rd18371;
	st.local.v2.u64 	[%rd349], {%rd398, %rd399};
	add.s64 	%rd400, %rd18344, %rd18372;
	add.s64 	%rd401, %rd18343, %rd18373;
	st.local.v2.u64 	[%rd349+16], {%rd400, %rd401};
	add.s64 	%rd402, %rd18342, %rd18374;
	add.s64 	%rd403, %rd18341, %rd18375;
	st.local.v2.u64 	[%rd349+32], {%rd402, %rd403};
	add.s64 	%rd404, %rd18340, %rd18376;
	add.s64 	%rd405, %rd18339, %rd18377;
	st.local.v2.u64 	[%rd349+48], {%rd404, %rd405};
	st.local.u64 	[%rd1], %rd18227;
	st.local.u64 	[%rd1+8], %rd18228;
	st.local.u64 	[%rd1+16], %rd18229;
	st.local.u64 	[%rd1+24], %rd18230;
	st.local.u64 	[%rd1+32], %rd18231;
	st.local.u64 	[%rd1+40], %rd18232;
	st.local.u64 	[%rd1+48], %rd18233;
	st.local.u64 	[%rd1+56], %rd18234;
	st.local.u32 	[%rd1+192], %r2;
	@%p2 bra 	BB0_72;

	mov.u32 	%r12589, 0;

BB0_70:
	xor.b32  	%r3404, %r12589, 7;
	cvt.s64.s32	%rd5594, %r3404;
	add.s64 	%rd5595, %rd1460, %rd5594;
	ld.local.u8 	%rs45, [%rd5595];
	add.s64 	%rd5596, %rd90, %rd5594;
	st.local.u8 	[%rd5596], %rs45;
	add.s32 	%r12589, %r12589, 1;
	setp.lt.s32	%p43, %r12589, %r2;
	@%p43 bra 	BB0_70;

	ld.local.u32 	%r12590, [%rd1+192];

BB0_72:
	add.s32 	%r3405, %r12590, %r3;
	st.local.u32 	[%rd1+192], %r3405;
	and.b32  	%r106, %r12590, 127;
	add.s32 	%r107, %r106, %r3;
	setp.lt.s32	%p44, %r107, 128;
	@%p44 bra 	BB0_93;
	bra.uni 	BB0_73;

BB0_93:
	setp.lt.s32	%p57, %r3, 1;
	@%p57 bra 	BB0_102;

	and.b32  	%r4174, %r3, 3;
	mov.u32 	%r12605, 0;
	setp.eq.s32	%p58, %r4174, 0;
	@%p58 bra 	BB0_100;

	setp.eq.s32	%p59, %r4174, 1;
	@%p59 bra 	BB0_99;

	setp.eq.s32	%p60, %r4174, 2;
	@%p60 bra 	BB0_98;

	ld.local.u8 	%rs60, [%rd1462+7];
	xor.b32  	%r4176, %r106, 7;
	cvt.u64.u32	%rd6652, %r4176;
	add.s64 	%rd6653, %rd90, %rd6652;
	st.local.u8 	[%rd6653], %rs60;
	add.s32 	%r106, %r106, 1;
	mov.u32 	%r12605, 1;

BB0_98:
	xor.b32  	%r4177, %r12605, 7;
	cvt.u64.u32	%rd6654, %r4177;
	add.s64 	%rd6655, %rd1462, %rd6654;
	ld.local.u8 	%rs61, [%rd6655];
	xor.b32  	%r4178, %r106, 7;
	cvt.s64.s32	%rd6656, %r4178;
	add.s64 	%rd6657, %rd90, %rd6656;
	st.local.u8 	[%rd6657], %rs61;
	add.s32 	%r106, %r106, 1;
	add.s32 	%r12605, %r12605, 1;

BB0_99:
	xor.b32  	%r4179, %r12605, 7;
	cvt.s64.s32	%rd6658, %r4179;
	add.s64 	%rd6659, %rd1462, %rd6658;
	ld.local.u8 	%rs62, [%rd6659];
	xor.b32  	%r4180, %r106, 7;
	cvt.s64.s32	%rd6660, %r4180;
	add.s64 	%rd6661, %rd90, %rd6660;
	st.local.u8 	[%rd6661], %rs62;
	add.s32 	%r106, %r106, 1;
	add.s32 	%r12605, %r12605, 1;

BB0_100:
	setp.lt.u32	%p61, %r3, 4;
	@%p61 bra 	BB0_102;

BB0_101:
	xor.b32  	%r4181, %r12605, 7;
	cvt.s64.s32	%rd6662, %r4181;
	add.s64 	%rd6663, %rd1462, %rd6662;
	ld.local.u8 	%rs63, [%rd6663];
	xor.b32  	%r4182, %r106, 7;
	cvt.s64.s32	%rd6664, %r4182;
	add.s64 	%rd6665, %rd90, %rd6664;
	st.local.u8 	[%rd6665], %rs63;
	add.s32 	%r4183, %r12605, 1;
	xor.b32  	%r4184, %r4183, 7;
	cvt.s64.s32	%rd6666, %r4184;
	add.s64 	%rd6667, %rd1462, %rd6666;
	ld.local.u8 	%rs64, [%rd6667];
	add.s32 	%r4185, %r106, 1;
	xor.b32  	%r4186, %r4185, 7;
	cvt.s64.s32	%rd6668, %r4186;
	add.s64 	%rd6669, %rd90, %rd6668;
	st.local.u8 	[%rd6669], %rs64;
	add.s32 	%r4187, %r12605, 2;
	xor.b32  	%r4188, %r4187, 7;
	cvt.s64.s32	%rd6670, %r4188;
	add.s64 	%rd6671, %rd1462, %rd6670;
	ld.local.u8 	%rs65, [%rd6671];
	add.s32 	%r4189, %r106, 2;
	xor.b32  	%r4190, %r4189, 7;
	cvt.s64.s32	%rd6672, %r4190;
	add.s64 	%rd6673, %rd90, %rd6672;
	st.local.u8 	[%rd6673], %rs65;
	add.s32 	%r4191, %r12605, 3;
	xor.b32  	%r4192, %r4191, 7;
	cvt.s64.s32	%rd6674, %r4192;
	add.s64 	%rd6675, %rd1462, %rd6674;
	ld.local.u8 	%rs66, [%rd6675];
	add.s32 	%r4193, %r106, 3;
	xor.b32  	%r4194, %r4193, 7;
	cvt.s64.s32	%rd6676, %r4194;
	add.s64 	%rd6677, %rd90, %rd6676;
	st.local.u8 	[%rd6677], %rs66;
	add.s32 	%r12605, %r12605, 4;
	setp.lt.s32	%p62, %r12605, %r3;
	add.s32 	%r106, %r106, 4;
	@%p62 bra 	BB0_101;
	bra.uni 	BB0_102;

BB0_73:
	sub.s32 	%r108, %r1990, %r106;
	mov.u32 	%r3408, 1;
	max.u32 	%r109, %r108, %r3408;
	and.b32  	%r110, %r109, 3;
	setp.eq.s32	%p45, %r110, 0;
	mov.u32 	%r12597, 0;
	@%p45 bra 	BB0_80;

	setp.eq.s32	%p46, %r110, 1;
	mov.u32 	%r12593, 0;
	@%p46 bra 	BB0_79;

	setp.eq.s32	%p47, %r110, 2;
	mov.u32 	%r3410, 0;
	@%p47 bra 	BB0_76;
	bra.uni 	BB0_77;

BB0_76:
	mov.u32 	%r3408, %r3410;
	bra.uni 	BB0_78;

BB0_77:
	ld.local.u8 	%rs46, [%rd1462+7];
	xor.b32  	%r3412, %r106, 7;
	cvt.u64.u32	%rd5598, %r3412;
	add.s64 	%rd5599, %rd90, %rd5598;
	st.local.u8 	[%rd5599], %rs46;
	add.s32 	%r106, %r106, 1;

BB0_78:
	xor.b32  	%r3413, %r3408, 7;
	cvt.u64.u32	%rd5600, %r3413;
	add.s64 	%rd5601, %rd1462, %rd5600;
	ld.local.u8 	%rs47, [%rd5601];
	xor.b32  	%r3414, %r106, 7;
	cvt.s64.s32	%rd5602, %r3414;
	add.s64 	%rd5603, %rd90, %rd5602;
	st.local.u8 	[%rd5603], %rs47;
	add.s32 	%r106, %r106, 1;
	add.s32 	%r12593, %r3408, 1;

BB0_79:
	xor.b32  	%r3415, %r12593, 7;
	cvt.s64.s32	%rd5604, %r3415;
	add.s64 	%rd5605, %rd1462, %rd5604;
	ld.local.u8 	%rs48, [%rd5605];
	xor.b32  	%r3416, %r106, 7;
	cvt.s64.s32	%rd5606, %r3416;
	add.s64 	%rd5607, %rd90, %rd5606;
	st.local.u8 	[%rd5607], %rs48;
	add.s32 	%r106, %r106, 1;
	add.s32 	%r12597, %r12593, 1;

BB0_80:
	setp.lt.u32	%p48, %r109, 4;
	@%p48 bra 	BB0_82;

BB0_81:
	xor.b32  	%r3417, %r12597, 7;
	cvt.s64.s32	%rd5608, %r3417;
	add.s64 	%rd5609, %rd1462, %rd5608;
	ld.local.u8 	%rs49, [%rd5609];
	xor.b32  	%r3418, %r106, 7;
	cvt.s64.s32	%rd5610, %r3418;
	add.s64 	%rd5611, %rd90, %rd5610;
	st.local.u8 	[%rd5611], %rs49;
	add.s32 	%r3419, %r12597, 1;
	xor.b32  	%r3420, %r3419, 7;
	cvt.s64.s32	%rd5612, %r3420;
	add.s64 	%rd5613, %rd1462, %rd5612;
	ld.local.u8 	%rs50, [%rd5613];
	add.s32 	%r3421, %r106, 1;
	xor.b32  	%r3422, %r3421, 7;
	cvt.s64.s32	%rd5614, %r3422;
	add.s64 	%rd5615, %rd90, %rd5614;
	st.local.u8 	[%rd5615], %rs50;
	add.s32 	%r3423, %r12597, 2;
	xor.b32  	%r3424, %r3423, 7;
	cvt.s64.s32	%rd5616, %r3424;
	add.s64 	%rd5617, %rd1462, %rd5616;
	ld.local.u8 	%rs51, [%rd5617];
	add.s32 	%r3425, %r106, 2;
	xor.b32  	%r3426, %r3425, 7;
	cvt.s64.s32	%rd5618, %r3426;
	add.s64 	%rd5619, %rd90, %rd5618;
	st.local.u8 	[%rd5619], %rs51;
	add.s32 	%r3427, %r12597, 3;
	xor.b32  	%r3428, %r3427, 7;
	cvt.s64.s32	%rd5620, %r3428;
	add.s64 	%rd5621, %rd1462, %rd5620;
	ld.local.u8 	%rs52, [%rd5621];
	add.s32 	%r3429, %r106, 3;
	xor.b32  	%r3430, %r3429, 7;
	cvt.s64.s32	%rd5622, %r3430;
	add.s64 	%rd5623, %rd90, %rd5622;
	st.local.u8 	[%rd5623], %rs52;
	add.s32 	%r12597, %r12597, 4;
	setp.lt.s32	%p49, %r12597, %r108;
	add.s32 	%r106, %r106, 4;
	@%p49 bra 	BB0_81;

BB0_82:
	ld.local.u64 	%rd408, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3432,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3433}, %rd408;
	}
	shf.r.wrap.b32 	%r3434, %r3433, %r3432, 14;
	shf.r.wrap.b32 	%r3435, %r3432, %r3433, 14;
	mov.b64 	%rd5624, {%r3435, %r3434};
	shf.r.wrap.b32 	%r3436, %r3433, %r3432, 18;
	shf.r.wrap.b32 	%r3437, %r3432, %r3433, 18;
	mov.b64 	%rd5625, {%r3437, %r3436};
	xor.b64  	%rd5626, %rd5625, %rd5624;
	shf.l.wrap.b32 	%r3438, %r3432, %r3433, 23;
	shf.l.wrap.b32 	%r3439, %r3433, %r3432, 23;
	mov.b64 	%rd5627, {%r3439, %r3438};
	xor.b64  	%rd5628, %rd5626, %rd5627;
	ld.local.u64 	%rd409, [%rd1+48];
	ld.local.u64 	%rd410, [%rd1+40];
	xor.b64  	%rd5629, %rd409, %rd410;
	and.b64  	%rd5630, %rd5629, %rd408;
	xor.b64  	%rd5631, %rd5630, %rd409;
	ld.local.u64 	%rd411, [%rd1+56];
	ld.local.u64 	%rd18402, [%rd1+64];
	add.s64 	%rd5632, %rd411, %rd18402;
	add.s64 	%rd5633, %rd5632, %rd18338;
	add.s64 	%rd5634, %rd5633, %rd5631;
	add.s64 	%rd5635, %rd5634, %rd5628;
	ld.local.u64 	%rd413, [%rd1+24];
	add.s64 	%rd5636, %rd5635, %rd413;
	ld.local.u64 	%rd414, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3440,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3441}, %rd414;
	}
	shf.r.wrap.b32 	%r3442, %r3441, %r3440, 28;
	shf.r.wrap.b32 	%r3443, %r3440, %r3441, 28;
	mov.b64 	%rd5637, {%r3443, %r3442};
	shf.l.wrap.b32 	%r3444, %r3440, %r3441, 30;
	shf.l.wrap.b32 	%r3445, %r3441, %r3440, 30;
	mov.b64 	%rd5638, {%r3445, %r3444};
	xor.b64  	%rd5639, %rd5638, %rd5637;
	shf.l.wrap.b32 	%r3446, %r3440, %r3441, 25;
	shf.l.wrap.b32 	%r3447, %r3441, %r3440, 25;
	mov.b64 	%rd5640, {%r3447, %r3446};
	xor.b64  	%rd5641, %rd5639, %rd5640;
	ld.local.u64 	%rd415, [%rd1+8];
	and.b64  	%rd5642, %rd415, %rd414;
	xor.b64  	%rd5643, %rd415, %rd414;
	ld.local.u64 	%rd416, [%rd1+16];
	and.b64  	%rd5644, %rd416, %rd5643;
	or.b64  	%rd5645, %rd5644, %rd5642;
	add.s64 	%rd5646, %rd5635, %rd5645;
	add.s64 	%rd5647, %rd5646, %rd5641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3448,%dummy}, %rd5636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd5636;
	}
	shf.r.wrap.b32 	%r3450, %r3449, %r3448, 14;
	shf.r.wrap.b32 	%r3451, %r3448, %r3449, 14;
	mov.b64 	%rd5648, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3449, %r3448, 18;
	shf.r.wrap.b32 	%r3453, %r3448, %r3449, 18;
	mov.b64 	%rd5649, {%r3453, %r3452};
	xor.b64  	%rd5650, %rd5649, %rd5648;
	shf.l.wrap.b32 	%r3454, %r3448, %r3449, 23;
	shf.l.wrap.b32 	%r3455, %r3449, %r3448, 23;
	mov.b64 	%rd5651, {%r3455, %r3454};
	xor.b64  	%rd5652, %rd5650, %rd5651;
	xor.b64  	%rd5653, %rd410, %rd408;
	and.b64  	%rd5654, %rd5636, %rd5653;
	xor.b64  	%rd5655, %rd5654, %rd410;
	ld.local.u64 	%rd18403, [%rd1+72];
	add.s64 	%rd5656, %rd409, %rd18403;
	add.s64 	%rd5657, %rd5656, %rd18337;
	add.s64 	%rd5658, %rd5657, %rd5655;
	add.s64 	%rd5659, %rd5658, %rd5652;
	add.s64 	%rd5660, %rd5659, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd5647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5647;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 28;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 28;
	mov.b64 	%rd5661, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 30;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 30;
	mov.b64 	%rd5662, {%r3461, %r3460};
	xor.b64  	%rd5663, %rd5662, %rd5661;
	shf.l.wrap.b32 	%r3462, %r3456, %r3457, 25;
	shf.l.wrap.b32 	%r3463, %r3457, %r3456, 25;
	mov.b64 	%rd5664, {%r3463, %r3462};
	xor.b64  	%rd5665, %rd5663, %rd5664;
	and.b64  	%rd5666, %rd5647, %rd414;
	xor.b64  	%rd5667, %rd5647, %rd414;
	and.b64  	%rd5668, %rd5667, %rd415;
	or.b64  	%rd5669, %rd5668, %rd5666;
	add.s64 	%rd5670, %rd5659, %rd5669;
	add.s64 	%rd5671, %rd5670, %rd5665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd5660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd5660;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 14;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 14;
	mov.b64 	%rd5672, {%r3467, %r3466};
	shf.r.wrap.b32 	%r3468, %r3465, %r3464, 18;
	shf.r.wrap.b32 	%r3469, %r3464, %r3465, 18;
	mov.b64 	%rd5673, {%r3469, %r3468};
	xor.b64  	%rd5674, %rd5673, %rd5672;
	shf.l.wrap.b32 	%r3470, %r3464, %r3465, 23;
	shf.l.wrap.b32 	%r3471, %r3465, %r3464, 23;
	mov.b64 	%rd5675, {%r3471, %r3470};
	xor.b64  	%rd5676, %rd5674, %rd5675;
	xor.b64  	%rd5677, %rd5636, %rd408;
	and.b64  	%rd5678, %rd5660, %rd5677;
	xor.b64  	%rd5679, %rd5678, %rd408;
	ld.local.u64 	%rd18404, [%rd1+80];
	add.s64 	%rd5680, %rd410, %rd18404;
	add.s64 	%rd5681, %rd5680, %rd18336;
	add.s64 	%rd5682, %rd5681, %rd5679;
	add.s64 	%rd5683, %rd5682, %rd5676;
	add.s64 	%rd5684, %rd5683, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd5671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd5671;
	}
	shf.r.wrap.b32 	%r3474, %r3473, %r3472, 28;
	shf.r.wrap.b32 	%r3475, %r3472, %r3473, 28;
	mov.b64 	%rd5685, {%r3475, %r3474};
	shf.l.wrap.b32 	%r3476, %r3472, %r3473, 30;
	shf.l.wrap.b32 	%r3477, %r3473, %r3472, 30;
	mov.b64 	%rd5686, {%r3477, %r3476};
	xor.b64  	%rd5687, %rd5686, %rd5685;
	shf.l.wrap.b32 	%r3478, %r3472, %r3473, 25;
	shf.l.wrap.b32 	%r3479, %r3473, %r3472, 25;
	mov.b64 	%rd5688, {%r3479, %r3478};
	xor.b64  	%rd5689, %rd5687, %rd5688;
	and.b64  	%rd5690, %rd5671, %rd5647;
	xor.b64  	%rd5691, %rd5671, %rd5647;
	and.b64  	%rd5692, %rd5691, %rd414;
	or.b64  	%rd5693, %rd5692, %rd5690;
	add.s64 	%rd5694, %rd5683, %rd5693;
	add.s64 	%rd5695, %rd5694, %rd5689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3480,%dummy}, %rd5684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd5684;
	}
	shf.r.wrap.b32 	%r3482, %r3481, %r3480, 14;
	shf.r.wrap.b32 	%r3483, %r3480, %r3481, 14;
	mov.b64 	%rd5696, {%r3483, %r3482};
	shf.r.wrap.b32 	%r3484, %r3481, %r3480, 18;
	shf.r.wrap.b32 	%r3485, %r3480, %r3481, 18;
	mov.b64 	%rd5697, {%r3485, %r3484};
	xor.b64  	%rd5698, %rd5697, %rd5696;
	shf.l.wrap.b32 	%r3486, %r3480, %r3481, 23;
	shf.l.wrap.b32 	%r3487, %r3481, %r3480, 23;
	mov.b64 	%rd5699, {%r3487, %r3486};
	xor.b64  	%rd5700, %rd5698, %rd5699;
	xor.b64  	%rd5701, %rd5660, %rd5636;
	and.b64  	%rd5702, %rd5684, %rd5701;
	xor.b64  	%rd5703, %rd5702, %rd5636;
	ld.local.u64 	%rd18405, [%rd1+88];
	add.s64 	%rd5704, %rd408, %rd18405;
	add.s64 	%rd5705, %rd5704, %rd18335;
	add.s64 	%rd5706, %rd5705, %rd5703;
	add.s64 	%rd5707, %rd5706, %rd5700;
	add.s64 	%rd5708, %rd5707, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3488,%dummy}, %rd5695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3489}, %rd5695;
	}
	shf.r.wrap.b32 	%r3490, %r3489, %r3488, 28;
	shf.r.wrap.b32 	%r3491, %r3488, %r3489, 28;
	mov.b64 	%rd5709, {%r3491, %r3490};
	shf.l.wrap.b32 	%r3492, %r3488, %r3489, 30;
	shf.l.wrap.b32 	%r3493, %r3489, %r3488, 30;
	mov.b64 	%rd5710, {%r3493, %r3492};
	xor.b64  	%rd5711, %rd5710, %rd5709;
	shf.l.wrap.b32 	%r3494, %r3488, %r3489, 25;
	shf.l.wrap.b32 	%r3495, %r3489, %r3488, 25;
	mov.b64 	%rd5712, {%r3495, %r3494};
	xor.b64  	%rd5713, %rd5711, %rd5712;
	and.b64  	%rd5714, %rd5695, %rd5671;
	xor.b64  	%rd5715, %rd5695, %rd5671;
	and.b64  	%rd5716, %rd5715, %rd5647;
	or.b64  	%rd5717, %rd5716, %rd5714;
	add.s64 	%rd5718, %rd5707, %rd5717;
	add.s64 	%rd5719, %rd5718, %rd5713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd5708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd5708;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 14;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 14;
	mov.b64 	%rd5720, {%r3499, %r3498};
	shf.r.wrap.b32 	%r3500, %r3497, %r3496, 18;
	shf.r.wrap.b32 	%r3501, %r3496, %r3497, 18;
	mov.b64 	%rd5721, {%r3501, %r3500};
	xor.b64  	%rd5722, %rd5721, %rd5720;
	shf.l.wrap.b32 	%r3502, %r3496, %r3497, 23;
	shf.l.wrap.b32 	%r3503, %r3497, %r3496, 23;
	mov.b64 	%rd5723, {%r3503, %r3502};
	xor.b64  	%rd5724, %rd5722, %rd5723;
	xor.b64  	%rd5725, %rd5684, %rd5660;
	and.b64  	%rd5726, %rd5708, %rd5725;
	xor.b64  	%rd5727, %rd5726, %rd5660;
	ld.local.u64 	%rd18406, [%rd1+96];
	add.s64 	%rd5728, %rd5636, %rd18406;
	add.s64 	%rd5729, %rd5728, %rd18334;
	add.s64 	%rd5730, %rd5729, %rd5727;
	add.s64 	%rd5731, %rd5730, %rd5724;
	add.s64 	%rd5732, %rd5731, %rd5647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd5719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd5719;
	}
	shf.r.wrap.b32 	%r3506, %r3505, %r3504, 28;
	shf.r.wrap.b32 	%r3507, %r3504, %r3505, 28;
	mov.b64 	%rd5733, {%r3507, %r3506};
	shf.l.wrap.b32 	%r3508, %r3504, %r3505, 30;
	shf.l.wrap.b32 	%r3509, %r3505, %r3504, 30;
	mov.b64 	%rd5734, {%r3509, %r3508};
	xor.b64  	%rd5735, %rd5734, %rd5733;
	shf.l.wrap.b32 	%r3510, %r3504, %r3505, 25;
	shf.l.wrap.b32 	%r3511, %r3505, %r3504, 25;
	mov.b64 	%rd5736, {%r3511, %r3510};
	xor.b64  	%rd5737, %rd5735, %rd5736;
	and.b64  	%rd5738, %rd5719, %rd5695;
	xor.b64  	%rd5739, %rd5719, %rd5695;
	and.b64  	%rd5740, %rd5739, %rd5671;
	or.b64  	%rd5741, %rd5740, %rd5738;
	add.s64 	%rd5742, %rd5731, %rd5741;
	add.s64 	%rd5743, %rd5742, %rd5737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd5732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd5732;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 14;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 14;
	mov.b64 	%rd5744, {%r3515, %r3514};
	shf.r.wrap.b32 	%r3516, %r3513, %r3512, 18;
	shf.r.wrap.b32 	%r3517, %r3512, %r3513, 18;
	mov.b64 	%rd5745, {%r3517, %r3516};
	xor.b64  	%rd5746, %rd5745, %rd5744;
	shf.l.wrap.b32 	%r3518, %r3512, %r3513, 23;
	shf.l.wrap.b32 	%r3519, %r3513, %r3512, 23;
	mov.b64 	%rd5747, {%r3519, %r3518};
	xor.b64  	%rd5748, %rd5746, %rd5747;
	xor.b64  	%rd5749, %rd5708, %rd5684;
	and.b64  	%rd5750, %rd5732, %rd5749;
	xor.b64  	%rd5751, %rd5750, %rd5684;
	ld.local.u64 	%rd18407, [%rd1+104];
	add.s64 	%rd5752, %rd5660, %rd18407;
	add.s64 	%rd5753, %rd5752, %rd18333;
	add.s64 	%rd5754, %rd5753, %rd5751;
	add.s64 	%rd5755, %rd5754, %rd5748;
	add.s64 	%rd5756, %rd5755, %rd5671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3520,%dummy}, %rd5743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3521}, %rd5743;
	}
	shf.r.wrap.b32 	%r3522, %r3521, %r3520, 28;
	shf.r.wrap.b32 	%r3523, %r3520, %r3521, 28;
	mov.b64 	%rd5757, {%r3523, %r3522};
	shf.l.wrap.b32 	%r3524, %r3520, %r3521, 30;
	shf.l.wrap.b32 	%r3525, %r3521, %r3520, 30;
	mov.b64 	%rd5758, {%r3525, %r3524};
	xor.b64  	%rd5759, %rd5758, %rd5757;
	shf.l.wrap.b32 	%r3526, %r3520, %r3521, 25;
	shf.l.wrap.b32 	%r3527, %r3521, %r3520, 25;
	mov.b64 	%rd5760, {%r3527, %r3526};
	xor.b64  	%rd5761, %rd5759, %rd5760;
	and.b64  	%rd5762, %rd5743, %rd5719;
	xor.b64  	%rd5763, %rd5743, %rd5719;
	and.b64  	%rd5764, %rd5763, %rd5695;
	or.b64  	%rd5765, %rd5764, %rd5762;
	add.s64 	%rd5766, %rd5755, %rd5765;
	add.s64 	%rd5767, %rd5766, %rd5761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3528,%dummy}, %rd5756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3529}, %rd5756;
	}
	shf.r.wrap.b32 	%r3530, %r3529, %r3528, 14;
	shf.r.wrap.b32 	%r3531, %r3528, %r3529, 14;
	mov.b64 	%rd5768, {%r3531, %r3530};
	shf.r.wrap.b32 	%r3532, %r3529, %r3528, 18;
	shf.r.wrap.b32 	%r3533, %r3528, %r3529, 18;
	mov.b64 	%rd5769, {%r3533, %r3532};
	xor.b64  	%rd5770, %rd5769, %rd5768;
	shf.l.wrap.b32 	%r3534, %r3528, %r3529, 23;
	shf.l.wrap.b32 	%r3535, %r3529, %r3528, 23;
	mov.b64 	%rd5771, {%r3535, %r3534};
	xor.b64  	%rd5772, %rd5770, %rd5771;
	xor.b64  	%rd5773, %rd5732, %rd5708;
	and.b64  	%rd5774, %rd5756, %rd5773;
	xor.b64  	%rd5775, %rd5774, %rd5708;
	ld.local.u64 	%rd18408, [%rd1+112];
	add.s64 	%rd5776, %rd5684, %rd18408;
	add.s64 	%rd5777, %rd5776, %rd18332;
	add.s64 	%rd5778, %rd5777, %rd5775;
	add.s64 	%rd5779, %rd5778, %rd5772;
	add.s64 	%rd5780, %rd5779, %rd5695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3536,%dummy}, %rd5767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3537}, %rd5767;
	}
	shf.r.wrap.b32 	%r3538, %r3537, %r3536, 28;
	shf.r.wrap.b32 	%r3539, %r3536, %r3537, 28;
	mov.b64 	%rd5781, {%r3539, %r3538};
	shf.l.wrap.b32 	%r3540, %r3536, %r3537, 30;
	shf.l.wrap.b32 	%r3541, %r3537, %r3536, 30;
	mov.b64 	%rd5782, {%r3541, %r3540};
	xor.b64  	%rd5783, %rd5782, %rd5781;
	shf.l.wrap.b32 	%r3542, %r3536, %r3537, 25;
	shf.l.wrap.b32 	%r3543, %r3537, %r3536, 25;
	mov.b64 	%rd5784, {%r3543, %r3542};
	xor.b64  	%rd5785, %rd5783, %rd5784;
	and.b64  	%rd5786, %rd5767, %rd5743;
	xor.b64  	%rd5787, %rd5767, %rd5743;
	and.b64  	%rd5788, %rd5787, %rd5719;
	or.b64  	%rd5789, %rd5788, %rd5786;
	add.s64 	%rd5790, %rd5779, %rd5789;
	add.s64 	%rd5791, %rd5790, %rd5785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3544,%dummy}, %rd5780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3545}, %rd5780;
	}
	shf.r.wrap.b32 	%r3546, %r3545, %r3544, 14;
	shf.r.wrap.b32 	%r3547, %r3544, %r3545, 14;
	mov.b64 	%rd5792, {%r3547, %r3546};
	shf.r.wrap.b32 	%r3548, %r3545, %r3544, 18;
	shf.r.wrap.b32 	%r3549, %r3544, %r3545, 18;
	mov.b64 	%rd5793, {%r3549, %r3548};
	xor.b64  	%rd5794, %rd5793, %rd5792;
	shf.l.wrap.b32 	%r3550, %r3544, %r3545, 23;
	shf.l.wrap.b32 	%r3551, %r3545, %r3544, 23;
	mov.b64 	%rd5795, {%r3551, %r3550};
	xor.b64  	%rd5796, %rd5794, %rd5795;
	xor.b64  	%rd5797, %rd5756, %rd5732;
	and.b64  	%rd5798, %rd5780, %rd5797;
	xor.b64  	%rd5799, %rd5798, %rd5732;
	ld.local.u64 	%rd18409, [%rd1+120];
	add.s64 	%rd5800, %rd5708, %rd18409;
	add.s64 	%rd5801, %rd5800, %rd18331;
	add.s64 	%rd5802, %rd5801, %rd5799;
	add.s64 	%rd5803, %rd5802, %rd5796;
	add.s64 	%rd5804, %rd5803, %rd5719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd5791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5791;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 28;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 28;
	mov.b64 	%rd5805, {%r3555, %r3554};
	shf.l.wrap.b32 	%r3556, %r3552, %r3553, 30;
	shf.l.wrap.b32 	%r3557, %r3553, %r3552, 30;
	mov.b64 	%rd5806, {%r3557, %r3556};
	xor.b64  	%rd5807, %rd5806, %rd5805;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 25;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 25;
	mov.b64 	%rd5808, {%r3559, %r3558};
	xor.b64  	%rd5809, %rd5807, %rd5808;
	and.b64  	%rd5810, %rd5791, %rd5767;
	xor.b64  	%rd5811, %rd5791, %rd5767;
	and.b64  	%rd5812, %rd5811, %rd5743;
	or.b64  	%rd5813, %rd5812, %rd5810;
	add.s64 	%rd5814, %rd5803, %rd5813;
	add.s64 	%rd5815, %rd5814, %rd5809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd5804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5804;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 14;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 14;
	mov.b64 	%rd5816, {%r3563, %r3562};
	shf.r.wrap.b32 	%r3564, %r3561, %r3560, 18;
	shf.r.wrap.b32 	%r3565, %r3560, %r3561, 18;
	mov.b64 	%rd5817, {%r3565, %r3564};
	xor.b64  	%rd5818, %rd5817, %rd5816;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 23;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 23;
	mov.b64 	%rd5819, {%r3567, %r3566};
	xor.b64  	%rd5820, %rd5818, %rd5819;
	xor.b64  	%rd5821, %rd5780, %rd5756;
	and.b64  	%rd5822, %rd5804, %rd5821;
	xor.b64  	%rd5823, %rd5822, %rd5756;
	ld.local.u64 	%rd18393, [%rd1+128];
	add.s64 	%rd5824, %rd5732, %rd18393;
	add.s64 	%rd5825, %rd5824, %rd18330;
	add.s64 	%rd5826, %rd5825, %rd5823;
	add.s64 	%rd5827, %rd5826, %rd5820;
	add.s64 	%rd5828, %rd5827, %rd5743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd5815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5815;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 28;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 28;
	mov.b64 	%rd5829, {%r3571, %r3570};
	shf.l.wrap.b32 	%r3572, %r3568, %r3569, 30;
	shf.l.wrap.b32 	%r3573, %r3569, %r3568, 30;
	mov.b64 	%rd5830, {%r3573, %r3572};
	xor.b64  	%rd5831, %rd5830, %rd5829;
	shf.l.wrap.b32 	%r3574, %r3568, %r3569, 25;
	shf.l.wrap.b32 	%r3575, %r3569, %r3568, 25;
	mov.b64 	%rd5832, {%r3575, %r3574};
	xor.b64  	%rd5833, %rd5831, %rd5832;
	and.b64  	%rd5834, %rd5815, %rd5791;
	xor.b64  	%rd5835, %rd5815, %rd5791;
	and.b64  	%rd5836, %rd5835, %rd5767;
	or.b64  	%rd5837, %rd5836, %rd5834;
	add.s64 	%rd5838, %rd5827, %rd5837;
	add.s64 	%rd5839, %rd5838, %rd5833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3576,%dummy}, %rd5828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3577}, %rd5828;
	}
	shf.r.wrap.b32 	%r3578, %r3577, %r3576, 14;
	shf.r.wrap.b32 	%r3579, %r3576, %r3577, 14;
	mov.b64 	%rd5840, {%r3579, %r3578};
	shf.r.wrap.b32 	%r3580, %r3577, %r3576, 18;
	shf.r.wrap.b32 	%r3581, %r3576, %r3577, 18;
	mov.b64 	%rd5841, {%r3581, %r3580};
	xor.b64  	%rd5842, %rd5841, %rd5840;
	shf.l.wrap.b32 	%r3582, %r3576, %r3577, 23;
	shf.l.wrap.b32 	%r3583, %r3577, %r3576, 23;
	mov.b64 	%rd5843, {%r3583, %r3582};
	xor.b64  	%rd5844, %rd5842, %rd5843;
	xor.b64  	%rd5845, %rd5804, %rd5780;
	and.b64  	%rd5846, %rd5828, %rd5845;
	xor.b64  	%rd5847, %rd5846, %rd5780;
	ld.local.u64 	%rd18392, [%rd1+136];
	add.s64 	%rd5848, %rd5756, %rd18392;
	add.s64 	%rd5849, %rd5848, %rd18329;
	add.s64 	%rd5850, %rd5849, %rd5847;
	add.s64 	%rd5851, %rd5850, %rd5844;
	add.s64 	%rd5852, %rd5851, %rd5767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3584,%dummy}, %rd5839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd5839;
	}
	shf.r.wrap.b32 	%r3586, %r3585, %r3584, 28;
	shf.r.wrap.b32 	%r3587, %r3584, %r3585, 28;
	mov.b64 	%rd5853, {%r3587, %r3586};
	shf.l.wrap.b32 	%r3588, %r3584, %r3585, 30;
	shf.l.wrap.b32 	%r3589, %r3585, %r3584, 30;
	mov.b64 	%rd5854, {%r3589, %r3588};
	xor.b64  	%rd5855, %rd5854, %rd5853;
	shf.l.wrap.b32 	%r3590, %r3584, %r3585, 25;
	shf.l.wrap.b32 	%r3591, %r3585, %r3584, 25;
	mov.b64 	%rd5856, {%r3591, %r3590};
	xor.b64  	%rd5857, %rd5855, %rd5856;
	and.b64  	%rd5858, %rd5839, %rd5815;
	xor.b64  	%rd5859, %rd5839, %rd5815;
	and.b64  	%rd5860, %rd5859, %rd5791;
	or.b64  	%rd5861, %rd5860, %rd5858;
	add.s64 	%rd5862, %rd5851, %rd5861;
	add.s64 	%rd5863, %rd5862, %rd5857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3592,%dummy}, %rd5852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd5852;
	}
	shf.r.wrap.b32 	%r3594, %r3593, %r3592, 14;
	shf.r.wrap.b32 	%r3595, %r3592, %r3593, 14;
	mov.b64 	%rd5864, {%r3595, %r3594};
	shf.r.wrap.b32 	%r3596, %r3593, %r3592, 18;
	shf.r.wrap.b32 	%r3597, %r3592, %r3593, 18;
	mov.b64 	%rd5865, {%r3597, %r3596};
	xor.b64  	%rd5866, %rd5865, %rd5864;
	shf.l.wrap.b32 	%r3598, %r3592, %r3593, 23;
	shf.l.wrap.b32 	%r3599, %r3593, %r3592, 23;
	mov.b64 	%rd5867, {%r3599, %r3598};
	xor.b64  	%rd5868, %rd5866, %rd5867;
	xor.b64  	%rd5869, %rd5828, %rd5804;
	and.b64  	%rd5870, %rd5852, %rd5869;
	xor.b64  	%rd5871, %rd5870, %rd5804;
	ld.local.u64 	%rd18391, [%rd1+144];
	add.s64 	%rd5872, %rd5780, %rd18391;
	add.s64 	%rd5873, %rd5872, %rd18328;
	add.s64 	%rd5874, %rd5873, %rd5871;
	add.s64 	%rd5875, %rd5874, %rd5868;
	add.s64 	%rd5876, %rd5875, %rd5791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3600,%dummy}, %rd5863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd5863;
	}
	shf.r.wrap.b32 	%r3602, %r3601, %r3600, 28;
	shf.r.wrap.b32 	%r3603, %r3600, %r3601, 28;
	mov.b64 	%rd5877, {%r3603, %r3602};
	shf.l.wrap.b32 	%r3604, %r3600, %r3601, 30;
	shf.l.wrap.b32 	%r3605, %r3601, %r3600, 30;
	mov.b64 	%rd5878, {%r3605, %r3604};
	xor.b64  	%rd5879, %rd5878, %rd5877;
	shf.l.wrap.b32 	%r3606, %r3600, %r3601, 25;
	shf.l.wrap.b32 	%r3607, %r3601, %r3600, 25;
	mov.b64 	%rd5880, {%r3607, %r3606};
	xor.b64  	%rd5881, %rd5879, %rd5880;
	and.b64  	%rd5882, %rd5863, %rd5839;
	xor.b64  	%rd5883, %rd5863, %rd5839;
	and.b64  	%rd5884, %rd5883, %rd5815;
	or.b64  	%rd5885, %rd5884, %rd5882;
	add.s64 	%rd5886, %rd5875, %rd5885;
	add.s64 	%rd5887, %rd5886, %rd5881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3608,%dummy}, %rd5876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3609}, %rd5876;
	}
	shf.r.wrap.b32 	%r3610, %r3609, %r3608, 14;
	shf.r.wrap.b32 	%r3611, %r3608, %r3609, 14;
	mov.b64 	%rd5888, {%r3611, %r3610};
	shf.r.wrap.b32 	%r3612, %r3609, %r3608, 18;
	shf.r.wrap.b32 	%r3613, %r3608, %r3609, 18;
	mov.b64 	%rd5889, {%r3613, %r3612};
	xor.b64  	%rd5890, %rd5889, %rd5888;
	shf.l.wrap.b32 	%r3614, %r3608, %r3609, 23;
	shf.l.wrap.b32 	%r3615, %r3609, %r3608, 23;
	mov.b64 	%rd5891, {%r3615, %r3614};
	xor.b64  	%rd5892, %rd5890, %rd5891;
	xor.b64  	%rd5893, %rd5852, %rd5828;
	and.b64  	%rd5894, %rd5876, %rd5893;
	xor.b64  	%rd5895, %rd5894, %rd5828;
	ld.local.u64 	%rd18390, [%rd1+152];
	add.s64 	%rd5896, %rd5804, %rd18390;
	add.s64 	%rd5897, %rd5896, %rd18327;
	add.s64 	%rd5898, %rd5897, %rd5895;
	add.s64 	%rd5899, %rd5898, %rd5892;
	add.s64 	%rd5900, %rd5899, %rd5815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3616,%dummy}, %rd5887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd5887;
	}
	shf.r.wrap.b32 	%r3618, %r3617, %r3616, 28;
	shf.r.wrap.b32 	%r3619, %r3616, %r3617, 28;
	mov.b64 	%rd5901, {%r3619, %r3618};
	shf.l.wrap.b32 	%r3620, %r3616, %r3617, 30;
	shf.l.wrap.b32 	%r3621, %r3617, %r3616, 30;
	mov.b64 	%rd5902, {%r3621, %r3620};
	xor.b64  	%rd5903, %rd5902, %rd5901;
	shf.l.wrap.b32 	%r3622, %r3616, %r3617, 25;
	shf.l.wrap.b32 	%r3623, %r3617, %r3616, 25;
	mov.b64 	%rd5904, {%r3623, %r3622};
	xor.b64  	%rd5905, %rd5903, %rd5904;
	and.b64  	%rd5906, %rd5887, %rd5863;
	xor.b64  	%rd5907, %rd5887, %rd5863;
	and.b64  	%rd5908, %rd5907, %rd5839;
	or.b64  	%rd5909, %rd5908, %rd5906;
	add.s64 	%rd5910, %rd5899, %rd5909;
	add.s64 	%rd5911, %rd5910, %rd5905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3624,%dummy}, %rd5900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3625}, %rd5900;
	}
	shf.r.wrap.b32 	%r3626, %r3625, %r3624, 14;
	shf.r.wrap.b32 	%r3627, %r3624, %r3625, 14;
	mov.b64 	%rd5912, {%r3627, %r3626};
	shf.r.wrap.b32 	%r3628, %r3625, %r3624, 18;
	shf.r.wrap.b32 	%r3629, %r3624, %r3625, 18;
	mov.b64 	%rd5913, {%r3629, %r3628};
	xor.b64  	%rd5914, %rd5913, %rd5912;
	shf.l.wrap.b32 	%r3630, %r3624, %r3625, 23;
	shf.l.wrap.b32 	%r3631, %r3625, %r3624, 23;
	mov.b64 	%rd5915, {%r3631, %r3630};
	xor.b64  	%rd5916, %rd5914, %rd5915;
	xor.b64  	%rd5917, %rd5876, %rd5852;
	and.b64  	%rd5918, %rd5900, %rd5917;
	xor.b64  	%rd5919, %rd5918, %rd5852;
	ld.local.u64 	%rd18389, [%rd1+160];
	add.s64 	%rd5920, %rd5828, %rd18389;
	add.s64 	%rd5921, %rd5920, %rd18326;
	add.s64 	%rd5922, %rd5921, %rd5919;
	add.s64 	%rd5923, %rd5922, %rd5916;
	add.s64 	%rd18401, %rd5923, %rd5839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3632,%dummy}, %rd5911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3633}, %rd5911;
	}
	shf.r.wrap.b32 	%r3634, %r3633, %r3632, 28;
	shf.r.wrap.b32 	%r3635, %r3632, %r3633, 28;
	mov.b64 	%rd5924, {%r3635, %r3634};
	shf.l.wrap.b32 	%r3636, %r3632, %r3633, 30;
	shf.l.wrap.b32 	%r3637, %r3633, %r3632, 30;
	mov.b64 	%rd5925, {%r3637, %r3636};
	xor.b64  	%rd5926, %rd5925, %rd5924;
	shf.l.wrap.b32 	%r3638, %r3632, %r3633, 25;
	shf.l.wrap.b32 	%r3639, %r3633, %r3632, 25;
	mov.b64 	%rd5927, {%r3639, %r3638};
	xor.b64  	%rd5928, %rd5926, %rd5927;
	and.b64  	%rd5929, %rd5911, %rd5887;
	xor.b64  	%rd5930, %rd5911, %rd5887;
	and.b64  	%rd5931, %rd5930, %rd5863;
	or.b64  	%rd5932, %rd5931, %rd5929;
	add.s64 	%rd5933, %rd5923, %rd5932;
	add.s64 	%rd18397, %rd5933, %rd5928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3640,%dummy}, %rd18401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3641}, %rd18401;
	}
	shf.r.wrap.b32 	%r3642, %r3641, %r3640, 14;
	shf.r.wrap.b32 	%r3643, %r3640, %r3641, 14;
	mov.b64 	%rd5934, {%r3643, %r3642};
	shf.r.wrap.b32 	%r3644, %r3641, %r3640, 18;
	shf.r.wrap.b32 	%r3645, %r3640, %r3641, 18;
	mov.b64 	%rd5935, {%r3645, %r3644};
	xor.b64  	%rd5936, %rd5935, %rd5934;
	shf.l.wrap.b32 	%r3646, %r3640, %r3641, 23;
	shf.l.wrap.b32 	%r3647, %r3641, %r3640, 23;
	mov.b64 	%rd5937, {%r3647, %r3646};
	xor.b64  	%rd5938, %rd5936, %rd5937;
	xor.b64  	%rd5939, %rd5900, %rd5876;
	and.b64  	%rd5940, %rd18401, %rd5939;
	xor.b64  	%rd5941, %rd5940, %rd5876;
	ld.local.u64 	%rd18388, [%rd1+168];
	add.s64 	%rd5942, %rd5852, %rd18388;
	add.s64 	%rd5943, %rd5942, %rd18325;
	add.s64 	%rd5944, %rd5943, %rd5941;
	add.s64 	%rd5945, %rd5944, %rd5938;
	add.s64 	%rd18400, %rd5945, %rd5863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3648,%dummy}, %rd18397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3649}, %rd18397;
	}
	shf.r.wrap.b32 	%r3650, %r3649, %r3648, 28;
	shf.r.wrap.b32 	%r3651, %r3648, %r3649, 28;
	mov.b64 	%rd5946, {%r3651, %r3650};
	shf.l.wrap.b32 	%r3652, %r3648, %r3649, 30;
	shf.l.wrap.b32 	%r3653, %r3649, %r3648, 30;
	mov.b64 	%rd5947, {%r3653, %r3652};
	xor.b64  	%rd5948, %rd5947, %rd5946;
	shf.l.wrap.b32 	%r3654, %r3648, %r3649, 25;
	shf.l.wrap.b32 	%r3655, %r3649, %r3648, 25;
	mov.b64 	%rd5949, {%r3655, %r3654};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	and.b64  	%rd5951, %rd18397, %rd5911;
	xor.b64  	%rd5952, %rd18397, %rd5911;
	and.b64  	%rd5953, %rd5952, %rd5887;
	or.b64  	%rd5954, %rd5953, %rd5951;
	add.s64 	%rd5955, %rd5945, %rd5954;
	add.s64 	%rd18396, %rd5955, %rd5950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd18400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3657}, %rd18400;
	}
	shf.r.wrap.b32 	%r3658, %r3657, %r3656, 14;
	shf.r.wrap.b32 	%r3659, %r3656, %r3657, 14;
	mov.b64 	%rd5956, {%r3659, %r3658};
	shf.r.wrap.b32 	%r3660, %r3657, %r3656, 18;
	shf.r.wrap.b32 	%r3661, %r3656, %r3657, 18;
	mov.b64 	%rd5957, {%r3661, %r3660};
	xor.b64  	%rd5958, %rd5957, %rd5956;
	shf.l.wrap.b32 	%r3662, %r3656, %r3657, 23;
	shf.l.wrap.b32 	%r3663, %r3657, %r3656, 23;
	mov.b64 	%rd5959, {%r3663, %r3662};
	xor.b64  	%rd5960, %rd5958, %rd5959;
	xor.b64  	%rd5961, %rd18401, %rd5900;
	and.b64  	%rd5962, %rd18400, %rd5961;
	xor.b64  	%rd5963, %rd5962, %rd5900;
	ld.local.u64 	%rd18387, [%rd1+176];
	add.s64 	%rd5964, %rd5876, %rd18387;
	add.s64 	%rd5965, %rd5964, %rd18324;
	add.s64 	%rd5966, %rd5965, %rd5963;
	add.s64 	%rd5967, %rd5966, %rd5960;
	add.s64 	%rd18399, %rd5967, %rd5887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3664,%dummy}, %rd18396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3665}, %rd18396;
	}
	shf.r.wrap.b32 	%r3666, %r3665, %r3664, 28;
	shf.r.wrap.b32 	%r3667, %r3664, %r3665, 28;
	mov.b64 	%rd5968, {%r3667, %r3666};
	shf.l.wrap.b32 	%r3668, %r3664, %r3665, 30;
	shf.l.wrap.b32 	%r3669, %r3665, %r3664, 30;
	mov.b64 	%rd5969, {%r3669, %r3668};
	xor.b64  	%rd5970, %rd5969, %rd5968;
	shf.l.wrap.b32 	%r3670, %r3664, %r3665, 25;
	shf.l.wrap.b32 	%r3671, %r3665, %r3664, 25;
	mov.b64 	%rd5971, {%r3671, %r3670};
	xor.b64  	%rd5972, %rd5970, %rd5971;
	and.b64  	%rd5973, %rd18396, %rd18397;
	xor.b64  	%rd5974, %rd18396, %rd18397;
	and.b64  	%rd5975, %rd5974, %rd5911;
	or.b64  	%rd5976, %rd5975, %rd5973;
	add.s64 	%rd5977, %rd5967, %rd5976;
	add.s64 	%rd18395, %rd5977, %rd5972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd18399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd18399;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 14;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 14;
	mov.b64 	%rd5978, {%r3675, %r3674};
	shf.r.wrap.b32 	%r3676, %r3673, %r3672, 18;
	shf.r.wrap.b32 	%r3677, %r3672, %r3673, 18;
	mov.b64 	%rd5979, {%r3677, %r3676};
	xor.b64  	%rd5980, %rd5979, %rd5978;
	shf.l.wrap.b32 	%r3678, %r3672, %r3673, 23;
	shf.l.wrap.b32 	%r3679, %r3673, %r3672, 23;
	mov.b64 	%rd5981, {%r3679, %r3678};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	xor.b64  	%rd5983, %rd18400, %rd18401;
	and.b64  	%rd5984, %rd18399, %rd5983;
	xor.b64  	%rd5985, %rd5984, %rd18401;
	ld.local.u64 	%rd18386, [%rd1+184];
	add.s64 	%rd5986, %rd5900, %rd18386;
	add.s64 	%rd5987, %rd5986, %rd18323;
	add.s64 	%rd5988, %rd5987, %rd5985;
	add.s64 	%rd5989, %rd5988, %rd5982;
	add.s64 	%rd18398, %rd5989, %rd5911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3680,%dummy}, %rd18395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3681}, %rd18395;
	}
	shf.r.wrap.b32 	%r3682, %r3681, %r3680, 28;
	shf.r.wrap.b32 	%r3683, %r3680, %r3681, 28;
	mov.b64 	%rd5990, {%r3683, %r3682};
	shf.l.wrap.b32 	%r3684, %r3680, %r3681, 30;
	shf.l.wrap.b32 	%r3685, %r3681, %r3680, 30;
	mov.b64 	%rd5991, {%r3685, %r3684};
	xor.b64  	%rd5992, %rd5991, %rd5990;
	shf.l.wrap.b32 	%r3686, %r3680, %r3681, 25;
	shf.l.wrap.b32 	%r3687, %r3681, %r3680, 25;
	mov.b64 	%rd5993, {%r3687, %r3686};
	xor.b64  	%rd5994, %rd5992, %rd5993;
	and.b64  	%rd5995, %rd18395, %rd18396;
	xor.b64  	%rd5996, %rd18395, %rd18396;
	and.b64  	%rd5997, %rd5996, %rd18397;
	or.b64  	%rd5998, %rd5997, %rd5995;
	add.s64 	%rd5999, %rd5989, %rd5998;
	add.s64 	%rd18394, %rd5999, %rd5994;
	mov.u32 	%r12599, 16;

BB0_83:
	mov.u64 	%rd18250, k_sha512;
	shr.u64 	%rd6000, %rd18387, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3688,%dummy}, %rd18387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3689}, %rd18387;
	}
	shf.r.wrap.b32 	%r3690, %r3689, %r3688, 19;
	shf.r.wrap.b32 	%r3691, %r3688, %r3689, 19;
	mov.b64 	%rd6001, {%r3691, %r3690};
	xor.b64  	%rd6002, %rd6001, %rd6000;
	shf.l.wrap.b32 	%r3692, %r3688, %r3689, 3;
	shf.l.wrap.b32 	%r3693, %r3689, %r3688, 3;
	mov.b64 	%rd6003, {%r3693, %r3692};
	xor.b64  	%rd6004, %rd6002, %rd6003;
	shr.u64 	%rd6005, %rd18403, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3694,%dummy}, %rd18403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3695}, %rd18403;
	}
	shf.r.wrap.b32 	%r3696, %r3695, %r3694, 1;
	shf.r.wrap.b32 	%r3697, %r3694, %r3695, 1;
	mov.b64 	%rd6006, {%r3697, %r3696};
	xor.b64  	%rd6007, %rd6006, %rd6005;
	shf.r.wrap.b32 	%r3698, %r3695, %r3694, 8;
	shf.r.wrap.b32 	%r3699, %r3694, %r3695, 8;
	mov.b64 	%rd6008, {%r3699, %r3698};
	xor.b64  	%rd6009, %rd6007, %rd6008;
	add.s64 	%rd6010, %rd18392, %rd18402;
	add.s64 	%rd6011, %rd6010, %rd6004;
	add.s64 	%rd18402, %rd6011, %rd6009;
	shr.u64 	%rd6012, %rd18386, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3700,%dummy}, %rd18386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3701}, %rd18386;
	}
	shf.r.wrap.b32 	%r3702, %r3701, %r3700, 19;
	shf.r.wrap.b32 	%r3703, %r3700, %r3701, 19;
	mov.b64 	%rd6013, {%r3703, %r3702};
	xor.b64  	%rd6014, %rd6013, %rd6012;
	shf.l.wrap.b32 	%r3704, %r3700, %r3701, 3;
	shf.l.wrap.b32 	%r3705, %r3701, %r3700, 3;
	mov.b64 	%rd6015, {%r3705, %r3704};
	xor.b64  	%rd6016, %rd6014, %rd6015;
	shr.u64 	%rd6017, %rd18404, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd18404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd18404;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 1;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 1;
	mov.b64 	%rd6018, {%r3709, %r3708};
	xor.b64  	%rd6019, %rd6018, %rd6017;
	shf.r.wrap.b32 	%r3710, %r3707, %r3706, 8;
	shf.r.wrap.b32 	%r3711, %r3706, %r3707, 8;
	mov.b64 	%rd6020, {%r3711, %r3710};
	xor.b64  	%rd6021, %rd6019, %rd6020;
	add.s64 	%rd6022, %rd18391, %rd18403;
	add.s64 	%rd6023, %rd6022, %rd6016;
	add.s64 	%rd18403, %rd6023, %rd6021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3712,%dummy}, %rd18402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3713}, %rd18402;
	}
	shf.r.wrap.b32 	%r3714, %r3713, %r3712, 19;
	shf.r.wrap.b32 	%r3715, %r3712, %r3713, 19;
	mov.b64 	%rd6024, {%r3715, %r3714};
	shf.l.wrap.b32 	%r3716, %r3712, %r3713, 3;
	shf.l.wrap.b32 	%r3717, %r3713, %r3712, 3;
	mov.b64 	%rd6025, {%r3717, %r3716};
	shr.u64 	%rd6026, %rd18402, 6;
	xor.b64  	%rd6027, %rd6024, %rd6026;
	xor.b64  	%rd6028, %rd6027, %rd6025;
	shr.u64 	%rd6029, %rd18405, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3718,%dummy}, %rd18405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3719}, %rd18405;
	}
	shf.r.wrap.b32 	%r3720, %r3719, %r3718, 1;
	shf.r.wrap.b32 	%r3721, %r3718, %r3719, 1;
	mov.b64 	%rd6030, {%r3721, %r3720};
	xor.b64  	%rd6031, %rd6030, %rd6029;
	shf.r.wrap.b32 	%r3722, %r3719, %r3718, 8;
	shf.r.wrap.b32 	%r3723, %r3718, %r3719, 8;
	mov.b64 	%rd6032, {%r3723, %r3722};
	xor.b64  	%rd6033, %rd6031, %rd6032;
	add.s64 	%rd6034, %rd18390, %rd18404;
	add.s64 	%rd6035, %rd6034, %rd6028;
	add.s64 	%rd18404, %rd6035, %rd6033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd18403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3725}, %rd18403;
	}
	shf.r.wrap.b32 	%r3726, %r3725, %r3724, 19;
	shf.r.wrap.b32 	%r3727, %r3724, %r3725, 19;
	mov.b64 	%rd6036, {%r3727, %r3726};
	shf.l.wrap.b32 	%r3728, %r3724, %r3725, 3;
	shf.l.wrap.b32 	%r3729, %r3725, %r3724, 3;
	mov.b64 	%rd6037, {%r3729, %r3728};
	shr.u64 	%rd6038, %rd18403, 6;
	xor.b64  	%rd6039, %rd6036, %rd6038;
	xor.b64  	%rd6040, %rd6039, %rd6037;
	shr.u64 	%rd6041, %rd18406, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd18406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd18406;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 1;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 1;
	mov.b64 	%rd6042, {%r3733, %r3732};
	xor.b64  	%rd6043, %rd6042, %rd6041;
	shf.r.wrap.b32 	%r3734, %r3731, %r3730, 8;
	shf.r.wrap.b32 	%r3735, %r3730, %r3731, 8;
	mov.b64 	%rd6044, {%r3735, %r3734};
	xor.b64  	%rd6045, %rd6043, %rd6044;
	add.s64 	%rd6046, %rd18389, %rd18405;
	add.s64 	%rd6047, %rd6046, %rd6040;
	add.s64 	%rd18405, %rd6047, %rd6045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3736,%dummy}, %rd18404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3737}, %rd18404;
	}
	shf.r.wrap.b32 	%r3738, %r3737, %r3736, 19;
	shf.r.wrap.b32 	%r3739, %r3736, %r3737, 19;
	mov.b64 	%rd6048, {%r3739, %r3738};
	shf.l.wrap.b32 	%r3740, %r3736, %r3737, 3;
	shf.l.wrap.b32 	%r3741, %r3737, %r3736, 3;
	mov.b64 	%rd6049, {%r3741, %r3740};
	shr.u64 	%rd6050, %rd18404, 6;
	xor.b64  	%rd6051, %rd6048, %rd6050;
	xor.b64  	%rd6052, %rd6051, %rd6049;
	shr.u64 	%rd6053, %rd18407, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd18407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3743}, %rd18407;
	}
	shf.r.wrap.b32 	%r3744, %r3743, %r3742, 1;
	shf.r.wrap.b32 	%r3745, %r3742, %r3743, 1;
	mov.b64 	%rd6054, {%r3745, %r3744};
	xor.b64  	%rd6055, %rd6054, %rd6053;
	shf.r.wrap.b32 	%r3746, %r3743, %r3742, 8;
	shf.r.wrap.b32 	%r3747, %r3742, %r3743, 8;
	mov.b64 	%rd6056, {%r3747, %r3746};
	xor.b64  	%rd6057, %rd6055, %rd6056;
	add.s64 	%rd6058, %rd18388, %rd18406;
	add.s64 	%rd6059, %rd6058, %rd6052;
	add.s64 	%rd18406, %rd6059, %rd6057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3748,%dummy}, %rd18405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3749}, %rd18405;
	}
	shf.r.wrap.b32 	%r3750, %r3749, %r3748, 19;
	shf.r.wrap.b32 	%r3751, %r3748, %r3749, 19;
	mov.b64 	%rd6060, {%r3751, %r3750};
	shf.l.wrap.b32 	%r3752, %r3748, %r3749, 3;
	shf.l.wrap.b32 	%r3753, %r3749, %r3748, 3;
	mov.b64 	%rd6061, {%r3753, %r3752};
	shr.u64 	%rd6062, %rd18405, 6;
	xor.b64  	%rd6063, %rd6060, %rd6062;
	xor.b64  	%rd6064, %rd6063, %rd6061;
	shr.u64 	%rd6065, %rd18408, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3754,%dummy}, %rd18408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3755}, %rd18408;
	}
	shf.r.wrap.b32 	%r3756, %r3755, %r3754, 1;
	shf.r.wrap.b32 	%r3757, %r3754, %r3755, 1;
	mov.b64 	%rd6066, {%r3757, %r3756};
	xor.b64  	%rd6067, %rd6066, %rd6065;
	shf.r.wrap.b32 	%r3758, %r3755, %r3754, 8;
	shf.r.wrap.b32 	%r3759, %r3754, %r3755, 8;
	mov.b64 	%rd6068, {%r3759, %r3758};
	xor.b64  	%rd6069, %rd6067, %rd6068;
	add.s64 	%rd6070, %rd18387, %rd18407;
	add.s64 	%rd6071, %rd6070, %rd6064;
	add.s64 	%rd18407, %rd6071, %rd6069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3760,%dummy}, %rd18406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3761}, %rd18406;
	}
	shf.r.wrap.b32 	%r3762, %r3761, %r3760, 19;
	shf.r.wrap.b32 	%r3763, %r3760, %r3761, 19;
	mov.b64 	%rd6072, {%r3763, %r3762};
	shf.l.wrap.b32 	%r3764, %r3760, %r3761, 3;
	shf.l.wrap.b32 	%r3765, %r3761, %r3760, 3;
	mov.b64 	%rd6073, {%r3765, %r3764};
	shr.u64 	%rd6074, %rd18406, 6;
	xor.b64  	%rd6075, %rd6072, %rd6074;
	xor.b64  	%rd6076, %rd6075, %rd6073;
	shr.u64 	%rd6077, %rd18409, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3766,%dummy}, %rd18409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3767}, %rd18409;
	}
	shf.r.wrap.b32 	%r3768, %r3767, %r3766, 1;
	shf.r.wrap.b32 	%r3769, %r3766, %r3767, 1;
	mov.b64 	%rd6078, {%r3769, %r3768};
	xor.b64  	%rd6079, %rd6078, %rd6077;
	shf.r.wrap.b32 	%r3770, %r3767, %r3766, 8;
	shf.r.wrap.b32 	%r3771, %r3766, %r3767, 8;
	mov.b64 	%rd6080, {%r3771, %r3770};
	xor.b64  	%rd6081, %rd6079, %rd6080;
	add.s64 	%rd6082, %rd18386, %rd18408;
	add.s64 	%rd6083, %rd6082, %rd6076;
	add.s64 	%rd18408, %rd6083, %rd6081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd18407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3773}, %rd18407;
	}
	shf.r.wrap.b32 	%r3774, %r3773, %r3772, 19;
	shf.r.wrap.b32 	%r3775, %r3772, %r3773, 19;
	mov.b64 	%rd6084, {%r3775, %r3774};
	shf.l.wrap.b32 	%r3776, %r3772, %r3773, 3;
	shf.l.wrap.b32 	%r3777, %r3773, %r3772, 3;
	mov.b64 	%rd6085, {%r3777, %r3776};
	shr.u64 	%rd6086, %rd18407, 6;
	xor.b64  	%rd6087, %rd6084, %rd6086;
	xor.b64  	%rd6088, %rd6087, %rd6085;
	shr.u64 	%rd6089, %rd18393, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3778,%dummy}, %rd18393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3779}, %rd18393;
	}
	shf.r.wrap.b32 	%r3780, %r3779, %r3778, 1;
	shf.r.wrap.b32 	%r3781, %r3778, %r3779, 1;
	mov.b64 	%rd6090, {%r3781, %r3780};
	xor.b64  	%rd6091, %rd6090, %rd6089;
	shf.r.wrap.b32 	%r3782, %r3779, %r3778, 8;
	shf.r.wrap.b32 	%r3783, %r3778, %r3779, 8;
	mov.b64 	%rd6092, {%r3783, %r3782};
	xor.b64  	%rd6093, %rd6091, %rd6092;
	add.s64 	%rd6094, %rd18402, %rd18409;
	add.s64 	%rd6095, %rd6094, %rd6088;
	add.s64 	%rd18409, %rd6095, %rd6093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3784,%dummy}, %rd18408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3785}, %rd18408;
	}
	shf.r.wrap.b32 	%r3786, %r3785, %r3784, 19;
	shf.r.wrap.b32 	%r3787, %r3784, %r3785, 19;
	mov.b64 	%rd6096, {%r3787, %r3786};
	shf.l.wrap.b32 	%r3788, %r3784, %r3785, 3;
	shf.l.wrap.b32 	%r3789, %r3785, %r3784, 3;
	mov.b64 	%rd6097, {%r3789, %r3788};
	shr.u64 	%rd6098, %rd18408, 6;
	xor.b64  	%rd6099, %rd6096, %rd6098;
	xor.b64  	%rd6100, %rd6099, %rd6097;
	shr.u64 	%rd6101, %rd18392, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3790,%dummy}, %rd18392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3791}, %rd18392;
	}
	shf.r.wrap.b32 	%r3792, %r3791, %r3790, 1;
	shf.r.wrap.b32 	%r3793, %r3790, %r3791, 1;
	mov.b64 	%rd6102, {%r3793, %r3792};
	xor.b64  	%rd6103, %rd6102, %rd6101;
	shf.r.wrap.b32 	%r3794, %r3791, %r3790, 8;
	shf.r.wrap.b32 	%r3795, %r3790, %r3791, 8;
	mov.b64 	%rd6104, {%r3795, %r3794};
	xor.b64  	%rd6105, %rd6103, %rd6104;
	add.s64 	%rd6106, %rd18403, %rd18393;
	add.s64 	%rd6107, %rd6106, %rd6100;
	add.s64 	%rd18393, %rd6107, %rd6105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3796,%dummy}, %rd18409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3797}, %rd18409;
	}
	shf.r.wrap.b32 	%r3798, %r3797, %r3796, 19;
	shf.r.wrap.b32 	%r3799, %r3796, %r3797, 19;
	mov.b64 	%rd6108, {%r3799, %r3798};
	shf.l.wrap.b32 	%r3800, %r3796, %r3797, 3;
	shf.l.wrap.b32 	%r3801, %r3797, %r3796, 3;
	mov.b64 	%rd6109, {%r3801, %r3800};
	shr.u64 	%rd6110, %rd18409, 6;
	xor.b64  	%rd6111, %rd6108, %rd6110;
	xor.b64  	%rd6112, %rd6111, %rd6109;
	shr.u64 	%rd6113, %rd18391, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd18391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd18391;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 1;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 1;
	mov.b64 	%rd6114, {%r3805, %r3804};
	xor.b64  	%rd6115, %rd6114, %rd6113;
	shf.r.wrap.b32 	%r3806, %r3803, %r3802, 8;
	shf.r.wrap.b32 	%r3807, %r3802, %r3803, 8;
	mov.b64 	%rd6116, {%r3807, %r3806};
	xor.b64  	%rd6117, %rd6115, %rd6116;
	add.s64 	%rd6118, %rd18404, %rd18392;
	add.s64 	%rd6119, %rd6118, %rd6112;
	add.s64 	%rd18392, %rd6119, %rd6117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3808,%dummy}, %rd18393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3809}, %rd18393;
	}
	shf.r.wrap.b32 	%r3810, %r3809, %r3808, 19;
	shf.r.wrap.b32 	%r3811, %r3808, %r3809, 19;
	mov.b64 	%rd6120, {%r3811, %r3810};
	shf.l.wrap.b32 	%r3812, %r3808, %r3809, 3;
	shf.l.wrap.b32 	%r3813, %r3809, %r3808, 3;
	mov.b64 	%rd6121, {%r3813, %r3812};
	shr.u64 	%rd6122, %rd18393, 6;
	xor.b64  	%rd6123, %rd6120, %rd6122;
	xor.b64  	%rd6124, %rd6123, %rd6121;
	shr.u64 	%rd6125, %rd18390, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3814,%dummy}, %rd18390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3815}, %rd18390;
	}
	shf.r.wrap.b32 	%r3816, %r3815, %r3814, 1;
	shf.r.wrap.b32 	%r3817, %r3814, %r3815, 1;
	mov.b64 	%rd6126, {%r3817, %r3816};
	xor.b64  	%rd6127, %rd6126, %rd6125;
	shf.r.wrap.b32 	%r3818, %r3815, %r3814, 8;
	shf.r.wrap.b32 	%r3819, %r3814, %r3815, 8;
	mov.b64 	%rd6128, {%r3819, %r3818};
	xor.b64  	%rd6129, %rd6127, %rd6128;
	add.s64 	%rd6130, %rd18405, %rd18391;
	add.s64 	%rd6131, %rd6130, %rd6124;
	add.s64 	%rd18391, %rd6131, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3820,%dummy}, %rd18392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd18392;
	}
	shf.r.wrap.b32 	%r3822, %r3821, %r3820, 19;
	shf.r.wrap.b32 	%r3823, %r3820, %r3821, 19;
	mov.b64 	%rd6132, {%r3823, %r3822};
	shf.l.wrap.b32 	%r3824, %r3820, %r3821, 3;
	shf.l.wrap.b32 	%r3825, %r3821, %r3820, 3;
	mov.b64 	%rd6133, {%r3825, %r3824};
	shr.u64 	%rd6134, %rd18392, 6;
	xor.b64  	%rd6135, %rd6132, %rd6134;
	xor.b64  	%rd6136, %rd6135, %rd6133;
	shr.u64 	%rd6137, %rd18389, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3826,%dummy}, %rd18389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3827}, %rd18389;
	}
	shf.r.wrap.b32 	%r3828, %r3827, %r3826, 1;
	shf.r.wrap.b32 	%r3829, %r3826, %r3827, 1;
	mov.b64 	%rd6138, {%r3829, %r3828};
	xor.b64  	%rd6139, %rd6138, %rd6137;
	shf.r.wrap.b32 	%r3830, %r3827, %r3826, 8;
	shf.r.wrap.b32 	%r3831, %r3826, %r3827, 8;
	mov.b64 	%rd6140, {%r3831, %r3830};
	xor.b64  	%rd6141, %rd6139, %rd6140;
	add.s64 	%rd6142, %rd18406, %rd18390;
	add.s64 	%rd6143, %rd6142, %rd6136;
	add.s64 	%rd18390, %rd6143, %rd6141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3832,%dummy}, %rd18391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3833}, %rd18391;
	}
	shf.r.wrap.b32 	%r3834, %r3833, %r3832, 19;
	shf.r.wrap.b32 	%r3835, %r3832, %r3833, 19;
	mov.b64 	%rd6144, {%r3835, %r3834};
	shf.l.wrap.b32 	%r3836, %r3832, %r3833, 3;
	shf.l.wrap.b32 	%r3837, %r3833, %r3832, 3;
	mov.b64 	%rd6145, {%r3837, %r3836};
	shr.u64 	%rd6146, %rd18391, 6;
	xor.b64  	%rd6147, %rd6144, %rd6146;
	xor.b64  	%rd6148, %rd6147, %rd6145;
	shr.u64 	%rd6149, %rd18388, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3838,%dummy}, %rd18388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3839}, %rd18388;
	}
	shf.r.wrap.b32 	%r3840, %r3839, %r3838, 1;
	shf.r.wrap.b32 	%r3841, %r3838, %r3839, 1;
	mov.b64 	%rd6150, {%r3841, %r3840};
	xor.b64  	%rd6151, %rd6150, %rd6149;
	shf.r.wrap.b32 	%r3842, %r3839, %r3838, 8;
	shf.r.wrap.b32 	%r3843, %r3838, %r3839, 8;
	mov.b64 	%rd6152, {%r3843, %r3842};
	xor.b64  	%rd6153, %rd6151, %rd6152;
	add.s64 	%rd6154, %rd18407, %rd18389;
	add.s64 	%rd6155, %rd6154, %rd6148;
	add.s64 	%rd18389, %rd6155, %rd6153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3844,%dummy}, %rd18390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3845}, %rd18390;
	}
	shf.r.wrap.b32 	%r3846, %r3845, %r3844, 19;
	shf.r.wrap.b32 	%r3847, %r3844, %r3845, 19;
	mov.b64 	%rd6156, {%r3847, %r3846};
	shf.l.wrap.b32 	%r3848, %r3844, %r3845, 3;
	shf.l.wrap.b32 	%r3849, %r3845, %r3844, 3;
	mov.b64 	%rd6157, {%r3849, %r3848};
	shr.u64 	%rd6158, %rd18390, 6;
	xor.b64  	%rd6159, %rd6156, %rd6158;
	xor.b64  	%rd6160, %rd6159, %rd6157;
	shr.u64 	%rd6161, %rd18387, 7;
	shf.r.wrap.b32 	%r3850, %r3689, %r3688, 1;
	shf.r.wrap.b32 	%r3851, %r3688, %r3689, 1;
	mov.b64 	%rd6162, {%r3851, %r3850};
	xor.b64  	%rd6163, %rd6162, %rd6161;
	shf.r.wrap.b32 	%r3852, %r3689, %r3688, 8;
	shf.r.wrap.b32 	%r3853, %r3688, %r3689, 8;
	mov.b64 	%rd6164, {%r3853, %r3852};
	xor.b64  	%rd6165, %rd6163, %rd6164;
	add.s64 	%rd6166, %rd18408, %rd18388;
	add.s64 	%rd6167, %rd6166, %rd6160;
	add.s64 	%rd18388, %rd6167, %rd6165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd18389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3855}, %rd18389;
	}
	shf.r.wrap.b32 	%r3856, %r3855, %r3854, 19;
	shf.r.wrap.b32 	%r3857, %r3854, %r3855, 19;
	mov.b64 	%rd6168, {%r3857, %r3856};
	shf.l.wrap.b32 	%r3858, %r3854, %r3855, 3;
	shf.l.wrap.b32 	%r3859, %r3855, %r3854, 3;
	mov.b64 	%rd6169, {%r3859, %r3858};
	shr.u64 	%rd6170, %rd18389, 6;
	xor.b64  	%rd6171, %rd6168, %rd6170;
	xor.b64  	%rd6172, %rd6171, %rd6169;
	shr.u64 	%rd6173, %rd18386, 7;
	shf.r.wrap.b32 	%r3860, %r3701, %r3700, 1;
	shf.r.wrap.b32 	%r3861, %r3700, %r3701, 1;
	mov.b64 	%rd6174, {%r3861, %r3860};
	xor.b64  	%rd6175, %rd6174, %rd6173;
	shf.r.wrap.b32 	%r3862, %r3701, %r3700, 8;
	shf.r.wrap.b32 	%r3863, %r3700, %r3701, 8;
	mov.b64 	%rd6176, {%r3863, %r3862};
	xor.b64  	%rd6177, %rd6175, %rd6176;
	add.s64 	%rd6178, %rd18409, %rd18387;
	add.s64 	%rd6179, %rd6178, %rd6172;
	add.s64 	%rd18387, %rd6179, %rd6177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd18388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd18388;
	}
	shf.r.wrap.b32 	%r3866, %r3865, %r3864, 19;
	shf.r.wrap.b32 	%r3867, %r3864, %r3865, 19;
	mov.b64 	%rd6180, {%r3867, %r3866};
	shf.l.wrap.b32 	%r3868, %r3864, %r3865, 3;
	shf.l.wrap.b32 	%r3869, %r3865, %r3864, 3;
	mov.b64 	%rd6181, {%r3869, %r3868};
	shr.u64 	%rd6182, %rd18388, 6;
	xor.b64  	%rd6183, %rd6180, %rd6182;
	xor.b64  	%rd6184, %rd6183, %rd6181;
	shf.r.wrap.b32 	%r3870, %r3713, %r3712, 1;
	shf.r.wrap.b32 	%r3871, %r3712, %r3713, 1;
	mov.b64 	%rd6185, {%r3871, %r3870};
	shf.r.wrap.b32 	%r3872, %r3713, %r3712, 8;
	shf.r.wrap.b32 	%r3873, %r3712, %r3713, 8;
	mov.b64 	%rd6186, {%r3873, %r3872};
	shr.u64 	%rd6187, %rd18402, 7;
	xor.b64  	%rd6188, %rd6185, %rd6187;
	xor.b64  	%rd6189, %rd6188, %rd6186;
	add.s64 	%rd6190, %rd18393, %rd18386;
	add.s64 	%rd6191, %rd6190, %rd6184;
	add.s64 	%rd18386, %rd6191, %rd6189;
	mul.wide.s32 	%rd6192, %r12599, 8;
	add.s64 	%rd6194, %rd18250, %rd6192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3874,%dummy}, %rd18398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3875}, %rd18398;
	}
	shf.r.wrap.b32 	%r3876, %r3875, %r3874, 18;
	shf.r.wrap.b32 	%r3877, %r3874, %r3875, 18;
	mov.b64 	%rd6195, {%r3877, %r3876};
	shf.r.wrap.b32 	%r3878, %r3875, %r3874, 14;
	shf.r.wrap.b32 	%r3879, %r3874, %r3875, 14;
	mov.b64 	%rd6196, {%r3879, %r3878};
	xor.b64  	%rd6197, %rd6195, %rd6196;
	shf.l.wrap.b32 	%r3880, %r3874, %r3875, 23;
	shf.l.wrap.b32 	%r3881, %r3875, %r3874, 23;
	mov.b64 	%rd6198, {%r3881, %r3880};
	xor.b64  	%rd6199, %rd6197, %rd6198;
	xor.b64  	%rd6200, %rd18399, %rd18400;
	and.b64  	%rd6201, %rd18398, %rd6200;
	xor.b64  	%rd6202, %rd6201, %rd18400;
	add.s64 	%rd6203, %rd6202, %rd18401;
	add.s64 	%rd6204, %rd6203, %rd18402;
	ld.const.u64 	%rd6205, [%rd6194];
	add.s64 	%rd6206, %rd6204, %rd6205;
	add.s64 	%rd6207, %rd6206, %rd6199;
	add.s64 	%rd6208, %rd6207, %rd18397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3882}, %rd18394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd18394;
	}
	shf.l.wrap.b32 	%r3884, %r3883, %r3882, 30;
	shf.l.wrap.b32 	%r3885, %r3882, %r3883, 30;
	mov.b64 	%rd6209, {%r3885, %r3884};
	shf.r.wrap.b32 	%r3886, %r3882, %r3883, 28;
	shf.r.wrap.b32 	%r3887, %r3883, %r3882, 28;
	mov.b64 	%rd6210, {%r3887, %r3886};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	shf.l.wrap.b32 	%r3888, %r3883, %r3882, 25;
	shf.l.wrap.b32 	%r3889, %r3882, %r3883, 25;
	mov.b64 	%rd6212, {%r3889, %r3888};
	xor.b64  	%rd6213, %rd6211, %rd6212;
	xor.b64  	%rd6214, %rd18394, %rd18395;
	and.b64  	%rd6215, %rd6214, %rd18396;
	and.b64  	%rd6216, %rd18394, %rd18395;
	or.b64  	%rd6217, %rd6215, %rd6216;
	add.s64 	%rd6218, %rd6207, %rd6217;
	add.s64 	%rd6219, %rd6218, %rd6213;
	add.s32 	%r3890, %r12599, 1;
	mul.wide.s32 	%rd6220, %r3890, 8;
	add.s64 	%rd6221, %rd18250, %rd6220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd6208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd6208;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 14;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 14;
	mov.b64 	%rd6222, {%r3894, %r3893};
	shf.r.wrap.b32 	%r3895, %r3892, %r3891, 18;
	shf.r.wrap.b32 	%r3896, %r3891, %r3892, 18;
	mov.b64 	%rd6223, {%r3896, %r3895};
	xor.b64  	%rd6224, %rd6223, %rd6222;
	shf.l.wrap.b32 	%r3897, %r3891, %r3892, 23;
	shf.l.wrap.b32 	%r3898, %r3892, %r3891, 23;
	mov.b64 	%rd6225, {%r3898, %r3897};
	xor.b64  	%rd6226, %rd6224, %rd6225;
	xor.b64  	%rd6227, %rd18398, %rd18399;
	and.b64  	%rd6228, %rd6208, %rd6227;
	xor.b64  	%rd6229, %rd6228, %rd18399;
	add.s64 	%rd6230, %rd18403, %rd18400;
	ld.const.u64 	%rd6231, [%rd6221];
	add.s64 	%rd6232, %rd6230, %rd6231;
	add.s64 	%rd6233, %rd6232, %rd6229;
	add.s64 	%rd6234, %rd6233, %rd6226;
	add.s64 	%rd6235, %rd6234, %rd18396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3899,%dummy}, %rd6219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3900}, %rd6219;
	}
	shf.r.wrap.b32 	%r3901, %r3900, %r3899, 28;
	shf.r.wrap.b32 	%r3902, %r3899, %r3900, 28;
	mov.b64 	%rd6236, {%r3902, %r3901};
	shf.l.wrap.b32 	%r3903, %r3899, %r3900, 30;
	shf.l.wrap.b32 	%r3904, %r3900, %r3899, 30;
	mov.b64 	%rd6237, {%r3904, %r3903};
	xor.b64  	%rd6238, %rd6237, %rd6236;
	shf.l.wrap.b32 	%r3905, %r3899, %r3900, 25;
	shf.l.wrap.b32 	%r3906, %r3900, %r3899, 25;
	mov.b64 	%rd6239, {%r3906, %r3905};
	xor.b64  	%rd6240, %rd6238, %rd6239;
	and.b64  	%rd6241, %rd6219, %rd18394;
	xor.b64  	%rd6242, %rd6219, %rd18394;
	and.b64  	%rd6243, %rd6242, %rd18395;
	or.b64  	%rd6244, %rd6243, %rd6241;
	add.s64 	%rd6245, %rd6234, %rd6244;
	add.s64 	%rd6246, %rd6245, %rd6240;
	add.s32 	%r3907, %r12599, 2;
	mul.wide.s32 	%rd6247, %r3907, 8;
	add.s64 	%rd6248, %rd18250, %rd6247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3908,%dummy}, %rd6235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3909}, %rd6235;
	}
	shf.r.wrap.b32 	%r3910, %r3909, %r3908, 14;
	shf.r.wrap.b32 	%r3911, %r3908, %r3909, 14;
	mov.b64 	%rd6249, {%r3911, %r3910};
	shf.r.wrap.b32 	%r3912, %r3909, %r3908, 18;
	shf.r.wrap.b32 	%r3913, %r3908, %r3909, 18;
	mov.b64 	%rd6250, {%r3913, %r3912};
	xor.b64  	%rd6251, %rd6250, %rd6249;
	shf.l.wrap.b32 	%r3914, %r3908, %r3909, 23;
	shf.l.wrap.b32 	%r3915, %r3909, %r3908, 23;
	mov.b64 	%rd6252, {%r3915, %r3914};
	xor.b64  	%rd6253, %rd6251, %rd6252;
	xor.b64  	%rd6254, %rd6208, %rd18398;
	and.b64  	%rd6255, %rd6235, %rd6254;
	xor.b64  	%rd6256, %rd6255, %rd18398;
	add.s64 	%rd6257, %rd18404, %rd18399;
	ld.const.u64 	%rd6258, [%rd6248];
	add.s64 	%rd6259, %rd6257, %rd6258;
	add.s64 	%rd6260, %rd6259, %rd6256;
	add.s64 	%rd6261, %rd6260, %rd6253;
	add.s64 	%rd6262, %rd6261, %rd18395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3916,%dummy}, %rd6246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3917}, %rd6246;
	}
	shf.r.wrap.b32 	%r3918, %r3917, %r3916, 28;
	shf.r.wrap.b32 	%r3919, %r3916, %r3917, 28;
	mov.b64 	%rd6263, {%r3919, %r3918};
	shf.l.wrap.b32 	%r3920, %r3916, %r3917, 30;
	shf.l.wrap.b32 	%r3921, %r3917, %r3916, 30;
	mov.b64 	%rd6264, {%r3921, %r3920};
	xor.b64  	%rd6265, %rd6264, %rd6263;
	shf.l.wrap.b32 	%r3922, %r3916, %r3917, 25;
	shf.l.wrap.b32 	%r3923, %r3917, %r3916, 25;
	mov.b64 	%rd6266, {%r3923, %r3922};
	xor.b64  	%rd6267, %rd6265, %rd6266;
	and.b64  	%rd6268, %rd6246, %rd6219;
	xor.b64  	%rd6269, %rd6246, %rd6219;
	and.b64  	%rd6270, %rd6269, %rd18394;
	or.b64  	%rd6271, %rd6270, %rd6268;
	add.s64 	%rd6272, %rd6261, %rd6271;
	add.s64 	%rd6273, %rd6272, %rd6267;
	add.s32 	%r3924, %r12599, 3;
	mul.wide.s32 	%rd6274, %r3924, 8;
	add.s64 	%rd6275, %rd18250, %rd6274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd6262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd6262;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 14;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 14;
	mov.b64 	%rd6276, {%r3928, %r3927};
	shf.r.wrap.b32 	%r3929, %r3926, %r3925, 18;
	shf.r.wrap.b32 	%r3930, %r3925, %r3926, 18;
	mov.b64 	%rd6277, {%r3930, %r3929};
	xor.b64  	%rd6278, %rd6277, %rd6276;
	shf.l.wrap.b32 	%r3931, %r3925, %r3926, 23;
	shf.l.wrap.b32 	%r3932, %r3926, %r3925, 23;
	mov.b64 	%rd6279, {%r3932, %r3931};
	xor.b64  	%rd6280, %rd6278, %rd6279;
	xor.b64  	%rd6281, %rd6235, %rd6208;
	and.b64  	%rd6282, %rd6262, %rd6281;
	xor.b64  	%rd6283, %rd6282, %rd6208;
	add.s64 	%rd6284, %rd18405, %rd18398;
	ld.const.u64 	%rd6285, [%rd6275];
	add.s64 	%rd6286, %rd6284, %rd6285;
	add.s64 	%rd6287, %rd6286, %rd6283;
	add.s64 	%rd6288, %rd6287, %rd6280;
	add.s64 	%rd6289, %rd6288, %rd18394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3933,%dummy}, %rd6273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3934}, %rd6273;
	}
	shf.r.wrap.b32 	%r3935, %r3934, %r3933, 28;
	shf.r.wrap.b32 	%r3936, %r3933, %r3934, 28;
	mov.b64 	%rd6290, {%r3936, %r3935};
	shf.l.wrap.b32 	%r3937, %r3933, %r3934, 30;
	shf.l.wrap.b32 	%r3938, %r3934, %r3933, 30;
	mov.b64 	%rd6291, {%r3938, %r3937};
	xor.b64  	%rd6292, %rd6291, %rd6290;
	shf.l.wrap.b32 	%r3939, %r3933, %r3934, 25;
	shf.l.wrap.b32 	%r3940, %r3934, %r3933, 25;
	mov.b64 	%rd6293, {%r3940, %r3939};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	and.b64  	%rd6295, %rd6273, %rd6246;
	xor.b64  	%rd6296, %rd6273, %rd6246;
	and.b64  	%rd6297, %rd6296, %rd6219;
	or.b64  	%rd6298, %rd6297, %rd6295;
	add.s64 	%rd6299, %rd6288, %rd6298;
	add.s64 	%rd6300, %rd6299, %rd6294;
	add.s32 	%r3941, %r12599, 4;
	mul.wide.s32 	%rd6301, %r3941, 8;
	add.s64 	%rd6302, %rd18250, %rd6301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3942,%dummy}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3943}, %rd6289;
	}
	shf.r.wrap.b32 	%r3944, %r3943, %r3942, 14;
	shf.r.wrap.b32 	%r3945, %r3942, %r3943, 14;
	mov.b64 	%rd6303, {%r3945, %r3944};
	shf.r.wrap.b32 	%r3946, %r3943, %r3942, 18;
	shf.r.wrap.b32 	%r3947, %r3942, %r3943, 18;
	mov.b64 	%rd6304, {%r3947, %r3946};
	xor.b64  	%rd6305, %rd6304, %rd6303;
	shf.l.wrap.b32 	%r3948, %r3942, %r3943, 23;
	shf.l.wrap.b32 	%r3949, %r3943, %r3942, 23;
	mov.b64 	%rd6306, {%r3949, %r3948};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	xor.b64  	%rd6308, %rd6262, %rd6235;
	and.b64  	%rd6309, %rd6289, %rd6308;
	xor.b64  	%rd6310, %rd6309, %rd6235;
	add.s64 	%rd6311, %rd6208, %rd18406;
	ld.const.u64 	%rd6312, [%rd6302];
	add.s64 	%rd6313, %rd6311, %rd6312;
	add.s64 	%rd6314, %rd6313, %rd6310;
	add.s64 	%rd6315, %rd6314, %rd6307;
	add.s64 	%rd6316, %rd6315, %rd6219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd6300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3951}, %rd6300;
	}
	shf.r.wrap.b32 	%r3952, %r3951, %r3950, 28;
	shf.r.wrap.b32 	%r3953, %r3950, %r3951, 28;
	mov.b64 	%rd6317, {%r3953, %r3952};
	shf.l.wrap.b32 	%r3954, %r3950, %r3951, 30;
	shf.l.wrap.b32 	%r3955, %r3951, %r3950, 30;
	mov.b64 	%rd6318, {%r3955, %r3954};
	xor.b64  	%rd6319, %rd6318, %rd6317;
	shf.l.wrap.b32 	%r3956, %r3950, %r3951, 25;
	shf.l.wrap.b32 	%r3957, %r3951, %r3950, 25;
	mov.b64 	%rd6320, {%r3957, %r3956};
	xor.b64  	%rd6321, %rd6319, %rd6320;
	and.b64  	%rd6322, %rd6300, %rd6273;
	xor.b64  	%rd6323, %rd6300, %rd6273;
	and.b64  	%rd6324, %rd6323, %rd6246;
	or.b64  	%rd6325, %rd6324, %rd6322;
	add.s64 	%rd6326, %rd6315, %rd6325;
	add.s64 	%rd6327, %rd6326, %rd6321;
	add.s32 	%r3958, %r12599, 5;
	mul.wide.s32 	%rd6328, %r3958, 8;
	add.s64 	%rd6329, %rd18250, %rd6328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3959,%dummy}, %rd6316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3960}, %rd6316;
	}
	shf.r.wrap.b32 	%r3961, %r3960, %r3959, 14;
	shf.r.wrap.b32 	%r3962, %r3959, %r3960, 14;
	mov.b64 	%rd6330, {%r3962, %r3961};
	shf.r.wrap.b32 	%r3963, %r3960, %r3959, 18;
	shf.r.wrap.b32 	%r3964, %r3959, %r3960, 18;
	mov.b64 	%rd6331, {%r3964, %r3963};
	xor.b64  	%rd6332, %rd6331, %rd6330;
	shf.l.wrap.b32 	%r3965, %r3959, %r3960, 23;
	shf.l.wrap.b32 	%r3966, %r3960, %r3959, 23;
	mov.b64 	%rd6333, {%r3966, %r3965};
	xor.b64  	%rd6334, %rd6332, %rd6333;
	xor.b64  	%rd6335, %rd6289, %rd6262;
	and.b64  	%rd6336, %rd6316, %rd6335;
	xor.b64  	%rd6337, %rd6336, %rd6262;
	add.s64 	%rd6338, %rd6235, %rd18407;
	ld.const.u64 	%rd6339, [%rd6329];
	add.s64 	%rd6340, %rd6338, %rd6339;
	add.s64 	%rd6341, %rd6340, %rd6337;
	add.s64 	%rd6342, %rd6341, %rd6334;
	add.s64 	%rd6343, %rd6342, %rd6246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3967,%dummy}, %rd6327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3968}, %rd6327;
	}
	shf.r.wrap.b32 	%r3969, %r3968, %r3967, 28;
	shf.r.wrap.b32 	%r3970, %r3967, %r3968, 28;
	mov.b64 	%rd6344, {%r3970, %r3969};
	shf.l.wrap.b32 	%r3971, %r3967, %r3968, 30;
	shf.l.wrap.b32 	%r3972, %r3968, %r3967, 30;
	mov.b64 	%rd6345, {%r3972, %r3971};
	xor.b64  	%rd6346, %rd6345, %rd6344;
	shf.l.wrap.b32 	%r3973, %r3967, %r3968, 25;
	shf.l.wrap.b32 	%r3974, %r3968, %r3967, 25;
	mov.b64 	%rd6347, {%r3974, %r3973};
	xor.b64  	%rd6348, %rd6346, %rd6347;
	and.b64  	%rd6349, %rd6327, %rd6300;
	xor.b64  	%rd6350, %rd6327, %rd6300;
	and.b64  	%rd6351, %rd6350, %rd6273;
	or.b64  	%rd6352, %rd6351, %rd6349;
	add.s64 	%rd6353, %rd6342, %rd6352;
	add.s64 	%rd6354, %rd6353, %rd6348;
	add.s32 	%r3975, %r12599, 6;
	mul.wide.s32 	%rd6355, %r3975, 8;
	add.s64 	%rd6356, %rd18250, %rd6355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3976,%dummy}, %rd6343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd6343;
	}
	shf.r.wrap.b32 	%r3978, %r3977, %r3976, 14;
	shf.r.wrap.b32 	%r3979, %r3976, %r3977, 14;
	mov.b64 	%rd6357, {%r3979, %r3978};
	shf.r.wrap.b32 	%r3980, %r3977, %r3976, 18;
	shf.r.wrap.b32 	%r3981, %r3976, %r3977, 18;
	mov.b64 	%rd6358, {%r3981, %r3980};
	xor.b64  	%rd6359, %rd6358, %rd6357;
	shf.l.wrap.b32 	%r3982, %r3976, %r3977, 23;
	shf.l.wrap.b32 	%r3983, %r3977, %r3976, 23;
	mov.b64 	%rd6360, {%r3983, %r3982};
	xor.b64  	%rd6361, %rd6359, %rd6360;
	xor.b64  	%rd6362, %rd6316, %rd6289;
	and.b64  	%rd6363, %rd6343, %rd6362;
	xor.b64  	%rd6364, %rd6363, %rd6289;
	add.s64 	%rd6365, %rd6262, %rd18408;
	ld.const.u64 	%rd6366, [%rd6356];
	add.s64 	%rd6367, %rd6365, %rd6366;
	add.s64 	%rd6368, %rd6367, %rd6364;
	add.s64 	%rd6369, %rd6368, %rd6361;
	add.s64 	%rd6370, %rd6369, %rd6273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3984,%dummy}, %rd6354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3985}, %rd6354;
	}
	shf.r.wrap.b32 	%r3986, %r3985, %r3984, 28;
	shf.r.wrap.b32 	%r3987, %r3984, %r3985, 28;
	mov.b64 	%rd6371, {%r3987, %r3986};
	shf.l.wrap.b32 	%r3988, %r3984, %r3985, 30;
	shf.l.wrap.b32 	%r3989, %r3985, %r3984, 30;
	mov.b64 	%rd6372, {%r3989, %r3988};
	xor.b64  	%rd6373, %rd6372, %rd6371;
	shf.l.wrap.b32 	%r3990, %r3984, %r3985, 25;
	shf.l.wrap.b32 	%r3991, %r3985, %r3984, 25;
	mov.b64 	%rd6374, {%r3991, %r3990};
	xor.b64  	%rd6375, %rd6373, %rd6374;
	and.b64  	%rd6376, %rd6354, %rd6327;
	xor.b64  	%rd6377, %rd6354, %rd6327;
	and.b64  	%rd6378, %rd6377, %rd6300;
	or.b64  	%rd6379, %rd6378, %rd6376;
	add.s64 	%rd6380, %rd6369, %rd6379;
	add.s64 	%rd6381, %rd6380, %rd6375;
	add.s32 	%r3992, %r12599, 7;
	mul.wide.s32 	%rd6382, %r3992, 8;
	add.s64 	%rd6383, %rd18250, %rd6382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3993,%dummy}, %rd6370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3994}, %rd6370;
	}
	shf.r.wrap.b32 	%r3995, %r3994, %r3993, 14;
	shf.r.wrap.b32 	%r3996, %r3993, %r3994, 14;
	mov.b64 	%rd6384, {%r3996, %r3995};
	shf.r.wrap.b32 	%r3997, %r3994, %r3993, 18;
	shf.r.wrap.b32 	%r3998, %r3993, %r3994, 18;
	mov.b64 	%rd6385, {%r3998, %r3997};
	xor.b64  	%rd6386, %rd6385, %rd6384;
	shf.l.wrap.b32 	%r3999, %r3993, %r3994, 23;
	shf.l.wrap.b32 	%r4000, %r3994, %r3993, 23;
	mov.b64 	%rd6387, {%r4000, %r3999};
	xor.b64  	%rd6388, %rd6386, %rd6387;
	xor.b64  	%rd6389, %rd6343, %rd6316;
	and.b64  	%rd6390, %rd6370, %rd6389;
	xor.b64  	%rd6391, %rd6390, %rd6316;
	add.s64 	%rd6392, %rd6289, %rd18409;
	ld.const.u64 	%rd6393, [%rd6383];
	add.s64 	%rd6394, %rd6392, %rd6393;
	add.s64 	%rd6395, %rd6394, %rd6391;
	add.s64 	%rd6396, %rd6395, %rd6388;
	add.s64 	%rd6397, %rd6396, %rd6300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4001,%dummy}, %rd6381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4002}, %rd6381;
	}
	shf.r.wrap.b32 	%r4003, %r4002, %r4001, 28;
	shf.r.wrap.b32 	%r4004, %r4001, %r4002, 28;
	mov.b64 	%rd6398, {%r4004, %r4003};
	shf.l.wrap.b32 	%r4005, %r4001, %r4002, 30;
	shf.l.wrap.b32 	%r4006, %r4002, %r4001, 30;
	mov.b64 	%rd6399, {%r4006, %r4005};
	xor.b64  	%rd6400, %rd6399, %rd6398;
	shf.l.wrap.b32 	%r4007, %r4001, %r4002, 25;
	shf.l.wrap.b32 	%r4008, %r4002, %r4001, 25;
	mov.b64 	%rd6401, {%r4008, %r4007};
	xor.b64  	%rd6402, %rd6400, %rd6401;
	and.b64  	%rd6403, %rd6381, %rd6354;
	xor.b64  	%rd6404, %rd6381, %rd6354;
	and.b64  	%rd6405, %rd6404, %rd6327;
	or.b64  	%rd6406, %rd6405, %rd6403;
	add.s64 	%rd6407, %rd6396, %rd6406;
	add.s64 	%rd6408, %rd6407, %rd6402;
	add.s32 	%r4009, %r12599, 8;
	mul.wide.s32 	%rd6409, %r4009, 8;
	add.s64 	%rd6410, %rd18250, %rd6409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4010,%dummy}, %rd6397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4011}, %rd6397;
	}
	shf.r.wrap.b32 	%r4012, %r4011, %r4010, 14;
	shf.r.wrap.b32 	%r4013, %r4010, %r4011, 14;
	mov.b64 	%rd6411, {%r4013, %r4012};
	shf.r.wrap.b32 	%r4014, %r4011, %r4010, 18;
	shf.r.wrap.b32 	%r4015, %r4010, %r4011, 18;
	mov.b64 	%rd6412, {%r4015, %r4014};
	xor.b64  	%rd6413, %rd6412, %rd6411;
	shf.l.wrap.b32 	%r4016, %r4010, %r4011, 23;
	shf.l.wrap.b32 	%r4017, %r4011, %r4010, 23;
	mov.b64 	%rd6414, {%r4017, %r4016};
	xor.b64  	%rd6415, %rd6413, %rd6414;
	xor.b64  	%rd6416, %rd6370, %rd6343;
	and.b64  	%rd6417, %rd6397, %rd6416;
	xor.b64  	%rd6418, %rd6417, %rd6343;
	add.s64 	%rd6419, %rd6316, %rd18393;
	ld.const.u64 	%rd6420, [%rd6410];
	add.s64 	%rd6421, %rd6419, %rd6420;
	add.s64 	%rd6422, %rd6421, %rd6418;
	add.s64 	%rd6423, %rd6422, %rd6415;
	add.s64 	%rd6424, %rd6423, %rd6327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4018,%dummy}, %rd6408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4019}, %rd6408;
	}
	shf.r.wrap.b32 	%r4020, %r4019, %r4018, 28;
	shf.r.wrap.b32 	%r4021, %r4018, %r4019, 28;
	mov.b64 	%rd6425, {%r4021, %r4020};
	shf.l.wrap.b32 	%r4022, %r4018, %r4019, 30;
	shf.l.wrap.b32 	%r4023, %r4019, %r4018, 30;
	mov.b64 	%rd6426, {%r4023, %r4022};
	xor.b64  	%rd6427, %rd6426, %rd6425;
	shf.l.wrap.b32 	%r4024, %r4018, %r4019, 25;
	shf.l.wrap.b32 	%r4025, %r4019, %r4018, 25;
	mov.b64 	%rd6428, {%r4025, %r4024};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	and.b64  	%rd6430, %rd6408, %rd6381;
	xor.b64  	%rd6431, %rd6408, %rd6381;
	and.b64  	%rd6432, %rd6431, %rd6354;
	or.b64  	%rd6433, %rd6432, %rd6430;
	add.s64 	%rd6434, %rd6423, %rd6433;
	add.s64 	%rd6435, %rd6434, %rd6429;
	add.s32 	%r4026, %r12599, 9;
	mul.wide.s32 	%rd6436, %r4026, 8;
	add.s64 	%rd6437, %rd18250, %rd6436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4027,%dummy}, %rd6424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4028}, %rd6424;
	}
	shf.r.wrap.b32 	%r4029, %r4028, %r4027, 14;
	shf.r.wrap.b32 	%r4030, %r4027, %r4028, 14;
	mov.b64 	%rd6438, {%r4030, %r4029};
	shf.r.wrap.b32 	%r4031, %r4028, %r4027, 18;
	shf.r.wrap.b32 	%r4032, %r4027, %r4028, 18;
	mov.b64 	%rd6439, {%r4032, %r4031};
	xor.b64  	%rd6440, %rd6439, %rd6438;
	shf.l.wrap.b32 	%r4033, %r4027, %r4028, 23;
	shf.l.wrap.b32 	%r4034, %r4028, %r4027, 23;
	mov.b64 	%rd6441, {%r4034, %r4033};
	xor.b64  	%rd6442, %rd6440, %rd6441;
	xor.b64  	%rd6443, %rd6397, %rd6370;
	and.b64  	%rd6444, %rd6424, %rd6443;
	xor.b64  	%rd6445, %rd6444, %rd6370;
	add.s64 	%rd6446, %rd6343, %rd18392;
	ld.const.u64 	%rd6447, [%rd6437];
	add.s64 	%rd6448, %rd6446, %rd6447;
	add.s64 	%rd6449, %rd6448, %rd6445;
	add.s64 	%rd6450, %rd6449, %rd6442;
	add.s64 	%rd6451, %rd6450, %rd6354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4035,%dummy}, %rd6435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4036}, %rd6435;
	}
	shf.r.wrap.b32 	%r4037, %r4036, %r4035, 28;
	shf.r.wrap.b32 	%r4038, %r4035, %r4036, 28;
	mov.b64 	%rd6452, {%r4038, %r4037};
	shf.l.wrap.b32 	%r4039, %r4035, %r4036, 30;
	shf.l.wrap.b32 	%r4040, %r4036, %r4035, 30;
	mov.b64 	%rd6453, {%r4040, %r4039};
	xor.b64  	%rd6454, %rd6453, %rd6452;
	shf.l.wrap.b32 	%r4041, %r4035, %r4036, 25;
	shf.l.wrap.b32 	%r4042, %r4036, %r4035, 25;
	mov.b64 	%rd6455, {%r4042, %r4041};
	xor.b64  	%rd6456, %rd6454, %rd6455;
	and.b64  	%rd6457, %rd6435, %rd6408;
	xor.b64  	%rd6458, %rd6435, %rd6408;
	and.b64  	%rd6459, %rd6458, %rd6381;
	or.b64  	%rd6460, %rd6459, %rd6457;
	add.s64 	%rd6461, %rd6450, %rd6460;
	add.s64 	%rd6462, %rd6461, %rd6456;
	add.s32 	%r4043, %r12599, 10;
	mul.wide.s32 	%rd6463, %r4043, 8;
	add.s64 	%rd6464, %rd18250, %rd6463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4044,%dummy}, %rd6451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4045}, %rd6451;
	}
	shf.r.wrap.b32 	%r4046, %r4045, %r4044, 14;
	shf.r.wrap.b32 	%r4047, %r4044, %r4045, 14;
	mov.b64 	%rd6465, {%r4047, %r4046};
	shf.r.wrap.b32 	%r4048, %r4045, %r4044, 18;
	shf.r.wrap.b32 	%r4049, %r4044, %r4045, 18;
	mov.b64 	%rd6466, {%r4049, %r4048};
	xor.b64  	%rd6467, %rd6466, %rd6465;
	shf.l.wrap.b32 	%r4050, %r4044, %r4045, 23;
	shf.l.wrap.b32 	%r4051, %r4045, %r4044, 23;
	mov.b64 	%rd6468, {%r4051, %r4050};
	xor.b64  	%rd6469, %rd6467, %rd6468;
	xor.b64  	%rd6470, %rd6424, %rd6397;
	and.b64  	%rd6471, %rd6451, %rd6470;
	xor.b64  	%rd6472, %rd6471, %rd6397;
	add.s64 	%rd6473, %rd6370, %rd18391;
	ld.const.u64 	%rd6474, [%rd6464];
	add.s64 	%rd6475, %rd6473, %rd6474;
	add.s64 	%rd6476, %rd6475, %rd6472;
	add.s64 	%rd6477, %rd6476, %rd6469;
	add.s64 	%rd6478, %rd6477, %rd6381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4052,%dummy}, %rd6462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4053}, %rd6462;
	}
	shf.r.wrap.b32 	%r4054, %r4053, %r4052, 28;
	shf.r.wrap.b32 	%r4055, %r4052, %r4053, 28;
	mov.b64 	%rd6479, {%r4055, %r4054};
	shf.l.wrap.b32 	%r4056, %r4052, %r4053, 30;
	shf.l.wrap.b32 	%r4057, %r4053, %r4052, 30;
	mov.b64 	%rd6480, {%r4057, %r4056};
	xor.b64  	%rd6481, %rd6480, %rd6479;
	shf.l.wrap.b32 	%r4058, %r4052, %r4053, 25;
	shf.l.wrap.b32 	%r4059, %r4053, %r4052, 25;
	mov.b64 	%rd6482, {%r4059, %r4058};
	xor.b64  	%rd6483, %rd6481, %rd6482;
	and.b64  	%rd6484, %rd6462, %rd6435;
	xor.b64  	%rd6485, %rd6462, %rd6435;
	and.b64  	%rd6486, %rd6485, %rd6408;
	or.b64  	%rd6487, %rd6486, %rd6484;
	add.s64 	%rd6488, %rd6477, %rd6487;
	add.s64 	%rd6489, %rd6488, %rd6483;
	add.s32 	%r4060, %r12599, 11;
	mul.wide.s32 	%rd6490, %r4060, 8;
	add.s64 	%rd6491, %rd18250, %rd6490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4061,%dummy}, %rd6478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4062}, %rd6478;
	}
	shf.r.wrap.b32 	%r4063, %r4062, %r4061, 14;
	shf.r.wrap.b32 	%r4064, %r4061, %r4062, 14;
	mov.b64 	%rd6492, {%r4064, %r4063};
	shf.r.wrap.b32 	%r4065, %r4062, %r4061, 18;
	shf.r.wrap.b32 	%r4066, %r4061, %r4062, 18;
	mov.b64 	%rd6493, {%r4066, %r4065};
	xor.b64  	%rd6494, %rd6493, %rd6492;
	shf.l.wrap.b32 	%r4067, %r4061, %r4062, 23;
	shf.l.wrap.b32 	%r4068, %r4062, %r4061, 23;
	mov.b64 	%rd6495, {%r4068, %r4067};
	xor.b64  	%rd6496, %rd6494, %rd6495;
	xor.b64  	%rd6497, %rd6451, %rd6424;
	and.b64  	%rd6498, %rd6478, %rd6497;
	xor.b64  	%rd6499, %rd6498, %rd6424;
	add.s64 	%rd6500, %rd6397, %rd18390;
	ld.const.u64 	%rd6501, [%rd6491];
	add.s64 	%rd6502, %rd6500, %rd6501;
	add.s64 	%rd6503, %rd6502, %rd6499;
	add.s64 	%rd6504, %rd6503, %rd6496;
	add.s64 	%rd6505, %rd6504, %rd6408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4069,%dummy}, %rd6489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4070}, %rd6489;
	}
	shf.r.wrap.b32 	%r4071, %r4070, %r4069, 28;
	shf.r.wrap.b32 	%r4072, %r4069, %r4070, 28;
	mov.b64 	%rd6506, {%r4072, %r4071};
	shf.l.wrap.b32 	%r4073, %r4069, %r4070, 30;
	shf.l.wrap.b32 	%r4074, %r4070, %r4069, 30;
	mov.b64 	%rd6507, {%r4074, %r4073};
	xor.b64  	%rd6508, %rd6507, %rd6506;
	shf.l.wrap.b32 	%r4075, %r4069, %r4070, 25;
	shf.l.wrap.b32 	%r4076, %r4070, %r4069, 25;
	mov.b64 	%rd6509, {%r4076, %r4075};
	xor.b64  	%rd6510, %rd6508, %rd6509;
	and.b64  	%rd6511, %rd6489, %rd6462;
	xor.b64  	%rd6512, %rd6489, %rd6462;
	and.b64  	%rd6513, %rd6512, %rd6435;
	or.b64  	%rd6514, %rd6513, %rd6511;
	add.s64 	%rd6515, %rd6504, %rd6514;
	add.s64 	%rd6516, %rd6515, %rd6510;
	add.s32 	%r4077, %r12599, 12;
	mul.wide.s32 	%rd6517, %r4077, 8;
	add.s64 	%rd6518, %rd18250, %rd6517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4078,%dummy}, %rd6505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4079}, %rd6505;
	}
	shf.r.wrap.b32 	%r4080, %r4079, %r4078, 14;
	shf.r.wrap.b32 	%r4081, %r4078, %r4079, 14;
	mov.b64 	%rd6519, {%r4081, %r4080};
	shf.r.wrap.b32 	%r4082, %r4079, %r4078, 18;
	shf.r.wrap.b32 	%r4083, %r4078, %r4079, 18;
	mov.b64 	%rd6520, {%r4083, %r4082};
	xor.b64  	%rd6521, %rd6520, %rd6519;
	shf.l.wrap.b32 	%r4084, %r4078, %r4079, 23;
	shf.l.wrap.b32 	%r4085, %r4079, %r4078, 23;
	mov.b64 	%rd6522, {%r4085, %r4084};
	xor.b64  	%rd6523, %rd6521, %rd6522;
	xor.b64  	%rd6524, %rd6478, %rd6451;
	and.b64  	%rd6525, %rd6505, %rd6524;
	xor.b64  	%rd6526, %rd6525, %rd6451;
	add.s64 	%rd6527, %rd6424, %rd18389;
	ld.const.u64 	%rd6528, [%rd6518];
	add.s64 	%rd6529, %rd6527, %rd6528;
	add.s64 	%rd6530, %rd6529, %rd6526;
	add.s64 	%rd6531, %rd6530, %rd6523;
	add.s64 	%rd18401, %rd6531, %rd6435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4086,%dummy}, %rd6516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4087}, %rd6516;
	}
	shf.r.wrap.b32 	%r4088, %r4087, %r4086, 28;
	shf.r.wrap.b32 	%r4089, %r4086, %r4087, 28;
	mov.b64 	%rd6532, {%r4089, %r4088};
	shf.l.wrap.b32 	%r4090, %r4086, %r4087, 30;
	shf.l.wrap.b32 	%r4091, %r4087, %r4086, 30;
	mov.b64 	%rd6533, {%r4091, %r4090};
	xor.b64  	%rd6534, %rd6533, %rd6532;
	shf.l.wrap.b32 	%r4092, %r4086, %r4087, 25;
	shf.l.wrap.b32 	%r4093, %r4087, %r4086, 25;
	mov.b64 	%rd6535, {%r4093, %r4092};
	xor.b64  	%rd6536, %rd6534, %rd6535;
	and.b64  	%rd6537, %rd6516, %rd6489;
	xor.b64  	%rd6538, %rd6516, %rd6489;
	and.b64  	%rd6539, %rd6538, %rd6462;
	or.b64  	%rd6540, %rd6539, %rd6537;
	add.s64 	%rd6541, %rd6531, %rd6540;
	add.s64 	%rd18397, %rd6541, %rd6536;
	add.s32 	%r4094, %r12599, 13;
	mul.wide.s32 	%rd6542, %r4094, 8;
	add.s64 	%rd6543, %rd18250, %rd6542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4095,%dummy}, %rd18401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4096}, %rd18401;
	}
	shf.r.wrap.b32 	%r4097, %r4096, %r4095, 14;
	shf.r.wrap.b32 	%r4098, %r4095, %r4096, 14;
	mov.b64 	%rd6544, {%r4098, %r4097};
	shf.r.wrap.b32 	%r4099, %r4096, %r4095, 18;
	shf.r.wrap.b32 	%r4100, %r4095, %r4096, 18;
	mov.b64 	%rd6545, {%r4100, %r4099};
	xor.b64  	%rd6546, %rd6545, %rd6544;
	shf.l.wrap.b32 	%r4101, %r4095, %r4096, 23;
	shf.l.wrap.b32 	%r4102, %r4096, %r4095, 23;
	mov.b64 	%rd6547, {%r4102, %r4101};
	xor.b64  	%rd6548, %rd6546, %rd6547;
	xor.b64  	%rd6549, %rd6505, %rd6478;
	and.b64  	%rd6550, %rd18401, %rd6549;
	xor.b64  	%rd6551, %rd6550, %rd6478;
	add.s64 	%rd6552, %rd6451, %rd18388;
	ld.const.u64 	%rd6553, [%rd6543];
	add.s64 	%rd6554, %rd6552, %rd6553;
	add.s64 	%rd6555, %rd6554, %rd6551;
	add.s64 	%rd6556, %rd6555, %rd6548;
	add.s64 	%rd18400, %rd6556, %rd6462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4103,%dummy}, %rd18397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4104}, %rd18397;
	}
	shf.r.wrap.b32 	%r4105, %r4104, %r4103, 28;
	shf.r.wrap.b32 	%r4106, %r4103, %r4104, 28;
	mov.b64 	%rd6557, {%r4106, %r4105};
	shf.l.wrap.b32 	%r4107, %r4103, %r4104, 30;
	shf.l.wrap.b32 	%r4108, %r4104, %r4103, 30;
	mov.b64 	%rd6558, {%r4108, %r4107};
	xor.b64  	%rd6559, %rd6558, %rd6557;
	shf.l.wrap.b32 	%r4109, %r4103, %r4104, 25;
	shf.l.wrap.b32 	%r4110, %r4104, %r4103, 25;
	mov.b64 	%rd6560, {%r4110, %r4109};
	xor.b64  	%rd6561, %rd6559, %rd6560;
	and.b64  	%rd6562, %rd18397, %rd6516;
	xor.b64  	%rd6563, %rd18397, %rd6516;
	and.b64  	%rd6564, %rd6563, %rd6489;
	or.b64  	%rd6565, %rd6564, %rd6562;
	add.s64 	%rd6566, %rd6556, %rd6565;
	add.s64 	%rd18396, %rd6566, %rd6561;
	add.s32 	%r4111, %r12599, 14;
	mul.wide.s32 	%rd6567, %r4111, 8;
	add.s64 	%rd6568, %rd18250, %rd6567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4112,%dummy}, %rd18400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4113}, %rd18400;
	}
	shf.r.wrap.b32 	%r4114, %r4113, %r4112, 14;
	shf.r.wrap.b32 	%r4115, %r4112, %r4113, 14;
	mov.b64 	%rd6569, {%r4115, %r4114};
	shf.r.wrap.b32 	%r4116, %r4113, %r4112, 18;
	shf.r.wrap.b32 	%r4117, %r4112, %r4113, 18;
	mov.b64 	%rd6570, {%r4117, %r4116};
	xor.b64  	%rd6571, %rd6570, %rd6569;
	shf.l.wrap.b32 	%r4118, %r4112, %r4113, 23;
	shf.l.wrap.b32 	%r4119, %r4113, %r4112, 23;
	mov.b64 	%rd6572, {%r4119, %r4118};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	xor.b64  	%rd6574, %rd18401, %rd6505;
	and.b64  	%rd6575, %rd18400, %rd6574;
	xor.b64  	%rd6576, %rd6575, %rd6505;
	add.s64 	%rd6577, %rd6478, %rd18387;
	ld.const.u64 	%rd6578, [%rd6568];
	add.s64 	%rd6579, %rd6577, %rd6578;
	add.s64 	%rd6580, %rd6579, %rd6576;
	add.s64 	%rd6581, %rd6580, %rd6573;
	add.s64 	%rd18399, %rd6581, %rd6489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4120,%dummy}, %rd18396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4121}, %rd18396;
	}
	shf.r.wrap.b32 	%r4122, %r4121, %r4120, 28;
	shf.r.wrap.b32 	%r4123, %r4120, %r4121, 28;
	mov.b64 	%rd6582, {%r4123, %r4122};
	shf.l.wrap.b32 	%r4124, %r4120, %r4121, 30;
	shf.l.wrap.b32 	%r4125, %r4121, %r4120, 30;
	mov.b64 	%rd6583, {%r4125, %r4124};
	xor.b64  	%rd6584, %rd6583, %rd6582;
	shf.l.wrap.b32 	%r4126, %r4120, %r4121, 25;
	shf.l.wrap.b32 	%r4127, %r4121, %r4120, 25;
	mov.b64 	%rd6585, {%r4127, %r4126};
	xor.b64  	%rd6586, %rd6584, %rd6585;
	and.b64  	%rd6587, %rd18396, %rd18397;
	xor.b64  	%rd6588, %rd18396, %rd18397;
	and.b64  	%rd6589, %rd6588, %rd6516;
	or.b64  	%rd6590, %rd6589, %rd6587;
	add.s64 	%rd6591, %rd6581, %rd6590;
	add.s64 	%rd18395, %rd6591, %rd6586;
	add.s32 	%r4128, %r12599, 15;
	mul.wide.s32 	%rd6592, %r4128, 8;
	add.s64 	%rd6593, %rd18250, %rd6592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4129,%dummy}, %rd18399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4130}, %rd18399;
	}
	shf.r.wrap.b32 	%r4131, %r4130, %r4129, 14;
	shf.r.wrap.b32 	%r4132, %r4129, %r4130, 14;
	mov.b64 	%rd6594, {%r4132, %r4131};
	shf.r.wrap.b32 	%r4133, %r4130, %r4129, 18;
	shf.r.wrap.b32 	%r4134, %r4129, %r4130, 18;
	mov.b64 	%rd6595, {%r4134, %r4133};
	xor.b64  	%rd6596, %rd6595, %rd6594;
	shf.l.wrap.b32 	%r4135, %r4129, %r4130, 23;
	shf.l.wrap.b32 	%r4136, %r4130, %r4129, 23;
	mov.b64 	%rd6597, {%r4136, %r4135};
	xor.b64  	%rd6598, %rd6596, %rd6597;
	xor.b64  	%rd6599, %rd18400, %rd18401;
	and.b64  	%rd6600, %rd18399, %rd6599;
	xor.b64  	%rd6601, %rd6600, %rd18401;
	add.s64 	%rd6602, %rd6505, %rd18386;
	ld.const.u64 	%rd6603, [%rd6593];
	add.s64 	%rd6604, %rd6602, %rd6603;
	add.s64 	%rd6605, %rd6604, %rd6601;
	add.s64 	%rd6606, %rd6605, %rd6598;
	add.s64 	%rd18398, %rd6606, %rd6516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4137,%dummy}, %rd18395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4138}, %rd18395;
	}
	shf.r.wrap.b32 	%r4139, %r4138, %r4137, 28;
	shf.r.wrap.b32 	%r4140, %r4137, %r4138, 28;
	mov.b64 	%rd6607, {%r4140, %r4139};
	shf.l.wrap.b32 	%r4141, %r4137, %r4138, 30;
	shf.l.wrap.b32 	%r4142, %r4138, %r4137, 30;
	mov.b64 	%rd6608, {%r4142, %r4141};
	xor.b64  	%rd6609, %rd6608, %rd6607;
	shf.l.wrap.b32 	%r4143, %r4137, %r4138, 25;
	shf.l.wrap.b32 	%r4144, %r4138, %r4137, 25;
	mov.b64 	%rd6610, {%r4144, %r4143};
	xor.b64  	%rd6611, %rd6609, %rd6610;
	and.b64  	%rd6612, %rd18395, %rd18396;
	xor.b64  	%rd6613, %rd18395, %rd18396;
	and.b64  	%rd6614, %rd6613, %rd18397;
	or.b64  	%rd6615, %rd6614, %rd6612;
	add.s64 	%rd6616, %rd6606, %rd6615;
	add.s64 	%rd18394, %rd6616, %rd6611;
	add.s32 	%r12599, %r12599, 16;
	setp.lt.s32	%p50, %r12599, 80;
	@%p50 bra 	BB0_83;

	add.s64 	%rd6617, %rd414, %rd18394;
	st.local.u64 	[%rd1], %rd6617;
	add.s64 	%rd6618, %rd415, %rd18395;
	st.local.u64 	[%rd1+8], %rd6618;
	add.s64 	%rd6619, %rd416, %rd18396;
	st.local.u64 	[%rd1+16], %rd6619;
	add.s64 	%rd6620, %rd413, %rd18397;
	st.local.u64 	[%rd1+24], %rd6620;
	add.s64 	%rd6621, %rd408, %rd18398;
	st.local.u64 	[%rd1+32], %rd6621;
	add.s64 	%rd6622, %rd410, %rd18399;
	st.local.u64 	[%rd1+40], %rd6622;
	add.s64 	%rd6623, %rd409, %rd18400;
	st.local.u64 	[%rd1+48], %rd6623;
	add.s64 	%rd6624, %rd411, %rd18401;
	st.local.u64 	[%rd1+56], %rd6624;
	sub.s32 	%r128, %r3, %r108;
	setp.lt.s32	%p51, %r128, 1;
	@%p51 bra 	BB0_102;

	and.b32  	%r12541, %r12590, 127;
	add.s32 	%r12540, %r12541, %r3;
	add.s32 	%r129, %r12540, -128;
	and.b32  	%r130, %r129, 3;
	setp.eq.s32	%p52, %r130, 0;
	mov.u32 	%r12603, 0;
	@%p52 bra 	BB0_91;

	setp.eq.s32	%p53, %r130, 1;
	mov.u32 	%r12601, 0;
	@%p53 bra 	BB0_90;

	setp.eq.s32	%p54, %r130, 2;
	mov.u32 	%r12600, 0;
	@%p54 bra 	BB0_89;

	xor.b32  	%r4149, %r108, 7;
	cvt.u64.u32	%rd6625, %r4149;
	add.s64 	%rd6626, %rd1462, %rd6625;
	ld.local.u8 	%rs53, [%rd6626];
	st.local.u8 	[%rd90+7], %rs53;
	mov.u32 	%r12600, 1;

BB0_89:
	add.s32 	%r4150, %r12600, %r108;
	xor.b32  	%r4151, %r4150, 7;
	cvt.s64.s32	%rd6627, %r4151;
	add.s64 	%rd6628, %rd1462, %rd6627;
	ld.local.u8 	%rs54, [%rd6628];
	xor.b32  	%r4152, %r12600, 7;
	cvt.u64.u32	%rd6629, %r4152;
	add.s64 	%rd6630, %rd90, %rd6629;
	st.local.u8 	[%rd6630], %rs54;
	add.s32 	%r12601, %r12600, 1;

BB0_90:
	add.s32 	%r4153, %r12601, %r108;
	xor.b32  	%r4154, %r4153, 7;
	cvt.s64.s32	%rd6631, %r4154;
	add.s64 	%rd6632, %rd1462, %rd6631;
	ld.local.u8 	%rs55, [%rd6632];
	xor.b32  	%r4155, %r12601, 7;
	cvt.s64.s32	%rd6633, %r4155;
	add.s64 	%rd6634, %rd90, %rd6633;
	st.local.u8 	[%rd6634], %rs55;
	add.s32 	%r12603, %r12601, 1;

BB0_91:
	setp.lt.u32	%p55, %r129, 4;
	@%p55 bra 	BB0_102;

BB0_92:
	add.s32 	%r4156, %r12603, %r108;
	xor.b32  	%r4157, %r4156, 7;
	cvt.s64.s32	%rd6635, %r4157;
	add.s64 	%rd6636, %rd1462, %rd6635;
	ld.local.u8 	%rs56, [%rd6636];
	xor.b32  	%r4158, %r12603, 7;
	cvt.s64.s32	%rd6637, %r4158;
	add.s64 	%rd6638, %rd90, %rd6637;
	st.local.u8 	[%rd6638], %rs56;
	add.s32 	%r4159, %r12603, 1;
	add.s32 	%r4160, %r4159, %r108;
	xor.b32  	%r4161, %r4160, 7;
	cvt.s64.s32	%rd6639, %r4161;
	add.s64 	%rd6640, %rd1462, %rd6639;
	ld.local.u8 	%rs57, [%rd6640];
	xor.b32  	%r4162, %r4159, 7;
	cvt.s64.s32	%rd6641, %r4162;
	add.s64 	%rd6642, %rd90, %rd6641;
	st.local.u8 	[%rd6642], %rs57;
	add.s32 	%r4163, %r12603, 2;
	add.s32 	%r4164, %r4163, %r108;
	xor.b32  	%r4165, %r4164, 7;
	cvt.s64.s32	%rd6643, %r4165;
	add.s64 	%rd6644, %rd1462, %rd6643;
	ld.local.u8 	%rs58, [%rd6644];
	xor.b32  	%r4166, %r4163, 7;
	cvt.s64.s32	%rd6645, %r4166;
	add.s64 	%rd6646, %rd90, %rd6645;
	st.local.u8 	[%rd6646], %rs58;
	add.s32 	%r4167, %r12603, 3;
	add.s32 	%r4168, %r4167, %r108;
	xor.b32  	%r4169, %r4168, 7;
	cvt.s64.s32	%rd6647, %r4169;
	add.s64 	%rd6648, %rd1462, %rd6647;
	ld.local.u8 	%rs59, [%rd6648];
	xor.b32  	%r4170, %r4167, 7;
	cvt.s64.s32	%rd6649, %r4170;
	add.s64 	%rd6650, %rd90, %rd6649;
	st.local.u8 	[%rd6650], %rs59;
	add.s32 	%r12603, %r12603, 4;
	setp.lt.s32	%p56, %r12603, %r128;
	@%p56 bra 	BB0_92;

BB0_102:
	ld.local.u32 	%r153, [%rd1+192];
	and.b32  	%r154, %r153, 127;
	add.s32 	%r4195, %r153, %r2;
	st.local.u32 	[%rd1+192], %r4195;
	add.s32 	%r4196, %r154, %r2;
	setp.lt.s32	%p63, %r4196, 128;
	@%p63 bra 	BB0_117;
	bra.uni 	BB0_103;

BB0_117:
	setp.eq.s32	%p168, %r2, 0;
	@%p168 bra 	BB0_120;

	mov.u32 	%r12624, 0;

BB0_119:
	xor.b32  	%r4942, %r12624, 7;
	cvt.s64.s32	%rd7711, %r4942;
	add.s64 	%rd7712, %rd349, %rd7711;
	ld.local.u8 	%rs75, [%rd7712];
	xor.b32  	%r4943, %r154, 7;
	cvt.s64.s32	%rd7713, %r4943;
	add.s64 	%rd7714, %rd90, %rd7713;
	st.local.u8 	[%rd7714], %rs75;
	add.s32 	%r154, %r154, 1;
	add.s32 	%r12624, %r12624, 1;
	setp.lt.s32	%p73, %r12624, %r2;
	@%p73 bra 	BB0_119;
	bra.uni 	BB0_120;

BB0_103:
	sub.s32 	%r155, %r1990, %r154;
	mov.u32 	%r4199, 1;
	max.u32 	%r156, %r155, %r4199;
	and.b32  	%r157, %r156, 3;
	setp.eq.s32	%p64, %r157, 0;
	mov.u32 	%r12618, 0;
	@%p64 bra 	BB0_110;

	setp.eq.s32	%p65, %r157, 1;
	mov.u32 	%r12614, 0;
	@%p65 bra 	BB0_109;

	setp.eq.s32	%p66, %r157, 2;
	mov.u32 	%r4201, 0;
	@%p66 bra 	BB0_106;
	bra.uni 	BB0_107;

BB0_106:
	mov.u32 	%r4199, %r4201;
	bra.uni 	BB0_108;

BB0_107:
	ld.local.u8 	%rs67, [%rd349+7];
	xor.b32  	%r4203, %r154, 7;
	cvt.u64.u32	%rd6679, %r4203;
	add.s64 	%rd6680, %rd90, %rd6679;
	st.local.u8 	[%rd6680], %rs67;
	add.s32 	%r154, %r154, 1;

BB0_108:
	xor.b32  	%r4204, %r4199, 7;
	cvt.u64.u32	%rd6681, %r4204;
	add.s64 	%rd6682, %rd349, %rd6681;
	ld.local.u8 	%rs68, [%rd6682];
	xor.b32  	%r4205, %r154, 7;
	cvt.s64.s32	%rd6683, %r4205;
	add.s64 	%rd6684, %rd90, %rd6683;
	st.local.u8 	[%rd6684], %rs68;
	add.s32 	%r154, %r154, 1;
	add.s32 	%r12614, %r4199, 1;

BB0_109:
	xor.b32  	%r4206, %r12614, 7;
	cvt.s64.s32	%rd6685, %r4206;
	add.s64 	%rd6686, %rd349, %rd6685;
	ld.local.u8 	%rs69, [%rd6686];
	xor.b32  	%r4207, %r154, 7;
	cvt.s64.s32	%rd6687, %r4207;
	add.s64 	%rd6688, %rd90, %rd6687;
	st.local.u8 	[%rd6688], %rs69;
	add.s32 	%r154, %r154, 1;
	add.s32 	%r12618, %r12614, 1;

BB0_110:
	setp.lt.u32	%p67, %r156, 4;
	@%p67 bra 	BB0_112;

BB0_111:
	xor.b32  	%r4208, %r12618, 7;
	cvt.s64.s32	%rd6689, %r4208;
	add.s64 	%rd6690, %rd349, %rd6689;
	ld.local.u8 	%rs70, [%rd6690];
	xor.b32  	%r4209, %r154, 7;
	cvt.s64.s32	%rd6691, %r4209;
	add.s64 	%rd6692, %rd90, %rd6691;
	st.local.u8 	[%rd6692], %rs70;
	add.s32 	%r4210, %r12618, 1;
	xor.b32  	%r4211, %r4210, 7;
	cvt.s64.s32	%rd6693, %r4211;
	add.s64 	%rd6694, %rd349, %rd6693;
	ld.local.u8 	%rs71, [%rd6694];
	add.s32 	%r4212, %r154, 1;
	xor.b32  	%r4213, %r4212, 7;
	cvt.s64.s32	%rd6695, %r4213;
	add.s64 	%rd6696, %rd90, %rd6695;
	st.local.u8 	[%rd6696], %rs71;
	add.s32 	%r4214, %r12618, 2;
	xor.b32  	%r4215, %r4214, 7;
	cvt.s64.s32	%rd6697, %r4215;
	add.s64 	%rd6698, %rd349, %rd6697;
	ld.local.u8 	%rs72, [%rd6698];
	add.s32 	%r4216, %r154, 2;
	xor.b32  	%r4217, %r4216, 7;
	cvt.s64.s32	%rd6699, %r4217;
	add.s64 	%rd6700, %rd90, %rd6699;
	st.local.u8 	[%rd6700], %rs72;
	add.s32 	%r4218, %r12618, 3;
	xor.b32  	%r4219, %r4218, 7;
	cvt.s64.s32	%rd6701, %r4219;
	add.s64 	%rd6702, %rd349, %rd6701;
	ld.local.u8 	%rs73, [%rd6702];
	add.s32 	%r4220, %r154, 3;
	xor.b32  	%r4221, %r4220, 7;
	cvt.s64.s32	%rd6703, %r4221;
	add.s64 	%rd6704, %rd90, %rd6703;
	st.local.u8 	[%rd6704], %rs73;
	add.s32 	%r12618, %r12618, 4;
	setp.lt.s32	%p68, %r12618, %r155;
	add.s32 	%r154, %r154, 4;
	@%p68 bra 	BB0_111;

BB0_112:
	ld.local.u64 	%rd490, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4223,%dummy}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4224}, %rd490;
	}
	shf.r.wrap.b32 	%r4225, %r4224, %r4223, 14;
	shf.r.wrap.b32 	%r4226, %r4223, %r4224, 14;
	mov.b64 	%rd6705, {%r4226, %r4225};
	shf.r.wrap.b32 	%r4227, %r4224, %r4223, 18;
	shf.r.wrap.b32 	%r4228, %r4223, %r4224, 18;
	mov.b64 	%rd6706, {%r4228, %r4227};
	xor.b64  	%rd6707, %rd6706, %rd6705;
	shf.l.wrap.b32 	%r4229, %r4223, %r4224, 23;
	shf.l.wrap.b32 	%r4230, %r4224, %r4223, 23;
	mov.b64 	%rd6708, {%r4230, %r4229};
	xor.b64  	%rd6709, %rd6707, %rd6708;
	ld.local.u64 	%rd491, [%rd1+48];
	ld.local.u64 	%rd492, [%rd1+40];
	xor.b64  	%rd6710, %rd491, %rd492;
	and.b64  	%rd6711, %rd6710, %rd490;
	xor.b64  	%rd6712, %rd6711, %rd491;
	ld.local.u64 	%rd493, [%rd1+56];
	ld.local.u64 	%rd18426, [%rd1+64];
	add.s64 	%rd6713, %rd493, %rd18426;
	add.s64 	%rd6714, %rd6713, %rd18338;
	add.s64 	%rd6715, %rd6714, %rd6712;
	add.s64 	%rd6716, %rd6715, %rd6709;
	ld.local.u64 	%rd495, [%rd1+24];
	add.s64 	%rd6717, %rd6716, %rd495;
	ld.local.u64 	%rd496, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4231,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4232}, %rd496;
	}
	shf.r.wrap.b32 	%r4233, %r4232, %r4231, 28;
	shf.r.wrap.b32 	%r4234, %r4231, %r4232, 28;
	mov.b64 	%rd6718, {%r4234, %r4233};
	shf.l.wrap.b32 	%r4235, %r4231, %r4232, 30;
	shf.l.wrap.b32 	%r4236, %r4232, %r4231, 30;
	mov.b64 	%rd6719, {%r4236, %r4235};
	xor.b64  	%rd6720, %rd6719, %rd6718;
	shf.l.wrap.b32 	%r4237, %r4231, %r4232, 25;
	shf.l.wrap.b32 	%r4238, %r4232, %r4231, 25;
	mov.b64 	%rd6721, {%r4238, %r4237};
	xor.b64  	%rd6722, %rd6720, %rd6721;
	ld.local.u64 	%rd497, [%rd1+8];
	and.b64  	%rd6723, %rd497, %rd496;
	xor.b64  	%rd6724, %rd497, %rd496;
	ld.local.u64 	%rd498, [%rd1+16];
	and.b64  	%rd6725, %rd498, %rd6724;
	or.b64  	%rd6726, %rd6725, %rd6723;
	add.s64 	%rd6727, %rd6716, %rd6726;
	add.s64 	%rd6728, %rd6727, %rd6722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4239,%dummy}, %rd6717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4240}, %rd6717;
	}
	shf.r.wrap.b32 	%r4241, %r4240, %r4239, 14;
	shf.r.wrap.b32 	%r4242, %r4239, %r4240, 14;
	mov.b64 	%rd6729, {%r4242, %r4241};
	shf.r.wrap.b32 	%r4243, %r4240, %r4239, 18;
	shf.r.wrap.b32 	%r4244, %r4239, %r4240, 18;
	mov.b64 	%rd6730, {%r4244, %r4243};
	xor.b64  	%rd6731, %rd6730, %rd6729;
	shf.l.wrap.b32 	%r4245, %r4239, %r4240, 23;
	shf.l.wrap.b32 	%r4246, %r4240, %r4239, 23;
	mov.b64 	%rd6732, {%r4246, %r4245};
	xor.b64  	%rd6733, %rd6731, %rd6732;
	xor.b64  	%rd6734, %rd492, %rd490;
	and.b64  	%rd6735, %rd6717, %rd6734;
	xor.b64  	%rd6736, %rd6735, %rd492;
	ld.local.u64 	%rd18427, [%rd1+72];
	add.s64 	%rd6737, %rd491, %rd18427;
	add.s64 	%rd6738, %rd6737, %rd18337;
	add.s64 	%rd6739, %rd6738, %rd6736;
	add.s64 	%rd6740, %rd6739, %rd6733;
	add.s64 	%rd6741, %rd6740, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4247,%dummy}, %rd6728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4248}, %rd6728;
	}
	shf.r.wrap.b32 	%r4249, %r4248, %r4247, 28;
	shf.r.wrap.b32 	%r4250, %r4247, %r4248, 28;
	mov.b64 	%rd6742, {%r4250, %r4249};
	shf.l.wrap.b32 	%r4251, %r4247, %r4248, 30;
	shf.l.wrap.b32 	%r4252, %r4248, %r4247, 30;
	mov.b64 	%rd6743, {%r4252, %r4251};
	xor.b64  	%rd6744, %rd6743, %rd6742;
	shf.l.wrap.b32 	%r4253, %r4247, %r4248, 25;
	shf.l.wrap.b32 	%r4254, %r4248, %r4247, 25;
	mov.b64 	%rd6745, {%r4254, %r4253};
	xor.b64  	%rd6746, %rd6744, %rd6745;
	and.b64  	%rd6747, %rd6728, %rd496;
	xor.b64  	%rd6748, %rd6728, %rd496;
	and.b64  	%rd6749, %rd6748, %rd497;
	or.b64  	%rd6750, %rd6749, %rd6747;
	add.s64 	%rd6751, %rd6740, %rd6750;
	add.s64 	%rd6752, %rd6751, %rd6746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4255,%dummy}, %rd6741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4256}, %rd6741;
	}
	shf.r.wrap.b32 	%r4257, %r4256, %r4255, 14;
	shf.r.wrap.b32 	%r4258, %r4255, %r4256, 14;
	mov.b64 	%rd6753, {%r4258, %r4257};
	shf.r.wrap.b32 	%r4259, %r4256, %r4255, 18;
	shf.r.wrap.b32 	%r4260, %r4255, %r4256, 18;
	mov.b64 	%rd6754, {%r4260, %r4259};
	xor.b64  	%rd6755, %rd6754, %rd6753;
	shf.l.wrap.b32 	%r4261, %r4255, %r4256, 23;
	shf.l.wrap.b32 	%r4262, %r4256, %r4255, 23;
	mov.b64 	%rd6756, {%r4262, %r4261};
	xor.b64  	%rd6757, %rd6755, %rd6756;
	xor.b64  	%rd6758, %rd6717, %rd490;
	and.b64  	%rd6759, %rd6741, %rd6758;
	xor.b64  	%rd6760, %rd6759, %rd490;
	ld.local.u64 	%rd18428, [%rd1+80];
	add.s64 	%rd6761, %rd492, %rd18428;
	add.s64 	%rd6762, %rd6761, %rd18336;
	add.s64 	%rd6763, %rd6762, %rd6760;
	add.s64 	%rd6764, %rd6763, %rd6757;
	add.s64 	%rd6765, %rd6764, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4263,%dummy}, %rd6752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4264}, %rd6752;
	}
	shf.r.wrap.b32 	%r4265, %r4264, %r4263, 28;
	shf.r.wrap.b32 	%r4266, %r4263, %r4264, 28;
	mov.b64 	%rd6766, {%r4266, %r4265};
	shf.l.wrap.b32 	%r4267, %r4263, %r4264, 30;
	shf.l.wrap.b32 	%r4268, %r4264, %r4263, 30;
	mov.b64 	%rd6767, {%r4268, %r4267};
	xor.b64  	%rd6768, %rd6767, %rd6766;
	shf.l.wrap.b32 	%r4269, %r4263, %r4264, 25;
	shf.l.wrap.b32 	%r4270, %r4264, %r4263, 25;
	mov.b64 	%rd6769, {%r4270, %r4269};
	xor.b64  	%rd6770, %rd6768, %rd6769;
	and.b64  	%rd6771, %rd6752, %rd6728;
	xor.b64  	%rd6772, %rd6752, %rd6728;
	and.b64  	%rd6773, %rd6772, %rd496;
	or.b64  	%rd6774, %rd6773, %rd6771;
	add.s64 	%rd6775, %rd6764, %rd6774;
	add.s64 	%rd6776, %rd6775, %rd6770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4271,%dummy}, %rd6765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4272}, %rd6765;
	}
	shf.r.wrap.b32 	%r4273, %r4272, %r4271, 14;
	shf.r.wrap.b32 	%r4274, %r4271, %r4272, 14;
	mov.b64 	%rd6777, {%r4274, %r4273};
	shf.r.wrap.b32 	%r4275, %r4272, %r4271, 18;
	shf.r.wrap.b32 	%r4276, %r4271, %r4272, 18;
	mov.b64 	%rd6778, {%r4276, %r4275};
	xor.b64  	%rd6779, %rd6778, %rd6777;
	shf.l.wrap.b32 	%r4277, %r4271, %r4272, 23;
	shf.l.wrap.b32 	%r4278, %r4272, %r4271, 23;
	mov.b64 	%rd6780, {%r4278, %r4277};
	xor.b64  	%rd6781, %rd6779, %rd6780;
	xor.b64  	%rd6782, %rd6741, %rd6717;
	and.b64  	%rd6783, %rd6765, %rd6782;
	xor.b64  	%rd6784, %rd6783, %rd6717;
	ld.local.u64 	%rd18429, [%rd1+88];
	add.s64 	%rd6785, %rd490, %rd18429;
	add.s64 	%rd6786, %rd6785, %rd18335;
	add.s64 	%rd6787, %rd6786, %rd6784;
	add.s64 	%rd6788, %rd6787, %rd6781;
	add.s64 	%rd6789, %rd6788, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4279,%dummy}, %rd6776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4280}, %rd6776;
	}
	shf.r.wrap.b32 	%r4281, %r4280, %r4279, 28;
	shf.r.wrap.b32 	%r4282, %r4279, %r4280, 28;
	mov.b64 	%rd6790, {%r4282, %r4281};
	shf.l.wrap.b32 	%r4283, %r4279, %r4280, 30;
	shf.l.wrap.b32 	%r4284, %r4280, %r4279, 30;
	mov.b64 	%rd6791, {%r4284, %r4283};
	xor.b64  	%rd6792, %rd6791, %rd6790;
	shf.l.wrap.b32 	%r4285, %r4279, %r4280, 25;
	shf.l.wrap.b32 	%r4286, %r4280, %r4279, 25;
	mov.b64 	%rd6793, {%r4286, %r4285};
	xor.b64  	%rd6794, %rd6792, %rd6793;
	and.b64  	%rd6795, %rd6776, %rd6752;
	xor.b64  	%rd6796, %rd6776, %rd6752;
	and.b64  	%rd6797, %rd6796, %rd6728;
	or.b64  	%rd6798, %rd6797, %rd6795;
	add.s64 	%rd6799, %rd6788, %rd6798;
	add.s64 	%rd6800, %rd6799, %rd6794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4287,%dummy}, %rd6789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4288}, %rd6789;
	}
	shf.r.wrap.b32 	%r4289, %r4288, %r4287, 14;
	shf.r.wrap.b32 	%r4290, %r4287, %r4288, 14;
	mov.b64 	%rd6801, {%r4290, %r4289};
	shf.r.wrap.b32 	%r4291, %r4288, %r4287, 18;
	shf.r.wrap.b32 	%r4292, %r4287, %r4288, 18;
	mov.b64 	%rd6802, {%r4292, %r4291};
	xor.b64  	%rd6803, %rd6802, %rd6801;
	shf.l.wrap.b32 	%r4293, %r4287, %r4288, 23;
	shf.l.wrap.b32 	%r4294, %r4288, %r4287, 23;
	mov.b64 	%rd6804, {%r4294, %r4293};
	xor.b64  	%rd6805, %rd6803, %rd6804;
	xor.b64  	%rd6806, %rd6765, %rd6741;
	and.b64  	%rd6807, %rd6789, %rd6806;
	xor.b64  	%rd6808, %rd6807, %rd6741;
	ld.local.u64 	%rd18430, [%rd1+96];
	add.s64 	%rd6809, %rd6717, %rd18430;
	add.s64 	%rd6810, %rd6809, %rd18334;
	add.s64 	%rd6811, %rd6810, %rd6808;
	add.s64 	%rd6812, %rd6811, %rd6805;
	add.s64 	%rd6813, %rd6812, %rd6728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4295,%dummy}, %rd6800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4296}, %rd6800;
	}
	shf.r.wrap.b32 	%r4297, %r4296, %r4295, 28;
	shf.r.wrap.b32 	%r4298, %r4295, %r4296, 28;
	mov.b64 	%rd6814, {%r4298, %r4297};
	shf.l.wrap.b32 	%r4299, %r4295, %r4296, 30;
	shf.l.wrap.b32 	%r4300, %r4296, %r4295, 30;
	mov.b64 	%rd6815, {%r4300, %r4299};
	xor.b64  	%rd6816, %rd6815, %rd6814;
	shf.l.wrap.b32 	%r4301, %r4295, %r4296, 25;
	shf.l.wrap.b32 	%r4302, %r4296, %r4295, 25;
	mov.b64 	%rd6817, {%r4302, %r4301};
	xor.b64  	%rd6818, %rd6816, %rd6817;
	and.b64  	%rd6819, %rd6800, %rd6776;
	xor.b64  	%rd6820, %rd6800, %rd6776;
	and.b64  	%rd6821, %rd6820, %rd6752;
	or.b64  	%rd6822, %rd6821, %rd6819;
	add.s64 	%rd6823, %rd6812, %rd6822;
	add.s64 	%rd6824, %rd6823, %rd6818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4303,%dummy}, %rd6813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4304}, %rd6813;
	}
	shf.r.wrap.b32 	%r4305, %r4304, %r4303, 14;
	shf.r.wrap.b32 	%r4306, %r4303, %r4304, 14;
	mov.b64 	%rd6825, {%r4306, %r4305};
	shf.r.wrap.b32 	%r4307, %r4304, %r4303, 18;
	shf.r.wrap.b32 	%r4308, %r4303, %r4304, 18;
	mov.b64 	%rd6826, {%r4308, %r4307};
	xor.b64  	%rd6827, %rd6826, %rd6825;
	shf.l.wrap.b32 	%r4309, %r4303, %r4304, 23;
	shf.l.wrap.b32 	%r4310, %r4304, %r4303, 23;
	mov.b64 	%rd6828, {%r4310, %r4309};
	xor.b64  	%rd6829, %rd6827, %rd6828;
	xor.b64  	%rd6830, %rd6789, %rd6765;
	and.b64  	%rd6831, %rd6813, %rd6830;
	xor.b64  	%rd6832, %rd6831, %rd6765;
	ld.local.u64 	%rd18431, [%rd1+104];
	add.s64 	%rd6833, %rd6741, %rd18431;
	add.s64 	%rd6834, %rd6833, %rd18333;
	add.s64 	%rd6835, %rd6834, %rd6832;
	add.s64 	%rd6836, %rd6835, %rd6829;
	add.s64 	%rd6837, %rd6836, %rd6752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4311,%dummy}, %rd6824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4312}, %rd6824;
	}
	shf.r.wrap.b32 	%r4313, %r4312, %r4311, 28;
	shf.r.wrap.b32 	%r4314, %r4311, %r4312, 28;
	mov.b64 	%rd6838, {%r4314, %r4313};
	shf.l.wrap.b32 	%r4315, %r4311, %r4312, 30;
	shf.l.wrap.b32 	%r4316, %r4312, %r4311, 30;
	mov.b64 	%rd6839, {%r4316, %r4315};
	xor.b64  	%rd6840, %rd6839, %rd6838;
	shf.l.wrap.b32 	%r4317, %r4311, %r4312, 25;
	shf.l.wrap.b32 	%r4318, %r4312, %r4311, 25;
	mov.b64 	%rd6841, {%r4318, %r4317};
	xor.b64  	%rd6842, %rd6840, %rd6841;
	and.b64  	%rd6843, %rd6824, %rd6800;
	xor.b64  	%rd6844, %rd6824, %rd6800;
	and.b64  	%rd6845, %rd6844, %rd6776;
	or.b64  	%rd6846, %rd6845, %rd6843;
	add.s64 	%rd6847, %rd6836, %rd6846;
	add.s64 	%rd6848, %rd6847, %rd6842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4319,%dummy}, %rd6837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4320}, %rd6837;
	}
	shf.r.wrap.b32 	%r4321, %r4320, %r4319, 14;
	shf.r.wrap.b32 	%r4322, %r4319, %r4320, 14;
	mov.b64 	%rd6849, {%r4322, %r4321};
	shf.r.wrap.b32 	%r4323, %r4320, %r4319, 18;
	shf.r.wrap.b32 	%r4324, %r4319, %r4320, 18;
	mov.b64 	%rd6850, {%r4324, %r4323};
	xor.b64  	%rd6851, %rd6850, %rd6849;
	shf.l.wrap.b32 	%r4325, %r4319, %r4320, 23;
	shf.l.wrap.b32 	%r4326, %r4320, %r4319, 23;
	mov.b64 	%rd6852, {%r4326, %r4325};
	xor.b64  	%rd6853, %rd6851, %rd6852;
	xor.b64  	%rd6854, %rd6813, %rd6789;
	and.b64  	%rd6855, %rd6837, %rd6854;
	xor.b64  	%rd6856, %rd6855, %rd6789;
	ld.local.u64 	%rd18432, [%rd1+112];
	add.s64 	%rd6857, %rd6765, %rd18432;
	add.s64 	%rd6858, %rd6857, %rd18332;
	add.s64 	%rd6859, %rd6858, %rd6856;
	add.s64 	%rd6860, %rd6859, %rd6853;
	add.s64 	%rd6861, %rd6860, %rd6776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4327,%dummy}, %rd6848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4328}, %rd6848;
	}
	shf.r.wrap.b32 	%r4329, %r4328, %r4327, 28;
	shf.r.wrap.b32 	%r4330, %r4327, %r4328, 28;
	mov.b64 	%rd6862, {%r4330, %r4329};
	shf.l.wrap.b32 	%r4331, %r4327, %r4328, 30;
	shf.l.wrap.b32 	%r4332, %r4328, %r4327, 30;
	mov.b64 	%rd6863, {%r4332, %r4331};
	xor.b64  	%rd6864, %rd6863, %rd6862;
	shf.l.wrap.b32 	%r4333, %r4327, %r4328, 25;
	shf.l.wrap.b32 	%r4334, %r4328, %r4327, 25;
	mov.b64 	%rd6865, {%r4334, %r4333};
	xor.b64  	%rd6866, %rd6864, %rd6865;
	and.b64  	%rd6867, %rd6848, %rd6824;
	xor.b64  	%rd6868, %rd6848, %rd6824;
	and.b64  	%rd6869, %rd6868, %rd6800;
	or.b64  	%rd6870, %rd6869, %rd6867;
	add.s64 	%rd6871, %rd6860, %rd6870;
	add.s64 	%rd6872, %rd6871, %rd6866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4335,%dummy}, %rd6861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4336}, %rd6861;
	}
	shf.r.wrap.b32 	%r4337, %r4336, %r4335, 14;
	shf.r.wrap.b32 	%r4338, %r4335, %r4336, 14;
	mov.b64 	%rd6873, {%r4338, %r4337};
	shf.r.wrap.b32 	%r4339, %r4336, %r4335, 18;
	shf.r.wrap.b32 	%r4340, %r4335, %r4336, 18;
	mov.b64 	%rd6874, {%r4340, %r4339};
	xor.b64  	%rd6875, %rd6874, %rd6873;
	shf.l.wrap.b32 	%r4341, %r4335, %r4336, 23;
	shf.l.wrap.b32 	%r4342, %r4336, %r4335, 23;
	mov.b64 	%rd6876, {%r4342, %r4341};
	xor.b64  	%rd6877, %rd6875, %rd6876;
	xor.b64  	%rd6878, %rd6837, %rd6813;
	and.b64  	%rd6879, %rd6861, %rd6878;
	xor.b64  	%rd6880, %rd6879, %rd6813;
	ld.local.u64 	%rd18433, [%rd1+120];
	add.s64 	%rd6881, %rd6789, %rd18433;
	add.s64 	%rd6882, %rd6881, %rd18331;
	add.s64 	%rd6883, %rd6882, %rd6880;
	add.s64 	%rd6884, %rd6883, %rd6877;
	add.s64 	%rd6885, %rd6884, %rd6800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4343,%dummy}, %rd6872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4344}, %rd6872;
	}
	shf.r.wrap.b32 	%r4345, %r4344, %r4343, 28;
	shf.r.wrap.b32 	%r4346, %r4343, %r4344, 28;
	mov.b64 	%rd6886, {%r4346, %r4345};
	shf.l.wrap.b32 	%r4347, %r4343, %r4344, 30;
	shf.l.wrap.b32 	%r4348, %r4344, %r4343, 30;
	mov.b64 	%rd6887, {%r4348, %r4347};
	xor.b64  	%rd6888, %rd6887, %rd6886;
	shf.l.wrap.b32 	%r4349, %r4343, %r4344, 25;
	shf.l.wrap.b32 	%r4350, %r4344, %r4343, 25;
	mov.b64 	%rd6889, {%r4350, %r4349};
	xor.b64  	%rd6890, %rd6888, %rd6889;
	and.b64  	%rd6891, %rd6872, %rd6848;
	xor.b64  	%rd6892, %rd6872, %rd6848;
	and.b64  	%rd6893, %rd6892, %rd6824;
	or.b64  	%rd6894, %rd6893, %rd6891;
	add.s64 	%rd6895, %rd6884, %rd6894;
	add.s64 	%rd6896, %rd6895, %rd6890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4351,%dummy}, %rd6885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4352}, %rd6885;
	}
	shf.r.wrap.b32 	%r4353, %r4352, %r4351, 14;
	shf.r.wrap.b32 	%r4354, %r4351, %r4352, 14;
	mov.b64 	%rd6897, {%r4354, %r4353};
	shf.r.wrap.b32 	%r4355, %r4352, %r4351, 18;
	shf.r.wrap.b32 	%r4356, %r4351, %r4352, 18;
	mov.b64 	%rd6898, {%r4356, %r4355};
	xor.b64  	%rd6899, %rd6898, %rd6897;
	shf.l.wrap.b32 	%r4357, %r4351, %r4352, 23;
	shf.l.wrap.b32 	%r4358, %r4352, %r4351, 23;
	mov.b64 	%rd6900, {%r4358, %r4357};
	xor.b64  	%rd6901, %rd6899, %rd6900;
	xor.b64  	%rd6902, %rd6861, %rd6837;
	and.b64  	%rd6903, %rd6885, %rd6902;
	xor.b64  	%rd6904, %rd6903, %rd6837;
	ld.local.u64 	%rd18417, [%rd1+128];
	add.s64 	%rd6905, %rd6813, %rd18417;
	add.s64 	%rd6906, %rd6905, %rd18330;
	add.s64 	%rd6907, %rd6906, %rd6904;
	add.s64 	%rd6908, %rd6907, %rd6901;
	add.s64 	%rd6909, %rd6908, %rd6824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4359,%dummy}, %rd6896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4360}, %rd6896;
	}
	shf.r.wrap.b32 	%r4361, %r4360, %r4359, 28;
	shf.r.wrap.b32 	%r4362, %r4359, %r4360, 28;
	mov.b64 	%rd6910, {%r4362, %r4361};
	shf.l.wrap.b32 	%r4363, %r4359, %r4360, 30;
	shf.l.wrap.b32 	%r4364, %r4360, %r4359, 30;
	mov.b64 	%rd6911, {%r4364, %r4363};
	xor.b64  	%rd6912, %rd6911, %rd6910;
	shf.l.wrap.b32 	%r4365, %r4359, %r4360, 25;
	shf.l.wrap.b32 	%r4366, %r4360, %r4359, 25;
	mov.b64 	%rd6913, {%r4366, %r4365};
	xor.b64  	%rd6914, %rd6912, %rd6913;
	and.b64  	%rd6915, %rd6896, %rd6872;
	xor.b64  	%rd6916, %rd6896, %rd6872;
	and.b64  	%rd6917, %rd6916, %rd6848;
	or.b64  	%rd6918, %rd6917, %rd6915;
	add.s64 	%rd6919, %rd6908, %rd6918;
	add.s64 	%rd6920, %rd6919, %rd6914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4367,%dummy}, %rd6909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4368}, %rd6909;
	}
	shf.r.wrap.b32 	%r4369, %r4368, %r4367, 14;
	shf.r.wrap.b32 	%r4370, %r4367, %r4368, 14;
	mov.b64 	%rd6921, {%r4370, %r4369};
	shf.r.wrap.b32 	%r4371, %r4368, %r4367, 18;
	shf.r.wrap.b32 	%r4372, %r4367, %r4368, 18;
	mov.b64 	%rd6922, {%r4372, %r4371};
	xor.b64  	%rd6923, %rd6922, %rd6921;
	shf.l.wrap.b32 	%r4373, %r4367, %r4368, 23;
	shf.l.wrap.b32 	%r4374, %r4368, %r4367, 23;
	mov.b64 	%rd6924, {%r4374, %r4373};
	xor.b64  	%rd6925, %rd6923, %rd6924;
	xor.b64  	%rd6926, %rd6885, %rd6861;
	and.b64  	%rd6927, %rd6909, %rd6926;
	xor.b64  	%rd6928, %rd6927, %rd6861;
	ld.local.u64 	%rd18416, [%rd1+136];
	add.s64 	%rd6929, %rd6837, %rd18416;
	add.s64 	%rd6930, %rd6929, %rd18329;
	add.s64 	%rd6931, %rd6930, %rd6928;
	add.s64 	%rd6932, %rd6931, %rd6925;
	add.s64 	%rd6933, %rd6932, %rd6848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4375,%dummy}, %rd6920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4376}, %rd6920;
	}
	shf.r.wrap.b32 	%r4377, %r4376, %r4375, 28;
	shf.r.wrap.b32 	%r4378, %r4375, %r4376, 28;
	mov.b64 	%rd6934, {%r4378, %r4377};
	shf.l.wrap.b32 	%r4379, %r4375, %r4376, 30;
	shf.l.wrap.b32 	%r4380, %r4376, %r4375, 30;
	mov.b64 	%rd6935, {%r4380, %r4379};
	xor.b64  	%rd6936, %rd6935, %rd6934;
	shf.l.wrap.b32 	%r4381, %r4375, %r4376, 25;
	shf.l.wrap.b32 	%r4382, %r4376, %r4375, 25;
	mov.b64 	%rd6937, {%r4382, %r4381};
	xor.b64  	%rd6938, %rd6936, %rd6937;
	and.b64  	%rd6939, %rd6920, %rd6896;
	xor.b64  	%rd6940, %rd6920, %rd6896;
	and.b64  	%rd6941, %rd6940, %rd6872;
	or.b64  	%rd6942, %rd6941, %rd6939;
	add.s64 	%rd6943, %rd6932, %rd6942;
	add.s64 	%rd6944, %rd6943, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4383,%dummy}, %rd6933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4384}, %rd6933;
	}
	shf.r.wrap.b32 	%r4385, %r4384, %r4383, 14;
	shf.r.wrap.b32 	%r4386, %r4383, %r4384, 14;
	mov.b64 	%rd6945, {%r4386, %r4385};
	shf.r.wrap.b32 	%r4387, %r4384, %r4383, 18;
	shf.r.wrap.b32 	%r4388, %r4383, %r4384, 18;
	mov.b64 	%rd6946, {%r4388, %r4387};
	xor.b64  	%rd6947, %rd6946, %rd6945;
	shf.l.wrap.b32 	%r4389, %r4383, %r4384, 23;
	shf.l.wrap.b32 	%r4390, %r4384, %r4383, 23;
	mov.b64 	%rd6948, {%r4390, %r4389};
	xor.b64  	%rd6949, %rd6947, %rd6948;
	xor.b64  	%rd6950, %rd6909, %rd6885;
	and.b64  	%rd6951, %rd6933, %rd6950;
	xor.b64  	%rd6952, %rd6951, %rd6885;
	ld.local.u64 	%rd18415, [%rd1+144];
	add.s64 	%rd6953, %rd6861, %rd18415;
	add.s64 	%rd6954, %rd6953, %rd18328;
	add.s64 	%rd6955, %rd6954, %rd6952;
	add.s64 	%rd6956, %rd6955, %rd6949;
	add.s64 	%rd6957, %rd6956, %rd6872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4391,%dummy}, %rd6944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4392}, %rd6944;
	}
	shf.r.wrap.b32 	%r4393, %r4392, %r4391, 28;
	shf.r.wrap.b32 	%r4394, %r4391, %r4392, 28;
	mov.b64 	%rd6958, {%r4394, %r4393};
	shf.l.wrap.b32 	%r4395, %r4391, %r4392, 30;
	shf.l.wrap.b32 	%r4396, %r4392, %r4391, 30;
	mov.b64 	%rd6959, {%r4396, %r4395};
	xor.b64  	%rd6960, %rd6959, %rd6958;
	shf.l.wrap.b32 	%r4397, %r4391, %r4392, 25;
	shf.l.wrap.b32 	%r4398, %r4392, %r4391, 25;
	mov.b64 	%rd6961, {%r4398, %r4397};
	xor.b64  	%rd6962, %rd6960, %rd6961;
	and.b64  	%rd6963, %rd6944, %rd6920;
	xor.b64  	%rd6964, %rd6944, %rd6920;
	and.b64  	%rd6965, %rd6964, %rd6896;
	or.b64  	%rd6966, %rd6965, %rd6963;
	add.s64 	%rd6967, %rd6956, %rd6966;
	add.s64 	%rd6968, %rd6967, %rd6962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4399,%dummy}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4400}, %rd6957;
	}
	shf.r.wrap.b32 	%r4401, %r4400, %r4399, 14;
	shf.r.wrap.b32 	%r4402, %r4399, %r4400, 14;
	mov.b64 	%rd6969, {%r4402, %r4401};
	shf.r.wrap.b32 	%r4403, %r4400, %r4399, 18;
	shf.r.wrap.b32 	%r4404, %r4399, %r4400, 18;
	mov.b64 	%rd6970, {%r4404, %r4403};
	xor.b64  	%rd6971, %rd6970, %rd6969;
	shf.l.wrap.b32 	%r4405, %r4399, %r4400, 23;
	shf.l.wrap.b32 	%r4406, %r4400, %r4399, 23;
	mov.b64 	%rd6972, {%r4406, %r4405};
	xor.b64  	%rd6973, %rd6971, %rd6972;
	xor.b64  	%rd6974, %rd6933, %rd6909;
	and.b64  	%rd6975, %rd6957, %rd6974;
	xor.b64  	%rd6976, %rd6975, %rd6909;
	ld.local.u64 	%rd18414, [%rd1+152];
	add.s64 	%rd6977, %rd6885, %rd18414;
	add.s64 	%rd6978, %rd6977, %rd18327;
	add.s64 	%rd6979, %rd6978, %rd6976;
	add.s64 	%rd6980, %rd6979, %rd6973;
	add.s64 	%rd6981, %rd6980, %rd6896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4407,%dummy}, %rd6968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4408}, %rd6968;
	}
	shf.r.wrap.b32 	%r4409, %r4408, %r4407, 28;
	shf.r.wrap.b32 	%r4410, %r4407, %r4408, 28;
	mov.b64 	%rd6982, {%r4410, %r4409};
	shf.l.wrap.b32 	%r4411, %r4407, %r4408, 30;
	shf.l.wrap.b32 	%r4412, %r4408, %r4407, 30;
	mov.b64 	%rd6983, {%r4412, %r4411};
	xor.b64  	%rd6984, %rd6983, %rd6982;
	shf.l.wrap.b32 	%r4413, %r4407, %r4408, 25;
	shf.l.wrap.b32 	%r4414, %r4408, %r4407, 25;
	mov.b64 	%rd6985, {%r4414, %r4413};
	xor.b64  	%rd6986, %rd6984, %rd6985;
	and.b64  	%rd6987, %rd6968, %rd6944;
	xor.b64  	%rd6988, %rd6968, %rd6944;
	and.b64  	%rd6989, %rd6988, %rd6920;
	or.b64  	%rd6990, %rd6989, %rd6987;
	add.s64 	%rd6991, %rd6980, %rd6990;
	add.s64 	%rd6992, %rd6991, %rd6986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4415,%dummy}, %rd6981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4416}, %rd6981;
	}
	shf.r.wrap.b32 	%r4417, %r4416, %r4415, 14;
	shf.r.wrap.b32 	%r4418, %r4415, %r4416, 14;
	mov.b64 	%rd6993, {%r4418, %r4417};
	shf.r.wrap.b32 	%r4419, %r4416, %r4415, 18;
	shf.r.wrap.b32 	%r4420, %r4415, %r4416, 18;
	mov.b64 	%rd6994, {%r4420, %r4419};
	xor.b64  	%rd6995, %rd6994, %rd6993;
	shf.l.wrap.b32 	%r4421, %r4415, %r4416, 23;
	shf.l.wrap.b32 	%r4422, %r4416, %r4415, 23;
	mov.b64 	%rd6996, {%r4422, %r4421};
	xor.b64  	%rd6997, %rd6995, %rd6996;
	xor.b64  	%rd6998, %rd6957, %rd6933;
	and.b64  	%rd6999, %rd6981, %rd6998;
	xor.b64  	%rd7000, %rd6999, %rd6933;
	ld.local.u64 	%rd18413, [%rd1+160];
	add.s64 	%rd7001, %rd6909, %rd18413;
	add.s64 	%rd7002, %rd7001, %rd18326;
	add.s64 	%rd7003, %rd7002, %rd7000;
	add.s64 	%rd7004, %rd7003, %rd6997;
	add.s64 	%rd18425, %rd7004, %rd6920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4423,%dummy}, %rd6992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4424}, %rd6992;
	}
	shf.r.wrap.b32 	%r4425, %r4424, %r4423, 28;
	shf.r.wrap.b32 	%r4426, %r4423, %r4424, 28;
	mov.b64 	%rd7005, {%r4426, %r4425};
	shf.l.wrap.b32 	%r4427, %r4423, %r4424, 30;
	shf.l.wrap.b32 	%r4428, %r4424, %r4423, 30;
	mov.b64 	%rd7006, {%r4428, %r4427};
	xor.b64  	%rd7007, %rd7006, %rd7005;
	shf.l.wrap.b32 	%r4429, %r4423, %r4424, 25;
	shf.l.wrap.b32 	%r4430, %r4424, %r4423, 25;
	mov.b64 	%rd7008, {%r4430, %r4429};
	xor.b64  	%rd7009, %rd7007, %rd7008;
	and.b64  	%rd7010, %rd6992, %rd6968;
	xor.b64  	%rd7011, %rd6992, %rd6968;
	and.b64  	%rd7012, %rd7011, %rd6944;
	or.b64  	%rd7013, %rd7012, %rd7010;
	add.s64 	%rd7014, %rd7004, %rd7013;
	add.s64 	%rd18421, %rd7014, %rd7009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4431,%dummy}, %rd18425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4432}, %rd18425;
	}
	shf.r.wrap.b32 	%r4433, %r4432, %r4431, 14;
	shf.r.wrap.b32 	%r4434, %r4431, %r4432, 14;
	mov.b64 	%rd7015, {%r4434, %r4433};
	shf.r.wrap.b32 	%r4435, %r4432, %r4431, 18;
	shf.r.wrap.b32 	%r4436, %r4431, %r4432, 18;
	mov.b64 	%rd7016, {%r4436, %r4435};
	xor.b64  	%rd7017, %rd7016, %rd7015;
	shf.l.wrap.b32 	%r4437, %r4431, %r4432, 23;
	shf.l.wrap.b32 	%r4438, %r4432, %r4431, 23;
	mov.b64 	%rd7018, {%r4438, %r4437};
	xor.b64  	%rd7019, %rd7017, %rd7018;
	xor.b64  	%rd7020, %rd6981, %rd6957;
	and.b64  	%rd7021, %rd18425, %rd7020;
	xor.b64  	%rd7022, %rd7021, %rd6957;
	ld.local.u64 	%rd18412, [%rd1+168];
	add.s64 	%rd7023, %rd6933, %rd18412;
	add.s64 	%rd7024, %rd7023, %rd18325;
	add.s64 	%rd7025, %rd7024, %rd7022;
	add.s64 	%rd7026, %rd7025, %rd7019;
	add.s64 	%rd18424, %rd7026, %rd6944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4439,%dummy}, %rd18421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4440}, %rd18421;
	}
	shf.r.wrap.b32 	%r4441, %r4440, %r4439, 28;
	shf.r.wrap.b32 	%r4442, %r4439, %r4440, 28;
	mov.b64 	%rd7027, {%r4442, %r4441};
	shf.l.wrap.b32 	%r4443, %r4439, %r4440, 30;
	shf.l.wrap.b32 	%r4444, %r4440, %r4439, 30;
	mov.b64 	%rd7028, {%r4444, %r4443};
	xor.b64  	%rd7029, %rd7028, %rd7027;
	shf.l.wrap.b32 	%r4445, %r4439, %r4440, 25;
	shf.l.wrap.b32 	%r4446, %r4440, %r4439, 25;
	mov.b64 	%rd7030, {%r4446, %r4445};
	xor.b64  	%rd7031, %rd7029, %rd7030;
	and.b64  	%rd7032, %rd18421, %rd6992;
	xor.b64  	%rd7033, %rd18421, %rd6992;
	and.b64  	%rd7034, %rd7033, %rd6968;
	or.b64  	%rd7035, %rd7034, %rd7032;
	add.s64 	%rd7036, %rd7026, %rd7035;
	add.s64 	%rd18420, %rd7036, %rd7031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4447,%dummy}, %rd18424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4448}, %rd18424;
	}
	shf.r.wrap.b32 	%r4449, %r4448, %r4447, 14;
	shf.r.wrap.b32 	%r4450, %r4447, %r4448, 14;
	mov.b64 	%rd7037, {%r4450, %r4449};
	shf.r.wrap.b32 	%r4451, %r4448, %r4447, 18;
	shf.r.wrap.b32 	%r4452, %r4447, %r4448, 18;
	mov.b64 	%rd7038, {%r4452, %r4451};
	xor.b64  	%rd7039, %rd7038, %rd7037;
	shf.l.wrap.b32 	%r4453, %r4447, %r4448, 23;
	shf.l.wrap.b32 	%r4454, %r4448, %r4447, 23;
	mov.b64 	%rd7040, {%r4454, %r4453};
	xor.b64  	%rd7041, %rd7039, %rd7040;
	xor.b64  	%rd7042, %rd18425, %rd6981;
	and.b64  	%rd7043, %rd18424, %rd7042;
	xor.b64  	%rd7044, %rd7043, %rd6981;
	ld.local.u64 	%rd18411, [%rd1+176];
	add.s64 	%rd7045, %rd6957, %rd18411;
	add.s64 	%rd7046, %rd7045, %rd18324;
	add.s64 	%rd7047, %rd7046, %rd7044;
	add.s64 	%rd7048, %rd7047, %rd7041;
	add.s64 	%rd18423, %rd7048, %rd6968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4455,%dummy}, %rd18420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4456}, %rd18420;
	}
	shf.r.wrap.b32 	%r4457, %r4456, %r4455, 28;
	shf.r.wrap.b32 	%r4458, %r4455, %r4456, 28;
	mov.b64 	%rd7049, {%r4458, %r4457};
	shf.l.wrap.b32 	%r4459, %r4455, %r4456, 30;
	shf.l.wrap.b32 	%r4460, %r4456, %r4455, 30;
	mov.b64 	%rd7050, {%r4460, %r4459};
	xor.b64  	%rd7051, %rd7050, %rd7049;
	shf.l.wrap.b32 	%r4461, %r4455, %r4456, 25;
	shf.l.wrap.b32 	%r4462, %r4456, %r4455, 25;
	mov.b64 	%rd7052, {%r4462, %r4461};
	xor.b64  	%rd7053, %rd7051, %rd7052;
	and.b64  	%rd7054, %rd18420, %rd18421;
	xor.b64  	%rd7055, %rd18420, %rd18421;
	and.b64  	%rd7056, %rd7055, %rd6992;
	or.b64  	%rd7057, %rd7056, %rd7054;
	add.s64 	%rd7058, %rd7048, %rd7057;
	add.s64 	%rd18419, %rd7058, %rd7053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4463,%dummy}, %rd18423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4464}, %rd18423;
	}
	shf.r.wrap.b32 	%r4465, %r4464, %r4463, 14;
	shf.r.wrap.b32 	%r4466, %r4463, %r4464, 14;
	mov.b64 	%rd7059, {%r4466, %r4465};
	shf.r.wrap.b32 	%r4467, %r4464, %r4463, 18;
	shf.r.wrap.b32 	%r4468, %r4463, %r4464, 18;
	mov.b64 	%rd7060, {%r4468, %r4467};
	xor.b64  	%rd7061, %rd7060, %rd7059;
	shf.l.wrap.b32 	%r4469, %r4463, %r4464, 23;
	shf.l.wrap.b32 	%r4470, %r4464, %r4463, 23;
	mov.b64 	%rd7062, {%r4470, %r4469};
	xor.b64  	%rd7063, %rd7061, %rd7062;
	xor.b64  	%rd7064, %rd18424, %rd18425;
	and.b64  	%rd7065, %rd18423, %rd7064;
	xor.b64  	%rd7066, %rd7065, %rd18425;
	ld.local.u64 	%rd18410, [%rd1+184];
	add.s64 	%rd7067, %rd6981, %rd18410;
	add.s64 	%rd7068, %rd7067, %rd18323;
	add.s64 	%rd7069, %rd7068, %rd7066;
	add.s64 	%rd7070, %rd7069, %rd7063;
	add.s64 	%rd18422, %rd7070, %rd6992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4471,%dummy}, %rd18419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4472}, %rd18419;
	}
	shf.r.wrap.b32 	%r4473, %r4472, %r4471, 28;
	shf.r.wrap.b32 	%r4474, %r4471, %r4472, 28;
	mov.b64 	%rd7071, {%r4474, %r4473};
	shf.l.wrap.b32 	%r4475, %r4471, %r4472, 30;
	shf.l.wrap.b32 	%r4476, %r4472, %r4471, 30;
	mov.b64 	%rd7072, {%r4476, %r4475};
	xor.b64  	%rd7073, %rd7072, %rd7071;
	shf.l.wrap.b32 	%r4477, %r4471, %r4472, 25;
	shf.l.wrap.b32 	%r4478, %r4472, %r4471, 25;
	mov.b64 	%rd7074, {%r4478, %r4477};
	xor.b64  	%rd7075, %rd7073, %rd7074;
	and.b64  	%rd7076, %rd18419, %rd18420;
	xor.b64  	%rd7077, %rd18419, %rd18420;
	and.b64  	%rd7078, %rd7077, %rd18421;
	or.b64  	%rd7079, %rd7078, %rd7076;
	add.s64 	%rd7080, %rd7070, %rd7079;
	add.s64 	%rd18418, %rd7080, %rd7075;
	mov.u32 	%r12620, 16;

BB0_113:
	mov.u64 	%rd18242, k_sha512;
	shr.u64 	%rd7081, %rd18411, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4479,%dummy}, %rd18411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4480}, %rd18411;
	}
	shf.r.wrap.b32 	%r4481, %r4480, %r4479, 19;
	shf.r.wrap.b32 	%r4482, %r4479, %r4480, 19;
	mov.b64 	%rd7082, {%r4482, %r4481};
	xor.b64  	%rd7083, %rd7082, %rd7081;
	shf.l.wrap.b32 	%r4483, %r4479, %r4480, 3;
	shf.l.wrap.b32 	%r4484, %r4480, %r4479, 3;
	mov.b64 	%rd7084, {%r4484, %r4483};
	xor.b64  	%rd7085, %rd7083, %rd7084;
	shr.u64 	%rd7086, %rd18427, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4485,%dummy}, %rd18427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4486}, %rd18427;
	}
	shf.r.wrap.b32 	%r4487, %r4486, %r4485, 1;
	shf.r.wrap.b32 	%r4488, %r4485, %r4486, 1;
	mov.b64 	%rd7087, {%r4488, %r4487};
	xor.b64  	%rd7088, %rd7087, %rd7086;
	shf.r.wrap.b32 	%r4489, %r4486, %r4485, 8;
	shf.r.wrap.b32 	%r4490, %r4485, %r4486, 8;
	mov.b64 	%rd7089, {%r4490, %r4489};
	xor.b64  	%rd7090, %rd7088, %rd7089;
	add.s64 	%rd7091, %rd18416, %rd18426;
	add.s64 	%rd7092, %rd7091, %rd7085;
	add.s64 	%rd18426, %rd7092, %rd7090;
	shr.u64 	%rd7093, %rd18410, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4491,%dummy}, %rd18410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4492}, %rd18410;
	}
	shf.r.wrap.b32 	%r4493, %r4492, %r4491, 19;
	shf.r.wrap.b32 	%r4494, %r4491, %r4492, 19;
	mov.b64 	%rd7094, {%r4494, %r4493};
	xor.b64  	%rd7095, %rd7094, %rd7093;
	shf.l.wrap.b32 	%r4495, %r4491, %r4492, 3;
	shf.l.wrap.b32 	%r4496, %r4492, %r4491, 3;
	mov.b64 	%rd7096, {%r4496, %r4495};
	xor.b64  	%rd7097, %rd7095, %rd7096;
	shr.u64 	%rd7098, %rd18428, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4497,%dummy}, %rd18428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4498}, %rd18428;
	}
	shf.r.wrap.b32 	%r4499, %r4498, %r4497, 1;
	shf.r.wrap.b32 	%r4500, %r4497, %r4498, 1;
	mov.b64 	%rd7099, {%r4500, %r4499};
	xor.b64  	%rd7100, %rd7099, %rd7098;
	shf.r.wrap.b32 	%r4501, %r4498, %r4497, 8;
	shf.r.wrap.b32 	%r4502, %r4497, %r4498, 8;
	mov.b64 	%rd7101, {%r4502, %r4501};
	xor.b64  	%rd7102, %rd7100, %rd7101;
	add.s64 	%rd7103, %rd18415, %rd18427;
	add.s64 	%rd7104, %rd7103, %rd7097;
	add.s64 	%rd18427, %rd7104, %rd7102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4503,%dummy}, %rd18426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4504}, %rd18426;
	}
	shf.r.wrap.b32 	%r4505, %r4504, %r4503, 19;
	shf.r.wrap.b32 	%r4506, %r4503, %r4504, 19;
	mov.b64 	%rd7105, {%r4506, %r4505};
	shf.l.wrap.b32 	%r4507, %r4503, %r4504, 3;
	shf.l.wrap.b32 	%r4508, %r4504, %r4503, 3;
	mov.b64 	%rd7106, {%r4508, %r4507};
	shr.u64 	%rd7107, %rd18426, 6;
	xor.b64  	%rd7108, %rd7105, %rd7107;
	xor.b64  	%rd7109, %rd7108, %rd7106;
	shr.u64 	%rd7110, %rd18429, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4509,%dummy}, %rd18429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4510}, %rd18429;
	}
	shf.r.wrap.b32 	%r4511, %r4510, %r4509, 1;
	shf.r.wrap.b32 	%r4512, %r4509, %r4510, 1;
	mov.b64 	%rd7111, {%r4512, %r4511};
	xor.b64  	%rd7112, %rd7111, %rd7110;
	shf.r.wrap.b32 	%r4513, %r4510, %r4509, 8;
	shf.r.wrap.b32 	%r4514, %r4509, %r4510, 8;
	mov.b64 	%rd7113, {%r4514, %r4513};
	xor.b64  	%rd7114, %rd7112, %rd7113;
	add.s64 	%rd7115, %rd18414, %rd18428;
	add.s64 	%rd7116, %rd7115, %rd7109;
	add.s64 	%rd18428, %rd7116, %rd7114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4515,%dummy}, %rd18427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4516}, %rd18427;
	}
	shf.r.wrap.b32 	%r4517, %r4516, %r4515, 19;
	shf.r.wrap.b32 	%r4518, %r4515, %r4516, 19;
	mov.b64 	%rd7117, {%r4518, %r4517};
	shf.l.wrap.b32 	%r4519, %r4515, %r4516, 3;
	shf.l.wrap.b32 	%r4520, %r4516, %r4515, 3;
	mov.b64 	%rd7118, {%r4520, %r4519};
	shr.u64 	%rd7119, %rd18427, 6;
	xor.b64  	%rd7120, %rd7117, %rd7119;
	xor.b64  	%rd7121, %rd7120, %rd7118;
	shr.u64 	%rd7122, %rd18430, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4521,%dummy}, %rd18430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4522}, %rd18430;
	}
	shf.r.wrap.b32 	%r4523, %r4522, %r4521, 1;
	shf.r.wrap.b32 	%r4524, %r4521, %r4522, 1;
	mov.b64 	%rd7123, {%r4524, %r4523};
	xor.b64  	%rd7124, %rd7123, %rd7122;
	shf.r.wrap.b32 	%r4525, %r4522, %r4521, 8;
	shf.r.wrap.b32 	%r4526, %r4521, %r4522, 8;
	mov.b64 	%rd7125, {%r4526, %r4525};
	xor.b64  	%rd7126, %rd7124, %rd7125;
	add.s64 	%rd7127, %rd18413, %rd18429;
	add.s64 	%rd7128, %rd7127, %rd7121;
	add.s64 	%rd18429, %rd7128, %rd7126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4527,%dummy}, %rd18428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4528}, %rd18428;
	}
	shf.r.wrap.b32 	%r4529, %r4528, %r4527, 19;
	shf.r.wrap.b32 	%r4530, %r4527, %r4528, 19;
	mov.b64 	%rd7129, {%r4530, %r4529};
	shf.l.wrap.b32 	%r4531, %r4527, %r4528, 3;
	shf.l.wrap.b32 	%r4532, %r4528, %r4527, 3;
	mov.b64 	%rd7130, {%r4532, %r4531};
	shr.u64 	%rd7131, %rd18428, 6;
	xor.b64  	%rd7132, %rd7129, %rd7131;
	xor.b64  	%rd7133, %rd7132, %rd7130;
	shr.u64 	%rd7134, %rd18431, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4533,%dummy}, %rd18431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4534}, %rd18431;
	}
	shf.r.wrap.b32 	%r4535, %r4534, %r4533, 1;
	shf.r.wrap.b32 	%r4536, %r4533, %r4534, 1;
	mov.b64 	%rd7135, {%r4536, %r4535};
	xor.b64  	%rd7136, %rd7135, %rd7134;
	shf.r.wrap.b32 	%r4537, %r4534, %r4533, 8;
	shf.r.wrap.b32 	%r4538, %r4533, %r4534, 8;
	mov.b64 	%rd7137, {%r4538, %r4537};
	xor.b64  	%rd7138, %rd7136, %rd7137;
	add.s64 	%rd7139, %rd18412, %rd18430;
	add.s64 	%rd7140, %rd7139, %rd7133;
	add.s64 	%rd18430, %rd7140, %rd7138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4539,%dummy}, %rd18429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4540}, %rd18429;
	}
	shf.r.wrap.b32 	%r4541, %r4540, %r4539, 19;
	shf.r.wrap.b32 	%r4542, %r4539, %r4540, 19;
	mov.b64 	%rd7141, {%r4542, %r4541};
	shf.l.wrap.b32 	%r4543, %r4539, %r4540, 3;
	shf.l.wrap.b32 	%r4544, %r4540, %r4539, 3;
	mov.b64 	%rd7142, {%r4544, %r4543};
	shr.u64 	%rd7143, %rd18429, 6;
	xor.b64  	%rd7144, %rd7141, %rd7143;
	xor.b64  	%rd7145, %rd7144, %rd7142;
	shr.u64 	%rd7146, %rd18432, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4545,%dummy}, %rd18432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4546}, %rd18432;
	}
	shf.r.wrap.b32 	%r4547, %r4546, %r4545, 1;
	shf.r.wrap.b32 	%r4548, %r4545, %r4546, 1;
	mov.b64 	%rd7147, {%r4548, %r4547};
	xor.b64  	%rd7148, %rd7147, %rd7146;
	shf.r.wrap.b32 	%r4549, %r4546, %r4545, 8;
	shf.r.wrap.b32 	%r4550, %r4545, %r4546, 8;
	mov.b64 	%rd7149, {%r4550, %r4549};
	xor.b64  	%rd7150, %rd7148, %rd7149;
	add.s64 	%rd7151, %rd18411, %rd18431;
	add.s64 	%rd7152, %rd7151, %rd7145;
	add.s64 	%rd18431, %rd7152, %rd7150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4551,%dummy}, %rd18430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4552}, %rd18430;
	}
	shf.r.wrap.b32 	%r4553, %r4552, %r4551, 19;
	shf.r.wrap.b32 	%r4554, %r4551, %r4552, 19;
	mov.b64 	%rd7153, {%r4554, %r4553};
	shf.l.wrap.b32 	%r4555, %r4551, %r4552, 3;
	shf.l.wrap.b32 	%r4556, %r4552, %r4551, 3;
	mov.b64 	%rd7154, {%r4556, %r4555};
	shr.u64 	%rd7155, %rd18430, 6;
	xor.b64  	%rd7156, %rd7153, %rd7155;
	xor.b64  	%rd7157, %rd7156, %rd7154;
	shr.u64 	%rd7158, %rd18433, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4557,%dummy}, %rd18433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4558}, %rd18433;
	}
	shf.r.wrap.b32 	%r4559, %r4558, %r4557, 1;
	shf.r.wrap.b32 	%r4560, %r4557, %r4558, 1;
	mov.b64 	%rd7159, {%r4560, %r4559};
	xor.b64  	%rd7160, %rd7159, %rd7158;
	shf.r.wrap.b32 	%r4561, %r4558, %r4557, 8;
	shf.r.wrap.b32 	%r4562, %r4557, %r4558, 8;
	mov.b64 	%rd7161, {%r4562, %r4561};
	xor.b64  	%rd7162, %rd7160, %rd7161;
	add.s64 	%rd7163, %rd18410, %rd18432;
	add.s64 	%rd7164, %rd7163, %rd7157;
	add.s64 	%rd18432, %rd7164, %rd7162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4563,%dummy}, %rd18431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4564}, %rd18431;
	}
	shf.r.wrap.b32 	%r4565, %r4564, %r4563, 19;
	shf.r.wrap.b32 	%r4566, %r4563, %r4564, 19;
	mov.b64 	%rd7165, {%r4566, %r4565};
	shf.l.wrap.b32 	%r4567, %r4563, %r4564, 3;
	shf.l.wrap.b32 	%r4568, %r4564, %r4563, 3;
	mov.b64 	%rd7166, {%r4568, %r4567};
	shr.u64 	%rd7167, %rd18431, 6;
	xor.b64  	%rd7168, %rd7165, %rd7167;
	xor.b64  	%rd7169, %rd7168, %rd7166;
	shr.u64 	%rd7170, %rd18417, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4569,%dummy}, %rd18417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4570}, %rd18417;
	}
	shf.r.wrap.b32 	%r4571, %r4570, %r4569, 1;
	shf.r.wrap.b32 	%r4572, %r4569, %r4570, 1;
	mov.b64 	%rd7171, {%r4572, %r4571};
	xor.b64  	%rd7172, %rd7171, %rd7170;
	shf.r.wrap.b32 	%r4573, %r4570, %r4569, 8;
	shf.r.wrap.b32 	%r4574, %r4569, %r4570, 8;
	mov.b64 	%rd7173, {%r4574, %r4573};
	xor.b64  	%rd7174, %rd7172, %rd7173;
	add.s64 	%rd7175, %rd18426, %rd18433;
	add.s64 	%rd7176, %rd7175, %rd7169;
	add.s64 	%rd18433, %rd7176, %rd7174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4575,%dummy}, %rd18432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4576}, %rd18432;
	}
	shf.r.wrap.b32 	%r4577, %r4576, %r4575, 19;
	shf.r.wrap.b32 	%r4578, %r4575, %r4576, 19;
	mov.b64 	%rd7177, {%r4578, %r4577};
	shf.l.wrap.b32 	%r4579, %r4575, %r4576, 3;
	shf.l.wrap.b32 	%r4580, %r4576, %r4575, 3;
	mov.b64 	%rd7178, {%r4580, %r4579};
	shr.u64 	%rd7179, %rd18432, 6;
	xor.b64  	%rd7180, %rd7177, %rd7179;
	xor.b64  	%rd7181, %rd7180, %rd7178;
	shr.u64 	%rd7182, %rd18416, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4581,%dummy}, %rd18416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4582}, %rd18416;
	}
	shf.r.wrap.b32 	%r4583, %r4582, %r4581, 1;
	shf.r.wrap.b32 	%r4584, %r4581, %r4582, 1;
	mov.b64 	%rd7183, {%r4584, %r4583};
	xor.b64  	%rd7184, %rd7183, %rd7182;
	shf.r.wrap.b32 	%r4585, %r4582, %r4581, 8;
	shf.r.wrap.b32 	%r4586, %r4581, %r4582, 8;
	mov.b64 	%rd7185, {%r4586, %r4585};
	xor.b64  	%rd7186, %rd7184, %rd7185;
	add.s64 	%rd7187, %rd18427, %rd18417;
	add.s64 	%rd7188, %rd7187, %rd7181;
	add.s64 	%rd18417, %rd7188, %rd7186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4587,%dummy}, %rd18433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4588}, %rd18433;
	}
	shf.r.wrap.b32 	%r4589, %r4588, %r4587, 19;
	shf.r.wrap.b32 	%r4590, %r4587, %r4588, 19;
	mov.b64 	%rd7189, {%r4590, %r4589};
	shf.l.wrap.b32 	%r4591, %r4587, %r4588, 3;
	shf.l.wrap.b32 	%r4592, %r4588, %r4587, 3;
	mov.b64 	%rd7190, {%r4592, %r4591};
	shr.u64 	%rd7191, %rd18433, 6;
	xor.b64  	%rd7192, %rd7189, %rd7191;
	xor.b64  	%rd7193, %rd7192, %rd7190;
	shr.u64 	%rd7194, %rd18415, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4593,%dummy}, %rd18415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4594}, %rd18415;
	}
	shf.r.wrap.b32 	%r4595, %r4594, %r4593, 1;
	shf.r.wrap.b32 	%r4596, %r4593, %r4594, 1;
	mov.b64 	%rd7195, {%r4596, %r4595};
	xor.b64  	%rd7196, %rd7195, %rd7194;
	shf.r.wrap.b32 	%r4597, %r4594, %r4593, 8;
	shf.r.wrap.b32 	%r4598, %r4593, %r4594, 8;
	mov.b64 	%rd7197, {%r4598, %r4597};
	xor.b64  	%rd7198, %rd7196, %rd7197;
	add.s64 	%rd7199, %rd18428, %rd18416;
	add.s64 	%rd7200, %rd7199, %rd7193;
	add.s64 	%rd18416, %rd7200, %rd7198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4599,%dummy}, %rd18417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4600}, %rd18417;
	}
	shf.r.wrap.b32 	%r4601, %r4600, %r4599, 19;
	shf.r.wrap.b32 	%r4602, %r4599, %r4600, 19;
	mov.b64 	%rd7201, {%r4602, %r4601};
	shf.l.wrap.b32 	%r4603, %r4599, %r4600, 3;
	shf.l.wrap.b32 	%r4604, %r4600, %r4599, 3;
	mov.b64 	%rd7202, {%r4604, %r4603};
	shr.u64 	%rd7203, %rd18417, 6;
	xor.b64  	%rd7204, %rd7201, %rd7203;
	xor.b64  	%rd7205, %rd7204, %rd7202;
	shr.u64 	%rd7206, %rd18414, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4605,%dummy}, %rd18414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4606}, %rd18414;
	}
	shf.r.wrap.b32 	%r4607, %r4606, %r4605, 1;
	shf.r.wrap.b32 	%r4608, %r4605, %r4606, 1;
	mov.b64 	%rd7207, {%r4608, %r4607};
	xor.b64  	%rd7208, %rd7207, %rd7206;
	shf.r.wrap.b32 	%r4609, %r4606, %r4605, 8;
	shf.r.wrap.b32 	%r4610, %r4605, %r4606, 8;
	mov.b64 	%rd7209, {%r4610, %r4609};
	xor.b64  	%rd7210, %rd7208, %rd7209;
	add.s64 	%rd7211, %rd18429, %rd18415;
	add.s64 	%rd7212, %rd7211, %rd7205;
	add.s64 	%rd18415, %rd7212, %rd7210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4611,%dummy}, %rd18416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4612}, %rd18416;
	}
	shf.r.wrap.b32 	%r4613, %r4612, %r4611, 19;
	shf.r.wrap.b32 	%r4614, %r4611, %r4612, 19;
	mov.b64 	%rd7213, {%r4614, %r4613};
	shf.l.wrap.b32 	%r4615, %r4611, %r4612, 3;
	shf.l.wrap.b32 	%r4616, %r4612, %r4611, 3;
	mov.b64 	%rd7214, {%r4616, %r4615};
	shr.u64 	%rd7215, %rd18416, 6;
	xor.b64  	%rd7216, %rd7213, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd7214;
	shr.u64 	%rd7218, %rd18413, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4617,%dummy}, %rd18413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4618}, %rd18413;
	}
	shf.r.wrap.b32 	%r4619, %r4618, %r4617, 1;
	shf.r.wrap.b32 	%r4620, %r4617, %r4618, 1;
	mov.b64 	%rd7219, {%r4620, %r4619};
	xor.b64  	%rd7220, %rd7219, %rd7218;
	shf.r.wrap.b32 	%r4621, %r4618, %r4617, 8;
	shf.r.wrap.b32 	%r4622, %r4617, %r4618, 8;
	mov.b64 	%rd7221, {%r4622, %r4621};
	xor.b64  	%rd7222, %rd7220, %rd7221;
	add.s64 	%rd7223, %rd18430, %rd18414;
	add.s64 	%rd7224, %rd7223, %rd7217;
	add.s64 	%rd18414, %rd7224, %rd7222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4623,%dummy}, %rd18415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4624}, %rd18415;
	}
	shf.r.wrap.b32 	%r4625, %r4624, %r4623, 19;
	shf.r.wrap.b32 	%r4626, %r4623, %r4624, 19;
	mov.b64 	%rd7225, {%r4626, %r4625};
	shf.l.wrap.b32 	%r4627, %r4623, %r4624, 3;
	shf.l.wrap.b32 	%r4628, %r4624, %r4623, 3;
	mov.b64 	%rd7226, {%r4628, %r4627};
	shr.u64 	%rd7227, %rd18415, 6;
	xor.b64  	%rd7228, %rd7225, %rd7227;
	xor.b64  	%rd7229, %rd7228, %rd7226;
	shr.u64 	%rd7230, %rd18412, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4629,%dummy}, %rd18412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4630}, %rd18412;
	}
	shf.r.wrap.b32 	%r4631, %r4630, %r4629, 1;
	shf.r.wrap.b32 	%r4632, %r4629, %r4630, 1;
	mov.b64 	%rd7231, {%r4632, %r4631};
	xor.b64  	%rd7232, %rd7231, %rd7230;
	shf.r.wrap.b32 	%r4633, %r4630, %r4629, 8;
	shf.r.wrap.b32 	%r4634, %r4629, %r4630, 8;
	mov.b64 	%rd7233, {%r4634, %r4633};
	xor.b64  	%rd7234, %rd7232, %rd7233;
	add.s64 	%rd7235, %rd18431, %rd18413;
	add.s64 	%rd7236, %rd7235, %rd7229;
	add.s64 	%rd18413, %rd7236, %rd7234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4635,%dummy}, %rd18414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4636}, %rd18414;
	}
	shf.r.wrap.b32 	%r4637, %r4636, %r4635, 19;
	shf.r.wrap.b32 	%r4638, %r4635, %r4636, 19;
	mov.b64 	%rd7237, {%r4638, %r4637};
	shf.l.wrap.b32 	%r4639, %r4635, %r4636, 3;
	shf.l.wrap.b32 	%r4640, %r4636, %r4635, 3;
	mov.b64 	%rd7238, {%r4640, %r4639};
	shr.u64 	%rd7239, %rd18414, 6;
	xor.b64  	%rd7240, %rd7237, %rd7239;
	xor.b64  	%rd7241, %rd7240, %rd7238;
	shr.u64 	%rd7242, %rd18411, 7;
	shf.r.wrap.b32 	%r4641, %r4480, %r4479, 1;
	shf.r.wrap.b32 	%r4642, %r4479, %r4480, 1;
	mov.b64 	%rd7243, {%r4642, %r4641};
	xor.b64  	%rd7244, %rd7243, %rd7242;
	shf.r.wrap.b32 	%r4643, %r4480, %r4479, 8;
	shf.r.wrap.b32 	%r4644, %r4479, %r4480, 8;
	mov.b64 	%rd7245, {%r4644, %r4643};
	xor.b64  	%rd7246, %rd7244, %rd7245;
	add.s64 	%rd7247, %rd18432, %rd18412;
	add.s64 	%rd7248, %rd7247, %rd7241;
	add.s64 	%rd18412, %rd7248, %rd7246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4645,%dummy}, %rd18413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4646}, %rd18413;
	}
	shf.r.wrap.b32 	%r4647, %r4646, %r4645, 19;
	shf.r.wrap.b32 	%r4648, %r4645, %r4646, 19;
	mov.b64 	%rd7249, {%r4648, %r4647};
	shf.l.wrap.b32 	%r4649, %r4645, %r4646, 3;
	shf.l.wrap.b32 	%r4650, %r4646, %r4645, 3;
	mov.b64 	%rd7250, {%r4650, %r4649};
	shr.u64 	%rd7251, %rd18413, 6;
	xor.b64  	%rd7252, %rd7249, %rd7251;
	xor.b64  	%rd7253, %rd7252, %rd7250;
	shr.u64 	%rd7254, %rd18410, 7;
	shf.r.wrap.b32 	%r4651, %r4492, %r4491, 1;
	shf.r.wrap.b32 	%r4652, %r4491, %r4492, 1;
	mov.b64 	%rd7255, {%r4652, %r4651};
	xor.b64  	%rd7256, %rd7255, %rd7254;
	shf.r.wrap.b32 	%r4653, %r4492, %r4491, 8;
	shf.r.wrap.b32 	%r4654, %r4491, %r4492, 8;
	mov.b64 	%rd7257, {%r4654, %r4653};
	xor.b64  	%rd7258, %rd7256, %rd7257;
	add.s64 	%rd7259, %rd18433, %rd18411;
	add.s64 	%rd7260, %rd7259, %rd7253;
	add.s64 	%rd18411, %rd7260, %rd7258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4655,%dummy}, %rd18412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4656}, %rd18412;
	}
	shf.r.wrap.b32 	%r4657, %r4656, %r4655, 19;
	shf.r.wrap.b32 	%r4658, %r4655, %r4656, 19;
	mov.b64 	%rd7261, {%r4658, %r4657};
	shf.l.wrap.b32 	%r4659, %r4655, %r4656, 3;
	shf.l.wrap.b32 	%r4660, %r4656, %r4655, 3;
	mov.b64 	%rd7262, {%r4660, %r4659};
	shr.u64 	%rd7263, %rd18412, 6;
	xor.b64  	%rd7264, %rd7261, %rd7263;
	xor.b64  	%rd7265, %rd7264, %rd7262;
	shf.r.wrap.b32 	%r4661, %r4504, %r4503, 1;
	shf.r.wrap.b32 	%r4662, %r4503, %r4504, 1;
	mov.b64 	%rd7266, {%r4662, %r4661};
	shf.r.wrap.b32 	%r4663, %r4504, %r4503, 8;
	shf.r.wrap.b32 	%r4664, %r4503, %r4504, 8;
	mov.b64 	%rd7267, {%r4664, %r4663};
	shr.u64 	%rd7268, %rd18426, 7;
	xor.b64  	%rd7269, %rd7266, %rd7268;
	xor.b64  	%rd7270, %rd7269, %rd7267;
	add.s64 	%rd7271, %rd18417, %rd18410;
	add.s64 	%rd7272, %rd7271, %rd7265;
	add.s64 	%rd18410, %rd7272, %rd7270;
	mul.wide.s32 	%rd7273, %r12620, 8;
	add.s64 	%rd7275, %rd18242, %rd7273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4665,%dummy}, %rd18422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4666}, %rd18422;
	}
	shf.r.wrap.b32 	%r4667, %r4666, %r4665, 18;
	shf.r.wrap.b32 	%r4668, %r4665, %r4666, 18;
	mov.b64 	%rd7276, {%r4668, %r4667};
	shf.r.wrap.b32 	%r4669, %r4666, %r4665, 14;
	shf.r.wrap.b32 	%r4670, %r4665, %r4666, 14;
	mov.b64 	%rd7277, {%r4670, %r4669};
	xor.b64  	%rd7278, %rd7276, %rd7277;
	shf.l.wrap.b32 	%r4671, %r4665, %r4666, 23;
	shf.l.wrap.b32 	%r4672, %r4666, %r4665, 23;
	mov.b64 	%rd7279, {%r4672, %r4671};
	xor.b64  	%rd7280, %rd7278, %rd7279;
	xor.b64  	%rd7281, %rd18423, %rd18424;
	and.b64  	%rd7282, %rd18422, %rd7281;
	xor.b64  	%rd7283, %rd7282, %rd18424;
	add.s64 	%rd7284, %rd7283, %rd18425;
	add.s64 	%rd7285, %rd7284, %rd18426;
	ld.const.u64 	%rd7286, [%rd7275];
	add.s64 	%rd7287, %rd7285, %rd7286;
	add.s64 	%rd7288, %rd7287, %rd7280;
	add.s64 	%rd7289, %rd7288, %rd18421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4673}, %rd18418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd18418;
	}
	shf.l.wrap.b32 	%r4675, %r4674, %r4673, 30;
	shf.l.wrap.b32 	%r4676, %r4673, %r4674, 30;
	mov.b64 	%rd7290, {%r4676, %r4675};
	shf.r.wrap.b32 	%r4677, %r4673, %r4674, 28;
	shf.r.wrap.b32 	%r4678, %r4674, %r4673, 28;
	mov.b64 	%rd7291, {%r4678, %r4677};
	xor.b64  	%rd7292, %rd7290, %rd7291;
	shf.l.wrap.b32 	%r4679, %r4674, %r4673, 25;
	shf.l.wrap.b32 	%r4680, %r4673, %r4674, 25;
	mov.b64 	%rd7293, {%r4680, %r4679};
	xor.b64  	%rd7294, %rd7292, %rd7293;
	xor.b64  	%rd7295, %rd18418, %rd18419;
	and.b64  	%rd7296, %rd7295, %rd18420;
	and.b64  	%rd7297, %rd18418, %rd18419;
	or.b64  	%rd7298, %rd7296, %rd7297;
	add.s64 	%rd7299, %rd7288, %rd7298;
	add.s64 	%rd7300, %rd7299, %rd7294;
	add.s32 	%r4681, %r12620, 1;
	mul.wide.s32 	%rd7301, %r4681, 8;
	add.s64 	%rd7302, %rd18242, %rd7301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4682,%dummy}, %rd7289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4683}, %rd7289;
	}
	shf.r.wrap.b32 	%r4684, %r4683, %r4682, 14;
	shf.r.wrap.b32 	%r4685, %r4682, %r4683, 14;
	mov.b64 	%rd7303, {%r4685, %r4684};
	shf.r.wrap.b32 	%r4686, %r4683, %r4682, 18;
	shf.r.wrap.b32 	%r4687, %r4682, %r4683, 18;
	mov.b64 	%rd7304, {%r4687, %r4686};
	xor.b64  	%rd7305, %rd7304, %rd7303;
	shf.l.wrap.b32 	%r4688, %r4682, %r4683, 23;
	shf.l.wrap.b32 	%r4689, %r4683, %r4682, 23;
	mov.b64 	%rd7306, {%r4689, %r4688};
	xor.b64  	%rd7307, %rd7305, %rd7306;
	xor.b64  	%rd7308, %rd18422, %rd18423;
	and.b64  	%rd7309, %rd7289, %rd7308;
	xor.b64  	%rd7310, %rd7309, %rd18423;
	add.s64 	%rd7311, %rd18427, %rd18424;
	ld.const.u64 	%rd7312, [%rd7302];
	add.s64 	%rd7313, %rd7311, %rd7312;
	add.s64 	%rd7314, %rd7313, %rd7310;
	add.s64 	%rd7315, %rd7314, %rd7307;
	add.s64 	%rd7316, %rd7315, %rd18420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4690,%dummy}, %rd7300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4691}, %rd7300;
	}
	shf.r.wrap.b32 	%r4692, %r4691, %r4690, 28;
	shf.r.wrap.b32 	%r4693, %r4690, %r4691, 28;
	mov.b64 	%rd7317, {%r4693, %r4692};
	shf.l.wrap.b32 	%r4694, %r4690, %r4691, 30;
	shf.l.wrap.b32 	%r4695, %r4691, %r4690, 30;
	mov.b64 	%rd7318, {%r4695, %r4694};
	xor.b64  	%rd7319, %rd7318, %rd7317;
	shf.l.wrap.b32 	%r4696, %r4690, %r4691, 25;
	shf.l.wrap.b32 	%r4697, %r4691, %r4690, 25;
	mov.b64 	%rd7320, {%r4697, %r4696};
	xor.b64  	%rd7321, %rd7319, %rd7320;
	and.b64  	%rd7322, %rd7300, %rd18418;
	xor.b64  	%rd7323, %rd7300, %rd18418;
	and.b64  	%rd7324, %rd7323, %rd18419;
	or.b64  	%rd7325, %rd7324, %rd7322;
	add.s64 	%rd7326, %rd7315, %rd7325;
	add.s64 	%rd7327, %rd7326, %rd7321;
	add.s32 	%r4698, %r12620, 2;
	mul.wide.s32 	%rd7328, %r4698, 8;
	add.s64 	%rd7329, %rd18242, %rd7328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4699,%dummy}, %rd7316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4700}, %rd7316;
	}
	shf.r.wrap.b32 	%r4701, %r4700, %r4699, 14;
	shf.r.wrap.b32 	%r4702, %r4699, %r4700, 14;
	mov.b64 	%rd7330, {%r4702, %r4701};
	shf.r.wrap.b32 	%r4703, %r4700, %r4699, 18;
	shf.r.wrap.b32 	%r4704, %r4699, %r4700, 18;
	mov.b64 	%rd7331, {%r4704, %r4703};
	xor.b64  	%rd7332, %rd7331, %rd7330;
	shf.l.wrap.b32 	%r4705, %r4699, %r4700, 23;
	shf.l.wrap.b32 	%r4706, %r4700, %r4699, 23;
	mov.b64 	%rd7333, {%r4706, %r4705};
	xor.b64  	%rd7334, %rd7332, %rd7333;
	xor.b64  	%rd7335, %rd7289, %rd18422;
	and.b64  	%rd7336, %rd7316, %rd7335;
	xor.b64  	%rd7337, %rd7336, %rd18422;
	add.s64 	%rd7338, %rd18428, %rd18423;
	ld.const.u64 	%rd7339, [%rd7329];
	add.s64 	%rd7340, %rd7338, %rd7339;
	add.s64 	%rd7341, %rd7340, %rd7337;
	add.s64 	%rd7342, %rd7341, %rd7334;
	add.s64 	%rd7343, %rd7342, %rd18419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4707,%dummy}, %rd7327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4708}, %rd7327;
	}
	shf.r.wrap.b32 	%r4709, %r4708, %r4707, 28;
	shf.r.wrap.b32 	%r4710, %r4707, %r4708, 28;
	mov.b64 	%rd7344, {%r4710, %r4709};
	shf.l.wrap.b32 	%r4711, %r4707, %r4708, 30;
	shf.l.wrap.b32 	%r4712, %r4708, %r4707, 30;
	mov.b64 	%rd7345, {%r4712, %r4711};
	xor.b64  	%rd7346, %rd7345, %rd7344;
	shf.l.wrap.b32 	%r4713, %r4707, %r4708, 25;
	shf.l.wrap.b32 	%r4714, %r4708, %r4707, 25;
	mov.b64 	%rd7347, {%r4714, %r4713};
	xor.b64  	%rd7348, %rd7346, %rd7347;
	and.b64  	%rd7349, %rd7327, %rd7300;
	xor.b64  	%rd7350, %rd7327, %rd7300;
	and.b64  	%rd7351, %rd7350, %rd18418;
	or.b64  	%rd7352, %rd7351, %rd7349;
	add.s64 	%rd7353, %rd7342, %rd7352;
	add.s64 	%rd7354, %rd7353, %rd7348;
	add.s32 	%r4715, %r12620, 3;
	mul.wide.s32 	%rd7355, %r4715, 8;
	add.s64 	%rd7356, %rd18242, %rd7355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4716,%dummy}, %rd7343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4717}, %rd7343;
	}
	shf.r.wrap.b32 	%r4718, %r4717, %r4716, 14;
	shf.r.wrap.b32 	%r4719, %r4716, %r4717, 14;
	mov.b64 	%rd7357, {%r4719, %r4718};
	shf.r.wrap.b32 	%r4720, %r4717, %r4716, 18;
	shf.r.wrap.b32 	%r4721, %r4716, %r4717, 18;
	mov.b64 	%rd7358, {%r4721, %r4720};
	xor.b64  	%rd7359, %rd7358, %rd7357;
	shf.l.wrap.b32 	%r4722, %r4716, %r4717, 23;
	shf.l.wrap.b32 	%r4723, %r4717, %r4716, 23;
	mov.b64 	%rd7360, {%r4723, %r4722};
	xor.b64  	%rd7361, %rd7359, %rd7360;
	xor.b64  	%rd7362, %rd7316, %rd7289;
	and.b64  	%rd7363, %rd7343, %rd7362;
	xor.b64  	%rd7364, %rd7363, %rd7289;
	add.s64 	%rd7365, %rd18429, %rd18422;
	ld.const.u64 	%rd7366, [%rd7356];
	add.s64 	%rd7367, %rd7365, %rd7366;
	add.s64 	%rd7368, %rd7367, %rd7364;
	add.s64 	%rd7369, %rd7368, %rd7361;
	add.s64 	%rd7370, %rd7369, %rd18418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4724,%dummy}, %rd7354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd7354;
	}
	shf.r.wrap.b32 	%r4726, %r4725, %r4724, 28;
	shf.r.wrap.b32 	%r4727, %r4724, %r4725, 28;
	mov.b64 	%rd7371, {%r4727, %r4726};
	shf.l.wrap.b32 	%r4728, %r4724, %r4725, 30;
	shf.l.wrap.b32 	%r4729, %r4725, %r4724, 30;
	mov.b64 	%rd7372, {%r4729, %r4728};
	xor.b64  	%rd7373, %rd7372, %rd7371;
	shf.l.wrap.b32 	%r4730, %r4724, %r4725, 25;
	shf.l.wrap.b32 	%r4731, %r4725, %r4724, 25;
	mov.b64 	%rd7374, {%r4731, %r4730};
	xor.b64  	%rd7375, %rd7373, %rd7374;
	and.b64  	%rd7376, %rd7354, %rd7327;
	xor.b64  	%rd7377, %rd7354, %rd7327;
	and.b64  	%rd7378, %rd7377, %rd7300;
	or.b64  	%rd7379, %rd7378, %rd7376;
	add.s64 	%rd7380, %rd7369, %rd7379;
	add.s64 	%rd7381, %rd7380, %rd7375;
	add.s32 	%r4732, %r12620, 4;
	mul.wide.s32 	%rd7382, %r4732, 8;
	add.s64 	%rd7383, %rd18242, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4733,%dummy}, %rd7370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4734}, %rd7370;
	}
	shf.r.wrap.b32 	%r4735, %r4734, %r4733, 14;
	shf.r.wrap.b32 	%r4736, %r4733, %r4734, 14;
	mov.b64 	%rd7384, {%r4736, %r4735};
	shf.r.wrap.b32 	%r4737, %r4734, %r4733, 18;
	shf.r.wrap.b32 	%r4738, %r4733, %r4734, 18;
	mov.b64 	%rd7385, {%r4738, %r4737};
	xor.b64  	%rd7386, %rd7385, %rd7384;
	shf.l.wrap.b32 	%r4739, %r4733, %r4734, 23;
	shf.l.wrap.b32 	%r4740, %r4734, %r4733, 23;
	mov.b64 	%rd7387, {%r4740, %r4739};
	xor.b64  	%rd7388, %rd7386, %rd7387;
	xor.b64  	%rd7389, %rd7343, %rd7316;
	and.b64  	%rd7390, %rd7370, %rd7389;
	xor.b64  	%rd7391, %rd7390, %rd7316;
	add.s64 	%rd7392, %rd7289, %rd18430;
	ld.const.u64 	%rd7393, [%rd7383];
	add.s64 	%rd7394, %rd7392, %rd7393;
	add.s64 	%rd7395, %rd7394, %rd7391;
	add.s64 	%rd7396, %rd7395, %rd7388;
	add.s64 	%rd7397, %rd7396, %rd7300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4741,%dummy}, %rd7381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4742}, %rd7381;
	}
	shf.r.wrap.b32 	%r4743, %r4742, %r4741, 28;
	shf.r.wrap.b32 	%r4744, %r4741, %r4742, 28;
	mov.b64 	%rd7398, {%r4744, %r4743};
	shf.l.wrap.b32 	%r4745, %r4741, %r4742, 30;
	shf.l.wrap.b32 	%r4746, %r4742, %r4741, 30;
	mov.b64 	%rd7399, {%r4746, %r4745};
	xor.b64  	%rd7400, %rd7399, %rd7398;
	shf.l.wrap.b32 	%r4747, %r4741, %r4742, 25;
	shf.l.wrap.b32 	%r4748, %r4742, %r4741, 25;
	mov.b64 	%rd7401, {%r4748, %r4747};
	xor.b64  	%rd7402, %rd7400, %rd7401;
	and.b64  	%rd7403, %rd7381, %rd7354;
	xor.b64  	%rd7404, %rd7381, %rd7354;
	and.b64  	%rd7405, %rd7404, %rd7327;
	or.b64  	%rd7406, %rd7405, %rd7403;
	add.s64 	%rd7407, %rd7396, %rd7406;
	add.s64 	%rd7408, %rd7407, %rd7402;
	add.s32 	%r4749, %r12620, 5;
	mul.wide.s32 	%rd7409, %r4749, 8;
	add.s64 	%rd7410, %rd18242, %rd7409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4750,%dummy}, %rd7397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4751}, %rd7397;
	}
	shf.r.wrap.b32 	%r4752, %r4751, %r4750, 14;
	shf.r.wrap.b32 	%r4753, %r4750, %r4751, 14;
	mov.b64 	%rd7411, {%r4753, %r4752};
	shf.r.wrap.b32 	%r4754, %r4751, %r4750, 18;
	shf.r.wrap.b32 	%r4755, %r4750, %r4751, 18;
	mov.b64 	%rd7412, {%r4755, %r4754};
	xor.b64  	%rd7413, %rd7412, %rd7411;
	shf.l.wrap.b32 	%r4756, %r4750, %r4751, 23;
	shf.l.wrap.b32 	%r4757, %r4751, %r4750, 23;
	mov.b64 	%rd7414, {%r4757, %r4756};
	xor.b64  	%rd7415, %rd7413, %rd7414;
	xor.b64  	%rd7416, %rd7370, %rd7343;
	and.b64  	%rd7417, %rd7397, %rd7416;
	xor.b64  	%rd7418, %rd7417, %rd7343;
	add.s64 	%rd7419, %rd7316, %rd18431;
	ld.const.u64 	%rd7420, [%rd7410];
	add.s64 	%rd7421, %rd7419, %rd7420;
	add.s64 	%rd7422, %rd7421, %rd7418;
	add.s64 	%rd7423, %rd7422, %rd7415;
	add.s64 	%rd7424, %rd7423, %rd7327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd7408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4759}, %rd7408;
	}
	shf.r.wrap.b32 	%r4760, %r4759, %r4758, 28;
	shf.r.wrap.b32 	%r4761, %r4758, %r4759, 28;
	mov.b64 	%rd7425, {%r4761, %r4760};
	shf.l.wrap.b32 	%r4762, %r4758, %r4759, 30;
	shf.l.wrap.b32 	%r4763, %r4759, %r4758, 30;
	mov.b64 	%rd7426, {%r4763, %r4762};
	xor.b64  	%rd7427, %rd7426, %rd7425;
	shf.l.wrap.b32 	%r4764, %r4758, %r4759, 25;
	shf.l.wrap.b32 	%r4765, %r4759, %r4758, 25;
	mov.b64 	%rd7428, {%r4765, %r4764};
	xor.b64  	%rd7429, %rd7427, %rd7428;
	and.b64  	%rd7430, %rd7408, %rd7381;
	xor.b64  	%rd7431, %rd7408, %rd7381;
	and.b64  	%rd7432, %rd7431, %rd7354;
	or.b64  	%rd7433, %rd7432, %rd7430;
	add.s64 	%rd7434, %rd7423, %rd7433;
	add.s64 	%rd7435, %rd7434, %rd7429;
	add.s32 	%r4766, %r12620, 6;
	mul.wide.s32 	%rd7436, %r4766, 8;
	add.s64 	%rd7437, %rd18242, %rd7436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4767,%dummy}, %rd7424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4768}, %rd7424;
	}
	shf.r.wrap.b32 	%r4769, %r4768, %r4767, 14;
	shf.r.wrap.b32 	%r4770, %r4767, %r4768, 14;
	mov.b64 	%rd7438, {%r4770, %r4769};
	shf.r.wrap.b32 	%r4771, %r4768, %r4767, 18;
	shf.r.wrap.b32 	%r4772, %r4767, %r4768, 18;
	mov.b64 	%rd7439, {%r4772, %r4771};
	xor.b64  	%rd7440, %rd7439, %rd7438;
	shf.l.wrap.b32 	%r4773, %r4767, %r4768, 23;
	shf.l.wrap.b32 	%r4774, %r4768, %r4767, 23;
	mov.b64 	%rd7441, {%r4774, %r4773};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	xor.b64  	%rd7443, %rd7397, %rd7370;
	and.b64  	%rd7444, %rd7424, %rd7443;
	xor.b64  	%rd7445, %rd7444, %rd7370;
	add.s64 	%rd7446, %rd7343, %rd18432;
	ld.const.u64 	%rd7447, [%rd7437];
	add.s64 	%rd7448, %rd7446, %rd7447;
	add.s64 	%rd7449, %rd7448, %rd7445;
	add.s64 	%rd7450, %rd7449, %rd7442;
	add.s64 	%rd7451, %rd7450, %rd7354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4775,%dummy}, %rd7435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4776}, %rd7435;
	}
	shf.r.wrap.b32 	%r4777, %r4776, %r4775, 28;
	shf.r.wrap.b32 	%r4778, %r4775, %r4776, 28;
	mov.b64 	%rd7452, {%r4778, %r4777};
	shf.l.wrap.b32 	%r4779, %r4775, %r4776, 30;
	shf.l.wrap.b32 	%r4780, %r4776, %r4775, 30;
	mov.b64 	%rd7453, {%r4780, %r4779};
	xor.b64  	%rd7454, %rd7453, %rd7452;
	shf.l.wrap.b32 	%r4781, %r4775, %r4776, 25;
	shf.l.wrap.b32 	%r4782, %r4776, %r4775, 25;
	mov.b64 	%rd7455, {%r4782, %r4781};
	xor.b64  	%rd7456, %rd7454, %rd7455;
	and.b64  	%rd7457, %rd7435, %rd7408;
	xor.b64  	%rd7458, %rd7435, %rd7408;
	and.b64  	%rd7459, %rd7458, %rd7381;
	or.b64  	%rd7460, %rd7459, %rd7457;
	add.s64 	%rd7461, %rd7450, %rd7460;
	add.s64 	%rd7462, %rd7461, %rd7456;
	add.s32 	%r4783, %r12620, 7;
	mul.wide.s32 	%rd7463, %r4783, 8;
	add.s64 	%rd7464, %rd18242, %rd7463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4784,%dummy}, %rd7451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd7451;
	}
	shf.r.wrap.b32 	%r4786, %r4785, %r4784, 14;
	shf.r.wrap.b32 	%r4787, %r4784, %r4785, 14;
	mov.b64 	%rd7465, {%r4787, %r4786};
	shf.r.wrap.b32 	%r4788, %r4785, %r4784, 18;
	shf.r.wrap.b32 	%r4789, %r4784, %r4785, 18;
	mov.b64 	%rd7466, {%r4789, %r4788};
	xor.b64  	%rd7467, %rd7466, %rd7465;
	shf.l.wrap.b32 	%r4790, %r4784, %r4785, 23;
	shf.l.wrap.b32 	%r4791, %r4785, %r4784, 23;
	mov.b64 	%rd7468, {%r4791, %r4790};
	xor.b64  	%rd7469, %rd7467, %rd7468;
	xor.b64  	%rd7470, %rd7424, %rd7397;
	and.b64  	%rd7471, %rd7451, %rd7470;
	xor.b64  	%rd7472, %rd7471, %rd7397;
	add.s64 	%rd7473, %rd7370, %rd18433;
	ld.const.u64 	%rd7474, [%rd7464];
	add.s64 	%rd7475, %rd7473, %rd7474;
	add.s64 	%rd7476, %rd7475, %rd7472;
	add.s64 	%rd7477, %rd7476, %rd7469;
	add.s64 	%rd7478, %rd7477, %rd7381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4792,%dummy}, %rd7462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4793}, %rd7462;
	}
	shf.r.wrap.b32 	%r4794, %r4793, %r4792, 28;
	shf.r.wrap.b32 	%r4795, %r4792, %r4793, 28;
	mov.b64 	%rd7479, {%r4795, %r4794};
	shf.l.wrap.b32 	%r4796, %r4792, %r4793, 30;
	shf.l.wrap.b32 	%r4797, %r4793, %r4792, 30;
	mov.b64 	%rd7480, {%r4797, %r4796};
	xor.b64  	%rd7481, %rd7480, %rd7479;
	shf.l.wrap.b32 	%r4798, %r4792, %r4793, 25;
	shf.l.wrap.b32 	%r4799, %r4793, %r4792, 25;
	mov.b64 	%rd7482, {%r4799, %r4798};
	xor.b64  	%rd7483, %rd7481, %rd7482;
	and.b64  	%rd7484, %rd7462, %rd7435;
	xor.b64  	%rd7485, %rd7462, %rd7435;
	and.b64  	%rd7486, %rd7485, %rd7408;
	or.b64  	%rd7487, %rd7486, %rd7484;
	add.s64 	%rd7488, %rd7477, %rd7487;
	add.s64 	%rd7489, %rd7488, %rd7483;
	add.s32 	%r4800, %r12620, 8;
	mul.wide.s32 	%rd7490, %r4800, 8;
	add.s64 	%rd7491, %rd18242, %rd7490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4801,%dummy}, %rd7478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4802}, %rd7478;
	}
	shf.r.wrap.b32 	%r4803, %r4802, %r4801, 14;
	shf.r.wrap.b32 	%r4804, %r4801, %r4802, 14;
	mov.b64 	%rd7492, {%r4804, %r4803};
	shf.r.wrap.b32 	%r4805, %r4802, %r4801, 18;
	shf.r.wrap.b32 	%r4806, %r4801, %r4802, 18;
	mov.b64 	%rd7493, {%r4806, %r4805};
	xor.b64  	%rd7494, %rd7493, %rd7492;
	shf.l.wrap.b32 	%r4807, %r4801, %r4802, 23;
	shf.l.wrap.b32 	%r4808, %r4802, %r4801, 23;
	mov.b64 	%rd7495, {%r4808, %r4807};
	xor.b64  	%rd7496, %rd7494, %rd7495;
	xor.b64  	%rd7497, %rd7451, %rd7424;
	and.b64  	%rd7498, %rd7478, %rd7497;
	xor.b64  	%rd7499, %rd7498, %rd7424;
	add.s64 	%rd7500, %rd7397, %rd18417;
	ld.const.u64 	%rd7501, [%rd7491];
	add.s64 	%rd7502, %rd7500, %rd7501;
	add.s64 	%rd7503, %rd7502, %rd7499;
	add.s64 	%rd7504, %rd7503, %rd7496;
	add.s64 	%rd7505, %rd7504, %rd7408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd7489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd7489;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 28;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 28;
	mov.b64 	%rd7506, {%r4812, %r4811};
	shf.l.wrap.b32 	%r4813, %r4809, %r4810, 30;
	shf.l.wrap.b32 	%r4814, %r4810, %r4809, 30;
	mov.b64 	%rd7507, {%r4814, %r4813};
	xor.b64  	%rd7508, %rd7507, %rd7506;
	shf.l.wrap.b32 	%r4815, %r4809, %r4810, 25;
	shf.l.wrap.b32 	%r4816, %r4810, %r4809, 25;
	mov.b64 	%rd7509, {%r4816, %r4815};
	xor.b64  	%rd7510, %rd7508, %rd7509;
	and.b64  	%rd7511, %rd7489, %rd7462;
	xor.b64  	%rd7512, %rd7489, %rd7462;
	and.b64  	%rd7513, %rd7512, %rd7435;
	or.b64  	%rd7514, %rd7513, %rd7511;
	add.s64 	%rd7515, %rd7504, %rd7514;
	add.s64 	%rd7516, %rd7515, %rd7510;
	add.s32 	%r4817, %r12620, 9;
	mul.wide.s32 	%rd7517, %r4817, 8;
	add.s64 	%rd7518, %rd18242, %rd7517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4818,%dummy}, %rd7505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4819}, %rd7505;
	}
	shf.r.wrap.b32 	%r4820, %r4819, %r4818, 14;
	shf.r.wrap.b32 	%r4821, %r4818, %r4819, 14;
	mov.b64 	%rd7519, {%r4821, %r4820};
	shf.r.wrap.b32 	%r4822, %r4819, %r4818, 18;
	shf.r.wrap.b32 	%r4823, %r4818, %r4819, 18;
	mov.b64 	%rd7520, {%r4823, %r4822};
	xor.b64  	%rd7521, %rd7520, %rd7519;
	shf.l.wrap.b32 	%r4824, %r4818, %r4819, 23;
	shf.l.wrap.b32 	%r4825, %r4819, %r4818, 23;
	mov.b64 	%rd7522, {%r4825, %r4824};
	xor.b64  	%rd7523, %rd7521, %rd7522;
	xor.b64  	%rd7524, %rd7478, %rd7451;
	and.b64  	%rd7525, %rd7505, %rd7524;
	xor.b64  	%rd7526, %rd7525, %rd7451;
	add.s64 	%rd7527, %rd7424, %rd18416;
	ld.const.u64 	%rd7528, [%rd7518];
	add.s64 	%rd7529, %rd7527, %rd7528;
	add.s64 	%rd7530, %rd7529, %rd7526;
	add.s64 	%rd7531, %rd7530, %rd7523;
	add.s64 	%rd7532, %rd7531, %rd7435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4826,%dummy}, %rd7516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4827}, %rd7516;
	}
	shf.r.wrap.b32 	%r4828, %r4827, %r4826, 28;
	shf.r.wrap.b32 	%r4829, %r4826, %r4827, 28;
	mov.b64 	%rd7533, {%r4829, %r4828};
	shf.l.wrap.b32 	%r4830, %r4826, %r4827, 30;
	shf.l.wrap.b32 	%r4831, %r4827, %r4826, 30;
	mov.b64 	%rd7534, {%r4831, %r4830};
	xor.b64  	%rd7535, %rd7534, %rd7533;
	shf.l.wrap.b32 	%r4832, %r4826, %r4827, 25;
	shf.l.wrap.b32 	%r4833, %r4827, %r4826, 25;
	mov.b64 	%rd7536, {%r4833, %r4832};
	xor.b64  	%rd7537, %rd7535, %rd7536;
	and.b64  	%rd7538, %rd7516, %rd7489;
	xor.b64  	%rd7539, %rd7516, %rd7489;
	and.b64  	%rd7540, %rd7539, %rd7462;
	or.b64  	%rd7541, %rd7540, %rd7538;
	add.s64 	%rd7542, %rd7531, %rd7541;
	add.s64 	%rd7543, %rd7542, %rd7537;
	add.s32 	%r4834, %r12620, 10;
	mul.wide.s32 	%rd7544, %r4834, 8;
	add.s64 	%rd7545, %rd18242, %rd7544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4835,%dummy}, %rd7532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4836}, %rd7532;
	}
	shf.r.wrap.b32 	%r4837, %r4836, %r4835, 14;
	shf.r.wrap.b32 	%r4838, %r4835, %r4836, 14;
	mov.b64 	%rd7546, {%r4838, %r4837};
	shf.r.wrap.b32 	%r4839, %r4836, %r4835, 18;
	shf.r.wrap.b32 	%r4840, %r4835, %r4836, 18;
	mov.b64 	%rd7547, {%r4840, %r4839};
	xor.b64  	%rd7548, %rd7547, %rd7546;
	shf.l.wrap.b32 	%r4841, %r4835, %r4836, 23;
	shf.l.wrap.b32 	%r4842, %r4836, %r4835, 23;
	mov.b64 	%rd7549, {%r4842, %r4841};
	xor.b64  	%rd7550, %rd7548, %rd7549;
	xor.b64  	%rd7551, %rd7505, %rd7478;
	and.b64  	%rd7552, %rd7532, %rd7551;
	xor.b64  	%rd7553, %rd7552, %rd7478;
	add.s64 	%rd7554, %rd7451, %rd18415;
	ld.const.u64 	%rd7555, [%rd7545];
	add.s64 	%rd7556, %rd7554, %rd7555;
	add.s64 	%rd7557, %rd7556, %rd7553;
	add.s64 	%rd7558, %rd7557, %rd7550;
	add.s64 	%rd7559, %rd7558, %rd7462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4843,%dummy}, %rd7543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4844}, %rd7543;
	}
	shf.r.wrap.b32 	%r4845, %r4844, %r4843, 28;
	shf.r.wrap.b32 	%r4846, %r4843, %r4844, 28;
	mov.b64 	%rd7560, {%r4846, %r4845};
	shf.l.wrap.b32 	%r4847, %r4843, %r4844, 30;
	shf.l.wrap.b32 	%r4848, %r4844, %r4843, 30;
	mov.b64 	%rd7561, {%r4848, %r4847};
	xor.b64  	%rd7562, %rd7561, %rd7560;
	shf.l.wrap.b32 	%r4849, %r4843, %r4844, 25;
	shf.l.wrap.b32 	%r4850, %r4844, %r4843, 25;
	mov.b64 	%rd7563, {%r4850, %r4849};
	xor.b64  	%rd7564, %rd7562, %rd7563;
	and.b64  	%rd7565, %rd7543, %rd7516;
	xor.b64  	%rd7566, %rd7543, %rd7516;
	and.b64  	%rd7567, %rd7566, %rd7489;
	or.b64  	%rd7568, %rd7567, %rd7565;
	add.s64 	%rd7569, %rd7558, %rd7568;
	add.s64 	%rd7570, %rd7569, %rd7564;
	add.s32 	%r4851, %r12620, 11;
	mul.wide.s32 	%rd7571, %r4851, 8;
	add.s64 	%rd7572, %rd18242, %rd7571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4852,%dummy}, %rd7559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4853}, %rd7559;
	}
	shf.r.wrap.b32 	%r4854, %r4853, %r4852, 14;
	shf.r.wrap.b32 	%r4855, %r4852, %r4853, 14;
	mov.b64 	%rd7573, {%r4855, %r4854};
	shf.r.wrap.b32 	%r4856, %r4853, %r4852, 18;
	shf.r.wrap.b32 	%r4857, %r4852, %r4853, 18;
	mov.b64 	%rd7574, {%r4857, %r4856};
	xor.b64  	%rd7575, %rd7574, %rd7573;
	shf.l.wrap.b32 	%r4858, %r4852, %r4853, 23;
	shf.l.wrap.b32 	%r4859, %r4853, %r4852, 23;
	mov.b64 	%rd7576, {%r4859, %r4858};
	xor.b64  	%rd7577, %rd7575, %rd7576;
	xor.b64  	%rd7578, %rd7532, %rd7505;
	and.b64  	%rd7579, %rd7559, %rd7578;
	xor.b64  	%rd7580, %rd7579, %rd7505;
	add.s64 	%rd7581, %rd7478, %rd18414;
	ld.const.u64 	%rd7582, [%rd7572];
	add.s64 	%rd7583, %rd7581, %rd7582;
	add.s64 	%rd7584, %rd7583, %rd7580;
	add.s64 	%rd7585, %rd7584, %rd7577;
	add.s64 	%rd7586, %rd7585, %rd7489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4860,%dummy}, %rd7570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4861}, %rd7570;
	}
	shf.r.wrap.b32 	%r4862, %r4861, %r4860, 28;
	shf.r.wrap.b32 	%r4863, %r4860, %r4861, 28;
	mov.b64 	%rd7587, {%r4863, %r4862};
	shf.l.wrap.b32 	%r4864, %r4860, %r4861, 30;
	shf.l.wrap.b32 	%r4865, %r4861, %r4860, 30;
	mov.b64 	%rd7588, {%r4865, %r4864};
	xor.b64  	%rd7589, %rd7588, %rd7587;
	shf.l.wrap.b32 	%r4866, %r4860, %r4861, 25;
	shf.l.wrap.b32 	%r4867, %r4861, %r4860, 25;
	mov.b64 	%rd7590, {%r4867, %r4866};
	xor.b64  	%rd7591, %rd7589, %rd7590;
	and.b64  	%rd7592, %rd7570, %rd7543;
	xor.b64  	%rd7593, %rd7570, %rd7543;
	and.b64  	%rd7594, %rd7593, %rd7516;
	or.b64  	%rd7595, %rd7594, %rd7592;
	add.s64 	%rd7596, %rd7585, %rd7595;
	add.s64 	%rd7597, %rd7596, %rd7591;
	add.s32 	%r4868, %r12620, 12;
	mul.wide.s32 	%rd7598, %r4868, 8;
	add.s64 	%rd7599, %rd18242, %rd7598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4869,%dummy}, %rd7586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4870}, %rd7586;
	}
	shf.r.wrap.b32 	%r4871, %r4870, %r4869, 14;
	shf.r.wrap.b32 	%r4872, %r4869, %r4870, 14;
	mov.b64 	%rd7600, {%r4872, %r4871};
	shf.r.wrap.b32 	%r4873, %r4870, %r4869, 18;
	shf.r.wrap.b32 	%r4874, %r4869, %r4870, 18;
	mov.b64 	%rd7601, {%r4874, %r4873};
	xor.b64  	%rd7602, %rd7601, %rd7600;
	shf.l.wrap.b32 	%r4875, %r4869, %r4870, 23;
	shf.l.wrap.b32 	%r4876, %r4870, %r4869, 23;
	mov.b64 	%rd7603, {%r4876, %r4875};
	xor.b64  	%rd7604, %rd7602, %rd7603;
	xor.b64  	%rd7605, %rd7559, %rd7532;
	and.b64  	%rd7606, %rd7586, %rd7605;
	xor.b64  	%rd7607, %rd7606, %rd7532;
	add.s64 	%rd7608, %rd7505, %rd18413;
	ld.const.u64 	%rd7609, [%rd7599];
	add.s64 	%rd7610, %rd7608, %rd7609;
	add.s64 	%rd7611, %rd7610, %rd7607;
	add.s64 	%rd7612, %rd7611, %rd7604;
	add.s64 	%rd18425, %rd7612, %rd7516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4877,%dummy}, %rd7597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4878}, %rd7597;
	}
	shf.r.wrap.b32 	%r4879, %r4878, %r4877, 28;
	shf.r.wrap.b32 	%r4880, %r4877, %r4878, 28;
	mov.b64 	%rd7613, {%r4880, %r4879};
	shf.l.wrap.b32 	%r4881, %r4877, %r4878, 30;
	shf.l.wrap.b32 	%r4882, %r4878, %r4877, 30;
	mov.b64 	%rd7614, {%r4882, %r4881};
	xor.b64  	%rd7615, %rd7614, %rd7613;
	shf.l.wrap.b32 	%r4883, %r4877, %r4878, 25;
	shf.l.wrap.b32 	%r4884, %r4878, %r4877, 25;
	mov.b64 	%rd7616, {%r4884, %r4883};
	xor.b64  	%rd7617, %rd7615, %rd7616;
	and.b64  	%rd7618, %rd7597, %rd7570;
	xor.b64  	%rd7619, %rd7597, %rd7570;
	and.b64  	%rd7620, %rd7619, %rd7543;
	or.b64  	%rd7621, %rd7620, %rd7618;
	add.s64 	%rd7622, %rd7612, %rd7621;
	add.s64 	%rd18421, %rd7622, %rd7617;
	add.s32 	%r4885, %r12620, 13;
	mul.wide.s32 	%rd7623, %r4885, 8;
	add.s64 	%rd7624, %rd18242, %rd7623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4886,%dummy}, %rd18425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4887}, %rd18425;
	}
	shf.r.wrap.b32 	%r4888, %r4887, %r4886, 14;
	shf.r.wrap.b32 	%r4889, %r4886, %r4887, 14;
	mov.b64 	%rd7625, {%r4889, %r4888};
	shf.r.wrap.b32 	%r4890, %r4887, %r4886, 18;
	shf.r.wrap.b32 	%r4891, %r4886, %r4887, 18;
	mov.b64 	%rd7626, {%r4891, %r4890};
	xor.b64  	%rd7627, %rd7626, %rd7625;
	shf.l.wrap.b32 	%r4892, %r4886, %r4887, 23;
	shf.l.wrap.b32 	%r4893, %r4887, %r4886, 23;
	mov.b64 	%rd7628, {%r4893, %r4892};
	xor.b64  	%rd7629, %rd7627, %rd7628;
	xor.b64  	%rd7630, %rd7586, %rd7559;
	and.b64  	%rd7631, %rd18425, %rd7630;
	xor.b64  	%rd7632, %rd7631, %rd7559;
	add.s64 	%rd7633, %rd7532, %rd18412;
	ld.const.u64 	%rd7634, [%rd7624];
	add.s64 	%rd7635, %rd7633, %rd7634;
	add.s64 	%rd7636, %rd7635, %rd7632;
	add.s64 	%rd7637, %rd7636, %rd7629;
	add.s64 	%rd18424, %rd7637, %rd7543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4894,%dummy}, %rd18421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4895}, %rd18421;
	}
	shf.r.wrap.b32 	%r4896, %r4895, %r4894, 28;
	shf.r.wrap.b32 	%r4897, %r4894, %r4895, 28;
	mov.b64 	%rd7638, {%r4897, %r4896};
	shf.l.wrap.b32 	%r4898, %r4894, %r4895, 30;
	shf.l.wrap.b32 	%r4899, %r4895, %r4894, 30;
	mov.b64 	%rd7639, {%r4899, %r4898};
	xor.b64  	%rd7640, %rd7639, %rd7638;
	shf.l.wrap.b32 	%r4900, %r4894, %r4895, 25;
	shf.l.wrap.b32 	%r4901, %r4895, %r4894, 25;
	mov.b64 	%rd7641, {%r4901, %r4900};
	xor.b64  	%rd7642, %rd7640, %rd7641;
	and.b64  	%rd7643, %rd18421, %rd7597;
	xor.b64  	%rd7644, %rd18421, %rd7597;
	and.b64  	%rd7645, %rd7644, %rd7570;
	or.b64  	%rd7646, %rd7645, %rd7643;
	add.s64 	%rd7647, %rd7637, %rd7646;
	add.s64 	%rd18420, %rd7647, %rd7642;
	add.s32 	%r4902, %r12620, 14;
	mul.wide.s32 	%rd7648, %r4902, 8;
	add.s64 	%rd7649, %rd18242, %rd7648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4903,%dummy}, %rd18424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4904}, %rd18424;
	}
	shf.r.wrap.b32 	%r4905, %r4904, %r4903, 14;
	shf.r.wrap.b32 	%r4906, %r4903, %r4904, 14;
	mov.b64 	%rd7650, {%r4906, %r4905};
	shf.r.wrap.b32 	%r4907, %r4904, %r4903, 18;
	shf.r.wrap.b32 	%r4908, %r4903, %r4904, 18;
	mov.b64 	%rd7651, {%r4908, %r4907};
	xor.b64  	%rd7652, %rd7651, %rd7650;
	shf.l.wrap.b32 	%r4909, %r4903, %r4904, 23;
	shf.l.wrap.b32 	%r4910, %r4904, %r4903, 23;
	mov.b64 	%rd7653, {%r4910, %r4909};
	xor.b64  	%rd7654, %rd7652, %rd7653;
	xor.b64  	%rd7655, %rd18425, %rd7586;
	and.b64  	%rd7656, %rd18424, %rd7655;
	xor.b64  	%rd7657, %rd7656, %rd7586;
	add.s64 	%rd7658, %rd7559, %rd18411;
	ld.const.u64 	%rd7659, [%rd7649];
	add.s64 	%rd7660, %rd7658, %rd7659;
	add.s64 	%rd7661, %rd7660, %rd7657;
	add.s64 	%rd7662, %rd7661, %rd7654;
	add.s64 	%rd18423, %rd7662, %rd7570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4911,%dummy}, %rd18420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4912}, %rd18420;
	}
	shf.r.wrap.b32 	%r4913, %r4912, %r4911, 28;
	shf.r.wrap.b32 	%r4914, %r4911, %r4912, 28;
	mov.b64 	%rd7663, {%r4914, %r4913};
	shf.l.wrap.b32 	%r4915, %r4911, %r4912, 30;
	shf.l.wrap.b32 	%r4916, %r4912, %r4911, 30;
	mov.b64 	%rd7664, {%r4916, %r4915};
	xor.b64  	%rd7665, %rd7664, %rd7663;
	shf.l.wrap.b32 	%r4917, %r4911, %r4912, 25;
	shf.l.wrap.b32 	%r4918, %r4912, %r4911, 25;
	mov.b64 	%rd7666, {%r4918, %r4917};
	xor.b64  	%rd7667, %rd7665, %rd7666;
	and.b64  	%rd7668, %rd18420, %rd18421;
	xor.b64  	%rd7669, %rd18420, %rd18421;
	and.b64  	%rd7670, %rd7669, %rd7597;
	or.b64  	%rd7671, %rd7670, %rd7668;
	add.s64 	%rd7672, %rd7662, %rd7671;
	add.s64 	%rd18419, %rd7672, %rd7667;
	add.s32 	%r4919, %r12620, 15;
	mul.wide.s32 	%rd7673, %r4919, 8;
	add.s64 	%rd7674, %rd18242, %rd7673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd18423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd18423;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 14;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 14;
	mov.b64 	%rd7675, {%r4923, %r4922};
	shf.r.wrap.b32 	%r4924, %r4921, %r4920, 18;
	shf.r.wrap.b32 	%r4925, %r4920, %r4921, 18;
	mov.b64 	%rd7676, {%r4925, %r4924};
	xor.b64  	%rd7677, %rd7676, %rd7675;
	shf.l.wrap.b32 	%r4926, %r4920, %r4921, 23;
	shf.l.wrap.b32 	%r4927, %r4921, %r4920, 23;
	mov.b64 	%rd7678, {%r4927, %r4926};
	xor.b64  	%rd7679, %rd7677, %rd7678;
	xor.b64  	%rd7680, %rd18424, %rd18425;
	and.b64  	%rd7681, %rd18423, %rd7680;
	xor.b64  	%rd7682, %rd7681, %rd18425;
	add.s64 	%rd7683, %rd7586, %rd18410;
	ld.const.u64 	%rd7684, [%rd7674];
	add.s64 	%rd7685, %rd7683, %rd7684;
	add.s64 	%rd7686, %rd7685, %rd7682;
	add.s64 	%rd7687, %rd7686, %rd7679;
	add.s64 	%rd18422, %rd7687, %rd7597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd18419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd18419;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 28;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 28;
	mov.b64 	%rd7688, {%r4931, %r4930};
	shf.l.wrap.b32 	%r4932, %r4928, %r4929, 30;
	shf.l.wrap.b32 	%r4933, %r4929, %r4928, 30;
	mov.b64 	%rd7689, {%r4933, %r4932};
	xor.b64  	%rd7690, %rd7689, %rd7688;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 25;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 25;
	mov.b64 	%rd7691, {%r4935, %r4934};
	xor.b64  	%rd7692, %rd7690, %rd7691;
	and.b64  	%rd7693, %rd18419, %rd18420;
	xor.b64  	%rd7694, %rd18419, %rd18420;
	and.b64  	%rd7695, %rd7694, %rd18421;
	or.b64  	%rd7696, %rd7695, %rd7693;
	add.s64 	%rd7697, %rd7687, %rd7696;
	add.s64 	%rd18418, %rd7697, %rd7692;
	add.s32 	%r12620, %r12620, 16;
	setp.lt.s32	%p69, %r12620, 80;
	@%p69 bra 	BB0_113;

	and.b32  	%r12543, %r153, 127;
	sub.s32 	%r12542, %r1990, %r12543;
	add.s64 	%rd7698, %rd496, %rd18418;
	st.local.u64 	[%rd1], %rd7698;
	add.s64 	%rd7699, %rd497, %rd18419;
	st.local.u64 	[%rd1+8], %rd7699;
	add.s64 	%rd7700, %rd498, %rd18420;
	st.local.u64 	[%rd1+16], %rd7700;
	add.s64 	%rd7701, %rd495, %rd18421;
	st.local.u64 	[%rd1+24], %rd7701;
	add.s64 	%rd7702, %rd490, %rd18422;
	st.local.u64 	[%rd1+32], %rd7702;
	add.s64 	%rd7703, %rd492, %rd18423;
	st.local.u64 	[%rd1+40], %rd7703;
	add.s64 	%rd7704, %rd491, %rd18424;
	st.local.u64 	[%rd1+48], %rd7704;
	add.s64 	%rd7705, %rd493, %rd18425;
	st.local.u64 	[%rd1+56], %rd7705;
	sub.s32 	%r175, %r2, %r12542;
	setp.lt.s32	%p70, %r175, 1;
	@%p70 bra 	BB0_120;

	and.b32  	%r4937, %r153, 127;
	sub.s32 	%r12621, %r1990, %r4937;
	mov.u32 	%r12622, 0;

BB0_116:
	xor.b32  	%r4939, %r12621, 7;
	cvt.s64.s32	%rd7706, %r4939;
	add.s64 	%rd7707, %rd349, %rd7706;
	ld.local.u8 	%rs74, [%rd7707];
	xor.b32  	%r4940, %r12622, 7;
	cvt.s64.s32	%rd7708, %r4940;
	add.s64 	%rd7709, %rd90, %rd7708;
	st.local.u8 	[%rd7709], %rs74;
	add.s32 	%r12621, %r12621, 1;
	add.s32 	%r12622, %r12622, 1;
	setp.lt.s32	%p71, %r12622, %r175;
	@%p71 bra 	BB0_116;

BB0_120:
	setp.eq.s32	%p167, %r2, 0;
	@%p167 bra 	BB0_162;

	add.s64 	%rd572, %rd1460, 7;
	add.s64 	%rd574, %rd349, 4;
	add.s64 	%rd575, %rd349, 2;
	add.s64 	%rd576, %rd349, 1;
	add.s64 	%rd577, %rd349, 20;
	add.s64 	%rd578, %rd349, 36;
	add.s64 	%rd579, %rd349, 52;
	add.s64 	%rd580, %rd349, 60;
	add.s64 	%rd581, %rd90, 7;
	add.s64 	%rd582, %rd349, 7;
	cvt.u16.u64	%rs1, %rd398;
	cvt.u16.u64	%rs2, %rd399;
	cvt.u16.u64	%rs3, %rd400;
	cvt.u16.u64	%rs4, %rd401;
	cvt.u16.u64	%rs5, %rd402;
	cvt.u16.u64	%rs6, %rd403;
	cvt.u16.u64	%rs7, %rd404;
	cvt.u16.u64	%rs8, %rd405;
	mov.u32 	%r12625, %r2;

BB0_122:
	and.b32  	%r4944, %r12625, 1;
	setp.eq.b32	%p75, %r4944, 1;
	ld.local.u32 	%r186, [%rd1+192];
	and.b32  	%r187, %r186, 127;
	@!%p75 bra 	BB0_145;
	bra.uni 	BB0_123;

BB0_145:
	add.s32 	%r5842, %r186, %r2;
	st.local.u32 	[%rd1+192], %r5842;
	add.s32 	%r5843, %r187, %r2;
	setp.lt.s32	%p89, %r5843, 128;
	mov.u32 	%r12651, 0;
	@%p89 bra 	BB0_160;
	bra.uni 	BB0_146;

BB0_160:
	xor.b32  	%r6588, %r12651, 7;
	cvt.s64.s32	%rd9929, %r6588;
	add.s64 	%rd9930, %rd1460, %rd9929;
	ld.local.u8 	%rs216, [%rd9930];
	xor.b32  	%r6589, %r187, 7;
	cvt.s64.s32	%rd9931, %r6589;
	add.s64 	%rd9932, %rd90, %rd9931;
	st.local.u8 	[%rd9932], %rs216;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12651, %r12651, 1;
	setp.lt.s32	%p98, %r12651, %r2;
	@%p98 bra 	BB0_160;
	bra.uni 	BB0_161;

BB0_123:
	add.s32 	%r4945, %r186, 64;
	st.local.u32 	[%rd1+192], %r4945;
	add.s32 	%r4946, %r187, 64;
	setp.lt.u32	%p76, %r4946, 128;
	@%p76 bra 	BB0_144;
	bra.uni 	BB0_124;

BB0_144:
	ld.local.v4.u8 	{%rs90, %rs91, %rs92, %rs93}, [%rd574];
	xor.b32  	%r5714, %r187, 7;
	cvt.u64.u32	%rd8770, %r5714;
	add.s64 	%rd8771, %rd90, %rd8770;
	st.local.u8 	[%rd8771], %rs93;
	add.s32 	%r5715, %r187, 1;
	xor.b32  	%r5716, %r5715, 7;
	cvt.u64.u32	%rd8772, %r5716;
	add.s64 	%rd8773, %rd90, %rd8772;
	st.local.u8 	[%rd8773], %rs92;
	add.s32 	%r5717, %r187, 2;
	xor.b32  	%r5718, %r5717, 7;
	cvt.u64.u32	%rd8774, %r5718;
	add.s64 	%rd8775, %rd90, %rd8774;
	st.local.u8 	[%rd8775], %rs91;
	add.s32 	%r5719, %r187, 3;
	xor.b32  	%r5720, %r5719, 7;
	cvt.u64.u32	%rd8776, %r5720;
	add.s64 	%rd8777, %rd90, %rd8776;
	st.local.u8 	[%rd8777], %rs90;
	ld.local.v2.u8 	{%rs98, %rs99}, [%rd575];
	add.s32 	%r5721, %r187, 4;
	xor.b32  	%r5722, %r5721, 7;
	cvt.u64.u32	%rd8778, %r5722;
	add.s64 	%rd8779, %rd90, %rd8778;
	st.local.u8 	[%rd8779], %rs99;
	add.s32 	%r5723, %r187, 5;
	xor.b32  	%r5724, %r5723, 7;
	cvt.u64.u32	%rd8780, %r5724;
	add.s64 	%rd8781, %rd90, %rd8780;
	st.local.u8 	[%rd8781], %rs98;
	ld.local.u8 	%rs102, [%rd576];
	add.s32 	%r5725, %r187, 6;
	xor.b32  	%r5726, %r5725, 7;
	cvt.u64.u32	%rd8782, %r5726;
	add.s64 	%rd8783, %rd90, %rd8782;
	st.local.u8 	[%rd8783], %rs102;
	add.s32 	%r5727, %r187, 7;
	xor.b32  	%r5728, %r5727, 7;
	cvt.u64.u32	%rd8784, %r5728;
	add.s64 	%rd8785, %rd90, %rd8784;
	st.local.u8 	[%rd8785], %rs1;
	ld.local.v4.u8 	{%rs103, %rs104, %rs105, %rs106}, [%rd349+12];
	ld.local.v4.u8 	{%rs107, %rs108, %rs109, %rs110}, [%rd349+8];
	add.s32 	%r5729, %r187, 8;
	xor.b32  	%r5730, %r5729, 7;
	cvt.u64.u32	%rd8786, %r5730;
	add.s64 	%rd8787, %rd90, %rd8786;
	st.local.u8 	[%rd8787], %rs106;
	add.s32 	%r5731, %r187, 9;
	xor.b32  	%r5732, %r5731, 7;
	cvt.u64.u32	%rd8788, %r5732;
	add.s64 	%rd8789, %rd90, %rd8788;
	st.local.u8 	[%rd8789], %rs105;
	add.s32 	%r5733, %r187, 10;
	xor.b32  	%r5734, %r5733, 7;
	cvt.u64.u32	%rd8790, %r5734;
	add.s64 	%rd8791, %rd90, %rd8790;
	st.local.u8 	[%rd8791], %rs104;
	add.s32 	%r5735, %r187, 11;
	xor.b32  	%r5736, %r5735, 7;
	cvt.u64.u32	%rd8792, %r5736;
	add.s64 	%rd8793, %rd90, %rd8792;
	st.local.u8 	[%rd8793], %rs103;
	add.s32 	%r5737, %r187, 12;
	xor.b32  	%r5738, %r5737, 7;
	cvt.u64.u32	%rd8794, %r5738;
	add.s64 	%rd8795, %rd90, %rd8794;
	st.local.u8 	[%rd8795], %rs110;
	add.s32 	%r5739, %r187, 13;
	xor.b32  	%r5740, %r5739, 7;
	cvt.u64.u32	%rd8796, %r5740;
	add.s64 	%rd8797, %rd90, %rd8796;
	st.local.u8 	[%rd8797], %rs109;
	add.s32 	%r5741, %r187, 14;
	xor.b32  	%r5742, %r5741, 7;
	cvt.u64.u32	%rd8798, %r5742;
	add.s64 	%rd8799, %rd90, %rd8798;
	st.local.u8 	[%rd8799], %rs108;
	add.s32 	%r5743, %r187, 15;
	xor.b32  	%r5744, %r5743, 7;
	cvt.u64.u32	%rd8800, %r5744;
	add.s64 	%rd8801, %rd90, %rd8800;
	st.local.u8 	[%rd8801], %rs2;
	ld.local.v4.u8 	{%rs118, %rs119, %rs120, %rs121}, [%rd577];
	add.s32 	%r5745, %r187, 16;
	xor.b32  	%r5746, %r5745, 7;
	cvt.u64.u32	%rd8802, %r5746;
	add.s64 	%rd8803, %rd90, %rd8802;
	st.local.u8 	[%rd8803], %rs121;
	add.s32 	%r5747, %r187, 17;
	xor.b32  	%r5748, %r5747, 7;
	cvt.u64.u32	%rd8804, %r5748;
	add.s64 	%rd8805, %rd90, %rd8804;
	st.local.u8 	[%rd8805], %rs120;
	add.s32 	%r5749, %r187, 18;
	xor.b32  	%r5750, %r5749, 7;
	cvt.u64.u32	%rd8806, %r5750;
	add.s64 	%rd8807, %rd90, %rd8806;
	st.local.u8 	[%rd8807], %rs119;
	add.s32 	%r5751, %r187, 19;
	xor.b32  	%r5752, %r5751, 7;
	cvt.u64.u32	%rd8808, %r5752;
	add.s64 	%rd8809, %rd90, %rd8808;
	st.local.u8 	[%rd8809], %rs118;
	ld.local.v4.u8 	{%rs126, %rs127, %rs128, %rs129}, [%rd349+16];
	add.s32 	%r5753, %r187, 20;
	xor.b32  	%r5754, %r5753, 7;
	cvt.u64.u32	%rd8810, %r5754;
	add.s64 	%rd8811, %rd90, %rd8810;
	st.local.u8 	[%rd8811], %rs129;
	add.s32 	%r5755, %r187, 21;
	xor.b32  	%r5756, %r5755, 7;
	cvt.u64.u32	%rd8812, %r5756;
	add.s64 	%rd8813, %rd90, %rd8812;
	st.local.u8 	[%rd8813], %rs128;
	add.s32 	%r5757, %r187, 22;
	xor.b32  	%r5758, %r5757, 7;
	cvt.u64.u32	%rd8814, %r5758;
	add.s64 	%rd8815, %rd90, %rd8814;
	st.local.u8 	[%rd8815], %rs127;
	add.s32 	%r5759, %r187, 23;
	xor.b32  	%r5760, %r5759, 7;
	cvt.u64.u32	%rd8816, %r5760;
	add.s64 	%rd8817, %rd90, %rd8816;
	st.local.u8 	[%rd8817], %rs3;
	ld.local.v4.u8 	{%rs133, %rs134, %rs135, %rs136}, [%rd349+28];
	ld.local.v4.u8 	{%rs137, %rs138, %rs139, %rs140}, [%rd349+24];
	add.s32 	%r5761, %r187, 24;
	xor.b32  	%r5762, %r5761, 7;
	cvt.u64.u32	%rd8818, %r5762;
	add.s64 	%rd8819, %rd90, %rd8818;
	st.local.u8 	[%rd8819], %rs136;
	add.s32 	%r5763, %r187, 25;
	xor.b32  	%r5764, %r5763, 7;
	cvt.u64.u32	%rd8820, %r5764;
	add.s64 	%rd8821, %rd90, %rd8820;
	st.local.u8 	[%rd8821], %rs135;
	add.s32 	%r5765, %r187, 26;
	xor.b32  	%r5766, %r5765, 7;
	cvt.u64.u32	%rd8822, %r5766;
	add.s64 	%rd8823, %rd90, %rd8822;
	st.local.u8 	[%rd8823], %rs134;
	add.s32 	%r5767, %r187, 27;
	xor.b32  	%r5768, %r5767, 7;
	cvt.u64.u32	%rd8824, %r5768;
	add.s64 	%rd8825, %rd90, %rd8824;
	st.local.u8 	[%rd8825], %rs133;
	add.s32 	%r5769, %r187, 28;
	xor.b32  	%r5770, %r5769, 7;
	cvt.u64.u32	%rd8826, %r5770;
	add.s64 	%rd8827, %rd90, %rd8826;
	st.local.u8 	[%rd8827], %rs140;
	add.s32 	%r5771, %r187, 29;
	xor.b32  	%r5772, %r5771, 7;
	cvt.u64.u32	%rd8828, %r5772;
	add.s64 	%rd8829, %rd90, %rd8828;
	st.local.u8 	[%rd8829], %rs139;
	add.s32 	%r5773, %r187, 30;
	xor.b32  	%r5774, %r5773, 7;
	cvt.u64.u32	%rd8830, %r5774;
	add.s64 	%rd8831, %rd90, %rd8830;
	st.local.u8 	[%rd8831], %rs138;
	add.s32 	%r5775, %r187, 31;
	xor.b32  	%r5776, %r5775, 7;
	cvt.u64.u32	%rd8832, %r5776;
	add.s64 	%rd8833, %rd90, %rd8832;
	st.local.u8 	[%rd8833], %rs4;
	ld.local.v4.u8 	{%rs148, %rs149, %rs150, %rs151}, [%rd578];
	add.s32 	%r5777, %r187, 32;
	xor.b32  	%r5778, %r5777, 7;
	cvt.u64.u32	%rd8834, %r5778;
	add.s64 	%rd8835, %rd90, %rd8834;
	st.local.u8 	[%rd8835], %rs151;
	add.s32 	%r5779, %r187, 33;
	xor.b32  	%r5780, %r5779, 7;
	cvt.u64.u32	%rd8836, %r5780;
	add.s64 	%rd8837, %rd90, %rd8836;
	st.local.u8 	[%rd8837], %rs150;
	add.s32 	%r5781, %r187, 34;
	xor.b32  	%r5782, %r5781, 7;
	cvt.u64.u32	%rd8838, %r5782;
	add.s64 	%rd8839, %rd90, %rd8838;
	st.local.u8 	[%rd8839], %rs149;
	add.s32 	%r5783, %r187, 35;
	xor.b32  	%r5784, %r5783, 7;
	cvt.u64.u32	%rd8840, %r5784;
	add.s64 	%rd8841, %rd90, %rd8840;
	st.local.u8 	[%rd8841], %rs148;
	ld.local.v4.u8 	{%rs156, %rs157, %rs158, %rs159}, [%rd349+32];
	add.s32 	%r5785, %r187, 36;
	xor.b32  	%r5786, %r5785, 7;
	cvt.u64.u32	%rd8842, %r5786;
	add.s64 	%rd8843, %rd90, %rd8842;
	st.local.u8 	[%rd8843], %rs159;
	add.s32 	%r5787, %r187, 37;
	xor.b32  	%r5788, %r5787, 7;
	cvt.u64.u32	%rd8844, %r5788;
	add.s64 	%rd8845, %rd90, %rd8844;
	st.local.u8 	[%rd8845], %rs158;
	add.s32 	%r5789, %r187, 38;
	xor.b32  	%r5790, %r5789, 7;
	cvt.u64.u32	%rd8846, %r5790;
	add.s64 	%rd8847, %rd90, %rd8846;
	st.local.u8 	[%rd8847], %rs157;
	add.s32 	%r5791, %r187, 39;
	xor.b32  	%r5792, %r5791, 7;
	cvt.u64.u32	%rd8848, %r5792;
	add.s64 	%rd8849, %rd90, %rd8848;
	st.local.u8 	[%rd8849], %rs5;
	ld.local.v4.u8 	{%rs163, %rs164, %rs165, %rs166}, [%rd349+44];
	ld.local.v4.u8 	{%rs167, %rs168, %rs169, %rs170}, [%rd349+40];
	add.s32 	%r5793, %r187, 40;
	xor.b32  	%r5794, %r5793, 7;
	cvt.u64.u32	%rd8850, %r5794;
	add.s64 	%rd8851, %rd90, %rd8850;
	st.local.u8 	[%rd8851], %rs166;
	add.s32 	%r5795, %r187, 41;
	xor.b32  	%r5796, %r5795, 7;
	cvt.u64.u32	%rd8852, %r5796;
	add.s64 	%rd8853, %rd90, %rd8852;
	st.local.u8 	[%rd8853], %rs165;
	add.s32 	%r5797, %r187, 42;
	xor.b32  	%r5798, %r5797, 7;
	cvt.u64.u32	%rd8854, %r5798;
	add.s64 	%rd8855, %rd90, %rd8854;
	st.local.u8 	[%rd8855], %rs164;
	add.s32 	%r5799, %r187, 43;
	xor.b32  	%r5800, %r5799, 7;
	cvt.u64.u32	%rd8856, %r5800;
	add.s64 	%rd8857, %rd90, %rd8856;
	st.local.u8 	[%rd8857], %rs163;
	add.s32 	%r5801, %r187, 44;
	xor.b32  	%r5802, %r5801, 7;
	cvt.u64.u32	%rd8858, %r5802;
	add.s64 	%rd8859, %rd90, %rd8858;
	st.local.u8 	[%rd8859], %rs170;
	add.s32 	%r5803, %r187, 45;
	xor.b32  	%r5804, %r5803, 7;
	cvt.u64.u32	%rd8860, %r5804;
	add.s64 	%rd8861, %rd90, %rd8860;
	st.local.u8 	[%rd8861], %rs169;
	add.s32 	%r5805, %r187, 46;
	xor.b32  	%r5806, %r5805, 7;
	cvt.u64.u32	%rd8862, %r5806;
	add.s64 	%rd8863, %rd90, %rd8862;
	st.local.u8 	[%rd8863], %rs168;
	add.s32 	%r5807, %r187, 47;
	xor.b32  	%r5808, %r5807, 7;
	cvt.u64.u32	%rd8864, %r5808;
	add.s64 	%rd8865, %rd90, %rd8864;
	st.local.u8 	[%rd8865], %rs6;
	ld.local.v4.u8 	{%rs178, %rs179, %rs180, %rs181}, [%rd579];
	add.s32 	%r5809, %r187, 48;
	xor.b32  	%r5810, %r5809, 7;
	cvt.u64.u32	%rd8866, %r5810;
	add.s64 	%rd8867, %rd90, %rd8866;
	st.local.u8 	[%rd8867], %rs181;
	add.s32 	%r5811, %r187, 49;
	xor.b32  	%r5812, %r5811, 7;
	cvt.u64.u32	%rd8868, %r5812;
	add.s64 	%rd8869, %rd90, %rd8868;
	st.local.u8 	[%rd8869], %rs180;
	add.s32 	%r5813, %r187, 50;
	xor.b32  	%r5814, %r5813, 7;
	cvt.u64.u32	%rd8870, %r5814;
	add.s64 	%rd8871, %rd90, %rd8870;
	st.local.u8 	[%rd8871], %rs179;
	add.s32 	%r5815, %r187, 51;
	xor.b32  	%r5816, %r5815, 7;
	cvt.u64.u32	%rd8872, %r5816;
	add.s64 	%rd8873, %rd90, %rd8872;
	st.local.u8 	[%rd8873], %rs178;
	ld.local.v4.u8 	{%rs186, %rs187, %rs188, %rs189}, [%rd349+48];
	add.s32 	%r5817, %r187, 52;
	xor.b32  	%r5818, %r5817, 7;
	cvt.u64.u32	%rd8874, %r5818;
	add.s64 	%rd8875, %rd90, %rd8874;
	st.local.u8 	[%rd8875], %rs189;
	add.s32 	%r5819, %r187, 53;
	xor.b32  	%r5820, %r5819, 7;
	cvt.u64.u32	%rd8876, %r5820;
	add.s64 	%rd8877, %rd90, %rd8876;
	st.local.u8 	[%rd8877], %rs188;
	add.s32 	%r5821, %r187, 54;
	xor.b32  	%r5822, %r5821, 7;
	cvt.u64.u32	%rd8878, %r5822;
	add.s64 	%rd8879, %rd90, %rd8878;
	st.local.u8 	[%rd8879], %rs187;
	add.s32 	%r5823, %r187, 55;
	xor.b32  	%r5824, %r5823, 7;
	cvt.u64.u32	%rd8880, %r5824;
	add.s64 	%rd8881, %rd90, %rd8880;
	st.local.u8 	[%rd8881], %rs7;
	ld.local.v4.u8 	{%rs193, %rs194, %rs195, %rs196}, [%rd580];
	add.s32 	%r5825, %r187, 56;
	xor.b32  	%r5826, %r5825, 7;
	cvt.u64.u32	%rd8882, %r5826;
	add.s64 	%rd8883, %rd90, %rd8882;
	st.local.u8 	[%rd8883], %rs196;
	add.s32 	%r5827, %r187, 57;
	xor.b32  	%r5828, %r5827, 7;
	cvt.u64.u32	%rd8884, %r5828;
	add.s64 	%rd8885, %rd90, %rd8884;
	st.local.u8 	[%rd8885], %rs195;
	add.s32 	%r5829, %r187, 58;
	xor.b32  	%r5830, %r5829, 7;
	cvt.u64.u32	%rd8886, %r5830;
	add.s64 	%rd8887, %rd90, %rd8886;
	st.local.u8 	[%rd8887], %rs194;
	add.s32 	%r5831, %r187, 59;
	xor.b32  	%r5832, %r5831, 7;
	cvt.u64.u32	%rd8888, %r5832;
	add.s64 	%rd8889, %rd90, %rd8888;
	st.local.u8 	[%rd8889], %rs193;
	ld.local.v4.u8 	{%rs201, %rs202, %rs203, %rs204}, [%rd349+56];
	add.s32 	%r5833, %r187, 60;
	xor.b32  	%r5834, %r5833, 7;
	cvt.u64.u32	%rd8890, %r5834;
	add.s64 	%rd8891, %rd90, %rd8890;
	st.local.u8 	[%rd8891], %rs204;
	add.s32 	%r5835, %r187, 61;
	xor.b32  	%r5836, %r5835, 7;
	cvt.u64.u32	%rd8892, %r5836;
	add.s64 	%rd8893, %rd90, %rd8892;
	st.local.u8 	[%rd8893], %rs203;
	add.s32 	%r5837, %r187, 62;
	xor.b32  	%r5838, %r5837, 7;
	cvt.u64.u32	%rd8894, %r5838;
	add.s64 	%rd8895, %rd90, %rd8894;
	st.local.u8 	[%rd8895], %rs202;
	add.s32 	%r5839, %r187, 63;
	xor.b32  	%r5840, %r5839, 7;
	cvt.u64.u32	%rd8896, %r5840;
	add.s64 	%rd8897, %rd90, %rd8896;
	st.local.u8 	[%rd8897], %rs8;
	bra.uni 	BB0_161;

BB0_146:
	sub.s32 	%r217, %r1990, %r187;
	mov.u32 	%r5846, 1;
	max.u32 	%r218, %r217, %r5846;
	and.b32  	%r219, %r218, 3;
	setp.eq.s32	%p90, %r219, 0;
	mov.u32 	%r12645, 0;
	@%p90 bra 	BB0_153;

	setp.eq.s32	%p91, %r219, 1;
	mov.u32 	%r12641, 0;
	@%p91 bra 	BB0_152;

	setp.eq.s32	%p92, %r219, 2;
	mov.u32 	%r5848, 0;
	@%p92 bra 	BB0_149;
	bra.uni 	BB0_150;

BB0_149:
	mov.u32 	%r5846, %r5848;
	bra.uni 	BB0_151;

BB0_124:
	sub.s32 	%r188, %r1990, %r187;
	mov.u32 	%r4949, 1;
	max.u32 	%r189, %r188, %r4949;
	and.b32  	%r190, %r189, 3;
	setp.eq.s32	%p77, %r190, 0;
	mov.u32 	%r12632, 0;
	@%p77 bra 	BB0_131;

	setp.eq.s32	%p78, %r190, 1;
	mov.u32 	%r12628, 0;
	@%p78 bra 	BB0_130;

	setp.eq.s32	%p79, %r190, 2;
	mov.u32 	%r4951, 0;
	@%p79 bra 	BB0_127;
	bra.uni 	BB0_128;

BB0_127:
	mov.u32 	%r4949, %r4951;
	bra.uni 	BB0_129;

BB0_150:
	ld.local.u8 	%rs208, [%rd572];
	xor.b32  	%r5850, %r187, 7;
	cvt.u64.u32	%rd8898, %r5850;
	add.s64 	%rd8899, %rd90, %rd8898;
	st.local.u8 	[%rd8899], %rs208;
	add.s32 	%r187, %r187, 1;

BB0_151:
	xor.b32  	%r5851, %r5846, 7;
	cvt.u64.u32	%rd8900, %r5851;
	add.s64 	%rd8901, %rd1460, %rd8900;
	ld.local.u8 	%rs209, [%rd8901];
	xor.b32  	%r5852, %r187, 7;
	cvt.s64.s32	%rd8902, %r5852;
	add.s64 	%rd8903, %rd90, %rd8902;
	st.local.u8 	[%rd8903], %rs209;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12641, %r5846, 1;

BB0_152:
	xor.b32  	%r5853, %r12641, 7;
	cvt.s64.s32	%rd8904, %r5853;
	add.s64 	%rd8905, %rd1460, %rd8904;
	ld.local.u8 	%rs210, [%rd8905];
	xor.b32  	%r5854, %r187, 7;
	cvt.s64.s32	%rd8906, %r5854;
	add.s64 	%rd8907, %rd90, %rd8906;
	st.local.u8 	[%rd8907], %rs210;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12645, %r12641, 1;

BB0_153:
	setp.lt.u32	%p93, %r218, 4;
	@%p93 bra 	BB0_155;

BB0_154:
	xor.b32  	%r5855, %r12645, 7;
	cvt.s64.s32	%rd8908, %r5855;
	add.s64 	%rd8909, %rd1460, %rd8908;
	ld.local.u8 	%rs211, [%rd8909];
	xor.b32  	%r5856, %r187, 7;
	cvt.s64.s32	%rd8910, %r5856;
	add.s64 	%rd8911, %rd90, %rd8910;
	st.local.u8 	[%rd8911], %rs211;
	add.s32 	%r5857, %r12645, 1;
	xor.b32  	%r5858, %r5857, 7;
	cvt.s64.s32	%rd8912, %r5858;
	add.s64 	%rd8913, %rd1460, %rd8912;
	ld.local.u8 	%rs212, [%rd8913];
	add.s32 	%r5859, %r187, 1;
	xor.b32  	%r5860, %r5859, 7;
	cvt.s64.s32	%rd8914, %r5860;
	add.s64 	%rd8915, %rd90, %rd8914;
	st.local.u8 	[%rd8915], %rs212;
	add.s32 	%r5861, %r12645, 2;
	xor.b32  	%r5862, %r5861, 7;
	cvt.s64.s32	%rd8916, %r5862;
	add.s64 	%rd8917, %rd1460, %rd8916;
	ld.local.u8 	%rs213, [%rd8917];
	add.s32 	%r5863, %r187, 2;
	xor.b32  	%r5864, %r5863, 7;
	cvt.s64.s32	%rd8918, %r5864;
	add.s64 	%rd8919, %rd90, %rd8918;
	st.local.u8 	[%rd8919], %rs213;
	add.s32 	%r5865, %r12645, 3;
	xor.b32  	%r5866, %r5865, 7;
	cvt.s64.s32	%rd8920, %r5866;
	add.s64 	%rd8921, %rd1460, %rd8920;
	ld.local.u8 	%rs214, [%rd8921];
	add.s32 	%r5867, %r187, 3;
	xor.b32  	%r5868, %r5867, 7;
	cvt.s64.s32	%rd8922, %r5868;
	add.s64 	%rd8923, %rd90, %rd8922;
	st.local.u8 	[%rd8923], %rs214;
	add.s32 	%r12645, %r12645, 4;
	setp.lt.s32	%p94, %r12645, %r217;
	add.s32 	%r187, %r187, 4;
	@%p94 bra 	BB0_154;

BB0_155:
	ld.local.u64 	%rd663, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd663;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 14;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 14;
	mov.b64 	%rd8924, {%r5873, %r5872};
	shf.r.wrap.b32 	%r5874, %r5871, %r5870, 18;
	shf.r.wrap.b32 	%r5875, %r5870, %r5871, 18;
	mov.b64 	%rd8925, {%r5875, %r5874};
	xor.b64  	%rd8926, %rd8925, %rd8924;
	shf.l.wrap.b32 	%r5876, %r5870, %r5871, 23;
	shf.l.wrap.b32 	%r5877, %r5871, %r5870, 23;
	mov.b64 	%rd8927, {%r5877, %r5876};
	xor.b64  	%rd8928, %rd8926, %rd8927;
	ld.local.u64 	%rd664, [%rd1+48];
	ld.local.u64 	%rd665, [%rd1+40];
	xor.b64  	%rd8929, %rd664, %rd665;
	and.b64  	%rd8930, %rd8929, %rd663;
	xor.b64  	%rd8931, %rd8930, %rd664;
	ld.local.u64 	%rd666, [%rd1+56];
	ld.local.u64 	%rd18474, [%rd1+64];
	add.s64 	%rd8932, %rd666, %rd18474;
	add.s64 	%rd8933, %rd8932, %rd18338;
	add.s64 	%rd8934, %rd8933, %rd8931;
	add.s64 	%rd8935, %rd8934, %rd8928;
	ld.local.u64 	%rd668, [%rd1+24];
	add.s64 	%rd8936, %rd8935, %rd668;
	ld.local.u64 	%rd669, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5878,%dummy}, %rd669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5879}, %rd669;
	}
	shf.r.wrap.b32 	%r5880, %r5879, %r5878, 28;
	shf.r.wrap.b32 	%r5881, %r5878, %r5879, 28;
	mov.b64 	%rd8937, {%r5881, %r5880};
	shf.l.wrap.b32 	%r5882, %r5878, %r5879, 30;
	shf.l.wrap.b32 	%r5883, %r5879, %r5878, 30;
	mov.b64 	%rd8938, {%r5883, %r5882};
	xor.b64  	%rd8939, %rd8938, %rd8937;
	shf.l.wrap.b32 	%r5884, %r5878, %r5879, 25;
	shf.l.wrap.b32 	%r5885, %r5879, %r5878, 25;
	mov.b64 	%rd8940, {%r5885, %r5884};
	xor.b64  	%rd8941, %rd8939, %rd8940;
	ld.local.u64 	%rd670, [%rd1+8];
	and.b64  	%rd8942, %rd670, %rd669;
	xor.b64  	%rd8943, %rd670, %rd669;
	ld.local.u64 	%rd671, [%rd1+16];
	and.b64  	%rd8944, %rd671, %rd8943;
	or.b64  	%rd8945, %rd8944, %rd8942;
	add.s64 	%rd8946, %rd8935, %rd8945;
	add.s64 	%rd8947, %rd8946, %rd8941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5886,%dummy}, %rd8936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5887}, %rd8936;
	}
	shf.r.wrap.b32 	%r5888, %r5887, %r5886, 14;
	shf.r.wrap.b32 	%r5889, %r5886, %r5887, 14;
	mov.b64 	%rd8948, {%r5889, %r5888};
	shf.r.wrap.b32 	%r5890, %r5887, %r5886, 18;
	shf.r.wrap.b32 	%r5891, %r5886, %r5887, 18;
	mov.b64 	%rd8949, {%r5891, %r5890};
	xor.b64  	%rd8950, %rd8949, %rd8948;
	shf.l.wrap.b32 	%r5892, %r5886, %r5887, 23;
	shf.l.wrap.b32 	%r5893, %r5887, %r5886, 23;
	mov.b64 	%rd8951, {%r5893, %r5892};
	xor.b64  	%rd8952, %rd8950, %rd8951;
	xor.b64  	%rd8953, %rd665, %rd663;
	and.b64  	%rd8954, %rd8936, %rd8953;
	xor.b64  	%rd8955, %rd8954, %rd665;
	ld.local.u64 	%rd18475, [%rd1+72];
	add.s64 	%rd8956, %rd664, %rd18475;
	add.s64 	%rd8957, %rd8956, %rd18337;
	add.s64 	%rd8958, %rd8957, %rd8955;
	add.s64 	%rd8959, %rd8958, %rd8952;
	add.s64 	%rd8960, %rd8959, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd8947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5895}, %rd8947;
	}
	shf.r.wrap.b32 	%r5896, %r5895, %r5894, 28;
	shf.r.wrap.b32 	%r5897, %r5894, %r5895, 28;
	mov.b64 	%rd8961, {%r5897, %r5896};
	shf.l.wrap.b32 	%r5898, %r5894, %r5895, 30;
	shf.l.wrap.b32 	%r5899, %r5895, %r5894, 30;
	mov.b64 	%rd8962, {%r5899, %r5898};
	xor.b64  	%rd8963, %rd8962, %rd8961;
	shf.l.wrap.b32 	%r5900, %r5894, %r5895, 25;
	shf.l.wrap.b32 	%r5901, %r5895, %r5894, 25;
	mov.b64 	%rd8964, {%r5901, %r5900};
	xor.b64  	%rd8965, %rd8963, %rd8964;
	and.b64  	%rd8966, %rd8947, %rd669;
	xor.b64  	%rd8967, %rd8947, %rd669;
	and.b64  	%rd8968, %rd8967, %rd670;
	or.b64  	%rd8969, %rd8968, %rd8966;
	add.s64 	%rd8970, %rd8959, %rd8969;
	add.s64 	%rd8971, %rd8970, %rd8965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5902,%dummy}, %rd8960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5903}, %rd8960;
	}
	shf.r.wrap.b32 	%r5904, %r5903, %r5902, 14;
	shf.r.wrap.b32 	%r5905, %r5902, %r5903, 14;
	mov.b64 	%rd8972, {%r5905, %r5904};
	shf.r.wrap.b32 	%r5906, %r5903, %r5902, 18;
	shf.r.wrap.b32 	%r5907, %r5902, %r5903, 18;
	mov.b64 	%rd8973, {%r5907, %r5906};
	xor.b64  	%rd8974, %rd8973, %rd8972;
	shf.l.wrap.b32 	%r5908, %r5902, %r5903, 23;
	shf.l.wrap.b32 	%r5909, %r5903, %r5902, 23;
	mov.b64 	%rd8975, {%r5909, %r5908};
	xor.b64  	%rd8976, %rd8974, %rd8975;
	xor.b64  	%rd8977, %rd8936, %rd663;
	and.b64  	%rd8978, %rd8960, %rd8977;
	xor.b64  	%rd8979, %rd8978, %rd663;
	ld.local.u64 	%rd18476, [%rd1+80];
	add.s64 	%rd8980, %rd665, %rd18476;
	add.s64 	%rd8981, %rd8980, %rd18336;
	add.s64 	%rd8982, %rd8981, %rd8979;
	add.s64 	%rd8983, %rd8982, %rd8976;
	add.s64 	%rd8984, %rd8983, %rd670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd8971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd8971;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 28;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 28;
	mov.b64 	%rd8985, {%r5913, %r5912};
	shf.l.wrap.b32 	%r5914, %r5910, %r5911, 30;
	shf.l.wrap.b32 	%r5915, %r5911, %r5910, 30;
	mov.b64 	%rd8986, {%r5915, %r5914};
	xor.b64  	%rd8987, %rd8986, %rd8985;
	shf.l.wrap.b32 	%r5916, %r5910, %r5911, 25;
	shf.l.wrap.b32 	%r5917, %r5911, %r5910, 25;
	mov.b64 	%rd8988, {%r5917, %r5916};
	xor.b64  	%rd8989, %rd8987, %rd8988;
	and.b64  	%rd8990, %rd8971, %rd8947;
	xor.b64  	%rd8991, %rd8971, %rd8947;
	and.b64  	%rd8992, %rd8991, %rd669;
	or.b64  	%rd8993, %rd8992, %rd8990;
	add.s64 	%rd8994, %rd8983, %rd8993;
	add.s64 	%rd8995, %rd8994, %rd8989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5918,%dummy}, %rd8984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5919}, %rd8984;
	}
	shf.r.wrap.b32 	%r5920, %r5919, %r5918, 14;
	shf.r.wrap.b32 	%r5921, %r5918, %r5919, 14;
	mov.b64 	%rd8996, {%r5921, %r5920};
	shf.r.wrap.b32 	%r5922, %r5919, %r5918, 18;
	shf.r.wrap.b32 	%r5923, %r5918, %r5919, 18;
	mov.b64 	%rd8997, {%r5923, %r5922};
	xor.b64  	%rd8998, %rd8997, %rd8996;
	shf.l.wrap.b32 	%r5924, %r5918, %r5919, 23;
	shf.l.wrap.b32 	%r5925, %r5919, %r5918, 23;
	mov.b64 	%rd8999, {%r5925, %r5924};
	xor.b64  	%rd9000, %rd8998, %rd8999;
	xor.b64  	%rd9001, %rd8960, %rd8936;
	and.b64  	%rd9002, %rd8984, %rd9001;
	xor.b64  	%rd9003, %rd9002, %rd8936;
	ld.local.u64 	%rd18477, [%rd1+88];
	add.s64 	%rd9004, %rd663, %rd18477;
	add.s64 	%rd9005, %rd9004, %rd18335;
	add.s64 	%rd9006, %rd9005, %rd9003;
	add.s64 	%rd9007, %rd9006, %rd9000;
	add.s64 	%rd9008, %rd9007, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5926,%dummy}, %rd8995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5927}, %rd8995;
	}
	shf.r.wrap.b32 	%r5928, %r5927, %r5926, 28;
	shf.r.wrap.b32 	%r5929, %r5926, %r5927, 28;
	mov.b64 	%rd9009, {%r5929, %r5928};
	shf.l.wrap.b32 	%r5930, %r5926, %r5927, 30;
	shf.l.wrap.b32 	%r5931, %r5927, %r5926, 30;
	mov.b64 	%rd9010, {%r5931, %r5930};
	xor.b64  	%rd9011, %rd9010, %rd9009;
	shf.l.wrap.b32 	%r5932, %r5926, %r5927, 25;
	shf.l.wrap.b32 	%r5933, %r5927, %r5926, 25;
	mov.b64 	%rd9012, {%r5933, %r5932};
	xor.b64  	%rd9013, %rd9011, %rd9012;
	and.b64  	%rd9014, %rd8995, %rd8971;
	xor.b64  	%rd9015, %rd8995, %rd8971;
	and.b64  	%rd9016, %rd9015, %rd8947;
	or.b64  	%rd9017, %rd9016, %rd9014;
	add.s64 	%rd9018, %rd9007, %rd9017;
	add.s64 	%rd9019, %rd9018, %rd9013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd9008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5935}, %rd9008;
	}
	shf.r.wrap.b32 	%r5936, %r5935, %r5934, 14;
	shf.r.wrap.b32 	%r5937, %r5934, %r5935, 14;
	mov.b64 	%rd9020, {%r5937, %r5936};
	shf.r.wrap.b32 	%r5938, %r5935, %r5934, 18;
	shf.r.wrap.b32 	%r5939, %r5934, %r5935, 18;
	mov.b64 	%rd9021, {%r5939, %r5938};
	xor.b64  	%rd9022, %rd9021, %rd9020;
	shf.l.wrap.b32 	%r5940, %r5934, %r5935, 23;
	shf.l.wrap.b32 	%r5941, %r5935, %r5934, 23;
	mov.b64 	%rd9023, {%r5941, %r5940};
	xor.b64  	%rd9024, %rd9022, %rd9023;
	xor.b64  	%rd9025, %rd8984, %rd8960;
	and.b64  	%rd9026, %rd9008, %rd9025;
	xor.b64  	%rd9027, %rd9026, %rd8960;
	ld.local.u64 	%rd18478, [%rd1+96];
	add.s64 	%rd9028, %rd8936, %rd18478;
	add.s64 	%rd9029, %rd9028, %rd18334;
	add.s64 	%rd9030, %rd9029, %rd9027;
	add.s64 	%rd9031, %rd9030, %rd9024;
	add.s64 	%rd9032, %rd9031, %rd8947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd9019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd9019;
	}
	shf.r.wrap.b32 	%r5944, %r5943, %r5942, 28;
	shf.r.wrap.b32 	%r5945, %r5942, %r5943, 28;
	mov.b64 	%rd9033, {%r5945, %r5944};
	shf.l.wrap.b32 	%r5946, %r5942, %r5943, 30;
	shf.l.wrap.b32 	%r5947, %r5943, %r5942, 30;
	mov.b64 	%rd9034, {%r5947, %r5946};
	xor.b64  	%rd9035, %rd9034, %rd9033;
	shf.l.wrap.b32 	%r5948, %r5942, %r5943, 25;
	shf.l.wrap.b32 	%r5949, %r5943, %r5942, 25;
	mov.b64 	%rd9036, {%r5949, %r5948};
	xor.b64  	%rd9037, %rd9035, %rd9036;
	and.b64  	%rd9038, %rd9019, %rd8995;
	xor.b64  	%rd9039, %rd9019, %rd8995;
	and.b64  	%rd9040, %rd9039, %rd8971;
	or.b64  	%rd9041, %rd9040, %rd9038;
	add.s64 	%rd9042, %rd9031, %rd9041;
	add.s64 	%rd9043, %rd9042, %rd9037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd9032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5951}, %rd9032;
	}
	shf.r.wrap.b32 	%r5952, %r5951, %r5950, 14;
	shf.r.wrap.b32 	%r5953, %r5950, %r5951, 14;
	mov.b64 	%rd9044, {%r5953, %r5952};
	shf.r.wrap.b32 	%r5954, %r5951, %r5950, 18;
	shf.r.wrap.b32 	%r5955, %r5950, %r5951, 18;
	mov.b64 	%rd9045, {%r5955, %r5954};
	xor.b64  	%rd9046, %rd9045, %rd9044;
	shf.l.wrap.b32 	%r5956, %r5950, %r5951, 23;
	shf.l.wrap.b32 	%r5957, %r5951, %r5950, 23;
	mov.b64 	%rd9047, {%r5957, %r5956};
	xor.b64  	%rd9048, %rd9046, %rd9047;
	xor.b64  	%rd9049, %rd9008, %rd8984;
	and.b64  	%rd9050, %rd9032, %rd9049;
	xor.b64  	%rd9051, %rd9050, %rd8984;
	ld.local.u64 	%rd18479, [%rd1+104];
	add.s64 	%rd9052, %rd8960, %rd18479;
	add.s64 	%rd9053, %rd9052, %rd18333;
	add.s64 	%rd9054, %rd9053, %rd9051;
	add.s64 	%rd9055, %rd9054, %rd9048;
	add.s64 	%rd9056, %rd9055, %rd8971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5958,%dummy}, %rd9043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5959}, %rd9043;
	}
	shf.r.wrap.b32 	%r5960, %r5959, %r5958, 28;
	shf.r.wrap.b32 	%r5961, %r5958, %r5959, 28;
	mov.b64 	%rd9057, {%r5961, %r5960};
	shf.l.wrap.b32 	%r5962, %r5958, %r5959, 30;
	shf.l.wrap.b32 	%r5963, %r5959, %r5958, 30;
	mov.b64 	%rd9058, {%r5963, %r5962};
	xor.b64  	%rd9059, %rd9058, %rd9057;
	shf.l.wrap.b32 	%r5964, %r5958, %r5959, 25;
	shf.l.wrap.b32 	%r5965, %r5959, %r5958, 25;
	mov.b64 	%rd9060, {%r5965, %r5964};
	xor.b64  	%rd9061, %rd9059, %rd9060;
	and.b64  	%rd9062, %rd9043, %rd9019;
	xor.b64  	%rd9063, %rd9043, %rd9019;
	and.b64  	%rd9064, %rd9063, %rd8995;
	or.b64  	%rd9065, %rd9064, %rd9062;
	add.s64 	%rd9066, %rd9055, %rd9065;
	add.s64 	%rd9067, %rd9066, %rd9061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5966,%dummy}, %rd9056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5967}, %rd9056;
	}
	shf.r.wrap.b32 	%r5968, %r5967, %r5966, 14;
	shf.r.wrap.b32 	%r5969, %r5966, %r5967, 14;
	mov.b64 	%rd9068, {%r5969, %r5968};
	shf.r.wrap.b32 	%r5970, %r5967, %r5966, 18;
	shf.r.wrap.b32 	%r5971, %r5966, %r5967, 18;
	mov.b64 	%rd9069, {%r5971, %r5970};
	xor.b64  	%rd9070, %rd9069, %rd9068;
	shf.l.wrap.b32 	%r5972, %r5966, %r5967, 23;
	shf.l.wrap.b32 	%r5973, %r5967, %r5966, 23;
	mov.b64 	%rd9071, {%r5973, %r5972};
	xor.b64  	%rd9072, %rd9070, %rd9071;
	xor.b64  	%rd9073, %rd9032, %rd9008;
	and.b64  	%rd9074, %rd9056, %rd9073;
	xor.b64  	%rd9075, %rd9074, %rd9008;
	ld.local.u64 	%rd18480, [%rd1+112];
	add.s64 	%rd9076, %rd8984, %rd18480;
	add.s64 	%rd9077, %rd9076, %rd18332;
	add.s64 	%rd9078, %rd9077, %rd9075;
	add.s64 	%rd9079, %rd9078, %rd9072;
	add.s64 	%rd9080, %rd9079, %rd8995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5974,%dummy}, %rd9067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5975}, %rd9067;
	}
	shf.r.wrap.b32 	%r5976, %r5975, %r5974, 28;
	shf.r.wrap.b32 	%r5977, %r5974, %r5975, 28;
	mov.b64 	%rd9081, {%r5977, %r5976};
	shf.l.wrap.b32 	%r5978, %r5974, %r5975, 30;
	shf.l.wrap.b32 	%r5979, %r5975, %r5974, 30;
	mov.b64 	%rd9082, {%r5979, %r5978};
	xor.b64  	%rd9083, %rd9082, %rd9081;
	shf.l.wrap.b32 	%r5980, %r5974, %r5975, 25;
	shf.l.wrap.b32 	%r5981, %r5975, %r5974, 25;
	mov.b64 	%rd9084, {%r5981, %r5980};
	xor.b64  	%rd9085, %rd9083, %rd9084;
	and.b64  	%rd9086, %rd9067, %rd9043;
	xor.b64  	%rd9087, %rd9067, %rd9043;
	and.b64  	%rd9088, %rd9087, %rd9019;
	or.b64  	%rd9089, %rd9088, %rd9086;
	add.s64 	%rd9090, %rd9079, %rd9089;
	add.s64 	%rd9091, %rd9090, %rd9085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5982,%dummy}, %rd9080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5983}, %rd9080;
	}
	shf.r.wrap.b32 	%r5984, %r5983, %r5982, 14;
	shf.r.wrap.b32 	%r5985, %r5982, %r5983, 14;
	mov.b64 	%rd9092, {%r5985, %r5984};
	shf.r.wrap.b32 	%r5986, %r5983, %r5982, 18;
	shf.r.wrap.b32 	%r5987, %r5982, %r5983, 18;
	mov.b64 	%rd9093, {%r5987, %r5986};
	xor.b64  	%rd9094, %rd9093, %rd9092;
	shf.l.wrap.b32 	%r5988, %r5982, %r5983, 23;
	shf.l.wrap.b32 	%r5989, %r5983, %r5982, 23;
	mov.b64 	%rd9095, {%r5989, %r5988};
	xor.b64  	%rd9096, %rd9094, %rd9095;
	xor.b64  	%rd9097, %rd9056, %rd9032;
	and.b64  	%rd9098, %rd9080, %rd9097;
	xor.b64  	%rd9099, %rd9098, %rd9032;
	ld.local.u64 	%rd18481, [%rd1+120];
	add.s64 	%rd9100, %rd9008, %rd18481;
	add.s64 	%rd9101, %rd9100, %rd18331;
	add.s64 	%rd9102, %rd9101, %rd9099;
	add.s64 	%rd9103, %rd9102, %rd9096;
	add.s64 	%rd9104, %rd9103, %rd9019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5990,%dummy}, %rd9091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5991}, %rd9091;
	}
	shf.r.wrap.b32 	%r5992, %r5991, %r5990, 28;
	shf.r.wrap.b32 	%r5993, %r5990, %r5991, 28;
	mov.b64 	%rd9105, {%r5993, %r5992};
	shf.l.wrap.b32 	%r5994, %r5990, %r5991, 30;
	shf.l.wrap.b32 	%r5995, %r5991, %r5990, 30;
	mov.b64 	%rd9106, {%r5995, %r5994};
	xor.b64  	%rd9107, %rd9106, %rd9105;
	shf.l.wrap.b32 	%r5996, %r5990, %r5991, 25;
	shf.l.wrap.b32 	%r5997, %r5991, %r5990, 25;
	mov.b64 	%rd9108, {%r5997, %r5996};
	xor.b64  	%rd9109, %rd9107, %rd9108;
	and.b64  	%rd9110, %rd9091, %rd9067;
	xor.b64  	%rd9111, %rd9091, %rd9067;
	and.b64  	%rd9112, %rd9111, %rd9043;
	or.b64  	%rd9113, %rd9112, %rd9110;
	add.s64 	%rd9114, %rd9103, %rd9113;
	add.s64 	%rd9115, %rd9114, %rd9109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5998,%dummy}, %rd9104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5999}, %rd9104;
	}
	shf.r.wrap.b32 	%r6000, %r5999, %r5998, 14;
	shf.r.wrap.b32 	%r6001, %r5998, %r5999, 14;
	mov.b64 	%rd9116, {%r6001, %r6000};
	shf.r.wrap.b32 	%r6002, %r5999, %r5998, 18;
	shf.r.wrap.b32 	%r6003, %r5998, %r5999, 18;
	mov.b64 	%rd9117, {%r6003, %r6002};
	xor.b64  	%rd9118, %rd9117, %rd9116;
	shf.l.wrap.b32 	%r6004, %r5998, %r5999, 23;
	shf.l.wrap.b32 	%r6005, %r5999, %r5998, 23;
	mov.b64 	%rd9119, {%r6005, %r6004};
	xor.b64  	%rd9120, %rd9118, %rd9119;
	xor.b64  	%rd9121, %rd9080, %rd9056;
	and.b64  	%rd9122, %rd9104, %rd9121;
	xor.b64  	%rd9123, %rd9122, %rd9056;
	ld.local.u64 	%rd18465, [%rd1+128];
	add.s64 	%rd9124, %rd9032, %rd18465;
	add.s64 	%rd9125, %rd9124, %rd18330;
	add.s64 	%rd9126, %rd9125, %rd9123;
	add.s64 	%rd9127, %rd9126, %rd9120;
	add.s64 	%rd9128, %rd9127, %rd9043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6006,%dummy}, %rd9115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6007}, %rd9115;
	}
	shf.r.wrap.b32 	%r6008, %r6007, %r6006, 28;
	shf.r.wrap.b32 	%r6009, %r6006, %r6007, 28;
	mov.b64 	%rd9129, {%r6009, %r6008};
	shf.l.wrap.b32 	%r6010, %r6006, %r6007, 30;
	shf.l.wrap.b32 	%r6011, %r6007, %r6006, 30;
	mov.b64 	%rd9130, {%r6011, %r6010};
	xor.b64  	%rd9131, %rd9130, %rd9129;
	shf.l.wrap.b32 	%r6012, %r6006, %r6007, 25;
	shf.l.wrap.b32 	%r6013, %r6007, %r6006, 25;
	mov.b64 	%rd9132, {%r6013, %r6012};
	xor.b64  	%rd9133, %rd9131, %rd9132;
	and.b64  	%rd9134, %rd9115, %rd9091;
	xor.b64  	%rd9135, %rd9115, %rd9091;
	and.b64  	%rd9136, %rd9135, %rd9067;
	or.b64  	%rd9137, %rd9136, %rd9134;
	add.s64 	%rd9138, %rd9127, %rd9137;
	add.s64 	%rd9139, %rd9138, %rd9133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6014,%dummy}, %rd9128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6015}, %rd9128;
	}
	shf.r.wrap.b32 	%r6016, %r6015, %r6014, 14;
	shf.r.wrap.b32 	%r6017, %r6014, %r6015, 14;
	mov.b64 	%rd9140, {%r6017, %r6016};
	shf.r.wrap.b32 	%r6018, %r6015, %r6014, 18;
	shf.r.wrap.b32 	%r6019, %r6014, %r6015, 18;
	mov.b64 	%rd9141, {%r6019, %r6018};
	xor.b64  	%rd9142, %rd9141, %rd9140;
	shf.l.wrap.b32 	%r6020, %r6014, %r6015, 23;
	shf.l.wrap.b32 	%r6021, %r6015, %r6014, 23;
	mov.b64 	%rd9143, {%r6021, %r6020};
	xor.b64  	%rd9144, %rd9142, %rd9143;
	xor.b64  	%rd9145, %rd9104, %rd9080;
	and.b64  	%rd9146, %rd9128, %rd9145;
	xor.b64  	%rd9147, %rd9146, %rd9080;
	ld.local.u64 	%rd18464, [%rd1+136];
	add.s64 	%rd9148, %rd9056, %rd18464;
	add.s64 	%rd9149, %rd9148, %rd18329;
	add.s64 	%rd9150, %rd9149, %rd9147;
	add.s64 	%rd9151, %rd9150, %rd9144;
	add.s64 	%rd9152, %rd9151, %rd9067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6022,%dummy}, %rd9139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6023}, %rd9139;
	}
	shf.r.wrap.b32 	%r6024, %r6023, %r6022, 28;
	shf.r.wrap.b32 	%r6025, %r6022, %r6023, 28;
	mov.b64 	%rd9153, {%r6025, %r6024};
	shf.l.wrap.b32 	%r6026, %r6022, %r6023, 30;
	shf.l.wrap.b32 	%r6027, %r6023, %r6022, 30;
	mov.b64 	%rd9154, {%r6027, %r6026};
	xor.b64  	%rd9155, %rd9154, %rd9153;
	shf.l.wrap.b32 	%r6028, %r6022, %r6023, 25;
	shf.l.wrap.b32 	%r6029, %r6023, %r6022, 25;
	mov.b64 	%rd9156, {%r6029, %r6028};
	xor.b64  	%rd9157, %rd9155, %rd9156;
	and.b64  	%rd9158, %rd9139, %rd9115;
	xor.b64  	%rd9159, %rd9139, %rd9115;
	and.b64  	%rd9160, %rd9159, %rd9091;
	or.b64  	%rd9161, %rd9160, %rd9158;
	add.s64 	%rd9162, %rd9151, %rd9161;
	add.s64 	%rd9163, %rd9162, %rd9157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6030,%dummy}, %rd9152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6031}, %rd9152;
	}
	shf.r.wrap.b32 	%r6032, %r6031, %r6030, 14;
	shf.r.wrap.b32 	%r6033, %r6030, %r6031, 14;
	mov.b64 	%rd9164, {%r6033, %r6032};
	shf.r.wrap.b32 	%r6034, %r6031, %r6030, 18;
	shf.r.wrap.b32 	%r6035, %r6030, %r6031, 18;
	mov.b64 	%rd9165, {%r6035, %r6034};
	xor.b64  	%rd9166, %rd9165, %rd9164;
	shf.l.wrap.b32 	%r6036, %r6030, %r6031, 23;
	shf.l.wrap.b32 	%r6037, %r6031, %r6030, 23;
	mov.b64 	%rd9167, {%r6037, %r6036};
	xor.b64  	%rd9168, %rd9166, %rd9167;
	xor.b64  	%rd9169, %rd9128, %rd9104;
	and.b64  	%rd9170, %rd9152, %rd9169;
	xor.b64  	%rd9171, %rd9170, %rd9104;
	ld.local.u64 	%rd18463, [%rd1+144];
	add.s64 	%rd9172, %rd9080, %rd18463;
	add.s64 	%rd9173, %rd9172, %rd18328;
	add.s64 	%rd9174, %rd9173, %rd9171;
	add.s64 	%rd9175, %rd9174, %rd9168;
	add.s64 	%rd9176, %rd9175, %rd9091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6038,%dummy}, %rd9163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6039}, %rd9163;
	}
	shf.r.wrap.b32 	%r6040, %r6039, %r6038, 28;
	shf.r.wrap.b32 	%r6041, %r6038, %r6039, 28;
	mov.b64 	%rd9177, {%r6041, %r6040};
	shf.l.wrap.b32 	%r6042, %r6038, %r6039, 30;
	shf.l.wrap.b32 	%r6043, %r6039, %r6038, 30;
	mov.b64 	%rd9178, {%r6043, %r6042};
	xor.b64  	%rd9179, %rd9178, %rd9177;
	shf.l.wrap.b32 	%r6044, %r6038, %r6039, 25;
	shf.l.wrap.b32 	%r6045, %r6039, %r6038, 25;
	mov.b64 	%rd9180, {%r6045, %r6044};
	xor.b64  	%rd9181, %rd9179, %rd9180;
	and.b64  	%rd9182, %rd9163, %rd9139;
	xor.b64  	%rd9183, %rd9163, %rd9139;
	and.b64  	%rd9184, %rd9183, %rd9115;
	or.b64  	%rd9185, %rd9184, %rd9182;
	add.s64 	%rd9186, %rd9175, %rd9185;
	add.s64 	%rd9187, %rd9186, %rd9181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6046,%dummy}, %rd9176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6047}, %rd9176;
	}
	shf.r.wrap.b32 	%r6048, %r6047, %r6046, 14;
	shf.r.wrap.b32 	%r6049, %r6046, %r6047, 14;
	mov.b64 	%rd9188, {%r6049, %r6048};
	shf.r.wrap.b32 	%r6050, %r6047, %r6046, 18;
	shf.r.wrap.b32 	%r6051, %r6046, %r6047, 18;
	mov.b64 	%rd9189, {%r6051, %r6050};
	xor.b64  	%rd9190, %rd9189, %rd9188;
	shf.l.wrap.b32 	%r6052, %r6046, %r6047, 23;
	shf.l.wrap.b32 	%r6053, %r6047, %r6046, 23;
	mov.b64 	%rd9191, {%r6053, %r6052};
	xor.b64  	%rd9192, %rd9190, %rd9191;
	xor.b64  	%rd9193, %rd9152, %rd9128;
	and.b64  	%rd9194, %rd9176, %rd9193;
	xor.b64  	%rd9195, %rd9194, %rd9128;
	ld.local.u64 	%rd18462, [%rd1+152];
	add.s64 	%rd9196, %rd9104, %rd18462;
	add.s64 	%rd9197, %rd9196, %rd18327;
	add.s64 	%rd9198, %rd9197, %rd9195;
	add.s64 	%rd9199, %rd9198, %rd9192;
	add.s64 	%rd9200, %rd9199, %rd9115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd9187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6055}, %rd9187;
	}
	shf.r.wrap.b32 	%r6056, %r6055, %r6054, 28;
	shf.r.wrap.b32 	%r6057, %r6054, %r6055, 28;
	mov.b64 	%rd9201, {%r6057, %r6056};
	shf.l.wrap.b32 	%r6058, %r6054, %r6055, 30;
	shf.l.wrap.b32 	%r6059, %r6055, %r6054, 30;
	mov.b64 	%rd9202, {%r6059, %r6058};
	xor.b64  	%rd9203, %rd9202, %rd9201;
	shf.l.wrap.b32 	%r6060, %r6054, %r6055, 25;
	shf.l.wrap.b32 	%r6061, %r6055, %r6054, 25;
	mov.b64 	%rd9204, {%r6061, %r6060};
	xor.b64  	%rd9205, %rd9203, %rd9204;
	and.b64  	%rd9206, %rd9187, %rd9163;
	xor.b64  	%rd9207, %rd9187, %rd9163;
	and.b64  	%rd9208, %rd9207, %rd9139;
	or.b64  	%rd9209, %rd9208, %rd9206;
	add.s64 	%rd9210, %rd9199, %rd9209;
	add.s64 	%rd9211, %rd9210, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd9200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6063}, %rd9200;
	}
	shf.r.wrap.b32 	%r6064, %r6063, %r6062, 14;
	shf.r.wrap.b32 	%r6065, %r6062, %r6063, 14;
	mov.b64 	%rd9212, {%r6065, %r6064};
	shf.r.wrap.b32 	%r6066, %r6063, %r6062, 18;
	shf.r.wrap.b32 	%r6067, %r6062, %r6063, 18;
	mov.b64 	%rd9213, {%r6067, %r6066};
	xor.b64  	%rd9214, %rd9213, %rd9212;
	shf.l.wrap.b32 	%r6068, %r6062, %r6063, 23;
	shf.l.wrap.b32 	%r6069, %r6063, %r6062, 23;
	mov.b64 	%rd9215, {%r6069, %r6068};
	xor.b64  	%rd9216, %rd9214, %rd9215;
	xor.b64  	%rd9217, %rd9176, %rd9152;
	and.b64  	%rd9218, %rd9200, %rd9217;
	xor.b64  	%rd9219, %rd9218, %rd9152;
	ld.local.u64 	%rd18461, [%rd1+160];
	add.s64 	%rd9220, %rd9128, %rd18461;
	add.s64 	%rd9221, %rd9220, %rd18326;
	add.s64 	%rd9222, %rd9221, %rd9219;
	add.s64 	%rd9223, %rd9222, %rd9216;
	add.s64 	%rd18473, %rd9223, %rd9139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6070,%dummy}, %rd9211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6071}, %rd9211;
	}
	shf.r.wrap.b32 	%r6072, %r6071, %r6070, 28;
	shf.r.wrap.b32 	%r6073, %r6070, %r6071, 28;
	mov.b64 	%rd9224, {%r6073, %r6072};
	shf.l.wrap.b32 	%r6074, %r6070, %r6071, 30;
	shf.l.wrap.b32 	%r6075, %r6071, %r6070, 30;
	mov.b64 	%rd9225, {%r6075, %r6074};
	xor.b64  	%rd9226, %rd9225, %rd9224;
	shf.l.wrap.b32 	%r6076, %r6070, %r6071, 25;
	shf.l.wrap.b32 	%r6077, %r6071, %r6070, 25;
	mov.b64 	%rd9227, {%r6077, %r6076};
	xor.b64  	%rd9228, %rd9226, %rd9227;
	and.b64  	%rd9229, %rd9211, %rd9187;
	xor.b64  	%rd9230, %rd9211, %rd9187;
	and.b64  	%rd9231, %rd9230, %rd9163;
	or.b64  	%rd9232, %rd9231, %rd9229;
	add.s64 	%rd9233, %rd9223, %rd9232;
	add.s64 	%rd18469, %rd9233, %rd9228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6078,%dummy}, %rd18473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6079}, %rd18473;
	}
	shf.r.wrap.b32 	%r6080, %r6079, %r6078, 14;
	shf.r.wrap.b32 	%r6081, %r6078, %r6079, 14;
	mov.b64 	%rd9234, {%r6081, %r6080};
	shf.r.wrap.b32 	%r6082, %r6079, %r6078, 18;
	shf.r.wrap.b32 	%r6083, %r6078, %r6079, 18;
	mov.b64 	%rd9235, {%r6083, %r6082};
	xor.b64  	%rd9236, %rd9235, %rd9234;
	shf.l.wrap.b32 	%r6084, %r6078, %r6079, 23;
	shf.l.wrap.b32 	%r6085, %r6079, %r6078, 23;
	mov.b64 	%rd9237, {%r6085, %r6084};
	xor.b64  	%rd9238, %rd9236, %rd9237;
	xor.b64  	%rd9239, %rd9200, %rd9176;
	and.b64  	%rd9240, %rd18473, %rd9239;
	xor.b64  	%rd9241, %rd9240, %rd9176;
	ld.local.u64 	%rd18460, [%rd1+168];
	add.s64 	%rd9242, %rd9152, %rd18460;
	add.s64 	%rd9243, %rd9242, %rd18325;
	add.s64 	%rd9244, %rd9243, %rd9241;
	add.s64 	%rd9245, %rd9244, %rd9238;
	add.s64 	%rd18472, %rd9245, %rd9163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6086,%dummy}, %rd18469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6087}, %rd18469;
	}
	shf.r.wrap.b32 	%r6088, %r6087, %r6086, 28;
	shf.r.wrap.b32 	%r6089, %r6086, %r6087, 28;
	mov.b64 	%rd9246, {%r6089, %r6088};
	shf.l.wrap.b32 	%r6090, %r6086, %r6087, 30;
	shf.l.wrap.b32 	%r6091, %r6087, %r6086, 30;
	mov.b64 	%rd9247, {%r6091, %r6090};
	xor.b64  	%rd9248, %rd9247, %rd9246;
	shf.l.wrap.b32 	%r6092, %r6086, %r6087, 25;
	shf.l.wrap.b32 	%r6093, %r6087, %r6086, 25;
	mov.b64 	%rd9249, {%r6093, %r6092};
	xor.b64  	%rd9250, %rd9248, %rd9249;
	and.b64  	%rd9251, %rd18469, %rd9211;
	xor.b64  	%rd9252, %rd18469, %rd9211;
	and.b64  	%rd9253, %rd9252, %rd9187;
	or.b64  	%rd9254, %rd9253, %rd9251;
	add.s64 	%rd9255, %rd9245, %rd9254;
	add.s64 	%rd18468, %rd9255, %rd9250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6094,%dummy}, %rd18472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6095}, %rd18472;
	}
	shf.r.wrap.b32 	%r6096, %r6095, %r6094, 14;
	shf.r.wrap.b32 	%r6097, %r6094, %r6095, 14;
	mov.b64 	%rd9256, {%r6097, %r6096};
	shf.r.wrap.b32 	%r6098, %r6095, %r6094, 18;
	shf.r.wrap.b32 	%r6099, %r6094, %r6095, 18;
	mov.b64 	%rd9257, {%r6099, %r6098};
	xor.b64  	%rd9258, %rd9257, %rd9256;
	shf.l.wrap.b32 	%r6100, %r6094, %r6095, 23;
	shf.l.wrap.b32 	%r6101, %r6095, %r6094, 23;
	mov.b64 	%rd9259, {%r6101, %r6100};
	xor.b64  	%rd9260, %rd9258, %rd9259;
	xor.b64  	%rd9261, %rd18473, %rd9200;
	and.b64  	%rd9262, %rd18472, %rd9261;
	xor.b64  	%rd9263, %rd9262, %rd9200;
	ld.local.u64 	%rd18459, [%rd1+176];
	add.s64 	%rd9264, %rd9176, %rd18459;
	add.s64 	%rd9265, %rd9264, %rd18324;
	add.s64 	%rd9266, %rd9265, %rd9263;
	add.s64 	%rd9267, %rd9266, %rd9260;
	add.s64 	%rd18471, %rd9267, %rd9187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6102,%dummy}, %rd18468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6103}, %rd18468;
	}
	shf.r.wrap.b32 	%r6104, %r6103, %r6102, 28;
	shf.r.wrap.b32 	%r6105, %r6102, %r6103, 28;
	mov.b64 	%rd9268, {%r6105, %r6104};
	shf.l.wrap.b32 	%r6106, %r6102, %r6103, 30;
	shf.l.wrap.b32 	%r6107, %r6103, %r6102, 30;
	mov.b64 	%rd9269, {%r6107, %r6106};
	xor.b64  	%rd9270, %rd9269, %rd9268;
	shf.l.wrap.b32 	%r6108, %r6102, %r6103, 25;
	shf.l.wrap.b32 	%r6109, %r6103, %r6102, 25;
	mov.b64 	%rd9271, {%r6109, %r6108};
	xor.b64  	%rd9272, %rd9270, %rd9271;
	and.b64  	%rd9273, %rd18468, %rd18469;
	xor.b64  	%rd9274, %rd18468, %rd18469;
	and.b64  	%rd9275, %rd9274, %rd9211;
	or.b64  	%rd9276, %rd9275, %rd9273;
	add.s64 	%rd9277, %rd9267, %rd9276;
	add.s64 	%rd18467, %rd9277, %rd9272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6110,%dummy}, %rd18471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6111}, %rd18471;
	}
	shf.r.wrap.b32 	%r6112, %r6111, %r6110, 14;
	shf.r.wrap.b32 	%r6113, %r6110, %r6111, 14;
	mov.b64 	%rd9278, {%r6113, %r6112};
	shf.r.wrap.b32 	%r6114, %r6111, %r6110, 18;
	shf.r.wrap.b32 	%r6115, %r6110, %r6111, 18;
	mov.b64 	%rd9279, {%r6115, %r6114};
	xor.b64  	%rd9280, %rd9279, %rd9278;
	shf.l.wrap.b32 	%r6116, %r6110, %r6111, 23;
	shf.l.wrap.b32 	%r6117, %r6111, %r6110, 23;
	mov.b64 	%rd9281, {%r6117, %r6116};
	xor.b64  	%rd9282, %rd9280, %rd9281;
	xor.b64  	%rd9283, %rd18472, %rd18473;
	and.b64  	%rd9284, %rd18471, %rd9283;
	xor.b64  	%rd9285, %rd9284, %rd18473;
	ld.local.u64 	%rd18458, [%rd1+184];
	add.s64 	%rd9286, %rd9200, %rd18458;
	add.s64 	%rd9287, %rd9286, %rd18323;
	add.s64 	%rd9288, %rd9287, %rd9285;
	add.s64 	%rd9289, %rd9288, %rd9282;
	add.s64 	%rd18470, %rd9289, %rd9211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6118,%dummy}, %rd18467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6119}, %rd18467;
	}
	shf.r.wrap.b32 	%r6120, %r6119, %r6118, 28;
	shf.r.wrap.b32 	%r6121, %r6118, %r6119, 28;
	mov.b64 	%rd9290, {%r6121, %r6120};
	shf.l.wrap.b32 	%r6122, %r6118, %r6119, 30;
	shf.l.wrap.b32 	%r6123, %r6119, %r6118, 30;
	mov.b64 	%rd9291, {%r6123, %r6122};
	xor.b64  	%rd9292, %rd9291, %rd9290;
	shf.l.wrap.b32 	%r6124, %r6118, %r6119, 25;
	shf.l.wrap.b32 	%r6125, %r6119, %r6118, 25;
	mov.b64 	%rd9293, {%r6125, %r6124};
	xor.b64  	%rd9294, %rd9292, %rd9293;
	and.b64  	%rd9295, %rd18467, %rd18468;
	xor.b64  	%rd9296, %rd18467, %rd18468;
	and.b64  	%rd9297, %rd9296, %rd18469;
	or.b64  	%rd9298, %rd9297, %rd9295;
	add.s64 	%rd9299, %rd9289, %rd9298;
	add.s64 	%rd18466, %rd9299, %rd9294;
	mov.u32 	%r12647, 16;

BB0_156:
	mov.u64 	%rd18236, k_sha512;
	shr.u64 	%rd9300, %rd18459, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6126,%dummy}, %rd18459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6127}, %rd18459;
	}
	shf.r.wrap.b32 	%r6128, %r6127, %r6126, 19;
	shf.r.wrap.b32 	%r6129, %r6126, %r6127, 19;
	mov.b64 	%rd9301, {%r6129, %r6128};
	xor.b64  	%rd9302, %rd9301, %rd9300;
	shf.l.wrap.b32 	%r6130, %r6126, %r6127, 3;
	shf.l.wrap.b32 	%r6131, %r6127, %r6126, 3;
	mov.b64 	%rd9303, {%r6131, %r6130};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	shr.u64 	%rd9305, %rd18475, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6132,%dummy}, %rd18475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6133}, %rd18475;
	}
	shf.r.wrap.b32 	%r6134, %r6133, %r6132, 1;
	shf.r.wrap.b32 	%r6135, %r6132, %r6133, 1;
	mov.b64 	%rd9306, {%r6135, %r6134};
	xor.b64  	%rd9307, %rd9306, %rd9305;
	shf.r.wrap.b32 	%r6136, %r6133, %r6132, 8;
	shf.r.wrap.b32 	%r6137, %r6132, %r6133, 8;
	mov.b64 	%rd9308, {%r6137, %r6136};
	xor.b64  	%rd9309, %rd9307, %rd9308;
	add.s64 	%rd9310, %rd18464, %rd18474;
	add.s64 	%rd9311, %rd9310, %rd9304;
	add.s64 	%rd18474, %rd9311, %rd9309;
	shr.u64 	%rd9312, %rd18458, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd18458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd18458;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 19;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 19;
	mov.b64 	%rd9313, {%r6141, %r6140};
	xor.b64  	%rd9314, %rd9313, %rd9312;
	shf.l.wrap.b32 	%r6142, %r6138, %r6139, 3;
	shf.l.wrap.b32 	%r6143, %r6139, %r6138, 3;
	mov.b64 	%rd9315, {%r6143, %r6142};
	xor.b64  	%rd9316, %rd9314, %rd9315;
	shr.u64 	%rd9317, %rd18476, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6144,%dummy}, %rd18476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6145}, %rd18476;
	}
	shf.r.wrap.b32 	%r6146, %r6145, %r6144, 1;
	shf.r.wrap.b32 	%r6147, %r6144, %r6145, 1;
	mov.b64 	%rd9318, {%r6147, %r6146};
	xor.b64  	%rd9319, %rd9318, %rd9317;
	shf.r.wrap.b32 	%r6148, %r6145, %r6144, 8;
	shf.r.wrap.b32 	%r6149, %r6144, %r6145, 8;
	mov.b64 	%rd9320, {%r6149, %r6148};
	xor.b64  	%rd9321, %rd9319, %rd9320;
	add.s64 	%rd9322, %rd18463, %rd18475;
	add.s64 	%rd9323, %rd9322, %rd9316;
	add.s64 	%rd18475, %rd9323, %rd9321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6150,%dummy}, %rd18474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6151}, %rd18474;
	}
	shf.r.wrap.b32 	%r6152, %r6151, %r6150, 19;
	shf.r.wrap.b32 	%r6153, %r6150, %r6151, 19;
	mov.b64 	%rd9324, {%r6153, %r6152};
	shf.l.wrap.b32 	%r6154, %r6150, %r6151, 3;
	shf.l.wrap.b32 	%r6155, %r6151, %r6150, 3;
	mov.b64 	%rd9325, {%r6155, %r6154};
	shr.u64 	%rd9326, %rd18474, 6;
	xor.b64  	%rd9327, %rd9324, %rd9326;
	xor.b64  	%rd9328, %rd9327, %rd9325;
	shr.u64 	%rd9329, %rd18477, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6156,%dummy}, %rd18477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6157}, %rd18477;
	}
	shf.r.wrap.b32 	%r6158, %r6157, %r6156, 1;
	shf.r.wrap.b32 	%r6159, %r6156, %r6157, 1;
	mov.b64 	%rd9330, {%r6159, %r6158};
	xor.b64  	%rd9331, %rd9330, %rd9329;
	shf.r.wrap.b32 	%r6160, %r6157, %r6156, 8;
	shf.r.wrap.b32 	%r6161, %r6156, %r6157, 8;
	mov.b64 	%rd9332, {%r6161, %r6160};
	xor.b64  	%rd9333, %rd9331, %rd9332;
	add.s64 	%rd9334, %rd18462, %rd18476;
	add.s64 	%rd9335, %rd9334, %rd9328;
	add.s64 	%rd18476, %rd9335, %rd9333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd18475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd18475;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 19;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 19;
	mov.b64 	%rd9336, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 3;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 3;
	mov.b64 	%rd9337, {%r6167, %r6166};
	shr.u64 	%rd9338, %rd18475, 6;
	xor.b64  	%rd9339, %rd9336, %rd9338;
	xor.b64  	%rd9340, %rd9339, %rd9337;
	shr.u64 	%rd9341, %rd18478, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd18478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd18478;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 1;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 1;
	mov.b64 	%rd9342, {%r6171, %r6170};
	xor.b64  	%rd9343, %rd9342, %rd9341;
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 8;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 8;
	mov.b64 	%rd9344, {%r6173, %r6172};
	xor.b64  	%rd9345, %rd9343, %rd9344;
	add.s64 	%rd9346, %rd18461, %rd18477;
	add.s64 	%rd9347, %rd9346, %rd9340;
	add.s64 	%rd18477, %rd9347, %rd9345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6174,%dummy}, %rd18476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6175}, %rd18476;
	}
	shf.r.wrap.b32 	%r6176, %r6175, %r6174, 19;
	shf.r.wrap.b32 	%r6177, %r6174, %r6175, 19;
	mov.b64 	%rd9348, {%r6177, %r6176};
	shf.l.wrap.b32 	%r6178, %r6174, %r6175, 3;
	shf.l.wrap.b32 	%r6179, %r6175, %r6174, 3;
	mov.b64 	%rd9349, {%r6179, %r6178};
	shr.u64 	%rd9350, %rd18476, 6;
	xor.b64  	%rd9351, %rd9348, %rd9350;
	xor.b64  	%rd9352, %rd9351, %rd9349;
	shr.u64 	%rd9353, %rd18479, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6180,%dummy}, %rd18479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6181}, %rd18479;
	}
	shf.r.wrap.b32 	%r6182, %r6181, %r6180, 1;
	shf.r.wrap.b32 	%r6183, %r6180, %r6181, 1;
	mov.b64 	%rd9354, {%r6183, %r6182};
	xor.b64  	%rd9355, %rd9354, %rd9353;
	shf.r.wrap.b32 	%r6184, %r6181, %r6180, 8;
	shf.r.wrap.b32 	%r6185, %r6180, %r6181, 8;
	mov.b64 	%rd9356, {%r6185, %r6184};
	xor.b64  	%rd9357, %rd9355, %rd9356;
	add.s64 	%rd9358, %rd18460, %rd18478;
	add.s64 	%rd9359, %rd9358, %rd9352;
	add.s64 	%rd18478, %rd9359, %rd9357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd18477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6187}, %rd18477;
	}
	shf.r.wrap.b32 	%r6188, %r6187, %r6186, 19;
	shf.r.wrap.b32 	%r6189, %r6186, %r6187, 19;
	mov.b64 	%rd9360, {%r6189, %r6188};
	shf.l.wrap.b32 	%r6190, %r6186, %r6187, 3;
	shf.l.wrap.b32 	%r6191, %r6187, %r6186, 3;
	mov.b64 	%rd9361, {%r6191, %r6190};
	shr.u64 	%rd9362, %rd18477, 6;
	xor.b64  	%rd9363, %rd9360, %rd9362;
	xor.b64  	%rd9364, %rd9363, %rd9361;
	shr.u64 	%rd9365, %rd18480, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6192,%dummy}, %rd18480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd18480;
	}
	shf.r.wrap.b32 	%r6194, %r6193, %r6192, 1;
	shf.r.wrap.b32 	%r6195, %r6192, %r6193, 1;
	mov.b64 	%rd9366, {%r6195, %r6194};
	xor.b64  	%rd9367, %rd9366, %rd9365;
	shf.r.wrap.b32 	%r6196, %r6193, %r6192, 8;
	shf.r.wrap.b32 	%r6197, %r6192, %r6193, 8;
	mov.b64 	%rd9368, {%r6197, %r6196};
	xor.b64  	%rd9369, %rd9367, %rd9368;
	add.s64 	%rd9370, %rd18459, %rd18479;
	add.s64 	%rd9371, %rd9370, %rd9364;
	add.s64 	%rd18479, %rd9371, %rd9369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd18478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6199}, %rd18478;
	}
	shf.r.wrap.b32 	%r6200, %r6199, %r6198, 19;
	shf.r.wrap.b32 	%r6201, %r6198, %r6199, 19;
	mov.b64 	%rd9372, {%r6201, %r6200};
	shf.l.wrap.b32 	%r6202, %r6198, %r6199, 3;
	shf.l.wrap.b32 	%r6203, %r6199, %r6198, 3;
	mov.b64 	%rd9373, {%r6203, %r6202};
	shr.u64 	%rd9374, %rd18478, 6;
	xor.b64  	%rd9375, %rd9372, %rd9374;
	xor.b64  	%rd9376, %rd9375, %rd9373;
	shr.u64 	%rd9377, %rd18481, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6204,%dummy}, %rd18481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6205}, %rd18481;
	}
	shf.r.wrap.b32 	%r6206, %r6205, %r6204, 1;
	shf.r.wrap.b32 	%r6207, %r6204, %r6205, 1;
	mov.b64 	%rd9378, {%r6207, %r6206};
	xor.b64  	%rd9379, %rd9378, %rd9377;
	shf.r.wrap.b32 	%r6208, %r6205, %r6204, 8;
	shf.r.wrap.b32 	%r6209, %r6204, %r6205, 8;
	mov.b64 	%rd9380, {%r6209, %r6208};
	xor.b64  	%rd9381, %rd9379, %rd9380;
	add.s64 	%rd9382, %rd18458, %rd18480;
	add.s64 	%rd9383, %rd9382, %rd9376;
	add.s64 	%rd18480, %rd9383, %rd9381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6210,%dummy}, %rd18479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6211}, %rd18479;
	}
	shf.r.wrap.b32 	%r6212, %r6211, %r6210, 19;
	shf.r.wrap.b32 	%r6213, %r6210, %r6211, 19;
	mov.b64 	%rd9384, {%r6213, %r6212};
	shf.l.wrap.b32 	%r6214, %r6210, %r6211, 3;
	shf.l.wrap.b32 	%r6215, %r6211, %r6210, 3;
	mov.b64 	%rd9385, {%r6215, %r6214};
	shr.u64 	%rd9386, %rd18479, 6;
	xor.b64  	%rd9387, %rd9384, %rd9386;
	xor.b64  	%rd9388, %rd9387, %rd9385;
	shr.u64 	%rd9389, %rd18465, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd18465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd18465;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 1;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 1;
	mov.b64 	%rd9390, {%r6219, %r6218};
	xor.b64  	%rd9391, %rd9390, %rd9389;
	shf.r.wrap.b32 	%r6220, %r6217, %r6216, 8;
	shf.r.wrap.b32 	%r6221, %r6216, %r6217, 8;
	mov.b64 	%rd9392, {%r6221, %r6220};
	xor.b64  	%rd9393, %rd9391, %rd9392;
	add.s64 	%rd9394, %rd18474, %rd18481;
	add.s64 	%rd9395, %rd9394, %rd9388;
	add.s64 	%rd18481, %rd9395, %rd9393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6222,%dummy}, %rd18480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6223}, %rd18480;
	}
	shf.r.wrap.b32 	%r6224, %r6223, %r6222, 19;
	shf.r.wrap.b32 	%r6225, %r6222, %r6223, 19;
	mov.b64 	%rd9396, {%r6225, %r6224};
	shf.l.wrap.b32 	%r6226, %r6222, %r6223, 3;
	shf.l.wrap.b32 	%r6227, %r6223, %r6222, 3;
	mov.b64 	%rd9397, {%r6227, %r6226};
	shr.u64 	%rd9398, %rd18480, 6;
	xor.b64  	%rd9399, %rd9396, %rd9398;
	xor.b64  	%rd9400, %rd9399, %rd9397;
	shr.u64 	%rd9401, %rd18464, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6228,%dummy}, %rd18464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6229}, %rd18464;
	}
	shf.r.wrap.b32 	%r6230, %r6229, %r6228, 1;
	shf.r.wrap.b32 	%r6231, %r6228, %r6229, 1;
	mov.b64 	%rd9402, {%r6231, %r6230};
	xor.b64  	%rd9403, %rd9402, %rd9401;
	shf.r.wrap.b32 	%r6232, %r6229, %r6228, 8;
	shf.r.wrap.b32 	%r6233, %r6228, %r6229, 8;
	mov.b64 	%rd9404, {%r6233, %r6232};
	xor.b64  	%rd9405, %rd9403, %rd9404;
	add.s64 	%rd9406, %rd18475, %rd18465;
	add.s64 	%rd9407, %rd9406, %rd9400;
	add.s64 	%rd18465, %rd9407, %rd9405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6234,%dummy}, %rd18481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6235}, %rd18481;
	}
	shf.r.wrap.b32 	%r6236, %r6235, %r6234, 19;
	shf.r.wrap.b32 	%r6237, %r6234, %r6235, 19;
	mov.b64 	%rd9408, {%r6237, %r6236};
	shf.l.wrap.b32 	%r6238, %r6234, %r6235, 3;
	shf.l.wrap.b32 	%r6239, %r6235, %r6234, 3;
	mov.b64 	%rd9409, {%r6239, %r6238};
	shr.u64 	%rd9410, %rd18481, 6;
	xor.b64  	%rd9411, %rd9408, %rd9410;
	xor.b64  	%rd9412, %rd9411, %rd9409;
	shr.u64 	%rd9413, %rd18463, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6240,%dummy}, %rd18463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd18463;
	}
	shf.r.wrap.b32 	%r6242, %r6241, %r6240, 1;
	shf.r.wrap.b32 	%r6243, %r6240, %r6241, 1;
	mov.b64 	%rd9414, {%r6243, %r6242};
	xor.b64  	%rd9415, %rd9414, %rd9413;
	shf.r.wrap.b32 	%r6244, %r6241, %r6240, 8;
	shf.r.wrap.b32 	%r6245, %r6240, %r6241, 8;
	mov.b64 	%rd9416, {%r6245, %r6244};
	xor.b64  	%rd9417, %rd9415, %rd9416;
	add.s64 	%rd9418, %rd18476, %rd18464;
	add.s64 	%rd9419, %rd9418, %rd9412;
	add.s64 	%rd18464, %rd9419, %rd9417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd18465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd18465;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd9420, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd9421, {%r6251, %r6250};
	shr.u64 	%rd9422, %rd18465, 6;
	xor.b64  	%rd9423, %rd9420, %rd9422;
	xor.b64  	%rd9424, %rd9423, %rd9421;
	shr.u64 	%rd9425, %rd18462, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6252,%dummy}, %rd18462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6253}, %rd18462;
	}
	shf.r.wrap.b32 	%r6254, %r6253, %r6252, 1;
	shf.r.wrap.b32 	%r6255, %r6252, %r6253, 1;
	mov.b64 	%rd9426, {%r6255, %r6254};
	xor.b64  	%rd9427, %rd9426, %rd9425;
	shf.r.wrap.b32 	%r6256, %r6253, %r6252, 8;
	shf.r.wrap.b32 	%r6257, %r6252, %r6253, 8;
	mov.b64 	%rd9428, {%r6257, %r6256};
	xor.b64  	%rd9429, %rd9427, %rd9428;
	add.s64 	%rd9430, %rd18477, %rd18463;
	add.s64 	%rd9431, %rd9430, %rd9424;
	add.s64 	%rd18463, %rd9431, %rd9429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6258,%dummy}, %rd18464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6259}, %rd18464;
	}
	shf.r.wrap.b32 	%r6260, %r6259, %r6258, 19;
	shf.r.wrap.b32 	%r6261, %r6258, %r6259, 19;
	mov.b64 	%rd9432, {%r6261, %r6260};
	shf.l.wrap.b32 	%r6262, %r6258, %r6259, 3;
	shf.l.wrap.b32 	%r6263, %r6259, %r6258, 3;
	mov.b64 	%rd9433, {%r6263, %r6262};
	shr.u64 	%rd9434, %rd18464, 6;
	xor.b64  	%rd9435, %rd9432, %rd9434;
	xor.b64  	%rd9436, %rd9435, %rd9433;
	shr.u64 	%rd9437, %rd18461, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6264,%dummy}, %rd18461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6265}, %rd18461;
	}
	shf.r.wrap.b32 	%r6266, %r6265, %r6264, 1;
	shf.r.wrap.b32 	%r6267, %r6264, %r6265, 1;
	mov.b64 	%rd9438, {%r6267, %r6266};
	xor.b64  	%rd9439, %rd9438, %rd9437;
	shf.r.wrap.b32 	%r6268, %r6265, %r6264, 8;
	shf.r.wrap.b32 	%r6269, %r6264, %r6265, 8;
	mov.b64 	%rd9440, {%r6269, %r6268};
	xor.b64  	%rd9441, %rd9439, %rd9440;
	add.s64 	%rd9442, %rd18478, %rd18462;
	add.s64 	%rd9443, %rd9442, %rd9436;
	add.s64 	%rd18462, %rd9443, %rd9441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6270,%dummy}, %rd18463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6271}, %rd18463;
	}
	shf.r.wrap.b32 	%r6272, %r6271, %r6270, 19;
	shf.r.wrap.b32 	%r6273, %r6270, %r6271, 19;
	mov.b64 	%rd9444, {%r6273, %r6272};
	shf.l.wrap.b32 	%r6274, %r6270, %r6271, 3;
	shf.l.wrap.b32 	%r6275, %r6271, %r6270, 3;
	mov.b64 	%rd9445, {%r6275, %r6274};
	shr.u64 	%rd9446, %rd18463, 6;
	xor.b64  	%rd9447, %rd9444, %rd9446;
	xor.b64  	%rd9448, %rd9447, %rd9445;
	shr.u64 	%rd9449, %rd18460, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd18460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd18460;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 1;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 1;
	mov.b64 	%rd9450, {%r6279, %r6278};
	xor.b64  	%rd9451, %rd9450, %rd9449;
	shf.r.wrap.b32 	%r6280, %r6277, %r6276, 8;
	shf.r.wrap.b32 	%r6281, %r6276, %r6277, 8;
	mov.b64 	%rd9452, {%r6281, %r6280};
	xor.b64  	%rd9453, %rd9451, %rd9452;
	add.s64 	%rd9454, %rd18479, %rd18461;
	add.s64 	%rd9455, %rd9454, %rd9448;
	add.s64 	%rd18461, %rd9455, %rd9453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6282,%dummy}, %rd18462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6283}, %rd18462;
	}
	shf.r.wrap.b32 	%r6284, %r6283, %r6282, 19;
	shf.r.wrap.b32 	%r6285, %r6282, %r6283, 19;
	mov.b64 	%rd9456, {%r6285, %r6284};
	shf.l.wrap.b32 	%r6286, %r6282, %r6283, 3;
	shf.l.wrap.b32 	%r6287, %r6283, %r6282, 3;
	mov.b64 	%rd9457, {%r6287, %r6286};
	shr.u64 	%rd9458, %rd18462, 6;
	xor.b64  	%rd9459, %rd9456, %rd9458;
	xor.b64  	%rd9460, %rd9459, %rd9457;
	shr.u64 	%rd9461, %rd18459, 7;
	shf.r.wrap.b32 	%r6288, %r6127, %r6126, 1;
	shf.r.wrap.b32 	%r6289, %r6126, %r6127, 1;
	mov.b64 	%rd9462, {%r6289, %r6288};
	xor.b64  	%rd9463, %rd9462, %rd9461;
	shf.r.wrap.b32 	%r6290, %r6127, %r6126, 8;
	shf.r.wrap.b32 	%r6291, %r6126, %r6127, 8;
	mov.b64 	%rd9464, {%r6291, %r6290};
	xor.b64  	%rd9465, %rd9463, %rd9464;
	add.s64 	%rd9466, %rd18480, %rd18460;
	add.s64 	%rd9467, %rd9466, %rd9460;
	add.s64 	%rd18460, %rd9467, %rd9465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6292,%dummy}, %rd18461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6293}, %rd18461;
	}
	shf.r.wrap.b32 	%r6294, %r6293, %r6292, 19;
	shf.r.wrap.b32 	%r6295, %r6292, %r6293, 19;
	mov.b64 	%rd9468, {%r6295, %r6294};
	shf.l.wrap.b32 	%r6296, %r6292, %r6293, 3;
	shf.l.wrap.b32 	%r6297, %r6293, %r6292, 3;
	mov.b64 	%rd9469, {%r6297, %r6296};
	shr.u64 	%rd9470, %rd18461, 6;
	xor.b64  	%rd9471, %rd9468, %rd9470;
	xor.b64  	%rd9472, %rd9471, %rd9469;
	shr.u64 	%rd9473, %rd18458, 7;
	shf.r.wrap.b32 	%r6298, %r6139, %r6138, 1;
	shf.r.wrap.b32 	%r6299, %r6138, %r6139, 1;
	mov.b64 	%rd9474, {%r6299, %r6298};
	xor.b64  	%rd9475, %rd9474, %rd9473;
	shf.r.wrap.b32 	%r6300, %r6139, %r6138, 8;
	shf.r.wrap.b32 	%r6301, %r6138, %r6139, 8;
	mov.b64 	%rd9476, {%r6301, %r6300};
	xor.b64  	%rd9477, %rd9475, %rd9476;
	add.s64 	%rd9478, %rd18481, %rd18459;
	add.s64 	%rd9479, %rd9478, %rd9472;
	add.s64 	%rd18459, %rd9479, %rd9477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6302,%dummy}, %rd18460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6303}, %rd18460;
	}
	shf.r.wrap.b32 	%r6304, %r6303, %r6302, 19;
	shf.r.wrap.b32 	%r6305, %r6302, %r6303, 19;
	mov.b64 	%rd9480, {%r6305, %r6304};
	shf.l.wrap.b32 	%r6306, %r6302, %r6303, 3;
	shf.l.wrap.b32 	%r6307, %r6303, %r6302, 3;
	mov.b64 	%rd9481, {%r6307, %r6306};
	shr.u64 	%rd9482, %rd18460, 6;
	xor.b64  	%rd9483, %rd9480, %rd9482;
	xor.b64  	%rd9484, %rd9483, %rd9481;
	shf.r.wrap.b32 	%r6308, %r6151, %r6150, 1;
	shf.r.wrap.b32 	%r6309, %r6150, %r6151, 1;
	mov.b64 	%rd9485, {%r6309, %r6308};
	shf.r.wrap.b32 	%r6310, %r6151, %r6150, 8;
	shf.r.wrap.b32 	%r6311, %r6150, %r6151, 8;
	mov.b64 	%rd9486, {%r6311, %r6310};
	shr.u64 	%rd9487, %rd18474, 7;
	xor.b64  	%rd9488, %rd9485, %rd9487;
	xor.b64  	%rd9489, %rd9488, %rd9486;
	add.s64 	%rd9490, %rd18465, %rd18458;
	add.s64 	%rd9491, %rd9490, %rd9484;
	add.s64 	%rd18458, %rd9491, %rd9489;
	mul.wide.s32 	%rd9492, %r12647, 8;
	add.s64 	%rd9494, %rd18236, %rd9492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6312,%dummy}, %rd18470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6313}, %rd18470;
	}
	shf.r.wrap.b32 	%r6314, %r6313, %r6312, 18;
	shf.r.wrap.b32 	%r6315, %r6312, %r6313, 18;
	mov.b64 	%rd9495, {%r6315, %r6314};
	shf.r.wrap.b32 	%r6316, %r6313, %r6312, 14;
	shf.r.wrap.b32 	%r6317, %r6312, %r6313, 14;
	mov.b64 	%rd9496, {%r6317, %r6316};
	xor.b64  	%rd9497, %rd9495, %rd9496;
	shf.l.wrap.b32 	%r6318, %r6312, %r6313, 23;
	shf.l.wrap.b32 	%r6319, %r6313, %r6312, 23;
	mov.b64 	%rd9498, {%r6319, %r6318};
	xor.b64  	%rd9499, %rd9497, %rd9498;
	xor.b64  	%rd9500, %rd18471, %rd18472;
	and.b64  	%rd9501, %rd18470, %rd9500;
	xor.b64  	%rd9502, %rd9501, %rd18472;
	add.s64 	%rd9503, %rd9502, %rd18473;
	add.s64 	%rd9504, %rd9503, %rd18474;
	ld.const.u64 	%rd9505, [%rd9494];
	add.s64 	%rd9506, %rd9504, %rd9505;
	add.s64 	%rd9507, %rd9506, %rd9499;
	add.s64 	%rd9508, %rd9507, %rd18469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6320}, %rd18466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6321,%dummy}, %rd18466;
	}
	shf.l.wrap.b32 	%r6322, %r6321, %r6320, 30;
	shf.l.wrap.b32 	%r6323, %r6320, %r6321, 30;
	mov.b64 	%rd9509, {%r6323, %r6322};
	shf.r.wrap.b32 	%r6324, %r6320, %r6321, 28;
	shf.r.wrap.b32 	%r6325, %r6321, %r6320, 28;
	mov.b64 	%rd9510, {%r6325, %r6324};
	xor.b64  	%rd9511, %rd9509, %rd9510;
	shf.l.wrap.b32 	%r6326, %r6321, %r6320, 25;
	shf.l.wrap.b32 	%r6327, %r6320, %r6321, 25;
	mov.b64 	%rd9512, {%r6327, %r6326};
	xor.b64  	%rd9513, %rd9511, %rd9512;
	xor.b64  	%rd9514, %rd18466, %rd18467;
	and.b64  	%rd9515, %rd9514, %rd18468;
	and.b64  	%rd9516, %rd18466, %rd18467;
	or.b64  	%rd9517, %rd9515, %rd9516;
	add.s64 	%rd9518, %rd9507, %rd9517;
	add.s64 	%rd9519, %rd9518, %rd9513;
	add.s32 	%r6328, %r12647, 1;
	mul.wide.s32 	%rd9520, %r6328, 8;
	add.s64 	%rd9521, %rd18236, %rd9520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6329,%dummy}, %rd9508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6330}, %rd9508;
	}
	shf.r.wrap.b32 	%r6331, %r6330, %r6329, 14;
	shf.r.wrap.b32 	%r6332, %r6329, %r6330, 14;
	mov.b64 	%rd9522, {%r6332, %r6331};
	shf.r.wrap.b32 	%r6333, %r6330, %r6329, 18;
	shf.r.wrap.b32 	%r6334, %r6329, %r6330, 18;
	mov.b64 	%rd9523, {%r6334, %r6333};
	xor.b64  	%rd9524, %rd9523, %rd9522;
	shf.l.wrap.b32 	%r6335, %r6329, %r6330, 23;
	shf.l.wrap.b32 	%r6336, %r6330, %r6329, 23;
	mov.b64 	%rd9525, {%r6336, %r6335};
	xor.b64  	%rd9526, %rd9524, %rd9525;
	xor.b64  	%rd9527, %rd18470, %rd18471;
	and.b64  	%rd9528, %rd9508, %rd9527;
	xor.b64  	%rd9529, %rd9528, %rd18471;
	add.s64 	%rd9530, %rd18475, %rd18472;
	ld.const.u64 	%rd9531, [%rd9521];
	add.s64 	%rd9532, %rd9530, %rd9531;
	add.s64 	%rd9533, %rd9532, %rd9529;
	add.s64 	%rd9534, %rd9533, %rd9526;
	add.s64 	%rd9535, %rd9534, %rd18468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6337,%dummy}, %rd9519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6338}, %rd9519;
	}
	shf.r.wrap.b32 	%r6339, %r6338, %r6337, 28;
	shf.r.wrap.b32 	%r6340, %r6337, %r6338, 28;
	mov.b64 	%rd9536, {%r6340, %r6339};
	shf.l.wrap.b32 	%r6341, %r6337, %r6338, 30;
	shf.l.wrap.b32 	%r6342, %r6338, %r6337, 30;
	mov.b64 	%rd9537, {%r6342, %r6341};
	xor.b64  	%rd9538, %rd9537, %rd9536;
	shf.l.wrap.b32 	%r6343, %r6337, %r6338, 25;
	shf.l.wrap.b32 	%r6344, %r6338, %r6337, 25;
	mov.b64 	%rd9539, {%r6344, %r6343};
	xor.b64  	%rd9540, %rd9538, %rd9539;
	and.b64  	%rd9541, %rd9519, %rd18466;
	xor.b64  	%rd9542, %rd9519, %rd18466;
	and.b64  	%rd9543, %rd9542, %rd18467;
	or.b64  	%rd9544, %rd9543, %rd9541;
	add.s64 	%rd9545, %rd9534, %rd9544;
	add.s64 	%rd9546, %rd9545, %rd9540;
	add.s32 	%r6345, %r12647, 2;
	mul.wide.s32 	%rd9547, %r6345, 8;
	add.s64 	%rd9548, %rd18236, %rd9547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd9535;
	}
	shf.r.wrap.b32 	%r6348, %r6347, %r6346, 14;
	shf.r.wrap.b32 	%r6349, %r6346, %r6347, 14;
	mov.b64 	%rd9549, {%r6349, %r6348};
	shf.r.wrap.b32 	%r6350, %r6347, %r6346, 18;
	shf.r.wrap.b32 	%r6351, %r6346, %r6347, 18;
	mov.b64 	%rd9550, {%r6351, %r6350};
	xor.b64  	%rd9551, %rd9550, %rd9549;
	shf.l.wrap.b32 	%r6352, %r6346, %r6347, 23;
	shf.l.wrap.b32 	%r6353, %r6347, %r6346, 23;
	mov.b64 	%rd9552, {%r6353, %r6352};
	xor.b64  	%rd9553, %rd9551, %rd9552;
	xor.b64  	%rd9554, %rd9508, %rd18470;
	and.b64  	%rd9555, %rd9535, %rd9554;
	xor.b64  	%rd9556, %rd9555, %rd18470;
	add.s64 	%rd9557, %rd18476, %rd18471;
	ld.const.u64 	%rd9558, [%rd9548];
	add.s64 	%rd9559, %rd9557, %rd9558;
	add.s64 	%rd9560, %rd9559, %rd9556;
	add.s64 	%rd9561, %rd9560, %rd9553;
	add.s64 	%rd9562, %rd9561, %rd18467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd9546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd9546;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 28;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 28;
	mov.b64 	%rd9563, {%r6357, %r6356};
	shf.l.wrap.b32 	%r6358, %r6354, %r6355, 30;
	shf.l.wrap.b32 	%r6359, %r6355, %r6354, 30;
	mov.b64 	%rd9564, {%r6359, %r6358};
	xor.b64  	%rd9565, %rd9564, %rd9563;
	shf.l.wrap.b32 	%r6360, %r6354, %r6355, 25;
	shf.l.wrap.b32 	%r6361, %r6355, %r6354, 25;
	mov.b64 	%rd9566, {%r6361, %r6360};
	xor.b64  	%rd9567, %rd9565, %rd9566;
	and.b64  	%rd9568, %rd9546, %rd9519;
	xor.b64  	%rd9569, %rd9546, %rd9519;
	and.b64  	%rd9570, %rd9569, %rd18466;
	or.b64  	%rd9571, %rd9570, %rd9568;
	add.s64 	%rd9572, %rd9561, %rd9571;
	add.s64 	%rd9573, %rd9572, %rd9567;
	add.s32 	%r6362, %r12647, 3;
	mul.wide.s32 	%rd9574, %r6362, 8;
	add.s64 	%rd9575, %rd18236, %rd9574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd9562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd9562;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 14;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 14;
	mov.b64 	%rd9576, {%r6366, %r6365};
	shf.r.wrap.b32 	%r6367, %r6364, %r6363, 18;
	shf.r.wrap.b32 	%r6368, %r6363, %r6364, 18;
	mov.b64 	%rd9577, {%r6368, %r6367};
	xor.b64  	%rd9578, %rd9577, %rd9576;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 23;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 23;
	mov.b64 	%rd9579, {%r6370, %r6369};
	xor.b64  	%rd9580, %rd9578, %rd9579;
	xor.b64  	%rd9581, %rd9535, %rd9508;
	and.b64  	%rd9582, %rd9562, %rd9581;
	xor.b64  	%rd9583, %rd9582, %rd9508;
	add.s64 	%rd9584, %rd18477, %rd18470;
	ld.const.u64 	%rd9585, [%rd9575];
	add.s64 	%rd9586, %rd9584, %rd9585;
	add.s64 	%rd9587, %rd9586, %rd9583;
	add.s64 	%rd9588, %rd9587, %rd9580;
	add.s64 	%rd9589, %rd9588, %rd18466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd9573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd9573;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 28;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 28;
	mov.b64 	%rd9590, {%r6374, %r6373};
	shf.l.wrap.b32 	%r6375, %r6371, %r6372, 30;
	shf.l.wrap.b32 	%r6376, %r6372, %r6371, 30;
	mov.b64 	%rd9591, {%r6376, %r6375};
	xor.b64  	%rd9592, %rd9591, %rd9590;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 25;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 25;
	mov.b64 	%rd9593, {%r6378, %r6377};
	xor.b64  	%rd9594, %rd9592, %rd9593;
	and.b64  	%rd9595, %rd9573, %rd9546;
	xor.b64  	%rd9596, %rd9573, %rd9546;
	and.b64  	%rd9597, %rd9596, %rd9519;
	or.b64  	%rd9598, %rd9597, %rd9595;
	add.s64 	%rd9599, %rd9588, %rd9598;
	add.s64 	%rd9600, %rd9599, %rd9594;
	add.s32 	%r6379, %r12647, 4;
	mul.wide.s32 	%rd9601, %r6379, 8;
	add.s64 	%rd9602, %rd18236, %rd9601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6380,%dummy}, %rd9589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6381}, %rd9589;
	}
	shf.r.wrap.b32 	%r6382, %r6381, %r6380, 14;
	shf.r.wrap.b32 	%r6383, %r6380, %r6381, 14;
	mov.b64 	%rd9603, {%r6383, %r6382};
	shf.r.wrap.b32 	%r6384, %r6381, %r6380, 18;
	shf.r.wrap.b32 	%r6385, %r6380, %r6381, 18;
	mov.b64 	%rd9604, {%r6385, %r6384};
	xor.b64  	%rd9605, %rd9604, %rd9603;
	shf.l.wrap.b32 	%r6386, %r6380, %r6381, 23;
	shf.l.wrap.b32 	%r6387, %r6381, %r6380, 23;
	mov.b64 	%rd9606, {%r6387, %r6386};
	xor.b64  	%rd9607, %rd9605, %rd9606;
	xor.b64  	%rd9608, %rd9562, %rd9535;
	and.b64  	%rd9609, %rd9589, %rd9608;
	xor.b64  	%rd9610, %rd9609, %rd9535;
	add.s64 	%rd9611, %rd9508, %rd18478;
	ld.const.u64 	%rd9612, [%rd9602];
	add.s64 	%rd9613, %rd9611, %rd9612;
	add.s64 	%rd9614, %rd9613, %rd9610;
	add.s64 	%rd9615, %rd9614, %rd9607;
	add.s64 	%rd9616, %rd9615, %rd9519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6388,%dummy}, %rd9600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6389}, %rd9600;
	}
	shf.r.wrap.b32 	%r6390, %r6389, %r6388, 28;
	shf.r.wrap.b32 	%r6391, %r6388, %r6389, 28;
	mov.b64 	%rd9617, {%r6391, %r6390};
	shf.l.wrap.b32 	%r6392, %r6388, %r6389, 30;
	shf.l.wrap.b32 	%r6393, %r6389, %r6388, 30;
	mov.b64 	%rd9618, {%r6393, %r6392};
	xor.b64  	%rd9619, %rd9618, %rd9617;
	shf.l.wrap.b32 	%r6394, %r6388, %r6389, 25;
	shf.l.wrap.b32 	%r6395, %r6389, %r6388, 25;
	mov.b64 	%rd9620, {%r6395, %r6394};
	xor.b64  	%rd9621, %rd9619, %rd9620;
	and.b64  	%rd9622, %rd9600, %rd9573;
	xor.b64  	%rd9623, %rd9600, %rd9573;
	and.b64  	%rd9624, %rd9623, %rd9546;
	or.b64  	%rd9625, %rd9624, %rd9622;
	add.s64 	%rd9626, %rd9615, %rd9625;
	add.s64 	%rd9627, %rd9626, %rd9621;
	add.s32 	%r6396, %r12647, 5;
	mul.wide.s32 	%rd9628, %r6396, 8;
	add.s64 	%rd9629, %rd18236, %rd9628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6397,%dummy}, %rd9616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6398}, %rd9616;
	}
	shf.r.wrap.b32 	%r6399, %r6398, %r6397, 14;
	shf.r.wrap.b32 	%r6400, %r6397, %r6398, 14;
	mov.b64 	%rd9630, {%r6400, %r6399};
	shf.r.wrap.b32 	%r6401, %r6398, %r6397, 18;
	shf.r.wrap.b32 	%r6402, %r6397, %r6398, 18;
	mov.b64 	%rd9631, {%r6402, %r6401};
	xor.b64  	%rd9632, %rd9631, %rd9630;
	shf.l.wrap.b32 	%r6403, %r6397, %r6398, 23;
	shf.l.wrap.b32 	%r6404, %r6398, %r6397, 23;
	mov.b64 	%rd9633, {%r6404, %r6403};
	xor.b64  	%rd9634, %rd9632, %rd9633;
	xor.b64  	%rd9635, %rd9589, %rd9562;
	and.b64  	%rd9636, %rd9616, %rd9635;
	xor.b64  	%rd9637, %rd9636, %rd9562;
	add.s64 	%rd9638, %rd9535, %rd18479;
	ld.const.u64 	%rd9639, [%rd9629];
	add.s64 	%rd9640, %rd9638, %rd9639;
	add.s64 	%rd9641, %rd9640, %rd9637;
	add.s64 	%rd9642, %rd9641, %rd9634;
	add.s64 	%rd9643, %rd9642, %rd9546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6405,%dummy}, %rd9627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6406}, %rd9627;
	}
	shf.r.wrap.b32 	%r6407, %r6406, %r6405, 28;
	shf.r.wrap.b32 	%r6408, %r6405, %r6406, 28;
	mov.b64 	%rd9644, {%r6408, %r6407};
	shf.l.wrap.b32 	%r6409, %r6405, %r6406, 30;
	shf.l.wrap.b32 	%r6410, %r6406, %r6405, 30;
	mov.b64 	%rd9645, {%r6410, %r6409};
	xor.b64  	%rd9646, %rd9645, %rd9644;
	shf.l.wrap.b32 	%r6411, %r6405, %r6406, 25;
	shf.l.wrap.b32 	%r6412, %r6406, %r6405, 25;
	mov.b64 	%rd9647, {%r6412, %r6411};
	xor.b64  	%rd9648, %rd9646, %rd9647;
	and.b64  	%rd9649, %rd9627, %rd9600;
	xor.b64  	%rd9650, %rd9627, %rd9600;
	and.b64  	%rd9651, %rd9650, %rd9573;
	or.b64  	%rd9652, %rd9651, %rd9649;
	add.s64 	%rd9653, %rd9642, %rd9652;
	add.s64 	%rd9654, %rd9653, %rd9648;
	add.s32 	%r6413, %r12647, 6;
	mul.wide.s32 	%rd9655, %r6413, 8;
	add.s64 	%rd9656, %rd18236, %rd9655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd9643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6415}, %rd9643;
	}
	shf.r.wrap.b32 	%r6416, %r6415, %r6414, 14;
	shf.r.wrap.b32 	%r6417, %r6414, %r6415, 14;
	mov.b64 	%rd9657, {%r6417, %r6416};
	shf.r.wrap.b32 	%r6418, %r6415, %r6414, 18;
	shf.r.wrap.b32 	%r6419, %r6414, %r6415, 18;
	mov.b64 	%rd9658, {%r6419, %r6418};
	xor.b64  	%rd9659, %rd9658, %rd9657;
	shf.l.wrap.b32 	%r6420, %r6414, %r6415, 23;
	shf.l.wrap.b32 	%r6421, %r6415, %r6414, 23;
	mov.b64 	%rd9660, {%r6421, %r6420};
	xor.b64  	%rd9661, %rd9659, %rd9660;
	xor.b64  	%rd9662, %rd9616, %rd9589;
	and.b64  	%rd9663, %rd9643, %rd9662;
	xor.b64  	%rd9664, %rd9663, %rd9589;
	add.s64 	%rd9665, %rd9562, %rd18480;
	ld.const.u64 	%rd9666, [%rd9656];
	add.s64 	%rd9667, %rd9665, %rd9666;
	add.s64 	%rd9668, %rd9667, %rd9664;
	add.s64 	%rd9669, %rd9668, %rd9661;
	add.s64 	%rd9670, %rd9669, %rd9573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6422,%dummy}, %rd9654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6423}, %rd9654;
	}
	shf.r.wrap.b32 	%r6424, %r6423, %r6422, 28;
	shf.r.wrap.b32 	%r6425, %r6422, %r6423, 28;
	mov.b64 	%rd9671, {%r6425, %r6424};
	shf.l.wrap.b32 	%r6426, %r6422, %r6423, 30;
	shf.l.wrap.b32 	%r6427, %r6423, %r6422, 30;
	mov.b64 	%rd9672, {%r6427, %r6426};
	xor.b64  	%rd9673, %rd9672, %rd9671;
	shf.l.wrap.b32 	%r6428, %r6422, %r6423, 25;
	shf.l.wrap.b32 	%r6429, %r6423, %r6422, 25;
	mov.b64 	%rd9674, {%r6429, %r6428};
	xor.b64  	%rd9675, %rd9673, %rd9674;
	and.b64  	%rd9676, %rd9654, %rd9627;
	xor.b64  	%rd9677, %rd9654, %rd9627;
	and.b64  	%rd9678, %rd9677, %rd9600;
	or.b64  	%rd9679, %rd9678, %rd9676;
	add.s64 	%rd9680, %rd9669, %rd9679;
	add.s64 	%rd9681, %rd9680, %rd9675;
	add.s32 	%r6430, %r12647, 7;
	mul.wide.s32 	%rd9682, %r6430, 8;
	add.s64 	%rd9683, %rd18236, %rd9682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6431,%dummy}, %rd9670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6432}, %rd9670;
	}
	shf.r.wrap.b32 	%r6433, %r6432, %r6431, 14;
	shf.r.wrap.b32 	%r6434, %r6431, %r6432, 14;
	mov.b64 	%rd9684, {%r6434, %r6433};
	shf.r.wrap.b32 	%r6435, %r6432, %r6431, 18;
	shf.r.wrap.b32 	%r6436, %r6431, %r6432, 18;
	mov.b64 	%rd9685, {%r6436, %r6435};
	xor.b64  	%rd9686, %rd9685, %rd9684;
	shf.l.wrap.b32 	%r6437, %r6431, %r6432, 23;
	shf.l.wrap.b32 	%r6438, %r6432, %r6431, 23;
	mov.b64 	%rd9687, {%r6438, %r6437};
	xor.b64  	%rd9688, %rd9686, %rd9687;
	xor.b64  	%rd9689, %rd9643, %rd9616;
	and.b64  	%rd9690, %rd9670, %rd9689;
	xor.b64  	%rd9691, %rd9690, %rd9616;
	add.s64 	%rd9692, %rd9589, %rd18481;
	ld.const.u64 	%rd9693, [%rd9683];
	add.s64 	%rd9694, %rd9692, %rd9693;
	add.s64 	%rd9695, %rd9694, %rd9691;
	add.s64 	%rd9696, %rd9695, %rd9688;
	add.s64 	%rd9697, %rd9696, %rd9600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6439,%dummy}, %rd9681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6440}, %rd9681;
	}
	shf.r.wrap.b32 	%r6441, %r6440, %r6439, 28;
	shf.r.wrap.b32 	%r6442, %r6439, %r6440, 28;
	mov.b64 	%rd9698, {%r6442, %r6441};
	shf.l.wrap.b32 	%r6443, %r6439, %r6440, 30;
	shf.l.wrap.b32 	%r6444, %r6440, %r6439, 30;
	mov.b64 	%rd9699, {%r6444, %r6443};
	xor.b64  	%rd9700, %rd9699, %rd9698;
	shf.l.wrap.b32 	%r6445, %r6439, %r6440, 25;
	shf.l.wrap.b32 	%r6446, %r6440, %r6439, 25;
	mov.b64 	%rd9701, {%r6446, %r6445};
	xor.b64  	%rd9702, %rd9700, %rd9701;
	and.b64  	%rd9703, %rd9681, %rd9654;
	xor.b64  	%rd9704, %rd9681, %rd9654;
	and.b64  	%rd9705, %rd9704, %rd9627;
	or.b64  	%rd9706, %rd9705, %rd9703;
	add.s64 	%rd9707, %rd9696, %rd9706;
	add.s64 	%rd9708, %rd9707, %rd9702;
	add.s32 	%r6447, %r12647, 8;
	mul.wide.s32 	%rd9709, %r6447, 8;
	add.s64 	%rd9710, %rd18236, %rd9709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6448,%dummy}, %rd9697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6449}, %rd9697;
	}
	shf.r.wrap.b32 	%r6450, %r6449, %r6448, 14;
	shf.r.wrap.b32 	%r6451, %r6448, %r6449, 14;
	mov.b64 	%rd9711, {%r6451, %r6450};
	shf.r.wrap.b32 	%r6452, %r6449, %r6448, 18;
	shf.r.wrap.b32 	%r6453, %r6448, %r6449, 18;
	mov.b64 	%rd9712, {%r6453, %r6452};
	xor.b64  	%rd9713, %rd9712, %rd9711;
	shf.l.wrap.b32 	%r6454, %r6448, %r6449, 23;
	shf.l.wrap.b32 	%r6455, %r6449, %r6448, 23;
	mov.b64 	%rd9714, {%r6455, %r6454};
	xor.b64  	%rd9715, %rd9713, %rd9714;
	xor.b64  	%rd9716, %rd9670, %rd9643;
	and.b64  	%rd9717, %rd9697, %rd9716;
	xor.b64  	%rd9718, %rd9717, %rd9643;
	add.s64 	%rd9719, %rd9616, %rd18465;
	ld.const.u64 	%rd9720, [%rd9710];
	add.s64 	%rd9721, %rd9719, %rd9720;
	add.s64 	%rd9722, %rd9721, %rd9718;
	add.s64 	%rd9723, %rd9722, %rd9715;
	add.s64 	%rd9724, %rd9723, %rd9627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6456,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6457}, %rd9708;
	}
	shf.r.wrap.b32 	%r6458, %r6457, %r6456, 28;
	shf.r.wrap.b32 	%r6459, %r6456, %r6457, 28;
	mov.b64 	%rd9725, {%r6459, %r6458};
	shf.l.wrap.b32 	%r6460, %r6456, %r6457, 30;
	shf.l.wrap.b32 	%r6461, %r6457, %r6456, 30;
	mov.b64 	%rd9726, {%r6461, %r6460};
	xor.b64  	%rd9727, %rd9726, %rd9725;
	shf.l.wrap.b32 	%r6462, %r6456, %r6457, 25;
	shf.l.wrap.b32 	%r6463, %r6457, %r6456, 25;
	mov.b64 	%rd9728, {%r6463, %r6462};
	xor.b64  	%rd9729, %rd9727, %rd9728;
	and.b64  	%rd9730, %rd9708, %rd9681;
	xor.b64  	%rd9731, %rd9708, %rd9681;
	and.b64  	%rd9732, %rd9731, %rd9654;
	or.b64  	%rd9733, %rd9732, %rd9730;
	add.s64 	%rd9734, %rd9723, %rd9733;
	add.s64 	%rd9735, %rd9734, %rd9729;
	add.s32 	%r6464, %r12647, 9;
	mul.wide.s32 	%rd9736, %r6464, 8;
	add.s64 	%rd9737, %rd18236, %rd9736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6465,%dummy}, %rd9724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6466}, %rd9724;
	}
	shf.r.wrap.b32 	%r6467, %r6466, %r6465, 14;
	shf.r.wrap.b32 	%r6468, %r6465, %r6466, 14;
	mov.b64 	%rd9738, {%r6468, %r6467};
	shf.r.wrap.b32 	%r6469, %r6466, %r6465, 18;
	shf.r.wrap.b32 	%r6470, %r6465, %r6466, 18;
	mov.b64 	%rd9739, {%r6470, %r6469};
	xor.b64  	%rd9740, %rd9739, %rd9738;
	shf.l.wrap.b32 	%r6471, %r6465, %r6466, 23;
	shf.l.wrap.b32 	%r6472, %r6466, %r6465, 23;
	mov.b64 	%rd9741, {%r6472, %r6471};
	xor.b64  	%rd9742, %rd9740, %rd9741;
	xor.b64  	%rd9743, %rd9697, %rd9670;
	and.b64  	%rd9744, %rd9724, %rd9743;
	xor.b64  	%rd9745, %rd9744, %rd9670;
	add.s64 	%rd9746, %rd9643, %rd18464;
	ld.const.u64 	%rd9747, [%rd9737];
	add.s64 	%rd9748, %rd9746, %rd9747;
	add.s64 	%rd9749, %rd9748, %rd9745;
	add.s64 	%rd9750, %rd9749, %rd9742;
	add.s64 	%rd9751, %rd9750, %rd9654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6473,%dummy}, %rd9735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6474}, %rd9735;
	}
	shf.r.wrap.b32 	%r6475, %r6474, %r6473, 28;
	shf.r.wrap.b32 	%r6476, %r6473, %r6474, 28;
	mov.b64 	%rd9752, {%r6476, %r6475};
	shf.l.wrap.b32 	%r6477, %r6473, %r6474, 30;
	shf.l.wrap.b32 	%r6478, %r6474, %r6473, 30;
	mov.b64 	%rd9753, {%r6478, %r6477};
	xor.b64  	%rd9754, %rd9753, %rd9752;
	shf.l.wrap.b32 	%r6479, %r6473, %r6474, 25;
	shf.l.wrap.b32 	%r6480, %r6474, %r6473, 25;
	mov.b64 	%rd9755, {%r6480, %r6479};
	xor.b64  	%rd9756, %rd9754, %rd9755;
	and.b64  	%rd9757, %rd9735, %rd9708;
	xor.b64  	%rd9758, %rd9735, %rd9708;
	and.b64  	%rd9759, %rd9758, %rd9681;
	or.b64  	%rd9760, %rd9759, %rd9757;
	add.s64 	%rd9761, %rd9750, %rd9760;
	add.s64 	%rd9762, %rd9761, %rd9756;
	add.s32 	%r6481, %r12647, 10;
	mul.wide.s32 	%rd9763, %r6481, 8;
	add.s64 	%rd9764, %rd18236, %rd9763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6482,%dummy}, %rd9751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6483}, %rd9751;
	}
	shf.r.wrap.b32 	%r6484, %r6483, %r6482, 14;
	shf.r.wrap.b32 	%r6485, %r6482, %r6483, 14;
	mov.b64 	%rd9765, {%r6485, %r6484};
	shf.r.wrap.b32 	%r6486, %r6483, %r6482, 18;
	shf.r.wrap.b32 	%r6487, %r6482, %r6483, 18;
	mov.b64 	%rd9766, {%r6487, %r6486};
	xor.b64  	%rd9767, %rd9766, %rd9765;
	shf.l.wrap.b32 	%r6488, %r6482, %r6483, 23;
	shf.l.wrap.b32 	%r6489, %r6483, %r6482, 23;
	mov.b64 	%rd9768, {%r6489, %r6488};
	xor.b64  	%rd9769, %rd9767, %rd9768;
	xor.b64  	%rd9770, %rd9724, %rd9697;
	and.b64  	%rd9771, %rd9751, %rd9770;
	xor.b64  	%rd9772, %rd9771, %rd9697;
	add.s64 	%rd9773, %rd9670, %rd18463;
	ld.const.u64 	%rd9774, [%rd9764];
	add.s64 	%rd9775, %rd9773, %rd9774;
	add.s64 	%rd9776, %rd9775, %rd9772;
	add.s64 	%rd9777, %rd9776, %rd9769;
	add.s64 	%rd9778, %rd9777, %rd9681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd9762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6491}, %rd9762;
	}
	shf.r.wrap.b32 	%r6492, %r6491, %r6490, 28;
	shf.r.wrap.b32 	%r6493, %r6490, %r6491, 28;
	mov.b64 	%rd9779, {%r6493, %r6492};
	shf.l.wrap.b32 	%r6494, %r6490, %r6491, 30;
	shf.l.wrap.b32 	%r6495, %r6491, %r6490, 30;
	mov.b64 	%rd9780, {%r6495, %r6494};
	xor.b64  	%rd9781, %rd9780, %rd9779;
	shf.l.wrap.b32 	%r6496, %r6490, %r6491, 25;
	shf.l.wrap.b32 	%r6497, %r6491, %r6490, 25;
	mov.b64 	%rd9782, {%r6497, %r6496};
	xor.b64  	%rd9783, %rd9781, %rd9782;
	and.b64  	%rd9784, %rd9762, %rd9735;
	xor.b64  	%rd9785, %rd9762, %rd9735;
	and.b64  	%rd9786, %rd9785, %rd9708;
	or.b64  	%rd9787, %rd9786, %rd9784;
	add.s64 	%rd9788, %rd9777, %rd9787;
	add.s64 	%rd9789, %rd9788, %rd9783;
	add.s32 	%r6498, %r12647, 11;
	mul.wide.s32 	%rd9790, %r6498, 8;
	add.s64 	%rd9791, %rd18236, %rd9790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6499,%dummy}, %rd9778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6500}, %rd9778;
	}
	shf.r.wrap.b32 	%r6501, %r6500, %r6499, 14;
	shf.r.wrap.b32 	%r6502, %r6499, %r6500, 14;
	mov.b64 	%rd9792, {%r6502, %r6501};
	shf.r.wrap.b32 	%r6503, %r6500, %r6499, 18;
	shf.r.wrap.b32 	%r6504, %r6499, %r6500, 18;
	mov.b64 	%rd9793, {%r6504, %r6503};
	xor.b64  	%rd9794, %rd9793, %rd9792;
	shf.l.wrap.b32 	%r6505, %r6499, %r6500, 23;
	shf.l.wrap.b32 	%r6506, %r6500, %r6499, 23;
	mov.b64 	%rd9795, {%r6506, %r6505};
	xor.b64  	%rd9796, %rd9794, %rd9795;
	xor.b64  	%rd9797, %rd9751, %rd9724;
	and.b64  	%rd9798, %rd9778, %rd9797;
	xor.b64  	%rd9799, %rd9798, %rd9724;
	add.s64 	%rd9800, %rd9697, %rd18462;
	ld.const.u64 	%rd9801, [%rd9791];
	add.s64 	%rd9802, %rd9800, %rd9801;
	add.s64 	%rd9803, %rd9802, %rd9799;
	add.s64 	%rd9804, %rd9803, %rd9796;
	add.s64 	%rd9805, %rd9804, %rd9708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd9789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd9789;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 28;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 28;
	mov.b64 	%rd9806, {%r6510, %r6509};
	shf.l.wrap.b32 	%r6511, %r6507, %r6508, 30;
	shf.l.wrap.b32 	%r6512, %r6508, %r6507, 30;
	mov.b64 	%rd9807, {%r6512, %r6511};
	xor.b64  	%rd9808, %rd9807, %rd9806;
	shf.l.wrap.b32 	%r6513, %r6507, %r6508, 25;
	shf.l.wrap.b32 	%r6514, %r6508, %r6507, 25;
	mov.b64 	%rd9809, {%r6514, %r6513};
	xor.b64  	%rd9810, %rd9808, %rd9809;
	and.b64  	%rd9811, %rd9789, %rd9762;
	xor.b64  	%rd9812, %rd9789, %rd9762;
	and.b64  	%rd9813, %rd9812, %rd9735;
	or.b64  	%rd9814, %rd9813, %rd9811;
	add.s64 	%rd9815, %rd9804, %rd9814;
	add.s64 	%rd9816, %rd9815, %rd9810;
	add.s32 	%r6515, %r12647, 12;
	mul.wide.s32 	%rd9817, %r6515, 8;
	add.s64 	%rd9818, %rd18236, %rd9817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6516,%dummy}, %rd9805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6517}, %rd9805;
	}
	shf.r.wrap.b32 	%r6518, %r6517, %r6516, 14;
	shf.r.wrap.b32 	%r6519, %r6516, %r6517, 14;
	mov.b64 	%rd9819, {%r6519, %r6518};
	shf.r.wrap.b32 	%r6520, %r6517, %r6516, 18;
	shf.r.wrap.b32 	%r6521, %r6516, %r6517, 18;
	mov.b64 	%rd9820, {%r6521, %r6520};
	xor.b64  	%rd9821, %rd9820, %rd9819;
	shf.l.wrap.b32 	%r6522, %r6516, %r6517, 23;
	shf.l.wrap.b32 	%r6523, %r6517, %r6516, 23;
	mov.b64 	%rd9822, {%r6523, %r6522};
	xor.b64  	%rd9823, %rd9821, %rd9822;
	xor.b64  	%rd9824, %rd9778, %rd9751;
	and.b64  	%rd9825, %rd9805, %rd9824;
	xor.b64  	%rd9826, %rd9825, %rd9751;
	add.s64 	%rd9827, %rd9724, %rd18461;
	ld.const.u64 	%rd9828, [%rd9818];
	add.s64 	%rd9829, %rd9827, %rd9828;
	add.s64 	%rd9830, %rd9829, %rd9826;
	add.s64 	%rd9831, %rd9830, %rd9823;
	add.s64 	%rd18473, %rd9831, %rd9735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6524,%dummy}, %rd9816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6525}, %rd9816;
	}
	shf.r.wrap.b32 	%r6526, %r6525, %r6524, 28;
	shf.r.wrap.b32 	%r6527, %r6524, %r6525, 28;
	mov.b64 	%rd9832, {%r6527, %r6526};
	shf.l.wrap.b32 	%r6528, %r6524, %r6525, 30;
	shf.l.wrap.b32 	%r6529, %r6525, %r6524, 30;
	mov.b64 	%rd9833, {%r6529, %r6528};
	xor.b64  	%rd9834, %rd9833, %rd9832;
	shf.l.wrap.b32 	%r6530, %r6524, %r6525, 25;
	shf.l.wrap.b32 	%r6531, %r6525, %r6524, 25;
	mov.b64 	%rd9835, {%r6531, %r6530};
	xor.b64  	%rd9836, %rd9834, %rd9835;
	and.b64  	%rd9837, %rd9816, %rd9789;
	xor.b64  	%rd9838, %rd9816, %rd9789;
	and.b64  	%rd9839, %rd9838, %rd9762;
	or.b64  	%rd9840, %rd9839, %rd9837;
	add.s64 	%rd9841, %rd9831, %rd9840;
	add.s64 	%rd18469, %rd9841, %rd9836;
	add.s32 	%r6532, %r12647, 13;
	mul.wide.s32 	%rd9842, %r6532, 8;
	add.s64 	%rd9843, %rd18236, %rd9842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6533,%dummy}, %rd18473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6534}, %rd18473;
	}
	shf.r.wrap.b32 	%r6535, %r6534, %r6533, 14;
	shf.r.wrap.b32 	%r6536, %r6533, %r6534, 14;
	mov.b64 	%rd9844, {%r6536, %r6535};
	shf.r.wrap.b32 	%r6537, %r6534, %r6533, 18;
	shf.r.wrap.b32 	%r6538, %r6533, %r6534, 18;
	mov.b64 	%rd9845, {%r6538, %r6537};
	xor.b64  	%rd9846, %rd9845, %rd9844;
	shf.l.wrap.b32 	%r6539, %r6533, %r6534, 23;
	shf.l.wrap.b32 	%r6540, %r6534, %r6533, 23;
	mov.b64 	%rd9847, {%r6540, %r6539};
	xor.b64  	%rd9848, %rd9846, %rd9847;
	xor.b64  	%rd9849, %rd9805, %rd9778;
	and.b64  	%rd9850, %rd18473, %rd9849;
	xor.b64  	%rd9851, %rd9850, %rd9778;
	add.s64 	%rd9852, %rd9751, %rd18460;
	ld.const.u64 	%rd9853, [%rd9843];
	add.s64 	%rd9854, %rd9852, %rd9853;
	add.s64 	%rd9855, %rd9854, %rd9851;
	add.s64 	%rd9856, %rd9855, %rd9848;
	add.s64 	%rd18472, %rd9856, %rd9762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6541,%dummy}, %rd18469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6542}, %rd18469;
	}
	shf.r.wrap.b32 	%r6543, %r6542, %r6541, 28;
	shf.r.wrap.b32 	%r6544, %r6541, %r6542, 28;
	mov.b64 	%rd9857, {%r6544, %r6543};
	shf.l.wrap.b32 	%r6545, %r6541, %r6542, 30;
	shf.l.wrap.b32 	%r6546, %r6542, %r6541, 30;
	mov.b64 	%rd9858, {%r6546, %r6545};
	xor.b64  	%rd9859, %rd9858, %rd9857;
	shf.l.wrap.b32 	%r6547, %r6541, %r6542, 25;
	shf.l.wrap.b32 	%r6548, %r6542, %r6541, 25;
	mov.b64 	%rd9860, {%r6548, %r6547};
	xor.b64  	%rd9861, %rd9859, %rd9860;
	and.b64  	%rd9862, %rd18469, %rd9816;
	xor.b64  	%rd9863, %rd18469, %rd9816;
	and.b64  	%rd9864, %rd9863, %rd9789;
	or.b64  	%rd9865, %rd9864, %rd9862;
	add.s64 	%rd9866, %rd9856, %rd9865;
	add.s64 	%rd18468, %rd9866, %rd9861;
	add.s32 	%r6549, %r12647, 14;
	mul.wide.s32 	%rd9867, %r6549, 8;
	add.s64 	%rd9868, %rd18236, %rd9867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6550,%dummy}, %rd18472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6551}, %rd18472;
	}
	shf.r.wrap.b32 	%r6552, %r6551, %r6550, 14;
	shf.r.wrap.b32 	%r6553, %r6550, %r6551, 14;
	mov.b64 	%rd9869, {%r6553, %r6552};
	shf.r.wrap.b32 	%r6554, %r6551, %r6550, 18;
	shf.r.wrap.b32 	%r6555, %r6550, %r6551, 18;
	mov.b64 	%rd9870, {%r6555, %r6554};
	xor.b64  	%rd9871, %rd9870, %rd9869;
	shf.l.wrap.b32 	%r6556, %r6550, %r6551, 23;
	shf.l.wrap.b32 	%r6557, %r6551, %r6550, 23;
	mov.b64 	%rd9872, {%r6557, %r6556};
	xor.b64  	%rd9873, %rd9871, %rd9872;
	xor.b64  	%rd9874, %rd18473, %rd9805;
	and.b64  	%rd9875, %rd18472, %rd9874;
	xor.b64  	%rd9876, %rd9875, %rd9805;
	add.s64 	%rd9877, %rd9778, %rd18459;
	ld.const.u64 	%rd9878, [%rd9868];
	add.s64 	%rd9879, %rd9877, %rd9878;
	add.s64 	%rd9880, %rd9879, %rd9876;
	add.s64 	%rd9881, %rd9880, %rd9873;
	add.s64 	%rd18471, %rd9881, %rd9789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6558,%dummy}, %rd18468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6559}, %rd18468;
	}
	shf.r.wrap.b32 	%r6560, %r6559, %r6558, 28;
	shf.r.wrap.b32 	%r6561, %r6558, %r6559, 28;
	mov.b64 	%rd9882, {%r6561, %r6560};
	shf.l.wrap.b32 	%r6562, %r6558, %r6559, 30;
	shf.l.wrap.b32 	%r6563, %r6559, %r6558, 30;
	mov.b64 	%rd9883, {%r6563, %r6562};
	xor.b64  	%rd9884, %rd9883, %rd9882;
	shf.l.wrap.b32 	%r6564, %r6558, %r6559, 25;
	shf.l.wrap.b32 	%r6565, %r6559, %r6558, 25;
	mov.b64 	%rd9885, {%r6565, %r6564};
	xor.b64  	%rd9886, %rd9884, %rd9885;
	and.b64  	%rd9887, %rd18468, %rd18469;
	xor.b64  	%rd9888, %rd18468, %rd18469;
	and.b64  	%rd9889, %rd9888, %rd9816;
	or.b64  	%rd9890, %rd9889, %rd9887;
	add.s64 	%rd9891, %rd9881, %rd9890;
	add.s64 	%rd18467, %rd9891, %rd9886;
	add.s32 	%r6566, %r12647, 15;
	mul.wide.s32 	%rd9892, %r6566, 8;
	add.s64 	%rd9893, %rd18236, %rd9892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6567,%dummy}, %rd18471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd18471;
	}
	shf.r.wrap.b32 	%r6569, %r6568, %r6567, 14;
	shf.r.wrap.b32 	%r6570, %r6567, %r6568, 14;
	mov.b64 	%rd9894, {%r6570, %r6569};
	shf.r.wrap.b32 	%r6571, %r6568, %r6567, 18;
	shf.r.wrap.b32 	%r6572, %r6567, %r6568, 18;
	mov.b64 	%rd9895, {%r6572, %r6571};
	xor.b64  	%rd9896, %rd9895, %rd9894;
	shf.l.wrap.b32 	%r6573, %r6567, %r6568, 23;
	shf.l.wrap.b32 	%r6574, %r6568, %r6567, 23;
	mov.b64 	%rd9897, {%r6574, %r6573};
	xor.b64  	%rd9898, %rd9896, %rd9897;
	xor.b64  	%rd9899, %rd18472, %rd18473;
	and.b64  	%rd9900, %rd18471, %rd9899;
	xor.b64  	%rd9901, %rd9900, %rd18473;
	add.s64 	%rd9902, %rd9805, %rd18458;
	ld.const.u64 	%rd9903, [%rd9893];
	add.s64 	%rd9904, %rd9902, %rd9903;
	add.s64 	%rd9905, %rd9904, %rd9901;
	add.s64 	%rd9906, %rd9905, %rd9898;
	add.s64 	%rd18470, %rd9906, %rd9816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6575,%dummy}, %rd18467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6576}, %rd18467;
	}
	shf.r.wrap.b32 	%r6577, %r6576, %r6575, 28;
	shf.r.wrap.b32 	%r6578, %r6575, %r6576, 28;
	mov.b64 	%rd9907, {%r6578, %r6577};
	shf.l.wrap.b32 	%r6579, %r6575, %r6576, 30;
	shf.l.wrap.b32 	%r6580, %r6576, %r6575, 30;
	mov.b64 	%rd9908, {%r6580, %r6579};
	xor.b64  	%rd9909, %rd9908, %rd9907;
	shf.l.wrap.b32 	%r6581, %r6575, %r6576, 25;
	shf.l.wrap.b32 	%r6582, %r6576, %r6575, 25;
	mov.b64 	%rd9910, {%r6582, %r6581};
	xor.b64  	%rd9911, %rd9909, %rd9910;
	and.b64  	%rd9912, %rd18467, %rd18468;
	xor.b64  	%rd9913, %rd18467, %rd18468;
	and.b64  	%rd9914, %rd9913, %rd18469;
	or.b64  	%rd9915, %rd9914, %rd9912;
	add.s64 	%rd9916, %rd9906, %rd9915;
	add.s64 	%rd18466, %rd9916, %rd9911;
	add.s32 	%r12647, %r12647, 16;
	setp.lt.s32	%p95, %r12647, 80;
	@%p95 bra 	BB0_156;

	and.b32  	%r12545, %r186, 127;
	sub.s32 	%r12544, %r1990, %r12545;
	add.s64 	%rd9917, %rd669, %rd18466;
	st.local.u64 	[%rd1], %rd9917;
	add.s64 	%rd9918, %rd670, %rd18467;
	st.local.u64 	[%rd1+8], %rd9918;
	add.s64 	%rd9919, %rd671, %rd18468;
	st.local.u64 	[%rd1+16], %rd9919;
	add.s64 	%rd9920, %rd668, %rd18469;
	st.local.u64 	[%rd1+24], %rd9920;
	add.s64 	%rd9921, %rd663, %rd18470;
	st.local.u64 	[%rd1+32], %rd9921;
	add.s64 	%rd9922, %rd665, %rd18471;
	st.local.u64 	[%rd1+40], %rd9922;
	add.s64 	%rd9923, %rd664, %rd18472;
	st.local.u64 	[%rd1+48], %rd9923;
	add.s64 	%rd9924, %rd666, %rd18473;
	st.local.u64 	[%rd1+56], %rd9924;
	sub.s32 	%r237, %r2, %r12544;
	setp.lt.s32	%p96, %r237, 1;
	@%p96 bra 	BB0_161;

	and.b32  	%r6584, %r186, 127;
	sub.s32 	%r12648, %r1990, %r6584;
	mov.u32 	%r12649, 0;

BB0_159:
	xor.b32  	%r6586, %r12648, 7;
	cvt.s64.s32	%rd9925, %r6586;
	add.s64 	%rd9926, %rd1460, %rd9925;
	ld.local.u8 	%rs215, [%rd9926];
	xor.b32  	%r6587, %r12649, 7;
	cvt.s64.s32	%rd9927, %r6587;
	add.s64 	%rd9928, %rd90, %rd9927;
	st.local.u8 	[%rd9928], %rs215;
	add.s32 	%r12648, %r12648, 1;
	add.s32 	%r12649, %r12649, 1;
	setp.lt.s32	%p97, %r12649, %r237;
	@%p97 bra 	BB0_159;
	bra.uni 	BB0_161;

BB0_128:
	ld.local.u8 	%rs76, [%rd582];
	xor.b32  	%r4953, %r187, 7;
	cvt.u64.u32	%rd7717, %r4953;
	add.s64 	%rd7718, %rd90, %rd7717;
	st.local.u8 	[%rd7718], %rs76;
	add.s32 	%r187, %r187, 1;

BB0_129:
	xor.b32  	%r4954, %r4949, 7;
	cvt.u64.u32	%rd7719, %r4954;
	add.s64 	%rd7720, %rd349, %rd7719;
	ld.local.u8 	%rs77, [%rd7720];
	xor.b32  	%r4955, %r187, 7;
	cvt.s64.s32	%rd7721, %r4955;
	add.s64 	%rd7722, %rd90, %rd7721;
	st.local.u8 	[%rd7722], %rs77;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12628, %r4949, 1;

BB0_130:
	xor.b32  	%r4956, %r12628, 7;
	cvt.s64.s32	%rd7723, %r4956;
	add.s64 	%rd7724, %rd349, %rd7723;
	ld.local.u8 	%rs78, [%rd7724];
	xor.b32  	%r4957, %r187, 7;
	cvt.s64.s32	%rd7725, %r4957;
	add.s64 	%rd7726, %rd90, %rd7725;
	st.local.u8 	[%rd7726], %rs78;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12632, %r12628, 1;

BB0_131:
	setp.lt.u32	%p80, %r189, 4;
	@%p80 bra 	BB0_133;

BB0_132:
	xor.b32  	%r4958, %r12632, 7;
	cvt.s64.s32	%rd7727, %r4958;
	add.s64 	%rd7728, %rd349, %rd7727;
	ld.local.u8 	%rs79, [%rd7728];
	xor.b32  	%r4959, %r187, 7;
	cvt.s64.s32	%rd7729, %r4959;
	add.s64 	%rd7730, %rd90, %rd7729;
	st.local.u8 	[%rd7730], %rs79;
	add.s32 	%r4960, %r12632, 1;
	xor.b32  	%r4961, %r4960, 7;
	cvt.s64.s32	%rd7731, %r4961;
	add.s64 	%rd7732, %rd349, %rd7731;
	ld.local.u8 	%rs80, [%rd7732];
	add.s32 	%r4962, %r187, 1;
	xor.b32  	%r4963, %r4962, 7;
	cvt.s64.s32	%rd7733, %r4963;
	add.s64 	%rd7734, %rd90, %rd7733;
	st.local.u8 	[%rd7734], %rs80;
	add.s32 	%r4964, %r12632, 2;
	xor.b32  	%r4965, %r4964, 7;
	cvt.s64.s32	%rd7735, %r4965;
	add.s64 	%rd7736, %rd349, %rd7735;
	ld.local.u8 	%rs81, [%rd7736];
	add.s32 	%r4966, %r187, 2;
	xor.b32  	%r4967, %r4966, 7;
	cvt.s64.s32	%rd7737, %r4967;
	add.s64 	%rd7738, %rd90, %rd7737;
	st.local.u8 	[%rd7738], %rs81;
	add.s32 	%r4968, %r12632, 3;
	xor.b32  	%r4969, %r4968, 7;
	cvt.s64.s32	%rd7739, %r4969;
	add.s64 	%rd7740, %rd349, %rd7739;
	ld.local.u8 	%rs82, [%rd7740];
	add.s32 	%r4970, %r187, 3;
	xor.b32  	%r4971, %r4970, 7;
	cvt.s64.s32	%rd7741, %r4971;
	add.s64 	%rd7742, %rd90, %rd7741;
	st.local.u8 	[%rd7742], %rs82;
	add.s32 	%r12632, %r12632, 4;
	setp.lt.s32	%p81, %r12632, %r188;
	add.s32 	%r187, %r187, 4;
	@%p81 bra 	BB0_132;

BB0_133:
	ld.local.u64 	%rd583, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4973,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4974}, %rd583;
	}
	shf.r.wrap.b32 	%r4975, %r4974, %r4973, 14;
	shf.r.wrap.b32 	%r4976, %r4973, %r4974, 14;
	mov.b64 	%rd7743, {%r4976, %r4975};
	shf.r.wrap.b32 	%r4977, %r4974, %r4973, 18;
	shf.r.wrap.b32 	%r4978, %r4973, %r4974, 18;
	mov.b64 	%rd7744, {%r4978, %r4977};
	xor.b64  	%rd7745, %rd7744, %rd7743;
	shf.l.wrap.b32 	%r4979, %r4973, %r4974, 23;
	shf.l.wrap.b32 	%r4980, %r4974, %r4973, 23;
	mov.b64 	%rd7746, {%r4980, %r4979};
	xor.b64  	%rd7747, %rd7745, %rd7746;
	ld.local.u64 	%rd584, [%rd1+48];
	ld.local.u64 	%rd585, [%rd1+40];
	xor.b64  	%rd7748, %rd584, %rd585;
	and.b64  	%rd7749, %rd7748, %rd583;
	xor.b64  	%rd7750, %rd7749, %rd584;
	ld.local.u64 	%rd586, [%rd1+56];
	ld.local.u64 	%rd18450, [%rd1+64];
	add.s64 	%rd7751, %rd586, %rd18450;
	add.s64 	%rd7752, %rd7751, %rd18338;
	add.s64 	%rd7753, %rd7752, %rd7750;
	add.s64 	%rd7754, %rd7753, %rd7747;
	ld.local.u64 	%rd588, [%rd1+24];
	add.s64 	%rd7755, %rd7754, %rd588;
	ld.local.u64 	%rd589, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4981,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4982}, %rd589;
	}
	shf.r.wrap.b32 	%r4983, %r4982, %r4981, 28;
	shf.r.wrap.b32 	%r4984, %r4981, %r4982, 28;
	mov.b64 	%rd7756, {%r4984, %r4983};
	shf.l.wrap.b32 	%r4985, %r4981, %r4982, 30;
	shf.l.wrap.b32 	%r4986, %r4982, %r4981, 30;
	mov.b64 	%rd7757, {%r4986, %r4985};
	xor.b64  	%rd7758, %rd7757, %rd7756;
	shf.l.wrap.b32 	%r4987, %r4981, %r4982, 25;
	shf.l.wrap.b32 	%r4988, %r4982, %r4981, 25;
	mov.b64 	%rd7759, {%r4988, %r4987};
	xor.b64  	%rd7760, %rd7758, %rd7759;
	ld.local.u64 	%rd590, [%rd1+8];
	and.b64  	%rd7761, %rd590, %rd589;
	xor.b64  	%rd7762, %rd590, %rd589;
	ld.local.u64 	%rd591, [%rd1+16];
	and.b64  	%rd7763, %rd591, %rd7762;
	or.b64  	%rd7764, %rd7763, %rd7761;
	add.s64 	%rd7765, %rd7754, %rd7764;
	add.s64 	%rd7766, %rd7765, %rd7760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4989,%dummy}, %rd7755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4990}, %rd7755;
	}
	shf.r.wrap.b32 	%r4991, %r4990, %r4989, 14;
	shf.r.wrap.b32 	%r4992, %r4989, %r4990, 14;
	mov.b64 	%rd7767, {%r4992, %r4991};
	shf.r.wrap.b32 	%r4993, %r4990, %r4989, 18;
	shf.r.wrap.b32 	%r4994, %r4989, %r4990, 18;
	mov.b64 	%rd7768, {%r4994, %r4993};
	xor.b64  	%rd7769, %rd7768, %rd7767;
	shf.l.wrap.b32 	%r4995, %r4989, %r4990, 23;
	shf.l.wrap.b32 	%r4996, %r4990, %r4989, 23;
	mov.b64 	%rd7770, {%r4996, %r4995};
	xor.b64  	%rd7771, %rd7769, %rd7770;
	xor.b64  	%rd7772, %rd585, %rd583;
	and.b64  	%rd7773, %rd7755, %rd7772;
	xor.b64  	%rd7774, %rd7773, %rd585;
	ld.local.u64 	%rd18451, [%rd1+72];
	add.s64 	%rd7775, %rd584, %rd18451;
	add.s64 	%rd7776, %rd7775, %rd18337;
	add.s64 	%rd7777, %rd7776, %rd7774;
	add.s64 	%rd7778, %rd7777, %rd7771;
	add.s64 	%rd7779, %rd7778, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4997,%dummy}, %rd7766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4998}, %rd7766;
	}
	shf.r.wrap.b32 	%r4999, %r4998, %r4997, 28;
	shf.r.wrap.b32 	%r5000, %r4997, %r4998, 28;
	mov.b64 	%rd7780, {%r5000, %r4999};
	shf.l.wrap.b32 	%r5001, %r4997, %r4998, 30;
	shf.l.wrap.b32 	%r5002, %r4998, %r4997, 30;
	mov.b64 	%rd7781, {%r5002, %r5001};
	xor.b64  	%rd7782, %rd7781, %rd7780;
	shf.l.wrap.b32 	%r5003, %r4997, %r4998, 25;
	shf.l.wrap.b32 	%r5004, %r4998, %r4997, 25;
	mov.b64 	%rd7783, {%r5004, %r5003};
	xor.b64  	%rd7784, %rd7782, %rd7783;
	and.b64  	%rd7785, %rd7766, %rd589;
	xor.b64  	%rd7786, %rd7766, %rd589;
	and.b64  	%rd7787, %rd7786, %rd590;
	or.b64  	%rd7788, %rd7787, %rd7785;
	add.s64 	%rd7789, %rd7778, %rd7788;
	add.s64 	%rd7790, %rd7789, %rd7784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5005,%dummy}, %rd7779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5006}, %rd7779;
	}
	shf.r.wrap.b32 	%r5007, %r5006, %r5005, 14;
	shf.r.wrap.b32 	%r5008, %r5005, %r5006, 14;
	mov.b64 	%rd7791, {%r5008, %r5007};
	shf.r.wrap.b32 	%r5009, %r5006, %r5005, 18;
	shf.r.wrap.b32 	%r5010, %r5005, %r5006, 18;
	mov.b64 	%rd7792, {%r5010, %r5009};
	xor.b64  	%rd7793, %rd7792, %rd7791;
	shf.l.wrap.b32 	%r5011, %r5005, %r5006, 23;
	shf.l.wrap.b32 	%r5012, %r5006, %r5005, 23;
	mov.b64 	%rd7794, {%r5012, %r5011};
	xor.b64  	%rd7795, %rd7793, %rd7794;
	xor.b64  	%rd7796, %rd7755, %rd583;
	and.b64  	%rd7797, %rd7779, %rd7796;
	xor.b64  	%rd7798, %rd7797, %rd583;
	ld.local.u64 	%rd18452, [%rd1+80];
	add.s64 	%rd7799, %rd585, %rd18452;
	add.s64 	%rd7800, %rd7799, %rd18336;
	add.s64 	%rd7801, %rd7800, %rd7798;
	add.s64 	%rd7802, %rd7801, %rd7795;
	add.s64 	%rd7803, %rd7802, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5013,%dummy}, %rd7790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5014}, %rd7790;
	}
	shf.r.wrap.b32 	%r5015, %r5014, %r5013, 28;
	shf.r.wrap.b32 	%r5016, %r5013, %r5014, 28;
	mov.b64 	%rd7804, {%r5016, %r5015};
	shf.l.wrap.b32 	%r5017, %r5013, %r5014, 30;
	shf.l.wrap.b32 	%r5018, %r5014, %r5013, 30;
	mov.b64 	%rd7805, {%r5018, %r5017};
	xor.b64  	%rd7806, %rd7805, %rd7804;
	shf.l.wrap.b32 	%r5019, %r5013, %r5014, 25;
	shf.l.wrap.b32 	%r5020, %r5014, %r5013, 25;
	mov.b64 	%rd7807, {%r5020, %r5019};
	xor.b64  	%rd7808, %rd7806, %rd7807;
	and.b64  	%rd7809, %rd7790, %rd7766;
	xor.b64  	%rd7810, %rd7790, %rd7766;
	and.b64  	%rd7811, %rd7810, %rd589;
	or.b64  	%rd7812, %rd7811, %rd7809;
	add.s64 	%rd7813, %rd7802, %rd7812;
	add.s64 	%rd7814, %rd7813, %rd7808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5021,%dummy}, %rd7803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5022}, %rd7803;
	}
	shf.r.wrap.b32 	%r5023, %r5022, %r5021, 14;
	shf.r.wrap.b32 	%r5024, %r5021, %r5022, 14;
	mov.b64 	%rd7815, {%r5024, %r5023};
	shf.r.wrap.b32 	%r5025, %r5022, %r5021, 18;
	shf.r.wrap.b32 	%r5026, %r5021, %r5022, 18;
	mov.b64 	%rd7816, {%r5026, %r5025};
	xor.b64  	%rd7817, %rd7816, %rd7815;
	shf.l.wrap.b32 	%r5027, %r5021, %r5022, 23;
	shf.l.wrap.b32 	%r5028, %r5022, %r5021, 23;
	mov.b64 	%rd7818, {%r5028, %r5027};
	xor.b64  	%rd7819, %rd7817, %rd7818;
	xor.b64  	%rd7820, %rd7779, %rd7755;
	and.b64  	%rd7821, %rd7803, %rd7820;
	xor.b64  	%rd7822, %rd7821, %rd7755;
	ld.local.u64 	%rd18453, [%rd1+88];
	add.s64 	%rd7823, %rd583, %rd18453;
	add.s64 	%rd7824, %rd7823, %rd18335;
	add.s64 	%rd7825, %rd7824, %rd7822;
	add.s64 	%rd7826, %rd7825, %rd7819;
	add.s64 	%rd7827, %rd7826, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5029,%dummy}, %rd7814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5030}, %rd7814;
	}
	shf.r.wrap.b32 	%r5031, %r5030, %r5029, 28;
	shf.r.wrap.b32 	%r5032, %r5029, %r5030, 28;
	mov.b64 	%rd7828, {%r5032, %r5031};
	shf.l.wrap.b32 	%r5033, %r5029, %r5030, 30;
	shf.l.wrap.b32 	%r5034, %r5030, %r5029, 30;
	mov.b64 	%rd7829, {%r5034, %r5033};
	xor.b64  	%rd7830, %rd7829, %rd7828;
	shf.l.wrap.b32 	%r5035, %r5029, %r5030, 25;
	shf.l.wrap.b32 	%r5036, %r5030, %r5029, 25;
	mov.b64 	%rd7831, {%r5036, %r5035};
	xor.b64  	%rd7832, %rd7830, %rd7831;
	and.b64  	%rd7833, %rd7814, %rd7790;
	xor.b64  	%rd7834, %rd7814, %rd7790;
	and.b64  	%rd7835, %rd7834, %rd7766;
	or.b64  	%rd7836, %rd7835, %rd7833;
	add.s64 	%rd7837, %rd7826, %rd7836;
	add.s64 	%rd7838, %rd7837, %rd7832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5037,%dummy}, %rd7827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5038}, %rd7827;
	}
	shf.r.wrap.b32 	%r5039, %r5038, %r5037, 14;
	shf.r.wrap.b32 	%r5040, %r5037, %r5038, 14;
	mov.b64 	%rd7839, {%r5040, %r5039};
	shf.r.wrap.b32 	%r5041, %r5038, %r5037, 18;
	shf.r.wrap.b32 	%r5042, %r5037, %r5038, 18;
	mov.b64 	%rd7840, {%r5042, %r5041};
	xor.b64  	%rd7841, %rd7840, %rd7839;
	shf.l.wrap.b32 	%r5043, %r5037, %r5038, 23;
	shf.l.wrap.b32 	%r5044, %r5038, %r5037, 23;
	mov.b64 	%rd7842, {%r5044, %r5043};
	xor.b64  	%rd7843, %rd7841, %rd7842;
	xor.b64  	%rd7844, %rd7803, %rd7779;
	and.b64  	%rd7845, %rd7827, %rd7844;
	xor.b64  	%rd7846, %rd7845, %rd7779;
	ld.local.u64 	%rd18454, [%rd1+96];
	add.s64 	%rd7847, %rd7755, %rd18454;
	add.s64 	%rd7848, %rd7847, %rd18334;
	add.s64 	%rd7849, %rd7848, %rd7846;
	add.s64 	%rd7850, %rd7849, %rd7843;
	add.s64 	%rd7851, %rd7850, %rd7766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5045,%dummy}, %rd7838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5046}, %rd7838;
	}
	shf.r.wrap.b32 	%r5047, %r5046, %r5045, 28;
	shf.r.wrap.b32 	%r5048, %r5045, %r5046, 28;
	mov.b64 	%rd7852, {%r5048, %r5047};
	shf.l.wrap.b32 	%r5049, %r5045, %r5046, 30;
	shf.l.wrap.b32 	%r5050, %r5046, %r5045, 30;
	mov.b64 	%rd7853, {%r5050, %r5049};
	xor.b64  	%rd7854, %rd7853, %rd7852;
	shf.l.wrap.b32 	%r5051, %r5045, %r5046, 25;
	shf.l.wrap.b32 	%r5052, %r5046, %r5045, 25;
	mov.b64 	%rd7855, {%r5052, %r5051};
	xor.b64  	%rd7856, %rd7854, %rd7855;
	and.b64  	%rd7857, %rd7838, %rd7814;
	xor.b64  	%rd7858, %rd7838, %rd7814;
	and.b64  	%rd7859, %rd7858, %rd7790;
	or.b64  	%rd7860, %rd7859, %rd7857;
	add.s64 	%rd7861, %rd7850, %rd7860;
	add.s64 	%rd7862, %rd7861, %rd7856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5053,%dummy}, %rd7851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5054}, %rd7851;
	}
	shf.r.wrap.b32 	%r5055, %r5054, %r5053, 14;
	shf.r.wrap.b32 	%r5056, %r5053, %r5054, 14;
	mov.b64 	%rd7863, {%r5056, %r5055};
	shf.r.wrap.b32 	%r5057, %r5054, %r5053, 18;
	shf.r.wrap.b32 	%r5058, %r5053, %r5054, 18;
	mov.b64 	%rd7864, {%r5058, %r5057};
	xor.b64  	%rd7865, %rd7864, %rd7863;
	shf.l.wrap.b32 	%r5059, %r5053, %r5054, 23;
	shf.l.wrap.b32 	%r5060, %r5054, %r5053, 23;
	mov.b64 	%rd7866, {%r5060, %r5059};
	xor.b64  	%rd7867, %rd7865, %rd7866;
	xor.b64  	%rd7868, %rd7827, %rd7803;
	and.b64  	%rd7869, %rd7851, %rd7868;
	xor.b64  	%rd7870, %rd7869, %rd7803;
	ld.local.u64 	%rd18455, [%rd1+104];
	add.s64 	%rd7871, %rd7779, %rd18455;
	add.s64 	%rd7872, %rd7871, %rd18333;
	add.s64 	%rd7873, %rd7872, %rd7870;
	add.s64 	%rd7874, %rd7873, %rd7867;
	add.s64 	%rd7875, %rd7874, %rd7790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5061,%dummy}, %rd7862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5062}, %rd7862;
	}
	shf.r.wrap.b32 	%r5063, %r5062, %r5061, 28;
	shf.r.wrap.b32 	%r5064, %r5061, %r5062, 28;
	mov.b64 	%rd7876, {%r5064, %r5063};
	shf.l.wrap.b32 	%r5065, %r5061, %r5062, 30;
	shf.l.wrap.b32 	%r5066, %r5062, %r5061, 30;
	mov.b64 	%rd7877, {%r5066, %r5065};
	xor.b64  	%rd7878, %rd7877, %rd7876;
	shf.l.wrap.b32 	%r5067, %r5061, %r5062, 25;
	shf.l.wrap.b32 	%r5068, %r5062, %r5061, 25;
	mov.b64 	%rd7879, {%r5068, %r5067};
	xor.b64  	%rd7880, %rd7878, %rd7879;
	and.b64  	%rd7881, %rd7862, %rd7838;
	xor.b64  	%rd7882, %rd7862, %rd7838;
	and.b64  	%rd7883, %rd7882, %rd7814;
	or.b64  	%rd7884, %rd7883, %rd7881;
	add.s64 	%rd7885, %rd7874, %rd7884;
	add.s64 	%rd7886, %rd7885, %rd7880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5069,%dummy}, %rd7875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5070}, %rd7875;
	}
	shf.r.wrap.b32 	%r5071, %r5070, %r5069, 14;
	shf.r.wrap.b32 	%r5072, %r5069, %r5070, 14;
	mov.b64 	%rd7887, {%r5072, %r5071};
	shf.r.wrap.b32 	%r5073, %r5070, %r5069, 18;
	shf.r.wrap.b32 	%r5074, %r5069, %r5070, 18;
	mov.b64 	%rd7888, {%r5074, %r5073};
	xor.b64  	%rd7889, %rd7888, %rd7887;
	shf.l.wrap.b32 	%r5075, %r5069, %r5070, 23;
	shf.l.wrap.b32 	%r5076, %r5070, %r5069, 23;
	mov.b64 	%rd7890, {%r5076, %r5075};
	xor.b64  	%rd7891, %rd7889, %rd7890;
	xor.b64  	%rd7892, %rd7851, %rd7827;
	and.b64  	%rd7893, %rd7875, %rd7892;
	xor.b64  	%rd7894, %rd7893, %rd7827;
	ld.local.u64 	%rd18456, [%rd1+112];
	add.s64 	%rd7895, %rd7803, %rd18456;
	add.s64 	%rd7896, %rd7895, %rd18332;
	add.s64 	%rd7897, %rd7896, %rd7894;
	add.s64 	%rd7898, %rd7897, %rd7891;
	add.s64 	%rd7899, %rd7898, %rd7814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5077,%dummy}, %rd7886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5078}, %rd7886;
	}
	shf.r.wrap.b32 	%r5079, %r5078, %r5077, 28;
	shf.r.wrap.b32 	%r5080, %r5077, %r5078, 28;
	mov.b64 	%rd7900, {%r5080, %r5079};
	shf.l.wrap.b32 	%r5081, %r5077, %r5078, 30;
	shf.l.wrap.b32 	%r5082, %r5078, %r5077, 30;
	mov.b64 	%rd7901, {%r5082, %r5081};
	xor.b64  	%rd7902, %rd7901, %rd7900;
	shf.l.wrap.b32 	%r5083, %r5077, %r5078, 25;
	shf.l.wrap.b32 	%r5084, %r5078, %r5077, 25;
	mov.b64 	%rd7903, {%r5084, %r5083};
	xor.b64  	%rd7904, %rd7902, %rd7903;
	and.b64  	%rd7905, %rd7886, %rd7862;
	xor.b64  	%rd7906, %rd7886, %rd7862;
	and.b64  	%rd7907, %rd7906, %rd7838;
	or.b64  	%rd7908, %rd7907, %rd7905;
	add.s64 	%rd7909, %rd7898, %rd7908;
	add.s64 	%rd7910, %rd7909, %rd7904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5085,%dummy}, %rd7899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5086}, %rd7899;
	}
	shf.r.wrap.b32 	%r5087, %r5086, %r5085, 14;
	shf.r.wrap.b32 	%r5088, %r5085, %r5086, 14;
	mov.b64 	%rd7911, {%r5088, %r5087};
	shf.r.wrap.b32 	%r5089, %r5086, %r5085, 18;
	shf.r.wrap.b32 	%r5090, %r5085, %r5086, 18;
	mov.b64 	%rd7912, {%r5090, %r5089};
	xor.b64  	%rd7913, %rd7912, %rd7911;
	shf.l.wrap.b32 	%r5091, %r5085, %r5086, 23;
	shf.l.wrap.b32 	%r5092, %r5086, %r5085, 23;
	mov.b64 	%rd7914, {%r5092, %r5091};
	xor.b64  	%rd7915, %rd7913, %rd7914;
	xor.b64  	%rd7916, %rd7875, %rd7851;
	and.b64  	%rd7917, %rd7899, %rd7916;
	xor.b64  	%rd7918, %rd7917, %rd7851;
	ld.local.u64 	%rd18457, [%rd1+120];
	add.s64 	%rd7919, %rd7827, %rd18457;
	add.s64 	%rd7920, %rd7919, %rd18331;
	add.s64 	%rd7921, %rd7920, %rd7918;
	add.s64 	%rd7922, %rd7921, %rd7915;
	add.s64 	%rd7923, %rd7922, %rd7838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5093,%dummy}, %rd7910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5094}, %rd7910;
	}
	shf.r.wrap.b32 	%r5095, %r5094, %r5093, 28;
	shf.r.wrap.b32 	%r5096, %r5093, %r5094, 28;
	mov.b64 	%rd7924, {%r5096, %r5095};
	shf.l.wrap.b32 	%r5097, %r5093, %r5094, 30;
	shf.l.wrap.b32 	%r5098, %r5094, %r5093, 30;
	mov.b64 	%rd7925, {%r5098, %r5097};
	xor.b64  	%rd7926, %rd7925, %rd7924;
	shf.l.wrap.b32 	%r5099, %r5093, %r5094, 25;
	shf.l.wrap.b32 	%r5100, %r5094, %r5093, 25;
	mov.b64 	%rd7927, {%r5100, %r5099};
	xor.b64  	%rd7928, %rd7926, %rd7927;
	and.b64  	%rd7929, %rd7910, %rd7886;
	xor.b64  	%rd7930, %rd7910, %rd7886;
	and.b64  	%rd7931, %rd7930, %rd7862;
	or.b64  	%rd7932, %rd7931, %rd7929;
	add.s64 	%rd7933, %rd7922, %rd7932;
	add.s64 	%rd7934, %rd7933, %rd7928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5101,%dummy}, %rd7923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5102}, %rd7923;
	}
	shf.r.wrap.b32 	%r5103, %r5102, %r5101, 14;
	shf.r.wrap.b32 	%r5104, %r5101, %r5102, 14;
	mov.b64 	%rd7935, {%r5104, %r5103};
	shf.r.wrap.b32 	%r5105, %r5102, %r5101, 18;
	shf.r.wrap.b32 	%r5106, %r5101, %r5102, 18;
	mov.b64 	%rd7936, {%r5106, %r5105};
	xor.b64  	%rd7937, %rd7936, %rd7935;
	shf.l.wrap.b32 	%r5107, %r5101, %r5102, 23;
	shf.l.wrap.b32 	%r5108, %r5102, %r5101, 23;
	mov.b64 	%rd7938, {%r5108, %r5107};
	xor.b64  	%rd7939, %rd7937, %rd7938;
	xor.b64  	%rd7940, %rd7899, %rd7875;
	and.b64  	%rd7941, %rd7923, %rd7940;
	xor.b64  	%rd7942, %rd7941, %rd7875;
	ld.local.u64 	%rd18441, [%rd1+128];
	add.s64 	%rd7943, %rd7851, %rd18441;
	add.s64 	%rd7944, %rd7943, %rd18330;
	add.s64 	%rd7945, %rd7944, %rd7942;
	add.s64 	%rd7946, %rd7945, %rd7939;
	add.s64 	%rd7947, %rd7946, %rd7862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5109,%dummy}, %rd7934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5110}, %rd7934;
	}
	shf.r.wrap.b32 	%r5111, %r5110, %r5109, 28;
	shf.r.wrap.b32 	%r5112, %r5109, %r5110, 28;
	mov.b64 	%rd7948, {%r5112, %r5111};
	shf.l.wrap.b32 	%r5113, %r5109, %r5110, 30;
	shf.l.wrap.b32 	%r5114, %r5110, %r5109, 30;
	mov.b64 	%rd7949, {%r5114, %r5113};
	xor.b64  	%rd7950, %rd7949, %rd7948;
	shf.l.wrap.b32 	%r5115, %r5109, %r5110, 25;
	shf.l.wrap.b32 	%r5116, %r5110, %r5109, 25;
	mov.b64 	%rd7951, {%r5116, %r5115};
	xor.b64  	%rd7952, %rd7950, %rd7951;
	and.b64  	%rd7953, %rd7934, %rd7910;
	xor.b64  	%rd7954, %rd7934, %rd7910;
	and.b64  	%rd7955, %rd7954, %rd7886;
	or.b64  	%rd7956, %rd7955, %rd7953;
	add.s64 	%rd7957, %rd7946, %rd7956;
	add.s64 	%rd7958, %rd7957, %rd7952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5117,%dummy}, %rd7947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5118}, %rd7947;
	}
	shf.r.wrap.b32 	%r5119, %r5118, %r5117, 14;
	shf.r.wrap.b32 	%r5120, %r5117, %r5118, 14;
	mov.b64 	%rd7959, {%r5120, %r5119};
	shf.r.wrap.b32 	%r5121, %r5118, %r5117, 18;
	shf.r.wrap.b32 	%r5122, %r5117, %r5118, 18;
	mov.b64 	%rd7960, {%r5122, %r5121};
	xor.b64  	%rd7961, %rd7960, %rd7959;
	shf.l.wrap.b32 	%r5123, %r5117, %r5118, 23;
	shf.l.wrap.b32 	%r5124, %r5118, %r5117, 23;
	mov.b64 	%rd7962, {%r5124, %r5123};
	xor.b64  	%rd7963, %rd7961, %rd7962;
	xor.b64  	%rd7964, %rd7923, %rd7899;
	and.b64  	%rd7965, %rd7947, %rd7964;
	xor.b64  	%rd7966, %rd7965, %rd7899;
	ld.local.u64 	%rd18440, [%rd1+136];
	add.s64 	%rd7967, %rd7875, %rd18440;
	add.s64 	%rd7968, %rd7967, %rd18329;
	add.s64 	%rd7969, %rd7968, %rd7966;
	add.s64 	%rd7970, %rd7969, %rd7963;
	add.s64 	%rd7971, %rd7970, %rd7886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5125,%dummy}, %rd7958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5126}, %rd7958;
	}
	shf.r.wrap.b32 	%r5127, %r5126, %r5125, 28;
	shf.r.wrap.b32 	%r5128, %r5125, %r5126, 28;
	mov.b64 	%rd7972, {%r5128, %r5127};
	shf.l.wrap.b32 	%r5129, %r5125, %r5126, 30;
	shf.l.wrap.b32 	%r5130, %r5126, %r5125, 30;
	mov.b64 	%rd7973, {%r5130, %r5129};
	xor.b64  	%rd7974, %rd7973, %rd7972;
	shf.l.wrap.b32 	%r5131, %r5125, %r5126, 25;
	shf.l.wrap.b32 	%r5132, %r5126, %r5125, 25;
	mov.b64 	%rd7975, {%r5132, %r5131};
	xor.b64  	%rd7976, %rd7974, %rd7975;
	and.b64  	%rd7977, %rd7958, %rd7934;
	xor.b64  	%rd7978, %rd7958, %rd7934;
	and.b64  	%rd7979, %rd7978, %rd7910;
	or.b64  	%rd7980, %rd7979, %rd7977;
	add.s64 	%rd7981, %rd7970, %rd7980;
	add.s64 	%rd7982, %rd7981, %rd7976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5133,%dummy}, %rd7971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5134}, %rd7971;
	}
	shf.r.wrap.b32 	%r5135, %r5134, %r5133, 14;
	shf.r.wrap.b32 	%r5136, %r5133, %r5134, 14;
	mov.b64 	%rd7983, {%r5136, %r5135};
	shf.r.wrap.b32 	%r5137, %r5134, %r5133, 18;
	shf.r.wrap.b32 	%r5138, %r5133, %r5134, 18;
	mov.b64 	%rd7984, {%r5138, %r5137};
	xor.b64  	%rd7985, %rd7984, %rd7983;
	shf.l.wrap.b32 	%r5139, %r5133, %r5134, 23;
	shf.l.wrap.b32 	%r5140, %r5134, %r5133, 23;
	mov.b64 	%rd7986, {%r5140, %r5139};
	xor.b64  	%rd7987, %rd7985, %rd7986;
	xor.b64  	%rd7988, %rd7947, %rd7923;
	and.b64  	%rd7989, %rd7971, %rd7988;
	xor.b64  	%rd7990, %rd7989, %rd7923;
	ld.local.u64 	%rd18439, [%rd1+144];
	add.s64 	%rd7991, %rd7899, %rd18439;
	add.s64 	%rd7992, %rd7991, %rd18328;
	add.s64 	%rd7993, %rd7992, %rd7990;
	add.s64 	%rd7994, %rd7993, %rd7987;
	add.s64 	%rd7995, %rd7994, %rd7910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5141,%dummy}, %rd7982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5142}, %rd7982;
	}
	shf.r.wrap.b32 	%r5143, %r5142, %r5141, 28;
	shf.r.wrap.b32 	%r5144, %r5141, %r5142, 28;
	mov.b64 	%rd7996, {%r5144, %r5143};
	shf.l.wrap.b32 	%r5145, %r5141, %r5142, 30;
	shf.l.wrap.b32 	%r5146, %r5142, %r5141, 30;
	mov.b64 	%rd7997, {%r5146, %r5145};
	xor.b64  	%rd7998, %rd7997, %rd7996;
	shf.l.wrap.b32 	%r5147, %r5141, %r5142, 25;
	shf.l.wrap.b32 	%r5148, %r5142, %r5141, 25;
	mov.b64 	%rd7999, {%r5148, %r5147};
	xor.b64  	%rd8000, %rd7998, %rd7999;
	and.b64  	%rd8001, %rd7982, %rd7958;
	xor.b64  	%rd8002, %rd7982, %rd7958;
	and.b64  	%rd8003, %rd8002, %rd7934;
	or.b64  	%rd8004, %rd8003, %rd8001;
	add.s64 	%rd8005, %rd7994, %rd8004;
	add.s64 	%rd8006, %rd8005, %rd8000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5149,%dummy}, %rd7995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5150}, %rd7995;
	}
	shf.r.wrap.b32 	%r5151, %r5150, %r5149, 14;
	shf.r.wrap.b32 	%r5152, %r5149, %r5150, 14;
	mov.b64 	%rd8007, {%r5152, %r5151};
	shf.r.wrap.b32 	%r5153, %r5150, %r5149, 18;
	shf.r.wrap.b32 	%r5154, %r5149, %r5150, 18;
	mov.b64 	%rd8008, {%r5154, %r5153};
	xor.b64  	%rd8009, %rd8008, %rd8007;
	shf.l.wrap.b32 	%r5155, %r5149, %r5150, 23;
	shf.l.wrap.b32 	%r5156, %r5150, %r5149, 23;
	mov.b64 	%rd8010, {%r5156, %r5155};
	xor.b64  	%rd8011, %rd8009, %rd8010;
	xor.b64  	%rd8012, %rd7971, %rd7947;
	and.b64  	%rd8013, %rd7995, %rd8012;
	xor.b64  	%rd8014, %rd8013, %rd7947;
	ld.local.u64 	%rd18438, [%rd1+152];
	add.s64 	%rd8015, %rd7923, %rd18438;
	add.s64 	%rd8016, %rd8015, %rd18327;
	add.s64 	%rd8017, %rd8016, %rd8014;
	add.s64 	%rd8018, %rd8017, %rd8011;
	add.s64 	%rd8019, %rd8018, %rd7934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5157,%dummy}, %rd8006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5158}, %rd8006;
	}
	shf.r.wrap.b32 	%r5159, %r5158, %r5157, 28;
	shf.r.wrap.b32 	%r5160, %r5157, %r5158, 28;
	mov.b64 	%rd8020, {%r5160, %r5159};
	shf.l.wrap.b32 	%r5161, %r5157, %r5158, 30;
	shf.l.wrap.b32 	%r5162, %r5158, %r5157, 30;
	mov.b64 	%rd8021, {%r5162, %r5161};
	xor.b64  	%rd8022, %rd8021, %rd8020;
	shf.l.wrap.b32 	%r5163, %r5157, %r5158, 25;
	shf.l.wrap.b32 	%r5164, %r5158, %r5157, 25;
	mov.b64 	%rd8023, {%r5164, %r5163};
	xor.b64  	%rd8024, %rd8022, %rd8023;
	and.b64  	%rd8025, %rd8006, %rd7982;
	xor.b64  	%rd8026, %rd8006, %rd7982;
	and.b64  	%rd8027, %rd8026, %rd7958;
	or.b64  	%rd8028, %rd8027, %rd8025;
	add.s64 	%rd8029, %rd8018, %rd8028;
	add.s64 	%rd8030, %rd8029, %rd8024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5165,%dummy}, %rd8019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5166}, %rd8019;
	}
	shf.r.wrap.b32 	%r5167, %r5166, %r5165, 14;
	shf.r.wrap.b32 	%r5168, %r5165, %r5166, 14;
	mov.b64 	%rd8031, {%r5168, %r5167};
	shf.r.wrap.b32 	%r5169, %r5166, %r5165, 18;
	shf.r.wrap.b32 	%r5170, %r5165, %r5166, 18;
	mov.b64 	%rd8032, {%r5170, %r5169};
	xor.b64  	%rd8033, %rd8032, %rd8031;
	shf.l.wrap.b32 	%r5171, %r5165, %r5166, 23;
	shf.l.wrap.b32 	%r5172, %r5166, %r5165, 23;
	mov.b64 	%rd8034, {%r5172, %r5171};
	xor.b64  	%rd8035, %rd8033, %rd8034;
	xor.b64  	%rd8036, %rd7995, %rd7971;
	and.b64  	%rd8037, %rd8019, %rd8036;
	xor.b64  	%rd8038, %rd8037, %rd7971;
	ld.local.u64 	%rd18437, [%rd1+160];
	add.s64 	%rd8039, %rd7947, %rd18437;
	add.s64 	%rd8040, %rd8039, %rd18326;
	add.s64 	%rd8041, %rd8040, %rd8038;
	add.s64 	%rd8042, %rd8041, %rd8035;
	add.s64 	%rd18449, %rd8042, %rd7958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5173,%dummy}, %rd8030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5174}, %rd8030;
	}
	shf.r.wrap.b32 	%r5175, %r5174, %r5173, 28;
	shf.r.wrap.b32 	%r5176, %r5173, %r5174, 28;
	mov.b64 	%rd8043, {%r5176, %r5175};
	shf.l.wrap.b32 	%r5177, %r5173, %r5174, 30;
	shf.l.wrap.b32 	%r5178, %r5174, %r5173, 30;
	mov.b64 	%rd8044, {%r5178, %r5177};
	xor.b64  	%rd8045, %rd8044, %rd8043;
	shf.l.wrap.b32 	%r5179, %r5173, %r5174, 25;
	shf.l.wrap.b32 	%r5180, %r5174, %r5173, 25;
	mov.b64 	%rd8046, {%r5180, %r5179};
	xor.b64  	%rd8047, %rd8045, %rd8046;
	and.b64  	%rd8048, %rd8030, %rd8006;
	xor.b64  	%rd8049, %rd8030, %rd8006;
	and.b64  	%rd8050, %rd8049, %rd7982;
	or.b64  	%rd8051, %rd8050, %rd8048;
	add.s64 	%rd8052, %rd8042, %rd8051;
	add.s64 	%rd18445, %rd8052, %rd8047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5181,%dummy}, %rd18449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5182}, %rd18449;
	}
	shf.r.wrap.b32 	%r5183, %r5182, %r5181, 14;
	shf.r.wrap.b32 	%r5184, %r5181, %r5182, 14;
	mov.b64 	%rd8053, {%r5184, %r5183};
	shf.r.wrap.b32 	%r5185, %r5182, %r5181, 18;
	shf.r.wrap.b32 	%r5186, %r5181, %r5182, 18;
	mov.b64 	%rd8054, {%r5186, %r5185};
	xor.b64  	%rd8055, %rd8054, %rd8053;
	shf.l.wrap.b32 	%r5187, %r5181, %r5182, 23;
	shf.l.wrap.b32 	%r5188, %r5182, %r5181, 23;
	mov.b64 	%rd8056, {%r5188, %r5187};
	xor.b64  	%rd8057, %rd8055, %rd8056;
	xor.b64  	%rd8058, %rd8019, %rd7995;
	and.b64  	%rd8059, %rd18449, %rd8058;
	xor.b64  	%rd8060, %rd8059, %rd7995;
	ld.local.u64 	%rd18436, [%rd1+168];
	add.s64 	%rd8061, %rd7971, %rd18436;
	add.s64 	%rd8062, %rd8061, %rd18325;
	add.s64 	%rd8063, %rd8062, %rd8060;
	add.s64 	%rd8064, %rd8063, %rd8057;
	add.s64 	%rd18448, %rd8064, %rd7982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5189,%dummy}, %rd18445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5190}, %rd18445;
	}
	shf.r.wrap.b32 	%r5191, %r5190, %r5189, 28;
	shf.r.wrap.b32 	%r5192, %r5189, %r5190, 28;
	mov.b64 	%rd8065, {%r5192, %r5191};
	shf.l.wrap.b32 	%r5193, %r5189, %r5190, 30;
	shf.l.wrap.b32 	%r5194, %r5190, %r5189, 30;
	mov.b64 	%rd8066, {%r5194, %r5193};
	xor.b64  	%rd8067, %rd8066, %rd8065;
	shf.l.wrap.b32 	%r5195, %r5189, %r5190, 25;
	shf.l.wrap.b32 	%r5196, %r5190, %r5189, 25;
	mov.b64 	%rd8068, {%r5196, %r5195};
	xor.b64  	%rd8069, %rd8067, %rd8068;
	and.b64  	%rd8070, %rd18445, %rd8030;
	xor.b64  	%rd8071, %rd18445, %rd8030;
	and.b64  	%rd8072, %rd8071, %rd8006;
	or.b64  	%rd8073, %rd8072, %rd8070;
	add.s64 	%rd8074, %rd8064, %rd8073;
	add.s64 	%rd18444, %rd8074, %rd8069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5197,%dummy}, %rd18448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5198}, %rd18448;
	}
	shf.r.wrap.b32 	%r5199, %r5198, %r5197, 14;
	shf.r.wrap.b32 	%r5200, %r5197, %r5198, 14;
	mov.b64 	%rd8075, {%r5200, %r5199};
	shf.r.wrap.b32 	%r5201, %r5198, %r5197, 18;
	shf.r.wrap.b32 	%r5202, %r5197, %r5198, 18;
	mov.b64 	%rd8076, {%r5202, %r5201};
	xor.b64  	%rd8077, %rd8076, %rd8075;
	shf.l.wrap.b32 	%r5203, %r5197, %r5198, 23;
	shf.l.wrap.b32 	%r5204, %r5198, %r5197, 23;
	mov.b64 	%rd8078, {%r5204, %r5203};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	xor.b64  	%rd8080, %rd18449, %rd8019;
	and.b64  	%rd8081, %rd18448, %rd8080;
	xor.b64  	%rd8082, %rd8081, %rd8019;
	ld.local.u64 	%rd18435, [%rd1+176];
	add.s64 	%rd8083, %rd7995, %rd18435;
	add.s64 	%rd8084, %rd8083, %rd18324;
	add.s64 	%rd8085, %rd8084, %rd8082;
	add.s64 	%rd8086, %rd8085, %rd8079;
	add.s64 	%rd18447, %rd8086, %rd8006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5205,%dummy}, %rd18444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5206}, %rd18444;
	}
	shf.r.wrap.b32 	%r5207, %r5206, %r5205, 28;
	shf.r.wrap.b32 	%r5208, %r5205, %r5206, 28;
	mov.b64 	%rd8087, {%r5208, %r5207};
	shf.l.wrap.b32 	%r5209, %r5205, %r5206, 30;
	shf.l.wrap.b32 	%r5210, %r5206, %r5205, 30;
	mov.b64 	%rd8088, {%r5210, %r5209};
	xor.b64  	%rd8089, %rd8088, %rd8087;
	shf.l.wrap.b32 	%r5211, %r5205, %r5206, 25;
	shf.l.wrap.b32 	%r5212, %r5206, %r5205, 25;
	mov.b64 	%rd8090, {%r5212, %r5211};
	xor.b64  	%rd8091, %rd8089, %rd8090;
	and.b64  	%rd8092, %rd18444, %rd18445;
	xor.b64  	%rd8093, %rd18444, %rd18445;
	and.b64  	%rd8094, %rd8093, %rd8030;
	or.b64  	%rd8095, %rd8094, %rd8092;
	add.s64 	%rd8096, %rd8086, %rd8095;
	add.s64 	%rd18443, %rd8096, %rd8091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5213,%dummy}, %rd18447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5214}, %rd18447;
	}
	shf.r.wrap.b32 	%r5215, %r5214, %r5213, 14;
	shf.r.wrap.b32 	%r5216, %r5213, %r5214, 14;
	mov.b64 	%rd8097, {%r5216, %r5215};
	shf.r.wrap.b32 	%r5217, %r5214, %r5213, 18;
	shf.r.wrap.b32 	%r5218, %r5213, %r5214, 18;
	mov.b64 	%rd8098, {%r5218, %r5217};
	xor.b64  	%rd8099, %rd8098, %rd8097;
	shf.l.wrap.b32 	%r5219, %r5213, %r5214, 23;
	shf.l.wrap.b32 	%r5220, %r5214, %r5213, 23;
	mov.b64 	%rd8100, {%r5220, %r5219};
	xor.b64  	%rd8101, %rd8099, %rd8100;
	xor.b64  	%rd8102, %rd18448, %rd18449;
	and.b64  	%rd8103, %rd18447, %rd8102;
	xor.b64  	%rd8104, %rd8103, %rd18449;
	ld.local.u64 	%rd18434, [%rd1+184];
	add.s64 	%rd8105, %rd8019, %rd18434;
	add.s64 	%rd8106, %rd8105, %rd18323;
	add.s64 	%rd8107, %rd8106, %rd8104;
	add.s64 	%rd8108, %rd8107, %rd8101;
	add.s64 	%rd18446, %rd8108, %rd8030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5221,%dummy}, %rd18443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5222}, %rd18443;
	}
	shf.r.wrap.b32 	%r5223, %r5222, %r5221, 28;
	shf.r.wrap.b32 	%r5224, %r5221, %r5222, 28;
	mov.b64 	%rd8109, {%r5224, %r5223};
	shf.l.wrap.b32 	%r5225, %r5221, %r5222, 30;
	shf.l.wrap.b32 	%r5226, %r5222, %r5221, 30;
	mov.b64 	%rd8110, {%r5226, %r5225};
	xor.b64  	%rd8111, %rd8110, %rd8109;
	shf.l.wrap.b32 	%r5227, %r5221, %r5222, 25;
	shf.l.wrap.b32 	%r5228, %r5222, %r5221, 25;
	mov.b64 	%rd8112, {%r5228, %r5227};
	xor.b64  	%rd8113, %rd8111, %rd8112;
	and.b64  	%rd8114, %rd18443, %rd18444;
	xor.b64  	%rd8115, %rd18443, %rd18444;
	and.b64  	%rd8116, %rd8115, %rd18445;
	or.b64  	%rd8117, %rd8116, %rd8114;
	add.s64 	%rd8118, %rd8108, %rd8117;
	add.s64 	%rd18442, %rd8118, %rd8113;
	mov.u32 	%r12634, 16;

BB0_134:
	mov.u64 	%rd18235, k_sha512;
	shr.u64 	%rd8119, %rd18435, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd18435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd18435;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 19;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 19;
	mov.b64 	%rd8120, {%r5232, %r5231};
	xor.b64  	%rd8121, %rd8120, %rd8119;
	shf.l.wrap.b32 	%r5233, %r5229, %r5230, 3;
	shf.l.wrap.b32 	%r5234, %r5230, %r5229, 3;
	mov.b64 	%rd8122, {%r5234, %r5233};
	xor.b64  	%rd8123, %rd8121, %rd8122;
	shr.u64 	%rd8124, %rd18451, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5235,%dummy}, %rd18451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5236}, %rd18451;
	}
	shf.r.wrap.b32 	%r5237, %r5236, %r5235, 1;
	shf.r.wrap.b32 	%r5238, %r5235, %r5236, 1;
	mov.b64 	%rd8125, {%r5238, %r5237};
	xor.b64  	%rd8126, %rd8125, %rd8124;
	shf.r.wrap.b32 	%r5239, %r5236, %r5235, 8;
	shf.r.wrap.b32 	%r5240, %r5235, %r5236, 8;
	mov.b64 	%rd8127, {%r5240, %r5239};
	xor.b64  	%rd8128, %rd8126, %rd8127;
	add.s64 	%rd8129, %rd18440, %rd18450;
	add.s64 	%rd8130, %rd8129, %rd8123;
	add.s64 	%rd18450, %rd8130, %rd8128;
	shr.u64 	%rd8131, %rd18434, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5241,%dummy}, %rd18434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5242}, %rd18434;
	}
	shf.r.wrap.b32 	%r5243, %r5242, %r5241, 19;
	shf.r.wrap.b32 	%r5244, %r5241, %r5242, 19;
	mov.b64 	%rd8132, {%r5244, %r5243};
	xor.b64  	%rd8133, %rd8132, %rd8131;
	shf.l.wrap.b32 	%r5245, %r5241, %r5242, 3;
	shf.l.wrap.b32 	%r5246, %r5242, %r5241, 3;
	mov.b64 	%rd8134, {%r5246, %r5245};
	xor.b64  	%rd8135, %rd8133, %rd8134;
	shr.u64 	%rd8136, %rd18452, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5247,%dummy}, %rd18452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5248}, %rd18452;
	}
	shf.r.wrap.b32 	%r5249, %r5248, %r5247, 1;
	shf.r.wrap.b32 	%r5250, %r5247, %r5248, 1;
	mov.b64 	%rd8137, {%r5250, %r5249};
	xor.b64  	%rd8138, %rd8137, %rd8136;
	shf.r.wrap.b32 	%r5251, %r5248, %r5247, 8;
	shf.r.wrap.b32 	%r5252, %r5247, %r5248, 8;
	mov.b64 	%rd8139, {%r5252, %r5251};
	xor.b64  	%rd8140, %rd8138, %rd8139;
	add.s64 	%rd8141, %rd18439, %rd18451;
	add.s64 	%rd8142, %rd8141, %rd8135;
	add.s64 	%rd18451, %rd8142, %rd8140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5253,%dummy}, %rd18450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5254}, %rd18450;
	}
	shf.r.wrap.b32 	%r5255, %r5254, %r5253, 19;
	shf.r.wrap.b32 	%r5256, %r5253, %r5254, 19;
	mov.b64 	%rd8143, {%r5256, %r5255};
	shf.l.wrap.b32 	%r5257, %r5253, %r5254, 3;
	shf.l.wrap.b32 	%r5258, %r5254, %r5253, 3;
	mov.b64 	%rd8144, {%r5258, %r5257};
	shr.u64 	%rd8145, %rd18450, 6;
	xor.b64  	%rd8146, %rd8143, %rd8145;
	xor.b64  	%rd8147, %rd8146, %rd8144;
	shr.u64 	%rd8148, %rd18453, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5259,%dummy}, %rd18453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5260}, %rd18453;
	}
	shf.r.wrap.b32 	%r5261, %r5260, %r5259, 1;
	shf.r.wrap.b32 	%r5262, %r5259, %r5260, 1;
	mov.b64 	%rd8149, {%r5262, %r5261};
	xor.b64  	%rd8150, %rd8149, %rd8148;
	shf.r.wrap.b32 	%r5263, %r5260, %r5259, 8;
	shf.r.wrap.b32 	%r5264, %r5259, %r5260, 8;
	mov.b64 	%rd8151, {%r5264, %r5263};
	xor.b64  	%rd8152, %rd8150, %rd8151;
	add.s64 	%rd8153, %rd18438, %rd18452;
	add.s64 	%rd8154, %rd8153, %rd8147;
	add.s64 	%rd18452, %rd8154, %rd8152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5265,%dummy}, %rd18451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5266}, %rd18451;
	}
	shf.r.wrap.b32 	%r5267, %r5266, %r5265, 19;
	shf.r.wrap.b32 	%r5268, %r5265, %r5266, 19;
	mov.b64 	%rd8155, {%r5268, %r5267};
	shf.l.wrap.b32 	%r5269, %r5265, %r5266, 3;
	shf.l.wrap.b32 	%r5270, %r5266, %r5265, 3;
	mov.b64 	%rd8156, {%r5270, %r5269};
	shr.u64 	%rd8157, %rd18451, 6;
	xor.b64  	%rd8158, %rd8155, %rd8157;
	xor.b64  	%rd8159, %rd8158, %rd8156;
	shr.u64 	%rd8160, %rd18454, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5271,%dummy}, %rd18454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5272}, %rd18454;
	}
	shf.r.wrap.b32 	%r5273, %r5272, %r5271, 1;
	shf.r.wrap.b32 	%r5274, %r5271, %r5272, 1;
	mov.b64 	%rd8161, {%r5274, %r5273};
	xor.b64  	%rd8162, %rd8161, %rd8160;
	shf.r.wrap.b32 	%r5275, %r5272, %r5271, 8;
	shf.r.wrap.b32 	%r5276, %r5271, %r5272, 8;
	mov.b64 	%rd8163, {%r5276, %r5275};
	xor.b64  	%rd8164, %rd8162, %rd8163;
	add.s64 	%rd8165, %rd18437, %rd18453;
	add.s64 	%rd8166, %rd8165, %rd8159;
	add.s64 	%rd18453, %rd8166, %rd8164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd18452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5278}, %rd18452;
	}
	shf.r.wrap.b32 	%r5279, %r5278, %r5277, 19;
	shf.r.wrap.b32 	%r5280, %r5277, %r5278, 19;
	mov.b64 	%rd8167, {%r5280, %r5279};
	shf.l.wrap.b32 	%r5281, %r5277, %r5278, 3;
	shf.l.wrap.b32 	%r5282, %r5278, %r5277, 3;
	mov.b64 	%rd8168, {%r5282, %r5281};
	shr.u64 	%rd8169, %rd18452, 6;
	xor.b64  	%rd8170, %rd8167, %rd8169;
	xor.b64  	%rd8171, %rd8170, %rd8168;
	shr.u64 	%rd8172, %rd18455, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5283,%dummy}, %rd18455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5284}, %rd18455;
	}
	shf.r.wrap.b32 	%r5285, %r5284, %r5283, 1;
	shf.r.wrap.b32 	%r5286, %r5283, %r5284, 1;
	mov.b64 	%rd8173, {%r5286, %r5285};
	xor.b64  	%rd8174, %rd8173, %rd8172;
	shf.r.wrap.b32 	%r5287, %r5284, %r5283, 8;
	shf.r.wrap.b32 	%r5288, %r5283, %r5284, 8;
	mov.b64 	%rd8175, {%r5288, %r5287};
	xor.b64  	%rd8176, %rd8174, %rd8175;
	add.s64 	%rd8177, %rd18436, %rd18454;
	add.s64 	%rd8178, %rd8177, %rd8171;
	add.s64 	%rd18454, %rd8178, %rd8176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5289,%dummy}, %rd18453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5290}, %rd18453;
	}
	shf.r.wrap.b32 	%r5291, %r5290, %r5289, 19;
	shf.r.wrap.b32 	%r5292, %r5289, %r5290, 19;
	mov.b64 	%rd8179, {%r5292, %r5291};
	shf.l.wrap.b32 	%r5293, %r5289, %r5290, 3;
	shf.l.wrap.b32 	%r5294, %r5290, %r5289, 3;
	mov.b64 	%rd8180, {%r5294, %r5293};
	shr.u64 	%rd8181, %rd18453, 6;
	xor.b64  	%rd8182, %rd8179, %rd8181;
	xor.b64  	%rd8183, %rd8182, %rd8180;
	shr.u64 	%rd8184, %rd18456, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5295,%dummy}, %rd18456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5296}, %rd18456;
	}
	shf.r.wrap.b32 	%r5297, %r5296, %r5295, 1;
	shf.r.wrap.b32 	%r5298, %r5295, %r5296, 1;
	mov.b64 	%rd8185, {%r5298, %r5297};
	xor.b64  	%rd8186, %rd8185, %rd8184;
	shf.r.wrap.b32 	%r5299, %r5296, %r5295, 8;
	shf.r.wrap.b32 	%r5300, %r5295, %r5296, 8;
	mov.b64 	%rd8187, {%r5300, %r5299};
	xor.b64  	%rd8188, %rd8186, %rd8187;
	add.s64 	%rd8189, %rd18435, %rd18455;
	add.s64 	%rd8190, %rd8189, %rd8183;
	add.s64 	%rd18455, %rd8190, %rd8188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5301,%dummy}, %rd18454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5302}, %rd18454;
	}
	shf.r.wrap.b32 	%r5303, %r5302, %r5301, 19;
	shf.r.wrap.b32 	%r5304, %r5301, %r5302, 19;
	mov.b64 	%rd8191, {%r5304, %r5303};
	shf.l.wrap.b32 	%r5305, %r5301, %r5302, 3;
	shf.l.wrap.b32 	%r5306, %r5302, %r5301, 3;
	mov.b64 	%rd8192, {%r5306, %r5305};
	shr.u64 	%rd8193, %rd18454, 6;
	xor.b64  	%rd8194, %rd8191, %rd8193;
	xor.b64  	%rd8195, %rd8194, %rd8192;
	shr.u64 	%rd8196, %rd18457, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5307,%dummy}, %rd18457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5308}, %rd18457;
	}
	shf.r.wrap.b32 	%r5309, %r5308, %r5307, 1;
	shf.r.wrap.b32 	%r5310, %r5307, %r5308, 1;
	mov.b64 	%rd8197, {%r5310, %r5309};
	xor.b64  	%rd8198, %rd8197, %rd8196;
	shf.r.wrap.b32 	%r5311, %r5308, %r5307, 8;
	shf.r.wrap.b32 	%r5312, %r5307, %r5308, 8;
	mov.b64 	%rd8199, {%r5312, %r5311};
	xor.b64  	%rd8200, %rd8198, %rd8199;
	add.s64 	%rd8201, %rd18434, %rd18456;
	add.s64 	%rd8202, %rd8201, %rd8195;
	add.s64 	%rd18456, %rd8202, %rd8200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5313,%dummy}, %rd18455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5314}, %rd18455;
	}
	shf.r.wrap.b32 	%r5315, %r5314, %r5313, 19;
	shf.r.wrap.b32 	%r5316, %r5313, %r5314, 19;
	mov.b64 	%rd8203, {%r5316, %r5315};
	shf.l.wrap.b32 	%r5317, %r5313, %r5314, 3;
	shf.l.wrap.b32 	%r5318, %r5314, %r5313, 3;
	mov.b64 	%rd8204, {%r5318, %r5317};
	shr.u64 	%rd8205, %rd18455, 6;
	xor.b64  	%rd8206, %rd8203, %rd8205;
	xor.b64  	%rd8207, %rd8206, %rd8204;
	shr.u64 	%rd8208, %rd18441, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5319,%dummy}, %rd18441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5320}, %rd18441;
	}
	shf.r.wrap.b32 	%r5321, %r5320, %r5319, 1;
	shf.r.wrap.b32 	%r5322, %r5319, %r5320, 1;
	mov.b64 	%rd8209, {%r5322, %r5321};
	xor.b64  	%rd8210, %rd8209, %rd8208;
	shf.r.wrap.b32 	%r5323, %r5320, %r5319, 8;
	shf.r.wrap.b32 	%r5324, %r5319, %r5320, 8;
	mov.b64 	%rd8211, {%r5324, %r5323};
	xor.b64  	%rd8212, %rd8210, %rd8211;
	add.s64 	%rd8213, %rd18450, %rd18457;
	add.s64 	%rd8214, %rd8213, %rd8207;
	add.s64 	%rd18457, %rd8214, %rd8212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5325,%dummy}, %rd18456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5326}, %rd18456;
	}
	shf.r.wrap.b32 	%r5327, %r5326, %r5325, 19;
	shf.r.wrap.b32 	%r5328, %r5325, %r5326, 19;
	mov.b64 	%rd8215, {%r5328, %r5327};
	shf.l.wrap.b32 	%r5329, %r5325, %r5326, 3;
	shf.l.wrap.b32 	%r5330, %r5326, %r5325, 3;
	mov.b64 	%rd8216, {%r5330, %r5329};
	shr.u64 	%rd8217, %rd18456, 6;
	xor.b64  	%rd8218, %rd8215, %rd8217;
	xor.b64  	%rd8219, %rd8218, %rd8216;
	shr.u64 	%rd8220, %rd18440, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5331,%dummy}, %rd18440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5332}, %rd18440;
	}
	shf.r.wrap.b32 	%r5333, %r5332, %r5331, 1;
	shf.r.wrap.b32 	%r5334, %r5331, %r5332, 1;
	mov.b64 	%rd8221, {%r5334, %r5333};
	xor.b64  	%rd8222, %rd8221, %rd8220;
	shf.r.wrap.b32 	%r5335, %r5332, %r5331, 8;
	shf.r.wrap.b32 	%r5336, %r5331, %r5332, 8;
	mov.b64 	%rd8223, {%r5336, %r5335};
	xor.b64  	%rd8224, %rd8222, %rd8223;
	add.s64 	%rd8225, %rd18451, %rd18441;
	add.s64 	%rd8226, %rd8225, %rd8219;
	add.s64 	%rd18441, %rd8226, %rd8224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5337,%dummy}, %rd18457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5338}, %rd18457;
	}
	shf.r.wrap.b32 	%r5339, %r5338, %r5337, 19;
	shf.r.wrap.b32 	%r5340, %r5337, %r5338, 19;
	mov.b64 	%rd8227, {%r5340, %r5339};
	shf.l.wrap.b32 	%r5341, %r5337, %r5338, 3;
	shf.l.wrap.b32 	%r5342, %r5338, %r5337, 3;
	mov.b64 	%rd8228, {%r5342, %r5341};
	shr.u64 	%rd8229, %rd18457, 6;
	xor.b64  	%rd8230, %rd8227, %rd8229;
	xor.b64  	%rd8231, %rd8230, %rd8228;
	shr.u64 	%rd8232, %rd18439, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5343,%dummy}, %rd18439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5344}, %rd18439;
	}
	shf.r.wrap.b32 	%r5345, %r5344, %r5343, 1;
	shf.r.wrap.b32 	%r5346, %r5343, %r5344, 1;
	mov.b64 	%rd8233, {%r5346, %r5345};
	xor.b64  	%rd8234, %rd8233, %rd8232;
	shf.r.wrap.b32 	%r5347, %r5344, %r5343, 8;
	shf.r.wrap.b32 	%r5348, %r5343, %r5344, 8;
	mov.b64 	%rd8235, {%r5348, %r5347};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	add.s64 	%rd8237, %rd18452, %rd18440;
	add.s64 	%rd8238, %rd8237, %rd8231;
	add.s64 	%rd18440, %rd8238, %rd8236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd18441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd18441;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 19;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 19;
	mov.b64 	%rd8239, {%r5352, %r5351};
	shf.l.wrap.b32 	%r5353, %r5349, %r5350, 3;
	shf.l.wrap.b32 	%r5354, %r5350, %r5349, 3;
	mov.b64 	%rd8240, {%r5354, %r5353};
	shr.u64 	%rd8241, %rd18441, 6;
	xor.b64  	%rd8242, %rd8239, %rd8241;
	xor.b64  	%rd8243, %rd8242, %rd8240;
	shr.u64 	%rd8244, %rd18438, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5355,%dummy}, %rd18438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5356}, %rd18438;
	}
	shf.r.wrap.b32 	%r5357, %r5356, %r5355, 1;
	shf.r.wrap.b32 	%r5358, %r5355, %r5356, 1;
	mov.b64 	%rd8245, {%r5358, %r5357};
	xor.b64  	%rd8246, %rd8245, %rd8244;
	shf.r.wrap.b32 	%r5359, %r5356, %r5355, 8;
	shf.r.wrap.b32 	%r5360, %r5355, %r5356, 8;
	mov.b64 	%rd8247, {%r5360, %r5359};
	xor.b64  	%rd8248, %rd8246, %rd8247;
	add.s64 	%rd8249, %rd18453, %rd18439;
	add.s64 	%rd8250, %rd8249, %rd8243;
	add.s64 	%rd18439, %rd8250, %rd8248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5361,%dummy}, %rd18440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5362}, %rd18440;
	}
	shf.r.wrap.b32 	%r5363, %r5362, %r5361, 19;
	shf.r.wrap.b32 	%r5364, %r5361, %r5362, 19;
	mov.b64 	%rd8251, {%r5364, %r5363};
	shf.l.wrap.b32 	%r5365, %r5361, %r5362, 3;
	shf.l.wrap.b32 	%r5366, %r5362, %r5361, 3;
	mov.b64 	%rd8252, {%r5366, %r5365};
	shr.u64 	%rd8253, %rd18440, 6;
	xor.b64  	%rd8254, %rd8251, %rd8253;
	xor.b64  	%rd8255, %rd8254, %rd8252;
	shr.u64 	%rd8256, %rd18437, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5367,%dummy}, %rd18437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5368}, %rd18437;
	}
	shf.r.wrap.b32 	%r5369, %r5368, %r5367, 1;
	shf.r.wrap.b32 	%r5370, %r5367, %r5368, 1;
	mov.b64 	%rd8257, {%r5370, %r5369};
	xor.b64  	%rd8258, %rd8257, %rd8256;
	shf.r.wrap.b32 	%r5371, %r5368, %r5367, 8;
	shf.r.wrap.b32 	%r5372, %r5367, %r5368, 8;
	mov.b64 	%rd8259, {%r5372, %r5371};
	xor.b64  	%rd8260, %rd8258, %rd8259;
	add.s64 	%rd8261, %rd18454, %rd18438;
	add.s64 	%rd8262, %rd8261, %rd8255;
	add.s64 	%rd18438, %rd8262, %rd8260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5373,%dummy}, %rd18439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5374}, %rd18439;
	}
	shf.r.wrap.b32 	%r5375, %r5374, %r5373, 19;
	shf.r.wrap.b32 	%r5376, %r5373, %r5374, 19;
	mov.b64 	%rd8263, {%r5376, %r5375};
	shf.l.wrap.b32 	%r5377, %r5373, %r5374, 3;
	shf.l.wrap.b32 	%r5378, %r5374, %r5373, 3;
	mov.b64 	%rd8264, {%r5378, %r5377};
	shr.u64 	%rd8265, %rd18439, 6;
	xor.b64  	%rd8266, %rd8263, %rd8265;
	xor.b64  	%rd8267, %rd8266, %rd8264;
	shr.u64 	%rd8268, %rd18436, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5379,%dummy}, %rd18436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5380}, %rd18436;
	}
	shf.r.wrap.b32 	%r5381, %r5380, %r5379, 1;
	shf.r.wrap.b32 	%r5382, %r5379, %r5380, 1;
	mov.b64 	%rd8269, {%r5382, %r5381};
	xor.b64  	%rd8270, %rd8269, %rd8268;
	shf.r.wrap.b32 	%r5383, %r5380, %r5379, 8;
	shf.r.wrap.b32 	%r5384, %r5379, %r5380, 8;
	mov.b64 	%rd8271, {%r5384, %r5383};
	xor.b64  	%rd8272, %rd8270, %rd8271;
	add.s64 	%rd8273, %rd18455, %rd18437;
	add.s64 	%rd8274, %rd8273, %rd8267;
	add.s64 	%rd18437, %rd8274, %rd8272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5385,%dummy}, %rd18438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5386}, %rd18438;
	}
	shf.r.wrap.b32 	%r5387, %r5386, %r5385, 19;
	shf.r.wrap.b32 	%r5388, %r5385, %r5386, 19;
	mov.b64 	%rd8275, {%r5388, %r5387};
	shf.l.wrap.b32 	%r5389, %r5385, %r5386, 3;
	shf.l.wrap.b32 	%r5390, %r5386, %r5385, 3;
	mov.b64 	%rd8276, {%r5390, %r5389};
	shr.u64 	%rd8277, %rd18438, 6;
	xor.b64  	%rd8278, %rd8275, %rd8277;
	xor.b64  	%rd8279, %rd8278, %rd8276;
	shr.u64 	%rd8280, %rd18435, 7;
	shf.r.wrap.b32 	%r5391, %r5230, %r5229, 1;
	shf.r.wrap.b32 	%r5392, %r5229, %r5230, 1;
	mov.b64 	%rd8281, {%r5392, %r5391};
	xor.b64  	%rd8282, %rd8281, %rd8280;
	shf.r.wrap.b32 	%r5393, %r5230, %r5229, 8;
	shf.r.wrap.b32 	%r5394, %r5229, %r5230, 8;
	mov.b64 	%rd8283, {%r5394, %r5393};
	xor.b64  	%rd8284, %rd8282, %rd8283;
	add.s64 	%rd8285, %rd18456, %rd18436;
	add.s64 	%rd8286, %rd8285, %rd8279;
	add.s64 	%rd18436, %rd8286, %rd8284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5395,%dummy}, %rd18437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5396}, %rd18437;
	}
	shf.r.wrap.b32 	%r5397, %r5396, %r5395, 19;
	shf.r.wrap.b32 	%r5398, %r5395, %r5396, 19;
	mov.b64 	%rd8287, {%r5398, %r5397};
	shf.l.wrap.b32 	%r5399, %r5395, %r5396, 3;
	shf.l.wrap.b32 	%r5400, %r5396, %r5395, 3;
	mov.b64 	%rd8288, {%r5400, %r5399};
	shr.u64 	%rd8289, %rd18437, 6;
	xor.b64  	%rd8290, %rd8287, %rd8289;
	xor.b64  	%rd8291, %rd8290, %rd8288;
	shr.u64 	%rd8292, %rd18434, 7;
	shf.r.wrap.b32 	%r5401, %r5242, %r5241, 1;
	shf.r.wrap.b32 	%r5402, %r5241, %r5242, 1;
	mov.b64 	%rd8293, {%r5402, %r5401};
	xor.b64  	%rd8294, %rd8293, %rd8292;
	shf.r.wrap.b32 	%r5403, %r5242, %r5241, 8;
	shf.r.wrap.b32 	%r5404, %r5241, %r5242, 8;
	mov.b64 	%rd8295, {%r5404, %r5403};
	xor.b64  	%rd8296, %rd8294, %rd8295;
	add.s64 	%rd8297, %rd18457, %rd18435;
	add.s64 	%rd8298, %rd8297, %rd8291;
	add.s64 	%rd18435, %rd8298, %rd8296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd18436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd18436;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 19;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 19;
	mov.b64 	%rd8299, {%r5408, %r5407};
	shf.l.wrap.b32 	%r5409, %r5405, %r5406, 3;
	shf.l.wrap.b32 	%r5410, %r5406, %r5405, 3;
	mov.b64 	%rd8300, {%r5410, %r5409};
	shr.u64 	%rd8301, %rd18436, 6;
	xor.b64  	%rd8302, %rd8299, %rd8301;
	xor.b64  	%rd8303, %rd8302, %rd8300;
	shf.r.wrap.b32 	%r5411, %r5254, %r5253, 1;
	shf.r.wrap.b32 	%r5412, %r5253, %r5254, 1;
	mov.b64 	%rd8304, {%r5412, %r5411};
	shf.r.wrap.b32 	%r5413, %r5254, %r5253, 8;
	shf.r.wrap.b32 	%r5414, %r5253, %r5254, 8;
	mov.b64 	%rd8305, {%r5414, %r5413};
	shr.u64 	%rd8306, %rd18450, 7;
	xor.b64  	%rd8307, %rd8304, %rd8306;
	xor.b64  	%rd8308, %rd8307, %rd8305;
	add.s64 	%rd8309, %rd18441, %rd18434;
	add.s64 	%rd8310, %rd8309, %rd8303;
	add.s64 	%rd18434, %rd8310, %rd8308;
	mul.wide.s32 	%rd8311, %r12634, 8;
	add.s64 	%rd8313, %rd18235, %rd8311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5415,%dummy}, %rd18446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5416}, %rd18446;
	}
	shf.r.wrap.b32 	%r5417, %r5416, %r5415, 18;
	shf.r.wrap.b32 	%r5418, %r5415, %r5416, 18;
	mov.b64 	%rd8314, {%r5418, %r5417};
	shf.r.wrap.b32 	%r5419, %r5416, %r5415, 14;
	shf.r.wrap.b32 	%r5420, %r5415, %r5416, 14;
	mov.b64 	%rd8315, {%r5420, %r5419};
	xor.b64  	%rd8316, %rd8314, %rd8315;
	shf.l.wrap.b32 	%r5421, %r5415, %r5416, 23;
	shf.l.wrap.b32 	%r5422, %r5416, %r5415, 23;
	mov.b64 	%rd8317, {%r5422, %r5421};
	xor.b64  	%rd8318, %rd8316, %rd8317;
	xor.b64  	%rd8319, %rd18447, %rd18448;
	and.b64  	%rd8320, %rd18446, %rd8319;
	xor.b64  	%rd8321, %rd8320, %rd18448;
	add.s64 	%rd8322, %rd8321, %rd18449;
	add.s64 	%rd8323, %rd8322, %rd18450;
	ld.const.u64 	%rd8324, [%rd8313];
	add.s64 	%rd8325, %rd8323, %rd8324;
	add.s64 	%rd8326, %rd8325, %rd8318;
	add.s64 	%rd8327, %rd8326, %rd18445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd18442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5424,%dummy}, %rd18442;
	}
	shf.l.wrap.b32 	%r5425, %r5424, %r5423, 30;
	shf.l.wrap.b32 	%r5426, %r5423, %r5424, 30;
	mov.b64 	%rd8328, {%r5426, %r5425};
	shf.r.wrap.b32 	%r5427, %r5423, %r5424, 28;
	shf.r.wrap.b32 	%r5428, %r5424, %r5423, 28;
	mov.b64 	%rd8329, {%r5428, %r5427};
	xor.b64  	%rd8330, %rd8328, %rd8329;
	shf.l.wrap.b32 	%r5429, %r5424, %r5423, 25;
	shf.l.wrap.b32 	%r5430, %r5423, %r5424, 25;
	mov.b64 	%rd8331, {%r5430, %r5429};
	xor.b64  	%rd8332, %rd8330, %rd8331;
	xor.b64  	%rd8333, %rd18442, %rd18443;
	and.b64  	%rd8334, %rd8333, %rd18444;
	and.b64  	%rd8335, %rd18442, %rd18443;
	or.b64  	%rd8336, %rd8334, %rd8335;
	add.s64 	%rd8337, %rd8326, %rd8336;
	add.s64 	%rd8338, %rd8337, %rd8332;
	add.s32 	%r5431, %r12634, 1;
	mul.wide.s32 	%rd8339, %r5431, 8;
	add.s64 	%rd8340, %rd18235, %rd8339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5432,%dummy}, %rd8327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5433}, %rd8327;
	}
	shf.r.wrap.b32 	%r5434, %r5433, %r5432, 14;
	shf.r.wrap.b32 	%r5435, %r5432, %r5433, 14;
	mov.b64 	%rd8341, {%r5435, %r5434};
	shf.r.wrap.b32 	%r5436, %r5433, %r5432, 18;
	shf.r.wrap.b32 	%r5437, %r5432, %r5433, 18;
	mov.b64 	%rd8342, {%r5437, %r5436};
	xor.b64  	%rd8343, %rd8342, %rd8341;
	shf.l.wrap.b32 	%r5438, %r5432, %r5433, 23;
	shf.l.wrap.b32 	%r5439, %r5433, %r5432, 23;
	mov.b64 	%rd8344, {%r5439, %r5438};
	xor.b64  	%rd8345, %rd8343, %rd8344;
	xor.b64  	%rd8346, %rd18446, %rd18447;
	and.b64  	%rd8347, %rd8327, %rd8346;
	xor.b64  	%rd8348, %rd8347, %rd18447;
	add.s64 	%rd8349, %rd18451, %rd18448;
	ld.const.u64 	%rd8350, [%rd8340];
	add.s64 	%rd8351, %rd8349, %rd8350;
	add.s64 	%rd8352, %rd8351, %rd8348;
	add.s64 	%rd8353, %rd8352, %rd8345;
	add.s64 	%rd8354, %rd8353, %rd18444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5440,%dummy}, %rd8338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd8338;
	}
	shf.r.wrap.b32 	%r5442, %r5441, %r5440, 28;
	shf.r.wrap.b32 	%r5443, %r5440, %r5441, 28;
	mov.b64 	%rd8355, {%r5443, %r5442};
	shf.l.wrap.b32 	%r5444, %r5440, %r5441, 30;
	shf.l.wrap.b32 	%r5445, %r5441, %r5440, 30;
	mov.b64 	%rd8356, {%r5445, %r5444};
	xor.b64  	%rd8357, %rd8356, %rd8355;
	shf.l.wrap.b32 	%r5446, %r5440, %r5441, 25;
	shf.l.wrap.b32 	%r5447, %r5441, %r5440, 25;
	mov.b64 	%rd8358, {%r5447, %r5446};
	xor.b64  	%rd8359, %rd8357, %rd8358;
	and.b64  	%rd8360, %rd8338, %rd18442;
	xor.b64  	%rd8361, %rd8338, %rd18442;
	and.b64  	%rd8362, %rd8361, %rd18443;
	or.b64  	%rd8363, %rd8362, %rd8360;
	add.s64 	%rd8364, %rd8353, %rd8363;
	add.s64 	%rd8365, %rd8364, %rd8359;
	add.s32 	%r5448, %r12634, 2;
	mul.wide.s32 	%rd8366, %r5448, 8;
	add.s64 	%rd8367, %rd18235, %rd8366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5449,%dummy}, %rd8354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5450}, %rd8354;
	}
	shf.r.wrap.b32 	%r5451, %r5450, %r5449, 14;
	shf.r.wrap.b32 	%r5452, %r5449, %r5450, 14;
	mov.b64 	%rd8368, {%r5452, %r5451};
	shf.r.wrap.b32 	%r5453, %r5450, %r5449, 18;
	shf.r.wrap.b32 	%r5454, %r5449, %r5450, 18;
	mov.b64 	%rd8369, {%r5454, %r5453};
	xor.b64  	%rd8370, %rd8369, %rd8368;
	shf.l.wrap.b32 	%r5455, %r5449, %r5450, 23;
	shf.l.wrap.b32 	%r5456, %r5450, %r5449, 23;
	mov.b64 	%rd8371, {%r5456, %r5455};
	xor.b64  	%rd8372, %rd8370, %rd8371;
	xor.b64  	%rd8373, %rd8327, %rd18446;
	and.b64  	%rd8374, %rd8354, %rd8373;
	xor.b64  	%rd8375, %rd8374, %rd18446;
	add.s64 	%rd8376, %rd18452, %rd18447;
	ld.const.u64 	%rd8377, [%rd8367];
	add.s64 	%rd8378, %rd8376, %rd8377;
	add.s64 	%rd8379, %rd8378, %rd8375;
	add.s64 	%rd8380, %rd8379, %rd8372;
	add.s64 	%rd8381, %rd8380, %rd18443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5457,%dummy}, %rd8365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5458}, %rd8365;
	}
	shf.r.wrap.b32 	%r5459, %r5458, %r5457, 28;
	shf.r.wrap.b32 	%r5460, %r5457, %r5458, 28;
	mov.b64 	%rd8382, {%r5460, %r5459};
	shf.l.wrap.b32 	%r5461, %r5457, %r5458, 30;
	shf.l.wrap.b32 	%r5462, %r5458, %r5457, 30;
	mov.b64 	%rd8383, {%r5462, %r5461};
	xor.b64  	%rd8384, %rd8383, %rd8382;
	shf.l.wrap.b32 	%r5463, %r5457, %r5458, 25;
	shf.l.wrap.b32 	%r5464, %r5458, %r5457, 25;
	mov.b64 	%rd8385, {%r5464, %r5463};
	xor.b64  	%rd8386, %rd8384, %rd8385;
	and.b64  	%rd8387, %rd8365, %rd8338;
	xor.b64  	%rd8388, %rd8365, %rd8338;
	and.b64  	%rd8389, %rd8388, %rd18442;
	or.b64  	%rd8390, %rd8389, %rd8387;
	add.s64 	%rd8391, %rd8380, %rd8390;
	add.s64 	%rd8392, %rd8391, %rd8386;
	add.s32 	%r5465, %r12634, 3;
	mul.wide.s32 	%rd8393, %r5465, 8;
	add.s64 	%rd8394, %rd18235, %rd8393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5466,%dummy}, %rd8381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5467}, %rd8381;
	}
	shf.r.wrap.b32 	%r5468, %r5467, %r5466, 14;
	shf.r.wrap.b32 	%r5469, %r5466, %r5467, 14;
	mov.b64 	%rd8395, {%r5469, %r5468};
	shf.r.wrap.b32 	%r5470, %r5467, %r5466, 18;
	shf.r.wrap.b32 	%r5471, %r5466, %r5467, 18;
	mov.b64 	%rd8396, {%r5471, %r5470};
	xor.b64  	%rd8397, %rd8396, %rd8395;
	shf.l.wrap.b32 	%r5472, %r5466, %r5467, 23;
	shf.l.wrap.b32 	%r5473, %r5467, %r5466, 23;
	mov.b64 	%rd8398, {%r5473, %r5472};
	xor.b64  	%rd8399, %rd8397, %rd8398;
	xor.b64  	%rd8400, %rd8354, %rd8327;
	and.b64  	%rd8401, %rd8381, %rd8400;
	xor.b64  	%rd8402, %rd8401, %rd8327;
	add.s64 	%rd8403, %rd18453, %rd18446;
	ld.const.u64 	%rd8404, [%rd8394];
	add.s64 	%rd8405, %rd8403, %rd8404;
	add.s64 	%rd8406, %rd8405, %rd8402;
	add.s64 	%rd8407, %rd8406, %rd8399;
	add.s64 	%rd8408, %rd8407, %rd18442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd8392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd8392;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 28;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 28;
	mov.b64 	%rd8409, {%r5477, %r5476};
	shf.l.wrap.b32 	%r5478, %r5474, %r5475, 30;
	shf.l.wrap.b32 	%r5479, %r5475, %r5474, 30;
	mov.b64 	%rd8410, {%r5479, %r5478};
	xor.b64  	%rd8411, %rd8410, %rd8409;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 25;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 25;
	mov.b64 	%rd8412, {%r5481, %r5480};
	xor.b64  	%rd8413, %rd8411, %rd8412;
	and.b64  	%rd8414, %rd8392, %rd8365;
	xor.b64  	%rd8415, %rd8392, %rd8365;
	and.b64  	%rd8416, %rd8415, %rd8338;
	or.b64  	%rd8417, %rd8416, %rd8414;
	add.s64 	%rd8418, %rd8407, %rd8417;
	add.s64 	%rd8419, %rd8418, %rd8413;
	add.s32 	%r5482, %r12634, 4;
	mul.wide.s32 	%rd8420, %r5482, 8;
	add.s64 	%rd8421, %rd18235, %rd8420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5483,%dummy}, %rd8408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5484}, %rd8408;
	}
	shf.r.wrap.b32 	%r5485, %r5484, %r5483, 14;
	shf.r.wrap.b32 	%r5486, %r5483, %r5484, 14;
	mov.b64 	%rd8422, {%r5486, %r5485};
	shf.r.wrap.b32 	%r5487, %r5484, %r5483, 18;
	shf.r.wrap.b32 	%r5488, %r5483, %r5484, 18;
	mov.b64 	%rd8423, {%r5488, %r5487};
	xor.b64  	%rd8424, %rd8423, %rd8422;
	shf.l.wrap.b32 	%r5489, %r5483, %r5484, 23;
	shf.l.wrap.b32 	%r5490, %r5484, %r5483, 23;
	mov.b64 	%rd8425, {%r5490, %r5489};
	xor.b64  	%rd8426, %rd8424, %rd8425;
	xor.b64  	%rd8427, %rd8381, %rd8354;
	and.b64  	%rd8428, %rd8408, %rd8427;
	xor.b64  	%rd8429, %rd8428, %rd8354;
	add.s64 	%rd8430, %rd8327, %rd18454;
	ld.const.u64 	%rd8431, [%rd8421];
	add.s64 	%rd8432, %rd8430, %rd8431;
	add.s64 	%rd8433, %rd8432, %rd8429;
	add.s64 	%rd8434, %rd8433, %rd8426;
	add.s64 	%rd8435, %rd8434, %rd8338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5491,%dummy}, %rd8419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5492}, %rd8419;
	}
	shf.r.wrap.b32 	%r5493, %r5492, %r5491, 28;
	shf.r.wrap.b32 	%r5494, %r5491, %r5492, 28;
	mov.b64 	%rd8436, {%r5494, %r5493};
	shf.l.wrap.b32 	%r5495, %r5491, %r5492, 30;
	shf.l.wrap.b32 	%r5496, %r5492, %r5491, 30;
	mov.b64 	%rd8437, {%r5496, %r5495};
	xor.b64  	%rd8438, %rd8437, %rd8436;
	shf.l.wrap.b32 	%r5497, %r5491, %r5492, 25;
	shf.l.wrap.b32 	%r5498, %r5492, %r5491, 25;
	mov.b64 	%rd8439, {%r5498, %r5497};
	xor.b64  	%rd8440, %rd8438, %rd8439;
	and.b64  	%rd8441, %rd8419, %rd8392;
	xor.b64  	%rd8442, %rd8419, %rd8392;
	and.b64  	%rd8443, %rd8442, %rd8365;
	or.b64  	%rd8444, %rd8443, %rd8441;
	add.s64 	%rd8445, %rd8434, %rd8444;
	add.s64 	%rd8446, %rd8445, %rd8440;
	add.s32 	%r5499, %r12634, 5;
	mul.wide.s32 	%rd8447, %r5499, 8;
	add.s64 	%rd8448, %rd18235, %rd8447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd8435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd8435;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 14;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 14;
	mov.b64 	%rd8449, {%r5503, %r5502};
	shf.r.wrap.b32 	%r5504, %r5501, %r5500, 18;
	shf.r.wrap.b32 	%r5505, %r5500, %r5501, 18;
	mov.b64 	%rd8450, {%r5505, %r5504};
	xor.b64  	%rd8451, %rd8450, %rd8449;
	shf.l.wrap.b32 	%r5506, %r5500, %r5501, 23;
	shf.l.wrap.b32 	%r5507, %r5501, %r5500, 23;
	mov.b64 	%rd8452, {%r5507, %r5506};
	xor.b64  	%rd8453, %rd8451, %rd8452;
	xor.b64  	%rd8454, %rd8408, %rd8381;
	and.b64  	%rd8455, %rd8435, %rd8454;
	xor.b64  	%rd8456, %rd8455, %rd8381;
	add.s64 	%rd8457, %rd8354, %rd18455;
	ld.const.u64 	%rd8458, [%rd8448];
	add.s64 	%rd8459, %rd8457, %rd8458;
	add.s64 	%rd8460, %rd8459, %rd8456;
	add.s64 	%rd8461, %rd8460, %rd8453;
	add.s64 	%rd8462, %rd8461, %rd8365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5508,%dummy}, %rd8446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5509}, %rd8446;
	}
	shf.r.wrap.b32 	%r5510, %r5509, %r5508, 28;
	shf.r.wrap.b32 	%r5511, %r5508, %r5509, 28;
	mov.b64 	%rd8463, {%r5511, %r5510};
	shf.l.wrap.b32 	%r5512, %r5508, %r5509, 30;
	shf.l.wrap.b32 	%r5513, %r5509, %r5508, 30;
	mov.b64 	%rd8464, {%r5513, %r5512};
	xor.b64  	%rd8465, %rd8464, %rd8463;
	shf.l.wrap.b32 	%r5514, %r5508, %r5509, 25;
	shf.l.wrap.b32 	%r5515, %r5509, %r5508, 25;
	mov.b64 	%rd8466, {%r5515, %r5514};
	xor.b64  	%rd8467, %rd8465, %rd8466;
	and.b64  	%rd8468, %rd8446, %rd8419;
	xor.b64  	%rd8469, %rd8446, %rd8419;
	and.b64  	%rd8470, %rd8469, %rd8392;
	or.b64  	%rd8471, %rd8470, %rd8468;
	add.s64 	%rd8472, %rd8461, %rd8471;
	add.s64 	%rd8473, %rd8472, %rd8467;
	add.s32 	%r5516, %r12634, 6;
	mul.wide.s32 	%rd8474, %r5516, 8;
	add.s64 	%rd8475, %rd18235, %rd8474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd8462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd8462;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 14;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 14;
	mov.b64 	%rd8476, {%r5520, %r5519};
	shf.r.wrap.b32 	%r5521, %r5518, %r5517, 18;
	shf.r.wrap.b32 	%r5522, %r5517, %r5518, 18;
	mov.b64 	%rd8477, {%r5522, %r5521};
	xor.b64  	%rd8478, %rd8477, %rd8476;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 23;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 23;
	mov.b64 	%rd8479, {%r5524, %r5523};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	xor.b64  	%rd8481, %rd8435, %rd8408;
	and.b64  	%rd8482, %rd8462, %rd8481;
	xor.b64  	%rd8483, %rd8482, %rd8408;
	add.s64 	%rd8484, %rd8381, %rd18456;
	ld.const.u64 	%rd8485, [%rd8475];
	add.s64 	%rd8486, %rd8484, %rd8485;
	add.s64 	%rd8487, %rd8486, %rd8483;
	add.s64 	%rd8488, %rd8487, %rd8480;
	add.s64 	%rd8489, %rd8488, %rd8392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd8473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd8473;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 28;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 28;
	mov.b64 	%rd8490, {%r5528, %r5527};
	shf.l.wrap.b32 	%r5529, %r5525, %r5526, 30;
	shf.l.wrap.b32 	%r5530, %r5526, %r5525, 30;
	mov.b64 	%rd8491, {%r5530, %r5529};
	xor.b64  	%rd8492, %rd8491, %rd8490;
	shf.l.wrap.b32 	%r5531, %r5525, %r5526, 25;
	shf.l.wrap.b32 	%r5532, %r5526, %r5525, 25;
	mov.b64 	%rd8493, {%r5532, %r5531};
	xor.b64  	%rd8494, %rd8492, %rd8493;
	and.b64  	%rd8495, %rd8473, %rd8446;
	xor.b64  	%rd8496, %rd8473, %rd8446;
	and.b64  	%rd8497, %rd8496, %rd8419;
	or.b64  	%rd8498, %rd8497, %rd8495;
	add.s64 	%rd8499, %rd8488, %rd8498;
	add.s64 	%rd8500, %rd8499, %rd8494;
	add.s32 	%r5533, %r12634, 7;
	mul.wide.s32 	%rd8501, %r5533, 8;
	add.s64 	%rd8502, %rd18235, %rd8501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd8489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd8489;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 14;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 14;
	mov.b64 	%rd8503, {%r5537, %r5536};
	shf.r.wrap.b32 	%r5538, %r5535, %r5534, 18;
	shf.r.wrap.b32 	%r5539, %r5534, %r5535, 18;
	mov.b64 	%rd8504, {%r5539, %r5538};
	xor.b64  	%rd8505, %rd8504, %rd8503;
	shf.l.wrap.b32 	%r5540, %r5534, %r5535, 23;
	shf.l.wrap.b32 	%r5541, %r5535, %r5534, 23;
	mov.b64 	%rd8506, {%r5541, %r5540};
	xor.b64  	%rd8507, %rd8505, %rd8506;
	xor.b64  	%rd8508, %rd8462, %rd8435;
	and.b64  	%rd8509, %rd8489, %rd8508;
	xor.b64  	%rd8510, %rd8509, %rd8435;
	add.s64 	%rd8511, %rd8408, %rd18457;
	ld.const.u64 	%rd8512, [%rd8502];
	add.s64 	%rd8513, %rd8511, %rd8512;
	add.s64 	%rd8514, %rd8513, %rd8510;
	add.s64 	%rd8515, %rd8514, %rd8507;
	add.s64 	%rd8516, %rd8515, %rd8419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd8500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5543}, %rd8500;
	}
	shf.r.wrap.b32 	%r5544, %r5543, %r5542, 28;
	shf.r.wrap.b32 	%r5545, %r5542, %r5543, 28;
	mov.b64 	%rd8517, {%r5545, %r5544};
	shf.l.wrap.b32 	%r5546, %r5542, %r5543, 30;
	shf.l.wrap.b32 	%r5547, %r5543, %r5542, 30;
	mov.b64 	%rd8518, {%r5547, %r5546};
	xor.b64  	%rd8519, %rd8518, %rd8517;
	shf.l.wrap.b32 	%r5548, %r5542, %r5543, 25;
	shf.l.wrap.b32 	%r5549, %r5543, %r5542, 25;
	mov.b64 	%rd8520, {%r5549, %r5548};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	and.b64  	%rd8522, %rd8500, %rd8473;
	xor.b64  	%rd8523, %rd8500, %rd8473;
	and.b64  	%rd8524, %rd8523, %rd8446;
	or.b64  	%rd8525, %rd8524, %rd8522;
	add.s64 	%rd8526, %rd8515, %rd8525;
	add.s64 	%rd8527, %rd8526, %rd8521;
	add.s32 	%r5550, %r12634, 8;
	mul.wide.s32 	%rd8528, %r5550, 8;
	add.s64 	%rd8529, %rd18235, %rd8528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5551,%dummy}, %rd8516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5552}, %rd8516;
	}
	shf.r.wrap.b32 	%r5553, %r5552, %r5551, 14;
	shf.r.wrap.b32 	%r5554, %r5551, %r5552, 14;
	mov.b64 	%rd8530, {%r5554, %r5553};
	shf.r.wrap.b32 	%r5555, %r5552, %r5551, 18;
	shf.r.wrap.b32 	%r5556, %r5551, %r5552, 18;
	mov.b64 	%rd8531, {%r5556, %r5555};
	xor.b64  	%rd8532, %rd8531, %rd8530;
	shf.l.wrap.b32 	%r5557, %r5551, %r5552, 23;
	shf.l.wrap.b32 	%r5558, %r5552, %r5551, 23;
	mov.b64 	%rd8533, {%r5558, %r5557};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	xor.b64  	%rd8535, %rd8489, %rd8462;
	and.b64  	%rd8536, %rd8516, %rd8535;
	xor.b64  	%rd8537, %rd8536, %rd8462;
	add.s64 	%rd8538, %rd8435, %rd18441;
	ld.const.u64 	%rd8539, [%rd8529];
	add.s64 	%rd8540, %rd8538, %rd8539;
	add.s64 	%rd8541, %rd8540, %rd8537;
	add.s64 	%rd8542, %rd8541, %rd8534;
	add.s64 	%rd8543, %rd8542, %rd8446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5559,%dummy}, %rd8527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5560}, %rd8527;
	}
	shf.r.wrap.b32 	%r5561, %r5560, %r5559, 28;
	shf.r.wrap.b32 	%r5562, %r5559, %r5560, 28;
	mov.b64 	%rd8544, {%r5562, %r5561};
	shf.l.wrap.b32 	%r5563, %r5559, %r5560, 30;
	shf.l.wrap.b32 	%r5564, %r5560, %r5559, 30;
	mov.b64 	%rd8545, {%r5564, %r5563};
	xor.b64  	%rd8546, %rd8545, %rd8544;
	shf.l.wrap.b32 	%r5565, %r5559, %r5560, 25;
	shf.l.wrap.b32 	%r5566, %r5560, %r5559, 25;
	mov.b64 	%rd8547, {%r5566, %r5565};
	xor.b64  	%rd8548, %rd8546, %rd8547;
	and.b64  	%rd8549, %rd8527, %rd8500;
	xor.b64  	%rd8550, %rd8527, %rd8500;
	and.b64  	%rd8551, %rd8550, %rd8473;
	or.b64  	%rd8552, %rd8551, %rd8549;
	add.s64 	%rd8553, %rd8542, %rd8552;
	add.s64 	%rd8554, %rd8553, %rd8548;
	add.s32 	%r5567, %r12634, 9;
	mul.wide.s32 	%rd8555, %r5567, 8;
	add.s64 	%rd8556, %rd18235, %rd8555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd8543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd8543;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd8557, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd8558, {%r5573, %r5572};
	xor.b64  	%rd8559, %rd8558, %rd8557;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd8560, {%r5575, %r5574};
	xor.b64  	%rd8561, %rd8559, %rd8560;
	xor.b64  	%rd8562, %rd8516, %rd8489;
	and.b64  	%rd8563, %rd8543, %rd8562;
	xor.b64  	%rd8564, %rd8563, %rd8489;
	add.s64 	%rd8565, %rd8462, %rd18440;
	ld.const.u64 	%rd8566, [%rd8556];
	add.s64 	%rd8567, %rd8565, %rd8566;
	add.s64 	%rd8568, %rd8567, %rd8564;
	add.s64 	%rd8569, %rd8568, %rd8561;
	add.s64 	%rd8570, %rd8569, %rd8473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd8554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd8554;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd8571, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd8572, {%r5581, %r5580};
	xor.b64  	%rd8573, %rd8572, %rd8571;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd8574, {%r5583, %r5582};
	xor.b64  	%rd8575, %rd8573, %rd8574;
	and.b64  	%rd8576, %rd8554, %rd8527;
	xor.b64  	%rd8577, %rd8554, %rd8527;
	and.b64  	%rd8578, %rd8577, %rd8500;
	or.b64  	%rd8579, %rd8578, %rd8576;
	add.s64 	%rd8580, %rd8569, %rd8579;
	add.s64 	%rd8581, %rd8580, %rd8575;
	add.s32 	%r5584, %r12634, 10;
	mul.wide.s32 	%rd8582, %r5584, 8;
	add.s64 	%rd8583, %rd18235, %rd8582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5585,%dummy}, %rd8570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5586}, %rd8570;
	}
	shf.r.wrap.b32 	%r5587, %r5586, %r5585, 14;
	shf.r.wrap.b32 	%r5588, %r5585, %r5586, 14;
	mov.b64 	%rd8584, {%r5588, %r5587};
	shf.r.wrap.b32 	%r5589, %r5586, %r5585, 18;
	shf.r.wrap.b32 	%r5590, %r5585, %r5586, 18;
	mov.b64 	%rd8585, {%r5590, %r5589};
	xor.b64  	%rd8586, %rd8585, %rd8584;
	shf.l.wrap.b32 	%r5591, %r5585, %r5586, 23;
	shf.l.wrap.b32 	%r5592, %r5586, %r5585, 23;
	mov.b64 	%rd8587, {%r5592, %r5591};
	xor.b64  	%rd8588, %rd8586, %rd8587;
	xor.b64  	%rd8589, %rd8543, %rd8516;
	and.b64  	%rd8590, %rd8570, %rd8589;
	xor.b64  	%rd8591, %rd8590, %rd8516;
	add.s64 	%rd8592, %rd8489, %rd18439;
	ld.const.u64 	%rd8593, [%rd8583];
	add.s64 	%rd8594, %rd8592, %rd8593;
	add.s64 	%rd8595, %rd8594, %rd8591;
	add.s64 	%rd8596, %rd8595, %rd8588;
	add.s64 	%rd8597, %rd8596, %rd8500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5593,%dummy}, %rd8581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5594}, %rd8581;
	}
	shf.r.wrap.b32 	%r5595, %r5594, %r5593, 28;
	shf.r.wrap.b32 	%r5596, %r5593, %r5594, 28;
	mov.b64 	%rd8598, {%r5596, %r5595};
	shf.l.wrap.b32 	%r5597, %r5593, %r5594, 30;
	shf.l.wrap.b32 	%r5598, %r5594, %r5593, 30;
	mov.b64 	%rd8599, {%r5598, %r5597};
	xor.b64  	%rd8600, %rd8599, %rd8598;
	shf.l.wrap.b32 	%r5599, %r5593, %r5594, 25;
	shf.l.wrap.b32 	%r5600, %r5594, %r5593, 25;
	mov.b64 	%rd8601, {%r5600, %r5599};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	and.b64  	%rd8603, %rd8581, %rd8554;
	xor.b64  	%rd8604, %rd8581, %rd8554;
	and.b64  	%rd8605, %rd8604, %rd8527;
	or.b64  	%rd8606, %rd8605, %rd8603;
	add.s64 	%rd8607, %rd8596, %rd8606;
	add.s64 	%rd8608, %rd8607, %rd8602;
	add.s32 	%r5601, %r12634, 11;
	mul.wide.s32 	%rd8609, %r5601, 8;
	add.s64 	%rd8610, %rd18235, %rd8609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd8597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5603}, %rd8597;
	}
	shf.r.wrap.b32 	%r5604, %r5603, %r5602, 14;
	shf.r.wrap.b32 	%r5605, %r5602, %r5603, 14;
	mov.b64 	%rd8611, {%r5605, %r5604};
	shf.r.wrap.b32 	%r5606, %r5603, %r5602, 18;
	shf.r.wrap.b32 	%r5607, %r5602, %r5603, 18;
	mov.b64 	%rd8612, {%r5607, %r5606};
	xor.b64  	%rd8613, %rd8612, %rd8611;
	shf.l.wrap.b32 	%r5608, %r5602, %r5603, 23;
	shf.l.wrap.b32 	%r5609, %r5603, %r5602, 23;
	mov.b64 	%rd8614, {%r5609, %r5608};
	xor.b64  	%rd8615, %rd8613, %rd8614;
	xor.b64  	%rd8616, %rd8570, %rd8543;
	and.b64  	%rd8617, %rd8597, %rd8616;
	xor.b64  	%rd8618, %rd8617, %rd8543;
	add.s64 	%rd8619, %rd8516, %rd18438;
	ld.const.u64 	%rd8620, [%rd8610];
	add.s64 	%rd8621, %rd8619, %rd8620;
	add.s64 	%rd8622, %rd8621, %rd8618;
	add.s64 	%rd8623, %rd8622, %rd8615;
	add.s64 	%rd8624, %rd8623, %rd8527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5610,%dummy}, %rd8608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5611}, %rd8608;
	}
	shf.r.wrap.b32 	%r5612, %r5611, %r5610, 28;
	shf.r.wrap.b32 	%r5613, %r5610, %r5611, 28;
	mov.b64 	%rd8625, {%r5613, %r5612};
	shf.l.wrap.b32 	%r5614, %r5610, %r5611, 30;
	shf.l.wrap.b32 	%r5615, %r5611, %r5610, 30;
	mov.b64 	%rd8626, {%r5615, %r5614};
	xor.b64  	%rd8627, %rd8626, %rd8625;
	shf.l.wrap.b32 	%r5616, %r5610, %r5611, 25;
	shf.l.wrap.b32 	%r5617, %r5611, %r5610, 25;
	mov.b64 	%rd8628, {%r5617, %r5616};
	xor.b64  	%rd8629, %rd8627, %rd8628;
	and.b64  	%rd8630, %rd8608, %rd8581;
	xor.b64  	%rd8631, %rd8608, %rd8581;
	and.b64  	%rd8632, %rd8631, %rd8554;
	or.b64  	%rd8633, %rd8632, %rd8630;
	add.s64 	%rd8634, %rd8623, %rd8633;
	add.s64 	%rd8635, %rd8634, %rd8629;
	add.s32 	%r5618, %r12634, 12;
	mul.wide.s32 	%rd8636, %r5618, 8;
	add.s64 	%rd8637, %rd18235, %rd8636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5619,%dummy}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5620}, %rd8624;
	}
	shf.r.wrap.b32 	%r5621, %r5620, %r5619, 14;
	shf.r.wrap.b32 	%r5622, %r5619, %r5620, 14;
	mov.b64 	%rd8638, {%r5622, %r5621};
	shf.r.wrap.b32 	%r5623, %r5620, %r5619, 18;
	shf.r.wrap.b32 	%r5624, %r5619, %r5620, 18;
	mov.b64 	%rd8639, {%r5624, %r5623};
	xor.b64  	%rd8640, %rd8639, %rd8638;
	shf.l.wrap.b32 	%r5625, %r5619, %r5620, 23;
	shf.l.wrap.b32 	%r5626, %r5620, %r5619, 23;
	mov.b64 	%rd8641, {%r5626, %r5625};
	xor.b64  	%rd8642, %rd8640, %rd8641;
	xor.b64  	%rd8643, %rd8597, %rd8570;
	and.b64  	%rd8644, %rd8624, %rd8643;
	xor.b64  	%rd8645, %rd8644, %rd8570;
	add.s64 	%rd8646, %rd8543, %rd18437;
	ld.const.u64 	%rd8647, [%rd8637];
	add.s64 	%rd8648, %rd8646, %rd8647;
	add.s64 	%rd8649, %rd8648, %rd8645;
	add.s64 	%rd8650, %rd8649, %rd8642;
	add.s64 	%rd18449, %rd8650, %rd8554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5627,%dummy}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5628}, %rd8635;
	}
	shf.r.wrap.b32 	%r5629, %r5628, %r5627, 28;
	shf.r.wrap.b32 	%r5630, %r5627, %r5628, 28;
	mov.b64 	%rd8651, {%r5630, %r5629};
	shf.l.wrap.b32 	%r5631, %r5627, %r5628, 30;
	shf.l.wrap.b32 	%r5632, %r5628, %r5627, 30;
	mov.b64 	%rd8652, {%r5632, %r5631};
	xor.b64  	%rd8653, %rd8652, %rd8651;
	shf.l.wrap.b32 	%r5633, %r5627, %r5628, 25;
	shf.l.wrap.b32 	%r5634, %r5628, %r5627, 25;
	mov.b64 	%rd8654, {%r5634, %r5633};
	xor.b64  	%rd8655, %rd8653, %rd8654;
	and.b64  	%rd8656, %rd8635, %rd8608;
	xor.b64  	%rd8657, %rd8635, %rd8608;
	and.b64  	%rd8658, %rd8657, %rd8581;
	or.b64  	%rd8659, %rd8658, %rd8656;
	add.s64 	%rd8660, %rd8650, %rd8659;
	add.s64 	%rd18445, %rd8660, %rd8655;
	add.s32 	%r5635, %r12634, 13;
	mul.wide.s32 	%rd8661, %r5635, 8;
	add.s64 	%rd8662, %rd18235, %rd8661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5636,%dummy}, %rd18449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5637}, %rd18449;
	}
	shf.r.wrap.b32 	%r5638, %r5637, %r5636, 14;
	shf.r.wrap.b32 	%r5639, %r5636, %r5637, 14;
	mov.b64 	%rd8663, {%r5639, %r5638};
	shf.r.wrap.b32 	%r5640, %r5637, %r5636, 18;
	shf.r.wrap.b32 	%r5641, %r5636, %r5637, 18;
	mov.b64 	%rd8664, {%r5641, %r5640};
	xor.b64  	%rd8665, %rd8664, %rd8663;
	shf.l.wrap.b32 	%r5642, %r5636, %r5637, 23;
	shf.l.wrap.b32 	%r5643, %r5637, %r5636, 23;
	mov.b64 	%rd8666, {%r5643, %r5642};
	xor.b64  	%rd8667, %rd8665, %rd8666;
	xor.b64  	%rd8668, %rd8624, %rd8597;
	and.b64  	%rd8669, %rd18449, %rd8668;
	xor.b64  	%rd8670, %rd8669, %rd8597;
	add.s64 	%rd8671, %rd8570, %rd18436;
	ld.const.u64 	%rd8672, [%rd8662];
	add.s64 	%rd8673, %rd8671, %rd8672;
	add.s64 	%rd8674, %rd8673, %rd8670;
	add.s64 	%rd8675, %rd8674, %rd8667;
	add.s64 	%rd18448, %rd8675, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5644,%dummy}, %rd18445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5645}, %rd18445;
	}
	shf.r.wrap.b32 	%r5646, %r5645, %r5644, 28;
	shf.r.wrap.b32 	%r5647, %r5644, %r5645, 28;
	mov.b64 	%rd8676, {%r5647, %r5646};
	shf.l.wrap.b32 	%r5648, %r5644, %r5645, 30;
	shf.l.wrap.b32 	%r5649, %r5645, %r5644, 30;
	mov.b64 	%rd8677, {%r5649, %r5648};
	xor.b64  	%rd8678, %rd8677, %rd8676;
	shf.l.wrap.b32 	%r5650, %r5644, %r5645, 25;
	shf.l.wrap.b32 	%r5651, %r5645, %r5644, 25;
	mov.b64 	%rd8679, {%r5651, %r5650};
	xor.b64  	%rd8680, %rd8678, %rd8679;
	and.b64  	%rd8681, %rd18445, %rd8635;
	xor.b64  	%rd8682, %rd18445, %rd8635;
	and.b64  	%rd8683, %rd8682, %rd8608;
	or.b64  	%rd8684, %rd8683, %rd8681;
	add.s64 	%rd8685, %rd8675, %rd8684;
	add.s64 	%rd18444, %rd8685, %rd8680;
	add.s32 	%r5652, %r12634, 14;
	mul.wide.s32 	%rd8686, %r5652, 8;
	add.s64 	%rd8687, %rd18235, %rd8686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5653,%dummy}, %rd18448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5654}, %rd18448;
	}
	shf.r.wrap.b32 	%r5655, %r5654, %r5653, 14;
	shf.r.wrap.b32 	%r5656, %r5653, %r5654, 14;
	mov.b64 	%rd8688, {%r5656, %r5655};
	shf.r.wrap.b32 	%r5657, %r5654, %r5653, 18;
	shf.r.wrap.b32 	%r5658, %r5653, %r5654, 18;
	mov.b64 	%rd8689, {%r5658, %r5657};
	xor.b64  	%rd8690, %rd8689, %rd8688;
	shf.l.wrap.b32 	%r5659, %r5653, %r5654, 23;
	shf.l.wrap.b32 	%r5660, %r5654, %r5653, 23;
	mov.b64 	%rd8691, {%r5660, %r5659};
	xor.b64  	%rd8692, %rd8690, %rd8691;
	xor.b64  	%rd8693, %rd18449, %rd8624;
	and.b64  	%rd8694, %rd18448, %rd8693;
	xor.b64  	%rd8695, %rd8694, %rd8624;
	add.s64 	%rd8696, %rd8597, %rd18435;
	ld.const.u64 	%rd8697, [%rd8687];
	add.s64 	%rd8698, %rd8696, %rd8697;
	add.s64 	%rd8699, %rd8698, %rd8695;
	add.s64 	%rd8700, %rd8699, %rd8692;
	add.s64 	%rd18447, %rd8700, %rd8608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5661,%dummy}, %rd18444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5662}, %rd18444;
	}
	shf.r.wrap.b32 	%r5663, %r5662, %r5661, 28;
	shf.r.wrap.b32 	%r5664, %r5661, %r5662, 28;
	mov.b64 	%rd8701, {%r5664, %r5663};
	shf.l.wrap.b32 	%r5665, %r5661, %r5662, 30;
	shf.l.wrap.b32 	%r5666, %r5662, %r5661, 30;
	mov.b64 	%rd8702, {%r5666, %r5665};
	xor.b64  	%rd8703, %rd8702, %rd8701;
	shf.l.wrap.b32 	%r5667, %r5661, %r5662, 25;
	shf.l.wrap.b32 	%r5668, %r5662, %r5661, 25;
	mov.b64 	%rd8704, {%r5668, %r5667};
	xor.b64  	%rd8705, %rd8703, %rd8704;
	and.b64  	%rd8706, %rd18444, %rd18445;
	xor.b64  	%rd8707, %rd18444, %rd18445;
	and.b64  	%rd8708, %rd8707, %rd8635;
	or.b64  	%rd8709, %rd8708, %rd8706;
	add.s64 	%rd8710, %rd8700, %rd8709;
	add.s64 	%rd18443, %rd8710, %rd8705;
	add.s32 	%r5669, %r12634, 15;
	mul.wide.s32 	%rd8711, %r5669, 8;
	add.s64 	%rd8712, %rd18235, %rd8711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5670,%dummy}, %rd18447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5671}, %rd18447;
	}
	shf.r.wrap.b32 	%r5672, %r5671, %r5670, 14;
	shf.r.wrap.b32 	%r5673, %r5670, %r5671, 14;
	mov.b64 	%rd8713, {%r5673, %r5672};
	shf.r.wrap.b32 	%r5674, %r5671, %r5670, 18;
	shf.r.wrap.b32 	%r5675, %r5670, %r5671, 18;
	mov.b64 	%rd8714, {%r5675, %r5674};
	xor.b64  	%rd8715, %rd8714, %rd8713;
	shf.l.wrap.b32 	%r5676, %r5670, %r5671, 23;
	shf.l.wrap.b32 	%r5677, %r5671, %r5670, 23;
	mov.b64 	%rd8716, {%r5677, %r5676};
	xor.b64  	%rd8717, %rd8715, %rd8716;
	xor.b64  	%rd8718, %rd18448, %rd18449;
	and.b64  	%rd8719, %rd18447, %rd8718;
	xor.b64  	%rd8720, %rd8719, %rd18449;
	add.s64 	%rd8721, %rd8624, %rd18434;
	ld.const.u64 	%rd8722, [%rd8712];
	add.s64 	%rd8723, %rd8721, %rd8722;
	add.s64 	%rd8724, %rd8723, %rd8720;
	add.s64 	%rd8725, %rd8724, %rd8717;
	add.s64 	%rd18446, %rd8725, %rd8635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5678,%dummy}, %rd18443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5679}, %rd18443;
	}
	shf.r.wrap.b32 	%r5680, %r5679, %r5678, 28;
	shf.r.wrap.b32 	%r5681, %r5678, %r5679, 28;
	mov.b64 	%rd8726, {%r5681, %r5680};
	shf.l.wrap.b32 	%r5682, %r5678, %r5679, 30;
	shf.l.wrap.b32 	%r5683, %r5679, %r5678, 30;
	mov.b64 	%rd8727, {%r5683, %r5682};
	xor.b64  	%rd8728, %rd8727, %rd8726;
	shf.l.wrap.b32 	%r5684, %r5678, %r5679, 25;
	shf.l.wrap.b32 	%r5685, %r5679, %r5678, 25;
	mov.b64 	%rd8729, {%r5685, %r5684};
	xor.b64  	%rd8730, %rd8728, %rd8729;
	and.b64  	%rd8731, %rd18443, %rd18444;
	xor.b64  	%rd8732, %rd18443, %rd18444;
	and.b64  	%rd8733, %rd8732, %rd18445;
	or.b64  	%rd8734, %rd8733, %rd8731;
	add.s64 	%rd8735, %rd8725, %rd8734;
	add.s64 	%rd18442, %rd8735, %rd8730;
	add.s32 	%r12634, %r12634, 16;
	setp.lt.s32	%p82, %r12634, 80;
	@%p82 bra 	BB0_134;

	add.s64 	%rd8736, %rd589, %rd18442;
	st.local.u64 	[%rd1], %rd8736;
	add.s64 	%rd8737, %rd590, %rd18443;
	st.local.u64 	[%rd1+8], %rd8737;
	add.s64 	%rd8738, %rd591, %rd18444;
	st.local.u64 	[%rd1+16], %rd8738;
	add.s64 	%rd8739, %rd588, %rd18445;
	st.local.u64 	[%rd1+24], %rd8739;
	add.s64 	%rd8740, %rd583, %rd18446;
	st.local.u64 	[%rd1+32], %rd8740;
	add.s64 	%rd8741, %rd585, %rd18447;
	st.local.u64 	[%rd1+40], %rd8741;
	add.s64 	%rd8742, %rd584, %rd18448;
	st.local.u64 	[%rd1+48], %rd8742;
	add.s64 	%rd8743, %rd586, %rd18449;
	st.local.u64 	[%rd1+56], %rd8743;
	mov.u32 	%r5686, 64;
	sub.s32 	%r208, %r5686, %r188;
	setp.lt.s32	%p83, %r208, 1;
	@%p83 bra 	BB0_161;

	and.b32  	%r209, %r186, 3;
	setp.eq.s32	%p84, %r209, 0;
	mov.u32 	%r12638, 0;
	@%p84 bra 	BB0_142;

	setp.eq.s32	%p85, %r209, 1;
	mov.u32 	%r12636, 0;
	@%p85 bra 	BB0_141;

	setp.eq.s32	%p86, %r209, 2;
	mov.u32 	%r12635, 0;
	@%p86 bra 	BB0_140;

	xor.b32  	%r5691, %r188, 7;
	cvt.u64.u32	%rd8744, %r5691;
	add.s64 	%rd8745, %rd349, %rd8744;
	ld.local.u8 	%rs83, [%rd8745];
	st.local.u8 	[%rd581], %rs83;
	mov.u32 	%r12635, 1;

BB0_140:
	add.s32 	%r5692, %r12635, %r188;
	xor.b32  	%r5693, %r5692, 7;
	cvt.s64.s32	%rd8746, %r5693;
	add.s64 	%rd8747, %rd349, %rd8746;
	ld.local.u8 	%rs84, [%rd8747];
	xor.b32  	%r5694, %r12635, 7;
	cvt.u64.u32	%rd8748, %r5694;
	add.s64 	%rd8749, %rd90, %rd8748;
	st.local.u8 	[%rd8749], %rs84;
	add.s32 	%r12636, %r12635, 1;

BB0_141:
	add.s32 	%r5695, %r12636, %r188;
	xor.b32  	%r5696, %r5695, 7;
	cvt.s64.s32	%rd8750, %r5696;
	add.s64 	%rd8751, %rd349, %rd8750;
	ld.local.u8 	%rs85, [%rd8751];
	xor.b32  	%r5697, %r12636, 7;
	cvt.s64.s32	%rd8752, %r5697;
	add.s64 	%rd8753, %rd90, %rd8752;
	st.local.u8 	[%rd8753], %rs85;
	add.s32 	%r12638, %r12636, 1;

BB0_142:
	and.b32  	%r5698, %r186, 124;
	setp.eq.s32	%p87, %r5698, 64;
	@%p87 bra 	BB0_161;

BB0_143:
	add.s32 	%r5699, %r12638, %r188;
	xor.b32  	%r5700, %r5699, 7;
	cvt.s64.s32	%rd8754, %r5700;
	add.s64 	%rd8755, %rd349, %rd8754;
	ld.local.u8 	%rs86, [%rd8755];
	xor.b32  	%r5701, %r12638, 7;
	cvt.s64.s32	%rd8756, %r5701;
	add.s64 	%rd8757, %rd90, %rd8756;
	st.local.u8 	[%rd8757], %rs86;
	add.s32 	%r5702, %r12638, 1;
	add.s32 	%r5703, %r5702, %r188;
	xor.b32  	%r5704, %r5703, 7;
	cvt.s64.s32	%rd8758, %r5704;
	add.s64 	%rd8759, %rd349, %rd8758;
	ld.local.u8 	%rs87, [%rd8759];
	xor.b32  	%r5705, %r5702, 7;
	cvt.s64.s32	%rd8760, %r5705;
	add.s64 	%rd8761, %rd90, %rd8760;
	st.local.u8 	[%rd8761], %rs87;
	add.s32 	%r5706, %r12638, 2;
	add.s32 	%r5707, %r5706, %r188;
	xor.b32  	%r5708, %r5707, 7;
	cvt.s64.s32	%rd8762, %r5708;
	add.s64 	%rd8763, %rd349, %rd8762;
	ld.local.u8 	%rs88, [%rd8763];
	xor.b32  	%r5709, %r5706, 7;
	cvt.s64.s32	%rd8764, %r5709;
	add.s64 	%rd8765, %rd90, %rd8764;
	st.local.u8 	[%rd8765], %rs88;
	add.s32 	%r5710, %r12638, 3;
	add.s32 	%r5711, %r5710, %r188;
	xor.b32  	%r5712, %r5711, 7;
	cvt.s64.s32	%rd8766, %r5712;
	add.s64 	%rd8767, %rd349, %rd8766;
	ld.local.u8 	%rs89, [%rd8767];
	xor.b32  	%r5713, %r5710, 7;
	cvt.s64.s32	%rd8768, %r5713;
	add.s64 	%rd8769, %rd90, %rd8768;
	st.local.u8 	[%rd8769], %rs89;
	add.s32 	%r12638, %r12638, 4;
	setp.lt.s32	%p88, %r12638, %r208;
	@%p88 bra 	BB0_143;

BB0_161:
	shr.u32 	%r12625, %r12625, 1;
	setp.ne.s32	%p99, %r12625, 0;
	@%p99 bra 	BB0_122;

BB0_162:
	ld.local.u32 	%r6590, [%rd1+192];
	and.b32  	%r248, %r6590, 127;
	sub.s32 	%r249, %r1990, %r248;
	and.b32  	%r250, %r249, 3;
	setp.eq.s32	%p100, %r250, 0;
	mov.u32 	%r256, %r248;
	@%p100 bra 	BB0_168;

	setp.eq.s32	%p101, %r250, 1;
	mov.u32 	%r12653, %r248;
	@%p101 bra 	BB0_167;

	setp.eq.s32	%p102, %r250, 2;
	mov.u32 	%r12652, %r248;
	@%p102 bra 	BB0_166;

	xor.b32  	%r6592, %r248, 7;
	cvt.u64.u32	%rd9933, %r6592;
	add.s64 	%rd9934, %rd90, %rd9933;
	mov.u16 	%rs217, 0;
	st.local.u8 	[%rd9934], %rs217;
	add.s32 	%r12652, %r248, 1;

BB0_166:
	xor.b32  	%r6593, %r12652, 7;
	cvt.s64.s32	%rd9935, %r6593;
	add.s64 	%rd9936, %rd90, %rd9935;
	mov.u16 	%rs218, 0;
	st.local.u8 	[%rd9936], %rs218;
	add.s32 	%r12653, %r12652, 1;

BB0_167:
	xor.b32  	%r6594, %r12653, 7;
	cvt.s64.s32	%rd9937, %r6594;
	add.s64 	%rd9938, %rd90, %rd9937;
	mov.u16 	%rs219, 0;
	st.local.u8 	[%rd9938], %rs219;
	add.s32 	%r256, %r12653, 1;

BB0_168:
	setp.lt.u32	%p103, %r249, 4;
	@%p103 bra 	BB0_178;

	add.s32 	%r257, %r256, 4;
	setp.gt.s32	%p104, %r257, 128;
	add.s32 	%r258, %r256, 3;
	selp.b32	%r6595, %r258, 127, %p104;
	sub.s32 	%r6596, %r6595, %r256;
	shr.u32 	%r6597, %r6596, 2;
	add.s32 	%r259, %r6597, 1;
	and.b32  	%r260, %r259, 3;
	setp.eq.s32	%p105, %r260, 0;
	@%p105 bra 	BB0_176;

	setp.eq.s32	%p106, %r260, 1;
	@%p106 bra 	BB0_175;

	setp.eq.s32	%p107, %r260, 2;
	@%p107 bra 	BB0_172;
	bra.uni 	BB0_173;

BB0_172:
	mov.u32 	%r257, %r256;
	bra.uni 	BB0_174;

BB0_173:
	xor.b32  	%r6598, %r256, 7;
	cvt.s64.s32	%rd9939, %r6598;
	add.s64 	%rd9940, %rd90, %rd9939;
	mov.u16 	%rs220, 0;
	st.local.u8 	[%rd9940], %rs220;
	add.s32 	%r6599, %r256, 1;
	xor.b32  	%r6600, %r6599, 7;
	cvt.s64.s32	%rd9941, %r6600;
	add.s64 	%rd9942, %rd90, %rd9941;
	st.local.u8 	[%rd9942], %rs220;
	add.s32 	%r6601, %r256, 2;
	xor.b32  	%r6602, %r6601, 7;
	cvt.s64.s32	%rd9943, %r6602;
	add.s64 	%rd9944, %rd90, %rd9943;
	st.local.u8 	[%rd9944], %rs220;
	xor.b32  	%r6603, %r258, 7;
	cvt.s64.s32	%rd9945, %r6603;
	add.s64 	%rd9946, %rd90, %rd9945;
	st.local.u8 	[%rd9946], %rs220;

BB0_174:
	xor.b32  	%r6604, %r257, 7;
	cvt.s64.s32	%rd9947, %r6604;
	add.s64 	%rd9948, %rd90, %rd9947;
	mov.u16 	%rs221, 0;
	st.local.u8 	[%rd9948], %rs221;
	add.s32 	%r6605, %r257, 1;
	xor.b32  	%r6606, %r6605, 7;
	cvt.s64.s32	%rd9949, %r6606;
	add.s64 	%rd9950, %rd90, %rd9949;
	st.local.u8 	[%rd9950], %rs221;
	add.s32 	%r6607, %r257, 2;
	xor.b32  	%r6608, %r6607, 7;
	cvt.s64.s32	%rd9951, %r6608;
	add.s64 	%rd9952, %rd90, %rd9951;
	st.local.u8 	[%rd9952], %rs221;
	add.s32 	%r6609, %r257, 3;
	xor.b32  	%r6610, %r6609, 7;
	cvt.s64.s32	%rd9953, %r6610;
	add.s64 	%rd9954, %rd90, %rd9953;
	st.local.u8 	[%rd9954], %rs221;
	add.s32 	%r256, %r257, 4;

BB0_175:
	xor.b32  	%r6611, %r256, 7;
	cvt.s64.s32	%rd9955, %r6611;
	add.s64 	%rd9956, %rd90, %rd9955;
	mov.u16 	%rs222, 0;
	st.local.u8 	[%rd9956], %rs222;
	add.s32 	%r6612, %r256, 1;
	xor.b32  	%r6613, %r6612, 7;
	cvt.s64.s32	%rd9957, %r6613;
	add.s64 	%rd9958, %rd90, %rd9957;
	st.local.u8 	[%rd9958], %rs222;
	add.s32 	%r6614, %r256, 2;
	xor.b32  	%r6615, %r6614, 7;
	cvt.s64.s32	%rd9959, %r6615;
	add.s64 	%rd9960, %rd90, %rd9959;
	st.local.u8 	[%rd9960], %rs222;
	add.s32 	%r6616, %r256, 3;
	xor.b32  	%r6617, %r6616, 7;
	cvt.s64.s32	%rd9961, %r6617;
	add.s64 	%rd9962, %rd90, %rd9961;
	st.local.u8 	[%rd9962], %rs222;
	add.s32 	%r256, %r256, 4;

BB0_176:
	setp.lt.u32	%p108, %r259, 4;
	@%p108 bra 	BB0_178;

BB0_177:
	xor.b32  	%r6618, %r256, 7;
	cvt.s64.s32	%rd9963, %r6618;
	add.s64 	%rd9964, %rd90, %rd9963;
	mov.u16 	%rs223, 0;
	st.local.u8 	[%rd9964], %rs223;
	add.s32 	%r6619, %r256, 1;
	xor.b32  	%r6620, %r6619, 7;
	cvt.s64.s32	%rd9965, %r6620;
	add.s64 	%rd9966, %rd90, %rd9965;
	st.local.u8 	[%rd9966], %rs223;
	add.s32 	%r6621, %r256, 2;
	xor.b32  	%r6622, %r6621, 7;
	cvt.s64.s32	%rd9967, %r6622;
	add.s64 	%rd9968, %rd90, %rd9967;
	st.local.u8 	[%rd9968], %rs223;
	add.s32 	%r6623, %r256, 3;
	xor.b32  	%r6624, %r6623, 7;
	cvt.s64.s32	%rd9969, %r6624;
	add.s64 	%rd9970, %rd90, %rd9969;
	st.local.u8 	[%rd9970], %rs223;
	add.s32 	%r6625, %r256, 4;
	xor.b32  	%r6626, %r6625, 7;
	cvt.s64.s32	%rd9971, %r6626;
	add.s64 	%rd9972, %rd90, %rd9971;
	st.local.u8 	[%rd9972], %rs223;
	add.s32 	%r6627, %r256, 5;
	xor.b32  	%r6628, %r6627, 7;
	cvt.s64.s32	%rd9973, %r6628;
	add.s64 	%rd9974, %rd90, %rd9973;
	st.local.u8 	[%rd9974], %rs223;
	add.s32 	%r6629, %r256, 6;
	xor.b32  	%r6630, %r6629, 7;
	cvt.s64.s32	%rd9975, %r6630;
	add.s64 	%rd9976, %rd90, %rd9975;
	st.local.u8 	[%rd9976], %rs223;
	add.s32 	%r6631, %r256, 7;
	xor.b32  	%r6632, %r6631, 7;
	cvt.s64.s32	%rd9977, %r6632;
	add.s64 	%rd9978, %rd90, %rd9977;
	st.local.u8 	[%rd9978], %rs223;
	add.s32 	%r6633, %r256, 8;
	xor.b32  	%r6634, %r6633, 7;
	cvt.s64.s32	%rd9979, %r6634;
	add.s64 	%rd9980, %rd90, %rd9979;
	st.local.u8 	[%rd9980], %rs223;
	add.s32 	%r6635, %r256, 9;
	xor.b32  	%r6636, %r6635, 7;
	cvt.s64.s32	%rd9981, %r6636;
	add.s64 	%rd9982, %rd90, %rd9981;
	st.local.u8 	[%rd9982], %rs223;
	add.s32 	%r6637, %r256, 10;
	xor.b32  	%r6638, %r6637, 7;
	cvt.s64.s32	%rd9983, %r6638;
	add.s64 	%rd9984, %rd90, %rd9983;
	st.local.u8 	[%rd9984], %rs223;
	add.s32 	%r6639, %r256, 11;
	xor.b32  	%r6640, %r6639, 7;
	cvt.s64.s32	%rd9985, %r6640;
	add.s64 	%rd9986, %rd90, %rd9985;
	st.local.u8 	[%rd9986], %rs223;
	add.s32 	%r6641, %r256, 12;
	xor.b32  	%r6642, %r6641, 7;
	cvt.s64.s32	%rd9987, %r6642;
	add.s64 	%rd9988, %rd90, %rd9987;
	st.local.u8 	[%rd9988], %rs223;
	add.s32 	%r6643, %r256, 13;
	xor.b32  	%r6644, %r6643, 7;
	cvt.s64.s32	%rd9989, %r6644;
	add.s64 	%rd9990, %rd90, %rd9989;
	st.local.u8 	[%rd9990], %rs223;
	add.s32 	%r6645, %r256, 14;
	xor.b32  	%r6646, %r6645, 7;
	cvt.s64.s32	%rd9991, %r6646;
	add.s64 	%rd9992, %rd90, %rd9991;
	st.local.u8 	[%rd9992], %rs223;
	add.s32 	%r6647, %r256, 15;
	xor.b32  	%r6648, %r6647, 7;
	cvt.s64.s32	%rd9993, %r6648;
	add.s64 	%rd9994, %rd90, %rd9993;
	st.local.u8 	[%rd9994], %rs223;
	add.s32 	%r256, %r256, 16;
	setp.lt.s32	%p109, %r256, 128;
	@%p109 bra 	BB0_177;

BB0_178:
	mov.u16 	%rs268, 128;
	xor.b32  	%r6649, %r248, 7;
	cvt.u64.u32	%rd9995, %r6649;
	add.s64 	%rd9996, %rd90, %rd9995;
	st.local.u8 	[%rd9996], %rs268;
	ld.local.u64 	%rd18545, [%rd1+64];
	ld.local.u64 	%rd18546, [%rd1+72];
	ld.local.u64 	%rd18547, [%rd1+80];
	ld.local.u64 	%rd18548, [%rd1+88];
	ld.local.u64 	%rd18549, [%rd1+96];
	ld.local.u64 	%rd18550, [%rd1+104];
	ld.local.u64 	%rd18551, [%rd1+112];
	ld.local.u64 	%rd18552, [%rd1+120];
	ld.local.u64 	%rd18536, [%rd1+128];
	ld.local.u64 	%rd18535, [%rd1+136];
	ld.local.u64 	%rd18534, [%rd1+144];
	ld.local.u64 	%rd18533, [%rd1+152];
	ld.local.u64 	%rd18532, [%rd1+160];
	ld.local.u64 	%rd18531, [%rd1+168];
	ld.local.u64 	%rd18530, [%rd1+176];
	setp.gt.u32	%p110, %r248, 111;
	@%p110 bra 	BB0_180;
	bra.uni 	BB0_179;

BB0_180:
	ld.local.u64 	%rd766, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd766;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 14;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 14;
	mov.b64 	%rd9997, {%r6654, %r6653};
	shf.r.wrap.b32 	%r6655, %r6652, %r6651, 18;
	shf.r.wrap.b32 	%r6656, %r6651, %r6652, 18;
	mov.b64 	%rd9998, {%r6656, %r6655};
	xor.b64  	%rd9999, %rd9998, %rd9997;
	shf.l.wrap.b32 	%r6657, %r6651, %r6652, 23;
	shf.l.wrap.b32 	%r6658, %r6652, %r6651, 23;
	mov.b64 	%rd10000, {%r6658, %r6657};
	xor.b64  	%rd10001, %rd9999, %rd10000;
	ld.local.u64 	%rd767, [%rd1+48];
	ld.local.u64 	%rd768, [%rd1+40];
	xor.b64  	%rd10002, %rd767, %rd768;
	and.b64  	%rd10003, %rd10002, %rd766;
	xor.b64  	%rd10004, %rd10003, %rd767;
	ld.local.u64 	%rd769, [%rd1+56];
	add.s64 	%rd10005, %rd769, %rd18545;
	add.s64 	%rd10006, %rd10005, %rd18338;
	add.s64 	%rd10007, %rd10006, %rd10004;
	add.s64 	%rd10008, %rd10007, %rd10001;
	ld.local.u64 	%rd770, [%rd1+24];
	add.s64 	%rd10009, %rd10008, %rd770;
	ld.local.u64 	%rd771, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6659,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6660}, %rd771;
	}
	shf.r.wrap.b32 	%r6661, %r6660, %r6659, 28;
	shf.r.wrap.b32 	%r6662, %r6659, %r6660, 28;
	mov.b64 	%rd10010, {%r6662, %r6661};
	shf.l.wrap.b32 	%r6663, %r6659, %r6660, 30;
	shf.l.wrap.b32 	%r6664, %r6660, %r6659, 30;
	mov.b64 	%rd10011, {%r6664, %r6663};
	xor.b64  	%rd10012, %rd10011, %rd10010;
	shf.l.wrap.b32 	%r6665, %r6659, %r6660, 25;
	shf.l.wrap.b32 	%r6666, %r6660, %r6659, 25;
	mov.b64 	%rd10013, {%r6666, %r6665};
	xor.b64  	%rd10014, %rd10012, %rd10013;
	ld.local.u64 	%rd772, [%rd1+8];
	and.b64  	%rd10015, %rd772, %rd771;
	xor.b64  	%rd10016, %rd772, %rd771;
	ld.local.u64 	%rd773, [%rd1+16];
	and.b64  	%rd10017, %rd773, %rd10016;
	or.b64  	%rd10018, %rd10017, %rd10015;
	add.s64 	%rd10019, %rd10008, %rd10018;
	add.s64 	%rd10020, %rd10019, %rd10014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd10009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd10009;
	}
	shf.r.wrap.b32 	%r6669, %r6668, %r6667, 14;
	shf.r.wrap.b32 	%r6670, %r6667, %r6668, 14;
	mov.b64 	%rd10021, {%r6670, %r6669};
	shf.r.wrap.b32 	%r6671, %r6668, %r6667, 18;
	shf.r.wrap.b32 	%r6672, %r6667, %r6668, 18;
	mov.b64 	%rd10022, {%r6672, %r6671};
	xor.b64  	%rd10023, %rd10022, %rd10021;
	shf.l.wrap.b32 	%r6673, %r6667, %r6668, 23;
	shf.l.wrap.b32 	%r6674, %r6668, %r6667, 23;
	mov.b64 	%rd10024, {%r6674, %r6673};
	xor.b64  	%rd10025, %rd10023, %rd10024;
	xor.b64  	%rd10026, %rd768, %rd766;
	and.b64  	%rd10027, %rd10009, %rd10026;
	xor.b64  	%rd10028, %rd10027, %rd768;
	add.s64 	%rd10029, %rd767, %rd18546;
	add.s64 	%rd10030, %rd10029, %rd18337;
	add.s64 	%rd10031, %rd10030, %rd10028;
	add.s64 	%rd10032, %rd10031, %rd10025;
	add.s64 	%rd10033, %rd10032, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6675,%dummy}, %rd10020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6676}, %rd10020;
	}
	shf.r.wrap.b32 	%r6677, %r6676, %r6675, 28;
	shf.r.wrap.b32 	%r6678, %r6675, %r6676, 28;
	mov.b64 	%rd10034, {%r6678, %r6677};
	shf.l.wrap.b32 	%r6679, %r6675, %r6676, 30;
	shf.l.wrap.b32 	%r6680, %r6676, %r6675, 30;
	mov.b64 	%rd10035, {%r6680, %r6679};
	xor.b64  	%rd10036, %rd10035, %rd10034;
	shf.l.wrap.b32 	%r6681, %r6675, %r6676, 25;
	shf.l.wrap.b32 	%r6682, %r6676, %r6675, 25;
	mov.b64 	%rd10037, {%r6682, %r6681};
	xor.b64  	%rd10038, %rd10036, %rd10037;
	and.b64  	%rd10039, %rd10020, %rd771;
	xor.b64  	%rd10040, %rd10020, %rd771;
	and.b64  	%rd10041, %rd10040, %rd772;
	or.b64  	%rd10042, %rd10041, %rd10039;
	add.s64 	%rd10043, %rd10032, %rd10042;
	add.s64 	%rd10044, %rd10043, %rd10038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6683,%dummy}, %rd10033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6684}, %rd10033;
	}
	shf.r.wrap.b32 	%r6685, %r6684, %r6683, 14;
	shf.r.wrap.b32 	%r6686, %r6683, %r6684, 14;
	mov.b64 	%rd10045, {%r6686, %r6685};
	shf.r.wrap.b32 	%r6687, %r6684, %r6683, 18;
	shf.r.wrap.b32 	%r6688, %r6683, %r6684, 18;
	mov.b64 	%rd10046, {%r6688, %r6687};
	xor.b64  	%rd10047, %rd10046, %rd10045;
	shf.l.wrap.b32 	%r6689, %r6683, %r6684, 23;
	shf.l.wrap.b32 	%r6690, %r6684, %r6683, 23;
	mov.b64 	%rd10048, {%r6690, %r6689};
	xor.b64  	%rd10049, %rd10047, %rd10048;
	xor.b64  	%rd10050, %rd10009, %rd766;
	and.b64  	%rd10051, %rd10033, %rd10050;
	xor.b64  	%rd10052, %rd10051, %rd766;
	add.s64 	%rd10053, %rd768, %rd18547;
	add.s64 	%rd10054, %rd10053, %rd18336;
	add.s64 	%rd10055, %rd10054, %rd10052;
	add.s64 	%rd10056, %rd10055, %rd10049;
	add.s64 	%rd10057, %rd10056, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6691,%dummy}, %rd10044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6692}, %rd10044;
	}
	shf.r.wrap.b32 	%r6693, %r6692, %r6691, 28;
	shf.r.wrap.b32 	%r6694, %r6691, %r6692, 28;
	mov.b64 	%rd10058, {%r6694, %r6693};
	shf.l.wrap.b32 	%r6695, %r6691, %r6692, 30;
	shf.l.wrap.b32 	%r6696, %r6692, %r6691, 30;
	mov.b64 	%rd10059, {%r6696, %r6695};
	xor.b64  	%rd10060, %rd10059, %rd10058;
	shf.l.wrap.b32 	%r6697, %r6691, %r6692, 25;
	shf.l.wrap.b32 	%r6698, %r6692, %r6691, 25;
	mov.b64 	%rd10061, {%r6698, %r6697};
	xor.b64  	%rd10062, %rd10060, %rd10061;
	and.b64  	%rd10063, %rd10044, %rd10020;
	xor.b64  	%rd10064, %rd10044, %rd10020;
	and.b64  	%rd10065, %rd10064, %rd771;
	or.b64  	%rd10066, %rd10065, %rd10063;
	add.s64 	%rd10067, %rd10056, %rd10066;
	add.s64 	%rd10068, %rd10067, %rd10062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6699,%dummy}, %rd10057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6700}, %rd10057;
	}
	shf.r.wrap.b32 	%r6701, %r6700, %r6699, 14;
	shf.r.wrap.b32 	%r6702, %r6699, %r6700, 14;
	mov.b64 	%rd10069, {%r6702, %r6701};
	shf.r.wrap.b32 	%r6703, %r6700, %r6699, 18;
	shf.r.wrap.b32 	%r6704, %r6699, %r6700, 18;
	mov.b64 	%rd10070, {%r6704, %r6703};
	xor.b64  	%rd10071, %rd10070, %rd10069;
	shf.l.wrap.b32 	%r6705, %r6699, %r6700, 23;
	shf.l.wrap.b32 	%r6706, %r6700, %r6699, 23;
	mov.b64 	%rd10072, {%r6706, %r6705};
	xor.b64  	%rd10073, %rd10071, %rd10072;
	xor.b64  	%rd10074, %rd10033, %rd10009;
	and.b64  	%rd10075, %rd10057, %rd10074;
	xor.b64  	%rd10076, %rd10075, %rd10009;
	add.s64 	%rd10077, %rd766, %rd18548;
	add.s64 	%rd10078, %rd10077, %rd18335;
	add.s64 	%rd10079, %rd10078, %rd10076;
	add.s64 	%rd10080, %rd10079, %rd10073;
	add.s64 	%rd10081, %rd10080, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd10068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd10068;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 28;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 28;
	mov.b64 	%rd10082, {%r6710, %r6709};
	shf.l.wrap.b32 	%r6711, %r6707, %r6708, 30;
	shf.l.wrap.b32 	%r6712, %r6708, %r6707, 30;
	mov.b64 	%rd10083, {%r6712, %r6711};
	xor.b64  	%rd10084, %rd10083, %rd10082;
	shf.l.wrap.b32 	%r6713, %r6707, %r6708, 25;
	shf.l.wrap.b32 	%r6714, %r6708, %r6707, 25;
	mov.b64 	%rd10085, {%r6714, %r6713};
	xor.b64  	%rd10086, %rd10084, %rd10085;
	and.b64  	%rd10087, %rd10068, %rd10044;
	xor.b64  	%rd10088, %rd10068, %rd10044;
	and.b64  	%rd10089, %rd10088, %rd10020;
	or.b64  	%rd10090, %rd10089, %rd10087;
	add.s64 	%rd10091, %rd10080, %rd10090;
	add.s64 	%rd10092, %rd10091, %rd10086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6715,%dummy}, %rd10081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6716}, %rd10081;
	}
	shf.r.wrap.b32 	%r6717, %r6716, %r6715, 14;
	shf.r.wrap.b32 	%r6718, %r6715, %r6716, 14;
	mov.b64 	%rd10093, {%r6718, %r6717};
	shf.r.wrap.b32 	%r6719, %r6716, %r6715, 18;
	shf.r.wrap.b32 	%r6720, %r6715, %r6716, 18;
	mov.b64 	%rd10094, {%r6720, %r6719};
	xor.b64  	%rd10095, %rd10094, %rd10093;
	shf.l.wrap.b32 	%r6721, %r6715, %r6716, 23;
	shf.l.wrap.b32 	%r6722, %r6716, %r6715, 23;
	mov.b64 	%rd10096, {%r6722, %r6721};
	xor.b64  	%rd10097, %rd10095, %rd10096;
	xor.b64  	%rd10098, %rd10057, %rd10033;
	and.b64  	%rd10099, %rd10081, %rd10098;
	xor.b64  	%rd10100, %rd10099, %rd10033;
	add.s64 	%rd10101, %rd10009, %rd18549;
	add.s64 	%rd10102, %rd10101, %rd18334;
	add.s64 	%rd10103, %rd10102, %rd10100;
	add.s64 	%rd10104, %rd10103, %rd10097;
	add.s64 	%rd10105, %rd10104, %rd10020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6723,%dummy}, %rd10092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6724}, %rd10092;
	}
	shf.r.wrap.b32 	%r6725, %r6724, %r6723, 28;
	shf.r.wrap.b32 	%r6726, %r6723, %r6724, 28;
	mov.b64 	%rd10106, {%r6726, %r6725};
	shf.l.wrap.b32 	%r6727, %r6723, %r6724, 30;
	shf.l.wrap.b32 	%r6728, %r6724, %r6723, 30;
	mov.b64 	%rd10107, {%r6728, %r6727};
	xor.b64  	%rd10108, %rd10107, %rd10106;
	shf.l.wrap.b32 	%r6729, %r6723, %r6724, 25;
	shf.l.wrap.b32 	%r6730, %r6724, %r6723, 25;
	mov.b64 	%rd10109, {%r6730, %r6729};
	xor.b64  	%rd10110, %rd10108, %rd10109;
	and.b64  	%rd10111, %rd10092, %rd10068;
	xor.b64  	%rd10112, %rd10092, %rd10068;
	and.b64  	%rd10113, %rd10112, %rd10044;
	or.b64  	%rd10114, %rd10113, %rd10111;
	add.s64 	%rd10115, %rd10104, %rd10114;
	add.s64 	%rd10116, %rd10115, %rd10110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6731,%dummy}, %rd10105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6732}, %rd10105;
	}
	shf.r.wrap.b32 	%r6733, %r6732, %r6731, 14;
	shf.r.wrap.b32 	%r6734, %r6731, %r6732, 14;
	mov.b64 	%rd10117, {%r6734, %r6733};
	shf.r.wrap.b32 	%r6735, %r6732, %r6731, 18;
	shf.r.wrap.b32 	%r6736, %r6731, %r6732, 18;
	mov.b64 	%rd10118, {%r6736, %r6735};
	xor.b64  	%rd10119, %rd10118, %rd10117;
	shf.l.wrap.b32 	%r6737, %r6731, %r6732, 23;
	shf.l.wrap.b32 	%r6738, %r6732, %r6731, 23;
	mov.b64 	%rd10120, {%r6738, %r6737};
	xor.b64  	%rd10121, %rd10119, %rd10120;
	xor.b64  	%rd10122, %rd10081, %rd10057;
	and.b64  	%rd10123, %rd10105, %rd10122;
	xor.b64  	%rd10124, %rd10123, %rd10057;
	add.s64 	%rd10125, %rd10033, %rd18550;
	add.s64 	%rd10126, %rd10125, %rd18333;
	add.s64 	%rd10127, %rd10126, %rd10124;
	add.s64 	%rd10128, %rd10127, %rd10121;
	add.s64 	%rd10129, %rd10128, %rd10044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6739,%dummy}, %rd10116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6740}, %rd10116;
	}
	shf.r.wrap.b32 	%r6741, %r6740, %r6739, 28;
	shf.r.wrap.b32 	%r6742, %r6739, %r6740, 28;
	mov.b64 	%rd10130, {%r6742, %r6741};
	shf.l.wrap.b32 	%r6743, %r6739, %r6740, 30;
	shf.l.wrap.b32 	%r6744, %r6740, %r6739, 30;
	mov.b64 	%rd10131, {%r6744, %r6743};
	xor.b64  	%rd10132, %rd10131, %rd10130;
	shf.l.wrap.b32 	%r6745, %r6739, %r6740, 25;
	shf.l.wrap.b32 	%r6746, %r6740, %r6739, 25;
	mov.b64 	%rd10133, {%r6746, %r6745};
	xor.b64  	%rd10134, %rd10132, %rd10133;
	and.b64  	%rd10135, %rd10116, %rd10092;
	xor.b64  	%rd10136, %rd10116, %rd10092;
	and.b64  	%rd10137, %rd10136, %rd10068;
	or.b64  	%rd10138, %rd10137, %rd10135;
	add.s64 	%rd10139, %rd10128, %rd10138;
	add.s64 	%rd10140, %rd10139, %rd10134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6747,%dummy}, %rd10129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6748}, %rd10129;
	}
	shf.r.wrap.b32 	%r6749, %r6748, %r6747, 14;
	shf.r.wrap.b32 	%r6750, %r6747, %r6748, 14;
	mov.b64 	%rd10141, {%r6750, %r6749};
	shf.r.wrap.b32 	%r6751, %r6748, %r6747, 18;
	shf.r.wrap.b32 	%r6752, %r6747, %r6748, 18;
	mov.b64 	%rd10142, {%r6752, %r6751};
	xor.b64  	%rd10143, %rd10142, %rd10141;
	shf.l.wrap.b32 	%r6753, %r6747, %r6748, 23;
	shf.l.wrap.b32 	%r6754, %r6748, %r6747, 23;
	mov.b64 	%rd10144, {%r6754, %r6753};
	xor.b64  	%rd10145, %rd10143, %rd10144;
	xor.b64  	%rd10146, %rd10105, %rd10081;
	and.b64  	%rd10147, %rd10129, %rd10146;
	xor.b64  	%rd10148, %rd10147, %rd10081;
	add.s64 	%rd10149, %rd10057, %rd18551;
	add.s64 	%rd10150, %rd10149, %rd18332;
	add.s64 	%rd10151, %rd10150, %rd10148;
	add.s64 	%rd10152, %rd10151, %rd10145;
	add.s64 	%rd10153, %rd10152, %rd10068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6755,%dummy}, %rd10140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6756}, %rd10140;
	}
	shf.r.wrap.b32 	%r6757, %r6756, %r6755, 28;
	shf.r.wrap.b32 	%r6758, %r6755, %r6756, 28;
	mov.b64 	%rd10154, {%r6758, %r6757};
	shf.l.wrap.b32 	%r6759, %r6755, %r6756, 30;
	shf.l.wrap.b32 	%r6760, %r6756, %r6755, 30;
	mov.b64 	%rd10155, {%r6760, %r6759};
	xor.b64  	%rd10156, %rd10155, %rd10154;
	shf.l.wrap.b32 	%r6761, %r6755, %r6756, 25;
	shf.l.wrap.b32 	%r6762, %r6756, %r6755, 25;
	mov.b64 	%rd10157, {%r6762, %r6761};
	xor.b64  	%rd10158, %rd10156, %rd10157;
	and.b64  	%rd10159, %rd10140, %rd10116;
	xor.b64  	%rd10160, %rd10140, %rd10116;
	and.b64  	%rd10161, %rd10160, %rd10092;
	or.b64  	%rd10162, %rd10161, %rd10159;
	add.s64 	%rd10163, %rd10152, %rd10162;
	add.s64 	%rd10164, %rd10163, %rd10158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd10153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd10153;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 14;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 14;
	mov.b64 	%rd10165, {%r6766, %r6765};
	shf.r.wrap.b32 	%r6767, %r6764, %r6763, 18;
	shf.r.wrap.b32 	%r6768, %r6763, %r6764, 18;
	mov.b64 	%rd10166, {%r6768, %r6767};
	xor.b64  	%rd10167, %rd10166, %rd10165;
	shf.l.wrap.b32 	%r6769, %r6763, %r6764, 23;
	shf.l.wrap.b32 	%r6770, %r6764, %r6763, 23;
	mov.b64 	%rd10168, {%r6770, %r6769};
	xor.b64  	%rd10169, %rd10167, %rd10168;
	xor.b64  	%rd10170, %rd10129, %rd10105;
	and.b64  	%rd10171, %rd10153, %rd10170;
	xor.b64  	%rd10172, %rd10171, %rd10105;
	add.s64 	%rd10173, %rd10081, %rd18552;
	add.s64 	%rd10174, %rd10173, %rd18331;
	add.s64 	%rd10175, %rd10174, %rd10172;
	add.s64 	%rd10176, %rd10175, %rd10169;
	add.s64 	%rd10177, %rd10176, %rd10092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6771,%dummy}, %rd10164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6772}, %rd10164;
	}
	shf.r.wrap.b32 	%r6773, %r6772, %r6771, 28;
	shf.r.wrap.b32 	%r6774, %r6771, %r6772, 28;
	mov.b64 	%rd10178, {%r6774, %r6773};
	shf.l.wrap.b32 	%r6775, %r6771, %r6772, 30;
	shf.l.wrap.b32 	%r6776, %r6772, %r6771, 30;
	mov.b64 	%rd10179, {%r6776, %r6775};
	xor.b64  	%rd10180, %rd10179, %rd10178;
	shf.l.wrap.b32 	%r6777, %r6771, %r6772, 25;
	shf.l.wrap.b32 	%r6778, %r6772, %r6771, 25;
	mov.b64 	%rd10181, {%r6778, %r6777};
	xor.b64  	%rd10182, %rd10180, %rd10181;
	and.b64  	%rd10183, %rd10164, %rd10140;
	xor.b64  	%rd10184, %rd10164, %rd10140;
	and.b64  	%rd10185, %rd10184, %rd10116;
	or.b64  	%rd10186, %rd10185, %rd10183;
	add.s64 	%rd10187, %rd10176, %rd10186;
	add.s64 	%rd10188, %rd10187, %rd10182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6779,%dummy}, %rd10177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6780}, %rd10177;
	}
	shf.r.wrap.b32 	%r6781, %r6780, %r6779, 14;
	shf.r.wrap.b32 	%r6782, %r6779, %r6780, 14;
	mov.b64 	%rd10189, {%r6782, %r6781};
	shf.r.wrap.b32 	%r6783, %r6780, %r6779, 18;
	shf.r.wrap.b32 	%r6784, %r6779, %r6780, 18;
	mov.b64 	%rd10190, {%r6784, %r6783};
	xor.b64  	%rd10191, %rd10190, %rd10189;
	shf.l.wrap.b32 	%r6785, %r6779, %r6780, 23;
	shf.l.wrap.b32 	%r6786, %r6780, %r6779, 23;
	mov.b64 	%rd10192, {%r6786, %r6785};
	xor.b64  	%rd10193, %rd10191, %rd10192;
	xor.b64  	%rd10194, %rd10153, %rd10129;
	and.b64  	%rd10195, %rd10177, %rd10194;
	xor.b64  	%rd10196, %rd10195, %rd10129;
	add.s64 	%rd10197, %rd10105, %rd18536;
	add.s64 	%rd10198, %rd10197, %rd18330;
	add.s64 	%rd10199, %rd10198, %rd10196;
	add.s64 	%rd10200, %rd10199, %rd10193;
	add.s64 	%rd10201, %rd10200, %rd10116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6787,%dummy}, %rd10188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6788}, %rd10188;
	}
	shf.r.wrap.b32 	%r6789, %r6788, %r6787, 28;
	shf.r.wrap.b32 	%r6790, %r6787, %r6788, 28;
	mov.b64 	%rd10202, {%r6790, %r6789};
	shf.l.wrap.b32 	%r6791, %r6787, %r6788, 30;
	shf.l.wrap.b32 	%r6792, %r6788, %r6787, 30;
	mov.b64 	%rd10203, {%r6792, %r6791};
	xor.b64  	%rd10204, %rd10203, %rd10202;
	shf.l.wrap.b32 	%r6793, %r6787, %r6788, 25;
	shf.l.wrap.b32 	%r6794, %r6788, %r6787, 25;
	mov.b64 	%rd10205, {%r6794, %r6793};
	xor.b64  	%rd10206, %rd10204, %rd10205;
	and.b64  	%rd10207, %rd10188, %rd10164;
	xor.b64  	%rd10208, %rd10188, %rd10164;
	and.b64  	%rd10209, %rd10208, %rd10140;
	or.b64  	%rd10210, %rd10209, %rd10207;
	add.s64 	%rd10211, %rd10200, %rd10210;
	add.s64 	%rd10212, %rd10211, %rd10206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6795,%dummy}, %rd10201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6796}, %rd10201;
	}
	shf.r.wrap.b32 	%r6797, %r6796, %r6795, 14;
	shf.r.wrap.b32 	%r6798, %r6795, %r6796, 14;
	mov.b64 	%rd10213, {%r6798, %r6797};
	shf.r.wrap.b32 	%r6799, %r6796, %r6795, 18;
	shf.r.wrap.b32 	%r6800, %r6795, %r6796, 18;
	mov.b64 	%rd10214, {%r6800, %r6799};
	xor.b64  	%rd10215, %rd10214, %rd10213;
	shf.l.wrap.b32 	%r6801, %r6795, %r6796, 23;
	shf.l.wrap.b32 	%r6802, %r6796, %r6795, 23;
	mov.b64 	%rd10216, {%r6802, %r6801};
	xor.b64  	%rd10217, %rd10215, %rd10216;
	xor.b64  	%rd10218, %rd10177, %rd10153;
	and.b64  	%rd10219, %rd10201, %rd10218;
	xor.b64  	%rd10220, %rd10219, %rd10153;
	add.s64 	%rd10221, %rd10129, %rd18535;
	add.s64 	%rd10222, %rd10221, %rd18329;
	add.s64 	%rd10223, %rd10222, %rd10220;
	add.s64 	%rd10224, %rd10223, %rd10217;
	add.s64 	%rd10225, %rd10224, %rd10140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6803,%dummy}, %rd10212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6804}, %rd10212;
	}
	shf.r.wrap.b32 	%r6805, %r6804, %r6803, 28;
	shf.r.wrap.b32 	%r6806, %r6803, %r6804, 28;
	mov.b64 	%rd10226, {%r6806, %r6805};
	shf.l.wrap.b32 	%r6807, %r6803, %r6804, 30;
	shf.l.wrap.b32 	%r6808, %r6804, %r6803, 30;
	mov.b64 	%rd10227, {%r6808, %r6807};
	xor.b64  	%rd10228, %rd10227, %rd10226;
	shf.l.wrap.b32 	%r6809, %r6803, %r6804, 25;
	shf.l.wrap.b32 	%r6810, %r6804, %r6803, 25;
	mov.b64 	%rd10229, {%r6810, %r6809};
	xor.b64  	%rd10230, %rd10228, %rd10229;
	and.b64  	%rd10231, %rd10212, %rd10188;
	xor.b64  	%rd10232, %rd10212, %rd10188;
	and.b64  	%rd10233, %rd10232, %rd10164;
	or.b64  	%rd10234, %rd10233, %rd10231;
	add.s64 	%rd10235, %rd10224, %rd10234;
	add.s64 	%rd10236, %rd10235, %rd10230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6811,%dummy}, %rd10225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6812}, %rd10225;
	}
	shf.r.wrap.b32 	%r6813, %r6812, %r6811, 14;
	shf.r.wrap.b32 	%r6814, %r6811, %r6812, 14;
	mov.b64 	%rd10237, {%r6814, %r6813};
	shf.r.wrap.b32 	%r6815, %r6812, %r6811, 18;
	shf.r.wrap.b32 	%r6816, %r6811, %r6812, 18;
	mov.b64 	%rd10238, {%r6816, %r6815};
	xor.b64  	%rd10239, %rd10238, %rd10237;
	shf.l.wrap.b32 	%r6817, %r6811, %r6812, 23;
	shf.l.wrap.b32 	%r6818, %r6812, %r6811, 23;
	mov.b64 	%rd10240, {%r6818, %r6817};
	xor.b64  	%rd10241, %rd10239, %rd10240;
	xor.b64  	%rd10242, %rd10201, %rd10177;
	and.b64  	%rd10243, %rd10225, %rd10242;
	xor.b64  	%rd10244, %rd10243, %rd10177;
	add.s64 	%rd10245, %rd10153, %rd18534;
	add.s64 	%rd10246, %rd10245, %rd18328;
	add.s64 	%rd10247, %rd10246, %rd10244;
	add.s64 	%rd10248, %rd10247, %rd10241;
	add.s64 	%rd10249, %rd10248, %rd10164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6819,%dummy}, %rd10236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6820}, %rd10236;
	}
	shf.r.wrap.b32 	%r6821, %r6820, %r6819, 28;
	shf.r.wrap.b32 	%r6822, %r6819, %r6820, 28;
	mov.b64 	%rd10250, {%r6822, %r6821};
	shf.l.wrap.b32 	%r6823, %r6819, %r6820, 30;
	shf.l.wrap.b32 	%r6824, %r6820, %r6819, 30;
	mov.b64 	%rd10251, {%r6824, %r6823};
	xor.b64  	%rd10252, %rd10251, %rd10250;
	shf.l.wrap.b32 	%r6825, %r6819, %r6820, 25;
	shf.l.wrap.b32 	%r6826, %r6820, %r6819, 25;
	mov.b64 	%rd10253, {%r6826, %r6825};
	xor.b64  	%rd10254, %rd10252, %rd10253;
	and.b64  	%rd10255, %rd10236, %rd10212;
	xor.b64  	%rd10256, %rd10236, %rd10212;
	and.b64  	%rd10257, %rd10256, %rd10188;
	or.b64  	%rd10258, %rd10257, %rd10255;
	add.s64 	%rd10259, %rd10248, %rd10258;
	add.s64 	%rd10260, %rd10259, %rd10254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd10249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd10249;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 14;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 14;
	mov.b64 	%rd10261, {%r6830, %r6829};
	shf.r.wrap.b32 	%r6831, %r6828, %r6827, 18;
	shf.r.wrap.b32 	%r6832, %r6827, %r6828, 18;
	mov.b64 	%rd10262, {%r6832, %r6831};
	xor.b64  	%rd10263, %rd10262, %rd10261;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 23;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 23;
	mov.b64 	%rd10264, {%r6834, %r6833};
	xor.b64  	%rd10265, %rd10263, %rd10264;
	xor.b64  	%rd10266, %rd10225, %rd10201;
	and.b64  	%rd10267, %rd10249, %rd10266;
	xor.b64  	%rd10268, %rd10267, %rd10201;
	add.s64 	%rd10269, %rd10177, %rd18533;
	add.s64 	%rd10270, %rd10269, %rd18327;
	add.s64 	%rd10271, %rd10270, %rd10268;
	add.s64 	%rd10272, %rd10271, %rd10265;
	add.s64 	%rd10273, %rd10272, %rd10188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd10260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd10260;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 28;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 28;
	mov.b64 	%rd10274, {%r6838, %r6837};
	shf.l.wrap.b32 	%r6839, %r6835, %r6836, 30;
	shf.l.wrap.b32 	%r6840, %r6836, %r6835, 30;
	mov.b64 	%rd10275, {%r6840, %r6839};
	xor.b64  	%rd10276, %rd10275, %rd10274;
	shf.l.wrap.b32 	%r6841, %r6835, %r6836, 25;
	shf.l.wrap.b32 	%r6842, %r6836, %r6835, 25;
	mov.b64 	%rd10277, {%r6842, %r6841};
	xor.b64  	%rd10278, %rd10276, %rd10277;
	and.b64  	%rd10279, %rd10260, %rd10236;
	xor.b64  	%rd10280, %rd10260, %rd10236;
	and.b64  	%rd10281, %rd10280, %rd10212;
	or.b64  	%rd10282, %rd10281, %rd10279;
	add.s64 	%rd10283, %rd10272, %rd10282;
	add.s64 	%rd10284, %rd10283, %rd10278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6843,%dummy}, %rd10273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6844}, %rd10273;
	}
	shf.r.wrap.b32 	%r6845, %r6844, %r6843, 14;
	shf.r.wrap.b32 	%r6846, %r6843, %r6844, 14;
	mov.b64 	%rd10285, {%r6846, %r6845};
	shf.r.wrap.b32 	%r6847, %r6844, %r6843, 18;
	shf.r.wrap.b32 	%r6848, %r6843, %r6844, 18;
	mov.b64 	%rd10286, {%r6848, %r6847};
	xor.b64  	%rd10287, %rd10286, %rd10285;
	shf.l.wrap.b32 	%r6849, %r6843, %r6844, 23;
	shf.l.wrap.b32 	%r6850, %r6844, %r6843, 23;
	mov.b64 	%rd10288, {%r6850, %r6849};
	xor.b64  	%rd10289, %rd10287, %rd10288;
	xor.b64  	%rd10290, %rd10249, %rd10225;
	and.b64  	%rd10291, %rd10273, %rd10290;
	xor.b64  	%rd10292, %rd10291, %rd10225;
	add.s64 	%rd10293, %rd10201, %rd18532;
	add.s64 	%rd10294, %rd10293, %rd18326;
	add.s64 	%rd10295, %rd10294, %rd10292;
	add.s64 	%rd10296, %rd10295, %rd10289;
	add.s64 	%rd18497, %rd10296, %rd10212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6851,%dummy}, %rd10284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6852}, %rd10284;
	}
	shf.r.wrap.b32 	%r6853, %r6852, %r6851, 28;
	shf.r.wrap.b32 	%r6854, %r6851, %r6852, 28;
	mov.b64 	%rd10297, {%r6854, %r6853};
	shf.l.wrap.b32 	%r6855, %r6851, %r6852, 30;
	shf.l.wrap.b32 	%r6856, %r6852, %r6851, 30;
	mov.b64 	%rd10298, {%r6856, %r6855};
	xor.b64  	%rd10299, %rd10298, %rd10297;
	shf.l.wrap.b32 	%r6857, %r6851, %r6852, 25;
	shf.l.wrap.b32 	%r6858, %r6852, %r6851, 25;
	mov.b64 	%rd10300, {%r6858, %r6857};
	xor.b64  	%rd10301, %rd10299, %rd10300;
	and.b64  	%rd10302, %rd10284, %rd10260;
	xor.b64  	%rd10303, %rd10284, %rd10260;
	and.b64  	%rd10304, %rd10303, %rd10236;
	or.b64  	%rd10305, %rd10304, %rd10302;
	add.s64 	%rd10306, %rd10296, %rd10305;
	add.s64 	%rd18493, %rd10306, %rd10301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6859,%dummy}, %rd18497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6860}, %rd18497;
	}
	shf.r.wrap.b32 	%r6861, %r6860, %r6859, 14;
	shf.r.wrap.b32 	%r6862, %r6859, %r6860, 14;
	mov.b64 	%rd10307, {%r6862, %r6861};
	shf.r.wrap.b32 	%r6863, %r6860, %r6859, 18;
	shf.r.wrap.b32 	%r6864, %r6859, %r6860, 18;
	mov.b64 	%rd10308, {%r6864, %r6863};
	xor.b64  	%rd10309, %rd10308, %rd10307;
	shf.l.wrap.b32 	%r6865, %r6859, %r6860, 23;
	shf.l.wrap.b32 	%r6866, %r6860, %r6859, 23;
	mov.b64 	%rd10310, {%r6866, %r6865};
	xor.b64  	%rd10311, %rd10309, %rd10310;
	xor.b64  	%rd10312, %rd10273, %rd10249;
	and.b64  	%rd10313, %rd18497, %rd10312;
	xor.b64  	%rd10314, %rd10313, %rd10249;
	add.s64 	%rd10315, %rd10225, %rd18531;
	add.s64 	%rd10316, %rd10315, %rd18325;
	add.s64 	%rd10317, %rd10316, %rd10314;
	add.s64 	%rd10318, %rd10317, %rd10311;
	add.s64 	%rd18496, %rd10318, %rd10236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6867,%dummy}, %rd18493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6868}, %rd18493;
	}
	shf.r.wrap.b32 	%r6869, %r6868, %r6867, 28;
	shf.r.wrap.b32 	%r6870, %r6867, %r6868, 28;
	mov.b64 	%rd10319, {%r6870, %r6869};
	shf.l.wrap.b32 	%r6871, %r6867, %r6868, 30;
	shf.l.wrap.b32 	%r6872, %r6868, %r6867, 30;
	mov.b64 	%rd10320, {%r6872, %r6871};
	xor.b64  	%rd10321, %rd10320, %rd10319;
	shf.l.wrap.b32 	%r6873, %r6867, %r6868, 25;
	shf.l.wrap.b32 	%r6874, %r6868, %r6867, 25;
	mov.b64 	%rd10322, {%r6874, %r6873};
	xor.b64  	%rd10323, %rd10321, %rd10322;
	and.b64  	%rd10324, %rd18493, %rd10284;
	xor.b64  	%rd10325, %rd18493, %rd10284;
	and.b64  	%rd10326, %rd10325, %rd10260;
	or.b64  	%rd10327, %rd10326, %rd10324;
	add.s64 	%rd10328, %rd10318, %rd10327;
	add.s64 	%rd18492, %rd10328, %rd10323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6875,%dummy}, %rd18496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6876}, %rd18496;
	}
	shf.r.wrap.b32 	%r6877, %r6876, %r6875, 14;
	shf.r.wrap.b32 	%r6878, %r6875, %r6876, 14;
	mov.b64 	%rd10329, {%r6878, %r6877};
	shf.r.wrap.b32 	%r6879, %r6876, %r6875, 18;
	shf.r.wrap.b32 	%r6880, %r6875, %r6876, 18;
	mov.b64 	%rd10330, {%r6880, %r6879};
	xor.b64  	%rd10331, %rd10330, %rd10329;
	shf.l.wrap.b32 	%r6881, %r6875, %r6876, 23;
	shf.l.wrap.b32 	%r6882, %r6876, %r6875, 23;
	mov.b64 	%rd10332, {%r6882, %r6881};
	xor.b64  	%rd10333, %rd10331, %rd10332;
	xor.b64  	%rd10334, %rd18497, %rd10273;
	and.b64  	%rd10335, %rd18496, %rd10334;
	xor.b64  	%rd10336, %rd10335, %rd10273;
	add.s64 	%rd10337, %rd10249, %rd18530;
	add.s64 	%rd10338, %rd10337, %rd18324;
	add.s64 	%rd10339, %rd10338, %rd10336;
	add.s64 	%rd10340, %rd10339, %rd10333;
	add.s64 	%rd18495, %rd10340, %rd10260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd18492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd18492;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 28;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 28;
	mov.b64 	%rd10341, {%r6886, %r6885};
	shf.l.wrap.b32 	%r6887, %r6883, %r6884, 30;
	shf.l.wrap.b32 	%r6888, %r6884, %r6883, 30;
	mov.b64 	%rd10342, {%r6888, %r6887};
	xor.b64  	%rd10343, %rd10342, %rd10341;
	shf.l.wrap.b32 	%r6889, %r6883, %r6884, 25;
	shf.l.wrap.b32 	%r6890, %r6884, %r6883, 25;
	mov.b64 	%rd10344, {%r6890, %r6889};
	xor.b64  	%rd10345, %rd10343, %rd10344;
	and.b64  	%rd10346, %rd18492, %rd18493;
	xor.b64  	%rd10347, %rd18492, %rd18493;
	and.b64  	%rd10348, %rd10347, %rd10284;
	or.b64  	%rd10349, %rd10348, %rd10346;
	add.s64 	%rd10350, %rd10340, %rd10349;
	add.s64 	%rd18491, %rd10350, %rd10345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6891,%dummy}, %rd18495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6892}, %rd18495;
	}
	shf.r.wrap.b32 	%r6893, %r6892, %r6891, 14;
	shf.r.wrap.b32 	%r6894, %r6891, %r6892, 14;
	mov.b64 	%rd10351, {%r6894, %r6893};
	shf.r.wrap.b32 	%r6895, %r6892, %r6891, 18;
	shf.r.wrap.b32 	%r6896, %r6891, %r6892, 18;
	mov.b64 	%rd10352, {%r6896, %r6895};
	xor.b64  	%rd10353, %rd10352, %rd10351;
	shf.l.wrap.b32 	%r6897, %r6891, %r6892, 23;
	shf.l.wrap.b32 	%r6898, %r6892, %r6891, 23;
	mov.b64 	%rd10354, {%r6898, %r6897};
	xor.b64  	%rd10355, %rd10353, %rd10354;
	xor.b64  	%rd10356, %rd18496, %rd18497;
	and.b64  	%rd10357, %rd18495, %rd10356;
	xor.b64  	%rd10358, %rd10357, %rd18497;
	ld.local.u64 	%rd18482, [%rd1+184];
	add.s64 	%rd10359, %rd10273, %rd18482;
	add.s64 	%rd10360, %rd10359, %rd18323;
	add.s64 	%rd10361, %rd10360, %rd10358;
	add.s64 	%rd10362, %rd10361, %rd10355;
	add.s64 	%rd18494, %rd10362, %rd10284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6899,%dummy}, %rd18491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6900}, %rd18491;
	}
	shf.r.wrap.b32 	%r6901, %r6900, %r6899, 28;
	shf.r.wrap.b32 	%r6902, %r6899, %r6900, 28;
	mov.b64 	%rd10363, {%r6902, %r6901};
	shf.l.wrap.b32 	%r6903, %r6899, %r6900, 30;
	shf.l.wrap.b32 	%r6904, %r6900, %r6899, 30;
	mov.b64 	%rd10364, {%r6904, %r6903};
	xor.b64  	%rd10365, %rd10364, %rd10363;
	shf.l.wrap.b32 	%r6905, %r6899, %r6900, 25;
	shf.l.wrap.b32 	%r6906, %r6900, %r6899, 25;
	mov.b64 	%rd10366, {%r6906, %r6905};
	xor.b64  	%rd10367, %rd10365, %rd10366;
	and.b64  	%rd10368, %rd18491, %rd18492;
	xor.b64  	%rd10369, %rd18491, %rd18492;
	and.b64  	%rd10370, %rd10369, %rd18493;
	or.b64  	%rd10371, %rd10370, %rd10368;
	add.s64 	%rd10372, %rd10362, %rd10371;
	add.s64 	%rd18490, %rd10372, %rd10367;
	mov.u32 	%r12659, 16;

BB0_181:
	shr.u64 	%rd10373, %rd18530, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6907,%dummy}, %rd18530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6908}, %rd18530;
	}
	shf.r.wrap.b32 	%r6909, %r6908, %r6907, 19;
	shf.r.wrap.b32 	%r6910, %r6907, %r6908, 19;
	mov.b64 	%rd10374, {%r6910, %r6909};
	xor.b64  	%rd10375, %rd10374, %rd10373;
	shf.l.wrap.b32 	%r6911, %r6907, %r6908, 3;
	shf.l.wrap.b32 	%r6912, %r6908, %r6907, 3;
	mov.b64 	%rd10376, {%r6912, %r6911};
	xor.b64  	%rd10377, %rd10375, %rd10376;
	shr.u64 	%rd10378, %rd18546, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6913,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6914}, %rd18546;
	}
	shf.r.wrap.b32 	%r6915, %r6914, %r6913, 1;
	shf.r.wrap.b32 	%r6916, %r6913, %r6914, 1;
	mov.b64 	%rd10379, {%r6916, %r6915};
	xor.b64  	%rd10380, %rd10379, %rd10378;
	shf.r.wrap.b32 	%r6917, %r6914, %r6913, 8;
	shf.r.wrap.b32 	%r6918, %r6913, %r6914, 8;
	mov.b64 	%rd10381, {%r6918, %r6917};
	xor.b64  	%rd10382, %rd10380, %rd10381;
	add.s64 	%rd10383, %rd18545, %rd18535;
	add.s64 	%rd10384, %rd10383, %rd10377;
	add.s64 	%rd18545, %rd10384, %rd10382;
	shr.u64 	%rd10385, %rd18482, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6919,%dummy}, %rd18482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd18482;
	}
	shf.r.wrap.b32 	%r6921, %r6920, %r6919, 19;
	shf.r.wrap.b32 	%r6922, %r6919, %r6920, 19;
	mov.b64 	%rd10386, {%r6922, %r6921};
	xor.b64  	%rd10387, %rd10386, %rd10385;
	shf.l.wrap.b32 	%r6923, %r6919, %r6920, 3;
	shf.l.wrap.b32 	%r6924, %r6920, %r6919, 3;
	mov.b64 	%rd10388, {%r6924, %r6923};
	xor.b64  	%rd10389, %rd10387, %rd10388;
	shr.u64 	%rd10390, %rd18547, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6925,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6926}, %rd18547;
	}
	shf.r.wrap.b32 	%r6927, %r6926, %r6925, 1;
	shf.r.wrap.b32 	%r6928, %r6925, %r6926, 1;
	mov.b64 	%rd10391, {%r6928, %r6927};
	xor.b64  	%rd10392, %rd10391, %rd10390;
	shf.r.wrap.b32 	%r6929, %r6926, %r6925, 8;
	shf.r.wrap.b32 	%r6930, %r6925, %r6926, 8;
	mov.b64 	%rd10393, {%r6930, %r6929};
	xor.b64  	%rd10394, %rd10392, %rd10393;
	add.s64 	%rd10395, %rd18546, %rd18534;
	add.s64 	%rd10396, %rd10395, %rd10389;
	add.s64 	%rd18546, %rd10396, %rd10394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6931,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6932}, %rd18545;
	}
	shf.r.wrap.b32 	%r6933, %r6932, %r6931, 19;
	shf.r.wrap.b32 	%r6934, %r6931, %r6932, 19;
	mov.b64 	%rd10397, {%r6934, %r6933};
	shf.l.wrap.b32 	%r6935, %r6931, %r6932, 3;
	shf.l.wrap.b32 	%r6936, %r6932, %r6931, 3;
	mov.b64 	%rd10398, {%r6936, %r6935};
	shr.u64 	%rd10399, %rd18545, 6;
	xor.b64  	%rd10400, %rd10397, %rd10399;
	xor.b64  	%rd10401, %rd10400, %rd10398;
	shr.u64 	%rd10402, %rd18548, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6937,%dummy}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6938}, %rd18548;
	}
	shf.r.wrap.b32 	%r6939, %r6938, %r6937, 1;
	shf.r.wrap.b32 	%r6940, %r6937, %r6938, 1;
	mov.b64 	%rd10403, {%r6940, %r6939};
	xor.b64  	%rd10404, %rd10403, %rd10402;
	shf.r.wrap.b32 	%r6941, %r6938, %r6937, 8;
	shf.r.wrap.b32 	%r6942, %r6937, %r6938, 8;
	mov.b64 	%rd10405, {%r6942, %r6941};
	xor.b64  	%rd10406, %rd10404, %rd10405;
	add.s64 	%rd10407, %rd18547, %rd18533;
	add.s64 	%rd10408, %rd10407, %rd10401;
	add.s64 	%rd18547, %rd10408, %rd10406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6943,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6944}, %rd18546;
	}
	shf.r.wrap.b32 	%r6945, %r6944, %r6943, 19;
	shf.r.wrap.b32 	%r6946, %r6943, %r6944, 19;
	mov.b64 	%rd10409, {%r6946, %r6945};
	shf.l.wrap.b32 	%r6947, %r6943, %r6944, 3;
	shf.l.wrap.b32 	%r6948, %r6944, %r6943, 3;
	mov.b64 	%rd10410, {%r6948, %r6947};
	shr.u64 	%rd10411, %rd18546, 6;
	xor.b64  	%rd10412, %rd10409, %rd10411;
	xor.b64  	%rd10413, %rd10412, %rd10410;
	shr.u64 	%rd10414, %rd18549, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6949,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6950}, %rd18549;
	}
	shf.r.wrap.b32 	%r6951, %r6950, %r6949, 1;
	shf.r.wrap.b32 	%r6952, %r6949, %r6950, 1;
	mov.b64 	%rd10415, {%r6952, %r6951};
	xor.b64  	%rd10416, %rd10415, %rd10414;
	shf.r.wrap.b32 	%r6953, %r6950, %r6949, 8;
	shf.r.wrap.b32 	%r6954, %r6949, %r6950, 8;
	mov.b64 	%rd10417, {%r6954, %r6953};
	xor.b64  	%rd10418, %rd10416, %rd10417;
	add.s64 	%rd10419, %rd18548, %rd18532;
	add.s64 	%rd10420, %rd10419, %rd10413;
	add.s64 	%rd18548, %rd10420, %rd10418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd18547;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 19;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 19;
	mov.b64 	%rd10421, {%r6958, %r6957};
	shf.l.wrap.b32 	%r6959, %r6955, %r6956, 3;
	shf.l.wrap.b32 	%r6960, %r6956, %r6955, 3;
	mov.b64 	%rd10422, {%r6960, %r6959};
	shr.u64 	%rd10423, %rd18547, 6;
	xor.b64  	%rd10424, %rd10421, %rd10423;
	xor.b64  	%rd10425, %rd10424, %rd10422;
	shr.u64 	%rd10426, %rd18550, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6961,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6962}, %rd18550;
	}
	shf.r.wrap.b32 	%r6963, %r6962, %r6961, 1;
	shf.r.wrap.b32 	%r6964, %r6961, %r6962, 1;
	mov.b64 	%rd10427, {%r6964, %r6963};
	xor.b64  	%rd10428, %rd10427, %rd10426;
	shf.r.wrap.b32 	%r6965, %r6962, %r6961, 8;
	shf.r.wrap.b32 	%r6966, %r6961, %r6962, 8;
	mov.b64 	%rd10429, {%r6966, %r6965};
	xor.b64  	%rd10430, %rd10428, %rd10429;
	add.s64 	%rd10431, %rd18549, %rd18531;
	add.s64 	%rd10432, %rd10431, %rd10425;
	add.s64 	%rd18549, %rd10432, %rd10430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6967,%dummy}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6968}, %rd18548;
	}
	shf.r.wrap.b32 	%r6969, %r6968, %r6967, 19;
	shf.r.wrap.b32 	%r6970, %r6967, %r6968, 19;
	mov.b64 	%rd10433, {%r6970, %r6969};
	shf.l.wrap.b32 	%r6971, %r6967, %r6968, 3;
	shf.l.wrap.b32 	%r6972, %r6968, %r6967, 3;
	mov.b64 	%rd10434, {%r6972, %r6971};
	shr.u64 	%rd10435, %rd18548, 6;
	xor.b64  	%rd10436, %rd10433, %rd10435;
	xor.b64  	%rd10437, %rd10436, %rd10434;
	shr.u64 	%rd10438, %rd18551, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6973,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6974}, %rd18551;
	}
	shf.r.wrap.b32 	%r6975, %r6974, %r6973, 1;
	shf.r.wrap.b32 	%r6976, %r6973, %r6974, 1;
	mov.b64 	%rd10439, {%r6976, %r6975};
	xor.b64  	%rd10440, %rd10439, %rd10438;
	shf.r.wrap.b32 	%r6977, %r6974, %r6973, 8;
	shf.r.wrap.b32 	%r6978, %r6973, %r6974, 8;
	mov.b64 	%rd10441, {%r6978, %r6977};
	xor.b64  	%rd10442, %rd10440, %rd10441;
	add.s64 	%rd10443, %rd18550, %rd18530;
	add.s64 	%rd10444, %rd10443, %rd10437;
	add.s64 	%rd18550, %rd10444, %rd10442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6979,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6980}, %rd18549;
	}
	shf.r.wrap.b32 	%r6981, %r6980, %r6979, 19;
	shf.r.wrap.b32 	%r6982, %r6979, %r6980, 19;
	mov.b64 	%rd10445, {%r6982, %r6981};
	shf.l.wrap.b32 	%r6983, %r6979, %r6980, 3;
	shf.l.wrap.b32 	%r6984, %r6980, %r6979, 3;
	mov.b64 	%rd10446, {%r6984, %r6983};
	shr.u64 	%rd10447, %rd18549, 6;
	xor.b64  	%rd10448, %rd10445, %rd10447;
	xor.b64  	%rd10449, %rd10448, %rd10446;
	shr.u64 	%rd10450, %rd18552, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6985,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6986}, %rd18552;
	}
	shf.r.wrap.b32 	%r6987, %r6986, %r6985, 1;
	shf.r.wrap.b32 	%r6988, %r6985, %r6986, 1;
	mov.b64 	%rd10451, {%r6988, %r6987};
	xor.b64  	%rd10452, %rd10451, %rd10450;
	shf.r.wrap.b32 	%r6989, %r6986, %r6985, 8;
	shf.r.wrap.b32 	%r6990, %r6985, %r6986, 8;
	mov.b64 	%rd10453, {%r6990, %r6989};
	xor.b64  	%rd10454, %rd10452, %rd10453;
	add.s64 	%rd10455, %rd18551, %rd18482;
	add.s64 	%rd10456, %rd10455, %rd10449;
	add.s64 	%rd18551, %rd10456, %rd10454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6991,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6992}, %rd18550;
	}
	shf.r.wrap.b32 	%r6993, %r6992, %r6991, 19;
	shf.r.wrap.b32 	%r6994, %r6991, %r6992, 19;
	mov.b64 	%rd10457, {%r6994, %r6993};
	shf.l.wrap.b32 	%r6995, %r6991, %r6992, 3;
	shf.l.wrap.b32 	%r6996, %r6992, %r6991, 3;
	mov.b64 	%rd10458, {%r6996, %r6995};
	shr.u64 	%rd10459, %rd18550, 6;
	xor.b64  	%rd10460, %rd10457, %rd10459;
	xor.b64  	%rd10461, %rd10460, %rd10458;
	shr.u64 	%rd10462, %rd18536, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6997,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6998}, %rd18536;
	}
	shf.r.wrap.b32 	%r6999, %r6998, %r6997, 1;
	shf.r.wrap.b32 	%r7000, %r6997, %r6998, 1;
	mov.b64 	%rd10463, {%r7000, %r6999};
	xor.b64  	%rd10464, %rd10463, %rd10462;
	shf.r.wrap.b32 	%r7001, %r6998, %r6997, 8;
	shf.r.wrap.b32 	%r7002, %r6997, %r6998, 8;
	mov.b64 	%rd10465, {%r7002, %r7001};
	xor.b64  	%rd10466, %rd10464, %rd10465;
	add.s64 	%rd10467, %rd18545, %rd18552;
	add.s64 	%rd10468, %rd10467, %rd10461;
	add.s64 	%rd18552, %rd10468, %rd10466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7003,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7004}, %rd18551;
	}
	shf.r.wrap.b32 	%r7005, %r7004, %r7003, 19;
	shf.r.wrap.b32 	%r7006, %r7003, %r7004, 19;
	mov.b64 	%rd10469, {%r7006, %r7005};
	shf.l.wrap.b32 	%r7007, %r7003, %r7004, 3;
	shf.l.wrap.b32 	%r7008, %r7004, %r7003, 3;
	mov.b64 	%rd10470, {%r7008, %r7007};
	shr.u64 	%rd10471, %rd18551, 6;
	xor.b64  	%rd10472, %rd10469, %rd10471;
	xor.b64  	%rd10473, %rd10472, %rd10470;
	shr.u64 	%rd10474, %rd18535, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7009,%dummy}, %rd18535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7010}, %rd18535;
	}
	shf.r.wrap.b32 	%r7011, %r7010, %r7009, 1;
	shf.r.wrap.b32 	%r7012, %r7009, %r7010, 1;
	mov.b64 	%rd10475, {%r7012, %r7011};
	xor.b64  	%rd10476, %rd10475, %rd10474;
	shf.r.wrap.b32 	%r7013, %r7010, %r7009, 8;
	shf.r.wrap.b32 	%r7014, %r7009, %r7010, 8;
	mov.b64 	%rd10477, {%r7014, %r7013};
	xor.b64  	%rd10478, %rd10476, %rd10477;
	add.s64 	%rd10479, %rd18546, %rd18536;
	add.s64 	%rd10480, %rd10479, %rd10473;
	add.s64 	%rd18536, %rd10480, %rd10478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7015,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7016}, %rd18552;
	}
	shf.r.wrap.b32 	%r7017, %r7016, %r7015, 19;
	shf.r.wrap.b32 	%r7018, %r7015, %r7016, 19;
	mov.b64 	%rd10481, {%r7018, %r7017};
	shf.l.wrap.b32 	%r7019, %r7015, %r7016, 3;
	shf.l.wrap.b32 	%r7020, %r7016, %r7015, 3;
	mov.b64 	%rd10482, {%r7020, %r7019};
	shr.u64 	%rd10483, %rd18552, 6;
	xor.b64  	%rd10484, %rd10481, %rd10483;
	xor.b64  	%rd10485, %rd10484, %rd10482;
	shr.u64 	%rd10486, %rd18534, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7021,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7022}, %rd18534;
	}
	shf.r.wrap.b32 	%r7023, %r7022, %r7021, 1;
	shf.r.wrap.b32 	%r7024, %r7021, %r7022, 1;
	mov.b64 	%rd10487, {%r7024, %r7023};
	xor.b64  	%rd10488, %rd10487, %rd10486;
	shf.r.wrap.b32 	%r7025, %r7022, %r7021, 8;
	shf.r.wrap.b32 	%r7026, %r7021, %r7022, 8;
	mov.b64 	%rd10489, {%r7026, %r7025};
	xor.b64  	%rd10490, %rd10488, %rd10489;
	add.s64 	%rd10491, %rd18547, %rd18535;
	add.s64 	%rd10492, %rd10491, %rd10485;
	add.s64 	%rd18535, %rd10492, %rd10490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7027,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7028}, %rd18536;
	}
	shf.r.wrap.b32 	%r7029, %r7028, %r7027, 19;
	shf.r.wrap.b32 	%r7030, %r7027, %r7028, 19;
	mov.b64 	%rd10493, {%r7030, %r7029};
	shf.l.wrap.b32 	%r7031, %r7027, %r7028, 3;
	shf.l.wrap.b32 	%r7032, %r7028, %r7027, 3;
	mov.b64 	%rd10494, {%r7032, %r7031};
	shr.u64 	%rd10495, %rd18536, 6;
	xor.b64  	%rd10496, %rd10493, %rd10495;
	xor.b64  	%rd10497, %rd10496, %rd10494;
	shr.u64 	%rd10498, %rd18533, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7033,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7034}, %rd18533;
	}
	shf.r.wrap.b32 	%r7035, %r7034, %r7033, 1;
	shf.r.wrap.b32 	%r7036, %r7033, %r7034, 1;
	mov.b64 	%rd10499, {%r7036, %r7035};
	xor.b64  	%rd10500, %rd10499, %rd10498;
	shf.r.wrap.b32 	%r7037, %r7034, %r7033, 8;
	shf.r.wrap.b32 	%r7038, %r7033, %r7034, 8;
	mov.b64 	%rd10501, {%r7038, %r7037};
	xor.b64  	%rd10502, %rd10500, %rd10501;
	add.s64 	%rd10503, %rd18548, %rd18534;
	add.s64 	%rd10504, %rd10503, %rd10497;
	add.s64 	%rd18534, %rd10504, %rd10502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7039,%dummy}, %rd18535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7040}, %rd18535;
	}
	shf.r.wrap.b32 	%r7041, %r7040, %r7039, 19;
	shf.r.wrap.b32 	%r7042, %r7039, %r7040, 19;
	mov.b64 	%rd10505, {%r7042, %r7041};
	shf.l.wrap.b32 	%r7043, %r7039, %r7040, 3;
	shf.l.wrap.b32 	%r7044, %r7040, %r7039, 3;
	mov.b64 	%rd10506, {%r7044, %r7043};
	shr.u64 	%rd10507, %rd18535, 6;
	xor.b64  	%rd10508, %rd10505, %rd10507;
	xor.b64  	%rd10509, %rd10508, %rd10506;
	shr.u64 	%rd10510, %rd18532, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7045,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7046}, %rd18532;
	}
	shf.r.wrap.b32 	%r7047, %r7046, %r7045, 1;
	shf.r.wrap.b32 	%r7048, %r7045, %r7046, 1;
	mov.b64 	%rd10511, {%r7048, %r7047};
	xor.b64  	%rd10512, %rd10511, %rd10510;
	shf.r.wrap.b32 	%r7049, %r7046, %r7045, 8;
	shf.r.wrap.b32 	%r7050, %r7045, %r7046, 8;
	mov.b64 	%rd10513, {%r7050, %r7049};
	xor.b64  	%rd10514, %rd10512, %rd10513;
	add.s64 	%rd10515, %rd18549, %rd18533;
	add.s64 	%rd10516, %rd10515, %rd10509;
	add.s64 	%rd18533, %rd10516, %rd10514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7051,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7052}, %rd18534;
	}
	shf.r.wrap.b32 	%r7053, %r7052, %r7051, 19;
	shf.r.wrap.b32 	%r7054, %r7051, %r7052, 19;
	mov.b64 	%rd10517, {%r7054, %r7053};
	shf.l.wrap.b32 	%r7055, %r7051, %r7052, 3;
	shf.l.wrap.b32 	%r7056, %r7052, %r7051, 3;
	mov.b64 	%rd10518, {%r7056, %r7055};
	shr.u64 	%rd10519, %rd18534, 6;
	xor.b64  	%rd10520, %rd10517, %rd10519;
	xor.b64  	%rd10521, %rd10520, %rd10518;
	shr.u64 	%rd10522, %rd18531, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7057,%dummy}, %rd18531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7058}, %rd18531;
	}
	shf.r.wrap.b32 	%r7059, %r7058, %r7057, 1;
	shf.r.wrap.b32 	%r7060, %r7057, %r7058, 1;
	mov.b64 	%rd10523, {%r7060, %r7059};
	xor.b64  	%rd10524, %rd10523, %rd10522;
	shf.r.wrap.b32 	%r7061, %r7058, %r7057, 8;
	shf.r.wrap.b32 	%r7062, %r7057, %r7058, 8;
	mov.b64 	%rd10525, {%r7062, %r7061};
	xor.b64  	%rd10526, %rd10524, %rd10525;
	add.s64 	%rd10527, %rd18550, %rd18532;
	add.s64 	%rd10528, %rd10527, %rd10521;
	add.s64 	%rd18532, %rd10528, %rd10526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7063,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7064}, %rd18533;
	}
	shf.r.wrap.b32 	%r7065, %r7064, %r7063, 19;
	shf.r.wrap.b32 	%r7066, %r7063, %r7064, 19;
	mov.b64 	%rd10529, {%r7066, %r7065};
	shf.l.wrap.b32 	%r7067, %r7063, %r7064, 3;
	shf.l.wrap.b32 	%r7068, %r7064, %r7063, 3;
	mov.b64 	%rd10530, {%r7068, %r7067};
	shr.u64 	%rd10531, %rd18533, 6;
	xor.b64  	%rd10532, %rd10529, %rd10531;
	xor.b64  	%rd10533, %rd10532, %rd10530;
	shr.u64 	%rd10534, %rd18530, 7;
	shf.r.wrap.b32 	%r7069, %r6908, %r6907, 1;
	shf.r.wrap.b32 	%r7070, %r6907, %r6908, 1;
	mov.b64 	%rd10535, {%r7070, %r7069};
	xor.b64  	%rd10536, %rd10535, %rd10534;
	shf.r.wrap.b32 	%r7071, %r6908, %r6907, 8;
	shf.r.wrap.b32 	%r7072, %r6907, %r6908, 8;
	mov.b64 	%rd10537, {%r7072, %r7071};
	xor.b64  	%rd10538, %rd10536, %rd10537;
	add.s64 	%rd10539, %rd18551, %rd18531;
	add.s64 	%rd10540, %rd10539, %rd10533;
	add.s64 	%rd18531, %rd10540, %rd10538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7073,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7074}, %rd18532;
	}
	shf.r.wrap.b32 	%r7075, %r7074, %r7073, 19;
	shf.r.wrap.b32 	%r7076, %r7073, %r7074, 19;
	mov.b64 	%rd10541, {%r7076, %r7075};
	shf.l.wrap.b32 	%r7077, %r7073, %r7074, 3;
	shf.l.wrap.b32 	%r7078, %r7074, %r7073, 3;
	mov.b64 	%rd10542, {%r7078, %r7077};
	shr.u64 	%rd10543, %rd18532, 6;
	xor.b64  	%rd10544, %rd10541, %rd10543;
	xor.b64  	%rd10545, %rd10544, %rd10542;
	shr.u64 	%rd10546, %rd18482, 7;
	shf.r.wrap.b32 	%r7079, %r6920, %r6919, 1;
	shf.r.wrap.b32 	%r7080, %r6919, %r6920, 1;
	mov.b64 	%rd10547, {%r7080, %r7079};
	xor.b64  	%rd10548, %rd10547, %rd10546;
	shf.r.wrap.b32 	%r7081, %r6920, %r6919, 8;
	shf.r.wrap.b32 	%r7082, %r6919, %r6920, 8;
	mov.b64 	%rd10549, {%r7082, %r7081};
	xor.b64  	%rd10550, %rd10548, %rd10549;
	add.s64 	%rd10551, %rd18552, %rd18530;
	add.s64 	%rd10552, %rd10551, %rd10545;
	add.s64 	%rd18530, %rd10552, %rd10550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7083,%dummy}, %rd18531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7084}, %rd18531;
	}
	shf.r.wrap.b32 	%r7085, %r7084, %r7083, 19;
	shf.r.wrap.b32 	%r7086, %r7083, %r7084, 19;
	mov.b64 	%rd10553, {%r7086, %r7085};
	shf.l.wrap.b32 	%r7087, %r7083, %r7084, 3;
	shf.l.wrap.b32 	%r7088, %r7084, %r7083, 3;
	mov.b64 	%rd10554, {%r7088, %r7087};
	shr.u64 	%rd10555, %rd18531, 6;
	xor.b64  	%rd10556, %rd10553, %rd10555;
	xor.b64  	%rd10557, %rd10556, %rd10554;
	shf.r.wrap.b32 	%r7089, %r6932, %r6931, 1;
	shf.r.wrap.b32 	%r7090, %r6931, %r6932, 1;
	mov.b64 	%rd10558, {%r7090, %r7089};
	shf.r.wrap.b32 	%r7091, %r6932, %r6931, 8;
	shf.r.wrap.b32 	%r7092, %r6931, %r6932, 8;
	mov.b64 	%rd10559, {%r7092, %r7091};
	shr.u64 	%rd10560, %rd18545, 7;
	xor.b64  	%rd10561, %rd10558, %rd10560;
	xor.b64  	%rd10562, %rd10561, %rd10559;
	add.s64 	%rd10563, %rd18536, %rd18482;
	add.s64 	%rd10564, %rd10563, %rd10557;
	add.s64 	%rd18482, %rd10564, %rd10562;
	mul.wide.s32 	%rd10565, %r12659, 8;
	mov.u64 	%rd10566, k_sha512;
	add.s64 	%rd10567, %rd10566, %rd10565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd18494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd18494;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 18;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 18;
	mov.b64 	%rd10568, {%r7096, %r7095};
	shf.r.wrap.b32 	%r7097, %r7094, %r7093, 14;
	shf.r.wrap.b32 	%r7098, %r7093, %r7094, 14;
	mov.b64 	%rd10569, {%r7098, %r7097};
	xor.b64  	%rd10570, %rd10568, %rd10569;
	shf.l.wrap.b32 	%r7099, %r7093, %r7094, 23;
	shf.l.wrap.b32 	%r7100, %r7094, %r7093, 23;
	mov.b64 	%rd10571, {%r7100, %r7099};
	xor.b64  	%rd10572, %rd10570, %rd10571;
	xor.b64  	%rd10573, %rd18496, %rd18495;
	and.b64  	%rd10574, %rd10573, %rd18494;
	xor.b64  	%rd10575, %rd10574, %rd18496;
	add.s64 	%rd10576, %rd10575, %rd18497;
	add.s64 	%rd10577, %rd10576, %rd18545;
	ld.const.u64 	%rd10578, [%rd10567];
	add.s64 	%rd10579, %rd10577, %rd10578;
	add.s64 	%rd10580, %rd10579, %rd10572;
	add.s64 	%rd10581, %rd10580, %rd18493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7101}, %rd18490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7102,%dummy}, %rd18490;
	}
	shf.l.wrap.b32 	%r7103, %r7102, %r7101, 30;
	shf.l.wrap.b32 	%r7104, %r7101, %r7102, 30;
	mov.b64 	%rd10582, {%r7104, %r7103};
	shf.r.wrap.b32 	%r7105, %r7101, %r7102, 28;
	shf.r.wrap.b32 	%r7106, %r7102, %r7101, 28;
	mov.b64 	%rd10583, {%r7106, %r7105};
	xor.b64  	%rd10584, %rd10582, %rd10583;
	shf.l.wrap.b32 	%r7107, %r7102, %r7101, 25;
	shf.l.wrap.b32 	%r7108, %r7101, %r7102, 25;
	mov.b64 	%rd10585, {%r7108, %r7107};
	xor.b64  	%rd10586, %rd10584, %rd10585;
	xor.b64  	%rd10587, %rd18491, %rd18490;
	and.b64  	%rd10588, %rd10587, %rd18492;
	and.b64  	%rd10589, %rd18491, %rd18490;
	or.b64  	%rd10590, %rd10588, %rd10589;
	add.s64 	%rd10591, %rd10580, %rd10590;
	add.s64 	%rd10592, %rd10591, %rd10586;
	add.s32 	%r7109, %r12659, 1;
	mul.wide.s32 	%rd10593, %r7109, 8;
	add.s64 	%rd10594, %rd10566, %rd10593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7110,%dummy}, %rd10581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7111}, %rd10581;
	}
	shf.r.wrap.b32 	%r7112, %r7111, %r7110, 14;
	shf.r.wrap.b32 	%r7113, %r7110, %r7111, 14;
	mov.b64 	%rd10595, {%r7113, %r7112};
	shf.r.wrap.b32 	%r7114, %r7111, %r7110, 18;
	shf.r.wrap.b32 	%r7115, %r7110, %r7111, 18;
	mov.b64 	%rd10596, {%r7115, %r7114};
	xor.b64  	%rd10597, %rd10596, %rd10595;
	shf.l.wrap.b32 	%r7116, %r7110, %r7111, 23;
	shf.l.wrap.b32 	%r7117, %r7111, %r7110, 23;
	mov.b64 	%rd10598, {%r7117, %r7116};
	xor.b64  	%rd10599, %rd10597, %rd10598;
	xor.b64  	%rd10600, %rd18495, %rd18494;
	and.b64  	%rd10601, %rd10581, %rd10600;
	xor.b64  	%rd10602, %rd10601, %rd18495;
	add.s64 	%rd10603, %rd18546, %rd18496;
	ld.const.u64 	%rd10604, [%rd10594];
	add.s64 	%rd10605, %rd10603, %rd10604;
	add.s64 	%rd10606, %rd10605, %rd10602;
	add.s64 	%rd10607, %rd10606, %rd10599;
	add.s64 	%rd10608, %rd10607, %rd18492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd10592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd10592;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 28;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 28;
	mov.b64 	%rd10609, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 30;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 30;
	mov.b64 	%rd10610, {%r7123, %r7122};
	xor.b64  	%rd10611, %rd10610, %rd10609;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 25;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 25;
	mov.b64 	%rd10612, {%r7125, %r7124};
	xor.b64  	%rd10613, %rd10611, %rd10612;
	and.b64  	%rd10614, %rd10592, %rd18490;
	xor.b64  	%rd10615, %rd10592, %rd18490;
	and.b64  	%rd10616, %rd10615, %rd18491;
	or.b64  	%rd10617, %rd10616, %rd10614;
	add.s64 	%rd10618, %rd10607, %rd10617;
	add.s64 	%rd10619, %rd10618, %rd10613;
	add.s32 	%r7126, %r12659, 2;
	mul.wide.s32 	%rd10620, %r7126, 8;
	add.s64 	%rd10621, %rd10566, %rd10620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7127,%dummy}, %rd10608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7128}, %rd10608;
	}
	shf.r.wrap.b32 	%r7129, %r7128, %r7127, 14;
	shf.r.wrap.b32 	%r7130, %r7127, %r7128, 14;
	mov.b64 	%rd10622, {%r7130, %r7129};
	shf.r.wrap.b32 	%r7131, %r7128, %r7127, 18;
	shf.r.wrap.b32 	%r7132, %r7127, %r7128, 18;
	mov.b64 	%rd10623, {%r7132, %r7131};
	xor.b64  	%rd10624, %rd10623, %rd10622;
	shf.l.wrap.b32 	%r7133, %r7127, %r7128, 23;
	shf.l.wrap.b32 	%r7134, %r7128, %r7127, 23;
	mov.b64 	%rd10625, {%r7134, %r7133};
	xor.b64  	%rd10626, %rd10624, %rd10625;
	xor.b64  	%rd10627, %rd10581, %rd18494;
	and.b64  	%rd10628, %rd10608, %rd10627;
	xor.b64  	%rd10629, %rd10628, %rd18494;
	add.s64 	%rd10630, %rd18547, %rd18495;
	ld.const.u64 	%rd10631, [%rd10621];
	add.s64 	%rd10632, %rd10630, %rd10631;
	add.s64 	%rd10633, %rd10632, %rd10629;
	add.s64 	%rd10634, %rd10633, %rd10626;
	add.s64 	%rd10635, %rd10634, %rd18491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd10619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd10619;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 28;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 28;
	mov.b64 	%rd10636, {%r7138, %r7137};
	shf.l.wrap.b32 	%r7139, %r7135, %r7136, 30;
	shf.l.wrap.b32 	%r7140, %r7136, %r7135, 30;
	mov.b64 	%rd10637, {%r7140, %r7139};
	xor.b64  	%rd10638, %rd10637, %rd10636;
	shf.l.wrap.b32 	%r7141, %r7135, %r7136, 25;
	shf.l.wrap.b32 	%r7142, %r7136, %r7135, 25;
	mov.b64 	%rd10639, {%r7142, %r7141};
	xor.b64  	%rd10640, %rd10638, %rd10639;
	and.b64  	%rd10641, %rd10619, %rd10592;
	xor.b64  	%rd10642, %rd10619, %rd10592;
	and.b64  	%rd10643, %rd10642, %rd18490;
	or.b64  	%rd10644, %rd10643, %rd10641;
	add.s64 	%rd10645, %rd10634, %rd10644;
	add.s64 	%rd10646, %rd10645, %rd10640;
	add.s32 	%r7143, %r12659, 3;
	mul.wide.s32 	%rd10647, %r7143, 8;
	add.s64 	%rd10648, %rd10566, %rd10647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7144,%dummy}, %rd10635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7145}, %rd10635;
	}
	shf.r.wrap.b32 	%r7146, %r7145, %r7144, 14;
	shf.r.wrap.b32 	%r7147, %r7144, %r7145, 14;
	mov.b64 	%rd10649, {%r7147, %r7146};
	shf.r.wrap.b32 	%r7148, %r7145, %r7144, 18;
	shf.r.wrap.b32 	%r7149, %r7144, %r7145, 18;
	mov.b64 	%rd10650, {%r7149, %r7148};
	xor.b64  	%rd10651, %rd10650, %rd10649;
	shf.l.wrap.b32 	%r7150, %r7144, %r7145, 23;
	shf.l.wrap.b32 	%r7151, %r7145, %r7144, 23;
	mov.b64 	%rd10652, {%r7151, %r7150};
	xor.b64  	%rd10653, %rd10651, %rd10652;
	xor.b64  	%rd10654, %rd10608, %rd10581;
	and.b64  	%rd10655, %rd10635, %rd10654;
	xor.b64  	%rd10656, %rd10655, %rd10581;
	add.s64 	%rd10657, %rd18548, %rd18494;
	ld.const.u64 	%rd10658, [%rd10648];
	add.s64 	%rd10659, %rd10657, %rd10658;
	add.s64 	%rd10660, %rd10659, %rd10656;
	add.s64 	%rd10661, %rd10660, %rd10653;
	add.s64 	%rd10662, %rd10661, %rd18490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd10646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd10646;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 28;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 28;
	mov.b64 	%rd10663, {%r7155, %r7154};
	shf.l.wrap.b32 	%r7156, %r7152, %r7153, 30;
	shf.l.wrap.b32 	%r7157, %r7153, %r7152, 30;
	mov.b64 	%rd10664, {%r7157, %r7156};
	xor.b64  	%rd10665, %rd10664, %rd10663;
	shf.l.wrap.b32 	%r7158, %r7152, %r7153, 25;
	shf.l.wrap.b32 	%r7159, %r7153, %r7152, 25;
	mov.b64 	%rd10666, {%r7159, %r7158};
	xor.b64  	%rd10667, %rd10665, %rd10666;
	and.b64  	%rd10668, %rd10646, %rd10619;
	xor.b64  	%rd10669, %rd10646, %rd10619;
	and.b64  	%rd10670, %rd10669, %rd10592;
	or.b64  	%rd10671, %rd10670, %rd10668;
	add.s64 	%rd10672, %rd10661, %rd10671;
	add.s64 	%rd10673, %rd10672, %rd10667;
	add.s32 	%r7160, %r12659, 4;
	mul.wide.s32 	%rd10674, %r7160, 8;
	add.s64 	%rd10675, %rd10566, %rd10674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7161,%dummy}, %rd10662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7162}, %rd10662;
	}
	shf.r.wrap.b32 	%r7163, %r7162, %r7161, 14;
	shf.r.wrap.b32 	%r7164, %r7161, %r7162, 14;
	mov.b64 	%rd10676, {%r7164, %r7163};
	shf.r.wrap.b32 	%r7165, %r7162, %r7161, 18;
	shf.r.wrap.b32 	%r7166, %r7161, %r7162, 18;
	mov.b64 	%rd10677, {%r7166, %r7165};
	xor.b64  	%rd10678, %rd10677, %rd10676;
	shf.l.wrap.b32 	%r7167, %r7161, %r7162, 23;
	shf.l.wrap.b32 	%r7168, %r7162, %r7161, 23;
	mov.b64 	%rd10679, {%r7168, %r7167};
	xor.b64  	%rd10680, %rd10678, %rd10679;
	xor.b64  	%rd10681, %rd10635, %rd10608;
	and.b64  	%rd10682, %rd10662, %rd10681;
	xor.b64  	%rd10683, %rd10682, %rd10608;
	add.s64 	%rd10684, %rd10581, %rd18549;
	ld.const.u64 	%rd10685, [%rd10675];
	add.s64 	%rd10686, %rd10684, %rd10685;
	add.s64 	%rd10687, %rd10686, %rd10683;
	add.s64 	%rd10688, %rd10687, %rd10680;
	add.s64 	%rd10689, %rd10688, %rd10592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7169,%dummy}, %rd10673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7170}, %rd10673;
	}
	shf.r.wrap.b32 	%r7171, %r7170, %r7169, 28;
	shf.r.wrap.b32 	%r7172, %r7169, %r7170, 28;
	mov.b64 	%rd10690, {%r7172, %r7171};
	shf.l.wrap.b32 	%r7173, %r7169, %r7170, 30;
	shf.l.wrap.b32 	%r7174, %r7170, %r7169, 30;
	mov.b64 	%rd10691, {%r7174, %r7173};
	xor.b64  	%rd10692, %rd10691, %rd10690;
	shf.l.wrap.b32 	%r7175, %r7169, %r7170, 25;
	shf.l.wrap.b32 	%r7176, %r7170, %r7169, 25;
	mov.b64 	%rd10693, {%r7176, %r7175};
	xor.b64  	%rd10694, %rd10692, %rd10693;
	and.b64  	%rd10695, %rd10673, %rd10646;
	xor.b64  	%rd10696, %rd10673, %rd10646;
	and.b64  	%rd10697, %rd10696, %rd10619;
	or.b64  	%rd10698, %rd10697, %rd10695;
	add.s64 	%rd10699, %rd10688, %rd10698;
	add.s64 	%rd10700, %rd10699, %rd10694;
	add.s32 	%r7177, %r12659, 5;
	mul.wide.s32 	%rd10701, %r7177, 8;
	add.s64 	%rd10702, %rd10566, %rd10701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd10689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd10689;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 14;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 14;
	mov.b64 	%rd10703, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7179, %r7178, 18;
	shf.r.wrap.b32 	%r7183, %r7178, %r7179, 18;
	mov.b64 	%rd10704, {%r7183, %r7182};
	xor.b64  	%rd10705, %rd10704, %rd10703;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 23;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 23;
	mov.b64 	%rd10706, {%r7185, %r7184};
	xor.b64  	%rd10707, %rd10705, %rd10706;
	xor.b64  	%rd10708, %rd10662, %rd10635;
	and.b64  	%rd10709, %rd10689, %rd10708;
	xor.b64  	%rd10710, %rd10709, %rd10635;
	add.s64 	%rd10711, %rd10608, %rd18550;
	ld.const.u64 	%rd10712, [%rd10702];
	add.s64 	%rd10713, %rd10711, %rd10712;
	add.s64 	%rd10714, %rd10713, %rd10710;
	add.s64 	%rd10715, %rd10714, %rd10707;
	add.s64 	%rd10716, %rd10715, %rd10619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd10700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd10700;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 28;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 28;
	mov.b64 	%rd10717, {%r7189, %r7188};
	shf.l.wrap.b32 	%r7190, %r7186, %r7187, 30;
	shf.l.wrap.b32 	%r7191, %r7187, %r7186, 30;
	mov.b64 	%rd10718, {%r7191, %r7190};
	xor.b64  	%rd10719, %rd10718, %rd10717;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 25;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 25;
	mov.b64 	%rd10720, {%r7193, %r7192};
	xor.b64  	%rd10721, %rd10719, %rd10720;
	and.b64  	%rd10722, %rd10700, %rd10673;
	xor.b64  	%rd10723, %rd10700, %rd10673;
	and.b64  	%rd10724, %rd10723, %rd10646;
	or.b64  	%rd10725, %rd10724, %rd10722;
	add.s64 	%rd10726, %rd10715, %rd10725;
	add.s64 	%rd10727, %rd10726, %rd10721;
	add.s32 	%r7194, %r12659, 6;
	mul.wide.s32 	%rd10728, %r7194, 8;
	add.s64 	%rd10729, %rd10566, %rd10728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7195,%dummy}, %rd10716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7196}, %rd10716;
	}
	shf.r.wrap.b32 	%r7197, %r7196, %r7195, 14;
	shf.r.wrap.b32 	%r7198, %r7195, %r7196, 14;
	mov.b64 	%rd10730, {%r7198, %r7197};
	shf.r.wrap.b32 	%r7199, %r7196, %r7195, 18;
	shf.r.wrap.b32 	%r7200, %r7195, %r7196, 18;
	mov.b64 	%rd10731, {%r7200, %r7199};
	xor.b64  	%rd10732, %rd10731, %rd10730;
	shf.l.wrap.b32 	%r7201, %r7195, %r7196, 23;
	shf.l.wrap.b32 	%r7202, %r7196, %r7195, 23;
	mov.b64 	%rd10733, {%r7202, %r7201};
	xor.b64  	%rd10734, %rd10732, %rd10733;
	xor.b64  	%rd10735, %rd10689, %rd10662;
	and.b64  	%rd10736, %rd10716, %rd10735;
	xor.b64  	%rd10737, %rd10736, %rd10662;
	add.s64 	%rd10738, %rd10635, %rd18551;
	ld.const.u64 	%rd10739, [%rd10729];
	add.s64 	%rd10740, %rd10738, %rd10739;
	add.s64 	%rd10741, %rd10740, %rd10737;
	add.s64 	%rd10742, %rd10741, %rd10734;
	add.s64 	%rd10743, %rd10742, %rd10646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7203,%dummy}, %rd10727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7204}, %rd10727;
	}
	shf.r.wrap.b32 	%r7205, %r7204, %r7203, 28;
	shf.r.wrap.b32 	%r7206, %r7203, %r7204, 28;
	mov.b64 	%rd10744, {%r7206, %r7205};
	shf.l.wrap.b32 	%r7207, %r7203, %r7204, 30;
	shf.l.wrap.b32 	%r7208, %r7204, %r7203, 30;
	mov.b64 	%rd10745, {%r7208, %r7207};
	xor.b64  	%rd10746, %rd10745, %rd10744;
	shf.l.wrap.b32 	%r7209, %r7203, %r7204, 25;
	shf.l.wrap.b32 	%r7210, %r7204, %r7203, 25;
	mov.b64 	%rd10747, {%r7210, %r7209};
	xor.b64  	%rd10748, %rd10746, %rd10747;
	and.b64  	%rd10749, %rd10727, %rd10700;
	xor.b64  	%rd10750, %rd10727, %rd10700;
	and.b64  	%rd10751, %rd10750, %rd10673;
	or.b64  	%rd10752, %rd10751, %rd10749;
	add.s64 	%rd10753, %rd10742, %rd10752;
	add.s64 	%rd10754, %rd10753, %rd10748;
	add.s32 	%r7211, %r12659, 7;
	mul.wide.s32 	%rd10755, %r7211, 8;
	add.s64 	%rd10756, %rd10566, %rd10755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7212,%dummy}, %rd10743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7213}, %rd10743;
	}
	shf.r.wrap.b32 	%r7214, %r7213, %r7212, 14;
	shf.r.wrap.b32 	%r7215, %r7212, %r7213, 14;
	mov.b64 	%rd10757, {%r7215, %r7214};
	shf.r.wrap.b32 	%r7216, %r7213, %r7212, 18;
	shf.r.wrap.b32 	%r7217, %r7212, %r7213, 18;
	mov.b64 	%rd10758, {%r7217, %r7216};
	xor.b64  	%rd10759, %rd10758, %rd10757;
	shf.l.wrap.b32 	%r7218, %r7212, %r7213, 23;
	shf.l.wrap.b32 	%r7219, %r7213, %r7212, 23;
	mov.b64 	%rd10760, {%r7219, %r7218};
	xor.b64  	%rd10761, %rd10759, %rd10760;
	xor.b64  	%rd10762, %rd10716, %rd10689;
	and.b64  	%rd10763, %rd10743, %rd10762;
	xor.b64  	%rd10764, %rd10763, %rd10689;
	add.s64 	%rd10765, %rd10662, %rd18552;
	ld.const.u64 	%rd10766, [%rd10756];
	add.s64 	%rd10767, %rd10765, %rd10766;
	add.s64 	%rd10768, %rd10767, %rd10764;
	add.s64 	%rd10769, %rd10768, %rd10761;
	add.s64 	%rd10770, %rd10769, %rd10673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7220,%dummy}, %rd10754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd10754;
	}
	shf.r.wrap.b32 	%r7222, %r7221, %r7220, 28;
	shf.r.wrap.b32 	%r7223, %r7220, %r7221, 28;
	mov.b64 	%rd10771, {%r7223, %r7222};
	shf.l.wrap.b32 	%r7224, %r7220, %r7221, 30;
	shf.l.wrap.b32 	%r7225, %r7221, %r7220, 30;
	mov.b64 	%rd10772, {%r7225, %r7224};
	xor.b64  	%rd10773, %rd10772, %rd10771;
	shf.l.wrap.b32 	%r7226, %r7220, %r7221, 25;
	shf.l.wrap.b32 	%r7227, %r7221, %r7220, 25;
	mov.b64 	%rd10774, {%r7227, %r7226};
	xor.b64  	%rd10775, %rd10773, %rd10774;
	and.b64  	%rd10776, %rd10754, %rd10727;
	xor.b64  	%rd10777, %rd10754, %rd10727;
	and.b64  	%rd10778, %rd10777, %rd10700;
	or.b64  	%rd10779, %rd10778, %rd10776;
	add.s64 	%rd10780, %rd10769, %rd10779;
	add.s64 	%rd10781, %rd10780, %rd10775;
	add.s32 	%r7228, %r12659, 8;
	mul.wide.s32 	%rd10782, %r7228, 8;
	add.s64 	%rd10783, %rd10566, %rd10782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7229,%dummy}, %rd10770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7230}, %rd10770;
	}
	shf.r.wrap.b32 	%r7231, %r7230, %r7229, 14;
	shf.r.wrap.b32 	%r7232, %r7229, %r7230, 14;
	mov.b64 	%rd10784, {%r7232, %r7231};
	shf.r.wrap.b32 	%r7233, %r7230, %r7229, 18;
	shf.r.wrap.b32 	%r7234, %r7229, %r7230, 18;
	mov.b64 	%rd10785, {%r7234, %r7233};
	xor.b64  	%rd10786, %rd10785, %rd10784;
	shf.l.wrap.b32 	%r7235, %r7229, %r7230, 23;
	shf.l.wrap.b32 	%r7236, %r7230, %r7229, 23;
	mov.b64 	%rd10787, {%r7236, %r7235};
	xor.b64  	%rd10788, %rd10786, %rd10787;
	xor.b64  	%rd10789, %rd10743, %rd10716;
	and.b64  	%rd10790, %rd10770, %rd10789;
	xor.b64  	%rd10791, %rd10790, %rd10716;
	add.s64 	%rd10792, %rd10689, %rd18536;
	ld.const.u64 	%rd10793, [%rd10783];
	add.s64 	%rd10794, %rd10792, %rd10793;
	add.s64 	%rd10795, %rd10794, %rd10791;
	add.s64 	%rd10796, %rd10795, %rd10788;
	add.s64 	%rd10797, %rd10796, %rd10700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7237,%dummy}, %rd10781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7238}, %rd10781;
	}
	shf.r.wrap.b32 	%r7239, %r7238, %r7237, 28;
	shf.r.wrap.b32 	%r7240, %r7237, %r7238, 28;
	mov.b64 	%rd10798, {%r7240, %r7239};
	shf.l.wrap.b32 	%r7241, %r7237, %r7238, 30;
	shf.l.wrap.b32 	%r7242, %r7238, %r7237, 30;
	mov.b64 	%rd10799, {%r7242, %r7241};
	xor.b64  	%rd10800, %rd10799, %rd10798;
	shf.l.wrap.b32 	%r7243, %r7237, %r7238, 25;
	shf.l.wrap.b32 	%r7244, %r7238, %r7237, 25;
	mov.b64 	%rd10801, {%r7244, %r7243};
	xor.b64  	%rd10802, %rd10800, %rd10801;
	and.b64  	%rd10803, %rd10781, %rd10754;
	xor.b64  	%rd10804, %rd10781, %rd10754;
	and.b64  	%rd10805, %rd10804, %rd10727;
	or.b64  	%rd10806, %rd10805, %rd10803;
	add.s64 	%rd10807, %rd10796, %rd10806;
	add.s64 	%rd10808, %rd10807, %rd10802;
	add.s32 	%r7245, %r12659, 9;
	mul.wide.s32 	%rd10809, %r7245, 8;
	add.s64 	%rd10810, %rd10566, %rd10809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7246,%dummy}, %rd10797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7247}, %rd10797;
	}
	shf.r.wrap.b32 	%r7248, %r7247, %r7246, 14;
	shf.r.wrap.b32 	%r7249, %r7246, %r7247, 14;
	mov.b64 	%rd10811, {%r7249, %r7248};
	shf.r.wrap.b32 	%r7250, %r7247, %r7246, 18;
	shf.r.wrap.b32 	%r7251, %r7246, %r7247, 18;
	mov.b64 	%rd10812, {%r7251, %r7250};
	xor.b64  	%rd10813, %rd10812, %rd10811;
	shf.l.wrap.b32 	%r7252, %r7246, %r7247, 23;
	shf.l.wrap.b32 	%r7253, %r7247, %r7246, 23;
	mov.b64 	%rd10814, {%r7253, %r7252};
	xor.b64  	%rd10815, %rd10813, %rd10814;
	xor.b64  	%rd10816, %rd10770, %rd10743;
	and.b64  	%rd10817, %rd10797, %rd10816;
	xor.b64  	%rd10818, %rd10817, %rd10743;
	add.s64 	%rd10819, %rd10716, %rd18535;
	ld.const.u64 	%rd10820, [%rd10810];
	add.s64 	%rd10821, %rd10819, %rd10820;
	add.s64 	%rd10822, %rd10821, %rd10818;
	add.s64 	%rd10823, %rd10822, %rd10815;
	add.s64 	%rd10824, %rd10823, %rd10727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd10808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd10808;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 28;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 28;
	mov.b64 	%rd10825, {%r7257, %r7256};
	shf.l.wrap.b32 	%r7258, %r7254, %r7255, 30;
	shf.l.wrap.b32 	%r7259, %r7255, %r7254, 30;
	mov.b64 	%rd10826, {%r7259, %r7258};
	xor.b64  	%rd10827, %rd10826, %rd10825;
	shf.l.wrap.b32 	%r7260, %r7254, %r7255, 25;
	shf.l.wrap.b32 	%r7261, %r7255, %r7254, 25;
	mov.b64 	%rd10828, {%r7261, %r7260};
	xor.b64  	%rd10829, %rd10827, %rd10828;
	and.b64  	%rd10830, %rd10808, %rd10781;
	xor.b64  	%rd10831, %rd10808, %rd10781;
	and.b64  	%rd10832, %rd10831, %rd10754;
	or.b64  	%rd10833, %rd10832, %rd10830;
	add.s64 	%rd10834, %rd10823, %rd10833;
	add.s64 	%rd10835, %rd10834, %rd10829;
	add.s32 	%r7262, %r12659, 10;
	mul.wide.s32 	%rd10836, %r7262, 8;
	add.s64 	%rd10837, %rd10566, %rd10836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7263,%dummy}, %rd10824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7264}, %rd10824;
	}
	shf.r.wrap.b32 	%r7265, %r7264, %r7263, 14;
	shf.r.wrap.b32 	%r7266, %r7263, %r7264, 14;
	mov.b64 	%rd10838, {%r7266, %r7265};
	shf.r.wrap.b32 	%r7267, %r7264, %r7263, 18;
	shf.r.wrap.b32 	%r7268, %r7263, %r7264, 18;
	mov.b64 	%rd10839, {%r7268, %r7267};
	xor.b64  	%rd10840, %rd10839, %rd10838;
	shf.l.wrap.b32 	%r7269, %r7263, %r7264, 23;
	shf.l.wrap.b32 	%r7270, %r7264, %r7263, 23;
	mov.b64 	%rd10841, {%r7270, %r7269};
	xor.b64  	%rd10842, %rd10840, %rd10841;
	xor.b64  	%rd10843, %rd10797, %rd10770;
	and.b64  	%rd10844, %rd10824, %rd10843;
	xor.b64  	%rd10845, %rd10844, %rd10770;
	add.s64 	%rd10846, %rd10743, %rd18534;
	ld.const.u64 	%rd10847, [%rd10837];
	add.s64 	%rd10848, %rd10846, %rd10847;
	add.s64 	%rd10849, %rd10848, %rd10845;
	add.s64 	%rd10850, %rd10849, %rd10842;
	add.s64 	%rd10851, %rd10850, %rd10754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7271,%dummy}, %rd10835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7272}, %rd10835;
	}
	shf.r.wrap.b32 	%r7273, %r7272, %r7271, 28;
	shf.r.wrap.b32 	%r7274, %r7271, %r7272, 28;
	mov.b64 	%rd10852, {%r7274, %r7273};
	shf.l.wrap.b32 	%r7275, %r7271, %r7272, 30;
	shf.l.wrap.b32 	%r7276, %r7272, %r7271, 30;
	mov.b64 	%rd10853, {%r7276, %r7275};
	xor.b64  	%rd10854, %rd10853, %rd10852;
	shf.l.wrap.b32 	%r7277, %r7271, %r7272, 25;
	shf.l.wrap.b32 	%r7278, %r7272, %r7271, 25;
	mov.b64 	%rd10855, {%r7278, %r7277};
	xor.b64  	%rd10856, %rd10854, %rd10855;
	and.b64  	%rd10857, %rd10835, %rd10808;
	xor.b64  	%rd10858, %rd10835, %rd10808;
	and.b64  	%rd10859, %rd10858, %rd10781;
	or.b64  	%rd10860, %rd10859, %rd10857;
	add.s64 	%rd10861, %rd10850, %rd10860;
	add.s64 	%rd10862, %rd10861, %rd10856;
	add.s32 	%r7279, %r12659, 11;
	mul.wide.s32 	%rd10863, %r7279, 8;
	add.s64 	%rd10864, %rd10566, %rd10863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7280,%dummy}, %rd10851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7281}, %rd10851;
	}
	shf.r.wrap.b32 	%r7282, %r7281, %r7280, 14;
	shf.r.wrap.b32 	%r7283, %r7280, %r7281, 14;
	mov.b64 	%rd10865, {%r7283, %r7282};
	shf.r.wrap.b32 	%r7284, %r7281, %r7280, 18;
	shf.r.wrap.b32 	%r7285, %r7280, %r7281, 18;
	mov.b64 	%rd10866, {%r7285, %r7284};
	xor.b64  	%rd10867, %rd10866, %rd10865;
	shf.l.wrap.b32 	%r7286, %r7280, %r7281, 23;
	shf.l.wrap.b32 	%r7287, %r7281, %r7280, 23;
	mov.b64 	%rd10868, {%r7287, %r7286};
	xor.b64  	%rd10869, %rd10867, %rd10868;
	xor.b64  	%rd10870, %rd10824, %rd10797;
	and.b64  	%rd10871, %rd10851, %rd10870;
	xor.b64  	%rd10872, %rd10871, %rd10797;
	add.s64 	%rd10873, %rd10770, %rd18533;
	ld.const.u64 	%rd10874, [%rd10864];
	add.s64 	%rd10875, %rd10873, %rd10874;
	add.s64 	%rd10876, %rd10875, %rd10872;
	add.s64 	%rd10877, %rd10876, %rd10869;
	add.s64 	%rd10878, %rd10877, %rd10781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7288,%dummy}, %rd10862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7289}, %rd10862;
	}
	shf.r.wrap.b32 	%r7290, %r7289, %r7288, 28;
	shf.r.wrap.b32 	%r7291, %r7288, %r7289, 28;
	mov.b64 	%rd10879, {%r7291, %r7290};
	shf.l.wrap.b32 	%r7292, %r7288, %r7289, 30;
	shf.l.wrap.b32 	%r7293, %r7289, %r7288, 30;
	mov.b64 	%rd10880, {%r7293, %r7292};
	xor.b64  	%rd10881, %rd10880, %rd10879;
	shf.l.wrap.b32 	%r7294, %r7288, %r7289, 25;
	shf.l.wrap.b32 	%r7295, %r7289, %r7288, 25;
	mov.b64 	%rd10882, {%r7295, %r7294};
	xor.b64  	%rd10883, %rd10881, %rd10882;
	and.b64  	%rd10884, %rd10862, %rd10835;
	xor.b64  	%rd10885, %rd10862, %rd10835;
	and.b64  	%rd10886, %rd10885, %rd10808;
	or.b64  	%rd10887, %rd10886, %rd10884;
	add.s64 	%rd10888, %rd10877, %rd10887;
	add.s64 	%rd10889, %rd10888, %rd10883;
	add.s32 	%r7296, %r12659, 12;
	mul.wide.s32 	%rd10890, %r7296, 8;
	add.s64 	%rd10891, %rd10566, %rd10890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7297,%dummy}, %rd10878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7298}, %rd10878;
	}
	shf.r.wrap.b32 	%r7299, %r7298, %r7297, 14;
	shf.r.wrap.b32 	%r7300, %r7297, %r7298, 14;
	mov.b64 	%rd10892, {%r7300, %r7299};
	shf.r.wrap.b32 	%r7301, %r7298, %r7297, 18;
	shf.r.wrap.b32 	%r7302, %r7297, %r7298, 18;
	mov.b64 	%rd10893, {%r7302, %r7301};
	xor.b64  	%rd10894, %rd10893, %rd10892;
	shf.l.wrap.b32 	%r7303, %r7297, %r7298, 23;
	shf.l.wrap.b32 	%r7304, %r7298, %r7297, 23;
	mov.b64 	%rd10895, {%r7304, %r7303};
	xor.b64  	%rd10896, %rd10894, %rd10895;
	xor.b64  	%rd10897, %rd10851, %rd10824;
	and.b64  	%rd10898, %rd10878, %rd10897;
	xor.b64  	%rd10899, %rd10898, %rd10824;
	add.s64 	%rd10900, %rd10797, %rd18532;
	ld.const.u64 	%rd10901, [%rd10891];
	add.s64 	%rd10902, %rd10900, %rd10901;
	add.s64 	%rd10903, %rd10902, %rd10899;
	add.s64 	%rd10904, %rd10903, %rd10896;
	add.s64 	%rd18497, %rd10904, %rd10808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7305,%dummy}, %rd10889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7306}, %rd10889;
	}
	shf.r.wrap.b32 	%r7307, %r7306, %r7305, 28;
	shf.r.wrap.b32 	%r7308, %r7305, %r7306, 28;
	mov.b64 	%rd10905, {%r7308, %r7307};
	shf.l.wrap.b32 	%r7309, %r7305, %r7306, 30;
	shf.l.wrap.b32 	%r7310, %r7306, %r7305, 30;
	mov.b64 	%rd10906, {%r7310, %r7309};
	xor.b64  	%rd10907, %rd10906, %rd10905;
	shf.l.wrap.b32 	%r7311, %r7305, %r7306, 25;
	shf.l.wrap.b32 	%r7312, %r7306, %r7305, 25;
	mov.b64 	%rd10908, {%r7312, %r7311};
	xor.b64  	%rd10909, %rd10907, %rd10908;
	and.b64  	%rd10910, %rd10889, %rd10862;
	xor.b64  	%rd10911, %rd10889, %rd10862;
	and.b64  	%rd10912, %rd10911, %rd10835;
	or.b64  	%rd10913, %rd10912, %rd10910;
	add.s64 	%rd10914, %rd10904, %rd10913;
	add.s64 	%rd18493, %rd10914, %rd10909;
	add.s32 	%r7313, %r12659, 13;
	mul.wide.s32 	%rd10915, %r7313, 8;
	add.s64 	%rd10916, %rd10566, %rd10915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd18497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd18497;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 14;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 14;
	mov.b64 	%rd10917, {%r7317, %r7316};
	shf.r.wrap.b32 	%r7318, %r7315, %r7314, 18;
	shf.r.wrap.b32 	%r7319, %r7314, %r7315, 18;
	mov.b64 	%rd10918, {%r7319, %r7318};
	xor.b64  	%rd10919, %rd10918, %rd10917;
	shf.l.wrap.b32 	%r7320, %r7314, %r7315, 23;
	shf.l.wrap.b32 	%r7321, %r7315, %r7314, 23;
	mov.b64 	%rd10920, {%r7321, %r7320};
	xor.b64  	%rd10921, %rd10919, %rd10920;
	xor.b64  	%rd10922, %rd10878, %rd10851;
	and.b64  	%rd10923, %rd18497, %rd10922;
	xor.b64  	%rd10924, %rd10923, %rd10851;
	add.s64 	%rd10925, %rd10824, %rd18531;
	ld.const.u64 	%rd10926, [%rd10916];
	add.s64 	%rd10927, %rd10925, %rd10926;
	add.s64 	%rd10928, %rd10927, %rd10924;
	add.s64 	%rd10929, %rd10928, %rd10921;
	add.s64 	%rd18496, %rd10929, %rd10835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd18493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd18493;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 28;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 28;
	mov.b64 	%rd10930, {%r7325, %r7324};
	shf.l.wrap.b32 	%r7326, %r7322, %r7323, 30;
	shf.l.wrap.b32 	%r7327, %r7323, %r7322, 30;
	mov.b64 	%rd10931, {%r7327, %r7326};
	xor.b64  	%rd10932, %rd10931, %rd10930;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 25;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 25;
	mov.b64 	%rd10933, {%r7329, %r7328};
	xor.b64  	%rd10934, %rd10932, %rd10933;
	and.b64  	%rd10935, %rd18493, %rd10889;
	xor.b64  	%rd10936, %rd18493, %rd10889;
	and.b64  	%rd10937, %rd10936, %rd10862;
	or.b64  	%rd10938, %rd10937, %rd10935;
	add.s64 	%rd10939, %rd10929, %rd10938;
	add.s64 	%rd18492, %rd10939, %rd10934;
	add.s32 	%r7330, %r12659, 14;
	mul.wide.s32 	%rd10940, %r7330, 8;
	add.s64 	%rd10941, %rd10566, %rd10940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7331,%dummy}, %rd18496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7332}, %rd18496;
	}
	shf.r.wrap.b32 	%r7333, %r7332, %r7331, 14;
	shf.r.wrap.b32 	%r7334, %r7331, %r7332, 14;
	mov.b64 	%rd10942, {%r7334, %r7333};
	shf.r.wrap.b32 	%r7335, %r7332, %r7331, 18;
	shf.r.wrap.b32 	%r7336, %r7331, %r7332, 18;
	mov.b64 	%rd10943, {%r7336, %r7335};
	xor.b64  	%rd10944, %rd10943, %rd10942;
	shf.l.wrap.b32 	%r7337, %r7331, %r7332, 23;
	shf.l.wrap.b32 	%r7338, %r7332, %r7331, 23;
	mov.b64 	%rd10945, {%r7338, %r7337};
	xor.b64  	%rd10946, %rd10944, %rd10945;
	xor.b64  	%rd10947, %rd18497, %rd10878;
	and.b64  	%rd10948, %rd18496, %rd10947;
	xor.b64  	%rd10949, %rd10948, %rd10878;
	add.s64 	%rd10950, %rd10851, %rd18530;
	ld.const.u64 	%rd10951, [%rd10941];
	add.s64 	%rd10952, %rd10950, %rd10951;
	add.s64 	%rd10953, %rd10952, %rd10949;
	add.s64 	%rd10954, %rd10953, %rd10946;
	add.s64 	%rd18495, %rd10954, %rd10862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7339,%dummy}, %rd18492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7340}, %rd18492;
	}
	shf.r.wrap.b32 	%r7341, %r7340, %r7339, 28;
	shf.r.wrap.b32 	%r7342, %r7339, %r7340, 28;
	mov.b64 	%rd10955, {%r7342, %r7341};
	shf.l.wrap.b32 	%r7343, %r7339, %r7340, 30;
	shf.l.wrap.b32 	%r7344, %r7340, %r7339, 30;
	mov.b64 	%rd10956, {%r7344, %r7343};
	xor.b64  	%rd10957, %rd10956, %rd10955;
	shf.l.wrap.b32 	%r7345, %r7339, %r7340, 25;
	shf.l.wrap.b32 	%r7346, %r7340, %r7339, 25;
	mov.b64 	%rd10958, {%r7346, %r7345};
	xor.b64  	%rd10959, %rd10957, %rd10958;
	and.b64  	%rd10960, %rd18492, %rd18493;
	xor.b64  	%rd10961, %rd18492, %rd18493;
	and.b64  	%rd10962, %rd10961, %rd10889;
	or.b64  	%rd10963, %rd10962, %rd10960;
	add.s64 	%rd10964, %rd10954, %rd10963;
	add.s64 	%rd18491, %rd10964, %rd10959;
	add.s32 	%r7347, %r12659, 15;
	mul.wide.s32 	%rd10965, %r7347, 8;
	add.s64 	%rd10966, %rd10566, %rd10965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7348,%dummy}, %rd18495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7349}, %rd18495;
	}
	shf.r.wrap.b32 	%r7350, %r7349, %r7348, 14;
	shf.r.wrap.b32 	%r7351, %r7348, %r7349, 14;
	mov.b64 	%rd10967, {%r7351, %r7350};
	shf.r.wrap.b32 	%r7352, %r7349, %r7348, 18;
	shf.r.wrap.b32 	%r7353, %r7348, %r7349, 18;
	mov.b64 	%rd10968, {%r7353, %r7352};
	xor.b64  	%rd10969, %rd10968, %rd10967;
	shf.l.wrap.b32 	%r7354, %r7348, %r7349, 23;
	shf.l.wrap.b32 	%r7355, %r7349, %r7348, 23;
	mov.b64 	%rd10970, {%r7355, %r7354};
	xor.b64  	%rd10971, %rd10969, %rd10970;
	xor.b64  	%rd10972, %rd18496, %rd18497;
	and.b64  	%rd10973, %rd18495, %rd10972;
	xor.b64  	%rd10974, %rd10973, %rd18497;
	add.s64 	%rd10975, %rd10878, %rd18482;
	ld.const.u64 	%rd10976, [%rd10966];
	add.s64 	%rd10977, %rd10975, %rd10976;
	add.s64 	%rd10978, %rd10977, %rd10974;
	add.s64 	%rd10979, %rd10978, %rd10971;
	add.s64 	%rd18494, %rd10979, %rd10889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7356,%dummy}, %rd18491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7357}, %rd18491;
	}
	shf.r.wrap.b32 	%r7358, %r7357, %r7356, 28;
	shf.r.wrap.b32 	%r7359, %r7356, %r7357, 28;
	mov.b64 	%rd10980, {%r7359, %r7358};
	shf.l.wrap.b32 	%r7360, %r7356, %r7357, 30;
	shf.l.wrap.b32 	%r7361, %r7357, %r7356, 30;
	mov.b64 	%rd10981, {%r7361, %r7360};
	xor.b64  	%rd10982, %rd10981, %rd10980;
	shf.l.wrap.b32 	%r7362, %r7356, %r7357, 25;
	shf.l.wrap.b32 	%r7363, %r7357, %r7356, 25;
	mov.b64 	%rd10983, {%r7363, %r7362};
	xor.b64  	%rd10984, %rd10982, %rd10983;
	and.b64  	%rd10985, %rd18491, %rd18492;
	xor.b64  	%rd10986, %rd18491, %rd18492;
	and.b64  	%rd10987, %rd10986, %rd18493;
	or.b64  	%rd10988, %rd10987, %rd10985;
	add.s64 	%rd10989, %rd10979, %rd10988;
	add.s64 	%rd18490, %rd10989, %rd10984;
	add.s32 	%r12659, %r12659, 16;
	setp.lt.s32	%p111, %r12659, 80;
	@%p111 bra 	BB0_181;

	add.s64 	%rd18513, %rd18490, %rd771;
	st.local.u64 	[%rd1], %rd18513;
	add.s64 	%rd18512, %rd18491, %rd772;
	st.local.u64 	[%rd1+8], %rd18512;
	add.s64 	%rd18511, %rd18492, %rd773;
	st.local.u64 	[%rd1+16], %rd18511;
	add.s64 	%rd18510, %rd18493, %rd770;
	st.local.u64 	[%rd1+24], %rd18510;
	add.s64 	%rd18509, %rd18494, %rd766;
	st.local.u64 	[%rd1+32], %rd18509;
	add.s64 	%rd18508, %rd18495, %rd768;
	st.local.u64 	[%rd1+40], %rd18508;
	add.s64 	%rd18507, %rd18496, %rd767;
	st.local.u64 	[%rd1+48], %rd18507;
	add.s64 	%rd18506, %rd18497, %rd769;
	st.local.u64 	[%rd1+56], %rd18506;
	mov.u64 	%rd18530, 0;
	st.local.u64 	[%rd1+64], %rd18530;
	st.local.u64 	[%rd1+72], %rd18530;
	st.local.u64 	[%rd1+80], %rd18530;
	st.local.u64 	[%rd1+88], %rd18530;
	st.local.u64 	[%rd1+96], %rd18530;
	st.local.u64 	[%rd1+104], %rd18530;
	st.local.u64 	[%rd1+112], %rd18530;
	st.local.u64 	[%rd1+120], %rd18530;
	st.local.u64 	[%rd1+128], %rd18530;
	st.local.u64 	[%rd1+136], %rd18530;
	st.local.u64 	[%rd1+144], %rd18530;
	st.local.u64 	[%rd1+152], %rd18530;
	st.local.u64 	[%rd1+160], %rd18530;
	st.local.u64 	[%rd1+168], %rd18530;
	st.local.u64 	[%rd1+176], %rd18530;
	st.local.u64 	[%rd1+184], %rd18530;
	mov.u64 	%rd18531, %rd18530;
	mov.u64 	%rd18532, %rd18530;
	mov.u64 	%rd18533, %rd18530;
	mov.u64 	%rd18534, %rd18530;
	mov.u64 	%rd18535, %rd18530;
	mov.u64 	%rd18536, %rd18530;
	mov.u64 	%rd18552, %rd18530;
	mov.u64 	%rd18551, %rd18530;
	mov.u64 	%rd18550, %rd18530;
	mov.u64 	%rd18549, %rd18530;
	mov.u64 	%rd18548, %rd18530;
	mov.u64 	%rd18547, %rd18530;
	mov.u64 	%rd18546, %rd18530;
	mov.u64 	%rd18545, %rd18530;
	bra.uni 	BB0_183;

BB0_179:
	ld.local.u64 	%rd18513, [%rd1];
	ld.local.u64 	%rd18512, [%rd1+8];
	ld.local.u64 	%rd18511, [%rd1+16];
	ld.local.u64 	%rd18510, [%rd1+24];
	ld.local.u64 	%rd18509, [%rd1+32];
	ld.local.u64 	%rd18508, [%rd1+40];
	ld.local.u64 	%rd18507, [%rd1+48];
	ld.local.u64 	%rd18506, [%rd1+56];

BB0_183:
	ld.local.u32 	%r7365, [%rd1+192];
	shl.b32 	%r7366, %r7365, 3;
	cvt.s64.s32	%rd18529, %r7366;
	st.local.u64 	[%rd1+184], %rd18529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7367,%dummy}, %rd18509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7368}, %rd18509;
	}
	shf.r.wrap.b32 	%r7369, %r7368, %r7367, 18;
	shf.r.wrap.b32 	%r7370, %r7367, %r7368, 18;
	mov.b64 	%rd11005, {%r7370, %r7369};
	shf.r.wrap.b32 	%r7371, %r7368, %r7367, 14;
	shf.r.wrap.b32 	%r7372, %r7367, %r7368, 14;
	mov.b64 	%rd11006, {%r7372, %r7371};
	xor.b64  	%rd11007, %rd11005, %rd11006;
	shf.l.wrap.b32 	%r7373, %r7367, %r7368, 23;
	shf.l.wrap.b32 	%r7374, %r7368, %r7367, 23;
	mov.b64 	%rd11008, {%r7374, %r7373};
	xor.b64  	%rd11009, %rd11007, %rd11008;
	xor.b64  	%rd11010, %rd18508, %rd18507;
	and.b64  	%rd11011, %rd11010, %rd18509;
	xor.b64  	%rd11012, %rd11011, %rd18507;
	add.s64 	%rd11013, %rd18506, %rd18338;
	add.s64 	%rd11014, %rd11013, %rd11012;
	add.s64 	%rd11015, %rd11014, %rd18545;
	add.s64 	%rd11016, %rd11015, %rd11009;
	add.s64 	%rd11017, %rd11016, %rd18510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7375}, %rd18513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7376,%dummy}, %rd18513;
	}
	shf.l.wrap.b32 	%r7377, %r7376, %r7375, 30;
	shf.l.wrap.b32 	%r7378, %r7375, %r7376, 30;
	mov.b64 	%rd11018, {%r7378, %r7377};
	shf.r.wrap.b32 	%r7379, %r7375, %r7376, 28;
	shf.r.wrap.b32 	%r7380, %r7376, %r7375, 28;
	mov.b64 	%rd11019, {%r7380, %r7379};
	xor.b64  	%rd11020, %rd11018, %rd11019;
	shf.l.wrap.b32 	%r7381, %r7376, %r7375, 25;
	shf.l.wrap.b32 	%r7382, %r7375, %r7376, 25;
	mov.b64 	%rd11021, {%r7382, %r7381};
	xor.b64  	%rd11022, %rd11020, %rd11021;
	xor.b64  	%rd11023, %rd18513, %rd18512;
	and.b64  	%rd11024, %rd11023, %rd18511;
	and.b64  	%rd11025, %rd18513, %rd18512;
	or.b64  	%rd11026, %rd11024, %rd11025;
	add.s64 	%rd11027, %rd11016, %rd11026;
	add.s64 	%rd11028, %rd11027, %rd11022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7383,%dummy}, %rd11017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7384}, %rd11017;
	}
	shf.r.wrap.b32 	%r7385, %r7384, %r7383, 14;
	shf.r.wrap.b32 	%r7386, %r7383, %r7384, 14;
	mov.b64 	%rd11029, {%r7386, %r7385};
	shf.r.wrap.b32 	%r7387, %r7384, %r7383, 18;
	shf.r.wrap.b32 	%r7388, %r7383, %r7384, 18;
	mov.b64 	%rd11030, {%r7388, %r7387};
	xor.b64  	%rd11031, %rd11030, %rd11029;
	shf.l.wrap.b32 	%r7389, %r7383, %r7384, 23;
	shf.l.wrap.b32 	%r7390, %r7384, %r7383, 23;
	mov.b64 	%rd11032, {%r7390, %r7389};
	xor.b64  	%rd11033, %rd11031, %rd11032;
	xor.b64  	%rd11034, %rd18509, %rd18508;
	and.b64  	%rd11035, %rd11017, %rd11034;
	xor.b64  	%rd11036, %rd11035, %rd18508;
	add.s64 	%rd11037, %rd18507, %rd18337;
	add.s64 	%rd11038, %rd11037, %rd18546;
	add.s64 	%rd11039, %rd11038, %rd11036;
	add.s64 	%rd11040, %rd11039, %rd11033;
	add.s64 	%rd11041, %rd11040, %rd18511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7391,%dummy}, %rd11028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7392}, %rd11028;
	}
	shf.r.wrap.b32 	%r7393, %r7392, %r7391, 28;
	shf.r.wrap.b32 	%r7394, %r7391, %r7392, 28;
	mov.b64 	%rd11042, {%r7394, %r7393};
	shf.l.wrap.b32 	%r7395, %r7391, %r7392, 30;
	shf.l.wrap.b32 	%r7396, %r7392, %r7391, 30;
	mov.b64 	%rd11043, {%r7396, %r7395};
	xor.b64  	%rd11044, %rd11043, %rd11042;
	shf.l.wrap.b32 	%r7397, %r7391, %r7392, 25;
	shf.l.wrap.b32 	%r7398, %r7392, %r7391, 25;
	mov.b64 	%rd11045, {%r7398, %r7397};
	xor.b64  	%rd11046, %rd11044, %rd11045;
	and.b64  	%rd11047, %rd11028, %rd18513;
	xor.b64  	%rd11048, %rd11028, %rd18513;
	and.b64  	%rd11049, %rd11048, %rd18512;
	or.b64  	%rd11050, %rd11049, %rd11047;
	add.s64 	%rd11051, %rd11040, %rd11050;
	add.s64 	%rd11052, %rd11051, %rd11046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7399,%dummy}, %rd11041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7400}, %rd11041;
	}
	shf.r.wrap.b32 	%r7401, %r7400, %r7399, 14;
	shf.r.wrap.b32 	%r7402, %r7399, %r7400, 14;
	mov.b64 	%rd11053, {%r7402, %r7401};
	shf.r.wrap.b32 	%r7403, %r7400, %r7399, 18;
	shf.r.wrap.b32 	%r7404, %r7399, %r7400, 18;
	mov.b64 	%rd11054, {%r7404, %r7403};
	xor.b64  	%rd11055, %rd11054, %rd11053;
	shf.l.wrap.b32 	%r7405, %r7399, %r7400, 23;
	shf.l.wrap.b32 	%r7406, %r7400, %r7399, 23;
	mov.b64 	%rd11056, {%r7406, %r7405};
	xor.b64  	%rd11057, %rd11055, %rd11056;
	xor.b64  	%rd11058, %rd11017, %rd18509;
	and.b64  	%rd11059, %rd11041, %rd11058;
	xor.b64  	%rd11060, %rd11059, %rd18509;
	add.s64 	%rd11061, %rd18508, %rd18336;
	add.s64 	%rd11062, %rd11061, %rd18547;
	add.s64 	%rd11063, %rd11062, %rd11060;
	add.s64 	%rd11064, %rd11063, %rd11057;
	add.s64 	%rd11065, %rd11064, %rd18512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7407,%dummy}, %rd11052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7408}, %rd11052;
	}
	shf.r.wrap.b32 	%r7409, %r7408, %r7407, 28;
	shf.r.wrap.b32 	%r7410, %r7407, %r7408, 28;
	mov.b64 	%rd11066, {%r7410, %r7409};
	shf.l.wrap.b32 	%r7411, %r7407, %r7408, 30;
	shf.l.wrap.b32 	%r7412, %r7408, %r7407, 30;
	mov.b64 	%rd11067, {%r7412, %r7411};
	xor.b64  	%rd11068, %rd11067, %rd11066;
	shf.l.wrap.b32 	%r7413, %r7407, %r7408, 25;
	shf.l.wrap.b32 	%r7414, %r7408, %r7407, 25;
	mov.b64 	%rd11069, {%r7414, %r7413};
	xor.b64  	%rd11070, %rd11068, %rd11069;
	and.b64  	%rd11071, %rd11052, %rd11028;
	xor.b64  	%rd11072, %rd11052, %rd11028;
	and.b64  	%rd11073, %rd11072, %rd18513;
	or.b64  	%rd11074, %rd11073, %rd11071;
	add.s64 	%rd11075, %rd11064, %rd11074;
	add.s64 	%rd11076, %rd11075, %rd11070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7415,%dummy}, %rd11065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7416}, %rd11065;
	}
	shf.r.wrap.b32 	%r7417, %r7416, %r7415, 14;
	shf.r.wrap.b32 	%r7418, %r7415, %r7416, 14;
	mov.b64 	%rd11077, {%r7418, %r7417};
	shf.r.wrap.b32 	%r7419, %r7416, %r7415, 18;
	shf.r.wrap.b32 	%r7420, %r7415, %r7416, 18;
	mov.b64 	%rd11078, {%r7420, %r7419};
	xor.b64  	%rd11079, %rd11078, %rd11077;
	shf.l.wrap.b32 	%r7421, %r7415, %r7416, 23;
	shf.l.wrap.b32 	%r7422, %r7416, %r7415, 23;
	mov.b64 	%rd11080, {%r7422, %r7421};
	xor.b64  	%rd11081, %rd11079, %rd11080;
	xor.b64  	%rd11082, %rd11041, %rd11017;
	and.b64  	%rd11083, %rd11065, %rd11082;
	xor.b64  	%rd11084, %rd11083, %rd11017;
	add.s64 	%rd11085, %rd18509, %rd18335;
	add.s64 	%rd11086, %rd11085, %rd18548;
	add.s64 	%rd11087, %rd11086, %rd11084;
	add.s64 	%rd11088, %rd11087, %rd11081;
	add.s64 	%rd11089, %rd11088, %rd18513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7423,%dummy}, %rd11076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7424}, %rd11076;
	}
	shf.r.wrap.b32 	%r7425, %r7424, %r7423, 28;
	shf.r.wrap.b32 	%r7426, %r7423, %r7424, 28;
	mov.b64 	%rd11090, {%r7426, %r7425};
	shf.l.wrap.b32 	%r7427, %r7423, %r7424, 30;
	shf.l.wrap.b32 	%r7428, %r7424, %r7423, 30;
	mov.b64 	%rd11091, {%r7428, %r7427};
	xor.b64  	%rd11092, %rd11091, %rd11090;
	shf.l.wrap.b32 	%r7429, %r7423, %r7424, 25;
	shf.l.wrap.b32 	%r7430, %r7424, %r7423, 25;
	mov.b64 	%rd11093, {%r7430, %r7429};
	xor.b64  	%rd11094, %rd11092, %rd11093;
	and.b64  	%rd11095, %rd11076, %rd11052;
	xor.b64  	%rd11096, %rd11076, %rd11052;
	and.b64  	%rd11097, %rd11096, %rd11028;
	or.b64  	%rd11098, %rd11097, %rd11095;
	add.s64 	%rd11099, %rd11088, %rd11098;
	add.s64 	%rd11100, %rd11099, %rd11094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7431,%dummy}, %rd11089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7432}, %rd11089;
	}
	shf.r.wrap.b32 	%r7433, %r7432, %r7431, 14;
	shf.r.wrap.b32 	%r7434, %r7431, %r7432, 14;
	mov.b64 	%rd11101, {%r7434, %r7433};
	shf.r.wrap.b32 	%r7435, %r7432, %r7431, 18;
	shf.r.wrap.b32 	%r7436, %r7431, %r7432, 18;
	mov.b64 	%rd11102, {%r7436, %r7435};
	xor.b64  	%rd11103, %rd11102, %rd11101;
	shf.l.wrap.b32 	%r7437, %r7431, %r7432, 23;
	shf.l.wrap.b32 	%r7438, %r7432, %r7431, 23;
	mov.b64 	%rd11104, {%r7438, %r7437};
	xor.b64  	%rd11105, %rd11103, %rd11104;
	xor.b64  	%rd11106, %rd11065, %rd11041;
	and.b64  	%rd11107, %rd11089, %rd11106;
	xor.b64  	%rd11108, %rd11107, %rd11041;
	add.s64 	%rd11109, %rd18549, %rd18334;
	add.s64 	%rd11110, %rd11109, %rd11017;
	add.s64 	%rd11111, %rd11110, %rd11108;
	add.s64 	%rd11112, %rd11111, %rd11105;
	add.s64 	%rd11113, %rd11112, %rd11028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7439,%dummy}, %rd11100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7440}, %rd11100;
	}
	shf.r.wrap.b32 	%r7441, %r7440, %r7439, 28;
	shf.r.wrap.b32 	%r7442, %r7439, %r7440, 28;
	mov.b64 	%rd11114, {%r7442, %r7441};
	shf.l.wrap.b32 	%r7443, %r7439, %r7440, 30;
	shf.l.wrap.b32 	%r7444, %r7440, %r7439, 30;
	mov.b64 	%rd11115, {%r7444, %r7443};
	xor.b64  	%rd11116, %rd11115, %rd11114;
	shf.l.wrap.b32 	%r7445, %r7439, %r7440, 25;
	shf.l.wrap.b32 	%r7446, %r7440, %r7439, 25;
	mov.b64 	%rd11117, {%r7446, %r7445};
	xor.b64  	%rd11118, %rd11116, %rd11117;
	and.b64  	%rd11119, %rd11100, %rd11076;
	xor.b64  	%rd11120, %rd11100, %rd11076;
	and.b64  	%rd11121, %rd11120, %rd11052;
	or.b64  	%rd11122, %rd11121, %rd11119;
	add.s64 	%rd11123, %rd11112, %rd11122;
	add.s64 	%rd11124, %rd11123, %rd11118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7447,%dummy}, %rd11113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7448}, %rd11113;
	}
	shf.r.wrap.b32 	%r7449, %r7448, %r7447, 14;
	shf.r.wrap.b32 	%r7450, %r7447, %r7448, 14;
	mov.b64 	%rd11125, {%r7450, %r7449};
	shf.r.wrap.b32 	%r7451, %r7448, %r7447, 18;
	shf.r.wrap.b32 	%r7452, %r7447, %r7448, 18;
	mov.b64 	%rd11126, {%r7452, %r7451};
	xor.b64  	%rd11127, %rd11126, %rd11125;
	shf.l.wrap.b32 	%r7453, %r7447, %r7448, 23;
	shf.l.wrap.b32 	%r7454, %r7448, %r7447, 23;
	mov.b64 	%rd11128, {%r7454, %r7453};
	xor.b64  	%rd11129, %rd11127, %rd11128;
	xor.b64  	%rd11130, %rd11089, %rd11065;
	and.b64  	%rd11131, %rd11113, %rd11130;
	xor.b64  	%rd11132, %rd11131, %rd11065;
	add.s64 	%rd11133, %rd18550, %rd18333;
	add.s64 	%rd11134, %rd11133, %rd11041;
	add.s64 	%rd11135, %rd11134, %rd11132;
	add.s64 	%rd11136, %rd11135, %rd11129;
	add.s64 	%rd11137, %rd11136, %rd11052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7455,%dummy}, %rd11124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7456}, %rd11124;
	}
	shf.r.wrap.b32 	%r7457, %r7456, %r7455, 28;
	shf.r.wrap.b32 	%r7458, %r7455, %r7456, 28;
	mov.b64 	%rd11138, {%r7458, %r7457};
	shf.l.wrap.b32 	%r7459, %r7455, %r7456, 30;
	shf.l.wrap.b32 	%r7460, %r7456, %r7455, 30;
	mov.b64 	%rd11139, {%r7460, %r7459};
	xor.b64  	%rd11140, %rd11139, %rd11138;
	shf.l.wrap.b32 	%r7461, %r7455, %r7456, 25;
	shf.l.wrap.b32 	%r7462, %r7456, %r7455, 25;
	mov.b64 	%rd11141, {%r7462, %r7461};
	xor.b64  	%rd11142, %rd11140, %rd11141;
	and.b64  	%rd11143, %rd11124, %rd11100;
	xor.b64  	%rd11144, %rd11124, %rd11100;
	and.b64  	%rd11145, %rd11144, %rd11076;
	or.b64  	%rd11146, %rd11145, %rd11143;
	add.s64 	%rd11147, %rd11136, %rd11146;
	add.s64 	%rd11148, %rd11147, %rd11142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7463,%dummy}, %rd11137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7464}, %rd11137;
	}
	shf.r.wrap.b32 	%r7465, %r7464, %r7463, 14;
	shf.r.wrap.b32 	%r7466, %r7463, %r7464, 14;
	mov.b64 	%rd11149, {%r7466, %r7465};
	shf.r.wrap.b32 	%r7467, %r7464, %r7463, 18;
	shf.r.wrap.b32 	%r7468, %r7463, %r7464, 18;
	mov.b64 	%rd11150, {%r7468, %r7467};
	xor.b64  	%rd11151, %rd11150, %rd11149;
	shf.l.wrap.b32 	%r7469, %r7463, %r7464, 23;
	shf.l.wrap.b32 	%r7470, %r7464, %r7463, 23;
	mov.b64 	%rd11152, {%r7470, %r7469};
	xor.b64  	%rd11153, %rd11151, %rd11152;
	xor.b64  	%rd11154, %rd11113, %rd11089;
	and.b64  	%rd11155, %rd11137, %rd11154;
	xor.b64  	%rd11156, %rd11155, %rd11089;
	add.s64 	%rd11157, %rd18551, %rd18332;
	add.s64 	%rd11158, %rd11157, %rd11065;
	add.s64 	%rd11159, %rd11158, %rd11156;
	add.s64 	%rd11160, %rd11159, %rd11153;
	add.s64 	%rd11161, %rd11160, %rd11076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7471,%dummy}, %rd11148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7472}, %rd11148;
	}
	shf.r.wrap.b32 	%r7473, %r7472, %r7471, 28;
	shf.r.wrap.b32 	%r7474, %r7471, %r7472, 28;
	mov.b64 	%rd11162, {%r7474, %r7473};
	shf.l.wrap.b32 	%r7475, %r7471, %r7472, 30;
	shf.l.wrap.b32 	%r7476, %r7472, %r7471, 30;
	mov.b64 	%rd11163, {%r7476, %r7475};
	xor.b64  	%rd11164, %rd11163, %rd11162;
	shf.l.wrap.b32 	%r7477, %r7471, %r7472, 25;
	shf.l.wrap.b32 	%r7478, %r7472, %r7471, 25;
	mov.b64 	%rd11165, {%r7478, %r7477};
	xor.b64  	%rd11166, %rd11164, %rd11165;
	and.b64  	%rd11167, %rd11148, %rd11124;
	xor.b64  	%rd11168, %rd11148, %rd11124;
	and.b64  	%rd11169, %rd11168, %rd11100;
	or.b64  	%rd11170, %rd11169, %rd11167;
	add.s64 	%rd11171, %rd11160, %rd11170;
	add.s64 	%rd11172, %rd11171, %rd11166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7479,%dummy}, %rd11161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7480}, %rd11161;
	}
	shf.r.wrap.b32 	%r7481, %r7480, %r7479, 14;
	shf.r.wrap.b32 	%r7482, %r7479, %r7480, 14;
	mov.b64 	%rd11173, {%r7482, %r7481};
	shf.r.wrap.b32 	%r7483, %r7480, %r7479, 18;
	shf.r.wrap.b32 	%r7484, %r7479, %r7480, 18;
	mov.b64 	%rd11174, {%r7484, %r7483};
	xor.b64  	%rd11175, %rd11174, %rd11173;
	shf.l.wrap.b32 	%r7485, %r7479, %r7480, 23;
	shf.l.wrap.b32 	%r7486, %r7480, %r7479, 23;
	mov.b64 	%rd11176, {%r7486, %r7485};
	xor.b64  	%rd11177, %rd11175, %rd11176;
	xor.b64  	%rd11178, %rd11137, %rd11113;
	and.b64  	%rd11179, %rd11161, %rd11178;
	xor.b64  	%rd11180, %rd11179, %rd11113;
	add.s64 	%rd11181, %rd18552, %rd18331;
	add.s64 	%rd11182, %rd11181, %rd11089;
	add.s64 	%rd11183, %rd11182, %rd11180;
	add.s64 	%rd11184, %rd11183, %rd11177;
	add.s64 	%rd11185, %rd11184, %rd11100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7487,%dummy}, %rd11172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7488}, %rd11172;
	}
	shf.r.wrap.b32 	%r7489, %r7488, %r7487, 28;
	shf.r.wrap.b32 	%r7490, %r7487, %r7488, 28;
	mov.b64 	%rd11186, {%r7490, %r7489};
	shf.l.wrap.b32 	%r7491, %r7487, %r7488, 30;
	shf.l.wrap.b32 	%r7492, %r7488, %r7487, 30;
	mov.b64 	%rd11187, {%r7492, %r7491};
	xor.b64  	%rd11188, %rd11187, %rd11186;
	shf.l.wrap.b32 	%r7493, %r7487, %r7488, 25;
	shf.l.wrap.b32 	%r7494, %r7488, %r7487, 25;
	mov.b64 	%rd11189, {%r7494, %r7493};
	xor.b64  	%rd11190, %rd11188, %rd11189;
	and.b64  	%rd11191, %rd11172, %rd11148;
	xor.b64  	%rd11192, %rd11172, %rd11148;
	and.b64  	%rd11193, %rd11192, %rd11124;
	or.b64  	%rd11194, %rd11193, %rd11191;
	add.s64 	%rd11195, %rd11184, %rd11194;
	add.s64 	%rd11196, %rd11195, %rd11190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7495,%dummy}, %rd11185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7496}, %rd11185;
	}
	shf.r.wrap.b32 	%r7497, %r7496, %r7495, 14;
	shf.r.wrap.b32 	%r7498, %r7495, %r7496, 14;
	mov.b64 	%rd11197, {%r7498, %r7497};
	shf.r.wrap.b32 	%r7499, %r7496, %r7495, 18;
	shf.r.wrap.b32 	%r7500, %r7495, %r7496, 18;
	mov.b64 	%rd11198, {%r7500, %r7499};
	xor.b64  	%rd11199, %rd11198, %rd11197;
	shf.l.wrap.b32 	%r7501, %r7495, %r7496, 23;
	shf.l.wrap.b32 	%r7502, %r7496, %r7495, 23;
	mov.b64 	%rd11200, {%r7502, %r7501};
	xor.b64  	%rd11201, %rd11199, %rd11200;
	xor.b64  	%rd11202, %rd11161, %rd11137;
	and.b64  	%rd11203, %rd11185, %rd11202;
	xor.b64  	%rd11204, %rd11203, %rd11137;
	add.s64 	%rd11205, %rd18536, %rd18330;
	add.s64 	%rd11206, %rd11205, %rd11113;
	add.s64 	%rd11207, %rd11206, %rd11204;
	add.s64 	%rd11208, %rd11207, %rd11201;
	add.s64 	%rd11209, %rd11208, %rd11124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7503,%dummy}, %rd11196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7504}, %rd11196;
	}
	shf.r.wrap.b32 	%r7505, %r7504, %r7503, 28;
	shf.r.wrap.b32 	%r7506, %r7503, %r7504, 28;
	mov.b64 	%rd11210, {%r7506, %r7505};
	shf.l.wrap.b32 	%r7507, %r7503, %r7504, 30;
	shf.l.wrap.b32 	%r7508, %r7504, %r7503, 30;
	mov.b64 	%rd11211, {%r7508, %r7507};
	xor.b64  	%rd11212, %rd11211, %rd11210;
	shf.l.wrap.b32 	%r7509, %r7503, %r7504, 25;
	shf.l.wrap.b32 	%r7510, %r7504, %r7503, 25;
	mov.b64 	%rd11213, {%r7510, %r7509};
	xor.b64  	%rd11214, %rd11212, %rd11213;
	and.b64  	%rd11215, %rd11196, %rd11172;
	xor.b64  	%rd11216, %rd11196, %rd11172;
	and.b64  	%rd11217, %rd11216, %rd11148;
	or.b64  	%rd11218, %rd11217, %rd11215;
	add.s64 	%rd11219, %rd11208, %rd11218;
	add.s64 	%rd11220, %rd11219, %rd11214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7511,%dummy}, %rd11209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7512}, %rd11209;
	}
	shf.r.wrap.b32 	%r7513, %r7512, %r7511, 14;
	shf.r.wrap.b32 	%r7514, %r7511, %r7512, 14;
	mov.b64 	%rd11221, {%r7514, %r7513};
	shf.r.wrap.b32 	%r7515, %r7512, %r7511, 18;
	shf.r.wrap.b32 	%r7516, %r7511, %r7512, 18;
	mov.b64 	%rd11222, {%r7516, %r7515};
	xor.b64  	%rd11223, %rd11222, %rd11221;
	shf.l.wrap.b32 	%r7517, %r7511, %r7512, 23;
	shf.l.wrap.b32 	%r7518, %r7512, %r7511, 23;
	mov.b64 	%rd11224, {%r7518, %r7517};
	xor.b64  	%rd11225, %rd11223, %rd11224;
	xor.b64  	%rd11226, %rd11185, %rd11161;
	and.b64  	%rd11227, %rd11209, %rd11226;
	xor.b64  	%rd11228, %rd11227, %rd11161;
	add.s64 	%rd11229, %rd18535, %rd18329;
	add.s64 	%rd11230, %rd11229, %rd11137;
	add.s64 	%rd11231, %rd11230, %rd11228;
	add.s64 	%rd11232, %rd11231, %rd11225;
	add.s64 	%rd11233, %rd11232, %rd11148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7519,%dummy}, %rd11220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7520}, %rd11220;
	}
	shf.r.wrap.b32 	%r7521, %r7520, %r7519, 28;
	shf.r.wrap.b32 	%r7522, %r7519, %r7520, 28;
	mov.b64 	%rd11234, {%r7522, %r7521};
	shf.l.wrap.b32 	%r7523, %r7519, %r7520, 30;
	shf.l.wrap.b32 	%r7524, %r7520, %r7519, 30;
	mov.b64 	%rd11235, {%r7524, %r7523};
	xor.b64  	%rd11236, %rd11235, %rd11234;
	shf.l.wrap.b32 	%r7525, %r7519, %r7520, 25;
	shf.l.wrap.b32 	%r7526, %r7520, %r7519, 25;
	mov.b64 	%rd11237, {%r7526, %r7525};
	xor.b64  	%rd11238, %rd11236, %rd11237;
	and.b64  	%rd11239, %rd11220, %rd11196;
	xor.b64  	%rd11240, %rd11220, %rd11196;
	and.b64  	%rd11241, %rd11240, %rd11172;
	or.b64  	%rd11242, %rd11241, %rd11239;
	add.s64 	%rd11243, %rd11232, %rd11242;
	add.s64 	%rd11244, %rd11243, %rd11238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7527,%dummy}, %rd11233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7528}, %rd11233;
	}
	shf.r.wrap.b32 	%r7529, %r7528, %r7527, 14;
	shf.r.wrap.b32 	%r7530, %r7527, %r7528, 14;
	mov.b64 	%rd11245, {%r7530, %r7529};
	shf.r.wrap.b32 	%r7531, %r7528, %r7527, 18;
	shf.r.wrap.b32 	%r7532, %r7527, %r7528, 18;
	mov.b64 	%rd11246, {%r7532, %r7531};
	xor.b64  	%rd11247, %rd11246, %rd11245;
	shf.l.wrap.b32 	%r7533, %r7527, %r7528, 23;
	shf.l.wrap.b32 	%r7534, %r7528, %r7527, 23;
	mov.b64 	%rd11248, {%r7534, %r7533};
	xor.b64  	%rd11249, %rd11247, %rd11248;
	xor.b64  	%rd11250, %rd11209, %rd11185;
	and.b64  	%rd11251, %rd11233, %rd11250;
	xor.b64  	%rd11252, %rd11251, %rd11185;
	add.s64 	%rd11253, %rd18534, %rd18328;
	add.s64 	%rd11254, %rd11253, %rd11161;
	add.s64 	%rd11255, %rd11254, %rd11252;
	add.s64 	%rd11256, %rd11255, %rd11249;
	add.s64 	%rd11257, %rd11256, %rd11172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7535,%dummy}, %rd11244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7536}, %rd11244;
	}
	shf.r.wrap.b32 	%r7537, %r7536, %r7535, 28;
	shf.r.wrap.b32 	%r7538, %r7535, %r7536, 28;
	mov.b64 	%rd11258, {%r7538, %r7537};
	shf.l.wrap.b32 	%r7539, %r7535, %r7536, 30;
	shf.l.wrap.b32 	%r7540, %r7536, %r7535, 30;
	mov.b64 	%rd11259, {%r7540, %r7539};
	xor.b64  	%rd11260, %rd11259, %rd11258;
	shf.l.wrap.b32 	%r7541, %r7535, %r7536, 25;
	shf.l.wrap.b32 	%r7542, %r7536, %r7535, 25;
	mov.b64 	%rd11261, {%r7542, %r7541};
	xor.b64  	%rd11262, %rd11260, %rd11261;
	and.b64  	%rd11263, %rd11244, %rd11220;
	xor.b64  	%rd11264, %rd11244, %rd11220;
	and.b64  	%rd11265, %rd11264, %rd11196;
	or.b64  	%rd11266, %rd11265, %rd11263;
	add.s64 	%rd11267, %rd11256, %rd11266;
	add.s64 	%rd11268, %rd11267, %rd11262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7543,%dummy}, %rd11257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7544}, %rd11257;
	}
	shf.r.wrap.b32 	%r7545, %r7544, %r7543, 14;
	shf.r.wrap.b32 	%r7546, %r7543, %r7544, 14;
	mov.b64 	%rd11269, {%r7546, %r7545};
	shf.r.wrap.b32 	%r7547, %r7544, %r7543, 18;
	shf.r.wrap.b32 	%r7548, %r7543, %r7544, 18;
	mov.b64 	%rd11270, {%r7548, %r7547};
	xor.b64  	%rd11271, %rd11270, %rd11269;
	shf.l.wrap.b32 	%r7549, %r7543, %r7544, 23;
	shf.l.wrap.b32 	%r7550, %r7544, %r7543, 23;
	mov.b64 	%rd11272, {%r7550, %r7549};
	xor.b64  	%rd11273, %rd11271, %rd11272;
	xor.b64  	%rd11274, %rd11233, %rd11209;
	and.b64  	%rd11275, %rd11257, %rd11274;
	xor.b64  	%rd11276, %rd11275, %rd11209;
	add.s64 	%rd11277, %rd18533, %rd18327;
	add.s64 	%rd11278, %rd11277, %rd11185;
	add.s64 	%rd11279, %rd11278, %rd11276;
	add.s64 	%rd11280, %rd11279, %rd11273;
	add.s64 	%rd11281, %rd11280, %rd11196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7551,%dummy}, %rd11268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7552}, %rd11268;
	}
	shf.r.wrap.b32 	%r7553, %r7552, %r7551, 28;
	shf.r.wrap.b32 	%r7554, %r7551, %r7552, 28;
	mov.b64 	%rd11282, {%r7554, %r7553};
	shf.l.wrap.b32 	%r7555, %r7551, %r7552, 30;
	shf.l.wrap.b32 	%r7556, %r7552, %r7551, 30;
	mov.b64 	%rd11283, {%r7556, %r7555};
	xor.b64  	%rd11284, %rd11283, %rd11282;
	shf.l.wrap.b32 	%r7557, %r7551, %r7552, 25;
	shf.l.wrap.b32 	%r7558, %r7552, %r7551, 25;
	mov.b64 	%rd11285, {%r7558, %r7557};
	xor.b64  	%rd11286, %rd11284, %rd11285;
	and.b64  	%rd11287, %rd11268, %rd11244;
	xor.b64  	%rd11288, %rd11268, %rd11244;
	and.b64  	%rd11289, %rd11288, %rd11220;
	or.b64  	%rd11290, %rd11289, %rd11287;
	add.s64 	%rd11291, %rd11280, %rd11290;
	add.s64 	%rd11292, %rd11291, %rd11286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7559,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7560}, %rd11281;
	}
	shf.r.wrap.b32 	%r7561, %r7560, %r7559, 14;
	shf.r.wrap.b32 	%r7562, %r7559, %r7560, 14;
	mov.b64 	%rd11293, {%r7562, %r7561};
	shf.r.wrap.b32 	%r7563, %r7560, %r7559, 18;
	shf.r.wrap.b32 	%r7564, %r7559, %r7560, 18;
	mov.b64 	%rd11294, {%r7564, %r7563};
	xor.b64  	%rd11295, %rd11294, %rd11293;
	shf.l.wrap.b32 	%r7565, %r7559, %r7560, 23;
	shf.l.wrap.b32 	%r7566, %r7560, %r7559, 23;
	mov.b64 	%rd11296, {%r7566, %r7565};
	xor.b64  	%rd11297, %rd11295, %rd11296;
	xor.b64  	%rd11298, %rd11257, %rd11233;
	and.b64  	%rd11299, %rd11281, %rd11298;
	xor.b64  	%rd11300, %rd11299, %rd11233;
	add.s64 	%rd11301, %rd18532, %rd18326;
	add.s64 	%rd11302, %rd11301, %rd11209;
	add.s64 	%rd11303, %rd11302, %rd11300;
	add.s64 	%rd11304, %rd11303, %rd11297;
	add.s64 	%rd18544, %rd11304, %rd11220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7567,%dummy}, %rd11292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7568}, %rd11292;
	}
	shf.r.wrap.b32 	%r7569, %r7568, %r7567, 28;
	shf.r.wrap.b32 	%r7570, %r7567, %r7568, 28;
	mov.b64 	%rd11305, {%r7570, %r7569};
	shf.l.wrap.b32 	%r7571, %r7567, %r7568, 30;
	shf.l.wrap.b32 	%r7572, %r7568, %r7567, 30;
	mov.b64 	%rd11306, {%r7572, %r7571};
	xor.b64  	%rd11307, %rd11306, %rd11305;
	shf.l.wrap.b32 	%r7573, %r7567, %r7568, 25;
	shf.l.wrap.b32 	%r7574, %r7568, %r7567, 25;
	mov.b64 	%rd11308, {%r7574, %r7573};
	xor.b64  	%rd11309, %rd11307, %rd11308;
	and.b64  	%rd11310, %rd11292, %rd11268;
	xor.b64  	%rd11311, %rd11292, %rd11268;
	and.b64  	%rd11312, %rd11311, %rd11244;
	or.b64  	%rd11313, %rd11312, %rd11310;
	add.s64 	%rd11314, %rd11304, %rd11313;
	add.s64 	%rd18540, %rd11314, %rd11309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7575,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7576}, %rd18544;
	}
	shf.r.wrap.b32 	%r7577, %r7576, %r7575, 14;
	shf.r.wrap.b32 	%r7578, %r7575, %r7576, 14;
	mov.b64 	%rd11315, {%r7578, %r7577};
	shf.r.wrap.b32 	%r7579, %r7576, %r7575, 18;
	shf.r.wrap.b32 	%r7580, %r7575, %r7576, 18;
	mov.b64 	%rd11316, {%r7580, %r7579};
	xor.b64  	%rd11317, %rd11316, %rd11315;
	shf.l.wrap.b32 	%r7581, %r7575, %r7576, 23;
	shf.l.wrap.b32 	%r7582, %r7576, %r7575, 23;
	mov.b64 	%rd11318, {%r7582, %r7581};
	xor.b64  	%rd11319, %rd11317, %rd11318;
	xor.b64  	%rd11320, %rd11281, %rd11257;
	and.b64  	%rd11321, %rd18544, %rd11320;
	xor.b64  	%rd11322, %rd11321, %rd11257;
	add.s64 	%rd11323, %rd18531, %rd18325;
	add.s64 	%rd11324, %rd11323, %rd11233;
	add.s64 	%rd11325, %rd11324, %rd11322;
	add.s64 	%rd11326, %rd11325, %rd11319;
	add.s64 	%rd18543, %rd11326, %rd11244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7583,%dummy}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7584}, %rd18540;
	}
	shf.r.wrap.b32 	%r7585, %r7584, %r7583, 28;
	shf.r.wrap.b32 	%r7586, %r7583, %r7584, 28;
	mov.b64 	%rd11327, {%r7586, %r7585};
	shf.l.wrap.b32 	%r7587, %r7583, %r7584, 30;
	shf.l.wrap.b32 	%r7588, %r7584, %r7583, 30;
	mov.b64 	%rd11328, {%r7588, %r7587};
	xor.b64  	%rd11329, %rd11328, %rd11327;
	shf.l.wrap.b32 	%r7589, %r7583, %r7584, 25;
	shf.l.wrap.b32 	%r7590, %r7584, %r7583, 25;
	mov.b64 	%rd11330, {%r7590, %r7589};
	xor.b64  	%rd11331, %rd11329, %rd11330;
	and.b64  	%rd11332, %rd18540, %rd11292;
	xor.b64  	%rd11333, %rd18540, %rd11292;
	and.b64  	%rd11334, %rd11333, %rd11268;
	or.b64  	%rd11335, %rd11334, %rd11332;
	add.s64 	%rd11336, %rd11326, %rd11335;
	add.s64 	%rd18539, %rd11336, %rd11331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7591,%dummy}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7592}, %rd18543;
	}
	shf.r.wrap.b32 	%r7593, %r7592, %r7591, 14;
	shf.r.wrap.b32 	%r7594, %r7591, %r7592, 14;
	mov.b64 	%rd11337, {%r7594, %r7593};
	shf.r.wrap.b32 	%r7595, %r7592, %r7591, 18;
	shf.r.wrap.b32 	%r7596, %r7591, %r7592, 18;
	mov.b64 	%rd11338, {%r7596, %r7595};
	xor.b64  	%rd11339, %rd11338, %rd11337;
	shf.l.wrap.b32 	%r7597, %r7591, %r7592, 23;
	shf.l.wrap.b32 	%r7598, %r7592, %r7591, 23;
	mov.b64 	%rd11340, {%r7598, %r7597};
	xor.b64  	%rd11341, %rd11339, %rd11340;
	xor.b64  	%rd11342, %rd18544, %rd11281;
	and.b64  	%rd11343, %rd18543, %rd11342;
	xor.b64  	%rd11344, %rd11343, %rd11281;
	add.s64 	%rd11345, %rd18530, %rd18324;
	add.s64 	%rd11346, %rd11345, %rd11257;
	add.s64 	%rd11347, %rd11346, %rd11344;
	add.s64 	%rd11348, %rd11347, %rd11341;
	add.s64 	%rd18542, %rd11348, %rd11268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7599,%dummy}, %rd18539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7600}, %rd18539;
	}
	shf.r.wrap.b32 	%r7601, %r7600, %r7599, 28;
	shf.r.wrap.b32 	%r7602, %r7599, %r7600, 28;
	mov.b64 	%rd11349, {%r7602, %r7601};
	shf.l.wrap.b32 	%r7603, %r7599, %r7600, 30;
	shf.l.wrap.b32 	%r7604, %r7600, %r7599, 30;
	mov.b64 	%rd11350, {%r7604, %r7603};
	xor.b64  	%rd11351, %rd11350, %rd11349;
	shf.l.wrap.b32 	%r7605, %r7599, %r7600, 25;
	shf.l.wrap.b32 	%r7606, %r7600, %r7599, 25;
	mov.b64 	%rd11352, {%r7606, %r7605};
	xor.b64  	%rd11353, %rd11351, %rd11352;
	and.b64  	%rd11354, %rd18539, %rd18540;
	xor.b64  	%rd11355, %rd18539, %rd18540;
	and.b64  	%rd11356, %rd11355, %rd11292;
	or.b64  	%rd11357, %rd11356, %rd11354;
	add.s64 	%rd11358, %rd11348, %rd11357;
	add.s64 	%rd18538, %rd11358, %rd11353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7607,%dummy}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7608}, %rd18542;
	}
	shf.r.wrap.b32 	%r7609, %r7608, %r7607, 14;
	shf.r.wrap.b32 	%r7610, %r7607, %r7608, 14;
	mov.b64 	%rd11359, {%r7610, %r7609};
	shf.r.wrap.b32 	%r7611, %r7608, %r7607, 18;
	shf.r.wrap.b32 	%r7612, %r7607, %r7608, 18;
	mov.b64 	%rd11360, {%r7612, %r7611};
	xor.b64  	%rd11361, %rd11360, %rd11359;
	shf.l.wrap.b32 	%r7613, %r7607, %r7608, 23;
	shf.l.wrap.b32 	%r7614, %r7608, %r7607, 23;
	mov.b64 	%rd11362, {%r7614, %r7613};
	xor.b64  	%rd11363, %rd11361, %rd11362;
	xor.b64  	%rd11364, %rd18543, %rd18544;
	and.b64  	%rd11365, %rd18542, %rd11364;
	xor.b64  	%rd11366, %rd11365, %rd18544;
	add.s64 	%rd11367, %rd18529, %rd18323;
	add.s64 	%rd11368, %rd11367, %rd11281;
	add.s64 	%rd11369, %rd11368, %rd11366;
	add.s64 	%rd11370, %rd11369, %rd11363;
	add.s64 	%rd18541, %rd11370, %rd11292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7615,%dummy}, %rd18538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7616}, %rd18538;
	}
	shf.r.wrap.b32 	%r7617, %r7616, %r7615, 28;
	shf.r.wrap.b32 	%r7618, %r7615, %r7616, 28;
	mov.b64 	%rd11371, {%r7618, %r7617};
	shf.l.wrap.b32 	%r7619, %r7615, %r7616, 30;
	shf.l.wrap.b32 	%r7620, %r7616, %r7615, 30;
	mov.b64 	%rd11372, {%r7620, %r7619};
	xor.b64  	%rd11373, %rd11372, %rd11371;
	shf.l.wrap.b32 	%r7621, %r7615, %r7616, 25;
	shf.l.wrap.b32 	%r7622, %r7616, %r7615, 25;
	mov.b64 	%rd11374, {%r7622, %r7621};
	xor.b64  	%rd11375, %rd11373, %rd11374;
	and.b64  	%rd11376, %rd18538, %rd18539;
	xor.b64  	%rd11377, %rd18538, %rd18539;
	and.b64  	%rd11378, %rd11377, %rd18540;
	or.b64  	%rd11379, %rd11378, %rd11376;
	add.s64 	%rd11380, %rd11370, %rd11379;
	add.s64 	%rd18537, %rd11380, %rd11375;
	mov.u32 	%r12660, 16;

BB0_184:
	mov.u64 	%rd18237, k_sha512;
	shr.u64 	%rd11381, %rd18530, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7623,%dummy}, %rd18530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7624}, %rd18530;
	}
	shf.r.wrap.b32 	%r7625, %r7624, %r7623, 19;
	shf.r.wrap.b32 	%r7626, %r7623, %r7624, 19;
	mov.b64 	%rd11382, {%r7626, %r7625};
	xor.b64  	%rd11383, %rd11382, %rd11381;
	shf.l.wrap.b32 	%r7627, %r7623, %r7624, 3;
	shf.l.wrap.b32 	%r7628, %r7624, %r7623, 3;
	mov.b64 	%rd11384, {%r7628, %r7627};
	xor.b64  	%rd11385, %rd11383, %rd11384;
	shr.u64 	%rd11386, %rd18546, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7629,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7630}, %rd18546;
	}
	shf.r.wrap.b32 	%r7631, %r7630, %r7629, 1;
	shf.r.wrap.b32 	%r7632, %r7629, %r7630, 1;
	mov.b64 	%rd11387, {%r7632, %r7631};
	xor.b64  	%rd11388, %rd11387, %rd11386;
	shf.r.wrap.b32 	%r7633, %r7630, %r7629, 8;
	shf.r.wrap.b32 	%r7634, %r7629, %r7630, 8;
	mov.b64 	%rd11389, {%r7634, %r7633};
	xor.b64  	%rd11390, %rd11388, %rd11389;
	add.s64 	%rd11391, %rd18545, %rd18535;
	add.s64 	%rd11392, %rd11391, %rd11385;
	add.s64 	%rd18545, %rd11392, %rd11390;
	shr.u64 	%rd11393, %rd18529, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7635,%dummy}, %rd18529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7636}, %rd18529;
	}
	shf.r.wrap.b32 	%r7637, %r7636, %r7635, 19;
	shf.r.wrap.b32 	%r7638, %r7635, %r7636, 19;
	mov.b64 	%rd11394, {%r7638, %r7637};
	xor.b64  	%rd11395, %rd11394, %rd11393;
	shf.l.wrap.b32 	%r7639, %r7635, %r7636, 3;
	shf.l.wrap.b32 	%r7640, %r7636, %r7635, 3;
	mov.b64 	%rd11396, {%r7640, %r7639};
	xor.b64  	%rd11397, %rd11395, %rd11396;
	shr.u64 	%rd11398, %rd18547, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7641,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7642}, %rd18547;
	}
	shf.r.wrap.b32 	%r7643, %r7642, %r7641, 1;
	shf.r.wrap.b32 	%r7644, %r7641, %r7642, 1;
	mov.b64 	%rd11399, {%r7644, %r7643};
	xor.b64  	%rd11400, %rd11399, %rd11398;
	shf.r.wrap.b32 	%r7645, %r7642, %r7641, 8;
	shf.r.wrap.b32 	%r7646, %r7641, %r7642, 8;
	mov.b64 	%rd11401, {%r7646, %r7645};
	xor.b64  	%rd11402, %rd11400, %rd11401;
	add.s64 	%rd11403, %rd18546, %rd18534;
	add.s64 	%rd11404, %rd11403, %rd11397;
	add.s64 	%rd18546, %rd11404, %rd11402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7647,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7648}, %rd18545;
	}
	shf.r.wrap.b32 	%r7649, %r7648, %r7647, 19;
	shf.r.wrap.b32 	%r7650, %r7647, %r7648, 19;
	mov.b64 	%rd11405, {%r7650, %r7649};
	shf.l.wrap.b32 	%r7651, %r7647, %r7648, 3;
	shf.l.wrap.b32 	%r7652, %r7648, %r7647, 3;
	mov.b64 	%rd11406, {%r7652, %r7651};
	shr.u64 	%rd11407, %rd18545, 6;
	xor.b64  	%rd11408, %rd11405, %rd11407;
	xor.b64  	%rd11409, %rd11408, %rd11406;
	shr.u64 	%rd11410, %rd18548, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7653,%dummy}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7654}, %rd18548;
	}
	shf.r.wrap.b32 	%r7655, %r7654, %r7653, 1;
	shf.r.wrap.b32 	%r7656, %r7653, %r7654, 1;
	mov.b64 	%rd11411, {%r7656, %r7655};
	xor.b64  	%rd11412, %rd11411, %rd11410;
	shf.r.wrap.b32 	%r7657, %r7654, %r7653, 8;
	shf.r.wrap.b32 	%r7658, %r7653, %r7654, 8;
	mov.b64 	%rd11413, {%r7658, %r7657};
	xor.b64  	%rd11414, %rd11412, %rd11413;
	add.s64 	%rd11415, %rd18547, %rd18533;
	add.s64 	%rd11416, %rd11415, %rd11409;
	add.s64 	%rd18547, %rd11416, %rd11414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7659,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7660}, %rd18546;
	}
	shf.r.wrap.b32 	%r7661, %r7660, %r7659, 19;
	shf.r.wrap.b32 	%r7662, %r7659, %r7660, 19;
	mov.b64 	%rd11417, {%r7662, %r7661};
	shf.l.wrap.b32 	%r7663, %r7659, %r7660, 3;
	shf.l.wrap.b32 	%r7664, %r7660, %r7659, 3;
	mov.b64 	%rd11418, {%r7664, %r7663};
	shr.u64 	%rd11419, %rd18546, 6;
	xor.b64  	%rd11420, %rd11417, %rd11419;
	xor.b64  	%rd11421, %rd11420, %rd11418;
	shr.u64 	%rd11422, %rd18549, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7665,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7666}, %rd18549;
	}
	shf.r.wrap.b32 	%r7667, %r7666, %r7665, 1;
	shf.r.wrap.b32 	%r7668, %r7665, %r7666, 1;
	mov.b64 	%rd11423, {%r7668, %r7667};
	xor.b64  	%rd11424, %rd11423, %rd11422;
	shf.r.wrap.b32 	%r7669, %r7666, %r7665, 8;
	shf.r.wrap.b32 	%r7670, %r7665, %r7666, 8;
	mov.b64 	%rd11425, {%r7670, %r7669};
	xor.b64  	%rd11426, %rd11424, %rd11425;
	add.s64 	%rd11427, %rd18548, %rd18532;
	add.s64 	%rd11428, %rd11427, %rd11421;
	add.s64 	%rd18548, %rd11428, %rd11426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7671,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7672}, %rd18547;
	}
	shf.r.wrap.b32 	%r7673, %r7672, %r7671, 19;
	shf.r.wrap.b32 	%r7674, %r7671, %r7672, 19;
	mov.b64 	%rd11429, {%r7674, %r7673};
	shf.l.wrap.b32 	%r7675, %r7671, %r7672, 3;
	shf.l.wrap.b32 	%r7676, %r7672, %r7671, 3;
	mov.b64 	%rd11430, {%r7676, %r7675};
	shr.u64 	%rd11431, %rd18547, 6;
	xor.b64  	%rd11432, %rd11429, %rd11431;
	xor.b64  	%rd11433, %rd11432, %rd11430;
	shr.u64 	%rd11434, %rd18550, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7677,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7678}, %rd18550;
	}
	shf.r.wrap.b32 	%r7679, %r7678, %r7677, 1;
	shf.r.wrap.b32 	%r7680, %r7677, %r7678, 1;
	mov.b64 	%rd11435, {%r7680, %r7679};
	xor.b64  	%rd11436, %rd11435, %rd11434;
	shf.r.wrap.b32 	%r7681, %r7678, %r7677, 8;
	shf.r.wrap.b32 	%r7682, %r7677, %r7678, 8;
	mov.b64 	%rd11437, {%r7682, %r7681};
	xor.b64  	%rd11438, %rd11436, %rd11437;
	add.s64 	%rd11439, %rd18549, %rd18531;
	add.s64 	%rd11440, %rd11439, %rd11433;
	add.s64 	%rd18549, %rd11440, %rd11438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7683,%dummy}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7684}, %rd18548;
	}
	shf.r.wrap.b32 	%r7685, %r7684, %r7683, 19;
	shf.r.wrap.b32 	%r7686, %r7683, %r7684, 19;
	mov.b64 	%rd11441, {%r7686, %r7685};
	shf.l.wrap.b32 	%r7687, %r7683, %r7684, 3;
	shf.l.wrap.b32 	%r7688, %r7684, %r7683, 3;
	mov.b64 	%rd11442, {%r7688, %r7687};
	shr.u64 	%rd11443, %rd18548, 6;
	xor.b64  	%rd11444, %rd11441, %rd11443;
	xor.b64  	%rd11445, %rd11444, %rd11442;
	shr.u64 	%rd11446, %rd18551, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7689,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7690}, %rd18551;
	}
	shf.r.wrap.b32 	%r7691, %r7690, %r7689, 1;
	shf.r.wrap.b32 	%r7692, %r7689, %r7690, 1;
	mov.b64 	%rd11447, {%r7692, %r7691};
	xor.b64  	%rd11448, %rd11447, %rd11446;
	shf.r.wrap.b32 	%r7693, %r7690, %r7689, 8;
	shf.r.wrap.b32 	%r7694, %r7689, %r7690, 8;
	mov.b64 	%rd11449, {%r7694, %r7693};
	xor.b64  	%rd11450, %rd11448, %rd11449;
	add.s64 	%rd11451, %rd18550, %rd18530;
	add.s64 	%rd11452, %rd11451, %rd11445;
	add.s64 	%rd18550, %rd11452, %rd11450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7695,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7696}, %rd18549;
	}
	shf.r.wrap.b32 	%r7697, %r7696, %r7695, 19;
	shf.r.wrap.b32 	%r7698, %r7695, %r7696, 19;
	mov.b64 	%rd11453, {%r7698, %r7697};
	shf.l.wrap.b32 	%r7699, %r7695, %r7696, 3;
	shf.l.wrap.b32 	%r7700, %r7696, %r7695, 3;
	mov.b64 	%rd11454, {%r7700, %r7699};
	shr.u64 	%rd11455, %rd18549, 6;
	xor.b64  	%rd11456, %rd11453, %rd11455;
	xor.b64  	%rd11457, %rd11456, %rd11454;
	shr.u64 	%rd11458, %rd18552, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7701,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7702}, %rd18552;
	}
	shf.r.wrap.b32 	%r7703, %r7702, %r7701, 1;
	shf.r.wrap.b32 	%r7704, %r7701, %r7702, 1;
	mov.b64 	%rd11459, {%r7704, %r7703};
	xor.b64  	%rd11460, %rd11459, %rd11458;
	shf.r.wrap.b32 	%r7705, %r7702, %r7701, 8;
	shf.r.wrap.b32 	%r7706, %r7701, %r7702, 8;
	mov.b64 	%rd11461, {%r7706, %r7705};
	xor.b64  	%rd11462, %rd11460, %rd11461;
	add.s64 	%rd11463, %rd18551, %rd18529;
	add.s64 	%rd11464, %rd11463, %rd11457;
	add.s64 	%rd18551, %rd11464, %rd11462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7707,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7708}, %rd18550;
	}
	shf.r.wrap.b32 	%r7709, %r7708, %r7707, 19;
	shf.r.wrap.b32 	%r7710, %r7707, %r7708, 19;
	mov.b64 	%rd11465, {%r7710, %r7709};
	shf.l.wrap.b32 	%r7711, %r7707, %r7708, 3;
	shf.l.wrap.b32 	%r7712, %r7708, %r7707, 3;
	mov.b64 	%rd11466, {%r7712, %r7711};
	shr.u64 	%rd11467, %rd18550, 6;
	xor.b64  	%rd11468, %rd11465, %rd11467;
	xor.b64  	%rd11469, %rd11468, %rd11466;
	shr.u64 	%rd11470, %rd18536, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7713,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7714}, %rd18536;
	}
	shf.r.wrap.b32 	%r7715, %r7714, %r7713, 1;
	shf.r.wrap.b32 	%r7716, %r7713, %r7714, 1;
	mov.b64 	%rd11471, {%r7716, %r7715};
	xor.b64  	%rd11472, %rd11471, %rd11470;
	shf.r.wrap.b32 	%r7717, %r7714, %r7713, 8;
	shf.r.wrap.b32 	%r7718, %r7713, %r7714, 8;
	mov.b64 	%rd11473, {%r7718, %r7717};
	xor.b64  	%rd11474, %rd11472, %rd11473;
	add.s64 	%rd11475, %rd18545, %rd18552;
	add.s64 	%rd11476, %rd11475, %rd11469;
	add.s64 	%rd18552, %rd11476, %rd11474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7719,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7720}, %rd18551;
	}
	shf.r.wrap.b32 	%r7721, %r7720, %r7719, 19;
	shf.r.wrap.b32 	%r7722, %r7719, %r7720, 19;
	mov.b64 	%rd11477, {%r7722, %r7721};
	shf.l.wrap.b32 	%r7723, %r7719, %r7720, 3;
	shf.l.wrap.b32 	%r7724, %r7720, %r7719, 3;
	mov.b64 	%rd11478, {%r7724, %r7723};
	shr.u64 	%rd11479, %rd18551, 6;
	xor.b64  	%rd11480, %rd11477, %rd11479;
	xor.b64  	%rd11481, %rd11480, %rd11478;
	shr.u64 	%rd11482, %rd18535, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7725,%dummy}, %rd18535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7726}, %rd18535;
	}
	shf.r.wrap.b32 	%r7727, %r7726, %r7725, 1;
	shf.r.wrap.b32 	%r7728, %r7725, %r7726, 1;
	mov.b64 	%rd11483, {%r7728, %r7727};
	xor.b64  	%rd11484, %rd11483, %rd11482;
	shf.r.wrap.b32 	%r7729, %r7726, %r7725, 8;
	shf.r.wrap.b32 	%r7730, %r7725, %r7726, 8;
	mov.b64 	%rd11485, {%r7730, %r7729};
	xor.b64  	%rd11486, %rd11484, %rd11485;
	add.s64 	%rd11487, %rd18546, %rd18536;
	add.s64 	%rd11488, %rd11487, %rd11481;
	add.s64 	%rd18536, %rd11488, %rd11486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7731,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7732}, %rd18552;
	}
	shf.r.wrap.b32 	%r7733, %r7732, %r7731, 19;
	shf.r.wrap.b32 	%r7734, %r7731, %r7732, 19;
	mov.b64 	%rd11489, {%r7734, %r7733};
	shf.l.wrap.b32 	%r7735, %r7731, %r7732, 3;
	shf.l.wrap.b32 	%r7736, %r7732, %r7731, 3;
	mov.b64 	%rd11490, {%r7736, %r7735};
	shr.u64 	%rd11491, %rd18552, 6;
	xor.b64  	%rd11492, %rd11489, %rd11491;
	xor.b64  	%rd11493, %rd11492, %rd11490;
	shr.u64 	%rd11494, %rd18534, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7737,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7738}, %rd18534;
	}
	shf.r.wrap.b32 	%r7739, %r7738, %r7737, 1;
	shf.r.wrap.b32 	%r7740, %r7737, %r7738, 1;
	mov.b64 	%rd11495, {%r7740, %r7739};
	xor.b64  	%rd11496, %rd11495, %rd11494;
	shf.r.wrap.b32 	%r7741, %r7738, %r7737, 8;
	shf.r.wrap.b32 	%r7742, %r7737, %r7738, 8;
	mov.b64 	%rd11497, {%r7742, %r7741};
	xor.b64  	%rd11498, %rd11496, %rd11497;
	add.s64 	%rd11499, %rd18547, %rd18535;
	add.s64 	%rd11500, %rd11499, %rd11493;
	add.s64 	%rd18535, %rd11500, %rd11498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7743,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7744}, %rd18536;
	}
	shf.r.wrap.b32 	%r7745, %r7744, %r7743, 19;
	shf.r.wrap.b32 	%r7746, %r7743, %r7744, 19;
	mov.b64 	%rd11501, {%r7746, %r7745};
	shf.l.wrap.b32 	%r7747, %r7743, %r7744, 3;
	shf.l.wrap.b32 	%r7748, %r7744, %r7743, 3;
	mov.b64 	%rd11502, {%r7748, %r7747};
	shr.u64 	%rd11503, %rd18536, 6;
	xor.b64  	%rd11504, %rd11501, %rd11503;
	xor.b64  	%rd11505, %rd11504, %rd11502;
	shr.u64 	%rd11506, %rd18533, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7749,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7750}, %rd18533;
	}
	shf.r.wrap.b32 	%r7751, %r7750, %r7749, 1;
	shf.r.wrap.b32 	%r7752, %r7749, %r7750, 1;
	mov.b64 	%rd11507, {%r7752, %r7751};
	xor.b64  	%rd11508, %rd11507, %rd11506;
	shf.r.wrap.b32 	%r7753, %r7750, %r7749, 8;
	shf.r.wrap.b32 	%r7754, %r7749, %r7750, 8;
	mov.b64 	%rd11509, {%r7754, %r7753};
	xor.b64  	%rd11510, %rd11508, %rd11509;
	add.s64 	%rd11511, %rd18548, %rd18534;
	add.s64 	%rd11512, %rd11511, %rd11505;
	add.s64 	%rd18534, %rd11512, %rd11510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7755,%dummy}, %rd18535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7756}, %rd18535;
	}
	shf.r.wrap.b32 	%r7757, %r7756, %r7755, 19;
	shf.r.wrap.b32 	%r7758, %r7755, %r7756, 19;
	mov.b64 	%rd11513, {%r7758, %r7757};
	shf.l.wrap.b32 	%r7759, %r7755, %r7756, 3;
	shf.l.wrap.b32 	%r7760, %r7756, %r7755, 3;
	mov.b64 	%rd11514, {%r7760, %r7759};
	shr.u64 	%rd11515, %rd18535, 6;
	xor.b64  	%rd11516, %rd11513, %rd11515;
	xor.b64  	%rd11517, %rd11516, %rd11514;
	shr.u64 	%rd11518, %rd18532, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7761,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7762}, %rd18532;
	}
	shf.r.wrap.b32 	%r7763, %r7762, %r7761, 1;
	shf.r.wrap.b32 	%r7764, %r7761, %r7762, 1;
	mov.b64 	%rd11519, {%r7764, %r7763};
	xor.b64  	%rd11520, %rd11519, %rd11518;
	shf.r.wrap.b32 	%r7765, %r7762, %r7761, 8;
	shf.r.wrap.b32 	%r7766, %r7761, %r7762, 8;
	mov.b64 	%rd11521, {%r7766, %r7765};
	xor.b64  	%rd11522, %rd11520, %rd11521;
	add.s64 	%rd11523, %rd18549, %rd18533;
	add.s64 	%rd11524, %rd11523, %rd11517;
	add.s64 	%rd18533, %rd11524, %rd11522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7767,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7768}, %rd18534;
	}
	shf.r.wrap.b32 	%r7769, %r7768, %r7767, 19;
	shf.r.wrap.b32 	%r7770, %r7767, %r7768, 19;
	mov.b64 	%rd11525, {%r7770, %r7769};
	shf.l.wrap.b32 	%r7771, %r7767, %r7768, 3;
	shf.l.wrap.b32 	%r7772, %r7768, %r7767, 3;
	mov.b64 	%rd11526, {%r7772, %r7771};
	shr.u64 	%rd11527, %rd18534, 6;
	xor.b64  	%rd11528, %rd11525, %rd11527;
	xor.b64  	%rd11529, %rd11528, %rd11526;
	shr.u64 	%rd11530, %rd18531, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7773,%dummy}, %rd18531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7774}, %rd18531;
	}
	shf.r.wrap.b32 	%r7775, %r7774, %r7773, 1;
	shf.r.wrap.b32 	%r7776, %r7773, %r7774, 1;
	mov.b64 	%rd11531, {%r7776, %r7775};
	xor.b64  	%rd11532, %rd11531, %rd11530;
	shf.r.wrap.b32 	%r7777, %r7774, %r7773, 8;
	shf.r.wrap.b32 	%r7778, %r7773, %r7774, 8;
	mov.b64 	%rd11533, {%r7778, %r7777};
	xor.b64  	%rd11534, %rd11532, %rd11533;
	add.s64 	%rd11535, %rd18550, %rd18532;
	add.s64 	%rd11536, %rd11535, %rd11529;
	add.s64 	%rd18532, %rd11536, %rd11534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7779,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7780}, %rd18533;
	}
	shf.r.wrap.b32 	%r7781, %r7780, %r7779, 19;
	shf.r.wrap.b32 	%r7782, %r7779, %r7780, 19;
	mov.b64 	%rd11537, {%r7782, %r7781};
	shf.l.wrap.b32 	%r7783, %r7779, %r7780, 3;
	shf.l.wrap.b32 	%r7784, %r7780, %r7779, 3;
	mov.b64 	%rd11538, {%r7784, %r7783};
	shr.u64 	%rd11539, %rd18533, 6;
	xor.b64  	%rd11540, %rd11537, %rd11539;
	xor.b64  	%rd11541, %rd11540, %rd11538;
	shr.u64 	%rd11542, %rd18530, 7;
	shf.r.wrap.b32 	%r7785, %r7624, %r7623, 1;
	shf.r.wrap.b32 	%r7786, %r7623, %r7624, 1;
	mov.b64 	%rd11543, {%r7786, %r7785};
	xor.b64  	%rd11544, %rd11543, %rd11542;
	shf.r.wrap.b32 	%r7787, %r7624, %r7623, 8;
	shf.r.wrap.b32 	%r7788, %r7623, %r7624, 8;
	mov.b64 	%rd11545, {%r7788, %r7787};
	xor.b64  	%rd11546, %rd11544, %rd11545;
	add.s64 	%rd11547, %rd18551, %rd18531;
	add.s64 	%rd11548, %rd11547, %rd11541;
	add.s64 	%rd18531, %rd11548, %rd11546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7789,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7790}, %rd18532;
	}
	shf.r.wrap.b32 	%r7791, %r7790, %r7789, 19;
	shf.r.wrap.b32 	%r7792, %r7789, %r7790, 19;
	mov.b64 	%rd11549, {%r7792, %r7791};
	shf.l.wrap.b32 	%r7793, %r7789, %r7790, 3;
	shf.l.wrap.b32 	%r7794, %r7790, %r7789, 3;
	mov.b64 	%rd11550, {%r7794, %r7793};
	shr.u64 	%rd11551, %rd18532, 6;
	xor.b64  	%rd11552, %rd11549, %rd11551;
	xor.b64  	%rd11553, %rd11552, %rd11550;
	shr.u64 	%rd11554, %rd18529, 7;
	shf.r.wrap.b32 	%r7795, %r7636, %r7635, 1;
	shf.r.wrap.b32 	%r7796, %r7635, %r7636, 1;
	mov.b64 	%rd11555, {%r7796, %r7795};
	xor.b64  	%rd11556, %rd11555, %rd11554;
	shf.r.wrap.b32 	%r7797, %r7636, %r7635, 8;
	shf.r.wrap.b32 	%r7798, %r7635, %r7636, 8;
	mov.b64 	%rd11557, {%r7798, %r7797};
	xor.b64  	%rd11558, %rd11556, %rd11557;
	add.s64 	%rd11559, %rd18552, %rd18530;
	add.s64 	%rd11560, %rd11559, %rd11553;
	add.s64 	%rd18530, %rd11560, %rd11558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7799,%dummy}, %rd18531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7800}, %rd18531;
	}
	shf.r.wrap.b32 	%r7801, %r7800, %r7799, 19;
	shf.r.wrap.b32 	%r7802, %r7799, %r7800, 19;
	mov.b64 	%rd11561, {%r7802, %r7801};
	shf.l.wrap.b32 	%r7803, %r7799, %r7800, 3;
	shf.l.wrap.b32 	%r7804, %r7800, %r7799, 3;
	mov.b64 	%rd11562, {%r7804, %r7803};
	shr.u64 	%rd11563, %rd18531, 6;
	xor.b64  	%rd11564, %rd11561, %rd11563;
	xor.b64  	%rd11565, %rd11564, %rd11562;
	shf.r.wrap.b32 	%r7805, %r7648, %r7647, 1;
	shf.r.wrap.b32 	%r7806, %r7647, %r7648, 1;
	mov.b64 	%rd11566, {%r7806, %r7805};
	shf.r.wrap.b32 	%r7807, %r7648, %r7647, 8;
	shf.r.wrap.b32 	%r7808, %r7647, %r7648, 8;
	mov.b64 	%rd11567, {%r7808, %r7807};
	shr.u64 	%rd11568, %rd18545, 7;
	xor.b64  	%rd11569, %rd11566, %rd11568;
	xor.b64  	%rd11570, %rd11569, %rd11567;
	add.s64 	%rd11571, %rd18536, %rd18529;
	add.s64 	%rd11572, %rd11571, %rd11565;
	add.s64 	%rd18529, %rd11572, %rd11570;
	mul.wide.s32 	%rd11573, %r12660, 8;
	add.s64 	%rd11575, %rd18237, %rd11573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7809,%dummy}, %rd18541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7810}, %rd18541;
	}
	shf.r.wrap.b32 	%r7811, %r7810, %r7809, 18;
	shf.r.wrap.b32 	%r7812, %r7809, %r7810, 18;
	mov.b64 	%rd11576, {%r7812, %r7811};
	shf.r.wrap.b32 	%r7813, %r7810, %r7809, 14;
	shf.r.wrap.b32 	%r7814, %r7809, %r7810, 14;
	mov.b64 	%rd11577, {%r7814, %r7813};
	xor.b64  	%rd11578, %rd11576, %rd11577;
	shf.l.wrap.b32 	%r7815, %r7809, %r7810, 23;
	shf.l.wrap.b32 	%r7816, %r7810, %r7809, 23;
	mov.b64 	%rd11579, {%r7816, %r7815};
	xor.b64  	%rd11580, %rd11578, %rd11579;
	xor.b64  	%rd11581, %rd18543, %rd18542;
	and.b64  	%rd11582, %rd11581, %rd18541;
	xor.b64  	%rd11583, %rd11582, %rd18543;
	add.s64 	%rd11584, %rd11583, %rd18544;
	add.s64 	%rd11585, %rd11584, %rd18545;
	ld.const.u64 	%rd11586, [%rd11575];
	add.s64 	%rd11587, %rd11585, %rd11586;
	add.s64 	%rd11588, %rd11587, %rd11580;
	add.s64 	%rd11589, %rd11588, %rd18540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7817}, %rd18537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7818,%dummy}, %rd18537;
	}
	shf.l.wrap.b32 	%r7819, %r7818, %r7817, 30;
	shf.l.wrap.b32 	%r7820, %r7817, %r7818, 30;
	mov.b64 	%rd11590, {%r7820, %r7819};
	shf.r.wrap.b32 	%r7821, %r7817, %r7818, 28;
	shf.r.wrap.b32 	%r7822, %r7818, %r7817, 28;
	mov.b64 	%rd11591, {%r7822, %r7821};
	xor.b64  	%rd11592, %rd11590, %rd11591;
	shf.l.wrap.b32 	%r7823, %r7818, %r7817, 25;
	shf.l.wrap.b32 	%r7824, %r7817, %r7818, 25;
	mov.b64 	%rd11593, {%r7824, %r7823};
	xor.b64  	%rd11594, %rd11592, %rd11593;
	xor.b64  	%rd11595, %rd18538, %rd18537;
	and.b64  	%rd11596, %rd11595, %rd18539;
	and.b64  	%rd11597, %rd18538, %rd18537;
	or.b64  	%rd11598, %rd11596, %rd11597;
	add.s64 	%rd11599, %rd11588, %rd11598;
	add.s64 	%rd11600, %rd11599, %rd11594;
	add.s32 	%r7825, %r12660, 1;
	mul.wide.s32 	%rd11601, %r7825, 8;
	add.s64 	%rd11602, %rd18237, %rd11601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7826,%dummy}, %rd11589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7827}, %rd11589;
	}
	shf.r.wrap.b32 	%r7828, %r7827, %r7826, 14;
	shf.r.wrap.b32 	%r7829, %r7826, %r7827, 14;
	mov.b64 	%rd11603, {%r7829, %r7828};
	shf.r.wrap.b32 	%r7830, %r7827, %r7826, 18;
	shf.r.wrap.b32 	%r7831, %r7826, %r7827, 18;
	mov.b64 	%rd11604, {%r7831, %r7830};
	xor.b64  	%rd11605, %rd11604, %rd11603;
	shf.l.wrap.b32 	%r7832, %r7826, %r7827, 23;
	shf.l.wrap.b32 	%r7833, %r7827, %r7826, 23;
	mov.b64 	%rd11606, {%r7833, %r7832};
	xor.b64  	%rd11607, %rd11605, %rd11606;
	xor.b64  	%rd11608, %rd18542, %rd18541;
	and.b64  	%rd11609, %rd11589, %rd11608;
	xor.b64  	%rd11610, %rd11609, %rd18542;
	add.s64 	%rd11611, %rd18546, %rd18543;
	ld.const.u64 	%rd11612, [%rd11602];
	add.s64 	%rd11613, %rd11611, %rd11612;
	add.s64 	%rd11614, %rd11613, %rd11610;
	add.s64 	%rd11615, %rd11614, %rd11607;
	add.s64 	%rd11616, %rd11615, %rd18539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7834,%dummy}, %rd11600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7835}, %rd11600;
	}
	shf.r.wrap.b32 	%r7836, %r7835, %r7834, 28;
	shf.r.wrap.b32 	%r7837, %r7834, %r7835, 28;
	mov.b64 	%rd11617, {%r7837, %r7836};
	shf.l.wrap.b32 	%r7838, %r7834, %r7835, 30;
	shf.l.wrap.b32 	%r7839, %r7835, %r7834, 30;
	mov.b64 	%rd11618, {%r7839, %r7838};
	xor.b64  	%rd11619, %rd11618, %rd11617;
	shf.l.wrap.b32 	%r7840, %r7834, %r7835, 25;
	shf.l.wrap.b32 	%r7841, %r7835, %r7834, 25;
	mov.b64 	%rd11620, {%r7841, %r7840};
	xor.b64  	%rd11621, %rd11619, %rd11620;
	and.b64  	%rd11622, %rd11600, %rd18537;
	xor.b64  	%rd11623, %rd11600, %rd18537;
	and.b64  	%rd11624, %rd11623, %rd18538;
	or.b64  	%rd11625, %rd11624, %rd11622;
	add.s64 	%rd11626, %rd11615, %rd11625;
	add.s64 	%rd11627, %rd11626, %rd11621;
	add.s32 	%r7842, %r12660, 2;
	mul.wide.s32 	%rd11628, %r7842, 8;
	add.s64 	%rd11629, %rd18237, %rd11628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7843,%dummy}, %rd11616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7844}, %rd11616;
	}
	shf.r.wrap.b32 	%r7845, %r7844, %r7843, 14;
	shf.r.wrap.b32 	%r7846, %r7843, %r7844, 14;
	mov.b64 	%rd11630, {%r7846, %r7845};
	shf.r.wrap.b32 	%r7847, %r7844, %r7843, 18;
	shf.r.wrap.b32 	%r7848, %r7843, %r7844, 18;
	mov.b64 	%rd11631, {%r7848, %r7847};
	xor.b64  	%rd11632, %rd11631, %rd11630;
	shf.l.wrap.b32 	%r7849, %r7843, %r7844, 23;
	shf.l.wrap.b32 	%r7850, %r7844, %r7843, 23;
	mov.b64 	%rd11633, {%r7850, %r7849};
	xor.b64  	%rd11634, %rd11632, %rd11633;
	xor.b64  	%rd11635, %rd11589, %rd18541;
	and.b64  	%rd11636, %rd11616, %rd11635;
	xor.b64  	%rd11637, %rd11636, %rd18541;
	add.s64 	%rd11638, %rd18547, %rd18542;
	ld.const.u64 	%rd11639, [%rd11629];
	add.s64 	%rd11640, %rd11638, %rd11639;
	add.s64 	%rd11641, %rd11640, %rd11637;
	add.s64 	%rd11642, %rd11641, %rd11634;
	add.s64 	%rd11643, %rd11642, %rd18538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7851,%dummy}, %rd11627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7852}, %rd11627;
	}
	shf.r.wrap.b32 	%r7853, %r7852, %r7851, 28;
	shf.r.wrap.b32 	%r7854, %r7851, %r7852, 28;
	mov.b64 	%rd11644, {%r7854, %r7853};
	shf.l.wrap.b32 	%r7855, %r7851, %r7852, 30;
	shf.l.wrap.b32 	%r7856, %r7852, %r7851, 30;
	mov.b64 	%rd11645, {%r7856, %r7855};
	xor.b64  	%rd11646, %rd11645, %rd11644;
	shf.l.wrap.b32 	%r7857, %r7851, %r7852, 25;
	shf.l.wrap.b32 	%r7858, %r7852, %r7851, 25;
	mov.b64 	%rd11647, {%r7858, %r7857};
	xor.b64  	%rd11648, %rd11646, %rd11647;
	and.b64  	%rd11649, %rd11627, %rd11600;
	xor.b64  	%rd11650, %rd11627, %rd11600;
	and.b64  	%rd11651, %rd11650, %rd18537;
	or.b64  	%rd11652, %rd11651, %rd11649;
	add.s64 	%rd11653, %rd11642, %rd11652;
	add.s64 	%rd11654, %rd11653, %rd11648;
	add.s32 	%r7859, %r12660, 3;
	mul.wide.s32 	%rd11655, %r7859, 8;
	add.s64 	%rd11656, %rd18237, %rd11655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7860,%dummy}, %rd11643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7861}, %rd11643;
	}
	shf.r.wrap.b32 	%r7862, %r7861, %r7860, 14;
	shf.r.wrap.b32 	%r7863, %r7860, %r7861, 14;
	mov.b64 	%rd11657, {%r7863, %r7862};
	shf.r.wrap.b32 	%r7864, %r7861, %r7860, 18;
	shf.r.wrap.b32 	%r7865, %r7860, %r7861, 18;
	mov.b64 	%rd11658, {%r7865, %r7864};
	xor.b64  	%rd11659, %rd11658, %rd11657;
	shf.l.wrap.b32 	%r7866, %r7860, %r7861, 23;
	shf.l.wrap.b32 	%r7867, %r7861, %r7860, 23;
	mov.b64 	%rd11660, {%r7867, %r7866};
	xor.b64  	%rd11661, %rd11659, %rd11660;
	xor.b64  	%rd11662, %rd11616, %rd11589;
	and.b64  	%rd11663, %rd11643, %rd11662;
	xor.b64  	%rd11664, %rd11663, %rd11589;
	add.s64 	%rd11665, %rd18548, %rd18541;
	ld.const.u64 	%rd11666, [%rd11656];
	add.s64 	%rd11667, %rd11665, %rd11666;
	add.s64 	%rd11668, %rd11667, %rd11664;
	add.s64 	%rd11669, %rd11668, %rd11661;
	add.s64 	%rd11670, %rd11669, %rd18537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7868,%dummy}, %rd11654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7869}, %rd11654;
	}
	shf.r.wrap.b32 	%r7870, %r7869, %r7868, 28;
	shf.r.wrap.b32 	%r7871, %r7868, %r7869, 28;
	mov.b64 	%rd11671, {%r7871, %r7870};
	shf.l.wrap.b32 	%r7872, %r7868, %r7869, 30;
	shf.l.wrap.b32 	%r7873, %r7869, %r7868, 30;
	mov.b64 	%rd11672, {%r7873, %r7872};
	xor.b64  	%rd11673, %rd11672, %rd11671;
	shf.l.wrap.b32 	%r7874, %r7868, %r7869, 25;
	shf.l.wrap.b32 	%r7875, %r7869, %r7868, 25;
	mov.b64 	%rd11674, {%r7875, %r7874};
	xor.b64  	%rd11675, %rd11673, %rd11674;
	and.b64  	%rd11676, %rd11654, %rd11627;
	xor.b64  	%rd11677, %rd11654, %rd11627;
	and.b64  	%rd11678, %rd11677, %rd11600;
	or.b64  	%rd11679, %rd11678, %rd11676;
	add.s64 	%rd11680, %rd11669, %rd11679;
	add.s64 	%rd11681, %rd11680, %rd11675;
	add.s32 	%r7876, %r12660, 4;
	mul.wide.s32 	%rd11682, %r7876, 8;
	add.s64 	%rd11683, %rd18237, %rd11682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7877,%dummy}, %rd11670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7878}, %rd11670;
	}
	shf.r.wrap.b32 	%r7879, %r7878, %r7877, 14;
	shf.r.wrap.b32 	%r7880, %r7877, %r7878, 14;
	mov.b64 	%rd11684, {%r7880, %r7879};
	shf.r.wrap.b32 	%r7881, %r7878, %r7877, 18;
	shf.r.wrap.b32 	%r7882, %r7877, %r7878, 18;
	mov.b64 	%rd11685, {%r7882, %r7881};
	xor.b64  	%rd11686, %rd11685, %rd11684;
	shf.l.wrap.b32 	%r7883, %r7877, %r7878, 23;
	shf.l.wrap.b32 	%r7884, %r7878, %r7877, 23;
	mov.b64 	%rd11687, {%r7884, %r7883};
	xor.b64  	%rd11688, %rd11686, %rd11687;
	xor.b64  	%rd11689, %rd11643, %rd11616;
	and.b64  	%rd11690, %rd11670, %rd11689;
	xor.b64  	%rd11691, %rd11690, %rd11616;
	add.s64 	%rd11692, %rd11589, %rd18549;
	ld.const.u64 	%rd11693, [%rd11683];
	add.s64 	%rd11694, %rd11692, %rd11693;
	add.s64 	%rd11695, %rd11694, %rd11691;
	add.s64 	%rd11696, %rd11695, %rd11688;
	add.s64 	%rd11697, %rd11696, %rd11600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7885,%dummy}, %rd11681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7886}, %rd11681;
	}
	shf.r.wrap.b32 	%r7887, %r7886, %r7885, 28;
	shf.r.wrap.b32 	%r7888, %r7885, %r7886, 28;
	mov.b64 	%rd11698, {%r7888, %r7887};
	shf.l.wrap.b32 	%r7889, %r7885, %r7886, 30;
	shf.l.wrap.b32 	%r7890, %r7886, %r7885, 30;
	mov.b64 	%rd11699, {%r7890, %r7889};
	xor.b64  	%rd11700, %rd11699, %rd11698;
	shf.l.wrap.b32 	%r7891, %r7885, %r7886, 25;
	shf.l.wrap.b32 	%r7892, %r7886, %r7885, 25;
	mov.b64 	%rd11701, {%r7892, %r7891};
	xor.b64  	%rd11702, %rd11700, %rd11701;
	and.b64  	%rd11703, %rd11681, %rd11654;
	xor.b64  	%rd11704, %rd11681, %rd11654;
	and.b64  	%rd11705, %rd11704, %rd11627;
	or.b64  	%rd11706, %rd11705, %rd11703;
	add.s64 	%rd11707, %rd11696, %rd11706;
	add.s64 	%rd11708, %rd11707, %rd11702;
	add.s32 	%r7893, %r12660, 5;
	mul.wide.s32 	%rd11709, %r7893, 8;
	add.s64 	%rd11710, %rd18237, %rd11709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7894,%dummy}, %rd11697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7895}, %rd11697;
	}
	shf.r.wrap.b32 	%r7896, %r7895, %r7894, 14;
	shf.r.wrap.b32 	%r7897, %r7894, %r7895, 14;
	mov.b64 	%rd11711, {%r7897, %r7896};
	shf.r.wrap.b32 	%r7898, %r7895, %r7894, 18;
	shf.r.wrap.b32 	%r7899, %r7894, %r7895, 18;
	mov.b64 	%rd11712, {%r7899, %r7898};
	xor.b64  	%rd11713, %rd11712, %rd11711;
	shf.l.wrap.b32 	%r7900, %r7894, %r7895, 23;
	shf.l.wrap.b32 	%r7901, %r7895, %r7894, 23;
	mov.b64 	%rd11714, {%r7901, %r7900};
	xor.b64  	%rd11715, %rd11713, %rd11714;
	xor.b64  	%rd11716, %rd11670, %rd11643;
	and.b64  	%rd11717, %rd11697, %rd11716;
	xor.b64  	%rd11718, %rd11717, %rd11643;
	add.s64 	%rd11719, %rd11616, %rd18550;
	ld.const.u64 	%rd11720, [%rd11710];
	add.s64 	%rd11721, %rd11719, %rd11720;
	add.s64 	%rd11722, %rd11721, %rd11718;
	add.s64 	%rd11723, %rd11722, %rd11715;
	add.s64 	%rd11724, %rd11723, %rd11627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7902,%dummy}, %rd11708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7903}, %rd11708;
	}
	shf.r.wrap.b32 	%r7904, %r7903, %r7902, 28;
	shf.r.wrap.b32 	%r7905, %r7902, %r7903, 28;
	mov.b64 	%rd11725, {%r7905, %r7904};
	shf.l.wrap.b32 	%r7906, %r7902, %r7903, 30;
	shf.l.wrap.b32 	%r7907, %r7903, %r7902, 30;
	mov.b64 	%rd11726, {%r7907, %r7906};
	xor.b64  	%rd11727, %rd11726, %rd11725;
	shf.l.wrap.b32 	%r7908, %r7902, %r7903, 25;
	shf.l.wrap.b32 	%r7909, %r7903, %r7902, 25;
	mov.b64 	%rd11728, {%r7909, %r7908};
	xor.b64  	%rd11729, %rd11727, %rd11728;
	and.b64  	%rd11730, %rd11708, %rd11681;
	xor.b64  	%rd11731, %rd11708, %rd11681;
	and.b64  	%rd11732, %rd11731, %rd11654;
	or.b64  	%rd11733, %rd11732, %rd11730;
	add.s64 	%rd11734, %rd11723, %rd11733;
	add.s64 	%rd11735, %rd11734, %rd11729;
	add.s32 	%r7910, %r12660, 6;
	mul.wide.s32 	%rd11736, %r7910, 8;
	add.s64 	%rd11737, %rd18237, %rd11736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7911,%dummy}, %rd11724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7912}, %rd11724;
	}
	shf.r.wrap.b32 	%r7913, %r7912, %r7911, 14;
	shf.r.wrap.b32 	%r7914, %r7911, %r7912, 14;
	mov.b64 	%rd11738, {%r7914, %r7913};
	shf.r.wrap.b32 	%r7915, %r7912, %r7911, 18;
	shf.r.wrap.b32 	%r7916, %r7911, %r7912, 18;
	mov.b64 	%rd11739, {%r7916, %r7915};
	xor.b64  	%rd11740, %rd11739, %rd11738;
	shf.l.wrap.b32 	%r7917, %r7911, %r7912, 23;
	shf.l.wrap.b32 	%r7918, %r7912, %r7911, 23;
	mov.b64 	%rd11741, {%r7918, %r7917};
	xor.b64  	%rd11742, %rd11740, %rd11741;
	xor.b64  	%rd11743, %rd11697, %rd11670;
	and.b64  	%rd11744, %rd11724, %rd11743;
	xor.b64  	%rd11745, %rd11744, %rd11670;
	add.s64 	%rd11746, %rd11643, %rd18551;
	ld.const.u64 	%rd11747, [%rd11737];
	add.s64 	%rd11748, %rd11746, %rd11747;
	add.s64 	%rd11749, %rd11748, %rd11745;
	add.s64 	%rd11750, %rd11749, %rd11742;
	add.s64 	%rd11751, %rd11750, %rd11654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7919,%dummy}, %rd11735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7920}, %rd11735;
	}
	shf.r.wrap.b32 	%r7921, %r7920, %r7919, 28;
	shf.r.wrap.b32 	%r7922, %r7919, %r7920, 28;
	mov.b64 	%rd11752, {%r7922, %r7921};
	shf.l.wrap.b32 	%r7923, %r7919, %r7920, 30;
	shf.l.wrap.b32 	%r7924, %r7920, %r7919, 30;
	mov.b64 	%rd11753, {%r7924, %r7923};
	xor.b64  	%rd11754, %rd11753, %rd11752;
	shf.l.wrap.b32 	%r7925, %r7919, %r7920, 25;
	shf.l.wrap.b32 	%r7926, %r7920, %r7919, 25;
	mov.b64 	%rd11755, {%r7926, %r7925};
	xor.b64  	%rd11756, %rd11754, %rd11755;
	and.b64  	%rd11757, %rd11735, %rd11708;
	xor.b64  	%rd11758, %rd11735, %rd11708;
	and.b64  	%rd11759, %rd11758, %rd11681;
	or.b64  	%rd11760, %rd11759, %rd11757;
	add.s64 	%rd11761, %rd11750, %rd11760;
	add.s64 	%rd11762, %rd11761, %rd11756;
	add.s32 	%r7927, %r12660, 7;
	mul.wide.s32 	%rd11763, %r7927, 8;
	add.s64 	%rd11764, %rd18237, %rd11763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7928,%dummy}, %rd11751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7929}, %rd11751;
	}
	shf.r.wrap.b32 	%r7930, %r7929, %r7928, 14;
	shf.r.wrap.b32 	%r7931, %r7928, %r7929, 14;
	mov.b64 	%rd11765, {%r7931, %r7930};
	shf.r.wrap.b32 	%r7932, %r7929, %r7928, 18;
	shf.r.wrap.b32 	%r7933, %r7928, %r7929, 18;
	mov.b64 	%rd11766, {%r7933, %r7932};
	xor.b64  	%rd11767, %rd11766, %rd11765;
	shf.l.wrap.b32 	%r7934, %r7928, %r7929, 23;
	shf.l.wrap.b32 	%r7935, %r7929, %r7928, 23;
	mov.b64 	%rd11768, {%r7935, %r7934};
	xor.b64  	%rd11769, %rd11767, %rd11768;
	xor.b64  	%rd11770, %rd11724, %rd11697;
	and.b64  	%rd11771, %rd11751, %rd11770;
	xor.b64  	%rd11772, %rd11771, %rd11697;
	add.s64 	%rd11773, %rd11670, %rd18552;
	ld.const.u64 	%rd11774, [%rd11764];
	add.s64 	%rd11775, %rd11773, %rd11774;
	add.s64 	%rd11776, %rd11775, %rd11772;
	add.s64 	%rd11777, %rd11776, %rd11769;
	add.s64 	%rd11778, %rd11777, %rd11681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7936,%dummy}, %rd11762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7937}, %rd11762;
	}
	shf.r.wrap.b32 	%r7938, %r7937, %r7936, 28;
	shf.r.wrap.b32 	%r7939, %r7936, %r7937, 28;
	mov.b64 	%rd11779, {%r7939, %r7938};
	shf.l.wrap.b32 	%r7940, %r7936, %r7937, 30;
	shf.l.wrap.b32 	%r7941, %r7937, %r7936, 30;
	mov.b64 	%rd11780, {%r7941, %r7940};
	xor.b64  	%rd11781, %rd11780, %rd11779;
	shf.l.wrap.b32 	%r7942, %r7936, %r7937, 25;
	shf.l.wrap.b32 	%r7943, %r7937, %r7936, 25;
	mov.b64 	%rd11782, {%r7943, %r7942};
	xor.b64  	%rd11783, %rd11781, %rd11782;
	and.b64  	%rd11784, %rd11762, %rd11735;
	xor.b64  	%rd11785, %rd11762, %rd11735;
	and.b64  	%rd11786, %rd11785, %rd11708;
	or.b64  	%rd11787, %rd11786, %rd11784;
	add.s64 	%rd11788, %rd11777, %rd11787;
	add.s64 	%rd11789, %rd11788, %rd11783;
	add.s32 	%r7944, %r12660, 8;
	mul.wide.s32 	%rd11790, %r7944, 8;
	add.s64 	%rd11791, %rd18237, %rd11790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7945,%dummy}, %rd11778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7946}, %rd11778;
	}
	shf.r.wrap.b32 	%r7947, %r7946, %r7945, 14;
	shf.r.wrap.b32 	%r7948, %r7945, %r7946, 14;
	mov.b64 	%rd11792, {%r7948, %r7947};
	shf.r.wrap.b32 	%r7949, %r7946, %r7945, 18;
	shf.r.wrap.b32 	%r7950, %r7945, %r7946, 18;
	mov.b64 	%rd11793, {%r7950, %r7949};
	xor.b64  	%rd11794, %rd11793, %rd11792;
	shf.l.wrap.b32 	%r7951, %r7945, %r7946, 23;
	shf.l.wrap.b32 	%r7952, %r7946, %r7945, 23;
	mov.b64 	%rd11795, {%r7952, %r7951};
	xor.b64  	%rd11796, %rd11794, %rd11795;
	xor.b64  	%rd11797, %rd11751, %rd11724;
	and.b64  	%rd11798, %rd11778, %rd11797;
	xor.b64  	%rd11799, %rd11798, %rd11724;
	add.s64 	%rd11800, %rd11697, %rd18536;
	ld.const.u64 	%rd11801, [%rd11791];
	add.s64 	%rd11802, %rd11800, %rd11801;
	add.s64 	%rd11803, %rd11802, %rd11799;
	add.s64 	%rd11804, %rd11803, %rd11796;
	add.s64 	%rd11805, %rd11804, %rd11708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7953,%dummy}, %rd11789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7954}, %rd11789;
	}
	shf.r.wrap.b32 	%r7955, %r7954, %r7953, 28;
	shf.r.wrap.b32 	%r7956, %r7953, %r7954, 28;
	mov.b64 	%rd11806, {%r7956, %r7955};
	shf.l.wrap.b32 	%r7957, %r7953, %r7954, 30;
	shf.l.wrap.b32 	%r7958, %r7954, %r7953, 30;
	mov.b64 	%rd11807, {%r7958, %r7957};
	xor.b64  	%rd11808, %rd11807, %rd11806;
	shf.l.wrap.b32 	%r7959, %r7953, %r7954, 25;
	shf.l.wrap.b32 	%r7960, %r7954, %r7953, 25;
	mov.b64 	%rd11809, {%r7960, %r7959};
	xor.b64  	%rd11810, %rd11808, %rd11809;
	and.b64  	%rd11811, %rd11789, %rd11762;
	xor.b64  	%rd11812, %rd11789, %rd11762;
	and.b64  	%rd11813, %rd11812, %rd11735;
	or.b64  	%rd11814, %rd11813, %rd11811;
	add.s64 	%rd11815, %rd11804, %rd11814;
	add.s64 	%rd11816, %rd11815, %rd11810;
	add.s32 	%r7961, %r12660, 9;
	mul.wide.s32 	%rd11817, %r7961, 8;
	add.s64 	%rd11818, %rd18237, %rd11817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7962,%dummy}, %rd11805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7963}, %rd11805;
	}
	shf.r.wrap.b32 	%r7964, %r7963, %r7962, 14;
	shf.r.wrap.b32 	%r7965, %r7962, %r7963, 14;
	mov.b64 	%rd11819, {%r7965, %r7964};
	shf.r.wrap.b32 	%r7966, %r7963, %r7962, 18;
	shf.r.wrap.b32 	%r7967, %r7962, %r7963, 18;
	mov.b64 	%rd11820, {%r7967, %r7966};
	xor.b64  	%rd11821, %rd11820, %rd11819;
	shf.l.wrap.b32 	%r7968, %r7962, %r7963, 23;
	shf.l.wrap.b32 	%r7969, %r7963, %r7962, 23;
	mov.b64 	%rd11822, {%r7969, %r7968};
	xor.b64  	%rd11823, %rd11821, %rd11822;
	xor.b64  	%rd11824, %rd11778, %rd11751;
	and.b64  	%rd11825, %rd11805, %rd11824;
	xor.b64  	%rd11826, %rd11825, %rd11751;
	add.s64 	%rd11827, %rd11724, %rd18535;
	ld.const.u64 	%rd11828, [%rd11818];
	add.s64 	%rd11829, %rd11827, %rd11828;
	add.s64 	%rd11830, %rd11829, %rd11826;
	add.s64 	%rd11831, %rd11830, %rd11823;
	add.s64 	%rd11832, %rd11831, %rd11735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7970,%dummy}, %rd11816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7971}, %rd11816;
	}
	shf.r.wrap.b32 	%r7972, %r7971, %r7970, 28;
	shf.r.wrap.b32 	%r7973, %r7970, %r7971, 28;
	mov.b64 	%rd11833, {%r7973, %r7972};
	shf.l.wrap.b32 	%r7974, %r7970, %r7971, 30;
	shf.l.wrap.b32 	%r7975, %r7971, %r7970, 30;
	mov.b64 	%rd11834, {%r7975, %r7974};
	xor.b64  	%rd11835, %rd11834, %rd11833;
	shf.l.wrap.b32 	%r7976, %r7970, %r7971, 25;
	shf.l.wrap.b32 	%r7977, %r7971, %r7970, 25;
	mov.b64 	%rd11836, {%r7977, %r7976};
	xor.b64  	%rd11837, %rd11835, %rd11836;
	and.b64  	%rd11838, %rd11816, %rd11789;
	xor.b64  	%rd11839, %rd11816, %rd11789;
	and.b64  	%rd11840, %rd11839, %rd11762;
	or.b64  	%rd11841, %rd11840, %rd11838;
	add.s64 	%rd11842, %rd11831, %rd11841;
	add.s64 	%rd11843, %rd11842, %rd11837;
	add.s32 	%r7978, %r12660, 10;
	mul.wide.s32 	%rd11844, %r7978, 8;
	add.s64 	%rd11845, %rd18237, %rd11844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7979,%dummy}, %rd11832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7980}, %rd11832;
	}
	shf.r.wrap.b32 	%r7981, %r7980, %r7979, 14;
	shf.r.wrap.b32 	%r7982, %r7979, %r7980, 14;
	mov.b64 	%rd11846, {%r7982, %r7981};
	shf.r.wrap.b32 	%r7983, %r7980, %r7979, 18;
	shf.r.wrap.b32 	%r7984, %r7979, %r7980, 18;
	mov.b64 	%rd11847, {%r7984, %r7983};
	xor.b64  	%rd11848, %rd11847, %rd11846;
	shf.l.wrap.b32 	%r7985, %r7979, %r7980, 23;
	shf.l.wrap.b32 	%r7986, %r7980, %r7979, 23;
	mov.b64 	%rd11849, {%r7986, %r7985};
	xor.b64  	%rd11850, %rd11848, %rd11849;
	xor.b64  	%rd11851, %rd11805, %rd11778;
	and.b64  	%rd11852, %rd11832, %rd11851;
	xor.b64  	%rd11853, %rd11852, %rd11778;
	add.s64 	%rd11854, %rd11751, %rd18534;
	ld.const.u64 	%rd11855, [%rd11845];
	add.s64 	%rd11856, %rd11854, %rd11855;
	add.s64 	%rd11857, %rd11856, %rd11853;
	add.s64 	%rd11858, %rd11857, %rd11850;
	add.s64 	%rd11859, %rd11858, %rd11762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7987,%dummy}, %rd11843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7988}, %rd11843;
	}
	shf.r.wrap.b32 	%r7989, %r7988, %r7987, 28;
	shf.r.wrap.b32 	%r7990, %r7987, %r7988, 28;
	mov.b64 	%rd11860, {%r7990, %r7989};
	shf.l.wrap.b32 	%r7991, %r7987, %r7988, 30;
	shf.l.wrap.b32 	%r7992, %r7988, %r7987, 30;
	mov.b64 	%rd11861, {%r7992, %r7991};
	xor.b64  	%rd11862, %rd11861, %rd11860;
	shf.l.wrap.b32 	%r7993, %r7987, %r7988, 25;
	shf.l.wrap.b32 	%r7994, %r7988, %r7987, 25;
	mov.b64 	%rd11863, {%r7994, %r7993};
	xor.b64  	%rd11864, %rd11862, %rd11863;
	and.b64  	%rd11865, %rd11843, %rd11816;
	xor.b64  	%rd11866, %rd11843, %rd11816;
	and.b64  	%rd11867, %rd11866, %rd11789;
	or.b64  	%rd11868, %rd11867, %rd11865;
	add.s64 	%rd11869, %rd11858, %rd11868;
	add.s64 	%rd11870, %rd11869, %rd11864;
	add.s32 	%r7995, %r12660, 11;
	mul.wide.s32 	%rd11871, %r7995, 8;
	add.s64 	%rd11872, %rd18237, %rd11871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7996,%dummy}, %rd11859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd11859;
	}
	shf.r.wrap.b32 	%r7998, %r7997, %r7996, 14;
	shf.r.wrap.b32 	%r7999, %r7996, %r7997, 14;
	mov.b64 	%rd11873, {%r7999, %r7998};
	shf.r.wrap.b32 	%r8000, %r7997, %r7996, 18;
	shf.r.wrap.b32 	%r8001, %r7996, %r7997, 18;
	mov.b64 	%rd11874, {%r8001, %r8000};
	xor.b64  	%rd11875, %rd11874, %rd11873;
	shf.l.wrap.b32 	%r8002, %r7996, %r7997, 23;
	shf.l.wrap.b32 	%r8003, %r7997, %r7996, 23;
	mov.b64 	%rd11876, {%r8003, %r8002};
	xor.b64  	%rd11877, %rd11875, %rd11876;
	xor.b64  	%rd11878, %rd11832, %rd11805;
	and.b64  	%rd11879, %rd11859, %rd11878;
	xor.b64  	%rd11880, %rd11879, %rd11805;
	add.s64 	%rd11881, %rd11778, %rd18533;
	ld.const.u64 	%rd11882, [%rd11872];
	add.s64 	%rd11883, %rd11881, %rd11882;
	add.s64 	%rd11884, %rd11883, %rd11880;
	add.s64 	%rd11885, %rd11884, %rd11877;
	add.s64 	%rd11886, %rd11885, %rd11789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8004,%dummy}, %rd11870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8005}, %rd11870;
	}
	shf.r.wrap.b32 	%r8006, %r8005, %r8004, 28;
	shf.r.wrap.b32 	%r8007, %r8004, %r8005, 28;
	mov.b64 	%rd11887, {%r8007, %r8006};
	shf.l.wrap.b32 	%r8008, %r8004, %r8005, 30;
	shf.l.wrap.b32 	%r8009, %r8005, %r8004, 30;
	mov.b64 	%rd11888, {%r8009, %r8008};
	xor.b64  	%rd11889, %rd11888, %rd11887;
	shf.l.wrap.b32 	%r8010, %r8004, %r8005, 25;
	shf.l.wrap.b32 	%r8011, %r8005, %r8004, 25;
	mov.b64 	%rd11890, {%r8011, %r8010};
	xor.b64  	%rd11891, %rd11889, %rd11890;
	and.b64  	%rd11892, %rd11870, %rd11843;
	xor.b64  	%rd11893, %rd11870, %rd11843;
	and.b64  	%rd11894, %rd11893, %rd11816;
	or.b64  	%rd11895, %rd11894, %rd11892;
	add.s64 	%rd11896, %rd11885, %rd11895;
	add.s64 	%rd11897, %rd11896, %rd11891;
	add.s32 	%r8012, %r12660, 12;
	mul.wide.s32 	%rd11898, %r8012, 8;
	add.s64 	%rd11899, %rd18237, %rd11898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8013,%dummy}, %rd11886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8014}, %rd11886;
	}
	shf.r.wrap.b32 	%r8015, %r8014, %r8013, 14;
	shf.r.wrap.b32 	%r8016, %r8013, %r8014, 14;
	mov.b64 	%rd11900, {%r8016, %r8015};
	shf.r.wrap.b32 	%r8017, %r8014, %r8013, 18;
	shf.r.wrap.b32 	%r8018, %r8013, %r8014, 18;
	mov.b64 	%rd11901, {%r8018, %r8017};
	xor.b64  	%rd11902, %rd11901, %rd11900;
	shf.l.wrap.b32 	%r8019, %r8013, %r8014, 23;
	shf.l.wrap.b32 	%r8020, %r8014, %r8013, 23;
	mov.b64 	%rd11903, {%r8020, %r8019};
	xor.b64  	%rd11904, %rd11902, %rd11903;
	xor.b64  	%rd11905, %rd11859, %rd11832;
	and.b64  	%rd11906, %rd11886, %rd11905;
	xor.b64  	%rd11907, %rd11906, %rd11832;
	add.s64 	%rd11908, %rd11805, %rd18532;
	ld.const.u64 	%rd11909, [%rd11899];
	add.s64 	%rd11910, %rd11908, %rd11909;
	add.s64 	%rd11911, %rd11910, %rd11907;
	add.s64 	%rd11912, %rd11911, %rd11904;
	add.s64 	%rd18544, %rd11912, %rd11816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8021,%dummy}, %rd11897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8022}, %rd11897;
	}
	shf.r.wrap.b32 	%r8023, %r8022, %r8021, 28;
	shf.r.wrap.b32 	%r8024, %r8021, %r8022, 28;
	mov.b64 	%rd11913, {%r8024, %r8023};
	shf.l.wrap.b32 	%r8025, %r8021, %r8022, 30;
	shf.l.wrap.b32 	%r8026, %r8022, %r8021, 30;
	mov.b64 	%rd11914, {%r8026, %r8025};
	xor.b64  	%rd11915, %rd11914, %rd11913;
	shf.l.wrap.b32 	%r8027, %r8021, %r8022, 25;
	shf.l.wrap.b32 	%r8028, %r8022, %r8021, 25;
	mov.b64 	%rd11916, {%r8028, %r8027};
	xor.b64  	%rd11917, %rd11915, %rd11916;
	and.b64  	%rd11918, %rd11897, %rd11870;
	xor.b64  	%rd11919, %rd11897, %rd11870;
	and.b64  	%rd11920, %rd11919, %rd11843;
	or.b64  	%rd11921, %rd11920, %rd11918;
	add.s64 	%rd11922, %rd11912, %rd11921;
	add.s64 	%rd18540, %rd11922, %rd11917;
	add.s32 	%r8029, %r12660, 13;
	mul.wide.s32 	%rd11923, %r8029, 8;
	add.s64 	%rd11924, %rd18237, %rd11923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8030,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8031}, %rd18544;
	}
	shf.r.wrap.b32 	%r8032, %r8031, %r8030, 14;
	shf.r.wrap.b32 	%r8033, %r8030, %r8031, 14;
	mov.b64 	%rd11925, {%r8033, %r8032};
	shf.r.wrap.b32 	%r8034, %r8031, %r8030, 18;
	shf.r.wrap.b32 	%r8035, %r8030, %r8031, 18;
	mov.b64 	%rd11926, {%r8035, %r8034};
	xor.b64  	%rd11927, %rd11926, %rd11925;
	shf.l.wrap.b32 	%r8036, %r8030, %r8031, 23;
	shf.l.wrap.b32 	%r8037, %r8031, %r8030, 23;
	mov.b64 	%rd11928, {%r8037, %r8036};
	xor.b64  	%rd11929, %rd11927, %rd11928;
	xor.b64  	%rd11930, %rd11886, %rd11859;
	and.b64  	%rd11931, %rd18544, %rd11930;
	xor.b64  	%rd11932, %rd11931, %rd11859;
	add.s64 	%rd11933, %rd11832, %rd18531;
	ld.const.u64 	%rd11934, [%rd11924];
	add.s64 	%rd11935, %rd11933, %rd11934;
	add.s64 	%rd11936, %rd11935, %rd11932;
	add.s64 	%rd11937, %rd11936, %rd11929;
	add.s64 	%rd18543, %rd11937, %rd11843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8038,%dummy}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8039}, %rd18540;
	}
	shf.r.wrap.b32 	%r8040, %r8039, %r8038, 28;
	shf.r.wrap.b32 	%r8041, %r8038, %r8039, 28;
	mov.b64 	%rd11938, {%r8041, %r8040};
	shf.l.wrap.b32 	%r8042, %r8038, %r8039, 30;
	shf.l.wrap.b32 	%r8043, %r8039, %r8038, 30;
	mov.b64 	%rd11939, {%r8043, %r8042};
	xor.b64  	%rd11940, %rd11939, %rd11938;
	shf.l.wrap.b32 	%r8044, %r8038, %r8039, 25;
	shf.l.wrap.b32 	%r8045, %r8039, %r8038, 25;
	mov.b64 	%rd11941, {%r8045, %r8044};
	xor.b64  	%rd11942, %rd11940, %rd11941;
	and.b64  	%rd11943, %rd18540, %rd11897;
	xor.b64  	%rd11944, %rd18540, %rd11897;
	and.b64  	%rd11945, %rd11944, %rd11870;
	or.b64  	%rd11946, %rd11945, %rd11943;
	add.s64 	%rd11947, %rd11937, %rd11946;
	add.s64 	%rd18539, %rd11947, %rd11942;
	add.s32 	%r8046, %r12660, 14;
	mul.wide.s32 	%rd11948, %r8046, 8;
	add.s64 	%rd11949, %rd18237, %rd11948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8047,%dummy}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8048}, %rd18543;
	}
	shf.r.wrap.b32 	%r8049, %r8048, %r8047, 14;
	shf.r.wrap.b32 	%r8050, %r8047, %r8048, 14;
	mov.b64 	%rd11950, {%r8050, %r8049};
	shf.r.wrap.b32 	%r8051, %r8048, %r8047, 18;
	shf.r.wrap.b32 	%r8052, %r8047, %r8048, 18;
	mov.b64 	%rd11951, {%r8052, %r8051};
	xor.b64  	%rd11952, %rd11951, %rd11950;
	shf.l.wrap.b32 	%r8053, %r8047, %r8048, 23;
	shf.l.wrap.b32 	%r8054, %r8048, %r8047, 23;
	mov.b64 	%rd11953, {%r8054, %r8053};
	xor.b64  	%rd11954, %rd11952, %rd11953;
	xor.b64  	%rd11955, %rd18544, %rd11886;
	and.b64  	%rd11956, %rd18543, %rd11955;
	xor.b64  	%rd11957, %rd11956, %rd11886;
	add.s64 	%rd11958, %rd11859, %rd18530;
	ld.const.u64 	%rd11959, [%rd11949];
	add.s64 	%rd11960, %rd11958, %rd11959;
	add.s64 	%rd11961, %rd11960, %rd11957;
	add.s64 	%rd11962, %rd11961, %rd11954;
	add.s64 	%rd18542, %rd11962, %rd11870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8055,%dummy}, %rd18539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8056}, %rd18539;
	}
	shf.r.wrap.b32 	%r8057, %r8056, %r8055, 28;
	shf.r.wrap.b32 	%r8058, %r8055, %r8056, 28;
	mov.b64 	%rd11963, {%r8058, %r8057};
	shf.l.wrap.b32 	%r8059, %r8055, %r8056, 30;
	shf.l.wrap.b32 	%r8060, %r8056, %r8055, 30;
	mov.b64 	%rd11964, {%r8060, %r8059};
	xor.b64  	%rd11965, %rd11964, %rd11963;
	shf.l.wrap.b32 	%r8061, %r8055, %r8056, 25;
	shf.l.wrap.b32 	%r8062, %r8056, %r8055, 25;
	mov.b64 	%rd11966, {%r8062, %r8061};
	xor.b64  	%rd11967, %rd11965, %rd11966;
	and.b64  	%rd11968, %rd18539, %rd18540;
	xor.b64  	%rd11969, %rd18539, %rd18540;
	and.b64  	%rd11970, %rd11969, %rd11897;
	or.b64  	%rd11971, %rd11970, %rd11968;
	add.s64 	%rd11972, %rd11962, %rd11971;
	add.s64 	%rd18538, %rd11972, %rd11967;
	add.s32 	%r8063, %r12660, 15;
	mul.wide.s32 	%rd11973, %r8063, 8;
	add.s64 	%rd11974, %rd18237, %rd11973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8064,%dummy}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8065}, %rd18542;
	}
	shf.r.wrap.b32 	%r8066, %r8065, %r8064, 14;
	shf.r.wrap.b32 	%r8067, %r8064, %r8065, 14;
	mov.b64 	%rd11975, {%r8067, %r8066};
	shf.r.wrap.b32 	%r8068, %r8065, %r8064, 18;
	shf.r.wrap.b32 	%r8069, %r8064, %r8065, 18;
	mov.b64 	%rd11976, {%r8069, %r8068};
	xor.b64  	%rd11977, %rd11976, %rd11975;
	shf.l.wrap.b32 	%r8070, %r8064, %r8065, 23;
	shf.l.wrap.b32 	%r8071, %r8065, %r8064, 23;
	mov.b64 	%rd11978, {%r8071, %r8070};
	xor.b64  	%rd11979, %rd11977, %rd11978;
	xor.b64  	%rd11980, %rd18543, %rd18544;
	and.b64  	%rd11981, %rd18542, %rd11980;
	xor.b64  	%rd11982, %rd11981, %rd18544;
	add.s64 	%rd11983, %rd11886, %rd18529;
	ld.const.u64 	%rd11984, [%rd11974];
	add.s64 	%rd11985, %rd11983, %rd11984;
	add.s64 	%rd11986, %rd11985, %rd11982;
	add.s64 	%rd11987, %rd11986, %rd11979;
	add.s64 	%rd18541, %rd11987, %rd11897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8072,%dummy}, %rd18538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8073}, %rd18538;
	}
	shf.r.wrap.b32 	%r8074, %r8073, %r8072, 28;
	shf.r.wrap.b32 	%r8075, %r8072, %r8073, 28;
	mov.b64 	%rd11988, {%r8075, %r8074};
	shf.l.wrap.b32 	%r8076, %r8072, %r8073, 30;
	shf.l.wrap.b32 	%r8077, %r8073, %r8072, 30;
	mov.b64 	%rd11989, {%r8077, %r8076};
	xor.b64  	%rd11990, %rd11989, %rd11988;
	shf.l.wrap.b32 	%r8078, %r8072, %r8073, 25;
	shf.l.wrap.b32 	%r8079, %r8073, %r8072, 25;
	mov.b64 	%rd11991, {%r8079, %r8078};
	xor.b64  	%rd11992, %rd11990, %rd11991;
	and.b64  	%rd11993, %rd18538, %rd18539;
	xor.b64  	%rd11994, %rd18538, %rd18539;
	and.b64  	%rd11995, %rd11994, %rd18540;
	or.b64  	%rd11996, %rd11995, %rd11993;
	add.s64 	%rd11997, %rd11987, %rd11996;
	add.s64 	%rd18537, %rd11997, %rd11992;
	add.s32 	%r12660, %r12660, 16;
	setp.lt.s32	%p112, %r12660, 80;
	@%p112 bra 	BB0_184;

	setp.eq.s32	%p166, %r2, 0;
	ld.param.u64 	%rd18220, [m01800_init_param_4];
	mov.u64 	%rd18219, 6620516959819538809;
	mov.u64 	%rd18211, 2270897969802886507;
	mov.u64 	%rd18210, -7276294671716946913;
	mov.u64 	%rd18209, 5840696475078001361;
	mov.u64 	%rd18208, -6534734903238641935;
	mov.u64 	%rd18207, 4354685564936845355;
	mov.u64 	%rd18206, -4942790177534073029;
	mov.u64 	%rd18205, 7640891576956012808;
	mov.u32 	%r12676, 0;
	mul.wide.s32 	%rd11998, %r1, 672;
	add.s64 	%rd11999, %rd18220, %rd11998;
	add.s64 	%rd919, %rd18537, %rd18513;
	st.global.u64 	[%rd11999], %rd919;
	add.s64 	%rd12000, %rd18538, %rd18512;
	st.global.u64 	[%rd11999+8], %rd12000;
	add.s64 	%rd12001, %rd18539, %rd18511;
	st.global.u64 	[%rd11999+16], %rd12001;
	add.s64 	%rd12002, %rd18540, %rd18510;
	st.global.u64 	[%rd11999+24], %rd12002;
	add.s64 	%rd12003, %rd18541, %rd18509;
	st.global.u64 	[%rd11999+32], %rd12003;
	add.s64 	%rd12004, %rd18542, %rd18508;
	st.global.u64 	[%rd11999+40], %rd12004;
	add.s64 	%rd12005, %rd18543, %rd18507;
	st.global.u64 	[%rd11999+48], %rd12005;
	add.s64 	%rd12006, %rd18544, %rd18506;
	st.global.u64 	[%rd11999+56], %rd12006;
	st.local.u64 	[%rd1], %rd18205;
	st.local.u64 	[%rd1+8], %rd18206;
	st.local.u64 	[%rd1+16], %rd18207;
	st.local.u64 	[%rd1+24], %rd18208;
	st.local.u64 	[%rd1+32], %rd18209;
	st.local.u64 	[%rd1+40], %rd18210;
	st.local.u64 	[%rd1+48], %rd18211;
	st.local.u64 	[%rd1+56], %rd18219;
	st.local.u32 	[%rd1+192], %r12676;
	@%p166 bra 	BB0_206;

	add.s64 	%rd921, %rd1460, 7;
	mov.u32 	%r8082, 0;
	mov.u32 	%r12661, %r8082;
	mov.u32 	%r12662, %r8082;
	bra.uni 	BB0_187;

BB0_279:
	ld.local.u32 	%r12661, [%rd1+192];

BB0_187:
	add.s32 	%r8084, %r12661, %r2;
	st.local.u32 	[%rd1+192], %r8084;
	and.b32  	%r274, %r12661, 127;
	add.s32 	%r8085, %r274, %r2;
	setp.lt.s32	%p114, %r8085, 128;
	@%p114 bra 	BB0_188;
	bra.uni 	BB0_190;

BB0_188:
	mov.u32 	%r12675, %r8082;

BB0_189:
	xor.b32  	%r8830, %r12675, 7;
	cvt.s64.s32	%rd13047, %r8830;
	add.s64 	%rd13048, %rd1460, %rd13047;
	ld.local.u8 	%rs233, [%rd13048];
	xor.b32  	%r8831, %r274, 7;
	cvt.s64.s32	%rd13049, %r8831;
	add.s64 	%rd13050, %rd90, %rd13049;
	st.local.u8 	[%rd13050], %rs233;
	add.s32 	%r274, %r274, 1;
	add.s32 	%r12675, %r12675, 1;
	setp.lt.s32	%p123, %r12675, %r2;
	@%p123 bra 	BB0_189;
	bra.uni 	BB0_204;

BB0_190:
	sub.s32 	%r275, %r1990, %r274;
	mov.u32 	%r8088, 1;
	max.u32 	%r276, %r275, %r8088;
	and.b32  	%r277, %r276, 3;
	setp.eq.s32	%p115, %r277, 0;
	mov.u32 	%r12669, 0;
	@%p115 bra 	BB0_197;

	setp.eq.s32	%p116, %r277, 1;
	mov.u32 	%r12665, 0;
	@%p116 bra 	BB0_196;

	setp.eq.s32	%p117, %r277, 2;
	mov.u32 	%r8090, 0;
	@%p117 bra 	BB0_193;
	bra.uni 	BB0_194;

BB0_193:
	mov.u32 	%r8088, %r8090;
	bra.uni 	BB0_195;

BB0_194:
	ld.local.u8 	%rs225, [%rd921];
	xor.b32  	%r8092, %r274, 7;
	cvt.u64.u32	%rd12016, %r8092;
	add.s64 	%rd12017, %rd90, %rd12016;
	st.local.u8 	[%rd12017], %rs225;
	add.s32 	%r274, %r274, 1;

BB0_195:
	xor.b32  	%r8093, %r8088, 7;
	cvt.u64.u32	%rd12018, %r8093;
	add.s64 	%rd12019, %rd1460, %rd12018;
	ld.local.u8 	%rs226, [%rd12019];
	xor.b32  	%r8094, %r274, 7;
	cvt.s64.s32	%rd12020, %r8094;
	add.s64 	%rd12021, %rd90, %rd12020;
	st.local.u8 	[%rd12021], %rs226;
	add.s32 	%r274, %r274, 1;
	add.s32 	%r12665, %r8088, 1;

BB0_196:
	xor.b32  	%r8095, %r12665, 7;
	cvt.s64.s32	%rd12022, %r8095;
	add.s64 	%rd12023, %rd1460, %rd12022;
	ld.local.u8 	%rs227, [%rd12023];
	xor.b32  	%r8096, %r274, 7;
	cvt.s64.s32	%rd12024, %r8096;
	add.s64 	%rd12025, %rd90, %rd12024;
	st.local.u8 	[%rd12025], %rs227;
	add.s32 	%r274, %r274, 1;
	add.s32 	%r12669, %r12665, 1;

BB0_197:
	setp.lt.u32	%p118, %r276, 4;
	@%p118 bra 	BB0_199;

BB0_198:
	xor.b32  	%r8097, %r12669, 7;
	cvt.s64.s32	%rd12026, %r8097;
	add.s64 	%rd12027, %rd1460, %rd12026;
	ld.local.u8 	%rs228, [%rd12027];
	xor.b32  	%r8098, %r274, 7;
	cvt.s64.s32	%rd12028, %r8098;
	add.s64 	%rd12029, %rd90, %rd12028;
	st.local.u8 	[%rd12029], %rs228;
	add.s32 	%r8099, %r12669, 1;
	xor.b32  	%r8100, %r8099, 7;
	cvt.s64.s32	%rd12030, %r8100;
	add.s64 	%rd12031, %rd1460, %rd12030;
	ld.local.u8 	%rs229, [%rd12031];
	add.s32 	%r8101, %r274, 1;
	xor.b32  	%r8102, %r8101, 7;
	cvt.s64.s32	%rd12032, %r8102;
	add.s64 	%rd12033, %rd90, %rd12032;
	st.local.u8 	[%rd12033], %rs229;
	add.s32 	%r8103, %r12669, 2;
	xor.b32  	%r8104, %r8103, 7;
	cvt.s64.s32	%rd12034, %r8104;
	add.s64 	%rd12035, %rd1460, %rd12034;
	ld.local.u8 	%rs230, [%rd12035];
	add.s32 	%r8105, %r274, 2;
	xor.b32  	%r8106, %r8105, 7;
	cvt.s64.s32	%rd12036, %r8106;
	add.s64 	%rd12037, %rd90, %rd12036;
	st.local.u8 	[%rd12037], %rs230;
	add.s32 	%r8107, %r12669, 3;
	xor.b32  	%r8108, %r8107, 7;
	cvt.s64.s32	%rd12038, %r8108;
	add.s64 	%rd12039, %rd1460, %rd12038;
	ld.local.u8 	%rs231, [%rd12039];
	add.s32 	%r8109, %r274, 3;
	xor.b32  	%r8110, %r8109, 7;
	cvt.s64.s32	%rd12040, %r8110;
	add.s64 	%rd12041, %rd90, %rd12040;
	st.local.u8 	[%rd12041], %rs231;
	add.s32 	%r12669, %r12669, 4;
	setp.lt.s32	%p119, %r12669, %r275;
	add.s32 	%r274, %r274, 4;
	@%p119 bra 	BB0_198;

BB0_199:
	ld.local.u64 	%rd922, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8112,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8113}, %rd922;
	}
	shf.r.wrap.b32 	%r8114, %r8113, %r8112, 14;
	shf.r.wrap.b32 	%r8115, %r8112, %r8113, 14;
	mov.b64 	%rd12042, {%r8115, %r8114};
	shf.r.wrap.b32 	%r8116, %r8113, %r8112, 18;
	shf.r.wrap.b32 	%r8117, %r8112, %r8113, 18;
	mov.b64 	%rd12043, {%r8117, %r8116};
	xor.b64  	%rd12044, %rd12043, %rd12042;
	shf.l.wrap.b32 	%r8118, %r8112, %r8113, 23;
	shf.l.wrap.b32 	%r8119, %r8113, %r8112, 23;
	mov.b64 	%rd12045, {%r8119, %r8118};
	xor.b64  	%rd12046, %rd12044, %rd12045;
	ld.local.u64 	%rd923, [%rd1+48];
	ld.local.u64 	%rd924, [%rd1+40];
	xor.b64  	%rd12047, %rd923, %rd924;
	and.b64  	%rd12048, %rd12047, %rd922;
	xor.b64  	%rd12049, %rd12048, %rd923;
	ld.local.u64 	%rd925, [%rd1+56];
	ld.local.u64 	%rd18569, [%rd1+64];
	add.s64 	%rd12050, %rd925, %rd18569;
	add.s64 	%rd12051, %rd12050, %rd18338;
	add.s64 	%rd12052, %rd12051, %rd12049;
	add.s64 	%rd12053, %rd12052, %rd12046;
	ld.local.u64 	%rd927, [%rd1+24];
	add.s64 	%rd12054, %rd12053, %rd927;
	ld.local.u64 	%rd928, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8120,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8121}, %rd928;
	}
	shf.r.wrap.b32 	%r8122, %r8121, %r8120, 28;
	shf.r.wrap.b32 	%r8123, %r8120, %r8121, 28;
	mov.b64 	%rd12055, {%r8123, %r8122};
	shf.l.wrap.b32 	%r8124, %r8120, %r8121, 30;
	shf.l.wrap.b32 	%r8125, %r8121, %r8120, 30;
	mov.b64 	%rd12056, {%r8125, %r8124};
	xor.b64  	%rd12057, %rd12056, %rd12055;
	shf.l.wrap.b32 	%r8126, %r8120, %r8121, 25;
	shf.l.wrap.b32 	%r8127, %r8121, %r8120, 25;
	mov.b64 	%rd12058, {%r8127, %r8126};
	xor.b64  	%rd12059, %rd12057, %rd12058;
	ld.local.u64 	%rd929, [%rd1+8];
	and.b64  	%rd12060, %rd929, %rd928;
	xor.b64  	%rd12061, %rd929, %rd928;
	ld.local.u64 	%rd930, [%rd1+16];
	and.b64  	%rd12062, %rd930, %rd12061;
	or.b64  	%rd12063, %rd12062, %rd12060;
	add.s64 	%rd12064, %rd12053, %rd12063;
	add.s64 	%rd12065, %rd12064, %rd12059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8128,%dummy}, %rd12054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8129}, %rd12054;
	}
	shf.r.wrap.b32 	%r8130, %r8129, %r8128, 14;
	shf.r.wrap.b32 	%r8131, %r8128, %r8129, 14;
	mov.b64 	%rd12066, {%r8131, %r8130};
	shf.r.wrap.b32 	%r8132, %r8129, %r8128, 18;
	shf.r.wrap.b32 	%r8133, %r8128, %r8129, 18;
	mov.b64 	%rd12067, {%r8133, %r8132};
	xor.b64  	%rd12068, %rd12067, %rd12066;
	shf.l.wrap.b32 	%r8134, %r8128, %r8129, 23;
	shf.l.wrap.b32 	%r8135, %r8129, %r8128, 23;
	mov.b64 	%rd12069, {%r8135, %r8134};
	xor.b64  	%rd12070, %rd12068, %rd12069;
	xor.b64  	%rd12071, %rd924, %rd922;
	and.b64  	%rd12072, %rd12054, %rd12071;
	xor.b64  	%rd12073, %rd12072, %rd924;
	ld.local.u64 	%rd18570, [%rd1+72];
	add.s64 	%rd12074, %rd923, %rd18570;
	add.s64 	%rd12075, %rd12074, %rd18337;
	add.s64 	%rd12076, %rd12075, %rd12073;
	add.s64 	%rd12077, %rd12076, %rd12070;
	add.s64 	%rd12078, %rd12077, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8136,%dummy}, %rd12065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8137}, %rd12065;
	}
	shf.r.wrap.b32 	%r8138, %r8137, %r8136, 28;
	shf.r.wrap.b32 	%r8139, %r8136, %r8137, 28;
	mov.b64 	%rd12079, {%r8139, %r8138};
	shf.l.wrap.b32 	%r8140, %r8136, %r8137, 30;
	shf.l.wrap.b32 	%r8141, %r8137, %r8136, 30;
	mov.b64 	%rd12080, {%r8141, %r8140};
	xor.b64  	%rd12081, %rd12080, %rd12079;
	shf.l.wrap.b32 	%r8142, %r8136, %r8137, 25;
	shf.l.wrap.b32 	%r8143, %r8137, %r8136, 25;
	mov.b64 	%rd12082, {%r8143, %r8142};
	xor.b64  	%rd12083, %rd12081, %rd12082;
	and.b64  	%rd12084, %rd12065, %rd928;
	xor.b64  	%rd12085, %rd12065, %rd928;
	and.b64  	%rd12086, %rd12085, %rd929;
	or.b64  	%rd12087, %rd12086, %rd12084;
	add.s64 	%rd12088, %rd12077, %rd12087;
	add.s64 	%rd12089, %rd12088, %rd12083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8144,%dummy}, %rd12078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8145}, %rd12078;
	}
	shf.r.wrap.b32 	%r8146, %r8145, %r8144, 14;
	shf.r.wrap.b32 	%r8147, %r8144, %r8145, 14;
	mov.b64 	%rd12090, {%r8147, %r8146};
	shf.r.wrap.b32 	%r8148, %r8145, %r8144, 18;
	shf.r.wrap.b32 	%r8149, %r8144, %r8145, 18;
	mov.b64 	%rd12091, {%r8149, %r8148};
	xor.b64  	%rd12092, %rd12091, %rd12090;
	shf.l.wrap.b32 	%r8150, %r8144, %r8145, 23;
	shf.l.wrap.b32 	%r8151, %r8145, %r8144, 23;
	mov.b64 	%rd12093, {%r8151, %r8150};
	xor.b64  	%rd12094, %rd12092, %rd12093;
	xor.b64  	%rd12095, %rd12054, %rd922;
	and.b64  	%rd12096, %rd12078, %rd12095;
	xor.b64  	%rd12097, %rd12096, %rd922;
	ld.local.u64 	%rd18571, [%rd1+80];
	add.s64 	%rd12098, %rd924, %rd18571;
	add.s64 	%rd12099, %rd12098, %rd18336;
	add.s64 	%rd12100, %rd12099, %rd12097;
	add.s64 	%rd12101, %rd12100, %rd12094;
	add.s64 	%rd12102, %rd12101, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8152,%dummy}, %rd12089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8153}, %rd12089;
	}
	shf.r.wrap.b32 	%r8154, %r8153, %r8152, 28;
	shf.r.wrap.b32 	%r8155, %r8152, %r8153, 28;
	mov.b64 	%rd12103, {%r8155, %r8154};
	shf.l.wrap.b32 	%r8156, %r8152, %r8153, 30;
	shf.l.wrap.b32 	%r8157, %r8153, %r8152, 30;
	mov.b64 	%rd12104, {%r8157, %r8156};
	xor.b64  	%rd12105, %rd12104, %rd12103;
	shf.l.wrap.b32 	%r8158, %r8152, %r8153, 25;
	shf.l.wrap.b32 	%r8159, %r8153, %r8152, 25;
	mov.b64 	%rd12106, {%r8159, %r8158};
	xor.b64  	%rd12107, %rd12105, %rd12106;
	and.b64  	%rd12108, %rd12089, %rd12065;
	xor.b64  	%rd12109, %rd12089, %rd12065;
	and.b64  	%rd12110, %rd12109, %rd928;
	or.b64  	%rd12111, %rd12110, %rd12108;
	add.s64 	%rd12112, %rd12101, %rd12111;
	add.s64 	%rd12113, %rd12112, %rd12107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8160,%dummy}, %rd12102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8161}, %rd12102;
	}
	shf.r.wrap.b32 	%r8162, %r8161, %r8160, 14;
	shf.r.wrap.b32 	%r8163, %r8160, %r8161, 14;
	mov.b64 	%rd12114, {%r8163, %r8162};
	shf.r.wrap.b32 	%r8164, %r8161, %r8160, 18;
	shf.r.wrap.b32 	%r8165, %r8160, %r8161, 18;
	mov.b64 	%rd12115, {%r8165, %r8164};
	xor.b64  	%rd12116, %rd12115, %rd12114;
	shf.l.wrap.b32 	%r8166, %r8160, %r8161, 23;
	shf.l.wrap.b32 	%r8167, %r8161, %r8160, 23;
	mov.b64 	%rd12117, {%r8167, %r8166};
	xor.b64  	%rd12118, %rd12116, %rd12117;
	xor.b64  	%rd12119, %rd12078, %rd12054;
	and.b64  	%rd12120, %rd12102, %rd12119;
	xor.b64  	%rd12121, %rd12120, %rd12054;
	ld.local.u64 	%rd18572, [%rd1+88];
	add.s64 	%rd12122, %rd922, %rd18572;
	add.s64 	%rd12123, %rd12122, %rd18335;
	add.s64 	%rd12124, %rd12123, %rd12121;
	add.s64 	%rd12125, %rd12124, %rd12118;
	add.s64 	%rd12126, %rd12125, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8168,%dummy}, %rd12113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8169}, %rd12113;
	}
	shf.r.wrap.b32 	%r8170, %r8169, %r8168, 28;
	shf.r.wrap.b32 	%r8171, %r8168, %r8169, 28;
	mov.b64 	%rd12127, {%r8171, %r8170};
	shf.l.wrap.b32 	%r8172, %r8168, %r8169, 30;
	shf.l.wrap.b32 	%r8173, %r8169, %r8168, 30;
	mov.b64 	%rd12128, {%r8173, %r8172};
	xor.b64  	%rd12129, %rd12128, %rd12127;
	shf.l.wrap.b32 	%r8174, %r8168, %r8169, 25;
	shf.l.wrap.b32 	%r8175, %r8169, %r8168, 25;
	mov.b64 	%rd12130, {%r8175, %r8174};
	xor.b64  	%rd12131, %rd12129, %rd12130;
	and.b64  	%rd12132, %rd12113, %rd12089;
	xor.b64  	%rd12133, %rd12113, %rd12089;
	and.b64  	%rd12134, %rd12133, %rd12065;
	or.b64  	%rd12135, %rd12134, %rd12132;
	add.s64 	%rd12136, %rd12125, %rd12135;
	add.s64 	%rd12137, %rd12136, %rd12131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8176,%dummy}, %rd12126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8177}, %rd12126;
	}
	shf.r.wrap.b32 	%r8178, %r8177, %r8176, 14;
	shf.r.wrap.b32 	%r8179, %r8176, %r8177, 14;
	mov.b64 	%rd12138, {%r8179, %r8178};
	shf.r.wrap.b32 	%r8180, %r8177, %r8176, 18;
	shf.r.wrap.b32 	%r8181, %r8176, %r8177, 18;
	mov.b64 	%rd12139, {%r8181, %r8180};
	xor.b64  	%rd12140, %rd12139, %rd12138;
	shf.l.wrap.b32 	%r8182, %r8176, %r8177, 23;
	shf.l.wrap.b32 	%r8183, %r8177, %r8176, 23;
	mov.b64 	%rd12141, {%r8183, %r8182};
	xor.b64  	%rd12142, %rd12140, %rd12141;
	xor.b64  	%rd12143, %rd12102, %rd12078;
	and.b64  	%rd12144, %rd12126, %rd12143;
	xor.b64  	%rd12145, %rd12144, %rd12078;
	ld.local.u64 	%rd18573, [%rd1+96];
	add.s64 	%rd12146, %rd12054, %rd18573;
	add.s64 	%rd12147, %rd12146, %rd18334;
	add.s64 	%rd12148, %rd12147, %rd12145;
	add.s64 	%rd12149, %rd12148, %rd12142;
	add.s64 	%rd12150, %rd12149, %rd12065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8184,%dummy}, %rd12137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8185}, %rd12137;
	}
	shf.r.wrap.b32 	%r8186, %r8185, %r8184, 28;
	shf.r.wrap.b32 	%r8187, %r8184, %r8185, 28;
	mov.b64 	%rd12151, {%r8187, %r8186};
	shf.l.wrap.b32 	%r8188, %r8184, %r8185, 30;
	shf.l.wrap.b32 	%r8189, %r8185, %r8184, 30;
	mov.b64 	%rd12152, {%r8189, %r8188};
	xor.b64  	%rd12153, %rd12152, %rd12151;
	shf.l.wrap.b32 	%r8190, %r8184, %r8185, 25;
	shf.l.wrap.b32 	%r8191, %r8185, %r8184, 25;
	mov.b64 	%rd12154, {%r8191, %r8190};
	xor.b64  	%rd12155, %rd12153, %rd12154;
	and.b64  	%rd12156, %rd12137, %rd12113;
	xor.b64  	%rd12157, %rd12137, %rd12113;
	and.b64  	%rd12158, %rd12157, %rd12089;
	or.b64  	%rd12159, %rd12158, %rd12156;
	add.s64 	%rd12160, %rd12149, %rd12159;
	add.s64 	%rd12161, %rd12160, %rd12155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8192,%dummy}, %rd12150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8193}, %rd12150;
	}
	shf.r.wrap.b32 	%r8194, %r8193, %r8192, 14;
	shf.r.wrap.b32 	%r8195, %r8192, %r8193, 14;
	mov.b64 	%rd12162, {%r8195, %r8194};
	shf.r.wrap.b32 	%r8196, %r8193, %r8192, 18;
	shf.r.wrap.b32 	%r8197, %r8192, %r8193, 18;
	mov.b64 	%rd12163, {%r8197, %r8196};
	xor.b64  	%rd12164, %rd12163, %rd12162;
	shf.l.wrap.b32 	%r8198, %r8192, %r8193, 23;
	shf.l.wrap.b32 	%r8199, %r8193, %r8192, 23;
	mov.b64 	%rd12165, {%r8199, %r8198};
	xor.b64  	%rd12166, %rd12164, %rd12165;
	xor.b64  	%rd12167, %rd12126, %rd12102;
	and.b64  	%rd12168, %rd12150, %rd12167;
	xor.b64  	%rd12169, %rd12168, %rd12102;
	ld.local.u64 	%rd18574, [%rd1+104];
	add.s64 	%rd12170, %rd12078, %rd18574;
	add.s64 	%rd12171, %rd12170, %rd18333;
	add.s64 	%rd12172, %rd12171, %rd12169;
	add.s64 	%rd12173, %rd12172, %rd12166;
	add.s64 	%rd12174, %rd12173, %rd12089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8200,%dummy}, %rd12161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8201}, %rd12161;
	}
	shf.r.wrap.b32 	%r8202, %r8201, %r8200, 28;
	shf.r.wrap.b32 	%r8203, %r8200, %r8201, 28;
	mov.b64 	%rd12175, {%r8203, %r8202};
	shf.l.wrap.b32 	%r8204, %r8200, %r8201, 30;
	shf.l.wrap.b32 	%r8205, %r8201, %r8200, 30;
	mov.b64 	%rd12176, {%r8205, %r8204};
	xor.b64  	%rd12177, %rd12176, %rd12175;
	shf.l.wrap.b32 	%r8206, %r8200, %r8201, 25;
	shf.l.wrap.b32 	%r8207, %r8201, %r8200, 25;
	mov.b64 	%rd12178, {%r8207, %r8206};
	xor.b64  	%rd12179, %rd12177, %rd12178;
	and.b64  	%rd12180, %rd12161, %rd12137;
	xor.b64  	%rd12181, %rd12161, %rd12137;
	and.b64  	%rd12182, %rd12181, %rd12113;
	or.b64  	%rd12183, %rd12182, %rd12180;
	add.s64 	%rd12184, %rd12173, %rd12183;
	add.s64 	%rd12185, %rd12184, %rd12179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8208,%dummy}, %rd12174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8209}, %rd12174;
	}
	shf.r.wrap.b32 	%r8210, %r8209, %r8208, 14;
	shf.r.wrap.b32 	%r8211, %r8208, %r8209, 14;
	mov.b64 	%rd12186, {%r8211, %r8210};
	shf.r.wrap.b32 	%r8212, %r8209, %r8208, 18;
	shf.r.wrap.b32 	%r8213, %r8208, %r8209, 18;
	mov.b64 	%rd12187, {%r8213, %r8212};
	xor.b64  	%rd12188, %rd12187, %rd12186;
	shf.l.wrap.b32 	%r8214, %r8208, %r8209, 23;
	shf.l.wrap.b32 	%r8215, %r8209, %r8208, 23;
	mov.b64 	%rd12189, {%r8215, %r8214};
	xor.b64  	%rd12190, %rd12188, %rd12189;
	xor.b64  	%rd12191, %rd12150, %rd12126;
	and.b64  	%rd12192, %rd12174, %rd12191;
	xor.b64  	%rd12193, %rd12192, %rd12126;
	ld.local.u64 	%rd18575, [%rd1+112];
	add.s64 	%rd12194, %rd12102, %rd18575;
	add.s64 	%rd12195, %rd12194, %rd18332;
	add.s64 	%rd12196, %rd12195, %rd12193;
	add.s64 	%rd12197, %rd12196, %rd12190;
	add.s64 	%rd12198, %rd12197, %rd12113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8216,%dummy}, %rd12185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8217}, %rd12185;
	}
	shf.r.wrap.b32 	%r8218, %r8217, %r8216, 28;
	shf.r.wrap.b32 	%r8219, %r8216, %r8217, 28;
	mov.b64 	%rd12199, {%r8219, %r8218};
	shf.l.wrap.b32 	%r8220, %r8216, %r8217, 30;
	shf.l.wrap.b32 	%r8221, %r8217, %r8216, 30;
	mov.b64 	%rd12200, {%r8221, %r8220};
	xor.b64  	%rd12201, %rd12200, %rd12199;
	shf.l.wrap.b32 	%r8222, %r8216, %r8217, 25;
	shf.l.wrap.b32 	%r8223, %r8217, %r8216, 25;
	mov.b64 	%rd12202, {%r8223, %r8222};
	xor.b64  	%rd12203, %rd12201, %rd12202;
	and.b64  	%rd12204, %rd12185, %rd12161;
	xor.b64  	%rd12205, %rd12185, %rd12161;
	and.b64  	%rd12206, %rd12205, %rd12137;
	or.b64  	%rd12207, %rd12206, %rd12204;
	add.s64 	%rd12208, %rd12197, %rd12207;
	add.s64 	%rd12209, %rd12208, %rd12203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8224,%dummy}, %rd12198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8225}, %rd12198;
	}
	shf.r.wrap.b32 	%r8226, %r8225, %r8224, 14;
	shf.r.wrap.b32 	%r8227, %r8224, %r8225, 14;
	mov.b64 	%rd12210, {%r8227, %r8226};
	shf.r.wrap.b32 	%r8228, %r8225, %r8224, 18;
	shf.r.wrap.b32 	%r8229, %r8224, %r8225, 18;
	mov.b64 	%rd12211, {%r8229, %r8228};
	xor.b64  	%rd12212, %rd12211, %rd12210;
	shf.l.wrap.b32 	%r8230, %r8224, %r8225, 23;
	shf.l.wrap.b32 	%r8231, %r8225, %r8224, 23;
	mov.b64 	%rd12213, {%r8231, %r8230};
	xor.b64  	%rd12214, %rd12212, %rd12213;
	xor.b64  	%rd12215, %rd12174, %rd12150;
	and.b64  	%rd12216, %rd12198, %rd12215;
	xor.b64  	%rd12217, %rd12216, %rd12150;
	ld.local.u64 	%rd18576, [%rd1+120];
	add.s64 	%rd12218, %rd12126, %rd18576;
	add.s64 	%rd12219, %rd12218, %rd18331;
	add.s64 	%rd12220, %rd12219, %rd12217;
	add.s64 	%rd12221, %rd12220, %rd12214;
	add.s64 	%rd12222, %rd12221, %rd12137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8232,%dummy}, %rd12209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8233}, %rd12209;
	}
	shf.r.wrap.b32 	%r8234, %r8233, %r8232, 28;
	shf.r.wrap.b32 	%r8235, %r8232, %r8233, 28;
	mov.b64 	%rd12223, {%r8235, %r8234};
	shf.l.wrap.b32 	%r8236, %r8232, %r8233, 30;
	shf.l.wrap.b32 	%r8237, %r8233, %r8232, 30;
	mov.b64 	%rd12224, {%r8237, %r8236};
	xor.b64  	%rd12225, %rd12224, %rd12223;
	shf.l.wrap.b32 	%r8238, %r8232, %r8233, 25;
	shf.l.wrap.b32 	%r8239, %r8233, %r8232, 25;
	mov.b64 	%rd12226, {%r8239, %r8238};
	xor.b64  	%rd12227, %rd12225, %rd12226;
	and.b64  	%rd12228, %rd12209, %rd12185;
	xor.b64  	%rd12229, %rd12209, %rd12185;
	and.b64  	%rd12230, %rd12229, %rd12161;
	or.b64  	%rd12231, %rd12230, %rd12228;
	add.s64 	%rd12232, %rd12221, %rd12231;
	add.s64 	%rd12233, %rd12232, %rd12227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8240,%dummy}, %rd12222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8241}, %rd12222;
	}
	shf.r.wrap.b32 	%r8242, %r8241, %r8240, 14;
	shf.r.wrap.b32 	%r8243, %r8240, %r8241, 14;
	mov.b64 	%rd12234, {%r8243, %r8242};
	shf.r.wrap.b32 	%r8244, %r8241, %r8240, 18;
	shf.r.wrap.b32 	%r8245, %r8240, %r8241, 18;
	mov.b64 	%rd12235, {%r8245, %r8244};
	xor.b64  	%rd12236, %rd12235, %rd12234;
	shf.l.wrap.b32 	%r8246, %r8240, %r8241, 23;
	shf.l.wrap.b32 	%r8247, %r8241, %r8240, 23;
	mov.b64 	%rd12237, {%r8247, %r8246};
	xor.b64  	%rd12238, %rd12236, %rd12237;
	xor.b64  	%rd12239, %rd12198, %rd12174;
	and.b64  	%rd12240, %rd12222, %rd12239;
	xor.b64  	%rd12241, %rd12240, %rd12174;
	ld.local.u64 	%rd18560, [%rd1+128];
	add.s64 	%rd12242, %rd12150, %rd18560;
	add.s64 	%rd12243, %rd12242, %rd18330;
	add.s64 	%rd12244, %rd12243, %rd12241;
	add.s64 	%rd12245, %rd12244, %rd12238;
	add.s64 	%rd12246, %rd12245, %rd12161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8248,%dummy}, %rd12233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8249}, %rd12233;
	}
	shf.r.wrap.b32 	%r8250, %r8249, %r8248, 28;
	shf.r.wrap.b32 	%r8251, %r8248, %r8249, 28;
	mov.b64 	%rd12247, {%r8251, %r8250};
	shf.l.wrap.b32 	%r8252, %r8248, %r8249, 30;
	shf.l.wrap.b32 	%r8253, %r8249, %r8248, 30;
	mov.b64 	%rd12248, {%r8253, %r8252};
	xor.b64  	%rd12249, %rd12248, %rd12247;
	shf.l.wrap.b32 	%r8254, %r8248, %r8249, 25;
	shf.l.wrap.b32 	%r8255, %r8249, %r8248, 25;
	mov.b64 	%rd12250, {%r8255, %r8254};
	xor.b64  	%rd12251, %rd12249, %rd12250;
	and.b64  	%rd12252, %rd12233, %rd12209;
	xor.b64  	%rd12253, %rd12233, %rd12209;
	and.b64  	%rd12254, %rd12253, %rd12185;
	or.b64  	%rd12255, %rd12254, %rd12252;
	add.s64 	%rd12256, %rd12245, %rd12255;
	add.s64 	%rd12257, %rd12256, %rd12251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8256,%dummy}, %rd12246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8257}, %rd12246;
	}
	shf.r.wrap.b32 	%r8258, %r8257, %r8256, 14;
	shf.r.wrap.b32 	%r8259, %r8256, %r8257, 14;
	mov.b64 	%rd12258, {%r8259, %r8258};
	shf.r.wrap.b32 	%r8260, %r8257, %r8256, 18;
	shf.r.wrap.b32 	%r8261, %r8256, %r8257, 18;
	mov.b64 	%rd12259, {%r8261, %r8260};
	xor.b64  	%rd12260, %rd12259, %rd12258;
	shf.l.wrap.b32 	%r8262, %r8256, %r8257, 23;
	shf.l.wrap.b32 	%r8263, %r8257, %r8256, 23;
	mov.b64 	%rd12261, {%r8263, %r8262};
	xor.b64  	%rd12262, %rd12260, %rd12261;
	xor.b64  	%rd12263, %rd12222, %rd12198;
	and.b64  	%rd12264, %rd12246, %rd12263;
	xor.b64  	%rd12265, %rd12264, %rd12198;
	ld.local.u64 	%rd18559, [%rd1+136];
	add.s64 	%rd12266, %rd12174, %rd18559;
	add.s64 	%rd12267, %rd12266, %rd18329;
	add.s64 	%rd12268, %rd12267, %rd12265;
	add.s64 	%rd12269, %rd12268, %rd12262;
	add.s64 	%rd12270, %rd12269, %rd12185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8264,%dummy}, %rd12257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8265}, %rd12257;
	}
	shf.r.wrap.b32 	%r8266, %r8265, %r8264, 28;
	shf.r.wrap.b32 	%r8267, %r8264, %r8265, 28;
	mov.b64 	%rd12271, {%r8267, %r8266};
	shf.l.wrap.b32 	%r8268, %r8264, %r8265, 30;
	shf.l.wrap.b32 	%r8269, %r8265, %r8264, 30;
	mov.b64 	%rd12272, {%r8269, %r8268};
	xor.b64  	%rd12273, %rd12272, %rd12271;
	shf.l.wrap.b32 	%r8270, %r8264, %r8265, 25;
	shf.l.wrap.b32 	%r8271, %r8265, %r8264, 25;
	mov.b64 	%rd12274, {%r8271, %r8270};
	xor.b64  	%rd12275, %rd12273, %rd12274;
	and.b64  	%rd12276, %rd12257, %rd12233;
	xor.b64  	%rd12277, %rd12257, %rd12233;
	and.b64  	%rd12278, %rd12277, %rd12209;
	or.b64  	%rd12279, %rd12278, %rd12276;
	add.s64 	%rd12280, %rd12269, %rd12279;
	add.s64 	%rd12281, %rd12280, %rd12275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8272,%dummy}, %rd12270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8273}, %rd12270;
	}
	shf.r.wrap.b32 	%r8274, %r8273, %r8272, 14;
	shf.r.wrap.b32 	%r8275, %r8272, %r8273, 14;
	mov.b64 	%rd12282, {%r8275, %r8274};
	shf.r.wrap.b32 	%r8276, %r8273, %r8272, 18;
	shf.r.wrap.b32 	%r8277, %r8272, %r8273, 18;
	mov.b64 	%rd12283, {%r8277, %r8276};
	xor.b64  	%rd12284, %rd12283, %rd12282;
	shf.l.wrap.b32 	%r8278, %r8272, %r8273, 23;
	shf.l.wrap.b32 	%r8279, %r8273, %r8272, 23;
	mov.b64 	%rd12285, {%r8279, %r8278};
	xor.b64  	%rd12286, %rd12284, %rd12285;
	xor.b64  	%rd12287, %rd12246, %rd12222;
	and.b64  	%rd12288, %rd12270, %rd12287;
	xor.b64  	%rd12289, %rd12288, %rd12222;
	ld.local.u64 	%rd18558, [%rd1+144];
	add.s64 	%rd12290, %rd12198, %rd18558;
	add.s64 	%rd12291, %rd12290, %rd18328;
	add.s64 	%rd12292, %rd12291, %rd12289;
	add.s64 	%rd12293, %rd12292, %rd12286;
	add.s64 	%rd12294, %rd12293, %rd12209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8280,%dummy}, %rd12281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8281}, %rd12281;
	}
	shf.r.wrap.b32 	%r8282, %r8281, %r8280, 28;
	shf.r.wrap.b32 	%r8283, %r8280, %r8281, 28;
	mov.b64 	%rd12295, {%r8283, %r8282};
	shf.l.wrap.b32 	%r8284, %r8280, %r8281, 30;
	shf.l.wrap.b32 	%r8285, %r8281, %r8280, 30;
	mov.b64 	%rd12296, {%r8285, %r8284};
	xor.b64  	%rd12297, %rd12296, %rd12295;
	shf.l.wrap.b32 	%r8286, %r8280, %r8281, 25;
	shf.l.wrap.b32 	%r8287, %r8281, %r8280, 25;
	mov.b64 	%rd12298, {%r8287, %r8286};
	xor.b64  	%rd12299, %rd12297, %rd12298;
	and.b64  	%rd12300, %rd12281, %rd12257;
	xor.b64  	%rd12301, %rd12281, %rd12257;
	and.b64  	%rd12302, %rd12301, %rd12233;
	or.b64  	%rd12303, %rd12302, %rd12300;
	add.s64 	%rd12304, %rd12293, %rd12303;
	add.s64 	%rd12305, %rd12304, %rd12299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8288,%dummy}, %rd12294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8289}, %rd12294;
	}
	shf.r.wrap.b32 	%r8290, %r8289, %r8288, 14;
	shf.r.wrap.b32 	%r8291, %r8288, %r8289, 14;
	mov.b64 	%rd12306, {%r8291, %r8290};
	shf.r.wrap.b32 	%r8292, %r8289, %r8288, 18;
	shf.r.wrap.b32 	%r8293, %r8288, %r8289, 18;
	mov.b64 	%rd12307, {%r8293, %r8292};
	xor.b64  	%rd12308, %rd12307, %rd12306;
	shf.l.wrap.b32 	%r8294, %r8288, %r8289, 23;
	shf.l.wrap.b32 	%r8295, %r8289, %r8288, 23;
	mov.b64 	%rd12309, {%r8295, %r8294};
	xor.b64  	%rd12310, %rd12308, %rd12309;
	xor.b64  	%rd12311, %rd12270, %rd12246;
	and.b64  	%rd12312, %rd12294, %rd12311;
	xor.b64  	%rd12313, %rd12312, %rd12246;
	ld.local.u64 	%rd18557, [%rd1+152];
	add.s64 	%rd12314, %rd12222, %rd18557;
	add.s64 	%rd12315, %rd12314, %rd18327;
	add.s64 	%rd12316, %rd12315, %rd12313;
	add.s64 	%rd12317, %rd12316, %rd12310;
	add.s64 	%rd12318, %rd12317, %rd12233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8296,%dummy}, %rd12305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8297}, %rd12305;
	}
	shf.r.wrap.b32 	%r8298, %r8297, %r8296, 28;
	shf.r.wrap.b32 	%r8299, %r8296, %r8297, 28;
	mov.b64 	%rd12319, {%r8299, %r8298};
	shf.l.wrap.b32 	%r8300, %r8296, %r8297, 30;
	shf.l.wrap.b32 	%r8301, %r8297, %r8296, 30;
	mov.b64 	%rd12320, {%r8301, %r8300};
	xor.b64  	%rd12321, %rd12320, %rd12319;
	shf.l.wrap.b32 	%r8302, %r8296, %r8297, 25;
	shf.l.wrap.b32 	%r8303, %r8297, %r8296, 25;
	mov.b64 	%rd12322, {%r8303, %r8302};
	xor.b64  	%rd12323, %rd12321, %rd12322;
	and.b64  	%rd12324, %rd12305, %rd12281;
	xor.b64  	%rd12325, %rd12305, %rd12281;
	and.b64  	%rd12326, %rd12325, %rd12257;
	or.b64  	%rd12327, %rd12326, %rd12324;
	add.s64 	%rd12328, %rd12317, %rd12327;
	add.s64 	%rd12329, %rd12328, %rd12323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8304,%dummy}, %rd12318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8305}, %rd12318;
	}
	shf.r.wrap.b32 	%r8306, %r8305, %r8304, 14;
	shf.r.wrap.b32 	%r8307, %r8304, %r8305, 14;
	mov.b64 	%rd12330, {%r8307, %r8306};
	shf.r.wrap.b32 	%r8308, %r8305, %r8304, 18;
	shf.r.wrap.b32 	%r8309, %r8304, %r8305, 18;
	mov.b64 	%rd12331, {%r8309, %r8308};
	xor.b64  	%rd12332, %rd12331, %rd12330;
	shf.l.wrap.b32 	%r8310, %r8304, %r8305, 23;
	shf.l.wrap.b32 	%r8311, %r8305, %r8304, 23;
	mov.b64 	%rd12333, {%r8311, %r8310};
	xor.b64  	%rd12334, %rd12332, %rd12333;
	xor.b64  	%rd12335, %rd12294, %rd12270;
	and.b64  	%rd12336, %rd12318, %rd12335;
	xor.b64  	%rd12337, %rd12336, %rd12270;
	ld.local.u64 	%rd18556, [%rd1+160];
	add.s64 	%rd12338, %rd12246, %rd18556;
	add.s64 	%rd12339, %rd12338, %rd18326;
	add.s64 	%rd12340, %rd12339, %rd12337;
	add.s64 	%rd12341, %rd12340, %rd12334;
	add.s64 	%rd18568, %rd12341, %rd12257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8312,%dummy}, %rd12329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8313}, %rd12329;
	}
	shf.r.wrap.b32 	%r8314, %r8313, %r8312, 28;
	shf.r.wrap.b32 	%r8315, %r8312, %r8313, 28;
	mov.b64 	%rd12342, {%r8315, %r8314};
	shf.l.wrap.b32 	%r8316, %r8312, %r8313, 30;
	shf.l.wrap.b32 	%r8317, %r8313, %r8312, 30;
	mov.b64 	%rd12343, {%r8317, %r8316};
	xor.b64  	%rd12344, %rd12343, %rd12342;
	shf.l.wrap.b32 	%r8318, %r8312, %r8313, 25;
	shf.l.wrap.b32 	%r8319, %r8313, %r8312, 25;
	mov.b64 	%rd12345, {%r8319, %r8318};
	xor.b64  	%rd12346, %rd12344, %rd12345;
	and.b64  	%rd12347, %rd12329, %rd12305;
	xor.b64  	%rd12348, %rd12329, %rd12305;
	and.b64  	%rd12349, %rd12348, %rd12281;
	or.b64  	%rd12350, %rd12349, %rd12347;
	add.s64 	%rd12351, %rd12341, %rd12350;
	add.s64 	%rd18564, %rd12351, %rd12346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8320,%dummy}, %rd18568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8321}, %rd18568;
	}
	shf.r.wrap.b32 	%r8322, %r8321, %r8320, 14;
	shf.r.wrap.b32 	%r8323, %r8320, %r8321, 14;
	mov.b64 	%rd12352, {%r8323, %r8322};
	shf.r.wrap.b32 	%r8324, %r8321, %r8320, 18;
	shf.r.wrap.b32 	%r8325, %r8320, %r8321, 18;
	mov.b64 	%rd12353, {%r8325, %r8324};
	xor.b64  	%rd12354, %rd12353, %rd12352;
	shf.l.wrap.b32 	%r8326, %r8320, %r8321, 23;
	shf.l.wrap.b32 	%r8327, %r8321, %r8320, 23;
	mov.b64 	%rd12355, {%r8327, %r8326};
	xor.b64  	%rd12356, %rd12354, %rd12355;
	xor.b64  	%rd12357, %rd12318, %rd12294;
	and.b64  	%rd12358, %rd18568, %rd12357;
	xor.b64  	%rd12359, %rd12358, %rd12294;
	ld.local.u64 	%rd18555, [%rd1+168];
	add.s64 	%rd12360, %rd12270, %rd18555;
	add.s64 	%rd12361, %rd12360, %rd18325;
	add.s64 	%rd12362, %rd12361, %rd12359;
	add.s64 	%rd12363, %rd12362, %rd12356;
	add.s64 	%rd18567, %rd12363, %rd12281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8328,%dummy}, %rd18564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8329}, %rd18564;
	}
	shf.r.wrap.b32 	%r8330, %r8329, %r8328, 28;
	shf.r.wrap.b32 	%r8331, %r8328, %r8329, 28;
	mov.b64 	%rd12364, {%r8331, %r8330};
	shf.l.wrap.b32 	%r8332, %r8328, %r8329, 30;
	shf.l.wrap.b32 	%r8333, %r8329, %r8328, 30;
	mov.b64 	%rd12365, {%r8333, %r8332};
	xor.b64  	%rd12366, %rd12365, %rd12364;
	shf.l.wrap.b32 	%r8334, %r8328, %r8329, 25;
	shf.l.wrap.b32 	%r8335, %r8329, %r8328, 25;
	mov.b64 	%rd12367, {%r8335, %r8334};
	xor.b64  	%rd12368, %rd12366, %rd12367;
	and.b64  	%rd12369, %rd18564, %rd12329;
	xor.b64  	%rd12370, %rd18564, %rd12329;
	and.b64  	%rd12371, %rd12370, %rd12305;
	or.b64  	%rd12372, %rd12371, %rd12369;
	add.s64 	%rd12373, %rd12363, %rd12372;
	add.s64 	%rd18563, %rd12373, %rd12368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8336,%dummy}, %rd18567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8337}, %rd18567;
	}
	shf.r.wrap.b32 	%r8338, %r8337, %r8336, 14;
	shf.r.wrap.b32 	%r8339, %r8336, %r8337, 14;
	mov.b64 	%rd12374, {%r8339, %r8338};
	shf.r.wrap.b32 	%r8340, %r8337, %r8336, 18;
	shf.r.wrap.b32 	%r8341, %r8336, %r8337, 18;
	mov.b64 	%rd12375, {%r8341, %r8340};
	xor.b64  	%rd12376, %rd12375, %rd12374;
	shf.l.wrap.b32 	%r8342, %r8336, %r8337, 23;
	shf.l.wrap.b32 	%r8343, %r8337, %r8336, 23;
	mov.b64 	%rd12377, {%r8343, %r8342};
	xor.b64  	%rd12378, %rd12376, %rd12377;
	xor.b64  	%rd12379, %rd18568, %rd12318;
	and.b64  	%rd12380, %rd18567, %rd12379;
	xor.b64  	%rd12381, %rd12380, %rd12318;
	ld.local.u64 	%rd18554, [%rd1+176];
	add.s64 	%rd12382, %rd12294, %rd18554;
	add.s64 	%rd12383, %rd12382, %rd18324;
	add.s64 	%rd12384, %rd12383, %rd12381;
	add.s64 	%rd12385, %rd12384, %rd12378;
	add.s64 	%rd18566, %rd12385, %rd12305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8344,%dummy}, %rd18563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8345}, %rd18563;
	}
	shf.r.wrap.b32 	%r8346, %r8345, %r8344, 28;
	shf.r.wrap.b32 	%r8347, %r8344, %r8345, 28;
	mov.b64 	%rd12386, {%r8347, %r8346};
	shf.l.wrap.b32 	%r8348, %r8344, %r8345, 30;
	shf.l.wrap.b32 	%r8349, %r8345, %r8344, 30;
	mov.b64 	%rd12387, {%r8349, %r8348};
	xor.b64  	%rd12388, %rd12387, %rd12386;
	shf.l.wrap.b32 	%r8350, %r8344, %r8345, 25;
	shf.l.wrap.b32 	%r8351, %r8345, %r8344, 25;
	mov.b64 	%rd12389, {%r8351, %r8350};
	xor.b64  	%rd12390, %rd12388, %rd12389;
	and.b64  	%rd12391, %rd18563, %rd18564;
	xor.b64  	%rd12392, %rd18563, %rd18564;
	and.b64  	%rd12393, %rd12392, %rd12329;
	or.b64  	%rd12394, %rd12393, %rd12391;
	add.s64 	%rd12395, %rd12385, %rd12394;
	add.s64 	%rd18562, %rd12395, %rd12390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8352,%dummy}, %rd18566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8353}, %rd18566;
	}
	shf.r.wrap.b32 	%r8354, %r8353, %r8352, 14;
	shf.r.wrap.b32 	%r8355, %r8352, %r8353, 14;
	mov.b64 	%rd12396, {%r8355, %r8354};
	shf.r.wrap.b32 	%r8356, %r8353, %r8352, 18;
	shf.r.wrap.b32 	%r8357, %r8352, %r8353, 18;
	mov.b64 	%rd12397, {%r8357, %r8356};
	xor.b64  	%rd12398, %rd12397, %rd12396;
	shf.l.wrap.b32 	%r8358, %r8352, %r8353, 23;
	shf.l.wrap.b32 	%r8359, %r8353, %r8352, 23;
	mov.b64 	%rd12399, {%r8359, %r8358};
	xor.b64  	%rd12400, %rd12398, %rd12399;
	xor.b64  	%rd12401, %rd18567, %rd18568;
	and.b64  	%rd12402, %rd18566, %rd12401;
	xor.b64  	%rd12403, %rd12402, %rd18568;
	ld.local.u64 	%rd18553, [%rd1+184];
	add.s64 	%rd12404, %rd12318, %rd18553;
	add.s64 	%rd12405, %rd12404, %rd18323;
	add.s64 	%rd12406, %rd12405, %rd12403;
	add.s64 	%rd12407, %rd12406, %rd12400;
	add.s64 	%rd18565, %rd12407, %rd12329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8360,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8361}, %rd18562;
	}
	shf.r.wrap.b32 	%r8362, %r8361, %r8360, 28;
	shf.r.wrap.b32 	%r8363, %r8360, %r8361, 28;
	mov.b64 	%rd12408, {%r8363, %r8362};
	shf.l.wrap.b32 	%r8364, %r8360, %r8361, 30;
	shf.l.wrap.b32 	%r8365, %r8361, %r8360, 30;
	mov.b64 	%rd12409, {%r8365, %r8364};
	xor.b64  	%rd12410, %rd12409, %rd12408;
	shf.l.wrap.b32 	%r8366, %r8360, %r8361, 25;
	shf.l.wrap.b32 	%r8367, %r8361, %r8360, 25;
	mov.b64 	%rd12411, {%r8367, %r8366};
	xor.b64  	%rd12412, %rd12410, %rd12411;
	and.b64  	%rd12413, %rd18562, %rd18563;
	xor.b64  	%rd12414, %rd18562, %rd18563;
	and.b64  	%rd12415, %rd12414, %rd18564;
	or.b64  	%rd12416, %rd12415, %rd12413;
	add.s64 	%rd12417, %rd12407, %rd12416;
	add.s64 	%rd18561, %rd12417, %rd12412;
	mov.u32 	%r12671, 16;

BB0_200:
	mov.u64 	%rd18238, k_sha512;
	shr.u64 	%rd12418, %rd18554, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8368,%dummy}, %rd18554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8369}, %rd18554;
	}
	shf.r.wrap.b32 	%r8370, %r8369, %r8368, 19;
	shf.r.wrap.b32 	%r8371, %r8368, %r8369, 19;
	mov.b64 	%rd12419, {%r8371, %r8370};
	xor.b64  	%rd12420, %rd12419, %rd12418;
	shf.l.wrap.b32 	%r8372, %r8368, %r8369, 3;
	shf.l.wrap.b32 	%r8373, %r8369, %r8368, 3;
	mov.b64 	%rd12421, {%r8373, %r8372};
	xor.b64  	%rd12422, %rd12420, %rd12421;
	shr.u64 	%rd12423, %rd18570, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd18570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8375}, %rd18570;
	}
	shf.r.wrap.b32 	%r8376, %r8375, %r8374, 1;
	shf.r.wrap.b32 	%r8377, %r8374, %r8375, 1;
	mov.b64 	%rd12424, {%r8377, %r8376};
	xor.b64  	%rd12425, %rd12424, %rd12423;
	shf.r.wrap.b32 	%r8378, %r8375, %r8374, 8;
	shf.r.wrap.b32 	%r8379, %r8374, %r8375, 8;
	mov.b64 	%rd12426, {%r8379, %r8378};
	xor.b64  	%rd12427, %rd12425, %rd12426;
	add.s64 	%rd12428, %rd18559, %rd18569;
	add.s64 	%rd12429, %rd12428, %rd12422;
	add.s64 	%rd18569, %rd12429, %rd12427;
	shr.u64 	%rd12430, %rd18553, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8380,%dummy}, %rd18553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8381}, %rd18553;
	}
	shf.r.wrap.b32 	%r8382, %r8381, %r8380, 19;
	shf.r.wrap.b32 	%r8383, %r8380, %r8381, 19;
	mov.b64 	%rd12431, {%r8383, %r8382};
	xor.b64  	%rd12432, %rd12431, %rd12430;
	shf.l.wrap.b32 	%r8384, %r8380, %r8381, 3;
	shf.l.wrap.b32 	%r8385, %r8381, %r8380, 3;
	mov.b64 	%rd12433, {%r8385, %r8384};
	xor.b64  	%rd12434, %rd12432, %rd12433;
	shr.u64 	%rd12435, %rd18571, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8386,%dummy}, %rd18571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8387}, %rd18571;
	}
	shf.r.wrap.b32 	%r8388, %r8387, %r8386, 1;
	shf.r.wrap.b32 	%r8389, %r8386, %r8387, 1;
	mov.b64 	%rd12436, {%r8389, %r8388};
	xor.b64  	%rd12437, %rd12436, %rd12435;
	shf.r.wrap.b32 	%r8390, %r8387, %r8386, 8;
	shf.r.wrap.b32 	%r8391, %r8386, %r8387, 8;
	mov.b64 	%rd12438, {%r8391, %r8390};
	xor.b64  	%rd12439, %rd12437, %rd12438;
	add.s64 	%rd12440, %rd18558, %rd18570;
	add.s64 	%rd12441, %rd12440, %rd12434;
	add.s64 	%rd18570, %rd12441, %rd12439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8392,%dummy}, %rd18569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8393}, %rd18569;
	}
	shf.r.wrap.b32 	%r8394, %r8393, %r8392, 19;
	shf.r.wrap.b32 	%r8395, %r8392, %r8393, 19;
	mov.b64 	%rd12442, {%r8395, %r8394};
	shf.l.wrap.b32 	%r8396, %r8392, %r8393, 3;
	shf.l.wrap.b32 	%r8397, %r8393, %r8392, 3;
	mov.b64 	%rd12443, {%r8397, %r8396};
	shr.u64 	%rd12444, %rd18569, 6;
	xor.b64  	%rd12445, %rd12442, %rd12444;
	xor.b64  	%rd12446, %rd12445, %rd12443;
	shr.u64 	%rd12447, %rd18572, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd18572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8399}, %rd18572;
	}
	shf.r.wrap.b32 	%r8400, %r8399, %r8398, 1;
	shf.r.wrap.b32 	%r8401, %r8398, %r8399, 1;
	mov.b64 	%rd12448, {%r8401, %r8400};
	xor.b64  	%rd12449, %rd12448, %rd12447;
	shf.r.wrap.b32 	%r8402, %r8399, %r8398, 8;
	shf.r.wrap.b32 	%r8403, %r8398, %r8399, 8;
	mov.b64 	%rd12450, {%r8403, %r8402};
	xor.b64  	%rd12451, %rd12449, %rd12450;
	add.s64 	%rd12452, %rd18557, %rd18571;
	add.s64 	%rd12453, %rd12452, %rd12446;
	add.s64 	%rd18571, %rd12453, %rd12451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8404,%dummy}, %rd18570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8405}, %rd18570;
	}
	shf.r.wrap.b32 	%r8406, %r8405, %r8404, 19;
	shf.r.wrap.b32 	%r8407, %r8404, %r8405, 19;
	mov.b64 	%rd12454, {%r8407, %r8406};
	shf.l.wrap.b32 	%r8408, %r8404, %r8405, 3;
	shf.l.wrap.b32 	%r8409, %r8405, %r8404, 3;
	mov.b64 	%rd12455, {%r8409, %r8408};
	shr.u64 	%rd12456, %rd18570, 6;
	xor.b64  	%rd12457, %rd12454, %rd12456;
	xor.b64  	%rd12458, %rd12457, %rd12455;
	shr.u64 	%rd12459, %rd18573, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8410,%dummy}, %rd18573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8411}, %rd18573;
	}
	shf.r.wrap.b32 	%r8412, %r8411, %r8410, 1;
	shf.r.wrap.b32 	%r8413, %r8410, %r8411, 1;
	mov.b64 	%rd12460, {%r8413, %r8412};
	xor.b64  	%rd12461, %rd12460, %rd12459;
	shf.r.wrap.b32 	%r8414, %r8411, %r8410, 8;
	shf.r.wrap.b32 	%r8415, %r8410, %r8411, 8;
	mov.b64 	%rd12462, {%r8415, %r8414};
	xor.b64  	%rd12463, %rd12461, %rd12462;
	add.s64 	%rd12464, %rd18556, %rd18572;
	add.s64 	%rd12465, %rd12464, %rd12458;
	add.s64 	%rd18572, %rd12465, %rd12463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8416,%dummy}, %rd18571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8417}, %rd18571;
	}
	shf.r.wrap.b32 	%r8418, %r8417, %r8416, 19;
	shf.r.wrap.b32 	%r8419, %r8416, %r8417, 19;
	mov.b64 	%rd12466, {%r8419, %r8418};
	shf.l.wrap.b32 	%r8420, %r8416, %r8417, 3;
	shf.l.wrap.b32 	%r8421, %r8417, %r8416, 3;
	mov.b64 	%rd12467, {%r8421, %r8420};
	shr.u64 	%rd12468, %rd18571, 6;
	xor.b64  	%rd12469, %rd12466, %rd12468;
	xor.b64  	%rd12470, %rd12469, %rd12467;
	shr.u64 	%rd12471, %rd18574, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8422,%dummy}, %rd18574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8423}, %rd18574;
	}
	shf.r.wrap.b32 	%r8424, %r8423, %r8422, 1;
	shf.r.wrap.b32 	%r8425, %r8422, %r8423, 1;
	mov.b64 	%rd12472, {%r8425, %r8424};
	xor.b64  	%rd12473, %rd12472, %rd12471;
	shf.r.wrap.b32 	%r8426, %r8423, %r8422, 8;
	shf.r.wrap.b32 	%r8427, %r8422, %r8423, 8;
	mov.b64 	%rd12474, {%r8427, %r8426};
	xor.b64  	%rd12475, %rd12473, %rd12474;
	add.s64 	%rd12476, %rd18555, %rd18573;
	add.s64 	%rd12477, %rd12476, %rd12470;
	add.s64 	%rd18573, %rd12477, %rd12475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8428,%dummy}, %rd18572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8429}, %rd18572;
	}
	shf.r.wrap.b32 	%r8430, %r8429, %r8428, 19;
	shf.r.wrap.b32 	%r8431, %r8428, %r8429, 19;
	mov.b64 	%rd12478, {%r8431, %r8430};
	shf.l.wrap.b32 	%r8432, %r8428, %r8429, 3;
	shf.l.wrap.b32 	%r8433, %r8429, %r8428, 3;
	mov.b64 	%rd12479, {%r8433, %r8432};
	shr.u64 	%rd12480, %rd18572, 6;
	xor.b64  	%rd12481, %rd12478, %rd12480;
	xor.b64  	%rd12482, %rd12481, %rd12479;
	shr.u64 	%rd12483, %rd18575, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8434,%dummy}, %rd18575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8435}, %rd18575;
	}
	shf.r.wrap.b32 	%r8436, %r8435, %r8434, 1;
	shf.r.wrap.b32 	%r8437, %r8434, %r8435, 1;
	mov.b64 	%rd12484, {%r8437, %r8436};
	xor.b64  	%rd12485, %rd12484, %rd12483;
	shf.r.wrap.b32 	%r8438, %r8435, %r8434, 8;
	shf.r.wrap.b32 	%r8439, %r8434, %r8435, 8;
	mov.b64 	%rd12486, {%r8439, %r8438};
	xor.b64  	%rd12487, %rd12485, %rd12486;
	add.s64 	%rd12488, %rd18554, %rd18574;
	add.s64 	%rd12489, %rd12488, %rd12482;
	add.s64 	%rd18574, %rd12489, %rd12487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8440,%dummy}, %rd18573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8441}, %rd18573;
	}
	shf.r.wrap.b32 	%r8442, %r8441, %r8440, 19;
	shf.r.wrap.b32 	%r8443, %r8440, %r8441, 19;
	mov.b64 	%rd12490, {%r8443, %r8442};
	shf.l.wrap.b32 	%r8444, %r8440, %r8441, 3;
	shf.l.wrap.b32 	%r8445, %r8441, %r8440, 3;
	mov.b64 	%rd12491, {%r8445, %r8444};
	shr.u64 	%rd12492, %rd18573, 6;
	xor.b64  	%rd12493, %rd12490, %rd12492;
	xor.b64  	%rd12494, %rd12493, %rd12491;
	shr.u64 	%rd12495, %rd18576, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8446,%dummy}, %rd18576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd18576;
	}
	shf.r.wrap.b32 	%r8448, %r8447, %r8446, 1;
	shf.r.wrap.b32 	%r8449, %r8446, %r8447, 1;
	mov.b64 	%rd12496, {%r8449, %r8448};
	xor.b64  	%rd12497, %rd12496, %rd12495;
	shf.r.wrap.b32 	%r8450, %r8447, %r8446, 8;
	shf.r.wrap.b32 	%r8451, %r8446, %r8447, 8;
	mov.b64 	%rd12498, {%r8451, %r8450};
	xor.b64  	%rd12499, %rd12497, %rd12498;
	add.s64 	%rd12500, %rd18553, %rd18575;
	add.s64 	%rd12501, %rd12500, %rd12494;
	add.s64 	%rd18575, %rd12501, %rd12499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8452,%dummy}, %rd18574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8453}, %rd18574;
	}
	shf.r.wrap.b32 	%r8454, %r8453, %r8452, 19;
	shf.r.wrap.b32 	%r8455, %r8452, %r8453, 19;
	mov.b64 	%rd12502, {%r8455, %r8454};
	shf.l.wrap.b32 	%r8456, %r8452, %r8453, 3;
	shf.l.wrap.b32 	%r8457, %r8453, %r8452, 3;
	mov.b64 	%rd12503, {%r8457, %r8456};
	shr.u64 	%rd12504, %rd18574, 6;
	xor.b64  	%rd12505, %rd12502, %rd12504;
	xor.b64  	%rd12506, %rd12505, %rd12503;
	shr.u64 	%rd12507, %rd18560, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8458,%dummy}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8459}, %rd18560;
	}
	shf.r.wrap.b32 	%r8460, %r8459, %r8458, 1;
	shf.r.wrap.b32 	%r8461, %r8458, %r8459, 1;
	mov.b64 	%rd12508, {%r8461, %r8460};
	xor.b64  	%rd12509, %rd12508, %rd12507;
	shf.r.wrap.b32 	%r8462, %r8459, %r8458, 8;
	shf.r.wrap.b32 	%r8463, %r8458, %r8459, 8;
	mov.b64 	%rd12510, {%r8463, %r8462};
	xor.b64  	%rd12511, %rd12509, %rd12510;
	add.s64 	%rd12512, %rd18569, %rd18576;
	add.s64 	%rd12513, %rd12512, %rd12506;
	add.s64 	%rd18576, %rd12513, %rd12511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd18575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8465}, %rd18575;
	}
	shf.r.wrap.b32 	%r8466, %r8465, %r8464, 19;
	shf.r.wrap.b32 	%r8467, %r8464, %r8465, 19;
	mov.b64 	%rd12514, {%r8467, %r8466};
	shf.l.wrap.b32 	%r8468, %r8464, %r8465, 3;
	shf.l.wrap.b32 	%r8469, %r8465, %r8464, 3;
	mov.b64 	%rd12515, {%r8469, %r8468};
	shr.u64 	%rd12516, %rd18575, 6;
	xor.b64  	%rd12517, %rd12514, %rd12516;
	xor.b64  	%rd12518, %rd12517, %rd12515;
	shr.u64 	%rd12519, %rd18559, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8470,%dummy}, %rd18559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd18559;
	}
	shf.r.wrap.b32 	%r8472, %r8471, %r8470, 1;
	shf.r.wrap.b32 	%r8473, %r8470, %r8471, 1;
	mov.b64 	%rd12520, {%r8473, %r8472};
	xor.b64  	%rd12521, %rd12520, %rd12519;
	shf.r.wrap.b32 	%r8474, %r8471, %r8470, 8;
	shf.r.wrap.b32 	%r8475, %r8470, %r8471, 8;
	mov.b64 	%rd12522, {%r8475, %r8474};
	xor.b64  	%rd12523, %rd12521, %rd12522;
	add.s64 	%rd12524, %rd18570, %rd18560;
	add.s64 	%rd12525, %rd12524, %rd12518;
	add.s64 	%rd18560, %rd12525, %rd12523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8476,%dummy}, %rd18576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8477}, %rd18576;
	}
	shf.r.wrap.b32 	%r8478, %r8477, %r8476, 19;
	shf.r.wrap.b32 	%r8479, %r8476, %r8477, 19;
	mov.b64 	%rd12526, {%r8479, %r8478};
	shf.l.wrap.b32 	%r8480, %r8476, %r8477, 3;
	shf.l.wrap.b32 	%r8481, %r8477, %r8476, 3;
	mov.b64 	%rd12527, {%r8481, %r8480};
	shr.u64 	%rd12528, %rd18576, 6;
	xor.b64  	%rd12529, %rd12526, %rd12528;
	xor.b64  	%rd12530, %rd12529, %rd12527;
	shr.u64 	%rd12531, %rd18558, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8482,%dummy}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8483}, %rd18558;
	}
	shf.r.wrap.b32 	%r8484, %r8483, %r8482, 1;
	shf.r.wrap.b32 	%r8485, %r8482, %r8483, 1;
	mov.b64 	%rd12532, {%r8485, %r8484};
	xor.b64  	%rd12533, %rd12532, %rd12531;
	shf.r.wrap.b32 	%r8486, %r8483, %r8482, 8;
	shf.r.wrap.b32 	%r8487, %r8482, %r8483, 8;
	mov.b64 	%rd12534, {%r8487, %r8486};
	xor.b64  	%rd12535, %rd12533, %rd12534;
	add.s64 	%rd12536, %rd18571, %rd18559;
	add.s64 	%rd12537, %rd12536, %rd12530;
	add.s64 	%rd18559, %rd12537, %rd12535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8488,%dummy}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8489}, %rd18560;
	}
	shf.r.wrap.b32 	%r8490, %r8489, %r8488, 19;
	shf.r.wrap.b32 	%r8491, %r8488, %r8489, 19;
	mov.b64 	%rd12538, {%r8491, %r8490};
	shf.l.wrap.b32 	%r8492, %r8488, %r8489, 3;
	shf.l.wrap.b32 	%r8493, %r8489, %r8488, 3;
	mov.b64 	%rd12539, {%r8493, %r8492};
	shr.u64 	%rd12540, %rd18560, 6;
	xor.b64  	%rd12541, %rd12538, %rd12540;
	xor.b64  	%rd12542, %rd12541, %rd12539;
	shr.u64 	%rd12543, %rd18557, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8494,%dummy}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd18557;
	}
	shf.r.wrap.b32 	%r8496, %r8495, %r8494, 1;
	shf.r.wrap.b32 	%r8497, %r8494, %r8495, 1;
	mov.b64 	%rd12544, {%r8497, %r8496};
	xor.b64  	%rd12545, %rd12544, %rd12543;
	shf.r.wrap.b32 	%r8498, %r8495, %r8494, 8;
	shf.r.wrap.b32 	%r8499, %r8494, %r8495, 8;
	mov.b64 	%rd12546, {%r8499, %r8498};
	xor.b64  	%rd12547, %rd12545, %rd12546;
	add.s64 	%rd12548, %rd18572, %rd18558;
	add.s64 	%rd12549, %rd12548, %rd12542;
	add.s64 	%rd18558, %rd12549, %rd12547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8500,%dummy}, %rd18559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8501}, %rd18559;
	}
	shf.r.wrap.b32 	%r8502, %r8501, %r8500, 19;
	shf.r.wrap.b32 	%r8503, %r8500, %r8501, 19;
	mov.b64 	%rd12550, {%r8503, %r8502};
	shf.l.wrap.b32 	%r8504, %r8500, %r8501, 3;
	shf.l.wrap.b32 	%r8505, %r8501, %r8500, 3;
	mov.b64 	%rd12551, {%r8505, %r8504};
	shr.u64 	%rd12552, %rd18559, 6;
	xor.b64  	%rd12553, %rd12550, %rd12552;
	xor.b64  	%rd12554, %rd12553, %rd12551;
	shr.u64 	%rd12555, %rd18556, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8506,%dummy}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8507}, %rd18556;
	}
	shf.r.wrap.b32 	%r8508, %r8507, %r8506, 1;
	shf.r.wrap.b32 	%r8509, %r8506, %r8507, 1;
	mov.b64 	%rd12556, {%r8509, %r8508};
	xor.b64  	%rd12557, %rd12556, %rd12555;
	shf.r.wrap.b32 	%r8510, %r8507, %r8506, 8;
	shf.r.wrap.b32 	%r8511, %r8506, %r8507, 8;
	mov.b64 	%rd12558, {%r8511, %r8510};
	xor.b64  	%rd12559, %rd12557, %rd12558;
	add.s64 	%rd12560, %rd18573, %rd18557;
	add.s64 	%rd12561, %rd12560, %rd12554;
	add.s64 	%rd18557, %rd12561, %rd12559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8513}, %rd18558;
	}
	shf.r.wrap.b32 	%r8514, %r8513, %r8512, 19;
	shf.r.wrap.b32 	%r8515, %r8512, %r8513, 19;
	mov.b64 	%rd12562, {%r8515, %r8514};
	shf.l.wrap.b32 	%r8516, %r8512, %r8513, 3;
	shf.l.wrap.b32 	%r8517, %r8513, %r8512, 3;
	mov.b64 	%rd12563, {%r8517, %r8516};
	shr.u64 	%rd12564, %rd18558, 6;
	xor.b64  	%rd12565, %rd12562, %rd12564;
	xor.b64  	%rd12566, %rd12565, %rd12563;
	shr.u64 	%rd12567, %rd18555, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8518,%dummy}, %rd18555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd18555;
	}
	shf.r.wrap.b32 	%r8520, %r8519, %r8518, 1;
	shf.r.wrap.b32 	%r8521, %r8518, %r8519, 1;
	mov.b64 	%rd12568, {%r8521, %r8520};
	xor.b64  	%rd12569, %rd12568, %rd12567;
	shf.r.wrap.b32 	%r8522, %r8519, %r8518, 8;
	shf.r.wrap.b32 	%r8523, %r8518, %r8519, 8;
	mov.b64 	%rd12570, {%r8523, %r8522};
	xor.b64  	%rd12571, %rd12569, %rd12570;
	add.s64 	%rd12572, %rd18574, %rd18556;
	add.s64 	%rd12573, %rd12572, %rd12566;
	add.s64 	%rd18556, %rd12573, %rd12571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8524,%dummy}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8525}, %rd18557;
	}
	shf.r.wrap.b32 	%r8526, %r8525, %r8524, 19;
	shf.r.wrap.b32 	%r8527, %r8524, %r8525, 19;
	mov.b64 	%rd12574, {%r8527, %r8526};
	shf.l.wrap.b32 	%r8528, %r8524, %r8525, 3;
	shf.l.wrap.b32 	%r8529, %r8525, %r8524, 3;
	mov.b64 	%rd12575, {%r8529, %r8528};
	shr.u64 	%rd12576, %rd18557, 6;
	xor.b64  	%rd12577, %rd12574, %rd12576;
	xor.b64  	%rd12578, %rd12577, %rd12575;
	shr.u64 	%rd12579, %rd18554, 7;
	shf.r.wrap.b32 	%r8530, %r8369, %r8368, 1;
	shf.r.wrap.b32 	%r8531, %r8368, %r8369, 1;
	mov.b64 	%rd12580, {%r8531, %r8530};
	xor.b64  	%rd12581, %rd12580, %rd12579;
	shf.r.wrap.b32 	%r8532, %r8369, %r8368, 8;
	shf.r.wrap.b32 	%r8533, %r8368, %r8369, 8;
	mov.b64 	%rd12582, {%r8533, %r8532};
	xor.b64  	%rd12583, %rd12581, %rd12582;
	add.s64 	%rd12584, %rd18575, %rd18555;
	add.s64 	%rd12585, %rd12584, %rd12578;
	add.s64 	%rd18555, %rd12585, %rd12583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8534,%dummy}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8535}, %rd18556;
	}
	shf.r.wrap.b32 	%r8536, %r8535, %r8534, 19;
	shf.r.wrap.b32 	%r8537, %r8534, %r8535, 19;
	mov.b64 	%rd12586, {%r8537, %r8536};
	shf.l.wrap.b32 	%r8538, %r8534, %r8535, 3;
	shf.l.wrap.b32 	%r8539, %r8535, %r8534, 3;
	mov.b64 	%rd12587, {%r8539, %r8538};
	shr.u64 	%rd12588, %rd18556, 6;
	xor.b64  	%rd12589, %rd12586, %rd12588;
	xor.b64  	%rd12590, %rd12589, %rd12587;
	shr.u64 	%rd12591, %rd18553, 7;
	shf.r.wrap.b32 	%r8540, %r8381, %r8380, 1;
	shf.r.wrap.b32 	%r8541, %r8380, %r8381, 1;
	mov.b64 	%rd12592, {%r8541, %r8540};
	xor.b64  	%rd12593, %rd12592, %rd12591;
	shf.r.wrap.b32 	%r8542, %r8381, %r8380, 8;
	shf.r.wrap.b32 	%r8543, %r8380, %r8381, 8;
	mov.b64 	%rd12594, {%r8543, %r8542};
	xor.b64  	%rd12595, %rd12593, %rd12594;
	add.s64 	%rd12596, %rd18576, %rd18554;
	add.s64 	%rd12597, %rd12596, %rd12590;
	add.s64 	%rd18554, %rd12597, %rd12595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8544,%dummy}, %rd18555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8545}, %rd18555;
	}
	shf.r.wrap.b32 	%r8546, %r8545, %r8544, 19;
	shf.r.wrap.b32 	%r8547, %r8544, %r8545, 19;
	mov.b64 	%rd12598, {%r8547, %r8546};
	shf.l.wrap.b32 	%r8548, %r8544, %r8545, 3;
	shf.l.wrap.b32 	%r8549, %r8545, %r8544, 3;
	mov.b64 	%rd12599, {%r8549, %r8548};
	shr.u64 	%rd12600, %rd18555, 6;
	xor.b64  	%rd12601, %rd12598, %rd12600;
	xor.b64  	%rd12602, %rd12601, %rd12599;
	shf.r.wrap.b32 	%r8550, %r8393, %r8392, 1;
	shf.r.wrap.b32 	%r8551, %r8392, %r8393, 1;
	mov.b64 	%rd12603, {%r8551, %r8550};
	shf.r.wrap.b32 	%r8552, %r8393, %r8392, 8;
	shf.r.wrap.b32 	%r8553, %r8392, %r8393, 8;
	mov.b64 	%rd12604, {%r8553, %r8552};
	shr.u64 	%rd12605, %rd18569, 7;
	xor.b64  	%rd12606, %rd12603, %rd12605;
	xor.b64  	%rd12607, %rd12606, %rd12604;
	add.s64 	%rd12608, %rd18560, %rd18553;
	add.s64 	%rd12609, %rd12608, %rd12602;
	add.s64 	%rd18553, %rd12609, %rd12607;
	mul.wide.s32 	%rd12610, %r12671, 8;
	add.s64 	%rd12612, %rd18238, %rd12610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8554,%dummy}, %rd18565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8555}, %rd18565;
	}
	shf.r.wrap.b32 	%r8556, %r8555, %r8554, 18;
	shf.r.wrap.b32 	%r8557, %r8554, %r8555, 18;
	mov.b64 	%rd12613, {%r8557, %r8556};
	shf.r.wrap.b32 	%r8558, %r8555, %r8554, 14;
	shf.r.wrap.b32 	%r8559, %r8554, %r8555, 14;
	mov.b64 	%rd12614, {%r8559, %r8558};
	xor.b64  	%rd12615, %rd12613, %rd12614;
	shf.l.wrap.b32 	%r8560, %r8554, %r8555, 23;
	shf.l.wrap.b32 	%r8561, %r8555, %r8554, 23;
	mov.b64 	%rd12616, {%r8561, %r8560};
	xor.b64  	%rd12617, %rd12615, %rd12616;
	xor.b64  	%rd12618, %rd18566, %rd18567;
	and.b64  	%rd12619, %rd18565, %rd12618;
	xor.b64  	%rd12620, %rd12619, %rd18567;
	add.s64 	%rd12621, %rd12620, %rd18568;
	add.s64 	%rd12622, %rd12621, %rd18569;
	ld.const.u64 	%rd12623, [%rd12612];
	add.s64 	%rd12624, %rd12622, %rd12623;
	add.s64 	%rd12625, %rd12624, %rd12617;
	add.s64 	%rd12626, %rd12625, %rd18564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8562}, %rd18561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8563,%dummy}, %rd18561;
	}
	shf.l.wrap.b32 	%r8564, %r8563, %r8562, 30;
	shf.l.wrap.b32 	%r8565, %r8562, %r8563, 30;
	mov.b64 	%rd12627, {%r8565, %r8564};
	shf.r.wrap.b32 	%r8566, %r8562, %r8563, 28;
	shf.r.wrap.b32 	%r8567, %r8563, %r8562, 28;
	mov.b64 	%rd12628, {%r8567, %r8566};
	xor.b64  	%rd12629, %rd12627, %rd12628;
	shf.l.wrap.b32 	%r8568, %r8563, %r8562, 25;
	shf.l.wrap.b32 	%r8569, %r8562, %r8563, 25;
	mov.b64 	%rd12630, {%r8569, %r8568};
	xor.b64  	%rd12631, %rd12629, %rd12630;
	xor.b64  	%rd12632, %rd18561, %rd18562;
	and.b64  	%rd12633, %rd12632, %rd18563;
	and.b64  	%rd12634, %rd18561, %rd18562;
	or.b64  	%rd12635, %rd12633, %rd12634;
	add.s64 	%rd12636, %rd12625, %rd12635;
	add.s64 	%rd12637, %rd12636, %rd12631;
	add.s32 	%r8570, %r12671, 1;
	mul.wide.s32 	%rd12638, %r8570, 8;
	add.s64 	%rd12639, %rd18238, %rd12638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8571,%dummy}, %rd12626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8572}, %rd12626;
	}
	shf.r.wrap.b32 	%r8573, %r8572, %r8571, 14;
	shf.r.wrap.b32 	%r8574, %r8571, %r8572, 14;
	mov.b64 	%rd12640, {%r8574, %r8573};
	shf.r.wrap.b32 	%r8575, %r8572, %r8571, 18;
	shf.r.wrap.b32 	%r8576, %r8571, %r8572, 18;
	mov.b64 	%rd12641, {%r8576, %r8575};
	xor.b64  	%rd12642, %rd12641, %rd12640;
	shf.l.wrap.b32 	%r8577, %r8571, %r8572, 23;
	shf.l.wrap.b32 	%r8578, %r8572, %r8571, 23;
	mov.b64 	%rd12643, {%r8578, %r8577};
	xor.b64  	%rd12644, %rd12642, %rd12643;
	xor.b64  	%rd12645, %rd18565, %rd18566;
	and.b64  	%rd12646, %rd12626, %rd12645;
	xor.b64  	%rd12647, %rd12646, %rd18566;
	add.s64 	%rd12648, %rd18570, %rd18567;
	ld.const.u64 	%rd12649, [%rd12639];
	add.s64 	%rd12650, %rd12648, %rd12649;
	add.s64 	%rd12651, %rd12650, %rd12647;
	add.s64 	%rd12652, %rd12651, %rd12644;
	add.s64 	%rd12653, %rd12652, %rd18563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8579,%dummy}, %rd12637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8580}, %rd12637;
	}
	shf.r.wrap.b32 	%r8581, %r8580, %r8579, 28;
	shf.r.wrap.b32 	%r8582, %r8579, %r8580, 28;
	mov.b64 	%rd12654, {%r8582, %r8581};
	shf.l.wrap.b32 	%r8583, %r8579, %r8580, 30;
	shf.l.wrap.b32 	%r8584, %r8580, %r8579, 30;
	mov.b64 	%rd12655, {%r8584, %r8583};
	xor.b64  	%rd12656, %rd12655, %rd12654;
	shf.l.wrap.b32 	%r8585, %r8579, %r8580, 25;
	shf.l.wrap.b32 	%r8586, %r8580, %r8579, 25;
	mov.b64 	%rd12657, {%r8586, %r8585};
	xor.b64  	%rd12658, %rd12656, %rd12657;
	and.b64  	%rd12659, %rd12637, %rd18561;
	xor.b64  	%rd12660, %rd12637, %rd18561;
	and.b64  	%rd12661, %rd12660, %rd18562;
	or.b64  	%rd12662, %rd12661, %rd12659;
	add.s64 	%rd12663, %rd12652, %rd12662;
	add.s64 	%rd12664, %rd12663, %rd12658;
	add.s32 	%r8587, %r12671, 2;
	mul.wide.s32 	%rd12665, %r8587, 8;
	add.s64 	%rd12666, %rd18238, %rd12665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8588,%dummy}, %rd12653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8589}, %rd12653;
	}
	shf.r.wrap.b32 	%r8590, %r8589, %r8588, 14;
	shf.r.wrap.b32 	%r8591, %r8588, %r8589, 14;
	mov.b64 	%rd12667, {%r8591, %r8590};
	shf.r.wrap.b32 	%r8592, %r8589, %r8588, 18;
	shf.r.wrap.b32 	%r8593, %r8588, %r8589, 18;
	mov.b64 	%rd12668, {%r8593, %r8592};
	xor.b64  	%rd12669, %rd12668, %rd12667;
	shf.l.wrap.b32 	%r8594, %r8588, %r8589, 23;
	shf.l.wrap.b32 	%r8595, %r8589, %r8588, 23;
	mov.b64 	%rd12670, {%r8595, %r8594};
	xor.b64  	%rd12671, %rd12669, %rd12670;
	xor.b64  	%rd12672, %rd12626, %rd18565;
	and.b64  	%rd12673, %rd12653, %rd12672;
	xor.b64  	%rd12674, %rd12673, %rd18565;
	add.s64 	%rd12675, %rd18571, %rd18566;
	ld.const.u64 	%rd12676, [%rd12666];
	add.s64 	%rd12677, %rd12675, %rd12676;
	add.s64 	%rd12678, %rd12677, %rd12674;
	add.s64 	%rd12679, %rd12678, %rd12671;
	add.s64 	%rd12680, %rd12679, %rd18562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8596,%dummy}, %rd12664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8597}, %rd12664;
	}
	shf.r.wrap.b32 	%r8598, %r8597, %r8596, 28;
	shf.r.wrap.b32 	%r8599, %r8596, %r8597, 28;
	mov.b64 	%rd12681, {%r8599, %r8598};
	shf.l.wrap.b32 	%r8600, %r8596, %r8597, 30;
	shf.l.wrap.b32 	%r8601, %r8597, %r8596, 30;
	mov.b64 	%rd12682, {%r8601, %r8600};
	xor.b64  	%rd12683, %rd12682, %rd12681;
	shf.l.wrap.b32 	%r8602, %r8596, %r8597, 25;
	shf.l.wrap.b32 	%r8603, %r8597, %r8596, 25;
	mov.b64 	%rd12684, {%r8603, %r8602};
	xor.b64  	%rd12685, %rd12683, %rd12684;
	and.b64  	%rd12686, %rd12664, %rd12637;
	xor.b64  	%rd12687, %rd12664, %rd12637;
	and.b64  	%rd12688, %rd12687, %rd18561;
	or.b64  	%rd12689, %rd12688, %rd12686;
	add.s64 	%rd12690, %rd12679, %rd12689;
	add.s64 	%rd12691, %rd12690, %rd12685;
	add.s32 	%r8604, %r12671, 3;
	mul.wide.s32 	%rd12692, %r8604, 8;
	add.s64 	%rd12693, %rd18238, %rd12692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8605,%dummy}, %rd12680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8606}, %rd12680;
	}
	shf.r.wrap.b32 	%r8607, %r8606, %r8605, 14;
	shf.r.wrap.b32 	%r8608, %r8605, %r8606, 14;
	mov.b64 	%rd12694, {%r8608, %r8607};
	shf.r.wrap.b32 	%r8609, %r8606, %r8605, 18;
	shf.r.wrap.b32 	%r8610, %r8605, %r8606, 18;
	mov.b64 	%rd12695, {%r8610, %r8609};
	xor.b64  	%rd12696, %rd12695, %rd12694;
	shf.l.wrap.b32 	%r8611, %r8605, %r8606, 23;
	shf.l.wrap.b32 	%r8612, %r8606, %r8605, 23;
	mov.b64 	%rd12697, {%r8612, %r8611};
	xor.b64  	%rd12698, %rd12696, %rd12697;
	xor.b64  	%rd12699, %rd12653, %rd12626;
	and.b64  	%rd12700, %rd12680, %rd12699;
	xor.b64  	%rd12701, %rd12700, %rd12626;
	add.s64 	%rd12702, %rd18572, %rd18565;
	ld.const.u64 	%rd12703, [%rd12693];
	add.s64 	%rd12704, %rd12702, %rd12703;
	add.s64 	%rd12705, %rd12704, %rd12701;
	add.s64 	%rd12706, %rd12705, %rd12698;
	add.s64 	%rd12707, %rd12706, %rd18561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8613,%dummy}, %rd12691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8614}, %rd12691;
	}
	shf.r.wrap.b32 	%r8615, %r8614, %r8613, 28;
	shf.r.wrap.b32 	%r8616, %r8613, %r8614, 28;
	mov.b64 	%rd12708, {%r8616, %r8615};
	shf.l.wrap.b32 	%r8617, %r8613, %r8614, 30;
	shf.l.wrap.b32 	%r8618, %r8614, %r8613, 30;
	mov.b64 	%rd12709, {%r8618, %r8617};
	xor.b64  	%rd12710, %rd12709, %rd12708;
	shf.l.wrap.b32 	%r8619, %r8613, %r8614, 25;
	shf.l.wrap.b32 	%r8620, %r8614, %r8613, 25;
	mov.b64 	%rd12711, {%r8620, %r8619};
	xor.b64  	%rd12712, %rd12710, %rd12711;
	and.b64  	%rd12713, %rd12691, %rd12664;
	xor.b64  	%rd12714, %rd12691, %rd12664;
	and.b64  	%rd12715, %rd12714, %rd12637;
	or.b64  	%rd12716, %rd12715, %rd12713;
	add.s64 	%rd12717, %rd12706, %rd12716;
	add.s64 	%rd12718, %rd12717, %rd12712;
	add.s32 	%r8621, %r12671, 4;
	mul.wide.s32 	%rd12719, %r8621, 8;
	add.s64 	%rd12720, %rd18238, %rd12719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8622,%dummy}, %rd12707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd12707;
	}
	shf.r.wrap.b32 	%r8624, %r8623, %r8622, 14;
	shf.r.wrap.b32 	%r8625, %r8622, %r8623, 14;
	mov.b64 	%rd12721, {%r8625, %r8624};
	shf.r.wrap.b32 	%r8626, %r8623, %r8622, 18;
	shf.r.wrap.b32 	%r8627, %r8622, %r8623, 18;
	mov.b64 	%rd12722, {%r8627, %r8626};
	xor.b64  	%rd12723, %rd12722, %rd12721;
	shf.l.wrap.b32 	%r8628, %r8622, %r8623, 23;
	shf.l.wrap.b32 	%r8629, %r8623, %r8622, 23;
	mov.b64 	%rd12724, {%r8629, %r8628};
	xor.b64  	%rd12725, %rd12723, %rd12724;
	xor.b64  	%rd12726, %rd12680, %rd12653;
	and.b64  	%rd12727, %rd12707, %rd12726;
	xor.b64  	%rd12728, %rd12727, %rd12653;
	add.s64 	%rd12729, %rd12626, %rd18573;
	ld.const.u64 	%rd12730, [%rd12720];
	add.s64 	%rd12731, %rd12729, %rd12730;
	add.s64 	%rd12732, %rd12731, %rd12728;
	add.s64 	%rd12733, %rd12732, %rd12725;
	add.s64 	%rd12734, %rd12733, %rd12637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8630,%dummy}, %rd12718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8631}, %rd12718;
	}
	shf.r.wrap.b32 	%r8632, %r8631, %r8630, 28;
	shf.r.wrap.b32 	%r8633, %r8630, %r8631, 28;
	mov.b64 	%rd12735, {%r8633, %r8632};
	shf.l.wrap.b32 	%r8634, %r8630, %r8631, 30;
	shf.l.wrap.b32 	%r8635, %r8631, %r8630, 30;
	mov.b64 	%rd12736, {%r8635, %r8634};
	xor.b64  	%rd12737, %rd12736, %rd12735;
	shf.l.wrap.b32 	%r8636, %r8630, %r8631, 25;
	shf.l.wrap.b32 	%r8637, %r8631, %r8630, 25;
	mov.b64 	%rd12738, {%r8637, %r8636};
	xor.b64  	%rd12739, %rd12737, %rd12738;
	and.b64  	%rd12740, %rd12718, %rd12691;
	xor.b64  	%rd12741, %rd12718, %rd12691;
	and.b64  	%rd12742, %rd12741, %rd12664;
	or.b64  	%rd12743, %rd12742, %rd12740;
	add.s64 	%rd12744, %rd12733, %rd12743;
	add.s64 	%rd12745, %rd12744, %rd12739;
	add.s32 	%r8638, %r12671, 5;
	mul.wide.s32 	%rd12746, %r8638, 8;
	add.s64 	%rd12747, %rd18238, %rd12746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8639,%dummy}, %rd12734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8640}, %rd12734;
	}
	shf.r.wrap.b32 	%r8641, %r8640, %r8639, 14;
	shf.r.wrap.b32 	%r8642, %r8639, %r8640, 14;
	mov.b64 	%rd12748, {%r8642, %r8641};
	shf.r.wrap.b32 	%r8643, %r8640, %r8639, 18;
	shf.r.wrap.b32 	%r8644, %r8639, %r8640, 18;
	mov.b64 	%rd12749, {%r8644, %r8643};
	xor.b64  	%rd12750, %rd12749, %rd12748;
	shf.l.wrap.b32 	%r8645, %r8639, %r8640, 23;
	shf.l.wrap.b32 	%r8646, %r8640, %r8639, 23;
	mov.b64 	%rd12751, {%r8646, %r8645};
	xor.b64  	%rd12752, %rd12750, %rd12751;
	xor.b64  	%rd12753, %rd12707, %rd12680;
	and.b64  	%rd12754, %rd12734, %rd12753;
	xor.b64  	%rd12755, %rd12754, %rd12680;
	add.s64 	%rd12756, %rd12653, %rd18574;
	ld.const.u64 	%rd12757, [%rd12747];
	add.s64 	%rd12758, %rd12756, %rd12757;
	add.s64 	%rd12759, %rd12758, %rd12755;
	add.s64 	%rd12760, %rd12759, %rd12752;
	add.s64 	%rd12761, %rd12760, %rd12664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8647,%dummy}, %rd12745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8648}, %rd12745;
	}
	shf.r.wrap.b32 	%r8649, %r8648, %r8647, 28;
	shf.r.wrap.b32 	%r8650, %r8647, %r8648, 28;
	mov.b64 	%rd12762, {%r8650, %r8649};
	shf.l.wrap.b32 	%r8651, %r8647, %r8648, 30;
	shf.l.wrap.b32 	%r8652, %r8648, %r8647, 30;
	mov.b64 	%rd12763, {%r8652, %r8651};
	xor.b64  	%rd12764, %rd12763, %rd12762;
	shf.l.wrap.b32 	%r8653, %r8647, %r8648, 25;
	shf.l.wrap.b32 	%r8654, %r8648, %r8647, 25;
	mov.b64 	%rd12765, {%r8654, %r8653};
	xor.b64  	%rd12766, %rd12764, %rd12765;
	and.b64  	%rd12767, %rd12745, %rd12718;
	xor.b64  	%rd12768, %rd12745, %rd12718;
	and.b64  	%rd12769, %rd12768, %rd12691;
	or.b64  	%rd12770, %rd12769, %rd12767;
	add.s64 	%rd12771, %rd12760, %rd12770;
	add.s64 	%rd12772, %rd12771, %rd12766;
	add.s32 	%r8655, %r12671, 6;
	mul.wide.s32 	%rd12773, %r8655, 8;
	add.s64 	%rd12774, %rd18238, %rd12773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8656,%dummy}, %rd12761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8657}, %rd12761;
	}
	shf.r.wrap.b32 	%r8658, %r8657, %r8656, 14;
	shf.r.wrap.b32 	%r8659, %r8656, %r8657, 14;
	mov.b64 	%rd12775, {%r8659, %r8658};
	shf.r.wrap.b32 	%r8660, %r8657, %r8656, 18;
	shf.r.wrap.b32 	%r8661, %r8656, %r8657, 18;
	mov.b64 	%rd12776, {%r8661, %r8660};
	xor.b64  	%rd12777, %rd12776, %rd12775;
	shf.l.wrap.b32 	%r8662, %r8656, %r8657, 23;
	shf.l.wrap.b32 	%r8663, %r8657, %r8656, 23;
	mov.b64 	%rd12778, {%r8663, %r8662};
	xor.b64  	%rd12779, %rd12777, %rd12778;
	xor.b64  	%rd12780, %rd12734, %rd12707;
	and.b64  	%rd12781, %rd12761, %rd12780;
	xor.b64  	%rd12782, %rd12781, %rd12707;
	add.s64 	%rd12783, %rd12680, %rd18575;
	ld.const.u64 	%rd12784, [%rd12774];
	add.s64 	%rd12785, %rd12783, %rd12784;
	add.s64 	%rd12786, %rd12785, %rd12782;
	add.s64 	%rd12787, %rd12786, %rd12779;
	add.s64 	%rd12788, %rd12787, %rd12691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8664,%dummy}, %rd12772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8665}, %rd12772;
	}
	shf.r.wrap.b32 	%r8666, %r8665, %r8664, 28;
	shf.r.wrap.b32 	%r8667, %r8664, %r8665, 28;
	mov.b64 	%rd12789, {%r8667, %r8666};
	shf.l.wrap.b32 	%r8668, %r8664, %r8665, 30;
	shf.l.wrap.b32 	%r8669, %r8665, %r8664, 30;
	mov.b64 	%rd12790, {%r8669, %r8668};
	xor.b64  	%rd12791, %rd12790, %rd12789;
	shf.l.wrap.b32 	%r8670, %r8664, %r8665, 25;
	shf.l.wrap.b32 	%r8671, %r8665, %r8664, 25;
	mov.b64 	%rd12792, {%r8671, %r8670};
	xor.b64  	%rd12793, %rd12791, %rd12792;
	and.b64  	%rd12794, %rd12772, %rd12745;
	xor.b64  	%rd12795, %rd12772, %rd12745;
	and.b64  	%rd12796, %rd12795, %rd12718;
	or.b64  	%rd12797, %rd12796, %rd12794;
	add.s64 	%rd12798, %rd12787, %rd12797;
	add.s64 	%rd12799, %rd12798, %rd12793;
	add.s32 	%r8672, %r12671, 7;
	mul.wide.s32 	%rd12800, %r8672, 8;
	add.s64 	%rd12801, %rd18238, %rd12800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8673,%dummy}, %rd12788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8674}, %rd12788;
	}
	shf.r.wrap.b32 	%r8675, %r8674, %r8673, 14;
	shf.r.wrap.b32 	%r8676, %r8673, %r8674, 14;
	mov.b64 	%rd12802, {%r8676, %r8675};
	shf.r.wrap.b32 	%r8677, %r8674, %r8673, 18;
	shf.r.wrap.b32 	%r8678, %r8673, %r8674, 18;
	mov.b64 	%rd12803, {%r8678, %r8677};
	xor.b64  	%rd12804, %rd12803, %rd12802;
	shf.l.wrap.b32 	%r8679, %r8673, %r8674, 23;
	shf.l.wrap.b32 	%r8680, %r8674, %r8673, 23;
	mov.b64 	%rd12805, {%r8680, %r8679};
	xor.b64  	%rd12806, %rd12804, %rd12805;
	xor.b64  	%rd12807, %rd12761, %rd12734;
	and.b64  	%rd12808, %rd12788, %rd12807;
	xor.b64  	%rd12809, %rd12808, %rd12734;
	add.s64 	%rd12810, %rd12707, %rd18576;
	ld.const.u64 	%rd12811, [%rd12801];
	add.s64 	%rd12812, %rd12810, %rd12811;
	add.s64 	%rd12813, %rd12812, %rd12809;
	add.s64 	%rd12814, %rd12813, %rd12806;
	add.s64 	%rd12815, %rd12814, %rd12718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8681,%dummy}, %rd12799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8682}, %rd12799;
	}
	shf.r.wrap.b32 	%r8683, %r8682, %r8681, 28;
	shf.r.wrap.b32 	%r8684, %r8681, %r8682, 28;
	mov.b64 	%rd12816, {%r8684, %r8683};
	shf.l.wrap.b32 	%r8685, %r8681, %r8682, 30;
	shf.l.wrap.b32 	%r8686, %r8682, %r8681, 30;
	mov.b64 	%rd12817, {%r8686, %r8685};
	xor.b64  	%rd12818, %rd12817, %rd12816;
	shf.l.wrap.b32 	%r8687, %r8681, %r8682, 25;
	shf.l.wrap.b32 	%r8688, %r8682, %r8681, 25;
	mov.b64 	%rd12819, {%r8688, %r8687};
	xor.b64  	%rd12820, %rd12818, %rd12819;
	and.b64  	%rd12821, %rd12799, %rd12772;
	xor.b64  	%rd12822, %rd12799, %rd12772;
	and.b64  	%rd12823, %rd12822, %rd12745;
	or.b64  	%rd12824, %rd12823, %rd12821;
	add.s64 	%rd12825, %rd12814, %rd12824;
	add.s64 	%rd12826, %rd12825, %rd12820;
	add.s32 	%r8689, %r12671, 8;
	mul.wide.s32 	%rd12827, %r8689, 8;
	add.s64 	%rd12828, %rd18238, %rd12827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8690,%dummy}, %rd12815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8691}, %rd12815;
	}
	shf.r.wrap.b32 	%r8692, %r8691, %r8690, 14;
	shf.r.wrap.b32 	%r8693, %r8690, %r8691, 14;
	mov.b64 	%rd12829, {%r8693, %r8692};
	shf.r.wrap.b32 	%r8694, %r8691, %r8690, 18;
	shf.r.wrap.b32 	%r8695, %r8690, %r8691, 18;
	mov.b64 	%rd12830, {%r8695, %r8694};
	xor.b64  	%rd12831, %rd12830, %rd12829;
	shf.l.wrap.b32 	%r8696, %r8690, %r8691, 23;
	shf.l.wrap.b32 	%r8697, %r8691, %r8690, 23;
	mov.b64 	%rd12832, {%r8697, %r8696};
	xor.b64  	%rd12833, %rd12831, %rd12832;
	xor.b64  	%rd12834, %rd12788, %rd12761;
	and.b64  	%rd12835, %rd12815, %rd12834;
	xor.b64  	%rd12836, %rd12835, %rd12761;
	add.s64 	%rd12837, %rd12734, %rd18560;
	ld.const.u64 	%rd12838, [%rd12828];
	add.s64 	%rd12839, %rd12837, %rd12838;
	add.s64 	%rd12840, %rd12839, %rd12836;
	add.s64 	%rd12841, %rd12840, %rd12833;
	add.s64 	%rd12842, %rd12841, %rd12745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8698,%dummy}, %rd12826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8699}, %rd12826;
	}
	shf.r.wrap.b32 	%r8700, %r8699, %r8698, 28;
	shf.r.wrap.b32 	%r8701, %r8698, %r8699, 28;
	mov.b64 	%rd12843, {%r8701, %r8700};
	shf.l.wrap.b32 	%r8702, %r8698, %r8699, 30;
	shf.l.wrap.b32 	%r8703, %r8699, %r8698, 30;
	mov.b64 	%rd12844, {%r8703, %r8702};
	xor.b64  	%rd12845, %rd12844, %rd12843;
	shf.l.wrap.b32 	%r8704, %r8698, %r8699, 25;
	shf.l.wrap.b32 	%r8705, %r8699, %r8698, 25;
	mov.b64 	%rd12846, {%r8705, %r8704};
	xor.b64  	%rd12847, %rd12845, %rd12846;
	and.b64  	%rd12848, %rd12826, %rd12799;
	xor.b64  	%rd12849, %rd12826, %rd12799;
	and.b64  	%rd12850, %rd12849, %rd12772;
	or.b64  	%rd12851, %rd12850, %rd12848;
	add.s64 	%rd12852, %rd12841, %rd12851;
	add.s64 	%rd12853, %rd12852, %rd12847;
	add.s32 	%r8706, %r12671, 9;
	mul.wide.s32 	%rd12854, %r8706, 8;
	add.s64 	%rd12855, %rd18238, %rd12854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8707,%dummy}, %rd12842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8708}, %rd12842;
	}
	shf.r.wrap.b32 	%r8709, %r8708, %r8707, 14;
	shf.r.wrap.b32 	%r8710, %r8707, %r8708, 14;
	mov.b64 	%rd12856, {%r8710, %r8709};
	shf.r.wrap.b32 	%r8711, %r8708, %r8707, 18;
	shf.r.wrap.b32 	%r8712, %r8707, %r8708, 18;
	mov.b64 	%rd12857, {%r8712, %r8711};
	xor.b64  	%rd12858, %rd12857, %rd12856;
	shf.l.wrap.b32 	%r8713, %r8707, %r8708, 23;
	shf.l.wrap.b32 	%r8714, %r8708, %r8707, 23;
	mov.b64 	%rd12859, {%r8714, %r8713};
	xor.b64  	%rd12860, %rd12858, %rd12859;
	xor.b64  	%rd12861, %rd12815, %rd12788;
	and.b64  	%rd12862, %rd12842, %rd12861;
	xor.b64  	%rd12863, %rd12862, %rd12788;
	add.s64 	%rd12864, %rd12761, %rd18559;
	ld.const.u64 	%rd12865, [%rd12855];
	add.s64 	%rd12866, %rd12864, %rd12865;
	add.s64 	%rd12867, %rd12866, %rd12863;
	add.s64 	%rd12868, %rd12867, %rd12860;
	add.s64 	%rd12869, %rd12868, %rd12772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8715,%dummy}, %rd12853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8716}, %rd12853;
	}
	shf.r.wrap.b32 	%r8717, %r8716, %r8715, 28;
	shf.r.wrap.b32 	%r8718, %r8715, %r8716, 28;
	mov.b64 	%rd12870, {%r8718, %r8717};
	shf.l.wrap.b32 	%r8719, %r8715, %r8716, 30;
	shf.l.wrap.b32 	%r8720, %r8716, %r8715, 30;
	mov.b64 	%rd12871, {%r8720, %r8719};
	xor.b64  	%rd12872, %rd12871, %rd12870;
	shf.l.wrap.b32 	%r8721, %r8715, %r8716, 25;
	shf.l.wrap.b32 	%r8722, %r8716, %r8715, 25;
	mov.b64 	%rd12873, {%r8722, %r8721};
	xor.b64  	%rd12874, %rd12872, %rd12873;
	and.b64  	%rd12875, %rd12853, %rd12826;
	xor.b64  	%rd12876, %rd12853, %rd12826;
	and.b64  	%rd12877, %rd12876, %rd12799;
	or.b64  	%rd12878, %rd12877, %rd12875;
	add.s64 	%rd12879, %rd12868, %rd12878;
	add.s64 	%rd12880, %rd12879, %rd12874;
	add.s32 	%r8723, %r12671, 10;
	mul.wide.s32 	%rd12881, %r8723, 8;
	add.s64 	%rd12882, %rd18238, %rd12881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8724,%dummy}, %rd12869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8725}, %rd12869;
	}
	shf.r.wrap.b32 	%r8726, %r8725, %r8724, 14;
	shf.r.wrap.b32 	%r8727, %r8724, %r8725, 14;
	mov.b64 	%rd12883, {%r8727, %r8726};
	shf.r.wrap.b32 	%r8728, %r8725, %r8724, 18;
	shf.r.wrap.b32 	%r8729, %r8724, %r8725, 18;
	mov.b64 	%rd12884, {%r8729, %r8728};
	xor.b64  	%rd12885, %rd12884, %rd12883;
	shf.l.wrap.b32 	%r8730, %r8724, %r8725, 23;
	shf.l.wrap.b32 	%r8731, %r8725, %r8724, 23;
	mov.b64 	%rd12886, {%r8731, %r8730};
	xor.b64  	%rd12887, %rd12885, %rd12886;
	xor.b64  	%rd12888, %rd12842, %rd12815;
	and.b64  	%rd12889, %rd12869, %rd12888;
	xor.b64  	%rd12890, %rd12889, %rd12815;
	add.s64 	%rd12891, %rd12788, %rd18558;
	ld.const.u64 	%rd12892, [%rd12882];
	add.s64 	%rd12893, %rd12891, %rd12892;
	add.s64 	%rd12894, %rd12893, %rd12890;
	add.s64 	%rd12895, %rd12894, %rd12887;
	add.s64 	%rd12896, %rd12895, %rd12799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8732,%dummy}, %rd12880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8733}, %rd12880;
	}
	shf.r.wrap.b32 	%r8734, %r8733, %r8732, 28;
	shf.r.wrap.b32 	%r8735, %r8732, %r8733, 28;
	mov.b64 	%rd12897, {%r8735, %r8734};
	shf.l.wrap.b32 	%r8736, %r8732, %r8733, 30;
	shf.l.wrap.b32 	%r8737, %r8733, %r8732, 30;
	mov.b64 	%rd12898, {%r8737, %r8736};
	xor.b64  	%rd12899, %rd12898, %rd12897;
	shf.l.wrap.b32 	%r8738, %r8732, %r8733, 25;
	shf.l.wrap.b32 	%r8739, %r8733, %r8732, 25;
	mov.b64 	%rd12900, {%r8739, %r8738};
	xor.b64  	%rd12901, %rd12899, %rd12900;
	and.b64  	%rd12902, %rd12880, %rd12853;
	xor.b64  	%rd12903, %rd12880, %rd12853;
	and.b64  	%rd12904, %rd12903, %rd12826;
	or.b64  	%rd12905, %rd12904, %rd12902;
	add.s64 	%rd12906, %rd12895, %rd12905;
	add.s64 	%rd12907, %rd12906, %rd12901;
	add.s32 	%r8740, %r12671, 11;
	mul.wide.s32 	%rd12908, %r8740, 8;
	add.s64 	%rd12909, %rd18238, %rd12908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8741,%dummy}, %rd12896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8742}, %rd12896;
	}
	shf.r.wrap.b32 	%r8743, %r8742, %r8741, 14;
	shf.r.wrap.b32 	%r8744, %r8741, %r8742, 14;
	mov.b64 	%rd12910, {%r8744, %r8743};
	shf.r.wrap.b32 	%r8745, %r8742, %r8741, 18;
	shf.r.wrap.b32 	%r8746, %r8741, %r8742, 18;
	mov.b64 	%rd12911, {%r8746, %r8745};
	xor.b64  	%rd12912, %rd12911, %rd12910;
	shf.l.wrap.b32 	%r8747, %r8741, %r8742, 23;
	shf.l.wrap.b32 	%r8748, %r8742, %r8741, 23;
	mov.b64 	%rd12913, {%r8748, %r8747};
	xor.b64  	%rd12914, %rd12912, %rd12913;
	xor.b64  	%rd12915, %rd12869, %rd12842;
	and.b64  	%rd12916, %rd12896, %rd12915;
	xor.b64  	%rd12917, %rd12916, %rd12842;
	add.s64 	%rd12918, %rd12815, %rd18557;
	ld.const.u64 	%rd12919, [%rd12909];
	add.s64 	%rd12920, %rd12918, %rd12919;
	add.s64 	%rd12921, %rd12920, %rd12917;
	add.s64 	%rd12922, %rd12921, %rd12914;
	add.s64 	%rd12923, %rd12922, %rd12826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8749,%dummy}, %rd12907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8750}, %rd12907;
	}
	shf.r.wrap.b32 	%r8751, %r8750, %r8749, 28;
	shf.r.wrap.b32 	%r8752, %r8749, %r8750, 28;
	mov.b64 	%rd12924, {%r8752, %r8751};
	shf.l.wrap.b32 	%r8753, %r8749, %r8750, 30;
	shf.l.wrap.b32 	%r8754, %r8750, %r8749, 30;
	mov.b64 	%rd12925, {%r8754, %r8753};
	xor.b64  	%rd12926, %rd12925, %rd12924;
	shf.l.wrap.b32 	%r8755, %r8749, %r8750, 25;
	shf.l.wrap.b32 	%r8756, %r8750, %r8749, 25;
	mov.b64 	%rd12927, {%r8756, %r8755};
	xor.b64  	%rd12928, %rd12926, %rd12927;
	and.b64  	%rd12929, %rd12907, %rd12880;
	xor.b64  	%rd12930, %rd12907, %rd12880;
	and.b64  	%rd12931, %rd12930, %rd12853;
	or.b64  	%rd12932, %rd12931, %rd12929;
	add.s64 	%rd12933, %rd12922, %rd12932;
	add.s64 	%rd12934, %rd12933, %rd12928;
	add.s32 	%r8757, %r12671, 12;
	mul.wide.s32 	%rd12935, %r8757, 8;
	add.s64 	%rd12936, %rd18238, %rd12935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8758,%dummy}, %rd12923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8759}, %rd12923;
	}
	shf.r.wrap.b32 	%r8760, %r8759, %r8758, 14;
	shf.r.wrap.b32 	%r8761, %r8758, %r8759, 14;
	mov.b64 	%rd12937, {%r8761, %r8760};
	shf.r.wrap.b32 	%r8762, %r8759, %r8758, 18;
	shf.r.wrap.b32 	%r8763, %r8758, %r8759, 18;
	mov.b64 	%rd12938, {%r8763, %r8762};
	xor.b64  	%rd12939, %rd12938, %rd12937;
	shf.l.wrap.b32 	%r8764, %r8758, %r8759, 23;
	shf.l.wrap.b32 	%r8765, %r8759, %r8758, 23;
	mov.b64 	%rd12940, {%r8765, %r8764};
	xor.b64  	%rd12941, %rd12939, %rd12940;
	xor.b64  	%rd12942, %rd12896, %rd12869;
	and.b64  	%rd12943, %rd12923, %rd12942;
	xor.b64  	%rd12944, %rd12943, %rd12869;
	add.s64 	%rd12945, %rd12842, %rd18556;
	ld.const.u64 	%rd12946, [%rd12936];
	add.s64 	%rd12947, %rd12945, %rd12946;
	add.s64 	%rd12948, %rd12947, %rd12944;
	add.s64 	%rd12949, %rd12948, %rd12941;
	add.s64 	%rd18568, %rd12949, %rd12853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8766,%dummy}, %rd12934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8767}, %rd12934;
	}
	shf.r.wrap.b32 	%r8768, %r8767, %r8766, 28;
	shf.r.wrap.b32 	%r8769, %r8766, %r8767, 28;
	mov.b64 	%rd12950, {%r8769, %r8768};
	shf.l.wrap.b32 	%r8770, %r8766, %r8767, 30;
	shf.l.wrap.b32 	%r8771, %r8767, %r8766, 30;
	mov.b64 	%rd12951, {%r8771, %r8770};
	xor.b64  	%rd12952, %rd12951, %rd12950;
	shf.l.wrap.b32 	%r8772, %r8766, %r8767, 25;
	shf.l.wrap.b32 	%r8773, %r8767, %r8766, 25;
	mov.b64 	%rd12953, {%r8773, %r8772};
	xor.b64  	%rd12954, %rd12952, %rd12953;
	and.b64  	%rd12955, %rd12934, %rd12907;
	xor.b64  	%rd12956, %rd12934, %rd12907;
	and.b64  	%rd12957, %rd12956, %rd12880;
	or.b64  	%rd12958, %rd12957, %rd12955;
	add.s64 	%rd12959, %rd12949, %rd12958;
	add.s64 	%rd18564, %rd12959, %rd12954;
	add.s32 	%r8774, %r12671, 13;
	mul.wide.s32 	%rd12960, %r8774, 8;
	add.s64 	%rd12961, %rd18238, %rd12960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8775,%dummy}, %rd18568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8776}, %rd18568;
	}
	shf.r.wrap.b32 	%r8777, %r8776, %r8775, 14;
	shf.r.wrap.b32 	%r8778, %r8775, %r8776, 14;
	mov.b64 	%rd12962, {%r8778, %r8777};
	shf.r.wrap.b32 	%r8779, %r8776, %r8775, 18;
	shf.r.wrap.b32 	%r8780, %r8775, %r8776, 18;
	mov.b64 	%rd12963, {%r8780, %r8779};
	xor.b64  	%rd12964, %rd12963, %rd12962;
	shf.l.wrap.b32 	%r8781, %r8775, %r8776, 23;
	shf.l.wrap.b32 	%r8782, %r8776, %r8775, 23;
	mov.b64 	%rd12965, {%r8782, %r8781};
	xor.b64  	%rd12966, %rd12964, %rd12965;
	xor.b64  	%rd12967, %rd12923, %rd12896;
	and.b64  	%rd12968, %rd18568, %rd12967;
	xor.b64  	%rd12969, %rd12968, %rd12896;
	add.s64 	%rd12970, %rd12869, %rd18555;
	ld.const.u64 	%rd12971, [%rd12961];
	add.s64 	%rd12972, %rd12970, %rd12971;
	add.s64 	%rd12973, %rd12972, %rd12969;
	add.s64 	%rd12974, %rd12973, %rd12966;
	add.s64 	%rd18567, %rd12974, %rd12880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8783,%dummy}, %rd18564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8784}, %rd18564;
	}
	shf.r.wrap.b32 	%r8785, %r8784, %r8783, 28;
	shf.r.wrap.b32 	%r8786, %r8783, %r8784, 28;
	mov.b64 	%rd12975, {%r8786, %r8785};
	shf.l.wrap.b32 	%r8787, %r8783, %r8784, 30;
	shf.l.wrap.b32 	%r8788, %r8784, %r8783, 30;
	mov.b64 	%rd12976, {%r8788, %r8787};
	xor.b64  	%rd12977, %rd12976, %rd12975;
	shf.l.wrap.b32 	%r8789, %r8783, %r8784, 25;
	shf.l.wrap.b32 	%r8790, %r8784, %r8783, 25;
	mov.b64 	%rd12978, {%r8790, %r8789};
	xor.b64  	%rd12979, %rd12977, %rd12978;
	and.b64  	%rd12980, %rd18564, %rd12934;
	xor.b64  	%rd12981, %rd18564, %rd12934;
	and.b64  	%rd12982, %rd12981, %rd12907;
	or.b64  	%rd12983, %rd12982, %rd12980;
	add.s64 	%rd12984, %rd12974, %rd12983;
	add.s64 	%rd18563, %rd12984, %rd12979;
	add.s32 	%r8791, %r12671, 14;
	mul.wide.s32 	%rd12985, %r8791, 8;
	add.s64 	%rd12986, %rd18238, %rd12985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8792,%dummy}, %rd18567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8793}, %rd18567;
	}
	shf.r.wrap.b32 	%r8794, %r8793, %r8792, 14;
	shf.r.wrap.b32 	%r8795, %r8792, %r8793, 14;
	mov.b64 	%rd12987, {%r8795, %r8794};
	shf.r.wrap.b32 	%r8796, %r8793, %r8792, 18;
	shf.r.wrap.b32 	%r8797, %r8792, %r8793, 18;
	mov.b64 	%rd12988, {%r8797, %r8796};
	xor.b64  	%rd12989, %rd12988, %rd12987;
	shf.l.wrap.b32 	%r8798, %r8792, %r8793, 23;
	shf.l.wrap.b32 	%r8799, %r8793, %r8792, 23;
	mov.b64 	%rd12990, {%r8799, %r8798};
	xor.b64  	%rd12991, %rd12989, %rd12990;
	xor.b64  	%rd12992, %rd18568, %rd12923;
	and.b64  	%rd12993, %rd18567, %rd12992;
	xor.b64  	%rd12994, %rd12993, %rd12923;
	add.s64 	%rd12995, %rd12896, %rd18554;
	ld.const.u64 	%rd12996, [%rd12986];
	add.s64 	%rd12997, %rd12995, %rd12996;
	add.s64 	%rd12998, %rd12997, %rd12994;
	add.s64 	%rd12999, %rd12998, %rd12991;
	add.s64 	%rd18566, %rd12999, %rd12907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8800,%dummy}, %rd18563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8801}, %rd18563;
	}
	shf.r.wrap.b32 	%r8802, %r8801, %r8800, 28;
	shf.r.wrap.b32 	%r8803, %r8800, %r8801, 28;
	mov.b64 	%rd13000, {%r8803, %r8802};
	shf.l.wrap.b32 	%r8804, %r8800, %r8801, 30;
	shf.l.wrap.b32 	%r8805, %r8801, %r8800, 30;
	mov.b64 	%rd13001, {%r8805, %r8804};
	xor.b64  	%rd13002, %rd13001, %rd13000;
	shf.l.wrap.b32 	%r8806, %r8800, %r8801, 25;
	shf.l.wrap.b32 	%r8807, %r8801, %r8800, 25;
	mov.b64 	%rd13003, {%r8807, %r8806};
	xor.b64  	%rd13004, %rd13002, %rd13003;
	and.b64  	%rd13005, %rd18563, %rd18564;
	xor.b64  	%rd13006, %rd18563, %rd18564;
	and.b64  	%rd13007, %rd13006, %rd12934;
	or.b64  	%rd13008, %rd13007, %rd13005;
	add.s64 	%rd13009, %rd12999, %rd13008;
	add.s64 	%rd18562, %rd13009, %rd13004;
	add.s32 	%r8808, %r12671, 15;
	mul.wide.s32 	%rd13010, %r8808, 8;
	add.s64 	%rd13011, %rd18238, %rd13010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8809,%dummy}, %rd18566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8810}, %rd18566;
	}
	shf.r.wrap.b32 	%r8811, %r8810, %r8809, 14;
	shf.r.wrap.b32 	%r8812, %r8809, %r8810, 14;
	mov.b64 	%rd13012, {%r8812, %r8811};
	shf.r.wrap.b32 	%r8813, %r8810, %r8809, 18;
	shf.r.wrap.b32 	%r8814, %r8809, %r8810, 18;
	mov.b64 	%rd13013, {%r8814, %r8813};
	xor.b64  	%rd13014, %rd13013, %rd13012;
	shf.l.wrap.b32 	%r8815, %r8809, %r8810, 23;
	shf.l.wrap.b32 	%r8816, %r8810, %r8809, 23;
	mov.b64 	%rd13015, {%r8816, %r8815};
	xor.b64  	%rd13016, %rd13014, %rd13015;
	xor.b64  	%rd13017, %rd18567, %rd18568;
	and.b64  	%rd13018, %rd18566, %rd13017;
	xor.b64  	%rd13019, %rd13018, %rd18568;
	add.s64 	%rd13020, %rd12923, %rd18553;
	ld.const.u64 	%rd13021, [%rd13011];
	add.s64 	%rd13022, %rd13020, %rd13021;
	add.s64 	%rd13023, %rd13022, %rd13019;
	add.s64 	%rd13024, %rd13023, %rd13016;
	add.s64 	%rd18565, %rd13024, %rd12934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8817,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8818}, %rd18562;
	}
	shf.r.wrap.b32 	%r8819, %r8818, %r8817, 28;
	shf.r.wrap.b32 	%r8820, %r8817, %r8818, 28;
	mov.b64 	%rd13025, {%r8820, %r8819};
	shf.l.wrap.b32 	%r8821, %r8817, %r8818, 30;
	shf.l.wrap.b32 	%r8822, %r8818, %r8817, 30;
	mov.b64 	%rd13026, {%r8822, %r8821};
	xor.b64  	%rd13027, %rd13026, %rd13025;
	shf.l.wrap.b32 	%r8823, %r8817, %r8818, 25;
	shf.l.wrap.b32 	%r8824, %r8818, %r8817, 25;
	mov.b64 	%rd13028, {%r8824, %r8823};
	xor.b64  	%rd13029, %rd13027, %rd13028;
	and.b64  	%rd13030, %rd18562, %rd18563;
	xor.b64  	%rd13031, %rd18562, %rd18563;
	and.b64  	%rd13032, %rd13031, %rd18564;
	or.b64  	%rd13033, %rd13032, %rd13030;
	add.s64 	%rd13034, %rd13024, %rd13033;
	add.s64 	%rd18561, %rd13034, %rd13029;
	add.s32 	%r12671, %r12671, 16;
	setp.lt.s32	%p120, %r12671, 80;
	@%p120 bra 	BB0_200;

	add.s64 	%rd13035, %rd928, %rd18561;
	st.local.u64 	[%rd1], %rd13035;
	add.s64 	%rd13036, %rd929, %rd18562;
	st.local.u64 	[%rd1+8], %rd13036;
	add.s64 	%rd13037, %rd930, %rd18563;
	st.local.u64 	[%rd1+16], %rd13037;
	add.s64 	%rd13038, %rd927, %rd18564;
	st.local.u64 	[%rd1+24], %rd13038;
	add.s64 	%rd13039, %rd922, %rd18565;
	st.local.u64 	[%rd1+32], %rd13039;
	add.s64 	%rd13040, %rd924, %rd18566;
	st.local.u64 	[%rd1+40], %rd13040;
	add.s64 	%rd13041, %rd923, %rd18567;
	st.local.u64 	[%rd1+48], %rd13041;
	add.s64 	%rd13042, %rd925, %rd18568;
	st.local.u64 	[%rd1+56], %rd13042;
	sub.s32 	%r295, %r2, %r275;
	setp.lt.s32	%p121, %r295, 1;
	@%p121 bra 	BB0_204;

	and.b32  	%r8826, %r12661, 127;
	sub.s32 	%r12672, %r1990, %r8826;
	mov.u32 	%r12673, 0;

BB0_203:
	xor.b32  	%r8828, %r12672, 7;
	cvt.s64.s32	%rd13043, %r8828;
	add.s64 	%rd13044, %rd1460, %rd13043;
	ld.local.u8 	%rs232, [%rd13044];
	xor.b32  	%r8829, %r12673, 7;
	cvt.s64.s32	%rd13045, %r8829;
	add.s64 	%rd13046, %rd90, %rd13045;
	st.local.u8 	[%rd13046], %rs232;
	add.s32 	%r12672, %r12672, 1;
	add.s32 	%r12673, %r12673, 1;
	setp.lt.s32	%p122, %r12673, %r295;
	@%p122 bra 	BB0_203;

BB0_204:
	add.s32 	%r12662, %r12662, 1;
	setp.lt.u32	%p124, %r12662, %r2;
	@%p124 bra 	BB0_279;

	ld.local.u32 	%r12676, [%rd1+192];

BB0_206:
	and.b32  	%r309, %r12676, 127;
	sub.s32 	%r310, %r1990, %r309;
	and.b32  	%r311, %r310, 3;
	setp.eq.s32	%p125, %r311, 0;
	mov.u32 	%r317, %r309;
	@%p125 bra 	BB0_212;

	setp.eq.s32	%p126, %r311, 1;
	mov.u32 	%r12678, %r309;
	@%p126 bra 	BB0_211;

	setp.eq.s32	%p127, %r311, 2;
	mov.u32 	%r12677, %r309;
	@%p127 bra 	BB0_210;

	xor.b32  	%r8833, %r309, 7;
	cvt.u64.u32	%rd13051, %r8833;
	add.s64 	%rd13052, %rd90, %rd13051;
	mov.u16 	%rs234, 0;
	st.local.u8 	[%rd13052], %rs234;
	add.s32 	%r12677, %r309, 1;

BB0_210:
	xor.b32  	%r8834, %r12677, 7;
	cvt.s64.s32	%rd13053, %r8834;
	add.s64 	%rd13054, %rd90, %rd13053;
	mov.u16 	%rs235, 0;
	st.local.u8 	[%rd13054], %rs235;
	add.s32 	%r12678, %r12677, 1;

BB0_211:
	xor.b32  	%r8835, %r12678, 7;
	cvt.s64.s32	%rd13055, %r8835;
	add.s64 	%rd13056, %rd90, %rd13055;
	mov.u16 	%rs236, 0;
	st.local.u8 	[%rd13056], %rs236;
	add.s32 	%r317, %r12678, 1;

BB0_212:
	setp.lt.u32	%p128, %r310, 4;
	@%p128 bra 	BB0_222;

	add.s32 	%r318, %r317, 4;
	setp.gt.s32	%p129, %r318, 128;
	add.s32 	%r319, %r317, 3;
	selp.b32	%r8836, %r319, 127, %p129;
	sub.s32 	%r8837, %r8836, %r317;
	shr.u32 	%r8838, %r8837, 2;
	add.s32 	%r320, %r8838, 1;
	and.b32  	%r321, %r320, 3;
	setp.eq.s32	%p130, %r321, 0;
	@%p130 bra 	BB0_220;

	setp.eq.s32	%p131, %r321, 1;
	@%p131 bra 	BB0_219;

	setp.eq.s32	%p132, %r321, 2;
	@%p132 bra 	BB0_216;
	bra.uni 	BB0_217;

BB0_216:
	mov.u32 	%r318, %r317;
	bra.uni 	BB0_218;

BB0_217:
	xor.b32  	%r8839, %r317, 7;
	cvt.s64.s32	%rd13057, %r8839;
	add.s64 	%rd13058, %rd90, %rd13057;
	mov.u16 	%rs237, 0;
	st.local.u8 	[%rd13058], %rs237;
	add.s32 	%r8840, %r317, 1;
	xor.b32  	%r8841, %r8840, 7;
	cvt.s64.s32	%rd13059, %r8841;
	add.s64 	%rd13060, %rd90, %rd13059;
	st.local.u8 	[%rd13060], %rs237;
	add.s32 	%r8842, %r317, 2;
	xor.b32  	%r8843, %r8842, 7;
	cvt.s64.s32	%rd13061, %r8843;
	add.s64 	%rd13062, %rd90, %rd13061;
	st.local.u8 	[%rd13062], %rs237;
	xor.b32  	%r8844, %r319, 7;
	cvt.s64.s32	%rd13063, %r8844;
	add.s64 	%rd13064, %rd90, %rd13063;
	st.local.u8 	[%rd13064], %rs237;

BB0_218:
	xor.b32  	%r8845, %r318, 7;
	cvt.s64.s32	%rd13065, %r8845;
	add.s64 	%rd13066, %rd90, %rd13065;
	mov.u16 	%rs238, 0;
	st.local.u8 	[%rd13066], %rs238;
	add.s32 	%r8846, %r318, 1;
	xor.b32  	%r8847, %r8846, 7;
	cvt.s64.s32	%rd13067, %r8847;
	add.s64 	%rd13068, %rd90, %rd13067;
	st.local.u8 	[%rd13068], %rs238;
	add.s32 	%r8848, %r318, 2;
	xor.b32  	%r8849, %r8848, 7;
	cvt.s64.s32	%rd13069, %r8849;
	add.s64 	%rd13070, %rd90, %rd13069;
	st.local.u8 	[%rd13070], %rs238;
	add.s32 	%r8850, %r318, 3;
	xor.b32  	%r8851, %r8850, 7;
	cvt.s64.s32	%rd13071, %r8851;
	add.s64 	%rd13072, %rd90, %rd13071;
	st.local.u8 	[%rd13072], %rs238;
	add.s32 	%r317, %r318, 4;

BB0_219:
	xor.b32  	%r8852, %r317, 7;
	cvt.s64.s32	%rd13073, %r8852;
	add.s64 	%rd13074, %rd90, %rd13073;
	mov.u16 	%rs239, 0;
	st.local.u8 	[%rd13074], %rs239;
	add.s32 	%r8853, %r317, 1;
	xor.b32  	%r8854, %r8853, 7;
	cvt.s64.s32	%rd13075, %r8854;
	add.s64 	%rd13076, %rd90, %rd13075;
	st.local.u8 	[%rd13076], %rs239;
	add.s32 	%r8855, %r317, 2;
	xor.b32  	%r8856, %r8855, 7;
	cvt.s64.s32	%rd13077, %r8856;
	add.s64 	%rd13078, %rd90, %rd13077;
	st.local.u8 	[%rd13078], %rs239;
	add.s32 	%r8857, %r317, 3;
	xor.b32  	%r8858, %r8857, 7;
	cvt.s64.s32	%rd13079, %r8858;
	add.s64 	%rd13080, %rd90, %rd13079;
	st.local.u8 	[%rd13080], %rs239;
	add.s32 	%r317, %r317, 4;

BB0_220:
	setp.lt.u32	%p133, %r320, 4;
	@%p133 bra 	BB0_222;

BB0_221:
	xor.b32  	%r8859, %r317, 7;
	cvt.s64.s32	%rd13081, %r8859;
	add.s64 	%rd13082, %rd90, %rd13081;
	mov.u16 	%rs240, 0;
	st.local.u8 	[%rd13082], %rs240;
	add.s32 	%r8860, %r317, 1;
	xor.b32  	%r8861, %r8860, 7;
	cvt.s64.s32	%rd13083, %r8861;
	add.s64 	%rd13084, %rd90, %rd13083;
	st.local.u8 	[%rd13084], %rs240;
	add.s32 	%r8862, %r317, 2;
	xor.b32  	%r8863, %r8862, 7;
	cvt.s64.s32	%rd13085, %r8863;
	add.s64 	%rd13086, %rd90, %rd13085;
	st.local.u8 	[%rd13086], %rs240;
	add.s32 	%r8864, %r317, 3;
	xor.b32  	%r8865, %r8864, 7;
	cvt.s64.s32	%rd13087, %r8865;
	add.s64 	%rd13088, %rd90, %rd13087;
	st.local.u8 	[%rd13088], %rs240;
	add.s32 	%r8866, %r317, 4;
	xor.b32  	%r8867, %r8866, 7;
	cvt.s64.s32	%rd13089, %r8867;
	add.s64 	%rd13090, %rd90, %rd13089;
	st.local.u8 	[%rd13090], %rs240;
	add.s32 	%r8868, %r317, 5;
	xor.b32  	%r8869, %r8868, 7;
	cvt.s64.s32	%rd13091, %r8869;
	add.s64 	%rd13092, %rd90, %rd13091;
	st.local.u8 	[%rd13092], %rs240;
	add.s32 	%r8870, %r317, 6;
	xor.b32  	%r8871, %r8870, 7;
	cvt.s64.s32	%rd13093, %r8871;
	add.s64 	%rd13094, %rd90, %rd13093;
	st.local.u8 	[%rd13094], %rs240;
	add.s32 	%r8872, %r317, 7;
	xor.b32  	%r8873, %r8872, 7;
	cvt.s64.s32	%rd13095, %r8873;
	add.s64 	%rd13096, %rd90, %rd13095;
	st.local.u8 	[%rd13096], %rs240;
	add.s32 	%r8874, %r317, 8;
	xor.b32  	%r8875, %r8874, 7;
	cvt.s64.s32	%rd13097, %r8875;
	add.s64 	%rd13098, %rd90, %rd13097;
	st.local.u8 	[%rd13098], %rs240;
	add.s32 	%r8876, %r317, 9;
	xor.b32  	%r8877, %r8876, 7;
	cvt.s64.s32	%rd13099, %r8877;
	add.s64 	%rd13100, %rd90, %rd13099;
	st.local.u8 	[%rd13100], %rs240;
	add.s32 	%r8878, %r317, 10;
	xor.b32  	%r8879, %r8878, 7;
	cvt.s64.s32	%rd13101, %r8879;
	add.s64 	%rd13102, %rd90, %rd13101;
	st.local.u8 	[%rd13102], %rs240;
	add.s32 	%r8880, %r317, 11;
	xor.b32  	%r8881, %r8880, 7;
	cvt.s64.s32	%rd13103, %r8881;
	add.s64 	%rd13104, %rd90, %rd13103;
	st.local.u8 	[%rd13104], %rs240;
	add.s32 	%r8882, %r317, 12;
	xor.b32  	%r8883, %r8882, 7;
	cvt.s64.s32	%rd13105, %r8883;
	add.s64 	%rd13106, %rd90, %rd13105;
	st.local.u8 	[%rd13106], %rs240;
	add.s32 	%r8884, %r317, 13;
	xor.b32  	%r8885, %r8884, 7;
	cvt.s64.s32	%rd13107, %r8885;
	add.s64 	%rd13108, %rd90, %rd13107;
	st.local.u8 	[%rd13108], %rs240;
	add.s32 	%r8886, %r317, 14;
	xor.b32  	%r8887, %r8886, 7;
	cvt.s64.s32	%rd13109, %r8887;
	add.s64 	%rd13110, %rd90, %rd13109;
	st.local.u8 	[%rd13110], %rs240;
	add.s32 	%r8888, %r317, 15;
	xor.b32  	%r8889, %r8888, 7;
	cvt.s64.s32	%rd13111, %r8889;
	add.s64 	%rd13112, %rd90, %rd13111;
	st.local.u8 	[%rd13112], %rs240;
	add.s32 	%r317, %r317, 16;
	setp.lt.s32	%p134, %r317, 128;
	@%p134 bra 	BB0_221;

BB0_222:
	mov.u16 	%rs269, 128;
	xor.b32  	%r8890, %r309, 7;
	cvt.u64.u32	%rd13113, %r8890;
	add.s64 	%rd13114, %rd90, %rd13113;
	st.local.u8 	[%rd13114], %rs269;
	ld.local.u64 	%rd18640, [%rd1+64];
	ld.local.u64 	%rd18641, [%rd1+72];
	ld.local.u64 	%rd18642, [%rd1+80];
	ld.local.u64 	%rd18643, [%rd1+88];
	ld.local.u64 	%rd18644, [%rd1+96];
	ld.local.u64 	%rd18645, [%rd1+104];
	ld.local.u64 	%rd18646, [%rd1+112];
	ld.local.u64 	%rd18647, [%rd1+120];
	ld.local.u64 	%rd18631, [%rd1+128];
	ld.local.u64 	%rd18630, [%rd1+136];
	ld.local.u64 	%rd18629, [%rd1+144];
	ld.local.u64 	%rd18628, [%rd1+152];
	ld.local.u64 	%rd18627, [%rd1+160];
	ld.local.u64 	%rd18626, [%rd1+168];
	ld.local.u64 	%rd18625, [%rd1+176];
	setp.gt.u32	%p135, %r309, 111;
	@%p135 bra 	BB0_224;
	bra.uni 	BB0_223;

BB0_224:
	ld.local.u64 	%rd1025, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8892,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8893}, %rd1025;
	}
	shf.r.wrap.b32 	%r8894, %r8893, %r8892, 14;
	shf.r.wrap.b32 	%r8895, %r8892, %r8893, 14;
	mov.b64 	%rd13115, {%r8895, %r8894};
	shf.r.wrap.b32 	%r8896, %r8893, %r8892, 18;
	shf.r.wrap.b32 	%r8897, %r8892, %r8893, 18;
	mov.b64 	%rd13116, {%r8897, %r8896};
	xor.b64  	%rd13117, %rd13116, %rd13115;
	shf.l.wrap.b32 	%r8898, %r8892, %r8893, 23;
	shf.l.wrap.b32 	%r8899, %r8893, %r8892, 23;
	mov.b64 	%rd13118, {%r8899, %r8898};
	xor.b64  	%rd13119, %rd13117, %rd13118;
	ld.local.u64 	%rd1026, [%rd1+48];
	ld.local.u64 	%rd1027, [%rd1+40];
	xor.b64  	%rd13120, %rd1026, %rd1027;
	and.b64  	%rd13121, %rd13120, %rd1025;
	xor.b64  	%rd13122, %rd13121, %rd1026;
	ld.local.u64 	%rd1028, [%rd1+56];
	add.s64 	%rd13123, %rd1028, %rd18640;
	add.s64 	%rd13124, %rd13123, %rd18338;
	add.s64 	%rd13125, %rd13124, %rd13122;
	add.s64 	%rd13126, %rd13125, %rd13119;
	ld.local.u64 	%rd1029, [%rd1+24];
	add.s64 	%rd13127, %rd13126, %rd1029;
	ld.local.u64 	%rd1030, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8900,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8901}, %rd1030;
	}
	shf.r.wrap.b32 	%r8902, %r8901, %r8900, 28;
	shf.r.wrap.b32 	%r8903, %r8900, %r8901, 28;
	mov.b64 	%rd13128, {%r8903, %r8902};
	shf.l.wrap.b32 	%r8904, %r8900, %r8901, 30;
	shf.l.wrap.b32 	%r8905, %r8901, %r8900, 30;
	mov.b64 	%rd13129, {%r8905, %r8904};
	xor.b64  	%rd13130, %rd13129, %rd13128;
	shf.l.wrap.b32 	%r8906, %r8900, %r8901, 25;
	shf.l.wrap.b32 	%r8907, %r8901, %r8900, 25;
	mov.b64 	%rd13131, {%r8907, %r8906};
	xor.b64  	%rd13132, %rd13130, %rd13131;
	ld.local.u64 	%rd1031, [%rd1+8];
	and.b64  	%rd13133, %rd1031, %rd1030;
	xor.b64  	%rd13134, %rd1031, %rd1030;
	ld.local.u64 	%rd1032, [%rd1+16];
	and.b64  	%rd13135, %rd1032, %rd13134;
	or.b64  	%rd13136, %rd13135, %rd13133;
	add.s64 	%rd13137, %rd13126, %rd13136;
	add.s64 	%rd13138, %rd13137, %rd13132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8908,%dummy}, %rd13127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8909}, %rd13127;
	}
	shf.r.wrap.b32 	%r8910, %r8909, %r8908, 14;
	shf.r.wrap.b32 	%r8911, %r8908, %r8909, 14;
	mov.b64 	%rd13139, {%r8911, %r8910};
	shf.r.wrap.b32 	%r8912, %r8909, %r8908, 18;
	shf.r.wrap.b32 	%r8913, %r8908, %r8909, 18;
	mov.b64 	%rd13140, {%r8913, %r8912};
	xor.b64  	%rd13141, %rd13140, %rd13139;
	shf.l.wrap.b32 	%r8914, %r8908, %r8909, 23;
	shf.l.wrap.b32 	%r8915, %r8909, %r8908, 23;
	mov.b64 	%rd13142, {%r8915, %r8914};
	xor.b64  	%rd13143, %rd13141, %rd13142;
	xor.b64  	%rd13144, %rd1027, %rd1025;
	and.b64  	%rd13145, %rd13127, %rd13144;
	xor.b64  	%rd13146, %rd13145, %rd1027;
	add.s64 	%rd13147, %rd1026, %rd18641;
	add.s64 	%rd13148, %rd13147, %rd18337;
	add.s64 	%rd13149, %rd13148, %rd13146;
	add.s64 	%rd13150, %rd13149, %rd13143;
	add.s64 	%rd13151, %rd13150, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8916,%dummy}, %rd13138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8917}, %rd13138;
	}
	shf.r.wrap.b32 	%r8918, %r8917, %r8916, 28;
	shf.r.wrap.b32 	%r8919, %r8916, %r8917, 28;
	mov.b64 	%rd13152, {%r8919, %r8918};
	shf.l.wrap.b32 	%r8920, %r8916, %r8917, 30;
	shf.l.wrap.b32 	%r8921, %r8917, %r8916, 30;
	mov.b64 	%rd13153, {%r8921, %r8920};
	xor.b64  	%rd13154, %rd13153, %rd13152;
	shf.l.wrap.b32 	%r8922, %r8916, %r8917, 25;
	shf.l.wrap.b32 	%r8923, %r8917, %r8916, 25;
	mov.b64 	%rd13155, {%r8923, %r8922};
	xor.b64  	%rd13156, %rd13154, %rd13155;
	and.b64  	%rd13157, %rd13138, %rd1030;
	xor.b64  	%rd13158, %rd13138, %rd1030;
	and.b64  	%rd13159, %rd13158, %rd1031;
	or.b64  	%rd13160, %rd13159, %rd13157;
	add.s64 	%rd13161, %rd13150, %rd13160;
	add.s64 	%rd13162, %rd13161, %rd13156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8924,%dummy}, %rd13151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8925}, %rd13151;
	}
	shf.r.wrap.b32 	%r8926, %r8925, %r8924, 14;
	shf.r.wrap.b32 	%r8927, %r8924, %r8925, 14;
	mov.b64 	%rd13163, {%r8927, %r8926};
	shf.r.wrap.b32 	%r8928, %r8925, %r8924, 18;
	shf.r.wrap.b32 	%r8929, %r8924, %r8925, 18;
	mov.b64 	%rd13164, {%r8929, %r8928};
	xor.b64  	%rd13165, %rd13164, %rd13163;
	shf.l.wrap.b32 	%r8930, %r8924, %r8925, 23;
	shf.l.wrap.b32 	%r8931, %r8925, %r8924, 23;
	mov.b64 	%rd13166, {%r8931, %r8930};
	xor.b64  	%rd13167, %rd13165, %rd13166;
	xor.b64  	%rd13168, %rd13127, %rd1025;
	and.b64  	%rd13169, %rd13151, %rd13168;
	xor.b64  	%rd13170, %rd13169, %rd1025;
	add.s64 	%rd13171, %rd1027, %rd18642;
	add.s64 	%rd13172, %rd13171, %rd18336;
	add.s64 	%rd13173, %rd13172, %rd13170;
	add.s64 	%rd13174, %rd13173, %rd13167;
	add.s64 	%rd13175, %rd13174, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8932,%dummy}, %rd13162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8933}, %rd13162;
	}
	shf.r.wrap.b32 	%r8934, %r8933, %r8932, 28;
	shf.r.wrap.b32 	%r8935, %r8932, %r8933, 28;
	mov.b64 	%rd13176, {%r8935, %r8934};
	shf.l.wrap.b32 	%r8936, %r8932, %r8933, 30;
	shf.l.wrap.b32 	%r8937, %r8933, %r8932, 30;
	mov.b64 	%rd13177, {%r8937, %r8936};
	xor.b64  	%rd13178, %rd13177, %rd13176;
	shf.l.wrap.b32 	%r8938, %r8932, %r8933, 25;
	shf.l.wrap.b32 	%r8939, %r8933, %r8932, 25;
	mov.b64 	%rd13179, {%r8939, %r8938};
	xor.b64  	%rd13180, %rd13178, %rd13179;
	and.b64  	%rd13181, %rd13162, %rd13138;
	xor.b64  	%rd13182, %rd13162, %rd13138;
	and.b64  	%rd13183, %rd13182, %rd1030;
	or.b64  	%rd13184, %rd13183, %rd13181;
	add.s64 	%rd13185, %rd13174, %rd13184;
	add.s64 	%rd13186, %rd13185, %rd13180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8940,%dummy}, %rd13175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8941}, %rd13175;
	}
	shf.r.wrap.b32 	%r8942, %r8941, %r8940, 14;
	shf.r.wrap.b32 	%r8943, %r8940, %r8941, 14;
	mov.b64 	%rd13187, {%r8943, %r8942};
	shf.r.wrap.b32 	%r8944, %r8941, %r8940, 18;
	shf.r.wrap.b32 	%r8945, %r8940, %r8941, 18;
	mov.b64 	%rd13188, {%r8945, %r8944};
	xor.b64  	%rd13189, %rd13188, %rd13187;
	shf.l.wrap.b32 	%r8946, %r8940, %r8941, 23;
	shf.l.wrap.b32 	%r8947, %r8941, %r8940, 23;
	mov.b64 	%rd13190, {%r8947, %r8946};
	xor.b64  	%rd13191, %rd13189, %rd13190;
	xor.b64  	%rd13192, %rd13151, %rd13127;
	and.b64  	%rd13193, %rd13175, %rd13192;
	xor.b64  	%rd13194, %rd13193, %rd13127;
	add.s64 	%rd13195, %rd1025, %rd18643;
	add.s64 	%rd13196, %rd13195, %rd18335;
	add.s64 	%rd13197, %rd13196, %rd13194;
	add.s64 	%rd13198, %rd13197, %rd13191;
	add.s64 	%rd13199, %rd13198, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8948,%dummy}, %rd13186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8949}, %rd13186;
	}
	shf.r.wrap.b32 	%r8950, %r8949, %r8948, 28;
	shf.r.wrap.b32 	%r8951, %r8948, %r8949, 28;
	mov.b64 	%rd13200, {%r8951, %r8950};
	shf.l.wrap.b32 	%r8952, %r8948, %r8949, 30;
	shf.l.wrap.b32 	%r8953, %r8949, %r8948, 30;
	mov.b64 	%rd13201, {%r8953, %r8952};
	xor.b64  	%rd13202, %rd13201, %rd13200;
	shf.l.wrap.b32 	%r8954, %r8948, %r8949, 25;
	shf.l.wrap.b32 	%r8955, %r8949, %r8948, 25;
	mov.b64 	%rd13203, {%r8955, %r8954};
	xor.b64  	%rd13204, %rd13202, %rd13203;
	and.b64  	%rd13205, %rd13186, %rd13162;
	xor.b64  	%rd13206, %rd13186, %rd13162;
	and.b64  	%rd13207, %rd13206, %rd13138;
	or.b64  	%rd13208, %rd13207, %rd13205;
	add.s64 	%rd13209, %rd13198, %rd13208;
	add.s64 	%rd13210, %rd13209, %rd13204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd13199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8957}, %rd13199;
	}
	shf.r.wrap.b32 	%r8958, %r8957, %r8956, 14;
	shf.r.wrap.b32 	%r8959, %r8956, %r8957, 14;
	mov.b64 	%rd13211, {%r8959, %r8958};
	shf.r.wrap.b32 	%r8960, %r8957, %r8956, 18;
	shf.r.wrap.b32 	%r8961, %r8956, %r8957, 18;
	mov.b64 	%rd13212, {%r8961, %r8960};
	xor.b64  	%rd13213, %rd13212, %rd13211;
	shf.l.wrap.b32 	%r8962, %r8956, %r8957, 23;
	shf.l.wrap.b32 	%r8963, %r8957, %r8956, 23;
	mov.b64 	%rd13214, {%r8963, %r8962};
	xor.b64  	%rd13215, %rd13213, %rd13214;
	xor.b64  	%rd13216, %rd13175, %rd13151;
	and.b64  	%rd13217, %rd13199, %rd13216;
	xor.b64  	%rd13218, %rd13217, %rd13151;
	add.s64 	%rd13219, %rd13127, %rd18644;
	add.s64 	%rd13220, %rd13219, %rd18334;
	add.s64 	%rd13221, %rd13220, %rd13218;
	add.s64 	%rd13222, %rd13221, %rd13215;
	add.s64 	%rd13223, %rd13222, %rd13138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd13210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8965}, %rd13210;
	}
	shf.r.wrap.b32 	%r8966, %r8965, %r8964, 28;
	shf.r.wrap.b32 	%r8967, %r8964, %r8965, 28;
	mov.b64 	%rd13224, {%r8967, %r8966};
	shf.l.wrap.b32 	%r8968, %r8964, %r8965, 30;
	shf.l.wrap.b32 	%r8969, %r8965, %r8964, 30;
	mov.b64 	%rd13225, {%r8969, %r8968};
	xor.b64  	%rd13226, %rd13225, %rd13224;
	shf.l.wrap.b32 	%r8970, %r8964, %r8965, 25;
	shf.l.wrap.b32 	%r8971, %r8965, %r8964, 25;
	mov.b64 	%rd13227, {%r8971, %r8970};
	xor.b64  	%rd13228, %rd13226, %rd13227;
	and.b64  	%rd13229, %rd13210, %rd13186;
	xor.b64  	%rd13230, %rd13210, %rd13186;
	and.b64  	%rd13231, %rd13230, %rd13162;
	or.b64  	%rd13232, %rd13231, %rd13229;
	add.s64 	%rd13233, %rd13222, %rd13232;
	add.s64 	%rd13234, %rd13233, %rd13228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd13223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8973}, %rd13223;
	}
	shf.r.wrap.b32 	%r8974, %r8973, %r8972, 14;
	shf.r.wrap.b32 	%r8975, %r8972, %r8973, 14;
	mov.b64 	%rd13235, {%r8975, %r8974};
	shf.r.wrap.b32 	%r8976, %r8973, %r8972, 18;
	shf.r.wrap.b32 	%r8977, %r8972, %r8973, 18;
	mov.b64 	%rd13236, {%r8977, %r8976};
	xor.b64  	%rd13237, %rd13236, %rd13235;
	shf.l.wrap.b32 	%r8978, %r8972, %r8973, 23;
	shf.l.wrap.b32 	%r8979, %r8973, %r8972, 23;
	mov.b64 	%rd13238, {%r8979, %r8978};
	xor.b64  	%rd13239, %rd13237, %rd13238;
	xor.b64  	%rd13240, %rd13199, %rd13175;
	and.b64  	%rd13241, %rd13223, %rd13240;
	xor.b64  	%rd13242, %rd13241, %rd13175;
	add.s64 	%rd13243, %rd13151, %rd18645;
	add.s64 	%rd13244, %rd13243, %rd18333;
	add.s64 	%rd13245, %rd13244, %rd13242;
	add.s64 	%rd13246, %rd13245, %rd13239;
	add.s64 	%rd13247, %rd13246, %rd13162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8980,%dummy}, %rd13234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8981}, %rd13234;
	}
	shf.r.wrap.b32 	%r8982, %r8981, %r8980, 28;
	shf.r.wrap.b32 	%r8983, %r8980, %r8981, 28;
	mov.b64 	%rd13248, {%r8983, %r8982};
	shf.l.wrap.b32 	%r8984, %r8980, %r8981, 30;
	shf.l.wrap.b32 	%r8985, %r8981, %r8980, 30;
	mov.b64 	%rd13249, {%r8985, %r8984};
	xor.b64  	%rd13250, %rd13249, %rd13248;
	shf.l.wrap.b32 	%r8986, %r8980, %r8981, 25;
	shf.l.wrap.b32 	%r8987, %r8981, %r8980, 25;
	mov.b64 	%rd13251, {%r8987, %r8986};
	xor.b64  	%rd13252, %rd13250, %rd13251;
	and.b64  	%rd13253, %rd13234, %rd13210;
	xor.b64  	%rd13254, %rd13234, %rd13210;
	and.b64  	%rd13255, %rd13254, %rd13186;
	or.b64  	%rd13256, %rd13255, %rd13253;
	add.s64 	%rd13257, %rd13246, %rd13256;
	add.s64 	%rd13258, %rd13257, %rd13252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8988,%dummy}, %rd13247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8989}, %rd13247;
	}
	shf.r.wrap.b32 	%r8990, %r8989, %r8988, 14;
	shf.r.wrap.b32 	%r8991, %r8988, %r8989, 14;
	mov.b64 	%rd13259, {%r8991, %r8990};
	shf.r.wrap.b32 	%r8992, %r8989, %r8988, 18;
	shf.r.wrap.b32 	%r8993, %r8988, %r8989, 18;
	mov.b64 	%rd13260, {%r8993, %r8992};
	xor.b64  	%rd13261, %rd13260, %rd13259;
	shf.l.wrap.b32 	%r8994, %r8988, %r8989, 23;
	shf.l.wrap.b32 	%r8995, %r8989, %r8988, 23;
	mov.b64 	%rd13262, {%r8995, %r8994};
	xor.b64  	%rd13263, %rd13261, %rd13262;
	xor.b64  	%rd13264, %rd13223, %rd13199;
	and.b64  	%rd13265, %rd13247, %rd13264;
	xor.b64  	%rd13266, %rd13265, %rd13199;
	add.s64 	%rd13267, %rd13175, %rd18646;
	add.s64 	%rd13268, %rd13267, %rd18332;
	add.s64 	%rd13269, %rd13268, %rd13266;
	add.s64 	%rd13270, %rd13269, %rd13263;
	add.s64 	%rd13271, %rd13270, %rd13186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8996,%dummy}, %rd13258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8997}, %rd13258;
	}
	shf.r.wrap.b32 	%r8998, %r8997, %r8996, 28;
	shf.r.wrap.b32 	%r8999, %r8996, %r8997, 28;
	mov.b64 	%rd13272, {%r8999, %r8998};
	shf.l.wrap.b32 	%r9000, %r8996, %r8997, 30;
	shf.l.wrap.b32 	%r9001, %r8997, %r8996, 30;
	mov.b64 	%rd13273, {%r9001, %r9000};
	xor.b64  	%rd13274, %rd13273, %rd13272;
	shf.l.wrap.b32 	%r9002, %r8996, %r8997, 25;
	shf.l.wrap.b32 	%r9003, %r8997, %r8996, 25;
	mov.b64 	%rd13275, {%r9003, %r9002};
	xor.b64  	%rd13276, %rd13274, %rd13275;
	and.b64  	%rd13277, %rd13258, %rd13234;
	xor.b64  	%rd13278, %rd13258, %rd13234;
	and.b64  	%rd13279, %rd13278, %rd13210;
	or.b64  	%rd13280, %rd13279, %rd13277;
	add.s64 	%rd13281, %rd13270, %rd13280;
	add.s64 	%rd13282, %rd13281, %rd13276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9004,%dummy}, %rd13271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9005}, %rd13271;
	}
	shf.r.wrap.b32 	%r9006, %r9005, %r9004, 14;
	shf.r.wrap.b32 	%r9007, %r9004, %r9005, 14;
	mov.b64 	%rd13283, {%r9007, %r9006};
	shf.r.wrap.b32 	%r9008, %r9005, %r9004, 18;
	shf.r.wrap.b32 	%r9009, %r9004, %r9005, 18;
	mov.b64 	%rd13284, {%r9009, %r9008};
	xor.b64  	%rd13285, %rd13284, %rd13283;
	shf.l.wrap.b32 	%r9010, %r9004, %r9005, 23;
	shf.l.wrap.b32 	%r9011, %r9005, %r9004, 23;
	mov.b64 	%rd13286, {%r9011, %r9010};
	xor.b64  	%rd13287, %rd13285, %rd13286;
	xor.b64  	%rd13288, %rd13247, %rd13223;
	and.b64  	%rd13289, %rd13271, %rd13288;
	xor.b64  	%rd13290, %rd13289, %rd13223;
	add.s64 	%rd13291, %rd13199, %rd18647;
	add.s64 	%rd13292, %rd13291, %rd18331;
	add.s64 	%rd13293, %rd13292, %rd13290;
	add.s64 	%rd13294, %rd13293, %rd13287;
	add.s64 	%rd13295, %rd13294, %rd13210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9012,%dummy}, %rd13282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9013}, %rd13282;
	}
	shf.r.wrap.b32 	%r9014, %r9013, %r9012, 28;
	shf.r.wrap.b32 	%r9015, %r9012, %r9013, 28;
	mov.b64 	%rd13296, {%r9015, %r9014};
	shf.l.wrap.b32 	%r9016, %r9012, %r9013, 30;
	shf.l.wrap.b32 	%r9017, %r9013, %r9012, 30;
	mov.b64 	%rd13297, {%r9017, %r9016};
	xor.b64  	%rd13298, %rd13297, %rd13296;
	shf.l.wrap.b32 	%r9018, %r9012, %r9013, 25;
	shf.l.wrap.b32 	%r9019, %r9013, %r9012, 25;
	mov.b64 	%rd13299, {%r9019, %r9018};
	xor.b64  	%rd13300, %rd13298, %rd13299;
	and.b64  	%rd13301, %rd13282, %rd13258;
	xor.b64  	%rd13302, %rd13282, %rd13258;
	and.b64  	%rd13303, %rd13302, %rd13234;
	or.b64  	%rd13304, %rd13303, %rd13301;
	add.s64 	%rd13305, %rd13294, %rd13304;
	add.s64 	%rd13306, %rd13305, %rd13300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9020,%dummy}, %rd13295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9021}, %rd13295;
	}
	shf.r.wrap.b32 	%r9022, %r9021, %r9020, 14;
	shf.r.wrap.b32 	%r9023, %r9020, %r9021, 14;
	mov.b64 	%rd13307, {%r9023, %r9022};
	shf.r.wrap.b32 	%r9024, %r9021, %r9020, 18;
	shf.r.wrap.b32 	%r9025, %r9020, %r9021, 18;
	mov.b64 	%rd13308, {%r9025, %r9024};
	xor.b64  	%rd13309, %rd13308, %rd13307;
	shf.l.wrap.b32 	%r9026, %r9020, %r9021, 23;
	shf.l.wrap.b32 	%r9027, %r9021, %r9020, 23;
	mov.b64 	%rd13310, {%r9027, %r9026};
	xor.b64  	%rd13311, %rd13309, %rd13310;
	xor.b64  	%rd13312, %rd13271, %rd13247;
	and.b64  	%rd13313, %rd13295, %rd13312;
	xor.b64  	%rd13314, %rd13313, %rd13247;
	add.s64 	%rd13315, %rd13223, %rd18631;
	add.s64 	%rd13316, %rd13315, %rd18330;
	add.s64 	%rd13317, %rd13316, %rd13314;
	add.s64 	%rd13318, %rd13317, %rd13311;
	add.s64 	%rd13319, %rd13318, %rd13234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9028,%dummy}, %rd13306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9029}, %rd13306;
	}
	shf.r.wrap.b32 	%r9030, %r9029, %r9028, 28;
	shf.r.wrap.b32 	%r9031, %r9028, %r9029, 28;
	mov.b64 	%rd13320, {%r9031, %r9030};
	shf.l.wrap.b32 	%r9032, %r9028, %r9029, 30;
	shf.l.wrap.b32 	%r9033, %r9029, %r9028, 30;
	mov.b64 	%rd13321, {%r9033, %r9032};
	xor.b64  	%rd13322, %rd13321, %rd13320;
	shf.l.wrap.b32 	%r9034, %r9028, %r9029, 25;
	shf.l.wrap.b32 	%r9035, %r9029, %r9028, 25;
	mov.b64 	%rd13323, {%r9035, %r9034};
	xor.b64  	%rd13324, %rd13322, %rd13323;
	and.b64  	%rd13325, %rd13306, %rd13282;
	xor.b64  	%rd13326, %rd13306, %rd13282;
	and.b64  	%rd13327, %rd13326, %rd13258;
	or.b64  	%rd13328, %rd13327, %rd13325;
	add.s64 	%rd13329, %rd13318, %rd13328;
	add.s64 	%rd13330, %rd13329, %rd13324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9036,%dummy}, %rd13319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9037}, %rd13319;
	}
	shf.r.wrap.b32 	%r9038, %r9037, %r9036, 14;
	shf.r.wrap.b32 	%r9039, %r9036, %r9037, 14;
	mov.b64 	%rd13331, {%r9039, %r9038};
	shf.r.wrap.b32 	%r9040, %r9037, %r9036, 18;
	shf.r.wrap.b32 	%r9041, %r9036, %r9037, 18;
	mov.b64 	%rd13332, {%r9041, %r9040};
	xor.b64  	%rd13333, %rd13332, %rd13331;
	shf.l.wrap.b32 	%r9042, %r9036, %r9037, 23;
	shf.l.wrap.b32 	%r9043, %r9037, %r9036, 23;
	mov.b64 	%rd13334, {%r9043, %r9042};
	xor.b64  	%rd13335, %rd13333, %rd13334;
	xor.b64  	%rd13336, %rd13295, %rd13271;
	and.b64  	%rd13337, %rd13319, %rd13336;
	xor.b64  	%rd13338, %rd13337, %rd13271;
	add.s64 	%rd13339, %rd13247, %rd18630;
	add.s64 	%rd13340, %rd13339, %rd18329;
	add.s64 	%rd13341, %rd13340, %rd13338;
	add.s64 	%rd13342, %rd13341, %rd13335;
	add.s64 	%rd13343, %rd13342, %rd13258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd13330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9045}, %rd13330;
	}
	shf.r.wrap.b32 	%r9046, %r9045, %r9044, 28;
	shf.r.wrap.b32 	%r9047, %r9044, %r9045, 28;
	mov.b64 	%rd13344, {%r9047, %r9046};
	shf.l.wrap.b32 	%r9048, %r9044, %r9045, 30;
	shf.l.wrap.b32 	%r9049, %r9045, %r9044, 30;
	mov.b64 	%rd13345, {%r9049, %r9048};
	xor.b64  	%rd13346, %rd13345, %rd13344;
	shf.l.wrap.b32 	%r9050, %r9044, %r9045, 25;
	shf.l.wrap.b32 	%r9051, %r9045, %r9044, 25;
	mov.b64 	%rd13347, {%r9051, %r9050};
	xor.b64  	%rd13348, %rd13346, %rd13347;
	and.b64  	%rd13349, %rd13330, %rd13306;
	xor.b64  	%rd13350, %rd13330, %rd13306;
	and.b64  	%rd13351, %rd13350, %rd13282;
	or.b64  	%rd13352, %rd13351, %rd13349;
	add.s64 	%rd13353, %rd13342, %rd13352;
	add.s64 	%rd13354, %rd13353, %rd13348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9052,%dummy}, %rd13343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9053}, %rd13343;
	}
	shf.r.wrap.b32 	%r9054, %r9053, %r9052, 14;
	shf.r.wrap.b32 	%r9055, %r9052, %r9053, 14;
	mov.b64 	%rd13355, {%r9055, %r9054};
	shf.r.wrap.b32 	%r9056, %r9053, %r9052, 18;
	shf.r.wrap.b32 	%r9057, %r9052, %r9053, 18;
	mov.b64 	%rd13356, {%r9057, %r9056};
	xor.b64  	%rd13357, %rd13356, %rd13355;
	shf.l.wrap.b32 	%r9058, %r9052, %r9053, 23;
	shf.l.wrap.b32 	%r9059, %r9053, %r9052, 23;
	mov.b64 	%rd13358, {%r9059, %r9058};
	xor.b64  	%rd13359, %rd13357, %rd13358;
	xor.b64  	%rd13360, %rd13319, %rd13295;
	and.b64  	%rd13361, %rd13343, %rd13360;
	xor.b64  	%rd13362, %rd13361, %rd13295;
	add.s64 	%rd13363, %rd13271, %rd18629;
	add.s64 	%rd13364, %rd13363, %rd18328;
	add.s64 	%rd13365, %rd13364, %rd13362;
	add.s64 	%rd13366, %rd13365, %rd13359;
	add.s64 	%rd13367, %rd13366, %rd13282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9060,%dummy}, %rd13354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9061}, %rd13354;
	}
	shf.r.wrap.b32 	%r9062, %r9061, %r9060, 28;
	shf.r.wrap.b32 	%r9063, %r9060, %r9061, 28;
	mov.b64 	%rd13368, {%r9063, %r9062};
	shf.l.wrap.b32 	%r9064, %r9060, %r9061, 30;
	shf.l.wrap.b32 	%r9065, %r9061, %r9060, 30;
	mov.b64 	%rd13369, {%r9065, %r9064};
	xor.b64  	%rd13370, %rd13369, %rd13368;
	shf.l.wrap.b32 	%r9066, %r9060, %r9061, 25;
	shf.l.wrap.b32 	%r9067, %r9061, %r9060, 25;
	mov.b64 	%rd13371, {%r9067, %r9066};
	xor.b64  	%rd13372, %rd13370, %rd13371;
	and.b64  	%rd13373, %rd13354, %rd13330;
	xor.b64  	%rd13374, %rd13354, %rd13330;
	and.b64  	%rd13375, %rd13374, %rd13306;
	or.b64  	%rd13376, %rd13375, %rd13373;
	add.s64 	%rd13377, %rd13366, %rd13376;
	add.s64 	%rd13378, %rd13377, %rd13372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9068,%dummy}, %rd13367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9069}, %rd13367;
	}
	shf.r.wrap.b32 	%r9070, %r9069, %r9068, 14;
	shf.r.wrap.b32 	%r9071, %r9068, %r9069, 14;
	mov.b64 	%rd13379, {%r9071, %r9070};
	shf.r.wrap.b32 	%r9072, %r9069, %r9068, 18;
	shf.r.wrap.b32 	%r9073, %r9068, %r9069, 18;
	mov.b64 	%rd13380, {%r9073, %r9072};
	xor.b64  	%rd13381, %rd13380, %rd13379;
	shf.l.wrap.b32 	%r9074, %r9068, %r9069, 23;
	shf.l.wrap.b32 	%r9075, %r9069, %r9068, 23;
	mov.b64 	%rd13382, {%r9075, %r9074};
	xor.b64  	%rd13383, %rd13381, %rd13382;
	xor.b64  	%rd13384, %rd13343, %rd13319;
	and.b64  	%rd13385, %rd13367, %rd13384;
	xor.b64  	%rd13386, %rd13385, %rd13319;
	add.s64 	%rd13387, %rd13295, %rd18628;
	add.s64 	%rd13388, %rd13387, %rd18327;
	add.s64 	%rd13389, %rd13388, %rd13386;
	add.s64 	%rd13390, %rd13389, %rd13383;
	add.s64 	%rd13391, %rd13390, %rd13306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd13378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9077}, %rd13378;
	}
	shf.r.wrap.b32 	%r9078, %r9077, %r9076, 28;
	shf.r.wrap.b32 	%r9079, %r9076, %r9077, 28;
	mov.b64 	%rd13392, {%r9079, %r9078};
	shf.l.wrap.b32 	%r9080, %r9076, %r9077, 30;
	shf.l.wrap.b32 	%r9081, %r9077, %r9076, 30;
	mov.b64 	%rd13393, {%r9081, %r9080};
	xor.b64  	%rd13394, %rd13393, %rd13392;
	shf.l.wrap.b32 	%r9082, %r9076, %r9077, 25;
	shf.l.wrap.b32 	%r9083, %r9077, %r9076, 25;
	mov.b64 	%rd13395, {%r9083, %r9082};
	xor.b64  	%rd13396, %rd13394, %rd13395;
	and.b64  	%rd13397, %rd13378, %rd13354;
	xor.b64  	%rd13398, %rd13378, %rd13354;
	and.b64  	%rd13399, %rd13398, %rd13330;
	or.b64  	%rd13400, %rd13399, %rd13397;
	add.s64 	%rd13401, %rd13390, %rd13400;
	add.s64 	%rd13402, %rd13401, %rd13396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9084,%dummy}, %rd13391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9085}, %rd13391;
	}
	shf.r.wrap.b32 	%r9086, %r9085, %r9084, 14;
	shf.r.wrap.b32 	%r9087, %r9084, %r9085, 14;
	mov.b64 	%rd13403, {%r9087, %r9086};
	shf.r.wrap.b32 	%r9088, %r9085, %r9084, 18;
	shf.r.wrap.b32 	%r9089, %r9084, %r9085, 18;
	mov.b64 	%rd13404, {%r9089, %r9088};
	xor.b64  	%rd13405, %rd13404, %rd13403;
	shf.l.wrap.b32 	%r9090, %r9084, %r9085, 23;
	shf.l.wrap.b32 	%r9091, %r9085, %r9084, 23;
	mov.b64 	%rd13406, {%r9091, %r9090};
	xor.b64  	%rd13407, %rd13405, %rd13406;
	xor.b64  	%rd13408, %rd13367, %rd13343;
	and.b64  	%rd13409, %rd13391, %rd13408;
	xor.b64  	%rd13410, %rd13409, %rd13343;
	add.s64 	%rd13411, %rd13319, %rd18627;
	add.s64 	%rd13412, %rd13411, %rd18326;
	add.s64 	%rd13413, %rd13412, %rd13410;
	add.s64 	%rd13414, %rd13413, %rd13407;
	add.s64 	%rd18592, %rd13414, %rd13330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd13402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd13402;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 28;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 28;
	mov.b64 	%rd13415, {%r9095, %r9094};
	shf.l.wrap.b32 	%r9096, %r9092, %r9093, 30;
	shf.l.wrap.b32 	%r9097, %r9093, %r9092, 30;
	mov.b64 	%rd13416, {%r9097, %r9096};
	xor.b64  	%rd13417, %rd13416, %rd13415;
	shf.l.wrap.b32 	%r9098, %r9092, %r9093, 25;
	shf.l.wrap.b32 	%r9099, %r9093, %r9092, 25;
	mov.b64 	%rd13418, {%r9099, %r9098};
	xor.b64  	%rd13419, %rd13417, %rd13418;
	and.b64  	%rd13420, %rd13402, %rd13378;
	xor.b64  	%rd13421, %rd13402, %rd13378;
	and.b64  	%rd13422, %rd13421, %rd13354;
	or.b64  	%rd13423, %rd13422, %rd13420;
	add.s64 	%rd13424, %rd13414, %rd13423;
	add.s64 	%rd18588, %rd13424, %rd13419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd18592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9101}, %rd18592;
	}
	shf.r.wrap.b32 	%r9102, %r9101, %r9100, 14;
	shf.r.wrap.b32 	%r9103, %r9100, %r9101, 14;
	mov.b64 	%rd13425, {%r9103, %r9102};
	shf.r.wrap.b32 	%r9104, %r9101, %r9100, 18;
	shf.r.wrap.b32 	%r9105, %r9100, %r9101, 18;
	mov.b64 	%rd13426, {%r9105, %r9104};
	xor.b64  	%rd13427, %rd13426, %rd13425;
	shf.l.wrap.b32 	%r9106, %r9100, %r9101, 23;
	shf.l.wrap.b32 	%r9107, %r9101, %r9100, 23;
	mov.b64 	%rd13428, {%r9107, %r9106};
	xor.b64  	%rd13429, %rd13427, %rd13428;
	xor.b64  	%rd13430, %rd13391, %rd13367;
	and.b64  	%rd13431, %rd18592, %rd13430;
	xor.b64  	%rd13432, %rd13431, %rd13367;
	add.s64 	%rd13433, %rd13343, %rd18626;
	add.s64 	%rd13434, %rd13433, %rd18325;
	add.s64 	%rd13435, %rd13434, %rd13432;
	add.s64 	%rd13436, %rd13435, %rd13429;
	add.s64 	%rd18591, %rd13436, %rd13354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9108,%dummy}, %rd18588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9109}, %rd18588;
	}
	shf.r.wrap.b32 	%r9110, %r9109, %r9108, 28;
	shf.r.wrap.b32 	%r9111, %r9108, %r9109, 28;
	mov.b64 	%rd13437, {%r9111, %r9110};
	shf.l.wrap.b32 	%r9112, %r9108, %r9109, 30;
	shf.l.wrap.b32 	%r9113, %r9109, %r9108, 30;
	mov.b64 	%rd13438, {%r9113, %r9112};
	xor.b64  	%rd13439, %rd13438, %rd13437;
	shf.l.wrap.b32 	%r9114, %r9108, %r9109, 25;
	shf.l.wrap.b32 	%r9115, %r9109, %r9108, 25;
	mov.b64 	%rd13440, {%r9115, %r9114};
	xor.b64  	%rd13441, %rd13439, %rd13440;
	and.b64  	%rd13442, %rd18588, %rd13402;
	xor.b64  	%rd13443, %rd18588, %rd13402;
	and.b64  	%rd13444, %rd13443, %rd13378;
	or.b64  	%rd13445, %rd13444, %rd13442;
	add.s64 	%rd13446, %rd13436, %rd13445;
	add.s64 	%rd18587, %rd13446, %rd13441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd18591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd18591;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 14;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 14;
	mov.b64 	%rd13447, {%r9119, %r9118};
	shf.r.wrap.b32 	%r9120, %r9117, %r9116, 18;
	shf.r.wrap.b32 	%r9121, %r9116, %r9117, 18;
	mov.b64 	%rd13448, {%r9121, %r9120};
	xor.b64  	%rd13449, %rd13448, %rd13447;
	shf.l.wrap.b32 	%r9122, %r9116, %r9117, 23;
	shf.l.wrap.b32 	%r9123, %r9117, %r9116, 23;
	mov.b64 	%rd13450, {%r9123, %r9122};
	xor.b64  	%rd13451, %rd13449, %rd13450;
	xor.b64  	%rd13452, %rd18592, %rd13391;
	and.b64  	%rd13453, %rd18591, %rd13452;
	xor.b64  	%rd13454, %rd13453, %rd13391;
	add.s64 	%rd13455, %rd13367, %rd18625;
	add.s64 	%rd13456, %rd13455, %rd18324;
	add.s64 	%rd13457, %rd13456, %rd13454;
	add.s64 	%rd13458, %rd13457, %rd13451;
	add.s64 	%rd18590, %rd13458, %rd13378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9124,%dummy}, %rd18587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9125}, %rd18587;
	}
	shf.r.wrap.b32 	%r9126, %r9125, %r9124, 28;
	shf.r.wrap.b32 	%r9127, %r9124, %r9125, 28;
	mov.b64 	%rd13459, {%r9127, %r9126};
	shf.l.wrap.b32 	%r9128, %r9124, %r9125, 30;
	shf.l.wrap.b32 	%r9129, %r9125, %r9124, 30;
	mov.b64 	%rd13460, {%r9129, %r9128};
	xor.b64  	%rd13461, %rd13460, %rd13459;
	shf.l.wrap.b32 	%r9130, %r9124, %r9125, 25;
	shf.l.wrap.b32 	%r9131, %r9125, %r9124, 25;
	mov.b64 	%rd13462, {%r9131, %r9130};
	xor.b64  	%rd13463, %rd13461, %rd13462;
	and.b64  	%rd13464, %rd18587, %rd18588;
	xor.b64  	%rd13465, %rd18587, %rd18588;
	and.b64  	%rd13466, %rd13465, %rd13402;
	or.b64  	%rd13467, %rd13466, %rd13464;
	add.s64 	%rd13468, %rd13458, %rd13467;
	add.s64 	%rd18586, %rd13468, %rd13463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9132,%dummy}, %rd18590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9133}, %rd18590;
	}
	shf.r.wrap.b32 	%r9134, %r9133, %r9132, 14;
	shf.r.wrap.b32 	%r9135, %r9132, %r9133, 14;
	mov.b64 	%rd13469, {%r9135, %r9134};
	shf.r.wrap.b32 	%r9136, %r9133, %r9132, 18;
	shf.r.wrap.b32 	%r9137, %r9132, %r9133, 18;
	mov.b64 	%rd13470, {%r9137, %r9136};
	xor.b64  	%rd13471, %rd13470, %rd13469;
	shf.l.wrap.b32 	%r9138, %r9132, %r9133, 23;
	shf.l.wrap.b32 	%r9139, %r9133, %r9132, 23;
	mov.b64 	%rd13472, {%r9139, %r9138};
	xor.b64  	%rd13473, %rd13471, %rd13472;
	xor.b64  	%rd13474, %rd18591, %rd18592;
	and.b64  	%rd13475, %rd18590, %rd13474;
	xor.b64  	%rd13476, %rd13475, %rd18592;
	ld.local.u64 	%rd18577, [%rd1+184];
	add.s64 	%rd13477, %rd13391, %rd18577;
	add.s64 	%rd13478, %rd13477, %rd18323;
	add.s64 	%rd13479, %rd13478, %rd13476;
	add.s64 	%rd13480, %rd13479, %rd13473;
	add.s64 	%rd18589, %rd13480, %rd13402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd18586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9141}, %rd18586;
	}
	shf.r.wrap.b32 	%r9142, %r9141, %r9140, 28;
	shf.r.wrap.b32 	%r9143, %r9140, %r9141, 28;
	mov.b64 	%rd13481, {%r9143, %r9142};
	shf.l.wrap.b32 	%r9144, %r9140, %r9141, 30;
	shf.l.wrap.b32 	%r9145, %r9141, %r9140, 30;
	mov.b64 	%rd13482, {%r9145, %r9144};
	xor.b64  	%rd13483, %rd13482, %rd13481;
	shf.l.wrap.b32 	%r9146, %r9140, %r9141, 25;
	shf.l.wrap.b32 	%r9147, %r9141, %r9140, 25;
	mov.b64 	%rd13484, {%r9147, %r9146};
	xor.b64  	%rd13485, %rd13483, %rd13484;
	and.b64  	%rd13486, %rd18586, %rd18587;
	xor.b64  	%rd13487, %rd18586, %rd18587;
	and.b64  	%rd13488, %rd13487, %rd18588;
	or.b64  	%rd13489, %rd13488, %rd13486;
	add.s64 	%rd13490, %rd13480, %rd13489;
	add.s64 	%rd18585, %rd13490, %rd13485;
	mov.u32 	%r12684, 16;

BB0_225:
	shr.u64 	%rd13491, %rd18625, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9148,%dummy}, %rd18625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9149}, %rd18625;
	}
	shf.r.wrap.b32 	%r9150, %r9149, %r9148, 19;
	shf.r.wrap.b32 	%r9151, %r9148, %r9149, 19;
	mov.b64 	%rd13492, {%r9151, %r9150};
	xor.b64  	%rd13493, %rd13492, %rd13491;
	shf.l.wrap.b32 	%r9152, %r9148, %r9149, 3;
	shf.l.wrap.b32 	%r9153, %r9149, %r9148, 3;
	mov.b64 	%rd13494, {%r9153, %r9152};
	xor.b64  	%rd13495, %rd13493, %rd13494;
	shr.u64 	%rd13496, %rd18641, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9154,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9155}, %rd18641;
	}
	shf.r.wrap.b32 	%r9156, %r9155, %r9154, 1;
	shf.r.wrap.b32 	%r9157, %r9154, %r9155, 1;
	mov.b64 	%rd13497, {%r9157, %r9156};
	xor.b64  	%rd13498, %rd13497, %rd13496;
	shf.r.wrap.b32 	%r9158, %r9155, %r9154, 8;
	shf.r.wrap.b32 	%r9159, %r9154, %r9155, 8;
	mov.b64 	%rd13499, {%r9159, %r9158};
	xor.b64  	%rd13500, %rd13498, %rd13499;
	add.s64 	%rd13501, %rd18640, %rd18630;
	add.s64 	%rd13502, %rd13501, %rd13495;
	add.s64 	%rd18640, %rd13502, %rd13500;
	shr.u64 	%rd13503, %rd18577, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9160,%dummy}, %rd18577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9161}, %rd18577;
	}
	shf.r.wrap.b32 	%r9162, %r9161, %r9160, 19;
	shf.r.wrap.b32 	%r9163, %r9160, %r9161, 19;
	mov.b64 	%rd13504, {%r9163, %r9162};
	xor.b64  	%rd13505, %rd13504, %rd13503;
	shf.l.wrap.b32 	%r9164, %r9160, %r9161, 3;
	shf.l.wrap.b32 	%r9165, %r9161, %r9160, 3;
	mov.b64 	%rd13506, {%r9165, %r9164};
	xor.b64  	%rd13507, %rd13505, %rd13506;
	shr.u64 	%rd13508, %rd18642, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9166,%dummy}, %rd18642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9167}, %rd18642;
	}
	shf.r.wrap.b32 	%r9168, %r9167, %r9166, 1;
	shf.r.wrap.b32 	%r9169, %r9166, %r9167, 1;
	mov.b64 	%rd13509, {%r9169, %r9168};
	xor.b64  	%rd13510, %rd13509, %rd13508;
	shf.r.wrap.b32 	%r9170, %r9167, %r9166, 8;
	shf.r.wrap.b32 	%r9171, %r9166, %r9167, 8;
	mov.b64 	%rd13511, {%r9171, %r9170};
	xor.b64  	%rd13512, %rd13510, %rd13511;
	add.s64 	%rd13513, %rd18641, %rd18629;
	add.s64 	%rd13514, %rd13513, %rd13507;
	add.s64 	%rd18641, %rd13514, %rd13512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9172,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9173}, %rd18640;
	}
	shf.r.wrap.b32 	%r9174, %r9173, %r9172, 19;
	shf.r.wrap.b32 	%r9175, %r9172, %r9173, 19;
	mov.b64 	%rd13515, {%r9175, %r9174};
	shf.l.wrap.b32 	%r9176, %r9172, %r9173, 3;
	shf.l.wrap.b32 	%r9177, %r9173, %r9172, 3;
	mov.b64 	%rd13516, {%r9177, %r9176};
	shr.u64 	%rd13517, %rd18640, 6;
	xor.b64  	%rd13518, %rd13515, %rd13517;
	xor.b64  	%rd13519, %rd13518, %rd13516;
	shr.u64 	%rd13520, %rd18643, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9178,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9179}, %rd18643;
	}
	shf.r.wrap.b32 	%r9180, %r9179, %r9178, 1;
	shf.r.wrap.b32 	%r9181, %r9178, %r9179, 1;
	mov.b64 	%rd13521, {%r9181, %r9180};
	xor.b64  	%rd13522, %rd13521, %rd13520;
	shf.r.wrap.b32 	%r9182, %r9179, %r9178, 8;
	shf.r.wrap.b32 	%r9183, %r9178, %r9179, 8;
	mov.b64 	%rd13523, {%r9183, %r9182};
	xor.b64  	%rd13524, %rd13522, %rd13523;
	add.s64 	%rd13525, %rd18642, %rd18628;
	add.s64 	%rd13526, %rd13525, %rd13519;
	add.s64 	%rd18642, %rd13526, %rd13524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9184,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9185}, %rd18641;
	}
	shf.r.wrap.b32 	%r9186, %r9185, %r9184, 19;
	shf.r.wrap.b32 	%r9187, %r9184, %r9185, 19;
	mov.b64 	%rd13527, {%r9187, %r9186};
	shf.l.wrap.b32 	%r9188, %r9184, %r9185, 3;
	shf.l.wrap.b32 	%r9189, %r9185, %r9184, 3;
	mov.b64 	%rd13528, {%r9189, %r9188};
	shr.u64 	%rd13529, %rd18641, 6;
	xor.b64  	%rd13530, %rd13527, %rd13529;
	xor.b64  	%rd13531, %rd13530, %rd13528;
	shr.u64 	%rd13532, %rd18644, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9190,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9191}, %rd18644;
	}
	shf.r.wrap.b32 	%r9192, %r9191, %r9190, 1;
	shf.r.wrap.b32 	%r9193, %r9190, %r9191, 1;
	mov.b64 	%rd13533, {%r9193, %r9192};
	xor.b64  	%rd13534, %rd13533, %rd13532;
	shf.r.wrap.b32 	%r9194, %r9191, %r9190, 8;
	shf.r.wrap.b32 	%r9195, %r9190, %r9191, 8;
	mov.b64 	%rd13535, {%r9195, %r9194};
	xor.b64  	%rd13536, %rd13534, %rd13535;
	add.s64 	%rd13537, %rd18643, %rd18627;
	add.s64 	%rd13538, %rd13537, %rd13531;
	add.s64 	%rd18643, %rd13538, %rd13536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd18642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9197}, %rd18642;
	}
	shf.r.wrap.b32 	%r9198, %r9197, %r9196, 19;
	shf.r.wrap.b32 	%r9199, %r9196, %r9197, 19;
	mov.b64 	%rd13539, {%r9199, %r9198};
	shf.l.wrap.b32 	%r9200, %r9196, %r9197, 3;
	shf.l.wrap.b32 	%r9201, %r9197, %r9196, 3;
	mov.b64 	%rd13540, {%r9201, %r9200};
	shr.u64 	%rd13541, %rd18642, 6;
	xor.b64  	%rd13542, %rd13539, %rd13541;
	xor.b64  	%rd13543, %rd13542, %rd13540;
	shr.u64 	%rd13544, %rd18645, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9202,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9203}, %rd18645;
	}
	shf.r.wrap.b32 	%r9204, %r9203, %r9202, 1;
	shf.r.wrap.b32 	%r9205, %r9202, %r9203, 1;
	mov.b64 	%rd13545, {%r9205, %r9204};
	xor.b64  	%rd13546, %rd13545, %rd13544;
	shf.r.wrap.b32 	%r9206, %r9203, %r9202, 8;
	shf.r.wrap.b32 	%r9207, %r9202, %r9203, 8;
	mov.b64 	%rd13547, {%r9207, %r9206};
	xor.b64  	%rd13548, %rd13546, %rd13547;
	add.s64 	%rd13549, %rd18644, %rd18626;
	add.s64 	%rd13550, %rd13549, %rd13543;
	add.s64 	%rd18644, %rd13550, %rd13548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9208,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9209}, %rd18643;
	}
	shf.r.wrap.b32 	%r9210, %r9209, %r9208, 19;
	shf.r.wrap.b32 	%r9211, %r9208, %r9209, 19;
	mov.b64 	%rd13551, {%r9211, %r9210};
	shf.l.wrap.b32 	%r9212, %r9208, %r9209, 3;
	shf.l.wrap.b32 	%r9213, %r9209, %r9208, 3;
	mov.b64 	%rd13552, {%r9213, %r9212};
	shr.u64 	%rd13553, %rd18643, 6;
	xor.b64  	%rd13554, %rd13551, %rd13553;
	xor.b64  	%rd13555, %rd13554, %rd13552;
	shr.u64 	%rd13556, %rd18646, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9214,%dummy}, %rd18646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9215}, %rd18646;
	}
	shf.r.wrap.b32 	%r9216, %r9215, %r9214, 1;
	shf.r.wrap.b32 	%r9217, %r9214, %r9215, 1;
	mov.b64 	%rd13557, {%r9217, %r9216};
	xor.b64  	%rd13558, %rd13557, %rd13556;
	shf.r.wrap.b32 	%r9218, %r9215, %r9214, 8;
	shf.r.wrap.b32 	%r9219, %r9214, %r9215, 8;
	mov.b64 	%rd13559, {%r9219, %r9218};
	xor.b64  	%rd13560, %rd13558, %rd13559;
	add.s64 	%rd13561, %rd18645, %rd18625;
	add.s64 	%rd13562, %rd13561, %rd13555;
	add.s64 	%rd18645, %rd13562, %rd13560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9220,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9221}, %rd18644;
	}
	shf.r.wrap.b32 	%r9222, %r9221, %r9220, 19;
	shf.r.wrap.b32 	%r9223, %r9220, %r9221, 19;
	mov.b64 	%rd13563, {%r9223, %r9222};
	shf.l.wrap.b32 	%r9224, %r9220, %r9221, 3;
	shf.l.wrap.b32 	%r9225, %r9221, %r9220, 3;
	mov.b64 	%rd13564, {%r9225, %r9224};
	shr.u64 	%rd13565, %rd18644, 6;
	xor.b64  	%rd13566, %rd13563, %rd13565;
	xor.b64  	%rd13567, %rd13566, %rd13564;
	shr.u64 	%rd13568, %rd18647, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9226,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9227}, %rd18647;
	}
	shf.r.wrap.b32 	%r9228, %r9227, %r9226, 1;
	shf.r.wrap.b32 	%r9229, %r9226, %r9227, 1;
	mov.b64 	%rd13569, {%r9229, %r9228};
	xor.b64  	%rd13570, %rd13569, %rd13568;
	shf.r.wrap.b32 	%r9230, %r9227, %r9226, 8;
	shf.r.wrap.b32 	%r9231, %r9226, %r9227, 8;
	mov.b64 	%rd13571, {%r9231, %r9230};
	xor.b64  	%rd13572, %rd13570, %rd13571;
	add.s64 	%rd13573, %rd18646, %rd18577;
	add.s64 	%rd13574, %rd13573, %rd13567;
	add.s64 	%rd18646, %rd13574, %rd13572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9232,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9233}, %rd18645;
	}
	shf.r.wrap.b32 	%r9234, %r9233, %r9232, 19;
	shf.r.wrap.b32 	%r9235, %r9232, %r9233, 19;
	mov.b64 	%rd13575, {%r9235, %r9234};
	shf.l.wrap.b32 	%r9236, %r9232, %r9233, 3;
	shf.l.wrap.b32 	%r9237, %r9233, %r9232, 3;
	mov.b64 	%rd13576, {%r9237, %r9236};
	shr.u64 	%rd13577, %rd18645, 6;
	xor.b64  	%rd13578, %rd13575, %rd13577;
	xor.b64  	%rd13579, %rd13578, %rd13576;
	shr.u64 	%rd13580, %rd18631, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9238,%dummy}, %rd18631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9239}, %rd18631;
	}
	shf.r.wrap.b32 	%r9240, %r9239, %r9238, 1;
	shf.r.wrap.b32 	%r9241, %r9238, %r9239, 1;
	mov.b64 	%rd13581, {%r9241, %r9240};
	xor.b64  	%rd13582, %rd13581, %rd13580;
	shf.r.wrap.b32 	%r9242, %r9239, %r9238, 8;
	shf.r.wrap.b32 	%r9243, %r9238, %r9239, 8;
	mov.b64 	%rd13583, {%r9243, %r9242};
	xor.b64  	%rd13584, %rd13582, %rd13583;
	add.s64 	%rd13585, %rd18640, %rd18647;
	add.s64 	%rd13586, %rd13585, %rd13579;
	add.s64 	%rd18647, %rd13586, %rd13584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9244,%dummy}, %rd18646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9245}, %rd18646;
	}
	shf.r.wrap.b32 	%r9246, %r9245, %r9244, 19;
	shf.r.wrap.b32 	%r9247, %r9244, %r9245, 19;
	mov.b64 	%rd13587, {%r9247, %r9246};
	shf.l.wrap.b32 	%r9248, %r9244, %r9245, 3;
	shf.l.wrap.b32 	%r9249, %r9245, %r9244, 3;
	mov.b64 	%rd13588, {%r9249, %r9248};
	shr.u64 	%rd13589, %rd18646, 6;
	xor.b64  	%rd13590, %rd13587, %rd13589;
	xor.b64  	%rd13591, %rd13590, %rd13588;
	shr.u64 	%rd13592, %rd18630, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9250,%dummy}, %rd18630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9251}, %rd18630;
	}
	shf.r.wrap.b32 	%r9252, %r9251, %r9250, 1;
	shf.r.wrap.b32 	%r9253, %r9250, %r9251, 1;
	mov.b64 	%rd13593, {%r9253, %r9252};
	xor.b64  	%rd13594, %rd13593, %rd13592;
	shf.r.wrap.b32 	%r9254, %r9251, %r9250, 8;
	shf.r.wrap.b32 	%r9255, %r9250, %r9251, 8;
	mov.b64 	%rd13595, {%r9255, %r9254};
	xor.b64  	%rd13596, %rd13594, %rd13595;
	add.s64 	%rd13597, %rd18641, %rd18631;
	add.s64 	%rd13598, %rd13597, %rd13591;
	add.s64 	%rd18631, %rd13598, %rd13596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9256,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9257}, %rd18647;
	}
	shf.r.wrap.b32 	%r9258, %r9257, %r9256, 19;
	shf.r.wrap.b32 	%r9259, %r9256, %r9257, 19;
	mov.b64 	%rd13599, {%r9259, %r9258};
	shf.l.wrap.b32 	%r9260, %r9256, %r9257, 3;
	shf.l.wrap.b32 	%r9261, %r9257, %r9256, 3;
	mov.b64 	%rd13600, {%r9261, %r9260};
	shr.u64 	%rd13601, %rd18647, 6;
	xor.b64  	%rd13602, %rd13599, %rd13601;
	xor.b64  	%rd13603, %rd13602, %rd13600;
	shr.u64 	%rd13604, %rd18629, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9262,%dummy}, %rd18629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9263}, %rd18629;
	}
	shf.r.wrap.b32 	%r9264, %r9263, %r9262, 1;
	shf.r.wrap.b32 	%r9265, %r9262, %r9263, 1;
	mov.b64 	%rd13605, {%r9265, %r9264};
	xor.b64  	%rd13606, %rd13605, %rd13604;
	shf.r.wrap.b32 	%r9266, %r9263, %r9262, 8;
	shf.r.wrap.b32 	%r9267, %r9262, %r9263, 8;
	mov.b64 	%rd13607, {%r9267, %r9266};
	xor.b64  	%rd13608, %rd13606, %rd13607;
	add.s64 	%rd13609, %rd18642, %rd18630;
	add.s64 	%rd13610, %rd13609, %rd13603;
	add.s64 	%rd18630, %rd13610, %rd13608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9268,%dummy}, %rd18631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9269}, %rd18631;
	}
	shf.r.wrap.b32 	%r9270, %r9269, %r9268, 19;
	shf.r.wrap.b32 	%r9271, %r9268, %r9269, 19;
	mov.b64 	%rd13611, {%r9271, %r9270};
	shf.l.wrap.b32 	%r9272, %r9268, %r9269, 3;
	shf.l.wrap.b32 	%r9273, %r9269, %r9268, 3;
	mov.b64 	%rd13612, {%r9273, %r9272};
	shr.u64 	%rd13613, %rd18631, 6;
	xor.b64  	%rd13614, %rd13611, %rd13613;
	xor.b64  	%rd13615, %rd13614, %rd13612;
	shr.u64 	%rd13616, %rd18628, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9274,%dummy}, %rd18628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9275}, %rd18628;
	}
	shf.r.wrap.b32 	%r9276, %r9275, %r9274, 1;
	shf.r.wrap.b32 	%r9277, %r9274, %r9275, 1;
	mov.b64 	%rd13617, {%r9277, %r9276};
	xor.b64  	%rd13618, %rd13617, %rd13616;
	shf.r.wrap.b32 	%r9278, %r9275, %r9274, 8;
	shf.r.wrap.b32 	%r9279, %r9274, %r9275, 8;
	mov.b64 	%rd13619, {%r9279, %r9278};
	xor.b64  	%rd13620, %rd13618, %rd13619;
	add.s64 	%rd13621, %rd18643, %rd18629;
	add.s64 	%rd13622, %rd13621, %rd13615;
	add.s64 	%rd18629, %rd13622, %rd13620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd18630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9281}, %rd18630;
	}
	shf.r.wrap.b32 	%r9282, %r9281, %r9280, 19;
	shf.r.wrap.b32 	%r9283, %r9280, %r9281, 19;
	mov.b64 	%rd13623, {%r9283, %r9282};
	shf.l.wrap.b32 	%r9284, %r9280, %r9281, 3;
	shf.l.wrap.b32 	%r9285, %r9281, %r9280, 3;
	mov.b64 	%rd13624, {%r9285, %r9284};
	shr.u64 	%rd13625, %rd18630, 6;
	xor.b64  	%rd13626, %rd13623, %rd13625;
	xor.b64  	%rd13627, %rd13626, %rd13624;
	shr.u64 	%rd13628, %rd18627, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9286,%dummy}, %rd18627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9287}, %rd18627;
	}
	shf.r.wrap.b32 	%r9288, %r9287, %r9286, 1;
	shf.r.wrap.b32 	%r9289, %r9286, %r9287, 1;
	mov.b64 	%rd13629, {%r9289, %r9288};
	xor.b64  	%rd13630, %rd13629, %rd13628;
	shf.r.wrap.b32 	%r9290, %r9287, %r9286, 8;
	shf.r.wrap.b32 	%r9291, %r9286, %r9287, 8;
	mov.b64 	%rd13631, {%r9291, %r9290};
	xor.b64  	%rd13632, %rd13630, %rd13631;
	add.s64 	%rd13633, %rd18644, %rd18628;
	add.s64 	%rd13634, %rd13633, %rd13627;
	add.s64 	%rd18628, %rd13634, %rd13632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9292,%dummy}, %rd18629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9293}, %rd18629;
	}
	shf.r.wrap.b32 	%r9294, %r9293, %r9292, 19;
	shf.r.wrap.b32 	%r9295, %r9292, %r9293, 19;
	mov.b64 	%rd13635, {%r9295, %r9294};
	shf.l.wrap.b32 	%r9296, %r9292, %r9293, 3;
	shf.l.wrap.b32 	%r9297, %r9293, %r9292, 3;
	mov.b64 	%rd13636, {%r9297, %r9296};
	shr.u64 	%rd13637, %rd18629, 6;
	xor.b64  	%rd13638, %rd13635, %rd13637;
	xor.b64  	%rd13639, %rd13638, %rd13636;
	shr.u64 	%rd13640, %rd18626, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9298,%dummy}, %rd18626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9299}, %rd18626;
	}
	shf.r.wrap.b32 	%r9300, %r9299, %r9298, 1;
	shf.r.wrap.b32 	%r9301, %r9298, %r9299, 1;
	mov.b64 	%rd13641, {%r9301, %r9300};
	xor.b64  	%rd13642, %rd13641, %rd13640;
	shf.r.wrap.b32 	%r9302, %r9299, %r9298, 8;
	shf.r.wrap.b32 	%r9303, %r9298, %r9299, 8;
	mov.b64 	%rd13643, {%r9303, %r9302};
	xor.b64  	%rd13644, %rd13642, %rd13643;
	add.s64 	%rd13645, %rd18645, %rd18627;
	add.s64 	%rd13646, %rd13645, %rd13639;
	add.s64 	%rd18627, %rd13646, %rd13644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd18628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9305}, %rd18628;
	}
	shf.r.wrap.b32 	%r9306, %r9305, %r9304, 19;
	shf.r.wrap.b32 	%r9307, %r9304, %r9305, 19;
	mov.b64 	%rd13647, {%r9307, %r9306};
	shf.l.wrap.b32 	%r9308, %r9304, %r9305, 3;
	shf.l.wrap.b32 	%r9309, %r9305, %r9304, 3;
	mov.b64 	%rd13648, {%r9309, %r9308};
	shr.u64 	%rd13649, %rd18628, 6;
	xor.b64  	%rd13650, %rd13647, %rd13649;
	xor.b64  	%rd13651, %rd13650, %rd13648;
	shr.u64 	%rd13652, %rd18625, 7;
	shf.r.wrap.b32 	%r9310, %r9149, %r9148, 1;
	shf.r.wrap.b32 	%r9311, %r9148, %r9149, 1;
	mov.b64 	%rd13653, {%r9311, %r9310};
	xor.b64  	%rd13654, %rd13653, %rd13652;
	shf.r.wrap.b32 	%r9312, %r9149, %r9148, 8;
	shf.r.wrap.b32 	%r9313, %r9148, %r9149, 8;
	mov.b64 	%rd13655, {%r9313, %r9312};
	xor.b64  	%rd13656, %rd13654, %rd13655;
	add.s64 	%rd13657, %rd18646, %rd18626;
	add.s64 	%rd13658, %rd13657, %rd13651;
	add.s64 	%rd18626, %rd13658, %rd13656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9314,%dummy}, %rd18627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9315}, %rd18627;
	}
	shf.r.wrap.b32 	%r9316, %r9315, %r9314, 19;
	shf.r.wrap.b32 	%r9317, %r9314, %r9315, 19;
	mov.b64 	%rd13659, {%r9317, %r9316};
	shf.l.wrap.b32 	%r9318, %r9314, %r9315, 3;
	shf.l.wrap.b32 	%r9319, %r9315, %r9314, 3;
	mov.b64 	%rd13660, {%r9319, %r9318};
	shr.u64 	%rd13661, %rd18627, 6;
	xor.b64  	%rd13662, %rd13659, %rd13661;
	xor.b64  	%rd13663, %rd13662, %rd13660;
	shr.u64 	%rd13664, %rd18577, 7;
	shf.r.wrap.b32 	%r9320, %r9161, %r9160, 1;
	shf.r.wrap.b32 	%r9321, %r9160, %r9161, 1;
	mov.b64 	%rd13665, {%r9321, %r9320};
	xor.b64  	%rd13666, %rd13665, %rd13664;
	shf.r.wrap.b32 	%r9322, %r9161, %r9160, 8;
	shf.r.wrap.b32 	%r9323, %r9160, %r9161, 8;
	mov.b64 	%rd13667, {%r9323, %r9322};
	xor.b64  	%rd13668, %rd13666, %rd13667;
	add.s64 	%rd13669, %rd18647, %rd18625;
	add.s64 	%rd13670, %rd13669, %rd13663;
	add.s64 	%rd18625, %rd13670, %rd13668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd18626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9325}, %rd18626;
	}
	shf.r.wrap.b32 	%r9326, %r9325, %r9324, 19;
	shf.r.wrap.b32 	%r9327, %r9324, %r9325, 19;
	mov.b64 	%rd13671, {%r9327, %r9326};
	shf.l.wrap.b32 	%r9328, %r9324, %r9325, 3;
	shf.l.wrap.b32 	%r9329, %r9325, %r9324, 3;
	mov.b64 	%rd13672, {%r9329, %r9328};
	shr.u64 	%rd13673, %rd18626, 6;
	xor.b64  	%rd13674, %rd13671, %rd13673;
	xor.b64  	%rd13675, %rd13674, %rd13672;
	shf.r.wrap.b32 	%r9330, %r9173, %r9172, 1;
	shf.r.wrap.b32 	%r9331, %r9172, %r9173, 1;
	mov.b64 	%rd13676, {%r9331, %r9330};
	shf.r.wrap.b32 	%r9332, %r9173, %r9172, 8;
	shf.r.wrap.b32 	%r9333, %r9172, %r9173, 8;
	mov.b64 	%rd13677, {%r9333, %r9332};
	shr.u64 	%rd13678, %rd18640, 7;
	xor.b64  	%rd13679, %rd13676, %rd13678;
	xor.b64  	%rd13680, %rd13679, %rd13677;
	add.s64 	%rd13681, %rd18631, %rd18577;
	add.s64 	%rd13682, %rd13681, %rd13675;
	add.s64 	%rd18577, %rd13682, %rd13680;
	mul.wide.s32 	%rd13683, %r12684, 8;
	mov.u64 	%rd13684, k_sha512;
	add.s64 	%rd13685, %rd13684, %rd13683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9334,%dummy}, %rd18589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9335}, %rd18589;
	}
	shf.r.wrap.b32 	%r9336, %r9335, %r9334, 18;
	shf.r.wrap.b32 	%r9337, %r9334, %r9335, 18;
	mov.b64 	%rd13686, {%r9337, %r9336};
	shf.r.wrap.b32 	%r9338, %r9335, %r9334, 14;
	shf.r.wrap.b32 	%r9339, %r9334, %r9335, 14;
	mov.b64 	%rd13687, {%r9339, %r9338};
	xor.b64  	%rd13688, %rd13686, %rd13687;
	shf.l.wrap.b32 	%r9340, %r9334, %r9335, 23;
	shf.l.wrap.b32 	%r9341, %r9335, %r9334, 23;
	mov.b64 	%rd13689, {%r9341, %r9340};
	xor.b64  	%rd13690, %rd13688, %rd13689;
	xor.b64  	%rd13691, %rd18591, %rd18590;
	and.b64  	%rd13692, %rd13691, %rd18589;
	xor.b64  	%rd13693, %rd13692, %rd18591;
	add.s64 	%rd13694, %rd13693, %rd18592;
	add.s64 	%rd13695, %rd13694, %rd18640;
	ld.const.u64 	%rd13696, [%rd13685];
	add.s64 	%rd13697, %rd13695, %rd13696;
	add.s64 	%rd13698, %rd13697, %rd13690;
	add.s64 	%rd13699, %rd13698, %rd18588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9342}, %rd18585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9343,%dummy}, %rd18585;
	}
	shf.l.wrap.b32 	%r9344, %r9343, %r9342, 30;
	shf.l.wrap.b32 	%r9345, %r9342, %r9343, 30;
	mov.b64 	%rd13700, {%r9345, %r9344};
	shf.r.wrap.b32 	%r9346, %r9342, %r9343, 28;
	shf.r.wrap.b32 	%r9347, %r9343, %r9342, 28;
	mov.b64 	%rd13701, {%r9347, %r9346};
	xor.b64  	%rd13702, %rd13700, %rd13701;
	shf.l.wrap.b32 	%r9348, %r9343, %r9342, 25;
	shf.l.wrap.b32 	%r9349, %r9342, %r9343, 25;
	mov.b64 	%rd13703, {%r9349, %r9348};
	xor.b64  	%rd13704, %rd13702, %rd13703;
	xor.b64  	%rd13705, %rd18586, %rd18585;
	and.b64  	%rd13706, %rd13705, %rd18587;
	and.b64  	%rd13707, %rd18586, %rd18585;
	or.b64  	%rd13708, %rd13706, %rd13707;
	add.s64 	%rd13709, %rd13698, %rd13708;
	add.s64 	%rd13710, %rd13709, %rd13704;
	add.s32 	%r9350, %r12684, 1;
	mul.wide.s32 	%rd13711, %r9350, 8;
	add.s64 	%rd13712, %rd13684, %rd13711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9351,%dummy}, %rd13699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9352}, %rd13699;
	}
	shf.r.wrap.b32 	%r9353, %r9352, %r9351, 14;
	shf.r.wrap.b32 	%r9354, %r9351, %r9352, 14;
	mov.b64 	%rd13713, {%r9354, %r9353};
	shf.r.wrap.b32 	%r9355, %r9352, %r9351, 18;
	shf.r.wrap.b32 	%r9356, %r9351, %r9352, 18;
	mov.b64 	%rd13714, {%r9356, %r9355};
	xor.b64  	%rd13715, %rd13714, %rd13713;
	shf.l.wrap.b32 	%r9357, %r9351, %r9352, 23;
	shf.l.wrap.b32 	%r9358, %r9352, %r9351, 23;
	mov.b64 	%rd13716, {%r9358, %r9357};
	xor.b64  	%rd13717, %rd13715, %rd13716;
	xor.b64  	%rd13718, %rd18590, %rd18589;
	and.b64  	%rd13719, %rd13699, %rd13718;
	xor.b64  	%rd13720, %rd13719, %rd18590;
	add.s64 	%rd13721, %rd18641, %rd18591;
	ld.const.u64 	%rd13722, [%rd13712];
	add.s64 	%rd13723, %rd13721, %rd13722;
	add.s64 	%rd13724, %rd13723, %rd13720;
	add.s64 	%rd13725, %rd13724, %rd13717;
	add.s64 	%rd13726, %rd13725, %rd18587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9359,%dummy}, %rd13710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9360}, %rd13710;
	}
	shf.r.wrap.b32 	%r9361, %r9360, %r9359, 28;
	shf.r.wrap.b32 	%r9362, %r9359, %r9360, 28;
	mov.b64 	%rd13727, {%r9362, %r9361};
	shf.l.wrap.b32 	%r9363, %r9359, %r9360, 30;
	shf.l.wrap.b32 	%r9364, %r9360, %r9359, 30;
	mov.b64 	%rd13728, {%r9364, %r9363};
	xor.b64  	%rd13729, %rd13728, %rd13727;
	shf.l.wrap.b32 	%r9365, %r9359, %r9360, 25;
	shf.l.wrap.b32 	%r9366, %r9360, %r9359, 25;
	mov.b64 	%rd13730, {%r9366, %r9365};
	xor.b64  	%rd13731, %rd13729, %rd13730;
	and.b64  	%rd13732, %rd13710, %rd18585;
	xor.b64  	%rd13733, %rd13710, %rd18585;
	and.b64  	%rd13734, %rd13733, %rd18586;
	or.b64  	%rd13735, %rd13734, %rd13732;
	add.s64 	%rd13736, %rd13725, %rd13735;
	add.s64 	%rd13737, %rd13736, %rd13731;
	add.s32 	%r9367, %r12684, 2;
	mul.wide.s32 	%rd13738, %r9367, 8;
	add.s64 	%rd13739, %rd13684, %rd13738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9368,%dummy}, %rd13726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9369}, %rd13726;
	}
	shf.r.wrap.b32 	%r9370, %r9369, %r9368, 14;
	shf.r.wrap.b32 	%r9371, %r9368, %r9369, 14;
	mov.b64 	%rd13740, {%r9371, %r9370};
	shf.r.wrap.b32 	%r9372, %r9369, %r9368, 18;
	shf.r.wrap.b32 	%r9373, %r9368, %r9369, 18;
	mov.b64 	%rd13741, {%r9373, %r9372};
	xor.b64  	%rd13742, %rd13741, %rd13740;
	shf.l.wrap.b32 	%r9374, %r9368, %r9369, 23;
	shf.l.wrap.b32 	%r9375, %r9369, %r9368, 23;
	mov.b64 	%rd13743, {%r9375, %r9374};
	xor.b64  	%rd13744, %rd13742, %rd13743;
	xor.b64  	%rd13745, %rd13699, %rd18589;
	and.b64  	%rd13746, %rd13726, %rd13745;
	xor.b64  	%rd13747, %rd13746, %rd18589;
	add.s64 	%rd13748, %rd18642, %rd18590;
	ld.const.u64 	%rd13749, [%rd13739];
	add.s64 	%rd13750, %rd13748, %rd13749;
	add.s64 	%rd13751, %rd13750, %rd13747;
	add.s64 	%rd13752, %rd13751, %rd13744;
	add.s64 	%rd13753, %rd13752, %rd18586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd13737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9377}, %rd13737;
	}
	shf.r.wrap.b32 	%r9378, %r9377, %r9376, 28;
	shf.r.wrap.b32 	%r9379, %r9376, %r9377, 28;
	mov.b64 	%rd13754, {%r9379, %r9378};
	shf.l.wrap.b32 	%r9380, %r9376, %r9377, 30;
	shf.l.wrap.b32 	%r9381, %r9377, %r9376, 30;
	mov.b64 	%rd13755, {%r9381, %r9380};
	xor.b64  	%rd13756, %rd13755, %rd13754;
	shf.l.wrap.b32 	%r9382, %r9376, %r9377, 25;
	shf.l.wrap.b32 	%r9383, %r9377, %r9376, 25;
	mov.b64 	%rd13757, {%r9383, %r9382};
	xor.b64  	%rd13758, %rd13756, %rd13757;
	and.b64  	%rd13759, %rd13737, %rd13710;
	xor.b64  	%rd13760, %rd13737, %rd13710;
	and.b64  	%rd13761, %rd13760, %rd18585;
	or.b64  	%rd13762, %rd13761, %rd13759;
	add.s64 	%rd13763, %rd13752, %rd13762;
	add.s64 	%rd13764, %rd13763, %rd13758;
	add.s32 	%r9384, %r12684, 3;
	mul.wide.s32 	%rd13765, %r9384, 8;
	add.s64 	%rd13766, %rd13684, %rd13765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9385,%dummy}, %rd13753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9386}, %rd13753;
	}
	shf.r.wrap.b32 	%r9387, %r9386, %r9385, 14;
	shf.r.wrap.b32 	%r9388, %r9385, %r9386, 14;
	mov.b64 	%rd13767, {%r9388, %r9387};
	shf.r.wrap.b32 	%r9389, %r9386, %r9385, 18;
	shf.r.wrap.b32 	%r9390, %r9385, %r9386, 18;
	mov.b64 	%rd13768, {%r9390, %r9389};
	xor.b64  	%rd13769, %rd13768, %rd13767;
	shf.l.wrap.b32 	%r9391, %r9385, %r9386, 23;
	shf.l.wrap.b32 	%r9392, %r9386, %r9385, 23;
	mov.b64 	%rd13770, {%r9392, %r9391};
	xor.b64  	%rd13771, %rd13769, %rd13770;
	xor.b64  	%rd13772, %rd13726, %rd13699;
	and.b64  	%rd13773, %rd13753, %rd13772;
	xor.b64  	%rd13774, %rd13773, %rd13699;
	add.s64 	%rd13775, %rd18643, %rd18589;
	ld.const.u64 	%rd13776, [%rd13766];
	add.s64 	%rd13777, %rd13775, %rd13776;
	add.s64 	%rd13778, %rd13777, %rd13774;
	add.s64 	%rd13779, %rd13778, %rd13771;
	add.s64 	%rd13780, %rd13779, %rd18585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9393,%dummy}, %rd13764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9394}, %rd13764;
	}
	shf.r.wrap.b32 	%r9395, %r9394, %r9393, 28;
	shf.r.wrap.b32 	%r9396, %r9393, %r9394, 28;
	mov.b64 	%rd13781, {%r9396, %r9395};
	shf.l.wrap.b32 	%r9397, %r9393, %r9394, 30;
	shf.l.wrap.b32 	%r9398, %r9394, %r9393, 30;
	mov.b64 	%rd13782, {%r9398, %r9397};
	xor.b64  	%rd13783, %rd13782, %rd13781;
	shf.l.wrap.b32 	%r9399, %r9393, %r9394, 25;
	shf.l.wrap.b32 	%r9400, %r9394, %r9393, 25;
	mov.b64 	%rd13784, {%r9400, %r9399};
	xor.b64  	%rd13785, %rd13783, %rd13784;
	and.b64  	%rd13786, %rd13764, %rd13737;
	xor.b64  	%rd13787, %rd13764, %rd13737;
	and.b64  	%rd13788, %rd13787, %rd13710;
	or.b64  	%rd13789, %rd13788, %rd13786;
	add.s64 	%rd13790, %rd13779, %rd13789;
	add.s64 	%rd13791, %rd13790, %rd13785;
	add.s32 	%r9401, %r12684, 4;
	mul.wide.s32 	%rd13792, %r9401, 8;
	add.s64 	%rd13793, %rd13684, %rd13792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9402,%dummy}, %rd13780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9403}, %rd13780;
	}
	shf.r.wrap.b32 	%r9404, %r9403, %r9402, 14;
	shf.r.wrap.b32 	%r9405, %r9402, %r9403, 14;
	mov.b64 	%rd13794, {%r9405, %r9404};
	shf.r.wrap.b32 	%r9406, %r9403, %r9402, 18;
	shf.r.wrap.b32 	%r9407, %r9402, %r9403, 18;
	mov.b64 	%rd13795, {%r9407, %r9406};
	xor.b64  	%rd13796, %rd13795, %rd13794;
	shf.l.wrap.b32 	%r9408, %r9402, %r9403, 23;
	shf.l.wrap.b32 	%r9409, %r9403, %r9402, 23;
	mov.b64 	%rd13797, {%r9409, %r9408};
	xor.b64  	%rd13798, %rd13796, %rd13797;
	xor.b64  	%rd13799, %rd13753, %rd13726;
	and.b64  	%rd13800, %rd13780, %rd13799;
	xor.b64  	%rd13801, %rd13800, %rd13726;
	add.s64 	%rd13802, %rd13699, %rd18644;
	ld.const.u64 	%rd13803, [%rd13793];
	add.s64 	%rd13804, %rd13802, %rd13803;
	add.s64 	%rd13805, %rd13804, %rd13801;
	add.s64 	%rd13806, %rd13805, %rd13798;
	add.s64 	%rd13807, %rd13806, %rd13710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9410,%dummy}, %rd13791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9411}, %rd13791;
	}
	shf.r.wrap.b32 	%r9412, %r9411, %r9410, 28;
	shf.r.wrap.b32 	%r9413, %r9410, %r9411, 28;
	mov.b64 	%rd13808, {%r9413, %r9412};
	shf.l.wrap.b32 	%r9414, %r9410, %r9411, 30;
	shf.l.wrap.b32 	%r9415, %r9411, %r9410, 30;
	mov.b64 	%rd13809, {%r9415, %r9414};
	xor.b64  	%rd13810, %rd13809, %rd13808;
	shf.l.wrap.b32 	%r9416, %r9410, %r9411, 25;
	shf.l.wrap.b32 	%r9417, %r9411, %r9410, 25;
	mov.b64 	%rd13811, {%r9417, %r9416};
	xor.b64  	%rd13812, %rd13810, %rd13811;
	and.b64  	%rd13813, %rd13791, %rd13764;
	xor.b64  	%rd13814, %rd13791, %rd13764;
	and.b64  	%rd13815, %rd13814, %rd13737;
	or.b64  	%rd13816, %rd13815, %rd13813;
	add.s64 	%rd13817, %rd13806, %rd13816;
	add.s64 	%rd13818, %rd13817, %rd13812;
	add.s32 	%r9418, %r12684, 5;
	mul.wide.s32 	%rd13819, %r9418, 8;
	add.s64 	%rd13820, %rd13684, %rd13819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9419,%dummy}, %rd13807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9420}, %rd13807;
	}
	shf.r.wrap.b32 	%r9421, %r9420, %r9419, 14;
	shf.r.wrap.b32 	%r9422, %r9419, %r9420, 14;
	mov.b64 	%rd13821, {%r9422, %r9421};
	shf.r.wrap.b32 	%r9423, %r9420, %r9419, 18;
	shf.r.wrap.b32 	%r9424, %r9419, %r9420, 18;
	mov.b64 	%rd13822, {%r9424, %r9423};
	xor.b64  	%rd13823, %rd13822, %rd13821;
	shf.l.wrap.b32 	%r9425, %r9419, %r9420, 23;
	shf.l.wrap.b32 	%r9426, %r9420, %r9419, 23;
	mov.b64 	%rd13824, {%r9426, %r9425};
	xor.b64  	%rd13825, %rd13823, %rd13824;
	xor.b64  	%rd13826, %rd13780, %rd13753;
	and.b64  	%rd13827, %rd13807, %rd13826;
	xor.b64  	%rd13828, %rd13827, %rd13753;
	add.s64 	%rd13829, %rd13726, %rd18645;
	ld.const.u64 	%rd13830, [%rd13820];
	add.s64 	%rd13831, %rd13829, %rd13830;
	add.s64 	%rd13832, %rd13831, %rd13828;
	add.s64 	%rd13833, %rd13832, %rd13825;
	add.s64 	%rd13834, %rd13833, %rd13737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9427,%dummy}, %rd13818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9428}, %rd13818;
	}
	shf.r.wrap.b32 	%r9429, %r9428, %r9427, 28;
	shf.r.wrap.b32 	%r9430, %r9427, %r9428, 28;
	mov.b64 	%rd13835, {%r9430, %r9429};
	shf.l.wrap.b32 	%r9431, %r9427, %r9428, 30;
	shf.l.wrap.b32 	%r9432, %r9428, %r9427, 30;
	mov.b64 	%rd13836, {%r9432, %r9431};
	xor.b64  	%rd13837, %rd13836, %rd13835;
	shf.l.wrap.b32 	%r9433, %r9427, %r9428, 25;
	shf.l.wrap.b32 	%r9434, %r9428, %r9427, 25;
	mov.b64 	%rd13838, {%r9434, %r9433};
	xor.b64  	%rd13839, %rd13837, %rd13838;
	and.b64  	%rd13840, %rd13818, %rd13791;
	xor.b64  	%rd13841, %rd13818, %rd13791;
	and.b64  	%rd13842, %rd13841, %rd13764;
	or.b64  	%rd13843, %rd13842, %rd13840;
	add.s64 	%rd13844, %rd13833, %rd13843;
	add.s64 	%rd13845, %rd13844, %rd13839;
	add.s32 	%r9435, %r12684, 6;
	mul.wide.s32 	%rd13846, %r9435, 8;
	add.s64 	%rd13847, %rd13684, %rd13846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9436,%dummy}, %rd13834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9437}, %rd13834;
	}
	shf.r.wrap.b32 	%r9438, %r9437, %r9436, 14;
	shf.r.wrap.b32 	%r9439, %r9436, %r9437, 14;
	mov.b64 	%rd13848, {%r9439, %r9438};
	shf.r.wrap.b32 	%r9440, %r9437, %r9436, 18;
	shf.r.wrap.b32 	%r9441, %r9436, %r9437, 18;
	mov.b64 	%rd13849, {%r9441, %r9440};
	xor.b64  	%rd13850, %rd13849, %rd13848;
	shf.l.wrap.b32 	%r9442, %r9436, %r9437, 23;
	shf.l.wrap.b32 	%r9443, %r9437, %r9436, 23;
	mov.b64 	%rd13851, {%r9443, %r9442};
	xor.b64  	%rd13852, %rd13850, %rd13851;
	xor.b64  	%rd13853, %rd13807, %rd13780;
	and.b64  	%rd13854, %rd13834, %rd13853;
	xor.b64  	%rd13855, %rd13854, %rd13780;
	add.s64 	%rd13856, %rd13753, %rd18646;
	ld.const.u64 	%rd13857, [%rd13847];
	add.s64 	%rd13858, %rd13856, %rd13857;
	add.s64 	%rd13859, %rd13858, %rd13855;
	add.s64 	%rd13860, %rd13859, %rd13852;
	add.s64 	%rd13861, %rd13860, %rd13764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9444,%dummy}, %rd13845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9445}, %rd13845;
	}
	shf.r.wrap.b32 	%r9446, %r9445, %r9444, 28;
	shf.r.wrap.b32 	%r9447, %r9444, %r9445, 28;
	mov.b64 	%rd13862, {%r9447, %r9446};
	shf.l.wrap.b32 	%r9448, %r9444, %r9445, 30;
	shf.l.wrap.b32 	%r9449, %r9445, %r9444, 30;
	mov.b64 	%rd13863, {%r9449, %r9448};
	xor.b64  	%rd13864, %rd13863, %rd13862;
	shf.l.wrap.b32 	%r9450, %r9444, %r9445, 25;
	shf.l.wrap.b32 	%r9451, %r9445, %r9444, 25;
	mov.b64 	%rd13865, {%r9451, %r9450};
	xor.b64  	%rd13866, %rd13864, %rd13865;
	and.b64  	%rd13867, %rd13845, %rd13818;
	xor.b64  	%rd13868, %rd13845, %rd13818;
	and.b64  	%rd13869, %rd13868, %rd13791;
	or.b64  	%rd13870, %rd13869, %rd13867;
	add.s64 	%rd13871, %rd13860, %rd13870;
	add.s64 	%rd13872, %rd13871, %rd13866;
	add.s32 	%r9452, %r12684, 7;
	mul.wide.s32 	%rd13873, %r9452, 8;
	add.s64 	%rd13874, %rd13684, %rd13873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9453,%dummy}, %rd13861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9454}, %rd13861;
	}
	shf.r.wrap.b32 	%r9455, %r9454, %r9453, 14;
	shf.r.wrap.b32 	%r9456, %r9453, %r9454, 14;
	mov.b64 	%rd13875, {%r9456, %r9455};
	shf.r.wrap.b32 	%r9457, %r9454, %r9453, 18;
	shf.r.wrap.b32 	%r9458, %r9453, %r9454, 18;
	mov.b64 	%rd13876, {%r9458, %r9457};
	xor.b64  	%rd13877, %rd13876, %rd13875;
	shf.l.wrap.b32 	%r9459, %r9453, %r9454, 23;
	shf.l.wrap.b32 	%r9460, %r9454, %r9453, 23;
	mov.b64 	%rd13878, {%r9460, %r9459};
	xor.b64  	%rd13879, %rd13877, %rd13878;
	xor.b64  	%rd13880, %rd13834, %rd13807;
	and.b64  	%rd13881, %rd13861, %rd13880;
	xor.b64  	%rd13882, %rd13881, %rd13807;
	add.s64 	%rd13883, %rd13780, %rd18647;
	ld.const.u64 	%rd13884, [%rd13874];
	add.s64 	%rd13885, %rd13883, %rd13884;
	add.s64 	%rd13886, %rd13885, %rd13882;
	add.s64 	%rd13887, %rd13886, %rd13879;
	add.s64 	%rd13888, %rd13887, %rd13791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9461,%dummy}, %rd13872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9462}, %rd13872;
	}
	shf.r.wrap.b32 	%r9463, %r9462, %r9461, 28;
	shf.r.wrap.b32 	%r9464, %r9461, %r9462, 28;
	mov.b64 	%rd13889, {%r9464, %r9463};
	shf.l.wrap.b32 	%r9465, %r9461, %r9462, 30;
	shf.l.wrap.b32 	%r9466, %r9462, %r9461, 30;
	mov.b64 	%rd13890, {%r9466, %r9465};
	xor.b64  	%rd13891, %rd13890, %rd13889;
	shf.l.wrap.b32 	%r9467, %r9461, %r9462, 25;
	shf.l.wrap.b32 	%r9468, %r9462, %r9461, 25;
	mov.b64 	%rd13892, {%r9468, %r9467};
	xor.b64  	%rd13893, %rd13891, %rd13892;
	and.b64  	%rd13894, %rd13872, %rd13845;
	xor.b64  	%rd13895, %rd13872, %rd13845;
	and.b64  	%rd13896, %rd13895, %rd13818;
	or.b64  	%rd13897, %rd13896, %rd13894;
	add.s64 	%rd13898, %rd13887, %rd13897;
	add.s64 	%rd13899, %rd13898, %rd13893;
	add.s32 	%r9469, %r12684, 8;
	mul.wide.s32 	%rd13900, %r9469, 8;
	add.s64 	%rd13901, %rd13684, %rd13900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9470,%dummy}, %rd13888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9471}, %rd13888;
	}
	shf.r.wrap.b32 	%r9472, %r9471, %r9470, 14;
	shf.r.wrap.b32 	%r9473, %r9470, %r9471, 14;
	mov.b64 	%rd13902, {%r9473, %r9472};
	shf.r.wrap.b32 	%r9474, %r9471, %r9470, 18;
	shf.r.wrap.b32 	%r9475, %r9470, %r9471, 18;
	mov.b64 	%rd13903, {%r9475, %r9474};
	xor.b64  	%rd13904, %rd13903, %rd13902;
	shf.l.wrap.b32 	%r9476, %r9470, %r9471, 23;
	shf.l.wrap.b32 	%r9477, %r9471, %r9470, 23;
	mov.b64 	%rd13905, {%r9477, %r9476};
	xor.b64  	%rd13906, %rd13904, %rd13905;
	xor.b64  	%rd13907, %rd13861, %rd13834;
	and.b64  	%rd13908, %rd13888, %rd13907;
	xor.b64  	%rd13909, %rd13908, %rd13834;
	add.s64 	%rd13910, %rd13807, %rd18631;
	ld.const.u64 	%rd13911, [%rd13901];
	add.s64 	%rd13912, %rd13910, %rd13911;
	add.s64 	%rd13913, %rd13912, %rd13909;
	add.s64 	%rd13914, %rd13913, %rd13906;
	add.s64 	%rd13915, %rd13914, %rd13818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9478,%dummy}, %rd13899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9479}, %rd13899;
	}
	shf.r.wrap.b32 	%r9480, %r9479, %r9478, 28;
	shf.r.wrap.b32 	%r9481, %r9478, %r9479, 28;
	mov.b64 	%rd13916, {%r9481, %r9480};
	shf.l.wrap.b32 	%r9482, %r9478, %r9479, 30;
	shf.l.wrap.b32 	%r9483, %r9479, %r9478, 30;
	mov.b64 	%rd13917, {%r9483, %r9482};
	xor.b64  	%rd13918, %rd13917, %rd13916;
	shf.l.wrap.b32 	%r9484, %r9478, %r9479, 25;
	shf.l.wrap.b32 	%r9485, %r9479, %r9478, 25;
	mov.b64 	%rd13919, {%r9485, %r9484};
	xor.b64  	%rd13920, %rd13918, %rd13919;
	and.b64  	%rd13921, %rd13899, %rd13872;
	xor.b64  	%rd13922, %rd13899, %rd13872;
	and.b64  	%rd13923, %rd13922, %rd13845;
	or.b64  	%rd13924, %rd13923, %rd13921;
	add.s64 	%rd13925, %rd13914, %rd13924;
	add.s64 	%rd13926, %rd13925, %rd13920;
	add.s32 	%r9486, %r12684, 9;
	mul.wide.s32 	%rd13927, %r9486, 8;
	add.s64 	%rd13928, %rd13684, %rd13927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9487,%dummy}, %rd13915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9488}, %rd13915;
	}
	shf.r.wrap.b32 	%r9489, %r9488, %r9487, 14;
	shf.r.wrap.b32 	%r9490, %r9487, %r9488, 14;
	mov.b64 	%rd13929, {%r9490, %r9489};
	shf.r.wrap.b32 	%r9491, %r9488, %r9487, 18;
	shf.r.wrap.b32 	%r9492, %r9487, %r9488, 18;
	mov.b64 	%rd13930, {%r9492, %r9491};
	xor.b64  	%rd13931, %rd13930, %rd13929;
	shf.l.wrap.b32 	%r9493, %r9487, %r9488, 23;
	shf.l.wrap.b32 	%r9494, %r9488, %r9487, 23;
	mov.b64 	%rd13932, {%r9494, %r9493};
	xor.b64  	%rd13933, %rd13931, %rd13932;
	xor.b64  	%rd13934, %rd13888, %rd13861;
	and.b64  	%rd13935, %rd13915, %rd13934;
	xor.b64  	%rd13936, %rd13935, %rd13861;
	add.s64 	%rd13937, %rd13834, %rd18630;
	ld.const.u64 	%rd13938, [%rd13928];
	add.s64 	%rd13939, %rd13937, %rd13938;
	add.s64 	%rd13940, %rd13939, %rd13936;
	add.s64 	%rd13941, %rd13940, %rd13933;
	add.s64 	%rd13942, %rd13941, %rd13845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9495,%dummy}, %rd13926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9496}, %rd13926;
	}
	shf.r.wrap.b32 	%r9497, %r9496, %r9495, 28;
	shf.r.wrap.b32 	%r9498, %r9495, %r9496, 28;
	mov.b64 	%rd13943, {%r9498, %r9497};
	shf.l.wrap.b32 	%r9499, %r9495, %r9496, 30;
	shf.l.wrap.b32 	%r9500, %r9496, %r9495, 30;
	mov.b64 	%rd13944, {%r9500, %r9499};
	xor.b64  	%rd13945, %rd13944, %rd13943;
	shf.l.wrap.b32 	%r9501, %r9495, %r9496, 25;
	shf.l.wrap.b32 	%r9502, %r9496, %r9495, 25;
	mov.b64 	%rd13946, {%r9502, %r9501};
	xor.b64  	%rd13947, %rd13945, %rd13946;
	and.b64  	%rd13948, %rd13926, %rd13899;
	xor.b64  	%rd13949, %rd13926, %rd13899;
	and.b64  	%rd13950, %rd13949, %rd13872;
	or.b64  	%rd13951, %rd13950, %rd13948;
	add.s64 	%rd13952, %rd13941, %rd13951;
	add.s64 	%rd13953, %rd13952, %rd13947;
	add.s32 	%r9503, %r12684, 10;
	mul.wide.s32 	%rd13954, %r9503, 8;
	add.s64 	%rd13955, %rd13684, %rd13954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9504,%dummy}, %rd13942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9505}, %rd13942;
	}
	shf.r.wrap.b32 	%r9506, %r9505, %r9504, 14;
	shf.r.wrap.b32 	%r9507, %r9504, %r9505, 14;
	mov.b64 	%rd13956, {%r9507, %r9506};
	shf.r.wrap.b32 	%r9508, %r9505, %r9504, 18;
	shf.r.wrap.b32 	%r9509, %r9504, %r9505, 18;
	mov.b64 	%rd13957, {%r9509, %r9508};
	xor.b64  	%rd13958, %rd13957, %rd13956;
	shf.l.wrap.b32 	%r9510, %r9504, %r9505, 23;
	shf.l.wrap.b32 	%r9511, %r9505, %r9504, 23;
	mov.b64 	%rd13959, {%r9511, %r9510};
	xor.b64  	%rd13960, %rd13958, %rd13959;
	xor.b64  	%rd13961, %rd13915, %rd13888;
	and.b64  	%rd13962, %rd13942, %rd13961;
	xor.b64  	%rd13963, %rd13962, %rd13888;
	add.s64 	%rd13964, %rd13861, %rd18629;
	ld.const.u64 	%rd13965, [%rd13955];
	add.s64 	%rd13966, %rd13964, %rd13965;
	add.s64 	%rd13967, %rd13966, %rd13963;
	add.s64 	%rd13968, %rd13967, %rd13960;
	add.s64 	%rd13969, %rd13968, %rd13872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9512,%dummy}, %rd13953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9513}, %rd13953;
	}
	shf.r.wrap.b32 	%r9514, %r9513, %r9512, 28;
	shf.r.wrap.b32 	%r9515, %r9512, %r9513, 28;
	mov.b64 	%rd13970, {%r9515, %r9514};
	shf.l.wrap.b32 	%r9516, %r9512, %r9513, 30;
	shf.l.wrap.b32 	%r9517, %r9513, %r9512, 30;
	mov.b64 	%rd13971, {%r9517, %r9516};
	xor.b64  	%rd13972, %rd13971, %rd13970;
	shf.l.wrap.b32 	%r9518, %r9512, %r9513, 25;
	shf.l.wrap.b32 	%r9519, %r9513, %r9512, 25;
	mov.b64 	%rd13973, {%r9519, %r9518};
	xor.b64  	%rd13974, %rd13972, %rd13973;
	and.b64  	%rd13975, %rd13953, %rd13926;
	xor.b64  	%rd13976, %rd13953, %rd13926;
	and.b64  	%rd13977, %rd13976, %rd13899;
	or.b64  	%rd13978, %rd13977, %rd13975;
	add.s64 	%rd13979, %rd13968, %rd13978;
	add.s64 	%rd13980, %rd13979, %rd13974;
	add.s32 	%r9520, %r12684, 11;
	mul.wide.s32 	%rd13981, %r9520, 8;
	add.s64 	%rd13982, %rd13684, %rd13981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9521,%dummy}, %rd13969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9522}, %rd13969;
	}
	shf.r.wrap.b32 	%r9523, %r9522, %r9521, 14;
	shf.r.wrap.b32 	%r9524, %r9521, %r9522, 14;
	mov.b64 	%rd13983, {%r9524, %r9523};
	shf.r.wrap.b32 	%r9525, %r9522, %r9521, 18;
	shf.r.wrap.b32 	%r9526, %r9521, %r9522, 18;
	mov.b64 	%rd13984, {%r9526, %r9525};
	xor.b64  	%rd13985, %rd13984, %rd13983;
	shf.l.wrap.b32 	%r9527, %r9521, %r9522, 23;
	shf.l.wrap.b32 	%r9528, %r9522, %r9521, 23;
	mov.b64 	%rd13986, {%r9528, %r9527};
	xor.b64  	%rd13987, %rd13985, %rd13986;
	xor.b64  	%rd13988, %rd13942, %rd13915;
	and.b64  	%rd13989, %rd13969, %rd13988;
	xor.b64  	%rd13990, %rd13989, %rd13915;
	add.s64 	%rd13991, %rd13888, %rd18628;
	ld.const.u64 	%rd13992, [%rd13982];
	add.s64 	%rd13993, %rd13991, %rd13992;
	add.s64 	%rd13994, %rd13993, %rd13990;
	add.s64 	%rd13995, %rd13994, %rd13987;
	add.s64 	%rd13996, %rd13995, %rd13899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9529,%dummy}, %rd13980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9530}, %rd13980;
	}
	shf.r.wrap.b32 	%r9531, %r9530, %r9529, 28;
	shf.r.wrap.b32 	%r9532, %r9529, %r9530, 28;
	mov.b64 	%rd13997, {%r9532, %r9531};
	shf.l.wrap.b32 	%r9533, %r9529, %r9530, 30;
	shf.l.wrap.b32 	%r9534, %r9530, %r9529, 30;
	mov.b64 	%rd13998, {%r9534, %r9533};
	xor.b64  	%rd13999, %rd13998, %rd13997;
	shf.l.wrap.b32 	%r9535, %r9529, %r9530, 25;
	shf.l.wrap.b32 	%r9536, %r9530, %r9529, 25;
	mov.b64 	%rd14000, {%r9536, %r9535};
	xor.b64  	%rd14001, %rd13999, %rd14000;
	and.b64  	%rd14002, %rd13980, %rd13953;
	xor.b64  	%rd14003, %rd13980, %rd13953;
	and.b64  	%rd14004, %rd14003, %rd13926;
	or.b64  	%rd14005, %rd14004, %rd14002;
	add.s64 	%rd14006, %rd13995, %rd14005;
	add.s64 	%rd14007, %rd14006, %rd14001;
	add.s32 	%r9537, %r12684, 12;
	mul.wide.s32 	%rd14008, %r9537, 8;
	add.s64 	%rd14009, %rd13684, %rd14008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9538,%dummy}, %rd13996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9539}, %rd13996;
	}
	shf.r.wrap.b32 	%r9540, %r9539, %r9538, 14;
	shf.r.wrap.b32 	%r9541, %r9538, %r9539, 14;
	mov.b64 	%rd14010, {%r9541, %r9540};
	shf.r.wrap.b32 	%r9542, %r9539, %r9538, 18;
	shf.r.wrap.b32 	%r9543, %r9538, %r9539, 18;
	mov.b64 	%rd14011, {%r9543, %r9542};
	xor.b64  	%rd14012, %rd14011, %rd14010;
	shf.l.wrap.b32 	%r9544, %r9538, %r9539, 23;
	shf.l.wrap.b32 	%r9545, %r9539, %r9538, 23;
	mov.b64 	%rd14013, {%r9545, %r9544};
	xor.b64  	%rd14014, %rd14012, %rd14013;
	xor.b64  	%rd14015, %rd13969, %rd13942;
	and.b64  	%rd14016, %rd13996, %rd14015;
	xor.b64  	%rd14017, %rd14016, %rd13942;
	add.s64 	%rd14018, %rd13915, %rd18627;
	ld.const.u64 	%rd14019, [%rd14009];
	add.s64 	%rd14020, %rd14018, %rd14019;
	add.s64 	%rd14021, %rd14020, %rd14017;
	add.s64 	%rd14022, %rd14021, %rd14014;
	add.s64 	%rd18592, %rd14022, %rd13926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9546,%dummy}, %rd14007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd14007;
	}
	shf.r.wrap.b32 	%r9548, %r9547, %r9546, 28;
	shf.r.wrap.b32 	%r9549, %r9546, %r9547, 28;
	mov.b64 	%rd14023, {%r9549, %r9548};
	shf.l.wrap.b32 	%r9550, %r9546, %r9547, 30;
	shf.l.wrap.b32 	%r9551, %r9547, %r9546, 30;
	mov.b64 	%rd14024, {%r9551, %r9550};
	xor.b64  	%rd14025, %rd14024, %rd14023;
	shf.l.wrap.b32 	%r9552, %r9546, %r9547, 25;
	shf.l.wrap.b32 	%r9553, %r9547, %r9546, 25;
	mov.b64 	%rd14026, {%r9553, %r9552};
	xor.b64  	%rd14027, %rd14025, %rd14026;
	and.b64  	%rd14028, %rd14007, %rd13980;
	xor.b64  	%rd14029, %rd14007, %rd13980;
	and.b64  	%rd14030, %rd14029, %rd13953;
	or.b64  	%rd14031, %rd14030, %rd14028;
	add.s64 	%rd14032, %rd14022, %rd14031;
	add.s64 	%rd18588, %rd14032, %rd14027;
	add.s32 	%r9554, %r12684, 13;
	mul.wide.s32 	%rd14033, %r9554, 8;
	add.s64 	%rd14034, %rd13684, %rd14033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9555,%dummy}, %rd18592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9556}, %rd18592;
	}
	shf.r.wrap.b32 	%r9557, %r9556, %r9555, 14;
	shf.r.wrap.b32 	%r9558, %r9555, %r9556, 14;
	mov.b64 	%rd14035, {%r9558, %r9557};
	shf.r.wrap.b32 	%r9559, %r9556, %r9555, 18;
	shf.r.wrap.b32 	%r9560, %r9555, %r9556, 18;
	mov.b64 	%rd14036, {%r9560, %r9559};
	xor.b64  	%rd14037, %rd14036, %rd14035;
	shf.l.wrap.b32 	%r9561, %r9555, %r9556, 23;
	shf.l.wrap.b32 	%r9562, %r9556, %r9555, 23;
	mov.b64 	%rd14038, {%r9562, %r9561};
	xor.b64  	%rd14039, %rd14037, %rd14038;
	xor.b64  	%rd14040, %rd13996, %rd13969;
	and.b64  	%rd14041, %rd18592, %rd14040;
	xor.b64  	%rd14042, %rd14041, %rd13969;
	add.s64 	%rd14043, %rd13942, %rd18626;
	ld.const.u64 	%rd14044, [%rd14034];
	add.s64 	%rd14045, %rd14043, %rd14044;
	add.s64 	%rd14046, %rd14045, %rd14042;
	add.s64 	%rd14047, %rd14046, %rd14039;
	add.s64 	%rd18591, %rd14047, %rd13953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9563,%dummy}, %rd18588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9564}, %rd18588;
	}
	shf.r.wrap.b32 	%r9565, %r9564, %r9563, 28;
	shf.r.wrap.b32 	%r9566, %r9563, %r9564, 28;
	mov.b64 	%rd14048, {%r9566, %r9565};
	shf.l.wrap.b32 	%r9567, %r9563, %r9564, 30;
	shf.l.wrap.b32 	%r9568, %r9564, %r9563, 30;
	mov.b64 	%rd14049, {%r9568, %r9567};
	xor.b64  	%rd14050, %rd14049, %rd14048;
	shf.l.wrap.b32 	%r9569, %r9563, %r9564, 25;
	shf.l.wrap.b32 	%r9570, %r9564, %r9563, 25;
	mov.b64 	%rd14051, {%r9570, %r9569};
	xor.b64  	%rd14052, %rd14050, %rd14051;
	and.b64  	%rd14053, %rd18588, %rd14007;
	xor.b64  	%rd14054, %rd18588, %rd14007;
	and.b64  	%rd14055, %rd14054, %rd13980;
	or.b64  	%rd14056, %rd14055, %rd14053;
	add.s64 	%rd14057, %rd14047, %rd14056;
	add.s64 	%rd18587, %rd14057, %rd14052;
	add.s32 	%r9571, %r12684, 14;
	mul.wide.s32 	%rd14058, %r9571, 8;
	add.s64 	%rd14059, %rd13684, %rd14058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9572,%dummy}, %rd18591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9573}, %rd18591;
	}
	shf.r.wrap.b32 	%r9574, %r9573, %r9572, 14;
	shf.r.wrap.b32 	%r9575, %r9572, %r9573, 14;
	mov.b64 	%rd14060, {%r9575, %r9574};
	shf.r.wrap.b32 	%r9576, %r9573, %r9572, 18;
	shf.r.wrap.b32 	%r9577, %r9572, %r9573, 18;
	mov.b64 	%rd14061, {%r9577, %r9576};
	xor.b64  	%rd14062, %rd14061, %rd14060;
	shf.l.wrap.b32 	%r9578, %r9572, %r9573, 23;
	shf.l.wrap.b32 	%r9579, %r9573, %r9572, 23;
	mov.b64 	%rd14063, {%r9579, %r9578};
	xor.b64  	%rd14064, %rd14062, %rd14063;
	xor.b64  	%rd14065, %rd18592, %rd13996;
	and.b64  	%rd14066, %rd18591, %rd14065;
	xor.b64  	%rd14067, %rd14066, %rd13996;
	add.s64 	%rd14068, %rd13969, %rd18625;
	ld.const.u64 	%rd14069, [%rd14059];
	add.s64 	%rd14070, %rd14068, %rd14069;
	add.s64 	%rd14071, %rd14070, %rd14067;
	add.s64 	%rd14072, %rd14071, %rd14064;
	add.s64 	%rd18590, %rd14072, %rd13980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9580,%dummy}, %rd18587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9581}, %rd18587;
	}
	shf.r.wrap.b32 	%r9582, %r9581, %r9580, 28;
	shf.r.wrap.b32 	%r9583, %r9580, %r9581, 28;
	mov.b64 	%rd14073, {%r9583, %r9582};
	shf.l.wrap.b32 	%r9584, %r9580, %r9581, 30;
	shf.l.wrap.b32 	%r9585, %r9581, %r9580, 30;
	mov.b64 	%rd14074, {%r9585, %r9584};
	xor.b64  	%rd14075, %rd14074, %rd14073;
	shf.l.wrap.b32 	%r9586, %r9580, %r9581, 25;
	shf.l.wrap.b32 	%r9587, %r9581, %r9580, 25;
	mov.b64 	%rd14076, {%r9587, %r9586};
	xor.b64  	%rd14077, %rd14075, %rd14076;
	and.b64  	%rd14078, %rd18587, %rd18588;
	xor.b64  	%rd14079, %rd18587, %rd18588;
	and.b64  	%rd14080, %rd14079, %rd14007;
	or.b64  	%rd14081, %rd14080, %rd14078;
	add.s64 	%rd14082, %rd14072, %rd14081;
	add.s64 	%rd18586, %rd14082, %rd14077;
	add.s32 	%r9588, %r12684, 15;
	mul.wide.s32 	%rd14083, %r9588, 8;
	add.s64 	%rd14084, %rd13684, %rd14083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9589,%dummy}, %rd18590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9590}, %rd18590;
	}
	shf.r.wrap.b32 	%r9591, %r9590, %r9589, 14;
	shf.r.wrap.b32 	%r9592, %r9589, %r9590, 14;
	mov.b64 	%rd14085, {%r9592, %r9591};
	shf.r.wrap.b32 	%r9593, %r9590, %r9589, 18;
	shf.r.wrap.b32 	%r9594, %r9589, %r9590, 18;
	mov.b64 	%rd14086, {%r9594, %r9593};
	xor.b64  	%rd14087, %rd14086, %rd14085;
	shf.l.wrap.b32 	%r9595, %r9589, %r9590, 23;
	shf.l.wrap.b32 	%r9596, %r9590, %r9589, 23;
	mov.b64 	%rd14088, {%r9596, %r9595};
	xor.b64  	%rd14089, %rd14087, %rd14088;
	xor.b64  	%rd14090, %rd18591, %rd18592;
	and.b64  	%rd14091, %rd18590, %rd14090;
	xor.b64  	%rd14092, %rd14091, %rd18592;
	add.s64 	%rd14093, %rd13996, %rd18577;
	ld.const.u64 	%rd14094, [%rd14084];
	add.s64 	%rd14095, %rd14093, %rd14094;
	add.s64 	%rd14096, %rd14095, %rd14092;
	add.s64 	%rd14097, %rd14096, %rd14089;
	add.s64 	%rd18589, %rd14097, %rd14007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9597,%dummy}, %rd18586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9598}, %rd18586;
	}
	shf.r.wrap.b32 	%r9599, %r9598, %r9597, 28;
	shf.r.wrap.b32 	%r9600, %r9597, %r9598, 28;
	mov.b64 	%rd14098, {%r9600, %r9599};
	shf.l.wrap.b32 	%r9601, %r9597, %r9598, 30;
	shf.l.wrap.b32 	%r9602, %r9598, %r9597, 30;
	mov.b64 	%rd14099, {%r9602, %r9601};
	xor.b64  	%rd14100, %rd14099, %rd14098;
	shf.l.wrap.b32 	%r9603, %r9597, %r9598, 25;
	shf.l.wrap.b32 	%r9604, %r9598, %r9597, 25;
	mov.b64 	%rd14101, {%r9604, %r9603};
	xor.b64  	%rd14102, %rd14100, %rd14101;
	and.b64  	%rd14103, %rd18586, %rd18587;
	xor.b64  	%rd14104, %rd18586, %rd18587;
	and.b64  	%rd14105, %rd14104, %rd18588;
	or.b64  	%rd14106, %rd14105, %rd14103;
	add.s64 	%rd14107, %rd14097, %rd14106;
	add.s64 	%rd18585, %rd14107, %rd14102;
	add.s32 	%r12684, %r12684, 16;
	setp.lt.s32	%p136, %r12684, 80;
	@%p136 bra 	BB0_225;

	add.s64 	%rd18608, %rd18585, %rd1030;
	st.local.u64 	[%rd1], %rd18608;
	add.s64 	%rd18607, %rd18586, %rd1031;
	st.local.u64 	[%rd1+8], %rd18607;
	add.s64 	%rd18606, %rd18587, %rd1032;
	st.local.u64 	[%rd1+16], %rd18606;
	add.s64 	%rd18605, %rd18588, %rd1029;
	st.local.u64 	[%rd1+24], %rd18605;
	add.s64 	%rd18604, %rd18589, %rd1025;
	st.local.u64 	[%rd1+32], %rd18604;
	add.s64 	%rd18603, %rd18590, %rd1027;
	st.local.u64 	[%rd1+40], %rd18603;
	add.s64 	%rd18602, %rd18591, %rd1026;
	st.local.u64 	[%rd1+48], %rd18602;
	add.s64 	%rd18601, %rd18592, %rd1028;
	st.local.u64 	[%rd1+56], %rd18601;
	mov.u64 	%rd18625, 0;
	st.local.u64 	[%rd1+64], %rd18625;
	st.local.u64 	[%rd1+72], %rd18625;
	st.local.u64 	[%rd1+80], %rd18625;
	st.local.u64 	[%rd1+88], %rd18625;
	st.local.u64 	[%rd1+96], %rd18625;
	st.local.u64 	[%rd1+104], %rd18625;
	st.local.u64 	[%rd1+112], %rd18625;
	st.local.u64 	[%rd1+120], %rd18625;
	st.local.u64 	[%rd1+128], %rd18625;
	st.local.u64 	[%rd1+136], %rd18625;
	st.local.u64 	[%rd1+144], %rd18625;
	st.local.u64 	[%rd1+152], %rd18625;
	st.local.u64 	[%rd1+160], %rd18625;
	st.local.u64 	[%rd1+168], %rd18625;
	st.local.u64 	[%rd1+176], %rd18625;
	st.local.u64 	[%rd1+184], %rd18625;
	mov.u64 	%rd18626, %rd18625;
	mov.u64 	%rd18627, %rd18625;
	mov.u64 	%rd18628, %rd18625;
	mov.u64 	%rd18629, %rd18625;
	mov.u64 	%rd18630, %rd18625;
	mov.u64 	%rd18631, %rd18625;
	mov.u64 	%rd18647, %rd18625;
	mov.u64 	%rd18646, %rd18625;
	mov.u64 	%rd18645, %rd18625;
	mov.u64 	%rd18644, %rd18625;
	mov.u64 	%rd18643, %rd18625;
	mov.u64 	%rd18642, %rd18625;
	mov.u64 	%rd18641, %rd18625;
	mov.u64 	%rd18640, %rd18625;
	bra.uni 	BB0_227;

BB0_223:
	ld.local.u64 	%rd18608, [%rd1];
	ld.local.u64 	%rd18607, [%rd1+8];
	ld.local.u64 	%rd18606, [%rd1+16];
	ld.local.u64 	%rd18605, [%rd1+24];
	ld.local.u64 	%rd18604, [%rd1+32];
	ld.local.u64 	%rd18603, [%rd1+40];
	ld.local.u64 	%rd18602, [%rd1+48];
	ld.local.u64 	%rd18601, [%rd1+56];

BB0_227:
	ld.local.u32 	%r9606, [%rd1+192];
	shl.b32 	%r9607, %r9606, 3;
	cvt.s64.s32	%rd18624, %r9607;
	st.local.u64 	[%rd1+184], %rd18624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9608,%dummy}, %rd18604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9609}, %rd18604;
	}
	shf.r.wrap.b32 	%r9610, %r9609, %r9608, 18;
	shf.r.wrap.b32 	%r9611, %r9608, %r9609, 18;
	mov.b64 	%rd14123, {%r9611, %r9610};
	shf.r.wrap.b32 	%r9612, %r9609, %r9608, 14;
	shf.r.wrap.b32 	%r9613, %r9608, %r9609, 14;
	mov.b64 	%rd14124, {%r9613, %r9612};
	xor.b64  	%rd14125, %rd14123, %rd14124;
	shf.l.wrap.b32 	%r9614, %r9608, %r9609, 23;
	shf.l.wrap.b32 	%r9615, %r9609, %r9608, 23;
	mov.b64 	%rd14126, {%r9615, %r9614};
	xor.b64  	%rd14127, %rd14125, %rd14126;
	xor.b64  	%rd14128, %rd18603, %rd18602;
	and.b64  	%rd14129, %rd14128, %rd18604;
	xor.b64  	%rd14130, %rd14129, %rd18602;
	add.s64 	%rd14131, %rd18601, %rd18338;
	add.s64 	%rd14132, %rd14131, %rd14130;
	add.s64 	%rd14133, %rd14132, %rd18640;
	add.s64 	%rd14134, %rd14133, %rd14127;
	add.s64 	%rd14135, %rd14134, %rd18605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9616}, %rd18608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9617,%dummy}, %rd18608;
	}
	shf.l.wrap.b32 	%r9618, %r9617, %r9616, 30;
	shf.l.wrap.b32 	%r9619, %r9616, %r9617, 30;
	mov.b64 	%rd14136, {%r9619, %r9618};
	shf.r.wrap.b32 	%r9620, %r9616, %r9617, 28;
	shf.r.wrap.b32 	%r9621, %r9617, %r9616, 28;
	mov.b64 	%rd14137, {%r9621, %r9620};
	xor.b64  	%rd14138, %rd14136, %rd14137;
	shf.l.wrap.b32 	%r9622, %r9617, %r9616, 25;
	shf.l.wrap.b32 	%r9623, %r9616, %r9617, 25;
	mov.b64 	%rd14139, {%r9623, %r9622};
	xor.b64  	%rd14140, %rd14138, %rd14139;
	xor.b64  	%rd14141, %rd18608, %rd18607;
	and.b64  	%rd14142, %rd14141, %rd18606;
	and.b64  	%rd14143, %rd18608, %rd18607;
	or.b64  	%rd14144, %rd14142, %rd14143;
	add.s64 	%rd14145, %rd14134, %rd14144;
	add.s64 	%rd14146, %rd14145, %rd14140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd14135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9625}, %rd14135;
	}
	shf.r.wrap.b32 	%r9626, %r9625, %r9624, 14;
	shf.r.wrap.b32 	%r9627, %r9624, %r9625, 14;
	mov.b64 	%rd14147, {%r9627, %r9626};
	shf.r.wrap.b32 	%r9628, %r9625, %r9624, 18;
	shf.r.wrap.b32 	%r9629, %r9624, %r9625, 18;
	mov.b64 	%rd14148, {%r9629, %r9628};
	xor.b64  	%rd14149, %rd14148, %rd14147;
	shf.l.wrap.b32 	%r9630, %r9624, %r9625, 23;
	shf.l.wrap.b32 	%r9631, %r9625, %r9624, 23;
	mov.b64 	%rd14150, {%r9631, %r9630};
	xor.b64  	%rd14151, %rd14149, %rd14150;
	xor.b64  	%rd14152, %rd18604, %rd18603;
	and.b64  	%rd14153, %rd14135, %rd14152;
	xor.b64  	%rd14154, %rd14153, %rd18603;
	add.s64 	%rd14155, %rd18602, %rd18337;
	add.s64 	%rd14156, %rd14155, %rd18641;
	add.s64 	%rd14157, %rd14156, %rd14154;
	add.s64 	%rd14158, %rd14157, %rd14151;
	add.s64 	%rd14159, %rd14158, %rd18606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9632,%dummy}, %rd14146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9633}, %rd14146;
	}
	shf.r.wrap.b32 	%r9634, %r9633, %r9632, 28;
	shf.r.wrap.b32 	%r9635, %r9632, %r9633, 28;
	mov.b64 	%rd14160, {%r9635, %r9634};
	shf.l.wrap.b32 	%r9636, %r9632, %r9633, 30;
	shf.l.wrap.b32 	%r9637, %r9633, %r9632, 30;
	mov.b64 	%rd14161, {%r9637, %r9636};
	xor.b64  	%rd14162, %rd14161, %rd14160;
	shf.l.wrap.b32 	%r9638, %r9632, %r9633, 25;
	shf.l.wrap.b32 	%r9639, %r9633, %r9632, 25;
	mov.b64 	%rd14163, {%r9639, %r9638};
	xor.b64  	%rd14164, %rd14162, %rd14163;
	and.b64  	%rd14165, %rd14146, %rd18608;
	xor.b64  	%rd14166, %rd14146, %rd18608;
	and.b64  	%rd14167, %rd14166, %rd18607;
	or.b64  	%rd14168, %rd14167, %rd14165;
	add.s64 	%rd14169, %rd14158, %rd14168;
	add.s64 	%rd14170, %rd14169, %rd14164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9640,%dummy}, %rd14159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9641}, %rd14159;
	}
	shf.r.wrap.b32 	%r9642, %r9641, %r9640, 14;
	shf.r.wrap.b32 	%r9643, %r9640, %r9641, 14;
	mov.b64 	%rd14171, {%r9643, %r9642};
	shf.r.wrap.b32 	%r9644, %r9641, %r9640, 18;
	shf.r.wrap.b32 	%r9645, %r9640, %r9641, 18;
	mov.b64 	%rd14172, {%r9645, %r9644};
	xor.b64  	%rd14173, %rd14172, %rd14171;
	shf.l.wrap.b32 	%r9646, %r9640, %r9641, 23;
	shf.l.wrap.b32 	%r9647, %r9641, %r9640, 23;
	mov.b64 	%rd14174, {%r9647, %r9646};
	xor.b64  	%rd14175, %rd14173, %rd14174;
	xor.b64  	%rd14176, %rd14135, %rd18604;
	and.b64  	%rd14177, %rd14159, %rd14176;
	xor.b64  	%rd14178, %rd14177, %rd18604;
	add.s64 	%rd14179, %rd18603, %rd18336;
	add.s64 	%rd14180, %rd14179, %rd18642;
	add.s64 	%rd14181, %rd14180, %rd14178;
	add.s64 	%rd14182, %rd14181, %rd14175;
	add.s64 	%rd14183, %rd14182, %rd18607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9648,%dummy}, %rd14170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9649}, %rd14170;
	}
	shf.r.wrap.b32 	%r9650, %r9649, %r9648, 28;
	shf.r.wrap.b32 	%r9651, %r9648, %r9649, 28;
	mov.b64 	%rd14184, {%r9651, %r9650};
	shf.l.wrap.b32 	%r9652, %r9648, %r9649, 30;
	shf.l.wrap.b32 	%r9653, %r9649, %r9648, 30;
	mov.b64 	%rd14185, {%r9653, %r9652};
	xor.b64  	%rd14186, %rd14185, %rd14184;
	shf.l.wrap.b32 	%r9654, %r9648, %r9649, 25;
	shf.l.wrap.b32 	%r9655, %r9649, %r9648, 25;
	mov.b64 	%rd14187, {%r9655, %r9654};
	xor.b64  	%rd14188, %rd14186, %rd14187;
	and.b64  	%rd14189, %rd14170, %rd14146;
	xor.b64  	%rd14190, %rd14170, %rd14146;
	and.b64  	%rd14191, %rd14190, %rd18608;
	or.b64  	%rd14192, %rd14191, %rd14189;
	add.s64 	%rd14193, %rd14182, %rd14192;
	add.s64 	%rd14194, %rd14193, %rd14188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd14183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9657}, %rd14183;
	}
	shf.r.wrap.b32 	%r9658, %r9657, %r9656, 14;
	shf.r.wrap.b32 	%r9659, %r9656, %r9657, 14;
	mov.b64 	%rd14195, {%r9659, %r9658};
	shf.r.wrap.b32 	%r9660, %r9657, %r9656, 18;
	shf.r.wrap.b32 	%r9661, %r9656, %r9657, 18;
	mov.b64 	%rd14196, {%r9661, %r9660};
	xor.b64  	%rd14197, %rd14196, %rd14195;
	shf.l.wrap.b32 	%r9662, %r9656, %r9657, 23;
	shf.l.wrap.b32 	%r9663, %r9657, %r9656, 23;
	mov.b64 	%rd14198, {%r9663, %r9662};
	xor.b64  	%rd14199, %rd14197, %rd14198;
	xor.b64  	%rd14200, %rd14159, %rd14135;
	and.b64  	%rd14201, %rd14183, %rd14200;
	xor.b64  	%rd14202, %rd14201, %rd14135;
	add.s64 	%rd14203, %rd18604, %rd18335;
	add.s64 	%rd14204, %rd14203, %rd18643;
	add.s64 	%rd14205, %rd14204, %rd14202;
	add.s64 	%rd14206, %rd14205, %rd14199;
	add.s64 	%rd14207, %rd14206, %rd18608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd14194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9665}, %rd14194;
	}
	shf.r.wrap.b32 	%r9666, %r9665, %r9664, 28;
	shf.r.wrap.b32 	%r9667, %r9664, %r9665, 28;
	mov.b64 	%rd14208, {%r9667, %r9666};
	shf.l.wrap.b32 	%r9668, %r9664, %r9665, 30;
	shf.l.wrap.b32 	%r9669, %r9665, %r9664, 30;
	mov.b64 	%rd14209, {%r9669, %r9668};
	xor.b64  	%rd14210, %rd14209, %rd14208;
	shf.l.wrap.b32 	%r9670, %r9664, %r9665, 25;
	shf.l.wrap.b32 	%r9671, %r9665, %r9664, 25;
	mov.b64 	%rd14211, {%r9671, %r9670};
	xor.b64  	%rd14212, %rd14210, %rd14211;
	and.b64  	%rd14213, %rd14194, %rd14170;
	xor.b64  	%rd14214, %rd14194, %rd14170;
	and.b64  	%rd14215, %rd14214, %rd14146;
	or.b64  	%rd14216, %rd14215, %rd14213;
	add.s64 	%rd14217, %rd14206, %rd14216;
	add.s64 	%rd14218, %rd14217, %rd14212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd14207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9673}, %rd14207;
	}
	shf.r.wrap.b32 	%r9674, %r9673, %r9672, 14;
	shf.r.wrap.b32 	%r9675, %r9672, %r9673, 14;
	mov.b64 	%rd14219, {%r9675, %r9674};
	shf.r.wrap.b32 	%r9676, %r9673, %r9672, 18;
	shf.r.wrap.b32 	%r9677, %r9672, %r9673, 18;
	mov.b64 	%rd14220, {%r9677, %r9676};
	xor.b64  	%rd14221, %rd14220, %rd14219;
	shf.l.wrap.b32 	%r9678, %r9672, %r9673, 23;
	shf.l.wrap.b32 	%r9679, %r9673, %r9672, 23;
	mov.b64 	%rd14222, {%r9679, %r9678};
	xor.b64  	%rd14223, %rd14221, %rd14222;
	xor.b64  	%rd14224, %rd14183, %rd14159;
	and.b64  	%rd14225, %rd14207, %rd14224;
	xor.b64  	%rd14226, %rd14225, %rd14159;
	add.s64 	%rd14227, %rd18644, %rd18334;
	add.s64 	%rd14228, %rd14227, %rd14135;
	add.s64 	%rd14229, %rd14228, %rd14226;
	add.s64 	%rd14230, %rd14229, %rd14223;
	add.s64 	%rd14231, %rd14230, %rd14146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd14218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9681}, %rd14218;
	}
	shf.r.wrap.b32 	%r9682, %r9681, %r9680, 28;
	shf.r.wrap.b32 	%r9683, %r9680, %r9681, 28;
	mov.b64 	%rd14232, {%r9683, %r9682};
	shf.l.wrap.b32 	%r9684, %r9680, %r9681, 30;
	shf.l.wrap.b32 	%r9685, %r9681, %r9680, 30;
	mov.b64 	%rd14233, {%r9685, %r9684};
	xor.b64  	%rd14234, %rd14233, %rd14232;
	shf.l.wrap.b32 	%r9686, %r9680, %r9681, 25;
	shf.l.wrap.b32 	%r9687, %r9681, %r9680, 25;
	mov.b64 	%rd14235, {%r9687, %r9686};
	xor.b64  	%rd14236, %rd14234, %rd14235;
	and.b64  	%rd14237, %rd14218, %rd14194;
	xor.b64  	%rd14238, %rd14218, %rd14194;
	and.b64  	%rd14239, %rd14238, %rd14170;
	or.b64  	%rd14240, %rd14239, %rd14237;
	add.s64 	%rd14241, %rd14230, %rd14240;
	add.s64 	%rd14242, %rd14241, %rd14236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9688,%dummy}, %rd14231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9689}, %rd14231;
	}
	shf.r.wrap.b32 	%r9690, %r9689, %r9688, 14;
	shf.r.wrap.b32 	%r9691, %r9688, %r9689, 14;
	mov.b64 	%rd14243, {%r9691, %r9690};
	shf.r.wrap.b32 	%r9692, %r9689, %r9688, 18;
	shf.r.wrap.b32 	%r9693, %r9688, %r9689, 18;
	mov.b64 	%rd14244, {%r9693, %r9692};
	xor.b64  	%rd14245, %rd14244, %rd14243;
	shf.l.wrap.b32 	%r9694, %r9688, %r9689, 23;
	shf.l.wrap.b32 	%r9695, %r9689, %r9688, 23;
	mov.b64 	%rd14246, {%r9695, %r9694};
	xor.b64  	%rd14247, %rd14245, %rd14246;
	xor.b64  	%rd14248, %rd14207, %rd14183;
	and.b64  	%rd14249, %rd14231, %rd14248;
	xor.b64  	%rd14250, %rd14249, %rd14183;
	add.s64 	%rd14251, %rd18645, %rd18333;
	add.s64 	%rd14252, %rd14251, %rd14159;
	add.s64 	%rd14253, %rd14252, %rd14250;
	add.s64 	%rd14254, %rd14253, %rd14247;
	add.s64 	%rd14255, %rd14254, %rd14170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9696,%dummy}, %rd14242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9697}, %rd14242;
	}
	shf.r.wrap.b32 	%r9698, %r9697, %r9696, 28;
	shf.r.wrap.b32 	%r9699, %r9696, %r9697, 28;
	mov.b64 	%rd14256, {%r9699, %r9698};
	shf.l.wrap.b32 	%r9700, %r9696, %r9697, 30;
	shf.l.wrap.b32 	%r9701, %r9697, %r9696, 30;
	mov.b64 	%rd14257, {%r9701, %r9700};
	xor.b64  	%rd14258, %rd14257, %rd14256;
	shf.l.wrap.b32 	%r9702, %r9696, %r9697, 25;
	shf.l.wrap.b32 	%r9703, %r9697, %r9696, 25;
	mov.b64 	%rd14259, {%r9703, %r9702};
	xor.b64  	%rd14260, %rd14258, %rd14259;
	and.b64  	%rd14261, %rd14242, %rd14218;
	xor.b64  	%rd14262, %rd14242, %rd14218;
	and.b64  	%rd14263, %rd14262, %rd14194;
	or.b64  	%rd14264, %rd14263, %rd14261;
	add.s64 	%rd14265, %rd14254, %rd14264;
	add.s64 	%rd14266, %rd14265, %rd14260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd14255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd14255;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 14;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 14;
	mov.b64 	%rd14267, {%r9707, %r9706};
	shf.r.wrap.b32 	%r9708, %r9705, %r9704, 18;
	shf.r.wrap.b32 	%r9709, %r9704, %r9705, 18;
	mov.b64 	%rd14268, {%r9709, %r9708};
	xor.b64  	%rd14269, %rd14268, %rd14267;
	shf.l.wrap.b32 	%r9710, %r9704, %r9705, 23;
	shf.l.wrap.b32 	%r9711, %r9705, %r9704, 23;
	mov.b64 	%rd14270, {%r9711, %r9710};
	xor.b64  	%rd14271, %rd14269, %rd14270;
	xor.b64  	%rd14272, %rd14231, %rd14207;
	and.b64  	%rd14273, %rd14255, %rd14272;
	xor.b64  	%rd14274, %rd14273, %rd14207;
	add.s64 	%rd14275, %rd18646, %rd18332;
	add.s64 	%rd14276, %rd14275, %rd14183;
	add.s64 	%rd14277, %rd14276, %rd14274;
	add.s64 	%rd14278, %rd14277, %rd14271;
	add.s64 	%rd14279, %rd14278, %rd14194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd14266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9713}, %rd14266;
	}
	shf.r.wrap.b32 	%r9714, %r9713, %r9712, 28;
	shf.r.wrap.b32 	%r9715, %r9712, %r9713, 28;
	mov.b64 	%rd14280, {%r9715, %r9714};
	shf.l.wrap.b32 	%r9716, %r9712, %r9713, 30;
	shf.l.wrap.b32 	%r9717, %r9713, %r9712, 30;
	mov.b64 	%rd14281, {%r9717, %r9716};
	xor.b64  	%rd14282, %rd14281, %rd14280;
	shf.l.wrap.b32 	%r9718, %r9712, %r9713, 25;
	shf.l.wrap.b32 	%r9719, %r9713, %r9712, 25;
	mov.b64 	%rd14283, {%r9719, %r9718};
	xor.b64  	%rd14284, %rd14282, %rd14283;
	and.b64  	%rd14285, %rd14266, %rd14242;
	xor.b64  	%rd14286, %rd14266, %rd14242;
	and.b64  	%rd14287, %rd14286, %rd14218;
	or.b64  	%rd14288, %rd14287, %rd14285;
	add.s64 	%rd14289, %rd14278, %rd14288;
	add.s64 	%rd14290, %rd14289, %rd14284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd14279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9721}, %rd14279;
	}
	shf.r.wrap.b32 	%r9722, %r9721, %r9720, 14;
	shf.r.wrap.b32 	%r9723, %r9720, %r9721, 14;
	mov.b64 	%rd14291, {%r9723, %r9722};
	shf.r.wrap.b32 	%r9724, %r9721, %r9720, 18;
	shf.r.wrap.b32 	%r9725, %r9720, %r9721, 18;
	mov.b64 	%rd14292, {%r9725, %r9724};
	xor.b64  	%rd14293, %rd14292, %rd14291;
	shf.l.wrap.b32 	%r9726, %r9720, %r9721, 23;
	shf.l.wrap.b32 	%r9727, %r9721, %r9720, 23;
	mov.b64 	%rd14294, {%r9727, %r9726};
	xor.b64  	%rd14295, %rd14293, %rd14294;
	xor.b64  	%rd14296, %rd14255, %rd14231;
	and.b64  	%rd14297, %rd14279, %rd14296;
	xor.b64  	%rd14298, %rd14297, %rd14231;
	add.s64 	%rd14299, %rd18647, %rd18331;
	add.s64 	%rd14300, %rd14299, %rd14207;
	add.s64 	%rd14301, %rd14300, %rd14298;
	add.s64 	%rd14302, %rd14301, %rd14295;
	add.s64 	%rd14303, %rd14302, %rd14218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd14290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9729}, %rd14290;
	}
	shf.r.wrap.b32 	%r9730, %r9729, %r9728, 28;
	shf.r.wrap.b32 	%r9731, %r9728, %r9729, 28;
	mov.b64 	%rd14304, {%r9731, %r9730};
	shf.l.wrap.b32 	%r9732, %r9728, %r9729, 30;
	shf.l.wrap.b32 	%r9733, %r9729, %r9728, 30;
	mov.b64 	%rd14305, {%r9733, %r9732};
	xor.b64  	%rd14306, %rd14305, %rd14304;
	shf.l.wrap.b32 	%r9734, %r9728, %r9729, 25;
	shf.l.wrap.b32 	%r9735, %r9729, %r9728, 25;
	mov.b64 	%rd14307, {%r9735, %r9734};
	xor.b64  	%rd14308, %rd14306, %rd14307;
	and.b64  	%rd14309, %rd14290, %rd14266;
	xor.b64  	%rd14310, %rd14290, %rd14266;
	and.b64  	%rd14311, %rd14310, %rd14242;
	or.b64  	%rd14312, %rd14311, %rd14309;
	add.s64 	%rd14313, %rd14302, %rd14312;
	add.s64 	%rd14314, %rd14313, %rd14308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9736,%dummy}, %rd14303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9737}, %rd14303;
	}
	shf.r.wrap.b32 	%r9738, %r9737, %r9736, 14;
	shf.r.wrap.b32 	%r9739, %r9736, %r9737, 14;
	mov.b64 	%rd14315, {%r9739, %r9738};
	shf.r.wrap.b32 	%r9740, %r9737, %r9736, 18;
	shf.r.wrap.b32 	%r9741, %r9736, %r9737, 18;
	mov.b64 	%rd14316, {%r9741, %r9740};
	xor.b64  	%rd14317, %rd14316, %rd14315;
	shf.l.wrap.b32 	%r9742, %r9736, %r9737, 23;
	shf.l.wrap.b32 	%r9743, %r9737, %r9736, 23;
	mov.b64 	%rd14318, {%r9743, %r9742};
	xor.b64  	%rd14319, %rd14317, %rd14318;
	xor.b64  	%rd14320, %rd14279, %rd14255;
	and.b64  	%rd14321, %rd14303, %rd14320;
	xor.b64  	%rd14322, %rd14321, %rd14255;
	add.s64 	%rd14323, %rd18631, %rd18330;
	add.s64 	%rd14324, %rd14323, %rd14231;
	add.s64 	%rd14325, %rd14324, %rd14322;
	add.s64 	%rd14326, %rd14325, %rd14319;
	add.s64 	%rd14327, %rd14326, %rd14242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd14314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9745}, %rd14314;
	}
	shf.r.wrap.b32 	%r9746, %r9745, %r9744, 28;
	shf.r.wrap.b32 	%r9747, %r9744, %r9745, 28;
	mov.b64 	%rd14328, {%r9747, %r9746};
	shf.l.wrap.b32 	%r9748, %r9744, %r9745, 30;
	shf.l.wrap.b32 	%r9749, %r9745, %r9744, 30;
	mov.b64 	%rd14329, {%r9749, %r9748};
	xor.b64  	%rd14330, %rd14329, %rd14328;
	shf.l.wrap.b32 	%r9750, %r9744, %r9745, 25;
	shf.l.wrap.b32 	%r9751, %r9745, %r9744, 25;
	mov.b64 	%rd14331, {%r9751, %r9750};
	xor.b64  	%rd14332, %rd14330, %rd14331;
	and.b64  	%rd14333, %rd14314, %rd14290;
	xor.b64  	%rd14334, %rd14314, %rd14290;
	and.b64  	%rd14335, %rd14334, %rd14266;
	or.b64  	%rd14336, %rd14335, %rd14333;
	add.s64 	%rd14337, %rd14326, %rd14336;
	add.s64 	%rd14338, %rd14337, %rd14332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd14327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9753}, %rd14327;
	}
	shf.r.wrap.b32 	%r9754, %r9753, %r9752, 14;
	shf.r.wrap.b32 	%r9755, %r9752, %r9753, 14;
	mov.b64 	%rd14339, {%r9755, %r9754};
	shf.r.wrap.b32 	%r9756, %r9753, %r9752, 18;
	shf.r.wrap.b32 	%r9757, %r9752, %r9753, 18;
	mov.b64 	%rd14340, {%r9757, %r9756};
	xor.b64  	%rd14341, %rd14340, %rd14339;
	shf.l.wrap.b32 	%r9758, %r9752, %r9753, 23;
	shf.l.wrap.b32 	%r9759, %r9753, %r9752, 23;
	mov.b64 	%rd14342, {%r9759, %r9758};
	xor.b64  	%rd14343, %rd14341, %rd14342;
	xor.b64  	%rd14344, %rd14303, %rd14279;
	and.b64  	%rd14345, %rd14327, %rd14344;
	xor.b64  	%rd14346, %rd14345, %rd14279;
	add.s64 	%rd14347, %rd18630, %rd18329;
	add.s64 	%rd14348, %rd14347, %rd14255;
	add.s64 	%rd14349, %rd14348, %rd14346;
	add.s64 	%rd14350, %rd14349, %rd14343;
	add.s64 	%rd14351, %rd14350, %rd14266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9760,%dummy}, %rd14338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9761}, %rd14338;
	}
	shf.r.wrap.b32 	%r9762, %r9761, %r9760, 28;
	shf.r.wrap.b32 	%r9763, %r9760, %r9761, 28;
	mov.b64 	%rd14352, {%r9763, %r9762};
	shf.l.wrap.b32 	%r9764, %r9760, %r9761, 30;
	shf.l.wrap.b32 	%r9765, %r9761, %r9760, 30;
	mov.b64 	%rd14353, {%r9765, %r9764};
	xor.b64  	%rd14354, %rd14353, %rd14352;
	shf.l.wrap.b32 	%r9766, %r9760, %r9761, 25;
	shf.l.wrap.b32 	%r9767, %r9761, %r9760, 25;
	mov.b64 	%rd14355, {%r9767, %r9766};
	xor.b64  	%rd14356, %rd14354, %rd14355;
	and.b64  	%rd14357, %rd14338, %rd14314;
	xor.b64  	%rd14358, %rd14338, %rd14314;
	and.b64  	%rd14359, %rd14358, %rd14290;
	or.b64  	%rd14360, %rd14359, %rd14357;
	add.s64 	%rd14361, %rd14350, %rd14360;
	add.s64 	%rd14362, %rd14361, %rd14356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd14351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9769}, %rd14351;
	}
	shf.r.wrap.b32 	%r9770, %r9769, %r9768, 14;
	shf.r.wrap.b32 	%r9771, %r9768, %r9769, 14;
	mov.b64 	%rd14363, {%r9771, %r9770};
	shf.r.wrap.b32 	%r9772, %r9769, %r9768, 18;
	shf.r.wrap.b32 	%r9773, %r9768, %r9769, 18;
	mov.b64 	%rd14364, {%r9773, %r9772};
	xor.b64  	%rd14365, %rd14364, %rd14363;
	shf.l.wrap.b32 	%r9774, %r9768, %r9769, 23;
	shf.l.wrap.b32 	%r9775, %r9769, %r9768, 23;
	mov.b64 	%rd14366, {%r9775, %r9774};
	xor.b64  	%rd14367, %rd14365, %rd14366;
	xor.b64  	%rd14368, %rd14327, %rd14303;
	and.b64  	%rd14369, %rd14351, %rd14368;
	xor.b64  	%rd14370, %rd14369, %rd14303;
	add.s64 	%rd14371, %rd18629, %rd18328;
	add.s64 	%rd14372, %rd14371, %rd14279;
	add.s64 	%rd14373, %rd14372, %rd14370;
	add.s64 	%rd14374, %rd14373, %rd14367;
	add.s64 	%rd14375, %rd14374, %rd14290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd14362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9777}, %rd14362;
	}
	shf.r.wrap.b32 	%r9778, %r9777, %r9776, 28;
	shf.r.wrap.b32 	%r9779, %r9776, %r9777, 28;
	mov.b64 	%rd14376, {%r9779, %r9778};
	shf.l.wrap.b32 	%r9780, %r9776, %r9777, 30;
	shf.l.wrap.b32 	%r9781, %r9777, %r9776, 30;
	mov.b64 	%rd14377, {%r9781, %r9780};
	xor.b64  	%rd14378, %rd14377, %rd14376;
	shf.l.wrap.b32 	%r9782, %r9776, %r9777, 25;
	shf.l.wrap.b32 	%r9783, %r9777, %r9776, 25;
	mov.b64 	%rd14379, {%r9783, %r9782};
	xor.b64  	%rd14380, %rd14378, %rd14379;
	and.b64  	%rd14381, %rd14362, %rd14338;
	xor.b64  	%rd14382, %rd14362, %rd14338;
	and.b64  	%rd14383, %rd14382, %rd14314;
	or.b64  	%rd14384, %rd14383, %rd14381;
	add.s64 	%rd14385, %rd14374, %rd14384;
	add.s64 	%rd14386, %rd14385, %rd14380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd14375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9785}, %rd14375;
	}
	shf.r.wrap.b32 	%r9786, %r9785, %r9784, 14;
	shf.r.wrap.b32 	%r9787, %r9784, %r9785, 14;
	mov.b64 	%rd14387, {%r9787, %r9786};
	shf.r.wrap.b32 	%r9788, %r9785, %r9784, 18;
	shf.r.wrap.b32 	%r9789, %r9784, %r9785, 18;
	mov.b64 	%rd14388, {%r9789, %r9788};
	xor.b64  	%rd14389, %rd14388, %rd14387;
	shf.l.wrap.b32 	%r9790, %r9784, %r9785, 23;
	shf.l.wrap.b32 	%r9791, %r9785, %r9784, 23;
	mov.b64 	%rd14390, {%r9791, %r9790};
	xor.b64  	%rd14391, %rd14389, %rd14390;
	xor.b64  	%rd14392, %rd14351, %rd14327;
	and.b64  	%rd14393, %rd14375, %rd14392;
	xor.b64  	%rd14394, %rd14393, %rd14327;
	add.s64 	%rd14395, %rd18628, %rd18327;
	add.s64 	%rd14396, %rd14395, %rd14303;
	add.s64 	%rd14397, %rd14396, %rd14394;
	add.s64 	%rd14398, %rd14397, %rd14391;
	add.s64 	%rd14399, %rd14398, %rd14314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9792,%dummy}, %rd14386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9793}, %rd14386;
	}
	shf.r.wrap.b32 	%r9794, %r9793, %r9792, 28;
	shf.r.wrap.b32 	%r9795, %r9792, %r9793, 28;
	mov.b64 	%rd14400, {%r9795, %r9794};
	shf.l.wrap.b32 	%r9796, %r9792, %r9793, 30;
	shf.l.wrap.b32 	%r9797, %r9793, %r9792, 30;
	mov.b64 	%rd14401, {%r9797, %r9796};
	xor.b64  	%rd14402, %rd14401, %rd14400;
	shf.l.wrap.b32 	%r9798, %r9792, %r9793, 25;
	shf.l.wrap.b32 	%r9799, %r9793, %r9792, 25;
	mov.b64 	%rd14403, {%r9799, %r9798};
	xor.b64  	%rd14404, %rd14402, %rd14403;
	and.b64  	%rd14405, %rd14386, %rd14362;
	xor.b64  	%rd14406, %rd14386, %rd14362;
	and.b64  	%rd14407, %rd14406, %rd14338;
	or.b64  	%rd14408, %rd14407, %rd14405;
	add.s64 	%rd14409, %rd14398, %rd14408;
	add.s64 	%rd14410, %rd14409, %rd14404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd14399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9801}, %rd14399;
	}
	shf.r.wrap.b32 	%r9802, %r9801, %r9800, 14;
	shf.r.wrap.b32 	%r9803, %r9800, %r9801, 14;
	mov.b64 	%rd14411, {%r9803, %r9802};
	shf.r.wrap.b32 	%r9804, %r9801, %r9800, 18;
	shf.r.wrap.b32 	%r9805, %r9800, %r9801, 18;
	mov.b64 	%rd14412, {%r9805, %r9804};
	xor.b64  	%rd14413, %rd14412, %rd14411;
	shf.l.wrap.b32 	%r9806, %r9800, %r9801, 23;
	shf.l.wrap.b32 	%r9807, %r9801, %r9800, 23;
	mov.b64 	%rd14414, {%r9807, %r9806};
	xor.b64  	%rd14415, %rd14413, %rd14414;
	xor.b64  	%rd14416, %rd14375, %rd14351;
	and.b64  	%rd14417, %rd14399, %rd14416;
	xor.b64  	%rd14418, %rd14417, %rd14351;
	add.s64 	%rd14419, %rd18627, %rd18326;
	add.s64 	%rd14420, %rd14419, %rd14327;
	add.s64 	%rd14421, %rd14420, %rd14418;
	add.s64 	%rd14422, %rd14421, %rd14415;
	add.s64 	%rd18639, %rd14422, %rd14338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9808,%dummy}, %rd14410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9809}, %rd14410;
	}
	shf.r.wrap.b32 	%r9810, %r9809, %r9808, 28;
	shf.r.wrap.b32 	%r9811, %r9808, %r9809, 28;
	mov.b64 	%rd14423, {%r9811, %r9810};
	shf.l.wrap.b32 	%r9812, %r9808, %r9809, 30;
	shf.l.wrap.b32 	%r9813, %r9809, %r9808, 30;
	mov.b64 	%rd14424, {%r9813, %r9812};
	xor.b64  	%rd14425, %rd14424, %rd14423;
	shf.l.wrap.b32 	%r9814, %r9808, %r9809, 25;
	shf.l.wrap.b32 	%r9815, %r9809, %r9808, 25;
	mov.b64 	%rd14426, {%r9815, %r9814};
	xor.b64  	%rd14427, %rd14425, %rd14426;
	and.b64  	%rd14428, %rd14410, %rd14386;
	xor.b64  	%rd14429, %rd14410, %rd14386;
	and.b64  	%rd14430, %rd14429, %rd14362;
	or.b64  	%rd14431, %rd14430, %rd14428;
	add.s64 	%rd14432, %rd14422, %rd14431;
	add.s64 	%rd18635, %rd14432, %rd14427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9816,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9817}, %rd18639;
	}
	shf.r.wrap.b32 	%r9818, %r9817, %r9816, 14;
	shf.r.wrap.b32 	%r9819, %r9816, %r9817, 14;
	mov.b64 	%rd14433, {%r9819, %r9818};
	shf.r.wrap.b32 	%r9820, %r9817, %r9816, 18;
	shf.r.wrap.b32 	%r9821, %r9816, %r9817, 18;
	mov.b64 	%rd14434, {%r9821, %r9820};
	xor.b64  	%rd14435, %rd14434, %rd14433;
	shf.l.wrap.b32 	%r9822, %r9816, %r9817, 23;
	shf.l.wrap.b32 	%r9823, %r9817, %r9816, 23;
	mov.b64 	%rd14436, {%r9823, %r9822};
	xor.b64  	%rd14437, %rd14435, %rd14436;
	xor.b64  	%rd14438, %rd14399, %rd14375;
	and.b64  	%rd14439, %rd18639, %rd14438;
	xor.b64  	%rd14440, %rd14439, %rd14375;
	add.s64 	%rd14441, %rd18626, %rd18325;
	add.s64 	%rd14442, %rd14441, %rd14351;
	add.s64 	%rd14443, %rd14442, %rd14440;
	add.s64 	%rd14444, %rd14443, %rd14437;
	add.s64 	%rd18638, %rd14444, %rd14362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd18635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9825}, %rd18635;
	}
	shf.r.wrap.b32 	%r9826, %r9825, %r9824, 28;
	shf.r.wrap.b32 	%r9827, %r9824, %r9825, 28;
	mov.b64 	%rd14445, {%r9827, %r9826};
	shf.l.wrap.b32 	%r9828, %r9824, %r9825, 30;
	shf.l.wrap.b32 	%r9829, %r9825, %r9824, 30;
	mov.b64 	%rd14446, {%r9829, %r9828};
	xor.b64  	%rd14447, %rd14446, %rd14445;
	shf.l.wrap.b32 	%r9830, %r9824, %r9825, 25;
	shf.l.wrap.b32 	%r9831, %r9825, %r9824, 25;
	mov.b64 	%rd14448, {%r9831, %r9830};
	xor.b64  	%rd14449, %rd14447, %rd14448;
	and.b64  	%rd14450, %rd18635, %rd14410;
	xor.b64  	%rd14451, %rd18635, %rd14410;
	and.b64  	%rd14452, %rd14451, %rd14386;
	or.b64  	%rd14453, %rd14452, %rd14450;
	add.s64 	%rd14454, %rd14444, %rd14453;
	add.s64 	%rd18634, %rd14454, %rd14449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9832,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9833}, %rd18638;
	}
	shf.r.wrap.b32 	%r9834, %r9833, %r9832, 14;
	shf.r.wrap.b32 	%r9835, %r9832, %r9833, 14;
	mov.b64 	%rd14455, {%r9835, %r9834};
	shf.r.wrap.b32 	%r9836, %r9833, %r9832, 18;
	shf.r.wrap.b32 	%r9837, %r9832, %r9833, 18;
	mov.b64 	%rd14456, {%r9837, %r9836};
	xor.b64  	%rd14457, %rd14456, %rd14455;
	shf.l.wrap.b32 	%r9838, %r9832, %r9833, 23;
	shf.l.wrap.b32 	%r9839, %r9833, %r9832, 23;
	mov.b64 	%rd14458, {%r9839, %r9838};
	xor.b64  	%rd14459, %rd14457, %rd14458;
	xor.b64  	%rd14460, %rd18639, %rd14399;
	and.b64  	%rd14461, %rd18638, %rd14460;
	xor.b64  	%rd14462, %rd14461, %rd14399;
	add.s64 	%rd14463, %rd18625, %rd18324;
	add.s64 	%rd14464, %rd14463, %rd14375;
	add.s64 	%rd14465, %rd14464, %rd14462;
	add.s64 	%rd14466, %rd14465, %rd14459;
	add.s64 	%rd18637, %rd14466, %rd14386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9840,%dummy}, %rd18634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9841}, %rd18634;
	}
	shf.r.wrap.b32 	%r9842, %r9841, %r9840, 28;
	shf.r.wrap.b32 	%r9843, %r9840, %r9841, 28;
	mov.b64 	%rd14467, {%r9843, %r9842};
	shf.l.wrap.b32 	%r9844, %r9840, %r9841, 30;
	shf.l.wrap.b32 	%r9845, %r9841, %r9840, 30;
	mov.b64 	%rd14468, {%r9845, %r9844};
	xor.b64  	%rd14469, %rd14468, %rd14467;
	shf.l.wrap.b32 	%r9846, %r9840, %r9841, 25;
	shf.l.wrap.b32 	%r9847, %r9841, %r9840, 25;
	mov.b64 	%rd14470, {%r9847, %r9846};
	xor.b64  	%rd14471, %rd14469, %rd14470;
	and.b64  	%rd14472, %rd18634, %rd18635;
	xor.b64  	%rd14473, %rd18634, %rd18635;
	and.b64  	%rd14474, %rd14473, %rd14410;
	or.b64  	%rd14475, %rd14474, %rd14472;
	add.s64 	%rd14476, %rd14466, %rd14475;
	add.s64 	%rd18633, %rd14476, %rd14471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9848,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9849}, %rd18637;
	}
	shf.r.wrap.b32 	%r9850, %r9849, %r9848, 14;
	shf.r.wrap.b32 	%r9851, %r9848, %r9849, 14;
	mov.b64 	%rd14477, {%r9851, %r9850};
	shf.r.wrap.b32 	%r9852, %r9849, %r9848, 18;
	shf.r.wrap.b32 	%r9853, %r9848, %r9849, 18;
	mov.b64 	%rd14478, {%r9853, %r9852};
	xor.b64  	%rd14479, %rd14478, %rd14477;
	shf.l.wrap.b32 	%r9854, %r9848, %r9849, 23;
	shf.l.wrap.b32 	%r9855, %r9849, %r9848, 23;
	mov.b64 	%rd14480, {%r9855, %r9854};
	xor.b64  	%rd14481, %rd14479, %rd14480;
	xor.b64  	%rd14482, %rd18638, %rd18639;
	and.b64  	%rd14483, %rd18637, %rd14482;
	xor.b64  	%rd14484, %rd14483, %rd18639;
	add.s64 	%rd14485, %rd18624, %rd18323;
	add.s64 	%rd14486, %rd14485, %rd14399;
	add.s64 	%rd14487, %rd14486, %rd14484;
	add.s64 	%rd14488, %rd14487, %rd14481;
	add.s64 	%rd18636, %rd14488, %rd14410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd18633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9857}, %rd18633;
	}
	shf.r.wrap.b32 	%r9858, %r9857, %r9856, 28;
	shf.r.wrap.b32 	%r9859, %r9856, %r9857, 28;
	mov.b64 	%rd14489, {%r9859, %r9858};
	shf.l.wrap.b32 	%r9860, %r9856, %r9857, 30;
	shf.l.wrap.b32 	%r9861, %r9857, %r9856, 30;
	mov.b64 	%rd14490, {%r9861, %r9860};
	xor.b64  	%rd14491, %rd14490, %rd14489;
	shf.l.wrap.b32 	%r9862, %r9856, %r9857, 25;
	shf.l.wrap.b32 	%r9863, %r9857, %r9856, 25;
	mov.b64 	%rd14492, {%r9863, %r9862};
	xor.b64  	%rd14493, %rd14491, %rd14492;
	and.b64  	%rd14494, %rd18633, %rd18634;
	xor.b64  	%rd14495, %rd18633, %rd18634;
	and.b64  	%rd14496, %rd14495, %rd18635;
	or.b64  	%rd14497, %rd14496, %rd14494;
	add.s64 	%rd14498, %rd14488, %rd14497;
	add.s64 	%rd18632, %rd14498, %rd14493;
	mov.u32 	%r12685, 16;

BB0_228:
	mov.u64 	%rd18239, k_sha512;
	shr.u64 	%rd14499, %rd18625, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd18625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9865}, %rd18625;
	}
	shf.r.wrap.b32 	%r9866, %r9865, %r9864, 19;
	shf.r.wrap.b32 	%r9867, %r9864, %r9865, 19;
	mov.b64 	%rd14500, {%r9867, %r9866};
	xor.b64  	%rd14501, %rd14500, %rd14499;
	shf.l.wrap.b32 	%r9868, %r9864, %r9865, 3;
	shf.l.wrap.b32 	%r9869, %r9865, %r9864, 3;
	mov.b64 	%rd14502, {%r9869, %r9868};
	xor.b64  	%rd14503, %rd14501, %rd14502;
	shr.u64 	%rd14504, %rd18641, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9870,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd18641;
	}
	shf.r.wrap.b32 	%r9872, %r9871, %r9870, 1;
	shf.r.wrap.b32 	%r9873, %r9870, %r9871, 1;
	mov.b64 	%rd14505, {%r9873, %r9872};
	xor.b64  	%rd14506, %rd14505, %rd14504;
	shf.r.wrap.b32 	%r9874, %r9871, %r9870, 8;
	shf.r.wrap.b32 	%r9875, %r9870, %r9871, 8;
	mov.b64 	%rd14507, {%r9875, %r9874};
	xor.b64  	%rd14508, %rd14506, %rd14507;
	add.s64 	%rd14509, %rd18640, %rd18630;
	add.s64 	%rd14510, %rd14509, %rd14503;
	add.s64 	%rd18640, %rd14510, %rd14508;
	shr.u64 	%rd14511, %rd18624, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9876,%dummy}, %rd18624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9877}, %rd18624;
	}
	shf.r.wrap.b32 	%r9878, %r9877, %r9876, 19;
	shf.r.wrap.b32 	%r9879, %r9876, %r9877, 19;
	mov.b64 	%rd14512, {%r9879, %r9878};
	xor.b64  	%rd14513, %rd14512, %rd14511;
	shf.l.wrap.b32 	%r9880, %r9876, %r9877, 3;
	shf.l.wrap.b32 	%r9881, %r9877, %r9876, 3;
	mov.b64 	%rd14514, {%r9881, %r9880};
	xor.b64  	%rd14515, %rd14513, %rd14514;
	shr.u64 	%rd14516, %rd18642, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9882,%dummy}, %rd18642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd18642;
	}
	shf.r.wrap.b32 	%r9884, %r9883, %r9882, 1;
	shf.r.wrap.b32 	%r9885, %r9882, %r9883, 1;
	mov.b64 	%rd14517, {%r9885, %r9884};
	xor.b64  	%rd14518, %rd14517, %rd14516;
	shf.r.wrap.b32 	%r9886, %r9883, %r9882, 8;
	shf.r.wrap.b32 	%r9887, %r9882, %r9883, 8;
	mov.b64 	%rd14519, {%r9887, %r9886};
	xor.b64  	%rd14520, %rd14518, %rd14519;
	add.s64 	%rd14521, %rd18641, %rd18629;
	add.s64 	%rd14522, %rd14521, %rd14515;
	add.s64 	%rd18641, %rd14522, %rd14520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9889}, %rd18640;
	}
	shf.r.wrap.b32 	%r9890, %r9889, %r9888, 19;
	shf.r.wrap.b32 	%r9891, %r9888, %r9889, 19;
	mov.b64 	%rd14523, {%r9891, %r9890};
	shf.l.wrap.b32 	%r9892, %r9888, %r9889, 3;
	shf.l.wrap.b32 	%r9893, %r9889, %r9888, 3;
	mov.b64 	%rd14524, {%r9893, %r9892};
	shr.u64 	%rd14525, %rd18640, 6;
	xor.b64  	%rd14526, %rd14523, %rd14525;
	xor.b64  	%rd14527, %rd14526, %rd14524;
	shr.u64 	%rd14528, %rd18643, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9894,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd18643;
	}
	shf.r.wrap.b32 	%r9896, %r9895, %r9894, 1;
	shf.r.wrap.b32 	%r9897, %r9894, %r9895, 1;
	mov.b64 	%rd14529, {%r9897, %r9896};
	xor.b64  	%rd14530, %rd14529, %rd14528;
	shf.r.wrap.b32 	%r9898, %r9895, %r9894, 8;
	shf.r.wrap.b32 	%r9899, %r9894, %r9895, 8;
	mov.b64 	%rd14531, {%r9899, %r9898};
	xor.b64  	%rd14532, %rd14530, %rd14531;
	add.s64 	%rd14533, %rd18642, %rd18628;
	add.s64 	%rd14534, %rd14533, %rd14527;
	add.s64 	%rd18642, %rd14534, %rd14532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9900,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9901}, %rd18641;
	}
	shf.r.wrap.b32 	%r9902, %r9901, %r9900, 19;
	shf.r.wrap.b32 	%r9903, %r9900, %r9901, 19;
	mov.b64 	%rd14535, {%r9903, %r9902};
	shf.l.wrap.b32 	%r9904, %r9900, %r9901, 3;
	shf.l.wrap.b32 	%r9905, %r9901, %r9900, 3;
	mov.b64 	%rd14536, {%r9905, %r9904};
	shr.u64 	%rd14537, %rd18641, 6;
	xor.b64  	%rd14538, %rd14535, %rd14537;
	xor.b64  	%rd14539, %rd14538, %rd14536;
	shr.u64 	%rd14540, %rd18644, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9906,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9907}, %rd18644;
	}
	shf.r.wrap.b32 	%r9908, %r9907, %r9906, 1;
	shf.r.wrap.b32 	%r9909, %r9906, %r9907, 1;
	mov.b64 	%rd14541, {%r9909, %r9908};
	xor.b64  	%rd14542, %rd14541, %rd14540;
	shf.r.wrap.b32 	%r9910, %r9907, %r9906, 8;
	shf.r.wrap.b32 	%r9911, %r9906, %r9907, 8;
	mov.b64 	%rd14543, {%r9911, %r9910};
	xor.b64  	%rd14544, %rd14542, %rd14543;
	add.s64 	%rd14545, %rd18643, %rd18627;
	add.s64 	%rd14546, %rd14545, %rd14539;
	add.s64 	%rd18643, %rd14546, %rd14544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9912,%dummy}, %rd18642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9913}, %rd18642;
	}
	shf.r.wrap.b32 	%r9914, %r9913, %r9912, 19;
	shf.r.wrap.b32 	%r9915, %r9912, %r9913, 19;
	mov.b64 	%rd14547, {%r9915, %r9914};
	shf.l.wrap.b32 	%r9916, %r9912, %r9913, 3;
	shf.l.wrap.b32 	%r9917, %r9913, %r9912, 3;
	mov.b64 	%rd14548, {%r9917, %r9916};
	shr.u64 	%rd14549, %rd18642, 6;
	xor.b64  	%rd14550, %rd14547, %rd14549;
	xor.b64  	%rd14551, %rd14550, %rd14548;
	shr.u64 	%rd14552, %rd18645, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9918,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9919}, %rd18645;
	}
	shf.r.wrap.b32 	%r9920, %r9919, %r9918, 1;
	shf.r.wrap.b32 	%r9921, %r9918, %r9919, 1;
	mov.b64 	%rd14553, {%r9921, %r9920};
	xor.b64  	%rd14554, %rd14553, %rd14552;
	shf.r.wrap.b32 	%r9922, %r9919, %r9918, 8;
	shf.r.wrap.b32 	%r9923, %r9918, %r9919, 8;
	mov.b64 	%rd14555, {%r9923, %r9922};
	xor.b64  	%rd14556, %rd14554, %rd14555;
	add.s64 	%rd14557, %rd18644, %rd18626;
	add.s64 	%rd14558, %rd14557, %rd14551;
	add.s64 	%rd18644, %rd14558, %rd14556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9924,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9925}, %rd18643;
	}
	shf.r.wrap.b32 	%r9926, %r9925, %r9924, 19;
	shf.r.wrap.b32 	%r9927, %r9924, %r9925, 19;
	mov.b64 	%rd14559, {%r9927, %r9926};
	shf.l.wrap.b32 	%r9928, %r9924, %r9925, 3;
	shf.l.wrap.b32 	%r9929, %r9925, %r9924, 3;
	mov.b64 	%rd14560, {%r9929, %r9928};
	shr.u64 	%rd14561, %rd18643, 6;
	xor.b64  	%rd14562, %rd14559, %rd14561;
	xor.b64  	%rd14563, %rd14562, %rd14560;
	shr.u64 	%rd14564, %rd18646, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9930,%dummy}, %rd18646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9931}, %rd18646;
	}
	shf.r.wrap.b32 	%r9932, %r9931, %r9930, 1;
	shf.r.wrap.b32 	%r9933, %r9930, %r9931, 1;
	mov.b64 	%rd14565, {%r9933, %r9932};
	xor.b64  	%rd14566, %rd14565, %rd14564;
	shf.r.wrap.b32 	%r9934, %r9931, %r9930, 8;
	shf.r.wrap.b32 	%r9935, %r9930, %r9931, 8;
	mov.b64 	%rd14567, {%r9935, %r9934};
	xor.b64  	%rd14568, %rd14566, %rd14567;
	add.s64 	%rd14569, %rd18645, %rd18625;
	add.s64 	%rd14570, %rd14569, %rd14563;
	add.s64 	%rd18645, %rd14570, %rd14568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9936,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9937}, %rd18644;
	}
	shf.r.wrap.b32 	%r9938, %r9937, %r9936, 19;
	shf.r.wrap.b32 	%r9939, %r9936, %r9937, 19;
	mov.b64 	%rd14571, {%r9939, %r9938};
	shf.l.wrap.b32 	%r9940, %r9936, %r9937, 3;
	shf.l.wrap.b32 	%r9941, %r9937, %r9936, 3;
	mov.b64 	%rd14572, {%r9941, %r9940};
	shr.u64 	%rd14573, %rd18644, 6;
	xor.b64  	%rd14574, %rd14571, %rd14573;
	xor.b64  	%rd14575, %rd14574, %rd14572;
	shr.u64 	%rd14576, %rd18647, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9942,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd18647;
	}
	shf.r.wrap.b32 	%r9944, %r9943, %r9942, 1;
	shf.r.wrap.b32 	%r9945, %r9942, %r9943, 1;
	mov.b64 	%rd14577, {%r9945, %r9944};
	xor.b64  	%rd14578, %rd14577, %rd14576;
	shf.r.wrap.b32 	%r9946, %r9943, %r9942, 8;
	shf.r.wrap.b32 	%r9947, %r9942, %r9943, 8;
	mov.b64 	%rd14579, {%r9947, %r9946};
	xor.b64  	%rd14580, %rd14578, %rd14579;
	add.s64 	%rd14581, %rd18646, %rd18624;
	add.s64 	%rd14582, %rd14581, %rd14575;
	add.s64 	%rd18646, %rd14582, %rd14580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9948,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9949}, %rd18645;
	}
	shf.r.wrap.b32 	%r9950, %r9949, %r9948, 19;
	shf.r.wrap.b32 	%r9951, %r9948, %r9949, 19;
	mov.b64 	%rd14583, {%r9951, %r9950};
	shf.l.wrap.b32 	%r9952, %r9948, %r9949, 3;
	shf.l.wrap.b32 	%r9953, %r9949, %r9948, 3;
	mov.b64 	%rd14584, {%r9953, %r9952};
	shr.u64 	%rd14585, %rd18645, 6;
	xor.b64  	%rd14586, %rd14583, %rd14585;
	xor.b64  	%rd14587, %rd14586, %rd14584;
	shr.u64 	%rd14588, %rd18631, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9954,%dummy}, %rd18631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9955}, %rd18631;
	}
	shf.r.wrap.b32 	%r9956, %r9955, %r9954, 1;
	shf.r.wrap.b32 	%r9957, %r9954, %r9955, 1;
	mov.b64 	%rd14589, {%r9957, %r9956};
	xor.b64  	%rd14590, %rd14589, %rd14588;
	shf.r.wrap.b32 	%r9958, %r9955, %r9954, 8;
	shf.r.wrap.b32 	%r9959, %r9954, %r9955, 8;
	mov.b64 	%rd14591, {%r9959, %r9958};
	xor.b64  	%rd14592, %rd14590, %rd14591;
	add.s64 	%rd14593, %rd18640, %rd18647;
	add.s64 	%rd14594, %rd14593, %rd14587;
	add.s64 	%rd18647, %rd14594, %rd14592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9960,%dummy}, %rd18646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9961}, %rd18646;
	}
	shf.r.wrap.b32 	%r9962, %r9961, %r9960, 19;
	shf.r.wrap.b32 	%r9963, %r9960, %r9961, 19;
	mov.b64 	%rd14595, {%r9963, %r9962};
	shf.l.wrap.b32 	%r9964, %r9960, %r9961, 3;
	shf.l.wrap.b32 	%r9965, %r9961, %r9960, 3;
	mov.b64 	%rd14596, {%r9965, %r9964};
	shr.u64 	%rd14597, %rd18646, 6;
	xor.b64  	%rd14598, %rd14595, %rd14597;
	xor.b64  	%rd14599, %rd14598, %rd14596;
	shr.u64 	%rd14600, %rd18630, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9966,%dummy}, %rd18630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9967}, %rd18630;
	}
	shf.r.wrap.b32 	%r9968, %r9967, %r9966, 1;
	shf.r.wrap.b32 	%r9969, %r9966, %r9967, 1;
	mov.b64 	%rd14601, {%r9969, %r9968};
	xor.b64  	%rd14602, %rd14601, %rd14600;
	shf.r.wrap.b32 	%r9970, %r9967, %r9966, 8;
	shf.r.wrap.b32 	%r9971, %r9966, %r9967, 8;
	mov.b64 	%rd14603, {%r9971, %r9970};
	xor.b64  	%rd14604, %rd14602, %rd14603;
	add.s64 	%rd14605, %rd18641, %rd18631;
	add.s64 	%rd14606, %rd14605, %rd14599;
	add.s64 	%rd18631, %rd14606, %rd14604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9972,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9973}, %rd18647;
	}
	shf.r.wrap.b32 	%r9974, %r9973, %r9972, 19;
	shf.r.wrap.b32 	%r9975, %r9972, %r9973, 19;
	mov.b64 	%rd14607, {%r9975, %r9974};
	shf.l.wrap.b32 	%r9976, %r9972, %r9973, 3;
	shf.l.wrap.b32 	%r9977, %r9973, %r9972, 3;
	mov.b64 	%rd14608, {%r9977, %r9976};
	shr.u64 	%rd14609, %rd18647, 6;
	xor.b64  	%rd14610, %rd14607, %rd14609;
	xor.b64  	%rd14611, %rd14610, %rd14608;
	shr.u64 	%rd14612, %rd18629, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9978,%dummy}, %rd18629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd18629;
	}
	shf.r.wrap.b32 	%r9980, %r9979, %r9978, 1;
	shf.r.wrap.b32 	%r9981, %r9978, %r9979, 1;
	mov.b64 	%rd14613, {%r9981, %r9980};
	xor.b64  	%rd14614, %rd14613, %rd14612;
	shf.r.wrap.b32 	%r9982, %r9979, %r9978, 8;
	shf.r.wrap.b32 	%r9983, %r9978, %r9979, 8;
	mov.b64 	%rd14615, {%r9983, %r9982};
	xor.b64  	%rd14616, %rd14614, %rd14615;
	add.s64 	%rd14617, %rd18642, %rd18630;
	add.s64 	%rd14618, %rd14617, %rd14611;
	add.s64 	%rd18630, %rd14618, %rd14616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9984,%dummy}, %rd18631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9985}, %rd18631;
	}
	shf.r.wrap.b32 	%r9986, %r9985, %r9984, 19;
	shf.r.wrap.b32 	%r9987, %r9984, %r9985, 19;
	mov.b64 	%rd14619, {%r9987, %r9986};
	shf.l.wrap.b32 	%r9988, %r9984, %r9985, 3;
	shf.l.wrap.b32 	%r9989, %r9985, %r9984, 3;
	mov.b64 	%rd14620, {%r9989, %r9988};
	shr.u64 	%rd14621, %rd18631, 6;
	xor.b64  	%rd14622, %rd14619, %rd14621;
	xor.b64  	%rd14623, %rd14622, %rd14620;
	shr.u64 	%rd14624, %rd18628, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9990,%dummy}, %rd18628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9991}, %rd18628;
	}
	shf.r.wrap.b32 	%r9992, %r9991, %r9990, 1;
	shf.r.wrap.b32 	%r9993, %r9990, %r9991, 1;
	mov.b64 	%rd14625, {%r9993, %r9992};
	xor.b64  	%rd14626, %rd14625, %rd14624;
	shf.r.wrap.b32 	%r9994, %r9991, %r9990, 8;
	shf.r.wrap.b32 	%r9995, %r9990, %r9991, 8;
	mov.b64 	%rd14627, {%r9995, %r9994};
	xor.b64  	%rd14628, %rd14626, %rd14627;
	add.s64 	%rd14629, %rd18643, %rd18629;
	add.s64 	%rd14630, %rd14629, %rd14623;
	add.s64 	%rd18629, %rd14630, %rd14628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9996,%dummy}, %rd18630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9997}, %rd18630;
	}
	shf.r.wrap.b32 	%r9998, %r9997, %r9996, 19;
	shf.r.wrap.b32 	%r9999, %r9996, %r9997, 19;
	mov.b64 	%rd14631, {%r9999, %r9998};
	shf.l.wrap.b32 	%r10000, %r9996, %r9997, 3;
	shf.l.wrap.b32 	%r10001, %r9997, %r9996, 3;
	mov.b64 	%rd14632, {%r10001, %r10000};
	shr.u64 	%rd14633, %rd18630, 6;
	xor.b64  	%rd14634, %rd14631, %rd14633;
	xor.b64  	%rd14635, %rd14634, %rd14632;
	shr.u64 	%rd14636, %rd18627, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10002,%dummy}, %rd18627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10003}, %rd18627;
	}
	shf.r.wrap.b32 	%r10004, %r10003, %r10002, 1;
	shf.r.wrap.b32 	%r10005, %r10002, %r10003, 1;
	mov.b64 	%rd14637, {%r10005, %r10004};
	xor.b64  	%rd14638, %rd14637, %rd14636;
	shf.r.wrap.b32 	%r10006, %r10003, %r10002, 8;
	shf.r.wrap.b32 	%r10007, %r10002, %r10003, 8;
	mov.b64 	%rd14639, {%r10007, %r10006};
	xor.b64  	%rd14640, %rd14638, %rd14639;
	add.s64 	%rd14641, %rd18644, %rd18628;
	add.s64 	%rd14642, %rd14641, %rd14635;
	add.s64 	%rd18628, %rd14642, %rd14640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd18629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10009}, %rd18629;
	}
	shf.r.wrap.b32 	%r10010, %r10009, %r10008, 19;
	shf.r.wrap.b32 	%r10011, %r10008, %r10009, 19;
	mov.b64 	%rd14643, {%r10011, %r10010};
	shf.l.wrap.b32 	%r10012, %r10008, %r10009, 3;
	shf.l.wrap.b32 	%r10013, %r10009, %r10008, 3;
	mov.b64 	%rd14644, {%r10013, %r10012};
	shr.u64 	%rd14645, %rd18629, 6;
	xor.b64  	%rd14646, %rd14643, %rd14645;
	xor.b64  	%rd14647, %rd14646, %rd14644;
	shr.u64 	%rd14648, %rd18626, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10014,%dummy}, %rd18626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10015}, %rd18626;
	}
	shf.r.wrap.b32 	%r10016, %r10015, %r10014, 1;
	shf.r.wrap.b32 	%r10017, %r10014, %r10015, 1;
	mov.b64 	%rd14649, {%r10017, %r10016};
	xor.b64  	%rd14650, %rd14649, %rd14648;
	shf.r.wrap.b32 	%r10018, %r10015, %r10014, 8;
	shf.r.wrap.b32 	%r10019, %r10014, %r10015, 8;
	mov.b64 	%rd14651, {%r10019, %r10018};
	xor.b64  	%rd14652, %rd14650, %rd14651;
	add.s64 	%rd14653, %rd18645, %rd18627;
	add.s64 	%rd14654, %rd14653, %rd14647;
	add.s64 	%rd18627, %rd14654, %rd14652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10020,%dummy}, %rd18628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10021}, %rd18628;
	}
	shf.r.wrap.b32 	%r10022, %r10021, %r10020, 19;
	shf.r.wrap.b32 	%r10023, %r10020, %r10021, 19;
	mov.b64 	%rd14655, {%r10023, %r10022};
	shf.l.wrap.b32 	%r10024, %r10020, %r10021, 3;
	shf.l.wrap.b32 	%r10025, %r10021, %r10020, 3;
	mov.b64 	%rd14656, {%r10025, %r10024};
	shr.u64 	%rd14657, %rd18628, 6;
	xor.b64  	%rd14658, %rd14655, %rd14657;
	xor.b64  	%rd14659, %rd14658, %rd14656;
	shr.u64 	%rd14660, %rd18625, 7;
	shf.r.wrap.b32 	%r10026, %r9865, %r9864, 1;
	shf.r.wrap.b32 	%r10027, %r9864, %r9865, 1;
	mov.b64 	%rd14661, {%r10027, %r10026};
	xor.b64  	%rd14662, %rd14661, %rd14660;
	shf.r.wrap.b32 	%r10028, %r9865, %r9864, 8;
	shf.r.wrap.b32 	%r10029, %r9864, %r9865, 8;
	mov.b64 	%rd14663, {%r10029, %r10028};
	xor.b64  	%rd14664, %rd14662, %rd14663;
	add.s64 	%rd14665, %rd18646, %rd18626;
	add.s64 	%rd14666, %rd14665, %rd14659;
	add.s64 	%rd18626, %rd14666, %rd14664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10030,%dummy}, %rd18627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd18627;
	}
	shf.r.wrap.b32 	%r10032, %r10031, %r10030, 19;
	shf.r.wrap.b32 	%r10033, %r10030, %r10031, 19;
	mov.b64 	%rd14667, {%r10033, %r10032};
	shf.l.wrap.b32 	%r10034, %r10030, %r10031, 3;
	shf.l.wrap.b32 	%r10035, %r10031, %r10030, 3;
	mov.b64 	%rd14668, {%r10035, %r10034};
	shr.u64 	%rd14669, %rd18627, 6;
	xor.b64  	%rd14670, %rd14667, %rd14669;
	xor.b64  	%rd14671, %rd14670, %rd14668;
	shr.u64 	%rd14672, %rd18624, 7;
	shf.r.wrap.b32 	%r10036, %r9877, %r9876, 1;
	shf.r.wrap.b32 	%r10037, %r9876, %r9877, 1;
	mov.b64 	%rd14673, {%r10037, %r10036};
	xor.b64  	%rd14674, %rd14673, %rd14672;
	shf.r.wrap.b32 	%r10038, %r9877, %r9876, 8;
	shf.r.wrap.b32 	%r10039, %r9876, %r9877, 8;
	mov.b64 	%rd14675, {%r10039, %r10038};
	xor.b64  	%rd14676, %rd14674, %rd14675;
	add.s64 	%rd14677, %rd18647, %rd18625;
	add.s64 	%rd14678, %rd14677, %rd14671;
	add.s64 	%rd18625, %rd14678, %rd14676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10040,%dummy}, %rd18626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10041}, %rd18626;
	}
	shf.r.wrap.b32 	%r10042, %r10041, %r10040, 19;
	shf.r.wrap.b32 	%r10043, %r10040, %r10041, 19;
	mov.b64 	%rd14679, {%r10043, %r10042};
	shf.l.wrap.b32 	%r10044, %r10040, %r10041, 3;
	shf.l.wrap.b32 	%r10045, %r10041, %r10040, 3;
	mov.b64 	%rd14680, {%r10045, %r10044};
	shr.u64 	%rd14681, %rd18626, 6;
	xor.b64  	%rd14682, %rd14679, %rd14681;
	xor.b64  	%rd14683, %rd14682, %rd14680;
	shf.r.wrap.b32 	%r10046, %r9889, %r9888, 1;
	shf.r.wrap.b32 	%r10047, %r9888, %r9889, 1;
	mov.b64 	%rd14684, {%r10047, %r10046};
	shf.r.wrap.b32 	%r10048, %r9889, %r9888, 8;
	shf.r.wrap.b32 	%r10049, %r9888, %r9889, 8;
	mov.b64 	%rd14685, {%r10049, %r10048};
	shr.u64 	%rd14686, %rd18640, 7;
	xor.b64  	%rd14687, %rd14684, %rd14686;
	xor.b64  	%rd14688, %rd14687, %rd14685;
	add.s64 	%rd14689, %rd18631, %rd18624;
	add.s64 	%rd14690, %rd14689, %rd14683;
	add.s64 	%rd18624, %rd14690, %rd14688;
	mul.wide.s32 	%rd14691, %r12685, 8;
	add.s64 	%rd14693, %rd18239, %rd14691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10050,%dummy}, %rd18636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10051}, %rd18636;
	}
	shf.r.wrap.b32 	%r10052, %r10051, %r10050, 18;
	shf.r.wrap.b32 	%r10053, %r10050, %r10051, 18;
	mov.b64 	%rd14694, {%r10053, %r10052};
	shf.r.wrap.b32 	%r10054, %r10051, %r10050, 14;
	shf.r.wrap.b32 	%r10055, %r10050, %r10051, 14;
	mov.b64 	%rd14695, {%r10055, %r10054};
	xor.b64  	%rd14696, %rd14694, %rd14695;
	shf.l.wrap.b32 	%r10056, %r10050, %r10051, 23;
	shf.l.wrap.b32 	%r10057, %r10051, %r10050, 23;
	mov.b64 	%rd14697, {%r10057, %r10056};
	xor.b64  	%rd14698, %rd14696, %rd14697;
	xor.b64  	%rd14699, %rd18638, %rd18637;
	and.b64  	%rd14700, %rd14699, %rd18636;
	xor.b64  	%rd14701, %rd14700, %rd18638;
	add.s64 	%rd14702, %rd14701, %rd18639;
	add.s64 	%rd14703, %rd14702, %rd18640;
	ld.const.u64 	%rd14704, [%rd14693];
	add.s64 	%rd14705, %rd14703, %rd14704;
	add.s64 	%rd14706, %rd14705, %rd14698;
	add.s64 	%rd14707, %rd14706, %rd18635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10058}, %rd18632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10059,%dummy}, %rd18632;
	}
	shf.l.wrap.b32 	%r10060, %r10059, %r10058, 30;
	shf.l.wrap.b32 	%r10061, %r10058, %r10059, 30;
	mov.b64 	%rd14708, {%r10061, %r10060};
	shf.r.wrap.b32 	%r10062, %r10058, %r10059, 28;
	shf.r.wrap.b32 	%r10063, %r10059, %r10058, 28;
	mov.b64 	%rd14709, {%r10063, %r10062};
	xor.b64  	%rd14710, %rd14708, %rd14709;
	shf.l.wrap.b32 	%r10064, %r10059, %r10058, 25;
	shf.l.wrap.b32 	%r10065, %r10058, %r10059, 25;
	mov.b64 	%rd14711, {%r10065, %r10064};
	xor.b64  	%rd14712, %rd14710, %rd14711;
	xor.b64  	%rd14713, %rd18633, %rd18632;
	and.b64  	%rd14714, %rd14713, %rd18634;
	and.b64  	%rd14715, %rd18633, %rd18632;
	or.b64  	%rd14716, %rd14714, %rd14715;
	add.s64 	%rd14717, %rd14706, %rd14716;
	add.s64 	%rd14718, %rd14717, %rd14712;
	add.s32 	%r10066, %r12685, 1;
	mul.wide.s32 	%rd14719, %r10066, 8;
	add.s64 	%rd14720, %rd18239, %rd14719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10067,%dummy}, %rd14707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10068}, %rd14707;
	}
	shf.r.wrap.b32 	%r10069, %r10068, %r10067, 14;
	shf.r.wrap.b32 	%r10070, %r10067, %r10068, 14;
	mov.b64 	%rd14721, {%r10070, %r10069};
	shf.r.wrap.b32 	%r10071, %r10068, %r10067, 18;
	shf.r.wrap.b32 	%r10072, %r10067, %r10068, 18;
	mov.b64 	%rd14722, {%r10072, %r10071};
	xor.b64  	%rd14723, %rd14722, %rd14721;
	shf.l.wrap.b32 	%r10073, %r10067, %r10068, 23;
	shf.l.wrap.b32 	%r10074, %r10068, %r10067, 23;
	mov.b64 	%rd14724, {%r10074, %r10073};
	xor.b64  	%rd14725, %rd14723, %rd14724;
	xor.b64  	%rd14726, %rd18637, %rd18636;
	and.b64  	%rd14727, %rd14707, %rd14726;
	xor.b64  	%rd14728, %rd14727, %rd18637;
	add.s64 	%rd14729, %rd18641, %rd18638;
	ld.const.u64 	%rd14730, [%rd14720];
	add.s64 	%rd14731, %rd14729, %rd14730;
	add.s64 	%rd14732, %rd14731, %rd14728;
	add.s64 	%rd14733, %rd14732, %rd14725;
	add.s64 	%rd14734, %rd14733, %rd18634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10075,%dummy}, %rd14718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10076}, %rd14718;
	}
	shf.r.wrap.b32 	%r10077, %r10076, %r10075, 28;
	shf.r.wrap.b32 	%r10078, %r10075, %r10076, 28;
	mov.b64 	%rd14735, {%r10078, %r10077};
	shf.l.wrap.b32 	%r10079, %r10075, %r10076, 30;
	shf.l.wrap.b32 	%r10080, %r10076, %r10075, 30;
	mov.b64 	%rd14736, {%r10080, %r10079};
	xor.b64  	%rd14737, %rd14736, %rd14735;
	shf.l.wrap.b32 	%r10081, %r10075, %r10076, 25;
	shf.l.wrap.b32 	%r10082, %r10076, %r10075, 25;
	mov.b64 	%rd14738, {%r10082, %r10081};
	xor.b64  	%rd14739, %rd14737, %rd14738;
	and.b64  	%rd14740, %rd14718, %rd18632;
	xor.b64  	%rd14741, %rd14718, %rd18632;
	and.b64  	%rd14742, %rd14741, %rd18633;
	or.b64  	%rd14743, %rd14742, %rd14740;
	add.s64 	%rd14744, %rd14733, %rd14743;
	add.s64 	%rd14745, %rd14744, %rd14739;
	add.s32 	%r10083, %r12685, 2;
	mul.wide.s32 	%rd14746, %r10083, 8;
	add.s64 	%rd14747, %rd18239, %rd14746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10084,%dummy}, %rd14734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10085}, %rd14734;
	}
	shf.r.wrap.b32 	%r10086, %r10085, %r10084, 14;
	shf.r.wrap.b32 	%r10087, %r10084, %r10085, 14;
	mov.b64 	%rd14748, {%r10087, %r10086};
	shf.r.wrap.b32 	%r10088, %r10085, %r10084, 18;
	shf.r.wrap.b32 	%r10089, %r10084, %r10085, 18;
	mov.b64 	%rd14749, {%r10089, %r10088};
	xor.b64  	%rd14750, %rd14749, %rd14748;
	shf.l.wrap.b32 	%r10090, %r10084, %r10085, 23;
	shf.l.wrap.b32 	%r10091, %r10085, %r10084, 23;
	mov.b64 	%rd14751, {%r10091, %r10090};
	xor.b64  	%rd14752, %rd14750, %rd14751;
	xor.b64  	%rd14753, %rd14707, %rd18636;
	and.b64  	%rd14754, %rd14734, %rd14753;
	xor.b64  	%rd14755, %rd14754, %rd18636;
	add.s64 	%rd14756, %rd18642, %rd18637;
	ld.const.u64 	%rd14757, [%rd14747];
	add.s64 	%rd14758, %rd14756, %rd14757;
	add.s64 	%rd14759, %rd14758, %rd14755;
	add.s64 	%rd14760, %rd14759, %rd14752;
	add.s64 	%rd14761, %rd14760, %rd18633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10092,%dummy}, %rd14745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10093}, %rd14745;
	}
	shf.r.wrap.b32 	%r10094, %r10093, %r10092, 28;
	shf.r.wrap.b32 	%r10095, %r10092, %r10093, 28;
	mov.b64 	%rd14762, {%r10095, %r10094};
	shf.l.wrap.b32 	%r10096, %r10092, %r10093, 30;
	shf.l.wrap.b32 	%r10097, %r10093, %r10092, 30;
	mov.b64 	%rd14763, {%r10097, %r10096};
	xor.b64  	%rd14764, %rd14763, %rd14762;
	shf.l.wrap.b32 	%r10098, %r10092, %r10093, 25;
	shf.l.wrap.b32 	%r10099, %r10093, %r10092, 25;
	mov.b64 	%rd14765, {%r10099, %r10098};
	xor.b64  	%rd14766, %rd14764, %rd14765;
	and.b64  	%rd14767, %rd14745, %rd14718;
	xor.b64  	%rd14768, %rd14745, %rd14718;
	and.b64  	%rd14769, %rd14768, %rd18632;
	or.b64  	%rd14770, %rd14769, %rd14767;
	add.s64 	%rd14771, %rd14760, %rd14770;
	add.s64 	%rd14772, %rd14771, %rd14766;
	add.s32 	%r10100, %r12685, 3;
	mul.wide.s32 	%rd14773, %r10100, 8;
	add.s64 	%rd14774, %rd18239, %rd14773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10101,%dummy}, %rd14761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10102}, %rd14761;
	}
	shf.r.wrap.b32 	%r10103, %r10102, %r10101, 14;
	shf.r.wrap.b32 	%r10104, %r10101, %r10102, 14;
	mov.b64 	%rd14775, {%r10104, %r10103};
	shf.r.wrap.b32 	%r10105, %r10102, %r10101, 18;
	shf.r.wrap.b32 	%r10106, %r10101, %r10102, 18;
	mov.b64 	%rd14776, {%r10106, %r10105};
	xor.b64  	%rd14777, %rd14776, %rd14775;
	shf.l.wrap.b32 	%r10107, %r10101, %r10102, 23;
	shf.l.wrap.b32 	%r10108, %r10102, %r10101, 23;
	mov.b64 	%rd14778, {%r10108, %r10107};
	xor.b64  	%rd14779, %rd14777, %rd14778;
	xor.b64  	%rd14780, %rd14734, %rd14707;
	and.b64  	%rd14781, %rd14761, %rd14780;
	xor.b64  	%rd14782, %rd14781, %rd14707;
	add.s64 	%rd14783, %rd18643, %rd18636;
	ld.const.u64 	%rd14784, [%rd14774];
	add.s64 	%rd14785, %rd14783, %rd14784;
	add.s64 	%rd14786, %rd14785, %rd14782;
	add.s64 	%rd14787, %rd14786, %rd14779;
	add.s64 	%rd14788, %rd14787, %rd18632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10109,%dummy}, %rd14772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10110}, %rd14772;
	}
	shf.r.wrap.b32 	%r10111, %r10110, %r10109, 28;
	shf.r.wrap.b32 	%r10112, %r10109, %r10110, 28;
	mov.b64 	%rd14789, {%r10112, %r10111};
	shf.l.wrap.b32 	%r10113, %r10109, %r10110, 30;
	shf.l.wrap.b32 	%r10114, %r10110, %r10109, 30;
	mov.b64 	%rd14790, {%r10114, %r10113};
	xor.b64  	%rd14791, %rd14790, %rd14789;
	shf.l.wrap.b32 	%r10115, %r10109, %r10110, 25;
	shf.l.wrap.b32 	%r10116, %r10110, %r10109, 25;
	mov.b64 	%rd14792, {%r10116, %r10115};
	xor.b64  	%rd14793, %rd14791, %rd14792;
	and.b64  	%rd14794, %rd14772, %rd14745;
	xor.b64  	%rd14795, %rd14772, %rd14745;
	and.b64  	%rd14796, %rd14795, %rd14718;
	or.b64  	%rd14797, %rd14796, %rd14794;
	add.s64 	%rd14798, %rd14787, %rd14797;
	add.s64 	%rd14799, %rd14798, %rd14793;
	add.s32 	%r10117, %r12685, 4;
	mul.wide.s32 	%rd14800, %r10117, 8;
	add.s64 	%rd14801, %rd18239, %rd14800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10118,%dummy}, %rd14788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10119}, %rd14788;
	}
	shf.r.wrap.b32 	%r10120, %r10119, %r10118, 14;
	shf.r.wrap.b32 	%r10121, %r10118, %r10119, 14;
	mov.b64 	%rd14802, {%r10121, %r10120};
	shf.r.wrap.b32 	%r10122, %r10119, %r10118, 18;
	shf.r.wrap.b32 	%r10123, %r10118, %r10119, 18;
	mov.b64 	%rd14803, {%r10123, %r10122};
	xor.b64  	%rd14804, %rd14803, %rd14802;
	shf.l.wrap.b32 	%r10124, %r10118, %r10119, 23;
	shf.l.wrap.b32 	%r10125, %r10119, %r10118, 23;
	mov.b64 	%rd14805, {%r10125, %r10124};
	xor.b64  	%rd14806, %rd14804, %rd14805;
	xor.b64  	%rd14807, %rd14761, %rd14734;
	and.b64  	%rd14808, %rd14788, %rd14807;
	xor.b64  	%rd14809, %rd14808, %rd14734;
	add.s64 	%rd14810, %rd14707, %rd18644;
	ld.const.u64 	%rd14811, [%rd14801];
	add.s64 	%rd14812, %rd14810, %rd14811;
	add.s64 	%rd14813, %rd14812, %rd14809;
	add.s64 	%rd14814, %rd14813, %rd14806;
	add.s64 	%rd14815, %rd14814, %rd14718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10126,%dummy}, %rd14799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10127}, %rd14799;
	}
	shf.r.wrap.b32 	%r10128, %r10127, %r10126, 28;
	shf.r.wrap.b32 	%r10129, %r10126, %r10127, 28;
	mov.b64 	%rd14816, {%r10129, %r10128};
	shf.l.wrap.b32 	%r10130, %r10126, %r10127, 30;
	shf.l.wrap.b32 	%r10131, %r10127, %r10126, 30;
	mov.b64 	%rd14817, {%r10131, %r10130};
	xor.b64  	%rd14818, %rd14817, %rd14816;
	shf.l.wrap.b32 	%r10132, %r10126, %r10127, 25;
	shf.l.wrap.b32 	%r10133, %r10127, %r10126, 25;
	mov.b64 	%rd14819, {%r10133, %r10132};
	xor.b64  	%rd14820, %rd14818, %rd14819;
	and.b64  	%rd14821, %rd14799, %rd14772;
	xor.b64  	%rd14822, %rd14799, %rd14772;
	and.b64  	%rd14823, %rd14822, %rd14745;
	or.b64  	%rd14824, %rd14823, %rd14821;
	add.s64 	%rd14825, %rd14814, %rd14824;
	add.s64 	%rd14826, %rd14825, %rd14820;
	add.s32 	%r10134, %r12685, 5;
	mul.wide.s32 	%rd14827, %r10134, 8;
	add.s64 	%rd14828, %rd18239, %rd14827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10135,%dummy}, %rd14815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10136}, %rd14815;
	}
	shf.r.wrap.b32 	%r10137, %r10136, %r10135, 14;
	shf.r.wrap.b32 	%r10138, %r10135, %r10136, 14;
	mov.b64 	%rd14829, {%r10138, %r10137};
	shf.r.wrap.b32 	%r10139, %r10136, %r10135, 18;
	shf.r.wrap.b32 	%r10140, %r10135, %r10136, 18;
	mov.b64 	%rd14830, {%r10140, %r10139};
	xor.b64  	%rd14831, %rd14830, %rd14829;
	shf.l.wrap.b32 	%r10141, %r10135, %r10136, 23;
	shf.l.wrap.b32 	%r10142, %r10136, %r10135, 23;
	mov.b64 	%rd14832, {%r10142, %r10141};
	xor.b64  	%rd14833, %rd14831, %rd14832;
	xor.b64  	%rd14834, %rd14788, %rd14761;
	and.b64  	%rd14835, %rd14815, %rd14834;
	xor.b64  	%rd14836, %rd14835, %rd14761;
	add.s64 	%rd14837, %rd14734, %rd18645;
	ld.const.u64 	%rd14838, [%rd14828];
	add.s64 	%rd14839, %rd14837, %rd14838;
	add.s64 	%rd14840, %rd14839, %rd14836;
	add.s64 	%rd14841, %rd14840, %rd14833;
	add.s64 	%rd14842, %rd14841, %rd14745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10143,%dummy}, %rd14826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10144}, %rd14826;
	}
	shf.r.wrap.b32 	%r10145, %r10144, %r10143, 28;
	shf.r.wrap.b32 	%r10146, %r10143, %r10144, 28;
	mov.b64 	%rd14843, {%r10146, %r10145};
	shf.l.wrap.b32 	%r10147, %r10143, %r10144, 30;
	shf.l.wrap.b32 	%r10148, %r10144, %r10143, 30;
	mov.b64 	%rd14844, {%r10148, %r10147};
	xor.b64  	%rd14845, %rd14844, %rd14843;
	shf.l.wrap.b32 	%r10149, %r10143, %r10144, 25;
	shf.l.wrap.b32 	%r10150, %r10144, %r10143, 25;
	mov.b64 	%rd14846, {%r10150, %r10149};
	xor.b64  	%rd14847, %rd14845, %rd14846;
	and.b64  	%rd14848, %rd14826, %rd14799;
	xor.b64  	%rd14849, %rd14826, %rd14799;
	and.b64  	%rd14850, %rd14849, %rd14772;
	or.b64  	%rd14851, %rd14850, %rd14848;
	add.s64 	%rd14852, %rd14841, %rd14851;
	add.s64 	%rd14853, %rd14852, %rd14847;
	add.s32 	%r10151, %r12685, 6;
	mul.wide.s32 	%rd14854, %r10151, 8;
	add.s64 	%rd14855, %rd18239, %rd14854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10152,%dummy}, %rd14842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10153}, %rd14842;
	}
	shf.r.wrap.b32 	%r10154, %r10153, %r10152, 14;
	shf.r.wrap.b32 	%r10155, %r10152, %r10153, 14;
	mov.b64 	%rd14856, {%r10155, %r10154};
	shf.r.wrap.b32 	%r10156, %r10153, %r10152, 18;
	shf.r.wrap.b32 	%r10157, %r10152, %r10153, 18;
	mov.b64 	%rd14857, {%r10157, %r10156};
	xor.b64  	%rd14858, %rd14857, %rd14856;
	shf.l.wrap.b32 	%r10158, %r10152, %r10153, 23;
	shf.l.wrap.b32 	%r10159, %r10153, %r10152, 23;
	mov.b64 	%rd14859, {%r10159, %r10158};
	xor.b64  	%rd14860, %rd14858, %rd14859;
	xor.b64  	%rd14861, %rd14815, %rd14788;
	and.b64  	%rd14862, %rd14842, %rd14861;
	xor.b64  	%rd14863, %rd14862, %rd14788;
	add.s64 	%rd14864, %rd14761, %rd18646;
	ld.const.u64 	%rd14865, [%rd14855];
	add.s64 	%rd14866, %rd14864, %rd14865;
	add.s64 	%rd14867, %rd14866, %rd14863;
	add.s64 	%rd14868, %rd14867, %rd14860;
	add.s64 	%rd14869, %rd14868, %rd14772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10160,%dummy}, %rd14853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10161}, %rd14853;
	}
	shf.r.wrap.b32 	%r10162, %r10161, %r10160, 28;
	shf.r.wrap.b32 	%r10163, %r10160, %r10161, 28;
	mov.b64 	%rd14870, {%r10163, %r10162};
	shf.l.wrap.b32 	%r10164, %r10160, %r10161, 30;
	shf.l.wrap.b32 	%r10165, %r10161, %r10160, 30;
	mov.b64 	%rd14871, {%r10165, %r10164};
	xor.b64  	%rd14872, %rd14871, %rd14870;
	shf.l.wrap.b32 	%r10166, %r10160, %r10161, 25;
	shf.l.wrap.b32 	%r10167, %r10161, %r10160, 25;
	mov.b64 	%rd14873, {%r10167, %r10166};
	xor.b64  	%rd14874, %rd14872, %rd14873;
	and.b64  	%rd14875, %rd14853, %rd14826;
	xor.b64  	%rd14876, %rd14853, %rd14826;
	and.b64  	%rd14877, %rd14876, %rd14799;
	or.b64  	%rd14878, %rd14877, %rd14875;
	add.s64 	%rd14879, %rd14868, %rd14878;
	add.s64 	%rd14880, %rd14879, %rd14874;
	add.s32 	%r10168, %r12685, 7;
	mul.wide.s32 	%rd14881, %r10168, 8;
	add.s64 	%rd14882, %rd18239, %rd14881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10169,%dummy}, %rd14869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10170}, %rd14869;
	}
	shf.r.wrap.b32 	%r10171, %r10170, %r10169, 14;
	shf.r.wrap.b32 	%r10172, %r10169, %r10170, 14;
	mov.b64 	%rd14883, {%r10172, %r10171};
	shf.r.wrap.b32 	%r10173, %r10170, %r10169, 18;
	shf.r.wrap.b32 	%r10174, %r10169, %r10170, 18;
	mov.b64 	%rd14884, {%r10174, %r10173};
	xor.b64  	%rd14885, %rd14884, %rd14883;
	shf.l.wrap.b32 	%r10175, %r10169, %r10170, 23;
	shf.l.wrap.b32 	%r10176, %r10170, %r10169, 23;
	mov.b64 	%rd14886, {%r10176, %r10175};
	xor.b64  	%rd14887, %rd14885, %rd14886;
	xor.b64  	%rd14888, %rd14842, %rd14815;
	and.b64  	%rd14889, %rd14869, %rd14888;
	xor.b64  	%rd14890, %rd14889, %rd14815;
	add.s64 	%rd14891, %rd14788, %rd18647;
	ld.const.u64 	%rd14892, [%rd14882];
	add.s64 	%rd14893, %rd14891, %rd14892;
	add.s64 	%rd14894, %rd14893, %rd14890;
	add.s64 	%rd14895, %rd14894, %rd14887;
	add.s64 	%rd14896, %rd14895, %rd14799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10177,%dummy}, %rd14880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10178}, %rd14880;
	}
	shf.r.wrap.b32 	%r10179, %r10178, %r10177, 28;
	shf.r.wrap.b32 	%r10180, %r10177, %r10178, 28;
	mov.b64 	%rd14897, {%r10180, %r10179};
	shf.l.wrap.b32 	%r10181, %r10177, %r10178, 30;
	shf.l.wrap.b32 	%r10182, %r10178, %r10177, 30;
	mov.b64 	%rd14898, {%r10182, %r10181};
	xor.b64  	%rd14899, %rd14898, %rd14897;
	shf.l.wrap.b32 	%r10183, %r10177, %r10178, 25;
	shf.l.wrap.b32 	%r10184, %r10178, %r10177, 25;
	mov.b64 	%rd14900, {%r10184, %r10183};
	xor.b64  	%rd14901, %rd14899, %rd14900;
	and.b64  	%rd14902, %rd14880, %rd14853;
	xor.b64  	%rd14903, %rd14880, %rd14853;
	and.b64  	%rd14904, %rd14903, %rd14826;
	or.b64  	%rd14905, %rd14904, %rd14902;
	add.s64 	%rd14906, %rd14895, %rd14905;
	add.s64 	%rd14907, %rd14906, %rd14901;
	add.s32 	%r10185, %r12685, 8;
	mul.wide.s32 	%rd14908, %r10185, 8;
	add.s64 	%rd14909, %rd18239, %rd14908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10186,%dummy}, %rd14896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10187}, %rd14896;
	}
	shf.r.wrap.b32 	%r10188, %r10187, %r10186, 14;
	shf.r.wrap.b32 	%r10189, %r10186, %r10187, 14;
	mov.b64 	%rd14910, {%r10189, %r10188};
	shf.r.wrap.b32 	%r10190, %r10187, %r10186, 18;
	shf.r.wrap.b32 	%r10191, %r10186, %r10187, 18;
	mov.b64 	%rd14911, {%r10191, %r10190};
	xor.b64  	%rd14912, %rd14911, %rd14910;
	shf.l.wrap.b32 	%r10192, %r10186, %r10187, 23;
	shf.l.wrap.b32 	%r10193, %r10187, %r10186, 23;
	mov.b64 	%rd14913, {%r10193, %r10192};
	xor.b64  	%rd14914, %rd14912, %rd14913;
	xor.b64  	%rd14915, %rd14869, %rd14842;
	and.b64  	%rd14916, %rd14896, %rd14915;
	xor.b64  	%rd14917, %rd14916, %rd14842;
	add.s64 	%rd14918, %rd14815, %rd18631;
	ld.const.u64 	%rd14919, [%rd14909];
	add.s64 	%rd14920, %rd14918, %rd14919;
	add.s64 	%rd14921, %rd14920, %rd14917;
	add.s64 	%rd14922, %rd14921, %rd14914;
	add.s64 	%rd14923, %rd14922, %rd14826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10194,%dummy}, %rd14907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10195}, %rd14907;
	}
	shf.r.wrap.b32 	%r10196, %r10195, %r10194, 28;
	shf.r.wrap.b32 	%r10197, %r10194, %r10195, 28;
	mov.b64 	%rd14924, {%r10197, %r10196};
	shf.l.wrap.b32 	%r10198, %r10194, %r10195, 30;
	shf.l.wrap.b32 	%r10199, %r10195, %r10194, 30;
	mov.b64 	%rd14925, {%r10199, %r10198};
	xor.b64  	%rd14926, %rd14925, %rd14924;
	shf.l.wrap.b32 	%r10200, %r10194, %r10195, 25;
	shf.l.wrap.b32 	%r10201, %r10195, %r10194, 25;
	mov.b64 	%rd14927, {%r10201, %r10200};
	xor.b64  	%rd14928, %rd14926, %rd14927;
	and.b64  	%rd14929, %rd14907, %rd14880;
	xor.b64  	%rd14930, %rd14907, %rd14880;
	and.b64  	%rd14931, %rd14930, %rd14853;
	or.b64  	%rd14932, %rd14931, %rd14929;
	add.s64 	%rd14933, %rd14922, %rd14932;
	add.s64 	%rd14934, %rd14933, %rd14928;
	add.s32 	%r10202, %r12685, 9;
	mul.wide.s32 	%rd14935, %r10202, 8;
	add.s64 	%rd14936, %rd18239, %rd14935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10203,%dummy}, %rd14923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10204}, %rd14923;
	}
	shf.r.wrap.b32 	%r10205, %r10204, %r10203, 14;
	shf.r.wrap.b32 	%r10206, %r10203, %r10204, 14;
	mov.b64 	%rd14937, {%r10206, %r10205};
	shf.r.wrap.b32 	%r10207, %r10204, %r10203, 18;
	shf.r.wrap.b32 	%r10208, %r10203, %r10204, 18;
	mov.b64 	%rd14938, {%r10208, %r10207};
	xor.b64  	%rd14939, %rd14938, %rd14937;
	shf.l.wrap.b32 	%r10209, %r10203, %r10204, 23;
	shf.l.wrap.b32 	%r10210, %r10204, %r10203, 23;
	mov.b64 	%rd14940, {%r10210, %r10209};
	xor.b64  	%rd14941, %rd14939, %rd14940;
	xor.b64  	%rd14942, %rd14896, %rd14869;
	and.b64  	%rd14943, %rd14923, %rd14942;
	xor.b64  	%rd14944, %rd14943, %rd14869;
	add.s64 	%rd14945, %rd14842, %rd18630;
	ld.const.u64 	%rd14946, [%rd14936];
	add.s64 	%rd14947, %rd14945, %rd14946;
	add.s64 	%rd14948, %rd14947, %rd14944;
	add.s64 	%rd14949, %rd14948, %rd14941;
	add.s64 	%rd14950, %rd14949, %rd14853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10211,%dummy}, %rd14934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10212}, %rd14934;
	}
	shf.r.wrap.b32 	%r10213, %r10212, %r10211, 28;
	shf.r.wrap.b32 	%r10214, %r10211, %r10212, 28;
	mov.b64 	%rd14951, {%r10214, %r10213};
	shf.l.wrap.b32 	%r10215, %r10211, %r10212, 30;
	shf.l.wrap.b32 	%r10216, %r10212, %r10211, 30;
	mov.b64 	%rd14952, {%r10216, %r10215};
	xor.b64  	%rd14953, %rd14952, %rd14951;
	shf.l.wrap.b32 	%r10217, %r10211, %r10212, 25;
	shf.l.wrap.b32 	%r10218, %r10212, %r10211, 25;
	mov.b64 	%rd14954, {%r10218, %r10217};
	xor.b64  	%rd14955, %rd14953, %rd14954;
	and.b64  	%rd14956, %rd14934, %rd14907;
	xor.b64  	%rd14957, %rd14934, %rd14907;
	and.b64  	%rd14958, %rd14957, %rd14880;
	or.b64  	%rd14959, %rd14958, %rd14956;
	add.s64 	%rd14960, %rd14949, %rd14959;
	add.s64 	%rd14961, %rd14960, %rd14955;
	add.s32 	%r10219, %r12685, 10;
	mul.wide.s32 	%rd14962, %r10219, 8;
	add.s64 	%rd14963, %rd18239, %rd14962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10220,%dummy}, %rd14950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10221}, %rd14950;
	}
	shf.r.wrap.b32 	%r10222, %r10221, %r10220, 14;
	shf.r.wrap.b32 	%r10223, %r10220, %r10221, 14;
	mov.b64 	%rd14964, {%r10223, %r10222};
	shf.r.wrap.b32 	%r10224, %r10221, %r10220, 18;
	shf.r.wrap.b32 	%r10225, %r10220, %r10221, 18;
	mov.b64 	%rd14965, {%r10225, %r10224};
	xor.b64  	%rd14966, %rd14965, %rd14964;
	shf.l.wrap.b32 	%r10226, %r10220, %r10221, 23;
	shf.l.wrap.b32 	%r10227, %r10221, %r10220, 23;
	mov.b64 	%rd14967, {%r10227, %r10226};
	xor.b64  	%rd14968, %rd14966, %rd14967;
	xor.b64  	%rd14969, %rd14923, %rd14896;
	and.b64  	%rd14970, %rd14950, %rd14969;
	xor.b64  	%rd14971, %rd14970, %rd14896;
	add.s64 	%rd14972, %rd14869, %rd18629;
	ld.const.u64 	%rd14973, [%rd14963];
	add.s64 	%rd14974, %rd14972, %rd14973;
	add.s64 	%rd14975, %rd14974, %rd14971;
	add.s64 	%rd14976, %rd14975, %rd14968;
	add.s64 	%rd14977, %rd14976, %rd14880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10228,%dummy}, %rd14961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10229}, %rd14961;
	}
	shf.r.wrap.b32 	%r10230, %r10229, %r10228, 28;
	shf.r.wrap.b32 	%r10231, %r10228, %r10229, 28;
	mov.b64 	%rd14978, {%r10231, %r10230};
	shf.l.wrap.b32 	%r10232, %r10228, %r10229, 30;
	shf.l.wrap.b32 	%r10233, %r10229, %r10228, 30;
	mov.b64 	%rd14979, {%r10233, %r10232};
	xor.b64  	%rd14980, %rd14979, %rd14978;
	shf.l.wrap.b32 	%r10234, %r10228, %r10229, 25;
	shf.l.wrap.b32 	%r10235, %r10229, %r10228, 25;
	mov.b64 	%rd14981, {%r10235, %r10234};
	xor.b64  	%rd14982, %rd14980, %rd14981;
	and.b64  	%rd14983, %rd14961, %rd14934;
	xor.b64  	%rd14984, %rd14961, %rd14934;
	and.b64  	%rd14985, %rd14984, %rd14907;
	or.b64  	%rd14986, %rd14985, %rd14983;
	add.s64 	%rd14987, %rd14976, %rd14986;
	add.s64 	%rd14988, %rd14987, %rd14982;
	add.s32 	%r10236, %r12685, 11;
	mul.wide.s32 	%rd14989, %r10236, 8;
	add.s64 	%rd14990, %rd18239, %rd14989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10237,%dummy}, %rd14977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10238}, %rd14977;
	}
	shf.r.wrap.b32 	%r10239, %r10238, %r10237, 14;
	shf.r.wrap.b32 	%r10240, %r10237, %r10238, 14;
	mov.b64 	%rd14991, {%r10240, %r10239};
	shf.r.wrap.b32 	%r10241, %r10238, %r10237, 18;
	shf.r.wrap.b32 	%r10242, %r10237, %r10238, 18;
	mov.b64 	%rd14992, {%r10242, %r10241};
	xor.b64  	%rd14993, %rd14992, %rd14991;
	shf.l.wrap.b32 	%r10243, %r10237, %r10238, 23;
	shf.l.wrap.b32 	%r10244, %r10238, %r10237, 23;
	mov.b64 	%rd14994, {%r10244, %r10243};
	xor.b64  	%rd14995, %rd14993, %rd14994;
	xor.b64  	%rd14996, %rd14950, %rd14923;
	and.b64  	%rd14997, %rd14977, %rd14996;
	xor.b64  	%rd14998, %rd14997, %rd14923;
	add.s64 	%rd14999, %rd14896, %rd18628;
	ld.const.u64 	%rd15000, [%rd14990];
	add.s64 	%rd15001, %rd14999, %rd15000;
	add.s64 	%rd15002, %rd15001, %rd14998;
	add.s64 	%rd15003, %rd15002, %rd14995;
	add.s64 	%rd15004, %rd15003, %rd14907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10245,%dummy}, %rd14988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10246}, %rd14988;
	}
	shf.r.wrap.b32 	%r10247, %r10246, %r10245, 28;
	shf.r.wrap.b32 	%r10248, %r10245, %r10246, 28;
	mov.b64 	%rd15005, {%r10248, %r10247};
	shf.l.wrap.b32 	%r10249, %r10245, %r10246, 30;
	shf.l.wrap.b32 	%r10250, %r10246, %r10245, 30;
	mov.b64 	%rd15006, {%r10250, %r10249};
	xor.b64  	%rd15007, %rd15006, %rd15005;
	shf.l.wrap.b32 	%r10251, %r10245, %r10246, 25;
	shf.l.wrap.b32 	%r10252, %r10246, %r10245, 25;
	mov.b64 	%rd15008, {%r10252, %r10251};
	xor.b64  	%rd15009, %rd15007, %rd15008;
	and.b64  	%rd15010, %rd14988, %rd14961;
	xor.b64  	%rd15011, %rd14988, %rd14961;
	and.b64  	%rd15012, %rd15011, %rd14934;
	or.b64  	%rd15013, %rd15012, %rd15010;
	add.s64 	%rd15014, %rd15003, %rd15013;
	add.s64 	%rd15015, %rd15014, %rd15009;
	add.s32 	%r10253, %r12685, 12;
	mul.wide.s32 	%rd15016, %r10253, 8;
	add.s64 	%rd15017, %rd18239, %rd15016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10254,%dummy}, %rd15004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10255}, %rd15004;
	}
	shf.r.wrap.b32 	%r10256, %r10255, %r10254, 14;
	shf.r.wrap.b32 	%r10257, %r10254, %r10255, 14;
	mov.b64 	%rd15018, {%r10257, %r10256};
	shf.r.wrap.b32 	%r10258, %r10255, %r10254, 18;
	shf.r.wrap.b32 	%r10259, %r10254, %r10255, 18;
	mov.b64 	%rd15019, {%r10259, %r10258};
	xor.b64  	%rd15020, %rd15019, %rd15018;
	shf.l.wrap.b32 	%r10260, %r10254, %r10255, 23;
	shf.l.wrap.b32 	%r10261, %r10255, %r10254, 23;
	mov.b64 	%rd15021, {%r10261, %r10260};
	xor.b64  	%rd15022, %rd15020, %rd15021;
	xor.b64  	%rd15023, %rd14977, %rd14950;
	and.b64  	%rd15024, %rd15004, %rd15023;
	xor.b64  	%rd15025, %rd15024, %rd14950;
	add.s64 	%rd15026, %rd14923, %rd18627;
	ld.const.u64 	%rd15027, [%rd15017];
	add.s64 	%rd15028, %rd15026, %rd15027;
	add.s64 	%rd15029, %rd15028, %rd15025;
	add.s64 	%rd15030, %rd15029, %rd15022;
	add.s64 	%rd18639, %rd15030, %rd14934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10262,%dummy}, %rd15015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10263}, %rd15015;
	}
	shf.r.wrap.b32 	%r10264, %r10263, %r10262, 28;
	shf.r.wrap.b32 	%r10265, %r10262, %r10263, 28;
	mov.b64 	%rd15031, {%r10265, %r10264};
	shf.l.wrap.b32 	%r10266, %r10262, %r10263, 30;
	shf.l.wrap.b32 	%r10267, %r10263, %r10262, 30;
	mov.b64 	%rd15032, {%r10267, %r10266};
	xor.b64  	%rd15033, %rd15032, %rd15031;
	shf.l.wrap.b32 	%r10268, %r10262, %r10263, 25;
	shf.l.wrap.b32 	%r10269, %r10263, %r10262, 25;
	mov.b64 	%rd15034, {%r10269, %r10268};
	xor.b64  	%rd15035, %rd15033, %rd15034;
	and.b64  	%rd15036, %rd15015, %rd14988;
	xor.b64  	%rd15037, %rd15015, %rd14988;
	and.b64  	%rd15038, %rd15037, %rd14961;
	or.b64  	%rd15039, %rd15038, %rd15036;
	add.s64 	%rd15040, %rd15030, %rd15039;
	add.s64 	%rd18635, %rd15040, %rd15035;
	add.s32 	%r10270, %r12685, 13;
	mul.wide.s32 	%rd15041, %r10270, 8;
	add.s64 	%rd15042, %rd18239, %rd15041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd18639;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 14;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 14;
	mov.b64 	%rd15043, {%r10274, %r10273};
	shf.r.wrap.b32 	%r10275, %r10272, %r10271, 18;
	shf.r.wrap.b32 	%r10276, %r10271, %r10272, 18;
	mov.b64 	%rd15044, {%r10276, %r10275};
	xor.b64  	%rd15045, %rd15044, %rd15043;
	shf.l.wrap.b32 	%r10277, %r10271, %r10272, 23;
	shf.l.wrap.b32 	%r10278, %r10272, %r10271, 23;
	mov.b64 	%rd15046, {%r10278, %r10277};
	xor.b64  	%rd15047, %rd15045, %rd15046;
	xor.b64  	%rd15048, %rd15004, %rd14977;
	and.b64  	%rd15049, %rd18639, %rd15048;
	xor.b64  	%rd15050, %rd15049, %rd14977;
	add.s64 	%rd15051, %rd14950, %rd18626;
	ld.const.u64 	%rd15052, [%rd15042];
	add.s64 	%rd15053, %rd15051, %rd15052;
	add.s64 	%rd15054, %rd15053, %rd15050;
	add.s64 	%rd15055, %rd15054, %rd15047;
	add.s64 	%rd18638, %rd15055, %rd14961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd18635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd18635;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 28;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 28;
	mov.b64 	%rd15056, {%r10282, %r10281};
	shf.l.wrap.b32 	%r10283, %r10279, %r10280, 30;
	shf.l.wrap.b32 	%r10284, %r10280, %r10279, 30;
	mov.b64 	%rd15057, {%r10284, %r10283};
	xor.b64  	%rd15058, %rd15057, %rd15056;
	shf.l.wrap.b32 	%r10285, %r10279, %r10280, 25;
	shf.l.wrap.b32 	%r10286, %r10280, %r10279, 25;
	mov.b64 	%rd15059, {%r10286, %r10285};
	xor.b64  	%rd15060, %rd15058, %rd15059;
	and.b64  	%rd15061, %rd18635, %rd15015;
	xor.b64  	%rd15062, %rd18635, %rd15015;
	and.b64  	%rd15063, %rd15062, %rd14988;
	or.b64  	%rd15064, %rd15063, %rd15061;
	add.s64 	%rd15065, %rd15055, %rd15064;
	add.s64 	%rd18634, %rd15065, %rd15060;
	add.s32 	%r10287, %r12685, 14;
	mul.wide.s32 	%rd15066, %r10287, 8;
	add.s64 	%rd15067, %rd18239, %rd15066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10288,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10289}, %rd18638;
	}
	shf.r.wrap.b32 	%r10290, %r10289, %r10288, 14;
	shf.r.wrap.b32 	%r10291, %r10288, %r10289, 14;
	mov.b64 	%rd15068, {%r10291, %r10290};
	shf.r.wrap.b32 	%r10292, %r10289, %r10288, 18;
	shf.r.wrap.b32 	%r10293, %r10288, %r10289, 18;
	mov.b64 	%rd15069, {%r10293, %r10292};
	xor.b64  	%rd15070, %rd15069, %rd15068;
	shf.l.wrap.b32 	%r10294, %r10288, %r10289, 23;
	shf.l.wrap.b32 	%r10295, %r10289, %r10288, 23;
	mov.b64 	%rd15071, {%r10295, %r10294};
	xor.b64  	%rd15072, %rd15070, %rd15071;
	xor.b64  	%rd15073, %rd18639, %rd15004;
	and.b64  	%rd15074, %rd18638, %rd15073;
	xor.b64  	%rd15075, %rd15074, %rd15004;
	add.s64 	%rd15076, %rd14977, %rd18625;
	ld.const.u64 	%rd15077, [%rd15067];
	add.s64 	%rd15078, %rd15076, %rd15077;
	add.s64 	%rd15079, %rd15078, %rd15075;
	add.s64 	%rd15080, %rd15079, %rd15072;
	add.s64 	%rd18637, %rd15080, %rd14988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10296,%dummy}, %rd18634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10297}, %rd18634;
	}
	shf.r.wrap.b32 	%r10298, %r10297, %r10296, 28;
	shf.r.wrap.b32 	%r10299, %r10296, %r10297, 28;
	mov.b64 	%rd15081, {%r10299, %r10298};
	shf.l.wrap.b32 	%r10300, %r10296, %r10297, 30;
	shf.l.wrap.b32 	%r10301, %r10297, %r10296, 30;
	mov.b64 	%rd15082, {%r10301, %r10300};
	xor.b64  	%rd15083, %rd15082, %rd15081;
	shf.l.wrap.b32 	%r10302, %r10296, %r10297, 25;
	shf.l.wrap.b32 	%r10303, %r10297, %r10296, 25;
	mov.b64 	%rd15084, {%r10303, %r10302};
	xor.b64  	%rd15085, %rd15083, %rd15084;
	and.b64  	%rd15086, %rd18634, %rd18635;
	xor.b64  	%rd15087, %rd18634, %rd18635;
	and.b64  	%rd15088, %rd15087, %rd15015;
	or.b64  	%rd15089, %rd15088, %rd15086;
	add.s64 	%rd15090, %rd15080, %rd15089;
	add.s64 	%rd18633, %rd15090, %rd15085;
	add.s32 	%r10304, %r12685, 15;
	mul.wide.s32 	%rd15091, %r10304, 8;
	add.s64 	%rd15092, %rd18239, %rd15091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10305,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10306}, %rd18637;
	}
	shf.r.wrap.b32 	%r10307, %r10306, %r10305, 14;
	shf.r.wrap.b32 	%r10308, %r10305, %r10306, 14;
	mov.b64 	%rd15093, {%r10308, %r10307};
	shf.r.wrap.b32 	%r10309, %r10306, %r10305, 18;
	shf.r.wrap.b32 	%r10310, %r10305, %r10306, 18;
	mov.b64 	%rd15094, {%r10310, %r10309};
	xor.b64  	%rd15095, %rd15094, %rd15093;
	shf.l.wrap.b32 	%r10311, %r10305, %r10306, 23;
	shf.l.wrap.b32 	%r10312, %r10306, %r10305, 23;
	mov.b64 	%rd15096, {%r10312, %r10311};
	xor.b64  	%rd15097, %rd15095, %rd15096;
	xor.b64  	%rd15098, %rd18638, %rd18639;
	and.b64  	%rd15099, %rd18637, %rd15098;
	xor.b64  	%rd15100, %rd15099, %rd18639;
	add.s64 	%rd15101, %rd15004, %rd18624;
	ld.const.u64 	%rd15102, [%rd15092];
	add.s64 	%rd15103, %rd15101, %rd15102;
	add.s64 	%rd15104, %rd15103, %rd15100;
	add.s64 	%rd15105, %rd15104, %rd15097;
	add.s64 	%rd18636, %rd15105, %rd15015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10313,%dummy}, %rd18633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10314}, %rd18633;
	}
	shf.r.wrap.b32 	%r10315, %r10314, %r10313, 28;
	shf.r.wrap.b32 	%r10316, %r10313, %r10314, 28;
	mov.b64 	%rd15106, {%r10316, %r10315};
	shf.l.wrap.b32 	%r10317, %r10313, %r10314, 30;
	shf.l.wrap.b32 	%r10318, %r10314, %r10313, 30;
	mov.b64 	%rd15107, {%r10318, %r10317};
	xor.b64  	%rd15108, %rd15107, %rd15106;
	shf.l.wrap.b32 	%r10319, %r10313, %r10314, 25;
	shf.l.wrap.b32 	%r10320, %r10314, %r10313, 25;
	mov.b64 	%rd15109, {%r10320, %r10319};
	xor.b64  	%rd15110, %rd15108, %rd15109;
	and.b64  	%rd15111, %rd18633, %rd18634;
	xor.b64  	%rd15112, %rd18633, %rd18634;
	and.b64  	%rd15113, %rd15112, %rd18635;
	or.b64  	%rd15114, %rd15113, %rd15111;
	add.s64 	%rd15115, %rd15105, %rd15114;
	add.s64 	%rd18632, %rd15115, %rd15110;
	add.s32 	%r12685, %r12685, 16;
	setp.lt.s32	%p137, %r12685, 80;
	@%p137 bra 	BB0_228;

	mov.u64 	%rd18221, 6620516959819538809;
	mov.u64 	%rd18218, 2270897969802886507;
	mov.u64 	%rd18217, -7276294671716946913;
	mov.u64 	%rd18216, 5840696475078001361;
	mov.u64 	%rd18215, -6534734903238641935;
	mov.u64 	%rd18214, 4354685564936845355;
	mov.u64 	%rd18213, -4942790177534073029;
	mov.u64 	%rd18212, 7640891576956012808;
	add.s64 	%rd15118, %rd18632, %rd18608;
	st.global.u64 	[%rd11999+64], %rd15118;
	add.s64 	%rd15119, %rd18633, %rd18607;
	st.global.u64 	[%rd11999+72], %rd15119;
	st.local.u64 	[%rd1], %rd18212;
	st.local.u64 	[%rd1+8], %rd18213;
	st.local.u64 	[%rd1+16], %rd18214;
	st.local.u64 	[%rd1+24], %rd18215;
	st.local.u64 	[%rd1+32], %rd18216;
	st.local.u64 	[%rd1+40], %rd18217;
	st.local.u64 	[%rd1+48], %rd18218;
	st.local.u64 	[%rd1+56], %rd18221;
	mov.u32 	%r12686, 0;
	st.local.u32 	[%rd1+192], %r12686;
	and.b32  	%r333, %r3, 3;
	add.s64 	%rd1179, %rd1462, 7;
	shr.u64 	%rd15129, %rd919, 56;
	add.s64 	%rd1180, %rd15129, 16;
	add.s64 	%rd1181, %rd90, 7;
	mov.u32 	%r12687, %r12686;
	bra.uni 	BB0_230;

BB0_278:
	ld.local.u32 	%r12686, [%rd1+192];

BB0_230:
	add.s32 	%r10323, %r12686, %r3;
	st.local.u32 	[%rd1+192], %r10323;
	and.b32  	%r336, %r12686, 127;
	add.s32 	%r337, %r336, %r3;
	setp.lt.s32	%p138, %r337, 128;
	@%p138 bra 	BB0_251;
	bra.uni 	BB0_231;

BB0_251:
	setp.lt.s32	%p151, %r3, 1;
	@%p151 bra 	BB0_260;

	mov.u32 	%r12702, 0;
	setp.eq.s32	%p152, %r333, 0;
	@%p152 bra 	BB0_258;

	setp.eq.s32	%p153, %r333, 1;
	@%p153 bra 	BB0_257;

	setp.eq.s32	%p154, %r333, 2;
	@%p154 bra 	BB0_256;

	ld.local.u8 	%rs256, [%rd1179];
	xor.b32  	%r11093, %r336, 7;
	cvt.u64.u32	%rd16183, %r11093;
	add.s64 	%rd16184, %rd90, %rd16183;
	st.local.u8 	[%rd16184], %rs256;
	add.s32 	%r336, %r336, 1;
	mov.u32 	%r12702, 1;

BB0_256:
	xor.b32  	%r11094, %r12702, 7;
	cvt.u64.u32	%rd16185, %r11094;
	add.s64 	%rd16186, %rd1462, %rd16185;
	ld.local.u8 	%rs257, [%rd16186];
	xor.b32  	%r11095, %r336, 7;
	cvt.s64.s32	%rd16187, %r11095;
	add.s64 	%rd16188, %rd90, %rd16187;
	st.local.u8 	[%rd16188], %rs257;
	add.s32 	%r336, %r336, 1;
	add.s32 	%r12702, %r12702, 1;

BB0_257:
	xor.b32  	%r11096, %r12702, 7;
	cvt.s64.s32	%rd16189, %r11096;
	add.s64 	%rd16190, %rd1462, %rd16189;
	ld.local.u8 	%rs258, [%rd16190];
	xor.b32  	%r11097, %r336, 7;
	cvt.s64.s32	%rd16191, %r11097;
	add.s64 	%rd16192, %rd90, %rd16191;
	st.local.u8 	[%rd16192], %rs258;
	add.s32 	%r336, %r336, 1;
	add.s32 	%r12702, %r12702, 1;

BB0_258:
	setp.lt.u32	%p155, %r3, 4;
	@%p155 bra 	BB0_260;

BB0_259:
	xor.b32  	%r11098, %r12702, 7;
	cvt.s64.s32	%rd16193, %r11098;
	add.s64 	%rd16194, %rd1462, %rd16193;
	ld.local.u8 	%rs259, [%rd16194];
	xor.b32  	%r11099, %r336, 7;
	cvt.s64.s32	%rd16195, %r11099;
	add.s64 	%rd16196, %rd90, %rd16195;
	st.local.u8 	[%rd16196], %rs259;
	add.s32 	%r11100, %r12702, 1;
	xor.b32  	%r11101, %r11100, 7;
	cvt.s64.s32	%rd16197, %r11101;
	add.s64 	%rd16198, %rd1462, %rd16197;
	ld.local.u8 	%rs260, [%rd16198];
	add.s32 	%r11102, %r336, 1;
	xor.b32  	%r11103, %r11102, 7;
	cvt.s64.s32	%rd16199, %r11103;
	add.s64 	%rd16200, %rd90, %rd16199;
	st.local.u8 	[%rd16200], %rs260;
	add.s32 	%r11104, %r12702, 2;
	xor.b32  	%r11105, %r11104, 7;
	cvt.s64.s32	%rd16201, %r11105;
	add.s64 	%rd16202, %rd1462, %rd16201;
	ld.local.u8 	%rs261, [%rd16202];
	add.s32 	%r11106, %r336, 2;
	xor.b32  	%r11107, %r11106, 7;
	cvt.s64.s32	%rd16203, %r11107;
	add.s64 	%rd16204, %rd90, %rd16203;
	st.local.u8 	[%rd16204], %rs261;
	add.s32 	%r11108, %r12702, 3;
	xor.b32  	%r11109, %r11108, 7;
	cvt.s64.s32	%rd16205, %r11109;
	add.s64 	%rd16206, %rd1462, %rd16205;
	ld.local.u8 	%rs262, [%rd16206];
	add.s32 	%r11110, %r336, 3;
	xor.b32  	%r11111, %r11110, 7;
	cvt.s64.s32	%rd16207, %r11111;
	add.s64 	%rd16208, %rd90, %rd16207;
	st.local.u8 	[%rd16208], %rs262;
	add.s32 	%r12702, %r12702, 4;
	setp.lt.s32	%p156, %r12702, %r3;
	add.s32 	%r336, %r336, 4;
	@%p156 bra 	BB0_259;
	bra.uni 	BB0_260;

BB0_231:
	sub.s32 	%r338, %r1990, %r336;
	mov.u32 	%r10326, 1;
	max.u32 	%r339, %r338, %r10326;
	and.b32  	%r340, %r339, 3;
	setp.eq.s32	%p139, %r340, 0;
	mov.u32 	%r12694, 0;
	@%p139 bra 	BB0_238;

	setp.eq.s32	%p140, %r340, 1;
	mov.u32 	%r12690, 0;
	@%p140 bra 	BB0_237;

	setp.eq.s32	%p141, %r340, 2;
	mov.u32 	%r10328, 0;
	@%p141 bra 	BB0_234;
	bra.uni 	BB0_235;

BB0_234:
	mov.u32 	%r10326, %r10328;
	bra.uni 	BB0_236;

BB0_235:
	ld.local.u8 	%rs242, [%rd1179];
	xor.b32  	%r10330, %r336, 7;
	cvt.u64.u32	%rd15130, %r10330;
	add.s64 	%rd15131, %rd90, %rd15130;
	st.local.u8 	[%rd15131], %rs242;
	add.s32 	%r336, %r336, 1;

BB0_236:
	xor.b32  	%r10331, %r10326, 7;
	cvt.u64.u32	%rd15132, %r10331;
	add.s64 	%rd15133, %rd1462, %rd15132;
	ld.local.u8 	%rs243, [%rd15133];
	xor.b32  	%r10332, %r336, 7;
	cvt.s64.s32	%rd15134, %r10332;
	add.s64 	%rd15135, %rd90, %rd15134;
	st.local.u8 	[%rd15135], %rs243;
	add.s32 	%r336, %r336, 1;
	add.s32 	%r12690, %r10326, 1;

BB0_237:
	xor.b32  	%r10333, %r12690, 7;
	cvt.s64.s32	%rd15136, %r10333;
	add.s64 	%rd15137, %rd1462, %rd15136;
	ld.local.u8 	%rs244, [%rd15137];
	xor.b32  	%r10334, %r336, 7;
	cvt.s64.s32	%rd15138, %r10334;
	add.s64 	%rd15139, %rd90, %rd15138;
	st.local.u8 	[%rd15139], %rs244;
	add.s32 	%r336, %r336, 1;
	add.s32 	%r12694, %r12690, 1;

BB0_238:
	setp.lt.u32	%p142, %r339, 4;
	@%p142 bra 	BB0_240;

BB0_239:
	xor.b32  	%r10335, %r12694, 7;
	cvt.s64.s32	%rd15140, %r10335;
	add.s64 	%rd15141, %rd1462, %rd15140;
	ld.local.u8 	%rs245, [%rd15141];
	xor.b32  	%r10336, %r336, 7;
	cvt.s64.s32	%rd15142, %r10336;
	add.s64 	%rd15143, %rd90, %rd15142;
	st.local.u8 	[%rd15143], %rs245;
	add.s32 	%r10337, %r12694, 1;
	xor.b32  	%r10338, %r10337, 7;
	cvt.s64.s32	%rd15144, %r10338;
	add.s64 	%rd15145, %rd1462, %rd15144;
	ld.local.u8 	%rs246, [%rd15145];
	add.s32 	%r10339, %r336, 1;
	xor.b32  	%r10340, %r10339, 7;
	cvt.s64.s32	%rd15146, %r10340;
	add.s64 	%rd15147, %rd90, %rd15146;
	st.local.u8 	[%rd15147], %rs246;
	add.s32 	%r10341, %r12694, 2;
	xor.b32  	%r10342, %r10341, 7;
	cvt.s64.s32	%rd15148, %r10342;
	add.s64 	%rd15149, %rd1462, %rd15148;
	ld.local.u8 	%rs247, [%rd15149];
	add.s32 	%r10343, %r336, 2;
	xor.b32  	%r10344, %r10343, 7;
	cvt.s64.s32	%rd15150, %r10344;
	add.s64 	%rd15151, %rd90, %rd15150;
	st.local.u8 	[%rd15151], %rs247;
	add.s32 	%r10345, %r12694, 3;
	xor.b32  	%r10346, %r10345, 7;
	cvt.s64.s32	%rd15152, %r10346;
	add.s64 	%rd15153, %rd1462, %rd15152;
	ld.local.u8 	%rs248, [%rd15153];
	add.s32 	%r10347, %r336, 3;
	xor.b32  	%r10348, %r10347, 7;
	cvt.s64.s32	%rd15154, %r10348;
	add.s64 	%rd15155, %rd90, %rd15154;
	st.local.u8 	[%rd15155], %rs248;
	add.s32 	%r12694, %r12694, 4;
	setp.lt.s32	%p143, %r12694, %r338;
	add.s32 	%r336, %r336, 4;
	@%p143 bra 	BB0_239;

BB0_240:
	ld.local.u64 	%rd1182, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10350,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10351}, %rd1182;
	}
	shf.r.wrap.b32 	%r10352, %r10351, %r10350, 14;
	shf.r.wrap.b32 	%r10353, %r10350, %r10351, 14;
	mov.b64 	%rd15156, {%r10353, %r10352};
	shf.r.wrap.b32 	%r10354, %r10351, %r10350, 18;
	shf.r.wrap.b32 	%r10355, %r10350, %r10351, 18;
	mov.b64 	%rd15157, {%r10355, %r10354};
	xor.b64  	%rd15158, %rd15157, %rd15156;
	shf.l.wrap.b32 	%r10356, %r10350, %r10351, 23;
	shf.l.wrap.b32 	%r10357, %r10351, %r10350, 23;
	mov.b64 	%rd15159, {%r10357, %r10356};
	xor.b64  	%rd15160, %rd15158, %rd15159;
	ld.local.u64 	%rd1183, [%rd1+48];
	ld.local.u64 	%rd1184, [%rd1+40];
	xor.b64  	%rd15161, %rd1183, %rd1184;
	and.b64  	%rd15162, %rd15161, %rd1182;
	xor.b64  	%rd15163, %rd15162, %rd1183;
	ld.local.u64 	%rd1185, [%rd1+56];
	ld.local.u64 	%rd18664, [%rd1+64];
	add.s64 	%rd15164, %rd1185, %rd18664;
	add.s64 	%rd15165, %rd15164, %rd18338;
	add.s64 	%rd15166, %rd15165, %rd15163;
	add.s64 	%rd15167, %rd15166, %rd15160;
	ld.local.u64 	%rd1187, [%rd1+24];
	add.s64 	%rd15168, %rd15167, %rd1187;
	ld.local.u64 	%rd1188, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10358,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd1188;
	}
	shf.r.wrap.b32 	%r10360, %r10359, %r10358, 28;
	shf.r.wrap.b32 	%r10361, %r10358, %r10359, 28;
	mov.b64 	%rd15169, {%r10361, %r10360};
	shf.l.wrap.b32 	%r10362, %r10358, %r10359, 30;
	shf.l.wrap.b32 	%r10363, %r10359, %r10358, 30;
	mov.b64 	%rd15170, {%r10363, %r10362};
	xor.b64  	%rd15171, %rd15170, %rd15169;
	shf.l.wrap.b32 	%r10364, %r10358, %r10359, 25;
	shf.l.wrap.b32 	%r10365, %r10359, %r10358, 25;
	mov.b64 	%rd15172, {%r10365, %r10364};
	xor.b64  	%rd15173, %rd15171, %rd15172;
	ld.local.u64 	%rd1189, [%rd1+8];
	and.b64  	%rd15174, %rd1189, %rd1188;
	xor.b64  	%rd15175, %rd1189, %rd1188;
	ld.local.u64 	%rd1190, [%rd1+16];
	and.b64  	%rd15176, %rd1190, %rd15175;
	or.b64  	%rd15177, %rd15176, %rd15174;
	add.s64 	%rd15178, %rd15167, %rd15177;
	add.s64 	%rd15179, %rd15178, %rd15173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10366,%dummy}, %rd15168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd15168;
	}
	shf.r.wrap.b32 	%r10368, %r10367, %r10366, 14;
	shf.r.wrap.b32 	%r10369, %r10366, %r10367, 14;
	mov.b64 	%rd15180, {%r10369, %r10368};
	shf.r.wrap.b32 	%r10370, %r10367, %r10366, 18;
	shf.r.wrap.b32 	%r10371, %r10366, %r10367, 18;
	mov.b64 	%rd15181, {%r10371, %r10370};
	xor.b64  	%rd15182, %rd15181, %rd15180;
	shf.l.wrap.b32 	%r10372, %r10366, %r10367, 23;
	shf.l.wrap.b32 	%r10373, %r10367, %r10366, 23;
	mov.b64 	%rd15183, {%r10373, %r10372};
	xor.b64  	%rd15184, %rd15182, %rd15183;
	xor.b64  	%rd15185, %rd1184, %rd1182;
	and.b64  	%rd15186, %rd15168, %rd15185;
	xor.b64  	%rd15187, %rd15186, %rd1184;
	ld.local.u64 	%rd18665, [%rd1+72];
	add.s64 	%rd15188, %rd1183, %rd18665;
	add.s64 	%rd15189, %rd15188, %rd18337;
	add.s64 	%rd15190, %rd15189, %rd15187;
	add.s64 	%rd15191, %rd15190, %rd15184;
	add.s64 	%rd15192, %rd15191, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10374,%dummy}, %rd15179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10375}, %rd15179;
	}
	shf.r.wrap.b32 	%r10376, %r10375, %r10374, 28;
	shf.r.wrap.b32 	%r10377, %r10374, %r10375, 28;
	mov.b64 	%rd15193, {%r10377, %r10376};
	shf.l.wrap.b32 	%r10378, %r10374, %r10375, 30;
	shf.l.wrap.b32 	%r10379, %r10375, %r10374, 30;
	mov.b64 	%rd15194, {%r10379, %r10378};
	xor.b64  	%rd15195, %rd15194, %rd15193;
	shf.l.wrap.b32 	%r10380, %r10374, %r10375, 25;
	shf.l.wrap.b32 	%r10381, %r10375, %r10374, 25;
	mov.b64 	%rd15196, {%r10381, %r10380};
	xor.b64  	%rd15197, %rd15195, %rd15196;
	and.b64  	%rd15198, %rd15179, %rd1188;
	xor.b64  	%rd15199, %rd15179, %rd1188;
	and.b64  	%rd15200, %rd15199, %rd1189;
	or.b64  	%rd15201, %rd15200, %rd15198;
	add.s64 	%rd15202, %rd15191, %rd15201;
	add.s64 	%rd15203, %rd15202, %rd15197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10382,%dummy}, %rd15192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10383}, %rd15192;
	}
	shf.r.wrap.b32 	%r10384, %r10383, %r10382, 14;
	shf.r.wrap.b32 	%r10385, %r10382, %r10383, 14;
	mov.b64 	%rd15204, {%r10385, %r10384};
	shf.r.wrap.b32 	%r10386, %r10383, %r10382, 18;
	shf.r.wrap.b32 	%r10387, %r10382, %r10383, 18;
	mov.b64 	%rd15205, {%r10387, %r10386};
	xor.b64  	%rd15206, %rd15205, %rd15204;
	shf.l.wrap.b32 	%r10388, %r10382, %r10383, 23;
	shf.l.wrap.b32 	%r10389, %r10383, %r10382, 23;
	mov.b64 	%rd15207, {%r10389, %r10388};
	xor.b64  	%rd15208, %rd15206, %rd15207;
	xor.b64  	%rd15209, %rd15168, %rd1182;
	and.b64  	%rd15210, %rd15192, %rd15209;
	xor.b64  	%rd15211, %rd15210, %rd1182;
	ld.local.u64 	%rd18666, [%rd1+80];
	add.s64 	%rd15212, %rd1184, %rd18666;
	add.s64 	%rd15213, %rd15212, %rd18336;
	add.s64 	%rd15214, %rd15213, %rd15211;
	add.s64 	%rd15215, %rd15214, %rd15208;
	add.s64 	%rd15216, %rd15215, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10390,%dummy}, %rd15203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10391}, %rd15203;
	}
	shf.r.wrap.b32 	%r10392, %r10391, %r10390, 28;
	shf.r.wrap.b32 	%r10393, %r10390, %r10391, 28;
	mov.b64 	%rd15217, {%r10393, %r10392};
	shf.l.wrap.b32 	%r10394, %r10390, %r10391, 30;
	shf.l.wrap.b32 	%r10395, %r10391, %r10390, 30;
	mov.b64 	%rd15218, {%r10395, %r10394};
	xor.b64  	%rd15219, %rd15218, %rd15217;
	shf.l.wrap.b32 	%r10396, %r10390, %r10391, 25;
	shf.l.wrap.b32 	%r10397, %r10391, %r10390, 25;
	mov.b64 	%rd15220, {%r10397, %r10396};
	xor.b64  	%rd15221, %rd15219, %rd15220;
	and.b64  	%rd15222, %rd15203, %rd15179;
	xor.b64  	%rd15223, %rd15203, %rd15179;
	and.b64  	%rd15224, %rd15223, %rd1188;
	or.b64  	%rd15225, %rd15224, %rd15222;
	add.s64 	%rd15226, %rd15215, %rd15225;
	add.s64 	%rd15227, %rd15226, %rd15221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10398,%dummy}, %rd15216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10399}, %rd15216;
	}
	shf.r.wrap.b32 	%r10400, %r10399, %r10398, 14;
	shf.r.wrap.b32 	%r10401, %r10398, %r10399, 14;
	mov.b64 	%rd15228, {%r10401, %r10400};
	shf.r.wrap.b32 	%r10402, %r10399, %r10398, 18;
	shf.r.wrap.b32 	%r10403, %r10398, %r10399, 18;
	mov.b64 	%rd15229, {%r10403, %r10402};
	xor.b64  	%rd15230, %rd15229, %rd15228;
	shf.l.wrap.b32 	%r10404, %r10398, %r10399, 23;
	shf.l.wrap.b32 	%r10405, %r10399, %r10398, 23;
	mov.b64 	%rd15231, {%r10405, %r10404};
	xor.b64  	%rd15232, %rd15230, %rd15231;
	xor.b64  	%rd15233, %rd15192, %rd15168;
	and.b64  	%rd15234, %rd15216, %rd15233;
	xor.b64  	%rd15235, %rd15234, %rd15168;
	ld.local.u64 	%rd18667, [%rd1+88];
	add.s64 	%rd15236, %rd1182, %rd18667;
	add.s64 	%rd15237, %rd15236, %rd18335;
	add.s64 	%rd15238, %rd15237, %rd15235;
	add.s64 	%rd15239, %rd15238, %rd15232;
	add.s64 	%rd15240, %rd15239, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10406,%dummy}, %rd15227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10407}, %rd15227;
	}
	shf.r.wrap.b32 	%r10408, %r10407, %r10406, 28;
	shf.r.wrap.b32 	%r10409, %r10406, %r10407, 28;
	mov.b64 	%rd15241, {%r10409, %r10408};
	shf.l.wrap.b32 	%r10410, %r10406, %r10407, 30;
	shf.l.wrap.b32 	%r10411, %r10407, %r10406, 30;
	mov.b64 	%rd15242, {%r10411, %r10410};
	xor.b64  	%rd15243, %rd15242, %rd15241;
	shf.l.wrap.b32 	%r10412, %r10406, %r10407, 25;
	shf.l.wrap.b32 	%r10413, %r10407, %r10406, 25;
	mov.b64 	%rd15244, {%r10413, %r10412};
	xor.b64  	%rd15245, %rd15243, %rd15244;
	and.b64  	%rd15246, %rd15227, %rd15203;
	xor.b64  	%rd15247, %rd15227, %rd15203;
	and.b64  	%rd15248, %rd15247, %rd15179;
	or.b64  	%rd15249, %rd15248, %rd15246;
	add.s64 	%rd15250, %rd15239, %rd15249;
	add.s64 	%rd15251, %rd15250, %rd15245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10414,%dummy}, %rd15240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10415}, %rd15240;
	}
	shf.r.wrap.b32 	%r10416, %r10415, %r10414, 14;
	shf.r.wrap.b32 	%r10417, %r10414, %r10415, 14;
	mov.b64 	%rd15252, {%r10417, %r10416};
	shf.r.wrap.b32 	%r10418, %r10415, %r10414, 18;
	shf.r.wrap.b32 	%r10419, %r10414, %r10415, 18;
	mov.b64 	%rd15253, {%r10419, %r10418};
	xor.b64  	%rd15254, %rd15253, %rd15252;
	shf.l.wrap.b32 	%r10420, %r10414, %r10415, 23;
	shf.l.wrap.b32 	%r10421, %r10415, %r10414, 23;
	mov.b64 	%rd15255, {%r10421, %r10420};
	xor.b64  	%rd15256, %rd15254, %rd15255;
	xor.b64  	%rd15257, %rd15216, %rd15192;
	and.b64  	%rd15258, %rd15240, %rd15257;
	xor.b64  	%rd15259, %rd15258, %rd15192;
	ld.local.u64 	%rd18668, [%rd1+96];
	add.s64 	%rd15260, %rd15168, %rd18668;
	add.s64 	%rd15261, %rd15260, %rd18334;
	add.s64 	%rd15262, %rd15261, %rd15259;
	add.s64 	%rd15263, %rd15262, %rd15256;
	add.s64 	%rd15264, %rd15263, %rd15179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10422,%dummy}, %rd15251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10423}, %rd15251;
	}
	shf.r.wrap.b32 	%r10424, %r10423, %r10422, 28;
	shf.r.wrap.b32 	%r10425, %r10422, %r10423, 28;
	mov.b64 	%rd15265, {%r10425, %r10424};
	shf.l.wrap.b32 	%r10426, %r10422, %r10423, 30;
	shf.l.wrap.b32 	%r10427, %r10423, %r10422, 30;
	mov.b64 	%rd15266, {%r10427, %r10426};
	xor.b64  	%rd15267, %rd15266, %rd15265;
	shf.l.wrap.b32 	%r10428, %r10422, %r10423, 25;
	shf.l.wrap.b32 	%r10429, %r10423, %r10422, 25;
	mov.b64 	%rd15268, {%r10429, %r10428};
	xor.b64  	%rd15269, %rd15267, %rd15268;
	and.b64  	%rd15270, %rd15251, %rd15227;
	xor.b64  	%rd15271, %rd15251, %rd15227;
	and.b64  	%rd15272, %rd15271, %rd15203;
	or.b64  	%rd15273, %rd15272, %rd15270;
	add.s64 	%rd15274, %rd15263, %rd15273;
	add.s64 	%rd15275, %rd15274, %rd15269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10430,%dummy}, %rd15264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10431}, %rd15264;
	}
	shf.r.wrap.b32 	%r10432, %r10431, %r10430, 14;
	shf.r.wrap.b32 	%r10433, %r10430, %r10431, 14;
	mov.b64 	%rd15276, {%r10433, %r10432};
	shf.r.wrap.b32 	%r10434, %r10431, %r10430, 18;
	shf.r.wrap.b32 	%r10435, %r10430, %r10431, 18;
	mov.b64 	%rd15277, {%r10435, %r10434};
	xor.b64  	%rd15278, %rd15277, %rd15276;
	shf.l.wrap.b32 	%r10436, %r10430, %r10431, 23;
	shf.l.wrap.b32 	%r10437, %r10431, %r10430, 23;
	mov.b64 	%rd15279, {%r10437, %r10436};
	xor.b64  	%rd15280, %rd15278, %rd15279;
	xor.b64  	%rd15281, %rd15240, %rd15216;
	and.b64  	%rd15282, %rd15264, %rd15281;
	xor.b64  	%rd15283, %rd15282, %rd15216;
	ld.local.u64 	%rd18669, [%rd1+104];
	add.s64 	%rd15284, %rd15192, %rd18669;
	add.s64 	%rd15285, %rd15284, %rd18333;
	add.s64 	%rd15286, %rd15285, %rd15283;
	add.s64 	%rd15287, %rd15286, %rd15280;
	add.s64 	%rd15288, %rd15287, %rd15203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10438,%dummy}, %rd15275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10439}, %rd15275;
	}
	shf.r.wrap.b32 	%r10440, %r10439, %r10438, 28;
	shf.r.wrap.b32 	%r10441, %r10438, %r10439, 28;
	mov.b64 	%rd15289, {%r10441, %r10440};
	shf.l.wrap.b32 	%r10442, %r10438, %r10439, 30;
	shf.l.wrap.b32 	%r10443, %r10439, %r10438, 30;
	mov.b64 	%rd15290, {%r10443, %r10442};
	xor.b64  	%rd15291, %rd15290, %rd15289;
	shf.l.wrap.b32 	%r10444, %r10438, %r10439, 25;
	shf.l.wrap.b32 	%r10445, %r10439, %r10438, 25;
	mov.b64 	%rd15292, {%r10445, %r10444};
	xor.b64  	%rd15293, %rd15291, %rd15292;
	and.b64  	%rd15294, %rd15275, %rd15251;
	xor.b64  	%rd15295, %rd15275, %rd15251;
	and.b64  	%rd15296, %rd15295, %rd15227;
	or.b64  	%rd15297, %rd15296, %rd15294;
	add.s64 	%rd15298, %rd15287, %rd15297;
	add.s64 	%rd15299, %rd15298, %rd15293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10446,%dummy}, %rd15288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10447}, %rd15288;
	}
	shf.r.wrap.b32 	%r10448, %r10447, %r10446, 14;
	shf.r.wrap.b32 	%r10449, %r10446, %r10447, 14;
	mov.b64 	%rd15300, {%r10449, %r10448};
	shf.r.wrap.b32 	%r10450, %r10447, %r10446, 18;
	shf.r.wrap.b32 	%r10451, %r10446, %r10447, 18;
	mov.b64 	%rd15301, {%r10451, %r10450};
	xor.b64  	%rd15302, %rd15301, %rd15300;
	shf.l.wrap.b32 	%r10452, %r10446, %r10447, 23;
	shf.l.wrap.b32 	%r10453, %r10447, %r10446, 23;
	mov.b64 	%rd15303, {%r10453, %r10452};
	xor.b64  	%rd15304, %rd15302, %rd15303;
	xor.b64  	%rd15305, %rd15264, %rd15240;
	and.b64  	%rd15306, %rd15288, %rd15305;
	xor.b64  	%rd15307, %rd15306, %rd15240;
	ld.local.u64 	%rd18670, [%rd1+112];
	add.s64 	%rd15308, %rd15216, %rd18670;
	add.s64 	%rd15309, %rd15308, %rd18332;
	add.s64 	%rd15310, %rd15309, %rd15307;
	add.s64 	%rd15311, %rd15310, %rd15304;
	add.s64 	%rd15312, %rd15311, %rd15227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10454,%dummy}, %rd15299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10455}, %rd15299;
	}
	shf.r.wrap.b32 	%r10456, %r10455, %r10454, 28;
	shf.r.wrap.b32 	%r10457, %r10454, %r10455, 28;
	mov.b64 	%rd15313, {%r10457, %r10456};
	shf.l.wrap.b32 	%r10458, %r10454, %r10455, 30;
	shf.l.wrap.b32 	%r10459, %r10455, %r10454, 30;
	mov.b64 	%rd15314, {%r10459, %r10458};
	xor.b64  	%rd15315, %rd15314, %rd15313;
	shf.l.wrap.b32 	%r10460, %r10454, %r10455, 25;
	shf.l.wrap.b32 	%r10461, %r10455, %r10454, 25;
	mov.b64 	%rd15316, {%r10461, %r10460};
	xor.b64  	%rd15317, %rd15315, %rd15316;
	and.b64  	%rd15318, %rd15299, %rd15275;
	xor.b64  	%rd15319, %rd15299, %rd15275;
	and.b64  	%rd15320, %rd15319, %rd15251;
	or.b64  	%rd15321, %rd15320, %rd15318;
	add.s64 	%rd15322, %rd15311, %rd15321;
	add.s64 	%rd15323, %rd15322, %rd15317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10462,%dummy}, %rd15312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10463}, %rd15312;
	}
	shf.r.wrap.b32 	%r10464, %r10463, %r10462, 14;
	shf.r.wrap.b32 	%r10465, %r10462, %r10463, 14;
	mov.b64 	%rd15324, {%r10465, %r10464};
	shf.r.wrap.b32 	%r10466, %r10463, %r10462, 18;
	shf.r.wrap.b32 	%r10467, %r10462, %r10463, 18;
	mov.b64 	%rd15325, {%r10467, %r10466};
	xor.b64  	%rd15326, %rd15325, %rd15324;
	shf.l.wrap.b32 	%r10468, %r10462, %r10463, 23;
	shf.l.wrap.b32 	%r10469, %r10463, %r10462, 23;
	mov.b64 	%rd15327, {%r10469, %r10468};
	xor.b64  	%rd15328, %rd15326, %rd15327;
	xor.b64  	%rd15329, %rd15288, %rd15264;
	and.b64  	%rd15330, %rd15312, %rd15329;
	xor.b64  	%rd15331, %rd15330, %rd15264;
	ld.local.u64 	%rd18671, [%rd1+120];
	add.s64 	%rd15332, %rd15240, %rd18671;
	add.s64 	%rd15333, %rd15332, %rd18331;
	add.s64 	%rd15334, %rd15333, %rd15331;
	add.s64 	%rd15335, %rd15334, %rd15328;
	add.s64 	%rd15336, %rd15335, %rd15251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10470,%dummy}, %rd15323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd15323;
	}
	shf.r.wrap.b32 	%r10472, %r10471, %r10470, 28;
	shf.r.wrap.b32 	%r10473, %r10470, %r10471, 28;
	mov.b64 	%rd15337, {%r10473, %r10472};
	shf.l.wrap.b32 	%r10474, %r10470, %r10471, 30;
	shf.l.wrap.b32 	%r10475, %r10471, %r10470, 30;
	mov.b64 	%rd15338, {%r10475, %r10474};
	xor.b64  	%rd15339, %rd15338, %rd15337;
	shf.l.wrap.b32 	%r10476, %r10470, %r10471, 25;
	shf.l.wrap.b32 	%r10477, %r10471, %r10470, 25;
	mov.b64 	%rd15340, {%r10477, %r10476};
	xor.b64  	%rd15341, %rd15339, %rd15340;
	and.b64  	%rd15342, %rd15323, %rd15299;
	xor.b64  	%rd15343, %rd15323, %rd15299;
	and.b64  	%rd15344, %rd15343, %rd15275;
	or.b64  	%rd15345, %rd15344, %rd15342;
	add.s64 	%rd15346, %rd15335, %rd15345;
	add.s64 	%rd15347, %rd15346, %rd15341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10478,%dummy}, %rd15336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10479}, %rd15336;
	}
	shf.r.wrap.b32 	%r10480, %r10479, %r10478, 14;
	shf.r.wrap.b32 	%r10481, %r10478, %r10479, 14;
	mov.b64 	%rd15348, {%r10481, %r10480};
	shf.r.wrap.b32 	%r10482, %r10479, %r10478, 18;
	shf.r.wrap.b32 	%r10483, %r10478, %r10479, 18;
	mov.b64 	%rd15349, {%r10483, %r10482};
	xor.b64  	%rd15350, %rd15349, %rd15348;
	shf.l.wrap.b32 	%r10484, %r10478, %r10479, 23;
	shf.l.wrap.b32 	%r10485, %r10479, %r10478, 23;
	mov.b64 	%rd15351, {%r10485, %r10484};
	xor.b64  	%rd15352, %rd15350, %rd15351;
	xor.b64  	%rd15353, %rd15312, %rd15288;
	and.b64  	%rd15354, %rd15336, %rd15353;
	xor.b64  	%rd15355, %rd15354, %rd15288;
	ld.local.u64 	%rd18655, [%rd1+128];
	add.s64 	%rd15356, %rd15264, %rd18655;
	add.s64 	%rd15357, %rd15356, %rd18330;
	add.s64 	%rd15358, %rd15357, %rd15355;
	add.s64 	%rd15359, %rd15358, %rd15352;
	add.s64 	%rd15360, %rd15359, %rd15275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10486,%dummy}, %rd15347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10487}, %rd15347;
	}
	shf.r.wrap.b32 	%r10488, %r10487, %r10486, 28;
	shf.r.wrap.b32 	%r10489, %r10486, %r10487, 28;
	mov.b64 	%rd15361, {%r10489, %r10488};
	shf.l.wrap.b32 	%r10490, %r10486, %r10487, 30;
	shf.l.wrap.b32 	%r10491, %r10487, %r10486, 30;
	mov.b64 	%rd15362, {%r10491, %r10490};
	xor.b64  	%rd15363, %rd15362, %rd15361;
	shf.l.wrap.b32 	%r10492, %r10486, %r10487, 25;
	shf.l.wrap.b32 	%r10493, %r10487, %r10486, 25;
	mov.b64 	%rd15364, {%r10493, %r10492};
	xor.b64  	%rd15365, %rd15363, %rd15364;
	and.b64  	%rd15366, %rd15347, %rd15323;
	xor.b64  	%rd15367, %rd15347, %rd15323;
	and.b64  	%rd15368, %rd15367, %rd15299;
	or.b64  	%rd15369, %rd15368, %rd15366;
	add.s64 	%rd15370, %rd15359, %rd15369;
	add.s64 	%rd15371, %rd15370, %rd15365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10494,%dummy}, %rd15360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd15360;
	}
	shf.r.wrap.b32 	%r10496, %r10495, %r10494, 14;
	shf.r.wrap.b32 	%r10497, %r10494, %r10495, 14;
	mov.b64 	%rd15372, {%r10497, %r10496};
	shf.r.wrap.b32 	%r10498, %r10495, %r10494, 18;
	shf.r.wrap.b32 	%r10499, %r10494, %r10495, 18;
	mov.b64 	%rd15373, {%r10499, %r10498};
	xor.b64  	%rd15374, %rd15373, %rd15372;
	shf.l.wrap.b32 	%r10500, %r10494, %r10495, 23;
	shf.l.wrap.b32 	%r10501, %r10495, %r10494, 23;
	mov.b64 	%rd15375, {%r10501, %r10500};
	xor.b64  	%rd15376, %rd15374, %rd15375;
	xor.b64  	%rd15377, %rd15336, %rd15312;
	and.b64  	%rd15378, %rd15360, %rd15377;
	xor.b64  	%rd15379, %rd15378, %rd15312;
	ld.local.u64 	%rd18654, [%rd1+136];
	add.s64 	%rd15380, %rd15288, %rd18654;
	add.s64 	%rd15381, %rd15380, %rd18329;
	add.s64 	%rd15382, %rd15381, %rd15379;
	add.s64 	%rd15383, %rd15382, %rd15376;
	add.s64 	%rd15384, %rd15383, %rd15299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10502,%dummy}, %rd15371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10503}, %rd15371;
	}
	shf.r.wrap.b32 	%r10504, %r10503, %r10502, 28;
	shf.r.wrap.b32 	%r10505, %r10502, %r10503, 28;
	mov.b64 	%rd15385, {%r10505, %r10504};
	shf.l.wrap.b32 	%r10506, %r10502, %r10503, 30;
	shf.l.wrap.b32 	%r10507, %r10503, %r10502, 30;
	mov.b64 	%rd15386, {%r10507, %r10506};
	xor.b64  	%rd15387, %rd15386, %rd15385;
	shf.l.wrap.b32 	%r10508, %r10502, %r10503, 25;
	shf.l.wrap.b32 	%r10509, %r10503, %r10502, 25;
	mov.b64 	%rd15388, {%r10509, %r10508};
	xor.b64  	%rd15389, %rd15387, %rd15388;
	and.b64  	%rd15390, %rd15371, %rd15347;
	xor.b64  	%rd15391, %rd15371, %rd15347;
	and.b64  	%rd15392, %rd15391, %rd15323;
	or.b64  	%rd15393, %rd15392, %rd15390;
	add.s64 	%rd15394, %rd15383, %rd15393;
	add.s64 	%rd15395, %rd15394, %rd15389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10510,%dummy}, %rd15384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10511}, %rd15384;
	}
	shf.r.wrap.b32 	%r10512, %r10511, %r10510, 14;
	shf.r.wrap.b32 	%r10513, %r10510, %r10511, 14;
	mov.b64 	%rd15396, {%r10513, %r10512};
	shf.r.wrap.b32 	%r10514, %r10511, %r10510, 18;
	shf.r.wrap.b32 	%r10515, %r10510, %r10511, 18;
	mov.b64 	%rd15397, {%r10515, %r10514};
	xor.b64  	%rd15398, %rd15397, %rd15396;
	shf.l.wrap.b32 	%r10516, %r10510, %r10511, 23;
	shf.l.wrap.b32 	%r10517, %r10511, %r10510, 23;
	mov.b64 	%rd15399, {%r10517, %r10516};
	xor.b64  	%rd15400, %rd15398, %rd15399;
	xor.b64  	%rd15401, %rd15360, %rd15336;
	and.b64  	%rd15402, %rd15384, %rd15401;
	xor.b64  	%rd15403, %rd15402, %rd15336;
	ld.local.u64 	%rd18653, [%rd1+144];
	add.s64 	%rd15404, %rd15312, %rd18653;
	add.s64 	%rd15405, %rd15404, %rd18328;
	add.s64 	%rd15406, %rd15405, %rd15403;
	add.s64 	%rd15407, %rd15406, %rd15400;
	add.s64 	%rd15408, %rd15407, %rd15323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10518,%dummy}, %rd15395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10519}, %rd15395;
	}
	shf.r.wrap.b32 	%r10520, %r10519, %r10518, 28;
	shf.r.wrap.b32 	%r10521, %r10518, %r10519, 28;
	mov.b64 	%rd15409, {%r10521, %r10520};
	shf.l.wrap.b32 	%r10522, %r10518, %r10519, 30;
	shf.l.wrap.b32 	%r10523, %r10519, %r10518, 30;
	mov.b64 	%rd15410, {%r10523, %r10522};
	xor.b64  	%rd15411, %rd15410, %rd15409;
	shf.l.wrap.b32 	%r10524, %r10518, %r10519, 25;
	shf.l.wrap.b32 	%r10525, %r10519, %r10518, 25;
	mov.b64 	%rd15412, {%r10525, %r10524};
	xor.b64  	%rd15413, %rd15411, %rd15412;
	and.b64  	%rd15414, %rd15395, %rd15371;
	xor.b64  	%rd15415, %rd15395, %rd15371;
	and.b64  	%rd15416, %rd15415, %rd15347;
	or.b64  	%rd15417, %rd15416, %rd15414;
	add.s64 	%rd15418, %rd15407, %rd15417;
	add.s64 	%rd15419, %rd15418, %rd15413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10526,%dummy}, %rd15408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd15408;
	}
	shf.r.wrap.b32 	%r10528, %r10527, %r10526, 14;
	shf.r.wrap.b32 	%r10529, %r10526, %r10527, 14;
	mov.b64 	%rd15420, {%r10529, %r10528};
	shf.r.wrap.b32 	%r10530, %r10527, %r10526, 18;
	shf.r.wrap.b32 	%r10531, %r10526, %r10527, 18;
	mov.b64 	%rd15421, {%r10531, %r10530};
	xor.b64  	%rd15422, %rd15421, %rd15420;
	shf.l.wrap.b32 	%r10532, %r10526, %r10527, 23;
	shf.l.wrap.b32 	%r10533, %r10527, %r10526, 23;
	mov.b64 	%rd15423, {%r10533, %r10532};
	xor.b64  	%rd15424, %rd15422, %rd15423;
	xor.b64  	%rd15425, %rd15384, %rd15360;
	and.b64  	%rd15426, %rd15408, %rd15425;
	xor.b64  	%rd15427, %rd15426, %rd15360;
	ld.local.u64 	%rd18652, [%rd1+152];
	add.s64 	%rd15428, %rd15336, %rd18652;
	add.s64 	%rd15429, %rd15428, %rd18327;
	add.s64 	%rd15430, %rd15429, %rd15427;
	add.s64 	%rd15431, %rd15430, %rd15424;
	add.s64 	%rd15432, %rd15431, %rd15347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10534,%dummy}, %rd15419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd15419;
	}
	shf.r.wrap.b32 	%r10536, %r10535, %r10534, 28;
	shf.r.wrap.b32 	%r10537, %r10534, %r10535, 28;
	mov.b64 	%rd15433, {%r10537, %r10536};
	shf.l.wrap.b32 	%r10538, %r10534, %r10535, 30;
	shf.l.wrap.b32 	%r10539, %r10535, %r10534, 30;
	mov.b64 	%rd15434, {%r10539, %r10538};
	xor.b64  	%rd15435, %rd15434, %rd15433;
	shf.l.wrap.b32 	%r10540, %r10534, %r10535, 25;
	shf.l.wrap.b32 	%r10541, %r10535, %r10534, 25;
	mov.b64 	%rd15436, {%r10541, %r10540};
	xor.b64  	%rd15437, %rd15435, %rd15436;
	and.b64  	%rd15438, %rd15419, %rd15395;
	xor.b64  	%rd15439, %rd15419, %rd15395;
	and.b64  	%rd15440, %rd15439, %rd15371;
	or.b64  	%rd15441, %rd15440, %rd15438;
	add.s64 	%rd15442, %rd15431, %rd15441;
	add.s64 	%rd15443, %rd15442, %rd15437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10542,%dummy}, %rd15432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10543}, %rd15432;
	}
	shf.r.wrap.b32 	%r10544, %r10543, %r10542, 14;
	shf.r.wrap.b32 	%r10545, %r10542, %r10543, 14;
	mov.b64 	%rd15444, {%r10545, %r10544};
	shf.r.wrap.b32 	%r10546, %r10543, %r10542, 18;
	shf.r.wrap.b32 	%r10547, %r10542, %r10543, 18;
	mov.b64 	%rd15445, {%r10547, %r10546};
	xor.b64  	%rd15446, %rd15445, %rd15444;
	shf.l.wrap.b32 	%r10548, %r10542, %r10543, 23;
	shf.l.wrap.b32 	%r10549, %r10543, %r10542, 23;
	mov.b64 	%rd15447, {%r10549, %r10548};
	xor.b64  	%rd15448, %rd15446, %rd15447;
	xor.b64  	%rd15449, %rd15408, %rd15384;
	and.b64  	%rd15450, %rd15432, %rd15449;
	xor.b64  	%rd15451, %rd15450, %rd15384;
	ld.local.u64 	%rd18651, [%rd1+160];
	add.s64 	%rd15452, %rd15360, %rd18651;
	add.s64 	%rd15453, %rd15452, %rd18326;
	add.s64 	%rd15454, %rd15453, %rd15451;
	add.s64 	%rd15455, %rd15454, %rd15448;
	add.s64 	%rd18663, %rd15455, %rd15371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10550,%dummy}, %rd15443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd15443;
	}
	shf.r.wrap.b32 	%r10552, %r10551, %r10550, 28;
	shf.r.wrap.b32 	%r10553, %r10550, %r10551, 28;
	mov.b64 	%rd15456, {%r10553, %r10552};
	shf.l.wrap.b32 	%r10554, %r10550, %r10551, 30;
	shf.l.wrap.b32 	%r10555, %r10551, %r10550, 30;
	mov.b64 	%rd15457, {%r10555, %r10554};
	xor.b64  	%rd15458, %rd15457, %rd15456;
	shf.l.wrap.b32 	%r10556, %r10550, %r10551, 25;
	shf.l.wrap.b32 	%r10557, %r10551, %r10550, 25;
	mov.b64 	%rd15459, {%r10557, %r10556};
	xor.b64  	%rd15460, %rd15458, %rd15459;
	and.b64  	%rd15461, %rd15443, %rd15419;
	xor.b64  	%rd15462, %rd15443, %rd15419;
	and.b64  	%rd15463, %rd15462, %rd15395;
	or.b64  	%rd15464, %rd15463, %rd15461;
	add.s64 	%rd15465, %rd15455, %rd15464;
	add.s64 	%rd18659, %rd15465, %rd15460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10558,%dummy}, %rd18663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd18663;
	}
	shf.r.wrap.b32 	%r10560, %r10559, %r10558, 14;
	shf.r.wrap.b32 	%r10561, %r10558, %r10559, 14;
	mov.b64 	%rd15466, {%r10561, %r10560};
	shf.r.wrap.b32 	%r10562, %r10559, %r10558, 18;
	shf.r.wrap.b32 	%r10563, %r10558, %r10559, 18;
	mov.b64 	%rd15467, {%r10563, %r10562};
	xor.b64  	%rd15468, %rd15467, %rd15466;
	shf.l.wrap.b32 	%r10564, %r10558, %r10559, 23;
	shf.l.wrap.b32 	%r10565, %r10559, %r10558, 23;
	mov.b64 	%rd15469, {%r10565, %r10564};
	xor.b64  	%rd15470, %rd15468, %rd15469;
	xor.b64  	%rd15471, %rd15432, %rd15408;
	and.b64  	%rd15472, %rd18663, %rd15471;
	xor.b64  	%rd15473, %rd15472, %rd15408;
	ld.local.u64 	%rd18650, [%rd1+168];
	add.s64 	%rd15474, %rd15384, %rd18650;
	add.s64 	%rd15475, %rd15474, %rd18325;
	add.s64 	%rd15476, %rd15475, %rd15473;
	add.s64 	%rd15477, %rd15476, %rd15470;
	add.s64 	%rd18662, %rd15477, %rd15395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10566,%dummy}, %rd18659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd18659;
	}
	shf.r.wrap.b32 	%r10568, %r10567, %r10566, 28;
	shf.r.wrap.b32 	%r10569, %r10566, %r10567, 28;
	mov.b64 	%rd15478, {%r10569, %r10568};
	shf.l.wrap.b32 	%r10570, %r10566, %r10567, 30;
	shf.l.wrap.b32 	%r10571, %r10567, %r10566, 30;
	mov.b64 	%rd15479, {%r10571, %r10570};
	xor.b64  	%rd15480, %rd15479, %rd15478;
	shf.l.wrap.b32 	%r10572, %r10566, %r10567, 25;
	shf.l.wrap.b32 	%r10573, %r10567, %r10566, 25;
	mov.b64 	%rd15481, {%r10573, %r10572};
	xor.b64  	%rd15482, %rd15480, %rd15481;
	and.b64  	%rd15483, %rd18659, %rd15443;
	xor.b64  	%rd15484, %rd18659, %rd15443;
	and.b64  	%rd15485, %rd15484, %rd15419;
	or.b64  	%rd15486, %rd15485, %rd15483;
	add.s64 	%rd15487, %rd15477, %rd15486;
	add.s64 	%rd18658, %rd15487, %rd15482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10574,%dummy}, %rd18662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10575}, %rd18662;
	}
	shf.r.wrap.b32 	%r10576, %r10575, %r10574, 14;
	shf.r.wrap.b32 	%r10577, %r10574, %r10575, 14;
	mov.b64 	%rd15488, {%r10577, %r10576};
	shf.r.wrap.b32 	%r10578, %r10575, %r10574, 18;
	shf.r.wrap.b32 	%r10579, %r10574, %r10575, 18;
	mov.b64 	%rd15489, {%r10579, %r10578};
	xor.b64  	%rd15490, %rd15489, %rd15488;
	shf.l.wrap.b32 	%r10580, %r10574, %r10575, 23;
	shf.l.wrap.b32 	%r10581, %r10575, %r10574, 23;
	mov.b64 	%rd15491, {%r10581, %r10580};
	xor.b64  	%rd15492, %rd15490, %rd15491;
	xor.b64  	%rd15493, %rd18663, %rd15432;
	and.b64  	%rd15494, %rd18662, %rd15493;
	xor.b64  	%rd15495, %rd15494, %rd15432;
	ld.local.u64 	%rd18649, [%rd1+176];
	add.s64 	%rd15496, %rd15408, %rd18649;
	add.s64 	%rd15497, %rd15496, %rd18324;
	add.s64 	%rd15498, %rd15497, %rd15495;
	add.s64 	%rd15499, %rd15498, %rd15492;
	add.s64 	%rd18661, %rd15499, %rd15419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10582,%dummy}, %rd18658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd18658;
	}
	shf.r.wrap.b32 	%r10584, %r10583, %r10582, 28;
	shf.r.wrap.b32 	%r10585, %r10582, %r10583, 28;
	mov.b64 	%rd15500, {%r10585, %r10584};
	shf.l.wrap.b32 	%r10586, %r10582, %r10583, 30;
	shf.l.wrap.b32 	%r10587, %r10583, %r10582, 30;
	mov.b64 	%rd15501, {%r10587, %r10586};
	xor.b64  	%rd15502, %rd15501, %rd15500;
	shf.l.wrap.b32 	%r10588, %r10582, %r10583, 25;
	shf.l.wrap.b32 	%r10589, %r10583, %r10582, 25;
	mov.b64 	%rd15503, {%r10589, %r10588};
	xor.b64  	%rd15504, %rd15502, %rd15503;
	and.b64  	%rd15505, %rd18658, %rd18659;
	xor.b64  	%rd15506, %rd18658, %rd18659;
	and.b64  	%rd15507, %rd15506, %rd15443;
	or.b64  	%rd15508, %rd15507, %rd15505;
	add.s64 	%rd15509, %rd15499, %rd15508;
	add.s64 	%rd18657, %rd15509, %rd15504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10590,%dummy}, %rd18661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd18661;
	}
	shf.r.wrap.b32 	%r10592, %r10591, %r10590, 14;
	shf.r.wrap.b32 	%r10593, %r10590, %r10591, 14;
	mov.b64 	%rd15510, {%r10593, %r10592};
	shf.r.wrap.b32 	%r10594, %r10591, %r10590, 18;
	shf.r.wrap.b32 	%r10595, %r10590, %r10591, 18;
	mov.b64 	%rd15511, {%r10595, %r10594};
	xor.b64  	%rd15512, %rd15511, %rd15510;
	shf.l.wrap.b32 	%r10596, %r10590, %r10591, 23;
	shf.l.wrap.b32 	%r10597, %r10591, %r10590, 23;
	mov.b64 	%rd15513, {%r10597, %r10596};
	xor.b64  	%rd15514, %rd15512, %rd15513;
	xor.b64  	%rd15515, %rd18662, %rd18663;
	and.b64  	%rd15516, %rd18661, %rd15515;
	xor.b64  	%rd15517, %rd15516, %rd18663;
	ld.local.u64 	%rd18648, [%rd1+184];
	add.s64 	%rd15518, %rd15432, %rd18648;
	add.s64 	%rd15519, %rd15518, %rd18323;
	add.s64 	%rd15520, %rd15519, %rd15517;
	add.s64 	%rd15521, %rd15520, %rd15514;
	add.s64 	%rd18660, %rd15521, %rd15443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10598,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd18657;
	}
	shf.r.wrap.b32 	%r10600, %r10599, %r10598, 28;
	shf.r.wrap.b32 	%r10601, %r10598, %r10599, 28;
	mov.b64 	%rd15522, {%r10601, %r10600};
	shf.l.wrap.b32 	%r10602, %r10598, %r10599, 30;
	shf.l.wrap.b32 	%r10603, %r10599, %r10598, 30;
	mov.b64 	%rd15523, {%r10603, %r10602};
	xor.b64  	%rd15524, %rd15523, %rd15522;
	shf.l.wrap.b32 	%r10604, %r10598, %r10599, 25;
	shf.l.wrap.b32 	%r10605, %r10599, %r10598, 25;
	mov.b64 	%rd15525, {%r10605, %r10604};
	xor.b64  	%rd15526, %rd15524, %rd15525;
	and.b64  	%rd15527, %rd18657, %rd18658;
	xor.b64  	%rd15528, %rd18657, %rd18658;
	and.b64  	%rd15529, %rd15528, %rd18659;
	or.b64  	%rd15530, %rd15529, %rd15527;
	add.s64 	%rd15531, %rd15521, %rd15530;
	add.s64 	%rd18656, %rd15531, %rd15526;
	mov.u32 	%r12696, 16;

BB0_241:
	mov.u64 	%rd18240, k_sha512;
	shr.u64 	%rd15532, %rd18649, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10606,%dummy}, %rd18649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd18649;
	}
	shf.r.wrap.b32 	%r10608, %r10607, %r10606, 19;
	shf.r.wrap.b32 	%r10609, %r10606, %r10607, 19;
	mov.b64 	%rd15533, {%r10609, %r10608};
	xor.b64  	%rd15534, %rd15533, %rd15532;
	shf.l.wrap.b32 	%r10610, %r10606, %r10607, 3;
	shf.l.wrap.b32 	%r10611, %r10607, %r10606, 3;
	mov.b64 	%rd15535, {%r10611, %r10610};
	xor.b64  	%rd15536, %rd15534, %rd15535;
	shr.u64 	%rd15537, %rd18665, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd18665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10613}, %rd18665;
	}
	shf.r.wrap.b32 	%r10614, %r10613, %r10612, 1;
	shf.r.wrap.b32 	%r10615, %r10612, %r10613, 1;
	mov.b64 	%rd15538, {%r10615, %r10614};
	xor.b64  	%rd15539, %rd15538, %rd15537;
	shf.r.wrap.b32 	%r10616, %r10613, %r10612, 8;
	shf.r.wrap.b32 	%r10617, %r10612, %r10613, 8;
	mov.b64 	%rd15540, {%r10617, %r10616};
	xor.b64  	%rd15541, %rd15539, %rd15540;
	add.s64 	%rd15542, %rd18664, %rd18654;
	add.s64 	%rd15543, %rd15542, %rd15536;
	add.s64 	%rd18664, %rd15543, %rd15541;
	shr.u64 	%rd15544, %rd18648, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10618,%dummy}, %rd18648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10619}, %rd18648;
	}
	shf.r.wrap.b32 	%r10620, %r10619, %r10618, 19;
	shf.r.wrap.b32 	%r10621, %r10618, %r10619, 19;
	mov.b64 	%rd15545, {%r10621, %r10620};
	xor.b64  	%rd15546, %rd15545, %rd15544;
	shf.l.wrap.b32 	%r10622, %r10618, %r10619, 3;
	shf.l.wrap.b32 	%r10623, %r10619, %r10618, 3;
	mov.b64 	%rd15547, {%r10623, %r10622};
	xor.b64  	%rd15548, %rd15546, %rd15547;
	shr.u64 	%rd15549, %rd18666, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10624,%dummy}, %rd18666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10625}, %rd18666;
	}
	shf.r.wrap.b32 	%r10626, %r10625, %r10624, 1;
	shf.r.wrap.b32 	%r10627, %r10624, %r10625, 1;
	mov.b64 	%rd15550, {%r10627, %r10626};
	xor.b64  	%rd15551, %rd15550, %rd15549;
	shf.r.wrap.b32 	%r10628, %r10625, %r10624, 8;
	shf.r.wrap.b32 	%r10629, %r10624, %r10625, 8;
	mov.b64 	%rd15552, {%r10629, %r10628};
	xor.b64  	%rd15553, %rd15551, %rd15552;
	add.s64 	%rd15554, %rd18665, %rd18653;
	add.s64 	%rd15555, %rd15554, %rd15548;
	add.s64 	%rd18665, %rd15555, %rd15553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10630,%dummy}, %rd18664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10631}, %rd18664;
	}
	shf.r.wrap.b32 	%r10632, %r10631, %r10630, 19;
	shf.r.wrap.b32 	%r10633, %r10630, %r10631, 19;
	mov.b64 	%rd15556, {%r10633, %r10632};
	shf.l.wrap.b32 	%r10634, %r10630, %r10631, 3;
	shf.l.wrap.b32 	%r10635, %r10631, %r10630, 3;
	mov.b64 	%rd15557, {%r10635, %r10634};
	shr.u64 	%rd15558, %rd18664, 6;
	xor.b64  	%rd15559, %rd15556, %rd15558;
	xor.b64  	%rd15560, %rd15559, %rd15557;
	shr.u64 	%rd15561, %rd18667, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10637}, %rd18667;
	}
	shf.r.wrap.b32 	%r10638, %r10637, %r10636, 1;
	shf.r.wrap.b32 	%r10639, %r10636, %r10637, 1;
	mov.b64 	%rd15562, {%r10639, %r10638};
	xor.b64  	%rd15563, %rd15562, %rd15561;
	shf.r.wrap.b32 	%r10640, %r10637, %r10636, 8;
	shf.r.wrap.b32 	%r10641, %r10636, %r10637, 8;
	mov.b64 	%rd15564, {%r10641, %r10640};
	xor.b64  	%rd15565, %rd15563, %rd15564;
	add.s64 	%rd15566, %rd18666, %rd18652;
	add.s64 	%rd15567, %rd15566, %rd15560;
	add.s64 	%rd18666, %rd15567, %rd15565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10642,%dummy}, %rd18665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10643}, %rd18665;
	}
	shf.r.wrap.b32 	%r10644, %r10643, %r10642, 19;
	shf.r.wrap.b32 	%r10645, %r10642, %r10643, 19;
	mov.b64 	%rd15568, {%r10645, %r10644};
	shf.l.wrap.b32 	%r10646, %r10642, %r10643, 3;
	shf.l.wrap.b32 	%r10647, %r10643, %r10642, 3;
	mov.b64 	%rd15569, {%r10647, %r10646};
	shr.u64 	%rd15570, %rd18665, 6;
	xor.b64  	%rd15571, %rd15568, %rd15570;
	xor.b64  	%rd15572, %rd15571, %rd15569;
	shr.u64 	%rd15573, %rd18668, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10648,%dummy}, %rd18668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10649}, %rd18668;
	}
	shf.r.wrap.b32 	%r10650, %r10649, %r10648, 1;
	shf.r.wrap.b32 	%r10651, %r10648, %r10649, 1;
	mov.b64 	%rd15574, {%r10651, %r10650};
	xor.b64  	%rd15575, %rd15574, %rd15573;
	shf.r.wrap.b32 	%r10652, %r10649, %r10648, 8;
	shf.r.wrap.b32 	%r10653, %r10648, %r10649, 8;
	mov.b64 	%rd15576, {%r10653, %r10652};
	xor.b64  	%rd15577, %rd15575, %rd15576;
	add.s64 	%rd15578, %rd18667, %rd18651;
	add.s64 	%rd15579, %rd15578, %rd15572;
	add.s64 	%rd18667, %rd15579, %rd15577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10654,%dummy}, %rd18666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd18666;
	}
	shf.r.wrap.b32 	%r10656, %r10655, %r10654, 19;
	shf.r.wrap.b32 	%r10657, %r10654, %r10655, 19;
	mov.b64 	%rd15580, {%r10657, %r10656};
	shf.l.wrap.b32 	%r10658, %r10654, %r10655, 3;
	shf.l.wrap.b32 	%r10659, %r10655, %r10654, 3;
	mov.b64 	%rd15581, {%r10659, %r10658};
	shr.u64 	%rd15582, %rd18666, 6;
	xor.b64  	%rd15583, %rd15580, %rd15582;
	xor.b64  	%rd15584, %rd15583, %rd15581;
	shr.u64 	%rd15585, %rd18669, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10660,%dummy}, %rd18669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10661}, %rd18669;
	}
	shf.r.wrap.b32 	%r10662, %r10661, %r10660, 1;
	shf.r.wrap.b32 	%r10663, %r10660, %r10661, 1;
	mov.b64 	%rd15586, {%r10663, %r10662};
	xor.b64  	%rd15587, %rd15586, %rd15585;
	shf.r.wrap.b32 	%r10664, %r10661, %r10660, 8;
	shf.r.wrap.b32 	%r10665, %r10660, %r10661, 8;
	mov.b64 	%rd15588, {%r10665, %r10664};
	xor.b64  	%rd15589, %rd15587, %rd15588;
	add.s64 	%rd15590, %rd18668, %rd18650;
	add.s64 	%rd15591, %rd15590, %rd15584;
	add.s64 	%rd18668, %rd15591, %rd15589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10666,%dummy}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10667}, %rd18667;
	}
	shf.r.wrap.b32 	%r10668, %r10667, %r10666, 19;
	shf.r.wrap.b32 	%r10669, %r10666, %r10667, 19;
	mov.b64 	%rd15592, {%r10669, %r10668};
	shf.l.wrap.b32 	%r10670, %r10666, %r10667, 3;
	shf.l.wrap.b32 	%r10671, %r10667, %r10666, 3;
	mov.b64 	%rd15593, {%r10671, %r10670};
	shr.u64 	%rd15594, %rd18667, 6;
	xor.b64  	%rd15595, %rd15592, %rd15594;
	xor.b64  	%rd15596, %rd15595, %rd15593;
	shr.u64 	%rd15597, %rd18670, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10672,%dummy}, %rd18670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10673}, %rd18670;
	}
	shf.r.wrap.b32 	%r10674, %r10673, %r10672, 1;
	shf.r.wrap.b32 	%r10675, %r10672, %r10673, 1;
	mov.b64 	%rd15598, {%r10675, %r10674};
	xor.b64  	%rd15599, %rd15598, %rd15597;
	shf.r.wrap.b32 	%r10676, %r10673, %r10672, 8;
	shf.r.wrap.b32 	%r10677, %r10672, %r10673, 8;
	mov.b64 	%rd15600, {%r10677, %r10676};
	xor.b64  	%rd15601, %rd15599, %rd15600;
	add.s64 	%rd15602, %rd18669, %rd18649;
	add.s64 	%rd15603, %rd15602, %rd15596;
	add.s64 	%rd18669, %rd15603, %rd15601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10678,%dummy}, %rd18668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd18668;
	}
	shf.r.wrap.b32 	%r10680, %r10679, %r10678, 19;
	shf.r.wrap.b32 	%r10681, %r10678, %r10679, 19;
	mov.b64 	%rd15604, {%r10681, %r10680};
	shf.l.wrap.b32 	%r10682, %r10678, %r10679, 3;
	shf.l.wrap.b32 	%r10683, %r10679, %r10678, 3;
	mov.b64 	%rd15605, {%r10683, %r10682};
	shr.u64 	%rd15606, %rd18668, 6;
	xor.b64  	%rd15607, %rd15604, %rd15606;
	xor.b64  	%rd15608, %rd15607, %rd15605;
	shr.u64 	%rd15609, %rd18671, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10685}, %rd18671;
	}
	shf.r.wrap.b32 	%r10686, %r10685, %r10684, 1;
	shf.r.wrap.b32 	%r10687, %r10684, %r10685, 1;
	mov.b64 	%rd15610, {%r10687, %r10686};
	xor.b64  	%rd15611, %rd15610, %rd15609;
	shf.r.wrap.b32 	%r10688, %r10685, %r10684, 8;
	shf.r.wrap.b32 	%r10689, %r10684, %r10685, 8;
	mov.b64 	%rd15612, {%r10689, %r10688};
	xor.b64  	%rd15613, %rd15611, %rd15612;
	add.s64 	%rd15614, %rd18670, %rd18648;
	add.s64 	%rd15615, %rd15614, %rd15608;
	add.s64 	%rd18670, %rd15615, %rd15613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10690,%dummy}, %rd18669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10691}, %rd18669;
	}
	shf.r.wrap.b32 	%r10692, %r10691, %r10690, 19;
	shf.r.wrap.b32 	%r10693, %r10690, %r10691, 19;
	mov.b64 	%rd15616, {%r10693, %r10692};
	shf.l.wrap.b32 	%r10694, %r10690, %r10691, 3;
	shf.l.wrap.b32 	%r10695, %r10691, %r10690, 3;
	mov.b64 	%rd15617, {%r10695, %r10694};
	shr.u64 	%rd15618, %rd18669, 6;
	xor.b64  	%rd15619, %rd15616, %rd15618;
	xor.b64  	%rd15620, %rd15619, %rd15617;
	shr.u64 	%rd15621, %rd18655, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10696,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10697}, %rd18655;
	}
	shf.r.wrap.b32 	%r10698, %r10697, %r10696, 1;
	shf.r.wrap.b32 	%r10699, %r10696, %r10697, 1;
	mov.b64 	%rd15622, {%r10699, %r10698};
	xor.b64  	%rd15623, %rd15622, %rd15621;
	shf.r.wrap.b32 	%r10700, %r10697, %r10696, 8;
	shf.r.wrap.b32 	%r10701, %r10696, %r10697, 8;
	mov.b64 	%rd15624, {%r10701, %r10700};
	xor.b64  	%rd15625, %rd15623, %rd15624;
	add.s64 	%rd15626, %rd18664, %rd18671;
	add.s64 	%rd15627, %rd15626, %rd15620;
	add.s64 	%rd18671, %rd15627, %rd15625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10702,%dummy}, %rd18670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd18670;
	}
	shf.r.wrap.b32 	%r10704, %r10703, %r10702, 19;
	shf.r.wrap.b32 	%r10705, %r10702, %r10703, 19;
	mov.b64 	%rd15628, {%r10705, %r10704};
	shf.l.wrap.b32 	%r10706, %r10702, %r10703, 3;
	shf.l.wrap.b32 	%r10707, %r10703, %r10702, 3;
	mov.b64 	%rd15629, {%r10707, %r10706};
	shr.u64 	%rd15630, %rd18670, 6;
	xor.b64  	%rd15631, %rd15628, %rd15630;
	xor.b64  	%rd15632, %rd15631, %rd15629;
	shr.u64 	%rd15633, %rd18654, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10709}, %rd18654;
	}
	shf.r.wrap.b32 	%r10710, %r10709, %r10708, 1;
	shf.r.wrap.b32 	%r10711, %r10708, %r10709, 1;
	mov.b64 	%rd15634, {%r10711, %r10710};
	xor.b64  	%rd15635, %rd15634, %rd15633;
	shf.r.wrap.b32 	%r10712, %r10709, %r10708, 8;
	shf.r.wrap.b32 	%r10713, %r10708, %r10709, 8;
	mov.b64 	%rd15636, {%r10713, %r10712};
	xor.b64  	%rd15637, %rd15635, %rd15636;
	add.s64 	%rd15638, %rd18665, %rd18655;
	add.s64 	%rd15639, %rd15638, %rd15632;
	add.s64 	%rd18655, %rd15639, %rd15637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10714,%dummy}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10715}, %rd18671;
	}
	shf.r.wrap.b32 	%r10716, %r10715, %r10714, 19;
	shf.r.wrap.b32 	%r10717, %r10714, %r10715, 19;
	mov.b64 	%rd15640, {%r10717, %r10716};
	shf.l.wrap.b32 	%r10718, %r10714, %r10715, 3;
	shf.l.wrap.b32 	%r10719, %r10715, %r10714, 3;
	mov.b64 	%rd15641, {%r10719, %r10718};
	shr.u64 	%rd15642, %rd18671, 6;
	xor.b64  	%rd15643, %rd15640, %rd15642;
	xor.b64  	%rd15644, %rd15643, %rd15641;
	shr.u64 	%rd15645, %rd18653, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10720,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10721}, %rd18653;
	}
	shf.r.wrap.b32 	%r10722, %r10721, %r10720, 1;
	shf.r.wrap.b32 	%r10723, %r10720, %r10721, 1;
	mov.b64 	%rd15646, {%r10723, %r10722};
	xor.b64  	%rd15647, %rd15646, %rd15645;
	shf.r.wrap.b32 	%r10724, %r10721, %r10720, 8;
	shf.r.wrap.b32 	%r10725, %r10720, %r10721, 8;
	mov.b64 	%rd15648, {%r10725, %r10724};
	xor.b64  	%rd15649, %rd15647, %rd15648;
	add.s64 	%rd15650, %rd18666, %rd18654;
	add.s64 	%rd15651, %rd15650, %rd15644;
	add.s64 	%rd18654, %rd15651, %rd15649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10726,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd18655;
	}
	shf.r.wrap.b32 	%r10728, %r10727, %r10726, 19;
	shf.r.wrap.b32 	%r10729, %r10726, %r10727, 19;
	mov.b64 	%rd15652, {%r10729, %r10728};
	shf.l.wrap.b32 	%r10730, %r10726, %r10727, 3;
	shf.l.wrap.b32 	%r10731, %r10727, %r10726, 3;
	mov.b64 	%rd15653, {%r10731, %r10730};
	shr.u64 	%rd15654, %rd18655, 6;
	xor.b64  	%rd15655, %rd15652, %rd15654;
	xor.b64  	%rd15656, %rd15655, %rd15653;
	shr.u64 	%rd15657, %rd18652, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10732,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10733}, %rd18652;
	}
	shf.r.wrap.b32 	%r10734, %r10733, %r10732, 1;
	shf.r.wrap.b32 	%r10735, %r10732, %r10733, 1;
	mov.b64 	%rd15658, {%r10735, %r10734};
	xor.b64  	%rd15659, %rd15658, %rd15657;
	shf.r.wrap.b32 	%r10736, %r10733, %r10732, 8;
	shf.r.wrap.b32 	%r10737, %r10732, %r10733, 8;
	mov.b64 	%rd15660, {%r10737, %r10736};
	xor.b64  	%rd15661, %rd15659, %rd15660;
	add.s64 	%rd15662, %rd18667, %rd18653;
	add.s64 	%rd15663, %rd15662, %rd15656;
	add.s64 	%rd18653, %rd15663, %rd15661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10738,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10739}, %rd18654;
	}
	shf.r.wrap.b32 	%r10740, %r10739, %r10738, 19;
	shf.r.wrap.b32 	%r10741, %r10738, %r10739, 19;
	mov.b64 	%rd15664, {%r10741, %r10740};
	shf.l.wrap.b32 	%r10742, %r10738, %r10739, 3;
	shf.l.wrap.b32 	%r10743, %r10739, %r10738, 3;
	mov.b64 	%rd15665, {%r10743, %r10742};
	shr.u64 	%rd15666, %rd18654, 6;
	xor.b64  	%rd15667, %rd15664, %rd15666;
	xor.b64  	%rd15668, %rd15667, %rd15665;
	shr.u64 	%rd15669, %rd18651, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10744,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10745}, %rd18651;
	}
	shf.r.wrap.b32 	%r10746, %r10745, %r10744, 1;
	shf.r.wrap.b32 	%r10747, %r10744, %r10745, 1;
	mov.b64 	%rd15670, {%r10747, %r10746};
	xor.b64  	%rd15671, %rd15670, %rd15669;
	shf.r.wrap.b32 	%r10748, %r10745, %r10744, 8;
	shf.r.wrap.b32 	%r10749, %r10744, %r10745, 8;
	mov.b64 	%rd15672, {%r10749, %r10748};
	xor.b64  	%rd15673, %rd15671, %rd15672;
	add.s64 	%rd15674, %rd18668, %rd18652;
	add.s64 	%rd15675, %rd15674, %rd15668;
	add.s64 	%rd18652, %rd15675, %rd15673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10750,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd18653;
	}
	shf.r.wrap.b32 	%r10752, %r10751, %r10750, 19;
	shf.r.wrap.b32 	%r10753, %r10750, %r10751, 19;
	mov.b64 	%rd15676, {%r10753, %r10752};
	shf.l.wrap.b32 	%r10754, %r10750, %r10751, 3;
	shf.l.wrap.b32 	%r10755, %r10751, %r10750, 3;
	mov.b64 	%rd15677, {%r10755, %r10754};
	shr.u64 	%rd15678, %rd18653, 6;
	xor.b64  	%rd15679, %rd15676, %rd15678;
	xor.b64  	%rd15680, %rd15679, %rd15677;
	shr.u64 	%rd15681, %rd18650, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10756,%dummy}, %rd18650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10757}, %rd18650;
	}
	shf.r.wrap.b32 	%r10758, %r10757, %r10756, 1;
	shf.r.wrap.b32 	%r10759, %r10756, %r10757, 1;
	mov.b64 	%rd15682, {%r10759, %r10758};
	xor.b64  	%rd15683, %rd15682, %rd15681;
	shf.r.wrap.b32 	%r10760, %r10757, %r10756, 8;
	shf.r.wrap.b32 	%r10761, %r10756, %r10757, 8;
	mov.b64 	%rd15684, {%r10761, %r10760};
	xor.b64  	%rd15685, %rd15683, %rd15684;
	add.s64 	%rd15686, %rd18669, %rd18651;
	add.s64 	%rd15687, %rd15686, %rd15680;
	add.s64 	%rd18651, %rd15687, %rd15685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10762,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd18652;
	}
	shf.r.wrap.b32 	%r10764, %r10763, %r10762, 19;
	shf.r.wrap.b32 	%r10765, %r10762, %r10763, 19;
	mov.b64 	%rd15688, {%r10765, %r10764};
	shf.l.wrap.b32 	%r10766, %r10762, %r10763, 3;
	shf.l.wrap.b32 	%r10767, %r10763, %r10762, 3;
	mov.b64 	%rd15689, {%r10767, %r10766};
	shr.u64 	%rd15690, %rd18652, 6;
	xor.b64  	%rd15691, %rd15688, %rd15690;
	xor.b64  	%rd15692, %rd15691, %rd15689;
	shr.u64 	%rd15693, %rd18649, 7;
	shf.r.wrap.b32 	%r10768, %r10607, %r10606, 1;
	shf.r.wrap.b32 	%r10769, %r10606, %r10607, 1;
	mov.b64 	%rd15694, {%r10769, %r10768};
	xor.b64  	%rd15695, %rd15694, %rd15693;
	shf.r.wrap.b32 	%r10770, %r10607, %r10606, 8;
	shf.r.wrap.b32 	%r10771, %r10606, %r10607, 8;
	mov.b64 	%rd15696, {%r10771, %r10770};
	xor.b64  	%rd15697, %rd15695, %rd15696;
	add.s64 	%rd15698, %rd18670, %rd18650;
	add.s64 	%rd15699, %rd15698, %rd15692;
	add.s64 	%rd18650, %rd15699, %rd15697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10772,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10773}, %rd18651;
	}
	shf.r.wrap.b32 	%r10774, %r10773, %r10772, 19;
	shf.r.wrap.b32 	%r10775, %r10772, %r10773, 19;
	mov.b64 	%rd15700, {%r10775, %r10774};
	shf.l.wrap.b32 	%r10776, %r10772, %r10773, 3;
	shf.l.wrap.b32 	%r10777, %r10773, %r10772, 3;
	mov.b64 	%rd15701, {%r10777, %r10776};
	shr.u64 	%rd15702, %rd18651, 6;
	xor.b64  	%rd15703, %rd15700, %rd15702;
	xor.b64  	%rd15704, %rd15703, %rd15701;
	shr.u64 	%rd15705, %rd18648, 7;
	shf.r.wrap.b32 	%r10778, %r10619, %r10618, 1;
	shf.r.wrap.b32 	%r10779, %r10618, %r10619, 1;
	mov.b64 	%rd15706, {%r10779, %r10778};
	xor.b64  	%rd15707, %rd15706, %rd15705;
	shf.r.wrap.b32 	%r10780, %r10619, %r10618, 8;
	shf.r.wrap.b32 	%r10781, %r10618, %r10619, 8;
	mov.b64 	%rd15708, {%r10781, %r10780};
	xor.b64  	%rd15709, %rd15707, %rd15708;
	add.s64 	%rd15710, %rd18671, %rd18649;
	add.s64 	%rd15711, %rd15710, %rd15704;
	add.s64 	%rd18649, %rd15711, %rd15709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10782,%dummy}, %rd18650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd18650;
	}
	shf.r.wrap.b32 	%r10784, %r10783, %r10782, 19;
	shf.r.wrap.b32 	%r10785, %r10782, %r10783, 19;
	mov.b64 	%rd15712, {%r10785, %r10784};
	shf.l.wrap.b32 	%r10786, %r10782, %r10783, 3;
	shf.l.wrap.b32 	%r10787, %r10783, %r10782, 3;
	mov.b64 	%rd15713, {%r10787, %r10786};
	shr.u64 	%rd15714, %rd18650, 6;
	xor.b64  	%rd15715, %rd15712, %rd15714;
	xor.b64  	%rd15716, %rd15715, %rd15713;
	shf.r.wrap.b32 	%r10788, %r10631, %r10630, 1;
	shf.r.wrap.b32 	%r10789, %r10630, %r10631, 1;
	mov.b64 	%rd15717, {%r10789, %r10788};
	shf.r.wrap.b32 	%r10790, %r10631, %r10630, 8;
	shf.r.wrap.b32 	%r10791, %r10630, %r10631, 8;
	mov.b64 	%rd15718, {%r10791, %r10790};
	shr.u64 	%rd15719, %rd18664, 7;
	xor.b64  	%rd15720, %rd15717, %rd15719;
	xor.b64  	%rd15721, %rd15720, %rd15718;
	add.s64 	%rd15722, %rd18655, %rd18648;
	add.s64 	%rd15723, %rd15722, %rd15716;
	add.s64 	%rd18648, %rd15723, %rd15721;
	mul.wide.s32 	%rd15724, %r12696, 8;
	add.s64 	%rd15726, %rd18240, %rd15724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10792,%dummy}, %rd18660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10793}, %rd18660;
	}
	shf.r.wrap.b32 	%r10794, %r10793, %r10792, 18;
	shf.r.wrap.b32 	%r10795, %r10792, %r10793, 18;
	mov.b64 	%rd15727, {%r10795, %r10794};
	shf.r.wrap.b32 	%r10796, %r10793, %r10792, 14;
	shf.r.wrap.b32 	%r10797, %r10792, %r10793, 14;
	mov.b64 	%rd15728, {%r10797, %r10796};
	xor.b64  	%rd15729, %rd15727, %rd15728;
	shf.l.wrap.b32 	%r10798, %r10792, %r10793, 23;
	shf.l.wrap.b32 	%r10799, %r10793, %r10792, 23;
	mov.b64 	%rd15730, {%r10799, %r10798};
	xor.b64  	%rd15731, %rd15729, %rd15730;
	xor.b64  	%rd15732, %rd18662, %rd18661;
	and.b64  	%rd15733, %rd15732, %rd18660;
	xor.b64  	%rd15734, %rd15733, %rd18662;
	add.s64 	%rd15735, %rd15734, %rd18663;
	add.s64 	%rd15736, %rd15735, %rd18664;
	ld.const.u64 	%rd15737, [%rd15726];
	add.s64 	%rd15738, %rd15736, %rd15737;
	add.s64 	%rd15739, %rd15738, %rd15731;
	add.s64 	%rd15740, %rd15739, %rd18659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10800}, %rd18656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10801,%dummy}, %rd18656;
	}
	shf.l.wrap.b32 	%r10802, %r10801, %r10800, 30;
	shf.l.wrap.b32 	%r10803, %r10800, %r10801, 30;
	mov.b64 	%rd15741, {%r10803, %r10802};
	shf.r.wrap.b32 	%r10804, %r10800, %r10801, 28;
	shf.r.wrap.b32 	%r10805, %r10801, %r10800, 28;
	mov.b64 	%rd15742, {%r10805, %r10804};
	xor.b64  	%rd15743, %rd15741, %rd15742;
	shf.l.wrap.b32 	%r10806, %r10801, %r10800, 25;
	shf.l.wrap.b32 	%r10807, %r10800, %r10801, 25;
	mov.b64 	%rd15744, {%r10807, %r10806};
	xor.b64  	%rd15745, %rd15743, %rd15744;
	xor.b64  	%rd15746, %rd18657, %rd18656;
	and.b64  	%rd15747, %rd15746, %rd18658;
	and.b64  	%rd15748, %rd18657, %rd18656;
	or.b64  	%rd15749, %rd15747, %rd15748;
	add.s64 	%rd15750, %rd15739, %rd15749;
	add.s64 	%rd15751, %rd15750, %rd15745;
	add.s32 	%r10808, %r12696, 1;
	mul.wide.s32 	%rd15752, %r10808, 8;
	add.s64 	%rd15753, %rd18240, %rd15752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10809,%dummy}, %rd15740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10810}, %rd15740;
	}
	shf.r.wrap.b32 	%r10811, %r10810, %r10809, 14;
	shf.r.wrap.b32 	%r10812, %r10809, %r10810, 14;
	mov.b64 	%rd15754, {%r10812, %r10811};
	shf.r.wrap.b32 	%r10813, %r10810, %r10809, 18;
	shf.r.wrap.b32 	%r10814, %r10809, %r10810, 18;
	mov.b64 	%rd15755, {%r10814, %r10813};
	xor.b64  	%rd15756, %rd15755, %rd15754;
	shf.l.wrap.b32 	%r10815, %r10809, %r10810, 23;
	shf.l.wrap.b32 	%r10816, %r10810, %r10809, 23;
	mov.b64 	%rd15757, {%r10816, %r10815};
	xor.b64  	%rd15758, %rd15756, %rd15757;
	xor.b64  	%rd15759, %rd18661, %rd18660;
	and.b64  	%rd15760, %rd15740, %rd15759;
	xor.b64  	%rd15761, %rd15760, %rd18661;
	add.s64 	%rd15762, %rd18665, %rd18662;
	ld.const.u64 	%rd15763, [%rd15753];
	add.s64 	%rd15764, %rd15762, %rd15763;
	add.s64 	%rd15765, %rd15764, %rd15761;
	add.s64 	%rd15766, %rd15765, %rd15758;
	add.s64 	%rd15767, %rd15766, %rd18658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10817,%dummy}, %rd15751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10818}, %rd15751;
	}
	shf.r.wrap.b32 	%r10819, %r10818, %r10817, 28;
	shf.r.wrap.b32 	%r10820, %r10817, %r10818, 28;
	mov.b64 	%rd15768, {%r10820, %r10819};
	shf.l.wrap.b32 	%r10821, %r10817, %r10818, 30;
	shf.l.wrap.b32 	%r10822, %r10818, %r10817, 30;
	mov.b64 	%rd15769, {%r10822, %r10821};
	xor.b64  	%rd15770, %rd15769, %rd15768;
	shf.l.wrap.b32 	%r10823, %r10817, %r10818, 25;
	shf.l.wrap.b32 	%r10824, %r10818, %r10817, 25;
	mov.b64 	%rd15771, {%r10824, %r10823};
	xor.b64  	%rd15772, %rd15770, %rd15771;
	and.b64  	%rd15773, %rd15751, %rd18656;
	xor.b64  	%rd15774, %rd15751, %rd18656;
	and.b64  	%rd15775, %rd15774, %rd18657;
	or.b64  	%rd15776, %rd15775, %rd15773;
	add.s64 	%rd15777, %rd15766, %rd15776;
	add.s64 	%rd15778, %rd15777, %rd15772;
	add.s32 	%r10825, %r12696, 2;
	mul.wide.s32 	%rd15779, %r10825, 8;
	add.s64 	%rd15780, %rd18240, %rd15779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10826,%dummy}, %rd15767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10827}, %rd15767;
	}
	shf.r.wrap.b32 	%r10828, %r10827, %r10826, 14;
	shf.r.wrap.b32 	%r10829, %r10826, %r10827, 14;
	mov.b64 	%rd15781, {%r10829, %r10828};
	shf.r.wrap.b32 	%r10830, %r10827, %r10826, 18;
	shf.r.wrap.b32 	%r10831, %r10826, %r10827, 18;
	mov.b64 	%rd15782, {%r10831, %r10830};
	xor.b64  	%rd15783, %rd15782, %rd15781;
	shf.l.wrap.b32 	%r10832, %r10826, %r10827, 23;
	shf.l.wrap.b32 	%r10833, %r10827, %r10826, 23;
	mov.b64 	%rd15784, {%r10833, %r10832};
	xor.b64  	%rd15785, %rd15783, %rd15784;
	xor.b64  	%rd15786, %rd15740, %rd18660;
	and.b64  	%rd15787, %rd15767, %rd15786;
	xor.b64  	%rd15788, %rd15787, %rd18660;
	add.s64 	%rd15789, %rd18666, %rd18661;
	ld.const.u64 	%rd15790, [%rd15780];
	add.s64 	%rd15791, %rd15789, %rd15790;
	add.s64 	%rd15792, %rd15791, %rd15788;
	add.s64 	%rd15793, %rd15792, %rd15785;
	add.s64 	%rd15794, %rd15793, %rd18657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10834,%dummy}, %rd15778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10835}, %rd15778;
	}
	shf.r.wrap.b32 	%r10836, %r10835, %r10834, 28;
	shf.r.wrap.b32 	%r10837, %r10834, %r10835, 28;
	mov.b64 	%rd15795, {%r10837, %r10836};
	shf.l.wrap.b32 	%r10838, %r10834, %r10835, 30;
	shf.l.wrap.b32 	%r10839, %r10835, %r10834, 30;
	mov.b64 	%rd15796, {%r10839, %r10838};
	xor.b64  	%rd15797, %rd15796, %rd15795;
	shf.l.wrap.b32 	%r10840, %r10834, %r10835, 25;
	shf.l.wrap.b32 	%r10841, %r10835, %r10834, 25;
	mov.b64 	%rd15798, {%r10841, %r10840};
	xor.b64  	%rd15799, %rd15797, %rd15798;
	and.b64  	%rd15800, %rd15778, %rd15751;
	xor.b64  	%rd15801, %rd15778, %rd15751;
	and.b64  	%rd15802, %rd15801, %rd18656;
	or.b64  	%rd15803, %rd15802, %rd15800;
	add.s64 	%rd15804, %rd15793, %rd15803;
	add.s64 	%rd15805, %rd15804, %rd15799;
	add.s32 	%r10842, %r12696, 3;
	mul.wide.s32 	%rd15806, %r10842, 8;
	add.s64 	%rd15807, %rd18240, %rd15806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10843,%dummy}, %rd15794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10844}, %rd15794;
	}
	shf.r.wrap.b32 	%r10845, %r10844, %r10843, 14;
	shf.r.wrap.b32 	%r10846, %r10843, %r10844, 14;
	mov.b64 	%rd15808, {%r10846, %r10845};
	shf.r.wrap.b32 	%r10847, %r10844, %r10843, 18;
	shf.r.wrap.b32 	%r10848, %r10843, %r10844, 18;
	mov.b64 	%rd15809, {%r10848, %r10847};
	xor.b64  	%rd15810, %rd15809, %rd15808;
	shf.l.wrap.b32 	%r10849, %r10843, %r10844, 23;
	shf.l.wrap.b32 	%r10850, %r10844, %r10843, 23;
	mov.b64 	%rd15811, {%r10850, %r10849};
	xor.b64  	%rd15812, %rd15810, %rd15811;
	xor.b64  	%rd15813, %rd15767, %rd15740;
	and.b64  	%rd15814, %rd15794, %rd15813;
	xor.b64  	%rd15815, %rd15814, %rd15740;
	add.s64 	%rd15816, %rd18667, %rd18660;
	ld.const.u64 	%rd15817, [%rd15807];
	add.s64 	%rd15818, %rd15816, %rd15817;
	add.s64 	%rd15819, %rd15818, %rd15815;
	add.s64 	%rd15820, %rd15819, %rd15812;
	add.s64 	%rd15821, %rd15820, %rd18656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10851,%dummy}, %rd15805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10852}, %rd15805;
	}
	shf.r.wrap.b32 	%r10853, %r10852, %r10851, 28;
	shf.r.wrap.b32 	%r10854, %r10851, %r10852, 28;
	mov.b64 	%rd15822, {%r10854, %r10853};
	shf.l.wrap.b32 	%r10855, %r10851, %r10852, 30;
	shf.l.wrap.b32 	%r10856, %r10852, %r10851, 30;
	mov.b64 	%rd15823, {%r10856, %r10855};
	xor.b64  	%rd15824, %rd15823, %rd15822;
	shf.l.wrap.b32 	%r10857, %r10851, %r10852, 25;
	shf.l.wrap.b32 	%r10858, %r10852, %r10851, 25;
	mov.b64 	%rd15825, {%r10858, %r10857};
	xor.b64  	%rd15826, %rd15824, %rd15825;
	and.b64  	%rd15827, %rd15805, %rd15778;
	xor.b64  	%rd15828, %rd15805, %rd15778;
	and.b64  	%rd15829, %rd15828, %rd15751;
	or.b64  	%rd15830, %rd15829, %rd15827;
	add.s64 	%rd15831, %rd15820, %rd15830;
	add.s64 	%rd15832, %rd15831, %rd15826;
	add.s32 	%r10859, %r12696, 4;
	mul.wide.s32 	%rd15833, %r10859, 8;
	add.s64 	%rd15834, %rd18240, %rd15833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10860,%dummy}, %rd15821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10861}, %rd15821;
	}
	shf.r.wrap.b32 	%r10862, %r10861, %r10860, 14;
	shf.r.wrap.b32 	%r10863, %r10860, %r10861, 14;
	mov.b64 	%rd15835, {%r10863, %r10862};
	shf.r.wrap.b32 	%r10864, %r10861, %r10860, 18;
	shf.r.wrap.b32 	%r10865, %r10860, %r10861, 18;
	mov.b64 	%rd15836, {%r10865, %r10864};
	xor.b64  	%rd15837, %rd15836, %rd15835;
	shf.l.wrap.b32 	%r10866, %r10860, %r10861, 23;
	shf.l.wrap.b32 	%r10867, %r10861, %r10860, 23;
	mov.b64 	%rd15838, {%r10867, %r10866};
	xor.b64  	%rd15839, %rd15837, %rd15838;
	xor.b64  	%rd15840, %rd15794, %rd15767;
	and.b64  	%rd15841, %rd15821, %rd15840;
	xor.b64  	%rd15842, %rd15841, %rd15767;
	add.s64 	%rd15843, %rd15740, %rd18668;
	ld.const.u64 	%rd15844, [%rd15834];
	add.s64 	%rd15845, %rd15843, %rd15844;
	add.s64 	%rd15846, %rd15845, %rd15842;
	add.s64 	%rd15847, %rd15846, %rd15839;
	add.s64 	%rd15848, %rd15847, %rd15751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10868,%dummy}, %rd15832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10869}, %rd15832;
	}
	shf.r.wrap.b32 	%r10870, %r10869, %r10868, 28;
	shf.r.wrap.b32 	%r10871, %r10868, %r10869, 28;
	mov.b64 	%rd15849, {%r10871, %r10870};
	shf.l.wrap.b32 	%r10872, %r10868, %r10869, 30;
	shf.l.wrap.b32 	%r10873, %r10869, %r10868, 30;
	mov.b64 	%rd15850, {%r10873, %r10872};
	xor.b64  	%rd15851, %rd15850, %rd15849;
	shf.l.wrap.b32 	%r10874, %r10868, %r10869, 25;
	shf.l.wrap.b32 	%r10875, %r10869, %r10868, 25;
	mov.b64 	%rd15852, {%r10875, %r10874};
	xor.b64  	%rd15853, %rd15851, %rd15852;
	and.b64  	%rd15854, %rd15832, %rd15805;
	xor.b64  	%rd15855, %rd15832, %rd15805;
	and.b64  	%rd15856, %rd15855, %rd15778;
	or.b64  	%rd15857, %rd15856, %rd15854;
	add.s64 	%rd15858, %rd15847, %rd15857;
	add.s64 	%rd15859, %rd15858, %rd15853;
	add.s32 	%r10876, %r12696, 5;
	mul.wide.s32 	%rd15860, %r10876, 8;
	add.s64 	%rd15861, %rd18240, %rd15860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10877,%dummy}, %rd15848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10878}, %rd15848;
	}
	shf.r.wrap.b32 	%r10879, %r10878, %r10877, 14;
	shf.r.wrap.b32 	%r10880, %r10877, %r10878, 14;
	mov.b64 	%rd15862, {%r10880, %r10879};
	shf.r.wrap.b32 	%r10881, %r10878, %r10877, 18;
	shf.r.wrap.b32 	%r10882, %r10877, %r10878, 18;
	mov.b64 	%rd15863, {%r10882, %r10881};
	xor.b64  	%rd15864, %rd15863, %rd15862;
	shf.l.wrap.b32 	%r10883, %r10877, %r10878, 23;
	shf.l.wrap.b32 	%r10884, %r10878, %r10877, 23;
	mov.b64 	%rd15865, {%r10884, %r10883};
	xor.b64  	%rd15866, %rd15864, %rd15865;
	xor.b64  	%rd15867, %rd15821, %rd15794;
	and.b64  	%rd15868, %rd15848, %rd15867;
	xor.b64  	%rd15869, %rd15868, %rd15794;
	add.s64 	%rd15870, %rd15767, %rd18669;
	ld.const.u64 	%rd15871, [%rd15861];
	add.s64 	%rd15872, %rd15870, %rd15871;
	add.s64 	%rd15873, %rd15872, %rd15869;
	add.s64 	%rd15874, %rd15873, %rd15866;
	add.s64 	%rd15875, %rd15874, %rd15778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10885,%dummy}, %rd15859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10886}, %rd15859;
	}
	shf.r.wrap.b32 	%r10887, %r10886, %r10885, 28;
	shf.r.wrap.b32 	%r10888, %r10885, %r10886, 28;
	mov.b64 	%rd15876, {%r10888, %r10887};
	shf.l.wrap.b32 	%r10889, %r10885, %r10886, 30;
	shf.l.wrap.b32 	%r10890, %r10886, %r10885, 30;
	mov.b64 	%rd15877, {%r10890, %r10889};
	xor.b64  	%rd15878, %rd15877, %rd15876;
	shf.l.wrap.b32 	%r10891, %r10885, %r10886, 25;
	shf.l.wrap.b32 	%r10892, %r10886, %r10885, 25;
	mov.b64 	%rd15879, {%r10892, %r10891};
	xor.b64  	%rd15880, %rd15878, %rd15879;
	and.b64  	%rd15881, %rd15859, %rd15832;
	xor.b64  	%rd15882, %rd15859, %rd15832;
	and.b64  	%rd15883, %rd15882, %rd15805;
	or.b64  	%rd15884, %rd15883, %rd15881;
	add.s64 	%rd15885, %rd15874, %rd15884;
	add.s64 	%rd15886, %rd15885, %rd15880;
	add.s32 	%r10893, %r12696, 6;
	mul.wide.s32 	%rd15887, %r10893, 8;
	add.s64 	%rd15888, %rd18240, %rd15887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10894,%dummy}, %rd15875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10895}, %rd15875;
	}
	shf.r.wrap.b32 	%r10896, %r10895, %r10894, 14;
	shf.r.wrap.b32 	%r10897, %r10894, %r10895, 14;
	mov.b64 	%rd15889, {%r10897, %r10896};
	shf.r.wrap.b32 	%r10898, %r10895, %r10894, 18;
	shf.r.wrap.b32 	%r10899, %r10894, %r10895, 18;
	mov.b64 	%rd15890, {%r10899, %r10898};
	xor.b64  	%rd15891, %rd15890, %rd15889;
	shf.l.wrap.b32 	%r10900, %r10894, %r10895, 23;
	shf.l.wrap.b32 	%r10901, %r10895, %r10894, 23;
	mov.b64 	%rd15892, {%r10901, %r10900};
	xor.b64  	%rd15893, %rd15891, %rd15892;
	xor.b64  	%rd15894, %rd15848, %rd15821;
	and.b64  	%rd15895, %rd15875, %rd15894;
	xor.b64  	%rd15896, %rd15895, %rd15821;
	add.s64 	%rd15897, %rd15794, %rd18670;
	ld.const.u64 	%rd15898, [%rd15888];
	add.s64 	%rd15899, %rd15897, %rd15898;
	add.s64 	%rd15900, %rd15899, %rd15896;
	add.s64 	%rd15901, %rd15900, %rd15893;
	add.s64 	%rd15902, %rd15901, %rd15805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10902,%dummy}, %rd15886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10903}, %rd15886;
	}
	shf.r.wrap.b32 	%r10904, %r10903, %r10902, 28;
	shf.r.wrap.b32 	%r10905, %r10902, %r10903, 28;
	mov.b64 	%rd15903, {%r10905, %r10904};
	shf.l.wrap.b32 	%r10906, %r10902, %r10903, 30;
	shf.l.wrap.b32 	%r10907, %r10903, %r10902, 30;
	mov.b64 	%rd15904, {%r10907, %r10906};
	xor.b64  	%rd15905, %rd15904, %rd15903;
	shf.l.wrap.b32 	%r10908, %r10902, %r10903, 25;
	shf.l.wrap.b32 	%r10909, %r10903, %r10902, 25;
	mov.b64 	%rd15906, {%r10909, %r10908};
	xor.b64  	%rd15907, %rd15905, %rd15906;
	and.b64  	%rd15908, %rd15886, %rd15859;
	xor.b64  	%rd15909, %rd15886, %rd15859;
	and.b64  	%rd15910, %rd15909, %rd15832;
	or.b64  	%rd15911, %rd15910, %rd15908;
	add.s64 	%rd15912, %rd15901, %rd15911;
	add.s64 	%rd15913, %rd15912, %rd15907;
	add.s32 	%r10910, %r12696, 7;
	mul.wide.s32 	%rd15914, %r10910, 8;
	add.s64 	%rd15915, %rd18240, %rd15914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10911,%dummy}, %rd15902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10912}, %rd15902;
	}
	shf.r.wrap.b32 	%r10913, %r10912, %r10911, 14;
	shf.r.wrap.b32 	%r10914, %r10911, %r10912, 14;
	mov.b64 	%rd15916, {%r10914, %r10913};
	shf.r.wrap.b32 	%r10915, %r10912, %r10911, 18;
	shf.r.wrap.b32 	%r10916, %r10911, %r10912, 18;
	mov.b64 	%rd15917, {%r10916, %r10915};
	xor.b64  	%rd15918, %rd15917, %rd15916;
	shf.l.wrap.b32 	%r10917, %r10911, %r10912, 23;
	shf.l.wrap.b32 	%r10918, %r10912, %r10911, 23;
	mov.b64 	%rd15919, {%r10918, %r10917};
	xor.b64  	%rd15920, %rd15918, %rd15919;
	xor.b64  	%rd15921, %rd15875, %rd15848;
	and.b64  	%rd15922, %rd15902, %rd15921;
	xor.b64  	%rd15923, %rd15922, %rd15848;
	add.s64 	%rd15924, %rd15821, %rd18671;
	ld.const.u64 	%rd15925, [%rd15915];
	add.s64 	%rd15926, %rd15924, %rd15925;
	add.s64 	%rd15927, %rd15926, %rd15923;
	add.s64 	%rd15928, %rd15927, %rd15920;
	add.s64 	%rd15929, %rd15928, %rd15832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10919,%dummy}, %rd15913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10920}, %rd15913;
	}
	shf.r.wrap.b32 	%r10921, %r10920, %r10919, 28;
	shf.r.wrap.b32 	%r10922, %r10919, %r10920, 28;
	mov.b64 	%rd15930, {%r10922, %r10921};
	shf.l.wrap.b32 	%r10923, %r10919, %r10920, 30;
	shf.l.wrap.b32 	%r10924, %r10920, %r10919, 30;
	mov.b64 	%rd15931, {%r10924, %r10923};
	xor.b64  	%rd15932, %rd15931, %rd15930;
	shf.l.wrap.b32 	%r10925, %r10919, %r10920, 25;
	shf.l.wrap.b32 	%r10926, %r10920, %r10919, 25;
	mov.b64 	%rd15933, {%r10926, %r10925};
	xor.b64  	%rd15934, %rd15932, %rd15933;
	and.b64  	%rd15935, %rd15913, %rd15886;
	xor.b64  	%rd15936, %rd15913, %rd15886;
	and.b64  	%rd15937, %rd15936, %rd15859;
	or.b64  	%rd15938, %rd15937, %rd15935;
	add.s64 	%rd15939, %rd15928, %rd15938;
	add.s64 	%rd15940, %rd15939, %rd15934;
	add.s32 	%r10927, %r12696, 8;
	mul.wide.s32 	%rd15941, %r10927, 8;
	add.s64 	%rd15942, %rd18240, %rd15941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10928,%dummy}, %rd15929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10929}, %rd15929;
	}
	shf.r.wrap.b32 	%r10930, %r10929, %r10928, 14;
	shf.r.wrap.b32 	%r10931, %r10928, %r10929, 14;
	mov.b64 	%rd15943, {%r10931, %r10930};
	shf.r.wrap.b32 	%r10932, %r10929, %r10928, 18;
	shf.r.wrap.b32 	%r10933, %r10928, %r10929, 18;
	mov.b64 	%rd15944, {%r10933, %r10932};
	xor.b64  	%rd15945, %rd15944, %rd15943;
	shf.l.wrap.b32 	%r10934, %r10928, %r10929, 23;
	shf.l.wrap.b32 	%r10935, %r10929, %r10928, 23;
	mov.b64 	%rd15946, {%r10935, %r10934};
	xor.b64  	%rd15947, %rd15945, %rd15946;
	xor.b64  	%rd15948, %rd15902, %rd15875;
	and.b64  	%rd15949, %rd15929, %rd15948;
	xor.b64  	%rd15950, %rd15949, %rd15875;
	add.s64 	%rd15951, %rd15848, %rd18655;
	ld.const.u64 	%rd15952, [%rd15942];
	add.s64 	%rd15953, %rd15951, %rd15952;
	add.s64 	%rd15954, %rd15953, %rd15950;
	add.s64 	%rd15955, %rd15954, %rd15947;
	add.s64 	%rd15956, %rd15955, %rd15859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10936,%dummy}, %rd15940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10937}, %rd15940;
	}
	shf.r.wrap.b32 	%r10938, %r10937, %r10936, 28;
	shf.r.wrap.b32 	%r10939, %r10936, %r10937, 28;
	mov.b64 	%rd15957, {%r10939, %r10938};
	shf.l.wrap.b32 	%r10940, %r10936, %r10937, 30;
	shf.l.wrap.b32 	%r10941, %r10937, %r10936, 30;
	mov.b64 	%rd15958, {%r10941, %r10940};
	xor.b64  	%rd15959, %rd15958, %rd15957;
	shf.l.wrap.b32 	%r10942, %r10936, %r10937, 25;
	shf.l.wrap.b32 	%r10943, %r10937, %r10936, 25;
	mov.b64 	%rd15960, {%r10943, %r10942};
	xor.b64  	%rd15961, %rd15959, %rd15960;
	and.b64  	%rd15962, %rd15940, %rd15913;
	xor.b64  	%rd15963, %rd15940, %rd15913;
	and.b64  	%rd15964, %rd15963, %rd15886;
	or.b64  	%rd15965, %rd15964, %rd15962;
	add.s64 	%rd15966, %rd15955, %rd15965;
	add.s64 	%rd15967, %rd15966, %rd15961;
	add.s32 	%r10944, %r12696, 9;
	mul.wide.s32 	%rd15968, %r10944, 8;
	add.s64 	%rd15969, %rd18240, %rd15968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10945,%dummy}, %rd15956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10946}, %rd15956;
	}
	shf.r.wrap.b32 	%r10947, %r10946, %r10945, 14;
	shf.r.wrap.b32 	%r10948, %r10945, %r10946, 14;
	mov.b64 	%rd15970, {%r10948, %r10947};
	shf.r.wrap.b32 	%r10949, %r10946, %r10945, 18;
	shf.r.wrap.b32 	%r10950, %r10945, %r10946, 18;
	mov.b64 	%rd15971, {%r10950, %r10949};
	xor.b64  	%rd15972, %rd15971, %rd15970;
	shf.l.wrap.b32 	%r10951, %r10945, %r10946, 23;
	shf.l.wrap.b32 	%r10952, %r10946, %r10945, 23;
	mov.b64 	%rd15973, {%r10952, %r10951};
	xor.b64  	%rd15974, %rd15972, %rd15973;
	xor.b64  	%rd15975, %rd15929, %rd15902;
	and.b64  	%rd15976, %rd15956, %rd15975;
	xor.b64  	%rd15977, %rd15976, %rd15902;
	add.s64 	%rd15978, %rd15875, %rd18654;
	ld.const.u64 	%rd15979, [%rd15969];
	add.s64 	%rd15980, %rd15978, %rd15979;
	add.s64 	%rd15981, %rd15980, %rd15977;
	add.s64 	%rd15982, %rd15981, %rd15974;
	add.s64 	%rd15983, %rd15982, %rd15886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10953,%dummy}, %rd15967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10954}, %rd15967;
	}
	shf.r.wrap.b32 	%r10955, %r10954, %r10953, 28;
	shf.r.wrap.b32 	%r10956, %r10953, %r10954, 28;
	mov.b64 	%rd15984, {%r10956, %r10955};
	shf.l.wrap.b32 	%r10957, %r10953, %r10954, 30;
	shf.l.wrap.b32 	%r10958, %r10954, %r10953, 30;
	mov.b64 	%rd15985, {%r10958, %r10957};
	xor.b64  	%rd15986, %rd15985, %rd15984;
	shf.l.wrap.b32 	%r10959, %r10953, %r10954, 25;
	shf.l.wrap.b32 	%r10960, %r10954, %r10953, 25;
	mov.b64 	%rd15987, {%r10960, %r10959};
	xor.b64  	%rd15988, %rd15986, %rd15987;
	and.b64  	%rd15989, %rd15967, %rd15940;
	xor.b64  	%rd15990, %rd15967, %rd15940;
	and.b64  	%rd15991, %rd15990, %rd15913;
	or.b64  	%rd15992, %rd15991, %rd15989;
	add.s64 	%rd15993, %rd15982, %rd15992;
	add.s64 	%rd15994, %rd15993, %rd15988;
	add.s32 	%r10961, %r12696, 10;
	mul.wide.s32 	%rd15995, %r10961, 8;
	add.s64 	%rd15996, %rd18240, %rd15995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10962,%dummy}, %rd15983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10963}, %rd15983;
	}
	shf.r.wrap.b32 	%r10964, %r10963, %r10962, 14;
	shf.r.wrap.b32 	%r10965, %r10962, %r10963, 14;
	mov.b64 	%rd15997, {%r10965, %r10964};
	shf.r.wrap.b32 	%r10966, %r10963, %r10962, 18;
	shf.r.wrap.b32 	%r10967, %r10962, %r10963, 18;
	mov.b64 	%rd15998, {%r10967, %r10966};
	xor.b64  	%rd15999, %rd15998, %rd15997;
	shf.l.wrap.b32 	%r10968, %r10962, %r10963, 23;
	shf.l.wrap.b32 	%r10969, %r10963, %r10962, 23;
	mov.b64 	%rd16000, {%r10969, %r10968};
	xor.b64  	%rd16001, %rd15999, %rd16000;
	xor.b64  	%rd16002, %rd15956, %rd15929;
	and.b64  	%rd16003, %rd15983, %rd16002;
	xor.b64  	%rd16004, %rd16003, %rd15929;
	add.s64 	%rd16005, %rd15902, %rd18653;
	ld.const.u64 	%rd16006, [%rd15996];
	add.s64 	%rd16007, %rd16005, %rd16006;
	add.s64 	%rd16008, %rd16007, %rd16004;
	add.s64 	%rd16009, %rd16008, %rd16001;
	add.s64 	%rd16010, %rd16009, %rd15913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10970,%dummy}, %rd15994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10971}, %rd15994;
	}
	shf.r.wrap.b32 	%r10972, %r10971, %r10970, 28;
	shf.r.wrap.b32 	%r10973, %r10970, %r10971, 28;
	mov.b64 	%rd16011, {%r10973, %r10972};
	shf.l.wrap.b32 	%r10974, %r10970, %r10971, 30;
	shf.l.wrap.b32 	%r10975, %r10971, %r10970, 30;
	mov.b64 	%rd16012, {%r10975, %r10974};
	xor.b64  	%rd16013, %rd16012, %rd16011;
	shf.l.wrap.b32 	%r10976, %r10970, %r10971, 25;
	shf.l.wrap.b32 	%r10977, %r10971, %r10970, 25;
	mov.b64 	%rd16014, {%r10977, %r10976};
	xor.b64  	%rd16015, %rd16013, %rd16014;
	and.b64  	%rd16016, %rd15994, %rd15967;
	xor.b64  	%rd16017, %rd15994, %rd15967;
	and.b64  	%rd16018, %rd16017, %rd15940;
	or.b64  	%rd16019, %rd16018, %rd16016;
	add.s64 	%rd16020, %rd16009, %rd16019;
	add.s64 	%rd16021, %rd16020, %rd16015;
	add.s32 	%r10978, %r12696, 11;
	mul.wide.s32 	%rd16022, %r10978, 8;
	add.s64 	%rd16023, %rd18240, %rd16022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10979,%dummy}, %rd16010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10980}, %rd16010;
	}
	shf.r.wrap.b32 	%r10981, %r10980, %r10979, 14;
	shf.r.wrap.b32 	%r10982, %r10979, %r10980, 14;
	mov.b64 	%rd16024, {%r10982, %r10981};
	shf.r.wrap.b32 	%r10983, %r10980, %r10979, 18;
	shf.r.wrap.b32 	%r10984, %r10979, %r10980, 18;
	mov.b64 	%rd16025, {%r10984, %r10983};
	xor.b64  	%rd16026, %rd16025, %rd16024;
	shf.l.wrap.b32 	%r10985, %r10979, %r10980, 23;
	shf.l.wrap.b32 	%r10986, %r10980, %r10979, 23;
	mov.b64 	%rd16027, {%r10986, %r10985};
	xor.b64  	%rd16028, %rd16026, %rd16027;
	xor.b64  	%rd16029, %rd15983, %rd15956;
	and.b64  	%rd16030, %rd16010, %rd16029;
	xor.b64  	%rd16031, %rd16030, %rd15956;
	add.s64 	%rd16032, %rd15929, %rd18652;
	ld.const.u64 	%rd16033, [%rd16023];
	add.s64 	%rd16034, %rd16032, %rd16033;
	add.s64 	%rd16035, %rd16034, %rd16031;
	add.s64 	%rd16036, %rd16035, %rd16028;
	add.s64 	%rd16037, %rd16036, %rd15940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10987,%dummy}, %rd16021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10988}, %rd16021;
	}
	shf.r.wrap.b32 	%r10989, %r10988, %r10987, 28;
	shf.r.wrap.b32 	%r10990, %r10987, %r10988, 28;
	mov.b64 	%rd16038, {%r10990, %r10989};
	shf.l.wrap.b32 	%r10991, %r10987, %r10988, 30;
	shf.l.wrap.b32 	%r10992, %r10988, %r10987, 30;
	mov.b64 	%rd16039, {%r10992, %r10991};
	xor.b64  	%rd16040, %rd16039, %rd16038;
	shf.l.wrap.b32 	%r10993, %r10987, %r10988, 25;
	shf.l.wrap.b32 	%r10994, %r10988, %r10987, 25;
	mov.b64 	%rd16041, {%r10994, %r10993};
	xor.b64  	%rd16042, %rd16040, %rd16041;
	and.b64  	%rd16043, %rd16021, %rd15994;
	xor.b64  	%rd16044, %rd16021, %rd15994;
	and.b64  	%rd16045, %rd16044, %rd15967;
	or.b64  	%rd16046, %rd16045, %rd16043;
	add.s64 	%rd16047, %rd16036, %rd16046;
	add.s64 	%rd16048, %rd16047, %rd16042;
	add.s32 	%r10995, %r12696, 12;
	mul.wide.s32 	%rd16049, %r10995, 8;
	add.s64 	%rd16050, %rd18240, %rd16049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10996,%dummy}, %rd16037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10997}, %rd16037;
	}
	shf.r.wrap.b32 	%r10998, %r10997, %r10996, 14;
	shf.r.wrap.b32 	%r10999, %r10996, %r10997, 14;
	mov.b64 	%rd16051, {%r10999, %r10998};
	shf.r.wrap.b32 	%r11000, %r10997, %r10996, 18;
	shf.r.wrap.b32 	%r11001, %r10996, %r10997, 18;
	mov.b64 	%rd16052, {%r11001, %r11000};
	xor.b64  	%rd16053, %rd16052, %rd16051;
	shf.l.wrap.b32 	%r11002, %r10996, %r10997, 23;
	shf.l.wrap.b32 	%r11003, %r10997, %r10996, 23;
	mov.b64 	%rd16054, {%r11003, %r11002};
	xor.b64  	%rd16055, %rd16053, %rd16054;
	xor.b64  	%rd16056, %rd16010, %rd15983;
	and.b64  	%rd16057, %rd16037, %rd16056;
	xor.b64  	%rd16058, %rd16057, %rd15983;
	add.s64 	%rd16059, %rd15956, %rd18651;
	ld.const.u64 	%rd16060, [%rd16050];
	add.s64 	%rd16061, %rd16059, %rd16060;
	add.s64 	%rd16062, %rd16061, %rd16058;
	add.s64 	%rd16063, %rd16062, %rd16055;
	add.s64 	%rd18663, %rd16063, %rd15967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11004,%dummy}, %rd16048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11005}, %rd16048;
	}
	shf.r.wrap.b32 	%r11006, %r11005, %r11004, 28;
	shf.r.wrap.b32 	%r11007, %r11004, %r11005, 28;
	mov.b64 	%rd16064, {%r11007, %r11006};
	shf.l.wrap.b32 	%r11008, %r11004, %r11005, 30;
	shf.l.wrap.b32 	%r11009, %r11005, %r11004, 30;
	mov.b64 	%rd16065, {%r11009, %r11008};
	xor.b64  	%rd16066, %rd16065, %rd16064;
	shf.l.wrap.b32 	%r11010, %r11004, %r11005, 25;
	shf.l.wrap.b32 	%r11011, %r11005, %r11004, 25;
	mov.b64 	%rd16067, {%r11011, %r11010};
	xor.b64  	%rd16068, %rd16066, %rd16067;
	and.b64  	%rd16069, %rd16048, %rd16021;
	xor.b64  	%rd16070, %rd16048, %rd16021;
	and.b64  	%rd16071, %rd16070, %rd15994;
	or.b64  	%rd16072, %rd16071, %rd16069;
	add.s64 	%rd16073, %rd16063, %rd16072;
	add.s64 	%rd18659, %rd16073, %rd16068;
	add.s32 	%r11012, %r12696, 13;
	mul.wide.s32 	%rd16074, %r11012, 8;
	add.s64 	%rd16075, %rd18240, %rd16074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11013,%dummy}, %rd18663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11014}, %rd18663;
	}
	shf.r.wrap.b32 	%r11015, %r11014, %r11013, 14;
	shf.r.wrap.b32 	%r11016, %r11013, %r11014, 14;
	mov.b64 	%rd16076, {%r11016, %r11015};
	shf.r.wrap.b32 	%r11017, %r11014, %r11013, 18;
	shf.r.wrap.b32 	%r11018, %r11013, %r11014, 18;
	mov.b64 	%rd16077, {%r11018, %r11017};
	xor.b64  	%rd16078, %rd16077, %rd16076;
	shf.l.wrap.b32 	%r11019, %r11013, %r11014, 23;
	shf.l.wrap.b32 	%r11020, %r11014, %r11013, 23;
	mov.b64 	%rd16079, {%r11020, %r11019};
	xor.b64  	%rd16080, %rd16078, %rd16079;
	xor.b64  	%rd16081, %rd16037, %rd16010;
	and.b64  	%rd16082, %rd18663, %rd16081;
	xor.b64  	%rd16083, %rd16082, %rd16010;
	add.s64 	%rd16084, %rd15983, %rd18650;
	ld.const.u64 	%rd16085, [%rd16075];
	add.s64 	%rd16086, %rd16084, %rd16085;
	add.s64 	%rd16087, %rd16086, %rd16083;
	add.s64 	%rd16088, %rd16087, %rd16080;
	add.s64 	%rd18662, %rd16088, %rd15994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11021,%dummy}, %rd18659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11022}, %rd18659;
	}
	shf.r.wrap.b32 	%r11023, %r11022, %r11021, 28;
	shf.r.wrap.b32 	%r11024, %r11021, %r11022, 28;
	mov.b64 	%rd16089, {%r11024, %r11023};
	shf.l.wrap.b32 	%r11025, %r11021, %r11022, 30;
	shf.l.wrap.b32 	%r11026, %r11022, %r11021, 30;
	mov.b64 	%rd16090, {%r11026, %r11025};
	xor.b64  	%rd16091, %rd16090, %rd16089;
	shf.l.wrap.b32 	%r11027, %r11021, %r11022, 25;
	shf.l.wrap.b32 	%r11028, %r11022, %r11021, 25;
	mov.b64 	%rd16092, {%r11028, %r11027};
	xor.b64  	%rd16093, %rd16091, %rd16092;
	and.b64  	%rd16094, %rd18659, %rd16048;
	xor.b64  	%rd16095, %rd18659, %rd16048;
	and.b64  	%rd16096, %rd16095, %rd16021;
	or.b64  	%rd16097, %rd16096, %rd16094;
	add.s64 	%rd16098, %rd16088, %rd16097;
	add.s64 	%rd18658, %rd16098, %rd16093;
	add.s32 	%r11029, %r12696, 14;
	mul.wide.s32 	%rd16099, %r11029, 8;
	add.s64 	%rd16100, %rd18240, %rd16099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11030,%dummy}, %rd18662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd18662;
	}
	shf.r.wrap.b32 	%r11032, %r11031, %r11030, 14;
	shf.r.wrap.b32 	%r11033, %r11030, %r11031, 14;
	mov.b64 	%rd16101, {%r11033, %r11032};
	shf.r.wrap.b32 	%r11034, %r11031, %r11030, 18;
	shf.r.wrap.b32 	%r11035, %r11030, %r11031, 18;
	mov.b64 	%rd16102, {%r11035, %r11034};
	xor.b64  	%rd16103, %rd16102, %rd16101;
	shf.l.wrap.b32 	%r11036, %r11030, %r11031, 23;
	shf.l.wrap.b32 	%r11037, %r11031, %r11030, 23;
	mov.b64 	%rd16104, {%r11037, %r11036};
	xor.b64  	%rd16105, %rd16103, %rd16104;
	xor.b64  	%rd16106, %rd18663, %rd16037;
	and.b64  	%rd16107, %rd18662, %rd16106;
	xor.b64  	%rd16108, %rd16107, %rd16037;
	add.s64 	%rd16109, %rd16010, %rd18649;
	ld.const.u64 	%rd16110, [%rd16100];
	add.s64 	%rd16111, %rd16109, %rd16110;
	add.s64 	%rd16112, %rd16111, %rd16108;
	add.s64 	%rd16113, %rd16112, %rd16105;
	add.s64 	%rd18661, %rd16113, %rd16021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11038,%dummy}, %rd18658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11039}, %rd18658;
	}
	shf.r.wrap.b32 	%r11040, %r11039, %r11038, 28;
	shf.r.wrap.b32 	%r11041, %r11038, %r11039, 28;
	mov.b64 	%rd16114, {%r11041, %r11040};
	shf.l.wrap.b32 	%r11042, %r11038, %r11039, 30;
	shf.l.wrap.b32 	%r11043, %r11039, %r11038, 30;
	mov.b64 	%rd16115, {%r11043, %r11042};
	xor.b64  	%rd16116, %rd16115, %rd16114;
	shf.l.wrap.b32 	%r11044, %r11038, %r11039, 25;
	shf.l.wrap.b32 	%r11045, %r11039, %r11038, 25;
	mov.b64 	%rd16117, {%r11045, %r11044};
	xor.b64  	%rd16118, %rd16116, %rd16117;
	and.b64  	%rd16119, %rd18658, %rd18659;
	xor.b64  	%rd16120, %rd18658, %rd18659;
	and.b64  	%rd16121, %rd16120, %rd16048;
	or.b64  	%rd16122, %rd16121, %rd16119;
	add.s64 	%rd16123, %rd16113, %rd16122;
	add.s64 	%rd18657, %rd16123, %rd16118;
	add.s32 	%r11046, %r12696, 15;
	mul.wide.s32 	%rd16124, %r11046, 8;
	add.s64 	%rd16125, %rd18240, %rd16124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11047,%dummy}, %rd18661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11048}, %rd18661;
	}
	shf.r.wrap.b32 	%r11049, %r11048, %r11047, 14;
	shf.r.wrap.b32 	%r11050, %r11047, %r11048, 14;
	mov.b64 	%rd16126, {%r11050, %r11049};
	shf.r.wrap.b32 	%r11051, %r11048, %r11047, 18;
	shf.r.wrap.b32 	%r11052, %r11047, %r11048, 18;
	mov.b64 	%rd16127, {%r11052, %r11051};
	xor.b64  	%rd16128, %rd16127, %rd16126;
	shf.l.wrap.b32 	%r11053, %r11047, %r11048, 23;
	shf.l.wrap.b32 	%r11054, %r11048, %r11047, 23;
	mov.b64 	%rd16129, {%r11054, %r11053};
	xor.b64  	%rd16130, %rd16128, %rd16129;
	xor.b64  	%rd16131, %rd18662, %rd18663;
	and.b64  	%rd16132, %rd18661, %rd16131;
	xor.b64  	%rd16133, %rd16132, %rd18663;
	add.s64 	%rd16134, %rd16037, %rd18648;
	ld.const.u64 	%rd16135, [%rd16125];
	add.s64 	%rd16136, %rd16134, %rd16135;
	add.s64 	%rd16137, %rd16136, %rd16133;
	add.s64 	%rd16138, %rd16137, %rd16130;
	add.s64 	%rd18660, %rd16138, %rd16048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11055,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11056}, %rd18657;
	}
	shf.r.wrap.b32 	%r11057, %r11056, %r11055, 28;
	shf.r.wrap.b32 	%r11058, %r11055, %r11056, 28;
	mov.b64 	%rd16139, {%r11058, %r11057};
	shf.l.wrap.b32 	%r11059, %r11055, %r11056, 30;
	shf.l.wrap.b32 	%r11060, %r11056, %r11055, 30;
	mov.b64 	%rd16140, {%r11060, %r11059};
	xor.b64  	%rd16141, %rd16140, %rd16139;
	shf.l.wrap.b32 	%r11061, %r11055, %r11056, 25;
	shf.l.wrap.b32 	%r11062, %r11056, %r11055, 25;
	mov.b64 	%rd16142, {%r11062, %r11061};
	xor.b64  	%rd16143, %rd16141, %rd16142;
	and.b64  	%rd16144, %rd18657, %rd18658;
	xor.b64  	%rd16145, %rd18657, %rd18658;
	and.b64  	%rd16146, %rd16145, %rd18659;
	or.b64  	%rd16147, %rd16146, %rd16144;
	add.s64 	%rd16148, %rd16138, %rd16147;
	add.s64 	%rd18656, %rd16148, %rd16143;
	add.s32 	%r12696, %r12696, 16;
	setp.lt.s32	%p144, %r12696, 80;
	@%p144 bra 	BB0_241;

	add.s64 	%rd16149, %rd18656, %rd1188;
	st.local.u64 	[%rd1], %rd16149;
	add.s64 	%rd16150, %rd18657, %rd1189;
	st.local.u64 	[%rd1+8], %rd16150;
	add.s64 	%rd16151, %rd18658, %rd1190;
	st.local.u64 	[%rd1+16], %rd16151;
	add.s64 	%rd16152, %rd18659, %rd1187;
	st.local.u64 	[%rd1+24], %rd16152;
	add.s64 	%rd16153, %rd18660, %rd1182;
	st.local.u64 	[%rd1+32], %rd16153;
	add.s64 	%rd16154, %rd18661, %rd1184;
	st.local.u64 	[%rd1+40], %rd16154;
	add.s64 	%rd16155, %rd18662, %rd1183;
	st.local.u64 	[%rd1+48], %rd16155;
	add.s64 	%rd16156, %rd18663, %rd1185;
	st.local.u64 	[%rd1+56], %rd16156;
	sub.s32 	%r358, %r3, %r338;
	setp.lt.s32	%p145, %r358, 1;
	@%p145 bra 	BB0_260;

	add.s32 	%r359, %r337, -128;
	and.b32  	%r360, %r359, 3;
	setp.eq.s32	%p146, %r360, 0;
	mov.u32 	%r12700, 0;
	@%p146 bra 	BB0_249;

	setp.eq.s32	%p147, %r360, 1;
	mov.u32 	%r12698, 0;
	@%p147 bra 	BB0_248;

	setp.eq.s32	%p148, %r360, 2;
	mov.u32 	%r12697, 0;
	@%p148 bra 	BB0_247;

	xor.b32  	%r11067, %r338, 7;
	cvt.u64.u32	%rd16157, %r11067;
	add.s64 	%rd16158, %rd1462, %rd16157;
	ld.local.u8 	%rs249, [%rd16158];
	st.local.u8 	[%rd1181], %rs249;
	mov.u32 	%r12697, 1;

BB0_247:
	add.s32 	%r11068, %r12697, %r338;
	xor.b32  	%r11069, %r11068, 7;
	cvt.s64.s32	%rd16159, %r11069;
	add.s64 	%rd16160, %rd1462, %rd16159;
	ld.local.u8 	%rs250, [%rd16160];
	xor.b32  	%r11070, %r12697, 7;
	cvt.u64.u32	%rd16161, %r11070;
	add.s64 	%rd16162, %rd90, %rd16161;
	st.local.u8 	[%rd16162], %rs250;
	add.s32 	%r12698, %r12697, 1;

BB0_248:
	add.s32 	%r11071, %r12698, %r338;
	xor.b32  	%r11072, %r11071, 7;
	cvt.s64.s32	%rd16163, %r11072;
	add.s64 	%rd16164, %rd1462, %rd16163;
	ld.local.u8 	%rs251, [%rd16164];
	xor.b32  	%r11073, %r12698, 7;
	cvt.s64.s32	%rd16165, %r11073;
	add.s64 	%rd16166, %rd90, %rd16165;
	st.local.u8 	[%rd16166], %rs251;
	add.s32 	%r12700, %r12698, 1;

BB0_249:
	setp.lt.u32	%p149, %r359, 4;
	@%p149 bra 	BB0_260;

BB0_250:
	add.s32 	%r11074, %r12700, %r338;
	xor.b32  	%r11075, %r11074, 7;
	cvt.s64.s32	%rd16167, %r11075;
	add.s64 	%rd16168, %rd1462, %rd16167;
	ld.local.u8 	%rs252, [%rd16168];
	xor.b32  	%r11076, %r12700, 7;
	cvt.s64.s32	%rd16169, %r11076;
	add.s64 	%rd16170, %rd90, %rd16169;
	st.local.u8 	[%rd16170], %rs252;
	add.s32 	%r11077, %r12700, 1;
	add.s32 	%r11078, %r11077, %r338;
	xor.b32  	%r11079, %r11078, 7;
	cvt.s64.s32	%rd16171, %r11079;
	add.s64 	%rd16172, %rd1462, %rd16171;
	ld.local.u8 	%rs253, [%rd16172];
	xor.b32  	%r11080, %r11077, 7;
	cvt.s64.s32	%rd16173, %r11080;
	add.s64 	%rd16174, %rd90, %rd16173;
	st.local.u8 	[%rd16174], %rs253;
	add.s32 	%r11081, %r12700, 2;
	add.s32 	%r11082, %r11081, %r338;
	xor.b32  	%r11083, %r11082, 7;
	cvt.s64.s32	%rd16175, %r11083;
	add.s64 	%rd16176, %rd1462, %rd16175;
	ld.local.u8 	%rs254, [%rd16176];
	xor.b32  	%r11084, %r11081, 7;
	cvt.s64.s32	%rd16177, %r11084;
	add.s64 	%rd16178, %rd90, %rd16177;
	st.local.u8 	[%rd16178], %rs254;
	add.s32 	%r11085, %r12700, 3;
	add.s32 	%r11086, %r11085, %r338;
	xor.b32  	%r11087, %r11086, 7;
	cvt.s64.s32	%rd16179, %r11087;
	add.s64 	%rd16180, %rd1462, %rd16179;
	ld.local.u8 	%rs255, [%rd16180];
	xor.b32  	%r11088, %r11085, 7;
	cvt.s64.s32	%rd16181, %r11088;
	add.s64 	%rd16182, %rd90, %rd16181;
	st.local.u8 	[%rd16182], %rs255;
	add.s32 	%r12700, %r12700, 4;
	setp.lt.s32	%p150, %r12700, %r358;
	@%p150 bra 	BB0_250;

BB0_260:
	add.s32 	%r12687, %r12687, 1;
	cvt.u64.u32	%rd16209, %r12687;
	setp.lt.u64	%p157, %rd16209, %rd1180;
	@%p157 bra 	BB0_278;

	ld.local.u32 	%r11112, [%rd1+192];
	and.b32  	%r384, %r11112, 127;
	sub.s32 	%r385, %r1990, %r384;
	and.b32  	%r386, %r385, 3;
	setp.eq.s32	%p158, %r386, 0;
	mov.u32 	%r12712, %r384;
	@%p158 bra 	BB0_267;

	setp.eq.s32	%p159, %r386, 1;
	mov.u32 	%r12710, %r384;
	@%p159 bra 	BB0_266;

	setp.eq.s32	%p160, %r386, 2;
	mov.u32 	%r12709, %r384;
	@%p160 bra 	BB0_265;

	xor.b32  	%r11114, %r384, 7;
	cvt.u64.u32	%rd16210, %r11114;
	add.s64 	%rd16211, %rd90, %rd16210;
	mov.u16 	%rs263, 0;
	st.local.u8 	[%rd16211], %rs263;
	add.s32 	%r12709, %r384, 1;

BB0_265:
	xor.b32  	%r11115, %r12709, 7;
	cvt.s64.s32	%rd16212, %r11115;
	add.s64 	%rd16213, %rd90, %rd16212;
	mov.u16 	%rs264, 0;
	st.local.u8 	[%rd16213], %rs264;
	add.s32 	%r12710, %r12709, 1;

BB0_266:
	xor.b32  	%r11116, %r12710, 7;
	cvt.s64.s32	%rd16214, %r11116;
	add.s64 	%rd16215, %rd90, %rd16214;
	mov.u16 	%rs265, 0;
	st.local.u8 	[%rd16215], %rs265;
	add.s32 	%r12712, %r12710, 1;

BB0_267:
	setp.lt.u32	%p161, %r385, 4;
	@%p161 bra 	BB0_269;

BB0_268:
	xor.b32  	%r11117, %r12712, 7;
	cvt.s64.s32	%rd16216, %r11117;
	add.s64 	%rd16217, %rd90, %rd16216;
	mov.u16 	%rs266, 0;
	st.local.u8 	[%rd16217], %rs266;
	add.s32 	%r11118, %r12712, 1;
	xor.b32  	%r11119, %r11118, 7;
	cvt.s64.s32	%rd16218, %r11119;
	add.s64 	%rd16219, %rd90, %rd16218;
	st.local.u8 	[%rd16219], %rs266;
	add.s32 	%r11120, %r12712, 2;
	xor.b32  	%r11121, %r11120, 7;
	cvt.s64.s32	%rd16220, %r11121;
	add.s64 	%rd16221, %rd90, %rd16220;
	st.local.u8 	[%rd16221], %rs266;
	add.s32 	%r11122, %r12712, 3;
	xor.b32  	%r11123, %r11122, 7;
	cvt.s64.s32	%rd16222, %r11123;
	add.s64 	%rd16223, %rd90, %rd16222;
	st.local.u8 	[%rd16223], %rs266;
	add.s32 	%r12712, %r12712, 4;
	setp.lt.s32	%p162, %r12712, 128;
	@%p162 bra 	BB0_268;

BB0_269:
	mov.u16 	%rs270, 128;
	xor.b32  	%r11124, %r384, 7;
	cvt.u64.u32	%rd16224, %r11124;
	add.s64 	%rd16225, %rd90, %rd16224;
	st.local.u8 	[%rd16225], %rs270;
	ld.local.u64 	%rd18736, [%rd1+64];
	ld.local.u64 	%rd18737, [%rd1+72];
	ld.local.u64 	%rd18738, [%rd1+80];
	ld.local.u64 	%rd18739, [%rd1+88];
	ld.local.u64 	%rd18740, [%rd1+96];
	ld.local.u64 	%rd18741, [%rd1+104];
	ld.local.u64 	%rd18742, [%rd1+112];
	ld.local.u64 	%rd18743, [%rd1+120];
	ld.local.u64 	%rd18727, [%rd1+128];
	ld.local.u64 	%rd18726, [%rd1+136];
	ld.local.u64 	%rd18725, [%rd1+144];
	ld.local.u64 	%rd18724, [%rd1+152];
	ld.local.u64 	%rd18723, [%rd1+160];
	ld.local.u64 	%rd18722, [%rd1+168];
	ld.local.u64 	%rd18721, [%rd1+176];
	setp.gt.u32	%p163, %r384, 111;
	@%p163 bra 	BB0_271;
	bra.uni 	BB0_270;

BB0_271:
	ld.local.u64 	%rd1285, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11126,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11127}, %rd1285;
	}
	shf.r.wrap.b32 	%r11128, %r11127, %r11126, 14;
	shf.r.wrap.b32 	%r11129, %r11126, %r11127, 14;
	mov.b64 	%rd16226, {%r11129, %r11128};
	shf.r.wrap.b32 	%r11130, %r11127, %r11126, 18;
	shf.r.wrap.b32 	%r11131, %r11126, %r11127, 18;
	mov.b64 	%rd16227, {%r11131, %r11130};
	xor.b64  	%rd16228, %rd16227, %rd16226;
	shf.l.wrap.b32 	%r11132, %r11126, %r11127, 23;
	shf.l.wrap.b32 	%r11133, %r11127, %r11126, 23;
	mov.b64 	%rd16229, {%r11133, %r11132};
	xor.b64  	%rd16230, %rd16228, %rd16229;
	ld.local.u64 	%rd1286, [%rd1+48];
	ld.local.u64 	%rd1287, [%rd1+40];
	xor.b64  	%rd16231, %rd1286, %rd1287;
	and.b64  	%rd16232, %rd16231, %rd1285;
	xor.b64  	%rd16233, %rd16232, %rd1286;
	ld.local.u64 	%rd1288, [%rd1+56];
	add.s64 	%rd16234, %rd1288, %rd18736;
	add.s64 	%rd16235, %rd16234, %rd18338;
	add.s64 	%rd16236, %rd16235, %rd16233;
	add.s64 	%rd16237, %rd16236, %rd16230;
	ld.local.u64 	%rd1289, [%rd1+24];
	add.s64 	%rd16238, %rd16237, %rd1289;
	ld.local.u64 	%rd1290, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11134,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd1290;
	}
	shf.r.wrap.b32 	%r11136, %r11135, %r11134, 28;
	shf.r.wrap.b32 	%r11137, %r11134, %r11135, 28;
	mov.b64 	%rd16239, {%r11137, %r11136};
	shf.l.wrap.b32 	%r11138, %r11134, %r11135, 30;
	shf.l.wrap.b32 	%r11139, %r11135, %r11134, 30;
	mov.b64 	%rd16240, {%r11139, %r11138};
	xor.b64  	%rd16241, %rd16240, %rd16239;
	shf.l.wrap.b32 	%r11140, %r11134, %r11135, 25;
	shf.l.wrap.b32 	%r11141, %r11135, %r11134, 25;
	mov.b64 	%rd16242, {%r11141, %r11140};
	xor.b64  	%rd16243, %rd16241, %rd16242;
	ld.local.u64 	%rd1291, [%rd1+8];
	and.b64  	%rd16244, %rd1291, %rd1290;
	xor.b64  	%rd16245, %rd1291, %rd1290;
	ld.local.u64 	%rd1292, [%rd1+16];
	and.b64  	%rd16246, %rd1292, %rd16245;
	or.b64  	%rd16247, %rd16246, %rd16244;
	add.s64 	%rd16248, %rd16237, %rd16247;
	add.s64 	%rd16249, %rd16248, %rd16243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11142,%dummy}, %rd16238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd16238;
	}
	shf.r.wrap.b32 	%r11144, %r11143, %r11142, 14;
	shf.r.wrap.b32 	%r11145, %r11142, %r11143, 14;
	mov.b64 	%rd16250, {%r11145, %r11144};
	shf.r.wrap.b32 	%r11146, %r11143, %r11142, 18;
	shf.r.wrap.b32 	%r11147, %r11142, %r11143, 18;
	mov.b64 	%rd16251, {%r11147, %r11146};
	xor.b64  	%rd16252, %rd16251, %rd16250;
	shf.l.wrap.b32 	%r11148, %r11142, %r11143, 23;
	shf.l.wrap.b32 	%r11149, %r11143, %r11142, 23;
	mov.b64 	%rd16253, {%r11149, %r11148};
	xor.b64  	%rd16254, %rd16252, %rd16253;
	xor.b64  	%rd16255, %rd1287, %rd1285;
	and.b64  	%rd16256, %rd16238, %rd16255;
	xor.b64  	%rd16257, %rd16256, %rd1287;
	add.s64 	%rd16258, %rd1286, %rd18737;
	add.s64 	%rd16259, %rd16258, %rd18337;
	add.s64 	%rd16260, %rd16259, %rd16257;
	add.s64 	%rd16261, %rd16260, %rd16254;
	add.s64 	%rd16262, %rd16261, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11150,%dummy}, %rd16249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11151}, %rd16249;
	}
	shf.r.wrap.b32 	%r11152, %r11151, %r11150, 28;
	shf.r.wrap.b32 	%r11153, %r11150, %r11151, 28;
	mov.b64 	%rd16263, {%r11153, %r11152};
	shf.l.wrap.b32 	%r11154, %r11150, %r11151, 30;
	shf.l.wrap.b32 	%r11155, %r11151, %r11150, 30;
	mov.b64 	%rd16264, {%r11155, %r11154};
	xor.b64  	%rd16265, %rd16264, %rd16263;
	shf.l.wrap.b32 	%r11156, %r11150, %r11151, 25;
	shf.l.wrap.b32 	%r11157, %r11151, %r11150, 25;
	mov.b64 	%rd16266, {%r11157, %r11156};
	xor.b64  	%rd16267, %rd16265, %rd16266;
	and.b64  	%rd16268, %rd16249, %rd1290;
	xor.b64  	%rd16269, %rd16249, %rd1290;
	and.b64  	%rd16270, %rd16269, %rd1291;
	or.b64  	%rd16271, %rd16270, %rd16268;
	add.s64 	%rd16272, %rd16261, %rd16271;
	add.s64 	%rd16273, %rd16272, %rd16267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11158,%dummy}, %rd16262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd16262;
	}
	shf.r.wrap.b32 	%r11160, %r11159, %r11158, 14;
	shf.r.wrap.b32 	%r11161, %r11158, %r11159, 14;
	mov.b64 	%rd16274, {%r11161, %r11160};
	shf.r.wrap.b32 	%r11162, %r11159, %r11158, 18;
	shf.r.wrap.b32 	%r11163, %r11158, %r11159, 18;
	mov.b64 	%rd16275, {%r11163, %r11162};
	xor.b64  	%rd16276, %rd16275, %rd16274;
	shf.l.wrap.b32 	%r11164, %r11158, %r11159, 23;
	shf.l.wrap.b32 	%r11165, %r11159, %r11158, 23;
	mov.b64 	%rd16277, {%r11165, %r11164};
	xor.b64  	%rd16278, %rd16276, %rd16277;
	xor.b64  	%rd16279, %rd16238, %rd1285;
	and.b64  	%rd16280, %rd16262, %rd16279;
	xor.b64  	%rd16281, %rd16280, %rd1285;
	add.s64 	%rd16282, %rd1287, %rd18738;
	add.s64 	%rd16283, %rd16282, %rd18336;
	add.s64 	%rd16284, %rd16283, %rd16281;
	add.s64 	%rd16285, %rd16284, %rd16278;
	add.s64 	%rd16286, %rd16285, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11166,%dummy}, %rd16273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11167}, %rd16273;
	}
	shf.r.wrap.b32 	%r11168, %r11167, %r11166, 28;
	shf.r.wrap.b32 	%r11169, %r11166, %r11167, 28;
	mov.b64 	%rd16287, {%r11169, %r11168};
	shf.l.wrap.b32 	%r11170, %r11166, %r11167, 30;
	shf.l.wrap.b32 	%r11171, %r11167, %r11166, 30;
	mov.b64 	%rd16288, {%r11171, %r11170};
	xor.b64  	%rd16289, %rd16288, %rd16287;
	shf.l.wrap.b32 	%r11172, %r11166, %r11167, 25;
	shf.l.wrap.b32 	%r11173, %r11167, %r11166, 25;
	mov.b64 	%rd16290, {%r11173, %r11172};
	xor.b64  	%rd16291, %rd16289, %rd16290;
	and.b64  	%rd16292, %rd16273, %rd16249;
	xor.b64  	%rd16293, %rd16273, %rd16249;
	and.b64  	%rd16294, %rd16293, %rd1290;
	or.b64  	%rd16295, %rd16294, %rd16292;
	add.s64 	%rd16296, %rd16285, %rd16295;
	add.s64 	%rd16297, %rd16296, %rd16291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11174,%dummy}, %rd16286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11175}, %rd16286;
	}
	shf.r.wrap.b32 	%r11176, %r11175, %r11174, 14;
	shf.r.wrap.b32 	%r11177, %r11174, %r11175, 14;
	mov.b64 	%rd16298, {%r11177, %r11176};
	shf.r.wrap.b32 	%r11178, %r11175, %r11174, 18;
	shf.r.wrap.b32 	%r11179, %r11174, %r11175, 18;
	mov.b64 	%rd16299, {%r11179, %r11178};
	xor.b64  	%rd16300, %rd16299, %rd16298;
	shf.l.wrap.b32 	%r11180, %r11174, %r11175, 23;
	shf.l.wrap.b32 	%r11181, %r11175, %r11174, 23;
	mov.b64 	%rd16301, {%r11181, %r11180};
	xor.b64  	%rd16302, %rd16300, %rd16301;
	xor.b64  	%rd16303, %rd16262, %rd16238;
	and.b64  	%rd16304, %rd16286, %rd16303;
	xor.b64  	%rd16305, %rd16304, %rd16238;
	add.s64 	%rd16306, %rd1285, %rd18739;
	add.s64 	%rd16307, %rd16306, %rd18335;
	add.s64 	%rd16308, %rd16307, %rd16305;
	add.s64 	%rd16309, %rd16308, %rd16302;
	add.s64 	%rd16310, %rd16309, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11182,%dummy}, %rd16297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11183}, %rd16297;
	}
	shf.r.wrap.b32 	%r11184, %r11183, %r11182, 28;
	shf.r.wrap.b32 	%r11185, %r11182, %r11183, 28;
	mov.b64 	%rd16311, {%r11185, %r11184};
	shf.l.wrap.b32 	%r11186, %r11182, %r11183, 30;
	shf.l.wrap.b32 	%r11187, %r11183, %r11182, 30;
	mov.b64 	%rd16312, {%r11187, %r11186};
	xor.b64  	%rd16313, %rd16312, %rd16311;
	shf.l.wrap.b32 	%r11188, %r11182, %r11183, 25;
	shf.l.wrap.b32 	%r11189, %r11183, %r11182, 25;
	mov.b64 	%rd16314, {%r11189, %r11188};
	xor.b64  	%rd16315, %rd16313, %rd16314;
	and.b64  	%rd16316, %rd16297, %rd16273;
	xor.b64  	%rd16317, %rd16297, %rd16273;
	and.b64  	%rd16318, %rd16317, %rd16249;
	or.b64  	%rd16319, %rd16318, %rd16316;
	add.s64 	%rd16320, %rd16309, %rd16319;
	add.s64 	%rd16321, %rd16320, %rd16315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11190,%dummy}, %rd16310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11191}, %rd16310;
	}
	shf.r.wrap.b32 	%r11192, %r11191, %r11190, 14;
	shf.r.wrap.b32 	%r11193, %r11190, %r11191, 14;
	mov.b64 	%rd16322, {%r11193, %r11192};
	shf.r.wrap.b32 	%r11194, %r11191, %r11190, 18;
	shf.r.wrap.b32 	%r11195, %r11190, %r11191, 18;
	mov.b64 	%rd16323, {%r11195, %r11194};
	xor.b64  	%rd16324, %rd16323, %rd16322;
	shf.l.wrap.b32 	%r11196, %r11190, %r11191, 23;
	shf.l.wrap.b32 	%r11197, %r11191, %r11190, 23;
	mov.b64 	%rd16325, {%r11197, %r11196};
	xor.b64  	%rd16326, %rd16324, %rd16325;
	xor.b64  	%rd16327, %rd16286, %rd16262;
	and.b64  	%rd16328, %rd16310, %rd16327;
	xor.b64  	%rd16329, %rd16328, %rd16262;
	add.s64 	%rd16330, %rd16238, %rd18740;
	add.s64 	%rd16331, %rd16330, %rd18334;
	add.s64 	%rd16332, %rd16331, %rd16329;
	add.s64 	%rd16333, %rd16332, %rd16326;
	add.s64 	%rd16334, %rd16333, %rd16249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11198,%dummy}, %rd16321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11199}, %rd16321;
	}
	shf.r.wrap.b32 	%r11200, %r11199, %r11198, 28;
	shf.r.wrap.b32 	%r11201, %r11198, %r11199, 28;
	mov.b64 	%rd16335, {%r11201, %r11200};
	shf.l.wrap.b32 	%r11202, %r11198, %r11199, 30;
	shf.l.wrap.b32 	%r11203, %r11199, %r11198, 30;
	mov.b64 	%rd16336, {%r11203, %r11202};
	xor.b64  	%rd16337, %rd16336, %rd16335;
	shf.l.wrap.b32 	%r11204, %r11198, %r11199, 25;
	shf.l.wrap.b32 	%r11205, %r11199, %r11198, 25;
	mov.b64 	%rd16338, {%r11205, %r11204};
	xor.b64  	%rd16339, %rd16337, %rd16338;
	and.b64  	%rd16340, %rd16321, %rd16297;
	xor.b64  	%rd16341, %rd16321, %rd16297;
	and.b64  	%rd16342, %rd16341, %rd16273;
	or.b64  	%rd16343, %rd16342, %rd16340;
	add.s64 	%rd16344, %rd16333, %rd16343;
	add.s64 	%rd16345, %rd16344, %rd16339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11206,%dummy}, %rd16334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11207}, %rd16334;
	}
	shf.r.wrap.b32 	%r11208, %r11207, %r11206, 14;
	shf.r.wrap.b32 	%r11209, %r11206, %r11207, 14;
	mov.b64 	%rd16346, {%r11209, %r11208};
	shf.r.wrap.b32 	%r11210, %r11207, %r11206, 18;
	shf.r.wrap.b32 	%r11211, %r11206, %r11207, 18;
	mov.b64 	%rd16347, {%r11211, %r11210};
	xor.b64  	%rd16348, %rd16347, %rd16346;
	shf.l.wrap.b32 	%r11212, %r11206, %r11207, 23;
	shf.l.wrap.b32 	%r11213, %r11207, %r11206, 23;
	mov.b64 	%rd16349, {%r11213, %r11212};
	xor.b64  	%rd16350, %rd16348, %rd16349;
	xor.b64  	%rd16351, %rd16310, %rd16286;
	and.b64  	%rd16352, %rd16334, %rd16351;
	xor.b64  	%rd16353, %rd16352, %rd16286;
	add.s64 	%rd16354, %rd16262, %rd18741;
	add.s64 	%rd16355, %rd16354, %rd18333;
	add.s64 	%rd16356, %rd16355, %rd16353;
	add.s64 	%rd16357, %rd16356, %rd16350;
	add.s64 	%rd16358, %rd16357, %rd16273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11214,%dummy}, %rd16345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11215}, %rd16345;
	}
	shf.r.wrap.b32 	%r11216, %r11215, %r11214, 28;
	shf.r.wrap.b32 	%r11217, %r11214, %r11215, 28;
	mov.b64 	%rd16359, {%r11217, %r11216};
	shf.l.wrap.b32 	%r11218, %r11214, %r11215, 30;
	shf.l.wrap.b32 	%r11219, %r11215, %r11214, 30;
	mov.b64 	%rd16360, {%r11219, %r11218};
	xor.b64  	%rd16361, %rd16360, %rd16359;
	shf.l.wrap.b32 	%r11220, %r11214, %r11215, 25;
	shf.l.wrap.b32 	%r11221, %r11215, %r11214, 25;
	mov.b64 	%rd16362, {%r11221, %r11220};
	xor.b64  	%rd16363, %rd16361, %rd16362;
	and.b64  	%rd16364, %rd16345, %rd16321;
	xor.b64  	%rd16365, %rd16345, %rd16321;
	and.b64  	%rd16366, %rd16365, %rd16297;
	or.b64  	%rd16367, %rd16366, %rd16364;
	add.s64 	%rd16368, %rd16357, %rd16367;
	add.s64 	%rd16369, %rd16368, %rd16363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11222,%dummy}, %rd16358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11223}, %rd16358;
	}
	shf.r.wrap.b32 	%r11224, %r11223, %r11222, 14;
	shf.r.wrap.b32 	%r11225, %r11222, %r11223, 14;
	mov.b64 	%rd16370, {%r11225, %r11224};
	shf.r.wrap.b32 	%r11226, %r11223, %r11222, 18;
	shf.r.wrap.b32 	%r11227, %r11222, %r11223, 18;
	mov.b64 	%rd16371, {%r11227, %r11226};
	xor.b64  	%rd16372, %rd16371, %rd16370;
	shf.l.wrap.b32 	%r11228, %r11222, %r11223, 23;
	shf.l.wrap.b32 	%r11229, %r11223, %r11222, 23;
	mov.b64 	%rd16373, {%r11229, %r11228};
	xor.b64  	%rd16374, %rd16372, %rd16373;
	xor.b64  	%rd16375, %rd16334, %rd16310;
	and.b64  	%rd16376, %rd16358, %rd16375;
	xor.b64  	%rd16377, %rd16376, %rd16310;
	add.s64 	%rd16378, %rd16286, %rd18742;
	add.s64 	%rd16379, %rd16378, %rd18332;
	add.s64 	%rd16380, %rd16379, %rd16377;
	add.s64 	%rd16381, %rd16380, %rd16374;
	add.s64 	%rd16382, %rd16381, %rd16297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11230,%dummy}, %rd16369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11231}, %rd16369;
	}
	shf.r.wrap.b32 	%r11232, %r11231, %r11230, 28;
	shf.r.wrap.b32 	%r11233, %r11230, %r11231, 28;
	mov.b64 	%rd16383, {%r11233, %r11232};
	shf.l.wrap.b32 	%r11234, %r11230, %r11231, 30;
	shf.l.wrap.b32 	%r11235, %r11231, %r11230, 30;
	mov.b64 	%rd16384, {%r11235, %r11234};
	xor.b64  	%rd16385, %rd16384, %rd16383;
	shf.l.wrap.b32 	%r11236, %r11230, %r11231, 25;
	shf.l.wrap.b32 	%r11237, %r11231, %r11230, 25;
	mov.b64 	%rd16386, {%r11237, %r11236};
	xor.b64  	%rd16387, %rd16385, %rd16386;
	and.b64  	%rd16388, %rd16369, %rd16345;
	xor.b64  	%rd16389, %rd16369, %rd16345;
	and.b64  	%rd16390, %rd16389, %rd16321;
	or.b64  	%rd16391, %rd16390, %rd16388;
	add.s64 	%rd16392, %rd16381, %rd16391;
	add.s64 	%rd16393, %rd16392, %rd16387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11238,%dummy}, %rd16382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11239}, %rd16382;
	}
	shf.r.wrap.b32 	%r11240, %r11239, %r11238, 14;
	shf.r.wrap.b32 	%r11241, %r11238, %r11239, 14;
	mov.b64 	%rd16394, {%r11241, %r11240};
	shf.r.wrap.b32 	%r11242, %r11239, %r11238, 18;
	shf.r.wrap.b32 	%r11243, %r11238, %r11239, 18;
	mov.b64 	%rd16395, {%r11243, %r11242};
	xor.b64  	%rd16396, %rd16395, %rd16394;
	shf.l.wrap.b32 	%r11244, %r11238, %r11239, 23;
	shf.l.wrap.b32 	%r11245, %r11239, %r11238, 23;
	mov.b64 	%rd16397, {%r11245, %r11244};
	xor.b64  	%rd16398, %rd16396, %rd16397;
	xor.b64  	%rd16399, %rd16358, %rd16334;
	and.b64  	%rd16400, %rd16382, %rd16399;
	xor.b64  	%rd16401, %rd16400, %rd16334;
	add.s64 	%rd16402, %rd16310, %rd18743;
	add.s64 	%rd16403, %rd16402, %rd18331;
	add.s64 	%rd16404, %rd16403, %rd16401;
	add.s64 	%rd16405, %rd16404, %rd16398;
	add.s64 	%rd16406, %rd16405, %rd16321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11246,%dummy}, %rd16393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11247}, %rd16393;
	}
	shf.r.wrap.b32 	%r11248, %r11247, %r11246, 28;
	shf.r.wrap.b32 	%r11249, %r11246, %r11247, 28;
	mov.b64 	%rd16407, {%r11249, %r11248};
	shf.l.wrap.b32 	%r11250, %r11246, %r11247, 30;
	shf.l.wrap.b32 	%r11251, %r11247, %r11246, 30;
	mov.b64 	%rd16408, {%r11251, %r11250};
	xor.b64  	%rd16409, %rd16408, %rd16407;
	shf.l.wrap.b32 	%r11252, %r11246, %r11247, 25;
	shf.l.wrap.b32 	%r11253, %r11247, %r11246, 25;
	mov.b64 	%rd16410, {%r11253, %r11252};
	xor.b64  	%rd16411, %rd16409, %rd16410;
	and.b64  	%rd16412, %rd16393, %rd16369;
	xor.b64  	%rd16413, %rd16393, %rd16369;
	and.b64  	%rd16414, %rd16413, %rd16345;
	or.b64  	%rd16415, %rd16414, %rd16412;
	add.s64 	%rd16416, %rd16405, %rd16415;
	add.s64 	%rd16417, %rd16416, %rd16411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11254,%dummy}, %rd16406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11255}, %rd16406;
	}
	shf.r.wrap.b32 	%r11256, %r11255, %r11254, 14;
	shf.r.wrap.b32 	%r11257, %r11254, %r11255, 14;
	mov.b64 	%rd16418, {%r11257, %r11256};
	shf.r.wrap.b32 	%r11258, %r11255, %r11254, 18;
	shf.r.wrap.b32 	%r11259, %r11254, %r11255, 18;
	mov.b64 	%rd16419, {%r11259, %r11258};
	xor.b64  	%rd16420, %rd16419, %rd16418;
	shf.l.wrap.b32 	%r11260, %r11254, %r11255, 23;
	shf.l.wrap.b32 	%r11261, %r11255, %r11254, 23;
	mov.b64 	%rd16421, {%r11261, %r11260};
	xor.b64  	%rd16422, %rd16420, %rd16421;
	xor.b64  	%rd16423, %rd16382, %rd16358;
	and.b64  	%rd16424, %rd16406, %rd16423;
	xor.b64  	%rd16425, %rd16424, %rd16358;
	add.s64 	%rd16426, %rd16334, %rd18727;
	add.s64 	%rd16427, %rd16426, %rd18330;
	add.s64 	%rd16428, %rd16427, %rd16425;
	add.s64 	%rd16429, %rd16428, %rd16422;
	add.s64 	%rd16430, %rd16429, %rd16345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11262,%dummy}, %rd16417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11263}, %rd16417;
	}
	shf.r.wrap.b32 	%r11264, %r11263, %r11262, 28;
	shf.r.wrap.b32 	%r11265, %r11262, %r11263, 28;
	mov.b64 	%rd16431, {%r11265, %r11264};
	shf.l.wrap.b32 	%r11266, %r11262, %r11263, 30;
	shf.l.wrap.b32 	%r11267, %r11263, %r11262, 30;
	mov.b64 	%rd16432, {%r11267, %r11266};
	xor.b64  	%rd16433, %rd16432, %rd16431;
	shf.l.wrap.b32 	%r11268, %r11262, %r11263, 25;
	shf.l.wrap.b32 	%r11269, %r11263, %r11262, 25;
	mov.b64 	%rd16434, {%r11269, %r11268};
	xor.b64  	%rd16435, %rd16433, %rd16434;
	and.b64  	%rd16436, %rd16417, %rd16393;
	xor.b64  	%rd16437, %rd16417, %rd16393;
	and.b64  	%rd16438, %rd16437, %rd16369;
	or.b64  	%rd16439, %rd16438, %rd16436;
	add.s64 	%rd16440, %rd16429, %rd16439;
	add.s64 	%rd16441, %rd16440, %rd16435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11270,%dummy}, %rd16430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11271}, %rd16430;
	}
	shf.r.wrap.b32 	%r11272, %r11271, %r11270, 14;
	shf.r.wrap.b32 	%r11273, %r11270, %r11271, 14;
	mov.b64 	%rd16442, {%r11273, %r11272};
	shf.r.wrap.b32 	%r11274, %r11271, %r11270, 18;
	shf.r.wrap.b32 	%r11275, %r11270, %r11271, 18;
	mov.b64 	%rd16443, {%r11275, %r11274};
	xor.b64  	%rd16444, %rd16443, %rd16442;
	shf.l.wrap.b32 	%r11276, %r11270, %r11271, 23;
	shf.l.wrap.b32 	%r11277, %r11271, %r11270, 23;
	mov.b64 	%rd16445, {%r11277, %r11276};
	xor.b64  	%rd16446, %rd16444, %rd16445;
	xor.b64  	%rd16447, %rd16406, %rd16382;
	and.b64  	%rd16448, %rd16430, %rd16447;
	xor.b64  	%rd16449, %rd16448, %rd16382;
	add.s64 	%rd16450, %rd16358, %rd18726;
	add.s64 	%rd16451, %rd16450, %rd18329;
	add.s64 	%rd16452, %rd16451, %rd16449;
	add.s64 	%rd16453, %rd16452, %rd16446;
	add.s64 	%rd16454, %rd16453, %rd16369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11278,%dummy}, %rd16441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11279}, %rd16441;
	}
	shf.r.wrap.b32 	%r11280, %r11279, %r11278, 28;
	shf.r.wrap.b32 	%r11281, %r11278, %r11279, 28;
	mov.b64 	%rd16455, {%r11281, %r11280};
	shf.l.wrap.b32 	%r11282, %r11278, %r11279, 30;
	shf.l.wrap.b32 	%r11283, %r11279, %r11278, 30;
	mov.b64 	%rd16456, {%r11283, %r11282};
	xor.b64  	%rd16457, %rd16456, %rd16455;
	shf.l.wrap.b32 	%r11284, %r11278, %r11279, 25;
	shf.l.wrap.b32 	%r11285, %r11279, %r11278, 25;
	mov.b64 	%rd16458, {%r11285, %r11284};
	xor.b64  	%rd16459, %rd16457, %rd16458;
	and.b64  	%rd16460, %rd16441, %rd16417;
	xor.b64  	%rd16461, %rd16441, %rd16417;
	and.b64  	%rd16462, %rd16461, %rd16393;
	or.b64  	%rd16463, %rd16462, %rd16460;
	add.s64 	%rd16464, %rd16453, %rd16463;
	add.s64 	%rd16465, %rd16464, %rd16459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11286,%dummy}, %rd16454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11287}, %rd16454;
	}
	shf.r.wrap.b32 	%r11288, %r11287, %r11286, 14;
	shf.r.wrap.b32 	%r11289, %r11286, %r11287, 14;
	mov.b64 	%rd16466, {%r11289, %r11288};
	shf.r.wrap.b32 	%r11290, %r11287, %r11286, 18;
	shf.r.wrap.b32 	%r11291, %r11286, %r11287, 18;
	mov.b64 	%rd16467, {%r11291, %r11290};
	xor.b64  	%rd16468, %rd16467, %rd16466;
	shf.l.wrap.b32 	%r11292, %r11286, %r11287, 23;
	shf.l.wrap.b32 	%r11293, %r11287, %r11286, 23;
	mov.b64 	%rd16469, {%r11293, %r11292};
	xor.b64  	%rd16470, %rd16468, %rd16469;
	xor.b64  	%rd16471, %rd16430, %rd16406;
	and.b64  	%rd16472, %rd16454, %rd16471;
	xor.b64  	%rd16473, %rd16472, %rd16406;
	add.s64 	%rd16474, %rd16382, %rd18725;
	add.s64 	%rd16475, %rd16474, %rd18328;
	add.s64 	%rd16476, %rd16475, %rd16473;
	add.s64 	%rd16477, %rd16476, %rd16470;
	add.s64 	%rd16478, %rd16477, %rd16393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11294,%dummy}, %rd16465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11295}, %rd16465;
	}
	shf.r.wrap.b32 	%r11296, %r11295, %r11294, 28;
	shf.r.wrap.b32 	%r11297, %r11294, %r11295, 28;
	mov.b64 	%rd16479, {%r11297, %r11296};
	shf.l.wrap.b32 	%r11298, %r11294, %r11295, 30;
	shf.l.wrap.b32 	%r11299, %r11295, %r11294, 30;
	mov.b64 	%rd16480, {%r11299, %r11298};
	xor.b64  	%rd16481, %rd16480, %rd16479;
	shf.l.wrap.b32 	%r11300, %r11294, %r11295, 25;
	shf.l.wrap.b32 	%r11301, %r11295, %r11294, 25;
	mov.b64 	%rd16482, {%r11301, %r11300};
	xor.b64  	%rd16483, %rd16481, %rd16482;
	and.b64  	%rd16484, %rd16465, %rd16441;
	xor.b64  	%rd16485, %rd16465, %rd16441;
	and.b64  	%rd16486, %rd16485, %rd16417;
	or.b64  	%rd16487, %rd16486, %rd16484;
	add.s64 	%rd16488, %rd16477, %rd16487;
	add.s64 	%rd16489, %rd16488, %rd16483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11302,%dummy}, %rd16478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11303}, %rd16478;
	}
	shf.r.wrap.b32 	%r11304, %r11303, %r11302, 14;
	shf.r.wrap.b32 	%r11305, %r11302, %r11303, 14;
	mov.b64 	%rd16490, {%r11305, %r11304};
	shf.r.wrap.b32 	%r11306, %r11303, %r11302, 18;
	shf.r.wrap.b32 	%r11307, %r11302, %r11303, 18;
	mov.b64 	%rd16491, {%r11307, %r11306};
	xor.b64  	%rd16492, %rd16491, %rd16490;
	shf.l.wrap.b32 	%r11308, %r11302, %r11303, 23;
	shf.l.wrap.b32 	%r11309, %r11303, %r11302, 23;
	mov.b64 	%rd16493, {%r11309, %r11308};
	xor.b64  	%rd16494, %rd16492, %rd16493;
	xor.b64  	%rd16495, %rd16454, %rd16430;
	and.b64  	%rd16496, %rd16478, %rd16495;
	xor.b64  	%rd16497, %rd16496, %rd16430;
	add.s64 	%rd16498, %rd16406, %rd18724;
	add.s64 	%rd16499, %rd16498, %rd18327;
	add.s64 	%rd16500, %rd16499, %rd16497;
	add.s64 	%rd16501, %rd16500, %rd16494;
	add.s64 	%rd16502, %rd16501, %rd16417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11310,%dummy}, %rd16489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11311}, %rd16489;
	}
	shf.r.wrap.b32 	%r11312, %r11311, %r11310, 28;
	shf.r.wrap.b32 	%r11313, %r11310, %r11311, 28;
	mov.b64 	%rd16503, {%r11313, %r11312};
	shf.l.wrap.b32 	%r11314, %r11310, %r11311, 30;
	shf.l.wrap.b32 	%r11315, %r11311, %r11310, 30;
	mov.b64 	%rd16504, {%r11315, %r11314};
	xor.b64  	%rd16505, %rd16504, %rd16503;
	shf.l.wrap.b32 	%r11316, %r11310, %r11311, 25;
	shf.l.wrap.b32 	%r11317, %r11311, %r11310, 25;
	mov.b64 	%rd16506, {%r11317, %r11316};
	xor.b64  	%rd16507, %rd16505, %rd16506;
	and.b64  	%rd16508, %rd16489, %rd16465;
	xor.b64  	%rd16509, %rd16489, %rd16465;
	and.b64  	%rd16510, %rd16509, %rd16441;
	or.b64  	%rd16511, %rd16510, %rd16508;
	add.s64 	%rd16512, %rd16501, %rd16511;
	add.s64 	%rd16513, %rd16512, %rd16507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11318,%dummy}, %rd16502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11319}, %rd16502;
	}
	shf.r.wrap.b32 	%r11320, %r11319, %r11318, 14;
	shf.r.wrap.b32 	%r11321, %r11318, %r11319, 14;
	mov.b64 	%rd16514, {%r11321, %r11320};
	shf.r.wrap.b32 	%r11322, %r11319, %r11318, 18;
	shf.r.wrap.b32 	%r11323, %r11318, %r11319, 18;
	mov.b64 	%rd16515, {%r11323, %r11322};
	xor.b64  	%rd16516, %rd16515, %rd16514;
	shf.l.wrap.b32 	%r11324, %r11318, %r11319, 23;
	shf.l.wrap.b32 	%r11325, %r11319, %r11318, 23;
	mov.b64 	%rd16517, {%r11325, %r11324};
	xor.b64  	%rd16518, %rd16516, %rd16517;
	xor.b64  	%rd16519, %rd16478, %rd16454;
	and.b64  	%rd16520, %rd16502, %rd16519;
	xor.b64  	%rd16521, %rd16520, %rd16454;
	add.s64 	%rd16522, %rd16430, %rd18723;
	add.s64 	%rd16523, %rd16522, %rd18326;
	add.s64 	%rd16524, %rd16523, %rd16521;
	add.s64 	%rd16525, %rd16524, %rd16518;
	add.s64 	%rd18687, %rd16525, %rd16441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11326,%dummy}, %rd16513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11327}, %rd16513;
	}
	shf.r.wrap.b32 	%r11328, %r11327, %r11326, 28;
	shf.r.wrap.b32 	%r11329, %r11326, %r11327, 28;
	mov.b64 	%rd16526, {%r11329, %r11328};
	shf.l.wrap.b32 	%r11330, %r11326, %r11327, 30;
	shf.l.wrap.b32 	%r11331, %r11327, %r11326, 30;
	mov.b64 	%rd16527, {%r11331, %r11330};
	xor.b64  	%rd16528, %rd16527, %rd16526;
	shf.l.wrap.b32 	%r11332, %r11326, %r11327, 25;
	shf.l.wrap.b32 	%r11333, %r11327, %r11326, 25;
	mov.b64 	%rd16529, {%r11333, %r11332};
	xor.b64  	%rd16530, %rd16528, %rd16529;
	and.b64  	%rd16531, %rd16513, %rd16489;
	xor.b64  	%rd16532, %rd16513, %rd16489;
	and.b64  	%rd16533, %rd16532, %rd16465;
	or.b64  	%rd16534, %rd16533, %rd16531;
	add.s64 	%rd16535, %rd16525, %rd16534;
	add.s64 	%rd18683, %rd16535, %rd16530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11334,%dummy}, %rd18687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11335}, %rd18687;
	}
	shf.r.wrap.b32 	%r11336, %r11335, %r11334, 14;
	shf.r.wrap.b32 	%r11337, %r11334, %r11335, 14;
	mov.b64 	%rd16536, {%r11337, %r11336};
	shf.r.wrap.b32 	%r11338, %r11335, %r11334, 18;
	shf.r.wrap.b32 	%r11339, %r11334, %r11335, 18;
	mov.b64 	%rd16537, {%r11339, %r11338};
	xor.b64  	%rd16538, %rd16537, %rd16536;
	shf.l.wrap.b32 	%r11340, %r11334, %r11335, 23;
	shf.l.wrap.b32 	%r11341, %r11335, %r11334, 23;
	mov.b64 	%rd16539, {%r11341, %r11340};
	xor.b64  	%rd16540, %rd16538, %rd16539;
	xor.b64  	%rd16541, %rd16502, %rd16478;
	and.b64  	%rd16542, %rd18687, %rd16541;
	xor.b64  	%rd16543, %rd16542, %rd16478;
	add.s64 	%rd16544, %rd16454, %rd18722;
	add.s64 	%rd16545, %rd16544, %rd18325;
	add.s64 	%rd16546, %rd16545, %rd16543;
	add.s64 	%rd16547, %rd16546, %rd16540;
	add.s64 	%rd18686, %rd16547, %rd16465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11342,%dummy}, %rd18683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11343}, %rd18683;
	}
	shf.r.wrap.b32 	%r11344, %r11343, %r11342, 28;
	shf.r.wrap.b32 	%r11345, %r11342, %r11343, 28;
	mov.b64 	%rd16548, {%r11345, %r11344};
	shf.l.wrap.b32 	%r11346, %r11342, %r11343, 30;
	shf.l.wrap.b32 	%r11347, %r11343, %r11342, 30;
	mov.b64 	%rd16549, {%r11347, %r11346};
	xor.b64  	%rd16550, %rd16549, %rd16548;
	shf.l.wrap.b32 	%r11348, %r11342, %r11343, 25;
	shf.l.wrap.b32 	%r11349, %r11343, %r11342, 25;
	mov.b64 	%rd16551, {%r11349, %r11348};
	xor.b64  	%rd16552, %rd16550, %rd16551;
	and.b64  	%rd16553, %rd18683, %rd16513;
	xor.b64  	%rd16554, %rd18683, %rd16513;
	and.b64  	%rd16555, %rd16554, %rd16489;
	or.b64  	%rd16556, %rd16555, %rd16553;
	add.s64 	%rd16557, %rd16547, %rd16556;
	add.s64 	%rd18682, %rd16557, %rd16552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11350,%dummy}, %rd18686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11351}, %rd18686;
	}
	shf.r.wrap.b32 	%r11352, %r11351, %r11350, 14;
	shf.r.wrap.b32 	%r11353, %r11350, %r11351, 14;
	mov.b64 	%rd16558, {%r11353, %r11352};
	shf.r.wrap.b32 	%r11354, %r11351, %r11350, 18;
	shf.r.wrap.b32 	%r11355, %r11350, %r11351, 18;
	mov.b64 	%rd16559, {%r11355, %r11354};
	xor.b64  	%rd16560, %rd16559, %rd16558;
	shf.l.wrap.b32 	%r11356, %r11350, %r11351, 23;
	shf.l.wrap.b32 	%r11357, %r11351, %r11350, 23;
	mov.b64 	%rd16561, {%r11357, %r11356};
	xor.b64  	%rd16562, %rd16560, %rd16561;
	xor.b64  	%rd16563, %rd18687, %rd16502;
	and.b64  	%rd16564, %rd18686, %rd16563;
	xor.b64  	%rd16565, %rd16564, %rd16502;
	add.s64 	%rd16566, %rd16478, %rd18721;
	add.s64 	%rd16567, %rd16566, %rd18324;
	add.s64 	%rd16568, %rd16567, %rd16565;
	add.s64 	%rd16569, %rd16568, %rd16562;
	add.s64 	%rd18685, %rd16569, %rd16489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11358,%dummy}, %rd18682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11359}, %rd18682;
	}
	shf.r.wrap.b32 	%r11360, %r11359, %r11358, 28;
	shf.r.wrap.b32 	%r11361, %r11358, %r11359, 28;
	mov.b64 	%rd16570, {%r11361, %r11360};
	shf.l.wrap.b32 	%r11362, %r11358, %r11359, 30;
	shf.l.wrap.b32 	%r11363, %r11359, %r11358, 30;
	mov.b64 	%rd16571, {%r11363, %r11362};
	xor.b64  	%rd16572, %rd16571, %rd16570;
	shf.l.wrap.b32 	%r11364, %r11358, %r11359, 25;
	shf.l.wrap.b32 	%r11365, %r11359, %r11358, 25;
	mov.b64 	%rd16573, {%r11365, %r11364};
	xor.b64  	%rd16574, %rd16572, %rd16573;
	and.b64  	%rd16575, %rd18682, %rd18683;
	xor.b64  	%rd16576, %rd18682, %rd18683;
	and.b64  	%rd16577, %rd16576, %rd16513;
	or.b64  	%rd16578, %rd16577, %rd16575;
	add.s64 	%rd16579, %rd16569, %rd16578;
	add.s64 	%rd18681, %rd16579, %rd16574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11366,%dummy}, %rd18685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11367}, %rd18685;
	}
	shf.r.wrap.b32 	%r11368, %r11367, %r11366, 14;
	shf.r.wrap.b32 	%r11369, %r11366, %r11367, 14;
	mov.b64 	%rd16580, {%r11369, %r11368};
	shf.r.wrap.b32 	%r11370, %r11367, %r11366, 18;
	shf.r.wrap.b32 	%r11371, %r11366, %r11367, 18;
	mov.b64 	%rd16581, {%r11371, %r11370};
	xor.b64  	%rd16582, %rd16581, %rd16580;
	shf.l.wrap.b32 	%r11372, %r11366, %r11367, 23;
	shf.l.wrap.b32 	%r11373, %r11367, %r11366, 23;
	mov.b64 	%rd16583, {%r11373, %r11372};
	xor.b64  	%rd16584, %rd16582, %rd16583;
	xor.b64  	%rd16585, %rd18686, %rd18687;
	and.b64  	%rd16586, %rd18685, %rd16585;
	xor.b64  	%rd16587, %rd16586, %rd18687;
	ld.local.u64 	%rd18672, [%rd1+184];
	add.s64 	%rd16588, %rd16502, %rd18672;
	add.s64 	%rd16589, %rd16588, %rd18323;
	add.s64 	%rd16590, %rd16589, %rd16587;
	add.s64 	%rd16591, %rd16590, %rd16584;
	add.s64 	%rd18684, %rd16591, %rd16513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11374,%dummy}, %rd18681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11375}, %rd18681;
	}
	shf.r.wrap.b32 	%r11376, %r11375, %r11374, 28;
	shf.r.wrap.b32 	%r11377, %r11374, %r11375, 28;
	mov.b64 	%rd16592, {%r11377, %r11376};
	shf.l.wrap.b32 	%r11378, %r11374, %r11375, 30;
	shf.l.wrap.b32 	%r11379, %r11375, %r11374, 30;
	mov.b64 	%rd16593, {%r11379, %r11378};
	xor.b64  	%rd16594, %rd16593, %rd16592;
	shf.l.wrap.b32 	%r11380, %r11374, %r11375, 25;
	shf.l.wrap.b32 	%r11381, %r11375, %r11374, 25;
	mov.b64 	%rd16595, {%r11381, %r11380};
	xor.b64  	%rd16596, %rd16594, %rd16595;
	and.b64  	%rd16597, %rd18681, %rd18682;
	xor.b64  	%rd16598, %rd18681, %rd18682;
	and.b64  	%rd16599, %rd16598, %rd18683;
	or.b64  	%rd16600, %rd16599, %rd16597;
	add.s64 	%rd16601, %rd16591, %rd16600;
	add.s64 	%rd18680, %rd16601, %rd16596;
	mov.u32 	%r12713, 16;

BB0_272:
	shr.u64 	%rd16602, %rd18721, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11382,%dummy}, %rd18721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11383}, %rd18721;
	}
	shf.r.wrap.b32 	%r11384, %r11383, %r11382, 19;
	shf.r.wrap.b32 	%r11385, %r11382, %r11383, 19;
	mov.b64 	%rd16603, {%r11385, %r11384};
	xor.b64  	%rd16604, %rd16603, %rd16602;
	shf.l.wrap.b32 	%r11386, %r11382, %r11383, 3;
	shf.l.wrap.b32 	%r11387, %r11383, %r11382, 3;
	mov.b64 	%rd16605, {%r11387, %r11386};
	xor.b64  	%rd16606, %rd16604, %rd16605;
	shr.u64 	%rd16607, %rd18737, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11388,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11389}, %rd18737;
	}
	shf.r.wrap.b32 	%r11390, %r11389, %r11388, 1;
	shf.r.wrap.b32 	%r11391, %r11388, %r11389, 1;
	mov.b64 	%rd16608, {%r11391, %r11390};
	xor.b64  	%rd16609, %rd16608, %rd16607;
	shf.r.wrap.b32 	%r11392, %r11389, %r11388, 8;
	shf.r.wrap.b32 	%r11393, %r11388, %r11389, 8;
	mov.b64 	%rd16610, {%r11393, %r11392};
	xor.b64  	%rd16611, %rd16609, %rd16610;
	add.s64 	%rd16612, %rd18726, %rd18736;
	add.s64 	%rd16613, %rd16612, %rd16606;
	add.s64 	%rd18736, %rd16613, %rd16611;
	shr.u64 	%rd16614, %rd18672, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11394,%dummy}, %rd18672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11395}, %rd18672;
	}
	shf.r.wrap.b32 	%r11396, %r11395, %r11394, 19;
	shf.r.wrap.b32 	%r11397, %r11394, %r11395, 19;
	mov.b64 	%rd16615, {%r11397, %r11396};
	xor.b64  	%rd16616, %rd16615, %rd16614;
	shf.l.wrap.b32 	%r11398, %r11394, %r11395, 3;
	shf.l.wrap.b32 	%r11399, %r11395, %r11394, 3;
	mov.b64 	%rd16617, {%r11399, %r11398};
	xor.b64  	%rd16618, %rd16616, %rd16617;
	shr.u64 	%rd16619, %rd18738, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11400,%dummy}, %rd18738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11401}, %rd18738;
	}
	shf.r.wrap.b32 	%r11402, %r11401, %r11400, 1;
	shf.r.wrap.b32 	%r11403, %r11400, %r11401, 1;
	mov.b64 	%rd16620, {%r11403, %r11402};
	xor.b64  	%rd16621, %rd16620, %rd16619;
	shf.r.wrap.b32 	%r11404, %r11401, %r11400, 8;
	shf.r.wrap.b32 	%r11405, %r11400, %r11401, 8;
	mov.b64 	%rd16622, {%r11405, %r11404};
	xor.b64  	%rd16623, %rd16621, %rd16622;
	add.s64 	%rd16624, %rd18725, %rd18737;
	add.s64 	%rd16625, %rd16624, %rd16618;
	add.s64 	%rd18737, %rd16625, %rd16623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11406,%dummy}, %rd18736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11407}, %rd18736;
	}
	shf.r.wrap.b32 	%r11408, %r11407, %r11406, 19;
	shf.r.wrap.b32 	%r11409, %r11406, %r11407, 19;
	mov.b64 	%rd16626, {%r11409, %r11408};
	shf.l.wrap.b32 	%r11410, %r11406, %r11407, 3;
	shf.l.wrap.b32 	%r11411, %r11407, %r11406, 3;
	mov.b64 	%rd16627, {%r11411, %r11410};
	shr.u64 	%rd16628, %rd18736, 6;
	xor.b64  	%rd16629, %rd16626, %rd16628;
	xor.b64  	%rd16630, %rd16629, %rd16627;
	shr.u64 	%rd16631, %rd18739, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11412,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11413}, %rd18739;
	}
	shf.r.wrap.b32 	%r11414, %r11413, %r11412, 1;
	shf.r.wrap.b32 	%r11415, %r11412, %r11413, 1;
	mov.b64 	%rd16632, {%r11415, %r11414};
	xor.b64  	%rd16633, %rd16632, %rd16631;
	shf.r.wrap.b32 	%r11416, %r11413, %r11412, 8;
	shf.r.wrap.b32 	%r11417, %r11412, %r11413, 8;
	mov.b64 	%rd16634, {%r11417, %r11416};
	xor.b64  	%rd16635, %rd16633, %rd16634;
	add.s64 	%rd16636, %rd18724, %rd18738;
	add.s64 	%rd16637, %rd16636, %rd16630;
	add.s64 	%rd18738, %rd16637, %rd16635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11418,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11419}, %rd18737;
	}
	shf.r.wrap.b32 	%r11420, %r11419, %r11418, 19;
	shf.r.wrap.b32 	%r11421, %r11418, %r11419, 19;
	mov.b64 	%rd16638, {%r11421, %r11420};
	shf.l.wrap.b32 	%r11422, %r11418, %r11419, 3;
	shf.l.wrap.b32 	%r11423, %r11419, %r11418, 3;
	mov.b64 	%rd16639, {%r11423, %r11422};
	shr.u64 	%rd16640, %rd18737, 6;
	xor.b64  	%rd16641, %rd16638, %rd16640;
	xor.b64  	%rd16642, %rd16641, %rd16639;
	shr.u64 	%rd16643, %rd18740, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11424,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11425}, %rd18740;
	}
	shf.r.wrap.b32 	%r11426, %r11425, %r11424, 1;
	shf.r.wrap.b32 	%r11427, %r11424, %r11425, 1;
	mov.b64 	%rd16644, {%r11427, %r11426};
	xor.b64  	%rd16645, %rd16644, %rd16643;
	shf.r.wrap.b32 	%r11428, %r11425, %r11424, 8;
	shf.r.wrap.b32 	%r11429, %r11424, %r11425, 8;
	mov.b64 	%rd16646, {%r11429, %r11428};
	xor.b64  	%rd16647, %rd16645, %rd16646;
	add.s64 	%rd16648, %rd18723, %rd18739;
	add.s64 	%rd16649, %rd16648, %rd16642;
	add.s64 	%rd18739, %rd16649, %rd16647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11430,%dummy}, %rd18738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11431}, %rd18738;
	}
	shf.r.wrap.b32 	%r11432, %r11431, %r11430, 19;
	shf.r.wrap.b32 	%r11433, %r11430, %r11431, 19;
	mov.b64 	%rd16650, {%r11433, %r11432};
	shf.l.wrap.b32 	%r11434, %r11430, %r11431, 3;
	shf.l.wrap.b32 	%r11435, %r11431, %r11430, 3;
	mov.b64 	%rd16651, {%r11435, %r11434};
	shr.u64 	%rd16652, %rd18738, 6;
	xor.b64  	%rd16653, %rd16650, %rd16652;
	xor.b64  	%rd16654, %rd16653, %rd16651;
	shr.u64 	%rd16655, %rd18741, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11436,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11437}, %rd18741;
	}
	shf.r.wrap.b32 	%r11438, %r11437, %r11436, 1;
	shf.r.wrap.b32 	%r11439, %r11436, %r11437, 1;
	mov.b64 	%rd16656, {%r11439, %r11438};
	xor.b64  	%rd16657, %rd16656, %rd16655;
	shf.r.wrap.b32 	%r11440, %r11437, %r11436, 8;
	shf.r.wrap.b32 	%r11441, %r11436, %r11437, 8;
	mov.b64 	%rd16658, {%r11441, %r11440};
	xor.b64  	%rd16659, %rd16657, %rd16658;
	add.s64 	%rd16660, %rd18722, %rd18740;
	add.s64 	%rd16661, %rd16660, %rd16654;
	add.s64 	%rd18740, %rd16661, %rd16659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11442,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11443}, %rd18739;
	}
	shf.r.wrap.b32 	%r11444, %r11443, %r11442, 19;
	shf.r.wrap.b32 	%r11445, %r11442, %r11443, 19;
	mov.b64 	%rd16662, {%r11445, %r11444};
	shf.l.wrap.b32 	%r11446, %r11442, %r11443, 3;
	shf.l.wrap.b32 	%r11447, %r11443, %r11442, 3;
	mov.b64 	%rd16663, {%r11447, %r11446};
	shr.u64 	%rd16664, %rd18739, 6;
	xor.b64  	%rd16665, %rd16662, %rd16664;
	xor.b64  	%rd16666, %rd16665, %rd16663;
	shr.u64 	%rd16667, %rd18742, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11448,%dummy}, %rd18742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11449}, %rd18742;
	}
	shf.r.wrap.b32 	%r11450, %r11449, %r11448, 1;
	shf.r.wrap.b32 	%r11451, %r11448, %r11449, 1;
	mov.b64 	%rd16668, {%r11451, %r11450};
	xor.b64  	%rd16669, %rd16668, %rd16667;
	shf.r.wrap.b32 	%r11452, %r11449, %r11448, 8;
	shf.r.wrap.b32 	%r11453, %r11448, %r11449, 8;
	mov.b64 	%rd16670, {%r11453, %r11452};
	xor.b64  	%rd16671, %rd16669, %rd16670;
	add.s64 	%rd16672, %rd18721, %rd18741;
	add.s64 	%rd16673, %rd16672, %rd16666;
	add.s64 	%rd18741, %rd16673, %rd16671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11454,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11455}, %rd18740;
	}
	shf.r.wrap.b32 	%r11456, %r11455, %r11454, 19;
	shf.r.wrap.b32 	%r11457, %r11454, %r11455, 19;
	mov.b64 	%rd16674, {%r11457, %r11456};
	shf.l.wrap.b32 	%r11458, %r11454, %r11455, 3;
	shf.l.wrap.b32 	%r11459, %r11455, %r11454, 3;
	mov.b64 	%rd16675, {%r11459, %r11458};
	shr.u64 	%rd16676, %rd18740, 6;
	xor.b64  	%rd16677, %rd16674, %rd16676;
	xor.b64  	%rd16678, %rd16677, %rd16675;
	shr.u64 	%rd16679, %rd18743, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11460,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11461}, %rd18743;
	}
	shf.r.wrap.b32 	%r11462, %r11461, %r11460, 1;
	shf.r.wrap.b32 	%r11463, %r11460, %r11461, 1;
	mov.b64 	%rd16680, {%r11463, %r11462};
	xor.b64  	%rd16681, %rd16680, %rd16679;
	shf.r.wrap.b32 	%r11464, %r11461, %r11460, 8;
	shf.r.wrap.b32 	%r11465, %r11460, %r11461, 8;
	mov.b64 	%rd16682, {%r11465, %r11464};
	xor.b64  	%rd16683, %rd16681, %rd16682;
	add.s64 	%rd16684, %rd18672, %rd18742;
	add.s64 	%rd16685, %rd16684, %rd16678;
	add.s64 	%rd18742, %rd16685, %rd16683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11466,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11467}, %rd18741;
	}
	shf.r.wrap.b32 	%r11468, %r11467, %r11466, 19;
	shf.r.wrap.b32 	%r11469, %r11466, %r11467, 19;
	mov.b64 	%rd16686, {%r11469, %r11468};
	shf.l.wrap.b32 	%r11470, %r11466, %r11467, 3;
	shf.l.wrap.b32 	%r11471, %r11467, %r11466, 3;
	mov.b64 	%rd16687, {%r11471, %r11470};
	shr.u64 	%rd16688, %rd18741, 6;
	xor.b64  	%rd16689, %rd16686, %rd16688;
	xor.b64  	%rd16690, %rd16689, %rd16687;
	shr.u64 	%rd16691, %rd18727, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11472,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11473}, %rd18727;
	}
	shf.r.wrap.b32 	%r11474, %r11473, %r11472, 1;
	shf.r.wrap.b32 	%r11475, %r11472, %r11473, 1;
	mov.b64 	%rd16692, {%r11475, %r11474};
	xor.b64  	%rd16693, %rd16692, %rd16691;
	shf.r.wrap.b32 	%r11476, %r11473, %r11472, 8;
	shf.r.wrap.b32 	%r11477, %r11472, %r11473, 8;
	mov.b64 	%rd16694, {%r11477, %r11476};
	xor.b64  	%rd16695, %rd16693, %rd16694;
	add.s64 	%rd16696, %rd18736, %rd18743;
	add.s64 	%rd16697, %rd16696, %rd16690;
	add.s64 	%rd18743, %rd16697, %rd16695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11478,%dummy}, %rd18742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11479}, %rd18742;
	}
	shf.r.wrap.b32 	%r11480, %r11479, %r11478, 19;
	shf.r.wrap.b32 	%r11481, %r11478, %r11479, 19;
	mov.b64 	%rd16698, {%r11481, %r11480};
	shf.l.wrap.b32 	%r11482, %r11478, %r11479, 3;
	shf.l.wrap.b32 	%r11483, %r11479, %r11478, 3;
	mov.b64 	%rd16699, {%r11483, %r11482};
	shr.u64 	%rd16700, %rd18742, 6;
	xor.b64  	%rd16701, %rd16698, %rd16700;
	xor.b64  	%rd16702, %rd16701, %rd16699;
	shr.u64 	%rd16703, %rd18726, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11484,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11485}, %rd18726;
	}
	shf.r.wrap.b32 	%r11486, %r11485, %r11484, 1;
	shf.r.wrap.b32 	%r11487, %r11484, %r11485, 1;
	mov.b64 	%rd16704, {%r11487, %r11486};
	xor.b64  	%rd16705, %rd16704, %rd16703;
	shf.r.wrap.b32 	%r11488, %r11485, %r11484, 8;
	shf.r.wrap.b32 	%r11489, %r11484, %r11485, 8;
	mov.b64 	%rd16706, {%r11489, %r11488};
	xor.b64  	%rd16707, %rd16705, %rd16706;
	add.s64 	%rd16708, %rd18737, %rd18727;
	add.s64 	%rd16709, %rd16708, %rd16702;
	add.s64 	%rd18727, %rd16709, %rd16707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11490,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11491}, %rd18743;
	}
	shf.r.wrap.b32 	%r11492, %r11491, %r11490, 19;
	shf.r.wrap.b32 	%r11493, %r11490, %r11491, 19;
	mov.b64 	%rd16710, {%r11493, %r11492};
	shf.l.wrap.b32 	%r11494, %r11490, %r11491, 3;
	shf.l.wrap.b32 	%r11495, %r11491, %r11490, 3;
	mov.b64 	%rd16711, {%r11495, %r11494};
	shr.u64 	%rd16712, %rd18743, 6;
	xor.b64  	%rd16713, %rd16710, %rd16712;
	xor.b64  	%rd16714, %rd16713, %rd16711;
	shr.u64 	%rd16715, %rd18725, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11496,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11497}, %rd18725;
	}
	shf.r.wrap.b32 	%r11498, %r11497, %r11496, 1;
	shf.r.wrap.b32 	%r11499, %r11496, %r11497, 1;
	mov.b64 	%rd16716, {%r11499, %r11498};
	xor.b64  	%rd16717, %rd16716, %rd16715;
	shf.r.wrap.b32 	%r11500, %r11497, %r11496, 8;
	shf.r.wrap.b32 	%r11501, %r11496, %r11497, 8;
	mov.b64 	%rd16718, {%r11501, %r11500};
	xor.b64  	%rd16719, %rd16717, %rd16718;
	add.s64 	%rd16720, %rd18738, %rd18726;
	add.s64 	%rd16721, %rd16720, %rd16714;
	add.s64 	%rd18726, %rd16721, %rd16719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11502,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11503}, %rd18727;
	}
	shf.r.wrap.b32 	%r11504, %r11503, %r11502, 19;
	shf.r.wrap.b32 	%r11505, %r11502, %r11503, 19;
	mov.b64 	%rd16722, {%r11505, %r11504};
	shf.l.wrap.b32 	%r11506, %r11502, %r11503, 3;
	shf.l.wrap.b32 	%r11507, %r11503, %r11502, 3;
	mov.b64 	%rd16723, {%r11507, %r11506};
	shr.u64 	%rd16724, %rd18727, 6;
	xor.b64  	%rd16725, %rd16722, %rd16724;
	xor.b64  	%rd16726, %rd16725, %rd16723;
	shr.u64 	%rd16727, %rd18724, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11508,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11509}, %rd18724;
	}
	shf.r.wrap.b32 	%r11510, %r11509, %r11508, 1;
	shf.r.wrap.b32 	%r11511, %r11508, %r11509, 1;
	mov.b64 	%rd16728, {%r11511, %r11510};
	xor.b64  	%rd16729, %rd16728, %rd16727;
	shf.r.wrap.b32 	%r11512, %r11509, %r11508, 8;
	shf.r.wrap.b32 	%r11513, %r11508, %r11509, 8;
	mov.b64 	%rd16730, {%r11513, %r11512};
	xor.b64  	%rd16731, %rd16729, %rd16730;
	add.s64 	%rd16732, %rd18739, %rd18725;
	add.s64 	%rd16733, %rd16732, %rd16726;
	add.s64 	%rd18725, %rd16733, %rd16731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11514,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11515}, %rd18726;
	}
	shf.r.wrap.b32 	%r11516, %r11515, %r11514, 19;
	shf.r.wrap.b32 	%r11517, %r11514, %r11515, 19;
	mov.b64 	%rd16734, {%r11517, %r11516};
	shf.l.wrap.b32 	%r11518, %r11514, %r11515, 3;
	shf.l.wrap.b32 	%r11519, %r11515, %r11514, 3;
	mov.b64 	%rd16735, {%r11519, %r11518};
	shr.u64 	%rd16736, %rd18726, 6;
	xor.b64  	%rd16737, %rd16734, %rd16736;
	xor.b64  	%rd16738, %rd16737, %rd16735;
	shr.u64 	%rd16739, %rd18723, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11520,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11521}, %rd18723;
	}
	shf.r.wrap.b32 	%r11522, %r11521, %r11520, 1;
	shf.r.wrap.b32 	%r11523, %r11520, %r11521, 1;
	mov.b64 	%rd16740, {%r11523, %r11522};
	xor.b64  	%rd16741, %rd16740, %rd16739;
	shf.r.wrap.b32 	%r11524, %r11521, %r11520, 8;
	shf.r.wrap.b32 	%r11525, %r11520, %r11521, 8;
	mov.b64 	%rd16742, {%r11525, %r11524};
	xor.b64  	%rd16743, %rd16741, %rd16742;
	add.s64 	%rd16744, %rd18740, %rd18724;
	add.s64 	%rd16745, %rd16744, %rd16738;
	add.s64 	%rd18724, %rd16745, %rd16743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11526,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11527}, %rd18725;
	}
	shf.r.wrap.b32 	%r11528, %r11527, %r11526, 19;
	shf.r.wrap.b32 	%r11529, %r11526, %r11527, 19;
	mov.b64 	%rd16746, {%r11529, %r11528};
	shf.l.wrap.b32 	%r11530, %r11526, %r11527, 3;
	shf.l.wrap.b32 	%r11531, %r11527, %r11526, 3;
	mov.b64 	%rd16747, {%r11531, %r11530};
	shr.u64 	%rd16748, %rd18725, 6;
	xor.b64  	%rd16749, %rd16746, %rd16748;
	xor.b64  	%rd16750, %rd16749, %rd16747;
	shr.u64 	%rd16751, %rd18722, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11532,%dummy}, %rd18722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11533}, %rd18722;
	}
	shf.r.wrap.b32 	%r11534, %r11533, %r11532, 1;
	shf.r.wrap.b32 	%r11535, %r11532, %r11533, 1;
	mov.b64 	%rd16752, {%r11535, %r11534};
	xor.b64  	%rd16753, %rd16752, %rd16751;
	shf.r.wrap.b32 	%r11536, %r11533, %r11532, 8;
	shf.r.wrap.b32 	%r11537, %r11532, %r11533, 8;
	mov.b64 	%rd16754, {%r11537, %r11536};
	xor.b64  	%rd16755, %rd16753, %rd16754;
	add.s64 	%rd16756, %rd18741, %rd18723;
	add.s64 	%rd16757, %rd16756, %rd16750;
	add.s64 	%rd18723, %rd16757, %rd16755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11538,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11539}, %rd18724;
	}
	shf.r.wrap.b32 	%r11540, %r11539, %r11538, 19;
	shf.r.wrap.b32 	%r11541, %r11538, %r11539, 19;
	mov.b64 	%rd16758, {%r11541, %r11540};
	shf.l.wrap.b32 	%r11542, %r11538, %r11539, 3;
	shf.l.wrap.b32 	%r11543, %r11539, %r11538, 3;
	mov.b64 	%rd16759, {%r11543, %r11542};
	shr.u64 	%rd16760, %rd18724, 6;
	xor.b64  	%rd16761, %rd16758, %rd16760;
	xor.b64  	%rd16762, %rd16761, %rd16759;
	shr.u64 	%rd16763, %rd18721, 7;
	shf.r.wrap.b32 	%r11544, %r11383, %r11382, 1;
	shf.r.wrap.b32 	%r11545, %r11382, %r11383, 1;
	mov.b64 	%rd16764, {%r11545, %r11544};
	xor.b64  	%rd16765, %rd16764, %rd16763;
	shf.r.wrap.b32 	%r11546, %r11383, %r11382, 8;
	shf.r.wrap.b32 	%r11547, %r11382, %r11383, 8;
	mov.b64 	%rd16766, {%r11547, %r11546};
	xor.b64  	%rd16767, %rd16765, %rd16766;
	add.s64 	%rd16768, %rd18742, %rd18722;
	add.s64 	%rd16769, %rd16768, %rd16762;
	add.s64 	%rd18722, %rd16769, %rd16767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11548,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11549}, %rd18723;
	}
	shf.r.wrap.b32 	%r11550, %r11549, %r11548, 19;
	shf.r.wrap.b32 	%r11551, %r11548, %r11549, 19;
	mov.b64 	%rd16770, {%r11551, %r11550};
	shf.l.wrap.b32 	%r11552, %r11548, %r11549, 3;
	shf.l.wrap.b32 	%r11553, %r11549, %r11548, 3;
	mov.b64 	%rd16771, {%r11553, %r11552};
	shr.u64 	%rd16772, %rd18723, 6;
	xor.b64  	%rd16773, %rd16770, %rd16772;
	xor.b64  	%rd16774, %rd16773, %rd16771;
	shr.u64 	%rd16775, %rd18672, 7;
	shf.r.wrap.b32 	%r11554, %r11395, %r11394, 1;
	shf.r.wrap.b32 	%r11555, %r11394, %r11395, 1;
	mov.b64 	%rd16776, {%r11555, %r11554};
	xor.b64  	%rd16777, %rd16776, %rd16775;
	shf.r.wrap.b32 	%r11556, %r11395, %r11394, 8;
	shf.r.wrap.b32 	%r11557, %r11394, %r11395, 8;
	mov.b64 	%rd16778, {%r11557, %r11556};
	xor.b64  	%rd16779, %rd16777, %rd16778;
	add.s64 	%rd16780, %rd18743, %rd18721;
	add.s64 	%rd16781, %rd16780, %rd16774;
	add.s64 	%rd18721, %rd16781, %rd16779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11558,%dummy}, %rd18722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11559}, %rd18722;
	}
	shf.r.wrap.b32 	%r11560, %r11559, %r11558, 19;
	shf.r.wrap.b32 	%r11561, %r11558, %r11559, 19;
	mov.b64 	%rd16782, {%r11561, %r11560};
	shf.l.wrap.b32 	%r11562, %r11558, %r11559, 3;
	shf.l.wrap.b32 	%r11563, %r11559, %r11558, 3;
	mov.b64 	%rd16783, {%r11563, %r11562};
	shr.u64 	%rd16784, %rd18722, 6;
	xor.b64  	%rd16785, %rd16782, %rd16784;
	xor.b64  	%rd16786, %rd16785, %rd16783;
	shf.r.wrap.b32 	%r11564, %r11407, %r11406, 1;
	shf.r.wrap.b32 	%r11565, %r11406, %r11407, 1;
	mov.b64 	%rd16787, {%r11565, %r11564};
	shf.r.wrap.b32 	%r11566, %r11407, %r11406, 8;
	shf.r.wrap.b32 	%r11567, %r11406, %r11407, 8;
	mov.b64 	%rd16788, {%r11567, %r11566};
	shr.u64 	%rd16789, %rd18736, 7;
	xor.b64  	%rd16790, %rd16787, %rd16789;
	xor.b64  	%rd16791, %rd16790, %rd16788;
	add.s64 	%rd16792, %rd18727, %rd18672;
	add.s64 	%rd16793, %rd16792, %rd16786;
	add.s64 	%rd18672, %rd16793, %rd16791;
	mul.wide.s32 	%rd16794, %r12713, 8;
	mov.u64 	%rd16795, k_sha512;
	add.s64 	%rd16796, %rd16795, %rd16794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11568,%dummy}, %rd18684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11569}, %rd18684;
	}
	shf.r.wrap.b32 	%r11570, %r11569, %r11568, 18;
	shf.r.wrap.b32 	%r11571, %r11568, %r11569, 18;
	mov.b64 	%rd16797, {%r11571, %r11570};
	shf.r.wrap.b32 	%r11572, %r11569, %r11568, 14;
	shf.r.wrap.b32 	%r11573, %r11568, %r11569, 14;
	mov.b64 	%rd16798, {%r11573, %r11572};
	xor.b64  	%rd16799, %rd16797, %rd16798;
	shf.l.wrap.b32 	%r11574, %r11568, %r11569, 23;
	shf.l.wrap.b32 	%r11575, %r11569, %r11568, 23;
	mov.b64 	%rd16800, {%r11575, %r11574};
	xor.b64  	%rd16801, %rd16799, %rd16800;
	xor.b64  	%rd16802, %rd18685, %rd18686;
	and.b64  	%rd16803, %rd18684, %rd16802;
	xor.b64  	%rd16804, %rd16803, %rd18686;
	add.s64 	%rd16805, %rd16804, %rd18687;
	add.s64 	%rd16806, %rd16805, %rd18736;
	ld.const.u64 	%rd16807, [%rd16796];
	add.s64 	%rd16808, %rd16806, %rd16807;
	add.s64 	%rd16809, %rd16808, %rd16801;
	add.s64 	%rd16810, %rd16809, %rd18683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11576}, %rd18680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11577,%dummy}, %rd18680;
	}
	shf.l.wrap.b32 	%r11578, %r11577, %r11576, 30;
	shf.l.wrap.b32 	%r11579, %r11576, %r11577, 30;
	mov.b64 	%rd16811, {%r11579, %r11578};
	shf.r.wrap.b32 	%r11580, %r11576, %r11577, 28;
	shf.r.wrap.b32 	%r11581, %r11577, %r11576, 28;
	mov.b64 	%rd16812, {%r11581, %r11580};
	xor.b64  	%rd16813, %rd16811, %rd16812;
	shf.l.wrap.b32 	%r11582, %r11577, %r11576, 25;
	shf.l.wrap.b32 	%r11583, %r11576, %r11577, 25;
	mov.b64 	%rd16814, {%r11583, %r11582};
	xor.b64  	%rd16815, %rd16813, %rd16814;
	xor.b64  	%rd16816, %rd18680, %rd18681;
	and.b64  	%rd16817, %rd16816, %rd18682;
	and.b64  	%rd16818, %rd18680, %rd18681;
	or.b64  	%rd16819, %rd16817, %rd16818;
	add.s64 	%rd16820, %rd16809, %rd16819;
	add.s64 	%rd16821, %rd16820, %rd16815;
	add.s32 	%r11584, %r12713, 1;
	mul.wide.s32 	%rd16822, %r11584, 8;
	add.s64 	%rd16823, %rd16795, %rd16822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11585,%dummy}, %rd16810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11586}, %rd16810;
	}
	shf.r.wrap.b32 	%r11587, %r11586, %r11585, 14;
	shf.r.wrap.b32 	%r11588, %r11585, %r11586, 14;
	mov.b64 	%rd16824, {%r11588, %r11587};
	shf.r.wrap.b32 	%r11589, %r11586, %r11585, 18;
	shf.r.wrap.b32 	%r11590, %r11585, %r11586, 18;
	mov.b64 	%rd16825, {%r11590, %r11589};
	xor.b64  	%rd16826, %rd16825, %rd16824;
	shf.l.wrap.b32 	%r11591, %r11585, %r11586, 23;
	shf.l.wrap.b32 	%r11592, %r11586, %r11585, 23;
	mov.b64 	%rd16827, {%r11592, %r11591};
	xor.b64  	%rd16828, %rd16826, %rd16827;
	xor.b64  	%rd16829, %rd18684, %rd18685;
	and.b64  	%rd16830, %rd16810, %rd16829;
	xor.b64  	%rd16831, %rd16830, %rd18685;
	add.s64 	%rd16832, %rd18737, %rd18686;
	ld.const.u64 	%rd16833, [%rd16823];
	add.s64 	%rd16834, %rd16832, %rd16833;
	add.s64 	%rd16835, %rd16834, %rd16831;
	add.s64 	%rd16836, %rd16835, %rd16828;
	add.s64 	%rd16837, %rd16836, %rd18682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11593,%dummy}, %rd16821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11594}, %rd16821;
	}
	shf.r.wrap.b32 	%r11595, %r11594, %r11593, 28;
	shf.r.wrap.b32 	%r11596, %r11593, %r11594, 28;
	mov.b64 	%rd16838, {%r11596, %r11595};
	shf.l.wrap.b32 	%r11597, %r11593, %r11594, 30;
	shf.l.wrap.b32 	%r11598, %r11594, %r11593, 30;
	mov.b64 	%rd16839, {%r11598, %r11597};
	xor.b64  	%rd16840, %rd16839, %rd16838;
	shf.l.wrap.b32 	%r11599, %r11593, %r11594, 25;
	shf.l.wrap.b32 	%r11600, %r11594, %r11593, 25;
	mov.b64 	%rd16841, {%r11600, %r11599};
	xor.b64  	%rd16842, %rd16840, %rd16841;
	and.b64  	%rd16843, %rd16821, %rd18680;
	xor.b64  	%rd16844, %rd16821, %rd18680;
	and.b64  	%rd16845, %rd16844, %rd18681;
	or.b64  	%rd16846, %rd16845, %rd16843;
	add.s64 	%rd16847, %rd16836, %rd16846;
	add.s64 	%rd16848, %rd16847, %rd16842;
	add.s32 	%r11601, %r12713, 2;
	mul.wide.s32 	%rd16849, %r11601, 8;
	add.s64 	%rd16850, %rd16795, %rd16849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11602,%dummy}, %rd16837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11603}, %rd16837;
	}
	shf.r.wrap.b32 	%r11604, %r11603, %r11602, 14;
	shf.r.wrap.b32 	%r11605, %r11602, %r11603, 14;
	mov.b64 	%rd16851, {%r11605, %r11604};
	shf.r.wrap.b32 	%r11606, %r11603, %r11602, 18;
	shf.r.wrap.b32 	%r11607, %r11602, %r11603, 18;
	mov.b64 	%rd16852, {%r11607, %r11606};
	xor.b64  	%rd16853, %rd16852, %rd16851;
	shf.l.wrap.b32 	%r11608, %r11602, %r11603, 23;
	shf.l.wrap.b32 	%r11609, %r11603, %r11602, 23;
	mov.b64 	%rd16854, {%r11609, %r11608};
	xor.b64  	%rd16855, %rd16853, %rd16854;
	xor.b64  	%rd16856, %rd16810, %rd18684;
	and.b64  	%rd16857, %rd16837, %rd16856;
	xor.b64  	%rd16858, %rd16857, %rd18684;
	add.s64 	%rd16859, %rd18738, %rd18685;
	ld.const.u64 	%rd16860, [%rd16850];
	add.s64 	%rd16861, %rd16859, %rd16860;
	add.s64 	%rd16862, %rd16861, %rd16858;
	add.s64 	%rd16863, %rd16862, %rd16855;
	add.s64 	%rd16864, %rd16863, %rd18681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11610,%dummy}, %rd16848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11611}, %rd16848;
	}
	shf.r.wrap.b32 	%r11612, %r11611, %r11610, 28;
	shf.r.wrap.b32 	%r11613, %r11610, %r11611, 28;
	mov.b64 	%rd16865, {%r11613, %r11612};
	shf.l.wrap.b32 	%r11614, %r11610, %r11611, 30;
	shf.l.wrap.b32 	%r11615, %r11611, %r11610, 30;
	mov.b64 	%rd16866, {%r11615, %r11614};
	xor.b64  	%rd16867, %rd16866, %rd16865;
	shf.l.wrap.b32 	%r11616, %r11610, %r11611, 25;
	shf.l.wrap.b32 	%r11617, %r11611, %r11610, 25;
	mov.b64 	%rd16868, {%r11617, %r11616};
	xor.b64  	%rd16869, %rd16867, %rd16868;
	and.b64  	%rd16870, %rd16848, %rd16821;
	xor.b64  	%rd16871, %rd16848, %rd16821;
	and.b64  	%rd16872, %rd16871, %rd18680;
	or.b64  	%rd16873, %rd16872, %rd16870;
	add.s64 	%rd16874, %rd16863, %rd16873;
	add.s64 	%rd16875, %rd16874, %rd16869;
	add.s32 	%r11618, %r12713, 3;
	mul.wide.s32 	%rd16876, %r11618, 8;
	add.s64 	%rd16877, %rd16795, %rd16876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11619,%dummy}, %rd16864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11620}, %rd16864;
	}
	shf.r.wrap.b32 	%r11621, %r11620, %r11619, 14;
	shf.r.wrap.b32 	%r11622, %r11619, %r11620, 14;
	mov.b64 	%rd16878, {%r11622, %r11621};
	shf.r.wrap.b32 	%r11623, %r11620, %r11619, 18;
	shf.r.wrap.b32 	%r11624, %r11619, %r11620, 18;
	mov.b64 	%rd16879, {%r11624, %r11623};
	xor.b64  	%rd16880, %rd16879, %rd16878;
	shf.l.wrap.b32 	%r11625, %r11619, %r11620, 23;
	shf.l.wrap.b32 	%r11626, %r11620, %r11619, 23;
	mov.b64 	%rd16881, {%r11626, %r11625};
	xor.b64  	%rd16882, %rd16880, %rd16881;
	xor.b64  	%rd16883, %rd16837, %rd16810;
	and.b64  	%rd16884, %rd16864, %rd16883;
	xor.b64  	%rd16885, %rd16884, %rd16810;
	add.s64 	%rd16886, %rd18739, %rd18684;
	ld.const.u64 	%rd16887, [%rd16877];
	add.s64 	%rd16888, %rd16886, %rd16887;
	add.s64 	%rd16889, %rd16888, %rd16885;
	add.s64 	%rd16890, %rd16889, %rd16882;
	add.s64 	%rd16891, %rd16890, %rd18680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11627,%dummy}, %rd16875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11628}, %rd16875;
	}
	shf.r.wrap.b32 	%r11629, %r11628, %r11627, 28;
	shf.r.wrap.b32 	%r11630, %r11627, %r11628, 28;
	mov.b64 	%rd16892, {%r11630, %r11629};
	shf.l.wrap.b32 	%r11631, %r11627, %r11628, 30;
	shf.l.wrap.b32 	%r11632, %r11628, %r11627, 30;
	mov.b64 	%rd16893, {%r11632, %r11631};
	xor.b64  	%rd16894, %rd16893, %rd16892;
	shf.l.wrap.b32 	%r11633, %r11627, %r11628, 25;
	shf.l.wrap.b32 	%r11634, %r11628, %r11627, 25;
	mov.b64 	%rd16895, {%r11634, %r11633};
	xor.b64  	%rd16896, %rd16894, %rd16895;
	and.b64  	%rd16897, %rd16875, %rd16848;
	xor.b64  	%rd16898, %rd16875, %rd16848;
	and.b64  	%rd16899, %rd16898, %rd16821;
	or.b64  	%rd16900, %rd16899, %rd16897;
	add.s64 	%rd16901, %rd16890, %rd16900;
	add.s64 	%rd16902, %rd16901, %rd16896;
	add.s32 	%r11635, %r12713, 4;
	mul.wide.s32 	%rd16903, %r11635, 8;
	add.s64 	%rd16904, %rd16795, %rd16903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11636,%dummy}, %rd16891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11637}, %rd16891;
	}
	shf.r.wrap.b32 	%r11638, %r11637, %r11636, 14;
	shf.r.wrap.b32 	%r11639, %r11636, %r11637, 14;
	mov.b64 	%rd16905, {%r11639, %r11638};
	shf.r.wrap.b32 	%r11640, %r11637, %r11636, 18;
	shf.r.wrap.b32 	%r11641, %r11636, %r11637, 18;
	mov.b64 	%rd16906, {%r11641, %r11640};
	xor.b64  	%rd16907, %rd16906, %rd16905;
	shf.l.wrap.b32 	%r11642, %r11636, %r11637, 23;
	shf.l.wrap.b32 	%r11643, %r11637, %r11636, 23;
	mov.b64 	%rd16908, {%r11643, %r11642};
	xor.b64  	%rd16909, %rd16907, %rd16908;
	xor.b64  	%rd16910, %rd16864, %rd16837;
	and.b64  	%rd16911, %rd16891, %rd16910;
	xor.b64  	%rd16912, %rd16911, %rd16837;
	add.s64 	%rd16913, %rd16810, %rd18740;
	ld.const.u64 	%rd16914, [%rd16904];
	add.s64 	%rd16915, %rd16913, %rd16914;
	add.s64 	%rd16916, %rd16915, %rd16912;
	add.s64 	%rd16917, %rd16916, %rd16909;
	add.s64 	%rd16918, %rd16917, %rd16821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11644,%dummy}, %rd16902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11645}, %rd16902;
	}
	shf.r.wrap.b32 	%r11646, %r11645, %r11644, 28;
	shf.r.wrap.b32 	%r11647, %r11644, %r11645, 28;
	mov.b64 	%rd16919, {%r11647, %r11646};
	shf.l.wrap.b32 	%r11648, %r11644, %r11645, 30;
	shf.l.wrap.b32 	%r11649, %r11645, %r11644, 30;
	mov.b64 	%rd16920, {%r11649, %r11648};
	xor.b64  	%rd16921, %rd16920, %rd16919;
	shf.l.wrap.b32 	%r11650, %r11644, %r11645, 25;
	shf.l.wrap.b32 	%r11651, %r11645, %r11644, 25;
	mov.b64 	%rd16922, {%r11651, %r11650};
	xor.b64  	%rd16923, %rd16921, %rd16922;
	and.b64  	%rd16924, %rd16902, %rd16875;
	xor.b64  	%rd16925, %rd16902, %rd16875;
	and.b64  	%rd16926, %rd16925, %rd16848;
	or.b64  	%rd16927, %rd16926, %rd16924;
	add.s64 	%rd16928, %rd16917, %rd16927;
	add.s64 	%rd16929, %rd16928, %rd16923;
	add.s32 	%r11652, %r12713, 5;
	mul.wide.s32 	%rd16930, %r11652, 8;
	add.s64 	%rd16931, %rd16795, %rd16930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11653,%dummy}, %rd16918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11654}, %rd16918;
	}
	shf.r.wrap.b32 	%r11655, %r11654, %r11653, 14;
	shf.r.wrap.b32 	%r11656, %r11653, %r11654, 14;
	mov.b64 	%rd16932, {%r11656, %r11655};
	shf.r.wrap.b32 	%r11657, %r11654, %r11653, 18;
	shf.r.wrap.b32 	%r11658, %r11653, %r11654, 18;
	mov.b64 	%rd16933, {%r11658, %r11657};
	xor.b64  	%rd16934, %rd16933, %rd16932;
	shf.l.wrap.b32 	%r11659, %r11653, %r11654, 23;
	shf.l.wrap.b32 	%r11660, %r11654, %r11653, 23;
	mov.b64 	%rd16935, {%r11660, %r11659};
	xor.b64  	%rd16936, %rd16934, %rd16935;
	xor.b64  	%rd16937, %rd16891, %rd16864;
	and.b64  	%rd16938, %rd16918, %rd16937;
	xor.b64  	%rd16939, %rd16938, %rd16864;
	add.s64 	%rd16940, %rd16837, %rd18741;
	ld.const.u64 	%rd16941, [%rd16931];
	add.s64 	%rd16942, %rd16940, %rd16941;
	add.s64 	%rd16943, %rd16942, %rd16939;
	add.s64 	%rd16944, %rd16943, %rd16936;
	add.s64 	%rd16945, %rd16944, %rd16848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11661,%dummy}, %rd16929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11662}, %rd16929;
	}
	shf.r.wrap.b32 	%r11663, %r11662, %r11661, 28;
	shf.r.wrap.b32 	%r11664, %r11661, %r11662, 28;
	mov.b64 	%rd16946, {%r11664, %r11663};
	shf.l.wrap.b32 	%r11665, %r11661, %r11662, 30;
	shf.l.wrap.b32 	%r11666, %r11662, %r11661, 30;
	mov.b64 	%rd16947, {%r11666, %r11665};
	xor.b64  	%rd16948, %rd16947, %rd16946;
	shf.l.wrap.b32 	%r11667, %r11661, %r11662, 25;
	shf.l.wrap.b32 	%r11668, %r11662, %r11661, 25;
	mov.b64 	%rd16949, {%r11668, %r11667};
	xor.b64  	%rd16950, %rd16948, %rd16949;
	and.b64  	%rd16951, %rd16929, %rd16902;
	xor.b64  	%rd16952, %rd16929, %rd16902;
	and.b64  	%rd16953, %rd16952, %rd16875;
	or.b64  	%rd16954, %rd16953, %rd16951;
	add.s64 	%rd16955, %rd16944, %rd16954;
	add.s64 	%rd16956, %rd16955, %rd16950;
	add.s32 	%r11669, %r12713, 6;
	mul.wide.s32 	%rd16957, %r11669, 8;
	add.s64 	%rd16958, %rd16795, %rd16957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11670,%dummy}, %rd16945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11671}, %rd16945;
	}
	shf.r.wrap.b32 	%r11672, %r11671, %r11670, 14;
	shf.r.wrap.b32 	%r11673, %r11670, %r11671, 14;
	mov.b64 	%rd16959, {%r11673, %r11672};
	shf.r.wrap.b32 	%r11674, %r11671, %r11670, 18;
	shf.r.wrap.b32 	%r11675, %r11670, %r11671, 18;
	mov.b64 	%rd16960, {%r11675, %r11674};
	xor.b64  	%rd16961, %rd16960, %rd16959;
	shf.l.wrap.b32 	%r11676, %r11670, %r11671, 23;
	shf.l.wrap.b32 	%r11677, %r11671, %r11670, 23;
	mov.b64 	%rd16962, {%r11677, %r11676};
	xor.b64  	%rd16963, %rd16961, %rd16962;
	xor.b64  	%rd16964, %rd16918, %rd16891;
	and.b64  	%rd16965, %rd16945, %rd16964;
	xor.b64  	%rd16966, %rd16965, %rd16891;
	add.s64 	%rd16967, %rd16864, %rd18742;
	ld.const.u64 	%rd16968, [%rd16958];
	add.s64 	%rd16969, %rd16967, %rd16968;
	add.s64 	%rd16970, %rd16969, %rd16966;
	add.s64 	%rd16971, %rd16970, %rd16963;
	add.s64 	%rd16972, %rd16971, %rd16875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11678,%dummy}, %rd16956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11679}, %rd16956;
	}
	shf.r.wrap.b32 	%r11680, %r11679, %r11678, 28;
	shf.r.wrap.b32 	%r11681, %r11678, %r11679, 28;
	mov.b64 	%rd16973, {%r11681, %r11680};
	shf.l.wrap.b32 	%r11682, %r11678, %r11679, 30;
	shf.l.wrap.b32 	%r11683, %r11679, %r11678, 30;
	mov.b64 	%rd16974, {%r11683, %r11682};
	xor.b64  	%rd16975, %rd16974, %rd16973;
	shf.l.wrap.b32 	%r11684, %r11678, %r11679, 25;
	shf.l.wrap.b32 	%r11685, %r11679, %r11678, 25;
	mov.b64 	%rd16976, {%r11685, %r11684};
	xor.b64  	%rd16977, %rd16975, %rd16976;
	and.b64  	%rd16978, %rd16956, %rd16929;
	xor.b64  	%rd16979, %rd16956, %rd16929;
	and.b64  	%rd16980, %rd16979, %rd16902;
	or.b64  	%rd16981, %rd16980, %rd16978;
	add.s64 	%rd16982, %rd16971, %rd16981;
	add.s64 	%rd16983, %rd16982, %rd16977;
	add.s32 	%r11686, %r12713, 7;
	mul.wide.s32 	%rd16984, %r11686, 8;
	add.s64 	%rd16985, %rd16795, %rd16984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11687,%dummy}, %rd16972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11688}, %rd16972;
	}
	shf.r.wrap.b32 	%r11689, %r11688, %r11687, 14;
	shf.r.wrap.b32 	%r11690, %r11687, %r11688, 14;
	mov.b64 	%rd16986, {%r11690, %r11689};
	shf.r.wrap.b32 	%r11691, %r11688, %r11687, 18;
	shf.r.wrap.b32 	%r11692, %r11687, %r11688, 18;
	mov.b64 	%rd16987, {%r11692, %r11691};
	xor.b64  	%rd16988, %rd16987, %rd16986;
	shf.l.wrap.b32 	%r11693, %r11687, %r11688, 23;
	shf.l.wrap.b32 	%r11694, %r11688, %r11687, 23;
	mov.b64 	%rd16989, {%r11694, %r11693};
	xor.b64  	%rd16990, %rd16988, %rd16989;
	xor.b64  	%rd16991, %rd16945, %rd16918;
	and.b64  	%rd16992, %rd16972, %rd16991;
	xor.b64  	%rd16993, %rd16992, %rd16918;
	add.s64 	%rd16994, %rd16891, %rd18743;
	ld.const.u64 	%rd16995, [%rd16985];
	add.s64 	%rd16996, %rd16994, %rd16995;
	add.s64 	%rd16997, %rd16996, %rd16993;
	add.s64 	%rd16998, %rd16997, %rd16990;
	add.s64 	%rd16999, %rd16998, %rd16902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11695,%dummy}, %rd16983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11696}, %rd16983;
	}
	shf.r.wrap.b32 	%r11697, %r11696, %r11695, 28;
	shf.r.wrap.b32 	%r11698, %r11695, %r11696, 28;
	mov.b64 	%rd17000, {%r11698, %r11697};
	shf.l.wrap.b32 	%r11699, %r11695, %r11696, 30;
	shf.l.wrap.b32 	%r11700, %r11696, %r11695, 30;
	mov.b64 	%rd17001, {%r11700, %r11699};
	xor.b64  	%rd17002, %rd17001, %rd17000;
	shf.l.wrap.b32 	%r11701, %r11695, %r11696, 25;
	shf.l.wrap.b32 	%r11702, %r11696, %r11695, 25;
	mov.b64 	%rd17003, {%r11702, %r11701};
	xor.b64  	%rd17004, %rd17002, %rd17003;
	and.b64  	%rd17005, %rd16983, %rd16956;
	xor.b64  	%rd17006, %rd16983, %rd16956;
	and.b64  	%rd17007, %rd17006, %rd16929;
	or.b64  	%rd17008, %rd17007, %rd17005;
	add.s64 	%rd17009, %rd16998, %rd17008;
	add.s64 	%rd17010, %rd17009, %rd17004;
	add.s32 	%r11703, %r12713, 8;
	mul.wide.s32 	%rd17011, %r11703, 8;
	add.s64 	%rd17012, %rd16795, %rd17011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11704,%dummy}, %rd16999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11705}, %rd16999;
	}
	shf.r.wrap.b32 	%r11706, %r11705, %r11704, 14;
	shf.r.wrap.b32 	%r11707, %r11704, %r11705, 14;
	mov.b64 	%rd17013, {%r11707, %r11706};
	shf.r.wrap.b32 	%r11708, %r11705, %r11704, 18;
	shf.r.wrap.b32 	%r11709, %r11704, %r11705, 18;
	mov.b64 	%rd17014, {%r11709, %r11708};
	xor.b64  	%rd17015, %rd17014, %rd17013;
	shf.l.wrap.b32 	%r11710, %r11704, %r11705, 23;
	shf.l.wrap.b32 	%r11711, %r11705, %r11704, 23;
	mov.b64 	%rd17016, {%r11711, %r11710};
	xor.b64  	%rd17017, %rd17015, %rd17016;
	xor.b64  	%rd17018, %rd16972, %rd16945;
	and.b64  	%rd17019, %rd16999, %rd17018;
	xor.b64  	%rd17020, %rd17019, %rd16945;
	add.s64 	%rd17021, %rd16918, %rd18727;
	ld.const.u64 	%rd17022, [%rd17012];
	add.s64 	%rd17023, %rd17021, %rd17022;
	add.s64 	%rd17024, %rd17023, %rd17020;
	add.s64 	%rd17025, %rd17024, %rd17017;
	add.s64 	%rd17026, %rd17025, %rd16929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11712,%dummy}, %rd17010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11713}, %rd17010;
	}
	shf.r.wrap.b32 	%r11714, %r11713, %r11712, 28;
	shf.r.wrap.b32 	%r11715, %r11712, %r11713, 28;
	mov.b64 	%rd17027, {%r11715, %r11714};
	shf.l.wrap.b32 	%r11716, %r11712, %r11713, 30;
	shf.l.wrap.b32 	%r11717, %r11713, %r11712, 30;
	mov.b64 	%rd17028, {%r11717, %r11716};
	xor.b64  	%rd17029, %rd17028, %rd17027;
	shf.l.wrap.b32 	%r11718, %r11712, %r11713, 25;
	shf.l.wrap.b32 	%r11719, %r11713, %r11712, 25;
	mov.b64 	%rd17030, {%r11719, %r11718};
	xor.b64  	%rd17031, %rd17029, %rd17030;
	and.b64  	%rd17032, %rd17010, %rd16983;
	xor.b64  	%rd17033, %rd17010, %rd16983;
	and.b64  	%rd17034, %rd17033, %rd16956;
	or.b64  	%rd17035, %rd17034, %rd17032;
	add.s64 	%rd17036, %rd17025, %rd17035;
	add.s64 	%rd17037, %rd17036, %rd17031;
	add.s32 	%r11720, %r12713, 9;
	mul.wide.s32 	%rd17038, %r11720, 8;
	add.s64 	%rd17039, %rd16795, %rd17038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11721,%dummy}, %rd17026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11722}, %rd17026;
	}
	shf.r.wrap.b32 	%r11723, %r11722, %r11721, 14;
	shf.r.wrap.b32 	%r11724, %r11721, %r11722, 14;
	mov.b64 	%rd17040, {%r11724, %r11723};
	shf.r.wrap.b32 	%r11725, %r11722, %r11721, 18;
	shf.r.wrap.b32 	%r11726, %r11721, %r11722, 18;
	mov.b64 	%rd17041, {%r11726, %r11725};
	xor.b64  	%rd17042, %rd17041, %rd17040;
	shf.l.wrap.b32 	%r11727, %r11721, %r11722, 23;
	shf.l.wrap.b32 	%r11728, %r11722, %r11721, 23;
	mov.b64 	%rd17043, {%r11728, %r11727};
	xor.b64  	%rd17044, %rd17042, %rd17043;
	xor.b64  	%rd17045, %rd16999, %rd16972;
	and.b64  	%rd17046, %rd17026, %rd17045;
	xor.b64  	%rd17047, %rd17046, %rd16972;
	add.s64 	%rd17048, %rd16945, %rd18726;
	ld.const.u64 	%rd17049, [%rd17039];
	add.s64 	%rd17050, %rd17048, %rd17049;
	add.s64 	%rd17051, %rd17050, %rd17047;
	add.s64 	%rd17052, %rd17051, %rd17044;
	add.s64 	%rd17053, %rd17052, %rd16956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11729,%dummy}, %rd17037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11730}, %rd17037;
	}
	shf.r.wrap.b32 	%r11731, %r11730, %r11729, 28;
	shf.r.wrap.b32 	%r11732, %r11729, %r11730, 28;
	mov.b64 	%rd17054, {%r11732, %r11731};
	shf.l.wrap.b32 	%r11733, %r11729, %r11730, 30;
	shf.l.wrap.b32 	%r11734, %r11730, %r11729, 30;
	mov.b64 	%rd17055, {%r11734, %r11733};
	xor.b64  	%rd17056, %rd17055, %rd17054;
	shf.l.wrap.b32 	%r11735, %r11729, %r11730, 25;
	shf.l.wrap.b32 	%r11736, %r11730, %r11729, 25;
	mov.b64 	%rd17057, {%r11736, %r11735};
	xor.b64  	%rd17058, %rd17056, %rd17057;
	and.b64  	%rd17059, %rd17037, %rd17010;
	xor.b64  	%rd17060, %rd17037, %rd17010;
	and.b64  	%rd17061, %rd17060, %rd16983;
	or.b64  	%rd17062, %rd17061, %rd17059;
	add.s64 	%rd17063, %rd17052, %rd17062;
	add.s64 	%rd17064, %rd17063, %rd17058;
	add.s32 	%r11737, %r12713, 10;
	mul.wide.s32 	%rd17065, %r11737, 8;
	add.s64 	%rd17066, %rd16795, %rd17065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11738,%dummy}, %rd17053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11739}, %rd17053;
	}
	shf.r.wrap.b32 	%r11740, %r11739, %r11738, 14;
	shf.r.wrap.b32 	%r11741, %r11738, %r11739, 14;
	mov.b64 	%rd17067, {%r11741, %r11740};
	shf.r.wrap.b32 	%r11742, %r11739, %r11738, 18;
	shf.r.wrap.b32 	%r11743, %r11738, %r11739, 18;
	mov.b64 	%rd17068, {%r11743, %r11742};
	xor.b64  	%rd17069, %rd17068, %rd17067;
	shf.l.wrap.b32 	%r11744, %r11738, %r11739, 23;
	shf.l.wrap.b32 	%r11745, %r11739, %r11738, 23;
	mov.b64 	%rd17070, {%r11745, %r11744};
	xor.b64  	%rd17071, %rd17069, %rd17070;
	xor.b64  	%rd17072, %rd17026, %rd16999;
	and.b64  	%rd17073, %rd17053, %rd17072;
	xor.b64  	%rd17074, %rd17073, %rd16999;
	add.s64 	%rd17075, %rd16972, %rd18725;
	ld.const.u64 	%rd17076, [%rd17066];
	add.s64 	%rd17077, %rd17075, %rd17076;
	add.s64 	%rd17078, %rd17077, %rd17074;
	add.s64 	%rd17079, %rd17078, %rd17071;
	add.s64 	%rd17080, %rd17079, %rd16983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11746,%dummy}, %rd17064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11747}, %rd17064;
	}
	shf.r.wrap.b32 	%r11748, %r11747, %r11746, 28;
	shf.r.wrap.b32 	%r11749, %r11746, %r11747, 28;
	mov.b64 	%rd17081, {%r11749, %r11748};
	shf.l.wrap.b32 	%r11750, %r11746, %r11747, 30;
	shf.l.wrap.b32 	%r11751, %r11747, %r11746, 30;
	mov.b64 	%rd17082, {%r11751, %r11750};
	xor.b64  	%rd17083, %rd17082, %rd17081;
	shf.l.wrap.b32 	%r11752, %r11746, %r11747, 25;
	shf.l.wrap.b32 	%r11753, %r11747, %r11746, 25;
	mov.b64 	%rd17084, {%r11753, %r11752};
	xor.b64  	%rd17085, %rd17083, %rd17084;
	and.b64  	%rd17086, %rd17064, %rd17037;
	xor.b64  	%rd17087, %rd17064, %rd17037;
	and.b64  	%rd17088, %rd17087, %rd17010;
	or.b64  	%rd17089, %rd17088, %rd17086;
	add.s64 	%rd17090, %rd17079, %rd17089;
	add.s64 	%rd17091, %rd17090, %rd17085;
	add.s32 	%r11754, %r12713, 11;
	mul.wide.s32 	%rd17092, %r11754, 8;
	add.s64 	%rd17093, %rd16795, %rd17092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11755,%dummy}, %rd17080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11756}, %rd17080;
	}
	shf.r.wrap.b32 	%r11757, %r11756, %r11755, 14;
	shf.r.wrap.b32 	%r11758, %r11755, %r11756, 14;
	mov.b64 	%rd17094, {%r11758, %r11757};
	shf.r.wrap.b32 	%r11759, %r11756, %r11755, 18;
	shf.r.wrap.b32 	%r11760, %r11755, %r11756, 18;
	mov.b64 	%rd17095, {%r11760, %r11759};
	xor.b64  	%rd17096, %rd17095, %rd17094;
	shf.l.wrap.b32 	%r11761, %r11755, %r11756, 23;
	shf.l.wrap.b32 	%r11762, %r11756, %r11755, 23;
	mov.b64 	%rd17097, {%r11762, %r11761};
	xor.b64  	%rd17098, %rd17096, %rd17097;
	xor.b64  	%rd17099, %rd17053, %rd17026;
	and.b64  	%rd17100, %rd17080, %rd17099;
	xor.b64  	%rd17101, %rd17100, %rd17026;
	add.s64 	%rd17102, %rd16999, %rd18724;
	ld.const.u64 	%rd17103, [%rd17093];
	add.s64 	%rd17104, %rd17102, %rd17103;
	add.s64 	%rd17105, %rd17104, %rd17101;
	add.s64 	%rd17106, %rd17105, %rd17098;
	add.s64 	%rd17107, %rd17106, %rd17010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11763,%dummy}, %rd17091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11764}, %rd17091;
	}
	shf.r.wrap.b32 	%r11765, %r11764, %r11763, 28;
	shf.r.wrap.b32 	%r11766, %r11763, %r11764, 28;
	mov.b64 	%rd17108, {%r11766, %r11765};
	shf.l.wrap.b32 	%r11767, %r11763, %r11764, 30;
	shf.l.wrap.b32 	%r11768, %r11764, %r11763, 30;
	mov.b64 	%rd17109, {%r11768, %r11767};
	xor.b64  	%rd17110, %rd17109, %rd17108;
	shf.l.wrap.b32 	%r11769, %r11763, %r11764, 25;
	shf.l.wrap.b32 	%r11770, %r11764, %r11763, 25;
	mov.b64 	%rd17111, {%r11770, %r11769};
	xor.b64  	%rd17112, %rd17110, %rd17111;
	and.b64  	%rd17113, %rd17091, %rd17064;
	xor.b64  	%rd17114, %rd17091, %rd17064;
	and.b64  	%rd17115, %rd17114, %rd17037;
	or.b64  	%rd17116, %rd17115, %rd17113;
	add.s64 	%rd17117, %rd17106, %rd17116;
	add.s64 	%rd17118, %rd17117, %rd17112;
	add.s32 	%r11771, %r12713, 12;
	mul.wide.s32 	%rd17119, %r11771, 8;
	add.s64 	%rd17120, %rd16795, %rd17119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11772,%dummy}, %rd17107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11773}, %rd17107;
	}
	shf.r.wrap.b32 	%r11774, %r11773, %r11772, 14;
	shf.r.wrap.b32 	%r11775, %r11772, %r11773, 14;
	mov.b64 	%rd17121, {%r11775, %r11774};
	shf.r.wrap.b32 	%r11776, %r11773, %r11772, 18;
	shf.r.wrap.b32 	%r11777, %r11772, %r11773, 18;
	mov.b64 	%rd17122, {%r11777, %r11776};
	xor.b64  	%rd17123, %rd17122, %rd17121;
	shf.l.wrap.b32 	%r11778, %r11772, %r11773, 23;
	shf.l.wrap.b32 	%r11779, %r11773, %r11772, 23;
	mov.b64 	%rd17124, {%r11779, %r11778};
	xor.b64  	%rd17125, %rd17123, %rd17124;
	xor.b64  	%rd17126, %rd17080, %rd17053;
	and.b64  	%rd17127, %rd17107, %rd17126;
	xor.b64  	%rd17128, %rd17127, %rd17053;
	add.s64 	%rd17129, %rd17026, %rd18723;
	ld.const.u64 	%rd17130, [%rd17120];
	add.s64 	%rd17131, %rd17129, %rd17130;
	add.s64 	%rd17132, %rd17131, %rd17128;
	add.s64 	%rd17133, %rd17132, %rd17125;
	add.s64 	%rd18687, %rd17133, %rd17037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11780,%dummy}, %rd17118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11781}, %rd17118;
	}
	shf.r.wrap.b32 	%r11782, %r11781, %r11780, 28;
	shf.r.wrap.b32 	%r11783, %r11780, %r11781, 28;
	mov.b64 	%rd17134, {%r11783, %r11782};
	shf.l.wrap.b32 	%r11784, %r11780, %r11781, 30;
	shf.l.wrap.b32 	%r11785, %r11781, %r11780, 30;
	mov.b64 	%rd17135, {%r11785, %r11784};
	xor.b64  	%rd17136, %rd17135, %rd17134;
	shf.l.wrap.b32 	%r11786, %r11780, %r11781, 25;
	shf.l.wrap.b32 	%r11787, %r11781, %r11780, 25;
	mov.b64 	%rd17137, {%r11787, %r11786};
	xor.b64  	%rd17138, %rd17136, %rd17137;
	and.b64  	%rd17139, %rd17118, %rd17091;
	xor.b64  	%rd17140, %rd17118, %rd17091;
	and.b64  	%rd17141, %rd17140, %rd17064;
	or.b64  	%rd17142, %rd17141, %rd17139;
	add.s64 	%rd17143, %rd17133, %rd17142;
	add.s64 	%rd18683, %rd17143, %rd17138;
	add.s32 	%r11788, %r12713, 13;
	mul.wide.s32 	%rd17144, %r11788, 8;
	add.s64 	%rd17145, %rd16795, %rd17144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11789,%dummy}, %rd18687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11790}, %rd18687;
	}
	shf.r.wrap.b32 	%r11791, %r11790, %r11789, 14;
	shf.r.wrap.b32 	%r11792, %r11789, %r11790, 14;
	mov.b64 	%rd17146, {%r11792, %r11791};
	shf.r.wrap.b32 	%r11793, %r11790, %r11789, 18;
	shf.r.wrap.b32 	%r11794, %r11789, %r11790, 18;
	mov.b64 	%rd17147, {%r11794, %r11793};
	xor.b64  	%rd17148, %rd17147, %rd17146;
	shf.l.wrap.b32 	%r11795, %r11789, %r11790, 23;
	shf.l.wrap.b32 	%r11796, %r11790, %r11789, 23;
	mov.b64 	%rd17149, {%r11796, %r11795};
	xor.b64  	%rd17150, %rd17148, %rd17149;
	xor.b64  	%rd17151, %rd17107, %rd17080;
	and.b64  	%rd17152, %rd18687, %rd17151;
	xor.b64  	%rd17153, %rd17152, %rd17080;
	add.s64 	%rd17154, %rd17053, %rd18722;
	ld.const.u64 	%rd17155, [%rd17145];
	add.s64 	%rd17156, %rd17154, %rd17155;
	add.s64 	%rd17157, %rd17156, %rd17153;
	add.s64 	%rd17158, %rd17157, %rd17150;
	add.s64 	%rd18686, %rd17158, %rd17064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11797,%dummy}, %rd18683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11798}, %rd18683;
	}
	shf.r.wrap.b32 	%r11799, %r11798, %r11797, 28;
	shf.r.wrap.b32 	%r11800, %r11797, %r11798, 28;
	mov.b64 	%rd17159, {%r11800, %r11799};
	shf.l.wrap.b32 	%r11801, %r11797, %r11798, 30;
	shf.l.wrap.b32 	%r11802, %r11798, %r11797, 30;
	mov.b64 	%rd17160, {%r11802, %r11801};
	xor.b64  	%rd17161, %rd17160, %rd17159;
	shf.l.wrap.b32 	%r11803, %r11797, %r11798, 25;
	shf.l.wrap.b32 	%r11804, %r11798, %r11797, 25;
	mov.b64 	%rd17162, {%r11804, %r11803};
	xor.b64  	%rd17163, %rd17161, %rd17162;
	and.b64  	%rd17164, %rd18683, %rd17118;
	xor.b64  	%rd17165, %rd18683, %rd17118;
	and.b64  	%rd17166, %rd17165, %rd17091;
	or.b64  	%rd17167, %rd17166, %rd17164;
	add.s64 	%rd17168, %rd17158, %rd17167;
	add.s64 	%rd18682, %rd17168, %rd17163;
	add.s32 	%r11805, %r12713, 14;
	mul.wide.s32 	%rd17169, %r11805, 8;
	add.s64 	%rd17170, %rd16795, %rd17169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11806,%dummy}, %rd18686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11807}, %rd18686;
	}
	shf.r.wrap.b32 	%r11808, %r11807, %r11806, 14;
	shf.r.wrap.b32 	%r11809, %r11806, %r11807, 14;
	mov.b64 	%rd17171, {%r11809, %r11808};
	shf.r.wrap.b32 	%r11810, %r11807, %r11806, 18;
	shf.r.wrap.b32 	%r11811, %r11806, %r11807, 18;
	mov.b64 	%rd17172, {%r11811, %r11810};
	xor.b64  	%rd17173, %rd17172, %rd17171;
	shf.l.wrap.b32 	%r11812, %r11806, %r11807, 23;
	shf.l.wrap.b32 	%r11813, %r11807, %r11806, 23;
	mov.b64 	%rd17174, {%r11813, %r11812};
	xor.b64  	%rd17175, %rd17173, %rd17174;
	xor.b64  	%rd17176, %rd18687, %rd17107;
	and.b64  	%rd17177, %rd18686, %rd17176;
	xor.b64  	%rd17178, %rd17177, %rd17107;
	add.s64 	%rd17179, %rd17080, %rd18721;
	ld.const.u64 	%rd17180, [%rd17170];
	add.s64 	%rd17181, %rd17179, %rd17180;
	add.s64 	%rd17182, %rd17181, %rd17178;
	add.s64 	%rd17183, %rd17182, %rd17175;
	add.s64 	%rd18685, %rd17183, %rd17091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11814,%dummy}, %rd18682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11815}, %rd18682;
	}
	shf.r.wrap.b32 	%r11816, %r11815, %r11814, 28;
	shf.r.wrap.b32 	%r11817, %r11814, %r11815, 28;
	mov.b64 	%rd17184, {%r11817, %r11816};
	shf.l.wrap.b32 	%r11818, %r11814, %r11815, 30;
	shf.l.wrap.b32 	%r11819, %r11815, %r11814, 30;
	mov.b64 	%rd17185, {%r11819, %r11818};
	xor.b64  	%rd17186, %rd17185, %rd17184;
	shf.l.wrap.b32 	%r11820, %r11814, %r11815, 25;
	shf.l.wrap.b32 	%r11821, %r11815, %r11814, 25;
	mov.b64 	%rd17187, {%r11821, %r11820};
	xor.b64  	%rd17188, %rd17186, %rd17187;
	and.b64  	%rd17189, %rd18682, %rd18683;
	xor.b64  	%rd17190, %rd18682, %rd18683;
	and.b64  	%rd17191, %rd17190, %rd17118;
	or.b64  	%rd17192, %rd17191, %rd17189;
	add.s64 	%rd17193, %rd17183, %rd17192;
	add.s64 	%rd18681, %rd17193, %rd17188;
	add.s32 	%r11822, %r12713, 15;
	mul.wide.s32 	%rd17194, %r11822, 8;
	add.s64 	%rd17195, %rd16795, %rd17194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11823,%dummy}, %rd18685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11824}, %rd18685;
	}
	shf.r.wrap.b32 	%r11825, %r11824, %r11823, 14;
	shf.r.wrap.b32 	%r11826, %r11823, %r11824, 14;
	mov.b64 	%rd17196, {%r11826, %r11825};
	shf.r.wrap.b32 	%r11827, %r11824, %r11823, 18;
	shf.r.wrap.b32 	%r11828, %r11823, %r11824, 18;
	mov.b64 	%rd17197, {%r11828, %r11827};
	xor.b64  	%rd17198, %rd17197, %rd17196;
	shf.l.wrap.b32 	%r11829, %r11823, %r11824, 23;
	shf.l.wrap.b32 	%r11830, %r11824, %r11823, 23;
	mov.b64 	%rd17199, {%r11830, %r11829};
	xor.b64  	%rd17200, %rd17198, %rd17199;
	xor.b64  	%rd17201, %rd18686, %rd18687;
	and.b64  	%rd17202, %rd18685, %rd17201;
	xor.b64  	%rd17203, %rd17202, %rd18687;
	add.s64 	%rd17204, %rd17107, %rd18672;
	ld.const.u64 	%rd17205, [%rd17195];
	add.s64 	%rd17206, %rd17204, %rd17205;
	add.s64 	%rd17207, %rd17206, %rd17203;
	add.s64 	%rd17208, %rd17207, %rd17200;
	add.s64 	%rd18684, %rd17208, %rd17118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11831,%dummy}, %rd18681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11832}, %rd18681;
	}
	shf.r.wrap.b32 	%r11833, %r11832, %r11831, 28;
	shf.r.wrap.b32 	%r11834, %r11831, %r11832, 28;
	mov.b64 	%rd17209, {%r11834, %r11833};
	shf.l.wrap.b32 	%r11835, %r11831, %r11832, 30;
	shf.l.wrap.b32 	%r11836, %r11832, %r11831, 30;
	mov.b64 	%rd17210, {%r11836, %r11835};
	xor.b64  	%rd17211, %rd17210, %rd17209;
	shf.l.wrap.b32 	%r11837, %r11831, %r11832, 25;
	shf.l.wrap.b32 	%r11838, %r11832, %r11831, 25;
	mov.b64 	%rd17212, {%r11838, %r11837};
	xor.b64  	%rd17213, %rd17211, %rd17212;
	and.b64  	%rd17214, %rd18681, %rd18682;
	xor.b64  	%rd17215, %rd18681, %rd18682;
	and.b64  	%rd17216, %rd17215, %rd18683;
	or.b64  	%rd17217, %rd17216, %rd17214;
	add.s64 	%rd17218, %rd17208, %rd17217;
	add.s64 	%rd18680, %rd17218, %rd17213;
	add.s32 	%r12713, %r12713, 16;
	setp.lt.s32	%p164, %r12713, 80;
	@%p164 bra 	BB0_272;

	add.s64 	%rd18703, %rd1290, %rd18680;
	st.local.u64 	[%rd1], %rd18703;
	add.s64 	%rd18702, %rd1291, %rd18681;
	st.local.u64 	[%rd1+8], %rd18702;
	add.s64 	%rd18701, %rd1292, %rd18682;
	st.local.u64 	[%rd1+16], %rd18701;
	add.s64 	%rd18700, %rd1289, %rd18683;
	st.local.u64 	[%rd1+24], %rd18700;
	add.s64 	%rd18699, %rd1285, %rd18684;
	st.local.u64 	[%rd1+32], %rd18699;
	add.s64 	%rd18698, %rd1287, %rd18685;
	st.local.u64 	[%rd1+40], %rd18698;
	add.s64 	%rd18697, %rd1286, %rd18686;
	st.local.u64 	[%rd1+48], %rd18697;
	add.s64 	%rd18696, %rd1288, %rd18687;
	st.local.u64 	[%rd1+56], %rd18696;
	mov.u64 	%rd18721, 0;
	st.local.u64 	[%rd1+64], %rd18721;
	st.local.u64 	[%rd1+72], %rd18721;
	st.local.u64 	[%rd1+80], %rd18721;
	st.local.u64 	[%rd1+88], %rd18721;
	st.local.u64 	[%rd1+96], %rd18721;
	st.local.u64 	[%rd1+104], %rd18721;
	st.local.u64 	[%rd1+112], %rd18721;
	st.local.u64 	[%rd1+120], %rd18721;
	st.local.u64 	[%rd1+128], %rd18721;
	st.local.u64 	[%rd1+136], %rd18721;
	st.local.u64 	[%rd1+144], %rd18721;
	st.local.u64 	[%rd1+152], %rd18721;
	st.local.u64 	[%rd1+160], %rd18721;
	st.local.u64 	[%rd1+168], %rd18721;
	st.local.u64 	[%rd1+176], %rd18721;
	st.local.u64 	[%rd1+184], %rd18721;
	mov.u64 	%rd18722, %rd18721;
	mov.u64 	%rd18723, %rd18721;
	mov.u64 	%rd18724, %rd18721;
	mov.u64 	%rd18725, %rd18721;
	mov.u64 	%rd18726, %rd18721;
	mov.u64 	%rd18727, %rd18721;
	mov.u64 	%rd18743, %rd18721;
	mov.u64 	%rd18742, %rd18721;
	mov.u64 	%rd18741, %rd18721;
	mov.u64 	%rd18740, %rd18721;
	mov.u64 	%rd18739, %rd18721;
	mov.u64 	%rd18738, %rd18721;
	mov.u64 	%rd18737, %rd18721;
	mov.u64 	%rd18736, %rd18721;
	bra.uni 	BB0_274;

BB0_270:
	ld.local.u64 	%rd18703, [%rd1];
	ld.local.u64 	%rd18702, [%rd1+8];
	ld.local.u64 	%rd18701, [%rd1+16];
	ld.local.u64 	%rd18700, [%rd1+24];
	ld.local.u64 	%rd18699, [%rd1+32];
	ld.local.u64 	%rd18698, [%rd1+40];
	ld.local.u64 	%rd18697, [%rd1+48];
	ld.local.u64 	%rd18696, [%rd1+56];

BB0_274:
	mov.u64 	%rd18719, k_sha512;
	ld.local.u32 	%r11840, [%rd1+192];
	shl.b32 	%r11841, %r11840, 3;
	cvt.s64.s32	%rd18720, %r11841;
	st.local.u64 	[%rd1+184], %rd18720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11842,%dummy}, %rd18699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11843}, %rd18699;
	}
	shf.r.wrap.b32 	%r11844, %r11843, %r11842, 18;
	shf.r.wrap.b32 	%r11845, %r11842, %r11843, 18;
	mov.b64 	%rd17235, {%r11845, %r11844};
	shf.r.wrap.b32 	%r11846, %r11843, %r11842, 14;
	shf.r.wrap.b32 	%r11847, %r11842, %r11843, 14;
	mov.b64 	%rd17236, {%r11847, %r11846};
	xor.b64  	%rd17237, %rd17235, %rd17236;
	shf.l.wrap.b32 	%r11848, %r11842, %r11843, 23;
	shf.l.wrap.b32 	%r11849, %r11843, %r11842, 23;
	mov.b64 	%rd17238, {%r11849, %r11848};
	xor.b64  	%rd17239, %rd17237, %rd17238;
	xor.b64  	%rd17240, %rd18697, %rd18698;
	and.b64  	%rd17241, %rd17240, %rd18699;
	xor.b64  	%rd17242, %rd17241, %rd18697;
	add.s64 	%rd17243, %rd18696, %rd18736;
	add.s64 	%rd17244, %rd17243, %rd18338;
	add.s64 	%rd17245, %rd17244, %rd17242;
	add.s64 	%rd17246, %rd17245, %rd17239;
	add.s64 	%rd17247, %rd17246, %rd18700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11850}, %rd18703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11851,%dummy}, %rd18703;
	}
	shf.l.wrap.b32 	%r11852, %r11851, %r11850, 30;
	shf.l.wrap.b32 	%r11853, %r11850, %r11851, 30;
	mov.b64 	%rd17248, {%r11853, %r11852};
	shf.r.wrap.b32 	%r11854, %r11850, %r11851, 28;
	shf.r.wrap.b32 	%r11855, %r11851, %r11850, 28;
	mov.b64 	%rd17249, {%r11855, %r11854};
	xor.b64  	%rd17250, %rd17248, %rd17249;
	shf.l.wrap.b32 	%r11856, %r11851, %r11850, 25;
	shf.l.wrap.b32 	%r11857, %r11850, %r11851, 25;
	mov.b64 	%rd17251, {%r11857, %r11856};
	xor.b64  	%rd17252, %rd17250, %rd17251;
	xor.b64  	%rd17253, %rd18702, %rd18703;
	and.b64  	%rd17254, %rd18701, %rd17253;
	and.b64  	%rd17255, %rd18702, %rd18703;
	or.b64  	%rd17256, %rd17254, %rd17255;
	add.s64 	%rd17257, %rd17246, %rd17256;
	add.s64 	%rd17258, %rd17257, %rd17252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11858,%dummy}, %rd17247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11859}, %rd17247;
	}
	shf.r.wrap.b32 	%r11860, %r11859, %r11858, 14;
	shf.r.wrap.b32 	%r11861, %r11858, %r11859, 14;
	mov.b64 	%rd17259, {%r11861, %r11860};
	shf.r.wrap.b32 	%r11862, %r11859, %r11858, 18;
	shf.r.wrap.b32 	%r11863, %r11858, %r11859, 18;
	mov.b64 	%rd17260, {%r11863, %r11862};
	xor.b64  	%rd17261, %rd17260, %rd17259;
	shf.l.wrap.b32 	%r11864, %r11858, %r11859, 23;
	shf.l.wrap.b32 	%r11865, %r11859, %r11858, 23;
	mov.b64 	%rd17262, {%r11865, %r11864};
	xor.b64  	%rd17263, %rd17261, %rd17262;
	xor.b64  	%rd17264, %rd18698, %rd18699;
	and.b64  	%rd17265, %rd17247, %rd17264;
	xor.b64  	%rd17266, %rd17265, %rd18698;
	add.s64 	%rd17267, %rd18697, %rd18737;
	add.s64 	%rd17268, %rd17267, %rd18337;
	add.s64 	%rd17269, %rd17268, %rd17266;
	add.s64 	%rd17270, %rd17269, %rd17263;
	add.s64 	%rd17271, %rd17270, %rd18701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11866,%dummy}, %rd17258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11867}, %rd17258;
	}
	shf.r.wrap.b32 	%r11868, %r11867, %r11866, 28;
	shf.r.wrap.b32 	%r11869, %r11866, %r11867, 28;
	mov.b64 	%rd17272, {%r11869, %r11868};
	shf.l.wrap.b32 	%r11870, %r11866, %r11867, 30;
	shf.l.wrap.b32 	%r11871, %r11867, %r11866, 30;
	mov.b64 	%rd17273, {%r11871, %r11870};
	xor.b64  	%rd17274, %rd17273, %rd17272;
	shf.l.wrap.b32 	%r11872, %r11866, %r11867, 25;
	shf.l.wrap.b32 	%r11873, %r11867, %r11866, 25;
	mov.b64 	%rd17275, {%r11873, %r11872};
	xor.b64  	%rd17276, %rd17274, %rd17275;
	and.b64  	%rd17277, %rd17258, %rd18703;
	xor.b64  	%rd17278, %rd17258, %rd18703;
	and.b64  	%rd17279, %rd17278, %rd18702;
	or.b64  	%rd17280, %rd17279, %rd17277;
	add.s64 	%rd17281, %rd17270, %rd17280;
	add.s64 	%rd17282, %rd17281, %rd17276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11874,%dummy}, %rd17271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11875}, %rd17271;
	}
	shf.r.wrap.b32 	%r11876, %r11875, %r11874, 14;
	shf.r.wrap.b32 	%r11877, %r11874, %r11875, 14;
	mov.b64 	%rd17283, {%r11877, %r11876};
	shf.r.wrap.b32 	%r11878, %r11875, %r11874, 18;
	shf.r.wrap.b32 	%r11879, %r11874, %r11875, 18;
	mov.b64 	%rd17284, {%r11879, %r11878};
	xor.b64  	%rd17285, %rd17284, %rd17283;
	shf.l.wrap.b32 	%r11880, %r11874, %r11875, 23;
	shf.l.wrap.b32 	%r11881, %r11875, %r11874, 23;
	mov.b64 	%rd17286, {%r11881, %r11880};
	xor.b64  	%rd17287, %rd17285, %rd17286;
	xor.b64  	%rd17288, %rd17247, %rd18699;
	and.b64  	%rd17289, %rd17271, %rd17288;
	xor.b64  	%rd17290, %rd17289, %rd18699;
	add.s64 	%rd17291, %rd18698, %rd18738;
	add.s64 	%rd17292, %rd17291, %rd18336;
	add.s64 	%rd17293, %rd17292, %rd17290;
	add.s64 	%rd17294, %rd17293, %rd17287;
	add.s64 	%rd17295, %rd17294, %rd18702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11882,%dummy}, %rd17282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11883}, %rd17282;
	}
	shf.r.wrap.b32 	%r11884, %r11883, %r11882, 28;
	shf.r.wrap.b32 	%r11885, %r11882, %r11883, 28;
	mov.b64 	%rd17296, {%r11885, %r11884};
	shf.l.wrap.b32 	%r11886, %r11882, %r11883, 30;
	shf.l.wrap.b32 	%r11887, %r11883, %r11882, 30;
	mov.b64 	%rd17297, {%r11887, %r11886};
	xor.b64  	%rd17298, %rd17297, %rd17296;
	shf.l.wrap.b32 	%r11888, %r11882, %r11883, 25;
	shf.l.wrap.b32 	%r11889, %r11883, %r11882, 25;
	mov.b64 	%rd17299, {%r11889, %r11888};
	xor.b64  	%rd17300, %rd17298, %rd17299;
	and.b64  	%rd17301, %rd17282, %rd17258;
	xor.b64  	%rd17302, %rd17282, %rd17258;
	and.b64  	%rd17303, %rd17302, %rd18703;
	or.b64  	%rd17304, %rd17303, %rd17301;
	add.s64 	%rd17305, %rd17294, %rd17304;
	add.s64 	%rd17306, %rd17305, %rd17300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11890,%dummy}, %rd17295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11891}, %rd17295;
	}
	shf.r.wrap.b32 	%r11892, %r11891, %r11890, 14;
	shf.r.wrap.b32 	%r11893, %r11890, %r11891, 14;
	mov.b64 	%rd17307, {%r11893, %r11892};
	shf.r.wrap.b32 	%r11894, %r11891, %r11890, 18;
	shf.r.wrap.b32 	%r11895, %r11890, %r11891, 18;
	mov.b64 	%rd17308, {%r11895, %r11894};
	xor.b64  	%rd17309, %rd17308, %rd17307;
	shf.l.wrap.b32 	%r11896, %r11890, %r11891, 23;
	shf.l.wrap.b32 	%r11897, %r11891, %r11890, 23;
	mov.b64 	%rd17310, {%r11897, %r11896};
	xor.b64  	%rd17311, %rd17309, %rd17310;
	xor.b64  	%rd17312, %rd17271, %rd17247;
	and.b64  	%rd17313, %rd17295, %rd17312;
	xor.b64  	%rd17314, %rd17313, %rd17247;
	add.s64 	%rd17315, %rd18699, %rd18739;
	add.s64 	%rd17316, %rd17315, %rd18335;
	add.s64 	%rd17317, %rd17316, %rd17314;
	add.s64 	%rd17318, %rd17317, %rd17311;
	add.s64 	%rd17319, %rd17318, %rd18703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11898,%dummy}, %rd17306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11899}, %rd17306;
	}
	shf.r.wrap.b32 	%r11900, %r11899, %r11898, 28;
	shf.r.wrap.b32 	%r11901, %r11898, %r11899, 28;
	mov.b64 	%rd17320, {%r11901, %r11900};
	shf.l.wrap.b32 	%r11902, %r11898, %r11899, 30;
	shf.l.wrap.b32 	%r11903, %r11899, %r11898, 30;
	mov.b64 	%rd17321, {%r11903, %r11902};
	xor.b64  	%rd17322, %rd17321, %rd17320;
	shf.l.wrap.b32 	%r11904, %r11898, %r11899, 25;
	shf.l.wrap.b32 	%r11905, %r11899, %r11898, 25;
	mov.b64 	%rd17323, {%r11905, %r11904};
	xor.b64  	%rd17324, %rd17322, %rd17323;
	and.b64  	%rd17325, %rd17306, %rd17282;
	xor.b64  	%rd17326, %rd17306, %rd17282;
	and.b64  	%rd17327, %rd17326, %rd17258;
	or.b64  	%rd17328, %rd17327, %rd17325;
	add.s64 	%rd17329, %rd17318, %rd17328;
	add.s64 	%rd17330, %rd17329, %rd17324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11906,%dummy}, %rd17319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11907}, %rd17319;
	}
	shf.r.wrap.b32 	%r11908, %r11907, %r11906, 14;
	shf.r.wrap.b32 	%r11909, %r11906, %r11907, 14;
	mov.b64 	%rd17331, {%r11909, %r11908};
	shf.r.wrap.b32 	%r11910, %r11907, %r11906, 18;
	shf.r.wrap.b32 	%r11911, %r11906, %r11907, 18;
	mov.b64 	%rd17332, {%r11911, %r11910};
	xor.b64  	%rd17333, %rd17332, %rd17331;
	shf.l.wrap.b32 	%r11912, %r11906, %r11907, 23;
	shf.l.wrap.b32 	%r11913, %r11907, %r11906, 23;
	mov.b64 	%rd17334, {%r11913, %r11912};
	xor.b64  	%rd17335, %rd17333, %rd17334;
	xor.b64  	%rd17336, %rd17295, %rd17271;
	and.b64  	%rd17337, %rd17319, %rd17336;
	xor.b64  	%rd17338, %rd17337, %rd17271;
	add.s64 	%rd17339, %rd17247, %rd18740;
	add.s64 	%rd17340, %rd17339, %rd18334;
	add.s64 	%rd17341, %rd17340, %rd17338;
	add.s64 	%rd17342, %rd17341, %rd17335;
	add.s64 	%rd17343, %rd17342, %rd17258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11914,%dummy}, %rd17330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11915}, %rd17330;
	}
	shf.r.wrap.b32 	%r11916, %r11915, %r11914, 28;
	shf.r.wrap.b32 	%r11917, %r11914, %r11915, 28;
	mov.b64 	%rd17344, {%r11917, %r11916};
	shf.l.wrap.b32 	%r11918, %r11914, %r11915, 30;
	shf.l.wrap.b32 	%r11919, %r11915, %r11914, 30;
	mov.b64 	%rd17345, {%r11919, %r11918};
	xor.b64  	%rd17346, %rd17345, %rd17344;
	shf.l.wrap.b32 	%r11920, %r11914, %r11915, 25;
	shf.l.wrap.b32 	%r11921, %r11915, %r11914, 25;
	mov.b64 	%rd17347, {%r11921, %r11920};
	xor.b64  	%rd17348, %rd17346, %rd17347;
	and.b64  	%rd17349, %rd17330, %rd17306;
	xor.b64  	%rd17350, %rd17330, %rd17306;
	and.b64  	%rd17351, %rd17350, %rd17282;
	or.b64  	%rd17352, %rd17351, %rd17349;
	add.s64 	%rd17353, %rd17342, %rd17352;
	add.s64 	%rd17354, %rd17353, %rd17348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11922,%dummy}, %rd17343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11923}, %rd17343;
	}
	shf.r.wrap.b32 	%r11924, %r11923, %r11922, 14;
	shf.r.wrap.b32 	%r11925, %r11922, %r11923, 14;
	mov.b64 	%rd17355, {%r11925, %r11924};
	shf.r.wrap.b32 	%r11926, %r11923, %r11922, 18;
	shf.r.wrap.b32 	%r11927, %r11922, %r11923, 18;
	mov.b64 	%rd17356, {%r11927, %r11926};
	xor.b64  	%rd17357, %rd17356, %rd17355;
	shf.l.wrap.b32 	%r11928, %r11922, %r11923, 23;
	shf.l.wrap.b32 	%r11929, %r11923, %r11922, 23;
	mov.b64 	%rd17358, {%r11929, %r11928};
	xor.b64  	%rd17359, %rd17357, %rd17358;
	xor.b64  	%rd17360, %rd17319, %rd17295;
	and.b64  	%rd17361, %rd17343, %rd17360;
	xor.b64  	%rd17362, %rd17361, %rd17295;
	add.s64 	%rd17363, %rd17271, %rd18741;
	add.s64 	%rd17364, %rd17363, %rd18333;
	add.s64 	%rd17365, %rd17364, %rd17362;
	add.s64 	%rd17366, %rd17365, %rd17359;
	add.s64 	%rd17367, %rd17366, %rd17282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11930,%dummy}, %rd17354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11931}, %rd17354;
	}
	shf.r.wrap.b32 	%r11932, %r11931, %r11930, 28;
	shf.r.wrap.b32 	%r11933, %r11930, %r11931, 28;
	mov.b64 	%rd17368, {%r11933, %r11932};
	shf.l.wrap.b32 	%r11934, %r11930, %r11931, 30;
	shf.l.wrap.b32 	%r11935, %r11931, %r11930, 30;
	mov.b64 	%rd17369, {%r11935, %r11934};
	xor.b64  	%rd17370, %rd17369, %rd17368;
	shf.l.wrap.b32 	%r11936, %r11930, %r11931, 25;
	shf.l.wrap.b32 	%r11937, %r11931, %r11930, 25;
	mov.b64 	%rd17371, {%r11937, %r11936};
	xor.b64  	%rd17372, %rd17370, %rd17371;
	and.b64  	%rd17373, %rd17354, %rd17330;
	xor.b64  	%rd17374, %rd17354, %rd17330;
	and.b64  	%rd17375, %rd17374, %rd17306;
	or.b64  	%rd17376, %rd17375, %rd17373;
	add.s64 	%rd17377, %rd17366, %rd17376;
	add.s64 	%rd17378, %rd17377, %rd17372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11938,%dummy}, %rd17367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11939}, %rd17367;
	}
	shf.r.wrap.b32 	%r11940, %r11939, %r11938, 14;
	shf.r.wrap.b32 	%r11941, %r11938, %r11939, 14;
	mov.b64 	%rd17379, {%r11941, %r11940};
	shf.r.wrap.b32 	%r11942, %r11939, %r11938, 18;
	shf.r.wrap.b32 	%r11943, %r11938, %r11939, 18;
	mov.b64 	%rd17380, {%r11943, %r11942};
	xor.b64  	%rd17381, %rd17380, %rd17379;
	shf.l.wrap.b32 	%r11944, %r11938, %r11939, 23;
	shf.l.wrap.b32 	%r11945, %r11939, %r11938, 23;
	mov.b64 	%rd17382, {%r11945, %r11944};
	xor.b64  	%rd17383, %rd17381, %rd17382;
	xor.b64  	%rd17384, %rd17343, %rd17319;
	and.b64  	%rd17385, %rd17367, %rd17384;
	xor.b64  	%rd17386, %rd17385, %rd17319;
	add.s64 	%rd17387, %rd17295, %rd18742;
	add.s64 	%rd17388, %rd17387, %rd18332;
	add.s64 	%rd17389, %rd17388, %rd17386;
	add.s64 	%rd17390, %rd17389, %rd17383;
	add.s64 	%rd17391, %rd17390, %rd17306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11946,%dummy}, %rd17378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11947}, %rd17378;
	}
	shf.r.wrap.b32 	%r11948, %r11947, %r11946, 28;
	shf.r.wrap.b32 	%r11949, %r11946, %r11947, 28;
	mov.b64 	%rd17392, {%r11949, %r11948};
	shf.l.wrap.b32 	%r11950, %r11946, %r11947, 30;
	shf.l.wrap.b32 	%r11951, %r11947, %r11946, 30;
	mov.b64 	%rd17393, {%r11951, %r11950};
	xor.b64  	%rd17394, %rd17393, %rd17392;
	shf.l.wrap.b32 	%r11952, %r11946, %r11947, 25;
	shf.l.wrap.b32 	%r11953, %r11947, %r11946, 25;
	mov.b64 	%rd17395, {%r11953, %r11952};
	xor.b64  	%rd17396, %rd17394, %rd17395;
	and.b64  	%rd17397, %rd17378, %rd17354;
	xor.b64  	%rd17398, %rd17378, %rd17354;
	and.b64  	%rd17399, %rd17398, %rd17330;
	or.b64  	%rd17400, %rd17399, %rd17397;
	add.s64 	%rd17401, %rd17390, %rd17400;
	add.s64 	%rd17402, %rd17401, %rd17396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11954,%dummy}, %rd17391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11955}, %rd17391;
	}
	shf.r.wrap.b32 	%r11956, %r11955, %r11954, 14;
	shf.r.wrap.b32 	%r11957, %r11954, %r11955, 14;
	mov.b64 	%rd17403, {%r11957, %r11956};
	shf.r.wrap.b32 	%r11958, %r11955, %r11954, 18;
	shf.r.wrap.b32 	%r11959, %r11954, %r11955, 18;
	mov.b64 	%rd17404, {%r11959, %r11958};
	xor.b64  	%rd17405, %rd17404, %rd17403;
	shf.l.wrap.b32 	%r11960, %r11954, %r11955, 23;
	shf.l.wrap.b32 	%r11961, %r11955, %r11954, 23;
	mov.b64 	%rd17406, {%r11961, %r11960};
	xor.b64  	%rd17407, %rd17405, %rd17406;
	xor.b64  	%rd17408, %rd17367, %rd17343;
	and.b64  	%rd17409, %rd17391, %rd17408;
	xor.b64  	%rd17410, %rd17409, %rd17343;
	add.s64 	%rd17411, %rd17319, %rd18743;
	add.s64 	%rd17412, %rd17411, %rd18331;
	add.s64 	%rd17413, %rd17412, %rd17410;
	add.s64 	%rd17414, %rd17413, %rd17407;
	add.s64 	%rd17415, %rd17414, %rd17330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11962,%dummy}, %rd17402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11963}, %rd17402;
	}
	shf.r.wrap.b32 	%r11964, %r11963, %r11962, 28;
	shf.r.wrap.b32 	%r11965, %r11962, %r11963, 28;
	mov.b64 	%rd17416, {%r11965, %r11964};
	shf.l.wrap.b32 	%r11966, %r11962, %r11963, 30;
	shf.l.wrap.b32 	%r11967, %r11963, %r11962, 30;
	mov.b64 	%rd17417, {%r11967, %r11966};
	xor.b64  	%rd17418, %rd17417, %rd17416;
	shf.l.wrap.b32 	%r11968, %r11962, %r11963, 25;
	shf.l.wrap.b32 	%r11969, %r11963, %r11962, 25;
	mov.b64 	%rd17419, {%r11969, %r11968};
	xor.b64  	%rd17420, %rd17418, %rd17419;
	and.b64  	%rd17421, %rd17402, %rd17378;
	xor.b64  	%rd17422, %rd17402, %rd17378;
	and.b64  	%rd17423, %rd17422, %rd17354;
	or.b64  	%rd17424, %rd17423, %rd17421;
	add.s64 	%rd17425, %rd17414, %rd17424;
	add.s64 	%rd17426, %rd17425, %rd17420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11970,%dummy}, %rd17415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11971}, %rd17415;
	}
	shf.r.wrap.b32 	%r11972, %r11971, %r11970, 14;
	shf.r.wrap.b32 	%r11973, %r11970, %r11971, 14;
	mov.b64 	%rd17427, {%r11973, %r11972};
	shf.r.wrap.b32 	%r11974, %r11971, %r11970, 18;
	shf.r.wrap.b32 	%r11975, %r11970, %r11971, 18;
	mov.b64 	%rd17428, {%r11975, %r11974};
	xor.b64  	%rd17429, %rd17428, %rd17427;
	shf.l.wrap.b32 	%r11976, %r11970, %r11971, 23;
	shf.l.wrap.b32 	%r11977, %r11971, %r11970, 23;
	mov.b64 	%rd17430, {%r11977, %r11976};
	xor.b64  	%rd17431, %rd17429, %rd17430;
	xor.b64  	%rd17432, %rd17391, %rd17367;
	and.b64  	%rd17433, %rd17415, %rd17432;
	xor.b64  	%rd17434, %rd17433, %rd17367;
	add.s64 	%rd17435, %rd17343, %rd18727;
	add.s64 	%rd17436, %rd17435, %rd18330;
	add.s64 	%rd17437, %rd17436, %rd17434;
	add.s64 	%rd17438, %rd17437, %rd17431;
	add.s64 	%rd17439, %rd17438, %rd17354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11978,%dummy}, %rd17426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11979}, %rd17426;
	}
	shf.r.wrap.b32 	%r11980, %r11979, %r11978, 28;
	shf.r.wrap.b32 	%r11981, %r11978, %r11979, 28;
	mov.b64 	%rd17440, {%r11981, %r11980};
	shf.l.wrap.b32 	%r11982, %r11978, %r11979, 30;
	shf.l.wrap.b32 	%r11983, %r11979, %r11978, 30;
	mov.b64 	%rd17441, {%r11983, %r11982};
	xor.b64  	%rd17442, %rd17441, %rd17440;
	shf.l.wrap.b32 	%r11984, %r11978, %r11979, 25;
	shf.l.wrap.b32 	%r11985, %r11979, %r11978, 25;
	mov.b64 	%rd17443, {%r11985, %r11984};
	xor.b64  	%rd17444, %rd17442, %rd17443;
	and.b64  	%rd17445, %rd17426, %rd17402;
	xor.b64  	%rd17446, %rd17426, %rd17402;
	and.b64  	%rd17447, %rd17446, %rd17378;
	or.b64  	%rd17448, %rd17447, %rd17445;
	add.s64 	%rd17449, %rd17438, %rd17448;
	add.s64 	%rd17450, %rd17449, %rd17444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11986,%dummy}, %rd17439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11987}, %rd17439;
	}
	shf.r.wrap.b32 	%r11988, %r11987, %r11986, 14;
	shf.r.wrap.b32 	%r11989, %r11986, %r11987, 14;
	mov.b64 	%rd17451, {%r11989, %r11988};
	shf.r.wrap.b32 	%r11990, %r11987, %r11986, 18;
	shf.r.wrap.b32 	%r11991, %r11986, %r11987, 18;
	mov.b64 	%rd17452, {%r11991, %r11990};
	xor.b64  	%rd17453, %rd17452, %rd17451;
	shf.l.wrap.b32 	%r11992, %r11986, %r11987, 23;
	shf.l.wrap.b32 	%r11993, %r11987, %r11986, 23;
	mov.b64 	%rd17454, {%r11993, %r11992};
	xor.b64  	%rd17455, %rd17453, %rd17454;
	xor.b64  	%rd17456, %rd17415, %rd17391;
	and.b64  	%rd17457, %rd17439, %rd17456;
	xor.b64  	%rd17458, %rd17457, %rd17391;
	add.s64 	%rd17459, %rd17367, %rd18726;
	add.s64 	%rd17460, %rd17459, %rd18329;
	add.s64 	%rd17461, %rd17460, %rd17458;
	add.s64 	%rd17462, %rd17461, %rd17455;
	add.s64 	%rd17463, %rd17462, %rd17378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11994,%dummy}, %rd17450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11995}, %rd17450;
	}
	shf.r.wrap.b32 	%r11996, %r11995, %r11994, 28;
	shf.r.wrap.b32 	%r11997, %r11994, %r11995, 28;
	mov.b64 	%rd17464, {%r11997, %r11996};
	shf.l.wrap.b32 	%r11998, %r11994, %r11995, 30;
	shf.l.wrap.b32 	%r11999, %r11995, %r11994, 30;
	mov.b64 	%rd17465, {%r11999, %r11998};
	xor.b64  	%rd17466, %rd17465, %rd17464;
	shf.l.wrap.b32 	%r12000, %r11994, %r11995, 25;
	shf.l.wrap.b32 	%r12001, %r11995, %r11994, 25;
	mov.b64 	%rd17467, {%r12001, %r12000};
	xor.b64  	%rd17468, %rd17466, %rd17467;
	and.b64  	%rd17469, %rd17450, %rd17426;
	xor.b64  	%rd17470, %rd17450, %rd17426;
	and.b64  	%rd17471, %rd17470, %rd17402;
	or.b64  	%rd17472, %rd17471, %rd17469;
	add.s64 	%rd17473, %rd17462, %rd17472;
	add.s64 	%rd17474, %rd17473, %rd17468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12002,%dummy}, %rd17463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12003}, %rd17463;
	}
	shf.r.wrap.b32 	%r12004, %r12003, %r12002, 14;
	shf.r.wrap.b32 	%r12005, %r12002, %r12003, 14;
	mov.b64 	%rd17475, {%r12005, %r12004};
	shf.r.wrap.b32 	%r12006, %r12003, %r12002, 18;
	shf.r.wrap.b32 	%r12007, %r12002, %r12003, 18;
	mov.b64 	%rd17476, {%r12007, %r12006};
	xor.b64  	%rd17477, %rd17476, %rd17475;
	shf.l.wrap.b32 	%r12008, %r12002, %r12003, 23;
	shf.l.wrap.b32 	%r12009, %r12003, %r12002, 23;
	mov.b64 	%rd17478, {%r12009, %r12008};
	xor.b64  	%rd17479, %rd17477, %rd17478;
	xor.b64  	%rd17480, %rd17439, %rd17415;
	and.b64  	%rd17481, %rd17463, %rd17480;
	xor.b64  	%rd17482, %rd17481, %rd17415;
	add.s64 	%rd17483, %rd17391, %rd18725;
	add.s64 	%rd17484, %rd17483, %rd18328;
	add.s64 	%rd17485, %rd17484, %rd17482;
	add.s64 	%rd17486, %rd17485, %rd17479;
	add.s64 	%rd17487, %rd17486, %rd17402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12010,%dummy}, %rd17474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12011}, %rd17474;
	}
	shf.r.wrap.b32 	%r12012, %r12011, %r12010, 28;
	shf.r.wrap.b32 	%r12013, %r12010, %r12011, 28;
	mov.b64 	%rd17488, {%r12013, %r12012};
	shf.l.wrap.b32 	%r12014, %r12010, %r12011, 30;
	shf.l.wrap.b32 	%r12015, %r12011, %r12010, 30;
	mov.b64 	%rd17489, {%r12015, %r12014};
	xor.b64  	%rd17490, %rd17489, %rd17488;
	shf.l.wrap.b32 	%r12016, %r12010, %r12011, 25;
	shf.l.wrap.b32 	%r12017, %r12011, %r12010, 25;
	mov.b64 	%rd17491, {%r12017, %r12016};
	xor.b64  	%rd17492, %rd17490, %rd17491;
	and.b64  	%rd17493, %rd17474, %rd17450;
	xor.b64  	%rd17494, %rd17474, %rd17450;
	and.b64  	%rd17495, %rd17494, %rd17426;
	or.b64  	%rd17496, %rd17495, %rd17493;
	add.s64 	%rd17497, %rd17486, %rd17496;
	add.s64 	%rd17498, %rd17497, %rd17492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12018,%dummy}, %rd17487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12019}, %rd17487;
	}
	shf.r.wrap.b32 	%r12020, %r12019, %r12018, 14;
	shf.r.wrap.b32 	%r12021, %r12018, %r12019, 14;
	mov.b64 	%rd17499, {%r12021, %r12020};
	shf.r.wrap.b32 	%r12022, %r12019, %r12018, 18;
	shf.r.wrap.b32 	%r12023, %r12018, %r12019, 18;
	mov.b64 	%rd17500, {%r12023, %r12022};
	xor.b64  	%rd17501, %rd17500, %rd17499;
	shf.l.wrap.b32 	%r12024, %r12018, %r12019, 23;
	shf.l.wrap.b32 	%r12025, %r12019, %r12018, 23;
	mov.b64 	%rd17502, {%r12025, %r12024};
	xor.b64  	%rd17503, %rd17501, %rd17502;
	xor.b64  	%rd17504, %rd17463, %rd17439;
	and.b64  	%rd17505, %rd17487, %rd17504;
	xor.b64  	%rd17506, %rd17505, %rd17439;
	add.s64 	%rd17507, %rd17415, %rd18724;
	add.s64 	%rd17508, %rd17507, %rd18327;
	add.s64 	%rd17509, %rd17508, %rd17506;
	add.s64 	%rd17510, %rd17509, %rd17503;
	add.s64 	%rd17511, %rd17510, %rd17426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12026,%dummy}, %rd17498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12027}, %rd17498;
	}
	shf.r.wrap.b32 	%r12028, %r12027, %r12026, 28;
	shf.r.wrap.b32 	%r12029, %r12026, %r12027, 28;
	mov.b64 	%rd17512, {%r12029, %r12028};
	shf.l.wrap.b32 	%r12030, %r12026, %r12027, 30;
	shf.l.wrap.b32 	%r12031, %r12027, %r12026, 30;
	mov.b64 	%rd17513, {%r12031, %r12030};
	xor.b64  	%rd17514, %rd17513, %rd17512;
	shf.l.wrap.b32 	%r12032, %r12026, %r12027, 25;
	shf.l.wrap.b32 	%r12033, %r12027, %r12026, 25;
	mov.b64 	%rd17515, {%r12033, %r12032};
	xor.b64  	%rd17516, %rd17514, %rd17515;
	and.b64  	%rd17517, %rd17498, %rd17474;
	xor.b64  	%rd17518, %rd17498, %rd17474;
	and.b64  	%rd17519, %rd17518, %rd17450;
	or.b64  	%rd17520, %rd17519, %rd17517;
	add.s64 	%rd17521, %rd17510, %rd17520;
	add.s64 	%rd17522, %rd17521, %rd17516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12034,%dummy}, %rd17511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12035}, %rd17511;
	}
	shf.r.wrap.b32 	%r12036, %r12035, %r12034, 14;
	shf.r.wrap.b32 	%r12037, %r12034, %r12035, 14;
	mov.b64 	%rd17523, {%r12037, %r12036};
	shf.r.wrap.b32 	%r12038, %r12035, %r12034, 18;
	shf.r.wrap.b32 	%r12039, %r12034, %r12035, 18;
	mov.b64 	%rd17524, {%r12039, %r12038};
	xor.b64  	%rd17525, %rd17524, %rd17523;
	shf.l.wrap.b32 	%r12040, %r12034, %r12035, 23;
	shf.l.wrap.b32 	%r12041, %r12035, %r12034, 23;
	mov.b64 	%rd17526, {%r12041, %r12040};
	xor.b64  	%rd17527, %rd17525, %rd17526;
	xor.b64  	%rd17528, %rd17487, %rd17463;
	and.b64  	%rd17529, %rd17511, %rd17528;
	xor.b64  	%rd17530, %rd17529, %rd17463;
	add.s64 	%rd17531, %rd17439, %rd18723;
	add.s64 	%rd17532, %rd17531, %rd18326;
	add.s64 	%rd17533, %rd17532, %rd17530;
	add.s64 	%rd17534, %rd17533, %rd17527;
	add.s64 	%rd18735, %rd17534, %rd17450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12042,%dummy}, %rd17522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12043}, %rd17522;
	}
	shf.r.wrap.b32 	%r12044, %r12043, %r12042, 28;
	shf.r.wrap.b32 	%r12045, %r12042, %r12043, 28;
	mov.b64 	%rd17535, {%r12045, %r12044};
	shf.l.wrap.b32 	%r12046, %r12042, %r12043, 30;
	shf.l.wrap.b32 	%r12047, %r12043, %r12042, 30;
	mov.b64 	%rd17536, {%r12047, %r12046};
	xor.b64  	%rd17537, %rd17536, %rd17535;
	shf.l.wrap.b32 	%r12048, %r12042, %r12043, 25;
	shf.l.wrap.b32 	%r12049, %r12043, %r12042, 25;
	mov.b64 	%rd17538, {%r12049, %r12048};
	xor.b64  	%rd17539, %rd17537, %rd17538;
	and.b64  	%rd17540, %rd17522, %rd17498;
	xor.b64  	%rd17541, %rd17522, %rd17498;
	and.b64  	%rd17542, %rd17541, %rd17474;
	or.b64  	%rd17543, %rd17542, %rd17540;
	add.s64 	%rd17544, %rd17534, %rd17543;
	add.s64 	%rd18731, %rd17544, %rd17539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12050,%dummy}, %rd18735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12051}, %rd18735;
	}
	shf.r.wrap.b32 	%r12052, %r12051, %r12050, 14;
	shf.r.wrap.b32 	%r12053, %r12050, %r12051, 14;
	mov.b64 	%rd17545, {%r12053, %r12052};
	shf.r.wrap.b32 	%r12054, %r12051, %r12050, 18;
	shf.r.wrap.b32 	%r12055, %r12050, %r12051, 18;
	mov.b64 	%rd17546, {%r12055, %r12054};
	xor.b64  	%rd17547, %rd17546, %rd17545;
	shf.l.wrap.b32 	%r12056, %r12050, %r12051, 23;
	shf.l.wrap.b32 	%r12057, %r12051, %r12050, 23;
	mov.b64 	%rd17548, {%r12057, %r12056};
	xor.b64  	%rd17549, %rd17547, %rd17548;
	xor.b64  	%rd17550, %rd17511, %rd17487;
	and.b64  	%rd17551, %rd18735, %rd17550;
	xor.b64  	%rd17552, %rd17551, %rd17487;
	add.s64 	%rd17553, %rd17463, %rd18722;
	add.s64 	%rd17554, %rd17553, %rd18325;
	add.s64 	%rd17555, %rd17554, %rd17552;
	add.s64 	%rd17556, %rd17555, %rd17549;
	add.s64 	%rd18734, %rd17556, %rd17474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12058,%dummy}, %rd18731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12059}, %rd18731;
	}
	shf.r.wrap.b32 	%r12060, %r12059, %r12058, 28;
	shf.r.wrap.b32 	%r12061, %r12058, %r12059, 28;
	mov.b64 	%rd17557, {%r12061, %r12060};
	shf.l.wrap.b32 	%r12062, %r12058, %r12059, 30;
	shf.l.wrap.b32 	%r12063, %r12059, %r12058, 30;
	mov.b64 	%rd17558, {%r12063, %r12062};
	xor.b64  	%rd17559, %rd17558, %rd17557;
	shf.l.wrap.b32 	%r12064, %r12058, %r12059, 25;
	shf.l.wrap.b32 	%r12065, %r12059, %r12058, 25;
	mov.b64 	%rd17560, {%r12065, %r12064};
	xor.b64  	%rd17561, %rd17559, %rd17560;
	and.b64  	%rd17562, %rd18731, %rd17522;
	xor.b64  	%rd17563, %rd18731, %rd17522;
	and.b64  	%rd17564, %rd17563, %rd17498;
	or.b64  	%rd17565, %rd17564, %rd17562;
	add.s64 	%rd17566, %rd17556, %rd17565;
	add.s64 	%rd18730, %rd17566, %rd17561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12066,%dummy}, %rd18734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12067}, %rd18734;
	}
	shf.r.wrap.b32 	%r12068, %r12067, %r12066, 14;
	shf.r.wrap.b32 	%r12069, %r12066, %r12067, 14;
	mov.b64 	%rd17567, {%r12069, %r12068};
	shf.r.wrap.b32 	%r12070, %r12067, %r12066, 18;
	shf.r.wrap.b32 	%r12071, %r12066, %r12067, 18;
	mov.b64 	%rd17568, {%r12071, %r12070};
	xor.b64  	%rd17569, %rd17568, %rd17567;
	shf.l.wrap.b32 	%r12072, %r12066, %r12067, 23;
	shf.l.wrap.b32 	%r12073, %r12067, %r12066, 23;
	mov.b64 	%rd17570, {%r12073, %r12072};
	xor.b64  	%rd17571, %rd17569, %rd17570;
	xor.b64  	%rd17572, %rd18735, %rd17511;
	and.b64  	%rd17573, %rd18734, %rd17572;
	xor.b64  	%rd17574, %rd17573, %rd17511;
	add.s64 	%rd17575, %rd17487, %rd18721;
	add.s64 	%rd17576, %rd17575, %rd18324;
	add.s64 	%rd17577, %rd17576, %rd17574;
	add.s64 	%rd17578, %rd17577, %rd17571;
	add.s64 	%rd18733, %rd17578, %rd17498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12074,%dummy}, %rd18730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12075}, %rd18730;
	}
	shf.r.wrap.b32 	%r12076, %r12075, %r12074, 28;
	shf.r.wrap.b32 	%r12077, %r12074, %r12075, 28;
	mov.b64 	%rd17579, {%r12077, %r12076};
	shf.l.wrap.b32 	%r12078, %r12074, %r12075, 30;
	shf.l.wrap.b32 	%r12079, %r12075, %r12074, 30;
	mov.b64 	%rd17580, {%r12079, %r12078};
	xor.b64  	%rd17581, %rd17580, %rd17579;
	shf.l.wrap.b32 	%r12080, %r12074, %r12075, 25;
	shf.l.wrap.b32 	%r12081, %r12075, %r12074, 25;
	mov.b64 	%rd17582, {%r12081, %r12080};
	xor.b64  	%rd17583, %rd17581, %rd17582;
	and.b64  	%rd17584, %rd18730, %rd18731;
	xor.b64  	%rd17585, %rd18730, %rd18731;
	and.b64  	%rd17586, %rd17585, %rd17522;
	or.b64  	%rd17587, %rd17586, %rd17584;
	add.s64 	%rd17588, %rd17578, %rd17587;
	add.s64 	%rd18729, %rd17588, %rd17583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12082,%dummy}, %rd18733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12083}, %rd18733;
	}
	shf.r.wrap.b32 	%r12084, %r12083, %r12082, 14;
	shf.r.wrap.b32 	%r12085, %r12082, %r12083, 14;
	mov.b64 	%rd17589, {%r12085, %r12084};
	shf.r.wrap.b32 	%r12086, %r12083, %r12082, 18;
	shf.r.wrap.b32 	%r12087, %r12082, %r12083, 18;
	mov.b64 	%rd17590, {%r12087, %r12086};
	xor.b64  	%rd17591, %rd17590, %rd17589;
	shf.l.wrap.b32 	%r12088, %r12082, %r12083, 23;
	shf.l.wrap.b32 	%r12089, %r12083, %r12082, 23;
	mov.b64 	%rd17592, {%r12089, %r12088};
	xor.b64  	%rd17593, %rd17591, %rd17592;
	xor.b64  	%rd17594, %rd18734, %rd18735;
	and.b64  	%rd17595, %rd18733, %rd17594;
	xor.b64  	%rd17596, %rd17595, %rd18735;
	add.s64 	%rd17597, %rd17511, %rd18720;
	add.s64 	%rd17598, %rd17597, %rd18323;
	add.s64 	%rd17599, %rd17598, %rd17596;
	add.s64 	%rd17600, %rd17599, %rd17593;
	add.s64 	%rd18732, %rd17600, %rd17522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12090,%dummy}, %rd18729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12091}, %rd18729;
	}
	shf.r.wrap.b32 	%r12092, %r12091, %r12090, 28;
	shf.r.wrap.b32 	%r12093, %r12090, %r12091, 28;
	mov.b64 	%rd17601, {%r12093, %r12092};
	shf.l.wrap.b32 	%r12094, %r12090, %r12091, 30;
	shf.l.wrap.b32 	%r12095, %r12091, %r12090, 30;
	mov.b64 	%rd17602, {%r12095, %r12094};
	xor.b64  	%rd17603, %rd17602, %rd17601;
	shf.l.wrap.b32 	%r12096, %r12090, %r12091, 25;
	shf.l.wrap.b32 	%r12097, %r12091, %r12090, 25;
	mov.b64 	%rd17604, {%r12097, %r12096};
	xor.b64  	%rd17605, %rd17603, %rd17604;
	and.b64  	%rd17606, %rd18729, %rd18730;
	xor.b64  	%rd17607, %rd18729, %rd18730;
	and.b64  	%rd17608, %rd17607, %rd18731;
	or.b64  	%rd17609, %rd17608, %rd17606;
	add.s64 	%rd17610, %rd17600, %rd17609;
	add.s64 	%rd18728, %rd17610, %rd17605;
	mov.u32 	%r12714, 16;

BB0_275:
	shr.u64 	%rd17611, %rd18721, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12098,%dummy}, %rd18721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12099}, %rd18721;
	}
	shf.r.wrap.b32 	%r12100, %r12099, %r12098, 19;
	shf.r.wrap.b32 	%r12101, %r12098, %r12099, 19;
	mov.b64 	%rd17612, {%r12101, %r12100};
	xor.b64  	%rd17613, %rd17612, %rd17611;
	shf.l.wrap.b32 	%r12102, %r12098, %r12099, 3;
	shf.l.wrap.b32 	%r12103, %r12099, %r12098, 3;
	mov.b64 	%rd17614, {%r12103, %r12102};
	xor.b64  	%rd17615, %rd17613, %rd17614;
	shr.u64 	%rd17616, %rd18737, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12104,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12105}, %rd18737;
	}
	shf.r.wrap.b32 	%r12106, %r12105, %r12104, 1;
	shf.r.wrap.b32 	%r12107, %r12104, %r12105, 1;
	mov.b64 	%rd17617, {%r12107, %r12106};
	xor.b64  	%rd17618, %rd17617, %rd17616;
	shf.r.wrap.b32 	%r12108, %r12105, %r12104, 8;
	shf.r.wrap.b32 	%r12109, %r12104, %r12105, 8;
	mov.b64 	%rd17619, {%r12109, %r12108};
	xor.b64  	%rd17620, %rd17618, %rd17619;
	add.s64 	%rd17621, %rd18726, %rd18736;
	add.s64 	%rd17622, %rd17621, %rd17615;
	add.s64 	%rd18736, %rd17622, %rd17620;
	shr.u64 	%rd17623, %rd18720, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12110,%dummy}, %rd18720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12111}, %rd18720;
	}
	shf.r.wrap.b32 	%r12112, %r12111, %r12110, 19;
	shf.r.wrap.b32 	%r12113, %r12110, %r12111, 19;
	mov.b64 	%rd17624, {%r12113, %r12112};
	xor.b64  	%rd17625, %rd17624, %rd17623;
	shf.l.wrap.b32 	%r12114, %r12110, %r12111, 3;
	shf.l.wrap.b32 	%r12115, %r12111, %r12110, 3;
	mov.b64 	%rd17626, {%r12115, %r12114};
	xor.b64  	%rd17627, %rd17625, %rd17626;
	shr.u64 	%rd17628, %rd18738, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12116,%dummy}, %rd18738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12117}, %rd18738;
	}
	shf.r.wrap.b32 	%r12118, %r12117, %r12116, 1;
	shf.r.wrap.b32 	%r12119, %r12116, %r12117, 1;
	mov.b64 	%rd17629, {%r12119, %r12118};
	xor.b64  	%rd17630, %rd17629, %rd17628;
	shf.r.wrap.b32 	%r12120, %r12117, %r12116, 8;
	shf.r.wrap.b32 	%r12121, %r12116, %r12117, 8;
	mov.b64 	%rd17631, {%r12121, %r12120};
	xor.b64  	%rd17632, %rd17630, %rd17631;
	add.s64 	%rd17633, %rd18725, %rd18737;
	add.s64 	%rd17634, %rd17633, %rd17627;
	add.s64 	%rd18737, %rd17634, %rd17632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12122,%dummy}, %rd18736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12123}, %rd18736;
	}
	shf.r.wrap.b32 	%r12124, %r12123, %r12122, 19;
	shf.r.wrap.b32 	%r12125, %r12122, %r12123, 19;
	mov.b64 	%rd17635, {%r12125, %r12124};
	shf.l.wrap.b32 	%r12126, %r12122, %r12123, 3;
	shf.l.wrap.b32 	%r12127, %r12123, %r12122, 3;
	mov.b64 	%rd17636, {%r12127, %r12126};
	shr.u64 	%rd17637, %rd18736, 6;
	xor.b64  	%rd17638, %rd17635, %rd17637;
	xor.b64  	%rd17639, %rd17638, %rd17636;
	shr.u64 	%rd17640, %rd18739, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12128,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12129}, %rd18739;
	}
	shf.r.wrap.b32 	%r12130, %r12129, %r12128, 1;
	shf.r.wrap.b32 	%r12131, %r12128, %r12129, 1;
	mov.b64 	%rd17641, {%r12131, %r12130};
	xor.b64  	%rd17642, %rd17641, %rd17640;
	shf.r.wrap.b32 	%r12132, %r12129, %r12128, 8;
	shf.r.wrap.b32 	%r12133, %r12128, %r12129, 8;
	mov.b64 	%rd17643, {%r12133, %r12132};
	xor.b64  	%rd17644, %rd17642, %rd17643;
	add.s64 	%rd17645, %rd18724, %rd18738;
	add.s64 	%rd17646, %rd17645, %rd17639;
	add.s64 	%rd18738, %rd17646, %rd17644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12134,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12135}, %rd18737;
	}
	shf.r.wrap.b32 	%r12136, %r12135, %r12134, 19;
	shf.r.wrap.b32 	%r12137, %r12134, %r12135, 19;
	mov.b64 	%rd17647, {%r12137, %r12136};
	shf.l.wrap.b32 	%r12138, %r12134, %r12135, 3;
	shf.l.wrap.b32 	%r12139, %r12135, %r12134, 3;
	mov.b64 	%rd17648, {%r12139, %r12138};
	shr.u64 	%rd17649, %rd18737, 6;
	xor.b64  	%rd17650, %rd17647, %rd17649;
	xor.b64  	%rd17651, %rd17650, %rd17648;
	shr.u64 	%rd17652, %rd18740, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12140,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12141}, %rd18740;
	}
	shf.r.wrap.b32 	%r12142, %r12141, %r12140, 1;
	shf.r.wrap.b32 	%r12143, %r12140, %r12141, 1;
	mov.b64 	%rd17653, {%r12143, %r12142};
	xor.b64  	%rd17654, %rd17653, %rd17652;
	shf.r.wrap.b32 	%r12144, %r12141, %r12140, 8;
	shf.r.wrap.b32 	%r12145, %r12140, %r12141, 8;
	mov.b64 	%rd17655, {%r12145, %r12144};
	xor.b64  	%rd17656, %rd17654, %rd17655;
	add.s64 	%rd17657, %rd18723, %rd18739;
	add.s64 	%rd17658, %rd17657, %rd17651;
	add.s64 	%rd18739, %rd17658, %rd17656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12146,%dummy}, %rd18738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12147}, %rd18738;
	}
	shf.r.wrap.b32 	%r12148, %r12147, %r12146, 19;
	shf.r.wrap.b32 	%r12149, %r12146, %r12147, 19;
	mov.b64 	%rd17659, {%r12149, %r12148};
	shf.l.wrap.b32 	%r12150, %r12146, %r12147, 3;
	shf.l.wrap.b32 	%r12151, %r12147, %r12146, 3;
	mov.b64 	%rd17660, {%r12151, %r12150};
	shr.u64 	%rd17661, %rd18738, 6;
	xor.b64  	%rd17662, %rd17659, %rd17661;
	xor.b64  	%rd17663, %rd17662, %rd17660;
	shr.u64 	%rd17664, %rd18741, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12152,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12153}, %rd18741;
	}
	shf.r.wrap.b32 	%r12154, %r12153, %r12152, 1;
	shf.r.wrap.b32 	%r12155, %r12152, %r12153, 1;
	mov.b64 	%rd17665, {%r12155, %r12154};
	xor.b64  	%rd17666, %rd17665, %rd17664;
	shf.r.wrap.b32 	%r12156, %r12153, %r12152, 8;
	shf.r.wrap.b32 	%r12157, %r12152, %r12153, 8;
	mov.b64 	%rd17667, {%r12157, %r12156};
	xor.b64  	%rd17668, %rd17666, %rd17667;
	add.s64 	%rd17669, %rd18722, %rd18740;
	add.s64 	%rd17670, %rd17669, %rd17663;
	add.s64 	%rd18740, %rd17670, %rd17668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12158,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12159}, %rd18739;
	}
	shf.r.wrap.b32 	%r12160, %r12159, %r12158, 19;
	shf.r.wrap.b32 	%r12161, %r12158, %r12159, 19;
	mov.b64 	%rd17671, {%r12161, %r12160};
	shf.l.wrap.b32 	%r12162, %r12158, %r12159, 3;
	shf.l.wrap.b32 	%r12163, %r12159, %r12158, 3;
	mov.b64 	%rd17672, {%r12163, %r12162};
	shr.u64 	%rd17673, %rd18739, 6;
	xor.b64  	%rd17674, %rd17671, %rd17673;
	xor.b64  	%rd17675, %rd17674, %rd17672;
	shr.u64 	%rd17676, %rd18742, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12164,%dummy}, %rd18742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12165}, %rd18742;
	}
	shf.r.wrap.b32 	%r12166, %r12165, %r12164, 1;
	shf.r.wrap.b32 	%r12167, %r12164, %r12165, 1;
	mov.b64 	%rd17677, {%r12167, %r12166};
	xor.b64  	%rd17678, %rd17677, %rd17676;
	shf.r.wrap.b32 	%r12168, %r12165, %r12164, 8;
	shf.r.wrap.b32 	%r12169, %r12164, %r12165, 8;
	mov.b64 	%rd17679, {%r12169, %r12168};
	xor.b64  	%rd17680, %rd17678, %rd17679;
	add.s64 	%rd17681, %rd18721, %rd18741;
	add.s64 	%rd17682, %rd17681, %rd17675;
	add.s64 	%rd18741, %rd17682, %rd17680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12170,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12171}, %rd18740;
	}
	shf.r.wrap.b32 	%r12172, %r12171, %r12170, 19;
	shf.r.wrap.b32 	%r12173, %r12170, %r12171, 19;
	mov.b64 	%rd17683, {%r12173, %r12172};
	shf.l.wrap.b32 	%r12174, %r12170, %r12171, 3;
	shf.l.wrap.b32 	%r12175, %r12171, %r12170, 3;
	mov.b64 	%rd17684, {%r12175, %r12174};
	shr.u64 	%rd17685, %rd18740, 6;
	xor.b64  	%rd17686, %rd17683, %rd17685;
	xor.b64  	%rd17687, %rd17686, %rd17684;
	shr.u64 	%rd17688, %rd18743, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12176,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12177}, %rd18743;
	}
	shf.r.wrap.b32 	%r12178, %r12177, %r12176, 1;
	shf.r.wrap.b32 	%r12179, %r12176, %r12177, 1;
	mov.b64 	%rd17689, {%r12179, %r12178};
	xor.b64  	%rd17690, %rd17689, %rd17688;
	shf.r.wrap.b32 	%r12180, %r12177, %r12176, 8;
	shf.r.wrap.b32 	%r12181, %r12176, %r12177, 8;
	mov.b64 	%rd17691, {%r12181, %r12180};
	xor.b64  	%rd17692, %rd17690, %rd17691;
	add.s64 	%rd17693, %rd18720, %rd18742;
	add.s64 	%rd17694, %rd17693, %rd17687;
	add.s64 	%rd18742, %rd17694, %rd17692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12182,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12183}, %rd18741;
	}
	shf.r.wrap.b32 	%r12184, %r12183, %r12182, 19;
	shf.r.wrap.b32 	%r12185, %r12182, %r12183, 19;
	mov.b64 	%rd17695, {%r12185, %r12184};
	shf.l.wrap.b32 	%r12186, %r12182, %r12183, 3;
	shf.l.wrap.b32 	%r12187, %r12183, %r12182, 3;
	mov.b64 	%rd17696, {%r12187, %r12186};
	shr.u64 	%rd17697, %rd18741, 6;
	xor.b64  	%rd17698, %rd17695, %rd17697;
	xor.b64  	%rd17699, %rd17698, %rd17696;
	shr.u64 	%rd17700, %rd18727, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12188,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12189}, %rd18727;
	}
	shf.r.wrap.b32 	%r12190, %r12189, %r12188, 1;
	shf.r.wrap.b32 	%r12191, %r12188, %r12189, 1;
	mov.b64 	%rd17701, {%r12191, %r12190};
	xor.b64  	%rd17702, %rd17701, %rd17700;
	shf.r.wrap.b32 	%r12192, %r12189, %r12188, 8;
	shf.r.wrap.b32 	%r12193, %r12188, %r12189, 8;
	mov.b64 	%rd17703, {%r12193, %r12192};
	xor.b64  	%rd17704, %rd17702, %rd17703;
	add.s64 	%rd17705, %rd18736, %rd18743;
	add.s64 	%rd17706, %rd17705, %rd17699;
	add.s64 	%rd18743, %rd17706, %rd17704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12194,%dummy}, %rd18742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12195}, %rd18742;
	}
	shf.r.wrap.b32 	%r12196, %r12195, %r12194, 19;
	shf.r.wrap.b32 	%r12197, %r12194, %r12195, 19;
	mov.b64 	%rd17707, {%r12197, %r12196};
	shf.l.wrap.b32 	%r12198, %r12194, %r12195, 3;
	shf.l.wrap.b32 	%r12199, %r12195, %r12194, 3;
	mov.b64 	%rd17708, {%r12199, %r12198};
	shr.u64 	%rd17709, %rd18742, 6;
	xor.b64  	%rd17710, %rd17707, %rd17709;
	xor.b64  	%rd17711, %rd17710, %rd17708;
	shr.u64 	%rd17712, %rd18726, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12200,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12201}, %rd18726;
	}
	shf.r.wrap.b32 	%r12202, %r12201, %r12200, 1;
	shf.r.wrap.b32 	%r12203, %r12200, %r12201, 1;
	mov.b64 	%rd17713, {%r12203, %r12202};
	xor.b64  	%rd17714, %rd17713, %rd17712;
	shf.r.wrap.b32 	%r12204, %r12201, %r12200, 8;
	shf.r.wrap.b32 	%r12205, %r12200, %r12201, 8;
	mov.b64 	%rd17715, {%r12205, %r12204};
	xor.b64  	%rd17716, %rd17714, %rd17715;
	add.s64 	%rd17717, %rd18737, %rd18727;
	add.s64 	%rd17718, %rd17717, %rd17711;
	add.s64 	%rd18727, %rd17718, %rd17716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12206,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12207}, %rd18743;
	}
	shf.r.wrap.b32 	%r12208, %r12207, %r12206, 19;
	shf.r.wrap.b32 	%r12209, %r12206, %r12207, 19;
	mov.b64 	%rd17719, {%r12209, %r12208};
	shf.l.wrap.b32 	%r12210, %r12206, %r12207, 3;
	shf.l.wrap.b32 	%r12211, %r12207, %r12206, 3;
	mov.b64 	%rd17720, {%r12211, %r12210};
	shr.u64 	%rd17721, %rd18743, 6;
	xor.b64  	%rd17722, %rd17719, %rd17721;
	xor.b64  	%rd17723, %rd17722, %rd17720;
	shr.u64 	%rd17724, %rd18725, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12212,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12213}, %rd18725;
	}
	shf.r.wrap.b32 	%r12214, %r12213, %r12212, 1;
	shf.r.wrap.b32 	%r12215, %r12212, %r12213, 1;
	mov.b64 	%rd17725, {%r12215, %r12214};
	xor.b64  	%rd17726, %rd17725, %rd17724;
	shf.r.wrap.b32 	%r12216, %r12213, %r12212, 8;
	shf.r.wrap.b32 	%r12217, %r12212, %r12213, 8;
	mov.b64 	%rd17727, {%r12217, %r12216};
	xor.b64  	%rd17728, %rd17726, %rd17727;
	add.s64 	%rd17729, %rd18738, %rd18726;
	add.s64 	%rd17730, %rd17729, %rd17723;
	add.s64 	%rd18726, %rd17730, %rd17728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12218,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12219}, %rd18727;
	}
	shf.r.wrap.b32 	%r12220, %r12219, %r12218, 19;
	shf.r.wrap.b32 	%r12221, %r12218, %r12219, 19;
	mov.b64 	%rd17731, {%r12221, %r12220};
	shf.l.wrap.b32 	%r12222, %r12218, %r12219, 3;
	shf.l.wrap.b32 	%r12223, %r12219, %r12218, 3;
	mov.b64 	%rd17732, {%r12223, %r12222};
	shr.u64 	%rd17733, %rd18727, 6;
	xor.b64  	%rd17734, %rd17731, %rd17733;
	xor.b64  	%rd17735, %rd17734, %rd17732;
	shr.u64 	%rd17736, %rd18724, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12224,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12225}, %rd18724;
	}
	shf.r.wrap.b32 	%r12226, %r12225, %r12224, 1;
	shf.r.wrap.b32 	%r12227, %r12224, %r12225, 1;
	mov.b64 	%rd17737, {%r12227, %r12226};
	xor.b64  	%rd17738, %rd17737, %rd17736;
	shf.r.wrap.b32 	%r12228, %r12225, %r12224, 8;
	shf.r.wrap.b32 	%r12229, %r12224, %r12225, 8;
	mov.b64 	%rd17739, {%r12229, %r12228};
	xor.b64  	%rd17740, %rd17738, %rd17739;
	add.s64 	%rd17741, %rd18739, %rd18725;
	add.s64 	%rd17742, %rd17741, %rd17735;
	add.s64 	%rd18725, %rd17742, %rd17740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12230,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12231}, %rd18726;
	}
	shf.r.wrap.b32 	%r12232, %r12231, %r12230, 19;
	shf.r.wrap.b32 	%r12233, %r12230, %r12231, 19;
	mov.b64 	%rd17743, {%r12233, %r12232};
	shf.l.wrap.b32 	%r12234, %r12230, %r12231, 3;
	shf.l.wrap.b32 	%r12235, %r12231, %r12230, 3;
	mov.b64 	%rd17744, {%r12235, %r12234};
	shr.u64 	%rd17745, %rd18726, 6;
	xor.b64  	%rd17746, %rd17743, %rd17745;
	xor.b64  	%rd17747, %rd17746, %rd17744;
	shr.u64 	%rd17748, %rd18723, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12236,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12237}, %rd18723;
	}
	shf.r.wrap.b32 	%r12238, %r12237, %r12236, 1;
	shf.r.wrap.b32 	%r12239, %r12236, %r12237, 1;
	mov.b64 	%rd17749, {%r12239, %r12238};
	xor.b64  	%rd17750, %rd17749, %rd17748;
	shf.r.wrap.b32 	%r12240, %r12237, %r12236, 8;
	shf.r.wrap.b32 	%r12241, %r12236, %r12237, 8;
	mov.b64 	%rd17751, {%r12241, %r12240};
	xor.b64  	%rd17752, %rd17750, %rd17751;
	add.s64 	%rd17753, %rd18740, %rd18724;
	add.s64 	%rd17754, %rd17753, %rd17747;
	add.s64 	%rd18724, %rd17754, %rd17752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12242,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12243}, %rd18725;
	}
	shf.r.wrap.b32 	%r12244, %r12243, %r12242, 19;
	shf.r.wrap.b32 	%r12245, %r12242, %r12243, 19;
	mov.b64 	%rd17755, {%r12245, %r12244};
	shf.l.wrap.b32 	%r12246, %r12242, %r12243, 3;
	shf.l.wrap.b32 	%r12247, %r12243, %r12242, 3;
	mov.b64 	%rd17756, {%r12247, %r12246};
	shr.u64 	%rd17757, %rd18725, 6;
	xor.b64  	%rd17758, %rd17755, %rd17757;
	xor.b64  	%rd17759, %rd17758, %rd17756;
	shr.u64 	%rd17760, %rd18722, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12248,%dummy}, %rd18722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12249}, %rd18722;
	}
	shf.r.wrap.b32 	%r12250, %r12249, %r12248, 1;
	shf.r.wrap.b32 	%r12251, %r12248, %r12249, 1;
	mov.b64 	%rd17761, {%r12251, %r12250};
	xor.b64  	%rd17762, %rd17761, %rd17760;
	shf.r.wrap.b32 	%r12252, %r12249, %r12248, 8;
	shf.r.wrap.b32 	%r12253, %r12248, %r12249, 8;
	mov.b64 	%rd17763, {%r12253, %r12252};
	xor.b64  	%rd17764, %rd17762, %rd17763;
	add.s64 	%rd17765, %rd18741, %rd18723;
	add.s64 	%rd17766, %rd17765, %rd17759;
	add.s64 	%rd18723, %rd17766, %rd17764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12254,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12255}, %rd18724;
	}
	shf.r.wrap.b32 	%r12256, %r12255, %r12254, 19;
	shf.r.wrap.b32 	%r12257, %r12254, %r12255, 19;
	mov.b64 	%rd17767, {%r12257, %r12256};
	shf.l.wrap.b32 	%r12258, %r12254, %r12255, 3;
	shf.l.wrap.b32 	%r12259, %r12255, %r12254, 3;
	mov.b64 	%rd17768, {%r12259, %r12258};
	shr.u64 	%rd17769, %rd18724, 6;
	xor.b64  	%rd17770, %rd17767, %rd17769;
	xor.b64  	%rd17771, %rd17770, %rd17768;
	shr.u64 	%rd17772, %rd18721, 7;
	shf.r.wrap.b32 	%r12260, %r12099, %r12098, 1;
	shf.r.wrap.b32 	%r12261, %r12098, %r12099, 1;
	mov.b64 	%rd17773, {%r12261, %r12260};
	xor.b64  	%rd17774, %rd17773, %rd17772;
	shf.r.wrap.b32 	%r12262, %r12099, %r12098, 8;
	shf.r.wrap.b32 	%r12263, %r12098, %r12099, 8;
	mov.b64 	%rd17775, {%r12263, %r12262};
	xor.b64  	%rd17776, %rd17774, %rd17775;
	add.s64 	%rd17777, %rd18742, %rd18722;
	add.s64 	%rd17778, %rd17777, %rd17771;
	add.s64 	%rd18722, %rd17778, %rd17776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12264,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12265}, %rd18723;
	}
	shf.r.wrap.b32 	%r12266, %r12265, %r12264, 19;
	shf.r.wrap.b32 	%r12267, %r12264, %r12265, 19;
	mov.b64 	%rd17779, {%r12267, %r12266};
	shf.l.wrap.b32 	%r12268, %r12264, %r12265, 3;
	shf.l.wrap.b32 	%r12269, %r12265, %r12264, 3;
	mov.b64 	%rd17780, {%r12269, %r12268};
	shr.u64 	%rd17781, %rd18723, 6;
	xor.b64  	%rd17782, %rd17779, %rd17781;
	xor.b64  	%rd17783, %rd17782, %rd17780;
	shr.u64 	%rd17784, %rd18720, 7;
	shf.r.wrap.b32 	%r12270, %r12111, %r12110, 1;
	shf.r.wrap.b32 	%r12271, %r12110, %r12111, 1;
	mov.b64 	%rd17785, {%r12271, %r12270};
	xor.b64  	%rd17786, %rd17785, %rd17784;
	shf.r.wrap.b32 	%r12272, %r12111, %r12110, 8;
	shf.r.wrap.b32 	%r12273, %r12110, %r12111, 8;
	mov.b64 	%rd17787, {%r12273, %r12272};
	xor.b64  	%rd17788, %rd17786, %rd17787;
	add.s64 	%rd17789, %rd18743, %rd18721;
	add.s64 	%rd17790, %rd17789, %rd17783;
	add.s64 	%rd18721, %rd17790, %rd17788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12274,%dummy}, %rd18722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12275}, %rd18722;
	}
	shf.r.wrap.b32 	%r12276, %r12275, %r12274, 19;
	shf.r.wrap.b32 	%r12277, %r12274, %r12275, 19;
	mov.b64 	%rd17791, {%r12277, %r12276};
	shf.l.wrap.b32 	%r12278, %r12274, %r12275, 3;
	shf.l.wrap.b32 	%r12279, %r12275, %r12274, 3;
	mov.b64 	%rd17792, {%r12279, %r12278};
	shr.u64 	%rd17793, %rd18722, 6;
	xor.b64  	%rd17794, %rd17791, %rd17793;
	xor.b64  	%rd17795, %rd17794, %rd17792;
	shf.r.wrap.b32 	%r12280, %r12123, %r12122, 1;
	shf.r.wrap.b32 	%r12281, %r12122, %r12123, 1;
	mov.b64 	%rd17796, {%r12281, %r12280};
	shf.r.wrap.b32 	%r12282, %r12123, %r12122, 8;
	shf.r.wrap.b32 	%r12283, %r12122, %r12123, 8;
	mov.b64 	%rd17797, {%r12283, %r12282};
	shr.u64 	%rd17798, %rd18736, 7;
	xor.b64  	%rd17799, %rd17796, %rd17798;
	xor.b64  	%rd17800, %rd17799, %rd17797;
	add.s64 	%rd17801, %rd18727, %rd18720;
	add.s64 	%rd17802, %rd17801, %rd17795;
	add.s64 	%rd18720, %rd17802, %rd17800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12284,%dummy}, %rd18732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12285}, %rd18732;
	}
	shf.r.wrap.b32 	%r12286, %r12285, %r12284, 18;
	shf.r.wrap.b32 	%r12287, %r12284, %r12285, 18;
	mov.b64 	%rd17803, {%r12287, %r12286};
	shf.r.wrap.b32 	%r12288, %r12285, %r12284, 14;
	shf.r.wrap.b32 	%r12289, %r12284, %r12285, 14;
	mov.b64 	%rd17804, {%r12289, %r12288};
	xor.b64  	%rd17805, %rd17803, %rd17804;
	shf.l.wrap.b32 	%r12290, %r12284, %r12285, 23;
	shf.l.wrap.b32 	%r12291, %r12285, %r12284, 23;
	mov.b64 	%rd17806, {%r12291, %r12290};
	xor.b64  	%rd17807, %rd17805, %rd17806;
	xor.b64  	%rd17808, %rd18733, %rd18734;
	and.b64  	%rd17809, %rd18732, %rd17808;
	xor.b64  	%rd17810, %rd17809, %rd18734;
	add.s64 	%rd17811, %rd17810, %rd18735;
	add.s64 	%rd17812, %rd17811, %rd18736;
	add.s64 	%rd1439, %rd18719, 128;
	ld.const.u64 	%rd17813, [%rd18719+128];
	add.s64 	%rd17814, %rd17812, %rd17813;
	add.s64 	%rd17815, %rd17814, %rd17807;
	add.s64 	%rd17816, %rd17815, %rd18731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12292}, %rd18728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12293,%dummy}, %rd18728;
	}
	shf.l.wrap.b32 	%r12294, %r12293, %r12292, 30;
	shf.l.wrap.b32 	%r12295, %r12292, %r12293, 30;
	mov.b64 	%rd17817, {%r12295, %r12294};
	shf.r.wrap.b32 	%r12296, %r12292, %r12293, 28;
	shf.r.wrap.b32 	%r12297, %r12293, %r12292, 28;
	mov.b64 	%rd17818, {%r12297, %r12296};
	xor.b64  	%rd17819, %rd17817, %rd17818;
	shf.l.wrap.b32 	%r12298, %r12293, %r12292, 25;
	shf.l.wrap.b32 	%r12299, %r12292, %r12293, 25;
	mov.b64 	%rd17820, {%r12299, %r12298};
	xor.b64  	%rd17821, %rd17819, %rd17820;
	xor.b64  	%rd17822, %rd18728, %rd18729;
	and.b64  	%rd17823, %rd17822, %rd18730;
	and.b64  	%rd17824, %rd18728, %rd18729;
	or.b64  	%rd17825, %rd17823, %rd17824;
	add.s64 	%rd17826, %rd17815, %rd17825;
	add.s64 	%rd17827, %rd17826, %rd17821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12300,%dummy}, %rd17816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12301}, %rd17816;
	}
	shf.r.wrap.b32 	%r12302, %r12301, %r12300, 14;
	shf.r.wrap.b32 	%r12303, %r12300, %r12301, 14;
	mov.b64 	%rd17828, {%r12303, %r12302};
	shf.r.wrap.b32 	%r12304, %r12301, %r12300, 18;
	shf.r.wrap.b32 	%r12305, %r12300, %r12301, 18;
	mov.b64 	%rd17829, {%r12305, %r12304};
	xor.b64  	%rd17830, %rd17829, %rd17828;
	shf.l.wrap.b32 	%r12306, %r12300, %r12301, 23;
	shf.l.wrap.b32 	%r12307, %r12301, %r12300, 23;
	mov.b64 	%rd17831, {%r12307, %r12306};
	xor.b64  	%rd17832, %rd17830, %rd17831;
	xor.b64  	%rd17833, %rd18732, %rd18733;
	and.b64  	%rd17834, %rd17816, %rd17833;
	xor.b64  	%rd17835, %rd17834, %rd18733;
	add.s64 	%rd17836, %rd18737, %rd18734;
	ld.const.u64 	%rd17837, [%rd18719+136];
	add.s64 	%rd17838, %rd17836, %rd17837;
	add.s64 	%rd17839, %rd17838, %rd17835;
	add.s64 	%rd17840, %rd17839, %rd17832;
	add.s64 	%rd17841, %rd17840, %rd18730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12308,%dummy}, %rd17827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12309}, %rd17827;
	}
	shf.r.wrap.b32 	%r12310, %r12309, %r12308, 28;
	shf.r.wrap.b32 	%r12311, %r12308, %r12309, 28;
	mov.b64 	%rd17842, {%r12311, %r12310};
	shf.l.wrap.b32 	%r12312, %r12308, %r12309, 30;
	shf.l.wrap.b32 	%r12313, %r12309, %r12308, 30;
	mov.b64 	%rd17843, {%r12313, %r12312};
	xor.b64  	%rd17844, %rd17843, %rd17842;
	shf.l.wrap.b32 	%r12314, %r12308, %r12309, 25;
	shf.l.wrap.b32 	%r12315, %r12309, %r12308, 25;
	mov.b64 	%rd17845, {%r12315, %r12314};
	xor.b64  	%rd17846, %rd17844, %rd17845;
	and.b64  	%rd17847, %rd17827, %rd18728;
	xor.b64  	%rd17848, %rd17827, %rd18728;
	and.b64  	%rd17849, %rd17848, %rd18729;
	or.b64  	%rd17850, %rd17849, %rd17847;
	add.s64 	%rd17851, %rd17840, %rd17850;
	add.s64 	%rd17852, %rd17851, %rd17846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12316,%dummy}, %rd17841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12317}, %rd17841;
	}
	shf.r.wrap.b32 	%r12318, %r12317, %r12316, 14;
	shf.r.wrap.b32 	%r12319, %r12316, %r12317, 14;
	mov.b64 	%rd17853, {%r12319, %r12318};
	shf.r.wrap.b32 	%r12320, %r12317, %r12316, 18;
	shf.r.wrap.b32 	%r12321, %r12316, %r12317, 18;
	mov.b64 	%rd17854, {%r12321, %r12320};
	xor.b64  	%rd17855, %rd17854, %rd17853;
	shf.l.wrap.b32 	%r12322, %r12316, %r12317, 23;
	shf.l.wrap.b32 	%r12323, %r12317, %r12316, 23;
	mov.b64 	%rd17856, {%r12323, %r12322};
	xor.b64  	%rd17857, %rd17855, %rd17856;
	xor.b64  	%rd17858, %rd17816, %rd18732;
	and.b64  	%rd17859, %rd17841, %rd17858;
	xor.b64  	%rd17860, %rd17859, %rd18732;
	add.s64 	%rd17861, %rd18738, %rd18733;
	ld.const.u64 	%rd17862, [%rd18719+144];
	add.s64 	%rd17863, %rd17861, %rd17862;
	add.s64 	%rd17864, %rd17863, %rd17860;
	add.s64 	%rd17865, %rd17864, %rd17857;
	add.s64 	%rd17866, %rd17865, %rd18729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12324,%dummy}, %rd17852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12325}, %rd17852;
	}
	shf.r.wrap.b32 	%r12326, %r12325, %r12324, 28;
	shf.r.wrap.b32 	%r12327, %r12324, %r12325, 28;
	mov.b64 	%rd17867, {%r12327, %r12326};
	shf.l.wrap.b32 	%r12328, %r12324, %r12325, 30;
	shf.l.wrap.b32 	%r12329, %r12325, %r12324, 30;
	mov.b64 	%rd17868, {%r12329, %r12328};
	xor.b64  	%rd17869, %rd17868, %rd17867;
	shf.l.wrap.b32 	%r12330, %r12324, %r12325, 25;
	shf.l.wrap.b32 	%r12331, %r12325, %r12324, 25;
	mov.b64 	%rd17870, {%r12331, %r12330};
	xor.b64  	%rd17871, %rd17869, %rd17870;
	and.b64  	%rd17872, %rd17852, %rd17827;
	xor.b64  	%rd17873, %rd17852, %rd17827;
	and.b64  	%rd17874, %rd17873, %rd18728;
	or.b64  	%rd17875, %rd17874, %rd17872;
	add.s64 	%rd17876, %rd17865, %rd17875;
	add.s64 	%rd17877, %rd17876, %rd17871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12332,%dummy}, %rd17866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12333}, %rd17866;
	}
	shf.r.wrap.b32 	%r12334, %r12333, %r12332, 14;
	shf.r.wrap.b32 	%r12335, %r12332, %r12333, 14;
	mov.b64 	%rd17878, {%r12335, %r12334};
	shf.r.wrap.b32 	%r12336, %r12333, %r12332, 18;
	shf.r.wrap.b32 	%r12337, %r12332, %r12333, 18;
	mov.b64 	%rd17879, {%r12337, %r12336};
	xor.b64  	%rd17880, %rd17879, %rd17878;
	shf.l.wrap.b32 	%r12338, %r12332, %r12333, 23;
	shf.l.wrap.b32 	%r12339, %r12333, %r12332, 23;
	mov.b64 	%rd17881, {%r12339, %r12338};
	xor.b64  	%rd17882, %rd17880, %rd17881;
	xor.b64  	%rd17883, %rd17841, %rd17816;
	and.b64  	%rd17884, %rd17866, %rd17883;
	xor.b64  	%rd17885, %rd17884, %rd17816;
	add.s64 	%rd17886, %rd18739, %rd18732;
	ld.const.u64 	%rd17887, [%rd18719+152];
	add.s64 	%rd17888, %rd17886, %rd17887;
	add.s64 	%rd17889, %rd17888, %rd17885;
	add.s64 	%rd17890, %rd17889, %rd17882;
	add.s64 	%rd17891, %rd17890, %rd18728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12340,%dummy}, %rd17877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12341}, %rd17877;
	}
	shf.r.wrap.b32 	%r12342, %r12341, %r12340, 28;
	shf.r.wrap.b32 	%r12343, %r12340, %r12341, 28;
	mov.b64 	%rd17892, {%r12343, %r12342};
	shf.l.wrap.b32 	%r12344, %r12340, %r12341, 30;
	shf.l.wrap.b32 	%r12345, %r12341, %r12340, 30;
	mov.b64 	%rd17893, {%r12345, %r12344};
	xor.b64  	%rd17894, %rd17893, %rd17892;
	shf.l.wrap.b32 	%r12346, %r12340, %r12341, 25;
	shf.l.wrap.b32 	%r12347, %r12341, %r12340, 25;
	mov.b64 	%rd17895, {%r12347, %r12346};
	xor.b64  	%rd17896, %rd17894, %rd17895;
	and.b64  	%rd17897, %rd17877, %rd17852;
	xor.b64  	%rd17898, %rd17877, %rd17852;
	and.b64  	%rd17899, %rd17898, %rd17827;
	or.b64  	%rd17900, %rd17899, %rd17897;
	add.s64 	%rd17901, %rd17890, %rd17900;
	add.s64 	%rd17902, %rd17901, %rd17896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12348,%dummy}, %rd17891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12349}, %rd17891;
	}
	shf.r.wrap.b32 	%r12350, %r12349, %r12348, 14;
	shf.r.wrap.b32 	%r12351, %r12348, %r12349, 14;
	mov.b64 	%rd17903, {%r12351, %r12350};
	shf.r.wrap.b32 	%r12352, %r12349, %r12348, 18;
	shf.r.wrap.b32 	%r12353, %r12348, %r12349, 18;
	mov.b64 	%rd17904, {%r12353, %r12352};
	xor.b64  	%rd17905, %rd17904, %rd17903;
	shf.l.wrap.b32 	%r12354, %r12348, %r12349, 23;
	shf.l.wrap.b32 	%r12355, %r12349, %r12348, 23;
	mov.b64 	%rd17906, {%r12355, %r12354};
	xor.b64  	%rd17907, %rd17905, %rd17906;
	xor.b64  	%rd17908, %rd17866, %rd17841;
	and.b64  	%rd17909, %rd17891, %rd17908;
	xor.b64  	%rd17910, %rd17909, %rd17841;
	add.s64 	%rd17911, %rd17816, %rd18740;
	ld.const.u64 	%rd17912, [%rd18719+160];
	add.s64 	%rd17913, %rd17911, %rd17912;
	add.s64 	%rd17914, %rd17913, %rd17910;
	add.s64 	%rd17915, %rd17914, %rd17907;
	add.s64 	%rd17916, %rd17915, %rd17827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12356,%dummy}, %rd17902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12357}, %rd17902;
	}
	shf.r.wrap.b32 	%r12358, %r12357, %r12356, 28;
	shf.r.wrap.b32 	%r12359, %r12356, %r12357, 28;
	mov.b64 	%rd17917, {%r12359, %r12358};
	shf.l.wrap.b32 	%r12360, %r12356, %r12357, 30;
	shf.l.wrap.b32 	%r12361, %r12357, %r12356, 30;
	mov.b64 	%rd17918, {%r12361, %r12360};
	xor.b64  	%rd17919, %rd17918, %rd17917;
	shf.l.wrap.b32 	%r12362, %r12356, %r12357, 25;
	shf.l.wrap.b32 	%r12363, %r12357, %r12356, 25;
	mov.b64 	%rd17920, {%r12363, %r12362};
	xor.b64  	%rd17921, %rd17919, %rd17920;
	and.b64  	%rd17922, %rd17902, %rd17877;
	xor.b64  	%rd17923, %rd17902, %rd17877;
	and.b64  	%rd17924, %rd17923, %rd17852;
	or.b64  	%rd17925, %rd17924, %rd17922;
	add.s64 	%rd17926, %rd17915, %rd17925;
	add.s64 	%rd17927, %rd17926, %rd17921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12364,%dummy}, %rd17916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12365}, %rd17916;
	}
	shf.r.wrap.b32 	%r12366, %r12365, %r12364, 14;
	shf.r.wrap.b32 	%r12367, %r12364, %r12365, 14;
	mov.b64 	%rd17928, {%r12367, %r12366};
	shf.r.wrap.b32 	%r12368, %r12365, %r12364, 18;
	shf.r.wrap.b32 	%r12369, %r12364, %r12365, 18;
	mov.b64 	%rd17929, {%r12369, %r12368};
	xor.b64  	%rd17930, %rd17929, %rd17928;
	shf.l.wrap.b32 	%r12370, %r12364, %r12365, 23;
	shf.l.wrap.b32 	%r12371, %r12365, %r12364, 23;
	mov.b64 	%rd17931, {%r12371, %r12370};
	xor.b64  	%rd17932, %rd17930, %rd17931;
	xor.b64  	%rd17933, %rd17891, %rd17866;
	and.b64  	%rd17934, %rd17916, %rd17933;
	xor.b64  	%rd17935, %rd17934, %rd17866;
	add.s64 	%rd17936, %rd17841, %rd18741;
	ld.const.u64 	%rd17937, [%rd18719+168];
	add.s64 	%rd17938, %rd17936, %rd17937;
	add.s64 	%rd17939, %rd17938, %rd17935;
	add.s64 	%rd17940, %rd17939, %rd17932;
	add.s64 	%rd17941, %rd17940, %rd17852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12372,%dummy}, %rd17927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12373}, %rd17927;
	}
	shf.r.wrap.b32 	%r12374, %r12373, %r12372, 28;
	shf.r.wrap.b32 	%r12375, %r12372, %r12373, 28;
	mov.b64 	%rd17942, {%r12375, %r12374};
	shf.l.wrap.b32 	%r12376, %r12372, %r12373, 30;
	shf.l.wrap.b32 	%r12377, %r12373, %r12372, 30;
	mov.b64 	%rd17943, {%r12377, %r12376};
	xor.b64  	%rd17944, %rd17943, %rd17942;
	shf.l.wrap.b32 	%r12378, %r12372, %r12373, 25;
	shf.l.wrap.b32 	%r12379, %r12373, %r12372, 25;
	mov.b64 	%rd17945, {%r12379, %r12378};
	xor.b64  	%rd17946, %rd17944, %rd17945;
	and.b64  	%rd17947, %rd17927, %rd17902;
	xor.b64  	%rd17948, %rd17927, %rd17902;
	and.b64  	%rd17949, %rd17948, %rd17877;
	or.b64  	%rd17950, %rd17949, %rd17947;
	add.s64 	%rd17951, %rd17940, %rd17950;
	add.s64 	%rd17952, %rd17951, %rd17946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12380,%dummy}, %rd17941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12381}, %rd17941;
	}
	shf.r.wrap.b32 	%r12382, %r12381, %r12380, 14;
	shf.r.wrap.b32 	%r12383, %r12380, %r12381, 14;
	mov.b64 	%rd17953, {%r12383, %r12382};
	shf.r.wrap.b32 	%r12384, %r12381, %r12380, 18;
	shf.r.wrap.b32 	%r12385, %r12380, %r12381, 18;
	mov.b64 	%rd17954, {%r12385, %r12384};
	xor.b64  	%rd17955, %rd17954, %rd17953;
	shf.l.wrap.b32 	%r12386, %r12380, %r12381, 23;
	shf.l.wrap.b32 	%r12387, %r12381, %r12380, 23;
	mov.b64 	%rd17956, {%r12387, %r12386};
	xor.b64  	%rd17957, %rd17955, %rd17956;
	xor.b64  	%rd17958, %rd17916, %rd17891;
	and.b64  	%rd17959, %rd17941, %rd17958;
	xor.b64  	%rd17960, %rd17959, %rd17891;
	add.s64 	%rd17961, %rd17866, %rd18742;
	ld.const.u64 	%rd17962, [%rd18719+176];
	add.s64 	%rd17963, %rd17961, %rd17962;
	add.s64 	%rd17964, %rd17963, %rd17960;
	add.s64 	%rd17965, %rd17964, %rd17957;
	add.s64 	%rd17966, %rd17965, %rd17877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12388,%dummy}, %rd17952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12389}, %rd17952;
	}
	shf.r.wrap.b32 	%r12390, %r12389, %r12388, 28;
	shf.r.wrap.b32 	%r12391, %r12388, %r12389, 28;
	mov.b64 	%rd17967, {%r12391, %r12390};
	shf.l.wrap.b32 	%r12392, %r12388, %r12389, 30;
	shf.l.wrap.b32 	%r12393, %r12389, %r12388, 30;
	mov.b64 	%rd17968, {%r12393, %r12392};
	xor.b64  	%rd17969, %rd17968, %rd17967;
	shf.l.wrap.b32 	%r12394, %r12388, %r12389, 25;
	shf.l.wrap.b32 	%r12395, %r12389, %r12388, 25;
	mov.b64 	%rd17970, {%r12395, %r12394};
	xor.b64  	%rd17971, %rd17969, %rd17970;
	and.b64  	%rd17972, %rd17952, %rd17927;
	xor.b64  	%rd17973, %rd17952, %rd17927;
	and.b64  	%rd17974, %rd17973, %rd17902;
	or.b64  	%rd17975, %rd17974, %rd17972;
	add.s64 	%rd17976, %rd17965, %rd17975;
	add.s64 	%rd17977, %rd17976, %rd17971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12396,%dummy}, %rd17966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12397}, %rd17966;
	}
	shf.r.wrap.b32 	%r12398, %r12397, %r12396, 14;
	shf.r.wrap.b32 	%r12399, %r12396, %r12397, 14;
	mov.b64 	%rd17978, {%r12399, %r12398};
	shf.r.wrap.b32 	%r12400, %r12397, %r12396, 18;
	shf.r.wrap.b32 	%r12401, %r12396, %r12397, 18;
	mov.b64 	%rd17979, {%r12401, %r12400};
	xor.b64  	%rd17980, %rd17979, %rd17978;
	shf.l.wrap.b32 	%r12402, %r12396, %r12397, 23;
	shf.l.wrap.b32 	%r12403, %r12397, %r12396, 23;
	mov.b64 	%rd17981, {%r12403, %r12402};
	xor.b64  	%rd17982, %rd17980, %rd17981;
	xor.b64  	%rd17983, %rd17941, %rd17916;
	and.b64  	%rd17984, %rd17966, %rd17983;
	xor.b64  	%rd17985, %rd17984, %rd17916;
	add.s64 	%rd17986, %rd17891, %rd18743;
	ld.const.u64 	%rd17987, [%rd18719+184];
	add.s64 	%rd17988, %rd17986, %rd17987;
	add.s64 	%rd17989, %rd17988, %rd17985;
	add.s64 	%rd17990, %rd17989, %rd17982;
	add.s64 	%rd17991, %rd17990, %rd17902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12404,%dummy}, %rd17977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12405}, %rd17977;
	}
	shf.r.wrap.b32 	%r12406, %r12405, %r12404, 28;
	shf.r.wrap.b32 	%r12407, %r12404, %r12405, 28;
	mov.b64 	%rd17992, {%r12407, %r12406};
	shf.l.wrap.b32 	%r12408, %r12404, %r12405, 30;
	shf.l.wrap.b32 	%r12409, %r12405, %r12404, 30;
	mov.b64 	%rd17993, {%r12409, %r12408};
	xor.b64  	%rd17994, %rd17993, %rd17992;
	shf.l.wrap.b32 	%r12410, %r12404, %r12405, 25;
	shf.l.wrap.b32 	%r12411, %r12405, %r12404, 25;
	mov.b64 	%rd17995, {%r12411, %r12410};
	xor.b64  	%rd17996, %rd17994, %rd17995;
	and.b64  	%rd17997, %rd17977, %rd17952;
	xor.b64  	%rd17998, %rd17977, %rd17952;
	and.b64  	%rd17999, %rd17998, %rd17927;
	or.b64  	%rd18000, %rd17999, %rd17997;
	add.s64 	%rd18001, %rd17990, %rd18000;
	add.s64 	%rd18002, %rd18001, %rd17996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12412,%dummy}, %rd17991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12413}, %rd17991;
	}
	shf.r.wrap.b32 	%r12414, %r12413, %r12412, 14;
	shf.r.wrap.b32 	%r12415, %r12412, %r12413, 14;
	mov.b64 	%rd18003, {%r12415, %r12414};
	shf.r.wrap.b32 	%r12416, %r12413, %r12412, 18;
	shf.r.wrap.b32 	%r12417, %r12412, %r12413, 18;
	mov.b64 	%rd18004, {%r12417, %r12416};
	xor.b64  	%rd18005, %rd18004, %rd18003;
	shf.l.wrap.b32 	%r12418, %r12412, %r12413, 23;
	shf.l.wrap.b32 	%r12419, %r12413, %r12412, 23;
	mov.b64 	%rd18006, {%r12419, %r12418};
	xor.b64  	%rd18007, %rd18005, %rd18006;
	xor.b64  	%rd18008, %rd17966, %rd17941;
	and.b64  	%rd18009, %rd17991, %rd18008;
	xor.b64  	%rd18010, %rd18009, %rd17941;
	add.s64 	%rd18011, %rd17916, %rd18727;
	ld.const.u64 	%rd18012, [%rd18719+192];
	add.s64 	%rd18013, %rd18011, %rd18012;
	add.s64 	%rd18014, %rd18013, %rd18010;
	add.s64 	%rd18015, %rd18014, %rd18007;
	add.s64 	%rd18016, %rd18015, %rd17927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12420,%dummy}, %rd18002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12421}, %rd18002;
	}
	shf.r.wrap.b32 	%r12422, %r12421, %r12420, 28;
	shf.r.wrap.b32 	%r12423, %r12420, %r12421, 28;
	mov.b64 	%rd18017, {%r12423, %r12422};
	shf.l.wrap.b32 	%r12424, %r12420, %r12421, 30;
	shf.l.wrap.b32 	%r12425, %r12421, %r12420, 30;
	mov.b64 	%rd18018, {%r12425, %r12424};
	xor.b64  	%rd18019, %rd18018, %rd18017;
	shf.l.wrap.b32 	%r12426, %r12420, %r12421, 25;
	shf.l.wrap.b32 	%r12427, %r12421, %r12420, 25;
	mov.b64 	%rd18020, {%r12427, %r12426};
	xor.b64  	%rd18021, %rd18019, %rd18020;
	and.b64  	%rd18022, %rd18002, %rd17977;
	xor.b64  	%rd18023, %rd18002, %rd17977;
	and.b64  	%rd18024, %rd18023, %rd17952;
	or.b64  	%rd18025, %rd18024, %rd18022;
	add.s64 	%rd18026, %rd18015, %rd18025;
	add.s64 	%rd18027, %rd18026, %rd18021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12428,%dummy}, %rd18016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12429}, %rd18016;
	}
	shf.r.wrap.b32 	%r12430, %r12429, %r12428, 14;
	shf.r.wrap.b32 	%r12431, %r12428, %r12429, 14;
	mov.b64 	%rd18028, {%r12431, %r12430};
	shf.r.wrap.b32 	%r12432, %r12429, %r12428, 18;
	shf.r.wrap.b32 	%r12433, %r12428, %r12429, 18;
	mov.b64 	%rd18029, {%r12433, %r12432};
	xor.b64  	%rd18030, %rd18029, %rd18028;
	shf.l.wrap.b32 	%r12434, %r12428, %r12429, 23;
	shf.l.wrap.b32 	%r12435, %r12429, %r12428, 23;
	mov.b64 	%rd18031, {%r12435, %r12434};
	xor.b64  	%rd18032, %rd18030, %rd18031;
	xor.b64  	%rd18033, %rd17991, %rd17966;
	and.b64  	%rd18034, %rd18016, %rd18033;
	xor.b64  	%rd18035, %rd18034, %rd17966;
	add.s64 	%rd18036, %rd17941, %rd18726;
	ld.const.u64 	%rd18037, [%rd18719+200];
	add.s64 	%rd18038, %rd18036, %rd18037;
	add.s64 	%rd18039, %rd18038, %rd18035;
	add.s64 	%rd18040, %rd18039, %rd18032;
	add.s64 	%rd18041, %rd18040, %rd17952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12436,%dummy}, %rd18027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12437}, %rd18027;
	}
	shf.r.wrap.b32 	%r12438, %r12437, %r12436, 28;
	shf.r.wrap.b32 	%r12439, %r12436, %r12437, 28;
	mov.b64 	%rd18042, {%r12439, %r12438};
	shf.l.wrap.b32 	%r12440, %r12436, %r12437, 30;
	shf.l.wrap.b32 	%r12441, %r12437, %r12436, 30;
	mov.b64 	%rd18043, {%r12441, %r12440};
	xor.b64  	%rd18044, %rd18043, %rd18042;
	shf.l.wrap.b32 	%r12442, %r12436, %r12437, 25;
	shf.l.wrap.b32 	%r12443, %r12437, %r12436, 25;
	mov.b64 	%rd18045, {%r12443, %r12442};
	xor.b64  	%rd18046, %rd18044, %rd18045;
	and.b64  	%rd18047, %rd18027, %rd18002;
	xor.b64  	%rd18048, %rd18027, %rd18002;
	and.b64  	%rd18049, %rd18048, %rd17977;
	or.b64  	%rd18050, %rd18049, %rd18047;
	add.s64 	%rd18051, %rd18040, %rd18050;
	add.s64 	%rd18052, %rd18051, %rd18046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12444,%dummy}, %rd18041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12445}, %rd18041;
	}
	shf.r.wrap.b32 	%r12446, %r12445, %r12444, 14;
	shf.r.wrap.b32 	%r12447, %r12444, %r12445, 14;
	mov.b64 	%rd18053, {%r12447, %r12446};
	shf.r.wrap.b32 	%r12448, %r12445, %r12444, 18;
	shf.r.wrap.b32 	%r12449, %r12444, %r12445, 18;
	mov.b64 	%rd18054, {%r12449, %r12448};
	xor.b64  	%rd18055, %rd18054, %rd18053;
	shf.l.wrap.b32 	%r12450, %r12444, %r12445, 23;
	shf.l.wrap.b32 	%r12451, %r12445, %r12444, 23;
	mov.b64 	%rd18056, {%r12451, %r12450};
	xor.b64  	%rd18057, %rd18055, %rd18056;
	xor.b64  	%rd18058, %rd18016, %rd17991;
	and.b64  	%rd18059, %rd18041, %rd18058;
	xor.b64  	%rd18060, %rd18059, %rd17991;
	add.s64 	%rd18061, %rd17966, %rd18725;
	ld.const.u64 	%rd18062, [%rd18719+208];
	add.s64 	%rd18063, %rd18061, %rd18062;
	add.s64 	%rd18064, %rd18063, %rd18060;
	add.s64 	%rd18065, %rd18064, %rd18057;
	add.s64 	%rd18066, %rd18065, %rd17977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12452,%dummy}, %rd18052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12453}, %rd18052;
	}
	shf.r.wrap.b32 	%r12454, %r12453, %r12452, 28;
	shf.r.wrap.b32 	%r12455, %r12452, %r12453, 28;
	mov.b64 	%rd18067, {%r12455, %r12454};
	shf.l.wrap.b32 	%r12456, %r12452, %r12453, 30;
	shf.l.wrap.b32 	%r12457, %r12453, %r12452, 30;
	mov.b64 	%rd18068, {%r12457, %r12456};
	xor.b64  	%rd18069, %rd18068, %rd18067;
	shf.l.wrap.b32 	%r12458, %r12452, %r12453, 25;
	shf.l.wrap.b32 	%r12459, %r12453, %r12452, 25;
	mov.b64 	%rd18070, {%r12459, %r12458};
	xor.b64  	%rd18071, %rd18069, %rd18070;
	and.b64  	%rd18072, %rd18052, %rd18027;
	xor.b64  	%rd18073, %rd18052, %rd18027;
	and.b64  	%rd18074, %rd18073, %rd18002;
	or.b64  	%rd18075, %rd18074, %rd18072;
	add.s64 	%rd18076, %rd18065, %rd18075;
	add.s64 	%rd18077, %rd18076, %rd18071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12460,%dummy}, %rd18066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12461}, %rd18066;
	}
	shf.r.wrap.b32 	%r12462, %r12461, %r12460, 14;
	shf.r.wrap.b32 	%r12463, %r12460, %r12461, 14;
	mov.b64 	%rd18078, {%r12463, %r12462};
	shf.r.wrap.b32 	%r12464, %r12461, %r12460, 18;
	shf.r.wrap.b32 	%r12465, %r12460, %r12461, 18;
	mov.b64 	%rd18079, {%r12465, %r12464};
	xor.b64  	%rd18080, %rd18079, %rd18078;
	shf.l.wrap.b32 	%r12466, %r12460, %r12461, 23;
	shf.l.wrap.b32 	%r12467, %r12461, %r12460, 23;
	mov.b64 	%rd18081, {%r12467, %r12466};
	xor.b64  	%rd18082, %rd18080, %rd18081;
	xor.b64  	%rd18083, %rd18041, %rd18016;
	and.b64  	%rd18084, %rd18066, %rd18083;
	xor.b64  	%rd18085, %rd18084, %rd18016;
	add.s64 	%rd18086, %rd17991, %rd18724;
	ld.const.u64 	%rd18087, [%rd18719+216];
	add.s64 	%rd18088, %rd18086, %rd18087;
	add.s64 	%rd18089, %rd18088, %rd18085;
	add.s64 	%rd18090, %rd18089, %rd18082;
	add.s64 	%rd18091, %rd18090, %rd18002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12468,%dummy}, %rd18077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12469}, %rd18077;
	}
	shf.r.wrap.b32 	%r12470, %r12469, %r12468, 28;
	shf.r.wrap.b32 	%r12471, %r12468, %r12469, 28;
	mov.b64 	%rd18092, {%r12471, %r12470};
	shf.l.wrap.b32 	%r12472, %r12468, %r12469, 30;
	shf.l.wrap.b32 	%r12473, %r12469, %r12468, 30;
	mov.b64 	%rd18093, {%r12473, %r12472};
	xor.b64  	%rd18094, %rd18093, %rd18092;
	shf.l.wrap.b32 	%r12474, %r12468, %r12469, 25;
	shf.l.wrap.b32 	%r12475, %r12469, %r12468, 25;
	mov.b64 	%rd18095, {%r12475, %r12474};
	xor.b64  	%rd18096, %rd18094, %rd18095;
	and.b64  	%rd18097, %rd18077, %rd18052;
	xor.b64  	%rd18098, %rd18077, %rd18052;
	and.b64  	%rd18099, %rd18098, %rd18027;
	or.b64  	%rd18100, %rd18099, %rd18097;
	add.s64 	%rd18101, %rd18090, %rd18100;
	add.s64 	%rd18102, %rd18101, %rd18096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12476,%dummy}, %rd18091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12477}, %rd18091;
	}
	shf.r.wrap.b32 	%r12478, %r12477, %r12476, 14;
	shf.r.wrap.b32 	%r12479, %r12476, %r12477, 14;
	mov.b64 	%rd18103, {%r12479, %r12478};
	shf.r.wrap.b32 	%r12480, %r12477, %r12476, 18;
	shf.r.wrap.b32 	%r12481, %r12476, %r12477, 18;
	mov.b64 	%rd18104, {%r12481, %r12480};
	xor.b64  	%rd18105, %rd18104, %rd18103;
	shf.l.wrap.b32 	%r12482, %r12476, %r12477, 23;
	shf.l.wrap.b32 	%r12483, %r12477, %r12476, 23;
	mov.b64 	%rd18106, {%r12483, %r12482};
	xor.b64  	%rd18107, %rd18105, %rd18106;
	xor.b64  	%rd18108, %rd18066, %rd18041;
	and.b64  	%rd18109, %rd18091, %rd18108;
	xor.b64  	%rd18110, %rd18109, %rd18041;
	add.s64 	%rd18111, %rd18016, %rd18723;
	ld.const.u64 	%rd18112, [%rd18719+224];
	add.s64 	%rd18113, %rd18111, %rd18112;
	add.s64 	%rd18114, %rd18113, %rd18110;
	add.s64 	%rd18115, %rd18114, %rd18107;
	add.s64 	%rd18735, %rd18115, %rd18027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12484,%dummy}, %rd18102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12485}, %rd18102;
	}
	shf.r.wrap.b32 	%r12486, %r12485, %r12484, 28;
	shf.r.wrap.b32 	%r12487, %r12484, %r12485, 28;
	mov.b64 	%rd18116, {%r12487, %r12486};
	shf.l.wrap.b32 	%r12488, %r12484, %r12485, 30;
	shf.l.wrap.b32 	%r12489, %r12485, %r12484, 30;
	mov.b64 	%rd18117, {%r12489, %r12488};
	xor.b64  	%rd18118, %rd18117, %rd18116;
	shf.l.wrap.b32 	%r12490, %r12484, %r12485, 25;
	shf.l.wrap.b32 	%r12491, %r12485, %r12484, 25;
	mov.b64 	%rd18119, {%r12491, %r12490};
	xor.b64  	%rd18120, %rd18118, %rd18119;
	and.b64  	%rd18121, %rd18102, %rd18077;
	xor.b64  	%rd18122, %rd18102, %rd18077;
	and.b64  	%rd18123, %rd18122, %rd18052;
	or.b64  	%rd18124, %rd18123, %rd18121;
	add.s64 	%rd18125, %rd18115, %rd18124;
	add.s64 	%rd18731, %rd18125, %rd18120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12492,%dummy}, %rd18735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12493}, %rd18735;
	}
	shf.r.wrap.b32 	%r12494, %r12493, %r12492, 14;
	shf.r.wrap.b32 	%r12495, %r12492, %r12493, 14;
	mov.b64 	%rd18126, {%r12495, %r12494};
	shf.r.wrap.b32 	%r12496, %r12493, %r12492, 18;
	shf.r.wrap.b32 	%r12497, %r12492, %r12493, 18;
	mov.b64 	%rd18127, {%r12497, %r12496};
	xor.b64  	%rd18128, %rd18127, %rd18126;
	shf.l.wrap.b32 	%r12498, %r12492, %r12493, 23;
	shf.l.wrap.b32 	%r12499, %r12493, %r12492, 23;
	mov.b64 	%rd18129, {%r12499, %r12498};
	xor.b64  	%rd18130, %rd18128, %rd18129;
	xor.b64  	%rd18131, %rd18091, %rd18066;
	and.b64  	%rd18132, %rd18735, %rd18131;
	xor.b64  	%rd18133, %rd18132, %rd18066;
	add.s64 	%rd18134, %rd18041, %rd18722;
	ld.const.u64 	%rd18135, [%rd18719+232];
	add.s64 	%rd18136, %rd18134, %rd18135;
	add.s64 	%rd18137, %rd18136, %rd18133;
	add.s64 	%rd18138, %rd18137, %rd18130;
	add.s64 	%rd18734, %rd18138, %rd18052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12500,%dummy}, %rd18731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12501}, %rd18731;
	}
	shf.r.wrap.b32 	%r12502, %r12501, %r12500, 28;
	shf.r.wrap.b32 	%r12503, %r12500, %r12501, 28;
	mov.b64 	%rd18139, {%r12503, %r12502};
	shf.l.wrap.b32 	%r12504, %r12500, %r12501, 30;
	shf.l.wrap.b32 	%r12505, %r12501, %r12500, 30;
	mov.b64 	%rd18140, {%r12505, %r12504};
	xor.b64  	%rd18141, %rd18140, %rd18139;
	shf.l.wrap.b32 	%r12506, %r12500, %r12501, 25;
	shf.l.wrap.b32 	%r12507, %r12501, %r12500, 25;
	mov.b64 	%rd18142, {%r12507, %r12506};
	xor.b64  	%rd18143, %rd18141, %rd18142;
	and.b64  	%rd18144, %rd18731, %rd18102;
	xor.b64  	%rd18145, %rd18731, %rd18102;
	and.b64  	%rd18146, %rd18145, %rd18077;
	or.b64  	%rd18147, %rd18146, %rd18144;
	add.s64 	%rd18148, %rd18138, %rd18147;
	add.s64 	%rd18730, %rd18148, %rd18143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12508,%dummy}, %rd18734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12509}, %rd18734;
	}
	shf.r.wrap.b32 	%r12510, %r12509, %r12508, 14;
	shf.r.wrap.b32 	%r12511, %r12508, %r12509, 14;
	mov.b64 	%rd18149, {%r12511, %r12510};
	shf.r.wrap.b32 	%r12512, %r12509, %r12508, 18;
	shf.r.wrap.b32 	%r12513, %r12508, %r12509, 18;
	mov.b64 	%rd18150, {%r12513, %r12512};
	xor.b64  	%rd18151, %rd18150, %rd18149;
	shf.l.wrap.b32 	%r12514, %r12508, %r12509, 23;
	shf.l.wrap.b32 	%r12515, %r12509, %r12508, 23;
	mov.b64 	%rd18152, {%r12515, %r12514};
	xor.b64  	%rd18153, %rd18151, %rd18152;
	xor.b64  	%rd18154, %rd18735, %rd18091;
	and.b64  	%rd18155, %rd18734, %rd18154;
	xor.b64  	%rd18156, %rd18155, %rd18091;
	add.s64 	%rd18157, %rd18066, %rd18721;
	ld.const.u64 	%rd18158, [%rd18719+240];
	add.s64 	%rd18159, %rd18157, %rd18158;
	add.s64 	%rd18160, %rd18159, %rd18156;
	add.s64 	%rd18161, %rd18160, %rd18153;
	add.s64 	%rd18733, %rd18161, %rd18077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12516,%dummy}, %rd18730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12517}, %rd18730;
	}
	shf.r.wrap.b32 	%r12518, %r12517, %r12516, 28;
	shf.r.wrap.b32 	%r12519, %r12516, %r12517, 28;
	mov.b64 	%rd18162, {%r12519, %r12518};
	shf.l.wrap.b32 	%r12520, %r12516, %r12517, 30;
	shf.l.wrap.b32 	%r12521, %r12517, %r12516, 30;
	mov.b64 	%rd18163, {%r12521, %r12520};
	xor.b64  	%rd18164, %rd18163, %rd18162;
	shf.l.wrap.b32 	%r12522, %r12516, %r12517, 25;
	shf.l.wrap.b32 	%r12523, %r12517, %r12516, 25;
	mov.b64 	%rd18165, {%r12523, %r12522};
	xor.b64  	%rd18166, %rd18164, %rd18165;
	and.b64  	%rd18167, %rd18730, %rd18731;
	xor.b64  	%rd18168, %rd18730, %rd18731;
	and.b64  	%rd18169, %rd18168, %rd18102;
	or.b64  	%rd18170, %rd18169, %rd18167;
	add.s64 	%rd18171, %rd18161, %rd18170;
	add.s64 	%rd18729, %rd18171, %rd18166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12524,%dummy}, %rd18733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12525}, %rd18733;
	}
	shf.r.wrap.b32 	%r12526, %r12525, %r12524, 14;
	shf.r.wrap.b32 	%r12527, %r12524, %r12525, 14;
	mov.b64 	%rd18172, {%r12527, %r12526};
	shf.r.wrap.b32 	%r12528, %r12525, %r12524, 18;
	shf.r.wrap.b32 	%r12529, %r12524, %r12525, 18;
	mov.b64 	%rd18173, {%r12529, %r12528};
	xor.b64  	%rd18174, %rd18173, %rd18172;
	shf.l.wrap.b32 	%r12530, %r12524, %r12525, 23;
	shf.l.wrap.b32 	%r12531, %r12525, %r12524, 23;
	mov.b64 	%rd18175, {%r12531, %r12530};
	xor.b64  	%rd18176, %rd18174, %rd18175;
	xor.b64  	%rd18177, %rd18734, %rd18735;
	and.b64  	%rd18178, %rd18733, %rd18177;
	xor.b64  	%rd18179, %rd18178, %rd18735;
	add.s64 	%rd18180, %rd18091, %rd18720;
	ld.const.u64 	%rd18181, [%rd18719+248];
	add.s64 	%rd18182, %rd18180, %rd18181;
	add.s64 	%rd18183, %rd18182, %rd18179;
	add.s64 	%rd18184, %rd18183, %rd18176;
	add.s64 	%rd18732, %rd18184, %rd18102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12532,%dummy}, %rd18729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12533}, %rd18729;
	}
	shf.r.wrap.b32 	%r12534, %r12533, %r12532, 28;
	shf.r.wrap.b32 	%r12535, %r12532, %r12533, 28;
	mov.b64 	%rd18185, {%r12535, %r12534};
	shf.l.wrap.b32 	%r12536, %r12532, %r12533, 30;
	shf.l.wrap.b32 	%r12537, %r12533, %r12532, 30;
	mov.b64 	%rd18186, {%r12537, %r12536};
	xor.b64  	%rd18187, %rd18186, %rd18185;
	shf.l.wrap.b32 	%r12538, %r12532, %r12533, 25;
	shf.l.wrap.b32 	%r12539, %r12533, %r12532, 25;
	mov.b64 	%rd18188, {%r12539, %r12538};
	xor.b64  	%rd18189, %rd18187, %rd18188;
	and.b64  	%rd18190, %rd18729, %rd18730;
	xor.b64  	%rd18191, %rd18729, %rd18730;
	and.b64  	%rd18192, %rd18191, %rd18731;
	or.b64  	%rd18193, %rd18192, %rd18190;
	add.s64 	%rd18194, %rd18184, %rd18193;
	add.s64 	%rd18728, %rd18194, %rd18189;
	add.s32 	%r12714, %r12714, 16;
	setp.lt.s32	%p165, %r12714, 80;
	mov.u64 	%rd18719, %rd1439;
	@%p165 bra 	BB0_275;

	add.s64 	%rd18195, %rd18703, %rd18728;
	st.local.u64 	[%rd1], %rd18195;
	add.s64 	%rd18196, %rd18702, %rd18729;
	st.local.u64 	[%rd1+8], %rd18196;
	add.s64 	%rd18197, %rd18701, %rd18730;
	st.local.u64 	[%rd1+16], %rd18197;
	add.s64 	%rd18198, %rd18700, %rd18731;
	st.local.u64 	[%rd1+24], %rd18198;
	add.s64 	%rd18199, %rd18699, %rd18732;
	st.local.u64 	[%rd1+32], %rd18199;
	add.s64 	%rd18200, %rd18698, %rd18733;
	st.local.u64 	[%rd1+40], %rd18200;
	add.s64 	%rd18201, %rd18697, %rd18734;
	st.local.u64 	[%rd1+48], %rd18201;
	add.s64 	%rd18202, %rd18696, %rd18735;
	st.local.u64 	[%rd1+56], %rd18202;
	st.global.u64 	[%rd11999+80], %rd18195;
	st.global.u64 	[%rd11999+88], %rd18196;

BB0_277:
	ret;
}

	// .globl	m01800_loop
.entry m01800_loop(
	.param .u64 .ptr .global .align 4 m01800_loop_param_0,
	.param .u64 .ptr .global .align 4 m01800_loop_param_1,
	.param .u64 .ptr .global .align 4 m01800_loop_param_2,
	.param .u64 .ptr .const .align 4 m01800_loop_param_3,
	.param .u64 .ptr .global .align 8 m01800_loop_param_4,
	.param .u64 .ptr .global .align 1 m01800_loop_param_5,
	.param .u64 .ptr .global .align 4 m01800_loop_param_6,
	.param .u64 .ptr .global .align 4 m01800_loop_param_7,
	.param .u64 .ptr .global .align 4 m01800_loop_param_8,
	.param .u64 .ptr .global .align 4 m01800_loop_param_9,
	.param .u64 .ptr .global .align 4 m01800_loop_param_10,
	.param .u64 .ptr .global .align 4 m01800_loop_param_11,
	.param .u64 .ptr .global .align 4 m01800_loop_param_12,
	.param .u64 .ptr .global .align 4 m01800_loop_param_13,
	.param .u64 .ptr .global .align 8 m01800_loop_param_14,
	.param .u64 .ptr .global .align 4 m01800_loop_param_15,
	.param .u64 .ptr .global .align 4 m01800_loop_param_16,
	.param .u64 .ptr .global .align 4 m01800_loop_param_17,
	.param .u64 .ptr .global .align 1 m01800_loop_param_18,
	.param .u64 .ptr .global .align 4 m01800_loop_param_19,
	.param .u64 .ptr .global .align 1 m01800_loop_param_20,
	.param .u64 .ptr .global .align 1 m01800_loop_param_21,
	.param .u64 .ptr .global .align 1 m01800_loop_param_22,
	.param .u64 .ptr .global .align 1 m01800_loop_param_23,
	.param .u64 .ptr .global .align 8 m01800_loop_param_24
)
{
	.local .align 16 .b8 	__local_depot1[1200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<57>;
	.reg .b16 	%rs<49>;
	.reg .b32 	%r<1228>;
	.reg .b64 	%rd<1633>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd182, [m01800_loop_param_0];
	ld.param.u64 	%rd183, [m01800_loop_param_4];
	ld.param.u64 	%rd184, [m01800_loop_param_17];
	ld.param.u64 	%rd185, [m01800_loop_param_24];
	add.u64 	%rd1, %SPL, 144;
	add.u64 	%rd2, %SPL, 176;
	mov.u32 	%r130, %ctaid.x;
	mov.u32 	%r131, %ntid.x;
	mov.b32	%r132, %envreg3;
	mad.lo.s32 	%r133, %r130, %r131, %r132;
	mov.u32 	%r134, %tid.x;
	add.s32 	%r1, %r133, %r134;
	cvt.s64.s32	%rd188, %r1;
	add.s64 	%rd3, %rd185, 56;
	ld.global.u64 	%rd189, [%rd185+56];
	setp.ge.u64	%p1, %rd188, %rd189;
	@%p1 bra 	BB1_89;

	mul.wide.s32 	%rd190, %r1, 672;
	add.s64 	%rd191, %rd183, %rd190;
	add.s64 	%rd4, %rd191, 64;
	mov.u32 	%r135, 0;
	ld.global.u64 	%rd192, [%rd191+72];
	ld.global.u64 	%rd193, [%rd191+64];
	add.u64 	%rd195, %SPL, 0;
	st.local.v2.u64 	[%rd195], {%rd193, %rd192};
	mul.wide.s32 	%rd196, %r1, 260;
	add.s64 	%rd197, %rd182, %rd196;
	ld.global.u32 	%r136, [%rd197+256];
	and.b32  	%r2, %r136, 15;
	ld.global.u64 	%rd198, [%rd191+88];
	ld.global.u64 	%rd199, [%rd191+80];
	add.u64 	%rd201, %SPL, 128;
	st.local.v2.u64 	[%rd201], {%rd199, %rd198};
	ld.global.u32 	%r137, [%rd3+-44];
	mul.wide.u32 	%rd202, %r137, 568;
	add.s64 	%rd203, %rd184, %rd202;
	ld.global.u32 	%r3, [%rd203+512];
	add.s32 	%r138, %r3, %r2;
	add.s32 	%r139, %r2, 64;
	add.s32 	%r140, %r139, %r3;
	add.s32 	%r141, %r138, 64;
	st.local.v4.u32 	[%rd1], {%r139, %r139, %r140, %r141};
	add.s32 	%r142, %r139, %r2;
	add.s32 	%r143, %r139, %r138;
	add.s32 	%r144, %r140, %r2;
	st.local.v4.u32 	[%rd1+16], {%r142, %r142, %r144, %r143};
	mov.u64 	%rd1576, %rd2;
	mov.u32 	%r1154, %r135;

BB1_2:
	st.local.v2.u32 	[%rd1576], {%r135, %r135};
	add.s64 	%rd1576, %rd1576, 8;
	add.s32 	%r1154, %r1154, 1;
	setp.lt.u32	%p2, %r1154, 128;
	@%p2 bra 	BB1_2;

	setp.eq.s32	%p3, %r2, 0;
	mov.u32 	%r1155, 0;
	mov.u32 	%r1156, 64;
	@%p3 bra 	BB1_6;

BB1_4:
	xor.b32  	%r148, %r1155, 7;
	cvt.u64.u32	%rd209, %r148;
	add.s64 	%rd210, %rd195, %rd209;
	ld.local.u8 	%rs1, [%rd210];
	add.s32 	%r149, %r1155, 64;
	xor.b32  	%r150, %r149, 7;
	cvt.u64.u32	%rd211, %r150;
	add.s64 	%rd212, %rd2, %rd211;
	st.local.u8 	[%rd212], %rs1;
	add.s32 	%r1155, %r1155, 1;
	setp.lt.u32	%p4, %r1155, %r2;
	@%p4 bra 	BB1_4;

	add.s32 	%r1156, %r1155, 64;

BB1_6:
	xor.b32  	%r153, %r1156, 7;
	cvt.u64.u32	%rd213, %r153;
	add.s64 	%rd214, %rd2, %rd213;
	mov.u16 	%rs2, 128;
	st.local.u8 	[%rd214], %rs2;
	shl.b32 	%r154, %r1156, 3;
	cvt.u64.u32	%rd215, %r154;
	add.s64 	%rd11, %rd2, 120;
	st.local.u64 	[%rd2+120], %rd215;
	mov.u32 	%r1158, 0;
	@%p3 bra 	BB1_8;

BB1_7:
	xor.b32  	%r155, %r1158, 7;
	cvt.u64.u32	%rd216, %r155;
	add.s64 	%rd217, %rd11, %rd216;
	add.s64 	%rd218, %rd195, %rd216;
	ld.local.u8 	%rs3, [%rd218];
	st.local.u8 	[%rd217+8], %rs3;
	add.s32 	%r1158, %r1158, 1;
	setp.lt.u32	%p6, %r1158, %r2;
	@%p6 bra 	BB1_7;

BB1_8:
	add.s32 	%r157, %r1158, 64;
	xor.b32  	%r158, %r157, 7;
	cvt.u64.u32	%rd219, %r158;
	add.s64 	%rd220, %rd11, %rd219;
	mov.u32 	%r1168, 64;
	st.local.u8 	[%rd220+8], %rs2;
	shl.b32 	%r159, %r157, 3;
	cvt.u64.u32	%rd221, %r159;
	st.local.u64 	[%rd11+128], %rd221;
	add.s64 	%rd12, %rd201, 7;
	setp.eq.s32	%p7, %r3, 0;
	@%p7 bra 	BB1_19;

	add.s64 	%rd13, %rd2, 256;
	and.b32  	%r167, %r3, 3;
	mov.u32 	%r1160, 64;
	mov.u32 	%r1159, 0;
	setp.eq.s32	%p8, %r167, 0;
	@%p8 bra 	BB1_10;

	setp.eq.s32	%p9, %r167, 1;
	@%p9 bra 	BB1_15;

	setp.eq.s32	%p10, %r167, 2;
	@%p10 bra 	BB1_14;

	ld.local.u8 	%rs5, [%rd12];
	st.local.u8 	[%rd11+207], %rs5;
	mov.u32 	%r1160, 65;
	mov.u32 	%r1159, 1;

BB1_14:
	xor.b32  	%r170, %r1159, 7;
	cvt.u64.u32	%rd222, %r170;
	add.s64 	%rd223, %rd201, %rd222;
	ld.local.u8 	%rs6, [%rd223];
	xor.b32  	%r171, %r1160, 7;
	cvt.u64.u32	%rd224, %r171;
	add.s64 	%rd225, %rd13, %rd224;
	st.local.u8 	[%rd225], %rs6;
	add.s32 	%r1160, %r1160, 1;
	add.s32 	%r1159, %r1159, 1;

BB1_15:
	xor.b32  	%r172, %r1159, 7;
	cvt.u64.u32	%rd226, %r172;
	add.s64 	%rd227, %rd201, %rd226;
	ld.local.u8 	%rs7, [%rd227];
	xor.b32  	%r173, %r1160, 7;
	cvt.u64.u32	%rd228, %r173;
	add.s64 	%rd229, %rd13, %rd228;
	st.local.u8 	[%rd229], %rs7;
	add.s32 	%r1160, %r1160, 1;
	add.s32 	%r1159, %r1159, 1;
	mov.u32 	%r1168, %r1160;
	bra.uni 	BB1_16;

BB1_10:
	mov.u32 	%r1168, %r1159;

BB1_16:
	setp.lt.u32	%p11, %r3, 4;
	@%p11 bra 	BB1_19;

	mov.u32 	%r1168, %r1160;

BB1_18:
	xor.b32  	%r174, %r1159, 7;
	cvt.u64.u32	%rd230, %r174;
	add.s64 	%rd231, %rd201, %rd230;
	ld.local.u8 	%rs8, [%rd231];
	xor.b32  	%r175, %r1168, 7;
	cvt.u64.u32	%rd232, %r175;
	add.s64 	%rd233, %rd13, %rd232;
	st.local.u8 	[%rd233], %rs8;
	add.s32 	%r176, %r1159, 1;
	xor.b32  	%r177, %r176, 7;
	cvt.u64.u32	%rd234, %r177;
	add.s64 	%rd235, %rd201, %rd234;
	ld.local.u8 	%rs9, [%rd235];
	add.s32 	%r178, %r1168, 1;
	xor.b32  	%r179, %r178, 7;
	cvt.u64.u32	%rd236, %r179;
	add.s64 	%rd237, %rd13, %rd236;
	st.local.u8 	[%rd237], %rs9;
	add.s32 	%r180, %r1159, 2;
	xor.b32  	%r181, %r180, 7;
	cvt.u64.u32	%rd238, %r181;
	add.s64 	%rd239, %rd201, %rd238;
	ld.local.u8 	%rs10, [%rd239];
	add.s32 	%r182, %r1168, 2;
	xor.b32  	%r183, %r182, 7;
	cvt.u64.u32	%rd240, %r183;
	add.s64 	%rd241, %rd13, %rd240;
	st.local.u8 	[%rd241], %rs10;
	add.s32 	%r184, %r1159, 3;
	xor.b32  	%r185, %r184, 7;
	cvt.u64.u32	%rd242, %r185;
	add.s64 	%rd243, %rd201, %rd242;
	ld.local.u8 	%rs11, [%rd243];
	add.s32 	%r186, %r1168, 3;
	xor.b32  	%r187, %r186, 7;
	cvt.u64.u32	%rd244, %r187;
	add.s64 	%rd245, %rd13, %rd244;
	st.local.u8 	[%rd245], %rs11;
	add.s32 	%r1168, %r1168, 4;
	add.s32 	%r1159, %r1159, 4;
	setp.lt.u32	%p12, %r1159, %r3;
	@%p12 bra 	BB1_18;

BB1_19:
	add.s64 	%rd14, %rd2, 256;
	mov.u32 	%r1169, 0;
	@%p3 bra 	BB1_21;

BB1_20:
	xor.b32  	%r189, %r1169, 7;
	cvt.u64.u32	%rd246, %r189;
	add.s64 	%rd247, %rd195, %rd246;
	ld.local.u8 	%rs12, [%rd247];
	xor.b32  	%r190, %r1168, 7;
	cvt.u64.u32	%rd248, %r190;
	add.s64 	%rd249, %rd14, %rd248;
	st.local.u8 	[%rd249], %rs12;
	add.s32 	%r1168, %r1168, 1;
	add.s32 	%r1169, %r1169, 1;
	setp.lt.u32	%p14, %r1169, %r2;
	@%p14 bra 	BB1_20;

BB1_21:
	xor.b32  	%r192, %r1168, 7;
	cvt.u64.u32	%rd250, %r192;
	add.s64 	%rd251, %rd14, %rd250;
	st.local.u8 	[%rd251], %rs2;
	shl.b32 	%r193, %r1168, 3;
	cvt.u64.u32	%rd252, %r193;
	st.local.u64 	[%rd11+256], %rd252;
	mov.u32 	%r36, 0;
	@%p3 bra 	BB1_24;

	add.s64 	%rd15, %rd2, 384;
	mov.u32 	%r36, 0;

BB1_23:
	xor.b32  	%r195, %r36, 7;
	cvt.u64.u32	%rd253, %r195;
	add.s64 	%rd254, %rd195, %rd253;
	ld.local.u8 	%rs14, [%rd254];
	add.s64 	%rd255, %rd15, %rd253;
	st.local.u8 	[%rd255], %rs14;
	add.s32 	%r36, %r36, 1;
	setp.lt.u32	%p16, %r36, %r2;
	@%p16 bra 	BB1_23;

BB1_24:
	add.s64 	%rd16, %rd2, 384;
	@%p7 bra 	BB1_25;

	and.b32  	%r200, %r3, 3;
	mov.u32 	%r1174, 0;
	setp.eq.s32	%p18, %r200, 0;
	@%p18 bra 	BB1_27;

	setp.eq.s32	%p19, %r200, 1;
	@%p19 bra 	BB1_32;

	setp.eq.s32	%p20, %r200, 2;
	@%p20 bra 	BB1_31;

	ld.local.u8 	%rs15, [%rd12];
	xor.b32  	%r202, %r36, 7;
	cvt.u64.u32	%rd256, %r202;
	add.s64 	%rd257, %rd16, %rd256;
	st.local.u8 	[%rd257], %rs15;
	add.s32 	%r36, %r36, 1;
	mov.u32 	%r1174, 1;

BB1_31:
	xor.b32  	%r203, %r1174, 7;
	cvt.u64.u32	%rd258, %r203;
	add.s64 	%rd259, %rd201, %rd258;
	ld.local.u8 	%rs16, [%rd259];
	xor.b32  	%r204, %r36, 7;
	cvt.u64.u32	%rd260, %r204;
	add.s64 	%rd261, %rd16, %rd260;
	st.local.u8 	[%rd261], %rs16;
	add.s32 	%r36, %r36, 1;
	add.s32 	%r1174, %r1174, 1;

BB1_32:
	xor.b32  	%r205, %r1174, 7;
	cvt.u64.u32	%rd262, %r205;
	add.s64 	%rd263, %rd201, %rd262;
	ld.local.u8 	%rs17, [%rd263];
	xor.b32  	%r206, %r36, 7;
	cvt.u64.u32	%rd264, %r206;
	add.s64 	%rd265, %rd16, %rd264;
	st.local.u8 	[%rd265], %rs17;
	add.s32 	%r36, %r36, 1;
	add.s32 	%r1174, %r1174, 1;
	mov.u32 	%r1183, %r36;
	bra.uni 	BB1_33;

BB1_25:
	mov.u32 	%r1183, %r36;
	bra.uni 	BB1_36;

BB1_27:
	mov.u32 	%r1183, %r1174;

BB1_33:
	setp.lt.u32	%p21, %r3, 4;
	@%p21 bra 	BB1_36;

	mov.u32 	%r1183, %r36;

BB1_35:
	xor.b32  	%r207, %r1174, 7;
	cvt.u64.u32	%rd266, %r207;
	add.s64 	%rd267, %rd201, %rd266;
	ld.local.u8 	%rs18, [%rd267];
	xor.b32  	%r208, %r1183, 7;
	cvt.u64.u32	%rd268, %r208;
	add.s64 	%rd269, %rd16, %rd268;
	st.local.u8 	[%rd269], %rs18;
	add.s32 	%r209, %r1174, 1;
	xor.b32  	%r210, %r209, 7;
	cvt.u64.u32	%rd270, %r210;
	add.s64 	%rd271, %rd201, %rd270;
	ld.local.u8 	%rs19, [%rd271];
	add.s32 	%r211, %r1183, 1;
	xor.b32  	%r212, %r211, 7;
	cvt.u64.u32	%rd272, %r212;
	add.s64 	%rd273, %rd16, %rd272;
	st.local.u8 	[%rd273], %rs19;
	add.s32 	%r213, %r1174, 2;
	xor.b32  	%r214, %r213, 7;
	cvt.u64.u32	%rd274, %r214;
	add.s64 	%rd275, %rd201, %rd274;
	ld.local.u8 	%rs20, [%rd275];
	add.s32 	%r215, %r1183, 2;
	xor.b32  	%r216, %r215, 7;
	cvt.u64.u32	%rd276, %r216;
	add.s64 	%rd277, %rd16, %rd276;
	st.local.u8 	[%rd277], %rs20;
	add.s32 	%r217, %r1174, 3;
	xor.b32  	%r218, %r217, 7;
	cvt.u64.u32	%rd278, %r218;
	add.s64 	%rd279, %rd201, %rd278;
	ld.local.u8 	%rs21, [%rd279];
	add.s32 	%r219, %r1183, 3;
	xor.b32  	%r220, %r219, 7;
	cvt.u64.u32	%rd280, %r220;
	add.s64 	%rd281, %rd16, %rd280;
	st.local.u8 	[%rd281], %rs21;
	add.s32 	%r1183, %r1183, 4;
	add.s32 	%r1174, %r1174, 4;
	setp.lt.u32	%p22, %r1174, %r3;
	@%p22 bra 	BB1_35;

BB1_36:
	add.s32 	%r222, %r1183, 64;
	mov.u32 	%r1188, 64;
	xor.b32  	%r223, %r222, 7;
	cvt.u64.u32	%rd282, %r223;
	add.s64 	%rd283, %rd16, %rd282;
	st.local.u8 	[%rd283], %rs2;
	shl.b32 	%r224, %r222, 3;
	cvt.u64.u32	%rd284, %r224;
	st.local.u64 	[%rd11+384], %rd284;
	@%p3 bra 	BB1_40;

	add.s64 	%rd17, %rd2, 512;
	mov.u32 	%r1184, 0;

BB1_38:
	xor.b32  	%r226, %r1184, 7;
	cvt.u64.u32	%rd285, %r226;
	add.s64 	%rd286, %rd195, %rd285;
	ld.local.u8 	%rs23, [%rd286];
	add.s32 	%r227, %r1184, 64;
	xor.b32  	%r228, %r227, 7;
	cvt.u64.u32	%rd287, %r228;
	add.s64 	%rd288, %rd17, %rd287;
	st.local.u8 	[%rd288], %rs23;
	add.s32 	%r1184, %r1184, 1;
	setp.lt.u32	%p24, %r1184, %r2;
	@%p24 bra 	BB1_38;

	add.s32 	%r1188, %r1184, 64;

BB1_40:
	add.s64 	%rd18, %rd2, 512;
	mov.u32 	%r1186, 0;
	@%p3 bra 	BB1_42;

BB1_41:
	xor.b32  	%r230, %r1186, 7;
	cvt.u64.u32	%rd289, %r230;
	add.s64 	%rd290, %rd195, %rd289;
	ld.local.u8 	%rs24, [%rd290];
	xor.b32  	%r231, %r1188, 7;
	cvt.u64.u32	%rd291, %r231;
	add.s64 	%rd292, %rd18, %rd291;
	st.local.u8 	[%rd292], %rs24;
	add.s32 	%r1188, %r1188, 1;
	add.s32 	%r1186, %r1186, 1;
	setp.lt.u32	%p26, %r1186, %r2;
	@%p26 bra 	BB1_41;

BB1_42:
	xor.b32  	%r233, %r1188, 7;
	cvt.u64.u32	%rd293, %r233;
	add.s64 	%rd294, %rd18, %rd293;
	st.local.u8 	[%rd294], %rs2;
	shl.b32 	%r234, %r1188, 3;
	cvt.u64.u32	%rd295, %r234;
	st.local.u64 	[%rd11+512], %rd295;
	mov.u32 	%r1191, 0;
	mov.u32 	%r1190, %r1191;
	@%p3 bra 	BB1_45;

	add.s64 	%rd19, %rd2, 640;
	mov.u32 	%r1190, 0;

BB1_44:
	xor.b32  	%r236, %r1190, 7;
	cvt.u64.u32	%rd296, %r236;
	add.s64 	%rd297, %rd195, %rd296;
	ld.local.u8 	%rs26, [%rd297];
	add.s64 	%rd298, %rd19, %rd296;
	st.local.u8 	[%rd298], %rs26;
	add.s32 	%r1190, %r1190, 1;
	setp.lt.u32	%p28, %r1190, %r2;
	@%p28 bra 	BB1_44;

BB1_45:
	add.s64 	%rd20, %rd2, 640;
	@%p3 bra 	BB1_47;

BB1_46:
	xor.b32  	%r238, %r1191, 7;
	cvt.u64.u32	%rd299, %r238;
	add.s64 	%rd300, %rd195, %rd299;
	ld.local.u8 	%rs27, [%rd300];
	xor.b32  	%r239, %r1190, 7;
	cvt.u64.u32	%rd301, %r239;
	add.s64 	%rd302, %rd20, %rd301;
	st.local.u8 	[%rd302], %rs27;
	add.s32 	%r1190, %r1190, 1;
	add.s32 	%r1191, %r1191, 1;
	setp.lt.u32	%p30, %r1191, %r2;
	@%p30 bra 	BB1_46;

BB1_47:
	add.s32 	%r241, %r1190, 64;
	mov.u32 	%r1203, 64;
	xor.b32  	%r242, %r241, 7;
	cvt.u64.u32	%rd303, %r242;
	add.s64 	%rd304, %rd20, %rd303;
	st.local.u8 	[%rd304], %rs2;
	shl.b32 	%r243, %r241, 3;
	cvt.u64.u32	%rd305, %r243;
	st.local.u64 	[%rd11+640], %rd305;
	@%p7 bra 	BB1_58;

	add.s64 	%rd21, %rd2, 768;
	and.b32  	%r251, %r3, 3;
	mov.u32 	%r1195, 64;
	mov.u32 	%r1194, 0;
	setp.eq.s32	%p32, %r251, 0;
	@%p32 bra 	BB1_49;

	setp.eq.s32	%p33, %r251, 1;
	@%p33 bra 	BB1_54;

	setp.eq.s32	%p34, %r251, 2;
	@%p34 bra 	BB1_53;

	ld.local.u8 	%rs29, [%rd12];
	st.local.u8 	[%rd11+719], %rs29;
	mov.u32 	%r1195, 65;
	mov.u32 	%r1194, 1;

BB1_53:
	xor.b32  	%r254, %r1194, 7;
	cvt.u64.u32	%rd306, %r254;
	add.s64 	%rd307, %rd201, %rd306;
	ld.local.u8 	%rs30, [%rd307];
	xor.b32  	%r255, %r1195, 7;
	cvt.u64.u32	%rd308, %r255;
	add.s64 	%rd309, %rd21, %rd308;
	st.local.u8 	[%rd309], %rs30;
	add.s32 	%r1195, %r1195, 1;
	add.s32 	%r1194, %r1194, 1;

BB1_54:
	xor.b32  	%r256, %r1194, 7;
	cvt.u64.u32	%rd310, %r256;
	add.s64 	%rd311, %rd201, %rd310;
	ld.local.u8 	%rs31, [%rd311];
	xor.b32  	%r257, %r1195, 7;
	cvt.u64.u32	%rd312, %r257;
	add.s64 	%rd313, %rd21, %rd312;
	st.local.u8 	[%rd313], %rs31;
	add.s32 	%r1195, %r1195, 1;
	add.s32 	%r1194, %r1194, 1;
	mov.u32 	%r1203, %r1195;
	bra.uni 	BB1_55;

BB1_49:
	mov.u32 	%r1203, %r1194;

BB1_55:
	setp.lt.u32	%p35, %r3, 4;
	@%p35 bra 	BB1_58;

	mov.u32 	%r1203, %r1195;

BB1_57:
	xor.b32  	%r258, %r1194, 7;
	cvt.u64.u32	%rd314, %r258;
	add.s64 	%rd315, %rd201, %rd314;
	ld.local.u8 	%rs32, [%rd315];
	xor.b32  	%r259, %r1203, 7;
	cvt.u64.u32	%rd316, %r259;
	add.s64 	%rd317, %rd21, %rd316;
	st.local.u8 	[%rd317], %rs32;
	add.s32 	%r260, %r1194, 1;
	xor.b32  	%r261, %r260, 7;
	cvt.u64.u32	%rd318, %r261;
	add.s64 	%rd319, %rd201, %rd318;
	ld.local.u8 	%rs33, [%rd319];
	add.s32 	%r262, %r1203, 1;
	xor.b32  	%r263, %r262, 7;
	cvt.u64.u32	%rd320, %r263;
	add.s64 	%rd321, %rd21, %rd320;
	st.local.u8 	[%rd321], %rs33;
	add.s32 	%r264, %r1194, 2;
	xor.b32  	%r265, %r264, 7;
	cvt.u64.u32	%rd322, %r265;
	add.s64 	%rd323, %rd201, %rd322;
	ld.local.u8 	%rs34, [%rd323];
	add.s32 	%r266, %r1203, 2;
	xor.b32  	%r267, %r266, 7;
	cvt.u64.u32	%rd324, %r267;
	add.s64 	%rd325, %rd21, %rd324;
	st.local.u8 	[%rd325], %rs34;
	add.s32 	%r268, %r1194, 3;
	xor.b32  	%r269, %r268, 7;
	cvt.u64.u32	%rd326, %r269;
	add.s64 	%rd327, %rd201, %rd326;
	ld.local.u8 	%rs35, [%rd327];
	add.s32 	%r270, %r1203, 3;
	xor.b32  	%r271, %r270, 7;
	cvt.u64.u32	%rd328, %r271;
	add.s64 	%rd329, %rd21, %rd328;
	st.local.u8 	[%rd329], %rs35;
	add.s32 	%r1203, %r1203, 4;
	add.s32 	%r1194, %r1194, 4;
	setp.lt.u32	%p36, %r1194, %r3;
	@%p36 bra 	BB1_57;

BB1_58:
	@%p3 bra 	BB1_61;

	add.s64 	%rd22, %rd2, 768;
	mov.u32 	%r1204, 0;

BB1_60:
	xor.b32  	%r273, %r1204, 7;
	cvt.u64.u32	%rd330, %r273;
	add.s64 	%rd331, %rd195, %rd330;
	ld.local.u8 	%rs36, [%rd331];
	xor.b32  	%r274, %r1203, 7;
	cvt.u64.u32	%rd332, %r274;
	add.s64 	%rd333, %rd22, %rd332;
	st.local.u8 	[%rd333], %rs36;
	add.s32 	%r1203, %r1203, 1;
	add.s32 	%r1204, %r1204, 1;
	setp.lt.u32	%p38, %r1204, %r2;
	@%p38 bra 	BB1_60;

BB1_61:
	add.s64 	%rd23, %rd2, 768;
	mov.u32 	%r1207, 0;
	@%p3 bra 	BB1_63;

BB1_62:
	xor.b32  	%r276, %r1207, 7;
	cvt.u64.u32	%rd334, %r276;
	add.s64 	%rd335, %rd195, %rd334;
	ld.local.u8 	%rs37, [%rd335];
	xor.b32  	%r277, %r1203, 7;
	cvt.u64.u32	%rd336, %r277;
	add.s64 	%rd337, %rd23, %rd336;
	st.local.u8 	[%rd337], %rs37;
	add.s32 	%r1203, %r1203, 1;
	add.s32 	%r1207, %r1207, 1;
	setp.lt.u32	%p40, %r1207, %r2;
	@%p40 bra 	BB1_62;

BB1_63:
	xor.b32  	%r279, %r1203, 7;
	cvt.u64.u32	%rd338, %r279;
	add.s64 	%rd339, %rd23, %rd338;
	st.local.u8 	[%rd339], %rs2;
	shl.b32 	%r280, %r1203, 3;
	cvt.u64.u32	%rd340, %r280;
	st.local.u64 	[%rd11+768], %rd340;
	mov.u32 	%r99, 0;
	@%p3 bra 	BB1_66;

	add.s64 	%rd24, %rd2, 896;
	mov.u32 	%r99, 0;

BB1_65:
	xor.b32  	%r282, %r99, 7;
	cvt.u64.u32	%rd341, %r282;
	add.s64 	%rd342, %rd195, %rd341;
	ld.local.u8 	%rs39, [%rd342];
	add.s64 	%rd343, %rd24, %rd341;
	st.local.u8 	[%rd343], %rs39;
	add.s32 	%r99, %r99, 1;
	setp.lt.u32	%p42, %r99, %r2;
	@%p42 bra 	BB1_65;

BB1_66:
	@%p7 bra 	BB1_67;

	add.s64 	%rd25, %rd2, 896;
	and.b32  	%r287, %r3, 3;
	mov.u32 	%r1212, 0;
	setp.eq.s32	%p44, %r287, 0;
	@%p44 bra 	BB1_69;

	setp.eq.s32	%p45, %r287, 1;
	@%p45 bra 	BB1_74;

	setp.eq.s32	%p46, %r287, 2;
	@%p46 bra 	BB1_73;

	ld.local.u8 	%rs40, [%rd12];
	xor.b32  	%r289, %r99, 7;
	cvt.u64.u32	%rd344, %r289;
	add.s64 	%rd345, %rd25, %rd344;
	st.local.u8 	[%rd345], %rs40;
	add.s32 	%r99, %r99, 1;
	mov.u32 	%r1212, 1;

BB1_73:
	xor.b32  	%r290, %r1212, 7;
	cvt.u64.u32	%rd346, %r290;
	add.s64 	%rd347, %rd201, %rd346;
	ld.local.u8 	%rs41, [%rd347];
	xor.b32  	%r291, %r99, 7;
	cvt.u64.u32	%rd348, %r291;
	add.s64 	%rd349, %rd25, %rd348;
	st.local.u8 	[%rd349], %rs41;
	add.s32 	%r99, %r99, 1;
	add.s32 	%r1212, %r1212, 1;

BB1_74:
	xor.b32  	%r292, %r1212, 7;
	cvt.u64.u32	%rd350, %r292;
	add.s64 	%rd351, %rd201, %rd350;
	ld.local.u8 	%rs42, [%rd351];
	xor.b32  	%r293, %r99, 7;
	cvt.u64.u32	%rd352, %r293;
	add.s64 	%rd353, %rd25, %rd352;
	st.local.u8 	[%rd353], %rs42;
	add.s32 	%r99, %r99, 1;
	add.s32 	%r1212, %r1212, 1;
	mov.u32 	%r1221, %r99;
	bra.uni 	BB1_75;

BB1_67:
	mov.u32 	%r1221, %r99;
	bra.uni 	BB1_78;

BB1_69:
	mov.u32 	%r1221, %r1212;

BB1_75:
	setp.lt.u32	%p47, %r3, 4;
	@%p47 bra 	BB1_78;

	mov.u32 	%r1221, %r99;

BB1_77:
	xor.b32  	%r294, %r1212, 7;
	cvt.u64.u32	%rd354, %r294;
	add.s64 	%rd355, %rd201, %rd354;
	ld.local.u8 	%rs43, [%rd355];
	xor.b32  	%r295, %r1221, 7;
	cvt.u64.u32	%rd356, %r295;
	add.s64 	%rd357, %rd25, %rd356;
	st.local.u8 	[%rd357], %rs43;
	add.s32 	%r296, %r1212, 1;
	xor.b32  	%r297, %r296, 7;
	cvt.u64.u32	%rd358, %r297;
	add.s64 	%rd359, %rd201, %rd358;
	ld.local.u8 	%rs44, [%rd359];
	add.s32 	%r298, %r1221, 1;
	xor.b32  	%r299, %r298, 7;
	cvt.u64.u32	%rd360, %r299;
	add.s64 	%rd361, %rd25, %rd360;
	st.local.u8 	[%rd361], %rs44;
	add.s32 	%r300, %r1212, 2;
	xor.b32  	%r301, %r300, 7;
	cvt.u64.u32	%rd362, %r301;
	add.s64 	%rd363, %rd201, %rd362;
	ld.local.u8 	%rs45, [%rd363];
	add.s32 	%r302, %r1221, 2;
	xor.b32  	%r303, %r302, 7;
	cvt.u64.u32	%rd364, %r303;
	add.s64 	%rd365, %rd25, %rd364;
	st.local.u8 	[%rd365], %rs45;
	add.s32 	%r304, %r1212, 3;
	xor.b32  	%r305, %r304, 7;
	cvt.u64.u32	%rd366, %r305;
	add.s64 	%rd367, %rd201, %rd366;
	ld.local.u8 	%rs46, [%rd367];
	add.s32 	%r306, %r1221, 3;
	xor.b32  	%r307, %r306, 7;
	cvt.u64.u32	%rd368, %r307;
	add.s64 	%rd369, %rd25, %rd368;
	st.local.u8 	[%rd369], %rs46;
	add.s32 	%r1221, %r1221, 4;
	add.s32 	%r1212, %r1212, 4;
	setp.lt.u32	%p48, %r1212, %r3;
	@%p48 bra 	BB1_77;

BB1_78:
	add.s64 	%rd26, %rd2, 896;
	mov.u32 	%r1222, 0;
	@%p3 bra 	BB1_80;

BB1_79:
	xor.b32  	%r309, %r1222, 7;
	cvt.u64.u32	%rd370, %r309;
	add.s64 	%rd371, %rd195, %rd370;
	ld.local.u8 	%rs47, [%rd371];
	xor.b32  	%r310, %r1221, 7;
	cvt.u64.u32	%rd372, %r310;
	add.s64 	%rd373, %rd26, %rd372;
	st.local.u8 	[%rd373], %rs47;
	add.s32 	%r1221, %r1221, 1;
	add.s32 	%r1222, %r1222, 1;
	setp.lt.u32	%p50, %r1222, %r2;
	@%p50 bra 	BB1_79;

BB1_80:
	add.s32 	%r311, %r1221, 64;
	xor.b32  	%r312, %r311, 7;
	cvt.u64.u32	%rd374, %r312;
	add.s64 	%rd375, %rd26, %rd374;
	st.local.u8 	[%rd375], %rs2;
	shl.b32 	%r313, %r311, 3;
	cvt.u64.u32	%rd376, %r313;
	st.local.u64 	[%rd11+896], %rd376;
	ld.global.u64 	%rd1584, [%rd4+-64];
	ld.global.u64 	%rd1583, [%rd4+-56];
	ld.global.u64 	%rd1582, [%rd4+-48];
	ld.global.u64 	%rd1581, [%rd4+-40];
	ld.global.u64 	%rd1580, [%rd4+-32];
	ld.global.u64 	%rd1579, [%rd4+-24];
	ld.global.u64 	%rd1578, [%rd4+-16];
	ld.global.u64 	%rd1577, [%rd4+-8];
	ld.global.u32 	%r122, [%rd3+-36];
	setp.eq.s32	%p51, %r122, 0;
	@%p51 bra 	BB1_88;

	ld.global.u32 	%r1225, [%rd3+-40];
	ld.const.u64 	%rd35, [k_sha512];
	ld.const.u64 	%rd36, [k_sha512+8];
	ld.const.u64 	%rd37, [k_sha512+16];
	ld.const.u64 	%rd38, [k_sha512+24];
	ld.const.u64 	%rd39, [k_sha512+32];
	ld.const.u64 	%rd40, [k_sha512+40];
	ld.const.u64 	%rd41, [k_sha512+48];
	ld.const.u64 	%rd42, [k_sha512+56];
	ld.const.u64 	%rd43, [k_sha512+64];
	ld.const.u64 	%rd44, [k_sha512+72];
	ld.const.u64 	%rd45, [k_sha512+80];
	ld.const.u64 	%rd46, [k_sha512+88];
	ld.const.u64 	%rd47, [k_sha512+96];
	ld.const.u64 	%rd48, [k_sha512+104];
	ld.const.u64 	%rd49, [k_sha512+112];
	ld.const.u64 	%rd50, [k_sha512+120];
	mov.u64 	%rd377, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd377;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 18;
	shf.r.wrap.b32 	%r318, %r315, %r316, 18;
	mov.b64 	%rd378, {%r318, %r317};
	shf.r.wrap.b32 	%r319, %r316, %r315, 14;
	shf.r.wrap.b32 	%r320, %r315, %r316, 14;
	mov.b64 	%rd379, {%r320, %r319};
	xor.b64  	%rd380, %rd378, %rd379;
	shf.l.wrap.b32 	%r321, %r315, %r316, 23;
	shf.l.wrap.b32 	%r322, %r316, %r315, 23;
	mov.b64 	%rd381, {%r322, %r321};
	xor.b64  	%rd51, %rd380, %rd381;
	mov.u64 	%rd382, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd382;
	}
	shf.l.wrap.b32 	%r325, %r324, %r323, 30;
	shf.l.wrap.b32 	%r326, %r323, %r324, 30;
	mov.b64 	%rd383, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r323, %r324, 28;
	shf.r.wrap.b32 	%r328, %r324, %r323, 28;
	mov.b64 	%rd384, {%r328, %r327};
	xor.b64  	%rd385, %rd383, %rd384;
	shf.l.wrap.b32 	%r329, %r324, %r323, 25;
	shf.l.wrap.b32 	%r330, %r323, %r324, 25;
	mov.b64 	%rd386, {%r330, %r329};
	xor.b64  	%rd52, %rd385, %rd386;
	mov.u32 	%r1226, 0;

BB1_82:
	add.u64 	%rd1574, %SPL, 176;
	and.b32  	%r331, %r1225, 1;
	setp.eq.b32	%p52, %r331, 1;
	cvt.u64.u32	%rd387, %r331;
	mul.wide.u32 	%rd388, %r1225, -1431655765;
	shr.u64 	%rd389, %rd388, 33;
	cvt.u32.u64	%r332, %rd389;
	mul.lo.s32 	%r333, %r332, 3;
	sub.s32 	%r334, %r1225, %r333;
	setp.ne.s32	%p53, %r334, 0;
	selp.b64	%rd390, 2, 0, %p53;
	mul.wide.u32 	%rd391, %r1225, 613566757;
	shr.u64 	%rd392, %rd391, 32;
	cvt.u32.u64	%r335, %rd392;
	sub.s32 	%r336, %r1225, %r335;
	shr.u32 	%r337, %r336, 1;
	add.s32 	%r338, %r337, %r335;
	shr.u32 	%r339, %r338, 2;
	mul.lo.s32 	%r340, %r339, 7;
	sub.s32 	%r341, %r1225, %r340;
	setp.ne.s32	%p54, %r341, 0;
	selp.b64	%rd393, 4, 0, %p54;
	or.b64  	%rd394, %rd390, %rd387;
	or.b64  	%rd61, %rd394, %rd393;
	shl.b64 	%rd395, %rd61, 7;
	add.s64 	%rd396, %rd1574, %rd395;
	ld.local.v2.u64 	{%rd397, %rd398}, [%rd396];
	st.local.v2.u64 	[%rd195], {%rd397, %rd398};
	ld.local.v2.u64 	{%rd403, %rd404}, [%rd396+16];
	st.local.v2.u64 	[%rd195+16], {%rd403, %rd404};
	ld.local.v2.u64 	{%rd407, %rd408}, [%rd396+32];
	st.local.v2.u64 	[%rd195+32], {%rd407, %rd408};
	ld.local.v2.u64 	{%rd411, %rd412}, [%rd396+48];
	st.local.v2.u64 	[%rd195+48], {%rd411, %rd412};
	ld.local.v2.u64 	{%rd1608, %rd1607}, [%rd396+64];
	st.local.v2.u64 	[%rd195+64], {%rd1608, %rd1607};
	ld.local.v2.u64 	{%rd1606, %rd1605}, [%rd396+80];
	st.local.v2.u64 	[%rd195+80], {%rd1606, %rd1605};
	ld.local.v2.u64 	{%rd1604, %rd1603}, [%rd396+96];
	st.local.v2.u64 	[%rd195+96], {%rd1604, %rd1603};
	ld.local.v2.u64 	{%rd1602, %rd1601}, [%rd396+112];
	st.local.v2.u64 	[%rd195+112], {%rd1602, %rd1601};
	@%p52 bra 	BB1_84;
	bra.uni 	BB1_83;

BB1_84:
	add.u64 	%rd1572, %SPL, 144;
	shl.b64 	%rd425, %rd61, 2;
	add.s64 	%rd426, %rd1572, %rd425;
	ld.local.u32 	%r342, [%rd426];
	add.s32 	%r343, %r342, -64;
	shr.u64 	%rd427, %rd1584, 56;
	xor.b32  	%r344, %r343, 7;
	cvt.u64.u32	%rd428, %r344;
	add.s64 	%rd431, %rd195, %rd428;
	st.local.u8 	[%rd431], %rd427;
	add.s32 	%r345, %r342, -63;
	shr.u64 	%rd432, %rd1584, 48;
	xor.b32  	%r346, %r345, 7;
	cvt.u64.u32	%rd433, %r346;
	add.s64 	%rd434, %rd195, %rd433;
	st.local.u8 	[%rd434], %rd432;
	add.s32 	%r347, %r342, -62;
	shr.u64 	%rd435, %rd1584, 40;
	xor.b32  	%r348, %r347, 7;
	cvt.u64.u32	%rd436, %r348;
	add.s64 	%rd437, %rd195, %rd436;
	st.local.u8 	[%rd437], %rd435;
	add.s32 	%r349, %r342, -61;
	shr.u64 	%rd438, %rd1584, 32;
	xor.b32  	%r350, %r349, 7;
	cvt.u64.u32	%rd439, %r350;
	add.s64 	%rd440, %rd195, %rd439;
	st.local.u8 	[%rd440], %rd438;
	add.s32 	%r351, %r342, -60;
	shr.u64 	%rd441, %rd1584, 24;
	xor.b32  	%r352, %r351, 7;
	cvt.u64.u32	%rd442, %r352;
	add.s64 	%rd443, %rd195, %rd442;
	st.local.u8 	[%rd443], %rd441;
	add.s32 	%r353, %r342, -59;
	shr.u64 	%rd444, %rd1584, 16;
	xor.b32  	%r354, %r353, 7;
	cvt.u64.u32	%rd445, %r354;
	add.s64 	%rd446, %rd195, %rd445;
	st.local.u8 	[%rd446], %rd444;
	add.s32 	%r355, %r342, -58;
	shr.u64 	%rd447, %rd1584, 8;
	xor.b32  	%r356, %r355, 7;
	cvt.u64.u32	%rd448, %r356;
	add.s64 	%rd449, %rd195, %rd448;
	st.local.u8 	[%rd449], %rd447;
	add.s32 	%r357, %r342, -57;
	xor.b32  	%r358, %r357, 7;
	cvt.u64.u32	%rd450, %r358;
	add.s64 	%rd451, %rd195, %rd450;
	st.local.u8 	[%rd451], %rd1584;
	add.s32 	%r359, %r342, -56;
	shr.u64 	%rd452, %rd1583, 56;
	xor.b32  	%r360, %r359, 7;
	cvt.u64.u32	%rd453, %r360;
	add.s64 	%rd454, %rd195, %rd453;
	st.local.u8 	[%rd454], %rd452;
	add.s32 	%r361, %r342, -55;
	shr.u64 	%rd455, %rd1583, 48;
	xor.b32  	%r362, %r361, 7;
	cvt.u64.u32	%rd456, %r362;
	add.s64 	%rd457, %rd195, %rd456;
	st.local.u8 	[%rd457], %rd455;
	add.s32 	%r363, %r342, -54;
	shr.u64 	%rd458, %rd1583, 40;
	xor.b32  	%r364, %r363, 7;
	cvt.u64.u32	%rd459, %r364;
	add.s64 	%rd460, %rd195, %rd459;
	st.local.u8 	[%rd460], %rd458;
	add.s32 	%r365, %r342, -53;
	shr.u64 	%rd461, %rd1583, 32;
	xor.b32  	%r366, %r365, 7;
	cvt.u64.u32	%rd462, %r366;
	add.s64 	%rd463, %rd195, %rd462;
	st.local.u8 	[%rd463], %rd461;
	add.s32 	%r367, %r342, -52;
	shr.u64 	%rd464, %rd1583, 24;
	xor.b32  	%r368, %r367, 7;
	cvt.u64.u32	%rd465, %r368;
	add.s64 	%rd466, %rd195, %rd465;
	st.local.u8 	[%rd466], %rd464;
	add.s32 	%r369, %r342, -51;
	shr.u64 	%rd467, %rd1583, 16;
	xor.b32  	%r370, %r369, 7;
	cvt.u64.u32	%rd468, %r370;
	add.s64 	%rd469, %rd195, %rd468;
	st.local.u8 	[%rd469], %rd467;
	add.s32 	%r371, %r342, -50;
	shr.u64 	%rd470, %rd1583, 8;
	xor.b32  	%r372, %r371, 7;
	cvt.u64.u32	%rd471, %r372;
	add.s64 	%rd472, %rd195, %rd471;
	st.local.u8 	[%rd472], %rd470;
	add.s32 	%r373, %r342, -49;
	xor.b32  	%r374, %r373, 7;
	cvt.u64.u32	%rd473, %r374;
	add.s64 	%rd474, %rd195, %rd473;
	st.local.u8 	[%rd474], %rd1583;
	add.s32 	%r375, %r342, -48;
	shr.u64 	%rd475, %rd1582, 56;
	xor.b32  	%r376, %r375, 7;
	cvt.u64.u32	%rd476, %r376;
	add.s64 	%rd477, %rd195, %rd476;
	st.local.u8 	[%rd477], %rd475;
	add.s32 	%r377, %r342, -47;
	shr.u64 	%rd478, %rd1582, 48;
	xor.b32  	%r378, %r377, 7;
	cvt.u64.u32	%rd479, %r378;
	add.s64 	%rd480, %rd195, %rd479;
	st.local.u8 	[%rd480], %rd478;
	add.s32 	%r379, %r342, -46;
	shr.u64 	%rd481, %rd1582, 40;
	xor.b32  	%r380, %r379, 7;
	cvt.u64.u32	%rd482, %r380;
	add.s64 	%rd483, %rd195, %rd482;
	st.local.u8 	[%rd483], %rd481;
	add.s32 	%r381, %r342, -45;
	shr.u64 	%rd484, %rd1582, 32;
	xor.b32  	%r382, %r381, 7;
	cvt.u64.u32	%rd485, %r382;
	add.s64 	%rd486, %rd195, %rd485;
	st.local.u8 	[%rd486], %rd484;
	add.s32 	%r383, %r342, -44;
	shr.u64 	%rd487, %rd1582, 24;
	xor.b32  	%r384, %r383, 7;
	cvt.u64.u32	%rd488, %r384;
	add.s64 	%rd489, %rd195, %rd488;
	st.local.u8 	[%rd489], %rd487;
	add.s32 	%r385, %r342, -43;
	shr.u64 	%rd490, %rd1582, 16;
	xor.b32  	%r386, %r385, 7;
	cvt.u64.u32	%rd491, %r386;
	add.s64 	%rd492, %rd195, %rd491;
	st.local.u8 	[%rd492], %rd490;
	add.s32 	%r387, %r342, -42;
	shr.u64 	%rd493, %rd1582, 8;
	xor.b32  	%r388, %r387, 7;
	cvt.u64.u32	%rd494, %r388;
	add.s64 	%rd495, %rd195, %rd494;
	st.local.u8 	[%rd495], %rd493;
	add.s32 	%r389, %r342, -41;
	xor.b32  	%r390, %r389, 7;
	cvt.u64.u32	%rd496, %r390;
	add.s64 	%rd497, %rd195, %rd496;
	st.local.u8 	[%rd497], %rd1582;
	add.s32 	%r391, %r342, -40;
	shr.u64 	%rd498, %rd1581, 56;
	xor.b32  	%r392, %r391, 7;
	cvt.u64.u32	%rd499, %r392;
	add.s64 	%rd500, %rd195, %rd499;
	st.local.u8 	[%rd500], %rd498;
	add.s32 	%r393, %r342, -39;
	shr.u64 	%rd501, %rd1581, 48;
	xor.b32  	%r394, %r393, 7;
	cvt.u64.u32	%rd502, %r394;
	add.s64 	%rd503, %rd195, %rd502;
	st.local.u8 	[%rd503], %rd501;
	add.s32 	%r395, %r342, -38;
	shr.u64 	%rd504, %rd1581, 40;
	xor.b32  	%r396, %r395, 7;
	cvt.u64.u32	%rd505, %r396;
	add.s64 	%rd506, %rd195, %rd505;
	st.local.u8 	[%rd506], %rd504;
	add.s32 	%r397, %r342, -37;
	shr.u64 	%rd507, %rd1581, 32;
	xor.b32  	%r398, %r397, 7;
	cvt.u64.u32	%rd508, %r398;
	add.s64 	%rd509, %rd195, %rd508;
	st.local.u8 	[%rd509], %rd507;
	add.s32 	%r399, %r342, -36;
	shr.u64 	%rd510, %rd1581, 24;
	xor.b32  	%r400, %r399, 7;
	cvt.u64.u32	%rd511, %r400;
	add.s64 	%rd512, %rd195, %rd511;
	st.local.u8 	[%rd512], %rd510;
	add.s32 	%r401, %r342, -35;
	shr.u64 	%rd513, %rd1581, 16;
	xor.b32  	%r402, %r401, 7;
	cvt.u64.u32	%rd514, %r402;
	add.s64 	%rd515, %rd195, %rd514;
	st.local.u8 	[%rd515], %rd513;
	add.s32 	%r403, %r342, -34;
	shr.u64 	%rd516, %rd1581, 8;
	xor.b32  	%r404, %r403, 7;
	cvt.u64.u32	%rd517, %r404;
	add.s64 	%rd518, %rd195, %rd517;
	st.local.u8 	[%rd518], %rd516;
	add.s32 	%r405, %r342, -33;
	xor.b32  	%r406, %r405, 7;
	cvt.u64.u32	%rd519, %r406;
	add.s64 	%rd520, %rd195, %rd519;
	st.local.u8 	[%rd520], %rd1581;
	add.s32 	%r407, %r342, -32;
	shr.u64 	%rd521, %rd1580, 56;
	xor.b32  	%r408, %r407, 7;
	cvt.u64.u32	%rd522, %r408;
	add.s64 	%rd523, %rd195, %rd522;
	st.local.u8 	[%rd523], %rd521;
	add.s32 	%r409, %r342, -31;
	shr.u64 	%rd524, %rd1580, 48;
	xor.b32  	%r410, %r409, 7;
	cvt.u64.u32	%rd525, %r410;
	add.s64 	%rd526, %rd195, %rd525;
	st.local.u8 	[%rd526], %rd524;
	add.s32 	%r411, %r342, -30;
	shr.u64 	%rd527, %rd1580, 40;
	xor.b32  	%r412, %r411, 7;
	cvt.u64.u32	%rd528, %r412;
	add.s64 	%rd529, %rd195, %rd528;
	st.local.u8 	[%rd529], %rd527;
	add.s32 	%r413, %r342, -29;
	shr.u64 	%rd530, %rd1580, 32;
	xor.b32  	%r414, %r413, 7;
	cvt.u64.u32	%rd531, %r414;
	add.s64 	%rd532, %rd195, %rd531;
	st.local.u8 	[%rd532], %rd530;
	add.s32 	%r415, %r342, -28;
	shr.u64 	%rd533, %rd1580, 24;
	xor.b32  	%r416, %r415, 7;
	cvt.u64.u32	%rd534, %r416;
	add.s64 	%rd535, %rd195, %rd534;
	st.local.u8 	[%rd535], %rd533;
	add.s32 	%r417, %r342, -27;
	shr.u64 	%rd536, %rd1580, 16;
	xor.b32  	%r418, %r417, 7;
	cvt.u64.u32	%rd537, %r418;
	add.s64 	%rd538, %rd195, %rd537;
	st.local.u8 	[%rd538], %rd536;
	add.s32 	%r419, %r342, -26;
	shr.u64 	%rd539, %rd1580, 8;
	xor.b32  	%r420, %r419, 7;
	cvt.u64.u32	%rd540, %r420;
	add.s64 	%rd541, %rd195, %rd540;
	st.local.u8 	[%rd541], %rd539;
	add.s32 	%r421, %r342, -25;
	xor.b32  	%r422, %r421, 7;
	cvt.u64.u32	%rd542, %r422;
	add.s64 	%rd543, %rd195, %rd542;
	st.local.u8 	[%rd543], %rd1580;
	add.s32 	%r423, %r342, -24;
	shr.u64 	%rd544, %rd1579, 56;
	xor.b32  	%r424, %r423, 7;
	cvt.u64.u32	%rd545, %r424;
	add.s64 	%rd546, %rd195, %rd545;
	st.local.u8 	[%rd546], %rd544;
	add.s32 	%r425, %r342, -23;
	shr.u64 	%rd547, %rd1579, 48;
	xor.b32  	%r426, %r425, 7;
	cvt.u64.u32	%rd548, %r426;
	add.s64 	%rd549, %rd195, %rd548;
	st.local.u8 	[%rd549], %rd547;
	add.s32 	%r427, %r342, -22;
	shr.u64 	%rd550, %rd1579, 40;
	xor.b32  	%r428, %r427, 7;
	cvt.u64.u32	%rd551, %r428;
	add.s64 	%rd552, %rd195, %rd551;
	st.local.u8 	[%rd552], %rd550;
	add.s32 	%r429, %r342, -21;
	shr.u64 	%rd553, %rd1579, 32;
	xor.b32  	%r430, %r429, 7;
	cvt.u64.u32	%rd554, %r430;
	add.s64 	%rd555, %rd195, %rd554;
	st.local.u8 	[%rd555], %rd553;
	add.s32 	%r431, %r342, -20;
	shr.u64 	%rd556, %rd1579, 24;
	xor.b32  	%r432, %r431, 7;
	cvt.u64.u32	%rd557, %r432;
	add.s64 	%rd558, %rd195, %rd557;
	st.local.u8 	[%rd558], %rd556;
	add.s32 	%r433, %r342, -19;
	shr.u64 	%rd559, %rd1579, 16;
	xor.b32  	%r434, %r433, 7;
	cvt.u64.u32	%rd560, %r434;
	add.s64 	%rd561, %rd195, %rd560;
	st.local.u8 	[%rd561], %rd559;
	add.s32 	%r435, %r342, -18;
	shr.u64 	%rd562, %rd1579, 8;
	xor.b32  	%r436, %r435, 7;
	cvt.u64.u32	%rd563, %r436;
	add.s64 	%rd564, %rd195, %rd563;
	st.local.u8 	[%rd564], %rd562;
	add.s32 	%r437, %r342, -17;
	xor.b32  	%r438, %r437, 7;
	cvt.u64.u32	%rd565, %r438;
	add.s64 	%rd566, %rd195, %rd565;
	st.local.u8 	[%rd566], %rd1579;
	add.s32 	%r439, %r342, -16;
	shr.u64 	%rd567, %rd1578, 56;
	xor.b32  	%r440, %r439, 7;
	cvt.u64.u32	%rd568, %r440;
	add.s64 	%rd569, %rd195, %rd568;
	st.local.u8 	[%rd569], %rd567;
	add.s32 	%r441, %r342, -15;
	shr.u64 	%rd570, %rd1578, 48;
	xor.b32  	%r442, %r441, 7;
	cvt.u64.u32	%rd571, %r442;
	add.s64 	%rd572, %rd195, %rd571;
	st.local.u8 	[%rd572], %rd570;
	add.s32 	%r443, %r342, -14;
	shr.u64 	%rd573, %rd1578, 40;
	xor.b32  	%r444, %r443, 7;
	cvt.u64.u32	%rd574, %r444;
	add.s64 	%rd575, %rd195, %rd574;
	st.local.u8 	[%rd575], %rd573;
	add.s32 	%r445, %r342, -13;
	shr.u64 	%rd576, %rd1578, 32;
	xor.b32  	%r446, %r445, 7;
	cvt.u64.u32	%rd577, %r446;
	add.s64 	%rd578, %rd195, %rd577;
	st.local.u8 	[%rd578], %rd576;
	add.s32 	%r447, %r342, -12;
	shr.u64 	%rd579, %rd1578, 24;
	xor.b32  	%r448, %r447, 7;
	cvt.u64.u32	%rd580, %r448;
	add.s64 	%rd581, %rd195, %rd580;
	st.local.u8 	[%rd581], %rd579;
	add.s32 	%r449, %r342, -11;
	shr.u64 	%rd582, %rd1578, 16;
	xor.b32  	%r450, %r449, 7;
	cvt.u64.u32	%rd583, %r450;
	add.s64 	%rd584, %rd195, %rd583;
	st.local.u8 	[%rd584], %rd582;
	add.s32 	%r451, %r342, -10;
	shr.u64 	%rd585, %rd1578, 8;
	xor.b32  	%r452, %r451, 7;
	cvt.u64.u32	%rd586, %r452;
	add.s64 	%rd587, %rd195, %rd586;
	st.local.u8 	[%rd587], %rd585;
	add.s32 	%r453, %r342, -9;
	xor.b32  	%r454, %r453, 7;
	cvt.u64.u32	%rd588, %r454;
	add.s64 	%rd589, %rd195, %rd588;
	st.local.u8 	[%rd589], %rd1578;
	add.s32 	%r455, %r342, -8;
	shr.u64 	%rd590, %rd1577, 56;
	xor.b32  	%r456, %r455, 7;
	cvt.u64.u32	%rd591, %r456;
	add.s64 	%rd592, %rd195, %rd591;
	st.local.u8 	[%rd592], %rd590;
	add.s32 	%r457, %r342, -7;
	shr.u64 	%rd593, %rd1577, 48;
	xor.b32  	%r458, %r457, 7;
	cvt.u64.u32	%rd594, %r458;
	add.s64 	%rd595, %rd195, %rd594;
	st.local.u8 	[%rd595], %rd593;
	add.s32 	%r459, %r342, -6;
	shr.u64 	%rd596, %rd1577, 40;
	xor.b32  	%r460, %r459, 7;
	cvt.u64.u32	%rd597, %r460;
	add.s64 	%rd598, %rd195, %rd597;
	st.local.u8 	[%rd598], %rd596;
	add.s32 	%r461, %r342, -5;
	shr.u64 	%rd599, %rd1577, 32;
	xor.b32  	%r462, %r461, 7;
	cvt.u64.u32	%rd600, %r462;
	add.s64 	%rd601, %rd195, %rd600;
	st.local.u8 	[%rd601], %rd599;
	add.s32 	%r463, %r342, -4;
	shr.u64 	%rd602, %rd1577, 24;
	xor.b32  	%r464, %r463, 7;
	cvt.u64.u32	%rd603, %r464;
	add.s64 	%rd604, %rd195, %rd603;
	st.local.u8 	[%rd604], %rd602;
	add.s32 	%r465, %r342, -3;
	shr.u64 	%rd605, %rd1577, 16;
	xor.b32  	%r466, %r465, 7;
	cvt.u64.u32	%rd606, %r466;
	add.s64 	%rd607, %rd195, %rd606;
	st.local.u8 	[%rd607], %rd605;
	add.s32 	%r467, %r342, -2;
	shr.u64 	%rd608, %rd1577, 8;
	xor.b32  	%r468, %r467, 7;
	cvt.u64.u32	%rd609, %r468;
	add.s64 	%rd610, %rd195, %rd609;
	st.local.u8 	[%rd610], %rd608;
	add.s32 	%r469, %r342, -1;
	xor.b32  	%r470, %r469, 7;
	cvt.u64.u32	%rd611, %r470;
	add.s64 	%rd612, %rd195, %rd611;
	st.local.u8 	[%rd612], %rd1577;
	ld.local.v2.u64 	{%rd1584, %rd1583}, [%rd195];
	ld.local.v2.u64 	{%rd1582, %rd1581}, [%rd195+16];
	ld.local.v2.u64 	{%rd1580, %rd1579}, [%rd195+32];
	ld.local.v2.u64 	{%rd1578, %rd1577}, [%rd195+48];
	ld.local.v2.u64 	{%rd1608, %rd1607}, [%rd195+64];
	ld.local.v2.u64 	{%rd1606, %rd1605}, [%rd195+80];
	ld.local.v2.u64 	{%rd1604, %rd1603}, [%rd195+96];
	ld.local.v2.u64 	{%rd1602, %rd1601}, [%rd195+112];
	bra.uni 	BB1_85;

BB1_83:
	st.local.v2.u64 	[%rd195], {%rd1584, %rd1583};
	st.local.v2.u64 	[%rd195+16], {%rd1582, %rd1581};
	st.local.v2.u64 	[%rd195+32], {%rd1580, %rd1579};
	st.local.v2.u64 	[%rd195+48], {%rd1578, %rd1577};

BB1_85:
	add.s64 	%rd629, %rd1584, %rd35;
	add.s64 	%rd630, %rd629, %rd51;
	add.s64 	%rd631, %rd630, %rd52;
	add.s64 	%rd632, %rd630, 2357225248857953701;
	add.s64 	%rd633, %rd631, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd632;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 14;
	shf.r.wrap.b32 	%r475, %r472, %r473, 14;
	mov.b64 	%rd634, {%r475, %r474};
	shf.r.wrap.b32 	%r476, %r473, %r472, 18;
	shf.r.wrap.b32 	%r477, %r472, %r473, 18;
	mov.b64 	%rd635, {%r477, %r476};
	xor.b64  	%rd636, %rd635, %rd634;
	shf.l.wrap.b32 	%r478, %r472, %r473, 23;
	shf.l.wrap.b32 	%r479, %r473, %r472, 23;
	mov.b64 	%rd637, {%r479, %r478};
	xor.b64  	%rd638, %rd636, %rd637;
	and.b64  	%rd639, %rd632, -3887949035690463538;
	xor.b64  	%rd640, %rd639, -7276294671716946913;
	add.s64 	%rd641, %rd1583, %rd36;
	add.s64 	%rd642, %rd641, %rd640;
	add.s64 	%rd643, %rd642, %rd638;
	and.b64  	%rd644, %rd633, 7640891576956012808;
	and.b64  	%rd645, %rd633, -4942790177534073029;
	xor.b64  	%rd646, %rd645, 3026882967131160840;
	or.b64  	%rd647, %rd646, %rd644;
	add.s64 	%rd648, %rd643, %rd647;
	add.s64 	%rd649, %rd643, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd633;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 28;
	shf.r.wrap.b32 	%r483, %r480, %r481, 28;
	mov.b64 	%rd650, {%r483, %r482};
	shf.l.wrap.b32 	%r484, %r480, %r481, 30;
	shf.l.wrap.b32 	%r485, %r481, %r480, 30;
	mov.b64 	%rd651, {%r485, %r484};
	xor.b64  	%rd652, %rd651, %rd650;
	shf.l.wrap.b32 	%r486, %r480, %r481, 25;
	shf.l.wrap.b32 	%r487, %r481, %r480, 25;
	mov.b64 	%rd653, {%r487, %r486};
	xor.b64  	%rd654, %rd652, %rd653;
	add.s64 	%rd655, %rd648, %rd654;
	add.s64 	%rd656, %rd655, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd649;
	}
	shf.r.wrap.b32 	%r490, %r489, %r488, 14;
	shf.r.wrap.b32 	%r491, %r488, %r489, 14;
	mov.b64 	%rd657, {%r491, %r490};
	shf.r.wrap.b32 	%r492, %r489, %r488, 18;
	shf.r.wrap.b32 	%r493, %r488, %r489, 18;
	mov.b64 	%rd658, {%r493, %r492};
	xor.b64  	%rd659, %rd658, %rd657;
	shf.l.wrap.b32 	%r494, %r488, %r489, 23;
	shf.l.wrap.b32 	%r495, %r489, %r488, 23;
	mov.b64 	%rd660, {%r495, %r494};
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd632, 5840696475078001361;
	and.b64  	%rd663, %rd649, %rd662;
	xor.b64  	%rd664, %rd663, 5840696475078001361;
	add.s64 	%rd665, %rd1582, %rd37;
	add.s64 	%rd666, %rd665, %rd664;
	add.s64 	%rd667, %rd666, %rd661;
	and.b64  	%rd668, %rd656, %rd633;
	xor.b64  	%rd669, %rd656, %rd633;
	and.b64  	%rd670, %rd669, 7640891576956012808;
	or.b64  	%rd671, %rd670, %rd668;
	add.s64 	%rd672, %rd667, %rd671;
	add.s64 	%rd673, %rd667, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd656;
	}
	shf.r.wrap.b32 	%r498, %r497, %r496, 28;
	shf.r.wrap.b32 	%r499, %r496, %r497, 28;
	mov.b64 	%rd674, {%r499, %r498};
	shf.l.wrap.b32 	%r500, %r496, %r497, 30;
	shf.l.wrap.b32 	%r501, %r497, %r496, 30;
	mov.b64 	%rd675, {%r501, %r500};
	xor.b64  	%rd676, %rd675, %rd674;
	shf.l.wrap.b32 	%r502, %r496, %r497, 25;
	shf.l.wrap.b32 	%r503, %r497, %r496, 25;
	mov.b64 	%rd677, {%r503, %r502};
	xor.b64  	%rd678, %rd676, %rd677;
	add.s64 	%rd679, %rd672, %rd678;
	add.s64 	%rd680, %rd679, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd673;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 14;
	shf.r.wrap.b32 	%r507, %r504, %r505, 14;
	mov.b64 	%rd681, {%r507, %r506};
	shf.r.wrap.b32 	%r508, %r505, %r504, 18;
	shf.r.wrap.b32 	%r509, %r504, %r505, 18;
	mov.b64 	%rd682, {%r509, %r508};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r510, %r504, %r505, 23;
	shf.l.wrap.b32 	%r511, %r505, %r504, 23;
	mov.b64 	%rd684, {%r511, %r510};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd649, %rd632;
	and.b64  	%rd687, %rd673, %rd686;
	xor.b64  	%rd688, %rd687, %rd632;
	add.s64 	%rd689, %rd1581, %rd38;
	add.s64 	%rd690, %rd689, %rd688;
	add.s64 	%rd691, %rd690, %rd685;
	and.b64  	%rd692, %rd680, %rd656;
	xor.b64  	%rd693, %rd680, %rd656;
	and.b64  	%rd694, %rd693, %rd633;
	or.b64  	%rd695, %rd694, %rd692;
	add.s64 	%rd696, %rd691, %rd695;
	add.s64 	%rd697, %rd691, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd680;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 28;
	shf.r.wrap.b32 	%r515, %r512, %r513, 28;
	mov.b64 	%rd698, {%r515, %r514};
	shf.l.wrap.b32 	%r516, %r512, %r513, 30;
	shf.l.wrap.b32 	%r517, %r513, %r512, 30;
	mov.b64 	%rd699, {%r517, %r516};
	xor.b64  	%rd700, %rd699, %rd698;
	shf.l.wrap.b32 	%r518, %r512, %r513, 25;
	shf.l.wrap.b32 	%r519, %r513, %r512, 25;
	mov.b64 	%rd701, {%r519, %r518};
	xor.b64  	%rd702, %rd700, %rd701;
	add.s64 	%rd703, %rd696, %rd702;
	add.s64 	%rd704, %rd703, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd697;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 14;
	shf.r.wrap.b32 	%r523, %r520, %r521, 14;
	mov.b64 	%rd705, {%r523, %r522};
	shf.r.wrap.b32 	%r524, %r521, %r520, 18;
	shf.r.wrap.b32 	%r525, %r520, %r521, 18;
	mov.b64 	%rd706, {%r525, %r524};
	xor.b64  	%rd707, %rd706, %rd705;
	shf.l.wrap.b32 	%r526, %r520, %r521, 23;
	shf.l.wrap.b32 	%r527, %r521, %r520, 23;
	mov.b64 	%rd708, {%r527, %r526};
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd673, %rd649;
	and.b64  	%rd711, %rd697, %rd710;
	xor.b64  	%rd712, %rd711, %rd649;
	add.s64 	%rd713, %rd632, %rd1580;
	add.s64 	%rd714, %rd713, %rd39;
	add.s64 	%rd715, %rd714, %rd712;
	add.s64 	%rd716, %rd715, %rd709;
	add.s64 	%rd717, %rd716, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd704;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 28;
	shf.r.wrap.b32 	%r531, %r528, %r529, 28;
	mov.b64 	%rd718, {%r531, %r530};
	shf.l.wrap.b32 	%r532, %r528, %r529, 30;
	shf.l.wrap.b32 	%r533, %r529, %r528, 30;
	mov.b64 	%rd719, {%r533, %r532};
	xor.b64  	%rd720, %rd719, %rd718;
	shf.l.wrap.b32 	%r534, %r528, %r529, 25;
	shf.l.wrap.b32 	%r535, %r529, %r528, 25;
	mov.b64 	%rd721, {%r535, %r534};
	xor.b64  	%rd722, %rd720, %rd721;
	and.b64  	%rd723, %rd704, %rd680;
	xor.b64  	%rd724, %rd704, %rd680;
	and.b64  	%rd725, %rd724, %rd656;
	or.b64  	%rd726, %rd725, %rd723;
	add.s64 	%rd727, %rd716, %rd726;
	add.s64 	%rd728, %rd727, %rd722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd717;
	}
	shf.r.wrap.b32 	%r538, %r537, %r536, 14;
	shf.r.wrap.b32 	%r539, %r536, %r537, 14;
	mov.b64 	%rd729, {%r539, %r538};
	shf.r.wrap.b32 	%r540, %r537, %r536, 18;
	shf.r.wrap.b32 	%r541, %r536, %r537, 18;
	mov.b64 	%rd730, {%r541, %r540};
	xor.b64  	%rd731, %rd730, %rd729;
	shf.l.wrap.b32 	%r542, %r536, %r537, 23;
	shf.l.wrap.b32 	%r543, %r537, %r536, 23;
	mov.b64 	%rd732, {%r543, %r542};
	xor.b64  	%rd733, %rd731, %rd732;
	xor.b64  	%rd734, %rd697, %rd673;
	and.b64  	%rd735, %rd717, %rd734;
	xor.b64  	%rd736, %rd735, %rd673;
	add.s64 	%rd737, %rd649, %rd1579;
	add.s64 	%rd738, %rd737, %rd40;
	add.s64 	%rd739, %rd738, %rd736;
	add.s64 	%rd740, %rd739, %rd733;
	add.s64 	%rd741, %rd740, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd728;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 28;
	shf.r.wrap.b32 	%r547, %r544, %r545, 28;
	mov.b64 	%rd742, {%r547, %r546};
	shf.l.wrap.b32 	%r548, %r544, %r545, 30;
	shf.l.wrap.b32 	%r549, %r545, %r544, 30;
	mov.b64 	%rd743, {%r549, %r548};
	xor.b64  	%rd744, %rd743, %rd742;
	shf.l.wrap.b32 	%r550, %r544, %r545, 25;
	shf.l.wrap.b32 	%r551, %r545, %r544, 25;
	mov.b64 	%rd745, {%r551, %r550};
	xor.b64  	%rd746, %rd744, %rd745;
	and.b64  	%rd747, %rd728, %rd704;
	xor.b64  	%rd748, %rd728, %rd704;
	and.b64  	%rd749, %rd748, %rd680;
	or.b64  	%rd750, %rd749, %rd747;
	add.s64 	%rd751, %rd740, %rd750;
	add.s64 	%rd752, %rd751, %rd746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r552,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd741;
	}
	shf.r.wrap.b32 	%r554, %r553, %r552, 14;
	shf.r.wrap.b32 	%r555, %r552, %r553, 14;
	mov.b64 	%rd753, {%r555, %r554};
	shf.r.wrap.b32 	%r556, %r553, %r552, 18;
	shf.r.wrap.b32 	%r557, %r552, %r553, 18;
	mov.b64 	%rd754, {%r557, %r556};
	xor.b64  	%rd755, %rd754, %rd753;
	shf.l.wrap.b32 	%r558, %r552, %r553, 23;
	shf.l.wrap.b32 	%r559, %r553, %r552, 23;
	mov.b64 	%rd756, {%r559, %r558};
	xor.b64  	%rd757, %rd755, %rd756;
	xor.b64  	%rd758, %rd717, %rd697;
	and.b64  	%rd759, %rd741, %rd758;
	xor.b64  	%rd760, %rd759, %rd697;
	add.s64 	%rd761, %rd673, %rd1578;
	add.s64 	%rd762, %rd761, %rd41;
	add.s64 	%rd763, %rd762, %rd760;
	add.s64 	%rd764, %rd763, %rd757;
	add.s64 	%rd765, %rd764, %rd680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd752;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 28;
	shf.r.wrap.b32 	%r563, %r560, %r561, 28;
	mov.b64 	%rd766, {%r563, %r562};
	shf.l.wrap.b32 	%r564, %r560, %r561, 30;
	shf.l.wrap.b32 	%r565, %r561, %r560, 30;
	mov.b64 	%rd767, {%r565, %r564};
	xor.b64  	%rd768, %rd767, %rd766;
	shf.l.wrap.b32 	%r566, %r560, %r561, 25;
	shf.l.wrap.b32 	%r567, %r561, %r560, 25;
	mov.b64 	%rd769, {%r567, %r566};
	xor.b64  	%rd770, %rd768, %rd769;
	and.b64  	%rd771, %rd752, %rd728;
	xor.b64  	%rd772, %rd752, %rd728;
	and.b64  	%rd773, %rd772, %rd704;
	or.b64  	%rd774, %rd773, %rd771;
	add.s64 	%rd775, %rd764, %rd774;
	add.s64 	%rd776, %rd775, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd765;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 14;
	shf.r.wrap.b32 	%r571, %r568, %r569, 14;
	mov.b64 	%rd777, {%r571, %r570};
	shf.r.wrap.b32 	%r572, %r569, %r568, 18;
	shf.r.wrap.b32 	%r573, %r568, %r569, 18;
	mov.b64 	%rd778, {%r573, %r572};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.l.wrap.b32 	%r574, %r568, %r569, 23;
	shf.l.wrap.b32 	%r575, %r569, %r568, 23;
	mov.b64 	%rd780, {%r575, %r574};
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd741, %rd717;
	and.b64  	%rd783, %rd765, %rd782;
	xor.b64  	%rd784, %rd783, %rd717;
	add.s64 	%rd785, %rd697, %rd1577;
	add.s64 	%rd786, %rd785, %rd42;
	add.s64 	%rd787, %rd786, %rd784;
	add.s64 	%rd788, %rd787, %rd781;
	add.s64 	%rd789, %rd788, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd776;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 28;
	shf.r.wrap.b32 	%r579, %r576, %r577, 28;
	mov.b64 	%rd790, {%r579, %r578};
	shf.l.wrap.b32 	%r580, %r576, %r577, 30;
	shf.l.wrap.b32 	%r581, %r577, %r576, 30;
	mov.b64 	%rd791, {%r581, %r580};
	xor.b64  	%rd792, %rd791, %rd790;
	shf.l.wrap.b32 	%r582, %r576, %r577, 25;
	shf.l.wrap.b32 	%r583, %r577, %r576, 25;
	mov.b64 	%rd793, {%r583, %r582};
	xor.b64  	%rd794, %rd792, %rd793;
	and.b64  	%rd795, %rd776, %rd752;
	xor.b64  	%rd796, %rd776, %rd752;
	and.b64  	%rd797, %rd796, %rd728;
	or.b64  	%rd798, %rd797, %rd795;
	add.s64 	%rd799, %rd788, %rd798;
	add.s64 	%rd800, %rd799, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd789;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 14;
	shf.r.wrap.b32 	%r587, %r584, %r585, 14;
	mov.b64 	%rd801, {%r587, %r586};
	shf.r.wrap.b32 	%r588, %r585, %r584, 18;
	shf.r.wrap.b32 	%r589, %r584, %r585, 18;
	mov.b64 	%rd802, {%r589, %r588};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.l.wrap.b32 	%r590, %r584, %r585, 23;
	shf.l.wrap.b32 	%r591, %r585, %r584, 23;
	mov.b64 	%rd804, {%r591, %r590};
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd765, %rd741;
	and.b64  	%rd807, %rd789, %rd806;
	xor.b64  	%rd808, %rd807, %rd741;
	add.s64 	%rd809, %rd717, %rd1608;
	add.s64 	%rd810, %rd809, %rd43;
	add.s64 	%rd811, %rd810, %rd808;
	add.s64 	%rd812, %rd811, %rd805;
	add.s64 	%rd813, %rd812, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd800;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 28;
	shf.r.wrap.b32 	%r595, %r592, %r593, 28;
	mov.b64 	%rd814, {%r595, %r594};
	shf.l.wrap.b32 	%r596, %r592, %r593, 30;
	shf.l.wrap.b32 	%r597, %r593, %r592, 30;
	mov.b64 	%rd815, {%r597, %r596};
	xor.b64  	%rd816, %rd815, %rd814;
	shf.l.wrap.b32 	%r598, %r592, %r593, 25;
	shf.l.wrap.b32 	%r599, %r593, %r592, 25;
	mov.b64 	%rd817, {%r599, %r598};
	xor.b64  	%rd818, %rd816, %rd817;
	and.b64  	%rd819, %rd800, %rd776;
	xor.b64  	%rd820, %rd800, %rd776;
	and.b64  	%rd821, %rd820, %rd752;
	or.b64  	%rd822, %rd821, %rd819;
	add.s64 	%rd823, %rd812, %rd822;
	add.s64 	%rd824, %rd823, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd813;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 14;
	shf.r.wrap.b32 	%r603, %r600, %r601, 14;
	mov.b64 	%rd825, {%r603, %r602};
	shf.r.wrap.b32 	%r604, %r601, %r600, 18;
	shf.r.wrap.b32 	%r605, %r600, %r601, 18;
	mov.b64 	%rd826, {%r605, %r604};
	xor.b64  	%rd827, %rd826, %rd825;
	shf.l.wrap.b32 	%r606, %r600, %r601, 23;
	shf.l.wrap.b32 	%r607, %r601, %r600, 23;
	mov.b64 	%rd828, {%r607, %r606};
	xor.b64  	%rd829, %rd827, %rd828;
	xor.b64  	%rd830, %rd789, %rd765;
	and.b64  	%rd831, %rd813, %rd830;
	xor.b64  	%rd832, %rd831, %rd765;
	add.s64 	%rd833, %rd741, %rd1607;
	add.s64 	%rd834, %rd833, %rd44;
	add.s64 	%rd835, %rd834, %rd832;
	add.s64 	%rd836, %rd835, %rd829;
	add.s64 	%rd837, %rd836, %rd752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd824;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 28;
	shf.r.wrap.b32 	%r611, %r608, %r609, 28;
	mov.b64 	%rd838, {%r611, %r610};
	shf.l.wrap.b32 	%r612, %r608, %r609, 30;
	shf.l.wrap.b32 	%r613, %r609, %r608, 30;
	mov.b64 	%rd839, {%r613, %r612};
	xor.b64  	%rd840, %rd839, %rd838;
	shf.l.wrap.b32 	%r614, %r608, %r609, 25;
	shf.l.wrap.b32 	%r615, %r609, %r608, 25;
	mov.b64 	%rd841, {%r615, %r614};
	xor.b64  	%rd842, %rd840, %rd841;
	and.b64  	%rd843, %rd824, %rd800;
	xor.b64  	%rd844, %rd824, %rd800;
	and.b64  	%rd845, %rd844, %rd776;
	or.b64  	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd836, %rd846;
	add.s64 	%rd848, %rd847, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd837;
	}
	shf.r.wrap.b32 	%r618, %r617, %r616, 14;
	shf.r.wrap.b32 	%r619, %r616, %r617, 14;
	mov.b64 	%rd849, {%r619, %r618};
	shf.r.wrap.b32 	%r620, %r617, %r616, 18;
	shf.r.wrap.b32 	%r621, %r616, %r617, 18;
	mov.b64 	%rd850, {%r621, %r620};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.l.wrap.b32 	%r622, %r616, %r617, 23;
	shf.l.wrap.b32 	%r623, %r617, %r616, 23;
	mov.b64 	%rd852, {%r623, %r622};
	xor.b64  	%rd853, %rd851, %rd852;
	xor.b64  	%rd854, %rd813, %rd789;
	and.b64  	%rd855, %rd837, %rd854;
	xor.b64  	%rd856, %rd855, %rd789;
	add.s64 	%rd857, %rd765, %rd1606;
	add.s64 	%rd858, %rd857, %rd45;
	add.s64 	%rd859, %rd858, %rd856;
	add.s64 	%rd860, %rd859, %rd853;
	add.s64 	%rd861, %rd860, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd848;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 28;
	shf.r.wrap.b32 	%r627, %r624, %r625, 28;
	mov.b64 	%rd862, {%r627, %r626};
	shf.l.wrap.b32 	%r628, %r624, %r625, 30;
	shf.l.wrap.b32 	%r629, %r625, %r624, 30;
	mov.b64 	%rd863, {%r629, %r628};
	xor.b64  	%rd864, %rd863, %rd862;
	shf.l.wrap.b32 	%r630, %r624, %r625, 25;
	shf.l.wrap.b32 	%r631, %r625, %r624, 25;
	mov.b64 	%rd865, {%r631, %r630};
	xor.b64  	%rd866, %rd864, %rd865;
	and.b64  	%rd867, %rd848, %rd824;
	xor.b64  	%rd868, %rd848, %rd824;
	and.b64  	%rd869, %rd868, %rd800;
	or.b64  	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd860, %rd870;
	add.s64 	%rd872, %rd871, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd861;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 14;
	shf.r.wrap.b32 	%r635, %r632, %r633, 14;
	mov.b64 	%rd873, {%r635, %r634};
	shf.r.wrap.b32 	%r636, %r633, %r632, 18;
	shf.r.wrap.b32 	%r637, %r632, %r633, 18;
	mov.b64 	%rd874, {%r637, %r636};
	xor.b64  	%rd875, %rd874, %rd873;
	shf.l.wrap.b32 	%r638, %r632, %r633, 23;
	shf.l.wrap.b32 	%r639, %r633, %r632, 23;
	mov.b64 	%rd876, {%r639, %r638};
	xor.b64  	%rd877, %rd875, %rd876;
	xor.b64  	%rd878, %rd837, %rd813;
	and.b64  	%rd879, %rd861, %rd878;
	xor.b64  	%rd880, %rd879, %rd813;
	add.s64 	%rd881, %rd789, %rd1605;
	add.s64 	%rd882, %rd881, %rd46;
	add.s64 	%rd883, %rd882, %rd880;
	add.s64 	%rd884, %rd883, %rd877;
	add.s64 	%rd885, %rd884, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd872;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 28;
	shf.r.wrap.b32 	%r643, %r640, %r641, 28;
	mov.b64 	%rd886, {%r643, %r642};
	shf.l.wrap.b32 	%r644, %r640, %r641, 30;
	shf.l.wrap.b32 	%r645, %r641, %r640, 30;
	mov.b64 	%rd887, {%r645, %r644};
	xor.b64  	%rd888, %rd887, %rd886;
	shf.l.wrap.b32 	%r646, %r640, %r641, 25;
	shf.l.wrap.b32 	%r647, %r641, %r640, 25;
	mov.b64 	%rd889, {%r647, %r646};
	xor.b64  	%rd890, %rd888, %rd889;
	and.b64  	%rd891, %rd872, %rd848;
	xor.b64  	%rd892, %rd872, %rd848;
	and.b64  	%rd893, %rd892, %rd824;
	or.b64  	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd884, %rd894;
	add.s64 	%rd896, %rd895, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd885;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 14;
	shf.r.wrap.b32 	%r651, %r648, %r649, 14;
	mov.b64 	%rd897, {%r651, %r650};
	shf.r.wrap.b32 	%r652, %r649, %r648, 18;
	shf.r.wrap.b32 	%r653, %r648, %r649, 18;
	mov.b64 	%rd898, {%r653, %r652};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r654, %r648, %r649, 23;
	shf.l.wrap.b32 	%r655, %r649, %r648, 23;
	mov.b64 	%rd900, {%r655, %r654};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd861, %rd837;
	and.b64  	%rd903, %rd885, %rd902;
	xor.b64  	%rd904, %rd903, %rd837;
	add.s64 	%rd905, %rd813, %rd1604;
	add.s64 	%rd906, %rd905, %rd47;
	add.s64 	%rd907, %rd906, %rd904;
	add.s64 	%rd908, %rd907, %rd901;
	add.s64 	%rd1616, %rd908, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd896;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 28;
	shf.r.wrap.b32 	%r659, %r656, %r657, 28;
	mov.b64 	%rd909, {%r659, %r658};
	shf.l.wrap.b32 	%r660, %r656, %r657, 30;
	shf.l.wrap.b32 	%r661, %r657, %r656, 30;
	mov.b64 	%rd910, {%r661, %r660};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r662, %r656, %r657, 25;
	shf.l.wrap.b32 	%r663, %r657, %r656, 25;
	mov.b64 	%rd912, {%r663, %r662};
	xor.b64  	%rd913, %rd911, %rd912;
	and.b64  	%rd914, %rd896, %rd872;
	xor.b64  	%rd915, %rd896, %rd872;
	and.b64  	%rd916, %rd915, %rd848;
	or.b64  	%rd917, %rd916, %rd914;
	add.s64 	%rd918, %rd908, %rd917;
	add.s64 	%rd1612, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd1616;
	}
	shf.r.wrap.b32 	%r666, %r665, %r664, 14;
	shf.r.wrap.b32 	%r667, %r664, %r665, 14;
	mov.b64 	%rd919, {%r667, %r666};
	shf.r.wrap.b32 	%r668, %r665, %r664, 18;
	shf.r.wrap.b32 	%r669, %r664, %r665, 18;
	mov.b64 	%rd920, {%r669, %r668};
	xor.b64  	%rd921, %rd920, %rd919;
	shf.l.wrap.b32 	%r670, %r664, %r665, 23;
	shf.l.wrap.b32 	%r671, %r665, %r664, 23;
	mov.b64 	%rd922, {%r671, %r670};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd885, %rd861;
	and.b64  	%rd925, %rd1616, %rd924;
	xor.b64  	%rd926, %rd925, %rd861;
	add.s64 	%rd927, %rd837, %rd1603;
	add.s64 	%rd928, %rd927, %rd48;
	add.s64 	%rd929, %rd928, %rd926;
	add.s64 	%rd930, %rd929, %rd923;
	add.s64 	%rd1615, %rd930, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd1612;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 28;
	shf.r.wrap.b32 	%r675, %r672, %r673, 28;
	mov.b64 	%rd931, {%r675, %r674};
	shf.l.wrap.b32 	%r676, %r672, %r673, 30;
	shf.l.wrap.b32 	%r677, %r673, %r672, 30;
	mov.b64 	%rd932, {%r677, %r676};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r678, %r672, %r673, 25;
	shf.l.wrap.b32 	%r679, %r673, %r672, 25;
	mov.b64 	%rd934, {%r679, %r678};
	xor.b64  	%rd935, %rd933, %rd934;
	and.b64  	%rd936, %rd1612, %rd896;
	xor.b64  	%rd937, %rd1612, %rd896;
	and.b64  	%rd938, %rd937, %rd872;
	or.b64  	%rd939, %rd938, %rd936;
	add.s64 	%rd940, %rd930, %rd939;
	add.s64 	%rd1611, %rd940, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd1615;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 14;
	shf.r.wrap.b32 	%r683, %r680, %r681, 14;
	mov.b64 	%rd941, {%r683, %r682};
	shf.r.wrap.b32 	%r684, %r681, %r680, 18;
	shf.r.wrap.b32 	%r685, %r680, %r681, 18;
	mov.b64 	%rd942, {%r685, %r684};
	xor.b64  	%rd943, %rd942, %rd941;
	shf.l.wrap.b32 	%r686, %r680, %r681, 23;
	shf.l.wrap.b32 	%r687, %r681, %r680, 23;
	mov.b64 	%rd944, {%r687, %r686};
	xor.b64  	%rd945, %rd943, %rd944;
	xor.b64  	%rd946, %rd1616, %rd885;
	and.b64  	%rd947, %rd1615, %rd946;
	xor.b64  	%rd948, %rd947, %rd885;
	add.s64 	%rd949, %rd861, %rd1602;
	add.s64 	%rd950, %rd949, %rd49;
	add.s64 	%rd951, %rd950, %rd948;
	add.s64 	%rd952, %rd951, %rd945;
	add.s64 	%rd1614, %rd952, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd1611;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 28;
	shf.r.wrap.b32 	%r691, %r688, %r689, 28;
	mov.b64 	%rd953, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 30;
	shf.l.wrap.b32 	%r693, %r689, %r688, 30;
	mov.b64 	%rd954, {%r693, %r692};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r694, %r688, %r689, 25;
	shf.l.wrap.b32 	%r695, %r689, %r688, 25;
	mov.b64 	%rd956, {%r695, %r694};
	xor.b64  	%rd957, %rd955, %rd956;
	and.b64  	%rd958, %rd1611, %rd1612;
	xor.b64  	%rd959, %rd1611, %rd1612;
	and.b64  	%rd960, %rd959, %rd896;
	or.b64  	%rd961, %rd960, %rd958;
	add.s64 	%rd962, %rd952, %rd961;
	add.s64 	%rd1610, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd1614;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 14;
	shf.r.wrap.b32 	%r699, %r696, %r697, 14;
	mov.b64 	%rd963, {%r699, %r698};
	shf.r.wrap.b32 	%r700, %r697, %r696, 18;
	shf.r.wrap.b32 	%r701, %r696, %r697, 18;
	mov.b64 	%rd964, {%r701, %r700};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r702, %r696, %r697, 23;
	shf.l.wrap.b32 	%r703, %r697, %r696, 23;
	mov.b64 	%rd966, {%r703, %r702};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd1615, %rd1616;
	and.b64  	%rd969, %rd1614, %rd968;
	xor.b64  	%rd970, %rd969, %rd1616;
	add.s64 	%rd971, %rd885, %rd1601;
	add.s64 	%rd972, %rd971, %rd50;
	add.s64 	%rd973, %rd972, %rd970;
	add.s64 	%rd974, %rd973, %rd967;
	add.s64 	%rd1613, %rd974, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd1610;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 28;
	shf.r.wrap.b32 	%r707, %r704, %r705, 28;
	mov.b64 	%rd975, {%r707, %r706};
	shf.l.wrap.b32 	%r708, %r704, %r705, 30;
	shf.l.wrap.b32 	%r709, %r705, %r704, 30;
	mov.b64 	%rd976, {%r709, %r708};
	xor.b64  	%rd977, %rd976, %rd975;
	shf.l.wrap.b32 	%r710, %r704, %r705, 25;
	shf.l.wrap.b32 	%r711, %r705, %r704, 25;
	mov.b64 	%rd978, {%r711, %r710};
	xor.b64  	%rd979, %rd977, %rd978;
	and.b64  	%rd980, %rd1610, %rd1611;
	xor.b64  	%rd981, %rd1610, %rd1611;
	and.b64  	%rd982, %rd981, %rd1612;
	or.b64  	%rd983, %rd982, %rd980;
	add.s64 	%rd984, %rd974, %rd983;
	add.s64 	%rd1609, %rd984, %rd979;
	mov.u32 	%r1227, 16;

BB1_86:
	shr.u64 	%rd985, %rd1602, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1602;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 19;
	shf.r.wrap.b32 	%r715, %r712, %r713, 19;
	mov.b64 	%rd986, {%r715, %r714};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r716, %r712, %r713, 3;
	shf.l.wrap.b32 	%r717, %r713, %r712, 3;
	mov.b64 	%rd988, {%r717, %r716};
	xor.b64  	%rd989, %rd987, %rd988;
	shr.u64 	%rd990, %rd1583, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd1583;
	}
	shf.r.wrap.b32 	%r720, %r719, %r718, 1;
	shf.r.wrap.b32 	%r721, %r718, %r719, 1;
	mov.b64 	%rd991, {%r721, %r720};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.r.wrap.b32 	%r722, %r719, %r718, 8;
	shf.r.wrap.b32 	%r723, %r718, %r719, 8;
	mov.b64 	%rd993, {%r723, %r722};
	xor.b64  	%rd994, %rd992, %rd993;
	add.s64 	%rd995, %rd1607, %rd1584;
	add.s64 	%rd996, %rd995, %rd989;
	add.s64 	%rd1584, %rd996, %rd994;
	shr.u64 	%rd997, %rd1601, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1601;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 19;
	shf.r.wrap.b32 	%r727, %r724, %r725, 19;
	mov.b64 	%rd998, {%r727, %r726};
	xor.b64  	%rd999, %rd998, %rd997;
	shf.l.wrap.b32 	%r728, %r724, %r725, 3;
	shf.l.wrap.b32 	%r729, %r725, %r724, 3;
	mov.b64 	%rd1000, {%r729, %r728};
	xor.b64  	%rd1001, %rd999, %rd1000;
	shr.u64 	%rd1002, %rd1582, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd1582;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 1;
	shf.r.wrap.b32 	%r733, %r730, %r731, 1;
	mov.b64 	%rd1003, {%r733, %r732};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	shf.r.wrap.b32 	%r734, %r731, %r730, 8;
	shf.r.wrap.b32 	%r735, %r730, %r731, 8;
	mov.b64 	%rd1005, {%r735, %r734};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	add.s64 	%rd1007, %rd1606, %rd1583;
	add.s64 	%rd1008, %rd1007, %rd1001;
	add.s64 	%rd1583, %rd1008, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r736,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r737}, %rd1584;
	}
	shf.r.wrap.b32 	%r738, %r737, %r736, 19;
	shf.r.wrap.b32 	%r739, %r736, %r737, 19;
	mov.b64 	%rd1009, {%r739, %r738};
	shf.l.wrap.b32 	%r740, %r736, %r737, 3;
	shf.l.wrap.b32 	%r741, %r737, %r736, 3;
	mov.b64 	%rd1010, {%r741, %r740};
	shr.u64 	%rd1011, %rd1584, 6;
	xor.b64  	%rd1012, %rd1009, %rd1011;
	xor.b64  	%rd1013, %rd1012, %rd1010;
	shr.u64 	%rd1014, %rd1581, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd1581;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 1;
	shf.r.wrap.b32 	%r745, %r742, %r743, 1;
	mov.b64 	%rd1015, {%r745, %r744};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.r.wrap.b32 	%r746, %r743, %r742, 8;
	shf.r.wrap.b32 	%r747, %r742, %r743, 8;
	mov.b64 	%rd1017, {%r747, %r746};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	add.s64 	%rd1019, %rd1605, %rd1582;
	add.s64 	%rd1020, %rd1019, %rd1013;
	add.s64 	%rd1582, %rd1020, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd1583;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 19;
	shf.r.wrap.b32 	%r751, %r748, %r749, 19;
	mov.b64 	%rd1021, {%r751, %r750};
	shf.l.wrap.b32 	%r752, %r748, %r749, 3;
	shf.l.wrap.b32 	%r753, %r749, %r748, 3;
	mov.b64 	%rd1022, {%r753, %r752};
	shr.u64 	%rd1023, %rd1583, 6;
	xor.b64  	%rd1024, %rd1021, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd1022;
	shr.u64 	%rd1026, %rd1580, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd1580;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 1;
	shf.r.wrap.b32 	%r757, %r754, %r755, 1;
	mov.b64 	%rd1027, {%r757, %r756};
	xor.b64  	%rd1028, %rd1027, %rd1026;
	shf.r.wrap.b32 	%r758, %r755, %r754, 8;
	shf.r.wrap.b32 	%r759, %r754, %r755, 8;
	mov.b64 	%rd1029, {%r759, %r758};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	add.s64 	%rd1031, %rd1604, %rd1581;
	add.s64 	%rd1032, %rd1031, %rd1025;
	add.s64 	%rd1581, %rd1032, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r760,%dummy}, %rd1582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd1582;
	}
	shf.r.wrap.b32 	%r762, %r761, %r760, 19;
	shf.r.wrap.b32 	%r763, %r760, %r761, 19;
	mov.b64 	%rd1033, {%r763, %r762};
	shf.l.wrap.b32 	%r764, %r760, %r761, 3;
	shf.l.wrap.b32 	%r765, %r761, %r760, 3;
	mov.b64 	%rd1034, {%r765, %r764};
	shr.u64 	%rd1035, %rd1582, 6;
	xor.b64  	%rd1036, %rd1033, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd1034;
	shr.u64 	%rd1038, %rd1579, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd1579;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 1;
	shf.r.wrap.b32 	%r769, %r766, %r767, 1;
	mov.b64 	%rd1039, {%r769, %r768};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.r.wrap.b32 	%r770, %r767, %r766, 8;
	shf.r.wrap.b32 	%r771, %r766, %r767, 8;
	mov.b64 	%rd1041, {%r771, %r770};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	add.s64 	%rd1043, %rd1603, %rd1580;
	add.s64 	%rd1044, %rd1043, %rd1037;
	add.s64 	%rd1580, %rd1044, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1581;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 19;
	shf.r.wrap.b32 	%r775, %r772, %r773, 19;
	mov.b64 	%rd1045, {%r775, %r774};
	shf.l.wrap.b32 	%r776, %r772, %r773, 3;
	shf.l.wrap.b32 	%r777, %r773, %r772, 3;
	mov.b64 	%rd1046, {%r777, %r776};
	shr.u64 	%rd1047, %rd1581, 6;
	xor.b64  	%rd1048, %rd1045, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd1046;
	shr.u64 	%rd1050, %rd1578, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd1578;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 1;
	shf.r.wrap.b32 	%r781, %r778, %r779, 1;
	mov.b64 	%rd1051, {%r781, %r780};
	xor.b64  	%rd1052, %rd1051, %rd1050;
	shf.r.wrap.b32 	%r782, %r779, %r778, 8;
	shf.r.wrap.b32 	%r783, %r778, %r779, 8;
	mov.b64 	%rd1053, {%r783, %r782};
	xor.b64  	%rd1054, %rd1052, %rd1053;
	add.s64 	%rd1055, %rd1602, %rd1579;
	add.s64 	%rd1056, %rd1055, %rd1049;
	add.s64 	%rd1579, %rd1056, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r784,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r785}, %rd1580;
	}
	shf.r.wrap.b32 	%r786, %r785, %r784, 19;
	shf.r.wrap.b32 	%r787, %r784, %r785, 19;
	mov.b64 	%rd1057, {%r787, %r786};
	shf.l.wrap.b32 	%r788, %r784, %r785, 3;
	shf.l.wrap.b32 	%r789, %r785, %r784, 3;
	mov.b64 	%rd1058, {%r789, %r788};
	shr.u64 	%rd1059, %rd1580, 6;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	shr.u64 	%rd1062, %rd1577, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1577;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 1;
	shf.r.wrap.b32 	%r793, %r790, %r791, 1;
	mov.b64 	%rd1063, {%r793, %r792};
	xor.b64  	%rd1064, %rd1063, %rd1062;
	shf.r.wrap.b32 	%r794, %r791, %r790, 8;
	shf.r.wrap.b32 	%r795, %r790, %r791, 8;
	mov.b64 	%rd1065, {%r795, %r794};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	add.s64 	%rd1067, %rd1601, %rd1578;
	add.s64 	%rd1068, %rd1067, %rd1061;
	add.s64 	%rd1578, %rd1068, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1579;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 19;
	shf.r.wrap.b32 	%r799, %r796, %r797, 19;
	mov.b64 	%rd1069, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 3;
	shf.l.wrap.b32 	%r801, %r797, %r796, 3;
	mov.b64 	%rd1070, {%r801, %r800};
	shr.u64 	%rd1071, %rd1579, 6;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	shr.u64 	%rd1074, %rd1608, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd1608;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 1;
	shf.r.wrap.b32 	%r805, %r802, %r803, 1;
	mov.b64 	%rd1075, {%r805, %r804};
	xor.b64  	%rd1076, %rd1075, %rd1074;
	shf.r.wrap.b32 	%r806, %r803, %r802, 8;
	shf.r.wrap.b32 	%r807, %r802, %r803, 8;
	mov.b64 	%rd1077, {%r807, %r806};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	add.s64 	%rd1079, %rd1584, %rd1577;
	add.s64 	%rd1080, %rd1079, %rd1073;
	add.s64 	%rd1577, %rd1080, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r808,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r809}, %rd1578;
	}
	shf.r.wrap.b32 	%r810, %r809, %r808, 19;
	shf.r.wrap.b32 	%r811, %r808, %r809, 19;
	mov.b64 	%rd1081, {%r811, %r810};
	shf.l.wrap.b32 	%r812, %r808, %r809, 3;
	shf.l.wrap.b32 	%r813, %r809, %r808, 3;
	mov.b64 	%rd1082, {%r813, %r812};
	shr.u64 	%rd1083, %rd1578, 6;
	xor.b64  	%rd1084, %rd1081, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd1082;
	shr.u64 	%rd1086, %rd1607, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd1607;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 1;
	shf.r.wrap.b32 	%r817, %r814, %r815, 1;
	mov.b64 	%rd1087, {%r817, %r816};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.r.wrap.b32 	%r818, %r815, %r814, 8;
	shf.r.wrap.b32 	%r819, %r814, %r815, 8;
	mov.b64 	%rd1089, {%r819, %r818};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	add.s64 	%rd1091, %rd1583, %rd1608;
	add.s64 	%rd1092, %rd1091, %rd1085;
	add.s64 	%rd1608, %rd1092, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd1577;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 19;
	shf.r.wrap.b32 	%r823, %r820, %r821, 19;
	mov.b64 	%rd1093, {%r823, %r822};
	shf.l.wrap.b32 	%r824, %r820, %r821, 3;
	shf.l.wrap.b32 	%r825, %r821, %r820, 3;
	mov.b64 	%rd1094, {%r825, %r824};
	shr.u64 	%rd1095, %rd1577, 6;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	shr.u64 	%rd1098, %rd1606, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r827}, %rd1606;
	}
	shf.r.wrap.b32 	%r828, %r827, %r826, 1;
	shf.r.wrap.b32 	%r829, %r826, %r827, 1;
	mov.b64 	%rd1099, {%r829, %r828};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shf.r.wrap.b32 	%r830, %r827, %r826, 8;
	shf.r.wrap.b32 	%r831, %r826, %r827, 8;
	mov.b64 	%rd1101, {%r831, %r830};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	add.s64 	%rd1103, %rd1582, %rd1607;
	add.s64 	%rd1104, %rd1103, %rd1097;
	add.s64 	%rd1607, %rd1104, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1608;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd1105, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd1106, {%r837, %r836};
	shr.u64 	%rd1107, %rd1608, 6;
	xor.b64  	%rd1108, %rd1105, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1106;
	shr.u64 	%rd1110, %rd1605, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd1605;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 1;
	shf.r.wrap.b32 	%r841, %r838, %r839, 1;
	mov.b64 	%rd1111, {%r841, %r840};
	xor.b64  	%rd1112, %rd1111, %rd1110;
	shf.r.wrap.b32 	%r842, %r839, %r838, 8;
	shf.r.wrap.b32 	%r843, %r838, %r839, 8;
	mov.b64 	%rd1113, {%r843, %r842};
	xor.b64  	%rd1114, %rd1112, %rd1113;
	add.s64 	%rd1115, %rd1581, %rd1606;
	add.s64 	%rd1116, %rd1115, %rd1109;
	add.s64 	%rd1606, %rd1116, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd1607;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 19;
	shf.r.wrap.b32 	%r847, %r844, %r845, 19;
	mov.b64 	%rd1117, {%r847, %r846};
	shf.l.wrap.b32 	%r848, %r844, %r845, 3;
	shf.l.wrap.b32 	%r849, %r845, %r844, 3;
	mov.b64 	%rd1118, {%r849, %r848};
	shr.u64 	%rd1119, %rd1607, 6;
	xor.b64  	%rd1120, %rd1117, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1118;
	shr.u64 	%rd1122, %rd1604, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd1604;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 1;
	shf.r.wrap.b32 	%r853, %r850, %r851, 1;
	mov.b64 	%rd1123, {%r853, %r852};
	xor.b64  	%rd1124, %rd1123, %rd1122;
	shf.r.wrap.b32 	%r854, %r851, %r850, 8;
	shf.r.wrap.b32 	%r855, %r850, %r851, 8;
	mov.b64 	%rd1125, {%r855, %r854};
	xor.b64  	%rd1126, %rd1124, %rd1125;
	add.s64 	%rd1127, %rd1580, %rd1605;
	add.s64 	%rd1128, %rd1127, %rd1121;
	add.s64 	%rd1605, %rd1128, %rd1126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1606;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 19;
	shf.r.wrap.b32 	%r859, %r856, %r857, 19;
	mov.b64 	%rd1129, {%r859, %r858};
	shf.l.wrap.b32 	%r860, %r856, %r857, 3;
	shf.l.wrap.b32 	%r861, %r857, %r856, 3;
	mov.b64 	%rd1130, {%r861, %r860};
	shr.u64 	%rd1131, %rd1606, 6;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	shr.u64 	%rd1134, %rd1603, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd1603;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 1;
	shf.r.wrap.b32 	%r865, %r862, %r863, 1;
	mov.b64 	%rd1135, {%r865, %r864};
	xor.b64  	%rd1136, %rd1135, %rd1134;
	shf.r.wrap.b32 	%r866, %r863, %r862, 8;
	shf.r.wrap.b32 	%r867, %r862, %r863, 8;
	mov.b64 	%rd1137, {%r867, %r866};
	xor.b64  	%rd1138, %rd1136, %rd1137;
	add.s64 	%rd1139, %rd1579, %rd1604;
	add.s64 	%rd1140, %rd1139, %rd1133;
	add.s64 	%rd1604, %rd1140, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1605;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 19;
	shf.r.wrap.b32 	%r871, %r868, %r869, 19;
	mov.b64 	%rd1141, {%r871, %r870};
	shf.l.wrap.b32 	%r872, %r868, %r869, 3;
	shf.l.wrap.b32 	%r873, %r869, %r868, 3;
	mov.b64 	%rd1142, {%r873, %r872};
	shr.u64 	%rd1143, %rd1605, 6;
	xor.b64  	%rd1144, %rd1141, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1142;
	shr.u64 	%rd1146, %rd1602, 7;
	shf.r.wrap.b32 	%r874, %r713, %r712, 1;
	shf.r.wrap.b32 	%r875, %r712, %r713, 1;
	mov.b64 	%rd1147, {%r875, %r874};
	xor.b64  	%rd1148, %rd1147, %rd1146;
	shf.r.wrap.b32 	%r876, %r713, %r712, 8;
	shf.r.wrap.b32 	%r877, %r712, %r713, 8;
	mov.b64 	%rd1149, {%r877, %r876};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	add.s64 	%rd1151, %rd1578, %rd1603;
	add.s64 	%rd1152, %rd1151, %rd1145;
	add.s64 	%rd1603, %rd1152, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd1604;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 19;
	shf.r.wrap.b32 	%r881, %r878, %r879, 19;
	mov.b64 	%rd1153, {%r881, %r880};
	shf.l.wrap.b32 	%r882, %r878, %r879, 3;
	shf.l.wrap.b32 	%r883, %r879, %r878, 3;
	mov.b64 	%rd1154, {%r883, %r882};
	shr.u64 	%rd1155, %rd1604, 6;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	shr.u64 	%rd1158, %rd1601, 7;
	shf.r.wrap.b32 	%r884, %r725, %r724, 1;
	shf.r.wrap.b32 	%r885, %r724, %r725, 1;
	mov.b64 	%rd1159, {%r885, %r884};
	xor.b64  	%rd1160, %rd1159, %rd1158;
	shf.r.wrap.b32 	%r886, %r725, %r724, 8;
	shf.r.wrap.b32 	%r887, %r724, %r725, 8;
	mov.b64 	%rd1161, {%r887, %r886};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	add.s64 	%rd1163, %rd1577, %rd1602;
	add.s64 	%rd1164, %rd1163, %rd1157;
	add.s64 	%rd1602, %rd1164, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd1603;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 19;
	shf.r.wrap.b32 	%r891, %r888, %r889, 19;
	mov.b64 	%rd1165, {%r891, %r890};
	shf.l.wrap.b32 	%r892, %r888, %r889, 3;
	shf.l.wrap.b32 	%r893, %r889, %r888, 3;
	mov.b64 	%rd1166, {%r893, %r892};
	shr.u64 	%rd1167, %rd1603, 6;
	xor.b64  	%rd1168, %rd1165, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1166;
	shf.r.wrap.b32 	%r894, %r737, %r736, 1;
	shf.r.wrap.b32 	%r895, %r736, %r737, 1;
	mov.b64 	%rd1170, {%r895, %r894};
	shf.r.wrap.b32 	%r896, %r737, %r736, 8;
	shf.r.wrap.b32 	%r897, %r736, %r737, 8;
	mov.b64 	%rd1171, {%r897, %r896};
	shr.u64 	%rd1172, %rd1584, 7;
	xor.b64  	%rd1173, %rd1170, %rd1172;
	xor.b64  	%rd1174, %rd1173, %rd1171;
	add.s64 	%rd1175, %rd1608, %rd1601;
	add.s64 	%rd1176, %rd1175, %rd1169;
	add.s64 	%rd1601, %rd1176, %rd1174;
	mul.wide.s32 	%rd1177, %r1227, 8;
	mov.u64 	%rd1178, k_sha512;
	add.s64 	%rd1179, %rd1178, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd1613;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 18;
	shf.r.wrap.b32 	%r901, %r898, %r899, 18;
	mov.b64 	%rd1180, {%r901, %r900};
	shf.r.wrap.b32 	%r902, %r899, %r898, 14;
	shf.r.wrap.b32 	%r903, %r898, %r899, 14;
	mov.b64 	%rd1181, {%r903, %r902};
	xor.b64  	%rd1182, %rd1180, %rd1181;
	shf.l.wrap.b32 	%r904, %r898, %r899, 23;
	shf.l.wrap.b32 	%r905, %r899, %r898, 23;
	mov.b64 	%rd1183, {%r905, %r904};
	xor.b64  	%rd1184, %rd1182, %rd1183;
	xor.b64  	%rd1185, %rd1614, %rd1615;
	and.b64  	%rd1186, %rd1613, %rd1185;
	xor.b64  	%rd1187, %rd1186, %rd1615;
	add.s64 	%rd1188, %rd1187, %rd1616;
	add.s64 	%rd1189, %rd1188, %rd1584;
	ld.const.u64 	%rd1190, [%rd1179];
	add.s64 	%rd1191, %rd1189, %rd1190;
	add.s64 	%rd1192, %rd1191, %rd1184;
	add.s64 	%rd1193, %rd1192, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd1609;
	}
	shf.l.wrap.b32 	%r908, %r907, %r906, 30;
	shf.l.wrap.b32 	%r909, %r906, %r907, 30;
	mov.b64 	%rd1194, {%r909, %r908};
	shf.r.wrap.b32 	%r910, %r906, %r907, 28;
	shf.r.wrap.b32 	%r911, %r907, %r906, 28;
	mov.b64 	%rd1195, {%r911, %r910};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	shf.l.wrap.b32 	%r912, %r907, %r906, 25;
	shf.l.wrap.b32 	%r913, %r906, %r907, 25;
	mov.b64 	%rd1197, {%r913, %r912};
	xor.b64  	%rd1198, %rd1196, %rd1197;
	xor.b64  	%rd1199, %rd1609, %rd1610;
	and.b64  	%rd1200, %rd1199, %rd1611;
	and.b64  	%rd1201, %rd1609, %rd1610;
	or.b64  	%rd1202, %rd1200, %rd1201;
	add.s64 	%rd1203, %rd1192, %rd1202;
	add.s64 	%rd1204, %rd1203, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r914,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r915}, %rd1193;
	}
	shf.r.wrap.b32 	%r916, %r915, %r914, 14;
	shf.r.wrap.b32 	%r917, %r914, %r915, 14;
	mov.b64 	%rd1205, {%r917, %r916};
	shf.r.wrap.b32 	%r918, %r915, %r914, 18;
	shf.r.wrap.b32 	%r919, %r914, %r915, 18;
	mov.b64 	%rd1206, {%r919, %r918};
	xor.b64  	%rd1207, %rd1206, %rd1205;
	shf.l.wrap.b32 	%r920, %r914, %r915, 23;
	shf.l.wrap.b32 	%r921, %r915, %r914, 23;
	mov.b64 	%rd1208, {%r921, %r920};
	xor.b64  	%rd1209, %rd1207, %rd1208;
	xor.b64  	%rd1210, %rd1613, %rd1614;
	and.b64  	%rd1211, %rd1193, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1614;
	add.s64 	%rd1213, %rd1583, %rd1615;
	ld.const.u64 	%rd1214, [%rd1179+8];
	add.s64 	%rd1215, %rd1213, %rd1214;
	add.s64 	%rd1216, %rd1215, %rd1212;
	add.s64 	%rd1217, %rd1216, %rd1209;
	add.s64 	%rd1218, %rd1217, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r923}, %rd1204;
	}
	shf.r.wrap.b32 	%r924, %r923, %r922, 28;
	shf.r.wrap.b32 	%r925, %r922, %r923, 28;
	mov.b64 	%rd1219, {%r925, %r924};
	shf.l.wrap.b32 	%r926, %r922, %r923, 30;
	shf.l.wrap.b32 	%r927, %r923, %r922, 30;
	mov.b64 	%rd1220, {%r927, %r926};
	xor.b64  	%rd1221, %rd1220, %rd1219;
	shf.l.wrap.b32 	%r928, %r922, %r923, 25;
	shf.l.wrap.b32 	%r929, %r923, %r922, 25;
	mov.b64 	%rd1222, {%r929, %r928};
	xor.b64  	%rd1223, %rd1221, %rd1222;
	and.b64  	%rd1224, %rd1204, %rd1609;
	xor.b64  	%rd1225, %rd1204, %rd1609;
	and.b64  	%rd1226, %rd1225, %rd1610;
	or.b64  	%rd1227, %rd1226, %rd1224;
	add.s64 	%rd1228, %rd1217, %rd1227;
	add.s64 	%rd1229, %rd1228, %rd1223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd1218;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 14;
	shf.r.wrap.b32 	%r933, %r930, %r931, 14;
	mov.b64 	%rd1230, {%r933, %r932};
	shf.r.wrap.b32 	%r934, %r931, %r930, 18;
	shf.r.wrap.b32 	%r935, %r930, %r931, 18;
	mov.b64 	%rd1231, {%r935, %r934};
	xor.b64  	%rd1232, %rd1231, %rd1230;
	shf.l.wrap.b32 	%r936, %r930, %r931, 23;
	shf.l.wrap.b32 	%r937, %r931, %r930, 23;
	mov.b64 	%rd1233, {%r937, %r936};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	xor.b64  	%rd1235, %rd1193, %rd1613;
	and.b64  	%rd1236, %rd1218, %rd1235;
	xor.b64  	%rd1237, %rd1236, %rd1613;
	add.s64 	%rd1238, %rd1582, %rd1614;
	ld.const.u64 	%rd1239, [%rd1179+16];
	add.s64 	%rd1240, %rd1238, %rd1239;
	add.s64 	%rd1241, %rd1240, %rd1237;
	add.s64 	%rd1242, %rd1241, %rd1234;
	add.s64 	%rd1243, %rd1242, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r938,%dummy}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r939}, %rd1229;
	}
	shf.r.wrap.b32 	%r940, %r939, %r938, 28;
	shf.r.wrap.b32 	%r941, %r938, %r939, 28;
	mov.b64 	%rd1244, {%r941, %r940};
	shf.l.wrap.b32 	%r942, %r938, %r939, 30;
	shf.l.wrap.b32 	%r943, %r939, %r938, 30;
	mov.b64 	%rd1245, {%r943, %r942};
	xor.b64  	%rd1246, %rd1245, %rd1244;
	shf.l.wrap.b32 	%r944, %r938, %r939, 25;
	shf.l.wrap.b32 	%r945, %r939, %r938, 25;
	mov.b64 	%rd1247, {%r945, %r944};
	xor.b64  	%rd1248, %rd1246, %rd1247;
	and.b64  	%rd1249, %rd1229, %rd1204;
	xor.b64  	%rd1250, %rd1229, %rd1204;
	and.b64  	%rd1251, %rd1250, %rd1609;
	or.b64  	%rd1252, %rd1251, %rd1249;
	add.s64 	%rd1253, %rd1242, %rd1252;
	add.s64 	%rd1254, %rd1253, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd1243;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 14;
	shf.r.wrap.b32 	%r949, %r946, %r947, 14;
	mov.b64 	%rd1255, {%r949, %r948};
	shf.r.wrap.b32 	%r950, %r947, %r946, 18;
	shf.r.wrap.b32 	%r951, %r946, %r947, 18;
	mov.b64 	%rd1256, {%r951, %r950};
	xor.b64  	%rd1257, %rd1256, %rd1255;
	shf.l.wrap.b32 	%r952, %r946, %r947, 23;
	shf.l.wrap.b32 	%r953, %r947, %r946, 23;
	mov.b64 	%rd1258, {%r953, %r952};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	xor.b64  	%rd1260, %rd1218, %rd1193;
	and.b64  	%rd1261, %rd1243, %rd1260;
	xor.b64  	%rd1262, %rd1261, %rd1193;
	add.s64 	%rd1263, %rd1581, %rd1613;
	ld.const.u64 	%rd1264, [%rd1179+24];
	add.s64 	%rd1265, %rd1263, %rd1264;
	add.s64 	%rd1266, %rd1265, %rd1262;
	add.s64 	%rd1267, %rd1266, %rd1259;
	add.s64 	%rd1268, %rd1267, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd1254;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 28;
	shf.r.wrap.b32 	%r957, %r954, %r955, 28;
	mov.b64 	%rd1269, {%r957, %r956};
	shf.l.wrap.b32 	%r958, %r954, %r955, 30;
	shf.l.wrap.b32 	%r959, %r955, %r954, 30;
	mov.b64 	%rd1270, {%r959, %r958};
	xor.b64  	%rd1271, %rd1270, %rd1269;
	shf.l.wrap.b32 	%r960, %r954, %r955, 25;
	shf.l.wrap.b32 	%r961, %r955, %r954, 25;
	mov.b64 	%rd1272, {%r961, %r960};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	and.b64  	%rd1274, %rd1254, %rd1229;
	xor.b64  	%rd1275, %rd1254, %rd1229;
	and.b64  	%rd1276, %rd1275, %rd1204;
	or.b64  	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1267, %rd1277;
	add.s64 	%rd1279, %rd1278, %rd1273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd1268;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 14;
	shf.r.wrap.b32 	%r965, %r962, %r963, 14;
	mov.b64 	%rd1280, {%r965, %r964};
	shf.r.wrap.b32 	%r966, %r963, %r962, 18;
	shf.r.wrap.b32 	%r967, %r962, %r963, 18;
	mov.b64 	%rd1281, {%r967, %r966};
	xor.b64  	%rd1282, %rd1281, %rd1280;
	shf.l.wrap.b32 	%r968, %r962, %r963, 23;
	shf.l.wrap.b32 	%r969, %r963, %r962, 23;
	mov.b64 	%rd1283, {%r969, %r968};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	xor.b64  	%rd1285, %rd1243, %rd1218;
	and.b64  	%rd1286, %rd1268, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1218;
	add.s64 	%rd1288, %rd1193, %rd1580;
	ld.const.u64 	%rd1289, [%rd1179+32];
	add.s64 	%rd1290, %rd1288, %rd1289;
	add.s64 	%rd1291, %rd1290, %rd1287;
	add.s64 	%rd1292, %rd1291, %rd1284;
	add.s64 	%rd1293, %rd1292, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd1279;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 28;
	shf.r.wrap.b32 	%r973, %r970, %r971, 28;
	mov.b64 	%rd1294, {%r973, %r972};
	shf.l.wrap.b32 	%r974, %r970, %r971, 30;
	shf.l.wrap.b32 	%r975, %r971, %r970, 30;
	mov.b64 	%rd1295, {%r975, %r974};
	xor.b64  	%rd1296, %rd1295, %rd1294;
	shf.l.wrap.b32 	%r976, %r970, %r971, 25;
	shf.l.wrap.b32 	%r977, %r971, %r970, 25;
	mov.b64 	%rd1297, {%r977, %r976};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	and.b64  	%rd1299, %rd1279, %rd1254;
	xor.b64  	%rd1300, %rd1279, %rd1254;
	and.b64  	%rd1301, %rd1300, %rd1229;
	or.b64  	%rd1302, %rd1301, %rd1299;
	add.s64 	%rd1303, %rd1292, %rd1302;
	add.s64 	%rd1304, %rd1303, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd1293;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 14;
	shf.r.wrap.b32 	%r981, %r978, %r979, 14;
	mov.b64 	%rd1305, {%r981, %r980};
	shf.r.wrap.b32 	%r982, %r979, %r978, 18;
	shf.r.wrap.b32 	%r983, %r978, %r979, 18;
	mov.b64 	%rd1306, {%r983, %r982};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	shf.l.wrap.b32 	%r984, %r978, %r979, 23;
	shf.l.wrap.b32 	%r985, %r979, %r978, 23;
	mov.b64 	%rd1308, {%r985, %r984};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	xor.b64  	%rd1310, %rd1268, %rd1243;
	and.b64  	%rd1311, %rd1293, %rd1310;
	xor.b64  	%rd1312, %rd1311, %rd1243;
	add.s64 	%rd1313, %rd1218, %rd1579;
	ld.const.u64 	%rd1314, [%rd1179+40];
	add.s64 	%rd1315, %rd1313, %rd1314;
	add.s64 	%rd1316, %rd1315, %rd1312;
	add.s64 	%rd1317, %rd1316, %rd1309;
	add.s64 	%rd1318, %rd1317, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r986,%dummy}, %rd1304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r987}, %rd1304;
	}
	shf.r.wrap.b32 	%r988, %r987, %r986, 28;
	shf.r.wrap.b32 	%r989, %r986, %r987, 28;
	mov.b64 	%rd1319, {%r989, %r988};
	shf.l.wrap.b32 	%r990, %r986, %r987, 30;
	shf.l.wrap.b32 	%r991, %r987, %r986, 30;
	mov.b64 	%rd1320, {%r991, %r990};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	shf.l.wrap.b32 	%r992, %r986, %r987, 25;
	shf.l.wrap.b32 	%r993, %r987, %r986, 25;
	mov.b64 	%rd1322, {%r993, %r992};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	and.b64  	%rd1324, %rd1304, %rd1279;
	xor.b64  	%rd1325, %rd1304, %rd1279;
	and.b64  	%rd1326, %rd1325, %rd1254;
	or.b64  	%rd1327, %rd1326, %rd1324;
	add.s64 	%rd1328, %rd1317, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd1318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd1318;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 14;
	shf.r.wrap.b32 	%r997, %r994, %r995, 14;
	mov.b64 	%rd1330, {%r997, %r996};
	shf.r.wrap.b32 	%r998, %r995, %r994, 18;
	shf.r.wrap.b32 	%r999, %r994, %r995, 18;
	mov.b64 	%rd1331, {%r999, %r998};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r1000, %r994, %r995, 23;
	shf.l.wrap.b32 	%r1001, %r995, %r994, 23;
	mov.b64 	%rd1333, {%r1001, %r1000};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1293, %rd1268;
	and.b64  	%rd1336, %rd1318, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1268;
	add.s64 	%rd1338, %rd1243, %rd1578;
	ld.const.u64 	%rd1339, [%rd1179+48];
	add.s64 	%rd1340, %rd1338, %rd1339;
	add.s64 	%rd1341, %rd1340, %rd1337;
	add.s64 	%rd1342, %rd1341, %rd1334;
	add.s64 	%rd1343, %rd1342, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd1329;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 28;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 28;
	mov.b64 	%rd1344, {%r1005, %r1004};
	shf.l.wrap.b32 	%r1006, %r1002, %r1003, 30;
	shf.l.wrap.b32 	%r1007, %r1003, %r1002, 30;
	mov.b64 	%rd1345, {%r1007, %r1006};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r1008, %r1002, %r1003, 25;
	shf.l.wrap.b32 	%r1009, %r1003, %r1002, 25;
	mov.b64 	%rd1347, {%r1009, %r1008};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	and.b64  	%rd1349, %rd1329, %rd1304;
	xor.b64  	%rd1350, %rd1329, %rd1304;
	and.b64  	%rd1351, %rd1350, %rd1279;
	or.b64  	%rd1352, %rd1351, %rd1349;
	add.s64 	%rd1353, %rd1342, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd1343;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 14;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 14;
	mov.b64 	%rd1355, {%r1013, %r1012};
	shf.r.wrap.b32 	%r1014, %r1011, %r1010, 18;
	shf.r.wrap.b32 	%r1015, %r1010, %r1011, 18;
	mov.b64 	%rd1356, {%r1015, %r1014};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.l.wrap.b32 	%r1016, %r1010, %r1011, 23;
	shf.l.wrap.b32 	%r1017, %r1011, %r1010, 23;
	mov.b64 	%rd1358, {%r1017, %r1016};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1318, %rd1293;
	and.b64  	%rd1361, %rd1343, %rd1360;
	xor.b64  	%rd1362, %rd1361, %rd1293;
	add.s64 	%rd1363, %rd1268, %rd1577;
	ld.const.u64 	%rd1364, [%rd1179+56];
	add.s64 	%rd1365, %rd1363, %rd1364;
	add.s64 	%rd1366, %rd1365, %rd1362;
	add.s64 	%rd1367, %rd1366, %rd1359;
	add.s64 	%rd1368, %rd1367, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd1354;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 28;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 28;
	mov.b64 	%rd1369, {%r1021, %r1020};
	shf.l.wrap.b32 	%r1022, %r1018, %r1019, 30;
	shf.l.wrap.b32 	%r1023, %r1019, %r1018, 30;
	mov.b64 	%rd1370, {%r1023, %r1022};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	shf.l.wrap.b32 	%r1024, %r1018, %r1019, 25;
	shf.l.wrap.b32 	%r1025, %r1019, %r1018, 25;
	mov.b64 	%rd1372, {%r1025, %r1024};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	and.b64  	%rd1374, %rd1354, %rd1329;
	xor.b64  	%rd1375, %rd1354, %rd1329;
	and.b64  	%rd1376, %rd1375, %rd1304;
	or.b64  	%rd1377, %rd1376, %rd1374;
	add.s64 	%rd1378, %rd1367, %rd1377;
	add.s64 	%rd1379, %rd1378, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1026,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1027}, %rd1368;
	}
	shf.r.wrap.b32 	%r1028, %r1027, %r1026, 14;
	shf.r.wrap.b32 	%r1029, %r1026, %r1027, 14;
	mov.b64 	%rd1380, {%r1029, %r1028};
	shf.r.wrap.b32 	%r1030, %r1027, %r1026, 18;
	shf.r.wrap.b32 	%r1031, %r1026, %r1027, 18;
	mov.b64 	%rd1381, {%r1031, %r1030};
	xor.b64  	%rd1382, %rd1381, %rd1380;
	shf.l.wrap.b32 	%r1032, %r1026, %r1027, 23;
	shf.l.wrap.b32 	%r1033, %r1027, %r1026, 23;
	mov.b64 	%rd1383, {%r1033, %r1032};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	xor.b64  	%rd1385, %rd1343, %rd1318;
	and.b64  	%rd1386, %rd1368, %rd1385;
	xor.b64  	%rd1387, %rd1386, %rd1318;
	add.s64 	%rd1388, %rd1293, %rd1608;
	ld.const.u64 	%rd1389, [%rd1179+64];
	add.s64 	%rd1390, %rd1388, %rd1389;
	add.s64 	%rd1391, %rd1390, %rd1387;
	add.s64 	%rd1392, %rd1391, %rd1384;
	add.s64 	%rd1393, %rd1392, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd1379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1035}, %rd1379;
	}
	shf.r.wrap.b32 	%r1036, %r1035, %r1034, 28;
	shf.r.wrap.b32 	%r1037, %r1034, %r1035, 28;
	mov.b64 	%rd1394, {%r1037, %r1036};
	shf.l.wrap.b32 	%r1038, %r1034, %r1035, 30;
	shf.l.wrap.b32 	%r1039, %r1035, %r1034, 30;
	mov.b64 	%rd1395, {%r1039, %r1038};
	xor.b64  	%rd1396, %rd1395, %rd1394;
	shf.l.wrap.b32 	%r1040, %r1034, %r1035, 25;
	shf.l.wrap.b32 	%r1041, %r1035, %r1034, 25;
	mov.b64 	%rd1397, {%r1041, %r1040};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	and.b64  	%rd1399, %rd1379, %rd1354;
	xor.b64  	%rd1400, %rd1379, %rd1354;
	and.b64  	%rd1401, %rd1400, %rd1329;
	or.b64  	%rd1402, %rd1401, %rd1399;
	add.s64 	%rd1403, %rd1392, %rd1402;
	add.s64 	%rd1404, %rd1403, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1043}, %rd1393;
	}
	shf.r.wrap.b32 	%r1044, %r1043, %r1042, 14;
	shf.r.wrap.b32 	%r1045, %r1042, %r1043, 14;
	mov.b64 	%rd1405, {%r1045, %r1044};
	shf.r.wrap.b32 	%r1046, %r1043, %r1042, 18;
	shf.r.wrap.b32 	%r1047, %r1042, %r1043, 18;
	mov.b64 	%rd1406, {%r1047, %r1046};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	shf.l.wrap.b32 	%r1048, %r1042, %r1043, 23;
	shf.l.wrap.b32 	%r1049, %r1043, %r1042, 23;
	mov.b64 	%rd1408, {%r1049, %r1048};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1368, %rd1343;
	and.b64  	%rd1411, %rd1393, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1343;
	add.s64 	%rd1413, %rd1318, %rd1607;
	ld.const.u64 	%rd1414, [%rd1179+72];
	add.s64 	%rd1415, %rd1413, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1412;
	add.s64 	%rd1417, %rd1416, %rd1409;
	add.s64 	%rd1418, %rd1417, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd1404;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 28;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 28;
	mov.b64 	%rd1419, {%r1053, %r1052};
	shf.l.wrap.b32 	%r1054, %r1050, %r1051, 30;
	shf.l.wrap.b32 	%r1055, %r1051, %r1050, 30;
	mov.b64 	%rd1420, {%r1055, %r1054};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r1056, %r1050, %r1051, 25;
	shf.l.wrap.b32 	%r1057, %r1051, %r1050, 25;
	mov.b64 	%rd1422, {%r1057, %r1056};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	and.b64  	%rd1424, %rd1404, %rd1379;
	xor.b64  	%rd1425, %rd1404, %rd1379;
	and.b64  	%rd1426, %rd1425, %rd1354;
	or.b64  	%rd1427, %rd1426, %rd1424;
	add.s64 	%rd1428, %rd1417, %rd1427;
	add.s64 	%rd1429, %rd1428, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd1418;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 14;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 14;
	mov.b64 	%rd1430, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r1059, %r1058, 18;
	shf.r.wrap.b32 	%r1063, %r1058, %r1059, 18;
	mov.b64 	%rd1431, {%r1063, %r1062};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 23;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 23;
	mov.b64 	%rd1433, {%r1065, %r1064};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	xor.b64  	%rd1435, %rd1393, %rd1368;
	and.b64  	%rd1436, %rd1418, %rd1435;
	xor.b64  	%rd1437, %rd1436, %rd1368;
	add.s64 	%rd1438, %rd1343, %rd1606;
	ld.const.u64 	%rd1439, [%rd1179+80];
	add.s64 	%rd1440, %rd1438, %rd1439;
	add.s64 	%rd1441, %rd1440, %rd1437;
	add.s64 	%rd1442, %rd1441, %rd1434;
	add.s64 	%rd1443, %rd1442, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd1429;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 28;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 28;
	mov.b64 	%rd1444, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 30;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 30;
	mov.b64 	%rd1445, {%r1071, %r1070};
	xor.b64  	%rd1446, %rd1445, %rd1444;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 25;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 25;
	mov.b64 	%rd1447, {%r1073, %r1072};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	and.b64  	%rd1449, %rd1429, %rd1404;
	xor.b64  	%rd1450, %rd1429, %rd1404;
	and.b64  	%rd1451, %rd1450, %rd1379;
	or.b64  	%rd1452, %rd1451, %rd1449;
	add.s64 	%rd1453, %rd1442, %rd1452;
	add.s64 	%rd1454, %rd1453, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd1443;
	}
	shf.r.wrap.b32 	%r1076, %r1075, %r1074, 14;
	shf.r.wrap.b32 	%r1077, %r1074, %r1075, 14;
	mov.b64 	%rd1455, {%r1077, %r1076};
	shf.r.wrap.b32 	%r1078, %r1075, %r1074, 18;
	shf.r.wrap.b32 	%r1079, %r1074, %r1075, 18;
	mov.b64 	%rd1456, {%r1079, %r1078};
	xor.b64  	%rd1457, %rd1456, %rd1455;
	shf.l.wrap.b32 	%r1080, %r1074, %r1075, 23;
	shf.l.wrap.b32 	%r1081, %r1075, %r1074, 23;
	mov.b64 	%rd1458, {%r1081, %r1080};
	xor.b64  	%rd1459, %rd1457, %rd1458;
	xor.b64  	%rd1460, %rd1418, %rd1393;
	and.b64  	%rd1461, %rd1443, %rd1460;
	xor.b64  	%rd1462, %rd1461, %rd1393;
	add.s64 	%rd1463, %rd1368, %rd1605;
	ld.const.u64 	%rd1464, [%rd1179+88];
	add.s64 	%rd1465, %rd1463, %rd1464;
	add.s64 	%rd1466, %rd1465, %rd1462;
	add.s64 	%rd1467, %rd1466, %rd1459;
	add.s64 	%rd1468, %rd1467, %rd1379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd1454;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 28;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 28;
	mov.b64 	%rd1469, {%r1085, %r1084};
	shf.l.wrap.b32 	%r1086, %r1082, %r1083, 30;
	shf.l.wrap.b32 	%r1087, %r1083, %r1082, 30;
	mov.b64 	%rd1470, {%r1087, %r1086};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 25;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 25;
	mov.b64 	%rd1472, {%r1089, %r1088};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	and.b64  	%rd1474, %rd1454, %rd1429;
	xor.b64  	%rd1475, %rd1454, %rd1429;
	and.b64  	%rd1476, %rd1475, %rd1404;
	or.b64  	%rd1477, %rd1476, %rd1474;
	add.s64 	%rd1478, %rd1467, %rd1477;
	add.s64 	%rd1479, %rd1478, %rd1473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd1468;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 14;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 14;
	mov.b64 	%rd1480, {%r1093, %r1092};
	shf.r.wrap.b32 	%r1094, %r1091, %r1090, 18;
	shf.r.wrap.b32 	%r1095, %r1090, %r1091, 18;
	mov.b64 	%rd1481, {%r1095, %r1094};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 23;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 23;
	mov.b64 	%rd1483, {%r1097, %r1096};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	xor.b64  	%rd1485, %rd1443, %rd1418;
	and.b64  	%rd1486, %rd1468, %rd1485;
	xor.b64  	%rd1487, %rd1486, %rd1418;
	add.s64 	%rd1488, %rd1393, %rd1604;
	ld.const.u64 	%rd1489, [%rd1179+96];
	add.s64 	%rd1490, %rd1488, %rd1489;
	add.s64 	%rd1491, %rd1490, %rd1487;
	add.s64 	%rd1492, %rd1491, %rd1484;
	add.s64 	%rd1616, %rd1492, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1479;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 28;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 28;
	mov.b64 	%rd1493, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 30;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 30;
	mov.b64 	%rd1494, {%r1103, %r1102};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r1104, %r1098, %r1099, 25;
	shf.l.wrap.b32 	%r1105, %r1099, %r1098, 25;
	mov.b64 	%rd1496, {%r1105, %r1104};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	and.b64  	%rd1498, %rd1479, %rd1454;
	xor.b64  	%rd1499, %rd1479, %rd1454;
	and.b64  	%rd1500, %rd1499, %rd1429;
	or.b64  	%rd1501, %rd1500, %rd1498;
	add.s64 	%rd1502, %rd1492, %rd1501;
	add.s64 	%rd1612, %rd1502, %rd1497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1616;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 14;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 14;
	mov.b64 	%rd1503, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 18;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 18;
	mov.b64 	%rd1504, {%r1111, %r1110};
	xor.b64  	%rd1505, %rd1504, %rd1503;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 23;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 23;
	mov.b64 	%rd1506, {%r1113, %r1112};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	xor.b64  	%rd1508, %rd1468, %rd1443;
	and.b64  	%rd1509, %rd1616, %rd1508;
	xor.b64  	%rd1510, %rd1509, %rd1443;
	add.s64 	%rd1511, %rd1418, %rd1603;
	ld.const.u64 	%rd1512, [%rd1179+104];
	add.s64 	%rd1513, %rd1511, %rd1512;
	add.s64 	%rd1514, %rd1513, %rd1510;
	add.s64 	%rd1515, %rd1514, %rd1507;
	add.s64 	%rd1615, %rd1515, %rd1429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd1612;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 28;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 28;
	mov.b64 	%rd1516, {%r1117, %r1116};
	shf.l.wrap.b32 	%r1118, %r1114, %r1115, 30;
	shf.l.wrap.b32 	%r1119, %r1115, %r1114, 30;
	mov.b64 	%rd1517, {%r1119, %r1118};
	xor.b64  	%rd1518, %rd1517, %rd1516;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 25;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 25;
	mov.b64 	%rd1519, {%r1121, %r1120};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	and.b64  	%rd1521, %rd1612, %rd1479;
	xor.b64  	%rd1522, %rd1612, %rd1479;
	and.b64  	%rd1523, %rd1522, %rd1454;
	or.b64  	%rd1524, %rd1523, %rd1521;
	add.s64 	%rd1525, %rd1515, %rd1524;
	add.s64 	%rd1611, %rd1525, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd1615;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 14;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 14;
	mov.b64 	%rd1526, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r1123, %r1122, 18;
	shf.r.wrap.b32 	%r1127, %r1122, %r1123, 18;
	mov.b64 	%rd1527, {%r1127, %r1126};
	xor.b64  	%rd1528, %rd1527, %rd1526;
	shf.l.wrap.b32 	%r1128, %r1122, %r1123, 23;
	shf.l.wrap.b32 	%r1129, %r1123, %r1122, 23;
	mov.b64 	%rd1529, {%r1129, %r1128};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	xor.b64  	%rd1531, %rd1616, %rd1468;
	and.b64  	%rd1532, %rd1615, %rd1531;
	xor.b64  	%rd1533, %rd1532, %rd1468;
	add.s64 	%rd1534, %rd1443, %rd1602;
	ld.const.u64 	%rd1535, [%rd1179+112];
	add.s64 	%rd1536, %rd1534, %rd1535;
	add.s64 	%rd1537, %rd1536, %rd1533;
	add.s64 	%rd1538, %rd1537, %rd1530;
	add.s64 	%rd1614, %rd1538, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd1611;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 28;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 28;
	mov.b64 	%rd1539, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 30;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 30;
	mov.b64 	%rd1540, {%r1135, %r1134};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	shf.l.wrap.b32 	%r1136, %r1130, %r1131, 25;
	shf.l.wrap.b32 	%r1137, %r1131, %r1130, 25;
	mov.b64 	%rd1542, {%r1137, %r1136};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	and.b64  	%rd1544, %rd1611, %rd1612;
	xor.b64  	%rd1545, %rd1611, %rd1612;
	and.b64  	%rd1546, %rd1545, %rd1479;
	or.b64  	%rd1547, %rd1546, %rd1544;
	add.s64 	%rd1548, %rd1538, %rd1547;
	add.s64 	%rd1610, %rd1548, %rd1543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd1614;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 14;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 14;
	mov.b64 	%rd1549, {%r1141, %r1140};
	shf.r.wrap.b32 	%r1142, %r1139, %r1138, 18;
	shf.r.wrap.b32 	%r1143, %r1138, %r1139, 18;
	mov.b64 	%rd1550, {%r1143, %r1142};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r1144, %r1138, %r1139, 23;
	shf.l.wrap.b32 	%r1145, %r1139, %r1138, 23;
	mov.b64 	%rd1552, {%r1145, %r1144};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1615, %rd1616;
	and.b64  	%rd1555, %rd1614, %rd1554;
	xor.b64  	%rd1556, %rd1555, %rd1616;
	add.s64 	%rd1557, %rd1468, %rd1601;
	ld.const.u64 	%rd1558, [%rd1179+120];
	add.s64 	%rd1559, %rd1557, %rd1558;
	add.s64 	%rd1560, %rd1559, %rd1556;
	add.s64 	%rd1561, %rd1560, %rd1553;
	add.s64 	%rd1613, %rd1561, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd1610;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 28;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 28;
	mov.b64 	%rd1562, {%r1149, %r1148};
	shf.l.wrap.b32 	%r1150, %r1146, %r1147, 30;
	shf.l.wrap.b32 	%r1151, %r1147, %r1146, 30;
	mov.b64 	%rd1563, {%r1151, %r1150};
	xor.b64  	%rd1564, %rd1563, %rd1562;
	shf.l.wrap.b32 	%r1152, %r1146, %r1147, 25;
	shf.l.wrap.b32 	%r1153, %r1147, %r1146, 25;
	mov.b64 	%rd1565, {%r1153, %r1152};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	and.b64  	%rd1567, %rd1610, %rd1611;
	xor.b64  	%rd1568, %rd1610, %rd1611;
	and.b64  	%rd1569, %rd1568, %rd1612;
	or.b64  	%rd1570, %rd1569, %rd1567;
	add.s64 	%rd1571, %rd1561, %rd1570;
	add.s64 	%rd1609, %rd1571, %rd1566;
	add.s32 	%r1227, %r1227, 16;
	setp.lt.s32	%p55, %r1227, 80;
	@%p55 bra 	BB1_86;

	add.s64 	%rd1584, %rd1609, 7640891576956012808;
	add.s64 	%rd1583, %rd1610, -4942790177534073029;
	add.s64 	%rd1582, %rd1611, 4354685564936845355;
	add.s64 	%rd1581, %rd1612, -6534734903238641935;
	add.s64 	%rd1580, %rd1613, 5840696475078001361;
	add.s64 	%rd1579, %rd1614, -7276294671716946913;
	add.s64 	%rd1578, %rd1615, 2270897969802886507;
	add.s64 	%rd1577, %rd1616, 6620516959819538809;
	add.s32 	%r1225, %r1225, 1;
	add.s32 	%r1226, %r1226, 1;
	setp.lt.u32	%p56, %r1226, %r122;
	@%p56 bra 	BB1_82;

BB1_88:
	st.global.u64 	[%rd4+-64], %rd1584;
	st.global.u64 	[%rd4+-56], %rd1583;
	st.global.u64 	[%rd4+-48], %rd1582;
	st.global.u64 	[%rd4+-40], %rd1581;
	st.global.u64 	[%rd4+-32], %rd1580;
	st.global.u64 	[%rd4+-24], %rd1579;
	st.global.u64 	[%rd4+-16], %rd1578;
	st.global.u64 	[%rd4+-8], %rd1577;

BB1_89:
	ret;
}

	// .globl	m01800_comp
.entry m01800_comp(
	.param .u64 .ptr .global .align 4 m01800_comp_param_0,
	.param .u64 .ptr .global .align 4 m01800_comp_param_1,
	.param .u64 .ptr .global .align 4 m01800_comp_param_2,
	.param .u64 .ptr .const .align 4 m01800_comp_param_3,
	.param .u64 .ptr .global .align 8 m01800_comp_param_4,
	.param .u64 .ptr .global .align 1 m01800_comp_param_5,
	.param .u64 .ptr .global .align 4 m01800_comp_param_6,
	.param .u64 .ptr .global .align 4 m01800_comp_param_7,
	.param .u64 .ptr .global .align 4 m01800_comp_param_8,
	.param .u64 .ptr .global .align 4 m01800_comp_param_9,
	.param .u64 .ptr .global .align 4 m01800_comp_param_10,
	.param .u64 .ptr .global .align 4 m01800_comp_param_11,
	.param .u64 .ptr .global .align 4 m01800_comp_param_12,
	.param .u64 .ptr .global .align 4 m01800_comp_param_13,
	.param .u64 .ptr .global .align 8 m01800_comp_param_14,
	.param .u64 .ptr .global .align 4 m01800_comp_param_15,
	.param .u64 .ptr .global .align 4 m01800_comp_param_16,
	.param .u64 .ptr .global .align 4 m01800_comp_param_17,
	.param .u64 .ptr .global .align 1 m01800_comp_param_18,
	.param .u64 .ptr .global .align 4 m01800_comp_param_19,
	.param .u64 .ptr .global .align 1 m01800_comp_param_20,
	.param .u64 .ptr .global .align 1 m01800_comp_param_21,
	.param .u64 .ptr .global .align 1 m01800_comp_param_22,
	.param .u64 .ptr .global .align 1 m01800_comp_param_23,
	.param .u64 .ptr .global .align 8 m01800_comp_param_24
)
{
	.local .align 4 .b8 	__local_depot2[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<123>;
	.reg .b64 	%rd<56>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd6, [m01800_comp_param_4];
	ld.param.u64 	%rd7, [m01800_comp_param_6];
	ld.param.u64 	%rd8, [m01800_comp_param_7];
	ld.param.u64 	%rd9, [m01800_comp_param_8];
	ld.param.u64 	%rd10, [m01800_comp_param_9];
	ld.param.u64 	%rd11, [m01800_comp_param_10];
	ld.param.u64 	%rd12, [m01800_comp_param_11];
	ld.param.u64 	%rd13, [m01800_comp_param_12];
	ld.param.u64 	%rd14, [m01800_comp_param_13];
	ld.param.u64 	%rd15, [m01800_comp_param_14];
	ld.param.u64 	%rd16, [m01800_comp_param_15];
	ld.param.u64 	%rd17, [m01800_comp_param_16];
	ld.param.u64 	%rd18, [m01800_comp_param_19];
	ld.param.u64 	%rd19, [m01800_comp_param_24];
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.b32	%r32, %envreg3;
	mad.lo.s32 	%r33, %r30, %r31, %r32;
	mov.u32 	%r34, %tid.x;
	add.s32 	%r1, %r33, %r34;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd19, 56;
	ld.global.u64 	%rd20, [%rd19+56];
	setp.ge.u64	%p1, %rd1, %rd20;
	@%p1 bra 	BB2_28;

	mul.wide.s32 	%rd25, %r1, 672;
	add.s64 	%rd26, %rd6, %rd25;
	ld.global.u64 	%rd21, [%rd26];
	// inline asm
	mov.b64 {%r35, %r36}, %rd21;
	// inline asm
	// inline asm
	prmt.b32 %r37, %r35, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd22, {%r39, %r37};
	// inline asm
	ld.global.u64 	%rd23, [%rd26+8];
	// inline asm
	mov.b64 {%r43, %r44}, %rd23;
	// inline asm
	// inline asm
	prmt.b32 %r45, %r43, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r47, %r44, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd24, {%r47, %r45};
	// inline asm
	mov.b64	{%r2, %r3}, %rd22;
	mov.u32 	%r51, 1;
	mov.b64	{%r4, %r5}, %rd24;
	add.s64 	%rd3, %rd2, -56;
	ld.global.u32 	%r52, [%rd2+-52];
	and.b32  	%r6, %r52, 31;
	shr.u32 	%r53, %r2, %r6;
	ld.global.u32 	%r7, [%rd2+-56];
	and.b32  	%r54, %r53, %r7;
	mul.wide.u32 	%rd27, %r54, 4;
	add.s64 	%rd28, %rd7, %rd27;
	and.b32  	%r55, %r2, 31;
	shl.b32 	%r8, %r51, %r55;
	ld.global.u32 	%r56, [%rd28];
	and.b32  	%r57, %r56, %r8;
	setp.eq.s32	%p2, %r57, 0;
	@%p2 bra 	BB2_28;

	shr.u32 	%r58, %r3, %r6;
	and.b32  	%r59, %r58, %r7;
	mul.wide.u32 	%rd29, %r59, 4;
	add.s64 	%rd30, %rd8, %rd29;
	and.b32  	%r60, %r3, 31;
	shl.b32 	%r9, %r51, %r60;
	ld.global.u32 	%r62, [%rd30];
	and.b32  	%r63, %r62, %r9;
	setp.eq.s32	%p3, %r63, 0;
	@%p3 bra 	BB2_28;

	shr.u32 	%r64, %r4, %r6;
	and.b32  	%r65, %r64, %r7;
	mul.wide.u32 	%rd31, %r65, 4;
	add.s64 	%rd32, %rd9, %rd31;
	and.b32  	%r66, %r4, 31;
	shl.b32 	%r10, %r51, %r66;
	ld.global.u32 	%r68, [%rd32];
	and.b32  	%r69, %r68, %r10;
	setp.eq.s32	%p4, %r69, 0;
	@%p4 bra 	BB2_28;

	shr.u32 	%r70, %r5, %r6;
	and.b32  	%r71, %r70, %r7;
	mul.wide.u32 	%rd33, %r71, 4;
	add.s64 	%rd34, %rd10, %rd33;
	and.b32  	%r72, %r5, 31;
	shl.b32 	%r11, %r51, %r72;
	ld.global.u32 	%r74, [%rd34];
	and.b32  	%r75, %r74, %r11;
	setp.eq.s32	%p5, %r75, 0;
	@%p5 bra 	BB2_28;

	ld.global.u32 	%r76, [%rd3+8];
	and.b32  	%r12, %r76, 31;
	shr.u32 	%r77, %r2, %r12;
	and.b32  	%r78, %r77, %r7;
	mul.wide.u32 	%rd35, %r78, 4;
	add.s64 	%rd36, %rd11, %rd35;
	ld.global.u32 	%r79, [%rd36];
	and.b32  	%r80, %r79, %r8;
	setp.eq.s32	%p6, %r80, 0;
	@%p6 bra 	BB2_28;

	shr.u32 	%r81, %r3, %r12;
	and.b32  	%r82, %r81, %r7;
	mul.wide.u32 	%rd37, %r82, 4;
	add.s64 	%rd38, %rd12, %rd37;
	ld.global.u32 	%r83, [%rd38];
	and.b32  	%r84, %r83, %r9;
	setp.eq.s32	%p7, %r84, 0;
	@%p7 bra 	BB2_28;

	shr.u32 	%r85, %r4, %r12;
	and.b32  	%r86, %r85, %r7;
	mul.wide.u32 	%rd39, %r86, 4;
	add.s64 	%rd40, %rd13, %rd39;
	ld.global.u32 	%r87, [%rd40];
	and.b32  	%r88, %r87, %r10;
	setp.eq.s32	%p8, %r88, 0;
	@%p8 bra 	BB2_28;

	shr.u32 	%r89, %r5, %r12;
	and.b32  	%r90, %r89, %r7;
	mul.wide.u32 	%rd41, %r90, 4;
	add.s64 	%rd42, %rd14, %rd41;
	ld.global.u32 	%r91, [%rd42];
	and.b32  	%r92, %r91, %r11;
	setp.eq.s32	%p9, %r92, 0;
	@%p9 bra 	BB2_28;

	ld.global.u32 	%rd4, [%rd2+-24];
	ld.global.u32 	%r119, [%rd2+-28];
	setp.eq.s32	%p10, %r119, 0;
	mov.u32 	%r120, 0;
	mov.u32 	%r93, -1;
	@%p10 bra 	BB2_22;

BB2_10:
	shr.u32 	%r16, %r119, 1;
	add.s32 	%r122, %r16, %r120;
	cvt.u64.u32	%rd43, %r122;
	add.s64 	%rd44, %rd43, %rd4;
	shl.b64 	%rd45, %rd44, 6;
	add.s64 	%rd5, %rd16, %rd45;
	ld.global.u32 	%r18, [%rd5+12];
	setp.gt.u32	%p11, %r5, %r18;
	mov.u32 	%r121, %r51;
	@%p11 bra 	BB2_20;

	setp.lt.u32	%p12, %r5, %r18;
	mov.u32 	%r96, -1;
	@%p12 bra 	BB2_12;
	bra.uni 	BB2_13;

BB2_12:
	mov.u32 	%r121, %r96;
	bra.uni 	BB2_20;

BB2_13:
	ld.global.u32 	%r19, [%rd5+8];
	setp.gt.u32	%p13, %r4, %r19;
	mov.u32 	%r121, %r51;
	@%p13 bra 	BB2_20;

	setp.lt.u32	%p14, %r4, %r19;
	@%p14 bra 	BB2_15;
	bra.uni 	BB2_16;

BB2_15:
	mov.u32 	%r121, %r96;
	bra.uni 	BB2_20;

BB2_16:
	ld.global.u32 	%r20, [%rd5+4];
	setp.gt.u32	%p15, %r3, %r20;
	mov.u32 	%r121, %r51;
	@%p15 bra 	BB2_20;

	setp.lt.u32	%p16, %r3, %r20;
	mov.u32 	%r121, %r96;
	@%p16 bra 	BB2_20;

	ld.global.u32 	%r21, [%rd5];
	setp.gt.u32	%p17, %r2, %r21;
	mov.u32 	%r121, %r51;
	@%p17 bra 	BB2_20;

	setp.lt.u32	%p18, %r2, %r21;
	selp.b32	%r121, -1, 0, %p18;

BB2_20:
	add.s32 	%r102, %r16, 1;
	setp.gt.s32	%p19, %r121, 0;
	selp.b32	%r103, %r102, 0, %p19;
	add.s32 	%r120, %r103, %r120;
	selp.b32	%r104, -1, 0, %p19;
	add.s32 	%r105, %r104, %r119;
	shr.u32 	%r119, %r105, 1;
	setp.eq.s32	%p20, %r121, 0;
	@%p20 bra 	BB2_23;

	setp.ne.s32	%p21, %r119, 0;
	@%p21 bra 	BB2_10;

BB2_22:
	mov.u32 	%r122, %r93;

BB2_23:
	setp.eq.s32	%p22, %r122, -1;
	@%p22 bra 	BB2_28;

	add.u64 	%rd47, %SPL, 0;
	cvt.u32.u64	%r107, %rd4;
	add.s32 	%r27, %r107, %r122;
	mul.wide.u32 	%rd48, %r27, 4;
	add.s64 	%rd49, %rd17, %rd48;
	mov.u32 	%r108, 1;
	st.local.u32 	[%rd47], %r108;
	ld.local.u32 	%r109, [%rd47];
	atom.global.add.u32 	%r110, [%rd49], %r109;
	setp.ne.s32	%p23, %r110, 0;
	@%p23 bra 	BB2_28;

	add.u64 	%rd51, %SPL, 8;
	ld.global.u32 	%r28, [%rd2+-44];
	ld.global.u32 	%r111, [%rd2+-28];
	st.local.u32 	[%rd51], %r108;
	ld.local.u32 	%r113, [%rd51];
	atom.global.add.u32 	%r29, [%rd18], %r113;
	setp.lt.u32	%p24, %r29, %r111;
	@%p24 bra 	BB2_27;
	bra.uni 	BB2_26;

BB2_27:
	mul.wide.u32 	%rd54, %r29, 32;
	add.s64 	%rd55, %rd15, %rd54;
	st.global.u32 	[%rd55+12], %r28;
	st.global.u32 	[%rd55+16], %r122;
	st.global.u32 	[%rd55+20], %r27;
	st.global.u64 	[%rd55], %rd1;
	mov.u32 	%r118, 0;
	st.global.u32 	[%rd55+8], %r118;
	st.global.u32 	[%rd55+24], %r118;
	st.global.u32 	[%rd55+28], %r118;
	bra.uni 	BB2_28;

BB2_26:
	add.u64 	%rd53, %SPL, 4;
	st.local.u32 	[%rd53], %r108;
	ld.local.u32 	%r115, [%rd53];
	neg.s32 	%r116, %r115;
	atom.global.add.u32 	%r117, [%rd18], %r116;

BB2_28:
	ret;
}


  
//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.5
.target sm_61, texmode_independent
.address_size 64

.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<101>;
	.reg .b32 	%r<9179>;
	.reg .b64 	%rd<2302>;


	ld.param.u64 	%rd176, [sha512_update_128_param_0];
	ld.param.u64 	%rd177, [sha512_update_128_param_1];
	ld.param.u64 	%rd178, [sha512_update_128_param_2];
	ld.param.u64 	%rd179, [sha512_update_128_param_3];
	ld.param.u64 	%rd180, [sha512_update_128_param_4];
	ld.param.u64 	%rd181, [sha512_update_128_param_5];
	ld.param.u64 	%rd182, [sha512_update_128_param_6];
	ld.param.u64 	%rd183, [sha512_update_128_param_7];
	ld.param.u64 	%rd184, [sha512_update_128_param_8];
	ld.param.u32 	%r607, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd177;
	cvta.to.local.u64 	%rd2, %rd178;
	cvta.to.local.u64 	%rd3, %rd179;
	cvta.to.local.u64 	%rd4, %rd180;
	cvta.to.local.u64 	%rd5, %rd181;
	cvta.to.local.u64 	%rd6, %rd182;
	cvta.to.local.u64 	%rd7, %rd183;
	cvta.to.local.u64 	%rd8, %rd184;
	setp.eq.s32	%p1, %r607, 0;
	@%p1 bra 	BB0_179;

	cvta.to.local.u64 	%rd185, %rd176;
	add.s64 	%rd9, %rd185, 192;
	ld.local.u32 	%r1, [%rd185+192];
	and.b32  	%r2, %r1, 127;
	add.s32 	%r608, %r1, %r607;
	st.local.u32 	[%rd185+192], %r608;
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_175;

	add.s32 	%r609, %r2, %r607;
	setp.lt.s32	%p3, %r609, 128;
	shr.u32 	%r3, %r2, 2;
	and.b32  	%r610, %r1, 3;
	shl.b32 	%r611, %r610, 2;
	mov.u32 	%r612, 1985229328;
	shr.u32 	%r613, %r612, %r611;
	and.b32  	%r4, %r613, 65535;
	@%p3 bra 	BB0_94;
	bra.uni 	BB0_3;

BB0_94:
	setp.gt.s32	%p52, %r3, 15;
	@%p52 bra 	BB0_126;

	setp.gt.s32	%p76, %r3, 7;
	@%p76 bra 	BB0_111;

	setp.gt.s32	%p88, %r3, 3;
	@%p88 bra 	BB0_104;

	setp.gt.s32	%p94, %r3, 1;
	@%p94 bra 	BB0_101;

	setp.eq.s32	%p97, %r3, 0;
	@%p97 bra 	BB0_172;
	bra.uni 	BB0_99;

BB0_172:
	ld.local.u32 	%r8222, [%rd8+12];
	ld.local.u32 	%r8223, [%rd8+8];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8221;
	ld.local.u32 	%r8226, [%rd8+8];
	ld.local.u32 	%r8227, [%rd8+4];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8225;
	ld.local.u32 	%r8230, [%rd8+4];
	ld.local.u32 	%r8231, [%rd8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8229;
	ld.local.u32 	%r8234, [%rd8];
	ld.local.u32 	%r8235, [%rd7+12];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8233;
	ld.local.u32 	%r8238, [%rd7+12];
	ld.local.u32 	%r8239, [%rd7+8];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8237;
	ld.local.u32 	%r8242, [%rd7+8];
	ld.local.u32 	%r8243, [%rd7+4];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8241;
	ld.local.u32 	%r8246, [%rd7+4];
	ld.local.u32 	%r8247, [%rd7];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8245;
	ld.local.u32 	%r8250, [%rd7];
	ld.local.u32 	%r8251, [%rd6+12];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8249;
	ld.local.u32 	%r8254, [%rd6+12];
	ld.local.u32 	%r8255, [%rd6+8];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8253;
	ld.local.u32 	%r8258, [%rd6+8];
	ld.local.u32 	%r8259, [%rd6+4];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8257;
	ld.local.u32 	%r8262, [%rd6+4];
	ld.local.u32 	%r8263, [%rd6];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8261;
	ld.local.u32 	%r8266, [%rd6];
	ld.local.u32 	%r8267, [%rd5+12];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8265;
	ld.local.u32 	%r8270, [%rd5+12];
	ld.local.u32 	%r8271, [%rd5+8];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8269;
	ld.local.u32 	%r8274, [%rd5+8];
	ld.local.u32 	%r8275, [%rd5+4];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8273;
	ld.local.u32 	%r8278, [%rd5+4];
	ld.local.u32 	%r8279, [%rd5];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8277;
	ld.local.u32 	%r8282, [%rd5];
	ld.local.u32 	%r8283, [%rd4+12];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8281;
	ld.local.u32 	%r8286, [%rd4+12];
	ld.local.u32 	%r8287, [%rd4+8];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8285;
	ld.local.u32 	%r8290, [%rd4+8];
	ld.local.u32 	%r8291, [%rd4+4];
	// inline asm
	prmt.b32 %r8289, %r8290, %r8291, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8289;
	ld.local.u32 	%r8294, [%rd4+4];
	ld.local.u32 	%r8295, [%rd4];
	// inline asm
	prmt.b32 %r8293, %r8294, %r8295, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8293;
	ld.local.u32 	%r8298, [%rd4];
	ld.local.u32 	%r8299, [%rd3+12];
	// inline asm
	prmt.b32 %r8297, %r8298, %r8299, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8297;
	ld.local.u32 	%r8302, [%rd3+12];
	ld.local.u32 	%r8303, [%rd3+8];
	// inline asm
	prmt.b32 %r8301, %r8302, %r8303, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8301;
	ld.local.u32 	%r8306, [%rd3+8];
	ld.local.u32 	%r8307, [%rd3+4];
	// inline asm
	prmt.b32 %r8305, %r8306, %r8307, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8305;
	ld.local.u32 	%r8310, [%rd3+4];
	ld.local.u32 	%r8311, [%rd3];
	// inline asm
	prmt.b32 %r8309, %r8310, %r8311, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8309;
	ld.local.u32 	%r8314, [%rd3];
	ld.local.u32 	%r8315, [%rd2+12];
	// inline asm
	prmt.b32 %r8313, %r8314, %r8315, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8313;
	ld.local.u32 	%r8318, [%rd2+12];
	ld.local.u32 	%r8319, [%rd2+8];
	// inline asm
	prmt.b32 %r8317, %r8318, %r8319, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8317;
	ld.local.u32 	%r8322, [%rd2+8];
	ld.local.u32 	%r8323, [%rd2+4];
	// inline asm
	prmt.b32 %r8321, %r8322, %r8323, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8321;
	ld.local.u32 	%r8326, [%rd2+4];
	ld.local.u32 	%r8327, [%rd2];
	// inline asm
	prmt.b32 %r8325, %r8326, %r8327, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8325;
	ld.local.u32 	%r8330, [%rd2];
	ld.local.u32 	%r8331, [%rd1+12];
	// inline asm
	prmt.b32 %r8329, %r8330, %r8331, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8329;
	ld.local.u32 	%r8334, [%rd1+12];
	ld.local.u32 	%r8335, [%rd1+8];
	// inline asm
	prmt.b32 %r8333, %r8334, %r8335, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8333;
	ld.local.u32 	%r8338, [%rd1+8];
	ld.local.u32 	%r8339, [%rd1+4];
	// inline asm
	prmt.b32 %r8337, %r8338, %r8339, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8337;
	ld.local.u32 	%r8342, [%rd1+4];
	ld.local.u32 	%r8343, [%rd1];
	// inline asm
	prmt.b32 %r8341, %r8342, %r8343, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8341;
	ld.local.u32 	%r8346, [%rd1];
	mov.u32 	%r8347, 0;
	// inline asm
	prmt.b32 %r9177, %r8346, %r8347, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r9177;
	bra.uni 	BB0_174;

BB0_175:
	ld.local.u32 	%r573, [%rd1];
	st.local.u32 	[%rd9+-128], %r573;
	ld.local.u32 	%r574, [%rd1+4];
	st.local.u32 	[%rd9+-124], %r574;
	ld.local.u32 	%r575, [%rd1+8];
	st.local.u32 	[%rd9+-120], %r575;
	ld.local.u32 	%r576, [%rd1+12];
	st.local.u32 	[%rd9+-116], %r576;
	ld.local.u32 	%r577, [%rd2];
	st.local.u32 	[%rd9+-112], %r577;
	ld.local.u32 	%r578, [%rd2+4];
	st.local.u32 	[%rd9+-108], %r578;
	ld.local.u32 	%r579, [%rd2+8];
	st.local.u32 	[%rd9+-104], %r579;
	ld.local.u32 	%r580, [%rd2+12];
	st.local.u32 	[%rd9+-100], %r580;
	ld.local.u32 	%r581, [%rd3];
	st.local.u32 	[%rd9+-96], %r581;
	ld.local.u32 	%r582, [%rd3+4];
	st.local.u32 	[%rd9+-92], %r582;
	ld.local.u32 	%r583, [%rd3+8];
	st.local.u32 	[%rd9+-88], %r583;
	ld.local.u32 	%r584, [%rd3+12];
	st.local.u32 	[%rd9+-84], %r584;
	ld.local.u32 	%r585, [%rd4];
	st.local.u32 	[%rd9+-80], %r585;
	ld.local.u32 	%r586, [%rd4+4];
	st.local.u32 	[%rd9+-76], %r586;
	ld.local.u32 	%r587, [%rd4+8];
	st.local.u32 	[%rd9+-72], %r587;
	ld.local.u32 	%r588, [%rd4+12];
	st.local.u32 	[%rd9+-68], %r588;
	ld.local.u32 	%r589, [%rd5];
	st.local.u32 	[%rd9+-64], %r589;
	ld.local.u32 	%r590, [%rd5+4];
	st.local.u32 	[%rd9+-60], %r590;
	ld.local.u32 	%r591, [%rd5+8];
	st.local.u32 	[%rd9+-56], %r591;
	ld.local.u32 	%r592, [%rd5+12];
	st.local.u32 	[%rd9+-52], %r592;
	ld.local.u32 	%r593, [%rd6];
	st.local.u32 	[%rd9+-48], %r593;
	ld.local.u32 	%r594, [%rd6+4];
	st.local.u32 	[%rd9+-44], %r594;
	ld.local.u32 	%r595, [%rd6+8];
	st.local.u32 	[%rd9+-40], %r595;
	ld.local.u32 	%r596, [%rd6+12];
	st.local.u32 	[%rd9+-36], %r596;
	ld.local.u32 	%r597, [%rd7];
	st.local.u32 	[%rd9+-32], %r597;
	ld.local.u32 	%r598, [%rd7+4];
	st.local.u32 	[%rd9+-28], %r598;
	ld.local.u32 	%r599, [%rd7+8];
	st.local.u32 	[%rd9+-24], %r599;
	ld.local.u32 	%r600, [%rd7+12];
	st.local.u32 	[%rd9+-20], %r600;
	ld.local.u32 	%r601, [%rd8];
	st.local.u32 	[%rd9+-16], %r601;
	ld.local.u32 	%r602, [%rd8+4];
	st.local.u32 	[%rd9+-12], %r602;
	ld.local.u32 	%r603, [%rd8+8];
	st.local.u32 	[%rd9+-8], %r603;
	ld.local.u32 	%r604, [%rd8+12];
	st.local.u32 	[%rd9+-4], %r604;
	setp.ne.s32	%p99, %r607, 128;
	@%p99 bra 	BB0_179;

	mov.b64	%rd2294, {%r574, %r573};
	mov.b64	%rd2295, {%r576, %r575};
	mov.b64	%rd2296, {%r578, %r577};
	mov.b64	%rd2297, {%r580, %r579};
	mov.b64	%rd2298, {%r582, %r581};
	mov.b64	%rd2299, {%r584, %r583};
	mov.b64	%rd2300, {%r586, %r585};
	mov.b64	%rd2301, {%r588, %r587};
	mov.b64	%rd2285, {%r590, %r589};
	mov.b64	%rd2284, {%r592, %r591};
	mov.b64	%rd2283, {%r594, %r593};
	mov.b64	%rd2282, {%r596, %r595};
	mov.b64	%rd2281, {%r598, %r597};
	mov.b64	%rd2280, {%r600, %r599};
	mov.b64	%rd2279, {%r602, %r601};
	mov.b64	%rd2278, {%r604, %r603};
	ld.local.u64 	%rd112, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8445,%dummy}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8446}, %rd112;
	}
	shf.r.wrap.b32 	%r8447, %r8446, %r8445, 14;
	shf.r.wrap.b32 	%r8448, %r8445, %r8446, 14;
	mov.b64 	%rd1264, {%r8448, %r8447};
	shf.r.wrap.b32 	%r8449, %r8446, %r8445, 18;
	shf.r.wrap.b32 	%r8450, %r8445, %r8446, 18;
	mov.b64 	%rd1265, {%r8450, %r8449};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	shf.l.wrap.b32 	%r8451, %r8445, %r8446, 23;
	shf.l.wrap.b32 	%r8452, %r8446, %r8445, 23;
	mov.b64 	%rd1267, {%r8452, %r8451};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	ld.local.u64 	%rd113, [%rd9+-144];
	ld.local.u64 	%rd114, [%rd9+-152];
	xor.b64  	%rd1269, %rd113, %rd114;
	and.b64  	%rd1270, %rd1269, %rd112;
	xor.b64  	%rd1271, %rd1270, %rd113;
	ld.local.u64 	%rd115, [%rd9+-136];
	add.s64 	%rd1272, %rd1268, %rd115;
	add.s64 	%rd1273, %rd1272, %rd1271;
	add.s64 	%rd1274, %rd1273, %rd2294;
	ld.const.u64 	%rd1275, [k_sha512];
	add.s64 	%rd1276, %rd1274, %rd1275;
	ld.local.u64 	%rd116, [%rd9+-168];
	add.s64 	%rd1277, %rd1276, %rd116;
	ld.local.u64 	%rd117, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8453,%dummy}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8454}, %rd117;
	}
	shf.r.wrap.b32 	%r8455, %r8454, %r8453, 28;
	shf.r.wrap.b32 	%r8456, %r8453, %r8454, 28;
	mov.b64 	%rd1278, {%r8456, %r8455};
	shf.l.wrap.b32 	%r8457, %r8453, %r8454, 30;
	shf.l.wrap.b32 	%r8458, %r8454, %r8453, 30;
	mov.b64 	%rd1279, {%r8458, %r8457};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	shf.l.wrap.b32 	%r8459, %r8453, %r8454, 25;
	shf.l.wrap.b32 	%r8460, %r8454, %r8453, 25;
	mov.b64 	%rd1281, {%r8460, %r8459};
	xor.b64  	%rd1282, %rd1280, %rd1281;
	ld.local.u64 	%rd118, [%rd9+-184];
	and.b64  	%rd1283, %rd118, %rd117;
	xor.b64  	%rd1284, %rd118, %rd117;
	ld.local.u64 	%rd119, [%rd9+-176];
	and.b64  	%rd1285, %rd119, %rd1284;
	or.b64  	%rd1286, %rd1285, %rd1283;
	add.s64 	%rd1287, %rd1286, %rd1282;
	add.s64 	%rd1288, %rd1287, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8461,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8462}, %rd1277;
	}
	shf.r.wrap.b32 	%r8463, %r8462, %r8461, 14;
	shf.r.wrap.b32 	%r8464, %r8461, %r8462, 14;
	mov.b64 	%rd1289, {%r8464, %r8463};
	shf.r.wrap.b32 	%r8465, %r8462, %r8461, 18;
	shf.r.wrap.b32 	%r8466, %r8461, %r8462, 18;
	mov.b64 	%rd1290, {%r8466, %r8465};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	shf.l.wrap.b32 	%r8467, %r8461, %r8462, 23;
	shf.l.wrap.b32 	%r8468, %r8462, %r8461, 23;
	mov.b64 	%rd1292, {%r8468, %r8467};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	xor.b64  	%rd1294, %rd114, %rd112;
	and.b64  	%rd1295, %rd1277, %rd1294;
	xor.b64  	%rd1296, %rd1295, %rd114;
	add.s64 	%rd1297, %rd2295, %rd113;
	ld.const.u64 	%rd1298, [k_sha512+8];
	add.s64 	%rd1299, %rd1297, %rd1298;
	add.s64 	%rd1300, %rd1299, %rd1296;
	add.s64 	%rd1301, %rd1300, %rd1293;
	add.s64 	%rd1302, %rd1301, %rd119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8469,%dummy}, %rd1288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8470}, %rd1288;
	}
	shf.r.wrap.b32 	%r8471, %r8470, %r8469, 28;
	shf.r.wrap.b32 	%r8472, %r8469, %r8470, 28;
	mov.b64 	%rd1303, {%r8472, %r8471};
	shf.l.wrap.b32 	%r8473, %r8469, %r8470, 30;
	shf.l.wrap.b32 	%r8474, %r8470, %r8469, 30;
	mov.b64 	%rd1304, {%r8474, %r8473};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	shf.l.wrap.b32 	%r8475, %r8469, %r8470, 25;
	shf.l.wrap.b32 	%r8476, %r8470, %r8469, 25;
	mov.b64 	%rd1306, {%r8476, %r8475};
	xor.b64  	%rd1307, %rd1305, %rd1306;
	and.b64  	%rd1308, %rd1288, %rd117;
	xor.b64  	%rd1309, %rd1288, %rd117;
	and.b64  	%rd1310, %rd1309, %rd118;
	or.b64  	%rd1311, %rd1310, %rd1308;
	add.s64 	%rd1312, %rd1307, %rd1311;
	add.s64 	%rd1313, %rd1312, %rd1301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8477,%dummy}, %rd1302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8478}, %rd1302;
	}
	shf.r.wrap.b32 	%r8479, %r8478, %r8477, 14;
	shf.r.wrap.b32 	%r8480, %r8477, %r8478, 14;
	mov.b64 	%rd1314, {%r8480, %r8479};
	shf.r.wrap.b32 	%r8481, %r8478, %r8477, 18;
	shf.r.wrap.b32 	%r8482, %r8477, %r8478, 18;
	mov.b64 	%rd1315, {%r8482, %r8481};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	shf.l.wrap.b32 	%r8483, %r8477, %r8478, 23;
	shf.l.wrap.b32 	%r8484, %r8478, %r8477, 23;
	mov.b64 	%rd1317, {%r8484, %r8483};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	xor.b64  	%rd1319, %rd1277, %rd112;
	and.b64  	%rd1320, %rd1302, %rd1319;
	xor.b64  	%rd1321, %rd1320, %rd112;
	add.s64 	%rd1322, %rd2296, %rd114;
	ld.const.u64 	%rd1323, [k_sha512+16];
	add.s64 	%rd1324, %rd1322, %rd1323;
	add.s64 	%rd1325, %rd1324, %rd1321;
	add.s64 	%rd1326, %rd1325, %rd1318;
	add.s64 	%rd1327, %rd1326, %rd118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8485,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8486}, %rd1313;
	}
	shf.r.wrap.b32 	%r8487, %r8486, %r8485, 28;
	shf.r.wrap.b32 	%r8488, %r8485, %r8486, 28;
	mov.b64 	%rd1328, {%r8488, %r8487};
	shf.l.wrap.b32 	%r8489, %r8485, %r8486, 30;
	shf.l.wrap.b32 	%r8490, %r8486, %r8485, 30;
	mov.b64 	%rd1329, {%r8490, %r8489};
	xor.b64  	%rd1330, %rd1328, %rd1329;
	shf.l.wrap.b32 	%r8491, %r8485, %r8486, 25;
	shf.l.wrap.b32 	%r8492, %r8486, %r8485, 25;
	mov.b64 	%rd1331, {%r8492, %r8491};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	and.b64  	%rd1333, %rd1313, %rd1288;
	xor.b64  	%rd1334, %rd1313, %rd1288;
	and.b64  	%rd1335, %rd1334, %rd117;
	or.b64  	%rd1336, %rd1335, %rd1333;
	add.s64 	%rd1337, %rd1332, %rd1336;
	add.s64 	%rd1338, %rd1337, %rd1326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8493,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8494}, %rd1327;
	}
	shf.r.wrap.b32 	%r8495, %r8494, %r8493, 14;
	shf.r.wrap.b32 	%r8496, %r8493, %r8494, 14;
	mov.b64 	%rd1339, {%r8496, %r8495};
	shf.r.wrap.b32 	%r8497, %r8494, %r8493, 18;
	shf.r.wrap.b32 	%r8498, %r8493, %r8494, 18;
	mov.b64 	%rd1340, {%r8498, %r8497};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	shf.l.wrap.b32 	%r8499, %r8493, %r8494, 23;
	shf.l.wrap.b32 	%r8500, %r8494, %r8493, 23;
	mov.b64 	%rd1342, {%r8500, %r8499};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	xor.b64  	%rd1344, %rd1302, %rd1277;
	and.b64  	%rd1345, %rd1327, %rd1344;
	xor.b64  	%rd1346, %rd1345, %rd1277;
	add.s64 	%rd1347, %rd2297, %rd112;
	ld.const.u64 	%rd1348, [k_sha512+24];
	add.s64 	%rd1349, %rd1347, %rd1348;
	add.s64 	%rd1350, %rd1349, %rd1346;
	add.s64 	%rd1351, %rd1350, %rd1343;
	add.s64 	%rd1352, %rd1351, %rd117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8501,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8502}, %rd1338;
	}
	shf.r.wrap.b32 	%r8503, %r8502, %r8501, 28;
	shf.r.wrap.b32 	%r8504, %r8501, %r8502, 28;
	mov.b64 	%rd1353, {%r8504, %r8503};
	shf.l.wrap.b32 	%r8505, %r8501, %r8502, 30;
	shf.l.wrap.b32 	%r8506, %r8502, %r8501, 30;
	mov.b64 	%rd1354, {%r8506, %r8505};
	xor.b64  	%rd1355, %rd1353, %rd1354;
	shf.l.wrap.b32 	%r8507, %r8501, %r8502, 25;
	shf.l.wrap.b32 	%r8508, %r8502, %r8501, 25;
	mov.b64 	%rd1356, {%r8508, %r8507};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	and.b64  	%rd1358, %rd1338, %rd1313;
	xor.b64  	%rd1359, %rd1338, %rd1313;
	and.b64  	%rd1360, %rd1359, %rd1288;
	or.b64  	%rd1361, %rd1360, %rd1358;
	add.s64 	%rd1362, %rd1357, %rd1361;
	add.s64 	%rd1363, %rd1362, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8509,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8510}, %rd1352;
	}
	shf.r.wrap.b32 	%r8511, %r8510, %r8509, 14;
	shf.r.wrap.b32 	%r8512, %r8509, %r8510, 14;
	mov.b64 	%rd1364, {%r8512, %r8511};
	shf.r.wrap.b32 	%r8513, %r8510, %r8509, 18;
	shf.r.wrap.b32 	%r8514, %r8509, %r8510, 18;
	mov.b64 	%rd1365, {%r8514, %r8513};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	shf.l.wrap.b32 	%r8515, %r8509, %r8510, 23;
	shf.l.wrap.b32 	%r8516, %r8510, %r8509, 23;
	mov.b64 	%rd1367, {%r8516, %r8515};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	xor.b64  	%rd1369, %rd1327, %rd1302;
	and.b64  	%rd1370, %rd1352, %rd1369;
	xor.b64  	%rd1371, %rd1370, %rd1302;
	add.s64 	%rd1372, %rd1277, %rd2298;
	ld.const.u64 	%rd1373, [k_sha512+32];
	add.s64 	%rd1374, %rd1372, %rd1373;
	add.s64 	%rd1375, %rd1374, %rd1371;
	add.s64 	%rd1376, %rd1375, %rd1368;
	add.s64 	%rd1377, %rd1376, %rd1288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8517,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8518}, %rd1363;
	}
	shf.r.wrap.b32 	%r8519, %r8518, %r8517, 28;
	shf.r.wrap.b32 	%r8520, %r8517, %r8518, 28;
	mov.b64 	%rd1378, {%r8520, %r8519};
	shf.l.wrap.b32 	%r8521, %r8517, %r8518, 30;
	shf.l.wrap.b32 	%r8522, %r8518, %r8517, 30;
	mov.b64 	%rd1379, {%r8522, %r8521};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	shf.l.wrap.b32 	%r8523, %r8517, %r8518, 25;
	shf.l.wrap.b32 	%r8524, %r8518, %r8517, 25;
	mov.b64 	%rd1381, {%r8524, %r8523};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	and.b64  	%rd1383, %rd1363, %rd1338;
	xor.b64  	%rd1384, %rd1363, %rd1338;
	and.b64  	%rd1385, %rd1384, %rd1313;
	or.b64  	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1382, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8525,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8526}, %rd1377;
	}
	shf.r.wrap.b32 	%r8527, %r8526, %r8525, 14;
	shf.r.wrap.b32 	%r8528, %r8525, %r8526, 14;
	mov.b64 	%rd1389, {%r8528, %r8527};
	shf.r.wrap.b32 	%r8529, %r8526, %r8525, 18;
	shf.r.wrap.b32 	%r8530, %r8525, %r8526, 18;
	mov.b64 	%rd1390, {%r8530, %r8529};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shf.l.wrap.b32 	%r8531, %r8525, %r8526, 23;
	shf.l.wrap.b32 	%r8532, %r8526, %r8525, 23;
	mov.b64 	%rd1392, {%r8532, %r8531};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1352, %rd1327;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1327;
	ld.const.u64 	%rd1397, [k_sha512+40];
	add.s64 	%rd1398, %rd1397, %rd2299;
	add.s64 	%rd1399, %rd1398, %rd1302;
	add.s64 	%rd1400, %rd1399, %rd1396;
	add.s64 	%rd1401, %rd1400, %rd1393;
	add.s64 	%rd1402, %rd1401, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8533,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8534}, %rd1388;
	}
	shf.r.wrap.b32 	%r8535, %r8534, %r8533, 28;
	shf.r.wrap.b32 	%r8536, %r8533, %r8534, 28;
	mov.b64 	%rd1403, {%r8536, %r8535};
	shf.l.wrap.b32 	%r8537, %r8533, %r8534, 30;
	shf.l.wrap.b32 	%r8538, %r8534, %r8533, 30;
	mov.b64 	%rd1404, {%r8538, %r8537};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	shf.l.wrap.b32 	%r8539, %r8533, %r8534, 25;
	shf.l.wrap.b32 	%r8540, %r8534, %r8533, 25;
	mov.b64 	%rd1406, {%r8540, %r8539};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	and.b64  	%rd1408, %rd1388, %rd1363;
	xor.b64  	%rd1409, %rd1388, %rd1363;
	and.b64  	%rd1410, %rd1409, %rd1338;
	or.b64  	%rd1411, %rd1410, %rd1408;
	add.s64 	%rd1412, %rd1407, %rd1411;
	add.s64 	%rd1413, %rd1412, %rd1401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8541,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8542}, %rd1402;
	}
	shf.r.wrap.b32 	%r8543, %r8542, %r8541, 14;
	shf.r.wrap.b32 	%r8544, %r8541, %r8542, 14;
	mov.b64 	%rd1414, {%r8544, %r8543};
	shf.r.wrap.b32 	%r8545, %r8542, %r8541, 18;
	shf.r.wrap.b32 	%r8546, %r8541, %r8542, 18;
	mov.b64 	%rd1415, {%r8546, %r8545};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	shf.l.wrap.b32 	%r8547, %r8541, %r8542, 23;
	shf.l.wrap.b32 	%r8548, %r8542, %r8541, 23;
	mov.b64 	%rd1417, {%r8548, %r8547};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1377, %rd1352;
	and.b64  	%rd1420, %rd1402, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1352;
	ld.const.u64 	%rd1422, [k_sha512+48];
	add.s64 	%rd1423, %rd1422, %rd2300;
	add.s64 	%rd1424, %rd1423, %rd1327;
	add.s64 	%rd1425, %rd1424, %rd1421;
	add.s64 	%rd1426, %rd1425, %rd1418;
	add.s64 	%rd1427, %rd1426, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8549,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8550}, %rd1413;
	}
	shf.r.wrap.b32 	%r8551, %r8550, %r8549, 28;
	shf.r.wrap.b32 	%r8552, %r8549, %r8550, 28;
	mov.b64 	%rd1428, {%r8552, %r8551};
	shf.l.wrap.b32 	%r8553, %r8549, %r8550, 30;
	shf.l.wrap.b32 	%r8554, %r8550, %r8549, 30;
	mov.b64 	%rd1429, {%r8554, %r8553};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	shf.l.wrap.b32 	%r8555, %r8549, %r8550, 25;
	shf.l.wrap.b32 	%r8556, %r8550, %r8549, 25;
	mov.b64 	%rd1431, {%r8556, %r8555};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	and.b64  	%rd1433, %rd1413, %rd1388;
	xor.b64  	%rd1434, %rd1413, %rd1388;
	and.b64  	%rd1435, %rd1434, %rd1363;
	or.b64  	%rd1436, %rd1435, %rd1433;
	add.s64 	%rd1437, %rd1432, %rd1436;
	add.s64 	%rd1438, %rd1437, %rd1426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8557,%dummy}, %rd1427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8558}, %rd1427;
	}
	shf.r.wrap.b32 	%r8559, %r8558, %r8557, 14;
	shf.r.wrap.b32 	%r8560, %r8557, %r8558, 14;
	mov.b64 	%rd1439, {%r8560, %r8559};
	shf.r.wrap.b32 	%r8561, %r8558, %r8557, 18;
	shf.r.wrap.b32 	%r8562, %r8557, %r8558, 18;
	mov.b64 	%rd1440, {%r8562, %r8561};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	shf.l.wrap.b32 	%r8563, %r8557, %r8558, 23;
	shf.l.wrap.b32 	%r8564, %r8558, %r8557, 23;
	mov.b64 	%rd1442, {%r8564, %r8563};
	xor.b64  	%rd1443, %rd1441, %rd1442;
	xor.b64  	%rd1444, %rd1402, %rd1377;
	and.b64  	%rd1445, %rd1427, %rd1444;
	xor.b64  	%rd1446, %rd1445, %rd1377;
	ld.const.u64 	%rd1447, [k_sha512+56];
	add.s64 	%rd1448, %rd1447, %rd2301;
	add.s64 	%rd1449, %rd1448, %rd1352;
	add.s64 	%rd1450, %rd1449, %rd1446;
	add.s64 	%rd1451, %rd1450, %rd1443;
	add.s64 	%rd1452, %rd1451, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8565,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8566}, %rd1438;
	}
	shf.r.wrap.b32 	%r8567, %r8566, %r8565, 28;
	shf.r.wrap.b32 	%r8568, %r8565, %r8566, 28;
	mov.b64 	%rd1453, {%r8568, %r8567};
	shf.l.wrap.b32 	%r8569, %r8565, %r8566, 30;
	shf.l.wrap.b32 	%r8570, %r8566, %r8565, 30;
	mov.b64 	%rd1454, {%r8570, %r8569};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	shf.l.wrap.b32 	%r8571, %r8565, %r8566, 25;
	shf.l.wrap.b32 	%r8572, %r8566, %r8565, 25;
	mov.b64 	%rd1456, {%r8572, %r8571};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	and.b64  	%rd1458, %rd1438, %rd1413;
	xor.b64  	%rd1459, %rd1438, %rd1413;
	and.b64  	%rd1460, %rd1459, %rd1388;
	or.b64  	%rd1461, %rd1460, %rd1458;
	add.s64 	%rd1462, %rd1457, %rd1461;
	add.s64 	%rd1463, %rd1462, %rd1451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8573,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8574}, %rd1452;
	}
	shf.r.wrap.b32 	%r8575, %r8574, %r8573, 14;
	shf.r.wrap.b32 	%r8576, %r8573, %r8574, 14;
	mov.b64 	%rd1464, {%r8576, %r8575};
	shf.r.wrap.b32 	%r8577, %r8574, %r8573, 18;
	shf.r.wrap.b32 	%r8578, %r8573, %r8574, 18;
	mov.b64 	%rd1465, {%r8578, %r8577};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	shf.l.wrap.b32 	%r8579, %r8573, %r8574, 23;
	shf.l.wrap.b32 	%r8580, %r8574, %r8573, 23;
	mov.b64 	%rd1467, {%r8580, %r8579};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1427, %rd1402;
	and.b64  	%rd1470, %rd1452, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1402;
	ld.const.u64 	%rd1472, [k_sha512+64];
	add.s64 	%rd1473, %rd1472, %rd2285;
	add.s64 	%rd1474, %rd1473, %rd1377;
	add.s64 	%rd1475, %rd1474, %rd1471;
	add.s64 	%rd1476, %rd1475, %rd1468;
	add.s64 	%rd1477, %rd1476, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8581,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8582}, %rd1463;
	}
	shf.r.wrap.b32 	%r8583, %r8582, %r8581, 28;
	shf.r.wrap.b32 	%r8584, %r8581, %r8582, 28;
	mov.b64 	%rd1478, {%r8584, %r8583};
	shf.l.wrap.b32 	%r8585, %r8581, %r8582, 30;
	shf.l.wrap.b32 	%r8586, %r8582, %r8581, 30;
	mov.b64 	%rd1479, {%r8586, %r8585};
	xor.b64  	%rd1480, %rd1478, %rd1479;
	shf.l.wrap.b32 	%r8587, %r8581, %r8582, 25;
	shf.l.wrap.b32 	%r8588, %r8582, %r8581, 25;
	mov.b64 	%rd1481, {%r8588, %r8587};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	and.b64  	%rd1483, %rd1463, %rd1438;
	xor.b64  	%rd1484, %rd1463, %rd1438;
	and.b64  	%rd1485, %rd1484, %rd1413;
	or.b64  	%rd1486, %rd1485, %rd1483;
	add.s64 	%rd1487, %rd1482, %rd1486;
	add.s64 	%rd1488, %rd1487, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8589,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8590}, %rd1477;
	}
	shf.r.wrap.b32 	%r8591, %r8590, %r8589, 14;
	shf.r.wrap.b32 	%r8592, %r8589, %r8590, 14;
	mov.b64 	%rd1489, {%r8592, %r8591};
	shf.r.wrap.b32 	%r8593, %r8590, %r8589, 18;
	shf.r.wrap.b32 	%r8594, %r8589, %r8590, 18;
	mov.b64 	%rd1490, {%r8594, %r8593};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	shf.l.wrap.b32 	%r8595, %r8589, %r8590, 23;
	shf.l.wrap.b32 	%r8596, %r8590, %r8589, 23;
	mov.b64 	%rd1492, {%r8596, %r8595};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	xor.b64  	%rd1494, %rd1452, %rd1427;
	and.b64  	%rd1495, %rd1477, %rd1494;
	xor.b64  	%rd1496, %rd1495, %rd1427;
	ld.const.u64 	%rd1497, [k_sha512+72];
	add.s64 	%rd1498, %rd1497, %rd2284;
	add.s64 	%rd1499, %rd1498, %rd1402;
	add.s64 	%rd1500, %rd1499, %rd1496;
	add.s64 	%rd1501, %rd1500, %rd1493;
	add.s64 	%rd1502, %rd1501, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8597,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8598}, %rd1488;
	}
	shf.r.wrap.b32 	%r8599, %r8598, %r8597, 28;
	shf.r.wrap.b32 	%r8600, %r8597, %r8598, 28;
	mov.b64 	%rd1503, {%r8600, %r8599};
	shf.l.wrap.b32 	%r8601, %r8597, %r8598, 30;
	shf.l.wrap.b32 	%r8602, %r8598, %r8597, 30;
	mov.b64 	%rd1504, {%r8602, %r8601};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	shf.l.wrap.b32 	%r8603, %r8597, %r8598, 25;
	shf.l.wrap.b32 	%r8604, %r8598, %r8597, 25;
	mov.b64 	%rd1506, {%r8604, %r8603};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	and.b64  	%rd1508, %rd1488, %rd1463;
	xor.b64  	%rd1509, %rd1488, %rd1463;
	and.b64  	%rd1510, %rd1509, %rd1438;
	or.b64  	%rd1511, %rd1510, %rd1508;
	add.s64 	%rd1512, %rd1507, %rd1511;
	add.s64 	%rd1513, %rd1512, %rd1501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8605,%dummy}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8606}, %rd1502;
	}
	shf.r.wrap.b32 	%r8607, %r8606, %r8605, 14;
	shf.r.wrap.b32 	%r8608, %r8605, %r8606, 14;
	mov.b64 	%rd1514, {%r8608, %r8607};
	shf.r.wrap.b32 	%r8609, %r8606, %r8605, 18;
	shf.r.wrap.b32 	%r8610, %r8605, %r8606, 18;
	mov.b64 	%rd1515, {%r8610, %r8609};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	shf.l.wrap.b32 	%r8611, %r8605, %r8606, 23;
	shf.l.wrap.b32 	%r8612, %r8606, %r8605, 23;
	mov.b64 	%rd1517, {%r8612, %r8611};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	xor.b64  	%rd1519, %rd1477, %rd1452;
	and.b64  	%rd1520, %rd1502, %rd1519;
	xor.b64  	%rd1521, %rd1520, %rd1452;
	ld.const.u64 	%rd1522, [k_sha512+80];
	add.s64 	%rd1523, %rd1522, %rd2283;
	add.s64 	%rd1524, %rd1523, %rd1427;
	add.s64 	%rd1525, %rd1524, %rd1521;
	add.s64 	%rd1526, %rd1525, %rd1518;
	add.s64 	%rd1527, %rd1526, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8613,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8614}, %rd1513;
	}
	shf.r.wrap.b32 	%r8615, %r8614, %r8613, 28;
	shf.r.wrap.b32 	%r8616, %r8613, %r8614, 28;
	mov.b64 	%rd1528, {%r8616, %r8615};
	shf.l.wrap.b32 	%r8617, %r8613, %r8614, 30;
	shf.l.wrap.b32 	%r8618, %r8614, %r8613, 30;
	mov.b64 	%rd1529, {%r8618, %r8617};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	shf.l.wrap.b32 	%r8619, %r8613, %r8614, 25;
	shf.l.wrap.b32 	%r8620, %r8614, %r8613, 25;
	mov.b64 	%rd1531, {%r8620, %r8619};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	and.b64  	%rd1533, %rd1513, %rd1488;
	xor.b64  	%rd1534, %rd1513, %rd1488;
	and.b64  	%rd1535, %rd1534, %rd1463;
	or.b64  	%rd1536, %rd1535, %rd1533;
	add.s64 	%rd1537, %rd1532, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8621,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8622}, %rd1527;
	}
	shf.r.wrap.b32 	%r8623, %r8622, %r8621, 14;
	shf.r.wrap.b32 	%r8624, %r8621, %r8622, 14;
	mov.b64 	%rd1539, {%r8624, %r8623};
	shf.r.wrap.b32 	%r8625, %r8622, %r8621, 18;
	shf.r.wrap.b32 	%r8626, %r8621, %r8622, 18;
	mov.b64 	%rd1540, {%r8626, %r8625};
	xor.b64  	%rd1541, %rd1539, %rd1540;
	shf.l.wrap.b32 	%r8627, %r8621, %r8622, 23;
	shf.l.wrap.b32 	%r8628, %r8622, %r8621, 23;
	mov.b64 	%rd1542, {%r8628, %r8627};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	xor.b64  	%rd1544, %rd1502, %rd1477;
	and.b64  	%rd1545, %rd1527, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1477;
	ld.const.u64 	%rd1547, [k_sha512+88];
	add.s64 	%rd1548, %rd1547, %rd2282;
	add.s64 	%rd1549, %rd1548, %rd1452;
	add.s64 	%rd1550, %rd1549, %rd1546;
	add.s64 	%rd1551, %rd1550, %rd1543;
	add.s64 	%rd1552, %rd1551, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8629,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8630}, %rd1538;
	}
	shf.r.wrap.b32 	%r8631, %r8630, %r8629, 28;
	shf.r.wrap.b32 	%r8632, %r8629, %r8630, 28;
	mov.b64 	%rd1553, {%r8632, %r8631};
	shf.l.wrap.b32 	%r8633, %r8629, %r8630, 30;
	shf.l.wrap.b32 	%r8634, %r8630, %r8629, 30;
	mov.b64 	%rd1554, {%r8634, %r8633};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	shf.l.wrap.b32 	%r8635, %r8629, %r8630, 25;
	shf.l.wrap.b32 	%r8636, %r8630, %r8629, 25;
	mov.b64 	%rd1556, {%r8636, %r8635};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	and.b64  	%rd1558, %rd1538, %rd1513;
	xor.b64  	%rd1559, %rd1538, %rd1513;
	and.b64  	%rd1560, %rd1559, %rd1488;
	or.b64  	%rd1561, %rd1560, %rd1558;
	add.s64 	%rd1562, %rd1557, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8637,%dummy}, %rd1552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8638}, %rd1552;
	}
	shf.r.wrap.b32 	%r8639, %r8638, %r8637, 14;
	shf.r.wrap.b32 	%r8640, %r8637, %r8638, 14;
	mov.b64 	%rd1564, {%r8640, %r8639};
	shf.r.wrap.b32 	%r8641, %r8638, %r8637, 18;
	shf.r.wrap.b32 	%r8642, %r8637, %r8638, 18;
	mov.b64 	%rd1565, {%r8642, %r8641};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	shf.l.wrap.b32 	%r8643, %r8637, %r8638, 23;
	shf.l.wrap.b32 	%r8644, %r8638, %r8637, 23;
	mov.b64 	%rd1567, {%r8644, %r8643};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	xor.b64  	%rd1569, %rd1527, %rd1502;
	and.b64  	%rd1570, %rd1552, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1502;
	ld.const.u64 	%rd1572, [k_sha512+96];
	add.s64 	%rd1573, %rd1572, %rd2281;
	add.s64 	%rd1574, %rd1573, %rd1477;
	add.s64 	%rd1575, %rd1574, %rd1571;
	add.s64 	%rd1576, %rd1575, %rd1568;
	add.s64 	%rd2293, %rd1576, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8645,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8646}, %rd1563;
	}
	shf.r.wrap.b32 	%r8647, %r8646, %r8645, 28;
	shf.r.wrap.b32 	%r8648, %r8645, %r8646, 28;
	mov.b64 	%rd1577, {%r8648, %r8647};
	shf.l.wrap.b32 	%r8649, %r8645, %r8646, 30;
	shf.l.wrap.b32 	%r8650, %r8646, %r8645, 30;
	mov.b64 	%rd1578, {%r8650, %r8649};
	xor.b64  	%rd1579, %rd1577, %rd1578;
	shf.l.wrap.b32 	%r8651, %r8645, %r8646, 25;
	shf.l.wrap.b32 	%r8652, %r8646, %r8645, 25;
	mov.b64 	%rd1580, {%r8652, %r8651};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	and.b64  	%rd1582, %rd1563, %rd1538;
	xor.b64  	%rd1583, %rd1563, %rd1538;
	and.b64  	%rd1584, %rd1583, %rd1513;
	or.b64  	%rd1585, %rd1584, %rd1582;
	add.s64 	%rd1586, %rd1581, %rd1585;
	add.s64 	%rd2289, %rd1586, %rd1576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8653,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8654}, %rd2293;
	}
	shf.r.wrap.b32 	%r8655, %r8654, %r8653, 14;
	shf.r.wrap.b32 	%r8656, %r8653, %r8654, 14;
	mov.b64 	%rd1587, {%r8656, %r8655};
	shf.r.wrap.b32 	%r8657, %r8654, %r8653, 18;
	shf.r.wrap.b32 	%r8658, %r8653, %r8654, 18;
	mov.b64 	%rd1588, {%r8658, %r8657};
	xor.b64  	%rd1589, %rd1587, %rd1588;
	shf.l.wrap.b32 	%r8659, %r8653, %r8654, 23;
	shf.l.wrap.b32 	%r8660, %r8654, %r8653, 23;
	mov.b64 	%rd1590, {%r8660, %r8659};
	xor.b64  	%rd1591, %rd1589, %rd1590;
	xor.b64  	%rd1592, %rd1552, %rd1527;
	and.b64  	%rd1593, %rd2293, %rd1592;
	xor.b64  	%rd1594, %rd1593, %rd1527;
	ld.const.u64 	%rd1595, [k_sha512+104];
	add.s64 	%rd1596, %rd1595, %rd2280;
	add.s64 	%rd1597, %rd1596, %rd1502;
	add.s64 	%rd1598, %rd1597, %rd1594;
	add.s64 	%rd1599, %rd1598, %rd1591;
	add.s64 	%rd2292, %rd1599, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8661,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8662}, %rd2289;
	}
	shf.r.wrap.b32 	%r8663, %r8662, %r8661, 28;
	shf.r.wrap.b32 	%r8664, %r8661, %r8662, 28;
	mov.b64 	%rd1600, {%r8664, %r8663};
	shf.l.wrap.b32 	%r8665, %r8661, %r8662, 30;
	shf.l.wrap.b32 	%r8666, %r8662, %r8661, 30;
	mov.b64 	%rd1601, {%r8666, %r8665};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	shf.l.wrap.b32 	%r8667, %r8661, %r8662, 25;
	shf.l.wrap.b32 	%r8668, %r8662, %r8661, 25;
	mov.b64 	%rd1603, {%r8668, %r8667};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	and.b64  	%rd1605, %rd2289, %rd1563;
	xor.b64  	%rd1606, %rd2289, %rd1563;
	and.b64  	%rd1607, %rd1606, %rd1538;
	or.b64  	%rd1608, %rd1607, %rd1605;
	add.s64 	%rd1609, %rd1604, %rd1608;
	add.s64 	%rd2288, %rd1609, %rd1599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8669,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8670}, %rd2292;
	}
	shf.r.wrap.b32 	%r8671, %r8670, %r8669, 14;
	shf.r.wrap.b32 	%r8672, %r8669, %r8670, 14;
	mov.b64 	%rd1610, {%r8672, %r8671};
	shf.r.wrap.b32 	%r8673, %r8670, %r8669, 18;
	shf.r.wrap.b32 	%r8674, %r8669, %r8670, 18;
	mov.b64 	%rd1611, {%r8674, %r8673};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	shf.l.wrap.b32 	%r8675, %r8669, %r8670, 23;
	shf.l.wrap.b32 	%r8676, %r8670, %r8669, 23;
	mov.b64 	%rd1613, {%r8676, %r8675};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	xor.b64  	%rd1615, %rd2293, %rd1552;
	and.b64  	%rd1616, %rd2292, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1552;
	ld.const.u64 	%rd1618, [k_sha512+112];
	add.s64 	%rd1619, %rd1618, %rd2279;
	add.s64 	%rd1620, %rd1619, %rd1527;
	add.s64 	%rd1621, %rd1620, %rd1617;
	add.s64 	%rd1622, %rd1621, %rd1614;
	add.s64 	%rd2291, %rd1622, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8677,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8678}, %rd2288;
	}
	shf.r.wrap.b32 	%r8679, %r8678, %r8677, 28;
	shf.r.wrap.b32 	%r8680, %r8677, %r8678, 28;
	mov.b64 	%rd1623, {%r8680, %r8679};
	shf.l.wrap.b32 	%r8681, %r8677, %r8678, 30;
	shf.l.wrap.b32 	%r8682, %r8678, %r8677, 30;
	mov.b64 	%rd1624, {%r8682, %r8681};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	shf.l.wrap.b32 	%r8683, %r8677, %r8678, 25;
	shf.l.wrap.b32 	%r8684, %r8678, %r8677, 25;
	mov.b64 	%rd1626, {%r8684, %r8683};
	xor.b64  	%rd1627, %rd1625, %rd1626;
	and.b64  	%rd1628, %rd2288, %rd2289;
	xor.b64  	%rd1629, %rd2288, %rd2289;
	and.b64  	%rd1630, %rd1629, %rd1563;
	or.b64  	%rd1631, %rd1630, %rd1628;
	add.s64 	%rd1632, %rd1627, %rd1631;
	add.s64 	%rd2287, %rd1632, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8685,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8686}, %rd2291;
	}
	shf.r.wrap.b32 	%r8687, %r8686, %r8685, 14;
	shf.r.wrap.b32 	%r8688, %r8685, %r8686, 14;
	mov.b64 	%rd1633, {%r8688, %r8687};
	shf.r.wrap.b32 	%r8689, %r8686, %r8685, 18;
	shf.r.wrap.b32 	%r8690, %r8685, %r8686, 18;
	mov.b64 	%rd1634, {%r8690, %r8689};
	xor.b64  	%rd1635, %rd1633, %rd1634;
	shf.l.wrap.b32 	%r8691, %r8685, %r8686, 23;
	shf.l.wrap.b32 	%r8692, %r8686, %r8685, 23;
	mov.b64 	%rd1636, {%r8692, %r8691};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	xor.b64  	%rd1638, %rd2292, %rd2293;
	and.b64  	%rd1639, %rd2291, %rd1638;
	xor.b64  	%rd1640, %rd1639, %rd2293;
	ld.const.u64 	%rd1641, [k_sha512+120];
	add.s64 	%rd1642, %rd1641, %rd2278;
	add.s64 	%rd1643, %rd1642, %rd1552;
	add.s64 	%rd1644, %rd1643, %rd1640;
	add.s64 	%rd1645, %rd1644, %rd1637;
	add.s64 	%rd2290, %rd1645, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8693,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8694}, %rd2287;
	}
	shf.r.wrap.b32 	%r8695, %r8694, %r8693, 28;
	shf.r.wrap.b32 	%r8696, %r8693, %r8694, 28;
	mov.b64 	%rd1646, {%r8696, %r8695};
	shf.l.wrap.b32 	%r8697, %r8693, %r8694, 30;
	shf.l.wrap.b32 	%r8698, %r8694, %r8693, 30;
	mov.b64 	%rd1647, {%r8698, %r8697};
	xor.b64  	%rd1648, %rd1646, %rd1647;
	shf.l.wrap.b32 	%r8699, %r8693, %r8694, 25;
	shf.l.wrap.b32 	%r8700, %r8694, %r8693, 25;
	mov.b64 	%rd1649, {%r8700, %r8699};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	and.b64  	%rd1651, %rd2287, %rd2288;
	xor.b64  	%rd1652, %rd2287, %rd2288;
	and.b64  	%rd1653, %rd1652, %rd2289;
	or.b64  	%rd1654, %rd1653, %rd1651;
	add.s64 	%rd1655, %rd1650, %rd1654;
	add.s64 	%rd2286, %rd1655, %rd1645;
	mov.u32 	%r9178, 16;

BB0_177:
	shr.u64 	%rd1656, %rd2279, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8702,%dummy}, %rd2279;
	}
	shf.l.wrap.b32 	%r8703, %r8702, %r8701, 3;
	shf.l.wrap.b32 	%r8704, %r8701, %r8702, 3;
	mov.b64 	%rd1657, {%r8704, %r8703};
	xor.b64  	%rd1658, %rd1657, %rd1656;
	shf.r.wrap.b32 	%r8705, %r8701, %r8702, 19;
	shf.r.wrap.b32 	%r8706, %r8702, %r8701, 19;
	mov.b64 	%rd1659, {%r8706, %r8705};
	xor.b64  	%rd1660, %rd1658, %rd1659;
	shr.u64 	%rd1661, %rd2295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8707,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8708}, %rd2295;
	}
	shf.r.wrap.b32 	%r8709, %r8708, %r8707, 8;
	shf.r.wrap.b32 	%r8710, %r8707, %r8708, 8;
	mov.b64 	%rd1662, {%r8710, %r8709};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.r.wrap.b32 	%r8711, %r8708, %r8707, 1;
	shf.r.wrap.b32 	%r8712, %r8707, %r8708, 1;
	mov.b64 	%rd1664, {%r8712, %r8711};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	add.s64 	%rd1666, %rd1665, %rd2294;
	add.s64 	%rd1667, %rd1666, %rd2284;
	add.s64 	%rd2294, %rd1667, %rd1660;
	shr.u64 	%rd1668, %rd2278, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8713}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8714,%dummy}, %rd2278;
	}
	shf.l.wrap.b32 	%r8715, %r8714, %r8713, 3;
	shf.l.wrap.b32 	%r8716, %r8713, %r8714, 3;
	mov.b64 	%rd1669, {%r8716, %r8715};
	xor.b64  	%rd1670, %rd1669, %rd1668;
	shf.r.wrap.b32 	%r8717, %r8713, %r8714, 19;
	shf.r.wrap.b32 	%r8718, %r8714, %r8713, 19;
	mov.b64 	%rd1671, {%r8718, %r8717};
	xor.b64  	%rd1672, %rd1670, %rd1671;
	shr.u64 	%rd1673, %rd2296, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd2296;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 8;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 8;
	mov.b64 	%rd1674, {%r8722, %r8721};
	xor.b64  	%rd1675, %rd1674, %rd1673;
	shf.r.wrap.b32 	%r8723, %r8720, %r8719, 1;
	shf.r.wrap.b32 	%r8724, %r8719, %r8720, 1;
	mov.b64 	%rd1676, {%r8724, %r8723};
	xor.b64  	%rd1677, %rd1675, %rd1676;
	add.s64 	%rd1678, %rd1677, %rd2295;
	add.s64 	%rd1679, %rd1678, %rd2283;
	add.s64 	%rd2295, %rd1679, %rd1672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8725,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8726}, %rd2294;
	}
	shf.r.wrap.b32 	%r8727, %r8726, %r8725, 19;
	shf.r.wrap.b32 	%r8728, %r8725, %r8726, 19;
	mov.b64 	%rd1680, {%r8728, %r8727};
	shf.l.wrap.b32 	%r8729, %r8725, %r8726, 3;
	shf.l.wrap.b32 	%r8730, %r8726, %r8725, 3;
	mov.b64 	%rd1681, {%r8730, %r8729};
	shr.u64 	%rd1682, %rd2294, 6;
	xor.b64  	%rd1683, %rd1681, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1680;
	shr.u64 	%rd1685, %rd2297, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8731,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8732}, %rd2297;
	}
	shf.r.wrap.b32 	%r8733, %r8732, %r8731, 8;
	shf.r.wrap.b32 	%r8734, %r8731, %r8732, 8;
	mov.b64 	%rd1686, {%r8734, %r8733};
	xor.b64  	%rd1687, %rd1686, %rd1685;
	shf.r.wrap.b32 	%r8735, %r8732, %r8731, 1;
	shf.r.wrap.b32 	%r8736, %r8731, %r8732, 1;
	mov.b64 	%rd1688, {%r8736, %r8735};
	xor.b64  	%rd1689, %rd1687, %rd1688;
	add.s64 	%rd1690, %rd1689, %rd2296;
	add.s64 	%rd1691, %rd1690, %rd2282;
	add.s64 	%rd2296, %rd1691, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8737,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8738}, %rd2295;
	}
	shf.r.wrap.b32 	%r8739, %r8738, %r8737, 19;
	shf.r.wrap.b32 	%r8740, %r8737, %r8738, 19;
	mov.b64 	%rd1692, {%r8740, %r8739};
	shf.l.wrap.b32 	%r8741, %r8737, %r8738, 3;
	shf.l.wrap.b32 	%r8742, %r8738, %r8737, 3;
	mov.b64 	%rd1693, {%r8742, %r8741};
	shr.u64 	%rd1694, %rd2295, 6;
	xor.b64  	%rd1695, %rd1693, %rd1694;
	xor.b64  	%rd1696, %rd1695, %rd1692;
	shr.u64 	%rd1697, %rd2298, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8743,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8744}, %rd2298;
	}
	shf.r.wrap.b32 	%r8745, %r8744, %r8743, 8;
	shf.r.wrap.b32 	%r8746, %r8743, %r8744, 8;
	mov.b64 	%rd1698, {%r8746, %r8745};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.r.wrap.b32 	%r8747, %r8744, %r8743, 1;
	shf.r.wrap.b32 	%r8748, %r8743, %r8744, 1;
	mov.b64 	%rd1700, {%r8748, %r8747};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	add.s64 	%rd1702, %rd1701, %rd2297;
	add.s64 	%rd1703, %rd1702, %rd2281;
	add.s64 	%rd2297, %rd1703, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8749,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8750}, %rd2296;
	}
	shf.r.wrap.b32 	%r8751, %r8750, %r8749, 19;
	shf.r.wrap.b32 	%r8752, %r8749, %r8750, 19;
	mov.b64 	%rd1704, {%r8752, %r8751};
	shf.l.wrap.b32 	%r8753, %r8749, %r8750, 3;
	shf.l.wrap.b32 	%r8754, %r8750, %r8749, 3;
	mov.b64 	%rd1705, {%r8754, %r8753};
	shr.u64 	%rd1706, %rd2296, 6;
	xor.b64  	%rd1707, %rd1705, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1704;
	shr.u64 	%rd1709, %rd2299, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8755,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8756}, %rd2299;
	}
	shf.r.wrap.b32 	%r8757, %r8756, %r8755, 8;
	shf.r.wrap.b32 	%r8758, %r8755, %r8756, 8;
	mov.b64 	%rd1710, {%r8758, %r8757};
	xor.b64  	%rd1711, %rd1710, %rd1709;
	shf.r.wrap.b32 	%r8759, %r8756, %r8755, 1;
	shf.r.wrap.b32 	%r8760, %r8755, %r8756, 1;
	mov.b64 	%rd1712, {%r8760, %r8759};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	add.s64 	%rd1714, %rd1713, %rd2298;
	add.s64 	%rd1715, %rd1714, %rd2280;
	add.s64 	%rd2298, %rd1715, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8761,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8762}, %rd2297;
	}
	shf.r.wrap.b32 	%r8763, %r8762, %r8761, 19;
	shf.r.wrap.b32 	%r8764, %r8761, %r8762, 19;
	mov.b64 	%rd1716, {%r8764, %r8763};
	shf.l.wrap.b32 	%r8765, %r8761, %r8762, 3;
	shf.l.wrap.b32 	%r8766, %r8762, %r8761, 3;
	mov.b64 	%rd1717, {%r8766, %r8765};
	shr.u64 	%rd1718, %rd2297, 6;
	xor.b64  	%rd1719, %rd1717, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1716;
	shr.u64 	%rd1721, %rd2300, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd2300;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 8;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 8;
	mov.b64 	%rd1722, {%r8770, %r8769};
	xor.b64  	%rd1723, %rd1722, %rd1721;
	shf.r.wrap.b32 	%r8771, %r8768, %r8767, 1;
	shf.r.wrap.b32 	%r8772, %r8767, %r8768, 1;
	mov.b64 	%rd1724, {%r8772, %r8771};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	add.s64 	%rd1726, %rd1725, %rd2299;
	add.s64 	%rd1727, %rd1726, %rd2279;
	add.s64 	%rd2299, %rd1727, %rd1720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8773,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8774}, %rd2298;
	}
	shf.r.wrap.b32 	%r8775, %r8774, %r8773, 19;
	shf.r.wrap.b32 	%r8776, %r8773, %r8774, 19;
	mov.b64 	%rd1728, {%r8776, %r8775};
	shf.l.wrap.b32 	%r8777, %r8773, %r8774, 3;
	shf.l.wrap.b32 	%r8778, %r8774, %r8773, 3;
	mov.b64 	%rd1729, {%r8778, %r8777};
	shr.u64 	%rd1730, %rd2298, 6;
	xor.b64  	%rd1731, %rd1729, %rd1730;
	xor.b64  	%rd1732, %rd1731, %rd1728;
	shr.u64 	%rd1733, %rd2301, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8779,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8780}, %rd2301;
	}
	shf.r.wrap.b32 	%r8781, %r8780, %r8779, 8;
	shf.r.wrap.b32 	%r8782, %r8779, %r8780, 8;
	mov.b64 	%rd1734, {%r8782, %r8781};
	xor.b64  	%rd1735, %rd1734, %rd1733;
	shf.r.wrap.b32 	%r8783, %r8780, %r8779, 1;
	shf.r.wrap.b32 	%r8784, %r8779, %r8780, 1;
	mov.b64 	%rd1736, {%r8784, %r8783};
	xor.b64  	%rd1737, %rd1735, %rd1736;
	add.s64 	%rd1738, %rd1737, %rd2300;
	add.s64 	%rd1739, %rd1738, %rd2278;
	add.s64 	%rd2300, %rd1739, %rd1732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8785,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8786}, %rd2299;
	}
	shf.r.wrap.b32 	%r8787, %r8786, %r8785, 19;
	shf.r.wrap.b32 	%r8788, %r8785, %r8786, 19;
	mov.b64 	%rd1740, {%r8788, %r8787};
	shf.l.wrap.b32 	%r8789, %r8785, %r8786, 3;
	shf.l.wrap.b32 	%r8790, %r8786, %r8785, 3;
	mov.b64 	%rd1741, {%r8790, %r8789};
	shr.u64 	%rd1742, %rd2299, 6;
	xor.b64  	%rd1743, %rd1741, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1740;
	shr.u64 	%rd1745, %rd2285, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8791,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8792}, %rd2285;
	}
	shf.r.wrap.b32 	%r8793, %r8792, %r8791, 8;
	shf.r.wrap.b32 	%r8794, %r8791, %r8792, 8;
	mov.b64 	%rd1746, {%r8794, %r8793};
	xor.b64  	%rd1747, %rd1746, %rd1745;
	shf.r.wrap.b32 	%r8795, %r8792, %r8791, 1;
	shf.r.wrap.b32 	%r8796, %r8791, %r8792, 1;
	mov.b64 	%rd1748, {%r8796, %r8795};
	xor.b64  	%rd1749, %rd1747, %rd1748;
	add.s64 	%rd1750, %rd1749, %rd2301;
	add.s64 	%rd1751, %rd1750, %rd2294;
	add.s64 	%rd2301, %rd1751, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8797,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8798}, %rd2300;
	}
	shf.r.wrap.b32 	%r8799, %r8798, %r8797, 19;
	shf.r.wrap.b32 	%r8800, %r8797, %r8798, 19;
	mov.b64 	%rd1752, {%r8800, %r8799};
	shf.l.wrap.b32 	%r8801, %r8797, %r8798, 3;
	shf.l.wrap.b32 	%r8802, %r8798, %r8797, 3;
	mov.b64 	%rd1753, {%r8802, %r8801};
	shr.u64 	%rd1754, %rd2300, 6;
	xor.b64  	%rd1755, %rd1753, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1752;
	shr.u64 	%rd1757, %rd2284, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd2284;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 8;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 8;
	mov.b64 	%rd1758, {%r8806, %r8805};
	xor.b64  	%rd1759, %rd1758, %rd1757;
	shf.r.wrap.b32 	%r8807, %r8804, %r8803, 1;
	shf.r.wrap.b32 	%r8808, %r8803, %r8804, 1;
	mov.b64 	%rd1760, {%r8808, %r8807};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	add.s64 	%rd1762, %rd1761, %rd2285;
	add.s64 	%rd1763, %rd1762, %rd2295;
	add.s64 	%rd2285, %rd1763, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8809,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8810}, %rd2301;
	}
	shf.r.wrap.b32 	%r8811, %r8810, %r8809, 19;
	shf.r.wrap.b32 	%r8812, %r8809, %r8810, 19;
	mov.b64 	%rd1764, {%r8812, %r8811};
	shf.l.wrap.b32 	%r8813, %r8809, %r8810, 3;
	shf.l.wrap.b32 	%r8814, %r8810, %r8809, 3;
	mov.b64 	%rd1765, {%r8814, %r8813};
	shr.u64 	%rd1766, %rd2301, 6;
	xor.b64  	%rd1767, %rd1765, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1764;
	shr.u64 	%rd1769, %rd2283, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8815,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8816}, %rd2283;
	}
	shf.r.wrap.b32 	%r8817, %r8816, %r8815, 8;
	shf.r.wrap.b32 	%r8818, %r8815, %r8816, 8;
	mov.b64 	%rd1770, {%r8818, %r8817};
	xor.b64  	%rd1771, %rd1770, %rd1769;
	shf.r.wrap.b32 	%r8819, %r8816, %r8815, 1;
	shf.r.wrap.b32 	%r8820, %r8815, %r8816, 1;
	mov.b64 	%rd1772, {%r8820, %r8819};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	add.s64 	%rd1774, %rd1773, %rd2284;
	add.s64 	%rd1775, %rd1774, %rd2296;
	add.s64 	%rd2284, %rd1775, %rd1768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8821,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8822}, %rd2285;
	}
	shf.r.wrap.b32 	%r8823, %r8822, %r8821, 19;
	shf.r.wrap.b32 	%r8824, %r8821, %r8822, 19;
	mov.b64 	%rd1776, {%r8824, %r8823};
	shf.l.wrap.b32 	%r8825, %r8821, %r8822, 3;
	shf.l.wrap.b32 	%r8826, %r8822, %r8821, 3;
	mov.b64 	%rd1777, {%r8826, %r8825};
	shr.u64 	%rd1778, %rd2285, 6;
	xor.b64  	%rd1779, %rd1777, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1776;
	shr.u64 	%rd1781, %rd2282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8827,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8828}, %rd2282;
	}
	shf.r.wrap.b32 	%r8829, %r8828, %r8827, 8;
	shf.r.wrap.b32 	%r8830, %r8827, %r8828, 8;
	mov.b64 	%rd1782, {%r8830, %r8829};
	xor.b64  	%rd1783, %rd1782, %rd1781;
	shf.r.wrap.b32 	%r8831, %r8828, %r8827, 1;
	shf.r.wrap.b32 	%r8832, %r8827, %r8828, 1;
	mov.b64 	%rd1784, {%r8832, %r8831};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	add.s64 	%rd1786, %rd1785, %rd2283;
	add.s64 	%rd1787, %rd1786, %rd2297;
	add.s64 	%rd2283, %rd1787, %rd1780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8833,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8834}, %rd2284;
	}
	shf.r.wrap.b32 	%r8835, %r8834, %r8833, 19;
	shf.r.wrap.b32 	%r8836, %r8833, %r8834, 19;
	mov.b64 	%rd1788, {%r8836, %r8835};
	shf.l.wrap.b32 	%r8837, %r8833, %r8834, 3;
	shf.l.wrap.b32 	%r8838, %r8834, %r8833, 3;
	mov.b64 	%rd1789, {%r8838, %r8837};
	shr.u64 	%rd1790, %rd2284, 6;
	xor.b64  	%rd1791, %rd1789, %rd1790;
	xor.b64  	%rd1792, %rd1791, %rd1788;
	shr.u64 	%rd1793, %rd2281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8839,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8840}, %rd2281;
	}
	shf.r.wrap.b32 	%r8841, %r8840, %r8839, 8;
	shf.r.wrap.b32 	%r8842, %r8839, %r8840, 8;
	mov.b64 	%rd1794, {%r8842, %r8841};
	xor.b64  	%rd1795, %rd1794, %rd1793;
	shf.r.wrap.b32 	%r8843, %r8840, %r8839, 1;
	shf.r.wrap.b32 	%r8844, %r8839, %r8840, 1;
	mov.b64 	%rd1796, {%r8844, %r8843};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	add.s64 	%rd1798, %rd1797, %rd2282;
	add.s64 	%rd1799, %rd1798, %rd2298;
	add.s64 	%rd2282, %rd1799, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8845,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8846}, %rd2283;
	}
	shf.r.wrap.b32 	%r8847, %r8846, %r8845, 19;
	shf.r.wrap.b32 	%r8848, %r8845, %r8846, 19;
	mov.b64 	%rd1800, {%r8848, %r8847};
	shf.l.wrap.b32 	%r8849, %r8845, %r8846, 3;
	shf.l.wrap.b32 	%r8850, %r8846, %r8845, 3;
	mov.b64 	%rd1801, {%r8850, %r8849};
	shr.u64 	%rd1802, %rd2283, 6;
	xor.b64  	%rd1803, %rd1801, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1800;
	shr.u64 	%rd1805, %rd2280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8851,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8852}, %rd2280;
	}
	shf.r.wrap.b32 	%r8853, %r8852, %r8851, 8;
	shf.r.wrap.b32 	%r8854, %r8851, %r8852, 8;
	mov.b64 	%rd1806, {%r8854, %r8853};
	xor.b64  	%rd1807, %rd1806, %rd1805;
	shf.r.wrap.b32 	%r8855, %r8852, %r8851, 1;
	shf.r.wrap.b32 	%r8856, %r8851, %r8852, 1;
	mov.b64 	%rd1808, {%r8856, %r8855};
	xor.b64  	%rd1809, %rd1807, %rd1808;
	add.s64 	%rd1810, %rd1809, %rd2281;
	add.s64 	%rd1811, %rd1810, %rd2299;
	add.s64 	%rd2281, %rd1811, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8857,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8858}, %rd2282;
	}
	shf.r.wrap.b32 	%r8859, %r8858, %r8857, 19;
	shf.r.wrap.b32 	%r8860, %r8857, %r8858, 19;
	mov.b64 	%rd1812, {%r8860, %r8859};
	shf.l.wrap.b32 	%r8861, %r8857, %r8858, 3;
	shf.l.wrap.b32 	%r8862, %r8858, %r8857, 3;
	mov.b64 	%rd1813, {%r8862, %r8861};
	shr.u64 	%rd1814, %rd2282, 6;
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1812;
	shr.u64 	%rd1817, %rd2279, 7;
	shf.r.wrap.b32 	%r8863, %r8701, %r8702, 8;
	shf.r.wrap.b32 	%r8864, %r8702, %r8701, 8;
	mov.b64 	%rd1818, {%r8864, %r8863};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.r.wrap.b32 	%r8865, %r8701, %r8702, 1;
	shf.r.wrap.b32 	%r8866, %r8702, %r8701, 1;
	mov.b64 	%rd1820, {%r8866, %r8865};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	add.s64 	%rd1822, %rd1821, %rd2280;
	add.s64 	%rd1823, %rd1822, %rd2300;
	add.s64 	%rd2280, %rd1823, %rd1816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8867,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8868}, %rd2281;
	}
	shf.r.wrap.b32 	%r8869, %r8868, %r8867, 19;
	shf.r.wrap.b32 	%r8870, %r8867, %r8868, 19;
	mov.b64 	%rd1824, {%r8870, %r8869};
	shf.l.wrap.b32 	%r8871, %r8867, %r8868, 3;
	shf.l.wrap.b32 	%r8872, %r8868, %r8867, 3;
	mov.b64 	%rd1825, {%r8872, %r8871};
	shr.u64 	%rd1826, %rd2281, 6;
	xor.b64  	%rd1827, %rd1825, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd1824;
	shr.u64 	%rd1829, %rd2278, 7;
	shf.r.wrap.b32 	%r8873, %r8713, %r8714, 8;
	shf.r.wrap.b32 	%r8874, %r8714, %r8713, 8;
	mov.b64 	%rd1830, {%r8874, %r8873};
	xor.b64  	%rd1831, %rd1830, %rd1829;
	shf.r.wrap.b32 	%r8875, %r8713, %r8714, 1;
	shf.r.wrap.b32 	%r8876, %r8714, %r8713, 1;
	mov.b64 	%rd1832, {%r8876, %r8875};
	xor.b64  	%rd1833, %rd1831, %rd1832;
	add.s64 	%rd1834, %rd1833, %rd2279;
	add.s64 	%rd1835, %rd1834, %rd2301;
	add.s64 	%rd2279, %rd1835, %rd1828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8877,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8878}, %rd2280;
	}
	shf.r.wrap.b32 	%r8879, %r8878, %r8877, 19;
	shf.r.wrap.b32 	%r8880, %r8877, %r8878, 19;
	mov.b64 	%rd1836, {%r8880, %r8879};
	shf.l.wrap.b32 	%r8881, %r8877, %r8878, 3;
	shf.l.wrap.b32 	%r8882, %r8878, %r8877, 3;
	mov.b64 	%rd1837, {%r8882, %r8881};
	shr.u64 	%rd1838, %rd2280, 6;
	xor.b64  	%rd1839, %rd1837, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1836;
	shf.r.wrap.b32 	%r8883, %r8726, %r8725, 1;
	shf.r.wrap.b32 	%r8884, %r8725, %r8726, 1;
	mov.b64 	%rd1841, {%r8884, %r8883};
	shf.r.wrap.b32 	%r8885, %r8726, %r8725, 8;
	shf.r.wrap.b32 	%r8886, %r8725, %r8726, 8;
	mov.b64 	%rd1842, {%r8886, %r8885};
	shr.u64 	%rd1843, %rd2294, 7;
	xor.b64  	%rd1844, %rd1842, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1841;
	add.s64 	%rd1846, %rd1845, %rd2278;
	add.s64 	%rd1847, %rd1846, %rd2285;
	add.s64 	%rd2278, %rd1847, %rd1840;
	mul.wide.s32 	%rd1848, %r9178, 8;
	mov.u64 	%rd1849, k_sha512;
	add.s64 	%rd1850, %rd1849, %rd1848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8887,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8888}, %rd2290;
	}
	shf.r.wrap.b32 	%r8889, %r8888, %r8887, 18;
	shf.r.wrap.b32 	%r8890, %r8887, %r8888, 18;
	mov.b64 	%rd1851, {%r8890, %r8889};
	shf.r.wrap.b32 	%r8891, %r8888, %r8887, 14;
	shf.r.wrap.b32 	%r8892, %r8887, %r8888, 14;
	mov.b64 	%rd1852, {%r8892, %r8891};
	xor.b64  	%rd1853, %rd1852, %rd1851;
	shf.l.wrap.b32 	%r8893, %r8887, %r8888, 23;
	shf.l.wrap.b32 	%r8894, %r8888, %r8887, 23;
	mov.b64 	%rd1854, {%r8894, %r8893};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	xor.b64  	%rd1856, %rd2291, %rd2292;
	and.b64  	%rd1857, %rd2290, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd2292;
	add.s64 	%rd1859, %rd1858, %rd2293;
	add.s64 	%rd1860, %rd1859, %rd1855;
	add.s64 	%rd1861, %rd1860, %rd2294;
	ld.const.u64 	%rd1862, [%rd1850];
	add.s64 	%rd1863, %rd1861, %rd1862;
	add.s64 	%rd1864, %rd1863, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8895}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd2286;
	}
	shf.l.wrap.b32 	%r8897, %r8896, %r8895, 30;
	shf.l.wrap.b32 	%r8898, %r8895, %r8896, 30;
	mov.b64 	%rd1865, {%r8898, %r8897};
	shf.r.wrap.b32 	%r8899, %r8895, %r8896, 28;
	shf.r.wrap.b32 	%r8900, %r8896, %r8895, 28;
	mov.b64 	%rd1866, {%r8900, %r8899};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	shf.l.wrap.b32 	%r8901, %r8896, %r8895, 25;
	shf.l.wrap.b32 	%r8902, %r8895, %r8896, 25;
	mov.b64 	%rd1868, {%r8902, %r8901};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	xor.b64  	%rd1870, %rd2286, %rd2287;
	and.b64  	%rd1871, %rd1870, %rd2288;
	and.b64  	%rd1872, %rd2286, %rd2287;
	or.b64  	%rd1873, %rd1871, %rd1872;
	add.s64 	%rd1874, %rd1869, %rd1873;
	add.s64 	%rd1875, %rd1874, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8903,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8904}, %rd1864;
	}
	shf.r.wrap.b32 	%r8905, %r8904, %r8903, 14;
	shf.r.wrap.b32 	%r8906, %r8903, %r8904, 14;
	mov.b64 	%rd1876, {%r8906, %r8905};
	shf.r.wrap.b32 	%r8907, %r8904, %r8903, 18;
	shf.r.wrap.b32 	%r8908, %r8903, %r8904, 18;
	mov.b64 	%rd1877, {%r8908, %r8907};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	shf.l.wrap.b32 	%r8909, %r8903, %r8904, 23;
	shf.l.wrap.b32 	%r8910, %r8904, %r8903, 23;
	mov.b64 	%rd1879, {%r8910, %r8909};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	xor.b64  	%rd1881, %rd2290, %rd2291;
	and.b64  	%rd1882, %rd1864, %rd1881;
	xor.b64  	%rd1883, %rd1882, %rd2291;
	add.s64 	%rd1884, %rd2295, %rd2292;
	ld.const.u64 	%rd1885, [%rd1850+8];
	add.s64 	%rd1886, %rd1884, %rd1885;
	add.s64 	%rd1887, %rd1886, %rd1883;
	add.s64 	%rd1888, %rd1887, %rd1880;
	add.s64 	%rd1889, %rd1888, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8911,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8912}, %rd1875;
	}
	shf.r.wrap.b32 	%r8913, %r8912, %r8911, 28;
	shf.r.wrap.b32 	%r8914, %r8911, %r8912, 28;
	mov.b64 	%rd1890, {%r8914, %r8913};
	shf.l.wrap.b32 	%r8915, %r8911, %r8912, 30;
	shf.l.wrap.b32 	%r8916, %r8912, %r8911, 30;
	mov.b64 	%rd1891, {%r8916, %r8915};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	shf.l.wrap.b32 	%r8917, %r8911, %r8912, 25;
	shf.l.wrap.b32 	%r8918, %r8912, %r8911, 25;
	mov.b64 	%rd1893, {%r8918, %r8917};
	xor.b64  	%rd1894, %rd1892, %rd1893;
	and.b64  	%rd1895, %rd1875, %rd2286;
	xor.b64  	%rd1896, %rd1875, %rd2286;
	and.b64  	%rd1897, %rd1896, %rd2287;
	or.b64  	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1894, %rd1898;
	add.s64 	%rd1900, %rd1899, %rd1888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8919,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8920}, %rd1889;
	}
	shf.r.wrap.b32 	%r8921, %r8920, %r8919, 14;
	shf.r.wrap.b32 	%r8922, %r8919, %r8920, 14;
	mov.b64 	%rd1901, {%r8922, %r8921};
	shf.r.wrap.b32 	%r8923, %r8920, %r8919, 18;
	shf.r.wrap.b32 	%r8924, %r8919, %r8920, 18;
	mov.b64 	%rd1902, {%r8924, %r8923};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	shf.l.wrap.b32 	%r8925, %r8919, %r8920, 23;
	shf.l.wrap.b32 	%r8926, %r8920, %r8919, 23;
	mov.b64 	%rd1904, {%r8926, %r8925};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd1864, %rd2290;
	and.b64  	%rd1907, %rd1889, %rd1906;
	xor.b64  	%rd1908, %rd1907, %rd2290;
	add.s64 	%rd1909, %rd2296, %rd2291;
	ld.const.u64 	%rd1910, [%rd1850+16];
	add.s64 	%rd1911, %rd1909, %rd1910;
	add.s64 	%rd1912, %rd1911, %rd1908;
	add.s64 	%rd1913, %rd1912, %rd1905;
	add.s64 	%rd1914, %rd1913, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8927,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8928}, %rd1900;
	}
	shf.r.wrap.b32 	%r8929, %r8928, %r8927, 28;
	shf.r.wrap.b32 	%r8930, %r8927, %r8928, 28;
	mov.b64 	%rd1915, {%r8930, %r8929};
	shf.l.wrap.b32 	%r8931, %r8927, %r8928, 30;
	shf.l.wrap.b32 	%r8932, %r8928, %r8927, 30;
	mov.b64 	%rd1916, {%r8932, %r8931};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	shf.l.wrap.b32 	%r8933, %r8927, %r8928, 25;
	shf.l.wrap.b32 	%r8934, %r8928, %r8927, 25;
	mov.b64 	%rd1918, {%r8934, %r8933};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	and.b64  	%rd1920, %rd1900, %rd1875;
	xor.b64  	%rd1921, %rd1900, %rd1875;
	and.b64  	%rd1922, %rd1921, %rd2286;
	or.b64  	%rd1923, %rd1922, %rd1920;
	add.s64 	%rd1924, %rd1919, %rd1923;
	add.s64 	%rd1925, %rd1924, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8935,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8936}, %rd1914;
	}
	shf.r.wrap.b32 	%r8937, %r8936, %r8935, 14;
	shf.r.wrap.b32 	%r8938, %r8935, %r8936, 14;
	mov.b64 	%rd1926, {%r8938, %r8937};
	shf.r.wrap.b32 	%r8939, %r8936, %r8935, 18;
	shf.r.wrap.b32 	%r8940, %r8935, %r8936, 18;
	mov.b64 	%rd1927, {%r8940, %r8939};
	xor.b64  	%rd1928, %rd1926, %rd1927;
	shf.l.wrap.b32 	%r8941, %r8935, %r8936, 23;
	shf.l.wrap.b32 	%r8942, %r8936, %r8935, 23;
	mov.b64 	%rd1929, {%r8942, %r8941};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	xor.b64  	%rd1931, %rd1889, %rd1864;
	and.b64  	%rd1932, %rd1914, %rd1931;
	xor.b64  	%rd1933, %rd1932, %rd1864;
	add.s64 	%rd1934, %rd2297, %rd2290;
	ld.const.u64 	%rd1935, [%rd1850+24];
	add.s64 	%rd1936, %rd1934, %rd1935;
	add.s64 	%rd1937, %rd1936, %rd1933;
	add.s64 	%rd1938, %rd1937, %rd1930;
	add.s64 	%rd1939, %rd1938, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8943,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8944}, %rd1925;
	}
	shf.r.wrap.b32 	%r8945, %r8944, %r8943, 28;
	shf.r.wrap.b32 	%r8946, %r8943, %r8944, 28;
	mov.b64 	%rd1940, {%r8946, %r8945};
	shf.l.wrap.b32 	%r8947, %r8943, %r8944, 30;
	shf.l.wrap.b32 	%r8948, %r8944, %r8943, 30;
	mov.b64 	%rd1941, {%r8948, %r8947};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	shf.l.wrap.b32 	%r8949, %r8943, %r8944, 25;
	shf.l.wrap.b32 	%r8950, %r8944, %r8943, 25;
	mov.b64 	%rd1943, {%r8950, %r8949};
	xor.b64  	%rd1944, %rd1942, %rd1943;
	and.b64  	%rd1945, %rd1925, %rd1900;
	xor.b64  	%rd1946, %rd1925, %rd1900;
	and.b64  	%rd1947, %rd1946, %rd1875;
	or.b64  	%rd1948, %rd1947, %rd1945;
	add.s64 	%rd1949, %rd1944, %rd1948;
	add.s64 	%rd1950, %rd1949, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8951,%dummy}, %rd1939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8952}, %rd1939;
	}
	shf.r.wrap.b32 	%r8953, %r8952, %r8951, 14;
	shf.r.wrap.b32 	%r8954, %r8951, %r8952, 14;
	mov.b64 	%rd1951, {%r8954, %r8953};
	shf.r.wrap.b32 	%r8955, %r8952, %r8951, 18;
	shf.r.wrap.b32 	%r8956, %r8951, %r8952, 18;
	mov.b64 	%rd1952, {%r8956, %r8955};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	shf.l.wrap.b32 	%r8957, %r8951, %r8952, 23;
	shf.l.wrap.b32 	%r8958, %r8952, %r8951, 23;
	mov.b64 	%rd1954, {%r8958, %r8957};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	xor.b64  	%rd1956, %rd1914, %rd1889;
	and.b64  	%rd1957, %rd1939, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1889;
	add.s64 	%rd1959, %rd1864, %rd2298;
	ld.const.u64 	%rd1960, [%rd1850+32];
	add.s64 	%rd1961, %rd1959, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1958;
	add.s64 	%rd1963, %rd1962, %rd1955;
	add.s64 	%rd1964, %rd1963, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8959,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8960}, %rd1950;
	}
	shf.r.wrap.b32 	%r8961, %r8960, %r8959, 28;
	shf.r.wrap.b32 	%r8962, %r8959, %r8960, 28;
	mov.b64 	%rd1965, {%r8962, %r8961};
	shf.l.wrap.b32 	%r8963, %r8959, %r8960, 30;
	shf.l.wrap.b32 	%r8964, %r8960, %r8959, 30;
	mov.b64 	%rd1966, {%r8964, %r8963};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	shf.l.wrap.b32 	%r8965, %r8959, %r8960, 25;
	shf.l.wrap.b32 	%r8966, %r8960, %r8959, 25;
	mov.b64 	%rd1968, {%r8966, %r8965};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	and.b64  	%rd1970, %rd1950, %rd1925;
	xor.b64  	%rd1971, %rd1950, %rd1925;
	and.b64  	%rd1972, %rd1971, %rd1900;
	or.b64  	%rd1973, %rd1972, %rd1970;
	add.s64 	%rd1974, %rd1969, %rd1973;
	add.s64 	%rd1975, %rd1974, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8967,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8968}, %rd1964;
	}
	shf.r.wrap.b32 	%r8969, %r8968, %r8967, 14;
	shf.r.wrap.b32 	%r8970, %r8967, %r8968, 14;
	mov.b64 	%rd1976, {%r8970, %r8969};
	shf.r.wrap.b32 	%r8971, %r8968, %r8967, 18;
	shf.r.wrap.b32 	%r8972, %r8967, %r8968, 18;
	mov.b64 	%rd1977, {%r8972, %r8971};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	shf.l.wrap.b32 	%r8973, %r8967, %r8968, 23;
	shf.l.wrap.b32 	%r8974, %r8968, %r8967, 23;
	mov.b64 	%rd1979, {%r8974, %r8973};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1939, %rd1914;
	and.b64  	%rd1982, %rd1964, %rd1981;
	xor.b64  	%rd1983, %rd1982, %rd1914;
	ld.const.u64 	%rd1984, [%rd1850+40];
	add.s64 	%rd1985, %rd1984, %rd2299;
	add.s64 	%rd1986, %rd1985, %rd1889;
	add.s64 	%rd1987, %rd1986, %rd1983;
	add.s64 	%rd1988, %rd1987, %rd1980;
	add.s64 	%rd1989, %rd1988, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8975,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8976}, %rd1975;
	}
	shf.r.wrap.b32 	%r8977, %r8976, %r8975, 28;
	shf.r.wrap.b32 	%r8978, %r8975, %r8976, 28;
	mov.b64 	%rd1990, {%r8978, %r8977};
	shf.l.wrap.b32 	%r8979, %r8975, %r8976, 30;
	shf.l.wrap.b32 	%r8980, %r8976, %r8975, 30;
	mov.b64 	%rd1991, {%r8980, %r8979};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	shf.l.wrap.b32 	%r8981, %r8975, %r8976, 25;
	shf.l.wrap.b32 	%r8982, %r8976, %r8975, 25;
	mov.b64 	%rd1993, {%r8982, %r8981};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	and.b64  	%rd1995, %rd1975, %rd1950;
	xor.b64  	%rd1996, %rd1975, %rd1950;
	and.b64  	%rd1997, %rd1996, %rd1925;
	or.b64  	%rd1998, %rd1997, %rd1995;
	add.s64 	%rd1999, %rd1994, %rd1998;
	add.s64 	%rd2000, %rd1999, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8983,%dummy}, %rd1989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8984}, %rd1989;
	}
	shf.r.wrap.b32 	%r8985, %r8984, %r8983, 14;
	shf.r.wrap.b32 	%r8986, %r8983, %r8984, 14;
	mov.b64 	%rd2001, {%r8986, %r8985};
	shf.r.wrap.b32 	%r8987, %r8984, %r8983, 18;
	shf.r.wrap.b32 	%r8988, %r8983, %r8984, 18;
	mov.b64 	%rd2002, {%r8988, %r8987};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	shf.l.wrap.b32 	%r8989, %r8983, %r8984, 23;
	shf.l.wrap.b32 	%r8990, %r8984, %r8983, 23;
	mov.b64 	%rd2004, {%r8990, %r8989};
	xor.b64  	%rd2005, %rd2003, %rd2004;
	xor.b64  	%rd2006, %rd1964, %rd1939;
	and.b64  	%rd2007, %rd1989, %rd2006;
	xor.b64  	%rd2008, %rd2007, %rd1939;
	ld.const.u64 	%rd2009, [%rd1850+48];
	add.s64 	%rd2010, %rd2009, %rd2300;
	add.s64 	%rd2011, %rd2010, %rd1914;
	add.s64 	%rd2012, %rd2011, %rd2008;
	add.s64 	%rd2013, %rd2012, %rd2005;
	add.s64 	%rd2014, %rd2013, %rd1925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8991,%dummy}, %rd2000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8992}, %rd2000;
	}
	shf.r.wrap.b32 	%r8993, %r8992, %r8991, 28;
	shf.r.wrap.b32 	%r8994, %r8991, %r8992, 28;
	mov.b64 	%rd2015, {%r8994, %r8993};
	shf.l.wrap.b32 	%r8995, %r8991, %r8992, 30;
	shf.l.wrap.b32 	%r8996, %r8992, %r8991, 30;
	mov.b64 	%rd2016, {%r8996, %r8995};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	shf.l.wrap.b32 	%r8997, %r8991, %r8992, 25;
	shf.l.wrap.b32 	%r8998, %r8992, %r8991, 25;
	mov.b64 	%rd2018, {%r8998, %r8997};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	and.b64  	%rd2020, %rd2000, %rd1975;
	xor.b64  	%rd2021, %rd2000, %rd1975;
	and.b64  	%rd2022, %rd2021, %rd1950;
	or.b64  	%rd2023, %rd2022, %rd2020;
	add.s64 	%rd2024, %rd2019, %rd2023;
	add.s64 	%rd2025, %rd2024, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8999,%dummy}, %rd2014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9000}, %rd2014;
	}
	shf.r.wrap.b32 	%r9001, %r9000, %r8999, 14;
	shf.r.wrap.b32 	%r9002, %r8999, %r9000, 14;
	mov.b64 	%rd2026, {%r9002, %r9001};
	shf.r.wrap.b32 	%r9003, %r9000, %r8999, 18;
	shf.r.wrap.b32 	%r9004, %r8999, %r9000, 18;
	mov.b64 	%rd2027, {%r9004, %r9003};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	shf.l.wrap.b32 	%r9005, %r8999, %r9000, 23;
	shf.l.wrap.b32 	%r9006, %r9000, %r8999, 23;
	mov.b64 	%rd2029, {%r9006, %r9005};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd1989, %rd1964;
	and.b64  	%rd2032, %rd2014, %rd2031;
	xor.b64  	%rd2033, %rd2032, %rd1964;
	ld.const.u64 	%rd2034, [%rd1850+56];
	add.s64 	%rd2035, %rd2034, %rd2301;
	add.s64 	%rd2036, %rd2035, %rd1939;
	add.s64 	%rd2037, %rd2036, %rd2033;
	add.s64 	%rd2038, %rd2037, %rd2030;
	add.s64 	%rd2039, %rd2038, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9007,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9008}, %rd2025;
	}
	shf.r.wrap.b32 	%r9009, %r9008, %r9007, 28;
	shf.r.wrap.b32 	%r9010, %r9007, %r9008, 28;
	mov.b64 	%rd2040, {%r9010, %r9009};
	shf.l.wrap.b32 	%r9011, %r9007, %r9008, 30;
	shf.l.wrap.b32 	%r9012, %r9008, %r9007, 30;
	mov.b64 	%rd2041, {%r9012, %r9011};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	shf.l.wrap.b32 	%r9013, %r9007, %r9008, 25;
	shf.l.wrap.b32 	%r9014, %r9008, %r9007, 25;
	mov.b64 	%rd2043, {%r9014, %r9013};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	and.b64  	%rd2045, %rd2025, %rd2000;
	xor.b64  	%rd2046, %rd2025, %rd2000;
	and.b64  	%rd2047, %rd2046, %rd1975;
	or.b64  	%rd2048, %rd2047, %rd2045;
	add.s64 	%rd2049, %rd2044, %rd2048;
	add.s64 	%rd2050, %rd2049, %rd2038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9015,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9016}, %rd2039;
	}
	shf.r.wrap.b32 	%r9017, %r9016, %r9015, 14;
	shf.r.wrap.b32 	%r9018, %r9015, %r9016, 14;
	mov.b64 	%rd2051, {%r9018, %r9017};
	shf.r.wrap.b32 	%r9019, %r9016, %r9015, 18;
	shf.r.wrap.b32 	%r9020, %r9015, %r9016, 18;
	mov.b64 	%rd2052, {%r9020, %r9019};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	shf.l.wrap.b32 	%r9021, %r9015, %r9016, 23;
	shf.l.wrap.b32 	%r9022, %r9016, %r9015, 23;
	mov.b64 	%rd2054, {%r9022, %r9021};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	xor.b64  	%rd2056, %rd2014, %rd1989;
	and.b64  	%rd2057, %rd2039, %rd2056;
	xor.b64  	%rd2058, %rd2057, %rd1989;
	ld.const.u64 	%rd2059, [%rd1850+64];
	add.s64 	%rd2060, %rd2059, %rd2285;
	add.s64 	%rd2061, %rd2060, %rd1964;
	add.s64 	%rd2062, %rd2061, %rd2058;
	add.s64 	%rd2063, %rd2062, %rd2055;
	add.s64 	%rd2064, %rd2063, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9023,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9024}, %rd2050;
	}
	shf.r.wrap.b32 	%r9025, %r9024, %r9023, 28;
	shf.r.wrap.b32 	%r9026, %r9023, %r9024, 28;
	mov.b64 	%rd2065, {%r9026, %r9025};
	shf.l.wrap.b32 	%r9027, %r9023, %r9024, 30;
	shf.l.wrap.b32 	%r9028, %r9024, %r9023, 30;
	mov.b64 	%rd2066, {%r9028, %r9027};
	xor.b64  	%rd2067, %rd2065, %rd2066;
	shf.l.wrap.b32 	%r9029, %r9023, %r9024, 25;
	shf.l.wrap.b32 	%r9030, %r9024, %r9023, 25;
	mov.b64 	%rd2068, {%r9030, %r9029};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	and.b64  	%rd2070, %rd2050, %rd2025;
	xor.b64  	%rd2071, %rd2050, %rd2025;
	and.b64  	%rd2072, %rd2071, %rd2000;
	or.b64  	%rd2073, %rd2072, %rd2070;
	add.s64 	%rd2074, %rd2069, %rd2073;
	add.s64 	%rd2075, %rd2074, %rd2063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9031,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9032}, %rd2064;
	}
	shf.r.wrap.b32 	%r9033, %r9032, %r9031, 14;
	shf.r.wrap.b32 	%r9034, %r9031, %r9032, 14;
	mov.b64 	%rd2076, {%r9034, %r9033};
	shf.r.wrap.b32 	%r9035, %r9032, %r9031, 18;
	shf.r.wrap.b32 	%r9036, %r9031, %r9032, 18;
	mov.b64 	%rd2077, {%r9036, %r9035};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	shf.l.wrap.b32 	%r9037, %r9031, %r9032, 23;
	shf.l.wrap.b32 	%r9038, %r9032, %r9031, 23;
	mov.b64 	%rd2079, {%r9038, %r9037};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	xor.b64  	%rd2081, %rd2039, %rd2014;
	and.b64  	%rd2082, %rd2064, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2014;
	ld.const.u64 	%rd2084, [%rd1850+72];
	add.s64 	%rd2085, %rd2084, %rd2284;
	add.s64 	%rd2086, %rd2085, %rd1989;
	add.s64 	%rd2087, %rd2086, %rd2083;
	add.s64 	%rd2088, %rd2087, %rd2080;
	add.s64 	%rd2089, %rd2088, %rd2000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9039,%dummy}, %rd2075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9040}, %rd2075;
	}
	shf.r.wrap.b32 	%r9041, %r9040, %r9039, 28;
	shf.r.wrap.b32 	%r9042, %r9039, %r9040, 28;
	mov.b64 	%rd2090, {%r9042, %r9041};
	shf.l.wrap.b32 	%r9043, %r9039, %r9040, 30;
	shf.l.wrap.b32 	%r9044, %r9040, %r9039, 30;
	mov.b64 	%rd2091, {%r9044, %r9043};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	shf.l.wrap.b32 	%r9045, %r9039, %r9040, 25;
	shf.l.wrap.b32 	%r9046, %r9040, %r9039, 25;
	mov.b64 	%rd2093, {%r9046, %r9045};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	and.b64  	%rd2095, %rd2075, %rd2050;
	xor.b64  	%rd2096, %rd2075, %rd2050;
	and.b64  	%rd2097, %rd2096, %rd2025;
	or.b64  	%rd2098, %rd2097, %rd2095;
	add.s64 	%rd2099, %rd2094, %rd2098;
	add.s64 	%rd2100, %rd2099, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9047,%dummy}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9048}, %rd2089;
	}
	shf.r.wrap.b32 	%r9049, %r9048, %r9047, 14;
	shf.r.wrap.b32 	%r9050, %r9047, %r9048, 14;
	mov.b64 	%rd2101, {%r9050, %r9049};
	shf.r.wrap.b32 	%r9051, %r9048, %r9047, 18;
	shf.r.wrap.b32 	%r9052, %r9047, %r9048, 18;
	mov.b64 	%rd2102, {%r9052, %r9051};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	shf.l.wrap.b32 	%r9053, %r9047, %r9048, 23;
	shf.l.wrap.b32 	%r9054, %r9048, %r9047, 23;
	mov.b64 	%rd2104, {%r9054, %r9053};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	xor.b64  	%rd2106, %rd2064, %rd2039;
	and.b64  	%rd2107, %rd2089, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2039;
	ld.const.u64 	%rd2109, [%rd1850+80];
	add.s64 	%rd2110, %rd2109, %rd2283;
	add.s64 	%rd2111, %rd2110, %rd2014;
	add.s64 	%rd2112, %rd2111, %rd2108;
	add.s64 	%rd2113, %rd2112, %rd2105;
	add.s64 	%rd2114, %rd2113, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9055,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9056}, %rd2100;
	}
	shf.r.wrap.b32 	%r9057, %r9056, %r9055, 28;
	shf.r.wrap.b32 	%r9058, %r9055, %r9056, 28;
	mov.b64 	%rd2115, {%r9058, %r9057};
	shf.l.wrap.b32 	%r9059, %r9055, %r9056, 30;
	shf.l.wrap.b32 	%r9060, %r9056, %r9055, 30;
	mov.b64 	%rd2116, {%r9060, %r9059};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shf.l.wrap.b32 	%r9061, %r9055, %r9056, 25;
	shf.l.wrap.b32 	%r9062, %r9056, %r9055, 25;
	mov.b64 	%rd2118, {%r9062, %r9061};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	and.b64  	%rd2120, %rd2100, %rd2075;
	xor.b64  	%rd2121, %rd2100, %rd2075;
	and.b64  	%rd2122, %rd2121, %rd2050;
	or.b64  	%rd2123, %rd2122, %rd2120;
	add.s64 	%rd2124, %rd2119, %rd2123;
	add.s64 	%rd2125, %rd2124, %rd2113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9063,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9064}, %rd2114;
	}
	shf.r.wrap.b32 	%r9065, %r9064, %r9063, 14;
	shf.r.wrap.b32 	%r9066, %r9063, %r9064, 14;
	mov.b64 	%rd2126, {%r9066, %r9065};
	shf.r.wrap.b32 	%r9067, %r9064, %r9063, 18;
	shf.r.wrap.b32 	%r9068, %r9063, %r9064, 18;
	mov.b64 	%rd2127, {%r9068, %r9067};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	shf.l.wrap.b32 	%r9069, %r9063, %r9064, 23;
	shf.l.wrap.b32 	%r9070, %r9064, %r9063, 23;
	mov.b64 	%rd2129, {%r9070, %r9069};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2089, %rd2064;
	and.b64  	%rd2132, %rd2114, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2064;
	ld.const.u64 	%rd2134, [%rd1850+88];
	add.s64 	%rd2135, %rd2134, %rd2282;
	add.s64 	%rd2136, %rd2135, %rd2039;
	add.s64 	%rd2137, %rd2136, %rd2133;
	add.s64 	%rd2138, %rd2137, %rd2130;
	add.s64 	%rd2139, %rd2138, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9071,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9072}, %rd2125;
	}
	shf.r.wrap.b32 	%r9073, %r9072, %r9071, 28;
	shf.r.wrap.b32 	%r9074, %r9071, %r9072, 28;
	mov.b64 	%rd2140, {%r9074, %r9073};
	shf.l.wrap.b32 	%r9075, %r9071, %r9072, 30;
	shf.l.wrap.b32 	%r9076, %r9072, %r9071, 30;
	mov.b64 	%rd2141, {%r9076, %r9075};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	shf.l.wrap.b32 	%r9077, %r9071, %r9072, 25;
	shf.l.wrap.b32 	%r9078, %r9072, %r9071, 25;
	mov.b64 	%rd2143, {%r9078, %r9077};
	xor.b64  	%rd2144, %rd2142, %rd2143;
	and.b64  	%rd2145, %rd2125, %rd2100;
	xor.b64  	%rd2146, %rd2125, %rd2100;
	and.b64  	%rd2147, %rd2146, %rd2075;
	or.b64  	%rd2148, %rd2147, %rd2145;
	add.s64 	%rd2149, %rd2144, %rd2148;
	add.s64 	%rd2150, %rd2149, %rd2138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9079,%dummy}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9080}, %rd2139;
	}
	shf.r.wrap.b32 	%r9081, %r9080, %r9079, 14;
	shf.r.wrap.b32 	%r9082, %r9079, %r9080, 14;
	mov.b64 	%rd2151, {%r9082, %r9081};
	shf.r.wrap.b32 	%r9083, %r9080, %r9079, 18;
	shf.r.wrap.b32 	%r9084, %r9079, %r9080, 18;
	mov.b64 	%rd2152, {%r9084, %r9083};
	xor.b64  	%rd2153, %rd2151, %rd2152;
	shf.l.wrap.b32 	%r9085, %r9079, %r9080, 23;
	shf.l.wrap.b32 	%r9086, %r9080, %r9079, 23;
	mov.b64 	%rd2154, {%r9086, %r9085};
	xor.b64  	%rd2155, %rd2153, %rd2154;
	xor.b64  	%rd2156, %rd2114, %rd2089;
	and.b64  	%rd2157, %rd2139, %rd2156;
	xor.b64  	%rd2158, %rd2157, %rd2089;
	ld.const.u64 	%rd2159, [%rd1850+96];
	add.s64 	%rd2160, %rd2159, %rd2281;
	add.s64 	%rd2161, %rd2160, %rd2064;
	add.s64 	%rd2162, %rd2161, %rd2158;
	add.s64 	%rd2163, %rd2162, %rd2155;
	add.s64 	%rd2293, %rd2163, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9087,%dummy}, %rd2150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9088}, %rd2150;
	}
	shf.r.wrap.b32 	%r9089, %r9088, %r9087, 28;
	shf.r.wrap.b32 	%r9090, %r9087, %r9088, 28;
	mov.b64 	%rd2164, {%r9090, %r9089};
	shf.l.wrap.b32 	%r9091, %r9087, %r9088, 30;
	shf.l.wrap.b32 	%r9092, %r9088, %r9087, 30;
	mov.b64 	%rd2165, {%r9092, %r9091};
	xor.b64  	%rd2166, %rd2164, %rd2165;
	shf.l.wrap.b32 	%r9093, %r9087, %r9088, 25;
	shf.l.wrap.b32 	%r9094, %r9088, %r9087, 25;
	mov.b64 	%rd2167, {%r9094, %r9093};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	and.b64  	%rd2169, %rd2150, %rd2125;
	xor.b64  	%rd2170, %rd2150, %rd2125;
	and.b64  	%rd2171, %rd2170, %rd2100;
	or.b64  	%rd2172, %rd2171, %rd2169;
	add.s64 	%rd2173, %rd2168, %rd2172;
	add.s64 	%rd2289, %rd2173, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9095,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9096}, %rd2293;
	}
	shf.r.wrap.b32 	%r9097, %r9096, %r9095, 14;
	shf.r.wrap.b32 	%r9098, %r9095, %r9096, 14;
	mov.b64 	%rd2174, {%r9098, %r9097};
	shf.r.wrap.b32 	%r9099, %r9096, %r9095, 18;
	shf.r.wrap.b32 	%r9100, %r9095, %r9096, 18;
	mov.b64 	%rd2175, {%r9100, %r9099};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	shf.l.wrap.b32 	%r9101, %r9095, %r9096, 23;
	shf.l.wrap.b32 	%r9102, %r9096, %r9095, 23;
	mov.b64 	%rd2177, {%r9102, %r9101};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd2139, %rd2114;
	and.b64  	%rd2180, %rd2293, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2114;
	ld.const.u64 	%rd2182, [%rd1850+104];
	add.s64 	%rd2183, %rd2182, %rd2280;
	add.s64 	%rd2184, %rd2183, %rd2089;
	add.s64 	%rd2185, %rd2184, %rd2181;
	add.s64 	%rd2186, %rd2185, %rd2178;
	add.s64 	%rd2292, %rd2186, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9103,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9104}, %rd2289;
	}
	shf.r.wrap.b32 	%r9105, %r9104, %r9103, 28;
	shf.r.wrap.b32 	%r9106, %r9103, %r9104, 28;
	mov.b64 	%rd2187, {%r9106, %r9105};
	shf.l.wrap.b32 	%r9107, %r9103, %r9104, 30;
	shf.l.wrap.b32 	%r9108, %r9104, %r9103, 30;
	mov.b64 	%rd2188, {%r9108, %r9107};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	shf.l.wrap.b32 	%r9109, %r9103, %r9104, 25;
	shf.l.wrap.b32 	%r9110, %r9104, %r9103, 25;
	mov.b64 	%rd2190, {%r9110, %r9109};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	and.b64  	%rd2192, %rd2289, %rd2150;
	xor.b64  	%rd2193, %rd2289, %rd2150;
	and.b64  	%rd2194, %rd2193, %rd2125;
	or.b64  	%rd2195, %rd2194, %rd2192;
	add.s64 	%rd2196, %rd2191, %rd2195;
	add.s64 	%rd2288, %rd2196, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9111,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9112}, %rd2292;
	}
	shf.r.wrap.b32 	%r9113, %r9112, %r9111, 14;
	shf.r.wrap.b32 	%r9114, %r9111, %r9112, 14;
	mov.b64 	%rd2197, {%r9114, %r9113};
	shf.r.wrap.b32 	%r9115, %r9112, %r9111, 18;
	shf.r.wrap.b32 	%r9116, %r9111, %r9112, 18;
	mov.b64 	%rd2198, {%r9116, %r9115};
	xor.b64  	%rd2199, %rd2197, %rd2198;
	shf.l.wrap.b32 	%r9117, %r9111, %r9112, 23;
	shf.l.wrap.b32 	%r9118, %r9112, %r9111, 23;
	mov.b64 	%rd2200, {%r9118, %r9117};
	xor.b64  	%rd2201, %rd2199, %rd2200;
	xor.b64  	%rd2202, %rd2293, %rd2139;
	and.b64  	%rd2203, %rd2292, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2139;
	ld.const.u64 	%rd2205, [%rd1850+112];
	add.s64 	%rd2206, %rd2205, %rd2279;
	add.s64 	%rd2207, %rd2206, %rd2114;
	add.s64 	%rd2208, %rd2207, %rd2204;
	add.s64 	%rd2209, %rd2208, %rd2201;
	add.s64 	%rd2291, %rd2209, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9119,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9120}, %rd2288;
	}
	shf.r.wrap.b32 	%r9121, %r9120, %r9119, 28;
	shf.r.wrap.b32 	%r9122, %r9119, %r9120, 28;
	mov.b64 	%rd2210, {%r9122, %r9121};
	shf.l.wrap.b32 	%r9123, %r9119, %r9120, 30;
	shf.l.wrap.b32 	%r9124, %r9120, %r9119, 30;
	mov.b64 	%rd2211, {%r9124, %r9123};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	shf.l.wrap.b32 	%r9125, %r9119, %r9120, 25;
	shf.l.wrap.b32 	%r9126, %r9120, %r9119, 25;
	mov.b64 	%rd2213, {%r9126, %r9125};
	xor.b64  	%rd2214, %rd2212, %rd2213;
	and.b64  	%rd2215, %rd2288, %rd2289;
	xor.b64  	%rd2216, %rd2288, %rd2289;
	and.b64  	%rd2217, %rd2216, %rd2150;
	or.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2214, %rd2218;
	add.s64 	%rd2287, %rd2219, %rd2209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9127,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9128}, %rd2291;
	}
	shf.r.wrap.b32 	%r9129, %r9128, %r9127, 14;
	shf.r.wrap.b32 	%r9130, %r9127, %r9128, 14;
	mov.b64 	%rd2220, {%r9130, %r9129};
	shf.r.wrap.b32 	%r9131, %r9128, %r9127, 18;
	shf.r.wrap.b32 	%r9132, %r9127, %r9128, 18;
	mov.b64 	%rd2221, {%r9132, %r9131};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	shf.l.wrap.b32 	%r9133, %r9127, %r9128, 23;
	shf.l.wrap.b32 	%r9134, %r9128, %r9127, 23;
	mov.b64 	%rd2223, {%r9134, %r9133};
	xor.b64  	%rd2224, %rd2222, %rd2223;
	xor.b64  	%rd2225, %rd2292, %rd2293;
	and.b64  	%rd2226, %rd2291, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2293;
	ld.const.u64 	%rd2228, [%rd1850+120];
	add.s64 	%rd2229, %rd2228, %rd2278;
	add.s64 	%rd2230, %rd2229, %rd2139;
	add.s64 	%rd2231, %rd2230, %rd2227;
	add.s64 	%rd2232, %rd2231, %rd2224;
	add.s64 	%rd2290, %rd2232, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9135,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9136}, %rd2287;
	}
	shf.r.wrap.b32 	%r9137, %r9136, %r9135, 28;
	shf.r.wrap.b32 	%r9138, %r9135, %r9136, 28;
	mov.b64 	%rd2233, {%r9138, %r9137};
	shf.l.wrap.b32 	%r9139, %r9135, %r9136, 30;
	shf.l.wrap.b32 	%r9140, %r9136, %r9135, 30;
	mov.b64 	%rd2234, {%r9140, %r9139};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	shf.l.wrap.b32 	%r9141, %r9135, %r9136, 25;
	shf.l.wrap.b32 	%r9142, %r9136, %r9135, 25;
	mov.b64 	%rd2236, {%r9142, %r9141};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	and.b64  	%rd2238, %rd2287, %rd2288;
	xor.b64  	%rd2239, %rd2287, %rd2288;
	and.b64  	%rd2240, %rd2239, %rd2289;
	or.b64  	%rd2241, %rd2240, %rd2238;
	add.s64 	%rd2242, %rd2237, %rd2241;
	add.s64 	%rd2286, %rd2242, %rd2232;
	add.s32 	%r9178, %r9178, 16;
	setp.lt.s32	%p100, %r9178, 80;
	@%p100 bra 	BB0_177;

	add.s64 	%rd2243, %rd117, %rd2286;
	st.local.u64 	[%rd9+-192], %rd2243;
	add.s64 	%rd2244, %rd118, %rd2287;
	st.local.u64 	[%rd9+-184], %rd2244;
	add.s64 	%rd2245, %rd119, %rd2288;
	st.local.u64 	[%rd9+-176], %rd2245;
	add.s64 	%rd2246, %rd116, %rd2289;
	st.local.u64 	[%rd9+-168], %rd2246;
	add.s64 	%rd2247, %rd112, %rd2290;
	st.local.u64 	[%rd9+-160], %rd2247;
	add.s64 	%rd2248, %rd114, %rd2291;
	st.local.u64 	[%rd9+-152], %rd2248;
	add.s64 	%rd2249, %rd113, %rd2292;
	st.local.u64 	[%rd9+-144], %rd2249;
	add.s64 	%rd2250, %rd115, %rd2293;
	st.local.u64 	[%rd9+-136], %rd2250;
	mov.u64 	%rd2251, 0;
	st.local.u32 	[%rd9+-124], %rd2251;
	st.local.u32 	[%rd9+-128], %rd2251;
	st.local.u32 	[%rd9+-116], %rd2251;
	st.local.u32 	[%rd9+-120], %rd2251;
	st.local.u32 	[%rd9+-108], %rd2251;
	st.local.u32 	[%rd9+-112], %rd2251;
	st.local.u32 	[%rd9+-100], %rd2251;
	st.local.u32 	[%rd9+-104], %rd2251;
	st.local.u32 	[%rd9+-92], %rd2251;
	st.local.u32 	[%rd9+-96], %rd2251;
	st.local.u32 	[%rd9+-84], %rd2251;
	st.local.u32 	[%rd9+-88], %rd2251;
	st.local.u32 	[%rd9+-76], %rd2251;
	st.local.u32 	[%rd9+-80], %rd2251;
	st.local.u32 	[%rd9+-68], %rd2251;
	st.local.u32 	[%rd9+-72], %rd2251;
	st.local.u32 	[%rd9+-60], %rd2251;
	st.local.u32 	[%rd9+-64], %rd2251;
	st.local.u32 	[%rd9+-52], %rd2251;
	st.local.u32 	[%rd9+-56], %rd2251;
	st.local.u32 	[%rd9+-44], %rd2251;
	st.local.u32 	[%rd9+-48], %rd2251;
	st.local.u32 	[%rd9+-36], %rd2251;
	st.local.u32 	[%rd9+-40], %rd2251;
	st.local.u32 	[%rd9+-28], %rd2251;
	st.local.u32 	[%rd9+-32], %rd2251;
	st.local.u32 	[%rd9+-20], %rd2251;
	st.local.u32 	[%rd9+-24], %rd2251;
	st.local.u32 	[%rd9+-12], %rd2251;
	st.local.u32 	[%rd9+-16], %rd2251;
	st.local.u32 	[%rd9+-4], %rd2251;
	st.local.u32 	[%rd9+-8], %rd2251;
	bra.uni 	BB0_179;

BB0_3:
	setp.gt.s32	%p4, %r3, 15;
	@%p4 bra 	BB0_36;

	setp.gt.s32	%p28, %r3, 7;
	@%p28 bra 	BB0_21;

	setp.gt.s32	%p40, %r3, 3;
	@%p40 bra 	BB0_14;

	setp.gt.s32	%p46, %r3, 1;
	@%p46 bra 	BB0_10;

	setp.eq.s32	%p49, %r3, 0;
	@%p49 bra 	BB0_88;
	bra.uni 	BB0_8;

BB0_88:
	ld.local.u32 	%r5204, [%rd8+12];
	mov.u32 	%r9144, 0;
	// inline asm
	prmt.b32 %r9147, %r9144, %r5204, %r4;
	// inline asm
	ld.local.u32 	%r5207, [%rd8+12];
	ld.local.u32 	%r5208, [%rd8+8];
	// inline asm
	prmt.b32 %r5206, %r5207, %r5208, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5206;
	ld.local.u32 	%r5211, [%rd8+8];
	ld.local.u32 	%r5212, [%rd8+4];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5210;
	ld.local.u32 	%r5215, [%rd8+4];
	ld.local.u32 	%r5216, [%rd8];
	// inline asm
	prmt.b32 %r5214, %r5215, %r5216, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5214;
	ld.local.u32 	%r5219, [%rd8];
	ld.local.u32 	%r5220, [%rd7+12];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5218;
	ld.local.u32 	%r5223, [%rd7+12];
	ld.local.u32 	%r5224, [%rd7+8];
	// inline asm
	prmt.b32 %r5222, %r5223, %r5224, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5222;
	ld.local.u32 	%r5227, [%rd7+8];
	ld.local.u32 	%r5228, [%rd7+4];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5226;
	ld.local.u32 	%r5231, [%rd7+4];
	ld.local.u32 	%r5232, [%rd7];
	// inline asm
	prmt.b32 %r5230, %r5231, %r5232, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5230;
	ld.local.u32 	%r5235, [%rd7];
	ld.local.u32 	%r5236, [%rd6+12];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5234;
	ld.local.u32 	%r5239, [%rd6+12];
	ld.local.u32 	%r5240, [%rd6+8];
	// inline asm
	prmt.b32 %r5238, %r5239, %r5240, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5238;
	ld.local.u32 	%r5243, [%rd6+8];
	ld.local.u32 	%r5244, [%rd6+4];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5242;
	ld.local.u32 	%r5247, [%rd6+4];
	ld.local.u32 	%r5248, [%rd6];
	// inline asm
	prmt.b32 %r5246, %r5247, %r5248, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5246;
	ld.local.u32 	%r5251, [%rd6];
	ld.local.u32 	%r5252, [%rd5+12];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5250;
	ld.local.u32 	%r5255, [%rd5+12];
	ld.local.u32 	%r5256, [%rd5+8];
	// inline asm
	prmt.b32 %r5254, %r5255, %r5256, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5254;
	ld.local.u32 	%r5259, [%rd5+8];
	ld.local.u32 	%r5260, [%rd5+4];
	// inline asm
	prmt.b32 %r5258, %r5259, %r5260, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5258;
	ld.local.u32 	%r5263, [%rd5+4];
	ld.local.u32 	%r5264, [%rd5];
	// inline asm
	prmt.b32 %r5262, %r5263, %r5264, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5262;
	ld.local.u32 	%r5267, [%rd5];
	ld.local.u32 	%r5268, [%rd4+12];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5266;
	ld.local.u32 	%r5271, [%rd4+12];
	ld.local.u32 	%r5272, [%rd4+8];
	// inline asm
	prmt.b32 %r5270, %r5271, %r5272, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5270;
	ld.local.u32 	%r5275, [%rd4+8];
	ld.local.u32 	%r5276, [%rd4+4];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5274;
	ld.local.u32 	%r5279, [%rd4+4];
	ld.local.u32 	%r5280, [%rd4];
	// inline asm
	prmt.b32 %r5278, %r5279, %r5280, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5278;
	ld.local.u32 	%r5283, [%rd4];
	ld.local.u32 	%r5284, [%rd3+12];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5282;
	ld.local.u32 	%r5287, [%rd3+12];
	ld.local.u32 	%r5288, [%rd3+8];
	// inline asm
	prmt.b32 %r5286, %r5287, %r5288, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5286;
	ld.local.u32 	%r5291, [%rd3+8];
	ld.local.u32 	%r5292, [%rd3+4];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5290;
	ld.local.u32 	%r5295, [%rd3+4];
	ld.local.u32 	%r5296, [%rd3];
	// inline asm
	prmt.b32 %r5294, %r5295, %r5296, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5294;
	ld.local.u32 	%r5299, [%rd3];
	ld.local.u32 	%r5300, [%rd2+12];
	// inline asm
	prmt.b32 %r5298, %r5299, %r5300, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5298;
	ld.local.u32 	%r5303, [%rd2+12];
	ld.local.u32 	%r5304, [%rd2+8];
	// inline asm
	prmt.b32 %r5302, %r5303, %r5304, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5302;
	ld.local.u32 	%r5307, [%rd2+8];
	ld.local.u32 	%r5308, [%rd2+4];
	// inline asm
	prmt.b32 %r5306, %r5307, %r5308, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5306;
	ld.local.u32 	%r5311, [%rd2+4];
	ld.local.u32 	%r5312, [%rd2];
	// inline asm
	prmt.b32 %r5310, %r5311, %r5312, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5310;
	ld.local.u32 	%r5315, [%rd2];
	ld.local.u32 	%r5316, [%rd1+12];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5314;
	ld.local.u32 	%r5319, [%rd1+12];
	ld.local.u32 	%r5320, [%rd1+8];
	// inline asm
	prmt.b32 %r5318, %r5319, %r5320, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5318;
	ld.local.u32 	%r5323, [%rd1+8];
	ld.local.u32 	%r5324, [%rd1+4];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5322;
	ld.local.u32 	%r5327, [%rd1+4];
	ld.local.u32 	%r5328, [%rd1];
	// inline asm
	prmt.b32 %r5326, %r5327, %r5328, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5326;
	ld.local.u32 	%r5331, [%rd1];
	// inline asm
	prmt.b32 %r9143, %r5331, %r9144, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r9143;
	mov.u32 	%r9145, %r9144;
	mov.u32 	%r9146, %r9144;
	bra.uni 	BB0_90;

BB0_126:
	setp.gt.s32	%p53, %r3, 23;
	@%p53 bra 	BB0_142;

	setp.gt.s32	%p65, %r3, 19;
	@%p65 bra 	BB0_135;

	setp.gt.s32	%p71, %r3, 17;
	@%p71 bra 	BB0_132;

	setp.eq.s32	%p74, %r3, 16;
	@%p74 bra 	BB0_164;
	bra.uni 	BB0_130;

BB0_164:
	ld.local.u32 	%r6702, [%rd4+12];
	ld.local.u32 	%r6703, [%rd4+8];
	// inline asm
	prmt.b32 %r6701, %r6702, %r6703, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6701;
	ld.local.u32 	%r6706, [%rd4+8];
	ld.local.u32 	%r6707, [%rd4+4];
	// inline asm
	prmt.b32 %r6705, %r6706, %r6707, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6705;
	ld.local.u32 	%r6710, [%rd4+4];
	ld.local.u32 	%r6711, [%rd4];
	// inline asm
	prmt.b32 %r6709, %r6710, %r6711, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6709;
	ld.local.u32 	%r6714, [%rd4];
	ld.local.u32 	%r6715, [%rd3+12];
	// inline asm
	prmt.b32 %r6713, %r6714, %r6715, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6713;
	ld.local.u32 	%r6718, [%rd3+12];
	ld.local.u32 	%r6719, [%rd3+8];
	// inline asm
	prmt.b32 %r6717, %r6718, %r6719, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6717;
	ld.local.u32 	%r6722, [%rd3+8];
	ld.local.u32 	%r6723, [%rd3+4];
	// inline asm
	prmt.b32 %r6721, %r6722, %r6723, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6721;
	ld.local.u32 	%r6726, [%rd3+4];
	ld.local.u32 	%r6727, [%rd3];
	// inline asm
	prmt.b32 %r6725, %r6726, %r6727, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6725;
	ld.local.u32 	%r6730, [%rd3];
	ld.local.u32 	%r6731, [%rd2+12];
	// inline asm
	prmt.b32 %r6729, %r6730, %r6731, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6729;
	ld.local.u32 	%r6734, [%rd2+12];
	ld.local.u32 	%r6735, [%rd2+8];
	// inline asm
	prmt.b32 %r6733, %r6734, %r6735, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6733;
	ld.local.u32 	%r6738, [%rd2+8];
	ld.local.u32 	%r6739, [%rd2+4];
	// inline asm
	prmt.b32 %r6737, %r6738, %r6739, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6737;
	ld.local.u32 	%r6742, [%rd2+4];
	ld.local.u32 	%r6743, [%rd2];
	// inline asm
	prmt.b32 %r6741, %r6742, %r6743, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6741;
	ld.local.u32 	%r6746, [%rd2];
	ld.local.u32 	%r6747, [%rd1+12];
	// inline asm
	prmt.b32 %r6745, %r6746, %r6747, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6745;
	ld.local.u32 	%r6750, [%rd1+12];
	ld.local.u32 	%r6751, [%rd1+8];
	// inline asm
	prmt.b32 %r6749, %r6750, %r6751, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6749;
	ld.local.u32 	%r6754, [%rd1+8];
	ld.local.u32 	%r6755, [%rd1+4];
	// inline asm
	prmt.b32 %r6753, %r6754, %r6755, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6753;
	ld.local.u32 	%r6758, [%rd1+4];
	ld.local.u32 	%r6759, [%rd1];
	// inline asm
	prmt.b32 %r6757, %r6758, %r6759, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6757;
	ld.local.u32 	%r6762, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6761, %r6762, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6761;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1249, 0;
	st.local.u32 	[%rd1+4], %rd1249;
	st.local.u32 	[%rd1], %rd1249;
	bra.uni 	BB0_174;

BB0_36:
	setp.gt.s32	%p5, %r3, 23;
	@%p5 bra 	BB0_52;

	setp.gt.s32	%p17, %r3, 19;
	@%p17 bra 	BB0_45;

	setp.gt.s32	%p23, %r3, 17;
	@%p23 bra 	BB0_42;

	setp.eq.s32	%p26, %r3, 16;
	@%p26 bra 	BB0_74;
	bra.uni 	BB0_40;

BB0_74:
	ld.local.u32 	%r2716, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9163, %r9143, %r2716, %r4;
	// inline asm
	ld.local.u32 	%r2719, [%rd8+12];
	ld.local.u32 	%r2720, [%rd8+8];
	// inline asm
	prmt.b32 %r9156, %r2719, %r2720, %r4;
	// inline asm
	ld.local.u32 	%r2723, [%rd8+8];
	ld.local.u32 	%r2724, [%rd8+4];
	// inline asm
	prmt.b32 %r9157, %r2723, %r2724, %r4;
	// inline asm
	ld.local.u32 	%r2727, [%rd8+4];
	ld.local.u32 	%r2728, [%rd8];
	// inline asm
	prmt.b32 %r9158, %r2727, %r2728, %r4;
	// inline asm
	ld.local.u32 	%r2731, [%rd8];
	ld.local.u32 	%r2732, [%rd7+12];
	// inline asm
	prmt.b32 %r9159, %r2731, %r2732, %r4;
	// inline asm
	ld.local.u32 	%r2735, [%rd7+12];
	ld.local.u32 	%r2736, [%rd7+8];
	// inline asm
	prmt.b32 %r9152, %r2735, %r2736, %r4;
	// inline asm
	ld.local.u32 	%r2739, [%rd7+8];
	ld.local.u32 	%r2740, [%rd7+4];
	// inline asm
	prmt.b32 %r9153, %r2739, %r2740, %r4;
	// inline asm
	ld.local.u32 	%r2743, [%rd7+4];
	ld.local.u32 	%r2744, [%rd7];
	// inline asm
	prmt.b32 %r9154, %r2743, %r2744, %r4;
	// inline asm
	ld.local.u32 	%r2747, [%rd7];
	ld.local.u32 	%r2748, [%rd6+12];
	// inline asm
	prmt.b32 %r9155, %r2747, %r2748, %r4;
	// inline asm
	ld.local.u32 	%r2751, [%rd6+12];
	ld.local.u32 	%r2752, [%rd6+8];
	// inline asm
	prmt.b32 %r9148, %r2751, %r2752, %r4;
	// inline asm
	ld.local.u32 	%r2755, [%rd6+8];
	ld.local.u32 	%r2756, [%rd6+4];
	// inline asm
	prmt.b32 %r9149, %r2755, %r2756, %r4;
	// inline asm
	ld.local.u32 	%r2759, [%rd6+4];
	ld.local.u32 	%r2760, [%rd6];
	// inline asm
	prmt.b32 %r9150, %r2759, %r2760, %r4;
	// inline asm
	ld.local.u32 	%r2763, [%rd6];
	ld.local.u32 	%r2764, [%rd5+12];
	// inline asm
	prmt.b32 %r9151, %r2763, %r2764, %r4;
	// inline asm
	ld.local.u32 	%r2767, [%rd5+12];
	ld.local.u32 	%r2768, [%rd5+8];
	// inline asm
	prmt.b32 %r9144, %r2767, %r2768, %r4;
	// inline asm
	ld.local.u32 	%r2771, [%rd5+8];
	ld.local.u32 	%r2772, [%rd5+4];
	// inline asm
	prmt.b32 %r9145, %r2771, %r2772, %r4;
	// inline asm
	ld.local.u32 	%r2775, [%rd5+4];
	ld.local.u32 	%r2776, [%rd5];
	// inline asm
	prmt.b32 %r9146, %r2775, %r2776, %r4;
	// inline asm
	ld.local.u32 	%r2779, [%rd5];
	ld.local.u32 	%r2780, [%rd4+12];
	// inline asm
	prmt.b32 %r9147, %r2779, %r2780, %r4;
	// inline asm
	ld.local.u32 	%r2783, [%rd4+12];
	ld.local.u32 	%r2784, [%rd4+8];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2782;
	ld.local.u32 	%r2787, [%rd4+8];
	ld.local.u32 	%r2788, [%rd4+4];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2786;
	ld.local.u32 	%r2791, [%rd4+4];
	ld.local.u32 	%r2792, [%rd4];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2790;
	ld.local.u32 	%r2795, [%rd4];
	ld.local.u32 	%r2796, [%rd3+12];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2794;
	ld.local.u32 	%r2799, [%rd3+12];
	ld.local.u32 	%r2800, [%rd3+8];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2798;
	ld.local.u32 	%r2803, [%rd3+8];
	ld.local.u32 	%r2804, [%rd3+4];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2802;
	ld.local.u32 	%r2807, [%rd3+4];
	ld.local.u32 	%r2808, [%rd3];
	// inline asm
	prmt.b32 %r2806, %r2807, %r2808, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2806;
	ld.local.u32 	%r2811, [%rd3];
	ld.local.u32 	%r2812, [%rd2+12];
	// inline asm
	prmt.b32 %r2810, %r2811, %r2812, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2810;
	ld.local.u32 	%r2815, [%rd2+12];
	ld.local.u32 	%r2816, [%rd2+8];
	// inline asm
	prmt.b32 %r2814, %r2815, %r2816, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2814;
	ld.local.u32 	%r2819, [%rd2+8];
	ld.local.u32 	%r2820, [%rd2+4];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2818;
	ld.local.u32 	%r2823, [%rd2+4];
	ld.local.u32 	%r2824, [%rd2];
	// inline asm
	prmt.b32 %r2822, %r2823, %r2824, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2822;
	ld.local.u32 	%r2827, [%rd2];
	ld.local.u32 	%r2828, [%rd1+12];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2826;
	ld.local.u32 	%r2831, [%rd1+12];
	ld.local.u32 	%r2832, [%rd1+8];
	// inline asm
	prmt.b32 %r2830, %r2831, %r2832, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2830;
	ld.local.u32 	%r2835, [%rd1+8];
	ld.local.u32 	%r2836, [%rd1+4];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2834;
	ld.local.u32 	%r2839, [%rd1+4];
	ld.local.u32 	%r2840, [%rd1];
	// inline asm
	prmt.b32 %r2838, %r2839, %r2840, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2838;
	ld.local.u32 	%r2843, [%rd1];
	// inline asm
	prmt.b32 %r2842, %r2843, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2842;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd201, 0;
	st.local.u32 	[%rd1+4], %rd201;
	st.local.u32 	[%rd1], %rd201;
	mov.u32 	%r9160, %r9143;
	mov.u32 	%r9161, %r9143;
	mov.u32 	%r9162, %r9143;
	bra.uni 	BB0_84;

BB0_111:
	setp.gt.s32	%p77, %r3, 11;
	@%p77 bra 	BB0_119;

	setp.gt.s32	%p83, %r3, 9;
	@%p83 bra 	BB0_116;

	setp.eq.s32	%p86, %r3, 8;
	@%p86 bra 	BB0_168;
	bra.uni 	BB0_114;

BB0_168:
	ld.local.u32 	%r7334, [%rd6+12];
	ld.local.u32 	%r7335, [%rd6+8];
	// inline asm
	prmt.b32 %r7333, %r7334, %r7335, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7333;
	ld.local.u32 	%r7338, [%rd6+8];
	ld.local.u32 	%r7339, [%rd6+4];
	// inline asm
	prmt.b32 %r7337, %r7338, %r7339, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7337;
	ld.local.u32 	%r7342, [%rd6+4];
	ld.local.u32 	%r7343, [%rd6];
	// inline asm
	prmt.b32 %r7341, %r7342, %r7343, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7341;
	ld.local.u32 	%r7346, [%rd6];
	ld.local.u32 	%r7347, [%rd5+12];
	// inline asm
	prmt.b32 %r7345, %r7346, %r7347, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7345;
	ld.local.u32 	%r7350, [%rd5+12];
	ld.local.u32 	%r7351, [%rd5+8];
	// inline asm
	prmt.b32 %r7349, %r7350, %r7351, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7349;
	ld.local.u32 	%r7354, [%rd5+8];
	ld.local.u32 	%r7355, [%rd5+4];
	// inline asm
	prmt.b32 %r7353, %r7354, %r7355, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7353;
	ld.local.u32 	%r7358, [%rd5+4];
	ld.local.u32 	%r7359, [%rd5];
	// inline asm
	prmt.b32 %r7357, %r7358, %r7359, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7357;
	ld.local.u32 	%r7362, [%rd5];
	ld.local.u32 	%r7363, [%rd4+12];
	// inline asm
	prmt.b32 %r7361, %r7362, %r7363, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7361;
	ld.local.u32 	%r7366, [%rd4+12];
	ld.local.u32 	%r7367, [%rd4+8];
	// inline asm
	prmt.b32 %r7365, %r7366, %r7367, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7365;
	ld.local.u32 	%r7370, [%rd4+8];
	ld.local.u32 	%r7371, [%rd4+4];
	// inline asm
	prmt.b32 %r7369, %r7370, %r7371, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7369;
	ld.local.u32 	%r7374, [%rd4+4];
	ld.local.u32 	%r7375, [%rd4];
	// inline asm
	prmt.b32 %r7373, %r7374, %r7375, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7373;
	ld.local.u32 	%r7378, [%rd4];
	ld.local.u32 	%r7379, [%rd3+12];
	// inline asm
	prmt.b32 %r7377, %r7378, %r7379, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7377;
	ld.local.u32 	%r7382, [%rd3+12];
	ld.local.u32 	%r7383, [%rd3+8];
	// inline asm
	prmt.b32 %r7381, %r7382, %r7383, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7381;
	ld.local.u32 	%r7386, [%rd3+8];
	ld.local.u32 	%r7387, [%rd3+4];
	// inline asm
	prmt.b32 %r7385, %r7386, %r7387, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7385;
	ld.local.u32 	%r7390, [%rd3+4];
	ld.local.u32 	%r7391, [%rd3];
	// inline asm
	prmt.b32 %r7389, %r7390, %r7391, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7389;
	ld.local.u32 	%r7394, [%rd3];
	ld.local.u32 	%r7395, [%rd2+12];
	// inline asm
	prmt.b32 %r7393, %r7394, %r7395, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7393;
	ld.local.u32 	%r7398, [%rd2+12];
	ld.local.u32 	%r7399, [%rd2+8];
	// inline asm
	prmt.b32 %r7397, %r7398, %r7399, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7397;
	ld.local.u32 	%r7402, [%rd2+8];
	ld.local.u32 	%r7403, [%rd2+4];
	// inline asm
	prmt.b32 %r7401, %r7402, %r7403, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7401;
	ld.local.u32 	%r7406, [%rd2+4];
	ld.local.u32 	%r7407, [%rd2];
	// inline asm
	prmt.b32 %r7405, %r7406, %r7407, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7405;
	ld.local.u32 	%r7410, [%rd2];
	ld.local.u32 	%r7411, [%rd1+12];
	// inline asm
	prmt.b32 %r7409, %r7410, %r7411, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7409;
	ld.local.u32 	%r7414, [%rd1+12];
	ld.local.u32 	%r7415, [%rd1+8];
	// inline asm
	prmt.b32 %r7413, %r7414, %r7415, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7413;
	ld.local.u32 	%r7418, [%rd1+8];
	ld.local.u32 	%r7419, [%rd1+4];
	// inline asm
	prmt.b32 %r7417, %r7418, %r7419, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7417;
	ld.local.u32 	%r7422, [%rd1+4];
	ld.local.u32 	%r7423, [%rd1];
	// inline asm
	prmt.b32 %r7421, %r7422, %r7423, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7421;
	ld.local.u32 	%r7426, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7425, %r7426, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7425;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1257, 0;
	st.local.u32 	[%rd1+4], %rd1257;
	st.local.u32 	[%rd1], %rd1257;
	bra.uni 	BB0_174;

BB0_21:
	setp.gt.s32	%p29, %r3, 11;
	@%p29 bra 	BB0_29;

	setp.gt.s32	%p35, %r3, 9;
	@%p35 bra 	BB0_26;

	setp.eq.s32	%p38, %r3, 8;
	@%p38 bra 	BB0_78;
	bra.uni 	BB0_24;

BB0_78:
	ld.local.u32 	%r3928, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9155, %r9143, %r3928, %r4;
	// inline asm
	ld.local.u32 	%r3931, [%rd8+12];
	ld.local.u32 	%r3932, [%rd8+8];
	// inline asm
	prmt.b32 %r9148, %r3931, %r3932, %r4;
	// inline asm
	ld.local.u32 	%r3935, [%rd8+8];
	ld.local.u32 	%r3936, [%rd8+4];
	// inline asm
	prmt.b32 %r9149, %r3935, %r3936, %r4;
	// inline asm
	ld.local.u32 	%r3939, [%rd8+4];
	ld.local.u32 	%r3940, [%rd8];
	// inline asm
	prmt.b32 %r9150, %r3939, %r3940, %r4;
	// inline asm
	ld.local.u32 	%r3943, [%rd8];
	ld.local.u32 	%r3944, [%rd7+12];
	// inline asm
	prmt.b32 %r9151, %r3943, %r3944, %r4;
	// inline asm
	ld.local.u32 	%r3947, [%rd7+12];
	ld.local.u32 	%r3948, [%rd7+8];
	// inline asm
	prmt.b32 %r9144, %r3947, %r3948, %r4;
	// inline asm
	ld.local.u32 	%r3951, [%rd7+8];
	ld.local.u32 	%r3952, [%rd7+4];
	// inline asm
	prmt.b32 %r9145, %r3951, %r3952, %r4;
	// inline asm
	ld.local.u32 	%r3955, [%rd7+4];
	ld.local.u32 	%r3956, [%rd7];
	// inline asm
	prmt.b32 %r9146, %r3955, %r3956, %r4;
	// inline asm
	ld.local.u32 	%r3959, [%rd7];
	ld.local.u32 	%r3960, [%rd6+12];
	// inline asm
	prmt.b32 %r9147, %r3959, %r3960, %r4;
	// inline asm
	ld.local.u32 	%r3963, [%rd6+12];
	ld.local.u32 	%r3964, [%rd6+8];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3962;
	ld.local.u32 	%r3967, [%rd6+8];
	ld.local.u32 	%r3968, [%rd6+4];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3966;
	ld.local.u32 	%r3971, [%rd6+4];
	ld.local.u32 	%r3972, [%rd6];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3970;
	ld.local.u32 	%r3975, [%rd6];
	ld.local.u32 	%r3976, [%rd5+12];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3974;
	ld.local.u32 	%r3979, [%rd5+12];
	ld.local.u32 	%r3980, [%rd5+8];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3978;
	ld.local.u32 	%r3983, [%rd5+8];
	ld.local.u32 	%r3984, [%rd5+4];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3982;
	ld.local.u32 	%r3987, [%rd5+4];
	ld.local.u32 	%r3988, [%rd5];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3986;
	ld.local.u32 	%r3991, [%rd5];
	ld.local.u32 	%r3992, [%rd4+12];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3990;
	ld.local.u32 	%r3995, [%rd4+12];
	ld.local.u32 	%r3996, [%rd4+8];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3994;
	ld.local.u32 	%r3999, [%rd4+8];
	ld.local.u32 	%r4000, [%rd4+4];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3998;
	ld.local.u32 	%r4003, [%rd4+4];
	ld.local.u32 	%r4004, [%rd4];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4002;
	ld.local.u32 	%r4007, [%rd4];
	ld.local.u32 	%r4008, [%rd3+12];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4006;
	ld.local.u32 	%r4011, [%rd3+12];
	ld.local.u32 	%r4012, [%rd3+8];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4010;
	ld.local.u32 	%r4015, [%rd3+8];
	ld.local.u32 	%r4016, [%rd3+4];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4014;
	ld.local.u32 	%r4019, [%rd3+4];
	ld.local.u32 	%r4020, [%rd3];
	// inline asm
	prmt.b32 %r4018, %r4019, %r4020, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4018;
	ld.local.u32 	%r4023, [%rd3];
	ld.local.u32 	%r4024, [%rd2+12];
	// inline asm
	prmt.b32 %r4022, %r4023, %r4024, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4022;
	ld.local.u32 	%r4027, [%rd2+12];
	ld.local.u32 	%r4028, [%rd2+8];
	// inline asm
	prmt.b32 %r4026, %r4027, %r4028, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4026;
	ld.local.u32 	%r4031, [%rd2+8];
	ld.local.u32 	%r4032, [%rd2+4];
	// inline asm
	prmt.b32 %r4030, %r4031, %r4032, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4030;
	ld.local.u32 	%r4035, [%rd2+4];
	ld.local.u32 	%r4036, [%rd2];
	// inline asm
	prmt.b32 %r4034, %r4035, %r4036, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4034;
	ld.local.u32 	%r4039, [%rd2];
	ld.local.u32 	%r4040, [%rd1+12];
	// inline asm
	prmt.b32 %r4038, %r4039, %r4040, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4038;
	ld.local.u32 	%r4043, [%rd1+12];
	ld.local.u32 	%r4044, [%rd1+8];
	// inline asm
	prmt.b32 %r4042, %r4043, %r4044, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4042;
	ld.local.u32 	%r4047, [%rd1+8];
	ld.local.u32 	%r4048, [%rd1+4];
	// inline asm
	prmt.b32 %r4046, %r4047, %r4048, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4046;
	ld.local.u32 	%r4051, [%rd1+4];
	ld.local.u32 	%r4052, [%rd1];
	// inline asm
	prmt.b32 %r4050, %r4051, %r4052, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4050;
	ld.local.u32 	%r4055, [%rd1];
	// inline asm
	prmt.b32 %r4054, %r4055, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4054;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd209, 0;
	st.local.u32 	[%rd1+4], %rd209;
	st.local.u32 	[%rd1], %rd209;
	mov.u32 	%r9152, %r9143;
	mov.u32 	%r9153, %r9143;
	mov.u32 	%r9154, %r9143;
	bra.uni 	BB0_82;

BB0_142:
	setp.gt.s32	%p54, %r3, 27;
	@%p54 bra 	BB0_150;

	setp.gt.s32	%p60, %r3, 25;
	@%p60 bra 	BB0_147;

	setp.eq.s32	%p63, %r3, 24;
	@%p63 bra 	BB0_160;
	bra.uni 	BB0_145;

BB0_160:
	ld.local.u32 	%r6326, [%rd2+12];
	ld.local.u32 	%r6327, [%rd2+8];
	// inline asm
	prmt.b32 %r6325, %r6326, %r6327, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6325;
	ld.local.u32 	%r6330, [%rd2+8];
	ld.local.u32 	%r6331, [%rd2+4];
	// inline asm
	prmt.b32 %r6329, %r6330, %r6331, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6329;
	ld.local.u32 	%r6334, [%rd2+4];
	ld.local.u32 	%r6335, [%rd2];
	// inline asm
	prmt.b32 %r6333, %r6334, %r6335, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6333;
	ld.local.u32 	%r6338, [%rd2];
	ld.local.u32 	%r6339, [%rd1+12];
	// inline asm
	prmt.b32 %r6337, %r6338, %r6339, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6337;
	ld.local.u32 	%r6342, [%rd1+12];
	ld.local.u32 	%r6343, [%rd1+8];
	// inline asm
	prmt.b32 %r6341, %r6342, %r6343, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6341;
	ld.local.u32 	%r6346, [%rd1+8];
	ld.local.u32 	%r6347, [%rd1+4];
	// inline asm
	prmt.b32 %r6345, %r6346, %r6347, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6345;
	ld.local.u32 	%r6350, [%rd1+4];
	ld.local.u32 	%r6351, [%rd1];
	// inline asm
	prmt.b32 %r6349, %r6350, %r6351, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6349;
	ld.local.u32 	%r6354, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6353, %r6354, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6353;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1241, 0;
	st.local.u32 	[%rd1+4], %rd1241;
	st.local.u32 	[%rd1], %rd1241;
	bra.uni 	BB0_174;

BB0_52:
	setp.gt.s32	%p6, %r3, 27;
	@%p6 bra 	BB0_60;

	setp.gt.s32	%p12, %r3, 25;
	@%p12 bra 	BB0_57;

	setp.eq.s32	%p15, %r3, 24;
	@%p15 bra 	BB0_70;
	bra.uni 	BB0_55;

BB0_70:
	ld.local.u32 	%r1568, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9171, %r9143, %r1568, %r4;
	// inline asm
	ld.local.u32 	%r1571, [%rd8+12];
	ld.local.u32 	%r1572, [%rd8+8];
	// inline asm
	prmt.b32 %r9164, %r1571, %r1572, %r4;
	// inline asm
	ld.local.u32 	%r1575, [%rd8+8];
	ld.local.u32 	%r1576, [%rd8+4];
	// inline asm
	prmt.b32 %r9165, %r1575, %r1576, %r4;
	// inline asm
	ld.local.u32 	%r1579, [%rd8+4];
	ld.local.u32 	%r1580, [%rd8];
	// inline asm
	prmt.b32 %r9166, %r1579, %r1580, %r4;
	// inline asm
	ld.local.u32 	%r1583, [%rd8];
	ld.local.u32 	%r1584, [%rd7+12];
	// inline asm
	prmt.b32 %r9167, %r1583, %r1584, %r4;
	// inline asm
	ld.local.u32 	%r1587, [%rd7+12];
	ld.local.u32 	%r1588, [%rd7+8];
	// inline asm
	prmt.b32 %r9160, %r1587, %r1588, %r4;
	// inline asm
	ld.local.u32 	%r1591, [%rd7+8];
	ld.local.u32 	%r1592, [%rd7+4];
	// inline asm
	prmt.b32 %r9161, %r1591, %r1592, %r4;
	// inline asm
	ld.local.u32 	%r1595, [%rd7+4];
	ld.local.u32 	%r1596, [%rd7];
	// inline asm
	prmt.b32 %r9162, %r1595, %r1596, %r4;
	// inline asm
	ld.local.u32 	%r1599, [%rd7];
	ld.local.u32 	%r1600, [%rd6+12];
	// inline asm
	prmt.b32 %r9163, %r1599, %r1600, %r4;
	// inline asm
	ld.local.u32 	%r1603, [%rd6+12];
	ld.local.u32 	%r1604, [%rd6+8];
	// inline asm
	prmt.b32 %r9156, %r1603, %r1604, %r4;
	// inline asm
	ld.local.u32 	%r1607, [%rd6+8];
	ld.local.u32 	%r1608, [%rd6+4];
	// inline asm
	prmt.b32 %r9157, %r1607, %r1608, %r4;
	// inline asm
	ld.local.u32 	%r1611, [%rd6+4];
	ld.local.u32 	%r1612, [%rd6];
	// inline asm
	prmt.b32 %r9158, %r1611, %r1612, %r4;
	// inline asm
	ld.local.u32 	%r1615, [%rd6];
	ld.local.u32 	%r1616, [%rd5+12];
	// inline asm
	prmt.b32 %r9159, %r1615, %r1616, %r4;
	// inline asm
	ld.local.u32 	%r1619, [%rd5+12];
	ld.local.u32 	%r1620, [%rd5+8];
	// inline asm
	prmt.b32 %r9152, %r1619, %r1620, %r4;
	// inline asm
	ld.local.u32 	%r1623, [%rd5+8];
	ld.local.u32 	%r1624, [%rd5+4];
	// inline asm
	prmt.b32 %r9153, %r1623, %r1624, %r4;
	// inline asm
	ld.local.u32 	%r1627, [%rd5+4];
	ld.local.u32 	%r1628, [%rd5];
	// inline asm
	prmt.b32 %r9154, %r1627, %r1628, %r4;
	// inline asm
	ld.local.u32 	%r1631, [%rd5];
	ld.local.u32 	%r1632, [%rd4+12];
	// inline asm
	prmt.b32 %r9155, %r1631, %r1632, %r4;
	// inline asm
	ld.local.u32 	%r1635, [%rd4+12];
	ld.local.u32 	%r1636, [%rd4+8];
	// inline asm
	prmt.b32 %r9148, %r1635, %r1636, %r4;
	// inline asm
	ld.local.u32 	%r1639, [%rd4+8];
	ld.local.u32 	%r1640, [%rd4+4];
	// inline asm
	prmt.b32 %r9149, %r1639, %r1640, %r4;
	// inline asm
	ld.local.u32 	%r1643, [%rd4+4];
	ld.local.u32 	%r1644, [%rd4];
	// inline asm
	prmt.b32 %r9150, %r1643, %r1644, %r4;
	// inline asm
	ld.local.u32 	%r1647, [%rd4];
	ld.local.u32 	%r1648, [%rd3+12];
	// inline asm
	prmt.b32 %r9151, %r1647, %r1648, %r4;
	// inline asm
	ld.local.u32 	%r1651, [%rd3+12];
	ld.local.u32 	%r1652, [%rd3+8];
	// inline asm
	prmt.b32 %r9144, %r1651, %r1652, %r4;
	// inline asm
	ld.local.u32 	%r1655, [%rd3+8];
	ld.local.u32 	%r1656, [%rd3+4];
	// inline asm
	prmt.b32 %r9145, %r1655, %r1656, %r4;
	// inline asm
	ld.local.u32 	%r1659, [%rd3+4];
	ld.local.u32 	%r1660, [%rd3];
	// inline asm
	prmt.b32 %r9146, %r1659, %r1660, %r4;
	// inline asm
	ld.local.u32 	%r1663, [%rd3];
	ld.local.u32 	%r1664, [%rd2+12];
	// inline asm
	prmt.b32 %r9147, %r1663, %r1664, %r4;
	// inline asm
	ld.local.u32 	%r1667, [%rd2+12];
	ld.local.u32 	%r1668, [%rd2+8];
	// inline asm
	prmt.b32 %r1666, %r1667, %r1668, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1666;
	ld.local.u32 	%r1671, [%rd2+8];
	ld.local.u32 	%r1672, [%rd2+4];
	// inline asm
	prmt.b32 %r1670, %r1671, %r1672, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1670;
	ld.local.u32 	%r1675, [%rd2+4];
	ld.local.u32 	%r1676, [%rd2];
	// inline asm
	prmt.b32 %r1674, %r1675, %r1676, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1674;
	ld.local.u32 	%r1679, [%rd2];
	ld.local.u32 	%r1680, [%rd1+12];
	// inline asm
	prmt.b32 %r1678, %r1679, %r1680, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1678;
	ld.local.u32 	%r1683, [%rd1+12];
	ld.local.u32 	%r1684, [%rd1+8];
	// inline asm
	prmt.b32 %r1682, %r1683, %r1684, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1682;
	ld.local.u32 	%r1687, [%rd1+8];
	ld.local.u32 	%r1688, [%rd1+4];
	// inline asm
	prmt.b32 %r1686, %r1687, %r1688, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1686;
	ld.local.u32 	%r1691, [%rd1+4];
	ld.local.u32 	%r1692, [%rd1];
	// inline asm
	prmt.b32 %r1690, %r1691, %r1692, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1690;
	ld.local.u32 	%r1695, [%rd1];
	// inline asm
	prmt.b32 %r1694, %r1695, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1694;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd193, 0;
	st.local.u32 	[%rd1+4], %rd193;
	st.local.u32 	[%rd1], %rd193;
	mov.u32 	%r9168, %r9143;
	mov.u32 	%r9169, %r9143;
	mov.u32 	%r9170, %r9143;
	bra.uni 	BB0_86;

BB0_104:
	setp.gt.s32	%p89, %r3, 5;
	@%p89 bra 	BB0_108;

	setp.eq.s32	%p92, %r3, 4;
	@%p92 bra 	BB0_170;
	bra.uni 	BB0_106;

BB0_170:
	ld.local.u32 	%r7746, [%rd7+12];
	ld.local.u32 	%r7747, [%rd7+8];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7745;
	ld.local.u32 	%r7750, [%rd7+8];
	ld.local.u32 	%r7751, [%rd7+4];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7749;
	ld.local.u32 	%r7754, [%rd7+4];
	ld.local.u32 	%r7755, [%rd7];
	// inline asm
	prmt.b32 %r7753, %r7754, %r7755, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7753;
	ld.local.u32 	%r7758, [%rd7];
	ld.local.u32 	%r7759, [%rd6+12];
	// inline asm
	prmt.b32 %r7757, %r7758, %r7759, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7757;
	ld.local.u32 	%r7762, [%rd6+12];
	ld.local.u32 	%r7763, [%rd6+8];
	// inline asm
	prmt.b32 %r7761, %r7762, %r7763, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7761;
	ld.local.u32 	%r7766, [%rd6+8];
	ld.local.u32 	%r7767, [%rd6+4];
	// inline asm
	prmt.b32 %r7765, %r7766, %r7767, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7765;
	ld.local.u32 	%r7770, [%rd6+4];
	ld.local.u32 	%r7771, [%rd6];
	// inline asm
	prmt.b32 %r7769, %r7770, %r7771, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7769;
	ld.local.u32 	%r7774, [%rd6];
	ld.local.u32 	%r7775, [%rd5+12];
	// inline asm
	prmt.b32 %r7773, %r7774, %r7775, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7773;
	ld.local.u32 	%r7778, [%rd5+12];
	ld.local.u32 	%r7779, [%rd5+8];
	// inline asm
	prmt.b32 %r7777, %r7778, %r7779, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7777;
	ld.local.u32 	%r7782, [%rd5+8];
	ld.local.u32 	%r7783, [%rd5+4];
	// inline asm
	prmt.b32 %r7781, %r7782, %r7783, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7781;
	ld.local.u32 	%r7786, [%rd5+4];
	ld.local.u32 	%r7787, [%rd5];
	// inline asm
	prmt.b32 %r7785, %r7786, %r7787, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7785;
	ld.local.u32 	%r7790, [%rd5];
	ld.local.u32 	%r7791, [%rd4+12];
	// inline asm
	prmt.b32 %r7789, %r7790, %r7791, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7789;
	ld.local.u32 	%r7794, [%rd4+12];
	ld.local.u32 	%r7795, [%rd4+8];
	// inline asm
	prmt.b32 %r7793, %r7794, %r7795, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7793;
	ld.local.u32 	%r7798, [%rd4+8];
	ld.local.u32 	%r7799, [%rd4+4];
	// inline asm
	prmt.b32 %r7797, %r7798, %r7799, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7797;
	ld.local.u32 	%r7802, [%rd4+4];
	ld.local.u32 	%r7803, [%rd4];
	// inline asm
	prmt.b32 %r7801, %r7802, %r7803, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7801;
	ld.local.u32 	%r7806, [%rd4];
	ld.local.u32 	%r7807, [%rd3+12];
	// inline asm
	prmt.b32 %r7805, %r7806, %r7807, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7805;
	ld.local.u32 	%r7810, [%rd3+12];
	ld.local.u32 	%r7811, [%rd3+8];
	// inline asm
	prmt.b32 %r7809, %r7810, %r7811, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7809;
	ld.local.u32 	%r7814, [%rd3+8];
	ld.local.u32 	%r7815, [%rd3+4];
	// inline asm
	prmt.b32 %r7813, %r7814, %r7815, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7813;
	ld.local.u32 	%r7818, [%rd3+4];
	ld.local.u32 	%r7819, [%rd3];
	// inline asm
	prmt.b32 %r7817, %r7818, %r7819, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7817;
	ld.local.u32 	%r7822, [%rd3];
	ld.local.u32 	%r7823, [%rd2+12];
	// inline asm
	prmt.b32 %r7821, %r7822, %r7823, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7821;
	ld.local.u32 	%r7826, [%rd2+12];
	ld.local.u32 	%r7827, [%rd2+8];
	// inline asm
	prmt.b32 %r7825, %r7826, %r7827, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7825;
	ld.local.u32 	%r7830, [%rd2+8];
	ld.local.u32 	%r7831, [%rd2+4];
	// inline asm
	prmt.b32 %r7829, %r7830, %r7831, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7829;
	ld.local.u32 	%r7834, [%rd2+4];
	ld.local.u32 	%r7835, [%rd2];
	// inline asm
	prmt.b32 %r7833, %r7834, %r7835, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7833;
	ld.local.u32 	%r7838, [%rd2];
	ld.local.u32 	%r7839, [%rd1+12];
	// inline asm
	prmt.b32 %r7837, %r7838, %r7839, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7837;
	ld.local.u32 	%r7842, [%rd1+12];
	ld.local.u32 	%r7843, [%rd1+8];
	// inline asm
	prmt.b32 %r7841, %r7842, %r7843, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7841;
	ld.local.u32 	%r7846, [%rd1+8];
	ld.local.u32 	%r7847, [%rd1+4];
	// inline asm
	prmt.b32 %r7845, %r7846, %r7847, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7845;
	ld.local.u32 	%r7850, [%rd1+4];
	ld.local.u32 	%r7851, [%rd1];
	// inline asm
	prmt.b32 %r7849, %r7850, %r7851, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7849;
	ld.local.u32 	%r7854, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7853, %r7854, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7853;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1261, 0;
	st.local.u32 	[%rd1+4], %rd1261;
	st.local.u32 	[%rd1], %rd1261;
	bra.uni 	BB0_174;

BB0_14:
	setp.gt.s32	%p41, %r3, 5;
	@%p41 bra 	BB0_18;

	setp.eq.s32	%p44, %r3, 4;
	@%p44 bra 	BB0_80;
	bra.uni 	BB0_16;

BB0_80:
	ld.local.u32 	%r4558, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9151, %r9143, %r4558, %r4;
	// inline asm
	ld.local.u32 	%r4561, [%rd8+12];
	ld.local.u32 	%r4562, [%rd8+8];
	// inline asm
	prmt.b32 %r9144, %r4561, %r4562, %r4;
	// inline asm
	ld.local.u32 	%r4565, [%rd8+8];
	ld.local.u32 	%r4566, [%rd8+4];
	// inline asm
	prmt.b32 %r9145, %r4565, %r4566, %r4;
	// inline asm
	ld.local.u32 	%r4569, [%rd8+4];
	ld.local.u32 	%r4570, [%rd8];
	// inline asm
	prmt.b32 %r9146, %r4569, %r4570, %r4;
	// inline asm
	ld.local.u32 	%r4573, [%rd8];
	ld.local.u32 	%r4574, [%rd7+12];
	// inline asm
	prmt.b32 %r9147, %r4573, %r4574, %r4;
	// inline asm
	ld.local.u32 	%r4577, [%rd7+12];
	ld.local.u32 	%r4578, [%rd7+8];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4576;
	ld.local.u32 	%r4581, [%rd7+8];
	ld.local.u32 	%r4582, [%rd7+4];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4580;
	ld.local.u32 	%r4585, [%rd7+4];
	ld.local.u32 	%r4586, [%rd7];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4584;
	ld.local.u32 	%r4589, [%rd7];
	ld.local.u32 	%r4590, [%rd6+12];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4588;
	ld.local.u32 	%r4593, [%rd6+12];
	ld.local.u32 	%r4594, [%rd6+8];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4592;
	ld.local.u32 	%r4597, [%rd6+8];
	ld.local.u32 	%r4598, [%rd6+4];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4596;
	ld.local.u32 	%r4601, [%rd6+4];
	ld.local.u32 	%r4602, [%rd6];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4600;
	ld.local.u32 	%r4605, [%rd6];
	ld.local.u32 	%r4606, [%rd5+12];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4604;
	ld.local.u32 	%r4609, [%rd5+12];
	ld.local.u32 	%r4610, [%rd5+8];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4608;
	ld.local.u32 	%r4613, [%rd5+8];
	ld.local.u32 	%r4614, [%rd5+4];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4612;
	ld.local.u32 	%r4617, [%rd5+4];
	ld.local.u32 	%r4618, [%rd5];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4616;
	ld.local.u32 	%r4621, [%rd5];
	ld.local.u32 	%r4622, [%rd4+12];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4620;
	ld.local.u32 	%r4625, [%rd4+12];
	ld.local.u32 	%r4626, [%rd4+8];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4624;
	ld.local.u32 	%r4629, [%rd4+8];
	ld.local.u32 	%r4630, [%rd4+4];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4628;
	ld.local.u32 	%r4633, [%rd4+4];
	ld.local.u32 	%r4634, [%rd4];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4632;
	ld.local.u32 	%r4637, [%rd4];
	ld.local.u32 	%r4638, [%rd3+12];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4636;
	ld.local.u32 	%r4641, [%rd3+12];
	ld.local.u32 	%r4642, [%rd3+8];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4640;
	ld.local.u32 	%r4645, [%rd3+8];
	ld.local.u32 	%r4646, [%rd3+4];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4644;
	ld.local.u32 	%r4649, [%rd3+4];
	ld.local.u32 	%r4650, [%rd3];
	// inline asm
	prmt.b32 %r4648, %r4649, %r4650, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4648;
	ld.local.u32 	%r4653, [%rd3];
	ld.local.u32 	%r4654, [%rd2+12];
	// inline asm
	prmt.b32 %r4652, %r4653, %r4654, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4652;
	ld.local.u32 	%r4657, [%rd2+12];
	ld.local.u32 	%r4658, [%rd2+8];
	// inline asm
	prmt.b32 %r4656, %r4657, %r4658, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4656;
	ld.local.u32 	%r4661, [%rd2+8];
	ld.local.u32 	%r4662, [%rd2+4];
	// inline asm
	prmt.b32 %r4660, %r4661, %r4662, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4660;
	ld.local.u32 	%r4665, [%rd2+4];
	ld.local.u32 	%r4666, [%rd2];
	// inline asm
	prmt.b32 %r4664, %r4665, %r4666, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4664;
	ld.local.u32 	%r4669, [%rd2];
	ld.local.u32 	%r4670, [%rd1+12];
	// inline asm
	prmt.b32 %r4668, %r4669, %r4670, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4668;
	ld.local.u32 	%r4673, [%rd1+12];
	ld.local.u32 	%r4674, [%rd1+8];
	// inline asm
	prmt.b32 %r4672, %r4673, %r4674, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4672;
	ld.local.u32 	%r4677, [%rd1+8];
	ld.local.u32 	%r4678, [%rd1+4];
	// inline asm
	prmt.b32 %r4676, %r4677, %r4678, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4676;
	ld.local.u32 	%r4681, [%rd1+4];
	ld.local.u32 	%r4682, [%rd1];
	// inline asm
	prmt.b32 %r4680, %r4681, %r4682, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4680;
	ld.local.u32 	%r4685, [%rd1];
	// inline asm
	prmt.b32 %r4684, %r4685, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4684;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd213, 0;
	st.local.u32 	[%rd1+4], %rd213;
	st.local.u32 	[%rd1], %rd213;
	mov.u32 	%r9148, %r9143;
	mov.u32 	%r9149, %r9143;
	mov.u32 	%r9150, %r9143;
	bra.uni 	BB0_81;

BB0_135:
	setp.gt.s32	%p66, %r3, 21;
	@%p66 bra 	BB0_139;

	setp.eq.s32	%p69, %r3, 20;
	@%p69 bra 	BB0_162;
	bra.uni 	BB0_137;

BB0_162:
	ld.local.u32 	%r6482, [%rd3+12];
	ld.local.u32 	%r6483, [%rd3+8];
	// inline asm
	prmt.b32 %r6481, %r6482, %r6483, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6481;
	ld.local.u32 	%r6486, [%rd3+8];
	ld.local.u32 	%r6487, [%rd3+4];
	// inline asm
	prmt.b32 %r6485, %r6486, %r6487, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6485;
	ld.local.u32 	%r6490, [%rd3+4];
	ld.local.u32 	%r6491, [%rd3];
	// inline asm
	prmt.b32 %r6489, %r6490, %r6491, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6489;
	ld.local.u32 	%r6494, [%rd3];
	ld.local.u32 	%r6495, [%rd2+12];
	// inline asm
	prmt.b32 %r6493, %r6494, %r6495, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6493;
	ld.local.u32 	%r6498, [%rd2+12];
	ld.local.u32 	%r6499, [%rd2+8];
	// inline asm
	prmt.b32 %r6497, %r6498, %r6499, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6497;
	ld.local.u32 	%r6502, [%rd2+8];
	ld.local.u32 	%r6503, [%rd2+4];
	// inline asm
	prmt.b32 %r6501, %r6502, %r6503, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6501;
	ld.local.u32 	%r6506, [%rd2+4];
	ld.local.u32 	%r6507, [%rd2];
	// inline asm
	prmt.b32 %r6505, %r6506, %r6507, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6505;
	ld.local.u32 	%r6510, [%rd2];
	ld.local.u32 	%r6511, [%rd1+12];
	// inline asm
	prmt.b32 %r6509, %r6510, %r6511, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6509;
	ld.local.u32 	%r6514, [%rd1+12];
	ld.local.u32 	%r6515, [%rd1+8];
	// inline asm
	prmt.b32 %r6513, %r6514, %r6515, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6513;
	ld.local.u32 	%r6518, [%rd1+8];
	ld.local.u32 	%r6519, [%rd1+4];
	// inline asm
	prmt.b32 %r6517, %r6518, %r6519, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6517;
	ld.local.u32 	%r6522, [%rd1+4];
	ld.local.u32 	%r6523, [%rd1];
	// inline asm
	prmt.b32 %r6521, %r6522, %r6523, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6521;
	ld.local.u32 	%r6526, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6525, %r6526, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6525;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1245, 0;
	st.local.u32 	[%rd1+4], %rd1245;
	st.local.u32 	[%rd1], %rd1245;
	bra.uni 	BB0_174;

BB0_45:
	setp.gt.s32	%p18, %r3, 21;
	@%p18 bra 	BB0_49;

	setp.eq.s32	%p21, %r3, 20;
	@%p21 bra 	BB0_72;
	bra.uni 	BB0_47;

BB0_72:
	ld.local.u32 	%r2134, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9167, %r9143, %r2134, %r4;
	// inline asm
	ld.local.u32 	%r2137, [%rd8+12];
	ld.local.u32 	%r2138, [%rd8+8];
	// inline asm
	prmt.b32 %r9160, %r2137, %r2138, %r4;
	// inline asm
	ld.local.u32 	%r2141, [%rd8+8];
	ld.local.u32 	%r2142, [%rd8+4];
	// inline asm
	prmt.b32 %r9161, %r2141, %r2142, %r4;
	// inline asm
	ld.local.u32 	%r2145, [%rd8+4];
	ld.local.u32 	%r2146, [%rd8];
	// inline asm
	prmt.b32 %r9162, %r2145, %r2146, %r4;
	// inline asm
	ld.local.u32 	%r2149, [%rd8];
	ld.local.u32 	%r2150, [%rd7+12];
	// inline asm
	prmt.b32 %r9163, %r2149, %r2150, %r4;
	// inline asm
	ld.local.u32 	%r2153, [%rd7+12];
	ld.local.u32 	%r2154, [%rd7+8];
	// inline asm
	prmt.b32 %r9156, %r2153, %r2154, %r4;
	// inline asm
	ld.local.u32 	%r2157, [%rd7+8];
	ld.local.u32 	%r2158, [%rd7+4];
	// inline asm
	prmt.b32 %r9157, %r2157, %r2158, %r4;
	// inline asm
	ld.local.u32 	%r2161, [%rd7+4];
	ld.local.u32 	%r2162, [%rd7];
	// inline asm
	prmt.b32 %r9158, %r2161, %r2162, %r4;
	// inline asm
	ld.local.u32 	%r2165, [%rd7];
	ld.local.u32 	%r2166, [%rd6+12];
	// inline asm
	prmt.b32 %r9159, %r2165, %r2166, %r4;
	// inline asm
	ld.local.u32 	%r2169, [%rd6+12];
	ld.local.u32 	%r2170, [%rd6+8];
	// inline asm
	prmt.b32 %r9152, %r2169, %r2170, %r4;
	// inline asm
	ld.local.u32 	%r2173, [%rd6+8];
	ld.local.u32 	%r2174, [%rd6+4];
	// inline asm
	prmt.b32 %r9153, %r2173, %r2174, %r4;
	// inline asm
	ld.local.u32 	%r2177, [%rd6+4];
	ld.local.u32 	%r2178, [%rd6];
	// inline asm
	prmt.b32 %r9154, %r2177, %r2178, %r4;
	// inline asm
	ld.local.u32 	%r2181, [%rd6];
	ld.local.u32 	%r2182, [%rd5+12];
	// inline asm
	prmt.b32 %r9155, %r2181, %r2182, %r4;
	// inline asm
	ld.local.u32 	%r2185, [%rd5+12];
	ld.local.u32 	%r2186, [%rd5+8];
	// inline asm
	prmt.b32 %r9148, %r2185, %r2186, %r4;
	// inline asm
	ld.local.u32 	%r2189, [%rd5+8];
	ld.local.u32 	%r2190, [%rd5+4];
	// inline asm
	prmt.b32 %r9149, %r2189, %r2190, %r4;
	// inline asm
	ld.local.u32 	%r2193, [%rd5+4];
	ld.local.u32 	%r2194, [%rd5];
	// inline asm
	prmt.b32 %r9150, %r2193, %r2194, %r4;
	// inline asm
	ld.local.u32 	%r2197, [%rd5];
	ld.local.u32 	%r2198, [%rd4+12];
	// inline asm
	prmt.b32 %r9151, %r2197, %r2198, %r4;
	// inline asm
	ld.local.u32 	%r2201, [%rd4+12];
	ld.local.u32 	%r2202, [%rd4+8];
	// inline asm
	prmt.b32 %r9144, %r2201, %r2202, %r4;
	// inline asm
	ld.local.u32 	%r2205, [%rd4+8];
	ld.local.u32 	%r2206, [%rd4+4];
	// inline asm
	prmt.b32 %r9145, %r2205, %r2206, %r4;
	// inline asm
	ld.local.u32 	%r2209, [%rd4+4];
	ld.local.u32 	%r2210, [%rd4];
	// inline asm
	prmt.b32 %r9146, %r2209, %r2210, %r4;
	// inline asm
	ld.local.u32 	%r2213, [%rd4];
	ld.local.u32 	%r2214, [%rd3+12];
	// inline asm
	prmt.b32 %r9147, %r2213, %r2214, %r4;
	// inline asm
	ld.local.u32 	%r2217, [%rd3+12];
	ld.local.u32 	%r2218, [%rd3+8];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2216;
	ld.local.u32 	%r2221, [%rd3+8];
	ld.local.u32 	%r2222, [%rd3+4];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2220;
	ld.local.u32 	%r2225, [%rd3+4];
	ld.local.u32 	%r2226, [%rd3];
	// inline asm
	prmt.b32 %r2224, %r2225, %r2226, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2224;
	ld.local.u32 	%r2229, [%rd3];
	ld.local.u32 	%r2230, [%rd2+12];
	// inline asm
	prmt.b32 %r2228, %r2229, %r2230, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2228;
	ld.local.u32 	%r2233, [%rd2+12];
	ld.local.u32 	%r2234, [%rd2+8];
	// inline asm
	prmt.b32 %r2232, %r2233, %r2234, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2232;
	ld.local.u32 	%r2237, [%rd2+8];
	ld.local.u32 	%r2238, [%rd2+4];
	// inline asm
	prmt.b32 %r2236, %r2237, %r2238, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2236;
	ld.local.u32 	%r2241, [%rd2+4];
	ld.local.u32 	%r2242, [%rd2];
	// inline asm
	prmt.b32 %r2240, %r2241, %r2242, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2240;
	ld.local.u32 	%r2245, [%rd2];
	ld.local.u32 	%r2246, [%rd1+12];
	// inline asm
	prmt.b32 %r2244, %r2245, %r2246, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2244;
	ld.local.u32 	%r2249, [%rd1+12];
	ld.local.u32 	%r2250, [%rd1+8];
	// inline asm
	prmt.b32 %r2248, %r2249, %r2250, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2248;
	ld.local.u32 	%r2253, [%rd1+8];
	ld.local.u32 	%r2254, [%rd1+4];
	// inline asm
	prmt.b32 %r2252, %r2253, %r2254, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2252;
	ld.local.u32 	%r2257, [%rd1+4];
	ld.local.u32 	%r2258, [%rd1];
	// inline asm
	prmt.b32 %r2256, %r2257, %r2258, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2256;
	ld.local.u32 	%r2261, [%rd1];
	// inline asm
	prmt.b32 %r2260, %r2261, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2260;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd197, 0;
	st.local.u32 	[%rd1+4], %rd197;
	st.local.u32 	[%rd1], %rd197;
	mov.u32 	%r9164, %r9143;
	mov.u32 	%r9165, %r9143;
	mov.u32 	%r9166, %r9143;
	bra.uni 	BB0_85;

BB0_119:
	setp.gt.s32	%p78, %r3, 13;
	@%p78 bra 	BB0_123;

	setp.eq.s32	%p81, %r3, 12;
	@%p81 bra 	BB0_166;
	bra.uni 	BB0_121;

BB0_166:
	ld.local.u32 	%r6986, [%rd5+12];
	ld.local.u32 	%r6987, [%rd5+8];
	// inline asm
	prmt.b32 %r6985, %r6986, %r6987, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6985;
	ld.local.u32 	%r6990, [%rd5+8];
	ld.local.u32 	%r6991, [%rd5+4];
	// inline asm
	prmt.b32 %r6989, %r6990, %r6991, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6989;
	ld.local.u32 	%r6994, [%rd5+4];
	ld.local.u32 	%r6995, [%rd5];
	// inline asm
	prmt.b32 %r6993, %r6994, %r6995, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6993;
	ld.local.u32 	%r6998, [%rd5];
	ld.local.u32 	%r6999, [%rd4+12];
	// inline asm
	prmt.b32 %r6997, %r6998, %r6999, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6997;
	ld.local.u32 	%r7002, [%rd4+12];
	ld.local.u32 	%r7003, [%rd4+8];
	// inline asm
	prmt.b32 %r7001, %r7002, %r7003, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7001;
	ld.local.u32 	%r7006, [%rd4+8];
	ld.local.u32 	%r7007, [%rd4+4];
	// inline asm
	prmt.b32 %r7005, %r7006, %r7007, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7005;
	ld.local.u32 	%r7010, [%rd4+4];
	ld.local.u32 	%r7011, [%rd4];
	// inline asm
	prmt.b32 %r7009, %r7010, %r7011, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7009;
	ld.local.u32 	%r7014, [%rd4];
	ld.local.u32 	%r7015, [%rd3+12];
	// inline asm
	prmt.b32 %r7013, %r7014, %r7015, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7013;
	ld.local.u32 	%r7018, [%rd3+12];
	ld.local.u32 	%r7019, [%rd3+8];
	// inline asm
	prmt.b32 %r7017, %r7018, %r7019, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7017;
	ld.local.u32 	%r7022, [%rd3+8];
	ld.local.u32 	%r7023, [%rd3+4];
	// inline asm
	prmt.b32 %r7021, %r7022, %r7023, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7021;
	ld.local.u32 	%r7026, [%rd3+4];
	ld.local.u32 	%r7027, [%rd3];
	// inline asm
	prmt.b32 %r7025, %r7026, %r7027, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7025;
	ld.local.u32 	%r7030, [%rd3];
	ld.local.u32 	%r7031, [%rd2+12];
	// inline asm
	prmt.b32 %r7029, %r7030, %r7031, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7029;
	ld.local.u32 	%r7034, [%rd2+12];
	ld.local.u32 	%r7035, [%rd2+8];
	// inline asm
	prmt.b32 %r7033, %r7034, %r7035, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7033;
	ld.local.u32 	%r7038, [%rd2+8];
	ld.local.u32 	%r7039, [%rd2+4];
	// inline asm
	prmt.b32 %r7037, %r7038, %r7039, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7037;
	ld.local.u32 	%r7042, [%rd2+4];
	ld.local.u32 	%r7043, [%rd2];
	// inline asm
	prmt.b32 %r7041, %r7042, %r7043, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7041;
	ld.local.u32 	%r7046, [%rd2];
	ld.local.u32 	%r7047, [%rd1+12];
	// inline asm
	prmt.b32 %r7045, %r7046, %r7047, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7045;
	ld.local.u32 	%r7050, [%rd1+12];
	ld.local.u32 	%r7051, [%rd1+8];
	// inline asm
	prmt.b32 %r7049, %r7050, %r7051, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7049;
	ld.local.u32 	%r7054, [%rd1+8];
	ld.local.u32 	%r7055, [%rd1+4];
	// inline asm
	prmt.b32 %r7053, %r7054, %r7055, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7053;
	ld.local.u32 	%r7058, [%rd1+4];
	ld.local.u32 	%r7059, [%rd1];
	// inline asm
	prmt.b32 %r7057, %r7058, %r7059, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7057;
	ld.local.u32 	%r7062, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7061, %r7062, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7061;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1253, 0;
	st.local.u32 	[%rd1+4], %rd1253;
	st.local.u32 	[%rd1], %rd1253;
	bra.uni 	BB0_174;

BB0_29:
	setp.gt.s32	%p30, %r3, 13;
	@%p30 bra 	BB0_33;

	setp.eq.s32	%p33, %r3, 12;
	@%p33 bra 	BB0_76;
	bra.uni 	BB0_31;

BB0_76:
	ld.local.u32 	%r3314, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9159, %r9143, %r3314, %r4;
	// inline asm
	ld.local.u32 	%r3317, [%rd8+12];
	ld.local.u32 	%r3318, [%rd8+8];
	// inline asm
	prmt.b32 %r9152, %r3317, %r3318, %r4;
	// inline asm
	ld.local.u32 	%r3321, [%rd8+8];
	ld.local.u32 	%r3322, [%rd8+4];
	// inline asm
	prmt.b32 %r9153, %r3321, %r3322, %r4;
	// inline asm
	ld.local.u32 	%r3325, [%rd8+4];
	ld.local.u32 	%r3326, [%rd8];
	// inline asm
	prmt.b32 %r9154, %r3325, %r3326, %r4;
	// inline asm
	ld.local.u32 	%r3329, [%rd8];
	ld.local.u32 	%r3330, [%rd7+12];
	// inline asm
	prmt.b32 %r9155, %r3329, %r3330, %r4;
	// inline asm
	ld.local.u32 	%r3333, [%rd7+12];
	ld.local.u32 	%r3334, [%rd7+8];
	// inline asm
	prmt.b32 %r9148, %r3333, %r3334, %r4;
	// inline asm
	ld.local.u32 	%r3337, [%rd7+8];
	ld.local.u32 	%r3338, [%rd7+4];
	// inline asm
	prmt.b32 %r9149, %r3337, %r3338, %r4;
	// inline asm
	ld.local.u32 	%r3341, [%rd7+4];
	ld.local.u32 	%r3342, [%rd7];
	// inline asm
	prmt.b32 %r9150, %r3341, %r3342, %r4;
	// inline asm
	ld.local.u32 	%r3345, [%rd7];
	ld.local.u32 	%r3346, [%rd6+12];
	// inline asm
	prmt.b32 %r9151, %r3345, %r3346, %r4;
	// inline asm
	ld.local.u32 	%r3349, [%rd6+12];
	ld.local.u32 	%r3350, [%rd6+8];
	// inline asm
	prmt.b32 %r9144, %r3349, %r3350, %r4;
	// inline asm
	ld.local.u32 	%r3353, [%rd6+8];
	ld.local.u32 	%r3354, [%rd6+4];
	// inline asm
	prmt.b32 %r9145, %r3353, %r3354, %r4;
	// inline asm
	ld.local.u32 	%r3357, [%rd6+4];
	ld.local.u32 	%r3358, [%rd6];
	// inline asm
	prmt.b32 %r9146, %r3357, %r3358, %r4;
	// inline asm
	ld.local.u32 	%r3361, [%rd6];
	ld.local.u32 	%r3362, [%rd5+12];
	// inline asm
	prmt.b32 %r9147, %r3361, %r3362, %r4;
	// inline asm
	ld.local.u32 	%r3365, [%rd5+12];
	ld.local.u32 	%r3366, [%rd5+8];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3364;
	ld.local.u32 	%r3369, [%rd5+8];
	ld.local.u32 	%r3370, [%rd5+4];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3368;
	ld.local.u32 	%r3373, [%rd5+4];
	ld.local.u32 	%r3374, [%rd5];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3372;
	ld.local.u32 	%r3377, [%rd5];
	ld.local.u32 	%r3378, [%rd4+12];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3376;
	ld.local.u32 	%r3381, [%rd4+12];
	ld.local.u32 	%r3382, [%rd4+8];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3380;
	ld.local.u32 	%r3385, [%rd4+8];
	ld.local.u32 	%r3386, [%rd4+4];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3384;
	ld.local.u32 	%r3389, [%rd4+4];
	ld.local.u32 	%r3390, [%rd4];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3388;
	ld.local.u32 	%r3393, [%rd4];
	ld.local.u32 	%r3394, [%rd3+12];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3392;
	ld.local.u32 	%r3397, [%rd3+12];
	ld.local.u32 	%r3398, [%rd3+8];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3396;
	ld.local.u32 	%r3401, [%rd3+8];
	ld.local.u32 	%r3402, [%rd3+4];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3400;
	ld.local.u32 	%r3405, [%rd3+4];
	ld.local.u32 	%r3406, [%rd3];
	// inline asm
	prmt.b32 %r3404, %r3405, %r3406, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3404;
	ld.local.u32 	%r3409, [%rd3];
	ld.local.u32 	%r3410, [%rd2+12];
	// inline asm
	prmt.b32 %r3408, %r3409, %r3410, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3408;
	ld.local.u32 	%r3413, [%rd2+12];
	ld.local.u32 	%r3414, [%rd2+8];
	// inline asm
	prmt.b32 %r3412, %r3413, %r3414, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3412;
	ld.local.u32 	%r3417, [%rd2+8];
	ld.local.u32 	%r3418, [%rd2+4];
	// inline asm
	prmt.b32 %r3416, %r3417, %r3418, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3416;
	ld.local.u32 	%r3421, [%rd2+4];
	ld.local.u32 	%r3422, [%rd2];
	// inline asm
	prmt.b32 %r3420, %r3421, %r3422, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3420;
	ld.local.u32 	%r3425, [%rd2];
	ld.local.u32 	%r3426, [%rd1+12];
	// inline asm
	prmt.b32 %r3424, %r3425, %r3426, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3424;
	ld.local.u32 	%r3429, [%rd1+12];
	ld.local.u32 	%r3430, [%rd1+8];
	// inline asm
	prmt.b32 %r3428, %r3429, %r3430, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3428;
	ld.local.u32 	%r3433, [%rd1+8];
	ld.local.u32 	%r3434, [%rd1+4];
	// inline asm
	prmt.b32 %r3432, %r3433, %r3434, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3432;
	ld.local.u32 	%r3437, [%rd1+4];
	ld.local.u32 	%r3438, [%rd1];
	// inline asm
	prmt.b32 %r3436, %r3437, %r3438, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3436;
	ld.local.u32 	%r3441, [%rd1];
	// inline asm
	prmt.b32 %r3440, %r3441, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3440;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd205, 0;
	st.local.u32 	[%rd1+4], %rd205;
	st.local.u32 	[%rd1], %rd205;
	mov.u32 	%r9156, %r9143;
	mov.u32 	%r9157, %r9143;
	mov.u32 	%r9158, %r9143;
	bra.uni 	BB0_83;

BB0_150:
	setp.gt.s32	%p55, %r3, 29;
	@%p55 bra 	BB0_154;

	setp.eq.s32	%p58, %r3, 28;
	@%p58 bra 	BB0_158;
	bra.uni 	BB0_152;

BB0_158:
	ld.local.u32 	%r6234, [%rd1+12];
	ld.local.u32 	%r6235, [%rd1+8];
	// inline asm
	prmt.b32 %r6233, %r6234, %r6235, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6233;
	ld.local.u32 	%r6238, [%rd1+8];
	ld.local.u32 	%r6239, [%rd1+4];
	// inline asm
	prmt.b32 %r6237, %r6238, %r6239, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6237;
	ld.local.u32 	%r6242, [%rd1+4];
	ld.local.u32 	%r6243, [%rd1];
	// inline asm
	prmt.b32 %r6241, %r6242, %r6243, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6241;
	ld.local.u32 	%r6246, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6245, %r6246, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6245;
	st.local.u32 	[%rd7+12], %r9177;
	st.local.u32 	[%rd7+8], %r9177;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1237, 0;
	st.local.u32 	[%rd1+4], %rd1237;
	st.local.u32 	[%rd1], %rd1237;
	bra.uni 	BB0_174;

BB0_60:
	setp.gt.s32	%p7, %r3, 29;
	@%p7 bra 	BB0_64;

	setp.eq.s32	%p10, %r3, 28;
	@%p10 bra 	BB0_68;
	bra.uni 	BB0_62;

BB0_68:
	ld.local.u32 	%r1018, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9175, %r9143, %r1018, %r4;
	// inline asm
	ld.local.u32 	%r1021, [%rd8+12];
	ld.local.u32 	%r1022, [%rd8+8];
	// inline asm
	prmt.b32 %r9168, %r1021, %r1022, %r4;
	// inline asm
	ld.local.u32 	%r1025, [%rd8+8];
	ld.local.u32 	%r1026, [%rd8+4];
	// inline asm
	prmt.b32 %r9169, %r1025, %r1026, %r4;
	// inline asm
	ld.local.u32 	%r1029, [%rd8+4];
	ld.local.u32 	%r1030, [%rd8];
	// inline asm
	prmt.b32 %r9170, %r1029, %r1030, %r4;
	// inline asm
	ld.local.u32 	%r1033, [%rd8];
	ld.local.u32 	%r1034, [%rd7+12];
	// inline asm
	prmt.b32 %r9171, %r1033, %r1034, %r4;
	// inline asm
	ld.local.u32 	%r1037, [%rd7+12];
	ld.local.u32 	%r1038, [%rd7+8];
	// inline asm
	prmt.b32 %r9164, %r1037, %r1038, %r4;
	// inline asm
	ld.local.u32 	%r1041, [%rd7+8];
	ld.local.u32 	%r1042, [%rd7+4];
	// inline asm
	prmt.b32 %r9165, %r1041, %r1042, %r4;
	// inline asm
	ld.local.u32 	%r1045, [%rd7+4];
	ld.local.u32 	%r1046, [%rd7];
	// inline asm
	prmt.b32 %r9166, %r1045, %r1046, %r4;
	// inline asm
	ld.local.u32 	%r1049, [%rd7];
	ld.local.u32 	%r1050, [%rd6+12];
	// inline asm
	prmt.b32 %r9167, %r1049, %r1050, %r4;
	// inline asm
	ld.local.u32 	%r1053, [%rd6+12];
	ld.local.u32 	%r1054, [%rd6+8];
	// inline asm
	prmt.b32 %r9160, %r1053, %r1054, %r4;
	// inline asm
	ld.local.u32 	%r1057, [%rd6+8];
	ld.local.u32 	%r1058, [%rd6+4];
	// inline asm
	prmt.b32 %r9161, %r1057, %r1058, %r4;
	// inline asm
	ld.local.u32 	%r1061, [%rd6+4];
	ld.local.u32 	%r1062, [%rd6];
	// inline asm
	prmt.b32 %r9162, %r1061, %r1062, %r4;
	// inline asm
	ld.local.u32 	%r1065, [%rd6];
	ld.local.u32 	%r1066, [%rd5+12];
	// inline asm
	prmt.b32 %r9163, %r1065, %r1066, %r4;
	// inline asm
	ld.local.u32 	%r1069, [%rd5+12];
	ld.local.u32 	%r1070, [%rd5+8];
	// inline asm
	prmt.b32 %r9156, %r1069, %r1070, %r4;
	// inline asm
	ld.local.u32 	%r1073, [%rd5+8];
	ld.local.u32 	%r1074, [%rd5+4];
	// inline asm
	prmt.b32 %r9157, %r1073, %r1074, %r4;
	// inline asm
	ld.local.u32 	%r1077, [%rd5+4];
	ld.local.u32 	%r1078, [%rd5];
	// inline asm
	prmt.b32 %r9158, %r1077, %r1078, %r4;
	// inline asm
	ld.local.u32 	%r1081, [%rd5];
	ld.local.u32 	%r1082, [%rd4+12];
	// inline asm
	prmt.b32 %r9159, %r1081, %r1082, %r4;
	// inline asm
	ld.local.u32 	%r1085, [%rd4+12];
	ld.local.u32 	%r1086, [%rd4+8];
	// inline asm
	prmt.b32 %r9152, %r1085, %r1086, %r4;
	// inline asm
	ld.local.u32 	%r1089, [%rd4+8];
	ld.local.u32 	%r1090, [%rd4+4];
	// inline asm
	prmt.b32 %r9153, %r1089, %r1090, %r4;
	// inline asm
	ld.local.u32 	%r1093, [%rd4+4];
	ld.local.u32 	%r1094, [%rd4];
	// inline asm
	prmt.b32 %r9154, %r1093, %r1094, %r4;
	// inline asm
	ld.local.u32 	%r1097, [%rd4];
	ld.local.u32 	%r1098, [%rd3+12];
	// inline asm
	prmt.b32 %r9155, %r1097, %r1098, %r4;
	// inline asm
	ld.local.u32 	%r1101, [%rd3+12];
	ld.local.u32 	%r1102, [%rd3+8];
	// inline asm
	prmt.b32 %r9148, %r1101, %r1102, %r4;
	// inline asm
	ld.local.u32 	%r1105, [%rd3+8];
	ld.local.u32 	%r1106, [%rd3+4];
	// inline asm
	prmt.b32 %r9149, %r1105, %r1106, %r4;
	// inline asm
	ld.local.u32 	%r1109, [%rd3+4];
	ld.local.u32 	%r1110, [%rd3];
	// inline asm
	prmt.b32 %r9150, %r1109, %r1110, %r4;
	// inline asm
	ld.local.u32 	%r1113, [%rd3];
	ld.local.u32 	%r1114, [%rd2+12];
	// inline asm
	prmt.b32 %r9151, %r1113, %r1114, %r4;
	// inline asm
	ld.local.u32 	%r1117, [%rd2+12];
	ld.local.u32 	%r1118, [%rd2+8];
	// inline asm
	prmt.b32 %r9144, %r1117, %r1118, %r4;
	// inline asm
	ld.local.u32 	%r1121, [%rd2+8];
	ld.local.u32 	%r1122, [%rd2+4];
	// inline asm
	prmt.b32 %r9145, %r1121, %r1122, %r4;
	// inline asm
	ld.local.u32 	%r1125, [%rd2+4];
	ld.local.u32 	%r1126, [%rd2];
	// inline asm
	prmt.b32 %r9146, %r1125, %r1126, %r4;
	// inline asm
	ld.local.u32 	%r1129, [%rd2];
	ld.local.u32 	%r1130, [%rd1+12];
	// inline asm
	prmt.b32 %r9147, %r1129, %r1130, %r4;
	// inline asm
	ld.local.u32 	%r1133, [%rd1+12];
	ld.local.u32 	%r1134, [%rd1+8];
	// inline asm
	prmt.b32 %r1132, %r1133, %r1134, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1132;
	ld.local.u32 	%r1137, [%rd1+8];
	ld.local.u32 	%r1138, [%rd1+4];
	// inline asm
	prmt.b32 %r1136, %r1137, %r1138, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1136;
	ld.local.u32 	%r1141, [%rd1+4];
	ld.local.u32 	%r1142, [%rd1];
	// inline asm
	prmt.b32 %r1140, %r1141, %r1142, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1140;
	ld.local.u32 	%r1145, [%rd1];
	// inline asm
	prmt.b32 %r1144, %r1145, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1144;
	st.local.u32 	[%rd7+12], %r9143;
	st.local.u32 	[%rd7+8], %r9143;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd189, 0;
	st.local.u32 	[%rd1+4], %rd189;
	st.local.u32 	[%rd1], %rd189;
	mov.u32 	%r9172, %r9143;
	mov.u32 	%r9173, %r9143;
	mov.u32 	%r9174, %r9143;
	bra.uni 	BB0_91;

BB0_101:
	setp.eq.s32	%p95, %r3, 2;
	@%p95 bra 	BB0_171;
	bra.uni 	BB0_102;

BB0_171:
	ld.local.u32 	%r7976, [%rd8+4];
	ld.local.u32 	%r7977, [%rd8];
	// inline asm
	prmt.b32 %r7975, %r7976, %r7977, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7975;
	ld.local.u32 	%r7980, [%rd8];
	ld.local.u32 	%r7981, [%rd7+12];
	// inline asm
	prmt.b32 %r7979, %r7980, %r7981, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7979;
	ld.local.u32 	%r7984, [%rd7+12];
	ld.local.u32 	%r7985, [%rd7+8];
	// inline asm
	prmt.b32 %r7983, %r7984, %r7985, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7983;
	ld.local.u32 	%r7988, [%rd7+8];
	ld.local.u32 	%r7989, [%rd7+4];
	// inline asm
	prmt.b32 %r7987, %r7988, %r7989, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7987;
	ld.local.u32 	%r7992, [%rd7+4];
	ld.local.u32 	%r7993, [%rd7];
	// inline asm
	prmt.b32 %r7991, %r7992, %r7993, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7991;
	ld.local.u32 	%r7996, [%rd7];
	ld.local.u32 	%r7997, [%rd6+12];
	// inline asm
	prmt.b32 %r7995, %r7996, %r7997, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7995;
	ld.local.u32 	%r8000, [%rd6+12];
	ld.local.u32 	%r8001, [%rd6+8];
	// inline asm
	prmt.b32 %r7999, %r8000, %r8001, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7999;
	ld.local.u32 	%r8004, [%rd6+8];
	ld.local.u32 	%r8005, [%rd6+4];
	// inline asm
	prmt.b32 %r8003, %r8004, %r8005, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8003;
	ld.local.u32 	%r8008, [%rd6+4];
	ld.local.u32 	%r8009, [%rd6];
	// inline asm
	prmt.b32 %r8007, %r8008, %r8009, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8007;
	ld.local.u32 	%r8012, [%rd6];
	ld.local.u32 	%r8013, [%rd5+12];
	// inline asm
	prmt.b32 %r8011, %r8012, %r8013, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8011;
	ld.local.u32 	%r8016, [%rd5+12];
	ld.local.u32 	%r8017, [%rd5+8];
	// inline asm
	prmt.b32 %r8015, %r8016, %r8017, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8015;
	ld.local.u32 	%r8020, [%rd5+8];
	ld.local.u32 	%r8021, [%rd5+4];
	// inline asm
	prmt.b32 %r8019, %r8020, %r8021, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8019;
	ld.local.u32 	%r8024, [%rd5+4];
	ld.local.u32 	%r8025, [%rd5];
	// inline asm
	prmt.b32 %r8023, %r8024, %r8025, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8023;
	ld.local.u32 	%r8028, [%rd5];
	ld.local.u32 	%r8029, [%rd4+12];
	// inline asm
	prmt.b32 %r8027, %r8028, %r8029, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8027;
	ld.local.u32 	%r8032, [%rd4+12];
	ld.local.u32 	%r8033, [%rd4+8];
	// inline asm
	prmt.b32 %r8031, %r8032, %r8033, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8031;
	ld.local.u32 	%r8036, [%rd4+8];
	ld.local.u32 	%r8037, [%rd4+4];
	// inline asm
	prmt.b32 %r8035, %r8036, %r8037, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8035;
	ld.local.u32 	%r8040, [%rd4+4];
	ld.local.u32 	%r8041, [%rd4];
	// inline asm
	prmt.b32 %r8039, %r8040, %r8041, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8039;
	ld.local.u32 	%r8044, [%rd4];
	ld.local.u32 	%r8045, [%rd3+12];
	// inline asm
	prmt.b32 %r8043, %r8044, %r8045, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8043;
	ld.local.u32 	%r8048, [%rd3+12];
	ld.local.u32 	%r8049, [%rd3+8];
	// inline asm
	prmt.b32 %r8047, %r8048, %r8049, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8047;
	ld.local.u32 	%r8052, [%rd3+8];
	ld.local.u32 	%r8053, [%rd3+4];
	// inline asm
	prmt.b32 %r8051, %r8052, %r8053, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8051;
	ld.local.u32 	%r8056, [%rd3+4];
	ld.local.u32 	%r8057, [%rd3];
	// inline asm
	prmt.b32 %r8055, %r8056, %r8057, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8055;
	ld.local.u32 	%r8060, [%rd3];
	ld.local.u32 	%r8061, [%rd2+12];
	// inline asm
	prmt.b32 %r8059, %r8060, %r8061, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8059;
	ld.local.u32 	%r8064, [%rd2+12];
	ld.local.u32 	%r8065, [%rd2+8];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8063;
	ld.local.u32 	%r8068, [%rd2+8];
	ld.local.u32 	%r8069, [%rd2+4];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8067;
	ld.local.u32 	%r8072, [%rd2+4];
	ld.local.u32 	%r8073, [%rd2];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8071;
	ld.local.u32 	%r8076, [%rd2];
	ld.local.u32 	%r8077, [%rd1+12];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8075;
	ld.local.u32 	%r8080, [%rd1+12];
	ld.local.u32 	%r8081, [%rd1+8];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8079;
	ld.local.u32 	%r8084, [%rd1+8];
	ld.local.u32 	%r8085, [%rd1+4];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8083;
	ld.local.u32 	%r8088, [%rd1+4];
	ld.local.u32 	%r8089, [%rd1];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8087;
	ld.local.u32 	%r8092, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r8091, %r8092, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8091;
	mov.u64 	%rd1263, 0;
	st.local.u32 	[%rd1+4], %rd1263;
	st.local.u32 	[%rd1], %rd1263;
	bra.uni 	BB0_174;

BB0_10:
	setp.eq.s32	%p47, %r3, 2;
	@%p47 bra 	BB0_87;
	bra.uni 	BB0_11;

BB0_87:
	ld.local.u32 	%r4879, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9145, %r9143, %r4879, %r4;
	// inline asm
	ld.local.u32 	%r4882, [%rd8+12];
	ld.local.u32 	%r4883, [%rd8+8];
	// inline asm
	prmt.b32 %r9146, %r4882, %r4883, %r4;
	// inline asm
	ld.local.u32 	%r4886, [%rd8+8];
	ld.local.u32 	%r4887, [%rd8+4];
	// inline asm
	prmt.b32 %r9147, %r4886, %r4887, %r4;
	// inline asm
	ld.local.u32 	%r4890, [%rd8+4];
	ld.local.u32 	%r4891, [%rd8];
	// inline asm
	prmt.b32 %r4889, %r4890, %r4891, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4889;
	ld.local.u32 	%r4894, [%rd8];
	ld.local.u32 	%r4895, [%rd7+12];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4893;
	ld.local.u32 	%r4898, [%rd7+12];
	ld.local.u32 	%r4899, [%rd7+8];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4897;
	ld.local.u32 	%r4902, [%rd7+8];
	ld.local.u32 	%r4903, [%rd7+4];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4901;
	ld.local.u32 	%r4906, [%rd7+4];
	ld.local.u32 	%r4907, [%rd7];
	// inline asm
	prmt.b32 %r4905, %r4906, %r4907, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4905;
	ld.local.u32 	%r4910, [%rd7];
	ld.local.u32 	%r4911, [%rd6+12];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4909;
	ld.local.u32 	%r4914, [%rd6+12];
	ld.local.u32 	%r4915, [%rd6+8];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4913;
	ld.local.u32 	%r4918, [%rd6+8];
	ld.local.u32 	%r4919, [%rd6+4];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4917;
	ld.local.u32 	%r4922, [%rd6+4];
	ld.local.u32 	%r4923, [%rd6];
	// inline asm
	prmt.b32 %r4921, %r4922, %r4923, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4921;
	ld.local.u32 	%r4926, [%rd6];
	ld.local.u32 	%r4927, [%rd5+12];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4925;
	ld.local.u32 	%r4930, [%rd5+12];
	ld.local.u32 	%r4931, [%rd5+8];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4929;
	ld.local.u32 	%r4934, [%rd5+8];
	ld.local.u32 	%r4935, [%rd5+4];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4933;
	ld.local.u32 	%r4938, [%rd5+4];
	ld.local.u32 	%r4939, [%rd5];
	// inline asm
	prmt.b32 %r4937, %r4938, %r4939, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4937;
	ld.local.u32 	%r4942, [%rd5];
	ld.local.u32 	%r4943, [%rd4+12];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4941;
	ld.local.u32 	%r4946, [%rd4+12];
	ld.local.u32 	%r4947, [%rd4+8];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4945;
	ld.local.u32 	%r4950, [%rd4+8];
	ld.local.u32 	%r4951, [%rd4+4];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4949;
	ld.local.u32 	%r4954, [%rd4+4];
	ld.local.u32 	%r4955, [%rd4];
	// inline asm
	prmt.b32 %r4953, %r4954, %r4955, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4953;
	ld.local.u32 	%r4958, [%rd4];
	ld.local.u32 	%r4959, [%rd3+12];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4957;
	ld.local.u32 	%r4962, [%rd3+12];
	ld.local.u32 	%r4963, [%rd3+8];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4961;
	ld.local.u32 	%r4966, [%rd3+8];
	ld.local.u32 	%r4967, [%rd3+4];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4965;
	ld.local.u32 	%r4970, [%rd3+4];
	ld.local.u32 	%r4971, [%rd3];
	// inline asm
	prmt.b32 %r4969, %r4970, %r4971, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4969;
	ld.local.u32 	%r4974, [%rd3];
	ld.local.u32 	%r4975, [%rd2+12];
	// inline asm
	prmt.b32 %r4973, %r4974, %r4975, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4973;
	ld.local.u32 	%r4978, [%rd2+12];
	ld.local.u32 	%r4979, [%rd2+8];
	// inline asm
	prmt.b32 %r4977, %r4978, %r4979, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4977;
	ld.local.u32 	%r4982, [%rd2+8];
	ld.local.u32 	%r4983, [%rd2+4];
	// inline asm
	prmt.b32 %r4981, %r4982, %r4983, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4981;
	ld.local.u32 	%r4986, [%rd2+4];
	ld.local.u32 	%r4987, [%rd2];
	// inline asm
	prmt.b32 %r4985, %r4986, %r4987, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4985;
	ld.local.u32 	%r4990, [%rd2];
	ld.local.u32 	%r4991, [%rd1+12];
	// inline asm
	prmt.b32 %r4989, %r4990, %r4991, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4989;
	ld.local.u32 	%r4994, [%rd1+12];
	ld.local.u32 	%r4995, [%rd1+8];
	// inline asm
	prmt.b32 %r4993, %r4994, %r4995, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4993;
	ld.local.u32 	%r4998, [%rd1+8];
	ld.local.u32 	%r4999, [%rd1+4];
	// inline asm
	prmt.b32 %r4997, %r4998, %r4999, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4997;
	ld.local.u32 	%r5002, [%rd1+4];
	ld.local.u32 	%r5003, [%rd1];
	// inline asm
	prmt.b32 %r5001, %r5002, %r5003, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5001;
	ld.local.u32 	%r5006, [%rd1];
	// inline asm
	prmt.b32 %r5005, %r5006, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5005;
	mov.u64 	%rd215, 0;
	st.local.u32 	[%rd1+4], %rd215;
	st.local.u32 	[%rd1], %rd215;
	mov.u32 	%r9144, %r9143;
	bra.uni 	BB0_13;

BB0_132:
	setp.eq.s32	%p72, %r3, 18;
	@%p72 bra 	BB0_163;
	bra.uni 	BB0_133;

BB0_163:
	ld.local.u32 	%r6584, [%rd4+4];
	ld.local.u32 	%r6585, [%rd4];
	// inline asm
	prmt.b32 %r6583, %r6584, %r6585, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6583;
	ld.local.u32 	%r6588, [%rd4];
	ld.local.u32 	%r6589, [%rd3+12];
	// inline asm
	prmt.b32 %r6587, %r6588, %r6589, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6587;
	ld.local.u32 	%r6592, [%rd3+12];
	ld.local.u32 	%r6593, [%rd3+8];
	// inline asm
	prmt.b32 %r6591, %r6592, %r6593, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6591;
	ld.local.u32 	%r6596, [%rd3+8];
	ld.local.u32 	%r6597, [%rd3+4];
	// inline asm
	prmt.b32 %r6595, %r6596, %r6597, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6595;
	ld.local.u32 	%r6600, [%rd3+4];
	ld.local.u32 	%r6601, [%rd3];
	// inline asm
	prmt.b32 %r6599, %r6600, %r6601, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6599;
	ld.local.u32 	%r6604, [%rd3];
	ld.local.u32 	%r6605, [%rd2+12];
	// inline asm
	prmt.b32 %r6603, %r6604, %r6605, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6603;
	ld.local.u32 	%r6608, [%rd2+12];
	ld.local.u32 	%r6609, [%rd2+8];
	// inline asm
	prmt.b32 %r6607, %r6608, %r6609, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6607;
	ld.local.u32 	%r6612, [%rd2+8];
	ld.local.u32 	%r6613, [%rd2+4];
	// inline asm
	prmt.b32 %r6611, %r6612, %r6613, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6611;
	ld.local.u32 	%r6616, [%rd2+4];
	ld.local.u32 	%r6617, [%rd2];
	// inline asm
	prmt.b32 %r6615, %r6616, %r6617, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6615;
	ld.local.u32 	%r6620, [%rd2];
	ld.local.u32 	%r6621, [%rd1+12];
	// inline asm
	prmt.b32 %r6619, %r6620, %r6621, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6619;
	ld.local.u32 	%r6624, [%rd1+12];
	ld.local.u32 	%r6625, [%rd1+8];
	// inline asm
	prmt.b32 %r6623, %r6624, %r6625, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6623;
	ld.local.u32 	%r6628, [%rd1+8];
	ld.local.u32 	%r6629, [%rd1+4];
	// inline asm
	prmt.b32 %r6627, %r6628, %r6629, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6627;
	ld.local.u32 	%r6632, [%rd1+4];
	ld.local.u32 	%r6633, [%rd1];
	// inline asm
	prmt.b32 %r6631, %r6632, %r6633, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6631;
	ld.local.u32 	%r6636, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6635, %r6636, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6635;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1247, 0;
	st.local.u32 	[%rd1+4], %rd1247;
	st.local.u32 	[%rd1], %rd1247;
	bra.uni 	BB0_174;

BB0_42:
	setp.eq.s32	%p24, %r3, 18;
	@%p24 bra 	BB0_73;
	bra.uni 	BB0_43;

BB0_73:
	ld.local.u32 	%r2423, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9161, %r9143, %r2423, %r4;
	// inline asm
	ld.local.u32 	%r2426, [%rd8+12];
	ld.local.u32 	%r2427, [%rd8+8];
	// inline asm
	prmt.b32 %r9162, %r2426, %r2427, %r4;
	// inline asm
	ld.local.u32 	%r2430, [%rd8+8];
	ld.local.u32 	%r2431, [%rd8+4];
	// inline asm
	prmt.b32 %r9163, %r2430, %r2431, %r4;
	// inline asm
	ld.local.u32 	%r2434, [%rd8+4];
	ld.local.u32 	%r2435, [%rd8];
	// inline asm
	prmt.b32 %r9156, %r2434, %r2435, %r4;
	// inline asm
	ld.local.u32 	%r2438, [%rd8];
	ld.local.u32 	%r2439, [%rd7+12];
	// inline asm
	prmt.b32 %r9157, %r2438, %r2439, %r4;
	// inline asm
	ld.local.u32 	%r2442, [%rd7+12];
	ld.local.u32 	%r2443, [%rd7+8];
	// inline asm
	prmt.b32 %r9158, %r2442, %r2443, %r4;
	// inline asm
	ld.local.u32 	%r2446, [%rd7+8];
	ld.local.u32 	%r2447, [%rd7+4];
	// inline asm
	prmt.b32 %r9159, %r2446, %r2447, %r4;
	// inline asm
	ld.local.u32 	%r2450, [%rd7+4];
	ld.local.u32 	%r2451, [%rd7];
	// inline asm
	prmt.b32 %r9152, %r2450, %r2451, %r4;
	// inline asm
	ld.local.u32 	%r2454, [%rd7];
	ld.local.u32 	%r2455, [%rd6+12];
	// inline asm
	prmt.b32 %r9153, %r2454, %r2455, %r4;
	// inline asm
	ld.local.u32 	%r2458, [%rd6+12];
	ld.local.u32 	%r2459, [%rd6+8];
	// inline asm
	prmt.b32 %r9154, %r2458, %r2459, %r4;
	// inline asm
	ld.local.u32 	%r2462, [%rd6+8];
	ld.local.u32 	%r2463, [%rd6+4];
	// inline asm
	prmt.b32 %r9155, %r2462, %r2463, %r4;
	// inline asm
	ld.local.u32 	%r2466, [%rd6+4];
	ld.local.u32 	%r2467, [%rd6];
	// inline asm
	prmt.b32 %r9148, %r2466, %r2467, %r4;
	// inline asm
	ld.local.u32 	%r2470, [%rd6];
	ld.local.u32 	%r2471, [%rd5+12];
	// inline asm
	prmt.b32 %r9149, %r2470, %r2471, %r4;
	// inline asm
	ld.local.u32 	%r2474, [%rd5+12];
	ld.local.u32 	%r2475, [%rd5+8];
	// inline asm
	prmt.b32 %r9150, %r2474, %r2475, %r4;
	// inline asm
	ld.local.u32 	%r2478, [%rd5+8];
	ld.local.u32 	%r2479, [%rd5+4];
	// inline asm
	prmt.b32 %r9151, %r2478, %r2479, %r4;
	// inline asm
	ld.local.u32 	%r2482, [%rd5+4];
	ld.local.u32 	%r2483, [%rd5];
	// inline asm
	prmt.b32 %r9144, %r2482, %r2483, %r4;
	// inline asm
	ld.local.u32 	%r2486, [%rd5];
	ld.local.u32 	%r2487, [%rd4+12];
	// inline asm
	prmt.b32 %r9145, %r2486, %r2487, %r4;
	// inline asm
	ld.local.u32 	%r2490, [%rd4+12];
	ld.local.u32 	%r2491, [%rd4+8];
	// inline asm
	prmt.b32 %r9146, %r2490, %r2491, %r4;
	// inline asm
	ld.local.u32 	%r2494, [%rd4+8];
	ld.local.u32 	%r2495, [%rd4+4];
	// inline asm
	prmt.b32 %r9147, %r2494, %r2495, %r4;
	// inline asm
	ld.local.u32 	%r2498, [%rd4+4];
	ld.local.u32 	%r2499, [%rd4];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2497;
	ld.local.u32 	%r2502, [%rd4];
	ld.local.u32 	%r2503, [%rd3+12];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2501;
	ld.local.u32 	%r2506, [%rd3+12];
	ld.local.u32 	%r2507, [%rd3+8];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2505;
	ld.local.u32 	%r2510, [%rd3+8];
	ld.local.u32 	%r2511, [%rd3+4];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2509;
	ld.local.u32 	%r2514, [%rd3+4];
	ld.local.u32 	%r2515, [%rd3];
	// inline asm
	prmt.b32 %r2513, %r2514, %r2515, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2513;
	ld.local.u32 	%r2518, [%rd3];
	ld.local.u32 	%r2519, [%rd2+12];
	// inline asm
	prmt.b32 %r2517, %r2518, %r2519, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2517;
	ld.local.u32 	%r2522, [%rd2+12];
	ld.local.u32 	%r2523, [%rd2+8];
	// inline asm
	prmt.b32 %r2521, %r2522, %r2523, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2521;
	ld.local.u32 	%r2526, [%rd2+8];
	ld.local.u32 	%r2527, [%rd2+4];
	// inline asm
	prmt.b32 %r2525, %r2526, %r2527, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2525;
	ld.local.u32 	%r2530, [%rd2+4];
	ld.local.u32 	%r2531, [%rd2];
	// inline asm
	prmt.b32 %r2529, %r2530, %r2531, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2529;
	ld.local.u32 	%r2534, [%rd2];
	ld.local.u32 	%r2535, [%rd1+12];
	// inline asm
	prmt.b32 %r2533, %r2534, %r2535, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2533;
	ld.local.u32 	%r2538, [%rd1+12];
	ld.local.u32 	%r2539, [%rd1+8];
	// inline asm
	prmt.b32 %r2537, %r2538, %r2539, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2537;
	ld.local.u32 	%r2542, [%rd1+8];
	ld.local.u32 	%r2543, [%rd1+4];
	// inline asm
	prmt.b32 %r2541, %r2542, %r2543, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2541;
	ld.local.u32 	%r2546, [%rd1+4];
	ld.local.u32 	%r2547, [%rd1];
	// inline asm
	prmt.b32 %r2545, %r2546, %r2547, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2545;
	ld.local.u32 	%r2550, [%rd1];
	// inline asm
	prmt.b32 %r2549, %r2550, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2549;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd199, 0;
	st.local.u32 	[%rd1+4], %rd199;
	st.local.u32 	[%rd1], %rd199;
	mov.u32 	%r9160, %r9143;
	bra.uni 	BB0_84;

BB0_116:
	setp.eq.s32	%p84, %r3, 10;
	@%p84 bra 	BB0_167;
	bra.uni 	BB0_117;

BB0_167:
	ld.local.u32 	%r7152, [%rd6+4];
	ld.local.u32 	%r7153, [%rd6];
	// inline asm
	prmt.b32 %r7151, %r7152, %r7153, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7151;
	ld.local.u32 	%r7156, [%rd6];
	ld.local.u32 	%r7157, [%rd5+12];
	// inline asm
	prmt.b32 %r7155, %r7156, %r7157, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7155;
	ld.local.u32 	%r7160, [%rd5+12];
	ld.local.u32 	%r7161, [%rd5+8];
	// inline asm
	prmt.b32 %r7159, %r7160, %r7161, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7159;
	ld.local.u32 	%r7164, [%rd5+8];
	ld.local.u32 	%r7165, [%rd5+4];
	// inline asm
	prmt.b32 %r7163, %r7164, %r7165, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7163;
	ld.local.u32 	%r7168, [%rd5+4];
	ld.local.u32 	%r7169, [%rd5];
	// inline asm
	prmt.b32 %r7167, %r7168, %r7169, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7167;
	ld.local.u32 	%r7172, [%rd5];
	ld.local.u32 	%r7173, [%rd4+12];
	// inline asm
	prmt.b32 %r7171, %r7172, %r7173, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7171;
	ld.local.u32 	%r7176, [%rd4+12];
	ld.local.u32 	%r7177, [%rd4+8];
	// inline asm
	prmt.b32 %r7175, %r7176, %r7177, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7175;
	ld.local.u32 	%r7180, [%rd4+8];
	ld.local.u32 	%r7181, [%rd4+4];
	// inline asm
	prmt.b32 %r7179, %r7180, %r7181, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7179;
	ld.local.u32 	%r7184, [%rd4+4];
	ld.local.u32 	%r7185, [%rd4];
	// inline asm
	prmt.b32 %r7183, %r7184, %r7185, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7183;
	ld.local.u32 	%r7188, [%rd4];
	ld.local.u32 	%r7189, [%rd3+12];
	// inline asm
	prmt.b32 %r7187, %r7188, %r7189, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7187;
	ld.local.u32 	%r7192, [%rd3+12];
	ld.local.u32 	%r7193, [%rd3+8];
	// inline asm
	prmt.b32 %r7191, %r7192, %r7193, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7191;
	ld.local.u32 	%r7196, [%rd3+8];
	ld.local.u32 	%r7197, [%rd3+4];
	// inline asm
	prmt.b32 %r7195, %r7196, %r7197, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7195;
	ld.local.u32 	%r7200, [%rd3+4];
	ld.local.u32 	%r7201, [%rd3];
	// inline asm
	prmt.b32 %r7199, %r7200, %r7201, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7199;
	ld.local.u32 	%r7204, [%rd3];
	ld.local.u32 	%r7205, [%rd2+12];
	// inline asm
	prmt.b32 %r7203, %r7204, %r7205, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7203;
	ld.local.u32 	%r7208, [%rd2+12];
	ld.local.u32 	%r7209, [%rd2+8];
	// inline asm
	prmt.b32 %r7207, %r7208, %r7209, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7207;
	ld.local.u32 	%r7212, [%rd2+8];
	ld.local.u32 	%r7213, [%rd2+4];
	// inline asm
	prmt.b32 %r7211, %r7212, %r7213, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7211;
	ld.local.u32 	%r7216, [%rd2+4];
	ld.local.u32 	%r7217, [%rd2];
	// inline asm
	prmt.b32 %r7215, %r7216, %r7217, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7215;
	ld.local.u32 	%r7220, [%rd2];
	ld.local.u32 	%r7221, [%rd1+12];
	// inline asm
	prmt.b32 %r7219, %r7220, %r7221, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7219;
	ld.local.u32 	%r7224, [%rd1+12];
	ld.local.u32 	%r7225, [%rd1+8];
	// inline asm
	prmt.b32 %r7223, %r7224, %r7225, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7223;
	ld.local.u32 	%r7228, [%rd1+8];
	ld.local.u32 	%r7229, [%rd1+4];
	// inline asm
	prmt.b32 %r7227, %r7228, %r7229, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7227;
	ld.local.u32 	%r7232, [%rd1+4];
	ld.local.u32 	%r7233, [%rd1];
	// inline asm
	prmt.b32 %r7231, %r7232, %r7233, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7231;
	ld.local.u32 	%r7236, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7235, %r7236, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7235;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1255, 0;
	st.local.u32 	[%rd1+4], %rd1255;
	st.local.u32 	[%rd1], %rd1255;
	bra.uni 	BB0_174;

BB0_26:
	setp.eq.s32	%p36, %r3, 10;
	@%p36 bra 	BB0_77;
	bra.uni 	BB0_27;

BB0_77:
	ld.local.u32 	%r3619, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9153, %r9143, %r3619, %r4;
	// inline asm
	ld.local.u32 	%r3622, [%rd8+12];
	ld.local.u32 	%r3623, [%rd8+8];
	// inline asm
	prmt.b32 %r9154, %r3622, %r3623, %r4;
	// inline asm
	ld.local.u32 	%r3626, [%rd8+8];
	ld.local.u32 	%r3627, [%rd8+4];
	// inline asm
	prmt.b32 %r9155, %r3626, %r3627, %r4;
	// inline asm
	ld.local.u32 	%r3630, [%rd8+4];
	ld.local.u32 	%r3631, [%rd8];
	// inline asm
	prmt.b32 %r9148, %r3630, %r3631, %r4;
	// inline asm
	ld.local.u32 	%r3634, [%rd8];
	ld.local.u32 	%r3635, [%rd7+12];
	// inline asm
	prmt.b32 %r9149, %r3634, %r3635, %r4;
	// inline asm
	ld.local.u32 	%r3638, [%rd7+12];
	ld.local.u32 	%r3639, [%rd7+8];
	// inline asm
	prmt.b32 %r9150, %r3638, %r3639, %r4;
	// inline asm
	ld.local.u32 	%r3642, [%rd7+8];
	ld.local.u32 	%r3643, [%rd7+4];
	// inline asm
	prmt.b32 %r9151, %r3642, %r3643, %r4;
	// inline asm
	ld.local.u32 	%r3646, [%rd7+4];
	ld.local.u32 	%r3647, [%rd7];
	// inline asm
	prmt.b32 %r9144, %r3646, %r3647, %r4;
	// inline asm
	ld.local.u32 	%r3650, [%rd7];
	ld.local.u32 	%r3651, [%rd6+12];
	// inline asm
	prmt.b32 %r9145, %r3650, %r3651, %r4;
	// inline asm
	ld.local.u32 	%r3654, [%rd6+12];
	ld.local.u32 	%r3655, [%rd6+8];
	// inline asm
	prmt.b32 %r9146, %r3654, %r3655, %r4;
	// inline asm
	ld.local.u32 	%r3658, [%rd6+8];
	ld.local.u32 	%r3659, [%rd6+4];
	// inline asm
	prmt.b32 %r9147, %r3658, %r3659, %r4;
	// inline asm
	ld.local.u32 	%r3662, [%rd6+4];
	ld.local.u32 	%r3663, [%rd6];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3661;
	ld.local.u32 	%r3666, [%rd6];
	ld.local.u32 	%r3667, [%rd5+12];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3665;
	ld.local.u32 	%r3670, [%rd5+12];
	ld.local.u32 	%r3671, [%rd5+8];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3669;
	ld.local.u32 	%r3674, [%rd5+8];
	ld.local.u32 	%r3675, [%rd5+4];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3673;
	ld.local.u32 	%r3678, [%rd5+4];
	ld.local.u32 	%r3679, [%rd5];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3677;
	ld.local.u32 	%r3682, [%rd5];
	ld.local.u32 	%r3683, [%rd4+12];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3681;
	ld.local.u32 	%r3686, [%rd4+12];
	ld.local.u32 	%r3687, [%rd4+8];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3685;
	ld.local.u32 	%r3690, [%rd4+8];
	ld.local.u32 	%r3691, [%rd4+4];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3689;
	ld.local.u32 	%r3694, [%rd4+4];
	ld.local.u32 	%r3695, [%rd4];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3693;
	ld.local.u32 	%r3698, [%rd4];
	ld.local.u32 	%r3699, [%rd3+12];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3697;
	ld.local.u32 	%r3702, [%rd3+12];
	ld.local.u32 	%r3703, [%rd3+8];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3701;
	ld.local.u32 	%r3706, [%rd3+8];
	ld.local.u32 	%r3707, [%rd3+4];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3705;
	ld.local.u32 	%r3710, [%rd3+4];
	ld.local.u32 	%r3711, [%rd3];
	// inline asm
	prmt.b32 %r3709, %r3710, %r3711, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3709;
	ld.local.u32 	%r3714, [%rd3];
	ld.local.u32 	%r3715, [%rd2+12];
	// inline asm
	prmt.b32 %r3713, %r3714, %r3715, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3713;
	ld.local.u32 	%r3718, [%rd2+12];
	ld.local.u32 	%r3719, [%rd2+8];
	// inline asm
	prmt.b32 %r3717, %r3718, %r3719, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3717;
	ld.local.u32 	%r3722, [%rd2+8];
	ld.local.u32 	%r3723, [%rd2+4];
	// inline asm
	prmt.b32 %r3721, %r3722, %r3723, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3721;
	ld.local.u32 	%r3726, [%rd2+4];
	ld.local.u32 	%r3727, [%rd2];
	// inline asm
	prmt.b32 %r3725, %r3726, %r3727, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3725;
	ld.local.u32 	%r3730, [%rd2];
	ld.local.u32 	%r3731, [%rd1+12];
	// inline asm
	prmt.b32 %r3729, %r3730, %r3731, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3729;
	ld.local.u32 	%r3734, [%rd1+12];
	ld.local.u32 	%r3735, [%rd1+8];
	// inline asm
	prmt.b32 %r3733, %r3734, %r3735, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3733;
	ld.local.u32 	%r3738, [%rd1+8];
	ld.local.u32 	%r3739, [%rd1+4];
	// inline asm
	prmt.b32 %r3737, %r3738, %r3739, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3737;
	ld.local.u32 	%r3742, [%rd1+4];
	ld.local.u32 	%r3743, [%rd1];
	// inline asm
	prmt.b32 %r3741, %r3742, %r3743, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3741;
	ld.local.u32 	%r3746, [%rd1];
	// inline asm
	prmt.b32 %r3745, %r3746, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3745;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd207, 0;
	st.local.u32 	[%rd1+4], %rd207;
	st.local.u32 	[%rd1], %rd207;
	mov.u32 	%r9152, %r9143;
	bra.uni 	BB0_82;

BB0_147:
	setp.eq.s32	%p61, %r3, 26;
	@%p61 bra 	BB0_159;
	bra.uni 	BB0_148;

BB0_159:
	ld.local.u32 	%r6272, [%rd2+4];
	ld.local.u32 	%r6273, [%rd2];
	// inline asm
	prmt.b32 %r6271, %r6272, %r6273, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6271;
	ld.local.u32 	%r6276, [%rd2];
	ld.local.u32 	%r6277, [%rd1+12];
	// inline asm
	prmt.b32 %r6275, %r6276, %r6277, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6275;
	ld.local.u32 	%r6280, [%rd1+12];
	ld.local.u32 	%r6281, [%rd1+8];
	// inline asm
	prmt.b32 %r6279, %r6280, %r6281, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6279;
	ld.local.u32 	%r6284, [%rd1+8];
	ld.local.u32 	%r6285, [%rd1+4];
	// inline asm
	prmt.b32 %r6283, %r6284, %r6285, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6283;
	ld.local.u32 	%r6288, [%rd1+4];
	ld.local.u32 	%r6289, [%rd1];
	// inline asm
	prmt.b32 %r6287, %r6288, %r6289, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6287;
	ld.local.u32 	%r6292, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6291, %r6292, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6291;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1239, 0;
	st.local.u32 	[%rd1+4], %rd1239;
	st.local.u32 	[%rd1], %rd1239;
	bra.uni 	BB0_174;

BB0_57:
	setp.eq.s32	%p13, %r3, 26;
	@%p13 bra 	BB0_69;
	bra.uni 	BB0_58;

BB0_69:
	ld.local.u32 	%r1291, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9169, %r9143, %r1291, %r4;
	// inline asm
	ld.local.u32 	%r1294, [%rd8+12];
	ld.local.u32 	%r1295, [%rd8+8];
	// inline asm
	prmt.b32 %r9170, %r1294, %r1295, %r4;
	// inline asm
	ld.local.u32 	%r1298, [%rd8+8];
	ld.local.u32 	%r1299, [%rd8+4];
	// inline asm
	prmt.b32 %r9171, %r1298, %r1299, %r4;
	// inline asm
	ld.local.u32 	%r1302, [%rd8+4];
	ld.local.u32 	%r1303, [%rd8];
	// inline asm
	prmt.b32 %r9164, %r1302, %r1303, %r4;
	// inline asm
	ld.local.u32 	%r1306, [%rd8];
	ld.local.u32 	%r1307, [%rd7+12];
	// inline asm
	prmt.b32 %r9165, %r1306, %r1307, %r4;
	// inline asm
	ld.local.u32 	%r1310, [%rd7+12];
	ld.local.u32 	%r1311, [%rd7+8];
	// inline asm
	prmt.b32 %r9166, %r1310, %r1311, %r4;
	// inline asm
	ld.local.u32 	%r1314, [%rd7+8];
	ld.local.u32 	%r1315, [%rd7+4];
	// inline asm
	prmt.b32 %r9167, %r1314, %r1315, %r4;
	// inline asm
	ld.local.u32 	%r1318, [%rd7+4];
	ld.local.u32 	%r1319, [%rd7];
	// inline asm
	prmt.b32 %r9160, %r1318, %r1319, %r4;
	// inline asm
	ld.local.u32 	%r1322, [%rd7];
	ld.local.u32 	%r1323, [%rd6+12];
	// inline asm
	prmt.b32 %r9161, %r1322, %r1323, %r4;
	// inline asm
	ld.local.u32 	%r1326, [%rd6+12];
	ld.local.u32 	%r1327, [%rd6+8];
	// inline asm
	prmt.b32 %r9162, %r1326, %r1327, %r4;
	// inline asm
	ld.local.u32 	%r1330, [%rd6+8];
	ld.local.u32 	%r1331, [%rd6+4];
	// inline asm
	prmt.b32 %r9163, %r1330, %r1331, %r4;
	// inline asm
	ld.local.u32 	%r1334, [%rd6+4];
	ld.local.u32 	%r1335, [%rd6];
	// inline asm
	prmt.b32 %r9156, %r1334, %r1335, %r4;
	// inline asm
	ld.local.u32 	%r1338, [%rd6];
	ld.local.u32 	%r1339, [%rd5+12];
	// inline asm
	prmt.b32 %r9157, %r1338, %r1339, %r4;
	// inline asm
	ld.local.u32 	%r1342, [%rd5+12];
	ld.local.u32 	%r1343, [%rd5+8];
	// inline asm
	prmt.b32 %r9158, %r1342, %r1343, %r4;
	// inline asm
	ld.local.u32 	%r1346, [%rd5+8];
	ld.local.u32 	%r1347, [%rd5+4];
	// inline asm
	prmt.b32 %r9159, %r1346, %r1347, %r4;
	// inline asm
	ld.local.u32 	%r1350, [%rd5+4];
	ld.local.u32 	%r1351, [%rd5];
	// inline asm
	prmt.b32 %r9152, %r1350, %r1351, %r4;
	// inline asm
	ld.local.u32 	%r1354, [%rd5];
	ld.local.u32 	%r1355, [%rd4+12];
	// inline asm
	prmt.b32 %r9153, %r1354, %r1355, %r4;
	// inline asm
	ld.local.u32 	%r1358, [%rd4+12];
	ld.local.u32 	%r1359, [%rd4+8];
	// inline asm
	prmt.b32 %r9154, %r1358, %r1359, %r4;
	// inline asm
	ld.local.u32 	%r1362, [%rd4+8];
	ld.local.u32 	%r1363, [%rd4+4];
	// inline asm
	prmt.b32 %r9155, %r1362, %r1363, %r4;
	// inline asm
	ld.local.u32 	%r1366, [%rd4+4];
	ld.local.u32 	%r1367, [%rd4];
	// inline asm
	prmt.b32 %r9148, %r1366, %r1367, %r4;
	// inline asm
	ld.local.u32 	%r1370, [%rd4];
	ld.local.u32 	%r1371, [%rd3+12];
	// inline asm
	prmt.b32 %r9149, %r1370, %r1371, %r4;
	// inline asm
	ld.local.u32 	%r1374, [%rd3+12];
	ld.local.u32 	%r1375, [%rd3+8];
	// inline asm
	prmt.b32 %r9150, %r1374, %r1375, %r4;
	// inline asm
	ld.local.u32 	%r1378, [%rd3+8];
	ld.local.u32 	%r1379, [%rd3+4];
	// inline asm
	prmt.b32 %r9151, %r1378, %r1379, %r4;
	// inline asm
	ld.local.u32 	%r1382, [%rd3+4];
	ld.local.u32 	%r1383, [%rd3];
	// inline asm
	prmt.b32 %r9144, %r1382, %r1383, %r4;
	// inline asm
	ld.local.u32 	%r1386, [%rd3];
	ld.local.u32 	%r1387, [%rd2+12];
	// inline asm
	prmt.b32 %r9145, %r1386, %r1387, %r4;
	// inline asm
	ld.local.u32 	%r1390, [%rd2+12];
	ld.local.u32 	%r1391, [%rd2+8];
	// inline asm
	prmt.b32 %r9146, %r1390, %r1391, %r4;
	// inline asm
	ld.local.u32 	%r1394, [%rd2+8];
	ld.local.u32 	%r1395, [%rd2+4];
	// inline asm
	prmt.b32 %r9147, %r1394, %r1395, %r4;
	// inline asm
	ld.local.u32 	%r1398, [%rd2+4];
	ld.local.u32 	%r1399, [%rd2];
	// inline asm
	prmt.b32 %r1397, %r1398, %r1399, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1397;
	ld.local.u32 	%r1402, [%rd2];
	ld.local.u32 	%r1403, [%rd1+12];
	// inline asm
	prmt.b32 %r1401, %r1402, %r1403, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1401;
	ld.local.u32 	%r1406, [%rd1+12];
	ld.local.u32 	%r1407, [%rd1+8];
	// inline asm
	prmt.b32 %r1405, %r1406, %r1407, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1405;
	ld.local.u32 	%r1410, [%rd1+8];
	ld.local.u32 	%r1411, [%rd1+4];
	// inline asm
	prmt.b32 %r1409, %r1410, %r1411, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1409;
	ld.local.u32 	%r1414, [%rd1+4];
	ld.local.u32 	%r1415, [%rd1];
	// inline asm
	prmt.b32 %r1413, %r1414, %r1415, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1413;
	ld.local.u32 	%r1418, [%rd1];
	// inline asm
	prmt.b32 %r1417, %r1418, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1417;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd191, 0;
	st.local.u32 	[%rd1+4], %rd191;
	st.local.u32 	[%rd1], %rd191;
	mov.u32 	%r9168, %r9143;
	bra.uni 	BB0_86;

BB0_108:
	setp.eq.s32	%p90, %r3, 6;
	@%p90 bra 	BB0_169;
	bra.uni 	BB0_109;

BB0_169:
	ld.local.u32 	%r7532, [%rd7+4];
	ld.local.u32 	%r7533, [%rd7];
	// inline asm
	prmt.b32 %r7531, %r7532, %r7533, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7531;
	ld.local.u32 	%r7536, [%rd7];
	ld.local.u32 	%r7537, [%rd6+12];
	// inline asm
	prmt.b32 %r7535, %r7536, %r7537, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7535;
	ld.local.u32 	%r7540, [%rd6+12];
	ld.local.u32 	%r7541, [%rd6+8];
	// inline asm
	prmt.b32 %r7539, %r7540, %r7541, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7539;
	ld.local.u32 	%r7544, [%rd6+8];
	ld.local.u32 	%r7545, [%rd6+4];
	// inline asm
	prmt.b32 %r7543, %r7544, %r7545, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7543;
	ld.local.u32 	%r7548, [%rd6+4];
	ld.local.u32 	%r7549, [%rd6];
	// inline asm
	prmt.b32 %r7547, %r7548, %r7549, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7547;
	ld.local.u32 	%r7552, [%rd6];
	ld.local.u32 	%r7553, [%rd5+12];
	// inline asm
	prmt.b32 %r7551, %r7552, %r7553, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7551;
	ld.local.u32 	%r7556, [%rd5+12];
	ld.local.u32 	%r7557, [%rd5+8];
	// inline asm
	prmt.b32 %r7555, %r7556, %r7557, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7555;
	ld.local.u32 	%r7560, [%rd5+8];
	ld.local.u32 	%r7561, [%rd5+4];
	// inline asm
	prmt.b32 %r7559, %r7560, %r7561, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7559;
	ld.local.u32 	%r7564, [%rd5+4];
	ld.local.u32 	%r7565, [%rd5];
	// inline asm
	prmt.b32 %r7563, %r7564, %r7565, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7563;
	ld.local.u32 	%r7568, [%rd5];
	ld.local.u32 	%r7569, [%rd4+12];
	// inline asm
	prmt.b32 %r7567, %r7568, %r7569, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7567;
	ld.local.u32 	%r7572, [%rd4+12];
	ld.local.u32 	%r7573, [%rd4+8];
	// inline asm
	prmt.b32 %r7571, %r7572, %r7573, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7571;
	ld.local.u32 	%r7576, [%rd4+8];
	ld.local.u32 	%r7577, [%rd4+4];
	// inline asm
	prmt.b32 %r7575, %r7576, %r7577, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7575;
	ld.local.u32 	%r7580, [%rd4+4];
	ld.local.u32 	%r7581, [%rd4];
	// inline asm
	prmt.b32 %r7579, %r7580, %r7581, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7579;
	ld.local.u32 	%r7584, [%rd4];
	ld.local.u32 	%r7585, [%rd3+12];
	// inline asm
	prmt.b32 %r7583, %r7584, %r7585, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7583;
	ld.local.u32 	%r7588, [%rd3+12];
	ld.local.u32 	%r7589, [%rd3+8];
	// inline asm
	prmt.b32 %r7587, %r7588, %r7589, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7587;
	ld.local.u32 	%r7592, [%rd3+8];
	ld.local.u32 	%r7593, [%rd3+4];
	// inline asm
	prmt.b32 %r7591, %r7592, %r7593, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7591;
	ld.local.u32 	%r7596, [%rd3+4];
	ld.local.u32 	%r7597, [%rd3];
	// inline asm
	prmt.b32 %r7595, %r7596, %r7597, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7595;
	ld.local.u32 	%r7600, [%rd3];
	ld.local.u32 	%r7601, [%rd2+12];
	// inline asm
	prmt.b32 %r7599, %r7600, %r7601, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7599;
	ld.local.u32 	%r7604, [%rd2+12];
	ld.local.u32 	%r7605, [%rd2+8];
	// inline asm
	prmt.b32 %r7603, %r7604, %r7605, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7603;
	ld.local.u32 	%r7608, [%rd2+8];
	ld.local.u32 	%r7609, [%rd2+4];
	// inline asm
	prmt.b32 %r7607, %r7608, %r7609, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7607;
	ld.local.u32 	%r7612, [%rd2+4];
	ld.local.u32 	%r7613, [%rd2];
	// inline asm
	prmt.b32 %r7611, %r7612, %r7613, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7611;
	ld.local.u32 	%r7616, [%rd2];
	ld.local.u32 	%r7617, [%rd1+12];
	// inline asm
	prmt.b32 %r7615, %r7616, %r7617, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7615;
	ld.local.u32 	%r7620, [%rd1+12];
	ld.local.u32 	%r7621, [%rd1+8];
	// inline asm
	prmt.b32 %r7619, %r7620, %r7621, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7619;
	ld.local.u32 	%r7624, [%rd1+8];
	ld.local.u32 	%r7625, [%rd1+4];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7623;
	ld.local.u32 	%r7628, [%rd1+4];
	ld.local.u32 	%r7629, [%rd1];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7627;
	ld.local.u32 	%r7632, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7631, %r7632, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7631;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1259, 0;
	st.local.u32 	[%rd1+4], %rd1259;
	st.local.u32 	[%rd1], %rd1259;
	bra.uni 	BB0_174;

BB0_18:
	setp.eq.s32	%p42, %r3, 6;
	@%p42 bra 	BB0_79;
	bra.uni 	BB0_19;

BB0_79:
	ld.local.u32 	%r4241, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9149, %r9143, %r4241, %r4;
	// inline asm
	ld.local.u32 	%r4244, [%rd8+12];
	ld.local.u32 	%r4245, [%rd8+8];
	// inline asm
	prmt.b32 %r9150, %r4244, %r4245, %r4;
	// inline asm
	ld.local.u32 	%r4248, [%rd8+8];
	ld.local.u32 	%r4249, [%rd8+4];
	// inline asm
	prmt.b32 %r9151, %r4248, %r4249, %r4;
	// inline asm
	ld.local.u32 	%r4252, [%rd8+4];
	ld.local.u32 	%r4253, [%rd8];
	// inline asm
	prmt.b32 %r9144, %r4252, %r4253, %r4;
	// inline asm
	ld.local.u32 	%r4256, [%rd8];
	ld.local.u32 	%r4257, [%rd7+12];
	// inline asm
	prmt.b32 %r9145, %r4256, %r4257, %r4;
	// inline asm
	ld.local.u32 	%r4260, [%rd7+12];
	ld.local.u32 	%r4261, [%rd7+8];
	// inline asm
	prmt.b32 %r9146, %r4260, %r4261, %r4;
	// inline asm
	ld.local.u32 	%r4264, [%rd7+8];
	ld.local.u32 	%r4265, [%rd7+4];
	// inline asm
	prmt.b32 %r9147, %r4264, %r4265, %r4;
	// inline asm
	ld.local.u32 	%r4268, [%rd7+4];
	ld.local.u32 	%r4269, [%rd7];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4267;
	ld.local.u32 	%r4272, [%rd7];
	ld.local.u32 	%r4273, [%rd6+12];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4271;
	ld.local.u32 	%r4276, [%rd6+12];
	ld.local.u32 	%r4277, [%rd6+8];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4275;
	ld.local.u32 	%r4280, [%rd6+8];
	ld.local.u32 	%r4281, [%rd6+4];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4279;
	ld.local.u32 	%r4284, [%rd6+4];
	ld.local.u32 	%r4285, [%rd6];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4283;
	ld.local.u32 	%r4288, [%rd6];
	ld.local.u32 	%r4289, [%rd5+12];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4287;
	ld.local.u32 	%r4292, [%rd5+12];
	ld.local.u32 	%r4293, [%rd5+8];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4291;
	ld.local.u32 	%r4296, [%rd5+8];
	ld.local.u32 	%r4297, [%rd5+4];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4295;
	ld.local.u32 	%r4300, [%rd5+4];
	ld.local.u32 	%r4301, [%rd5];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4299;
	ld.local.u32 	%r4304, [%rd5];
	ld.local.u32 	%r4305, [%rd4+12];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4303;
	ld.local.u32 	%r4308, [%rd4+12];
	ld.local.u32 	%r4309, [%rd4+8];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4307;
	ld.local.u32 	%r4312, [%rd4+8];
	ld.local.u32 	%r4313, [%rd4+4];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4311;
	ld.local.u32 	%r4316, [%rd4+4];
	ld.local.u32 	%r4317, [%rd4];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4315;
	ld.local.u32 	%r4320, [%rd4];
	ld.local.u32 	%r4321, [%rd3+12];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4319;
	ld.local.u32 	%r4324, [%rd3+12];
	ld.local.u32 	%r4325, [%rd3+8];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4323;
	ld.local.u32 	%r4328, [%rd3+8];
	ld.local.u32 	%r4329, [%rd3+4];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4327;
	ld.local.u32 	%r4332, [%rd3+4];
	ld.local.u32 	%r4333, [%rd3];
	// inline asm
	prmt.b32 %r4331, %r4332, %r4333, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4331;
	ld.local.u32 	%r4336, [%rd3];
	ld.local.u32 	%r4337, [%rd2+12];
	// inline asm
	prmt.b32 %r4335, %r4336, %r4337, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4335;
	ld.local.u32 	%r4340, [%rd2+12];
	ld.local.u32 	%r4341, [%rd2+8];
	// inline asm
	prmt.b32 %r4339, %r4340, %r4341, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4339;
	ld.local.u32 	%r4344, [%rd2+8];
	ld.local.u32 	%r4345, [%rd2+4];
	// inline asm
	prmt.b32 %r4343, %r4344, %r4345, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4343;
	ld.local.u32 	%r4348, [%rd2+4];
	ld.local.u32 	%r4349, [%rd2];
	// inline asm
	prmt.b32 %r4347, %r4348, %r4349, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4347;
	ld.local.u32 	%r4352, [%rd2];
	ld.local.u32 	%r4353, [%rd1+12];
	// inline asm
	prmt.b32 %r4351, %r4352, %r4353, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4351;
	ld.local.u32 	%r4356, [%rd1+12];
	ld.local.u32 	%r4357, [%rd1+8];
	// inline asm
	prmt.b32 %r4355, %r4356, %r4357, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4355;
	ld.local.u32 	%r4360, [%rd1+8];
	ld.local.u32 	%r4361, [%rd1+4];
	// inline asm
	prmt.b32 %r4359, %r4360, %r4361, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4359;
	ld.local.u32 	%r4364, [%rd1+4];
	ld.local.u32 	%r4365, [%rd1];
	// inline asm
	prmt.b32 %r4363, %r4364, %r4365, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4363;
	ld.local.u32 	%r4368, [%rd1];
	// inline asm
	prmt.b32 %r4367, %r4368, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4367;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd211, 0;
	st.local.u32 	[%rd1+4], %rd211;
	st.local.u32 	[%rd1], %rd211;
	mov.u32 	%r9148, %r9143;
	bra.uni 	BB0_81;

BB0_139:
	setp.eq.s32	%p67, %r3, 22;
	@%p67 bra 	BB0_161;
	bra.uni 	BB0_140;

BB0_161:
	ld.local.u32 	%r6396, [%rd3+4];
	ld.local.u32 	%r6397, [%rd3];
	// inline asm
	prmt.b32 %r6395, %r6396, %r6397, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6395;
	ld.local.u32 	%r6400, [%rd3];
	ld.local.u32 	%r6401, [%rd2+12];
	// inline asm
	prmt.b32 %r6399, %r6400, %r6401, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6399;
	ld.local.u32 	%r6404, [%rd2+12];
	ld.local.u32 	%r6405, [%rd2+8];
	// inline asm
	prmt.b32 %r6403, %r6404, %r6405, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6403;
	ld.local.u32 	%r6408, [%rd2+8];
	ld.local.u32 	%r6409, [%rd2+4];
	// inline asm
	prmt.b32 %r6407, %r6408, %r6409, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6407;
	ld.local.u32 	%r6412, [%rd2+4];
	ld.local.u32 	%r6413, [%rd2];
	// inline asm
	prmt.b32 %r6411, %r6412, %r6413, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6411;
	ld.local.u32 	%r6416, [%rd2];
	ld.local.u32 	%r6417, [%rd1+12];
	// inline asm
	prmt.b32 %r6415, %r6416, %r6417, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6415;
	ld.local.u32 	%r6420, [%rd1+12];
	ld.local.u32 	%r6421, [%rd1+8];
	// inline asm
	prmt.b32 %r6419, %r6420, %r6421, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6419;
	ld.local.u32 	%r6424, [%rd1+8];
	ld.local.u32 	%r6425, [%rd1+4];
	// inline asm
	prmt.b32 %r6423, %r6424, %r6425, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6423;
	ld.local.u32 	%r6428, [%rd1+4];
	ld.local.u32 	%r6429, [%rd1];
	// inline asm
	prmt.b32 %r6427, %r6428, %r6429, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6427;
	ld.local.u32 	%r6432, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6431, %r6432, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6431;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1243, 0;
	st.local.u32 	[%rd1+4], %rd1243;
	st.local.u32 	[%rd1], %rd1243;
	bra.uni 	BB0_174;

BB0_49:
	setp.eq.s32	%p19, %r3, 22;
	@%p19 bra 	BB0_71;
	bra.uni 	BB0_50;

BB0_71:
	ld.local.u32 	%r1849, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9165, %r9143, %r1849, %r4;
	// inline asm
	ld.local.u32 	%r1852, [%rd8+12];
	ld.local.u32 	%r1853, [%rd8+8];
	// inline asm
	prmt.b32 %r9166, %r1852, %r1853, %r4;
	// inline asm
	ld.local.u32 	%r1856, [%rd8+8];
	ld.local.u32 	%r1857, [%rd8+4];
	// inline asm
	prmt.b32 %r9167, %r1856, %r1857, %r4;
	// inline asm
	ld.local.u32 	%r1860, [%rd8+4];
	ld.local.u32 	%r1861, [%rd8];
	// inline asm
	prmt.b32 %r9160, %r1860, %r1861, %r4;
	// inline asm
	ld.local.u32 	%r1864, [%rd8];
	ld.local.u32 	%r1865, [%rd7+12];
	// inline asm
	prmt.b32 %r9161, %r1864, %r1865, %r4;
	// inline asm
	ld.local.u32 	%r1868, [%rd7+12];
	ld.local.u32 	%r1869, [%rd7+8];
	// inline asm
	prmt.b32 %r9162, %r1868, %r1869, %r4;
	// inline asm
	ld.local.u32 	%r1872, [%rd7+8];
	ld.local.u32 	%r1873, [%rd7+4];
	// inline asm
	prmt.b32 %r9163, %r1872, %r1873, %r4;
	// inline asm
	ld.local.u32 	%r1876, [%rd7+4];
	ld.local.u32 	%r1877, [%rd7];
	// inline asm
	prmt.b32 %r9156, %r1876, %r1877, %r4;
	// inline asm
	ld.local.u32 	%r1880, [%rd7];
	ld.local.u32 	%r1881, [%rd6+12];
	// inline asm
	prmt.b32 %r9157, %r1880, %r1881, %r4;
	// inline asm
	ld.local.u32 	%r1884, [%rd6+12];
	ld.local.u32 	%r1885, [%rd6+8];
	// inline asm
	prmt.b32 %r9158, %r1884, %r1885, %r4;
	// inline asm
	ld.local.u32 	%r1888, [%rd6+8];
	ld.local.u32 	%r1889, [%rd6+4];
	// inline asm
	prmt.b32 %r9159, %r1888, %r1889, %r4;
	// inline asm
	ld.local.u32 	%r1892, [%rd6+4];
	ld.local.u32 	%r1893, [%rd6];
	// inline asm
	prmt.b32 %r9152, %r1892, %r1893, %r4;
	// inline asm
	ld.local.u32 	%r1896, [%rd6];
	ld.local.u32 	%r1897, [%rd5+12];
	// inline asm
	prmt.b32 %r9153, %r1896, %r1897, %r4;
	// inline asm
	ld.local.u32 	%r1900, [%rd5+12];
	ld.local.u32 	%r1901, [%rd5+8];
	// inline asm
	prmt.b32 %r9154, %r1900, %r1901, %r4;
	// inline asm
	ld.local.u32 	%r1904, [%rd5+8];
	ld.local.u32 	%r1905, [%rd5+4];
	// inline asm
	prmt.b32 %r9155, %r1904, %r1905, %r4;
	// inline asm
	ld.local.u32 	%r1908, [%rd5+4];
	ld.local.u32 	%r1909, [%rd5];
	// inline asm
	prmt.b32 %r9148, %r1908, %r1909, %r4;
	// inline asm
	ld.local.u32 	%r1912, [%rd5];
	ld.local.u32 	%r1913, [%rd4+12];
	// inline asm
	prmt.b32 %r9149, %r1912, %r1913, %r4;
	// inline asm
	ld.local.u32 	%r1916, [%rd4+12];
	ld.local.u32 	%r1917, [%rd4+8];
	// inline asm
	prmt.b32 %r9150, %r1916, %r1917, %r4;
	// inline asm
	ld.local.u32 	%r1920, [%rd4+8];
	ld.local.u32 	%r1921, [%rd4+4];
	// inline asm
	prmt.b32 %r9151, %r1920, %r1921, %r4;
	// inline asm
	ld.local.u32 	%r1924, [%rd4+4];
	ld.local.u32 	%r1925, [%rd4];
	// inline asm
	prmt.b32 %r9144, %r1924, %r1925, %r4;
	// inline asm
	ld.local.u32 	%r1928, [%rd4];
	ld.local.u32 	%r1929, [%rd3+12];
	// inline asm
	prmt.b32 %r9145, %r1928, %r1929, %r4;
	// inline asm
	ld.local.u32 	%r1932, [%rd3+12];
	ld.local.u32 	%r1933, [%rd3+8];
	// inline asm
	prmt.b32 %r9146, %r1932, %r1933, %r4;
	// inline asm
	ld.local.u32 	%r1936, [%rd3+8];
	ld.local.u32 	%r1937, [%rd3+4];
	// inline asm
	prmt.b32 %r9147, %r1936, %r1937, %r4;
	// inline asm
	ld.local.u32 	%r1940, [%rd3+4];
	ld.local.u32 	%r1941, [%rd3];
	// inline asm
	prmt.b32 %r1939, %r1940, %r1941, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1939;
	ld.local.u32 	%r1944, [%rd3];
	ld.local.u32 	%r1945, [%rd2+12];
	// inline asm
	prmt.b32 %r1943, %r1944, %r1945, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1943;
	ld.local.u32 	%r1948, [%rd2+12];
	ld.local.u32 	%r1949, [%rd2+8];
	// inline asm
	prmt.b32 %r1947, %r1948, %r1949, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1947;
	ld.local.u32 	%r1952, [%rd2+8];
	ld.local.u32 	%r1953, [%rd2+4];
	// inline asm
	prmt.b32 %r1951, %r1952, %r1953, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1951;
	ld.local.u32 	%r1956, [%rd2+4];
	ld.local.u32 	%r1957, [%rd2];
	// inline asm
	prmt.b32 %r1955, %r1956, %r1957, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1955;
	ld.local.u32 	%r1960, [%rd2];
	ld.local.u32 	%r1961, [%rd1+12];
	// inline asm
	prmt.b32 %r1959, %r1960, %r1961, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1959;
	ld.local.u32 	%r1964, [%rd1+12];
	ld.local.u32 	%r1965, [%rd1+8];
	// inline asm
	prmt.b32 %r1963, %r1964, %r1965, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1963;
	ld.local.u32 	%r1968, [%rd1+8];
	ld.local.u32 	%r1969, [%rd1+4];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1967;
	ld.local.u32 	%r1972, [%rd1+4];
	ld.local.u32 	%r1973, [%rd1];
	// inline asm
	prmt.b32 %r1971, %r1972, %r1973, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1971;
	ld.local.u32 	%r1976, [%rd1];
	// inline asm
	prmt.b32 %r1975, %r1976, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r1975;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd195, 0;
	st.local.u32 	[%rd1+4], %rd195;
	st.local.u32 	[%rd1], %rd195;
	mov.u32 	%r9164, %r9143;
	bra.uni 	BB0_85;

BB0_123:
	setp.eq.s32	%p79, %r3, 14;
	@%p79 bra 	BB0_165;
	bra.uni 	BB0_124;

BB0_165:
	ld.local.u32 	%r6836, [%rd5+4];
	ld.local.u32 	%r6837, [%rd5];
	// inline asm
	prmt.b32 %r6835, %r6836, %r6837, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6835;
	ld.local.u32 	%r6840, [%rd5];
	ld.local.u32 	%r6841, [%rd4+12];
	// inline asm
	prmt.b32 %r6839, %r6840, %r6841, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6839;
	ld.local.u32 	%r6844, [%rd4+12];
	ld.local.u32 	%r6845, [%rd4+8];
	// inline asm
	prmt.b32 %r6843, %r6844, %r6845, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6843;
	ld.local.u32 	%r6848, [%rd4+8];
	ld.local.u32 	%r6849, [%rd4+4];
	// inline asm
	prmt.b32 %r6847, %r6848, %r6849, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6847;
	ld.local.u32 	%r6852, [%rd4+4];
	ld.local.u32 	%r6853, [%rd4];
	// inline asm
	prmt.b32 %r6851, %r6852, %r6853, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6851;
	ld.local.u32 	%r6856, [%rd4];
	ld.local.u32 	%r6857, [%rd3+12];
	// inline asm
	prmt.b32 %r6855, %r6856, %r6857, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6855;
	ld.local.u32 	%r6860, [%rd3+12];
	ld.local.u32 	%r6861, [%rd3+8];
	// inline asm
	prmt.b32 %r6859, %r6860, %r6861, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6859;
	ld.local.u32 	%r6864, [%rd3+8];
	ld.local.u32 	%r6865, [%rd3+4];
	// inline asm
	prmt.b32 %r6863, %r6864, %r6865, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6863;
	ld.local.u32 	%r6868, [%rd3+4];
	ld.local.u32 	%r6869, [%rd3];
	// inline asm
	prmt.b32 %r6867, %r6868, %r6869, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6867;
	ld.local.u32 	%r6872, [%rd3];
	ld.local.u32 	%r6873, [%rd2+12];
	// inline asm
	prmt.b32 %r6871, %r6872, %r6873, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6871;
	ld.local.u32 	%r6876, [%rd2+12];
	ld.local.u32 	%r6877, [%rd2+8];
	// inline asm
	prmt.b32 %r6875, %r6876, %r6877, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6875;
	ld.local.u32 	%r6880, [%rd2+8];
	ld.local.u32 	%r6881, [%rd2+4];
	// inline asm
	prmt.b32 %r6879, %r6880, %r6881, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6879;
	ld.local.u32 	%r6884, [%rd2+4];
	ld.local.u32 	%r6885, [%rd2];
	// inline asm
	prmt.b32 %r6883, %r6884, %r6885, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6883;
	ld.local.u32 	%r6888, [%rd2];
	ld.local.u32 	%r6889, [%rd1+12];
	// inline asm
	prmt.b32 %r6887, %r6888, %r6889, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6887;
	ld.local.u32 	%r6892, [%rd1+12];
	ld.local.u32 	%r6893, [%rd1+8];
	// inline asm
	prmt.b32 %r6891, %r6892, %r6893, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6891;
	ld.local.u32 	%r6896, [%rd1+8];
	ld.local.u32 	%r6897, [%rd1+4];
	// inline asm
	prmt.b32 %r6895, %r6896, %r6897, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6895;
	ld.local.u32 	%r6900, [%rd1+4];
	ld.local.u32 	%r6901, [%rd1];
	// inline asm
	prmt.b32 %r6899, %r6900, %r6901, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6899;
	ld.local.u32 	%r6904, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6903, %r6904, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6903;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1251, 0;
	st.local.u32 	[%rd1+4], %rd1251;
	st.local.u32 	[%rd1], %rd1251;
	bra.uni 	BB0_174;

BB0_33:
	setp.eq.s32	%p31, %r3, 14;
	@%p31 bra 	BB0_75;
	bra.uni 	BB0_34;

BB0_75:
	ld.local.u32 	%r3013, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9157, %r9143, %r3013, %r4;
	// inline asm
	ld.local.u32 	%r3016, [%rd8+12];
	ld.local.u32 	%r3017, [%rd8+8];
	// inline asm
	prmt.b32 %r9158, %r3016, %r3017, %r4;
	// inline asm
	ld.local.u32 	%r3020, [%rd8+8];
	ld.local.u32 	%r3021, [%rd8+4];
	// inline asm
	prmt.b32 %r9159, %r3020, %r3021, %r4;
	// inline asm
	ld.local.u32 	%r3024, [%rd8+4];
	ld.local.u32 	%r3025, [%rd8];
	// inline asm
	prmt.b32 %r9152, %r3024, %r3025, %r4;
	// inline asm
	ld.local.u32 	%r3028, [%rd8];
	ld.local.u32 	%r3029, [%rd7+12];
	// inline asm
	prmt.b32 %r9153, %r3028, %r3029, %r4;
	// inline asm
	ld.local.u32 	%r3032, [%rd7+12];
	ld.local.u32 	%r3033, [%rd7+8];
	// inline asm
	prmt.b32 %r9154, %r3032, %r3033, %r4;
	// inline asm
	ld.local.u32 	%r3036, [%rd7+8];
	ld.local.u32 	%r3037, [%rd7+4];
	// inline asm
	prmt.b32 %r9155, %r3036, %r3037, %r4;
	// inline asm
	ld.local.u32 	%r3040, [%rd7+4];
	ld.local.u32 	%r3041, [%rd7];
	// inline asm
	prmt.b32 %r9148, %r3040, %r3041, %r4;
	// inline asm
	ld.local.u32 	%r3044, [%rd7];
	ld.local.u32 	%r3045, [%rd6+12];
	// inline asm
	prmt.b32 %r9149, %r3044, %r3045, %r4;
	// inline asm
	ld.local.u32 	%r3048, [%rd6+12];
	ld.local.u32 	%r3049, [%rd6+8];
	// inline asm
	prmt.b32 %r9150, %r3048, %r3049, %r4;
	// inline asm
	ld.local.u32 	%r3052, [%rd6+8];
	ld.local.u32 	%r3053, [%rd6+4];
	// inline asm
	prmt.b32 %r9151, %r3052, %r3053, %r4;
	// inline asm
	ld.local.u32 	%r3056, [%rd6+4];
	ld.local.u32 	%r3057, [%rd6];
	// inline asm
	prmt.b32 %r9144, %r3056, %r3057, %r4;
	// inline asm
	ld.local.u32 	%r3060, [%rd6];
	ld.local.u32 	%r3061, [%rd5+12];
	// inline asm
	prmt.b32 %r9145, %r3060, %r3061, %r4;
	// inline asm
	ld.local.u32 	%r3064, [%rd5+12];
	ld.local.u32 	%r3065, [%rd5+8];
	// inline asm
	prmt.b32 %r9146, %r3064, %r3065, %r4;
	// inline asm
	ld.local.u32 	%r3068, [%rd5+8];
	ld.local.u32 	%r3069, [%rd5+4];
	// inline asm
	prmt.b32 %r9147, %r3068, %r3069, %r4;
	// inline asm
	ld.local.u32 	%r3072, [%rd5+4];
	ld.local.u32 	%r3073, [%rd5];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3071;
	ld.local.u32 	%r3076, [%rd5];
	ld.local.u32 	%r3077, [%rd4+12];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3075;
	ld.local.u32 	%r3080, [%rd4+12];
	ld.local.u32 	%r3081, [%rd4+8];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3079;
	ld.local.u32 	%r3084, [%rd4+8];
	ld.local.u32 	%r3085, [%rd4+4];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3083;
	ld.local.u32 	%r3088, [%rd4+4];
	ld.local.u32 	%r3089, [%rd4];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3087;
	ld.local.u32 	%r3092, [%rd4];
	ld.local.u32 	%r3093, [%rd3+12];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3091;
	ld.local.u32 	%r3096, [%rd3+12];
	ld.local.u32 	%r3097, [%rd3+8];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3095;
	ld.local.u32 	%r3100, [%rd3+8];
	ld.local.u32 	%r3101, [%rd3+4];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3099;
	ld.local.u32 	%r3104, [%rd3+4];
	ld.local.u32 	%r3105, [%rd3];
	// inline asm
	prmt.b32 %r3103, %r3104, %r3105, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3103;
	ld.local.u32 	%r3108, [%rd3];
	ld.local.u32 	%r3109, [%rd2+12];
	// inline asm
	prmt.b32 %r3107, %r3108, %r3109, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3107;
	ld.local.u32 	%r3112, [%rd2+12];
	ld.local.u32 	%r3113, [%rd2+8];
	// inline asm
	prmt.b32 %r3111, %r3112, %r3113, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3111;
	ld.local.u32 	%r3116, [%rd2+8];
	ld.local.u32 	%r3117, [%rd2+4];
	// inline asm
	prmt.b32 %r3115, %r3116, %r3117, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3115;
	ld.local.u32 	%r3120, [%rd2+4];
	ld.local.u32 	%r3121, [%rd2];
	// inline asm
	prmt.b32 %r3119, %r3120, %r3121, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3119;
	ld.local.u32 	%r3124, [%rd2];
	ld.local.u32 	%r3125, [%rd1+12];
	// inline asm
	prmt.b32 %r3123, %r3124, %r3125, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3123;
	ld.local.u32 	%r3128, [%rd1+12];
	ld.local.u32 	%r3129, [%rd1+8];
	// inline asm
	prmt.b32 %r3127, %r3128, %r3129, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3127;
	ld.local.u32 	%r3132, [%rd1+8];
	ld.local.u32 	%r3133, [%rd1+4];
	// inline asm
	prmt.b32 %r3131, %r3132, %r3133, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3131;
	ld.local.u32 	%r3136, [%rd1+4];
	ld.local.u32 	%r3137, [%rd1];
	// inline asm
	prmt.b32 %r3135, %r3136, %r3137, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3135;
	ld.local.u32 	%r3140, [%rd1];
	// inline asm
	prmt.b32 %r3139, %r3140, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3139;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd203, 0;
	st.local.u32 	[%rd1+4], %rd203;
	st.local.u32 	[%rd1], %rd203;
	mov.u32 	%r9156, %r9143;
	bra.uni 	BB0_83;

BB0_154:
	setp.eq.s32	%p56, %r3, 30;
	@%p56 bra 	BB0_157;
	bra.uni 	BB0_155;

BB0_157:
	ld.local.u32 	%r6212, [%rd1+4];
	ld.local.u32 	%r6213, [%rd1];
	// inline asm
	prmt.b32 %r6211, %r6212, %r6213, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6211;
	ld.local.u32 	%r6216, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6215, %r6216, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6215;
	st.local.u32 	[%rd8+4], %r9177;
	st.local.u32 	[%rd8], %r9177;
	st.local.u32 	[%rd7+12], %r9177;
	st.local.u32 	[%rd7+8], %r9177;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1235, 0;
	st.local.u32 	[%rd1+4], %rd1235;
	st.local.u32 	[%rd1], %rd1235;
	bra.uni 	BB0_174;

BB0_64:
	setp.eq.s32	%p8, %r3, 30;
	@%p8 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	ld.local.u32 	%r749, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9173, %r9143, %r749, %r4;
	// inline asm
	ld.local.u32 	%r752, [%rd8+12];
	ld.local.u32 	%r753, [%rd8+8];
	// inline asm
	prmt.b32 %r9174, %r752, %r753, %r4;
	// inline asm
	ld.local.u32 	%r756, [%rd8+8];
	ld.local.u32 	%r757, [%rd8+4];
	// inline asm
	prmt.b32 %r9175, %r756, %r757, %r4;
	// inline asm
	ld.local.u32 	%r760, [%rd8+4];
	ld.local.u32 	%r761, [%rd8];
	// inline asm
	prmt.b32 %r9168, %r760, %r761, %r4;
	// inline asm
	ld.local.u32 	%r764, [%rd8];
	ld.local.u32 	%r765, [%rd7+12];
	// inline asm
	prmt.b32 %r9169, %r764, %r765, %r4;
	// inline asm
	ld.local.u32 	%r768, [%rd7+12];
	ld.local.u32 	%r769, [%rd7+8];
	// inline asm
	prmt.b32 %r9170, %r768, %r769, %r4;
	// inline asm
	ld.local.u32 	%r772, [%rd7+8];
	ld.local.u32 	%r773, [%rd7+4];
	// inline asm
	prmt.b32 %r9171, %r772, %r773, %r4;
	// inline asm
	ld.local.u32 	%r776, [%rd7+4];
	ld.local.u32 	%r777, [%rd7];
	// inline asm
	prmt.b32 %r9164, %r776, %r777, %r4;
	// inline asm
	ld.local.u32 	%r780, [%rd7];
	ld.local.u32 	%r781, [%rd6+12];
	// inline asm
	prmt.b32 %r9165, %r780, %r781, %r4;
	// inline asm
	ld.local.u32 	%r784, [%rd6+12];
	ld.local.u32 	%r785, [%rd6+8];
	// inline asm
	prmt.b32 %r9166, %r784, %r785, %r4;
	// inline asm
	ld.local.u32 	%r788, [%rd6+8];
	ld.local.u32 	%r789, [%rd6+4];
	// inline asm
	prmt.b32 %r9167, %r788, %r789, %r4;
	// inline asm
	ld.local.u32 	%r792, [%rd6+4];
	ld.local.u32 	%r793, [%rd6];
	// inline asm
	prmt.b32 %r9160, %r792, %r793, %r4;
	// inline asm
	ld.local.u32 	%r796, [%rd6];
	ld.local.u32 	%r797, [%rd5+12];
	// inline asm
	prmt.b32 %r9161, %r796, %r797, %r4;
	// inline asm
	ld.local.u32 	%r800, [%rd5+12];
	ld.local.u32 	%r801, [%rd5+8];
	// inline asm
	prmt.b32 %r9162, %r800, %r801, %r4;
	// inline asm
	ld.local.u32 	%r804, [%rd5+8];
	ld.local.u32 	%r805, [%rd5+4];
	// inline asm
	prmt.b32 %r9163, %r804, %r805, %r4;
	// inline asm
	ld.local.u32 	%r808, [%rd5+4];
	ld.local.u32 	%r809, [%rd5];
	// inline asm
	prmt.b32 %r9156, %r808, %r809, %r4;
	// inline asm
	ld.local.u32 	%r812, [%rd5];
	ld.local.u32 	%r813, [%rd4+12];
	// inline asm
	prmt.b32 %r9157, %r812, %r813, %r4;
	// inline asm
	ld.local.u32 	%r816, [%rd4+12];
	ld.local.u32 	%r817, [%rd4+8];
	// inline asm
	prmt.b32 %r9158, %r816, %r817, %r4;
	// inline asm
	ld.local.u32 	%r820, [%rd4+8];
	ld.local.u32 	%r821, [%rd4+4];
	// inline asm
	prmt.b32 %r9159, %r820, %r821, %r4;
	// inline asm
	ld.local.u32 	%r824, [%rd4+4];
	ld.local.u32 	%r825, [%rd4];
	// inline asm
	prmt.b32 %r9152, %r824, %r825, %r4;
	// inline asm
	ld.local.u32 	%r828, [%rd4];
	ld.local.u32 	%r829, [%rd3+12];
	// inline asm
	prmt.b32 %r9153, %r828, %r829, %r4;
	// inline asm
	ld.local.u32 	%r832, [%rd3+12];
	ld.local.u32 	%r833, [%rd3+8];
	// inline asm
	prmt.b32 %r9154, %r832, %r833, %r4;
	// inline asm
	ld.local.u32 	%r836, [%rd3+8];
	ld.local.u32 	%r837, [%rd3+4];
	// inline asm
	prmt.b32 %r9155, %r836, %r837, %r4;
	// inline asm
	ld.local.u32 	%r840, [%rd3+4];
	ld.local.u32 	%r841, [%rd3];
	// inline asm
	prmt.b32 %r9148, %r840, %r841, %r4;
	// inline asm
	ld.local.u32 	%r844, [%rd3];
	ld.local.u32 	%r845, [%rd2+12];
	// inline asm
	prmt.b32 %r9149, %r844, %r845, %r4;
	// inline asm
	ld.local.u32 	%r848, [%rd2+12];
	ld.local.u32 	%r849, [%rd2+8];
	// inline asm
	prmt.b32 %r9150, %r848, %r849, %r4;
	// inline asm
	ld.local.u32 	%r852, [%rd2+8];
	ld.local.u32 	%r853, [%rd2+4];
	// inline asm
	prmt.b32 %r9151, %r852, %r853, %r4;
	// inline asm
	ld.local.u32 	%r856, [%rd2+4];
	ld.local.u32 	%r857, [%rd2];
	// inline asm
	prmt.b32 %r9144, %r856, %r857, %r4;
	// inline asm
	ld.local.u32 	%r860, [%rd2];
	ld.local.u32 	%r861, [%rd1+12];
	// inline asm
	prmt.b32 %r9145, %r860, %r861, %r4;
	// inline asm
	ld.local.u32 	%r864, [%rd1+12];
	ld.local.u32 	%r865, [%rd1+8];
	// inline asm
	prmt.b32 %r9146, %r864, %r865, %r4;
	// inline asm
	ld.local.u32 	%r868, [%rd1+8];
	ld.local.u32 	%r869, [%rd1+4];
	// inline asm
	prmt.b32 %r9147, %r868, %r869, %r4;
	// inline asm
	ld.local.u32 	%r872, [%rd1+4];
	ld.local.u32 	%r873, [%rd1];
	// inline asm
	prmt.b32 %r871, %r872, %r873, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r871;
	ld.local.u32 	%r876, [%rd1];
	// inline asm
	prmt.b32 %r875, %r876, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r875;
	st.local.u32 	[%rd8+4], %r9143;
	st.local.u32 	[%rd8], %r9143;
	st.local.u32 	[%rd7+12], %r9143;
	st.local.u32 	[%rd7+8], %r9143;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd187, 0;
	st.local.u32 	[%rd1+4], %rd187;
	st.local.u32 	[%rd1], %rd187;
	mov.u32 	%r9172, %r9143;
	bra.uni 	BB0_91;

BB0_99:
	setp.eq.s32	%p98, %r3, 1;
	@%p98 bra 	BB0_100;
	bra.uni 	BB0_173;

BB0_100:
	ld.local.u32 	%r8097, [%rd8+8];
	ld.local.u32 	%r8098, [%rd8+4];
	// inline asm
	prmt.b32 %r8096, %r8097, %r8098, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8096;
	ld.local.u32 	%r8101, [%rd8+4];
	ld.local.u32 	%r8102, [%rd8];
	// inline asm
	prmt.b32 %r8100, %r8101, %r8102, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8100;
	ld.local.u32 	%r8105, [%rd8];
	ld.local.u32 	%r8106, [%rd7+12];
	// inline asm
	prmt.b32 %r8104, %r8105, %r8106, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8104;
	ld.local.u32 	%r8109, [%rd7+12];
	ld.local.u32 	%r8110, [%rd7+8];
	// inline asm
	prmt.b32 %r8108, %r8109, %r8110, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8108;
	ld.local.u32 	%r8113, [%rd7+8];
	ld.local.u32 	%r8114, [%rd7+4];
	// inline asm
	prmt.b32 %r8112, %r8113, %r8114, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8112;
	ld.local.u32 	%r8117, [%rd7+4];
	ld.local.u32 	%r8118, [%rd7];
	// inline asm
	prmt.b32 %r8116, %r8117, %r8118, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8116;
	ld.local.u32 	%r8121, [%rd7];
	ld.local.u32 	%r8122, [%rd6+12];
	// inline asm
	prmt.b32 %r8120, %r8121, %r8122, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8120;
	ld.local.u32 	%r8125, [%rd6+12];
	ld.local.u32 	%r8126, [%rd6+8];
	// inline asm
	prmt.b32 %r8124, %r8125, %r8126, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8124;
	ld.local.u32 	%r8129, [%rd6+8];
	ld.local.u32 	%r8130, [%rd6+4];
	// inline asm
	prmt.b32 %r8128, %r8129, %r8130, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8128;
	ld.local.u32 	%r8133, [%rd6+4];
	ld.local.u32 	%r8134, [%rd6];
	// inline asm
	prmt.b32 %r8132, %r8133, %r8134, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8132;
	ld.local.u32 	%r8137, [%rd6];
	ld.local.u32 	%r8138, [%rd5+12];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8136;
	ld.local.u32 	%r8141, [%rd5+12];
	ld.local.u32 	%r8142, [%rd5+8];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8140;
	ld.local.u32 	%r8145, [%rd5+8];
	ld.local.u32 	%r8146, [%rd5+4];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8144;
	ld.local.u32 	%r8149, [%rd5+4];
	ld.local.u32 	%r8150, [%rd5];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8148;
	ld.local.u32 	%r8153, [%rd5];
	ld.local.u32 	%r8154, [%rd4+12];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8152;
	ld.local.u32 	%r8157, [%rd4+12];
	ld.local.u32 	%r8158, [%rd4+8];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8156;
	ld.local.u32 	%r8161, [%rd4+8];
	ld.local.u32 	%r8162, [%rd4+4];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8160;
	ld.local.u32 	%r8165, [%rd4+4];
	ld.local.u32 	%r8166, [%rd4];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8164;
	ld.local.u32 	%r8169, [%rd4];
	ld.local.u32 	%r8170, [%rd3+12];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8168;
	ld.local.u32 	%r8173, [%rd3+12];
	ld.local.u32 	%r8174, [%rd3+8];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8172;
	ld.local.u32 	%r8177, [%rd3+8];
	ld.local.u32 	%r8178, [%rd3+4];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8176;
	ld.local.u32 	%r8181, [%rd3+4];
	ld.local.u32 	%r8182, [%rd3];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8180;
	ld.local.u32 	%r8185, [%rd3];
	ld.local.u32 	%r8186, [%rd2+12];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8184;
	ld.local.u32 	%r8189, [%rd2+12];
	ld.local.u32 	%r8190, [%rd2+8];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8188;
	ld.local.u32 	%r8193, [%rd2+8];
	ld.local.u32 	%r8194, [%rd2+4];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8192;
	ld.local.u32 	%r8197, [%rd2+4];
	ld.local.u32 	%r8198, [%rd2];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8196;
	ld.local.u32 	%r8201, [%rd2];
	ld.local.u32 	%r8202, [%rd1+12];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8200;
	ld.local.u32 	%r8205, [%rd1+12];
	ld.local.u32 	%r8206, [%rd1+8];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8204;
	ld.local.u32 	%r8209, [%rd1+8];
	ld.local.u32 	%r8210, [%rd1+4];
	// inline asm
	prmt.b32 %r8208, %r8209, %r8210, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8208;
	ld.local.u32 	%r8213, [%rd1+4];
	ld.local.u32 	%r8214, [%rd1];
	// inline asm
	prmt.b32 %r8212, %r8213, %r8214, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8212;
	ld.local.u32 	%r8217, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r8216, %r8217, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8216;
	st.local.u32 	[%rd1], %r9177;
	bra.uni 	BB0_174;

BB0_8:
	setp.eq.s32	%p50, %r3, 1;
	@%p50 bra 	BB0_9;
	bra.uni 	BB0_89;

BB0_9:
	ld.local.u32 	%r5041, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9146, %r9143, %r5041, %r4;
	// inline asm
	ld.local.u32 	%r5044, [%rd8+12];
	ld.local.u32 	%r5045, [%rd8+8];
	// inline asm
	prmt.b32 %r9147, %r5044, %r5045, %r4;
	// inline asm
	ld.local.u32 	%r5048, [%rd8+8];
	ld.local.u32 	%r5049, [%rd8+4];
	// inline asm
	prmt.b32 %r5047, %r5048, %r5049, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5047;
	ld.local.u32 	%r5052, [%rd8+4];
	ld.local.u32 	%r5053, [%rd8];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5051;
	ld.local.u32 	%r5056, [%rd8];
	ld.local.u32 	%r5057, [%rd7+12];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5055;
	ld.local.u32 	%r5060, [%rd7+12];
	ld.local.u32 	%r5061, [%rd7+8];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5059;
	ld.local.u32 	%r5064, [%rd7+8];
	ld.local.u32 	%r5065, [%rd7+4];
	// inline asm
	prmt.b32 %r5063, %r5064, %r5065, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5063;
	ld.local.u32 	%r5068, [%rd7+4];
	ld.local.u32 	%r5069, [%rd7];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5067;
	ld.local.u32 	%r5072, [%rd7];
	ld.local.u32 	%r5073, [%rd6+12];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5071;
	ld.local.u32 	%r5076, [%rd6+12];
	ld.local.u32 	%r5077, [%rd6+8];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5075;
	ld.local.u32 	%r5080, [%rd6+8];
	ld.local.u32 	%r5081, [%rd6+4];
	// inline asm
	prmt.b32 %r5079, %r5080, %r5081, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5079;
	ld.local.u32 	%r5084, [%rd6+4];
	ld.local.u32 	%r5085, [%rd6];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5083;
	ld.local.u32 	%r5088, [%rd6];
	ld.local.u32 	%r5089, [%rd5+12];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5087;
	ld.local.u32 	%r5092, [%rd5+12];
	ld.local.u32 	%r5093, [%rd5+8];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5091;
	ld.local.u32 	%r5096, [%rd5+8];
	ld.local.u32 	%r5097, [%rd5+4];
	// inline asm
	prmt.b32 %r5095, %r5096, %r5097, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5095;
	ld.local.u32 	%r5100, [%rd5+4];
	ld.local.u32 	%r5101, [%rd5];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5099;
	ld.local.u32 	%r5104, [%rd5];
	ld.local.u32 	%r5105, [%rd4+12];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5103;
	ld.local.u32 	%r5108, [%rd4+12];
	ld.local.u32 	%r5109, [%rd4+8];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5107;
	ld.local.u32 	%r5112, [%rd4+8];
	ld.local.u32 	%r5113, [%rd4+4];
	// inline asm
	prmt.b32 %r5111, %r5112, %r5113, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5111;
	ld.local.u32 	%r5116, [%rd4+4];
	ld.local.u32 	%r5117, [%rd4];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5115;
	ld.local.u32 	%r5120, [%rd4];
	ld.local.u32 	%r5121, [%rd3+12];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5119;
	ld.local.u32 	%r5124, [%rd3+12];
	ld.local.u32 	%r5125, [%rd3+8];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5123;
	ld.local.u32 	%r5128, [%rd3+8];
	ld.local.u32 	%r5129, [%rd3+4];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5127;
	ld.local.u32 	%r5132, [%rd3+4];
	ld.local.u32 	%r5133, [%rd3];
	// inline asm
	prmt.b32 %r5131, %r5132, %r5133, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5131;
	ld.local.u32 	%r5136, [%rd3];
	ld.local.u32 	%r5137, [%rd2+12];
	// inline asm
	prmt.b32 %r5135, %r5136, %r5137, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5135;
	ld.local.u32 	%r5140, [%rd2+12];
	ld.local.u32 	%r5141, [%rd2+8];
	// inline asm
	prmt.b32 %r5139, %r5140, %r5141, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5139;
	ld.local.u32 	%r5144, [%rd2+8];
	ld.local.u32 	%r5145, [%rd2+4];
	// inline asm
	prmt.b32 %r5143, %r5144, %r5145, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5143;
	ld.local.u32 	%r5148, [%rd2+4];
	ld.local.u32 	%r5149, [%rd2];
	// inline asm
	prmt.b32 %r5147, %r5148, %r5149, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5147;
	ld.local.u32 	%r5152, [%rd2];
	ld.local.u32 	%r5153, [%rd1+12];
	// inline asm
	prmt.b32 %r5151, %r5152, %r5153, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5151;
	ld.local.u32 	%r5156, [%rd1+12];
	ld.local.u32 	%r5157, [%rd1+8];
	// inline asm
	prmt.b32 %r5155, %r5156, %r5157, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5155;
	ld.local.u32 	%r5160, [%rd1+8];
	ld.local.u32 	%r5161, [%rd1+4];
	// inline asm
	prmt.b32 %r5159, %r5160, %r5161, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5159;
	ld.local.u32 	%r5164, [%rd1+4];
	ld.local.u32 	%r5165, [%rd1];
	// inline asm
	prmt.b32 %r5163, %r5164, %r5165, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5163;
	ld.local.u32 	%r5168, [%rd1];
	// inline asm
	prmt.b32 %r5167, %r5168, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5167;
	st.local.u32 	[%rd1], %r9143;
	mov.u32 	%r9144, %r9143;
	mov.u32 	%r9145, %r9143;
	bra.uni 	BB0_13;

BB0_130:
	setp.eq.s32	%p75, %r3, 17;
	@%p75 bra 	BB0_131;
	bra.uni 	BB0_173;

BB0_131:
	ld.local.u32 	%r6641, [%rd4+8];
	ld.local.u32 	%r6642, [%rd4+4];
	// inline asm
	prmt.b32 %r6640, %r6641, %r6642, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6640;
	ld.local.u32 	%r6645, [%rd4+4];
	ld.local.u32 	%r6646, [%rd4];
	// inline asm
	prmt.b32 %r6644, %r6645, %r6646, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6644;
	ld.local.u32 	%r6649, [%rd4];
	ld.local.u32 	%r6650, [%rd3+12];
	// inline asm
	prmt.b32 %r6648, %r6649, %r6650, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6648;
	ld.local.u32 	%r6653, [%rd3+12];
	ld.local.u32 	%r6654, [%rd3+8];
	// inline asm
	prmt.b32 %r6652, %r6653, %r6654, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6652;
	ld.local.u32 	%r6657, [%rd3+8];
	ld.local.u32 	%r6658, [%rd3+4];
	// inline asm
	prmt.b32 %r6656, %r6657, %r6658, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6656;
	ld.local.u32 	%r6661, [%rd3+4];
	ld.local.u32 	%r6662, [%rd3];
	// inline asm
	prmt.b32 %r6660, %r6661, %r6662, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6660;
	ld.local.u32 	%r6665, [%rd3];
	ld.local.u32 	%r6666, [%rd2+12];
	// inline asm
	prmt.b32 %r6664, %r6665, %r6666, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6664;
	ld.local.u32 	%r6669, [%rd2+12];
	ld.local.u32 	%r6670, [%rd2+8];
	// inline asm
	prmt.b32 %r6668, %r6669, %r6670, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6668;
	ld.local.u32 	%r6673, [%rd2+8];
	ld.local.u32 	%r6674, [%rd2+4];
	// inline asm
	prmt.b32 %r6672, %r6673, %r6674, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6672;
	ld.local.u32 	%r6677, [%rd2+4];
	ld.local.u32 	%r6678, [%rd2];
	// inline asm
	prmt.b32 %r6676, %r6677, %r6678, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6676;
	ld.local.u32 	%r6681, [%rd2];
	ld.local.u32 	%r6682, [%rd1+12];
	// inline asm
	prmt.b32 %r6680, %r6681, %r6682, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6680;
	ld.local.u32 	%r6685, [%rd1+12];
	ld.local.u32 	%r6686, [%rd1+8];
	// inline asm
	prmt.b32 %r6684, %r6685, %r6686, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6684;
	ld.local.u32 	%r6689, [%rd1+8];
	ld.local.u32 	%r6690, [%rd1+4];
	// inline asm
	prmt.b32 %r6688, %r6689, %r6690, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6688;
	ld.local.u32 	%r6693, [%rd1+4];
	ld.local.u32 	%r6694, [%rd1];
	// inline asm
	prmt.b32 %r6692, %r6693, %r6694, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6692;
	ld.local.u32 	%r6697, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6696, %r6697, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6696;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1248, 0;
	st.local.u32 	[%rd1+4], %rd1248;
	st.local.u32 	[%rd1], %rd1248;
	bra.uni 	BB0_174;

BB0_40:
	setp.eq.s32	%p27, %r3, 17;
	@%p27 bra 	BB0_41;
	bra.uni 	BB0_89;

BB0_41:
	ld.local.u32 	%r2569, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9162, %r9143, %r2569, %r4;
	// inline asm
	ld.local.u32 	%r2572, [%rd8+12];
	ld.local.u32 	%r2573, [%rd8+8];
	// inline asm
	prmt.b32 %r9163, %r2572, %r2573, %r4;
	// inline asm
	ld.local.u32 	%r2576, [%rd8+8];
	ld.local.u32 	%r2577, [%rd8+4];
	// inline asm
	prmt.b32 %r9156, %r2576, %r2577, %r4;
	// inline asm
	ld.local.u32 	%r2580, [%rd8+4];
	ld.local.u32 	%r2581, [%rd8];
	// inline asm
	prmt.b32 %r9157, %r2580, %r2581, %r4;
	// inline asm
	ld.local.u32 	%r2584, [%rd8];
	ld.local.u32 	%r2585, [%rd7+12];
	// inline asm
	prmt.b32 %r9158, %r2584, %r2585, %r4;
	// inline asm
	ld.local.u32 	%r2588, [%rd7+12];
	ld.local.u32 	%r2589, [%rd7+8];
	// inline asm
	prmt.b32 %r9159, %r2588, %r2589, %r4;
	// inline asm
	ld.local.u32 	%r2592, [%rd7+8];
	ld.local.u32 	%r2593, [%rd7+4];
	// inline asm
	prmt.b32 %r9152, %r2592, %r2593, %r4;
	// inline asm
	ld.local.u32 	%r2596, [%rd7+4];
	ld.local.u32 	%r2597, [%rd7];
	// inline asm
	prmt.b32 %r9153, %r2596, %r2597, %r4;
	// inline asm
	ld.local.u32 	%r2600, [%rd7];
	ld.local.u32 	%r2601, [%rd6+12];
	// inline asm
	prmt.b32 %r9154, %r2600, %r2601, %r4;
	// inline asm
	ld.local.u32 	%r2604, [%rd6+12];
	ld.local.u32 	%r2605, [%rd6+8];
	// inline asm
	prmt.b32 %r9155, %r2604, %r2605, %r4;
	// inline asm
	ld.local.u32 	%r2608, [%rd6+8];
	ld.local.u32 	%r2609, [%rd6+4];
	// inline asm
	prmt.b32 %r9148, %r2608, %r2609, %r4;
	// inline asm
	ld.local.u32 	%r2612, [%rd6+4];
	ld.local.u32 	%r2613, [%rd6];
	// inline asm
	prmt.b32 %r9149, %r2612, %r2613, %r4;
	// inline asm
	ld.local.u32 	%r2616, [%rd6];
	ld.local.u32 	%r2617, [%rd5+12];
	// inline asm
	prmt.b32 %r9150, %r2616, %r2617, %r4;
	// inline asm
	ld.local.u32 	%r2620, [%rd5+12];
	ld.local.u32 	%r2621, [%rd5+8];
	// inline asm
	prmt.b32 %r9151, %r2620, %r2621, %r4;
	// inline asm
	ld.local.u32 	%r2624, [%rd5+8];
	ld.local.u32 	%r2625, [%rd5+4];
	// inline asm
	prmt.b32 %r9144, %r2624, %r2625, %r4;
	// inline asm
	ld.local.u32 	%r2628, [%rd5+4];
	ld.local.u32 	%r2629, [%rd5];
	// inline asm
	prmt.b32 %r9145, %r2628, %r2629, %r4;
	// inline asm
	ld.local.u32 	%r2632, [%rd5];
	ld.local.u32 	%r2633, [%rd4+12];
	// inline asm
	prmt.b32 %r9146, %r2632, %r2633, %r4;
	// inline asm
	ld.local.u32 	%r2636, [%rd4+12];
	ld.local.u32 	%r2637, [%rd4+8];
	// inline asm
	prmt.b32 %r9147, %r2636, %r2637, %r4;
	// inline asm
	ld.local.u32 	%r2640, [%rd4+8];
	ld.local.u32 	%r2641, [%rd4+4];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2639;
	ld.local.u32 	%r2644, [%rd4+4];
	ld.local.u32 	%r2645, [%rd4];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2643;
	ld.local.u32 	%r2648, [%rd4];
	ld.local.u32 	%r2649, [%rd3+12];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2647;
	ld.local.u32 	%r2652, [%rd3+12];
	ld.local.u32 	%r2653, [%rd3+8];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2651;
	ld.local.u32 	%r2656, [%rd3+8];
	ld.local.u32 	%r2657, [%rd3+4];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2655;
	ld.local.u32 	%r2660, [%rd3+4];
	ld.local.u32 	%r2661, [%rd3];
	// inline asm
	prmt.b32 %r2659, %r2660, %r2661, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2659;
	ld.local.u32 	%r2664, [%rd3];
	ld.local.u32 	%r2665, [%rd2+12];
	// inline asm
	prmt.b32 %r2663, %r2664, %r2665, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2663;
	ld.local.u32 	%r2668, [%rd2+12];
	ld.local.u32 	%r2669, [%rd2+8];
	// inline asm
	prmt.b32 %r2667, %r2668, %r2669, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2667;
	ld.local.u32 	%r2672, [%rd2+8];
	ld.local.u32 	%r2673, [%rd2+4];
	// inline asm
	prmt.b32 %r2671, %r2672, %r2673, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2671;
	ld.local.u32 	%r2676, [%rd2+4];
	ld.local.u32 	%r2677, [%rd2];
	// inline asm
	prmt.b32 %r2675, %r2676, %r2677, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2675;
	ld.local.u32 	%r2680, [%rd2];
	ld.local.u32 	%r2681, [%rd1+12];
	// inline asm
	prmt.b32 %r2679, %r2680, %r2681, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2679;
	ld.local.u32 	%r2684, [%rd1+12];
	ld.local.u32 	%r2685, [%rd1+8];
	// inline asm
	prmt.b32 %r2683, %r2684, %r2685, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2683;
	ld.local.u32 	%r2688, [%rd1+8];
	ld.local.u32 	%r2689, [%rd1+4];
	// inline asm
	prmt.b32 %r2687, %r2688, %r2689, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2687;
	ld.local.u32 	%r2692, [%rd1+4];
	ld.local.u32 	%r2693, [%rd1];
	// inline asm
	prmt.b32 %r2691, %r2692, %r2693, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2691;
	ld.local.u32 	%r2696, [%rd1];
	// inline asm
	prmt.b32 %r2695, %r2696, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2695;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd200, 0;
	st.local.u32 	[%rd1+4], %rd200;
	st.local.u32 	[%rd1], %rd200;
	mov.u32 	%r9160, %r9143;
	mov.u32 	%r9161, %r9143;
	bra.uni 	BB0_84;

BB0_114:
	setp.eq.s32	%p87, %r3, 9;
	@%p87 bra 	BB0_115;
	bra.uni 	BB0_173;

BB0_115:
	ld.local.u32 	%r7241, [%rd6+8];
	ld.local.u32 	%r7242, [%rd6+4];
	// inline asm
	prmt.b32 %r7240, %r7241, %r7242, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7240;
	ld.local.u32 	%r7245, [%rd6+4];
	ld.local.u32 	%r7246, [%rd6];
	// inline asm
	prmt.b32 %r7244, %r7245, %r7246, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7244;
	ld.local.u32 	%r7249, [%rd6];
	ld.local.u32 	%r7250, [%rd5+12];
	// inline asm
	prmt.b32 %r7248, %r7249, %r7250, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7248;
	ld.local.u32 	%r7253, [%rd5+12];
	ld.local.u32 	%r7254, [%rd5+8];
	// inline asm
	prmt.b32 %r7252, %r7253, %r7254, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7252;
	ld.local.u32 	%r7257, [%rd5+8];
	ld.local.u32 	%r7258, [%rd5+4];
	// inline asm
	prmt.b32 %r7256, %r7257, %r7258, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7256;
	ld.local.u32 	%r7261, [%rd5+4];
	ld.local.u32 	%r7262, [%rd5];
	// inline asm
	prmt.b32 %r7260, %r7261, %r7262, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7260;
	ld.local.u32 	%r7265, [%rd5];
	ld.local.u32 	%r7266, [%rd4+12];
	// inline asm
	prmt.b32 %r7264, %r7265, %r7266, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7264;
	ld.local.u32 	%r7269, [%rd4+12];
	ld.local.u32 	%r7270, [%rd4+8];
	// inline asm
	prmt.b32 %r7268, %r7269, %r7270, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7268;
	ld.local.u32 	%r7273, [%rd4+8];
	ld.local.u32 	%r7274, [%rd4+4];
	// inline asm
	prmt.b32 %r7272, %r7273, %r7274, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7272;
	ld.local.u32 	%r7277, [%rd4+4];
	ld.local.u32 	%r7278, [%rd4];
	// inline asm
	prmt.b32 %r7276, %r7277, %r7278, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7276;
	ld.local.u32 	%r7281, [%rd4];
	ld.local.u32 	%r7282, [%rd3+12];
	// inline asm
	prmt.b32 %r7280, %r7281, %r7282, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7280;
	ld.local.u32 	%r7285, [%rd3+12];
	ld.local.u32 	%r7286, [%rd3+8];
	// inline asm
	prmt.b32 %r7284, %r7285, %r7286, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7284;
	ld.local.u32 	%r7289, [%rd3+8];
	ld.local.u32 	%r7290, [%rd3+4];
	// inline asm
	prmt.b32 %r7288, %r7289, %r7290, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7288;
	ld.local.u32 	%r7293, [%rd3+4];
	ld.local.u32 	%r7294, [%rd3];
	// inline asm
	prmt.b32 %r7292, %r7293, %r7294, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7292;
	ld.local.u32 	%r7297, [%rd3];
	ld.local.u32 	%r7298, [%rd2+12];
	// inline asm
	prmt.b32 %r7296, %r7297, %r7298, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7296;
	ld.local.u32 	%r7301, [%rd2+12];
	ld.local.u32 	%r7302, [%rd2+8];
	// inline asm
	prmt.b32 %r7300, %r7301, %r7302, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7300;
	ld.local.u32 	%r7305, [%rd2+8];
	ld.local.u32 	%r7306, [%rd2+4];
	// inline asm
	prmt.b32 %r7304, %r7305, %r7306, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7304;
	ld.local.u32 	%r7309, [%rd2+4];
	ld.local.u32 	%r7310, [%rd2];
	// inline asm
	prmt.b32 %r7308, %r7309, %r7310, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7308;
	ld.local.u32 	%r7313, [%rd2];
	ld.local.u32 	%r7314, [%rd1+12];
	// inline asm
	prmt.b32 %r7312, %r7313, %r7314, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7312;
	ld.local.u32 	%r7317, [%rd1+12];
	ld.local.u32 	%r7318, [%rd1+8];
	// inline asm
	prmt.b32 %r7316, %r7317, %r7318, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7316;
	ld.local.u32 	%r7321, [%rd1+8];
	ld.local.u32 	%r7322, [%rd1+4];
	// inline asm
	prmt.b32 %r7320, %r7321, %r7322, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7320;
	ld.local.u32 	%r7325, [%rd1+4];
	ld.local.u32 	%r7326, [%rd1];
	// inline asm
	prmt.b32 %r7324, %r7325, %r7326, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7324;
	ld.local.u32 	%r7329, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7328, %r7329, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7328;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1256, 0;
	st.local.u32 	[%rd1+4], %rd1256;
	st.local.u32 	[%rd1], %rd1256;
	bra.uni 	BB0_174;

BB0_24:
	setp.eq.s32	%p39, %r3, 9;
	@%p39 bra 	BB0_25;
	bra.uni 	BB0_89;

BB0_25:
	ld.local.u32 	%r3773, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9154, %r9143, %r3773, %r4;
	// inline asm
	ld.local.u32 	%r3776, [%rd8+12];
	ld.local.u32 	%r3777, [%rd8+8];
	// inline asm
	prmt.b32 %r9155, %r3776, %r3777, %r4;
	// inline asm
	ld.local.u32 	%r3780, [%rd8+8];
	ld.local.u32 	%r3781, [%rd8+4];
	// inline asm
	prmt.b32 %r9148, %r3780, %r3781, %r4;
	// inline asm
	ld.local.u32 	%r3784, [%rd8+4];
	ld.local.u32 	%r3785, [%rd8];
	// inline asm
	prmt.b32 %r9149, %r3784, %r3785, %r4;
	// inline asm
	ld.local.u32 	%r3788, [%rd8];
	ld.local.u32 	%r3789, [%rd7+12];
	// inline asm
	prmt.b32 %r9150, %r3788, %r3789, %r4;
	// inline asm
	ld.local.u32 	%r3792, [%rd7+12];
	ld.local.u32 	%r3793, [%rd7+8];
	// inline asm
	prmt.b32 %r9151, %r3792, %r3793, %r4;
	// inline asm
	ld.local.u32 	%r3796, [%rd7+8];
	ld.local.u32 	%r3797, [%rd7+4];
	// inline asm
	prmt.b32 %r9144, %r3796, %r3797, %r4;
	// inline asm
	ld.local.u32 	%r3800, [%rd7+4];
	ld.local.u32 	%r3801, [%rd7];
	// inline asm
	prmt.b32 %r9145, %r3800, %r3801, %r4;
	// inline asm
	ld.local.u32 	%r3804, [%rd7];
	ld.local.u32 	%r3805, [%rd6+12];
	// inline asm
	prmt.b32 %r9146, %r3804, %r3805, %r4;
	// inline asm
	ld.local.u32 	%r3808, [%rd6+12];
	ld.local.u32 	%r3809, [%rd6+8];
	// inline asm
	prmt.b32 %r9147, %r3808, %r3809, %r4;
	// inline asm
	ld.local.u32 	%r3812, [%rd6+8];
	ld.local.u32 	%r3813, [%rd6+4];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3811;
	ld.local.u32 	%r3816, [%rd6+4];
	ld.local.u32 	%r3817, [%rd6];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3815;
	ld.local.u32 	%r3820, [%rd6];
	ld.local.u32 	%r3821, [%rd5+12];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3819;
	ld.local.u32 	%r3824, [%rd5+12];
	ld.local.u32 	%r3825, [%rd5+8];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3823;
	ld.local.u32 	%r3828, [%rd5+8];
	ld.local.u32 	%r3829, [%rd5+4];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3827;
	ld.local.u32 	%r3832, [%rd5+4];
	ld.local.u32 	%r3833, [%rd5];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3831;
	ld.local.u32 	%r3836, [%rd5];
	ld.local.u32 	%r3837, [%rd4+12];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3835;
	ld.local.u32 	%r3840, [%rd4+12];
	ld.local.u32 	%r3841, [%rd4+8];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3839;
	ld.local.u32 	%r3844, [%rd4+8];
	ld.local.u32 	%r3845, [%rd4+4];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3843;
	ld.local.u32 	%r3848, [%rd4+4];
	ld.local.u32 	%r3849, [%rd4];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3847;
	ld.local.u32 	%r3852, [%rd4];
	ld.local.u32 	%r3853, [%rd3+12];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3851;
	ld.local.u32 	%r3856, [%rd3+12];
	ld.local.u32 	%r3857, [%rd3+8];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3855;
	ld.local.u32 	%r3860, [%rd3+8];
	ld.local.u32 	%r3861, [%rd3+4];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3859;
	ld.local.u32 	%r3864, [%rd3+4];
	ld.local.u32 	%r3865, [%rd3];
	// inline asm
	prmt.b32 %r3863, %r3864, %r3865, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3863;
	ld.local.u32 	%r3868, [%rd3];
	ld.local.u32 	%r3869, [%rd2+12];
	// inline asm
	prmt.b32 %r3867, %r3868, %r3869, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3867;
	ld.local.u32 	%r3872, [%rd2+12];
	ld.local.u32 	%r3873, [%rd2+8];
	// inline asm
	prmt.b32 %r3871, %r3872, %r3873, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3871;
	ld.local.u32 	%r3876, [%rd2+8];
	ld.local.u32 	%r3877, [%rd2+4];
	// inline asm
	prmt.b32 %r3875, %r3876, %r3877, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3875;
	ld.local.u32 	%r3880, [%rd2+4];
	ld.local.u32 	%r3881, [%rd2];
	// inline asm
	prmt.b32 %r3879, %r3880, %r3881, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3879;
	ld.local.u32 	%r3884, [%rd2];
	ld.local.u32 	%r3885, [%rd1+12];
	// inline asm
	prmt.b32 %r3883, %r3884, %r3885, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3883;
	ld.local.u32 	%r3888, [%rd1+12];
	ld.local.u32 	%r3889, [%rd1+8];
	// inline asm
	prmt.b32 %r3887, %r3888, %r3889, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3887;
	ld.local.u32 	%r3892, [%rd1+8];
	ld.local.u32 	%r3893, [%rd1+4];
	// inline asm
	prmt.b32 %r3891, %r3892, %r3893, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3891;
	ld.local.u32 	%r3896, [%rd1+4];
	ld.local.u32 	%r3897, [%rd1];
	// inline asm
	prmt.b32 %r3895, %r3896, %r3897, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3895;
	ld.local.u32 	%r3900, [%rd1];
	// inline asm
	prmt.b32 %r3899, %r3900, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r3899;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd208, 0;
	st.local.u32 	[%rd1+4], %rd208;
	st.local.u32 	[%rd1], %rd208;
	mov.u32 	%r9152, %r9143;
	mov.u32 	%r9153, %r9143;
	bra.uni 	BB0_82;

BB0_145:
	setp.eq.s32	%p64, %r3, 25;
	@%p64 bra 	BB0_146;
	bra.uni 	BB0_173;

BB0_146:
	ld.local.u32 	%r6297, [%rd2+8];
	ld.local.u32 	%r6298, [%rd2+4];
	// inline asm
	prmt.b32 %r6296, %r6297, %r6298, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6296;
	ld.local.u32 	%r6301, [%rd2+4];
	ld.local.u32 	%r6302, [%rd2];
	// inline asm
	prmt.b32 %r6300, %r6301, %r6302, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6300;
	ld.local.u32 	%r6305, [%rd2];
	ld.local.u32 	%r6306, [%rd1+12];
	// inline asm
	prmt.b32 %r6304, %r6305, %r6306, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6304;
	ld.local.u32 	%r6309, [%rd1+12];
	ld.local.u32 	%r6310, [%rd1+8];
	// inline asm
	prmt.b32 %r6308, %r6309, %r6310, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6308;
	ld.local.u32 	%r6313, [%rd1+8];
	ld.local.u32 	%r6314, [%rd1+4];
	// inline asm
	prmt.b32 %r6312, %r6313, %r6314, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6312;
	ld.local.u32 	%r6317, [%rd1+4];
	ld.local.u32 	%r6318, [%rd1];
	// inline asm
	prmt.b32 %r6316, %r6317, %r6318, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6316;
	ld.local.u32 	%r6321, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6320, %r6321, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6320;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1240, 0;
	st.local.u32 	[%rd1+4], %rd1240;
	st.local.u32 	[%rd1], %rd1240;
	bra.uni 	BB0_174;

BB0_55:
	setp.eq.s32	%p16, %r3, 25;
	@%p16 bra 	BB0_56;
	bra.uni 	BB0_89;

BB0_56:
	ld.local.u32 	%r1429, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9170, %r9143, %r1429, %r4;
	// inline asm
	ld.local.u32 	%r1432, [%rd8+12];
	ld.local.u32 	%r1433, [%rd8+8];
	// inline asm
	prmt.b32 %r9171, %r1432, %r1433, %r4;
	// inline asm
	ld.local.u32 	%r1436, [%rd8+8];
	ld.local.u32 	%r1437, [%rd8+4];
	// inline asm
	prmt.b32 %r9164, %r1436, %r1437, %r4;
	// inline asm
	ld.local.u32 	%r1440, [%rd8+4];
	ld.local.u32 	%r1441, [%rd8];
	// inline asm
	prmt.b32 %r9165, %r1440, %r1441, %r4;
	// inline asm
	ld.local.u32 	%r1444, [%rd8];
	ld.local.u32 	%r1445, [%rd7+12];
	// inline asm
	prmt.b32 %r9166, %r1444, %r1445, %r4;
	// inline asm
	ld.local.u32 	%r1448, [%rd7+12];
	ld.local.u32 	%r1449, [%rd7+8];
	// inline asm
	prmt.b32 %r9167, %r1448, %r1449, %r4;
	// inline asm
	ld.local.u32 	%r1452, [%rd7+8];
	ld.local.u32 	%r1453, [%rd7+4];
	// inline asm
	prmt.b32 %r9160, %r1452, %r1453, %r4;
	// inline asm
	ld.local.u32 	%r1456, [%rd7+4];
	ld.local.u32 	%r1457, [%rd7];
	// inline asm
	prmt.b32 %r9161, %r1456, %r1457, %r4;
	// inline asm
	ld.local.u32 	%r1460, [%rd7];
	ld.local.u32 	%r1461, [%rd6+12];
	// inline asm
	prmt.b32 %r9162, %r1460, %r1461, %r4;
	// inline asm
	ld.local.u32 	%r1464, [%rd6+12];
	ld.local.u32 	%r1465, [%rd6+8];
	// inline asm
	prmt.b32 %r9163, %r1464, %r1465, %r4;
	// inline asm
	ld.local.u32 	%r1468, [%rd6+8];
	ld.local.u32 	%r1469, [%rd6+4];
	// inline asm
	prmt.b32 %r9156, %r1468, %r1469, %r4;
	// inline asm
	ld.local.u32 	%r1472, [%rd6+4];
	ld.local.u32 	%r1473, [%rd6];
	// inline asm
	prmt.b32 %r9157, %r1472, %r1473, %r4;
	// inline asm
	ld.local.u32 	%r1476, [%rd6];
	ld.local.u32 	%r1477, [%rd5+12];
	// inline asm
	prmt.b32 %r9158, %r1476, %r1477, %r4;
	// inline asm
	ld.local.u32 	%r1480, [%rd5+12];
	ld.local.u32 	%r1481, [%rd5+8];
	// inline asm
	prmt.b32 %r9159, %r1480, %r1481, %r4;
	// inline asm
	ld.local.u32 	%r1484, [%rd5+8];
	ld.local.u32 	%r1485, [%rd5+4];
	// inline asm
	prmt.b32 %r9152, %r1484, %r1485, %r4;
	// inline asm
	ld.local.u32 	%r1488, [%rd5+4];
	ld.local.u32 	%r1489, [%rd5];
	// inline asm
	prmt.b32 %r9153, %r1488, %r1489, %r4;
	// inline asm
	ld.local.u32 	%r1492, [%rd5];
	ld.local.u32 	%r1493, [%rd4+12];
	// inline asm
	prmt.b32 %r9154, %r1492, %r1493, %r4;
	// inline asm
	ld.local.u32 	%r1496, [%rd4+12];
	ld.local.u32 	%r1497, [%rd4+8];
	// inline asm
	prmt.b32 %r9155, %r1496, %r1497, %r4;
	// inline asm
	ld.local.u32 	%r1500, [%rd4+8];
	ld.local.u32 	%r1501, [%rd4+4];
	// inline asm
	prmt.b32 %r9148, %r1500, %r1501, %r4;
	// inline asm
	ld.local.u32 	%r1504, [%rd4+4];
	ld.local.u32 	%r1505, [%rd4];
	// inline asm
	prmt.b32 %r9149, %r1504, %r1505, %r4;
	// inline asm
	ld.local.u32 	%r1508, [%rd4];
	ld.local.u32 	%r1509, [%rd3+12];
	// inline asm
	prmt.b32 %r9150, %r1508, %r1509, %r4;
	// inline asm
	ld.local.u32 	%r1512, [%rd3+12];
	ld.local.u32 	%r1513, [%rd3+8];
	// inline asm
	prmt.b32 %r9151, %r1512, %r1513, %r4;
	// inline asm
	ld.local.u32 	%r1516, [%rd3+8];
	ld.local.u32 	%r1517, [%rd3+4];
	// inline asm
	prmt.b32 %r9144, %r1516, %r1517, %r4;
	// inline asm
	ld.local.u32 	%r1520, [%rd3+4];
	ld.local.u32 	%r1521, [%rd3];
	// inline asm
	prmt.b32 %r9145, %r1520, %r1521, %r4;
	// inline asm
	ld.local.u32 	%r1524, [%rd3];
	ld.local.u32 	%r1525, [%rd2+12];
	// inline asm
	prmt.b32 %r9146, %r1524, %r1525, %r4;
	// inline asm
	ld.local.u32 	%r1528, [%rd2+12];
	ld.local.u32 	%r1529, [%rd2+8];
	// inline asm
	prmt.b32 %r9147, %r1528, %r1529, %r4;
	// inline asm
	ld.local.u32 	%r1532, [%rd2+8];
	ld.local.u32 	%r1533, [%rd2+4];
	// inline asm
	prmt.b32 %r1531, %r1532, %r1533, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1531;
	ld.local.u32 	%r1536, [%rd2+4];
	ld.local.u32 	%r1537, [%rd2];
	// inline asm
	prmt.b32 %r1535, %r1536, %r1537, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1535;
	ld.local.u32 	%r1540, [%rd2];
	ld.local.u32 	%r1541, [%rd1+12];
	// inline asm
	prmt.b32 %r1539, %r1540, %r1541, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1539;
	ld.local.u32 	%r1544, [%rd1+12];
	ld.local.u32 	%r1545, [%rd1+8];
	// inline asm
	prmt.b32 %r1543, %r1544, %r1545, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1543;
	ld.local.u32 	%r1548, [%rd1+8];
	ld.local.u32 	%r1549, [%rd1+4];
	// inline asm
	prmt.b32 %r1547, %r1548, %r1549, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1547;
	ld.local.u32 	%r1552, [%rd1+4];
	ld.local.u32 	%r1553, [%rd1];
	// inline asm
	prmt.b32 %r1551, %r1552, %r1553, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1551;
	ld.local.u32 	%r1556, [%rd1];
	// inline asm
	prmt.b32 %r1555, %r1556, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1555;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd192, 0;
	st.local.u32 	[%rd1+4], %rd192;
	st.local.u32 	[%rd1], %rd192;
	mov.u32 	%r9168, %r9143;
	mov.u32 	%r9169, %r9143;
	bra.uni 	BB0_86;

BB0_106:
	setp.eq.s32	%p93, %r3, 5;
	@%p93 bra 	BB0_107;
	bra.uni 	BB0_173;

BB0_107:
	ld.local.u32 	%r7637, [%rd7+8];
	ld.local.u32 	%r7638, [%rd7+4];
	// inline asm
	prmt.b32 %r7636, %r7637, %r7638, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7636;
	ld.local.u32 	%r7641, [%rd7+4];
	ld.local.u32 	%r7642, [%rd7];
	// inline asm
	prmt.b32 %r7640, %r7641, %r7642, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7640;
	ld.local.u32 	%r7645, [%rd7];
	ld.local.u32 	%r7646, [%rd6+12];
	// inline asm
	prmt.b32 %r7644, %r7645, %r7646, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7644;
	ld.local.u32 	%r7649, [%rd6+12];
	ld.local.u32 	%r7650, [%rd6+8];
	// inline asm
	prmt.b32 %r7648, %r7649, %r7650, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7648;
	ld.local.u32 	%r7653, [%rd6+8];
	ld.local.u32 	%r7654, [%rd6+4];
	// inline asm
	prmt.b32 %r7652, %r7653, %r7654, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7652;
	ld.local.u32 	%r7657, [%rd6+4];
	ld.local.u32 	%r7658, [%rd6];
	// inline asm
	prmt.b32 %r7656, %r7657, %r7658, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7656;
	ld.local.u32 	%r7661, [%rd6];
	ld.local.u32 	%r7662, [%rd5+12];
	// inline asm
	prmt.b32 %r7660, %r7661, %r7662, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7660;
	ld.local.u32 	%r7665, [%rd5+12];
	ld.local.u32 	%r7666, [%rd5+8];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7664;
	ld.local.u32 	%r7669, [%rd5+8];
	ld.local.u32 	%r7670, [%rd5+4];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7668;
	ld.local.u32 	%r7673, [%rd5+4];
	ld.local.u32 	%r7674, [%rd5];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7672;
	ld.local.u32 	%r7677, [%rd5];
	ld.local.u32 	%r7678, [%rd4+12];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7676;
	ld.local.u32 	%r7681, [%rd4+12];
	ld.local.u32 	%r7682, [%rd4+8];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7680;
	ld.local.u32 	%r7685, [%rd4+8];
	ld.local.u32 	%r7686, [%rd4+4];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7684;
	ld.local.u32 	%r7689, [%rd4+4];
	ld.local.u32 	%r7690, [%rd4];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7688;
	ld.local.u32 	%r7693, [%rd4];
	ld.local.u32 	%r7694, [%rd3+12];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7692;
	ld.local.u32 	%r7697, [%rd3+12];
	ld.local.u32 	%r7698, [%rd3+8];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7696;
	ld.local.u32 	%r7701, [%rd3+8];
	ld.local.u32 	%r7702, [%rd3+4];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7700;
	ld.local.u32 	%r7705, [%rd3+4];
	ld.local.u32 	%r7706, [%rd3];
	// inline asm
	prmt.b32 %r7704, %r7705, %r7706, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7704;
	ld.local.u32 	%r7709, [%rd3];
	ld.local.u32 	%r7710, [%rd2+12];
	// inline asm
	prmt.b32 %r7708, %r7709, %r7710, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7708;
	ld.local.u32 	%r7713, [%rd2+12];
	ld.local.u32 	%r7714, [%rd2+8];
	// inline asm
	prmt.b32 %r7712, %r7713, %r7714, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7712;
	ld.local.u32 	%r7717, [%rd2+8];
	ld.local.u32 	%r7718, [%rd2+4];
	// inline asm
	prmt.b32 %r7716, %r7717, %r7718, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7716;
	ld.local.u32 	%r7721, [%rd2+4];
	ld.local.u32 	%r7722, [%rd2];
	// inline asm
	prmt.b32 %r7720, %r7721, %r7722, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7720;
	ld.local.u32 	%r7725, [%rd2];
	ld.local.u32 	%r7726, [%rd1+12];
	// inline asm
	prmt.b32 %r7724, %r7725, %r7726, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7724;
	ld.local.u32 	%r7729, [%rd1+12];
	ld.local.u32 	%r7730, [%rd1+8];
	// inline asm
	prmt.b32 %r7728, %r7729, %r7730, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7728;
	ld.local.u32 	%r7733, [%rd1+8];
	ld.local.u32 	%r7734, [%rd1+4];
	// inline asm
	prmt.b32 %r7732, %r7733, %r7734, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7732;
	ld.local.u32 	%r7737, [%rd1+4];
	ld.local.u32 	%r7738, [%rd1];
	// inline asm
	prmt.b32 %r7736, %r7737, %r7738, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7736;
	ld.local.u32 	%r7741, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7740, %r7741, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7740;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1260, 0;
	st.local.u32 	[%rd1+4], %rd1260;
	st.local.u32 	[%rd1], %rd1260;
	bra.uni 	BB0_174;

BB0_16:
	setp.eq.s32	%p45, %r3, 5;
	@%p45 bra 	BB0_17;
	bra.uni 	BB0_89;

BB0_17:
	ld.local.u32 	%r4399, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9150, %r9143, %r4399, %r4;
	// inline asm
	ld.local.u32 	%r4402, [%rd8+12];
	ld.local.u32 	%r4403, [%rd8+8];
	// inline asm
	prmt.b32 %r9151, %r4402, %r4403, %r4;
	// inline asm
	ld.local.u32 	%r4406, [%rd8+8];
	ld.local.u32 	%r4407, [%rd8+4];
	// inline asm
	prmt.b32 %r9144, %r4406, %r4407, %r4;
	// inline asm
	ld.local.u32 	%r4410, [%rd8+4];
	ld.local.u32 	%r4411, [%rd8];
	// inline asm
	prmt.b32 %r9145, %r4410, %r4411, %r4;
	// inline asm
	ld.local.u32 	%r4414, [%rd8];
	ld.local.u32 	%r4415, [%rd7+12];
	// inline asm
	prmt.b32 %r9146, %r4414, %r4415, %r4;
	// inline asm
	ld.local.u32 	%r4418, [%rd7+12];
	ld.local.u32 	%r4419, [%rd7+8];
	// inline asm
	prmt.b32 %r9147, %r4418, %r4419, %r4;
	// inline asm
	ld.local.u32 	%r4422, [%rd7+8];
	ld.local.u32 	%r4423, [%rd7+4];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4421;
	ld.local.u32 	%r4426, [%rd7+4];
	ld.local.u32 	%r4427, [%rd7];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4425;
	ld.local.u32 	%r4430, [%rd7];
	ld.local.u32 	%r4431, [%rd6+12];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4429;
	ld.local.u32 	%r4434, [%rd6+12];
	ld.local.u32 	%r4435, [%rd6+8];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4433;
	ld.local.u32 	%r4438, [%rd6+8];
	ld.local.u32 	%r4439, [%rd6+4];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4437;
	ld.local.u32 	%r4442, [%rd6+4];
	ld.local.u32 	%r4443, [%rd6];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4441;
	ld.local.u32 	%r4446, [%rd6];
	ld.local.u32 	%r4447, [%rd5+12];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4445;
	ld.local.u32 	%r4450, [%rd5+12];
	ld.local.u32 	%r4451, [%rd5+8];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4449;
	ld.local.u32 	%r4454, [%rd5+8];
	ld.local.u32 	%r4455, [%rd5+4];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4453;
	ld.local.u32 	%r4458, [%rd5+4];
	ld.local.u32 	%r4459, [%rd5];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4457;
	ld.local.u32 	%r4462, [%rd5];
	ld.local.u32 	%r4463, [%rd4+12];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4461;
	ld.local.u32 	%r4466, [%rd4+12];
	ld.local.u32 	%r4467, [%rd4+8];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4465;
	ld.local.u32 	%r4470, [%rd4+8];
	ld.local.u32 	%r4471, [%rd4+4];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4469;
	ld.local.u32 	%r4474, [%rd4+4];
	ld.local.u32 	%r4475, [%rd4];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4473;
	ld.local.u32 	%r4478, [%rd4];
	ld.local.u32 	%r4479, [%rd3+12];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4477;
	ld.local.u32 	%r4482, [%rd3+12];
	ld.local.u32 	%r4483, [%rd3+8];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4481;
	ld.local.u32 	%r4486, [%rd3+8];
	ld.local.u32 	%r4487, [%rd3+4];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4485;
	ld.local.u32 	%r4490, [%rd3+4];
	ld.local.u32 	%r4491, [%rd3];
	// inline asm
	prmt.b32 %r4489, %r4490, %r4491, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4489;
	ld.local.u32 	%r4494, [%rd3];
	ld.local.u32 	%r4495, [%rd2+12];
	// inline asm
	prmt.b32 %r4493, %r4494, %r4495, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4493;
	ld.local.u32 	%r4498, [%rd2+12];
	ld.local.u32 	%r4499, [%rd2+8];
	// inline asm
	prmt.b32 %r4497, %r4498, %r4499, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4497;
	ld.local.u32 	%r4502, [%rd2+8];
	ld.local.u32 	%r4503, [%rd2+4];
	// inline asm
	prmt.b32 %r4501, %r4502, %r4503, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4501;
	ld.local.u32 	%r4506, [%rd2+4];
	ld.local.u32 	%r4507, [%rd2];
	// inline asm
	prmt.b32 %r4505, %r4506, %r4507, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4505;
	ld.local.u32 	%r4510, [%rd2];
	ld.local.u32 	%r4511, [%rd1+12];
	// inline asm
	prmt.b32 %r4509, %r4510, %r4511, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4509;
	ld.local.u32 	%r4514, [%rd1+12];
	ld.local.u32 	%r4515, [%rd1+8];
	// inline asm
	prmt.b32 %r4513, %r4514, %r4515, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4513;
	ld.local.u32 	%r4518, [%rd1+8];
	ld.local.u32 	%r4519, [%rd1+4];
	// inline asm
	prmt.b32 %r4517, %r4518, %r4519, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4517;
	ld.local.u32 	%r4522, [%rd1+4];
	ld.local.u32 	%r4523, [%rd1];
	// inline asm
	prmt.b32 %r4521, %r4522, %r4523, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4521;
	ld.local.u32 	%r4526, [%rd1];
	// inline asm
	prmt.b32 %r4525, %r4526, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4525;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd212, 0;
	st.local.u32 	[%rd1+4], %rd212;
	st.local.u32 	[%rd1], %rd212;
	mov.u32 	%r9148, %r9143;
	mov.u32 	%r9149, %r9143;
	bra.uni 	BB0_81;

BB0_137:
	setp.eq.s32	%p70, %r3, 21;
	@%p70 bra 	BB0_138;
	bra.uni 	BB0_173;

BB0_138:
	ld.local.u32 	%r6437, [%rd3+8];
	ld.local.u32 	%r6438, [%rd3+4];
	// inline asm
	prmt.b32 %r6436, %r6437, %r6438, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6436;
	ld.local.u32 	%r6441, [%rd3+4];
	ld.local.u32 	%r6442, [%rd3];
	// inline asm
	prmt.b32 %r6440, %r6441, %r6442, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6440;
	ld.local.u32 	%r6445, [%rd3];
	ld.local.u32 	%r6446, [%rd2+12];
	// inline asm
	prmt.b32 %r6444, %r6445, %r6446, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6444;
	ld.local.u32 	%r6449, [%rd2+12];
	ld.local.u32 	%r6450, [%rd2+8];
	// inline asm
	prmt.b32 %r6448, %r6449, %r6450, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6448;
	ld.local.u32 	%r6453, [%rd2+8];
	ld.local.u32 	%r6454, [%rd2+4];
	// inline asm
	prmt.b32 %r6452, %r6453, %r6454, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6452;
	ld.local.u32 	%r6457, [%rd2+4];
	ld.local.u32 	%r6458, [%rd2];
	// inline asm
	prmt.b32 %r6456, %r6457, %r6458, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6456;
	ld.local.u32 	%r6461, [%rd2];
	ld.local.u32 	%r6462, [%rd1+12];
	// inline asm
	prmt.b32 %r6460, %r6461, %r6462, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6460;
	ld.local.u32 	%r6465, [%rd1+12];
	ld.local.u32 	%r6466, [%rd1+8];
	// inline asm
	prmt.b32 %r6464, %r6465, %r6466, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6464;
	ld.local.u32 	%r6469, [%rd1+8];
	ld.local.u32 	%r6470, [%rd1+4];
	// inline asm
	prmt.b32 %r6468, %r6469, %r6470, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6468;
	ld.local.u32 	%r6473, [%rd1+4];
	ld.local.u32 	%r6474, [%rd1];
	// inline asm
	prmt.b32 %r6472, %r6473, %r6474, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6472;
	ld.local.u32 	%r6477, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6476, %r6477, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6476;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1244, 0;
	st.local.u32 	[%rd1+4], %rd1244;
	st.local.u32 	[%rd1], %rd1244;
	bra.uni 	BB0_174;

BB0_47:
	setp.eq.s32	%p22, %r3, 21;
	@%p22 bra 	BB0_48;
	bra.uni 	BB0_89;

BB0_48:
	ld.local.u32 	%r1991, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9166, %r9143, %r1991, %r4;
	// inline asm
	ld.local.u32 	%r1994, [%rd8+12];
	ld.local.u32 	%r1995, [%rd8+8];
	// inline asm
	prmt.b32 %r9167, %r1994, %r1995, %r4;
	// inline asm
	ld.local.u32 	%r1998, [%rd8+8];
	ld.local.u32 	%r1999, [%rd8+4];
	// inline asm
	prmt.b32 %r9160, %r1998, %r1999, %r4;
	// inline asm
	ld.local.u32 	%r2002, [%rd8+4];
	ld.local.u32 	%r2003, [%rd8];
	// inline asm
	prmt.b32 %r9161, %r2002, %r2003, %r4;
	// inline asm
	ld.local.u32 	%r2006, [%rd8];
	ld.local.u32 	%r2007, [%rd7+12];
	// inline asm
	prmt.b32 %r9162, %r2006, %r2007, %r4;
	// inline asm
	ld.local.u32 	%r2010, [%rd7+12];
	ld.local.u32 	%r2011, [%rd7+8];
	// inline asm
	prmt.b32 %r9163, %r2010, %r2011, %r4;
	// inline asm
	ld.local.u32 	%r2014, [%rd7+8];
	ld.local.u32 	%r2015, [%rd7+4];
	// inline asm
	prmt.b32 %r9156, %r2014, %r2015, %r4;
	// inline asm
	ld.local.u32 	%r2018, [%rd7+4];
	ld.local.u32 	%r2019, [%rd7];
	// inline asm
	prmt.b32 %r9157, %r2018, %r2019, %r4;
	// inline asm
	ld.local.u32 	%r2022, [%rd7];
	ld.local.u32 	%r2023, [%rd6+12];
	// inline asm
	prmt.b32 %r9158, %r2022, %r2023, %r4;
	// inline asm
	ld.local.u32 	%r2026, [%rd6+12];
	ld.local.u32 	%r2027, [%rd6+8];
	// inline asm
	prmt.b32 %r9159, %r2026, %r2027, %r4;
	// inline asm
	ld.local.u32 	%r2030, [%rd6+8];
	ld.local.u32 	%r2031, [%rd6+4];
	// inline asm
	prmt.b32 %r9152, %r2030, %r2031, %r4;
	// inline asm
	ld.local.u32 	%r2034, [%rd6+4];
	ld.local.u32 	%r2035, [%rd6];
	// inline asm
	prmt.b32 %r9153, %r2034, %r2035, %r4;
	// inline asm
	ld.local.u32 	%r2038, [%rd6];
	ld.local.u32 	%r2039, [%rd5+12];
	// inline asm
	prmt.b32 %r9154, %r2038, %r2039, %r4;
	// inline asm
	ld.local.u32 	%r2042, [%rd5+12];
	ld.local.u32 	%r2043, [%rd5+8];
	// inline asm
	prmt.b32 %r9155, %r2042, %r2043, %r4;
	// inline asm
	ld.local.u32 	%r2046, [%rd5+8];
	ld.local.u32 	%r2047, [%rd5+4];
	// inline asm
	prmt.b32 %r9148, %r2046, %r2047, %r4;
	// inline asm
	ld.local.u32 	%r2050, [%rd5+4];
	ld.local.u32 	%r2051, [%rd5];
	// inline asm
	prmt.b32 %r9149, %r2050, %r2051, %r4;
	// inline asm
	ld.local.u32 	%r2054, [%rd5];
	ld.local.u32 	%r2055, [%rd4+12];
	// inline asm
	prmt.b32 %r9150, %r2054, %r2055, %r4;
	// inline asm
	ld.local.u32 	%r2058, [%rd4+12];
	ld.local.u32 	%r2059, [%rd4+8];
	// inline asm
	prmt.b32 %r9151, %r2058, %r2059, %r4;
	// inline asm
	ld.local.u32 	%r2062, [%rd4+8];
	ld.local.u32 	%r2063, [%rd4+4];
	// inline asm
	prmt.b32 %r9144, %r2062, %r2063, %r4;
	// inline asm
	ld.local.u32 	%r2066, [%rd4+4];
	ld.local.u32 	%r2067, [%rd4];
	// inline asm
	prmt.b32 %r9145, %r2066, %r2067, %r4;
	// inline asm
	ld.local.u32 	%r2070, [%rd4];
	ld.local.u32 	%r2071, [%rd3+12];
	// inline asm
	prmt.b32 %r9146, %r2070, %r2071, %r4;
	// inline asm
	ld.local.u32 	%r2074, [%rd3+12];
	ld.local.u32 	%r2075, [%rd3+8];
	// inline asm
	prmt.b32 %r9147, %r2074, %r2075, %r4;
	// inline asm
	ld.local.u32 	%r2078, [%rd3+8];
	ld.local.u32 	%r2079, [%rd3+4];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2077;
	ld.local.u32 	%r2082, [%rd3+4];
	ld.local.u32 	%r2083, [%rd3];
	// inline asm
	prmt.b32 %r2081, %r2082, %r2083, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2081;
	ld.local.u32 	%r2086, [%rd3];
	ld.local.u32 	%r2087, [%rd2+12];
	// inline asm
	prmt.b32 %r2085, %r2086, %r2087, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2085;
	ld.local.u32 	%r2090, [%rd2+12];
	ld.local.u32 	%r2091, [%rd2+8];
	// inline asm
	prmt.b32 %r2089, %r2090, %r2091, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2089;
	ld.local.u32 	%r2094, [%rd2+8];
	ld.local.u32 	%r2095, [%rd2+4];
	// inline asm
	prmt.b32 %r2093, %r2094, %r2095, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2093;
	ld.local.u32 	%r2098, [%rd2+4];
	ld.local.u32 	%r2099, [%rd2];
	// inline asm
	prmt.b32 %r2097, %r2098, %r2099, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2097;
	ld.local.u32 	%r2102, [%rd2];
	ld.local.u32 	%r2103, [%rd1+12];
	// inline asm
	prmt.b32 %r2101, %r2102, %r2103, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2101;
	ld.local.u32 	%r2106, [%rd1+12];
	ld.local.u32 	%r2107, [%rd1+8];
	// inline asm
	prmt.b32 %r2105, %r2106, %r2107, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2105;
	ld.local.u32 	%r2110, [%rd1+8];
	ld.local.u32 	%r2111, [%rd1+4];
	// inline asm
	prmt.b32 %r2109, %r2110, %r2111, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2109;
	ld.local.u32 	%r2114, [%rd1+4];
	ld.local.u32 	%r2115, [%rd1];
	// inline asm
	prmt.b32 %r2113, %r2114, %r2115, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2113;
	ld.local.u32 	%r2118, [%rd1];
	// inline asm
	prmt.b32 %r2117, %r2118, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2117;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd196, 0;
	st.local.u32 	[%rd1+4], %rd196;
	st.local.u32 	[%rd1], %rd196;
	mov.u32 	%r9164, %r9143;
	mov.u32 	%r9165, %r9143;
	bra.uni 	BB0_85;

BB0_121:
	setp.eq.s32	%p82, %r3, 13;
	@%p82 bra 	BB0_122;
	bra.uni 	BB0_173;

BB0_122:
	ld.local.u32 	%r6909, [%rd5+8];
	ld.local.u32 	%r6910, [%rd5+4];
	// inline asm
	prmt.b32 %r6908, %r6909, %r6910, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6908;
	ld.local.u32 	%r6913, [%rd5+4];
	ld.local.u32 	%r6914, [%rd5];
	// inline asm
	prmt.b32 %r6912, %r6913, %r6914, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6912;
	ld.local.u32 	%r6917, [%rd5];
	ld.local.u32 	%r6918, [%rd4+12];
	// inline asm
	prmt.b32 %r6916, %r6917, %r6918, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6916;
	ld.local.u32 	%r6921, [%rd4+12];
	ld.local.u32 	%r6922, [%rd4+8];
	// inline asm
	prmt.b32 %r6920, %r6921, %r6922, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6920;
	ld.local.u32 	%r6925, [%rd4+8];
	ld.local.u32 	%r6926, [%rd4+4];
	// inline asm
	prmt.b32 %r6924, %r6925, %r6926, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6924;
	ld.local.u32 	%r6929, [%rd4+4];
	ld.local.u32 	%r6930, [%rd4];
	// inline asm
	prmt.b32 %r6928, %r6929, %r6930, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6928;
	ld.local.u32 	%r6933, [%rd4];
	ld.local.u32 	%r6934, [%rd3+12];
	// inline asm
	prmt.b32 %r6932, %r6933, %r6934, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6932;
	ld.local.u32 	%r6937, [%rd3+12];
	ld.local.u32 	%r6938, [%rd3+8];
	// inline asm
	prmt.b32 %r6936, %r6937, %r6938, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6936;
	ld.local.u32 	%r6941, [%rd3+8];
	ld.local.u32 	%r6942, [%rd3+4];
	// inline asm
	prmt.b32 %r6940, %r6941, %r6942, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6940;
	ld.local.u32 	%r6945, [%rd3+4];
	ld.local.u32 	%r6946, [%rd3];
	// inline asm
	prmt.b32 %r6944, %r6945, %r6946, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6944;
	ld.local.u32 	%r6949, [%rd3];
	ld.local.u32 	%r6950, [%rd2+12];
	// inline asm
	prmt.b32 %r6948, %r6949, %r6950, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6948;
	ld.local.u32 	%r6953, [%rd2+12];
	ld.local.u32 	%r6954, [%rd2+8];
	// inline asm
	prmt.b32 %r6952, %r6953, %r6954, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6952;
	ld.local.u32 	%r6957, [%rd2+8];
	ld.local.u32 	%r6958, [%rd2+4];
	// inline asm
	prmt.b32 %r6956, %r6957, %r6958, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6956;
	ld.local.u32 	%r6961, [%rd2+4];
	ld.local.u32 	%r6962, [%rd2];
	// inline asm
	prmt.b32 %r6960, %r6961, %r6962, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6960;
	ld.local.u32 	%r6965, [%rd2];
	ld.local.u32 	%r6966, [%rd1+12];
	// inline asm
	prmt.b32 %r6964, %r6965, %r6966, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6964;
	ld.local.u32 	%r6969, [%rd1+12];
	ld.local.u32 	%r6970, [%rd1+8];
	// inline asm
	prmt.b32 %r6968, %r6969, %r6970, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6968;
	ld.local.u32 	%r6973, [%rd1+8];
	ld.local.u32 	%r6974, [%rd1+4];
	// inline asm
	prmt.b32 %r6972, %r6973, %r6974, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6972;
	ld.local.u32 	%r6977, [%rd1+4];
	ld.local.u32 	%r6978, [%rd1];
	// inline asm
	prmt.b32 %r6976, %r6977, %r6978, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6976;
	ld.local.u32 	%r6981, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6980, %r6981, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r6980;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1252, 0;
	st.local.u32 	[%rd1+4], %rd1252;
	st.local.u32 	[%rd1], %rd1252;
	bra.uni 	BB0_174;

BB0_31:
	setp.eq.s32	%p34, %r3, 13;
	@%p34 bra 	BB0_32;
	bra.uni 	BB0_89;

BB0_32:
	ld.local.u32 	%r3163, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9158, %r9143, %r3163, %r4;
	// inline asm
	ld.local.u32 	%r3166, [%rd8+12];
	ld.local.u32 	%r3167, [%rd8+8];
	// inline asm
	prmt.b32 %r9159, %r3166, %r3167, %r4;
	// inline asm
	ld.local.u32 	%r3170, [%rd8+8];
	ld.local.u32 	%r3171, [%rd8+4];
	// inline asm
	prmt.b32 %r9152, %r3170, %r3171, %r4;
	// inline asm
	ld.local.u32 	%r3174, [%rd8+4];
	ld.local.u32 	%r3175, [%rd8];
	// inline asm
	prmt.b32 %r9153, %r3174, %r3175, %r4;
	// inline asm
	ld.local.u32 	%r3178, [%rd8];
	ld.local.u32 	%r3179, [%rd7+12];
	// inline asm
	prmt.b32 %r9154, %r3178, %r3179, %r4;
	// inline asm
	ld.local.u32 	%r3182, [%rd7+12];
	ld.local.u32 	%r3183, [%rd7+8];
	// inline asm
	prmt.b32 %r9155, %r3182, %r3183, %r4;
	// inline asm
	ld.local.u32 	%r3186, [%rd7+8];
	ld.local.u32 	%r3187, [%rd7+4];
	// inline asm
	prmt.b32 %r9148, %r3186, %r3187, %r4;
	// inline asm
	ld.local.u32 	%r3190, [%rd7+4];
	ld.local.u32 	%r3191, [%rd7];
	// inline asm
	prmt.b32 %r9149, %r3190, %r3191, %r4;
	// inline asm
	ld.local.u32 	%r3194, [%rd7];
	ld.local.u32 	%r3195, [%rd6+12];
	// inline asm
	prmt.b32 %r9150, %r3194, %r3195, %r4;
	// inline asm
	ld.local.u32 	%r3198, [%rd6+12];
	ld.local.u32 	%r3199, [%rd6+8];
	// inline asm
	prmt.b32 %r9151, %r3198, %r3199, %r4;
	// inline asm
	ld.local.u32 	%r3202, [%rd6+8];
	ld.local.u32 	%r3203, [%rd6+4];
	// inline asm
	prmt.b32 %r9144, %r3202, %r3203, %r4;
	// inline asm
	ld.local.u32 	%r3206, [%rd6+4];
	ld.local.u32 	%r3207, [%rd6];
	// inline asm
	prmt.b32 %r9145, %r3206, %r3207, %r4;
	// inline asm
	ld.local.u32 	%r3210, [%rd6];
	ld.local.u32 	%r3211, [%rd5+12];
	// inline asm
	prmt.b32 %r9146, %r3210, %r3211, %r4;
	// inline asm
	ld.local.u32 	%r3214, [%rd5+12];
	ld.local.u32 	%r3215, [%rd5+8];
	// inline asm
	prmt.b32 %r9147, %r3214, %r3215, %r4;
	// inline asm
	ld.local.u32 	%r3218, [%rd5+8];
	ld.local.u32 	%r3219, [%rd5+4];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3217;
	ld.local.u32 	%r3222, [%rd5+4];
	ld.local.u32 	%r3223, [%rd5];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3221;
	ld.local.u32 	%r3226, [%rd5];
	ld.local.u32 	%r3227, [%rd4+12];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3225;
	ld.local.u32 	%r3230, [%rd4+12];
	ld.local.u32 	%r3231, [%rd4+8];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3229;
	ld.local.u32 	%r3234, [%rd4+8];
	ld.local.u32 	%r3235, [%rd4+4];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3233;
	ld.local.u32 	%r3238, [%rd4+4];
	ld.local.u32 	%r3239, [%rd4];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3237;
	ld.local.u32 	%r3242, [%rd4];
	ld.local.u32 	%r3243, [%rd3+12];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3241;
	ld.local.u32 	%r3246, [%rd3+12];
	ld.local.u32 	%r3247, [%rd3+8];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3245;
	ld.local.u32 	%r3250, [%rd3+8];
	ld.local.u32 	%r3251, [%rd3+4];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3249;
	ld.local.u32 	%r3254, [%rd3+4];
	ld.local.u32 	%r3255, [%rd3];
	// inline asm
	prmt.b32 %r3253, %r3254, %r3255, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3253;
	ld.local.u32 	%r3258, [%rd3];
	ld.local.u32 	%r3259, [%rd2+12];
	// inline asm
	prmt.b32 %r3257, %r3258, %r3259, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3257;
	ld.local.u32 	%r3262, [%rd2+12];
	ld.local.u32 	%r3263, [%rd2+8];
	// inline asm
	prmt.b32 %r3261, %r3262, %r3263, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3261;
	ld.local.u32 	%r3266, [%rd2+8];
	ld.local.u32 	%r3267, [%rd2+4];
	// inline asm
	prmt.b32 %r3265, %r3266, %r3267, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3265;
	ld.local.u32 	%r3270, [%rd2+4];
	ld.local.u32 	%r3271, [%rd2];
	// inline asm
	prmt.b32 %r3269, %r3270, %r3271, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3269;
	ld.local.u32 	%r3274, [%rd2];
	ld.local.u32 	%r3275, [%rd1+12];
	// inline asm
	prmt.b32 %r3273, %r3274, %r3275, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3273;
	ld.local.u32 	%r3278, [%rd1+12];
	ld.local.u32 	%r3279, [%rd1+8];
	// inline asm
	prmt.b32 %r3277, %r3278, %r3279, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3277;
	ld.local.u32 	%r3282, [%rd1+8];
	ld.local.u32 	%r3283, [%rd1+4];
	// inline asm
	prmt.b32 %r3281, %r3282, %r3283, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3281;
	ld.local.u32 	%r3286, [%rd1+4];
	ld.local.u32 	%r3287, [%rd1];
	// inline asm
	prmt.b32 %r3285, %r3286, %r3287, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3285;
	ld.local.u32 	%r3290, [%rd1];
	// inline asm
	prmt.b32 %r3289, %r3290, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3289;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd204, 0;
	st.local.u32 	[%rd1+4], %rd204;
	st.local.u32 	[%rd1], %rd204;
	mov.u32 	%r9156, %r9143;
	mov.u32 	%r9157, %r9143;
	bra.uni 	BB0_83;

BB0_152:
	setp.eq.s32	%p59, %r3, 29;
	@%p59 bra 	BB0_153;
	bra.uni 	BB0_173;

BB0_153:
	ld.local.u32 	%r6221, [%rd1+8];
	ld.local.u32 	%r6222, [%rd1+4];
	// inline asm
	prmt.b32 %r6220, %r6221, %r6222, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6220;
	ld.local.u32 	%r6225, [%rd1+4];
	ld.local.u32 	%r6226, [%rd1];
	// inline asm
	prmt.b32 %r6224, %r6225, %r6226, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6224;
	ld.local.u32 	%r6229, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6228, %r6229, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6228;
	st.local.u32 	[%rd8], %r9177;
	st.local.u32 	[%rd7+12], %r9177;
	st.local.u32 	[%rd7+8], %r9177;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1236, 0;
	st.local.u32 	[%rd1+4], %rd1236;
	st.local.u32 	[%rd1], %rd1236;
	bra.uni 	BB0_174;

BB0_62:
	setp.eq.s32	%p11, %r3, 29;
	@%p11 bra 	BB0_63;
	bra.uni 	BB0_89;

BB0_63:
	ld.local.u32 	%r883, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9174, %r9143, %r883, %r4;
	// inline asm
	ld.local.u32 	%r886, [%rd8+12];
	ld.local.u32 	%r887, [%rd8+8];
	// inline asm
	prmt.b32 %r9175, %r886, %r887, %r4;
	// inline asm
	ld.local.u32 	%r890, [%rd8+8];
	ld.local.u32 	%r891, [%rd8+4];
	// inline asm
	prmt.b32 %r9168, %r890, %r891, %r4;
	// inline asm
	ld.local.u32 	%r894, [%rd8+4];
	ld.local.u32 	%r895, [%rd8];
	// inline asm
	prmt.b32 %r9169, %r894, %r895, %r4;
	// inline asm
	ld.local.u32 	%r898, [%rd8];
	ld.local.u32 	%r899, [%rd7+12];
	// inline asm
	prmt.b32 %r9170, %r898, %r899, %r4;
	// inline asm
	ld.local.u32 	%r902, [%rd7+12];
	ld.local.u32 	%r903, [%rd7+8];
	// inline asm
	prmt.b32 %r9171, %r902, %r903, %r4;
	// inline asm
	ld.local.u32 	%r906, [%rd7+8];
	ld.local.u32 	%r907, [%rd7+4];
	// inline asm
	prmt.b32 %r9164, %r906, %r907, %r4;
	// inline asm
	ld.local.u32 	%r910, [%rd7+4];
	ld.local.u32 	%r911, [%rd7];
	// inline asm
	prmt.b32 %r9165, %r910, %r911, %r4;
	// inline asm
	ld.local.u32 	%r914, [%rd7];
	ld.local.u32 	%r915, [%rd6+12];
	// inline asm
	prmt.b32 %r9166, %r914, %r915, %r4;
	// inline asm
	ld.local.u32 	%r918, [%rd6+12];
	ld.local.u32 	%r919, [%rd6+8];
	// inline asm
	prmt.b32 %r9167, %r918, %r919, %r4;
	// inline asm
	ld.local.u32 	%r922, [%rd6+8];
	ld.local.u32 	%r923, [%rd6+4];
	// inline asm
	prmt.b32 %r9160, %r922, %r923, %r4;
	// inline asm
	ld.local.u32 	%r926, [%rd6+4];
	ld.local.u32 	%r927, [%rd6];
	// inline asm
	prmt.b32 %r9161, %r926, %r927, %r4;
	// inline asm
	ld.local.u32 	%r930, [%rd6];
	ld.local.u32 	%r931, [%rd5+12];
	// inline asm
	prmt.b32 %r9162, %r930, %r931, %r4;
	// inline asm
	ld.local.u32 	%r934, [%rd5+12];
	ld.local.u32 	%r935, [%rd5+8];
	// inline asm
	prmt.b32 %r9163, %r934, %r935, %r4;
	// inline asm
	ld.local.u32 	%r938, [%rd5+8];
	ld.local.u32 	%r939, [%rd5+4];
	// inline asm
	prmt.b32 %r9156, %r938, %r939, %r4;
	// inline asm
	ld.local.u32 	%r942, [%rd5+4];
	ld.local.u32 	%r943, [%rd5];
	// inline asm
	prmt.b32 %r9157, %r942, %r943, %r4;
	// inline asm
	ld.local.u32 	%r946, [%rd5];
	ld.local.u32 	%r947, [%rd4+12];
	// inline asm
	prmt.b32 %r9158, %r946, %r947, %r4;
	// inline asm
	ld.local.u32 	%r950, [%rd4+12];
	ld.local.u32 	%r951, [%rd4+8];
	// inline asm
	prmt.b32 %r9159, %r950, %r951, %r4;
	// inline asm
	ld.local.u32 	%r954, [%rd4+8];
	ld.local.u32 	%r955, [%rd4+4];
	// inline asm
	prmt.b32 %r9152, %r954, %r955, %r4;
	// inline asm
	ld.local.u32 	%r958, [%rd4+4];
	ld.local.u32 	%r959, [%rd4];
	// inline asm
	prmt.b32 %r9153, %r958, %r959, %r4;
	// inline asm
	ld.local.u32 	%r962, [%rd4];
	ld.local.u32 	%r963, [%rd3+12];
	// inline asm
	prmt.b32 %r9154, %r962, %r963, %r4;
	// inline asm
	ld.local.u32 	%r966, [%rd3+12];
	ld.local.u32 	%r967, [%rd3+8];
	// inline asm
	prmt.b32 %r9155, %r966, %r967, %r4;
	// inline asm
	ld.local.u32 	%r970, [%rd3+8];
	ld.local.u32 	%r971, [%rd3+4];
	// inline asm
	prmt.b32 %r9148, %r970, %r971, %r4;
	// inline asm
	ld.local.u32 	%r974, [%rd3+4];
	ld.local.u32 	%r975, [%rd3];
	// inline asm
	prmt.b32 %r9149, %r974, %r975, %r4;
	// inline asm
	ld.local.u32 	%r978, [%rd3];
	ld.local.u32 	%r979, [%rd2+12];
	// inline asm
	prmt.b32 %r9150, %r978, %r979, %r4;
	// inline asm
	ld.local.u32 	%r982, [%rd2+12];
	ld.local.u32 	%r983, [%rd2+8];
	// inline asm
	prmt.b32 %r9151, %r982, %r983, %r4;
	// inline asm
	ld.local.u32 	%r986, [%rd2+8];
	ld.local.u32 	%r987, [%rd2+4];
	// inline asm
	prmt.b32 %r9144, %r986, %r987, %r4;
	// inline asm
	ld.local.u32 	%r990, [%rd2+4];
	ld.local.u32 	%r991, [%rd2];
	// inline asm
	prmt.b32 %r9145, %r990, %r991, %r4;
	// inline asm
	ld.local.u32 	%r994, [%rd2];
	ld.local.u32 	%r995, [%rd1+12];
	// inline asm
	prmt.b32 %r9146, %r994, %r995, %r4;
	// inline asm
	ld.local.u32 	%r998, [%rd1+12];
	ld.local.u32 	%r999, [%rd1+8];
	// inline asm
	prmt.b32 %r9147, %r998, %r999, %r4;
	// inline asm
	ld.local.u32 	%r1002, [%rd1+8];
	ld.local.u32 	%r1003, [%rd1+4];
	// inline asm
	prmt.b32 %r1001, %r1002, %r1003, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1001;
	ld.local.u32 	%r1006, [%rd1+4];
	ld.local.u32 	%r1007, [%rd1];
	// inline asm
	prmt.b32 %r1005, %r1006, %r1007, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1005;
	ld.local.u32 	%r1010, [%rd1];
	// inline asm
	prmt.b32 %r1009, %r1010, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1009;
	st.local.u32 	[%rd8], %r9143;
	st.local.u32 	[%rd7+12], %r9143;
	st.local.u32 	[%rd7+8], %r9143;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd188, 0;
	st.local.u32 	[%rd1+4], %rd188;
	st.local.u32 	[%rd1], %rd188;
	mov.u32 	%r9172, %r9143;
	mov.u32 	%r9173, %r9143;
	bra.uni 	BB0_91;

BB0_102:
	setp.eq.s32	%p96, %r3, 3;
	@%p96 bra 	BB0_103;
	bra.uni 	BB0_173;

BB0_103:
	ld.local.u32 	%r7859, [%rd8];
	ld.local.u32 	%r7860, [%rd7+12];
	// inline asm
	prmt.b32 %r7858, %r7859, %r7860, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7858;
	ld.local.u32 	%r7863, [%rd7+12];
	ld.local.u32 	%r7864, [%rd7+8];
	// inline asm
	prmt.b32 %r7862, %r7863, %r7864, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7862;
	ld.local.u32 	%r7867, [%rd7+8];
	ld.local.u32 	%r7868, [%rd7+4];
	// inline asm
	prmt.b32 %r7866, %r7867, %r7868, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7866;
	ld.local.u32 	%r7871, [%rd7+4];
	ld.local.u32 	%r7872, [%rd7];
	// inline asm
	prmt.b32 %r7870, %r7871, %r7872, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7870;
	ld.local.u32 	%r7875, [%rd7];
	ld.local.u32 	%r7876, [%rd6+12];
	// inline asm
	prmt.b32 %r7874, %r7875, %r7876, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7874;
	ld.local.u32 	%r7879, [%rd6+12];
	ld.local.u32 	%r7880, [%rd6+8];
	// inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7878;
	ld.local.u32 	%r7883, [%rd6+8];
	ld.local.u32 	%r7884, [%rd6+4];
	// inline asm
	prmt.b32 %r7882, %r7883, %r7884, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7882;
	ld.local.u32 	%r7887, [%rd6+4];
	ld.local.u32 	%r7888, [%rd6];
	// inline asm
	prmt.b32 %r7886, %r7887, %r7888, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7886;
	ld.local.u32 	%r7891, [%rd6];
	ld.local.u32 	%r7892, [%rd5+12];
	// inline asm
	prmt.b32 %r7890, %r7891, %r7892, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7890;
	ld.local.u32 	%r7895, [%rd5+12];
	ld.local.u32 	%r7896, [%rd5+8];
	// inline asm
	prmt.b32 %r7894, %r7895, %r7896, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7894;
	ld.local.u32 	%r7899, [%rd5+8];
	ld.local.u32 	%r7900, [%rd5+4];
	// inline asm
	prmt.b32 %r7898, %r7899, %r7900, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7898;
	ld.local.u32 	%r7903, [%rd5+4];
	ld.local.u32 	%r7904, [%rd5];
	// inline asm
	prmt.b32 %r7902, %r7903, %r7904, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7902;
	ld.local.u32 	%r7907, [%rd5];
	ld.local.u32 	%r7908, [%rd4+12];
	// inline asm
	prmt.b32 %r7906, %r7907, %r7908, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7906;
	ld.local.u32 	%r7911, [%rd4+12];
	ld.local.u32 	%r7912, [%rd4+8];
	// inline asm
	prmt.b32 %r7910, %r7911, %r7912, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7910;
	ld.local.u32 	%r7915, [%rd4+8];
	ld.local.u32 	%r7916, [%rd4+4];
	// inline asm
	prmt.b32 %r7914, %r7915, %r7916, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7914;
	ld.local.u32 	%r7919, [%rd4+4];
	ld.local.u32 	%r7920, [%rd4];
	// inline asm
	prmt.b32 %r7918, %r7919, %r7920, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7918;
	ld.local.u32 	%r7923, [%rd4];
	ld.local.u32 	%r7924, [%rd3+12];
	// inline asm
	prmt.b32 %r7922, %r7923, %r7924, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7922;
	ld.local.u32 	%r7927, [%rd3+12];
	ld.local.u32 	%r7928, [%rd3+8];
	// inline asm
	prmt.b32 %r7926, %r7927, %r7928, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7926;
	ld.local.u32 	%r7931, [%rd3+8];
	ld.local.u32 	%r7932, [%rd3+4];
	// inline asm
	prmt.b32 %r7930, %r7931, %r7932, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7930;
	ld.local.u32 	%r7935, [%rd3+4];
	ld.local.u32 	%r7936, [%rd3];
	// inline asm
	prmt.b32 %r7934, %r7935, %r7936, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7934;
	ld.local.u32 	%r7939, [%rd3];
	ld.local.u32 	%r7940, [%rd2+12];
	// inline asm
	prmt.b32 %r7938, %r7939, %r7940, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7938;
	ld.local.u32 	%r7943, [%rd2+12];
	ld.local.u32 	%r7944, [%rd2+8];
	// inline asm
	prmt.b32 %r7942, %r7943, %r7944, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7942;
	ld.local.u32 	%r7947, [%rd2+8];
	ld.local.u32 	%r7948, [%rd2+4];
	// inline asm
	prmt.b32 %r7946, %r7947, %r7948, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7946;
	ld.local.u32 	%r7951, [%rd2+4];
	ld.local.u32 	%r7952, [%rd2];
	// inline asm
	prmt.b32 %r7950, %r7951, %r7952, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7950;
	ld.local.u32 	%r7955, [%rd2];
	ld.local.u32 	%r7956, [%rd1+12];
	// inline asm
	prmt.b32 %r7954, %r7955, %r7956, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7954;
	ld.local.u32 	%r7959, [%rd1+12];
	ld.local.u32 	%r7960, [%rd1+8];
	// inline asm
	prmt.b32 %r7958, %r7959, %r7960, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7958;
	ld.local.u32 	%r7963, [%rd1+8];
	ld.local.u32 	%r7964, [%rd1+4];
	// inline asm
	prmt.b32 %r7962, %r7963, %r7964, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7962;
	ld.local.u32 	%r7967, [%rd1+4];
	ld.local.u32 	%r7968, [%rd1];
	// inline asm
	prmt.b32 %r7966, %r7967, %r7968, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7966;
	ld.local.u32 	%r7971, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7970, %r7971, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r7970;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1262, 0;
	st.local.u32 	[%rd1+4], %rd1262;
	st.local.u32 	[%rd1], %rd1262;
	bra.uni 	BB0_174;

BB0_11:
	setp.eq.s32	%p48, %r3, 3;
	@%p48 bra 	BB0_12;
	bra.uni 	BB0_89;

BB0_12:
	ld.local.u32 	%r4718, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9144, %r9143, %r4718, %r4;
	// inline asm
	ld.local.u32 	%r4721, [%rd8+12];
	ld.local.u32 	%r4722, [%rd8+8];
	// inline asm
	prmt.b32 %r9145, %r4721, %r4722, %r4;
	// inline asm
	ld.local.u32 	%r4725, [%rd8+8];
	ld.local.u32 	%r4726, [%rd8+4];
	// inline asm
	prmt.b32 %r9146, %r4725, %r4726, %r4;
	// inline asm
	ld.local.u32 	%r4729, [%rd8+4];
	ld.local.u32 	%r4730, [%rd8];
	// inline asm
	prmt.b32 %r9147, %r4729, %r4730, %r4;
	// inline asm
	ld.local.u32 	%r4733, [%rd8];
	ld.local.u32 	%r4734, [%rd7+12];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4732;
	ld.local.u32 	%r4737, [%rd7+12];
	ld.local.u32 	%r4738, [%rd7+8];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4736;
	ld.local.u32 	%r4741, [%rd7+8];
	ld.local.u32 	%r4742, [%rd7+4];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4740;
	ld.local.u32 	%r4745, [%rd7+4];
	ld.local.u32 	%r4746, [%rd7];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4744;
	ld.local.u32 	%r4749, [%rd7];
	ld.local.u32 	%r4750, [%rd6+12];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4748;
	ld.local.u32 	%r4753, [%rd6+12];
	ld.local.u32 	%r4754, [%rd6+8];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4752;
	ld.local.u32 	%r4757, [%rd6+8];
	ld.local.u32 	%r4758, [%rd6+4];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4756;
	ld.local.u32 	%r4761, [%rd6+4];
	ld.local.u32 	%r4762, [%rd6];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4760;
	ld.local.u32 	%r4765, [%rd6];
	ld.local.u32 	%r4766, [%rd5+12];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4764;
	ld.local.u32 	%r4769, [%rd5+12];
	ld.local.u32 	%r4770, [%rd5+8];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4768;
	ld.local.u32 	%r4773, [%rd5+8];
	ld.local.u32 	%r4774, [%rd5+4];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4772;
	ld.local.u32 	%r4777, [%rd5+4];
	ld.local.u32 	%r4778, [%rd5];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4776;
	ld.local.u32 	%r4781, [%rd5];
	ld.local.u32 	%r4782, [%rd4+12];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4780;
	ld.local.u32 	%r4785, [%rd4+12];
	ld.local.u32 	%r4786, [%rd4+8];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4784;
	ld.local.u32 	%r4789, [%rd4+8];
	ld.local.u32 	%r4790, [%rd4+4];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4788;
	ld.local.u32 	%r4793, [%rd4+4];
	ld.local.u32 	%r4794, [%rd4];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4792;
	ld.local.u32 	%r4797, [%rd4];
	ld.local.u32 	%r4798, [%rd3+12];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4796;
	ld.local.u32 	%r4801, [%rd3+12];
	ld.local.u32 	%r4802, [%rd3+8];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4800;
	ld.local.u32 	%r4805, [%rd3+8];
	ld.local.u32 	%r4806, [%rd3+4];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4804;
	ld.local.u32 	%r4809, [%rd3+4];
	ld.local.u32 	%r4810, [%rd3];
	// inline asm
	prmt.b32 %r4808, %r4809, %r4810, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4808;
	ld.local.u32 	%r4813, [%rd3];
	ld.local.u32 	%r4814, [%rd2+12];
	// inline asm
	prmt.b32 %r4812, %r4813, %r4814, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4812;
	ld.local.u32 	%r4817, [%rd2+12];
	ld.local.u32 	%r4818, [%rd2+8];
	// inline asm
	prmt.b32 %r4816, %r4817, %r4818, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4816;
	ld.local.u32 	%r4821, [%rd2+8];
	ld.local.u32 	%r4822, [%rd2+4];
	// inline asm
	prmt.b32 %r4820, %r4821, %r4822, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4820;
	ld.local.u32 	%r4825, [%rd2+4];
	ld.local.u32 	%r4826, [%rd2];
	// inline asm
	prmt.b32 %r4824, %r4825, %r4826, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4824;
	ld.local.u32 	%r4829, [%rd2];
	ld.local.u32 	%r4830, [%rd1+12];
	// inline asm
	prmt.b32 %r4828, %r4829, %r4830, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4828;
	ld.local.u32 	%r4833, [%rd1+12];
	ld.local.u32 	%r4834, [%rd1+8];
	// inline asm
	prmt.b32 %r4832, %r4833, %r4834, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4832;
	ld.local.u32 	%r4837, [%rd1+8];
	ld.local.u32 	%r4838, [%rd1+4];
	// inline asm
	prmt.b32 %r4836, %r4837, %r4838, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4836;
	ld.local.u32 	%r4841, [%rd1+4];
	ld.local.u32 	%r4842, [%rd1];
	// inline asm
	prmt.b32 %r4840, %r4841, %r4842, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4840;
	ld.local.u32 	%r4845, [%rd1];
	// inline asm
	prmt.b32 %r4844, %r4845, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4844;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd214, 0;
	st.local.u32 	[%rd1+4], %rd214;
	st.local.u32 	[%rd1], %rd214;

BB0_13:
	mov.u32 	%r9148, %r9143;
	mov.u32 	%r9149, %r9143;
	mov.u32 	%r9150, %r9143;
	mov.u32 	%r9151, %r9143;
	bra.uni 	BB0_81;

BB0_133:
	setp.eq.s32	%p73, %r3, 19;
	@%p73 bra 	BB0_134;
	bra.uni 	BB0_173;

BB0_134:
	ld.local.u32 	%r6531, [%rd4];
	ld.local.u32 	%r6532, [%rd3+12];
	// inline asm
	prmt.b32 %r6530, %r6531, %r6532, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6530;
	ld.local.u32 	%r6535, [%rd3+12];
	ld.local.u32 	%r6536, [%rd3+8];
	// inline asm
	prmt.b32 %r6534, %r6535, %r6536, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6534;
	ld.local.u32 	%r6539, [%rd3+8];
	ld.local.u32 	%r6540, [%rd3+4];
	// inline asm
	prmt.b32 %r6538, %r6539, %r6540, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6538;
	ld.local.u32 	%r6543, [%rd3+4];
	ld.local.u32 	%r6544, [%rd3];
	// inline asm
	prmt.b32 %r6542, %r6543, %r6544, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6542;
	ld.local.u32 	%r6547, [%rd3];
	ld.local.u32 	%r6548, [%rd2+12];
	// inline asm
	prmt.b32 %r6546, %r6547, %r6548, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6546;
	ld.local.u32 	%r6551, [%rd2+12];
	ld.local.u32 	%r6552, [%rd2+8];
	// inline asm
	prmt.b32 %r6550, %r6551, %r6552, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6550;
	ld.local.u32 	%r6555, [%rd2+8];
	ld.local.u32 	%r6556, [%rd2+4];
	// inline asm
	prmt.b32 %r6554, %r6555, %r6556, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6554;
	ld.local.u32 	%r6559, [%rd2+4];
	ld.local.u32 	%r6560, [%rd2];
	// inline asm
	prmt.b32 %r6558, %r6559, %r6560, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6558;
	ld.local.u32 	%r6563, [%rd2];
	ld.local.u32 	%r6564, [%rd1+12];
	// inline asm
	prmt.b32 %r6562, %r6563, %r6564, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6562;
	ld.local.u32 	%r6567, [%rd1+12];
	ld.local.u32 	%r6568, [%rd1+8];
	// inline asm
	prmt.b32 %r6566, %r6567, %r6568, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6566;
	ld.local.u32 	%r6571, [%rd1+8];
	ld.local.u32 	%r6572, [%rd1+4];
	// inline asm
	prmt.b32 %r6570, %r6571, %r6572, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6570;
	ld.local.u32 	%r6575, [%rd1+4];
	ld.local.u32 	%r6576, [%rd1];
	// inline asm
	prmt.b32 %r6574, %r6575, %r6576, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6574;
	ld.local.u32 	%r6579, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6578, %r6579, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6578;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1246, 0;
	st.local.u32 	[%rd1+4], %rd1246;
	st.local.u32 	[%rd1], %rd1246;
	bra.uni 	BB0_174;

BB0_43:
	setp.eq.s32	%p25, %r3, 19;
	@%p25 bra 	BB0_44;
	bra.uni 	BB0_89;

BB0_44:
	ld.local.u32 	%r2278, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9160, %r9143, %r2278, %r4;
	// inline asm
	ld.local.u32 	%r2281, [%rd8+12];
	ld.local.u32 	%r2282, [%rd8+8];
	// inline asm
	prmt.b32 %r9161, %r2281, %r2282, %r4;
	// inline asm
	ld.local.u32 	%r2285, [%rd8+8];
	ld.local.u32 	%r2286, [%rd8+4];
	// inline asm
	prmt.b32 %r9162, %r2285, %r2286, %r4;
	// inline asm
	ld.local.u32 	%r2289, [%rd8+4];
	ld.local.u32 	%r2290, [%rd8];
	// inline asm
	prmt.b32 %r9163, %r2289, %r2290, %r4;
	// inline asm
	ld.local.u32 	%r2293, [%rd8];
	ld.local.u32 	%r2294, [%rd7+12];
	// inline asm
	prmt.b32 %r9156, %r2293, %r2294, %r4;
	// inline asm
	ld.local.u32 	%r2297, [%rd7+12];
	ld.local.u32 	%r2298, [%rd7+8];
	// inline asm
	prmt.b32 %r9157, %r2297, %r2298, %r4;
	// inline asm
	ld.local.u32 	%r2301, [%rd7+8];
	ld.local.u32 	%r2302, [%rd7+4];
	// inline asm
	prmt.b32 %r9158, %r2301, %r2302, %r4;
	// inline asm
	ld.local.u32 	%r2305, [%rd7+4];
	ld.local.u32 	%r2306, [%rd7];
	// inline asm
	prmt.b32 %r9159, %r2305, %r2306, %r4;
	// inline asm
	ld.local.u32 	%r2309, [%rd7];
	ld.local.u32 	%r2310, [%rd6+12];
	// inline asm
	prmt.b32 %r9152, %r2309, %r2310, %r4;
	// inline asm
	ld.local.u32 	%r2313, [%rd6+12];
	ld.local.u32 	%r2314, [%rd6+8];
	// inline asm
	prmt.b32 %r9153, %r2313, %r2314, %r4;
	// inline asm
	ld.local.u32 	%r2317, [%rd6+8];
	ld.local.u32 	%r2318, [%rd6+4];
	// inline asm
	prmt.b32 %r9154, %r2317, %r2318, %r4;
	// inline asm
	ld.local.u32 	%r2321, [%rd6+4];
	ld.local.u32 	%r2322, [%rd6];
	// inline asm
	prmt.b32 %r9155, %r2321, %r2322, %r4;
	// inline asm
	ld.local.u32 	%r2325, [%rd6];
	ld.local.u32 	%r2326, [%rd5+12];
	// inline asm
	prmt.b32 %r9148, %r2325, %r2326, %r4;
	// inline asm
	ld.local.u32 	%r2329, [%rd5+12];
	ld.local.u32 	%r2330, [%rd5+8];
	// inline asm
	prmt.b32 %r9149, %r2329, %r2330, %r4;
	// inline asm
	ld.local.u32 	%r2333, [%rd5+8];
	ld.local.u32 	%r2334, [%rd5+4];
	// inline asm
	prmt.b32 %r9150, %r2333, %r2334, %r4;
	// inline asm
	ld.local.u32 	%r2337, [%rd5+4];
	ld.local.u32 	%r2338, [%rd5];
	// inline asm
	prmt.b32 %r9151, %r2337, %r2338, %r4;
	// inline asm
	ld.local.u32 	%r2341, [%rd5];
	ld.local.u32 	%r2342, [%rd4+12];
	// inline asm
	prmt.b32 %r9144, %r2341, %r2342, %r4;
	// inline asm
	ld.local.u32 	%r2345, [%rd4+12];
	ld.local.u32 	%r2346, [%rd4+8];
	// inline asm
	prmt.b32 %r9145, %r2345, %r2346, %r4;
	// inline asm
	ld.local.u32 	%r2349, [%rd4+8];
	ld.local.u32 	%r2350, [%rd4+4];
	// inline asm
	prmt.b32 %r9146, %r2349, %r2350, %r4;
	// inline asm
	ld.local.u32 	%r2353, [%rd4+4];
	ld.local.u32 	%r2354, [%rd4];
	// inline asm
	prmt.b32 %r9147, %r2353, %r2354, %r4;
	// inline asm
	ld.local.u32 	%r2357, [%rd4];
	ld.local.u32 	%r2358, [%rd3+12];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2356;
	ld.local.u32 	%r2361, [%rd3+12];
	ld.local.u32 	%r2362, [%rd3+8];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2360;
	ld.local.u32 	%r2365, [%rd3+8];
	ld.local.u32 	%r2366, [%rd3+4];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2364;
	ld.local.u32 	%r2369, [%rd3+4];
	ld.local.u32 	%r2370, [%rd3];
	// inline asm
	prmt.b32 %r2368, %r2369, %r2370, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2368;
	ld.local.u32 	%r2373, [%rd3];
	ld.local.u32 	%r2374, [%rd2+12];
	// inline asm
	prmt.b32 %r2372, %r2373, %r2374, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2372;
	ld.local.u32 	%r2377, [%rd2+12];
	ld.local.u32 	%r2378, [%rd2+8];
	// inline asm
	prmt.b32 %r2376, %r2377, %r2378, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2376;
	ld.local.u32 	%r2381, [%rd2+8];
	ld.local.u32 	%r2382, [%rd2+4];
	// inline asm
	prmt.b32 %r2380, %r2381, %r2382, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2380;
	ld.local.u32 	%r2385, [%rd2+4];
	ld.local.u32 	%r2386, [%rd2];
	// inline asm
	prmt.b32 %r2384, %r2385, %r2386, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2384;
	ld.local.u32 	%r2389, [%rd2];
	ld.local.u32 	%r2390, [%rd1+12];
	// inline asm
	prmt.b32 %r2388, %r2389, %r2390, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2388;
	ld.local.u32 	%r2393, [%rd1+12];
	ld.local.u32 	%r2394, [%rd1+8];
	// inline asm
	prmt.b32 %r2392, %r2393, %r2394, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2392;
	ld.local.u32 	%r2397, [%rd1+8];
	ld.local.u32 	%r2398, [%rd1+4];
	// inline asm
	prmt.b32 %r2396, %r2397, %r2398, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2396;
	ld.local.u32 	%r2401, [%rd1+4];
	ld.local.u32 	%r2402, [%rd1];
	// inline asm
	prmt.b32 %r2400, %r2401, %r2402, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2400;
	ld.local.u32 	%r2405, [%rd1];
	// inline asm
	prmt.b32 %r2404, %r2405, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2404;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd198, 0;
	st.local.u32 	[%rd1+4], %rd198;
	st.local.u32 	[%rd1], %rd198;
	bra.uni 	BB0_84;

BB0_117:
	setp.eq.s32	%p85, %r3, 11;
	@%p85 bra 	BB0_118;
	bra.uni 	BB0_173;

BB0_118:
	ld.local.u32 	%r7067, [%rd6];
	ld.local.u32 	%r7068, [%rd5+12];
	// inline asm
	prmt.b32 %r7066, %r7067, %r7068, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7066;
	ld.local.u32 	%r7071, [%rd5+12];
	ld.local.u32 	%r7072, [%rd5+8];
	// inline asm
	prmt.b32 %r7070, %r7071, %r7072, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7070;
	ld.local.u32 	%r7075, [%rd5+8];
	ld.local.u32 	%r7076, [%rd5+4];
	// inline asm
	prmt.b32 %r7074, %r7075, %r7076, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7074;
	ld.local.u32 	%r7079, [%rd5+4];
	ld.local.u32 	%r7080, [%rd5];
	// inline asm
	prmt.b32 %r7078, %r7079, %r7080, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7078;
	ld.local.u32 	%r7083, [%rd5];
	ld.local.u32 	%r7084, [%rd4+12];
	// inline asm
	prmt.b32 %r7082, %r7083, %r7084, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7082;
	ld.local.u32 	%r7087, [%rd4+12];
	ld.local.u32 	%r7088, [%rd4+8];
	// inline asm
	prmt.b32 %r7086, %r7087, %r7088, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7086;
	ld.local.u32 	%r7091, [%rd4+8];
	ld.local.u32 	%r7092, [%rd4+4];
	// inline asm
	prmt.b32 %r7090, %r7091, %r7092, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7090;
	ld.local.u32 	%r7095, [%rd4+4];
	ld.local.u32 	%r7096, [%rd4];
	// inline asm
	prmt.b32 %r7094, %r7095, %r7096, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7094;
	ld.local.u32 	%r7099, [%rd4];
	ld.local.u32 	%r7100, [%rd3+12];
	// inline asm
	prmt.b32 %r7098, %r7099, %r7100, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7098;
	ld.local.u32 	%r7103, [%rd3+12];
	ld.local.u32 	%r7104, [%rd3+8];
	// inline asm
	prmt.b32 %r7102, %r7103, %r7104, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7102;
	ld.local.u32 	%r7107, [%rd3+8];
	ld.local.u32 	%r7108, [%rd3+4];
	// inline asm
	prmt.b32 %r7106, %r7107, %r7108, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7106;
	ld.local.u32 	%r7111, [%rd3+4];
	ld.local.u32 	%r7112, [%rd3];
	// inline asm
	prmt.b32 %r7110, %r7111, %r7112, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7110;
	ld.local.u32 	%r7115, [%rd3];
	ld.local.u32 	%r7116, [%rd2+12];
	// inline asm
	prmt.b32 %r7114, %r7115, %r7116, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7114;
	ld.local.u32 	%r7119, [%rd2+12];
	ld.local.u32 	%r7120, [%rd2+8];
	// inline asm
	prmt.b32 %r7118, %r7119, %r7120, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7118;
	ld.local.u32 	%r7123, [%rd2+8];
	ld.local.u32 	%r7124, [%rd2+4];
	// inline asm
	prmt.b32 %r7122, %r7123, %r7124, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7122;
	ld.local.u32 	%r7127, [%rd2+4];
	ld.local.u32 	%r7128, [%rd2];
	// inline asm
	prmt.b32 %r7126, %r7127, %r7128, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7126;
	ld.local.u32 	%r7131, [%rd2];
	ld.local.u32 	%r7132, [%rd1+12];
	// inline asm
	prmt.b32 %r7130, %r7131, %r7132, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7130;
	ld.local.u32 	%r7135, [%rd1+12];
	ld.local.u32 	%r7136, [%rd1+8];
	// inline asm
	prmt.b32 %r7134, %r7135, %r7136, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7134;
	ld.local.u32 	%r7139, [%rd1+8];
	ld.local.u32 	%r7140, [%rd1+4];
	// inline asm
	prmt.b32 %r7138, %r7139, %r7140, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7138;
	ld.local.u32 	%r7143, [%rd1+4];
	ld.local.u32 	%r7144, [%rd1];
	// inline asm
	prmt.b32 %r7142, %r7143, %r7144, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7142;
	ld.local.u32 	%r7147, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7146, %r7147, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7146;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1254, 0;
	st.local.u32 	[%rd1+4], %rd1254;
	st.local.u32 	[%rd1], %rd1254;
	bra.uni 	BB0_174;

BB0_27:
	setp.eq.s32	%p37, %r3, 11;
	@%p37 bra 	BB0_28;
	bra.uni 	BB0_89;

BB0_28:
	ld.local.u32 	%r3466, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9152, %r9143, %r3466, %r4;
	// inline asm
	ld.local.u32 	%r3469, [%rd8+12];
	ld.local.u32 	%r3470, [%rd8+8];
	// inline asm
	prmt.b32 %r9153, %r3469, %r3470, %r4;
	// inline asm
	ld.local.u32 	%r3473, [%rd8+8];
	ld.local.u32 	%r3474, [%rd8+4];
	// inline asm
	prmt.b32 %r9154, %r3473, %r3474, %r4;
	// inline asm
	ld.local.u32 	%r3477, [%rd8+4];
	ld.local.u32 	%r3478, [%rd8];
	// inline asm
	prmt.b32 %r9155, %r3477, %r3478, %r4;
	// inline asm
	ld.local.u32 	%r3481, [%rd8];
	ld.local.u32 	%r3482, [%rd7+12];
	// inline asm
	prmt.b32 %r9148, %r3481, %r3482, %r4;
	// inline asm
	ld.local.u32 	%r3485, [%rd7+12];
	ld.local.u32 	%r3486, [%rd7+8];
	// inline asm
	prmt.b32 %r9149, %r3485, %r3486, %r4;
	// inline asm
	ld.local.u32 	%r3489, [%rd7+8];
	ld.local.u32 	%r3490, [%rd7+4];
	// inline asm
	prmt.b32 %r9150, %r3489, %r3490, %r4;
	// inline asm
	ld.local.u32 	%r3493, [%rd7+4];
	ld.local.u32 	%r3494, [%rd7];
	// inline asm
	prmt.b32 %r9151, %r3493, %r3494, %r4;
	// inline asm
	ld.local.u32 	%r3497, [%rd7];
	ld.local.u32 	%r3498, [%rd6+12];
	// inline asm
	prmt.b32 %r9144, %r3497, %r3498, %r4;
	// inline asm
	ld.local.u32 	%r3501, [%rd6+12];
	ld.local.u32 	%r3502, [%rd6+8];
	// inline asm
	prmt.b32 %r9145, %r3501, %r3502, %r4;
	// inline asm
	ld.local.u32 	%r3505, [%rd6+8];
	ld.local.u32 	%r3506, [%rd6+4];
	// inline asm
	prmt.b32 %r9146, %r3505, %r3506, %r4;
	// inline asm
	ld.local.u32 	%r3509, [%rd6+4];
	ld.local.u32 	%r3510, [%rd6];
	// inline asm
	prmt.b32 %r9147, %r3509, %r3510, %r4;
	// inline asm
	ld.local.u32 	%r3513, [%rd6];
	ld.local.u32 	%r3514, [%rd5+12];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3512;
	ld.local.u32 	%r3517, [%rd5+12];
	ld.local.u32 	%r3518, [%rd5+8];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3516;
	ld.local.u32 	%r3521, [%rd5+8];
	ld.local.u32 	%r3522, [%rd5+4];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3520;
	ld.local.u32 	%r3525, [%rd5+4];
	ld.local.u32 	%r3526, [%rd5];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3524;
	ld.local.u32 	%r3529, [%rd5];
	ld.local.u32 	%r3530, [%rd4+12];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3528;
	ld.local.u32 	%r3533, [%rd4+12];
	ld.local.u32 	%r3534, [%rd4+8];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3532;
	ld.local.u32 	%r3537, [%rd4+8];
	ld.local.u32 	%r3538, [%rd4+4];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3536;
	ld.local.u32 	%r3541, [%rd4+4];
	ld.local.u32 	%r3542, [%rd4];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3540;
	ld.local.u32 	%r3545, [%rd4];
	ld.local.u32 	%r3546, [%rd3+12];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3544;
	ld.local.u32 	%r3549, [%rd3+12];
	ld.local.u32 	%r3550, [%rd3+8];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3548;
	ld.local.u32 	%r3553, [%rd3+8];
	ld.local.u32 	%r3554, [%rd3+4];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3552;
	ld.local.u32 	%r3557, [%rd3+4];
	ld.local.u32 	%r3558, [%rd3];
	// inline asm
	prmt.b32 %r3556, %r3557, %r3558, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3556;
	ld.local.u32 	%r3561, [%rd3];
	ld.local.u32 	%r3562, [%rd2+12];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3560;
	ld.local.u32 	%r3565, [%rd2+12];
	ld.local.u32 	%r3566, [%rd2+8];
	// inline asm
	prmt.b32 %r3564, %r3565, %r3566, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3564;
	ld.local.u32 	%r3569, [%rd2+8];
	ld.local.u32 	%r3570, [%rd2+4];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3568;
	ld.local.u32 	%r3573, [%rd2+4];
	ld.local.u32 	%r3574, [%rd2];
	// inline asm
	prmt.b32 %r3572, %r3573, %r3574, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3572;
	ld.local.u32 	%r3577, [%rd2];
	ld.local.u32 	%r3578, [%rd1+12];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3576;
	ld.local.u32 	%r3581, [%rd1+12];
	ld.local.u32 	%r3582, [%rd1+8];
	// inline asm
	prmt.b32 %r3580, %r3581, %r3582, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3580;
	ld.local.u32 	%r3585, [%rd1+8];
	ld.local.u32 	%r3586, [%rd1+4];
	// inline asm
	prmt.b32 %r3584, %r3585, %r3586, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3584;
	ld.local.u32 	%r3589, [%rd1+4];
	ld.local.u32 	%r3590, [%rd1];
	// inline asm
	prmt.b32 %r3588, %r3589, %r3590, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3588;
	ld.local.u32 	%r3593, [%rd1];
	// inline asm
	prmt.b32 %r3592, %r3593, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3592;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd206, 0;
	st.local.u32 	[%rd1+4], %rd206;
	st.local.u32 	[%rd1], %rd206;
	bra.uni 	BB0_82;

BB0_148:
	setp.eq.s32	%p62, %r3, 27;
	@%p62 bra 	BB0_149;
	bra.uni 	BB0_173;

BB0_149:
	ld.local.u32 	%r6251, [%rd2];
	ld.local.u32 	%r6252, [%rd1+12];
	// inline asm
	prmt.b32 %r6250, %r6251, %r6252, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6250;
	ld.local.u32 	%r6255, [%rd1+12];
	ld.local.u32 	%r6256, [%rd1+8];
	// inline asm
	prmt.b32 %r6254, %r6255, %r6256, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6254;
	ld.local.u32 	%r6259, [%rd1+8];
	ld.local.u32 	%r6260, [%rd1+4];
	// inline asm
	prmt.b32 %r6258, %r6259, %r6260, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6258;
	ld.local.u32 	%r6263, [%rd1+4];
	ld.local.u32 	%r6264, [%rd1];
	// inline asm
	prmt.b32 %r6262, %r6263, %r6264, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6262;
	ld.local.u32 	%r6267, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6266, %r6267, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6266;
	st.local.u32 	[%rd7+8], %r9177;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1238, 0;
	st.local.u32 	[%rd1+4], %rd1238;
	st.local.u32 	[%rd1], %rd1238;
	bra.uni 	BB0_174;

BB0_58:
	setp.eq.s32	%p14, %r3, 27;
	@%p14 bra 	BB0_59;
	bra.uni 	BB0_89;

BB0_59:
	ld.local.u32 	%r1154, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9168, %r9143, %r1154, %r4;
	// inline asm
	ld.local.u32 	%r1157, [%rd8+12];
	ld.local.u32 	%r1158, [%rd8+8];
	// inline asm
	prmt.b32 %r9169, %r1157, %r1158, %r4;
	// inline asm
	ld.local.u32 	%r1161, [%rd8+8];
	ld.local.u32 	%r1162, [%rd8+4];
	// inline asm
	prmt.b32 %r9170, %r1161, %r1162, %r4;
	// inline asm
	ld.local.u32 	%r1165, [%rd8+4];
	ld.local.u32 	%r1166, [%rd8];
	// inline asm
	prmt.b32 %r9171, %r1165, %r1166, %r4;
	// inline asm
	ld.local.u32 	%r1169, [%rd8];
	ld.local.u32 	%r1170, [%rd7+12];
	// inline asm
	prmt.b32 %r9164, %r1169, %r1170, %r4;
	// inline asm
	ld.local.u32 	%r1173, [%rd7+12];
	ld.local.u32 	%r1174, [%rd7+8];
	// inline asm
	prmt.b32 %r9165, %r1173, %r1174, %r4;
	// inline asm
	ld.local.u32 	%r1177, [%rd7+8];
	ld.local.u32 	%r1178, [%rd7+4];
	// inline asm
	prmt.b32 %r9166, %r1177, %r1178, %r4;
	// inline asm
	ld.local.u32 	%r1181, [%rd7+4];
	ld.local.u32 	%r1182, [%rd7];
	// inline asm
	prmt.b32 %r9167, %r1181, %r1182, %r4;
	// inline asm
	ld.local.u32 	%r1185, [%rd7];
	ld.local.u32 	%r1186, [%rd6+12];
	// inline asm
	prmt.b32 %r9160, %r1185, %r1186, %r4;
	// inline asm
	ld.local.u32 	%r1189, [%rd6+12];
	ld.local.u32 	%r1190, [%rd6+8];
	// inline asm
	prmt.b32 %r9161, %r1189, %r1190, %r4;
	// inline asm
	ld.local.u32 	%r1193, [%rd6+8];
	ld.local.u32 	%r1194, [%rd6+4];
	// inline asm
	prmt.b32 %r9162, %r1193, %r1194, %r4;
	// inline asm
	ld.local.u32 	%r1197, [%rd6+4];
	ld.local.u32 	%r1198, [%rd6];
	// inline asm
	prmt.b32 %r9163, %r1197, %r1198, %r4;
	// inline asm
	ld.local.u32 	%r1201, [%rd6];
	ld.local.u32 	%r1202, [%rd5+12];
	// inline asm
	prmt.b32 %r9156, %r1201, %r1202, %r4;
	// inline asm
	ld.local.u32 	%r1205, [%rd5+12];
	ld.local.u32 	%r1206, [%rd5+8];
	// inline asm
	prmt.b32 %r9157, %r1205, %r1206, %r4;
	// inline asm
	ld.local.u32 	%r1209, [%rd5+8];
	ld.local.u32 	%r1210, [%rd5+4];
	// inline asm
	prmt.b32 %r9158, %r1209, %r1210, %r4;
	// inline asm
	ld.local.u32 	%r1213, [%rd5+4];
	ld.local.u32 	%r1214, [%rd5];
	// inline asm
	prmt.b32 %r9159, %r1213, %r1214, %r4;
	// inline asm
	ld.local.u32 	%r1217, [%rd5];
	ld.local.u32 	%r1218, [%rd4+12];
	// inline asm
	prmt.b32 %r9152, %r1217, %r1218, %r4;
	// inline asm
	ld.local.u32 	%r1221, [%rd4+12];
	ld.local.u32 	%r1222, [%rd4+8];
	// inline asm
	prmt.b32 %r9153, %r1221, %r1222, %r4;
	// inline asm
	ld.local.u32 	%r1225, [%rd4+8];
	ld.local.u32 	%r1226, [%rd4+4];
	// inline asm
	prmt.b32 %r9154, %r1225, %r1226, %r4;
	// inline asm
	ld.local.u32 	%r1229, [%rd4+4];
	ld.local.u32 	%r1230, [%rd4];
	// inline asm
	prmt.b32 %r9155, %r1229, %r1230, %r4;
	// inline asm
	ld.local.u32 	%r1233, [%rd4];
	ld.local.u32 	%r1234, [%rd3+12];
	// inline asm
	prmt.b32 %r9148, %r1233, %r1234, %r4;
	// inline asm
	ld.local.u32 	%r1237, [%rd3+12];
	ld.local.u32 	%r1238, [%rd3+8];
	// inline asm
	prmt.b32 %r9149, %r1237, %r1238, %r4;
	// inline asm
	ld.local.u32 	%r1241, [%rd3+8];
	ld.local.u32 	%r1242, [%rd3+4];
	// inline asm
	prmt.b32 %r9150, %r1241, %r1242, %r4;
	// inline asm
	ld.local.u32 	%r1245, [%rd3+4];
	ld.local.u32 	%r1246, [%rd3];
	// inline asm
	prmt.b32 %r9151, %r1245, %r1246, %r4;
	// inline asm
	ld.local.u32 	%r1249, [%rd3];
	ld.local.u32 	%r1250, [%rd2+12];
	// inline asm
	prmt.b32 %r9144, %r1249, %r1250, %r4;
	// inline asm
	ld.local.u32 	%r1253, [%rd2+12];
	ld.local.u32 	%r1254, [%rd2+8];
	// inline asm
	prmt.b32 %r9145, %r1253, %r1254, %r4;
	// inline asm
	ld.local.u32 	%r1257, [%rd2+8];
	ld.local.u32 	%r1258, [%rd2+4];
	// inline asm
	prmt.b32 %r9146, %r1257, %r1258, %r4;
	// inline asm
	ld.local.u32 	%r1261, [%rd2+4];
	ld.local.u32 	%r1262, [%rd2];
	// inline asm
	prmt.b32 %r9147, %r1261, %r1262, %r4;
	// inline asm
	ld.local.u32 	%r1265, [%rd2];
	ld.local.u32 	%r1266, [%rd1+12];
	// inline asm
	prmt.b32 %r1264, %r1265, %r1266, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1264;
	ld.local.u32 	%r1269, [%rd1+12];
	ld.local.u32 	%r1270, [%rd1+8];
	// inline asm
	prmt.b32 %r1268, %r1269, %r1270, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1268;
	ld.local.u32 	%r1273, [%rd1+8];
	ld.local.u32 	%r1274, [%rd1+4];
	// inline asm
	prmt.b32 %r1272, %r1273, %r1274, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1272;
	ld.local.u32 	%r1277, [%rd1+4];
	ld.local.u32 	%r1278, [%rd1];
	// inline asm
	prmt.b32 %r1276, %r1277, %r1278, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1276;
	ld.local.u32 	%r1281, [%rd1];
	// inline asm
	prmt.b32 %r1280, %r1281, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1280;
	st.local.u32 	[%rd7+8], %r9143;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd190, 0;
	st.local.u32 	[%rd1+4], %rd190;
	st.local.u32 	[%rd1], %rd190;
	bra.uni 	BB0_86;

BB0_109:
	setp.eq.s32	%p91, %r3, 7;
	@%p91 bra 	BB0_110;
	bra.uni 	BB0_173;

BB0_110:
	ld.local.u32 	%r7431, [%rd7];
	ld.local.u32 	%r7432, [%rd6+12];
	// inline asm
	prmt.b32 %r7430, %r7431, %r7432, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7430;
	ld.local.u32 	%r7435, [%rd6+12];
	ld.local.u32 	%r7436, [%rd6+8];
	// inline asm
	prmt.b32 %r7434, %r7435, %r7436, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7434;
	ld.local.u32 	%r7439, [%rd6+8];
	ld.local.u32 	%r7440, [%rd6+4];
	// inline asm
	prmt.b32 %r7438, %r7439, %r7440, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7438;
	ld.local.u32 	%r7443, [%rd6+4];
	ld.local.u32 	%r7444, [%rd6];
	// inline asm
	prmt.b32 %r7442, %r7443, %r7444, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7442;
	ld.local.u32 	%r7447, [%rd6];
	ld.local.u32 	%r7448, [%rd5+12];
	// inline asm
	prmt.b32 %r7446, %r7447, %r7448, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7446;
	ld.local.u32 	%r7451, [%rd5+12];
	ld.local.u32 	%r7452, [%rd5+8];
	// inline asm
	prmt.b32 %r7450, %r7451, %r7452, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7450;
	ld.local.u32 	%r7455, [%rd5+8];
	ld.local.u32 	%r7456, [%rd5+4];
	// inline asm
	prmt.b32 %r7454, %r7455, %r7456, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7454;
	ld.local.u32 	%r7459, [%rd5+4];
	ld.local.u32 	%r7460, [%rd5];
	// inline asm
	prmt.b32 %r7458, %r7459, %r7460, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7458;
	ld.local.u32 	%r7463, [%rd5];
	ld.local.u32 	%r7464, [%rd4+12];
	// inline asm
	prmt.b32 %r7462, %r7463, %r7464, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7462;
	ld.local.u32 	%r7467, [%rd4+12];
	ld.local.u32 	%r7468, [%rd4+8];
	// inline asm
	prmt.b32 %r7466, %r7467, %r7468, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7466;
	ld.local.u32 	%r7471, [%rd4+8];
	ld.local.u32 	%r7472, [%rd4+4];
	// inline asm
	prmt.b32 %r7470, %r7471, %r7472, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7470;
	ld.local.u32 	%r7475, [%rd4+4];
	ld.local.u32 	%r7476, [%rd4];
	// inline asm
	prmt.b32 %r7474, %r7475, %r7476, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7474;
	ld.local.u32 	%r7479, [%rd4];
	ld.local.u32 	%r7480, [%rd3+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7478;
	ld.local.u32 	%r7483, [%rd3+12];
	ld.local.u32 	%r7484, [%rd3+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7482;
	ld.local.u32 	%r7487, [%rd3+8];
	ld.local.u32 	%r7488, [%rd3+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7486;
	ld.local.u32 	%r7491, [%rd3+4];
	ld.local.u32 	%r7492, [%rd3];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7490;
	ld.local.u32 	%r7495, [%rd3];
	ld.local.u32 	%r7496, [%rd2+12];
	// inline asm
	prmt.b32 %r7494, %r7495, %r7496, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7494;
	ld.local.u32 	%r7499, [%rd2+12];
	ld.local.u32 	%r7500, [%rd2+8];
	// inline asm
	prmt.b32 %r7498, %r7499, %r7500, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7498;
	ld.local.u32 	%r7503, [%rd2+8];
	ld.local.u32 	%r7504, [%rd2+4];
	// inline asm
	prmt.b32 %r7502, %r7503, %r7504, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7502;
	ld.local.u32 	%r7507, [%rd2+4];
	ld.local.u32 	%r7508, [%rd2];
	// inline asm
	prmt.b32 %r7506, %r7507, %r7508, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7506;
	ld.local.u32 	%r7511, [%rd2];
	ld.local.u32 	%r7512, [%rd1+12];
	// inline asm
	prmt.b32 %r7510, %r7511, %r7512, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7510;
	ld.local.u32 	%r7515, [%rd1+12];
	ld.local.u32 	%r7516, [%rd1+8];
	// inline asm
	prmt.b32 %r7514, %r7515, %r7516, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7514;
	ld.local.u32 	%r7519, [%rd1+8];
	ld.local.u32 	%r7520, [%rd1+4];
	// inline asm
	prmt.b32 %r7518, %r7519, %r7520, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7518;
	ld.local.u32 	%r7523, [%rd1+4];
	ld.local.u32 	%r7524, [%rd1];
	// inline asm
	prmt.b32 %r7522, %r7523, %r7524, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7522;
	ld.local.u32 	%r7527, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r7526, %r7527, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7526;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1258, 0;
	st.local.u32 	[%rd1+4], %rd1258;
	st.local.u32 	[%rd1], %rd1258;
	bra.uni 	BB0_174;

BB0_19:
	setp.eq.s32	%p43, %r3, 7;
	@%p43 bra 	BB0_20;
	bra.uni 	BB0_89;

BB0_20:
	ld.local.u32 	%r4084, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9148, %r9143, %r4084, %r4;
	// inline asm
	ld.local.u32 	%r4087, [%rd8+12];
	ld.local.u32 	%r4088, [%rd8+8];
	// inline asm
	prmt.b32 %r9149, %r4087, %r4088, %r4;
	// inline asm
	ld.local.u32 	%r4091, [%rd8+8];
	ld.local.u32 	%r4092, [%rd8+4];
	// inline asm
	prmt.b32 %r9150, %r4091, %r4092, %r4;
	// inline asm
	ld.local.u32 	%r4095, [%rd8+4];
	ld.local.u32 	%r4096, [%rd8];
	// inline asm
	prmt.b32 %r9151, %r4095, %r4096, %r4;
	// inline asm
	ld.local.u32 	%r4099, [%rd8];
	ld.local.u32 	%r4100, [%rd7+12];
	// inline asm
	prmt.b32 %r9144, %r4099, %r4100, %r4;
	// inline asm
	ld.local.u32 	%r4103, [%rd7+12];
	ld.local.u32 	%r4104, [%rd7+8];
	// inline asm
	prmt.b32 %r9145, %r4103, %r4104, %r4;
	// inline asm
	ld.local.u32 	%r4107, [%rd7+8];
	ld.local.u32 	%r4108, [%rd7+4];
	// inline asm
	prmt.b32 %r9146, %r4107, %r4108, %r4;
	// inline asm
	ld.local.u32 	%r4111, [%rd7+4];
	ld.local.u32 	%r4112, [%rd7];
	// inline asm
	prmt.b32 %r9147, %r4111, %r4112, %r4;
	// inline asm
	ld.local.u32 	%r4115, [%rd7];
	ld.local.u32 	%r4116, [%rd6+12];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4114;
	ld.local.u32 	%r4119, [%rd6+12];
	ld.local.u32 	%r4120, [%rd6+8];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4118;
	ld.local.u32 	%r4123, [%rd6+8];
	ld.local.u32 	%r4124, [%rd6+4];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4122;
	ld.local.u32 	%r4127, [%rd6+4];
	ld.local.u32 	%r4128, [%rd6];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4126;
	ld.local.u32 	%r4131, [%rd6];
	ld.local.u32 	%r4132, [%rd5+12];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4130;
	ld.local.u32 	%r4135, [%rd5+12];
	ld.local.u32 	%r4136, [%rd5+8];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4134;
	ld.local.u32 	%r4139, [%rd5+8];
	ld.local.u32 	%r4140, [%rd5+4];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4138;
	ld.local.u32 	%r4143, [%rd5+4];
	ld.local.u32 	%r4144, [%rd5];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4142;
	ld.local.u32 	%r4147, [%rd5];
	ld.local.u32 	%r4148, [%rd4+12];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4146;
	ld.local.u32 	%r4151, [%rd4+12];
	ld.local.u32 	%r4152, [%rd4+8];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4150;
	ld.local.u32 	%r4155, [%rd4+8];
	ld.local.u32 	%r4156, [%rd4+4];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4154;
	ld.local.u32 	%r4159, [%rd4+4];
	ld.local.u32 	%r4160, [%rd4];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4158;
	ld.local.u32 	%r4163, [%rd4];
	ld.local.u32 	%r4164, [%rd3+12];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4162;
	ld.local.u32 	%r4167, [%rd3+12];
	ld.local.u32 	%r4168, [%rd3+8];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4166;
	ld.local.u32 	%r4171, [%rd3+8];
	ld.local.u32 	%r4172, [%rd3+4];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4170;
	ld.local.u32 	%r4175, [%rd3+4];
	ld.local.u32 	%r4176, [%rd3];
	// inline asm
	prmt.b32 %r4174, %r4175, %r4176, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4174;
	ld.local.u32 	%r4179, [%rd3];
	ld.local.u32 	%r4180, [%rd2+12];
	// inline asm
	prmt.b32 %r4178, %r4179, %r4180, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4178;
	ld.local.u32 	%r4183, [%rd2+12];
	ld.local.u32 	%r4184, [%rd2+8];
	// inline asm
	prmt.b32 %r4182, %r4183, %r4184, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4182;
	ld.local.u32 	%r4187, [%rd2+8];
	ld.local.u32 	%r4188, [%rd2+4];
	// inline asm
	prmt.b32 %r4186, %r4187, %r4188, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4186;
	ld.local.u32 	%r4191, [%rd2+4];
	ld.local.u32 	%r4192, [%rd2];
	// inline asm
	prmt.b32 %r4190, %r4191, %r4192, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4190;
	ld.local.u32 	%r4195, [%rd2];
	ld.local.u32 	%r4196, [%rd1+12];
	// inline asm
	prmt.b32 %r4194, %r4195, %r4196, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4194;
	ld.local.u32 	%r4199, [%rd1+12];
	ld.local.u32 	%r4200, [%rd1+8];
	// inline asm
	prmt.b32 %r4198, %r4199, %r4200, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4198;
	ld.local.u32 	%r4203, [%rd1+8];
	ld.local.u32 	%r4204, [%rd1+4];
	// inline asm
	prmt.b32 %r4202, %r4203, %r4204, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4202;
	ld.local.u32 	%r4207, [%rd1+4];
	ld.local.u32 	%r4208, [%rd1];
	// inline asm
	prmt.b32 %r4206, %r4207, %r4208, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4206;
	ld.local.u32 	%r4211, [%rd1];
	// inline asm
	prmt.b32 %r4210, %r4211, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4210;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd210, 0;
	st.local.u32 	[%rd1+4], %rd210;
	st.local.u32 	[%rd1], %rd210;

BB0_81:
	mov.u32 	%r9152, %r9143;
	mov.u32 	%r9153, %r9143;
	mov.u32 	%r9154, %r9143;
	mov.u32 	%r9155, %r9143;

BB0_82:
	mov.u32 	%r9156, %r9143;
	mov.u32 	%r9157, %r9143;
	mov.u32 	%r9158, %r9143;
	mov.u32 	%r9159, %r9143;

BB0_83:
	mov.u32 	%r9160, %r9143;
	mov.u32 	%r9161, %r9143;
	mov.u32 	%r9162, %r9143;
	mov.u32 	%r9163, %r9143;

BB0_84:
	mov.u32 	%r9164, %r9143;
	mov.u32 	%r9165, %r9143;
	mov.u32 	%r9166, %r9143;
	mov.u32 	%r9167, %r9143;

BB0_85:
	mov.u32 	%r9168, %r9143;
	mov.u32 	%r9169, %r9143;
	mov.u32 	%r9170, %r9143;
	mov.u32 	%r9171, %r9143;

BB0_86:
	mov.u32 	%r9172, %r9143;
	mov.u32 	%r9173, %r9143;
	mov.u32 	%r9174, %r9143;
	mov.u32 	%r9175, %r9143;
	bra.uni 	BB0_91;

BB0_140:
	setp.eq.s32	%p68, %r3, 23;
	@%p68 bra 	BB0_141;
	bra.uni 	BB0_173;

BB0_141:
	ld.local.u32 	%r6359, [%rd3];
	ld.local.u32 	%r6360, [%rd2+12];
	// inline asm
	prmt.b32 %r6358, %r6359, %r6360, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6358;
	ld.local.u32 	%r6363, [%rd2+12];
	ld.local.u32 	%r6364, [%rd2+8];
	// inline asm
	prmt.b32 %r6362, %r6363, %r6364, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6362;
	ld.local.u32 	%r6367, [%rd2+8];
	ld.local.u32 	%r6368, [%rd2+4];
	// inline asm
	prmt.b32 %r6366, %r6367, %r6368, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6366;
	ld.local.u32 	%r6371, [%rd2+4];
	ld.local.u32 	%r6372, [%rd2];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6370;
	ld.local.u32 	%r6375, [%rd2];
	ld.local.u32 	%r6376, [%rd1+12];
	// inline asm
	prmt.b32 %r6374, %r6375, %r6376, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6374;
	ld.local.u32 	%r6379, [%rd1+12];
	ld.local.u32 	%r6380, [%rd1+8];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6378;
	ld.local.u32 	%r6383, [%rd1+8];
	ld.local.u32 	%r6384, [%rd1+4];
	// inline asm
	prmt.b32 %r6382, %r6383, %r6384, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6382;
	ld.local.u32 	%r6387, [%rd1+4];
	ld.local.u32 	%r6388, [%rd1];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6386;
	ld.local.u32 	%r6391, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6390, %r6391, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6390;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1242, 0;
	st.local.u32 	[%rd1+4], %rd1242;
	st.local.u32 	[%rd1], %rd1242;
	bra.uni 	BB0_174;

BB0_50:
	setp.eq.s32	%p20, %r3, 23;
	@%p20 bra 	BB0_51;
	bra.uni 	BB0_89;

BB0_51:
	ld.local.u32 	%r1708, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9164, %r9143, %r1708, %r4;
	// inline asm
	ld.local.u32 	%r1711, [%rd8+12];
	ld.local.u32 	%r1712, [%rd8+8];
	// inline asm
	prmt.b32 %r9165, %r1711, %r1712, %r4;
	// inline asm
	ld.local.u32 	%r1715, [%rd8+8];
	ld.local.u32 	%r1716, [%rd8+4];
	// inline asm
	prmt.b32 %r9166, %r1715, %r1716, %r4;
	// inline asm
	ld.local.u32 	%r1719, [%rd8+4];
	ld.local.u32 	%r1720, [%rd8];
	// inline asm
	prmt.b32 %r9167, %r1719, %r1720, %r4;
	// inline asm
	ld.local.u32 	%r1723, [%rd8];
	ld.local.u32 	%r1724, [%rd7+12];
	// inline asm
	prmt.b32 %r9160, %r1723, %r1724, %r4;
	// inline asm
	ld.local.u32 	%r1727, [%rd7+12];
	ld.local.u32 	%r1728, [%rd7+8];
	// inline asm
	prmt.b32 %r9161, %r1727, %r1728, %r4;
	// inline asm
	ld.local.u32 	%r1731, [%rd7+8];
	ld.local.u32 	%r1732, [%rd7+4];
	// inline asm
	prmt.b32 %r9162, %r1731, %r1732, %r4;
	// inline asm
	ld.local.u32 	%r1735, [%rd7+4];
	ld.local.u32 	%r1736, [%rd7];
	// inline asm
	prmt.b32 %r9163, %r1735, %r1736, %r4;
	// inline asm
	ld.local.u32 	%r1739, [%rd7];
	ld.local.u32 	%r1740, [%rd6+12];
	// inline asm
	prmt.b32 %r9156, %r1739, %r1740, %r4;
	// inline asm
	ld.local.u32 	%r1743, [%rd6+12];
	ld.local.u32 	%r1744, [%rd6+8];
	// inline asm
	prmt.b32 %r9157, %r1743, %r1744, %r4;
	// inline asm
	ld.local.u32 	%r1747, [%rd6+8];
	ld.local.u32 	%r1748, [%rd6+4];
	// inline asm
	prmt.b32 %r9158, %r1747, %r1748, %r4;
	// inline asm
	ld.local.u32 	%r1751, [%rd6+4];
	ld.local.u32 	%r1752, [%rd6];
	// inline asm
	prmt.b32 %r9159, %r1751, %r1752, %r4;
	// inline asm
	ld.local.u32 	%r1755, [%rd6];
	ld.local.u32 	%r1756, [%rd5+12];
	// inline asm
	prmt.b32 %r9152, %r1755, %r1756, %r4;
	// inline asm
	ld.local.u32 	%r1759, [%rd5+12];
	ld.local.u32 	%r1760, [%rd5+8];
	// inline asm
	prmt.b32 %r9153, %r1759, %r1760, %r4;
	// inline asm
	ld.local.u32 	%r1763, [%rd5+8];
	ld.local.u32 	%r1764, [%rd5+4];
	// inline asm
	prmt.b32 %r9154, %r1763, %r1764, %r4;
	// inline asm
	ld.local.u32 	%r1767, [%rd5+4];
	ld.local.u32 	%r1768, [%rd5];
	// inline asm
	prmt.b32 %r9155, %r1767, %r1768, %r4;
	// inline asm
	ld.local.u32 	%r1771, [%rd5];
	ld.local.u32 	%r1772, [%rd4+12];
	// inline asm
	prmt.b32 %r9148, %r1771, %r1772, %r4;
	// inline asm
	ld.local.u32 	%r1775, [%rd4+12];
	ld.local.u32 	%r1776, [%rd4+8];
	// inline asm
	prmt.b32 %r9149, %r1775, %r1776, %r4;
	// inline asm
	ld.local.u32 	%r1779, [%rd4+8];
	ld.local.u32 	%r1780, [%rd4+4];
	// inline asm
	prmt.b32 %r9150, %r1779, %r1780, %r4;
	// inline asm
	ld.local.u32 	%r1783, [%rd4+4];
	ld.local.u32 	%r1784, [%rd4];
	// inline asm
	prmt.b32 %r9151, %r1783, %r1784, %r4;
	// inline asm
	ld.local.u32 	%r1787, [%rd4];
	ld.local.u32 	%r1788, [%rd3+12];
	// inline asm
	prmt.b32 %r9144, %r1787, %r1788, %r4;
	// inline asm
	ld.local.u32 	%r1791, [%rd3+12];
	ld.local.u32 	%r1792, [%rd3+8];
	// inline asm
	prmt.b32 %r9145, %r1791, %r1792, %r4;
	// inline asm
	ld.local.u32 	%r1795, [%rd3+8];
	ld.local.u32 	%r1796, [%rd3+4];
	// inline asm
	prmt.b32 %r9146, %r1795, %r1796, %r4;
	// inline asm
	ld.local.u32 	%r1799, [%rd3+4];
	ld.local.u32 	%r1800, [%rd3];
	// inline asm
	prmt.b32 %r9147, %r1799, %r1800, %r4;
	// inline asm
	ld.local.u32 	%r1803, [%rd3];
	ld.local.u32 	%r1804, [%rd2+12];
	// inline asm
	prmt.b32 %r1802, %r1803, %r1804, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1802;
	ld.local.u32 	%r1807, [%rd2+12];
	ld.local.u32 	%r1808, [%rd2+8];
	// inline asm
	prmt.b32 %r1806, %r1807, %r1808, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1806;
	ld.local.u32 	%r1811, [%rd2+8];
	ld.local.u32 	%r1812, [%rd2+4];
	// inline asm
	prmt.b32 %r1810, %r1811, %r1812, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1810;
	ld.local.u32 	%r1815, [%rd2+4];
	ld.local.u32 	%r1816, [%rd2];
	// inline asm
	prmt.b32 %r1814, %r1815, %r1816, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1814;
	ld.local.u32 	%r1819, [%rd2];
	ld.local.u32 	%r1820, [%rd1+12];
	// inline asm
	prmt.b32 %r1818, %r1819, %r1820, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1818;
	ld.local.u32 	%r1823, [%rd1+12];
	ld.local.u32 	%r1824, [%rd1+8];
	// inline asm
	prmt.b32 %r1822, %r1823, %r1824, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1822;
	ld.local.u32 	%r1827, [%rd1+8];
	ld.local.u32 	%r1828, [%rd1+4];
	// inline asm
	prmt.b32 %r1826, %r1827, %r1828, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1826;
	ld.local.u32 	%r1831, [%rd1+4];
	ld.local.u32 	%r1832, [%rd1];
	// inline asm
	prmt.b32 %r1830, %r1831, %r1832, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1830;
	ld.local.u32 	%r1835, [%rd1];
	// inline asm
	prmt.b32 %r1834, %r1835, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1834;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd194, 0;
	st.local.u32 	[%rd1+4], %rd194;
	st.local.u32 	[%rd1], %rd194;
	bra.uni 	BB0_85;

BB0_124:
	setp.eq.s32	%p80, %r3, 15;
	@%p80 bra 	BB0_125;
	bra.uni 	BB0_173;

BB0_125:
	ld.local.u32 	%r6767, [%rd5];
	ld.local.u32 	%r6768, [%rd4+12];
	// inline asm
	prmt.b32 %r6766, %r6767, %r6768, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6766;
	ld.local.u32 	%r6771, [%rd4+12];
	ld.local.u32 	%r6772, [%rd4+8];
	// inline asm
	prmt.b32 %r6770, %r6771, %r6772, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6770;
	ld.local.u32 	%r6775, [%rd4+8];
	ld.local.u32 	%r6776, [%rd4+4];
	// inline asm
	prmt.b32 %r6774, %r6775, %r6776, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6774;
	ld.local.u32 	%r6779, [%rd4+4];
	ld.local.u32 	%r6780, [%rd4];
	// inline asm
	prmt.b32 %r6778, %r6779, %r6780, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6778;
	ld.local.u32 	%r6783, [%rd4];
	ld.local.u32 	%r6784, [%rd3+12];
	// inline asm
	prmt.b32 %r6782, %r6783, %r6784, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6782;
	ld.local.u32 	%r6787, [%rd3+12];
	ld.local.u32 	%r6788, [%rd3+8];
	// inline asm
	prmt.b32 %r6786, %r6787, %r6788, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6786;
	ld.local.u32 	%r6791, [%rd3+8];
	ld.local.u32 	%r6792, [%rd3+4];
	// inline asm
	prmt.b32 %r6790, %r6791, %r6792, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6790;
	ld.local.u32 	%r6795, [%rd3+4];
	ld.local.u32 	%r6796, [%rd3];
	// inline asm
	prmt.b32 %r6794, %r6795, %r6796, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6794;
	ld.local.u32 	%r6799, [%rd3];
	ld.local.u32 	%r6800, [%rd2+12];
	// inline asm
	prmt.b32 %r6798, %r6799, %r6800, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6798;
	ld.local.u32 	%r6803, [%rd2+12];
	ld.local.u32 	%r6804, [%rd2+8];
	// inline asm
	prmt.b32 %r6802, %r6803, %r6804, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6802;
	ld.local.u32 	%r6807, [%rd2+8];
	ld.local.u32 	%r6808, [%rd2+4];
	// inline asm
	prmt.b32 %r6806, %r6807, %r6808, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6806;
	ld.local.u32 	%r6811, [%rd2+4];
	ld.local.u32 	%r6812, [%rd2];
	// inline asm
	prmt.b32 %r6810, %r6811, %r6812, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6810;
	ld.local.u32 	%r6815, [%rd2];
	ld.local.u32 	%r6816, [%rd1+12];
	// inline asm
	prmt.b32 %r6814, %r6815, %r6816, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6814;
	ld.local.u32 	%r6819, [%rd1+12];
	ld.local.u32 	%r6820, [%rd1+8];
	// inline asm
	prmt.b32 %r6818, %r6819, %r6820, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6818;
	ld.local.u32 	%r6823, [%rd1+8];
	ld.local.u32 	%r6824, [%rd1+4];
	// inline asm
	prmt.b32 %r6822, %r6823, %r6824, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6822;
	ld.local.u32 	%r6827, [%rd1+4];
	ld.local.u32 	%r6828, [%rd1];
	// inline asm
	prmt.b32 %r6826, %r6827, %r6828, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6826;
	ld.local.u32 	%r6831, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6830, %r6831, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6830;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1250, 0;
	st.local.u32 	[%rd1+4], %rd1250;
	st.local.u32 	[%rd1], %rd1250;
	bra.uni 	BB0_174;

BB0_34:
	setp.eq.s32	%p32, %r3, 15;
	@%p32 bra 	BB0_35;
	bra.uni 	BB0_89;

BB0_35:
	ld.local.u32 	%r2864, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9156, %r9143, %r2864, %r4;
	// inline asm
	ld.local.u32 	%r2867, [%rd8+12];
	ld.local.u32 	%r2868, [%rd8+8];
	// inline asm
	prmt.b32 %r9157, %r2867, %r2868, %r4;
	// inline asm
	ld.local.u32 	%r2871, [%rd8+8];
	ld.local.u32 	%r2872, [%rd8+4];
	// inline asm
	prmt.b32 %r9158, %r2871, %r2872, %r4;
	// inline asm
	ld.local.u32 	%r2875, [%rd8+4];
	ld.local.u32 	%r2876, [%rd8];
	// inline asm
	prmt.b32 %r9159, %r2875, %r2876, %r4;
	// inline asm
	ld.local.u32 	%r2879, [%rd8];
	ld.local.u32 	%r2880, [%rd7+12];
	// inline asm
	prmt.b32 %r9152, %r2879, %r2880, %r4;
	// inline asm
	ld.local.u32 	%r2883, [%rd7+12];
	ld.local.u32 	%r2884, [%rd7+8];
	// inline asm
	prmt.b32 %r9153, %r2883, %r2884, %r4;
	// inline asm
	ld.local.u32 	%r2887, [%rd7+8];
	ld.local.u32 	%r2888, [%rd7+4];
	// inline asm
	prmt.b32 %r9154, %r2887, %r2888, %r4;
	// inline asm
	ld.local.u32 	%r2891, [%rd7+4];
	ld.local.u32 	%r2892, [%rd7];
	// inline asm
	prmt.b32 %r9155, %r2891, %r2892, %r4;
	// inline asm
	ld.local.u32 	%r2895, [%rd7];
	ld.local.u32 	%r2896, [%rd6+12];
	// inline asm
	prmt.b32 %r9148, %r2895, %r2896, %r4;
	// inline asm
	ld.local.u32 	%r2899, [%rd6+12];
	ld.local.u32 	%r2900, [%rd6+8];
	// inline asm
	prmt.b32 %r9149, %r2899, %r2900, %r4;
	// inline asm
	ld.local.u32 	%r2903, [%rd6+8];
	ld.local.u32 	%r2904, [%rd6+4];
	// inline asm
	prmt.b32 %r9150, %r2903, %r2904, %r4;
	// inline asm
	ld.local.u32 	%r2907, [%rd6+4];
	ld.local.u32 	%r2908, [%rd6];
	// inline asm
	prmt.b32 %r9151, %r2907, %r2908, %r4;
	// inline asm
	ld.local.u32 	%r2911, [%rd6];
	ld.local.u32 	%r2912, [%rd5+12];
	// inline asm
	prmt.b32 %r9144, %r2911, %r2912, %r4;
	// inline asm
	ld.local.u32 	%r2915, [%rd5+12];
	ld.local.u32 	%r2916, [%rd5+8];
	// inline asm
	prmt.b32 %r9145, %r2915, %r2916, %r4;
	// inline asm
	ld.local.u32 	%r2919, [%rd5+8];
	ld.local.u32 	%r2920, [%rd5+4];
	// inline asm
	prmt.b32 %r9146, %r2919, %r2920, %r4;
	// inline asm
	ld.local.u32 	%r2923, [%rd5+4];
	ld.local.u32 	%r2924, [%rd5];
	// inline asm
	prmt.b32 %r9147, %r2923, %r2924, %r4;
	// inline asm
	ld.local.u32 	%r2927, [%rd5];
	ld.local.u32 	%r2928, [%rd4+12];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2926;
	ld.local.u32 	%r2931, [%rd4+12];
	ld.local.u32 	%r2932, [%rd4+8];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2930;
	ld.local.u32 	%r2935, [%rd4+8];
	ld.local.u32 	%r2936, [%rd4+4];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2934;
	ld.local.u32 	%r2939, [%rd4+4];
	ld.local.u32 	%r2940, [%rd4];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2938;
	ld.local.u32 	%r2943, [%rd4];
	ld.local.u32 	%r2944, [%rd3+12];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2942;
	ld.local.u32 	%r2947, [%rd3+12];
	ld.local.u32 	%r2948, [%rd3+8];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2946;
	ld.local.u32 	%r2951, [%rd3+8];
	ld.local.u32 	%r2952, [%rd3+4];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2950;
	ld.local.u32 	%r2955, [%rd3+4];
	ld.local.u32 	%r2956, [%rd3];
	// inline asm
	prmt.b32 %r2954, %r2955, %r2956, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2954;
	ld.local.u32 	%r2959, [%rd3];
	ld.local.u32 	%r2960, [%rd2+12];
	// inline asm
	prmt.b32 %r2958, %r2959, %r2960, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2958;
	ld.local.u32 	%r2963, [%rd2+12];
	ld.local.u32 	%r2964, [%rd2+8];
	// inline asm
	prmt.b32 %r2962, %r2963, %r2964, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2962;
	ld.local.u32 	%r2967, [%rd2+8];
	ld.local.u32 	%r2968, [%rd2+4];
	// inline asm
	prmt.b32 %r2966, %r2967, %r2968, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2966;
	ld.local.u32 	%r2971, [%rd2+4];
	ld.local.u32 	%r2972, [%rd2];
	// inline asm
	prmt.b32 %r2970, %r2971, %r2972, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2970;
	ld.local.u32 	%r2975, [%rd2];
	ld.local.u32 	%r2976, [%rd1+12];
	// inline asm
	prmt.b32 %r2974, %r2975, %r2976, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2974;
	ld.local.u32 	%r2979, [%rd1+12];
	ld.local.u32 	%r2980, [%rd1+8];
	// inline asm
	prmt.b32 %r2978, %r2979, %r2980, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2978;
	ld.local.u32 	%r2983, [%rd1+8];
	ld.local.u32 	%r2984, [%rd1+4];
	// inline asm
	prmt.b32 %r2982, %r2983, %r2984, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2982;
	ld.local.u32 	%r2987, [%rd1+4];
	ld.local.u32 	%r2988, [%rd1];
	// inline asm
	prmt.b32 %r2986, %r2987, %r2988, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2986;
	ld.local.u32 	%r2991, [%rd1];
	// inline asm
	prmt.b32 %r2990, %r2991, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r2990;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd202, 0;
	st.local.u32 	[%rd1+4], %rd202;
	st.local.u32 	[%rd1], %rd202;
	bra.uni 	BB0_83;

BB0_155:
	setp.ne.s32	%p57, %r3, 31;
	@%p57 bra 	BB0_173;

	ld.local.u32 	%r6207, [%rd1];
	mov.u32 	%r9177, 0;
	// inline asm
	prmt.b32 %r6206, %r6207, %r9177, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6206;
	st.local.u32 	[%rd8+8], %r9177;
	st.local.u32 	[%rd8+4], %r9177;
	st.local.u32 	[%rd8], %r9177;
	st.local.u32 	[%rd7+12], %r9177;
	st.local.u32 	[%rd7+8], %r9177;
	st.local.u32 	[%rd7+4], %r9177;
	st.local.u32 	[%rd7], %r9177;
	st.local.u32 	[%rd6+12], %r9177;
	st.local.u32 	[%rd6+8], %r9177;
	st.local.u32 	[%rd6+4], %r9177;
	st.local.u32 	[%rd6], %r9177;
	st.local.u32 	[%rd5+12], %r9177;
	st.local.u32 	[%rd5+8], %r9177;
	st.local.u32 	[%rd5+4], %r9177;
	st.local.u32 	[%rd5], %r9177;
	st.local.u32 	[%rd4+12], %r9177;
	st.local.u32 	[%rd4+8], %r9177;
	st.local.u32 	[%rd4+4], %r9177;
	st.local.u32 	[%rd4], %r9177;
	st.local.u32 	[%rd3+12], %r9177;
	st.local.u32 	[%rd3+8], %r9177;
	st.local.u32 	[%rd3+4], %r9177;
	st.local.u32 	[%rd3], %r9177;
	st.local.u32 	[%rd2+12], %r9177;
	st.local.u32 	[%rd2+8], %r9177;
	st.local.u32 	[%rd2+4], %r9177;
	st.local.u32 	[%rd2], %r9177;
	st.local.u32 	[%rd1+12], %r9177;
	st.local.u32 	[%rd1+8], %r9177;
	mov.u64 	%rd1234, 0;
	st.local.u32 	[%rd1+4], %rd1234;
	st.local.u32 	[%rd1], %rd1234;
	bra.uni 	BB0_174;

BB0_173:
	ld.local.u32 	%r9177, [%rd1];

BB0_174:
	ld.local.u32 	%r8349, [%rd9+-128];
	or.b32  	%r8350, %r8349, %r9177;
	st.local.u32 	[%rd9+-128], %r8350;
	ld.local.u32 	%r8351, [%rd9+-124];
	ld.local.u32 	%r8352, [%rd1+4];
	or.b32  	%r8353, %r8351, %r8352;
	st.local.u32 	[%rd9+-124], %r8353;
	ld.local.u32 	%r8354, [%rd9+-120];
	ld.local.u32 	%r8355, [%rd1+8];
	or.b32  	%r8356, %r8354, %r8355;
	st.local.u32 	[%rd9+-120], %r8356;
	ld.local.u32 	%r8357, [%rd9+-116];
	ld.local.u32 	%r8358, [%rd1+12];
	or.b32  	%r8359, %r8357, %r8358;
	st.local.u32 	[%rd9+-116], %r8359;
	ld.local.u32 	%r8360, [%rd9+-112];
	ld.local.u32 	%r8361, [%rd2];
	or.b32  	%r8362, %r8360, %r8361;
	st.local.u32 	[%rd9+-112], %r8362;
	ld.local.u32 	%r8363, [%rd9+-108];
	ld.local.u32 	%r8364, [%rd2+4];
	or.b32  	%r8365, %r8363, %r8364;
	st.local.u32 	[%rd9+-108], %r8365;
	ld.local.u32 	%r8366, [%rd9+-104];
	ld.local.u32 	%r8367, [%rd2+8];
	or.b32  	%r8368, %r8366, %r8367;
	st.local.u32 	[%rd9+-104], %r8368;
	ld.local.u32 	%r8369, [%rd9+-100];
	ld.local.u32 	%r8370, [%rd2+12];
	or.b32  	%r8371, %r8369, %r8370;
	st.local.u32 	[%rd9+-100], %r8371;
	ld.local.u32 	%r8372, [%rd9+-96];
	ld.local.u32 	%r8373, [%rd3];
	or.b32  	%r8374, %r8372, %r8373;
	st.local.u32 	[%rd9+-96], %r8374;
	ld.local.u32 	%r8375, [%rd9+-92];
	ld.local.u32 	%r8376, [%rd3+4];
	or.b32  	%r8377, %r8375, %r8376;
	st.local.u32 	[%rd9+-92], %r8377;
	ld.local.u32 	%r8378, [%rd9+-88];
	ld.local.u32 	%r8379, [%rd3+8];
	or.b32  	%r8380, %r8378, %r8379;
	st.local.u32 	[%rd9+-88], %r8380;
	ld.local.u32 	%r8381, [%rd9+-84];
	ld.local.u32 	%r8382, [%rd3+12];
	or.b32  	%r8383, %r8381, %r8382;
	st.local.u32 	[%rd9+-84], %r8383;
	ld.local.u32 	%r8384, [%rd9+-80];
	ld.local.u32 	%r8385, [%rd4];
	or.b32  	%r8386, %r8384, %r8385;
	st.local.u32 	[%rd9+-80], %r8386;
	ld.local.u32 	%r8387, [%rd9+-76];
	ld.local.u32 	%r8388, [%rd4+4];
	or.b32  	%r8389, %r8387, %r8388;
	st.local.u32 	[%rd9+-76], %r8389;
	ld.local.u32 	%r8390, [%rd9+-72];
	ld.local.u32 	%r8391, [%rd4+8];
	or.b32  	%r8392, %r8390, %r8391;
	st.local.u32 	[%rd9+-72], %r8392;
	ld.local.u32 	%r8393, [%rd9+-68];
	ld.local.u32 	%r8394, [%rd4+12];
	or.b32  	%r8395, %r8393, %r8394;
	st.local.u32 	[%rd9+-68], %r8395;
	ld.local.u32 	%r8396, [%rd9+-64];
	ld.local.u32 	%r8397, [%rd5];
	or.b32  	%r8398, %r8396, %r8397;
	st.local.u32 	[%rd9+-64], %r8398;
	ld.local.u32 	%r8399, [%rd9+-60];
	ld.local.u32 	%r8400, [%rd5+4];
	or.b32  	%r8401, %r8399, %r8400;
	st.local.u32 	[%rd9+-60], %r8401;
	ld.local.u32 	%r8402, [%rd9+-56];
	ld.local.u32 	%r8403, [%rd5+8];
	or.b32  	%r8404, %r8402, %r8403;
	st.local.u32 	[%rd9+-56], %r8404;
	ld.local.u32 	%r8405, [%rd9+-52];
	ld.local.u32 	%r8406, [%rd5+12];
	or.b32  	%r8407, %r8405, %r8406;
	st.local.u32 	[%rd9+-52], %r8407;
	ld.local.u32 	%r8408, [%rd9+-48];
	ld.local.u32 	%r8409, [%rd6];
	or.b32  	%r8410, %r8408, %r8409;
	st.local.u32 	[%rd9+-48], %r8410;
	ld.local.u32 	%r8411, [%rd9+-44];
	ld.local.u32 	%r8412, [%rd6+4];
	or.b32  	%r8413, %r8411, %r8412;
	st.local.u32 	[%rd9+-44], %r8413;
	ld.local.u32 	%r8414, [%rd9+-40];
	ld.local.u32 	%r8415, [%rd6+8];
	or.b32  	%r8416, %r8414, %r8415;
	st.local.u32 	[%rd9+-40], %r8416;
	ld.local.u32 	%r8417, [%rd9+-36];
	ld.local.u32 	%r8418, [%rd6+12];
	or.b32  	%r8419, %r8417, %r8418;
	st.local.u32 	[%rd9+-36], %r8419;
	ld.local.u32 	%r8420, [%rd9+-32];
	ld.local.u32 	%r8421, [%rd7];
	or.b32  	%r8422, %r8420, %r8421;
	st.local.u32 	[%rd9+-32], %r8422;
	ld.local.u32 	%r8423, [%rd9+-28];
	ld.local.u32 	%r8424, [%rd7+4];
	or.b32  	%r8425, %r8423, %r8424;
	st.local.u32 	[%rd9+-28], %r8425;
	ld.local.u32 	%r8426, [%rd9+-24];
	ld.local.u32 	%r8427, [%rd7+8];
	or.b32  	%r8428, %r8426, %r8427;
	st.local.u32 	[%rd9+-24], %r8428;
	ld.local.u32 	%r8429, [%rd9+-20];
	ld.local.u32 	%r8430, [%rd7+12];
	or.b32  	%r8431, %r8429, %r8430;
	st.local.u32 	[%rd9+-20], %r8431;
	ld.local.u32 	%r8432, [%rd9+-16];
	ld.local.u32 	%r8433, [%rd8];
	or.b32  	%r8434, %r8432, %r8433;
	st.local.u32 	[%rd9+-16], %r8434;
	ld.local.u32 	%r8435, [%rd9+-12];
	ld.local.u32 	%r8436, [%rd8+4];
	or.b32  	%r8437, %r8435, %r8436;
	st.local.u32 	[%rd9+-12], %r8437;
	ld.local.u32 	%r8438, [%rd9+-8];
	ld.local.u32 	%r8439, [%rd8+8];
	or.b32  	%r8440, %r8438, %r8439;
	st.local.u32 	[%rd9+-8], %r8440;
	ld.local.u32 	%r8441, [%rd9+-4];
	ld.local.u32 	%r8442, [%rd8+12];
	or.b32  	%r8443, %r8441, %r8442;
	st.local.u32 	[%rd9+-4], %r8443;
	bra.uni 	BB0_179;

BB0_65:
	setp.ne.s32	%p9, %r3, 31;
	@%p9 bra 	BB0_89;

	ld.local.u32 	%r616, [%rd8+12];
	mov.u32 	%r9143, 0;
	// inline asm
	prmt.b32 %r9172, %r9143, %r616, %r4;
	// inline asm
	ld.local.u32 	%r619, [%rd8+12];
	ld.local.u32 	%r620, [%rd8+8];
	// inline asm
	prmt.b32 %r9173, %r619, %r620, %r4;
	// inline asm
	ld.local.u32 	%r623, [%rd8+8];
	ld.local.u32 	%r624, [%rd8+4];
	// inline asm
	prmt.b32 %r9174, %r623, %r624, %r4;
	// inline asm
	ld.local.u32 	%r627, [%rd8+4];
	ld.local.u32 	%r628, [%rd8];
	// inline asm
	prmt.b32 %r9175, %r627, %r628, %r4;
	// inline asm
	ld.local.u32 	%r631, [%rd8];
	ld.local.u32 	%r632, [%rd7+12];
	// inline asm
	prmt.b32 %r9168, %r631, %r632, %r4;
	// inline asm
	ld.local.u32 	%r635, [%rd7+12];
	ld.local.u32 	%r636, [%rd7+8];
	// inline asm
	prmt.b32 %r9169, %r635, %r636, %r4;
	// inline asm
	ld.local.u32 	%r639, [%rd7+8];
	ld.local.u32 	%r640, [%rd7+4];
	// inline asm
	prmt.b32 %r9170, %r639, %r640, %r4;
	// inline asm
	ld.local.u32 	%r643, [%rd7+4];
	ld.local.u32 	%r644, [%rd7];
	// inline asm
	prmt.b32 %r9171, %r643, %r644, %r4;
	// inline asm
	ld.local.u32 	%r647, [%rd7];
	ld.local.u32 	%r648, [%rd6+12];
	// inline asm
	prmt.b32 %r9164, %r647, %r648, %r4;
	// inline asm
	ld.local.u32 	%r651, [%rd6+12];
	ld.local.u32 	%r652, [%rd6+8];
	// inline asm
	prmt.b32 %r9165, %r651, %r652, %r4;
	// inline asm
	ld.local.u32 	%r655, [%rd6+8];
	ld.local.u32 	%r656, [%rd6+4];
	// inline asm
	prmt.b32 %r9166, %r655, %r656, %r4;
	// inline asm
	ld.local.u32 	%r659, [%rd6+4];
	ld.local.u32 	%r660, [%rd6];
	// inline asm
	prmt.b32 %r9167, %r659, %r660, %r4;
	// inline asm
	ld.local.u32 	%r663, [%rd6];
	ld.local.u32 	%r664, [%rd5+12];
	// inline asm
	prmt.b32 %r9160, %r663, %r664, %r4;
	// inline asm
	ld.local.u32 	%r667, [%rd5+12];
	ld.local.u32 	%r668, [%rd5+8];
	// inline asm
	prmt.b32 %r9161, %r667, %r668, %r4;
	// inline asm
	ld.local.u32 	%r671, [%rd5+8];
	ld.local.u32 	%r672, [%rd5+4];
	// inline asm
	prmt.b32 %r9162, %r671, %r672, %r4;
	// inline asm
	ld.local.u32 	%r675, [%rd5+4];
	ld.local.u32 	%r676, [%rd5];
	// inline asm
	prmt.b32 %r9163, %r675, %r676, %r4;
	// inline asm
	ld.local.u32 	%r679, [%rd5];
	ld.local.u32 	%r680, [%rd4+12];
	// inline asm
	prmt.b32 %r9156, %r679, %r680, %r4;
	// inline asm
	ld.local.u32 	%r683, [%rd4+12];
	ld.local.u32 	%r684, [%rd4+8];
	// inline asm
	prmt.b32 %r9157, %r683, %r684, %r4;
	// inline asm
	ld.local.u32 	%r687, [%rd4+8];
	ld.local.u32 	%r688, [%rd4+4];
	// inline asm
	prmt.b32 %r9158, %r687, %r688, %r4;
	// inline asm
	ld.local.u32 	%r691, [%rd4+4];
	ld.local.u32 	%r692, [%rd4];
	// inline asm
	prmt.b32 %r9159, %r691, %r692, %r4;
	// inline asm
	ld.local.u32 	%r695, [%rd4];
	ld.local.u32 	%r696, [%rd3+12];
	// inline asm
	prmt.b32 %r9152, %r695, %r696, %r4;
	// inline asm
	ld.local.u32 	%r699, [%rd3+12];
	ld.local.u32 	%r700, [%rd3+8];
	// inline asm
	prmt.b32 %r9153, %r699, %r700, %r4;
	// inline asm
	ld.local.u32 	%r703, [%rd3+8];
	ld.local.u32 	%r704, [%rd3+4];
	// inline asm
	prmt.b32 %r9154, %r703, %r704, %r4;
	// inline asm
	ld.local.u32 	%r707, [%rd3+4];
	ld.local.u32 	%r708, [%rd3];
	// inline asm
	prmt.b32 %r9155, %r707, %r708, %r4;
	// inline asm
	ld.local.u32 	%r711, [%rd3];
	ld.local.u32 	%r712, [%rd2+12];
	// inline asm
	prmt.b32 %r9148, %r711, %r712, %r4;
	// inline asm
	ld.local.u32 	%r715, [%rd2+12];
	ld.local.u32 	%r716, [%rd2+8];
	// inline asm
	prmt.b32 %r9149, %r715, %r716, %r4;
	// inline asm
	ld.local.u32 	%r719, [%rd2+8];
	ld.local.u32 	%r720, [%rd2+4];
	// inline asm
	prmt.b32 %r9150, %r719, %r720, %r4;
	// inline asm
	ld.local.u32 	%r723, [%rd2+4];
	ld.local.u32 	%r724, [%rd2];
	// inline asm
	prmt.b32 %r9151, %r723, %r724, %r4;
	// inline asm
	ld.local.u32 	%r727, [%rd2];
	ld.local.u32 	%r728, [%rd1+12];
	// inline asm
	prmt.b32 %r9144, %r727, %r728, %r4;
	// inline asm
	ld.local.u32 	%r731, [%rd1+12];
	ld.local.u32 	%r732, [%rd1+8];
	// inline asm
	prmt.b32 %r9145, %r731, %r732, %r4;
	// inline asm
	ld.local.u32 	%r735, [%rd1+8];
	ld.local.u32 	%r736, [%rd1+4];
	// inline asm
	prmt.b32 %r9146, %r735, %r736, %r4;
	// inline asm
	ld.local.u32 	%r739, [%rd1+4];
	ld.local.u32 	%r740, [%rd1];
	// inline asm
	prmt.b32 %r9147, %r739, %r740, %r4;
	// inline asm
	ld.local.u32 	%r743, [%rd1];
	// inline asm
	prmt.b32 %r742, %r743, %r9143, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r742;
	st.local.u32 	[%rd8+8], %r9143;
	st.local.u32 	[%rd8+4], %r9143;
	st.local.u32 	[%rd8], %r9143;
	st.local.u32 	[%rd7+12], %r9143;
	st.local.u32 	[%rd7+8], %r9143;
	st.local.u32 	[%rd7+4], %r9143;
	st.local.u32 	[%rd7], %r9143;
	st.local.u32 	[%rd6+12], %r9143;
	st.local.u32 	[%rd6+8], %r9143;
	st.local.u32 	[%rd6+4], %r9143;
	st.local.u32 	[%rd6], %r9143;
	st.local.u32 	[%rd5+12], %r9143;
	st.local.u32 	[%rd5+8], %r9143;
	st.local.u32 	[%rd5+4], %r9143;
	st.local.u32 	[%rd5], %r9143;
	st.local.u32 	[%rd4+12], %r9143;
	st.local.u32 	[%rd4+8], %r9143;
	st.local.u32 	[%rd4+4], %r9143;
	st.local.u32 	[%rd4], %r9143;
	st.local.u32 	[%rd3+12], %r9143;
	st.local.u32 	[%rd3+8], %r9143;
	st.local.u32 	[%rd3+4], %r9143;
	st.local.u32 	[%rd3], %r9143;
	st.local.u32 	[%rd2+12], %r9143;
	st.local.u32 	[%rd2+8], %r9143;
	st.local.u32 	[%rd2+4], %r9143;
	st.local.u32 	[%rd2], %r9143;
	st.local.u32 	[%rd1+12], %r9143;
	st.local.u32 	[%rd1+8], %r9143;
	mov.u64 	%rd186, 0;
	st.local.u32 	[%rd1+4], %rd186;
	st.local.u32 	[%rd1], %rd186;
	bra.uni 	BB0_91;

BB0_89:
	ld.local.u32 	%r9143, [%rd1];
	mov.u32 	%r9144, 0;
	mov.u32 	%r9145, %r9144;
	mov.u32 	%r9146, %r9144;
	mov.u32 	%r9147, %r9144;

BB0_90:
	mov.u32 	%r9148, %r9144;
	mov.u32 	%r9149, %r9144;
	mov.u32 	%r9150, %r9144;
	mov.u32 	%r9151, %r9144;
	mov.u32 	%r9152, %r9144;
	mov.u32 	%r9153, %r9144;
	mov.u32 	%r9154, %r9144;
	mov.u32 	%r9155, %r9144;
	mov.u32 	%r9156, %r9144;
	mov.u32 	%r9157, %r9144;
	mov.u32 	%r9158, %r9144;
	mov.u32 	%r9159, %r9144;
	mov.u32 	%r9160, %r9144;
	mov.u32 	%r9161, %r9144;
	mov.u32 	%r9162, %r9144;
	mov.u32 	%r9163, %r9144;
	mov.u32 	%r9164, %r9144;
	mov.u32 	%r9165, %r9144;
	mov.u32 	%r9166, %r9144;
	mov.u32 	%r9167, %r9144;
	mov.u32 	%r9168, %r9144;
	mov.u32 	%r9169, %r9144;
	mov.u32 	%r9170, %r9144;
	mov.u32 	%r9171, %r9144;
	mov.u32 	%r9172, %r9144;
	mov.u32 	%r9173, %r9144;
	mov.u32 	%r9174, %r9144;
	mov.u32 	%r9175, %r9144;

BB0_91:
	ld.local.u32 	%r5398, [%rd9+-128];
	or.b32  	%r5399, %r5398, %r9143;
	st.local.u32 	[%rd9+-128], %r5399;
	ld.local.u32 	%r5400, [%rd9+-124];
	ld.local.u32 	%r5401, [%rd1+4];
	or.b32  	%r5402, %r5400, %r5401;
	st.local.u32 	[%rd9+-124], %r5402;
	ld.local.u32 	%r5403, [%rd9+-120];
	ld.local.u32 	%r5404, [%rd1+8];
	or.b32  	%r5405, %r5403, %r5404;
	st.local.u32 	[%rd9+-120], %r5405;
	ld.local.u32 	%r5406, [%rd9+-116];
	ld.local.u32 	%r5407, [%rd1+12];
	or.b32  	%r5408, %r5406, %r5407;
	st.local.u32 	[%rd9+-116], %r5408;
	ld.local.u32 	%r5409, [%rd9+-112];
	ld.local.u32 	%r5410, [%rd2];
	or.b32  	%r5411, %r5409, %r5410;
	st.local.u32 	[%rd9+-112], %r5411;
	ld.local.u32 	%r5412, [%rd9+-108];
	ld.local.u32 	%r5413, [%rd2+4];
	or.b32  	%r5414, %r5412, %r5413;
	st.local.u32 	[%rd9+-108], %r5414;
	ld.local.u32 	%r5415, [%rd9+-104];
	ld.local.u32 	%r5416, [%rd2+8];
	or.b32  	%r5417, %r5415, %r5416;
	st.local.u32 	[%rd9+-104], %r5417;
	ld.local.u32 	%r5418, [%rd9+-100];
	ld.local.u32 	%r5419, [%rd2+12];
	or.b32  	%r5420, %r5418, %r5419;
	st.local.u32 	[%rd9+-100], %r5420;
	ld.local.u32 	%r5421, [%rd9+-96];
	ld.local.u32 	%r5422, [%rd3];
	or.b32  	%r5423, %r5421, %r5422;
	st.local.u32 	[%rd9+-96], %r5423;
	ld.local.u32 	%r5424, [%rd9+-92];
	ld.local.u32 	%r5425, [%rd3+4];
	or.b32  	%r5426, %r5424, %r5425;
	st.local.u32 	[%rd9+-92], %r5426;
	ld.local.u32 	%r5427, [%rd9+-88];
	ld.local.u32 	%r5428, [%rd3+8];
	or.b32  	%r5429, %r5427, %r5428;
	st.local.u32 	[%rd9+-88], %r5429;
	ld.local.u32 	%r5430, [%rd9+-84];
	ld.local.u32 	%r5431, [%rd3+12];
	or.b32  	%r5432, %r5430, %r5431;
	st.local.u32 	[%rd9+-84], %r5432;
	ld.local.u32 	%r5433, [%rd9+-80];
	ld.local.u32 	%r5434, [%rd4];
	or.b32  	%r5435, %r5433, %r5434;
	st.local.u32 	[%rd9+-80], %r5435;
	ld.local.u32 	%r5436, [%rd9+-76];
	ld.local.u32 	%r5437, [%rd4+4];
	or.b32  	%r5438, %r5436, %r5437;
	st.local.u32 	[%rd9+-76], %r5438;
	ld.local.u32 	%r5439, [%rd9+-72];
	ld.local.u32 	%r5440, [%rd4+8];
	or.b32  	%r5441, %r5439, %r5440;
	st.local.u32 	[%rd9+-72], %r5441;
	ld.local.u32 	%r5442, [%rd9+-68];
	ld.local.u32 	%r5443, [%rd4+12];
	or.b32  	%r5444, %r5442, %r5443;
	st.local.u32 	[%rd9+-68], %r5444;
	ld.local.u32 	%r5445, [%rd9+-64];
	ld.local.u32 	%r5446, [%rd5];
	or.b32  	%r5447, %r5445, %r5446;
	st.local.u32 	[%rd9+-64], %r5447;
	ld.local.u32 	%r5448, [%rd9+-60];
	ld.local.u32 	%r5449, [%rd5+4];
	or.b32  	%r5450, %r5448, %r5449;
	st.local.u32 	[%rd9+-60], %r5450;
	ld.local.u32 	%r5451, [%rd9+-56];
	ld.local.u32 	%r5452, [%rd5+8];
	or.b32  	%r5453, %r5451, %r5452;
	st.local.u32 	[%rd9+-56], %r5453;
	ld.local.u32 	%r5454, [%rd9+-52];
	ld.local.u32 	%r5455, [%rd5+12];
	or.b32  	%r5456, %r5454, %r5455;
	st.local.u32 	[%rd9+-52], %r5456;
	ld.local.u32 	%r5457, [%rd9+-48];
	ld.local.u32 	%r5458, [%rd6];
	or.b32  	%r5459, %r5457, %r5458;
	st.local.u32 	[%rd9+-48], %r5459;
	ld.local.u32 	%r5460, [%rd9+-44];
	ld.local.u32 	%r5461, [%rd6+4];
	or.b32  	%r5462, %r5460, %r5461;
	st.local.u32 	[%rd9+-44], %r5462;
	ld.local.u32 	%r5463, [%rd9+-40];
	ld.local.u32 	%r5464, [%rd6+8];
	or.b32  	%r5465, %r5463, %r5464;
	st.local.u32 	[%rd9+-40], %r5465;
	ld.local.u32 	%r5466, [%rd9+-36];
	ld.local.u32 	%r5467, [%rd6+12];
	or.b32  	%r5468, %r5466, %r5467;
	st.local.u32 	[%rd9+-36], %r5468;
	ld.local.u32 	%r5469, [%rd9+-32];
	ld.local.u32 	%r5470, [%rd7];
	or.b32  	%r5471, %r5469, %r5470;
	st.local.u32 	[%rd9+-32], %r5471;
	ld.local.u32 	%r5472, [%rd9+-28];
	ld.local.u32 	%r5473, [%rd7+4];
	or.b32  	%r5474, %r5472, %r5473;
	st.local.u32 	[%rd9+-28], %r5474;
	ld.local.u32 	%r5475, [%rd9+-24];
	ld.local.u32 	%r5476, [%rd7+8];
	or.b32  	%r5477, %r5475, %r5476;
	st.local.u32 	[%rd9+-24], %r5477;
	ld.local.u32 	%r5478, [%rd9+-20];
	ld.local.u32 	%r5479, [%rd7+12];
	or.b32  	%r5480, %r5478, %r5479;
	st.local.u32 	[%rd9+-20], %r5480;
	ld.local.u32 	%r5481, [%rd9+-16];
	ld.local.u32 	%r5482, [%rd8];
	or.b32  	%r5483, %r5481, %r5482;
	st.local.u32 	[%rd9+-16], %r5483;
	ld.local.u32 	%r5484, [%rd9+-12];
	ld.local.u32 	%r5485, [%rd8+4];
	or.b32  	%r5486, %r5484, %r5485;
	st.local.u32 	[%rd9+-12], %r5486;
	ld.local.u32 	%r5487, [%rd9+-8];
	ld.local.u32 	%r5488, [%rd8+8];
	or.b32  	%r5489, %r5487, %r5488;
	st.local.u32 	[%rd9+-8], %r5489;
	ld.local.u32 	%r5490, [%rd9+-4];
	ld.local.u32 	%r5491, [%rd8+12];
	or.b32  	%r5492, %r5490, %r5491;
	st.local.u32 	[%rd9+-4], %r5492;
	mov.b64	%rd2270, {%r5402, %r5399};
	mov.b64	%rd2271, {%r5408, %r5405};
	mov.b64	%rd2272, {%r5414, %r5411};
	mov.b64	%rd2273, {%r5420, %r5417};
	mov.b64	%rd2274, {%r5426, %r5423};
	mov.b64	%rd2275, {%r5432, %r5429};
	mov.b64	%rd2276, {%r5438, %r5435};
	mov.b64	%rd2277, {%r5444, %r5441};
	mov.b64	%rd2261, {%r5450, %r5447};
	mov.b64	%rd2260, {%r5456, %r5453};
	mov.b64	%rd2259, {%r5462, %r5459};
	mov.b64	%rd2258, {%r5468, %r5465};
	mov.b64	%rd2257, {%r5474, %r5471};
	mov.b64	%rd2256, {%r5480, %r5477};
	mov.b64	%rd2255, {%r5486, %r5483};
	mov.b64	%rd2254, {%r5492, %r5489};
	ld.local.u64 	%rd32, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd32;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 14;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 14;
	mov.b64 	%rd216, {%r5496, %r5495};
	shf.r.wrap.b32 	%r5497, %r5494, %r5493, 18;
	shf.r.wrap.b32 	%r5498, %r5493, %r5494, 18;
	mov.b64 	%rd217, {%r5498, %r5497};
	xor.b64  	%rd218, %rd216, %rd217;
	shf.l.wrap.b32 	%r5499, %r5493, %r5494, 23;
	shf.l.wrap.b32 	%r5500, %r5494, %r5493, 23;
	mov.b64 	%rd219, {%r5500, %r5499};
	xor.b64  	%rd220, %rd218, %rd219;
	ld.local.u64 	%rd33, [%rd9+-144];
	ld.local.u64 	%rd34, [%rd9+-152];
	xor.b64  	%rd221, %rd33, %rd34;
	and.b64  	%rd222, %rd221, %rd32;
	xor.b64  	%rd223, %rd222, %rd33;
	ld.local.u64 	%rd35, [%rd9+-136];
	add.s64 	%rd224, %rd220, %rd35;
	add.s64 	%rd225, %rd224, %rd223;
	add.s64 	%rd226, %rd225, %rd2270;
	ld.const.u64 	%rd227, [k_sha512];
	add.s64 	%rd228, %rd226, %rd227;
	ld.local.u64 	%rd36, [%rd9+-168];
	add.s64 	%rd229, %rd228, %rd36;
	ld.local.u64 	%rd37, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5501,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5502}, %rd37;
	}
	shf.r.wrap.b32 	%r5503, %r5502, %r5501, 28;
	shf.r.wrap.b32 	%r5504, %r5501, %r5502, 28;
	mov.b64 	%rd230, {%r5504, %r5503};
	shf.l.wrap.b32 	%r5505, %r5501, %r5502, 30;
	shf.l.wrap.b32 	%r5506, %r5502, %r5501, 30;
	mov.b64 	%rd231, {%r5506, %r5505};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r5507, %r5501, %r5502, 25;
	shf.l.wrap.b32 	%r5508, %r5502, %r5501, 25;
	mov.b64 	%rd233, {%r5508, %r5507};
	xor.b64  	%rd234, %rd232, %rd233;
	ld.local.u64 	%rd38, [%rd9+-184];
	and.b64  	%rd235, %rd38, %rd37;
	xor.b64  	%rd236, %rd38, %rd37;
	ld.local.u64 	%rd39, [%rd9+-176];
	and.b64  	%rd237, %rd39, %rd236;
	or.b64  	%rd238, %rd237, %rd235;
	add.s64 	%rd239, %rd238, %rd234;
	add.s64 	%rd240, %rd239, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd229;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 14;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 14;
	mov.b64 	%rd241, {%r5512, %r5511};
	shf.r.wrap.b32 	%r5513, %r5510, %r5509, 18;
	shf.r.wrap.b32 	%r5514, %r5509, %r5510, 18;
	mov.b64 	%rd242, {%r5514, %r5513};
	xor.b64  	%rd243, %rd241, %rd242;
	shf.l.wrap.b32 	%r5515, %r5509, %r5510, 23;
	shf.l.wrap.b32 	%r5516, %r5510, %r5509, 23;
	mov.b64 	%rd244, {%r5516, %r5515};
	xor.b64  	%rd245, %rd243, %rd244;
	xor.b64  	%rd246, %rd34, %rd32;
	and.b64  	%rd247, %rd229, %rd246;
	xor.b64  	%rd248, %rd247, %rd34;
	add.s64 	%rd249, %rd2271, %rd33;
	ld.const.u64 	%rd250, [k_sha512+8];
	add.s64 	%rd251, %rd249, %rd250;
	add.s64 	%rd252, %rd251, %rd248;
	add.s64 	%rd253, %rd252, %rd245;
	add.s64 	%rd254, %rd253, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd240;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 28;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 28;
	mov.b64 	%rd255, {%r5520, %r5519};
	shf.l.wrap.b32 	%r5521, %r5517, %r5518, 30;
	shf.l.wrap.b32 	%r5522, %r5518, %r5517, 30;
	mov.b64 	%rd256, {%r5522, %r5521};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 25;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 25;
	mov.b64 	%rd258, {%r5524, %r5523};
	xor.b64  	%rd259, %rd257, %rd258;
	and.b64  	%rd260, %rd240, %rd37;
	xor.b64  	%rd261, %rd240, %rd37;
	and.b64  	%rd262, %rd261, %rd38;
	or.b64  	%rd263, %rd262, %rd260;
	add.s64 	%rd264, %rd259, %rd263;
	add.s64 	%rd265, %rd264, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd254;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 14;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 14;
	mov.b64 	%rd266, {%r5528, %r5527};
	shf.r.wrap.b32 	%r5529, %r5526, %r5525, 18;
	shf.r.wrap.b32 	%r5530, %r5525, %r5526, 18;
	mov.b64 	%rd267, {%r5530, %r5529};
	xor.b64  	%rd268, %rd266, %rd267;
	shf.l.wrap.b32 	%r5531, %r5525, %r5526, 23;
	shf.l.wrap.b32 	%r5532, %r5526, %r5525, 23;
	mov.b64 	%rd269, {%r5532, %r5531};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd229, %rd32;
	and.b64  	%rd272, %rd254, %rd271;
	xor.b64  	%rd273, %rd272, %rd32;
	add.s64 	%rd274, %rd2272, %rd34;
	ld.const.u64 	%rd275, [k_sha512+16];
	add.s64 	%rd276, %rd274, %rd275;
	add.s64 	%rd277, %rd276, %rd273;
	add.s64 	%rd278, %rd277, %rd270;
	add.s64 	%rd279, %rd278, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5533,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5534}, %rd265;
	}
	shf.r.wrap.b32 	%r5535, %r5534, %r5533, 28;
	shf.r.wrap.b32 	%r5536, %r5533, %r5534, 28;
	mov.b64 	%rd280, {%r5536, %r5535};
	shf.l.wrap.b32 	%r5537, %r5533, %r5534, 30;
	shf.l.wrap.b32 	%r5538, %r5534, %r5533, 30;
	mov.b64 	%rd281, {%r5538, %r5537};
	xor.b64  	%rd282, %rd280, %rd281;
	shf.l.wrap.b32 	%r5539, %r5533, %r5534, 25;
	shf.l.wrap.b32 	%r5540, %r5534, %r5533, 25;
	mov.b64 	%rd283, {%r5540, %r5539};
	xor.b64  	%rd284, %rd282, %rd283;
	and.b64  	%rd285, %rd265, %rd240;
	xor.b64  	%rd286, %rd265, %rd240;
	and.b64  	%rd287, %rd286, %rd37;
	or.b64  	%rd288, %rd287, %rd285;
	add.s64 	%rd289, %rd284, %rd288;
	add.s64 	%rd290, %rd289, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5541,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5542}, %rd279;
	}
	shf.r.wrap.b32 	%r5543, %r5542, %r5541, 14;
	shf.r.wrap.b32 	%r5544, %r5541, %r5542, 14;
	mov.b64 	%rd291, {%r5544, %r5543};
	shf.r.wrap.b32 	%r5545, %r5542, %r5541, 18;
	shf.r.wrap.b32 	%r5546, %r5541, %r5542, 18;
	mov.b64 	%rd292, {%r5546, %r5545};
	xor.b64  	%rd293, %rd291, %rd292;
	shf.l.wrap.b32 	%r5547, %r5541, %r5542, 23;
	shf.l.wrap.b32 	%r5548, %r5542, %r5541, 23;
	mov.b64 	%rd294, {%r5548, %r5547};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd254, %rd229;
	and.b64  	%rd297, %rd279, %rd296;
	xor.b64  	%rd298, %rd297, %rd229;
	add.s64 	%rd299, %rd2273, %rd32;
	ld.const.u64 	%rd300, [k_sha512+24];
	add.s64 	%rd301, %rd299, %rd300;
	add.s64 	%rd302, %rd301, %rd298;
	add.s64 	%rd303, %rd302, %rd295;
	add.s64 	%rd304, %rd303, %rd37;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd290;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 28;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 28;
	mov.b64 	%rd305, {%r5552, %r5551};
	shf.l.wrap.b32 	%r5553, %r5549, %r5550, 30;
	shf.l.wrap.b32 	%r5554, %r5550, %r5549, 30;
	mov.b64 	%rd306, {%r5554, %r5553};
	xor.b64  	%rd307, %rd305, %rd306;
	shf.l.wrap.b32 	%r5555, %r5549, %r5550, 25;
	shf.l.wrap.b32 	%r5556, %r5550, %r5549, 25;
	mov.b64 	%rd308, {%r5556, %r5555};
	xor.b64  	%rd309, %rd307, %rd308;
	and.b64  	%rd310, %rd290, %rd265;
	xor.b64  	%rd311, %rd290, %rd265;
	and.b64  	%rd312, %rd311, %rd240;
	or.b64  	%rd313, %rd312, %rd310;
	add.s64 	%rd314, %rd309, %rd313;
	add.s64 	%rd315, %rd314, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5557,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5558}, %rd304;
	}
	shf.r.wrap.b32 	%r5559, %r5558, %r5557, 14;
	shf.r.wrap.b32 	%r5560, %r5557, %r5558, 14;
	mov.b64 	%rd316, {%r5560, %r5559};
	shf.r.wrap.b32 	%r5561, %r5558, %r5557, 18;
	shf.r.wrap.b32 	%r5562, %r5557, %r5558, 18;
	mov.b64 	%rd317, {%r5562, %r5561};
	xor.b64  	%rd318, %rd316, %rd317;
	shf.l.wrap.b32 	%r5563, %r5557, %r5558, 23;
	shf.l.wrap.b32 	%r5564, %r5558, %r5557, 23;
	mov.b64 	%rd319, {%r5564, %r5563};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd279, %rd254;
	and.b64  	%rd322, %rd304, %rd321;
	xor.b64  	%rd323, %rd322, %rd254;
	add.s64 	%rd324, %rd229, %rd2274;
	ld.const.u64 	%rd325, [k_sha512+32];
	add.s64 	%rd326, %rd324, %rd325;
	add.s64 	%rd327, %rd326, %rd323;
	add.s64 	%rd328, %rd327, %rd320;
	add.s64 	%rd329, %rd328, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd315;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 28;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 28;
	mov.b64 	%rd330, {%r5568, %r5567};
	shf.l.wrap.b32 	%r5569, %r5565, %r5566, 30;
	shf.l.wrap.b32 	%r5570, %r5566, %r5565, 30;
	mov.b64 	%rd331, {%r5570, %r5569};
	xor.b64  	%rd332, %rd330, %rd331;
	shf.l.wrap.b32 	%r5571, %r5565, %r5566, 25;
	shf.l.wrap.b32 	%r5572, %r5566, %r5565, 25;
	mov.b64 	%rd333, {%r5572, %r5571};
	xor.b64  	%rd334, %rd332, %rd333;
	and.b64  	%rd335, %rd315, %rd290;
	xor.b64  	%rd336, %rd315, %rd290;
	and.b64  	%rd337, %rd336, %rd265;
	or.b64  	%rd338, %rd337, %rd335;
	add.s64 	%rd339, %rd334, %rd338;
	add.s64 	%rd340, %rd339, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5573,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5574}, %rd329;
	}
	shf.r.wrap.b32 	%r5575, %r5574, %r5573, 14;
	shf.r.wrap.b32 	%r5576, %r5573, %r5574, 14;
	mov.b64 	%rd341, {%r5576, %r5575};
	shf.r.wrap.b32 	%r5577, %r5574, %r5573, 18;
	shf.r.wrap.b32 	%r5578, %r5573, %r5574, 18;
	mov.b64 	%rd342, {%r5578, %r5577};
	xor.b64  	%rd343, %rd341, %rd342;
	shf.l.wrap.b32 	%r5579, %r5573, %r5574, 23;
	shf.l.wrap.b32 	%r5580, %r5574, %r5573, 23;
	mov.b64 	%rd344, {%r5580, %r5579};
	xor.b64  	%rd345, %rd343, %rd344;
	xor.b64  	%rd346, %rd304, %rd279;
	and.b64  	%rd347, %rd329, %rd346;
	xor.b64  	%rd348, %rd347, %rd279;
	ld.const.u64 	%rd349, [k_sha512+40];
	add.s64 	%rd350, %rd349, %rd2275;
	add.s64 	%rd351, %rd350, %rd254;
	add.s64 	%rd352, %rd351, %rd348;
	add.s64 	%rd353, %rd352, %rd345;
	add.s64 	%rd354, %rd353, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd340;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 28;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 28;
	mov.b64 	%rd355, {%r5584, %r5583};
	shf.l.wrap.b32 	%r5585, %r5581, %r5582, 30;
	shf.l.wrap.b32 	%r5586, %r5582, %r5581, 30;
	mov.b64 	%rd356, {%r5586, %r5585};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r5587, %r5581, %r5582, 25;
	shf.l.wrap.b32 	%r5588, %r5582, %r5581, 25;
	mov.b64 	%rd358, {%r5588, %r5587};
	xor.b64  	%rd359, %rd357, %rd358;
	and.b64  	%rd360, %rd340, %rd315;
	xor.b64  	%rd361, %rd340, %rd315;
	and.b64  	%rd362, %rd361, %rd290;
	or.b64  	%rd363, %rd362, %rd360;
	add.s64 	%rd364, %rd359, %rd363;
	add.s64 	%rd365, %rd364, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5589,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5590}, %rd354;
	}
	shf.r.wrap.b32 	%r5591, %r5590, %r5589, 14;
	shf.r.wrap.b32 	%r5592, %r5589, %r5590, 14;
	mov.b64 	%rd366, {%r5592, %r5591};
	shf.r.wrap.b32 	%r5593, %r5590, %r5589, 18;
	shf.r.wrap.b32 	%r5594, %r5589, %r5590, 18;
	mov.b64 	%rd367, {%r5594, %r5593};
	xor.b64  	%rd368, %rd366, %rd367;
	shf.l.wrap.b32 	%r5595, %r5589, %r5590, 23;
	shf.l.wrap.b32 	%r5596, %r5590, %r5589, 23;
	mov.b64 	%rd369, {%r5596, %r5595};
	xor.b64  	%rd370, %rd368, %rd369;
	xor.b64  	%rd371, %rd329, %rd304;
	and.b64  	%rd372, %rd354, %rd371;
	xor.b64  	%rd373, %rd372, %rd304;
	ld.const.u64 	%rd374, [k_sha512+48];
	add.s64 	%rd375, %rd374, %rd2276;
	add.s64 	%rd376, %rd375, %rd279;
	add.s64 	%rd377, %rd376, %rd373;
	add.s64 	%rd378, %rd377, %rd370;
	add.s64 	%rd379, %rd378, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5597,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5598}, %rd365;
	}
	shf.r.wrap.b32 	%r5599, %r5598, %r5597, 28;
	shf.r.wrap.b32 	%r5600, %r5597, %r5598, 28;
	mov.b64 	%rd380, {%r5600, %r5599};
	shf.l.wrap.b32 	%r5601, %r5597, %r5598, 30;
	shf.l.wrap.b32 	%r5602, %r5598, %r5597, 30;
	mov.b64 	%rd381, {%r5602, %r5601};
	xor.b64  	%rd382, %rd380, %rd381;
	shf.l.wrap.b32 	%r5603, %r5597, %r5598, 25;
	shf.l.wrap.b32 	%r5604, %r5598, %r5597, 25;
	mov.b64 	%rd383, {%r5604, %r5603};
	xor.b64  	%rd384, %rd382, %rd383;
	and.b64  	%rd385, %rd365, %rd340;
	xor.b64  	%rd386, %rd365, %rd340;
	and.b64  	%rd387, %rd386, %rd315;
	or.b64  	%rd388, %rd387, %rd385;
	add.s64 	%rd389, %rd384, %rd388;
	add.s64 	%rd390, %rd389, %rd378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5605,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5606}, %rd379;
	}
	shf.r.wrap.b32 	%r5607, %r5606, %r5605, 14;
	shf.r.wrap.b32 	%r5608, %r5605, %r5606, 14;
	mov.b64 	%rd391, {%r5608, %r5607};
	shf.r.wrap.b32 	%r5609, %r5606, %r5605, 18;
	shf.r.wrap.b32 	%r5610, %r5605, %r5606, 18;
	mov.b64 	%rd392, {%r5610, %r5609};
	xor.b64  	%rd393, %rd391, %rd392;
	shf.l.wrap.b32 	%r5611, %r5605, %r5606, 23;
	shf.l.wrap.b32 	%r5612, %r5606, %r5605, 23;
	mov.b64 	%rd394, {%r5612, %r5611};
	xor.b64  	%rd395, %rd393, %rd394;
	xor.b64  	%rd396, %rd354, %rd329;
	and.b64  	%rd397, %rd379, %rd396;
	xor.b64  	%rd398, %rd397, %rd329;
	ld.const.u64 	%rd399, [k_sha512+56];
	add.s64 	%rd400, %rd399, %rd2277;
	add.s64 	%rd401, %rd400, %rd304;
	add.s64 	%rd402, %rd401, %rd398;
	add.s64 	%rd403, %rd402, %rd395;
	add.s64 	%rd404, %rd403, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd390;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 28;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 28;
	mov.b64 	%rd405, {%r5616, %r5615};
	shf.l.wrap.b32 	%r5617, %r5613, %r5614, 30;
	shf.l.wrap.b32 	%r5618, %r5614, %r5613, 30;
	mov.b64 	%rd406, {%r5618, %r5617};
	xor.b64  	%rd407, %rd405, %rd406;
	shf.l.wrap.b32 	%r5619, %r5613, %r5614, 25;
	shf.l.wrap.b32 	%r5620, %r5614, %r5613, 25;
	mov.b64 	%rd408, {%r5620, %r5619};
	xor.b64  	%rd409, %rd407, %rd408;
	and.b64  	%rd410, %rd390, %rd365;
	xor.b64  	%rd411, %rd390, %rd365;
	and.b64  	%rd412, %rd411, %rd340;
	or.b64  	%rd413, %rd412, %rd410;
	add.s64 	%rd414, %rd409, %rd413;
	add.s64 	%rd415, %rd414, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd404;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 14;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 14;
	mov.b64 	%rd416, {%r5624, %r5623};
	shf.r.wrap.b32 	%r5625, %r5622, %r5621, 18;
	shf.r.wrap.b32 	%r5626, %r5621, %r5622, 18;
	mov.b64 	%rd417, {%r5626, %r5625};
	xor.b64  	%rd418, %rd416, %rd417;
	shf.l.wrap.b32 	%r5627, %r5621, %r5622, 23;
	shf.l.wrap.b32 	%r5628, %r5622, %r5621, 23;
	mov.b64 	%rd419, {%r5628, %r5627};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd379, %rd354;
	and.b64  	%rd422, %rd404, %rd421;
	xor.b64  	%rd423, %rd422, %rd354;
	ld.const.u64 	%rd424, [k_sha512+64];
	add.s64 	%rd425, %rd424, %rd2261;
	add.s64 	%rd426, %rd425, %rd329;
	add.s64 	%rd427, %rd426, %rd423;
	add.s64 	%rd428, %rd427, %rd420;
	add.s64 	%rd429, %rd428, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd415;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 28;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 28;
	mov.b64 	%rd430, {%r5632, %r5631};
	shf.l.wrap.b32 	%r5633, %r5629, %r5630, 30;
	shf.l.wrap.b32 	%r5634, %r5630, %r5629, 30;
	mov.b64 	%rd431, {%r5634, %r5633};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r5635, %r5629, %r5630, 25;
	shf.l.wrap.b32 	%r5636, %r5630, %r5629, 25;
	mov.b64 	%rd433, {%r5636, %r5635};
	xor.b64  	%rd434, %rd432, %rd433;
	and.b64  	%rd435, %rd415, %rd390;
	xor.b64  	%rd436, %rd415, %rd390;
	and.b64  	%rd437, %rd436, %rd365;
	or.b64  	%rd438, %rd437, %rd435;
	add.s64 	%rd439, %rd434, %rd438;
	add.s64 	%rd440, %rd439, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5637,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5638}, %rd429;
	}
	shf.r.wrap.b32 	%r5639, %r5638, %r5637, 14;
	shf.r.wrap.b32 	%r5640, %r5637, %r5638, 14;
	mov.b64 	%rd441, {%r5640, %r5639};
	shf.r.wrap.b32 	%r5641, %r5638, %r5637, 18;
	shf.r.wrap.b32 	%r5642, %r5637, %r5638, 18;
	mov.b64 	%rd442, {%r5642, %r5641};
	xor.b64  	%rd443, %rd441, %rd442;
	shf.l.wrap.b32 	%r5643, %r5637, %r5638, 23;
	shf.l.wrap.b32 	%r5644, %r5638, %r5637, 23;
	mov.b64 	%rd444, {%r5644, %r5643};
	xor.b64  	%rd445, %rd443, %rd444;
	xor.b64  	%rd446, %rd404, %rd379;
	and.b64  	%rd447, %rd429, %rd446;
	xor.b64  	%rd448, %rd447, %rd379;
	ld.const.u64 	%rd449, [k_sha512+72];
	add.s64 	%rd450, %rd449, %rd2260;
	add.s64 	%rd451, %rd450, %rd354;
	add.s64 	%rd452, %rd451, %rd448;
	add.s64 	%rd453, %rd452, %rd445;
	add.s64 	%rd454, %rd453, %rd365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5645,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5646}, %rd440;
	}
	shf.r.wrap.b32 	%r5647, %r5646, %r5645, 28;
	shf.r.wrap.b32 	%r5648, %r5645, %r5646, 28;
	mov.b64 	%rd455, {%r5648, %r5647};
	shf.l.wrap.b32 	%r5649, %r5645, %r5646, 30;
	shf.l.wrap.b32 	%r5650, %r5646, %r5645, 30;
	mov.b64 	%rd456, {%r5650, %r5649};
	xor.b64  	%rd457, %rd455, %rd456;
	shf.l.wrap.b32 	%r5651, %r5645, %r5646, 25;
	shf.l.wrap.b32 	%r5652, %r5646, %r5645, 25;
	mov.b64 	%rd458, {%r5652, %r5651};
	xor.b64  	%rd459, %rd457, %rd458;
	and.b64  	%rd460, %rd440, %rd415;
	xor.b64  	%rd461, %rd440, %rd415;
	and.b64  	%rd462, %rd461, %rd390;
	or.b64  	%rd463, %rd462, %rd460;
	add.s64 	%rd464, %rd459, %rd463;
	add.s64 	%rd465, %rd464, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5653,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5654}, %rd454;
	}
	shf.r.wrap.b32 	%r5655, %r5654, %r5653, 14;
	shf.r.wrap.b32 	%r5656, %r5653, %r5654, 14;
	mov.b64 	%rd466, {%r5656, %r5655};
	shf.r.wrap.b32 	%r5657, %r5654, %r5653, 18;
	shf.r.wrap.b32 	%r5658, %r5653, %r5654, 18;
	mov.b64 	%rd467, {%r5658, %r5657};
	xor.b64  	%rd468, %rd466, %rd467;
	shf.l.wrap.b32 	%r5659, %r5653, %r5654, 23;
	shf.l.wrap.b32 	%r5660, %r5654, %r5653, 23;
	mov.b64 	%rd469, {%r5660, %r5659};
	xor.b64  	%rd470, %rd468, %rd469;
	xor.b64  	%rd471, %rd429, %rd404;
	and.b64  	%rd472, %rd454, %rd471;
	xor.b64  	%rd473, %rd472, %rd404;
	ld.const.u64 	%rd474, [k_sha512+80];
	add.s64 	%rd475, %rd474, %rd2259;
	add.s64 	%rd476, %rd475, %rd379;
	add.s64 	%rd477, %rd476, %rd473;
	add.s64 	%rd478, %rd477, %rd470;
	add.s64 	%rd479, %rd478, %rd390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5661,%dummy}, %rd465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5662}, %rd465;
	}
	shf.r.wrap.b32 	%r5663, %r5662, %r5661, 28;
	shf.r.wrap.b32 	%r5664, %r5661, %r5662, 28;
	mov.b64 	%rd480, {%r5664, %r5663};
	shf.l.wrap.b32 	%r5665, %r5661, %r5662, 30;
	shf.l.wrap.b32 	%r5666, %r5662, %r5661, 30;
	mov.b64 	%rd481, {%r5666, %r5665};
	xor.b64  	%rd482, %rd480, %rd481;
	shf.l.wrap.b32 	%r5667, %r5661, %r5662, 25;
	shf.l.wrap.b32 	%r5668, %r5662, %r5661, 25;
	mov.b64 	%rd483, {%r5668, %r5667};
	xor.b64  	%rd484, %rd482, %rd483;
	and.b64  	%rd485, %rd465, %rd440;
	xor.b64  	%rd486, %rd465, %rd440;
	and.b64  	%rd487, %rd486, %rd415;
	or.b64  	%rd488, %rd487, %rd485;
	add.s64 	%rd489, %rd484, %rd488;
	add.s64 	%rd490, %rd489, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd479;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 14;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 14;
	mov.b64 	%rd491, {%r5672, %r5671};
	shf.r.wrap.b32 	%r5673, %r5670, %r5669, 18;
	shf.r.wrap.b32 	%r5674, %r5669, %r5670, 18;
	mov.b64 	%rd492, {%r5674, %r5673};
	xor.b64  	%rd493, %rd491, %rd492;
	shf.l.wrap.b32 	%r5675, %r5669, %r5670, 23;
	shf.l.wrap.b32 	%r5676, %r5670, %r5669, 23;
	mov.b64 	%rd494, {%r5676, %r5675};
	xor.b64  	%rd495, %rd493, %rd494;
	xor.b64  	%rd496, %rd454, %rd429;
	and.b64  	%rd497, %rd479, %rd496;
	xor.b64  	%rd498, %rd497, %rd429;
	ld.const.u64 	%rd499, [k_sha512+88];
	add.s64 	%rd500, %rd499, %rd2258;
	add.s64 	%rd501, %rd500, %rd404;
	add.s64 	%rd502, %rd501, %rd498;
	add.s64 	%rd503, %rd502, %rd495;
	add.s64 	%rd504, %rd503, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5677,%dummy}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5678}, %rd490;
	}
	shf.r.wrap.b32 	%r5679, %r5678, %r5677, 28;
	shf.r.wrap.b32 	%r5680, %r5677, %r5678, 28;
	mov.b64 	%rd505, {%r5680, %r5679};
	shf.l.wrap.b32 	%r5681, %r5677, %r5678, 30;
	shf.l.wrap.b32 	%r5682, %r5678, %r5677, 30;
	mov.b64 	%rd506, {%r5682, %r5681};
	xor.b64  	%rd507, %rd505, %rd506;
	shf.l.wrap.b32 	%r5683, %r5677, %r5678, 25;
	shf.l.wrap.b32 	%r5684, %r5678, %r5677, 25;
	mov.b64 	%rd508, {%r5684, %r5683};
	xor.b64  	%rd509, %rd507, %rd508;
	and.b64  	%rd510, %rd490, %rd465;
	xor.b64  	%rd511, %rd490, %rd465;
	and.b64  	%rd512, %rd511, %rd440;
	or.b64  	%rd513, %rd512, %rd510;
	add.s64 	%rd514, %rd509, %rd513;
	add.s64 	%rd515, %rd514, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5685,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5686}, %rd504;
	}
	shf.r.wrap.b32 	%r5687, %r5686, %r5685, 14;
	shf.r.wrap.b32 	%r5688, %r5685, %r5686, 14;
	mov.b64 	%rd516, {%r5688, %r5687};
	shf.r.wrap.b32 	%r5689, %r5686, %r5685, 18;
	shf.r.wrap.b32 	%r5690, %r5685, %r5686, 18;
	mov.b64 	%rd517, {%r5690, %r5689};
	xor.b64  	%rd518, %rd516, %rd517;
	shf.l.wrap.b32 	%r5691, %r5685, %r5686, 23;
	shf.l.wrap.b32 	%r5692, %r5686, %r5685, 23;
	mov.b64 	%rd519, {%r5692, %r5691};
	xor.b64  	%rd520, %rd518, %rd519;
	xor.b64  	%rd521, %rd479, %rd454;
	and.b64  	%rd522, %rd504, %rd521;
	xor.b64  	%rd523, %rd522, %rd454;
	ld.const.u64 	%rd524, [k_sha512+96];
	add.s64 	%rd525, %rd524, %rd2257;
	add.s64 	%rd526, %rd525, %rd429;
	add.s64 	%rd527, %rd526, %rd523;
	add.s64 	%rd528, %rd527, %rd520;
	add.s64 	%rd2269, %rd528, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5693,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5694}, %rd515;
	}
	shf.r.wrap.b32 	%r5695, %r5694, %r5693, 28;
	shf.r.wrap.b32 	%r5696, %r5693, %r5694, 28;
	mov.b64 	%rd529, {%r5696, %r5695};
	shf.l.wrap.b32 	%r5697, %r5693, %r5694, 30;
	shf.l.wrap.b32 	%r5698, %r5694, %r5693, 30;
	mov.b64 	%rd530, {%r5698, %r5697};
	xor.b64  	%rd531, %rd529, %rd530;
	shf.l.wrap.b32 	%r5699, %r5693, %r5694, 25;
	shf.l.wrap.b32 	%r5700, %r5694, %r5693, 25;
	mov.b64 	%rd532, {%r5700, %r5699};
	xor.b64  	%rd533, %rd531, %rd532;
	and.b64  	%rd534, %rd515, %rd490;
	xor.b64  	%rd535, %rd515, %rd490;
	and.b64  	%rd536, %rd535, %rd465;
	or.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd533, %rd537;
	add.s64 	%rd2265, %rd538, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5701,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5702}, %rd2269;
	}
	shf.r.wrap.b32 	%r5703, %r5702, %r5701, 14;
	shf.r.wrap.b32 	%r5704, %r5701, %r5702, 14;
	mov.b64 	%rd539, {%r5704, %r5703};
	shf.r.wrap.b32 	%r5705, %r5702, %r5701, 18;
	shf.r.wrap.b32 	%r5706, %r5701, %r5702, 18;
	mov.b64 	%rd540, {%r5706, %r5705};
	xor.b64  	%rd541, %rd539, %rd540;
	shf.l.wrap.b32 	%r5707, %r5701, %r5702, 23;
	shf.l.wrap.b32 	%r5708, %r5702, %r5701, 23;
	mov.b64 	%rd542, {%r5708, %r5707};
	xor.b64  	%rd543, %rd541, %rd542;
	xor.b64  	%rd544, %rd504, %rd479;
	and.b64  	%rd545, %rd2269, %rd544;
	xor.b64  	%rd546, %rd545, %rd479;
	ld.const.u64 	%rd547, [k_sha512+104];
	add.s64 	%rd548, %rd547, %rd2256;
	add.s64 	%rd549, %rd548, %rd454;
	add.s64 	%rd550, %rd549, %rd546;
	add.s64 	%rd551, %rd550, %rd543;
	add.s64 	%rd2268, %rd551, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5709,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5710}, %rd2265;
	}
	shf.r.wrap.b32 	%r5711, %r5710, %r5709, 28;
	shf.r.wrap.b32 	%r5712, %r5709, %r5710, 28;
	mov.b64 	%rd552, {%r5712, %r5711};
	shf.l.wrap.b32 	%r5713, %r5709, %r5710, 30;
	shf.l.wrap.b32 	%r5714, %r5710, %r5709, 30;
	mov.b64 	%rd553, {%r5714, %r5713};
	xor.b64  	%rd554, %rd552, %rd553;
	shf.l.wrap.b32 	%r5715, %r5709, %r5710, 25;
	shf.l.wrap.b32 	%r5716, %r5710, %r5709, 25;
	mov.b64 	%rd555, {%r5716, %r5715};
	xor.b64  	%rd556, %rd554, %rd555;
	and.b64  	%rd557, %rd2265, %rd515;
	xor.b64  	%rd558, %rd2265, %rd515;
	and.b64  	%rd559, %rd558, %rd490;
	or.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd556, %rd560;
	add.s64 	%rd2264, %rd561, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5717,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5718}, %rd2268;
	}
	shf.r.wrap.b32 	%r5719, %r5718, %r5717, 14;
	shf.r.wrap.b32 	%r5720, %r5717, %r5718, 14;
	mov.b64 	%rd562, {%r5720, %r5719};
	shf.r.wrap.b32 	%r5721, %r5718, %r5717, 18;
	shf.r.wrap.b32 	%r5722, %r5717, %r5718, 18;
	mov.b64 	%rd563, {%r5722, %r5721};
	xor.b64  	%rd564, %rd562, %rd563;
	shf.l.wrap.b32 	%r5723, %r5717, %r5718, 23;
	shf.l.wrap.b32 	%r5724, %r5718, %r5717, 23;
	mov.b64 	%rd565, {%r5724, %r5723};
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd2269, %rd504;
	and.b64  	%rd568, %rd2268, %rd567;
	xor.b64  	%rd569, %rd568, %rd504;
	ld.const.u64 	%rd570, [k_sha512+112];
	add.s64 	%rd571, %rd570, %rd2255;
	add.s64 	%rd572, %rd571, %rd479;
	add.s64 	%rd573, %rd572, %rd569;
	add.s64 	%rd574, %rd573, %rd566;
	add.s64 	%rd2267, %rd574, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5725,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd2264;
	}
	shf.r.wrap.b32 	%r5727, %r5726, %r5725, 28;
	shf.r.wrap.b32 	%r5728, %r5725, %r5726, 28;
	mov.b64 	%rd575, {%r5728, %r5727};
	shf.l.wrap.b32 	%r5729, %r5725, %r5726, 30;
	shf.l.wrap.b32 	%r5730, %r5726, %r5725, 30;
	mov.b64 	%rd576, {%r5730, %r5729};
	xor.b64  	%rd577, %rd575, %rd576;
	shf.l.wrap.b32 	%r5731, %r5725, %r5726, 25;
	shf.l.wrap.b32 	%r5732, %r5726, %r5725, 25;
	mov.b64 	%rd578, {%r5732, %r5731};
	xor.b64  	%rd579, %rd577, %rd578;
	and.b64  	%rd580, %rd2264, %rd2265;
	xor.b64  	%rd581, %rd2264, %rd2265;
	and.b64  	%rd582, %rd581, %rd515;
	or.b64  	%rd583, %rd582, %rd580;
	add.s64 	%rd584, %rd579, %rd583;
	add.s64 	%rd2263, %rd584, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5733,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5734}, %rd2267;
	}
	shf.r.wrap.b32 	%r5735, %r5734, %r5733, 14;
	shf.r.wrap.b32 	%r5736, %r5733, %r5734, 14;
	mov.b64 	%rd585, {%r5736, %r5735};
	shf.r.wrap.b32 	%r5737, %r5734, %r5733, 18;
	shf.r.wrap.b32 	%r5738, %r5733, %r5734, 18;
	mov.b64 	%rd586, {%r5738, %r5737};
	xor.b64  	%rd587, %rd585, %rd586;
	shf.l.wrap.b32 	%r5739, %r5733, %r5734, 23;
	shf.l.wrap.b32 	%r5740, %r5734, %r5733, 23;
	mov.b64 	%rd588, {%r5740, %r5739};
	xor.b64  	%rd589, %rd587, %rd588;
	xor.b64  	%rd590, %rd2268, %rd2269;
	and.b64  	%rd591, %rd2267, %rd590;
	xor.b64  	%rd592, %rd591, %rd2269;
	ld.const.u64 	%rd593, [k_sha512+120];
	add.s64 	%rd594, %rd593, %rd2254;
	add.s64 	%rd595, %rd594, %rd504;
	add.s64 	%rd596, %rd595, %rd592;
	add.s64 	%rd597, %rd596, %rd589;
	add.s64 	%rd2266, %rd597, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5741,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5742}, %rd2263;
	}
	shf.r.wrap.b32 	%r5743, %r5742, %r5741, 28;
	shf.r.wrap.b32 	%r5744, %r5741, %r5742, 28;
	mov.b64 	%rd598, {%r5744, %r5743};
	shf.l.wrap.b32 	%r5745, %r5741, %r5742, 30;
	shf.l.wrap.b32 	%r5746, %r5742, %r5741, 30;
	mov.b64 	%rd599, {%r5746, %r5745};
	xor.b64  	%rd600, %rd598, %rd599;
	shf.l.wrap.b32 	%r5747, %r5741, %r5742, 25;
	shf.l.wrap.b32 	%r5748, %r5742, %r5741, 25;
	mov.b64 	%rd601, {%r5748, %r5747};
	xor.b64  	%rd602, %rd600, %rd601;
	and.b64  	%rd603, %rd2263, %rd2264;
	xor.b64  	%rd604, %rd2263, %rd2264;
	and.b64  	%rd605, %rd604, %rd2265;
	or.b64  	%rd606, %rd605, %rd603;
	add.s64 	%rd607, %rd602, %rd606;
	add.s64 	%rd2262, %rd607, %rd597;
	mov.u32 	%r9176, 16;

BB0_92:
	shr.u64 	%rd608, %rd2255, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5749}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd2255;
	}
	shf.l.wrap.b32 	%r5751, %r5750, %r5749, 3;
	shf.l.wrap.b32 	%r5752, %r5749, %r5750, 3;
	mov.b64 	%rd609, {%r5752, %r5751};
	xor.b64  	%rd610, %rd609, %rd608;
	shf.r.wrap.b32 	%r5753, %r5749, %r5750, 19;
	shf.r.wrap.b32 	%r5754, %r5750, %r5749, 19;
	mov.b64 	%rd611, {%r5754, %r5753};
	xor.b64  	%rd612, %rd610, %rd611;
	shr.u64 	%rd613, %rd2271, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5755,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5756}, %rd2271;
	}
	shf.r.wrap.b32 	%r5757, %r5756, %r5755, 8;
	shf.r.wrap.b32 	%r5758, %r5755, %r5756, 8;
	mov.b64 	%rd614, {%r5758, %r5757};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.r.wrap.b32 	%r5759, %r5756, %r5755, 1;
	shf.r.wrap.b32 	%r5760, %r5755, %r5756, 1;
	mov.b64 	%rd616, {%r5760, %r5759};
	xor.b64  	%rd617, %rd615, %rd616;
	add.s64 	%rd618, %rd617, %rd2270;
	add.s64 	%rd619, %rd618, %rd2260;
	add.s64 	%rd2270, %rd619, %rd612;
	shr.u64 	%rd620, %rd2254, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd2254;
	}
	shf.l.wrap.b32 	%r5763, %r5762, %r5761, 3;
	shf.l.wrap.b32 	%r5764, %r5761, %r5762, 3;
	mov.b64 	%rd621, {%r5764, %r5763};
	xor.b64  	%rd622, %rd621, %rd620;
	shf.r.wrap.b32 	%r5765, %r5761, %r5762, 19;
	shf.r.wrap.b32 	%r5766, %r5762, %r5761, 19;
	mov.b64 	%rd623, {%r5766, %r5765};
	xor.b64  	%rd624, %rd622, %rd623;
	shr.u64 	%rd625, %rd2272, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5767,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5768}, %rd2272;
	}
	shf.r.wrap.b32 	%r5769, %r5768, %r5767, 8;
	shf.r.wrap.b32 	%r5770, %r5767, %r5768, 8;
	mov.b64 	%rd626, {%r5770, %r5769};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.r.wrap.b32 	%r5771, %r5768, %r5767, 1;
	shf.r.wrap.b32 	%r5772, %r5767, %r5768, 1;
	mov.b64 	%rd628, {%r5772, %r5771};
	xor.b64  	%rd629, %rd627, %rd628;
	add.s64 	%rd630, %rd629, %rd2271;
	add.s64 	%rd631, %rd630, %rd2259;
	add.s64 	%rd2271, %rd631, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5773,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5774}, %rd2270;
	}
	shf.r.wrap.b32 	%r5775, %r5774, %r5773, 19;
	shf.r.wrap.b32 	%r5776, %r5773, %r5774, 19;
	mov.b64 	%rd632, {%r5776, %r5775};
	shf.l.wrap.b32 	%r5777, %r5773, %r5774, 3;
	shf.l.wrap.b32 	%r5778, %r5774, %r5773, 3;
	mov.b64 	%rd633, {%r5778, %r5777};
	shr.u64 	%rd634, %rd2270, 6;
	xor.b64  	%rd635, %rd633, %rd634;
	xor.b64  	%rd636, %rd635, %rd632;
	shr.u64 	%rd637, %rd2273, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5779,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5780}, %rd2273;
	}
	shf.r.wrap.b32 	%r5781, %r5780, %r5779, 8;
	shf.r.wrap.b32 	%r5782, %r5779, %r5780, 8;
	mov.b64 	%rd638, {%r5782, %r5781};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.r.wrap.b32 	%r5783, %r5780, %r5779, 1;
	shf.r.wrap.b32 	%r5784, %r5779, %r5780, 1;
	mov.b64 	%rd640, {%r5784, %r5783};
	xor.b64  	%rd641, %rd639, %rd640;
	add.s64 	%rd642, %rd641, %rd2272;
	add.s64 	%rd643, %rd642, %rd2258;
	add.s64 	%rd2272, %rd643, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5785,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5786}, %rd2271;
	}
	shf.r.wrap.b32 	%r5787, %r5786, %r5785, 19;
	shf.r.wrap.b32 	%r5788, %r5785, %r5786, 19;
	mov.b64 	%rd644, {%r5788, %r5787};
	shf.l.wrap.b32 	%r5789, %r5785, %r5786, 3;
	shf.l.wrap.b32 	%r5790, %r5786, %r5785, 3;
	mov.b64 	%rd645, {%r5790, %r5789};
	shr.u64 	%rd646, %rd2271, 6;
	xor.b64  	%rd647, %rd645, %rd646;
	xor.b64  	%rd648, %rd647, %rd644;
	shr.u64 	%rd649, %rd2274, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5791,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5792}, %rd2274;
	}
	shf.r.wrap.b32 	%r5793, %r5792, %r5791, 8;
	shf.r.wrap.b32 	%r5794, %r5791, %r5792, 8;
	mov.b64 	%rd650, {%r5794, %r5793};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.r.wrap.b32 	%r5795, %r5792, %r5791, 1;
	shf.r.wrap.b32 	%r5796, %r5791, %r5792, 1;
	mov.b64 	%rd652, {%r5796, %r5795};
	xor.b64  	%rd653, %rd651, %rd652;
	add.s64 	%rd654, %rd653, %rd2273;
	add.s64 	%rd655, %rd654, %rd2257;
	add.s64 	%rd2273, %rd655, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5797,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5798}, %rd2272;
	}
	shf.r.wrap.b32 	%r5799, %r5798, %r5797, 19;
	shf.r.wrap.b32 	%r5800, %r5797, %r5798, 19;
	mov.b64 	%rd656, {%r5800, %r5799};
	shf.l.wrap.b32 	%r5801, %r5797, %r5798, 3;
	shf.l.wrap.b32 	%r5802, %r5798, %r5797, 3;
	mov.b64 	%rd657, {%r5802, %r5801};
	shr.u64 	%rd658, %rd2272, 6;
	xor.b64  	%rd659, %rd657, %rd658;
	xor.b64  	%rd660, %rd659, %rd656;
	shr.u64 	%rd661, %rd2275, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5803,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5804}, %rd2275;
	}
	shf.r.wrap.b32 	%r5805, %r5804, %r5803, 8;
	shf.r.wrap.b32 	%r5806, %r5803, %r5804, 8;
	mov.b64 	%rd662, {%r5806, %r5805};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.r.wrap.b32 	%r5807, %r5804, %r5803, 1;
	shf.r.wrap.b32 	%r5808, %r5803, %r5804, 1;
	mov.b64 	%rd664, {%r5808, %r5807};
	xor.b64  	%rd665, %rd663, %rd664;
	add.s64 	%rd666, %rd665, %rd2274;
	add.s64 	%rd667, %rd666, %rd2256;
	add.s64 	%rd2274, %rd667, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5809,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5810}, %rd2273;
	}
	shf.r.wrap.b32 	%r5811, %r5810, %r5809, 19;
	shf.r.wrap.b32 	%r5812, %r5809, %r5810, 19;
	mov.b64 	%rd668, {%r5812, %r5811};
	shf.l.wrap.b32 	%r5813, %r5809, %r5810, 3;
	shf.l.wrap.b32 	%r5814, %r5810, %r5809, 3;
	mov.b64 	%rd669, {%r5814, %r5813};
	shr.u64 	%rd670, %rd2273, 6;
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd671, %rd668;
	shr.u64 	%rd673, %rd2276, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5815,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5816}, %rd2276;
	}
	shf.r.wrap.b32 	%r5817, %r5816, %r5815, 8;
	shf.r.wrap.b32 	%r5818, %r5815, %r5816, 8;
	mov.b64 	%rd674, {%r5818, %r5817};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.r.wrap.b32 	%r5819, %r5816, %r5815, 1;
	shf.r.wrap.b32 	%r5820, %r5815, %r5816, 1;
	mov.b64 	%rd676, {%r5820, %r5819};
	xor.b64  	%rd677, %rd675, %rd676;
	add.s64 	%rd678, %rd677, %rd2275;
	add.s64 	%rd679, %rd678, %rd2255;
	add.s64 	%rd2275, %rd679, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5821,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5822}, %rd2274;
	}
	shf.r.wrap.b32 	%r5823, %r5822, %r5821, 19;
	shf.r.wrap.b32 	%r5824, %r5821, %r5822, 19;
	mov.b64 	%rd680, {%r5824, %r5823};
	shf.l.wrap.b32 	%r5825, %r5821, %r5822, 3;
	shf.l.wrap.b32 	%r5826, %r5822, %r5821, 3;
	mov.b64 	%rd681, {%r5826, %r5825};
	shr.u64 	%rd682, %rd2274, 6;
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd683, %rd680;
	shr.u64 	%rd685, %rd2277, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5827,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5828}, %rd2277;
	}
	shf.r.wrap.b32 	%r5829, %r5828, %r5827, 8;
	shf.r.wrap.b32 	%r5830, %r5827, %r5828, 8;
	mov.b64 	%rd686, {%r5830, %r5829};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.r.wrap.b32 	%r5831, %r5828, %r5827, 1;
	shf.r.wrap.b32 	%r5832, %r5827, %r5828, 1;
	mov.b64 	%rd688, {%r5832, %r5831};
	xor.b64  	%rd689, %rd687, %rd688;
	add.s64 	%rd690, %rd689, %rd2276;
	add.s64 	%rd691, %rd690, %rd2254;
	add.s64 	%rd2276, %rd691, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5833,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5834}, %rd2275;
	}
	shf.r.wrap.b32 	%r5835, %r5834, %r5833, 19;
	shf.r.wrap.b32 	%r5836, %r5833, %r5834, 19;
	mov.b64 	%rd692, {%r5836, %r5835};
	shf.l.wrap.b32 	%r5837, %r5833, %r5834, 3;
	shf.l.wrap.b32 	%r5838, %r5834, %r5833, 3;
	mov.b64 	%rd693, {%r5838, %r5837};
	shr.u64 	%rd694, %rd2275, 6;
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd695, %rd692;
	shr.u64 	%rd697, %rd2261, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5839,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5840}, %rd2261;
	}
	shf.r.wrap.b32 	%r5841, %r5840, %r5839, 8;
	shf.r.wrap.b32 	%r5842, %r5839, %r5840, 8;
	mov.b64 	%rd698, {%r5842, %r5841};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.r.wrap.b32 	%r5843, %r5840, %r5839, 1;
	shf.r.wrap.b32 	%r5844, %r5839, %r5840, 1;
	mov.b64 	%rd700, {%r5844, %r5843};
	xor.b64  	%rd701, %rd699, %rd700;
	add.s64 	%rd702, %rd701, %rd2277;
	add.s64 	%rd703, %rd702, %rd2270;
	add.s64 	%rd2277, %rd703, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5845,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5846}, %rd2276;
	}
	shf.r.wrap.b32 	%r5847, %r5846, %r5845, 19;
	shf.r.wrap.b32 	%r5848, %r5845, %r5846, 19;
	mov.b64 	%rd704, {%r5848, %r5847};
	shf.l.wrap.b32 	%r5849, %r5845, %r5846, 3;
	shf.l.wrap.b32 	%r5850, %r5846, %r5845, 3;
	mov.b64 	%rd705, {%r5850, %r5849};
	shr.u64 	%rd706, %rd2276, 6;
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd707, %rd704;
	shr.u64 	%rd709, %rd2260, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5851,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5852}, %rd2260;
	}
	shf.r.wrap.b32 	%r5853, %r5852, %r5851, 8;
	shf.r.wrap.b32 	%r5854, %r5851, %r5852, 8;
	mov.b64 	%rd710, {%r5854, %r5853};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.r.wrap.b32 	%r5855, %r5852, %r5851, 1;
	shf.r.wrap.b32 	%r5856, %r5851, %r5852, 1;
	mov.b64 	%rd712, {%r5856, %r5855};
	xor.b64  	%rd713, %rd711, %rd712;
	add.s64 	%rd714, %rd713, %rd2261;
	add.s64 	%rd715, %rd714, %rd2271;
	add.s64 	%rd2261, %rd715, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5857,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5858}, %rd2277;
	}
	shf.r.wrap.b32 	%r5859, %r5858, %r5857, 19;
	shf.r.wrap.b32 	%r5860, %r5857, %r5858, 19;
	mov.b64 	%rd716, {%r5860, %r5859};
	shf.l.wrap.b32 	%r5861, %r5857, %r5858, 3;
	shf.l.wrap.b32 	%r5862, %r5858, %r5857, 3;
	mov.b64 	%rd717, {%r5862, %r5861};
	shr.u64 	%rd718, %rd2277, 6;
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd719, %rd716;
	shr.u64 	%rd721, %rd2259, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5863,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5864}, %rd2259;
	}
	shf.r.wrap.b32 	%r5865, %r5864, %r5863, 8;
	shf.r.wrap.b32 	%r5866, %r5863, %r5864, 8;
	mov.b64 	%rd722, {%r5866, %r5865};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.r.wrap.b32 	%r5867, %r5864, %r5863, 1;
	shf.r.wrap.b32 	%r5868, %r5863, %r5864, 1;
	mov.b64 	%rd724, {%r5868, %r5867};
	xor.b64  	%rd725, %rd723, %rd724;
	add.s64 	%rd726, %rd725, %rd2260;
	add.s64 	%rd727, %rd726, %rd2272;
	add.s64 	%rd2260, %rd727, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd2261;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 19;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 19;
	mov.b64 	%rd728, {%r5872, %r5871};
	shf.l.wrap.b32 	%r5873, %r5869, %r5870, 3;
	shf.l.wrap.b32 	%r5874, %r5870, %r5869, 3;
	mov.b64 	%rd729, {%r5874, %r5873};
	shr.u64 	%rd730, %rd2261, 6;
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd731, %rd728;
	shr.u64 	%rd733, %rd2258, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5875,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5876}, %rd2258;
	}
	shf.r.wrap.b32 	%r5877, %r5876, %r5875, 8;
	shf.r.wrap.b32 	%r5878, %r5875, %r5876, 8;
	mov.b64 	%rd734, {%r5878, %r5877};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.r.wrap.b32 	%r5879, %r5876, %r5875, 1;
	shf.r.wrap.b32 	%r5880, %r5875, %r5876, 1;
	mov.b64 	%rd736, {%r5880, %r5879};
	xor.b64  	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd737, %rd2259;
	add.s64 	%rd739, %rd738, %rd2273;
	add.s64 	%rd2259, %rd739, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5881,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5882}, %rd2260;
	}
	shf.r.wrap.b32 	%r5883, %r5882, %r5881, 19;
	shf.r.wrap.b32 	%r5884, %r5881, %r5882, 19;
	mov.b64 	%rd740, {%r5884, %r5883};
	shf.l.wrap.b32 	%r5885, %r5881, %r5882, 3;
	shf.l.wrap.b32 	%r5886, %r5882, %r5881, 3;
	mov.b64 	%rd741, {%r5886, %r5885};
	shr.u64 	%rd742, %rd2260, 6;
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd743, %rd740;
	shr.u64 	%rd745, %rd2257, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5887,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5888}, %rd2257;
	}
	shf.r.wrap.b32 	%r5889, %r5888, %r5887, 8;
	shf.r.wrap.b32 	%r5890, %r5887, %r5888, 8;
	mov.b64 	%rd746, {%r5890, %r5889};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.r.wrap.b32 	%r5891, %r5888, %r5887, 1;
	shf.r.wrap.b32 	%r5892, %r5887, %r5888, 1;
	mov.b64 	%rd748, {%r5892, %r5891};
	xor.b64  	%rd749, %rd747, %rd748;
	add.s64 	%rd750, %rd749, %rd2258;
	add.s64 	%rd751, %rd750, %rd2274;
	add.s64 	%rd2258, %rd751, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5893,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5894}, %rd2259;
	}
	shf.r.wrap.b32 	%r5895, %r5894, %r5893, 19;
	shf.r.wrap.b32 	%r5896, %r5893, %r5894, 19;
	mov.b64 	%rd752, {%r5896, %r5895};
	shf.l.wrap.b32 	%r5897, %r5893, %r5894, 3;
	shf.l.wrap.b32 	%r5898, %r5894, %r5893, 3;
	mov.b64 	%rd753, {%r5898, %r5897};
	shr.u64 	%rd754, %rd2259, 6;
	xor.b64  	%rd755, %rd753, %rd754;
	xor.b64  	%rd756, %rd755, %rd752;
	shr.u64 	%rd757, %rd2256, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5899,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5900}, %rd2256;
	}
	shf.r.wrap.b32 	%r5901, %r5900, %r5899, 8;
	shf.r.wrap.b32 	%r5902, %r5899, %r5900, 8;
	mov.b64 	%rd758, {%r5902, %r5901};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.r.wrap.b32 	%r5903, %r5900, %r5899, 1;
	shf.r.wrap.b32 	%r5904, %r5899, %r5900, 1;
	mov.b64 	%rd760, {%r5904, %r5903};
	xor.b64  	%rd761, %rd759, %rd760;
	add.s64 	%rd762, %rd761, %rd2257;
	add.s64 	%rd763, %rd762, %rd2275;
	add.s64 	%rd2257, %rd763, %rd756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5905,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5906}, %rd2258;
	}
	shf.r.wrap.b32 	%r5907, %r5906, %r5905, 19;
	shf.r.wrap.b32 	%r5908, %r5905, %r5906, 19;
	mov.b64 	%rd764, {%r5908, %r5907};
	shf.l.wrap.b32 	%r5909, %r5905, %r5906, 3;
	shf.l.wrap.b32 	%r5910, %r5906, %r5905, 3;
	mov.b64 	%rd765, {%r5910, %r5909};
	shr.u64 	%rd766, %rd2258, 6;
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd767, %rd764;
	shr.u64 	%rd769, %rd2255, 7;
	shf.r.wrap.b32 	%r5911, %r5749, %r5750, 8;
	shf.r.wrap.b32 	%r5912, %r5750, %r5749, 8;
	mov.b64 	%rd770, {%r5912, %r5911};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.r.wrap.b32 	%r5913, %r5749, %r5750, 1;
	shf.r.wrap.b32 	%r5914, %r5750, %r5749, 1;
	mov.b64 	%rd772, {%r5914, %r5913};
	xor.b64  	%rd773, %rd771, %rd772;
	add.s64 	%rd774, %rd773, %rd2256;
	add.s64 	%rd775, %rd774, %rd2276;
	add.s64 	%rd2256, %rd775, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5915,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5916}, %rd2257;
	}
	shf.r.wrap.b32 	%r5917, %r5916, %r5915, 19;
	shf.r.wrap.b32 	%r5918, %r5915, %r5916, 19;
	mov.b64 	%rd776, {%r5918, %r5917};
	shf.l.wrap.b32 	%r5919, %r5915, %r5916, 3;
	shf.l.wrap.b32 	%r5920, %r5916, %r5915, 3;
	mov.b64 	%rd777, {%r5920, %r5919};
	shr.u64 	%rd778, %rd2257, 6;
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd779, %rd776;
	shr.u64 	%rd781, %rd2254, 7;
	shf.r.wrap.b32 	%r5921, %r5761, %r5762, 8;
	shf.r.wrap.b32 	%r5922, %r5762, %r5761, 8;
	mov.b64 	%rd782, {%r5922, %r5921};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.r.wrap.b32 	%r5923, %r5761, %r5762, 1;
	shf.r.wrap.b32 	%r5924, %r5762, %r5761, 1;
	mov.b64 	%rd784, {%r5924, %r5923};
	xor.b64  	%rd785, %rd783, %rd784;
	add.s64 	%rd786, %rd785, %rd2255;
	add.s64 	%rd787, %rd786, %rd2277;
	add.s64 	%rd2255, %rd787, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd2256;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 19;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 19;
	mov.b64 	%rd788, {%r5928, %r5927};
	shf.l.wrap.b32 	%r5929, %r5925, %r5926, 3;
	shf.l.wrap.b32 	%r5930, %r5926, %r5925, 3;
	mov.b64 	%rd789, {%r5930, %r5929};
	shr.u64 	%rd790, %rd2256, 6;
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd791, %rd788;
	shf.r.wrap.b32 	%r5931, %r5774, %r5773, 1;
	shf.r.wrap.b32 	%r5932, %r5773, %r5774, 1;
	mov.b64 	%rd793, {%r5932, %r5931};
	shf.r.wrap.b32 	%r5933, %r5774, %r5773, 8;
	shf.r.wrap.b32 	%r5934, %r5773, %r5774, 8;
	mov.b64 	%rd794, {%r5934, %r5933};
	shr.u64 	%rd795, %rd2270, 7;
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd796, %rd793;
	add.s64 	%rd798, %rd797, %rd2254;
	add.s64 	%rd799, %rd798, %rd2261;
	add.s64 	%rd2254, %rd799, %rd792;
	mul.wide.s32 	%rd800, %r9176, 8;
	mov.u64 	%rd801, k_sha512;
	add.s64 	%rd802, %rd801, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5935,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5936}, %rd2266;
	}
	shf.r.wrap.b32 	%r5937, %r5936, %r5935, 18;
	shf.r.wrap.b32 	%r5938, %r5935, %r5936, 18;
	mov.b64 	%rd803, {%r5938, %r5937};
	shf.r.wrap.b32 	%r5939, %r5936, %r5935, 14;
	shf.r.wrap.b32 	%r5940, %r5935, %r5936, 14;
	mov.b64 	%rd804, {%r5940, %r5939};
	xor.b64  	%rd805, %rd804, %rd803;
	shf.l.wrap.b32 	%r5941, %r5935, %r5936, 23;
	shf.l.wrap.b32 	%r5942, %r5936, %r5935, 23;
	mov.b64 	%rd806, {%r5942, %r5941};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd2267, %rd2268;
	and.b64  	%rd809, %rd2266, %rd808;
	xor.b64  	%rd810, %rd809, %rd2268;
	add.s64 	%rd811, %rd810, %rd2269;
	add.s64 	%rd812, %rd811, %rd807;
	add.s64 	%rd813, %rd812, %rd2270;
	ld.const.u64 	%rd814, [%rd802];
	add.s64 	%rd815, %rd813, %rd814;
	add.s64 	%rd816, %rd815, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5944,%dummy}, %rd2262;
	}
	shf.l.wrap.b32 	%r5945, %r5944, %r5943, 30;
	shf.l.wrap.b32 	%r5946, %r5943, %r5944, 30;
	mov.b64 	%rd817, {%r5946, %r5945};
	shf.r.wrap.b32 	%r5947, %r5943, %r5944, 28;
	shf.r.wrap.b32 	%r5948, %r5944, %r5943, 28;
	mov.b64 	%rd818, {%r5948, %r5947};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r5949, %r5944, %r5943, 25;
	shf.l.wrap.b32 	%r5950, %r5943, %r5944, 25;
	mov.b64 	%rd820, {%r5950, %r5949};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd2262, %rd2263;
	and.b64  	%rd823, %rd822, %rd2264;
	and.b64  	%rd824, %rd2262, %rd2263;
	or.b64  	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd821, %rd825;
	add.s64 	%rd827, %rd826, %rd815;
	add.s32 	%r5951, %r9176, 1;
	mul.wide.s32 	%rd828, %r5951, 8;
	add.s64 	%rd829, %rd801, %rd828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5952,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd816;
	}
	shf.r.wrap.b32 	%r5954, %r5953, %r5952, 14;
	shf.r.wrap.b32 	%r5955, %r5952, %r5953, 14;
	mov.b64 	%rd830, {%r5955, %r5954};
	shf.r.wrap.b32 	%r5956, %r5953, %r5952, 18;
	shf.r.wrap.b32 	%r5957, %r5952, %r5953, 18;
	mov.b64 	%rd831, {%r5957, %r5956};
	xor.b64  	%rd832, %rd830, %rd831;
	shf.l.wrap.b32 	%r5958, %r5952, %r5953, 23;
	shf.l.wrap.b32 	%r5959, %r5953, %r5952, 23;
	mov.b64 	%rd833, {%r5959, %r5958};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd2266, %rd2267;
	and.b64  	%rd836, %rd816, %rd835;
	xor.b64  	%rd837, %rd836, %rd2267;
	add.s64 	%rd838, %rd2271, %rd2268;
	ld.const.u64 	%rd839, [%rd829];
	add.s64 	%rd840, %rd838, %rd839;
	add.s64 	%rd841, %rd840, %rd837;
	add.s64 	%rd842, %rd841, %rd834;
	add.s64 	%rd843, %rd842, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5960,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd827;
	}
	shf.r.wrap.b32 	%r5962, %r5961, %r5960, 28;
	shf.r.wrap.b32 	%r5963, %r5960, %r5961, 28;
	mov.b64 	%rd844, {%r5963, %r5962};
	shf.l.wrap.b32 	%r5964, %r5960, %r5961, 30;
	shf.l.wrap.b32 	%r5965, %r5961, %r5960, 30;
	mov.b64 	%rd845, {%r5965, %r5964};
	xor.b64  	%rd846, %rd844, %rd845;
	shf.l.wrap.b32 	%r5966, %r5960, %r5961, 25;
	shf.l.wrap.b32 	%r5967, %r5961, %r5960, 25;
	mov.b64 	%rd847, {%r5967, %r5966};
	xor.b64  	%rd848, %rd846, %rd847;
	and.b64  	%rd849, %rd827, %rd2262;
	xor.b64  	%rd850, %rd827, %rd2262;
	and.b64  	%rd851, %rd850, %rd2263;
	or.b64  	%rd852, %rd851, %rd849;
	add.s64 	%rd853, %rd848, %rd852;
	add.s64 	%rd854, %rd853, %rd842;
	add.s32 	%r5968, %r9176, 2;
	mul.wide.s32 	%rd855, %r5968, 8;
	add.s64 	%rd856, %rd801, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5969,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5970}, %rd843;
	}
	shf.r.wrap.b32 	%r5971, %r5970, %r5969, 14;
	shf.r.wrap.b32 	%r5972, %r5969, %r5970, 14;
	mov.b64 	%rd857, {%r5972, %r5971};
	shf.r.wrap.b32 	%r5973, %r5970, %r5969, 18;
	shf.r.wrap.b32 	%r5974, %r5969, %r5970, 18;
	mov.b64 	%rd858, {%r5974, %r5973};
	xor.b64  	%rd859, %rd857, %rd858;
	shf.l.wrap.b32 	%r5975, %r5969, %r5970, 23;
	shf.l.wrap.b32 	%r5976, %r5970, %r5969, 23;
	mov.b64 	%rd860, {%r5976, %r5975};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd816, %rd2266;
	and.b64  	%rd863, %rd843, %rd862;
	xor.b64  	%rd864, %rd863, %rd2266;
	add.s64 	%rd865, %rd2272, %rd2267;
	ld.const.u64 	%rd866, [%rd856];
	add.s64 	%rd867, %rd865, %rd866;
	add.s64 	%rd868, %rd867, %rd864;
	add.s64 	%rd869, %rd868, %rd861;
	add.s64 	%rd870, %rd869, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5977,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5978}, %rd854;
	}
	shf.r.wrap.b32 	%r5979, %r5978, %r5977, 28;
	shf.r.wrap.b32 	%r5980, %r5977, %r5978, 28;
	mov.b64 	%rd871, {%r5980, %r5979};
	shf.l.wrap.b32 	%r5981, %r5977, %r5978, 30;
	shf.l.wrap.b32 	%r5982, %r5978, %r5977, 30;
	mov.b64 	%rd872, {%r5982, %r5981};
	xor.b64  	%rd873, %rd871, %rd872;
	shf.l.wrap.b32 	%r5983, %r5977, %r5978, 25;
	shf.l.wrap.b32 	%r5984, %r5978, %r5977, 25;
	mov.b64 	%rd874, {%r5984, %r5983};
	xor.b64  	%rd875, %rd873, %rd874;
	and.b64  	%rd876, %rd854, %rd827;
	xor.b64  	%rd877, %rd854, %rd827;
	and.b64  	%rd878, %rd877, %rd2262;
	or.b64  	%rd879, %rd878, %rd876;
	add.s64 	%rd880, %rd875, %rd879;
	add.s64 	%rd881, %rd880, %rd869;
	add.s32 	%r5985, %r9176, 3;
	mul.wide.s32 	%rd882, %r5985, 8;
	add.s64 	%rd883, %rd801, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd870;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 14;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 14;
	mov.b64 	%rd884, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5987, %r5986, 18;
	shf.r.wrap.b32 	%r5991, %r5986, %r5987, 18;
	mov.b64 	%rd885, {%r5991, %r5990};
	xor.b64  	%rd886, %rd884, %rd885;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 23;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 23;
	mov.b64 	%rd887, {%r5993, %r5992};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd843, %rd816;
	and.b64  	%rd890, %rd870, %rd889;
	xor.b64  	%rd891, %rd890, %rd816;
	add.s64 	%rd892, %rd2273, %rd2266;
	ld.const.u64 	%rd893, [%rd883];
	add.s64 	%rd894, %rd892, %rd893;
	add.s64 	%rd895, %rd894, %rd891;
	add.s64 	%rd896, %rd895, %rd888;
	add.s64 	%rd897, %rd896, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd881;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 28;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 28;
	mov.b64 	%rd898, {%r5997, %r5996};
	shf.l.wrap.b32 	%r5998, %r5994, %r5995, 30;
	shf.l.wrap.b32 	%r5999, %r5995, %r5994, 30;
	mov.b64 	%rd899, {%r5999, %r5998};
	xor.b64  	%rd900, %rd898, %rd899;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 25;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 25;
	mov.b64 	%rd901, {%r6001, %r6000};
	xor.b64  	%rd902, %rd900, %rd901;
	and.b64  	%rd903, %rd881, %rd854;
	xor.b64  	%rd904, %rd881, %rd854;
	and.b64  	%rd905, %rd904, %rd827;
	or.b64  	%rd906, %rd905, %rd903;
	add.s64 	%rd907, %rd902, %rd906;
	add.s64 	%rd908, %rd907, %rd896;
	add.s32 	%r6002, %r9176, 4;
	mul.wide.s32 	%rd909, %r6002, 8;
	add.s64 	%rd910, %rd801, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6003,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6004}, %rd897;
	}
	shf.r.wrap.b32 	%r6005, %r6004, %r6003, 14;
	shf.r.wrap.b32 	%r6006, %r6003, %r6004, 14;
	mov.b64 	%rd911, {%r6006, %r6005};
	shf.r.wrap.b32 	%r6007, %r6004, %r6003, 18;
	shf.r.wrap.b32 	%r6008, %r6003, %r6004, 18;
	mov.b64 	%rd912, {%r6008, %r6007};
	xor.b64  	%rd913, %rd911, %rd912;
	shf.l.wrap.b32 	%r6009, %r6003, %r6004, 23;
	shf.l.wrap.b32 	%r6010, %r6004, %r6003, 23;
	mov.b64 	%rd914, {%r6010, %r6009};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd870, %rd843;
	and.b64  	%rd917, %rd897, %rd916;
	xor.b64  	%rd918, %rd917, %rd843;
	add.s64 	%rd919, %rd816, %rd2274;
	ld.const.u64 	%rd920, [%rd910];
	add.s64 	%rd921, %rd919, %rd920;
	add.s64 	%rd922, %rd921, %rd918;
	add.s64 	%rd923, %rd922, %rd915;
	add.s64 	%rd924, %rd923, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6011,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6012}, %rd908;
	}
	shf.r.wrap.b32 	%r6013, %r6012, %r6011, 28;
	shf.r.wrap.b32 	%r6014, %r6011, %r6012, 28;
	mov.b64 	%rd925, {%r6014, %r6013};
	shf.l.wrap.b32 	%r6015, %r6011, %r6012, 30;
	shf.l.wrap.b32 	%r6016, %r6012, %r6011, 30;
	mov.b64 	%rd926, {%r6016, %r6015};
	xor.b64  	%rd927, %rd925, %rd926;
	shf.l.wrap.b32 	%r6017, %r6011, %r6012, 25;
	shf.l.wrap.b32 	%r6018, %r6012, %r6011, 25;
	mov.b64 	%rd928, {%r6018, %r6017};
	xor.b64  	%rd929, %rd927, %rd928;
	and.b64  	%rd930, %rd908, %rd881;
	xor.b64  	%rd931, %rd908, %rd881;
	and.b64  	%rd932, %rd931, %rd854;
	or.b64  	%rd933, %rd932, %rd930;
	add.s64 	%rd934, %rd929, %rd933;
	add.s64 	%rd935, %rd934, %rd923;
	add.s32 	%r6019, %r9176, 5;
	mul.wide.s32 	%rd936, %r6019, 8;
	add.s64 	%rd937, %rd801, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd924;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 14;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 14;
	mov.b64 	%rd938, {%r6023, %r6022};
	shf.r.wrap.b32 	%r6024, %r6021, %r6020, 18;
	shf.r.wrap.b32 	%r6025, %r6020, %r6021, 18;
	mov.b64 	%rd939, {%r6025, %r6024};
	xor.b64  	%rd940, %rd938, %rd939;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 23;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 23;
	mov.b64 	%rd941, {%r6027, %r6026};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd897, %rd870;
	and.b64  	%rd944, %rd924, %rd943;
	xor.b64  	%rd945, %rd944, %rd870;
	ld.const.u64 	%rd946, [%rd937];
	add.s64 	%rd947, %rd946, %rd2275;
	add.s64 	%rd948, %rd947, %rd843;
	add.s64 	%rd949, %rd948, %rd945;
	add.s64 	%rd950, %rd949, %rd942;
	add.s64 	%rd951, %rd950, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd935;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 28;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 28;
	mov.b64 	%rd952, {%r6031, %r6030};
	shf.l.wrap.b32 	%r6032, %r6028, %r6029, 30;
	shf.l.wrap.b32 	%r6033, %r6029, %r6028, 30;
	mov.b64 	%rd953, {%r6033, %r6032};
	xor.b64  	%rd954, %rd952, %rd953;
	shf.l.wrap.b32 	%r6034, %r6028, %r6029, 25;
	shf.l.wrap.b32 	%r6035, %r6029, %r6028, 25;
	mov.b64 	%rd955, {%r6035, %r6034};
	xor.b64  	%rd956, %rd954, %rd955;
	and.b64  	%rd957, %rd935, %rd908;
	xor.b64  	%rd958, %rd935, %rd908;
	and.b64  	%rd959, %rd958, %rd881;
	or.b64  	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd956, %rd960;
	add.s64 	%rd962, %rd961, %rd950;
	add.s32 	%r6036, %r9176, 6;
	mul.wide.s32 	%rd963, %r6036, 8;
	add.s64 	%rd964, %rd801, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6037,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6038}, %rd951;
	}
	shf.r.wrap.b32 	%r6039, %r6038, %r6037, 14;
	shf.r.wrap.b32 	%r6040, %r6037, %r6038, 14;
	mov.b64 	%rd965, {%r6040, %r6039};
	shf.r.wrap.b32 	%r6041, %r6038, %r6037, 18;
	shf.r.wrap.b32 	%r6042, %r6037, %r6038, 18;
	mov.b64 	%rd966, {%r6042, %r6041};
	xor.b64  	%rd967, %rd965, %rd966;
	shf.l.wrap.b32 	%r6043, %r6037, %r6038, 23;
	shf.l.wrap.b32 	%r6044, %r6038, %r6037, 23;
	mov.b64 	%rd968, {%r6044, %r6043};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd924, %rd897;
	and.b64  	%rd971, %rd951, %rd970;
	xor.b64  	%rd972, %rd971, %rd897;
	ld.const.u64 	%rd973, [%rd964];
	add.s64 	%rd974, %rd973, %rd2276;
	add.s64 	%rd975, %rd974, %rd870;
	add.s64 	%rd976, %rd975, %rd972;
	add.s64 	%rd977, %rd976, %rd969;
	add.s64 	%rd978, %rd977, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6045,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6046}, %rd962;
	}
	shf.r.wrap.b32 	%r6047, %r6046, %r6045, 28;
	shf.r.wrap.b32 	%r6048, %r6045, %r6046, 28;
	mov.b64 	%rd979, {%r6048, %r6047};
	shf.l.wrap.b32 	%r6049, %r6045, %r6046, 30;
	shf.l.wrap.b32 	%r6050, %r6046, %r6045, 30;
	mov.b64 	%rd980, {%r6050, %r6049};
	xor.b64  	%rd981, %rd979, %rd980;
	shf.l.wrap.b32 	%r6051, %r6045, %r6046, 25;
	shf.l.wrap.b32 	%r6052, %r6046, %r6045, 25;
	mov.b64 	%rd982, {%r6052, %r6051};
	xor.b64  	%rd983, %rd981, %rd982;
	and.b64  	%rd984, %rd962, %rd935;
	xor.b64  	%rd985, %rd962, %rd935;
	and.b64  	%rd986, %rd985, %rd908;
	or.b64  	%rd987, %rd986, %rd984;
	add.s64 	%rd988, %rd983, %rd987;
	add.s64 	%rd989, %rd988, %rd977;
	add.s32 	%r6053, %r9176, 7;
	mul.wide.s32 	%rd990, %r6053, 8;
	add.s64 	%rd991, %rd801, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6055}, %rd978;
	}
	shf.r.wrap.b32 	%r6056, %r6055, %r6054, 14;
	shf.r.wrap.b32 	%r6057, %r6054, %r6055, 14;
	mov.b64 	%rd992, {%r6057, %r6056};
	shf.r.wrap.b32 	%r6058, %r6055, %r6054, 18;
	shf.r.wrap.b32 	%r6059, %r6054, %r6055, 18;
	mov.b64 	%rd993, {%r6059, %r6058};
	xor.b64  	%rd994, %rd992, %rd993;
	shf.l.wrap.b32 	%r6060, %r6054, %r6055, 23;
	shf.l.wrap.b32 	%r6061, %r6055, %r6054, 23;
	mov.b64 	%rd995, {%r6061, %r6060};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd951, %rd924;
	and.b64  	%rd998, %rd978, %rd997;
	xor.b64  	%rd999, %rd998, %rd924;
	ld.const.u64 	%rd1000, [%rd991];
	add.s64 	%rd1001, %rd1000, %rd2277;
	add.s64 	%rd1002, %rd1001, %rd897;
	add.s64 	%rd1003, %rd1002, %rd999;
	add.s64 	%rd1004, %rd1003, %rd996;
	add.s64 	%rd1005, %rd1004, %rd908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6063}, %rd989;
	}
	shf.r.wrap.b32 	%r6064, %r6063, %r6062, 28;
	shf.r.wrap.b32 	%r6065, %r6062, %r6063, 28;
	mov.b64 	%rd1006, {%r6065, %r6064};
	shf.l.wrap.b32 	%r6066, %r6062, %r6063, 30;
	shf.l.wrap.b32 	%r6067, %r6063, %r6062, 30;
	mov.b64 	%rd1007, {%r6067, %r6066};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r6068, %r6062, %r6063, 25;
	shf.l.wrap.b32 	%r6069, %r6063, %r6062, 25;
	mov.b64 	%rd1009, {%r6069, %r6068};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	and.b64  	%rd1011, %rd989, %rd962;
	xor.b64  	%rd1012, %rd989, %rd962;
	and.b64  	%rd1013, %rd1012, %rd935;
	or.b64  	%rd1014, %rd1013, %rd1011;
	add.s64 	%rd1015, %rd1010, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1004;
	add.s32 	%r6070, %r9176, 8;
	mul.wide.s32 	%rd1017, %r6070, 8;
	add.s64 	%rd1018, %rd801, %rd1017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6071,%dummy}, %rd1005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6072}, %rd1005;
	}
	shf.r.wrap.b32 	%r6073, %r6072, %r6071, 14;
	shf.r.wrap.b32 	%r6074, %r6071, %r6072, 14;
	mov.b64 	%rd1019, {%r6074, %r6073};
	shf.r.wrap.b32 	%r6075, %r6072, %r6071, 18;
	shf.r.wrap.b32 	%r6076, %r6071, %r6072, 18;
	mov.b64 	%rd1020, {%r6076, %r6075};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	shf.l.wrap.b32 	%r6077, %r6071, %r6072, 23;
	shf.l.wrap.b32 	%r6078, %r6072, %r6071, 23;
	mov.b64 	%rd1022, {%r6078, %r6077};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd978, %rd951;
	and.b64  	%rd1025, %rd1005, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd951;
	ld.const.u64 	%rd1027, [%rd1018];
	add.s64 	%rd1028, %rd1027, %rd2261;
	add.s64 	%rd1029, %rd1028, %rd924;
	add.s64 	%rd1030, %rd1029, %rd1026;
	add.s64 	%rd1031, %rd1030, %rd1023;
	add.s64 	%rd1032, %rd1031, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6079,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6080}, %rd1016;
	}
	shf.r.wrap.b32 	%r6081, %r6080, %r6079, 28;
	shf.r.wrap.b32 	%r6082, %r6079, %r6080, 28;
	mov.b64 	%rd1033, {%r6082, %r6081};
	shf.l.wrap.b32 	%r6083, %r6079, %r6080, 30;
	shf.l.wrap.b32 	%r6084, %r6080, %r6079, 30;
	mov.b64 	%rd1034, {%r6084, %r6083};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	shf.l.wrap.b32 	%r6085, %r6079, %r6080, 25;
	shf.l.wrap.b32 	%r6086, %r6080, %r6079, 25;
	mov.b64 	%rd1036, {%r6086, %r6085};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	and.b64  	%rd1038, %rd1016, %rd989;
	xor.b64  	%rd1039, %rd1016, %rd989;
	and.b64  	%rd1040, %rd1039, %rd962;
	or.b64  	%rd1041, %rd1040, %rd1038;
	add.s64 	%rd1042, %rd1037, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1031;
	add.s32 	%r6087, %r9176, 9;
	mul.wide.s32 	%rd1044, %r6087, 8;
	add.s64 	%rd1045, %rd801, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6088,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6089}, %rd1032;
	}
	shf.r.wrap.b32 	%r6090, %r6089, %r6088, 14;
	shf.r.wrap.b32 	%r6091, %r6088, %r6089, 14;
	mov.b64 	%rd1046, {%r6091, %r6090};
	shf.r.wrap.b32 	%r6092, %r6089, %r6088, 18;
	shf.r.wrap.b32 	%r6093, %r6088, %r6089, 18;
	mov.b64 	%rd1047, {%r6093, %r6092};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	shf.l.wrap.b32 	%r6094, %r6088, %r6089, 23;
	shf.l.wrap.b32 	%r6095, %r6089, %r6088, 23;
	mov.b64 	%rd1049, {%r6095, %r6094};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	xor.b64  	%rd1051, %rd1005, %rd978;
	and.b64  	%rd1052, %rd1032, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd978;
	ld.const.u64 	%rd1054, [%rd1045];
	add.s64 	%rd1055, %rd1054, %rd2260;
	add.s64 	%rd1056, %rd1055, %rd951;
	add.s64 	%rd1057, %rd1056, %rd1053;
	add.s64 	%rd1058, %rd1057, %rd1050;
	add.s64 	%rd1059, %rd1058, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6096,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6097}, %rd1043;
	}
	shf.r.wrap.b32 	%r6098, %r6097, %r6096, 28;
	shf.r.wrap.b32 	%r6099, %r6096, %r6097, 28;
	mov.b64 	%rd1060, {%r6099, %r6098};
	shf.l.wrap.b32 	%r6100, %r6096, %r6097, 30;
	shf.l.wrap.b32 	%r6101, %r6097, %r6096, 30;
	mov.b64 	%rd1061, {%r6101, %r6100};
	xor.b64  	%rd1062, %rd1060, %rd1061;
	shf.l.wrap.b32 	%r6102, %r6096, %r6097, 25;
	shf.l.wrap.b32 	%r6103, %r6097, %r6096, 25;
	mov.b64 	%rd1063, {%r6103, %r6102};
	xor.b64  	%rd1064, %rd1062, %rd1063;
	and.b64  	%rd1065, %rd1043, %rd1016;
	xor.b64  	%rd1066, %rd1043, %rd1016;
	and.b64  	%rd1067, %rd1066, %rd989;
	or.b64  	%rd1068, %rd1067, %rd1065;
	add.s64 	%rd1069, %rd1064, %rd1068;
	add.s64 	%rd1070, %rd1069, %rd1058;
	add.s32 	%r6104, %r9176, 10;
	mul.wide.s32 	%rd1071, %r6104, 8;
	add.s64 	%rd1072, %rd801, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6105,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6106}, %rd1059;
	}
	shf.r.wrap.b32 	%r6107, %r6106, %r6105, 14;
	shf.r.wrap.b32 	%r6108, %r6105, %r6106, 14;
	mov.b64 	%rd1073, {%r6108, %r6107};
	shf.r.wrap.b32 	%r6109, %r6106, %r6105, 18;
	shf.r.wrap.b32 	%r6110, %r6105, %r6106, 18;
	mov.b64 	%rd1074, {%r6110, %r6109};
	xor.b64  	%rd1075, %rd1073, %rd1074;
	shf.l.wrap.b32 	%r6111, %r6105, %r6106, 23;
	shf.l.wrap.b32 	%r6112, %r6106, %r6105, 23;
	mov.b64 	%rd1076, {%r6112, %r6111};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	xor.b64  	%rd1078, %rd1032, %rd1005;
	and.b64  	%rd1079, %rd1059, %rd1078;
	xor.b64  	%rd1080, %rd1079, %rd1005;
	ld.const.u64 	%rd1081, [%rd1072];
	add.s64 	%rd1082, %rd1081, %rd2259;
	add.s64 	%rd1083, %rd1082, %rd978;
	add.s64 	%rd1084, %rd1083, %rd1080;
	add.s64 	%rd1085, %rd1084, %rd1077;
	add.s64 	%rd1086, %rd1085, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6113,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6114}, %rd1070;
	}
	shf.r.wrap.b32 	%r6115, %r6114, %r6113, 28;
	shf.r.wrap.b32 	%r6116, %r6113, %r6114, 28;
	mov.b64 	%rd1087, {%r6116, %r6115};
	shf.l.wrap.b32 	%r6117, %r6113, %r6114, 30;
	shf.l.wrap.b32 	%r6118, %r6114, %r6113, 30;
	mov.b64 	%rd1088, {%r6118, %r6117};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	shf.l.wrap.b32 	%r6119, %r6113, %r6114, 25;
	shf.l.wrap.b32 	%r6120, %r6114, %r6113, 25;
	mov.b64 	%rd1090, {%r6120, %r6119};
	xor.b64  	%rd1091, %rd1089, %rd1090;
	and.b64  	%rd1092, %rd1070, %rd1043;
	xor.b64  	%rd1093, %rd1070, %rd1043;
	and.b64  	%rd1094, %rd1093, %rd1016;
	or.b64  	%rd1095, %rd1094, %rd1092;
	add.s64 	%rd1096, %rd1091, %rd1095;
	add.s64 	%rd1097, %rd1096, %rd1085;
	add.s32 	%r6121, %r9176, 11;
	mul.wide.s32 	%rd1098, %r6121, 8;
	add.s64 	%rd1099, %rd801, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd1086;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd1100, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd1101, {%r6127, %r6126};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd1103, {%r6129, %r6128};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1059, %rd1032;
	and.b64  	%rd1106, %rd1086, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1032;
	ld.const.u64 	%rd1108, [%rd1099];
	add.s64 	%rd1109, %rd1108, %rd2258;
	add.s64 	%rd1110, %rd1109, %rd1005;
	add.s64 	%rd1111, %rd1110, %rd1107;
	add.s64 	%rd1112, %rd1111, %rd1104;
	add.s64 	%rd1113, %rd1112, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd1097;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd1114, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd1115, {%r6135, %r6134};
	xor.b64  	%rd1116, %rd1114, %rd1115;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd1117, {%r6137, %r6136};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	and.b64  	%rd1119, %rd1097, %rd1070;
	xor.b64  	%rd1120, %rd1097, %rd1070;
	and.b64  	%rd1121, %rd1120, %rd1043;
	or.b64  	%rd1122, %rd1121, %rd1119;
	add.s64 	%rd1123, %rd1118, %rd1122;
	add.s64 	%rd1124, %rd1123, %rd1112;
	add.s32 	%r6138, %r9176, 12;
	mul.wide.s32 	%rd1125, %r6138, 8;
	add.s64 	%rd1126, %rd801, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6139,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6140}, %rd1113;
	}
	shf.r.wrap.b32 	%r6141, %r6140, %r6139, 14;
	shf.r.wrap.b32 	%r6142, %r6139, %r6140, 14;
	mov.b64 	%rd1127, {%r6142, %r6141};
	shf.r.wrap.b32 	%r6143, %r6140, %r6139, 18;
	shf.r.wrap.b32 	%r6144, %r6139, %r6140, 18;
	mov.b64 	%rd1128, {%r6144, %r6143};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	shf.l.wrap.b32 	%r6145, %r6139, %r6140, 23;
	shf.l.wrap.b32 	%r6146, %r6140, %r6139, 23;
	mov.b64 	%rd1130, {%r6146, %r6145};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	xor.b64  	%rd1132, %rd1086, %rd1059;
	and.b64  	%rd1133, %rd1113, %rd1132;
	xor.b64  	%rd1134, %rd1133, %rd1059;
	ld.const.u64 	%rd1135, [%rd1126];
	add.s64 	%rd1136, %rd1135, %rd2257;
	add.s64 	%rd1137, %rd1136, %rd1032;
	add.s64 	%rd1138, %rd1137, %rd1134;
	add.s64 	%rd1139, %rd1138, %rd1131;
	add.s64 	%rd2269, %rd1139, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6147,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6148}, %rd1124;
	}
	shf.r.wrap.b32 	%r6149, %r6148, %r6147, 28;
	shf.r.wrap.b32 	%r6150, %r6147, %r6148, 28;
	mov.b64 	%rd1140, {%r6150, %r6149};
	shf.l.wrap.b32 	%r6151, %r6147, %r6148, 30;
	shf.l.wrap.b32 	%r6152, %r6148, %r6147, 30;
	mov.b64 	%rd1141, {%r6152, %r6151};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	shf.l.wrap.b32 	%r6153, %r6147, %r6148, 25;
	shf.l.wrap.b32 	%r6154, %r6148, %r6147, 25;
	mov.b64 	%rd1143, {%r6154, %r6153};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	and.b64  	%rd1145, %rd1124, %rd1097;
	xor.b64  	%rd1146, %rd1124, %rd1097;
	and.b64  	%rd1147, %rd1146, %rd1070;
	or.b64  	%rd1148, %rd1147, %rd1145;
	add.s64 	%rd1149, %rd1144, %rd1148;
	add.s64 	%rd2265, %rd1149, %rd1139;
	add.s32 	%r6155, %r9176, 13;
	mul.wide.s32 	%rd1150, %r6155, 8;
	add.s64 	%rd1151, %rd801, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6156,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6157}, %rd2269;
	}
	shf.r.wrap.b32 	%r6158, %r6157, %r6156, 14;
	shf.r.wrap.b32 	%r6159, %r6156, %r6157, 14;
	mov.b64 	%rd1152, {%r6159, %r6158};
	shf.r.wrap.b32 	%r6160, %r6157, %r6156, 18;
	shf.r.wrap.b32 	%r6161, %r6156, %r6157, 18;
	mov.b64 	%rd1153, {%r6161, %r6160};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	shf.l.wrap.b32 	%r6162, %r6156, %r6157, 23;
	shf.l.wrap.b32 	%r6163, %r6157, %r6156, 23;
	mov.b64 	%rd1155, {%r6163, %r6162};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	xor.b64  	%rd1157, %rd1113, %rd1086;
	and.b64  	%rd1158, %rd2269, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1086;
	ld.const.u64 	%rd1160, [%rd1151];
	add.s64 	%rd1161, %rd1160, %rd2256;
	add.s64 	%rd1162, %rd1161, %rd1059;
	add.s64 	%rd1163, %rd1162, %rd1159;
	add.s64 	%rd1164, %rd1163, %rd1156;
	add.s64 	%rd2268, %rd1164, %rd1070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6164,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6165}, %rd2265;
	}
	shf.r.wrap.b32 	%r6166, %r6165, %r6164, 28;
	shf.r.wrap.b32 	%r6167, %r6164, %r6165, 28;
	mov.b64 	%rd1165, {%r6167, %r6166};
	shf.l.wrap.b32 	%r6168, %r6164, %r6165, 30;
	shf.l.wrap.b32 	%r6169, %r6165, %r6164, 30;
	mov.b64 	%rd1166, {%r6169, %r6168};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	shf.l.wrap.b32 	%r6170, %r6164, %r6165, 25;
	shf.l.wrap.b32 	%r6171, %r6165, %r6164, 25;
	mov.b64 	%rd1168, {%r6171, %r6170};
	xor.b64  	%rd1169, %rd1167, %rd1168;
	and.b64  	%rd1170, %rd2265, %rd1124;
	xor.b64  	%rd1171, %rd2265, %rd1124;
	and.b64  	%rd1172, %rd1171, %rd1097;
	or.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd1169, %rd1173;
	add.s64 	%rd2264, %rd1174, %rd1164;
	add.s32 	%r6172, %r9176, 14;
	mul.wide.s32 	%rd1175, %r6172, 8;
	add.s64 	%rd1176, %rd801, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6173,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6174}, %rd2268;
	}
	shf.r.wrap.b32 	%r6175, %r6174, %r6173, 14;
	shf.r.wrap.b32 	%r6176, %r6173, %r6174, 14;
	mov.b64 	%rd1177, {%r6176, %r6175};
	shf.r.wrap.b32 	%r6177, %r6174, %r6173, 18;
	shf.r.wrap.b32 	%r6178, %r6173, %r6174, 18;
	mov.b64 	%rd1178, {%r6178, %r6177};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	shf.l.wrap.b32 	%r6179, %r6173, %r6174, 23;
	shf.l.wrap.b32 	%r6180, %r6174, %r6173, 23;
	mov.b64 	%rd1180, {%r6180, %r6179};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd2269, %rd1113;
	and.b64  	%rd1183, %rd2268, %rd1182;
	xor.b64  	%rd1184, %rd1183, %rd1113;
	ld.const.u64 	%rd1185, [%rd1176];
	add.s64 	%rd1186, %rd1185, %rd2255;
	add.s64 	%rd1187, %rd1186, %rd1086;
	add.s64 	%rd1188, %rd1187, %rd1184;
	add.s64 	%rd1189, %rd1188, %rd1181;
	add.s64 	%rd2267, %rd1189, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6181,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6182}, %rd2264;
	}
	shf.r.wrap.b32 	%r6183, %r6182, %r6181, 28;
	shf.r.wrap.b32 	%r6184, %r6181, %r6182, 28;
	mov.b64 	%rd1190, {%r6184, %r6183};
	shf.l.wrap.b32 	%r6185, %r6181, %r6182, 30;
	shf.l.wrap.b32 	%r6186, %r6182, %r6181, 30;
	mov.b64 	%rd1191, {%r6186, %r6185};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	shf.l.wrap.b32 	%r6187, %r6181, %r6182, 25;
	shf.l.wrap.b32 	%r6188, %r6182, %r6181, 25;
	mov.b64 	%rd1193, {%r6188, %r6187};
	xor.b64  	%rd1194, %rd1192, %rd1193;
	and.b64  	%rd1195, %rd2264, %rd2265;
	xor.b64  	%rd1196, %rd2264, %rd2265;
	and.b64  	%rd1197, %rd1196, %rd1124;
	or.b64  	%rd1198, %rd1197, %rd1195;
	add.s64 	%rd1199, %rd1194, %rd1198;
	add.s64 	%rd2263, %rd1199, %rd1189;
	add.s32 	%r6189, %r9176, 15;
	mul.wide.s32 	%rd1200, %r6189, 8;
	add.s64 	%rd1201, %rd801, %rd1200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6190,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6191}, %rd2267;
	}
	shf.r.wrap.b32 	%r6192, %r6191, %r6190, 14;
	shf.r.wrap.b32 	%r6193, %r6190, %r6191, 14;
	mov.b64 	%rd1202, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r6191, %r6190, 18;
	shf.r.wrap.b32 	%r6195, %r6190, %r6191, 18;
	mov.b64 	%rd1203, {%r6195, %r6194};
	xor.b64  	%rd1204, %rd1202, %rd1203;
	shf.l.wrap.b32 	%r6196, %r6190, %r6191, 23;
	shf.l.wrap.b32 	%r6197, %r6191, %r6190, 23;
	mov.b64 	%rd1205, {%r6197, %r6196};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	xor.b64  	%rd1207, %rd2268, %rd2269;
	and.b64  	%rd1208, %rd2267, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd2269;
	ld.const.u64 	%rd1210, [%rd1201];
	add.s64 	%rd1211, %rd1210, %rd2254;
	add.s64 	%rd1212, %rd1211, %rd1113;
	add.s64 	%rd1213, %rd1212, %rd1209;
	add.s64 	%rd1214, %rd1213, %rd1206;
	add.s64 	%rd2266, %rd1214, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6199}, %rd2263;
	}
	shf.r.wrap.b32 	%r6200, %r6199, %r6198, 28;
	shf.r.wrap.b32 	%r6201, %r6198, %r6199, 28;
	mov.b64 	%rd1215, {%r6201, %r6200};
	shf.l.wrap.b32 	%r6202, %r6198, %r6199, 30;
	shf.l.wrap.b32 	%r6203, %r6199, %r6198, 30;
	mov.b64 	%rd1216, {%r6203, %r6202};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	shf.l.wrap.b32 	%r6204, %r6198, %r6199, 25;
	shf.l.wrap.b32 	%r6205, %r6199, %r6198, 25;
	mov.b64 	%rd1218, {%r6205, %r6204};
	xor.b64  	%rd1219, %rd1217, %rd1218;
	and.b64  	%rd1220, %rd2263, %rd2264;
	xor.b64  	%rd1221, %rd2263, %rd2264;
	and.b64  	%rd1222, %rd1221, %rd2265;
	or.b64  	%rd1223, %rd1222, %rd1220;
	add.s64 	%rd1224, %rd1219, %rd1223;
	add.s64 	%rd2262, %rd1224, %rd1214;
	add.s32 	%r9176, %r9176, 16;
	setp.lt.s32	%p51, %r9176, 80;
	@%p51 bra 	BB0_92;

	ld.param.u64 	%rd2253, [sha512_update_128_param_0];
	cvta.to.local.u64 	%rd2252, %rd2253;
	add.s64 	%rd1226, %rd37, %rd2262;
	st.local.u64 	[%rd2252], %rd1226;
	add.s64 	%rd1227, %rd38, %rd2263;
	st.local.u64 	[%rd2252+8], %rd1227;
	add.s64 	%rd1228, %rd39, %rd2264;
	st.local.u64 	[%rd2252+16], %rd1228;
	add.s64 	%rd1229, %rd36, %rd2265;
	st.local.u64 	[%rd2252+24], %rd1229;
	add.s64 	%rd1230, %rd32, %rd2266;
	st.local.u64 	[%rd2252+32], %rd1230;
	add.s64 	%rd1231, %rd34, %rd2267;
	st.local.u64 	[%rd2252+40], %rd1231;
	add.s64 	%rd1232, %rd33, %rd2268;
	st.local.u64 	[%rd2252+48], %rd1232;
	add.s64 	%rd1233, %rd35, %rd2269;
	st.local.u64 	[%rd2252+56], %rd1233;
	st.local.u32 	[%rd2252+64], %r9147;
	st.local.u32 	[%rd2252+68], %r9146;
	st.local.u32 	[%rd2252+72], %r9145;
	st.local.u32 	[%rd2252+76], %r9144;
	st.local.u32 	[%rd2252+80], %r9151;
	st.local.u32 	[%rd2252+84], %r9150;
	st.local.u32 	[%rd2252+88], %r9149;
	st.local.u32 	[%rd2252+92], %r9148;
	st.local.u32 	[%rd2252+96], %r9155;
	st.local.u32 	[%rd2252+100], %r9154;
	st.local.u32 	[%rd2252+104], %r9153;
	st.local.u32 	[%rd2252+108], %r9152;
	st.local.u32 	[%rd2252+112], %r9159;
	st.local.u32 	[%rd2252+116], %r9158;
	st.local.u32 	[%rd2252+120], %r9157;
	st.local.u32 	[%rd2252+124], %r9156;
	st.local.u32 	[%rd2252+128], %r9163;
	st.local.u32 	[%rd2252+132], %r9162;
	st.local.u32 	[%rd2252+136], %r9161;
	st.local.u32 	[%rd2252+140], %r9160;
	st.local.u32 	[%rd2252+144], %r9167;
	st.local.u32 	[%rd2252+148], %r9166;
	st.local.u32 	[%rd2252+152], %r9165;
	st.local.u32 	[%rd2252+156], %r9164;
	st.local.u32 	[%rd2252+160], %r9171;
	st.local.u32 	[%rd2252+164], %r9170;
	st.local.u32 	[%rd2252+168], %r9169;
	st.local.u32 	[%rd2252+172], %r9168;
	st.local.u32 	[%rd2252+176], %r9175;
	st.local.u32 	[%rd2252+180], %r9174;
	st.local.u32 	[%rd2252+184], %r9173;
	st.local.u32 	[%rd2252+188], %r9172;

BB0_179:
	ret;
}

.func sha512_hmac_update_128(
	.param .b64 sha512_hmac_update_128_param_0,
	.param .b64 sha512_hmac_update_128_param_1,
	.param .b64 sha512_hmac_update_128_param_2,
	.param .b64 sha512_hmac_update_128_param_3,
	.param .b64 sha512_hmac_update_128_param_4,
	.param .b64 sha512_hmac_update_128_param_5,
	.param .b64 sha512_hmac_update_128_param_6,
	.param .b64 sha512_hmac_update_128_param_7,
	.param .b64 sha512_hmac_update_128_param_8
)
{
	.reg .pred 	%p<98>;
	.reg .b32 	%r<8461>;
	.reg .b64 	%rd<1174>;


	ld.param.u64 	%rd90, [sha512_hmac_update_128_param_0];
	ld.param.u64 	%rd91, [sha512_hmac_update_128_param_1];
	ld.param.u64 	%rd92, [sha512_hmac_update_128_param_2];
	ld.param.u64 	%rd93, [sha512_hmac_update_128_param_3];
	ld.param.u64 	%rd94, [sha512_hmac_update_128_param_4];
	ld.param.u64 	%rd95, [sha512_hmac_update_128_param_5];
	ld.param.u64 	%rd96, [sha512_hmac_update_128_param_6];
	ld.param.u64 	%rd97, [sha512_hmac_update_128_param_7];
	ld.param.u64 	%rd98, [sha512_hmac_update_128_param_8];
	cvta.to.local.u64 	%rd1, %rd91;
	cvta.to.local.u64 	%rd2, %rd92;
	cvta.to.local.u64 	%rd3, %rd93;
	cvta.to.local.u64 	%rd4, %rd94;
	cvta.to.local.u64 	%rd5, %rd95;
	cvta.to.local.u64 	%rd6, %rd96;
	cvta.to.local.u64 	%rd7, %rd97;
	cvta.to.local.u64 	%rd8, %rd98;
	cvta.to.local.u64 	%rd99, %rd90;
	add.s64 	%rd9, %rd99, 192;
	ld.local.u32 	%r1, [%rd99+192];
	and.b32  	%r2, %r1, 127;
	add.s32 	%r573, %r1, 4;
	st.local.u32 	[%rd99+192], %r573;
	setp.eq.s32	%p1, %r2, 0;
	@%p1 bra 	BB1_174;

	add.s32 	%r574, %r2, 4;
	setp.lt.u32	%p2, %r574, 128;
	shr.u32 	%r3, %r2, 2;
	and.b32  	%r575, %r1, 3;
	shl.b32 	%r576, %r575, 2;
	mov.u32 	%r577, 1985229328;
	shr.u32 	%r578, %r577, %r576;
	and.b32  	%r4, %r578, 65535;
	@%p2 bra 	BB1_93;
	bra.uni 	BB1_2;

BB1_93:
	setp.gt.s32	%p51, %r3, 15;
	@%p51 bra 	BB1_125;

	setp.gt.s32	%p75, %r3, 7;
	@%p75 bra 	BB1_110;

	setp.gt.s32	%p87, %r3, 3;
	@%p87 bra 	BB1_103;

	setp.gt.s32	%p93, %r3, 1;
	@%p93 bra 	BB1_100;

	setp.eq.s32	%p96, %r3, 0;
	@%p96 bra 	BB1_171;
	bra.uni 	BB1_98;

BB1_171:
	ld.local.u32 	%r8172, [%rd8+12];
	ld.local.u32 	%r8173, [%rd8+8];
	// inline asm
	prmt.b32 %r8171, %r8172, %r8173, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8171;
	ld.local.u32 	%r8176, [%rd8+8];
	ld.local.u32 	%r8177, [%rd8+4];
	// inline asm
	prmt.b32 %r8175, %r8176, %r8177, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8175;
	ld.local.u32 	%r8180, [%rd8+4];
	ld.local.u32 	%r8181, [%rd8];
	// inline asm
	prmt.b32 %r8179, %r8180, %r8181, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8179;
	ld.local.u32 	%r8184, [%rd8];
	ld.local.u32 	%r8185, [%rd7+12];
	// inline asm
	prmt.b32 %r8183, %r8184, %r8185, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8183;
	ld.local.u32 	%r8188, [%rd7+12];
	ld.local.u32 	%r8189, [%rd7+8];
	// inline asm
	prmt.b32 %r8187, %r8188, %r8189, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8187;
	ld.local.u32 	%r8192, [%rd7+8];
	ld.local.u32 	%r8193, [%rd7+4];
	// inline asm
	prmt.b32 %r8191, %r8192, %r8193, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8191;
	ld.local.u32 	%r8196, [%rd7+4];
	ld.local.u32 	%r8197, [%rd7];
	// inline asm
	prmt.b32 %r8195, %r8196, %r8197, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8195;
	ld.local.u32 	%r8200, [%rd7];
	ld.local.u32 	%r8201, [%rd6+12];
	// inline asm
	prmt.b32 %r8199, %r8200, %r8201, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8199;
	ld.local.u32 	%r8204, [%rd6+12];
	ld.local.u32 	%r8205, [%rd6+8];
	// inline asm
	prmt.b32 %r8203, %r8204, %r8205, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8203;
	ld.local.u32 	%r8208, [%rd6+8];
	ld.local.u32 	%r8209, [%rd6+4];
	// inline asm
	prmt.b32 %r8207, %r8208, %r8209, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8207;
	ld.local.u32 	%r8212, [%rd6+4];
	ld.local.u32 	%r8213, [%rd6];
	// inline asm
	prmt.b32 %r8211, %r8212, %r8213, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8211;
	ld.local.u32 	%r8216, [%rd6];
	ld.local.u32 	%r8217, [%rd5+12];
	// inline asm
	prmt.b32 %r8215, %r8216, %r8217, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8215;
	ld.local.u32 	%r8220, [%rd5+12];
	ld.local.u32 	%r8221, [%rd5+8];
	// inline asm
	prmt.b32 %r8219, %r8220, %r8221, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8219;
	ld.local.u32 	%r8224, [%rd5+8];
	ld.local.u32 	%r8225, [%rd5+4];
	// inline asm
	prmt.b32 %r8223, %r8224, %r8225, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8223;
	ld.local.u32 	%r8228, [%rd5+4];
	ld.local.u32 	%r8229, [%rd5];
	// inline asm
	prmt.b32 %r8227, %r8228, %r8229, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8227;
	ld.local.u32 	%r8232, [%rd5];
	ld.local.u32 	%r8233, [%rd4+12];
	// inline asm
	prmt.b32 %r8231, %r8232, %r8233, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8231;
	ld.local.u32 	%r8236, [%rd4+12];
	ld.local.u32 	%r8237, [%rd4+8];
	// inline asm
	prmt.b32 %r8235, %r8236, %r8237, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8235;
	ld.local.u32 	%r8240, [%rd4+8];
	ld.local.u32 	%r8241, [%rd4+4];
	// inline asm
	prmt.b32 %r8239, %r8240, %r8241, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8239;
	ld.local.u32 	%r8244, [%rd4+4];
	ld.local.u32 	%r8245, [%rd4];
	// inline asm
	prmt.b32 %r8243, %r8244, %r8245, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8243;
	ld.local.u32 	%r8248, [%rd4];
	ld.local.u32 	%r8249, [%rd3+12];
	// inline asm
	prmt.b32 %r8247, %r8248, %r8249, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8247;
	ld.local.u32 	%r8252, [%rd3+12];
	ld.local.u32 	%r8253, [%rd3+8];
	// inline asm
	prmt.b32 %r8251, %r8252, %r8253, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8251;
	ld.local.u32 	%r8256, [%rd3+8];
	ld.local.u32 	%r8257, [%rd3+4];
	// inline asm
	prmt.b32 %r8255, %r8256, %r8257, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8255;
	ld.local.u32 	%r8260, [%rd3+4];
	ld.local.u32 	%r8261, [%rd3];
	// inline asm
	prmt.b32 %r8259, %r8260, %r8261, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8259;
	ld.local.u32 	%r8264, [%rd3];
	ld.local.u32 	%r8265, [%rd2+12];
	// inline asm
	prmt.b32 %r8263, %r8264, %r8265, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8263;
	ld.local.u32 	%r8268, [%rd2+12];
	ld.local.u32 	%r8269, [%rd2+8];
	// inline asm
	prmt.b32 %r8267, %r8268, %r8269, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8267;
	ld.local.u32 	%r8272, [%rd2+8];
	ld.local.u32 	%r8273, [%rd2+4];
	// inline asm
	prmt.b32 %r8271, %r8272, %r8273, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8271;
	ld.local.u32 	%r8276, [%rd2+4];
	ld.local.u32 	%r8277, [%rd2];
	// inline asm
	prmt.b32 %r8275, %r8276, %r8277, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8275;
	ld.local.u32 	%r8280, [%rd2];
	ld.local.u32 	%r8281, [%rd1+12];
	// inline asm
	prmt.b32 %r8279, %r8280, %r8281, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8279;
	ld.local.u32 	%r8284, [%rd1+12];
	ld.local.u32 	%r8285, [%rd1+8];
	// inline asm
	prmt.b32 %r8283, %r8284, %r8285, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8283;
	ld.local.u32 	%r8288, [%rd1+8];
	ld.local.u32 	%r8289, [%rd1+4];
	// inline asm
	prmt.b32 %r8287, %r8288, %r8289, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8287;
	ld.local.u32 	%r8292, [%rd1+4];
	ld.local.u32 	%r8293, [%rd1];
	// inline asm
	prmt.b32 %r8291, %r8292, %r8293, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8291;
	ld.local.u32 	%r8296, [%rd1];
	mov.u32 	%r8297, 0;
	// inline asm
	prmt.b32 %r8460, %r8296, %r8297, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r8460;
	bra.uni 	BB1_173;

BB1_174:
	ld.local.u32 	%r8394, [%rd1];
	st.local.u32 	[%rd9+-128], %r8394;
	ld.local.u32 	%r8395, [%rd1+4];
	st.local.u32 	[%rd9+-124], %r8395;
	ld.local.u32 	%r8396, [%rd1+8];
	st.local.u32 	[%rd9+-120], %r8396;
	ld.local.u32 	%r8397, [%rd1+12];
	st.local.u32 	[%rd9+-116], %r8397;
	ld.local.u32 	%r8398, [%rd2];
	st.local.u32 	[%rd9+-112], %r8398;
	ld.local.u32 	%r8399, [%rd2+4];
	st.local.u32 	[%rd9+-108], %r8399;
	ld.local.u32 	%r8400, [%rd2+8];
	st.local.u32 	[%rd9+-104], %r8400;
	ld.local.u32 	%r8401, [%rd2+12];
	st.local.u32 	[%rd9+-100], %r8401;
	ld.local.u32 	%r8402, [%rd3];
	st.local.u32 	[%rd9+-96], %r8402;
	ld.local.u32 	%r8403, [%rd3+4];
	st.local.u32 	[%rd9+-92], %r8403;
	ld.local.u32 	%r8404, [%rd3+8];
	st.local.u32 	[%rd9+-88], %r8404;
	ld.local.u32 	%r8405, [%rd3+12];
	st.local.u32 	[%rd9+-84], %r8405;
	ld.local.u32 	%r8406, [%rd4];
	st.local.u32 	[%rd9+-80], %r8406;
	ld.local.u32 	%r8407, [%rd4+4];
	st.local.u32 	[%rd9+-76], %r8407;
	ld.local.u32 	%r8408, [%rd4+8];
	st.local.u32 	[%rd9+-72], %r8408;
	ld.local.u32 	%r8409, [%rd4+12];
	st.local.u32 	[%rd9+-68], %r8409;
	ld.local.u32 	%r8410, [%rd5];
	st.local.u32 	[%rd9+-64], %r8410;
	ld.local.u32 	%r8411, [%rd5+4];
	st.local.u32 	[%rd9+-60], %r8411;
	ld.local.u32 	%r8412, [%rd5+8];
	st.local.u32 	[%rd9+-56], %r8412;
	ld.local.u32 	%r8413, [%rd5+12];
	st.local.u32 	[%rd9+-52], %r8413;
	ld.local.u32 	%r8414, [%rd6];
	st.local.u32 	[%rd9+-48], %r8414;
	ld.local.u32 	%r8415, [%rd6+4];
	st.local.u32 	[%rd9+-44], %r8415;
	ld.local.u32 	%r8416, [%rd6+8];
	st.local.u32 	[%rd9+-40], %r8416;
	ld.local.u32 	%r8417, [%rd6+12];
	st.local.u32 	[%rd9+-36], %r8417;
	ld.local.u32 	%r8418, [%rd7];
	st.local.u32 	[%rd9+-32], %r8418;
	ld.local.u32 	%r8419, [%rd7+4];
	st.local.u32 	[%rd9+-28], %r8419;
	ld.local.u32 	%r8420, [%rd7+8];
	st.local.u32 	[%rd9+-24], %r8420;
	ld.local.u32 	%r8421, [%rd7+12];
	st.local.u32 	[%rd9+-20], %r8421;
	ld.local.u32 	%r8422, [%rd8];
	st.local.u32 	[%rd9+-16], %r8422;
	ld.local.u32 	%r8423, [%rd8+4];
	st.local.u32 	[%rd9+-12], %r8423;
	ld.local.u32 	%r8424, [%rd8+8];
	st.local.u32 	[%rd9+-8], %r8424;
	ld.local.u32 	%r8425, [%rd8+12];
	st.local.u32 	[%rd9+-4], %r8425;
	bra.uni 	BB1_175;

BB1_2:
	setp.gt.s32	%p3, %r3, 15;
	@%p3 bra 	BB1_35;

	setp.gt.s32	%p27, %r3, 7;
	@%p27 bra 	BB1_20;

	setp.gt.s32	%p39, %r3, 3;
	@%p39 bra 	BB1_13;

	setp.gt.s32	%p45, %r3, 1;
	@%p45 bra 	BB1_9;

	setp.eq.s32	%p48, %r3, 0;
	@%p48 bra 	BB1_87;
	bra.uni 	BB1_7;

BB1_87:
	ld.local.u32 	%r5169, [%rd8+12];
	mov.u32 	%r8427, 0;
	// inline asm
	prmt.b32 %r8430, %r8427, %r5169, %r4;
	// inline asm
	ld.local.u32 	%r5172, [%rd8+12];
	ld.local.u32 	%r5173, [%rd8+8];
	// inline asm
	prmt.b32 %r5171, %r5172, %r5173, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5171;
	ld.local.u32 	%r5176, [%rd8+8];
	ld.local.u32 	%r5177, [%rd8+4];
	// inline asm
	prmt.b32 %r5175, %r5176, %r5177, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5175;
	ld.local.u32 	%r5180, [%rd8+4];
	ld.local.u32 	%r5181, [%rd8];
	// inline asm
	prmt.b32 %r5179, %r5180, %r5181, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5179;
	ld.local.u32 	%r5184, [%rd8];
	ld.local.u32 	%r5185, [%rd7+12];
	// inline asm
	prmt.b32 %r5183, %r5184, %r5185, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5183;
	ld.local.u32 	%r5188, [%rd7+12];
	ld.local.u32 	%r5189, [%rd7+8];
	// inline asm
	prmt.b32 %r5187, %r5188, %r5189, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5187;
	ld.local.u32 	%r5192, [%rd7+8];
	ld.local.u32 	%r5193, [%rd7+4];
	// inline asm
	prmt.b32 %r5191, %r5192, %r5193, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5191;
	ld.local.u32 	%r5196, [%rd7+4];
	ld.local.u32 	%r5197, [%rd7];
	// inline asm
	prmt.b32 %r5195, %r5196, %r5197, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5195;
	ld.local.u32 	%r5200, [%rd7];
	ld.local.u32 	%r5201, [%rd6+12];
	// inline asm
	prmt.b32 %r5199, %r5200, %r5201, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5199;
	ld.local.u32 	%r5204, [%rd6+12];
	ld.local.u32 	%r5205, [%rd6+8];
	// inline asm
	prmt.b32 %r5203, %r5204, %r5205, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5203;
	ld.local.u32 	%r5208, [%rd6+8];
	ld.local.u32 	%r5209, [%rd6+4];
	// inline asm
	prmt.b32 %r5207, %r5208, %r5209, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5207;
	ld.local.u32 	%r5212, [%rd6+4];
	ld.local.u32 	%r5213, [%rd6];
	// inline asm
	prmt.b32 %r5211, %r5212, %r5213, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5211;
	ld.local.u32 	%r5216, [%rd6];
	ld.local.u32 	%r5217, [%rd5+12];
	// inline asm
	prmt.b32 %r5215, %r5216, %r5217, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5215;
	ld.local.u32 	%r5220, [%rd5+12];
	ld.local.u32 	%r5221, [%rd5+8];
	// inline asm
	prmt.b32 %r5219, %r5220, %r5221, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5219;
	ld.local.u32 	%r5224, [%rd5+8];
	ld.local.u32 	%r5225, [%rd5+4];
	// inline asm
	prmt.b32 %r5223, %r5224, %r5225, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5223;
	ld.local.u32 	%r5228, [%rd5+4];
	ld.local.u32 	%r5229, [%rd5];
	// inline asm
	prmt.b32 %r5227, %r5228, %r5229, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5227;
	ld.local.u32 	%r5232, [%rd5];
	ld.local.u32 	%r5233, [%rd4+12];
	// inline asm
	prmt.b32 %r5231, %r5232, %r5233, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5231;
	ld.local.u32 	%r5236, [%rd4+12];
	ld.local.u32 	%r5237, [%rd4+8];
	// inline asm
	prmt.b32 %r5235, %r5236, %r5237, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5235;
	ld.local.u32 	%r5240, [%rd4+8];
	ld.local.u32 	%r5241, [%rd4+4];
	// inline asm
	prmt.b32 %r5239, %r5240, %r5241, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5239;
	ld.local.u32 	%r5244, [%rd4+4];
	ld.local.u32 	%r5245, [%rd4];
	// inline asm
	prmt.b32 %r5243, %r5244, %r5245, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5243;
	ld.local.u32 	%r5248, [%rd4];
	ld.local.u32 	%r5249, [%rd3+12];
	// inline asm
	prmt.b32 %r5247, %r5248, %r5249, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5247;
	ld.local.u32 	%r5252, [%rd3+12];
	ld.local.u32 	%r5253, [%rd3+8];
	// inline asm
	prmt.b32 %r5251, %r5252, %r5253, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5251;
	ld.local.u32 	%r5256, [%rd3+8];
	ld.local.u32 	%r5257, [%rd3+4];
	// inline asm
	prmt.b32 %r5255, %r5256, %r5257, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5255;
	ld.local.u32 	%r5260, [%rd3+4];
	ld.local.u32 	%r5261, [%rd3];
	// inline asm
	prmt.b32 %r5259, %r5260, %r5261, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5259;
	ld.local.u32 	%r5264, [%rd3];
	ld.local.u32 	%r5265, [%rd2+12];
	// inline asm
	prmt.b32 %r5263, %r5264, %r5265, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5263;
	ld.local.u32 	%r5268, [%rd2+12];
	ld.local.u32 	%r5269, [%rd2+8];
	// inline asm
	prmt.b32 %r5267, %r5268, %r5269, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5267;
	ld.local.u32 	%r5272, [%rd2+8];
	ld.local.u32 	%r5273, [%rd2+4];
	// inline asm
	prmt.b32 %r5271, %r5272, %r5273, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5271;
	ld.local.u32 	%r5276, [%rd2+4];
	ld.local.u32 	%r5277, [%rd2];
	// inline asm
	prmt.b32 %r5275, %r5276, %r5277, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5275;
	ld.local.u32 	%r5280, [%rd2];
	ld.local.u32 	%r5281, [%rd1+12];
	// inline asm
	prmt.b32 %r5279, %r5280, %r5281, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5279;
	ld.local.u32 	%r5284, [%rd1+12];
	ld.local.u32 	%r5285, [%rd1+8];
	// inline asm
	prmt.b32 %r5283, %r5284, %r5285, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5283;
	ld.local.u32 	%r5288, [%rd1+8];
	ld.local.u32 	%r5289, [%rd1+4];
	// inline asm
	prmt.b32 %r5287, %r5288, %r5289, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5287;
	ld.local.u32 	%r5292, [%rd1+4];
	ld.local.u32 	%r5293, [%rd1];
	// inline asm
	prmt.b32 %r5291, %r5292, %r5293, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5291;
	ld.local.u32 	%r5296, [%rd1];
	// inline asm
	prmt.b32 %r8426, %r5296, %r8427, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r8426;
	mov.u32 	%r8428, %r8427;
	mov.u32 	%r8429, %r8427;
	bra.uni 	BB1_89;

BB1_125:
	setp.gt.s32	%p52, %r3, 23;
	@%p52 bra 	BB1_141;

	setp.gt.s32	%p64, %r3, 19;
	@%p64 bra 	BB1_134;

	setp.gt.s32	%p70, %r3, 17;
	@%p70 bra 	BB1_131;

	setp.eq.s32	%p73, %r3, 16;
	@%p73 bra 	BB1_163;
	bra.uni 	BB1_129;

BB1_163:
	ld.local.u32 	%r6652, [%rd4+12];
	ld.local.u32 	%r6653, [%rd4+8];
	// inline asm
	prmt.b32 %r6651, %r6652, %r6653, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6651;
	ld.local.u32 	%r6656, [%rd4+8];
	ld.local.u32 	%r6657, [%rd4+4];
	// inline asm
	prmt.b32 %r6655, %r6656, %r6657, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6655;
	ld.local.u32 	%r6660, [%rd4+4];
	ld.local.u32 	%r6661, [%rd4];
	// inline asm
	prmt.b32 %r6659, %r6660, %r6661, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6659;
	ld.local.u32 	%r6664, [%rd4];
	ld.local.u32 	%r6665, [%rd3+12];
	// inline asm
	prmt.b32 %r6663, %r6664, %r6665, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6663;
	ld.local.u32 	%r6668, [%rd3+12];
	ld.local.u32 	%r6669, [%rd3+8];
	// inline asm
	prmt.b32 %r6667, %r6668, %r6669, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6667;
	ld.local.u32 	%r6672, [%rd3+8];
	ld.local.u32 	%r6673, [%rd3+4];
	// inline asm
	prmt.b32 %r6671, %r6672, %r6673, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6671;
	ld.local.u32 	%r6676, [%rd3+4];
	ld.local.u32 	%r6677, [%rd3];
	// inline asm
	prmt.b32 %r6675, %r6676, %r6677, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6675;
	ld.local.u32 	%r6680, [%rd3];
	ld.local.u32 	%r6681, [%rd2+12];
	// inline asm
	prmt.b32 %r6679, %r6680, %r6681, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6679;
	ld.local.u32 	%r6684, [%rd2+12];
	ld.local.u32 	%r6685, [%rd2+8];
	// inline asm
	prmt.b32 %r6683, %r6684, %r6685, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6683;
	ld.local.u32 	%r6688, [%rd2+8];
	ld.local.u32 	%r6689, [%rd2+4];
	// inline asm
	prmt.b32 %r6687, %r6688, %r6689, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6687;
	ld.local.u32 	%r6692, [%rd2+4];
	ld.local.u32 	%r6693, [%rd2];
	// inline asm
	prmt.b32 %r6691, %r6692, %r6693, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6691;
	ld.local.u32 	%r6696, [%rd2];
	ld.local.u32 	%r6697, [%rd1+12];
	// inline asm
	prmt.b32 %r6695, %r6696, %r6697, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6695;
	ld.local.u32 	%r6700, [%rd1+12];
	ld.local.u32 	%r6701, [%rd1+8];
	// inline asm
	prmt.b32 %r6699, %r6700, %r6701, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6699;
	ld.local.u32 	%r6704, [%rd1+8];
	ld.local.u32 	%r6705, [%rd1+4];
	// inline asm
	prmt.b32 %r6703, %r6704, %r6705, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6703;
	ld.local.u32 	%r6708, [%rd1+4];
	ld.local.u32 	%r6709, [%rd1];
	// inline asm
	prmt.b32 %r6707, %r6708, %r6709, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6707;
	ld.local.u32 	%r6712, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6711, %r6712, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6711;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1133, 0;
	st.local.u32 	[%rd1+4], %rd1133;
	st.local.u32 	[%rd1], %rd1133;
	bra.uni 	BB1_173;

BB1_35:
	setp.gt.s32	%p4, %r3, 23;
	@%p4 bra 	BB1_51;

	setp.gt.s32	%p16, %r3, 19;
	@%p16 bra 	BB1_44;

	setp.gt.s32	%p22, %r3, 17;
	@%p22 bra 	BB1_41;

	setp.eq.s32	%p25, %r3, 16;
	@%p25 bra 	BB1_73;
	bra.uni 	BB1_39;

BB1_73:
	ld.local.u32 	%r2681, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8446, %r8426, %r2681, %r4;
	// inline asm
	ld.local.u32 	%r2684, [%rd8+12];
	ld.local.u32 	%r2685, [%rd8+8];
	// inline asm
	prmt.b32 %r8439, %r2684, %r2685, %r4;
	// inline asm
	ld.local.u32 	%r2688, [%rd8+8];
	ld.local.u32 	%r2689, [%rd8+4];
	// inline asm
	prmt.b32 %r8440, %r2688, %r2689, %r4;
	// inline asm
	ld.local.u32 	%r2692, [%rd8+4];
	ld.local.u32 	%r2693, [%rd8];
	// inline asm
	prmt.b32 %r8441, %r2692, %r2693, %r4;
	// inline asm
	ld.local.u32 	%r2696, [%rd8];
	ld.local.u32 	%r2697, [%rd7+12];
	// inline asm
	prmt.b32 %r8442, %r2696, %r2697, %r4;
	// inline asm
	ld.local.u32 	%r2700, [%rd7+12];
	ld.local.u32 	%r2701, [%rd7+8];
	// inline asm
	prmt.b32 %r8435, %r2700, %r2701, %r4;
	// inline asm
	ld.local.u32 	%r2704, [%rd7+8];
	ld.local.u32 	%r2705, [%rd7+4];
	// inline asm
	prmt.b32 %r8436, %r2704, %r2705, %r4;
	// inline asm
	ld.local.u32 	%r2708, [%rd7+4];
	ld.local.u32 	%r2709, [%rd7];
	// inline asm
	prmt.b32 %r8437, %r2708, %r2709, %r4;
	// inline asm
	ld.local.u32 	%r2712, [%rd7];
	ld.local.u32 	%r2713, [%rd6+12];
	// inline asm
	prmt.b32 %r8438, %r2712, %r2713, %r4;
	// inline asm
	ld.local.u32 	%r2716, [%rd6+12];
	ld.local.u32 	%r2717, [%rd6+8];
	// inline asm
	prmt.b32 %r8431, %r2716, %r2717, %r4;
	// inline asm
	ld.local.u32 	%r2720, [%rd6+8];
	ld.local.u32 	%r2721, [%rd6+4];
	// inline asm
	prmt.b32 %r8432, %r2720, %r2721, %r4;
	// inline asm
	ld.local.u32 	%r2724, [%rd6+4];
	ld.local.u32 	%r2725, [%rd6];
	// inline asm
	prmt.b32 %r8433, %r2724, %r2725, %r4;
	// inline asm
	ld.local.u32 	%r2728, [%rd6];
	ld.local.u32 	%r2729, [%rd5+12];
	// inline asm
	prmt.b32 %r8434, %r2728, %r2729, %r4;
	// inline asm
	ld.local.u32 	%r2732, [%rd5+12];
	ld.local.u32 	%r2733, [%rd5+8];
	// inline asm
	prmt.b32 %r8427, %r2732, %r2733, %r4;
	// inline asm
	ld.local.u32 	%r2736, [%rd5+8];
	ld.local.u32 	%r2737, [%rd5+4];
	// inline asm
	prmt.b32 %r8428, %r2736, %r2737, %r4;
	// inline asm
	ld.local.u32 	%r2740, [%rd5+4];
	ld.local.u32 	%r2741, [%rd5];
	// inline asm
	prmt.b32 %r8429, %r2740, %r2741, %r4;
	// inline asm
	ld.local.u32 	%r2744, [%rd5];
	ld.local.u32 	%r2745, [%rd4+12];
	// inline asm
	prmt.b32 %r8430, %r2744, %r2745, %r4;
	// inline asm
	ld.local.u32 	%r2748, [%rd4+12];
	ld.local.u32 	%r2749, [%rd4+8];
	// inline asm
	prmt.b32 %r2747, %r2748, %r2749, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2747;
	ld.local.u32 	%r2752, [%rd4+8];
	ld.local.u32 	%r2753, [%rd4+4];
	// inline asm
	prmt.b32 %r2751, %r2752, %r2753, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2751;
	ld.local.u32 	%r2756, [%rd4+4];
	ld.local.u32 	%r2757, [%rd4];
	// inline asm
	prmt.b32 %r2755, %r2756, %r2757, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2755;
	ld.local.u32 	%r2760, [%rd4];
	ld.local.u32 	%r2761, [%rd3+12];
	// inline asm
	prmt.b32 %r2759, %r2760, %r2761, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2759;
	ld.local.u32 	%r2764, [%rd3+12];
	ld.local.u32 	%r2765, [%rd3+8];
	// inline asm
	prmt.b32 %r2763, %r2764, %r2765, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2763;
	ld.local.u32 	%r2768, [%rd3+8];
	ld.local.u32 	%r2769, [%rd3+4];
	// inline asm
	prmt.b32 %r2767, %r2768, %r2769, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2767;
	ld.local.u32 	%r2772, [%rd3+4];
	ld.local.u32 	%r2773, [%rd3];
	// inline asm
	prmt.b32 %r2771, %r2772, %r2773, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2771;
	ld.local.u32 	%r2776, [%rd3];
	ld.local.u32 	%r2777, [%rd2+12];
	// inline asm
	prmt.b32 %r2775, %r2776, %r2777, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2775;
	ld.local.u32 	%r2780, [%rd2+12];
	ld.local.u32 	%r2781, [%rd2+8];
	// inline asm
	prmt.b32 %r2779, %r2780, %r2781, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2779;
	ld.local.u32 	%r2784, [%rd2+8];
	ld.local.u32 	%r2785, [%rd2+4];
	// inline asm
	prmt.b32 %r2783, %r2784, %r2785, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2783;
	ld.local.u32 	%r2788, [%rd2+4];
	ld.local.u32 	%r2789, [%rd2];
	// inline asm
	prmt.b32 %r2787, %r2788, %r2789, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2787;
	ld.local.u32 	%r2792, [%rd2];
	ld.local.u32 	%r2793, [%rd1+12];
	// inline asm
	prmt.b32 %r2791, %r2792, %r2793, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2791;
	ld.local.u32 	%r2796, [%rd1+12];
	ld.local.u32 	%r2797, [%rd1+8];
	// inline asm
	prmt.b32 %r2795, %r2796, %r2797, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2795;
	ld.local.u32 	%r2800, [%rd1+8];
	ld.local.u32 	%r2801, [%rd1+4];
	// inline asm
	prmt.b32 %r2799, %r2800, %r2801, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2799;
	ld.local.u32 	%r2804, [%rd1+4];
	ld.local.u32 	%r2805, [%rd1];
	// inline asm
	prmt.b32 %r2803, %r2804, %r2805, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2803;
	ld.local.u32 	%r2808, [%rd1];
	// inline asm
	prmt.b32 %r2807, %r2808, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2807;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd115, 0;
	st.local.u32 	[%rd1+4], %rd115;
	st.local.u32 	[%rd1], %rd115;
	mov.u32 	%r8443, %r8426;
	mov.u32 	%r8444, %r8426;
	mov.u32 	%r8445, %r8426;
	bra.uni 	BB1_83;

BB1_110:
	setp.gt.s32	%p76, %r3, 11;
	@%p76 bra 	BB1_118;

	setp.gt.s32	%p82, %r3, 9;
	@%p82 bra 	BB1_115;

	setp.eq.s32	%p85, %r3, 8;
	@%p85 bra 	BB1_167;
	bra.uni 	BB1_113;

BB1_167:
	ld.local.u32 	%r7284, [%rd6+12];
	ld.local.u32 	%r7285, [%rd6+8];
	// inline asm
	prmt.b32 %r7283, %r7284, %r7285, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7283;
	ld.local.u32 	%r7288, [%rd6+8];
	ld.local.u32 	%r7289, [%rd6+4];
	// inline asm
	prmt.b32 %r7287, %r7288, %r7289, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7287;
	ld.local.u32 	%r7292, [%rd6+4];
	ld.local.u32 	%r7293, [%rd6];
	// inline asm
	prmt.b32 %r7291, %r7292, %r7293, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7291;
	ld.local.u32 	%r7296, [%rd6];
	ld.local.u32 	%r7297, [%rd5+12];
	// inline asm
	prmt.b32 %r7295, %r7296, %r7297, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7295;
	ld.local.u32 	%r7300, [%rd5+12];
	ld.local.u32 	%r7301, [%rd5+8];
	// inline asm
	prmt.b32 %r7299, %r7300, %r7301, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7299;
	ld.local.u32 	%r7304, [%rd5+8];
	ld.local.u32 	%r7305, [%rd5+4];
	// inline asm
	prmt.b32 %r7303, %r7304, %r7305, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7303;
	ld.local.u32 	%r7308, [%rd5+4];
	ld.local.u32 	%r7309, [%rd5];
	// inline asm
	prmt.b32 %r7307, %r7308, %r7309, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7307;
	ld.local.u32 	%r7312, [%rd5];
	ld.local.u32 	%r7313, [%rd4+12];
	// inline asm
	prmt.b32 %r7311, %r7312, %r7313, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7311;
	ld.local.u32 	%r7316, [%rd4+12];
	ld.local.u32 	%r7317, [%rd4+8];
	// inline asm
	prmt.b32 %r7315, %r7316, %r7317, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7315;
	ld.local.u32 	%r7320, [%rd4+8];
	ld.local.u32 	%r7321, [%rd4+4];
	// inline asm
	prmt.b32 %r7319, %r7320, %r7321, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7319;
	ld.local.u32 	%r7324, [%rd4+4];
	ld.local.u32 	%r7325, [%rd4];
	// inline asm
	prmt.b32 %r7323, %r7324, %r7325, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7323;
	ld.local.u32 	%r7328, [%rd4];
	ld.local.u32 	%r7329, [%rd3+12];
	// inline asm
	prmt.b32 %r7327, %r7328, %r7329, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7327;
	ld.local.u32 	%r7332, [%rd3+12];
	ld.local.u32 	%r7333, [%rd3+8];
	// inline asm
	prmt.b32 %r7331, %r7332, %r7333, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7331;
	ld.local.u32 	%r7336, [%rd3+8];
	ld.local.u32 	%r7337, [%rd3+4];
	// inline asm
	prmt.b32 %r7335, %r7336, %r7337, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7335;
	ld.local.u32 	%r7340, [%rd3+4];
	ld.local.u32 	%r7341, [%rd3];
	// inline asm
	prmt.b32 %r7339, %r7340, %r7341, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7339;
	ld.local.u32 	%r7344, [%rd3];
	ld.local.u32 	%r7345, [%rd2+12];
	// inline asm
	prmt.b32 %r7343, %r7344, %r7345, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7343;
	ld.local.u32 	%r7348, [%rd2+12];
	ld.local.u32 	%r7349, [%rd2+8];
	// inline asm
	prmt.b32 %r7347, %r7348, %r7349, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7347;
	ld.local.u32 	%r7352, [%rd2+8];
	ld.local.u32 	%r7353, [%rd2+4];
	// inline asm
	prmt.b32 %r7351, %r7352, %r7353, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7351;
	ld.local.u32 	%r7356, [%rd2+4];
	ld.local.u32 	%r7357, [%rd2];
	// inline asm
	prmt.b32 %r7355, %r7356, %r7357, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7355;
	ld.local.u32 	%r7360, [%rd2];
	ld.local.u32 	%r7361, [%rd1+12];
	// inline asm
	prmt.b32 %r7359, %r7360, %r7361, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7359;
	ld.local.u32 	%r7364, [%rd1+12];
	ld.local.u32 	%r7365, [%rd1+8];
	// inline asm
	prmt.b32 %r7363, %r7364, %r7365, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7363;
	ld.local.u32 	%r7368, [%rd1+8];
	ld.local.u32 	%r7369, [%rd1+4];
	// inline asm
	prmt.b32 %r7367, %r7368, %r7369, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7367;
	ld.local.u32 	%r7372, [%rd1+4];
	ld.local.u32 	%r7373, [%rd1];
	// inline asm
	prmt.b32 %r7371, %r7372, %r7373, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7371;
	ld.local.u32 	%r7376, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7375, %r7376, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7375;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1141, 0;
	st.local.u32 	[%rd1+4], %rd1141;
	st.local.u32 	[%rd1], %rd1141;
	bra.uni 	BB1_173;

BB1_20:
	setp.gt.s32	%p28, %r3, 11;
	@%p28 bra 	BB1_28;

	setp.gt.s32	%p34, %r3, 9;
	@%p34 bra 	BB1_25;

	setp.eq.s32	%p37, %r3, 8;
	@%p37 bra 	BB1_77;
	bra.uni 	BB1_23;

BB1_77:
	ld.local.u32 	%r3893, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8438, %r8426, %r3893, %r4;
	// inline asm
	ld.local.u32 	%r3896, [%rd8+12];
	ld.local.u32 	%r3897, [%rd8+8];
	// inline asm
	prmt.b32 %r8431, %r3896, %r3897, %r4;
	// inline asm
	ld.local.u32 	%r3900, [%rd8+8];
	ld.local.u32 	%r3901, [%rd8+4];
	// inline asm
	prmt.b32 %r8432, %r3900, %r3901, %r4;
	// inline asm
	ld.local.u32 	%r3904, [%rd8+4];
	ld.local.u32 	%r3905, [%rd8];
	// inline asm
	prmt.b32 %r8433, %r3904, %r3905, %r4;
	// inline asm
	ld.local.u32 	%r3908, [%rd8];
	ld.local.u32 	%r3909, [%rd7+12];
	// inline asm
	prmt.b32 %r8434, %r3908, %r3909, %r4;
	// inline asm
	ld.local.u32 	%r3912, [%rd7+12];
	ld.local.u32 	%r3913, [%rd7+8];
	// inline asm
	prmt.b32 %r8427, %r3912, %r3913, %r4;
	// inline asm
	ld.local.u32 	%r3916, [%rd7+8];
	ld.local.u32 	%r3917, [%rd7+4];
	// inline asm
	prmt.b32 %r8428, %r3916, %r3917, %r4;
	// inline asm
	ld.local.u32 	%r3920, [%rd7+4];
	ld.local.u32 	%r3921, [%rd7];
	// inline asm
	prmt.b32 %r8429, %r3920, %r3921, %r4;
	// inline asm
	ld.local.u32 	%r3924, [%rd7];
	ld.local.u32 	%r3925, [%rd6+12];
	// inline asm
	prmt.b32 %r8430, %r3924, %r3925, %r4;
	// inline asm
	ld.local.u32 	%r3928, [%rd6+12];
	ld.local.u32 	%r3929, [%rd6+8];
	// inline asm
	prmt.b32 %r3927, %r3928, %r3929, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3927;
	ld.local.u32 	%r3932, [%rd6+8];
	ld.local.u32 	%r3933, [%rd6+4];
	// inline asm
	prmt.b32 %r3931, %r3932, %r3933, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3931;
	ld.local.u32 	%r3936, [%rd6+4];
	ld.local.u32 	%r3937, [%rd6];
	// inline asm
	prmt.b32 %r3935, %r3936, %r3937, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3935;
	ld.local.u32 	%r3940, [%rd6];
	ld.local.u32 	%r3941, [%rd5+12];
	// inline asm
	prmt.b32 %r3939, %r3940, %r3941, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3939;
	ld.local.u32 	%r3944, [%rd5+12];
	ld.local.u32 	%r3945, [%rd5+8];
	// inline asm
	prmt.b32 %r3943, %r3944, %r3945, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3943;
	ld.local.u32 	%r3948, [%rd5+8];
	ld.local.u32 	%r3949, [%rd5+4];
	// inline asm
	prmt.b32 %r3947, %r3948, %r3949, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3947;
	ld.local.u32 	%r3952, [%rd5+4];
	ld.local.u32 	%r3953, [%rd5];
	// inline asm
	prmt.b32 %r3951, %r3952, %r3953, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3951;
	ld.local.u32 	%r3956, [%rd5];
	ld.local.u32 	%r3957, [%rd4+12];
	// inline asm
	prmt.b32 %r3955, %r3956, %r3957, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3955;
	ld.local.u32 	%r3960, [%rd4+12];
	ld.local.u32 	%r3961, [%rd4+8];
	// inline asm
	prmt.b32 %r3959, %r3960, %r3961, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3959;
	ld.local.u32 	%r3964, [%rd4+8];
	ld.local.u32 	%r3965, [%rd4+4];
	// inline asm
	prmt.b32 %r3963, %r3964, %r3965, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3963;
	ld.local.u32 	%r3968, [%rd4+4];
	ld.local.u32 	%r3969, [%rd4];
	// inline asm
	prmt.b32 %r3967, %r3968, %r3969, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3967;
	ld.local.u32 	%r3972, [%rd4];
	ld.local.u32 	%r3973, [%rd3+12];
	// inline asm
	prmt.b32 %r3971, %r3972, %r3973, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3971;
	ld.local.u32 	%r3976, [%rd3+12];
	ld.local.u32 	%r3977, [%rd3+8];
	// inline asm
	prmt.b32 %r3975, %r3976, %r3977, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3975;
	ld.local.u32 	%r3980, [%rd3+8];
	ld.local.u32 	%r3981, [%rd3+4];
	// inline asm
	prmt.b32 %r3979, %r3980, %r3981, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3979;
	ld.local.u32 	%r3984, [%rd3+4];
	ld.local.u32 	%r3985, [%rd3];
	// inline asm
	prmt.b32 %r3983, %r3984, %r3985, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3983;
	ld.local.u32 	%r3988, [%rd3];
	ld.local.u32 	%r3989, [%rd2+12];
	// inline asm
	prmt.b32 %r3987, %r3988, %r3989, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3987;
	ld.local.u32 	%r3992, [%rd2+12];
	ld.local.u32 	%r3993, [%rd2+8];
	// inline asm
	prmt.b32 %r3991, %r3992, %r3993, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3991;
	ld.local.u32 	%r3996, [%rd2+8];
	ld.local.u32 	%r3997, [%rd2+4];
	// inline asm
	prmt.b32 %r3995, %r3996, %r3997, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3995;
	ld.local.u32 	%r4000, [%rd2+4];
	ld.local.u32 	%r4001, [%rd2];
	// inline asm
	prmt.b32 %r3999, %r4000, %r4001, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3999;
	ld.local.u32 	%r4004, [%rd2];
	ld.local.u32 	%r4005, [%rd1+12];
	// inline asm
	prmt.b32 %r4003, %r4004, %r4005, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4003;
	ld.local.u32 	%r4008, [%rd1+12];
	ld.local.u32 	%r4009, [%rd1+8];
	// inline asm
	prmt.b32 %r4007, %r4008, %r4009, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4007;
	ld.local.u32 	%r4012, [%rd1+8];
	ld.local.u32 	%r4013, [%rd1+4];
	// inline asm
	prmt.b32 %r4011, %r4012, %r4013, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4011;
	ld.local.u32 	%r4016, [%rd1+4];
	ld.local.u32 	%r4017, [%rd1];
	// inline asm
	prmt.b32 %r4015, %r4016, %r4017, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4015;
	ld.local.u32 	%r4020, [%rd1];
	// inline asm
	prmt.b32 %r4019, %r4020, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4019;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd123, 0;
	st.local.u32 	[%rd1+4], %rd123;
	st.local.u32 	[%rd1], %rd123;
	mov.u32 	%r8435, %r8426;
	mov.u32 	%r8436, %r8426;
	mov.u32 	%r8437, %r8426;
	bra.uni 	BB1_81;

BB1_141:
	setp.gt.s32	%p53, %r3, 27;
	@%p53 bra 	BB1_149;

	setp.gt.s32	%p59, %r3, 25;
	@%p59 bra 	BB1_146;

	setp.eq.s32	%p62, %r3, 24;
	@%p62 bra 	BB1_159;
	bra.uni 	BB1_144;

BB1_159:
	ld.local.u32 	%r6276, [%rd2+12];
	ld.local.u32 	%r6277, [%rd2+8];
	// inline asm
	prmt.b32 %r6275, %r6276, %r6277, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6275;
	ld.local.u32 	%r6280, [%rd2+8];
	ld.local.u32 	%r6281, [%rd2+4];
	// inline asm
	prmt.b32 %r6279, %r6280, %r6281, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6279;
	ld.local.u32 	%r6284, [%rd2+4];
	ld.local.u32 	%r6285, [%rd2];
	// inline asm
	prmt.b32 %r6283, %r6284, %r6285, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6283;
	ld.local.u32 	%r6288, [%rd2];
	ld.local.u32 	%r6289, [%rd1+12];
	// inline asm
	prmt.b32 %r6287, %r6288, %r6289, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6287;
	ld.local.u32 	%r6292, [%rd1+12];
	ld.local.u32 	%r6293, [%rd1+8];
	// inline asm
	prmt.b32 %r6291, %r6292, %r6293, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6291;
	ld.local.u32 	%r6296, [%rd1+8];
	ld.local.u32 	%r6297, [%rd1+4];
	// inline asm
	prmt.b32 %r6295, %r6296, %r6297, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6295;
	ld.local.u32 	%r6300, [%rd1+4];
	ld.local.u32 	%r6301, [%rd1];
	// inline asm
	prmt.b32 %r6299, %r6300, %r6301, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6299;
	ld.local.u32 	%r6304, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6303, %r6304, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6303;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1125, 0;
	st.local.u32 	[%rd1+4], %rd1125;
	st.local.u32 	[%rd1], %rd1125;
	bra.uni 	BB1_173;

BB1_51:
	setp.gt.s32	%p5, %r3, 27;
	@%p5 bra 	BB1_59;

	setp.gt.s32	%p11, %r3, 25;
	@%p11 bra 	BB1_56;

	setp.eq.s32	%p14, %r3, 24;
	@%p14 bra 	BB1_69;
	bra.uni 	BB1_54;

BB1_69:
	ld.local.u32 	%r1533, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8454, %r8426, %r1533, %r4;
	// inline asm
	ld.local.u32 	%r1536, [%rd8+12];
	ld.local.u32 	%r1537, [%rd8+8];
	// inline asm
	prmt.b32 %r8447, %r1536, %r1537, %r4;
	// inline asm
	ld.local.u32 	%r1540, [%rd8+8];
	ld.local.u32 	%r1541, [%rd8+4];
	// inline asm
	prmt.b32 %r8448, %r1540, %r1541, %r4;
	// inline asm
	ld.local.u32 	%r1544, [%rd8+4];
	ld.local.u32 	%r1545, [%rd8];
	// inline asm
	prmt.b32 %r8449, %r1544, %r1545, %r4;
	// inline asm
	ld.local.u32 	%r1548, [%rd8];
	ld.local.u32 	%r1549, [%rd7+12];
	// inline asm
	prmt.b32 %r8450, %r1548, %r1549, %r4;
	// inline asm
	ld.local.u32 	%r1552, [%rd7+12];
	ld.local.u32 	%r1553, [%rd7+8];
	// inline asm
	prmt.b32 %r8443, %r1552, %r1553, %r4;
	// inline asm
	ld.local.u32 	%r1556, [%rd7+8];
	ld.local.u32 	%r1557, [%rd7+4];
	// inline asm
	prmt.b32 %r8444, %r1556, %r1557, %r4;
	// inline asm
	ld.local.u32 	%r1560, [%rd7+4];
	ld.local.u32 	%r1561, [%rd7];
	// inline asm
	prmt.b32 %r8445, %r1560, %r1561, %r4;
	// inline asm
	ld.local.u32 	%r1564, [%rd7];
	ld.local.u32 	%r1565, [%rd6+12];
	// inline asm
	prmt.b32 %r8446, %r1564, %r1565, %r4;
	// inline asm
	ld.local.u32 	%r1568, [%rd6+12];
	ld.local.u32 	%r1569, [%rd6+8];
	// inline asm
	prmt.b32 %r8439, %r1568, %r1569, %r4;
	// inline asm
	ld.local.u32 	%r1572, [%rd6+8];
	ld.local.u32 	%r1573, [%rd6+4];
	// inline asm
	prmt.b32 %r8440, %r1572, %r1573, %r4;
	// inline asm
	ld.local.u32 	%r1576, [%rd6+4];
	ld.local.u32 	%r1577, [%rd6];
	// inline asm
	prmt.b32 %r8441, %r1576, %r1577, %r4;
	// inline asm
	ld.local.u32 	%r1580, [%rd6];
	ld.local.u32 	%r1581, [%rd5+12];
	// inline asm
	prmt.b32 %r8442, %r1580, %r1581, %r4;
	// inline asm
	ld.local.u32 	%r1584, [%rd5+12];
	ld.local.u32 	%r1585, [%rd5+8];
	// inline asm
	prmt.b32 %r8435, %r1584, %r1585, %r4;
	// inline asm
	ld.local.u32 	%r1588, [%rd5+8];
	ld.local.u32 	%r1589, [%rd5+4];
	// inline asm
	prmt.b32 %r8436, %r1588, %r1589, %r4;
	// inline asm
	ld.local.u32 	%r1592, [%rd5+4];
	ld.local.u32 	%r1593, [%rd5];
	// inline asm
	prmt.b32 %r8437, %r1592, %r1593, %r4;
	// inline asm
	ld.local.u32 	%r1596, [%rd5];
	ld.local.u32 	%r1597, [%rd4+12];
	// inline asm
	prmt.b32 %r8438, %r1596, %r1597, %r4;
	// inline asm
	ld.local.u32 	%r1600, [%rd4+12];
	ld.local.u32 	%r1601, [%rd4+8];
	// inline asm
	prmt.b32 %r8431, %r1600, %r1601, %r4;
	// inline asm
	ld.local.u32 	%r1604, [%rd4+8];
	ld.local.u32 	%r1605, [%rd4+4];
	// inline asm
	prmt.b32 %r8432, %r1604, %r1605, %r4;
	// inline asm
	ld.local.u32 	%r1608, [%rd4+4];
	ld.local.u32 	%r1609, [%rd4];
	// inline asm
	prmt.b32 %r8433, %r1608, %r1609, %r4;
	// inline asm
	ld.local.u32 	%r1612, [%rd4];
	ld.local.u32 	%r1613, [%rd3+12];
	// inline asm
	prmt.b32 %r8434, %r1612, %r1613, %r4;
	// inline asm
	ld.local.u32 	%r1616, [%rd3+12];
	ld.local.u32 	%r1617, [%rd3+8];
	// inline asm
	prmt.b32 %r8427, %r1616, %r1617, %r4;
	// inline asm
	ld.local.u32 	%r1620, [%rd3+8];
	ld.local.u32 	%r1621, [%rd3+4];
	// inline asm
	prmt.b32 %r8428, %r1620, %r1621, %r4;
	// inline asm
	ld.local.u32 	%r1624, [%rd3+4];
	ld.local.u32 	%r1625, [%rd3];
	// inline asm
	prmt.b32 %r8429, %r1624, %r1625, %r4;
	// inline asm
	ld.local.u32 	%r1628, [%rd3];
	ld.local.u32 	%r1629, [%rd2+12];
	// inline asm
	prmt.b32 %r8430, %r1628, %r1629, %r4;
	// inline asm
	ld.local.u32 	%r1632, [%rd2+12];
	ld.local.u32 	%r1633, [%rd2+8];
	// inline asm
	prmt.b32 %r1631, %r1632, %r1633, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1631;
	ld.local.u32 	%r1636, [%rd2+8];
	ld.local.u32 	%r1637, [%rd2+4];
	// inline asm
	prmt.b32 %r1635, %r1636, %r1637, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1635;
	ld.local.u32 	%r1640, [%rd2+4];
	ld.local.u32 	%r1641, [%rd2];
	// inline asm
	prmt.b32 %r1639, %r1640, %r1641, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1639;
	ld.local.u32 	%r1644, [%rd2];
	ld.local.u32 	%r1645, [%rd1+12];
	// inline asm
	prmt.b32 %r1643, %r1644, %r1645, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1643;
	ld.local.u32 	%r1648, [%rd1+12];
	ld.local.u32 	%r1649, [%rd1+8];
	// inline asm
	prmt.b32 %r1647, %r1648, %r1649, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1647;
	ld.local.u32 	%r1652, [%rd1+8];
	ld.local.u32 	%r1653, [%rd1+4];
	// inline asm
	prmt.b32 %r1651, %r1652, %r1653, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1651;
	ld.local.u32 	%r1656, [%rd1+4];
	ld.local.u32 	%r1657, [%rd1];
	// inline asm
	prmt.b32 %r1655, %r1656, %r1657, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1655;
	ld.local.u32 	%r1660, [%rd1];
	// inline asm
	prmt.b32 %r1659, %r1660, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1659;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd107, 0;
	st.local.u32 	[%rd1+4], %rd107;
	st.local.u32 	[%rd1], %rd107;
	mov.u32 	%r8451, %r8426;
	mov.u32 	%r8452, %r8426;
	mov.u32 	%r8453, %r8426;
	bra.uni 	BB1_85;

BB1_103:
	setp.gt.s32	%p88, %r3, 5;
	@%p88 bra 	BB1_107;

	setp.eq.s32	%p91, %r3, 4;
	@%p91 bra 	BB1_169;
	bra.uni 	BB1_105;

BB1_169:
	ld.local.u32 	%r7696, [%rd7+12];
	ld.local.u32 	%r7697, [%rd7+8];
	// inline asm
	prmt.b32 %r7695, %r7696, %r7697, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7695;
	ld.local.u32 	%r7700, [%rd7+8];
	ld.local.u32 	%r7701, [%rd7+4];
	// inline asm
	prmt.b32 %r7699, %r7700, %r7701, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7699;
	ld.local.u32 	%r7704, [%rd7+4];
	ld.local.u32 	%r7705, [%rd7];
	// inline asm
	prmt.b32 %r7703, %r7704, %r7705, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7703;
	ld.local.u32 	%r7708, [%rd7];
	ld.local.u32 	%r7709, [%rd6+12];
	// inline asm
	prmt.b32 %r7707, %r7708, %r7709, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7707;
	ld.local.u32 	%r7712, [%rd6+12];
	ld.local.u32 	%r7713, [%rd6+8];
	// inline asm
	prmt.b32 %r7711, %r7712, %r7713, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7711;
	ld.local.u32 	%r7716, [%rd6+8];
	ld.local.u32 	%r7717, [%rd6+4];
	// inline asm
	prmt.b32 %r7715, %r7716, %r7717, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7715;
	ld.local.u32 	%r7720, [%rd6+4];
	ld.local.u32 	%r7721, [%rd6];
	// inline asm
	prmt.b32 %r7719, %r7720, %r7721, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7719;
	ld.local.u32 	%r7724, [%rd6];
	ld.local.u32 	%r7725, [%rd5+12];
	// inline asm
	prmt.b32 %r7723, %r7724, %r7725, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7723;
	ld.local.u32 	%r7728, [%rd5+12];
	ld.local.u32 	%r7729, [%rd5+8];
	// inline asm
	prmt.b32 %r7727, %r7728, %r7729, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7727;
	ld.local.u32 	%r7732, [%rd5+8];
	ld.local.u32 	%r7733, [%rd5+4];
	// inline asm
	prmt.b32 %r7731, %r7732, %r7733, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7731;
	ld.local.u32 	%r7736, [%rd5+4];
	ld.local.u32 	%r7737, [%rd5];
	// inline asm
	prmt.b32 %r7735, %r7736, %r7737, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7735;
	ld.local.u32 	%r7740, [%rd5];
	ld.local.u32 	%r7741, [%rd4+12];
	// inline asm
	prmt.b32 %r7739, %r7740, %r7741, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7739;
	ld.local.u32 	%r7744, [%rd4+12];
	ld.local.u32 	%r7745, [%rd4+8];
	// inline asm
	prmt.b32 %r7743, %r7744, %r7745, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7743;
	ld.local.u32 	%r7748, [%rd4+8];
	ld.local.u32 	%r7749, [%rd4+4];
	// inline asm
	prmt.b32 %r7747, %r7748, %r7749, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7747;
	ld.local.u32 	%r7752, [%rd4+4];
	ld.local.u32 	%r7753, [%rd4];
	// inline asm
	prmt.b32 %r7751, %r7752, %r7753, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7751;
	ld.local.u32 	%r7756, [%rd4];
	ld.local.u32 	%r7757, [%rd3+12];
	// inline asm
	prmt.b32 %r7755, %r7756, %r7757, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7755;
	ld.local.u32 	%r7760, [%rd3+12];
	ld.local.u32 	%r7761, [%rd3+8];
	// inline asm
	prmt.b32 %r7759, %r7760, %r7761, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7759;
	ld.local.u32 	%r7764, [%rd3+8];
	ld.local.u32 	%r7765, [%rd3+4];
	// inline asm
	prmt.b32 %r7763, %r7764, %r7765, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7763;
	ld.local.u32 	%r7768, [%rd3+4];
	ld.local.u32 	%r7769, [%rd3];
	// inline asm
	prmt.b32 %r7767, %r7768, %r7769, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7767;
	ld.local.u32 	%r7772, [%rd3];
	ld.local.u32 	%r7773, [%rd2+12];
	// inline asm
	prmt.b32 %r7771, %r7772, %r7773, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7771;
	ld.local.u32 	%r7776, [%rd2+12];
	ld.local.u32 	%r7777, [%rd2+8];
	// inline asm
	prmt.b32 %r7775, %r7776, %r7777, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7775;
	ld.local.u32 	%r7780, [%rd2+8];
	ld.local.u32 	%r7781, [%rd2+4];
	// inline asm
	prmt.b32 %r7779, %r7780, %r7781, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7779;
	ld.local.u32 	%r7784, [%rd2+4];
	ld.local.u32 	%r7785, [%rd2];
	// inline asm
	prmt.b32 %r7783, %r7784, %r7785, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7783;
	ld.local.u32 	%r7788, [%rd2];
	ld.local.u32 	%r7789, [%rd1+12];
	// inline asm
	prmt.b32 %r7787, %r7788, %r7789, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7787;
	ld.local.u32 	%r7792, [%rd1+12];
	ld.local.u32 	%r7793, [%rd1+8];
	// inline asm
	prmt.b32 %r7791, %r7792, %r7793, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7791;
	ld.local.u32 	%r7796, [%rd1+8];
	ld.local.u32 	%r7797, [%rd1+4];
	// inline asm
	prmt.b32 %r7795, %r7796, %r7797, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7795;
	ld.local.u32 	%r7800, [%rd1+4];
	ld.local.u32 	%r7801, [%rd1];
	// inline asm
	prmt.b32 %r7799, %r7800, %r7801, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7799;
	ld.local.u32 	%r7804, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7803, %r7804, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7803;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1145, 0;
	st.local.u32 	[%rd1+4], %rd1145;
	st.local.u32 	[%rd1], %rd1145;
	bra.uni 	BB1_173;

BB1_13:
	setp.gt.s32	%p40, %r3, 5;
	@%p40 bra 	BB1_17;

	setp.eq.s32	%p43, %r3, 4;
	@%p43 bra 	BB1_79;
	bra.uni 	BB1_15;

BB1_79:
	ld.local.u32 	%r4523, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8434, %r8426, %r4523, %r4;
	// inline asm
	ld.local.u32 	%r4526, [%rd8+12];
	ld.local.u32 	%r4527, [%rd8+8];
	// inline asm
	prmt.b32 %r8427, %r4526, %r4527, %r4;
	// inline asm
	ld.local.u32 	%r4530, [%rd8+8];
	ld.local.u32 	%r4531, [%rd8+4];
	// inline asm
	prmt.b32 %r8428, %r4530, %r4531, %r4;
	// inline asm
	ld.local.u32 	%r4534, [%rd8+4];
	ld.local.u32 	%r4535, [%rd8];
	// inline asm
	prmt.b32 %r8429, %r4534, %r4535, %r4;
	// inline asm
	ld.local.u32 	%r4538, [%rd8];
	ld.local.u32 	%r4539, [%rd7+12];
	// inline asm
	prmt.b32 %r8430, %r4538, %r4539, %r4;
	// inline asm
	ld.local.u32 	%r4542, [%rd7+12];
	ld.local.u32 	%r4543, [%rd7+8];
	// inline asm
	prmt.b32 %r4541, %r4542, %r4543, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4541;
	ld.local.u32 	%r4546, [%rd7+8];
	ld.local.u32 	%r4547, [%rd7+4];
	// inline asm
	prmt.b32 %r4545, %r4546, %r4547, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4545;
	ld.local.u32 	%r4550, [%rd7+4];
	ld.local.u32 	%r4551, [%rd7];
	// inline asm
	prmt.b32 %r4549, %r4550, %r4551, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4549;
	ld.local.u32 	%r4554, [%rd7];
	ld.local.u32 	%r4555, [%rd6+12];
	// inline asm
	prmt.b32 %r4553, %r4554, %r4555, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4553;
	ld.local.u32 	%r4558, [%rd6+12];
	ld.local.u32 	%r4559, [%rd6+8];
	// inline asm
	prmt.b32 %r4557, %r4558, %r4559, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4557;
	ld.local.u32 	%r4562, [%rd6+8];
	ld.local.u32 	%r4563, [%rd6+4];
	// inline asm
	prmt.b32 %r4561, %r4562, %r4563, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4561;
	ld.local.u32 	%r4566, [%rd6+4];
	ld.local.u32 	%r4567, [%rd6];
	// inline asm
	prmt.b32 %r4565, %r4566, %r4567, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4565;
	ld.local.u32 	%r4570, [%rd6];
	ld.local.u32 	%r4571, [%rd5+12];
	// inline asm
	prmt.b32 %r4569, %r4570, %r4571, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4569;
	ld.local.u32 	%r4574, [%rd5+12];
	ld.local.u32 	%r4575, [%rd5+8];
	// inline asm
	prmt.b32 %r4573, %r4574, %r4575, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4573;
	ld.local.u32 	%r4578, [%rd5+8];
	ld.local.u32 	%r4579, [%rd5+4];
	// inline asm
	prmt.b32 %r4577, %r4578, %r4579, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4577;
	ld.local.u32 	%r4582, [%rd5+4];
	ld.local.u32 	%r4583, [%rd5];
	// inline asm
	prmt.b32 %r4581, %r4582, %r4583, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4581;
	ld.local.u32 	%r4586, [%rd5];
	ld.local.u32 	%r4587, [%rd4+12];
	// inline asm
	prmt.b32 %r4585, %r4586, %r4587, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4585;
	ld.local.u32 	%r4590, [%rd4+12];
	ld.local.u32 	%r4591, [%rd4+8];
	// inline asm
	prmt.b32 %r4589, %r4590, %r4591, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4589;
	ld.local.u32 	%r4594, [%rd4+8];
	ld.local.u32 	%r4595, [%rd4+4];
	// inline asm
	prmt.b32 %r4593, %r4594, %r4595, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4593;
	ld.local.u32 	%r4598, [%rd4+4];
	ld.local.u32 	%r4599, [%rd4];
	// inline asm
	prmt.b32 %r4597, %r4598, %r4599, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4597;
	ld.local.u32 	%r4602, [%rd4];
	ld.local.u32 	%r4603, [%rd3+12];
	// inline asm
	prmt.b32 %r4601, %r4602, %r4603, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4601;
	ld.local.u32 	%r4606, [%rd3+12];
	ld.local.u32 	%r4607, [%rd3+8];
	// inline asm
	prmt.b32 %r4605, %r4606, %r4607, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4605;
	ld.local.u32 	%r4610, [%rd3+8];
	ld.local.u32 	%r4611, [%rd3+4];
	// inline asm
	prmt.b32 %r4609, %r4610, %r4611, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4609;
	ld.local.u32 	%r4614, [%rd3+4];
	ld.local.u32 	%r4615, [%rd3];
	// inline asm
	prmt.b32 %r4613, %r4614, %r4615, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4613;
	ld.local.u32 	%r4618, [%rd3];
	ld.local.u32 	%r4619, [%rd2+12];
	// inline asm
	prmt.b32 %r4617, %r4618, %r4619, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4617;
	ld.local.u32 	%r4622, [%rd2+12];
	ld.local.u32 	%r4623, [%rd2+8];
	// inline asm
	prmt.b32 %r4621, %r4622, %r4623, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4621;
	ld.local.u32 	%r4626, [%rd2+8];
	ld.local.u32 	%r4627, [%rd2+4];
	// inline asm
	prmt.b32 %r4625, %r4626, %r4627, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4625;
	ld.local.u32 	%r4630, [%rd2+4];
	ld.local.u32 	%r4631, [%rd2];
	// inline asm
	prmt.b32 %r4629, %r4630, %r4631, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4629;
	ld.local.u32 	%r4634, [%rd2];
	ld.local.u32 	%r4635, [%rd1+12];
	// inline asm
	prmt.b32 %r4633, %r4634, %r4635, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4633;
	ld.local.u32 	%r4638, [%rd1+12];
	ld.local.u32 	%r4639, [%rd1+8];
	// inline asm
	prmt.b32 %r4637, %r4638, %r4639, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4637;
	ld.local.u32 	%r4642, [%rd1+8];
	ld.local.u32 	%r4643, [%rd1+4];
	// inline asm
	prmt.b32 %r4641, %r4642, %r4643, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4641;
	ld.local.u32 	%r4646, [%rd1+4];
	ld.local.u32 	%r4647, [%rd1];
	// inline asm
	prmt.b32 %r4645, %r4646, %r4647, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4645;
	ld.local.u32 	%r4650, [%rd1];
	// inline asm
	prmt.b32 %r4649, %r4650, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4649;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd127, 0;
	st.local.u32 	[%rd1+4], %rd127;
	st.local.u32 	[%rd1], %rd127;
	mov.u32 	%r8431, %r8426;
	mov.u32 	%r8432, %r8426;
	mov.u32 	%r8433, %r8426;
	bra.uni 	BB1_80;

BB1_134:
	setp.gt.s32	%p65, %r3, 21;
	@%p65 bra 	BB1_138;

	setp.eq.s32	%p68, %r3, 20;
	@%p68 bra 	BB1_161;
	bra.uni 	BB1_136;

BB1_161:
	ld.local.u32 	%r6432, [%rd3+12];
	ld.local.u32 	%r6433, [%rd3+8];
	// inline asm
	prmt.b32 %r6431, %r6432, %r6433, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6431;
	ld.local.u32 	%r6436, [%rd3+8];
	ld.local.u32 	%r6437, [%rd3+4];
	// inline asm
	prmt.b32 %r6435, %r6436, %r6437, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6435;
	ld.local.u32 	%r6440, [%rd3+4];
	ld.local.u32 	%r6441, [%rd3];
	// inline asm
	prmt.b32 %r6439, %r6440, %r6441, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6439;
	ld.local.u32 	%r6444, [%rd3];
	ld.local.u32 	%r6445, [%rd2+12];
	// inline asm
	prmt.b32 %r6443, %r6444, %r6445, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6443;
	ld.local.u32 	%r6448, [%rd2+12];
	ld.local.u32 	%r6449, [%rd2+8];
	// inline asm
	prmt.b32 %r6447, %r6448, %r6449, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6447;
	ld.local.u32 	%r6452, [%rd2+8];
	ld.local.u32 	%r6453, [%rd2+4];
	// inline asm
	prmt.b32 %r6451, %r6452, %r6453, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6451;
	ld.local.u32 	%r6456, [%rd2+4];
	ld.local.u32 	%r6457, [%rd2];
	// inline asm
	prmt.b32 %r6455, %r6456, %r6457, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6455;
	ld.local.u32 	%r6460, [%rd2];
	ld.local.u32 	%r6461, [%rd1+12];
	// inline asm
	prmt.b32 %r6459, %r6460, %r6461, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6459;
	ld.local.u32 	%r6464, [%rd1+12];
	ld.local.u32 	%r6465, [%rd1+8];
	// inline asm
	prmt.b32 %r6463, %r6464, %r6465, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6463;
	ld.local.u32 	%r6468, [%rd1+8];
	ld.local.u32 	%r6469, [%rd1+4];
	// inline asm
	prmt.b32 %r6467, %r6468, %r6469, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6467;
	ld.local.u32 	%r6472, [%rd1+4];
	ld.local.u32 	%r6473, [%rd1];
	// inline asm
	prmt.b32 %r6471, %r6472, %r6473, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6471;
	ld.local.u32 	%r6476, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6475, %r6476, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6475;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1129, 0;
	st.local.u32 	[%rd1+4], %rd1129;
	st.local.u32 	[%rd1], %rd1129;
	bra.uni 	BB1_173;

BB1_44:
	setp.gt.s32	%p17, %r3, 21;
	@%p17 bra 	BB1_48;

	setp.eq.s32	%p20, %r3, 20;
	@%p20 bra 	BB1_71;
	bra.uni 	BB1_46;

BB1_71:
	ld.local.u32 	%r2099, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8450, %r8426, %r2099, %r4;
	// inline asm
	ld.local.u32 	%r2102, [%rd8+12];
	ld.local.u32 	%r2103, [%rd8+8];
	// inline asm
	prmt.b32 %r8443, %r2102, %r2103, %r4;
	// inline asm
	ld.local.u32 	%r2106, [%rd8+8];
	ld.local.u32 	%r2107, [%rd8+4];
	// inline asm
	prmt.b32 %r8444, %r2106, %r2107, %r4;
	// inline asm
	ld.local.u32 	%r2110, [%rd8+4];
	ld.local.u32 	%r2111, [%rd8];
	// inline asm
	prmt.b32 %r8445, %r2110, %r2111, %r4;
	// inline asm
	ld.local.u32 	%r2114, [%rd8];
	ld.local.u32 	%r2115, [%rd7+12];
	// inline asm
	prmt.b32 %r8446, %r2114, %r2115, %r4;
	// inline asm
	ld.local.u32 	%r2118, [%rd7+12];
	ld.local.u32 	%r2119, [%rd7+8];
	// inline asm
	prmt.b32 %r8439, %r2118, %r2119, %r4;
	// inline asm
	ld.local.u32 	%r2122, [%rd7+8];
	ld.local.u32 	%r2123, [%rd7+4];
	// inline asm
	prmt.b32 %r8440, %r2122, %r2123, %r4;
	// inline asm
	ld.local.u32 	%r2126, [%rd7+4];
	ld.local.u32 	%r2127, [%rd7];
	// inline asm
	prmt.b32 %r8441, %r2126, %r2127, %r4;
	// inline asm
	ld.local.u32 	%r2130, [%rd7];
	ld.local.u32 	%r2131, [%rd6+12];
	// inline asm
	prmt.b32 %r8442, %r2130, %r2131, %r4;
	// inline asm
	ld.local.u32 	%r2134, [%rd6+12];
	ld.local.u32 	%r2135, [%rd6+8];
	// inline asm
	prmt.b32 %r8435, %r2134, %r2135, %r4;
	// inline asm
	ld.local.u32 	%r2138, [%rd6+8];
	ld.local.u32 	%r2139, [%rd6+4];
	// inline asm
	prmt.b32 %r8436, %r2138, %r2139, %r4;
	// inline asm
	ld.local.u32 	%r2142, [%rd6+4];
	ld.local.u32 	%r2143, [%rd6];
	// inline asm
	prmt.b32 %r8437, %r2142, %r2143, %r4;
	// inline asm
	ld.local.u32 	%r2146, [%rd6];
	ld.local.u32 	%r2147, [%rd5+12];
	// inline asm
	prmt.b32 %r8438, %r2146, %r2147, %r4;
	// inline asm
	ld.local.u32 	%r2150, [%rd5+12];
	ld.local.u32 	%r2151, [%rd5+8];
	// inline asm
	prmt.b32 %r8431, %r2150, %r2151, %r4;
	// inline asm
	ld.local.u32 	%r2154, [%rd5+8];
	ld.local.u32 	%r2155, [%rd5+4];
	// inline asm
	prmt.b32 %r8432, %r2154, %r2155, %r4;
	// inline asm
	ld.local.u32 	%r2158, [%rd5+4];
	ld.local.u32 	%r2159, [%rd5];
	// inline asm
	prmt.b32 %r8433, %r2158, %r2159, %r4;
	// inline asm
	ld.local.u32 	%r2162, [%rd5];
	ld.local.u32 	%r2163, [%rd4+12];
	// inline asm
	prmt.b32 %r8434, %r2162, %r2163, %r4;
	// inline asm
	ld.local.u32 	%r2166, [%rd4+12];
	ld.local.u32 	%r2167, [%rd4+8];
	// inline asm
	prmt.b32 %r8427, %r2166, %r2167, %r4;
	// inline asm
	ld.local.u32 	%r2170, [%rd4+8];
	ld.local.u32 	%r2171, [%rd4+4];
	// inline asm
	prmt.b32 %r8428, %r2170, %r2171, %r4;
	// inline asm
	ld.local.u32 	%r2174, [%rd4+4];
	ld.local.u32 	%r2175, [%rd4];
	// inline asm
	prmt.b32 %r8429, %r2174, %r2175, %r4;
	// inline asm
	ld.local.u32 	%r2178, [%rd4];
	ld.local.u32 	%r2179, [%rd3+12];
	// inline asm
	prmt.b32 %r8430, %r2178, %r2179, %r4;
	// inline asm
	ld.local.u32 	%r2182, [%rd3+12];
	ld.local.u32 	%r2183, [%rd3+8];
	// inline asm
	prmt.b32 %r2181, %r2182, %r2183, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2181;
	ld.local.u32 	%r2186, [%rd3+8];
	ld.local.u32 	%r2187, [%rd3+4];
	// inline asm
	prmt.b32 %r2185, %r2186, %r2187, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2185;
	ld.local.u32 	%r2190, [%rd3+4];
	ld.local.u32 	%r2191, [%rd3];
	// inline asm
	prmt.b32 %r2189, %r2190, %r2191, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2189;
	ld.local.u32 	%r2194, [%rd3];
	ld.local.u32 	%r2195, [%rd2+12];
	// inline asm
	prmt.b32 %r2193, %r2194, %r2195, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2193;
	ld.local.u32 	%r2198, [%rd2+12];
	ld.local.u32 	%r2199, [%rd2+8];
	// inline asm
	prmt.b32 %r2197, %r2198, %r2199, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2197;
	ld.local.u32 	%r2202, [%rd2+8];
	ld.local.u32 	%r2203, [%rd2+4];
	// inline asm
	prmt.b32 %r2201, %r2202, %r2203, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2201;
	ld.local.u32 	%r2206, [%rd2+4];
	ld.local.u32 	%r2207, [%rd2];
	// inline asm
	prmt.b32 %r2205, %r2206, %r2207, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2205;
	ld.local.u32 	%r2210, [%rd2];
	ld.local.u32 	%r2211, [%rd1+12];
	// inline asm
	prmt.b32 %r2209, %r2210, %r2211, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2209;
	ld.local.u32 	%r2214, [%rd1+12];
	ld.local.u32 	%r2215, [%rd1+8];
	// inline asm
	prmt.b32 %r2213, %r2214, %r2215, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2213;
	ld.local.u32 	%r2218, [%rd1+8];
	ld.local.u32 	%r2219, [%rd1+4];
	// inline asm
	prmt.b32 %r2217, %r2218, %r2219, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2217;
	ld.local.u32 	%r2222, [%rd1+4];
	ld.local.u32 	%r2223, [%rd1];
	// inline asm
	prmt.b32 %r2221, %r2222, %r2223, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2221;
	ld.local.u32 	%r2226, [%rd1];
	// inline asm
	prmt.b32 %r2225, %r2226, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2225;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd111, 0;
	st.local.u32 	[%rd1+4], %rd111;
	st.local.u32 	[%rd1], %rd111;
	mov.u32 	%r8447, %r8426;
	mov.u32 	%r8448, %r8426;
	mov.u32 	%r8449, %r8426;
	bra.uni 	BB1_84;

BB1_118:
	setp.gt.s32	%p77, %r3, 13;
	@%p77 bra 	BB1_122;

	setp.eq.s32	%p80, %r3, 12;
	@%p80 bra 	BB1_165;
	bra.uni 	BB1_120;

BB1_165:
	ld.local.u32 	%r6936, [%rd5+12];
	ld.local.u32 	%r6937, [%rd5+8];
	// inline asm
	prmt.b32 %r6935, %r6936, %r6937, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6935;
	ld.local.u32 	%r6940, [%rd5+8];
	ld.local.u32 	%r6941, [%rd5+4];
	// inline asm
	prmt.b32 %r6939, %r6940, %r6941, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6939;
	ld.local.u32 	%r6944, [%rd5+4];
	ld.local.u32 	%r6945, [%rd5];
	// inline asm
	prmt.b32 %r6943, %r6944, %r6945, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6943;
	ld.local.u32 	%r6948, [%rd5];
	ld.local.u32 	%r6949, [%rd4+12];
	// inline asm
	prmt.b32 %r6947, %r6948, %r6949, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6947;
	ld.local.u32 	%r6952, [%rd4+12];
	ld.local.u32 	%r6953, [%rd4+8];
	// inline asm
	prmt.b32 %r6951, %r6952, %r6953, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6951;
	ld.local.u32 	%r6956, [%rd4+8];
	ld.local.u32 	%r6957, [%rd4+4];
	// inline asm
	prmt.b32 %r6955, %r6956, %r6957, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6955;
	ld.local.u32 	%r6960, [%rd4+4];
	ld.local.u32 	%r6961, [%rd4];
	// inline asm
	prmt.b32 %r6959, %r6960, %r6961, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6959;
	ld.local.u32 	%r6964, [%rd4];
	ld.local.u32 	%r6965, [%rd3+12];
	// inline asm
	prmt.b32 %r6963, %r6964, %r6965, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6963;
	ld.local.u32 	%r6968, [%rd3+12];
	ld.local.u32 	%r6969, [%rd3+8];
	// inline asm
	prmt.b32 %r6967, %r6968, %r6969, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6967;
	ld.local.u32 	%r6972, [%rd3+8];
	ld.local.u32 	%r6973, [%rd3+4];
	// inline asm
	prmt.b32 %r6971, %r6972, %r6973, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6971;
	ld.local.u32 	%r6976, [%rd3+4];
	ld.local.u32 	%r6977, [%rd3];
	// inline asm
	prmt.b32 %r6975, %r6976, %r6977, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6975;
	ld.local.u32 	%r6980, [%rd3];
	ld.local.u32 	%r6981, [%rd2+12];
	// inline asm
	prmt.b32 %r6979, %r6980, %r6981, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6979;
	ld.local.u32 	%r6984, [%rd2+12];
	ld.local.u32 	%r6985, [%rd2+8];
	// inline asm
	prmt.b32 %r6983, %r6984, %r6985, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6983;
	ld.local.u32 	%r6988, [%rd2+8];
	ld.local.u32 	%r6989, [%rd2+4];
	// inline asm
	prmt.b32 %r6987, %r6988, %r6989, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6987;
	ld.local.u32 	%r6992, [%rd2+4];
	ld.local.u32 	%r6993, [%rd2];
	// inline asm
	prmt.b32 %r6991, %r6992, %r6993, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6991;
	ld.local.u32 	%r6996, [%rd2];
	ld.local.u32 	%r6997, [%rd1+12];
	// inline asm
	prmt.b32 %r6995, %r6996, %r6997, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6995;
	ld.local.u32 	%r7000, [%rd1+12];
	ld.local.u32 	%r7001, [%rd1+8];
	// inline asm
	prmt.b32 %r6999, %r7000, %r7001, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6999;
	ld.local.u32 	%r7004, [%rd1+8];
	ld.local.u32 	%r7005, [%rd1+4];
	// inline asm
	prmt.b32 %r7003, %r7004, %r7005, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7003;
	ld.local.u32 	%r7008, [%rd1+4];
	ld.local.u32 	%r7009, [%rd1];
	// inline asm
	prmt.b32 %r7007, %r7008, %r7009, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7007;
	ld.local.u32 	%r7012, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7011, %r7012, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7011;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1137, 0;
	st.local.u32 	[%rd1+4], %rd1137;
	st.local.u32 	[%rd1], %rd1137;
	bra.uni 	BB1_173;

BB1_28:
	setp.gt.s32	%p29, %r3, 13;
	@%p29 bra 	BB1_32;

	setp.eq.s32	%p32, %r3, 12;
	@%p32 bra 	BB1_75;
	bra.uni 	BB1_30;

BB1_75:
	ld.local.u32 	%r3279, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8442, %r8426, %r3279, %r4;
	// inline asm
	ld.local.u32 	%r3282, [%rd8+12];
	ld.local.u32 	%r3283, [%rd8+8];
	// inline asm
	prmt.b32 %r8435, %r3282, %r3283, %r4;
	// inline asm
	ld.local.u32 	%r3286, [%rd8+8];
	ld.local.u32 	%r3287, [%rd8+4];
	// inline asm
	prmt.b32 %r8436, %r3286, %r3287, %r4;
	// inline asm
	ld.local.u32 	%r3290, [%rd8+4];
	ld.local.u32 	%r3291, [%rd8];
	// inline asm
	prmt.b32 %r8437, %r3290, %r3291, %r4;
	// inline asm
	ld.local.u32 	%r3294, [%rd8];
	ld.local.u32 	%r3295, [%rd7+12];
	// inline asm
	prmt.b32 %r8438, %r3294, %r3295, %r4;
	// inline asm
	ld.local.u32 	%r3298, [%rd7+12];
	ld.local.u32 	%r3299, [%rd7+8];
	// inline asm
	prmt.b32 %r8431, %r3298, %r3299, %r4;
	// inline asm
	ld.local.u32 	%r3302, [%rd7+8];
	ld.local.u32 	%r3303, [%rd7+4];
	// inline asm
	prmt.b32 %r8432, %r3302, %r3303, %r4;
	// inline asm
	ld.local.u32 	%r3306, [%rd7+4];
	ld.local.u32 	%r3307, [%rd7];
	// inline asm
	prmt.b32 %r8433, %r3306, %r3307, %r4;
	// inline asm
	ld.local.u32 	%r3310, [%rd7];
	ld.local.u32 	%r3311, [%rd6+12];
	// inline asm
	prmt.b32 %r8434, %r3310, %r3311, %r4;
	// inline asm
	ld.local.u32 	%r3314, [%rd6+12];
	ld.local.u32 	%r3315, [%rd6+8];
	// inline asm
	prmt.b32 %r8427, %r3314, %r3315, %r4;
	// inline asm
	ld.local.u32 	%r3318, [%rd6+8];
	ld.local.u32 	%r3319, [%rd6+4];
	// inline asm
	prmt.b32 %r8428, %r3318, %r3319, %r4;
	// inline asm
	ld.local.u32 	%r3322, [%rd6+4];
	ld.local.u32 	%r3323, [%rd6];
	// inline asm
	prmt.b32 %r8429, %r3322, %r3323, %r4;
	// inline asm
	ld.local.u32 	%r3326, [%rd6];
	ld.local.u32 	%r3327, [%rd5+12];
	// inline asm
	prmt.b32 %r8430, %r3326, %r3327, %r4;
	// inline asm
	ld.local.u32 	%r3330, [%rd5+12];
	ld.local.u32 	%r3331, [%rd5+8];
	// inline asm
	prmt.b32 %r3329, %r3330, %r3331, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3329;
	ld.local.u32 	%r3334, [%rd5+8];
	ld.local.u32 	%r3335, [%rd5+4];
	// inline asm
	prmt.b32 %r3333, %r3334, %r3335, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3333;
	ld.local.u32 	%r3338, [%rd5+4];
	ld.local.u32 	%r3339, [%rd5];
	// inline asm
	prmt.b32 %r3337, %r3338, %r3339, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3337;
	ld.local.u32 	%r3342, [%rd5];
	ld.local.u32 	%r3343, [%rd4+12];
	// inline asm
	prmt.b32 %r3341, %r3342, %r3343, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3341;
	ld.local.u32 	%r3346, [%rd4+12];
	ld.local.u32 	%r3347, [%rd4+8];
	// inline asm
	prmt.b32 %r3345, %r3346, %r3347, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3345;
	ld.local.u32 	%r3350, [%rd4+8];
	ld.local.u32 	%r3351, [%rd4+4];
	// inline asm
	prmt.b32 %r3349, %r3350, %r3351, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3349;
	ld.local.u32 	%r3354, [%rd4+4];
	ld.local.u32 	%r3355, [%rd4];
	// inline asm
	prmt.b32 %r3353, %r3354, %r3355, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3353;
	ld.local.u32 	%r3358, [%rd4];
	ld.local.u32 	%r3359, [%rd3+12];
	// inline asm
	prmt.b32 %r3357, %r3358, %r3359, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3357;
	ld.local.u32 	%r3362, [%rd3+12];
	ld.local.u32 	%r3363, [%rd3+8];
	// inline asm
	prmt.b32 %r3361, %r3362, %r3363, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3361;
	ld.local.u32 	%r3366, [%rd3+8];
	ld.local.u32 	%r3367, [%rd3+4];
	// inline asm
	prmt.b32 %r3365, %r3366, %r3367, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3365;
	ld.local.u32 	%r3370, [%rd3+4];
	ld.local.u32 	%r3371, [%rd3];
	// inline asm
	prmt.b32 %r3369, %r3370, %r3371, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3369;
	ld.local.u32 	%r3374, [%rd3];
	ld.local.u32 	%r3375, [%rd2+12];
	// inline asm
	prmt.b32 %r3373, %r3374, %r3375, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3373;
	ld.local.u32 	%r3378, [%rd2+12];
	ld.local.u32 	%r3379, [%rd2+8];
	// inline asm
	prmt.b32 %r3377, %r3378, %r3379, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3377;
	ld.local.u32 	%r3382, [%rd2+8];
	ld.local.u32 	%r3383, [%rd2+4];
	// inline asm
	prmt.b32 %r3381, %r3382, %r3383, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3381;
	ld.local.u32 	%r3386, [%rd2+4];
	ld.local.u32 	%r3387, [%rd2];
	// inline asm
	prmt.b32 %r3385, %r3386, %r3387, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3385;
	ld.local.u32 	%r3390, [%rd2];
	ld.local.u32 	%r3391, [%rd1+12];
	// inline asm
	prmt.b32 %r3389, %r3390, %r3391, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3389;
	ld.local.u32 	%r3394, [%rd1+12];
	ld.local.u32 	%r3395, [%rd1+8];
	// inline asm
	prmt.b32 %r3393, %r3394, %r3395, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3393;
	ld.local.u32 	%r3398, [%rd1+8];
	ld.local.u32 	%r3399, [%rd1+4];
	// inline asm
	prmt.b32 %r3397, %r3398, %r3399, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3397;
	ld.local.u32 	%r3402, [%rd1+4];
	ld.local.u32 	%r3403, [%rd1];
	// inline asm
	prmt.b32 %r3401, %r3402, %r3403, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3401;
	ld.local.u32 	%r3406, [%rd1];
	// inline asm
	prmt.b32 %r3405, %r3406, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3405;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd119, 0;
	st.local.u32 	[%rd1+4], %rd119;
	st.local.u32 	[%rd1], %rd119;
	mov.u32 	%r8439, %r8426;
	mov.u32 	%r8440, %r8426;
	mov.u32 	%r8441, %r8426;
	bra.uni 	BB1_82;

BB1_149:
	setp.gt.s32	%p54, %r3, 29;
	@%p54 bra 	BB1_153;

	setp.eq.s32	%p57, %r3, 28;
	@%p57 bra 	BB1_157;
	bra.uni 	BB1_151;

BB1_157:
	ld.local.u32 	%r6184, [%rd1+12];
	ld.local.u32 	%r6185, [%rd1+8];
	// inline asm
	prmt.b32 %r6183, %r6184, %r6185, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6183;
	ld.local.u32 	%r6188, [%rd1+8];
	ld.local.u32 	%r6189, [%rd1+4];
	// inline asm
	prmt.b32 %r6187, %r6188, %r6189, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6187;
	ld.local.u32 	%r6192, [%rd1+4];
	ld.local.u32 	%r6193, [%rd1];
	// inline asm
	prmt.b32 %r6191, %r6192, %r6193, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6191;
	ld.local.u32 	%r6196, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6195, %r6196, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6195;
	st.local.u32 	[%rd7+12], %r8460;
	st.local.u32 	[%rd7+8], %r8460;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1121, 0;
	st.local.u32 	[%rd1+4], %rd1121;
	st.local.u32 	[%rd1], %rd1121;
	bra.uni 	BB1_173;

BB1_59:
	setp.gt.s32	%p6, %r3, 29;
	@%p6 bra 	BB1_63;

	setp.eq.s32	%p9, %r3, 28;
	@%p9 bra 	BB1_67;
	bra.uni 	BB1_61;

BB1_67:
	ld.local.u32 	%r983, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8458, %r8426, %r983, %r4;
	// inline asm
	ld.local.u32 	%r986, [%rd8+12];
	ld.local.u32 	%r987, [%rd8+8];
	// inline asm
	prmt.b32 %r8451, %r986, %r987, %r4;
	// inline asm
	ld.local.u32 	%r990, [%rd8+8];
	ld.local.u32 	%r991, [%rd8+4];
	// inline asm
	prmt.b32 %r8452, %r990, %r991, %r4;
	// inline asm
	ld.local.u32 	%r994, [%rd8+4];
	ld.local.u32 	%r995, [%rd8];
	// inline asm
	prmt.b32 %r8453, %r994, %r995, %r4;
	// inline asm
	ld.local.u32 	%r998, [%rd8];
	ld.local.u32 	%r999, [%rd7+12];
	// inline asm
	prmt.b32 %r8454, %r998, %r999, %r4;
	// inline asm
	ld.local.u32 	%r1002, [%rd7+12];
	ld.local.u32 	%r1003, [%rd7+8];
	// inline asm
	prmt.b32 %r8447, %r1002, %r1003, %r4;
	// inline asm
	ld.local.u32 	%r1006, [%rd7+8];
	ld.local.u32 	%r1007, [%rd7+4];
	// inline asm
	prmt.b32 %r8448, %r1006, %r1007, %r4;
	// inline asm
	ld.local.u32 	%r1010, [%rd7+4];
	ld.local.u32 	%r1011, [%rd7];
	// inline asm
	prmt.b32 %r8449, %r1010, %r1011, %r4;
	// inline asm
	ld.local.u32 	%r1014, [%rd7];
	ld.local.u32 	%r1015, [%rd6+12];
	// inline asm
	prmt.b32 %r8450, %r1014, %r1015, %r4;
	// inline asm
	ld.local.u32 	%r1018, [%rd6+12];
	ld.local.u32 	%r1019, [%rd6+8];
	// inline asm
	prmt.b32 %r8443, %r1018, %r1019, %r4;
	// inline asm
	ld.local.u32 	%r1022, [%rd6+8];
	ld.local.u32 	%r1023, [%rd6+4];
	// inline asm
	prmt.b32 %r8444, %r1022, %r1023, %r4;
	// inline asm
	ld.local.u32 	%r1026, [%rd6+4];
	ld.local.u32 	%r1027, [%rd6];
	// inline asm
	prmt.b32 %r8445, %r1026, %r1027, %r4;
	// inline asm
	ld.local.u32 	%r1030, [%rd6];
	ld.local.u32 	%r1031, [%rd5+12];
	// inline asm
	prmt.b32 %r8446, %r1030, %r1031, %r4;
	// inline asm
	ld.local.u32 	%r1034, [%rd5+12];
	ld.local.u32 	%r1035, [%rd5+8];
	// inline asm
	prmt.b32 %r8439, %r1034, %r1035, %r4;
	// inline asm
	ld.local.u32 	%r1038, [%rd5+8];
	ld.local.u32 	%r1039, [%rd5+4];
	// inline asm
	prmt.b32 %r8440, %r1038, %r1039, %r4;
	// inline asm
	ld.local.u32 	%r1042, [%rd5+4];
	ld.local.u32 	%r1043, [%rd5];
	// inline asm
	prmt.b32 %r8441, %r1042, %r1043, %r4;
	// inline asm
	ld.local.u32 	%r1046, [%rd5];
	ld.local.u32 	%r1047, [%rd4+12];
	// inline asm
	prmt.b32 %r8442, %r1046, %r1047, %r4;
	// inline asm
	ld.local.u32 	%r1050, [%rd4+12];
	ld.local.u32 	%r1051, [%rd4+8];
	// inline asm
	prmt.b32 %r8435, %r1050, %r1051, %r4;
	// inline asm
	ld.local.u32 	%r1054, [%rd4+8];
	ld.local.u32 	%r1055, [%rd4+4];
	// inline asm
	prmt.b32 %r8436, %r1054, %r1055, %r4;
	// inline asm
	ld.local.u32 	%r1058, [%rd4+4];
	ld.local.u32 	%r1059, [%rd4];
	// inline asm
	prmt.b32 %r8437, %r1058, %r1059, %r4;
	// inline asm
	ld.local.u32 	%r1062, [%rd4];
	ld.local.u32 	%r1063, [%rd3+12];
	// inline asm
	prmt.b32 %r8438, %r1062, %r1063, %r4;
	// inline asm
	ld.local.u32 	%r1066, [%rd3+12];
	ld.local.u32 	%r1067, [%rd3+8];
	// inline asm
	prmt.b32 %r8431, %r1066, %r1067, %r4;
	// inline asm
	ld.local.u32 	%r1070, [%rd3+8];
	ld.local.u32 	%r1071, [%rd3+4];
	// inline asm
	prmt.b32 %r8432, %r1070, %r1071, %r4;
	// inline asm
	ld.local.u32 	%r1074, [%rd3+4];
	ld.local.u32 	%r1075, [%rd3];
	// inline asm
	prmt.b32 %r8433, %r1074, %r1075, %r4;
	// inline asm
	ld.local.u32 	%r1078, [%rd3];
	ld.local.u32 	%r1079, [%rd2+12];
	// inline asm
	prmt.b32 %r8434, %r1078, %r1079, %r4;
	// inline asm
	ld.local.u32 	%r1082, [%rd2+12];
	ld.local.u32 	%r1083, [%rd2+8];
	// inline asm
	prmt.b32 %r8427, %r1082, %r1083, %r4;
	// inline asm
	ld.local.u32 	%r1086, [%rd2+8];
	ld.local.u32 	%r1087, [%rd2+4];
	// inline asm
	prmt.b32 %r8428, %r1086, %r1087, %r4;
	// inline asm
	ld.local.u32 	%r1090, [%rd2+4];
	ld.local.u32 	%r1091, [%rd2];
	// inline asm
	prmt.b32 %r8429, %r1090, %r1091, %r4;
	// inline asm
	ld.local.u32 	%r1094, [%rd2];
	ld.local.u32 	%r1095, [%rd1+12];
	// inline asm
	prmt.b32 %r8430, %r1094, %r1095, %r4;
	// inline asm
	ld.local.u32 	%r1098, [%rd1+12];
	ld.local.u32 	%r1099, [%rd1+8];
	// inline asm
	prmt.b32 %r1097, %r1098, %r1099, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1097;
	ld.local.u32 	%r1102, [%rd1+8];
	ld.local.u32 	%r1103, [%rd1+4];
	// inline asm
	prmt.b32 %r1101, %r1102, %r1103, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1101;
	ld.local.u32 	%r1106, [%rd1+4];
	ld.local.u32 	%r1107, [%rd1];
	// inline asm
	prmt.b32 %r1105, %r1106, %r1107, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1105;
	ld.local.u32 	%r1110, [%rd1];
	// inline asm
	prmt.b32 %r1109, %r1110, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1109;
	st.local.u32 	[%rd7+12], %r8426;
	st.local.u32 	[%rd7+8], %r8426;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd103, 0;
	st.local.u32 	[%rd1+4], %rd103;
	st.local.u32 	[%rd1], %rd103;
	mov.u32 	%r8455, %r8426;
	mov.u32 	%r8456, %r8426;
	mov.u32 	%r8457, %r8426;
	bra.uni 	BB1_90;

BB1_100:
	setp.eq.s32	%p94, %r3, 2;
	@%p94 bra 	BB1_170;
	bra.uni 	BB1_101;

BB1_170:
	ld.local.u32 	%r7926, [%rd8+4];
	ld.local.u32 	%r7927, [%rd8];
	// inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7925;
	ld.local.u32 	%r7930, [%rd8];
	ld.local.u32 	%r7931, [%rd7+12];
	// inline asm
	prmt.b32 %r7929, %r7930, %r7931, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7929;
	ld.local.u32 	%r7934, [%rd7+12];
	ld.local.u32 	%r7935, [%rd7+8];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7933;
	ld.local.u32 	%r7938, [%rd7+8];
	ld.local.u32 	%r7939, [%rd7+4];
	// inline asm
	prmt.b32 %r7937, %r7938, %r7939, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7937;
	ld.local.u32 	%r7942, [%rd7+4];
	ld.local.u32 	%r7943, [%rd7];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7941;
	ld.local.u32 	%r7946, [%rd7];
	ld.local.u32 	%r7947, [%rd6+12];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7945;
	ld.local.u32 	%r7950, [%rd6+12];
	ld.local.u32 	%r7951, [%rd6+8];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7949;
	ld.local.u32 	%r7954, [%rd6+8];
	ld.local.u32 	%r7955, [%rd6+4];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7953;
	ld.local.u32 	%r7958, [%rd6+4];
	ld.local.u32 	%r7959, [%rd6];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7957;
	ld.local.u32 	%r7962, [%rd6];
	ld.local.u32 	%r7963, [%rd5+12];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7961;
	ld.local.u32 	%r7966, [%rd5+12];
	ld.local.u32 	%r7967, [%rd5+8];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7965;
	ld.local.u32 	%r7970, [%rd5+8];
	ld.local.u32 	%r7971, [%rd5+4];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7969;
	ld.local.u32 	%r7974, [%rd5+4];
	ld.local.u32 	%r7975, [%rd5];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7973;
	ld.local.u32 	%r7978, [%rd5];
	ld.local.u32 	%r7979, [%rd4+12];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7977;
	ld.local.u32 	%r7982, [%rd4+12];
	ld.local.u32 	%r7983, [%rd4+8];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7981;
	ld.local.u32 	%r7986, [%rd4+8];
	ld.local.u32 	%r7987, [%rd4+4];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7985;
	ld.local.u32 	%r7990, [%rd4+4];
	ld.local.u32 	%r7991, [%rd4];
	// inline asm
	prmt.b32 %r7989, %r7990, %r7991, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7989;
	ld.local.u32 	%r7994, [%rd4];
	ld.local.u32 	%r7995, [%rd3+12];
	// inline asm
	prmt.b32 %r7993, %r7994, %r7995, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7993;
	ld.local.u32 	%r7998, [%rd3+12];
	ld.local.u32 	%r7999, [%rd3+8];
	// inline asm
	prmt.b32 %r7997, %r7998, %r7999, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7997;
	ld.local.u32 	%r8002, [%rd3+8];
	ld.local.u32 	%r8003, [%rd3+4];
	// inline asm
	prmt.b32 %r8001, %r8002, %r8003, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8001;
	ld.local.u32 	%r8006, [%rd3+4];
	ld.local.u32 	%r8007, [%rd3];
	// inline asm
	prmt.b32 %r8005, %r8006, %r8007, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8005;
	ld.local.u32 	%r8010, [%rd3];
	ld.local.u32 	%r8011, [%rd2+12];
	// inline asm
	prmt.b32 %r8009, %r8010, %r8011, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8009;
	ld.local.u32 	%r8014, [%rd2+12];
	ld.local.u32 	%r8015, [%rd2+8];
	// inline asm
	prmt.b32 %r8013, %r8014, %r8015, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8013;
	ld.local.u32 	%r8018, [%rd2+8];
	ld.local.u32 	%r8019, [%rd2+4];
	// inline asm
	prmt.b32 %r8017, %r8018, %r8019, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8017;
	ld.local.u32 	%r8022, [%rd2+4];
	ld.local.u32 	%r8023, [%rd2];
	// inline asm
	prmt.b32 %r8021, %r8022, %r8023, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8021;
	ld.local.u32 	%r8026, [%rd2];
	ld.local.u32 	%r8027, [%rd1+12];
	// inline asm
	prmt.b32 %r8025, %r8026, %r8027, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8025;
	ld.local.u32 	%r8030, [%rd1+12];
	ld.local.u32 	%r8031, [%rd1+8];
	// inline asm
	prmt.b32 %r8029, %r8030, %r8031, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8029;
	ld.local.u32 	%r8034, [%rd1+8];
	ld.local.u32 	%r8035, [%rd1+4];
	// inline asm
	prmt.b32 %r8033, %r8034, %r8035, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8033;
	ld.local.u32 	%r8038, [%rd1+4];
	ld.local.u32 	%r8039, [%rd1];
	// inline asm
	prmt.b32 %r8037, %r8038, %r8039, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8037;
	ld.local.u32 	%r8042, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r8041, %r8042, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8041;
	mov.u64 	%rd1147, 0;
	st.local.u32 	[%rd1+4], %rd1147;
	st.local.u32 	[%rd1], %rd1147;
	bra.uni 	BB1_173;

BB1_9:
	setp.eq.s32	%p46, %r3, 2;
	@%p46 bra 	BB1_86;
	bra.uni 	BB1_10;

BB1_86:
	ld.local.u32 	%r4844, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8428, %r8426, %r4844, %r4;
	// inline asm
	ld.local.u32 	%r4847, [%rd8+12];
	ld.local.u32 	%r4848, [%rd8+8];
	// inline asm
	prmt.b32 %r8429, %r4847, %r4848, %r4;
	// inline asm
	ld.local.u32 	%r4851, [%rd8+8];
	ld.local.u32 	%r4852, [%rd8+4];
	// inline asm
	prmt.b32 %r8430, %r4851, %r4852, %r4;
	// inline asm
	ld.local.u32 	%r4855, [%rd8+4];
	ld.local.u32 	%r4856, [%rd8];
	// inline asm
	prmt.b32 %r4854, %r4855, %r4856, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4854;
	ld.local.u32 	%r4859, [%rd8];
	ld.local.u32 	%r4860, [%rd7+12];
	// inline asm
	prmt.b32 %r4858, %r4859, %r4860, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4858;
	ld.local.u32 	%r4863, [%rd7+12];
	ld.local.u32 	%r4864, [%rd7+8];
	// inline asm
	prmt.b32 %r4862, %r4863, %r4864, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4862;
	ld.local.u32 	%r4867, [%rd7+8];
	ld.local.u32 	%r4868, [%rd7+4];
	// inline asm
	prmt.b32 %r4866, %r4867, %r4868, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4866;
	ld.local.u32 	%r4871, [%rd7+4];
	ld.local.u32 	%r4872, [%rd7];
	// inline asm
	prmt.b32 %r4870, %r4871, %r4872, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4870;
	ld.local.u32 	%r4875, [%rd7];
	ld.local.u32 	%r4876, [%rd6+12];
	// inline asm
	prmt.b32 %r4874, %r4875, %r4876, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4874;
	ld.local.u32 	%r4879, [%rd6+12];
	ld.local.u32 	%r4880, [%rd6+8];
	// inline asm
	prmt.b32 %r4878, %r4879, %r4880, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4878;
	ld.local.u32 	%r4883, [%rd6+8];
	ld.local.u32 	%r4884, [%rd6+4];
	// inline asm
	prmt.b32 %r4882, %r4883, %r4884, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4882;
	ld.local.u32 	%r4887, [%rd6+4];
	ld.local.u32 	%r4888, [%rd6];
	// inline asm
	prmt.b32 %r4886, %r4887, %r4888, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4886;
	ld.local.u32 	%r4891, [%rd6];
	ld.local.u32 	%r4892, [%rd5+12];
	// inline asm
	prmt.b32 %r4890, %r4891, %r4892, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4890;
	ld.local.u32 	%r4895, [%rd5+12];
	ld.local.u32 	%r4896, [%rd5+8];
	// inline asm
	prmt.b32 %r4894, %r4895, %r4896, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4894;
	ld.local.u32 	%r4899, [%rd5+8];
	ld.local.u32 	%r4900, [%rd5+4];
	// inline asm
	prmt.b32 %r4898, %r4899, %r4900, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4898;
	ld.local.u32 	%r4903, [%rd5+4];
	ld.local.u32 	%r4904, [%rd5];
	// inline asm
	prmt.b32 %r4902, %r4903, %r4904, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4902;
	ld.local.u32 	%r4907, [%rd5];
	ld.local.u32 	%r4908, [%rd4+12];
	// inline asm
	prmt.b32 %r4906, %r4907, %r4908, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4906;
	ld.local.u32 	%r4911, [%rd4+12];
	ld.local.u32 	%r4912, [%rd4+8];
	// inline asm
	prmt.b32 %r4910, %r4911, %r4912, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4910;
	ld.local.u32 	%r4915, [%rd4+8];
	ld.local.u32 	%r4916, [%rd4+4];
	// inline asm
	prmt.b32 %r4914, %r4915, %r4916, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4914;
	ld.local.u32 	%r4919, [%rd4+4];
	ld.local.u32 	%r4920, [%rd4];
	// inline asm
	prmt.b32 %r4918, %r4919, %r4920, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4918;
	ld.local.u32 	%r4923, [%rd4];
	ld.local.u32 	%r4924, [%rd3+12];
	// inline asm
	prmt.b32 %r4922, %r4923, %r4924, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4922;
	ld.local.u32 	%r4927, [%rd3+12];
	ld.local.u32 	%r4928, [%rd3+8];
	// inline asm
	prmt.b32 %r4926, %r4927, %r4928, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4926;
	ld.local.u32 	%r4931, [%rd3+8];
	ld.local.u32 	%r4932, [%rd3+4];
	// inline asm
	prmt.b32 %r4930, %r4931, %r4932, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4930;
	ld.local.u32 	%r4935, [%rd3+4];
	ld.local.u32 	%r4936, [%rd3];
	// inline asm
	prmt.b32 %r4934, %r4935, %r4936, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4934;
	ld.local.u32 	%r4939, [%rd3];
	ld.local.u32 	%r4940, [%rd2+12];
	// inline asm
	prmt.b32 %r4938, %r4939, %r4940, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4938;
	ld.local.u32 	%r4943, [%rd2+12];
	ld.local.u32 	%r4944, [%rd2+8];
	// inline asm
	prmt.b32 %r4942, %r4943, %r4944, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4942;
	ld.local.u32 	%r4947, [%rd2+8];
	ld.local.u32 	%r4948, [%rd2+4];
	// inline asm
	prmt.b32 %r4946, %r4947, %r4948, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4946;
	ld.local.u32 	%r4951, [%rd2+4];
	ld.local.u32 	%r4952, [%rd2];
	// inline asm
	prmt.b32 %r4950, %r4951, %r4952, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4950;
	ld.local.u32 	%r4955, [%rd2];
	ld.local.u32 	%r4956, [%rd1+12];
	// inline asm
	prmt.b32 %r4954, %r4955, %r4956, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4954;
	ld.local.u32 	%r4959, [%rd1+12];
	ld.local.u32 	%r4960, [%rd1+8];
	// inline asm
	prmt.b32 %r4958, %r4959, %r4960, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4958;
	ld.local.u32 	%r4963, [%rd1+8];
	ld.local.u32 	%r4964, [%rd1+4];
	// inline asm
	prmt.b32 %r4962, %r4963, %r4964, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4962;
	ld.local.u32 	%r4967, [%rd1+4];
	ld.local.u32 	%r4968, [%rd1];
	// inline asm
	prmt.b32 %r4966, %r4967, %r4968, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4966;
	ld.local.u32 	%r4971, [%rd1];
	// inline asm
	prmt.b32 %r4970, %r4971, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r4970;
	mov.u64 	%rd129, 0;
	st.local.u32 	[%rd1+4], %rd129;
	st.local.u32 	[%rd1], %rd129;
	mov.u32 	%r8427, %r8426;
	bra.uni 	BB1_12;

BB1_131:
	setp.eq.s32	%p71, %r3, 18;
	@%p71 bra 	BB1_162;
	bra.uni 	BB1_132;

BB1_162:
	ld.local.u32 	%r6534, [%rd4+4];
	ld.local.u32 	%r6535, [%rd4];
	// inline asm
	prmt.b32 %r6533, %r6534, %r6535, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6533;
	ld.local.u32 	%r6538, [%rd4];
	ld.local.u32 	%r6539, [%rd3+12];
	// inline asm
	prmt.b32 %r6537, %r6538, %r6539, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6537;
	ld.local.u32 	%r6542, [%rd3+12];
	ld.local.u32 	%r6543, [%rd3+8];
	// inline asm
	prmt.b32 %r6541, %r6542, %r6543, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6541;
	ld.local.u32 	%r6546, [%rd3+8];
	ld.local.u32 	%r6547, [%rd3+4];
	// inline asm
	prmt.b32 %r6545, %r6546, %r6547, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6545;
	ld.local.u32 	%r6550, [%rd3+4];
	ld.local.u32 	%r6551, [%rd3];
	// inline asm
	prmt.b32 %r6549, %r6550, %r6551, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6549;
	ld.local.u32 	%r6554, [%rd3];
	ld.local.u32 	%r6555, [%rd2+12];
	// inline asm
	prmt.b32 %r6553, %r6554, %r6555, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6553;
	ld.local.u32 	%r6558, [%rd2+12];
	ld.local.u32 	%r6559, [%rd2+8];
	// inline asm
	prmt.b32 %r6557, %r6558, %r6559, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6557;
	ld.local.u32 	%r6562, [%rd2+8];
	ld.local.u32 	%r6563, [%rd2+4];
	// inline asm
	prmt.b32 %r6561, %r6562, %r6563, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6561;
	ld.local.u32 	%r6566, [%rd2+4];
	ld.local.u32 	%r6567, [%rd2];
	// inline asm
	prmt.b32 %r6565, %r6566, %r6567, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6565;
	ld.local.u32 	%r6570, [%rd2];
	ld.local.u32 	%r6571, [%rd1+12];
	// inline asm
	prmt.b32 %r6569, %r6570, %r6571, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6569;
	ld.local.u32 	%r6574, [%rd1+12];
	ld.local.u32 	%r6575, [%rd1+8];
	// inline asm
	prmt.b32 %r6573, %r6574, %r6575, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6573;
	ld.local.u32 	%r6578, [%rd1+8];
	ld.local.u32 	%r6579, [%rd1+4];
	// inline asm
	prmt.b32 %r6577, %r6578, %r6579, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6577;
	ld.local.u32 	%r6582, [%rd1+4];
	ld.local.u32 	%r6583, [%rd1];
	// inline asm
	prmt.b32 %r6581, %r6582, %r6583, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6581;
	ld.local.u32 	%r6586, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6585, %r6586, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6585;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1131, 0;
	st.local.u32 	[%rd1+4], %rd1131;
	st.local.u32 	[%rd1], %rd1131;
	bra.uni 	BB1_173;

BB1_41:
	setp.eq.s32	%p23, %r3, 18;
	@%p23 bra 	BB1_72;
	bra.uni 	BB1_42;

BB1_72:
	ld.local.u32 	%r2388, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8444, %r8426, %r2388, %r4;
	// inline asm
	ld.local.u32 	%r2391, [%rd8+12];
	ld.local.u32 	%r2392, [%rd8+8];
	// inline asm
	prmt.b32 %r8445, %r2391, %r2392, %r4;
	// inline asm
	ld.local.u32 	%r2395, [%rd8+8];
	ld.local.u32 	%r2396, [%rd8+4];
	// inline asm
	prmt.b32 %r8446, %r2395, %r2396, %r4;
	// inline asm
	ld.local.u32 	%r2399, [%rd8+4];
	ld.local.u32 	%r2400, [%rd8];
	// inline asm
	prmt.b32 %r8439, %r2399, %r2400, %r4;
	// inline asm
	ld.local.u32 	%r2403, [%rd8];
	ld.local.u32 	%r2404, [%rd7+12];
	// inline asm
	prmt.b32 %r8440, %r2403, %r2404, %r4;
	// inline asm
	ld.local.u32 	%r2407, [%rd7+12];
	ld.local.u32 	%r2408, [%rd7+8];
	// inline asm
	prmt.b32 %r8441, %r2407, %r2408, %r4;
	// inline asm
	ld.local.u32 	%r2411, [%rd7+8];
	ld.local.u32 	%r2412, [%rd7+4];
	// inline asm
	prmt.b32 %r8442, %r2411, %r2412, %r4;
	// inline asm
	ld.local.u32 	%r2415, [%rd7+4];
	ld.local.u32 	%r2416, [%rd7];
	// inline asm
	prmt.b32 %r8435, %r2415, %r2416, %r4;
	// inline asm
	ld.local.u32 	%r2419, [%rd7];
	ld.local.u32 	%r2420, [%rd6+12];
	// inline asm
	prmt.b32 %r8436, %r2419, %r2420, %r4;
	// inline asm
	ld.local.u32 	%r2423, [%rd6+12];
	ld.local.u32 	%r2424, [%rd6+8];
	// inline asm
	prmt.b32 %r8437, %r2423, %r2424, %r4;
	// inline asm
	ld.local.u32 	%r2427, [%rd6+8];
	ld.local.u32 	%r2428, [%rd6+4];
	// inline asm
	prmt.b32 %r8438, %r2427, %r2428, %r4;
	// inline asm
	ld.local.u32 	%r2431, [%rd6+4];
	ld.local.u32 	%r2432, [%rd6];
	// inline asm
	prmt.b32 %r8431, %r2431, %r2432, %r4;
	// inline asm
	ld.local.u32 	%r2435, [%rd6];
	ld.local.u32 	%r2436, [%rd5+12];
	// inline asm
	prmt.b32 %r8432, %r2435, %r2436, %r4;
	// inline asm
	ld.local.u32 	%r2439, [%rd5+12];
	ld.local.u32 	%r2440, [%rd5+8];
	// inline asm
	prmt.b32 %r8433, %r2439, %r2440, %r4;
	// inline asm
	ld.local.u32 	%r2443, [%rd5+8];
	ld.local.u32 	%r2444, [%rd5+4];
	// inline asm
	prmt.b32 %r8434, %r2443, %r2444, %r4;
	// inline asm
	ld.local.u32 	%r2447, [%rd5+4];
	ld.local.u32 	%r2448, [%rd5];
	// inline asm
	prmt.b32 %r8427, %r2447, %r2448, %r4;
	// inline asm
	ld.local.u32 	%r2451, [%rd5];
	ld.local.u32 	%r2452, [%rd4+12];
	// inline asm
	prmt.b32 %r8428, %r2451, %r2452, %r4;
	// inline asm
	ld.local.u32 	%r2455, [%rd4+12];
	ld.local.u32 	%r2456, [%rd4+8];
	// inline asm
	prmt.b32 %r8429, %r2455, %r2456, %r4;
	// inline asm
	ld.local.u32 	%r2459, [%rd4+8];
	ld.local.u32 	%r2460, [%rd4+4];
	// inline asm
	prmt.b32 %r8430, %r2459, %r2460, %r4;
	// inline asm
	ld.local.u32 	%r2463, [%rd4+4];
	ld.local.u32 	%r2464, [%rd4];
	// inline asm
	prmt.b32 %r2462, %r2463, %r2464, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2462;
	ld.local.u32 	%r2467, [%rd4];
	ld.local.u32 	%r2468, [%rd3+12];
	// inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2466;
	ld.local.u32 	%r2471, [%rd3+12];
	ld.local.u32 	%r2472, [%rd3+8];
	// inline asm
	prmt.b32 %r2470, %r2471, %r2472, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2470;
	ld.local.u32 	%r2475, [%rd3+8];
	ld.local.u32 	%r2476, [%rd3+4];
	// inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2474;
	ld.local.u32 	%r2479, [%rd3+4];
	ld.local.u32 	%r2480, [%rd3];
	// inline asm
	prmt.b32 %r2478, %r2479, %r2480, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2478;
	ld.local.u32 	%r2483, [%rd3];
	ld.local.u32 	%r2484, [%rd2+12];
	// inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2482;
	ld.local.u32 	%r2487, [%rd2+12];
	ld.local.u32 	%r2488, [%rd2+8];
	// inline asm
	prmt.b32 %r2486, %r2487, %r2488, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2486;
	ld.local.u32 	%r2491, [%rd2+8];
	ld.local.u32 	%r2492, [%rd2+4];
	// inline asm
	prmt.b32 %r2490, %r2491, %r2492, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2490;
	ld.local.u32 	%r2495, [%rd2+4];
	ld.local.u32 	%r2496, [%rd2];
	// inline asm
	prmt.b32 %r2494, %r2495, %r2496, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2494;
	ld.local.u32 	%r2499, [%rd2];
	ld.local.u32 	%r2500, [%rd1+12];
	// inline asm
	prmt.b32 %r2498, %r2499, %r2500, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2498;
	ld.local.u32 	%r2503, [%rd1+12];
	ld.local.u32 	%r2504, [%rd1+8];
	// inline asm
	prmt.b32 %r2502, %r2503, %r2504, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2502;
	ld.local.u32 	%r2507, [%rd1+8];
	ld.local.u32 	%r2508, [%rd1+4];
	// inline asm
	prmt.b32 %r2506, %r2507, %r2508, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2506;
	ld.local.u32 	%r2511, [%rd1+4];
	ld.local.u32 	%r2512, [%rd1];
	// inline asm
	prmt.b32 %r2510, %r2511, %r2512, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2510;
	ld.local.u32 	%r2515, [%rd1];
	// inline asm
	prmt.b32 %r2514, %r2515, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2514;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd113, 0;
	st.local.u32 	[%rd1+4], %rd113;
	st.local.u32 	[%rd1], %rd113;
	mov.u32 	%r8443, %r8426;
	bra.uni 	BB1_83;

BB1_115:
	setp.eq.s32	%p83, %r3, 10;
	@%p83 bra 	BB1_166;
	bra.uni 	BB1_116;

BB1_166:
	ld.local.u32 	%r7102, [%rd6+4];
	ld.local.u32 	%r7103, [%rd6];
	// inline asm
	prmt.b32 %r7101, %r7102, %r7103, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7101;
	ld.local.u32 	%r7106, [%rd6];
	ld.local.u32 	%r7107, [%rd5+12];
	// inline asm
	prmt.b32 %r7105, %r7106, %r7107, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7105;
	ld.local.u32 	%r7110, [%rd5+12];
	ld.local.u32 	%r7111, [%rd5+8];
	// inline asm
	prmt.b32 %r7109, %r7110, %r7111, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7109;
	ld.local.u32 	%r7114, [%rd5+8];
	ld.local.u32 	%r7115, [%rd5+4];
	// inline asm
	prmt.b32 %r7113, %r7114, %r7115, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7113;
	ld.local.u32 	%r7118, [%rd5+4];
	ld.local.u32 	%r7119, [%rd5];
	// inline asm
	prmt.b32 %r7117, %r7118, %r7119, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7117;
	ld.local.u32 	%r7122, [%rd5];
	ld.local.u32 	%r7123, [%rd4+12];
	// inline asm
	prmt.b32 %r7121, %r7122, %r7123, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7121;
	ld.local.u32 	%r7126, [%rd4+12];
	ld.local.u32 	%r7127, [%rd4+8];
	// inline asm
	prmt.b32 %r7125, %r7126, %r7127, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7125;
	ld.local.u32 	%r7130, [%rd4+8];
	ld.local.u32 	%r7131, [%rd4+4];
	// inline asm
	prmt.b32 %r7129, %r7130, %r7131, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7129;
	ld.local.u32 	%r7134, [%rd4+4];
	ld.local.u32 	%r7135, [%rd4];
	// inline asm
	prmt.b32 %r7133, %r7134, %r7135, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7133;
	ld.local.u32 	%r7138, [%rd4];
	ld.local.u32 	%r7139, [%rd3+12];
	// inline asm
	prmt.b32 %r7137, %r7138, %r7139, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7137;
	ld.local.u32 	%r7142, [%rd3+12];
	ld.local.u32 	%r7143, [%rd3+8];
	// inline asm
	prmt.b32 %r7141, %r7142, %r7143, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7141;
	ld.local.u32 	%r7146, [%rd3+8];
	ld.local.u32 	%r7147, [%rd3+4];
	// inline asm
	prmt.b32 %r7145, %r7146, %r7147, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7145;
	ld.local.u32 	%r7150, [%rd3+4];
	ld.local.u32 	%r7151, [%rd3];
	// inline asm
	prmt.b32 %r7149, %r7150, %r7151, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7149;
	ld.local.u32 	%r7154, [%rd3];
	ld.local.u32 	%r7155, [%rd2+12];
	// inline asm
	prmt.b32 %r7153, %r7154, %r7155, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7153;
	ld.local.u32 	%r7158, [%rd2+12];
	ld.local.u32 	%r7159, [%rd2+8];
	// inline asm
	prmt.b32 %r7157, %r7158, %r7159, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7157;
	ld.local.u32 	%r7162, [%rd2+8];
	ld.local.u32 	%r7163, [%rd2+4];
	// inline asm
	prmt.b32 %r7161, %r7162, %r7163, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7161;
	ld.local.u32 	%r7166, [%rd2+4];
	ld.local.u32 	%r7167, [%rd2];
	// inline asm
	prmt.b32 %r7165, %r7166, %r7167, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7165;
	ld.local.u32 	%r7170, [%rd2];
	ld.local.u32 	%r7171, [%rd1+12];
	// inline asm
	prmt.b32 %r7169, %r7170, %r7171, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7169;
	ld.local.u32 	%r7174, [%rd1+12];
	ld.local.u32 	%r7175, [%rd1+8];
	// inline asm
	prmt.b32 %r7173, %r7174, %r7175, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7173;
	ld.local.u32 	%r7178, [%rd1+8];
	ld.local.u32 	%r7179, [%rd1+4];
	// inline asm
	prmt.b32 %r7177, %r7178, %r7179, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7177;
	ld.local.u32 	%r7182, [%rd1+4];
	ld.local.u32 	%r7183, [%rd1];
	// inline asm
	prmt.b32 %r7181, %r7182, %r7183, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7181;
	ld.local.u32 	%r7186, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7185, %r7186, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7185;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1139, 0;
	st.local.u32 	[%rd1+4], %rd1139;
	st.local.u32 	[%rd1], %rd1139;
	bra.uni 	BB1_173;

BB1_25:
	setp.eq.s32	%p35, %r3, 10;
	@%p35 bra 	BB1_76;
	bra.uni 	BB1_26;

BB1_76:
	ld.local.u32 	%r3584, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8436, %r8426, %r3584, %r4;
	// inline asm
	ld.local.u32 	%r3587, [%rd8+12];
	ld.local.u32 	%r3588, [%rd8+8];
	// inline asm
	prmt.b32 %r8437, %r3587, %r3588, %r4;
	// inline asm
	ld.local.u32 	%r3591, [%rd8+8];
	ld.local.u32 	%r3592, [%rd8+4];
	// inline asm
	prmt.b32 %r8438, %r3591, %r3592, %r4;
	// inline asm
	ld.local.u32 	%r3595, [%rd8+4];
	ld.local.u32 	%r3596, [%rd8];
	// inline asm
	prmt.b32 %r8431, %r3595, %r3596, %r4;
	// inline asm
	ld.local.u32 	%r3599, [%rd8];
	ld.local.u32 	%r3600, [%rd7+12];
	// inline asm
	prmt.b32 %r8432, %r3599, %r3600, %r4;
	// inline asm
	ld.local.u32 	%r3603, [%rd7+12];
	ld.local.u32 	%r3604, [%rd7+8];
	// inline asm
	prmt.b32 %r8433, %r3603, %r3604, %r4;
	// inline asm
	ld.local.u32 	%r3607, [%rd7+8];
	ld.local.u32 	%r3608, [%rd7+4];
	// inline asm
	prmt.b32 %r8434, %r3607, %r3608, %r4;
	// inline asm
	ld.local.u32 	%r3611, [%rd7+4];
	ld.local.u32 	%r3612, [%rd7];
	// inline asm
	prmt.b32 %r8427, %r3611, %r3612, %r4;
	// inline asm
	ld.local.u32 	%r3615, [%rd7];
	ld.local.u32 	%r3616, [%rd6+12];
	// inline asm
	prmt.b32 %r8428, %r3615, %r3616, %r4;
	// inline asm
	ld.local.u32 	%r3619, [%rd6+12];
	ld.local.u32 	%r3620, [%rd6+8];
	// inline asm
	prmt.b32 %r8429, %r3619, %r3620, %r4;
	// inline asm
	ld.local.u32 	%r3623, [%rd6+8];
	ld.local.u32 	%r3624, [%rd6+4];
	// inline asm
	prmt.b32 %r8430, %r3623, %r3624, %r4;
	// inline asm
	ld.local.u32 	%r3627, [%rd6+4];
	ld.local.u32 	%r3628, [%rd6];
	// inline asm
	prmt.b32 %r3626, %r3627, %r3628, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3626;
	ld.local.u32 	%r3631, [%rd6];
	ld.local.u32 	%r3632, [%rd5+12];
	// inline asm
	prmt.b32 %r3630, %r3631, %r3632, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3630;
	ld.local.u32 	%r3635, [%rd5+12];
	ld.local.u32 	%r3636, [%rd5+8];
	// inline asm
	prmt.b32 %r3634, %r3635, %r3636, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3634;
	ld.local.u32 	%r3639, [%rd5+8];
	ld.local.u32 	%r3640, [%rd5+4];
	// inline asm
	prmt.b32 %r3638, %r3639, %r3640, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3638;
	ld.local.u32 	%r3643, [%rd5+4];
	ld.local.u32 	%r3644, [%rd5];
	// inline asm
	prmt.b32 %r3642, %r3643, %r3644, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3642;
	ld.local.u32 	%r3647, [%rd5];
	ld.local.u32 	%r3648, [%rd4+12];
	// inline asm
	prmt.b32 %r3646, %r3647, %r3648, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3646;
	ld.local.u32 	%r3651, [%rd4+12];
	ld.local.u32 	%r3652, [%rd4+8];
	// inline asm
	prmt.b32 %r3650, %r3651, %r3652, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3650;
	ld.local.u32 	%r3655, [%rd4+8];
	ld.local.u32 	%r3656, [%rd4+4];
	// inline asm
	prmt.b32 %r3654, %r3655, %r3656, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3654;
	ld.local.u32 	%r3659, [%rd4+4];
	ld.local.u32 	%r3660, [%rd4];
	// inline asm
	prmt.b32 %r3658, %r3659, %r3660, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3658;
	ld.local.u32 	%r3663, [%rd4];
	ld.local.u32 	%r3664, [%rd3+12];
	// inline asm
	prmt.b32 %r3662, %r3663, %r3664, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3662;
	ld.local.u32 	%r3667, [%rd3+12];
	ld.local.u32 	%r3668, [%rd3+8];
	// inline asm
	prmt.b32 %r3666, %r3667, %r3668, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3666;
	ld.local.u32 	%r3671, [%rd3+8];
	ld.local.u32 	%r3672, [%rd3+4];
	// inline asm
	prmt.b32 %r3670, %r3671, %r3672, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3670;
	ld.local.u32 	%r3675, [%rd3+4];
	ld.local.u32 	%r3676, [%rd3];
	// inline asm
	prmt.b32 %r3674, %r3675, %r3676, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3674;
	ld.local.u32 	%r3679, [%rd3];
	ld.local.u32 	%r3680, [%rd2+12];
	// inline asm
	prmt.b32 %r3678, %r3679, %r3680, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3678;
	ld.local.u32 	%r3683, [%rd2+12];
	ld.local.u32 	%r3684, [%rd2+8];
	// inline asm
	prmt.b32 %r3682, %r3683, %r3684, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3682;
	ld.local.u32 	%r3687, [%rd2+8];
	ld.local.u32 	%r3688, [%rd2+4];
	// inline asm
	prmt.b32 %r3686, %r3687, %r3688, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3686;
	ld.local.u32 	%r3691, [%rd2+4];
	ld.local.u32 	%r3692, [%rd2];
	// inline asm
	prmt.b32 %r3690, %r3691, %r3692, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3690;
	ld.local.u32 	%r3695, [%rd2];
	ld.local.u32 	%r3696, [%rd1+12];
	// inline asm
	prmt.b32 %r3694, %r3695, %r3696, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3694;
	ld.local.u32 	%r3699, [%rd1+12];
	ld.local.u32 	%r3700, [%rd1+8];
	// inline asm
	prmt.b32 %r3698, %r3699, %r3700, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3698;
	ld.local.u32 	%r3703, [%rd1+8];
	ld.local.u32 	%r3704, [%rd1+4];
	// inline asm
	prmt.b32 %r3702, %r3703, %r3704, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3702;
	ld.local.u32 	%r3707, [%rd1+4];
	ld.local.u32 	%r3708, [%rd1];
	// inline asm
	prmt.b32 %r3706, %r3707, %r3708, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3706;
	ld.local.u32 	%r3711, [%rd1];
	// inline asm
	prmt.b32 %r3710, %r3711, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3710;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd121, 0;
	st.local.u32 	[%rd1+4], %rd121;
	st.local.u32 	[%rd1], %rd121;
	mov.u32 	%r8435, %r8426;
	bra.uni 	BB1_81;

BB1_146:
	setp.eq.s32	%p60, %r3, 26;
	@%p60 bra 	BB1_158;
	bra.uni 	BB1_147;

BB1_158:
	ld.local.u32 	%r6222, [%rd2+4];
	ld.local.u32 	%r6223, [%rd2];
	// inline asm
	prmt.b32 %r6221, %r6222, %r6223, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6221;
	ld.local.u32 	%r6226, [%rd2];
	ld.local.u32 	%r6227, [%rd1+12];
	// inline asm
	prmt.b32 %r6225, %r6226, %r6227, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6225;
	ld.local.u32 	%r6230, [%rd1+12];
	ld.local.u32 	%r6231, [%rd1+8];
	// inline asm
	prmt.b32 %r6229, %r6230, %r6231, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6229;
	ld.local.u32 	%r6234, [%rd1+8];
	ld.local.u32 	%r6235, [%rd1+4];
	// inline asm
	prmt.b32 %r6233, %r6234, %r6235, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6233;
	ld.local.u32 	%r6238, [%rd1+4];
	ld.local.u32 	%r6239, [%rd1];
	// inline asm
	prmt.b32 %r6237, %r6238, %r6239, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6237;
	ld.local.u32 	%r6242, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6241, %r6242, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6241;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1123, 0;
	st.local.u32 	[%rd1+4], %rd1123;
	st.local.u32 	[%rd1], %rd1123;
	bra.uni 	BB1_173;

BB1_56:
	setp.eq.s32	%p12, %r3, 26;
	@%p12 bra 	BB1_68;
	bra.uni 	BB1_57;

BB1_68:
	ld.local.u32 	%r1256, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8452, %r8426, %r1256, %r4;
	// inline asm
	ld.local.u32 	%r1259, [%rd8+12];
	ld.local.u32 	%r1260, [%rd8+8];
	// inline asm
	prmt.b32 %r8453, %r1259, %r1260, %r4;
	// inline asm
	ld.local.u32 	%r1263, [%rd8+8];
	ld.local.u32 	%r1264, [%rd8+4];
	// inline asm
	prmt.b32 %r8454, %r1263, %r1264, %r4;
	// inline asm
	ld.local.u32 	%r1267, [%rd8+4];
	ld.local.u32 	%r1268, [%rd8];
	// inline asm
	prmt.b32 %r8447, %r1267, %r1268, %r4;
	// inline asm
	ld.local.u32 	%r1271, [%rd8];
	ld.local.u32 	%r1272, [%rd7+12];
	// inline asm
	prmt.b32 %r8448, %r1271, %r1272, %r4;
	// inline asm
	ld.local.u32 	%r1275, [%rd7+12];
	ld.local.u32 	%r1276, [%rd7+8];
	// inline asm
	prmt.b32 %r8449, %r1275, %r1276, %r4;
	// inline asm
	ld.local.u32 	%r1279, [%rd7+8];
	ld.local.u32 	%r1280, [%rd7+4];
	// inline asm
	prmt.b32 %r8450, %r1279, %r1280, %r4;
	// inline asm
	ld.local.u32 	%r1283, [%rd7+4];
	ld.local.u32 	%r1284, [%rd7];
	// inline asm
	prmt.b32 %r8443, %r1283, %r1284, %r4;
	// inline asm
	ld.local.u32 	%r1287, [%rd7];
	ld.local.u32 	%r1288, [%rd6+12];
	// inline asm
	prmt.b32 %r8444, %r1287, %r1288, %r4;
	// inline asm
	ld.local.u32 	%r1291, [%rd6+12];
	ld.local.u32 	%r1292, [%rd6+8];
	// inline asm
	prmt.b32 %r8445, %r1291, %r1292, %r4;
	// inline asm
	ld.local.u32 	%r1295, [%rd6+8];
	ld.local.u32 	%r1296, [%rd6+4];
	// inline asm
	prmt.b32 %r8446, %r1295, %r1296, %r4;
	// inline asm
	ld.local.u32 	%r1299, [%rd6+4];
	ld.local.u32 	%r1300, [%rd6];
	// inline asm
	prmt.b32 %r8439, %r1299, %r1300, %r4;
	// inline asm
	ld.local.u32 	%r1303, [%rd6];
	ld.local.u32 	%r1304, [%rd5+12];
	// inline asm
	prmt.b32 %r8440, %r1303, %r1304, %r4;
	// inline asm
	ld.local.u32 	%r1307, [%rd5+12];
	ld.local.u32 	%r1308, [%rd5+8];
	// inline asm
	prmt.b32 %r8441, %r1307, %r1308, %r4;
	// inline asm
	ld.local.u32 	%r1311, [%rd5+8];
	ld.local.u32 	%r1312, [%rd5+4];
	// inline asm
	prmt.b32 %r8442, %r1311, %r1312, %r4;
	// inline asm
	ld.local.u32 	%r1315, [%rd5+4];
	ld.local.u32 	%r1316, [%rd5];
	// inline asm
	prmt.b32 %r8435, %r1315, %r1316, %r4;
	// inline asm
	ld.local.u32 	%r1319, [%rd5];
	ld.local.u32 	%r1320, [%rd4+12];
	// inline asm
	prmt.b32 %r8436, %r1319, %r1320, %r4;
	// inline asm
	ld.local.u32 	%r1323, [%rd4+12];
	ld.local.u32 	%r1324, [%rd4+8];
	// inline asm
	prmt.b32 %r8437, %r1323, %r1324, %r4;
	// inline asm
	ld.local.u32 	%r1327, [%rd4+8];
	ld.local.u32 	%r1328, [%rd4+4];
	// inline asm
	prmt.b32 %r8438, %r1327, %r1328, %r4;
	// inline asm
	ld.local.u32 	%r1331, [%rd4+4];
	ld.local.u32 	%r1332, [%rd4];
	// inline asm
	prmt.b32 %r8431, %r1331, %r1332, %r4;
	// inline asm
	ld.local.u32 	%r1335, [%rd4];
	ld.local.u32 	%r1336, [%rd3+12];
	// inline asm
	prmt.b32 %r8432, %r1335, %r1336, %r4;
	// inline asm
	ld.local.u32 	%r1339, [%rd3+12];
	ld.local.u32 	%r1340, [%rd3+8];
	// inline asm
	prmt.b32 %r8433, %r1339, %r1340, %r4;
	// inline asm
	ld.local.u32 	%r1343, [%rd3+8];
	ld.local.u32 	%r1344, [%rd3+4];
	// inline asm
	prmt.b32 %r8434, %r1343, %r1344, %r4;
	// inline asm
	ld.local.u32 	%r1347, [%rd3+4];
	ld.local.u32 	%r1348, [%rd3];
	// inline asm
	prmt.b32 %r8427, %r1347, %r1348, %r4;
	// inline asm
	ld.local.u32 	%r1351, [%rd3];
	ld.local.u32 	%r1352, [%rd2+12];
	// inline asm
	prmt.b32 %r8428, %r1351, %r1352, %r4;
	// inline asm
	ld.local.u32 	%r1355, [%rd2+12];
	ld.local.u32 	%r1356, [%rd2+8];
	// inline asm
	prmt.b32 %r8429, %r1355, %r1356, %r4;
	// inline asm
	ld.local.u32 	%r1359, [%rd2+8];
	ld.local.u32 	%r1360, [%rd2+4];
	// inline asm
	prmt.b32 %r8430, %r1359, %r1360, %r4;
	// inline asm
	ld.local.u32 	%r1363, [%rd2+4];
	ld.local.u32 	%r1364, [%rd2];
	// inline asm
	prmt.b32 %r1362, %r1363, %r1364, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1362;
	ld.local.u32 	%r1367, [%rd2];
	ld.local.u32 	%r1368, [%rd1+12];
	// inline asm
	prmt.b32 %r1366, %r1367, %r1368, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1366;
	ld.local.u32 	%r1371, [%rd1+12];
	ld.local.u32 	%r1372, [%rd1+8];
	// inline asm
	prmt.b32 %r1370, %r1371, %r1372, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1370;
	ld.local.u32 	%r1375, [%rd1+8];
	ld.local.u32 	%r1376, [%rd1+4];
	// inline asm
	prmt.b32 %r1374, %r1375, %r1376, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1374;
	ld.local.u32 	%r1379, [%rd1+4];
	ld.local.u32 	%r1380, [%rd1];
	// inline asm
	prmt.b32 %r1378, %r1379, %r1380, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1378;
	ld.local.u32 	%r1383, [%rd1];
	// inline asm
	prmt.b32 %r1382, %r1383, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1382;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd105, 0;
	st.local.u32 	[%rd1+4], %rd105;
	st.local.u32 	[%rd1], %rd105;
	mov.u32 	%r8451, %r8426;
	bra.uni 	BB1_85;

BB1_107:
	setp.eq.s32	%p89, %r3, 6;
	@%p89 bra 	BB1_168;
	bra.uni 	BB1_108;

BB1_168:
	ld.local.u32 	%r7482, [%rd7+4];
	ld.local.u32 	%r7483, [%rd7];
	// inline asm
	prmt.b32 %r7481, %r7482, %r7483, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7481;
	ld.local.u32 	%r7486, [%rd7];
	ld.local.u32 	%r7487, [%rd6+12];
	// inline asm
	prmt.b32 %r7485, %r7486, %r7487, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7485;
	ld.local.u32 	%r7490, [%rd6+12];
	ld.local.u32 	%r7491, [%rd6+8];
	// inline asm
	prmt.b32 %r7489, %r7490, %r7491, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7489;
	ld.local.u32 	%r7494, [%rd6+8];
	ld.local.u32 	%r7495, [%rd6+4];
	// inline asm
	prmt.b32 %r7493, %r7494, %r7495, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7493;
	ld.local.u32 	%r7498, [%rd6+4];
	ld.local.u32 	%r7499, [%rd6];
	// inline asm
	prmt.b32 %r7497, %r7498, %r7499, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7497;
	ld.local.u32 	%r7502, [%rd6];
	ld.local.u32 	%r7503, [%rd5+12];
	// inline asm
	prmt.b32 %r7501, %r7502, %r7503, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7501;
	ld.local.u32 	%r7506, [%rd5+12];
	ld.local.u32 	%r7507, [%rd5+8];
	// inline asm
	prmt.b32 %r7505, %r7506, %r7507, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7505;
	ld.local.u32 	%r7510, [%rd5+8];
	ld.local.u32 	%r7511, [%rd5+4];
	// inline asm
	prmt.b32 %r7509, %r7510, %r7511, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7509;
	ld.local.u32 	%r7514, [%rd5+4];
	ld.local.u32 	%r7515, [%rd5];
	// inline asm
	prmt.b32 %r7513, %r7514, %r7515, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7513;
	ld.local.u32 	%r7518, [%rd5];
	ld.local.u32 	%r7519, [%rd4+12];
	// inline asm
	prmt.b32 %r7517, %r7518, %r7519, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7517;
	ld.local.u32 	%r7522, [%rd4+12];
	ld.local.u32 	%r7523, [%rd4+8];
	// inline asm
	prmt.b32 %r7521, %r7522, %r7523, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7521;
	ld.local.u32 	%r7526, [%rd4+8];
	ld.local.u32 	%r7527, [%rd4+4];
	// inline asm
	prmt.b32 %r7525, %r7526, %r7527, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7525;
	ld.local.u32 	%r7530, [%rd4+4];
	ld.local.u32 	%r7531, [%rd4];
	// inline asm
	prmt.b32 %r7529, %r7530, %r7531, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7529;
	ld.local.u32 	%r7534, [%rd4];
	ld.local.u32 	%r7535, [%rd3+12];
	// inline asm
	prmt.b32 %r7533, %r7534, %r7535, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7533;
	ld.local.u32 	%r7538, [%rd3+12];
	ld.local.u32 	%r7539, [%rd3+8];
	// inline asm
	prmt.b32 %r7537, %r7538, %r7539, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7537;
	ld.local.u32 	%r7542, [%rd3+8];
	ld.local.u32 	%r7543, [%rd3+4];
	// inline asm
	prmt.b32 %r7541, %r7542, %r7543, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7541;
	ld.local.u32 	%r7546, [%rd3+4];
	ld.local.u32 	%r7547, [%rd3];
	// inline asm
	prmt.b32 %r7545, %r7546, %r7547, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7545;
	ld.local.u32 	%r7550, [%rd3];
	ld.local.u32 	%r7551, [%rd2+12];
	// inline asm
	prmt.b32 %r7549, %r7550, %r7551, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7549;
	ld.local.u32 	%r7554, [%rd2+12];
	ld.local.u32 	%r7555, [%rd2+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7553;
	ld.local.u32 	%r7558, [%rd2+8];
	ld.local.u32 	%r7559, [%rd2+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7557;
	ld.local.u32 	%r7562, [%rd2+4];
	ld.local.u32 	%r7563, [%rd2];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7561;
	ld.local.u32 	%r7566, [%rd2];
	ld.local.u32 	%r7567, [%rd1+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7565;
	ld.local.u32 	%r7570, [%rd1+12];
	ld.local.u32 	%r7571, [%rd1+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7569;
	ld.local.u32 	%r7574, [%rd1+8];
	ld.local.u32 	%r7575, [%rd1+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7573;
	ld.local.u32 	%r7578, [%rd1+4];
	ld.local.u32 	%r7579, [%rd1];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7577;
	ld.local.u32 	%r7582, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7581, %r7582, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7581;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1143, 0;
	st.local.u32 	[%rd1+4], %rd1143;
	st.local.u32 	[%rd1], %rd1143;
	bra.uni 	BB1_173;

BB1_17:
	setp.eq.s32	%p41, %r3, 6;
	@%p41 bra 	BB1_78;
	bra.uni 	BB1_18;

BB1_78:
	ld.local.u32 	%r4206, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8432, %r8426, %r4206, %r4;
	// inline asm
	ld.local.u32 	%r4209, [%rd8+12];
	ld.local.u32 	%r4210, [%rd8+8];
	// inline asm
	prmt.b32 %r8433, %r4209, %r4210, %r4;
	// inline asm
	ld.local.u32 	%r4213, [%rd8+8];
	ld.local.u32 	%r4214, [%rd8+4];
	// inline asm
	prmt.b32 %r8434, %r4213, %r4214, %r4;
	// inline asm
	ld.local.u32 	%r4217, [%rd8+4];
	ld.local.u32 	%r4218, [%rd8];
	// inline asm
	prmt.b32 %r8427, %r4217, %r4218, %r4;
	// inline asm
	ld.local.u32 	%r4221, [%rd8];
	ld.local.u32 	%r4222, [%rd7+12];
	// inline asm
	prmt.b32 %r8428, %r4221, %r4222, %r4;
	// inline asm
	ld.local.u32 	%r4225, [%rd7+12];
	ld.local.u32 	%r4226, [%rd7+8];
	// inline asm
	prmt.b32 %r8429, %r4225, %r4226, %r4;
	// inline asm
	ld.local.u32 	%r4229, [%rd7+8];
	ld.local.u32 	%r4230, [%rd7+4];
	// inline asm
	prmt.b32 %r8430, %r4229, %r4230, %r4;
	// inline asm
	ld.local.u32 	%r4233, [%rd7+4];
	ld.local.u32 	%r4234, [%rd7];
	// inline asm
	prmt.b32 %r4232, %r4233, %r4234, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4232;
	ld.local.u32 	%r4237, [%rd7];
	ld.local.u32 	%r4238, [%rd6+12];
	// inline asm
	prmt.b32 %r4236, %r4237, %r4238, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4236;
	ld.local.u32 	%r4241, [%rd6+12];
	ld.local.u32 	%r4242, [%rd6+8];
	// inline asm
	prmt.b32 %r4240, %r4241, %r4242, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4240;
	ld.local.u32 	%r4245, [%rd6+8];
	ld.local.u32 	%r4246, [%rd6+4];
	// inline asm
	prmt.b32 %r4244, %r4245, %r4246, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4244;
	ld.local.u32 	%r4249, [%rd6+4];
	ld.local.u32 	%r4250, [%rd6];
	// inline asm
	prmt.b32 %r4248, %r4249, %r4250, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4248;
	ld.local.u32 	%r4253, [%rd6];
	ld.local.u32 	%r4254, [%rd5+12];
	// inline asm
	prmt.b32 %r4252, %r4253, %r4254, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4252;
	ld.local.u32 	%r4257, [%rd5+12];
	ld.local.u32 	%r4258, [%rd5+8];
	// inline asm
	prmt.b32 %r4256, %r4257, %r4258, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4256;
	ld.local.u32 	%r4261, [%rd5+8];
	ld.local.u32 	%r4262, [%rd5+4];
	// inline asm
	prmt.b32 %r4260, %r4261, %r4262, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4260;
	ld.local.u32 	%r4265, [%rd5+4];
	ld.local.u32 	%r4266, [%rd5];
	// inline asm
	prmt.b32 %r4264, %r4265, %r4266, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4264;
	ld.local.u32 	%r4269, [%rd5];
	ld.local.u32 	%r4270, [%rd4+12];
	// inline asm
	prmt.b32 %r4268, %r4269, %r4270, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4268;
	ld.local.u32 	%r4273, [%rd4+12];
	ld.local.u32 	%r4274, [%rd4+8];
	// inline asm
	prmt.b32 %r4272, %r4273, %r4274, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4272;
	ld.local.u32 	%r4277, [%rd4+8];
	ld.local.u32 	%r4278, [%rd4+4];
	// inline asm
	prmt.b32 %r4276, %r4277, %r4278, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4276;
	ld.local.u32 	%r4281, [%rd4+4];
	ld.local.u32 	%r4282, [%rd4];
	// inline asm
	prmt.b32 %r4280, %r4281, %r4282, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4280;
	ld.local.u32 	%r4285, [%rd4];
	ld.local.u32 	%r4286, [%rd3+12];
	// inline asm
	prmt.b32 %r4284, %r4285, %r4286, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4284;
	ld.local.u32 	%r4289, [%rd3+12];
	ld.local.u32 	%r4290, [%rd3+8];
	// inline asm
	prmt.b32 %r4288, %r4289, %r4290, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4288;
	ld.local.u32 	%r4293, [%rd3+8];
	ld.local.u32 	%r4294, [%rd3+4];
	// inline asm
	prmt.b32 %r4292, %r4293, %r4294, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4292;
	ld.local.u32 	%r4297, [%rd3+4];
	ld.local.u32 	%r4298, [%rd3];
	// inline asm
	prmt.b32 %r4296, %r4297, %r4298, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4296;
	ld.local.u32 	%r4301, [%rd3];
	ld.local.u32 	%r4302, [%rd2+12];
	// inline asm
	prmt.b32 %r4300, %r4301, %r4302, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4300;
	ld.local.u32 	%r4305, [%rd2+12];
	ld.local.u32 	%r4306, [%rd2+8];
	// inline asm
	prmt.b32 %r4304, %r4305, %r4306, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4304;
	ld.local.u32 	%r4309, [%rd2+8];
	ld.local.u32 	%r4310, [%rd2+4];
	// inline asm
	prmt.b32 %r4308, %r4309, %r4310, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4308;
	ld.local.u32 	%r4313, [%rd2+4];
	ld.local.u32 	%r4314, [%rd2];
	// inline asm
	prmt.b32 %r4312, %r4313, %r4314, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4312;
	ld.local.u32 	%r4317, [%rd2];
	ld.local.u32 	%r4318, [%rd1+12];
	// inline asm
	prmt.b32 %r4316, %r4317, %r4318, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4316;
	ld.local.u32 	%r4321, [%rd1+12];
	ld.local.u32 	%r4322, [%rd1+8];
	// inline asm
	prmt.b32 %r4320, %r4321, %r4322, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4320;
	ld.local.u32 	%r4325, [%rd1+8];
	ld.local.u32 	%r4326, [%rd1+4];
	// inline asm
	prmt.b32 %r4324, %r4325, %r4326, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4324;
	ld.local.u32 	%r4329, [%rd1+4];
	ld.local.u32 	%r4330, [%rd1];
	// inline asm
	prmt.b32 %r4328, %r4329, %r4330, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4328;
	ld.local.u32 	%r4333, [%rd1];
	// inline asm
	prmt.b32 %r4332, %r4333, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4332;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd125, 0;
	st.local.u32 	[%rd1+4], %rd125;
	st.local.u32 	[%rd1], %rd125;
	mov.u32 	%r8431, %r8426;
	bra.uni 	BB1_80;

BB1_138:
	setp.eq.s32	%p66, %r3, 22;
	@%p66 bra 	BB1_160;
	bra.uni 	BB1_139;

BB1_160:
	ld.local.u32 	%r6346, [%rd3+4];
	ld.local.u32 	%r6347, [%rd3];
	// inline asm
	prmt.b32 %r6345, %r6346, %r6347, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6345;
	ld.local.u32 	%r6350, [%rd3];
	ld.local.u32 	%r6351, [%rd2+12];
	// inline asm
	prmt.b32 %r6349, %r6350, %r6351, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6349;
	ld.local.u32 	%r6354, [%rd2+12];
	ld.local.u32 	%r6355, [%rd2+8];
	// inline asm
	prmt.b32 %r6353, %r6354, %r6355, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6353;
	ld.local.u32 	%r6358, [%rd2+8];
	ld.local.u32 	%r6359, [%rd2+4];
	// inline asm
	prmt.b32 %r6357, %r6358, %r6359, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6357;
	ld.local.u32 	%r6362, [%rd2+4];
	ld.local.u32 	%r6363, [%rd2];
	// inline asm
	prmt.b32 %r6361, %r6362, %r6363, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6361;
	ld.local.u32 	%r6366, [%rd2];
	ld.local.u32 	%r6367, [%rd1+12];
	// inline asm
	prmt.b32 %r6365, %r6366, %r6367, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6365;
	ld.local.u32 	%r6370, [%rd1+12];
	ld.local.u32 	%r6371, [%rd1+8];
	// inline asm
	prmt.b32 %r6369, %r6370, %r6371, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6369;
	ld.local.u32 	%r6374, [%rd1+8];
	ld.local.u32 	%r6375, [%rd1+4];
	// inline asm
	prmt.b32 %r6373, %r6374, %r6375, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6373;
	ld.local.u32 	%r6378, [%rd1+4];
	ld.local.u32 	%r6379, [%rd1];
	// inline asm
	prmt.b32 %r6377, %r6378, %r6379, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6377;
	ld.local.u32 	%r6382, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6381, %r6382, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6381;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1127, 0;
	st.local.u32 	[%rd1+4], %rd1127;
	st.local.u32 	[%rd1], %rd1127;
	bra.uni 	BB1_173;

BB1_48:
	setp.eq.s32	%p18, %r3, 22;
	@%p18 bra 	BB1_70;
	bra.uni 	BB1_49;

BB1_70:
	ld.local.u32 	%r1814, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8448, %r8426, %r1814, %r4;
	// inline asm
	ld.local.u32 	%r1817, [%rd8+12];
	ld.local.u32 	%r1818, [%rd8+8];
	// inline asm
	prmt.b32 %r8449, %r1817, %r1818, %r4;
	// inline asm
	ld.local.u32 	%r1821, [%rd8+8];
	ld.local.u32 	%r1822, [%rd8+4];
	// inline asm
	prmt.b32 %r8450, %r1821, %r1822, %r4;
	// inline asm
	ld.local.u32 	%r1825, [%rd8+4];
	ld.local.u32 	%r1826, [%rd8];
	// inline asm
	prmt.b32 %r8443, %r1825, %r1826, %r4;
	// inline asm
	ld.local.u32 	%r1829, [%rd8];
	ld.local.u32 	%r1830, [%rd7+12];
	// inline asm
	prmt.b32 %r8444, %r1829, %r1830, %r4;
	// inline asm
	ld.local.u32 	%r1833, [%rd7+12];
	ld.local.u32 	%r1834, [%rd7+8];
	// inline asm
	prmt.b32 %r8445, %r1833, %r1834, %r4;
	// inline asm
	ld.local.u32 	%r1837, [%rd7+8];
	ld.local.u32 	%r1838, [%rd7+4];
	// inline asm
	prmt.b32 %r8446, %r1837, %r1838, %r4;
	// inline asm
	ld.local.u32 	%r1841, [%rd7+4];
	ld.local.u32 	%r1842, [%rd7];
	// inline asm
	prmt.b32 %r8439, %r1841, %r1842, %r4;
	// inline asm
	ld.local.u32 	%r1845, [%rd7];
	ld.local.u32 	%r1846, [%rd6+12];
	// inline asm
	prmt.b32 %r8440, %r1845, %r1846, %r4;
	// inline asm
	ld.local.u32 	%r1849, [%rd6+12];
	ld.local.u32 	%r1850, [%rd6+8];
	// inline asm
	prmt.b32 %r8441, %r1849, %r1850, %r4;
	// inline asm
	ld.local.u32 	%r1853, [%rd6+8];
	ld.local.u32 	%r1854, [%rd6+4];
	// inline asm
	prmt.b32 %r8442, %r1853, %r1854, %r4;
	// inline asm
	ld.local.u32 	%r1857, [%rd6+4];
	ld.local.u32 	%r1858, [%rd6];
	// inline asm
	prmt.b32 %r8435, %r1857, %r1858, %r4;
	// inline asm
	ld.local.u32 	%r1861, [%rd6];
	ld.local.u32 	%r1862, [%rd5+12];
	// inline asm
	prmt.b32 %r8436, %r1861, %r1862, %r4;
	// inline asm
	ld.local.u32 	%r1865, [%rd5+12];
	ld.local.u32 	%r1866, [%rd5+8];
	// inline asm
	prmt.b32 %r8437, %r1865, %r1866, %r4;
	// inline asm
	ld.local.u32 	%r1869, [%rd5+8];
	ld.local.u32 	%r1870, [%rd5+4];
	// inline asm
	prmt.b32 %r8438, %r1869, %r1870, %r4;
	// inline asm
	ld.local.u32 	%r1873, [%rd5+4];
	ld.local.u32 	%r1874, [%rd5];
	// inline asm
	prmt.b32 %r8431, %r1873, %r1874, %r4;
	// inline asm
	ld.local.u32 	%r1877, [%rd5];
	ld.local.u32 	%r1878, [%rd4+12];
	// inline asm
	prmt.b32 %r8432, %r1877, %r1878, %r4;
	// inline asm
	ld.local.u32 	%r1881, [%rd4+12];
	ld.local.u32 	%r1882, [%rd4+8];
	// inline asm
	prmt.b32 %r8433, %r1881, %r1882, %r4;
	// inline asm
	ld.local.u32 	%r1885, [%rd4+8];
	ld.local.u32 	%r1886, [%rd4+4];
	// inline asm
	prmt.b32 %r8434, %r1885, %r1886, %r4;
	// inline asm
	ld.local.u32 	%r1889, [%rd4+4];
	ld.local.u32 	%r1890, [%rd4];
	// inline asm
	prmt.b32 %r8427, %r1889, %r1890, %r4;
	// inline asm
	ld.local.u32 	%r1893, [%rd4];
	ld.local.u32 	%r1894, [%rd3+12];
	// inline asm
	prmt.b32 %r8428, %r1893, %r1894, %r4;
	// inline asm
	ld.local.u32 	%r1897, [%rd3+12];
	ld.local.u32 	%r1898, [%rd3+8];
	// inline asm
	prmt.b32 %r8429, %r1897, %r1898, %r4;
	// inline asm
	ld.local.u32 	%r1901, [%rd3+8];
	ld.local.u32 	%r1902, [%rd3+4];
	// inline asm
	prmt.b32 %r8430, %r1901, %r1902, %r4;
	// inline asm
	ld.local.u32 	%r1905, [%rd3+4];
	ld.local.u32 	%r1906, [%rd3];
	// inline asm
	prmt.b32 %r1904, %r1905, %r1906, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1904;
	ld.local.u32 	%r1909, [%rd3];
	ld.local.u32 	%r1910, [%rd2+12];
	// inline asm
	prmt.b32 %r1908, %r1909, %r1910, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1908;
	ld.local.u32 	%r1913, [%rd2+12];
	ld.local.u32 	%r1914, [%rd2+8];
	// inline asm
	prmt.b32 %r1912, %r1913, %r1914, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1912;
	ld.local.u32 	%r1917, [%rd2+8];
	ld.local.u32 	%r1918, [%rd2+4];
	// inline asm
	prmt.b32 %r1916, %r1917, %r1918, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1916;
	ld.local.u32 	%r1921, [%rd2+4];
	ld.local.u32 	%r1922, [%rd2];
	// inline asm
	prmt.b32 %r1920, %r1921, %r1922, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1920;
	ld.local.u32 	%r1925, [%rd2];
	ld.local.u32 	%r1926, [%rd1+12];
	// inline asm
	prmt.b32 %r1924, %r1925, %r1926, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1924;
	ld.local.u32 	%r1929, [%rd1+12];
	ld.local.u32 	%r1930, [%rd1+8];
	// inline asm
	prmt.b32 %r1928, %r1929, %r1930, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1928;
	ld.local.u32 	%r1933, [%rd1+8];
	ld.local.u32 	%r1934, [%rd1+4];
	// inline asm
	prmt.b32 %r1932, %r1933, %r1934, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1932;
	ld.local.u32 	%r1937, [%rd1+4];
	ld.local.u32 	%r1938, [%rd1];
	// inline asm
	prmt.b32 %r1936, %r1937, %r1938, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1936;
	ld.local.u32 	%r1941, [%rd1];
	// inline asm
	prmt.b32 %r1940, %r1941, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r1940;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd109, 0;
	st.local.u32 	[%rd1+4], %rd109;
	st.local.u32 	[%rd1], %rd109;
	mov.u32 	%r8447, %r8426;
	bra.uni 	BB1_84;

BB1_122:
	setp.eq.s32	%p78, %r3, 14;
	@%p78 bra 	BB1_164;
	bra.uni 	BB1_123;

BB1_164:
	ld.local.u32 	%r6786, [%rd5+4];
	ld.local.u32 	%r6787, [%rd5];
	// inline asm
	prmt.b32 %r6785, %r6786, %r6787, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6785;
	ld.local.u32 	%r6790, [%rd5];
	ld.local.u32 	%r6791, [%rd4+12];
	// inline asm
	prmt.b32 %r6789, %r6790, %r6791, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6789;
	ld.local.u32 	%r6794, [%rd4+12];
	ld.local.u32 	%r6795, [%rd4+8];
	// inline asm
	prmt.b32 %r6793, %r6794, %r6795, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6793;
	ld.local.u32 	%r6798, [%rd4+8];
	ld.local.u32 	%r6799, [%rd4+4];
	// inline asm
	prmt.b32 %r6797, %r6798, %r6799, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6797;
	ld.local.u32 	%r6802, [%rd4+4];
	ld.local.u32 	%r6803, [%rd4];
	// inline asm
	prmt.b32 %r6801, %r6802, %r6803, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6801;
	ld.local.u32 	%r6806, [%rd4];
	ld.local.u32 	%r6807, [%rd3+12];
	// inline asm
	prmt.b32 %r6805, %r6806, %r6807, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6805;
	ld.local.u32 	%r6810, [%rd3+12];
	ld.local.u32 	%r6811, [%rd3+8];
	// inline asm
	prmt.b32 %r6809, %r6810, %r6811, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6809;
	ld.local.u32 	%r6814, [%rd3+8];
	ld.local.u32 	%r6815, [%rd3+4];
	// inline asm
	prmt.b32 %r6813, %r6814, %r6815, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6813;
	ld.local.u32 	%r6818, [%rd3+4];
	ld.local.u32 	%r6819, [%rd3];
	// inline asm
	prmt.b32 %r6817, %r6818, %r6819, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6817;
	ld.local.u32 	%r6822, [%rd3];
	ld.local.u32 	%r6823, [%rd2+12];
	// inline asm
	prmt.b32 %r6821, %r6822, %r6823, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6821;
	ld.local.u32 	%r6826, [%rd2+12];
	ld.local.u32 	%r6827, [%rd2+8];
	// inline asm
	prmt.b32 %r6825, %r6826, %r6827, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6825;
	ld.local.u32 	%r6830, [%rd2+8];
	ld.local.u32 	%r6831, [%rd2+4];
	// inline asm
	prmt.b32 %r6829, %r6830, %r6831, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6829;
	ld.local.u32 	%r6834, [%rd2+4];
	ld.local.u32 	%r6835, [%rd2];
	// inline asm
	prmt.b32 %r6833, %r6834, %r6835, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6833;
	ld.local.u32 	%r6838, [%rd2];
	ld.local.u32 	%r6839, [%rd1+12];
	// inline asm
	prmt.b32 %r6837, %r6838, %r6839, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6837;
	ld.local.u32 	%r6842, [%rd1+12];
	ld.local.u32 	%r6843, [%rd1+8];
	// inline asm
	prmt.b32 %r6841, %r6842, %r6843, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6841;
	ld.local.u32 	%r6846, [%rd1+8];
	ld.local.u32 	%r6847, [%rd1+4];
	// inline asm
	prmt.b32 %r6845, %r6846, %r6847, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6845;
	ld.local.u32 	%r6850, [%rd1+4];
	ld.local.u32 	%r6851, [%rd1];
	// inline asm
	prmt.b32 %r6849, %r6850, %r6851, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6849;
	ld.local.u32 	%r6854, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6853, %r6854, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6853;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1135, 0;
	st.local.u32 	[%rd1+4], %rd1135;
	st.local.u32 	[%rd1], %rd1135;
	bra.uni 	BB1_173;

BB1_32:
	setp.eq.s32	%p30, %r3, 14;
	@%p30 bra 	BB1_74;
	bra.uni 	BB1_33;

BB1_74:
	ld.local.u32 	%r2978, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8440, %r8426, %r2978, %r4;
	// inline asm
	ld.local.u32 	%r2981, [%rd8+12];
	ld.local.u32 	%r2982, [%rd8+8];
	// inline asm
	prmt.b32 %r8441, %r2981, %r2982, %r4;
	// inline asm
	ld.local.u32 	%r2985, [%rd8+8];
	ld.local.u32 	%r2986, [%rd8+4];
	// inline asm
	prmt.b32 %r8442, %r2985, %r2986, %r4;
	// inline asm
	ld.local.u32 	%r2989, [%rd8+4];
	ld.local.u32 	%r2990, [%rd8];
	// inline asm
	prmt.b32 %r8435, %r2989, %r2990, %r4;
	// inline asm
	ld.local.u32 	%r2993, [%rd8];
	ld.local.u32 	%r2994, [%rd7+12];
	// inline asm
	prmt.b32 %r8436, %r2993, %r2994, %r4;
	// inline asm
	ld.local.u32 	%r2997, [%rd7+12];
	ld.local.u32 	%r2998, [%rd7+8];
	// inline asm
	prmt.b32 %r8437, %r2997, %r2998, %r4;
	// inline asm
	ld.local.u32 	%r3001, [%rd7+8];
	ld.local.u32 	%r3002, [%rd7+4];
	// inline asm
	prmt.b32 %r8438, %r3001, %r3002, %r4;
	// inline asm
	ld.local.u32 	%r3005, [%rd7+4];
	ld.local.u32 	%r3006, [%rd7];
	// inline asm
	prmt.b32 %r8431, %r3005, %r3006, %r4;
	// inline asm
	ld.local.u32 	%r3009, [%rd7];
	ld.local.u32 	%r3010, [%rd6+12];
	// inline asm
	prmt.b32 %r8432, %r3009, %r3010, %r4;
	// inline asm
	ld.local.u32 	%r3013, [%rd6+12];
	ld.local.u32 	%r3014, [%rd6+8];
	// inline asm
	prmt.b32 %r8433, %r3013, %r3014, %r4;
	// inline asm
	ld.local.u32 	%r3017, [%rd6+8];
	ld.local.u32 	%r3018, [%rd6+4];
	// inline asm
	prmt.b32 %r8434, %r3017, %r3018, %r4;
	// inline asm
	ld.local.u32 	%r3021, [%rd6+4];
	ld.local.u32 	%r3022, [%rd6];
	// inline asm
	prmt.b32 %r8427, %r3021, %r3022, %r4;
	// inline asm
	ld.local.u32 	%r3025, [%rd6];
	ld.local.u32 	%r3026, [%rd5+12];
	// inline asm
	prmt.b32 %r8428, %r3025, %r3026, %r4;
	// inline asm
	ld.local.u32 	%r3029, [%rd5+12];
	ld.local.u32 	%r3030, [%rd5+8];
	// inline asm
	prmt.b32 %r8429, %r3029, %r3030, %r4;
	// inline asm
	ld.local.u32 	%r3033, [%rd5+8];
	ld.local.u32 	%r3034, [%rd5+4];
	// inline asm
	prmt.b32 %r8430, %r3033, %r3034, %r4;
	// inline asm
	ld.local.u32 	%r3037, [%rd5+4];
	ld.local.u32 	%r3038, [%rd5];
	// inline asm
	prmt.b32 %r3036, %r3037, %r3038, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3036;
	ld.local.u32 	%r3041, [%rd5];
	ld.local.u32 	%r3042, [%rd4+12];
	// inline asm
	prmt.b32 %r3040, %r3041, %r3042, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3040;
	ld.local.u32 	%r3045, [%rd4+12];
	ld.local.u32 	%r3046, [%rd4+8];
	// inline asm
	prmt.b32 %r3044, %r3045, %r3046, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3044;
	ld.local.u32 	%r3049, [%rd4+8];
	ld.local.u32 	%r3050, [%rd4+4];
	// inline asm
	prmt.b32 %r3048, %r3049, %r3050, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3048;
	ld.local.u32 	%r3053, [%rd4+4];
	ld.local.u32 	%r3054, [%rd4];
	// inline asm
	prmt.b32 %r3052, %r3053, %r3054, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3052;
	ld.local.u32 	%r3057, [%rd4];
	ld.local.u32 	%r3058, [%rd3+12];
	// inline asm
	prmt.b32 %r3056, %r3057, %r3058, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3056;
	ld.local.u32 	%r3061, [%rd3+12];
	ld.local.u32 	%r3062, [%rd3+8];
	// inline asm
	prmt.b32 %r3060, %r3061, %r3062, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3060;
	ld.local.u32 	%r3065, [%rd3+8];
	ld.local.u32 	%r3066, [%rd3+4];
	// inline asm
	prmt.b32 %r3064, %r3065, %r3066, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3064;
	ld.local.u32 	%r3069, [%rd3+4];
	ld.local.u32 	%r3070, [%rd3];
	// inline asm
	prmt.b32 %r3068, %r3069, %r3070, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3068;
	ld.local.u32 	%r3073, [%rd3];
	ld.local.u32 	%r3074, [%rd2+12];
	// inline asm
	prmt.b32 %r3072, %r3073, %r3074, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3072;
	ld.local.u32 	%r3077, [%rd2+12];
	ld.local.u32 	%r3078, [%rd2+8];
	// inline asm
	prmt.b32 %r3076, %r3077, %r3078, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3076;
	ld.local.u32 	%r3081, [%rd2+8];
	ld.local.u32 	%r3082, [%rd2+4];
	// inline asm
	prmt.b32 %r3080, %r3081, %r3082, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3080;
	ld.local.u32 	%r3085, [%rd2+4];
	ld.local.u32 	%r3086, [%rd2];
	// inline asm
	prmt.b32 %r3084, %r3085, %r3086, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3084;
	ld.local.u32 	%r3089, [%rd2];
	ld.local.u32 	%r3090, [%rd1+12];
	// inline asm
	prmt.b32 %r3088, %r3089, %r3090, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3088;
	ld.local.u32 	%r3093, [%rd1+12];
	ld.local.u32 	%r3094, [%rd1+8];
	// inline asm
	prmt.b32 %r3092, %r3093, %r3094, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3092;
	ld.local.u32 	%r3097, [%rd1+8];
	ld.local.u32 	%r3098, [%rd1+4];
	// inline asm
	prmt.b32 %r3096, %r3097, %r3098, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3096;
	ld.local.u32 	%r3101, [%rd1+4];
	ld.local.u32 	%r3102, [%rd1];
	// inline asm
	prmt.b32 %r3100, %r3101, %r3102, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3100;
	ld.local.u32 	%r3105, [%rd1];
	// inline asm
	prmt.b32 %r3104, %r3105, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3104;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd117, 0;
	st.local.u32 	[%rd1+4], %rd117;
	st.local.u32 	[%rd1], %rd117;
	mov.u32 	%r8439, %r8426;
	bra.uni 	BB1_82;

BB1_153:
	setp.eq.s32	%p55, %r3, 30;
	@%p55 bra 	BB1_156;
	bra.uni 	BB1_154;

BB1_156:
	ld.local.u32 	%r6162, [%rd1+4];
	ld.local.u32 	%r6163, [%rd1];
	// inline asm
	prmt.b32 %r6161, %r6162, %r6163, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6161;
	ld.local.u32 	%r6166, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6165, %r6166, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6165;
	st.local.u32 	[%rd8+4], %r8460;
	st.local.u32 	[%rd8], %r8460;
	st.local.u32 	[%rd7+12], %r8460;
	st.local.u32 	[%rd7+8], %r8460;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1119, 0;
	st.local.u32 	[%rd1+4], %rd1119;
	st.local.u32 	[%rd1], %rd1119;
	bra.uni 	BB1_173;

BB1_63:
	setp.eq.s32	%p7, %r3, 30;
	@%p7 bra 	BB1_66;
	bra.uni 	BB1_64;

BB1_66:
	ld.local.u32 	%r714, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8456, %r8426, %r714, %r4;
	// inline asm
	ld.local.u32 	%r717, [%rd8+12];
	ld.local.u32 	%r718, [%rd8+8];
	// inline asm
	prmt.b32 %r8457, %r717, %r718, %r4;
	// inline asm
	ld.local.u32 	%r721, [%rd8+8];
	ld.local.u32 	%r722, [%rd8+4];
	// inline asm
	prmt.b32 %r8458, %r721, %r722, %r4;
	// inline asm
	ld.local.u32 	%r725, [%rd8+4];
	ld.local.u32 	%r726, [%rd8];
	// inline asm
	prmt.b32 %r8451, %r725, %r726, %r4;
	// inline asm
	ld.local.u32 	%r729, [%rd8];
	ld.local.u32 	%r730, [%rd7+12];
	// inline asm
	prmt.b32 %r8452, %r729, %r730, %r4;
	// inline asm
	ld.local.u32 	%r733, [%rd7+12];
	ld.local.u32 	%r734, [%rd7+8];
	// inline asm
	prmt.b32 %r8453, %r733, %r734, %r4;
	// inline asm
	ld.local.u32 	%r737, [%rd7+8];
	ld.local.u32 	%r738, [%rd7+4];
	// inline asm
	prmt.b32 %r8454, %r737, %r738, %r4;
	// inline asm
	ld.local.u32 	%r741, [%rd7+4];
	ld.local.u32 	%r742, [%rd7];
	// inline asm
	prmt.b32 %r8447, %r741, %r742, %r4;
	// inline asm
	ld.local.u32 	%r745, [%rd7];
	ld.local.u32 	%r746, [%rd6+12];
	// inline asm
	prmt.b32 %r8448, %r745, %r746, %r4;
	// inline asm
	ld.local.u32 	%r749, [%rd6+12];
	ld.local.u32 	%r750, [%rd6+8];
	// inline asm
	prmt.b32 %r8449, %r749, %r750, %r4;
	// inline asm
	ld.local.u32 	%r753, [%rd6+8];
	ld.local.u32 	%r754, [%rd6+4];
	// inline asm
	prmt.b32 %r8450, %r753, %r754, %r4;
	// inline asm
	ld.local.u32 	%r757, [%rd6+4];
	ld.local.u32 	%r758, [%rd6];
	// inline asm
	prmt.b32 %r8443, %r757, %r758, %r4;
	// inline asm
	ld.local.u32 	%r761, [%rd6];
	ld.local.u32 	%r762, [%rd5+12];
	// inline asm
	prmt.b32 %r8444, %r761, %r762, %r4;
	// inline asm
	ld.local.u32 	%r765, [%rd5+12];
	ld.local.u32 	%r766, [%rd5+8];
	// inline asm
	prmt.b32 %r8445, %r765, %r766, %r4;
	// inline asm
	ld.local.u32 	%r769, [%rd5+8];
	ld.local.u32 	%r770, [%rd5+4];
	// inline asm
	prmt.b32 %r8446, %r769, %r770, %r4;
	// inline asm
	ld.local.u32 	%r773, [%rd5+4];
	ld.local.u32 	%r774, [%rd5];
	// inline asm
	prmt.b32 %r8439, %r773, %r774, %r4;
	// inline asm
	ld.local.u32 	%r777, [%rd5];
	ld.local.u32 	%r778, [%rd4+12];
	// inline asm
	prmt.b32 %r8440, %r777, %r778, %r4;
	// inline asm
	ld.local.u32 	%r781, [%rd4+12];
	ld.local.u32 	%r782, [%rd4+8];
	// inline asm
	prmt.b32 %r8441, %r781, %r782, %r4;
	// inline asm
	ld.local.u32 	%r785, [%rd4+8];
	ld.local.u32 	%r786, [%rd4+4];
	// inline asm
	prmt.b32 %r8442, %r785, %r786, %r4;
	// inline asm
	ld.local.u32 	%r789, [%rd4+4];
	ld.local.u32 	%r790, [%rd4];
	// inline asm
	prmt.b32 %r8435, %r789, %r790, %r4;
	// inline asm
	ld.local.u32 	%r793, [%rd4];
	ld.local.u32 	%r794, [%rd3+12];
	// inline asm
	prmt.b32 %r8436, %r793, %r794, %r4;
	// inline asm
	ld.local.u32 	%r797, [%rd3+12];
	ld.local.u32 	%r798, [%rd3+8];
	// inline asm
	prmt.b32 %r8437, %r797, %r798, %r4;
	// inline asm
	ld.local.u32 	%r801, [%rd3+8];
	ld.local.u32 	%r802, [%rd3+4];
	// inline asm
	prmt.b32 %r8438, %r801, %r802, %r4;
	// inline asm
	ld.local.u32 	%r805, [%rd3+4];
	ld.local.u32 	%r806, [%rd3];
	// inline asm
	prmt.b32 %r8431, %r805, %r806, %r4;
	// inline asm
	ld.local.u32 	%r809, [%rd3];
	ld.local.u32 	%r810, [%rd2+12];
	// inline asm
	prmt.b32 %r8432, %r809, %r810, %r4;
	// inline asm
	ld.local.u32 	%r813, [%rd2+12];
	ld.local.u32 	%r814, [%rd2+8];
	// inline asm
	prmt.b32 %r8433, %r813, %r814, %r4;
	// inline asm
	ld.local.u32 	%r817, [%rd2+8];
	ld.local.u32 	%r818, [%rd2+4];
	// inline asm
	prmt.b32 %r8434, %r817, %r818, %r4;
	// inline asm
	ld.local.u32 	%r821, [%rd2+4];
	ld.local.u32 	%r822, [%rd2];
	// inline asm
	prmt.b32 %r8427, %r821, %r822, %r4;
	// inline asm
	ld.local.u32 	%r825, [%rd2];
	ld.local.u32 	%r826, [%rd1+12];
	// inline asm
	prmt.b32 %r8428, %r825, %r826, %r4;
	// inline asm
	ld.local.u32 	%r829, [%rd1+12];
	ld.local.u32 	%r830, [%rd1+8];
	// inline asm
	prmt.b32 %r8429, %r829, %r830, %r4;
	// inline asm
	ld.local.u32 	%r833, [%rd1+8];
	ld.local.u32 	%r834, [%rd1+4];
	// inline asm
	prmt.b32 %r8430, %r833, %r834, %r4;
	// inline asm
	ld.local.u32 	%r837, [%rd1+4];
	ld.local.u32 	%r838, [%rd1];
	// inline asm
	prmt.b32 %r836, %r837, %r838, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r836;
	ld.local.u32 	%r841, [%rd1];
	// inline asm
	prmt.b32 %r840, %r841, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r840;
	st.local.u32 	[%rd8+4], %r8426;
	st.local.u32 	[%rd8], %r8426;
	st.local.u32 	[%rd7+12], %r8426;
	st.local.u32 	[%rd7+8], %r8426;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd101, 0;
	st.local.u32 	[%rd1+4], %rd101;
	st.local.u32 	[%rd1], %rd101;
	mov.u32 	%r8455, %r8426;
	bra.uni 	BB1_90;

BB1_98:
	setp.eq.s32	%p97, %r3, 1;
	@%p97 bra 	BB1_99;
	bra.uni 	BB1_172;

BB1_99:
	ld.local.u32 	%r8047, [%rd8+8];
	ld.local.u32 	%r8048, [%rd8+4];
	// inline asm
	prmt.b32 %r8046, %r8047, %r8048, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8046;
	ld.local.u32 	%r8051, [%rd8+4];
	ld.local.u32 	%r8052, [%rd8];
	// inline asm
	prmt.b32 %r8050, %r8051, %r8052, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8050;
	ld.local.u32 	%r8055, [%rd8];
	ld.local.u32 	%r8056, [%rd7+12];
	// inline asm
	prmt.b32 %r8054, %r8055, %r8056, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8054;
	ld.local.u32 	%r8059, [%rd7+12];
	ld.local.u32 	%r8060, [%rd7+8];
	// inline asm
	prmt.b32 %r8058, %r8059, %r8060, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8058;
	ld.local.u32 	%r8063, [%rd7+8];
	ld.local.u32 	%r8064, [%rd7+4];
	// inline asm
	prmt.b32 %r8062, %r8063, %r8064, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8062;
	ld.local.u32 	%r8067, [%rd7+4];
	ld.local.u32 	%r8068, [%rd7];
	// inline asm
	prmt.b32 %r8066, %r8067, %r8068, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8066;
	ld.local.u32 	%r8071, [%rd7];
	ld.local.u32 	%r8072, [%rd6+12];
	// inline asm
	prmt.b32 %r8070, %r8071, %r8072, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8070;
	ld.local.u32 	%r8075, [%rd6+12];
	ld.local.u32 	%r8076, [%rd6+8];
	// inline asm
	prmt.b32 %r8074, %r8075, %r8076, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8074;
	ld.local.u32 	%r8079, [%rd6+8];
	ld.local.u32 	%r8080, [%rd6+4];
	// inline asm
	prmt.b32 %r8078, %r8079, %r8080, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8078;
	ld.local.u32 	%r8083, [%rd6+4];
	ld.local.u32 	%r8084, [%rd6];
	// inline asm
	prmt.b32 %r8082, %r8083, %r8084, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8082;
	ld.local.u32 	%r8087, [%rd6];
	ld.local.u32 	%r8088, [%rd5+12];
	// inline asm
	prmt.b32 %r8086, %r8087, %r8088, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8086;
	ld.local.u32 	%r8091, [%rd5+12];
	ld.local.u32 	%r8092, [%rd5+8];
	// inline asm
	prmt.b32 %r8090, %r8091, %r8092, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8090;
	ld.local.u32 	%r8095, [%rd5+8];
	ld.local.u32 	%r8096, [%rd5+4];
	// inline asm
	prmt.b32 %r8094, %r8095, %r8096, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8094;
	ld.local.u32 	%r8099, [%rd5+4];
	ld.local.u32 	%r8100, [%rd5];
	// inline asm
	prmt.b32 %r8098, %r8099, %r8100, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8098;
	ld.local.u32 	%r8103, [%rd5];
	ld.local.u32 	%r8104, [%rd4+12];
	// inline asm
	prmt.b32 %r8102, %r8103, %r8104, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8102;
	ld.local.u32 	%r8107, [%rd4+12];
	ld.local.u32 	%r8108, [%rd4+8];
	// inline asm
	prmt.b32 %r8106, %r8107, %r8108, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8106;
	ld.local.u32 	%r8111, [%rd4+8];
	ld.local.u32 	%r8112, [%rd4+4];
	// inline asm
	prmt.b32 %r8110, %r8111, %r8112, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8110;
	ld.local.u32 	%r8115, [%rd4+4];
	ld.local.u32 	%r8116, [%rd4];
	// inline asm
	prmt.b32 %r8114, %r8115, %r8116, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8114;
	ld.local.u32 	%r8119, [%rd4];
	ld.local.u32 	%r8120, [%rd3+12];
	// inline asm
	prmt.b32 %r8118, %r8119, %r8120, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8118;
	ld.local.u32 	%r8123, [%rd3+12];
	ld.local.u32 	%r8124, [%rd3+8];
	// inline asm
	prmt.b32 %r8122, %r8123, %r8124, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8122;
	ld.local.u32 	%r8127, [%rd3+8];
	ld.local.u32 	%r8128, [%rd3+4];
	// inline asm
	prmt.b32 %r8126, %r8127, %r8128, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8126;
	ld.local.u32 	%r8131, [%rd3+4];
	ld.local.u32 	%r8132, [%rd3];
	// inline asm
	prmt.b32 %r8130, %r8131, %r8132, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8130;
	ld.local.u32 	%r8135, [%rd3];
	ld.local.u32 	%r8136, [%rd2+12];
	// inline asm
	prmt.b32 %r8134, %r8135, %r8136, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8134;
	ld.local.u32 	%r8139, [%rd2+12];
	ld.local.u32 	%r8140, [%rd2+8];
	// inline asm
	prmt.b32 %r8138, %r8139, %r8140, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8138;
	ld.local.u32 	%r8143, [%rd2+8];
	ld.local.u32 	%r8144, [%rd2+4];
	// inline asm
	prmt.b32 %r8142, %r8143, %r8144, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8142;
	ld.local.u32 	%r8147, [%rd2+4];
	ld.local.u32 	%r8148, [%rd2];
	// inline asm
	prmt.b32 %r8146, %r8147, %r8148, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8146;
	ld.local.u32 	%r8151, [%rd2];
	ld.local.u32 	%r8152, [%rd1+12];
	// inline asm
	prmt.b32 %r8150, %r8151, %r8152, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8150;
	ld.local.u32 	%r8155, [%rd1+12];
	ld.local.u32 	%r8156, [%rd1+8];
	// inline asm
	prmt.b32 %r8154, %r8155, %r8156, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8154;
	ld.local.u32 	%r8159, [%rd1+8];
	ld.local.u32 	%r8160, [%rd1+4];
	// inline asm
	prmt.b32 %r8158, %r8159, %r8160, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8158;
	ld.local.u32 	%r8163, [%rd1+4];
	ld.local.u32 	%r8164, [%rd1];
	// inline asm
	prmt.b32 %r8162, %r8163, %r8164, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8162;
	ld.local.u32 	%r8167, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r8166, %r8167, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8166;
	st.local.u32 	[%rd1], %r8460;
	bra.uni 	BB1_173;

BB1_7:
	setp.eq.s32	%p49, %r3, 1;
	@%p49 bra 	BB1_8;
	bra.uni 	BB1_88;

BB1_8:
	ld.local.u32 	%r5006, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8429, %r8426, %r5006, %r4;
	// inline asm
	ld.local.u32 	%r5009, [%rd8+12];
	ld.local.u32 	%r5010, [%rd8+8];
	// inline asm
	prmt.b32 %r8430, %r5009, %r5010, %r4;
	// inline asm
	ld.local.u32 	%r5013, [%rd8+8];
	ld.local.u32 	%r5014, [%rd8+4];
	// inline asm
	prmt.b32 %r5012, %r5013, %r5014, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5012;
	ld.local.u32 	%r5017, [%rd8+4];
	ld.local.u32 	%r5018, [%rd8];
	// inline asm
	prmt.b32 %r5016, %r5017, %r5018, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5016;
	ld.local.u32 	%r5021, [%rd8];
	ld.local.u32 	%r5022, [%rd7+12];
	// inline asm
	prmt.b32 %r5020, %r5021, %r5022, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5020;
	ld.local.u32 	%r5025, [%rd7+12];
	ld.local.u32 	%r5026, [%rd7+8];
	// inline asm
	prmt.b32 %r5024, %r5025, %r5026, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5024;
	ld.local.u32 	%r5029, [%rd7+8];
	ld.local.u32 	%r5030, [%rd7+4];
	// inline asm
	prmt.b32 %r5028, %r5029, %r5030, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5028;
	ld.local.u32 	%r5033, [%rd7+4];
	ld.local.u32 	%r5034, [%rd7];
	// inline asm
	prmt.b32 %r5032, %r5033, %r5034, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5032;
	ld.local.u32 	%r5037, [%rd7];
	ld.local.u32 	%r5038, [%rd6+12];
	// inline asm
	prmt.b32 %r5036, %r5037, %r5038, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5036;
	ld.local.u32 	%r5041, [%rd6+12];
	ld.local.u32 	%r5042, [%rd6+8];
	// inline asm
	prmt.b32 %r5040, %r5041, %r5042, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5040;
	ld.local.u32 	%r5045, [%rd6+8];
	ld.local.u32 	%r5046, [%rd6+4];
	// inline asm
	prmt.b32 %r5044, %r5045, %r5046, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5044;
	ld.local.u32 	%r5049, [%rd6+4];
	ld.local.u32 	%r5050, [%rd6];
	// inline asm
	prmt.b32 %r5048, %r5049, %r5050, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5048;
	ld.local.u32 	%r5053, [%rd6];
	ld.local.u32 	%r5054, [%rd5+12];
	// inline asm
	prmt.b32 %r5052, %r5053, %r5054, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5052;
	ld.local.u32 	%r5057, [%rd5+12];
	ld.local.u32 	%r5058, [%rd5+8];
	// inline asm
	prmt.b32 %r5056, %r5057, %r5058, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5056;
	ld.local.u32 	%r5061, [%rd5+8];
	ld.local.u32 	%r5062, [%rd5+4];
	// inline asm
	prmt.b32 %r5060, %r5061, %r5062, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5060;
	ld.local.u32 	%r5065, [%rd5+4];
	ld.local.u32 	%r5066, [%rd5];
	// inline asm
	prmt.b32 %r5064, %r5065, %r5066, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5064;
	ld.local.u32 	%r5069, [%rd5];
	ld.local.u32 	%r5070, [%rd4+12];
	// inline asm
	prmt.b32 %r5068, %r5069, %r5070, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5068;
	ld.local.u32 	%r5073, [%rd4+12];
	ld.local.u32 	%r5074, [%rd4+8];
	// inline asm
	prmt.b32 %r5072, %r5073, %r5074, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5072;
	ld.local.u32 	%r5077, [%rd4+8];
	ld.local.u32 	%r5078, [%rd4+4];
	// inline asm
	prmt.b32 %r5076, %r5077, %r5078, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5076;
	ld.local.u32 	%r5081, [%rd4+4];
	ld.local.u32 	%r5082, [%rd4];
	// inline asm
	prmt.b32 %r5080, %r5081, %r5082, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5080;
	ld.local.u32 	%r5085, [%rd4];
	ld.local.u32 	%r5086, [%rd3+12];
	// inline asm
	prmt.b32 %r5084, %r5085, %r5086, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5084;
	ld.local.u32 	%r5089, [%rd3+12];
	ld.local.u32 	%r5090, [%rd3+8];
	// inline asm
	prmt.b32 %r5088, %r5089, %r5090, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5088;
	ld.local.u32 	%r5093, [%rd3+8];
	ld.local.u32 	%r5094, [%rd3+4];
	// inline asm
	prmt.b32 %r5092, %r5093, %r5094, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5092;
	ld.local.u32 	%r5097, [%rd3+4];
	ld.local.u32 	%r5098, [%rd3];
	// inline asm
	prmt.b32 %r5096, %r5097, %r5098, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5096;
	ld.local.u32 	%r5101, [%rd3];
	ld.local.u32 	%r5102, [%rd2+12];
	// inline asm
	prmt.b32 %r5100, %r5101, %r5102, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5100;
	ld.local.u32 	%r5105, [%rd2+12];
	ld.local.u32 	%r5106, [%rd2+8];
	// inline asm
	prmt.b32 %r5104, %r5105, %r5106, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5104;
	ld.local.u32 	%r5109, [%rd2+8];
	ld.local.u32 	%r5110, [%rd2+4];
	// inline asm
	prmt.b32 %r5108, %r5109, %r5110, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5108;
	ld.local.u32 	%r5113, [%rd2+4];
	ld.local.u32 	%r5114, [%rd2];
	// inline asm
	prmt.b32 %r5112, %r5113, %r5114, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5112;
	ld.local.u32 	%r5117, [%rd2];
	ld.local.u32 	%r5118, [%rd1+12];
	// inline asm
	prmt.b32 %r5116, %r5117, %r5118, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5116;
	ld.local.u32 	%r5121, [%rd1+12];
	ld.local.u32 	%r5122, [%rd1+8];
	// inline asm
	prmt.b32 %r5120, %r5121, %r5122, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5120;
	ld.local.u32 	%r5125, [%rd1+8];
	ld.local.u32 	%r5126, [%rd1+4];
	// inline asm
	prmt.b32 %r5124, %r5125, %r5126, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5124;
	ld.local.u32 	%r5129, [%rd1+4];
	ld.local.u32 	%r5130, [%rd1];
	// inline asm
	prmt.b32 %r5128, %r5129, %r5130, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5128;
	ld.local.u32 	%r5133, [%rd1];
	// inline asm
	prmt.b32 %r5132, %r5133, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5132;
	st.local.u32 	[%rd1], %r8426;
	mov.u32 	%r8427, %r8426;
	mov.u32 	%r8428, %r8426;
	bra.uni 	BB1_12;

BB1_129:
	setp.eq.s32	%p74, %r3, 17;
	@%p74 bra 	BB1_130;
	bra.uni 	BB1_172;

BB1_130:
	ld.local.u32 	%r6591, [%rd4+8];
	ld.local.u32 	%r6592, [%rd4+4];
	// inline asm
	prmt.b32 %r6590, %r6591, %r6592, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6590;
	ld.local.u32 	%r6595, [%rd4+4];
	ld.local.u32 	%r6596, [%rd4];
	// inline asm
	prmt.b32 %r6594, %r6595, %r6596, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6594;
	ld.local.u32 	%r6599, [%rd4];
	ld.local.u32 	%r6600, [%rd3+12];
	// inline asm
	prmt.b32 %r6598, %r6599, %r6600, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6598;
	ld.local.u32 	%r6603, [%rd3+12];
	ld.local.u32 	%r6604, [%rd3+8];
	// inline asm
	prmt.b32 %r6602, %r6603, %r6604, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6602;
	ld.local.u32 	%r6607, [%rd3+8];
	ld.local.u32 	%r6608, [%rd3+4];
	// inline asm
	prmt.b32 %r6606, %r6607, %r6608, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6606;
	ld.local.u32 	%r6611, [%rd3+4];
	ld.local.u32 	%r6612, [%rd3];
	// inline asm
	prmt.b32 %r6610, %r6611, %r6612, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6610;
	ld.local.u32 	%r6615, [%rd3];
	ld.local.u32 	%r6616, [%rd2+12];
	// inline asm
	prmt.b32 %r6614, %r6615, %r6616, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6614;
	ld.local.u32 	%r6619, [%rd2+12];
	ld.local.u32 	%r6620, [%rd2+8];
	// inline asm
	prmt.b32 %r6618, %r6619, %r6620, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6618;
	ld.local.u32 	%r6623, [%rd2+8];
	ld.local.u32 	%r6624, [%rd2+4];
	// inline asm
	prmt.b32 %r6622, %r6623, %r6624, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6622;
	ld.local.u32 	%r6627, [%rd2+4];
	ld.local.u32 	%r6628, [%rd2];
	// inline asm
	prmt.b32 %r6626, %r6627, %r6628, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6626;
	ld.local.u32 	%r6631, [%rd2];
	ld.local.u32 	%r6632, [%rd1+12];
	// inline asm
	prmt.b32 %r6630, %r6631, %r6632, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6630;
	ld.local.u32 	%r6635, [%rd1+12];
	ld.local.u32 	%r6636, [%rd1+8];
	// inline asm
	prmt.b32 %r6634, %r6635, %r6636, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6634;
	ld.local.u32 	%r6639, [%rd1+8];
	ld.local.u32 	%r6640, [%rd1+4];
	// inline asm
	prmt.b32 %r6638, %r6639, %r6640, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6638;
	ld.local.u32 	%r6643, [%rd1+4];
	ld.local.u32 	%r6644, [%rd1];
	// inline asm
	prmt.b32 %r6642, %r6643, %r6644, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6642;
	ld.local.u32 	%r6647, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6646, %r6647, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6646;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1132, 0;
	st.local.u32 	[%rd1+4], %rd1132;
	st.local.u32 	[%rd1], %rd1132;
	bra.uni 	BB1_173;

BB1_39:
	setp.eq.s32	%p26, %r3, 17;
	@%p26 bra 	BB1_40;
	bra.uni 	BB1_88;

BB1_40:
	ld.local.u32 	%r2534, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8445, %r8426, %r2534, %r4;
	// inline asm
	ld.local.u32 	%r2537, [%rd8+12];
	ld.local.u32 	%r2538, [%rd8+8];
	// inline asm
	prmt.b32 %r8446, %r2537, %r2538, %r4;
	// inline asm
	ld.local.u32 	%r2541, [%rd8+8];
	ld.local.u32 	%r2542, [%rd8+4];
	// inline asm
	prmt.b32 %r8439, %r2541, %r2542, %r4;
	// inline asm
	ld.local.u32 	%r2545, [%rd8+4];
	ld.local.u32 	%r2546, [%rd8];
	// inline asm
	prmt.b32 %r8440, %r2545, %r2546, %r4;
	// inline asm
	ld.local.u32 	%r2549, [%rd8];
	ld.local.u32 	%r2550, [%rd7+12];
	// inline asm
	prmt.b32 %r8441, %r2549, %r2550, %r4;
	// inline asm
	ld.local.u32 	%r2553, [%rd7+12];
	ld.local.u32 	%r2554, [%rd7+8];
	// inline asm
	prmt.b32 %r8442, %r2553, %r2554, %r4;
	// inline asm
	ld.local.u32 	%r2557, [%rd7+8];
	ld.local.u32 	%r2558, [%rd7+4];
	// inline asm
	prmt.b32 %r8435, %r2557, %r2558, %r4;
	// inline asm
	ld.local.u32 	%r2561, [%rd7+4];
	ld.local.u32 	%r2562, [%rd7];
	// inline asm
	prmt.b32 %r8436, %r2561, %r2562, %r4;
	// inline asm
	ld.local.u32 	%r2565, [%rd7];
	ld.local.u32 	%r2566, [%rd6+12];
	// inline asm
	prmt.b32 %r8437, %r2565, %r2566, %r4;
	// inline asm
	ld.local.u32 	%r2569, [%rd6+12];
	ld.local.u32 	%r2570, [%rd6+8];
	// inline asm
	prmt.b32 %r8438, %r2569, %r2570, %r4;
	// inline asm
	ld.local.u32 	%r2573, [%rd6+8];
	ld.local.u32 	%r2574, [%rd6+4];
	// inline asm
	prmt.b32 %r8431, %r2573, %r2574, %r4;
	// inline asm
	ld.local.u32 	%r2577, [%rd6+4];
	ld.local.u32 	%r2578, [%rd6];
	// inline asm
	prmt.b32 %r8432, %r2577, %r2578, %r4;
	// inline asm
	ld.local.u32 	%r2581, [%rd6];
	ld.local.u32 	%r2582, [%rd5+12];
	// inline asm
	prmt.b32 %r8433, %r2581, %r2582, %r4;
	// inline asm
	ld.local.u32 	%r2585, [%rd5+12];
	ld.local.u32 	%r2586, [%rd5+8];
	// inline asm
	prmt.b32 %r8434, %r2585, %r2586, %r4;
	// inline asm
	ld.local.u32 	%r2589, [%rd5+8];
	ld.local.u32 	%r2590, [%rd5+4];
	// inline asm
	prmt.b32 %r8427, %r2589, %r2590, %r4;
	// inline asm
	ld.local.u32 	%r2593, [%rd5+4];
	ld.local.u32 	%r2594, [%rd5];
	// inline asm
	prmt.b32 %r8428, %r2593, %r2594, %r4;
	// inline asm
	ld.local.u32 	%r2597, [%rd5];
	ld.local.u32 	%r2598, [%rd4+12];
	// inline asm
	prmt.b32 %r8429, %r2597, %r2598, %r4;
	// inline asm
	ld.local.u32 	%r2601, [%rd4+12];
	ld.local.u32 	%r2602, [%rd4+8];
	// inline asm
	prmt.b32 %r8430, %r2601, %r2602, %r4;
	// inline asm
	ld.local.u32 	%r2605, [%rd4+8];
	ld.local.u32 	%r2606, [%rd4+4];
	// inline asm
	prmt.b32 %r2604, %r2605, %r2606, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2604;
	ld.local.u32 	%r2609, [%rd4+4];
	ld.local.u32 	%r2610, [%rd4];
	// inline asm
	prmt.b32 %r2608, %r2609, %r2610, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2608;
	ld.local.u32 	%r2613, [%rd4];
	ld.local.u32 	%r2614, [%rd3+12];
	// inline asm
	prmt.b32 %r2612, %r2613, %r2614, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2612;
	ld.local.u32 	%r2617, [%rd3+12];
	ld.local.u32 	%r2618, [%rd3+8];
	// inline asm
	prmt.b32 %r2616, %r2617, %r2618, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2616;
	ld.local.u32 	%r2621, [%rd3+8];
	ld.local.u32 	%r2622, [%rd3+4];
	// inline asm
	prmt.b32 %r2620, %r2621, %r2622, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2620;
	ld.local.u32 	%r2625, [%rd3+4];
	ld.local.u32 	%r2626, [%rd3];
	// inline asm
	prmt.b32 %r2624, %r2625, %r2626, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2624;
	ld.local.u32 	%r2629, [%rd3];
	ld.local.u32 	%r2630, [%rd2+12];
	// inline asm
	prmt.b32 %r2628, %r2629, %r2630, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2628;
	ld.local.u32 	%r2633, [%rd2+12];
	ld.local.u32 	%r2634, [%rd2+8];
	// inline asm
	prmt.b32 %r2632, %r2633, %r2634, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2632;
	ld.local.u32 	%r2637, [%rd2+8];
	ld.local.u32 	%r2638, [%rd2+4];
	// inline asm
	prmt.b32 %r2636, %r2637, %r2638, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2636;
	ld.local.u32 	%r2641, [%rd2+4];
	ld.local.u32 	%r2642, [%rd2];
	// inline asm
	prmt.b32 %r2640, %r2641, %r2642, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2640;
	ld.local.u32 	%r2645, [%rd2];
	ld.local.u32 	%r2646, [%rd1+12];
	// inline asm
	prmt.b32 %r2644, %r2645, %r2646, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2644;
	ld.local.u32 	%r2649, [%rd1+12];
	ld.local.u32 	%r2650, [%rd1+8];
	// inline asm
	prmt.b32 %r2648, %r2649, %r2650, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2648;
	ld.local.u32 	%r2653, [%rd1+8];
	ld.local.u32 	%r2654, [%rd1+4];
	// inline asm
	prmt.b32 %r2652, %r2653, %r2654, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2652;
	ld.local.u32 	%r2657, [%rd1+4];
	ld.local.u32 	%r2658, [%rd1];
	// inline asm
	prmt.b32 %r2656, %r2657, %r2658, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2656;
	ld.local.u32 	%r2661, [%rd1];
	// inline asm
	prmt.b32 %r2660, %r2661, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2660;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd114, 0;
	st.local.u32 	[%rd1+4], %rd114;
	st.local.u32 	[%rd1], %rd114;
	mov.u32 	%r8443, %r8426;
	mov.u32 	%r8444, %r8426;
	bra.uni 	BB1_83;

BB1_113:
	setp.eq.s32	%p86, %r3, 9;
	@%p86 bra 	BB1_114;
	bra.uni 	BB1_172;

BB1_114:
	ld.local.u32 	%r7191, [%rd6+8];
	ld.local.u32 	%r7192, [%rd6+4];
	// inline asm
	prmt.b32 %r7190, %r7191, %r7192, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7190;
	ld.local.u32 	%r7195, [%rd6+4];
	ld.local.u32 	%r7196, [%rd6];
	// inline asm
	prmt.b32 %r7194, %r7195, %r7196, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7194;
	ld.local.u32 	%r7199, [%rd6];
	ld.local.u32 	%r7200, [%rd5+12];
	// inline asm
	prmt.b32 %r7198, %r7199, %r7200, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7198;
	ld.local.u32 	%r7203, [%rd5+12];
	ld.local.u32 	%r7204, [%rd5+8];
	// inline asm
	prmt.b32 %r7202, %r7203, %r7204, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7202;
	ld.local.u32 	%r7207, [%rd5+8];
	ld.local.u32 	%r7208, [%rd5+4];
	// inline asm
	prmt.b32 %r7206, %r7207, %r7208, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7206;
	ld.local.u32 	%r7211, [%rd5+4];
	ld.local.u32 	%r7212, [%rd5];
	// inline asm
	prmt.b32 %r7210, %r7211, %r7212, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7210;
	ld.local.u32 	%r7215, [%rd5];
	ld.local.u32 	%r7216, [%rd4+12];
	// inline asm
	prmt.b32 %r7214, %r7215, %r7216, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7214;
	ld.local.u32 	%r7219, [%rd4+12];
	ld.local.u32 	%r7220, [%rd4+8];
	// inline asm
	prmt.b32 %r7218, %r7219, %r7220, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7218;
	ld.local.u32 	%r7223, [%rd4+8];
	ld.local.u32 	%r7224, [%rd4+4];
	// inline asm
	prmt.b32 %r7222, %r7223, %r7224, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7222;
	ld.local.u32 	%r7227, [%rd4+4];
	ld.local.u32 	%r7228, [%rd4];
	// inline asm
	prmt.b32 %r7226, %r7227, %r7228, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7226;
	ld.local.u32 	%r7231, [%rd4];
	ld.local.u32 	%r7232, [%rd3+12];
	// inline asm
	prmt.b32 %r7230, %r7231, %r7232, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7230;
	ld.local.u32 	%r7235, [%rd3+12];
	ld.local.u32 	%r7236, [%rd3+8];
	// inline asm
	prmt.b32 %r7234, %r7235, %r7236, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7234;
	ld.local.u32 	%r7239, [%rd3+8];
	ld.local.u32 	%r7240, [%rd3+4];
	// inline asm
	prmt.b32 %r7238, %r7239, %r7240, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7238;
	ld.local.u32 	%r7243, [%rd3+4];
	ld.local.u32 	%r7244, [%rd3];
	// inline asm
	prmt.b32 %r7242, %r7243, %r7244, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7242;
	ld.local.u32 	%r7247, [%rd3];
	ld.local.u32 	%r7248, [%rd2+12];
	// inline asm
	prmt.b32 %r7246, %r7247, %r7248, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7246;
	ld.local.u32 	%r7251, [%rd2+12];
	ld.local.u32 	%r7252, [%rd2+8];
	// inline asm
	prmt.b32 %r7250, %r7251, %r7252, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7250;
	ld.local.u32 	%r7255, [%rd2+8];
	ld.local.u32 	%r7256, [%rd2+4];
	// inline asm
	prmt.b32 %r7254, %r7255, %r7256, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7254;
	ld.local.u32 	%r7259, [%rd2+4];
	ld.local.u32 	%r7260, [%rd2];
	// inline asm
	prmt.b32 %r7258, %r7259, %r7260, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7258;
	ld.local.u32 	%r7263, [%rd2];
	ld.local.u32 	%r7264, [%rd1+12];
	// inline asm
	prmt.b32 %r7262, %r7263, %r7264, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7262;
	ld.local.u32 	%r7267, [%rd1+12];
	ld.local.u32 	%r7268, [%rd1+8];
	// inline asm
	prmt.b32 %r7266, %r7267, %r7268, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7266;
	ld.local.u32 	%r7271, [%rd1+8];
	ld.local.u32 	%r7272, [%rd1+4];
	// inline asm
	prmt.b32 %r7270, %r7271, %r7272, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7270;
	ld.local.u32 	%r7275, [%rd1+4];
	ld.local.u32 	%r7276, [%rd1];
	// inline asm
	prmt.b32 %r7274, %r7275, %r7276, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7274;
	ld.local.u32 	%r7279, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7278, %r7279, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7278;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1140, 0;
	st.local.u32 	[%rd1+4], %rd1140;
	st.local.u32 	[%rd1], %rd1140;
	bra.uni 	BB1_173;

BB1_23:
	setp.eq.s32	%p38, %r3, 9;
	@%p38 bra 	BB1_24;
	bra.uni 	BB1_88;

BB1_24:
	ld.local.u32 	%r3738, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8437, %r8426, %r3738, %r4;
	// inline asm
	ld.local.u32 	%r3741, [%rd8+12];
	ld.local.u32 	%r3742, [%rd8+8];
	// inline asm
	prmt.b32 %r8438, %r3741, %r3742, %r4;
	// inline asm
	ld.local.u32 	%r3745, [%rd8+8];
	ld.local.u32 	%r3746, [%rd8+4];
	// inline asm
	prmt.b32 %r8431, %r3745, %r3746, %r4;
	// inline asm
	ld.local.u32 	%r3749, [%rd8+4];
	ld.local.u32 	%r3750, [%rd8];
	// inline asm
	prmt.b32 %r8432, %r3749, %r3750, %r4;
	// inline asm
	ld.local.u32 	%r3753, [%rd8];
	ld.local.u32 	%r3754, [%rd7+12];
	// inline asm
	prmt.b32 %r8433, %r3753, %r3754, %r4;
	// inline asm
	ld.local.u32 	%r3757, [%rd7+12];
	ld.local.u32 	%r3758, [%rd7+8];
	// inline asm
	prmt.b32 %r8434, %r3757, %r3758, %r4;
	// inline asm
	ld.local.u32 	%r3761, [%rd7+8];
	ld.local.u32 	%r3762, [%rd7+4];
	// inline asm
	prmt.b32 %r8427, %r3761, %r3762, %r4;
	// inline asm
	ld.local.u32 	%r3765, [%rd7+4];
	ld.local.u32 	%r3766, [%rd7];
	// inline asm
	prmt.b32 %r8428, %r3765, %r3766, %r4;
	// inline asm
	ld.local.u32 	%r3769, [%rd7];
	ld.local.u32 	%r3770, [%rd6+12];
	// inline asm
	prmt.b32 %r8429, %r3769, %r3770, %r4;
	// inline asm
	ld.local.u32 	%r3773, [%rd6+12];
	ld.local.u32 	%r3774, [%rd6+8];
	// inline asm
	prmt.b32 %r8430, %r3773, %r3774, %r4;
	// inline asm
	ld.local.u32 	%r3777, [%rd6+8];
	ld.local.u32 	%r3778, [%rd6+4];
	// inline asm
	prmt.b32 %r3776, %r3777, %r3778, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3776;
	ld.local.u32 	%r3781, [%rd6+4];
	ld.local.u32 	%r3782, [%rd6];
	// inline asm
	prmt.b32 %r3780, %r3781, %r3782, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3780;
	ld.local.u32 	%r3785, [%rd6];
	ld.local.u32 	%r3786, [%rd5+12];
	// inline asm
	prmt.b32 %r3784, %r3785, %r3786, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3784;
	ld.local.u32 	%r3789, [%rd5+12];
	ld.local.u32 	%r3790, [%rd5+8];
	// inline asm
	prmt.b32 %r3788, %r3789, %r3790, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3788;
	ld.local.u32 	%r3793, [%rd5+8];
	ld.local.u32 	%r3794, [%rd5+4];
	// inline asm
	prmt.b32 %r3792, %r3793, %r3794, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3792;
	ld.local.u32 	%r3797, [%rd5+4];
	ld.local.u32 	%r3798, [%rd5];
	// inline asm
	prmt.b32 %r3796, %r3797, %r3798, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3796;
	ld.local.u32 	%r3801, [%rd5];
	ld.local.u32 	%r3802, [%rd4+12];
	// inline asm
	prmt.b32 %r3800, %r3801, %r3802, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3800;
	ld.local.u32 	%r3805, [%rd4+12];
	ld.local.u32 	%r3806, [%rd4+8];
	// inline asm
	prmt.b32 %r3804, %r3805, %r3806, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3804;
	ld.local.u32 	%r3809, [%rd4+8];
	ld.local.u32 	%r3810, [%rd4+4];
	// inline asm
	prmt.b32 %r3808, %r3809, %r3810, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3808;
	ld.local.u32 	%r3813, [%rd4+4];
	ld.local.u32 	%r3814, [%rd4];
	// inline asm
	prmt.b32 %r3812, %r3813, %r3814, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3812;
	ld.local.u32 	%r3817, [%rd4];
	ld.local.u32 	%r3818, [%rd3+12];
	// inline asm
	prmt.b32 %r3816, %r3817, %r3818, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3816;
	ld.local.u32 	%r3821, [%rd3+12];
	ld.local.u32 	%r3822, [%rd3+8];
	// inline asm
	prmt.b32 %r3820, %r3821, %r3822, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3820;
	ld.local.u32 	%r3825, [%rd3+8];
	ld.local.u32 	%r3826, [%rd3+4];
	// inline asm
	prmt.b32 %r3824, %r3825, %r3826, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3824;
	ld.local.u32 	%r3829, [%rd3+4];
	ld.local.u32 	%r3830, [%rd3];
	// inline asm
	prmt.b32 %r3828, %r3829, %r3830, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3828;
	ld.local.u32 	%r3833, [%rd3];
	ld.local.u32 	%r3834, [%rd2+12];
	// inline asm
	prmt.b32 %r3832, %r3833, %r3834, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3832;
	ld.local.u32 	%r3837, [%rd2+12];
	ld.local.u32 	%r3838, [%rd2+8];
	// inline asm
	prmt.b32 %r3836, %r3837, %r3838, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3836;
	ld.local.u32 	%r3841, [%rd2+8];
	ld.local.u32 	%r3842, [%rd2+4];
	// inline asm
	prmt.b32 %r3840, %r3841, %r3842, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3840;
	ld.local.u32 	%r3845, [%rd2+4];
	ld.local.u32 	%r3846, [%rd2];
	// inline asm
	prmt.b32 %r3844, %r3845, %r3846, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3844;
	ld.local.u32 	%r3849, [%rd2];
	ld.local.u32 	%r3850, [%rd1+12];
	// inline asm
	prmt.b32 %r3848, %r3849, %r3850, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3848;
	ld.local.u32 	%r3853, [%rd1+12];
	ld.local.u32 	%r3854, [%rd1+8];
	// inline asm
	prmt.b32 %r3852, %r3853, %r3854, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3852;
	ld.local.u32 	%r3857, [%rd1+8];
	ld.local.u32 	%r3858, [%rd1+4];
	// inline asm
	prmt.b32 %r3856, %r3857, %r3858, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3856;
	ld.local.u32 	%r3861, [%rd1+4];
	ld.local.u32 	%r3862, [%rd1];
	// inline asm
	prmt.b32 %r3860, %r3861, %r3862, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3860;
	ld.local.u32 	%r3865, [%rd1];
	// inline asm
	prmt.b32 %r3864, %r3865, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r3864;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd122, 0;
	st.local.u32 	[%rd1+4], %rd122;
	st.local.u32 	[%rd1], %rd122;
	mov.u32 	%r8435, %r8426;
	mov.u32 	%r8436, %r8426;
	bra.uni 	BB1_81;

BB1_144:
	setp.eq.s32	%p63, %r3, 25;
	@%p63 bra 	BB1_145;
	bra.uni 	BB1_172;

BB1_145:
	ld.local.u32 	%r6247, [%rd2+8];
	ld.local.u32 	%r6248, [%rd2+4];
	// inline asm
	prmt.b32 %r6246, %r6247, %r6248, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6246;
	ld.local.u32 	%r6251, [%rd2+4];
	ld.local.u32 	%r6252, [%rd2];
	// inline asm
	prmt.b32 %r6250, %r6251, %r6252, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6250;
	ld.local.u32 	%r6255, [%rd2];
	ld.local.u32 	%r6256, [%rd1+12];
	// inline asm
	prmt.b32 %r6254, %r6255, %r6256, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6254;
	ld.local.u32 	%r6259, [%rd1+12];
	ld.local.u32 	%r6260, [%rd1+8];
	// inline asm
	prmt.b32 %r6258, %r6259, %r6260, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6258;
	ld.local.u32 	%r6263, [%rd1+8];
	ld.local.u32 	%r6264, [%rd1+4];
	// inline asm
	prmt.b32 %r6262, %r6263, %r6264, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6262;
	ld.local.u32 	%r6267, [%rd1+4];
	ld.local.u32 	%r6268, [%rd1];
	// inline asm
	prmt.b32 %r6266, %r6267, %r6268, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6266;
	ld.local.u32 	%r6271, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6270, %r6271, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6270;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1124, 0;
	st.local.u32 	[%rd1+4], %rd1124;
	st.local.u32 	[%rd1], %rd1124;
	bra.uni 	BB1_173;

BB1_54:
	setp.eq.s32	%p15, %r3, 25;
	@%p15 bra 	BB1_55;
	bra.uni 	BB1_88;

BB1_55:
	ld.local.u32 	%r1394, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8453, %r8426, %r1394, %r4;
	// inline asm
	ld.local.u32 	%r1397, [%rd8+12];
	ld.local.u32 	%r1398, [%rd8+8];
	// inline asm
	prmt.b32 %r8454, %r1397, %r1398, %r4;
	// inline asm
	ld.local.u32 	%r1401, [%rd8+8];
	ld.local.u32 	%r1402, [%rd8+4];
	// inline asm
	prmt.b32 %r8447, %r1401, %r1402, %r4;
	// inline asm
	ld.local.u32 	%r1405, [%rd8+4];
	ld.local.u32 	%r1406, [%rd8];
	// inline asm
	prmt.b32 %r8448, %r1405, %r1406, %r4;
	// inline asm
	ld.local.u32 	%r1409, [%rd8];
	ld.local.u32 	%r1410, [%rd7+12];
	// inline asm
	prmt.b32 %r8449, %r1409, %r1410, %r4;
	// inline asm
	ld.local.u32 	%r1413, [%rd7+12];
	ld.local.u32 	%r1414, [%rd7+8];
	// inline asm
	prmt.b32 %r8450, %r1413, %r1414, %r4;
	// inline asm
	ld.local.u32 	%r1417, [%rd7+8];
	ld.local.u32 	%r1418, [%rd7+4];
	// inline asm
	prmt.b32 %r8443, %r1417, %r1418, %r4;
	// inline asm
	ld.local.u32 	%r1421, [%rd7+4];
	ld.local.u32 	%r1422, [%rd7];
	// inline asm
	prmt.b32 %r8444, %r1421, %r1422, %r4;
	// inline asm
	ld.local.u32 	%r1425, [%rd7];
	ld.local.u32 	%r1426, [%rd6+12];
	// inline asm
	prmt.b32 %r8445, %r1425, %r1426, %r4;
	// inline asm
	ld.local.u32 	%r1429, [%rd6+12];
	ld.local.u32 	%r1430, [%rd6+8];
	// inline asm
	prmt.b32 %r8446, %r1429, %r1430, %r4;
	// inline asm
	ld.local.u32 	%r1433, [%rd6+8];
	ld.local.u32 	%r1434, [%rd6+4];
	// inline asm
	prmt.b32 %r8439, %r1433, %r1434, %r4;
	// inline asm
	ld.local.u32 	%r1437, [%rd6+4];
	ld.local.u32 	%r1438, [%rd6];
	// inline asm
	prmt.b32 %r8440, %r1437, %r1438, %r4;
	// inline asm
	ld.local.u32 	%r1441, [%rd6];
	ld.local.u32 	%r1442, [%rd5+12];
	// inline asm
	prmt.b32 %r8441, %r1441, %r1442, %r4;
	// inline asm
	ld.local.u32 	%r1445, [%rd5+12];
	ld.local.u32 	%r1446, [%rd5+8];
	// inline asm
	prmt.b32 %r8442, %r1445, %r1446, %r4;
	// inline asm
	ld.local.u32 	%r1449, [%rd5+8];
	ld.local.u32 	%r1450, [%rd5+4];
	// inline asm
	prmt.b32 %r8435, %r1449, %r1450, %r4;
	// inline asm
	ld.local.u32 	%r1453, [%rd5+4];
	ld.local.u32 	%r1454, [%rd5];
	// inline asm
	prmt.b32 %r8436, %r1453, %r1454, %r4;
	// inline asm
	ld.local.u32 	%r1457, [%rd5];
	ld.local.u32 	%r1458, [%rd4+12];
	// inline asm
	prmt.b32 %r8437, %r1457, %r1458, %r4;
	// inline asm
	ld.local.u32 	%r1461, [%rd4+12];
	ld.local.u32 	%r1462, [%rd4+8];
	// inline asm
	prmt.b32 %r8438, %r1461, %r1462, %r4;
	// inline asm
	ld.local.u32 	%r1465, [%rd4+8];
	ld.local.u32 	%r1466, [%rd4+4];
	// inline asm
	prmt.b32 %r8431, %r1465, %r1466, %r4;
	// inline asm
	ld.local.u32 	%r1469, [%rd4+4];
	ld.local.u32 	%r1470, [%rd4];
	// inline asm
	prmt.b32 %r8432, %r1469, %r1470, %r4;
	// inline asm
	ld.local.u32 	%r1473, [%rd4];
	ld.local.u32 	%r1474, [%rd3+12];
	// inline asm
	prmt.b32 %r8433, %r1473, %r1474, %r4;
	// inline asm
	ld.local.u32 	%r1477, [%rd3+12];
	ld.local.u32 	%r1478, [%rd3+8];
	// inline asm
	prmt.b32 %r8434, %r1477, %r1478, %r4;
	// inline asm
	ld.local.u32 	%r1481, [%rd3+8];
	ld.local.u32 	%r1482, [%rd3+4];
	// inline asm
	prmt.b32 %r8427, %r1481, %r1482, %r4;
	// inline asm
	ld.local.u32 	%r1485, [%rd3+4];
	ld.local.u32 	%r1486, [%rd3];
	// inline asm
	prmt.b32 %r8428, %r1485, %r1486, %r4;
	// inline asm
	ld.local.u32 	%r1489, [%rd3];
	ld.local.u32 	%r1490, [%rd2+12];
	// inline asm
	prmt.b32 %r8429, %r1489, %r1490, %r4;
	// inline asm
	ld.local.u32 	%r1493, [%rd2+12];
	ld.local.u32 	%r1494, [%rd2+8];
	// inline asm
	prmt.b32 %r8430, %r1493, %r1494, %r4;
	// inline asm
	ld.local.u32 	%r1497, [%rd2+8];
	ld.local.u32 	%r1498, [%rd2+4];
	// inline asm
	prmt.b32 %r1496, %r1497, %r1498, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1496;
	ld.local.u32 	%r1501, [%rd2+4];
	ld.local.u32 	%r1502, [%rd2];
	// inline asm
	prmt.b32 %r1500, %r1501, %r1502, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1500;
	ld.local.u32 	%r1505, [%rd2];
	ld.local.u32 	%r1506, [%rd1+12];
	// inline asm
	prmt.b32 %r1504, %r1505, %r1506, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1504;
	ld.local.u32 	%r1509, [%rd1+12];
	ld.local.u32 	%r1510, [%rd1+8];
	// inline asm
	prmt.b32 %r1508, %r1509, %r1510, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1508;
	ld.local.u32 	%r1513, [%rd1+8];
	ld.local.u32 	%r1514, [%rd1+4];
	// inline asm
	prmt.b32 %r1512, %r1513, %r1514, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1512;
	ld.local.u32 	%r1517, [%rd1+4];
	ld.local.u32 	%r1518, [%rd1];
	// inline asm
	prmt.b32 %r1516, %r1517, %r1518, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1516;
	ld.local.u32 	%r1521, [%rd1];
	// inline asm
	prmt.b32 %r1520, %r1521, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1520;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd106, 0;
	st.local.u32 	[%rd1+4], %rd106;
	st.local.u32 	[%rd1], %rd106;
	mov.u32 	%r8451, %r8426;
	mov.u32 	%r8452, %r8426;
	bra.uni 	BB1_85;

BB1_105:
	setp.eq.s32	%p92, %r3, 5;
	@%p92 bra 	BB1_106;
	bra.uni 	BB1_172;

BB1_106:
	ld.local.u32 	%r7587, [%rd7+8];
	ld.local.u32 	%r7588, [%rd7+4];
	// inline asm
	prmt.b32 %r7586, %r7587, %r7588, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7586;
	ld.local.u32 	%r7591, [%rd7+4];
	ld.local.u32 	%r7592, [%rd7];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7590;
	ld.local.u32 	%r7595, [%rd7];
	ld.local.u32 	%r7596, [%rd6+12];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7594;
	ld.local.u32 	%r7599, [%rd6+12];
	ld.local.u32 	%r7600, [%rd6+8];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7598;
	ld.local.u32 	%r7603, [%rd6+8];
	ld.local.u32 	%r7604, [%rd6+4];
	// inline asm
	prmt.b32 %r7602, %r7603, %r7604, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7602;
	ld.local.u32 	%r7607, [%rd6+4];
	ld.local.u32 	%r7608, [%rd6];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7606;
	ld.local.u32 	%r7611, [%rd6];
	ld.local.u32 	%r7612, [%rd5+12];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7610;
	ld.local.u32 	%r7615, [%rd5+12];
	ld.local.u32 	%r7616, [%rd5+8];
	// inline asm
	prmt.b32 %r7614, %r7615, %r7616, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7614;
	ld.local.u32 	%r7619, [%rd5+8];
	ld.local.u32 	%r7620, [%rd5+4];
	// inline asm
	prmt.b32 %r7618, %r7619, %r7620, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7618;
	ld.local.u32 	%r7623, [%rd5+4];
	ld.local.u32 	%r7624, [%rd5];
	// inline asm
	prmt.b32 %r7622, %r7623, %r7624, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7622;
	ld.local.u32 	%r7627, [%rd5];
	ld.local.u32 	%r7628, [%rd4+12];
	// inline asm
	prmt.b32 %r7626, %r7627, %r7628, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7626;
	ld.local.u32 	%r7631, [%rd4+12];
	ld.local.u32 	%r7632, [%rd4+8];
	// inline asm
	prmt.b32 %r7630, %r7631, %r7632, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7630;
	ld.local.u32 	%r7635, [%rd4+8];
	ld.local.u32 	%r7636, [%rd4+4];
	// inline asm
	prmt.b32 %r7634, %r7635, %r7636, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7634;
	ld.local.u32 	%r7639, [%rd4+4];
	ld.local.u32 	%r7640, [%rd4];
	// inline asm
	prmt.b32 %r7638, %r7639, %r7640, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7638;
	ld.local.u32 	%r7643, [%rd4];
	ld.local.u32 	%r7644, [%rd3+12];
	// inline asm
	prmt.b32 %r7642, %r7643, %r7644, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7642;
	ld.local.u32 	%r7647, [%rd3+12];
	ld.local.u32 	%r7648, [%rd3+8];
	// inline asm
	prmt.b32 %r7646, %r7647, %r7648, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7646;
	ld.local.u32 	%r7651, [%rd3+8];
	ld.local.u32 	%r7652, [%rd3+4];
	// inline asm
	prmt.b32 %r7650, %r7651, %r7652, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7650;
	ld.local.u32 	%r7655, [%rd3+4];
	ld.local.u32 	%r7656, [%rd3];
	// inline asm
	prmt.b32 %r7654, %r7655, %r7656, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7654;
	ld.local.u32 	%r7659, [%rd3];
	ld.local.u32 	%r7660, [%rd2+12];
	// inline asm
	prmt.b32 %r7658, %r7659, %r7660, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7658;
	ld.local.u32 	%r7663, [%rd2+12];
	ld.local.u32 	%r7664, [%rd2+8];
	// inline asm
	prmt.b32 %r7662, %r7663, %r7664, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7662;
	ld.local.u32 	%r7667, [%rd2+8];
	ld.local.u32 	%r7668, [%rd2+4];
	// inline asm
	prmt.b32 %r7666, %r7667, %r7668, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7666;
	ld.local.u32 	%r7671, [%rd2+4];
	ld.local.u32 	%r7672, [%rd2];
	// inline asm
	prmt.b32 %r7670, %r7671, %r7672, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7670;
	ld.local.u32 	%r7675, [%rd2];
	ld.local.u32 	%r7676, [%rd1+12];
	// inline asm
	prmt.b32 %r7674, %r7675, %r7676, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7674;
	ld.local.u32 	%r7679, [%rd1+12];
	ld.local.u32 	%r7680, [%rd1+8];
	// inline asm
	prmt.b32 %r7678, %r7679, %r7680, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7678;
	ld.local.u32 	%r7683, [%rd1+8];
	ld.local.u32 	%r7684, [%rd1+4];
	// inline asm
	prmt.b32 %r7682, %r7683, %r7684, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7682;
	ld.local.u32 	%r7687, [%rd1+4];
	ld.local.u32 	%r7688, [%rd1];
	// inline asm
	prmt.b32 %r7686, %r7687, %r7688, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7686;
	ld.local.u32 	%r7691, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7690, %r7691, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7690;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1144, 0;
	st.local.u32 	[%rd1+4], %rd1144;
	st.local.u32 	[%rd1], %rd1144;
	bra.uni 	BB1_173;

BB1_15:
	setp.eq.s32	%p44, %r3, 5;
	@%p44 bra 	BB1_16;
	bra.uni 	BB1_88;

BB1_16:
	ld.local.u32 	%r4364, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8433, %r8426, %r4364, %r4;
	// inline asm
	ld.local.u32 	%r4367, [%rd8+12];
	ld.local.u32 	%r4368, [%rd8+8];
	// inline asm
	prmt.b32 %r8434, %r4367, %r4368, %r4;
	// inline asm
	ld.local.u32 	%r4371, [%rd8+8];
	ld.local.u32 	%r4372, [%rd8+4];
	// inline asm
	prmt.b32 %r8427, %r4371, %r4372, %r4;
	// inline asm
	ld.local.u32 	%r4375, [%rd8+4];
	ld.local.u32 	%r4376, [%rd8];
	// inline asm
	prmt.b32 %r8428, %r4375, %r4376, %r4;
	// inline asm
	ld.local.u32 	%r4379, [%rd8];
	ld.local.u32 	%r4380, [%rd7+12];
	// inline asm
	prmt.b32 %r8429, %r4379, %r4380, %r4;
	// inline asm
	ld.local.u32 	%r4383, [%rd7+12];
	ld.local.u32 	%r4384, [%rd7+8];
	// inline asm
	prmt.b32 %r8430, %r4383, %r4384, %r4;
	// inline asm
	ld.local.u32 	%r4387, [%rd7+8];
	ld.local.u32 	%r4388, [%rd7+4];
	// inline asm
	prmt.b32 %r4386, %r4387, %r4388, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4386;
	ld.local.u32 	%r4391, [%rd7+4];
	ld.local.u32 	%r4392, [%rd7];
	// inline asm
	prmt.b32 %r4390, %r4391, %r4392, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4390;
	ld.local.u32 	%r4395, [%rd7];
	ld.local.u32 	%r4396, [%rd6+12];
	// inline asm
	prmt.b32 %r4394, %r4395, %r4396, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4394;
	ld.local.u32 	%r4399, [%rd6+12];
	ld.local.u32 	%r4400, [%rd6+8];
	// inline asm
	prmt.b32 %r4398, %r4399, %r4400, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4398;
	ld.local.u32 	%r4403, [%rd6+8];
	ld.local.u32 	%r4404, [%rd6+4];
	// inline asm
	prmt.b32 %r4402, %r4403, %r4404, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4402;
	ld.local.u32 	%r4407, [%rd6+4];
	ld.local.u32 	%r4408, [%rd6];
	// inline asm
	prmt.b32 %r4406, %r4407, %r4408, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4406;
	ld.local.u32 	%r4411, [%rd6];
	ld.local.u32 	%r4412, [%rd5+12];
	// inline asm
	prmt.b32 %r4410, %r4411, %r4412, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4410;
	ld.local.u32 	%r4415, [%rd5+12];
	ld.local.u32 	%r4416, [%rd5+8];
	// inline asm
	prmt.b32 %r4414, %r4415, %r4416, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4414;
	ld.local.u32 	%r4419, [%rd5+8];
	ld.local.u32 	%r4420, [%rd5+4];
	// inline asm
	prmt.b32 %r4418, %r4419, %r4420, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4418;
	ld.local.u32 	%r4423, [%rd5+4];
	ld.local.u32 	%r4424, [%rd5];
	// inline asm
	prmt.b32 %r4422, %r4423, %r4424, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4422;
	ld.local.u32 	%r4427, [%rd5];
	ld.local.u32 	%r4428, [%rd4+12];
	// inline asm
	prmt.b32 %r4426, %r4427, %r4428, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4426;
	ld.local.u32 	%r4431, [%rd4+12];
	ld.local.u32 	%r4432, [%rd4+8];
	// inline asm
	prmt.b32 %r4430, %r4431, %r4432, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4430;
	ld.local.u32 	%r4435, [%rd4+8];
	ld.local.u32 	%r4436, [%rd4+4];
	// inline asm
	prmt.b32 %r4434, %r4435, %r4436, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4434;
	ld.local.u32 	%r4439, [%rd4+4];
	ld.local.u32 	%r4440, [%rd4];
	// inline asm
	prmt.b32 %r4438, %r4439, %r4440, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4438;
	ld.local.u32 	%r4443, [%rd4];
	ld.local.u32 	%r4444, [%rd3+12];
	// inline asm
	prmt.b32 %r4442, %r4443, %r4444, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4442;
	ld.local.u32 	%r4447, [%rd3+12];
	ld.local.u32 	%r4448, [%rd3+8];
	// inline asm
	prmt.b32 %r4446, %r4447, %r4448, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4446;
	ld.local.u32 	%r4451, [%rd3+8];
	ld.local.u32 	%r4452, [%rd3+4];
	// inline asm
	prmt.b32 %r4450, %r4451, %r4452, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4450;
	ld.local.u32 	%r4455, [%rd3+4];
	ld.local.u32 	%r4456, [%rd3];
	// inline asm
	prmt.b32 %r4454, %r4455, %r4456, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4454;
	ld.local.u32 	%r4459, [%rd3];
	ld.local.u32 	%r4460, [%rd2+12];
	// inline asm
	prmt.b32 %r4458, %r4459, %r4460, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4458;
	ld.local.u32 	%r4463, [%rd2+12];
	ld.local.u32 	%r4464, [%rd2+8];
	// inline asm
	prmt.b32 %r4462, %r4463, %r4464, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4462;
	ld.local.u32 	%r4467, [%rd2+8];
	ld.local.u32 	%r4468, [%rd2+4];
	// inline asm
	prmt.b32 %r4466, %r4467, %r4468, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4466;
	ld.local.u32 	%r4471, [%rd2+4];
	ld.local.u32 	%r4472, [%rd2];
	// inline asm
	prmt.b32 %r4470, %r4471, %r4472, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4470;
	ld.local.u32 	%r4475, [%rd2];
	ld.local.u32 	%r4476, [%rd1+12];
	// inline asm
	prmt.b32 %r4474, %r4475, %r4476, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4474;
	ld.local.u32 	%r4479, [%rd1+12];
	ld.local.u32 	%r4480, [%rd1+8];
	// inline asm
	prmt.b32 %r4478, %r4479, %r4480, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4478;
	ld.local.u32 	%r4483, [%rd1+8];
	ld.local.u32 	%r4484, [%rd1+4];
	// inline asm
	prmt.b32 %r4482, %r4483, %r4484, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4482;
	ld.local.u32 	%r4487, [%rd1+4];
	ld.local.u32 	%r4488, [%rd1];
	// inline asm
	prmt.b32 %r4486, %r4487, %r4488, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4486;
	ld.local.u32 	%r4491, [%rd1];
	// inline asm
	prmt.b32 %r4490, %r4491, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4490;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd126, 0;
	st.local.u32 	[%rd1+4], %rd126;
	st.local.u32 	[%rd1], %rd126;
	mov.u32 	%r8431, %r8426;
	mov.u32 	%r8432, %r8426;
	bra.uni 	BB1_80;

BB1_136:
	setp.eq.s32	%p69, %r3, 21;
	@%p69 bra 	BB1_137;
	bra.uni 	BB1_172;

BB1_137:
	ld.local.u32 	%r6387, [%rd3+8];
	ld.local.u32 	%r6388, [%rd3+4];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6386;
	ld.local.u32 	%r6391, [%rd3+4];
	ld.local.u32 	%r6392, [%rd3];
	// inline asm
	prmt.b32 %r6390, %r6391, %r6392, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6390;
	ld.local.u32 	%r6395, [%rd3];
	ld.local.u32 	%r6396, [%rd2+12];
	// inline asm
	prmt.b32 %r6394, %r6395, %r6396, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6394;
	ld.local.u32 	%r6399, [%rd2+12];
	ld.local.u32 	%r6400, [%rd2+8];
	// inline asm
	prmt.b32 %r6398, %r6399, %r6400, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6398;
	ld.local.u32 	%r6403, [%rd2+8];
	ld.local.u32 	%r6404, [%rd2+4];
	// inline asm
	prmt.b32 %r6402, %r6403, %r6404, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6402;
	ld.local.u32 	%r6407, [%rd2+4];
	ld.local.u32 	%r6408, [%rd2];
	// inline asm
	prmt.b32 %r6406, %r6407, %r6408, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6406;
	ld.local.u32 	%r6411, [%rd2];
	ld.local.u32 	%r6412, [%rd1+12];
	// inline asm
	prmt.b32 %r6410, %r6411, %r6412, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6410;
	ld.local.u32 	%r6415, [%rd1+12];
	ld.local.u32 	%r6416, [%rd1+8];
	// inline asm
	prmt.b32 %r6414, %r6415, %r6416, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6414;
	ld.local.u32 	%r6419, [%rd1+8];
	ld.local.u32 	%r6420, [%rd1+4];
	// inline asm
	prmt.b32 %r6418, %r6419, %r6420, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6418;
	ld.local.u32 	%r6423, [%rd1+4];
	ld.local.u32 	%r6424, [%rd1];
	// inline asm
	prmt.b32 %r6422, %r6423, %r6424, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6422;
	ld.local.u32 	%r6427, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6426, %r6427, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6426;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1128, 0;
	st.local.u32 	[%rd1+4], %rd1128;
	st.local.u32 	[%rd1], %rd1128;
	bra.uni 	BB1_173;

BB1_46:
	setp.eq.s32	%p21, %r3, 21;
	@%p21 bra 	BB1_47;
	bra.uni 	BB1_88;

BB1_47:
	ld.local.u32 	%r1956, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8449, %r8426, %r1956, %r4;
	// inline asm
	ld.local.u32 	%r1959, [%rd8+12];
	ld.local.u32 	%r1960, [%rd8+8];
	// inline asm
	prmt.b32 %r8450, %r1959, %r1960, %r4;
	// inline asm
	ld.local.u32 	%r1963, [%rd8+8];
	ld.local.u32 	%r1964, [%rd8+4];
	// inline asm
	prmt.b32 %r8443, %r1963, %r1964, %r4;
	// inline asm
	ld.local.u32 	%r1967, [%rd8+4];
	ld.local.u32 	%r1968, [%rd8];
	// inline asm
	prmt.b32 %r8444, %r1967, %r1968, %r4;
	// inline asm
	ld.local.u32 	%r1971, [%rd8];
	ld.local.u32 	%r1972, [%rd7+12];
	// inline asm
	prmt.b32 %r8445, %r1971, %r1972, %r4;
	// inline asm
	ld.local.u32 	%r1975, [%rd7+12];
	ld.local.u32 	%r1976, [%rd7+8];
	// inline asm
	prmt.b32 %r8446, %r1975, %r1976, %r4;
	// inline asm
	ld.local.u32 	%r1979, [%rd7+8];
	ld.local.u32 	%r1980, [%rd7+4];
	// inline asm
	prmt.b32 %r8439, %r1979, %r1980, %r4;
	// inline asm
	ld.local.u32 	%r1983, [%rd7+4];
	ld.local.u32 	%r1984, [%rd7];
	// inline asm
	prmt.b32 %r8440, %r1983, %r1984, %r4;
	// inline asm
	ld.local.u32 	%r1987, [%rd7];
	ld.local.u32 	%r1988, [%rd6+12];
	// inline asm
	prmt.b32 %r8441, %r1987, %r1988, %r4;
	// inline asm
	ld.local.u32 	%r1991, [%rd6+12];
	ld.local.u32 	%r1992, [%rd6+8];
	// inline asm
	prmt.b32 %r8442, %r1991, %r1992, %r4;
	// inline asm
	ld.local.u32 	%r1995, [%rd6+8];
	ld.local.u32 	%r1996, [%rd6+4];
	// inline asm
	prmt.b32 %r8435, %r1995, %r1996, %r4;
	// inline asm
	ld.local.u32 	%r1999, [%rd6+4];
	ld.local.u32 	%r2000, [%rd6];
	// inline asm
	prmt.b32 %r8436, %r1999, %r2000, %r4;
	// inline asm
	ld.local.u32 	%r2003, [%rd6];
	ld.local.u32 	%r2004, [%rd5+12];
	// inline asm
	prmt.b32 %r8437, %r2003, %r2004, %r4;
	// inline asm
	ld.local.u32 	%r2007, [%rd5+12];
	ld.local.u32 	%r2008, [%rd5+8];
	// inline asm
	prmt.b32 %r8438, %r2007, %r2008, %r4;
	// inline asm
	ld.local.u32 	%r2011, [%rd5+8];
	ld.local.u32 	%r2012, [%rd5+4];
	// inline asm
	prmt.b32 %r8431, %r2011, %r2012, %r4;
	// inline asm
	ld.local.u32 	%r2015, [%rd5+4];
	ld.local.u32 	%r2016, [%rd5];
	// inline asm
	prmt.b32 %r8432, %r2015, %r2016, %r4;
	// inline asm
	ld.local.u32 	%r2019, [%rd5];
	ld.local.u32 	%r2020, [%rd4+12];
	// inline asm
	prmt.b32 %r8433, %r2019, %r2020, %r4;
	// inline asm
	ld.local.u32 	%r2023, [%rd4+12];
	ld.local.u32 	%r2024, [%rd4+8];
	// inline asm
	prmt.b32 %r8434, %r2023, %r2024, %r4;
	// inline asm
	ld.local.u32 	%r2027, [%rd4+8];
	ld.local.u32 	%r2028, [%rd4+4];
	// inline asm
	prmt.b32 %r8427, %r2027, %r2028, %r4;
	// inline asm
	ld.local.u32 	%r2031, [%rd4+4];
	ld.local.u32 	%r2032, [%rd4];
	// inline asm
	prmt.b32 %r8428, %r2031, %r2032, %r4;
	// inline asm
	ld.local.u32 	%r2035, [%rd4];
	ld.local.u32 	%r2036, [%rd3+12];
	// inline asm
	prmt.b32 %r8429, %r2035, %r2036, %r4;
	// inline asm
	ld.local.u32 	%r2039, [%rd3+12];
	ld.local.u32 	%r2040, [%rd3+8];
	// inline asm
	prmt.b32 %r8430, %r2039, %r2040, %r4;
	// inline asm
	ld.local.u32 	%r2043, [%rd3+8];
	ld.local.u32 	%r2044, [%rd3+4];
	// inline asm
	prmt.b32 %r2042, %r2043, %r2044, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2042;
	ld.local.u32 	%r2047, [%rd3+4];
	ld.local.u32 	%r2048, [%rd3];
	// inline asm
	prmt.b32 %r2046, %r2047, %r2048, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2046;
	ld.local.u32 	%r2051, [%rd3];
	ld.local.u32 	%r2052, [%rd2+12];
	// inline asm
	prmt.b32 %r2050, %r2051, %r2052, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2050;
	ld.local.u32 	%r2055, [%rd2+12];
	ld.local.u32 	%r2056, [%rd2+8];
	// inline asm
	prmt.b32 %r2054, %r2055, %r2056, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2054;
	ld.local.u32 	%r2059, [%rd2+8];
	ld.local.u32 	%r2060, [%rd2+4];
	// inline asm
	prmt.b32 %r2058, %r2059, %r2060, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2058;
	ld.local.u32 	%r2063, [%rd2+4];
	ld.local.u32 	%r2064, [%rd2];
	// inline asm
	prmt.b32 %r2062, %r2063, %r2064, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2062;
	ld.local.u32 	%r2067, [%rd2];
	ld.local.u32 	%r2068, [%rd1+12];
	// inline asm
	prmt.b32 %r2066, %r2067, %r2068, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2066;
	ld.local.u32 	%r2071, [%rd1+12];
	ld.local.u32 	%r2072, [%rd1+8];
	// inline asm
	prmt.b32 %r2070, %r2071, %r2072, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2070;
	ld.local.u32 	%r2075, [%rd1+8];
	ld.local.u32 	%r2076, [%rd1+4];
	// inline asm
	prmt.b32 %r2074, %r2075, %r2076, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2074;
	ld.local.u32 	%r2079, [%rd1+4];
	ld.local.u32 	%r2080, [%rd1];
	// inline asm
	prmt.b32 %r2078, %r2079, %r2080, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2078;
	ld.local.u32 	%r2083, [%rd1];
	// inline asm
	prmt.b32 %r2082, %r2083, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2082;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd110, 0;
	st.local.u32 	[%rd1+4], %rd110;
	st.local.u32 	[%rd1], %rd110;
	mov.u32 	%r8447, %r8426;
	mov.u32 	%r8448, %r8426;
	bra.uni 	BB1_84;

BB1_120:
	setp.eq.s32	%p81, %r3, 13;
	@%p81 bra 	BB1_121;
	bra.uni 	BB1_172;

BB1_121:
	ld.local.u32 	%r6859, [%rd5+8];
	ld.local.u32 	%r6860, [%rd5+4];
	// inline asm
	prmt.b32 %r6858, %r6859, %r6860, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6858;
	ld.local.u32 	%r6863, [%rd5+4];
	ld.local.u32 	%r6864, [%rd5];
	// inline asm
	prmt.b32 %r6862, %r6863, %r6864, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6862;
	ld.local.u32 	%r6867, [%rd5];
	ld.local.u32 	%r6868, [%rd4+12];
	// inline asm
	prmt.b32 %r6866, %r6867, %r6868, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6866;
	ld.local.u32 	%r6871, [%rd4+12];
	ld.local.u32 	%r6872, [%rd4+8];
	// inline asm
	prmt.b32 %r6870, %r6871, %r6872, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6870;
	ld.local.u32 	%r6875, [%rd4+8];
	ld.local.u32 	%r6876, [%rd4+4];
	// inline asm
	prmt.b32 %r6874, %r6875, %r6876, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6874;
	ld.local.u32 	%r6879, [%rd4+4];
	ld.local.u32 	%r6880, [%rd4];
	// inline asm
	prmt.b32 %r6878, %r6879, %r6880, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6878;
	ld.local.u32 	%r6883, [%rd4];
	ld.local.u32 	%r6884, [%rd3+12];
	// inline asm
	prmt.b32 %r6882, %r6883, %r6884, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6882;
	ld.local.u32 	%r6887, [%rd3+12];
	ld.local.u32 	%r6888, [%rd3+8];
	// inline asm
	prmt.b32 %r6886, %r6887, %r6888, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6886;
	ld.local.u32 	%r6891, [%rd3+8];
	ld.local.u32 	%r6892, [%rd3+4];
	// inline asm
	prmt.b32 %r6890, %r6891, %r6892, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6890;
	ld.local.u32 	%r6895, [%rd3+4];
	ld.local.u32 	%r6896, [%rd3];
	// inline asm
	prmt.b32 %r6894, %r6895, %r6896, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6894;
	ld.local.u32 	%r6899, [%rd3];
	ld.local.u32 	%r6900, [%rd2+12];
	// inline asm
	prmt.b32 %r6898, %r6899, %r6900, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6898;
	ld.local.u32 	%r6903, [%rd2+12];
	ld.local.u32 	%r6904, [%rd2+8];
	// inline asm
	prmt.b32 %r6902, %r6903, %r6904, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6902;
	ld.local.u32 	%r6907, [%rd2+8];
	ld.local.u32 	%r6908, [%rd2+4];
	// inline asm
	prmt.b32 %r6906, %r6907, %r6908, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6906;
	ld.local.u32 	%r6911, [%rd2+4];
	ld.local.u32 	%r6912, [%rd2];
	// inline asm
	prmt.b32 %r6910, %r6911, %r6912, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6910;
	ld.local.u32 	%r6915, [%rd2];
	ld.local.u32 	%r6916, [%rd1+12];
	// inline asm
	prmt.b32 %r6914, %r6915, %r6916, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6914;
	ld.local.u32 	%r6919, [%rd1+12];
	ld.local.u32 	%r6920, [%rd1+8];
	// inline asm
	prmt.b32 %r6918, %r6919, %r6920, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6918;
	ld.local.u32 	%r6923, [%rd1+8];
	ld.local.u32 	%r6924, [%rd1+4];
	// inline asm
	prmt.b32 %r6922, %r6923, %r6924, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6922;
	ld.local.u32 	%r6927, [%rd1+4];
	ld.local.u32 	%r6928, [%rd1];
	// inline asm
	prmt.b32 %r6926, %r6927, %r6928, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6926;
	ld.local.u32 	%r6931, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6930, %r6931, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r6930;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1136, 0;
	st.local.u32 	[%rd1+4], %rd1136;
	st.local.u32 	[%rd1], %rd1136;
	bra.uni 	BB1_173;

BB1_30:
	setp.eq.s32	%p33, %r3, 13;
	@%p33 bra 	BB1_31;
	bra.uni 	BB1_88;

BB1_31:
	ld.local.u32 	%r3128, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8441, %r8426, %r3128, %r4;
	// inline asm
	ld.local.u32 	%r3131, [%rd8+12];
	ld.local.u32 	%r3132, [%rd8+8];
	// inline asm
	prmt.b32 %r8442, %r3131, %r3132, %r4;
	// inline asm
	ld.local.u32 	%r3135, [%rd8+8];
	ld.local.u32 	%r3136, [%rd8+4];
	// inline asm
	prmt.b32 %r8435, %r3135, %r3136, %r4;
	// inline asm
	ld.local.u32 	%r3139, [%rd8+4];
	ld.local.u32 	%r3140, [%rd8];
	// inline asm
	prmt.b32 %r8436, %r3139, %r3140, %r4;
	// inline asm
	ld.local.u32 	%r3143, [%rd8];
	ld.local.u32 	%r3144, [%rd7+12];
	// inline asm
	prmt.b32 %r8437, %r3143, %r3144, %r4;
	// inline asm
	ld.local.u32 	%r3147, [%rd7+12];
	ld.local.u32 	%r3148, [%rd7+8];
	// inline asm
	prmt.b32 %r8438, %r3147, %r3148, %r4;
	// inline asm
	ld.local.u32 	%r3151, [%rd7+8];
	ld.local.u32 	%r3152, [%rd7+4];
	// inline asm
	prmt.b32 %r8431, %r3151, %r3152, %r4;
	// inline asm
	ld.local.u32 	%r3155, [%rd7+4];
	ld.local.u32 	%r3156, [%rd7];
	// inline asm
	prmt.b32 %r8432, %r3155, %r3156, %r4;
	// inline asm
	ld.local.u32 	%r3159, [%rd7];
	ld.local.u32 	%r3160, [%rd6+12];
	// inline asm
	prmt.b32 %r8433, %r3159, %r3160, %r4;
	// inline asm
	ld.local.u32 	%r3163, [%rd6+12];
	ld.local.u32 	%r3164, [%rd6+8];
	// inline asm
	prmt.b32 %r8434, %r3163, %r3164, %r4;
	// inline asm
	ld.local.u32 	%r3167, [%rd6+8];
	ld.local.u32 	%r3168, [%rd6+4];
	// inline asm
	prmt.b32 %r8427, %r3167, %r3168, %r4;
	// inline asm
	ld.local.u32 	%r3171, [%rd6+4];
	ld.local.u32 	%r3172, [%rd6];
	// inline asm
	prmt.b32 %r8428, %r3171, %r3172, %r4;
	// inline asm
	ld.local.u32 	%r3175, [%rd6];
	ld.local.u32 	%r3176, [%rd5+12];
	// inline asm
	prmt.b32 %r8429, %r3175, %r3176, %r4;
	// inline asm
	ld.local.u32 	%r3179, [%rd5+12];
	ld.local.u32 	%r3180, [%rd5+8];
	// inline asm
	prmt.b32 %r8430, %r3179, %r3180, %r4;
	// inline asm
	ld.local.u32 	%r3183, [%rd5+8];
	ld.local.u32 	%r3184, [%rd5+4];
	// inline asm
	prmt.b32 %r3182, %r3183, %r3184, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3182;
	ld.local.u32 	%r3187, [%rd5+4];
	ld.local.u32 	%r3188, [%rd5];
	// inline asm
	prmt.b32 %r3186, %r3187, %r3188, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3186;
	ld.local.u32 	%r3191, [%rd5];
	ld.local.u32 	%r3192, [%rd4+12];
	// inline asm
	prmt.b32 %r3190, %r3191, %r3192, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3190;
	ld.local.u32 	%r3195, [%rd4+12];
	ld.local.u32 	%r3196, [%rd4+8];
	// inline asm
	prmt.b32 %r3194, %r3195, %r3196, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3194;
	ld.local.u32 	%r3199, [%rd4+8];
	ld.local.u32 	%r3200, [%rd4+4];
	// inline asm
	prmt.b32 %r3198, %r3199, %r3200, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3198;
	ld.local.u32 	%r3203, [%rd4+4];
	ld.local.u32 	%r3204, [%rd4];
	// inline asm
	prmt.b32 %r3202, %r3203, %r3204, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3202;
	ld.local.u32 	%r3207, [%rd4];
	ld.local.u32 	%r3208, [%rd3+12];
	// inline asm
	prmt.b32 %r3206, %r3207, %r3208, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3206;
	ld.local.u32 	%r3211, [%rd3+12];
	ld.local.u32 	%r3212, [%rd3+8];
	// inline asm
	prmt.b32 %r3210, %r3211, %r3212, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3210;
	ld.local.u32 	%r3215, [%rd3+8];
	ld.local.u32 	%r3216, [%rd3+4];
	// inline asm
	prmt.b32 %r3214, %r3215, %r3216, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3214;
	ld.local.u32 	%r3219, [%rd3+4];
	ld.local.u32 	%r3220, [%rd3];
	// inline asm
	prmt.b32 %r3218, %r3219, %r3220, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3218;
	ld.local.u32 	%r3223, [%rd3];
	ld.local.u32 	%r3224, [%rd2+12];
	// inline asm
	prmt.b32 %r3222, %r3223, %r3224, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3222;
	ld.local.u32 	%r3227, [%rd2+12];
	ld.local.u32 	%r3228, [%rd2+8];
	// inline asm
	prmt.b32 %r3226, %r3227, %r3228, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3226;
	ld.local.u32 	%r3231, [%rd2+8];
	ld.local.u32 	%r3232, [%rd2+4];
	// inline asm
	prmt.b32 %r3230, %r3231, %r3232, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3230;
	ld.local.u32 	%r3235, [%rd2+4];
	ld.local.u32 	%r3236, [%rd2];
	// inline asm
	prmt.b32 %r3234, %r3235, %r3236, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3234;
	ld.local.u32 	%r3239, [%rd2];
	ld.local.u32 	%r3240, [%rd1+12];
	// inline asm
	prmt.b32 %r3238, %r3239, %r3240, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3238;
	ld.local.u32 	%r3243, [%rd1+12];
	ld.local.u32 	%r3244, [%rd1+8];
	// inline asm
	prmt.b32 %r3242, %r3243, %r3244, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3242;
	ld.local.u32 	%r3247, [%rd1+8];
	ld.local.u32 	%r3248, [%rd1+4];
	// inline asm
	prmt.b32 %r3246, %r3247, %r3248, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3246;
	ld.local.u32 	%r3251, [%rd1+4];
	ld.local.u32 	%r3252, [%rd1];
	// inline asm
	prmt.b32 %r3250, %r3251, %r3252, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3250;
	ld.local.u32 	%r3255, [%rd1];
	// inline asm
	prmt.b32 %r3254, %r3255, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3254;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd118, 0;
	st.local.u32 	[%rd1+4], %rd118;
	st.local.u32 	[%rd1], %rd118;
	mov.u32 	%r8439, %r8426;
	mov.u32 	%r8440, %r8426;
	bra.uni 	BB1_82;

BB1_151:
	setp.eq.s32	%p58, %r3, 29;
	@%p58 bra 	BB1_152;
	bra.uni 	BB1_172;

BB1_152:
	ld.local.u32 	%r6171, [%rd1+8];
	ld.local.u32 	%r6172, [%rd1+4];
	// inline asm
	prmt.b32 %r6170, %r6171, %r6172, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6170;
	ld.local.u32 	%r6175, [%rd1+4];
	ld.local.u32 	%r6176, [%rd1];
	// inline asm
	prmt.b32 %r6174, %r6175, %r6176, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6174;
	ld.local.u32 	%r6179, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6178, %r6179, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6178;
	st.local.u32 	[%rd8], %r8460;
	st.local.u32 	[%rd7+12], %r8460;
	st.local.u32 	[%rd7+8], %r8460;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1120, 0;
	st.local.u32 	[%rd1+4], %rd1120;
	st.local.u32 	[%rd1], %rd1120;
	bra.uni 	BB1_173;

BB1_61:
	setp.eq.s32	%p10, %r3, 29;
	@%p10 bra 	BB1_62;
	bra.uni 	BB1_88;

BB1_62:
	ld.local.u32 	%r848, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8457, %r8426, %r848, %r4;
	// inline asm
	ld.local.u32 	%r851, [%rd8+12];
	ld.local.u32 	%r852, [%rd8+8];
	// inline asm
	prmt.b32 %r8458, %r851, %r852, %r4;
	// inline asm
	ld.local.u32 	%r855, [%rd8+8];
	ld.local.u32 	%r856, [%rd8+4];
	// inline asm
	prmt.b32 %r8451, %r855, %r856, %r4;
	// inline asm
	ld.local.u32 	%r859, [%rd8+4];
	ld.local.u32 	%r860, [%rd8];
	// inline asm
	prmt.b32 %r8452, %r859, %r860, %r4;
	// inline asm
	ld.local.u32 	%r863, [%rd8];
	ld.local.u32 	%r864, [%rd7+12];
	// inline asm
	prmt.b32 %r8453, %r863, %r864, %r4;
	// inline asm
	ld.local.u32 	%r867, [%rd7+12];
	ld.local.u32 	%r868, [%rd7+8];
	// inline asm
	prmt.b32 %r8454, %r867, %r868, %r4;
	// inline asm
	ld.local.u32 	%r871, [%rd7+8];
	ld.local.u32 	%r872, [%rd7+4];
	// inline asm
	prmt.b32 %r8447, %r871, %r872, %r4;
	// inline asm
	ld.local.u32 	%r875, [%rd7+4];
	ld.local.u32 	%r876, [%rd7];
	// inline asm
	prmt.b32 %r8448, %r875, %r876, %r4;
	// inline asm
	ld.local.u32 	%r879, [%rd7];
	ld.local.u32 	%r880, [%rd6+12];
	// inline asm
	prmt.b32 %r8449, %r879, %r880, %r4;
	// inline asm
	ld.local.u32 	%r883, [%rd6+12];
	ld.local.u32 	%r884, [%rd6+8];
	// inline asm
	prmt.b32 %r8450, %r883, %r884, %r4;
	// inline asm
	ld.local.u32 	%r887, [%rd6+8];
	ld.local.u32 	%r888, [%rd6+4];
	// inline asm
	prmt.b32 %r8443, %r887, %r888, %r4;
	// inline asm
	ld.local.u32 	%r891, [%rd6+4];
	ld.local.u32 	%r892, [%rd6];
	// inline asm
	prmt.b32 %r8444, %r891, %r892, %r4;
	// inline asm
	ld.local.u32 	%r895, [%rd6];
	ld.local.u32 	%r896, [%rd5+12];
	// inline asm
	prmt.b32 %r8445, %r895, %r896, %r4;
	// inline asm
	ld.local.u32 	%r899, [%rd5+12];
	ld.local.u32 	%r900, [%rd5+8];
	// inline asm
	prmt.b32 %r8446, %r899, %r900, %r4;
	// inline asm
	ld.local.u32 	%r903, [%rd5+8];
	ld.local.u32 	%r904, [%rd5+4];
	// inline asm
	prmt.b32 %r8439, %r903, %r904, %r4;
	// inline asm
	ld.local.u32 	%r907, [%rd5+4];
	ld.local.u32 	%r908, [%rd5];
	// inline asm
	prmt.b32 %r8440, %r907, %r908, %r4;
	// inline asm
	ld.local.u32 	%r911, [%rd5];
	ld.local.u32 	%r912, [%rd4+12];
	// inline asm
	prmt.b32 %r8441, %r911, %r912, %r4;
	// inline asm
	ld.local.u32 	%r915, [%rd4+12];
	ld.local.u32 	%r916, [%rd4+8];
	// inline asm
	prmt.b32 %r8442, %r915, %r916, %r4;
	// inline asm
	ld.local.u32 	%r919, [%rd4+8];
	ld.local.u32 	%r920, [%rd4+4];
	// inline asm
	prmt.b32 %r8435, %r919, %r920, %r4;
	// inline asm
	ld.local.u32 	%r923, [%rd4+4];
	ld.local.u32 	%r924, [%rd4];
	// inline asm
	prmt.b32 %r8436, %r923, %r924, %r4;
	// inline asm
	ld.local.u32 	%r927, [%rd4];
	ld.local.u32 	%r928, [%rd3+12];
	// inline asm
	prmt.b32 %r8437, %r927, %r928, %r4;
	// inline asm
	ld.local.u32 	%r931, [%rd3+12];
	ld.local.u32 	%r932, [%rd3+8];
	// inline asm
	prmt.b32 %r8438, %r931, %r932, %r4;
	// inline asm
	ld.local.u32 	%r935, [%rd3+8];
	ld.local.u32 	%r936, [%rd3+4];
	// inline asm
	prmt.b32 %r8431, %r935, %r936, %r4;
	// inline asm
	ld.local.u32 	%r939, [%rd3+4];
	ld.local.u32 	%r940, [%rd3];
	// inline asm
	prmt.b32 %r8432, %r939, %r940, %r4;
	// inline asm
	ld.local.u32 	%r943, [%rd3];
	ld.local.u32 	%r944, [%rd2+12];
	// inline asm
	prmt.b32 %r8433, %r943, %r944, %r4;
	// inline asm
	ld.local.u32 	%r947, [%rd2+12];
	ld.local.u32 	%r948, [%rd2+8];
	// inline asm
	prmt.b32 %r8434, %r947, %r948, %r4;
	// inline asm
	ld.local.u32 	%r951, [%rd2+8];
	ld.local.u32 	%r952, [%rd2+4];
	// inline asm
	prmt.b32 %r8427, %r951, %r952, %r4;
	// inline asm
	ld.local.u32 	%r955, [%rd2+4];
	ld.local.u32 	%r956, [%rd2];
	// inline asm
	prmt.b32 %r8428, %r955, %r956, %r4;
	// inline asm
	ld.local.u32 	%r959, [%rd2];
	ld.local.u32 	%r960, [%rd1+12];
	// inline asm
	prmt.b32 %r8429, %r959, %r960, %r4;
	// inline asm
	ld.local.u32 	%r963, [%rd1+12];
	ld.local.u32 	%r964, [%rd1+8];
	// inline asm
	prmt.b32 %r8430, %r963, %r964, %r4;
	// inline asm
	ld.local.u32 	%r967, [%rd1+8];
	ld.local.u32 	%r968, [%rd1+4];
	// inline asm
	prmt.b32 %r966, %r967, %r968, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r966;
	ld.local.u32 	%r971, [%rd1+4];
	ld.local.u32 	%r972, [%rd1];
	// inline asm
	prmt.b32 %r970, %r971, %r972, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r970;
	ld.local.u32 	%r975, [%rd1];
	// inline asm
	prmt.b32 %r974, %r975, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r974;
	st.local.u32 	[%rd8], %r8426;
	st.local.u32 	[%rd7+12], %r8426;
	st.local.u32 	[%rd7+8], %r8426;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd102, 0;
	st.local.u32 	[%rd1+4], %rd102;
	st.local.u32 	[%rd1], %rd102;
	mov.u32 	%r8455, %r8426;
	mov.u32 	%r8456, %r8426;
	bra.uni 	BB1_90;

BB1_101:
	setp.eq.s32	%p95, %r3, 3;
	@%p95 bra 	BB1_102;
	bra.uni 	BB1_172;

BB1_102:
	ld.local.u32 	%r7809, [%rd8];
	ld.local.u32 	%r7810, [%rd7+12];
	// inline asm
	prmt.b32 %r7808, %r7809, %r7810, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7808;
	ld.local.u32 	%r7813, [%rd7+12];
	ld.local.u32 	%r7814, [%rd7+8];
	// inline asm
	prmt.b32 %r7812, %r7813, %r7814, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7812;
	ld.local.u32 	%r7817, [%rd7+8];
	ld.local.u32 	%r7818, [%rd7+4];
	// inline asm
	prmt.b32 %r7816, %r7817, %r7818, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7816;
	ld.local.u32 	%r7821, [%rd7+4];
	ld.local.u32 	%r7822, [%rd7];
	// inline asm
	prmt.b32 %r7820, %r7821, %r7822, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7820;
	ld.local.u32 	%r7825, [%rd7];
	ld.local.u32 	%r7826, [%rd6+12];
	// inline asm
	prmt.b32 %r7824, %r7825, %r7826, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7824;
	ld.local.u32 	%r7829, [%rd6+12];
	ld.local.u32 	%r7830, [%rd6+8];
	// inline asm
	prmt.b32 %r7828, %r7829, %r7830, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7828;
	ld.local.u32 	%r7833, [%rd6+8];
	ld.local.u32 	%r7834, [%rd6+4];
	// inline asm
	prmt.b32 %r7832, %r7833, %r7834, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7832;
	ld.local.u32 	%r7837, [%rd6+4];
	ld.local.u32 	%r7838, [%rd6];
	// inline asm
	prmt.b32 %r7836, %r7837, %r7838, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7836;
	ld.local.u32 	%r7841, [%rd6];
	ld.local.u32 	%r7842, [%rd5+12];
	// inline asm
	prmt.b32 %r7840, %r7841, %r7842, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7840;
	ld.local.u32 	%r7845, [%rd5+12];
	ld.local.u32 	%r7846, [%rd5+8];
	// inline asm
	prmt.b32 %r7844, %r7845, %r7846, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7844;
	ld.local.u32 	%r7849, [%rd5+8];
	ld.local.u32 	%r7850, [%rd5+4];
	// inline asm
	prmt.b32 %r7848, %r7849, %r7850, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7848;
	ld.local.u32 	%r7853, [%rd5+4];
	ld.local.u32 	%r7854, [%rd5];
	// inline asm
	prmt.b32 %r7852, %r7853, %r7854, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7852;
	ld.local.u32 	%r7857, [%rd5];
	ld.local.u32 	%r7858, [%rd4+12];
	// inline asm
	prmt.b32 %r7856, %r7857, %r7858, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7856;
	ld.local.u32 	%r7861, [%rd4+12];
	ld.local.u32 	%r7862, [%rd4+8];
	// inline asm
	prmt.b32 %r7860, %r7861, %r7862, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7860;
	ld.local.u32 	%r7865, [%rd4+8];
	ld.local.u32 	%r7866, [%rd4+4];
	// inline asm
	prmt.b32 %r7864, %r7865, %r7866, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7864;
	ld.local.u32 	%r7869, [%rd4+4];
	ld.local.u32 	%r7870, [%rd4];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7868;
	ld.local.u32 	%r7873, [%rd4];
	ld.local.u32 	%r7874, [%rd3+12];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7872;
	ld.local.u32 	%r7877, [%rd3+12];
	ld.local.u32 	%r7878, [%rd3+8];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7876;
	ld.local.u32 	%r7881, [%rd3+8];
	ld.local.u32 	%r7882, [%rd3+4];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7880;
	ld.local.u32 	%r7885, [%rd3+4];
	ld.local.u32 	%r7886, [%rd3];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7884;
	ld.local.u32 	%r7889, [%rd3];
	ld.local.u32 	%r7890, [%rd2+12];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7888;
	ld.local.u32 	%r7893, [%rd2+12];
	ld.local.u32 	%r7894, [%rd2+8];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7892;
	ld.local.u32 	%r7897, [%rd2+8];
	ld.local.u32 	%r7898, [%rd2+4];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7896;
	ld.local.u32 	%r7901, [%rd2+4];
	ld.local.u32 	%r7902, [%rd2];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7900;
	ld.local.u32 	%r7905, [%rd2];
	ld.local.u32 	%r7906, [%rd1+12];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7904;
	ld.local.u32 	%r7909, [%rd1+12];
	ld.local.u32 	%r7910, [%rd1+8];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7908;
	ld.local.u32 	%r7913, [%rd1+8];
	ld.local.u32 	%r7914, [%rd1+4];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7912;
	ld.local.u32 	%r7917, [%rd1+4];
	ld.local.u32 	%r7918, [%rd1];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7916;
	ld.local.u32 	%r7921, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7920, %r7921, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r7920;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1146, 0;
	st.local.u32 	[%rd1+4], %rd1146;
	st.local.u32 	[%rd1], %rd1146;
	bra.uni 	BB1_173;

BB1_10:
	setp.eq.s32	%p47, %r3, 3;
	@%p47 bra 	BB1_11;
	bra.uni 	BB1_88;

BB1_11:
	ld.local.u32 	%r4683, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8427, %r8426, %r4683, %r4;
	// inline asm
	ld.local.u32 	%r4686, [%rd8+12];
	ld.local.u32 	%r4687, [%rd8+8];
	// inline asm
	prmt.b32 %r8428, %r4686, %r4687, %r4;
	// inline asm
	ld.local.u32 	%r4690, [%rd8+8];
	ld.local.u32 	%r4691, [%rd8+4];
	// inline asm
	prmt.b32 %r8429, %r4690, %r4691, %r4;
	// inline asm
	ld.local.u32 	%r4694, [%rd8+4];
	ld.local.u32 	%r4695, [%rd8];
	// inline asm
	prmt.b32 %r8430, %r4694, %r4695, %r4;
	// inline asm
	ld.local.u32 	%r4698, [%rd8];
	ld.local.u32 	%r4699, [%rd7+12];
	// inline asm
	prmt.b32 %r4697, %r4698, %r4699, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4697;
	ld.local.u32 	%r4702, [%rd7+12];
	ld.local.u32 	%r4703, [%rd7+8];
	// inline asm
	prmt.b32 %r4701, %r4702, %r4703, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4701;
	ld.local.u32 	%r4706, [%rd7+8];
	ld.local.u32 	%r4707, [%rd7+4];
	// inline asm
	prmt.b32 %r4705, %r4706, %r4707, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4705;
	ld.local.u32 	%r4710, [%rd7+4];
	ld.local.u32 	%r4711, [%rd7];
	// inline asm
	prmt.b32 %r4709, %r4710, %r4711, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4709;
	ld.local.u32 	%r4714, [%rd7];
	ld.local.u32 	%r4715, [%rd6+12];
	// inline asm
	prmt.b32 %r4713, %r4714, %r4715, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4713;
	ld.local.u32 	%r4718, [%rd6+12];
	ld.local.u32 	%r4719, [%rd6+8];
	// inline asm
	prmt.b32 %r4717, %r4718, %r4719, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4717;
	ld.local.u32 	%r4722, [%rd6+8];
	ld.local.u32 	%r4723, [%rd6+4];
	// inline asm
	prmt.b32 %r4721, %r4722, %r4723, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4721;
	ld.local.u32 	%r4726, [%rd6+4];
	ld.local.u32 	%r4727, [%rd6];
	// inline asm
	prmt.b32 %r4725, %r4726, %r4727, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4725;
	ld.local.u32 	%r4730, [%rd6];
	ld.local.u32 	%r4731, [%rd5+12];
	// inline asm
	prmt.b32 %r4729, %r4730, %r4731, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4729;
	ld.local.u32 	%r4734, [%rd5+12];
	ld.local.u32 	%r4735, [%rd5+8];
	// inline asm
	prmt.b32 %r4733, %r4734, %r4735, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4733;
	ld.local.u32 	%r4738, [%rd5+8];
	ld.local.u32 	%r4739, [%rd5+4];
	// inline asm
	prmt.b32 %r4737, %r4738, %r4739, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4737;
	ld.local.u32 	%r4742, [%rd5+4];
	ld.local.u32 	%r4743, [%rd5];
	// inline asm
	prmt.b32 %r4741, %r4742, %r4743, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4741;
	ld.local.u32 	%r4746, [%rd5];
	ld.local.u32 	%r4747, [%rd4+12];
	// inline asm
	prmt.b32 %r4745, %r4746, %r4747, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4745;
	ld.local.u32 	%r4750, [%rd4+12];
	ld.local.u32 	%r4751, [%rd4+8];
	// inline asm
	prmt.b32 %r4749, %r4750, %r4751, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4749;
	ld.local.u32 	%r4754, [%rd4+8];
	ld.local.u32 	%r4755, [%rd4+4];
	// inline asm
	prmt.b32 %r4753, %r4754, %r4755, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4753;
	ld.local.u32 	%r4758, [%rd4+4];
	ld.local.u32 	%r4759, [%rd4];
	// inline asm
	prmt.b32 %r4757, %r4758, %r4759, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4757;
	ld.local.u32 	%r4762, [%rd4];
	ld.local.u32 	%r4763, [%rd3+12];
	// inline asm
	prmt.b32 %r4761, %r4762, %r4763, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4761;
	ld.local.u32 	%r4766, [%rd3+12];
	ld.local.u32 	%r4767, [%rd3+8];
	// inline asm
	prmt.b32 %r4765, %r4766, %r4767, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4765;
	ld.local.u32 	%r4770, [%rd3+8];
	ld.local.u32 	%r4771, [%rd3+4];
	// inline asm
	prmt.b32 %r4769, %r4770, %r4771, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4769;
	ld.local.u32 	%r4774, [%rd3+4];
	ld.local.u32 	%r4775, [%rd3];
	// inline asm
	prmt.b32 %r4773, %r4774, %r4775, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4773;
	ld.local.u32 	%r4778, [%rd3];
	ld.local.u32 	%r4779, [%rd2+12];
	// inline asm
	prmt.b32 %r4777, %r4778, %r4779, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4777;
	ld.local.u32 	%r4782, [%rd2+12];
	ld.local.u32 	%r4783, [%rd2+8];
	// inline asm
	prmt.b32 %r4781, %r4782, %r4783, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4781;
	ld.local.u32 	%r4786, [%rd2+8];
	ld.local.u32 	%r4787, [%rd2+4];
	// inline asm
	prmt.b32 %r4785, %r4786, %r4787, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4785;
	ld.local.u32 	%r4790, [%rd2+4];
	ld.local.u32 	%r4791, [%rd2];
	// inline asm
	prmt.b32 %r4789, %r4790, %r4791, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4789;
	ld.local.u32 	%r4794, [%rd2];
	ld.local.u32 	%r4795, [%rd1+12];
	// inline asm
	prmt.b32 %r4793, %r4794, %r4795, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4793;
	ld.local.u32 	%r4798, [%rd1+12];
	ld.local.u32 	%r4799, [%rd1+8];
	// inline asm
	prmt.b32 %r4797, %r4798, %r4799, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4797;
	ld.local.u32 	%r4802, [%rd1+8];
	ld.local.u32 	%r4803, [%rd1+4];
	// inline asm
	prmt.b32 %r4801, %r4802, %r4803, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4801;
	ld.local.u32 	%r4806, [%rd1+4];
	ld.local.u32 	%r4807, [%rd1];
	// inline asm
	prmt.b32 %r4805, %r4806, %r4807, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4805;
	ld.local.u32 	%r4810, [%rd1];
	// inline asm
	prmt.b32 %r4809, %r4810, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4809;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd128, 0;
	st.local.u32 	[%rd1+4], %rd128;
	st.local.u32 	[%rd1], %rd128;

BB1_12:
	mov.u32 	%r8431, %r8426;
	mov.u32 	%r8432, %r8426;
	mov.u32 	%r8433, %r8426;
	mov.u32 	%r8434, %r8426;
	bra.uni 	BB1_80;

BB1_132:
	setp.eq.s32	%p72, %r3, 19;
	@%p72 bra 	BB1_133;
	bra.uni 	BB1_172;

BB1_133:
	ld.local.u32 	%r6481, [%rd4];
	ld.local.u32 	%r6482, [%rd3+12];
	// inline asm
	prmt.b32 %r6480, %r6481, %r6482, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6480;
	ld.local.u32 	%r6485, [%rd3+12];
	ld.local.u32 	%r6486, [%rd3+8];
	// inline asm
	prmt.b32 %r6484, %r6485, %r6486, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6484;
	ld.local.u32 	%r6489, [%rd3+8];
	ld.local.u32 	%r6490, [%rd3+4];
	// inline asm
	prmt.b32 %r6488, %r6489, %r6490, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6488;
	ld.local.u32 	%r6493, [%rd3+4];
	ld.local.u32 	%r6494, [%rd3];
	// inline asm
	prmt.b32 %r6492, %r6493, %r6494, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6492;
	ld.local.u32 	%r6497, [%rd3];
	ld.local.u32 	%r6498, [%rd2+12];
	// inline asm
	prmt.b32 %r6496, %r6497, %r6498, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6496;
	ld.local.u32 	%r6501, [%rd2+12];
	ld.local.u32 	%r6502, [%rd2+8];
	// inline asm
	prmt.b32 %r6500, %r6501, %r6502, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6500;
	ld.local.u32 	%r6505, [%rd2+8];
	ld.local.u32 	%r6506, [%rd2+4];
	// inline asm
	prmt.b32 %r6504, %r6505, %r6506, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6504;
	ld.local.u32 	%r6509, [%rd2+4];
	ld.local.u32 	%r6510, [%rd2];
	// inline asm
	prmt.b32 %r6508, %r6509, %r6510, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6508;
	ld.local.u32 	%r6513, [%rd2];
	ld.local.u32 	%r6514, [%rd1+12];
	// inline asm
	prmt.b32 %r6512, %r6513, %r6514, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6512;
	ld.local.u32 	%r6517, [%rd1+12];
	ld.local.u32 	%r6518, [%rd1+8];
	// inline asm
	prmt.b32 %r6516, %r6517, %r6518, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6516;
	ld.local.u32 	%r6521, [%rd1+8];
	ld.local.u32 	%r6522, [%rd1+4];
	// inline asm
	prmt.b32 %r6520, %r6521, %r6522, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6520;
	ld.local.u32 	%r6525, [%rd1+4];
	ld.local.u32 	%r6526, [%rd1];
	// inline asm
	prmt.b32 %r6524, %r6525, %r6526, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6524;
	ld.local.u32 	%r6529, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6528, %r6529, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6528;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1130, 0;
	st.local.u32 	[%rd1+4], %rd1130;
	st.local.u32 	[%rd1], %rd1130;
	bra.uni 	BB1_173;

BB1_42:
	setp.eq.s32	%p24, %r3, 19;
	@%p24 bra 	BB1_43;
	bra.uni 	BB1_88;

BB1_43:
	ld.local.u32 	%r2243, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8443, %r8426, %r2243, %r4;
	// inline asm
	ld.local.u32 	%r2246, [%rd8+12];
	ld.local.u32 	%r2247, [%rd8+8];
	// inline asm
	prmt.b32 %r8444, %r2246, %r2247, %r4;
	// inline asm
	ld.local.u32 	%r2250, [%rd8+8];
	ld.local.u32 	%r2251, [%rd8+4];
	// inline asm
	prmt.b32 %r8445, %r2250, %r2251, %r4;
	// inline asm
	ld.local.u32 	%r2254, [%rd8+4];
	ld.local.u32 	%r2255, [%rd8];
	// inline asm
	prmt.b32 %r8446, %r2254, %r2255, %r4;
	// inline asm
	ld.local.u32 	%r2258, [%rd8];
	ld.local.u32 	%r2259, [%rd7+12];
	// inline asm
	prmt.b32 %r8439, %r2258, %r2259, %r4;
	// inline asm
	ld.local.u32 	%r2262, [%rd7+12];
	ld.local.u32 	%r2263, [%rd7+8];
	// inline asm
	prmt.b32 %r8440, %r2262, %r2263, %r4;
	// inline asm
	ld.local.u32 	%r2266, [%rd7+8];
	ld.local.u32 	%r2267, [%rd7+4];
	// inline asm
	prmt.b32 %r8441, %r2266, %r2267, %r4;
	// inline asm
	ld.local.u32 	%r2270, [%rd7+4];
	ld.local.u32 	%r2271, [%rd7];
	// inline asm
	prmt.b32 %r8442, %r2270, %r2271, %r4;
	// inline asm
	ld.local.u32 	%r2274, [%rd7];
	ld.local.u32 	%r2275, [%rd6+12];
	// inline asm
	prmt.b32 %r8435, %r2274, %r2275, %r4;
	// inline asm
	ld.local.u32 	%r2278, [%rd6+12];
	ld.local.u32 	%r2279, [%rd6+8];
	// inline asm
	prmt.b32 %r8436, %r2278, %r2279, %r4;
	// inline asm
	ld.local.u32 	%r2282, [%rd6+8];
	ld.local.u32 	%r2283, [%rd6+4];
	// inline asm
	prmt.b32 %r8437, %r2282, %r2283, %r4;
	// inline asm
	ld.local.u32 	%r2286, [%rd6+4];
	ld.local.u32 	%r2287, [%rd6];
	// inline asm
	prmt.b32 %r8438, %r2286, %r2287, %r4;
	// inline asm
	ld.local.u32 	%r2290, [%rd6];
	ld.local.u32 	%r2291, [%rd5+12];
	// inline asm
	prmt.b32 %r8431, %r2290, %r2291, %r4;
	// inline asm
	ld.local.u32 	%r2294, [%rd5+12];
	ld.local.u32 	%r2295, [%rd5+8];
	// inline asm
	prmt.b32 %r8432, %r2294, %r2295, %r4;
	// inline asm
	ld.local.u32 	%r2298, [%rd5+8];
	ld.local.u32 	%r2299, [%rd5+4];
	// inline asm
	prmt.b32 %r8433, %r2298, %r2299, %r4;
	// inline asm
	ld.local.u32 	%r2302, [%rd5+4];
	ld.local.u32 	%r2303, [%rd5];
	// inline asm
	prmt.b32 %r8434, %r2302, %r2303, %r4;
	// inline asm
	ld.local.u32 	%r2306, [%rd5];
	ld.local.u32 	%r2307, [%rd4+12];
	// inline asm
	prmt.b32 %r8427, %r2306, %r2307, %r4;
	// inline asm
	ld.local.u32 	%r2310, [%rd4+12];
	ld.local.u32 	%r2311, [%rd4+8];
	// inline asm
	prmt.b32 %r8428, %r2310, %r2311, %r4;
	// inline asm
	ld.local.u32 	%r2314, [%rd4+8];
	ld.local.u32 	%r2315, [%rd4+4];
	// inline asm
	prmt.b32 %r8429, %r2314, %r2315, %r4;
	// inline asm
	ld.local.u32 	%r2318, [%rd4+4];
	ld.local.u32 	%r2319, [%rd4];
	// inline asm
	prmt.b32 %r8430, %r2318, %r2319, %r4;
	// inline asm
	ld.local.u32 	%r2322, [%rd4];
	ld.local.u32 	%r2323, [%rd3+12];
	// inline asm
	prmt.b32 %r2321, %r2322, %r2323, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2321;
	ld.local.u32 	%r2326, [%rd3+12];
	ld.local.u32 	%r2327, [%rd3+8];
	// inline asm
	prmt.b32 %r2325, %r2326, %r2327, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2325;
	ld.local.u32 	%r2330, [%rd3+8];
	ld.local.u32 	%r2331, [%rd3+4];
	// inline asm
	prmt.b32 %r2329, %r2330, %r2331, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2329;
	ld.local.u32 	%r2334, [%rd3+4];
	ld.local.u32 	%r2335, [%rd3];
	// inline asm
	prmt.b32 %r2333, %r2334, %r2335, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2333;
	ld.local.u32 	%r2338, [%rd3];
	ld.local.u32 	%r2339, [%rd2+12];
	// inline asm
	prmt.b32 %r2337, %r2338, %r2339, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2337;
	ld.local.u32 	%r2342, [%rd2+12];
	ld.local.u32 	%r2343, [%rd2+8];
	// inline asm
	prmt.b32 %r2341, %r2342, %r2343, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2341;
	ld.local.u32 	%r2346, [%rd2+8];
	ld.local.u32 	%r2347, [%rd2+4];
	// inline asm
	prmt.b32 %r2345, %r2346, %r2347, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2345;
	ld.local.u32 	%r2350, [%rd2+4];
	ld.local.u32 	%r2351, [%rd2];
	// inline asm
	prmt.b32 %r2349, %r2350, %r2351, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2349;
	ld.local.u32 	%r2354, [%rd2];
	ld.local.u32 	%r2355, [%rd1+12];
	// inline asm
	prmt.b32 %r2353, %r2354, %r2355, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2353;
	ld.local.u32 	%r2358, [%rd1+12];
	ld.local.u32 	%r2359, [%rd1+8];
	// inline asm
	prmt.b32 %r2357, %r2358, %r2359, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2357;
	ld.local.u32 	%r2362, [%rd1+8];
	ld.local.u32 	%r2363, [%rd1+4];
	// inline asm
	prmt.b32 %r2361, %r2362, %r2363, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2361;
	ld.local.u32 	%r2366, [%rd1+4];
	ld.local.u32 	%r2367, [%rd1];
	// inline asm
	prmt.b32 %r2365, %r2366, %r2367, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2365;
	ld.local.u32 	%r2370, [%rd1];
	// inline asm
	prmt.b32 %r2369, %r2370, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2369;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd112, 0;
	st.local.u32 	[%rd1+4], %rd112;
	st.local.u32 	[%rd1], %rd112;
	bra.uni 	BB1_83;

BB1_116:
	setp.eq.s32	%p84, %r3, 11;
	@%p84 bra 	BB1_117;
	bra.uni 	BB1_172;

BB1_117:
	ld.local.u32 	%r7017, [%rd6];
	ld.local.u32 	%r7018, [%rd5+12];
	// inline asm
	prmt.b32 %r7016, %r7017, %r7018, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7016;
	ld.local.u32 	%r7021, [%rd5+12];
	ld.local.u32 	%r7022, [%rd5+8];
	// inline asm
	prmt.b32 %r7020, %r7021, %r7022, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7020;
	ld.local.u32 	%r7025, [%rd5+8];
	ld.local.u32 	%r7026, [%rd5+4];
	// inline asm
	prmt.b32 %r7024, %r7025, %r7026, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7024;
	ld.local.u32 	%r7029, [%rd5+4];
	ld.local.u32 	%r7030, [%rd5];
	// inline asm
	prmt.b32 %r7028, %r7029, %r7030, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7028;
	ld.local.u32 	%r7033, [%rd5];
	ld.local.u32 	%r7034, [%rd4+12];
	// inline asm
	prmt.b32 %r7032, %r7033, %r7034, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7032;
	ld.local.u32 	%r7037, [%rd4+12];
	ld.local.u32 	%r7038, [%rd4+8];
	// inline asm
	prmt.b32 %r7036, %r7037, %r7038, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7036;
	ld.local.u32 	%r7041, [%rd4+8];
	ld.local.u32 	%r7042, [%rd4+4];
	// inline asm
	prmt.b32 %r7040, %r7041, %r7042, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7040;
	ld.local.u32 	%r7045, [%rd4+4];
	ld.local.u32 	%r7046, [%rd4];
	// inline asm
	prmt.b32 %r7044, %r7045, %r7046, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7044;
	ld.local.u32 	%r7049, [%rd4];
	ld.local.u32 	%r7050, [%rd3+12];
	// inline asm
	prmt.b32 %r7048, %r7049, %r7050, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7048;
	ld.local.u32 	%r7053, [%rd3+12];
	ld.local.u32 	%r7054, [%rd3+8];
	// inline asm
	prmt.b32 %r7052, %r7053, %r7054, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7052;
	ld.local.u32 	%r7057, [%rd3+8];
	ld.local.u32 	%r7058, [%rd3+4];
	// inline asm
	prmt.b32 %r7056, %r7057, %r7058, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7056;
	ld.local.u32 	%r7061, [%rd3+4];
	ld.local.u32 	%r7062, [%rd3];
	// inline asm
	prmt.b32 %r7060, %r7061, %r7062, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7060;
	ld.local.u32 	%r7065, [%rd3];
	ld.local.u32 	%r7066, [%rd2+12];
	// inline asm
	prmt.b32 %r7064, %r7065, %r7066, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7064;
	ld.local.u32 	%r7069, [%rd2+12];
	ld.local.u32 	%r7070, [%rd2+8];
	// inline asm
	prmt.b32 %r7068, %r7069, %r7070, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7068;
	ld.local.u32 	%r7073, [%rd2+8];
	ld.local.u32 	%r7074, [%rd2+4];
	// inline asm
	prmt.b32 %r7072, %r7073, %r7074, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7072;
	ld.local.u32 	%r7077, [%rd2+4];
	ld.local.u32 	%r7078, [%rd2];
	// inline asm
	prmt.b32 %r7076, %r7077, %r7078, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7076;
	ld.local.u32 	%r7081, [%rd2];
	ld.local.u32 	%r7082, [%rd1+12];
	// inline asm
	prmt.b32 %r7080, %r7081, %r7082, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7080;
	ld.local.u32 	%r7085, [%rd1+12];
	ld.local.u32 	%r7086, [%rd1+8];
	// inline asm
	prmt.b32 %r7084, %r7085, %r7086, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7084;
	ld.local.u32 	%r7089, [%rd1+8];
	ld.local.u32 	%r7090, [%rd1+4];
	// inline asm
	prmt.b32 %r7088, %r7089, %r7090, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7088;
	ld.local.u32 	%r7093, [%rd1+4];
	ld.local.u32 	%r7094, [%rd1];
	// inline asm
	prmt.b32 %r7092, %r7093, %r7094, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7092;
	ld.local.u32 	%r7097, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7096, %r7097, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7096;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1138, 0;
	st.local.u32 	[%rd1+4], %rd1138;
	st.local.u32 	[%rd1], %rd1138;
	bra.uni 	BB1_173;

BB1_26:
	setp.eq.s32	%p36, %r3, 11;
	@%p36 bra 	BB1_27;
	bra.uni 	BB1_88;

BB1_27:
	ld.local.u32 	%r3431, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8435, %r8426, %r3431, %r4;
	// inline asm
	ld.local.u32 	%r3434, [%rd8+12];
	ld.local.u32 	%r3435, [%rd8+8];
	// inline asm
	prmt.b32 %r8436, %r3434, %r3435, %r4;
	// inline asm
	ld.local.u32 	%r3438, [%rd8+8];
	ld.local.u32 	%r3439, [%rd8+4];
	// inline asm
	prmt.b32 %r8437, %r3438, %r3439, %r4;
	// inline asm
	ld.local.u32 	%r3442, [%rd8+4];
	ld.local.u32 	%r3443, [%rd8];
	// inline asm
	prmt.b32 %r8438, %r3442, %r3443, %r4;
	// inline asm
	ld.local.u32 	%r3446, [%rd8];
	ld.local.u32 	%r3447, [%rd7+12];
	// inline asm
	prmt.b32 %r8431, %r3446, %r3447, %r4;
	// inline asm
	ld.local.u32 	%r3450, [%rd7+12];
	ld.local.u32 	%r3451, [%rd7+8];
	// inline asm
	prmt.b32 %r8432, %r3450, %r3451, %r4;
	// inline asm
	ld.local.u32 	%r3454, [%rd7+8];
	ld.local.u32 	%r3455, [%rd7+4];
	// inline asm
	prmt.b32 %r8433, %r3454, %r3455, %r4;
	// inline asm
	ld.local.u32 	%r3458, [%rd7+4];
	ld.local.u32 	%r3459, [%rd7];
	// inline asm
	prmt.b32 %r8434, %r3458, %r3459, %r4;
	// inline asm
	ld.local.u32 	%r3462, [%rd7];
	ld.local.u32 	%r3463, [%rd6+12];
	// inline asm
	prmt.b32 %r8427, %r3462, %r3463, %r4;
	// inline asm
	ld.local.u32 	%r3466, [%rd6+12];
	ld.local.u32 	%r3467, [%rd6+8];
	// inline asm
	prmt.b32 %r8428, %r3466, %r3467, %r4;
	// inline asm
	ld.local.u32 	%r3470, [%rd6+8];
	ld.local.u32 	%r3471, [%rd6+4];
	// inline asm
	prmt.b32 %r8429, %r3470, %r3471, %r4;
	// inline asm
	ld.local.u32 	%r3474, [%rd6+4];
	ld.local.u32 	%r3475, [%rd6];
	// inline asm
	prmt.b32 %r8430, %r3474, %r3475, %r4;
	// inline asm
	ld.local.u32 	%r3478, [%rd6];
	ld.local.u32 	%r3479, [%rd5+12];
	// inline asm
	prmt.b32 %r3477, %r3478, %r3479, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3477;
	ld.local.u32 	%r3482, [%rd5+12];
	ld.local.u32 	%r3483, [%rd5+8];
	// inline asm
	prmt.b32 %r3481, %r3482, %r3483, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3481;
	ld.local.u32 	%r3486, [%rd5+8];
	ld.local.u32 	%r3487, [%rd5+4];
	// inline asm
	prmt.b32 %r3485, %r3486, %r3487, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3485;
	ld.local.u32 	%r3490, [%rd5+4];
	ld.local.u32 	%r3491, [%rd5];
	// inline asm
	prmt.b32 %r3489, %r3490, %r3491, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3489;
	ld.local.u32 	%r3494, [%rd5];
	ld.local.u32 	%r3495, [%rd4+12];
	// inline asm
	prmt.b32 %r3493, %r3494, %r3495, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3493;
	ld.local.u32 	%r3498, [%rd4+12];
	ld.local.u32 	%r3499, [%rd4+8];
	// inline asm
	prmt.b32 %r3497, %r3498, %r3499, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3497;
	ld.local.u32 	%r3502, [%rd4+8];
	ld.local.u32 	%r3503, [%rd4+4];
	// inline asm
	prmt.b32 %r3501, %r3502, %r3503, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3501;
	ld.local.u32 	%r3506, [%rd4+4];
	ld.local.u32 	%r3507, [%rd4];
	// inline asm
	prmt.b32 %r3505, %r3506, %r3507, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3505;
	ld.local.u32 	%r3510, [%rd4];
	ld.local.u32 	%r3511, [%rd3+12];
	// inline asm
	prmt.b32 %r3509, %r3510, %r3511, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3509;
	ld.local.u32 	%r3514, [%rd3+12];
	ld.local.u32 	%r3515, [%rd3+8];
	// inline asm
	prmt.b32 %r3513, %r3514, %r3515, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3513;
	ld.local.u32 	%r3518, [%rd3+8];
	ld.local.u32 	%r3519, [%rd3+4];
	// inline asm
	prmt.b32 %r3517, %r3518, %r3519, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3517;
	ld.local.u32 	%r3522, [%rd3+4];
	ld.local.u32 	%r3523, [%rd3];
	// inline asm
	prmt.b32 %r3521, %r3522, %r3523, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3521;
	ld.local.u32 	%r3526, [%rd3];
	ld.local.u32 	%r3527, [%rd2+12];
	// inline asm
	prmt.b32 %r3525, %r3526, %r3527, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3525;
	ld.local.u32 	%r3530, [%rd2+12];
	ld.local.u32 	%r3531, [%rd2+8];
	// inline asm
	prmt.b32 %r3529, %r3530, %r3531, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3529;
	ld.local.u32 	%r3534, [%rd2+8];
	ld.local.u32 	%r3535, [%rd2+4];
	// inline asm
	prmt.b32 %r3533, %r3534, %r3535, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3533;
	ld.local.u32 	%r3538, [%rd2+4];
	ld.local.u32 	%r3539, [%rd2];
	// inline asm
	prmt.b32 %r3537, %r3538, %r3539, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3537;
	ld.local.u32 	%r3542, [%rd2];
	ld.local.u32 	%r3543, [%rd1+12];
	// inline asm
	prmt.b32 %r3541, %r3542, %r3543, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3541;
	ld.local.u32 	%r3546, [%rd1+12];
	ld.local.u32 	%r3547, [%rd1+8];
	// inline asm
	prmt.b32 %r3545, %r3546, %r3547, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3545;
	ld.local.u32 	%r3550, [%rd1+8];
	ld.local.u32 	%r3551, [%rd1+4];
	// inline asm
	prmt.b32 %r3549, %r3550, %r3551, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3549;
	ld.local.u32 	%r3554, [%rd1+4];
	ld.local.u32 	%r3555, [%rd1];
	// inline asm
	prmt.b32 %r3553, %r3554, %r3555, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3553;
	ld.local.u32 	%r3558, [%rd1];
	// inline asm
	prmt.b32 %r3557, %r3558, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3557;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd120, 0;
	st.local.u32 	[%rd1+4], %rd120;
	st.local.u32 	[%rd1], %rd120;
	bra.uni 	BB1_81;

BB1_147:
	setp.eq.s32	%p61, %r3, 27;
	@%p61 bra 	BB1_148;
	bra.uni 	BB1_172;

BB1_148:
	ld.local.u32 	%r6201, [%rd2];
	ld.local.u32 	%r6202, [%rd1+12];
	// inline asm
	prmt.b32 %r6200, %r6201, %r6202, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6200;
	ld.local.u32 	%r6205, [%rd1+12];
	ld.local.u32 	%r6206, [%rd1+8];
	// inline asm
	prmt.b32 %r6204, %r6205, %r6206, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6204;
	ld.local.u32 	%r6209, [%rd1+8];
	ld.local.u32 	%r6210, [%rd1+4];
	// inline asm
	prmt.b32 %r6208, %r6209, %r6210, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6208;
	ld.local.u32 	%r6213, [%rd1+4];
	ld.local.u32 	%r6214, [%rd1];
	// inline asm
	prmt.b32 %r6212, %r6213, %r6214, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6212;
	ld.local.u32 	%r6217, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6216, %r6217, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6216;
	st.local.u32 	[%rd7+8], %r8460;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1122, 0;
	st.local.u32 	[%rd1+4], %rd1122;
	st.local.u32 	[%rd1], %rd1122;
	bra.uni 	BB1_173;

BB1_57:
	setp.eq.s32	%p13, %r3, 27;
	@%p13 bra 	BB1_58;
	bra.uni 	BB1_88;

BB1_58:
	ld.local.u32 	%r1119, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8451, %r8426, %r1119, %r4;
	// inline asm
	ld.local.u32 	%r1122, [%rd8+12];
	ld.local.u32 	%r1123, [%rd8+8];
	// inline asm
	prmt.b32 %r8452, %r1122, %r1123, %r4;
	// inline asm
	ld.local.u32 	%r1126, [%rd8+8];
	ld.local.u32 	%r1127, [%rd8+4];
	// inline asm
	prmt.b32 %r8453, %r1126, %r1127, %r4;
	// inline asm
	ld.local.u32 	%r1130, [%rd8+4];
	ld.local.u32 	%r1131, [%rd8];
	// inline asm
	prmt.b32 %r8454, %r1130, %r1131, %r4;
	// inline asm
	ld.local.u32 	%r1134, [%rd8];
	ld.local.u32 	%r1135, [%rd7+12];
	// inline asm
	prmt.b32 %r8447, %r1134, %r1135, %r4;
	// inline asm
	ld.local.u32 	%r1138, [%rd7+12];
	ld.local.u32 	%r1139, [%rd7+8];
	// inline asm
	prmt.b32 %r8448, %r1138, %r1139, %r4;
	// inline asm
	ld.local.u32 	%r1142, [%rd7+8];
	ld.local.u32 	%r1143, [%rd7+4];
	// inline asm
	prmt.b32 %r8449, %r1142, %r1143, %r4;
	// inline asm
	ld.local.u32 	%r1146, [%rd7+4];
	ld.local.u32 	%r1147, [%rd7];
	// inline asm
	prmt.b32 %r8450, %r1146, %r1147, %r4;
	// inline asm
	ld.local.u32 	%r1150, [%rd7];
	ld.local.u32 	%r1151, [%rd6+12];
	// inline asm
	prmt.b32 %r8443, %r1150, %r1151, %r4;
	// inline asm
	ld.local.u32 	%r1154, [%rd6+12];
	ld.local.u32 	%r1155, [%rd6+8];
	// inline asm
	prmt.b32 %r8444, %r1154, %r1155, %r4;
	// inline asm
	ld.local.u32 	%r1158, [%rd6+8];
	ld.local.u32 	%r1159, [%rd6+4];
	// inline asm
	prmt.b32 %r8445, %r1158, %r1159, %r4;
	// inline asm
	ld.local.u32 	%r1162, [%rd6+4];
	ld.local.u32 	%r1163, [%rd6];
	// inline asm
	prmt.b32 %r8446, %r1162, %r1163, %r4;
	// inline asm
	ld.local.u32 	%r1166, [%rd6];
	ld.local.u32 	%r1167, [%rd5+12];
	// inline asm
	prmt.b32 %r8439, %r1166, %r1167, %r4;
	// inline asm
	ld.local.u32 	%r1170, [%rd5+12];
	ld.local.u32 	%r1171, [%rd5+8];
	// inline asm
	prmt.b32 %r8440, %r1170, %r1171, %r4;
	// inline asm
	ld.local.u32 	%r1174, [%rd5+8];
	ld.local.u32 	%r1175, [%rd5+4];
	// inline asm
	prmt.b32 %r8441, %r1174, %r1175, %r4;
	// inline asm
	ld.local.u32 	%r1178, [%rd5+4];
	ld.local.u32 	%r1179, [%rd5];
	// inline asm
	prmt.b32 %r8442, %r1178, %r1179, %r4;
	// inline asm
	ld.local.u32 	%r1182, [%rd5];
	ld.local.u32 	%r1183, [%rd4+12];
	// inline asm
	prmt.b32 %r8435, %r1182, %r1183, %r4;
	// inline asm
	ld.local.u32 	%r1186, [%rd4+12];
	ld.local.u32 	%r1187, [%rd4+8];
	// inline asm
	prmt.b32 %r8436, %r1186, %r1187, %r4;
	// inline asm
	ld.local.u32 	%r1190, [%rd4+8];
	ld.local.u32 	%r1191, [%rd4+4];
	// inline asm
	prmt.b32 %r8437, %r1190, %r1191, %r4;
	// inline asm
	ld.local.u32 	%r1194, [%rd4+4];
	ld.local.u32 	%r1195, [%rd4];
	// inline asm
	prmt.b32 %r8438, %r1194, %r1195, %r4;
	// inline asm
	ld.local.u32 	%r1198, [%rd4];
	ld.local.u32 	%r1199, [%rd3+12];
	// inline asm
	prmt.b32 %r8431, %r1198, %r1199, %r4;
	// inline asm
	ld.local.u32 	%r1202, [%rd3+12];
	ld.local.u32 	%r1203, [%rd3+8];
	// inline asm
	prmt.b32 %r8432, %r1202, %r1203, %r4;
	// inline asm
	ld.local.u32 	%r1206, [%rd3+8];
	ld.local.u32 	%r1207, [%rd3+4];
	// inline asm
	prmt.b32 %r8433, %r1206, %r1207, %r4;
	// inline asm
	ld.local.u32 	%r1210, [%rd3+4];
	ld.local.u32 	%r1211, [%rd3];
	// inline asm
	prmt.b32 %r8434, %r1210, %r1211, %r4;
	// inline asm
	ld.local.u32 	%r1214, [%rd3];
	ld.local.u32 	%r1215, [%rd2+12];
	// inline asm
	prmt.b32 %r8427, %r1214, %r1215, %r4;
	// inline asm
	ld.local.u32 	%r1218, [%rd2+12];
	ld.local.u32 	%r1219, [%rd2+8];
	// inline asm
	prmt.b32 %r8428, %r1218, %r1219, %r4;
	// inline asm
	ld.local.u32 	%r1222, [%rd2+8];
	ld.local.u32 	%r1223, [%rd2+4];
	// inline asm
	prmt.b32 %r8429, %r1222, %r1223, %r4;
	// inline asm
	ld.local.u32 	%r1226, [%rd2+4];
	ld.local.u32 	%r1227, [%rd2];
	// inline asm
	prmt.b32 %r8430, %r1226, %r1227, %r4;
	// inline asm
	ld.local.u32 	%r1230, [%rd2];
	ld.local.u32 	%r1231, [%rd1+12];
	// inline asm
	prmt.b32 %r1229, %r1230, %r1231, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1229;
	ld.local.u32 	%r1234, [%rd1+12];
	ld.local.u32 	%r1235, [%rd1+8];
	// inline asm
	prmt.b32 %r1233, %r1234, %r1235, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1233;
	ld.local.u32 	%r1238, [%rd1+8];
	ld.local.u32 	%r1239, [%rd1+4];
	// inline asm
	prmt.b32 %r1237, %r1238, %r1239, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1237;
	ld.local.u32 	%r1242, [%rd1+4];
	ld.local.u32 	%r1243, [%rd1];
	// inline asm
	prmt.b32 %r1241, %r1242, %r1243, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1241;
	ld.local.u32 	%r1246, [%rd1];
	// inline asm
	prmt.b32 %r1245, %r1246, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1245;
	st.local.u32 	[%rd7+8], %r8426;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd104, 0;
	st.local.u32 	[%rd1+4], %rd104;
	st.local.u32 	[%rd1], %rd104;
	bra.uni 	BB1_85;

BB1_108:
	setp.eq.s32	%p90, %r3, 7;
	@%p90 bra 	BB1_109;
	bra.uni 	BB1_172;

BB1_109:
	ld.local.u32 	%r7381, [%rd7];
	ld.local.u32 	%r7382, [%rd6+12];
	// inline asm
	prmt.b32 %r7380, %r7381, %r7382, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7380;
	ld.local.u32 	%r7385, [%rd6+12];
	ld.local.u32 	%r7386, [%rd6+8];
	// inline asm
	prmt.b32 %r7384, %r7385, %r7386, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7384;
	ld.local.u32 	%r7389, [%rd6+8];
	ld.local.u32 	%r7390, [%rd6+4];
	// inline asm
	prmt.b32 %r7388, %r7389, %r7390, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7388;
	ld.local.u32 	%r7393, [%rd6+4];
	ld.local.u32 	%r7394, [%rd6];
	// inline asm
	prmt.b32 %r7392, %r7393, %r7394, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7392;
	ld.local.u32 	%r7397, [%rd6];
	ld.local.u32 	%r7398, [%rd5+12];
	// inline asm
	prmt.b32 %r7396, %r7397, %r7398, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7396;
	ld.local.u32 	%r7401, [%rd5+12];
	ld.local.u32 	%r7402, [%rd5+8];
	// inline asm
	prmt.b32 %r7400, %r7401, %r7402, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7400;
	ld.local.u32 	%r7405, [%rd5+8];
	ld.local.u32 	%r7406, [%rd5+4];
	// inline asm
	prmt.b32 %r7404, %r7405, %r7406, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7404;
	ld.local.u32 	%r7409, [%rd5+4];
	ld.local.u32 	%r7410, [%rd5];
	// inline asm
	prmt.b32 %r7408, %r7409, %r7410, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7408;
	ld.local.u32 	%r7413, [%rd5];
	ld.local.u32 	%r7414, [%rd4+12];
	// inline asm
	prmt.b32 %r7412, %r7413, %r7414, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7412;
	ld.local.u32 	%r7417, [%rd4+12];
	ld.local.u32 	%r7418, [%rd4+8];
	// inline asm
	prmt.b32 %r7416, %r7417, %r7418, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7416;
	ld.local.u32 	%r7421, [%rd4+8];
	ld.local.u32 	%r7422, [%rd4+4];
	// inline asm
	prmt.b32 %r7420, %r7421, %r7422, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7420;
	ld.local.u32 	%r7425, [%rd4+4];
	ld.local.u32 	%r7426, [%rd4];
	// inline asm
	prmt.b32 %r7424, %r7425, %r7426, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7424;
	ld.local.u32 	%r7429, [%rd4];
	ld.local.u32 	%r7430, [%rd3+12];
	// inline asm
	prmt.b32 %r7428, %r7429, %r7430, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7428;
	ld.local.u32 	%r7433, [%rd3+12];
	ld.local.u32 	%r7434, [%rd3+8];
	// inline asm
	prmt.b32 %r7432, %r7433, %r7434, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7432;
	ld.local.u32 	%r7437, [%rd3+8];
	ld.local.u32 	%r7438, [%rd3+4];
	// inline asm
	prmt.b32 %r7436, %r7437, %r7438, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7436;
	ld.local.u32 	%r7441, [%rd3+4];
	ld.local.u32 	%r7442, [%rd3];
	// inline asm
	prmt.b32 %r7440, %r7441, %r7442, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7440;
	ld.local.u32 	%r7445, [%rd3];
	ld.local.u32 	%r7446, [%rd2+12];
	// inline asm
	prmt.b32 %r7444, %r7445, %r7446, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7444;
	ld.local.u32 	%r7449, [%rd2+12];
	ld.local.u32 	%r7450, [%rd2+8];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7448;
	ld.local.u32 	%r7453, [%rd2+8];
	ld.local.u32 	%r7454, [%rd2+4];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7452;
	ld.local.u32 	%r7457, [%rd2+4];
	ld.local.u32 	%r7458, [%rd2];
	// inline asm
	prmt.b32 %r7456, %r7457, %r7458, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7456;
	ld.local.u32 	%r7461, [%rd2];
	ld.local.u32 	%r7462, [%rd1+12];
	// inline asm
	prmt.b32 %r7460, %r7461, %r7462, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7460;
	ld.local.u32 	%r7465, [%rd1+12];
	ld.local.u32 	%r7466, [%rd1+8];
	// inline asm
	prmt.b32 %r7464, %r7465, %r7466, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7464;
	ld.local.u32 	%r7469, [%rd1+8];
	ld.local.u32 	%r7470, [%rd1+4];
	// inline asm
	prmt.b32 %r7468, %r7469, %r7470, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7468;
	ld.local.u32 	%r7473, [%rd1+4];
	ld.local.u32 	%r7474, [%rd1];
	// inline asm
	prmt.b32 %r7472, %r7473, %r7474, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7472;
	ld.local.u32 	%r7477, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r7476, %r7477, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7476;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1142, 0;
	st.local.u32 	[%rd1+4], %rd1142;
	st.local.u32 	[%rd1], %rd1142;
	bra.uni 	BB1_173;

BB1_18:
	setp.eq.s32	%p42, %r3, 7;
	@%p42 bra 	BB1_19;
	bra.uni 	BB1_88;

BB1_19:
	ld.local.u32 	%r4049, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8431, %r8426, %r4049, %r4;
	// inline asm
	ld.local.u32 	%r4052, [%rd8+12];
	ld.local.u32 	%r4053, [%rd8+8];
	// inline asm
	prmt.b32 %r8432, %r4052, %r4053, %r4;
	// inline asm
	ld.local.u32 	%r4056, [%rd8+8];
	ld.local.u32 	%r4057, [%rd8+4];
	// inline asm
	prmt.b32 %r8433, %r4056, %r4057, %r4;
	// inline asm
	ld.local.u32 	%r4060, [%rd8+4];
	ld.local.u32 	%r4061, [%rd8];
	// inline asm
	prmt.b32 %r8434, %r4060, %r4061, %r4;
	// inline asm
	ld.local.u32 	%r4064, [%rd8];
	ld.local.u32 	%r4065, [%rd7+12];
	// inline asm
	prmt.b32 %r8427, %r4064, %r4065, %r4;
	// inline asm
	ld.local.u32 	%r4068, [%rd7+12];
	ld.local.u32 	%r4069, [%rd7+8];
	// inline asm
	prmt.b32 %r8428, %r4068, %r4069, %r4;
	// inline asm
	ld.local.u32 	%r4072, [%rd7+8];
	ld.local.u32 	%r4073, [%rd7+4];
	// inline asm
	prmt.b32 %r8429, %r4072, %r4073, %r4;
	// inline asm
	ld.local.u32 	%r4076, [%rd7+4];
	ld.local.u32 	%r4077, [%rd7];
	// inline asm
	prmt.b32 %r8430, %r4076, %r4077, %r4;
	// inline asm
	ld.local.u32 	%r4080, [%rd7];
	ld.local.u32 	%r4081, [%rd6+12];
	// inline asm
	prmt.b32 %r4079, %r4080, %r4081, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4079;
	ld.local.u32 	%r4084, [%rd6+12];
	ld.local.u32 	%r4085, [%rd6+8];
	// inline asm
	prmt.b32 %r4083, %r4084, %r4085, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4083;
	ld.local.u32 	%r4088, [%rd6+8];
	ld.local.u32 	%r4089, [%rd6+4];
	// inline asm
	prmt.b32 %r4087, %r4088, %r4089, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4087;
	ld.local.u32 	%r4092, [%rd6+4];
	ld.local.u32 	%r4093, [%rd6];
	// inline asm
	prmt.b32 %r4091, %r4092, %r4093, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4091;
	ld.local.u32 	%r4096, [%rd6];
	ld.local.u32 	%r4097, [%rd5+12];
	// inline asm
	prmt.b32 %r4095, %r4096, %r4097, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4095;
	ld.local.u32 	%r4100, [%rd5+12];
	ld.local.u32 	%r4101, [%rd5+8];
	// inline asm
	prmt.b32 %r4099, %r4100, %r4101, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4099;
	ld.local.u32 	%r4104, [%rd5+8];
	ld.local.u32 	%r4105, [%rd5+4];
	// inline asm
	prmt.b32 %r4103, %r4104, %r4105, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4103;
	ld.local.u32 	%r4108, [%rd5+4];
	ld.local.u32 	%r4109, [%rd5];
	// inline asm
	prmt.b32 %r4107, %r4108, %r4109, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4107;
	ld.local.u32 	%r4112, [%rd5];
	ld.local.u32 	%r4113, [%rd4+12];
	// inline asm
	prmt.b32 %r4111, %r4112, %r4113, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4111;
	ld.local.u32 	%r4116, [%rd4+12];
	ld.local.u32 	%r4117, [%rd4+8];
	// inline asm
	prmt.b32 %r4115, %r4116, %r4117, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4115;
	ld.local.u32 	%r4120, [%rd4+8];
	ld.local.u32 	%r4121, [%rd4+4];
	// inline asm
	prmt.b32 %r4119, %r4120, %r4121, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4119;
	ld.local.u32 	%r4124, [%rd4+4];
	ld.local.u32 	%r4125, [%rd4];
	// inline asm
	prmt.b32 %r4123, %r4124, %r4125, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4123;
	ld.local.u32 	%r4128, [%rd4];
	ld.local.u32 	%r4129, [%rd3+12];
	// inline asm
	prmt.b32 %r4127, %r4128, %r4129, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4127;
	ld.local.u32 	%r4132, [%rd3+12];
	ld.local.u32 	%r4133, [%rd3+8];
	// inline asm
	prmt.b32 %r4131, %r4132, %r4133, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4131;
	ld.local.u32 	%r4136, [%rd3+8];
	ld.local.u32 	%r4137, [%rd3+4];
	// inline asm
	prmt.b32 %r4135, %r4136, %r4137, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4135;
	ld.local.u32 	%r4140, [%rd3+4];
	ld.local.u32 	%r4141, [%rd3];
	// inline asm
	prmt.b32 %r4139, %r4140, %r4141, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4139;
	ld.local.u32 	%r4144, [%rd3];
	ld.local.u32 	%r4145, [%rd2+12];
	// inline asm
	prmt.b32 %r4143, %r4144, %r4145, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4143;
	ld.local.u32 	%r4148, [%rd2+12];
	ld.local.u32 	%r4149, [%rd2+8];
	// inline asm
	prmt.b32 %r4147, %r4148, %r4149, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4147;
	ld.local.u32 	%r4152, [%rd2+8];
	ld.local.u32 	%r4153, [%rd2+4];
	// inline asm
	prmt.b32 %r4151, %r4152, %r4153, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4151;
	ld.local.u32 	%r4156, [%rd2+4];
	ld.local.u32 	%r4157, [%rd2];
	// inline asm
	prmt.b32 %r4155, %r4156, %r4157, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4155;
	ld.local.u32 	%r4160, [%rd2];
	ld.local.u32 	%r4161, [%rd1+12];
	// inline asm
	prmt.b32 %r4159, %r4160, %r4161, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4159;
	ld.local.u32 	%r4164, [%rd1+12];
	ld.local.u32 	%r4165, [%rd1+8];
	// inline asm
	prmt.b32 %r4163, %r4164, %r4165, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4163;
	ld.local.u32 	%r4168, [%rd1+8];
	ld.local.u32 	%r4169, [%rd1+4];
	// inline asm
	prmt.b32 %r4167, %r4168, %r4169, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4167;
	ld.local.u32 	%r4172, [%rd1+4];
	ld.local.u32 	%r4173, [%rd1];
	// inline asm
	prmt.b32 %r4171, %r4172, %r4173, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4171;
	ld.local.u32 	%r4176, [%rd1];
	// inline asm
	prmt.b32 %r4175, %r4176, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4175;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd124, 0;
	st.local.u32 	[%rd1+4], %rd124;
	st.local.u32 	[%rd1], %rd124;

BB1_80:
	mov.u32 	%r8435, %r8426;
	mov.u32 	%r8436, %r8426;
	mov.u32 	%r8437, %r8426;
	mov.u32 	%r8438, %r8426;

BB1_81:
	mov.u32 	%r8439, %r8426;
	mov.u32 	%r8440, %r8426;
	mov.u32 	%r8441, %r8426;
	mov.u32 	%r8442, %r8426;

BB1_82:
	mov.u32 	%r8443, %r8426;
	mov.u32 	%r8444, %r8426;
	mov.u32 	%r8445, %r8426;
	mov.u32 	%r8446, %r8426;

BB1_83:
	mov.u32 	%r8447, %r8426;
	mov.u32 	%r8448, %r8426;
	mov.u32 	%r8449, %r8426;
	mov.u32 	%r8450, %r8426;

BB1_84:
	mov.u32 	%r8451, %r8426;
	mov.u32 	%r8452, %r8426;
	mov.u32 	%r8453, %r8426;
	mov.u32 	%r8454, %r8426;

BB1_85:
	mov.u32 	%r8455, %r8426;
	mov.u32 	%r8456, %r8426;
	mov.u32 	%r8457, %r8426;
	mov.u32 	%r8458, %r8426;
	bra.uni 	BB1_90;

BB1_139:
	setp.eq.s32	%p67, %r3, 23;
	@%p67 bra 	BB1_140;
	bra.uni 	BB1_172;

BB1_140:
	ld.local.u32 	%r6309, [%rd3];
	ld.local.u32 	%r6310, [%rd2+12];
	// inline asm
	prmt.b32 %r6308, %r6309, %r6310, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6308;
	ld.local.u32 	%r6313, [%rd2+12];
	ld.local.u32 	%r6314, [%rd2+8];
	// inline asm
	prmt.b32 %r6312, %r6313, %r6314, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6312;
	ld.local.u32 	%r6317, [%rd2+8];
	ld.local.u32 	%r6318, [%rd2+4];
	// inline asm
	prmt.b32 %r6316, %r6317, %r6318, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6316;
	ld.local.u32 	%r6321, [%rd2+4];
	ld.local.u32 	%r6322, [%rd2];
	// inline asm
	prmt.b32 %r6320, %r6321, %r6322, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6320;
	ld.local.u32 	%r6325, [%rd2];
	ld.local.u32 	%r6326, [%rd1+12];
	// inline asm
	prmt.b32 %r6324, %r6325, %r6326, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6324;
	ld.local.u32 	%r6329, [%rd1+12];
	ld.local.u32 	%r6330, [%rd1+8];
	// inline asm
	prmt.b32 %r6328, %r6329, %r6330, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6328;
	ld.local.u32 	%r6333, [%rd1+8];
	ld.local.u32 	%r6334, [%rd1+4];
	// inline asm
	prmt.b32 %r6332, %r6333, %r6334, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6332;
	ld.local.u32 	%r6337, [%rd1+4];
	ld.local.u32 	%r6338, [%rd1];
	// inline asm
	prmt.b32 %r6336, %r6337, %r6338, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6336;
	ld.local.u32 	%r6341, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6340, %r6341, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6340;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1126, 0;
	st.local.u32 	[%rd1+4], %rd1126;
	st.local.u32 	[%rd1], %rd1126;
	bra.uni 	BB1_173;

BB1_49:
	setp.eq.s32	%p19, %r3, 23;
	@%p19 bra 	BB1_50;
	bra.uni 	BB1_88;

BB1_50:
	ld.local.u32 	%r1673, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8447, %r8426, %r1673, %r4;
	// inline asm
	ld.local.u32 	%r1676, [%rd8+12];
	ld.local.u32 	%r1677, [%rd8+8];
	// inline asm
	prmt.b32 %r8448, %r1676, %r1677, %r4;
	// inline asm
	ld.local.u32 	%r1680, [%rd8+8];
	ld.local.u32 	%r1681, [%rd8+4];
	// inline asm
	prmt.b32 %r8449, %r1680, %r1681, %r4;
	// inline asm
	ld.local.u32 	%r1684, [%rd8+4];
	ld.local.u32 	%r1685, [%rd8];
	// inline asm
	prmt.b32 %r8450, %r1684, %r1685, %r4;
	// inline asm
	ld.local.u32 	%r1688, [%rd8];
	ld.local.u32 	%r1689, [%rd7+12];
	// inline asm
	prmt.b32 %r8443, %r1688, %r1689, %r4;
	// inline asm
	ld.local.u32 	%r1692, [%rd7+12];
	ld.local.u32 	%r1693, [%rd7+8];
	// inline asm
	prmt.b32 %r8444, %r1692, %r1693, %r4;
	// inline asm
	ld.local.u32 	%r1696, [%rd7+8];
	ld.local.u32 	%r1697, [%rd7+4];
	// inline asm
	prmt.b32 %r8445, %r1696, %r1697, %r4;
	// inline asm
	ld.local.u32 	%r1700, [%rd7+4];
	ld.local.u32 	%r1701, [%rd7];
	// inline asm
	prmt.b32 %r8446, %r1700, %r1701, %r4;
	// inline asm
	ld.local.u32 	%r1704, [%rd7];
	ld.local.u32 	%r1705, [%rd6+12];
	// inline asm
	prmt.b32 %r8439, %r1704, %r1705, %r4;
	// inline asm
	ld.local.u32 	%r1708, [%rd6+12];
	ld.local.u32 	%r1709, [%rd6+8];
	// inline asm
	prmt.b32 %r8440, %r1708, %r1709, %r4;
	// inline asm
	ld.local.u32 	%r1712, [%rd6+8];
	ld.local.u32 	%r1713, [%rd6+4];
	// inline asm
	prmt.b32 %r8441, %r1712, %r1713, %r4;
	// inline asm
	ld.local.u32 	%r1716, [%rd6+4];
	ld.local.u32 	%r1717, [%rd6];
	// inline asm
	prmt.b32 %r8442, %r1716, %r1717, %r4;
	// inline asm
	ld.local.u32 	%r1720, [%rd6];
	ld.local.u32 	%r1721, [%rd5+12];
	// inline asm
	prmt.b32 %r8435, %r1720, %r1721, %r4;
	// inline asm
	ld.local.u32 	%r1724, [%rd5+12];
	ld.local.u32 	%r1725, [%rd5+8];
	// inline asm
	prmt.b32 %r8436, %r1724, %r1725, %r4;
	// inline asm
	ld.local.u32 	%r1728, [%rd5+8];
	ld.local.u32 	%r1729, [%rd5+4];
	// inline asm
	prmt.b32 %r8437, %r1728, %r1729, %r4;
	// inline asm
	ld.local.u32 	%r1732, [%rd5+4];
	ld.local.u32 	%r1733, [%rd5];
	// inline asm
	prmt.b32 %r8438, %r1732, %r1733, %r4;
	// inline asm
	ld.local.u32 	%r1736, [%rd5];
	ld.local.u32 	%r1737, [%rd4+12];
	// inline asm
	prmt.b32 %r8431, %r1736, %r1737, %r4;
	// inline asm
	ld.local.u32 	%r1740, [%rd4+12];
	ld.local.u32 	%r1741, [%rd4+8];
	// inline asm
	prmt.b32 %r8432, %r1740, %r1741, %r4;
	// inline asm
	ld.local.u32 	%r1744, [%rd4+8];
	ld.local.u32 	%r1745, [%rd4+4];
	// inline asm
	prmt.b32 %r8433, %r1744, %r1745, %r4;
	// inline asm
	ld.local.u32 	%r1748, [%rd4+4];
	ld.local.u32 	%r1749, [%rd4];
	// inline asm
	prmt.b32 %r8434, %r1748, %r1749, %r4;
	// inline asm
	ld.local.u32 	%r1752, [%rd4];
	ld.local.u32 	%r1753, [%rd3+12];
	// inline asm
	prmt.b32 %r8427, %r1752, %r1753, %r4;
	// inline asm
	ld.local.u32 	%r1756, [%rd3+12];
	ld.local.u32 	%r1757, [%rd3+8];
	// inline asm
	prmt.b32 %r8428, %r1756, %r1757, %r4;
	// inline asm
	ld.local.u32 	%r1760, [%rd3+8];
	ld.local.u32 	%r1761, [%rd3+4];
	// inline asm
	prmt.b32 %r8429, %r1760, %r1761, %r4;
	// inline asm
	ld.local.u32 	%r1764, [%rd3+4];
	ld.local.u32 	%r1765, [%rd3];
	// inline asm
	prmt.b32 %r8430, %r1764, %r1765, %r4;
	// inline asm
	ld.local.u32 	%r1768, [%rd3];
	ld.local.u32 	%r1769, [%rd2+12];
	// inline asm
	prmt.b32 %r1767, %r1768, %r1769, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1767;
	ld.local.u32 	%r1772, [%rd2+12];
	ld.local.u32 	%r1773, [%rd2+8];
	// inline asm
	prmt.b32 %r1771, %r1772, %r1773, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1771;
	ld.local.u32 	%r1776, [%rd2+8];
	ld.local.u32 	%r1777, [%rd2+4];
	// inline asm
	prmt.b32 %r1775, %r1776, %r1777, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1775;
	ld.local.u32 	%r1780, [%rd2+4];
	ld.local.u32 	%r1781, [%rd2];
	// inline asm
	prmt.b32 %r1779, %r1780, %r1781, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1779;
	ld.local.u32 	%r1784, [%rd2];
	ld.local.u32 	%r1785, [%rd1+12];
	// inline asm
	prmt.b32 %r1783, %r1784, %r1785, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1783;
	ld.local.u32 	%r1788, [%rd1+12];
	ld.local.u32 	%r1789, [%rd1+8];
	// inline asm
	prmt.b32 %r1787, %r1788, %r1789, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1787;
	ld.local.u32 	%r1792, [%rd1+8];
	ld.local.u32 	%r1793, [%rd1+4];
	// inline asm
	prmt.b32 %r1791, %r1792, %r1793, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1791;
	ld.local.u32 	%r1796, [%rd1+4];
	ld.local.u32 	%r1797, [%rd1];
	// inline asm
	prmt.b32 %r1795, %r1796, %r1797, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1795;
	ld.local.u32 	%r1800, [%rd1];
	// inline asm
	prmt.b32 %r1799, %r1800, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1799;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd108, 0;
	st.local.u32 	[%rd1+4], %rd108;
	st.local.u32 	[%rd1], %rd108;
	bra.uni 	BB1_84;

BB1_123:
	setp.eq.s32	%p79, %r3, 15;
	@%p79 bra 	BB1_124;
	bra.uni 	BB1_172;

BB1_124:
	ld.local.u32 	%r6717, [%rd5];
	ld.local.u32 	%r6718, [%rd4+12];
	// inline asm
	prmt.b32 %r6716, %r6717, %r6718, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6716;
	ld.local.u32 	%r6721, [%rd4+12];
	ld.local.u32 	%r6722, [%rd4+8];
	// inline asm
	prmt.b32 %r6720, %r6721, %r6722, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6720;
	ld.local.u32 	%r6725, [%rd4+8];
	ld.local.u32 	%r6726, [%rd4+4];
	// inline asm
	prmt.b32 %r6724, %r6725, %r6726, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6724;
	ld.local.u32 	%r6729, [%rd4+4];
	ld.local.u32 	%r6730, [%rd4];
	// inline asm
	prmt.b32 %r6728, %r6729, %r6730, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6728;
	ld.local.u32 	%r6733, [%rd4];
	ld.local.u32 	%r6734, [%rd3+12];
	// inline asm
	prmt.b32 %r6732, %r6733, %r6734, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6732;
	ld.local.u32 	%r6737, [%rd3+12];
	ld.local.u32 	%r6738, [%rd3+8];
	// inline asm
	prmt.b32 %r6736, %r6737, %r6738, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6736;
	ld.local.u32 	%r6741, [%rd3+8];
	ld.local.u32 	%r6742, [%rd3+4];
	// inline asm
	prmt.b32 %r6740, %r6741, %r6742, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6740;
	ld.local.u32 	%r6745, [%rd3+4];
	ld.local.u32 	%r6746, [%rd3];
	// inline asm
	prmt.b32 %r6744, %r6745, %r6746, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6744;
	ld.local.u32 	%r6749, [%rd3];
	ld.local.u32 	%r6750, [%rd2+12];
	// inline asm
	prmt.b32 %r6748, %r6749, %r6750, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6748;
	ld.local.u32 	%r6753, [%rd2+12];
	ld.local.u32 	%r6754, [%rd2+8];
	// inline asm
	prmt.b32 %r6752, %r6753, %r6754, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6752;
	ld.local.u32 	%r6757, [%rd2+8];
	ld.local.u32 	%r6758, [%rd2+4];
	// inline asm
	prmt.b32 %r6756, %r6757, %r6758, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6756;
	ld.local.u32 	%r6761, [%rd2+4];
	ld.local.u32 	%r6762, [%rd2];
	// inline asm
	prmt.b32 %r6760, %r6761, %r6762, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6760;
	ld.local.u32 	%r6765, [%rd2];
	ld.local.u32 	%r6766, [%rd1+12];
	// inline asm
	prmt.b32 %r6764, %r6765, %r6766, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6764;
	ld.local.u32 	%r6769, [%rd1+12];
	ld.local.u32 	%r6770, [%rd1+8];
	// inline asm
	prmt.b32 %r6768, %r6769, %r6770, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6768;
	ld.local.u32 	%r6773, [%rd1+8];
	ld.local.u32 	%r6774, [%rd1+4];
	// inline asm
	prmt.b32 %r6772, %r6773, %r6774, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6772;
	ld.local.u32 	%r6777, [%rd1+4];
	ld.local.u32 	%r6778, [%rd1];
	// inline asm
	prmt.b32 %r6776, %r6777, %r6778, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6776;
	ld.local.u32 	%r6781, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6780, %r6781, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6780;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1134, 0;
	st.local.u32 	[%rd1+4], %rd1134;
	st.local.u32 	[%rd1], %rd1134;
	bra.uni 	BB1_173;

BB1_33:
	setp.eq.s32	%p31, %r3, 15;
	@%p31 bra 	BB1_34;
	bra.uni 	BB1_88;

BB1_34:
	ld.local.u32 	%r2829, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8439, %r8426, %r2829, %r4;
	// inline asm
	ld.local.u32 	%r2832, [%rd8+12];
	ld.local.u32 	%r2833, [%rd8+8];
	// inline asm
	prmt.b32 %r8440, %r2832, %r2833, %r4;
	// inline asm
	ld.local.u32 	%r2836, [%rd8+8];
	ld.local.u32 	%r2837, [%rd8+4];
	// inline asm
	prmt.b32 %r8441, %r2836, %r2837, %r4;
	// inline asm
	ld.local.u32 	%r2840, [%rd8+4];
	ld.local.u32 	%r2841, [%rd8];
	// inline asm
	prmt.b32 %r8442, %r2840, %r2841, %r4;
	// inline asm
	ld.local.u32 	%r2844, [%rd8];
	ld.local.u32 	%r2845, [%rd7+12];
	// inline asm
	prmt.b32 %r8435, %r2844, %r2845, %r4;
	// inline asm
	ld.local.u32 	%r2848, [%rd7+12];
	ld.local.u32 	%r2849, [%rd7+8];
	// inline asm
	prmt.b32 %r8436, %r2848, %r2849, %r4;
	// inline asm
	ld.local.u32 	%r2852, [%rd7+8];
	ld.local.u32 	%r2853, [%rd7+4];
	// inline asm
	prmt.b32 %r8437, %r2852, %r2853, %r4;
	// inline asm
	ld.local.u32 	%r2856, [%rd7+4];
	ld.local.u32 	%r2857, [%rd7];
	// inline asm
	prmt.b32 %r8438, %r2856, %r2857, %r4;
	// inline asm
	ld.local.u32 	%r2860, [%rd7];
	ld.local.u32 	%r2861, [%rd6+12];
	// inline asm
	prmt.b32 %r8431, %r2860, %r2861, %r4;
	// inline asm
	ld.local.u32 	%r2864, [%rd6+12];
	ld.local.u32 	%r2865, [%rd6+8];
	// inline asm
	prmt.b32 %r8432, %r2864, %r2865, %r4;
	// inline asm
	ld.local.u32 	%r2868, [%rd6+8];
	ld.local.u32 	%r2869, [%rd6+4];
	// inline asm
	prmt.b32 %r8433, %r2868, %r2869, %r4;
	// inline asm
	ld.local.u32 	%r2872, [%rd6+4];
	ld.local.u32 	%r2873, [%rd6];
	// inline asm
	prmt.b32 %r8434, %r2872, %r2873, %r4;
	// inline asm
	ld.local.u32 	%r2876, [%rd6];
	ld.local.u32 	%r2877, [%rd5+12];
	// inline asm
	prmt.b32 %r8427, %r2876, %r2877, %r4;
	// inline asm
	ld.local.u32 	%r2880, [%rd5+12];
	ld.local.u32 	%r2881, [%rd5+8];
	// inline asm
	prmt.b32 %r8428, %r2880, %r2881, %r4;
	// inline asm
	ld.local.u32 	%r2884, [%rd5+8];
	ld.local.u32 	%r2885, [%rd5+4];
	// inline asm
	prmt.b32 %r8429, %r2884, %r2885, %r4;
	// inline asm
	ld.local.u32 	%r2888, [%rd5+4];
	ld.local.u32 	%r2889, [%rd5];
	// inline asm
	prmt.b32 %r8430, %r2888, %r2889, %r4;
	// inline asm
	ld.local.u32 	%r2892, [%rd5];
	ld.local.u32 	%r2893, [%rd4+12];
	// inline asm
	prmt.b32 %r2891, %r2892, %r2893, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2891;
	ld.local.u32 	%r2896, [%rd4+12];
	ld.local.u32 	%r2897, [%rd4+8];
	// inline asm
	prmt.b32 %r2895, %r2896, %r2897, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2895;
	ld.local.u32 	%r2900, [%rd4+8];
	ld.local.u32 	%r2901, [%rd4+4];
	// inline asm
	prmt.b32 %r2899, %r2900, %r2901, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2899;
	ld.local.u32 	%r2904, [%rd4+4];
	ld.local.u32 	%r2905, [%rd4];
	// inline asm
	prmt.b32 %r2903, %r2904, %r2905, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2903;
	ld.local.u32 	%r2908, [%rd4];
	ld.local.u32 	%r2909, [%rd3+12];
	// inline asm
	prmt.b32 %r2907, %r2908, %r2909, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2907;
	ld.local.u32 	%r2912, [%rd3+12];
	ld.local.u32 	%r2913, [%rd3+8];
	// inline asm
	prmt.b32 %r2911, %r2912, %r2913, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2911;
	ld.local.u32 	%r2916, [%rd3+8];
	ld.local.u32 	%r2917, [%rd3+4];
	// inline asm
	prmt.b32 %r2915, %r2916, %r2917, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2915;
	ld.local.u32 	%r2920, [%rd3+4];
	ld.local.u32 	%r2921, [%rd3];
	// inline asm
	prmt.b32 %r2919, %r2920, %r2921, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2919;
	ld.local.u32 	%r2924, [%rd3];
	ld.local.u32 	%r2925, [%rd2+12];
	// inline asm
	prmt.b32 %r2923, %r2924, %r2925, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2923;
	ld.local.u32 	%r2928, [%rd2+12];
	ld.local.u32 	%r2929, [%rd2+8];
	// inline asm
	prmt.b32 %r2927, %r2928, %r2929, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2927;
	ld.local.u32 	%r2932, [%rd2+8];
	ld.local.u32 	%r2933, [%rd2+4];
	// inline asm
	prmt.b32 %r2931, %r2932, %r2933, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2931;
	ld.local.u32 	%r2936, [%rd2+4];
	ld.local.u32 	%r2937, [%rd2];
	// inline asm
	prmt.b32 %r2935, %r2936, %r2937, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2935;
	ld.local.u32 	%r2940, [%rd2];
	ld.local.u32 	%r2941, [%rd1+12];
	// inline asm
	prmt.b32 %r2939, %r2940, %r2941, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2939;
	ld.local.u32 	%r2944, [%rd1+12];
	ld.local.u32 	%r2945, [%rd1+8];
	// inline asm
	prmt.b32 %r2943, %r2944, %r2945, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2943;
	ld.local.u32 	%r2948, [%rd1+8];
	ld.local.u32 	%r2949, [%rd1+4];
	// inline asm
	prmt.b32 %r2947, %r2948, %r2949, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2947;
	ld.local.u32 	%r2952, [%rd1+4];
	ld.local.u32 	%r2953, [%rd1];
	// inline asm
	prmt.b32 %r2951, %r2952, %r2953, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2951;
	ld.local.u32 	%r2956, [%rd1];
	// inline asm
	prmt.b32 %r2955, %r2956, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r2955;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd116, 0;
	st.local.u32 	[%rd1+4], %rd116;
	st.local.u32 	[%rd1], %rd116;
	bra.uni 	BB1_82;

BB1_154:
	setp.ne.s32	%p56, %r3, 31;
	@%p56 bra 	BB1_172;

	ld.local.u32 	%r6157, [%rd1];
	mov.u32 	%r8460, 0;
	// inline asm
	prmt.b32 %r6156, %r6157, %r8460, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6156;
	st.local.u32 	[%rd8+8], %r8460;
	st.local.u32 	[%rd8+4], %r8460;
	st.local.u32 	[%rd8], %r8460;
	st.local.u32 	[%rd7+12], %r8460;
	st.local.u32 	[%rd7+8], %r8460;
	st.local.u32 	[%rd7+4], %r8460;
	st.local.u32 	[%rd7], %r8460;
	st.local.u32 	[%rd6+12], %r8460;
	st.local.u32 	[%rd6+8], %r8460;
	st.local.u32 	[%rd6+4], %r8460;
	st.local.u32 	[%rd6], %r8460;
	st.local.u32 	[%rd5+12], %r8460;
	st.local.u32 	[%rd5+8], %r8460;
	st.local.u32 	[%rd5+4], %r8460;
	st.local.u32 	[%rd5], %r8460;
	st.local.u32 	[%rd4+12], %r8460;
	st.local.u32 	[%rd4+8], %r8460;
	st.local.u32 	[%rd4+4], %r8460;
	st.local.u32 	[%rd4], %r8460;
	st.local.u32 	[%rd3+12], %r8460;
	st.local.u32 	[%rd3+8], %r8460;
	st.local.u32 	[%rd3+4], %r8460;
	st.local.u32 	[%rd3], %r8460;
	st.local.u32 	[%rd2+12], %r8460;
	st.local.u32 	[%rd2+8], %r8460;
	st.local.u32 	[%rd2+4], %r8460;
	st.local.u32 	[%rd2], %r8460;
	st.local.u32 	[%rd1+12], %r8460;
	st.local.u32 	[%rd1+8], %r8460;
	mov.u64 	%rd1118, 0;
	st.local.u32 	[%rd1+4], %rd1118;
	st.local.u32 	[%rd1], %rd1118;
	bra.uni 	BB1_173;

BB1_172:
	ld.local.u32 	%r8460, [%rd1];

BB1_173:
	ld.local.u32 	%r8299, [%rd9+-128];
	or.b32  	%r8300, %r8299, %r8460;
	st.local.u32 	[%rd9+-128], %r8300;
	ld.local.u32 	%r8301, [%rd9+-124];
	ld.local.u32 	%r8302, [%rd1+4];
	or.b32  	%r8303, %r8301, %r8302;
	st.local.u32 	[%rd9+-124], %r8303;
	ld.local.u32 	%r8304, [%rd9+-120];
	ld.local.u32 	%r8305, [%rd1+8];
	or.b32  	%r8306, %r8304, %r8305;
	st.local.u32 	[%rd9+-120], %r8306;
	ld.local.u32 	%r8307, [%rd9+-116];
	ld.local.u32 	%r8308, [%rd1+12];
	or.b32  	%r8309, %r8307, %r8308;
	st.local.u32 	[%rd9+-116], %r8309;
	ld.local.u32 	%r8310, [%rd9+-112];
	ld.local.u32 	%r8311, [%rd2];
	or.b32  	%r8312, %r8310, %r8311;
	st.local.u32 	[%rd9+-112], %r8312;
	ld.local.u32 	%r8313, [%rd9+-108];
	ld.local.u32 	%r8314, [%rd2+4];
	or.b32  	%r8315, %r8313, %r8314;
	st.local.u32 	[%rd9+-108], %r8315;
	ld.local.u32 	%r8316, [%rd9+-104];
	ld.local.u32 	%r8317, [%rd2+8];
	or.b32  	%r8318, %r8316, %r8317;
	st.local.u32 	[%rd9+-104], %r8318;
	ld.local.u32 	%r8319, [%rd9+-100];
	ld.local.u32 	%r8320, [%rd2+12];
	or.b32  	%r8321, %r8319, %r8320;
	st.local.u32 	[%rd9+-100], %r8321;
	ld.local.u32 	%r8322, [%rd9+-96];
	ld.local.u32 	%r8323, [%rd3];
	or.b32  	%r8324, %r8322, %r8323;
	st.local.u32 	[%rd9+-96], %r8324;
	ld.local.u32 	%r8325, [%rd9+-92];
	ld.local.u32 	%r8326, [%rd3+4];
	or.b32  	%r8327, %r8325, %r8326;
	st.local.u32 	[%rd9+-92], %r8327;
	ld.local.u32 	%r8328, [%rd9+-88];
	ld.local.u32 	%r8329, [%rd3+8];
	or.b32  	%r8330, %r8328, %r8329;
	st.local.u32 	[%rd9+-88], %r8330;
	ld.local.u32 	%r8331, [%rd9+-84];
	ld.local.u32 	%r8332, [%rd3+12];
	or.b32  	%r8333, %r8331, %r8332;
	st.local.u32 	[%rd9+-84], %r8333;
	ld.local.u32 	%r8334, [%rd9+-80];
	ld.local.u32 	%r8335, [%rd4];
	or.b32  	%r8336, %r8334, %r8335;
	st.local.u32 	[%rd9+-80], %r8336;
	ld.local.u32 	%r8337, [%rd9+-76];
	ld.local.u32 	%r8338, [%rd4+4];
	or.b32  	%r8339, %r8337, %r8338;
	st.local.u32 	[%rd9+-76], %r8339;
	ld.local.u32 	%r8340, [%rd9+-72];
	ld.local.u32 	%r8341, [%rd4+8];
	or.b32  	%r8342, %r8340, %r8341;
	st.local.u32 	[%rd9+-72], %r8342;
	ld.local.u32 	%r8343, [%rd9+-68];
	ld.local.u32 	%r8344, [%rd4+12];
	or.b32  	%r8345, %r8343, %r8344;
	st.local.u32 	[%rd9+-68], %r8345;
	ld.local.u32 	%r8346, [%rd9+-64];
	ld.local.u32 	%r8347, [%rd5];
	or.b32  	%r8348, %r8346, %r8347;
	st.local.u32 	[%rd9+-64], %r8348;
	ld.local.u32 	%r8349, [%rd9+-60];
	ld.local.u32 	%r8350, [%rd5+4];
	or.b32  	%r8351, %r8349, %r8350;
	st.local.u32 	[%rd9+-60], %r8351;
	ld.local.u32 	%r8352, [%rd9+-56];
	ld.local.u32 	%r8353, [%rd5+8];
	or.b32  	%r8354, %r8352, %r8353;
	st.local.u32 	[%rd9+-56], %r8354;
	ld.local.u32 	%r8355, [%rd9+-52];
	ld.local.u32 	%r8356, [%rd5+12];
	or.b32  	%r8357, %r8355, %r8356;
	st.local.u32 	[%rd9+-52], %r8357;
	ld.local.u32 	%r8358, [%rd9+-48];
	ld.local.u32 	%r8359, [%rd6];
	or.b32  	%r8360, %r8358, %r8359;
	st.local.u32 	[%rd9+-48], %r8360;
	ld.local.u32 	%r8361, [%rd9+-44];
	ld.local.u32 	%r8362, [%rd6+4];
	or.b32  	%r8363, %r8361, %r8362;
	st.local.u32 	[%rd9+-44], %r8363;
	ld.local.u32 	%r8364, [%rd9+-40];
	ld.local.u32 	%r8365, [%rd6+8];
	or.b32  	%r8366, %r8364, %r8365;
	st.local.u32 	[%rd9+-40], %r8366;
	ld.local.u32 	%r8367, [%rd9+-36];
	ld.local.u32 	%r8368, [%rd6+12];
	or.b32  	%r8369, %r8367, %r8368;
	st.local.u32 	[%rd9+-36], %r8369;
	ld.local.u32 	%r8370, [%rd9+-32];
	ld.local.u32 	%r8371, [%rd7];
	or.b32  	%r8372, %r8370, %r8371;
	st.local.u32 	[%rd9+-32], %r8372;
	ld.local.u32 	%r8373, [%rd9+-28];
	ld.local.u32 	%r8374, [%rd7+4];
	or.b32  	%r8375, %r8373, %r8374;
	st.local.u32 	[%rd9+-28], %r8375;
	ld.local.u32 	%r8376, [%rd9+-24];
	ld.local.u32 	%r8377, [%rd7+8];
	or.b32  	%r8378, %r8376, %r8377;
	st.local.u32 	[%rd9+-24], %r8378;
	ld.local.u32 	%r8379, [%rd9+-20];
	ld.local.u32 	%r8380, [%rd7+12];
	or.b32  	%r8381, %r8379, %r8380;
	st.local.u32 	[%rd9+-20], %r8381;
	ld.local.u32 	%r8382, [%rd9+-16];
	ld.local.u32 	%r8383, [%rd8];
	or.b32  	%r8384, %r8382, %r8383;
	st.local.u32 	[%rd9+-16], %r8384;
	ld.local.u32 	%r8385, [%rd9+-12];
	ld.local.u32 	%r8386, [%rd8+4];
	or.b32  	%r8387, %r8385, %r8386;
	st.local.u32 	[%rd9+-12], %r8387;
	ld.local.u32 	%r8388, [%rd9+-8];
	ld.local.u32 	%r8389, [%rd8+8];
	or.b32  	%r8390, %r8388, %r8389;
	st.local.u32 	[%rd9+-8], %r8390;
	ld.local.u32 	%r8391, [%rd9+-4];
	ld.local.u32 	%r8392, [%rd8+12];
	or.b32  	%r8393, %r8391, %r8392;
	st.local.u32 	[%rd9+-4], %r8393;
	bra.uni 	BB1_175;

BB1_64:
	setp.ne.s32	%p8, %r3, 31;
	@%p8 bra 	BB1_88;

	ld.local.u32 	%r581, [%rd8+12];
	mov.u32 	%r8426, 0;
	// inline asm
	prmt.b32 %r8455, %r8426, %r581, %r4;
	// inline asm
	ld.local.u32 	%r584, [%rd8+12];
	ld.local.u32 	%r585, [%rd8+8];
	// inline asm
	prmt.b32 %r8456, %r584, %r585, %r4;
	// inline asm
	ld.local.u32 	%r588, [%rd8+8];
	ld.local.u32 	%r589, [%rd8+4];
	// inline asm
	prmt.b32 %r8457, %r588, %r589, %r4;
	// inline asm
	ld.local.u32 	%r592, [%rd8+4];
	ld.local.u32 	%r593, [%rd8];
	// inline asm
	prmt.b32 %r8458, %r592, %r593, %r4;
	// inline asm
	ld.local.u32 	%r596, [%rd8];
	ld.local.u32 	%r597, [%rd7+12];
	// inline asm
	prmt.b32 %r8451, %r596, %r597, %r4;
	// inline asm
	ld.local.u32 	%r600, [%rd7+12];
	ld.local.u32 	%r601, [%rd7+8];
	// inline asm
	prmt.b32 %r8452, %r600, %r601, %r4;
	// inline asm
	ld.local.u32 	%r604, [%rd7+8];
	ld.local.u32 	%r605, [%rd7+4];
	// inline asm
	prmt.b32 %r8453, %r604, %r605, %r4;
	// inline asm
	ld.local.u32 	%r608, [%rd7+4];
	ld.local.u32 	%r609, [%rd7];
	// inline asm
	prmt.b32 %r8454, %r608, %r609, %r4;
	// inline asm
	ld.local.u32 	%r612, [%rd7];
	ld.local.u32 	%r613, [%rd6+12];
	// inline asm
	prmt.b32 %r8447, %r612, %r613, %r4;
	// inline asm
	ld.local.u32 	%r616, [%rd6+12];
	ld.local.u32 	%r617, [%rd6+8];
	// inline asm
	prmt.b32 %r8448, %r616, %r617, %r4;
	// inline asm
	ld.local.u32 	%r620, [%rd6+8];
	ld.local.u32 	%r621, [%rd6+4];
	// inline asm
	prmt.b32 %r8449, %r620, %r621, %r4;
	// inline asm
	ld.local.u32 	%r624, [%rd6+4];
	ld.local.u32 	%r625, [%rd6];
	// inline asm
	prmt.b32 %r8450, %r624, %r625, %r4;
	// inline asm
	ld.local.u32 	%r628, [%rd6];
	ld.local.u32 	%r629, [%rd5+12];
	// inline asm
	prmt.b32 %r8443, %r628, %r629, %r4;
	// inline asm
	ld.local.u32 	%r632, [%rd5+12];
	ld.local.u32 	%r633, [%rd5+8];
	// inline asm
	prmt.b32 %r8444, %r632, %r633, %r4;
	// inline asm
	ld.local.u32 	%r636, [%rd5+8];
	ld.local.u32 	%r637, [%rd5+4];
	// inline asm
	prmt.b32 %r8445, %r636, %r637, %r4;
	// inline asm
	ld.local.u32 	%r640, [%rd5+4];
	ld.local.u32 	%r641, [%rd5];
	// inline asm
	prmt.b32 %r8446, %r640, %r641, %r4;
	// inline asm
	ld.local.u32 	%r644, [%rd5];
	ld.local.u32 	%r645, [%rd4+12];
	// inline asm
	prmt.b32 %r8439, %r644, %r645, %r4;
	// inline asm
	ld.local.u32 	%r648, [%rd4+12];
	ld.local.u32 	%r649, [%rd4+8];
	// inline asm
	prmt.b32 %r8440, %r648, %r649, %r4;
	// inline asm
	ld.local.u32 	%r652, [%rd4+8];
	ld.local.u32 	%r653, [%rd4+4];
	// inline asm
	prmt.b32 %r8441, %r652, %r653, %r4;
	// inline asm
	ld.local.u32 	%r656, [%rd4+4];
	ld.local.u32 	%r657, [%rd4];
	// inline asm
	prmt.b32 %r8442, %r656, %r657, %r4;
	// inline asm
	ld.local.u32 	%r660, [%rd4];
	ld.local.u32 	%r661, [%rd3+12];
	// inline asm
	prmt.b32 %r8435, %r660, %r661, %r4;
	// inline asm
	ld.local.u32 	%r664, [%rd3+12];
	ld.local.u32 	%r665, [%rd3+8];
	// inline asm
	prmt.b32 %r8436, %r664, %r665, %r4;
	// inline asm
	ld.local.u32 	%r668, [%rd3+8];
	ld.local.u32 	%r669, [%rd3+4];
	// inline asm
	prmt.b32 %r8437, %r668, %r669, %r4;
	// inline asm
	ld.local.u32 	%r672, [%rd3+4];
	ld.local.u32 	%r673, [%rd3];
	// inline asm
	prmt.b32 %r8438, %r672, %r673, %r4;
	// inline asm
	ld.local.u32 	%r676, [%rd3];
	ld.local.u32 	%r677, [%rd2+12];
	// inline asm
	prmt.b32 %r8431, %r676, %r677, %r4;
	// inline asm
	ld.local.u32 	%r680, [%rd2+12];
	ld.local.u32 	%r681, [%rd2+8];
	// inline asm
	prmt.b32 %r8432, %r680, %r681, %r4;
	// inline asm
	ld.local.u32 	%r684, [%rd2+8];
	ld.local.u32 	%r685, [%rd2+4];
	// inline asm
	prmt.b32 %r8433, %r684, %r685, %r4;
	// inline asm
	ld.local.u32 	%r688, [%rd2+4];
	ld.local.u32 	%r689, [%rd2];
	// inline asm
	prmt.b32 %r8434, %r688, %r689, %r4;
	// inline asm
	ld.local.u32 	%r692, [%rd2];
	ld.local.u32 	%r693, [%rd1+12];
	// inline asm
	prmt.b32 %r8427, %r692, %r693, %r4;
	// inline asm
	ld.local.u32 	%r696, [%rd1+12];
	ld.local.u32 	%r697, [%rd1+8];
	// inline asm
	prmt.b32 %r8428, %r696, %r697, %r4;
	// inline asm
	ld.local.u32 	%r700, [%rd1+8];
	ld.local.u32 	%r701, [%rd1+4];
	// inline asm
	prmt.b32 %r8429, %r700, %r701, %r4;
	// inline asm
	ld.local.u32 	%r704, [%rd1+4];
	ld.local.u32 	%r705, [%rd1];
	// inline asm
	prmt.b32 %r8430, %r704, %r705, %r4;
	// inline asm
	ld.local.u32 	%r708, [%rd1];
	// inline asm
	prmt.b32 %r707, %r708, %r8426, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r707;
	st.local.u32 	[%rd8+8], %r8426;
	st.local.u32 	[%rd8+4], %r8426;
	st.local.u32 	[%rd8], %r8426;
	st.local.u32 	[%rd7+12], %r8426;
	st.local.u32 	[%rd7+8], %r8426;
	st.local.u32 	[%rd7+4], %r8426;
	st.local.u32 	[%rd7], %r8426;
	st.local.u32 	[%rd6+12], %r8426;
	st.local.u32 	[%rd6+8], %r8426;
	st.local.u32 	[%rd6+4], %r8426;
	st.local.u32 	[%rd6], %r8426;
	st.local.u32 	[%rd5+12], %r8426;
	st.local.u32 	[%rd5+8], %r8426;
	st.local.u32 	[%rd5+4], %r8426;
	st.local.u32 	[%rd5], %r8426;
	st.local.u32 	[%rd4+12], %r8426;
	st.local.u32 	[%rd4+8], %r8426;
	st.local.u32 	[%rd4+4], %r8426;
	st.local.u32 	[%rd4], %r8426;
	st.local.u32 	[%rd3+12], %r8426;
	st.local.u32 	[%rd3+8], %r8426;
	st.local.u32 	[%rd3+4], %r8426;
	st.local.u32 	[%rd3], %r8426;
	st.local.u32 	[%rd2+12], %r8426;
	st.local.u32 	[%rd2+8], %r8426;
	st.local.u32 	[%rd2+4], %r8426;
	st.local.u32 	[%rd2], %r8426;
	st.local.u32 	[%rd1+12], %r8426;
	st.local.u32 	[%rd1+8], %r8426;
	mov.u64 	%rd100, 0;
	st.local.u32 	[%rd1+4], %rd100;
	st.local.u32 	[%rd1], %rd100;
	bra.uni 	BB1_90;

BB1_88:
	ld.local.u32 	%r8426, [%rd1];
	mov.u32 	%r8427, 0;
	mov.u32 	%r8428, %r8427;
	mov.u32 	%r8429, %r8427;
	mov.u32 	%r8430, %r8427;

BB1_89:
	mov.u32 	%r8431, %r8427;
	mov.u32 	%r8432, %r8427;
	mov.u32 	%r8433, %r8427;
	mov.u32 	%r8434, %r8427;
	mov.u32 	%r8435, %r8427;
	mov.u32 	%r8436, %r8427;
	mov.u32 	%r8437, %r8427;
	mov.u32 	%r8438, %r8427;
	mov.u32 	%r8439, %r8427;
	mov.u32 	%r8440, %r8427;
	mov.u32 	%r8441, %r8427;
	mov.u32 	%r8442, %r8427;
	mov.u32 	%r8443, %r8427;
	mov.u32 	%r8444, %r8427;
	mov.u32 	%r8445, %r8427;
	mov.u32 	%r8446, %r8427;
	mov.u32 	%r8447, %r8427;
	mov.u32 	%r8448, %r8427;
	mov.u32 	%r8449, %r8427;
	mov.u32 	%r8450, %r8427;
	mov.u32 	%r8451, %r8427;
	mov.u32 	%r8452, %r8427;
	mov.u32 	%r8453, %r8427;
	mov.u32 	%r8454, %r8427;
	mov.u32 	%r8455, %r8427;
	mov.u32 	%r8456, %r8427;
	mov.u32 	%r8457, %r8427;
	mov.u32 	%r8458, %r8427;

BB1_90:
	ld.local.u32 	%r5363, [%rd9+-128];
	or.b32  	%r5364, %r5363, %r8426;
	st.local.u32 	[%rd9+-128], %r5364;
	ld.local.u32 	%r5365, [%rd9+-124];
	ld.local.u32 	%r5366, [%rd1+4];
	or.b32  	%r5367, %r5365, %r5366;
	st.local.u32 	[%rd9+-124], %r5367;
	ld.local.u32 	%r5368, [%rd9+-120];
	ld.local.u32 	%r5369, [%rd1+8];
	or.b32  	%r5370, %r5368, %r5369;
	st.local.u32 	[%rd9+-120], %r5370;
	ld.local.u32 	%r5371, [%rd9+-116];
	ld.local.u32 	%r5372, [%rd1+12];
	or.b32  	%r5373, %r5371, %r5372;
	st.local.u32 	[%rd9+-116], %r5373;
	ld.local.u32 	%r5374, [%rd9+-112];
	ld.local.u32 	%r5375, [%rd2];
	or.b32  	%r5376, %r5374, %r5375;
	st.local.u32 	[%rd9+-112], %r5376;
	ld.local.u32 	%r5377, [%rd9+-108];
	ld.local.u32 	%r5378, [%rd2+4];
	or.b32  	%r5379, %r5377, %r5378;
	st.local.u32 	[%rd9+-108], %r5379;
	ld.local.u32 	%r5380, [%rd9+-104];
	ld.local.u32 	%r5381, [%rd2+8];
	or.b32  	%r5382, %r5380, %r5381;
	st.local.u32 	[%rd9+-104], %r5382;
	ld.local.u32 	%r5383, [%rd9+-100];
	ld.local.u32 	%r5384, [%rd2+12];
	or.b32  	%r5385, %r5383, %r5384;
	st.local.u32 	[%rd9+-100], %r5385;
	ld.local.u32 	%r5386, [%rd9+-96];
	ld.local.u32 	%r5387, [%rd3];
	or.b32  	%r5388, %r5386, %r5387;
	st.local.u32 	[%rd9+-96], %r5388;
	ld.local.u32 	%r5389, [%rd9+-92];
	ld.local.u32 	%r5390, [%rd3+4];
	or.b32  	%r5391, %r5389, %r5390;
	st.local.u32 	[%rd9+-92], %r5391;
	ld.local.u32 	%r5392, [%rd9+-88];
	ld.local.u32 	%r5393, [%rd3+8];
	or.b32  	%r5394, %r5392, %r5393;
	st.local.u32 	[%rd9+-88], %r5394;
	ld.local.u32 	%r5395, [%rd9+-84];
	ld.local.u32 	%r5396, [%rd3+12];
	or.b32  	%r5397, %r5395, %r5396;
	st.local.u32 	[%rd9+-84], %r5397;
	ld.local.u32 	%r5398, [%rd9+-80];
	ld.local.u32 	%r5399, [%rd4];
	or.b32  	%r5400, %r5398, %r5399;
	st.local.u32 	[%rd9+-80], %r5400;
	ld.local.u32 	%r5401, [%rd9+-76];
	ld.local.u32 	%r5402, [%rd4+4];
	or.b32  	%r5403, %r5401, %r5402;
	st.local.u32 	[%rd9+-76], %r5403;
	ld.local.u32 	%r5404, [%rd9+-72];
	ld.local.u32 	%r5405, [%rd4+8];
	or.b32  	%r5406, %r5404, %r5405;
	st.local.u32 	[%rd9+-72], %r5406;
	ld.local.u32 	%r5407, [%rd9+-68];
	ld.local.u32 	%r5408, [%rd4+12];
	or.b32  	%r5409, %r5407, %r5408;
	st.local.u32 	[%rd9+-68], %r5409;
	ld.local.u32 	%r5410, [%rd9+-64];
	ld.local.u32 	%r5411, [%rd5];
	or.b32  	%r5412, %r5410, %r5411;
	st.local.u32 	[%rd9+-64], %r5412;
	ld.local.u32 	%r5413, [%rd9+-60];
	ld.local.u32 	%r5414, [%rd5+4];
	or.b32  	%r5415, %r5413, %r5414;
	st.local.u32 	[%rd9+-60], %r5415;
	ld.local.u32 	%r5416, [%rd9+-56];
	ld.local.u32 	%r5417, [%rd5+8];
	or.b32  	%r5418, %r5416, %r5417;
	st.local.u32 	[%rd9+-56], %r5418;
	ld.local.u32 	%r5419, [%rd9+-52];
	ld.local.u32 	%r5420, [%rd5+12];
	or.b32  	%r5421, %r5419, %r5420;
	st.local.u32 	[%rd9+-52], %r5421;
	ld.local.u32 	%r5422, [%rd9+-48];
	ld.local.u32 	%r5423, [%rd6];
	or.b32  	%r5424, %r5422, %r5423;
	st.local.u32 	[%rd9+-48], %r5424;
	ld.local.u32 	%r5425, [%rd9+-44];
	ld.local.u32 	%r5426, [%rd6+4];
	or.b32  	%r5427, %r5425, %r5426;
	st.local.u32 	[%rd9+-44], %r5427;
	ld.local.u32 	%r5428, [%rd9+-40];
	ld.local.u32 	%r5429, [%rd6+8];
	or.b32  	%r5430, %r5428, %r5429;
	st.local.u32 	[%rd9+-40], %r5430;
	ld.local.u32 	%r5431, [%rd9+-36];
	ld.local.u32 	%r5432, [%rd6+12];
	or.b32  	%r5433, %r5431, %r5432;
	st.local.u32 	[%rd9+-36], %r5433;
	ld.local.u32 	%r5434, [%rd9+-32];
	ld.local.u32 	%r5435, [%rd7];
	or.b32  	%r5436, %r5434, %r5435;
	st.local.u32 	[%rd9+-32], %r5436;
	ld.local.u32 	%r5437, [%rd9+-28];
	ld.local.u32 	%r5438, [%rd7+4];
	or.b32  	%r5439, %r5437, %r5438;
	st.local.u32 	[%rd9+-28], %r5439;
	ld.local.u32 	%r5440, [%rd9+-24];
	ld.local.u32 	%r5441, [%rd7+8];
	or.b32  	%r5442, %r5440, %r5441;
	st.local.u32 	[%rd9+-24], %r5442;
	ld.local.u32 	%r5443, [%rd9+-20];
	ld.local.u32 	%r5444, [%rd7+12];
	or.b32  	%r5445, %r5443, %r5444;
	st.local.u32 	[%rd9+-20], %r5445;
	ld.local.u32 	%r5446, [%rd9+-16];
	ld.local.u32 	%r5447, [%rd8];
	or.b32  	%r5448, %r5446, %r5447;
	st.local.u32 	[%rd9+-16], %r5448;
	ld.local.u32 	%r5449, [%rd9+-12];
	ld.local.u32 	%r5450, [%rd8+4];
	or.b32  	%r5451, %r5449, %r5450;
	st.local.u32 	[%rd9+-12], %r5451;
	ld.local.u32 	%r5452, [%rd9+-8];
	ld.local.u32 	%r5453, [%rd8+8];
	or.b32  	%r5454, %r5452, %r5453;
	st.local.u32 	[%rd9+-8], %r5454;
	ld.local.u32 	%r5455, [%rd9+-4];
	ld.local.u32 	%r5456, [%rd8+12];
	or.b32  	%r5457, %r5455, %r5456;
	st.local.u32 	[%rd9+-4], %r5457;
	mov.b64	%rd1166, {%r5367, %r5364};
	mov.b64	%rd1167, {%r5373, %r5370};
	mov.b64	%rd1168, {%r5379, %r5376};
	mov.b64	%rd1169, {%r5385, %r5382};
	mov.b64	%rd1170, {%r5391, %r5388};
	mov.b64	%rd1171, {%r5397, %r5394};
	mov.b64	%rd1172, {%r5403, %r5400};
	mov.b64	%rd1173, {%r5409, %r5406};
	mov.b64	%rd1157, {%r5415, %r5412};
	mov.b64	%rd1156, {%r5421, %r5418};
	mov.b64	%rd1155, {%r5427, %r5424};
	mov.b64	%rd1154, {%r5433, %r5430};
	mov.b64	%rd1153, {%r5439, %r5436};
	mov.b64	%rd1152, {%r5445, %r5442};
	mov.b64	%rd1151, {%r5451, %r5448};
	mov.b64	%rd1150, {%r5457, %r5454};
	ld.local.u64 	%rd26, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5459}, %rd26;
	}
	shf.r.wrap.b32 	%r5460, %r5459, %r5458, 14;
	shf.r.wrap.b32 	%r5461, %r5458, %r5459, 14;
	mov.b64 	%rd130, {%r5461, %r5460};
	shf.r.wrap.b32 	%r5462, %r5459, %r5458, 18;
	shf.r.wrap.b32 	%r5463, %r5458, %r5459, 18;
	mov.b64 	%rd131, {%r5463, %r5462};
	xor.b64  	%rd132, %rd130, %rd131;
	shf.l.wrap.b32 	%r5464, %r5458, %r5459, 23;
	shf.l.wrap.b32 	%r5465, %r5459, %r5458, 23;
	mov.b64 	%rd133, {%r5465, %r5464};
	xor.b64  	%rd134, %rd132, %rd133;
	ld.local.u64 	%rd27, [%rd9+-144];
	ld.local.u64 	%rd28, [%rd9+-152];
	xor.b64  	%rd135, %rd27, %rd28;
	and.b64  	%rd136, %rd135, %rd26;
	xor.b64  	%rd137, %rd136, %rd27;
	ld.local.u64 	%rd29, [%rd9+-136];
	add.s64 	%rd138, %rd134, %rd29;
	add.s64 	%rd139, %rd138, %rd137;
	add.s64 	%rd140, %rd139, %rd1166;
	ld.const.u64 	%rd141, [k_sha512];
	add.s64 	%rd142, %rd140, %rd141;
	ld.local.u64 	%rd30, [%rd9+-168];
	add.s64 	%rd143, %rd142, %rd30;
	ld.local.u64 	%rd31, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5466,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5467}, %rd31;
	}
	shf.r.wrap.b32 	%r5468, %r5467, %r5466, 28;
	shf.r.wrap.b32 	%r5469, %r5466, %r5467, 28;
	mov.b64 	%rd144, {%r5469, %r5468};
	shf.l.wrap.b32 	%r5470, %r5466, %r5467, 30;
	shf.l.wrap.b32 	%r5471, %r5467, %r5466, 30;
	mov.b64 	%rd145, {%r5471, %r5470};
	xor.b64  	%rd146, %rd144, %rd145;
	shf.l.wrap.b32 	%r5472, %r5466, %r5467, 25;
	shf.l.wrap.b32 	%r5473, %r5467, %r5466, 25;
	mov.b64 	%rd147, {%r5473, %r5472};
	xor.b64  	%rd148, %rd146, %rd147;
	ld.local.u64 	%rd32, [%rd9+-184];
	and.b64  	%rd149, %rd32, %rd31;
	xor.b64  	%rd150, %rd32, %rd31;
	ld.local.u64 	%rd33, [%rd9+-176];
	and.b64  	%rd151, %rd33, %rd150;
	or.b64  	%rd152, %rd151, %rd149;
	add.s64 	%rd153, %rd152, %rd148;
	add.s64 	%rd154, %rd153, %rd142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd143;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 14;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 14;
	mov.b64 	%rd155, {%r5477, %r5476};
	shf.r.wrap.b32 	%r5478, %r5475, %r5474, 18;
	shf.r.wrap.b32 	%r5479, %r5474, %r5475, 18;
	mov.b64 	%rd156, {%r5479, %r5478};
	xor.b64  	%rd157, %rd155, %rd156;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 23;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 23;
	mov.b64 	%rd158, {%r5481, %r5480};
	xor.b64  	%rd159, %rd157, %rd158;
	xor.b64  	%rd160, %rd28, %rd26;
	and.b64  	%rd161, %rd143, %rd160;
	xor.b64  	%rd162, %rd161, %rd28;
	add.s64 	%rd163, %rd1167, %rd27;
	ld.const.u64 	%rd164, [k_sha512+8];
	add.s64 	%rd165, %rd163, %rd164;
	add.s64 	%rd166, %rd165, %rd162;
	add.s64 	%rd167, %rd166, %rd159;
	add.s64 	%rd168, %rd167, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd154;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 28;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 28;
	mov.b64 	%rd169, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 30;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 30;
	mov.b64 	%rd170, {%r5487, %r5486};
	xor.b64  	%rd171, %rd169, %rd170;
	shf.l.wrap.b32 	%r5488, %r5482, %r5483, 25;
	shf.l.wrap.b32 	%r5489, %r5483, %r5482, 25;
	mov.b64 	%rd172, {%r5489, %r5488};
	xor.b64  	%rd173, %rd171, %rd172;
	and.b64  	%rd174, %rd154, %rd31;
	xor.b64  	%rd175, %rd154, %rd31;
	and.b64  	%rd176, %rd175, %rd32;
	or.b64  	%rd177, %rd176, %rd174;
	add.s64 	%rd178, %rd173, %rd177;
	add.s64 	%rd179, %rd178, %rd167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5490,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5491}, %rd168;
	}
	shf.r.wrap.b32 	%r5492, %r5491, %r5490, 14;
	shf.r.wrap.b32 	%r5493, %r5490, %r5491, 14;
	mov.b64 	%rd180, {%r5493, %r5492};
	shf.r.wrap.b32 	%r5494, %r5491, %r5490, 18;
	shf.r.wrap.b32 	%r5495, %r5490, %r5491, 18;
	mov.b64 	%rd181, {%r5495, %r5494};
	xor.b64  	%rd182, %rd180, %rd181;
	shf.l.wrap.b32 	%r5496, %r5490, %r5491, 23;
	shf.l.wrap.b32 	%r5497, %r5491, %r5490, 23;
	mov.b64 	%rd183, {%r5497, %r5496};
	xor.b64  	%rd184, %rd182, %rd183;
	xor.b64  	%rd185, %rd143, %rd26;
	and.b64  	%rd186, %rd168, %rd185;
	xor.b64  	%rd187, %rd186, %rd26;
	add.s64 	%rd188, %rd1168, %rd28;
	ld.const.u64 	%rd189, [k_sha512+16];
	add.s64 	%rd190, %rd188, %rd189;
	add.s64 	%rd191, %rd190, %rd187;
	add.s64 	%rd192, %rd191, %rd184;
	add.s64 	%rd193, %rd192, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5498,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5499}, %rd179;
	}
	shf.r.wrap.b32 	%r5500, %r5499, %r5498, 28;
	shf.r.wrap.b32 	%r5501, %r5498, %r5499, 28;
	mov.b64 	%rd194, {%r5501, %r5500};
	shf.l.wrap.b32 	%r5502, %r5498, %r5499, 30;
	shf.l.wrap.b32 	%r5503, %r5499, %r5498, 30;
	mov.b64 	%rd195, {%r5503, %r5502};
	xor.b64  	%rd196, %rd194, %rd195;
	shf.l.wrap.b32 	%r5504, %r5498, %r5499, 25;
	shf.l.wrap.b32 	%r5505, %r5499, %r5498, 25;
	mov.b64 	%rd197, {%r5505, %r5504};
	xor.b64  	%rd198, %rd196, %rd197;
	and.b64  	%rd199, %rd179, %rd154;
	xor.b64  	%rd200, %rd179, %rd154;
	and.b64  	%rd201, %rd200, %rd31;
	or.b64  	%rd202, %rd201, %rd199;
	add.s64 	%rd203, %rd198, %rd202;
	add.s64 	%rd204, %rd203, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5506,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5507}, %rd193;
	}
	shf.r.wrap.b32 	%r5508, %r5507, %r5506, 14;
	shf.r.wrap.b32 	%r5509, %r5506, %r5507, 14;
	mov.b64 	%rd205, {%r5509, %r5508};
	shf.r.wrap.b32 	%r5510, %r5507, %r5506, 18;
	shf.r.wrap.b32 	%r5511, %r5506, %r5507, 18;
	mov.b64 	%rd206, {%r5511, %r5510};
	xor.b64  	%rd207, %rd205, %rd206;
	shf.l.wrap.b32 	%r5512, %r5506, %r5507, 23;
	shf.l.wrap.b32 	%r5513, %r5507, %r5506, 23;
	mov.b64 	%rd208, {%r5513, %r5512};
	xor.b64  	%rd209, %rd207, %rd208;
	xor.b64  	%rd210, %rd168, %rd143;
	and.b64  	%rd211, %rd193, %rd210;
	xor.b64  	%rd212, %rd211, %rd143;
	add.s64 	%rd213, %rd1169, %rd26;
	ld.const.u64 	%rd214, [k_sha512+24];
	add.s64 	%rd215, %rd213, %rd214;
	add.s64 	%rd216, %rd215, %rd212;
	add.s64 	%rd217, %rd216, %rd209;
	add.s64 	%rd218, %rd217, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5514,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5515}, %rd204;
	}
	shf.r.wrap.b32 	%r5516, %r5515, %r5514, 28;
	shf.r.wrap.b32 	%r5517, %r5514, %r5515, 28;
	mov.b64 	%rd219, {%r5517, %r5516};
	shf.l.wrap.b32 	%r5518, %r5514, %r5515, 30;
	shf.l.wrap.b32 	%r5519, %r5515, %r5514, 30;
	mov.b64 	%rd220, {%r5519, %r5518};
	xor.b64  	%rd221, %rd219, %rd220;
	shf.l.wrap.b32 	%r5520, %r5514, %r5515, 25;
	shf.l.wrap.b32 	%r5521, %r5515, %r5514, 25;
	mov.b64 	%rd222, {%r5521, %r5520};
	xor.b64  	%rd223, %rd221, %rd222;
	and.b64  	%rd224, %rd204, %rd179;
	xor.b64  	%rd225, %rd204, %rd179;
	and.b64  	%rd226, %rd225, %rd154;
	or.b64  	%rd227, %rd226, %rd224;
	add.s64 	%rd228, %rd223, %rd227;
	add.s64 	%rd229, %rd228, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5522,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5523}, %rd218;
	}
	shf.r.wrap.b32 	%r5524, %r5523, %r5522, 14;
	shf.r.wrap.b32 	%r5525, %r5522, %r5523, 14;
	mov.b64 	%rd230, {%r5525, %r5524};
	shf.r.wrap.b32 	%r5526, %r5523, %r5522, 18;
	shf.r.wrap.b32 	%r5527, %r5522, %r5523, 18;
	mov.b64 	%rd231, {%r5527, %r5526};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r5528, %r5522, %r5523, 23;
	shf.l.wrap.b32 	%r5529, %r5523, %r5522, 23;
	mov.b64 	%rd233, {%r5529, %r5528};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd193, %rd168;
	and.b64  	%rd236, %rd218, %rd235;
	xor.b64  	%rd237, %rd236, %rd168;
	add.s64 	%rd238, %rd143, %rd1170;
	ld.const.u64 	%rd239, [k_sha512+32];
	add.s64 	%rd240, %rd238, %rd239;
	add.s64 	%rd241, %rd240, %rd237;
	add.s64 	%rd242, %rd241, %rd234;
	add.s64 	%rd243, %rd242, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5530,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5531}, %rd229;
	}
	shf.r.wrap.b32 	%r5532, %r5531, %r5530, 28;
	shf.r.wrap.b32 	%r5533, %r5530, %r5531, 28;
	mov.b64 	%rd244, {%r5533, %r5532};
	shf.l.wrap.b32 	%r5534, %r5530, %r5531, 30;
	shf.l.wrap.b32 	%r5535, %r5531, %r5530, 30;
	mov.b64 	%rd245, {%r5535, %r5534};
	xor.b64  	%rd246, %rd244, %rd245;
	shf.l.wrap.b32 	%r5536, %r5530, %r5531, 25;
	shf.l.wrap.b32 	%r5537, %r5531, %r5530, 25;
	mov.b64 	%rd247, {%r5537, %r5536};
	xor.b64  	%rd248, %rd246, %rd247;
	and.b64  	%rd249, %rd229, %rd204;
	xor.b64  	%rd250, %rd229, %rd204;
	and.b64  	%rd251, %rd250, %rd179;
	or.b64  	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd248, %rd252;
	add.s64 	%rd254, %rd253, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5538,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5539}, %rd243;
	}
	shf.r.wrap.b32 	%r5540, %r5539, %r5538, 14;
	shf.r.wrap.b32 	%r5541, %r5538, %r5539, 14;
	mov.b64 	%rd255, {%r5541, %r5540};
	shf.r.wrap.b32 	%r5542, %r5539, %r5538, 18;
	shf.r.wrap.b32 	%r5543, %r5538, %r5539, 18;
	mov.b64 	%rd256, {%r5543, %r5542};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r5544, %r5538, %r5539, 23;
	shf.l.wrap.b32 	%r5545, %r5539, %r5538, 23;
	mov.b64 	%rd258, {%r5545, %r5544};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd218, %rd193;
	and.b64  	%rd261, %rd243, %rd260;
	xor.b64  	%rd262, %rd261, %rd193;
	ld.const.u64 	%rd263, [k_sha512+40];
	add.s64 	%rd264, %rd263, %rd1171;
	add.s64 	%rd265, %rd264, %rd168;
	add.s64 	%rd266, %rd265, %rd262;
	add.s64 	%rd267, %rd266, %rd259;
	add.s64 	%rd268, %rd267, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5546,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5547}, %rd254;
	}
	shf.r.wrap.b32 	%r5548, %r5547, %r5546, 28;
	shf.r.wrap.b32 	%r5549, %r5546, %r5547, 28;
	mov.b64 	%rd269, {%r5549, %r5548};
	shf.l.wrap.b32 	%r5550, %r5546, %r5547, 30;
	shf.l.wrap.b32 	%r5551, %r5547, %r5546, 30;
	mov.b64 	%rd270, {%r5551, %r5550};
	xor.b64  	%rd271, %rd269, %rd270;
	shf.l.wrap.b32 	%r5552, %r5546, %r5547, 25;
	shf.l.wrap.b32 	%r5553, %r5547, %r5546, 25;
	mov.b64 	%rd272, {%r5553, %r5552};
	xor.b64  	%rd273, %rd271, %rd272;
	and.b64  	%rd274, %rd254, %rd229;
	xor.b64  	%rd275, %rd254, %rd229;
	and.b64  	%rd276, %rd275, %rd204;
	or.b64  	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd273, %rd277;
	add.s64 	%rd279, %rd278, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5554,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5555}, %rd268;
	}
	shf.r.wrap.b32 	%r5556, %r5555, %r5554, 14;
	shf.r.wrap.b32 	%r5557, %r5554, %r5555, 14;
	mov.b64 	%rd280, {%r5557, %r5556};
	shf.r.wrap.b32 	%r5558, %r5555, %r5554, 18;
	shf.r.wrap.b32 	%r5559, %r5554, %r5555, 18;
	mov.b64 	%rd281, {%r5559, %r5558};
	xor.b64  	%rd282, %rd280, %rd281;
	shf.l.wrap.b32 	%r5560, %r5554, %r5555, 23;
	shf.l.wrap.b32 	%r5561, %r5555, %r5554, 23;
	mov.b64 	%rd283, {%r5561, %r5560};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd243, %rd218;
	and.b64  	%rd286, %rd268, %rd285;
	xor.b64  	%rd287, %rd286, %rd218;
	ld.const.u64 	%rd288, [k_sha512+48];
	add.s64 	%rd289, %rd288, %rd1172;
	add.s64 	%rd290, %rd289, %rd193;
	add.s64 	%rd291, %rd290, %rd287;
	add.s64 	%rd292, %rd291, %rd284;
	add.s64 	%rd293, %rd292, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5562,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5563}, %rd279;
	}
	shf.r.wrap.b32 	%r5564, %r5563, %r5562, 28;
	shf.r.wrap.b32 	%r5565, %r5562, %r5563, 28;
	mov.b64 	%rd294, {%r5565, %r5564};
	shf.l.wrap.b32 	%r5566, %r5562, %r5563, 30;
	shf.l.wrap.b32 	%r5567, %r5563, %r5562, 30;
	mov.b64 	%rd295, {%r5567, %r5566};
	xor.b64  	%rd296, %rd294, %rd295;
	shf.l.wrap.b32 	%r5568, %r5562, %r5563, 25;
	shf.l.wrap.b32 	%r5569, %r5563, %r5562, 25;
	mov.b64 	%rd297, {%r5569, %r5568};
	xor.b64  	%rd298, %rd296, %rd297;
	and.b64  	%rd299, %rd279, %rd254;
	xor.b64  	%rd300, %rd279, %rd254;
	and.b64  	%rd301, %rd300, %rd229;
	or.b64  	%rd302, %rd301, %rd299;
	add.s64 	%rd303, %rd298, %rd302;
	add.s64 	%rd304, %rd303, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5571}, %rd293;
	}
	shf.r.wrap.b32 	%r5572, %r5571, %r5570, 14;
	shf.r.wrap.b32 	%r5573, %r5570, %r5571, 14;
	mov.b64 	%rd305, {%r5573, %r5572};
	shf.r.wrap.b32 	%r5574, %r5571, %r5570, 18;
	shf.r.wrap.b32 	%r5575, %r5570, %r5571, 18;
	mov.b64 	%rd306, {%r5575, %r5574};
	xor.b64  	%rd307, %rd305, %rd306;
	shf.l.wrap.b32 	%r5576, %r5570, %r5571, 23;
	shf.l.wrap.b32 	%r5577, %r5571, %r5570, 23;
	mov.b64 	%rd308, {%r5577, %r5576};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd268, %rd243;
	and.b64  	%rd311, %rd293, %rd310;
	xor.b64  	%rd312, %rd311, %rd243;
	ld.const.u64 	%rd313, [k_sha512+56];
	add.s64 	%rd314, %rd313, %rd1173;
	add.s64 	%rd315, %rd314, %rd218;
	add.s64 	%rd316, %rd315, %rd312;
	add.s64 	%rd317, %rd316, %rd309;
	add.s64 	%rd318, %rd317, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd304;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 28;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 28;
	mov.b64 	%rd319, {%r5581, %r5580};
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 30;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 30;
	mov.b64 	%rd320, {%r5583, %r5582};
	xor.b64  	%rd321, %rd319, %rd320;
	shf.l.wrap.b32 	%r5584, %r5578, %r5579, 25;
	shf.l.wrap.b32 	%r5585, %r5579, %r5578, 25;
	mov.b64 	%rd322, {%r5585, %r5584};
	xor.b64  	%rd323, %rd321, %rd322;
	and.b64  	%rd324, %rd304, %rd279;
	xor.b64  	%rd325, %rd304, %rd279;
	and.b64  	%rd326, %rd325, %rd254;
	or.b64  	%rd327, %rd326, %rd324;
	add.s64 	%rd328, %rd323, %rd327;
	add.s64 	%rd329, %rd328, %rd317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd318;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 14;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 14;
	mov.b64 	%rd330, {%r5589, %r5588};
	shf.r.wrap.b32 	%r5590, %r5587, %r5586, 18;
	shf.r.wrap.b32 	%r5591, %r5586, %r5587, 18;
	mov.b64 	%rd331, {%r5591, %r5590};
	xor.b64  	%rd332, %rd330, %rd331;
	shf.l.wrap.b32 	%r5592, %r5586, %r5587, 23;
	shf.l.wrap.b32 	%r5593, %r5587, %r5586, 23;
	mov.b64 	%rd333, {%r5593, %r5592};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd293, %rd268;
	and.b64  	%rd336, %rd318, %rd335;
	xor.b64  	%rd337, %rd336, %rd268;
	ld.const.u64 	%rd338, [k_sha512+64];
	add.s64 	%rd339, %rd338, %rd1157;
	add.s64 	%rd340, %rd339, %rd243;
	add.s64 	%rd341, %rd340, %rd337;
	add.s64 	%rd342, %rd341, %rd334;
	add.s64 	%rd343, %rd342, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5594,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5595}, %rd329;
	}
	shf.r.wrap.b32 	%r5596, %r5595, %r5594, 28;
	shf.r.wrap.b32 	%r5597, %r5594, %r5595, 28;
	mov.b64 	%rd344, {%r5597, %r5596};
	shf.l.wrap.b32 	%r5598, %r5594, %r5595, 30;
	shf.l.wrap.b32 	%r5599, %r5595, %r5594, 30;
	mov.b64 	%rd345, {%r5599, %r5598};
	xor.b64  	%rd346, %rd344, %rd345;
	shf.l.wrap.b32 	%r5600, %r5594, %r5595, 25;
	shf.l.wrap.b32 	%r5601, %r5595, %r5594, 25;
	mov.b64 	%rd347, {%r5601, %r5600};
	xor.b64  	%rd348, %rd346, %rd347;
	and.b64  	%rd349, %rd329, %rd304;
	xor.b64  	%rd350, %rd329, %rd304;
	and.b64  	%rd351, %rd350, %rd279;
	or.b64  	%rd352, %rd351, %rd349;
	add.s64 	%rd353, %rd348, %rd352;
	add.s64 	%rd354, %rd353, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5603}, %rd343;
	}
	shf.r.wrap.b32 	%r5604, %r5603, %r5602, 14;
	shf.r.wrap.b32 	%r5605, %r5602, %r5603, 14;
	mov.b64 	%rd355, {%r5605, %r5604};
	shf.r.wrap.b32 	%r5606, %r5603, %r5602, 18;
	shf.r.wrap.b32 	%r5607, %r5602, %r5603, 18;
	mov.b64 	%rd356, {%r5607, %r5606};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r5608, %r5602, %r5603, 23;
	shf.l.wrap.b32 	%r5609, %r5603, %r5602, 23;
	mov.b64 	%rd358, {%r5609, %r5608};
	xor.b64  	%rd359, %rd357, %rd358;
	xor.b64  	%rd360, %rd318, %rd293;
	and.b64  	%rd361, %rd343, %rd360;
	xor.b64  	%rd362, %rd361, %rd293;
	ld.const.u64 	%rd363, [k_sha512+72];
	add.s64 	%rd364, %rd363, %rd1156;
	add.s64 	%rd365, %rd364, %rd268;
	add.s64 	%rd366, %rd365, %rd362;
	add.s64 	%rd367, %rd366, %rd359;
	add.s64 	%rd368, %rd367, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5610,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5611}, %rd354;
	}
	shf.r.wrap.b32 	%r5612, %r5611, %r5610, 28;
	shf.r.wrap.b32 	%r5613, %r5610, %r5611, 28;
	mov.b64 	%rd369, {%r5613, %r5612};
	shf.l.wrap.b32 	%r5614, %r5610, %r5611, 30;
	shf.l.wrap.b32 	%r5615, %r5611, %r5610, 30;
	mov.b64 	%rd370, {%r5615, %r5614};
	xor.b64  	%rd371, %rd369, %rd370;
	shf.l.wrap.b32 	%r5616, %r5610, %r5611, 25;
	shf.l.wrap.b32 	%r5617, %r5611, %r5610, 25;
	mov.b64 	%rd372, {%r5617, %r5616};
	xor.b64  	%rd373, %rd371, %rd372;
	and.b64  	%rd374, %rd354, %rd329;
	xor.b64  	%rd375, %rd354, %rd329;
	and.b64  	%rd376, %rd375, %rd304;
	or.b64  	%rd377, %rd376, %rd374;
	add.s64 	%rd378, %rd373, %rd377;
	add.s64 	%rd379, %rd378, %rd367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5618,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5619}, %rd368;
	}
	shf.r.wrap.b32 	%r5620, %r5619, %r5618, 14;
	shf.r.wrap.b32 	%r5621, %r5618, %r5619, 14;
	mov.b64 	%rd380, {%r5621, %r5620};
	shf.r.wrap.b32 	%r5622, %r5619, %r5618, 18;
	shf.r.wrap.b32 	%r5623, %r5618, %r5619, 18;
	mov.b64 	%rd381, {%r5623, %r5622};
	xor.b64  	%rd382, %rd380, %rd381;
	shf.l.wrap.b32 	%r5624, %r5618, %r5619, 23;
	shf.l.wrap.b32 	%r5625, %r5619, %r5618, 23;
	mov.b64 	%rd383, {%r5625, %r5624};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd343, %rd318;
	and.b64  	%rd386, %rd368, %rd385;
	xor.b64  	%rd387, %rd386, %rd318;
	ld.const.u64 	%rd388, [k_sha512+80];
	add.s64 	%rd389, %rd388, %rd1155;
	add.s64 	%rd390, %rd389, %rd293;
	add.s64 	%rd391, %rd390, %rd387;
	add.s64 	%rd392, %rd391, %rd384;
	add.s64 	%rd393, %rd392, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5626,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5627}, %rd379;
	}
	shf.r.wrap.b32 	%r5628, %r5627, %r5626, 28;
	shf.r.wrap.b32 	%r5629, %r5626, %r5627, 28;
	mov.b64 	%rd394, {%r5629, %r5628};
	shf.l.wrap.b32 	%r5630, %r5626, %r5627, 30;
	shf.l.wrap.b32 	%r5631, %r5627, %r5626, 30;
	mov.b64 	%rd395, {%r5631, %r5630};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r5632, %r5626, %r5627, 25;
	shf.l.wrap.b32 	%r5633, %r5627, %r5626, 25;
	mov.b64 	%rd397, {%r5633, %r5632};
	xor.b64  	%rd398, %rd396, %rd397;
	and.b64  	%rd399, %rd379, %rd354;
	xor.b64  	%rd400, %rd379, %rd354;
	and.b64  	%rd401, %rd400, %rd329;
	or.b64  	%rd402, %rd401, %rd399;
	add.s64 	%rd403, %rd398, %rd402;
	add.s64 	%rd404, %rd403, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5634,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5635}, %rd393;
	}
	shf.r.wrap.b32 	%r5636, %r5635, %r5634, 14;
	shf.r.wrap.b32 	%r5637, %r5634, %r5635, 14;
	mov.b64 	%rd405, {%r5637, %r5636};
	shf.r.wrap.b32 	%r5638, %r5635, %r5634, 18;
	shf.r.wrap.b32 	%r5639, %r5634, %r5635, 18;
	mov.b64 	%rd406, {%r5639, %r5638};
	xor.b64  	%rd407, %rd405, %rd406;
	shf.l.wrap.b32 	%r5640, %r5634, %r5635, 23;
	shf.l.wrap.b32 	%r5641, %r5635, %r5634, 23;
	mov.b64 	%rd408, {%r5641, %r5640};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd368, %rd343;
	and.b64  	%rd411, %rd393, %rd410;
	xor.b64  	%rd412, %rd411, %rd343;
	ld.const.u64 	%rd413, [k_sha512+88];
	add.s64 	%rd414, %rd413, %rd1154;
	add.s64 	%rd415, %rd414, %rd318;
	add.s64 	%rd416, %rd415, %rd412;
	add.s64 	%rd417, %rd416, %rd409;
	add.s64 	%rd418, %rd417, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5642,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5643}, %rd404;
	}
	shf.r.wrap.b32 	%r5644, %r5643, %r5642, 28;
	shf.r.wrap.b32 	%r5645, %r5642, %r5643, 28;
	mov.b64 	%rd419, {%r5645, %r5644};
	shf.l.wrap.b32 	%r5646, %r5642, %r5643, 30;
	shf.l.wrap.b32 	%r5647, %r5643, %r5642, 30;
	mov.b64 	%rd420, {%r5647, %r5646};
	xor.b64  	%rd421, %rd419, %rd420;
	shf.l.wrap.b32 	%r5648, %r5642, %r5643, 25;
	shf.l.wrap.b32 	%r5649, %r5643, %r5642, 25;
	mov.b64 	%rd422, {%r5649, %r5648};
	xor.b64  	%rd423, %rd421, %rd422;
	and.b64  	%rd424, %rd404, %rd379;
	xor.b64  	%rd425, %rd404, %rd379;
	and.b64  	%rd426, %rd425, %rd354;
	or.b64  	%rd427, %rd426, %rd424;
	add.s64 	%rd428, %rd423, %rd427;
	add.s64 	%rd429, %rd428, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5651}, %rd418;
	}
	shf.r.wrap.b32 	%r5652, %r5651, %r5650, 14;
	shf.r.wrap.b32 	%r5653, %r5650, %r5651, 14;
	mov.b64 	%rd430, {%r5653, %r5652};
	shf.r.wrap.b32 	%r5654, %r5651, %r5650, 18;
	shf.r.wrap.b32 	%r5655, %r5650, %r5651, 18;
	mov.b64 	%rd431, {%r5655, %r5654};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r5656, %r5650, %r5651, 23;
	shf.l.wrap.b32 	%r5657, %r5651, %r5650, 23;
	mov.b64 	%rd433, {%r5657, %r5656};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd393, %rd368;
	and.b64  	%rd436, %rd418, %rd435;
	xor.b64  	%rd437, %rd436, %rd368;
	ld.const.u64 	%rd438, [k_sha512+96];
	add.s64 	%rd439, %rd438, %rd1153;
	add.s64 	%rd440, %rd439, %rd343;
	add.s64 	%rd441, %rd440, %rd437;
	add.s64 	%rd442, %rd441, %rd434;
	add.s64 	%rd1165, %rd442, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5658,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5659}, %rd429;
	}
	shf.r.wrap.b32 	%r5660, %r5659, %r5658, 28;
	shf.r.wrap.b32 	%r5661, %r5658, %r5659, 28;
	mov.b64 	%rd443, {%r5661, %r5660};
	shf.l.wrap.b32 	%r5662, %r5658, %r5659, 30;
	shf.l.wrap.b32 	%r5663, %r5659, %r5658, 30;
	mov.b64 	%rd444, {%r5663, %r5662};
	xor.b64  	%rd445, %rd443, %rd444;
	shf.l.wrap.b32 	%r5664, %r5658, %r5659, 25;
	shf.l.wrap.b32 	%r5665, %r5659, %r5658, 25;
	mov.b64 	%rd446, {%r5665, %r5664};
	xor.b64  	%rd447, %rd445, %rd446;
	and.b64  	%rd448, %rd429, %rd404;
	xor.b64  	%rd449, %rd429, %rd404;
	and.b64  	%rd450, %rd449, %rd379;
	or.b64  	%rd451, %rd450, %rd448;
	add.s64 	%rd452, %rd447, %rd451;
	add.s64 	%rd1161, %rd452, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5666,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5667}, %rd1165;
	}
	shf.r.wrap.b32 	%r5668, %r5667, %r5666, 14;
	shf.r.wrap.b32 	%r5669, %r5666, %r5667, 14;
	mov.b64 	%rd453, {%r5669, %r5668};
	shf.r.wrap.b32 	%r5670, %r5667, %r5666, 18;
	shf.r.wrap.b32 	%r5671, %r5666, %r5667, 18;
	mov.b64 	%rd454, {%r5671, %r5670};
	xor.b64  	%rd455, %rd453, %rd454;
	shf.l.wrap.b32 	%r5672, %r5666, %r5667, 23;
	shf.l.wrap.b32 	%r5673, %r5667, %r5666, 23;
	mov.b64 	%rd456, {%r5673, %r5672};
	xor.b64  	%rd457, %rd455, %rd456;
	xor.b64  	%rd458, %rd418, %rd393;
	and.b64  	%rd459, %rd1165, %rd458;
	xor.b64  	%rd460, %rd459, %rd393;
	ld.const.u64 	%rd461, [k_sha512+104];
	add.s64 	%rd462, %rd461, %rd1152;
	add.s64 	%rd463, %rd462, %rd368;
	add.s64 	%rd464, %rd463, %rd460;
	add.s64 	%rd465, %rd464, %rd457;
	add.s64 	%rd1164, %rd465, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5675}, %rd1161;
	}
	shf.r.wrap.b32 	%r5676, %r5675, %r5674, 28;
	shf.r.wrap.b32 	%r5677, %r5674, %r5675, 28;
	mov.b64 	%rd466, {%r5677, %r5676};
	shf.l.wrap.b32 	%r5678, %r5674, %r5675, 30;
	shf.l.wrap.b32 	%r5679, %r5675, %r5674, 30;
	mov.b64 	%rd467, {%r5679, %r5678};
	xor.b64  	%rd468, %rd466, %rd467;
	shf.l.wrap.b32 	%r5680, %r5674, %r5675, 25;
	shf.l.wrap.b32 	%r5681, %r5675, %r5674, 25;
	mov.b64 	%rd469, {%r5681, %r5680};
	xor.b64  	%rd470, %rd468, %rd469;
	and.b64  	%rd471, %rd1161, %rd429;
	xor.b64  	%rd472, %rd1161, %rd429;
	and.b64  	%rd473, %rd472, %rd404;
	or.b64  	%rd474, %rd473, %rd471;
	add.s64 	%rd475, %rd470, %rd474;
	add.s64 	%rd1160, %rd475, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd1164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5683}, %rd1164;
	}
	shf.r.wrap.b32 	%r5684, %r5683, %r5682, 14;
	shf.r.wrap.b32 	%r5685, %r5682, %r5683, 14;
	mov.b64 	%rd476, {%r5685, %r5684};
	shf.r.wrap.b32 	%r5686, %r5683, %r5682, 18;
	shf.r.wrap.b32 	%r5687, %r5682, %r5683, 18;
	mov.b64 	%rd477, {%r5687, %r5686};
	xor.b64  	%rd478, %rd476, %rd477;
	shf.l.wrap.b32 	%r5688, %r5682, %r5683, 23;
	shf.l.wrap.b32 	%r5689, %r5683, %r5682, 23;
	mov.b64 	%rd479, {%r5689, %r5688};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd1165, %rd418;
	and.b64  	%rd482, %rd1164, %rd481;
	xor.b64  	%rd483, %rd482, %rd418;
	ld.const.u64 	%rd484, [k_sha512+112];
	add.s64 	%rd485, %rd484, %rd1151;
	add.s64 	%rd486, %rd485, %rd393;
	add.s64 	%rd487, %rd486, %rd483;
	add.s64 	%rd488, %rd487, %rd480;
	add.s64 	%rd1163, %rd488, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5691}, %rd1160;
	}
	shf.r.wrap.b32 	%r5692, %r5691, %r5690, 28;
	shf.r.wrap.b32 	%r5693, %r5690, %r5691, 28;
	mov.b64 	%rd489, {%r5693, %r5692};
	shf.l.wrap.b32 	%r5694, %r5690, %r5691, 30;
	shf.l.wrap.b32 	%r5695, %r5691, %r5690, 30;
	mov.b64 	%rd490, {%r5695, %r5694};
	xor.b64  	%rd491, %rd489, %rd490;
	shf.l.wrap.b32 	%r5696, %r5690, %r5691, 25;
	shf.l.wrap.b32 	%r5697, %r5691, %r5690, 25;
	mov.b64 	%rd492, {%r5697, %r5696};
	xor.b64  	%rd493, %rd491, %rd492;
	and.b64  	%rd494, %rd1160, %rd1161;
	xor.b64  	%rd495, %rd1160, %rd1161;
	and.b64  	%rd496, %rd495, %rd429;
	or.b64  	%rd497, %rd496, %rd494;
	add.s64 	%rd498, %rd493, %rd497;
	add.s64 	%rd1159, %rd498, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5698,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5699}, %rd1163;
	}
	shf.r.wrap.b32 	%r5700, %r5699, %r5698, 14;
	shf.r.wrap.b32 	%r5701, %r5698, %r5699, 14;
	mov.b64 	%rd499, {%r5701, %r5700};
	shf.r.wrap.b32 	%r5702, %r5699, %r5698, 18;
	shf.r.wrap.b32 	%r5703, %r5698, %r5699, 18;
	mov.b64 	%rd500, {%r5703, %r5702};
	xor.b64  	%rd501, %rd499, %rd500;
	shf.l.wrap.b32 	%r5704, %r5698, %r5699, 23;
	shf.l.wrap.b32 	%r5705, %r5699, %r5698, 23;
	mov.b64 	%rd502, {%r5705, %r5704};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd1164, %rd1165;
	and.b64  	%rd505, %rd1163, %rd504;
	xor.b64  	%rd506, %rd505, %rd1165;
	ld.const.u64 	%rd507, [k_sha512+120];
	add.s64 	%rd508, %rd507, %rd1150;
	add.s64 	%rd509, %rd508, %rd418;
	add.s64 	%rd510, %rd509, %rd506;
	add.s64 	%rd511, %rd510, %rd503;
	add.s64 	%rd1162, %rd511, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5706,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5707}, %rd1159;
	}
	shf.r.wrap.b32 	%r5708, %r5707, %r5706, 28;
	shf.r.wrap.b32 	%r5709, %r5706, %r5707, 28;
	mov.b64 	%rd512, {%r5709, %r5708};
	shf.l.wrap.b32 	%r5710, %r5706, %r5707, 30;
	shf.l.wrap.b32 	%r5711, %r5707, %r5706, 30;
	mov.b64 	%rd513, {%r5711, %r5710};
	xor.b64  	%rd514, %rd512, %rd513;
	shf.l.wrap.b32 	%r5712, %r5706, %r5707, 25;
	shf.l.wrap.b32 	%r5713, %r5707, %r5706, 25;
	mov.b64 	%rd515, {%r5713, %r5712};
	xor.b64  	%rd516, %rd514, %rd515;
	and.b64  	%rd517, %rd1159, %rd1160;
	xor.b64  	%rd518, %rd1159, %rd1160;
	and.b64  	%rd519, %rd518, %rd1161;
	or.b64  	%rd520, %rd519, %rd517;
	add.s64 	%rd521, %rd516, %rd520;
	add.s64 	%rd1158, %rd521, %rd511;
	mov.u32 	%r8459, 16;

BB1_91:
	shr.u64 	%rd522, %rd1151, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5714}, %rd1151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd1151;
	}
	shf.l.wrap.b32 	%r5716, %r5715, %r5714, 3;
	shf.l.wrap.b32 	%r5717, %r5714, %r5715, 3;
	mov.b64 	%rd523, {%r5717, %r5716};
	xor.b64  	%rd524, %rd523, %rd522;
	shf.r.wrap.b32 	%r5718, %r5714, %r5715, 19;
	shf.r.wrap.b32 	%r5719, %r5715, %r5714, 19;
	mov.b64 	%rd525, {%r5719, %r5718};
	xor.b64  	%rd526, %rd524, %rd525;
	shr.u64 	%rd527, %rd1167, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd1167;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 8;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 8;
	mov.b64 	%rd528, {%r5723, %r5722};
	xor.b64  	%rd529, %rd528, %rd527;
	shf.r.wrap.b32 	%r5724, %r5721, %r5720, 1;
	shf.r.wrap.b32 	%r5725, %r5720, %r5721, 1;
	mov.b64 	%rd530, {%r5725, %r5724};
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd531, %rd1166;
	add.s64 	%rd533, %rd532, %rd1156;
	add.s64 	%rd1166, %rd533, %rd526;
	shr.u64 	%rd534, %rd1150, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5727,%dummy}, %rd1150;
	}
	shf.l.wrap.b32 	%r5728, %r5727, %r5726, 3;
	shf.l.wrap.b32 	%r5729, %r5726, %r5727, 3;
	mov.b64 	%rd535, {%r5729, %r5728};
	xor.b64  	%rd536, %rd535, %rd534;
	shf.r.wrap.b32 	%r5730, %r5726, %r5727, 19;
	shf.r.wrap.b32 	%r5731, %r5727, %r5726, 19;
	mov.b64 	%rd537, {%r5731, %r5730};
	xor.b64  	%rd538, %rd536, %rd537;
	shr.u64 	%rd539, %rd1168, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5732,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd1168;
	}
	shf.r.wrap.b32 	%r5734, %r5733, %r5732, 8;
	shf.r.wrap.b32 	%r5735, %r5732, %r5733, 8;
	mov.b64 	%rd540, {%r5735, %r5734};
	xor.b64  	%rd541, %rd540, %rd539;
	shf.r.wrap.b32 	%r5736, %r5733, %r5732, 1;
	shf.r.wrap.b32 	%r5737, %r5732, %r5733, 1;
	mov.b64 	%rd542, {%r5737, %r5736};
	xor.b64  	%rd543, %rd541, %rd542;
	add.s64 	%rd544, %rd543, %rd1167;
	add.s64 	%rd545, %rd544, %rd1155;
	add.s64 	%rd1167, %rd545, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5738,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5739}, %rd1166;
	}
	shf.r.wrap.b32 	%r5740, %r5739, %r5738, 19;
	shf.r.wrap.b32 	%r5741, %r5738, %r5739, 19;
	mov.b64 	%rd546, {%r5741, %r5740};
	shf.l.wrap.b32 	%r5742, %r5738, %r5739, 3;
	shf.l.wrap.b32 	%r5743, %r5739, %r5738, 3;
	mov.b64 	%rd547, {%r5743, %r5742};
	shr.u64 	%rd548, %rd1166, 6;
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd549, %rd546;
	shr.u64 	%rd551, %rd1169, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd1169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd1169;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 8;
	mov.b64 	%rd552, {%r5747, %r5746};
	xor.b64  	%rd553, %rd552, %rd551;
	shf.r.wrap.b32 	%r5748, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5749, %r5744, %r5745, 1;
	mov.b64 	%rd554, {%r5749, %r5748};
	xor.b64  	%rd555, %rd553, %rd554;
	add.s64 	%rd556, %rd555, %rd1168;
	add.s64 	%rd557, %rd556, %rd1154;
	add.s64 	%rd1168, %rd557, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd1167;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 19;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 19;
	mov.b64 	%rd558, {%r5753, %r5752};
	shf.l.wrap.b32 	%r5754, %r5750, %r5751, 3;
	shf.l.wrap.b32 	%r5755, %r5751, %r5750, 3;
	mov.b64 	%rd559, {%r5755, %r5754};
	shr.u64 	%rd560, %rd1167, 6;
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd561, %rd558;
	shr.u64 	%rd563, %rd1170, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd1170;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 8;
	mov.b64 	%rd564, {%r5759, %r5758};
	xor.b64  	%rd565, %rd564, %rd563;
	shf.r.wrap.b32 	%r5760, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5761, %r5756, %r5757, 1;
	mov.b64 	%rd566, {%r5761, %r5760};
	xor.b64  	%rd567, %rd565, %rd566;
	add.s64 	%rd568, %rd567, %rd1169;
	add.s64 	%rd569, %rd568, %rd1153;
	add.s64 	%rd1169, %rd569, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd1168;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 19;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 19;
	mov.b64 	%rd570, {%r5765, %r5764};
	shf.l.wrap.b32 	%r5766, %r5762, %r5763, 3;
	shf.l.wrap.b32 	%r5767, %r5763, %r5762, 3;
	mov.b64 	%rd571, {%r5767, %r5766};
	shr.u64 	%rd572, %rd1168, 6;
	xor.b64  	%rd573, %rd571, %rd572;
	xor.b64  	%rd574, %rd573, %rd570;
	shr.u64 	%rd575, %rd1171, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd1171;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 8;
	mov.b64 	%rd576, {%r5771, %r5770};
	xor.b64  	%rd577, %rd576, %rd575;
	shf.r.wrap.b32 	%r5772, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5773, %r5768, %r5769, 1;
	mov.b64 	%rd578, {%r5773, %r5772};
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd579, %rd1170;
	add.s64 	%rd581, %rd580, %rd1152;
	add.s64 	%rd1170, %rd581, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd1169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd1169;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 19;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 19;
	mov.b64 	%rd582, {%r5777, %r5776};
	shf.l.wrap.b32 	%r5778, %r5774, %r5775, 3;
	shf.l.wrap.b32 	%r5779, %r5775, %r5774, 3;
	mov.b64 	%rd583, {%r5779, %r5778};
	shr.u64 	%rd584, %rd1169, 6;
	xor.b64  	%rd585, %rd583, %rd584;
	xor.b64  	%rd586, %rd585, %rd582;
	shr.u64 	%rd587, %rd1172, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd1172;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 8;
	mov.b64 	%rd588, {%r5783, %r5782};
	xor.b64  	%rd589, %rd588, %rd587;
	shf.r.wrap.b32 	%r5784, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r5785, %r5780, %r5781, 1;
	mov.b64 	%rd590, {%r5785, %r5784};
	xor.b64  	%rd591, %rd589, %rd590;
	add.s64 	%rd592, %rd591, %rd1171;
	add.s64 	%rd593, %rd592, %rd1151;
	add.s64 	%rd1171, %rd593, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd1170;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 19;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 19;
	mov.b64 	%rd594, {%r5789, %r5788};
	shf.l.wrap.b32 	%r5790, %r5786, %r5787, 3;
	shf.l.wrap.b32 	%r5791, %r5787, %r5786, 3;
	mov.b64 	%rd595, {%r5791, %r5790};
	shr.u64 	%rd596, %rd1170, 6;
	xor.b64  	%rd597, %rd595, %rd596;
	xor.b64  	%rd598, %rd597, %rd594;
	shr.u64 	%rd599, %rd1173, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd1173;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 8;
	mov.b64 	%rd600, {%r5795, %r5794};
	xor.b64  	%rd601, %rd600, %rd599;
	shf.r.wrap.b32 	%r5796, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r5797, %r5792, %r5793, 1;
	mov.b64 	%rd602, {%r5797, %r5796};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd603, %rd1172;
	add.s64 	%rd605, %rd604, %rd1150;
	add.s64 	%rd1172, %rd605, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd1171;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 19;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 19;
	mov.b64 	%rd606, {%r5801, %r5800};
	shf.l.wrap.b32 	%r5802, %r5798, %r5799, 3;
	shf.l.wrap.b32 	%r5803, %r5799, %r5798, 3;
	mov.b64 	%rd607, {%r5803, %r5802};
	shr.u64 	%rd608, %rd1171, 6;
	xor.b64  	%rd609, %rd607, %rd608;
	xor.b64  	%rd610, %rd609, %rd606;
	shr.u64 	%rd611, %rd1157, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd1157;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 8;
	mov.b64 	%rd612, {%r5807, %r5806};
	xor.b64  	%rd613, %rd612, %rd611;
	shf.r.wrap.b32 	%r5808, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r5809, %r5804, %r5805, 1;
	mov.b64 	%rd614, {%r5809, %r5808};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd615, %rd1173;
	add.s64 	%rd617, %rd616, %rd1166;
	add.s64 	%rd1173, %rd617, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd1172;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 19;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 19;
	mov.b64 	%rd618, {%r5813, %r5812};
	shf.l.wrap.b32 	%r5814, %r5810, %r5811, 3;
	shf.l.wrap.b32 	%r5815, %r5811, %r5810, 3;
	mov.b64 	%rd619, {%r5815, %r5814};
	shr.u64 	%rd620, %rd1172, 6;
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd621, %rd618;
	shr.u64 	%rd623, %rd1156, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd1156;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 8;
	mov.b64 	%rd624, {%r5819, %r5818};
	xor.b64  	%rd625, %rd624, %rd623;
	shf.r.wrap.b32 	%r5820, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r5821, %r5816, %r5817, 1;
	mov.b64 	%rd626, {%r5821, %r5820};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd627, %rd1157;
	add.s64 	%rd629, %rd628, %rd1167;
	add.s64 	%rd1157, %rd629, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd1173;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 19;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 19;
	mov.b64 	%rd630, {%r5825, %r5824};
	shf.l.wrap.b32 	%r5826, %r5822, %r5823, 3;
	shf.l.wrap.b32 	%r5827, %r5823, %r5822, 3;
	mov.b64 	%rd631, {%r5827, %r5826};
	shr.u64 	%rd632, %rd1173, 6;
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd633, %rd630;
	shr.u64 	%rd635, %rd1155, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd1155;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 8;
	mov.b64 	%rd636, {%r5831, %r5830};
	xor.b64  	%rd637, %rd636, %rd635;
	shf.r.wrap.b32 	%r5832, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r5833, %r5828, %r5829, 1;
	mov.b64 	%rd638, {%r5833, %r5832};
	xor.b64  	%rd639, %rd637, %rd638;
	add.s64 	%rd640, %rd639, %rd1156;
	add.s64 	%rd641, %rd640, %rd1168;
	add.s64 	%rd1156, %rd641, %rd634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd1157;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 19;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 19;
	mov.b64 	%rd642, {%r5837, %r5836};
	shf.l.wrap.b32 	%r5838, %r5834, %r5835, 3;
	shf.l.wrap.b32 	%r5839, %r5835, %r5834, 3;
	mov.b64 	%rd643, {%r5839, %r5838};
	shr.u64 	%rd644, %rd1157, 6;
	xor.b64  	%rd645, %rd643, %rd644;
	xor.b64  	%rd646, %rd645, %rd642;
	shr.u64 	%rd647, %rd1154, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd1154;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 8;
	mov.b64 	%rd648, {%r5843, %r5842};
	xor.b64  	%rd649, %rd648, %rd647;
	shf.r.wrap.b32 	%r5844, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r5845, %r5840, %r5841, 1;
	mov.b64 	%rd650, {%r5845, %r5844};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd651, %rd1155;
	add.s64 	%rd653, %rd652, %rd1169;
	add.s64 	%rd1155, %rd653, %rd646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd1156;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 19;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 19;
	mov.b64 	%rd654, {%r5849, %r5848};
	shf.l.wrap.b32 	%r5850, %r5846, %r5847, 3;
	shf.l.wrap.b32 	%r5851, %r5847, %r5846, 3;
	mov.b64 	%rd655, {%r5851, %r5850};
	shr.u64 	%rd656, %rd1156, 6;
	xor.b64  	%rd657, %rd655, %rd656;
	xor.b64  	%rd658, %rd657, %rd654;
	shr.u64 	%rd659, %rd1153, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd1153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd1153;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 8;
	mov.b64 	%rd660, {%r5855, %r5854};
	xor.b64  	%rd661, %rd660, %rd659;
	shf.r.wrap.b32 	%r5856, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r5857, %r5852, %r5853, 1;
	mov.b64 	%rd662, {%r5857, %r5856};
	xor.b64  	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd663, %rd1154;
	add.s64 	%rd665, %rd664, %rd1170;
	add.s64 	%rd1154, %rd665, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd1155;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 19;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 19;
	mov.b64 	%rd666, {%r5861, %r5860};
	shf.l.wrap.b32 	%r5862, %r5858, %r5859, 3;
	shf.l.wrap.b32 	%r5863, %r5859, %r5858, 3;
	mov.b64 	%rd667, {%r5863, %r5862};
	shr.u64 	%rd668, %rd1155, 6;
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd669, %rd666;
	shr.u64 	%rd671, %rd1152, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd1152;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 8;
	mov.b64 	%rd672, {%r5867, %r5866};
	xor.b64  	%rd673, %rd672, %rd671;
	shf.r.wrap.b32 	%r5868, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r5869, %r5864, %r5865, 1;
	mov.b64 	%rd674, {%r5869, %r5868};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd675, %rd1153;
	add.s64 	%rd677, %rd676, %rd1171;
	add.s64 	%rd1153, %rd677, %rd670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd1154;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 19;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 19;
	mov.b64 	%rd678, {%r5873, %r5872};
	shf.l.wrap.b32 	%r5874, %r5870, %r5871, 3;
	shf.l.wrap.b32 	%r5875, %r5871, %r5870, 3;
	mov.b64 	%rd679, {%r5875, %r5874};
	shr.u64 	%rd680, %rd1154, 6;
	xor.b64  	%rd681, %rd679, %rd680;
	xor.b64  	%rd682, %rd681, %rd678;
	shr.u64 	%rd683, %rd1151, 7;
	shf.r.wrap.b32 	%r5876, %r5714, %r5715, 8;
	shf.r.wrap.b32 	%r5877, %r5715, %r5714, 8;
	mov.b64 	%rd684, {%r5877, %r5876};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.r.wrap.b32 	%r5878, %r5714, %r5715, 1;
	shf.r.wrap.b32 	%r5879, %r5715, %r5714, 1;
	mov.b64 	%rd686, {%r5879, %r5878};
	xor.b64  	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd687, %rd1152;
	add.s64 	%rd689, %rd688, %rd1172;
	add.s64 	%rd1152, %rd689, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5880,%dummy}, %rd1153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd1153;
	}
	shf.r.wrap.b32 	%r5882, %r5881, %r5880, 19;
	shf.r.wrap.b32 	%r5883, %r5880, %r5881, 19;
	mov.b64 	%rd690, {%r5883, %r5882};
	shf.l.wrap.b32 	%r5884, %r5880, %r5881, 3;
	shf.l.wrap.b32 	%r5885, %r5881, %r5880, 3;
	mov.b64 	%rd691, {%r5885, %r5884};
	shr.u64 	%rd692, %rd1153, 6;
	xor.b64  	%rd693, %rd691, %rd692;
	xor.b64  	%rd694, %rd693, %rd690;
	shr.u64 	%rd695, %rd1150, 7;
	shf.r.wrap.b32 	%r5886, %r5726, %r5727, 8;
	shf.r.wrap.b32 	%r5887, %r5727, %r5726, 8;
	mov.b64 	%rd696, {%r5887, %r5886};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.r.wrap.b32 	%r5888, %r5726, %r5727, 1;
	shf.r.wrap.b32 	%r5889, %r5727, %r5726, 1;
	mov.b64 	%rd698, {%r5889, %r5888};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd699, %rd1151;
	add.s64 	%rd701, %rd700, %rd1173;
	add.s64 	%rd1151, %rd701, %rd694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5891}, %rd1152;
	}
	shf.r.wrap.b32 	%r5892, %r5891, %r5890, 19;
	shf.r.wrap.b32 	%r5893, %r5890, %r5891, 19;
	mov.b64 	%rd702, {%r5893, %r5892};
	shf.l.wrap.b32 	%r5894, %r5890, %r5891, 3;
	shf.l.wrap.b32 	%r5895, %r5891, %r5890, 3;
	mov.b64 	%rd703, {%r5895, %r5894};
	shr.u64 	%rd704, %rd1152, 6;
	xor.b64  	%rd705, %rd703, %rd704;
	xor.b64  	%rd706, %rd705, %rd702;
	shf.r.wrap.b32 	%r5896, %r5739, %r5738, 1;
	shf.r.wrap.b32 	%r5897, %r5738, %r5739, 1;
	mov.b64 	%rd707, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5739, %r5738, 8;
	shf.r.wrap.b32 	%r5899, %r5738, %r5739, 8;
	mov.b64 	%rd708, {%r5899, %r5898};
	shr.u64 	%rd709, %rd1166, 7;
	xor.b64  	%rd710, %rd708, %rd709;
	xor.b64  	%rd711, %rd710, %rd707;
	add.s64 	%rd712, %rd711, %rd1150;
	add.s64 	%rd713, %rd712, %rd1157;
	add.s64 	%rd1150, %rd713, %rd706;
	mul.wide.s32 	%rd714, %r8459, 8;
	mov.u64 	%rd715, k_sha512;
	add.s64 	%rd716, %rd715, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd1162;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 18;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 18;
	mov.b64 	%rd717, {%r5903, %r5902};
	shf.r.wrap.b32 	%r5904, %r5901, %r5900, 14;
	shf.r.wrap.b32 	%r5905, %r5900, %r5901, 14;
	mov.b64 	%rd718, {%r5905, %r5904};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r5906, %r5900, %r5901, 23;
	shf.l.wrap.b32 	%r5907, %r5901, %r5900, 23;
	mov.b64 	%rd720, {%r5907, %r5906};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd1163, %rd1164;
	and.b64  	%rd723, %rd1162, %rd722;
	xor.b64  	%rd724, %rd723, %rd1164;
	add.s64 	%rd725, %rd724, %rd1165;
	add.s64 	%rd726, %rd725, %rd721;
	add.s64 	%rd727, %rd726, %rd1166;
	ld.const.u64 	%rd728, [%rd716];
	add.s64 	%rd729, %rd727, %rd728;
	add.s64 	%rd730, %rd729, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5908}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5909,%dummy}, %rd1158;
	}
	shf.l.wrap.b32 	%r5910, %r5909, %r5908, 30;
	shf.l.wrap.b32 	%r5911, %r5908, %r5909, 30;
	mov.b64 	%rd731, {%r5911, %r5910};
	shf.r.wrap.b32 	%r5912, %r5908, %r5909, 28;
	shf.r.wrap.b32 	%r5913, %r5909, %r5908, 28;
	mov.b64 	%rd732, {%r5913, %r5912};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r5914, %r5909, %r5908, 25;
	shf.l.wrap.b32 	%r5915, %r5908, %r5909, 25;
	mov.b64 	%rd734, {%r5915, %r5914};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd1158, %rd1159;
	and.b64  	%rd737, %rd736, %rd1160;
	and.b64  	%rd738, %rd1158, %rd1159;
	or.b64  	%rd739, %rd737, %rd738;
	add.s64 	%rd740, %rd735, %rd739;
	add.s64 	%rd741, %rd740, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5916,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd730;
	}
	shf.r.wrap.b32 	%r5918, %r5917, %r5916, 14;
	shf.r.wrap.b32 	%r5919, %r5916, %r5917, 14;
	mov.b64 	%rd742, {%r5919, %r5918};
	shf.r.wrap.b32 	%r5920, %r5917, %r5916, 18;
	shf.r.wrap.b32 	%r5921, %r5916, %r5917, 18;
	mov.b64 	%rd743, {%r5921, %r5920};
	xor.b64  	%rd744, %rd742, %rd743;
	shf.l.wrap.b32 	%r5922, %r5916, %r5917, 23;
	shf.l.wrap.b32 	%r5923, %r5917, %r5916, 23;
	mov.b64 	%rd745, {%r5923, %r5922};
	xor.b64  	%rd746, %rd744, %rd745;
	xor.b64  	%rd747, %rd1162, %rd1163;
	and.b64  	%rd748, %rd730, %rd747;
	xor.b64  	%rd749, %rd748, %rd1163;
	add.s64 	%rd750, %rd1167, %rd1164;
	ld.const.u64 	%rd751, [%rd716+8];
	add.s64 	%rd752, %rd750, %rd751;
	add.s64 	%rd753, %rd752, %rd749;
	add.s64 	%rd754, %rd753, %rd746;
	add.s64 	%rd755, %rd754, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5924,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5925}, %rd741;
	}
	shf.r.wrap.b32 	%r5926, %r5925, %r5924, 28;
	shf.r.wrap.b32 	%r5927, %r5924, %r5925, 28;
	mov.b64 	%rd756, {%r5927, %r5926};
	shf.l.wrap.b32 	%r5928, %r5924, %r5925, 30;
	shf.l.wrap.b32 	%r5929, %r5925, %r5924, 30;
	mov.b64 	%rd757, {%r5929, %r5928};
	xor.b64  	%rd758, %rd756, %rd757;
	shf.l.wrap.b32 	%r5930, %r5924, %r5925, 25;
	shf.l.wrap.b32 	%r5931, %r5925, %r5924, 25;
	mov.b64 	%rd759, {%r5931, %r5930};
	xor.b64  	%rd760, %rd758, %rd759;
	and.b64  	%rd761, %rd741, %rd1158;
	xor.b64  	%rd762, %rd741, %rd1158;
	and.b64  	%rd763, %rd762, %rd1159;
	or.b64  	%rd764, %rd763, %rd761;
	add.s64 	%rd765, %rd760, %rd764;
	add.s64 	%rd766, %rd765, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5932,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5933}, %rd755;
	}
	shf.r.wrap.b32 	%r5934, %r5933, %r5932, 14;
	shf.r.wrap.b32 	%r5935, %r5932, %r5933, 14;
	mov.b64 	%rd767, {%r5935, %r5934};
	shf.r.wrap.b32 	%r5936, %r5933, %r5932, 18;
	shf.r.wrap.b32 	%r5937, %r5932, %r5933, 18;
	mov.b64 	%rd768, {%r5937, %r5936};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r5938, %r5932, %r5933, 23;
	shf.l.wrap.b32 	%r5939, %r5933, %r5932, 23;
	mov.b64 	%rd770, {%r5939, %r5938};
	xor.b64  	%rd771, %rd769, %rd770;
	xor.b64  	%rd772, %rd730, %rd1162;
	and.b64  	%rd773, %rd755, %rd772;
	xor.b64  	%rd774, %rd773, %rd1162;
	add.s64 	%rd775, %rd1168, %rd1163;
	ld.const.u64 	%rd776, [%rd716+16];
	add.s64 	%rd777, %rd775, %rd776;
	add.s64 	%rd778, %rd777, %rd774;
	add.s64 	%rd779, %rd778, %rd771;
	add.s64 	%rd780, %rd779, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5940,%dummy}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd766;
	}
	shf.r.wrap.b32 	%r5942, %r5941, %r5940, 28;
	shf.r.wrap.b32 	%r5943, %r5940, %r5941, 28;
	mov.b64 	%rd781, {%r5943, %r5942};
	shf.l.wrap.b32 	%r5944, %r5940, %r5941, 30;
	shf.l.wrap.b32 	%r5945, %r5941, %r5940, 30;
	mov.b64 	%rd782, {%r5945, %r5944};
	xor.b64  	%rd783, %rd781, %rd782;
	shf.l.wrap.b32 	%r5946, %r5940, %r5941, 25;
	shf.l.wrap.b32 	%r5947, %r5941, %r5940, 25;
	mov.b64 	%rd784, {%r5947, %r5946};
	xor.b64  	%rd785, %rd783, %rd784;
	and.b64  	%rd786, %rd766, %rd741;
	xor.b64  	%rd787, %rd766, %rd741;
	and.b64  	%rd788, %rd787, %rd1158;
	or.b64  	%rd789, %rd788, %rd786;
	add.s64 	%rd790, %rd785, %rd789;
	add.s64 	%rd791, %rd790, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5948,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5949}, %rd780;
	}
	shf.r.wrap.b32 	%r5950, %r5949, %r5948, 14;
	shf.r.wrap.b32 	%r5951, %r5948, %r5949, 14;
	mov.b64 	%rd792, {%r5951, %r5950};
	shf.r.wrap.b32 	%r5952, %r5949, %r5948, 18;
	shf.r.wrap.b32 	%r5953, %r5948, %r5949, 18;
	mov.b64 	%rd793, {%r5953, %r5952};
	xor.b64  	%rd794, %rd792, %rd793;
	shf.l.wrap.b32 	%r5954, %r5948, %r5949, 23;
	shf.l.wrap.b32 	%r5955, %r5949, %r5948, 23;
	mov.b64 	%rd795, {%r5955, %r5954};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd755, %rd730;
	and.b64  	%rd798, %rd780, %rd797;
	xor.b64  	%rd799, %rd798, %rd730;
	add.s64 	%rd800, %rd1169, %rd1162;
	ld.const.u64 	%rd801, [%rd716+24];
	add.s64 	%rd802, %rd800, %rd801;
	add.s64 	%rd803, %rd802, %rd799;
	add.s64 	%rd804, %rd803, %rd796;
	add.s64 	%rd805, %rd804, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5956,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5957}, %rd791;
	}
	shf.r.wrap.b32 	%r5958, %r5957, %r5956, 28;
	shf.r.wrap.b32 	%r5959, %r5956, %r5957, 28;
	mov.b64 	%rd806, {%r5959, %r5958};
	shf.l.wrap.b32 	%r5960, %r5956, %r5957, 30;
	shf.l.wrap.b32 	%r5961, %r5957, %r5956, 30;
	mov.b64 	%rd807, {%r5961, %r5960};
	xor.b64  	%rd808, %rd806, %rd807;
	shf.l.wrap.b32 	%r5962, %r5956, %r5957, 25;
	shf.l.wrap.b32 	%r5963, %r5957, %r5956, 25;
	mov.b64 	%rd809, {%r5963, %r5962};
	xor.b64  	%rd810, %rd808, %rd809;
	and.b64  	%rd811, %rd791, %rd766;
	xor.b64  	%rd812, %rd791, %rd766;
	and.b64  	%rd813, %rd812, %rd741;
	or.b64  	%rd814, %rd813, %rd811;
	add.s64 	%rd815, %rd810, %rd814;
	add.s64 	%rd816, %rd815, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5964,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5965}, %rd805;
	}
	shf.r.wrap.b32 	%r5966, %r5965, %r5964, 14;
	shf.r.wrap.b32 	%r5967, %r5964, %r5965, 14;
	mov.b64 	%rd817, {%r5967, %r5966};
	shf.r.wrap.b32 	%r5968, %r5965, %r5964, 18;
	shf.r.wrap.b32 	%r5969, %r5964, %r5965, 18;
	mov.b64 	%rd818, {%r5969, %r5968};
	xor.b64  	%rd819, %rd817, %rd818;
	shf.l.wrap.b32 	%r5970, %r5964, %r5965, 23;
	shf.l.wrap.b32 	%r5971, %r5965, %r5964, 23;
	mov.b64 	%rd820, {%r5971, %r5970};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd780, %rd755;
	and.b64  	%rd823, %rd805, %rd822;
	xor.b64  	%rd824, %rd823, %rd755;
	add.s64 	%rd825, %rd730, %rd1170;
	ld.const.u64 	%rd826, [%rd716+32];
	add.s64 	%rd827, %rd825, %rd826;
	add.s64 	%rd828, %rd827, %rd824;
	add.s64 	%rd829, %rd828, %rd821;
	add.s64 	%rd830, %rd829, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5972,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5973}, %rd816;
	}
	shf.r.wrap.b32 	%r5974, %r5973, %r5972, 28;
	shf.r.wrap.b32 	%r5975, %r5972, %r5973, 28;
	mov.b64 	%rd831, {%r5975, %r5974};
	shf.l.wrap.b32 	%r5976, %r5972, %r5973, 30;
	shf.l.wrap.b32 	%r5977, %r5973, %r5972, 30;
	mov.b64 	%rd832, {%r5977, %r5976};
	xor.b64  	%rd833, %rd831, %rd832;
	shf.l.wrap.b32 	%r5978, %r5972, %r5973, 25;
	shf.l.wrap.b32 	%r5979, %r5973, %r5972, 25;
	mov.b64 	%rd834, {%r5979, %r5978};
	xor.b64  	%rd835, %rd833, %rd834;
	and.b64  	%rd836, %rd816, %rd791;
	xor.b64  	%rd837, %rd816, %rd791;
	and.b64  	%rd838, %rd837, %rd766;
	or.b64  	%rd839, %rd838, %rd836;
	add.s64 	%rd840, %rd835, %rd839;
	add.s64 	%rd841, %rd840, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5980,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5981}, %rd830;
	}
	shf.r.wrap.b32 	%r5982, %r5981, %r5980, 14;
	shf.r.wrap.b32 	%r5983, %r5980, %r5981, 14;
	mov.b64 	%rd842, {%r5983, %r5982};
	shf.r.wrap.b32 	%r5984, %r5981, %r5980, 18;
	shf.r.wrap.b32 	%r5985, %r5980, %r5981, 18;
	mov.b64 	%rd843, {%r5985, %r5984};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r5986, %r5980, %r5981, 23;
	shf.l.wrap.b32 	%r5987, %r5981, %r5980, 23;
	mov.b64 	%rd845, {%r5987, %r5986};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd805, %rd780;
	and.b64  	%rd848, %rd830, %rd847;
	xor.b64  	%rd849, %rd848, %rd780;
	ld.const.u64 	%rd850, [%rd716+40];
	add.s64 	%rd851, %rd850, %rd1171;
	add.s64 	%rd852, %rd851, %rd755;
	add.s64 	%rd853, %rd852, %rd849;
	add.s64 	%rd854, %rd853, %rd846;
	add.s64 	%rd855, %rd854, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5988,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5989}, %rd841;
	}
	shf.r.wrap.b32 	%r5990, %r5989, %r5988, 28;
	shf.r.wrap.b32 	%r5991, %r5988, %r5989, 28;
	mov.b64 	%rd856, {%r5991, %r5990};
	shf.l.wrap.b32 	%r5992, %r5988, %r5989, 30;
	shf.l.wrap.b32 	%r5993, %r5989, %r5988, 30;
	mov.b64 	%rd857, {%r5993, %r5992};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r5994, %r5988, %r5989, 25;
	shf.l.wrap.b32 	%r5995, %r5989, %r5988, 25;
	mov.b64 	%rd859, {%r5995, %r5994};
	xor.b64  	%rd860, %rd858, %rd859;
	and.b64  	%rd861, %rd841, %rd816;
	xor.b64  	%rd862, %rd841, %rd816;
	and.b64  	%rd863, %rd862, %rd791;
	or.b64  	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd860, %rd864;
	add.s64 	%rd866, %rd865, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5996,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5997}, %rd855;
	}
	shf.r.wrap.b32 	%r5998, %r5997, %r5996, 14;
	shf.r.wrap.b32 	%r5999, %r5996, %r5997, 14;
	mov.b64 	%rd867, {%r5999, %r5998};
	shf.r.wrap.b32 	%r6000, %r5997, %r5996, 18;
	shf.r.wrap.b32 	%r6001, %r5996, %r5997, 18;
	mov.b64 	%rd868, {%r6001, %r6000};
	xor.b64  	%rd869, %rd867, %rd868;
	shf.l.wrap.b32 	%r6002, %r5996, %r5997, 23;
	shf.l.wrap.b32 	%r6003, %r5997, %r5996, 23;
	mov.b64 	%rd870, {%r6003, %r6002};
	xor.b64  	%rd871, %rd869, %rd870;
	xor.b64  	%rd872, %rd830, %rd805;
	and.b64  	%rd873, %rd855, %rd872;
	xor.b64  	%rd874, %rd873, %rd805;
	ld.const.u64 	%rd875, [%rd716+48];
	add.s64 	%rd876, %rd875, %rd1172;
	add.s64 	%rd877, %rd876, %rd780;
	add.s64 	%rd878, %rd877, %rd874;
	add.s64 	%rd879, %rd878, %rd871;
	add.s64 	%rd880, %rd879, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6004,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6005}, %rd866;
	}
	shf.r.wrap.b32 	%r6006, %r6005, %r6004, 28;
	shf.r.wrap.b32 	%r6007, %r6004, %r6005, 28;
	mov.b64 	%rd881, {%r6007, %r6006};
	shf.l.wrap.b32 	%r6008, %r6004, %r6005, 30;
	shf.l.wrap.b32 	%r6009, %r6005, %r6004, 30;
	mov.b64 	%rd882, {%r6009, %r6008};
	xor.b64  	%rd883, %rd881, %rd882;
	shf.l.wrap.b32 	%r6010, %r6004, %r6005, 25;
	shf.l.wrap.b32 	%r6011, %r6005, %r6004, 25;
	mov.b64 	%rd884, {%r6011, %r6010};
	xor.b64  	%rd885, %rd883, %rd884;
	and.b64  	%rd886, %rd866, %rd841;
	xor.b64  	%rd887, %rd866, %rd841;
	and.b64  	%rd888, %rd887, %rd816;
	or.b64  	%rd889, %rd888, %rd886;
	add.s64 	%rd890, %rd885, %rd889;
	add.s64 	%rd891, %rd890, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6012,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6013}, %rd880;
	}
	shf.r.wrap.b32 	%r6014, %r6013, %r6012, 14;
	shf.r.wrap.b32 	%r6015, %r6012, %r6013, 14;
	mov.b64 	%rd892, {%r6015, %r6014};
	shf.r.wrap.b32 	%r6016, %r6013, %r6012, 18;
	shf.r.wrap.b32 	%r6017, %r6012, %r6013, 18;
	mov.b64 	%rd893, {%r6017, %r6016};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r6018, %r6012, %r6013, 23;
	shf.l.wrap.b32 	%r6019, %r6013, %r6012, 23;
	mov.b64 	%rd895, {%r6019, %r6018};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd855, %rd830;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd830;
	ld.const.u64 	%rd900, [%rd716+56];
	add.s64 	%rd901, %rd900, %rd1173;
	add.s64 	%rd902, %rd901, %rd805;
	add.s64 	%rd903, %rd902, %rd899;
	add.s64 	%rd904, %rd903, %rd896;
	add.s64 	%rd905, %rd904, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd891;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 28;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 28;
	mov.b64 	%rd906, {%r6023, %r6022};
	shf.l.wrap.b32 	%r6024, %r6020, %r6021, 30;
	shf.l.wrap.b32 	%r6025, %r6021, %r6020, 30;
	mov.b64 	%rd907, {%r6025, %r6024};
	xor.b64  	%rd908, %rd906, %rd907;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 25;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 25;
	mov.b64 	%rd909, {%r6027, %r6026};
	xor.b64  	%rd910, %rd908, %rd909;
	and.b64  	%rd911, %rd891, %rd866;
	xor.b64  	%rd912, %rd891, %rd866;
	and.b64  	%rd913, %rd912, %rd841;
	or.b64  	%rd914, %rd913, %rd911;
	add.s64 	%rd915, %rd910, %rd914;
	add.s64 	%rd916, %rd915, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd905;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 14;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 14;
	mov.b64 	%rd917, {%r6031, %r6030};
	shf.r.wrap.b32 	%r6032, %r6029, %r6028, 18;
	shf.r.wrap.b32 	%r6033, %r6028, %r6029, 18;
	mov.b64 	%rd918, {%r6033, %r6032};
	xor.b64  	%rd919, %rd917, %rd918;
	shf.l.wrap.b32 	%r6034, %r6028, %r6029, 23;
	shf.l.wrap.b32 	%r6035, %r6029, %r6028, 23;
	mov.b64 	%rd920, {%r6035, %r6034};
	xor.b64  	%rd921, %rd919, %rd920;
	xor.b64  	%rd922, %rd880, %rd855;
	and.b64  	%rd923, %rd905, %rd922;
	xor.b64  	%rd924, %rd923, %rd855;
	ld.const.u64 	%rd925, [%rd716+64];
	add.s64 	%rd926, %rd925, %rd1157;
	add.s64 	%rd927, %rd926, %rd830;
	add.s64 	%rd928, %rd927, %rd924;
	add.s64 	%rd929, %rd928, %rd921;
	add.s64 	%rd930, %rd929, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6036,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6037}, %rd916;
	}
	shf.r.wrap.b32 	%r6038, %r6037, %r6036, 28;
	shf.r.wrap.b32 	%r6039, %r6036, %r6037, 28;
	mov.b64 	%rd931, {%r6039, %r6038};
	shf.l.wrap.b32 	%r6040, %r6036, %r6037, 30;
	shf.l.wrap.b32 	%r6041, %r6037, %r6036, 30;
	mov.b64 	%rd932, {%r6041, %r6040};
	xor.b64  	%rd933, %rd931, %rd932;
	shf.l.wrap.b32 	%r6042, %r6036, %r6037, 25;
	shf.l.wrap.b32 	%r6043, %r6037, %r6036, 25;
	mov.b64 	%rd934, {%r6043, %r6042};
	xor.b64  	%rd935, %rd933, %rd934;
	and.b64  	%rd936, %rd916, %rd891;
	xor.b64  	%rd937, %rd916, %rd891;
	and.b64  	%rd938, %rd937, %rd866;
	or.b64  	%rd939, %rd938, %rd936;
	add.s64 	%rd940, %rd935, %rd939;
	add.s64 	%rd941, %rd940, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6044,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6045}, %rd930;
	}
	shf.r.wrap.b32 	%r6046, %r6045, %r6044, 14;
	shf.r.wrap.b32 	%r6047, %r6044, %r6045, 14;
	mov.b64 	%rd942, {%r6047, %r6046};
	shf.r.wrap.b32 	%r6048, %r6045, %r6044, 18;
	shf.r.wrap.b32 	%r6049, %r6044, %r6045, 18;
	mov.b64 	%rd943, {%r6049, %r6048};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r6050, %r6044, %r6045, 23;
	shf.l.wrap.b32 	%r6051, %r6045, %r6044, 23;
	mov.b64 	%rd945, {%r6051, %r6050};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd905, %rd880;
	and.b64  	%rd948, %rd930, %rd947;
	xor.b64  	%rd949, %rd948, %rd880;
	ld.const.u64 	%rd950, [%rd716+72];
	add.s64 	%rd951, %rd950, %rd1156;
	add.s64 	%rd952, %rd951, %rd855;
	add.s64 	%rd953, %rd952, %rd949;
	add.s64 	%rd954, %rd953, %rd946;
	add.s64 	%rd955, %rd954, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6052,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd941;
	}
	shf.r.wrap.b32 	%r6054, %r6053, %r6052, 28;
	shf.r.wrap.b32 	%r6055, %r6052, %r6053, 28;
	mov.b64 	%rd956, {%r6055, %r6054};
	shf.l.wrap.b32 	%r6056, %r6052, %r6053, 30;
	shf.l.wrap.b32 	%r6057, %r6053, %r6052, 30;
	mov.b64 	%rd957, {%r6057, %r6056};
	xor.b64  	%rd958, %rd956, %rd957;
	shf.l.wrap.b32 	%r6058, %r6052, %r6053, 25;
	shf.l.wrap.b32 	%r6059, %r6053, %r6052, 25;
	mov.b64 	%rd959, {%r6059, %r6058};
	xor.b64  	%rd960, %rd958, %rd959;
	and.b64  	%rd961, %rd941, %rd916;
	xor.b64  	%rd962, %rd941, %rd916;
	and.b64  	%rd963, %rd962, %rd891;
	or.b64  	%rd964, %rd963, %rd961;
	add.s64 	%rd965, %rd960, %rd964;
	add.s64 	%rd966, %rd965, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6060,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd955;
	}
	shf.r.wrap.b32 	%r6062, %r6061, %r6060, 14;
	shf.r.wrap.b32 	%r6063, %r6060, %r6061, 14;
	mov.b64 	%rd967, {%r6063, %r6062};
	shf.r.wrap.b32 	%r6064, %r6061, %r6060, 18;
	shf.r.wrap.b32 	%r6065, %r6060, %r6061, 18;
	mov.b64 	%rd968, {%r6065, %r6064};
	xor.b64  	%rd969, %rd967, %rd968;
	shf.l.wrap.b32 	%r6066, %r6060, %r6061, 23;
	shf.l.wrap.b32 	%r6067, %r6061, %r6060, 23;
	mov.b64 	%rd970, {%r6067, %r6066};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd930, %rd905;
	and.b64  	%rd973, %rd955, %rd972;
	xor.b64  	%rd974, %rd973, %rd905;
	ld.const.u64 	%rd975, [%rd716+80];
	add.s64 	%rd976, %rd975, %rd1155;
	add.s64 	%rd977, %rd976, %rd880;
	add.s64 	%rd978, %rd977, %rd974;
	add.s64 	%rd979, %rd978, %rd971;
	add.s64 	%rd980, %rd979, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6068,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6069}, %rd966;
	}
	shf.r.wrap.b32 	%r6070, %r6069, %r6068, 28;
	shf.r.wrap.b32 	%r6071, %r6068, %r6069, 28;
	mov.b64 	%rd981, {%r6071, %r6070};
	shf.l.wrap.b32 	%r6072, %r6068, %r6069, 30;
	shf.l.wrap.b32 	%r6073, %r6069, %r6068, 30;
	mov.b64 	%rd982, {%r6073, %r6072};
	xor.b64  	%rd983, %rd981, %rd982;
	shf.l.wrap.b32 	%r6074, %r6068, %r6069, 25;
	shf.l.wrap.b32 	%r6075, %r6069, %r6068, 25;
	mov.b64 	%rd984, {%r6075, %r6074};
	xor.b64  	%rd985, %rd983, %rd984;
	and.b64  	%rd986, %rd966, %rd941;
	xor.b64  	%rd987, %rd966, %rd941;
	and.b64  	%rd988, %rd987, %rd916;
	or.b64  	%rd989, %rd988, %rd986;
	add.s64 	%rd990, %rd985, %rd989;
	add.s64 	%rd991, %rd990, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6076,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6077}, %rd980;
	}
	shf.r.wrap.b32 	%r6078, %r6077, %r6076, 14;
	shf.r.wrap.b32 	%r6079, %r6076, %r6077, 14;
	mov.b64 	%rd992, {%r6079, %r6078};
	shf.r.wrap.b32 	%r6080, %r6077, %r6076, 18;
	shf.r.wrap.b32 	%r6081, %r6076, %r6077, 18;
	mov.b64 	%rd993, {%r6081, %r6080};
	xor.b64  	%rd994, %rd992, %rd993;
	shf.l.wrap.b32 	%r6082, %r6076, %r6077, 23;
	shf.l.wrap.b32 	%r6083, %r6077, %r6076, 23;
	mov.b64 	%rd995, {%r6083, %r6082};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd955, %rd930;
	and.b64  	%rd998, %rd980, %rd997;
	xor.b64  	%rd999, %rd998, %rd930;
	ld.const.u64 	%rd1000, [%rd716+88];
	add.s64 	%rd1001, %rd1000, %rd1154;
	add.s64 	%rd1002, %rd1001, %rd905;
	add.s64 	%rd1003, %rd1002, %rd999;
	add.s64 	%rd1004, %rd1003, %rd996;
	add.s64 	%rd1005, %rd1004, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6084,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6085}, %rd991;
	}
	shf.r.wrap.b32 	%r6086, %r6085, %r6084, 28;
	shf.r.wrap.b32 	%r6087, %r6084, %r6085, 28;
	mov.b64 	%rd1006, {%r6087, %r6086};
	shf.l.wrap.b32 	%r6088, %r6084, %r6085, 30;
	shf.l.wrap.b32 	%r6089, %r6085, %r6084, 30;
	mov.b64 	%rd1007, {%r6089, %r6088};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r6090, %r6084, %r6085, 25;
	shf.l.wrap.b32 	%r6091, %r6085, %r6084, 25;
	mov.b64 	%rd1009, {%r6091, %r6090};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	and.b64  	%rd1011, %rd991, %rd966;
	xor.b64  	%rd1012, %rd991, %rd966;
	and.b64  	%rd1013, %rd1012, %rd941;
	or.b64  	%rd1014, %rd1013, %rd1011;
	add.s64 	%rd1015, %rd1010, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6092,%dummy}, %rd1005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6093}, %rd1005;
	}
	shf.r.wrap.b32 	%r6094, %r6093, %r6092, 14;
	shf.r.wrap.b32 	%r6095, %r6092, %r6093, 14;
	mov.b64 	%rd1017, {%r6095, %r6094};
	shf.r.wrap.b32 	%r6096, %r6093, %r6092, 18;
	shf.r.wrap.b32 	%r6097, %r6092, %r6093, 18;
	mov.b64 	%rd1018, {%r6097, %r6096};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	shf.l.wrap.b32 	%r6098, %r6092, %r6093, 23;
	shf.l.wrap.b32 	%r6099, %r6093, %r6092, 23;
	mov.b64 	%rd1020, {%r6099, %r6098};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd980, %rd955;
	and.b64  	%rd1023, %rd1005, %rd1022;
	xor.b64  	%rd1024, %rd1023, %rd955;
	ld.const.u64 	%rd1025, [%rd716+96];
	add.s64 	%rd1026, %rd1025, %rd1153;
	add.s64 	%rd1027, %rd1026, %rd930;
	add.s64 	%rd1028, %rd1027, %rd1024;
	add.s64 	%rd1029, %rd1028, %rd1021;
	add.s64 	%rd1165, %rd1029, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6100,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6101}, %rd1016;
	}
	shf.r.wrap.b32 	%r6102, %r6101, %r6100, 28;
	shf.r.wrap.b32 	%r6103, %r6100, %r6101, 28;
	mov.b64 	%rd1030, {%r6103, %r6102};
	shf.l.wrap.b32 	%r6104, %r6100, %r6101, 30;
	shf.l.wrap.b32 	%r6105, %r6101, %r6100, 30;
	mov.b64 	%rd1031, {%r6105, %r6104};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	shf.l.wrap.b32 	%r6106, %r6100, %r6101, 25;
	shf.l.wrap.b32 	%r6107, %r6101, %r6100, 25;
	mov.b64 	%rd1033, {%r6107, %r6106};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	and.b64  	%rd1035, %rd1016, %rd991;
	xor.b64  	%rd1036, %rd1016, %rd991;
	and.b64  	%rd1037, %rd1036, %rd966;
	or.b64  	%rd1038, %rd1037, %rd1035;
	add.s64 	%rd1039, %rd1034, %rd1038;
	add.s64 	%rd1161, %rd1039, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6108,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6109}, %rd1165;
	}
	shf.r.wrap.b32 	%r6110, %r6109, %r6108, 14;
	shf.r.wrap.b32 	%r6111, %r6108, %r6109, 14;
	mov.b64 	%rd1040, {%r6111, %r6110};
	shf.r.wrap.b32 	%r6112, %r6109, %r6108, 18;
	shf.r.wrap.b32 	%r6113, %r6108, %r6109, 18;
	mov.b64 	%rd1041, {%r6113, %r6112};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	shf.l.wrap.b32 	%r6114, %r6108, %r6109, 23;
	shf.l.wrap.b32 	%r6115, %r6109, %r6108, 23;
	mov.b64 	%rd1043, {%r6115, %r6114};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	xor.b64  	%rd1045, %rd1005, %rd980;
	and.b64  	%rd1046, %rd1165, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd980;
	ld.const.u64 	%rd1048, [%rd716+104];
	add.s64 	%rd1049, %rd1048, %rd1152;
	add.s64 	%rd1050, %rd1049, %rd955;
	add.s64 	%rd1051, %rd1050, %rd1047;
	add.s64 	%rd1052, %rd1051, %rd1044;
	add.s64 	%rd1164, %rd1052, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6116,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd1161;
	}
	shf.r.wrap.b32 	%r6118, %r6117, %r6116, 28;
	shf.r.wrap.b32 	%r6119, %r6116, %r6117, 28;
	mov.b64 	%rd1053, {%r6119, %r6118};
	shf.l.wrap.b32 	%r6120, %r6116, %r6117, 30;
	shf.l.wrap.b32 	%r6121, %r6117, %r6116, 30;
	mov.b64 	%rd1054, {%r6121, %r6120};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	shf.l.wrap.b32 	%r6122, %r6116, %r6117, 25;
	shf.l.wrap.b32 	%r6123, %r6117, %r6116, 25;
	mov.b64 	%rd1056, {%r6123, %r6122};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	and.b64  	%rd1058, %rd1161, %rd1016;
	xor.b64  	%rd1059, %rd1161, %rd1016;
	and.b64  	%rd1060, %rd1059, %rd991;
	or.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd1057, %rd1061;
	add.s64 	%rd1160, %rd1062, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6124,%dummy}, %rd1164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd1164;
	}
	shf.r.wrap.b32 	%r6126, %r6125, %r6124, 14;
	shf.r.wrap.b32 	%r6127, %r6124, %r6125, 14;
	mov.b64 	%rd1063, {%r6127, %r6126};
	shf.r.wrap.b32 	%r6128, %r6125, %r6124, 18;
	shf.r.wrap.b32 	%r6129, %r6124, %r6125, 18;
	mov.b64 	%rd1064, {%r6129, %r6128};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	shf.l.wrap.b32 	%r6130, %r6124, %r6125, 23;
	shf.l.wrap.b32 	%r6131, %r6125, %r6124, 23;
	mov.b64 	%rd1066, {%r6131, %r6130};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	xor.b64  	%rd1068, %rd1165, %rd1005;
	and.b64  	%rd1069, %rd1164, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1005;
	ld.const.u64 	%rd1071, [%rd716+112];
	add.s64 	%rd1072, %rd1071, %rd1151;
	add.s64 	%rd1073, %rd1072, %rd980;
	add.s64 	%rd1074, %rd1073, %rd1070;
	add.s64 	%rd1075, %rd1074, %rd1067;
	add.s64 	%rd1163, %rd1075, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6132,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6133}, %rd1160;
	}
	shf.r.wrap.b32 	%r6134, %r6133, %r6132, 28;
	shf.r.wrap.b32 	%r6135, %r6132, %r6133, 28;
	mov.b64 	%rd1076, {%r6135, %r6134};
	shf.l.wrap.b32 	%r6136, %r6132, %r6133, 30;
	shf.l.wrap.b32 	%r6137, %r6133, %r6132, 30;
	mov.b64 	%rd1077, {%r6137, %r6136};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	shf.l.wrap.b32 	%r6138, %r6132, %r6133, 25;
	shf.l.wrap.b32 	%r6139, %r6133, %r6132, 25;
	mov.b64 	%rd1079, {%r6139, %r6138};
	xor.b64  	%rd1080, %rd1078, %rd1079;
	and.b64  	%rd1081, %rd1160, %rd1161;
	xor.b64  	%rd1082, %rd1160, %rd1161;
	and.b64  	%rd1083, %rd1082, %rd1016;
	or.b64  	%rd1084, %rd1083, %rd1081;
	add.s64 	%rd1085, %rd1080, %rd1084;
	add.s64 	%rd1159, %rd1085, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6140,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6141}, %rd1163;
	}
	shf.r.wrap.b32 	%r6142, %r6141, %r6140, 14;
	shf.r.wrap.b32 	%r6143, %r6140, %r6141, 14;
	mov.b64 	%rd1086, {%r6143, %r6142};
	shf.r.wrap.b32 	%r6144, %r6141, %r6140, 18;
	shf.r.wrap.b32 	%r6145, %r6140, %r6141, 18;
	mov.b64 	%rd1087, {%r6145, %r6144};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	shf.l.wrap.b32 	%r6146, %r6140, %r6141, 23;
	shf.l.wrap.b32 	%r6147, %r6141, %r6140, 23;
	mov.b64 	%rd1089, {%r6147, %r6146};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1164, %rd1165;
	and.b64  	%rd1092, %rd1163, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1165;
	ld.const.u64 	%rd1094, [%rd716+120];
	add.s64 	%rd1095, %rd1094, %rd1150;
	add.s64 	%rd1096, %rd1095, %rd1005;
	add.s64 	%rd1097, %rd1096, %rd1093;
	add.s64 	%rd1098, %rd1097, %rd1090;
	add.s64 	%rd1162, %rd1098, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6148,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6149}, %rd1159;
	}
	shf.r.wrap.b32 	%r6150, %r6149, %r6148, 28;
	shf.r.wrap.b32 	%r6151, %r6148, %r6149, 28;
	mov.b64 	%rd1099, {%r6151, %r6150};
	shf.l.wrap.b32 	%r6152, %r6148, %r6149, 30;
	shf.l.wrap.b32 	%r6153, %r6149, %r6148, 30;
	mov.b64 	%rd1100, {%r6153, %r6152};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	shf.l.wrap.b32 	%r6154, %r6148, %r6149, 25;
	shf.l.wrap.b32 	%r6155, %r6149, %r6148, 25;
	mov.b64 	%rd1102, {%r6155, %r6154};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	and.b64  	%rd1104, %rd1159, %rd1160;
	xor.b64  	%rd1105, %rd1159, %rd1160;
	and.b64  	%rd1106, %rd1105, %rd1161;
	or.b64  	%rd1107, %rd1106, %rd1104;
	add.s64 	%rd1108, %rd1103, %rd1107;
	add.s64 	%rd1158, %rd1108, %rd1098;
	add.s32 	%r8459, %r8459, 16;
	setp.lt.s32	%p50, %r8459, 80;
	@%p50 bra 	BB1_91;

	ld.param.u64 	%rd1149, [sha512_hmac_update_128_param_0];
	cvta.to.local.u64 	%rd1148, %rd1149;
	add.s64 	%rd1109, %rd31, %rd1158;
	st.local.u64 	[%rd1148], %rd1109;
	add.s64 	%rd1111, %rd32, %rd1159;
	st.local.u64 	[%rd1148+8], %rd1111;
	add.s64 	%rd1112, %rd33, %rd1160;
	st.local.u64 	[%rd1148+16], %rd1112;
	add.s64 	%rd1113, %rd30, %rd1161;
	st.local.u64 	[%rd1148+24], %rd1113;
	add.s64 	%rd1114, %rd26, %rd1162;
	st.local.u64 	[%rd1148+32], %rd1114;
	add.s64 	%rd1115, %rd28, %rd1163;
	st.local.u64 	[%rd1148+40], %rd1115;
	add.s64 	%rd1116, %rd27, %rd1164;
	st.local.u64 	[%rd1148+48], %rd1116;
	add.s64 	%rd1117, %rd29, %rd1165;
	st.local.u64 	[%rd1148+56], %rd1117;
	st.local.u32 	[%rd1148+64], %r8430;
	st.local.u32 	[%rd1148+68], %r8429;
	st.local.u32 	[%rd1148+72], %r8428;
	st.local.u32 	[%rd1148+76], %r8427;
	st.local.u32 	[%rd1148+80], %r8434;
	st.local.u32 	[%rd1148+84], %r8433;
	st.local.u32 	[%rd1148+88], %r8432;
	st.local.u32 	[%rd1148+92], %r8431;
	st.local.u32 	[%rd1148+96], %r8438;
	st.local.u32 	[%rd1148+100], %r8437;
	st.local.u32 	[%rd1148+104], %r8436;
	st.local.u32 	[%rd1148+108], %r8435;
	st.local.u32 	[%rd1148+112], %r8442;
	st.local.u32 	[%rd1148+116], %r8441;
	st.local.u32 	[%rd1148+120], %r8440;
	st.local.u32 	[%rd1148+124], %r8439;
	st.local.u32 	[%rd1148+128], %r8446;
	st.local.u32 	[%rd1148+132], %r8445;
	st.local.u32 	[%rd1148+136], %r8444;
	st.local.u32 	[%rd1148+140], %r8443;
	st.local.u32 	[%rd1148+144], %r8450;
	st.local.u32 	[%rd1148+148], %r8449;
	st.local.u32 	[%rd1148+152], %r8448;
	st.local.u32 	[%rd1148+156], %r8447;
	st.local.u32 	[%rd1148+160], %r8454;
	st.local.u32 	[%rd1148+164], %r8453;
	st.local.u32 	[%rd1148+168], %r8452;
	st.local.u32 	[%rd1148+172], %r8451;
	st.local.u32 	[%rd1148+176], %r8458;
	st.local.u32 	[%rd1148+180], %r8457;
	st.local.u32 	[%rd1148+184], %r8456;
	st.local.u32 	[%rd1148+188], %r8455;

BB1_175:
	ret;
}

.func sha512_hmac_update_global_swap(
	.param .b64 sha512_hmac_update_global_swap_param_0,
	.param .b64 sha512_hmac_update_global_swap_param_1,
	.param .b32 sha512_hmac_update_global_swap_param_2
)
{
	.reg .pred 	%p<152>;
	.reg .b32 	%r<19431>;
	.reg .b64 	%rd<4361>;


	ld.param.u64 	%rd343, [sha512_hmac_update_global_swap_param_0];
	ld.param.u64 	%rd344, [sha512_hmac_update_global_swap_param_1];
	ld.param.u32 	%r2949, [sha512_hmac_update_global_swap_param_2];
	ld.const.u64 	%rd1, [k_sha512];
	ld.const.u64 	%rd2, [k_sha512+8];
	ld.const.u64 	%rd3, [k_sha512+16];
	ld.const.u64 	%rd4, [k_sha512+24];
	ld.const.u64 	%rd5, [k_sha512+32];
	ld.const.u64 	%rd6, [k_sha512+40];
	ld.const.u64 	%rd7, [k_sha512+48];
	ld.const.u64 	%rd8, [k_sha512+56];
	ld.const.u64 	%rd9, [k_sha512+64];
	ld.const.u64 	%rd10, [k_sha512+72];
	ld.const.u64 	%rd11, [k_sha512+80];
	ld.const.u64 	%rd12, [k_sha512+88];
	ld.const.u64 	%rd13, [k_sha512+96];
	ld.const.u64 	%rd14, [k_sha512+104];
	ld.const.u64 	%rd15, [k_sha512+112];
	mov.u32 	%r19233, 0;
	ld.const.u64 	%rd16, [k_sha512+120];
	mov.u32 	%r19234, %r19233;
	bra.uni 	BB2_1;

BB2_310:
	cvta.to.local.u64 	%rd4262, %rd343;
	st.local.u64 	[%rd4262+56], %rd4360;
	st.local.u32 	[%rd4262+64], %r19368;
	st.local.u32 	[%rd4262+68], %r19367;
	st.local.u32 	[%rd4262+72], %r19366;
	st.local.u32 	[%rd4262+76], %r19365;
	st.local.u32 	[%rd4262+80], %r19372;
	st.local.u32 	[%rd4262+84], %r19371;
	st.local.u32 	[%rd4262+88], %r19370;
	st.local.u32 	[%rd4262+92], %r19369;
	st.local.u32 	[%rd4262+96], %r19376;
	st.local.u32 	[%rd4262+100], %r19375;
	st.local.u32 	[%rd4262+104], %r19374;
	st.local.u32 	[%rd4262+108], %r19373;
	st.local.u32 	[%rd4262+112], %r19380;
	st.local.u32 	[%rd4262+116], %r19379;
	st.local.u32 	[%rd4262+120], %r19378;
	st.local.u32 	[%rd4262+124], %r19377;
	st.local.u32 	[%rd4262+128], %r19384;
	st.local.u32 	[%rd4262+132], %r19383;
	st.local.u32 	[%rd4262+136], %r19382;
	st.local.u32 	[%rd4262+140], %r19381;
	st.local.u32 	[%rd4262+144], %r19388;
	st.local.u32 	[%rd4262+148], %r19387;
	st.local.u32 	[%rd4262+152], %r19386;
	st.local.u32 	[%rd4262+156], %r19385;
	st.local.u32 	[%rd4262+160], %r19392;
	st.local.u32 	[%rd4262+164], %r19391;
	st.local.u32 	[%rd4262+168], %r19390;
	st.local.u32 	[%rd4262+172], %r19389;
	st.local.u32 	[%rd4262+176], %r19396;
	st.local.u32 	[%rd4262+180], %r19395;
	st.local.u32 	[%rd4262+184], %r19394;
	st.local.u32 	[%rd4262+188], %r19393;
	add.s32 	%r19233, %r19233, 128;
	add.s32 	%r19234, %r19234, 32;

BB2_1:
	add.s32 	%r2952, %r2949, -128;
	setp.lt.s32	%p1, %r19233, %r2952;
	mul.wide.s32 	%rd345, %r19234, 4;
	add.s64 	%rd346, %rd344, %rd345;
	ld.global.u32 	%r3, [%rd346];
	ld.global.u32 	%r4, [%rd346+4];
	ld.global.u32 	%r5, [%rd346+8];
	ld.global.u32 	%r6, [%rd346+12];
	ld.global.u32 	%r7, [%rd346+16];
	ld.global.u32 	%r8, [%rd346+20];
	ld.global.u32 	%r9, [%rd346+24];
	ld.global.u32 	%r10, [%rd346+28];
	ld.global.u32 	%r11, [%rd346+32];
	ld.global.u32 	%r12, [%rd346+36];
	ld.global.u32 	%r13, [%rd346+40];
	ld.global.u32 	%r14, [%rd346+44];
	ld.global.u32 	%r15, [%rd346+48];
	ld.global.u32 	%r16, [%rd346+52];
	ld.global.u32 	%r17, [%rd346+56];
	ld.global.u32 	%r18, [%rd346+60];
	ld.global.u32 	%r19, [%rd346+64];
	ld.global.u32 	%r20, [%rd346+68];
	ld.global.u32 	%r21, [%rd346+72];
	ld.global.u32 	%r22, [%rd346+76];
	ld.global.u32 	%r23, [%rd346+80];
	ld.global.u32 	%r24, [%rd346+84];
	ld.global.u32 	%r25, [%rd346+88];
	ld.global.u32 	%r26, [%rd346+92];
	ld.global.u32 	%r27, [%rd346+96];
	ld.global.u32 	%r28, [%rd346+100];
	ld.global.u32 	%r29, [%rd346+104];
	ld.global.u32 	%r30, [%rd346+108];
	ld.global.u32 	%r31, [%rd346+112];
	ld.global.u32 	%r32, [%rd346+116];
	ld.global.u32 	%r33, [%rd346+120];
	ld.global.u32 	%r34, [%rd346+124];
	cvta.to.local.u64 	%rd17, %rd343;
	@%p1 bra 	BB2_216;
	bra.uni 	BB2_2;

BB2_216:
	// inline asm
	prmt.b32 %r12421, %r3, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12423, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12425, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12427, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r34, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r1788, [%rd17+192];
	and.b32  	%r1789, %r1788, 127;
	add.s32 	%r12485, %r1788, 128;
	st.local.u32 	[%rd17+192], %r12485;
	setp.eq.s32	%p102, %r1789, 0;
	@%p102 bra 	BB2_307;
	bra.uni 	BB2_217;

BB2_307:
	st.local.u32 	[%rd17+64], %r12421;
	st.local.u32 	[%rd17+68], %r12423;
	st.local.u32 	[%rd17+72], %r12425;
	st.local.u32 	[%rd17+76], %r12427;
	st.local.u32 	[%rd17+80], %r19340;
	st.local.u32 	[%rd17+84], %r19339;
	st.local.u32 	[%rd17+88], %r19338;
	st.local.u32 	[%rd17+92], %r19337;
	st.local.u32 	[%rd17+96], %r19344;
	st.local.u32 	[%rd17+100], %r19343;
	st.local.u32 	[%rd17+104], %r19342;
	st.local.u32 	[%rd17+108], %r19341;
	st.local.u32 	[%rd17+112], %r19348;
	st.local.u32 	[%rd17+116], %r19347;
	st.local.u32 	[%rd17+120], %r19346;
	st.local.u32 	[%rd17+124], %r19345;
	st.local.u32 	[%rd17+128], %r19352;
	st.local.u32 	[%rd17+132], %r19351;
	st.local.u32 	[%rd17+136], %r19350;
	st.local.u32 	[%rd17+140], %r19349;
	st.local.u32 	[%rd17+144], %r19356;
	st.local.u32 	[%rd17+148], %r19355;
	st.local.u32 	[%rd17+152], %r19354;
	st.local.u32 	[%rd17+156], %r19353;
	st.local.u32 	[%rd17+160], %r19360;
	st.local.u32 	[%rd17+164], %r19359;
	st.local.u32 	[%rd17+168], %r19358;
	st.local.u32 	[%rd17+172], %r19357;
	st.local.u32 	[%rd17+176], %r19364;
	st.local.u32 	[%rd17+180], %r19363;
	st.local.u32 	[%rd17+184], %r19362;
	st.local.u32 	[%rd17+188], %r19361;
	mov.b64	%rd4352, {%r12423, %r12421};
	mov.b64	%rd4353, {%r12427, %r12425};
	mov.b64	%rd4354, {%r19339, %r19340};
	mov.b64	%rd4355, {%r19337, %r19338};
	mov.b64	%rd4356, {%r19343, %r19344};
	mov.b64	%rd4357, {%r19341, %r19342};
	mov.b64	%rd4358, {%r19347, %r19348};
	mov.b64	%rd4359, {%r19345, %r19346};
	mov.b64	%rd4343, {%r19351, %r19352};
	mov.b64	%rd4342, {%r19349, %r19350};
	mov.b64	%rd4341, {%r19355, %r19356};
	mov.b64	%rd4340, {%r19353, %r19354};
	mov.b64	%rd4339, {%r19359, %r19360};
	mov.b64	%rd4338, {%r19357, %r19358};
	mov.b64	%rd4337, {%r19363, %r19364};
	mov.b64	%rd4336, {%r19361, %r19362};
	ld.local.u64 	%rd277, [%rd17+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18503,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18504}, %rd277;
	}
	shf.r.wrap.b32 	%r18505, %r18504, %r18503, 14;
	shf.r.wrap.b32 	%r18506, %r18503, %r18504, 14;
	mov.b64 	%rd3291, {%r18506, %r18505};
	shf.r.wrap.b32 	%r18507, %r18504, %r18503, 18;
	shf.r.wrap.b32 	%r18508, %r18503, %r18504, 18;
	mov.b64 	%rd3292, {%r18508, %r18507};
	xor.b64  	%rd3293, %rd3292, %rd3291;
	shf.l.wrap.b32 	%r18509, %r18503, %r18504, 23;
	shf.l.wrap.b32 	%r18510, %r18504, %r18503, 23;
	mov.b64 	%rd3294, {%r18510, %r18509};
	xor.b64  	%rd3295, %rd3293, %rd3294;
	ld.local.u64 	%rd278, [%rd17+48];
	ld.local.u64 	%rd279, [%rd17+40];
	xor.b64  	%rd3296, %rd278, %rd279;
	and.b64  	%rd3297, %rd3296, %rd277;
	xor.b64  	%rd3298, %rd3297, %rd278;
	ld.local.u64 	%rd280, [%rd17+56];
	add.s64 	%rd3299, %rd3298, %rd280;
	add.s64 	%rd3300, %rd3299, %rd4352;
	add.s64 	%rd3301, %rd3300, %rd1;
	add.s64 	%rd3302, %rd3301, %rd3295;
	ld.local.u64 	%rd281, [%rd17+24];
	add.s64 	%rd3303, %rd3302, %rd281;
	ld.local.u64 	%rd282, [%rd17];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18511,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18512}, %rd282;
	}
	shf.r.wrap.b32 	%r18513, %r18512, %r18511, 28;
	shf.r.wrap.b32 	%r18514, %r18511, %r18512, 28;
	mov.b64 	%rd3304, {%r18514, %r18513};
	shf.l.wrap.b32 	%r18515, %r18511, %r18512, 30;
	shf.l.wrap.b32 	%r18516, %r18512, %r18511, 30;
	mov.b64 	%rd3305, {%r18516, %r18515};
	xor.b64  	%rd3306, %rd3305, %rd3304;
	shf.l.wrap.b32 	%r18517, %r18511, %r18512, 25;
	shf.l.wrap.b32 	%r18518, %r18512, %r18511, 25;
	mov.b64 	%rd3307, {%r18518, %r18517};
	xor.b64  	%rd3308, %rd3306, %rd3307;
	ld.local.u64 	%rd283, [%rd17+8];
	and.b64  	%rd3309, %rd283, %rd282;
	xor.b64  	%rd3310, %rd283, %rd282;
	ld.local.u64 	%rd284, [%rd17+16];
	and.b64  	%rd3311, %rd284, %rd3310;
	or.b64  	%rd3312, %rd3311, %rd3309;
	add.s64 	%rd3313, %rd3302, %rd3312;
	add.s64 	%rd3314, %rd3313, %rd3308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18519,%dummy}, %rd3303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18520}, %rd3303;
	}
	shf.r.wrap.b32 	%r18521, %r18520, %r18519, 14;
	shf.r.wrap.b32 	%r18522, %r18519, %r18520, 14;
	mov.b64 	%rd3315, {%r18522, %r18521};
	shf.r.wrap.b32 	%r18523, %r18520, %r18519, 18;
	shf.r.wrap.b32 	%r18524, %r18519, %r18520, 18;
	mov.b64 	%rd3316, {%r18524, %r18523};
	xor.b64  	%rd3317, %rd3316, %rd3315;
	shf.l.wrap.b32 	%r18525, %r18519, %r18520, 23;
	shf.l.wrap.b32 	%r18526, %r18520, %r18519, 23;
	mov.b64 	%rd3318, {%r18526, %r18525};
	xor.b64  	%rd3319, %rd3317, %rd3318;
	xor.b64  	%rd3320, %rd279, %rd277;
	and.b64  	%rd3321, %rd3303, %rd3320;
	xor.b64  	%rd3322, %rd3321, %rd279;
	add.s64 	%rd3323, %rd4353, %rd278;
	add.s64 	%rd3324, %rd3323, %rd2;
	add.s64 	%rd3325, %rd3324, %rd3322;
	add.s64 	%rd3326, %rd3325, %rd3319;
	add.s64 	%rd3327, %rd3326, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18527,%dummy}, %rd3314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18528}, %rd3314;
	}
	shf.r.wrap.b32 	%r18529, %r18528, %r18527, 28;
	shf.r.wrap.b32 	%r18530, %r18527, %r18528, 28;
	mov.b64 	%rd3328, {%r18530, %r18529};
	shf.l.wrap.b32 	%r18531, %r18527, %r18528, 30;
	shf.l.wrap.b32 	%r18532, %r18528, %r18527, 30;
	mov.b64 	%rd3329, {%r18532, %r18531};
	xor.b64  	%rd3330, %rd3329, %rd3328;
	shf.l.wrap.b32 	%r18533, %r18527, %r18528, 25;
	shf.l.wrap.b32 	%r18534, %r18528, %r18527, 25;
	mov.b64 	%rd3331, {%r18534, %r18533};
	xor.b64  	%rd3332, %rd3330, %rd3331;
	and.b64  	%rd3333, %rd3314, %rd282;
	xor.b64  	%rd3334, %rd3314, %rd282;
	and.b64  	%rd3335, %rd3334, %rd283;
	or.b64  	%rd3336, %rd3335, %rd3333;
	add.s64 	%rd3337, %rd3326, %rd3336;
	add.s64 	%rd3338, %rd3337, %rd3332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18535,%dummy}, %rd3327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18536}, %rd3327;
	}
	shf.r.wrap.b32 	%r18537, %r18536, %r18535, 14;
	shf.r.wrap.b32 	%r18538, %r18535, %r18536, 14;
	mov.b64 	%rd3339, {%r18538, %r18537};
	shf.r.wrap.b32 	%r18539, %r18536, %r18535, 18;
	shf.r.wrap.b32 	%r18540, %r18535, %r18536, 18;
	mov.b64 	%rd3340, {%r18540, %r18539};
	xor.b64  	%rd3341, %rd3340, %rd3339;
	shf.l.wrap.b32 	%r18541, %r18535, %r18536, 23;
	shf.l.wrap.b32 	%r18542, %r18536, %r18535, 23;
	mov.b64 	%rd3342, {%r18542, %r18541};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	xor.b64  	%rd3344, %rd3303, %rd277;
	and.b64  	%rd3345, %rd3327, %rd3344;
	xor.b64  	%rd3346, %rd3345, %rd277;
	add.s64 	%rd3347, %rd4354, %rd279;
	add.s64 	%rd3348, %rd3347, %rd3;
	add.s64 	%rd3349, %rd3348, %rd3346;
	add.s64 	%rd3350, %rd3349, %rd3343;
	add.s64 	%rd3351, %rd3350, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18543,%dummy}, %rd3338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18544}, %rd3338;
	}
	shf.r.wrap.b32 	%r18545, %r18544, %r18543, 28;
	shf.r.wrap.b32 	%r18546, %r18543, %r18544, 28;
	mov.b64 	%rd3352, {%r18546, %r18545};
	shf.l.wrap.b32 	%r18547, %r18543, %r18544, 30;
	shf.l.wrap.b32 	%r18548, %r18544, %r18543, 30;
	mov.b64 	%rd3353, {%r18548, %r18547};
	xor.b64  	%rd3354, %rd3353, %rd3352;
	shf.l.wrap.b32 	%r18549, %r18543, %r18544, 25;
	shf.l.wrap.b32 	%r18550, %r18544, %r18543, 25;
	mov.b64 	%rd3355, {%r18550, %r18549};
	xor.b64  	%rd3356, %rd3354, %rd3355;
	and.b64  	%rd3357, %rd3338, %rd3314;
	xor.b64  	%rd3358, %rd3338, %rd3314;
	and.b64  	%rd3359, %rd3358, %rd282;
	or.b64  	%rd3360, %rd3359, %rd3357;
	add.s64 	%rd3361, %rd3350, %rd3360;
	add.s64 	%rd3362, %rd3361, %rd3356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18551,%dummy}, %rd3351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18552}, %rd3351;
	}
	shf.r.wrap.b32 	%r18553, %r18552, %r18551, 14;
	shf.r.wrap.b32 	%r18554, %r18551, %r18552, 14;
	mov.b64 	%rd3363, {%r18554, %r18553};
	shf.r.wrap.b32 	%r18555, %r18552, %r18551, 18;
	shf.r.wrap.b32 	%r18556, %r18551, %r18552, 18;
	mov.b64 	%rd3364, {%r18556, %r18555};
	xor.b64  	%rd3365, %rd3364, %rd3363;
	shf.l.wrap.b32 	%r18557, %r18551, %r18552, 23;
	shf.l.wrap.b32 	%r18558, %r18552, %r18551, 23;
	mov.b64 	%rd3366, {%r18558, %r18557};
	xor.b64  	%rd3367, %rd3365, %rd3366;
	xor.b64  	%rd3368, %rd3327, %rd3303;
	and.b64  	%rd3369, %rd3351, %rd3368;
	xor.b64  	%rd3370, %rd3369, %rd3303;
	add.s64 	%rd3371, %rd4355, %rd277;
	add.s64 	%rd3372, %rd3371, %rd4;
	add.s64 	%rd3373, %rd3372, %rd3370;
	add.s64 	%rd3374, %rd3373, %rd3367;
	add.s64 	%rd3375, %rd3374, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18559,%dummy}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18560}, %rd3362;
	}
	shf.r.wrap.b32 	%r18561, %r18560, %r18559, 28;
	shf.r.wrap.b32 	%r18562, %r18559, %r18560, 28;
	mov.b64 	%rd3376, {%r18562, %r18561};
	shf.l.wrap.b32 	%r18563, %r18559, %r18560, 30;
	shf.l.wrap.b32 	%r18564, %r18560, %r18559, 30;
	mov.b64 	%rd3377, {%r18564, %r18563};
	xor.b64  	%rd3378, %rd3377, %rd3376;
	shf.l.wrap.b32 	%r18565, %r18559, %r18560, 25;
	shf.l.wrap.b32 	%r18566, %r18560, %r18559, 25;
	mov.b64 	%rd3379, {%r18566, %r18565};
	xor.b64  	%rd3380, %rd3378, %rd3379;
	and.b64  	%rd3381, %rd3362, %rd3338;
	xor.b64  	%rd3382, %rd3362, %rd3338;
	and.b64  	%rd3383, %rd3382, %rd3314;
	or.b64  	%rd3384, %rd3383, %rd3381;
	add.s64 	%rd3385, %rd3374, %rd3384;
	add.s64 	%rd3386, %rd3385, %rd3380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18567,%dummy}, %rd3375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18568}, %rd3375;
	}
	shf.r.wrap.b32 	%r18569, %r18568, %r18567, 14;
	shf.r.wrap.b32 	%r18570, %r18567, %r18568, 14;
	mov.b64 	%rd3387, {%r18570, %r18569};
	shf.r.wrap.b32 	%r18571, %r18568, %r18567, 18;
	shf.r.wrap.b32 	%r18572, %r18567, %r18568, 18;
	mov.b64 	%rd3388, {%r18572, %r18571};
	xor.b64  	%rd3389, %rd3388, %rd3387;
	shf.l.wrap.b32 	%r18573, %r18567, %r18568, 23;
	shf.l.wrap.b32 	%r18574, %r18568, %r18567, 23;
	mov.b64 	%rd3390, {%r18574, %r18573};
	xor.b64  	%rd3391, %rd3389, %rd3390;
	xor.b64  	%rd3392, %rd3351, %rd3327;
	and.b64  	%rd3393, %rd3375, %rd3392;
	xor.b64  	%rd3394, %rd3393, %rd3327;
	add.s64 	%rd3395, %rd3303, %rd4356;
	add.s64 	%rd3396, %rd3395, %rd5;
	add.s64 	%rd3397, %rd3396, %rd3394;
	add.s64 	%rd3398, %rd3397, %rd3391;
	add.s64 	%rd3399, %rd3398, %rd3314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18575,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18576}, %rd3386;
	}
	shf.r.wrap.b32 	%r18577, %r18576, %r18575, 28;
	shf.r.wrap.b32 	%r18578, %r18575, %r18576, 28;
	mov.b64 	%rd3400, {%r18578, %r18577};
	shf.l.wrap.b32 	%r18579, %r18575, %r18576, 30;
	shf.l.wrap.b32 	%r18580, %r18576, %r18575, 30;
	mov.b64 	%rd3401, {%r18580, %r18579};
	xor.b64  	%rd3402, %rd3401, %rd3400;
	shf.l.wrap.b32 	%r18581, %r18575, %r18576, 25;
	shf.l.wrap.b32 	%r18582, %r18576, %r18575, 25;
	mov.b64 	%rd3403, {%r18582, %r18581};
	xor.b64  	%rd3404, %rd3402, %rd3403;
	and.b64  	%rd3405, %rd3386, %rd3362;
	xor.b64  	%rd3406, %rd3386, %rd3362;
	and.b64  	%rd3407, %rd3406, %rd3338;
	or.b64  	%rd3408, %rd3407, %rd3405;
	add.s64 	%rd3409, %rd3398, %rd3408;
	add.s64 	%rd3410, %rd3409, %rd3404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18583,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18584}, %rd3399;
	}
	shf.r.wrap.b32 	%r18585, %r18584, %r18583, 14;
	shf.r.wrap.b32 	%r18586, %r18583, %r18584, 14;
	mov.b64 	%rd3411, {%r18586, %r18585};
	shf.r.wrap.b32 	%r18587, %r18584, %r18583, 18;
	shf.r.wrap.b32 	%r18588, %r18583, %r18584, 18;
	mov.b64 	%rd3412, {%r18588, %r18587};
	xor.b64  	%rd3413, %rd3412, %rd3411;
	shf.l.wrap.b32 	%r18589, %r18583, %r18584, 23;
	shf.l.wrap.b32 	%r18590, %r18584, %r18583, 23;
	mov.b64 	%rd3414, {%r18590, %r18589};
	xor.b64  	%rd3415, %rd3413, %rd3414;
	xor.b64  	%rd3416, %rd3375, %rd3351;
	and.b64  	%rd3417, %rd3399, %rd3416;
	xor.b64  	%rd3418, %rd3417, %rd3351;
	add.s64 	%rd3419, %rd3327, %rd4357;
	add.s64 	%rd3420, %rd3419, %rd6;
	add.s64 	%rd3421, %rd3420, %rd3418;
	add.s64 	%rd3422, %rd3421, %rd3415;
	add.s64 	%rd3423, %rd3422, %rd3338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18591,%dummy}, %rd3410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18592}, %rd3410;
	}
	shf.r.wrap.b32 	%r18593, %r18592, %r18591, 28;
	shf.r.wrap.b32 	%r18594, %r18591, %r18592, 28;
	mov.b64 	%rd3424, {%r18594, %r18593};
	shf.l.wrap.b32 	%r18595, %r18591, %r18592, 30;
	shf.l.wrap.b32 	%r18596, %r18592, %r18591, 30;
	mov.b64 	%rd3425, {%r18596, %r18595};
	xor.b64  	%rd3426, %rd3425, %rd3424;
	shf.l.wrap.b32 	%r18597, %r18591, %r18592, 25;
	shf.l.wrap.b32 	%r18598, %r18592, %r18591, 25;
	mov.b64 	%rd3427, {%r18598, %r18597};
	xor.b64  	%rd3428, %rd3426, %rd3427;
	and.b64  	%rd3429, %rd3410, %rd3386;
	xor.b64  	%rd3430, %rd3410, %rd3386;
	and.b64  	%rd3431, %rd3430, %rd3362;
	or.b64  	%rd3432, %rd3431, %rd3429;
	add.s64 	%rd3433, %rd3422, %rd3432;
	add.s64 	%rd3434, %rd3433, %rd3428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18599,%dummy}, %rd3423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18600}, %rd3423;
	}
	shf.r.wrap.b32 	%r18601, %r18600, %r18599, 14;
	shf.r.wrap.b32 	%r18602, %r18599, %r18600, 14;
	mov.b64 	%rd3435, {%r18602, %r18601};
	shf.r.wrap.b32 	%r18603, %r18600, %r18599, 18;
	shf.r.wrap.b32 	%r18604, %r18599, %r18600, 18;
	mov.b64 	%rd3436, {%r18604, %r18603};
	xor.b64  	%rd3437, %rd3436, %rd3435;
	shf.l.wrap.b32 	%r18605, %r18599, %r18600, 23;
	shf.l.wrap.b32 	%r18606, %r18600, %r18599, 23;
	mov.b64 	%rd3438, {%r18606, %r18605};
	xor.b64  	%rd3439, %rd3437, %rd3438;
	xor.b64  	%rd3440, %rd3399, %rd3375;
	and.b64  	%rd3441, %rd3423, %rd3440;
	xor.b64  	%rd3442, %rd3441, %rd3375;
	add.s64 	%rd3443, %rd3351, %rd4358;
	add.s64 	%rd3444, %rd3443, %rd7;
	add.s64 	%rd3445, %rd3444, %rd3442;
	add.s64 	%rd3446, %rd3445, %rd3439;
	add.s64 	%rd3447, %rd3446, %rd3362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18607,%dummy}, %rd3434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18608}, %rd3434;
	}
	shf.r.wrap.b32 	%r18609, %r18608, %r18607, 28;
	shf.r.wrap.b32 	%r18610, %r18607, %r18608, 28;
	mov.b64 	%rd3448, {%r18610, %r18609};
	shf.l.wrap.b32 	%r18611, %r18607, %r18608, 30;
	shf.l.wrap.b32 	%r18612, %r18608, %r18607, 30;
	mov.b64 	%rd3449, {%r18612, %r18611};
	xor.b64  	%rd3450, %rd3449, %rd3448;
	shf.l.wrap.b32 	%r18613, %r18607, %r18608, 25;
	shf.l.wrap.b32 	%r18614, %r18608, %r18607, 25;
	mov.b64 	%rd3451, {%r18614, %r18613};
	xor.b64  	%rd3452, %rd3450, %rd3451;
	and.b64  	%rd3453, %rd3434, %rd3410;
	xor.b64  	%rd3454, %rd3434, %rd3410;
	and.b64  	%rd3455, %rd3454, %rd3386;
	or.b64  	%rd3456, %rd3455, %rd3453;
	add.s64 	%rd3457, %rd3446, %rd3456;
	add.s64 	%rd3458, %rd3457, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18615,%dummy}, %rd3447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18616}, %rd3447;
	}
	shf.r.wrap.b32 	%r18617, %r18616, %r18615, 14;
	shf.r.wrap.b32 	%r18618, %r18615, %r18616, 14;
	mov.b64 	%rd3459, {%r18618, %r18617};
	shf.r.wrap.b32 	%r18619, %r18616, %r18615, 18;
	shf.r.wrap.b32 	%r18620, %r18615, %r18616, 18;
	mov.b64 	%rd3460, {%r18620, %r18619};
	xor.b64  	%rd3461, %rd3460, %rd3459;
	shf.l.wrap.b32 	%r18621, %r18615, %r18616, 23;
	shf.l.wrap.b32 	%r18622, %r18616, %r18615, 23;
	mov.b64 	%rd3462, {%r18622, %r18621};
	xor.b64  	%rd3463, %rd3461, %rd3462;
	xor.b64  	%rd3464, %rd3423, %rd3399;
	and.b64  	%rd3465, %rd3447, %rd3464;
	xor.b64  	%rd3466, %rd3465, %rd3399;
	add.s64 	%rd3467, %rd3375, %rd4359;
	add.s64 	%rd3468, %rd3467, %rd8;
	add.s64 	%rd3469, %rd3468, %rd3466;
	add.s64 	%rd3470, %rd3469, %rd3463;
	add.s64 	%rd3471, %rd3470, %rd3386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18623,%dummy}, %rd3458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18624}, %rd3458;
	}
	shf.r.wrap.b32 	%r18625, %r18624, %r18623, 28;
	shf.r.wrap.b32 	%r18626, %r18623, %r18624, 28;
	mov.b64 	%rd3472, {%r18626, %r18625};
	shf.l.wrap.b32 	%r18627, %r18623, %r18624, 30;
	shf.l.wrap.b32 	%r18628, %r18624, %r18623, 30;
	mov.b64 	%rd3473, {%r18628, %r18627};
	xor.b64  	%rd3474, %rd3473, %rd3472;
	shf.l.wrap.b32 	%r18629, %r18623, %r18624, 25;
	shf.l.wrap.b32 	%r18630, %r18624, %r18623, 25;
	mov.b64 	%rd3475, {%r18630, %r18629};
	xor.b64  	%rd3476, %rd3474, %rd3475;
	and.b64  	%rd3477, %rd3458, %rd3434;
	xor.b64  	%rd3478, %rd3458, %rd3434;
	and.b64  	%rd3479, %rd3478, %rd3410;
	or.b64  	%rd3480, %rd3479, %rd3477;
	add.s64 	%rd3481, %rd3470, %rd3480;
	add.s64 	%rd3482, %rd3481, %rd3476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18631,%dummy}, %rd3471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18632}, %rd3471;
	}
	shf.r.wrap.b32 	%r18633, %r18632, %r18631, 14;
	shf.r.wrap.b32 	%r18634, %r18631, %r18632, 14;
	mov.b64 	%rd3483, {%r18634, %r18633};
	shf.r.wrap.b32 	%r18635, %r18632, %r18631, 18;
	shf.r.wrap.b32 	%r18636, %r18631, %r18632, 18;
	mov.b64 	%rd3484, {%r18636, %r18635};
	xor.b64  	%rd3485, %rd3484, %rd3483;
	shf.l.wrap.b32 	%r18637, %r18631, %r18632, 23;
	shf.l.wrap.b32 	%r18638, %r18632, %r18631, 23;
	mov.b64 	%rd3486, {%r18638, %r18637};
	xor.b64  	%rd3487, %rd3485, %rd3486;
	xor.b64  	%rd3488, %rd3447, %rd3423;
	and.b64  	%rd3489, %rd3471, %rd3488;
	xor.b64  	%rd3490, %rd3489, %rd3423;
	add.s64 	%rd3491, %rd3399, %rd4343;
	add.s64 	%rd3492, %rd3491, %rd9;
	add.s64 	%rd3493, %rd3492, %rd3490;
	add.s64 	%rd3494, %rd3493, %rd3487;
	add.s64 	%rd3495, %rd3494, %rd3410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18639,%dummy}, %rd3482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18640}, %rd3482;
	}
	shf.r.wrap.b32 	%r18641, %r18640, %r18639, 28;
	shf.r.wrap.b32 	%r18642, %r18639, %r18640, 28;
	mov.b64 	%rd3496, {%r18642, %r18641};
	shf.l.wrap.b32 	%r18643, %r18639, %r18640, 30;
	shf.l.wrap.b32 	%r18644, %r18640, %r18639, 30;
	mov.b64 	%rd3497, {%r18644, %r18643};
	xor.b64  	%rd3498, %rd3497, %rd3496;
	shf.l.wrap.b32 	%r18645, %r18639, %r18640, 25;
	shf.l.wrap.b32 	%r18646, %r18640, %r18639, 25;
	mov.b64 	%rd3499, {%r18646, %r18645};
	xor.b64  	%rd3500, %rd3498, %rd3499;
	and.b64  	%rd3501, %rd3482, %rd3458;
	xor.b64  	%rd3502, %rd3482, %rd3458;
	and.b64  	%rd3503, %rd3502, %rd3434;
	or.b64  	%rd3504, %rd3503, %rd3501;
	add.s64 	%rd3505, %rd3494, %rd3504;
	add.s64 	%rd3506, %rd3505, %rd3500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18647,%dummy}, %rd3495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18648}, %rd3495;
	}
	shf.r.wrap.b32 	%r18649, %r18648, %r18647, 14;
	shf.r.wrap.b32 	%r18650, %r18647, %r18648, 14;
	mov.b64 	%rd3507, {%r18650, %r18649};
	shf.r.wrap.b32 	%r18651, %r18648, %r18647, 18;
	shf.r.wrap.b32 	%r18652, %r18647, %r18648, 18;
	mov.b64 	%rd3508, {%r18652, %r18651};
	xor.b64  	%rd3509, %rd3508, %rd3507;
	shf.l.wrap.b32 	%r18653, %r18647, %r18648, 23;
	shf.l.wrap.b32 	%r18654, %r18648, %r18647, 23;
	mov.b64 	%rd3510, {%r18654, %r18653};
	xor.b64  	%rd3511, %rd3509, %rd3510;
	xor.b64  	%rd3512, %rd3471, %rd3447;
	and.b64  	%rd3513, %rd3495, %rd3512;
	xor.b64  	%rd3514, %rd3513, %rd3447;
	add.s64 	%rd3515, %rd3423, %rd4342;
	add.s64 	%rd3516, %rd3515, %rd10;
	add.s64 	%rd3517, %rd3516, %rd3514;
	add.s64 	%rd3518, %rd3517, %rd3511;
	add.s64 	%rd3519, %rd3518, %rd3434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18655,%dummy}, %rd3506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18656}, %rd3506;
	}
	shf.r.wrap.b32 	%r18657, %r18656, %r18655, 28;
	shf.r.wrap.b32 	%r18658, %r18655, %r18656, 28;
	mov.b64 	%rd3520, {%r18658, %r18657};
	shf.l.wrap.b32 	%r18659, %r18655, %r18656, 30;
	shf.l.wrap.b32 	%r18660, %r18656, %r18655, 30;
	mov.b64 	%rd3521, {%r18660, %r18659};
	xor.b64  	%rd3522, %rd3521, %rd3520;
	shf.l.wrap.b32 	%r18661, %r18655, %r18656, 25;
	shf.l.wrap.b32 	%r18662, %r18656, %r18655, 25;
	mov.b64 	%rd3523, {%r18662, %r18661};
	xor.b64  	%rd3524, %rd3522, %rd3523;
	and.b64  	%rd3525, %rd3506, %rd3482;
	xor.b64  	%rd3526, %rd3506, %rd3482;
	and.b64  	%rd3527, %rd3526, %rd3458;
	or.b64  	%rd3528, %rd3527, %rd3525;
	add.s64 	%rd3529, %rd3518, %rd3528;
	add.s64 	%rd3530, %rd3529, %rd3524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18663,%dummy}, %rd3519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18664}, %rd3519;
	}
	shf.r.wrap.b32 	%r18665, %r18664, %r18663, 14;
	shf.r.wrap.b32 	%r18666, %r18663, %r18664, 14;
	mov.b64 	%rd3531, {%r18666, %r18665};
	shf.r.wrap.b32 	%r18667, %r18664, %r18663, 18;
	shf.r.wrap.b32 	%r18668, %r18663, %r18664, 18;
	mov.b64 	%rd3532, {%r18668, %r18667};
	xor.b64  	%rd3533, %rd3532, %rd3531;
	shf.l.wrap.b32 	%r18669, %r18663, %r18664, 23;
	shf.l.wrap.b32 	%r18670, %r18664, %r18663, 23;
	mov.b64 	%rd3534, {%r18670, %r18669};
	xor.b64  	%rd3535, %rd3533, %rd3534;
	xor.b64  	%rd3536, %rd3495, %rd3471;
	and.b64  	%rd3537, %rd3519, %rd3536;
	xor.b64  	%rd3538, %rd3537, %rd3471;
	add.s64 	%rd3539, %rd3447, %rd4341;
	add.s64 	%rd3540, %rd3539, %rd11;
	add.s64 	%rd3541, %rd3540, %rd3538;
	add.s64 	%rd3542, %rd3541, %rd3535;
	add.s64 	%rd3543, %rd3542, %rd3458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18671,%dummy}, %rd3530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18672}, %rd3530;
	}
	shf.r.wrap.b32 	%r18673, %r18672, %r18671, 28;
	shf.r.wrap.b32 	%r18674, %r18671, %r18672, 28;
	mov.b64 	%rd3544, {%r18674, %r18673};
	shf.l.wrap.b32 	%r18675, %r18671, %r18672, 30;
	shf.l.wrap.b32 	%r18676, %r18672, %r18671, 30;
	mov.b64 	%rd3545, {%r18676, %r18675};
	xor.b64  	%rd3546, %rd3545, %rd3544;
	shf.l.wrap.b32 	%r18677, %r18671, %r18672, 25;
	shf.l.wrap.b32 	%r18678, %r18672, %r18671, 25;
	mov.b64 	%rd3547, {%r18678, %r18677};
	xor.b64  	%rd3548, %rd3546, %rd3547;
	and.b64  	%rd3549, %rd3530, %rd3506;
	xor.b64  	%rd3550, %rd3530, %rd3506;
	and.b64  	%rd3551, %rd3550, %rd3482;
	or.b64  	%rd3552, %rd3551, %rd3549;
	add.s64 	%rd3553, %rd3542, %rd3552;
	add.s64 	%rd3554, %rd3553, %rd3548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18679,%dummy}, %rd3543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18680}, %rd3543;
	}
	shf.r.wrap.b32 	%r18681, %r18680, %r18679, 14;
	shf.r.wrap.b32 	%r18682, %r18679, %r18680, 14;
	mov.b64 	%rd3555, {%r18682, %r18681};
	shf.r.wrap.b32 	%r18683, %r18680, %r18679, 18;
	shf.r.wrap.b32 	%r18684, %r18679, %r18680, 18;
	mov.b64 	%rd3556, {%r18684, %r18683};
	xor.b64  	%rd3557, %rd3556, %rd3555;
	shf.l.wrap.b32 	%r18685, %r18679, %r18680, 23;
	shf.l.wrap.b32 	%r18686, %r18680, %r18679, 23;
	mov.b64 	%rd3558, {%r18686, %r18685};
	xor.b64  	%rd3559, %rd3557, %rd3558;
	xor.b64  	%rd3560, %rd3519, %rd3495;
	and.b64  	%rd3561, %rd3543, %rd3560;
	xor.b64  	%rd3562, %rd3561, %rd3495;
	add.s64 	%rd3563, %rd3471, %rd4340;
	add.s64 	%rd3564, %rd3563, %rd12;
	add.s64 	%rd3565, %rd3564, %rd3562;
	add.s64 	%rd3566, %rd3565, %rd3559;
	add.s64 	%rd3567, %rd3566, %rd3482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18687,%dummy}, %rd3554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18688}, %rd3554;
	}
	shf.r.wrap.b32 	%r18689, %r18688, %r18687, 28;
	shf.r.wrap.b32 	%r18690, %r18687, %r18688, 28;
	mov.b64 	%rd3568, {%r18690, %r18689};
	shf.l.wrap.b32 	%r18691, %r18687, %r18688, 30;
	shf.l.wrap.b32 	%r18692, %r18688, %r18687, 30;
	mov.b64 	%rd3569, {%r18692, %r18691};
	xor.b64  	%rd3570, %rd3569, %rd3568;
	shf.l.wrap.b32 	%r18693, %r18687, %r18688, 25;
	shf.l.wrap.b32 	%r18694, %r18688, %r18687, 25;
	mov.b64 	%rd3571, {%r18694, %r18693};
	xor.b64  	%rd3572, %rd3570, %rd3571;
	and.b64  	%rd3573, %rd3554, %rd3530;
	xor.b64  	%rd3574, %rd3554, %rd3530;
	and.b64  	%rd3575, %rd3574, %rd3506;
	or.b64  	%rd3576, %rd3575, %rd3573;
	add.s64 	%rd3577, %rd3566, %rd3576;
	add.s64 	%rd3578, %rd3577, %rd3572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18695,%dummy}, %rd3567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18696}, %rd3567;
	}
	shf.r.wrap.b32 	%r18697, %r18696, %r18695, 14;
	shf.r.wrap.b32 	%r18698, %r18695, %r18696, 14;
	mov.b64 	%rd3579, {%r18698, %r18697};
	shf.r.wrap.b32 	%r18699, %r18696, %r18695, 18;
	shf.r.wrap.b32 	%r18700, %r18695, %r18696, 18;
	mov.b64 	%rd3580, {%r18700, %r18699};
	xor.b64  	%rd3581, %rd3580, %rd3579;
	shf.l.wrap.b32 	%r18701, %r18695, %r18696, 23;
	shf.l.wrap.b32 	%r18702, %r18696, %r18695, 23;
	mov.b64 	%rd3582, {%r18702, %r18701};
	xor.b64  	%rd3583, %rd3581, %rd3582;
	xor.b64  	%rd3584, %rd3543, %rd3519;
	and.b64  	%rd3585, %rd3567, %rd3584;
	xor.b64  	%rd3586, %rd3585, %rd3519;
	add.s64 	%rd3587, %rd3495, %rd4339;
	add.s64 	%rd3588, %rd3587, %rd13;
	add.s64 	%rd3589, %rd3588, %rd3586;
	add.s64 	%rd3590, %rd3589, %rd3583;
	add.s64 	%rd4351, %rd3590, %rd3506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18703,%dummy}, %rd3578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18704}, %rd3578;
	}
	shf.r.wrap.b32 	%r18705, %r18704, %r18703, 28;
	shf.r.wrap.b32 	%r18706, %r18703, %r18704, 28;
	mov.b64 	%rd3591, {%r18706, %r18705};
	shf.l.wrap.b32 	%r18707, %r18703, %r18704, 30;
	shf.l.wrap.b32 	%r18708, %r18704, %r18703, 30;
	mov.b64 	%rd3592, {%r18708, %r18707};
	xor.b64  	%rd3593, %rd3592, %rd3591;
	shf.l.wrap.b32 	%r18709, %r18703, %r18704, 25;
	shf.l.wrap.b32 	%r18710, %r18704, %r18703, 25;
	mov.b64 	%rd3594, {%r18710, %r18709};
	xor.b64  	%rd3595, %rd3593, %rd3594;
	and.b64  	%rd3596, %rd3578, %rd3554;
	xor.b64  	%rd3597, %rd3578, %rd3554;
	and.b64  	%rd3598, %rd3597, %rd3530;
	or.b64  	%rd3599, %rd3598, %rd3596;
	add.s64 	%rd3600, %rd3590, %rd3599;
	add.s64 	%rd4347, %rd3600, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18711,%dummy}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18712}, %rd4351;
	}
	shf.r.wrap.b32 	%r18713, %r18712, %r18711, 14;
	shf.r.wrap.b32 	%r18714, %r18711, %r18712, 14;
	mov.b64 	%rd3601, {%r18714, %r18713};
	shf.r.wrap.b32 	%r18715, %r18712, %r18711, 18;
	shf.r.wrap.b32 	%r18716, %r18711, %r18712, 18;
	mov.b64 	%rd3602, {%r18716, %r18715};
	xor.b64  	%rd3603, %rd3602, %rd3601;
	shf.l.wrap.b32 	%r18717, %r18711, %r18712, 23;
	shf.l.wrap.b32 	%r18718, %r18712, %r18711, 23;
	mov.b64 	%rd3604, {%r18718, %r18717};
	xor.b64  	%rd3605, %rd3603, %rd3604;
	xor.b64  	%rd3606, %rd3567, %rd3543;
	and.b64  	%rd3607, %rd4351, %rd3606;
	xor.b64  	%rd3608, %rd3607, %rd3543;
	add.s64 	%rd3609, %rd3519, %rd4338;
	add.s64 	%rd3610, %rd3609, %rd14;
	add.s64 	%rd3611, %rd3610, %rd3608;
	add.s64 	%rd3612, %rd3611, %rd3605;
	add.s64 	%rd4350, %rd3612, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18719,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18720}, %rd4347;
	}
	shf.r.wrap.b32 	%r18721, %r18720, %r18719, 28;
	shf.r.wrap.b32 	%r18722, %r18719, %r18720, 28;
	mov.b64 	%rd3613, {%r18722, %r18721};
	shf.l.wrap.b32 	%r18723, %r18719, %r18720, 30;
	shf.l.wrap.b32 	%r18724, %r18720, %r18719, 30;
	mov.b64 	%rd3614, {%r18724, %r18723};
	xor.b64  	%rd3615, %rd3614, %rd3613;
	shf.l.wrap.b32 	%r18725, %r18719, %r18720, 25;
	shf.l.wrap.b32 	%r18726, %r18720, %r18719, 25;
	mov.b64 	%rd3616, {%r18726, %r18725};
	xor.b64  	%rd3617, %rd3615, %rd3616;
	and.b64  	%rd3618, %rd4347, %rd3578;
	xor.b64  	%rd3619, %rd4347, %rd3578;
	and.b64  	%rd3620, %rd3619, %rd3554;
	or.b64  	%rd3621, %rd3620, %rd3618;
	add.s64 	%rd3622, %rd3612, %rd3621;
	add.s64 	%rd4346, %rd3622, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18727,%dummy}, %rd4350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18728}, %rd4350;
	}
	shf.r.wrap.b32 	%r18729, %r18728, %r18727, 14;
	shf.r.wrap.b32 	%r18730, %r18727, %r18728, 14;
	mov.b64 	%rd3623, {%r18730, %r18729};
	shf.r.wrap.b32 	%r18731, %r18728, %r18727, 18;
	shf.r.wrap.b32 	%r18732, %r18727, %r18728, 18;
	mov.b64 	%rd3624, {%r18732, %r18731};
	xor.b64  	%rd3625, %rd3624, %rd3623;
	shf.l.wrap.b32 	%r18733, %r18727, %r18728, 23;
	shf.l.wrap.b32 	%r18734, %r18728, %r18727, 23;
	mov.b64 	%rd3626, {%r18734, %r18733};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	xor.b64  	%rd3628, %rd4351, %rd3567;
	and.b64  	%rd3629, %rd4350, %rd3628;
	xor.b64  	%rd3630, %rd3629, %rd3567;
	add.s64 	%rd3631, %rd3543, %rd4337;
	add.s64 	%rd3632, %rd3631, %rd15;
	add.s64 	%rd3633, %rd3632, %rd3630;
	add.s64 	%rd3634, %rd3633, %rd3627;
	add.s64 	%rd4349, %rd3634, %rd3554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18735,%dummy}, %rd4346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18736}, %rd4346;
	}
	shf.r.wrap.b32 	%r18737, %r18736, %r18735, 28;
	shf.r.wrap.b32 	%r18738, %r18735, %r18736, 28;
	mov.b64 	%rd3635, {%r18738, %r18737};
	shf.l.wrap.b32 	%r18739, %r18735, %r18736, 30;
	shf.l.wrap.b32 	%r18740, %r18736, %r18735, 30;
	mov.b64 	%rd3636, {%r18740, %r18739};
	xor.b64  	%rd3637, %rd3636, %rd3635;
	shf.l.wrap.b32 	%r18741, %r18735, %r18736, 25;
	shf.l.wrap.b32 	%r18742, %r18736, %r18735, 25;
	mov.b64 	%rd3638, {%r18742, %r18741};
	xor.b64  	%rd3639, %rd3637, %rd3638;
	and.b64  	%rd3640, %rd4346, %rd4347;
	xor.b64  	%rd3641, %rd4346, %rd4347;
	and.b64  	%rd3642, %rd3641, %rd3578;
	or.b64  	%rd3643, %rd3642, %rd3640;
	add.s64 	%rd3644, %rd3634, %rd3643;
	add.s64 	%rd4345, %rd3644, %rd3639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18743,%dummy}, %rd4349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18744}, %rd4349;
	}
	shf.r.wrap.b32 	%r18745, %r18744, %r18743, 14;
	shf.r.wrap.b32 	%r18746, %r18743, %r18744, 14;
	mov.b64 	%rd3645, {%r18746, %r18745};
	shf.r.wrap.b32 	%r18747, %r18744, %r18743, 18;
	shf.r.wrap.b32 	%r18748, %r18743, %r18744, 18;
	mov.b64 	%rd3646, {%r18748, %r18747};
	xor.b64  	%rd3647, %rd3646, %rd3645;
	shf.l.wrap.b32 	%r18749, %r18743, %r18744, 23;
	shf.l.wrap.b32 	%r18750, %r18744, %r18743, 23;
	mov.b64 	%rd3648, {%r18750, %r18749};
	xor.b64  	%rd3649, %rd3647, %rd3648;
	xor.b64  	%rd3650, %rd4350, %rd4351;
	and.b64  	%rd3651, %rd4349, %rd3650;
	xor.b64  	%rd3652, %rd3651, %rd4351;
	add.s64 	%rd3653, %rd3567, %rd4336;
	add.s64 	%rd3654, %rd3653, %rd16;
	add.s64 	%rd3655, %rd3654, %rd3652;
	add.s64 	%rd3656, %rd3655, %rd3649;
	add.s64 	%rd4348, %rd3656, %rd3578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18751,%dummy}, %rd4345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18752}, %rd4345;
	}
	shf.r.wrap.b32 	%r18753, %r18752, %r18751, 28;
	shf.r.wrap.b32 	%r18754, %r18751, %r18752, 28;
	mov.b64 	%rd3657, {%r18754, %r18753};
	shf.l.wrap.b32 	%r18755, %r18751, %r18752, 30;
	shf.l.wrap.b32 	%r18756, %r18752, %r18751, 30;
	mov.b64 	%rd3658, {%r18756, %r18755};
	xor.b64  	%rd3659, %rd3658, %rd3657;
	shf.l.wrap.b32 	%r18757, %r18751, %r18752, 25;
	shf.l.wrap.b32 	%r18758, %r18752, %r18751, 25;
	mov.b64 	%rd3660, {%r18758, %r18757};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	and.b64  	%rd3662, %rd4345, %rd4346;
	xor.b64  	%rd3663, %rd4345, %rd4346;
	and.b64  	%rd3664, %rd3663, %rd4347;
	or.b64  	%rd3665, %rd3664, %rd3662;
	add.s64 	%rd3666, %rd3656, %rd3665;
	add.s64 	%rd4344, %rd3666, %rd3661;
	mov.u32 	%r19398, 16;

BB2_308:
	shr.u64 	%rd3667, %rd4337, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18759,%dummy}, %rd4337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18760}, %rd4337;
	}
	shf.r.wrap.b32 	%r18761, %r18760, %r18759, 19;
	shf.r.wrap.b32 	%r18762, %r18759, %r18760, 19;
	mov.b64 	%rd3668, {%r18762, %r18761};
	xor.b64  	%rd3669, %rd3668, %rd3667;
	shf.l.wrap.b32 	%r18763, %r18759, %r18760, 3;
	shf.l.wrap.b32 	%r18764, %r18760, %r18759, 3;
	mov.b64 	%rd3670, {%r18764, %r18763};
	xor.b64  	%rd3671, %rd3669, %rd3670;
	shr.u64 	%rd3672, %rd4353, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18765,%dummy}, %rd4353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18766}, %rd4353;
	}
	shf.r.wrap.b32 	%r18767, %r18766, %r18765, 1;
	shf.r.wrap.b32 	%r18768, %r18765, %r18766, 1;
	mov.b64 	%rd3673, {%r18768, %r18767};
	xor.b64  	%rd3674, %rd3673, %rd3672;
	shf.r.wrap.b32 	%r18769, %r18766, %r18765, 8;
	shf.r.wrap.b32 	%r18770, %r18765, %r18766, 8;
	mov.b64 	%rd3675, {%r18770, %r18769};
	xor.b64  	%rd3676, %rd3674, %rd3675;
	add.s64 	%rd3677, %rd4342, %rd4352;
	add.s64 	%rd3678, %rd3677, %rd3671;
	add.s64 	%rd4352, %rd3678, %rd3676;
	shr.u64 	%rd3679, %rd4336, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18771,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18772}, %rd4336;
	}
	shf.r.wrap.b32 	%r18773, %r18772, %r18771, 19;
	shf.r.wrap.b32 	%r18774, %r18771, %r18772, 19;
	mov.b64 	%rd3680, {%r18774, %r18773};
	xor.b64  	%rd3681, %rd3680, %rd3679;
	shf.l.wrap.b32 	%r18775, %r18771, %r18772, 3;
	shf.l.wrap.b32 	%r18776, %r18772, %r18771, 3;
	mov.b64 	%rd3682, {%r18776, %r18775};
	xor.b64  	%rd3683, %rd3681, %rd3682;
	shr.u64 	%rd3684, %rd4354, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18777,%dummy}, %rd4354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18778}, %rd4354;
	}
	shf.r.wrap.b32 	%r18779, %r18778, %r18777, 1;
	shf.r.wrap.b32 	%r18780, %r18777, %r18778, 1;
	mov.b64 	%rd3685, {%r18780, %r18779};
	xor.b64  	%rd3686, %rd3685, %rd3684;
	shf.r.wrap.b32 	%r18781, %r18778, %r18777, 8;
	shf.r.wrap.b32 	%r18782, %r18777, %r18778, 8;
	mov.b64 	%rd3687, {%r18782, %r18781};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	add.s64 	%rd3689, %rd4341, %rd4353;
	add.s64 	%rd3690, %rd3689, %rd3683;
	add.s64 	%rd4353, %rd3690, %rd3688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18783,%dummy}, %rd4352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18784}, %rd4352;
	}
	shf.r.wrap.b32 	%r18785, %r18784, %r18783, 19;
	shf.r.wrap.b32 	%r18786, %r18783, %r18784, 19;
	mov.b64 	%rd3691, {%r18786, %r18785};
	shf.l.wrap.b32 	%r18787, %r18783, %r18784, 3;
	shf.l.wrap.b32 	%r18788, %r18784, %r18783, 3;
	mov.b64 	%rd3692, {%r18788, %r18787};
	shr.u64 	%rd3693, %rd4352, 6;
	xor.b64  	%rd3694, %rd3691, %rd3693;
	xor.b64  	%rd3695, %rd3694, %rd3692;
	shr.u64 	%rd3696, %rd4355, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18789,%dummy}, %rd4355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18790}, %rd4355;
	}
	shf.r.wrap.b32 	%r18791, %r18790, %r18789, 1;
	shf.r.wrap.b32 	%r18792, %r18789, %r18790, 1;
	mov.b64 	%rd3697, {%r18792, %r18791};
	xor.b64  	%rd3698, %rd3697, %rd3696;
	shf.r.wrap.b32 	%r18793, %r18790, %r18789, 8;
	shf.r.wrap.b32 	%r18794, %r18789, %r18790, 8;
	mov.b64 	%rd3699, {%r18794, %r18793};
	xor.b64  	%rd3700, %rd3698, %rd3699;
	add.s64 	%rd3701, %rd4340, %rd4354;
	add.s64 	%rd3702, %rd3701, %rd3695;
	add.s64 	%rd4354, %rd3702, %rd3700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18795,%dummy}, %rd4353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18796}, %rd4353;
	}
	shf.r.wrap.b32 	%r18797, %r18796, %r18795, 19;
	shf.r.wrap.b32 	%r18798, %r18795, %r18796, 19;
	mov.b64 	%rd3703, {%r18798, %r18797};
	shf.l.wrap.b32 	%r18799, %r18795, %r18796, 3;
	shf.l.wrap.b32 	%r18800, %r18796, %r18795, 3;
	mov.b64 	%rd3704, {%r18800, %r18799};
	shr.u64 	%rd3705, %rd4353, 6;
	xor.b64  	%rd3706, %rd3703, %rd3705;
	xor.b64  	%rd3707, %rd3706, %rd3704;
	shr.u64 	%rd3708, %rd4356, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18801,%dummy}, %rd4356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18802}, %rd4356;
	}
	shf.r.wrap.b32 	%r18803, %r18802, %r18801, 1;
	shf.r.wrap.b32 	%r18804, %r18801, %r18802, 1;
	mov.b64 	%rd3709, {%r18804, %r18803};
	xor.b64  	%rd3710, %rd3709, %rd3708;
	shf.r.wrap.b32 	%r18805, %r18802, %r18801, 8;
	shf.r.wrap.b32 	%r18806, %r18801, %r18802, 8;
	mov.b64 	%rd3711, {%r18806, %r18805};
	xor.b64  	%rd3712, %rd3710, %rd3711;
	add.s64 	%rd3713, %rd4339, %rd4355;
	add.s64 	%rd3714, %rd3713, %rd3707;
	add.s64 	%rd4355, %rd3714, %rd3712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18807,%dummy}, %rd4354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18808}, %rd4354;
	}
	shf.r.wrap.b32 	%r18809, %r18808, %r18807, 19;
	shf.r.wrap.b32 	%r18810, %r18807, %r18808, 19;
	mov.b64 	%rd3715, {%r18810, %r18809};
	shf.l.wrap.b32 	%r18811, %r18807, %r18808, 3;
	shf.l.wrap.b32 	%r18812, %r18808, %r18807, 3;
	mov.b64 	%rd3716, {%r18812, %r18811};
	shr.u64 	%rd3717, %rd4354, 6;
	xor.b64  	%rd3718, %rd3715, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3716;
	shr.u64 	%rd3720, %rd4357, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18813,%dummy}, %rd4357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18814}, %rd4357;
	}
	shf.r.wrap.b32 	%r18815, %r18814, %r18813, 1;
	shf.r.wrap.b32 	%r18816, %r18813, %r18814, 1;
	mov.b64 	%rd3721, {%r18816, %r18815};
	xor.b64  	%rd3722, %rd3721, %rd3720;
	shf.r.wrap.b32 	%r18817, %r18814, %r18813, 8;
	shf.r.wrap.b32 	%r18818, %r18813, %r18814, 8;
	mov.b64 	%rd3723, {%r18818, %r18817};
	xor.b64  	%rd3724, %rd3722, %rd3723;
	add.s64 	%rd3725, %rd4338, %rd4356;
	add.s64 	%rd3726, %rd3725, %rd3719;
	add.s64 	%rd4356, %rd3726, %rd3724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18819,%dummy}, %rd4355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18820}, %rd4355;
	}
	shf.r.wrap.b32 	%r18821, %r18820, %r18819, 19;
	shf.r.wrap.b32 	%r18822, %r18819, %r18820, 19;
	mov.b64 	%rd3727, {%r18822, %r18821};
	shf.l.wrap.b32 	%r18823, %r18819, %r18820, 3;
	shf.l.wrap.b32 	%r18824, %r18820, %r18819, 3;
	mov.b64 	%rd3728, {%r18824, %r18823};
	shr.u64 	%rd3729, %rd4355, 6;
	xor.b64  	%rd3730, %rd3727, %rd3729;
	xor.b64  	%rd3731, %rd3730, %rd3728;
	shr.u64 	%rd3732, %rd4358, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18825,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18826}, %rd4358;
	}
	shf.r.wrap.b32 	%r18827, %r18826, %r18825, 1;
	shf.r.wrap.b32 	%r18828, %r18825, %r18826, 1;
	mov.b64 	%rd3733, {%r18828, %r18827};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	shf.r.wrap.b32 	%r18829, %r18826, %r18825, 8;
	shf.r.wrap.b32 	%r18830, %r18825, %r18826, 8;
	mov.b64 	%rd3735, {%r18830, %r18829};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	add.s64 	%rd3737, %rd4337, %rd4357;
	add.s64 	%rd3738, %rd3737, %rd3731;
	add.s64 	%rd4357, %rd3738, %rd3736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18831,%dummy}, %rd4356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18832}, %rd4356;
	}
	shf.r.wrap.b32 	%r18833, %r18832, %r18831, 19;
	shf.r.wrap.b32 	%r18834, %r18831, %r18832, 19;
	mov.b64 	%rd3739, {%r18834, %r18833};
	shf.l.wrap.b32 	%r18835, %r18831, %r18832, 3;
	shf.l.wrap.b32 	%r18836, %r18832, %r18831, 3;
	mov.b64 	%rd3740, {%r18836, %r18835};
	shr.u64 	%rd3741, %rd4356, 6;
	xor.b64  	%rd3742, %rd3739, %rd3741;
	xor.b64  	%rd3743, %rd3742, %rd3740;
	shr.u64 	%rd3744, %rd4359, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18837,%dummy}, %rd4359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18838}, %rd4359;
	}
	shf.r.wrap.b32 	%r18839, %r18838, %r18837, 1;
	shf.r.wrap.b32 	%r18840, %r18837, %r18838, 1;
	mov.b64 	%rd3745, {%r18840, %r18839};
	xor.b64  	%rd3746, %rd3745, %rd3744;
	shf.r.wrap.b32 	%r18841, %r18838, %r18837, 8;
	shf.r.wrap.b32 	%r18842, %r18837, %r18838, 8;
	mov.b64 	%rd3747, {%r18842, %r18841};
	xor.b64  	%rd3748, %rd3746, %rd3747;
	add.s64 	%rd3749, %rd4336, %rd4358;
	add.s64 	%rd3750, %rd3749, %rd3743;
	add.s64 	%rd4358, %rd3750, %rd3748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18843,%dummy}, %rd4357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18844}, %rd4357;
	}
	shf.r.wrap.b32 	%r18845, %r18844, %r18843, 19;
	shf.r.wrap.b32 	%r18846, %r18843, %r18844, 19;
	mov.b64 	%rd3751, {%r18846, %r18845};
	shf.l.wrap.b32 	%r18847, %r18843, %r18844, 3;
	shf.l.wrap.b32 	%r18848, %r18844, %r18843, 3;
	mov.b64 	%rd3752, {%r18848, %r18847};
	shr.u64 	%rd3753, %rd4357, 6;
	xor.b64  	%rd3754, %rd3751, %rd3753;
	xor.b64  	%rd3755, %rd3754, %rd3752;
	shr.u64 	%rd3756, %rd4343, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18849,%dummy}, %rd4343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18850}, %rd4343;
	}
	shf.r.wrap.b32 	%r18851, %r18850, %r18849, 1;
	shf.r.wrap.b32 	%r18852, %r18849, %r18850, 1;
	mov.b64 	%rd3757, {%r18852, %r18851};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	shf.r.wrap.b32 	%r18853, %r18850, %r18849, 8;
	shf.r.wrap.b32 	%r18854, %r18849, %r18850, 8;
	mov.b64 	%rd3759, {%r18854, %r18853};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	add.s64 	%rd3761, %rd4352, %rd4359;
	add.s64 	%rd3762, %rd3761, %rd3755;
	add.s64 	%rd4359, %rd3762, %rd3760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18855,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18856}, %rd4358;
	}
	shf.r.wrap.b32 	%r18857, %r18856, %r18855, 19;
	shf.r.wrap.b32 	%r18858, %r18855, %r18856, 19;
	mov.b64 	%rd3763, {%r18858, %r18857};
	shf.l.wrap.b32 	%r18859, %r18855, %r18856, 3;
	shf.l.wrap.b32 	%r18860, %r18856, %r18855, 3;
	mov.b64 	%rd3764, {%r18860, %r18859};
	shr.u64 	%rd3765, %rd4358, 6;
	xor.b64  	%rd3766, %rd3763, %rd3765;
	xor.b64  	%rd3767, %rd3766, %rd3764;
	shr.u64 	%rd3768, %rd4342, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18861,%dummy}, %rd4342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18862}, %rd4342;
	}
	shf.r.wrap.b32 	%r18863, %r18862, %r18861, 1;
	shf.r.wrap.b32 	%r18864, %r18861, %r18862, 1;
	mov.b64 	%rd3769, {%r18864, %r18863};
	xor.b64  	%rd3770, %rd3769, %rd3768;
	shf.r.wrap.b32 	%r18865, %r18862, %r18861, 8;
	shf.r.wrap.b32 	%r18866, %r18861, %r18862, 8;
	mov.b64 	%rd3771, {%r18866, %r18865};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	add.s64 	%rd3773, %rd4353, %rd4343;
	add.s64 	%rd3774, %rd3773, %rd3767;
	add.s64 	%rd4343, %rd3774, %rd3772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18867,%dummy}, %rd4359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18868}, %rd4359;
	}
	shf.r.wrap.b32 	%r18869, %r18868, %r18867, 19;
	shf.r.wrap.b32 	%r18870, %r18867, %r18868, 19;
	mov.b64 	%rd3775, {%r18870, %r18869};
	shf.l.wrap.b32 	%r18871, %r18867, %r18868, 3;
	shf.l.wrap.b32 	%r18872, %r18868, %r18867, 3;
	mov.b64 	%rd3776, {%r18872, %r18871};
	shr.u64 	%rd3777, %rd4359, 6;
	xor.b64  	%rd3778, %rd3775, %rd3777;
	xor.b64  	%rd3779, %rd3778, %rd3776;
	shr.u64 	%rd3780, %rd4341, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18873,%dummy}, %rd4341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18874}, %rd4341;
	}
	shf.r.wrap.b32 	%r18875, %r18874, %r18873, 1;
	shf.r.wrap.b32 	%r18876, %r18873, %r18874, 1;
	mov.b64 	%rd3781, {%r18876, %r18875};
	xor.b64  	%rd3782, %rd3781, %rd3780;
	shf.r.wrap.b32 	%r18877, %r18874, %r18873, 8;
	shf.r.wrap.b32 	%r18878, %r18873, %r18874, 8;
	mov.b64 	%rd3783, {%r18878, %r18877};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	add.s64 	%rd3785, %rd4354, %rd4342;
	add.s64 	%rd3786, %rd3785, %rd3779;
	add.s64 	%rd4342, %rd3786, %rd3784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18879,%dummy}, %rd4343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18880}, %rd4343;
	}
	shf.r.wrap.b32 	%r18881, %r18880, %r18879, 19;
	shf.r.wrap.b32 	%r18882, %r18879, %r18880, 19;
	mov.b64 	%rd3787, {%r18882, %r18881};
	shf.l.wrap.b32 	%r18883, %r18879, %r18880, 3;
	shf.l.wrap.b32 	%r18884, %r18880, %r18879, 3;
	mov.b64 	%rd3788, {%r18884, %r18883};
	shr.u64 	%rd3789, %rd4343, 6;
	xor.b64  	%rd3790, %rd3787, %rd3789;
	xor.b64  	%rd3791, %rd3790, %rd3788;
	shr.u64 	%rd3792, %rd4340, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18885,%dummy}, %rd4340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18886}, %rd4340;
	}
	shf.r.wrap.b32 	%r18887, %r18886, %r18885, 1;
	shf.r.wrap.b32 	%r18888, %r18885, %r18886, 1;
	mov.b64 	%rd3793, {%r18888, %r18887};
	xor.b64  	%rd3794, %rd3793, %rd3792;
	shf.r.wrap.b32 	%r18889, %r18886, %r18885, 8;
	shf.r.wrap.b32 	%r18890, %r18885, %r18886, 8;
	mov.b64 	%rd3795, {%r18890, %r18889};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	add.s64 	%rd3797, %rd4355, %rd4341;
	add.s64 	%rd3798, %rd3797, %rd3791;
	add.s64 	%rd4341, %rd3798, %rd3796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18891,%dummy}, %rd4342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18892}, %rd4342;
	}
	shf.r.wrap.b32 	%r18893, %r18892, %r18891, 19;
	shf.r.wrap.b32 	%r18894, %r18891, %r18892, 19;
	mov.b64 	%rd3799, {%r18894, %r18893};
	shf.l.wrap.b32 	%r18895, %r18891, %r18892, 3;
	shf.l.wrap.b32 	%r18896, %r18892, %r18891, 3;
	mov.b64 	%rd3800, {%r18896, %r18895};
	shr.u64 	%rd3801, %rd4342, 6;
	xor.b64  	%rd3802, %rd3799, %rd3801;
	xor.b64  	%rd3803, %rd3802, %rd3800;
	shr.u64 	%rd3804, %rd4339, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18897,%dummy}, %rd4339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18898}, %rd4339;
	}
	shf.r.wrap.b32 	%r18899, %r18898, %r18897, 1;
	shf.r.wrap.b32 	%r18900, %r18897, %r18898, 1;
	mov.b64 	%rd3805, {%r18900, %r18899};
	xor.b64  	%rd3806, %rd3805, %rd3804;
	shf.r.wrap.b32 	%r18901, %r18898, %r18897, 8;
	shf.r.wrap.b32 	%r18902, %r18897, %r18898, 8;
	mov.b64 	%rd3807, {%r18902, %r18901};
	xor.b64  	%rd3808, %rd3806, %rd3807;
	add.s64 	%rd3809, %rd4356, %rd4340;
	add.s64 	%rd3810, %rd3809, %rd3803;
	add.s64 	%rd4340, %rd3810, %rd3808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18903,%dummy}, %rd4341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18904}, %rd4341;
	}
	shf.r.wrap.b32 	%r18905, %r18904, %r18903, 19;
	shf.r.wrap.b32 	%r18906, %r18903, %r18904, 19;
	mov.b64 	%rd3811, {%r18906, %r18905};
	shf.l.wrap.b32 	%r18907, %r18903, %r18904, 3;
	shf.l.wrap.b32 	%r18908, %r18904, %r18903, 3;
	mov.b64 	%rd3812, {%r18908, %r18907};
	shr.u64 	%rd3813, %rd4341, 6;
	xor.b64  	%rd3814, %rd3811, %rd3813;
	xor.b64  	%rd3815, %rd3814, %rd3812;
	shr.u64 	%rd3816, %rd4338, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18909,%dummy}, %rd4338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18910}, %rd4338;
	}
	shf.r.wrap.b32 	%r18911, %r18910, %r18909, 1;
	shf.r.wrap.b32 	%r18912, %r18909, %r18910, 1;
	mov.b64 	%rd3817, {%r18912, %r18911};
	xor.b64  	%rd3818, %rd3817, %rd3816;
	shf.r.wrap.b32 	%r18913, %r18910, %r18909, 8;
	shf.r.wrap.b32 	%r18914, %r18909, %r18910, 8;
	mov.b64 	%rd3819, {%r18914, %r18913};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	add.s64 	%rd3821, %rd4357, %rd4339;
	add.s64 	%rd3822, %rd3821, %rd3815;
	add.s64 	%rd4339, %rd3822, %rd3820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18915,%dummy}, %rd4340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18916}, %rd4340;
	}
	shf.r.wrap.b32 	%r18917, %r18916, %r18915, 19;
	shf.r.wrap.b32 	%r18918, %r18915, %r18916, 19;
	mov.b64 	%rd3823, {%r18918, %r18917};
	shf.l.wrap.b32 	%r18919, %r18915, %r18916, 3;
	shf.l.wrap.b32 	%r18920, %r18916, %r18915, 3;
	mov.b64 	%rd3824, {%r18920, %r18919};
	shr.u64 	%rd3825, %rd4340, 6;
	xor.b64  	%rd3826, %rd3823, %rd3825;
	xor.b64  	%rd3827, %rd3826, %rd3824;
	shr.u64 	%rd3828, %rd4337, 7;
	shf.r.wrap.b32 	%r18921, %r18760, %r18759, 1;
	shf.r.wrap.b32 	%r18922, %r18759, %r18760, 1;
	mov.b64 	%rd3829, {%r18922, %r18921};
	xor.b64  	%rd3830, %rd3829, %rd3828;
	shf.r.wrap.b32 	%r18923, %r18760, %r18759, 8;
	shf.r.wrap.b32 	%r18924, %r18759, %r18760, 8;
	mov.b64 	%rd3831, {%r18924, %r18923};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	add.s64 	%rd3833, %rd4358, %rd4338;
	add.s64 	%rd3834, %rd3833, %rd3827;
	add.s64 	%rd4338, %rd3834, %rd3832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18925,%dummy}, %rd4339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18926}, %rd4339;
	}
	shf.r.wrap.b32 	%r18927, %r18926, %r18925, 19;
	shf.r.wrap.b32 	%r18928, %r18925, %r18926, 19;
	mov.b64 	%rd3835, {%r18928, %r18927};
	shf.l.wrap.b32 	%r18929, %r18925, %r18926, 3;
	shf.l.wrap.b32 	%r18930, %r18926, %r18925, 3;
	mov.b64 	%rd3836, {%r18930, %r18929};
	shr.u64 	%rd3837, %rd4339, 6;
	xor.b64  	%rd3838, %rd3835, %rd3837;
	xor.b64  	%rd3839, %rd3838, %rd3836;
	shr.u64 	%rd3840, %rd4336, 7;
	shf.r.wrap.b32 	%r18931, %r18772, %r18771, 1;
	shf.r.wrap.b32 	%r18932, %r18771, %r18772, 1;
	mov.b64 	%rd3841, {%r18932, %r18931};
	xor.b64  	%rd3842, %rd3841, %rd3840;
	shf.r.wrap.b32 	%r18933, %r18772, %r18771, 8;
	shf.r.wrap.b32 	%r18934, %r18771, %r18772, 8;
	mov.b64 	%rd3843, {%r18934, %r18933};
	xor.b64  	%rd3844, %rd3842, %rd3843;
	add.s64 	%rd3845, %rd4359, %rd4337;
	add.s64 	%rd3846, %rd3845, %rd3839;
	add.s64 	%rd4337, %rd3846, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18935,%dummy}, %rd4338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18936}, %rd4338;
	}
	shf.r.wrap.b32 	%r18937, %r18936, %r18935, 19;
	shf.r.wrap.b32 	%r18938, %r18935, %r18936, 19;
	mov.b64 	%rd3847, {%r18938, %r18937};
	shf.l.wrap.b32 	%r18939, %r18935, %r18936, 3;
	shf.l.wrap.b32 	%r18940, %r18936, %r18935, 3;
	mov.b64 	%rd3848, {%r18940, %r18939};
	shr.u64 	%rd3849, %rd4338, 6;
	xor.b64  	%rd3850, %rd3847, %rd3849;
	xor.b64  	%rd3851, %rd3850, %rd3848;
	shf.r.wrap.b32 	%r18941, %r18784, %r18783, 1;
	shf.r.wrap.b32 	%r18942, %r18783, %r18784, 1;
	mov.b64 	%rd3852, {%r18942, %r18941};
	shf.r.wrap.b32 	%r18943, %r18784, %r18783, 8;
	shf.r.wrap.b32 	%r18944, %r18783, %r18784, 8;
	mov.b64 	%rd3853, {%r18944, %r18943};
	shr.u64 	%rd3854, %rd4352, 7;
	xor.b64  	%rd3855, %rd3852, %rd3854;
	xor.b64  	%rd3856, %rd3855, %rd3853;
	add.s64 	%rd3857, %rd4343, %rd4336;
	add.s64 	%rd3858, %rd3857, %rd3851;
	add.s64 	%rd4336, %rd3858, %rd3856;
	mul.wide.s32 	%rd3859, %r19398, 8;
	mov.u64 	%rd3860, k_sha512;
	add.s64 	%rd3861, %rd3860, %rd3859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18945,%dummy}, %rd4348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18946}, %rd4348;
	}
	shf.r.wrap.b32 	%r18947, %r18946, %r18945, 18;
	shf.r.wrap.b32 	%r18948, %r18945, %r18946, 18;
	mov.b64 	%rd3862, {%r18948, %r18947};
	shf.r.wrap.b32 	%r18949, %r18946, %r18945, 14;
	shf.r.wrap.b32 	%r18950, %r18945, %r18946, 14;
	mov.b64 	%rd3863, {%r18950, %r18949};
	xor.b64  	%rd3864, %rd3862, %rd3863;
	shf.l.wrap.b32 	%r18951, %r18945, %r18946, 23;
	shf.l.wrap.b32 	%r18952, %r18946, %r18945, 23;
	mov.b64 	%rd3865, {%r18952, %r18951};
	xor.b64  	%rd3866, %rd3864, %rd3865;
	xor.b64  	%rd3867, %rd4349, %rd4350;
	and.b64  	%rd3868, %rd4348, %rd3867;
	xor.b64  	%rd3869, %rd3868, %rd4350;
	add.s64 	%rd3870, %rd3869, %rd4351;
	add.s64 	%rd3871, %rd3870, %rd4352;
	ld.const.u64 	%rd3872, [%rd3861];
	add.s64 	%rd3873, %rd3871, %rd3872;
	add.s64 	%rd3874, %rd3873, %rd3866;
	add.s64 	%rd3875, %rd3874, %rd4347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18953}, %rd4344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18954,%dummy}, %rd4344;
	}
	shf.l.wrap.b32 	%r18955, %r18954, %r18953, 30;
	shf.l.wrap.b32 	%r18956, %r18953, %r18954, 30;
	mov.b64 	%rd3876, {%r18956, %r18955};
	shf.r.wrap.b32 	%r18957, %r18953, %r18954, 28;
	shf.r.wrap.b32 	%r18958, %r18954, %r18953, 28;
	mov.b64 	%rd3877, {%r18958, %r18957};
	xor.b64  	%rd3878, %rd3876, %rd3877;
	shf.l.wrap.b32 	%r18959, %r18954, %r18953, 25;
	shf.l.wrap.b32 	%r18960, %r18953, %r18954, 25;
	mov.b64 	%rd3879, {%r18960, %r18959};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	xor.b64  	%rd3881, %rd4344, %rd4345;
	and.b64  	%rd3882, %rd3881, %rd4346;
	and.b64  	%rd3883, %rd4344, %rd4345;
	or.b64  	%rd3884, %rd3882, %rd3883;
	add.s64 	%rd3885, %rd3874, %rd3884;
	add.s64 	%rd3886, %rd3885, %rd3880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18961,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18962}, %rd3875;
	}
	shf.r.wrap.b32 	%r18963, %r18962, %r18961, 14;
	shf.r.wrap.b32 	%r18964, %r18961, %r18962, 14;
	mov.b64 	%rd3887, {%r18964, %r18963};
	shf.r.wrap.b32 	%r18965, %r18962, %r18961, 18;
	shf.r.wrap.b32 	%r18966, %r18961, %r18962, 18;
	mov.b64 	%rd3888, {%r18966, %r18965};
	xor.b64  	%rd3889, %rd3888, %rd3887;
	shf.l.wrap.b32 	%r18967, %r18961, %r18962, 23;
	shf.l.wrap.b32 	%r18968, %r18962, %r18961, 23;
	mov.b64 	%rd3890, {%r18968, %r18967};
	xor.b64  	%rd3891, %rd3889, %rd3890;
	xor.b64  	%rd3892, %rd4348, %rd4349;
	and.b64  	%rd3893, %rd3875, %rd3892;
	xor.b64  	%rd3894, %rd3893, %rd4349;
	add.s64 	%rd3895, %rd4353, %rd4350;
	ld.const.u64 	%rd3896, [%rd3861+8];
	add.s64 	%rd3897, %rd3895, %rd3896;
	add.s64 	%rd3898, %rd3897, %rd3894;
	add.s64 	%rd3899, %rd3898, %rd3891;
	add.s64 	%rd3900, %rd3899, %rd4346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18969,%dummy}, %rd3886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18970}, %rd3886;
	}
	shf.r.wrap.b32 	%r18971, %r18970, %r18969, 28;
	shf.r.wrap.b32 	%r18972, %r18969, %r18970, 28;
	mov.b64 	%rd3901, {%r18972, %r18971};
	shf.l.wrap.b32 	%r18973, %r18969, %r18970, 30;
	shf.l.wrap.b32 	%r18974, %r18970, %r18969, 30;
	mov.b64 	%rd3902, {%r18974, %r18973};
	xor.b64  	%rd3903, %rd3902, %rd3901;
	shf.l.wrap.b32 	%r18975, %r18969, %r18970, 25;
	shf.l.wrap.b32 	%r18976, %r18970, %r18969, 25;
	mov.b64 	%rd3904, {%r18976, %r18975};
	xor.b64  	%rd3905, %rd3903, %rd3904;
	and.b64  	%rd3906, %rd3886, %rd4344;
	xor.b64  	%rd3907, %rd3886, %rd4344;
	and.b64  	%rd3908, %rd3907, %rd4345;
	or.b64  	%rd3909, %rd3908, %rd3906;
	add.s64 	%rd3910, %rd3899, %rd3909;
	add.s64 	%rd3911, %rd3910, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18977,%dummy}, %rd3900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18978}, %rd3900;
	}
	shf.r.wrap.b32 	%r18979, %r18978, %r18977, 14;
	shf.r.wrap.b32 	%r18980, %r18977, %r18978, 14;
	mov.b64 	%rd3912, {%r18980, %r18979};
	shf.r.wrap.b32 	%r18981, %r18978, %r18977, 18;
	shf.r.wrap.b32 	%r18982, %r18977, %r18978, 18;
	mov.b64 	%rd3913, {%r18982, %r18981};
	xor.b64  	%rd3914, %rd3913, %rd3912;
	shf.l.wrap.b32 	%r18983, %r18977, %r18978, 23;
	shf.l.wrap.b32 	%r18984, %r18978, %r18977, 23;
	mov.b64 	%rd3915, {%r18984, %r18983};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	xor.b64  	%rd3917, %rd3875, %rd4348;
	and.b64  	%rd3918, %rd3900, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd4348;
	add.s64 	%rd3920, %rd4354, %rd4349;
	ld.const.u64 	%rd3921, [%rd3861+16];
	add.s64 	%rd3922, %rd3920, %rd3921;
	add.s64 	%rd3923, %rd3922, %rd3919;
	add.s64 	%rd3924, %rd3923, %rd3916;
	add.s64 	%rd3925, %rd3924, %rd4345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18985,%dummy}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18986}, %rd3911;
	}
	shf.r.wrap.b32 	%r18987, %r18986, %r18985, 28;
	shf.r.wrap.b32 	%r18988, %r18985, %r18986, 28;
	mov.b64 	%rd3926, {%r18988, %r18987};
	shf.l.wrap.b32 	%r18989, %r18985, %r18986, 30;
	shf.l.wrap.b32 	%r18990, %r18986, %r18985, 30;
	mov.b64 	%rd3927, {%r18990, %r18989};
	xor.b64  	%rd3928, %rd3927, %rd3926;
	shf.l.wrap.b32 	%r18991, %r18985, %r18986, 25;
	shf.l.wrap.b32 	%r18992, %r18986, %r18985, 25;
	mov.b64 	%rd3929, {%r18992, %r18991};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	and.b64  	%rd3931, %rd3911, %rd3886;
	xor.b64  	%rd3932, %rd3911, %rd3886;
	and.b64  	%rd3933, %rd3932, %rd4344;
	or.b64  	%rd3934, %rd3933, %rd3931;
	add.s64 	%rd3935, %rd3924, %rd3934;
	add.s64 	%rd3936, %rd3935, %rd3930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18993,%dummy}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18994}, %rd3925;
	}
	shf.r.wrap.b32 	%r18995, %r18994, %r18993, 14;
	shf.r.wrap.b32 	%r18996, %r18993, %r18994, 14;
	mov.b64 	%rd3937, {%r18996, %r18995};
	shf.r.wrap.b32 	%r18997, %r18994, %r18993, 18;
	shf.r.wrap.b32 	%r18998, %r18993, %r18994, 18;
	mov.b64 	%rd3938, {%r18998, %r18997};
	xor.b64  	%rd3939, %rd3938, %rd3937;
	shf.l.wrap.b32 	%r18999, %r18993, %r18994, 23;
	shf.l.wrap.b32 	%r19000, %r18994, %r18993, 23;
	mov.b64 	%rd3940, {%r19000, %r18999};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	xor.b64  	%rd3942, %rd3900, %rd3875;
	and.b64  	%rd3943, %rd3925, %rd3942;
	xor.b64  	%rd3944, %rd3943, %rd3875;
	add.s64 	%rd3945, %rd4355, %rd4348;
	ld.const.u64 	%rd3946, [%rd3861+24];
	add.s64 	%rd3947, %rd3945, %rd3946;
	add.s64 	%rd3948, %rd3947, %rd3944;
	add.s64 	%rd3949, %rd3948, %rd3941;
	add.s64 	%rd3950, %rd3949, %rd4344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19001,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19002}, %rd3936;
	}
	shf.r.wrap.b32 	%r19003, %r19002, %r19001, 28;
	shf.r.wrap.b32 	%r19004, %r19001, %r19002, 28;
	mov.b64 	%rd3951, {%r19004, %r19003};
	shf.l.wrap.b32 	%r19005, %r19001, %r19002, 30;
	shf.l.wrap.b32 	%r19006, %r19002, %r19001, 30;
	mov.b64 	%rd3952, {%r19006, %r19005};
	xor.b64  	%rd3953, %rd3952, %rd3951;
	shf.l.wrap.b32 	%r19007, %r19001, %r19002, 25;
	shf.l.wrap.b32 	%r19008, %r19002, %r19001, 25;
	mov.b64 	%rd3954, {%r19008, %r19007};
	xor.b64  	%rd3955, %rd3953, %rd3954;
	and.b64  	%rd3956, %rd3936, %rd3911;
	xor.b64  	%rd3957, %rd3936, %rd3911;
	and.b64  	%rd3958, %rd3957, %rd3886;
	or.b64  	%rd3959, %rd3958, %rd3956;
	add.s64 	%rd3960, %rd3949, %rd3959;
	add.s64 	%rd3961, %rd3960, %rd3955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19009,%dummy}, %rd3950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19010}, %rd3950;
	}
	shf.r.wrap.b32 	%r19011, %r19010, %r19009, 14;
	shf.r.wrap.b32 	%r19012, %r19009, %r19010, 14;
	mov.b64 	%rd3962, {%r19012, %r19011};
	shf.r.wrap.b32 	%r19013, %r19010, %r19009, 18;
	shf.r.wrap.b32 	%r19014, %r19009, %r19010, 18;
	mov.b64 	%rd3963, {%r19014, %r19013};
	xor.b64  	%rd3964, %rd3963, %rd3962;
	shf.l.wrap.b32 	%r19015, %r19009, %r19010, 23;
	shf.l.wrap.b32 	%r19016, %r19010, %r19009, 23;
	mov.b64 	%rd3965, {%r19016, %r19015};
	xor.b64  	%rd3966, %rd3964, %rd3965;
	xor.b64  	%rd3967, %rd3925, %rd3900;
	and.b64  	%rd3968, %rd3950, %rd3967;
	xor.b64  	%rd3969, %rd3968, %rd3900;
	add.s64 	%rd3970, %rd3875, %rd4356;
	ld.const.u64 	%rd3971, [%rd3861+32];
	add.s64 	%rd3972, %rd3970, %rd3971;
	add.s64 	%rd3973, %rd3972, %rd3969;
	add.s64 	%rd3974, %rd3973, %rd3966;
	add.s64 	%rd3975, %rd3974, %rd3886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19017,%dummy}, %rd3961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19018}, %rd3961;
	}
	shf.r.wrap.b32 	%r19019, %r19018, %r19017, 28;
	shf.r.wrap.b32 	%r19020, %r19017, %r19018, 28;
	mov.b64 	%rd3976, {%r19020, %r19019};
	shf.l.wrap.b32 	%r19021, %r19017, %r19018, 30;
	shf.l.wrap.b32 	%r19022, %r19018, %r19017, 30;
	mov.b64 	%rd3977, {%r19022, %r19021};
	xor.b64  	%rd3978, %rd3977, %rd3976;
	shf.l.wrap.b32 	%r19023, %r19017, %r19018, 25;
	shf.l.wrap.b32 	%r19024, %r19018, %r19017, 25;
	mov.b64 	%rd3979, {%r19024, %r19023};
	xor.b64  	%rd3980, %rd3978, %rd3979;
	and.b64  	%rd3981, %rd3961, %rd3936;
	xor.b64  	%rd3982, %rd3961, %rd3936;
	and.b64  	%rd3983, %rd3982, %rd3911;
	or.b64  	%rd3984, %rd3983, %rd3981;
	add.s64 	%rd3985, %rd3974, %rd3984;
	add.s64 	%rd3986, %rd3985, %rd3980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19025,%dummy}, %rd3975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19026}, %rd3975;
	}
	shf.r.wrap.b32 	%r19027, %r19026, %r19025, 14;
	shf.r.wrap.b32 	%r19028, %r19025, %r19026, 14;
	mov.b64 	%rd3987, {%r19028, %r19027};
	shf.r.wrap.b32 	%r19029, %r19026, %r19025, 18;
	shf.r.wrap.b32 	%r19030, %r19025, %r19026, 18;
	mov.b64 	%rd3988, {%r19030, %r19029};
	xor.b64  	%rd3989, %rd3988, %rd3987;
	shf.l.wrap.b32 	%r19031, %r19025, %r19026, 23;
	shf.l.wrap.b32 	%r19032, %r19026, %r19025, 23;
	mov.b64 	%rd3990, {%r19032, %r19031};
	xor.b64  	%rd3991, %rd3989, %rd3990;
	xor.b64  	%rd3992, %rd3950, %rd3925;
	and.b64  	%rd3993, %rd3975, %rd3992;
	xor.b64  	%rd3994, %rd3993, %rd3925;
	add.s64 	%rd3995, %rd3900, %rd4357;
	ld.const.u64 	%rd3996, [%rd3861+40];
	add.s64 	%rd3997, %rd3995, %rd3996;
	add.s64 	%rd3998, %rd3997, %rd3994;
	add.s64 	%rd3999, %rd3998, %rd3991;
	add.s64 	%rd4000, %rd3999, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19033,%dummy}, %rd3986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19034}, %rd3986;
	}
	shf.r.wrap.b32 	%r19035, %r19034, %r19033, 28;
	shf.r.wrap.b32 	%r19036, %r19033, %r19034, 28;
	mov.b64 	%rd4001, {%r19036, %r19035};
	shf.l.wrap.b32 	%r19037, %r19033, %r19034, 30;
	shf.l.wrap.b32 	%r19038, %r19034, %r19033, 30;
	mov.b64 	%rd4002, {%r19038, %r19037};
	xor.b64  	%rd4003, %rd4002, %rd4001;
	shf.l.wrap.b32 	%r19039, %r19033, %r19034, 25;
	shf.l.wrap.b32 	%r19040, %r19034, %r19033, 25;
	mov.b64 	%rd4004, {%r19040, %r19039};
	xor.b64  	%rd4005, %rd4003, %rd4004;
	and.b64  	%rd4006, %rd3986, %rd3961;
	xor.b64  	%rd4007, %rd3986, %rd3961;
	and.b64  	%rd4008, %rd4007, %rd3936;
	or.b64  	%rd4009, %rd4008, %rd4006;
	add.s64 	%rd4010, %rd3999, %rd4009;
	add.s64 	%rd4011, %rd4010, %rd4005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19041,%dummy}, %rd4000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19042}, %rd4000;
	}
	shf.r.wrap.b32 	%r19043, %r19042, %r19041, 14;
	shf.r.wrap.b32 	%r19044, %r19041, %r19042, 14;
	mov.b64 	%rd4012, {%r19044, %r19043};
	shf.r.wrap.b32 	%r19045, %r19042, %r19041, 18;
	shf.r.wrap.b32 	%r19046, %r19041, %r19042, 18;
	mov.b64 	%rd4013, {%r19046, %r19045};
	xor.b64  	%rd4014, %rd4013, %rd4012;
	shf.l.wrap.b32 	%r19047, %r19041, %r19042, 23;
	shf.l.wrap.b32 	%r19048, %r19042, %r19041, 23;
	mov.b64 	%rd4015, {%r19048, %r19047};
	xor.b64  	%rd4016, %rd4014, %rd4015;
	xor.b64  	%rd4017, %rd3975, %rd3950;
	and.b64  	%rd4018, %rd4000, %rd4017;
	xor.b64  	%rd4019, %rd4018, %rd3950;
	add.s64 	%rd4020, %rd3925, %rd4358;
	ld.const.u64 	%rd4021, [%rd3861+48];
	add.s64 	%rd4022, %rd4020, %rd4021;
	add.s64 	%rd4023, %rd4022, %rd4019;
	add.s64 	%rd4024, %rd4023, %rd4016;
	add.s64 	%rd4025, %rd4024, %rd3936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19049,%dummy}, %rd4011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19050}, %rd4011;
	}
	shf.r.wrap.b32 	%r19051, %r19050, %r19049, 28;
	shf.r.wrap.b32 	%r19052, %r19049, %r19050, 28;
	mov.b64 	%rd4026, {%r19052, %r19051};
	shf.l.wrap.b32 	%r19053, %r19049, %r19050, 30;
	shf.l.wrap.b32 	%r19054, %r19050, %r19049, 30;
	mov.b64 	%rd4027, {%r19054, %r19053};
	xor.b64  	%rd4028, %rd4027, %rd4026;
	shf.l.wrap.b32 	%r19055, %r19049, %r19050, 25;
	shf.l.wrap.b32 	%r19056, %r19050, %r19049, 25;
	mov.b64 	%rd4029, {%r19056, %r19055};
	xor.b64  	%rd4030, %rd4028, %rd4029;
	and.b64  	%rd4031, %rd4011, %rd3986;
	xor.b64  	%rd4032, %rd4011, %rd3986;
	and.b64  	%rd4033, %rd4032, %rd3961;
	or.b64  	%rd4034, %rd4033, %rd4031;
	add.s64 	%rd4035, %rd4024, %rd4034;
	add.s64 	%rd4036, %rd4035, %rd4030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19057,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19058}, %rd4025;
	}
	shf.r.wrap.b32 	%r19059, %r19058, %r19057, 14;
	shf.r.wrap.b32 	%r19060, %r19057, %r19058, 14;
	mov.b64 	%rd4037, {%r19060, %r19059};
	shf.r.wrap.b32 	%r19061, %r19058, %r19057, 18;
	shf.r.wrap.b32 	%r19062, %r19057, %r19058, 18;
	mov.b64 	%rd4038, {%r19062, %r19061};
	xor.b64  	%rd4039, %rd4038, %rd4037;
	shf.l.wrap.b32 	%r19063, %r19057, %r19058, 23;
	shf.l.wrap.b32 	%r19064, %r19058, %r19057, 23;
	mov.b64 	%rd4040, {%r19064, %r19063};
	xor.b64  	%rd4041, %rd4039, %rd4040;
	xor.b64  	%rd4042, %rd4000, %rd3975;
	and.b64  	%rd4043, %rd4025, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd3975;
	add.s64 	%rd4045, %rd3950, %rd4359;
	ld.const.u64 	%rd4046, [%rd3861+56];
	add.s64 	%rd4047, %rd4045, %rd4046;
	add.s64 	%rd4048, %rd4047, %rd4044;
	add.s64 	%rd4049, %rd4048, %rd4041;
	add.s64 	%rd4050, %rd4049, %rd3961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19065,%dummy}, %rd4036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19066}, %rd4036;
	}
	shf.r.wrap.b32 	%r19067, %r19066, %r19065, 28;
	shf.r.wrap.b32 	%r19068, %r19065, %r19066, 28;
	mov.b64 	%rd4051, {%r19068, %r19067};
	shf.l.wrap.b32 	%r19069, %r19065, %r19066, 30;
	shf.l.wrap.b32 	%r19070, %r19066, %r19065, 30;
	mov.b64 	%rd4052, {%r19070, %r19069};
	xor.b64  	%rd4053, %rd4052, %rd4051;
	shf.l.wrap.b32 	%r19071, %r19065, %r19066, 25;
	shf.l.wrap.b32 	%r19072, %r19066, %r19065, 25;
	mov.b64 	%rd4054, {%r19072, %r19071};
	xor.b64  	%rd4055, %rd4053, %rd4054;
	and.b64  	%rd4056, %rd4036, %rd4011;
	xor.b64  	%rd4057, %rd4036, %rd4011;
	and.b64  	%rd4058, %rd4057, %rd3986;
	or.b64  	%rd4059, %rd4058, %rd4056;
	add.s64 	%rd4060, %rd4049, %rd4059;
	add.s64 	%rd4061, %rd4060, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19073,%dummy}, %rd4050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19074}, %rd4050;
	}
	shf.r.wrap.b32 	%r19075, %r19074, %r19073, 14;
	shf.r.wrap.b32 	%r19076, %r19073, %r19074, 14;
	mov.b64 	%rd4062, {%r19076, %r19075};
	shf.r.wrap.b32 	%r19077, %r19074, %r19073, 18;
	shf.r.wrap.b32 	%r19078, %r19073, %r19074, 18;
	mov.b64 	%rd4063, {%r19078, %r19077};
	xor.b64  	%rd4064, %rd4063, %rd4062;
	shf.l.wrap.b32 	%r19079, %r19073, %r19074, 23;
	shf.l.wrap.b32 	%r19080, %r19074, %r19073, 23;
	mov.b64 	%rd4065, {%r19080, %r19079};
	xor.b64  	%rd4066, %rd4064, %rd4065;
	xor.b64  	%rd4067, %rd4025, %rd4000;
	and.b64  	%rd4068, %rd4050, %rd4067;
	xor.b64  	%rd4069, %rd4068, %rd4000;
	add.s64 	%rd4070, %rd3975, %rd4343;
	ld.const.u64 	%rd4071, [%rd3861+64];
	add.s64 	%rd4072, %rd4070, %rd4071;
	add.s64 	%rd4073, %rd4072, %rd4069;
	add.s64 	%rd4074, %rd4073, %rd4066;
	add.s64 	%rd4075, %rd4074, %rd3986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19081,%dummy}, %rd4061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19082}, %rd4061;
	}
	shf.r.wrap.b32 	%r19083, %r19082, %r19081, 28;
	shf.r.wrap.b32 	%r19084, %r19081, %r19082, 28;
	mov.b64 	%rd4076, {%r19084, %r19083};
	shf.l.wrap.b32 	%r19085, %r19081, %r19082, 30;
	shf.l.wrap.b32 	%r19086, %r19082, %r19081, 30;
	mov.b64 	%rd4077, {%r19086, %r19085};
	xor.b64  	%rd4078, %rd4077, %rd4076;
	shf.l.wrap.b32 	%r19087, %r19081, %r19082, 25;
	shf.l.wrap.b32 	%r19088, %r19082, %r19081, 25;
	mov.b64 	%rd4079, {%r19088, %r19087};
	xor.b64  	%rd4080, %rd4078, %rd4079;
	and.b64  	%rd4081, %rd4061, %rd4036;
	xor.b64  	%rd4082, %rd4061, %rd4036;
	and.b64  	%rd4083, %rd4082, %rd4011;
	or.b64  	%rd4084, %rd4083, %rd4081;
	add.s64 	%rd4085, %rd4074, %rd4084;
	add.s64 	%rd4086, %rd4085, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19089,%dummy}, %rd4075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19090}, %rd4075;
	}
	shf.r.wrap.b32 	%r19091, %r19090, %r19089, 14;
	shf.r.wrap.b32 	%r19092, %r19089, %r19090, 14;
	mov.b64 	%rd4087, {%r19092, %r19091};
	shf.r.wrap.b32 	%r19093, %r19090, %r19089, 18;
	shf.r.wrap.b32 	%r19094, %r19089, %r19090, 18;
	mov.b64 	%rd4088, {%r19094, %r19093};
	xor.b64  	%rd4089, %rd4088, %rd4087;
	shf.l.wrap.b32 	%r19095, %r19089, %r19090, 23;
	shf.l.wrap.b32 	%r19096, %r19090, %r19089, 23;
	mov.b64 	%rd4090, {%r19096, %r19095};
	xor.b64  	%rd4091, %rd4089, %rd4090;
	xor.b64  	%rd4092, %rd4050, %rd4025;
	and.b64  	%rd4093, %rd4075, %rd4092;
	xor.b64  	%rd4094, %rd4093, %rd4025;
	add.s64 	%rd4095, %rd4000, %rd4342;
	ld.const.u64 	%rd4096, [%rd3861+72];
	add.s64 	%rd4097, %rd4095, %rd4096;
	add.s64 	%rd4098, %rd4097, %rd4094;
	add.s64 	%rd4099, %rd4098, %rd4091;
	add.s64 	%rd4100, %rd4099, %rd4011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19097,%dummy}, %rd4086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19098}, %rd4086;
	}
	shf.r.wrap.b32 	%r19099, %r19098, %r19097, 28;
	shf.r.wrap.b32 	%r19100, %r19097, %r19098, 28;
	mov.b64 	%rd4101, {%r19100, %r19099};
	shf.l.wrap.b32 	%r19101, %r19097, %r19098, 30;
	shf.l.wrap.b32 	%r19102, %r19098, %r19097, 30;
	mov.b64 	%rd4102, {%r19102, %r19101};
	xor.b64  	%rd4103, %rd4102, %rd4101;
	shf.l.wrap.b32 	%r19103, %r19097, %r19098, 25;
	shf.l.wrap.b32 	%r19104, %r19098, %r19097, 25;
	mov.b64 	%rd4104, {%r19104, %r19103};
	xor.b64  	%rd4105, %rd4103, %rd4104;
	and.b64  	%rd4106, %rd4086, %rd4061;
	xor.b64  	%rd4107, %rd4086, %rd4061;
	and.b64  	%rd4108, %rd4107, %rd4036;
	or.b64  	%rd4109, %rd4108, %rd4106;
	add.s64 	%rd4110, %rd4099, %rd4109;
	add.s64 	%rd4111, %rd4110, %rd4105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19105,%dummy}, %rd4100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19106}, %rd4100;
	}
	shf.r.wrap.b32 	%r19107, %r19106, %r19105, 14;
	shf.r.wrap.b32 	%r19108, %r19105, %r19106, 14;
	mov.b64 	%rd4112, {%r19108, %r19107};
	shf.r.wrap.b32 	%r19109, %r19106, %r19105, 18;
	shf.r.wrap.b32 	%r19110, %r19105, %r19106, 18;
	mov.b64 	%rd4113, {%r19110, %r19109};
	xor.b64  	%rd4114, %rd4113, %rd4112;
	shf.l.wrap.b32 	%r19111, %r19105, %r19106, 23;
	shf.l.wrap.b32 	%r19112, %r19106, %r19105, 23;
	mov.b64 	%rd4115, {%r19112, %r19111};
	xor.b64  	%rd4116, %rd4114, %rd4115;
	xor.b64  	%rd4117, %rd4075, %rd4050;
	and.b64  	%rd4118, %rd4100, %rd4117;
	xor.b64  	%rd4119, %rd4118, %rd4050;
	add.s64 	%rd4120, %rd4025, %rd4341;
	ld.const.u64 	%rd4121, [%rd3861+80];
	add.s64 	%rd4122, %rd4120, %rd4121;
	add.s64 	%rd4123, %rd4122, %rd4119;
	add.s64 	%rd4124, %rd4123, %rd4116;
	add.s64 	%rd4125, %rd4124, %rd4036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19113,%dummy}, %rd4111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19114}, %rd4111;
	}
	shf.r.wrap.b32 	%r19115, %r19114, %r19113, 28;
	shf.r.wrap.b32 	%r19116, %r19113, %r19114, 28;
	mov.b64 	%rd4126, {%r19116, %r19115};
	shf.l.wrap.b32 	%r19117, %r19113, %r19114, 30;
	shf.l.wrap.b32 	%r19118, %r19114, %r19113, 30;
	mov.b64 	%rd4127, {%r19118, %r19117};
	xor.b64  	%rd4128, %rd4127, %rd4126;
	shf.l.wrap.b32 	%r19119, %r19113, %r19114, 25;
	shf.l.wrap.b32 	%r19120, %r19114, %r19113, 25;
	mov.b64 	%rd4129, {%r19120, %r19119};
	xor.b64  	%rd4130, %rd4128, %rd4129;
	and.b64  	%rd4131, %rd4111, %rd4086;
	xor.b64  	%rd4132, %rd4111, %rd4086;
	and.b64  	%rd4133, %rd4132, %rd4061;
	or.b64  	%rd4134, %rd4133, %rd4131;
	add.s64 	%rd4135, %rd4124, %rd4134;
	add.s64 	%rd4136, %rd4135, %rd4130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19121,%dummy}, %rd4125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19122}, %rd4125;
	}
	shf.r.wrap.b32 	%r19123, %r19122, %r19121, 14;
	shf.r.wrap.b32 	%r19124, %r19121, %r19122, 14;
	mov.b64 	%rd4137, {%r19124, %r19123};
	shf.r.wrap.b32 	%r19125, %r19122, %r19121, 18;
	shf.r.wrap.b32 	%r19126, %r19121, %r19122, 18;
	mov.b64 	%rd4138, {%r19126, %r19125};
	xor.b64  	%rd4139, %rd4138, %rd4137;
	shf.l.wrap.b32 	%r19127, %r19121, %r19122, 23;
	shf.l.wrap.b32 	%r19128, %r19122, %r19121, 23;
	mov.b64 	%rd4140, {%r19128, %r19127};
	xor.b64  	%rd4141, %rd4139, %rd4140;
	xor.b64  	%rd4142, %rd4100, %rd4075;
	and.b64  	%rd4143, %rd4125, %rd4142;
	xor.b64  	%rd4144, %rd4143, %rd4075;
	add.s64 	%rd4145, %rd4050, %rd4340;
	ld.const.u64 	%rd4146, [%rd3861+88];
	add.s64 	%rd4147, %rd4145, %rd4146;
	add.s64 	%rd4148, %rd4147, %rd4144;
	add.s64 	%rd4149, %rd4148, %rd4141;
	add.s64 	%rd4150, %rd4149, %rd4061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19129,%dummy}, %rd4136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19130}, %rd4136;
	}
	shf.r.wrap.b32 	%r19131, %r19130, %r19129, 28;
	shf.r.wrap.b32 	%r19132, %r19129, %r19130, 28;
	mov.b64 	%rd4151, {%r19132, %r19131};
	shf.l.wrap.b32 	%r19133, %r19129, %r19130, 30;
	shf.l.wrap.b32 	%r19134, %r19130, %r19129, 30;
	mov.b64 	%rd4152, {%r19134, %r19133};
	xor.b64  	%rd4153, %rd4152, %rd4151;
	shf.l.wrap.b32 	%r19135, %r19129, %r19130, 25;
	shf.l.wrap.b32 	%r19136, %r19130, %r19129, 25;
	mov.b64 	%rd4154, {%r19136, %r19135};
	xor.b64  	%rd4155, %rd4153, %rd4154;
	and.b64  	%rd4156, %rd4136, %rd4111;
	xor.b64  	%rd4157, %rd4136, %rd4111;
	and.b64  	%rd4158, %rd4157, %rd4086;
	or.b64  	%rd4159, %rd4158, %rd4156;
	add.s64 	%rd4160, %rd4149, %rd4159;
	add.s64 	%rd4161, %rd4160, %rd4155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19137,%dummy}, %rd4150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19138}, %rd4150;
	}
	shf.r.wrap.b32 	%r19139, %r19138, %r19137, 14;
	shf.r.wrap.b32 	%r19140, %r19137, %r19138, 14;
	mov.b64 	%rd4162, {%r19140, %r19139};
	shf.r.wrap.b32 	%r19141, %r19138, %r19137, 18;
	shf.r.wrap.b32 	%r19142, %r19137, %r19138, 18;
	mov.b64 	%rd4163, {%r19142, %r19141};
	xor.b64  	%rd4164, %rd4163, %rd4162;
	shf.l.wrap.b32 	%r19143, %r19137, %r19138, 23;
	shf.l.wrap.b32 	%r19144, %r19138, %r19137, 23;
	mov.b64 	%rd4165, {%r19144, %r19143};
	xor.b64  	%rd4166, %rd4164, %rd4165;
	xor.b64  	%rd4167, %rd4125, %rd4100;
	and.b64  	%rd4168, %rd4150, %rd4167;
	xor.b64  	%rd4169, %rd4168, %rd4100;
	add.s64 	%rd4170, %rd4075, %rd4339;
	ld.const.u64 	%rd4171, [%rd3861+96];
	add.s64 	%rd4172, %rd4170, %rd4171;
	add.s64 	%rd4173, %rd4172, %rd4169;
	add.s64 	%rd4174, %rd4173, %rd4166;
	add.s64 	%rd4351, %rd4174, %rd4086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19145,%dummy}, %rd4161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19146}, %rd4161;
	}
	shf.r.wrap.b32 	%r19147, %r19146, %r19145, 28;
	shf.r.wrap.b32 	%r19148, %r19145, %r19146, 28;
	mov.b64 	%rd4175, {%r19148, %r19147};
	shf.l.wrap.b32 	%r19149, %r19145, %r19146, 30;
	shf.l.wrap.b32 	%r19150, %r19146, %r19145, 30;
	mov.b64 	%rd4176, {%r19150, %r19149};
	xor.b64  	%rd4177, %rd4176, %rd4175;
	shf.l.wrap.b32 	%r19151, %r19145, %r19146, 25;
	shf.l.wrap.b32 	%r19152, %r19146, %r19145, 25;
	mov.b64 	%rd4178, {%r19152, %r19151};
	xor.b64  	%rd4179, %rd4177, %rd4178;
	and.b64  	%rd4180, %rd4161, %rd4136;
	xor.b64  	%rd4181, %rd4161, %rd4136;
	and.b64  	%rd4182, %rd4181, %rd4111;
	or.b64  	%rd4183, %rd4182, %rd4180;
	add.s64 	%rd4184, %rd4174, %rd4183;
	add.s64 	%rd4347, %rd4184, %rd4179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19153,%dummy}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19154}, %rd4351;
	}
	shf.r.wrap.b32 	%r19155, %r19154, %r19153, 14;
	shf.r.wrap.b32 	%r19156, %r19153, %r19154, 14;
	mov.b64 	%rd4185, {%r19156, %r19155};
	shf.r.wrap.b32 	%r19157, %r19154, %r19153, 18;
	shf.r.wrap.b32 	%r19158, %r19153, %r19154, 18;
	mov.b64 	%rd4186, {%r19158, %r19157};
	xor.b64  	%rd4187, %rd4186, %rd4185;
	shf.l.wrap.b32 	%r19159, %r19153, %r19154, 23;
	shf.l.wrap.b32 	%r19160, %r19154, %r19153, 23;
	mov.b64 	%rd4188, {%r19160, %r19159};
	xor.b64  	%rd4189, %rd4187, %rd4188;
	xor.b64  	%rd4190, %rd4150, %rd4125;
	and.b64  	%rd4191, %rd4351, %rd4190;
	xor.b64  	%rd4192, %rd4191, %rd4125;
	add.s64 	%rd4193, %rd4100, %rd4338;
	ld.const.u64 	%rd4194, [%rd3861+104];
	add.s64 	%rd4195, %rd4193, %rd4194;
	add.s64 	%rd4196, %rd4195, %rd4192;
	add.s64 	%rd4197, %rd4196, %rd4189;
	add.s64 	%rd4350, %rd4197, %rd4111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19161,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19162}, %rd4347;
	}
	shf.r.wrap.b32 	%r19163, %r19162, %r19161, 28;
	shf.r.wrap.b32 	%r19164, %r19161, %r19162, 28;
	mov.b64 	%rd4198, {%r19164, %r19163};
	shf.l.wrap.b32 	%r19165, %r19161, %r19162, 30;
	shf.l.wrap.b32 	%r19166, %r19162, %r19161, 30;
	mov.b64 	%rd4199, {%r19166, %r19165};
	xor.b64  	%rd4200, %rd4199, %rd4198;
	shf.l.wrap.b32 	%r19167, %r19161, %r19162, 25;
	shf.l.wrap.b32 	%r19168, %r19162, %r19161, 25;
	mov.b64 	%rd4201, {%r19168, %r19167};
	xor.b64  	%rd4202, %rd4200, %rd4201;
	and.b64  	%rd4203, %rd4347, %rd4161;
	xor.b64  	%rd4204, %rd4347, %rd4161;
	and.b64  	%rd4205, %rd4204, %rd4136;
	or.b64  	%rd4206, %rd4205, %rd4203;
	add.s64 	%rd4207, %rd4197, %rd4206;
	add.s64 	%rd4346, %rd4207, %rd4202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19169,%dummy}, %rd4350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19170}, %rd4350;
	}
	shf.r.wrap.b32 	%r19171, %r19170, %r19169, 14;
	shf.r.wrap.b32 	%r19172, %r19169, %r19170, 14;
	mov.b64 	%rd4208, {%r19172, %r19171};
	shf.r.wrap.b32 	%r19173, %r19170, %r19169, 18;
	shf.r.wrap.b32 	%r19174, %r19169, %r19170, 18;
	mov.b64 	%rd4209, {%r19174, %r19173};
	xor.b64  	%rd4210, %rd4209, %rd4208;
	shf.l.wrap.b32 	%r19175, %r19169, %r19170, 23;
	shf.l.wrap.b32 	%r19176, %r19170, %r19169, 23;
	mov.b64 	%rd4211, {%r19176, %r19175};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	xor.b64  	%rd4213, %rd4351, %rd4150;
	and.b64  	%rd4214, %rd4350, %rd4213;
	xor.b64  	%rd4215, %rd4214, %rd4150;
	add.s64 	%rd4216, %rd4125, %rd4337;
	ld.const.u64 	%rd4217, [%rd3861+112];
	add.s64 	%rd4218, %rd4216, %rd4217;
	add.s64 	%rd4219, %rd4218, %rd4215;
	add.s64 	%rd4220, %rd4219, %rd4212;
	add.s64 	%rd4349, %rd4220, %rd4136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19177,%dummy}, %rd4346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19178}, %rd4346;
	}
	shf.r.wrap.b32 	%r19179, %r19178, %r19177, 28;
	shf.r.wrap.b32 	%r19180, %r19177, %r19178, 28;
	mov.b64 	%rd4221, {%r19180, %r19179};
	shf.l.wrap.b32 	%r19181, %r19177, %r19178, 30;
	shf.l.wrap.b32 	%r19182, %r19178, %r19177, 30;
	mov.b64 	%rd4222, {%r19182, %r19181};
	xor.b64  	%rd4223, %rd4222, %rd4221;
	shf.l.wrap.b32 	%r19183, %r19177, %r19178, 25;
	shf.l.wrap.b32 	%r19184, %r19178, %r19177, 25;
	mov.b64 	%rd4224, {%r19184, %r19183};
	xor.b64  	%rd4225, %rd4223, %rd4224;
	and.b64  	%rd4226, %rd4346, %rd4347;
	xor.b64  	%rd4227, %rd4346, %rd4347;
	and.b64  	%rd4228, %rd4227, %rd4161;
	or.b64  	%rd4229, %rd4228, %rd4226;
	add.s64 	%rd4230, %rd4220, %rd4229;
	add.s64 	%rd4345, %rd4230, %rd4225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19185,%dummy}, %rd4349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19186}, %rd4349;
	}
	shf.r.wrap.b32 	%r19187, %r19186, %r19185, 14;
	shf.r.wrap.b32 	%r19188, %r19185, %r19186, 14;
	mov.b64 	%rd4231, {%r19188, %r19187};
	shf.r.wrap.b32 	%r19189, %r19186, %r19185, 18;
	shf.r.wrap.b32 	%r19190, %r19185, %r19186, 18;
	mov.b64 	%rd4232, {%r19190, %r19189};
	xor.b64  	%rd4233, %rd4232, %rd4231;
	shf.l.wrap.b32 	%r19191, %r19185, %r19186, 23;
	shf.l.wrap.b32 	%r19192, %r19186, %r19185, 23;
	mov.b64 	%rd4234, {%r19192, %r19191};
	xor.b64  	%rd4235, %rd4233, %rd4234;
	xor.b64  	%rd4236, %rd4350, %rd4351;
	and.b64  	%rd4237, %rd4349, %rd4236;
	xor.b64  	%rd4238, %rd4237, %rd4351;
	add.s64 	%rd4239, %rd4150, %rd4336;
	ld.const.u64 	%rd4240, [%rd3861+120];
	add.s64 	%rd4241, %rd4239, %rd4240;
	add.s64 	%rd4242, %rd4241, %rd4238;
	add.s64 	%rd4243, %rd4242, %rd4235;
	add.s64 	%rd4348, %rd4243, %rd4161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19193,%dummy}, %rd4345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19194}, %rd4345;
	}
	shf.r.wrap.b32 	%r19195, %r19194, %r19193, 28;
	shf.r.wrap.b32 	%r19196, %r19193, %r19194, 28;
	mov.b64 	%rd4244, {%r19196, %r19195};
	shf.l.wrap.b32 	%r19197, %r19193, %r19194, 30;
	shf.l.wrap.b32 	%r19198, %r19194, %r19193, 30;
	mov.b64 	%rd4245, {%r19198, %r19197};
	xor.b64  	%rd4246, %rd4245, %rd4244;
	shf.l.wrap.b32 	%r19199, %r19193, %r19194, 25;
	shf.l.wrap.b32 	%r19200, %r19194, %r19193, 25;
	mov.b64 	%rd4247, {%r19200, %r19199};
	xor.b64  	%rd4248, %rd4246, %rd4247;
	and.b64  	%rd4249, %rd4345, %rd4346;
	xor.b64  	%rd4250, %rd4345, %rd4346;
	and.b64  	%rd4251, %rd4250, %rd4347;
	or.b64  	%rd4252, %rd4251, %rd4249;
	add.s64 	%rd4253, %rd4243, %rd4252;
	add.s64 	%rd4344, %rd4253, %rd4248;
	add.s32 	%r19398, %r19398, 16;
	setp.lt.s32	%p151, %r19398, 80;
	@%p151 bra 	BB2_308;

	add.s64 	%rd4254, %rd282, %rd4344;
	st.local.u64 	[%rd17], %rd4254;
	add.s64 	%rd4255, %rd283, %rd4345;
	st.local.u64 	[%rd17+8], %rd4255;
	add.s64 	%rd4256, %rd284, %rd4346;
	st.local.u64 	[%rd17+16], %rd4256;
	add.s64 	%rd4257, %rd281, %rd4347;
	st.local.u64 	[%rd17+24], %rd4257;
	add.s64 	%rd4258, %rd277, %rd4348;
	st.local.u64 	[%rd17+32], %rd4258;
	add.s64 	%rd4259, %rd279, %rd4349;
	st.local.u64 	[%rd17+40], %rd4259;
	add.s64 	%rd4260, %rd278, %rd4350;
	st.local.u64 	[%rd17+48], %rd4260;
	add.s64 	%rd4360, %rd280, %rd4351;
	mov.u32 	%r19368, 0;
	mov.u32 	%r19367, %r19368;
	mov.u32 	%r19366, %r19368;
	mov.u32 	%r19365, %r19368;
	mov.u32 	%r19372, %r19368;
	mov.u32 	%r19371, %r19368;
	mov.u32 	%r19370, %r19368;
	mov.u32 	%r19369, %r19368;
	mov.u32 	%r19376, %r19368;
	mov.u32 	%r19375, %r19368;
	mov.u32 	%r19374, %r19368;
	mov.u32 	%r19373, %r19368;
	mov.u32 	%r19380, %r19368;
	mov.u32 	%r19379, %r19368;
	mov.u32 	%r19378, %r19368;
	mov.u32 	%r19377, %r19368;
	mov.u32 	%r19384, %r19368;
	mov.u32 	%r19383, %r19368;
	mov.u32 	%r19382, %r19368;
	mov.u32 	%r19381, %r19368;
	mov.u32 	%r19388, %r19368;
	mov.u32 	%r19387, %r19368;
	mov.u32 	%r19386, %r19368;
	mov.u32 	%r19385, %r19368;
	mov.u32 	%r19392, %r19368;
	mov.u32 	%r19391, %r19368;
	mov.u32 	%r19390, %r19368;
	mov.u32 	%r19389, %r19368;
	mov.u32 	%r19396, %r19368;
	mov.u32 	%r19395, %r19368;
	mov.u32 	%r19394, %r19368;
	mov.u32 	%r19393, %r19368;
	bra.uni 	BB2_310;

BB2_217:
	shr.u32 	%r12518, %r1789, 2;
	and.b32  	%r12519, %r1788, 3;
	shl.b32 	%r12520, %r12519, 2;
	mov.u32 	%r12521, 1985229328;
	shr.u32 	%r12522, %r12521, %r12520;
	and.b32  	%r1790, %r12522, 65535;
	mov.u32 	%r19365, 0;
	setp.gt.s32	%p103, %r12518, 15;
	@%p103 bra 	BB2_250;

	setp.gt.s32	%p127, %r12518, 7;
	@%p127 bra 	BB2_235;

	setp.gt.s32	%p139, %r12518, 3;
	@%p139 bra 	BB2_227;

	setp.gt.s32	%p145, %r12518, 1;
	@%p145 bra 	BB2_224;

	setp.eq.s32	%p148, %r12518, 0;
	@%p148 bra 	BB2_302;
	bra.uni 	BB2_222;

BB2_302:
	mov.u32 	%r19365, 0;
	// inline asm
	prmt.b32 %r19368, %r19365, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r12421, %r19365, %r1790;
	// inline asm
	mov.u32 	%r19366, %r19365;
	mov.u32 	%r19367, %r19365;
	bra.uni 	BB2_303;

BB2_250:
	setp.gt.s32	%p104, %r12518, 23;
	@%p104 bra 	BB2_266;

	setp.gt.s32	%p116, %r12518, 19;
	@%p116 bra 	BB2_259;

	setp.gt.s32	%p122, %r12518, 17;
	@%p122 bra 	BB2_256;

	setp.eq.s32	%p125, %r12518, 16;
	@%p125 bra 	BB2_289;
	bra.uni 	BB2_254;

BB2_289:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19384, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19381, %r19333;
	mov.u32 	%r19382, %r19333;
	mov.u32 	%r19383, %r19333;
	bra.uni 	BB2_296;

BB2_235:
	setp.gt.s32	%p128, %r12518, 11;
	@%p128 bra 	BB2_243;

	setp.gt.s32	%p134, %r12518, 9;
	@%p134 bra 	BB2_240;

	setp.eq.s32	%p137, %r12518, 8;
	@%p137 bra 	BB2_293;
	bra.uni 	BB2_238;

BB2_293:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19376, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19373, %r19333;
	mov.u32 	%r19374, %r19333;
	mov.u32 	%r19375, %r19333;
	bra.uni 	BB2_294;

BB2_266:
	setp.gt.s32	%p105, %r12518, 27;
	@%p105 bra 	BB2_274;

	setp.gt.s32	%p111, %r12518, 25;
	@%p111 bra 	BB2_271;

	setp.eq.s32	%p114, %r12518, 24;
	@%p114 bra 	BB2_285;
	bra.uni 	BB2_269;

BB2_285:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19392, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19389, %r19333;
	mov.u32 	%r19390, %r19333;
	mov.u32 	%r19391, %r19333;
	bra.uni 	BB2_298;

BB2_227:
	setp.gt.s32	%p140, %r12518, 5;
	@%p140 bra 	BB2_231;

	setp.eq.s32	%p143, %r12518, 4;
	@%p143 bra 	BB2_300;
	bra.uni 	BB2_229;

BB2_300:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19372, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19369, %r19333;
	mov.u32 	%r19370, %r19333;
	mov.u32 	%r19371, %r19333;
	bra.uni 	BB2_234;

BB2_259:
	setp.gt.s32	%p117, %r12518, 21;
	@%p117 bra 	BB2_263;

	setp.eq.s32	%p120, %r12518, 20;
	@%p120 bra 	BB2_287;
	bra.uni 	BB2_261;

BB2_287:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19388, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19385, %r19333;
	mov.u32 	%r19386, %r19333;
	mov.u32 	%r19387, %r19333;
	bra.uni 	BB2_297;

BB2_243:
	setp.gt.s32	%p129, %r12518, 13;
	@%p129 bra 	BB2_247;

	setp.eq.s32	%p132, %r12518, 12;
	@%p132 bra 	BB2_291;
	bra.uni 	BB2_245;

BB2_291:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19380, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19377, %r19333;
	mov.u32 	%r19378, %r19333;
	mov.u32 	%r19379, %r19333;
	bra.uni 	BB2_295;

BB2_274:
	setp.gt.s32	%p106, %r12518, 29;
	@%p106 bra 	BB2_278;

	setp.eq.s32	%p109, %r12518, 28;
	@%p109 bra 	BB2_283;
	bra.uni 	BB2_276;

BB2_283:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19396, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19389, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19390, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19357, %r19333;
	mov.u32 	%r19358, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19393, %r19333;
	mov.u32 	%r19394, %r19333;
	mov.u32 	%r19395, %r19333;
	bra.uni 	BB2_304;

BB2_224:
	setp.eq.s32	%p146, %r12518, 2;
	@%p146 bra 	BB2_301;
	bra.uni 	BB2_225;

BB2_301:
	mov.u32 	%r19335, 0;
	// inline asm
	prmt.b32 %r19366, %r19335, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r12421, %r19335, %r1790;
	// inline asm
	mov.u32 	%r19336, %r19335;
	mov.u32 	%r19365, %r19335;
	mov.u32 	%r19369, %r19335;
	mov.u32 	%r19370, %r19335;
	mov.u32 	%r19371, %r19335;
	mov.u32 	%r19372, %r19335;
	mov.u32 	%r19373, %r19335;
	mov.u32 	%r19374, %r19335;
	mov.u32 	%r19375, %r19335;
	mov.u32 	%r19376, %r19335;
	mov.u32 	%r19377, %r19335;
	mov.u32 	%r19378, %r19335;
	mov.u32 	%r19379, %r19335;
	mov.u32 	%r19380, %r19335;
	mov.u32 	%r19381, %r19335;
	mov.u32 	%r19382, %r19335;
	mov.u32 	%r19383, %r19335;
	mov.u32 	%r19384, %r19335;
	mov.u32 	%r19385, %r19335;
	mov.u32 	%r19386, %r19335;
	mov.u32 	%r19387, %r19335;
	mov.u32 	%r19388, %r19335;
	mov.u32 	%r19389, %r19335;
	mov.u32 	%r19390, %r19335;
	mov.u32 	%r19391, %r19335;
	mov.u32 	%r19392, %r19335;
	mov.u32 	%r19393, %r19335;
	mov.u32 	%r19394, %r19335;
	mov.u32 	%r19395, %r19335;
	mov.u32 	%r19396, %r19335;
	bra.uni 	BB2_304;

BB2_256:
	setp.eq.s32	%p123, %r12518, 18;
	@%p123 bra 	BB2_288;
	bra.uni 	BB2_257;

BB2_288:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19382, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19381, %r19333;
	bra.uni 	BB2_296;

BB2_240:
	setp.eq.s32	%p135, %r12518, 10;
	@%p135 bra 	BB2_292;
	bra.uni 	BB2_241;

BB2_292:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19374, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19373, %r19333;
	bra.uni 	BB2_294;

BB2_271:
	setp.eq.s32	%p112, %r12518, 26;
	@%p112 bra 	BB2_284;
	bra.uni 	BB2_272;

BB2_284:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19390, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19389, %r19333;
	bra.uni 	BB2_298;

BB2_231:
	setp.eq.s32	%p141, %r12518, 6;
	@%p141 bra 	BB2_299;
	bra.uni 	BB2_232;

BB2_299:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19370, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19369, %r19333;
	bra.uni 	BB2_234;

BB2_263:
	setp.eq.s32	%p118, %r12518, 22;
	@%p118 bra 	BB2_286;
	bra.uni 	BB2_264;

BB2_286:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19386, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19385, %r19333;
	bra.uni 	BB2_297;

BB2_247:
	setp.eq.s32	%p130, %r12518, 14;
	@%p130 bra 	BB2_290;
	bra.uni 	BB2_248;

BB2_290:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19378, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19377, %r19333;
	bra.uni 	BB2_295;

BB2_278:
	setp.eq.s32	%p107, %r12518, 30;
	@%p107 bra 	BB2_282;
	bra.uni 	BB2_279;

BB2_282:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19394, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19395, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19396, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19389, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19390, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19357, %r19333;
	mov.u32 	%r19358, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19363, %r19333;
	mov.u32 	%r19364, %r19333;
	mov.u32 	%r19393, %r19333;
	bra.uni 	BB2_304;

BB2_222:
	setp.eq.s32	%p149, %r12518, 1;
	@%p149 bra 	BB2_223;
	bra.uni 	BB2_280;

BB2_223:
	mov.u32 	%r19336, 0;
	// inline asm
	prmt.b32 %r19367, %r19336, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r12421, %r19336, %r1790;
	// inline asm
	mov.u32 	%r19365, %r19336;
	mov.u32 	%r19366, %r19336;
	mov.u32 	%r19369, %r19336;
	mov.u32 	%r19370, %r19336;
	mov.u32 	%r19371, %r19336;
	mov.u32 	%r19372, %r19336;
	mov.u32 	%r19373, %r19336;
	mov.u32 	%r19374, %r19336;
	mov.u32 	%r19375, %r19336;
	mov.u32 	%r19376, %r19336;
	mov.u32 	%r19377, %r19336;
	mov.u32 	%r19378, %r19336;
	mov.u32 	%r19379, %r19336;
	mov.u32 	%r19380, %r19336;
	mov.u32 	%r19381, %r19336;
	mov.u32 	%r19382, %r19336;
	mov.u32 	%r19383, %r19336;
	mov.u32 	%r19384, %r19336;
	mov.u32 	%r19385, %r19336;
	mov.u32 	%r19386, %r19336;
	mov.u32 	%r19387, %r19336;
	mov.u32 	%r19388, %r19336;
	mov.u32 	%r19389, %r19336;
	mov.u32 	%r19390, %r19336;
	mov.u32 	%r19391, %r19336;
	mov.u32 	%r19392, %r19336;
	mov.u32 	%r19393, %r19336;
	mov.u32 	%r19394, %r19336;
	mov.u32 	%r19395, %r19336;
	mov.u32 	%r19396, %r19336;
	bra.uni 	BB2_304;

BB2_254:
	setp.eq.s32	%p126, %r12518, 17;
	@%p126 bra 	BB2_255;
	bra.uni 	BB2_280;

BB2_255:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19383, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19381, %r19333;
	mov.u32 	%r19382, %r19333;
	bra.uni 	BB2_296;

BB2_238:
	setp.eq.s32	%p138, %r12518, 9;
	@%p138 bra 	BB2_239;
	bra.uni 	BB2_280;

BB2_239:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19375, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19373, %r19333;
	mov.u32 	%r19374, %r19333;
	bra.uni 	BB2_294;

BB2_269:
	setp.eq.s32	%p115, %r12518, 25;
	@%p115 bra 	BB2_270;
	bra.uni 	BB2_280;

BB2_270:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19391, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19389, %r19333;
	mov.u32 	%r19390, %r19333;
	bra.uni 	BB2_298;

BB2_229:
	setp.eq.s32	%p144, %r12518, 5;
	@%p144 bra 	BB2_230;
	bra.uni 	BB2_280;

BB2_230:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19371, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19369, %r19333;
	mov.u32 	%r19370, %r19333;
	bra.uni 	BB2_234;

BB2_261:
	setp.eq.s32	%p121, %r12518, 21;
	@%p121 bra 	BB2_262;
	bra.uni 	BB2_280;

BB2_262:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19387, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19385, %r19333;
	mov.u32 	%r19386, %r19333;
	bra.uni 	BB2_297;

BB2_245:
	setp.eq.s32	%p133, %r12518, 13;
	@%p133 bra 	BB2_246;
	bra.uni 	BB2_280;

BB2_246:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19379, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19377, %r19333;
	mov.u32 	%r19378, %r19333;
	bra.uni 	BB2_295;

BB2_276:
	setp.eq.s32	%p110, %r12518, 29;
	@%p110 bra 	BB2_277;
	bra.uni 	BB2_280;

BB2_277:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19395, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19396, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19389, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19390, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19357, %r19333;
	mov.u32 	%r19358, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19364, %r19333;
	mov.u32 	%r19393, %r19333;
	mov.u32 	%r19394, %r19333;
	bra.uni 	BB2_304;

BB2_225:
	setp.eq.s32	%p147, %r12518, 3;
	@%p147 bra 	BB2_226;
	bra.uni 	BB2_280;

BB2_226:
	mov.u32 	%r19334, 0;
	// inline asm
	prmt.b32 %r19365, %r19334, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r12421, %r19334, %r1790;
	// inline asm
	mov.u32 	%r19335, %r19334;
	mov.u32 	%r19336, %r19334;
	mov.u32 	%r19369, %r19334;
	mov.u32 	%r19370, %r19334;
	mov.u32 	%r19371, %r19334;
	mov.u32 	%r19372, %r19334;
	mov.u32 	%r19373, %r19334;
	mov.u32 	%r19374, %r19334;
	mov.u32 	%r19375, %r19334;
	mov.u32 	%r19376, %r19334;
	mov.u32 	%r19377, %r19334;
	mov.u32 	%r19378, %r19334;
	mov.u32 	%r19379, %r19334;
	mov.u32 	%r19380, %r19334;
	mov.u32 	%r19381, %r19334;
	mov.u32 	%r19382, %r19334;
	mov.u32 	%r19383, %r19334;
	mov.u32 	%r19384, %r19334;
	mov.u32 	%r19385, %r19334;
	mov.u32 	%r19386, %r19334;
	mov.u32 	%r19387, %r19334;
	mov.u32 	%r19388, %r19334;
	mov.u32 	%r19389, %r19334;
	mov.u32 	%r19390, %r19334;
	mov.u32 	%r19391, %r19334;
	mov.u32 	%r19392, %r19334;
	mov.u32 	%r19393, %r19334;
	mov.u32 	%r19394, %r19334;
	mov.u32 	%r19395, %r19334;
	mov.u32 	%r19396, %r19334;
	bra.uni 	BB2_304;

BB2_257:
	setp.eq.s32	%p124, %r12518, 19;
	@%p124 bra 	BB2_258;
	bra.uni 	BB2_280;

BB2_258:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19381, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	bra.uni 	BB2_296;

BB2_241:
	setp.eq.s32	%p136, %r12518, 11;
	@%p136 bra 	BB2_242;
	bra.uni 	BB2_280;

BB2_242:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19373, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	bra.uni 	BB2_294;

BB2_272:
	setp.eq.s32	%p113, %r12518, 27;
	@%p113 bra 	BB2_273;
	bra.uni 	BB2_280;

BB2_273:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19389, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19390, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19358, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	bra.uni 	BB2_298;

BB2_232:
	setp.eq.s32	%p142, %r12518, 7;
	@%p142 bra 	BB2_233;
	bra.uni 	BB2_280;

BB2_233:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19369, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;

BB2_234:
	mov.u32 	%r19373, %r19333;
	mov.u32 	%r19374, %r19333;
	mov.u32 	%r19375, %r19333;
	mov.u32 	%r19376, %r19333;

BB2_294:
	mov.u32 	%r19377, %r19333;
	mov.u32 	%r19378, %r19333;
	mov.u32 	%r19379, %r19333;
	mov.u32 	%r19380, %r19333;

BB2_295:
	mov.u32 	%r19381, %r19333;
	mov.u32 	%r19382, %r19333;
	mov.u32 	%r19383, %r19333;
	mov.u32 	%r19384, %r19333;

BB2_296:
	mov.u32 	%r19385, %r19333;
	mov.u32 	%r19386, %r19333;
	mov.u32 	%r19387, %r19333;
	mov.u32 	%r19388, %r19333;

BB2_297:
	mov.u32 	%r19389, %r19333;
	mov.u32 	%r19390, %r19333;
	mov.u32 	%r19391, %r19333;
	mov.u32 	%r19392, %r19333;

BB2_298:
	mov.u32 	%r19393, %r19333;
	mov.u32 	%r19394, %r19333;
	mov.u32 	%r19395, %r19333;
	mov.u32 	%r19396, %r19333;
	bra.uni 	BB2_304;

BB2_264:
	setp.eq.s32	%p119, %r12518, 23;
	@%p119 bra 	BB2_265;
	bra.uni 	BB2_280;

BB2_265:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19385, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	bra.uni 	BB2_297;

BB2_248:
	setp.eq.s32	%p131, %r12518, 15;
	@%p131 bra 	BB2_249;
	bra.uni 	BB2_280;

BB2_249:
	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19377, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19362, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19363, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19364, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19360, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19356, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	bra.uni 	BB2_295;

BB2_279:
	setp.ne.s32	%p108, %r12518, 31;
	@%p108 bra 	BB2_280;

	mov.u32 	%r19333, 0;
	// inline asm
	prmt.b32 %r19393, %r19333, %r19361, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19394, %r19361, %r19362, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19395, %r19362, %r19363, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19396, %r19363, %r19364, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19389, %r19364, %r19357, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19390, %r19357, %r19358, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19391, %r19358, %r19359, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19392, %r19359, %r19360, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19385, %r19360, %r19353, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19386, %r19353, %r19354, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19387, %r19354, %r19355, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19388, %r19355, %r19356, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19381, %r19356, %r19349, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19382, %r19349, %r19350, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19383, %r19350, %r19351, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19384, %r19351, %r19352, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19377, %r19352, %r19345, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19378, %r19345, %r19346, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19379, %r19346, %r19347, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19380, %r19347, %r19348, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19373, %r19348, %r19341, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19374, %r19341, %r19342, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19375, %r19342, %r19343, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19376, %r19343, %r19344, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19369, %r19344, %r19337, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19370, %r19337, %r19338, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19371, %r19338, %r19339, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19372, %r19339, %r19340, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19365, %r19340, %r12427, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19366, %r12427, %r12425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19367, %r12425, %r12423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19368, %r12423, %r12421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19361, %r12421, %r19333, %r1790;
	// inline asm
	mov.u32 	%r19334, %r19333;
	mov.u32 	%r19335, %r19333;
	mov.u32 	%r19336, %r19333;
	mov.u32 	%r19337, %r19333;
	mov.u32 	%r19338, %r19333;
	mov.u32 	%r19339, %r19333;
	mov.u32 	%r19340, %r19333;
	mov.u32 	%r19341, %r19333;
	mov.u32 	%r19342, %r19333;
	mov.u32 	%r19343, %r19333;
	mov.u32 	%r19344, %r19333;
	mov.u32 	%r19345, %r19333;
	mov.u32 	%r19346, %r19333;
	mov.u32 	%r19347, %r19333;
	mov.u32 	%r19348, %r19333;
	mov.u32 	%r19349, %r19333;
	mov.u32 	%r19350, %r19333;
	mov.u32 	%r19351, %r19333;
	mov.u32 	%r19352, %r19333;
	mov.u32 	%r19353, %r19333;
	mov.u32 	%r19354, %r19333;
	mov.u32 	%r19355, %r19333;
	mov.u32 	%r19356, %r19333;
	mov.u32 	%r19357, %r19333;
	mov.u32 	%r19358, %r19333;
	mov.u32 	%r19359, %r19333;
	mov.u32 	%r19360, %r19333;
	mov.u32 	%r19362, %r19333;
	mov.u32 	%r19363, %r19333;
	mov.u32 	%r19364, %r19333;
	bra.uni 	BB2_304;

BB2_280:
	mov.u32 	%r19333, %r12427;
	mov.u32 	%r19334, %r12425;
	mov.u32 	%r19335, %r12423;
	mov.u32 	%r19336, %r12421;
	mov.u32 	%r19366, %r19365;
	mov.u32 	%r19367, %r19365;
	mov.u32 	%r19368, %r19365;

BB2_303:
	mov.u32 	%r19369, %r19365;
	mov.u32 	%r19370, %r19365;
	mov.u32 	%r19371, %r19365;
	mov.u32 	%r19372, %r19365;
	mov.u32 	%r19373, %r19365;
	mov.u32 	%r19374, %r19365;
	mov.u32 	%r19375, %r19365;
	mov.u32 	%r19376, %r19365;
	mov.u32 	%r19377, %r19365;
	mov.u32 	%r19378, %r19365;
	mov.u32 	%r19379, %r19365;
	mov.u32 	%r19380, %r19365;
	mov.u32 	%r19381, %r19365;
	mov.u32 	%r19382, %r19365;
	mov.u32 	%r19383, %r19365;
	mov.u32 	%r19384, %r19365;
	mov.u32 	%r19385, %r19365;
	mov.u32 	%r19386, %r19365;
	mov.u32 	%r19387, %r19365;
	mov.u32 	%r19388, %r19365;
	mov.u32 	%r19389, %r19365;
	mov.u32 	%r19390, %r19365;
	mov.u32 	%r19391, %r19365;
	mov.u32 	%r19392, %r19365;
	mov.u32 	%r19393, %r19365;
	mov.u32 	%r19394, %r19365;
	mov.u32 	%r19395, %r19365;
	mov.u32 	%r19396, %r19365;

BB2_304:
	ld.local.u32 	%r17740, [%rd17+64];
	or.b32  	%r17741, %r17740, %r19336;
	st.local.u32 	[%rd17+64], %r17741;
	ld.local.u32 	%r17742, [%rd17+68];
	or.b32  	%r17743, %r17742, %r19335;
	st.local.u32 	[%rd17+68], %r17743;
	ld.local.u32 	%r17744, [%rd17+72];
	or.b32  	%r17745, %r17744, %r19334;
	st.local.u32 	[%rd17+72], %r17745;
	ld.local.u32 	%r17746, [%rd17+76];
	or.b32  	%r17747, %r17746, %r19333;
	st.local.u32 	[%rd17+76], %r17747;
	ld.local.u32 	%r17748, [%rd17+80];
	or.b32  	%r17749, %r17748, %r19340;
	st.local.u32 	[%rd17+80], %r17749;
	ld.local.u32 	%r17750, [%rd17+84];
	or.b32  	%r17751, %r17750, %r19339;
	st.local.u32 	[%rd17+84], %r17751;
	ld.local.u32 	%r17752, [%rd17+88];
	or.b32  	%r17753, %r17752, %r19338;
	st.local.u32 	[%rd17+88], %r17753;
	ld.local.u32 	%r17754, [%rd17+92];
	or.b32  	%r17755, %r17754, %r19337;
	st.local.u32 	[%rd17+92], %r17755;
	ld.local.u32 	%r17756, [%rd17+96];
	or.b32  	%r17757, %r17756, %r19344;
	st.local.u32 	[%rd17+96], %r17757;
	ld.local.u32 	%r17758, [%rd17+100];
	or.b32  	%r17759, %r17758, %r19343;
	st.local.u32 	[%rd17+100], %r17759;
	ld.local.u32 	%r17760, [%rd17+104];
	or.b32  	%r17761, %r17760, %r19342;
	st.local.u32 	[%rd17+104], %r17761;
	ld.local.u32 	%r17762, [%rd17+108];
	or.b32  	%r17763, %r17762, %r19341;
	st.local.u32 	[%rd17+108], %r17763;
	ld.local.u32 	%r17764, [%rd17+112];
	or.b32  	%r17765, %r17764, %r19348;
	st.local.u32 	[%rd17+112], %r17765;
	ld.local.u32 	%r17766, [%rd17+116];
	or.b32  	%r17767, %r17766, %r19347;
	st.local.u32 	[%rd17+116], %r17767;
	ld.local.u32 	%r17768, [%rd17+120];
	or.b32  	%r17769, %r17768, %r19346;
	st.local.u32 	[%rd17+120], %r17769;
	ld.local.u32 	%r17770, [%rd17+124];
	or.b32  	%r17771, %r17770, %r19345;
	st.local.u32 	[%rd17+124], %r17771;
	ld.local.u32 	%r17772, [%rd17+128];
	or.b32  	%r17773, %r17772, %r19352;
	st.local.u32 	[%rd17+128], %r17773;
	ld.local.u32 	%r17774, [%rd17+132];
	or.b32  	%r17775, %r17774, %r19351;
	st.local.u32 	[%rd17+132], %r17775;
	ld.local.u32 	%r17776, [%rd17+136];
	or.b32  	%r17777, %r17776, %r19350;
	st.local.u32 	[%rd17+136], %r17777;
	ld.local.u32 	%r17778, [%rd17+140];
	or.b32  	%r17779, %r17778, %r19349;
	st.local.u32 	[%rd17+140], %r17779;
	ld.local.u32 	%r17780, [%rd17+144];
	or.b32  	%r17781, %r17780, %r19356;
	st.local.u32 	[%rd17+144], %r17781;
	ld.local.u32 	%r17782, [%rd17+148];
	or.b32  	%r17783, %r17782, %r19355;
	st.local.u32 	[%rd17+148], %r17783;
	ld.local.u32 	%r17784, [%rd17+152];
	or.b32  	%r17785, %r17784, %r19354;
	st.local.u32 	[%rd17+152], %r17785;
	ld.local.u32 	%r17786, [%rd17+156];
	or.b32  	%r17787, %r17786, %r19353;
	st.local.u32 	[%rd17+156], %r17787;
	ld.local.u32 	%r17788, [%rd17+160];
	or.b32  	%r17789, %r17788, %r19360;
	st.local.u32 	[%rd17+160], %r17789;
	ld.local.u32 	%r17790, [%rd17+164];
	or.b32  	%r17791, %r17790, %r19359;
	st.local.u32 	[%rd17+164], %r17791;
	ld.local.u32 	%r17792, [%rd17+168];
	or.b32  	%r17793, %r17792, %r19358;
	st.local.u32 	[%rd17+168], %r17793;
	ld.local.u32 	%r17794, [%rd17+172];
	or.b32  	%r17795, %r17794, %r19357;
	st.local.u32 	[%rd17+172], %r17795;
	ld.local.u32 	%r17796, [%rd17+176];
	or.b32  	%r17797, %r17796, %r19364;
	st.local.u32 	[%rd17+176], %r17797;
	ld.local.u32 	%r17798, [%rd17+180];
	or.b32  	%r17799, %r17798, %r19363;
	st.local.u32 	[%rd17+180], %r17799;
	ld.local.u32 	%r17800, [%rd17+184];
	or.b32  	%r17801, %r17800, %r19362;
	st.local.u32 	[%rd17+184], %r17801;
	ld.local.u32 	%r17802, [%rd17+188];
	or.b32  	%r17803, %r17802, %r19361;
	st.local.u32 	[%rd17+188], %r17803;
	mov.b64	%rd4328, {%r17743, %r17741};
	mov.b64	%rd4329, {%r17747, %r17745};
	mov.b64	%rd4330, {%r17751, %r17749};
	mov.b64	%rd4331, {%r17755, %r17753};
	mov.b64	%rd4332, {%r17759, %r17757};
	mov.b64	%rd4333, {%r17763, %r17761};
	mov.b64	%rd4334, {%r17767, %r17765};
	mov.b64	%rd4335, {%r17771, %r17769};
	mov.b64	%rd4319, {%r17775, %r17773};
	mov.b64	%rd4318, {%r17779, %r17777};
	mov.b64	%rd4317, {%r17783, %r17781};
	mov.b64	%rd4316, {%r17787, %r17785};
	mov.b64	%rd4315, {%r17791, %r17789};
	mov.b64	%rd4314, {%r17795, %r17793};
	mov.b64	%rd4313, {%r17799, %r17797};
	mov.b64	%rd4312, {%r17803, %r17801};
	ld.local.u64 	%rd196, [%rd17+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17804,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17805}, %rd196;
	}
	shf.r.wrap.b32 	%r17806, %r17805, %r17804, 14;
	shf.r.wrap.b32 	%r17807, %r17804, %r17805, 14;
	mov.b64 	%rd2321, {%r17807, %r17806};
	shf.r.wrap.b32 	%r17808, %r17805, %r17804, 18;
	shf.r.wrap.b32 	%r17809, %r17804, %r17805, 18;
	mov.b64 	%rd2322, {%r17809, %r17808};
	xor.b64  	%rd2323, %rd2322, %rd2321;
	shf.l.wrap.b32 	%r17810, %r17804, %r17805, 23;
	shf.l.wrap.b32 	%r17811, %r17805, %r17804, 23;
	mov.b64 	%rd2324, {%r17811, %r17810};
	xor.b64  	%rd2325, %rd2323, %rd2324;
	ld.local.u64 	%rd197, [%rd17+48];
	ld.local.u64 	%rd198, [%rd17+40];
	xor.b64  	%rd2326, %rd197, %rd198;
	and.b64  	%rd2327, %rd2326, %rd196;
	xor.b64  	%rd2328, %rd2327, %rd197;
	ld.local.u64 	%rd199, [%rd17+56];
	add.s64 	%rd2329, %rd2328, %rd199;
	add.s64 	%rd2330, %rd2329, %rd4328;
	add.s64 	%rd2331, %rd2330, %rd1;
	add.s64 	%rd2332, %rd2331, %rd2325;
	ld.local.u64 	%rd200, [%rd17+24];
	add.s64 	%rd2333, %rd2332, %rd200;
	ld.local.u64 	%rd201, [%rd17];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17812,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17813}, %rd201;
	}
	shf.r.wrap.b32 	%r17814, %r17813, %r17812, 28;
	shf.r.wrap.b32 	%r17815, %r17812, %r17813, 28;
	mov.b64 	%rd2334, {%r17815, %r17814};
	shf.l.wrap.b32 	%r17816, %r17812, %r17813, 30;
	shf.l.wrap.b32 	%r17817, %r17813, %r17812, 30;
	mov.b64 	%rd2335, {%r17817, %r17816};
	xor.b64  	%rd2336, %rd2335, %rd2334;
	shf.l.wrap.b32 	%r17818, %r17812, %r17813, 25;
	shf.l.wrap.b32 	%r17819, %r17813, %r17812, 25;
	mov.b64 	%rd2337, {%r17819, %r17818};
	xor.b64  	%rd2338, %rd2336, %rd2337;
	ld.local.u64 	%rd202, [%rd17+8];
	and.b64  	%rd2339, %rd202, %rd201;
	xor.b64  	%rd2340, %rd202, %rd201;
	ld.local.u64 	%rd203, [%rd17+16];
	and.b64  	%rd2341, %rd203, %rd2340;
	or.b64  	%rd2342, %rd2341, %rd2339;
	add.s64 	%rd2343, %rd2332, %rd2342;
	add.s64 	%rd2344, %rd2343, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17820,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17821}, %rd2333;
	}
	shf.r.wrap.b32 	%r17822, %r17821, %r17820, 14;
	shf.r.wrap.b32 	%r17823, %r17820, %r17821, 14;
	mov.b64 	%rd2345, {%r17823, %r17822};
	shf.r.wrap.b32 	%r17824, %r17821, %r17820, 18;
	shf.r.wrap.b32 	%r17825, %r17820, %r17821, 18;
	mov.b64 	%rd2346, {%r17825, %r17824};
	xor.b64  	%rd2347, %rd2346, %rd2345;
	shf.l.wrap.b32 	%r17826, %r17820, %r17821, 23;
	shf.l.wrap.b32 	%r17827, %r17821, %r17820, 23;
	mov.b64 	%rd2348, {%r17827, %r17826};
	xor.b64  	%rd2349, %rd2347, %rd2348;
	xor.b64  	%rd2350, %rd198, %rd196;
	and.b64  	%rd2351, %rd2333, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd198;
	add.s64 	%rd2353, %rd4329, %rd197;
	add.s64 	%rd2354, %rd2353, %rd2;
	add.s64 	%rd2355, %rd2354, %rd2352;
	add.s64 	%rd2356, %rd2355, %rd2349;
	add.s64 	%rd2357, %rd2356, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17828,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17829}, %rd2344;
	}
	shf.r.wrap.b32 	%r17830, %r17829, %r17828, 28;
	shf.r.wrap.b32 	%r17831, %r17828, %r17829, 28;
	mov.b64 	%rd2358, {%r17831, %r17830};
	shf.l.wrap.b32 	%r17832, %r17828, %r17829, 30;
	shf.l.wrap.b32 	%r17833, %r17829, %r17828, 30;
	mov.b64 	%rd2359, {%r17833, %r17832};
	xor.b64  	%rd2360, %rd2359, %rd2358;
	shf.l.wrap.b32 	%r17834, %r17828, %r17829, 25;
	shf.l.wrap.b32 	%r17835, %r17829, %r17828, 25;
	mov.b64 	%rd2361, {%r17835, %r17834};
	xor.b64  	%rd2362, %rd2360, %rd2361;
	and.b64  	%rd2363, %rd2344, %rd201;
	xor.b64  	%rd2364, %rd2344, %rd201;
	and.b64  	%rd2365, %rd2364, %rd202;
	or.b64  	%rd2366, %rd2365, %rd2363;
	add.s64 	%rd2367, %rd2356, %rd2366;
	add.s64 	%rd2368, %rd2367, %rd2362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17836,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17837}, %rd2357;
	}
	shf.r.wrap.b32 	%r17838, %r17837, %r17836, 14;
	shf.r.wrap.b32 	%r17839, %r17836, %r17837, 14;
	mov.b64 	%rd2369, {%r17839, %r17838};
	shf.r.wrap.b32 	%r17840, %r17837, %r17836, 18;
	shf.r.wrap.b32 	%r17841, %r17836, %r17837, 18;
	mov.b64 	%rd2370, {%r17841, %r17840};
	xor.b64  	%rd2371, %rd2370, %rd2369;
	shf.l.wrap.b32 	%r17842, %r17836, %r17837, 23;
	shf.l.wrap.b32 	%r17843, %r17837, %r17836, 23;
	mov.b64 	%rd2372, {%r17843, %r17842};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	xor.b64  	%rd2374, %rd2333, %rd196;
	and.b64  	%rd2375, %rd2357, %rd2374;
	xor.b64  	%rd2376, %rd2375, %rd196;
	add.s64 	%rd2377, %rd4330, %rd198;
	add.s64 	%rd2378, %rd2377, %rd3;
	add.s64 	%rd2379, %rd2378, %rd2376;
	add.s64 	%rd2380, %rd2379, %rd2373;
	add.s64 	%rd2381, %rd2380, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17844,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17845}, %rd2368;
	}
	shf.r.wrap.b32 	%r17846, %r17845, %r17844, 28;
	shf.r.wrap.b32 	%r17847, %r17844, %r17845, 28;
	mov.b64 	%rd2382, {%r17847, %r17846};
	shf.l.wrap.b32 	%r17848, %r17844, %r17845, 30;
	shf.l.wrap.b32 	%r17849, %r17845, %r17844, 30;
	mov.b64 	%rd2383, {%r17849, %r17848};
	xor.b64  	%rd2384, %rd2383, %rd2382;
	shf.l.wrap.b32 	%r17850, %r17844, %r17845, 25;
	shf.l.wrap.b32 	%r17851, %r17845, %r17844, 25;
	mov.b64 	%rd2385, {%r17851, %r17850};
	xor.b64  	%rd2386, %rd2384, %rd2385;
	and.b64  	%rd2387, %rd2368, %rd2344;
	xor.b64  	%rd2388, %rd2368, %rd2344;
	and.b64  	%rd2389, %rd2388, %rd201;
	or.b64  	%rd2390, %rd2389, %rd2387;
	add.s64 	%rd2391, %rd2380, %rd2390;
	add.s64 	%rd2392, %rd2391, %rd2386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17852,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17853}, %rd2381;
	}
	shf.r.wrap.b32 	%r17854, %r17853, %r17852, 14;
	shf.r.wrap.b32 	%r17855, %r17852, %r17853, 14;
	mov.b64 	%rd2393, {%r17855, %r17854};
	shf.r.wrap.b32 	%r17856, %r17853, %r17852, 18;
	shf.r.wrap.b32 	%r17857, %r17852, %r17853, 18;
	mov.b64 	%rd2394, {%r17857, %r17856};
	xor.b64  	%rd2395, %rd2394, %rd2393;
	shf.l.wrap.b32 	%r17858, %r17852, %r17853, 23;
	shf.l.wrap.b32 	%r17859, %r17853, %r17852, 23;
	mov.b64 	%rd2396, {%r17859, %r17858};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	xor.b64  	%rd2398, %rd2357, %rd2333;
	and.b64  	%rd2399, %rd2381, %rd2398;
	xor.b64  	%rd2400, %rd2399, %rd2333;
	add.s64 	%rd2401, %rd4331, %rd196;
	add.s64 	%rd2402, %rd2401, %rd4;
	add.s64 	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2403, %rd2397;
	add.s64 	%rd2405, %rd2404, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17860,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17861}, %rd2392;
	}
	shf.r.wrap.b32 	%r17862, %r17861, %r17860, 28;
	shf.r.wrap.b32 	%r17863, %r17860, %r17861, 28;
	mov.b64 	%rd2406, {%r17863, %r17862};
	shf.l.wrap.b32 	%r17864, %r17860, %r17861, 30;
	shf.l.wrap.b32 	%r17865, %r17861, %r17860, 30;
	mov.b64 	%rd2407, {%r17865, %r17864};
	xor.b64  	%rd2408, %rd2407, %rd2406;
	shf.l.wrap.b32 	%r17866, %r17860, %r17861, 25;
	shf.l.wrap.b32 	%r17867, %r17861, %r17860, 25;
	mov.b64 	%rd2409, {%r17867, %r17866};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	and.b64  	%rd2411, %rd2392, %rd2368;
	xor.b64  	%rd2412, %rd2392, %rd2368;
	and.b64  	%rd2413, %rd2412, %rd2344;
	or.b64  	%rd2414, %rd2413, %rd2411;
	add.s64 	%rd2415, %rd2404, %rd2414;
	add.s64 	%rd2416, %rd2415, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17868,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17869}, %rd2405;
	}
	shf.r.wrap.b32 	%r17870, %r17869, %r17868, 14;
	shf.r.wrap.b32 	%r17871, %r17868, %r17869, 14;
	mov.b64 	%rd2417, {%r17871, %r17870};
	shf.r.wrap.b32 	%r17872, %r17869, %r17868, 18;
	shf.r.wrap.b32 	%r17873, %r17868, %r17869, 18;
	mov.b64 	%rd2418, {%r17873, %r17872};
	xor.b64  	%rd2419, %rd2418, %rd2417;
	shf.l.wrap.b32 	%r17874, %r17868, %r17869, 23;
	shf.l.wrap.b32 	%r17875, %r17869, %r17868, 23;
	mov.b64 	%rd2420, {%r17875, %r17874};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	xor.b64  	%rd2422, %rd2381, %rd2357;
	and.b64  	%rd2423, %rd2405, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2357;
	add.s64 	%rd2425, %rd2333, %rd4332;
	add.s64 	%rd2426, %rd2425, %rd5;
	add.s64 	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2427, %rd2421;
	add.s64 	%rd2429, %rd2428, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17876,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17877}, %rd2416;
	}
	shf.r.wrap.b32 	%r17878, %r17877, %r17876, 28;
	shf.r.wrap.b32 	%r17879, %r17876, %r17877, 28;
	mov.b64 	%rd2430, {%r17879, %r17878};
	shf.l.wrap.b32 	%r17880, %r17876, %r17877, 30;
	shf.l.wrap.b32 	%r17881, %r17877, %r17876, 30;
	mov.b64 	%rd2431, {%r17881, %r17880};
	xor.b64  	%rd2432, %rd2431, %rd2430;
	shf.l.wrap.b32 	%r17882, %r17876, %r17877, 25;
	shf.l.wrap.b32 	%r17883, %r17877, %r17876, 25;
	mov.b64 	%rd2433, {%r17883, %r17882};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	and.b64  	%rd2435, %rd2416, %rd2392;
	xor.b64  	%rd2436, %rd2416, %rd2392;
	and.b64  	%rd2437, %rd2436, %rd2368;
	or.b64  	%rd2438, %rd2437, %rd2435;
	add.s64 	%rd2439, %rd2428, %rd2438;
	add.s64 	%rd2440, %rd2439, %rd2434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17884,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17885}, %rd2429;
	}
	shf.r.wrap.b32 	%r17886, %r17885, %r17884, 14;
	shf.r.wrap.b32 	%r17887, %r17884, %r17885, 14;
	mov.b64 	%rd2441, {%r17887, %r17886};
	shf.r.wrap.b32 	%r17888, %r17885, %r17884, 18;
	shf.r.wrap.b32 	%r17889, %r17884, %r17885, 18;
	mov.b64 	%rd2442, {%r17889, %r17888};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	shf.l.wrap.b32 	%r17890, %r17884, %r17885, 23;
	shf.l.wrap.b32 	%r17891, %r17885, %r17884, 23;
	mov.b64 	%rd2444, {%r17891, %r17890};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	xor.b64  	%rd2446, %rd2405, %rd2381;
	and.b64  	%rd2447, %rd2429, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2381;
	add.s64 	%rd2449, %rd2357, %rd4333;
	add.s64 	%rd2450, %rd2449, %rd6;
	add.s64 	%rd2451, %rd2450, %rd2448;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17892,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17893}, %rd2440;
	}
	shf.r.wrap.b32 	%r17894, %r17893, %r17892, 28;
	shf.r.wrap.b32 	%r17895, %r17892, %r17893, 28;
	mov.b64 	%rd2454, {%r17895, %r17894};
	shf.l.wrap.b32 	%r17896, %r17892, %r17893, 30;
	shf.l.wrap.b32 	%r17897, %r17893, %r17892, 30;
	mov.b64 	%rd2455, {%r17897, %r17896};
	xor.b64  	%rd2456, %rd2455, %rd2454;
	shf.l.wrap.b32 	%r17898, %r17892, %r17893, 25;
	shf.l.wrap.b32 	%r17899, %r17893, %r17892, 25;
	mov.b64 	%rd2457, {%r17899, %r17898};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	and.b64  	%rd2459, %rd2440, %rd2416;
	xor.b64  	%rd2460, %rd2440, %rd2416;
	and.b64  	%rd2461, %rd2460, %rd2392;
	or.b64  	%rd2462, %rd2461, %rd2459;
	add.s64 	%rd2463, %rd2452, %rd2462;
	add.s64 	%rd2464, %rd2463, %rd2458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17900,%dummy}, %rd2453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17901}, %rd2453;
	}
	shf.r.wrap.b32 	%r17902, %r17901, %r17900, 14;
	shf.r.wrap.b32 	%r17903, %r17900, %r17901, 14;
	mov.b64 	%rd2465, {%r17903, %r17902};
	shf.r.wrap.b32 	%r17904, %r17901, %r17900, 18;
	shf.r.wrap.b32 	%r17905, %r17900, %r17901, 18;
	mov.b64 	%rd2466, {%r17905, %r17904};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	shf.l.wrap.b32 	%r17906, %r17900, %r17901, 23;
	shf.l.wrap.b32 	%r17907, %r17901, %r17900, 23;
	mov.b64 	%rd2468, {%r17907, %r17906};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	xor.b64  	%rd2470, %rd2429, %rd2405;
	and.b64  	%rd2471, %rd2453, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2405;
	add.s64 	%rd2473, %rd2381, %rd4334;
	add.s64 	%rd2474, %rd2473, %rd7;
	add.s64 	%rd2475, %rd2474, %rd2472;
	add.s64 	%rd2476, %rd2475, %rd2469;
	add.s64 	%rd2477, %rd2476, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17908,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17909}, %rd2464;
	}
	shf.r.wrap.b32 	%r17910, %r17909, %r17908, 28;
	shf.r.wrap.b32 	%r17911, %r17908, %r17909, 28;
	mov.b64 	%rd2478, {%r17911, %r17910};
	shf.l.wrap.b32 	%r17912, %r17908, %r17909, 30;
	shf.l.wrap.b32 	%r17913, %r17909, %r17908, 30;
	mov.b64 	%rd2479, {%r17913, %r17912};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r17914, %r17908, %r17909, 25;
	shf.l.wrap.b32 	%r17915, %r17909, %r17908, 25;
	mov.b64 	%rd2481, {%r17915, %r17914};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	and.b64  	%rd2483, %rd2464, %rd2440;
	xor.b64  	%rd2484, %rd2464, %rd2440;
	and.b64  	%rd2485, %rd2484, %rd2416;
	or.b64  	%rd2486, %rd2485, %rd2483;
	add.s64 	%rd2487, %rd2476, %rd2486;
	add.s64 	%rd2488, %rd2487, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17916,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17917}, %rd2477;
	}
	shf.r.wrap.b32 	%r17918, %r17917, %r17916, 14;
	shf.r.wrap.b32 	%r17919, %r17916, %r17917, 14;
	mov.b64 	%rd2489, {%r17919, %r17918};
	shf.r.wrap.b32 	%r17920, %r17917, %r17916, 18;
	shf.r.wrap.b32 	%r17921, %r17916, %r17917, 18;
	mov.b64 	%rd2490, {%r17921, %r17920};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r17922, %r17916, %r17917, 23;
	shf.l.wrap.b32 	%r17923, %r17917, %r17916, 23;
	mov.b64 	%rd2492, {%r17923, %r17922};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2453, %rd2429;
	and.b64  	%rd2495, %rd2477, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2429;
	add.s64 	%rd2497, %rd2405, %rd4335;
	add.s64 	%rd2498, %rd2497, %rd8;
	add.s64 	%rd2499, %rd2498, %rd2496;
	add.s64 	%rd2500, %rd2499, %rd2493;
	add.s64 	%rd2501, %rd2500, %rd2416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17924,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17925}, %rd2488;
	}
	shf.r.wrap.b32 	%r17926, %r17925, %r17924, 28;
	shf.r.wrap.b32 	%r17927, %r17924, %r17925, 28;
	mov.b64 	%rd2502, {%r17927, %r17926};
	shf.l.wrap.b32 	%r17928, %r17924, %r17925, 30;
	shf.l.wrap.b32 	%r17929, %r17925, %r17924, 30;
	mov.b64 	%rd2503, {%r17929, %r17928};
	xor.b64  	%rd2504, %rd2503, %rd2502;
	shf.l.wrap.b32 	%r17930, %r17924, %r17925, 25;
	shf.l.wrap.b32 	%r17931, %r17925, %r17924, 25;
	mov.b64 	%rd2505, {%r17931, %r17930};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	and.b64  	%rd2507, %rd2488, %rd2464;
	xor.b64  	%rd2508, %rd2488, %rd2464;
	and.b64  	%rd2509, %rd2508, %rd2440;
	or.b64  	%rd2510, %rd2509, %rd2507;
	add.s64 	%rd2511, %rd2500, %rd2510;
	add.s64 	%rd2512, %rd2511, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17932,%dummy}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17933}, %rd2501;
	}
	shf.r.wrap.b32 	%r17934, %r17933, %r17932, 14;
	shf.r.wrap.b32 	%r17935, %r17932, %r17933, 14;
	mov.b64 	%rd2513, {%r17935, %r17934};
	shf.r.wrap.b32 	%r17936, %r17933, %r17932, 18;
	shf.r.wrap.b32 	%r17937, %r17932, %r17933, 18;
	mov.b64 	%rd2514, {%r17937, %r17936};
	xor.b64  	%rd2515, %rd2514, %rd2513;
	shf.l.wrap.b32 	%r17938, %r17932, %r17933, 23;
	shf.l.wrap.b32 	%r17939, %r17933, %r17932, 23;
	mov.b64 	%rd2516, {%r17939, %r17938};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	xor.b64  	%rd2518, %rd2477, %rd2453;
	and.b64  	%rd2519, %rd2501, %rd2518;
	xor.b64  	%rd2520, %rd2519, %rd2453;
	add.s64 	%rd2521, %rd2429, %rd4319;
	add.s64 	%rd2522, %rd2521, %rd9;
	add.s64 	%rd2523, %rd2522, %rd2520;
	add.s64 	%rd2524, %rd2523, %rd2517;
	add.s64 	%rd2525, %rd2524, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17940,%dummy}, %rd2512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17941}, %rd2512;
	}
	shf.r.wrap.b32 	%r17942, %r17941, %r17940, 28;
	shf.r.wrap.b32 	%r17943, %r17940, %r17941, 28;
	mov.b64 	%rd2526, {%r17943, %r17942};
	shf.l.wrap.b32 	%r17944, %r17940, %r17941, 30;
	shf.l.wrap.b32 	%r17945, %r17941, %r17940, 30;
	mov.b64 	%rd2527, {%r17945, %r17944};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r17946, %r17940, %r17941, 25;
	shf.l.wrap.b32 	%r17947, %r17941, %r17940, 25;
	mov.b64 	%rd2529, {%r17947, %r17946};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	and.b64  	%rd2531, %rd2512, %rd2488;
	xor.b64  	%rd2532, %rd2512, %rd2488;
	and.b64  	%rd2533, %rd2532, %rd2464;
	or.b64  	%rd2534, %rd2533, %rd2531;
	add.s64 	%rd2535, %rd2524, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17948,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17949}, %rd2525;
	}
	shf.r.wrap.b32 	%r17950, %r17949, %r17948, 14;
	shf.r.wrap.b32 	%r17951, %r17948, %r17949, 14;
	mov.b64 	%rd2537, {%r17951, %r17950};
	shf.r.wrap.b32 	%r17952, %r17949, %r17948, 18;
	shf.r.wrap.b32 	%r17953, %r17948, %r17949, 18;
	mov.b64 	%rd2538, {%r17953, %r17952};
	xor.b64  	%rd2539, %rd2538, %rd2537;
	shf.l.wrap.b32 	%r17954, %r17948, %r17949, 23;
	shf.l.wrap.b32 	%r17955, %r17949, %r17948, 23;
	mov.b64 	%rd2540, {%r17955, %r17954};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	xor.b64  	%rd2542, %rd2501, %rd2477;
	and.b64  	%rd2543, %rd2525, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2477;
	add.s64 	%rd2545, %rd2453, %rd4318;
	add.s64 	%rd2546, %rd2545, %rd10;
	add.s64 	%rd2547, %rd2546, %rd2544;
	add.s64 	%rd2548, %rd2547, %rd2541;
	add.s64 	%rd2549, %rd2548, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17956,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17957}, %rd2536;
	}
	shf.r.wrap.b32 	%r17958, %r17957, %r17956, 28;
	shf.r.wrap.b32 	%r17959, %r17956, %r17957, 28;
	mov.b64 	%rd2550, {%r17959, %r17958};
	shf.l.wrap.b32 	%r17960, %r17956, %r17957, 30;
	shf.l.wrap.b32 	%r17961, %r17957, %r17956, 30;
	mov.b64 	%rd2551, {%r17961, %r17960};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r17962, %r17956, %r17957, 25;
	shf.l.wrap.b32 	%r17963, %r17957, %r17956, 25;
	mov.b64 	%rd2553, {%r17963, %r17962};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	and.b64  	%rd2555, %rd2536, %rd2512;
	xor.b64  	%rd2556, %rd2536, %rd2512;
	and.b64  	%rd2557, %rd2556, %rd2488;
	or.b64  	%rd2558, %rd2557, %rd2555;
	add.s64 	%rd2559, %rd2548, %rd2558;
	add.s64 	%rd2560, %rd2559, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17964,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17965}, %rd2549;
	}
	shf.r.wrap.b32 	%r17966, %r17965, %r17964, 14;
	shf.r.wrap.b32 	%r17967, %r17964, %r17965, 14;
	mov.b64 	%rd2561, {%r17967, %r17966};
	shf.r.wrap.b32 	%r17968, %r17965, %r17964, 18;
	shf.r.wrap.b32 	%r17969, %r17964, %r17965, 18;
	mov.b64 	%rd2562, {%r17969, %r17968};
	xor.b64  	%rd2563, %rd2562, %rd2561;
	shf.l.wrap.b32 	%r17970, %r17964, %r17965, 23;
	shf.l.wrap.b32 	%r17971, %r17965, %r17964, 23;
	mov.b64 	%rd2564, {%r17971, %r17970};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	xor.b64  	%rd2566, %rd2525, %rd2501;
	and.b64  	%rd2567, %rd2549, %rd2566;
	xor.b64  	%rd2568, %rd2567, %rd2501;
	add.s64 	%rd2569, %rd2477, %rd4317;
	add.s64 	%rd2570, %rd2569, %rd11;
	add.s64 	%rd2571, %rd2570, %rd2568;
	add.s64 	%rd2572, %rd2571, %rd2565;
	add.s64 	%rd2573, %rd2572, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17972,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17973}, %rd2560;
	}
	shf.r.wrap.b32 	%r17974, %r17973, %r17972, 28;
	shf.r.wrap.b32 	%r17975, %r17972, %r17973, 28;
	mov.b64 	%rd2574, {%r17975, %r17974};
	shf.l.wrap.b32 	%r17976, %r17972, %r17973, 30;
	shf.l.wrap.b32 	%r17977, %r17973, %r17972, 30;
	mov.b64 	%rd2575, {%r17977, %r17976};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r17978, %r17972, %r17973, 25;
	shf.l.wrap.b32 	%r17979, %r17973, %r17972, 25;
	mov.b64 	%rd2577, {%r17979, %r17978};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	and.b64  	%rd2579, %rd2560, %rd2536;
	xor.b64  	%rd2580, %rd2560, %rd2536;
	and.b64  	%rd2581, %rd2580, %rd2512;
	or.b64  	%rd2582, %rd2581, %rd2579;
	add.s64 	%rd2583, %rd2572, %rd2582;
	add.s64 	%rd2584, %rd2583, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17980,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17981}, %rd2573;
	}
	shf.r.wrap.b32 	%r17982, %r17981, %r17980, 14;
	shf.r.wrap.b32 	%r17983, %r17980, %r17981, 14;
	mov.b64 	%rd2585, {%r17983, %r17982};
	shf.r.wrap.b32 	%r17984, %r17981, %r17980, 18;
	shf.r.wrap.b32 	%r17985, %r17980, %r17981, 18;
	mov.b64 	%rd2586, {%r17985, %r17984};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r17986, %r17980, %r17981, 23;
	shf.l.wrap.b32 	%r17987, %r17981, %r17980, 23;
	mov.b64 	%rd2588, {%r17987, %r17986};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	xor.b64  	%rd2590, %rd2549, %rd2525;
	and.b64  	%rd2591, %rd2573, %rd2590;
	xor.b64  	%rd2592, %rd2591, %rd2525;
	add.s64 	%rd2593, %rd2501, %rd4316;
	add.s64 	%rd2594, %rd2593, %rd12;
	add.s64 	%rd2595, %rd2594, %rd2592;
	add.s64 	%rd2596, %rd2595, %rd2589;
	add.s64 	%rd2597, %rd2596, %rd2512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17988,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17989}, %rd2584;
	}
	shf.r.wrap.b32 	%r17990, %r17989, %r17988, 28;
	shf.r.wrap.b32 	%r17991, %r17988, %r17989, 28;
	mov.b64 	%rd2598, {%r17991, %r17990};
	shf.l.wrap.b32 	%r17992, %r17988, %r17989, 30;
	shf.l.wrap.b32 	%r17993, %r17989, %r17988, 30;
	mov.b64 	%rd2599, {%r17993, %r17992};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r17994, %r17988, %r17989, 25;
	shf.l.wrap.b32 	%r17995, %r17989, %r17988, 25;
	mov.b64 	%rd2601, {%r17995, %r17994};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	and.b64  	%rd2603, %rd2584, %rd2560;
	xor.b64  	%rd2604, %rd2584, %rd2560;
	and.b64  	%rd2605, %rd2604, %rd2536;
	or.b64  	%rd2606, %rd2605, %rd2603;
	add.s64 	%rd2607, %rd2596, %rd2606;
	add.s64 	%rd2608, %rd2607, %rd2602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17996,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17997}, %rd2597;
	}
	shf.r.wrap.b32 	%r17998, %r17997, %r17996, 14;
	shf.r.wrap.b32 	%r17999, %r17996, %r17997, 14;
	mov.b64 	%rd2609, {%r17999, %r17998};
	shf.r.wrap.b32 	%r18000, %r17997, %r17996, 18;
	shf.r.wrap.b32 	%r18001, %r17996, %r17997, 18;
	mov.b64 	%rd2610, {%r18001, %r18000};
	xor.b64  	%rd2611, %rd2610, %rd2609;
	shf.l.wrap.b32 	%r18002, %r17996, %r17997, 23;
	shf.l.wrap.b32 	%r18003, %r17997, %r17996, 23;
	mov.b64 	%rd2612, {%r18003, %r18002};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	xor.b64  	%rd2614, %rd2573, %rd2549;
	and.b64  	%rd2615, %rd2597, %rd2614;
	xor.b64  	%rd2616, %rd2615, %rd2549;
	add.s64 	%rd2617, %rd2525, %rd4315;
	add.s64 	%rd2618, %rd2617, %rd13;
	add.s64 	%rd2619, %rd2618, %rd2616;
	add.s64 	%rd2620, %rd2619, %rd2613;
	add.s64 	%rd4327, %rd2620, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18004,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18005}, %rd2608;
	}
	shf.r.wrap.b32 	%r18006, %r18005, %r18004, 28;
	shf.r.wrap.b32 	%r18007, %r18004, %r18005, 28;
	mov.b64 	%rd2621, {%r18007, %r18006};
	shf.l.wrap.b32 	%r18008, %r18004, %r18005, 30;
	shf.l.wrap.b32 	%r18009, %r18005, %r18004, 30;
	mov.b64 	%rd2622, {%r18009, %r18008};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	shf.l.wrap.b32 	%r18010, %r18004, %r18005, 25;
	shf.l.wrap.b32 	%r18011, %r18005, %r18004, 25;
	mov.b64 	%rd2624, {%r18011, %r18010};
	xor.b64  	%rd2625, %rd2623, %rd2624;
	and.b64  	%rd2626, %rd2608, %rd2584;
	xor.b64  	%rd2627, %rd2608, %rd2584;
	and.b64  	%rd2628, %rd2627, %rd2560;
	or.b64  	%rd2629, %rd2628, %rd2626;
	add.s64 	%rd2630, %rd2620, %rd2629;
	add.s64 	%rd4323, %rd2630, %rd2625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18012,%dummy}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18013}, %rd4327;
	}
	shf.r.wrap.b32 	%r18014, %r18013, %r18012, 14;
	shf.r.wrap.b32 	%r18015, %r18012, %r18013, 14;
	mov.b64 	%rd2631, {%r18015, %r18014};
	shf.r.wrap.b32 	%r18016, %r18013, %r18012, 18;
	shf.r.wrap.b32 	%r18017, %r18012, %r18013, 18;
	mov.b64 	%rd2632, {%r18017, %r18016};
	xor.b64  	%rd2633, %rd2632, %rd2631;
	shf.l.wrap.b32 	%r18018, %r18012, %r18013, 23;
	shf.l.wrap.b32 	%r18019, %r18013, %r18012, 23;
	mov.b64 	%rd2634, {%r18019, %r18018};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	xor.b64  	%rd2636, %rd2597, %rd2573;
	and.b64  	%rd2637, %rd4327, %rd2636;
	xor.b64  	%rd2638, %rd2637, %rd2573;
	add.s64 	%rd2639, %rd2549, %rd4314;
	add.s64 	%rd2640, %rd2639, %rd14;
	add.s64 	%rd2641, %rd2640, %rd2638;
	add.s64 	%rd2642, %rd2641, %rd2635;
	add.s64 	%rd4326, %rd2642, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18020,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18021}, %rd4323;
	}
	shf.r.wrap.b32 	%r18022, %r18021, %r18020, 28;
	shf.r.wrap.b32 	%r18023, %r18020, %r18021, 28;
	mov.b64 	%rd2643, {%r18023, %r18022};
	shf.l.wrap.b32 	%r18024, %r18020, %r18021, 30;
	shf.l.wrap.b32 	%r18025, %r18021, %r18020, 30;
	mov.b64 	%rd2644, {%r18025, %r18024};
	xor.b64  	%rd2645, %rd2644, %rd2643;
	shf.l.wrap.b32 	%r18026, %r18020, %r18021, 25;
	shf.l.wrap.b32 	%r18027, %r18021, %r18020, 25;
	mov.b64 	%rd2646, {%r18027, %r18026};
	xor.b64  	%rd2647, %rd2645, %rd2646;
	and.b64  	%rd2648, %rd4323, %rd2608;
	xor.b64  	%rd2649, %rd4323, %rd2608;
	and.b64  	%rd2650, %rd2649, %rd2584;
	or.b64  	%rd2651, %rd2650, %rd2648;
	add.s64 	%rd2652, %rd2642, %rd2651;
	add.s64 	%rd4322, %rd2652, %rd2647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18028,%dummy}, %rd4326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18029}, %rd4326;
	}
	shf.r.wrap.b32 	%r18030, %r18029, %r18028, 14;
	shf.r.wrap.b32 	%r18031, %r18028, %r18029, 14;
	mov.b64 	%rd2653, {%r18031, %r18030};
	shf.r.wrap.b32 	%r18032, %r18029, %r18028, 18;
	shf.r.wrap.b32 	%r18033, %r18028, %r18029, 18;
	mov.b64 	%rd2654, {%r18033, %r18032};
	xor.b64  	%rd2655, %rd2654, %rd2653;
	shf.l.wrap.b32 	%r18034, %r18028, %r18029, 23;
	shf.l.wrap.b32 	%r18035, %r18029, %r18028, 23;
	mov.b64 	%rd2656, {%r18035, %r18034};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	xor.b64  	%rd2658, %rd4327, %rd2597;
	and.b64  	%rd2659, %rd4326, %rd2658;
	xor.b64  	%rd2660, %rd2659, %rd2597;
	add.s64 	%rd2661, %rd2573, %rd4313;
	add.s64 	%rd2662, %rd2661, %rd15;
	add.s64 	%rd2663, %rd2662, %rd2660;
	add.s64 	%rd2664, %rd2663, %rd2657;
	add.s64 	%rd4325, %rd2664, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18036,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18037}, %rd4322;
	}
	shf.r.wrap.b32 	%r18038, %r18037, %r18036, 28;
	shf.r.wrap.b32 	%r18039, %r18036, %r18037, 28;
	mov.b64 	%rd2665, {%r18039, %r18038};
	shf.l.wrap.b32 	%r18040, %r18036, %r18037, 30;
	shf.l.wrap.b32 	%r18041, %r18037, %r18036, 30;
	mov.b64 	%rd2666, {%r18041, %r18040};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	shf.l.wrap.b32 	%r18042, %r18036, %r18037, 25;
	shf.l.wrap.b32 	%r18043, %r18037, %r18036, 25;
	mov.b64 	%rd2668, {%r18043, %r18042};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	and.b64  	%rd2670, %rd4322, %rd4323;
	xor.b64  	%rd2671, %rd4322, %rd4323;
	and.b64  	%rd2672, %rd2671, %rd2608;
	or.b64  	%rd2673, %rd2672, %rd2670;
	add.s64 	%rd2674, %rd2664, %rd2673;
	add.s64 	%rd4321, %rd2674, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18044,%dummy}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18045}, %rd4325;
	}
	shf.r.wrap.b32 	%r18046, %r18045, %r18044, 14;
	shf.r.wrap.b32 	%r18047, %r18044, %r18045, 14;
	mov.b64 	%rd2675, {%r18047, %r18046};
	shf.r.wrap.b32 	%r18048, %r18045, %r18044, 18;
	shf.r.wrap.b32 	%r18049, %r18044, %r18045, 18;
	mov.b64 	%rd2676, {%r18049, %r18048};
	xor.b64  	%rd2677, %rd2676, %rd2675;
	shf.l.wrap.b32 	%r18050, %r18044, %r18045, 23;
	shf.l.wrap.b32 	%r18051, %r18045, %r18044, 23;
	mov.b64 	%rd2678, {%r18051, %r18050};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	xor.b64  	%rd2680, %rd4326, %rd4327;
	and.b64  	%rd2681, %rd4325, %rd2680;
	xor.b64  	%rd2682, %rd2681, %rd4327;
	add.s64 	%rd2683, %rd2597, %rd4312;
	add.s64 	%rd2684, %rd2683, %rd16;
	add.s64 	%rd2685, %rd2684, %rd2682;
	add.s64 	%rd2686, %rd2685, %rd2679;
	add.s64 	%rd4324, %rd2686, %rd2608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18052,%dummy}, %rd4321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18053}, %rd4321;
	}
	shf.r.wrap.b32 	%r18054, %r18053, %r18052, 28;
	shf.r.wrap.b32 	%r18055, %r18052, %r18053, 28;
	mov.b64 	%rd2687, {%r18055, %r18054};
	shf.l.wrap.b32 	%r18056, %r18052, %r18053, 30;
	shf.l.wrap.b32 	%r18057, %r18053, %r18052, 30;
	mov.b64 	%rd2688, {%r18057, %r18056};
	xor.b64  	%rd2689, %rd2688, %rd2687;
	shf.l.wrap.b32 	%r18058, %r18052, %r18053, 25;
	shf.l.wrap.b32 	%r18059, %r18053, %r18052, 25;
	mov.b64 	%rd2690, {%r18059, %r18058};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	and.b64  	%rd2692, %rd4321, %rd4322;
	xor.b64  	%rd2693, %rd4321, %rd4322;
	and.b64  	%rd2694, %rd2693, %rd4323;
	or.b64  	%rd2695, %rd2694, %rd2692;
	add.s64 	%rd2696, %rd2686, %rd2695;
	add.s64 	%rd4320, %rd2696, %rd2691;
	mov.u32 	%r19397, 16;

BB2_305:
	shr.u64 	%rd2697, %rd4313, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18060,%dummy}, %rd4313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18061}, %rd4313;
	}
	shf.r.wrap.b32 	%r18062, %r18061, %r18060, 19;
	shf.r.wrap.b32 	%r18063, %r18060, %r18061, 19;
	mov.b64 	%rd2698, {%r18063, %r18062};
	xor.b64  	%rd2699, %rd2698, %rd2697;
	shf.l.wrap.b32 	%r18064, %r18060, %r18061, 3;
	shf.l.wrap.b32 	%r18065, %r18061, %r18060, 3;
	mov.b64 	%rd2700, {%r18065, %r18064};
	xor.b64  	%rd2701, %rd2699, %rd2700;
	shr.u64 	%rd2702, %rd4329, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18066,%dummy}, %rd4329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18067}, %rd4329;
	}
	shf.r.wrap.b32 	%r18068, %r18067, %r18066, 1;
	shf.r.wrap.b32 	%r18069, %r18066, %r18067, 1;
	mov.b64 	%rd2703, {%r18069, %r18068};
	xor.b64  	%rd2704, %rd2703, %rd2702;
	shf.r.wrap.b32 	%r18070, %r18067, %r18066, 8;
	shf.r.wrap.b32 	%r18071, %r18066, %r18067, 8;
	mov.b64 	%rd2705, {%r18071, %r18070};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	add.s64 	%rd2707, %rd4318, %rd4328;
	add.s64 	%rd2708, %rd2707, %rd2701;
	add.s64 	%rd4328, %rd2708, %rd2706;
	shr.u64 	%rd2709, %rd4312, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18072,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18073}, %rd4312;
	}
	shf.r.wrap.b32 	%r18074, %r18073, %r18072, 19;
	shf.r.wrap.b32 	%r18075, %r18072, %r18073, 19;
	mov.b64 	%rd2710, {%r18075, %r18074};
	xor.b64  	%rd2711, %rd2710, %rd2709;
	shf.l.wrap.b32 	%r18076, %r18072, %r18073, 3;
	shf.l.wrap.b32 	%r18077, %r18073, %r18072, 3;
	mov.b64 	%rd2712, {%r18077, %r18076};
	xor.b64  	%rd2713, %rd2711, %rd2712;
	shr.u64 	%rd2714, %rd4330, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18078,%dummy}, %rd4330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18079}, %rd4330;
	}
	shf.r.wrap.b32 	%r18080, %r18079, %r18078, 1;
	shf.r.wrap.b32 	%r18081, %r18078, %r18079, 1;
	mov.b64 	%rd2715, {%r18081, %r18080};
	xor.b64  	%rd2716, %rd2715, %rd2714;
	shf.r.wrap.b32 	%r18082, %r18079, %r18078, 8;
	shf.r.wrap.b32 	%r18083, %r18078, %r18079, 8;
	mov.b64 	%rd2717, {%r18083, %r18082};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	add.s64 	%rd2719, %rd4317, %rd4329;
	add.s64 	%rd2720, %rd2719, %rd2713;
	add.s64 	%rd4329, %rd2720, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18084,%dummy}, %rd4328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18085}, %rd4328;
	}
	shf.r.wrap.b32 	%r18086, %r18085, %r18084, 19;
	shf.r.wrap.b32 	%r18087, %r18084, %r18085, 19;
	mov.b64 	%rd2721, {%r18087, %r18086};
	shf.l.wrap.b32 	%r18088, %r18084, %r18085, 3;
	shf.l.wrap.b32 	%r18089, %r18085, %r18084, 3;
	mov.b64 	%rd2722, {%r18089, %r18088};
	shr.u64 	%rd2723, %rd4328, 6;
	xor.b64  	%rd2724, %rd2721, %rd2723;
	xor.b64  	%rd2725, %rd2724, %rd2722;
	shr.u64 	%rd2726, %rd4331, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18090,%dummy}, %rd4331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18091}, %rd4331;
	}
	shf.r.wrap.b32 	%r18092, %r18091, %r18090, 1;
	shf.r.wrap.b32 	%r18093, %r18090, %r18091, 1;
	mov.b64 	%rd2727, {%r18093, %r18092};
	xor.b64  	%rd2728, %rd2727, %rd2726;
	shf.r.wrap.b32 	%r18094, %r18091, %r18090, 8;
	shf.r.wrap.b32 	%r18095, %r18090, %r18091, 8;
	mov.b64 	%rd2729, {%r18095, %r18094};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	add.s64 	%rd2731, %rd4316, %rd4330;
	add.s64 	%rd2732, %rd2731, %rd2725;
	add.s64 	%rd4330, %rd2732, %rd2730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18096,%dummy}, %rd4329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18097}, %rd4329;
	}
	shf.r.wrap.b32 	%r18098, %r18097, %r18096, 19;
	shf.r.wrap.b32 	%r18099, %r18096, %r18097, 19;
	mov.b64 	%rd2733, {%r18099, %r18098};
	shf.l.wrap.b32 	%r18100, %r18096, %r18097, 3;
	shf.l.wrap.b32 	%r18101, %r18097, %r18096, 3;
	mov.b64 	%rd2734, {%r18101, %r18100};
	shr.u64 	%rd2735, %rd4329, 6;
	xor.b64  	%rd2736, %rd2733, %rd2735;
	xor.b64  	%rd2737, %rd2736, %rd2734;
	shr.u64 	%rd2738, %rd4332, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18102,%dummy}, %rd4332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18103}, %rd4332;
	}
	shf.r.wrap.b32 	%r18104, %r18103, %r18102, 1;
	shf.r.wrap.b32 	%r18105, %r18102, %r18103, 1;
	mov.b64 	%rd2739, {%r18105, %r18104};
	xor.b64  	%rd2740, %rd2739, %rd2738;
	shf.r.wrap.b32 	%r18106, %r18103, %r18102, 8;
	shf.r.wrap.b32 	%r18107, %r18102, %r18103, 8;
	mov.b64 	%rd2741, {%r18107, %r18106};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	add.s64 	%rd2743, %rd4315, %rd4331;
	add.s64 	%rd2744, %rd2743, %rd2737;
	add.s64 	%rd4331, %rd2744, %rd2742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18108,%dummy}, %rd4330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18109}, %rd4330;
	}
	shf.r.wrap.b32 	%r18110, %r18109, %r18108, 19;
	shf.r.wrap.b32 	%r18111, %r18108, %r18109, 19;
	mov.b64 	%rd2745, {%r18111, %r18110};
	shf.l.wrap.b32 	%r18112, %r18108, %r18109, 3;
	shf.l.wrap.b32 	%r18113, %r18109, %r18108, 3;
	mov.b64 	%rd2746, {%r18113, %r18112};
	shr.u64 	%rd2747, %rd4330, 6;
	xor.b64  	%rd2748, %rd2745, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2746;
	shr.u64 	%rd2750, %rd4333, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18114,%dummy}, %rd4333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18115}, %rd4333;
	}
	shf.r.wrap.b32 	%r18116, %r18115, %r18114, 1;
	shf.r.wrap.b32 	%r18117, %r18114, %r18115, 1;
	mov.b64 	%rd2751, {%r18117, %r18116};
	xor.b64  	%rd2752, %rd2751, %rd2750;
	shf.r.wrap.b32 	%r18118, %r18115, %r18114, 8;
	shf.r.wrap.b32 	%r18119, %r18114, %r18115, 8;
	mov.b64 	%rd2753, {%r18119, %r18118};
	xor.b64  	%rd2754, %rd2752, %rd2753;
	add.s64 	%rd2755, %rd4314, %rd4332;
	add.s64 	%rd2756, %rd2755, %rd2749;
	add.s64 	%rd4332, %rd2756, %rd2754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18120,%dummy}, %rd4331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18121}, %rd4331;
	}
	shf.r.wrap.b32 	%r18122, %r18121, %r18120, 19;
	shf.r.wrap.b32 	%r18123, %r18120, %r18121, 19;
	mov.b64 	%rd2757, {%r18123, %r18122};
	shf.l.wrap.b32 	%r18124, %r18120, %r18121, 3;
	shf.l.wrap.b32 	%r18125, %r18121, %r18120, 3;
	mov.b64 	%rd2758, {%r18125, %r18124};
	shr.u64 	%rd2759, %rd4331, 6;
	xor.b64  	%rd2760, %rd2757, %rd2759;
	xor.b64  	%rd2761, %rd2760, %rd2758;
	shr.u64 	%rd2762, %rd4334, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18126,%dummy}, %rd4334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18127}, %rd4334;
	}
	shf.r.wrap.b32 	%r18128, %r18127, %r18126, 1;
	shf.r.wrap.b32 	%r18129, %r18126, %r18127, 1;
	mov.b64 	%rd2763, {%r18129, %r18128};
	xor.b64  	%rd2764, %rd2763, %rd2762;
	shf.r.wrap.b32 	%r18130, %r18127, %r18126, 8;
	shf.r.wrap.b32 	%r18131, %r18126, %r18127, 8;
	mov.b64 	%rd2765, {%r18131, %r18130};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	add.s64 	%rd2767, %rd4313, %rd4333;
	add.s64 	%rd2768, %rd2767, %rd2761;
	add.s64 	%rd4333, %rd2768, %rd2766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18132,%dummy}, %rd4332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18133}, %rd4332;
	}
	shf.r.wrap.b32 	%r18134, %r18133, %r18132, 19;
	shf.r.wrap.b32 	%r18135, %r18132, %r18133, 19;
	mov.b64 	%rd2769, {%r18135, %r18134};
	shf.l.wrap.b32 	%r18136, %r18132, %r18133, 3;
	shf.l.wrap.b32 	%r18137, %r18133, %r18132, 3;
	mov.b64 	%rd2770, {%r18137, %r18136};
	shr.u64 	%rd2771, %rd4332, 6;
	xor.b64  	%rd2772, %rd2769, %rd2771;
	xor.b64  	%rd2773, %rd2772, %rd2770;
	shr.u64 	%rd2774, %rd4335, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18138,%dummy}, %rd4335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18139}, %rd4335;
	}
	shf.r.wrap.b32 	%r18140, %r18139, %r18138, 1;
	shf.r.wrap.b32 	%r18141, %r18138, %r18139, 1;
	mov.b64 	%rd2775, {%r18141, %r18140};
	xor.b64  	%rd2776, %rd2775, %rd2774;
	shf.r.wrap.b32 	%r18142, %r18139, %r18138, 8;
	shf.r.wrap.b32 	%r18143, %r18138, %r18139, 8;
	mov.b64 	%rd2777, {%r18143, %r18142};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	add.s64 	%rd2779, %rd4312, %rd4334;
	add.s64 	%rd2780, %rd2779, %rd2773;
	add.s64 	%rd4334, %rd2780, %rd2778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18144,%dummy}, %rd4333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18145}, %rd4333;
	}
	shf.r.wrap.b32 	%r18146, %r18145, %r18144, 19;
	shf.r.wrap.b32 	%r18147, %r18144, %r18145, 19;
	mov.b64 	%rd2781, {%r18147, %r18146};
	shf.l.wrap.b32 	%r18148, %r18144, %r18145, 3;
	shf.l.wrap.b32 	%r18149, %r18145, %r18144, 3;
	mov.b64 	%rd2782, {%r18149, %r18148};
	shr.u64 	%rd2783, %rd4333, 6;
	xor.b64  	%rd2784, %rd2781, %rd2783;
	xor.b64  	%rd2785, %rd2784, %rd2782;
	shr.u64 	%rd2786, %rd4319, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18150,%dummy}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18151}, %rd4319;
	}
	shf.r.wrap.b32 	%r18152, %r18151, %r18150, 1;
	shf.r.wrap.b32 	%r18153, %r18150, %r18151, 1;
	mov.b64 	%rd2787, {%r18153, %r18152};
	xor.b64  	%rd2788, %rd2787, %rd2786;
	shf.r.wrap.b32 	%r18154, %r18151, %r18150, 8;
	shf.r.wrap.b32 	%r18155, %r18150, %r18151, 8;
	mov.b64 	%rd2789, {%r18155, %r18154};
	xor.b64  	%rd2790, %rd2788, %rd2789;
	add.s64 	%rd2791, %rd4328, %rd4335;
	add.s64 	%rd2792, %rd2791, %rd2785;
	add.s64 	%rd4335, %rd2792, %rd2790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18156,%dummy}, %rd4334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18157}, %rd4334;
	}
	shf.r.wrap.b32 	%r18158, %r18157, %r18156, 19;
	shf.r.wrap.b32 	%r18159, %r18156, %r18157, 19;
	mov.b64 	%rd2793, {%r18159, %r18158};
	shf.l.wrap.b32 	%r18160, %r18156, %r18157, 3;
	shf.l.wrap.b32 	%r18161, %r18157, %r18156, 3;
	mov.b64 	%rd2794, {%r18161, %r18160};
	shr.u64 	%rd2795, %rd4334, 6;
	xor.b64  	%rd2796, %rd2793, %rd2795;
	xor.b64  	%rd2797, %rd2796, %rd2794;
	shr.u64 	%rd2798, %rd4318, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18162,%dummy}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18163}, %rd4318;
	}
	shf.r.wrap.b32 	%r18164, %r18163, %r18162, 1;
	shf.r.wrap.b32 	%r18165, %r18162, %r18163, 1;
	mov.b64 	%rd2799, {%r18165, %r18164};
	xor.b64  	%rd2800, %rd2799, %rd2798;
	shf.r.wrap.b32 	%r18166, %r18163, %r18162, 8;
	shf.r.wrap.b32 	%r18167, %r18162, %r18163, 8;
	mov.b64 	%rd2801, {%r18167, %r18166};
	xor.b64  	%rd2802, %rd2800, %rd2801;
	add.s64 	%rd2803, %rd4329, %rd4319;
	add.s64 	%rd2804, %rd2803, %rd2797;
	add.s64 	%rd4319, %rd2804, %rd2802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18168,%dummy}, %rd4335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18169}, %rd4335;
	}
	shf.r.wrap.b32 	%r18170, %r18169, %r18168, 19;
	shf.r.wrap.b32 	%r18171, %r18168, %r18169, 19;
	mov.b64 	%rd2805, {%r18171, %r18170};
	shf.l.wrap.b32 	%r18172, %r18168, %r18169, 3;
	shf.l.wrap.b32 	%r18173, %r18169, %r18168, 3;
	mov.b64 	%rd2806, {%r18173, %r18172};
	shr.u64 	%rd2807, %rd4335, 6;
	xor.b64  	%rd2808, %rd2805, %rd2807;
	xor.b64  	%rd2809, %rd2808, %rd2806;
	shr.u64 	%rd2810, %rd4317, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18174,%dummy}, %rd4317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18175}, %rd4317;
	}
	shf.r.wrap.b32 	%r18176, %r18175, %r18174, 1;
	shf.r.wrap.b32 	%r18177, %r18174, %r18175, 1;
	mov.b64 	%rd2811, {%r18177, %r18176};
	xor.b64  	%rd2812, %rd2811, %rd2810;
	shf.r.wrap.b32 	%r18178, %r18175, %r18174, 8;
	shf.r.wrap.b32 	%r18179, %r18174, %r18175, 8;
	mov.b64 	%rd2813, {%r18179, %r18178};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	add.s64 	%rd2815, %rd4330, %rd4318;
	add.s64 	%rd2816, %rd2815, %rd2809;
	add.s64 	%rd4318, %rd2816, %rd2814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18180,%dummy}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18181}, %rd4319;
	}
	shf.r.wrap.b32 	%r18182, %r18181, %r18180, 19;
	shf.r.wrap.b32 	%r18183, %r18180, %r18181, 19;
	mov.b64 	%rd2817, {%r18183, %r18182};
	shf.l.wrap.b32 	%r18184, %r18180, %r18181, 3;
	shf.l.wrap.b32 	%r18185, %r18181, %r18180, 3;
	mov.b64 	%rd2818, {%r18185, %r18184};
	shr.u64 	%rd2819, %rd4319, 6;
	xor.b64  	%rd2820, %rd2817, %rd2819;
	xor.b64  	%rd2821, %rd2820, %rd2818;
	shr.u64 	%rd2822, %rd4316, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18186,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18187}, %rd4316;
	}
	shf.r.wrap.b32 	%r18188, %r18187, %r18186, 1;
	shf.r.wrap.b32 	%r18189, %r18186, %r18187, 1;
	mov.b64 	%rd2823, {%r18189, %r18188};
	xor.b64  	%rd2824, %rd2823, %rd2822;
	shf.r.wrap.b32 	%r18190, %r18187, %r18186, 8;
	shf.r.wrap.b32 	%r18191, %r18186, %r18187, 8;
	mov.b64 	%rd2825, {%r18191, %r18190};
	xor.b64  	%rd2826, %rd2824, %rd2825;
	add.s64 	%rd2827, %rd4331, %rd4317;
	add.s64 	%rd2828, %rd2827, %rd2821;
	add.s64 	%rd4317, %rd2828, %rd2826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18192,%dummy}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18193}, %rd4318;
	}
	shf.r.wrap.b32 	%r18194, %r18193, %r18192, 19;
	shf.r.wrap.b32 	%r18195, %r18192, %r18193, 19;
	mov.b64 	%rd2829, {%r18195, %r18194};
	shf.l.wrap.b32 	%r18196, %r18192, %r18193, 3;
	shf.l.wrap.b32 	%r18197, %r18193, %r18192, 3;
	mov.b64 	%rd2830, {%r18197, %r18196};
	shr.u64 	%rd2831, %rd4318, 6;
	xor.b64  	%rd2832, %rd2829, %rd2831;
	xor.b64  	%rd2833, %rd2832, %rd2830;
	shr.u64 	%rd2834, %rd4315, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18198,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18199}, %rd4315;
	}
	shf.r.wrap.b32 	%r18200, %r18199, %r18198, 1;
	shf.r.wrap.b32 	%r18201, %r18198, %r18199, 1;
	mov.b64 	%rd2835, {%r18201, %r18200};
	xor.b64  	%rd2836, %rd2835, %rd2834;
	shf.r.wrap.b32 	%r18202, %r18199, %r18198, 8;
	shf.r.wrap.b32 	%r18203, %r18198, %r18199, 8;
	mov.b64 	%rd2837, {%r18203, %r18202};
	xor.b64  	%rd2838, %rd2836, %rd2837;
	add.s64 	%rd2839, %rd4332, %rd4316;
	add.s64 	%rd2840, %rd2839, %rd2833;
	add.s64 	%rd4316, %rd2840, %rd2838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18204,%dummy}, %rd4317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18205}, %rd4317;
	}
	shf.r.wrap.b32 	%r18206, %r18205, %r18204, 19;
	shf.r.wrap.b32 	%r18207, %r18204, %r18205, 19;
	mov.b64 	%rd2841, {%r18207, %r18206};
	shf.l.wrap.b32 	%r18208, %r18204, %r18205, 3;
	shf.l.wrap.b32 	%r18209, %r18205, %r18204, 3;
	mov.b64 	%rd2842, {%r18209, %r18208};
	shr.u64 	%rd2843, %rd4317, 6;
	xor.b64  	%rd2844, %rd2841, %rd2843;
	xor.b64  	%rd2845, %rd2844, %rd2842;
	shr.u64 	%rd2846, %rd4314, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18210,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18211}, %rd4314;
	}
	shf.r.wrap.b32 	%r18212, %r18211, %r18210, 1;
	shf.r.wrap.b32 	%r18213, %r18210, %r18211, 1;
	mov.b64 	%rd2847, {%r18213, %r18212};
	xor.b64  	%rd2848, %rd2847, %rd2846;
	shf.r.wrap.b32 	%r18214, %r18211, %r18210, 8;
	shf.r.wrap.b32 	%r18215, %r18210, %r18211, 8;
	mov.b64 	%rd2849, {%r18215, %r18214};
	xor.b64  	%rd2850, %rd2848, %rd2849;
	add.s64 	%rd2851, %rd4333, %rd4315;
	add.s64 	%rd2852, %rd2851, %rd2845;
	add.s64 	%rd4315, %rd2852, %rd2850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18216,%dummy}, %rd4316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18217}, %rd4316;
	}
	shf.r.wrap.b32 	%r18218, %r18217, %r18216, 19;
	shf.r.wrap.b32 	%r18219, %r18216, %r18217, 19;
	mov.b64 	%rd2853, {%r18219, %r18218};
	shf.l.wrap.b32 	%r18220, %r18216, %r18217, 3;
	shf.l.wrap.b32 	%r18221, %r18217, %r18216, 3;
	mov.b64 	%rd2854, {%r18221, %r18220};
	shr.u64 	%rd2855, %rd4316, 6;
	xor.b64  	%rd2856, %rd2853, %rd2855;
	xor.b64  	%rd2857, %rd2856, %rd2854;
	shr.u64 	%rd2858, %rd4313, 7;
	shf.r.wrap.b32 	%r18222, %r18061, %r18060, 1;
	shf.r.wrap.b32 	%r18223, %r18060, %r18061, 1;
	mov.b64 	%rd2859, {%r18223, %r18222};
	xor.b64  	%rd2860, %rd2859, %rd2858;
	shf.r.wrap.b32 	%r18224, %r18061, %r18060, 8;
	shf.r.wrap.b32 	%r18225, %r18060, %r18061, 8;
	mov.b64 	%rd2861, {%r18225, %r18224};
	xor.b64  	%rd2862, %rd2860, %rd2861;
	add.s64 	%rd2863, %rd4334, %rd4314;
	add.s64 	%rd2864, %rd2863, %rd2857;
	add.s64 	%rd4314, %rd2864, %rd2862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18226,%dummy}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18227}, %rd4315;
	}
	shf.r.wrap.b32 	%r18228, %r18227, %r18226, 19;
	shf.r.wrap.b32 	%r18229, %r18226, %r18227, 19;
	mov.b64 	%rd2865, {%r18229, %r18228};
	shf.l.wrap.b32 	%r18230, %r18226, %r18227, 3;
	shf.l.wrap.b32 	%r18231, %r18227, %r18226, 3;
	mov.b64 	%rd2866, {%r18231, %r18230};
	shr.u64 	%rd2867, %rd4315, 6;
	xor.b64  	%rd2868, %rd2865, %rd2867;
	xor.b64  	%rd2869, %rd2868, %rd2866;
	shr.u64 	%rd2870, %rd4312, 7;
	shf.r.wrap.b32 	%r18232, %r18073, %r18072, 1;
	shf.r.wrap.b32 	%r18233, %r18072, %r18073, 1;
	mov.b64 	%rd2871, {%r18233, %r18232};
	xor.b64  	%rd2872, %rd2871, %rd2870;
	shf.r.wrap.b32 	%r18234, %r18073, %r18072, 8;
	shf.r.wrap.b32 	%r18235, %r18072, %r18073, 8;
	mov.b64 	%rd2873, {%r18235, %r18234};
	xor.b64  	%rd2874, %rd2872, %rd2873;
	add.s64 	%rd2875, %rd4335, %rd4313;
	add.s64 	%rd2876, %rd2875, %rd2869;
	add.s64 	%rd4313, %rd2876, %rd2874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18236,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18237}, %rd4314;
	}
	shf.r.wrap.b32 	%r18238, %r18237, %r18236, 19;
	shf.r.wrap.b32 	%r18239, %r18236, %r18237, 19;
	mov.b64 	%rd2877, {%r18239, %r18238};
	shf.l.wrap.b32 	%r18240, %r18236, %r18237, 3;
	shf.l.wrap.b32 	%r18241, %r18237, %r18236, 3;
	mov.b64 	%rd2878, {%r18241, %r18240};
	shr.u64 	%rd2879, %rd4314, 6;
	xor.b64  	%rd2880, %rd2877, %rd2879;
	xor.b64  	%rd2881, %rd2880, %rd2878;
	shf.r.wrap.b32 	%r18242, %r18085, %r18084, 1;
	shf.r.wrap.b32 	%r18243, %r18084, %r18085, 1;
	mov.b64 	%rd2882, {%r18243, %r18242};
	shf.r.wrap.b32 	%r18244, %r18085, %r18084, 8;
	shf.r.wrap.b32 	%r18245, %r18084, %r18085, 8;
	mov.b64 	%rd2883, {%r18245, %r18244};
	shr.u64 	%rd2884, %rd4328, 7;
	xor.b64  	%rd2885, %rd2882, %rd2884;
	xor.b64  	%rd2886, %rd2885, %rd2883;
	add.s64 	%rd2887, %rd4319, %rd4312;
	add.s64 	%rd2888, %rd2887, %rd2881;
	add.s64 	%rd4312, %rd2888, %rd2886;
	mul.wide.s32 	%rd2889, %r19397, 8;
	mov.u64 	%rd2890, k_sha512;
	add.s64 	%rd2891, %rd2890, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18246,%dummy}, %rd4324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18247}, %rd4324;
	}
	shf.r.wrap.b32 	%r18248, %r18247, %r18246, 18;
	shf.r.wrap.b32 	%r18249, %r18246, %r18247, 18;
	mov.b64 	%rd2892, {%r18249, %r18248};
	shf.r.wrap.b32 	%r18250, %r18247, %r18246, 14;
	shf.r.wrap.b32 	%r18251, %r18246, %r18247, 14;
	mov.b64 	%rd2893, {%r18251, %r18250};
	xor.b64  	%rd2894, %rd2892, %rd2893;
	shf.l.wrap.b32 	%r18252, %r18246, %r18247, 23;
	shf.l.wrap.b32 	%r18253, %r18247, %r18246, 23;
	mov.b64 	%rd2895, {%r18253, %r18252};
	xor.b64  	%rd2896, %rd2894, %rd2895;
	xor.b64  	%rd2897, %rd4325, %rd4326;
	and.b64  	%rd2898, %rd4324, %rd2897;
	xor.b64  	%rd2899, %rd2898, %rd4326;
	add.s64 	%rd2900, %rd2899, %rd4327;
	add.s64 	%rd2901, %rd2900, %rd4328;
	ld.const.u64 	%rd2902, [%rd2891];
	add.s64 	%rd2903, %rd2901, %rd2902;
	add.s64 	%rd2904, %rd2903, %rd2896;
	add.s64 	%rd2905, %rd2904, %rd4323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18254}, %rd4320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18255,%dummy}, %rd4320;
	}
	shf.l.wrap.b32 	%r18256, %r18255, %r18254, 30;
	shf.l.wrap.b32 	%r18257, %r18254, %r18255, 30;
	mov.b64 	%rd2906, {%r18257, %r18256};
	shf.r.wrap.b32 	%r18258, %r18254, %r18255, 28;
	shf.r.wrap.b32 	%r18259, %r18255, %r18254, 28;
	mov.b64 	%rd2907, {%r18259, %r18258};
	xor.b64  	%rd2908, %rd2906, %rd2907;
	shf.l.wrap.b32 	%r18260, %r18255, %r18254, 25;
	shf.l.wrap.b32 	%r18261, %r18254, %r18255, 25;
	mov.b64 	%rd2909, {%r18261, %r18260};
	xor.b64  	%rd2910, %rd2908, %rd2909;
	xor.b64  	%rd2911, %rd4320, %rd4321;
	and.b64  	%rd2912, %rd2911, %rd4322;
	and.b64  	%rd2913, %rd4320, %rd4321;
	or.b64  	%rd2914, %rd2912, %rd2913;
	add.s64 	%rd2915, %rd2904, %rd2914;
	add.s64 	%rd2916, %rd2915, %rd2910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18262,%dummy}, %rd2905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18263}, %rd2905;
	}
	shf.r.wrap.b32 	%r18264, %r18263, %r18262, 14;
	shf.r.wrap.b32 	%r18265, %r18262, %r18263, 14;
	mov.b64 	%rd2917, {%r18265, %r18264};
	shf.r.wrap.b32 	%r18266, %r18263, %r18262, 18;
	shf.r.wrap.b32 	%r18267, %r18262, %r18263, 18;
	mov.b64 	%rd2918, {%r18267, %r18266};
	xor.b64  	%rd2919, %rd2918, %rd2917;
	shf.l.wrap.b32 	%r18268, %r18262, %r18263, 23;
	shf.l.wrap.b32 	%r18269, %r18263, %r18262, 23;
	mov.b64 	%rd2920, {%r18269, %r18268};
	xor.b64  	%rd2921, %rd2919, %rd2920;
	xor.b64  	%rd2922, %rd4324, %rd4325;
	and.b64  	%rd2923, %rd2905, %rd2922;
	xor.b64  	%rd2924, %rd2923, %rd4325;
	add.s64 	%rd2925, %rd4329, %rd4326;
	ld.const.u64 	%rd2926, [%rd2891+8];
	add.s64 	%rd2927, %rd2925, %rd2926;
	add.s64 	%rd2928, %rd2927, %rd2924;
	add.s64 	%rd2929, %rd2928, %rd2921;
	add.s64 	%rd2930, %rd2929, %rd4322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18270,%dummy}, %rd2916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18271}, %rd2916;
	}
	shf.r.wrap.b32 	%r18272, %r18271, %r18270, 28;
	shf.r.wrap.b32 	%r18273, %r18270, %r18271, 28;
	mov.b64 	%rd2931, {%r18273, %r18272};
	shf.l.wrap.b32 	%r18274, %r18270, %r18271, 30;
	shf.l.wrap.b32 	%r18275, %r18271, %r18270, 30;
	mov.b64 	%rd2932, {%r18275, %r18274};
	xor.b64  	%rd2933, %rd2932, %rd2931;
	shf.l.wrap.b32 	%r18276, %r18270, %r18271, 25;
	shf.l.wrap.b32 	%r18277, %r18271, %r18270, 25;
	mov.b64 	%rd2934, {%r18277, %r18276};
	xor.b64  	%rd2935, %rd2933, %rd2934;
	and.b64  	%rd2936, %rd2916, %rd4320;
	xor.b64  	%rd2937, %rd2916, %rd4320;
	and.b64  	%rd2938, %rd2937, %rd4321;
	or.b64  	%rd2939, %rd2938, %rd2936;
	add.s64 	%rd2940, %rd2929, %rd2939;
	add.s64 	%rd2941, %rd2940, %rd2935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18278,%dummy}, %rd2930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18279}, %rd2930;
	}
	shf.r.wrap.b32 	%r18280, %r18279, %r18278, 14;
	shf.r.wrap.b32 	%r18281, %r18278, %r18279, 14;
	mov.b64 	%rd2942, {%r18281, %r18280};
	shf.r.wrap.b32 	%r18282, %r18279, %r18278, 18;
	shf.r.wrap.b32 	%r18283, %r18278, %r18279, 18;
	mov.b64 	%rd2943, {%r18283, %r18282};
	xor.b64  	%rd2944, %rd2943, %rd2942;
	shf.l.wrap.b32 	%r18284, %r18278, %r18279, 23;
	shf.l.wrap.b32 	%r18285, %r18279, %r18278, 23;
	mov.b64 	%rd2945, {%r18285, %r18284};
	xor.b64  	%rd2946, %rd2944, %rd2945;
	xor.b64  	%rd2947, %rd2905, %rd4324;
	and.b64  	%rd2948, %rd2930, %rd2947;
	xor.b64  	%rd2949, %rd2948, %rd4324;
	add.s64 	%rd2950, %rd4330, %rd4325;
	ld.const.u64 	%rd2951, [%rd2891+16];
	add.s64 	%rd2952, %rd2950, %rd2951;
	add.s64 	%rd2953, %rd2952, %rd2949;
	add.s64 	%rd2954, %rd2953, %rd2946;
	add.s64 	%rd2955, %rd2954, %rd4321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18286,%dummy}, %rd2941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18287}, %rd2941;
	}
	shf.r.wrap.b32 	%r18288, %r18287, %r18286, 28;
	shf.r.wrap.b32 	%r18289, %r18286, %r18287, 28;
	mov.b64 	%rd2956, {%r18289, %r18288};
	shf.l.wrap.b32 	%r18290, %r18286, %r18287, 30;
	shf.l.wrap.b32 	%r18291, %r18287, %r18286, 30;
	mov.b64 	%rd2957, {%r18291, %r18290};
	xor.b64  	%rd2958, %rd2957, %rd2956;
	shf.l.wrap.b32 	%r18292, %r18286, %r18287, 25;
	shf.l.wrap.b32 	%r18293, %r18287, %r18286, 25;
	mov.b64 	%rd2959, {%r18293, %r18292};
	xor.b64  	%rd2960, %rd2958, %rd2959;
	and.b64  	%rd2961, %rd2941, %rd2916;
	xor.b64  	%rd2962, %rd2941, %rd2916;
	and.b64  	%rd2963, %rd2962, %rd4320;
	or.b64  	%rd2964, %rd2963, %rd2961;
	add.s64 	%rd2965, %rd2954, %rd2964;
	add.s64 	%rd2966, %rd2965, %rd2960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18294,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18295}, %rd2955;
	}
	shf.r.wrap.b32 	%r18296, %r18295, %r18294, 14;
	shf.r.wrap.b32 	%r18297, %r18294, %r18295, 14;
	mov.b64 	%rd2967, {%r18297, %r18296};
	shf.r.wrap.b32 	%r18298, %r18295, %r18294, 18;
	shf.r.wrap.b32 	%r18299, %r18294, %r18295, 18;
	mov.b64 	%rd2968, {%r18299, %r18298};
	xor.b64  	%rd2969, %rd2968, %rd2967;
	shf.l.wrap.b32 	%r18300, %r18294, %r18295, 23;
	shf.l.wrap.b32 	%r18301, %r18295, %r18294, 23;
	mov.b64 	%rd2970, {%r18301, %r18300};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	xor.b64  	%rd2972, %rd2930, %rd2905;
	and.b64  	%rd2973, %rd2955, %rd2972;
	xor.b64  	%rd2974, %rd2973, %rd2905;
	add.s64 	%rd2975, %rd4331, %rd4324;
	ld.const.u64 	%rd2976, [%rd2891+24];
	add.s64 	%rd2977, %rd2975, %rd2976;
	add.s64 	%rd2978, %rd2977, %rd2974;
	add.s64 	%rd2979, %rd2978, %rd2971;
	add.s64 	%rd2980, %rd2979, %rd4320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18302,%dummy}, %rd2966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18303}, %rd2966;
	}
	shf.r.wrap.b32 	%r18304, %r18303, %r18302, 28;
	shf.r.wrap.b32 	%r18305, %r18302, %r18303, 28;
	mov.b64 	%rd2981, {%r18305, %r18304};
	shf.l.wrap.b32 	%r18306, %r18302, %r18303, 30;
	shf.l.wrap.b32 	%r18307, %r18303, %r18302, 30;
	mov.b64 	%rd2982, {%r18307, %r18306};
	xor.b64  	%rd2983, %rd2982, %rd2981;
	shf.l.wrap.b32 	%r18308, %r18302, %r18303, 25;
	shf.l.wrap.b32 	%r18309, %r18303, %r18302, 25;
	mov.b64 	%rd2984, {%r18309, %r18308};
	xor.b64  	%rd2985, %rd2983, %rd2984;
	and.b64  	%rd2986, %rd2966, %rd2941;
	xor.b64  	%rd2987, %rd2966, %rd2941;
	and.b64  	%rd2988, %rd2987, %rd2916;
	or.b64  	%rd2989, %rd2988, %rd2986;
	add.s64 	%rd2990, %rd2979, %rd2989;
	add.s64 	%rd2991, %rd2990, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18310,%dummy}, %rd2980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18311}, %rd2980;
	}
	shf.r.wrap.b32 	%r18312, %r18311, %r18310, 14;
	shf.r.wrap.b32 	%r18313, %r18310, %r18311, 14;
	mov.b64 	%rd2992, {%r18313, %r18312};
	shf.r.wrap.b32 	%r18314, %r18311, %r18310, 18;
	shf.r.wrap.b32 	%r18315, %r18310, %r18311, 18;
	mov.b64 	%rd2993, {%r18315, %r18314};
	xor.b64  	%rd2994, %rd2993, %rd2992;
	shf.l.wrap.b32 	%r18316, %r18310, %r18311, 23;
	shf.l.wrap.b32 	%r18317, %r18311, %r18310, 23;
	mov.b64 	%rd2995, {%r18317, %r18316};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	xor.b64  	%rd2997, %rd2955, %rd2930;
	and.b64  	%rd2998, %rd2980, %rd2997;
	xor.b64  	%rd2999, %rd2998, %rd2930;
	add.s64 	%rd3000, %rd2905, %rd4332;
	ld.const.u64 	%rd3001, [%rd2891+32];
	add.s64 	%rd3002, %rd3000, %rd3001;
	add.s64 	%rd3003, %rd3002, %rd2999;
	add.s64 	%rd3004, %rd3003, %rd2996;
	add.s64 	%rd3005, %rd3004, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18318,%dummy}, %rd2991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18319}, %rd2991;
	}
	shf.r.wrap.b32 	%r18320, %r18319, %r18318, 28;
	shf.r.wrap.b32 	%r18321, %r18318, %r18319, 28;
	mov.b64 	%rd3006, {%r18321, %r18320};
	shf.l.wrap.b32 	%r18322, %r18318, %r18319, 30;
	shf.l.wrap.b32 	%r18323, %r18319, %r18318, 30;
	mov.b64 	%rd3007, {%r18323, %r18322};
	xor.b64  	%rd3008, %rd3007, %rd3006;
	shf.l.wrap.b32 	%r18324, %r18318, %r18319, 25;
	shf.l.wrap.b32 	%r18325, %r18319, %r18318, 25;
	mov.b64 	%rd3009, {%r18325, %r18324};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	and.b64  	%rd3011, %rd2991, %rd2966;
	xor.b64  	%rd3012, %rd2991, %rd2966;
	and.b64  	%rd3013, %rd3012, %rd2941;
	or.b64  	%rd3014, %rd3013, %rd3011;
	add.s64 	%rd3015, %rd3004, %rd3014;
	add.s64 	%rd3016, %rd3015, %rd3010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18326,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18327}, %rd3005;
	}
	shf.r.wrap.b32 	%r18328, %r18327, %r18326, 14;
	shf.r.wrap.b32 	%r18329, %r18326, %r18327, 14;
	mov.b64 	%rd3017, {%r18329, %r18328};
	shf.r.wrap.b32 	%r18330, %r18327, %r18326, 18;
	shf.r.wrap.b32 	%r18331, %r18326, %r18327, 18;
	mov.b64 	%rd3018, {%r18331, %r18330};
	xor.b64  	%rd3019, %rd3018, %rd3017;
	shf.l.wrap.b32 	%r18332, %r18326, %r18327, 23;
	shf.l.wrap.b32 	%r18333, %r18327, %r18326, 23;
	mov.b64 	%rd3020, {%r18333, %r18332};
	xor.b64  	%rd3021, %rd3019, %rd3020;
	xor.b64  	%rd3022, %rd2980, %rd2955;
	and.b64  	%rd3023, %rd3005, %rd3022;
	xor.b64  	%rd3024, %rd3023, %rd2955;
	add.s64 	%rd3025, %rd2930, %rd4333;
	ld.const.u64 	%rd3026, [%rd2891+40];
	add.s64 	%rd3027, %rd3025, %rd3026;
	add.s64 	%rd3028, %rd3027, %rd3024;
	add.s64 	%rd3029, %rd3028, %rd3021;
	add.s64 	%rd3030, %rd3029, %rd2941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18334,%dummy}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18335}, %rd3016;
	}
	shf.r.wrap.b32 	%r18336, %r18335, %r18334, 28;
	shf.r.wrap.b32 	%r18337, %r18334, %r18335, 28;
	mov.b64 	%rd3031, {%r18337, %r18336};
	shf.l.wrap.b32 	%r18338, %r18334, %r18335, 30;
	shf.l.wrap.b32 	%r18339, %r18335, %r18334, 30;
	mov.b64 	%rd3032, {%r18339, %r18338};
	xor.b64  	%rd3033, %rd3032, %rd3031;
	shf.l.wrap.b32 	%r18340, %r18334, %r18335, 25;
	shf.l.wrap.b32 	%r18341, %r18335, %r18334, 25;
	mov.b64 	%rd3034, {%r18341, %r18340};
	xor.b64  	%rd3035, %rd3033, %rd3034;
	and.b64  	%rd3036, %rd3016, %rd2991;
	xor.b64  	%rd3037, %rd3016, %rd2991;
	and.b64  	%rd3038, %rd3037, %rd2966;
	or.b64  	%rd3039, %rd3038, %rd3036;
	add.s64 	%rd3040, %rd3029, %rd3039;
	add.s64 	%rd3041, %rd3040, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18342,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18343}, %rd3030;
	}
	shf.r.wrap.b32 	%r18344, %r18343, %r18342, 14;
	shf.r.wrap.b32 	%r18345, %r18342, %r18343, 14;
	mov.b64 	%rd3042, {%r18345, %r18344};
	shf.r.wrap.b32 	%r18346, %r18343, %r18342, 18;
	shf.r.wrap.b32 	%r18347, %r18342, %r18343, 18;
	mov.b64 	%rd3043, {%r18347, %r18346};
	xor.b64  	%rd3044, %rd3043, %rd3042;
	shf.l.wrap.b32 	%r18348, %r18342, %r18343, 23;
	shf.l.wrap.b32 	%r18349, %r18343, %r18342, 23;
	mov.b64 	%rd3045, {%r18349, %r18348};
	xor.b64  	%rd3046, %rd3044, %rd3045;
	xor.b64  	%rd3047, %rd3005, %rd2980;
	and.b64  	%rd3048, %rd3030, %rd3047;
	xor.b64  	%rd3049, %rd3048, %rd2980;
	add.s64 	%rd3050, %rd2955, %rd4334;
	ld.const.u64 	%rd3051, [%rd2891+48];
	add.s64 	%rd3052, %rd3050, %rd3051;
	add.s64 	%rd3053, %rd3052, %rd3049;
	add.s64 	%rd3054, %rd3053, %rd3046;
	add.s64 	%rd3055, %rd3054, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18350,%dummy}, %rd3041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18351}, %rd3041;
	}
	shf.r.wrap.b32 	%r18352, %r18351, %r18350, 28;
	shf.r.wrap.b32 	%r18353, %r18350, %r18351, 28;
	mov.b64 	%rd3056, {%r18353, %r18352};
	shf.l.wrap.b32 	%r18354, %r18350, %r18351, 30;
	shf.l.wrap.b32 	%r18355, %r18351, %r18350, 30;
	mov.b64 	%rd3057, {%r18355, %r18354};
	xor.b64  	%rd3058, %rd3057, %rd3056;
	shf.l.wrap.b32 	%r18356, %r18350, %r18351, 25;
	shf.l.wrap.b32 	%r18357, %r18351, %r18350, 25;
	mov.b64 	%rd3059, {%r18357, %r18356};
	xor.b64  	%rd3060, %rd3058, %rd3059;
	and.b64  	%rd3061, %rd3041, %rd3016;
	xor.b64  	%rd3062, %rd3041, %rd3016;
	and.b64  	%rd3063, %rd3062, %rd2991;
	or.b64  	%rd3064, %rd3063, %rd3061;
	add.s64 	%rd3065, %rd3054, %rd3064;
	add.s64 	%rd3066, %rd3065, %rd3060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18358,%dummy}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18359}, %rd3055;
	}
	shf.r.wrap.b32 	%r18360, %r18359, %r18358, 14;
	shf.r.wrap.b32 	%r18361, %r18358, %r18359, 14;
	mov.b64 	%rd3067, {%r18361, %r18360};
	shf.r.wrap.b32 	%r18362, %r18359, %r18358, 18;
	shf.r.wrap.b32 	%r18363, %r18358, %r18359, 18;
	mov.b64 	%rd3068, {%r18363, %r18362};
	xor.b64  	%rd3069, %rd3068, %rd3067;
	shf.l.wrap.b32 	%r18364, %r18358, %r18359, 23;
	shf.l.wrap.b32 	%r18365, %r18359, %r18358, 23;
	mov.b64 	%rd3070, {%r18365, %r18364};
	xor.b64  	%rd3071, %rd3069, %rd3070;
	xor.b64  	%rd3072, %rd3030, %rd3005;
	and.b64  	%rd3073, %rd3055, %rd3072;
	xor.b64  	%rd3074, %rd3073, %rd3005;
	add.s64 	%rd3075, %rd2980, %rd4335;
	ld.const.u64 	%rd3076, [%rd2891+56];
	add.s64 	%rd3077, %rd3075, %rd3076;
	add.s64 	%rd3078, %rd3077, %rd3074;
	add.s64 	%rd3079, %rd3078, %rd3071;
	add.s64 	%rd3080, %rd3079, %rd2991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18366,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18367}, %rd3066;
	}
	shf.r.wrap.b32 	%r18368, %r18367, %r18366, 28;
	shf.r.wrap.b32 	%r18369, %r18366, %r18367, 28;
	mov.b64 	%rd3081, {%r18369, %r18368};
	shf.l.wrap.b32 	%r18370, %r18366, %r18367, 30;
	shf.l.wrap.b32 	%r18371, %r18367, %r18366, 30;
	mov.b64 	%rd3082, {%r18371, %r18370};
	xor.b64  	%rd3083, %rd3082, %rd3081;
	shf.l.wrap.b32 	%r18372, %r18366, %r18367, 25;
	shf.l.wrap.b32 	%r18373, %r18367, %r18366, 25;
	mov.b64 	%rd3084, {%r18373, %r18372};
	xor.b64  	%rd3085, %rd3083, %rd3084;
	and.b64  	%rd3086, %rd3066, %rd3041;
	xor.b64  	%rd3087, %rd3066, %rd3041;
	and.b64  	%rd3088, %rd3087, %rd3016;
	or.b64  	%rd3089, %rd3088, %rd3086;
	add.s64 	%rd3090, %rd3079, %rd3089;
	add.s64 	%rd3091, %rd3090, %rd3085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18374,%dummy}, %rd3080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18375}, %rd3080;
	}
	shf.r.wrap.b32 	%r18376, %r18375, %r18374, 14;
	shf.r.wrap.b32 	%r18377, %r18374, %r18375, 14;
	mov.b64 	%rd3092, {%r18377, %r18376};
	shf.r.wrap.b32 	%r18378, %r18375, %r18374, 18;
	shf.r.wrap.b32 	%r18379, %r18374, %r18375, 18;
	mov.b64 	%rd3093, {%r18379, %r18378};
	xor.b64  	%rd3094, %rd3093, %rd3092;
	shf.l.wrap.b32 	%r18380, %r18374, %r18375, 23;
	shf.l.wrap.b32 	%r18381, %r18375, %r18374, 23;
	mov.b64 	%rd3095, {%r18381, %r18380};
	xor.b64  	%rd3096, %rd3094, %rd3095;
	xor.b64  	%rd3097, %rd3055, %rd3030;
	and.b64  	%rd3098, %rd3080, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3030;
	add.s64 	%rd3100, %rd3005, %rd4319;
	ld.const.u64 	%rd3101, [%rd2891+64];
	add.s64 	%rd3102, %rd3100, %rd3101;
	add.s64 	%rd3103, %rd3102, %rd3099;
	add.s64 	%rd3104, %rd3103, %rd3096;
	add.s64 	%rd3105, %rd3104, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18382,%dummy}, %rd3091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18383}, %rd3091;
	}
	shf.r.wrap.b32 	%r18384, %r18383, %r18382, 28;
	shf.r.wrap.b32 	%r18385, %r18382, %r18383, 28;
	mov.b64 	%rd3106, {%r18385, %r18384};
	shf.l.wrap.b32 	%r18386, %r18382, %r18383, 30;
	shf.l.wrap.b32 	%r18387, %r18383, %r18382, 30;
	mov.b64 	%rd3107, {%r18387, %r18386};
	xor.b64  	%rd3108, %rd3107, %rd3106;
	shf.l.wrap.b32 	%r18388, %r18382, %r18383, 25;
	shf.l.wrap.b32 	%r18389, %r18383, %r18382, 25;
	mov.b64 	%rd3109, {%r18389, %r18388};
	xor.b64  	%rd3110, %rd3108, %rd3109;
	and.b64  	%rd3111, %rd3091, %rd3066;
	xor.b64  	%rd3112, %rd3091, %rd3066;
	and.b64  	%rd3113, %rd3112, %rd3041;
	or.b64  	%rd3114, %rd3113, %rd3111;
	add.s64 	%rd3115, %rd3104, %rd3114;
	add.s64 	%rd3116, %rd3115, %rd3110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18390,%dummy}, %rd3105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18391}, %rd3105;
	}
	shf.r.wrap.b32 	%r18392, %r18391, %r18390, 14;
	shf.r.wrap.b32 	%r18393, %r18390, %r18391, 14;
	mov.b64 	%rd3117, {%r18393, %r18392};
	shf.r.wrap.b32 	%r18394, %r18391, %r18390, 18;
	shf.r.wrap.b32 	%r18395, %r18390, %r18391, 18;
	mov.b64 	%rd3118, {%r18395, %r18394};
	xor.b64  	%rd3119, %rd3118, %rd3117;
	shf.l.wrap.b32 	%r18396, %r18390, %r18391, 23;
	shf.l.wrap.b32 	%r18397, %r18391, %r18390, 23;
	mov.b64 	%rd3120, {%r18397, %r18396};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	xor.b64  	%rd3122, %rd3080, %rd3055;
	and.b64  	%rd3123, %rd3105, %rd3122;
	xor.b64  	%rd3124, %rd3123, %rd3055;
	add.s64 	%rd3125, %rd3030, %rd4318;
	ld.const.u64 	%rd3126, [%rd2891+72];
	add.s64 	%rd3127, %rd3125, %rd3126;
	add.s64 	%rd3128, %rd3127, %rd3124;
	add.s64 	%rd3129, %rd3128, %rd3121;
	add.s64 	%rd3130, %rd3129, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18398,%dummy}, %rd3116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18399}, %rd3116;
	}
	shf.r.wrap.b32 	%r18400, %r18399, %r18398, 28;
	shf.r.wrap.b32 	%r18401, %r18398, %r18399, 28;
	mov.b64 	%rd3131, {%r18401, %r18400};
	shf.l.wrap.b32 	%r18402, %r18398, %r18399, 30;
	shf.l.wrap.b32 	%r18403, %r18399, %r18398, 30;
	mov.b64 	%rd3132, {%r18403, %r18402};
	xor.b64  	%rd3133, %rd3132, %rd3131;
	shf.l.wrap.b32 	%r18404, %r18398, %r18399, 25;
	shf.l.wrap.b32 	%r18405, %r18399, %r18398, 25;
	mov.b64 	%rd3134, {%r18405, %r18404};
	xor.b64  	%rd3135, %rd3133, %rd3134;
	and.b64  	%rd3136, %rd3116, %rd3091;
	xor.b64  	%rd3137, %rd3116, %rd3091;
	and.b64  	%rd3138, %rd3137, %rd3066;
	or.b64  	%rd3139, %rd3138, %rd3136;
	add.s64 	%rd3140, %rd3129, %rd3139;
	add.s64 	%rd3141, %rd3140, %rd3135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18406,%dummy}, %rd3130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18407}, %rd3130;
	}
	shf.r.wrap.b32 	%r18408, %r18407, %r18406, 14;
	shf.r.wrap.b32 	%r18409, %r18406, %r18407, 14;
	mov.b64 	%rd3142, {%r18409, %r18408};
	shf.r.wrap.b32 	%r18410, %r18407, %r18406, 18;
	shf.r.wrap.b32 	%r18411, %r18406, %r18407, 18;
	mov.b64 	%rd3143, {%r18411, %r18410};
	xor.b64  	%rd3144, %rd3143, %rd3142;
	shf.l.wrap.b32 	%r18412, %r18406, %r18407, 23;
	shf.l.wrap.b32 	%r18413, %r18407, %r18406, 23;
	mov.b64 	%rd3145, {%r18413, %r18412};
	xor.b64  	%rd3146, %rd3144, %rd3145;
	xor.b64  	%rd3147, %rd3105, %rd3080;
	and.b64  	%rd3148, %rd3130, %rd3147;
	xor.b64  	%rd3149, %rd3148, %rd3080;
	add.s64 	%rd3150, %rd3055, %rd4317;
	ld.const.u64 	%rd3151, [%rd2891+80];
	add.s64 	%rd3152, %rd3150, %rd3151;
	add.s64 	%rd3153, %rd3152, %rd3149;
	add.s64 	%rd3154, %rd3153, %rd3146;
	add.s64 	%rd3155, %rd3154, %rd3066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18414,%dummy}, %rd3141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18415}, %rd3141;
	}
	shf.r.wrap.b32 	%r18416, %r18415, %r18414, 28;
	shf.r.wrap.b32 	%r18417, %r18414, %r18415, 28;
	mov.b64 	%rd3156, {%r18417, %r18416};
	shf.l.wrap.b32 	%r18418, %r18414, %r18415, 30;
	shf.l.wrap.b32 	%r18419, %r18415, %r18414, 30;
	mov.b64 	%rd3157, {%r18419, %r18418};
	xor.b64  	%rd3158, %rd3157, %rd3156;
	shf.l.wrap.b32 	%r18420, %r18414, %r18415, 25;
	shf.l.wrap.b32 	%r18421, %r18415, %r18414, 25;
	mov.b64 	%rd3159, {%r18421, %r18420};
	xor.b64  	%rd3160, %rd3158, %rd3159;
	and.b64  	%rd3161, %rd3141, %rd3116;
	xor.b64  	%rd3162, %rd3141, %rd3116;
	and.b64  	%rd3163, %rd3162, %rd3091;
	or.b64  	%rd3164, %rd3163, %rd3161;
	add.s64 	%rd3165, %rd3154, %rd3164;
	add.s64 	%rd3166, %rd3165, %rd3160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18422,%dummy}, %rd3155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18423}, %rd3155;
	}
	shf.r.wrap.b32 	%r18424, %r18423, %r18422, 14;
	shf.r.wrap.b32 	%r18425, %r18422, %r18423, 14;
	mov.b64 	%rd3167, {%r18425, %r18424};
	shf.r.wrap.b32 	%r18426, %r18423, %r18422, 18;
	shf.r.wrap.b32 	%r18427, %r18422, %r18423, 18;
	mov.b64 	%rd3168, {%r18427, %r18426};
	xor.b64  	%rd3169, %rd3168, %rd3167;
	shf.l.wrap.b32 	%r18428, %r18422, %r18423, 23;
	shf.l.wrap.b32 	%r18429, %r18423, %r18422, 23;
	mov.b64 	%rd3170, {%r18429, %r18428};
	xor.b64  	%rd3171, %rd3169, %rd3170;
	xor.b64  	%rd3172, %rd3130, %rd3105;
	and.b64  	%rd3173, %rd3155, %rd3172;
	xor.b64  	%rd3174, %rd3173, %rd3105;
	add.s64 	%rd3175, %rd3080, %rd4316;
	ld.const.u64 	%rd3176, [%rd2891+88];
	add.s64 	%rd3177, %rd3175, %rd3176;
	add.s64 	%rd3178, %rd3177, %rd3174;
	add.s64 	%rd3179, %rd3178, %rd3171;
	add.s64 	%rd3180, %rd3179, %rd3091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18430,%dummy}, %rd3166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18431}, %rd3166;
	}
	shf.r.wrap.b32 	%r18432, %r18431, %r18430, 28;
	shf.r.wrap.b32 	%r18433, %r18430, %r18431, 28;
	mov.b64 	%rd3181, {%r18433, %r18432};
	shf.l.wrap.b32 	%r18434, %r18430, %r18431, 30;
	shf.l.wrap.b32 	%r18435, %r18431, %r18430, 30;
	mov.b64 	%rd3182, {%r18435, %r18434};
	xor.b64  	%rd3183, %rd3182, %rd3181;
	shf.l.wrap.b32 	%r18436, %r18430, %r18431, 25;
	shf.l.wrap.b32 	%r18437, %r18431, %r18430, 25;
	mov.b64 	%rd3184, {%r18437, %r18436};
	xor.b64  	%rd3185, %rd3183, %rd3184;
	and.b64  	%rd3186, %rd3166, %rd3141;
	xor.b64  	%rd3187, %rd3166, %rd3141;
	and.b64  	%rd3188, %rd3187, %rd3116;
	or.b64  	%rd3189, %rd3188, %rd3186;
	add.s64 	%rd3190, %rd3179, %rd3189;
	add.s64 	%rd3191, %rd3190, %rd3185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18438,%dummy}, %rd3180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18439}, %rd3180;
	}
	shf.r.wrap.b32 	%r18440, %r18439, %r18438, 14;
	shf.r.wrap.b32 	%r18441, %r18438, %r18439, 14;
	mov.b64 	%rd3192, {%r18441, %r18440};
	shf.r.wrap.b32 	%r18442, %r18439, %r18438, 18;
	shf.r.wrap.b32 	%r18443, %r18438, %r18439, 18;
	mov.b64 	%rd3193, {%r18443, %r18442};
	xor.b64  	%rd3194, %rd3193, %rd3192;
	shf.l.wrap.b32 	%r18444, %r18438, %r18439, 23;
	shf.l.wrap.b32 	%r18445, %r18439, %r18438, 23;
	mov.b64 	%rd3195, {%r18445, %r18444};
	xor.b64  	%rd3196, %rd3194, %rd3195;
	xor.b64  	%rd3197, %rd3155, %rd3130;
	and.b64  	%rd3198, %rd3180, %rd3197;
	xor.b64  	%rd3199, %rd3198, %rd3130;
	add.s64 	%rd3200, %rd3105, %rd4315;
	ld.const.u64 	%rd3201, [%rd2891+96];
	add.s64 	%rd3202, %rd3200, %rd3201;
	add.s64 	%rd3203, %rd3202, %rd3199;
	add.s64 	%rd3204, %rd3203, %rd3196;
	add.s64 	%rd4327, %rd3204, %rd3116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18446,%dummy}, %rd3191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18447}, %rd3191;
	}
	shf.r.wrap.b32 	%r18448, %r18447, %r18446, 28;
	shf.r.wrap.b32 	%r18449, %r18446, %r18447, 28;
	mov.b64 	%rd3205, {%r18449, %r18448};
	shf.l.wrap.b32 	%r18450, %r18446, %r18447, 30;
	shf.l.wrap.b32 	%r18451, %r18447, %r18446, 30;
	mov.b64 	%rd3206, {%r18451, %r18450};
	xor.b64  	%rd3207, %rd3206, %rd3205;
	shf.l.wrap.b32 	%r18452, %r18446, %r18447, 25;
	shf.l.wrap.b32 	%r18453, %r18447, %r18446, 25;
	mov.b64 	%rd3208, {%r18453, %r18452};
	xor.b64  	%rd3209, %rd3207, %rd3208;
	and.b64  	%rd3210, %rd3191, %rd3166;
	xor.b64  	%rd3211, %rd3191, %rd3166;
	and.b64  	%rd3212, %rd3211, %rd3141;
	or.b64  	%rd3213, %rd3212, %rd3210;
	add.s64 	%rd3214, %rd3204, %rd3213;
	add.s64 	%rd4323, %rd3214, %rd3209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18454,%dummy}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18455}, %rd4327;
	}
	shf.r.wrap.b32 	%r18456, %r18455, %r18454, 14;
	shf.r.wrap.b32 	%r18457, %r18454, %r18455, 14;
	mov.b64 	%rd3215, {%r18457, %r18456};
	shf.r.wrap.b32 	%r18458, %r18455, %r18454, 18;
	shf.r.wrap.b32 	%r18459, %r18454, %r18455, 18;
	mov.b64 	%rd3216, {%r18459, %r18458};
	xor.b64  	%rd3217, %rd3216, %rd3215;
	shf.l.wrap.b32 	%r18460, %r18454, %r18455, 23;
	shf.l.wrap.b32 	%r18461, %r18455, %r18454, 23;
	mov.b64 	%rd3218, {%r18461, %r18460};
	xor.b64  	%rd3219, %rd3217, %rd3218;
	xor.b64  	%rd3220, %rd3180, %rd3155;
	and.b64  	%rd3221, %rd4327, %rd3220;
	xor.b64  	%rd3222, %rd3221, %rd3155;
	add.s64 	%rd3223, %rd3130, %rd4314;
	ld.const.u64 	%rd3224, [%rd2891+104];
	add.s64 	%rd3225, %rd3223, %rd3224;
	add.s64 	%rd3226, %rd3225, %rd3222;
	add.s64 	%rd3227, %rd3226, %rd3219;
	add.s64 	%rd4326, %rd3227, %rd3141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18462,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18463}, %rd4323;
	}
	shf.r.wrap.b32 	%r18464, %r18463, %r18462, 28;
	shf.r.wrap.b32 	%r18465, %r18462, %r18463, 28;
	mov.b64 	%rd3228, {%r18465, %r18464};
	shf.l.wrap.b32 	%r18466, %r18462, %r18463, 30;
	shf.l.wrap.b32 	%r18467, %r18463, %r18462, 30;
	mov.b64 	%rd3229, {%r18467, %r18466};
	xor.b64  	%rd3230, %rd3229, %rd3228;
	shf.l.wrap.b32 	%r18468, %r18462, %r18463, 25;
	shf.l.wrap.b32 	%r18469, %r18463, %r18462, 25;
	mov.b64 	%rd3231, {%r18469, %r18468};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	and.b64  	%rd3233, %rd4323, %rd3191;
	xor.b64  	%rd3234, %rd4323, %rd3191;
	and.b64  	%rd3235, %rd3234, %rd3166;
	or.b64  	%rd3236, %rd3235, %rd3233;
	add.s64 	%rd3237, %rd3227, %rd3236;
	add.s64 	%rd4322, %rd3237, %rd3232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18470,%dummy}, %rd4326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18471}, %rd4326;
	}
	shf.r.wrap.b32 	%r18472, %r18471, %r18470, 14;
	shf.r.wrap.b32 	%r18473, %r18470, %r18471, 14;
	mov.b64 	%rd3238, {%r18473, %r18472};
	shf.r.wrap.b32 	%r18474, %r18471, %r18470, 18;
	shf.r.wrap.b32 	%r18475, %r18470, %r18471, 18;
	mov.b64 	%rd3239, {%r18475, %r18474};
	xor.b64  	%rd3240, %rd3239, %rd3238;
	shf.l.wrap.b32 	%r18476, %r18470, %r18471, 23;
	shf.l.wrap.b32 	%r18477, %r18471, %r18470, 23;
	mov.b64 	%rd3241, {%r18477, %r18476};
	xor.b64  	%rd3242, %rd3240, %rd3241;
	xor.b64  	%rd3243, %rd4327, %rd3180;
	and.b64  	%rd3244, %rd4326, %rd3243;
	xor.b64  	%rd3245, %rd3244, %rd3180;
	add.s64 	%rd3246, %rd3155, %rd4313;
	ld.const.u64 	%rd3247, [%rd2891+112];
	add.s64 	%rd3248, %rd3246, %rd3247;
	add.s64 	%rd3249, %rd3248, %rd3245;
	add.s64 	%rd3250, %rd3249, %rd3242;
	add.s64 	%rd4325, %rd3250, %rd3166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18478,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18479}, %rd4322;
	}
	shf.r.wrap.b32 	%r18480, %r18479, %r18478, 28;
	shf.r.wrap.b32 	%r18481, %r18478, %r18479, 28;
	mov.b64 	%rd3251, {%r18481, %r18480};
	shf.l.wrap.b32 	%r18482, %r18478, %r18479, 30;
	shf.l.wrap.b32 	%r18483, %r18479, %r18478, 30;
	mov.b64 	%rd3252, {%r18483, %r18482};
	xor.b64  	%rd3253, %rd3252, %rd3251;
	shf.l.wrap.b32 	%r18484, %r18478, %r18479, 25;
	shf.l.wrap.b32 	%r18485, %r18479, %r18478, 25;
	mov.b64 	%rd3254, {%r18485, %r18484};
	xor.b64  	%rd3255, %rd3253, %rd3254;
	and.b64  	%rd3256, %rd4322, %rd4323;
	xor.b64  	%rd3257, %rd4322, %rd4323;
	and.b64  	%rd3258, %rd3257, %rd3191;
	or.b64  	%rd3259, %rd3258, %rd3256;
	add.s64 	%rd3260, %rd3250, %rd3259;
	add.s64 	%rd4321, %rd3260, %rd3255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18486,%dummy}, %rd4325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18487}, %rd4325;
	}
	shf.r.wrap.b32 	%r18488, %r18487, %r18486, 14;
	shf.r.wrap.b32 	%r18489, %r18486, %r18487, 14;
	mov.b64 	%rd3261, {%r18489, %r18488};
	shf.r.wrap.b32 	%r18490, %r18487, %r18486, 18;
	shf.r.wrap.b32 	%r18491, %r18486, %r18487, 18;
	mov.b64 	%rd3262, {%r18491, %r18490};
	xor.b64  	%rd3263, %rd3262, %rd3261;
	shf.l.wrap.b32 	%r18492, %r18486, %r18487, 23;
	shf.l.wrap.b32 	%r18493, %r18487, %r18486, 23;
	mov.b64 	%rd3264, {%r18493, %r18492};
	xor.b64  	%rd3265, %rd3263, %rd3264;
	xor.b64  	%rd3266, %rd4326, %rd4327;
	and.b64  	%rd3267, %rd4325, %rd3266;
	xor.b64  	%rd3268, %rd3267, %rd4327;
	add.s64 	%rd3269, %rd3180, %rd4312;
	ld.const.u64 	%rd3270, [%rd2891+120];
	add.s64 	%rd3271, %rd3269, %rd3270;
	add.s64 	%rd3272, %rd3271, %rd3268;
	add.s64 	%rd3273, %rd3272, %rd3265;
	add.s64 	%rd4324, %rd3273, %rd3191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18494,%dummy}, %rd4321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18495}, %rd4321;
	}
	shf.r.wrap.b32 	%r18496, %r18495, %r18494, 28;
	shf.r.wrap.b32 	%r18497, %r18494, %r18495, 28;
	mov.b64 	%rd3274, {%r18497, %r18496};
	shf.l.wrap.b32 	%r18498, %r18494, %r18495, 30;
	shf.l.wrap.b32 	%r18499, %r18495, %r18494, 30;
	mov.b64 	%rd3275, {%r18499, %r18498};
	xor.b64  	%rd3276, %rd3275, %rd3274;
	shf.l.wrap.b32 	%r18500, %r18494, %r18495, 25;
	shf.l.wrap.b32 	%r18501, %r18495, %r18494, 25;
	mov.b64 	%rd3277, {%r18501, %r18500};
	xor.b64  	%rd3278, %rd3276, %rd3277;
	and.b64  	%rd3279, %rd4321, %rd4322;
	xor.b64  	%rd3280, %rd4321, %rd4322;
	and.b64  	%rd3281, %rd3280, %rd4323;
	or.b64  	%rd3282, %rd3281, %rd3279;
	add.s64 	%rd3283, %rd3273, %rd3282;
	add.s64 	%rd4320, %rd3283, %rd3278;
	add.s32 	%r19397, %r19397, 16;
	setp.lt.s32	%p150, %r19397, 80;
	@%p150 bra 	BB2_305;

	cvta.to.local.u64 	%rd4261, %rd343;
	add.s64 	%rd3284, %rd201, %rd4320;
	st.local.u64 	[%rd4261], %rd3284;
	add.s64 	%rd3285, %rd202, %rd4321;
	st.local.u64 	[%rd4261+8], %rd3285;
	add.s64 	%rd3286, %rd203, %rd4322;
	st.local.u64 	[%rd4261+16], %rd3286;
	add.s64 	%rd3287, %rd200, %rd4323;
	st.local.u64 	[%rd4261+24], %rd3287;
	add.s64 	%rd3288, %rd196, %rd4324;
	st.local.u64 	[%rd4261+32], %rd3288;
	add.s64 	%rd3289, %rd198, %rd4325;
	st.local.u64 	[%rd4261+40], %rd3289;
	add.s64 	%rd3290, %rd197, %rd4326;
	st.local.u64 	[%rd4261+48], %rd3290;
	add.s64 	%rd4360, %rd199, %rd4327;
	bra.uni 	BB2_310;

BB2_2:
	// inline asm
	prmt.b32 %r2953, %r3, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r34, 0, 0x0123;
	// inline asm
	sub.s32 	%r67, %r2949, %r19233;
	setp.eq.s32	%p2, %r19233, %r2949;
	@%p2 bra 	BB2_215;

	ld.local.u32 	%r68, [%rd17+192];
	and.b32  	%r69, %r68, 127;
	add.s32 	%r3017, %r68, %r67;
	st.local.u32 	[%rd17+192], %r3017;
	setp.eq.s32	%p3, %r69, 0;
	@%p3 bra 	BB2_211;

	add.s32 	%r3018, %r69, %r67;
	setp.lt.s32	%p4, %r3018, 128;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r3019, %r68, 3;
	shl.b32 	%r3020, %r3019, 2;
	mov.u32 	%r3021, 1985229328;
	shr.u32 	%r3022, %r3021, %r3020;
	and.b32  	%r71, %r3022, 65535;
	@%p4 bra 	BB2_95;
	bra.uni 	BB2_5;

BB2_95:
	setp.gt.s32	%p53, %r70, 15;
	@%p53 bra 	BB2_127;

	setp.gt.s32	%p77, %r70, 7;
	@%p77 bra 	BB2_112;

	setp.gt.s32	%p89, %r70, 3;
	@%p89 bra 	BB2_105;

	setp.gt.s32	%p95, %r70, 1;
	@%p95 bra 	BB2_102;

	setp.eq.s32	%p98, %r70, 0;
	@%p98 bra 	BB2_209;
	bra.uni 	BB2_100;

BB2_209:
	// inline asm
	prmt.b32 %r3015, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r11655, 0;
	// inline asm
	prmt.b32 %r19331, %r2953, %r11655, %r71;
	// inline asm
	bra.uni 	BB2_210;

BB2_211:
	st.local.u32 	[%rd17+64], %r2953;
	st.local.u32 	[%rd17+68], %r2955;
	st.local.u32 	[%rd17+72], %r2957;
	st.local.u32 	[%rd17+76], %r2959;
	st.local.u32 	[%rd17+80], %r2961;
	st.local.u32 	[%rd17+84], %r2963;
	st.local.u32 	[%rd17+88], %r2965;
	st.local.u32 	[%rd17+92], %r2967;
	st.local.u32 	[%rd17+96], %r2969;
	st.local.u32 	[%rd17+100], %r2971;
	st.local.u32 	[%rd17+104], %r2973;
	st.local.u32 	[%rd17+108], %r2975;
	st.local.u32 	[%rd17+112], %r2977;
	st.local.u32 	[%rd17+116], %r2979;
	st.local.u32 	[%rd17+120], %r2981;
	st.local.u32 	[%rd17+124], %r2983;
	st.local.u32 	[%rd17+128], %r2985;
	st.local.u32 	[%rd17+132], %r2987;
	st.local.u32 	[%rd17+136], %r2989;
	st.local.u32 	[%rd17+140], %r2991;
	st.local.u32 	[%rd17+144], %r2993;
	st.local.u32 	[%rd17+148], %r2995;
	st.local.u32 	[%rd17+152], %r2997;
	st.local.u32 	[%rd17+156], %r2999;
	st.local.u32 	[%rd17+160], %r3001;
	st.local.u32 	[%rd17+164], %r3003;
	st.local.u32 	[%rd17+168], %r3005;
	st.local.u32 	[%rd17+172], %r3007;
	st.local.u32 	[%rd17+176], %r3009;
	st.local.u32 	[%rd17+180], %r3011;
	st.local.u32 	[%rd17+184], %r3013;
	st.local.u32 	[%rd17+188], %r3015;
	setp.ne.s32	%p100, %r67, 128;
	@%p100 bra 	BB2_215;

	ld.local.u64 	%rd98, [%rd17];
	mov.b64	%rd4304, {%r2955, %r2953};
	mov.b64	%rd4305, {%r2959, %r2957};
	mov.b64	%rd4306, {%r2963, %r2961};
	mov.b64	%rd4307, {%r2967, %r2965};
	mov.b64	%rd4308, {%r2971, %r2969};
	mov.b64	%rd4309, {%r2975, %r2973};
	mov.b64	%rd4310, {%r2979, %r2977};
	mov.b64	%rd4311, {%r2983, %r2981};
	mov.b64	%rd4295, {%r2987, %r2985};
	mov.b64	%rd4294, {%r2991, %r2989};
	mov.b64	%rd4293, {%r2995, %r2993};
	mov.b64	%rd4292, {%r2999, %r2997};
	mov.b64	%rd4291, {%r3003, %r3001};
	mov.b64	%rd4290, {%r3007, %r3005};
	mov.b64	%rd4289, {%r3011, %r3009};
	mov.b64	%rd4288, {%r3015, %r3013};
	ld.local.u64 	%rd115, [%rd17+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11722,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11723}, %rd115;
	}
	shf.r.wrap.b32 	%r11724, %r11723, %r11722, 14;
	shf.r.wrap.b32 	%r11725, %r11722, %r11723, 14;
	mov.b64 	%rd1351, {%r11725, %r11724};
	shf.r.wrap.b32 	%r11726, %r11723, %r11722, 18;
	shf.r.wrap.b32 	%r11727, %r11722, %r11723, 18;
	mov.b64 	%rd1352, {%r11727, %r11726};
	xor.b64  	%rd1353, %rd1352, %rd1351;
	shf.l.wrap.b32 	%r11728, %r11722, %r11723, 23;
	shf.l.wrap.b32 	%r11729, %r11723, %r11722, 23;
	mov.b64 	%rd1354, {%r11729, %r11728};
	xor.b64  	%rd1355, %rd1353, %rd1354;
	ld.local.u64 	%rd116, [%rd17+48];
	ld.local.u64 	%rd117, [%rd17+40];
	xor.b64  	%rd1356, %rd116, %rd117;
	and.b64  	%rd1357, %rd1356, %rd115;
	xor.b64  	%rd1358, %rd1357, %rd116;
	ld.local.u64 	%rd118, [%rd17+56];
	add.s64 	%rd1359, %rd118, %rd4304;
	add.s64 	%rd1360, %rd1359, %rd1;
	add.s64 	%rd1361, %rd1360, %rd1358;
	add.s64 	%rd1362, %rd1361, %rd1355;
	ld.local.u64 	%rd119, [%rd17+24];
	add.s64 	%rd1363, %rd1362, %rd119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11730,%dummy}, %rd98;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11731}, %rd98;
	}
	shf.r.wrap.b32 	%r11732, %r11731, %r11730, 28;
	shf.r.wrap.b32 	%r11733, %r11730, %r11731, 28;
	mov.b64 	%rd1364, {%r11733, %r11732};
	shf.l.wrap.b32 	%r11734, %r11730, %r11731, 30;
	shf.l.wrap.b32 	%r11735, %r11731, %r11730, 30;
	mov.b64 	%rd1365, {%r11735, %r11734};
	xor.b64  	%rd1366, %rd1365, %rd1364;
	shf.l.wrap.b32 	%r11736, %r11730, %r11731, 25;
	shf.l.wrap.b32 	%r11737, %r11731, %r11730, 25;
	mov.b64 	%rd1367, {%r11737, %r11736};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	ld.local.u64 	%rd120, [%rd17+8];
	and.b64  	%rd1369, %rd120, %rd98;
	xor.b64  	%rd1370, %rd120, %rd98;
	ld.local.u64 	%rd121, [%rd17+16];
	and.b64  	%rd1371, %rd121, %rd1370;
	or.b64  	%rd1372, %rd1371, %rd1369;
	add.s64 	%rd1373, %rd1362, %rd1372;
	add.s64 	%rd1374, %rd1373, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11738,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11739}, %rd1363;
	}
	shf.r.wrap.b32 	%r11740, %r11739, %r11738, 14;
	shf.r.wrap.b32 	%r11741, %r11738, %r11739, 14;
	mov.b64 	%rd1375, {%r11741, %r11740};
	shf.r.wrap.b32 	%r11742, %r11739, %r11738, 18;
	shf.r.wrap.b32 	%r11743, %r11738, %r11739, 18;
	mov.b64 	%rd1376, {%r11743, %r11742};
	xor.b64  	%rd1377, %rd1376, %rd1375;
	shf.l.wrap.b32 	%r11744, %r11738, %r11739, 23;
	shf.l.wrap.b32 	%r11745, %r11739, %r11738, 23;
	mov.b64 	%rd1378, {%r11745, %r11744};
	xor.b64  	%rd1379, %rd1377, %rd1378;
	xor.b64  	%rd1380, %rd117, %rd115;
	and.b64  	%rd1381, %rd1363, %rd1380;
	xor.b64  	%rd1382, %rd1381, %rd117;
	add.s64 	%rd1383, %rd116, %rd4305;
	add.s64 	%rd1384, %rd1383, %rd2;
	add.s64 	%rd1385, %rd1384, %rd1382;
	add.s64 	%rd1386, %rd1385, %rd1379;
	add.s64 	%rd1387, %rd1386, %rd121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11746,%dummy}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11747}, %rd1374;
	}
	shf.r.wrap.b32 	%r11748, %r11747, %r11746, 28;
	shf.r.wrap.b32 	%r11749, %r11746, %r11747, 28;
	mov.b64 	%rd1388, {%r11749, %r11748};
	shf.l.wrap.b32 	%r11750, %r11746, %r11747, 30;
	shf.l.wrap.b32 	%r11751, %r11747, %r11746, 30;
	mov.b64 	%rd1389, {%r11751, %r11750};
	xor.b64  	%rd1390, %rd1389, %rd1388;
	shf.l.wrap.b32 	%r11752, %r11746, %r11747, 25;
	shf.l.wrap.b32 	%r11753, %r11747, %r11746, 25;
	mov.b64 	%rd1391, {%r11753, %r11752};
	xor.b64  	%rd1392, %rd1390, %rd1391;
	and.b64  	%rd1393, %rd1374, %rd98;
	xor.b64  	%rd1394, %rd1374, %rd98;
	and.b64  	%rd1395, %rd1394, %rd120;
	or.b64  	%rd1396, %rd1395, %rd1393;
	add.s64 	%rd1397, %rd1386, %rd1396;
	add.s64 	%rd1398, %rd1397, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11754,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11755}, %rd1387;
	}
	shf.r.wrap.b32 	%r11756, %r11755, %r11754, 14;
	shf.r.wrap.b32 	%r11757, %r11754, %r11755, 14;
	mov.b64 	%rd1399, {%r11757, %r11756};
	shf.r.wrap.b32 	%r11758, %r11755, %r11754, 18;
	shf.r.wrap.b32 	%r11759, %r11754, %r11755, 18;
	mov.b64 	%rd1400, {%r11759, %r11758};
	xor.b64  	%rd1401, %rd1400, %rd1399;
	shf.l.wrap.b32 	%r11760, %r11754, %r11755, 23;
	shf.l.wrap.b32 	%r11761, %r11755, %r11754, 23;
	mov.b64 	%rd1402, {%r11761, %r11760};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	xor.b64  	%rd1404, %rd1363, %rd115;
	and.b64  	%rd1405, %rd1387, %rd1404;
	xor.b64  	%rd1406, %rd1405, %rd115;
	add.s64 	%rd1407, %rd117, %rd4306;
	add.s64 	%rd1408, %rd1407, %rd3;
	add.s64 	%rd1409, %rd1408, %rd1406;
	add.s64 	%rd1410, %rd1409, %rd1403;
	add.s64 	%rd1411, %rd1410, %rd120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11762,%dummy}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11763}, %rd1398;
	}
	shf.r.wrap.b32 	%r11764, %r11763, %r11762, 28;
	shf.r.wrap.b32 	%r11765, %r11762, %r11763, 28;
	mov.b64 	%rd1412, {%r11765, %r11764};
	shf.l.wrap.b32 	%r11766, %r11762, %r11763, 30;
	shf.l.wrap.b32 	%r11767, %r11763, %r11762, 30;
	mov.b64 	%rd1413, {%r11767, %r11766};
	xor.b64  	%rd1414, %rd1413, %rd1412;
	shf.l.wrap.b32 	%r11768, %r11762, %r11763, 25;
	shf.l.wrap.b32 	%r11769, %r11763, %r11762, 25;
	mov.b64 	%rd1415, {%r11769, %r11768};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	and.b64  	%rd1417, %rd1398, %rd1374;
	xor.b64  	%rd1418, %rd1398, %rd1374;
	and.b64  	%rd1419, %rd1418, %rd98;
	or.b64  	%rd1420, %rd1419, %rd1417;
	add.s64 	%rd1421, %rd1410, %rd1420;
	add.s64 	%rd1422, %rd1421, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11770,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11771}, %rd1411;
	}
	shf.r.wrap.b32 	%r11772, %r11771, %r11770, 14;
	shf.r.wrap.b32 	%r11773, %r11770, %r11771, 14;
	mov.b64 	%rd1423, {%r11773, %r11772};
	shf.r.wrap.b32 	%r11774, %r11771, %r11770, 18;
	shf.r.wrap.b32 	%r11775, %r11770, %r11771, 18;
	mov.b64 	%rd1424, {%r11775, %r11774};
	xor.b64  	%rd1425, %rd1424, %rd1423;
	shf.l.wrap.b32 	%r11776, %r11770, %r11771, 23;
	shf.l.wrap.b32 	%r11777, %r11771, %r11770, 23;
	mov.b64 	%rd1426, {%r11777, %r11776};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	xor.b64  	%rd1428, %rd1387, %rd1363;
	and.b64  	%rd1429, %rd1411, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1363;
	add.s64 	%rd1431, %rd115, %rd4307;
	add.s64 	%rd1432, %rd1431, %rd4;
	add.s64 	%rd1433, %rd1432, %rd1430;
	add.s64 	%rd1434, %rd1433, %rd1427;
	add.s64 	%rd1435, %rd1434, %rd98;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11778,%dummy}, %rd1422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11779}, %rd1422;
	}
	shf.r.wrap.b32 	%r11780, %r11779, %r11778, 28;
	shf.r.wrap.b32 	%r11781, %r11778, %r11779, 28;
	mov.b64 	%rd1436, {%r11781, %r11780};
	shf.l.wrap.b32 	%r11782, %r11778, %r11779, 30;
	shf.l.wrap.b32 	%r11783, %r11779, %r11778, 30;
	mov.b64 	%rd1437, {%r11783, %r11782};
	xor.b64  	%rd1438, %rd1437, %rd1436;
	shf.l.wrap.b32 	%r11784, %r11778, %r11779, 25;
	shf.l.wrap.b32 	%r11785, %r11779, %r11778, 25;
	mov.b64 	%rd1439, {%r11785, %r11784};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	and.b64  	%rd1441, %rd1422, %rd1398;
	xor.b64  	%rd1442, %rd1422, %rd1398;
	and.b64  	%rd1443, %rd1442, %rd1374;
	or.b64  	%rd1444, %rd1443, %rd1441;
	add.s64 	%rd1445, %rd1434, %rd1444;
	add.s64 	%rd1446, %rd1445, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11786,%dummy}, %rd1435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11787}, %rd1435;
	}
	shf.r.wrap.b32 	%r11788, %r11787, %r11786, 14;
	shf.r.wrap.b32 	%r11789, %r11786, %r11787, 14;
	mov.b64 	%rd1447, {%r11789, %r11788};
	shf.r.wrap.b32 	%r11790, %r11787, %r11786, 18;
	shf.r.wrap.b32 	%r11791, %r11786, %r11787, 18;
	mov.b64 	%rd1448, {%r11791, %r11790};
	xor.b64  	%rd1449, %rd1448, %rd1447;
	shf.l.wrap.b32 	%r11792, %r11786, %r11787, 23;
	shf.l.wrap.b32 	%r11793, %r11787, %r11786, 23;
	mov.b64 	%rd1450, {%r11793, %r11792};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	xor.b64  	%rd1452, %rd1411, %rd1387;
	and.b64  	%rd1453, %rd1435, %rd1452;
	xor.b64  	%rd1454, %rd1453, %rd1387;
	add.s64 	%rd1455, %rd1363, %rd4308;
	add.s64 	%rd1456, %rd1455, %rd5;
	add.s64 	%rd1457, %rd1456, %rd1454;
	add.s64 	%rd1458, %rd1457, %rd1451;
	add.s64 	%rd1459, %rd1458, %rd1374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11794,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11795}, %rd1446;
	}
	shf.r.wrap.b32 	%r11796, %r11795, %r11794, 28;
	shf.r.wrap.b32 	%r11797, %r11794, %r11795, 28;
	mov.b64 	%rd1460, {%r11797, %r11796};
	shf.l.wrap.b32 	%r11798, %r11794, %r11795, 30;
	shf.l.wrap.b32 	%r11799, %r11795, %r11794, 30;
	mov.b64 	%rd1461, {%r11799, %r11798};
	xor.b64  	%rd1462, %rd1461, %rd1460;
	shf.l.wrap.b32 	%r11800, %r11794, %r11795, 25;
	shf.l.wrap.b32 	%r11801, %r11795, %r11794, 25;
	mov.b64 	%rd1463, {%r11801, %r11800};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	and.b64  	%rd1465, %rd1446, %rd1422;
	xor.b64  	%rd1466, %rd1446, %rd1422;
	and.b64  	%rd1467, %rd1466, %rd1398;
	or.b64  	%rd1468, %rd1467, %rd1465;
	add.s64 	%rd1469, %rd1458, %rd1468;
	add.s64 	%rd1470, %rd1469, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11802,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11803}, %rd1459;
	}
	shf.r.wrap.b32 	%r11804, %r11803, %r11802, 14;
	shf.r.wrap.b32 	%r11805, %r11802, %r11803, 14;
	mov.b64 	%rd1471, {%r11805, %r11804};
	shf.r.wrap.b32 	%r11806, %r11803, %r11802, 18;
	shf.r.wrap.b32 	%r11807, %r11802, %r11803, 18;
	mov.b64 	%rd1472, {%r11807, %r11806};
	xor.b64  	%rd1473, %rd1472, %rd1471;
	shf.l.wrap.b32 	%r11808, %r11802, %r11803, 23;
	shf.l.wrap.b32 	%r11809, %r11803, %r11802, 23;
	mov.b64 	%rd1474, {%r11809, %r11808};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	xor.b64  	%rd1476, %rd1435, %rd1411;
	and.b64  	%rd1477, %rd1459, %rd1476;
	xor.b64  	%rd1478, %rd1477, %rd1411;
	add.s64 	%rd1479, %rd1387, %rd4309;
	add.s64 	%rd1480, %rd1479, %rd6;
	add.s64 	%rd1481, %rd1480, %rd1478;
	add.s64 	%rd1482, %rd1481, %rd1475;
	add.s64 	%rd1483, %rd1482, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11810,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11811}, %rd1470;
	}
	shf.r.wrap.b32 	%r11812, %r11811, %r11810, 28;
	shf.r.wrap.b32 	%r11813, %r11810, %r11811, 28;
	mov.b64 	%rd1484, {%r11813, %r11812};
	shf.l.wrap.b32 	%r11814, %r11810, %r11811, 30;
	shf.l.wrap.b32 	%r11815, %r11811, %r11810, 30;
	mov.b64 	%rd1485, {%r11815, %r11814};
	xor.b64  	%rd1486, %rd1485, %rd1484;
	shf.l.wrap.b32 	%r11816, %r11810, %r11811, 25;
	shf.l.wrap.b32 	%r11817, %r11811, %r11810, 25;
	mov.b64 	%rd1487, {%r11817, %r11816};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	and.b64  	%rd1489, %rd1470, %rd1446;
	xor.b64  	%rd1490, %rd1470, %rd1446;
	and.b64  	%rd1491, %rd1490, %rd1422;
	or.b64  	%rd1492, %rd1491, %rd1489;
	add.s64 	%rd1493, %rd1482, %rd1492;
	add.s64 	%rd1494, %rd1493, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11818,%dummy}, %rd1483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11819}, %rd1483;
	}
	shf.r.wrap.b32 	%r11820, %r11819, %r11818, 14;
	shf.r.wrap.b32 	%r11821, %r11818, %r11819, 14;
	mov.b64 	%rd1495, {%r11821, %r11820};
	shf.r.wrap.b32 	%r11822, %r11819, %r11818, 18;
	shf.r.wrap.b32 	%r11823, %r11818, %r11819, 18;
	mov.b64 	%rd1496, {%r11823, %r11822};
	xor.b64  	%rd1497, %rd1496, %rd1495;
	shf.l.wrap.b32 	%r11824, %r11818, %r11819, 23;
	shf.l.wrap.b32 	%r11825, %r11819, %r11818, 23;
	mov.b64 	%rd1498, {%r11825, %r11824};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	xor.b64  	%rd1500, %rd1459, %rd1435;
	and.b64  	%rd1501, %rd1483, %rd1500;
	xor.b64  	%rd1502, %rd1501, %rd1435;
	add.s64 	%rd1503, %rd1411, %rd4310;
	add.s64 	%rd1504, %rd1503, %rd7;
	add.s64 	%rd1505, %rd1504, %rd1502;
	add.s64 	%rd1506, %rd1505, %rd1499;
	add.s64 	%rd1507, %rd1506, %rd1422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11826,%dummy}, %rd1494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11827}, %rd1494;
	}
	shf.r.wrap.b32 	%r11828, %r11827, %r11826, 28;
	shf.r.wrap.b32 	%r11829, %r11826, %r11827, 28;
	mov.b64 	%rd1508, {%r11829, %r11828};
	shf.l.wrap.b32 	%r11830, %r11826, %r11827, 30;
	shf.l.wrap.b32 	%r11831, %r11827, %r11826, 30;
	mov.b64 	%rd1509, {%r11831, %r11830};
	xor.b64  	%rd1510, %rd1509, %rd1508;
	shf.l.wrap.b32 	%r11832, %r11826, %r11827, 25;
	shf.l.wrap.b32 	%r11833, %r11827, %r11826, 25;
	mov.b64 	%rd1511, {%r11833, %r11832};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	and.b64  	%rd1513, %rd1494, %rd1470;
	xor.b64  	%rd1514, %rd1494, %rd1470;
	and.b64  	%rd1515, %rd1514, %rd1446;
	or.b64  	%rd1516, %rd1515, %rd1513;
	add.s64 	%rd1517, %rd1506, %rd1516;
	add.s64 	%rd1518, %rd1517, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11834,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11835}, %rd1507;
	}
	shf.r.wrap.b32 	%r11836, %r11835, %r11834, 14;
	shf.r.wrap.b32 	%r11837, %r11834, %r11835, 14;
	mov.b64 	%rd1519, {%r11837, %r11836};
	shf.r.wrap.b32 	%r11838, %r11835, %r11834, 18;
	shf.r.wrap.b32 	%r11839, %r11834, %r11835, 18;
	mov.b64 	%rd1520, {%r11839, %r11838};
	xor.b64  	%rd1521, %rd1520, %rd1519;
	shf.l.wrap.b32 	%r11840, %r11834, %r11835, 23;
	shf.l.wrap.b32 	%r11841, %r11835, %r11834, 23;
	mov.b64 	%rd1522, {%r11841, %r11840};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	xor.b64  	%rd1524, %rd1483, %rd1459;
	and.b64  	%rd1525, %rd1507, %rd1524;
	xor.b64  	%rd1526, %rd1525, %rd1459;
	add.s64 	%rd1527, %rd1435, %rd4311;
	add.s64 	%rd1528, %rd1527, %rd8;
	add.s64 	%rd1529, %rd1528, %rd1526;
	add.s64 	%rd1530, %rd1529, %rd1523;
	add.s64 	%rd1531, %rd1530, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11842,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11843}, %rd1518;
	}
	shf.r.wrap.b32 	%r11844, %r11843, %r11842, 28;
	shf.r.wrap.b32 	%r11845, %r11842, %r11843, 28;
	mov.b64 	%rd1532, {%r11845, %r11844};
	shf.l.wrap.b32 	%r11846, %r11842, %r11843, 30;
	shf.l.wrap.b32 	%r11847, %r11843, %r11842, 30;
	mov.b64 	%rd1533, {%r11847, %r11846};
	xor.b64  	%rd1534, %rd1533, %rd1532;
	shf.l.wrap.b32 	%r11848, %r11842, %r11843, 25;
	shf.l.wrap.b32 	%r11849, %r11843, %r11842, 25;
	mov.b64 	%rd1535, {%r11849, %r11848};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	and.b64  	%rd1537, %rd1518, %rd1494;
	xor.b64  	%rd1538, %rd1518, %rd1494;
	and.b64  	%rd1539, %rd1538, %rd1470;
	or.b64  	%rd1540, %rd1539, %rd1537;
	add.s64 	%rd1541, %rd1530, %rd1540;
	add.s64 	%rd1542, %rd1541, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11850,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11851}, %rd1531;
	}
	shf.r.wrap.b32 	%r11852, %r11851, %r11850, 14;
	shf.r.wrap.b32 	%r11853, %r11850, %r11851, 14;
	mov.b64 	%rd1543, {%r11853, %r11852};
	shf.r.wrap.b32 	%r11854, %r11851, %r11850, 18;
	shf.r.wrap.b32 	%r11855, %r11850, %r11851, 18;
	mov.b64 	%rd1544, {%r11855, %r11854};
	xor.b64  	%rd1545, %rd1544, %rd1543;
	shf.l.wrap.b32 	%r11856, %r11850, %r11851, 23;
	shf.l.wrap.b32 	%r11857, %r11851, %r11850, 23;
	mov.b64 	%rd1546, {%r11857, %r11856};
	xor.b64  	%rd1547, %rd1545, %rd1546;
	xor.b64  	%rd1548, %rd1507, %rd1483;
	and.b64  	%rd1549, %rd1531, %rd1548;
	xor.b64  	%rd1550, %rd1549, %rd1483;
	add.s64 	%rd1551, %rd1459, %rd4295;
	add.s64 	%rd1552, %rd1551, %rd9;
	add.s64 	%rd1553, %rd1552, %rd1550;
	add.s64 	%rd1554, %rd1553, %rd1547;
	add.s64 	%rd1555, %rd1554, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11858,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11859}, %rd1542;
	}
	shf.r.wrap.b32 	%r11860, %r11859, %r11858, 28;
	shf.r.wrap.b32 	%r11861, %r11858, %r11859, 28;
	mov.b64 	%rd1556, {%r11861, %r11860};
	shf.l.wrap.b32 	%r11862, %r11858, %r11859, 30;
	shf.l.wrap.b32 	%r11863, %r11859, %r11858, 30;
	mov.b64 	%rd1557, {%r11863, %r11862};
	xor.b64  	%rd1558, %rd1557, %rd1556;
	shf.l.wrap.b32 	%r11864, %r11858, %r11859, 25;
	shf.l.wrap.b32 	%r11865, %r11859, %r11858, 25;
	mov.b64 	%rd1559, {%r11865, %r11864};
	xor.b64  	%rd1560, %rd1558, %rd1559;
	and.b64  	%rd1561, %rd1542, %rd1518;
	xor.b64  	%rd1562, %rd1542, %rd1518;
	and.b64  	%rd1563, %rd1562, %rd1494;
	or.b64  	%rd1564, %rd1563, %rd1561;
	add.s64 	%rd1565, %rd1554, %rd1564;
	add.s64 	%rd1566, %rd1565, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11866,%dummy}, %rd1555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11867}, %rd1555;
	}
	shf.r.wrap.b32 	%r11868, %r11867, %r11866, 14;
	shf.r.wrap.b32 	%r11869, %r11866, %r11867, 14;
	mov.b64 	%rd1567, {%r11869, %r11868};
	shf.r.wrap.b32 	%r11870, %r11867, %r11866, 18;
	shf.r.wrap.b32 	%r11871, %r11866, %r11867, 18;
	mov.b64 	%rd1568, {%r11871, %r11870};
	xor.b64  	%rd1569, %rd1568, %rd1567;
	shf.l.wrap.b32 	%r11872, %r11866, %r11867, 23;
	shf.l.wrap.b32 	%r11873, %r11867, %r11866, 23;
	mov.b64 	%rd1570, {%r11873, %r11872};
	xor.b64  	%rd1571, %rd1569, %rd1570;
	xor.b64  	%rd1572, %rd1531, %rd1507;
	and.b64  	%rd1573, %rd1555, %rd1572;
	xor.b64  	%rd1574, %rd1573, %rd1507;
	add.s64 	%rd1575, %rd1483, %rd4294;
	add.s64 	%rd1576, %rd1575, %rd10;
	add.s64 	%rd1577, %rd1576, %rd1574;
	add.s64 	%rd1578, %rd1577, %rd1571;
	add.s64 	%rd1579, %rd1578, %rd1494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11874,%dummy}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11875}, %rd1566;
	}
	shf.r.wrap.b32 	%r11876, %r11875, %r11874, 28;
	shf.r.wrap.b32 	%r11877, %r11874, %r11875, 28;
	mov.b64 	%rd1580, {%r11877, %r11876};
	shf.l.wrap.b32 	%r11878, %r11874, %r11875, 30;
	shf.l.wrap.b32 	%r11879, %r11875, %r11874, 30;
	mov.b64 	%rd1581, {%r11879, %r11878};
	xor.b64  	%rd1582, %rd1581, %rd1580;
	shf.l.wrap.b32 	%r11880, %r11874, %r11875, 25;
	shf.l.wrap.b32 	%r11881, %r11875, %r11874, 25;
	mov.b64 	%rd1583, {%r11881, %r11880};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	and.b64  	%rd1585, %rd1566, %rd1542;
	xor.b64  	%rd1586, %rd1566, %rd1542;
	and.b64  	%rd1587, %rd1586, %rd1518;
	or.b64  	%rd1588, %rd1587, %rd1585;
	add.s64 	%rd1589, %rd1578, %rd1588;
	add.s64 	%rd1590, %rd1589, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11882,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11883}, %rd1579;
	}
	shf.r.wrap.b32 	%r11884, %r11883, %r11882, 14;
	shf.r.wrap.b32 	%r11885, %r11882, %r11883, 14;
	mov.b64 	%rd1591, {%r11885, %r11884};
	shf.r.wrap.b32 	%r11886, %r11883, %r11882, 18;
	shf.r.wrap.b32 	%r11887, %r11882, %r11883, 18;
	mov.b64 	%rd1592, {%r11887, %r11886};
	xor.b64  	%rd1593, %rd1592, %rd1591;
	shf.l.wrap.b32 	%r11888, %r11882, %r11883, 23;
	shf.l.wrap.b32 	%r11889, %r11883, %r11882, 23;
	mov.b64 	%rd1594, {%r11889, %r11888};
	xor.b64  	%rd1595, %rd1593, %rd1594;
	xor.b64  	%rd1596, %rd1555, %rd1531;
	and.b64  	%rd1597, %rd1579, %rd1596;
	xor.b64  	%rd1598, %rd1597, %rd1531;
	add.s64 	%rd1599, %rd1507, %rd4293;
	add.s64 	%rd1600, %rd1599, %rd11;
	add.s64 	%rd1601, %rd1600, %rd1598;
	add.s64 	%rd1602, %rd1601, %rd1595;
	add.s64 	%rd1603, %rd1602, %rd1518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11890,%dummy}, %rd1590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11891}, %rd1590;
	}
	shf.r.wrap.b32 	%r11892, %r11891, %r11890, 28;
	shf.r.wrap.b32 	%r11893, %r11890, %r11891, 28;
	mov.b64 	%rd1604, {%r11893, %r11892};
	shf.l.wrap.b32 	%r11894, %r11890, %r11891, 30;
	shf.l.wrap.b32 	%r11895, %r11891, %r11890, 30;
	mov.b64 	%rd1605, {%r11895, %r11894};
	xor.b64  	%rd1606, %rd1605, %rd1604;
	shf.l.wrap.b32 	%r11896, %r11890, %r11891, 25;
	shf.l.wrap.b32 	%r11897, %r11891, %r11890, 25;
	mov.b64 	%rd1607, {%r11897, %r11896};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	and.b64  	%rd1609, %rd1590, %rd1566;
	xor.b64  	%rd1610, %rd1590, %rd1566;
	and.b64  	%rd1611, %rd1610, %rd1542;
	or.b64  	%rd1612, %rd1611, %rd1609;
	add.s64 	%rd1613, %rd1602, %rd1612;
	add.s64 	%rd1614, %rd1613, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11898,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11899}, %rd1603;
	}
	shf.r.wrap.b32 	%r11900, %r11899, %r11898, 14;
	shf.r.wrap.b32 	%r11901, %r11898, %r11899, 14;
	mov.b64 	%rd1615, {%r11901, %r11900};
	shf.r.wrap.b32 	%r11902, %r11899, %r11898, 18;
	shf.r.wrap.b32 	%r11903, %r11898, %r11899, 18;
	mov.b64 	%rd1616, {%r11903, %r11902};
	xor.b64  	%rd1617, %rd1616, %rd1615;
	shf.l.wrap.b32 	%r11904, %r11898, %r11899, 23;
	shf.l.wrap.b32 	%r11905, %r11899, %r11898, 23;
	mov.b64 	%rd1618, {%r11905, %r11904};
	xor.b64  	%rd1619, %rd1617, %rd1618;
	xor.b64  	%rd1620, %rd1579, %rd1555;
	and.b64  	%rd1621, %rd1603, %rd1620;
	xor.b64  	%rd1622, %rd1621, %rd1555;
	add.s64 	%rd1623, %rd1531, %rd4292;
	add.s64 	%rd1624, %rd1623, %rd12;
	add.s64 	%rd1625, %rd1624, %rd1622;
	add.s64 	%rd1626, %rd1625, %rd1619;
	add.s64 	%rd1627, %rd1626, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11906,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11907}, %rd1614;
	}
	shf.r.wrap.b32 	%r11908, %r11907, %r11906, 28;
	shf.r.wrap.b32 	%r11909, %r11906, %r11907, 28;
	mov.b64 	%rd1628, {%r11909, %r11908};
	shf.l.wrap.b32 	%r11910, %r11906, %r11907, 30;
	shf.l.wrap.b32 	%r11911, %r11907, %r11906, 30;
	mov.b64 	%rd1629, {%r11911, %r11910};
	xor.b64  	%rd1630, %rd1629, %rd1628;
	shf.l.wrap.b32 	%r11912, %r11906, %r11907, 25;
	shf.l.wrap.b32 	%r11913, %r11907, %r11906, 25;
	mov.b64 	%rd1631, {%r11913, %r11912};
	xor.b64  	%rd1632, %rd1630, %rd1631;
	and.b64  	%rd1633, %rd1614, %rd1590;
	xor.b64  	%rd1634, %rd1614, %rd1590;
	and.b64  	%rd1635, %rd1634, %rd1566;
	or.b64  	%rd1636, %rd1635, %rd1633;
	add.s64 	%rd1637, %rd1626, %rd1636;
	add.s64 	%rd1638, %rd1637, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11914,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11915}, %rd1627;
	}
	shf.r.wrap.b32 	%r11916, %r11915, %r11914, 14;
	shf.r.wrap.b32 	%r11917, %r11914, %r11915, 14;
	mov.b64 	%rd1639, {%r11917, %r11916};
	shf.r.wrap.b32 	%r11918, %r11915, %r11914, 18;
	shf.r.wrap.b32 	%r11919, %r11914, %r11915, 18;
	mov.b64 	%rd1640, {%r11919, %r11918};
	xor.b64  	%rd1641, %rd1640, %rd1639;
	shf.l.wrap.b32 	%r11920, %r11914, %r11915, 23;
	shf.l.wrap.b32 	%r11921, %r11915, %r11914, 23;
	mov.b64 	%rd1642, {%r11921, %r11920};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	xor.b64  	%rd1644, %rd1603, %rd1579;
	and.b64  	%rd1645, %rd1627, %rd1644;
	xor.b64  	%rd1646, %rd1645, %rd1579;
	add.s64 	%rd1647, %rd1555, %rd4291;
	add.s64 	%rd1648, %rd1647, %rd13;
	add.s64 	%rd1649, %rd1648, %rd1646;
	add.s64 	%rd1650, %rd1649, %rd1643;
	add.s64 	%rd4303, %rd1650, %rd1566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11922,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11923}, %rd1638;
	}
	shf.r.wrap.b32 	%r11924, %r11923, %r11922, 28;
	shf.r.wrap.b32 	%r11925, %r11922, %r11923, 28;
	mov.b64 	%rd1651, {%r11925, %r11924};
	shf.l.wrap.b32 	%r11926, %r11922, %r11923, 30;
	shf.l.wrap.b32 	%r11927, %r11923, %r11922, 30;
	mov.b64 	%rd1652, {%r11927, %r11926};
	xor.b64  	%rd1653, %rd1652, %rd1651;
	shf.l.wrap.b32 	%r11928, %r11922, %r11923, 25;
	shf.l.wrap.b32 	%r11929, %r11923, %r11922, 25;
	mov.b64 	%rd1654, {%r11929, %r11928};
	xor.b64  	%rd1655, %rd1653, %rd1654;
	and.b64  	%rd1656, %rd1638, %rd1614;
	xor.b64  	%rd1657, %rd1638, %rd1614;
	and.b64  	%rd1658, %rd1657, %rd1590;
	or.b64  	%rd1659, %rd1658, %rd1656;
	add.s64 	%rd1660, %rd1650, %rd1659;
	add.s64 	%rd4299, %rd1660, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11930,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11931}, %rd4303;
	}
	shf.r.wrap.b32 	%r11932, %r11931, %r11930, 14;
	shf.r.wrap.b32 	%r11933, %r11930, %r11931, 14;
	mov.b64 	%rd1661, {%r11933, %r11932};
	shf.r.wrap.b32 	%r11934, %r11931, %r11930, 18;
	shf.r.wrap.b32 	%r11935, %r11930, %r11931, 18;
	mov.b64 	%rd1662, {%r11935, %r11934};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.l.wrap.b32 	%r11936, %r11930, %r11931, 23;
	shf.l.wrap.b32 	%r11937, %r11931, %r11930, 23;
	mov.b64 	%rd1664, {%r11937, %r11936};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	xor.b64  	%rd1666, %rd1627, %rd1603;
	and.b64  	%rd1667, %rd4303, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1603;
	add.s64 	%rd1669, %rd1579, %rd4290;
	add.s64 	%rd1670, %rd1669, %rd14;
	add.s64 	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1671, %rd1665;
	add.s64 	%rd4302, %rd1672, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11938,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11939}, %rd4299;
	}
	shf.r.wrap.b32 	%r11940, %r11939, %r11938, 28;
	shf.r.wrap.b32 	%r11941, %r11938, %r11939, 28;
	mov.b64 	%rd1673, {%r11941, %r11940};
	shf.l.wrap.b32 	%r11942, %r11938, %r11939, 30;
	shf.l.wrap.b32 	%r11943, %r11939, %r11938, 30;
	mov.b64 	%rd1674, {%r11943, %r11942};
	xor.b64  	%rd1675, %rd1674, %rd1673;
	shf.l.wrap.b32 	%r11944, %r11938, %r11939, 25;
	shf.l.wrap.b32 	%r11945, %r11939, %r11938, 25;
	mov.b64 	%rd1676, {%r11945, %r11944};
	xor.b64  	%rd1677, %rd1675, %rd1676;
	and.b64  	%rd1678, %rd4299, %rd1638;
	xor.b64  	%rd1679, %rd4299, %rd1638;
	and.b64  	%rd1680, %rd1679, %rd1614;
	or.b64  	%rd1681, %rd1680, %rd1678;
	add.s64 	%rd1682, %rd1672, %rd1681;
	add.s64 	%rd4298, %rd1682, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11946,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11947}, %rd4302;
	}
	shf.r.wrap.b32 	%r11948, %r11947, %r11946, 14;
	shf.r.wrap.b32 	%r11949, %r11946, %r11947, 14;
	mov.b64 	%rd1683, {%r11949, %r11948};
	shf.r.wrap.b32 	%r11950, %r11947, %r11946, 18;
	shf.r.wrap.b32 	%r11951, %r11946, %r11947, 18;
	mov.b64 	%rd1684, {%r11951, %r11950};
	xor.b64  	%rd1685, %rd1684, %rd1683;
	shf.l.wrap.b32 	%r11952, %r11946, %r11947, 23;
	shf.l.wrap.b32 	%r11953, %r11947, %r11946, 23;
	mov.b64 	%rd1686, {%r11953, %r11952};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	xor.b64  	%rd1688, %rd4303, %rd1627;
	and.b64  	%rd1689, %rd4302, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1627;
	add.s64 	%rd1691, %rd1603, %rd4289;
	add.s64 	%rd1692, %rd1691, %rd15;
	add.s64 	%rd1693, %rd1692, %rd1690;
	add.s64 	%rd1694, %rd1693, %rd1687;
	add.s64 	%rd4301, %rd1694, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11954,%dummy}, %rd4298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11955}, %rd4298;
	}
	shf.r.wrap.b32 	%r11956, %r11955, %r11954, 28;
	shf.r.wrap.b32 	%r11957, %r11954, %r11955, 28;
	mov.b64 	%rd1695, {%r11957, %r11956};
	shf.l.wrap.b32 	%r11958, %r11954, %r11955, 30;
	shf.l.wrap.b32 	%r11959, %r11955, %r11954, 30;
	mov.b64 	%rd1696, {%r11959, %r11958};
	xor.b64  	%rd1697, %rd1696, %rd1695;
	shf.l.wrap.b32 	%r11960, %r11954, %r11955, 25;
	shf.l.wrap.b32 	%r11961, %r11955, %r11954, 25;
	mov.b64 	%rd1698, {%r11961, %r11960};
	xor.b64  	%rd1699, %rd1697, %rd1698;
	and.b64  	%rd1700, %rd4298, %rd4299;
	xor.b64  	%rd1701, %rd4298, %rd4299;
	and.b64  	%rd1702, %rd1701, %rd1638;
	or.b64  	%rd1703, %rd1702, %rd1700;
	add.s64 	%rd1704, %rd1694, %rd1703;
	add.s64 	%rd4297, %rd1704, %rd1699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11962,%dummy}, %rd4301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11963}, %rd4301;
	}
	shf.r.wrap.b32 	%r11964, %r11963, %r11962, 14;
	shf.r.wrap.b32 	%r11965, %r11962, %r11963, 14;
	mov.b64 	%rd1705, {%r11965, %r11964};
	shf.r.wrap.b32 	%r11966, %r11963, %r11962, 18;
	shf.r.wrap.b32 	%r11967, %r11962, %r11963, 18;
	mov.b64 	%rd1706, {%r11967, %r11966};
	xor.b64  	%rd1707, %rd1706, %rd1705;
	shf.l.wrap.b32 	%r11968, %r11962, %r11963, 23;
	shf.l.wrap.b32 	%r11969, %r11963, %r11962, 23;
	mov.b64 	%rd1708, {%r11969, %r11968};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	xor.b64  	%rd1710, %rd4302, %rd4303;
	and.b64  	%rd1711, %rd4301, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd4303;
	add.s64 	%rd1713, %rd1627, %rd4288;
	add.s64 	%rd1714, %rd1713, %rd16;
	add.s64 	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1715, %rd1709;
	add.s64 	%rd4300, %rd1716, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11970,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11971}, %rd4297;
	}
	shf.r.wrap.b32 	%r11972, %r11971, %r11970, 28;
	shf.r.wrap.b32 	%r11973, %r11970, %r11971, 28;
	mov.b64 	%rd1717, {%r11973, %r11972};
	shf.l.wrap.b32 	%r11974, %r11970, %r11971, 30;
	shf.l.wrap.b32 	%r11975, %r11971, %r11970, 30;
	mov.b64 	%rd1718, {%r11975, %r11974};
	xor.b64  	%rd1719, %rd1718, %rd1717;
	shf.l.wrap.b32 	%r11976, %r11970, %r11971, 25;
	shf.l.wrap.b32 	%r11977, %r11971, %r11970, 25;
	mov.b64 	%rd1720, {%r11977, %r11976};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	and.b64  	%rd1722, %rd4297, %rd4298;
	xor.b64  	%rd1723, %rd4297, %rd4298;
	and.b64  	%rd1724, %rd1723, %rd4299;
	or.b64  	%rd1725, %rd1724, %rd1722;
	add.s64 	%rd1726, %rd1716, %rd1725;
	add.s64 	%rd4296, %rd1726, %rd1721;
	mov.u32 	%r19332, 16;
	mov.u64 	%rd4287, k_sha512;

BB2_213:
	shr.u64 	%rd1727, %rd4289, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11978,%dummy}, %rd4289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11979}, %rd4289;
	}
	shf.r.wrap.b32 	%r11980, %r11979, %r11978, 19;
	shf.r.wrap.b32 	%r11981, %r11978, %r11979, 19;
	mov.b64 	%rd1728, {%r11981, %r11980};
	xor.b64  	%rd1729, %rd1728, %rd1727;
	shf.l.wrap.b32 	%r11982, %r11978, %r11979, 3;
	shf.l.wrap.b32 	%r11983, %r11979, %r11978, 3;
	mov.b64 	%rd1730, {%r11983, %r11982};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	shr.u64 	%rd1732, %rd4305, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11984,%dummy}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11985}, %rd4305;
	}
	shf.r.wrap.b32 	%r11986, %r11985, %r11984, 1;
	shf.r.wrap.b32 	%r11987, %r11984, %r11985, 1;
	mov.b64 	%rd1733, {%r11987, %r11986};
	xor.b64  	%rd1734, %rd1733, %rd1732;
	shf.r.wrap.b32 	%r11988, %r11985, %r11984, 8;
	shf.r.wrap.b32 	%r11989, %r11984, %r11985, 8;
	mov.b64 	%rd1735, {%r11989, %r11988};
	xor.b64  	%rd1736, %rd1734, %rd1735;
	add.s64 	%rd1737, %rd4304, %rd4294;
	add.s64 	%rd1738, %rd1737, %rd1731;
	add.s64 	%rd4304, %rd1738, %rd1736;
	shr.u64 	%rd1739, %rd4288, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11990,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11991}, %rd4288;
	}
	shf.r.wrap.b32 	%r11992, %r11991, %r11990, 19;
	shf.r.wrap.b32 	%r11993, %r11990, %r11991, 19;
	mov.b64 	%rd1740, {%r11993, %r11992};
	xor.b64  	%rd1741, %rd1740, %rd1739;
	shf.l.wrap.b32 	%r11994, %r11990, %r11991, 3;
	shf.l.wrap.b32 	%r11995, %r11991, %r11990, 3;
	mov.b64 	%rd1742, {%r11995, %r11994};
	xor.b64  	%rd1743, %rd1741, %rd1742;
	shr.u64 	%rd1744, %rd4306, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11996,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11997}, %rd4306;
	}
	shf.r.wrap.b32 	%r11998, %r11997, %r11996, 1;
	shf.r.wrap.b32 	%r11999, %r11996, %r11997, 1;
	mov.b64 	%rd1745, {%r11999, %r11998};
	xor.b64  	%rd1746, %rd1745, %rd1744;
	shf.r.wrap.b32 	%r12000, %r11997, %r11996, 8;
	shf.r.wrap.b32 	%r12001, %r11996, %r11997, 8;
	mov.b64 	%rd1747, {%r12001, %r12000};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	add.s64 	%rd1749, %rd4305, %rd4293;
	add.s64 	%rd1750, %rd1749, %rd1743;
	add.s64 	%rd4305, %rd1750, %rd1748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12002,%dummy}, %rd4304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12003}, %rd4304;
	}
	shf.r.wrap.b32 	%r12004, %r12003, %r12002, 19;
	shf.r.wrap.b32 	%r12005, %r12002, %r12003, 19;
	mov.b64 	%rd1751, {%r12005, %r12004};
	shf.l.wrap.b32 	%r12006, %r12002, %r12003, 3;
	shf.l.wrap.b32 	%r12007, %r12003, %r12002, 3;
	mov.b64 	%rd1752, {%r12007, %r12006};
	shr.u64 	%rd1753, %rd4304, 6;
	xor.b64  	%rd1754, %rd1751, %rd1753;
	xor.b64  	%rd1755, %rd1754, %rd1752;
	shr.u64 	%rd1756, %rd4307, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12008,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12009}, %rd4307;
	}
	shf.r.wrap.b32 	%r12010, %r12009, %r12008, 1;
	shf.r.wrap.b32 	%r12011, %r12008, %r12009, 1;
	mov.b64 	%rd1757, {%r12011, %r12010};
	xor.b64  	%rd1758, %rd1757, %rd1756;
	shf.r.wrap.b32 	%r12012, %r12009, %r12008, 8;
	shf.r.wrap.b32 	%r12013, %r12008, %r12009, 8;
	mov.b64 	%rd1759, {%r12013, %r12012};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	add.s64 	%rd1761, %rd4306, %rd4292;
	add.s64 	%rd1762, %rd1761, %rd1755;
	add.s64 	%rd4306, %rd1762, %rd1760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12014,%dummy}, %rd4305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12015}, %rd4305;
	}
	shf.r.wrap.b32 	%r12016, %r12015, %r12014, 19;
	shf.r.wrap.b32 	%r12017, %r12014, %r12015, 19;
	mov.b64 	%rd1763, {%r12017, %r12016};
	shf.l.wrap.b32 	%r12018, %r12014, %r12015, 3;
	shf.l.wrap.b32 	%r12019, %r12015, %r12014, 3;
	mov.b64 	%rd1764, {%r12019, %r12018};
	shr.u64 	%rd1765, %rd4305, 6;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	shr.u64 	%rd1768, %rd4308, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12020,%dummy}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12021}, %rd4308;
	}
	shf.r.wrap.b32 	%r12022, %r12021, %r12020, 1;
	shf.r.wrap.b32 	%r12023, %r12020, %r12021, 1;
	mov.b64 	%rd1769, {%r12023, %r12022};
	xor.b64  	%rd1770, %rd1769, %rd1768;
	shf.r.wrap.b32 	%r12024, %r12021, %r12020, 8;
	shf.r.wrap.b32 	%r12025, %r12020, %r12021, 8;
	mov.b64 	%rd1771, {%r12025, %r12024};
	xor.b64  	%rd1772, %rd1770, %rd1771;
	add.s64 	%rd1773, %rd4307, %rd4291;
	add.s64 	%rd1774, %rd1773, %rd1767;
	add.s64 	%rd4307, %rd1774, %rd1772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12026,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12027}, %rd4306;
	}
	shf.r.wrap.b32 	%r12028, %r12027, %r12026, 19;
	shf.r.wrap.b32 	%r12029, %r12026, %r12027, 19;
	mov.b64 	%rd1775, {%r12029, %r12028};
	shf.l.wrap.b32 	%r12030, %r12026, %r12027, 3;
	shf.l.wrap.b32 	%r12031, %r12027, %r12026, 3;
	mov.b64 	%rd1776, {%r12031, %r12030};
	shr.u64 	%rd1777, %rd4306, 6;
	xor.b64  	%rd1778, %rd1775, %rd1777;
	xor.b64  	%rd1779, %rd1778, %rd1776;
	shr.u64 	%rd1780, %rd4309, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12032,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12033}, %rd4309;
	}
	shf.r.wrap.b32 	%r12034, %r12033, %r12032, 1;
	shf.r.wrap.b32 	%r12035, %r12032, %r12033, 1;
	mov.b64 	%rd1781, {%r12035, %r12034};
	xor.b64  	%rd1782, %rd1781, %rd1780;
	shf.r.wrap.b32 	%r12036, %r12033, %r12032, 8;
	shf.r.wrap.b32 	%r12037, %r12032, %r12033, 8;
	mov.b64 	%rd1783, {%r12037, %r12036};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	add.s64 	%rd1785, %rd4308, %rd4290;
	add.s64 	%rd1786, %rd1785, %rd1779;
	add.s64 	%rd4308, %rd1786, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12038,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12039}, %rd4307;
	}
	shf.r.wrap.b32 	%r12040, %r12039, %r12038, 19;
	shf.r.wrap.b32 	%r12041, %r12038, %r12039, 19;
	mov.b64 	%rd1787, {%r12041, %r12040};
	shf.l.wrap.b32 	%r12042, %r12038, %r12039, 3;
	shf.l.wrap.b32 	%r12043, %r12039, %r12038, 3;
	mov.b64 	%rd1788, {%r12043, %r12042};
	shr.u64 	%rd1789, %rd4307, 6;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	shr.u64 	%rd1792, %rd4310, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12044,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12045}, %rd4310;
	}
	shf.r.wrap.b32 	%r12046, %r12045, %r12044, 1;
	shf.r.wrap.b32 	%r12047, %r12044, %r12045, 1;
	mov.b64 	%rd1793, {%r12047, %r12046};
	xor.b64  	%rd1794, %rd1793, %rd1792;
	shf.r.wrap.b32 	%r12048, %r12045, %r12044, 8;
	shf.r.wrap.b32 	%r12049, %r12044, %r12045, 8;
	mov.b64 	%rd1795, {%r12049, %r12048};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	add.s64 	%rd1797, %rd4309, %rd4289;
	add.s64 	%rd1798, %rd1797, %rd1791;
	add.s64 	%rd4309, %rd1798, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12050,%dummy}, %rd4308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12051}, %rd4308;
	}
	shf.r.wrap.b32 	%r12052, %r12051, %r12050, 19;
	shf.r.wrap.b32 	%r12053, %r12050, %r12051, 19;
	mov.b64 	%rd1799, {%r12053, %r12052};
	shf.l.wrap.b32 	%r12054, %r12050, %r12051, 3;
	shf.l.wrap.b32 	%r12055, %r12051, %r12050, 3;
	mov.b64 	%rd1800, {%r12055, %r12054};
	shr.u64 	%rd1801, %rd4308, 6;
	xor.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1800;
	shr.u64 	%rd1804, %rd4311, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12056,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12057}, %rd4311;
	}
	shf.r.wrap.b32 	%r12058, %r12057, %r12056, 1;
	shf.r.wrap.b32 	%r12059, %r12056, %r12057, 1;
	mov.b64 	%rd1805, {%r12059, %r12058};
	xor.b64  	%rd1806, %rd1805, %rd1804;
	shf.r.wrap.b32 	%r12060, %r12057, %r12056, 8;
	shf.r.wrap.b32 	%r12061, %r12056, %r12057, 8;
	mov.b64 	%rd1807, {%r12061, %r12060};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	add.s64 	%rd1809, %rd4310, %rd4288;
	add.s64 	%rd1810, %rd1809, %rd1803;
	add.s64 	%rd4310, %rd1810, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12062,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12063}, %rd4309;
	}
	shf.r.wrap.b32 	%r12064, %r12063, %r12062, 19;
	shf.r.wrap.b32 	%r12065, %r12062, %r12063, 19;
	mov.b64 	%rd1811, {%r12065, %r12064};
	shf.l.wrap.b32 	%r12066, %r12062, %r12063, 3;
	shf.l.wrap.b32 	%r12067, %r12063, %r12062, 3;
	mov.b64 	%rd1812, {%r12067, %r12066};
	shr.u64 	%rd1813, %rd4309, 6;
	xor.b64  	%rd1814, %rd1811, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1812;
	shr.u64 	%rd1816, %rd4295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12068,%dummy}, %rd4295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12069}, %rd4295;
	}
	shf.r.wrap.b32 	%r12070, %r12069, %r12068, 1;
	shf.r.wrap.b32 	%r12071, %r12068, %r12069, 1;
	mov.b64 	%rd1817, {%r12071, %r12070};
	xor.b64  	%rd1818, %rd1817, %rd1816;
	shf.r.wrap.b32 	%r12072, %r12069, %r12068, 8;
	shf.r.wrap.b32 	%r12073, %r12068, %r12069, 8;
	mov.b64 	%rd1819, {%r12073, %r12072};
	xor.b64  	%rd1820, %rd1818, %rd1819;
	add.s64 	%rd1821, %rd4304, %rd4311;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd4311, %rd1822, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12074,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12075}, %rd4310;
	}
	shf.r.wrap.b32 	%r12076, %r12075, %r12074, 19;
	shf.r.wrap.b32 	%r12077, %r12074, %r12075, 19;
	mov.b64 	%rd1823, {%r12077, %r12076};
	shf.l.wrap.b32 	%r12078, %r12074, %r12075, 3;
	shf.l.wrap.b32 	%r12079, %r12075, %r12074, 3;
	mov.b64 	%rd1824, {%r12079, %r12078};
	shr.u64 	%rd1825, %rd4310, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shr.u64 	%rd1828, %rd4294, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12080,%dummy}, %rd4294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12081}, %rd4294;
	}
	shf.r.wrap.b32 	%r12082, %r12081, %r12080, 1;
	shf.r.wrap.b32 	%r12083, %r12080, %r12081, 1;
	mov.b64 	%rd1829, {%r12083, %r12082};
	xor.b64  	%rd1830, %rd1829, %rd1828;
	shf.r.wrap.b32 	%r12084, %r12081, %r12080, 8;
	shf.r.wrap.b32 	%r12085, %r12080, %r12081, 8;
	mov.b64 	%rd1831, {%r12085, %r12084};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	add.s64 	%rd1833, %rd4305, %rd4295;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd4295, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12086,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12087}, %rd4311;
	}
	shf.r.wrap.b32 	%r12088, %r12087, %r12086, 19;
	shf.r.wrap.b32 	%r12089, %r12086, %r12087, 19;
	mov.b64 	%rd1835, {%r12089, %r12088};
	shf.l.wrap.b32 	%r12090, %r12086, %r12087, 3;
	shf.l.wrap.b32 	%r12091, %r12087, %r12086, 3;
	mov.b64 	%rd1836, {%r12091, %r12090};
	shr.u64 	%rd1837, %rd4311, 6;
	xor.b64  	%rd1838, %rd1835, %rd1837;
	xor.b64  	%rd1839, %rd1838, %rd1836;
	shr.u64 	%rd1840, %rd4293, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12092,%dummy}, %rd4293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12093}, %rd4293;
	}
	shf.r.wrap.b32 	%r12094, %r12093, %r12092, 1;
	shf.r.wrap.b32 	%r12095, %r12092, %r12093, 1;
	mov.b64 	%rd1841, {%r12095, %r12094};
	xor.b64  	%rd1842, %rd1841, %rd1840;
	shf.r.wrap.b32 	%r12096, %r12093, %r12092, 8;
	shf.r.wrap.b32 	%r12097, %r12092, %r12093, 8;
	mov.b64 	%rd1843, {%r12097, %r12096};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	add.s64 	%rd1845, %rd4306, %rd4294;
	add.s64 	%rd1846, %rd1845, %rd1839;
	add.s64 	%rd4294, %rd1846, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12098,%dummy}, %rd4295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12099}, %rd4295;
	}
	shf.r.wrap.b32 	%r12100, %r12099, %r12098, 19;
	shf.r.wrap.b32 	%r12101, %r12098, %r12099, 19;
	mov.b64 	%rd1847, {%r12101, %r12100};
	shf.l.wrap.b32 	%r12102, %r12098, %r12099, 3;
	shf.l.wrap.b32 	%r12103, %r12099, %r12098, 3;
	mov.b64 	%rd1848, {%r12103, %r12102};
	shr.u64 	%rd1849, %rd4295, 6;
	xor.b64  	%rd1850, %rd1847, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd1848;
	shr.u64 	%rd1852, %rd4292, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12104,%dummy}, %rd4292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12105}, %rd4292;
	}
	shf.r.wrap.b32 	%r12106, %r12105, %r12104, 1;
	shf.r.wrap.b32 	%r12107, %r12104, %r12105, 1;
	mov.b64 	%rd1853, {%r12107, %r12106};
	xor.b64  	%rd1854, %rd1853, %rd1852;
	shf.r.wrap.b32 	%r12108, %r12105, %r12104, 8;
	shf.r.wrap.b32 	%r12109, %r12104, %r12105, 8;
	mov.b64 	%rd1855, {%r12109, %r12108};
	xor.b64  	%rd1856, %rd1854, %rd1855;
	add.s64 	%rd1857, %rd4307, %rd4293;
	add.s64 	%rd1858, %rd1857, %rd1851;
	add.s64 	%rd4293, %rd1858, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12110,%dummy}, %rd4294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12111}, %rd4294;
	}
	shf.r.wrap.b32 	%r12112, %r12111, %r12110, 19;
	shf.r.wrap.b32 	%r12113, %r12110, %r12111, 19;
	mov.b64 	%rd1859, {%r12113, %r12112};
	shf.l.wrap.b32 	%r12114, %r12110, %r12111, 3;
	shf.l.wrap.b32 	%r12115, %r12111, %r12110, 3;
	mov.b64 	%rd1860, {%r12115, %r12114};
	shr.u64 	%rd1861, %rd4294, 6;
	xor.b64  	%rd1862, %rd1859, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1860;
	shr.u64 	%rd1864, %rd4291, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12116,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12117}, %rd4291;
	}
	shf.r.wrap.b32 	%r12118, %r12117, %r12116, 1;
	shf.r.wrap.b32 	%r12119, %r12116, %r12117, 1;
	mov.b64 	%rd1865, {%r12119, %r12118};
	xor.b64  	%rd1866, %rd1865, %rd1864;
	shf.r.wrap.b32 	%r12120, %r12117, %r12116, 8;
	shf.r.wrap.b32 	%r12121, %r12116, %r12117, 8;
	mov.b64 	%rd1867, {%r12121, %r12120};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	add.s64 	%rd1869, %rd4308, %rd4292;
	add.s64 	%rd1870, %rd1869, %rd1863;
	add.s64 	%rd4292, %rd1870, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12122,%dummy}, %rd4293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12123}, %rd4293;
	}
	shf.r.wrap.b32 	%r12124, %r12123, %r12122, 19;
	shf.r.wrap.b32 	%r12125, %r12122, %r12123, 19;
	mov.b64 	%rd1871, {%r12125, %r12124};
	shf.l.wrap.b32 	%r12126, %r12122, %r12123, 3;
	shf.l.wrap.b32 	%r12127, %r12123, %r12122, 3;
	mov.b64 	%rd1872, {%r12127, %r12126};
	shr.u64 	%rd1873, %rd4293, 6;
	xor.b64  	%rd1874, %rd1871, %rd1873;
	xor.b64  	%rd1875, %rd1874, %rd1872;
	shr.u64 	%rd1876, %rd4290, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12128,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12129}, %rd4290;
	}
	shf.r.wrap.b32 	%r12130, %r12129, %r12128, 1;
	shf.r.wrap.b32 	%r12131, %r12128, %r12129, 1;
	mov.b64 	%rd1877, {%r12131, %r12130};
	xor.b64  	%rd1878, %rd1877, %rd1876;
	shf.r.wrap.b32 	%r12132, %r12129, %r12128, 8;
	shf.r.wrap.b32 	%r12133, %r12128, %r12129, 8;
	mov.b64 	%rd1879, {%r12133, %r12132};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	add.s64 	%rd1881, %rd4309, %rd4291;
	add.s64 	%rd1882, %rd1881, %rd1875;
	add.s64 	%rd4291, %rd1882, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12134,%dummy}, %rd4292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12135}, %rd4292;
	}
	shf.r.wrap.b32 	%r12136, %r12135, %r12134, 19;
	shf.r.wrap.b32 	%r12137, %r12134, %r12135, 19;
	mov.b64 	%rd1883, {%r12137, %r12136};
	shf.l.wrap.b32 	%r12138, %r12134, %r12135, 3;
	shf.l.wrap.b32 	%r12139, %r12135, %r12134, 3;
	mov.b64 	%rd1884, {%r12139, %r12138};
	shr.u64 	%rd1885, %rd4292, 6;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	shr.u64 	%rd1888, %rd4289, 7;
	shf.r.wrap.b32 	%r12140, %r11979, %r11978, 1;
	shf.r.wrap.b32 	%r12141, %r11978, %r11979, 1;
	mov.b64 	%rd1889, {%r12141, %r12140};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.r.wrap.b32 	%r12142, %r11979, %r11978, 8;
	shf.r.wrap.b32 	%r12143, %r11978, %r11979, 8;
	mov.b64 	%rd1891, {%r12143, %r12142};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	add.s64 	%rd1893, %rd4310, %rd4290;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd4290, %rd1894, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12144,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12145}, %rd4291;
	}
	shf.r.wrap.b32 	%r12146, %r12145, %r12144, 19;
	shf.r.wrap.b32 	%r12147, %r12144, %r12145, 19;
	mov.b64 	%rd1895, {%r12147, %r12146};
	shf.l.wrap.b32 	%r12148, %r12144, %r12145, 3;
	shf.l.wrap.b32 	%r12149, %r12145, %r12144, 3;
	mov.b64 	%rd1896, {%r12149, %r12148};
	shr.u64 	%rd1897, %rd4291, 6;
	xor.b64  	%rd1898, %rd1895, %rd1897;
	xor.b64  	%rd1899, %rd1898, %rd1896;
	shr.u64 	%rd1900, %rd4288, 7;
	shf.r.wrap.b32 	%r12150, %r11991, %r11990, 1;
	shf.r.wrap.b32 	%r12151, %r11990, %r11991, 1;
	mov.b64 	%rd1901, {%r12151, %r12150};
	xor.b64  	%rd1902, %rd1901, %rd1900;
	shf.r.wrap.b32 	%r12152, %r11991, %r11990, 8;
	shf.r.wrap.b32 	%r12153, %r11990, %r11991, 8;
	mov.b64 	%rd1903, {%r12153, %r12152};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	add.s64 	%rd1905, %rd4311, %rd4289;
	add.s64 	%rd1906, %rd1905, %rd1899;
	add.s64 	%rd4289, %rd1906, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12154,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12155}, %rd4290;
	}
	shf.r.wrap.b32 	%r12156, %r12155, %r12154, 19;
	shf.r.wrap.b32 	%r12157, %r12154, %r12155, 19;
	mov.b64 	%rd1907, {%r12157, %r12156};
	shf.l.wrap.b32 	%r12158, %r12154, %r12155, 3;
	shf.l.wrap.b32 	%r12159, %r12155, %r12154, 3;
	mov.b64 	%rd1908, {%r12159, %r12158};
	shr.u64 	%rd1909, %rd4290, 6;
	xor.b64  	%rd1910, %rd1907, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1908;
	shf.r.wrap.b32 	%r12160, %r12003, %r12002, 1;
	shf.r.wrap.b32 	%r12161, %r12002, %r12003, 1;
	mov.b64 	%rd1912, {%r12161, %r12160};
	shf.r.wrap.b32 	%r12162, %r12003, %r12002, 8;
	shf.r.wrap.b32 	%r12163, %r12002, %r12003, 8;
	mov.b64 	%rd1913, {%r12163, %r12162};
	shr.u64 	%rd1914, %rd4304, 7;
	xor.b64  	%rd1915, %rd1912, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1913;
	add.s64 	%rd1917, %rd4295, %rd4288;
	add.s64 	%rd1918, %rd1917, %rd1911;
	add.s64 	%rd4288, %rd1918, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12164,%dummy}, %rd4300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12165}, %rd4300;
	}
	shf.r.wrap.b32 	%r12166, %r12165, %r12164, 18;
	shf.r.wrap.b32 	%r12167, %r12164, %r12165, 18;
	mov.b64 	%rd1919, {%r12167, %r12166};
	shf.r.wrap.b32 	%r12168, %r12165, %r12164, 14;
	shf.r.wrap.b32 	%r12169, %r12164, %r12165, 14;
	mov.b64 	%rd1920, {%r12169, %r12168};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	shf.l.wrap.b32 	%r12170, %r12164, %r12165, 23;
	shf.l.wrap.b32 	%r12171, %r12165, %r12164, 23;
	mov.b64 	%rd1922, {%r12171, %r12170};
	xor.b64  	%rd1923, %rd1921, %rd1922;
	xor.b64  	%rd1924, %rd4302, %rd4301;
	and.b64  	%rd1925, %rd1924, %rd4300;
	xor.b64  	%rd1926, %rd1925, %rd4302;
	add.s64 	%rd1927, %rd1926, %rd4303;
	add.s64 	%rd1928, %rd1927, %rd4304;
	add.s64 	%rd179, %rd4287, 128;
	ld.const.u64 	%rd1929, [%rd4287+128];
	add.s64 	%rd1930, %rd1928, %rd1929;
	add.s64 	%rd1931, %rd1930, %rd1923;
	add.s64 	%rd1932, %rd1931, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12172}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12173,%dummy}, %rd4296;
	}
	shf.l.wrap.b32 	%r12174, %r12173, %r12172, 30;
	shf.l.wrap.b32 	%r12175, %r12172, %r12173, 30;
	mov.b64 	%rd1933, {%r12175, %r12174};
	shf.r.wrap.b32 	%r12176, %r12172, %r12173, 28;
	shf.r.wrap.b32 	%r12177, %r12173, %r12172, 28;
	mov.b64 	%rd1934, {%r12177, %r12176};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	shf.l.wrap.b32 	%r12178, %r12173, %r12172, 25;
	shf.l.wrap.b32 	%r12179, %r12172, %r12173, 25;
	mov.b64 	%rd1936, {%r12179, %r12178};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	xor.b64  	%rd1938, %rd4297, %rd4296;
	and.b64  	%rd1939, %rd1938, %rd4298;
	and.b64  	%rd1940, %rd4297, %rd4296;
	or.b64  	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1931, %rd1941;
	add.s64 	%rd1943, %rd1942, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12180,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12181}, %rd1932;
	}
	shf.r.wrap.b32 	%r12182, %r12181, %r12180, 14;
	shf.r.wrap.b32 	%r12183, %r12180, %r12181, 14;
	mov.b64 	%rd1944, {%r12183, %r12182};
	shf.r.wrap.b32 	%r12184, %r12181, %r12180, 18;
	shf.r.wrap.b32 	%r12185, %r12180, %r12181, 18;
	mov.b64 	%rd1945, {%r12185, %r12184};
	xor.b64  	%rd1946, %rd1945, %rd1944;
	shf.l.wrap.b32 	%r12186, %r12180, %r12181, 23;
	shf.l.wrap.b32 	%r12187, %r12181, %r12180, 23;
	mov.b64 	%rd1947, {%r12187, %r12186};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	xor.b64  	%rd1949, %rd4301, %rd4300;
	and.b64  	%rd1950, %rd1932, %rd1949;
	xor.b64  	%rd1951, %rd1950, %rd4301;
	add.s64 	%rd1952, %rd4305, %rd4302;
	ld.const.u64 	%rd1953, [%rd4287+136];
	add.s64 	%rd1954, %rd1952, %rd1953;
	add.s64 	%rd1955, %rd1954, %rd1951;
	add.s64 	%rd1956, %rd1955, %rd1948;
	add.s64 	%rd1957, %rd1956, %rd4298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12188,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12189}, %rd1943;
	}
	shf.r.wrap.b32 	%r12190, %r12189, %r12188, 28;
	shf.r.wrap.b32 	%r12191, %r12188, %r12189, 28;
	mov.b64 	%rd1958, {%r12191, %r12190};
	shf.l.wrap.b32 	%r12192, %r12188, %r12189, 30;
	shf.l.wrap.b32 	%r12193, %r12189, %r12188, 30;
	mov.b64 	%rd1959, {%r12193, %r12192};
	xor.b64  	%rd1960, %rd1959, %rd1958;
	shf.l.wrap.b32 	%r12194, %r12188, %r12189, 25;
	shf.l.wrap.b32 	%r12195, %r12189, %r12188, 25;
	mov.b64 	%rd1961, {%r12195, %r12194};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	and.b64  	%rd1963, %rd1943, %rd4296;
	xor.b64  	%rd1964, %rd1943, %rd4296;
	and.b64  	%rd1965, %rd1964, %rd4297;
	or.b64  	%rd1966, %rd1965, %rd1963;
	add.s64 	%rd1967, %rd1956, %rd1966;
	add.s64 	%rd1968, %rd1967, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12196,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12197}, %rd1957;
	}
	shf.r.wrap.b32 	%r12198, %r12197, %r12196, 14;
	shf.r.wrap.b32 	%r12199, %r12196, %r12197, 14;
	mov.b64 	%rd1969, {%r12199, %r12198};
	shf.r.wrap.b32 	%r12200, %r12197, %r12196, 18;
	shf.r.wrap.b32 	%r12201, %r12196, %r12197, 18;
	mov.b64 	%rd1970, {%r12201, %r12200};
	xor.b64  	%rd1971, %rd1970, %rd1969;
	shf.l.wrap.b32 	%r12202, %r12196, %r12197, 23;
	shf.l.wrap.b32 	%r12203, %r12197, %r12196, 23;
	mov.b64 	%rd1972, {%r12203, %r12202};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	xor.b64  	%rd1974, %rd1932, %rd4300;
	and.b64  	%rd1975, %rd1957, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd4300;
	add.s64 	%rd1977, %rd4306, %rd4301;
	ld.const.u64 	%rd1978, [%rd4287+144];
	add.s64 	%rd1979, %rd1977, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1976;
	add.s64 	%rd1981, %rd1980, %rd1973;
	add.s64 	%rd1982, %rd1981, %rd4297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12204,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12205}, %rd1968;
	}
	shf.r.wrap.b32 	%r12206, %r12205, %r12204, 28;
	shf.r.wrap.b32 	%r12207, %r12204, %r12205, 28;
	mov.b64 	%rd1983, {%r12207, %r12206};
	shf.l.wrap.b32 	%r12208, %r12204, %r12205, 30;
	shf.l.wrap.b32 	%r12209, %r12205, %r12204, 30;
	mov.b64 	%rd1984, {%r12209, %r12208};
	xor.b64  	%rd1985, %rd1984, %rd1983;
	shf.l.wrap.b32 	%r12210, %r12204, %r12205, 25;
	shf.l.wrap.b32 	%r12211, %r12205, %r12204, 25;
	mov.b64 	%rd1986, {%r12211, %r12210};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	and.b64  	%rd1988, %rd1968, %rd1943;
	xor.b64  	%rd1989, %rd1968, %rd1943;
	and.b64  	%rd1990, %rd1989, %rd4296;
	or.b64  	%rd1991, %rd1990, %rd1988;
	add.s64 	%rd1992, %rd1981, %rd1991;
	add.s64 	%rd1993, %rd1992, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12212,%dummy}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12213}, %rd1982;
	}
	shf.r.wrap.b32 	%r12214, %r12213, %r12212, 14;
	shf.r.wrap.b32 	%r12215, %r12212, %r12213, 14;
	mov.b64 	%rd1994, {%r12215, %r12214};
	shf.r.wrap.b32 	%r12216, %r12213, %r12212, 18;
	shf.r.wrap.b32 	%r12217, %r12212, %r12213, 18;
	mov.b64 	%rd1995, {%r12217, %r12216};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r12218, %r12212, %r12213, 23;
	shf.l.wrap.b32 	%r12219, %r12213, %r12212, 23;
	mov.b64 	%rd1997, {%r12219, %r12218};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1957, %rd1932;
	and.b64  	%rd2000, %rd1982, %rd1999;
	xor.b64  	%rd2001, %rd2000, %rd1932;
	add.s64 	%rd2002, %rd4307, %rd4300;
	ld.const.u64 	%rd2003, [%rd4287+152];
	add.s64 	%rd2004, %rd2002, %rd2003;
	add.s64 	%rd2005, %rd2004, %rd2001;
	add.s64 	%rd2006, %rd2005, %rd1998;
	add.s64 	%rd2007, %rd2006, %rd4296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12220,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12221}, %rd1993;
	}
	shf.r.wrap.b32 	%r12222, %r12221, %r12220, 28;
	shf.r.wrap.b32 	%r12223, %r12220, %r12221, 28;
	mov.b64 	%rd2008, {%r12223, %r12222};
	shf.l.wrap.b32 	%r12224, %r12220, %r12221, 30;
	shf.l.wrap.b32 	%r12225, %r12221, %r12220, 30;
	mov.b64 	%rd2009, {%r12225, %r12224};
	xor.b64  	%rd2010, %rd2009, %rd2008;
	shf.l.wrap.b32 	%r12226, %r12220, %r12221, 25;
	shf.l.wrap.b32 	%r12227, %r12221, %r12220, 25;
	mov.b64 	%rd2011, {%r12227, %r12226};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	and.b64  	%rd2013, %rd1993, %rd1968;
	xor.b64  	%rd2014, %rd1993, %rd1968;
	and.b64  	%rd2015, %rd2014, %rd1943;
	or.b64  	%rd2016, %rd2015, %rd2013;
	add.s64 	%rd2017, %rd2006, %rd2016;
	add.s64 	%rd2018, %rd2017, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12228,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12229}, %rd2007;
	}
	shf.r.wrap.b32 	%r12230, %r12229, %r12228, 14;
	shf.r.wrap.b32 	%r12231, %r12228, %r12229, 14;
	mov.b64 	%rd2019, {%r12231, %r12230};
	shf.r.wrap.b32 	%r12232, %r12229, %r12228, 18;
	shf.r.wrap.b32 	%r12233, %r12228, %r12229, 18;
	mov.b64 	%rd2020, {%r12233, %r12232};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r12234, %r12228, %r12229, 23;
	shf.l.wrap.b32 	%r12235, %r12229, %r12228, 23;
	mov.b64 	%rd2022, {%r12235, %r12234};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd1982, %rd1957;
	and.b64  	%rd2025, %rd2007, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1957;
	add.s64 	%rd2027, %rd1932, %rd4308;
	ld.const.u64 	%rd2028, [%rd4287+160];
	add.s64 	%rd2029, %rd2027, %rd2028;
	add.s64 	%rd2030, %rd2029, %rd2026;
	add.s64 	%rd2031, %rd2030, %rd2023;
	add.s64 	%rd2032, %rd2031, %rd1943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12236,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12237}, %rd2018;
	}
	shf.r.wrap.b32 	%r12238, %r12237, %r12236, 28;
	shf.r.wrap.b32 	%r12239, %r12236, %r12237, 28;
	mov.b64 	%rd2033, {%r12239, %r12238};
	shf.l.wrap.b32 	%r12240, %r12236, %r12237, 30;
	shf.l.wrap.b32 	%r12241, %r12237, %r12236, 30;
	mov.b64 	%rd2034, {%r12241, %r12240};
	xor.b64  	%rd2035, %rd2034, %rd2033;
	shf.l.wrap.b32 	%r12242, %r12236, %r12237, 25;
	shf.l.wrap.b32 	%r12243, %r12237, %r12236, 25;
	mov.b64 	%rd2036, {%r12243, %r12242};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	and.b64  	%rd2038, %rd2018, %rd1993;
	xor.b64  	%rd2039, %rd2018, %rd1993;
	and.b64  	%rd2040, %rd2039, %rd1968;
	or.b64  	%rd2041, %rd2040, %rd2038;
	add.s64 	%rd2042, %rd2031, %rd2041;
	add.s64 	%rd2043, %rd2042, %rd2037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12244,%dummy}, %rd2032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12245}, %rd2032;
	}
	shf.r.wrap.b32 	%r12246, %r12245, %r12244, 14;
	shf.r.wrap.b32 	%r12247, %r12244, %r12245, 14;
	mov.b64 	%rd2044, {%r12247, %r12246};
	shf.r.wrap.b32 	%r12248, %r12245, %r12244, 18;
	shf.r.wrap.b32 	%r12249, %r12244, %r12245, 18;
	mov.b64 	%rd2045, {%r12249, %r12248};
	xor.b64  	%rd2046, %rd2045, %rd2044;
	shf.l.wrap.b32 	%r12250, %r12244, %r12245, 23;
	shf.l.wrap.b32 	%r12251, %r12245, %r12244, 23;
	mov.b64 	%rd2047, {%r12251, %r12250};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	xor.b64  	%rd2049, %rd2007, %rd1982;
	and.b64  	%rd2050, %rd2032, %rd2049;
	xor.b64  	%rd2051, %rd2050, %rd1982;
	add.s64 	%rd2052, %rd1957, %rd4309;
	ld.const.u64 	%rd2053, [%rd4287+168];
	add.s64 	%rd2054, %rd2052, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2051;
	add.s64 	%rd2056, %rd2055, %rd2048;
	add.s64 	%rd2057, %rd2056, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12252,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12253}, %rd2043;
	}
	shf.r.wrap.b32 	%r12254, %r12253, %r12252, 28;
	shf.r.wrap.b32 	%r12255, %r12252, %r12253, 28;
	mov.b64 	%rd2058, {%r12255, %r12254};
	shf.l.wrap.b32 	%r12256, %r12252, %r12253, 30;
	shf.l.wrap.b32 	%r12257, %r12253, %r12252, 30;
	mov.b64 	%rd2059, {%r12257, %r12256};
	xor.b64  	%rd2060, %rd2059, %rd2058;
	shf.l.wrap.b32 	%r12258, %r12252, %r12253, 25;
	shf.l.wrap.b32 	%r12259, %r12253, %r12252, 25;
	mov.b64 	%rd2061, {%r12259, %r12258};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	and.b64  	%rd2063, %rd2043, %rd2018;
	xor.b64  	%rd2064, %rd2043, %rd2018;
	and.b64  	%rd2065, %rd2064, %rd1993;
	or.b64  	%rd2066, %rd2065, %rd2063;
	add.s64 	%rd2067, %rd2056, %rd2066;
	add.s64 	%rd2068, %rd2067, %rd2062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12260,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12261}, %rd2057;
	}
	shf.r.wrap.b32 	%r12262, %r12261, %r12260, 14;
	shf.r.wrap.b32 	%r12263, %r12260, %r12261, 14;
	mov.b64 	%rd2069, {%r12263, %r12262};
	shf.r.wrap.b32 	%r12264, %r12261, %r12260, 18;
	shf.r.wrap.b32 	%r12265, %r12260, %r12261, 18;
	mov.b64 	%rd2070, {%r12265, %r12264};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r12266, %r12260, %r12261, 23;
	shf.l.wrap.b32 	%r12267, %r12261, %r12260, 23;
	mov.b64 	%rd2072, {%r12267, %r12266};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2032, %rd2007;
	and.b64  	%rd2075, %rd2057, %rd2074;
	xor.b64  	%rd2076, %rd2075, %rd2007;
	add.s64 	%rd2077, %rd1982, %rd4310;
	ld.const.u64 	%rd2078, [%rd4287+176];
	add.s64 	%rd2079, %rd2077, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2076;
	add.s64 	%rd2081, %rd2080, %rd2073;
	add.s64 	%rd2082, %rd2081, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12268,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12269}, %rd2068;
	}
	shf.r.wrap.b32 	%r12270, %r12269, %r12268, 28;
	shf.r.wrap.b32 	%r12271, %r12268, %r12269, 28;
	mov.b64 	%rd2083, {%r12271, %r12270};
	shf.l.wrap.b32 	%r12272, %r12268, %r12269, 30;
	shf.l.wrap.b32 	%r12273, %r12269, %r12268, 30;
	mov.b64 	%rd2084, {%r12273, %r12272};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	shf.l.wrap.b32 	%r12274, %r12268, %r12269, 25;
	shf.l.wrap.b32 	%r12275, %r12269, %r12268, 25;
	mov.b64 	%rd2086, {%r12275, %r12274};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	and.b64  	%rd2088, %rd2068, %rd2043;
	xor.b64  	%rd2089, %rd2068, %rd2043;
	and.b64  	%rd2090, %rd2089, %rd2018;
	or.b64  	%rd2091, %rd2090, %rd2088;
	add.s64 	%rd2092, %rd2081, %rd2091;
	add.s64 	%rd2093, %rd2092, %rd2087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12276,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12277}, %rd2082;
	}
	shf.r.wrap.b32 	%r12278, %r12277, %r12276, 14;
	shf.r.wrap.b32 	%r12279, %r12276, %r12277, 14;
	mov.b64 	%rd2094, {%r12279, %r12278};
	shf.r.wrap.b32 	%r12280, %r12277, %r12276, 18;
	shf.r.wrap.b32 	%r12281, %r12276, %r12277, 18;
	mov.b64 	%rd2095, {%r12281, %r12280};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r12282, %r12276, %r12277, 23;
	shf.l.wrap.b32 	%r12283, %r12277, %r12276, 23;
	mov.b64 	%rd2097, {%r12283, %r12282};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	xor.b64  	%rd2099, %rd2057, %rd2032;
	and.b64  	%rd2100, %rd2082, %rd2099;
	xor.b64  	%rd2101, %rd2100, %rd2032;
	add.s64 	%rd2102, %rd2007, %rd4311;
	ld.const.u64 	%rd2103, [%rd4287+184];
	add.s64 	%rd2104, %rd2102, %rd2103;
	add.s64 	%rd2105, %rd2104, %rd2101;
	add.s64 	%rd2106, %rd2105, %rd2098;
	add.s64 	%rd2107, %rd2106, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12284,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12285}, %rd2093;
	}
	shf.r.wrap.b32 	%r12286, %r12285, %r12284, 28;
	shf.r.wrap.b32 	%r12287, %r12284, %r12285, 28;
	mov.b64 	%rd2108, {%r12287, %r12286};
	shf.l.wrap.b32 	%r12288, %r12284, %r12285, 30;
	shf.l.wrap.b32 	%r12289, %r12285, %r12284, 30;
	mov.b64 	%rd2109, {%r12289, %r12288};
	xor.b64  	%rd2110, %rd2109, %rd2108;
	shf.l.wrap.b32 	%r12290, %r12284, %r12285, 25;
	shf.l.wrap.b32 	%r12291, %r12285, %r12284, 25;
	mov.b64 	%rd2111, {%r12291, %r12290};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	and.b64  	%rd2113, %rd2093, %rd2068;
	xor.b64  	%rd2114, %rd2093, %rd2068;
	and.b64  	%rd2115, %rd2114, %rd2043;
	or.b64  	%rd2116, %rd2115, %rd2113;
	add.s64 	%rd2117, %rd2106, %rd2116;
	add.s64 	%rd2118, %rd2117, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12292,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12293}, %rd2107;
	}
	shf.r.wrap.b32 	%r12294, %r12293, %r12292, 14;
	shf.r.wrap.b32 	%r12295, %r12292, %r12293, 14;
	mov.b64 	%rd2119, {%r12295, %r12294};
	shf.r.wrap.b32 	%r12296, %r12293, %r12292, 18;
	shf.r.wrap.b32 	%r12297, %r12292, %r12293, 18;
	mov.b64 	%rd2120, {%r12297, %r12296};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	shf.l.wrap.b32 	%r12298, %r12292, %r12293, 23;
	shf.l.wrap.b32 	%r12299, %r12293, %r12292, 23;
	mov.b64 	%rd2122, {%r12299, %r12298};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	xor.b64  	%rd2124, %rd2082, %rd2057;
	and.b64  	%rd2125, %rd2107, %rd2124;
	xor.b64  	%rd2126, %rd2125, %rd2057;
	add.s64 	%rd2127, %rd2032, %rd4295;
	ld.const.u64 	%rd2128, [%rd4287+192];
	add.s64 	%rd2129, %rd2127, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2126;
	add.s64 	%rd2131, %rd2130, %rd2123;
	add.s64 	%rd2132, %rd2131, %rd2043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12300,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12301}, %rd2118;
	}
	shf.r.wrap.b32 	%r12302, %r12301, %r12300, 28;
	shf.r.wrap.b32 	%r12303, %r12300, %r12301, 28;
	mov.b64 	%rd2133, {%r12303, %r12302};
	shf.l.wrap.b32 	%r12304, %r12300, %r12301, 30;
	shf.l.wrap.b32 	%r12305, %r12301, %r12300, 30;
	mov.b64 	%rd2134, {%r12305, %r12304};
	xor.b64  	%rd2135, %rd2134, %rd2133;
	shf.l.wrap.b32 	%r12306, %r12300, %r12301, 25;
	shf.l.wrap.b32 	%r12307, %r12301, %r12300, 25;
	mov.b64 	%rd2136, {%r12307, %r12306};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	and.b64  	%rd2138, %rd2118, %rd2093;
	xor.b64  	%rd2139, %rd2118, %rd2093;
	and.b64  	%rd2140, %rd2139, %rd2068;
	or.b64  	%rd2141, %rd2140, %rd2138;
	add.s64 	%rd2142, %rd2131, %rd2141;
	add.s64 	%rd2143, %rd2142, %rd2137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12308,%dummy}, %rd2132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12309}, %rd2132;
	}
	shf.r.wrap.b32 	%r12310, %r12309, %r12308, 14;
	shf.r.wrap.b32 	%r12311, %r12308, %r12309, 14;
	mov.b64 	%rd2144, {%r12311, %r12310};
	shf.r.wrap.b32 	%r12312, %r12309, %r12308, 18;
	shf.r.wrap.b32 	%r12313, %r12308, %r12309, 18;
	mov.b64 	%rd2145, {%r12313, %r12312};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r12314, %r12308, %r12309, 23;
	shf.l.wrap.b32 	%r12315, %r12309, %r12308, 23;
	mov.b64 	%rd2147, {%r12315, %r12314};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2107, %rd2082;
	and.b64  	%rd2150, %rd2132, %rd2149;
	xor.b64  	%rd2151, %rd2150, %rd2082;
	add.s64 	%rd2152, %rd2057, %rd4294;
	ld.const.u64 	%rd2153, [%rd4287+200];
	add.s64 	%rd2154, %rd2152, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2151;
	add.s64 	%rd2156, %rd2155, %rd2148;
	add.s64 	%rd2157, %rd2156, %rd2068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12316,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12317}, %rd2143;
	}
	shf.r.wrap.b32 	%r12318, %r12317, %r12316, 28;
	shf.r.wrap.b32 	%r12319, %r12316, %r12317, 28;
	mov.b64 	%rd2158, {%r12319, %r12318};
	shf.l.wrap.b32 	%r12320, %r12316, %r12317, 30;
	shf.l.wrap.b32 	%r12321, %r12317, %r12316, 30;
	mov.b64 	%rd2159, {%r12321, %r12320};
	xor.b64  	%rd2160, %rd2159, %rd2158;
	shf.l.wrap.b32 	%r12322, %r12316, %r12317, 25;
	shf.l.wrap.b32 	%r12323, %r12317, %r12316, 25;
	mov.b64 	%rd2161, {%r12323, %r12322};
	xor.b64  	%rd2162, %rd2160, %rd2161;
	and.b64  	%rd2163, %rd2143, %rd2118;
	xor.b64  	%rd2164, %rd2143, %rd2118;
	and.b64  	%rd2165, %rd2164, %rd2093;
	or.b64  	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2156, %rd2166;
	add.s64 	%rd2168, %rd2167, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12324,%dummy}, %rd2157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12325}, %rd2157;
	}
	shf.r.wrap.b32 	%r12326, %r12325, %r12324, 14;
	shf.r.wrap.b32 	%r12327, %r12324, %r12325, 14;
	mov.b64 	%rd2169, {%r12327, %r12326};
	shf.r.wrap.b32 	%r12328, %r12325, %r12324, 18;
	shf.r.wrap.b32 	%r12329, %r12324, %r12325, 18;
	mov.b64 	%rd2170, {%r12329, %r12328};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r12330, %r12324, %r12325, 23;
	shf.l.wrap.b32 	%r12331, %r12325, %r12324, 23;
	mov.b64 	%rd2172, {%r12331, %r12330};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2132, %rd2107;
	and.b64  	%rd2175, %rd2157, %rd2174;
	xor.b64  	%rd2176, %rd2175, %rd2107;
	add.s64 	%rd2177, %rd2082, %rd4293;
	ld.const.u64 	%rd2178, [%rd4287+208];
	add.s64 	%rd2179, %rd2177, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd2176;
	add.s64 	%rd2181, %rd2180, %rd2173;
	add.s64 	%rd2182, %rd2181, %rd2093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12332,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12333}, %rd2168;
	}
	shf.r.wrap.b32 	%r12334, %r12333, %r12332, 28;
	shf.r.wrap.b32 	%r12335, %r12332, %r12333, 28;
	mov.b64 	%rd2183, {%r12335, %r12334};
	shf.l.wrap.b32 	%r12336, %r12332, %r12333, 30;
	shf.l.wrap.b32 	%r12337, %r12333, %r12332, 30;
	mov.b64 	%rd2184, {%r12337, %r12336};
	xor.b64  	%rd2185, %rd2184, %rd2183;
	shf.l.wrap.b32 	%r12338, %r12332, %r12333, 25;
	shf.l.wrap.b32 	%r12339, %r12333, %r12332, 25;
	mov.b64 	%rd2186, {%r12339, %r12338};
	xor.b64  	%rd2187, %rd2185, %rd2186;
	and.b64  	%rd2188, %rd2168, %rd2143;
	xor.b64  	%rd2189, %rd2168, %rd2143;
	and.b64  	%rd2190, %rd2189, %rd2118;
	or.b64  	%rd2191, %rd2190, %rd2188;
	add.s64 	%rd2192, %rd2181, %rd2191;
	add.s64 	%rd2193, %rd2192, %rd2187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12340,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12341}, %rd2182;
	}
	shf.r.wrap.b32 	%r12342, %r12341, %r12340, 14;
	shf.r.wrap.b32 	%r12343, %r12340, %r12341, 14;
	mov.b64 	%rd2194, {%r12343, %r12342};
	shf.r.wrap.b32 	%r12344, %r12341, %r12340, 18;
	shf.r.wrap.b32 	%r12345, %r12340, %r12341, 18;
	mov.b64 	%rd2195, {%r12345, %r12344};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	shf.l.wrap.b32 	%r12346, %r12340, %r12341, 23;
	shf.l.wrap.b32 	%r12347, %r12341, %r12340, 23;
	mov.b64 	%rd2197, {%r12347, %r12346};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	xor.b64  	%rd2199, %rd2157, %rd2132;
	and.b64  	%rd2200, %rd2182, %rd2199;
	xor.b64  	%rd2201, %rd2200, %rd2132;
	add.s64 	%rd2202, %rd2107, %rd4292;
	ld.const.u64 	%rd2203, [%rd4287+216];
	add.s64 	%rd2204, %rd2202, %rd2203;
	add.s64 	%rd2205, %rd2204, %rd2201;
	add.s64 	%rd2206, %rd2205, %rd2198;
	add.s64 	%rd2207, %rd2206, %rd2118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12348,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12349}, %rd2193;
	}
	shf.r.wrap.b32 	%r12350, %r12349, %r12348, 28;
	shf.r.wrap.b32 	%r12351, %r12348, %r12349, 28;
	mov.b64 	%rd2208, {%r12351, %r12350};
	shf.l.wrap.b32 	%r12352, %r12348, %r12349, 30;
	shf.l.wrap.b32 	%r12353, %r12349, %r12348, 30;
	mov.b64 	%rd2209, {%r12353, %r12352};
	xor.b64  	%rd2210, %rd2209, %rd2208;
	shf.l.wrap.b32 	%r12354, %r12348, %r12349, 25;
	shf.l.wrap.b32 	%r12355, %r12349, %r12348, 25;
	mov.b64 	%rd2211, {%r12355, %r12354};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	and.b64  	%rd2213, %rd2193, %rd2168;
	xor.b64  	%rd2214, %rd2193, %rd2168;
	and.b64  	%rd2215, %rd2214, %rd2143;
	or.b64  	%rd2216, %rd2215, %rd2213;
	add.s64 	%rd2217, %rd2206, %rd2216;
	add.s64 	%rd2218, %rd2217, %rd2212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12356,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12357}, %rd2207;
	}
	shf.r.wrap.b32 	%r12358, %r12357, %r12356, 14;
	shf.r.wrap.b32 	%r12359, %r12356, %r12357, 14;
	mov.b64 	%rd2219, {%r12359, %r12358};
	shf.r.wrap.b32 	%r12360, %r12357, %r12356, 18;
	shf.r.wrap.b32 	%r12361, %r12356, %r12357, 18;
	mov.b64 	%rd2220, {%r12361, %r12360};
	xor.b64  	%rd2221, %rd2220, %rd2219;
	shf.l.wrap.b32 	%r12362, %r12356, %r12357, 23;
	shf.l.wrap.b32 	%r12363, %r12357, %r12356, 23;
	mov.b64 	%rd2222, {%r12363, %r12362};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	xor.b64  	%rd2224, %rd2182, %rd2157;
	and.b64  	%rd2225, %rd2207, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2157;
	add.s64 	%rd2227, %rd2132, %rd4291;
	ld.const.u64 	%rd2228, [%rd4287+224];
	add.s64 	%rd2229, %rd2227, %rd2228;
	add.s64 	%rd2230, %rd2229, %rd2226;
	add.s64 	%rd2231, %rd2230, %rd2223;
	add.s64 	%rd4303, %rd2231, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12364,%dummy}, %rd2218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12365}, %rd2218;
	}
	shf.r.wrap.b32 	%r12366, %r12365, %r12364, 28;
	shf.r.wrap.b32 	%r12367, %r12364, %r12365, 28;
	mov.b64 	%rd2232, {%r12367, %r12366};
	shf.l.wrap.b32 	%r12368, %r12364, %r12365, 30;
	shf.l.wrap.b32 	%r12369, %r12365, %r12364, 30;
	mov.b64 	%rd2233, {%r12369, %r12368};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	shf.l.wrap.b32 	%r12370, %r12364, %r12365, 25;
	shf.l.wrap.b32 	%r12371, %r12365, %r12364, 25;
	mov.b64 	%rd2235, {%r12371, %r12370};
	xor.b64  	%rd2236, %rd2234, %rd2235;
	and.b64  	%rd2237, %rd2218, %rd2193;
	xor.b64  	%rd2238, %rd2218, %rd2193;
	and.b64  	%rd2239, %rd2238, %rd2168;
	or.b64  	%rd2240, %rd2239, %rd2237;
	add.s64 	%rd2241, %rd2231, %rd2240;
	add.s64 	%rd4299, %rd2241, %rd2236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12372,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12373}, %rd4303;
	}
	shf.r.wrap.b32 	%r12374, %r12373, %r12372, 14;
	shf.r.wrap.b32 	%r12375, %r12372, %r12373, 14;
	mov.b64 	%rd2242, {%r12375, %r12374};
	shf.r.wrap.b32 	%r12376, %r12373, %r12372, 18;
	shf.r.wrap.b32 	%r12377, %r12372, %r12373, 18;
	mov.b64 	%rd2243, {%r12377, %r12376};
	xor.b64  	%rd2244, %rd2243, %rd2242;
	shf.l.wrap.b32 	%r12378, %r12372, %r12373, 23;
	shf.l.wrap.b32 	%r12379, %r12373, %r12372, 23;
	mov.b64 	%rd2245, {%r12379, %r12378};
	xor.b64  	%rd2246, %rd2244, %rd2245;
	xor.b64  	%rd2247, %rd2207, %rd2182;
	and.b64  	%rd2248, %rd4303, %rd2247;
	xor.b64  	%rd2249, %rd2248, %rd2182;
	add.s64 	%rd2250, %rd2157, %rd4290;
	ld.const.u64 	%rd2251, [%rd4287+232];
	add.s64 	%rd2252, %rd2250, %rd2251;
	add.s64 	%rd2253, %rd2252, %rd2249;
	add.s64 	%rd2254, %rd2253, %rd2246;
	add.s64 	%rd4302, %rd2254, %rd2168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12380,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12381}, %rd4299;
	}
	shf.r.wrap.b32 	%r12382, %r12381, %r12380, 28;
	shf.r.wrap.b32 	%r12383, %r12380, %r12381, 28;
	mov.b64 	%rd2255, {%r12383, %r12382};
	shf.l.wrap.b32 	%r12384, %r12380, %r12381, 30;
	shf.l.wrap.b32 	%r12385, %r12381, %r12380, 30;
	mov.b64 	%rd2256, {%r12385, %r12384};
	xor.b64  	%rd2257, %rd2256, %rd2255;
	shf.l.wrap.b32 	%r12386, %r12380, %r12381, 25;
	shf.l.wrap.b32 	%r12387, %r12381, %r12380, 25;
	mov.b64 	%rd2258, {%r12387, %r12386};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	and.b64  	%rd2260, %rd4299, %rd2218;
	xor.b64  	%rd2261, %rd4299, %rd2218;
	and.b64  	%rd2262, %rd2261, %rd2193;
	or.b64  	%rd2263, %rd2262, %rd2260;
	add.s64 	%rd2264, %rd2254, %rd2263;
	add.s64 	%rd4298, %rd2264, %rd2259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12388,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12389}, %rd4302;
	}
	shf.r.wrap.b32 	%r12390, %r12389, %r12388, 14;
	shf.r.wrap.b32 	%r12391, %r12388, %r12389, 14;
	mov.b64 	%rd2265, {%r12391, %r12390};
	shf.r.wrap.b32 	%r12392, %r12389, %r12388, 18;
	shf.r.wrap.b32 	%r12393, %r12388, %r12389, 18;
	mov.b64 	%rd2266, {%r12393, %r12392};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r12394, %r12388, %r12389, 23;
	shf.l.wrap.b32 	%r12395, %r12389, %r12388, 23;
	mov.b64 	%rd2268, {%r12395, %r12394};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	xor.b64  	%rd2270, %rd4303, %rd2207;
	and.b64  	%rd2271, %rd4302, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2207;
	add.s64 	%rd2273, %rd2182, %rd4289;
	ld.const.u64 	%rd2274, [%rd4287+240];
	add.s64 	%rd2275, %rd2273, %rd2274;
	add.s64 	%rd2276, %rd2275, %rd2272;
	add.s64 	%rd2277, %rd2276, %rd2269;
	add.s64 	%rd4301, %rd2277, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12396,%dummy}, %rd4298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12397}, %rd4298;
	}
	shf.r.wrap.b32 	%r12398, %r12397, %r12396, 28;
	shf.r.wrap.b32 	%r12399, %r12396, %r12397, 28;
	mov.b64 	%rd2278, {%r12399, %r12398};
	shf.l.wrap.b32 	%r12400, %r12396, %r12397, 30;
	shf.l.wrap.b32 	%r12401, %r12397, %r12396, 30;
	mov.b64 	%rd2279, {%r12401, %r12400};
	xor.b64  	%rd2280, %rd2279, %rd2278;
	shf.l.wrap.b32 	%r12402, %r12396, %r12397, 25;
	shf.l.wrap.b32 	%r12403, %r12397, %r12396, 25;
	mov.b64 	%rd2281, {%r12403, %r12402};
	xor.b64  	%rd2282, %rd2280, %rd2281;
	and.b64  	%rd2283, %rd4298, %rd4299;
	xor.b64  	%rd2284, %rd4298, %rd4299;
	and.b64  	%rd2285, %rd2284, %rd2218;
	or.b64  	%rd2286, %rd2285, %rd2283;
	add.s64 	%rd2287, %rd2277, %rd2286;
	add.s64 	%rd4297, %rd2287, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12404,%dummy}, %rd4301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12405}, %rd4301;
	}
	shf.r.wrap.b32 	%r12406, %r12405, %r12404, 14;
	shf.r.wrap.b32 	%r12407, %r12404, %r12405, 14;
	mov.b64 	%rd2288, {%r12407, %r12406};
	shf.r.wrap.b32 	%r12408, %r12405, %r12404, 18;
	shf.r.wrap.b32 	%r12409, %r12404, %r12405, 18;
	mov.b64 	%rd2289, {%r12409, %r12408};
	xor.b64  	%rd2290, %rd2289, %rd2288;
	shf.l.wrap.b32 	%r12410, %r12404, %r12405, 23;
	shf.l.wrap.b32 	%r12411, %r12405, %r12404, 23;
	mov.b64 	%rd2291, {%r12411, %r12410};
	xor.b64  	%rd2292, %rd2290, %rd2291;
	xor.b64  	%rd2293, %rd4302, %rd4303;
	and.b64  	%rd2294, %rd4301, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd4303;
	add.s64 	%rd2296, %rd2207, %rd4288;
	ld.const.u64 	%rd2297, [%rd4287+248];
	add.s64 	%rd2298, %rd2296, %rd2297;
	add.s64 	%rd2299, %rd2298, %rd2295;
	add.s64 	%rd2300, %rd2299, %rd2292;
	add.s64 	%rd4300, %rd2300, %rd2218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12412,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12413}, %rd4297;
	}
	shf.r.wrap.b32 	%r12414, %r12413, %r12412, 28;
	shf.r.wrap.b32 	%r12415, %r12412, %r12413, 28;
	mov.b64 	%rd2301, {%r12415, %r12414};
	shf.l.wrap.b32 	%r12416, %r12412, %r12413, 30;
	shf.l.wrap.b32 	%r12417, %r12413, %r12412, 30;
	mov.b64 	%rd2302, {%r12417, %r12416};
	xor.b64  	%rd2303, %rd2302, %rd2301;
	shf.l.wrap.b32 	%r12418, %r12412, %r12413, 25;
	shf.l.wrap.b32 	%r12419, %r12413, %r12412, 25;
	mov.b64 	%rd2304, {%r12419, %r12418};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	and.b64  	%rd2306, %rd4297, %rd4298;
	xor.b64  	%rd2307, %rd4297, %rd4298;
	and.b64  	%rd2308, %rd2307, %rd4299;
	or.b64  	%rd2309, %rd2308, %rd2306;
	add.s64 	%rd2310, %rd2300, %rd2309;
	add.s64 	%rd4296, %rd2310, %rd2305;
	add.s32 	%r19332, %r19332, 16;
	setp.lt.s32	%p101, %r19332, 80;
	mov.u64 	%rd4287, %rd179;
	@%p101 bra 	BB2_213;

	add.s64 	%rd2312, %rd4296, %rd98;
	st.local.u64 	[%rd17], %rd2312;
	add.s64 	%rd2313, %rd4297, %rd120;
	st.local.u64 	[%rd17+8], %rd2313;
	add.s64 	%rd2314, %rd4298, %rd121;
	st.local.u64 	[%rd17+16], %rd2314;
	add.s64 	%rd2315, %rd4299, %rd119;
	st.local.u64 	[%rd17+24], %rd2315;
	add.s64 	%rd2316, %rd4300, %rd115;
	st.local.u64 	[%rd17+32], %rd2316;
	add.s64 	%rd2317, %rd4301, %rd117;
	st.local.u64 	[%rd17+40], %rd2317;
	add.s64 	%rd2318, %rd4302, %rd116;
	st.local.u64 	[%rd17+48], %rd2318;
	add.s64 	%rd2319, %rd4303, %rd118;
	st.local.u64 	[%rd17+56], %rd2319;
	mov.u32 	%r12420, 0;
	st.local.u32 	[%rd17+64], %r12420;
	st.local.u32 	[%rd17+68], %r12420;
	st.local.u32 	[%rd17+72], %r12420;
	st.local.u32 	[%rd17+76], %r12420;
	st.local.u32 	[%rd17+80], %r12420;
	st.local.u32 	[%rd17+84], %r12420;
	st.local.u32 	[%rd17+88], %r12420;
	st.local.u32 	[%rd17+92], %r12420;
	st.local.u32 	[%rd17+96], %r12420;
	st.local.u32 	[%rd17+100], %r12420;
	st.local.u32 	[%rd17+104], %r12420;
	st.local.u32 	[%rd17+108], %r12420;
	st.local.u32 	[%rd17+112], %r12420;
	st.local.u32 	[%rd17+116], %r12420;
	st.local.u32 	[%rd17+120], %r12420;
	st.local.u32 	[%rd17+124], %r12420;
	st.local.u32 	[%rd17+128], %r12420;
	st.local.u32 	[%rd17+132], %r12420;
	st.local.u32 	[%rd17+136], %r12420;
	st.local.u32 	[%rd17+140], %r12420;
	st.local.u32 	[%rd17+144], %r12420;
	st.local.u32 	[%rd17+148], %r12420;
	st.local.u32 	[%rd17+152], %r12420;
	st.local.u32 	[%rd17+156], %r12420;
	st.local.u32 	[%rd17+160], %r12420;
	st.local.u32 	[%rd17+164], %r12420;
	st.local.u32 	[%rd17+168], %r12420;
	st.local.u32 	[%rd17+172], %r12420;
	st.local.u32 	[%rd17+176], %r12420;
	st.local.u32 	[%rd17+180], %r12420;
	mov.u64 	%rd2320, 0;
	st.local.u32 	[%rd17+188], %rd2320;
	st.local.u32 	[%rd17+184], %rd2320;
	bra.uni 	BB2_215;

BB2_5:
	mov.u32 	%r19267, 0;
	setp.gt.s32	%p5, %r70, 15;
	@%p5 bra 	BB2_38;

	setp.gt.s32	%p29, %r70, 7;
	@%p29 bra 	BB2_23;

	setp.gt.s32	%p41, %r70, 3;
	@%p41 bra 	BB2_15;

	setp.gt.s32	%p47, %r70, 1;
	@%p47 bra 	BB2_12;

	setp.eq.s32	%p50, %r70, 0;
	@%p50 bra 	BB2_90;
	bra.uni 	BB2_10;

BB2_90:
	mov.u32 	%r19267, 0;
	// inline asm
	prmt.b32 %r19270, %r19267, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19235, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19236, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19237, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19266, %r2953, %r19267, %r71;
	// inline asm
	mov.u32 	%r19268, %r19267;
	mov.u32 	%r19269, %r19267;
	bra.uni 	BB2_91;

BB2_127:
	setp.gt.s32	%p54, %r70, 23;
	@%p54 bra 	BB2_143;

	setp.gt.s32	%p66, %r70, 19;
	@%p66 bra 	BB2_136;

	setp.gt.s32	%p72, %r70, 17;
	@%p72 bra 	BB2_133;

	setp.eq.s32	%p75, %r70, 16;
	@%p75 bra 	BB2_184;
	bra.uni 	BB2_131;

BB2_184:
	// inline asm
	prmt.b32 %r3015, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2985, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	bra.uni 	BB2_185;

BB2_38:
	setp.gt.s32	%p6, %r70, 23;
	@%p6 bra 	BB2_54;

	setp.gt.s32	%p18, %r70, 19;
	@%p18 bra 	BB2_47;

	setp.gt.s32	%p24, %r70, 17;
	@%p24 bra 	BB2_44;

	setp.eq.s32	%p27, %r70, 16;
	@%p27 bra 	BB2_77;
	bra.uni 	BB2_42;

BB2_77:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19286, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19283, %r19235;
	mov.u32 	%r19284, %r19235;
	mov.u32 	%r19285, %r19235;
	bra.uni 	BB2_84;

BB2_112:
	setp.gt.s32	%p78, %r70, 11;
	@%p78 bra 	BB2_120;

	setp.gt.s32	%p84, %r70, 9;
	@%p84 bra 	BB2_117;

	setp.eq.s32	%p87, %r70, 8;
	@%p87 bra 	BB2_198;
	bra.uni 	BB2_115;

BB2_198:
	// inline asm
	prmt.b32 %r3015, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2969, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	bra.uni 	BB2_199;

BB2_23:
	setp.gt.s32	%p30, %r70, 11;
	@%p30 bra 	BB2_31;

	setp.gt.s32	%p36, %r70, 9;
	@%p36 bra 	BB2_28;

	setp.eq.s32	%p39, %r70, 8;
	@%p39 bra 	BB2_81;
	bra.uni 	BB2_26;

BB2_81:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19278, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19275, %r19235;
	mov.u32 	%r19276, %r19235;
	mov.u32 	%r19277, %r19235;
	bra.uni 	BB2_82;

BB2_143:
	setp.gt.s32	%p55, %r70, 27;
	@%p55 bra 	BB2_151;

	setp.gt.s32	%p61, %r70, 25;
	@%p61 bra 	BB2_148;

	setp.eq.s32	%p64, %r70, 24;
	@%p64 bra 	BB2_170;
	bra.uni 	BB2_146;

BB2_170:
	// inline asm
	prmt.b32 %r3015, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3001, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	bra.uni 	BB2_171;

BB2_54:
	setp.gt.s32	%p7, %r70, 27;
	@%p7 bra 	BB2_62;

	setp.gt.s32	%p13, %r70, 25;
	@%p13 bra 	BB2_59;

	setp.eq.s32	%p16, %r70, 24;
	@%p16 bra 	BB2_73;
	bra.uni 	BB2_57;

BB2_73:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19294, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19291, %r19235;
	mov.u32 	%r19292, %r19235;
	mov.u32 	%r19293, %r19235;
	bra.uni 	BB2_86;

BB2_105:
	setp.gt.s32	%p90, %r70, 5;
	@%p90 bra 	BB2_109;

	setp.eq.s32	%p93, %r70, 4;
	@%p93 bra 	BB2_205;
	bra.uni 	BB2_107;

BB2_205:
	// inline asm
	prmt.b32 %r3015, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2961, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_15:
	setp.gt.s32	%p42, %r70, 5;
	@%p42 bra 	BB2_19;

	setp.eq.s32	%p45, %r70, 4;
	@%p45 bra 	BB2_88;
	bra.uni 	BB2_17;

BB2_88:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19274, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19271, %r19235;
	mov.u32 	%r19272, %r19235;
	mov.u32 	%r19273, %r19235;
	bra.uni 	BB2_22;

BB2_136:
	setp.gt.s32	%p67, %r70, 21;
	@%p67 bra 	BB2_140;

	setp.eq.s32	%p70, %r70, 20;
	@%p70 bra 	BB2_177;
	bra.uni 	BB2_138;

BB2_177:
	// inline asm
	prmt.b32 %r3015, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2993, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	bra.uni 	BB2_178;

BB2_47:
	setp.gt.s32	%p19, %r70, 21;
	@%p19 bra 	BB2_51;

	setp.eq.s32	%p22, %r70, 20;
	@%p22 bra 	BB2_75;
	bra.uni 	BB2_49;

BB2_75:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19290, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19287, %r19235;
	mov.u32 	%r19288, %r19235;
	mov.u32 	%r19289, %r19235;
	bra.uni 	BB2_85;

BB2_120:
	setp.gt.s32	%p79, %r70, 13;
	@%p79 bra 	BB2_124;

	setp.eq.s32	%p82, %r70, 12;
	@%p82 bra 	BB2_191;
	bra.uni 	BB2_122;

BB2_191:
	// inline asm
	prmt.b32 %r3015, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2977, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	bra.uni 	BB2_192;

BB2_31:
	setp.gt.s32	%p31, %r70, 13;
	@%p31 bra 	BB2_35;

	setp.eq.s32	%p34, %r70, 12;
	@%p34 bra 	BB2_79;
	bra.uni 	BB2_33;

BB2_79:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19282, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19279, %r19235;
	mov.u32 	%r19280, %r19235;
	mov.u32 	%r19281, %r19235;
	bra.uni 	BB2_83;

BB2_151:
	setp.gt.s32	%p56, %r70, 29;
	@%p56 bra 	BB2_155;

	setp.eq.s32	%p59, %r70, 28;
	@%p59 bra 	BB2_163;
	bra.uni 	BB2_153;

BB2_163:
	// inline asm
	prmt.b32 %r3015, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3009, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	mov.u32 	%r3007, %r2959;
	bra.uni 	BB2_164;

BB2_62:
	setp.gt.s32	%p8, %r70, 29;
	@%p8 bra 	BB2_66;

	setp.eq.s32	%p11, %r70, 28;
	@%p11 bra 	BB2_71;
	bra.uni 	BB2_64;

BB2_71:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19298, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19291, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19292, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3007, %r19235;
	mov.u32 	%r3005, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19295, %r19235;
	mov.u32 	%r19296, %r19235;
	mov.u32 	%r19297, %r19235;
	bra.uni 	BB2_92;

BB2_102:
	setp.eq.s32	%p96, %r70, 2;
	@%p96 bra 	BB2_207;
	bra.uni 	BB2_103;

BB2_207:
	// inline asm
	prmt.b32 %r3015, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2955, 0;
	// inline asm
	prmt.b32 %r2957, %r2953, %r2955, %r71;
	// inline asm
	mov.u32 	%r19331, %r2955;
	bra.uni 	BB2_210;

BB2_12:
	setp.eq.s32	%p48, %r70, 2;
	@%p48 bra 	BB2_89;
	bra.uni 	BB2_13;

BB2_89:
	mov.u32 	%r19237, 0;
	// inline asm
	prmt.b32 %r19268, %r19237, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19235, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19236, %r2953, %r19237, %r71;
	// inline asm
	mov.u32 	%r19266, %r19237;
	mov.u32 	%r19267, %r19237;
	mov.u32 	%r19271, %r19237;
	mov.u32 	%r19272, %r19237;
	mov.u32 	%r19273, %r19237;
	mov.u32 	%r19274, %r19237;
	mov.u32 	%r19275, %r19237;
	mov.u32 	%r19276, %r19237;
	mov.u32 	%r19277, %r19237;
	mov.u32 	%r19278, %r19237;
	mov.u32 	%r19279, %r19237;
	mov.u32 	%r19280, %r19237;
	mov.u32 	%r19281, %r19237;
	mov.u32 	%r19282, %r19237;
	mov.u32 	%r19283, %r19237;
	mov.u32 	%r19284, %r19237;
	mov.u32 	%r19285, %r19237;
	mov.u32 	%r19286, %r19237;
	mov.u32 	%r19287, %r19237;
	mov.u32 	%r19288, %r19237;
	mov.u32 	%r19289, %r19237;
	mov.u32 	%r19290, %r19237;
	mov.u32 	%r19291, %r19237;
	mov.u32 	%r19292, %r19237;
	mov.u32 	%r19293, %r19237;
	mov.u32 	%r19294, %r19237;
	mov.u32 	%r19295, %r19237;
	mov.u32 	%r19296, %r19237;
	mov.u32 	%r19297, %r19237;
	mov.u32 	%r19298, %r19237;
	bra.uni 	BB2_92;

BB2_133:
	setp.eq.s32	%p73, %r70, 18;
	@%p73 bra 	BB2_182;
	bra.uni 	BB2_134;

BB2_182:
	// inline asm
	prmt.b32 %r3015, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2989, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	bra.uni 	BB2_179;

BB2_44:
	setp.eq.s32	%p25, %r70, 18;
	@%p25 bra 	BB2_76;
	bra.uni 	BB2_45;

BB2_76:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19284, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19283, %r19235;
	bra.uni 	BB2_84;

BB2_117:
	setp.eq.s32	%p85, %r70, 10;
	@%p85 bra 	BB2_196;
	bra.uni 	BB2_118;

BB2_196:
	// inline asm
	prmt.b32 %r3015, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2973, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	bra.uni 	BB2_193;

BB2_28:
	setp.eq.s32	%p37, %r70, 10;
	@%p37 bra 	BB2_80;
	bra.uni 	BB2_29;

BB2_80:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19276, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19275, %r19235;
	bra.uni 	BB2_82;

BB2_148:
	setp.eq.s32	%p62, %r70, 26;
	@%p62 bra 	BB2_168;
	bra.uni 	BB2_149;

BB2_168:
	// inline asm
	prmt.b32 %r3015, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3005, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	bra.uni 	BB2_165;

BB2_59:
	setp.eq.s32	%p14, %r70, 26;
	@%p14 bra 	BB2_72;
	bra.uni 	BB2_60;

BB2_72:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19292, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19291, %r19235;
	bra.uni 	BB2_86;

BB2_109:
	setp.eq.s32	%p91, %r70, 6;
	@%p91 bra 	BB2_203;
	bra.uni 	BB2_110;

BB2_203:
	// inline asm
	prmt.b32 %r3015, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2965, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	bra.uni 	BB2_200;

BB2_19:
	setp.eq.s32	%p43, %r70, 6;
	@%p43 bra 	BB2_87;
	bra.uni 	BB2_20;

BB2_87:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19272, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19271, %r19235;
	bra.uni 	BB2_22;

BB2_140:
	setp.eq.s32	%p68, %r70, 22;
	@%p68 bra 	BB2_175;
	bra.uni 	BB2_141;

BB2_175:
	// inline asm
	prmt.b32 %r3015, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2997, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	bra.uni 	BB2_172;

BB2_51:
	setp.eq.s32	%p20, %r70, 22;
	@%p20 bra 	BB2_74;
	bra.uni 	BB2_52;

BB2_74:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19288, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19287, %r19235;
	bra.uni 	BB2_85;

BB2_124:
	setp.eq.s32	%p80, %r70, 14;
	@%p80 bra 	BB2_189;
	bra.uni 	BB2_125;

BB2_189:
	// inline asm
	prmt.b32 %r3015, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2981, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	bra.uni 	BB2_186;

BB2_35:
	setp.eq.s32	%p32, %r70, 14;
	@%p32 bra 	BB2_78;
	bra.uni 	BB2_36;

BB2_78:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19280, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19279, %r19235;
	bra.uni 	BB2_83;

BB2_155:
	setp.eq.s32	%p57, %r70, 30;
	@%p57 bra 	BB2_161;
	bra.uni 	BB2_156;

BB2_161:
	// inline asm
	prmt.b32 %r3015, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3013, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	mov.u32 	%r3007, %r2959;
	mov.u32 	%r3005, %r2959;
	mov.u32 	%r3003, %r2959;
	mov.u32 	%r3001, %r2959;
	bra.uni 	BB2_159;

BB2_66:
	setp.eq.s32	%p9, %r70, 30;
	@%p9 bra 	BB2_70;
	bra.uni 	BB2_67;

BB2_70:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19296, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19297, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19298, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19291, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19292, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3007, %r19235;
	mov.u32 	%r3005, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r3011, %r19235;
	mov.u32 	%r3009, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19295, %r19235;
	bra.uni 	BB2_92;

BB2_100:
	setp.eq.s32	%p99, %r70, 1;
	@%p99 bra 	BB2_208;
	bra.uni 	BB2_101;

BB2_208:
	// inline asm
	prmt.b32 %r3015, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r19331, 0;
	// inline asm
	prmt.b32 %r2955, %r2953, %r19331, %r71;
	// inline asm
	bra.uni 	BB2_210;

BB2_10:
	setp.eq.s32	%p51, %r70, 1;
	@%p51 bra 	BB2_11;
	bra.uni 	BB2_68;

BB2_11:
	mov.u32 	%r19266, 0;
	// inline asm
	prmt.b32 %r19269, %r19266, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19235, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19236, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19237, %r2953, %r19266, %r71;
	// inline asm
	mov.u32 	%r19267, %r19266;
	mov.u32 	%r19268, %r19266;
	mov.u32 	%r19271, %r19266;
	mov.u32 	%r19272, %r19266;
	mov.u32 	%r19273, %r19266;
	mov.u32 	%r19274, %r19266;
	mov.u32 	%r19275, %r19266;
	mov.u32 	%r19276, %r19266;
	mov.u32 	%r19277, %r19266;
	mov.u32 	%r19278, %r19266;
	mov.u32 	%r19279, %r19266;
	mov.u32 	%r19280, %r19266;
	mov.u32 	%r19281, %r19266;
	mov.u32 	%r19282, %r19266;
	mov.u32 	%r19283, %r19266;
	mov.u32 	%r19284, %r19266;
	mov.u32 	%r19285, %r19266;
	mov.u32 	%r19286, %r19266;
	mov.u32 	%r19287, %r19266;
	mov.u32 	%r19288, %r19266;
	mov.u32 	%r19289, %r19266;
	mov.u32 	%r19290, %r19266;
	mov.u32 	%r19291, %r19266;
	mov.u32 	%r19292, %r19266;
	mov.u32 	%r19293, %r19266;
	mov.u32 	%r19294, %r19266;
	mov.u32 	%r19295, %r19266;
	mov.u32 	%r19296, %r19266;
	mov.u32 	%r19297, %r19266;
	mov.u32 	%r19298, %r19266;
	bra.uni 	BB2_92;

BB2_131:
	setp.eq.s32	%p76, %r70, 17;
	@%p76 bra 	BB2_183;
	bra.uni 	BB2_132;

BB2_183:
	// inline asm
	prmt.b32 %r3015, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2987, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	bra.uni 	BB2_180;

BB2_42:
	setp.eq.s32	%p28, %r70, 17;
	@%p28 bra 	BB2_43;
	bra.uni 	BB2_68;

BB2_43:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19285, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19283, %r19235;
	mov.u32 	%r19284, %r19235;
	bra.uni 	BB2_84;

BB2_115:
	setp.eq.s32	%p88, %r70, 9;
	@%p88 bra 	BB2_197;
	bra.uni 	BB2_116;

BB2_197:
	// inline asm
	prmt.b32 %r3015, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2971, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	bra.uni 	BB2_194;

BB2_26:
	setp.eq.s32	%p40, %r70, 9;
	@%p40 bra 	BB2_27;
	bra.uni 	BB2_68;

BB2_27:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19277, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19275, %r19235;
	mov.u32 	%r19276, %r19235;
	bra.uni 	BB2_82;

BB2_146:
	setp.eq.s32	%p65, %r70, 25;
	@%p65 bra 	BB2_169;
	bra.uni 	BB2_147;

BB2_169:
	// inline asm
	prmt.b32 %r3015, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3003, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	bra.uni 	BB2_166;

BB2_57:
	setp.eq.s32	%p17, %r70, 25;
	@%p17 bra 	BB2_58;
	bra.uni 	BB2_68;

BB2_58:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19293, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19291, %r19235;
	mov.u32 	%r19292, %r19235;
	bra.uni 	BB2_86;

BB2_107:
	setp.eq.s32	%p94, %r70, 5;
	@%p94 bra 	BB2_204;
	bra.uni 	BB2_108;

BB2_204:
	// inline asm
	prmt.b32 %r3015, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2963, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	bra.uni 	BB2_201;

BB2_17:
	setp.eq.s32	%p46, %r70, 5;
	@%p46 bra 	BB2_18;
	bra.uni 	BB2_68;

BB2_18:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19273, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19271, %r19235;
	mov.u32 	%r19272, %r19235;
	bra.uni 	BB2_22;

BB2_138:
	setp.eq.s32	%p71, %r70, 21;
	@%p71 bra 	BB2_176;
	bra.uni 	BB2_139;

BB2_176:
	// inline asm
	prmt.b32 %r3015, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2995, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	bra.uni 	BB2_173;

BB2_49:
	setp.eq.s32	%p23, %r70, 21;
	@%p23 bra 	BB2_50;
	bra.uni 	BB2_68;

BB2_50:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19289, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19287, %r19235;
	mov.u32 	%r19288, %r19235;
	bra.uni 	BB2_85;

BB2_122:
	setp.eq.s32	%p83, %r70, 13;
	@%p83 bra 	BB2_190;
	bra.uni 	BB2_123;

BB2_190:
	// inline asm
	prmt.b32 %r3015, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2979, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	bra.uni 	BB2_187;

BB2_33:
	setp.eq.s32	%p35, %r70, 13;
	@%p35 bra 	BB2_34;
	bra.uni 	BB2_68;

BB2_34:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19281, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19279, %r19235;
	mov.u32 	%r19280, %r19235;
	bra.uni 	BB2_83;

BB2_153:
	setp.eq.s32	%p60, %r70, 29;
	@%p60 bra 	BB2_162;
	bra.uni 	BB2_154;

BB2_162:
	// inline asm
	prmt.b32 %r3015, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3011, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	mov.u32 	%r3007, %r2959;
	mov.u32 	%r3005, %r2959;
	mov.u32 	%r3003, %r2959;
	mov.u32 	%r3001, %r2959;
	bra.uni 	BB2_160;

BB2_64:
	setp.eq.s32	%p12, %r70, 29;
	@%p12 bra 	BB2_65;
	bra.uni 	BB2_68;

BB2_65:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19297, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19298, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19291, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19292, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3007, %r19235;
	mov.u32 	%r3005, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r3009, %r19235;
	mov.u32 	%r19266, %r19235;
	mov.u32 	%r19295, %r19235;
	mov.u32 	%r19296, %r19235;
	bra.uni 	BB2_92;

BB2_103:
	setp.eq.s32	%p97, %r70, 3;
	@%p97 bra 	BB2_206;
	bra.uni 	BB2_104;

BB2_206:
	// inline asm
	prmt.b32 %r3015, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2957, 0;
	// inline asm
	prmt.b32 %r2959, %r2953, %r2957, %r71;
	// inline asm
	mov.u32 	%r2955, %r2957;
	mov.u32 	%r19331, %r2957;
	bra.uni 	BB2_210;

BB2_13:
	setp.eq.s32	%p49, %r70, 3;
	@%p49 bra 	BB2_14;
	bra.uni 	BB2_68;

BB2_14:
	mov.u32 	%r19236, 0;
	// inline asm
	prmt.b32 %r19267, %r19236, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19235, %r2953, %r19236, %r71;
	// inline asm
	mov.u32 	%r19237, %r19236;
	mov.u32 	%r19266, %r19236;
	mov.u32 	%r19271, %r19236;
	mov.u32 	%r19272, %r19236;
	mov.u32 	%r19273, %r19236;
	mov.u32 	%r19274, %r19236;
	mov.u32 	%r19275, %r19236;
	mov.u32 	%r19276, %r19236;
	mov.u32 	%r19277, %r19236;
	mov.u32 	%r19278, %r19236;
	mov.u32 	%r19279, %r19236;
	mov.u32 	%r19280, %r19236;
	mov.u32 	%r19281, %r19236;
	mov.u32 	%r19282, %r19236;
	mov.u32 	%r19283, %r19236;
	mov.u32 	%r19284, %r19236;
	mov.u32 	%r19285, %r19236;
	mov.u32 	%r19286, %r19236;
	mov.u32 	%r19287, %r19236;
	mov.u32 	%r19288, %r19236;
	mov.u32 	%r19289, %r19236;
	mov.u32 	%r19290, %r19236;
	mov.u32 	%r19291, %r19236;
	mov.u32 	%r19292, %r19236;
	mov.u32 	%r19293, %r19236;
	mov.u32 	%r19294, %r19236;
	mov.u32 	%r19295, %r19236;
	mov.u32 	%r19296, %r19236;
	mov.u32 	%r19297, %r19236;
	mov.u32 	%r19298, %r19236;
	bra.uni 	BB2_92;

BB2_134:
	setp.eq.s32	%p74, %r70, 19;
	@%p74 bra 	BB2_181;
	bra.uni 	BB2_135;

BB2_181:
	// inline asm
	prmt.b32 %r3015, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2991, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;

BB2_178:
	mov.u32 	%r2989, %r2959;

BB2_179:
	mov.u32 	%r2987, %r2959;

BB2_180:
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_45:
	setp.eq.s32	%p26, %r70, 19;
	@%p26 bra 	BB2_46;
	bra.uni 	BB2_68;

BB2_46:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19283, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_84;

BB2_118:
	setp.eq.s32	%p86, %r70, 11;
	@%p86 bra 	BB2_195;
	bra.uni 	BB2_119;

BB2_195:
	// inline asm
	prmt.b32 %r3015, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2975, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;

BB2_192:
	mov.u32 	%r2973, %r2959;

BB2_193:
	mov.u32 	%r2971, %r2959;

BB2_194:
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_29:
	setp.eq.s32	%p38, %r70, 11;
	@%p38 bra 	BB2_30;
	bra.uni 	BB2_68;

BB2_30:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19275, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_82;

BB2_149:
	setp.eq.s32	%p63, %r70, 27;
	@%p63 bra 	BB2_167;
	bra.uni 	BB2_150;

BB2_167:
	// inline asm
	prmt.b32 %r3015, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3007, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;

BB2_164:
	mov.u32 	%r3005, %r2959;

BB2_165:
	mov.u32 	%r3003, %r2959;

BB2_166:
	mov.u32 	%r3001, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_60:
	setp.eq.s32	%p15, %r70, 27;
	@%p15 bra 	BB2_61;
	bra.uni 	BB2_68;

BB2_61:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19291, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19292, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3005, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_86;

BB2_110:
	setp.eq.s32	%p92, %r70, 7;
	@%p92 bra 	BB2_202;
	bra.uni 	BB2_111;

BB2_202:
	// inline asm
	prmt.b32 %r3015, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2967, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;

BB2_199:
	mov.u32 	%r2965, %r2959;

BB2_200:
	mov.u32 	%r2963, %r2959;

BB2_201:
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_20:
	setp.eq.s32	%p44, %r70, 7;
	@%p44 bra 	BB2_21;
	bra.uni 	BB2_68;

BB2_21:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19271, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r19266, %r19235;

BB2_22:
	mov.u32 	%r19275, %r19235;
	mov.u32 	%r19276, %r19235;
	mov.u32 	%r19277, %r19235;
	mov.u32 	%r19278, %r19235;

BB2_82:
	mov.u32 	%r19279, %r19235;
	mov.u32 	%r19280, %r19235;
	mov.u32 	%r19281, %r19235;
	mov.u32 	%r19282, %r19235;

BB2_83:
	mov.u32 	%r19283, %r19235;
	mov.u32 	%r19284, %r19235;
	mov.u32 	%r19285, %r19235;
	mov.u32 	%r19286, %r19235;

BB2_84:
	mov.u32 	%r19287, %r19235;
	mov.u32 	%r19288, %r19235;
	mov.u32 	%r19289, %r19235;
	mov.u32 	%r19290, %r19235;

BB2_85:
	mov.u32 	%r19291, %r19235;
	mov.u32 	%r19292, %r19235;
	mov.u32 	%r19293, %r19235;
	mov.u32 	%r19294, %r19235;

BB2_86:
	mov.u32 	%r19295, %r19235;
	mov.u32 	%r19296, %r19235;
	mov.u32 	%r19297, %r19235;
	mov.u32 	%r19298, %r19235;
	bra.uni 	BB2_92;

BB2_141:
	setp.eq.s32	%p69, %r70, 23;
	@%p69 bra 	BB2_174;
	bra.uni 	BB2_142;

BB2_174:
	// inline asm
	prmt.b32 %r3015, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2999, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;

BB2_171:
	mov.u32 	%r2997, %r2959;

BB2_172:
	mov.u32 	%r2995, %r2959;

BB2_173:
	mov.u32 	%r2993, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_52:
	setp.eq.s32	%p21, %r70, 23;
	@%p21 bra 	BB2_53;
	bra.uni 	BB2_68;

BB2_53:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19287, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_85;

BB2_125:
	setp.eq.s32	%p81, %r70, 15;
	@%p81 bra 	BB2_188;
	bra.uni 	BB2_126;

BB2_188:
	// inline asm
	prmt.b32 %r3015, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2955, %r2953, %r71;
	// inline asm
	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r2983, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;

BB2_185:
	mov.u32 	%r2981, %r2959;

BB2_186:
	mov.u32 	%r2979, %r2959;

BB2_187:
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_36:
	setp.eq.s32	%p33, %r70, 15;
	@%p33 bra 	BB2_37;
	bra.uni 	BB2_68;

BB2_37:
	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19279, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3013, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3011, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3009, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3007, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3005, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_83;

BB2_156:
	setp.ne.s32	%p58, %r70, 31;
	@%p58 bra 	BB2_157;

	mov.u32 	%r2959, 0;
	// inline asm
	prmt.b32 %r3015, %r2953, %r2959, %r71;
	// inline asm
	mov.u32 	%r2957, %r2959;
	mov.u32 	%r2955, %r2959;
	mov.u32 	%r2967, %r2959;
	mov.u32 	%r2965, %r2959;
	mov.u32 	%r2963, %r2959;
	mov.u32 	%r2961, %r2959;
	mov.u32 	%r2975, %r2959;
	mov.u32 	%r2973, %r2959;
	mov.u32 	%r2971, %r2959;
	mov.u32 	%r2969, %r2959;
	mov.u32 	%r2983, %r2959;
	mov.u32 	%r2981, %r2959;
	mov.u32 	%r2979, %r2959;
	mov.u32 	%r2977, %r2959;
	mov.u32 	%r2991, %r2959;
	mov.u32 	%r2989, %r2959;
	mov.u32 	%r2987, %r2959;
	mov.u32 	%r2985, %r2959;
	mov.u32 	%r2999, %r2959;
	mov.u32 	%r2997, %r2959;
	mov.u32 	%r2995, %r2959;
	mov.u32 	%r2993, %r2959;
	mov.u32 	%r3007, %r2959;
	mov.u32 	%r3005, %r2959;
	mov.u32 	%r3003, %r2959;
	mov.u32 	%r3001, %r2959;
	mov.u32 	%r3013, %r2959;

BB2_159:
	mov.u32 	%r3011, %r2959;

BB2_160:
	mov.u32 	%r3009, %r2959;
	mov.u32 	%r19331, %r2959;
	bra.uni 	BB2_210;

BB2_67:
	setp.ne.s32	%p10, %r70, 31;
	@%p10 bra 	BB2_68;

	mov.u32 	%r19235, 0;
	// inline asm
	prmt.b32 %r19295, %r19235, %r3015, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19296, %r3015, %r3013, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19297, %r3013, %r3011, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19298, %r3011, %r3009, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19291, %r3009, %r3007, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19292, %r3007, %r3005, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19293, %r3005, %r3003, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19294, %r3003, %r3001, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19287, %r3001, %r2999, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19288, %r2999, %r2997, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19289, %r2997, %r2995, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19290, %r2995, %r2993, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19283, %r2993, %r2991, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19284, %r2991, %r2989, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19285, %r2989, %r2987, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19286, %r2987, %r2985, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19279, %r2985, %r2983, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19280, %r2983, %r2981, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19281, %r2981, %r2979, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19282, %r2979, %r2977, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19275, %r2977, %r2975, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19276, %r2975, %r2973, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19277, %r2973, %r2971, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19278, %r2971, %r2969, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19271, %r2969, %r2967, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19272, %r2967, %r2965, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19273, %r2965, %r2963, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19274, %r2963, %r2961, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19267, %r2961, %r2959, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19268, %r2959, %r2957, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19269, %r2957, %r2955, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19270, %r2955, %r2953, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3015, %r2953, %r19235, %r71;
	// inline asm
	mov.u32 	%r19236, %r19235;
	mov.u32 	%r19237, %r19235;
	mov.u32 	%r2967, %r19235;
	mov.u32 	%r2965, %r19235;
	mov.u32 	%r2963, %r19235;
	mov.u32 	%r2961, %r19235;
	mov.u32 	%r2975, %r19235;
	mov.u32 	%r2973, %r19235;
	mov.u32 	%r2971, %r19235;
	mov.u32 	%r2969, %r19235;
	mov.u32 	%r2983, %r19235;
	mov.u32 	%r2981, %r19235;
	mov.u32 	%r2979, %r19235;
	mov.u32 	%r2977, %r19235;
	mov.u32 	%r2991, %r19235;
	mov.u32 	%r2989, %r19235;
	mov.u32 	%r2987, %r19235;
	mov.u32 	%r2985, %r19235;
	mov.u32 	%r2999, %r19235;
	mov.u32 	%r2997, %r19235;
	mov.u32 	%r2995, %r19235;
	mov.u32 	%r2993, %r19235;
	mov.u32 	%r3007, %r19235;
	mov.u32 	%r3005, %r19235;
	mov.u32 	%r3003, %r19235;
	mov.u32 	%r3001, %r19235;
	mov.u32 	%r3013, %r19235;
	mov.u32 	%r3011, %r19235;
	mov.u32 	%r3009, %r19235;
	mov.u32 	%r19266, %r19235;
	bra.uni 	BB2_92;

BB2_68:
	mov.u32 	%r19235, %r2959;
	mov.u32 	%r19236, %r2957;
	mov.u32 	%r19237, %r2955;
	mov.u32 	%r19266, %r2953;
	mov.u32 	%r19268, %r19267;
	mov.u32 	%r19269, %r19267;
	mov.u32 	%r19270, %r19267;

BB2_91:
	mov.u32 	%r19271, %r19267;
	mov.u32 	%r19272, %r19267;
	mov.u32 	%r19273, %r19267;
	mov.u32 	%r19274, %r19267;
	mov.u32 	%r19275, %r19267;
	mov.u32 	%r19276, %r19267;
	mov.u32 	%r19277, %r19267;
	mov.u32 	%r19278, %r19267;
	mov.u32 	%r19279, %r19267;
	mov.u32 	%r19280, %r19267;
	mov.u32 	%r19281, %r19267;
	mov.u32 	%r19282, %r19267;
	mov.u32 	%r19283, %r19267;
	mov.u32 	%r19284, %r19267;
	mov.u32 	%r19285, %r19267;
	mov.u32 	%r19286, %r19267;
	mov.u32 	%r19287, %r19267;
	mov.u32 	%r19288, %r19267;
	mov.u32 	%r19289, %r19267;
	mov.u32 	%r19290, %r19267;
	mov.u32 	%r19291, %r19267;
	mov.u32 	%r19292, %r19267;
	mov.u32 	%r19293, %r19267;
	mov.u32 	%r19294, %r19267;
	mov.u32 	%r19295, %r19267;
	mov.u32 	%r19296, %r19267;
	mov.u32 	%r19297, %r19267;
	mov.u32 	%r19298, %r19267;

BB2_92:
	ld.local.u32 	%r8272, [%rd17+64];
	or.b32  	%r8273, %r8272, %r19266;
	st.local.u32 	[%rd17+64], %r8273;
	ld.local.u32 	%r8274, [%rd17+68];
	or.b32  	%r8275, %r8274, %r19237;
	st.local.u32 	[%rd17+68], %r8275;
	ld.local.u32 	%r8276, [%rd17+72];
	or.b32  	%r8277, %r8276, %r19236;
	st.local.u32 	[%rd17+72], %r8277;
	ld.local.u32 	%r8278, [%rd17+76];
	or.b32  	%r8279, %r8278, %r19235;
	st.local.u32 	[%rd17+76], %r8279;
	ld.local.u32 	%r8280, [%rd17+80];
	or.b32  	%r8281, %r8280, %r2961;
	st.local.u32 	[%rd17+80], %r8281;
	ld.local.u32 	%r8282, [%rd17+84];
	or.b32  	%r8283, %r8282, %r2963;
	st.local.u32 	[%rd17+84], %r8283;
	ld.local.u32 	%r8284, [%rd17+88];
	or.b32  	%r8285, %r8284, %r2965;
	st.local.u32 	[%rd17+88], %r8285;
	ld.local.u32 	%r8286, [%rd17+92];
	or.b32  	%r8287, %r8286, %r2967;
	st.local.u32 	[%rd17+92], %r8287;
	ld.local.u32 	%r8288, [%rd17+96];
	or.b32  	%r8289, %r8288, %r2969;
	st.local.u32 	[%rd17+96], %r8289;
	ld.local.u32 	%r8290, [%rd17+100];
	or.b32  	%r8291, %r8290, %r2971;
	st.local.u32 	[%rd17+100], %r8291;
	ld.local.u32 	%r8292, [%rd17+104];
	or.b32  	%r8293, %r8292, %r2973;
	st.local.u32 	[%rd17+104], %r8293;
	ld.local.u32 	%r8294, [%rd17+108];
	or.b32  	%r8295, %r8294, %r2975;
	st.local.u32 	[%rd17+108], %r8295;
	ld.local.u32 	%r8296, [%rd17+112];
	or.b32  	%r8297, %r8296, %r2977;
	st.local.u32 	[%rd17+112], %r8297;
	ld.local.u32 	%r8298, [%rd17+116];
	or.b32  	%r8299, %r8298, %r2979;
	st.local.u32 	[%rd17+116], %r8299;
	ld.local.u32 	%r8300, [%rd17+120];
	or.b32  	%r8301, %r8300, %r2981;
	st.local.u32 	[%rd17+120], %r8301;
	ld.local.u32 	%r8302, [%rd17+124];
	or.b32  	%r8303, %r8302, %r2983;
	st.local.u32 	[%rd17+124], %r8303;
	ld.local.u32 	%r8304, [%rd17+128];
	or.b32  	%r8305, %r8304, %r2985;
	st.local.u32 	[%rd17+128], %r8305;
	ld.local.u32 	%r8306, [%rd17+132];
	or.b32  	%r8307, %r8306, %r2987;
	st.local.u32 	[%rd17+132], %r8307;
	ld.local.u32 	%r8308, [%rd17+136];
	or.b32  	%r8309, %r8308, %r2989;
	st.local.u32 	[%rd17+136], %r8309;
	ld.local.u32 	%r8310, [%rd17+140];
	or.b32  	%r8311, %r8310, %r2991;
	st.local.u32 	[%rd17+140], %r8311;
	ld.local.u32 	%r8312, [%rd17+144];
	or.b32  	%r8313, %r8312, %r2993;
	st.local.u32 	[%rd17+144], %r8313;
	ld.local.u32 	%r8314, [%rd17+148];
	or.b32  	%r8315, %r8314, %r2995;
	st.local.u32 	[%rd17+148], %r8315;
	ld.local.u32 	%r8316, [%rd17+152];
	or.b32  	%r8317, %r8316, %r2997;
	st.local.u32 	[%rd17+152], %r8317;
	ld.local.u32 	%r8318, [%rd17+156];
	or.b32  	%r8319, %r8318, %r2999;
	st.local.u32 	[%rd17+156], %r8319;
	ld.local.u32 	%r8320, [%rd17+160];
	or.b32  	%r8321, %r8320, %r3001;
	st.local.u32 	[%rd17+160], %r8321;
	ld.local.u32 	%r8322, [%rd17+164];
	or.b32  	%r8323, %r8322, %r3003;
	st.local.u32 	[%rd17+164], %r8323;
	ld.local.u32 	%r8324, [%rd17+168];
	or.b32  	%r8325, %r8324, %r3005;
	st.local.u32 	[%rd17+168], %r8325;
	ld.local.u32 	%r8326, [%rd17+172];
	or.b32  	%r8327, %r8326, %r3007;
	st.local.u32 	[%rd17+172], %r8327;
	ld.local.u32 	%r8328, [%rd17+176];
	or.b32  	%r8329, %r8328, %r3009;
	st.local.u32 	[%rd17+176], %r8329;
	ld.local.u32 	%r8330, [%rd17+180];
	or.b32  	%r8331, %r8330, %r3011;
	st.local.u32 	[%rd17+180], %r8331;
	ld.local.u32 	%r8332, [%rd17+184];
	or.b32  	%r8333, %r8332, %r3013;
	st.local.u32 	[%rd17+184], %r8333;
	ld.local.u32 	%r8334, [%rd17+188];
	or.b32  	%r8335, %r8334, %r3015;
	st.local.u32 	[%rd17+188], %r8335;
	mov.b64	%rd4279, {%r8275, %r8273};
	mov.b64	%rd4280, {%r8279, %r8277};
	mov.b64	%rd4281, {%r8283, %r8281};
	mov.b64	%rd4282, {%r8287, %r8285};
	mov.b64	%rd4283, {%r8291, %r8289};
	mov.b64	%rd4284, {%r8295, %r8293};
	mov.b64	%rd4285, {%r8299, %r8297};
	mov.b64	%rd4286, {%r8303, %r8301};
	mov.b64	%rd4270, {%r8307, %r8305};
	mov.b64	%rd4269, {%r8311, %r8309};
	mov.b64	%rd4268, {%r8315, %r8313};
	mov.b64	%rd4267, {%r8319, %r8317};
	mov.b64	%rd4266, {%r8323, %r8321};
	mov.b64	%rd4265, {%r8327, %r8325};
	mov.b64	%rd4264, {%r8331, %r8329};
	mov.b64	%rd4263, {%r8335, %r8333};
	ld.local.u64 	%rd34, [%rd17+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8336,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8337}, %rd34;
	}
	shf.r.wrap.b32 	%r8338, %r8337, %r8336, 14;
	shf.r.wrap.b32 	%r8339, %r8336, %r8337, 14;
	mov.b64 	%rd348, {%r8339, %r8338};
	shf.r.wrap.b32 	%r8340, %r8337, %r8336, 18;
	shf.r.wrap.b32 	%r8341, %r8336, %r8337, 18;
	mov.b64 	%rd349, {%r8341, %r8340};
	xor.b64  	%rd350, %rd349, %rd348;
	shf.l.wrap.b32 	%r8342, %r8336, %r8337, 23;
	shf.l.wrap.b32 	%r8343, %r8337, %r8336, 23;
	mov.b64 	%rd351, {%r8343, %r8342};
	xor.b64  	%rd352, %rd350, %rd351;
	ld.local.u64 	%rd35, [%rd17+48];
	ld.local.u64 	%rd36, [%rd17+40];
	xor.b64  	%rd353, %rd35, %rd36;
	and.b64  	%rd354, %rd353, %rd34;
	xor.b64  	%rd355, %rd354, %rd35;
	ld.local.u64 	%rd37, [%rd17+56];
	add.s64 	%rd356, %rd37, %rd4279;
	add.s64 	%rd357, %rd356, %rd1;
	add.s64 	%rd358, %rd357, %rd355;
	add.s64 	%rd359, %rd358, %rd352;
	ld.local.u64 	%rd38, [%rd17+24];
	add.s64 	%rd360, %rd359, %rd38;
	ld.local.u64 	%rd39, [%rd17];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8344,%dummy}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8345}, %rd39;
	}
	shf.r.wrap.b32 	%r8346, %r8345, %r8344, 28;
	shf.r.wrap.b32 	%r8347, %r8344, %r8345, 28;
	mov.b64 	%rd361, {%r8347, %r8346};
	shf.l.wrap.b32 	%r8348, %r8344, %r8345, 30;
	shf.l.wrap.b32 	%r8349, %r8345, %r8344, 30;
	mov.b64 	%rd362, {%r8349, %r8348};
	xor.b64  	%rd363, %rd362, %rd361;
	shf.l.wrap.b32 	%r8350, %r8344, %r8345, 25;
	shf.l.wrap.b32 	%r8351, %r8345, %r8344, 25;
	mov.b64 	%rd364, {%r8351, %r8350};
	xor.b64  	%rd365, %rd363, %rd364;
	ld.local.u64 	%rd40, [%rd17+8];
	and.b64  	%rd366, %rd40, %rd39;
	xor.b64  	%rd367, %rd40, %rd39;
	ld.local.u64 	%rd41, [%rd17+16];
	and.b64  	%rd368, %rd41, %rd367;
	or.b64  	%rd369, %rd368, %rd366;
	add.s64 	%rd370, %rd359, %rd369;
	add.s64 	%rd371, %rd370, %rd365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8352,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8353}, %rd360;
	}
	shf.r.wrap.b32 	%r8354, %r8353, %r8352, 14;
	shf.r.wrap.b32 	%r8355, %r8352, %r8353, 14;
	mov.b64 	%rd372, {%r8355, %r8354};
	shf.r.wrap.b32 	%r8356, %r8353, %r8352, 18;
	shf.r.wrap.b32 	%r8357, %r8352, %r8353, 18;
	mov.b64 	%rd373, {%r8357, %r8356};
	xor.b64  	%rd374, %rd373, %rd372;
	shf.l.wrap.b32 	%r8358, %r8352, %r8353, 23;
	shf.l.wrap.b32 	%r8359, %r8353, %r8352, 23;
	mov.b64 	%rd375, {%r8359, %r8358};
	xor.b64  	%rd376, %rd374, %rd375;
	xor.b64  	%rd377, %rd36, %rd34;
	and.b64  	%rd378, %rd360, %rd377;
	xor.b64  	%rd379, %rd378, %rd36;
	add.s64 	%rd380, %rd35, %rd4280;
	add.s64 	%rd381, %rd380, %rd2;
	add.s64 	%rd382, %rd381, %rd379;
	add.s64 	%rd383, %rd382, %rd376;
	add.s64 	%rd384, %rd383, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8360,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8361}, %rd371;
	}
	shf.r.wrap.b32 	%r8362, %r8361, %r8360, 28;
	shf.r.wrap.b32 	%r8363, %r8360, %r8361, 28;
	mov.b64 	%rd385, {%r8363, %r8362};
	shf.l.wrap.b32 	%r8364, %r8360, %r8361, 30;
	shf.l.wrap.b32 	%r8365, %r8361, %r8360, 30;
	mov.b64 	%rd386, {%r8365, %r8364};
	xor.b64  	%rd387, %rd386, %rd385;
	shf.l.wrap.b32 	%r8366, %r8360, %r8361, 25;
	shf.l.wrap.b32 	%r8367, %r8361, %r8360, 25;
	mov.b64 	%rd388, {%r8367, %r8366};
	xor.b64  	%rd389, %rd387, %rd388;
	and.b64  	%rd390, %rd371, %rd39;
	xor.b64  	%rd391, %rd371, %rd39;
	and.b64  	%rd392, %rd391, %rd40;
	or.b64  	%rd393, %rd392, %rd390;
	add.s64 	%rd394, %rd383, %rd393;
	add.s64 	%rd395, %rd394, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8368,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8369}, %rd384;
	}
	shf.r.wrap.b32 	%r8370, %r8369, %r8368, 14;
	shf.r.wrap.b32 	%r8371, %r8368, %r8369, 14;
	mov.b64 	%rd396, {%r8371, %r8370};
	shf.r.wrap.b32 	%r8372, %r8369, %r8368, 18;
	shf.r.wrap.b32 	%r8373, %r8368, %r8369, 18;
	mov.b64 	%rd397, {%r8373, %r8372};
	xor.b64  	%rd398, %rd397, %rd396;
	shf.l.wrap.b32 	%r8374, %r8368, %r8369, 23;
	shf.l.wrap.b32 	%r8375, %r8369, %r8368, 23;
	mov.b64 	%rd399, {%r8375, %r8374};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd360, %rd34;
	and.b64  	%rd402, %rd384, %rd401;
	xor.b64  	%rd403, %rd402, %rd34;
	add.s64 	%rd404, %rd36, %rd4281;
	add.s64 	%rd405, %rd404, %rd3;
	add.s64 	%rd406, %rd405, %rd403;
	add.s64 	%rd407, %rd406, %rd400;
	add.s64 	%rd408, %rd407, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8376,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8377}, %rd395;
	}
	shf.r.wrap.b32 	%r8378, %r8377, %r8376, 28;
	shf.r.wrap.b32 	%r8379, %r8376, %r8377, 28;
	mov.b64 	%rd409, {%r8379, %r8378};
	shf.l.wrap.b32 	%r8380, %r8376, %r8377, 30;
	shf.l.wrap.b32 	%r8381, %r8377, %r8376, 30;
	mov.b64 	%rd410, {%r8381, %r8380};
	xor.b64  	%rd411, %rd410, %rd409;
	shf.l.wrap.b32 	%r8382, %r8376, %r8377, 25;
	shf.l.wrap.b32 	%r8383, %r8377, %r8376, 25;
	mov.b64 	%rd412, {%r8383, %r8382};
	xor.b64  	%rd413, %rd411, %rd412;
	and.b64  	%rd414, %rd395, %rd371;
	xor.b64  	%rd415, %rd395, %rd371;
	and.b64  	%rd416, %rd415, %rd39;
	or.b64  	%rd417, %rd416, %rd414;
	add.s64 	%rd418, %rd407, %rd417;
	add.s64 	%rd419, %rd418, %rd413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8384,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8385}, %rd408;
	}
	shf.r.wrap.b32 	%r8386, %r8385, %r8384, 14;
	shf.r.wrap.b32 	%r8387, %r8384, %r8385, 14;
	mov.b64 	%rd420, {%r8387, %r8386};
	shf.r.wrap.b32 	%r8388, %r8385, %r8384, 18;
	shf.r.wrap.b32 	%r8389, %r8384, %r8385, 18;
	mov.b64 	%rd421, {%r8389, %r8388};
	xor.b64  	%rd422, %rd421, %rd420;
	shf.l.wrap.b32 	%r8390, %r8384, %r8385, 23;
	shf.l.wrap.b32 	%r8391, %r8385, %r8384, 23;
	mov.b64 	%rd423, {%r8391, %r8390};
	xor.b64  	%rd424, %rd422, %rd423;
	xor.b64  	%rd425, %rd384, %rd360;
	and.b64  	%rd426, %rd408, %rd425;
	xor.b64  	%rd427, %rd426, %rd360;
	add.s64 	%rd428, %rd34, %rd4282;
	add.s64 	%rd429, %rd428, %rd4;
	add.s64 	%rd430, %rd429, %rd427;
	add.s64 	%rd431, %rd430, %rd424;
	add.s64 	%rd432, %rd431, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8392,%dummy}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8393}, %rd419;
	}
	shf.r.wrap.b32 	%r8394, %r8393, %r8392, 28;
	shf.r.wrap.b32 	%r8395, %r8392, %r8393, 28;
	mov.b64 	%rd433, {%r8395, %r8394};
	shf.l.wrap.b32 	%r8396, %r8392, %r8393, 30;
	shf.l.wrap.b32 	%r8397, %r8393, %r8392, 30;
	mov.b64 	%rd434, {%r8397, %r8396};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r8398, %r8392, %r8393, 25;
	shf.l.wrap.b32 	%r8399, %r8393, %r8392, 25;
	mov.b64 	%rd436, {%r8399, %r8398};
	xor.b64  	%rd437, %rd435, %rd436;
	and.b64  	%rd438, %rd419, %rd395;
	xor.b64  	%rd439, %rd419, %rd395;
	and.b64  	%rd440, %rd439, %rd371;
	or.b64  	%rd441, %rd440, %rd438;
	add.s64 	%rd442, %rd431, %rd441;
	add.s64 	%rd443, %rd442, %rd437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8400,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8401}, %rd432;
	}
	shf.r.wrap.b32 	%r8402, %r8401, %r8400, 14;
	shf.r.wrap.b32 	%r8403, %r8400, %r8401, 14;
	mov.b64 	%rd444, {%r8403, %r8402};
	shf.r.wrap.b32 	%r8404, %r8401, %r8400, 18;
	shf.r.wrap.b32 	%r8405, %r8400, %r8401, 18;
	mov.b64 	%rd445, {%r8405, %r8404};
	xor.b64  	%rd446, %rd445, %rd444;
	shf.l.wrap.b32 	%r8406, %r8400, %r8401, 23;
	shf.l.wrap.b32 	%r8407, %r8401, %r8400, 23;
	mov.b64 	%rd447, {%r8407, %r8406};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd408, %rd384;
	and.b64  	%rd450, %rd432, %rd449;
	xor.b64  	%rd451, %rd450, %rd384;
	add.s64 	%rd452, %rd360, %rd4283;
	add.s64 	%rd453, %rd452, %rd5;
	add.s64 	%rd454, %rd453, %rd451;
	add.s64 	%rd455, %rd454, %rd448;
	add.s64 	%rd456, %rd455, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8408,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8409}, %rd443;
	}
	shf.r.wrap.b32 	%r8410, %r8409, %r8408, 28;
	shf.r.wrap.b32 	%r8411, %r8408, %r8409, 28;
	mov.b64 	%rd457, {%r8411, %r8410};
	shf.l.wrap.b32 	%r8412, %r8408, %r8409, 30;
	shf.l.wrap.b32 	%r8413, %r8409, %r8408, 30;
	mov.b64 	%rd458, {%r8413, %r8412};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r8414, %r8408, %r8409, 25;
	shf.l.wrap.b32 	%r8415, %r8409, %r8408, 25;
	mov.b64 	%rd460, {%r8415, %r8414};
	xor.b64  	%rd461, %rd459, %rd460;
	and.b64  	%rd462, %rd443, %rd419;
	xor.b64  	%rd463, %rd443, %rd419;
	and.b64  	%rd464, %rd463, %rd395;
	or.b64  	%rd465, %rd464, %rd462;
	add.s64 	%rd466, %rd455, %rd465;
	add.s64 	%rd467, %rd466, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8416,%dummy}, %rd456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8417}, %rd456;
	}
	shf.r.wrap.b32 	%r8418, %r8417, %r8416, 14;
	shf.r.wrap.b32 	%r8419, %r8416, %r8417, 14;
	mov.b64 	%rd468, {%r8419, %r8418};
	shf.r.wrap.b32 	%r8420, %r8417, %r8416, 18;
	shf.r.wrap.b32 	%r8421, %r8416, %r8417, 18;
	mov.b64 	%rd469, {%r8421, %r8420};
	xor.b64  	%rd470, %rd469, %rd468;
	shf.l.wrap.b32 	%r8422, %r8416, %r8417, 23;
	shf.l.wrap.b32 	%r8423, %r8417, %r8416, 23;
	mov.b64 	%rd471, {%r8423, %r8422};
	xor.b64  	%rd472, %rd470, %rd471;
	xor.b64  	%rd473, %rd432, %rd408;
	and.b64  	%rd474, %rd456, %rd473;
	xor.b64  	%rd475, %rd474, %rd408;
	add.s64 	%rd476, %rd384, %rd4284;
	add.s64 	%rd477, %rd476, %rd6;
	add.s64 	%rd478, %rd477, %rd475;
	add.s64 	%rd479, %rd478, %rd472;
	add.s64 	%rd480, %rd479, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8424,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8425}, %rd467;
	}
	shf.r.wrap.b32 	%r8426, %r8425, %r8424, 28;
	shf.r.wrap.b32 	%r8427, %r8424, %r8425, 28;
	mov.b64 	%rd481, {%r8427, %r8426};
	shf.l.wrap.b32 	%r8428, %r8424, %r8425, 30;
	shf.l.wrap.b32 	%r8429, %r8425, %r8424, 30;
	mov.b64 	%rd482, {%r8429, %r8428};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.l.wrap.b32 	%r8430, %r8424, %r8425, 25;
	shf.l.wrap.b32 	%r8431, %r8425, %r8424, 25;
	mov.b64 	%rd484, {%r8431, %r8430};
	xor.b64  	%rd485, %rd483, %rd484;
	and.b64  	%rd486, %rd467, %rd443;
	xor.b64  	%rd487, %rd467, %rd443;
	and.b64  	%rd488, %rd487, %rd419;
	or.b64  	%rd489, %rd488, %rd486;
	add.s64 	%rd490, %rd479, %rd489;
	add.s64 	%rd491, %rd490, %rd485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8432,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8433}, %rd480;
	}
	shf.r.wrap.b32 	%r8434, %r8433, %r8432, 14;
	shf.r.wrap.b32 	%r8435, %r8432, %r8433, 14;
	mov.b64 	%rd492, {%r8435, %r8434};
	shf.r.wrap.b32 	%r8436, %r8433, %r8432, 18;
	shf.r.wrap.b32 	%r8437, %r8432, %r8433, 18;
	mov.b64 	%rd493, {%r8437, %r8436};
	xor.b64  	%rd494, %rd493, %rd492;
	shf.l.wrap.b32 	%r8438, %r8432, %r8433, 23;
	shf.l.wrap.b32 	%r8439, %r8433, %r8432, 23;
	mov.b64 	%rd495, {%r8439, %r8438};
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd456, %rd432;
	and.b64  	%rd498, %rd480, %rd497;
	xor.b64  	%rd499, %rd498, %rd432;
	add.s64 	%rd500, %rd408, %rd4285;
	add.s64 	%rd501, %rd500, %rd7;
	add.s64 	%rd502, %rd501, %rd499;
	add.s64 	%rd503, %rd502, %rd496;
	add.s64 	%rd504, %rd503, %rd419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8440,%dummy}, %rd491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8441}, %rd491;
	}
	shf.r.wrap.b32 	%r8442, %r8441, %r8440, 28;
	shf.r.wrap.b32 	%r8443, %r8440, %r8441, 28;
	mov.b64 	%rd505, {%r8443, %r8442};
	shf.l.wrap.b32 	%r8444, %r8440, %r8441, 30;
	shf.l.wrap.b32 	%r8445, %r8441, %r8440, 30;
	mov.b64 	%rd506, {%r8445, %r8444};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r8446, %r8440, %r8441, 25;
	shf.l.wrap.b32 	%r8447, %r8441, %r8440, 25;
	mov.b64 	%rd508, {%r8447, %r8446};
	xor.b64  	%rd509, %rd507, %rd508;
	and.b64  	%rd510, %rd491, %rd467;
	xor.b64  	%rd511, %rd491, %rd467;
	and.b64  	%rd512, %rd511, %rd443;
	or.b64  	%rd513, %rd512, %rd510;
	add.s64 	%rd514, %rd503, %rd513;
	add.s64 	%rd515, %rd514, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8448,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8449}, %rd504;
	}
	shf.r.wrap.b32 	%r8450, %r8449, %r8448, 14;
	shf.r.wrap.b32 	%r8451, %r8448, %r8449, 14;
	mov.b64 	%rd516, {%r8451, %r8450};
	shf.r.wrap.b32 	%r8452, %r8449, %r8448, 18;
	shf.r.wrap.b32 	%r8453, %r8448, %r8449, 18;
	mov.b64 	%rd517, {%r8453, %r8452};
	xor.b64  	%rd518, %rd517, %rd516;
	shf.l.wrap.b32 	%r8454, %r8448, %r8449, 23;
	shf.l.wrap.b32 	%r8455, %r8449, %r8448, 23;
	mov.b64 	%rd519, {%r8455, %r8454};
	xor.b64  	%rd520, %rd518, %rd519;
	xor.b64  	%rd521, %rd480, %rd456;
	and.b64  	%rd522, %rd504, %rd521;
	xor.b64  	%rd523, %rd522, %rd456;
	add.s64 	%rd524, %rd432, %rd4286;
	add.s64 	%rd525, %rd524, %rd8;
	add.s64 	%rd526, %rd525, %rd523;
	add.s64 	%rd527, %rd526, %rd520;
	add.s64 	%rd528, %rd527, %rd443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8456,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8457}, %rd515;
	}
	shf.r.wrap.b32 	%r8458, %r8457, %r8456, 28;
	shf.r.wrap.b32 	%r8459, %r8456, %r8457, 28;
	mov.b64 	%rd529, {%r8459, %r8458};
	shf.l.wrap.b32 	%r8460, %r8456, %r8457, 30;
	shf.l.wrap.b32 	%r8461, %r8457, %r8456, 30;
	mov.b64 	%rd530, {%r8461, %r8460};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r8462, %r8456, %r8457, 25;
	shf.l.wrap.b32 	%r8463, %r8457, %r8456, 25;
	mov.b64 	%rd532, {%r8463, %r8462};
	xor.b64  	%rd533, %rd531, %rd532;
	and.b64  	%rd534, %rd515, %rd491;
	xor.b64  	%rd535, %rd515, %rd491;
	and.b64  	%rd536, %rd535, %rd467;
	or.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd527, %rd537;
	add.s64 	%rd539, %rd538, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8465}, %rd528;
	}
	shf.r.wrap.b32 	%r8466, %r8465, %r8464, 14;
	shf.r.wrap.b32 	%r8467, %r8464, %r8465, 14;
	mov.b64 	%rd540, {%r8467, %r8466};
	shf.r.wrap.b32 	%r8468, %r8465, %r8464, 18;
	shf.r.wrap.b32 	%r8469, %r8464, %r8465, 18;
	mov.b64 	%rd541, {%r8469, %r8468};
	xor.b64  	%rd542, %rd541, %rd540;
	shf.l.wrap.b32 	%r8470, %r8464, %r8465, 23;
	shf.l.wrap.b32 	%r8471, %r8465, %r8464, 23;
	mov.b64 	%rd543, {%r8471, %r8470};
	xor.b64  	%rd544, %rd542, %rd543;
	xor.b64  	%rd545, %rd504, %rd480;
	and.b64  	%rd546, %rd528, %rd545;
	xor.b64  	%rd547, %rd546, %rd480;
	add.s64 	%rd548, %rd456, %rd4270;
	add.s64 	%rd549, %rd548, %rd9;
	add.s64 	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd550, %rd544;
	add.s64 	%rd552, %rd551, %rd467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8472,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8473}, %rd539;
	}
	shf.r.wrap.b32 	%r8474, %r8473, %r8472, 28;
	shf.r.wrap.b32 	%r8475, %r8472, %r8473, 28;
	mov.b64 	%rd553, {%r8475, %r8474};
	shf.l.wrap.b32 	%r8476, %r8472, %r8473, 30;
	shf.l.wrap.b32 	%r8477, %r8473, %r8472, 30;
	mov.b64 	%rd554, {%r8477, %r8476};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.l.wrap.b32 	%r8478, %r8472, %r8473, 25;
	shf.l.wrap.b32 	%r8479, %r8473, %r8472, 25;
	mov.b64 	%rd556, {%r8479, %r8478};
	xor.b64  	%rd557, %rd555, %rd556;
	and.b64  	%rd558, %rd539, %rd515;
	xor.b64  	%rd559, %rd539, %rd515;
	and.b64  	%rd560, %rd559, %rd491;
	or.b64  	%rd561, %rd560, %rd558;
	add.s64 	%rd562, %rd551, %rd561;
	add.s64 	%rd563, %rd562, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8480,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8481}, %rd552;
	}
	shf.r.wrap.b32 	%r8482, %r8481, %r8480, 14;
	shf.r.wrap.b32 	%r8483, %r8480, %r8481, 14;
	mov.b64 	%rd564, {%r8483, %r8482};
	shf.r.wrap.b32 	%r8484, %r8481, %r8480, 18;
	shf.r.wrap.b32 	%r8485, %r8480, %r8481, 18;
	mov.b64 	%rd565, {%r8485, %r8484};
	xor.b64  	%rd566, %rd565, %rd564;
	shf.l.wrap.b32 	%r8486, %r8480, %r8481, 23;
	shf.l.wrap.b32 	%r8487, %r8481, %r8480, 23;
	mov.b64 	%rd567, {%r8487, %r8486};
	xor.b64  	%rd568, %rd566, %rd567;
	xor.b64  	%rd569, %rd528, %rd504;
	and.b64  	%rd570, %rd552, %rd569;
	xor.b64  	%rd571, %rd570, %rd504;
	add.s64 	%rd572, %rd480, %rd4269;
	add.s64 	%rd573, %rd572, %rd10;
	add.s64 	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd574, %rd568;
	add.s64 	%rd576, %rd575, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8488,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8489}, %rd563;
	}
	shf.r.wrap.b32 	%r8490, %r8489, %r8488, 28;
	shf.r.wrap.b32 	%r8491, %r8488, %r8489, 28;
	mov.b64 	%rd577, {%r8491, %r8490};
	shf.l.wrap.b32 	%r8492, %r8488, %r8489, 30;
	shf.l.wrap.b32 	%r8493, %r8489, %r8488, 30;
	mov.b64 	%rd578, {%r8493, %r8492};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.l.wrap.b32 	%r8494, %r8488, %r8489, 25;
	shf.l.wrap.b32 	%r8495, %r8489, %r8488, 25;
	mov.b64 	%rd580, {%r8495, %r8494};
	xor.b64  	%rd581, %rd579, %rd580;
	and.b64  	%rd582, %rd563, %rd539;
	xor.b64  	%rd583, %rd563, %rd539;
	and.b64  	%rd584, %rd583, %rd515;
	or.b64  	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd575, %rd585;
	add.s64 	%rd587, %rd586, %rd581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8496,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8497}, %rd576;
	}
	shf.r.wrap.b32 	%r8498, %r8497, %r8496, 14;
	shf.r.wrap.b32 	%r8499, %r8496, %r8497, 14;
	mov.b64 	%rd588, {%r8499, %r8498};
	shf.r.wrap.b32 	%r8500, %r8497, %r8496, 18;
	shf.r.wrap.b32 	%r8501, %r8496, %r8497, 18;
	mov.b64 	%rd589, {%r8501, %r8500};
	xor.b64  	%rd590, %rd589, %rd588;
	shf.l.wrap.b32 	%r8502, %r8496, %r8497, 23;
	shf.l.wrap.b32 	%r8503, %r8497, %r8496, 23;
	mov.b64 	%rd591, {%r8503, %r8502};
	xor.b64  	%rd592, %rd590, %rd591;
	xor.b64  	%rd593, %rd552, %rd528;
	and.b64  	%rd594, %rd576, %rd593;
	xor.b64  	%rd595, %rd594, %rd528;
	add.s64 	%rd596, %rd504, %rd4268;
	add.s64 	%rd597, %rd596, %rd11;
	add.s64 	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd598, %rd592;
	add.s64 	%rd600, %rd599, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8504,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8505}, %rd587;
	}
	shf.r.wrap.b32 	%r8506, %r8505, %r8504, 28;
	shf.r.wrap.b32 	%r8507, %r8504, %r8505, 28;
	mov.b64 	%rd601, {%r8507, %r8506};
	shf.l.wrap.b32 	%r8508, %r8504, %r8505, 30;
	shf.l.wrap.b32 	%r8509, %r8505, %r8504, 30;
	mov.b64 	%rd602, {%r8509, %r8508};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.l.wrap.b32 	%r8510, %r8504, %r8505, 25;
	shf.l.wrap.b32 	%r8511, %r8505, %r8504, 25;
	mov.b64 	%rd604, {%r8511, %r8510};
	xor.b64  	%rd605, %rd603, %rd604;
	and.b64  	%rd606, %rd587, %rd563;
	xor.b64  	%rd607, %rd587, %rd563;
	and.b64  	%rd608, %rd607, %rd539;
	or.b64  	%rd609, %rd608, %rd606;
	add.s64 	%rd610, %rd599, %rd609;
	add.s64 	%rd611, %rd610, %rd605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8513}, %rd600;
	}
	shf.r.wrap.b32 	%r8514, %r8513, %r8512, 14;
	shf.r.wrap.b32 	%r8515, %r8512, %r8513, 14;
	mov.b64 	%rd612, {%r8515, %r8514};
	shf.r.wrap.b32 	%r8516, %r8513, %r8512, 18;
	shf.r.wrap.b32 	%r8517, %r8512, %r8513, 18;
	mov.b64 	%rd613, {%r8517, %r8516};
	xor.b64  	%rd614, %rd613, %rd612;
	shf.l.wrap.b32 	%r8518, %r8512, %r8513, 23;
	shf.l.wrap.b32 	%r8519, %r8513, %r8512, 23;
	mov.b64 	%rd615, {%r8519, %r8518};
	xor.b64  	%rd616, %rd614, %rd615;
	xor.b64  	%rd617, %rd576, %rd552;
	and.b64  	%rd618, %rd600, %rd617;
	xor.b64  	%rd619, %rd618, %rd552;
	add.s64 	%rd620, %rd528, %rd4267;
	add.s64 	%rd621, %rd620, %rd12;
	add.s64 	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd622, %rd616;
	add.s64 	%rd624, %rd623, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8520,%dummy}, %rd611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8521}, %rd611;
	}
	shf.r.wrap.b32 	%r8522, %r8521, %r8520, 28;
	shf.r.wrap.b32 	%r8523, %r8520, %r8521, 28;
	mov.b64 	%rd625, {%r8523, %r8522};
	shf.l.wrap.b32 	%r8524, %r8520, %r8521, 30;
	shf.l.wrap.b32 	%r8525, %r8521, %r8520, 30;
	mov.b64 	%rd626, {%r8525, %r8524};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.l.wrap.b32 	%r8526, %r8520, %r8521, 25;
	shf.l.wrap.b32 	%r8527, %r8521, %r8520, 25;
	mov.b64 	%rd628, {%r8527, %r8526};
	xor.b64  	%rd629, %rd627, %rd628;
	and.b64  	%rd630, %rd611, %rd587;
	xor.b64  	%rd631, %rd611, %rd587;
	and.b64  	%rd632, %rd631, %rd563;
	or.b64  	%rd633, %rd632, %rd630;
	add.s64 	%rd634, %rd623, %rd633;
	add.s64 	%rd635, %rd634, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8528,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8529}, %rd624;
	}
	shf.r.wrap.b32 	%r8530, %r8529, %r8528, 14;
	shf.r.wrap.b32 	%r8531, %r8528, %r8529, 14;
	mov.b64 	%rd636, {%r8531, %r8530};
	shf.r.wrap.b32 	%r8532, %r8529, %r8528, 18;
	shf.r.wrap.b32 	%r8533, %r8528, %r8529, 18;
	mov.b64 	%rd637, {%r8533, %r8532};
	xor.b64  	%rd638, %rd637, %rd636;
	shf.l.wrap.b32 	%r8534, %r8528, %r8529, 23;
	shf.l.wrap.b32 	%r8535, %r8529, %r8528, 23;
	mov.b64 	%rd639, {%r8535, %r8534};
	xor.b64  	%rd640, %rd638, %rd639;
	xor.b64  	%rd641, %rd600, %rd576;
	and.b64  	%rd642, %rd624, %rd641;
	xor.b64  	%rd643, %rd642, %rd576;
	add.s64 	%rd644, %rd552, %rd4266;
	add.s64 	%rd645, %rd644, %rd13;
	add.s64 	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd646, %rd640;
	add.s64 	%rd4278, %rd647, %rd563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8536,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8537}, %rd635;
	}
	shf.r.wrap.b32 	%r8538, %r8537, %r8536, 28;
	shf.r.wrap.b32 	%r8539, %r8536, %r8537, 28;
	mov.b64 	%rd648, {%r8539, %r8538};
	shf.l.wrap.b32 	%r8540, %r8536, %r8537, 30;
	shf.l.wrap.b32 	%r8541, %r8537, %r8536, 30;
	mov.b64 	%rd649, {%r8541, %r8540};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r8542, %r8536, %r8537, 25;
	shf.l.wrap.b32 	%r8543, %r8537, %r8536, 25;
	mov.b64 	%rd651, {%r8543, %r8542};
	xor.b64  	%rd652, %rd650, %rd651;
	and.b64  	%rd653, %rd635, %rd611;
	xor.b64  	%rd654, %rd635, %rd611;
	and.b64  	%rd655, %rd654, %rd587;
	or.b64  	%rd656, %rd655, %rd653;
	add.s64 	%rd657, %rd647, %rd656;
	add.s64 	%rd4274, %rd657, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8544,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8545}, %rd4278;
	}
	shf.r.wrap.b32 	%r8546, %r8545, %r8544, 14;
	shf.r.wrap.b32 	%r8547, %r8544, %r8545, 14;
	mov.b64 	%rd658, {%r8547, %r8546};
	shf.r.wrap.b32 	%r8548, %r8545, %r8544, 18;
	shf.r.wrap.b32 	%r8549, %r8544, %r8545, 18;
	mov.b64 	%rd659, {%r8549, %r8548};
	xor.b64  	%rd660, %rd659, %rd658;
	shf.l.wrap.b32 	%r8550, %r8544, %r8545, 23;
	shf.l.wrap.b32 	%r8551, %r8545, %r8544, 23;
	mov.b64 	%rd661, {%r8551, %r8550};
	xor.b64  	%rd662, %rd660, %rd661;
	xor.b64  	%rd663, %rd624, %rd600;
	and.b64  	%rd664, %rd4278, %rd663;
	xor.b64  	%rd665, %rd664, %rd600;
	add.s64 	%rd666, %rd576, %rd4265;
	add.s64 	%rd667, %rd666, %rd14;
	add.s64 	%rd668, %rd667, %rd665;
	add.s64 	%rd669, %rd668, %rd662;
	add.s64 	%rd4277, %rd669, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8552,%dummy}, %rd4274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8553}, %rd4274;
	}
	shf.r.wrap.b32 	%r8554, %r8553, %r8552, 28;
	shf.r.wrap.b32 	%r8555, %r8552, %r8553, 28;
	mov.b64 	%rd670, {%r8555, %r8554};
	shf.l.wrap.b32 	%r8556, %r8552, %r8553, 30;
	shf.l.wrap.b32 	%r8557, %r8553, %r8552, 30;
	mov.b64 	%rd671, {%r8557, %r8556};
	xor.b64  	%rd672, %rd671, %rd670;
	shf.l.wrap.b32 	%r8558, %r8552, %r8553, 25;
	shf.l.wrap.b32 	%r8559, %r8553, %r8552, 25;
	mov.b64 	%rd673, {%r8559, %r8558};
	xor.b64  	%rd674, %rd672, %rd673;
	and.b64  	%rd675, %rd4274, %rd635;
	xor.b64  	%rd676, %rd4274, %rd635;
	and.b64  	%rd677, %rd676, %rd611;
	or.b64  	%rd678, %rd677, %rd675;
	add.s64 	%rd679, %rd669, %rd678;
	add.s64 	%rd4273, %rd679, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8560,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8561}, %rd4277;
	}
	shf.r.wrap.b32 	%r8562, %r8561, %r8560, 14;
	shf.r.wrap.b32 	%r8563, %r8560, %r8561, 14;
	mov.b64 	%rd680, {%r8563, %r8562};
	shf.r.wrap.b32 	%r8564, %r8561, %r8560, 18;
	shf.r.wrap.b32 	%r8565, %r8560, %r8561, 18;
	mov.b64 	%rd681, {%r8565, %r8564};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r8566, %r8560, %r8561, 23;
	shf.l.wrap.b32 	%r8567, %r8561, %r8560, 23;
	mov.b64 	%rd683, {%r8567, %r8566};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd4278, %rd624;
	and.b64  	%rd686, %rd4277, %rd685;
	xor.b64  	%rd687, %rd686, %rd624;
	add.s64 	%rd688, %rd600, %rd4264;
	add.s64 	%rd689, %rd688, %rd15;
	add.s64 	%rd690, %rd689, %rd687;
	add.s64 	%rd691, %rd690, %rd684;
	add.s64 	%rd4276, %rd691, %rd611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8568,%dummy}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8569}, %rd4273;
	}
	shf.r.wrap.b32 	%r8570, %r8569, %r8568, 28;
	shf.r.wrap.b32 	%r8571, %r8568, %r8569, 28;
	mov.b64 	%rd692, {%r8571, %r8570};
	shf.l.wrap.b32 	%r8572, %r8568, %r8569, 30;
	shf.l.wrap.b32 	%r8573, %r8569, %r8568, 30;
	mov.b64 	%rd693, {%r8573, %r8572};
	xor.b64  	%rd694, %rd693, %rd692;
	shf.l.wrap.b32 	%r8574, %r8568, %r8569, 25;
	shf.l.wrap.b32 	%r8575, %r8569, %r8568, 25;
	mov.b64 	%rd695, {%r8575, %r8574};
	xor.b64  	%rd696, %rd694, %rd695;
	and.b64  	%rd697, %rd4273, %rd4274;
	xor.b64  	%rd698, %rd4273, %rd4274;
	and.b64  	%rd699, %rd698, %rd635;
	or.b64  	%rd700, %rd699, %rd697;
	add.s64 	%rd701, %rd691, %rd700;
	add.s64 	%rd4272, %rd701, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8576,%dummy}, %rd4276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8577}, %rd4276;
	}
	shf.r.wrap.b32 	%r8578, %r8577, %r8576, 14;
	shf.r.wrap.b32 	%r8579, %r8576, %r8577, 14;
	mov.b64 	%rd702, {%r8579, %r8578};
	shf.r.wrap.b32 	%r8580, %r8577, %r8576, 18;
	shf.r.wrap.b32 	%r8581, %r8576, %r8577, 18;
	mov.b64 	%rd703, {%r8581, %r8580};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r8582, %r8576, %r8577, 23;
	shf.l.wrap.b32 	%r8583, %r8577, %r8576, 23;
	mov.b64 	%rd705, {%r8583, %r8582};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd4277, %rd4278;
	and.b64  	%rd708, %rd4276, %rd707;
	xor.b64  	%rd709, %rd708, %rd4278;
	add.s64 	%rd710, %rd624, %rd4263;
	add.s64 	%rd711, %rd710, %rd16;
	add.s64 	%rd712, %rd711, %rd709;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd4275, %rd713, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8584,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8585}, %rd4272;
	}
	shf.r.wrap.b32 	%r8586, %r8585, %r8584, 28;
	shf.r.wrap.b32 	%r8587, %r8584, %r8585, 28;
	mov.b64 	%rd714, {%r8587, %r8586};
	shf.l.wrap.b32 	%r8588, %r8584, %r8585, 30;
	shf.l.wrap.b32 	%r8589, %r8585, %r8584, 30;
	mov.b64 	%rd715, {%r8589, %r8588};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.l.wrap.b32 	%r8590, %r8584, %r8585, 25;
	shf.l.wrap.b32 	%r8591, %r8585, %r8584, 25;
	mov.b64 	%rd717, {%r8591, %r8590};
	xor.b64  	%rd718, %rd716, %rd717;
	and.b64  	%rd719, %rd4272, %rd4273;
	xor.b64  	%rd720, %rd4272, %rd4273;
	and.b64  	%rd721, %rd720, %rd4274;
	or.b64  	%rd722, %rd721, %rd719;
	add.s64 	%rd723, %rd713, %rd722;
	add.s64 	%rd4271, %rd723, %rd718;
	mov.u32 	%r19299, 16;

BB2_93:
	shr.u64 	%rd724, %rd4264, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8593}, %rd4264;
	}
	shf.r.wrap.b32 	%r8594, %r8593, %r8592, 19;
	shf.r.wrap.b32 	%r8595, %r8592, %r8593, 19;
	mov.b64 	%rd725, {%r8595, %r8594};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r8596, %r8592, %r8593, 3;
	shf.l.wrap.b32 	%r8597, %r8593, %r8592, 3;
	mov.b64 	%rd727, {%r8597, %r8596};
	xor.b64  	%rd728, %rd726, %rd727;
	shr.u64 	%rd729, %rd4280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8598,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8599}, %rd4280;
	}
	shf.r.wrap.b32 	%r8600, %r8599, %r8598, 1;
	shf.r.wrap.b32 	%r8601, %r8598, %r8599, 1;
	mov.b64 	%rd730, {%r8601, %r8600};
	xor.b64  	%rd731, %rd730, %rd729;
	shf.r.wrap.b32 	%r8602, %r8599, %r8598, 8;
	shf.r.wrap.b32 	%r8603, %r8598, %r8599, 8;
	mov.b64 	%rd732, {%r8603, %r8602};
	xor.b64  	%rd733, %rd731, %rd732;
	add.s64 	%rd734, %rd4279, %rd4269;
	add.s64 	%rd735, %rd734, %rd728;
	add.s64 	%rd4279, %rd735, %rd733;
	shr.u64 	%rd736, %rd4263, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8604,%dummy}, %rd4263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8605}, %rd4263;
	}
	shf.r.wrap.b32 	%r8606, %r8605, %r8604, 19;
	shf.r.wrap.b32 	%r8607, %r8604, %r8605, 19;
	mov.b64 	%rd737, {%r8607, %r8606};
	xor.b64  	%rd738, %rd737, %rd736;
	shf.l.wrap.b32 	%r8608, %r8604, %r8605, 3;
	shf.l.wrap.b32 	%r8609, %r8605, %r8604, 3;
	mov.b64 	%rd739, {%r8609, %r8608};
	xor.b64  	%rd740, %rd738, %rd739;
	shr.u64 	%rd741, %rd4281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8610,%dummy}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd4281;
	}
	shf.r.wrap.b32 	%r8612, %r8611, %r8610, 1;
	shf.r.wrap.b32 	%r8613, %r8610, %r8611, 1;
	mov.b64 	%rd742, {%r8613, %r8612};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.r.wrap.b32 	%r8614, %r8611, %r8610, 8;
	shf.r.wrap.b32 	%r8615, %r8610, %r8611, 8;
	mov.b64 	%rd744, {%r8615, %r8614};
	xor.b64  	%rd745, %rd743, %rd744;
	add.s64 	%rd746, %rd4280, %rd4268;
	add.s64 	%rd747, %rd746, %rd740;
	add.s64 	%rd4280, %rd747, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8616,%dummy}, %rd4279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8617}, %rd4279;
	}
	shf.r.wrap.b32 	%r8618, %r8617, %r8616, 19;
	shf.r.wrap.b32 	%r8619, %r8616, %r8617, 19;
	mov.b64 	%rd748, {%r8619, %r8618};
	shf.l.wrap.b32 	%r8620, %r8616, %r8617, 3;
	shf.l.wrap.b32 	%r8621, %r8617, %r8616, 3;
	mov.b64 	%rd749, {%r8621, %r8620};
	shr.u64 	%rd750, %rd4279, 6;
	xor.b64  	%rd751, %rd748, %rd750;
	xor.b64  	%rd752, %rd751, %rd749;
	shr.u64 	%rd753, %rd4282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8622,%dummy}, %rd4282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd4282;
	}
	shf.r.wrap.b32 	%r8624, %r8623, %r8622, 1;
	shf.r.wrap.b32 	%r8625, %r8622, %r8623, 1;
	mov.b64 	%rd754, {%r8625, %r8624};
	xor.b64  	%rd755, %rd754, %rd753;
	shf.r.wrap.b32 	%r8626, %r8623, %r8622, 8;
	shf.r.wrap.b32 	%r8627, %r8622, %r8623, 8;
	mov.b64 	%rd756, {%r8627, %r8626};
	xor.b64  	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd4281, %rd4267;
	add.s64 	%rd759, %rd758, %rd752;
	add.s64 	%rd4281, %rd759, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8628,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8629}, %rd4280;
	}
	shf.r.wrap.b32 	%r8630, %r8629, %r8628, 19;
	shf.r.wrap.b32 	%r8631, %r8628, %r8629, 19;
	mov.b64 	%rd760, {%r8631, %r8630};
	shf.l.wrap.b32 	%r8632, %r8628, %r8629, 3;
	shf.l.wrap.b32 	%r8633, %r8629, %r8628, 3;
	mov.b64 	%rd761, {%r8633, %r8632};
	shr.u64 	%rd762, %rd4280, 6;
	xor.b64  	%rd763, %rd760, %rd762;
	xor.b64  	%rd764, %rd763, %rd761;
	shr.u64 	%rd765, %rd4283, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8634,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd4283;
	}
	shf.r.wrap.b32 	%r8636, %r8635, %r8634, 1;
	shf.r.wrap.b32 	%r8637, %r8634, %r8635, 1;
	mov.b64 	%rd766, {%r8637, %r8636};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.r.wrap.b32 	%r8638, %r8635, %r8634, 8;
	shf.r.wrap.b32 	%r8639, %r8634, %r8635, 8;
	mov.b64 	%rd768, {%r8639, %r8638};
	xor.b64  	%rd769, %rd767, %rd768;
	add.s64 	%rd770, %rd4282, %rd4266;
	add.s64 	%rd771, %rd770, %rd764;
	add.s64 	%rd4282, %rd771, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8640,%dummy}, %rd4281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8641}, %rd4281;
	}
	shf.r.wrap.b32 	%r8642, %r8641, %r8640, 19;
	shf.r.wrap.b32 	%r8643, %r8640, %r8641, 19;
	mov.b64 	%rd772, {%r8643, %r8642};
	shf.l.wrap.b32 	%r8644, %r8640, %r8641, 3;
	shf.l.wrap.b32 	%r8645, %r8641, %r8640, 3;
	mov.b64 	%rd773, {%r8645, %r8644};
	shr.u64 	%rd774, %rd4281, 6;
	xor.b64  	%rd775, %rd772, %rd774;
	xor.b64  	%rd776, %rd775, %rd773;
	shr.u64 	%rd777, %rd4284, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8646,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8647}, %rd4284;
	}
	shf.r.wrap.b32 	%r8648, %r8647, %r8646, 1;
	shf.r.wrap.b32 	%r8649, %r8646, %r8647, 1;
	mov.b64 	%rd778, {%r8649, %r8648};
	xor.b64  	%rd779, %rd778, %rd777;
	shf.r.wrap.b32 	%r8650, %r8647, %r8646, 8;
	shf.r.wrap.b32 	%r8651, %r8646, %r8647, 8;
	mov.b64 	%rd780, {%r8651, %r8650};
	xor.b64  	%rd781, %rd779, %rd780;
	add.s64 	%rd782, %rd4283, %rd4265;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd4283, %rd783, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8652,%dummy}, %rd4282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8653}, %rd4282;
	}
	shf.r.wrap.b32 	%r8654, %r8653, %r8652, 19;
	shf.r.wrap.b32 	%r8655, %r8652, %r8653, 19;
	mov.b64 	%rd784, {%r8655, %r8654};
	shf.l.wrap.b32 	%r8656, %r8652, %r8653, 3;
	shf.l.wrap.b32 	%r8657, %r8653, %r8652, 3;
	mov.b64 	%rd785, {%r8657, %r8656};
	shr.u64 	%rd786, %rd4282, 6;
	xor.b64  	%rd787, %rd784, %rd786;
	xor.b64  	%rd788, %rd787, %rd785;
	shr.u64 	%rd789, %rd4285, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8658,%dummy}, %rd4285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8659}, %rd4285;
	}
	shf.r.wrap.b32 	%r8660, %r8659, %r8658, 1;
	shf.r.wrap.b32 	%r8661, %r8658, %r8659, 1;
	mov.b64 	%rd790, {%r8661, %r8660};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.r.wrap.b32 	%r8662, %r8659, %r8658, 8;
	shf.r.wrap.b32 	%r8663, %r8658, %r8659, 8;
	mov.b64 	%rd792, {%r8663, %r8662};
	xor.b64  	%rd793, %rd791, %rd792;
	add.s64 	%rd794, %rd4284, %rd4264;
	add.s64 	%rd795, %rd794, %rd788;
	add.s64 	%rd4284, %rd795, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8664,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8665}, %rd4283;
	}
	shf.r.wrap.b32 	%r8666, %r8665, %r8664, 19;
	shf.r.wrap.b32 	%r8667, %r8664, %r8665, 19;
	mov.b64 	%rd796, {%r8667, %r8666};
	shf.l.wrap.b32 	%r8668, %r8664, %r8665, 3;
	shf.l.wrap.b32 	%r8669, %r8665, %r8664, 3;
	mov.b64 	%rd797, {%r8669, %r8668};
	shr.u64 	%rd798, %rd4283, 6;
	xor.b64  	%rd799, %rd796, %rd798;
	xor.b64  	%rd800, %rd799, %rd797;
	shr.u64 	%rd801, %rd4286, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8670,%dummy}, %rd4286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8671}, %rd4286;
	}
	shf.r.wrap.b32 	%r8672, %r8671, %r8670, 1;
	shf.r.wrap.b32 	%r8673, %r8670, %r8671, 1;
	mov.b64 	%rd802, {%r8673, %r8672};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.r.wrap.b32 	%r8674, %r8671, %r8670, 8;
	shf.r.wrap.b32 	%r8675, %r8670, %r8671, 8;
	mov.b64 	%rd804, {%r8675, %r8674};
	xor.b64  	%rd805, %rd803, %rd804;
	add.s64 	%rd806, %rd4285, %rd4263;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd4285, %rd807, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8677}, %rd4284;
	}
	shf.r.wrap.b32 	%r8678, %r8677, %r8676, 19;
	shf.r.wrap.b32 	%r8679, %r8676, %r8677, 19;
	mov.b64 	%rd808, {%r8679, %r8678};
	shf.l.wrap.b32 	%r8680, %r8676, %r8677, 3;
	shf.l.wrap.b32 	%r8681, %r8677, %r8676, 3;
	mov.b64 	%rd809, {%r8681, %r8680};
	shr.u64 	%rd810, %rd4284, 6;
	xor.b64  	%rd811, %rd808, %rd810;
	xor.b64  	%rd812, %rd811, %rd809;
	shr.u64 	%rd813, %rd4270, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8682,%dummy}, %rd4270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8683}, %rd4270;
	}
	shf.r.wrap.b32 	%r8684, %r8683, %r8682, 1;
	shf.r.wrap.b32 	%r8685, %r8682, %r8683, 1;
	mov.b64 	%rd814, {%r8685, %r8684};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.r.wrap.b32 	%r8686, %r8683, %r8682, 8;
	shf.r.wrap.b32 	%r8687, %r8682, %r8683, 8;
	mov.b64 	%rd816, {%r8687, %r8686};
	xor.b64  	%rd817, %rd815, %rd816;
	add.s64 	%rd818, %rd4279, %rd4286;
	add.s64 	%rd819, %rd818, %rd812;
	add.s64 	%rd4286, %rd819, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8688,%dummy}, %rd4285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8689}, %rd4285;
	}
	shf.r.wrap.b32 	%r8690, %r8689, %r8688, 19;
	shf.r.wrap.b32 	%r8691, %r8688, %r8689, 19;
	mov.b64 	%rd820, {%r8691, %r8690};
	shf.l.wrap.b32 	%r8692, %r8688, %r8689, 3;
	shf.l.wrap.b32 	%r8693, %r8689, %r8688, 3;
	mov.b64 	%rd821, {%r8693, %r8692};
	shr.u64 	%rd822, %rd4285, 6;
	xor.b64  	%rd823, %rd820, %rd822;
	xor.b64  	%rd824, %rd823, %rd821;
	shr.u64 	%rd825, %rd4269, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8694,%dummy}, %rd4269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd4269;
	}
	shf.r.wrap.b32 	%r8696, %r8695, %r8694, 1;
	shf.r.wrap.b32 	%r8697, %r8694, %r8695, 1;
	mov.b64 	%rd826, {%r8697, %r8696};
	xor.b64  	%rd827, %rd826, %rd825;
	shf.r.wrap.b32 	%r8698, %r8695, %r8694, 8;
	shf.r.wrap.b32 	%r8699, %r8694, %r8695, 8;
	mov.b64 	%rd828, {%r8699, %r8698};
	xor.b64  	%rd829, %rd827, %rd828;
	add.s64 	%rd830, %rd4280, %rd4270;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd4270, %rd831, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd4286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd4286;
	}
	shf.r.wrap.b32 	%r8702, %r8701, %r8700, 19;
	shf.r.wrap.b32 	%r8703, %r8700, %r8701, 19;
	mov.b64 	%rd832, {%r8703, %r8702};
	shf.l.wrap.b32 	%r8704, %r8700, %r8701, 3;
	shf.l.wrap.b32 	%r8705, %r8701, %r8700, 3;
	mov.b64 	%rd833, {%r8705, %r8704};
	shr.u64 	%rd834, %rd4286, 6;
	xor.b64  	%rd835, %rd832, %rd834;
	xor.b64  	%rd836, %rd835, %rd833;
	shr.u64 	%rd837, %rd4268, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8706,%dummy}, %rd4268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8707}, %rd4268;
	}
	shf.r.wrap.b32 	%r8708, %r8707, %r8706, 1;
	shf.r.wrap.b32 	%r8709, %r8706, %r8707, 1;
	mov.b64 	%rd838, {%r8709, %r8708};
	xor.b64  	%rd839, %rd838, %rd837;
	shf.r.wrap.b32 	%r8710, %r8707, %r8706, 8;
	shf.r.wrap.b32 	%r8711, %r8706, %r8707, 8;
	mov.b64 	%rd840, {%r8711, %r8710};
	xor.b64  	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd4281, %rd4269;
	add.s64 	%rd843, %rd842, %rd836;
	add.s64 	%rd4269, %rd843, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8712,%dummy}, %rd4270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8713}, %rd4270;
	}
	shf.r.wrap.b32 	%r8714, %r8713, %r8712, 19;
	shf.r.wrap.b32 	%r8715, %r8712, %r8713, 19;
	mov.b64 	%rd844, {%r8715, %r8714};
	shf.l.wrap.b32 	%r8716, %r8712, %r8713, 3;
	shf.l.wrap.b32 	%r8717, %r8713, %r8712, 3;
	mov.b64 	%rd845, {%r8717, %r8716};
	shr.u64 	%rd846, %rd4270, 6;
	xor.b64  	%rd847, %rd844, %rd846;
	xor.b64  	%rd848, %rd847, %rd845;
	shr.u64 	%rd849, %rd4267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8718,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8719}, %rd4267;
	}
	shf.r.wrap.b32 	%r8720, %r8719, %r8718, 1;
	shf.r.wrap.b32 	%r8721, %r8718, %r8719, 1;
	mov.b64 	%rd850, {%r8721, %r8720};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.r.wrap.b32 	%r8722, %r8719, %r8718, 8;
	shf.r.wrap.b32 	%r8723, %r8718, %r8719, 8;
	mov.b64 	%rd852, {%r8723, %r8722};
	xor.b64  	%rd853, %rd851, %rd852;
	add.s64 	%rd854, %rd4282, %rd4268;
	add.s64 	%rd855, %rd854, %rd848;
	add.s64 	%rd4268, %rd855, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8724,%dummy}, %rd4269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8725}, %rd4269;
	}
	shf.r.wrap.b32 	%r8726, %r8725, %r8724, 19;
	shf.r.wrap.b32 	%r8727, %r8724, %r8725, 19;
	mov.b64 	%rd856, {%r8727, %r8726};
	shf.l.wrap.b32 	%r8728, %r8724, %r8725, 3;
	shf.l.wrap.b32 	%r8729, %r8725, %r8724, 3;
	mov.b64 	%rd857, {%r8729, %r8728};
	shr.u64 	%rd858, %rd4269, 6;
	xor.b64  	%rd859, %rd856, %rd858;
	xor.b64  	%rd860, %rd859, %rd857;
	shr.u64 	%rd861, %rd4266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8730,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8731}, %rd4266;
	}
	shf.r.wrap.b32 	%r8732, %r8731, %r8730, 1;
	shf.r.wrap.b32 	%r8733, %r8730, %r8731, 1;
	mov.b64 	%rd862, {%r8733, %r8732};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.r.wrap.b32 	%r8734, %r8731, %r8730, 8;
	shf.r.wrap.b32 	%r8735, %r8730, %r8731, 8;
	mov.b64 	%rd864, {%r8735, %r8734};
	xor.b64  	%rd865, %rd863, %rd864;
	add.s64 	%rd866, %rd4283, %rd4267;
	add.s64 	%rd867, %rd866, %rd860;
	add.s64 	%rd4267, %rd867, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8736,%dummy}, %rd4268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8737}, %rd4268;
	}
	shf.r.wrap.b32 	%r8738, %r8737, %r8736, 19;
	shf.r.wrap.b32 	%r8739, %r8736, %r8737, 19;
	mov.b64 	%rd868, {%r8739, %r8738};
	shf.l.wrap.b32 	%r8740, %r8736, %r8737, 3;
	shf.l.wrap.b32 	%r8741, %r8737, %r8736, 3;
	mov.b64 	%rd869, {%r8741, %r8740};
	shr.u64 	%rd870, %rd4268, 6;
	xor.b64  	%rd871, %rd868, %rd870;
	xor.b64  	%rd872, %rd871, %rd869;
	shr.u64 	%rd873, %rd4265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8742,%dummy}, %rd4265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8743}, %rd4265;
	}
	shf.r.wrap.b32 	%r8744, %r8743, %r8742, 1;
	shf.r.wrap.b32 	%r8745, %r8742, %r8743, 1;
	mov.b64 	%rd874, {%r8745, %r8744};
	xor.b64  	%rd875, %rd874, %rd873;
	shf.r.wrap.b32 	%r8746, %r8743, %r8742, 8;
	shf.r.wrap.b32 	%r8747, %r8742, %r8743, 8;
	mov.b64 	%rd876, {%r8747, %r8746};
	xor.b64  	%rd877, %rd875, %rd876;
	add.s64 	%rd878, %rd4284, %rd4266;
	add.s64 	%rd879, %rd878, %rd872;
	add.s64 	%rd4266, %rd879, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8748,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8749}, %rd4267;
	}
	shf.r.wrap.b32 	%r8750, %r8749, %r8748, 19;
	shf.r.wrap.b32 	%r8751, %r8748, %r8749, 19;
	mov.b64 	%rd880, {%r8751, %r8750};
	shf.l.wrap.b32 	%r8752, %r8748, %r8749, 3;
	shf.l.wrap.b32 	%r8753, %r8749, %r8748, 3;
	mov.b64 	%rd881, {%r8753, %r8752};
	shr.u64 	%rd882, %rd4267, 6;
	xor.b64  	%rd883, %rd880, %rd882;
	xor.b64  	%rd884, %rd883, %rd881;
	shr.u64 	%rd885, %rd4264, 7;
	shf.r.wrap.b32 	%r8754, %r8593, %r8592, 1;
	shf.r.wrap.b32 	%r8755, %r8592, %r8593, 1;
	mov.b64 	%rd886, {%r8755, %r8754};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.r.wrap.b32 	%r8756, %r8593, %r8592, 8;
	shf.r.wrap.b32 	%r8757, %r8592, %r8593, 8;
	mov.b64 	%rd888, {%r8757, %r8756};
	xor.b64  	%rd889, %rd887, %rd888;
	add.s64 	%rd890, %rd4285, %rd4265;
	add.s64 	%rd891, %rd890, %rd884;
	add.s64 	%rd4265, %rd891, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8758,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8759}, %rd4266;
	}
	shf.r.wrap.b32 	%r8760, %r8759, %r8758, 19;
	shf.r.wrap.b32 	%r8761, %r8758, %r8759, 19;
	mov.b64 	%rd892, {%r8761, %r8760};
	shf.l.wrap.b32 	%r8762, %r8758, %r8759, 3;
	shf.l.wrap.b32 	%r8763, %r8759, %r8758, 3;
	mov.b64 	%rd893, {%r8763, %r8762};
	shr.u64 	%rd894, %rd4266, 6;
	xor.b64  	%rd895, %rd892, %rd894;
	xor.b64  	%rd896, %rd895, %rd893;
	shr.u64 	%rd897, %rd4263, 7;
	shf.r.wrap.b32 	%r8764, %r8605, %r8604, 1;
	shf.r.wrap.b32 	%r8765, %r8604, %r8605, 1;
	mov.b64 	%rd898, {%r8765, %r8764};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.r.wrap.b32 	%r8766, %r8605, %r8604, 8;
	shf.r.wrap.b32 	%r8767, %r8604, %r8605, 8;
	mov.b64 	%rd900, {%r8767, %r8766};
	xor.b64  	%rd901, %rd899, %rd900;
	add.s64 	%rd902, %rd4286, %rd4264;
	add.s64 	%rd903, %rd902, %rd896;
	add.s64 	%rd4264, %rd903, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8768,%dummy}, %rd4265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8769}, %rd4265;
	}
	shf.r.wrap.b32 	%r8770, %r8769, %r8768, 19;
	shf.r.wrap.b32 	%r8771, %r8768, %r8769, 19;
	mov.b64 	%rd904, {%r8771, %r8770};
	shf.l.wrap.b32 	%r8772, %r8768, %r8769, 3;
	shf.l.wrap.b32 	%r8773, %r8769, %r8768, 3;
	mov.b64 	%rd905, {%r8773, %r8772};
	shr.u64 	%rd906, %rd4265, 6;
	xor.b64  	%rd907, %rd904, %rd906;
	xor.b64  	%rd908, %rd907, %rd905;
	shf.r.wrap.b32 	%r8774, %r8617, %r8616, 1;
	shf.r.wrap.b32 	%r8775, %r8616, %r8617, 1;
	mov.b64 	%rd909, {%r8775, %r8774};
	shf.r.wrap.b32 	%r8776, %r8617, %r8616, 8;
	shf.r.wrap.b32 	%r8777, %r8616, %r8617, 8;
	mov.b64 	%rd910, {%r8777, %r8776};
	shr.u64 	%rd911, %rd4279, 7;
	xor.b64  	%rd912, %rd909, %rd911;
	xor.b64  	%rd913, %rd912, %rd910;
	add.s64 	%rd914, %rd4270, %rd4263;
	add.s64 	%rd915, %rd914, %rd908;
	add.s64 	%rd4263, %rd915, %rd913;
	mul.wide.s32 	%rd916, %r19299, 8;
	mov.u64 	%rd917, k_sha512;
	add.s64 	%rd918, %rd917, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8778,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8779}, %rd4275;
	}
	shf.r.wrap.b32 	%r8780, %r8779, %r8778, 18;
	shf.r.wrap.b32 	%r8781, %r8778, %r8779, 18;
	mov.b64 	%rd919, {%r8781, %r8780};
	shf.r.wrap.b32 	%r8782, %r8779, %r8778, 14;
	shf.r.wrap.b32 	%r8783, %r8778, %r8779, 14;
	mov.b64 	%rd920, {%r8783, %r8782};
	xor.b64  	%rd921, %rd919, %rd920;
	shf.l.wrap.b32 	%r8784, %r8778, %r8779, 23;
	shf.l.wrap.b32 	%r8785, %r8779, %r8778, 23;
	mov.b64 	%rd922, {%r8785, %r8784};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd4277, %rd4276;
	and.b64  	%rd925, %rd924, %rd4275;
	xor.b64  	%rd926, %rd925, %rd4277;
	add.s64 	%rd927, %rd926, %rd4278;
	add.s64 	%rd928, %rd927, %rd4279;
	ld.const.u64 	%rd929, [%rd918];
	add.s64 	%rd930, %rd928, %rd929;
	add.s64 	%rd931, %rd930, %rd923;
	add.s64 	%rd932, %rd931, %rd4274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8786}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8787,%dummy}, %rd4271;
	}
	shf.l.wrap.b32 	%r8788, %r8787, %r8786, 30;
	shf.l.wrap.b32 	%r8789, %r8786, %r8787, 30;
	mov.b64 	%rd933, {%r8789, %r8788};
	shf.r.wrap.b32 	%r8790, %r8786, %r8787, 28;
	shf.r.wrap.b32 	%r8791, %r8787, %r8786, 28;
	mov.b64 	%rd934, {%r8791, %r8790};
	xor.b64  	%rd935, %rd933, %rd934;
	shf.l.wrap.b32 	%r8792, %r8787, %r8786, 25;
	shf.l.wrap.b32 	%r8793, %r8786, %r8787, 25;
	mov.b64 	%rd936, {%r8793, %r8792};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd4272, %rd4271;
	and.b64  	%rd939, %rd938, %rd4273;
	and.b64  	%rd940, %rd4272, %rd4271;
	or.b64  	%rd941, %rd939, %rd940;
	add.s64 	%rd942, %rd931, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	add.s32 	%r8794, %r19299, 1;
	mul.wide.s32 	%rd944, %r8794, 8;
	add.s64 	%rd945, %rd917, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8795,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8796}, %rd932;
	}
	shf.r.wrap.b32 	%r8797, %r8796, %r8795, 14;
	shf.r.wrap.b32 	%r8798, %r8795, %r8796, 14;
	mov.b64 	%rd946, {%r8798, %r8797};
	shf.r.wrap.b32 	%r8799, %r8796, %r8795, 18;
	shf.r.wrap.b32 	%r8800, %r8795, %r8796, 18;
	mov.b64 	%rd947, {%r8800, %r8799};
	xor.b64  	%rd948, %rd947, %rd946;
	shf.l.wrap.b32 	%r8801, %r8795, %r8796, 23;
	shf.l.wrap.b32 	%r8802, %r8796, %r8795, 23;
	mov.b64 	%rd949, {%r8802, %r8801};
	xor.b64  	%rd950, %rd948, %rd949;
	xor.b64  	%rd951, %rd4276, %rd4275;
	and.b64  	%rd952, %rd932, %rd951;
	xor.b64  	%rd953, %rd952, %rd4276;
	add.s64 	%rd954, %rd4280, %rd4277;
	ld.const.u64 	%rd955, [%rd945];
	add.s64 	%rd956, %rd954, %rd955;
	add.s64 	%rd957, %rd956, %rd953;
	add.s64 	%rd958, %rd957, %rd950;
	add.s64 	%rd959, %rd958, %rd4273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd943;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 28;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 28;
	mov.b64 	%rd960, {%r8806, %r8805};
	shf.l.wrap.b32 	%r8807, %r8803, %r8804, 30;
	shf.l.wrap.b32 	%r8808, %r8804, %r8803, 30;
	mov.b64 	%rd961, {%r8808, %r8807};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r8809, %r8803, %r8804, 25;
	shf.l.wrap.b32 	%r8810, %r8804, %r8803, 25;
	mov.b64 	%rd963, {%r8810, %r8809};
	xor.b64  	%rd964, %rd962, %rd963;
	and.b64  	%rd965, %rd943, %rd4271;
	xor.b64  	%rd966, %rd943, %rd4271;
	and.b64  	%rd967, %rd966, %rd4272;
	or.b64  	%rd968, %rd967, %rd965;
	add.s64 	%rd969, %rd958, %rd968;
	add.s64 	%rd970, %rd969, %rd964;
	add.s32 	%r8811, %r19299, 2;
	mul.wide.s32 	%rd971, %r8811, 8;
	add.s64 	%rd972, %rd917, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8812,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8813}, %rd959;
	}
	shf.r.wrap.b32 	%r8814, %r8813, %r8812, 14;
	shf.r.wrap.b32 	%r8815, %r8812, %r8813, 14;
	mov.b64 	%rd973, {%r8815, %r8814};
	shf.r.wrap.b32 	%r8816, %r8813, %r8812, 18;
	shf.r.wrap.b32 	%r8817, %r8812, %r8813, 18;
	mov.b64 	%rd974, {%r8817, %r8816};
	xor.b64  	%rd975, %rd974, %rd973;
	shf.l.wrap.b32 	%r8818, %r8812, %r8813, 23;
	shf.l.wrap.b32 	%r8819, %r8813, %r8812, 23;
	mov.b64 	%rd976, {%r8819, %r8818};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd932, %rd4275;
	and.b64  	%rd979, %rd959, %rd978;
	xor.b64  	%rd980, %rd979, %rd4275;
	add.s64 	%rd981, %rd4281, %rd4276;
	ld.const.u64 	%rd982, [%rd972];
	add.s64 	%rd983, %rd981, %rd982;
	add.s64 	%rd984, %rd983, %rd980;
	add.s64 	%rd985, %rd984, %rd977;
	add.s64 	%rd986, %rd985, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8820,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8821}, %rd970;
	}
	shf.r.wrap.b32 	%r8822, %r8821, %r8820, 28;
	shf.r.wrap.b32 	%r8823, %r8820, %r8821, 28;
	mov.b64 	%rd987, {%r8823, %r8822};
	shf.l.wrap.b32 	%r8824, %r8820, %r8821, 30;
	shf.l.wrap.b32 	%r8825, %r8821, %r8820, 30;
	mov.b64 	%rd988, {%r8825, %r8824};
	xor.b64  	%rd989, %rd988, %rd987;
	shf.l.wrap.b32 	%r8826, %r8820, %r8821, 25;
	shf.l.wrap.b32 	%r8827, %r8821, %r8820, 25;
	mov.b64 	%rd990, {%r8827, %r8826};
	xor.b64  	%rd991, %rd989, %rd990;
	and.b64  	%rd992, %rd970, %rd943;
	xor.b64  	%rd993, %rd970, %rd943;
	and.b64  	%rd994, %rd993, %rd4271;
	or.b64  	%rd995, %rd994, %rd992;
	add.s64 	%rd996, %rd985, %rd995;
	add.s64 	%rd997, %rd996, %rd991;
	add.s32 	%r8828, %r19299, 3;
	mul.wide.s32 	%rd998, %r8828, 8;
	add.s64 	%rd999, %rd917, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8829,%dummy}, %rd986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8830}, %rd986;
	}
	shf.r.wrap.b32 	%r8831, %r8830, %r8829, 14;
	shf.r.wrap.b32 	%r8832, %r8829, %r8830, 14;
	mov.b64 	%rd1000, {%r8832, %r8831};
	shf.r.wrap.b32 	%r8833, %r8830, %r8829, 18;
	shf.r.wrap.b32 	%r8834, %r8829, %r8830, 18;
	mov.b64 	%rd1001, {%r8834, %r8833};
	xor.b64  	%rd1002, %rd1001, %rd1000;
	shf.l.wrap.b32 	%r8835, %r8829, %r8830, 23;
	shf.l.wrap.b32 	%r8836, %r8830, %r8829, 23;
	mov.b64 	%rd1003, {%r8836, %r8835};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	xor.b64  	%rd1005, %rd959, %rd932;
	and.b64  	%rd1006, %rd986, %rd1005;
	xor.b64  	%rd1007, %rd1006, %rd932;
	add.s64 	%rd1008, %rd4282, %rd4275;
	ld.const.u64 	%rd1009, [%rd999];
	add.s64 	%rd1010, %rd1008, %rd1009;
	add.s64 	%rd1011, %rd1010, %rd1007;
	add.s64 	%rd1012, %rd1011, %rd1004;
	add.s64 	%rd1013, %rd1012, %rd4271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8837,%dummy}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8838}, %rd997;
	}
	shf.r.wrap.b32 	%r8839, %r8838, %r8837, 28;
	shf.r.wrap.b32 	%r8840, %r8837, %r8838, 28;
	mov.b64 	%rd1014, {%r8840, %r8839};
	shf.l.wrap.b32 	%r8841, %r8837, %r8838, 30;
	shf.l.wrap.b32 	%r8842, %r8838, %r8837, 30;
	mov.b64 	%rd1015, {%r8842, %r8841};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r8843, %r8837, %r8838, 25;
	shf.l.wrap.b32 	%r8844, %r8838, %r8837, 25;
	mov.b64 	%rd1017, {%r8844, %r8843};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	and.b64  	%rd1019, %rd997, %rd970;
	xor.b64  	%rd1020, %rd997, %rd970;
	and.b64  	%rd1021, %rd1020, %rd943;
	or.b64  	%rd1022, %rd1021, %rd1019;
	add.s64 	%rd1023, %rd1012, %rd1022;
	add.s64 	%rd1024, %rd1023, %rd1018;
	add.s32 	%r8845, %r19299, 4;
	mul.wide.s32 	%rd1025, %r8845, 8;
	add.s64 	%rd1026, %rd917, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8846,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8847}, %rd1013;
	}
	shf.r.wrap.b32 	%r8848, %r8847, %r8846, 14;
	shf.r.wrap.b32 	%r8849, %r8846, %r8847, 14;
	mov.b64 	%rd1027, {%r8849, %r8848};
	shf.r.wrap.b32 	%r8850, %r8847, %r8846, 18;
	shf.r.wrap.b32 	%r8851, %r8846, %r8847, 18;
	mov.b64 	%rd1028, {%r8851, %r8850};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r8852, %r8846, %r8847, 23;
	shf.l.wrap.b32 	%r8853, %r8847, %r8846, 23;
	mov.b64 	%rd1030, {%r8853, %r8852};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd986, %rd959;
	and.b64  	%rd1033, %rd1013, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd959;
	add.s64 	%rd1035, %rd932, %rd4283;
	ld.const.u64 	%rd1036, [%rd1026];
	add.s64 	%rd1037, %rd1035, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1034;
	add.s64 	%rd1039, %rd1038, %rd1031;
	add.s64 	%rd1040, %rd1039, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8854,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8855}, %rd1024;
	}
	shf.r.wrap.b32 	%r8856, %r8855, %r8854, 28;
	shf.r.wrap.b32 	%r8857, %r8854, %r8855, 28;
	mov.b64 	%rd1041, {%r8857, %r8856};
	shf.l.wrap.b32 	%r8858, %r8854, %r8855, 30;
	shf.l.wrap.b32 	%r8859, %r8855, %r8854, 30;
	mov.b64 	%rd1042, {%r8859, %r8858};
	xor.b64  	%rd1043, %rd1042, %rd1041;
	shf.l.wrap.b32 	%r8860, %r8854, %r8855, 25;
	shf.l.wrap.b32 	%r8861, %r8855, %r8854, 25;
	mov.b64 	%rd1044, {%r8861, %r8860};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	and.b64  	%rd1046, %rd1024, %rd997;
	xor.b64  	%rd1047, %rd1024, %rd997;
	and.b64  	%rd1048, %rd1047, %rd970;
	or.b64  	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd1039, %rd1049;
	add.s64 	%rd1051, %rd1050, %rd1045;
	add.s32 	%r8862, %r19299, 5;
	mul.wide.s32 	%rd1052, %r8862, 8;
	add.s64 	%rd1053, %rd917, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8863,%dummy}, %rd1040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8864}, %rd1040;
	}
	shf.r.wrap.b32 	%r8865, %r8864, %r8863, 14;
	shf.r.wrap.b32 	%r8866, %r8863, %r8864, 14;
	mov.b64 	%rd1054, {%r8866, %r8865};
	shf.r.wrap.b32 	%r8867, %r8864, %r8863, 18;
	shf.r.wrap.b32 	%r8868, %r8863, %r8864, 18;
	mov.b64 	%rd1055, {%r8868, %r8867};
	xor.b64  	%rd1056, %rd1055, %rd1054;
	shf.l.wrap.b32 	%r8869, %r8863, %r8864, 23;
	shf.l.wrap.b32 	%r8870, %r8864, %r8863, 23;
	mov.b64 	%rd1057, {%r8870, %r8869};
	xor.b64  	%rd1058, %rd1056, %rd1057;
	xor.b64  	%rd1059, %rd1013, %rd986;
	and.b64  	%rd1060, %rd1040, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd986;
	add.s64 	%rd1062, %rd959, %rd4284;
	ld.const.u64 	%rd1063, [%rd1053];
	add.s64 	%rd1064, %rd1062, %rd1063;
	add.s64 	%rd1065, %rd1064, %rd1061;
	add.s64 	%rd1066, %rd1065, %rd1058;
	add.s64 	%rd1067, %rd1066, %rd970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8871,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8872}, %rd1051;
	}
	shf.r.wrap.b32 	%r8873, %r8872, %r8871, 28;
	shf.r.wrap.b32 	%r8874, %r8871, %r8872, 28;
	mov.b64 	%rd1068, {%r8874, %r8873};
	shf.l.wrap.b32 	%r8875, %r8871, %r8872, 30;
	shf.l.wrap.b32 	%r8876, %r8872, %r8871, 30;
	mov.b64 	%rd1069, {%r8876, %r8875};
	xor.b64  	%rd1070, %rd1069, %rd1068;
	shf.l.wrap.b32 	%r8877, %r8871, %r8872, 25;
	shf.l.wrap.b32 	%r8878, %r8872, %r8871, 25;
	mov.b64 	%rd1071, {%r8878, %r8877};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	and.b64  	%rd1073, %rd1051, %rd1024;
	xor.b64  	%rd1074, %rd1051, %rd1024;
	and.b64  	%rd1075, %rd1074, %rd997;
	or.b64  	%rd1076, %rd1075, %rd1073;
	add.s64 	%rd1077, %rd1066, %rd1076;
	add.s64 	%rd1078, %rd1077, %rd1072;
	add.s32 	%r8879, %r19299, 6;
	mul.wide.s32 	%rd1079, %r8879, 8;
	add.s64 	%rd1080, %rd917, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8880,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8881}, %rd1067;
	}
	shf.r.wrap.b32 	%r8882, %r8881, %r8880, 14;
	shf.r.wrap.b32 	%r8883, %r8880, %r8881, 14;
	mov.b64 	%rd1081, {%r8883, %r8882};
	shf.r.wrap.b32 	%r8884, %r8881, %r8880, 18;
	shf.r.wrap.b32 	%r8885, %r8880, %r8881, 18;
	mov.b64 	%rd1082, {%r8885, %r8884};
	xor.b64  	%rd1083, %rd1082, %rd1081;
	shf.l.wrap.b32 	%r8886, %r8880, %r8881, 23;
	shf.l.wrap.b32 	%r8887, %r8881, %r8880, 23;
	mov.b64 	%rd1084, {%r8887, %r8886};
	xor.b64  	%rd1085, %rd1083, %rd1084;
	xor.b64  	%rd1086, %rd1040, %rd1013;
	and.b64  	%rd1087, %rd1067, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1013;
	add.s64 	%rd1089, %rd986, %rd4285;
	ld.const.u64 	%rd1090, [%rd1080];
	add.s64 	%rd1091, %rd1089, %rd1090;
	add.s64 	%rd1092, %rd1091, %rd1088;
	add.s64 	%rd1093, %rd1092, %rd1085;
	add.s64 	%rd1094, %rd1093, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8888,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8889}, %rd1078;
	}
	shf.r.wrap.b32 	%r8890, %r8889, %r8888, 28;
	shf.r.wrap.b32 	%r8891, %r8888, %r8889, 28;
	mov.b64 	%rd1095, {%r8891, %r8890};
	shf.l.wrap.b32 	%r8892, %r8888, %r8889, 30;
	shf.l.wrap.b32 	%r8893, %r8889, %r8888, 30;
	mov.b64 	%rd1096, {%r8893, %r8892};
	xor.b64  	%rd1097, %rd1096, %rd1095;
	shf.l.wrap.b32 	%r8894, %r8888, %r8889, 25;
	shf.l.wrap.b32 	%r8895, %r8889, %r8888, 25;
	mov.b64 	%rd1098, {%r8895, %r8894};
	xor.b64  	%rd1099, %rd1097, %rd1098;
	and.b64  	%rd1100, %rd1078, %rd1051;
	xor.b64  	%rd1101, %rd1078, %rd1051;
	and.b64  	%rd1102, %rd1101, %rd1024;
	or.b64  	%rd1103, %rd1102, %rd1100;
	add.s64 	%rd1104, %rd1093, %rd1103;
	add.s64 	%rd1105, %rd1104, %rd1099;
	add.s32 	%r8896, %r19299, 7;
	mul.wide.s32 	%rd1106, %r8896, 8;
	add.s64 	%rd1107, %rd917, %rd1106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8897,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8898}, %rd1094;
	}
	shf.r.wrap.b32 	%r8899, %r8898, %r8897, 14;
	shf.r.wrap.b32 	%r8900, %r8897, %r8898, 14;
	mov.b64 	%rd1108, {%r8900, %r8899};
	shf.r.wrap.b32 	%r8901, %r8898, %r8897, 18;
	shf.r.wrap.b32 	%r8902, %r8897, %r8898, 18;
	mov.b64 	%rd1109, {%r8902, %r8901};
	xor.b64  	%rd1110, %rd1109, %rd1108;
	shf.l.wrap.b32 	%r8903, %r8897, %r8898, 23;
	shf.l.wrap.b32 	%r8904, %r8898, %r8897, 23;
	mov.b64 	%rd1111, {%r8904, %r8903};
	xor.b64  	%rd1112, %rd1110, %rd1111;
	xor.b64  	%rd1113, %rd1067, %rd1040;
	and.b64  	%rd1114, %rd1094, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1040;
	add.s64 	%rd1116, %rd1013, %rd4286;
	ld.const.u64 	%rd1117, [%rd1107];
	add.s64 	%rd1118, %rd1116, %rd1117;
	add.s64 	%rd1119, %rd1118, %rd1115;
	add.s64 	%rd1120, %rd1119, %rd1112;
	add.s64 	%rd1121, %rd1120, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8905,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8906}, %rd1105;
	}
	shf.r.wrap.b32 	%r8907, %r8906, %r8905, 28;
	shf.r.wrap.b32 	%r8908, %r8905, %r8906, 28;
	mov.b64 	%rd1122, {%r8908, %r8907};
	shf.l.wrap.b32 	%r8909, %r8905, %r8906, 30;
	shf.l.wrap.b32 	%r8910, %r8906, %r8905, 30;
	mov.b64 	%rd1123, {%r8910, %r8909};
	xor.b64  	%rd1124, %rd1123, %rd1122;
	shf.l.wrap.b32 	%r8911, %r8905, %r8906, 25;
	shf.l.wrap.b32 	%r8912, %r8906, %r8905, 25;
	mov.b64 	%rd1125, {%r8912, %r8911};
	xor.b64  	%rd1126, %rd1124, %rd1125;
	and.b64  	%rd1127, %rd1105, %rd1078;
	xor.b64  	%rd1128, %rd1105, %rd1078;
	and.b64  	%rd1129, %rd1128, %rd1051;
	or.b64  	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1120, %rd1130;
	add.s64 	%rd1132, %rd1131, %rd1126;
	add.s32 	%r8913, %r19299, 8;
	mul.wide.s32 	%rd1133, %r8913, 8;
	add.s64 	%rd1134, %rd917, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8914,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8915}, %rd1121;
	}
	shf.r.wrap.b32 	%r8916, %r8915, %r8914, 14;
	shf.r.wrap.b32 	%r8917, %r8914, %r8915, 14;
	mov.b64 	%rd1135, {%r8917, %r8916};
	shf.r.wrap.b32 	%r8918, %r8915, %r8914, 18;
	shf.r.wrap.b32 	%r8919, %r8914, %r8915, 18;
	mov.b64 	%rd1136, {%r8919, %r8918};
	xor.b64  	%rd1137, %rd1136, %rd1135;
	shf.l.wrap.b32 	%r8920, %r8914, %r8915, 23;
	shf.l.wrap.b32 	%r8921, %r8915, %r8914, 23;
	mov.b64 	%rd1138, {%r8921, %r8920};
	xor.b64  	%rd1139, %rd1137, %rd1138;
	xor.b64  	%rd1140, %rd1094, %rd1067;
	and.b64  	%rd1141, %rd1121, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1067;
	add.s64 	%rd1143, %rd1040, %rd4270;
	ld.const.u64 	%rd1144, [%rd1134];
	add.s64 	%rd1145, %rd1143, %rd1144;
	add.s64 	%rd1146, %rd1145, %rd1142;
	add.s64 	%rd1147, %rd1146, %rd1139;
	add.s64 	%rd1148, %rd1147, %rd1051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8922,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8923}, %rd1132;
	}
	shf.r.wrap.b32 	%r8924, %r8923, %r8922, 28;
	shf.r.wrap.b32 	%r8925, %r8922, %r8923, 28;
	mov.b64 	%rd1149, {%r8925, %r8924};
	shf.l.wrap.b32 	%r8926, %r8922, %r8923, 30;
	shf.l.wrap.b32 	%r8927, %r8923, %r8922, 30;
	mov.b64 	%rd1150, {%r8927, %r8926};
	xor.b64  	%rd1151, %rd1150, %rd1149;
	shf.l.wrap.b32 	%r8928, %r8922, %r8923, 25;
	shf.l.wrap.b32 	%r8929, %r8923, %r8922, 25;
	mov.b64 	%rd1152, {%r8929, %r8928};
	xor.b64  	%rd1153, %rd1151, %rd1152;
	and.b64  	%rd1154, %rd1132, %rd1105;
	xor.b64  	%rd1155, %rd1132, %rd1105;
	and.b64  	%rd1156, %rd1155, %rd1078;
	or.b64  	%rd1157, %rd1156, %rd1154;
	add.s64 	%rd1158, %rd1147, %rd1157;
	add.s64 	%rd1159, %rd1158, %rd1153;
	add.s32 	%r8930, %r19299, 9;
	mul.wide.s32 	%rd1160, %r8930, 8;
	add.s64 	%rd1161, %rd917, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8931,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8932}, %rd1148;
	}
	shf.r.wrap.b32 	%r8933, %r8932, %r8931, 14;
	shf.r.wrap.b32 	%r8934, %r8931, %r8932, 14;
	mov.b64 	%rd1162, {%r8934, %r8933};
	shf.r.wrap.b32 	%r8935, %r8932, %r8931, 18;
	shf.r.wrap.b32 	%r8936, %r8931, %r8932, 18;
	mov.b64 	%rd1163, {%r8936, %r8935};
	xor.b64  	%rd1164, %rd1163, %rd1162;
	shf.l.wrap.b32 	%r8937, %r8931, %r8932, 23;
	shf.l.wrap.b32 	%r8938, %r8932, %r8931, 23;
	mov.b64 	%rd1165, {%r8938, %r8937};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	xor.b64  	%rd1167, %rd1121, %rd1094;
	and.b64  	%rd1168, %rd1148, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1094;
	add.s64 	%rd1170, %rd1067, %rd4269;
	ld.const.u64 	%rd1171, [%rd1161];
	add.s64 	%rd1172, %rd1170, %rd1171;
	add.s64 	%rd1173, %rd1172, %rd1169;
	add.s64 	%rd1174, %rd1173, %rd1166;
	add.s64 	%rd1175, %rd1174, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8939,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8940}, %rd1159;
	}
	shf.r.wrap.b32 	%r8941, %r8940, %r8939, 28;
	shf.r.wrap.b32 	%r8942, %r8939, %r8940, 28;
	mov.b64 	%rd1176, {%r8942, %r8941};
	shf.l.wrap.b32 	%r8943, %r8939, %r8940, 30;
	shf.l.wrap.b32 	%r8944, %r8940, %r8939, 30;
	mov.b64 	%rd1177, {%r8944, %r8943};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r8945, %r8939, %r8940, 25;
	shf.l.wrap.b32 	%r8946, %r8940, %r8939, 25;
	mov.b64 	%rd1179, {%r8946, %r8945};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	and.b64  	%rd1181, %rd1159, %rd1132;
	xor.b64  	%rd1182, %rd1159, %rd1132;
	and.b64  	%rd1183, %rd1182, %rd1105;
	or.b64  	%rd1184, %rd1183, %rd1181;
	add.s64 	%rd1185, %rd1174, %rd1184;
	add.s64 	%rd1186, %rd1185, %rd1180;
	add.s32 	%r8947, %r19299, 10;
	mul.wide.s32 	%rd1187, %r8947, 8;
	add.s64 	%rd1188, %rd917, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8948,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8949}, %rd1175;
	}
	shf.r.wrap.b32 	%r8950, %r8949, %r8948, 14;
	shf.r.wrap.b32 	%r8951, %r8948, %r8949, 14;
	mov.b64 	%rd1189, {%r8951, %r8950};
	shf.r.wrap.b32 	%r8952, %r8949, %r8948, 18;
	shf.r.wrap.b32 	%r8953, %r8948, %r8949, 18;
	mov.b64 	%rd1190, {%r8953, %r8952};
	xor.b64  	%rd1191, %rd1190, %rd1189;
	shf.l.wrap.b32 	%r8954, %r8948, %r8949, 23;
	shf.l.wrap.b32 	%r8955, %r8949, %r8948, 23;
	mov.b64 	%rd1192, {%r8955, %r8954};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	xor.b64  	%rd1194, %rd1148, %rd1121;
	and.b64  	%rd1195, %rd1175, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1121;
	add.s64 	%rd1197, %rd1094, %rd4268;
	ld.const.u64 	%rd1198, [%rd1188];
	add.s64 	%rd1199, %rd1197, %rd1198;
	add.s64 	%rd1200, %rd1199, %rd1196;
	add.s64 	%rd1201, %rd1200, %rd1193;
	add.s64 	%rd1202, %rd1201, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8957}, %rd1186;
	}
	shf.r.wrap.b32 	%r8958, %r8957, %r8956, 28;
	shf.r.wrap.b32 	%r8959, %r8956, %r8957, 28;
	mov.b64 	%rd1203, {%r8959, %r8958};
	shf.l.wrap.b32 	%r8960, %r8956, %r8957, 30;
	shf.l.wrap.b32 	%r8961, %r8957, %r8956, 30;
	mov.b64 	%rd1204, {%r8961, %r8960};
	xor.b64  	%rd1205, %rd1204, %rd1203;
	shf.l.wrap.b32 	%r8962, %r8956, %r8957, 25;
	shf.l.wrap.b32 	%r8963, %r8957, %r8956, 25;
	mov.b64 	%rd1206, {%r8963, %r8962};
	xor.b64  	%rd1207, %rd1205, %rd1206;
	and.b64  	%rd1208, %rd1186, %rd1159;
	xor.b64  	%rd1209, %rd1186, %rd1159;
	and.b64  	%rd1210, %rd1209, %rd1132;
	or.b64  	%rd1211, %rd1210, %rd1208;
	add.s64 	%rd1212, %rd1201, %rd1211;
	add.s64 	%rd1213, %rd1212, %rd1207;
	add.s32 	%r8964, %r19299, 11;
	mul.wide.s32 	%rd1214, %r8964, 8;
	add.s64 	%rd1215, %rd917, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8965,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8966}, %rd1202;
	}
	shf.r.wrap.b32 	%r8967, %r8966, %r8965, 14;
	shf.r.wrap.b32 	%r8968, %r8965, %r8966, 14;
	mov.b64 	%rd1216, {%r8968, %r8967};
	shf.r.wrap.b32 	%r8969, %r8966, %r8965, 18;
	shf.r.wrap.b32 	%r8970, %r8965, %r8966, 18;
	mov.b64 	%rd1217, {%r8970, %r8969};
	xor.b64  	%rd1218, %rd1217, %rd1216;
	shf.l.wrap.b32 	%r8971, %r8965, %r8966, 23;
	shf.l.wrap.b32 	%r8972, %r8966, %r8965, 23;
	mov.b64 	%rd1219, {%r8972, %r8971};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	xor.b64  	%rd1221, %rd1175, %rd1148;
	and.b64  	%rd1222, %rd1202, %rd1221;
	xor.b64  	%rd1223, %rd1222, %rd1148;
	add.s64 	%rd1224, %rd1121, %rd4267;
	ld.const.u64 	%rd1225, [%rd1215];
	add.s64 	%rd1226, %rd1224, %rd1225;
	add.s64 	%rd1227, %rd1226, %rd1223;
	add.s64 	%rd1228, %rd1227, %rd1220;
	add.s64 	%rd1229, %rd1228, %rd1132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8973,%dummy}, %rd1213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8974}, %rd1213;
	}
	shf.r.wrap.b32 	%r8975, %r8974, %r8973, 28;
	shf.r.wrap.b32 	%r8976, %r8973, %r8974, 28;
	mov.b64 	%rd1230, {%r8976, %r8975};
	shf.l.wrap.b32 	%r8977, %r8973, %r8974, 30;
	shf.l.wrap.b32 	%r8978, %r8974, %r8973, 30;
	mov.b64 	%rd1231, {%r8978, %r8977};
	xor.b64  	%rd1232, %rd1231, %rd1230;
	shf.l.wrap.b32 	%r8979, %r8973, %r8974, 25;
	shf.l.wrap.b32 	%r8980, %r8974, %r8973, 25;
	mov.b64 	%rd1233, {%r8980, %r8979};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	and.b64  	%rd1235, %rd1213, %rd1186;
	xor.b64  	%rd1236, %rd1213, %rd1186;
	and.b64  	%rd1237, %rd1236, %rd1159;
	or.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd1228, %rd1238;
	add.s64 	%rd1240, %rd1239, %rd1234;
	add.s32 	%r8981, %r19299, 12;
	mul.wide.s32 	%rd1241, %r8981, 8;
	add.s64 	%rd1242, %rd917, %rd1241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8982,%dummy}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8983}, %rd1229;
	}
	shf.r.wrap.b32 	%r8984, %r8983, %r8982, 14;
	shf.r.wrap.b32 	%r8985, %r8982, %r8983, 14;
	mov.b64 	%rd1243, {%r8985, %r8984};
	shf.r.wrap.b32 	%r8986, %r8983, %r8982, 18;
	shf.r.wrap.b32 	%r8987, %r8982, %r8983, 18;
	mov.b64 	%rd1244, {%r8987, %r8986};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	shf.l.wrap.b32 	%r8988, %r8982, %r8983, 23;
	shf.l.wrap.b32 	%r8989, %r8983, %r8982, 23;
	mov.b64 	%rd1246, {%r8989, %r8988};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd1202, %rd1175;
	and.b64  	%rd1249, %rd1229, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd1175;
	add.s64 	%rd1251, %rd1148, %rd4266;
	ld.const.u64 	%rd1252, [%rd1242];
	add.s64 	%rd1253, %rd1251, %rd1252;
	add.s64 	%rd1254, %rd1253, %rd1250;
	add.s64 	%rd1255, %rd1254, %rd1247;
	add.s64 	%rd4278, %rd1255, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8990,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8991}, %rd1240;
	}
	shf.r.wrap.b32 	%r8992, %r8991, %r8990, 28;
	shf.r.wrap.b32 	%r8993, %r8990, %r8991, 28;
	mov.b64 	%rd1256, {%r8993, %r8992};
	shf.l.wrap.b32 	%r8994, %r8990, %r8991, 30;
	shf.l.wrap.b32 	%r8995, %r8991, %r8990, 30;
	mov.b64 	%rd1257, {%r8995, %r8994};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	shf.l.wrap.b32 	%r8996, %r8990, %r8991, 25;
	shf.l.wrap.b32 	%r8997, %r8991, %r8990, 25;
	mov.b64 	%rd1259, {%r8997, %r8996};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	and.b64  	%rd1261, %rd1240, %rd1213;
	xor.b64  	%rd1262, %rd1240, %rd1213;
	and.b64  	%rd1263, %rd1262, %rd1186;
	or.b64  	%rd1264, %rd1263, %rd1261;
	add.s64 	%rd1265, %rd1255, %rd1264;
	add.s64 	%rd4274, %rd1265, %rd1260;
	add.s32 	%r8998, %r19299, 13;
	mul.wide.s32 	%rd1266, %r8998, 8;
	add.s64 	%rd1267, %rd917, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8999,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9000}, %rd4278;
	}
	shf.r.wrap.b32 	%r9001, %r9000, %r8999, 14;
	shf.r.wrap.b32 	%r9002, %r8999, %r9000, 14;
	mov.b64 	%rd1268, {%r9002, %r9001};
	shf.r.wrap.b32 	%r9003, %r9000, %r8999, 18;
	shf.r.wrap.b32 	%r9004, %r8999, %r9000, 18;
	mov.b64 	%rd1269, {%r9004, %r9003};
	xor.b64  	%rd1270, %rd1269, %rd1268;
	shf.l.wrap.b32 	%r9005, %r8999, %r9000, 23;
	shf.l.wrap.b32 	%r9006, %r9000, %r8999, 23;
	mov.b64 	%rd1271, {%r9006, %r9005};
	xor.b64  	%rd1272, %rd1270, %rd1271;
	xor.b64  	%rd1273, %rd1229, %rd1202;
	and.b64  	%rd1274, %rd4278, %rd1273;
	xor.b64  	%rd1275, %rd1274, %rd1202;
	add.s64 	%rd1276, %rd1175, %rd4265;
	ld.const.u64 	%rd1277, [%rd1267];
	add.s64 	%rd1278, %rd1276, %rd1277;
	add.s64 	%rd1279, %rd1278, %rd1275;
	add.s64 	%rd1280, %rd1279, %rd1272;
	add.s64 	%rd4277, %rd1280, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9007,%dummy}, %rd4274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9008}, %rd4274;
	}
	shf.r.wrap.b32 	%r9009, %r9008, %r9007, 28;
	shf.r.wrap.b32 	%r9010, %r9007, %r9008, 28;
	mov.b64 	%rd1281, {%r9010, %r9009};
	shf.l.wrap.b32 	%r9011, %r9007, %r9008, 30;
	shf.l.wrap.b32 	%r9012, %r9008, %r9007, 30;
	mov.b64 	%rd1282, {%r9012, %r9011};
	xor.b64  	%rd1283, %rd1282, %rd1281;
	shf.l.wrap.b32 	%r9013, %r9007, %r9008, 25;
	shf.l.wrap.b32 	%r9014, %r9008, %r9007, 25;
	mov.b64 	%rd1284, {%r9014, %r9013};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	and.b64  	%rd1286, %rd4274, %rd1240;
	xor.b64  	%rd1287, %rd4274, %rd1240;
	and.b64  	%rd1288, %rd1287, %rd1213;
	or.b64  	%rd1289, %rd1288, %rd1286;
	add.s64 	%rd1290, %rd1280, %rd1289;
	add.s64 	%rd4273, %rd1290, %rd1285;
	add.s32 	%r9015, %r19299, 14;
	mul.wide.s32 	%rd1291, %r9015, 8;
	add.s64 	%rd1292, %rd917, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9016,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9017}, %rd4277;
	}
	shf.r.wrap.b32 	%r9018, %r9017, %r9016, 14;
	shf.r.wrap.b32 	%r9019, %r9016, %r9017, 14;
	mov.b64 	%rd1293, {%r9019, %r9018};
	shf.r.wrap.b32 	%r9020, %r9017, %r9016, 18;
	shf.r.wrap.b32 	%r9021, %r9016, %r9017, 18;
	mov.b64 	%rd1294, {%r9021, %r9020};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	shf.l.wrap.b32 	%r9022, %r9016, %r9017, 23;
	shf.l.wrap.b32 	%r9023, %r9017, %r9016, 23;
	mov.b64 	%rd1296, {%r9023, %r9022};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd4278, %rd1229;
	and.b64  	%rd1299, %rd4277, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1229;
	add.s64 	%rd1301, %rd1202, %rd4264;
	ld.const.u64 	%rd1302, [%rd1292];
	add.s64 	%rd1303, %rd1301, %rd1302;
	add.s64 	%rd1304, %rd1303, %rd1300;
	add.s64 	%rd1305, %rd1304, %rd1297;
	add.s64 	%rd4276, %rd1305, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9025}, %rd4273;
	}
	shf.r.wrap.b32 	%r9026, %r9025, %r9024, 28;
	shf.r.wrap.b32 	%r9027, %r9024, %r9025, 28;
	mov.b64 	%rd1306, {%r9027, %r9026};
	shf.l.wrap.b32 	%r9028, %r9024, %r9025, 30;
	shf.l.wrap.b32 	%r9029, %r9025, %r9024, 30;
	mov.b64 	%rd1307, {%r9029, %r9028};
	xor.b64  	%rd1308, %rd1307, %rd1306;
	shf.l.wrap.b32 	%r9030, %r9024, %r9025, 25;
	shf.l.wrap.b32 	%r9031, %r9025, %r9024, 25;
	mov.b64 	%rd1309, {%r9031, %r9030};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	and.b64  	%rd1311, %rd4273, %rd4274;
	xor.b64  	%rd1312, %rd4273, %rd4274;
	and.b64  	%rd1313, %rd1312, %rd1240;
	or.b64  	%rd1314, %rd1313, %rd1311;
	add.s64 	%rd1315, %rd1305, %rd1314;
	add.s64 	%rd4272, %rd1315, %rd1310;
	add.s32 	%r9032, %r19299, 15;
	mul.wide.s32 	%rd1316, %r9032, 8;
	add.s64 	%rd1317, %rd917, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9033,%dummy}, %rd4276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9034}, %rd4276;
	}
	shf.r.wrap.b32 	%r9035, %r9034, %r9033, 14;
	shf.r.wrap.b32 	%r9036, %r9033, %r9034, 14;
	mov.b64 	%rd1318, {%r9036, %r9035};
	shf.r.wrap.b32 	%r9037, %r9034, %r9033, 18;
	shf.r.wrap.b32 	%r9038, %r9033, %r9034, 18;
	mov.b64 	%rd1319, {%r9038, %r9037};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r9039, %r9033, %r9034, 23;
	shf.l.wrap.b32 	%r9040, %r9034, %r9033, 23;
	mov.b64 	%rd1321, {%r9040, %r9039};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd4277, %rd4278;
	and.b64  	%rd1324, %rd4276, %rd1323;
	xor.b64  	%rd1325, %rd1324, %rd4278;
	add.s64 	%rd1326, %rd1229, %rd4263;
	ld.const.u64 	%rd1327, [%rd1317];
	add.s64 	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd1325;
	add.s64 	%rd1330, %rd1329, %rd1322;
	add.s64 	%rd4275, %rd1330, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9041,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9042}, %rd4272;
	}
	shf.r.wrap.b32 	%r9043, %r9042, %r9041, 28;
	shf.r.wrap.b32 	%r9044, %r9041, %r9042, 28;
	mov.b64 	%rd1331, {%r9044, %r9043};
	shf.l.wrap.b32 	%r9045, %r9041, %r9042, 30;
	shf.l.wrap.b32 	%r9046, %r9042, %r9041, 30;
	mov.b64 	%rd1332, {%r9046, %r9045};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r9047, %r9041, %r9042, 25;
	shf.l.wrap.b32 	%r9048, %r9042, %r9041, 25;
	mov.b64 	%rd1334, {%r9048, %r9047};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	and.b64  	%rd1336, %rd4272, %rd4273;
	xor.b64  	%rd1337, %rd4272, %rd4273;
	and.b64  	%rd1338, %rd1337, %rd4274;
	or.b64  	%rd1339, %rd1338, %rd1336;
	add.s64 	%rd1340, %rd1330, %rd1339;
	add.s64 	%rd4271, %rd1340, %rd1335;
	add.s32 	%r19299, %r19299, 16;
	setp.lt.s32	%p52, %r19299, 80;
	@%p52 bra 	BB2_93;

	add.s64 	%rd1342, %rd4271, %rd39;
	st.local.u64 	[%rd17], %rd1342;
	add.s64 	%rd1343, %rd4272, %rd40;
	st.local.u64 	[%rd17+8], %rd1343;
	add.s64 	%rd1344, %rd4273, %rd41;
	st.local.u64 	[%rd17+16], %rd1344;
	add.s64 	%rd1345, %rd4274, %rd38;
	st.local.u64 	[%rd17+24], %rd1345;
	add.s64 	%rd1346, %rd4275, %rd34;
	st.local.u64 	[%rd17+32], %rd1346;
	add.s64 	%rd1347, %rd4276, %rd36;
	st.local.u64 	[%rd17+40], %rd1347;
	add.s64 	%rd1348, %rd4277, %rd35;
	st.local.u64 	[%rd17+48], %rd1348;
	add.s64 	%rd1349, %rd4278, %rd37;
	st.local.u64 	[%rd17+56], %rd1349;
	st.local.u32 	[%rd17+64], %r19270;
	st.local.u32 	[%rd17+68], %r19269;
	st.local.u32 	[%rd17+72], %r19268;
	st.local.u32 	[%rd17+76], %r19267;
	st.local.u32 	[%rd17+80], %r19274;
	st.local.u32 	[%rd17+84], %r19273;
	st.local.u32 	[%rd17+88], %r19272;
	st.local.u32 	[%rd17+92], %r19271;
	st.local.u32 	[%rd17+96], %r19278;
	st.local.u32 	[%rd17+100], %r19277;
	st.local.u32 	[%rd17+104], %r19276;
	st.local.u32 	[%rd17+108], %r19275;
	st.local.u32 	[%rd17+112], %r19282;
	st.local.u32 	[%rd17+116], %r19281;
	st.local.u32 	[%rd17+120], %r19280;
	st.local.u32 	[%rd17+124], %r19279;
	st.local.u32 	[%rd17+128], %r19286;
	st.local.u32 	[%rd17+132], %r19285;
	st.local.u32 	[%rd17+136], %r19284;
	st.local.u32 	[%rd17+140], %r19283;
	st.local.u32 	[%rd17+144], %r19290;
	st.local.u32 	[%rd17+148], %r19289;
	st.local.u32 	[%rd17+152], %r19288;
	st.local.u32 	[%rd17+156], %r19287;
	st.local.u32 	[%rd17+160], %r19294;
	st.local.u32 	[%rd17+164], %r19293;
	st.local.u32 	[%rd17+168], %r19292;
	st.local.u32 	[%rd17+172], %r19291;
	st.local.u32 	[%rd17+176], %r19298;
	st.local.u32 	[%rd17+180], %r19297;
	st.local.u32 	[%rd17+184], %r19296;
	st.local.u32 	[%rd17+188], %r19295;
	bra.uni 	BB2_215;

BB2_101:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_132:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_116:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_147:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_108:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_139:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_123:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_154:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_104:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_135:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_119:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_150:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_111:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_142:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_126:
	mov.u32 	%r19331, %r2953;
	bra.uni 	BB2_210;

BB2_157:
	mov.u32 	%r19331, %r2953;

BB2_210:
	ld.local.u32 	%r11657, [%rd17+64];
	or.b32  	%r11658, %r11657, %r19331;
	st.local.u32 	[%rd17+64], %r11658;
	ld.local.u32 	%r11659, [%rd17+68];
	or.b32  	%r11660, %r11659, %r2955;
	st.local.u32 	[%rd17+68], %r11660;
	ld.local.u32 	%r11661, [%rd17+72];
	or.b32  	%r11662, %r11661, %r2957;
	st.local.u32 	[%rd17+72], %r11662;
	ld.local.u32 	%r11663, [%rd17+76];
	or.b32  	%r11664, %r11663, %r2959;
	st.local.u32 	[%rd17+76], %r11664;
	ld.local.u32 	%r11665, [%rd17+80];
	or.b32  	%r11666, %r11665, %r2961;
	st.local.u32 	[%rd17+80], %r11666;
	ld.local.u32 	%r11667, [%rd17+84];
	or.b32  	%r11668, %r11667, %r2963;
	st.local.u32 	[%rd17+84], %r11668;
	ld.local.u32 	%r11669, [%rd17+88];
	or.b32  	%r11670, %r11669, %r2965;
	st.local.u32 	[%rd17+88], %r11670;
	ld.local.u32 	%r11671, [%rd17+92];
	or.b32  	%r11672, %r11671, %r2967;
	st.local.u32 	[%rd17+92], %r11672;
	ld.local.u32 	%r11673, [%rd17+96];
	or.b32  	%r11674, %r11673, %r2969;
	st.local.u32 	[%rd17+96], %r11674;
	ld.local.u32 	%r11675, [%rd17+100];
	or.b32  	%r11676, %r11675, %r2971;
	st.local.u32 	[%rd17+100], %r11676;
	ld.local.u32 	%r11677, [%rd17+104];
	or.b32  	%r11678, %r11677, %r2973;
	st.local.u32 	[%rd17+104], %r11678;
	ld.local.u32 	%r11679, [%rd17+108];
	or.b32  	%r11680, %r11679, %r2975;
	st.local.u32 	[%rd17+108], %r11680;
	ld.local.u32 	%r11681, [%rd17+112];
	or.b32  	%r11682, %r11681, %r2977;
	st.local.u32 	[%rd17+112], %r11682;
	ld.local.u32 	%r11683, [%rd17+116];
	or.b32  	%r11684, %r11683, %r2979;
	st.local.u32 	[%rd17+116], %r11684;
	ld.local.u32 	%r11685, [%rd17+120];
	or.b32  	%r11686, %r11685, %r2981;
	st.local.u32 	[%rd17+120], %r11686;
	ld.local.u32 	%r11687, [%rd17+124];
	or.b32  	%r11688, %r11687, %r2983;
	st.local.u32 	[%rd17+124], %r11688;
	ld.local.u32 	%r11689, [%rd17+128];
	or.b32  	%r11690, %r11689, %r2985;
	st.local.u32 	[%rd17+128], %r11690;
	ld.local.u32 	%r11691, [%rd17+132];
	or.b32  	%r11692, %r11691, %r2987;
	st.local.u32 	[%rd17+132], %r11692;
	ld.local.u32 	%r11693, [%rd17+136];
	or.b32  	%r11694, %r11693, %r2989;
	st.local.u32 	[%rd17+136], %r11694;
	ld.local.u32 	%r11695, [%rd17+140];
	or.b32  	%r11696, %r11695, %r2991;
	st.local.u32 	[%rd17+140], %r11696;
	ld.local.u32 	%r11697, [%rd17+144];
	or.b32  	%r11698, %r11697, %r2993;
	st.local.u32 	[%rd17+144], %r11698;
	ld.local.u32 	%r11699, [%rd17+148];
	or.b32  	%r11700, %r11699, %r2995;
	st.local.u32 	[%rd17+148], %r11700;
	ld.local.u32 	%r11701, [%rd17+152];
	or.b32  	%r11702, %r11701, %r2997;
	st.local.u32 	[%rd17+152], %r11702;
	ld.local.u32 	%r11703, [%rd17+156];
	or.b32  	%r11704, %r11703, %r2999;
	st.local.u32 	[%rd17+156], %r11704;
	ld.local.u32 	%r11705, [%rd17+160];
	or.b32  	%r11706, %r11705, %r3001;
	st.local.u32 	[%rd17+160], %r11706;
	ld.local.u32 	%r11707, [%rd17+164];
	or.b32  	%r11708, %r11707, %r3003;
	st.local.u32 	[%rd17+164], %r11708;
	ld.local.u32 	%r11709, [%rd17+168];
	or.b32  	%r11710, %r11709, %r3005;
	st.local.u32 	[%rd17+168], %r11710;
	ld.local.u32 	%r11711, [%rd17+172];
	or.b32  	%r11712, %r11711, %r3007;
	st.local.u32 	[%rd17+172], %r11712;
	ld.local.u32 	%r11713, [%rd17+176];
	or.b32  	%r11714, %r11713, %r3009;
	st.local.u32 	[%rd17+176], %r11714;
	ld.local.u32 	%r11715, [%rd17+180];
	or.b32  	%r11716, %r11715, %r3011;
	st.local.u32 	[%rd17+180], %r11716;
	ld.local.u32 	%r11717, [%rd17+184];
	or.b32  	%r11718, %r11717, %r3013;
	st.local.u32 	[%rd17+184], %r11718;
	ld.local.u32 	%r11719, [%rd17+188];
	or.b32  	%r11720, %r11719, %r3015;
	st.local.u32 	[%rd17+188], %r11720;

BB2_215:
	ret;
}

	// .globl	m07100_init
.entry m07100_init(
	.param .u64 .ptr .global .align 4 m07100_init_param_0,
	.param .u64 .ptr .global .align 4 m07100_init_param_1,
	.param .u64 .ptr .global .align 4 m07100_init_param_2,
	.param .u64 .ptr .const .align 4 m07100_init_param_3,
	.param .u64 .ptr .global .align 8 m07100_init_param_4,
	.param .u64 .ptr .global .align 1 m07100_init_param_5,
	.param .u64 .ptr .global .align 4 m07100_init_param_6,
	.param .u64 .ptr .global .align 4 m07100_init_param_7,
	.param .u64 .ptr .global .align 4 m07100_init_param_8,
	.param .u64 .ptr .global .align 4 m07100_init_param_9,
	.param .u64 .ptr .global .align 4 m07100_init_param_10,
	.param .u64 .ptr .global .align 4 m07100_init_param_11,
	.param .u64 .ptr .global .align 4 m07100_init_param_12,
	.param .u64 .ptr .global .align 4 m07100_init_param_13,
	.param .u64 .ptr .global .align 8 m07100_init_param_14,
	.param .u64 .ptr .global .align 4 m07100_init_param_15,
	.param .u64 .ptr .global .align 4 m07100_init_param_16,
	.param .u64 .ptr .global .align 4 m07100_init_param_17,
	.param .u64 .ptr .global .align 4 m07100_init_param_18,
	.param .u64 .ptr .global .align 4 m07100_init_param_19,
	.param .u64 .ptr .global .align 1 m07100_init_param_20,
	.param .u64 .ptr .global .align 1 m07100_init_param_21,
	.param .u64 .ptr .global .align 1 m07100_init_param_22,
	.param .u64 .ptr .global .align 1 m07100_init_param_23,
	.param .u64 .ptr .global .align 8 m07100_init_param_24
)
{
	.local .align 16 .b8 	__local_depot3[1056];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<55>;
	.reg .b32 	%r<7536>;
	.reg .b64 	%rd<9886>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd809, [m07100_init_param_0];
	ld.param.u64 	%rd813, [m07100_init_param_24];
	mov.u32 	%r393, %ctaid.x;
	mov.u32 	%r394, %ntid.x;
	mov.b32	%r395, %envreg3;
	mad.lo.s32 	%r396, %r393, %r394, %r395;
	mov.u32 	%r397, %tid.x;
	add.s32 	%r1, %r396, %r397;
	cvt.s64.s32	%rd814, %r1;
	ld.global.u64 	%rd815, [%rd813+56];
	setp.ge.u64	%p1, %rd814, %rd815;
	@%p1 bra 	BB3_37;

	mul.wide.s32 	%rd816, %r1, 260;
	add.s64 	%rd817, %rd809, %rd816;
	add.s64 	%rd1, %rd817, 256;
	ld.global.u32 	%r2, [%rd817+256];
	setp.gt.s32	%p2, %r2, 128;
	@%p2 bra 	BB3_3;
	bra.uni 	BB3_2;

BB3_3:
	ld.const.u64 	%rd9722, [k_sha512];
	ld.const.u64 	%rd9721, [k_sha512+8];
	ld.const.u64 	%rd20, [k_sha512+16];
	ld.const.u64 	%rd21, [k_sha512+24];
	ld.const.u64 	%rd22, [k_sha512+32];
	ld.const.u64 	%rd23, [k_sha512+40];
	ld.const.u64 	%rd24, [k_sha512+48];
	ld.const.u64 	%rd25, [k_sha512+56];
	ld.const.u64 	%rd26, [k_sha512+64];
	ld.const.u64 	%rd27, [k_sha512+72];
	ld.const.u64 	%rd9712, [k_sha512+80];
	ld.const.u64 	%rd9711, [k_sha512+88];
	ld.const.u64 	%rd9710, [k_sha512+96];
	ld.const.u64 	%rd9709, [k_sha512+104];
	ld.const.u64 	%rd9708, [k_sha512+112];
	mov.u32 	%r35, 0;
	mov.u64 	%rd41, 7640891576956012808;
	mov.u64 	%rd40, -4942790177534073029;
	mov.u64 	%rd39, 4354685564936845355;
	mov.u64 	%rd38, -6534734903238641935;
	mov.u64 	%rd37, 5840696475078001361;
	mov.u64 	%rd36, -7276294671716946913;
	mov.u64 	%rd35, 2270897969802886507;
	mov.u64 	%rd34, 6620516959819538809;
	ld.const.u64 	%rd9707, [k_sha512+120];
	mov.u32 	%r7370, %r35;
	bra.uni 	BB3_4;

BB3_40:
	add.s32 	%r35, %r35, 128;
	add.s64 	%rd34, %rd9877, %rd34;
	add.s64 	%rd41, %rd9870, %rd41;
	add.s64 	%rd40, %rd9871, %rd40;
	add.s64 	%rd39, %rd9872, %rd39;
	add.s64 	%rd38, %rd9873, %rd38;
	add.s64 	%rd37, %rd9874, %rd37;
	add.s64 	%rd36, %rd9875, %rd36;
	add.s64 	%rd35, %rd9876, %rd35;
	add.s32 	%r7370, %r7370, 32;

BB3_4:
	add.s32 	%r464, %r2, -128;
	setp.lt.s32	%p3, %r35, %r464;
	mul.wide.s32 	%rd828, %r7370, 4;
	add.s64 	%rd829, %rd817, %rd828;
	ld.global.u32 	%r37, [%rd829];
	ld.global.u32 	%r38, [%rd829+4];
	ld.global.u32 	%r39, [%rd829+8];
	ld.global.u32 	%r40, [%rd829+12];
	ld.global.u32 	%r41, [%rd829+16];
	ld.global.u32 	%r42, [%rd829+20];
	ld.global.u32 	%r43, [%rd829+24];
	ld.global.u32 	%r44, [%rd829+28];
	ld.global.u32 	%r45, [%rd829+32];
	ld.global.u32 	%r46, [%rd829+36];
	ld.global.u32 	%r47, [%rd829+40];
	ld.global.u32 	%r48, [%rd829+44];
	ld.global.u32 	%r49, [%rd829+48];
	ld.global.u32 	%r50, [%rd829+52];
	ld.global.u32 	%r51, [%rd829+56];
	ld.global.u32 	%r52, [%rd829+60];
	ld.global.u32 	%r53, [%rd829+64];
	ld.global.u32 	%r54, [%rd829+68];
	ld.global.u32 	%r55, [%rd829+72];
	ld.global.u32 	%r56, [%rd829+76];
	ld.global.u32 	%r57, [%rd829+80];
	ld.global.u32 	%r58, [%rd829+84];
	ld.global.u32 	%r59, [%rd829+88];
	ld.global.u32 	%r60, [%rd829+92];
	ld.global.u32 	%r61, [%rd829+96];
	ld.global.u32 	%r62, [%rd829+100];
	ld.global.u32 	%r63, [%rd829+104];
	ld.global.u32 	%r64, [%rd829+108];
	ld.global.u32 	%r65, [%rd829+112];
	ld.global.u32 	%r66, [%rd829+116];
	ld.global.u32 	%r67, [%rd829+120];
	ld.global.u32 	%r68, [%rd829+124];
	@%p3 bra 	BB3_38;
	bra.uni 	BB3_5;

BB3_38:
	// inline asm
	prmt.b32 %r6595, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6597, %r38, 0, 0x0123;
	// inline asm
	mov.b64	%rd9878, {%r6597, %r6595};
	// inline asm
	prmt.b32 %r6599, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6601, %r40, 0, 0x0123;
	// inline asm
	mov.b64	%rd9879, {%r6601, %r6599};
	// inline asm
	prmt.b32 %r6603, %r41, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6605, %r42, 0, 0x0123;
	// inline asm
	mov.b64	%rd9880, {%r6605, %r6603};
	// inline asm
	prmt.b32 %r6607, %r43, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6609, %r44, 0, 0x0123;
	// inline asm
	mov.b64	%rd9881, {%r6609, %r6607};
	// inline asm
	prmt.b32 %r6611, %r45, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6613, %r46, 0, 0x0123;
	// inline asm
	mov.b64	%rd9882, {%r6613, %r6611};
	// inline asm
	prmt.b32 %r6615, %r47, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6617, %r48, 0, 0x0123;
	// inline asm
	mov.b64	%rd9883, {%r6617, %r6615};
	// inline asm
	prmt.b32 %r6619, %r49, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6621, %r50, 0, 0x0123;
	// inline asm
	mov.b64	%rd9884, {%r6621, %r6619};
	// inline asm
	prmt.b32 %r6623, %r51, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6625, %r52, 0, 0x0123;
	// inline asm
	mov.b64	%rd9885, {%r6625, %r6623};
	// inline asm
	prmt.b32 %r6627, %r53, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6629, %r54, 0, 0x0123;
	// inline asm
	mov.b64	%rd9869, {%r6629, %r6627};
	// inline asm
	prmt.b32 %r6631, %r55, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6633, %r56, 0, 0x0123;
	// inline asm
	mov.b64	%rd9868, {%r6633, %r6631};
	// inline asm
	prmt.b32 %r6635, %r57, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6637, %r58, 0, 0x0123;
	// inline asm
	mov.b64	%rd9867, {%r6637, %r6635};
	// inline asm
	prmt.b32 %r6639, %r59, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6641, %r60, 0, 0x0123;
	// inline asm
	mov.b64	%rd9866, {%r6641, %r6639};
	// inline asm
	prmt.b32 %r6643, %r61, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6645, %r62, 0, 0x0123;
	// inline asm
	mov.b64	%rd9865, {%r6645, %r6643};
	// inline asm
	prmt.b32 %r6647, %r63, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6649, %r64, 0, 0x0123;
	// inline asm
	mov.b64	%rd9864, {%r6649, %r6647};
	// inline asm
	prmt.b32 %r6651, %r65, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6653, %r66, 0, 0x0123;
	// inline asm
	mov.b64	%rd9863, {%r6653, %r6651};
	// inline asm
	prmt.b32 %r6655, %r67, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6657, %r68, 0, 0x0123;
	// inline asm
	mov.b64	%rd9862, {%r6657, %r6655};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6660,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6661}, %rd37;
	}
	shf.r.wrap.b32 	%r6662, %r6661, %r6660, 18;
	shf.r.wrap.b32 	%r6663, %r6660, %r6661, 18;
	mov.b64 	%rd8607, {%r6663, %r6662};
	shf.r.wrap.b32 	%r6664, %r6661, %r6660, 14;
	shf.r.wrap.b32 	%r6665, %r6660, %r6661, 14;
	mov.b64 	%rd8608, {%r6665, %r6664};
	xor.b64  	%rd8609, %rd8607, %rd8608;
	shf.l.wrap.b32 	%r6666, %r6660, %r6661, 23;
	shf.l.wrap.b32 	%r6667, %r6661, %r6660, 23;
	mov.b64 	%rd8610, {%r6667, %r6666};
	xor.b64  	%rd8611, %rd8609, %rd8610;
	xor.b64  	%rd8612, %rd36, %rd35;
	and.b64  	%rd8613, %rd8612, %rd37;
	xor.b64  	%rd8614, %rd8613, %rd35;
	add.s64 	%rd8615, %rd34, %rd9722;
	add.s64 	%rd8616, %rd8615, %rd8614;
	add.s64 	%rd8617, %rd8616, %rd9878;
	add.s64 	%rd8618, %rd8617, %rd8611;
	add.s64 	%rd8619, %rd8618, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6669,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r6670, %r6669, %r6668, 30;
	shf.l.wrap.b32 	%r6671, %r6668, %r6669, 30;
	mov.b64 	%rd8620, {%r6671, %r6670};
	shf.r.wrap.b32 	%r6672, %r6668, %r6669, 28;
	shf.r.wrap.b32 	%r6673, %r6669, %r6668, 28;
	mov.b64 	%rd8621, {%r6673, %r6672};
	xor.b64  	%rd8622, %rd8620, %rd8621;
	shf.l.wrap.b32 	%r6674, %r6669, %r6668, 25;
	shf.l.wrap.b32 	%r6675, %r6668, %r6669, 25;
	mov.b64 	%rd8623, {%r6675, %r6674};
	xor.b64  	%rd8624, %rd8622, %rd8623;
	xor.b64  	%rd8625, %rd41, %rd40;
	and.b64  	%rd8626, %rd8625, %rd39;
	and.b64  	%rd8627, %rd41, %rd40;
	or.b64  	%rd8628, %rd8626, %rd8627;
	add.s64 	%rd8629, %rd8618, %rd8628;
	add.s64 	%rd8630, %rd8629, %rd8624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6676,%dummy}, %rd8619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6677}, %rd8619;
	}
	shf.r.wrap.b32 	%r6678, %r6677, %r6676, 14;
	shf.r.wrap.b32 	%r6679, %r6676, %r6677, 14;
	mov.b64 	%rd8631, {%r6679, %r6678};
	shf.r.wrap.b32 	%r6680, %r6677, %r6676, 18;
	shf.r.wrap.b32 	%r6681, %r6676, %r6677, 18;
	mov.b64 	%rd8632, {%r6681, %r6680};
	xor.b64  	%rd8633, %rd8632, %rd8631;
	shf.l.wrap.b32 	%r6682, %r6676, %r6677, 23;
	shf.l.wrap.b32 	%r6683, %r6677, %r6676, 23;
	mov.b64 	%rd8634, {%r6683, %r6682};
	xor.b64  	%rd8635, %rd8633, %rd8634;
	xor.b64  	%rd8636, %rd37, %rd36;
	and.b64  	%rd8637, %rd8619, %rd8636;
	xor.b64  	%rd8638, %rd8637, %rd36;
	add.s64 	%rd8639, %rd35, %rd9721;
	add.s64 	%rd8640, %rd8639, %rd9879;
	add.s64 	%rd8641, %rd8640, %rd8638;
	add.s64 	%rd8642, %rd8641, %rd8635;
	add.s64 	%rd8643, %rd8642, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6684,%dummy}, %rd8630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6685}, %rd8630;
	}
	shf.r.wrap.b32 	%r6686, %r6685, %r6684, 28;
	shf.r.wrap.b32 	%r6687, %r6684, %r6685, 28;
	mov.b64 	%rd8644, {%r6687, %r6686};
	shf.l.wrap.b32 	%r6688, %r6684, %r6685, 30;
	shf.l.wrap.b32 	%r6689, %r6685, %r6684, 30;
	mov.b64 	%rd8645, {%r6689, %r6688};
	xor.b64  	%rd8646, %rd8645, %rd8644;
	shf.l.wrap.b32 	%r6690, %r6684, %r6685, 25;
	shf.l.wrap.b32 	%r6691, %r6685, %r6684, 25;
	mov.b64 	%rd8647, {%r6691, %r6690};
	xor.b64  	%rd8648, %rd8646, %rd8647;
	and.b64  	%rd8649, %rd8630, %rd41;
	xor.b64  	%rd8650, %rd8630, %rd41;
	and.b64  	%rd8651, %rd8650, %rd40;
	or.b64  	%rd8652, %rd8651, %rd8649;
	add.s64 	%rd8653, %rd8642, %rd8652;
	add.s64 	%rd8654, %rd8653, %rd8648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd8643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd8643;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 14;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 14;
	mov.b64 	%rd8655, {%r6695, %r6694};
	shf.r.wrap.b32 	%r6696, %r6693, %r6692, 18;
	shf.r.wrap.b32 	%r6697, %r6692, %r6693, 18;
	mov.b64 	%rd8656, {%r6697, %r6696};
	xor.b64  	%rd8657, %rd8656, %rd8655;
	shf.l.wrap.b32 	%r6698, %r6692, %r6693, 23;
	shf.l.wrap.b32 	%r6699, %r6693, %r6692, 23;
	mov.b64 	%rd8658, {%r6699, %r6698};
	xor.b64  	%rd8659, %rd8657, %rd8658;
	xor.b64  	%rd8660, %rd8619, %rd37;
	and.b64  	%rd8661, %rd8643, %rd8660;
	xor.b64  	%rd8662, %rd8661, %rd37;
	add.s64 	%rd8663, %rd36, %rd20;
	add.s64 	%rd8664, %rd8663, %rd9880;
	add.s64 	%rd8665, %rd8664, %rd8662;
	add.s64 	%rd8666, %rd8665, %rd8659;
	add.s64 	%rd8667, %rd8666, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6700,%dummy}, %rd8654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6701}, %rd8654;
	}
	shf.r.wrap.b32 	%r6702, %r6701, %r6700, 28;
	shf.r.wrap.b32 	%r6703, %r6700, %r6701, 28;
	mov.b64 	%rd8668, {%r6703, %r6702};
	shf.l.wrap.b32 	%r6704, %r6700, %r6701, 30;
	shf.l.wrap.b32 	%r6705, %r6701, %r6700, 30;
	mov.b64 	%rd8669, {%r6705, %r6704};
	xor.b64  	%rd8670, %rd8669, %rd8668;
	shf.l.wrap.b32 	%r6706, %r6700, %r6701, 25;
	shf.l.wrap.b32 	%r6707, %r6701, %r6700, 25;
	mov.b64 	%rd8671, {%r6707, %r6706};
	xor.b64  	%rd8672, %rd8670, %rd8671;
	and.b64  	%rd8673, %rd8654, %rd8630;
	xor.b64  	%rd8674, %rd8654, %rd8630;
	and.b64  	%rd8675, %rd8674, %rd41;
	or.b64  	%rd8676, %rd8675, %rd8673;
	add.s64 	%rd8677, %rd8666, %rd8676;
	add.s64 	%rd8678, %rd8677, %rd8672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6708,%dummy}, %rd8667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6709}, %rd8667;
	}
	shf.r.wrap.b32 	%r6710, %r6709, %r6708, 14;
	shf.r.wrap.b32 	%r6711, %r6708, %r6709, 14;
	mov.b64 	%rd8679, {%r6711, %r6710};
	shf.r.wrap.b32 	%r6712, %r6709, %r6708, 18;
	shf.r.wrap.b32 	%r6713, %r6708, %r6709, 18;
	mov.b64 	%rd8680, {%r6713, %r6712};
	xor.b64  	%rd8681, %rd8680, %rd8679;
	shf.l.wrap.b32 	%r6714, %r6708, %r6709, 23;
	shf.l.wrap.b32 	%r6715, %r6709, %r6708, 23;
	mov.b64 	%rd8682, {%r6715, %r6714};
	xor.b64  	%rd8683, %rd8681, %rd8682;
	xor.b64  	%rd8684, %rd8643, %rd8619;
	and.b64  	%rd8685, %rd8667, %rd8684;
	xor.b64  	%rd8686, %rd8685, %rd8619;
	add.s64 	%rd8687, %rd37, %rd21;
	add.s64 	%rd8688, %rd8687, %rd9881;
	add.s64 	%rd8689, %rd8688, %rd8686;
	add.s64 	%rd8690, %rd8689, %rd8683;
	add.s64 	%rd8691, %rd8690, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6716,%dummy}, %rd8678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6717}, %rd8678;
	}
	shf.r.wrap.b32 	%r6718, %r6717, %r6716, 28;
	shf.r.wrap.b32 	%r6719, %r6716, %r6717, 28;
	mov.b64 	%rd8692, {%r6719, %r6718};
	shf.l.wrap.b32 	%r6720, %r6716, %r6717, 30;
	shf.l.wrap.b32 	%r6721, %r6717, %r6716, 30;
	mov.b64 	%rd8693, {%r6721, %r6720};
	xor.b64  	%rd8694, %rd8693, %rd8692;
	shf.l.wrap.b32 	%r6722, %r6716, %r6717, 25;
	shf.l.wrap.b32 	%r6723, %r6717, %r6716, 25;
	mov.b64 	%rd8695, {%r6723, %r6722};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	and.b64  	%rd8697, %rd8678, %rd8654;
	xor.b64  	%rd8698, %rd8678, %rd8654;
	and.b64  	%rd8699, %rd8698, %rd8630;
	or.b64  	%rd8700, %rd8699, %rd8697;
	add.s64 	%rd8701, %rd8690, %rd8700;
	add.s64 	%rd8702, %rd8701, %rd8696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6724,%dummy}, %rd8691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6725}, %rd8691;
	}
	shf.r.wrap.b32 	%r6726, %r6725, %r6724, 14;
	shf.r.wrap.b32 	%r6727, %r6724, %r6725, 14;
	mov.b64 	%rd8703, {%r6727, %r6726};
	shf.r.wrap.b32 	%r6728, %r6725, %r6724, 18;
	shf.r.wrap.b32 	%r6729, %r6724, %r6725, 18;
	mov.b64 	%rd8704, {%r6729, %r6728};
	xor.b64  	%rd8705, %rd8704, %rd8703;
	shf.l.wrap.b32 	%r6730, %r6724, %r6725, 23;
	shf.l.wrap.b32 	%r6731, %r6725, %r6724, 23;
	mov.b64 	%rd8706, {%r6731, %r6730};
	xor.b64  	%rd8707, %rd8705, %rd8706;
	xor.b64  	%rd8708, %rd8667, %rd8643;
	and.b64  	%rd8709, %rd8691, %rd8708;
	xor.b64  	%rd8710, %rd8709, %rd8643;
	add.s64 	%rd8711, %rd9882, %rd22;
	add.s64 	%rd8712, %rd8711, %rd8619;
	add.s64 	%rd8713, %rd8712, %rd8710;
	add.s64 	%rd8714, %rd8713, %rd8707;
	add.s64 	%rd8715, %rd8714, %rd8630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd8702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd8702;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 28;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 28;
	mov.b64 	%rd8716, {%r6735, %r6734};
	shf.l.wrap.b32 	%r6736, %r6732, %r6733, 30;
	shf.l.wrap.b32 	%r6737, %r6733, %r6732, 30;
	mov.b64 	%rd8717, {%r6737, %r6736};
	xor.b64  	%rd8718, %rd8717, %rd8716;
	shf.l.wrap.b32 	%r6738, %r6732, %r6733, 25;
	shf.l.wrap.b32 	%r6739, %r6733, %r6732, 25;
	mov.b64 	%rd8719, {%r6739, %r6738};
	xor.b64  	%rd8720, %rd8718, %rd8719;
	and.b64  	%rd8721, %rd8702, %rd8678;
	xor.b64  	%rd8722, %rd8702, %rd8678;
	and.b64  	%rd8723, %rd8722, %rd8654;
	or.b64  	%rd8724, %rd8723, %rd8721;
	add.s64 	%rd8725, %rd8714, %rd8724;
	add.s64 	%rd8726, %rd8725, %rd8720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6740,%dummy}, %rd8715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6741}, %rd8715;
	}
	shf.r.wrap.b32 	%r6742, %r6741, %r6740, 14;
	shf.r.wrap.b32 	%r6743, %r6740, %r6741, 14;
	mov.b64 	%rd8727, {%r6743, %r6742};
	shf.r.wrap.b32 	%r6744, %r6741, %r6740, 18;
	shf.r.wrap.b32 	%r6745, %r6740, %r6741, 18;
	mov.b64 	%rd8728, {%r6745, %r6744};
	xor.b64  	%rd8729, %rd8728, %rd8727;
	shf.l.wrap.b32 	%r6746, %r6740, %r6741, 23;
	shf.l.wrap.b32 	%r6747, %r6741, %r6740, 23;
	mov.b64 	%rd8730, {%r6747, %r6746};
	xor.b64  	%rd8731, %rd8729, %rd8730;
	xor.b64  	%rd8732, %rd8691, %rd8667;
	and.b64  	%rd8733, %rd8715, %rd8732;
	xor.b64  	%rd8734, %rd8733, %rd8667;
	add.s64 	%rd8735, %rd9883, %rd23;
	add.s64 	%rd8736, %rd8735, %rd8643;
	add.s64 	%rd8737, %rd8736, %rd8734;
	add.s64 	%rd8738, %rd8737, %rd8731;
	add.s64 	%rd8739, %rd8738, %rd8654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6748,%dummy}, %rd8726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6749}, %rd8726;
	}
	shf.r.wrap.b32 	%r6750, %r6749, %r6748, 28;
	shf.r.wrap.b32 	%r6751, %r6748, %r6749, 28;
	mov.b64 	%rd8740, {%r6751, %r6750};
	shf.l.wrap.b32 	%r6752, %r6748, %r6749, 30;
	shf.l.wrap.b32 	%r6753, %r6749, %r6748, 30;
	mov.b64 	%rd8741, {%r6753, %r6752};
	xor.b64  	%rd8742, %rd8741, %rd8740;
	shf.l.wrap.b32 	%r6754, %r6748, %r6749, 25;
	shf.l.wrap.b32 	%r6755, %r6749, %r6748, 25;
	mov.b64 	%rd8743, {%r6755, %r6754};
	xor.b64  	%rd8744, %rd8742, %rd8743;
	and.b64  	%rd8745, %rd8726, %rd8702;
	xor.b64  	%rd8746, %rd8726, %rd8702;
	and.b64  	%rd8747, %rd8746, %rd8678;
	or.b64  	%rd8748, %rd8747, %rd8745;
	add.s64 	%rd8749, %rd8738, %rd8748;
	add.s64 	%rd8750, %rd8749, %rd8744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6756,%dummy}, %rd8739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6757}, %rd8739;
	}
	shf.r.wrap.b32 	%r6758, %r6757, %r6756, 14;
	shf.r.wrap.b32 	%r6759, %r6756, %r6757, 14;
	mov.b64 	%rd8751, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6757, %r6756, 18;
	shf.r.wrap.b32 	%r6761, %r6756, %r6757, 18;
	mov.b64 	%rd8752, {%r6761, %r6760};
	xor.b64  	%rd8753, %rd8752, %rd8751;
	shf.l.wrap.b32 	%r6762, %r6756, %r6757, 23;
	shf.l.wrap.b32 	%r6763, %r6757, %r6756, 23;
	mov.b64 	%rd8754, {%r6763, %r6762};
	xor.b64  	%rd8755, %rd8753, %rd8754;
	xor.b64  	%rd8756, %rd8715, %rd8691;
	and.b64  	%rd8757, %rd8739, %rd8756;
	xor.b64  	%rd8758, %rd8757, %rd8691;
	add.s64 	%rd8759, %rd9884, %rd24;
	add.s64 	%rd8760, %rd8759, %rd8667;
	add.s64 	%rd8761, %rd8760, %rd8758;
	add.s64 	%rd8762, %rd8761, %rd8755;
	add.s64 	%rd8763, %rd8762, %rd8678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6764,%dummy}, %rd8750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6765}, %rd8750;
	}
	shf.r.wrap.b32 	%r6766, %r6765, %r6764, 28;
	shf.r.wrap.b32 	%r6767, %r6764, %r6765, 28;
	mov.b64 	%rd8764, {%r6767, %r6766};
	shf.l.wrap.b32 	%r6768, %r6764, %r6765, 30;
	shf.l.wrap.b32 	%r6769, %r6765, %r6764, 30;
	mov.b64 	%rd8765, {%r6769, %r6768};
	xor.b64  	%rd8766, %rd8765, %rd8764;
	shf.l.wrap.b32 	%r6770, %r6764, %r6765, 25;
	shf.l.wrap.b32 	%r6771, %r6765, %r6764, 25;
	mov.b64 	%rd8767, {%r6771, %r6770};
	xor.b64  	%rd8768, %rd8766, %rd8767;
	and.b64  	%rd8769, %rd8750, %rd8726;
	xor.b64  	%rd8770, %rd8750, %rd8726;
	and.b64  	%rd8771, %rd8770, %rd8702;
	or.b64  	%rd8772, %rd8771, %rd8769;
	add.s64 	%rd8773, %rd8762, %rd8772;
	add.s64 	%rd8774, %rd8773, %rd8768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6772,%dummy}, %rd8763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd8763;
	}
	shf.r.wrap.b32 	%r6774, %r6773, %r6772, 14;
	shf.r.wrap.b32 	%r6775, %r6772, %r6773, 14;
	mov.b64 	%rd8775, {%r6775, %r6774};
	shf.r.wrap.b32 	%r6776, %r6773, %r6772, 18;
	shf.r.wrap.b32 	%r6777, %r6772, %r6773, 18;
	mov.b64 	%rd8776, {%r6777, %r6776};
	xor.b64  	%rd8777, %rd8776, %rd8775;
	shf.l.wrap.b32 	%r6778, %r6772, %r6773, 23;
	shf.l.wrap.b32 	%r6779, %r6773, %r6772, 23;
	mov.b64 	%rd8778, {%r6779, %r6778};
	xor.b64  	%rd8779, %rd8777, %rd8778;
	xor.b64  	%rd8780, %rd8739, %rd8715;
	and.b64  	%rd8781, %rd8763, %rd8780;
	xor.b64  	%rd8782, %rd8781, %rd8715;
	add.s64 	%rd8783, %rd9885, %rd25;
	add.s64 	%rd8784, %rd8783, %rd8691;
	add.s64 	%rd8785, %rd8784, %rd8782;
	add.s64 	%rd8786, %rd8785, %rd8779;
	add.s64 	%rd8787, %rd8786, %rd8702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6780,%dummy}, %rd8774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6781}, %rd8774;
	}
	shf.r.wrap.b32 	%r6782, %r6781, %r6780, 28;
	shf.r.wrap.b32 	%r6783, %r6780, %r6781, 28;
	mov.b64 	%rd8788, {%r6783, %r6782};
	shf.l.wrap.b32 	%r6784, %r6780, %r6781, 30;
	shf.l.wrap.b32 	%r6785, %r6781, %r6780, 30;
	mov.b64 	%rd8789, {%r6785, %r6784};
	xor.b64  	%rd8790, %rd8789, %rd8788;
	shf.l.wrap.b32 	%r6786, %r6780, %r6781, 25;
	shf.l.wrap.b32 	%r6787, %r6781, %r6780, 25;
	mov.b64 	%rd8791, {%r6787, %r6786};
	xor.b64  	%rd8792, %rd8790, %rd8791;
	and.b64  	%rd8793, %rd8774, %rd8750;
	xor.b64  	%rd8794, %rd8774, %rd8750;
	and.b64  	%rd8795, %rd8794, %rd8726;
	or.b64  	%rd8796, %rd8795, %rd8793;
	add.s64 	%rd8797, %rd8786, %rd8796;
	add.s64 	%rd8798, %rd8797, %rd8792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6788,%dummy}, %rd8787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6789}, %rd8787;
	}
	shf.r.wrap.b32 	%r6790, %r6789, %r6788, 14;
	shf.r.wrap.b32 	%r6791, %r6788, %r6789, 14;
	mov.b64 	%rd8799, {%r6791, %r6790};
	shf.r.wrap.b32 	%r6792, %r6789, %r6788, 18;
	shf.r.wrap.b32 	%r6793, %r6788, %r6789, 18;
	mov.b64 	%rd8800, {%r6793, %r6792};
	xor.b64  	%rd8801, %rd8800, %rd8799;
	shf.l.wrap.b32 	%r6794, %r6788, %r6789, 23;
	shf.l.wrap.b32 	%r6795, %r6789, %r6788, 23;
	mov.b64 	%rd8802, {%r6795, %r6794};
	xor.b64  	%rd8803, %rd8801, %rd8802;
	xor.b64  	%rd8804, %rd8763, %rd8739;
	and.b64  	%rd8805, %rd8787, %rd8804;
	xor.b64  	%rd8806, %rd8805, %rd8739;
	add.s64 	%rd8807, %rd9869, %rd26;
	add.s64 	%rd8808, %rd8807, %rd8715;
	add.s64 	%rd8809, %rd8808, %rd8806;
	add.s64 	%rd8810, %rd8809, %rd8803;
	add.s64 	%rd8811, %rd8810, %rd8726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6796,%dummy}, %rd8798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6797}, %rd8798;
	}
	shf.r.wrap.b32 	%r6798, %r6797, %r6796, 28;
	shf.r.wrap.b32 	%r6799, %r6796, %r6797, 28;
	mov.b64 	%rd8812, {%r6799, %r6798};
	shf.l.wrap.b32 	%r6800, %r6796, %r6797, 30;
	shf.l.wrap.b32 	%r6801, %r6797, %r6796, 30;
	mov.b64 	%rd8813, {%r6801, %r6800};
	xor.b64  	%rd8814, %rd8813, %rd8812;
	shf.l.wrap.b32 	%r6802, %r6796, %r6797, 25;
	shf.l.wrap.b32 	%r6803, %r6797, %r6796, 25;
	mov.b64 	%rd8815, {%r6803, %r6802};
	xor.b64  	%rd8816, %rd8814, %rd8815;
	and.b64  	%rd8817, %rd8798, %rd8774;
	xor.b64  	%rd8818, %rd8798, %rd8774;
	and.b64  	%rd8819, %rd8818, %rd8750;
	or.b64  	%rd8820, %rd8819, %rd8817;
	add.s64 	%rd8821, %rd8810, %rd8820;
	add.s64 	%rd8822, %rd8821, %rd8816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6804,%dummy}, %rd8811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6805}, %rd8811;
	}
	shf.r.wrap.b32 	%r6806, %r6805, %r6804, 14;
	shf.r.wrap.b32 	%r6807, %r6804, %r6805, 14;
	mov.b64 	%rd8823, {%r6807, %r6806};
	shf.r.wrap.b32 	%r6808, %r6805, %r6804, 18;
	shf.r.wrap.b32 	%r6809, %r6804, %r6805, 18;
	mov.b64 	%rd8824, {%r6809, %r6808};
	xor.b64  	%rd8825, %rd8824, %rd8823;
	shf.l.wrap.b32 	%r6810, %r6804, %r6805, 23;
	shf.l.wrap.b32 	%r6811, %r6805, %r6804, 23;
	mov.b64 	%rd8826, {%r6811, %r6810};
	xor.b64  	%rd8827, %rd8825, %rd8826;
	xor.b64  	%rd8828, %rd8787, %rd8763;
	and.b64  	%rd8829, %rd8811, %rd8828;
	xor.b64  	%rd8830, %rd8829, %rd8763;
	add.s64 	%rd8831, %rd9868, %rd27;
	add.s64 	%rd8832, %rd8831, %rd8739;
	add.s64 	%rd8833, %rd8832, %rd8830;
	add.s64 	%rd8834, %rd8833, %rd8827;
	add.s64 	%rd8835, %rd8834, %rd8750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6812,%dummy}, %rd8822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6813}, %rd8822;
	}
	shf.r.wrap.b32 	%r6814, %r6813, %r6812, 28;
	shf.r.wrap.b32 	%r6815, %r6812, %r6813, 28;
	mov.b64 	%rd8836, {%r6815, %r6814};
	shf.l.wrap.b32 	%r6816, %r6812, %r6813, 30;
	shf.l.wrap.b32 	%r6817, %r6813, %r6812, 30;
	mov.b64 	%rd8837, {%r6817, %r6816};
	xor.b64  	%rd8838, %rd8837, %rd8836;
	shf.l.wrap.b32 	%r6818, %r6812, %r6813, 25;
	shf.l.wrap.b32 	%r6819, %r6813, %r6812, 25;
	mov.b64 	%rd8839, {%r6819, %r6818};
	xor.b64  	%rd8840, %rd8838, %rd8839;
	and.b64  	%rd8841, %rd8822, %rd8798;
	xor.b64  	%rd8842, %rd8822, %rd8798;
	and.b64  	%rd8843, %rd8842, %rd8774;
	or.b64  	%rd8844, %rd8843, %rd8841;
	add.s64 	%rd8845, %rd8834, %rd8844;
	add.s64 	%rd8846, %rd8845, %rd8840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6820,%dummy}, %rd8835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6821}, %rd8835;
	}
	shf.r.wrap.b32 	%r6822, %r6821, %r6820, 14;
	shf.r.wrap.b32 	%r6823, %r6820, %r6821, 14;
	mov.b64 	%rd8847, {%r6823, %r6822};
	shf.r.wrap.b32 	%r6824, %r6821, %r6820, 18;
	shf.r.wrap.b32 	%r6825, %r6820, %r6821, 18;
	mov.b64 	%rd8848, {%r6825, %r6824};
	xor.b64  	%rd8849, %rd8848, %rd8847;
	shf.l.wrap.b32 	%r6826, %r6820, %r6821, 23;
	shf.l.wrap.b32 	%r6827, %r6821, %r6820, 23;
	mov.b64 	%rd8850, {%r6827, %r6826};
	xor.b64  	%rd8851, %rd8849, %rd8850;
	xor.b64  	%rd8852, %rd8811, %rd8787;
	and.b64  	%rd8853, %rd8835, %rd8852;
	xor.b64  	%rd8854, %rd8853, %rd8787;
	add.s64 	%rd8855, %rd9867, %rd9712;
	add.s64 	%rd8856, %rd8855, %rd8763;
	add.s64 	%rd8857, %rd8856, %rd8854;
	add.s64 	%rd8858, %rd8857, %rd8851;
	add.s64 	%rd8859, %rd8858, %rd8774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6828,%dummy}, %rd8846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6829}, %rd8846;
	}
	shf.r.wrap.b32 	%r6830, %r6829, %r6828, 28;
	shf.r.wrap.b32 	%r6831, %r6828, %r6829, 28;
	mov.b64 	%rd8860, {%r6831, %r6830};
	shf.l.wrap.b32 	%r6832, %r6828, %r6829, 30;
	shf.l.wrap.b32 	%r6833, %r6829, %r6828, 30;
	mov.b64 	%rd8861, {%r6833, %r6832};
	xor.b64  	%rd8862, %rd8861, %rd8860;
	shf.l.wrap.b32 	%r6834, %r6828, %r6829, 25;
	shf.l.wrap.b32 	%r6835, %r6829, %r6828, 25;
	mov.b64 	%rd8863, {%r6835, %r6834};
	xor.b64  	%rd8864, %rd8862, %rd8863;
	and.b64  	%rd8865, %rd8846, %rd8822;
	xor.b64  	%rd8866, %rd8846, %rd8822;
	and.b64  	%rd8867, %rd8866, %rd8798;
	or.b64  	%rd8868, %rd8867, %rd8865;
	add.s64 	%rd8869, %rd8858, %rd8868;
	add.s64 	%rd8870, %rd8869, %rd8864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6836,%dummy}, %rd8859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6837}, %rd8859;
	}
	shf.r.wrap.b32 	%r6838, %r6837, %r6836, 14;
	shf.r.wrap.b32 	%r6839, %r6836, %r6837, 14;
	mov.b64 	%rd8871, {%r6839, %r6838};
	shf.r.wrap.b32 	%r6840, %r6837, %r6836, 18;
	shf.r.wrap.b32 	%r6841, %r6836, %r6837, 18;
	mov.b64 	%rd8872, {%r6841, %r6840};
	xor.b64  	%rd8873, %rd8872, %rd8871;
	shf.l.wrap.b32 	%r6842, %r6836, %r6837, 23;
	shf.l.wrap.b32 	%r6843, %r6837, %r6836, 23;
	mov.b64 	%rd8874, {%r6843, %r6842};
	xor.b64  	%rd8875, %rd8873, %rd8874;
	xor.b64  	%rd8876, %rd8835, %rd8811;
	and.b64  	%rd8877, %rd8859, %rd8876;
	xor.b64  	%rd8878, %rd8877, %rd8811;
	add.s64 	%rd8879, %rd9866, %rd9711;
	add.s64 	%rd8880, %rd8879, %rd8787;
	add.s64 	%rd8881, %rd8880, %rd8878;
	add.s64 	%rd8882, %rd8881, %rd8875;
	add.s64 	%rd8883, %rd8882, %rd8798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6844,%dummy}, %rd8870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6845}, %rd8870;
	}
	shf.r.wrap.b32 	%r6846, %r6845, %r6844, 28;
	shf.r.wrap.b32 	%r6847, %r6844, %r6845, 28;
	mov.b64 	%rd8884, {%r6847, %r6846};
	shf.l.wrap.b32 	%r6848, %r6844, %r6845, 30;
	shf.l.wrap.b32 	%r6849, %r6845, %r6844, 30;
	mov.b64 	%rd8885, {%r6849, %r6848};
	xor.b64  	%rd8886, %rd8885, %rd8884;
	shf.l.wrap.b32 	%r6850, %r6844, %r6845, 25;
	shf.l.wrap.b32 	%r6851, %r6845, %r6844, 25;
	mov.b64 	%rd8887, {%r6851, %r6850};
	xor.b64  	%rd8888, %rd8886, %rd8887;
	and.b64  	%rd8889, %rd8870, %rd8846;
	xor.b64  	%rd8890, %rd8870, %rd8846;
	and.b64  	%rd8891, %rd8890, %rd8822;
	or.b64  	%rd8892, %rd8891, %rd8889;
	add.s64 	%rd8893, %rd8882, %rd8892;
	add.s64 	%rd8894, %rd8893, %rd8888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6852,%dummy}, %rd8883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6853}, %rd8883;
	}
	shf.r.wrap.b32 	%r6854, %r6853, %r6852, 14;
	shf.r.wrap.b32 	%r6855, %r6852, %r6853, 14;
	mov.b64 	%rd8895, {%r6855, %r6854};
	shf.r.wrap.b32 	%r6856, %r6853, %r6852, 18;
	shf.r.wrap.b32 	%r6857, %r6852, %r6853, 18;
	mov.b64 	%rd8896, {%r6857, %r6856};
	xor.b64  	%rd8897, %rd8896, %rd8895;
	shf.l.wrap.b32 	%r6858, %r6852, %r6853, 23;
	shf.l.wrap.b32 	%r6859, %r6853, %r6852, 23;
	mov.b64 	%rd8898, {%r6859, %r6858};
	xor.b64  	%rd8899, %rd8897, %rd8898;
	xor.b64  	%rd8900, %rd8859, %rd8835;
	and.b64  	%rd8901, %rd8883, %rd8900;
	xor.b64  	%rd8902, %rd8901, %rd8835;
	add.s64 	%rd8903, %rd9865, %rd9710;
	add.s64 	%rd8904, %rd8903, %rd8811;
	add.s64 	%rd8905, %rd8904, %rd8902;
	add.s64 	%rd8906, %rd8905, %rd8899;
	add.s64 	%rd9877, %rd8906, %rd8822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6860,%dummy}, %rd8894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6861}, %rd8894;
	}
	shf.r.wrap.b32 	%r6862, %r6861, %r6860, 28;
	shf.r.wrap.b32 	%r6863, %r6860, %r6861, 28;
	mov.b64 	%rd8907, {%r6863, %r6862};
	shf.l.wrap.b32 	%r6864, %r6860, %r6861, 30;
	shf.l.wrap.b32 	%r6865, %r6861, %r6860, 30;
	mov.b64 	%rd8908, {%r6865, %r6864};
	xor.b64  	%rd8909, %rd8908, %rd8907;
	shf.l.wrap.b32 	%r6866, %r6860, %r6861, 25;
	shf.l.wrap.b32 	%r6867, %r6861, %r6860, 25;
	mov.b64 	%rd8910, {%r6867, %r6866};
	xor.b64  	%rd8911, %rd8909, %rd8910;
	and.b64  	%rd8912, %rd8894, %rd8870;
	xor.b64  	%rd8913, %rd8894, %rd8870;
	and.b64  	%rd8914, %rd8913, %rd8846;
	or.b64  	%rd8915, %rd8914, %rd8912;
	add.s64 	%rd8916, %rd8906, %rd8915;
	add.s64 	%rd9873, %rd8916, %rd8911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6868,%dummy}, %rd9877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6869}, %rd9877;
	}
	shf.r.wrap.b32 	%r6870, %r6869, %r6868, 14;
	shf.r.wrap.b32 	%r6871, %r6868, %r6869, 14;
	mov.b64 	%rd8917, {%r6871, %r6870};
	shf.r.wrap.b32 	%r6872, %r6869, %r6868, 18;
	shf.r.wrap.b32 	%r6873, %r6868, %r6869, 18;
	mov.b64 	%rd8918, {%r6873, %r6872};
	xor.b64  	%rd8919, %rd8918, %rd8917;
	shf.l.wrap.b32 	%r6874, %r6868, %r6869, 23;
	shf.l.wrap.b32 	%r6875, %r6869, %r6868, 23;
	mov.b64 	%rd8920, {%r6875, %r6874};
	xor.b64  	%rd8921, %rd8919, %rd8920;
	xor.b64  	%rd8922, %rd8883, %rd8859;
	and.b64  	%rd8923, %rd9877, %rd8922;
	xor.b64  	%rd8924, %rd8923, %rd8859;
	add.s64 	%rd8925, %rd9864, %rd9709;
	add.s64 	%rd8926, %rd8925, %rd8835;
	add.s64 	%rd8927, %rd8926, %rd8924;
	add.s64 	%rd8928, %rd8927, %rd8921;
	add.s64 	%rd9876, %rd8928, %rd8846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6876,%dummy}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6877}, %rd9873;
	}
	shf.r.wrap.b32 	%r6878, %r6877, %r6876, 28;
	shf.r.wrap.b32 	%r6879, %r6876, %r6877, 28;
	mov.b64 	%rd8929, {%r6879, %r6878};
	shf.l.wrap.b32 	%r6880, %r6876, %r6877, 30;
	shf.l.wrap.b32 	%r6881, %r6877, %r6876, 30;
	mov.b64 	%rd8930, {%r6881, %r6880};
	xor.b64  	%rd8931, %rd8930, %rd8929;
	shf.l.wrap.b32 	%r6882, %r6876, %r6877, 25;
	shf.l.wrap.b32 	%r6883, %r6877, %r6876, 25;
	mov.b64 	%rd8932, {%r6883, %r6882};
	xor.b64  	%rd8933, %rd8931, %rd8932;
	and.b64  	%rd8934, %rd9873, %rd8894;
	xor.b64  	%rd8935, %rd9873, %rd8894;
	and.b64  	%rd8936, %rd8935, %rd8870;
	or.b64  	%rd8937, %rd8936, %rd8934;
	add.s64 	%rd8938, %rd8928, %rd8937;
	add.s64 	%rd9872, %rd8938, %rd8933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6884,%dummy}, %rd9876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6885}, %rd9876;
	}
	shf.r.wrap.b32 	%r6886, %r6885, %r6884, 14;
	shf.r.wrap.b32 	%r6887, %r6884, %r6885, 14;
	mov.b64 	%rd8939, {%r6887, %r6886};
	shf.r.wrap.b32 	%r6888, %r6885, %r6884, 18;
	shf.r.wrap.b32 	%r6889, %r6884, %r6885, 18;
	mov.b64 	%rd8940, {%r6889, %r6888};
	xor.b64  	%rd8941, %rd8940, %rd8939;
	shf.l.wrap.b32 	%r6890, %r6884, %r6885, 23;
	shf.l.wrap.b32 	%r6891, %r6885, %r6884, 23;
	mov.b64 	%rd8942, {%r6891, %r6890};
	xor.b64  	%rd8943, %rd8941, %rd8942;
	xor.b64  	%rd8944, %rd9877, %rd8883;
	and.b64  	%rd8945, %rd9876, %rd8944;
	xor.b64  	%rd8946, %rd8945, %rd8883;
	add.s64 	%rd8947, %rd9863, %rd9708;
	add.s64 	%rd8948, %rd8947, %rd8859;
	add.s64 	%rd8949, %rd8948, %rd8946;
	add.s64 	%rd8950, %rd8949, %rd8943;
	add.s64 	%rd9875, %rd8950, %rd8870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6892,%dummy}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6893}, %rd9872;
	}
	shf.r.wrap.b32 	%r6894, %r6893, %r6892, 28;
	shf.r.wrap.b32 	%r6895, %r6892, %r6893, 28;
	mov.b64 	%rd8951, {%r6895, %r6894};
	shf.l.wrap.b32 	%r6896, %r6892, %r6893, 30;
	shf.l.wrap.b32 	%r6897, %r6893, %r6892, 30;
	mov.b64 	%rd8952, {%r6897, %r6896};
	xor.b64  	%rd8953, %rd8952, %rd8951;
	shf.l.wrap.b32 	%r6898, %r6892, %r6893, 25;
	shf.l.wrap.b32 	%r6899, %r6893, %r6892, 25;
	mov.b64 	%rd8954, {%r6899, %r6898};
	xor.b64  	%rd8955, %rd8953, %rd8954;
	and.b64  	%rd8956, %rd9872, %rd9873;
	xor.b64  	%rd8957, %rd9872, %rd9873;
	and.b64  	%rd8958, %rd8957, %rd8894;
	or.b64  	%rd8959, %rd8958, %rd8956;
	add.s64 	%rd8960, %rd8950, %rd8959;
	add.s64 	%rd9871, %rd8960, %rd8955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6900,%dummy}, %rd9875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6901}, %rd9875;
	}
	shf.r.wrap.b32 	%r6902, %r6901, %r6900, 14;
	shf.r.wrap.b32 	%r6903, %r6900, %r6901, 14;
	mov.b64 	%rd8961, {%r6903, %r6902};
	shf.r.wrap.b32 	%r6904, %r6901, %r6900, 18;
	shf.r.wrap.b32 	%r6905, %r6900, %r6901, 18;
	mov.b64 	%rd8962, {%r6905, %r6904};
	xor.b64  	%rd8963, %rd8962, %rd8961;
	shf.l.wrap.b32 	%r6906, %r6900, %r6901, 23;
	shf.l.wrap.b32 	%r6907, %r6901, %r6900, 23;
	mov.b64 	%rd8964, {%r6907, %r6906};
	xor.b64  	%rd8965, %rd8963, %rd8964;
	xor.b64  	%rd8966, %rd9876, %rd9877;
	and.b64  	%rd8967, %rd9875, %rd8966;
	xor.b64  	%rd8968, %rd8967, %rd9877;
	add.s64 	%rd8969, %rd9862, %rd9707;
	add.s64 	%rd8970, %rd8969, %rd8883;
	add.s64 	%rd8971, %rd8970, %rd8968;
	add.s64 	%rd8972, %rd8971, %rd8965;
	add.s64 	%rd9874, %rd8972, %rd8894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6908,%dummy}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6909}, %rd9871;
	}
	shf.r.wrap.b32 	%r6910, %r6909, %r6908, 28;
	shf.r.wrap.b32 	%r6911, %r6908, %r6909, 28;
	mov.b64 	%rd8973, {%r6911, %r6910};
	shf.l.wrap.b32 	%r6912, %r6908, %r6909, 30;
	shf.l.wrap.b32 	%r6913, %r6909, %r6908, 30;
	mov.b64 	%rd8974, {%r6913, %r6912};
	xor.b64  	%rd8975, %rd8974, %rd8973;
	shf.l.wrap.b32 	%r6914, %r6908, %r6909, 25;
	shf.l.wrap.b32 	%r6915, %r6909, %r6908, 25;
	mov.b64 	%rd8976, {%r6915, %r6914};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	and.b64  	%rd8978, %rd9871, %rd9872;
	xor.b64  	%rd8979, %rd9871, %rd9872;
	and.b64  	%rd8980, %rd8979, %rd9873;
	or.b64  	%rd8981, %rd8980, %rd8978;
	add.s64 	%rd8982, %rd8972, %rd8981;
	add.s64 	%rd9870, %rd8982, %rd8977;
	mov.u32 	%r7535, 16;

BB3_39:
	shr.u64 	%rd8983, %rd9863, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6916,%dummy}, %rd9863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd9863;
	}
	shf.r.wrap.b32 	%r6918, %r6917, %r6916, 19;
	shf.r.wrap.b32 	%r6919, %r6916, %r6917, 19;
	mov.b64 	%rd8984, {%r6919, %r6918};
	xor.b64  	%rd8985, %rd8984, %rd8983;
	shf.l.wrap.b32 	%r6920, %r6916, %r6917, 3;
	shf.l.wrap.b32 	%r6921, %r6917, %r6916, 3;
	mov.b64 	%rd8986, {%r6921, %r6920};
	xor.b64  	%rd8987, %rd8985, %rd8986;
	shr.u64 	%rd8988, %rd9879, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd9879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd9879;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 1;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 1;
	mov.b64 	%rd8989, {%r6925, %r6924};
	xor.b64  	%rd8990, %rd8989, %rd8988;
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 8;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 8;
	mov.b64 	%rd8991, {%r6927, %r6926};
	xor.b64  	%rd8992, %rd8990, %rd8991;
	add.s64 	%rd8993, %rd9878, %rd9868;
	add.s64 	%rd8994, %rd8993, %rd8987;
	add.s64 	%rd9878, %rd8994, %rd8992;
	shr.u64 	%rd8995, %rd9862, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6928,%dummy}, %rd9862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd9862;
	}
	shf.r.wrap.b32 	%r6930, %r6929, %r6928, 19;
	shf.r.wrap.b32 	%r6931, %r6928, %r6929, 19;
	mov.b64 	%rd8996, {%r6931, %r6930};
	xor.b64  	%rd8997, %rd8996, %rd8995;
	shf.l.wrap.b32 	%r6932, %r6928, %r6929, 3;
	shf.l.wrap.b32 	%r6933, %r6929, %r6928, 3;
	mov.b64 	%rd8998, {%r6933, %r6932};
	xor.b64  	%rd8999, %rd8997, %rd8998;
	shr.u64 	%rd9000, %rd9880, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6935}, %rd9880;
	}
	shf.r.wrap.b32 	%r6936, %r6935, %r6934, 1;
	shf.r.wrap.b32 	%r6937, %r6934, %r6935, 1;
	mov.b64 	%rd9001, {%r6937, %r6936};
	xor.b64  	%rd9002, %rd9001, %rd9000;
	shf.r.wrap.b32 	%r6938, %r6935, %r6934, 8;
	shf.r.wrap.b32 	%r6939, %r6934, %r6935, 8;
	mov.b64 	%rd9003, {%r6939, %r6938};
	xor.b64  	%rd9004, %rd9002, %rd9003;
	add.s64 	%rd9005, %rd9879, %rd9867;
	add.s64 	%rd9006, %rd9005, %rd8999;
	add.s64 	%rd9879, %rd9006, %rd9004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6940,%dummy}, %rd9878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6941}, %rd9878;
	}
	shf.r.wrap.b32 	%r6942, %r6941, %r6940, 19;
	shf.r.wrap.b32 	%r6943, %r6940, %r6941, 19;
	mov.b64 	%rd9007, {%r6943, %r6942};
	shf.l.wrap.b32 	%r6944, %r6940, %r6941, 3;
	shf.l.wrap.b32 	%r6945, %r6941, %r6940, 3;
	mov.b64 	%rd9008, {%r6945, %r6944};
	shr.u64 	%rd9009, %rd9878, 6;
	xor.b64  	%rd9010, %rd9007, %rd9009;
	xor.b64  	%rd9011, %rd9010, %rd9008;
	shr.u64 	%rd9012, %rd9881, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd9881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd9881;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 1;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 1;
	mov.b64 	%rd9013, {%r6949, %r6948};
	xor.b64  	%rd9014, %rd9013, %rd9012;
	shf.r.wrap.b32 	%r6950, %r6947, %r6946, 8;
	shf.r.wrap.b32 	%r6951, %r6946, %r6947, 8;
	mov.b64 	%rd9015, {%r6951, %r6950};
	xor.b64  	%rd9016, %rd9014, %rd9015;
	add.s64 	%rd9017, %rd9880, %rd9866;
	add.s64 	%rd9018, %rd9017, %rd9011;
	add.s64 	%rd9880, %rd9018, %rd9016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6952,%dummy}, %rd9879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd9879;
	}
	shf.r.wrap.b32 	%r6954, %r6953, %r6952, 19;
	shf.r.wrap.b32 	%r6955, %r6952, %r6953, 19;
	mov.b64 	%rd9019, {%r6955, %r6954};
	shf.l.wrap.b32 	%r6956, %r6952, %r6953, 3;
	shf.l.wrap.b32 	%r6957, %r6953, %r6952, 3;
	mov.b64 	%rd9020, {%r6957, %r6956};
	shr.u64 	%rd9021, %rd9879, 6;
	xor.b64  	%rd9022, %rd9019, %rd9021;
	xor.b64  	%rd9023, %rd9022, %rd9020;
	shr.u64 	%rd9024, %rd9882, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd9882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6959}, %rd9882;
	}
	shf.r.wrap.b32 	%r6960, %r6959, %r6958, 1;
	shf.r.wrap.b32 	%r6961, %r6958, %r6959, 1;
	mov.b64 	%rd9025, {%r6961, %r6960};
	xor.b64  	%rd9026, %rd9025, %rd9024;
	shf.r.wrap.b32 	%r6962, %r6959, %r6958, 8;
	shf.r.wrap.b32 	%r6963, %r6958, %r6959, 8;
	mov.b64 	%rd9027, {%r6963, %r6962};
	xor.b64  	%rd9028, %rd9026, %rd9027;
	add.s64 	%rd9029, %rd9881, %rd9865;
	add.s64 	%rd9030, %rd9029, %rd9023;
	add.s64 	%rd9881, %rd9030, %rd9028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd9880;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 19;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 19;
	mov.b64 	%rd9031, {%r6967, %r6966};
	shf.l.wrap.b32 	%r6968, %r6964, %r6965, 3;
	shf.l.wrap.b32 	%r6969, %r6965, %r6964, 3;
	mov.b64 	%rd9032, {%r6969, %r6968};
	shr.u64 	%rd9033, %rd9880, 6;
	xor.b64  	%rd9034, %rd9031, %rd9033;
	xor.b64  	%rd9035, %rd9034, %rd9032;
	shr.u64 	%rd9036, %rd9883, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd9883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd9883;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 1;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 1;
	mov.b64 	%rd9037, {%r6973, %r6972};
	xor.b64  	%rd9038, %rd9037, %rd9036;
	shf.r.wrap.b32 	%r6974, %r6971, %r6970, 8;
	shf.r.wrap.b32 	%r6975, %r6970, %r6971, 8;
	mov.b64 	%rd9039, {%r6975, %r6974};
	xor.b64  	%rd9040, %rd9038, %rd9039;
	add.s64 	%rd9041, %rd9882, %rd9864;
	add.s64 	%rd9042, %rd9041, %rd9035;
	add.s64 	%rd9882, %rd9042, %rd9040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6976,%dummy}, %rd9881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd9881;
	}
	shf.r.wrap.b32 	%r6978, %r6977, %r6976, 19;
	shf.r.wrap.b32 	%r6979, %r6976, %r6977, 19;
	mov.b64 	%rd9043, {%r6979, %r6978};
	shf.l.wrap.b32 	%r6980, %r6976, %r6977, 3;
	shf.l.wrap.b32 	%r6981, %r6977, %r6976, 3;
	mov.b64 	%rd9044, {%r6981, %r6980};
	shr.u64 	%rd9045, %rd9881, 6;
	xor.b64  	%rd9046, %rd9043, %rd9045;
	xor.b64  	%rd9047, %rd9046, %rd9044;
	shr.u64 	%rd9048, %rd9884, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd9884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd9884;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 1;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 1;
	mov.b64 	%rd9049, {%r6985, %r6984};
	xor.b64  	%rd9050, %rd9049, %rd9048;
	shf.r.wrap.b32 	%r6986, %r6983, %r6982, 8;
	shf.r.wrap.b32 	%r6987, %r6982, %r6983, 8;
	mov.b64 	%rd9051, {%r6987, %r6986};
	xor.b64  	%rd9052, %rd9050, %rd9051;
	add.s64 	%rd9053, %rd9883, %rd9863;
	add.s64 	%rd9054, %rd9053, %rd9047;
	add.s64 	%rd9883, %rd9054, %rd9052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6988,%dummy}, %rd9882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd9882;
	}
	shf.r.wrap.b32 	%r6990, %r6989, %r6988, 19;
	shf.r.wrap.b32 	%r6991, %r6988, %r6989, 19;
	mov.b64 	%rd9055, {%r6991, %r6990};
	shf.l.wrap.b32 	%r6992, %r6988, %r6989, 3;
	shf.l.wrap.b32 	%r6993, %r6989, %r6988, 3;
	mov.b64 	%rd9056, {%r6993, %r6992};
	shr.u64 	%rd9057, %rd9882, 6;
	xor.b64  	%rd9058, %rd9055, %rd9057;
	xor.b64  	%rd9059, %rd9058, %rd9056;
	shr.u64 	%rd9060, %rd9885, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd9885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd9885;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 1;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 1;
	mov.b64 	%rd9061, {%r6997, %r6996};
	xor.b64  	%rd9062, %rd9061, %rd9060;
	shf.r.wrap.b32 	%r6998, %r6995, %r6994, 8;
	shf.r.wrap.b32 	%r6999, %r6994, %r6995, 8;
	mov.b64 	%rd9063, {%r6999, %r6998};
	xor.b64  	%rd9064, %rd9062, %rd9063;
	add.s64 	%rd9065, %rd9884, %rd9862;
	add.s64 	%rd9066, %rd9065, %rd9059;
	add.s64 	%rd9884, %rd9066, %rd9064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7000,%dummy}, %rd9883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7001}, %rd9883;
	}
	shf.r.wrap.b32 	%r7002, %r7001, %r7000, 19;
	shf.r.wrap.b32 	%r7003, %r7000, %r7001, 19;
	mov.b64 	%rd9067, {%r7003, %r7002};
	shf.l.wrap.b32 	%r7004, %r7000, %r7001, 3;
	shf.l.wrap.b32 	%r7005, %r7001, %r7000, 3;
	mov.b64 	%rd9068, {%r7005, %r7004};
	shr.u64 	%rd9069, %rd9883, 6;
	xor.b64  	%rd9070, %rd9067, %rd9069;
	xor.b64  	%rd9071, %rd9070, %rd9068;
	shr.u64 	%rd9072, %rd9869, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd9869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7007}, %rd9869;
	}
	shf.r.wrap.b32 	%r7008, %r7007, %r7006, 1;
	shf.r.wrap.b32 	%r7009, %r7006, %r7007, 1;
	mov.b64 	%rd9073, {%r7009, %r7008};
	xor.b64  	%rd9074, %rd9073, %rd9072;
	shf.r.wrap.b32 	%r7010, %r7007, %r7006, 8;
	shf.r.wrap.b32 	%r7011, %r7006, %r7007, 8;
	mov.b64 	%rd9075, {%r7011, %r7010};
	xor.b64  	%rd9076, %rd9074, %rd9075;
	add.s64 	%rd9077, %rd9878, %rd9885;
	add.s64 	%rd9078, %rd9077, %rd9071;
	add.s64 	%rd9885, %rd9078, %rd9076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7012,%dummy}, %rd9884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7013}, %rd9884;
	}
	shf.r.wrap.b32 	%r7014, %r7013, %r7012, 19;
	shf.r.wrap.b32 	%r7015, %r7012, %r7013, 19;
	mov.b64 	%rd9079, {%r7015, %r7014};
	shf.l.wrap.b32 	%r7016, %r7012, %r7013, 3;
	shf.l.wrap.b32 	%r7017, %r7013, %r7012, 3;
	mov.b64 	%rd9080, {%r7017, %r7016};
	shr.u64 	%rd9081, %rd9884, 6;
	xor.b64  	%rd9082, %rd9079, %rd9081;
	xor.b64  	%rd9083, %rd9082, %rd9080;
	shr.u64 	%rd9084, %rd9868, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd9868;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 1;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 1;
	mov.b64 	%rd9085, {%r7021, %r7020};
	xor.b64  	%rd9086, %rd9085, %rd9084;
	shf.r.wrap.b32 	%r7022, %r7019, %r7018, 8;
	shf.r.wrap.b32 	%r7023, %r7018, %r7019, 8;
	mov.b64 	%rd9087, {%r7023, %r7022};
	xor.b64  	%rd9088, %rd9086, %rd9087;
	add.s64 	%rd9089, %rd9879, %rd9869;
	add.s64 	%rd9090, %rd9089, %rd9083;
	add.s64 	%rd9869, %rd9090, %rd9088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7024,%dummy}, %rd9885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7025}, %rd9885;
	}
	shf.r.wrap.b32 	%r7026, %r7025, %r7024, 19;
	shf.r.wrap.b32 	%r7027, %r7024, %r7025, 19;
	mov.b64 	%rd9091, {%r7027, %r7026};
	shf.l.wrap.b32 	%r7028, %r7024, %r7025, 3;
	shf.l.wrap.b32 	%r7029, %r7025, %r7024, 3;
	mov.b64 	%rd9092, {%r7029, %r7028};
	shr.u64 	%rd9093, %rd9885, 6;
	xor.b64  	%rd9094, %rd9091, %rd9093;
	xor.b64  	%rd9095, %rd9094, %rd9092;
	shr.u64 	%rd9096, %rd9867, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7030,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7031}, %rd9867;
	}
	shf.r.wrap.b32 	%r7032, %r7031, %r7030, 1;
	shf.r.wrap.b32 	%r7033, %r7030, %r7031, 1;
	mov.b64 	%rd9097, {%r7033, %r7032};
	xor.b64  	%rd9098, %rd9097, %rd9096;
	shf.r.wrap.b32 	%r7034, %r7031, %r7030, 8;
	shf.r.wrap.b32 	%r7035, %r7030, %r7031, 8;
	mov.b64 	%rd9099, {%r7035, %r7034};
	xor.b64  	%rd9100, %rd9098, %rd9099;
	add.s64 	%rd9101, %rd9880, %rd9868;
	add.s64 	%rd9102, %rd9101, %rd9095;
	add.s64 	%rd9868, %rd9102, %rd9100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7036,%dummy}, %rd9869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd9869;
	}
	shf.r.wrap.b32 	%r7038, %r7037, %r7036, 19;
	shf.r.wrap.b32 	%r7039, %r7036, %r7037, 19;
	mov.b64 	%rd9103, {%r7039, %r7038};
	shf.l.wrap.b32 	%r7040, %r7036, %r7037, 3;
	shf.l.wrap.b32 	%r7041, %r7037, %r7036, 3;
	mov.b64 	%rd9104, {%r7041, %r7040};
	shr.u64 	%rd9105, %rd9869, 6;
	xor.b64  	%rd9106, %rd9103, %rd9105;
	xor.b64  	%rd9107, %rd9106, %rd9104;
	shr.u64 	%rd9108, %rd9866, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7043}, %rd9866;
	}
	shf.r.wrap.b32 	%r7044, %r7043, %r7042, 1;
	shf.r.wrap.b32 	%r7045, %r7042, %r7043, 1;
	mov.b64 	%rd9109, {%r7045, %r7044};
	xor.b64  	%rd9110, %rd9109, %rd9108;
	shf.r.wrap.b32 	%r7046, %r7043, %r7042, 8;
	shf.r.wrap.b32 	%r7047, %r7042, %r7043, 8;
	mov.b64 	%rd9111, {%r7047, %r7046};
	xor.b64  	%rd9112, %rd9110, %rd9111;
	add.s64 	%rd9113, %rd9881, %rd9867;
	add.s64 	%rd9114, %rd9113, %rd9107;
	add.s64 	%rd9867, %rd9114, %rd9112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd9868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd9868;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 19;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 19;
	mov.b64 	%rd9115, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 3;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 3;
	mov.b64 	%rd9116, {%r7053, %r7052};
	shr.u64 	%rd9117, %rd9868, 6;
	xor.b64  	%rd9118, %rd9115, %rd9117;
	xor.b64  	%rd9119, %rd9118, %rd9116;
	shr.u64 	%rd9120, %rd9865, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd9865;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 1;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 1;
	mov.b64 	%rd9121, {%r7057, %r7056};
	xor.b64  	%rd9122, %rd9121, %rd9120;
	shf.r.wrap.b32 	%r7058, %r7055, %r7054, 8;
	shf.r.wrap.b32 	%r7059, %r7054, %r7055, 8;
	mov.b64 	%rd9123, {%r7059, %r7058};
	xor.b64  	%rd9124, %rd9122, %rd9123;
	add.s64 	%rd9125, %rd9882, %rd9866;
	add.s64 	%rd9126, %rd9125, %rd9119;
	add.s64 	%rd9866, %rd9126, %rd9124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7060,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7061}, %rd9867;
	}
	shf.r.wrap.b32 	%r7062, %r7061, %r7060, 19;
	shf.r.wrap.b32 	%r7063, %r7060, %r7061, 19;
	mov.b64 	%rd9127, {%r7063, %r7062};
	shf.l.wrap.b32 	%r7064, %r7060, %r7061, 3;
	shf.l.wrap.b32 	%r7065, %r7061, %r7060, 3;
	mov.b64 	%rd9128, {%r7065, %r7064};
	shr.u64 	%rd9129, %rd9867, 6;
	xor.b64  	%rd9130, %rd9127, %rd9129;
	xor.b64  	%rd9131, %rd9130, %rd9128;
	shr.u64 	%rd9132, %rd9864, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7066,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7067}, %rd9864;
	}
	shf.r.wrap.b32 	%r7068, %r7067, %r7066, 1;
	shf.r.wrap.b32 	%r7069, %r7066, %r7067, 1;
	mov.b64 	%rd9133, {%r7069, %r7068};
	xor.b64  	%rd9134, %rd9133, %rd9132;
	shf.r.wrap.b32 	%r7070, %r7067, %r7066, 8;
	shf.r.wrap.b32 	%r7071, %r7066, %r7067, 8;
	mov.b64 	%rd9135, {%r7071, %r7070};
	xor.b64  	%rd9136, %rd9134, %rd9135;
	add.s64 	%rd9137, %rd9883, %rd9865;
	add.s64 	%rd9138, %rd9137, %rd9131;
	add.s64 	%rd9865, %rd9138, %rd9136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7072,%dummy}, %rd9866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7073}, %rd9866;
	}
	shf.r.wrap.b32 	%r7074, %r7073, %r7072, 19;
	shf.r.wrap.b32 	%r7075, %r7072, %r7073, 19;
	mov.b64 	%rd9139, {%r7075, %r7074};
	shf.l.wrap.b32 	%r7076, %r7072, %r7073, 3;
	shf.l.wrap.b32 	%r7077, %r7073, %r7072, 3;
	mov.b64 	%rd9140, {%r7077, %r7076};
	shr.u64 	%rd9141, %rd9866, 6;
	xor.b64  	%rd9142, %rd9139, %rd9141;
	xor.b64  	%rd9143, %rd9142, %rd9140;
	shr.u64 	%rd9144, %rd9863, 7;
	shf.r.wrap.b32 	%r7078, %r6917, %r6916, 1;
	shf.r.wrap.b32 	%r7079, %r6916, %r6917, 1;
	mov.b64 	%rd9145, {%r7079, %r7078};
	xor.b64  	%rd9146, %rd9145, %rd9144;
	shf.r.wrap.b32 	%r7080, %r6917, %r6916, 8;
	shf.r.wrap.b32 	%r7081, %r6916, %r6917, 8;
	mov.b64 	%rd9147, {%r7081, %r7080};
	xor.b64  	%rd9148, %rd9146, %rd9147;
	add.s64 	%rd9149, %rd9884, %rd9864;
	add.s64 	%rd9150, %rd9149, %rd9143;
	add.s64 	%rd9864, %rd9150, %rd9148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7082,%dummy}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7083}, %rd9865;
	}
	shf.r.wrap.b32 	%r7084, %r7083, %r7082, 19;
	shf.r.wrap.b32 	%r7085, %r7082, %r7083, 19;
	mov.b64 	%rd9151, {%r7085, %r7084};
	shf.l.wrap.b32 	%r7086, %r7082, %r7083, 3;
	shf.l.wrap.b32 	%r7087, %r7083, %r7082, 3;
	mov.b64 	%rd9152, {%r7087, %r7086};
	shr.u64 	%rd9153, %rd9865, 6;
	xor.b64  	%rd9154, %rd9151, %rd9153;
	xor.b64  	%rd9155, %rd9154, %rd9152;
	shr.u64 	%rd9156, %rd9862, 7;
	shf.r.wrap.b32 	%r7088, %r6929, %r6928, 1;
	shf.r.wrap.b32 	%r7089, %r6928, %r6929, 1;
	mov.b64 	%rd9157, {%r7089, %r7088};
	xor.b64  	%rd9158, %rd9157, %rd9156;
	shf.r.wrap.b32 	%r7090, %r6929, %r6928, 8;
	shf.r.wrap.b32 	%r7091, %r6928, %r6929, 8;
	mov.b64 	%rd9159, {%r7091, %r7090};
	xor.b64  	%rd9160, %rd9158, %rd9159;
	add.s64 	%rd9161, %rd9885, %rd9863;
	add.s64 	%rd9162, %rd9161, %rd9155;
	add.s64 	%rd9863, %rd9162, %rd9160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7092,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7093}, %rd9864;
	}
	shf.r.wrap.b32 	%r7094, %r7093, %r7092, 19;
	shf.r.wrap.b32 	%r7095, %r7092, %r7093, 19;
	mov.b64 	%rd9163, {%r7095, %r7094};
	shf.l.wrap.b32 	%r7096, %r7092, %r7093, 3;
	shf.l.wrap.b32 	%r7097, %r7093, %r7092, 3;
	mov.b64 	%rd9164, {%r7097, %r7096};
	shr.u64 	%rd9165, %rd9864, 6;
	xor.b64  	%rd9166, %rd9163, %rd9165;
	xor.b64  	%rd9167, %rd9166, %rd9164;
	shf.r.wrap.b32 	%r7098, %r6941, %r6940, 1;
	shf.r.wrap.b32 	%r7099, %r6940, %r6941, 1;
	mov.b64 	%rd9168, {%r7099, %r7098};
	shf.r.wrap.b32 	%r7100, %r6941, %r6940, 8;
	shf.r.wrap.b32 	%r7101, %r6940, %r6941, 8;
	mov.b64 	%rd9169, {%r7101, %r7100};
	shr.u64 	%rd9170, %rd9878, 7;
	xor.b64  	%rd9171, %rd9168, %rd9170;
	xor.b64  	%rd9172, %rd9171, %rd9169;
	add.s64 	%rd9173, %rd9869, %rd9862;
	add.s64 	%rd9174, %rd9173, %rd9167;
	add.s64 	%rd9862, %rd9174, %rd9172;
	mul.wide.s32 	%rd9175, %r7535, 8;
	mov.u64 	%rd9176, k_sha512;
	add.s64 	%rd9177, %rd9176, %rd9175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7102,%dummy}, %rd9874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7103}, %rd9874;
	}
	shf.r.wrap.b32 	%r7104, %r7103, %r7102, 18;
	shf.r.wrap.b32 	%r7105, %r7102, %r7103, 18;
	mov.b64 	%rd9178, {%r7105, %r7104};
	shf.r.wrap.b32 	%r7106, %r7103, %r7102, 14;
	shf.r.wrap.b32 	%r7107, %r7102, %r7103, 14;
	mov.b64 	%rd9179, {%r7107, %r7106};
	xor.b64  	%rd9180, %rd9178, %rd9179;
	shf.l.wrap.b32 	%r7108, %r7102, %r7103, 23;
	shf.l.wrap.b32 	%r7109, %r7103, %r7102, 23;
	mov.b64 	%rd9181, {%r7109, %r7108};
	xor.b64  	%rd9182, %rd9180, %rd9181;
	xor.b64  	%rd9183, %rd9876, %rd9875;
	and.b64  	%rd9184, %rd9183, %rd9874;
	xor.b64  	%rd9185, %rd9184, %rd9876;
	add.s64 	%rd9186, %rd9185, %rd9877;
	add.s64 	%rd9187, %rd9186, %rd9878;
	ld.const.u64 	%rd9188, [%rd9177];
	add.s64 	%rd9189, %rd9187, %rd9188;
	add.s64 	%rd9190, %rd9189, %rd9182;
	add.s64 	%rd9191, %rd9190, %rd9873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7110}, %rd9870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7111,%dummy}, %rd9870;
	}
	shf.l.wrap.b32 	%r7112, %r7111, %r7110, 30;
	shf.l.wrap.b32 	%r7113, %r7110, %r7111, 30;
	mov.b64 	%rd9192, {%r7113, %r7112};
	shf.r.wrap.b32 	%r7114, %r7110, %r7111, 28;
	shf.r.wrap.b32 	%r7115, %r7111, %r7110, 28;
	mov.b64 	%rd9193, {%r7115, %r7114};
	xor.b64  	%rd9194, %rd9192, %rd9193;
	shf.l.wrap.b32 	%r7116, %r7111, %r7110, 25;
	shf.l.wrap.b32 	%r7117, %r7110, %r7111, 25;
	mov.b64 	%rd9195, {%r7117, %r7116};
	xor.b64  	%rd9196, %rd9194, %rd9195;
	xor.b64  	%rd9197, %rd9871, %rd9870;
	and.b64  	%rd9198, %rd9197, %rd9872;
	and.b64  	%rd9199, %rd9871, %rd9870;
	or.b64  	%rd9200, %rd9198, %rd9199;
	add.s64 	%rd9201, %rd9190, %rd9200;
	add.s64 	%rd9202, %rd9201, %rd9196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd9191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd9191;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 14;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 14;
	mov.b64 	%rd9203, {%r7121, %r7120};
	shf.r.wrap.b32 	%r7122, %r7119, %r7118, 18;
	shf.r.wrap.b32 	%r7123, %r7118, %r7119, 18;
	mov.b64 	%rd9204, {%r7123, %r7122};
	xor.b64  	%rd9205, %rd9204, %rd9203;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 23;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 23;
	mov.b64 	%rd9206, {%r7125, %r7124};
	xor.b64  	%rd9207, %rd9205, %rd9206;
	xor.b64  	%rd9208, %rd9875, %rd9874;
	and.b64  	%rd9209, %rd9191, %rd9208;
	xor.b64  	%rd9210, %rd9209, %rd9875;
	add.s64 	%rd9211, %rd9879, %rd9876;
	ld.const.u64 	%rd9212, [%rd9177+8];
	add.s64 	%rd9213, %rd9211, %rd9212;
	add.s64 	%rd9214, %rd9213, %rd9210;
	add.s64 	%rd9215, %rd9214, %rd9207;
	add.s64 	%rd9216, %rd9215, %rd9872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd9202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7127}, %rd9202;
	}
	shf.r.wrap.b32 	%r7128, %r7127, %r7126, 28;
	shf.r.wrap.b32 	%r7129, %r7126, %r7127, 28;
	mov.b64 	%rd9217, {%r7129, %r7128};
	shf.l.wrap.b32 	%r7130, %r7126, %r7127, 30;
	shf.l.wrap.b32 	%r7131, %r7127, %r7126, 30;
	mov.b64 	%rd9218, {%r7131, %r7130};
	xor.b64  	%rd9219, %rd9218, %rd9217;
	shf.l.wrap.b32 	%r7132, %r7126, %r7127, 25;
	shf.l.wrap.b32 	%r7133, %r7127, %r7126, 25;
	mov.b64 	%rd9220, {%r7133, %r7132};
	xor.b64  	%rd9221, %rd9219, %rd9220;
	and.b64  	%rd9222, %rd9202, %rd9870;
	xor.b64  	%rd9223, %rd9202, %rd9870;
	and.b64  	%rd9224, %rd9223, %rd9871;
	or.b64  	%rd9225, %rd9224, %rd9222;
	add.s64 	%rd9226, %rd9215, %rd9225;
	add.s64 	%rd9227, %rd9226, %rd9221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7134,%dummy}, %rd9216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7135}, %rd9216;
	}
	shf.r.wrap.b32 	%r7136, %r7135, %r7134, 14;
	shf.r.wrap.b32 	%r7137, %r7134, %r7135, 14;
	mov.b64 	%rd9228, {%r7137, %r7136};
	shf.r.wrap.b32 	%r7138, %r7135, %r7134, 18;
	shf.r.wrap.b32 	%r7139, %r7134, %r7135, 18;
	mov.b64 	%rd9229, {%r7139, %r7138};
	xor.b64  	%rd9230, %rd9229, %rd9228;
	shf.l.wrap.b32 	%r7140, %r7134, %r7135, 23;
	shf.l.wrap.b32 	%r7141, %r7135, %r7134, 23;
	mov.b64 	%rd9231, {%r7141, %r7140};
	xor.b64  	%rd9232, %rd9230, %rd9231;
	xor.b64  	%rd9233, %rd9191, %rd9874;
	and.b64  	%rd9234, %rd9216, %rd9233;
	xor.b64  	%rd9235, %rd9234, %rd9874;
	add.s64 	%rd9236, %rd9880, %rd9875;
	ld.const.u64 	%rd9237, [%rd9177+16];
	add.s64 	%rd9238, %rd9236, %rd9237;
	add.s64 	%rd9239, %rd9238, %rd9235;
	add.s64 	%rd9240, %rd9239, %rd9232;
	add.s64 	%rd9241, %rd9240, %rd9871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7142,%dummy}, %rd9227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7143}, %rd9227;
	}
	shf.r.wrap.b32 	%r7144, %r7143, %r7142, 28;
	shf.r.wrap.b32 	%r7145, %r7142, %r7143, 28;
	mov.b64 	%rd9242, {%r7145, %r7144};
	shf.l.wrap.b32 	%r7146, %r7142, %r7143, 30;
	shf.l.wrap.b32 	%r7147, %r7143, %r7142, 30;
	mov.b64 	%rd9243, {%r7147, %r7146};
	xor.b64  	%rd9244, %rd9243, %rd9242;
	shf.l.wrap.b32 	%r7148, %r7142, %r7143, 25;
	shf.l.wrap.b32 	%r7149, %r7143, %r7142, 25;
	mov.b64 	%rd9245, {%r7149, %r7148};
	xor.b64  	%rd9246, %rd9244, %rd9245;
	and.b64  	%rd9247, %rd9227, %rd9202;
	xor.b64  	%rd9248, %rd9227, %rd9202;
	and.b64  	%rd9249, %rd9248, %rd9870;
	or.b64  	%rd9250, %rd9249, %rd9247;
	add.s64 	%rd9251, %rd9240, %rd9250;
	add.s64 	%rd9252, %rd9251, %rd9246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7150,%dummy}, %rd9241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7151}, %rd9241;
	}
	shf.r.wrap.b32 	%r7152, %r7151, %r7150, 14;
	shf.r.wrap.b32 	%r7153, %r7150, %r7151, 14;
	mov.b64 	%rd9253, {%r7153, %r7152};
	shf.r.wrap.b32 	%r7154, %r7151, %r7150, 18;
	shf.r.wrap.b32 	%r7155, %r7150, %r7151, 18;
	mov.b64 	%rd9254, {%r7155, %r7154};
	xor.b64  	%rd9255, %rd9254, %rd9253;
	shf.l.wrap.b32 	%r7156, %r7150, %r7151, 23;
	shf.l.wrap.b32 	%r7157, %r7151, %r7150, 23;
	mov.b64 	%rd9256, {%r7157, %r7156};
	xor.b64  	%rd9257, %rd9255, %rd9256;
	xor.b64  	%rd9258, %rd9216, %rd9191;
	and.b64  	%rd9259, %rd9241, %rd9258;
	xor.b64  	%rd9260, %rd9259, %rd9191;
	add.s64 	%rd9261, %rd9881, %rd9874;
	ld.const.u64 	%rd9262, [%rd9177+24];
	add.s64 	%rd9263, %rd9261, %rd9262;
	add.s64 	%rd9264, %rd9263, %rd9260;
	add.s64 	%rd9265, %rd9264, %rd9257;
	add.s64 	%rd9266, %rd9265, %rd9870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd9252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd9252;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 28;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 28;
	mov.b64 	%rd9267, {%r7161, %r7160};
	shf.l.wrap.b32 	%r7162, %r7158, %r7159, 30;
	shf.l.wrap.b32 	%r7163, %r7159, %r7158, 30;
	mov.b64 	%rd9268, {%r7163, %r7162};
	xor.b64  	%rd9269, %rd9268, %rd9267;
	shf.l.wrap.b32 	%r7164, %r7158, %r7159, 25;
	shf.l.wrap.b32 	%r7165, %r7159, %r7158, 25;
	mov.b64 	%rd9270, {%r7165, %r7164};
	xor.b64  	%rd9271, %rd9269, %rd9270;
	and.b64  	%rd9272, %rd9252, %rd9227;
	xor.b64  	%rd9273, %rd9252, %rd9227;
	and.b64  	%rd9274, %rd9273, %rd9202;
	or.b64  	%rd9275, %rd9274, %rd9272;
	add.s64 	%rd9276, %rd9265, %rd9275;
	add.s64 	%rd9277, %rd9276, %rd9271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7166,%dummy}, %rd9266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7167}, %rd9266;
	}
	shf.r.wrap.b32 	%r7168, %r7167, %r7166, 14;
	shf.r.wrap.b32 	%r7169, %r7166, %r7167, 14;
	mov.b64 	%rd9278, {%r7169, %r7168};
	shf.r.wrap.b32 	%r7170, %r7167, %r7166, 18;
	shf.r.wrap.b32 	%r7171, %r7166, %r7167, 18;
	mov.b64 	%rd9279, {%r7171, %r7170};
	xor.b64  	%rd9280, %rd9279, %rd9278;
	shf.l.wrap.b32 	%r7172, %r7166, %r7167, 23;
	shf.l.wrap.b32 	%r7173, %r7167, %r7166, 23;
	mov.b64 	%rd9281, {%r7173, %r7172};
	xor.b64  	%rd9282, %rd9280, %rd9281;
	xor.b64  	%rd9283, %rd9241, %rd9216;
	and.b64  	%rd9284, %rd9266, %rd9283;
	xor.b64  	%rd9285, %rd9284, %rd9216;
	add.s64 	%rd9286, %rd9191, %rd9882;
	ld.const.u64 	%rd9287, [%rd9177+32];
	add.s64 	%rd9288, %rd9286, %rd9287;
	add.s64 	%rd9289, %rd9288, %rd9285;
	add.s64 	%rd9290, %rd9289, %rd9282;
	add.s64 	%rd9291, %rd9290, %rd9202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7174,%dummy}, %rd9277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7175}, %rd9277;
	}
	shf.r.wrap.b32 	%r7176, %r7175, %r7174, 28;
	shf.r.wrap.b32 	%r7177, %r7174, %r7175, 28;
	mov.b64 	%rd9292, {%r7177, %r7176};
	shf.l.wrap.b32 	%r7178, %r7174, %r7175, 30;
	shf.l.wrap.b32 	%r7179, %r7175, %r7174, 30;
	mov.b64 	%rd9293, {%r7179, %r7178};
	xor.b64  	%rd9294, %rd9293, %rd9292;
	shf.l.wrap.b32 	%r7180, %r7174, %r7175, 25;
	shf.l.wrap.b32 	%r7181, %r7175, %r7174, 25;
	mov.b64 	%rd9295, {%r7181, %r7180};
	xor.b64  	%rd9296, %rd9294, %rd9295;
	and.b64  	%rd9297, %rd9277, %rd9252;
	xor.b64  	%rd9298, %rd9277, %rd9252;
	and.b64  	%rd9299, %rd9298, %rd9227;
	or.b64  	%rd9300, %rd9299, %rd9297;
	add.s64 	%rd9301, %rd9290, %rd9300;
	add.s64 	%rd9302, %rd9301, %rd9296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7182,%dummy}, %rd9291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7183}, %rd9291;
	}
	shf.r.wrap.b32 	%r7184, %r7183, %r7182, 14;
	shf.r.wrap.b32 	%r7185, %r7182, %r7183, 14;
	mov.b64 	%rd9303, {%r7185, %r7184};
	shf.r.wrap.b32 	%r7186, %r7183, %r7182, 18;
	shf.r.wrap.b32 	%r7187, %r7182, %r7183, 18;
	mov.b64 	%rd9304, {%r7187, %r7186};
	xor.b64  	%rd9305, %rd9304, %rd9303;
	shf.l.wrap.b32 	%r7188, %r7182, %r7183, 23;
	shf.l.wrap.b32 	%r7189, %r7183, %r7182, 23;
	mov.b64 	%rd9306, {%r7189, %r7188};
	xor.b64  	%rd9307, %rd9305, %rd9306;
	xor.b64  	%rd9308, %rd9266, %rd9241;
	and.b64  	%rd9309, %rd9291, %rd9308;
	xor.b64  	%rd9310, %rd9309, %rd9241;
	add.s64 	%rd9311, %rd9216, %rd9883;
	ld.const.u64 	%rd9312, [%rd9177+40];
	add.s64 	%rd9313, %rd9311, %rd9312;
	add.s64 	%rd9314, %rd9313, %rd9310;
	add.s64 	%rd9315, %rd9314, %rd9307;
	add.s64 	%rd9316, %rd9315, %rd9227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7190,%dummy}, %rd9302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7191}, %rd9302;
	}
	shf.r.wrap.b32 	%r7192, %r7191, %r7190, 28;
	shf.r.wrap.b32 	%r7193, %r7190, %r7191, 28;
	mov.b64 	%rd9317, {%r7193, %r7192};
	shf.l.wrap.b32 	%r7194, %r7190, %r7191, 30;
	shf.l.wrap.b32 	%r7195, %r7191, %r7190, 30;
	mov.b64 	%rd9318, {%r7195, %r7194};
	xor.b64  	%rd9319, %rd9318, %rd9317;
	shf.l.wrap.b32 	%r7196, %r7190, %r7191, 25;
	shf.l.wrap.b32 	%r7197, %r7191, %r7190, 25;
	mov.b64 	%rd9320, {%r7197, %r7196};
	xor.b64  	%rd9321, %rd9319, %rd9320;
	and.b64  	%rd9322, %rd9302, %rd9277;
	xor.b64  	%rd9323, %rd9302, %rd9277;
	and.b64  	%rd9324, %rd9323, %rd9252;
	or.b64  	%rd9325, %rd9324, %rd9322;
	add.s64 	%rd9326, %rd9315, %rd9325;
	add.s64 	%rd9327, %rd9326, %rd9321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7198,%dummy}, %rd9316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7199}, %rd9316;
	}
	shf.r.wrap.b32 	%r7200, %r7199, %r7198, 14;
	shf.r.wrap.b32 	%r7201, %r7198, %r7199, 14;
	mov.b64 	%rd9328, {%r7201, %r7200};
	shf.r.wrap.b32 	%r7202, %r7199, %r7198, 18;
	shf.r.wrap.b32 	%r7203, %r7198, %r7199, 18;
	mov.b64 	%rd9329, {%r7203, %r7202};
	xor.b64  	%rd9330, %rd9329, %rd9328;
	shf.l.wrap.b32 	%r7204, %r7198, %r7199, 23;
	shf.l.wrap.b32 	%r7205, %r7199, %r7198, 23;
	mov.b64 	%rd9331, {%r7205, %r7204};
	xor.b64  	%rd9332, %rd9330, %rd9331;
	xor.b64  	%rd9333, %rd9291, %rd9266;
	and.b64  	%rd9334, %rd9316, %rd9333;
	xor.b64  	%rd9335, %rd9334, %rd9266;
	add.s64 	%rd9336, %rd9241, %rd9884;
	ld.const.u64 	%rd9337, [%rd9177+48];
	add.s64 	%rd9338, %rd9336, %rd9337;
	add.s64 	%rd9339, %rd9338, %rd9335;
	add.s64 	%rd9340, %rd9339, %rd9332;
	add.s64 	%rd9341, %rd9340, %rd9252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7206,%dummy}, %rd9327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7207}, %rd9327;
	}
	shf.r.wrap.b32 	%r7208, %r7207, %r7206, 28;
	shf.r.wrap.b32 	%r7209, %r7206, %r7207, 28;
	mov.b64 	%rd9342, {%r7209, %r7208};
	shf.l.wrap.b32 	%r7210, %r7206, %r7207, 30;
	shf.l.wrap.b32 	%r7211, %r7207, %r7206, 30;
	mov.b64 	%rd9343, {%r7211, %r7210};
	xor.b64  	%rd9344, %rd9343, %rd9342;
	shf.l.wrap.b32 	%r7212, %r7206, %r7207, 25;
	shf.l.wrap.b32 	%r7213, %r7207, %r7206, 25;
	mov.b64 	%rd9345, {%r7213, %r7212};
	xor.b64  	%rd9346, %rd9344, %rd9345;
	and.b64  	%rd9347, %rd9327, %rd9302;
	xor.b64  	%rd9348, %rd9327, %rd9302;
	and.b64  	%rd9349, %rd9348, %rd9277;
	or.b64  	%rd9350, %rd9349, %rd9347;
	add.s64 	%rd9351, %rd9340, %rd9350;
	add.s64 	%rd9352, %rd9351, %rd9346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7214,%dummy}, %rd9341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7215}, %rd9341;
	}
	shf.r.wrap.b32 	%r7216, %r7215, %r7214, 14;
	shf.r.wrap.b32 	%r7217, %r7214, %r7215, 14;
	mov.b64 	%rd9353, {%r7217, %r7216};
	shf.r.wrap.b32 	%r7218, %r7215, %r7214, 18;
	shf.r.wrap.b32 	%r7219, %r7214, %r7215, 18;
	mov.b64 	%rd9354, {%r7219, %r7218};
	xor.b64  	%rd9355, %rd9354, %rd9353;
	shf.l.wrap.b32 	%r7220, %r7214, %r7215, 23;
	shf.l.wrap.b32 	%r7221, %r7215, %r7214, 23;
	mov.b64 	%rd9356, {%r7221, %r7220};
	xor.b64  	%rd9357, %rd9355, %rd9356;
	xor.b64  	%rd9358, %rd9316, %rd9291;
	and.b64  	%rd9359, %rd9341, %rd9358;
	xor.b64  	%rd9360, %rd9359, %rd9291;
	add.s64 	%rd9361, %rd9266, %rd9885;
	ld.const.u64 	%rd9362, [%rd9177+56];
	add.s64 	%rd9363, %rd9361, %rd9362;
	add.s64 	%rd9364, %rd9363, %rd9360;
	add.s64 	%rd9365, %rd9364, %rd9357;
	add.s64 	%rd9366, %rd9365, %rd9277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7222,%dummy}, %rd9352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7223}, %rd9352;
	}
	shf.r.wrap.b32 	%r7224, %r7223, %r7222, 28;
	shf.r.wrap.b32 	%r7225, %r7222, %r7223, 28;
	mov.b64 	%rd9367, {%r7225, %r7224};
	shf.l.wrap.b32 	%r7226, %r7222, %r7223, 30;
	shf.l.wrap.b32 	%r7227, %r7223, %r7222, 30;
	mov.b64 	%rd9368, {%r7227, %r7226};
	xor.b64  	%rd9369, %rd9368, %rd9367;
	shf.l.wrap.b32 	%r7228, %r7222, %r7223, 25;
	shf.l.wrap.b32 	%r7229, %r7223, %r7222, 25;
	mov.b64 	%rd9370, {%r7229, %r7228};
	xor.b64  	%rd9371, %rd9369, %rd9370;
	and.b64  	%rd9372, %rd9352, %rd9327;
	xor.b64  	%rd9373, %rd9352, %rd9327;
	and.b64  	%rd9374, %rd9373, %rd9302;
	or.b64  	%rd9375, %rd9374, %rd9372;
	add.s64 	%rd9376, %rd9365, %rd9375;
	add.s64 	%rd9377, %rd9376, %rd9371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7230,%dummy}, %rd9366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7231}, %rd9366;
	}
	shf.r.wrap.b32 	%r7232, %r7231, %r7230, 14;
	shf.r.wrap.b32 	%r7233, %r7230, %r7231, 14;
	mov.b64 	%rd9378, {%r7233, %r7232};
	shf.r.wrap.b32 	%r7234, %r7231, %r7230, 18;
	shf.r.wrap.b32 	%r7235, %r7230, %r7231, 18;
	mov.b64 	%rd9379, {%r7235, %r7234};
	xor.b64  	%rd9380, %rd9379, %rd9378;
	shf.l.wrap.b32 	%r7236, %r7230, %r7231, 23;
	shf.l.wrap.b32 	%r7237, %r7231, %r7230, 23;
	mov.b64 	%rd9381, {%r7237, %r7236};
	xor.b64  	%rd9382, %rd9380, %rd9381;
	xor.b64  	%rd9383, %rd9341, %rd9316;
	and.b64  	%rd9384, %rd9366, %rd9383;
	xor.b64  	%rd9385, %rd9384, %rd9316;
	add.s64 	%rd9386, %rd9291, %rd9869;
	ld.const.u64 	%rd9387, [%rd9177+64];
	add.s64 	%rd9388, %rd9386, %rd9387;
	add.s64 	%rd9389, %rd9388, %rd9385;
	add.s64 	%rd9390, %rd9389, %rd9382;
	add.s64 	%rd9391, %rd9390, %rd9302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7238,%dummy}, %rd9377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7239}, %rd9377;
	}
	shf.r.wrap.b32 	%r7240, %r7239, %r7238, 28;
	shf.r.wrap.b32 	%r7241, %r7238, %r7239, 28;
	mov.b64 	%rd9392, {%r7241, %r7240};
	shf.l.wrap.b32 	%r7242, %r7238, %r7239, 30;
	shf.l.wrap.b32 	%r7243, %r7239, %r7238, 30;
	mov.b64 	%rd9393, {%r7243, %r7242};
	xor.b64  	%rd9394, %rd9393, %rd9392;
	shf.l.wrap.b32 	%r7244, %r7238, %r7239, 25;
	shf.l.wrap.b32 	%r7245, %r7239, %r7238, 25;
	mov.b64 	%rd9395, {%r7245, %r7244};
	xor.b64  	%rd9396, %rd9394, %rd9395;
	and.b64  	%rd9397, %rd9377, %rd9352;
	xor.b64  	%rd9398, %rd9377, %rd9352;
	and.b64  	%rd9399, %rd9398, %rd9327;
	or.b64  	%rd9400, %rd9399, %rd9397;
	add.s64 	%rd9401, %rd9390, %rd9400;
	add.s64 	%rd9402, %rd9401, %rd9396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7246,%dummy}, %rd9391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7247}, %rd9391;
	}
	shf.r.wrap.b32 	%r7248, %r7247, %r7246, 14;
	shf.r.wrap.b32 	%r7249, %r7246, %r7247, 14;
	mov.b64 	%rd9403, {%r7249, %r7248};
	shf.r.wrap.b32 	%r7250, %r7247, %r7246, 18;
	shf.r.wrap.b32 	%r7251, %r7246, %r7247, 18;
	mov.b64 	%rd9404, {%r7251, %r7250};
	xor.b64  	%rd9405, %rd9404, %rd9403;
	shf.l.wrap.b32 	%r7252, %r7246, %r7247, 23;
	shf.l.wrap.b32 	%r7253, %r7247, %r7246, 23;
	mov.b64 	%rd9406, {%r7253, %r7252};
	xor.b64  	%rd9407, %rd9405, %rd9406;
	xor.b64  	%rd9408, %rd9366, %rd9341;
	and.b64  	%rd9409, %rd9391, %rd9408;
	xor.b64  	%rd9410, %rd9409, %rd9341;
	add.s64 	%rd9411, %rd9316, %rd9868;
	ld.const.u64 	%rd9412, [%rd9177+72];
	add.s64 	%rd9413, %rd9411, %rd9412;
	add.s64 	%rd9414, %rd9413, %rd9410;
	add.s64 	%rd9415, %rd9414, %rd9407;
	add.s64 	%rd9416, %rd9415, %rd9327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd9402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd9402;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 28;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 28;
	mov.b64 	%rd9417, {%r7257, %r7256};
	shf.l.wrap.b32 	%r7258, %r7254, %r7255, 30;
	shf.l.wrap.b32 	%r7259, %r7255, %r7254, 30;
	mov.b64 	%rd9418, {%r7259, %r7258};
	xor.b64  	%rd9419, %rd9418, %rd9417;
	shf.l.wrap.b32 	%r7260, %r7254, %r7255, 25;
	shf.l.wrap.b32 	%r7261, %r7255, %r7254, 25;
	mov.b64 	%rd9420, {%r7261, %r7260};
	xor.b64  	%rd9421, %rd9419, %rd9420;
	and.b64  	%rd9422, %rd9402, %rd9377;
	xor.b64  	%rd9423, %rd9402, %rd9377;
	and.b64  	%rd9424, %rd9423, %rd9352;
	or.b64  	%rd9425, %rd9424, %rd9422;
	add.s64 	%rd9426, %rd9415, %rd9425;
	add.s64 	%rd9427, %rd9426, %rd9421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7262,%dummy}, %rd9416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7263}, %rd9416;
	}
	shf.r.wrap.b32 	%r7264, %r7263, %r7262, 14;
	shf.r.wrap.b32 	%r7265, %r7262, %r7263, 14;
	mov.b64 	%rd9428, {%r7265, %r7264};
	shf.r.wrap.b32 	%r7266, %r7263, %r7262, 18;
	shf.r.wrap.b32 	%r7267, %r7262, %r7263, 18;
	mov.b64 	%rd9429, {%r7267, %r7266};
	xor.b64  	%rd9430, %rd9429, %rd9428;
	shf.l.wrap.b32 	%r7268, %r7262, %r7263, 23;
	shf.l.wrap.b32 	%r7269, %r7263, %r7262, 23;
	mov.b64 	%rd9431, {%r7269, %r7268};
	xor.b64  	%rd9432, %rd9430, %rd9431;
	xor.b64  	%rd9433, %rd9391, %rd9366;
	and.b64  	%rd9434, %rd9416, %rd9433;
	xor.b64  	%rd9435, %rd9434, %rd9366;
	add.s64 	%rd9436, %rd9341, %rd9867;
	ld.const.u64 	%rd9437, [%rd9177+80];
	add.s64 	%rd9438, %rd9436, %rd9437;
	add.s64 	%rd9439, %rd9438, %rd9435;
	add.s64 	%rd9440, %rd9439, %rd9432;
	add.s64 	%rd9441, %rd9440, %rd9352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7270,%dummy}, %rd9427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7271}, %rd9427;
	}
	shf.r.wrap.b32 	%r7272, %r7271, %r7270, 28;
	shf.r.wrap.b32 	%r7273, %r7270, %r7271, 28;
	mov.b64 	%rd9442, {%r7273, %r7272};
	shf.l.wrap.b32 	%r7274, %r7270, %r7271, 30;
	shf.l.wrap.b32 	%r7275, %r7271, %r7270, 30;
	mov.b64 	%rd9443, {%r7275, %r7274};
	xor.b64  	%rd9444, %rd9443, %rd9442;
	shf.l.wrap.b32 	%r7276, %r7270, %r7271, 25;
	shf.l.wrap.b32 	%r7277, %r7271, %r7270, 25;
	mov.b64 	%rd9445, {%r7277, %r7276};
	xor.b64  	%rd9446, %rd9444, %rd9445;
	and.b64  	%rd9447, %rd9427, %rd9402;
	xor.b64  	%rd9448, %rd9427, %rd9402;
	and.b64  	%rd9449, %rd9448, %rd9377;
	or.b64  	%rd9450, %rd9449, %rd9447;
	add.s64 	%rd9451, %rd9440, %rd9450;
	add.s64 	%rd9452, %rd9451, %rd9446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7278,%dummy}, %rd9441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7279}, %rd9441;
	}
	shf.r.wrap.b32 	%r7280, %r7279, %r7278, 14;
	shf.r.wrap.b32 	%r7281, %r7278, %r7279, 14;
	mov.b64 	%rd9453, {%r7281, %r7280};
	shf.r.wrap.b32 	%r7282, %r7279, %r7278, 18;
	shf.r.wrap.b32 	%r7283, %r7278, %r7279, 18;
	mov.b64 	%rd9454, {%r7283, %r7282};
	xor.b64  	%rd9455, %rd9454, %rd9453;
	shf.l.wrap.b32 	%r7284, %r7278, %r7279, 23;
	shf.l.wrap.b32 	%r7285, %r7279, %r7278, 23;
	mov.b64 	%rd9456, {%r7285, %r7284};
	xor.b64  	%rd9457, %rd9455, %rd9456;
	xor.b64  	%rd9458, %rd9416, %rd9391;
	and.b64  	%rd9459, %rd9441, %rd9458;
	xor.b64  	%rd9460, %rd9459, %rd9391;
	add.s64 	%rd9461, %rd9366, %rd9866;
	ld.const.u64 	%rd9462, [%rd9177+88];
	add.s64 	%rd9463, %rd9461, %rd9462;
	add.s64 	%rd9464, %rd9463, %rd9460;
	add.s64 	%rd9465, %rd9464, %rd9457;
	add.s64 	%rd9466, %rd9465, %rd9377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7286,%dummy}, %rd9452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7287}, %rd9452;
	}
	shf.r.wrap.b32 	%r7288, %r7287, %r7286, 28;
	shf.r.wrap.b32 	%r7289, %r7286, %r7287, 28;
	mov.b64 	%rd9467, {%r7289, %r7288};
	shf.l.wrap.b32 	%r7290, %r7286, %r7287, 30;
	shf.l.wrap.b32 	%r7291, %r7287, %r7286, 30;
	mov.b64 	%rd9468, {%r7291, %r7290};
	xor.b64  	%rd9469, %rd9468, %rd9467;
	shf.l.wrap.b32 	%r7292, %r7286, %r7287, 25;
	shf.l.wrap.b32 	%r7293, %r7287, %r7286, 25;
	mov.b64 	%rd9470, {%r7293, %r7292};
	xor.b64  	%rd9471, %rd9469, %rd9470;
	and.b64  	%rd9472, %rd9452, %rd9427;
	xor.b64  	%rd9473, %rd9452, %rd9427;
	and.b64  	%rd9474, %rd9473, %rd9402;
	or.b64  	%rd9475, %rd9474, %rd9472;
	add.s64 	%rd9476, %rd9465, %rd9475;
	add.s64 	%rd9477, %rd9476, %rd9471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7294,%dummy}, %rd9466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7295}, %rd9466;
	}
	shf.r.wrap.b32 	%r7296, %r7295, %r7294, 14;
	shf.r.wrap.b32 	%r7297, %r7294, %r7295, 14;
	mov.b64 	%rd9478, {%r7297, %r7296};
	shf.r.wrap.b32 	%r7298, %r7295, %r7294, 18;
	shf.r.wrap.b32 	%r7299, %r7294, %r7295, 18;
	mov.b64 	%rd9479, {%r7299, %r7298};
	xor.b64  	%rd9480, %rd9479, %rd9478;
	shf.l.wrap.b32 	%r7300, %r7294, %r7295, 23;
	shf.l.wrap.b32 	%r7301, %r7295, %r7294, 23;
	mov.b64 	%rd9481, {%r7301, %r7300};
	xor.b64  	%rd9482, %rd9480, %rd9481;
	xor.b64  	%rd9483, %rd9441, %rd9416;
	and.b64  	%rd9484, %rd9466, %rd9483;
	xor.b64  	%rd9485, %rd9484, %rd9416;
	add.s64 	%rd9486, %rd9391, %rd9865;
	ld.const.u64 	%rd9487, [%rd9177+96];
	add.s64 	%rd9488, %rd9486, %rd9487;
	add.s64 	%rd9489, %rd9488, %rd9485;
	add.s64 	%rd9490, %rd9489, %rd9482;
	add.s64 	%rd9877, %rd9490, %rd9402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7302,%dummy}, %rd9477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7303}, %rd9477;
	}
	shf.r.wrap.b32 	%r7304, %r7303, %r7302, 28;
	shf.r.wrap.b32 	%r7305, %r7302, %r7303, 28;
	mov.b64 	%rd9491, {%r7305, %r7304};
	shf.l.wrap.b32 	%r7306, %r7302, %r7303, 30;
	shf.l.wrap.b32 	%r7307, %r7303, %r7302, 30;
	mov.b64 	%rd9492, {%r7307, %r7306};
	xor.b64  	%rd9493, %rd9492, %rd9491;
	shf.l.wrap.b32 	%r7308, %r7302, %r7303, 25;
	shf.l.wrap.b32 	%r7309, %r7303, %r7302, 25;
	mov.b64 	%rd9494, {%r7309, %r7308};
	xor.b64  	%rd9495, %rd9493, %rd9494;
	and.b64  	%rd9496, %rd9477, %rd9452;
	xor.b64  	%rd9497, %rd9477, %rd9452;
	and.b64  	%rd9498, %rd9497, %rd9427;
	or.b64  	%rd9499, %rd9498, %rd9496;
	add.s64 	%rd9500, %rd9490, %rd9499;
	add.s64 	%rd9873, %rd9500, %rd9495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7310,%dummy}, %rd9877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7311}, %rd9877;
	}
	shf.r.wrap.b32 	%r7312, %r7311, %r7310, 14;
	shf.r.wrap.b32 	%r7313, %r7310, %r7311, 14;
	mov.b64 	%rd9501, {%r7313, %r7312};
	shf.r.wrap.b32 	%r7314, %r7311, %r7310, 18;
	shf.r.wrap.b32 	%r7315, %r7310, %r7311, 18;
	mov.b64 	%rd9502, {%r7315, %r7314};
	xor.b64  	%rd9503, %rd9502, %rd9501;
	shf.l.wrap.b32 	%r7316, %r7310, %r7311, 23;
	shf.l.wrap.b32 	%r7317, %r7311, %r7310, 23;
	mov.b64 	%rd9504, {%r7317, %r7316};
	xor.b64  	%rd9505, %rd9503, %rd9504;
	xor.b64  	%rd9506, %rd9466, %rd9441;
	and.b64  	%rd9507, %rd9877, %rd9506;
	xor.b64  	%rd9508, %rd9507, %rd9441;
	add.s64 	%rd9509, %rd9416, %rd9864;
	ld.const.u64 	%rd9510, [%rd9177+104];
	add.s64 	%rd9511, %rd9509, %rd9510;
	add.s64 	%rd9512, %rd9511, %rd9508;
	add.s64 	%rd9513, %rd9512, %rd9505;
	add.s64 	%rd9876, %rd9513, %rd9427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7318,%dummy}, %rd9873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7319}, %rd9873;
	}
	shf.r.wrap.b32 	%r7320, %r7319, %r7318, 28;
	shf.r.wrap.b32 	%r7321, %r7318, %r7319, 28;
	mov.b64 	%rd9514, {%r7321, %r7320};
	shf.l.wrap.b32 	%r7322, %r7318, %r7319, 30;
	shf.l.wrap.b32 	%r7323, %r7319, %r7318, 30;
	mov.b64 	%rd9515, {%r7323, %r7322};
	xor.b64  	%rd9516, %rd9515, %rd9514;
	shf.l.wrap.b32 	%r7324, %r7318, %r7319, 25;
	shf.l.wrap.b32 	%r7325, %r7319, %r7318, 25;
	mov.b64 	%rd9517, {%r7325, %r7324};
	xor.b64  	%rd9518, %rd9516, %rd9517;
	and.b64  	%rd9519, %rd9873, %rd9477;
	xor.b64  	%rd9520, %rd9873, %rd9477;
	and.b64  	%rd9521, %rd9520, %rd9452;
	or.b64  	%rd9522, %rd9521, %rd9519;
	add.s64 	%rd9523, %rd9513, %rd9522;
	add.s64 	%rd9872, %rd9523, %rd9518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7326,%dummy}, %rd9876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7327}, %rd9876;
	}
	shf.r.wrap.b32 	%r7328, %r7327, %r7326, 14;
	shf.r.wrap.b32 	%r7329, %r7326, %r7327, 14;
	mov.b64 	%rd9524, {%r7329, %r7328};
	shf.r.wrap.b32 	%r7330, %r7327, %r7326, 18;
	shf.r.wrap.b32 	%r7331, %r7326, %r7327, 18;
	mov.b64 	%rd9525, {%r7331, %r7330};
	xor.b64  	%rd9526, %rd9525, %rd9524;
	shf.l.wrap.b32 	%r7332, %r7326, %r7327, 23;
	shf.l.wrap.b32 	%r7333, %r7327, %r7326, 23;
	mov.b64 	%rd9527, {%r7333, %r7332};
	xor.b64  	%rd9528, %rd9526, %rd9527;
	xor.b64  	%rd9529, %rd9877, %rd9466;
	and.b64  	%rd9530, %rd9876, %rd9529;
	xor.b64  	%rd9531, %rd9530, %rd9466;
	add.s64 	%rd9532, %rd9441, %rd9863;
	ld.const.u64 	%rd9533, [%rd9177+112];
	add.s64 	%rd9534, %rd9532, %rd9533;
	add.s64 	%rd9535, %rd9534, %rd9531;
	add.s64 	%rd9536, %rd9535, %rd9528;
	add.s64 	%rd9875, %rd9536, %rd9452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd9872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7335}, %rd9872;
	}
	shf.r.wrap.b32 	%r7336, %r7335, %r7334, 28;
	shf.r.wrap.b32 	%r7337, %r7334, %r7335, 28;
	mov.b64 	%rd9537, {%r7337, %r7336};
	shf.l.wrap.b32 	%r7338, %r7334, %r7335, 30;
	shf.l.wrap.b32 	%r7339, %r7335, %r7334, 30;
	mov.b64 	%rd9538, {%r7339, %r7338};
	xor.b64  	%rd9539, %rd9538, %rd9537;
	shf.l.wrap.b32 	%r7340, %r7334, %r7335, 25;
	shf.l.wrap.b32 	%r7341, %r7335, %r7334, 25;
	mov.b64 	%rd9540, {%r7341, %r7340};
	xor.b64  	%rd9541, %rd9539, %rd9540;
	and.b64  	%rd9542, %rd9872, %rd9873;
	xor.b64  	%rd9543, %rd9872, %rd9873;
	and.b64  	%rd9544, %rd9543, %rd9477;
	or.b64  	%rd9545, %rd9544, %rd9542;
	add.s64 	%rd9546, %rd9536, %rd9545;
	add.s64 	%rd9871, %rd9546, %rd9541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7342,%dummy}, %rd9875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7343}, %rd9875;
	}
	shf.r.wrap.b32 	%r7344, %r7343, %r7342, 14;
	shf.r.wrap.b32 	%r7345, %r7342, %r7343, 14;
	mov.b64 	%rd9547, {%r7345, %r7344};
	shf.r.wrap.b32 	%r7346, %r7343, %r7342, 18;
	shf.r.wrap.b32 	%r7347, %r7342, %r7343, 18;
	mov.b64 	%rd9548, {%r7347, %r7346};
	xor.b64  	%rd9549, %rd9548, %rd9547;
	shf.l.wrap.b32 	%r7348, %r7342, %r7343, 23;
	shf.l.wrap.b32 	%r7349, %r7343, %r7342, 23;
	mov.b64 	%rd9550, {%r7349, %r7348};
	xor.b64  	%rd9551, %rd9549, %rd9550;
	xor.b64  	%rd9552, %rd9876, %rd9877;
	and.b64  	%rd9553, %rd9875, %rd9552;
	xor.b64  	%rd9554, %rd9553, %rd9877;
	add.s64 	%rd9555, %rd9466, %rd9862;
	ld.const.u64 	%rd9556, [%rd9177+120];
	add.s64 	%rd9557, %rd9555, %rd9556;
	add.s64 	%rd9558, %rd9557, %rd9554;
	add.s64 	%rd9559, %rd9558, %rd9551;
	add.s64 	%rd9874, %rd9559, %rd9477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7350,%dummy}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7351}, %rd9871;
	}
	shf.r.wrap.b32 	%r7352, %r7351, %r7350, 28;
	shf.r.wrap.b32 	%r7353, %r7350, %r7351, 28;
	mov.b64 	%rd9560, {%r7353, %r7352};
	shf.l.wrap.b32 	%r7354, %r7350, %r7351, 30;
	shf.l.wrap.b32 	%r7355, %r7351, %r7350, 30;
	mov.b64 	%rd9561, {%r7355, %r7354};
	xor.b64  	%rd9562, %rd9561, %rd9560;
	shf.l.wrap.b32 	%r7356, %r7350, %r7351, 25;
	shf.l.wrap.b32 	%r7357, %r7351, %r7350, 25;
	mov.b64 	%rd9563, {%r7357, %r7356};
	xor.b64  	%rd9564, %rd9562, %rd9563;
	and.b64  	%rd9565, %rd9871, %rd9872;
	xor.b64  	%rd9566, %rd9871, %rd9872;
	and.b64  	%rd9567, %rd9566, %rd9873;
	or.b64  	%rd9568, %rd9567, %rd9565;
	add.s64 	%rd9569, %rd9559, %rd9568;
	add.s64 	%rd9870, %rd9569, %rd9564;
	add.s32 	%r7535, %r7535, 16;
	setp.lt.s32	%p54, %r7535, 80;
	@%p54 bra 	BB3_39;
	bra.uni 	BB3_40;

BB3_2:
	ld.global.u32 	%r399, [%rd1+-256];
	// inline asm
	prmt.b32 %r7440, %r399, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r401, [%rd1+-252];
	// inline asm
	prmt.b32 %r7439, %r401, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r403, [%rd1+-248];
	// inline asm
	prmt.b32 %r7438, %r403, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r405, [%rd1+-244];
	// inline asm
	prmt.b32 %r7437, %r405, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r407, [%rd1+-240];
	// inline asm
	prmt.b32 %r7444, %r407, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r409, [%rd1+-236];
	// inline asm
	prmt.b32 %r7443, %r409, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r411, [%rd1+-232];
	// inline asm
	prmt.b32 %r7442, %r411, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r413, [%rd1+-228];
	// inline asm
	prmt.b32 %r7441, %r413, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r415, [%rd1+-224];
	// inline asm
	prmt.b32 %r7448, %r415, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r417, [%rd1+-220];
	// inline asm
	prmt.b32 %r7447, %r417, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r419, [%rd1+-216];
	// inline asm
	prmt.b32 %r7446, %r419, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r421, [%rd1+-212];
	// inline asm
	prmt.b32 %r7445, %r421, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r423, [%rd1+-208];
	// inline asm
	prmt.b32 %r7452, %r423, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r425, [%rd1+-204];
	// inline asm
	prmt.b32 %r7451, %r425, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r427, [%rd1+-200];
	// inline asm
	prmt.b32 %r7450, %r427, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r429, [%rd1+-196];
	// inline asm
	prmt.b32 %r7449, %r429, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r431, [%rd1+-192];
	// inline asm
	prmt.b32 %r7456, %r431, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r433, [%rd1+-188];
	// inline asm
	prmt.b32 %r7455, %r433, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r435, [%rd1+-184];
	// inline asm
	prmt.b32 %r7454, %r435, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r437, [%rd1+-180];
	// inline asm
	prmt.b32 %r7453, %r437, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r439, [%rd1+-176];
	// inline asm
	prmt.b32 %r7460, %r439, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r441, [%rd1+-172];
	// inline asm
	prmt.b32 %r7459, %r441, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r443, [%rd1+-168];
	// inline asm
	prmt.b32 %r7458, %r443, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r445, [%rd1+-164];
	// inline asm
	prmt.b32 %r7457, %r445, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r447, [%rd1+-160];
	// inline asm
	prmt.b32 %r7464, %r447, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r449, [%rd1+-156];
	// inline asm
	prmt.b32 %r7463, %r449, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r451, [%rd1+-152];
	// inline asm
	prmt.b32 %r7462, %r451, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r453, [%rd1+-148];
	// inline asm
	prmt.b32 %r7461, %r453, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r455, [%rd1+-144];
	// inline asm
	prmt.b32 %r7468, %r455, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r457, [%rd1+-140];
	// inline asm
	prmt.b32 %r7467, %r457, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r459, [%rd1+-136];
	// inline asm
	prmt.b32 %r7466, %r459, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r461, [%rd1+-132];
	// inline asm
	prmt.b32 %r7465, %r461, 0, 0x0123;
	// inline asm
	ld.const.u64 	%rd9722, [k_sha512];
	ld.const.u64 	%rd9721, [k_sha512+8];
	ld.const.u64 	%rd9720, [k_sha512+16];
	ld.const.u64 	%rd9719, [k_sha512+24];
	ld.const.u64 	%rd9718, [k_sha512+32];
	ld.const.u64 	%rd9717, [k_sha512+40];
	ld.const.u64 	%rd9716, [k_sha512+48];
	ld.const.u64 	%rd9715, [k_sha512+56];
	ld.const.u64 	%rd9714, [k_sha512+64];
	ld.const.u64 	%rd9713, [k_sha512+72];
	ld.const.u64 	%rd9712, [k_sha512+80];
	ld.const.u64 	%rd9711, [k_sha512+88];
	ld.const.u64 	%rd9710, [k_sha512+96];
	ld.const.u64 	%rd9709, [k_sha512+104];
	ld.const.u64 	%rd9708, [k_sha512+112];
	ld.const.u64 	%rd9707, [k_sha512+120];
	bra.uni 	BB3_20;

BB3_5:
	// inline asm
	prmt.b32 %r7404, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7403, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7402, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7401, %r40, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7400, %r41, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7399, %r42, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7398, %r43, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7397, %r44, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7396, %r45, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7395, %r46, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7394, %r47, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7393, %r48, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7392, %r49, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7391, %r50, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7390, %r51, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7389, %r52, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7388, %r53, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7387, %r54, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7386, %r55, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7385, %r56, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7384, %r57, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7383, %r58, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7382, %r59, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7381, %r60, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7380, %r61, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7379, %r62, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7378, %r63, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7377, %r64, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7376, %r65, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7375, %r66, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7374, %r67, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r527, %r68, 0, 0x0123;
	// inline asm
	setp.eq.s32	%p4, %r2, %r35;
	mov.u32 	%r7373, 0;
	@%p4 bra 	BB3_6;
	bra.uni 	BB3_7;

BB3_6:
	mov.u32 	%r2, %r35;
	bra.uni 	BB3_12;

BB3_7:
	sub.s32 	%r561, %r2, %r35;
	setp.ne.s32	%p5, %r561, 128;
	@%p5 bra 	BB3_8;

	mov.b64	%rd9633, {%r7403, %r7404};
	mov.b64	%rd9634, {%r7401, %r7402};
	mov.b64	%rd9635, {%r7399, %r7400};
	mov.b64	%rd9636, {%r7397, %r7398};
	mov.b64	%rd9637, {%r7395, %r7396};
	mov.b64	%rd9638, {%r7393, %r7394};
	mov.b64	%rd9639, {%r7391, %r7392};
	mov.b64	%rd9640, {%r7389, %r7390};
	mov.b64	%rd9624, {%r7387, %r7388};
	mov.b64	%rd9623, {%r7385, %r7386};
	mov.b64	%rd9622, {%r7383, %r7384};
	mov.b64	%rd9621, {%r7381, %r7382};
	mov.b64	%rd9620, {%r7379, %r7380};
	mov.b64	%rd9619, {%r7377, %r7378};
	mov.b64	%rd9618, {%r7375, %r7376};
	mov.b64	%rd9617, {%r527, %r7374};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd37;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 18;
	shf.r.wrap.b32 	%r566, %r563, %r564, 18;
	mov.b64 	%rd830, {%r566, %r565};
	shf.r.wrap.b32 	%r567, %r564, %r563, 14;
	shf.r.wrap.b32 	%r568, %r563, %r564, 14;
	mov.b64 	%rd831, {%r568, %r567};
	xor.b64  	%rd832, %rd830, %rd831;
	shf.l.wrap.b32 	%r569, %r563, %r564, 23;
	shf.l.wrap.b32 	%r570, %r564, %r563, 23;
	mov.b64 	%rd833, {%r570, %r569};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd36, %rd35;
	and.b64  	%rd836, %rd835, %rd37;
	xor.b64  	%rd837, %rd836, %rd35;
	add.s64 	%rd838, %rd34, %rd9722;
	add.s64 	%rd839, %rd838, %rd837;
	add.s64 	%rd840, %rd839, %rd9633;
	add.s64 	%rd841, %rd840, %rd834;
	add.s64 	%rd842, %rd841, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r573, %r572, %r571, 30;
	shf.l.wrap.b32 	%r574, %r571, %r572, 30;
	mov.b64 	%rd843, {%r574, %r573};
	shf.r.wrap.b32 	%r575, %r571, %r572, 28;
	shf.r.wrap.b32 	%r576, %r572, %r571, 28;
	mov.b64 	%rd844, {%r576, %r575};
	xor.b64  	%rd845, %rd843, %rd844;
	shf.l.wrap.b32 	%r577, %r572, %r571, 25;
	shf.l.wrap.b32 	%r578, %r571, %r572, 25;
	mov.b64 	%rd846, {%r578, %r577};
	xor.b64  	%rd847, %rd845, %rd846;
	xor.b64  	%rd848, %rd41, %rd40;
	and.b64  	%rd849, %rd848, %rd39;
	and.b64  	%rd850, %rd41, %rd40;
	or.b64  	%rd851, %rd849, %rd850;
	add.s64 	%rd852, %rd841, %rd851;
	add.s64 	%rd853, %rd852, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd842;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 14;
	shf.r.wrap.b32 	%r582, %r579, %r580, 14;
	mov.b64 	%rd854, {%r582, %r581};
	shf.r.wrap.b32 	%r583, %r580, %r579, 18;
	shf.r.wrap.b32 	%r584, %r579, %r580, 18;
	mov.b64 	%rd855, {%r584, %r583};
	xor.b64  	%rd856, %rd855, %rd854;
	shf.l.wrap.b32 	%r585, %r579, %r580, 23;
	shf.l.wrap.b32 	%r586, %r580, %r579, 23;
	mov.b64 	%rd857, {%r586, %r585};
	xor.b64  	%rd858, %rd856, %rd857;
	xor.b64  	%rd859, %rd37, %rd36;
	and.b64  	%rd860, %rd842, %rd859;
	xor.b64  	%rd861, %rd860, %rd36;
	add.s64 	%rd862, %rd35, %rd9721;
	add.s64 	%rd863, %rd862, %rd9634;
	add.s64 	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd864, %rd858;
	add.s64 	%rd866, %rd865, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd853;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 28;
	shf.r.wrap.b32 	%r590, %r587, %r588, 28;
	mov.b64 	%rd867, {%r590, %r589};
	shf.l.wrap.b32 	%r591, %r587, %r588, 30;
	shf.l.wrap.b32 	%r592, %r588, %r587, 30;
	mov.b64 	%rd868, {%r592, %r591};
	xor.b64  	%rd869, %rd868, %rd867;
	shf.l.wrap.b32 	%r593, %r587, %r588, 25;
	shf.l.wrap.b32 	%r594, %r588, %r587, 25;
	mov.b64 	%rd870, {%r594, %r593};
	xor.b64  	%rd871, %rd869, %rd870;
	and.b64  	%rd872, %rd853, %rd41;
	xor.b64  	%rd873, %rd853, %rd41;
	and.b64  	%rd874, %rd873, %rd40;
	or.b64  	%rd875, %rd874, %rd872;
	add.s64 	%rd876, %rd865, %rd875;
	add.s64 	%rd877, %rd876, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd866;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 14;
	shf.r.wrap.b32 	%r598, %r595, %r596, 14;
	mov.b64 	%rd878, {%r598, %r597};
	shf.r.wrap.b32 	%r599, %r596, %r595, 18;
	shf.r.wrap.b32 	%r600, %r595, %r596, 18;
	mov.b64 	%rd879, {%r600, %r599};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r601, %r595, %r596, 23;
	shf.l.wrap.b32 	%r602, %r596, %r595, 23;
	mov.b64 	%rd881, {%r602, %r601};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd842, %rd37;
	and.b64  	%rd884, %rd866, %rd883;
	xor.b64  	%rd885, %rd884, %rd37;
	add.s64 	%rd886, %rd36, %rd20;
	add.s64 	%rd887, %rd886, %rd9635;
	add.s64 	%rd888, %rd887, %rd885;
	add.s64 	%rd889, %rd888, %rd882;
	add.s64 	%rd890, %rd889, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd877;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 28;
	shf.r.wrap.b32 	%r606, %r603, %r604, 28;
	mov.b64 	%rd891, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 30;
	shf.l.wrap.b32 	%r608, %r604, %r603, 30;
	mov.b64 	%rd892, {%r608, %r607};
	xor.b64  	%rd893, %rd892, %rd891;
	shf.l.wrap.b32 	%r609, %r603, %r604, 25;
	shf.l.wrap.b32 	%r610, %r604, %r603, 25;
	mov.b64 	%rd894, {%r610, %r609};
	xor.b64  	%rd895, %rd893, %rd894;
	and.b64  	%rd896, %rd877, %rd853;
	xor.b64  	%rd897, %rd877, %rd853;
	and.b64  	%rd898, %rd897, %rd41;
	or.b64  	%rd899, %rd898, %rd896;
	add.s64 	%rd900, %rd889, %rd899;
	add.s64 	%rd901, %rd900, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd890;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 14;
	shf.r.wrap.b32 	%r614, %r611, %r612, 14;
	mov.b64 	%rd902, {%r614, %r613};
	shf.r.wrap.b32 	%r615, %r612, %r611, 18;
	shf.r.wrap.b32 	%r616, %r611, %r612, 18;
	mov.b64 	%rd903, {%r616, %r615};
	xor.b64  	%rd904, %rd903, %rd902;
	shf.l.wrap.b32 	%r617, %r611, %r612, 23;
	shf.l.wrap.b32 	%r618, %r612, %r611, 23;
	mov.b64 	%rd905, {%r618, %r617};
	xor.b64  	%rd906, %rd904, %rd905;
	xor.b64  	%rd907, %rd866, %rd842;
	and.b64  	%rd908, %rd890, %rd907;
	xor.b64  	%rd909, %rd908, %rd842;
	add.s64 	%rd910, %rd37, %rd21;
	add.s64 	%rd911, %rd910, %rd9636;
	add.s64 	%rd912, %rd911, %rd909;
	add.s64 	%rd913, %rd912, %rd906;
	add.s64 	%rd914, %rd913, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd901;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 28;
	shf.r.wrap.b32 	%r622, %r619, %r620, 28;
	mov.b64 	%rd915, {%r622, %r621};
	shf.l.wrap.b32 	%r623, %r619, %r620, 30;
	shf.l.wrap.b32 	%r624, %r620, %r619, 30;
	mov.b64 	%rd916, {%r624, %r623};
	xor.b64  	%rd917, %rd916, %rd915;
	shf.l.wrap.b32 	%r625, %r619, %r620, 25;
	shf.l.wrap.b32 	%r626, %r620, %r619, 25;
	mov.b64 	%rd918, {%r626, %r625};
	xor.b64  	%rd919, %rd917, %rd918;
	and.b64  	%rd920, %rd901, %rd877;
	xor.b64  	%rd921, %rd901, %rd877;
	and.b64  	%rd922, %rd921, %rd853;
	or.b64  	%rd923, %rd922, %rd920;
	add.s64 	%rd924, %rd913, %rd923;
	add.s64 	%rd925, %rd924, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd914;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 14;
	shf.r.wrap.b32 	%r630, %r627, %r628, 14;
	mov.b64 	%rd926, {%r630, %r629};
	shf.r.wrap.b32 	%r631, %r628, %r627, 18;
	shf.r.wrap.b32 	%r632, %r627, %r628, 18;
	mov.b64 	%rd927, {%r632, %r631};
	xor.b64  	%rd928, %rd927, %rd926;
	shf.l.wrap.b32 	%r633, %r627, %r628, 23;
	shf.l.wrap.b32 	%r634, %r628, %r627, 23;
	mov.b64 	%rd929, {%r634, %r633};
	xor.b64  	%rd930, %rd928, %rd929;
	xor.b64  	%rd931, %rd890, %rd866;
	and.b64  	%rd932, %rd914, %rd931;
	xor.b64  	%rd933, %rd932, %rd866;
	add.s64 	%rd934, %rd9637, %rd22;
	add.s64 	%rd935, %rd934, %rd842;
	add.s64 	%rd936, %rd935, %rd933;
	add.s64 	%rd937, %rd936, %rd930;
	add.s64 	%rd938, %rd937, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd925;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 28;
	shf.r.wrap.b32 	%r638, %r635, %r636, 28;
	mov.b64 	%rd939, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 30;
	shf.l.wrap.b32 	%r640, %r636, %r635, 30;
	mov.b64 	%rd940, {%r640, %r639};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r641, %r635, %r636, 25;
	shf.l.wrap.b32 	%r642, %r636, %r635, 25;
	mov.b64 	%rd942, {%r642, %r641};
	xor.b64  	%rd943, %rd941, %rd942;
	and.b64  	%rd944, %rd925, %rd901;
	xor.b64  	%rd945, %rd925, %rd901;
	and.b64  	%rd946, %rd945, %rd877;
	or.b64  	%rd947, %rd946, %rd944;
	add.s64 	%rd948, %rd937, %rd947;
	add.s64 	%rd949, %rd948, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd938;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 14;
	shf.r.wrap.b32 	%r646, %r643, %r644, 14;
	mov.b64 	%rd950, {%r646, %r645};
	shf.r.wrap.b32 	%r647, %r644, %r643, 18;
	shf.r.wrap.b32 	%r648, %r643, %r644, 18;
	mov.b64 	%rd951, {%r648, %r647};
	xor.b64  	%rd952, %rd951, %rd950;
	shf.l.wrap.b32 	%r649, %r643, %r644, 23;
	shf.l.wrap.b32 	%r650, %r644, %r643, 23;
	mov.b64 	%rd953, {%r650, %r649};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd914, %rd890;
	and.b64  	%rd956, %rd938, %rd955;
	xor.b64  	%rd957, %rd956, %rd890;
	add.s64 	%rd958, %rd9638, %rd23;
	add.s64 	%rd959, %rd958, %rd866;
	add.s64 	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd960, %rd954;
	add.s64 	%rd962, %rd961, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd949;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 28;
	shf.r.wrap.b32 	%r654, %r651, %r652, 28;
	mov.b64 	%rd963, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 30;
	shf.l.wrap.b32 	%r656, %r652, %r651, 30;
	mov.b64 	%rd964, {%r656, %r655};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r657, %r651, %r652, 25;
	shf.l.wrap.b32 	%r658, %r652, %r651, 25;
	mov.b64 	%rd966, {%r658, %r657};
	xor.b64  	%rd967, %rd965, %rd966;
	and.b64  	%rd968, %rd949, %rd925;
	xor.b64  	%rd969, %rd949, %rd925;
	and.b64  	%rd970, %rd969, %rd901;
	or.b64  	%rd971, %rd970, %rd968;
	add.s64 	%rd972, %rd961, %rd971;
	add.s64 	%rd973, %rd972, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd962;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 14;
	shf.r.wrap.b32 	%r662, %r659, %r660, 14;
	mov.b64 	%rd974, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 18;
	shf.r.wrap.b32 	%r664, %r659, %r660, 18;
	mov.b64 	%rd975, {%r664, %r663};
	xor.b64  	%rd976, %rd975, %rd974;
	shf.l.wrap.b32 	%r665, %r659, %r660, 23;
	shf.l.wrap.b32 	%r666, %r660, %r659, 23;
	mov.b64 	%rd977, {%r666, %r665};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd938, %rd914;
	and.b64  	%rd980, %rd962, %rd979;
	xor.b64  	%rd981, %rd980, %rd914;
	add.s64 	%rd982, %rd9639, %rd24;
	add.s64 	%rd983, %rd982, %rd890;
	add.s64 	%rd984, %rd983, %rd981;
	add.s64 	%rd985, %rd984, %rd978;
	add.s64 	%rd986, %rd985, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd973;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 28;
	shf.r.wrap.b32 	%r670, %r667, %r668, 28;
	mov.b64 	%rd987, {%r670, %r669};
	shf.l.wrap.b32 	%r671, %r667, %r668, 30;
	shf.l.wrap.b32 	%r672, %r668, %r667, 30;
	mov.b64 	%rd988, {%r672, %r671};
	xor.b64  	%rd989, %rd988, %rd987;
	shf.l.wrap.b32 	%r673, %r667, %r668, 25;
	shf.l.wrap.b32 	%r674, %r668, %r667, 25;
	mov.b64 	%rd990, {%r674, %r673};
	xor.b64  	%rd991, %rd989, %rd990;
	and.b64  	%rd992, %rd973, %rd949;
	xor.b64  	%rd993, %rd973, %rd949;
	and.b64  	%rd994, %rd993, %rd925;
	or.b64  	%rd995, %rd994, %rd992;
	add.s64 	%rd996, %rd985, %rd995;
	add.s64 	%rd997, %rd996, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd986;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 14;
	shf.r.wrap.b32 	%r678, %r675, %r676, 14;
	mov.b64 	%rd998, {%r678, %r677};
	shf.r.wrap.b32 	%r679, %r676, %r675, 18;
	shf.r.wrap.b32 	%r680, %r675, %r676, 18;
	mov.b64 	%rd999, {%r680, %r679};
	xor.b64  	%rd1000, %rd999, %rd998;
	shf.l.wrap.b32 	%r681, %r675, %r676, 23;
	shf.l.wrap.b32 	%r682, %r676, %r675, 23;
	mov.b64 	%rd1001, {%r682, %r681};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	xor.b64  	%rd1003, %rd962, %rd938;
	and.b64  	%rd1004, %rd986, %rd1003;
	xor.b64  	%rd1005, %rd1004, %rd938;
	add.s64 	%rd1006, %rd9640, %rd25;
	add.s64 	%rd1007, %rd1006, %rd914;
	add.s64 	%rd1008, %rd1007, %rd1005;
	add.s64 	%rd1009, %rd1008, %rd1002;
	add.s64 	%rd1010, %rd1009, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd997;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 28;
	shf.r.wrap.b32 	%r686, %r683, %r684, 28;
	mov.b64 	%rd1011, {%r686, %r685};
	shf.l.wrap.b32 	%r687, %r683, %r684, 30;
	shf.l.wrap.b32 	%r688, %r684, %r683, 30;
	mov.b64 	%rd1012, {%r688, %r687};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	shf.l.wrap.b32 	%r689, %r683, %r684, 25;
	shf.l.wrap.b32 	%r690, %r684, %r683, 25;
	mov.b64 	%rd1014, {%r690, %r689};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	and.b64  	%rd1016, %rd997, %rd973;
	xor.b64  	%rd1017, %rd997, %rd973;
	and.b64  	%rd1018, %rd1017, %rd949;
	or.b64  	%rd1019, %rd1018, %rd1016;
	add.s64 	%rd1020, %rd1009, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r691,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd1010;
	}
	shf.r.wrap.b32 	%r693, %r692, %r691, 14;
	shf.r.wrap.b32 	%r694, %r691, %r692, 14;
	mov.b64 	%rd1022, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r692, %r691, 18;
	shf.r.wrap.b32 	%r696, %r691, %r692, 18;
	mov.b64 	%rd1023, {%r696, %r695};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	shf.l.wrap.b32 	%r697, %r691, %r692, 23;
	shf.l.wrap.b32 	%r698, %r692, %r691, 23;
	mov.b64 	%rd1025, {%r698, %r697};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd986, %rd962;
	and.b64  	%rd1028, %rd1010, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd962;
	add.s64 	%rd1030, %rd9624, %rd26;
	add.s64 	%rd1031, %rd1030, %rd938;
	add.s64 	%rd1032, %rd1031, %rd1029;
	add.s64 	%rd1033, %rd1032, %rd1026;
	add.s64 	%rd1034, %rd1033, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1021;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 28;
	shf.r.wrap.b32 	%r702, %r699, %r700, 28;
	mov.b64 	%rd1035, {%r702, %r701};
	shf.l.wrap.b32 	%r703, %r699, %r700, 30;
	shf.l.wrap.b32 	%r704, %r700, %r699, 30;
	mov.b64 	%rd1036, {%r704, %r703};
	xor.b64  	%rd1037, %rd1036, %rd1035;
	shf.l.wrap.b32 	%r705, %r699, %r700, 25;
	shf.l.wrap.b32 	%r706, %r700, %r699, 25;
	mov.b64 	%rd1038, {%r706, %r705};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	and.b64  	%rd1040, %rd1021, %rd997;
	xor.b64  	%rd1041, %rd1021, %rd997;
	and.b64  	%rd1042, %rd1041, %rd973;
	or.b64  	%rd1043, %rd1042, %rd1040;
	add.s64 	%rd1044, %rd1033, %rd1043;
	add.s64 	%rd1045, %rd1044, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd1034;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 14;
	shf.r.wrap.b32 	%r710, %r707, %r708, 14;
	mov.b64 	%rd1046, {%r710, %r709};
	shf.r.wrap.b32 	%r711, %r708, %r707, 18;
	shf.r.wrap.b32 	%r712, %r707, %r708, 18;
	mov.b64 	%rd1047, {%r712, %r711};
	xor.b64  	%rd1048, %rd1047, %rd1046;
	shf.l.wrap.b32 	%r713, %r707, %r708, 23;
	shf.l.wrap.b32 	%r714, %r708, %r707, 23;
	mov.b64 	%rd1049, {%r714, %r713};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	xor.b64  	%rd1051, %rd1010, %rd986;
	and.b64  	%rd1052, %rd1034, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd986;
	add.s64 	%rd1054, %rd9623, %rd27;
	add.s64 	%rd1055, %rd1054, %rd962;
	add.s64 	%rd1056, %rd1055, %rd1053;
	add.s64 	%rd1057, %rd1056, %rd1050;
	add.s64 	%rd1058, %rd1057, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd1045;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 28;
	shf.r.wrap.b32 	%r718, %r715, %r716, 28;
	mov.b64 	%rd1059, {%r718, %r717};
	shf.l.wrap.b32 	%r719, %r715, %r716, 30;
	shf.l.wrap.b32 	%r720, %r716, %r715, 30;
	mov.b64 	%rd1060, {%r720, %r719};
	xor.b64  	%rd1061, %rd1060, %rd1059;
	shf.l.wrap.b32 	%r721, %r715, %r716, 25;
	shf.l.wrap.b32 	%r722, %r716, %r715, 25;
	mov.b64 	%rd1062, {%r722, %r721};
	xor.b64  	%rd1063, %rd1061, %rd1062;
	and.b64  	%rd1064, %rd1045, %rd1021;
	xor.b64  	%rd1065, %rd1045, %rd1021;
	and.b64  	%rd1066, %rd1065, %rd997;
	or.b64  	%rd1067, %rd1066, %rd1064;
	add.s64 	%rd1068, %rd1057, %rd1067;
	add.s64 	%rd1069, %rd1068, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1058;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 14;
	shf.r.wrap.b32 	%r726, %r723, %r724, 14;
	mov.b64 	%rd1070, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r724, %r723, 18;
	shf.r.wrap.b32 	%r728, %r723, %r724, 18;
	mov.b64 	%rd1071, {%r728, %r727};
	xor.b64  	%rd1072, %rd1071, %rd1070;
	shf.l.wrap.b32 	%r729, %r723, %r724, 23;
	shf.l.wrap.b32 	%r730, %r724, %r723, 23;
	mov.b64 	%rd1073, {%r730, %r729};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	xor.b64  	%rd1075, %rd1034, %rd1010;
	and.b64  	%rd1076, %rd1058, %rd1075;
	xor.b64  	%rd1077, %rd1076, %rd1010;
	add.s64 	%rd1078, %rd9622, %rd9712;
	add.s64 	%rd1079, %rd1078, %rd986;
	add.s64 	%rd1080, %rd1079, %rd1077;
	add.s64 	%rd1081, %rd1080, %rd1074;
	add.s64 	%rd1082, %rd1081, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd1069;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 28;
	shf.r.wrap.b32 	%r734, %r731, %r732, 28;
	mov.b64 	%rd1083, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 30;
	shf.l.wrap.b32 	%r736, %r732, %r731, 30;
	mov.b64 	%rd1084, {%r736, %r735};
	xor.b64  	%rd1085, %rd1084, %rd1083;
	shf.l.wrap.b32 	%r737, %r731, %r732, 25;
	shf.l.wrap.b32 	%r738, %r732, %r731, 25;
	mov.b64 	%rd1086, {%r738, %r737};
	xor.b64  	%rd1087, %rd1085, %rd1086;
	and.b64  	%rd1088, %rd1069, %rd1045;
	xor.b64  	%rd1089, %rd1069, %rd1045;
	and.b64  	%rd1090, %rd1089, %rd1021;
	or.b64  	%rd1091, %rd1090, %rd1088;
	add.s64 	%rd1092, %rd1081, %rd1091;
	add.s64 	%rd1093, %rd1092, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1082;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 14;
	shf.r.wrap.b32 	%r742, %r739, %r740, 14;
	mov.b64 	%rd1094, {%r742, %r741};
	shf.r.wrap.b32 	%r743, %r740, %r739, 18;
	shf.r.wrap.b32 	%r744, %r739, %r740, 18;
	mov.b64 	%rd1095, {%r744, %r743};
	xor.b64  	%rd1096, %rd1095, %rd1094;
	shf.l.wrap.b32 	%r745, %r739, %r740, 23;
	shf.l.wrap.b32 	%r746, %r740, %r739, 23;
	mov.b64 	%rd1097, {%r746, %r745};
	xor.b64  	%rd1098, %rd1096, %rd1097;
	xor.b64  	%rd1099, %rd1058, %rd1034;
	and.b64  	%rd1100, %rd1082, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1034;
	add.s64 	%rd1102, %rd9621, %rd9711;
	add.s64 	%rd1103, %rd1102, %rd1010;
	add.s64 	%rd1104, %rd1103, %rd1101;
	add.s64 	%rd1105, %rd1104, %rd1098;
	add.s64 	%rd1106, %rd1105, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1093;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 28;
	shf.r.wrap.b32 	%r750, %r747, %r748, 28;
	mov.b64 	%rd1107, {%r750, %r749};
	shf.l.wrap.b32 	%r751, %r747, %r748, 30;
	shf.l.wrap.b32 	%r752, %r748, %r747, 30;
	mov.b64 	%rd1108, {%r752, %r751};
	xor.b64  	%rd1109, %rd1108, %rd1107;
	shf.l.wrap.b32 	%r753, %r747, %r748, 25;
	shf.l.wrap.b32 	%r754, %r748, %r747, 25;
	mov.b64 	%rd1110, {%r754, %r753};
	xor.b64  	%rd1111, %rd1109, %rd1110;
	and.b64  	%rd1112, %rd1093, %rd1069;
	xor.b64  	%rd1113, %rd1093, %rd1069;
	and.b64  	%rd1114, %rd1113, %rd1045;
	or.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd1105, %rd1115;
	add.s64 	%rd1117, %rd1116, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd1106;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 14;
	shf.r.wrap.b32 	%r758, %r755, %r756, 14;
	mov.b64 	%rd1118, {%r758, %r757};
	shf.r.wrap.b32 	%r759, %r756, %r755, 18;
	shf.r.wrap.b32 	%r760, %r755, %r756, 18;
	mov.b64 	%rd1119, {%r760, %r759};
	xor.b64  	%rd1120, %rd1119, %rd1118;
	shf.l.wrap.b32 	%r761, %r755, %r756, 23;
	shf.l.wrap.b32 	%r762, %r756, %r755, 23;
	mov.b64 	%rd1121, {%r762, %r761};
	xor.b64  	%rd1122, %rd1120, %rd1121;
	xor.b64  	%rd1123, %rd1082, %rd1058;
	and.b64  	%rd1124, %rd1106, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1058;
	add.s64 	%rd1126, %rd9620, %rd9710;
	add.s64 	%rd1127, %rd1126, %rd1034;
	add.s64 	%rd1128, %rd1127, %rd1125;
	add.s64 	%rd1129, %rd1128, %rd1122;
	add.s64 	%rd9632, %rd1129, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1117;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 28;
	shf.r.wrap.b32 	%r766, %r763, %r764, 28;
	mov.b64 	%rd1130, {%r766, %r765};
	shf.l.wrap.b32 	%r767, %r763, %r764, 30;
	shf.l.wrap.b32 	%r768, %r764, %r763, 30;
	mov.b64 	%rd1131, {%r768, %r767};
	xor.b64  	%rd1132, %rd1131, %rd1130;
	shf.l.wrap.b32 	%r769, %r763, %r764, 25;
	shf.l.wrap.b32 	%r770, %r764, %r763, 25;
	mov.b64 	%rd1133, {%r770, %r769};
	xor.b64  	%rd1134, %rd1132, %rd1133;
	and.b64  	%rd1135, %rd1117, %rd1093;
	xor.b64  	%rd1136, %rd1117, %rd1093;
	and.b64  	%rd1137, %rd1136, %rd1069;
	or.b64  	%rd1138, %rd1137, %rd1135;
	add.s64 	%rd1139, %rd1129, %rd1138;
	add.s64 	%rd9628, %rd1139, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd9632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd9632;
	}
	shf.r.wrap.b32 	%r773, %r772, %r771, 14;
	shf.r.wrap.b32 	%r774, %r771, %r772, 14;
	mov.b64 	%rd1140, {%r774, %r773};
	shf.r.wrap.b32 	%r775, %r772, %r771, 18;
	shf.r.wrap.b32 	%r776, %r771, %r772, 18;
	mov.b64 	%rd1141, {%r776, %r775};
	xor.b64  	%rd1142, %rd1141, %rd1140;
	shf.l.wrap.b32 	%r777, %r771, %r772, 23;
	shf.l.wrap.b32 	%r778, %r772, %r771, 23;
	mov.b64 	%rd1143, {%r778, %r777};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	xor.b64  	%rd1145, %rd1106, %rd1082;
	and.b64  	%rd1146, %rd9632, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1082;
	add.s64 	%rd1148, %rd9619, %rd9709;
	add.s64 	%rd1149, %rd1148, %rd1058;
	add.s64 	%rd1150, %rd1149, %rd1147;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd9631, %rd1151, %rd1069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd9628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd9628;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 28;
	shf.r.wrap.b32 	%r782, %r779, %r780, 28;
	mov.b64 	%rd1152, {%r782, %r781};
	shf.l.wrap.b32 	%r783, %r779, %r780, 30;
	shf.l.wrap.b32 	%r784, %r780, %r779, 30;
	mov.b64 	%rd1153, {%r784, %r783};
	xor.b64  	%rd1154, %rd1153, %rd1152;
	shf.l.wrap.b32 	%r785, %r779, %r780, 25;
	shf.l.wrap.b32 	%r786, %r780, %r779, 25;
	mov.b64 	%rd1155, {%r786, %r785};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	and.b64  	%rd1157, %rd9628, %rd1117;
	xor.b64  	%rd1158, %rd9628, %rd1117;
	and.b64  	%rd1159, %rd1158, %rd1093;
	or.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1151, %rd1160;
	add.s64 	%rd9627, %rd1161, %rd1156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd9631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd9631;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 14;
	shf.r.wrap.b32 	%r790, %r787, %r788, 14;
	mov.b64 	%rd1162, {%r790, %r789};
	shf.r.wrap.b32 	%r791, %r788, %r787, 18;
	shf.r.wrap.b32 	%r792, %r787, %r788, 18;
	mov.b64 	%rd1163, {%r792, %r791};
	xor.b64  	%rd1164, %rd1163, %rd1162;
	shf.l.wrap.b32 	%r793, %r787, %r788, 23;
	shf.l.wrap.b32 	%r794, %r788, %r787, 23;
	mov.b64 	%rd1165, {%r794, %r793};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	xor.b64  	%rd1167, %rd9632, %rd1106;
	and.b64  	%rd1168, %rd9631, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1106;
	add.s64 	%rd1170, %rd9618, %rd9708;
	add.s64 	%rd1171, %rd1170, %rd1082;
	add.s64 	%rd1172, %rd1171, %rd1169;
	add.s64 	%rd1173, %rd1172, %rd1166;
	add.s64 	%rd9630, %rd1173, %rd1093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd9627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd9627;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 28;
	shf.r.wrap.b32 	%r798, %r795, %r796, 28;
	mov.b64 	%rd1174, {%r798, %r797};
	shf.l.wrap.b32 	%r799, %r795, %r796, 30;
	shf.l.wrap.b32 	%r800, %r796, %r795, 30;
	mov.b64 	%rd1175, {%r800, %r799};
	xor.b64  	%rd1176, %rd1175, %rd1174;
	shf.l.wrap.b32 	%r801, %r795, %r796, 25;
	shf.l.wrap.b32 	%r802, %r796, %r795, 25;
	mov.b64 	%rd1177, {%r802, %r801};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	and.b64  	%rd1179, %rd9627, %rd9628;
	xor.b64  	%rd1180, %rd9627, %rd9628;
	and.b64  	%rd1181, %rd1180, %rd1117;
	or.b64  	%rd1182, %rd1181, %rd1179;
	add.s64 	%rd1183, %rd1173, %rd1182;
	add.s64 	%rd9626, %rd1183, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd9630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd9630;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 14;
	shf.r.wrap.b32 	%r806, %r803, %r804, 14;
	mov.b64 	%rd1184, {%r806, %r805};
	shf.r.wrap.b32 	%r807, %r804, %r803, 18;
	shf.r.wrap.b32 	%r808, %r803, %r804, 18;
	mov.b64 	%rd1185, {%r808, %r807};
	xor.b64  	%rd1186, %rd1185, %rd1184;
	shf.l.wrap.b32 	%r809, %r803, %r804, 23;
	shf.l.wrap.b32 	%r810, %r804, %r803, 23;
	mov.b64 	%rd1187, {%r810, %r809};
	xor.b64  	%rd1188, %rd1186, %rd1187;
	xor.b64  	%rd1189, %rd9631, %rd9632;
	and.b64  	%rd1190, %rd9630, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd9632;
	add.s64 	%rd1192, %rd9617, %rd9707;
	add.s64 	%rd1193, %rd1192, %rd1106;
	add.s64 	%rd1194, %rd1193, %rd1191;
	add.s64 	%rd1195, %rd1194, %rd1188;
	add.s64 	%rd9629, %rd1195, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r811,%dummy}, %rd9626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd9626;
	}
	shf.r.wrap.b32 	%r813, %r812, %r811, 28;
	shf.r.wrap.b32 	%r814, %r811, %r812, 28;
	mov.b64 	%rd1196, {%r814, %r813};
	shf.l.wrap.b32 	%r815, %r811, %r812, 30;
	shf.l.wrap.b32 	%r816, %r812, %r811, 30;
	mov.b64 	%rd1197, {%r816, %r815};
	xor.b64  	%rd1198, %rd1197, %rd1196;
	shf.l.wrap.b32 	%r817, %r811, %r812, 25;
	shf.l.wrap.b32 	%r818, %r812, %r811, 25;
	mov.b64 	%rd1199, {%r818, %r817};
	xor.b64  	%rd1200, %rd1198, %rd1199;
	and.b64  	%rd1201, %rd9626, %rd9627;
	xor.b64  	%rd1202, %rd9626, %rd9627;
	and.b64  	%rd1203, %rd1202, %rd9628;
	or.b64  	%rd1204, %rd1203, %rd1201;
	add.s64 	%rd1205, %rd1195, %rd1204;
	add.s64 	%rd9625, %rd1205, %rd1200;
	mov.u32 	%r7371, 16;

BB3_10:
	shr.u64 	%rd1206, %rd9618, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd9618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd9618;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 19;
	shf.r.wrap.b32 	%r822, %r819, %r820, 19;
	mov.b64 	%rd1207, {%r822, %r821};
	xor.b64  	%rd1208, %rd1207, %rd1206;
	shf.l.wrap.b32 	%r823, %r819, %r820, 3;
	shf.l.wrap.b32 	%r824, %r820, %r819, 3;
	mov.b64 	%rd1209, {%r824, %r823};
	xor.b64  	%rd1210, %rd1208, %rd1209;
	shr.u64 	%rd1211, %rd9634, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd9634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd9634;
	}
	shf.r.wrap.b32 	%r827, %r826, %r825, 1;
	shf.r.wrap.b32 	%r828, %r825, %r826, 1;
	mov.b64 	%rd1212, {%r828, %r827};
	xor.b64  	%rd1213, %rd1212, %rd1211;
	shf.r.wrap.b32 	%r829, %r826, %r825, 8;
	shf.r.wrap.b32 	%r830, %r825, %r826, 8;
	mov.b64 	%rd1214, {%r830, %r829};
	xor.b64  	%rd1215, %rd1213, %rd1214;
	add.s64 	%rd1216, %rd9633, %rd9623;
	add.s64 	%rd1217, %rd1216, %rd1210;
	add.s64 	%rd9633, %rd1217, %rd1215;
	shr.u64 	%rd1218, %rd9617, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd9617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd9617;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 19;
	shf.r.wrap.b32 	%r834, %r831, %r832, 19;
	mov.b64 	%rd1219, {%r834, %r833};
	xor.b64  	%rd1220, %rd1219, %rd1218;
	shf.l.wrap.b32 	%r835, %r831, %r832, 3;
	shf.l.wrap.b32 	%r836, %r832, %r831, 3;
	mov.b64 	%rd1221, {%r836, %r835};
	xor.b64  	%rd1222, %rd1220, %rd1221;
	shr.u64 	%rd1223, %rd9635, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd9635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd9635;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 1;
	shf.r.wrap.b32 	%r840, %r837, %r838, 1;
	mov.b64 	%rd1224, {%r840, %r839};
	xor.b64  	%rd1225, %rd1224, %rd1223;
	shf.r.wrap.b32 	%r841, %r838, %r837, 8;
	shf.r.wrap.b32 	%r842, %r837, %r838, 8;
	mov.b64 	%rd1226, {%r842, %r841};
	xor.b64  	%rd1227, %rd1225, %rd1226;
	add.s64 	%rd1228, %rd9634, %rd9622;
	add.s64 	%rd1229, %rd1228, %rd1222;
	add.s64 	%rd9634, %rd1229, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd9633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd9633;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 19;
	shf.r.wrap.b32 	%r846, %r843, %r844, 19;
	mov.b64 	%rd1230, {%r846, %r845};
	shf.l.wrap.b32 	%r847, %r843, %r844, 3;
	shf.l.wrap.b32 	%r848, %r844, %r843, 3;
	mov.b64 	%rd1231, {%r848, %r847};
	shr.u64 	%rd1232, %rd9633, 6;
	xor.b64  	%rd1233, %rd1230, %rd1232;
	xor.b64  	%rd1234, %rd1233, %rd1231;
	shr.u64 	%rd1235, %rd9636, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd9636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r850}, %rd9636;
	}
	shf.r.wrap.b32 	%r851, %r850, %r849, 1;
	shf.r.wrap.b32 	%r852, %r849, %r850, 1;
	mov.b64 	%rd1236, {%r852, %r851};
	xor.b64  	%rd1237, %rd1236, %rd1235;
	shf.r.wrap.b32 	%r853, %r850, %r849, 8;
	shf.r.wrap.b32 	%r854, %r849, %r850, 8;
	mov.b64 	%rd1238, {%r854, %r853};
	xor.b64  	%rd1239, %rd1237, %rd1238;
	add.s64 	%rd1240, %rd9635, %rd9621;
	add.s64 	%rd1241, %rd1240, %rd1234;
	add.s64 	%rd9635, %rd1241, %rd1239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd9634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd9634;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 19;
	shf.r.wrap.b32 	%r858, %r855, %r856, 19;
	mov.b64 	%rd1242, {%r858, %r857};
	shf.l.wrap.b32 	%r859, %r855, %r856, 3;
	shf.l.wrap.b32 	%r860, %r856, %r855, 3;
	mov.b64 	%rd1243, {%r860, %r859};
	shr.u64 	%rd1244, %rd9634, 6;
	xor.b64  	%rd1245, %rd1242, %rd1244;
	xor.b64  	%rd1246, %rd1245, %rd1243;
	shr.u64 	%rd1247, %rd9637, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd9637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd9637;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 1;
	shf.r.wrap.b32 	%r864, %r861, %r862, 1;
	mov.b64 	%rd1248, {%r864, %r863};
	xor.b64  	%rd1249, %rd1248, %rd1247;
	shf.r.wrap.b32 	%r865, %r862, %r861, 8;
	shf.r.wrap.b32 	%r866, %r861, %r862, 8;
	mov.b64 	%rd1250, {%r866, %r865};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	add.s64 	%rd1252, %rd9636, %rd9620;
	add.s64 	%rd1253, %rd1252, %rd1246;
	add.s64 	%rd9636, %rd1253, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd9635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd9635;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 19;
	shf.r.wrap.b32 	%r870, %r867, %r868, 19;
	mov.b64 	%rd1254, {%r870, %r869};
	shf.l.wrap.b32 	%r871, %r867, %r868, 3;
	shf.l.wrap.b32 	%r872, %r868, %r867, 3;
	mov.b64 	%rd1255, {%r872, %r871};
	shr.u64 	%rd1256, %rd9635, 6;
	xor.b64  	%rd1257, %rd1254, %rd1256;
	xor.b64  	%rd1258, %rd1257, %rd1255;
	shr.u64 	%rd1259, %rd9638, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd9638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd9638;
	}
	shf.r.wrap.b32 	%r875, %r874, %r873, 1;
	shf.r.wrap.b32 	%r876, %r873, %r874, 1;
	mov.b64 	%rd1260, {%r876, %r875};
	xor.b64  	%rd1261, %rd1260, %rd1259;
	shf.r.wrap.b32 	%r877, %r874, %r873, 8;
	shf.r.wrap.b32 	%r878, %r873, %r874, 8;
	mov.b64 	%rd1262, {%r878, %r877};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	add.s64 	%rd1264, %rd9637, %rd9619;
	add.s64 	%rd1265, %rd1264, %rd1258;
	add.s64 	%rd9637, %rd1265, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd9636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd9636;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 19;
	shf.r.wrap.b32 	%r882, %r879, %r880, 19;
	mov.b64 	%rd1266, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 3;
	shf.l.wrap.b32 	%r884, %r880, %r879, 3;
	mov.b64 	%rd1267, {%r884, %r883};
	shr.u64 	%rd1268, %rd9636, 6;
	xor.b64  	%rd1269, %rd1266, %rd1268;
	xor.b64  	%rd1270, %rd1269, %rd1267;
	shr.u64 	%rd1271, %rd9639, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd9639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd9639;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 1;
	shf.r.wrap.b32 	%r888, %r885, %r886, 1;
	mov.b64 	%rd1272, {%r888, %r887};
	xor.b64  	%rd1273, %rd1272, %rd1271;
	shf.r.wrap.b32 	%r889, %r886, %r885, 8;
	shf.r.wrap.b32 	%r890, %r885, %r886, 8;
	mov.b64 	%rd1274, {%r890, %r889};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	add.s64 	%rd1276, %rd9638, %rd9618;
	add.s64 	%rd1277, %rd1276, %rd1270;
	add.s64 	%rd9638, %rd1277, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd9637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd9637;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 19;
	shf.r.wrap.b32 	%r894, %r891, %r892, 19;
	mov.b64 	%rd1278, {%r894, %r893};
	shf.l.wrap.b32 	%r895, %r891, %r892, 3;
	shf.l.wrap.b32 	%r896, %r892, %r891, 3;
	mov.b64 	%rd1279, {%r896, %r895};
	shr.u64 	%rd1280, %rd9637, 6;
	xor.b64  	%rd1281, %rd1278, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1279;
	shr.u64 	%rd1283, %rd9640, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd9640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd9640;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 1;
	shf.r.wrap.b32 	%r900, %r897, %r898, 1;
	mov.b64 	%rd1284, {%r900, %r899};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shf.r.wrap.b32 	%r901, %r898, %r897, 8;
	shf.r.wrap.b32 	%r902, %r897, %r898, 8;
	mov.b64 	%rd1286, {%r902, %r901};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd9639, %rd9617;
	add.s64 	%rd1289, %rd1288, %rd1282;
	add.s64 	%rd9639, %rd1289, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd9638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd9638;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 19;
	shf.r.wrap.b32 	%r906, %r903, %r904, 19;
	mov.b64 	%rd1290, {%r906, %r905};
	shf.l.wrap.b32 	%r907, %r903, %r904, 3;
	shf.l.wrap.b32 	%r908, %r904, %r903, 3;
	mov.b64 	%rd1291, {%r908, %r907};
	shr.u64 	%rd1292, %rd9638, 6;
	xor.b64  	%rd1293, %rd1290, %rd1292;
	xor.b64  	%rd1294, %rd1293, %rd1291;
	shr.u64 	%rd1295, %rd9624, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd9624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd9624;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 1;
	shf.r.wrap.b32 	%r912, %r909, %r910, 1;
	mov.b64 	%rd1296, {%r912, %r911};
	xor.b64  	%rd1297, %rd1296, %rd1295;
	shf.r.wrap.b32 	%r913, %r910, %r909, 8;
	shf.r.wrap.b32 	%r914, %r909, %r910, 8;
	mov.b64 	%rd1298, {%r914, %r913};
	xor.b64  	%rd1299, %rd1297, %rd1298;
	add.s64 	%rd1300, %rd9633, %rd9640;
	add.s64 	%rd1301, %rd1300, %rd1294;
	add.s64 	%rd9640, %rd1301, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd9639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd9639;
	}
	shf.r.wrap.b32 	%r917, %r916, %r915, 19;
	shf.r.wrap.b32 	%r918, %r915, %r916, 19;
	mov.b64 	%rd1302, {%r918, %r917};
	shf.l.wrap.b32 	%r919, %r915, %r916, 3;
	shf.l.wrap.b32 	%r920, %r916, %r915, 3;
	mov.b64 	%rd1303, {%r920, %r919};
	shr.u64 	%rd1304, %rd9639, 6;
	xor.b64  	%rd1305, %rd1302, %rd1304;
	xor.b64  	%rd1306, %rd1305, %rd1303;
	shr.u64 	%rd1307, %rd9623, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd9623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r922}, %rd9623;
	}
	shf.r.wrap.b32 	%r923, %r922, %r921, 1;
	shf.r.wrap.b32 	%r924, %r921, %r922, 1;
	mov.b64 	%rd1308, {%r924, %r923};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	shf.r.wrap.b32 	%r925, %r922, %r921, 8;
	shf.r.wrap.b32 	%r926, %r921, %r922, 8;
	mov.b64 	%rd1310, {%r926, %r925};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	add.s64 	%rd1312, %rd9634, %rd9624;
	add.s64 	%rd1313, %rd1312, %rd1306;
	add.s64 	%rd9624, %rd1313, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd9640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd9640;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 19;
	shf.r.wrap.b32 	%r930, %r927, %r928, 19;
	mov.b64 	%rd1314, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 3;
	shf.l.wrap.b32 	%r932, %r928, %r927, 3;
	mov.b64 	%rd1315, {%r932, %r931};
	shr.u64 	%rd1316, %rd9640, 6;
	xor.b64  	%rd1317, %rd1314, %rd1316;
	xor.b64  	%rd1318, %rd1317, %rd1315;
	shr.u64 	%rd1319, %rd9622, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd9622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd9622;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 1;
	shf.r.wrap.b32 	%r936, %r933, %r934, 1;
	mov.b64 	%rd1320, {%r936, %r935};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	shf.r.wrap.b32 	%r937, %r934, %r933, 8;
	shf.r.wrap.b32 	%r938, %r933, %r934, 8;
	mov.b64 	%rd1322, {%r938, %r937};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	add.s64 	%rd1324, %rd9635, %rd9623;
	add.s64 	%rd1325, %rd1324, %rd1318;
	add.s64 	%rd9623, %rd1325, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd9624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd9624;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 19;
	shf.r.wrap.b32 	%r942, %r939, %r940, 19;
	mov.b64 	%rd1326, {%r942, %r941};
	shf.l.wrap.b32 	%r943, %r939, %r940, 3;
	shf.l.wrap.b32 	%r944, %r940, %r939, 3;
	mov.b64 	%rd1327, {%r944, %r943};
	shr.u64 	%rd1328, %rd9624, 6;
	xor.b64  	%rd1329, %rd1326, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1327;
	shr.u64 	%rd1331, %rd9621, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r945,%dummy}, %rd9621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r946}, %rd9621;
	}
	shf.r.wrap.b32 	%r947, %r946, %r945, 1;
	shf.r.wrap.b32 	%r948, %r945, %r946, 1;
	mov.b64 	%rd1332, {%r948, %r947};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.r.wrap.b32 	%r949, %r946, %r945, 8;
	shf.r.wrap.b32 	%r950, %r945, %r946, 8;
	mov.b64 	%rd1334, {%r950, %r949};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	add.s64 	%rd1336, %rd9636, %rd9622;
	add.s64 	%rd1337, %rd1336, %rd1330;
	add.s64 	%rd9622, %rd1337, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd9623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd9623;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 19;
	shf.r.wrap.b32 	%r954, %r951, %r952, 19;
	mov.b64 	%rd1338, {%r954, %r953};
	shf.l.wrap.b32 	%r955, %r951, %r952, 3;
	shf.l.wrap.b32 	%r956, %r952, %r951, 3;
	mov.b64 	%rd1339, {%r956, %r955};
	shr.u64 	%rd1340, %rd9623, 6;
	xor.b64  	%rd1341, %rd1338, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1339;
	shr.u64 	%rd1343, %rd9620, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd9620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd9620;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 1;
	shf.r.wrap.b32 	%r960, %r957, %r958, 1;
	mov.b64 	%rd1344, {%r960, %r959};
	xor.b64  	%rd1345, %rd1344, %rd1343;
	shf.r.wrap.b32 	%r961, %r958, %r957, 8;
	shf.r.wrap.b32 	%r962, %r957, %r958, 8;
	mov.b64 	%rd1346, {%r962, %r961};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	add.s64 	%rd1348, %rd9637, %rd9621;
	add.s64 	%rd1349, %rd1348, %rd1342;
	add.s64 	%rd9621, %rd1349, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r963,%dummy}, %rd9622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd9622;
	}
	shf.r.wrap.b32 	%r965, %r964, %r963, 19;
	shf.r.wrap.b32 	%r966, %r963, %r964, 19;
	mov.b64 	%rd1350, {%r966, %r965};
	shf.l.wrap.b32 	%r967, %r963, %r964, 3;
	shf.l.wrap.b32 	%r968, %r964, %r963, 3;
	mov.b64 	%rd1351, {%r968, %r967};
	shr.u64 	%rd1352, %rd9622, 6;
	xor.b64  	%rd1353, %rd1350, %rd1352;
	xor.b64  	%rd1354, %rd1353, %rd1351;
	shr.u64 	%rd1355, %rd9619, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd9619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd9619;
	}
	shf.r.wrap.b32 	%r971, %r970, %r969, 1;
	shf.r.wrap.b32 	%r972, %r969, %r970, 1;
	mov.b64 	%rd1356, {%r972, %r971};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.r.wrap.b32 	%r973, %r970, %r969, 8;
	shf.r.wrap.b32 	%r974, %r969, %r970, 8;
	mov.b64 	%rd1358, {%r974, %r973};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	add.s64 	%rd1360, %rd9638, %rd9620;
	add.s64 	%rd1361, %rd1360, %rd1354;
	add.s64 	%rd9620, %rd1361, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd9621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd9621;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 19;
	shf.r.wrap.b32 	%r978, %r975, %r976, 19;
	mov.b64 	%rd1362, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 3;
	shf.l.wrap.b32 	%r980, %r976, %r975, 3;
	mov.b64 	%rd1363, {%r980, %r979};
	shr.u64 	%rd1364, %rd9621, 6;
	xor.b64  	%rd1365, %rd1362, %rd1364;
	xor.b64  	%rd1366, %rd1365, %rd1363;
	shr.u64 	%rd1367, %rd9618, 7;
	shf.r.wrap.b32 	%r981, %r820, %r819, 1;
	shf.r.wrap.b32 	%r982, %r819, %r820, 1;
	mov.b64 	%rd1368, {%r982, %r981};
	xor.b64  	%rd1369, %rd1368, %rd1367;
	shf.r.wrap.b32 	%r983, %r820, %r819, 8;
	shf.r.wrap.b32 	%r984, %r819, %r820, 8;
	mov.b64 	%rd1370, {%r984, %r983};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	add.s64 	%rd1372, %rd9639, %rd9619;
	add.s64 	%rd1373, %rd1372, %rd1366;
	add.s64 	%rd9619, %rd1373, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd9620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd9620;
	}
	shf.r.wrap.b32 	%r987, %r986, %r985, 19;
	shf.r.wrap.b32 	%r988, %r985, %r986, 19;
	mov.b64 	%rd1374, {%r988, %r987};
	shf.l.wrap.b32 	%r989, %r985, %r986, 3;
	shf.l.wrap.b32 	%r990, %r986, %r985, 3;
	mov.b64 	%rd1375, {%r990, %r989};
	shr.u64 	%rd1376, %rd9620, 6;
	xor.b64  	%rd1377, %rd1374, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1375;
	shr.u64 	%rd1379, %rd9617, 7;
	shf.r.wrap.b32 	%r991, %r832, %r831, 1;
	shf.r.wrap.b32 	%r992, %r831, %r832, 1;
	mov.b64 	%rd1380, {%r992, %r991};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.r.wrap.b32 	%r993, %r832, %r831, 8;
	shf.r.wrap.b32 	%r994, %r831, %r832, 8;
	mov.b64 	%rd1382, {%r994, %r993};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	add.s64 	%rd1384, %rd9640, %rd9618;
	add.s64 	%rd1385, %rd1384, %rd1378;
	add.s64 	%rd9618, %rd1385, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd9619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd9619;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 19;
	shf.r.wrap.b32 	%r998, %r995, %r996, 19;
	mov.b64 	%rd1386, {%r998, %r997};
	shf.l.wrap.b32 	%r999, %r995, %r996, 3;
	shf.l.wrap.b32 	%r1000, %r996, %r995, 3;
	mov.b64 	%rd1387, {%r1000, %r999};
	shr.u64 	%rd1388, %rd9619, 6;
	xor.b64  	%rd1389, %rd1386, %rd1388;
	xor.b64  	%rd1390, %rd1389, %rd1387;
	shf.r.wrap.b32 	%r1001, %r844, %r843, 1;
	shf.r.wrap.b32 	%r1002, %r843, %r844, 1;
	mov.b64 	%rd1391, {%r1002, %r1001};
	shf.r.wrap.b32 	%r1003, %r844, %r843, 8;
	shf.r.wrap.b32 	%r1004, %r843, %r844, 8;
	mov.b64 	%rd1392, {%r1004, %r1003};
	shr.u64 	%rd1393, %rd9633, 7;
	xor.b64  	%rd1394, %rd1391, %rd1393;
	xor.b64  	%rd1395, %rd1394, %rd1392;
	add.s64 	%rd1396, %rd9624, %rd9617;
	add.s64 	%rd1397, %rd1396, %rd1390;
	add.s64 	%rd9617, %rd1397, %rd1395;
	mul.wide.s32 	%rd1398, %r7371, 8;
	mov.u64 	%rd1399, k_sha512;
	add.s64 	%rd1400, %rd1399, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd9629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1006}, %rd9629;
	}
	shf.r.wrap.b32 	%r1007, %r1006, %r1005, 18;
	shf.r.wrap.b32 	%r1008, %r1005, %r1006, 18;
	mov.b64 	%rd1401, {%r1008, %r1007};
	shf.r.wrap.b32 	%r1009, %r1006, %r1005, 14;
	shf.r.wrap.b32 	%r1010, %r1005, %r1006, 14;
	mov.b64 	%rd1402, {%r1010, %r1009};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	shf.l.wrap.b32 	%r1011, %r1005, %r1006, 23;
	shf.l.wrap.b32 	%r1012, %r1006, %r1005, 23;
	mov.b64 	%rd1404, {%r1012, %r1011};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	xor.b64  	%rd1406, %rd9631, %rd9630;
	and.b64  	%rd1407, %rd1406, %rd9629;
	xor.b64  	%rd1408, %rd1407, %rd9631;
	add.s64 	%rd1409, %rd1408, %rd9632;
	add.s64 	%rd1410, %rd1409, %rd9633;
	ld.const.u64 	%rd1411, [%rd1400];
	add.s64 	%rd1412, %rd1410, %rd1411;
	add.s64 	%rd1413, %rd1412, %rd1405;
	add.s64 	%rd1414, %rd1413, %rd9628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1013}, %rd9625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd9625;
	}
	shf.l.wrap.b32 	%r1015, %r1014, %r1013, 30;
	shf.l.wrap.b32 	%r1016, %r1013, %r1014, 30;
	mov.b64 	%rd1415, {%r1016, %r1015};
	shf.r.wrap.b32 	%r1017, %r1013, %r1014, 28;
	shf.r.wrap.b32 	%r1018, %r1014, %r1013, 28;
	mov.b64 	%rd1416, {%r1018, %r1017};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	shf.l.wrap.b32 	%r1019, %r1014, %r1013, 25;
	shf.l.wrap.b32 	%r1020, %r1013, %r1014, 25;
	mov.b64 	%rd1418, {%r1020, %r1019};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	xor.b64  	%rd1420, %rd9626, %rd9625;
	and.b64  	%rd1421, %rd1420, %rd9627;
	and.b64  	%rd1422, %rd9626, %rd9625;
	or.b64  	%rd1423, %rd1421, %rd1422;
	add.s64 	%rd1424, %rd1413, %rd1423;
	add.s64 	%rd1425, %rd1424, %rd1419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd1414;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 14;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 14;
	mov.b64 	%rd1426, {%r1024, %r1023};
	shf.r.wrap.b32 	%r1025, %r1022, %r1021, 18;
	shf.r.wrap.b32 	%r1026, %r1021, %r1022, 18;
	mov.b64 	%rd1427, {%r1026, %r1025};
	xor.b64  	%rd1428, %rd1427, %rd1426;
	shf.l.wrap.b32 	%r1027, %r1021, %r1022, 23;
	shf.l.wrap.b32 	%r1028, %r1022, %r1021, 23;
	mov.b64 	%rd1429, {%r1028, %r1027};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	xor.b64  	%rd1431, %rd9630, %rd9629;
	and.b64  	%rd1432, %rd1414, %rd1431;
	xor.b64  	%rd1433, %rd1432, %rd9630;
	add.s64 	%rd1434, %rd9634, %rd9631;
	ld.const.u64 	%rd1435, [%rd1400+8];
	add.s64 	%rd1436, %rd1434, %rd1435;
	add.s64 	%rd1437, %rd1436, %rd1433;
	add.s64 	%rd1438, %rd1437, %rd1430;
	add.s64 	%rd1439, %rd1438, %rd9627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd1425;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 28;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 28;
	mov.b64 	%rd1440, {%r1032, %r1031};
	shf.l.wrap.b32 	%r1033, %r1029, %r1030, 30;
	shf.l.wrap.b32 	%r1034, %r1030, %r1029, 30;
	mov.b64 	%rd1441, {%r1034, %r1033};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	shf.l.wrap.b32 	%r1035, %r1029, %r1030, 25;
	shf.l.wrap.b32 	%r1036, %r1030, %r1029, 25;
	mov.b64 	%rd1443, {%r1036, %r1035};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	and.b64  	%rd1445, %rd1425, %rd9625;
	xor.b64  	%rd1446, %rd1425, %rd9625;
	and.b64  	%rd1447, %rd1446, %rd9626;
	or.b64  	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd1438, %rd1448;
	add.s64 	%rd1450, %rd1449, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd1439;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 14;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 14;
	mov.b64 	%rd1451, {%r1040, %r1039};
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 18;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 18;
	mov.b64 	%rd1452, {%r1042, %r1041};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shf.l.wrap.b32 	%r1043, %r1037, %r1038, 23;
	shf.l.wrap.b32 	%r1044, %r1038, %r1037, 23;
	mov.b64 	%rd1454, {%r1044, %r1043};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1414, %rd9629;
	and.b64  	%rd1457, %rd1439, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd9629;
	add.s64 	%rd1459, %rd9635, %rd9630;
	ld.const.u64 	%rd1460, [%rd1400+16];
	add.s64 	%rd1461, %rd1459, %rd1460;
	add.s64 	%rd1462, %rd1461, %rd1458;
	add.s64 	%rd1463, %rd1462, %rd1455;
	add.s64 	%rd1464, %rd1463, %rd9626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd1450;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 28;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 28;
	mov.b64 	%rd1465, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 30;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 30;
	mov.b64 	%rd1466, {%r1050, %r1049};
	xor.b64  	%rd1467, %rd1466, %rd1465;
	shf.l.wrap.b32 	%r1051, %r1045, %r1046, 25;
	shf.l.wrap.b32 	%r1052, %r1046, %r1045, 25;
	mov.b64 	%rd1468, {%r1052, %r1051};
	xor.b64  	%rd1469, %rd1467, %rd1468;
	and.b64  	%rd1470, %rd1450, %rd1425;
	xor.b64  	%rd1471, %rd1450, %rd1425;
	and.b64  	%rd1472, %rd1471, %rd9625;
	or.b64  	%rd1473, %rd1472, %rd1470;
	add.s64 	%rd1474, %rd1463, %rd1473;
	add.s64 	%rd1475, %rd1474, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1054}, %rd1464;
	}
	shf.r.wrap.b32 	%r1055, %r1054, %r1053, 14;
	shf.r.wrap.b32 	%r1056, %r1053, %r1054, 14;
	mov.b64 	%rd1476, {%r1056, %r1055};
	shf.r.wrap.b32 	%r1057, %r1054, %r1053, 18;
	shf.r.wrap.b32 	%r1058, %r1053, %r1054, 18;
	mov.b64 	%rd1477, {%r1058, %r1057};
	xor.b64  	%rd1478, %rd1477, %rd1476;
	shf.l.wrap.b32 	%r1059, %r1053, %r1054, 23;
	shf.l.wrap.b32 	%r1060, %r1054, %r1053, 23;
	mov.b64 	%rd1479, {%r1060, %r1059};
	xor.b64  	%rd1480, %rd1478, %rd1479;
	xor.b64  	%rd1481, %rd1439, %rd1414;
	and.b64  	%rd1482, %rd1464, %rd1481;
	xor.b64  	%rd1483, %rd1482, %rd1414;
	add.s64 	%rd1484, %rd9636, %rd9629;
	ld.const.u64 	%rd1485, [%rd1400+24];
	add.s64 	%rd1486, %rd1484, %rd1485;
	add.s64 	%rd1487, %rd1486, %rd1483;
	add.s64 	%rd1488, %rd1487, %rd1480;
	add.s64 	%rd1489, %rd1488, %rd9625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1475;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 28;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 28;
	mov.b64 	%rd1490, {%r1064, %r1063};
	shf.l.wrap.b32 	%r1065, %r1061, %r1062, 30;
	shf.l.wrap.b32 	%r1066, %r1062, %r1061, 30;
	mov.b64 	%rd1491, {%r1066, %r1065};
	xor.b64  	%rd1492, %rd1491, %rd1490;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 25;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 25;
	mov.b64 	%rd1493, {%r1068, %r1067};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	and.b64  	%rd1495, %rd1475, %rd1450;
	xor.b64  	%rd1496, %rd1475, %rd1450;
	and.b64  	%rd1497, %rd1496, %rd1425;
	or.b64  	%rd1498, %rd1497, %rd1495;
	add.s64 	%rd1499, %rd1488, %rd1498;
	add.s64 	%rd1500, %rd1499, %rd1494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1489;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 14;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 14;
	mov.b64 	%rd1501, {%r1072, %r1071};
	shf.r.wrap.b32 	%r1073, %r1070, %r1069, 18;
	shf.r.wrap.b32 	%r1074, %r1069, %r1070, 18;
	mov.b64 	%rd1502, {%r1074, %r1073};
	xor.b64  	%rd1503, %rd1502, %rd1501;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 23;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 23;
	mov.b64 	%rd1504, {%r1076, %r1075};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	xor.b64  	%rd1506, %rd1464, %rd1439;
	and.b64  	%rd1507, %rd1489, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1439;
	add.s64 	%rd1509, %rd1414, %rd9637;
	ld.const.u64 	%rd1510, [%rd1400+32];
	add.s64 	%rd1511, %rd1509, %rd1510;
	add.s64 	%rd1512, %rd1511, %rd1508;
	add.s64 	%rd1513, %rd1512, %rd1505;
	add.s64 	%rd1514, %rd1513, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1500;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 28;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 28;
	mov.b64 	%rd1515, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 30;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 30;
	mov.b64 	%rd1516, {%r1082, %r1081};
	xor.b64  	%rd1517, %rd1516, %rd1515;
	shf.l.wrap.b32 	%r1083, %r1077, %r1078, 25;
	shf.l.wrap.b32 	%r1084, %r1078, %r1077, 25;
	mov.b64 	%rd1518, {%r1084, %r1083};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	and.b64  	%rd1520, %rd1500, %rd1475;
	xor.b64  	%rd1521, %rd1500, %rd1475;
	and.b64  	%rd1522, %rd1521, %rd1450;
	or.b64  	%rd1523, %rd1522, %rd1520;
	add.s64 	%rd1524, %rd1513, %rd1523;
	add.s64 	%rd1525, %rd1524, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd1514;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 14;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 14;
	mov.b64 	%rd1526, {%r1088, %r1087};
	shf.r.wrap.b32 	%r1089, %r1086, %r1085, 18;
	shf.r.wrap.b32 	%r1090, %r1085, %r1086, 18;
	mov.b64 	%rd1527, {%r1090, %r1089};
	xor.b64  	%rd1528, %rd1527, %rd1526;
	shf.l.wrap.b32 	%r1091, %r1085, %r1086, 23;
	shf.l.wrap.b32 	%r1092, %r1086, %r1085, 23;
	mov.b64 	%rd1529, {%r1092, %r1091};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	xor.b64  	%rd1531, %rd1489, %rd1464;
	and.b64  	%rd1532, %rd1514, %rd1531;
	xor.b64  	%rd1533, %rd1532, %rd1464;
	add.s64 	%rd1534, %rd1439, %rd9638;
	ld.const.u64 	%rd1535, [%rd1400+40];
	add.s64 	%rd1536, %rd1534, %rd1535;
	add.s64 	%rd1537, %rd1536, %rd1533;
	add.s64 	%rd1538, %rd1537, %rd1530;
	add.s64 	%rd1539, %rd1538, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1525;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 28;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 28;
	mov.b64 	%rd1540, {%r1096, %r1095};
	shf.l.wrap.b32 	%r1097, %r1093, %r1094, 30;
	shf.l.wrap.b32 	%r1098, %r1094, %r1093, 30;
	mov.b64 	%rd1541, {%r1098, %r1097};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	shf.l.wrap.b32 	%r1099, %r1093, %r1094, 25;
	shf.l.wrap.b32 	%r1100, %r1094, %r1093, 25;
	mov.b64 	%rd1543, {%r1100, %r1099};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	and.b64  	%rd1545, %rd1525, %rd1500;
	xor.b64  	%rd1546, %rd1525, %rd1500;
	and.b64  	%rd1547, %rd1546, %rd1475;
	or.b64  	%rd1548, %rd1547, %rd1545;
	add.s64 	%rd1549, %rd1538, %rd1548;
	add.s64 	%rd1550, %rd1549, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1539;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 14;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 14;
	mov.b64 	%rd1551, {%r1104, %r1103};
	shf.r.wrap.b32 	%r1105, %r1102, %r1101, 18;
	shf.r.wrap.b32 	%r1106, %r1101, %r1102, 18;
	mov.b64 	%rd1552, {%r1106, %r1105};
	xor.b64  	%rd1553, %rd1552, %rd1551;
	shf.l.wrap.b32 	%r1107, %r1101, %r1102, 23;
	shf.l.wrap.b32 	%r1108, %r1102, %r1101, 23;
	mov.b64 	%rd1554, {%r1108, %r1107};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	xor.b64  	%rd1556, %rd1514, %rd1489;
	and.b64  	%rd1557, %rd1539, %rd1556;
	xor.b64  	%rd1558, %rd1557, %rd1489;
	add.s64 	%rd1559, %rd1464, %rd9639;
	ld.const.u64 	%rd1560, [%rd1400+48];
	add.s64 	%rd1561, %rd1559, %rd1560;
	add.s64 	%rd1562, %rd1561, %rd1558;
	add.s64 	%rd1563, %rd1562, %rd1555;
	add.s64 	%rd1564, %rd1563, %rd1475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1550;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 28;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 28;
	mov.b64 	%rd1565, {%r1112, %r1111};
	shf.l.wrap.b32 	%r1113, %r1109, %r1110, 30;
	shf.l.wrap.b32 	%r1114, %r1110, %r1109, 30;
	mov.b64 	%rd1566, {%r1114, %r1113};
	xor.b64  	%rd1567, %rd1566, %rd1565;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 25;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 25;
	mov.b64 	%rd1568, {%r1116, %r1115};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	and.b64  	%rd1570, %rd1550, %rd1525;
	xor.b64  	%rd1571, %rd1550, %rd1525;
	and.b64  	%rd1572, %rd1571, %rd1500;
	or.b64  	%rd1573, %rd1572, %rd1570;
	add.s64 	%rd1574, %rd1563, %rd1573;
	add.s64 	%rd1575, %rd1574, %rd1569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1564;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 14;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 14;
	mov.b64 	%rd1576, {%r1120, %r1119};
	shf.r.wrap.b32 	%r1121, %r1118, %r1117, 18;
	shf.r.wrap.b32 	%r1122, %r1117, %r1118, 18;
	mov.b64 	%rd1577, {%r1122, %r1121};
	xor.b64  	%rd1578, %rd1577, %rd1576;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 23;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 23;
	mov.b64 	%rd1579, {%r1124, %r1123};
	xor.b64  	%rd1580, %rd1578, %rd1579;
	xor.b64  	%rd1581, %rd1539, %rd1514;
	and.b64  	%rd1582, %rd1564, %rd1581;
	xor.b64  	%rd1583, %rd1582, %rd1514;
	add.s64 	%rd1584, %rd1489, %rd9640;
	ld.const.u64 	%rd1585, [%rd1400+56];
	add.s64 	%rd1586, %rd1584, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd1583;
	add.s64 	%rd1588, %rd1587, %rd1580;
	add.s64 	%rd1589, %rd1588, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1575;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 28;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 28;
	mov.b64 	%rd1590, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 30;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 30;
	mov.b64 	%rd1591, {%r1130, %r1129};
	xor.b64  	%rd1592, %rd1591, %rd1590;
	shf.l.wrap.b32 	%r1131, %r1125, %r1126, 25;
	shf.l.wrap.b32 	%r1132, %r1126, %r1125, 25;
	mov.b64 	%rd1593, {%r1132, %r1131};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	and.b64  	%rd1595, %rd1575, %rd1550;
	xor.b64  	%rd1596, %rd1575, %rd1550;
	and.b64  	%rd1597, %rd1596, %rd1525;
	or.b64  	%rd1598, %rd1597, %rd1595;
	add.s64 	%rd1599, %rd1588, %rd1598;
	add.s64 	%rd1600, %rd1599, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1589;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 14;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 14;
	mov.b64 	%rd1601, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r1134, %r1133, 18;
	shf.r.wrap.b32 	%r1138, %r1133, %r1134, 18;
	mov.b64 	%rd1602, {%r1138, %r1137};
	xor.b64  	%rd1603, %rd1602, %rd1601;
	shf.l.wrap.b32 	%r1139, %r1133, %r1134, 23;
	shf.l.wrap.b32 	%r1140, %r1134, %r1133, 23;
	mov.b64 	%rd1604, {%r1140, %r1139};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	xor.b64  	%rd1606, %rd1564, %rd1539;
	and.b64  	%rd1607, %rd1589, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1539;
	add.s64 	%rd1609, %rd1514, %rd9624;
	ld.const.u64 	%rd1610, [%rd1400+64];
	add.s64 	%rd1611, %rd1609, %rd1610;
	add.s64 	%rd1612, %rd1611, %rd1608;
	add.s64 	%rd1613, %rd1612, %rd1605;
	add.s64 	%rd1614, %rd1613, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1600;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 28;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 28;
	mov.b64 	%rd1615, {%r1144, %r1143};
	shf.l.wrap.b32 	%r1145, %r1141, %r1142, 30;
	shf.l.wrap.b32 	%r1146, %r1142, %r1141, 30;
	mov.b64 	%rd1616, {%r1146, %r1145};
	xor.b64  	%rd1617, %rd1616, %rd1615;
	shf.l.wrap.b32 	%r1147, %r1141, %r1142, 25;
	shf.l.wrap.b32 	%r1148, %r1142, %r1141, 25;
	mov.b64 	%rd1618, {%r1148, %r1147};
	xor.b64  	%rd1619, %rd1617, %rd1618;
	and.b64  	%rd1620, %rd1600, %rd1575;
	xor.b64  	%rd1621, %rd1600, %rd1575;
	and.b64  	%rd1622, %rd1621, %rd1550;
	or.b64  	%rd1623, %rd1622, %rd1620;
	add.s64 	%rd1624, %rd1613, %rd1623;
	add.s64 	%rd1625, %rd1624, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1614;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 14;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 14;
	mov.b64 	%rd1626, {%r1152, %r1151};
	shf.r.wrap.b32 	%r1153, %r1150, %r1149, 18;
	shf.r.wrap.b32 	%r1154, %r1149, %r1150, 18;
	mov.b64 	%rd1627, {%r1154, %r1153};
	xor.b64  	%rd1628, %rd1627, %rd1626;
	shf.l.wrap.b32 	%r1155, %r1149, %r1150, 23;
	shf.l.wrap.b32 	%r1156, %r1150, %r1149, 23;
	mov.b64 	%rd1629, {%r1156, %r1155};
	xor.b64  	%rd1630, %rd1628, %rd1629;
	xor.b64  	%rd1631, %rd1589, %rd1564;
	and.b64  	%rd1632, %rd1614, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd1564;
	add.s64 	%rd1634, %rd1539, %rd9623;
	ld.const.u64 	%rd1635, [%rd1400+72];
	add.s64 	%rd1636, %rd1634, %rd1635;
	add.s64 	%rd1637, %rd1636, %rd1633;
	add.s64 	%rd1638, %rd1637, %rd1630;
	add.s64 	%rd1639, %rd1638, %rd1550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1625;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 28;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 28;
	mov.b64 	%rd1640, {%r1160, %r1159};
	shf.l.wrap.b32 	%r1161, %r1157, %r1158, 30;
	shf.l.wrap.b32 	%r1162, %r1158, %r1157, 30;
	mov.b64 	%rd1641, {%r1162, %r1161};
	xor.b64  	%rd1642, %rd1641, %rd1640;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 25;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 25;
	mov.b64 	%rd1643, {%r1164, %r1163};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	and.b64  	%rd1645, %rd1625, %rd1600;
	xor.b64  	%rd1646, %rd1625, %rd1600;
	and.b64  	%rd1647, %rd1646, %rd1575;
	or.b64  	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1638, %rd1648;
	add.s64 	%rd1650, %rd1649, %rd1644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1639;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 14;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 14;
	mov.b64 	%rd1651, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r1166, %r1165, 18;
	shf.r.wrap.b32 	%r1170, %r1165, %r1166, 18;
	mov.b64 	%rd1652, {%r1170, %r1169};
	xor.b64  	%rd1653, %rd1652, %rd1651;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 23;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 23;
	mov.b64 	%rd1654, {%r1172, %r1171};
	xor.b64  	%rd1655, %rd1653, %rd1654;
	xor.b64  	%rd1656, %rd1614, %rd1589;
	and.b64  	%rd1657, %rd1639, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1589;
	add.s64 	%rd1659, %rd1564, %rd9622;
	ld.const.u64 	%rd1660, [%rd1400+80];
	add.s64 	%rd1661, %rd1659, %rd1660;
	add.s64 	%rd1662, %rd1661, %rd1658;
	add.s64 	%rd1663, %rd1662, %rd1655;
	add.s64 	%rd1664, %rd1663, %rd1575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1650;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 28;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 28;
	mov.b64 	%rd1665, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 30;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 30;
	mov.b64 	%rd1666, {%r1178, %r1177};
	xor.b64  	%rd1667, %rd1666, %rd1665;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 25;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 25;
	mov.b64 	%rd1668, {%r1180, %r1179};
	xor.b64  	%rd1669, %rd1667, %rd1668;
	and.b64  	%rd1670, %rd1650, %rd1625;
	xor.b64  	%rd1671, %rd1650, %rd1625;
	and.b64  	%rd1672, %rd1671, %rd1600;
	or.b64  	%rd1673, %rd1672, %rd1670;
	add.s64 	%rd1674, %rd1663, %rd1673;
	add.s64 	%rd1675, %rd1674, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1664;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 14;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 14;
	mov.b64 	%rd1676, {%r1184, %r1183};
	shf.r.wrap.b32 	%r1185, %r1182, %r1181, 18;
	shf.r.wrap.b32 	%r1186, %r1181, %r1182, 18;
	mov.b64 	%rd1677, {%r1186, %r1185};
	xor.b64  	%rd1678, %rd1677, %rd1676;
	shf.l.wrap.b32 	%r1187, %r1181, %r1182, 23;
	shf.l.wrap.b32 	%r1188, %r1182, %r1181, 23;
	mov.b64 	%rd1679, {%r1188, %r1187};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	xor.b64  	%rd1681, %rd1639, %rd1614;
	and.b64  	%rd1682, %rd1664, %rd1681;
	xor.b64  	%rd1683, %rd1682, %rd1614;
	add.s64 	%rd1684, %rd1589, %rd9621;
	ld.const.u64 	%rd1685, [%rd1400+88];
	add.s64 	%rd1686, %rd1684, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1683;
	add.s64 	%rd1688, %rd1687, %rd1680;
	add.s64 	%rd1689, %rd1688, %rd1600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1675;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 28;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 28;
	mov.b64 	%rd1690, {%r1192, %r1191};
	shf.l.wrap.b32 	%r1193, %r1189, %r1190, 30;
	shf.l.wrap.b32 	%r1194, %r1190, %r1189, 30;
	mov.b64 	%rd1691, {%r1194, %r1193};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 25;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 25;
	mov.b64 	%rd1693, {%r1196, %r1195};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	and.b64  	%rd1695, %rd1675, %rd1650;
	xor.b64  	%rd1696, %rd1675, %rd1650;
	and.b64  	%rd1697, %rd1696, %rd1625;
	or.b64  	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1688, %rd1698;
	add.s64 	%rd1700, %rd1699, %rd1694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1689;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 14;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 14;
	mov.b64 	%rd1701, {%r1200, %r1199};
	shf.r.wrap.b32 	%r1201, %r1198, %r1197, 18;
	shf.r.wrap.b32 	%r1202, %r1197, %r1198, 18;
	mov.b64 	%rd1702, {%r1202, %r1201};
	xor.b64  	%rd1703, %rd1702, %rd1701;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 23;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 23;
	mov.b64 	%rd1704, {%r1204, %r1203};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	xor.b64  	%rd1706, %rd1664, %rd1639;
	and.b64  	%rd1707, %rd1689, %rd1706;
	xor.b64  	%rd1708, %rd1707, %rd1639;
	add.s64 	%rd1709, %rd1614, %rd9620;
	ld.const.u64 	%rd1710, [%rd1400+96];
	add.s64 	%rd1711, %rd1709, %rd1710;
	add.s64 	%rd1712, %rd1711, %rd1708;
	add.s64 	%rd1713, %rd1712, %rd1705;
	add.s64 	%rd9632, %rd1713, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1700;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 28;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 28;
	mov.b64 	%rd1714, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 30;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 30;
	mov.b64 	%rd1715, {%r1210, %r1209};
	xor.b64  	%rd1716, %rd1715, %rd1714;
	shf.l.wrap.b32 	%r1211, %r1205, %r1206, 25;
	shf.l.wrap.b32 	%r1212, %r1206, %r1205, 25;
	mov.b64 	%rd1717, {%r1212, %r1211};
	xor.b64  	%rd1718, %rd1716, %rd1717;
	and.b64  	%rd1719, %rd1700, %rd1675;
	xor.b64  	%rd1720, %rd1700, %rd1675;
	and.b64  	%rd1721, %rd1720, %rd1650;
	or.b64  	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1713, %rd1722;
	add.s64 	%rd9628, %rd1723, %rd1718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd9632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd9632;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 14;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 14;
	mov.b64 	%rd1724, {%r1216, %r1215};
	shf.r.wrap.b32 	%r1217, %r1214, %r1213, 18;
	shf.r.wrap.b32 	%r1218, %r1213, %r1214, 18;
	mov.b64 	%rd1725, {%r1218, %r1217};
	xor.b64  	%rd1726, %rd1725, %rd1724;
	shf.l.wrap.b32 	%r1219, %r1213, %r1214, 23;
	shf.l.wrap.b32 	%r1220, %r1214, %r1213, 23;
	mov.b64 	%rd1727, {%r1220, %r1219};
	xor.b64  	%rd1728, %rd1726, %rd1727;
	xor.b64  	%rd1729, %rd1689, %rd1664;
	and.b64  	%rd1730, %rd9632, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1664;
	add.s64 	%rd1732, %rd1639, %rd9619;
	ld.const.u64 	%rd1733, [%rd1400+104];
	add.s64 	%rd1734, %rd1732, %rd1733;
	add.s64 	%rd1735, %rd1734, %rd1731;
	add.s64 	%rd1736, %rd1735, %rd1728;
	add.s64 	%rd9631, %rd1736, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd9628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd9628;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 28;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 28;
	mov.b64 	%rd1737, {%r1224, %r1223};
	shf.l.wrap.b32 	%r1225, %r1221, %r1222, 30;
	shf.l.wrap.b32 	%r1226, %r1222, %r1221, 30;
	mov.b64 	%rd1738, {%r1226, %r1225};
	xor.b64  	%rd1739, %rd1738, %rd1737;
	shf.l.wrap.b32 	%r1227, %r1221, %r1222, 25;
	shf.l.wrap.b32 	%r1228, %r1222, %r1221, 25;
	mov.b64 	%rd1740, {%r1228, %r1227};
	xor.b64  	%rd1741, %rd1739, %rd1740;
	and.b64  	%rd1742, %rd9628, %rd1700;
	xor.b64  	%rd1743, %rd9628, %rd1700;
	and.b64  	%rd1744, %rd1743, %rd1675;
	or.b64  	%rd1745, %rd1744, %rd1742;
	add.s64 	%rd1746, %rd1736, %rd1745;
	add.s64 	%rd9627, %rd1746, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd9631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd9631;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 14;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 14;
	mov.b64 	%rd1747, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1230, %r1229, 18;
	shf.r.wrap.b32 	%r1234, %r1229, %r1230, 18;
	mov.b64 	%rd1748, {%r1234, %r1233};
	xor.b64  	%rd1749, %rd1748, %rd1747;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 23;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 23;
	mov.b64 	%rd1750, {%r1236, %r1235};
	xor.b64  	%rd1751, %rd1749, %rd1750;
	xor.b64  	%rd1752, %rd9632, %rd1689;
	and.b64  	%rd1753, %rd9631, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1689;
	add.s64 	%rd1755, %rd1664, %rd9618;
	ld.const.u64 	%rd1756, [%rd1400+112];
	add.s64 	%rd1757, %rd1755, %rd1756;
	add.s64 	%rd1758, %rd1757, %rd1754;
	add.s64 	%rd1759, %rd1758, %rd1751;
	add.s64 	%rd9630, %rd1759, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd9627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd9627;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 28;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 28;
	mov.b64 	%rd1760, {%r1240, %r1239};
	shf.l.wrap.b32 	%r1241, %r1237, %r1238, 30;
	shf.l.wrap.b32 	%r1242, %r1238, %r1237, 30;
	mov.b64 	%rd1761, {%r1242, %r1241};
	xor.b64  	%rd1762, %rd1761, %rd1760;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 25;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 25;
	mov.b64 	%rd1763, {%r1244, %r1243};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	and.b64  	%rd1765, %rd9627, %rd9628;
	xor.b64  	%rd1766, %rd9627, %rd9628;
	and.b64  	%rd1767, %rd1766, %rd1700;
	or.b64  	%rd1768, %rd1767, %rd1765;
	add.s64 	%rd1769, %rd1759, %rd1768;
	add.s64 	%rd9626, %rd1769, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd9630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd9630;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd1770, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd1771, {%r1250, %r1249};
	xor.b64  	%rd1772, %rd1771, %rd1770;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd1773, {%r1252, %r1251};
	xor.b64  	%rd1774, %rd1772, %rd1773;
	xor.b64  	%rd1775, %rd9631, %rd9632;
	and.b64  	%rd1776, %rd9630, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd9632;
	add.s64 	%rd1778, %rd1689, %rd9617;
	ld.const.u64 	%rd1779, [%rd1400+120];
	add.s64 	%rd1780, %rd1778, %rd1779;
	add.s64 	%rd1781, %rd1780, %rd1777;
	add.s64 	%rd1782, %rd1781, %rd1774;
	add.s64 	%rd9629, %rd1782, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd9626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd9626;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd1783, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd1784, {%r1258, %r1257};
	xor.b64  	%rd1785, %rd1784, %rd1783;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd1786, {%r1260, %r1259};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	and.b64  	%rd1788, %rd9626, %rd9627;
	xor.b64  	%rd1789, %rd9626, %rd9627;
	and.b64  	%rd1790, %rd1789, %rd9628;
	or.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1782, %rd1791;
	add.s64 	%rd9625, %rd1792, %rd1787;
	add.s32 	%r7371, %r7371, 16;
	setp.lt.s32	%p6, %r7371, 80;
	@%p6 bra 	BB3_10;

	mov.u32 	%r7373, 0;
	add.s64 	%rd41, %rd9625, %rd41;
	add.s64 	%rd40, %rd9626, %rd40;
	add.s64 	%rd39, %rd9627, %rd39;
	add.s64 	%rd38, %rd9628, %rd38;
	add.s64 	%rd37, %rd9629, %rd37;
	add.s64 	%rd36, %rd9630, %rd36;
	add.s64 	%rd35, %rd9631, %rd35;
	add.s64 	%rd34, %rd9632, %rd34;

BB3_12:
	mov.u32 	%r7374, %r7373;
	mov.u32 	%r7375, %r7373;
	mov.u32 	%r7376, %r7373;
	mov.u32 	%r7377, %r7373;
	mov.u32 	%r7378, %r7373;
	mov.u32 	%r7379, %r7373;
	mov.u32 	%r7380, %r7373;
	mov.u32 	%r7381, %r7373;
	mov.u32 	%r7382, %r7373;
	mov.u32 	%r7383, %r7373;
	mov.u32 	%r7384, %r7373;
	mov.u32 	%r7385, %r7373;
	mov.u32 	%r7386, %r7373;
	mov.u32 	%r7387, %r7373;
	mov.u32 	%r7388, %r7373;
	mov.u32 	%r7389, %r7373;
	mov.u32 	%r7390, %r7373;
	mov.u32 	%r7391, %r7373;
	mov.u32 	%r7392, %r7373;
	mov.u32 	%r7393, %r7373;
	mov.u32 	%r7394, %r7373;
	mov.u32 	%r7395, %r7373;
	mov.u32 	%r7396, %r7373;
	mov.u32 	%r7397, %r7373;
	mov.u32 	%r7398, %r7373;
	mov.u32 	%r7399, %r7373;
	mov.u32 	%r7400, %r7373;
	mov.u32 	%r7401, %r7373;
	mov.u32 	%r7402, %r7373;
	mov.u32 	%r7403, %r7373;
	mov.u32 	%r7404, %r7373;
	bra.uni 	BB3_13;

BB3_8:
	mov.u32 	%r7373, %r527;

BB3_13:
	not.b32 	%r1293, %r2;
	bfe.u32 	%r1294, %r2, 2, 2;
	and.b32  	%r1295, %r1293, 3;
	shl.b32 	%r1296, %r1295, 3;
	mov.u32 	%r1297, 255;
	shl.b32 	%r1298, %r1297, %r1296;
	setp.eq.s32	%p7, %r1294, 0;
	selp.b32	%r1299, %r1298, 0, %p7;
	setp.eq.s32	%p8, %r1294, 1;
	selp.b32	%r1300, %r1298, 0, %p8;
	setp.eq.s32	%p9, %r1294, 2;
	selp.b32	%r1301, %r1298, 0, %p9;
	setp.eq.s32	%p10, %r1294, 3;
	selp.b32	%r1302, %r1298, 0, %p10;
	and.b32  	%r1303, %r2, 127;
	bfe.u32 	%r1304, %r2, 4, 3;
	setp.eq.s32	%p11, %r1304, 0;
	selp.b32	%r1305, -2139062144, 0, %p11;
	and.b32  	%r1306, %r1299, %r1305;
	or.b32  	%r7435, %r7404, %r1306;
	and.b32  	%r1307, %r1300, %r1305;
	or.b32  	%r7434, %r7403, %r1307;
	and.b32  	%r1308, %r1301, %r1305;
	or.b32  	%r7433, %r7402, %r1308;
	and.b32  	%r1309, %r1302, %r1305;
	or.b32  	%r7432, %r7401, %r1309;
	setp.eq.s32	%p12, %r1304, 1;
	selp.b32	%r1310, -2139062144, 0, %p12;
	and.b32  	%r1311, %r1299, %r1310;
	or.b32  	%r7431, %r7400, %r1311;
	and.b32  	%r1312, %r1300, %r1310;
	or.b32  	%r7430, %r7399, %r1312;
	and.b32  	%r1313, %r1301, %r1310;
	or.b32  	%r7429, %r7398, %r1313;
	and.b32  	%r1314, %r1302, %r1310;
	or.b32  	%r7428, %r7397, %r1314;
	setp.eq.s32	%p13, %r1304, 2;
	selp.b32	%r1315, -2139062144, 0, %p13;
	and.b32  	%r1316, %r1299, %r1315;
	or.b32  	%r7427, %r7396, %r1316;
	and.b32  	%r1317, %r1300, %r1315;
	or.b32  	%r7426, %r7395, %r1317;
	and.b32  	%r1318, %r1301, %r1315;
	or.b32  	%r7425, %r7394, %r1318;
	and.b32  	%r1319, %r1302, %r1315;
	or.b32  	%r7424, %r7393, %r1319;
	setp.eq.s32	%p14, %r1304, 3;
	selp.b32	%r1320, -2139062144, 0, %p14;
	and.b32  	%r1321, %r1299, %r1320;
	or.b32  	%r7423, %r7392, %r1321;
	and.b32  	%r1322, %r1300, %r1320;
	or.b32  	%r7422, %r7391, %r1322;
	and.b32  	%r1323, %r1301, %r1320;
	or.b32  	%r7421, %r7390, %r1323;
	and.b32  	%r1324, %r1302, %r1320;
	or.b32  	%r7420, %r7389, %r1324;
	setp.eq.s32	%p15, %r1304, 4;
	selp.b32	%r1325, -2139062144, 0, %p15;
	and.b32  	%r1326, %r1299, %r1325;
	or.b32  	%r7419, %r7388, %r1326;
	and.b32  	%r1327, %r1300, %r1325;
	or.b32  	%r7418, %r7387, %r1327;
	and.b32  	%r1328, %r1301, %r1325;
	or.b32  	%r7417, %r7386, %r1328;
	and.b32  	%r1329, %r1302, %r1325;
	or.b32  	%r7416, %r7385, %r1329;
	setp.eq.s32	%p16, %r1304, 5;
	selp.b32	%r1330, -2139062144, 0, %p16;
	and.b32  	%r1331, %r1299, %r1330;
	or.b32  	%r7415, %r7384, %r1331;
	and.b32  	%r1332, %r1300, %r1330;
	or.b32  	%r7414, %r7383, %r1332;
	and.b32  	%r1333, %r1301, %r1330;
	or.b32  	%r7413, %r7382, %r1333;
	and.b32  	%r1334, %r1302, %r1330;
	or.b32  	%r7412, %r7381, %r1334;
	setp.eq.s32	%p17, %r1304, 6;
	selp.b32	%r1335, -2139062144, 0, %p17;
	and.b32  	%r1336, %r1299, %r1335;
	or.b32  	%r7411, %r7380, %r1336;
	and.b32  	%r1337, %r1300, %r1335;
	or.b32  	%r7410, %r7379, %r1337;
	and.b32  	%r1338, %r1301, %r1335;
	or.b32  	%r7409, %r7378, %r1338;
	and.b32  	%r1339, %r1302, %r1335;
	or.b32  	%r7408, %r1339, %r7377;
	setp.eq.s32	%p18, %r1304, 7;
	selp.b32	%r1340, -2139062144, 0, %p18;
	and.b32  	%r1341, %r1299, %r1340;
	or.b32  	%r7407, %r1341, %r7376;
	and.b32  	%r1342, %r1300, %r1340;
	or.b32  	%r7406, %r1342, %r7375;
	and.b32  	%r1343, %r1301, %r1340;
	or.b32  	%r167, %r1343, %r7374;
	and.b32  	%r1344, %r1302, %r1340;
	or.b32  	%r168, %r1344, %r7373;
	setp.lt.u32	%p19, %r1303, 112;
	@%p19 bra 	BB3_17;

	ld.const.u64 	%rd9597, [k_sha512+72];
	ld.const.u64 	%rd9596, [k_sha512+64];
	ld.const.u64 	%rd9595, [k_sha512+56];
	ld.const.u64 	%rd9594, [k_sha512+48];
	ld.const.u64 	%rd9593, [k_sha512+40];
	ld.const.u64 	%rd9592, [k_sha512+32];
	ld.const.u64 	%rd9591, [k_sha512+24];
	ld.const.u64 	%rd9590, [k_sha512+16];
	mov.b64	%rd9666, {%r7434, %r7435};
	mov.b64	%rd9667, {%r7432, %r7433};
	mov.b64	%rd9668, {%r7430, %r7431};
	mov.b64	%rd9669, {%r7428, %r7429};
	mov.b64	%rd9670, {%r7426, %r7427};
	mov.b64	%rd9671, {%r7424, %r7425};
	mov.b64	%rd9672, {%r7422, %r7423};
	mov.b64	%rd9673, {%r7420, %r7421};
	mov.b64	%rd9657, {%r7418, %r7419};
	mov.b64	%rd9656, {%r7416, %r7417};
	mov.b64	%rd9655, {%r7414, %r7415};
	mov.b64	%rd9654, {%r7412, %r7413};
	mov.b64	%rd9653, {%r7410, %r7411};
	mov.b64	%rd9652, {%r7408, %r7409};
	mov.b64	%rd9651, {%r7406, %r7407};
	mov.b64	%rd9650, {%r168, %r167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1346,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd37;
	}
	shf.r.wrap.b32 	%r1348, %r1347, %r1346, 18;
	shf.r.wrap.b32 	%r1349, %r1346, %r1347, 18;
	mov.b64 	%rd1794, {%r1349, %r1348};
	shf.r.wrap.b32 	%r1350, %r1347, %r1346, 14;
	shf.r.wrap.b32 	%r1351, %r1346, %r1347, 14;
	mov.b64 	%rd1795, {%r1351, %r1350};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	shf.l.wrap.b32 	%r1352, %r1346, %r1347, 23;
	shf.l.wrap.b32 	%r1353, %r1347, %r1346, 23;
	mov.b64 	%rd1797, {%r1353, %r1352};
	xor.b64  	%rd1798, %rd1796, %rd1797;
	xor.b64  	%rd1799, %rd36, %rd35;
	and.b64  	%rd1800, %rd37, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd35;
	add.s64 	%rd1802, %rd9666, %rd34;
	add.s64 	%rd1803, %rd1802, %rd1801;
	add.s64 	%rd1804, %rd1803, %rd9722;
	add.s64 	%rd1805, %rd1804, %rd1798;
	add.s64 	%rd1806, %rd1805, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r1356, %r1355, %r1354, 30;
	shf.l.wrap.b32 	%r1357, %r1354, %r1355, 30;
	mov.b64 	%rd1807, {%r1357, %r1356};
	shf.r.wrap.b32 	%r1358, %r1354, %r1355, 28;
	shf.r.wrap.b32 	%r1359, %r1355, %r1354, 28;
	mov.b64 	%rd1808, {%r1359, %r1358};
	xor.b64  	%rd1809, %rd1807, %rd1808;
	shf.l.wrap.b32 	%r1360, %r1355, %r1354, 25;
	shf.l.wrap.b32 	%r1361, %r1354, %r1355, 25;
	mov.b64 	%rd1810, {%r1361, %r1360};
	xor.b64  	%rd1811, %rd1809, %rd1810;
	xor.b64  	%rd1812, %rd41, %rd40;
	and.b64  	%rd1813, %rd1812, %rd39;
	and.b64  	%rd1814, %rd41, %rd40;
	or.b64  	%rd1815, %rd1813, %rd1814;
	add.s64 	%rd1816, %rd1805, %rd1815;
	add.s64 	%rd1817, %rd1816, %rd1811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd1806;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 14;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 14;
	mov.b64 	%rd1818, {%r1365, %r1364};
	shf.r.wrap.b32 	%r1366, %r1363, %r1362, 18;
	shf.r.wrap.b32 	%r1367, %r1362, %r1363, 18;
	mov.b64 	%rd1819, {%r1367, %r1366};
	xor.b64  	%rd1820, %rd1819, %rd1818;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 23;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 23;
	mov.b64 	%rd1821, {%r1369, %r1368};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	xor.b64  	%rd1823, %rd37, %rd36;
	and.b64  	%rd1824, %rd1806, %rd1823;
	xor.b64  	%rd1825, %rd1824, %rd36;
	add.s64 	%rd1826, %rd9667, %rd35;
	add.s64 	%rd1827, %rd1826, %rd9721;
	add.s64 	%rd1828, %rd1827, %rd1825;
	add.s64 	%rd1829, %rd1828, %rd1822;
	add.s64 	%rd1830, %rd1829, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1817;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 28;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 28;
	mov.b64 	%rd1831, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 30;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 30;
	mov.b64 	%rd1832, {%r1375, %r1374};
	xor.b64  	%rd1833, %rd1832, %rd1831;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 25;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 25;
	mov.b64 	%rd1834, {%r1377, %r1376};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	and.b64  	%rd1836, %rd1817, %rd41;
	xor.b64  	%rd1837, %rd1817, %rd41;
	and.b64  	%rd1838, %rd1837, %rd40;
	or.b64  	%rd1839, %rd1838, %rd1836;
	add.s64 	%rd1840, %rd1829, %rd1839;
	add.s64 	%rd1841, %rd1840, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1830;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 14;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 14;
	mov.b64 	%rd1842, {%r1381, %r1380};
	shf.r.wrap.b32 	%r1382, %r1379, %r1378, 18;
	shf.r.wrap.b32 	%r1383, %r1378, %r1379, 18;
	mov.b64 	%rd1843, {%r1383, %r1382};
	xor.b64  	%rd1844, %rd1843, %rd1842;
	shf.l.wrap.b32 	%r1384, %r1378, %r1379, 23;
	shf.l.wrap.b32 	%r1385, %r1379, %r1378, 23;
	mov.b64 	%rd1845, {%r1385, %r1384};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	xor.b64  	%rd1847, %rd1806, %rd37;
	and.b64  	%rd1848, %rd1830, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd37;
	add.s64 	%rd1850, %rd36, %rd9668;
	add.s64 	%rd1851, %rd1850, %rd9590;
	add.s64 	%rd1852, %rd1851, %rd1849;
	add.s64 	%rd1853, %rd1852, %rd1846;
	add.s64 	%rd1854, %rd1853, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd1841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd1841;
	}
	shf.r.wrap.b32 	%r1388, %r1387, %r1386, 28;
	shf.r.wrap.b32 	%r1389, %r1386, %r1387, 28;
	mov.b64 	%rd1855, {%r1389, %r1388};
	shf.l.wrap.b32 	%r1390, %r1386, %r1387, 30;
	shf.l.wrap.b32 	%r1391, %r1387, %r1386, 30;
	mov.b64 	%rd1856, {%r1391, %r1390};
	xor.b64  	%rd1857, %rd1856, %rd1855;
	shf.l.wrap.b32 	%r1392, %r1386, %r1387, 25;
	shf.l.wrap.b32 	%r1393, %r1387, %r1386, 25;
	mov.b64 	%rd1858, {%r1393, %r1392};
	xor.b64  	%rd1859, %rd1857, %rd1858;
	and.b64  	%rd1860, %rd1841, %rd1817;
	xor.b64  	%rd1861, %rd1841, %rd1817;
	and.b64  	%rd1862, %rd1861, %rd41;
	or.b64  	%rd1863, %rd1862, %rd1860;
	add.s64 	%rd1864, %rd1853, %rd1863;
	add.s64 	%rd1865, %rd1864, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd1854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd1854;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 14;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 14;
	mov.b64 	%rd1866, {%r1397, %r1396};
	shf.r.wrap.b32 	%r1398, %r1395, %r1394, 18;
	shf.r.wrap.b32 	%r1399, %r1394, %r1395, 18;
	mov.b64 	%rd1867, {%r1399, %r1398};
	xor.b64  	%rd1868, %rd1867, %rd1866;
	shf.l.wrap.b32 	%r1400, %r1394, %r1395, 23;
	shf.l.wrap.b32 	%r1401, %r1395, %r1394, 23;
	mov.b64 	%rd1869, {%r1401, %r1400};
	xor.b64  	%rd1870, %rd1868, %rd1869;
	xor.b64  	%rd1871, %rd1830, %rd1806;
	and.b64  	%rd1872, %rd1854, %rd1871;
	xor.b64  	%rd1873, %rd1872, %rd1806;
	add.s64 	%rd1874, %rd37, %rd9669;
	add.s64 	%rd1875, %rd1874, %rd9591;
	add.s64 	%rd1876, %rd1875, %rd1873;
	add.s64 	%rd1877, %rd1876, %rd1870;
	add.s64 	%rd1878, %rd1877, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd1865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd1865;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 28;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 28;
	mov.b64 	%rd1879, {%r1405, %r1404};
	shf.l.wrap.b32 	%r1406, %r1402, %r1403, 30;
	shf.l.wrap.b32 	%r1407, %r1403, %r1402, 30;
	mov.b64 	%rd1880, {%r1407, %r1406};
	xor.b64  	%rd1881, %rd1880, %rd1879;
	shf.l.wrap.b32 	%r1408, %r1402, %r1403, 25;
	shf.l.wrap.b32 	%r1409, %r1403, %r1402, 25;
	mov.b64 	%rd1882, {%r1409, %r1408};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	and.b64  	%rd1884, %rd1865, %rd1841;
	xor.b64  	%rd1885, %rd1865, %rd1841;
	and.b64  	%rd1886, %rd1885, %rd1817;
	or.b64  	%rd1887, %rd1886, %rd1884;
	add.s64 	%rd1888, %rd1877, %rd1887;
	add.s64 	%rd1889, %rd1888, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd1878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd1878;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 14;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 14;
	mov.b64 	%rd1890, {%r1413, %r1412};
	shf.r.wrap.b32 	%r1414, %r1411, %r1410, 18;
	shf.r.wrap.b32 	%r1415, %r1410, %r1411, 18;
	mov.b64 	%rd1891, {%r1415, %r1414};
	xor.b64  	%rd1892, %rd1891, %rd1890;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 23;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 23;
	mov.b64 	%rd1893, {%r1417, %r1416};
	xor.b64  	%rd1894, %rd1892, %rd1893;
	xor.b64  	%rd1895, %rd1854, %rd1830;
	and.b64  	%rd1896, %rd1878, %rd1895;
	xor.b64  	%rd1897, %rd1896, %rd1830;
	add.s64 	%rd1898, %rd1806, %rd9670;
	add.s64 	%rd1899, %rd1898, %rd9592;
	add.s64 	%rd1900, %rd1899, %rd1897;
	add.s64 	%rd1901, %rd1900, %rd1894;
	add.s64 	%rd1902, %rd1901, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd1889;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 28;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 28;
	mov.b64 	%rd1903, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 30;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 30;
	mov.b64 	%rd1904, {%r1423, %r1422};
	xor.b64  	%rd1905, %rd1904, %rd1903;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 25;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 25;
	mov.b64 	%rd1906, {%r1425, %r1424};
	xor.b64  	%rd1907, %rd1905, %rd1906;
	and.b64  	%rd1908, %rd1889, %rd1865;
	xor.b64  	%rd1909, %rd1889, %rd1865;
	and.b64  	%rd1910, %rd1909, %rd1841;
	or.b64  	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1901, %rd1911;
	add.s64 	%rd1913, %rd1912, %rd1907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd1902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd1902;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 14;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 14;
	mov.b64 	%rd1914, {%r1429, %r1428};
	shf.r.wrap.b32 	%r1430, %r1427, %r1426, 18;
	shf.r.wrap.b32 	%r1431, %r1426, %r1427, 18;
	mov.b64 	%rd1915, {%r1431, %r1430};
	xor.b64  	%rd1916, %rd1915, %rd1914;
	shf.l.wrap.b32 	%r1432, %r1426, %r1427, 23;
	shf.l.wrap.b32 	%r1433, %r1427, %r1426, 23;
	mov.b64 	%rd1917, {%r1433, %r1432};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	xor.b64  	%rd1919, %rd1878, %rd1854;
	and.b64  	%rd1920, %rd1902, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1854;
	add.s64 	%rd1922, %rd1830, %rd9671;
	add.s64 	%rd1923, %rd1922, %rd9593;
	add.s64 	%rd1924, %rd1923, %rd1921;
	add.s64 	%rd1925, %rd1924, %rd1918;
	add.s64 	%rd1926, %rd1925, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd1913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd1913;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 28;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 28;
	mov.b64 	%rd1927, {%r1437, %r1436};
	shf.l.wrap.b32 	%r1438, %r1434, %r1435, 30;
	shf.l.wrap.b32 	%r1439, %r1435, %r1434, 30;
	mov.b64 	%rd1928, {%r1439, %r1438};
	xor.b64  	%rd1929, %rd1928, %rd1927;
	shf.l.wrap.b32 	%r1440, %r1434, %r1435, 25;
	shf.l.wrap.b32 	%r1441, %r1435, %r1434, 25;
	mov.b64 	%rd1930, {%r1441, %r1440};
	xor.b64  	%rd1931, %rd1929, %rd1930;
	and.b64  	%rd1932, %rd1913, %rd1889;
	xor.b64  	%rd1933, %rd1913, %rd1889;
	and.b64  	%rd1934, %rd1933, %rd1865;
	or.b64  	%rd1935, %rd1934, %rd1932;
	add.s64 	%rd1936, %rd1925, %rd1935;
	add.s64 	%rd1937, %rd1936, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd1926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd1926;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 14;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 14;
	mov.b64 	%rd1938, {%r1445, %r1444};
	shf.r.wrap.b32 	%r1446, %r1443, %r1442, 18;
	shf.r.wrap.b32 	%r1447, %r1442, %r1443, 18;
	mov.b64 	%rd1939, {%r1447, %r1446};
	xor.b64  	%rd1940, %rd1939, %rd1938;
	shf.l.wrap.b32 	%r1448, %r1442, %r1443, 23;
	shf.l.wrap.b32 	%r1449, %r1443, %r1442, 23;
	mov.b64 	%rd1941, {%r1449, %r1448};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	xor.b64  	%rd1943, %rd1902, %rd1878;
	and.b64  	%rd1944, %rd1926, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1878;
	add.s64 	%rd1946, %rd1854, %rd9672;
	add.s64 	%rd1947, %rd1946, %rd9594;
	add.s64 	%rd1948, %rd1947, %rd1945;
	add.s64 	%rd1949, %rd1948, %rd1942;
	add.s64 	%rd1950, %rd1949, %rd1865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd1937;
	}
	shf.r.wrap.b32 	%r1452, %r1451, %r1450, 28;
	shf.r.wrap.b32 	%r1453, %r1450, %r1451, 28;
	mov.b64 	%rd1951, {%r1453, %r1452};
	shf.l.wrap.b32 	%r1454, %r1450, %r1451, 30;
	shf.l.wrap.b32 	%r1455, %r1451, %r1450, 30;
	mov.b64 	%rd1952, {%r1455, %r1454};
	xor.b64  	%rd1953, %rd1952, %rd1951;
	shf.l.wrap.b32 	%r1456, %r1450, %r1451, 25;
	shf.l.wrap.b32 	%r1457, %r1451, %r1450, 25;
	mov.b64 	%rd1954, {%r1457, %r1456};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	and.b64  	%rd1956, %rd1937, %rd1913;
	xor.b64  	%rd1957, %rd1937, %rd1913;
	and.b64  	%rd1958, %rd1957, %rd1889;
	or.b64  	%rd1959, %rd1958, %rd1956;
	add.s64 	%rd1960, %rd1949, %rd1959;
	add.s64 	%rd1961, %rd1960, %rd1955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd1950;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 14;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 14;
	mov.b64 	%rd1962, {%r1461, %r1460};
	shf.r.wrap.b32 	%r1462, %r1459, %r1458, 18;
	shf.r.wrap.b32 	%r1463, %r1458, %r1459, 18;
	mov.b64 	%rd1963, {%r1463, %r1462};
	xor.b64  	%rd1964, %rd1963, %rd1962;
	shf.l.wrap.b32 	%r1464, %r1458, %r1459, 23;
	shf.l.wrap.b32 	%r1465, %r1459, %r1458, 23;
	mov.b64 	%rd1965, {%r1465, %r1464};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	xor.b64  	%rd1967, %rd1926, %rd1902;
	and.b64  	%rd1968, %rd1950, %rd1967;
	xor.b64  	%rd1969, %rd1968, %rd1902;
	add.s64 	%rd1970, %rd1878, %rd9673;
	add.s64 	%rd1971, %rd1970, %rd9595;
	add.s64 	%rd1972, %rd1971, %rd1969;
	add.s64 	%rd1973, %rd1972, %rd1966;
	add.s64 	%rd1974, %rd1973, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd1961;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 28;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 28;
	mov.b64 	%rd1975, {%r1469, %r1468};
	shf.l.wrap.b32 	%r1470, %r1466, %r1467, 30;
	shf.l.wrap.b32 	%r1471, %r1467, %r1466, 30;
	mov.b64 	%rd1976, {%r1471, %r1470};
	xor.b64  	%rd1977, %rd1976, %rd1975;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 25;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 25;
	mov.b64 	%rd1978, {%r1473, %r1472};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	and.b64  	%rd1980, %rd1961, %rd1937;
	xor.b64  	%rd1981, %rd1961, %rd1937;
	and.b64  	%rd1982, %rd1981, %rd1913;
	or.b64  	%rd1983, %rd1982, %rd1980;
	add.s64 	%rd1984, %rd1973, %rd1983;
	add.s64 	%rd1985, %rd1984, %rd1979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd1974;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 14;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 14;
	mov.b64 	%rd1986, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1475, %r1474, 18;
	shf.r.wrap.b32 	%r1479, %r1474, %r1475, 18;
	mov.b64 	%rd1987, {%r1479, %r1478};
	xor.b64  	%rd1988, %rd1987, %rd1986;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 23;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 23;
	mov.b64 	%rd1989, {%r1481, %r1480};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	xor.b64  	%rd1991, %rd1950, %rd1926;
	and.b64  	%rd1992, %rd1974, %rd1991;
	xor.b64  	%rd1993, %rd1992, %rd1926;
	add.s64 	%rd1994, %rd1902, %rd9657;
	add.s64 	%rd1995, %rd1994, %rd9596;
	add.s64 	%rd1996, %rd1995, %rd1993;
	add.s64 	%rd1997, %rd1996, %rd1990;
	add.s64 	%rd1998, %rd1997, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd1985;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 28;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 28;
	mov.b64 	%rd1999, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 30;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 30;
	mov.b64 	%rd2000, {%r1487, %r1486};
	xor.b64  	%rd2001, %rd2000, %rd1999;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 25;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 25;
	mov.b64 	%rd2002, {%r1489, %r1488};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	and.b64  	%rd2004, %rd1985, %rd1961;
	xor.b64  	%rd2005, %rd1985, %rd1961;
	and.b64  	%rd2006, %rd2005, %rd1937;
	or.b64  	%rd2007, %rd2006, %rd2004;
	add.s64 	%rd2008, %rd1997, %rd2007;
	add.s64 	%rd2009, %rd2008, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd1998;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 14;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 14;
	mov.b64 	%rd2010, {%r1493, %r1492};
	shf.r.wrap.b32 	%r1494, %r1491, %r1490, 18;
	shf.r.wrap.b32 	%r1495, %r1490, %r1491, 18;
	mov.b64 	%rd2011, {%r1495, %r1494};
	xor.b64  	%rd2012, %rd2011, %rd2010;
	shf.l.wrap.b32 	%r1496, %r1490, %r1491, 23;
	shf.l.wrap.b32 	%r1497, %r1491, %r1490, 23;
	mov.b64 	%rd2013, {%r1497, %r1496};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	xor.b64  	%rd2015, %rd1974, %rd1950;
	and.b64  	%rd2016, %rd1998, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1950;
	add.s64 	%rd2018, %rd1926, %rd9656;
	add.s64 	%rd2019, %rd2018, %rd9597;
	add.s64 	%rd2020, %rd2019, %rd2017;
	add.s64 	%rd2021, %rd2020, %rd2014;
	add.s64 	%rd2022, %rd2021, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd2009;
	}
	shf.r.wrap.b32 	%r1500, %r1499, %r1498, 28;
	shf.r.wrap.b32 	%r1501, %r1498, %r1499, 28;
	mov.b64 	%rd2023, {%r1501, %r1500};
	shf.l.wrap.b32 	%r1502, %r1498, %r1499, 30;
	shf.l.wrap.b32 	%r1503, %r1499, %r1498, 30;
	mov.b64 	%rd2024, {%r1503, %r1502};
	xor.b64  	%rd2025, %rd2024, %rd2023;
	shf.l.wrap.b32 	%r1504, %r1498, %r1499, 25;
	shf.l.wrap.b32 	%r1505, %r1499, %r1498, 25;
	mov.b64 	%rd2026, {%r1505, %r1504};
	xor.b64  	%rd2027, %rd2025, %rd2026;
	and.b64  	%rd2028, %rd2009, %rd1985;
	xor.b64  	%rd2029, %rd2009, %rd1985;
	and.b64  	%rd2030, %rd2029, %rd1961;
	or.b64  	%rd2031, %rd2030, %rd2028;
	add.s64 	%rd2032, %rd2021, %rd2031;
	add.s64 	%rd2033, %rd2032, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd2022;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 14;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 14;
	mov.b64 	%rd2034, {%r1509, %r1508};
	shf.r.wrap.b32 	%r1510, %r1507, %r1506, 18;
	shf.r.wrap.b32 	%r1511, %r1506, %r1507, 18;
	mov.b64 	%rd2035, {%r1511, %r1510};
	xor.b64  	%rd2036, %rd2035, %rd2034;
	shf.l.wrap.b32 	%r1512, %r1506, %r1507, 23;
	shf.l.wrap.b32 	%r1513, %r1507, %r1506, 23;
	mov.b64 	%rd2037, {%r1513, %r1512};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	xor.b64  	%rd2039, %rd1998, %rd1974;
	and.b64  	%rd2040, %rd2022, %rd2039;
	xor.b64  	%rd2041, %rd2040, %rd1974;
	add.s64 	%rd2042, %rd1950, %rd9655;
	add.s64 	%rd2043, %rd2042, %rd9712;
	add.s64 	%rd2044, %rd2043, %rd2041;
	add.s64 	%rd2045, %rd2044, %rd2038;
	add.s64 	%rd2046, %rd2045, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd2033;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 28;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 28;
	mov.b64 	%rd2047, {%r1517, %r1516};
	shf.l.wrap.b32 	%r1518, %r1514, %r1515, 30;
	shf.l.wrap.b32 	%r1519, %r1515, %r1514, 30;
	mov.b64 	%rd2048, {%r1519, %r1518};
	xor.b64  	%rd2049, %rd2048, %rd2047;
	shf.l.wrap.b32 	%r1520, %r1514, %r1515, 25;
	shf.l.wrap.b32 	%r1521, %r1515, %r1514, 25;
	mov.b64 	%rd2050, {%r1521, %r1520};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	and.b64  	%rd2052, %rd2033, %rd2009;
	xor.b64  	%rd2053, %rd2033, %rd2009;
	and.b64  	%rd2054, %rd2053, %rd1985;
	or.b64  	%rd2055, %rd2054, %rd2052;
	add.s64 	%rd2056, %rd2045, %rd2055;
	add.s64 	%rd2057, %rd2056, %rd2051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd2046;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 14;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 14;
	mov.b64 	%rd2058, {%r1525, %r1524};
	shf.r.wrap.b32 	%r1526, %r1523, %r1522, 18;
	shf.r.wrap.b32 	%r1527, %r1522, %r1523, 18;
	mov.b64 	%rd2059, {%r1527, %r1526};
	xor.b64  	%rd2060, %rd2059, %rd2058;
	shf.l.wrap.b32 	%r1528, %r1522, %r1523, 23;
	shf.l.wrap.b32 	%r1529, %r1523, %r1522, 23;
	mov.b64 	%rd2061, {%r1529, %r1528};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	xor.b64  	%rd2063, %rd2022, %rd1998;
	and.b64  	%rd2064, %rd2046, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd1998;
	add.s64 	%rd2066, %rd1974, %rd9654;
	add.s64 	%rd2067, %rd2066, %rd9711;
	add.s64 	%rd2068, %rd2067, %rd2065;
	add.s64 	%rd2069, %rd2068, %rd2062;
	add.s64 	%rd2070, %rd2069, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd2057;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 28;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 28;
	mov.b64 	%rd2071, {%r1533, %r1532};
	shf.l.wrap.b32 	%r1534, %r1530, %r1531, 30;
	shf.l.wrap.b32 	%r1535, %r1531, %r1530, 30;
	mov.b64 	%rd2072, {%r1535, %r1534};
	xor.b64  	%rd2073, %rd2072, %rd2071;
	shf.l.wrap.b32 	%r1536, %r1530, %r1531, 25;
	shf.l.wrap.b32 	%r1537, %r1531, %r1530, 25;
	mov.b64 	%rd2074, {%r1537, %r1536};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	and.b64  	%rd2076, %rd2057, %rd2033;
	xor.b64  	%rd2077, %rd2057, %rd2033;
	and.b64  	%rd2078, %rd2077, %rd2009;
	or.b64  	%rd2079, %rd2078, %rd2076;
	add.s64 	%rd2080, %rd2069, %rd2079;
	add.s64 	%rd2081, %rd2080, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1539}, %rd2070;
	}
	shf.r.wrap.b32 	%r1540, %r1539, %r1538, 14;
	shf.r.wrap.b32 	%r1541, %r1538, %r1539, 14;
	mov.b64 	%rd2082, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1539, %r1538, 18;
	shf.r.wrap.b32 	%r1543, %r1538, %r1539, 18;
	mov.b64 	%rd2083, {%r1543, %r1542};
	xor.b64  	%rd2084, %rd2083, %rd2082;
	shf.l.wrap.b32 	%r1544, %r1538, %r1539, 23;
	shf.l.wrap.b32 	%r1545, %r1539, %r1538, 23;
	mov.b64 	%rd2085, {%r1545, %r1544};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	xor.b64  	%rd2087, %rd2046, %rd2022;
	and.b64  	%rd2088, %rd2070, %rd2087;
	xor.b64  	%rd2089, %rd2088, %rd2022;
	add.s64 	%rd2090, %rd1998, %rd9653;
	add.s64 	%rd2091, %rd2090, %rd9710;
	add.s64 	%rd2092, %rd2091, %rd2089;
	add.s64 	%rd2093, %rd2092, %rd2086;
	add.s64 	%rd9665, %rd2093, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd2081;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 28;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 28;
	mov.b64 	%rd2094, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 30;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 30;
	mov.b64 	%rd2095, {%r1551, %r1550};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r1552, %r1546, %r1547, 25;
	shf.l.wrap.b32 	%r1553, %r1547, %r1546, 25;
	mov.b64 	%rd2097, {%r1553, %r1552};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	and.b64  	%rd2099, %rd2081, %rd2057;
	xor.b64  	%rd2100, %rd2081, %rd2057;
	and.b64  	%rd2101, %rd2100, %rd2033;
	or.b64  	%rd2102, %rd2101, %rd2099;
	add.s64 	%rd2103, %rd2093, %rd2102;
	add.s64 	%rd9661, %rd2103, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd9665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd9665;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 14;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 14;
	mov.b64 	%rd2104, {%r1557, %r1556};
	shf.r.wrap.b32 	%r1558, %r1555, %r1554, 18;
	shf.r.wrap.b32 	%r1559, %r1554, %r1555, 18;
	mov.b64 	%rd2105, {%r1559, %r1558};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r1560, %r1554, %r1555, 23;
	shf.l.wrap.b32 	%r1561, %r1555, %r1554, 23;
	mov.b64 	%rd2107, {%r1561, %r1560};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2070, %rd2046;
	and.b64  	%rd2110, %rd9665, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2046;
	add.s64 	%rd2112, %rd2022, %rd9652;
	add.s64 	%rd2113, %rd2112, %rd9709;
	add.s64 	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd2114, %rd2108;
	add.s64 	%rd9664, %rd2115, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd9661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd9661;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 28;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 28;
	mov.b64 	%rd2116, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 30;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 30;
	mov.b64 	%rd2117, {%r1567, %r1566};
	xor.b64  	%rd2118, %rd2117, %rd2116;
	shf.l.wrap.b32 	%r1568, %r1562, %r1563, 25;
	shf.l.wrap.b32 	%r1569, %r1563, %r1562, 25;
	mov.b64 	%rd2119, {%r1569, %r1568};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	and.b64  	%rd2121, %rd9661, %rd2081;
	xor.b64  	%rd2122, %rd9661, %rd2081;
	and.b64  	%rd2123, %rd2122, %rd2057;
	or.b64  	%rd2124, %rd2123, %rd2121;
	add.s64 	%rd2125, %rd2115, %rd2124;
	add.s64 	%rd9660, %rd2125, %rd2120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd9664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd9664;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 14;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 14;
	mov.b64 	%rd2126, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1571, %r1570, 18;
	shf.r.wrap.b32 	%r1575, %r1570, %r1571, 18;
	mov.b64 	%rd2127, {%r1575, %r1574};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r1576, %r1570, %r1571, 23;
	shf.l.wrap.b32 	%r1577, %r1571, %r1570, 23;
	mov.b64 	%rd2129, {%r1577, %r1576};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd9665, %rd2070;
	and.b64  	%rd2132, %rd9664, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2070;
	add.s64 	%rd2134, %rd2046, %rd9651;
	add.s64 	%rd2135, %rd2134, %rd9708;
	add.s64 	%rd2136, %rd2135, %rd2133;
	add.s64 	%rd2137, %rd2136, %rd2130;
	add.s64 	%rd9663, %rd2137, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd9660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd9660;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 28;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 28;
	mov.b64 	%rd2138, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 30;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 30;
	mov.b64 	%rd2139, {%r1583, %r1582};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 25;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 25;
	mov.b64 	%rd2141, {%r1585, %r1584};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	and.b64  	%rd2143, %rd9660, %rd9661;
	xor.b64  	%rd2144, %rd9660, %rd9661;
	and.b64  	%rd2145, %rd2144, %rd2081;
	or.b64  	%rd2146, %rd2145, %rd2143;
	add.s64 	%rd2147, %rd2137, %rd2146;
	add.s64 	%rd9659, %rd2147, %rd2142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd9663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd9663;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 14;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 14;
	mov.b64 	%rd2148, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1587, %r1586, 18;
	shf.r.wrap.b32 	%r1591, %r1586, %r1587, 18;
	mov.b64 	%rd2149, {%r1591, %r1590};
	xor.b64  	%rd2150, %rd2149, %rd2148;
	shf.l.wrap.b32 	%r1592, %r1586, %r1587, 23;
	shf.l.wrap.b32 	%r1593, %r1587, %r1586, 23;
	mov.b64 	%rd2151, {%r1593, %r1592};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	xor.b64  	%rd2153, %rd9664, %rd9665;
	and.b64  	%rd2154, %rd9663, %rd2153;
	xor.b64  	%rd2155, %rd2154, %rd9665;
	add.s64 	%rd2156, %rd2070, %rd9650;
	add.s64 	%rd2157, %rd2156, %rd9707;
	add.s64 	%rd2158, %rd2157, %rd2155;
	add.s64 	%rd2159, %rd2158, %rd2152;
	add.s64 	%rd9662, %rd2159, %rd2081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd9659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd9659;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 28;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 28;
	mov.b64 	%rd2160, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 30;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 30;
	mov.b64 	%rd2161, {%r1599, %r1598};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r1600, %r1594, %r1595, 25;
	shf.l.wrap.b32 	%r1601, %r1595, %r1594, 25;
	mov.b64 	%rd2163, {%r1601, %r1600};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	and.b64  	%rd2165, %rd9659, %rd9660;
	xor.b64  	%rd2166, %rd9659, %rd9660;
	and.b64  	%rd2167, %rd2166, %rd9661;
	or.b64  	%rd2168, %rd2167, %rd2165;
	add.s64 	%rd2169, %rd2159, %rd2168;
	add.s64 	%rd9658, %rd2169, %rd2164;
	mov.u32 	%r7405, 16;
	mov.u64 	%rd9649, k_sha512;

BB3_15:
	shr.u64 	%rd2170, %rd9651, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd9651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd9651;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 19;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 19;
	mov.b64 	%rd2171, {%r1605, %r1604};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	shf.l.wrap.b32 	%r1606, %r1602, %r1603, 3;
	shf.l.wrap.b32 	%r1607, %r1603, %r1602, 3;
	mov.b64 	%rd2173, {%r1607, %r1606};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	shr.u64 	%rd2175, %rd9667, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1608,%dummy}, %rd9667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd9667;
	}
	shf.r.wrap.b32 	%r1610, %r1609, %r1608, 1;
	shf.r.wrap.b32 	%r1611, %r1608, %r1609, 1;
	mov.b64 	%rd2176, {%r1611, %r1610};
	xor.b64  	%rd2177, %rd2176, %rd2175;
	shf.r.wrap.b32 	%r1612, %r1609, %r1608, 8;
	shf.r.wrap.b32 	%r1613, %r1608, %r1609, 8;
	mov.b64 	%rd2178, {%r1613, %r1612};
	xor.b64  	%rd2179, %rd2177, %rd2178;
	add.s64 	%rd2180, %rd9656, %rd9666;
	add.s64 	%rd2181, %rd2180, %rd2174;
	add.s64 	%rd9666, %rd2181, %rd2179;
	shr.u64 	%rd2182, %rd9650, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd9650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd9650;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd2183, {%r1617, %r1616};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd2185, {%r1619, %r1618};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shr.u64 	%rd2187, %rd9668, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1620,%dummy}, %rd9668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd9668;
	}
	shf.r.wrap.b32 	%r1622, %r1621, %r1620, 1;
	shf.r.wrap.b32 	%r1623, %r1620, %r1621, 1;
	mov.b64 	%rd2188, {%r1623, %r1622};
	xor.b64  	%rd2189, %rd2188, %rd2187;
	shf.r.wrap.b32 	%r1624, %r1621, %r1620, 8;
	shf.r.wrap.b32 	%r1625, %r1620, %r1621, 8;
	mov.b64 	%rd2190, {%r1625, %r1624};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	add.s64 	%rd2192, %rd9655, %rd9667;
	add.s64 	%rd2193, %rd2192, %rd2186;
	add.s64 	%rd9667, %rd2193, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd9666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd9666;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 19;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 19;
	mov.b64 	%rd2194, {%r1629, %r1628};
	shf.l.wrap.b32 	%r1630, %r1626, %r1627, 3;
	shf.l.wrap.b32 	%r1631, %r1627, %r1626, 3;
	mov.b64 	%rd2195, {%r1631, %r1630};
	shr.u64 	%rd2196, %rd9666, 6;
	xor.b64  	%rd2197, %rd2194, %rd2196;
	xor.b64  	%rd2198, %rd2197, %rd2195;
	shr.u64 	%rd2199, %rd9669, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd9669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd9669;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 1;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 1;
	mov.b64 	%rd2200, {%r1635, %r1634};
	xor.b64  	%rd2201, %rd2200, %rd2199;
	shf.r.wrap.b32 	%r1636, %r1633, %r1632, 8;
	shf.r.wrap.b32 	%r1637, %r1632, %r1633, 8;
	mov.b64 	%rd2202, {%r1637, %r1636};
	xor.b64  	%rd2203, %rd2201, %rd2202;
	add.s64 	%rd2204, %rd9654, %rd9668;
	add.s64 	%rd2205, %rd2204, %rd2198;
	add.s64 	%rd9668, %rd2205, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd9667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd9667;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 19;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 19;
	mov.b64 	%rd2206, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 3;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 3;
	mov.b64 	%rd2207, {%r1643, %r1642};
	shr.u64 	%rd2208, %rd9667, 6;
	xor.b64  	%rd2209, %rd2206, %rd2208;
	xor.b64  	%rd2210, %rd2209, %rd2207;
	shr.u64 	%rd2211, %rd9670, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd9670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd9670;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 1;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 1;
	mov.b64 	%rd2212, {%r1647, %r1646};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.r.wrap.b32 	%r1648, %r1645, %r1644, 8;
	shf.r.wrap.b32 	%r1649, %r1644, %r1645, 8;
	mov.b64 	%rd2214, {%r1649, %r1648};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	add.s64 	%rd2216, %rd9653, %rd9669;
	add.s64 	%rd2217, %rd2216, %rd2210;
	add.s64 	%rd9669, %rd2217, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd9668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd9668;
	}
	shf.r.wrap.b32 	%r1652, %r1651, %r1650, 19;
	shf.r.wrap.b32 	%r1653, %r1650, %r1651, 19;
	mov.b64 	%rd2218, {%r1653, %r1652};
	shf.l.wrap.b32 	%r1654, %r1650, %r1651, 3;
	shf.l.wrap.b32 	%r1655, %r1651, %r1650, 3;
	mov.b64 	%rd2219, {%r1655, %r1654};
	shr.u64 	%rd2220, %rd9668, 6;
	xor.b64  	%rd2221, %rd2218, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2219;
	shr.u64 	%rd2223, %rd9671, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd9671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd9671;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 1;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 1;
	mov.b64 	%rd2224, {%r1659, %r1658};
	xor.b64  	%rd2225, %rd2224, %rd2223;
	shf.r.wrap.b32 	%r1660, %r1657, %r1656, 8;
	shf.r.wrap.b32 	%r1661, %r1656, %r1657, 8;
	mov.b64 	%rd2226, {%r1661, %r1660};
	xor.b64  	%rd2227, %rd2225, %rd2226;
	add.s64 	%rd2228, %rd9652, %rd9670;
	add.s64 	%rd2229, %rd2228, %rd2222;
	add.s64 	%rd9670, %rd2229, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd9669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd9669;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 19;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 19;
	mov.b64 	%rd2230, {%r1665, %r1664};
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 3;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 3;
	mov.b64 	%rd2231, {%r1667, %r1666};
	shr.u64 	%rd2232, %rd9669, 6;
	xor.b64  	%rd2233, %rd2230, %rd2232;
	xor.b64  	%rd2234, %rd2233, %rd2231;
	shr.u64 	%rd2235, %rd9672, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd9672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd9672;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 1;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 1;
	mov.b64 	%rd2236, {%r1671, %r1670};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	shf.r.wrap.b32 	%r1672, %r1669, %r1668, 8;
	shf.r.wrap.b32 	%r1673, %r1668, %r1669, 8;
	mov.b64 	%rd2238, {%r1673, %r1672};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	add.s64 	%rd2240, %rd9651, %rd9671;
	add.s64 	%rd2241, %rd2240, %rd2234;
	add.s64 	%rd9671, %rd2241, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd9670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd9670;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 19;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 19;
	mov.b64 	%rd2242, {%r1677, %r1676};
	shf.l.wrap.b32 	%r1678, %r1674, %r1675, 3;
	shf.l.wrap.b32 	%r1679, %r1675, %r1674, 3;
	mov.b64 	%rd2243, {%r1679, %r1678};
	shr.u64 	%rd2244, %rd9670, 6;
	xor.b64  	%rd2245, %rd2242, %rd2244;
	xor.b64  	%rd2246, %rd2245, %rd2243;
	shr.u64 	%rd2247, %rd9673, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd9673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd9673;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 1;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 1;
	mov.b64 	%rd2248, {%r1683, %r1682};
	xor.b64  	%rd2249, %rd2248, %rd2247;
	shf.r.wrap.b32 	%r1684, %r1681, %r1680, 8;
	shf.r.wrap.b32 	%r1685, %r1680, %r1681, 8;
	mov.b64 	%rd2250, {%r1685, %r1684};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	add.s64 	%rd2252, %rd9650, %rd9672;
	add.s64 	%rd2253, %rd2252, %rd2246;
	add.s64 	%rd9672, %rd2253, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd9671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd9671;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 19;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 19;
	mov.b64 	%rd2254, {%r1689, %r1688};
	shf.l.wrap.b32 	%r1690, %r1686, %r1687, 3;
	shf.l.wrap.b32 	%r1691, %r1687, %r1686, 3;
	mov.b64 	%rd2255, {%r1691, %r1690};
	shr.u64 	%rd2256, %rd9671, 6;
	xor.b64  	%rd2257, %rd2254, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2255;
	shr.u64 	%rd2259, %rd9657, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd9657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd9657;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 1;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 1;
	mov.b64 	%rd2260, {%r1695, %r1694};
	xor.b64  	%rd2261, %rd2260, %rd2259;
	shf.r.wrap.b32 	%r1696, %r1693, %r1692, 8;
	shf.r.wrap.b32 	%r1697, %r1692, %r1693, 8;
	mov.b64 	%rd2262, {%r1697, %r1696};
	xor.b64  	%rd2263, %rd2261, %rd2262;
	add.s64 	%rd2264, %rd9666, %rd9673;
	add.s64 	%rd2265, %rd2264, %rd2258;
	add.s64 	%rd9673, %rd2265, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd9672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd9672;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 19;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 19;
	mov.b64 	%rd2266, {%r1701, %r1700};
	shf.l.wrap.b32 	%r1702, %r1698, %r1699, 3;
	shf.l.wrap.b32 	%r1703, %r1699, %r1698, 3;
	mov.b64 	%rd2267, {%r1703, %r1702};
	shr.u64 	%rd2268, %rd9672, 6;
	xor.b64  	%rd2269, %rd2266, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2267;
	shr.u64 	%rd2271, %rd9656, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd9656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd9656;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 1;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 1;
	mov.b64 	%rd2272, {%r1707, %r1706};
	xor.b64  	%rd2273, %rd2272, %rd2271;
	shf.r.wrap.b32 	%r1708, %r1705, %r1704, 8;
	shf.r.wrap.b32 	%r1709, %r1704, %r1705, 8;
	mov.b64 	%rd2274, {%r1709, %r1708};
	xor.b64  	%rd2275, %rd2273, %rd2274;
	add.s64 	%rd2276, %rd9667, %rd9657;
	add.s64 	%rd2277, %rd2276, %rd2270;
	add.s64 	%rd9657, %rd2277, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd9673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd9673;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 19;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 19;
	mov.b64 	%rd2278, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 3;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 3;
	mov.b64 	%rd2279, {%r1715, %r1714};
	shr.u64 	%rd2280, %rd9673, 6;
	xor.b64  	%rd2281, %rd2278, %rd2280;
	xor.b64  	%rd2282, %rd2281, %rd2279;
	shr.u64 	%rd2283, %rd9655, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd9655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd9655;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 1;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 1;
	mov.b64 	%rd2284, {%r1719, %r1718};
	xor.b64  	%rd2285, %rd2284, %rd2283;
	shf.r.wrap.b32 	%r1720, %r1717, %r1716, 8;
	shf.r.wrap.b32 	%r1721, %r1716, %r1717, 8;
	mov.b64 	%rd2286, {%r1721, %r1720};
	xor.b64  	%rd2287, %rd2285, %rd2286;
	add.s64 	%rd2288, %rd9668, %rd9656;
	add.s64 	%rd2289, %rd2288, %rd2282;
	add.s64 	%rd9656, %rd2289, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd9657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd9657;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 19;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 19;
	mov.b64 	%rd2290, {%r1725, %r1724};
	shf.l.wrap.b32 	%r1726, %r1722, %r1723, 3;
	shf.l.wrap.b32 	%r1727, %r1723, %r1722, 3;
	mov.b64 	%rd2291, {%r1727, %r1726};
	shr.u64 	%rd2292, %rd9657, 6;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	shr.u64 	%rd2295, %rd9654, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd9654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd9654;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 1;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 1;
	mov.b64 	%rd2296, {%r1731, %r1730};
	xor.b64  	%rd2297, %rd2296, %rd2295;
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 8;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 8;
	mov.b64 	%rd2298, {%r1733, %r1732};
	xor.b64  	%rd2299, %rd2297, %rd2298;
	add.s64 	%rd2300, %rd9669, %rd9655;
	add.s64 	%rd2301, %rd2300, %rd2294;
	add.s64 	%rd9655, %rd2301, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd9656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd9656;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 19;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 19;
	mov.b64 	%rd2302, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 3;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 3;
	mov.b64 	%rd2303, {%r1739, %r1738};
	shr.u64 	%rd2304, %rd9656, 6;
	xor.b64  	%rd2305, %rd2302, %rd2304;
	xor.b64  	%rd2306, %rd2305, %rd2303;
	shr.u64 	%rd2307, %rd9653, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1740,%dummy}, %rd9653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd9653;
	}
	shf.r.wrap.b32 	%r1742, %r1741, %r1740, 1;
	shf.r.wrap.b32 	%r1743, %r1740, %r1741, 1;
	mov.b64 	%rd2308, {%r1743, %r1742};
	xor.b64  	%rd2309, %rd2308, %rd2307;
	shf.r.wrap.b32 	%r1744, %r1741, %r1740, 8;
	shf.r.wrap.b32 	%r1745, %r1740, %r1741, 8;
	mov.b64 	%rd2310, {%r1745, %r1744};
	xor.b64  	%rd2311, %rd2309, %rd2310;
	add.s64 	%rd2312, %rd9670, %rd9654;
	add.s64 	%rd2313, %rd2312, %rd2306;
	add.s64 	%rd9654, %rd2313, %rd2311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd9655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1747}, %rd9655;
	}
	shf.r.wrap.b32 	%r1748, %r1747, %r1746, 19;
	shf.r.wrap.b32 	%r1749, %r1746, %r1747, 19;
	mov.b64 	%rd2314, {%r1749, %r1748};
	shf.l.wrap.b32 	%r1750, %r1746, %r1747, 3;
	shf.l.wrap.b32 	%r1751, %r1747, %r1746, 3;
	mov.b64 	%rd2315, {%r1751, %r1750};
	shr.u64 	%rd2316, %rd9655, 6;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	shr.u64 	%rd2319, %rd9652, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd9652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd9652;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 1;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 1;
	mov.b64 	%rd2320, {%r1755, %r1754};
	xor.b64  	%rd2321, %rd2320, %rd2319;
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 8;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 8;
	mov.b64 	%rd2322, {%r1757, %r1756};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	add.s64 	%rd2324, %rd9671, %rd9653;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd9653, %rd2325, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd9654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd9654;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 19;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 19;
	mov.b64 	%rd2326, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 3;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 3;
	mov.b64 	%rd2327, {%r1763, %r1762};
	shr.u64 	%rd2328, %rd9654, 6;
	xor.b64  	%rd2329, %rd2326, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2327;
	shr.u64 	%rd2331, %rd9651, 7;
	shf.r.wrap.b32 	%r1764, %r1603, %r1602, 1;
	shf.r.wrap.b32 	%r1765, %r1602, %r1603, 1;
	mov.b64 	%rd2332, {%r1765, %r1764};
	xor.b64  	%rd2333, %rd2332, %rd2331;
	shf.r.wrap.b32 	%r1766, %r1603, %r1602, 8;
	shf.r.wrap.b32 	%r1767, %r1602, %r1603, 8;
	mov.b64 	%rd2334, {%r1767, %r1766};
	xor.b64  	%rd2335, %rd2333, %rd2334;
	add.s64 	%rd2336, %rd9672, %rd9652;
	add.s64 	%rd2337, %rd2336, %rd2330;
	add.s64 	%rd9652, %rd2337, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd9653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd9653;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 19;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 19;
	mov.b64 	%rd2338, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 3;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 3;
	mov.b64 	%rd2339, {%r1773, %r1772};
	shr.u64 	%rd2340, %rd9653, 6;
	xor.b64  	%rd2341, %rd2338, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2339;
	shr.u64 	%rd2343, %rd9650, 7;
	shf.r.wrap.b32 	%r1774, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r1775, %r1614, %r1615, 1;
	mov.b64 	%rd2344, {%r1775, %r1774};
	xor.b64  	%rd2345, %rd2344, %rd2343;
	shf.r.wrap.b32 	%r1776, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r1777, %r1614, %r1615, 8;
	mov.b64 	%rd2346, {%r1777, %r1776};
	xor.b64  	%rd2347, %rd2345, %rd2346;
	add.s64 	%rd2348, %rd9673, %rd9651;
	add.s64 	%rd2349, %rd2348, %rd2342;
	add.s64 	%rd9651, %rd2349, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd9652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd9652;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 19;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 19;
	mov.b64 	%rd2350, {%r1781, %r1780};
	shf.l.wrap.b32 	%r1782, %r1778, %r1779, 3;
	shf.l.wrap.b32 	%r1783, %r1779, %r1778, 3;
	mov.b64 	%rd2351, {%r1783, %r1782};
	shr.u64 	%rd2352, %rd9652, 6;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	shf.r.wrap.b32 	%r1784, %r1627, %r1626, 1;
	shf.r.wrap.b32 	%r1785, %r1626, %r1627, 1;
	mov.b64 	%rd2355, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1627, %r1626, 8;
	shf.r.wrap.b32 	%r1787, %r1626, %r1627, 8;
	mov.b64 	%rd2356, {%r1787, %r1786};
	shr.u64 	%rd2357, %rd9666, 7;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	add.s64 	%rd2360, %rd9657, %rd9650;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd9650, %rd2361, %rd2359;
	add.s64 	%rd203, %rd9649, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1788,%dummy}, %rd9662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd9662;
	}
	shf.r.wrap.b32 	%r1790, %r1789, %r1788, 18;
	shf.r.wrap.b32 	%r1791, %r1788, %r1789, 18;
	mov.b64 	%rd2362, {%r1791, %r1790};
	shf.r.wrap.b32 	%r1792, %r1789, %r1788, 14;
	shf.r.wrap.b32 	%r1793, %r1788, %r1789, 14;
	mov.b64 	%rd2363, {%r1793, %r1792};
	xor.b64  	%rd2364, %rd2362, %rd2363;
	shf.l.wrap.b32 	%r1794, %r1788, %r1789, 23;
	shf.l.wrap.b32 	%r1795, %r1789, %r1788, 23;
	mov.b64 	%rd2365, {%r1795, %r1794};
	xor.b64  	%rd2366, %rd2364, %rd2365;
	xor.b64  	%rd2367, %rd9663, %rd9664;
	and.b64  	%rd2368, %rd9662, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd9664;
	add.s64 	%rd2370, %rd2369, %rd9665;
	add.s64 	%rd2371, %rd2370, %rd9666;
	ld.const.u64 	%rd2372, [%rd9649+128];
	add.s64 	%rd2373, %rd2371, %rd2372;
	add.s64 	%rd2374, %rd2373, %rd2366;
	add.s64 	%rd2375, %rd2374, %rd9661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd9658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd9658;
	}
	shf.l.wrap.b32 	%r1798, %r1797, %r1796, 30;
	shf.l.wrap.b32 	%r1799, %r1796, %r1797, 30;
	mov.b64 	%rd2376, {%r1799, %r1798};
	shf.r.wrap.b32 	%r1800, %r1796, %r1797, 28;
	shf.r.wrap.b32 	%r1801, %r1797, %r1796, 28;
	mov.b64 	%rd2377, {%r1801, %r1800};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	shf.l.wrap.b32 	%r1802, %r1797, %r1796, 25;
	shf.l.wrap.b32 	%r1803, %r1796, %r1797, 25;
	mov.b64 	%rd2379, {%r1803, %r1802};
	xor.b64  	%rd2380, %rd2378, %rd2379;
	xor.b64  	%rd2381, %rd9658, %rd9659;
	and.b64  	%rd2382, %rd2381, %rd9660;
	and.b64  	%rd2383, %rd9658, %rd9659;
	or.b64  	%rd2384, %rd2382, %rd2383;
	add.s64 	%rd2385, %rd2374, %rd2384;
	add.s64 	%rd2386, %rd2385, %rd2380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd2375;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 14;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 14;
	mov.b64 	%rd2387, {%r1807, %r1806};
	shf.r.wrap.b32 	%r1808, %r1805, %r1804, 18;
	shf.r.wrap.b32 	%r1809, %r1804, %r1805, 18;
	mov.b64 	%rd2388, {%r1809, %r1808};
	xor.b64  	%rd2389, %rd2388, %rd2387;
	shf.l.wrap.b32 	%r1810, %r1804, %r1805, 23;
	shf.l.wrap.b32 	%r1811, %r1805, %r1804, 23;
	mov.b64 	%rd2390, {%r1811, %r1810};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	xor.b64  	%rd2392, %rd9662, %rd9663;
	and.b64  	%rd2393, %rd2375, %rd2392;
	xor.b64  	%rd2394, %rd2393, %rd9663;
	add.s64 	%rd2395, %rd9667, %rd9664;
	ld.const.u64 	%rd2396, [%rd9649+136];
	add.s64 	%rd2397, %rd2395, %rd2396;
	add.s64 	%rd2398, %rd2397, %rd2394;
	add.s64 	%rd2399, %rd2398, %rd2391;
	add.s64 	%rd2400, %rd2399, %rd9660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2386;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 28;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 28;
	mov.b64 	%rd2401, {%r1815, %r1814};
	shf.l.wrap.b32 	%r1816, %r1812, %r1813, 30;
	shf.l.wrap.b32 	%r1817, %r1813, %r1812, 30;
	mov.b64 	%rd2402, {%r1817, %r1816};
	xor.b64  	%rd2403, %rd2402, %rd2401;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 25;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 25;
	mov.b64 	%rd2404, {%r1819, %r1818};
	xor.b64  	%rd2405, %rd2403, %rd2404;
	and.b64  	%rd2406, %rd2386, %rd9658;
	xor.b64  	%rd2407, %rd2386, %rd9658;
	and.b64  	%rd2408, %rd2407, %rd9659;
	or.b64  	%rd2409, %rd2408, %rd2406;
	add.s64 	%rd2410, %rd2399, %rd2409;
	add.s64 	%rd2411, %rd2410, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2400;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 14;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 14;
	mov.b64 	%rd2412, {%r1823, %r1822};
	shf.r.wrap.b32 	%r1824, %r1821, %r1820, 18;
	shf.r.wrap.b32 	%r1825, %r1820, %r1821, 18;
	mov.b64 	%rd2413, {%r1825, %r1824};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	shf.l.wrap.b32 	%r1826, %r1820, %r1821, 23;
	shf.l.wrap.b32 	%r1827, %r1821, %r1820, 23;
	mov.b64 	%rd2415, {%r1827, %r1826};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2375, %rd9662;
	and.b64  	%rd2418, %rd2400, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd9662;
	add.s64 	%rd2420, %rd9668, %rd9663;
	ld.const.u64 	%rd2421, [%rd9649+144];
	add.s64 	%rd2422, %rd2420, %rd2421;
	add.s64 	%rd2423, %rd2422, %rd2419;
	add.s64 	%rd2424, %rd2423, %rd2416;
	add.s64 	%rd2425, %rd2424, %rd9659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd2411;
	}
	shf.r.wrap.b32 	%r1830, %r1829, %r1828, 28;
	shf.r.wrap.b32 	%r1831, %r1828, %r1829, 28;
	mov.b64 	%rd2426, {%r1831, %r1830};
	shf.l.wrap.b32 	%r1832, %r1828, %r1829, 30;
	shf.l.wrap.b32 	%r1833, %r1829, %r1828, 30;
	mov.b64 	%rd2427, {%r1833, %r1832};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r1834, %r1828, %r1829, 25;
	shf.l.wrap.b32 	%r1835, %r1829, %r1828, 25;
	mov.b64 	%rd2429, {%r1835, %r1834};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	and.b64  	%rd2431, %rd2411, %rd2386;
	xor.b64  	%rd2432, %rd2411, %rd2386;
	and.b64  	%rd2433, %rd2432, %rd9658;
	or.b64  	%rd2434, %rd2433, %rd2431;
	add.s64 	%rd2435, %rd2424, %rd2434;
	add.s64 	%rd2436, %rd2435, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1836,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1837}, %rd2425;
	}
	shf.r.wrap.b32 	%r1838, %r1837, %r1836, 14;
	shf.r.wrap.b32 	%r1839, %r1836, %r1837, 14;
	mov.b64 	%rd2437, {%r1839, %r1838};
	shf.r.wrap.b32 	%r1840, %r1837, %r1836, 18;
	shf.r.wrap.b32 	%r1841, %r1836, %r1837, 18;
	mov.b64 	%rd2438, {%r1841, %r1840};
	xor.b64  	%rd2439, %rd2438, %rd2437;
	shf.l.wrap.b32 	%r1842, %r1836, %r1837, 23;
	shf.l.wrap.b32 	%r1843, %r1837, %r1836, 23;
	mov.b64 	%rd2440, {%r1843, %r1842};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	xor.b64  	%rd2442, %rd2400, %rd2375;
	and.b64  	%rd2443, %rd2425, %rd2442;
	xor.b64  	%rd2444, %rd2443, %rd2375;
	add.s64 	%rd2445, %rd9669, %rd9662;
	ld.const.u64 	%rd2446, [%rd9649+152];
	add.s64 	%rd2447, %rd2445, %rd2446;
	add.s64 	%rd2448, %rd2447, %rd2444;
	add.s64 	%rd2449, %rd2448, %rd2441;
	add.s64 	%rd2450, %rd2449, %rd9658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd2436;
	}
	shf.r.wrap.b32 	%r1846, %r1845, %r1844, 28;
	shf.r.wrap.b32 	%r1847, %r1844, %r1845, 28;
	mov.b64 	%rd2451, {%r1847, %r1846};
	shf.l.wrap.b32 	%r1848, %r1844, %r1845, 30;
	shf.l.wrap.b32 	%r1849, %r1845, %r1844, 30;
	mov.b64 	%rd2452, {%r1849, %r1848};
	xor.b64  	%rd2453, %rd2452, %rd2451;
	shf.l.wrap.b32 	%r1850, %r1844, %r1845, 25;
	shf.l.wrap.b32 	%r1851, %r1845, %r1844, 25;
	mov.b64 	%rd2454, {%r1851, %r1850};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	and.b64  	%rd2456, %rd2436, %rd2411;
	xor.b64  	%rd2457, %rd2436, %rd2411;
	and.b64  	%rd2458, %rd2457, %rd2386;
	or.b64  	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2449, %rd2459;
	add.s64 	%rd2461, %rd2460, %rd2455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2450;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 14;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 14;
	mov.b64 	%rd2462, {%r1855, %r1854};
	shf.r.wrap.b32 	%r1856, %r1853, %r1852, 18;
	shf.r.wrap.b32 	%r1857, %r1852, %r1853, 18;
	mov.b64 	%rd2463, {%r1857, %r1856};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	shf.l.wrap.b32 	%r1858, %r1852, %r1853, 23;
	shf.l.wrap.b32 	%r1859, %r1853, %r1852, 23;
	mov.b64 	%rd2465, {%r1859, %r1858};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	xor.b64  	%rd2467, %rd2425, %rd2400;
	and.b64  	%rd2468, %rd2450, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2400;
	add.s64 	%rd2470, %rd2375, %rd9670;
	ld.const.u64 	%rd2471, [%rd9649+160];
	add.s64 	%rd2472, %rd2470, %rd2471;
	add.s64 	%rd2473, %rd2472, %rd2469;
	add.s64 	%rd2474, %rd2473, %rd2466;
	add.s64 	%rd2475, %rd2474, %rd2386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2461;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 28;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 28;
	mov.b64 	%rd2476, {%r1863, %r1862};
	shf.l.wrap.b32 	%r1864, %r1860, %r1861, 30;
	shf.l.wrap.b32 	%r1865, %r1861, %r1860, 30;
	mov.b64 	%rd2477, {%r1865, %r1864};
	xor.b64  	%rd2478, %rd2477, %rd2476;
	shf.l.wrap.b32 	%r1866, %r1860, %r1861, 25;
	shf.l.wrap.b32 	%r1867, %r1861, %r1860, 25;
	mov.b64 	%rd2479, {%r1867, %r1866};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	and.b64  	%rd2481, %rd2461, %rd2436;
	xor.b64  	%rd2482, %rd2461, %rd2436;
	and.b64  	%rd2483, %rd2482, %rd2411;
	or.b64  	%rd2484, %rd2483, %rd2481;
	add.s64 	%rd2485, %rd2474, %rd2484;
	add.s64 	%rd2486, %rd2485, %rd2480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1868,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1869}, %rd2475;
	}
	shf.r.wrap.b32 	%r1870, %r1869, %r1868, 14;
	shf.r.wrap.b32 	%r1871, %r1868, %r1869, 14;
	mov.b64 	%rd2487, {%r1871, %r1870};
	shf.r.wrap.b32 	%r1872, %r1869, %r1868, 18;
	shf.r.wrap.b32 	%r1873, %r1868, %r1869, 18;
	mov.b64 	%rd2488, {%r1873, %r1872};
	xor.b64  	%rd2489, %rd2488, %rd2487;
	shf.l.wrap.b32 	%r1874, %r1868, %r1869, 23;
	shf.l.wrap.b32 	%r1875, %r1869, %r1868, 23;
	mov.b64 	%rd2490, {%r1875, %r1874};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	xor.b64  	%rd2492, %rd2450, %rd2425;
	and.b64  	%rd2493, %rd2475, %rd2492;
	xor.b64  	%rd2494, %rd2493, %rd2425;
	add.s64 	%rd2495, %rd2400, %rd9671;
	ld.const.u64 	%rd2496, [%rd9649+168];
	add.s64 	%rd2497, %rd2495, %rd2496;
	add.s64 	%rd2498, %rd2497, %rd2494;
	add.s64 	%rd2499, %rd2498, %rd2491;
	add.s64 	%rd2500, %rd2499, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2486;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 28;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 28;
	mov.b64 	%rd2501, {%r1879, %r1878};
	shf.l.wrap.b32 	%r1880, %r1876, %r1877, 30;
	shf.l.wrap.b32 	%r1881, %r1877, %r1876, 30;
	mov.b64 	%rd2502, {%r1881, %r1880};
	xor.b64  	%rd2503, %rd2502, %rd2501;
	shf.l.wrap.b32 	%r1882, %r1876, %r1877, 25;
	shf.l.wrap.b32 	%r1883, %r1877, %r1876, 25;
	mov.b64 	%rd2504, {%r1883, %r1882};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	and.b64  	%rd2506, %rd2486, %rd2461;
	xor.b64  	%rd2507, %rd2486, %rd2461;
	and.b64  	%rd2508, %rd2507, %rd2436;
	or.b64  	%rd2509, %rd2508, %rd2506;
	add.s64 	%rd2510, %rd2499, %rd2509;
	add.s64 	%rd2511, %rd2510, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd2500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2500;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 14;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 14;
	mov.b64 	%rd2512, {%r1887, %r1886};
	shf.r.wrap.b32 	%r1888, %r1885, %r1884, 18;
	shf.r.wrap.b32 	%r1889, %r1884, %r1885, 18;
	mov.b64 	%rd2513, {%r1889, %r1888};
	xor.b64  	%rd2514, %rd2513, %rd2512;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 23;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 23;
	mov.b64 	%rd2515, {%r1891, %r1890};
	xor.b64  	%rd2516, %rd2514, %rd2515;
	xor.b64  	%rd2517, %rd2475, %rd2450;
	and.b64  	%rd2518, %rd2500, %rd2517;
	xor.b64  	%rd2519, %rd2518, %rd2450;
	add.s64 	%rd2520, %rd2425, %rd9672;
	ld.const.u64 	%rd2521, [%rd9649+176];
	add.s64 	%rd2522, %rd2520, %rd2521;
	add.s64 	%rd2523, %rd2522, %rd2519;
	add.s64 	%rd2524, %rd2523, %rd2516;
	add.s64 	%rd2525, %rd2524, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd2511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2511;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 28;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 28;
	mov.b64 	%rd2526, {%r1895, %r1894};
	shf.l.wrap.b32 	%r1896, %r1892, %r1893, 30;
	shf.l.wrap.b32 	%r1897, %r1893, %r1892, 30;
	mov.b64 	%rd2527, {%r1897, %r1896};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r1898, %r1892, %r1893, 25;
	shf.l.wrap.b32 	%r1899, %r1893, %r1892, 25;
	mov.b64 	%rd2529, {%r1899, %r1898};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	and.b64  	%rd2531, %rd2511, %rd2486;
	xor.b64  	%rd2532, %rd2511, %rd2486;
	and.b64  	%rd2533, %rd2532, %rd2461;
	or.b64  	%rd2534, %rd2533, %rd2531;
	add.s64 	%rd2535, %rd2524, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2525;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 14;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 14;
	mov.b64 	%rd2537, {%r1903, %r1902};
	shf.r.wrap.b32 	%r1904, %r1901, %r1900, 18;
	shf.r.wrap.b32 	%r1905, %r1900, %r1901, 18;
	mov.b64 	%rd2538, {%r1905, %r1904};
	xor.b64  	%rd2539, %rd2538, %rd2537;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 23;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 23;
	mov.b64 	%rd2540, {%r1907, %r1906};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	xor.b64  	%rd2542, %rd2500, %rd2475;
	and.b64  	%rd2543, %rd2525, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2475;
	add.s64 	%rd2545, %rd2450, %rd9673;
	ld.const.u64 	%rd2546, [%rd9649+184];
	add.s64 	%rd2547, %rd2545, %rd2546;
	add.s64 	%rd2548, %rd2547, %rd2544;
	add.s64 	%rd2549, %rd2548, %rd2541;
	add.s64 	%rd2550, %rd2549, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2536;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 28;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 28;
	mov.b64 	%rd2551, {%r1911, %r1910};
	shf.l.wrap.b32 	%r1912, %r1908, %r1909, 30;
	shf.l.wrap.b32 	%r1913, %r1909, %r1908, 30;
	mov.b64 	%rd2552, {%r1913, %r1912};
	xor.b64  	%rd2553, %rd2552, %rd2551;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 25;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 25;
	mov.b64 	%rd2554, {%r1915, %r1914};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	and.b64  	%rd2556, %rd2536, %rd2511;
	xor.b64  	%rd2557, %rd2536, %rd2511;
	and.b64  	%rd2558, %rd2557, %rd2486;
	or.b64  	%rd2559, %rd2558, %rd2556;
	add.s64 	%rd2560, %rd2549, %rd2559;
	add.s64 	%rd2561, %rd2560, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2550;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 14;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 14;
	mov.b64 	%rd2562, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1917, %r1916, 18;
	shf.r.wrap.b32 	%r1921, %r1916, %r1917, 18;
	mov.b64 	%rd2563, {%r1921, %r1920};
	xor.b64  	%rd2564, %rd2563, %rd2562;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 23;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 23;
	mov.b64 	%rd2565, {%r1923, %r1922};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	xor.b64  	%rd2567, %rd2525, %rd2500;
	and.b64  	%rd2568, %rd2550, %rd2567;
	xor.b64  	%rd2569, %rd2568, %rd2500;
	add.s64 	%rd2570, %rd2475, %rd9657;
	ld.const.u64 	%rd2571, [%rd9649+192];
	add.s64 	%rd2572, %rd2570, %rd2571;
	add.s64 	%rd2573, %rd2572, %rd2569;
	add.s64 	%rd2574, %rd2573, %rd2566;
	add.s64 	%rd2575, %rd2574, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2561;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 28;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 28;
	mov.b64 	%rd2576, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 30;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 30;
	mov.b64 	%rd2577, {%r1929, %r1928};
	xor.b64  	%rd2578, %rd2577, %rd2576;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 25;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 25;
	mov.b64 	%rd2579, {%r1931, %r1930};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	and.b64  	%rd2581, %rd2561, %rd2536;
	xor.b64  	%rd2582, %rd2561, %rd2536;
	and.b64  	%rd2583, %rd2582, %rd2511;
	or.b64  	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2574, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2575;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 14;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 14;
	mov.b64 	%rd2587, {%r1935, %r1934};
	shf.r.wrap.b32 	%r1936, %r1933, %r1932, 18;
	shf.r.wrap.b32 	%r1937, %r1932, %r1933, 18;
	mov.b64 	%rd2588, {%r1937, %r1936};
	xor.b64  	%rd2589, %rd2588, %rd2587;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 23;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 23;
	mov.b64 	%rd2590, {%r1939, %r1938};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2550, %rd2525;
	and.b64  	%rd2593, %rd2575, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2525;
	add.s64 	%rd2595, %rd2500, %rd9656;
	ld.const.u64 	%rd2596, [%rd9649+200];
	add.s64 	%rd2597, %rd2595, %rd2596;
	add.s64 	%rd2598, %rd2597, %rd2594;
	add.s64 	%rd2599, %rd2598, %rd2591;
	add.s64 	%rd2600, %rd2599, %rd2511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2586;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 28;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 28;
	mov.b64 	%rd2601, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 30;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 30;
	mov.b64 	%rd2602, {%r1945, %r1944};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r1946, %r1940, %r1941, 25;
	shf.l.wrap.b32 	%r1947, %r1941, %r1940, 25;
	mov.b64 	%rd2604, {%r1947, %r1946};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	and.b64  	%rd2606, %rd2586, %rd2561;
	xor.b64  	%rd2607, %rd2586, %rd2561;
	and.b64  	%rd2608, %rd2607, %rd2536;
	or.b64  	%rd2609, %rd2608, %rd2606;
	add.s64 	%rd2610, %rd2599, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2600;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 14;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 14;
	mov.b64 	%rd2612, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1949, %r1948, 18;
	shf.r.wrap.b32 	%r1953, %r1948, %r1949, 18;
	mov.b64 	%rd2613, {%r1953, %r1952};
	xor.b64  	%rd2614, %rd2613, %rd2612;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 23;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 23;
	mov.b64 	%rd2615, {%r1955, %r1954};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2575, %rd2550;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2550;
	add.s64 	%rd2620, %rd2525, %rd9655;
	ld.const.u64 	%rd2621, [%rd9649+208];
	add.s64 	%rd2622, %rd2620, %rd2621;
	add.s64 	%rd2623, %rd2622, %rd2619;
	add.s64 	%rd2624, %rd2623, %rd2616;
	add.s64 	%rd2625, %rd2624, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd2611;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 28;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 28;
	mov.b64 	%rd2626, {%r1959, %r1958};
	shf.l.wrap.b32 	%r1960, %r1956, %r1957, 30;
	shf.l.wrap.b32 	%r1961, %r1957, %r1956, 30;
	mov.b64 	%rd2627, {%r1961, %r1960};
	xor.b64  	%rd2628, %rd2627, %rd2626;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 25;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 25;
	mov.b64 	%rd2629, {%r1963, %r1962};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	and.b64  	%rd2631, %rd2611, %rd2586;
	xor.b64  	%rd2632, %rd2611, %rd2586;
	and.b64  	%rd2633, %rd2632, %rd2561;
	or.b64  	%rd2634, %rd2633, %rd2631;
	add.s64 	%rd2635, %rd2624, %rd2634;
	add.s64 	%rd2636, %rd2635, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd2625;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 14;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 14;
	mov.b64 	%rd2637, {%r1967, %r1966};
	shf.r.wrap.b32 	%r1968, %r1965, %r1964, 18;
	shf.r.wrap.b32 	%r1969, %r1964, %r1965, 18;
	mov.b64 	%rd2638, {%r1969, %r1968};
	xor.b64  	%rd2639, %rd2638, %rd2637;
	shf.l.wrap.b32 	%r1970, %r1964, %r1965, 23;
	shf.l.wrap.b32 	%r1971, %r1965, %r1964, 23;
	mov.b64 	%rd2640, {%r1971, %r1970};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	xor.b64  	%rd2642, %rd2600, %rd2575;
	and.b64  	%rd2643, %rd2625, %rd2642;
	xor.b64  	%rd2644, %rd2643, %rd2575;
	add.s64 	%rd2645, %rd2550, %rd9654;
	ld.const.u64 	%rd2646, [%rd9649+216];
	add.s64 	%rd2647, %rd2645, %rd2646;
	add.s64 	%rd2648, %rd2647, %rd2644;
	add.s64 	%rd2649, %rd2648, %rd2641;
	add.s64 	%rd2650, %rd2649, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd2636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd2636;
	}
	shf.r.wrap.b32 	%r1974, %r1973, %r1972, 28;
	shf.r.wrap.b32 	%r1975, %r1972, %r1973, 28;
	mov.b64 	%rd2651, {%r1975, %r1974};
	shf.l.wrap.b32 	%r1976, %r1972, %r1973, 30;
	shf.l.wrap.b32 	%r1977, %r1973, %r1972, 30;
	mov.b64 	%rd2652, {%r1977, %r1976};
	xor.b64  	%rd2653, %rd2652, %rd2651;
	shf.l.wrap.b32 	%r1978, %r1972, %r1973, 25;
	shf.l.wrap.b32 	%r1979, %r1973, %r1972, 25;
	mov.b64 	%rd2654, {%r1979, %r1978};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	and.b64  	%rd2656, %rd2636, %rd2611;
	xor.b64  	%rd2657, %rd2636, %rd2611;
	and.b64  	%rd2658, %rd2657, %rd2586;
	or.b64  	%rd2659, %rd2658, %rd2656;
	add.s64 	%rd2660, %rd2649, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd2650;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 14;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 14;
	mov.b64 	%rd2662, {%r1983, %r1982};
	shf.r.wrap.b32 	%r1984, %r1981, %r1980, 18;
	shf.r.wrap.b32 	%r1985, %r1980, %r1981, 18;
	mov.b64 	%rd2663, {%r1985, %r1984};
	xor.b64  	%rd2664, %rd2663, %rd2662;
	shf.l.wrap.b32 	%r1986, %r1980, %r1981, 23;
	shf.l.wrap.b32 	%r1987, %r1981, %r1980, 23;
	mov.b64 	%rd2665, {%r1987, %r1986};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	xor.b64  	%rd2667, %rd2625, %rd2600;
	and.b64  	%rd2668, %rd2650, %rd2667;
	xor.b64  	%rd2669, %rd2668, %rd2600;
	add.s64 	%rd2670, %rd2575, %rd9653;
	ld.const.u64 	%rd2671, [%rd9649+224];
	add.s64 	%rd2672, %rd2670, %rd2671;
	add.s64 	%rd2673, %rd2672, %rd2669;
	add.s64 	%rd2674, %rd2673, %rd2666;
	add.s64 	%rd9665, %rd2674, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd2661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd2661;
	}
	shf.r.wrap.b32 	%r1990, %r1989, %r1988, 28;
	shf.r.wrap.b32 	%r1991, %r1988, %r1989, 28;
	mov.b64 	%rd2675, {%r1991, %r1990};
	shf.l.wrap.b32 	%r1992, %r1988, %r1989, 30;
	shf.l.wrap.b32 	%r1993, %r1989, %r1988, 30;
	mov.b64 	%rd2676, {%r1993, %r1992};
	xor.b64  	%rd2677, %rd2676, %rd2675;
	shf.l.wrap.b32 	%r1994, %r1988, %r1989, 25;
	shf.l.wrap.b32 	%r1995, %r1989, %r1988, 25;
	mov.b64 	%rd2678, {%r1995, %r1994};
	xor.b64  	%rd2679, %rd2677, %rd2678;
	and.b64  	%rd2680, %rd2661, %rd2636;
	xor.b64  	%rd2681, %rd2661, %rd2636;
	and.b64  	%rd2682, %rd2681, %rd2611;
	or.b64  	%rd2683, %rd2682, %rd2680;
	add.s64 	%rd2684, %rd2674, %rd2683;
	add.s64 	%rd9661, %rd2684, %rd2679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1996,%dummy}, %rd9665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd9665;
	}
	shf.r.wrap.b32 	%r1998, %r1997, %r1996, 14;
	shf.r.wrap.b32 	%r1999, %r1996, %r1997, 14;
	mov.b64 	%rd2685, {%r1999, %r1998};
	shf.r.wrap.b32 	%r2000, %r1997, %r1996, 18;
	shf.r.wrap.b32 	%r2001, %r1996, %r1997, 18;
	mov.b64 	%rd2686, {%r2001, %r2000};
	xor.b64  	%rd2687, %rd2686, %rd2685;
	shf.l.wrap.b32 	%r2002, %r1996, %r1997, 23;
	shf.l.wrap.b32 	%r2003, %r1997, %r1996, 23;
	mov.b64 	%rd2688, {%r2003, %r2002};
	xor.b64  	%rd2689, %rd2687, %rd2688;
	xor.b64  	%rd2690, %rd2650, %rd2625;
	and.b64  	%rd2691, %rd9665, %rd2690;
	xor.b64  	%rd2692, %rd2691, %rd2625;
	add.s64 	%rd2693, %rd2600, %rd9652;
	ld.const.u64 	%rd2694, [%rd9649+232];
	add.s64 	%rd2695, %rd2693, %rd2694;
	add.s64 	%rd2696, %rd2695, %rd2692;
	add.s64 	%rd2697, %rd2696, %rd2689;
	add.s64 	%rd9664, %rd2697, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2004,%dummy}, %rd9661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd9661;
	}
	shf.r.wrap.b32 	%r2006, %r2005, %r2004, 28;
	shf.r.wrap.b32 	%r2007, %r2004, %r2005, 28;
	mov.b64 	%rd2698, {%r2007, %r2006};
	shf.l.wrap.b32 	%r2008, %r2004, %r2005, 30;
	shf.l.wrap.b32 	%r2009, %r2005, %r2004, 30;
	mov.b64 	%rd2699, {%r2009, %r2008};
	xor.b64  	%rd2700, %rd2699, %rd2698;
	shf.l.wrap.b32 	%r2010, %r2004, %r2005, 25;
	shf.l.wrap.b32 	%r2011, %r2005, %r2004, 25;
	mov.b64 	%rd2701, {%r2011, %r2010};
	xor.b64  	%rd2702, %rd2700, %rd2701;
	and.b64  	%rd2703, %rd9661, %rd2661;
	xor.b64  	%rd2704, %rd9661, %rd2661;
	and.b64  	%rd2705, %rd2704, %rd2636;
	or.b64  	%rd2706, %rd2705, %rd2703;
	add.s64 	%rd2707, %rd2697, %rd2706;
	add.s64 	%rd9660, %rd2707, %rd2702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd9664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd9664;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 14;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 14;
	mov.b64 	%rd2708, {%r2015, %r2014};
	shf.r.wrap.b32 	%r2016, %r2013, %r2012, 18;
	shf.r.wrap.b32 	%r2017, %r2012, %r2013, 18;
	mov.b64 	%rd2709, {%r2017, %r2016};
	xor.b64  	%rd2710, %rd2709, %rd2708;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 23;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 23;
	mov.b64 	%rd2711, {%r2019, %r2018};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	xor.b64  	%rd2713, %rd9665, %rd2650;
	and.b64  	%rd2714, %rd9664, %rd2713;
	xor.b64  	%rd2715, %rd2714, %rd2650;
	add.s64 	%rd2716, %rd2625, %rd9651;
	ld.const.u64 	%rd2717, [%rd9649+240];
	add.s64 	%rd2718, %rd2716, %rd2717;
	add.s64 	%rd2719, %rd2718, %rd2715;
	add.s64 	%rd2720, %rd2719, %rd2712;
	add.s64 	%rd9663, %rd2720, %rd2636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd9660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd9660;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 28;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 28;
	mov.b64 	%rd2721, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 30;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 30;
	mov.b64 	%rd2722, {%r2025, %r2024};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 25;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 25;
	mov.b64 	%rd2724, {%r2027, %r2026};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	and.b64  	%rd2726, %rd9660, %rd9661;
	xor.b64  	%rd2727, %rd9660, %rd9661;
	and.b64  	%rd2728, %rd2727, %rd2661;
	or.b64  	%rd2729, %rd2728, %rd2726;
	add.s64 	%rd2730, %rd2720, %rd2729;
	add.s64 	%rd9659, %rd2730, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd9663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd9663;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 14;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 14;
	mov.b64 	%rd2731, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r2029, %r2028, 18;
	shf.r.wrap.b32 	%r2033, %r2028, %r2029, 18;
	mov.b64 	%rd2732, {%r2033, %r2032};
	xor.b64  	%rd2733, %rd2732, %rd2731;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 23;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 23;
	mov.b64 	%rd2734, {%r2035, %r2034};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	xor.b64  	%rd2736, %rd9664, %rd9665;
	and.b64  	%rd2737, %rd9663, %rd2736;
	xor.b64  	%rd2738, %rd2737, %rd9665;
	add.s64 	%rd2739, %rd2650, %rd9650;
	ld.const.u64 	%rd2740, [%rd9649+248];
	add.s64 	%rd2741, %rd2739, %rd2740;
	add.s64 	%rd2742, %rd2741, %rd2738;
	add.s64 	%rd2743, %rd2742, %rd2735;
	add.s64 	%rd9662, %rd2743, %rd2661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd9659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd9659;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 28;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 28;
	mov.b64 	%rd2744, {%r2039, %r2038};
	shf.l.wrap.b32 	%r2040, %r2036, %r2037, 30;
	shf.l.wrap.b32 	%r2041, %r2037, %r2036, 30;
	mov.b64 	%rd2745, {%r2041, %r2040};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 25;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 25;
	mov.b64 	%rd2747, {%r2043, %r2042};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	and.b64  	%rd2749, %rd9659, %rd9660;
	xor.b64  	%rd2750, %rd9659, %rd9660;
	and.b64  	%rd2751, %rd2750, %rd9661;
	or.b64  	%rd2752, %rd2751, %rd2749;
	add.s64 	%rd2753, %rd2743, %rd2752;
	add.s64 	%rd9658, %rd2753, %rd2748;
	add.s32 	%r7405, %r7405, 16;
	setp.lt.s32	%p20, %r7405, 80;
	mov.u64 	%rd9649, %rd203;
	@%p20 bra 	BB3_15;

	add.s64 	%rd41, %rd9658, %rd41;
	add.s64 	%rd40, %rd9659, %rd40;
	add.s64 	%rd39, %rd9660, %rd39;
	add.s64 	%rd38, %rd9661, %rd38;
	add.s64 	%rd37, %rd9662, %rd37;
	add.s64 	%rd36, %rd9663, %rd36;
	add.s64 	%rd35, %rd9664, %rd35;
	add.s64 	%rd34, %rd9665, %rd34;
	mov.u32 	%r7406, 0;
	mov.u32 	%r7407, %r7406;
	mov.u32 	%r7408, %r7406;
	mov.u32 	%r7409, %r7406;
	mov.u32 	%r7410, %r7406;
	mov.u32 	%r7411, %r7406;
	mov.u32 	%r7412, %r7406;
	mov.u32 	%r7413, %r7406;
	mov.u32 	%r7414, %r7406;
	mov.u32 	%r7415, %r7406;
	mov.u32 	%r7416, %r7406;
	mov.u32 	%r7417, %r7406;
	mov.u32 	%r7418, %r7406;
	mov.u32 	%r7419, %r7406;
	mov.u32 	%r7420, %r7406;
	mov.u32 	%r7421, %r7406;
	mov.u32 	%r7422, %r7406;
	mov.u32 	%r7423, %r7406;
	mov.u32 	%r7424, %r7406;
	mov.u32 	%r7425, %r7406;
	mov.u32 	%r7426, %r7406;
	mov.u32 	%r7427, %r7406;
	mov.u32 	%r7428, %r7406;
	mov.u32 	%r7429, %r7406;
	mov.u32 	%r7430, %r7406;
	mov.u32 	%r7431, %r7406;
	mov.u32 	%r7432, %r7406;
	mov.u32 	%r7433, %r7406;
	mov.u32 	%r7434, %r7406;
	mov.u32 	%r7435, %r7406;

BB3_17:
	ld.const.u64 	%rd9580, [k_sha512+72];
	ld.const.u64 	%rd9579, [k_sha512+64];
	ld.const.u64 	%rd9578, [k_sha512+56];
	ld.const.u64 	%rd9577, [k_sha512+48];
	ld.const.u64 	%rd9576, [k_sha512+40];
	ld.const.u64 	%rd9575, [k_sha512+32];
	ld.const.u64 	%rd9574, [k_sha512+24];
	ld.const.u64 	%rd9573, [k_sha512+16];
	mov.b64	%rd9699, {%r7434, %r7435};
	mov.b64	%rd9700, {%r7432, %r7433};
	mov.b64	%rd9701, {%r7430, %r7431};
	mov.b64	%rd9702, {%r7428, %r7429};
	mov.b64	%rd9703, {%r7426, %r7427};
	mov.b64	%rd9704, {%r7424, %r7425};
	mov.b64	%rd9705, {%r7422, %r7423};
	mov.b64	%rd9706, {%r7420, %r7421};
	mov.b64	%rd9690, {%r7418, %r7419};
	mov.b64	%rd9689, {%r7416, %r7417};
	mov.b64	%rd9688, {%r7414, %r7415};
	mov.b64	%rd9687, {%r7412, %r7413};
	mov.b64	%rd9686, {%r7410, %r7411};
	mov.b64	%rd9685, {%r7408, %r7409};
	mov.b64	%rd9684, {%r7406, %r7407};
	shl.b32 	%r2075, %r2, 3;
	mov.u32 	%r7453, 0;
	mov.b64	%rd9683, {%r2075, %r7453};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2078}, %rd37;
	}
	shf.r.wrap.b32 	%r2079, %r2078, %r2077, 18;
	shf.r.wrap.b32 	%r2080, %r2077, %r2078, 18;
	mov.b64 	%rd2755, {%r2080, %r2079};
	shf.r.wrap.b32 	%r2081, %r2078, %r2077, 14;
	shf.r.wrap.b32 	%r2082, %r2077, %r2078, 14;
	mov.b64 	%rd2756, {%r2082, %r2081};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	shf.l.wrap.b32 	%r2083, %r2077, %r2078, 23;
	shf.l.wrap.b32 	%r2084, %r2078, %r2077, 23;
	mov.b64 	%rd2758, {%r2084, %r2083};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd36, %rd35;
	and.b64  	%rd2761, %rd37, %rd2760;
	xor.b64  	%rd2762, %rd2761, %rd35;
	add.s64 	%rd2763, %rd9699, %rd34;
	add.s64 	%rd2764, %rd2763, %rd2762;
	add.s64 	%rd2765, %rd2764, %rd9722;
	add.s64 	%rd2766, %rd2765, %rd2759;
	add.s64 	%rd2767, %rd2766, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r2087, %r2086, %r2085, 30;
	shf.l.wrap.b32 	%r2088, %r2085, %r2086, 30;
	mov.b64 	%rd2768, {%r2088, %r2087};
	shf.r.wrap.b32 	%r2089, %r2085, %r2086, 28;
	shf.r.wrap.b32 	%r2090, %r2086, %r2085, 28;
	mov.b64 	%rd2769, {%r2090, %r2089};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	shf.l.wrap.b32 	%r2091, %r2086, %r2085, 25;
	shf.l.wrap.b32 	%r2092, %r2085, %r2086, 25;
	mov.b64 	%rd2771, {%r2092, %r2091};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	xor.b64  	%rd2773, %rd41, %rd40;
	and.b64  	%rd2774, %rd2773, %rd39;
	and.b64  	%rd2775, %rd41, %rd40;
	or.b64  	%rd2776, %rd2774, %rd2775;
	add.s64 	%rd2777, %rd2766, %rd2776;
	add.s64 	%rd2778, %rd2777, %rd2772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd2767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd2767;
	}
	shf.r.wrap.b32 	%r2095, %r2094, %r2093, 14;
	shf.r.wrap.b32 	%r2096, %r2093, %r2094, 14;
	mov.b64 	%rd2779, {%r2096, %r2095};
	shf.r.wrap.b32 	%r2097, %r2094, %r2093, 18;
	shf.r.wrap.b32 	%r2098, %r2093, %r2094, 18;
	mov.b64 	%rd2780, {%r2098, %r2097};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r2099, %r2093, %r2094, 23;
	shf.l.wrap.b32 	%r2100, %r2094, %r2093, 23;
	mov.b64 	%rd2782, {%r2100, %r2099};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd37, %rd36;
	and.b64  	%rd2785, %rd2767, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd36;
	add.s64 	%rd2787, %rd35, %rd9700;
	add.s64 	%rd2788, %rd2787, %rd9721;
	add.s64 	%rd2789, %rd2788, %rd2786;
	add.s64 	%rd2790, %rd2789, %rd2783;
	add.s64 	%rd2791, %rd2790, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2102}, %rd2778;
	}
	shf.r.wrap.b32 	%r2103, %r2102, %r2101, 28;
	shf.r.wrap.b32 	%r2104, %r2101, %r2102, 28;
	mov.b64 	%rd2792, {%r2104, %r2103};
	shf.l.wrap.b32 	%r2105, %r2101, %r2102, 30;
	shf.l.wrap.b32 	%r2106, %r2102, %r2101, 30;
	mov.b64 	%rd2793, {%r2106, %r2105};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	shf.l.wrap.b32 	%r2107, %r2101, %r2102, 25;
	shf.l.wrap.b32 	%r2108, %r2102, %r2101, 25;
	mov.b64 	%rd2795, {%r2108, %r2107};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	and.b64  	%rd2797, %rd2778, %rd41;
	xor.b64  	%rd2798, %rd2778, %rd41;
	and.b64  	%rd2799, %rd2798, %rd40;
	or.b64  	%rd2800, %rd2799, %rd2797;
	add.s64 	%rd2801, %rd2790, %rd2800;
	add.s64 	%rd2802, %rd2801, %rd2796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd2791;
	}
	shf.r.wrap.b32 	%r2111, %r2110, %r2109, 14;
	shf.r.wrap.b32 	%r2112, %r2109, %r2110, 14;
	mov.b64 	%rd2803, {%r2112, %r2111};
	shf.r.wrap.b32 	%r2113, %r2110, %r2109, 18;
	shf.r.wrap.b32 	%r2114, %r2109, %r2110, 18;
	mov.b64 	%rd2804, {%r2114, %r2113};
	xor.b64  	%rd2805, %rd2804, %rd2803;
	shf.l.wrap.b32 	%r2115, %r2109, %r2110, 23;
	shf.l.wrap.b32 	%r2116, %r2110, %r2109, 23;
	mov.b64 	%rd2806, {%r2116, %r2115};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	xor.b64  	%rd2808, %rd2767, %rd37;
	and.b64  	%rd2809, %rd2791, %rd2808;
	xor.b64  	%rd2810, %rd2809, %rd37;
	add.s64 	%rd2811, %rd36, %rd9701;
	add.s64 	%rd2812, %rd2811, %rd9573;
	add.s64 	%rd2813, %rd2812, %rd2810;
	add.s64 	%rd2814, %rd2813, %rd2807;
	add.s64 	%rd2815, %rd2814, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2117,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd2802;
	}
	shf.r.wrap.b32 	%r2119, %r2118, %r2117, 28;
	shf.r.wrap.b32 	%r2120, %r2117, %r2118, 28;
	mov.b64 	%rd2816, {%r2120, %r2119};
	shf.l.wrap.b32 	%r2121, %r2117, %r2118, 30;
	shf.l.wrap.b32 	%r2122, %r2118, %r2117, 30;
	mov.b64 	%rd2817, {%r2122, %r2121};
	xor.b64  	%rd2818, %rd2817, %rd2816;
	shf.l.wrap.b32 	%r2123, %r2117, %r2118, 25;
	shf.l.wrap.b32 	%r2124, %r2118, %r2117, 25;
	mov.b64 	%rd2819, {%r2124, %r2123};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	and.b64  	%rd2821, %rd2802, %rd2778;
	xor.b64  	%rd2822, %rd2802, %rd2778;
	and.b64  	%rd2823, %rd2822, %rd41;
	or.b64  	%rd2824, %rd2823, %rd2821;
	add.s64 	%rd2825, %rd2814, %rd2824;
	add.s64 	%rd2826, %rd2825, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd2815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd2815;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 14;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 14;
	mov.b64 	%rd2827, {%r2128, %r2127};
	shf.r.wrap.b32 	%r2129, %r2126, %r2125, 18;
	shf.r.wrap.b32 	%r2130, %r2125, %r2126, 18;
	mov.b64 	%rd2828, {%r2130, %r2129};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 23;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 23;
	mov.b64 	%rd2830, {%r2132, %r2131};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2791, %rd2767;
	and.b64  	%rd2833, %rd2815, %rd2832;
	xor.b64  	%rd2834, %rd2833, %rd2767;
	add.s64 	%rd2835, %rd37, %rd9702;
	add.s64 	%rd2836, %rd2835, %rd9574;
	add.s64 	%rd2837, %rd2836, %rd2834;
	add.s64 	%rd2838, %rd2837, %rd2831;
	add.s64 	%rd2839, %rd2838, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2133,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd2826;
	}
	shf.r.wrap.b32 	%r2135, %r2134, %r2133, 28;
	shf.r.wrap.b32 	%r2136, %r2133, %r2134, 28;
	mov.b64 	%rd2840, {%r2136, %r2135};
	shf.l.wrap.b32 	%r2137, %r2133, %r2134, 30;
	shf.l.wrap.b32 	%r2138, %r2134, %r2133, 30;
	mov.b64 	%rd2841, {%r2138, %r2137};
	xor.b64  	%rd2842, %rd2841, %rd2840;
	shf.l.wrap.b32 	%r2139, %r2133, %r2134, 25;
	shf.l.wrap.b32 	%r2140, %r2134, %r2133, 25;
	mov.b64 	%rd2843, {%r2140, %r2139};
	xor.b64  	%rd2844, %rd2842, %rd2843;
	and.b64  	%rd2845, %rd2826, %rd2802;
	xor.b64  	%rd2846, %rd2826, %rd2802;
	and.b64  	%rd2847, %rd2846, %rd2778;
	or.b64  	%rd2848, %rd2847, %rd2845;
	add.s64 	%rd2849, %rd2838, %rd2848;
	add.s64 	%rd2850, %rd2849, %rd2844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd2839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd2839;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 14;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 14;
	mov.b64 	%rd2851, {%r2144, %r2143};
	shf.r.wrap.b32 	%r2145, %r2142, %r2141, 18;
	shf.r.wrap.b32 	%r2146, %r2141, %r2142, 18;
	mov.b64 	%rd2852, {%r2146, %r2145};
	xor.b64  	%rd2853, %rd2852, %rd2851;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 23;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 23;
	mov.b64 	%rd2854, {%r2148, %r2147};
	xor.b64  	%rd2855, %rd2853, %rd2854;
	xor.b64  	%rd2856, %rd2815, %rd2791;
	and.b64  	%rd2857, %rd2839, %rd2856;
	xor.b64  	%rd2858, %rd2857, %rd2791;
	add.s64 	%rd2859, %rd2767, %rd9703;
	add.s64 	%rd2860, %rd2859, %rd9575;
	add.s64 	%rd2861, %rd2860, %rd2858;
	add.s64 	%rd2862, %rd2861, %rd2855;
	add.s64 	%rd2863, %rd2862, %rd2778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd2850;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 28;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 28;
	mov.b64 	%rd2864, {%r2152, %r2151};
	shf.l.wrap.b32 	%r2153, %r2149, %r2150, 30;
	shf.l.wrap.b32 	%r2154, %r2150, %r2149, 30;
	mov.b64 	%rd2865, {%r2154, %r2153};
	xor.b64  	%rd2866, %rd2865, %rd2864;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 25;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 25;
	mov.b64 	%rd2867, {%r2156, %r2155};
	xor.b64  	%rd2868, %rd2866, %rd2867;
	and.b64  	%rd2869, %rd2850, %rd2826;
	xor.b64  	%rd2870, %rd2850, %rd2826;
	and.b64  	%rd2871, %rd2870, %rd2802;
	or.b64  	%rd2872, %rd2871, %rd2869;
	add.s64 	%rd2873, %rd2862, %rd2872;
	add.s64 	%rd2874, %rd2873, %rd2868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd2863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd2863;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 14;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 14;
	mov.b64 	%rd2875, {%r2160, %r2159};
	shf.r.wrap.b32 	%r2161, %r2158, %r2157, 18;
	shf.r.wrap.b32 	%r2162, %r2157, %r2158, 18;
	mov.b64 	%rd2876, {%r2162, %r2161};
	xor.b64  	%rd2877, %rd2876, %rd2875;
	shf.l.wrap.b32 	%r2163, %r2157, %r2158, 23;
	shf.l.wrap.b32 	%r2164, %r2158, %r2157, 23;
	mov.b64 	%rd2878, {%r2164, %r2163};
	xor.b64  	%rd2879, %rd2877, %rd2878;
	xor.b64  	%rd2880, %rd2839, %rd2815;
	and.b64  	%rd2881, %rd2863, %rd2880;
	xor.b64  	%rd2882, %rd2881, %rd2815;
	add.s64 	%rd2883, %rd2791, %rd9704;
	add.s64 	%rd2884, %rd2883, %rd9576;
	add.s64 	%rd2885, %rd2884, %rd2882;
	add.s64 	%rd2886, %rd2885, %rd2879;
	add.s64 	%rd2887, %rd2886, %rd2802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2165,%dummy}, %rd2874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2166}, %rd2874;
	}
	shf.r.wrap.b32 	%r2167, %r2166, %r2165, 28;
	shf.r.wrap.b32 	%r2168, %r2165, %r2166, 28;
	mov.b64 	%rd2888, {%r2168, %r2167};
	shf.l.wrap.b32 	%r2169, %r2165, %r2166, 30;
	shf.l.wrap.b32 	%r2170, %r2166, %r2165, 30;
	mov.b64 	%rd2889, {%r2170, %r2169};
	xor.b64  	%rd2890, %rd2889, %rd2888;
	shf.l.wrap.b32 	%r2171, %r2165, %r2166, 25;
	shf.l.wrap.b32 	%r2172, %r2166, %r2165, 25;
	mov.b64 	%rd2891, {%r2172, %r2171};
	xor.b64  	%rd2892, %rd2890, %rd2891;
	and.b64  	%rd2893, %rd2874, %rd2850;
	xor.b64  	%rd2894, %rd2874, %rd2850;
	and.b64  	%rd2895, %rd2894, %rd2826;
	or.b64  	%rd2896, %rd2895, %rd2893;
	add.s64 	%rd2897, %rd2886, %rd2896;
	add.s64 	%rd2898, %rd2897, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2174}, %rd2887;
	}
	shf.r.wrap.b32 	%r2175, %r2174, %r2173, 14;
	shf.r.wrap.b32 	%r2176, %r2173, %r2174, 14;
	mov.b64 	%rd2899, {%r2176, %r2175};
	shf.r.wrap.b32 	%r2177, %r2174, %r2173, 18;
	shf.r.wrap.b32 	%r2178, %r2173, %r2174, 18;
	mov.b64 	%rd2900, {%r2178, %r2177};
	xor.b64  	%rd2901, %rd2900, %rd2899;
	shf.l.wrap.b32 	%r2179, %r2173, %r2174, 23;
	shf.l.wrap.b32 	%r2180, %r2174, %r2173, 23;
	mov.b64 	%rd2902, {%r2180, %r2179};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	xor.b64  	%rd2904, %rd2863, %rd2839;
	and.b64  	%rd2905, %rd2887, %rd2904;
	xor.b64  	%rd2906, %rd2905, %rd2839;
	add.s64 	%rd2907, %rd2815, %rd9705;
	add.s64 	%rd2908, %rd2907, %rd9577;
	add.s64 	%rd2909, %rd2908, %rd2906;
	add.s64 	%rd2910, %rd2909, %rd2903;
	add.s64 	%rd2911, %rd2910, %rd2826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2181,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2182}, %rd2898;
	}
	shf.r.wrap.b32 	%r2183, %r2182, %r2181, 28;
	shf.r.wrap.b32 	%r2184, %r2181, %r2182, 28;
	mov.b64 	%rd2912, {%r2184, %r2183};
	shf.l.wrap.b32 	%r2185, %r2181, %r2182, 30;
	shf.l.wrap.b32 	%r2186, %r2182, %r2181, 30;
	mov.b64 	%rd2913, {%r2186, %r2185};
	xor.b64  	%rd2914, %rd2913, %rd2912;
	shf.l.wrap.b32 	%r2187, %r2181, %r2182, 25;
	shf.l.wrap.b32 	%r2188, %r2182, %r2181, 25;
	mov.b64 	%rd2915, {%r2188, %r2187};
	xor.b64  	%rd2916, %rd2914, %rd2915;
	and.b64  	%rd2917, %rd2898, %rd2874;
	xor.b64  	%rd2918, %rd2898, %rd2874;
	and.b64  	%rd2919, %rd2918, %rd2850;
	or.b64  	%rd2920, %rd2919, %rd2917;
	add.s64 	%rd2921, %rd2910, %rd2920;
	add.s64 	%rd2922, %rd2921, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd2911;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 14;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 14;
	mov.b64 	%rd2923, {%r2192, %r2191};
	shf.r.wrap.b32 	%r2193, %r2190, %r2189, 18;
	shf.r.wrap.b32 	%r2194, %r2189, %r2190, 18;
	mov.b64 	%rd2924, {%r2194, %r2193};
	xor.b64  	%rd2925, %rd2924, %rd2923;
	shf.l.wrap.b32 	%r2195, %r2189, %r2190, 23;
	shf.l.wrap.b32 	%r2196, %r2190, %r2189, 23;
	mov.b64 	%rd2926, {%r2196, %r2195};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	xor.b64  	%rd2928, %rd2887, %rd2863;
	and.b64  	%rd2929, %rd2911, %rd2928;
	xor.b64  	%rd2930, %rd2929, %rd2863;
	add.s64 	%rd2931, %rd2839, %rd9706;
	add.s64 	%rd2932, %rd2931, %rd9578;
	add.s64 	%rd2933, %rd2932, %rd2930;
	add.s64 	%rd2934, %rd2933, %rd2927;
	add.s64 	%rd2935, %rd2934, %rd2850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd2922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd2922;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 28;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 28;
	mov.b64 	%rd2936, {%r2200, %r2199};
	shf.l.wrap.b32 	%r2201, %r2197, %r2198, 30;
	shf.l.wrap.b32 	%r2202, %r2198, %r2197, 30;
	mov.b64 	%rd2937, {%r2202, %r2201};
	xor.b64  	%rd2938, %rd2937, %rd2936;
	shf.l.wrap.b32 	%r2203, %r2197, %r2198, 25;
	shf.l.wrap.b32 	%r2204, %r2198, %r2197, 25;
	mov.b64 	%rd2939, {%r2204, %r2203};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	and.b64  	%rd2941, %rd2922, %rd2898;
	xor.b64  	%rd2942, %rd2922, %rd2898;
	and.b64  	%rd2943, %rd2942, %rd2874;
	or.b64  	%rd2944, %rd2943, %rd2941;
	add.s64 	%rd2945, %rd2934, %rd2944;
	add.s64 	%rd2946, %rd2945, %rd2940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd2935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd2935;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 14;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 14;
	mov.b64 	%rd2947, {%r2208, %r2207};
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 18;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 18;
	mov.b64 	%rd2948, {%r2210, %r2209};
	xor.b64  	%rd2949, %rd2948, %rd2947;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 23;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 23;
	mov.b64 	%rd2950, {%r2212, %r2211};
	xor.b64  	%rd2951, %rd2949, %rd2950;
	xor.b64  	%rd2952, %rd2911, %rd2887;
	and.b64  	%rd2953, %rd2935, %rd2952;
	xor.b64  	%rd2954, %rd2953, %rd2887;
	add.s64 	%rd2955, %rd2863, %rd9690;
	add.s64 	%rd2956, %rd2955, %rd9579;
	add.s64 	%rd2957, %rd2956, %rd2954;
	add.s64 	%rd2958, %rd2957, %rd2951;
	add.s64 	%rd2959, %rd2958, %rd2874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd2946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd2946;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 28;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 28;
	mov.b64 	%rd2960, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 30;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 30;
	mov.b64 	%rd2961, {%r2218, %r2217};
	xor.b64  	%rd2962, %rd2961, %rd2960;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 25;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 25;
	mov.b64 	%rd2963, {%r2220, %r2219};
	xor.b64  	%rd2964, %rd2962, %rd2963;
	and.b64  	%rd2965, %rd2946, %rd2922;
	xor.b64  	%rd2966, %rd2946, %rd2922;
	and.b64  	%rd2967, %rd2966, %rd2898;
	or.b64  	%rd2968, %rd2967, %rd2965;
	add.s64 	%rd2969, %rd2958, %rd2968;
	add.s64 	%rd2970, %rd2969, %rd2964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd2959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd2959;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 14;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 14;
	mov.b64 	%rd2971, {%r2224, %r2223};
	shf.r.wrap.b32 	%r2225, %r2222, %r2221, 18;
	shf.r.wrap.b32 	%r2226, %r2221, %r2222, 18;
	mov.b64 	%rd2972, {%r2226, %r2225};
	xor.b64  	%rd2973, %rd2972, %rd2971;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 23;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 23;
	mov.b64 	%rd2974, {%r2228, %r2227};
	xor.b64  	%rd2975, %rd2973, %rd2974;
	xor.b64  	%rd2976, %rd2935, %rd2911;
	and.b64  	%rd2977, %rd2959, %rd2976;
	xor.b64  	%rd2978, %rd2977, %rd2911;
	add.s64 	%rd2979, %rd2887, %rd9689;
	add.s64 	%rd2980, %rd2979, %rd9580;
	add.s64 	%rd2981, %rd2980, %rd2978;
	add.s64 	%rd2982, %rd2981, %rd2975;
	add.s64 	%rd2983, %rd2982, %rd2898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd2970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd2970;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 28;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 28;
	mov.b64 	%rd2984, {%r2232, %r2231};
	shf.l.wrap.b32 	%r2233, %r2229, %r2230, 30;
	shf.l.wrap.b32 	%r2234, %r2230, %r2229, 30;
	mov.b64 	%rd2985, {%r2234, %r2233};
	xor.b64  	%rd2986, %rd2985, %rd2984;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 25;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 25;
	mov.b64 	%rd2987, {%r2236, %r2235};
	xor.b64  	%rd2988, %rd2986, %rd2987;
	and.b64  	%rd2989, %rd2970, %rd2946;
	xor.b64  	%rd2990, %rd2970, %rd2946;
	and.b64  	%rd2991, %rd2990, %rd2922;
	or.b64  	%rd2992, %rd2991, %rd2989;
	add.s64 	%rd2993, %rd2982, %rd2992;
	add.s64 	%rd2994, %rd2993, %rd2988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd2983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd2983;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd2995, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd2996, {%r2242, %r2241};
	xor.b64  	%rd2997, %rd2996, %rd2995;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd2998, {%r2244, %r2243};
	xor.b64  	%rd2999, %rd2997, %rd2998;
	xor.b64  	%rd3000, %rd2959, %rd2935;
	and.b64  	%rd3001, %rd2983, %rd3000;
	xor.b64  	%rd3002, %rd3001, %rd2935;
	add.s64 	%rd3003, %rd2911, %rd9688;
	add.s64 	%rd3004, %rd3003, %rd9712;
	add.s64 	%rd3005, %rd3004, %rd3002;
	add.s64 	%rd3006, %rd3005, %rd2999;
	add.s64 	%rd3007, %rd3006, %rd2922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd2994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd2994;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3008, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3009, {%r2250, %r2249};
	xor.b64  	%rd3010, %rd3009, %rd3008;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3011, {%r2252, %r2251};
	xor.b64  	%rd3012, %rd3010, %rd3011;
	and.b64  	%rd3013, %rd2994, %rd2970;
	xor.b64  	%rd3014, %rd2994, %rd2970;
	and.b64  	%rd3015, %rd3014, %rd2946;
	or.b64  	%rd3016, %rd3015, %rd3013;
	add.s64 	%rd3017, %rd3006, %rd3016;
	add.s64 	%rd3018, %rd3017, %rd3012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd3007;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 14;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 14;
	mov.b64 	%rd3019, {%r2256, %r2255};
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 18;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 18;
	mov.b64 	%rd3020, {%r2258, %r2257};
	xor.b64  	%rd3021, %rd3020, %rd3019;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 23;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 23;
	mov.b64 	%rd3022, {%r2260, %r2259};
	xor.b64  	%rd3023, %rd3021, %rd3022;
	xor.b64  	%rd3024, %rd2983, %rd2959;
	and.b64  	%rd3025, %rd3007, %rd3024;
	xor.b64  	%rd3026, %rd3025, %rd2959;
	add.s64 	%rd3027, %rd2935, %rd9687;
	add.s64 	%rd3028, %rd3027, %rd9711;
	add.s64 	%rd3029, %rd3028, %rd3026;
	add.s64 	%rd3030, %rd3029, %rd3023;
	add.s64 	%rd3031, %rd3030, %rd2946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3018;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 28;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 28;
	mov.b64 	%rd3032, {%r2264, %r2263};
	shf.l.wrap.b32 	%r2265, %r2261, %r2262, 30;
	shf.l.wrap.b32 	%r2266, %r2262, %r2261, 30;
	mov.b64 	%rd3033, {%r2266, %r2265};
	xor.b64  	%rd3034, %rd3033, %rd3032;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 25;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 25;
	mov.b64 	%rd3035, {%r2268, %r2267};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	and.b64  	%rd3037, %rd3018, %rd2994;
	xor.b64  	%rd3038, %rd3018, %rd2994;
	and.b64  	%rd3039, %rd3038, %rd2970;
	or.b64  	%rd3040, %rd3039, %rd3037;
	add.s64 	%rd3041, %rd3030, %rd3040;
	add.s64 	%rd3042, %rd3041, %rd3036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3031;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 14;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 14;
	mov.b64 	%rd3043, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 18;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 18;
	mov.b64 	%rd3044, {%r2274, %r2273};
	xor.b64  	%rd3045, %rd3044, %rd3043;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 23;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 23;
	mov.b64 	%rd3046, {%r2276, %r2275};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	xor.b64  	%rd3048, %rd3007, %rd2983;
	and.b64  	%rd3049, %rd3031, %rd3048;
	xor.b64  	%rd3050, %rd3049, %rd2983;
	add.s64 	%rd3051, %rd2959, %rd9686;
	add.s64 	%rd3052, %rd3051, %rd9710;
	add.s64 	%rd3053, %rd3052, %rd3050;
	add.s64 	%rd3054, %rd3053, %rd3047;
	add.s64 	%rd9698, %rd3054, %rd2970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd3042;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 28;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 28;
	mov.b64 	%rd3055, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 30;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 30;
	mov.b64 	%rd3056, {%r2282, %r2281};
	xor.b64  	%rd3057, %rd3056, %rd3055;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 25;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 25;
	mov.b64 	%rd3058, {%r2284, %r2283};
	xor.b64  	%rd3059, %rd3057, %rd3058;
	and.b64  	%rd3060, %rd3042, %rd3018;
	xor.b64  	%rd3061, %rd3042, %rd3018;
	and.b64  	%rd3062, %rd3061, %rd2994;
	or.b64  	%rd3063, %rd3062, %rd3060;
	add.s64 	%rd3064, %rd3054, %rd3063;
	add.s64 	%rd9694, %rd3064, %rd3059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd9698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd9698;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 14;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 14;
	mov.b64 	%rd3065, {%r2288, %r2287};
	shf.r.wrap.b32 	%r2289, %r2286, %r2285, 18;
	shf.r.wrap.b32 	%r2290, %r2285, %r2286, 18;
	mov.b64 	%rd3066, {%r2290, %r2289};
	xor.b64  	%rd3067, %rd3066, %rd3065;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 23;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 23;
	mov.b64 	%rd3068, {%r2292, %r2291};
	xor.b64  	%rd3069, %rd3067, %rd3068;
	xor.b64  	%rd3070, %rd3031, %rd3007;
	and.b64  	%rd3071, %rd9698, %rd3070;
	xor.b64  	%rd3072, %rd3071, %rd3007;
	add.s64 	%rd3073, %rd2983, %rd9685;
	add.s64 	%rd3074, %rd3073, %rd9709;
	add.s64 	%rd3075, %rd3074, %rd3072;
	add.s64 	%rd3076, %rd3075, %rd3069;
	add.s64 	%rd9697, %rd3076, %rd2994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd9694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd9694;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 28;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 28;
	mov.b64 	%rd3077, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 30;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 30;
	mov.b64 	%rd3078, {%r2298, %r2297};
	xor.b64  	%rd3079, %rd3078, %rd3077;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 25;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 25;
	mov.b64 	%rd3080, {%r2300, %r2299};
	xor.b64  	%rd3081, %rd3079, %rd3080;
	and.b64  	%rd3082, %rd9694, %rd3042;
	xor.b64  	%rd3083, %rd9694, %rd3042;
	and.b64  	%rd3084, %rd3083, %rd3018;
	or.b64  	%rd3085, %rd3084, %rd3082;
	add.s64 	%rd3086, %rd3076, %rd3085;
	add.s64 	%rd9693, %rd3086, %rd3081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd9697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd9697;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 14;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 14;
	mov.b64 	%rd3087, {%r2304, %r2303};
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 18;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 18;
	mov.b64 	%rd3088, {%r2306, %r2305};
	xor.b64  	%rd3089, %rd3088, %rd3087;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 23;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 23;
	mov.b64 	%rd3090, {%r2308, %r2307};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	xor.b64  	%rd3092, %rd9698, %rd3031;
	and.b64  	%rd3093, %rd9697, %rd3092;
	xor.b64  	%rd3094, %rd3093, %rd3031;
	add.s64 	%rd3095, %rd3007, %rd9684;
	add.s64 	%rd3096, %rd3095, %rd9708;
	add.s64 	%rd3097, %rd3096, %rd3094;
	add.s64 	%rd3098, %rd3097, %rd3091;
	add.s64 	%rd9696, %rd3098, %rd3018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd9693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd9693;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 28;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 28;
	mov.b64 	%rd3099, {%r2312, %r2311};
	shf.l.wrap.b32 	%r2313, %r2309, %r2310, 30;
	shf.l.wrap.b32 	%r2314, %r2310, %r2309, 30;
	mov.b64 	%rd3100, {%r2314, %r2313};
	xor.b64  	%rd3101, %rd3100, %rd3099;
	shf.l.wrap.b32 	%r2315, %r2309, %r2310, 25;
	shf.l.wrap.b32 	%r2316, %r2310, %r2309, 25;
	mov.b64 	%rd3102, {%r2316, %r2315};
	xor.b64  	%rd3103, %rd3101, %rd3102;
	and.b64  	%rd3104, %rd9693, %rd9694;
	xor.b64  	%rd3105, %rd9693, %rd9694;
	and.b64  	%rd3106, %rd3105, %rd3042;
	or.b64  	%rd3107, %rd3106, %rd3104;
	add.s64 	%rd3108, %rd3098, %rd3107;
	add.s64 	%rd9692, %rd3108, %rd3103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd9696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd9696;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 14;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 14;
	mov.b64 	%rd3109, {%r2320, %r2319};
	shf.r.wrap.b32 	%r2321, %r2318, %r2317, 18;
	shf.r.wrap.b32 	%r2322, %r2317, %r2318, 18;
	mov.b64 	%rd3110, {%r2322, %r2321};
	xor.b64  	%rd3111, %rd3110, %rd3109;
	shf.l.wrap.b32 	%r2323, %r2317, %r2318, 23;
	shf.l.wrap.b32 	%r2324, %r2318, %r2317, 23;
	mov.b64 	%rd3112, {%r2324, %r2323};
	xor.b64  	%rd3113, %rd3111, %rd3112;
	xor.b64  	%rd3114, %rd9697, %rd9698;
	and.b64  	%rd3115, %rd9696, %rd3114;
	xor.b64  	%rd3116, %rd3115, %rd9698;
	add.s64 	%rd3117, %rd3031, %rd9683;
	add.s64 	%rd3118, %rd3117, %rd9707;
	add.s64 	%rd3119, %rd3118, %rd3116;
	add.s64 	%rd3120, %rd3119, %rd3113;
	add.s64 	%rd9695, %rd3120, %rd3042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd9692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd9692;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 28;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 28;
	mov.b64 	%rd3121, {%r2328, %r2327};
	shf.l.wrap.b32 	%r2329, %r2325, %r2326, 30;
	shf.l.wrap.b32 	%r2330, %r2326, %r2325, 30;
	mov.b64 	%rd3122, {%r2330, %r2329};
	xor.b64  	%rd3123, %rd3122, %rd3121;
	shf.l.wrap.b32 	%r2331, %r2325, %r2326, 25;
	shf.l.wrap.b32 	%r2332, %r2326, %r2325, 25;
	mov.b64 	%rd3124, {%r2332, %r2331};
	xor.b64  	%rd3125, %rd3123, %rd3124;
	and.b64  	%rd3126, %rd9692, %rd9693;
	xor.b64  	%rd3127, %rd9692, %rd9693;
	and.b64  	%rd3128, %rd3127, %rd9694;
	or.b64  	%rd3129, %rd3128, %rd3126;
	add.s64 	%rd3130, %rd3120, %rd3129;
	add.s64 	%rd9691, %rd3130, %rd3125;
	mov.u32 	%r7436, 16;
	mov.u64 	%rd9682, k_sha512;

BB3_18:
	shr.u64 	%rd3131, %rd9684, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd9684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd9684;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 19;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 19;
	mov.b64 	%rd3132, {%r2336, %r2335};
	xor.b64  	%rd3133, %rd3132, %rd3131;
	shf.l.wrap.b32 	%r2337, %r2333, %r2334, 3;
	shf.l.wrap.b32 	%r2338, %r2334, %r2333, 3;
	mov.b64 	%rd3134, {%r2338, %r2337};
	xor.b64  	%rd3135, %rd3133, %rd3134;
	shr.u64 	%rd3136, %rd9700, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2339,%dummy}, %rd9700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2340}, %rd9700;
	}
	shf.r.wrap.b32 	%r2341, %r2340, %r2339, 1;
	shf.r.wrap.b32 	%r2342, %r2339, %r2340, 1;
	mov.b64 	%rd3137, {%r2342, %r2341};
	xor.b64  	%rd3138, %rd3137, %rd3136;
	shf.r.wrap.b32 	%r2343, %r2340, %r2339, 8;
	shf.r.wrap.b32 	%r2344, %r2339, %r2340, 8;
	mov.b64 	%rd3139, {%r2344, %r2343};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	add.s64 	%rd3141, %rd9689, %rd9699;
	add.s64 	%rd3142, %rd3141, %rd3135;
	add.s64 	%rd9699, %rd3142, %rd3140;
	shr.u64 	%rd3143, %rd9683, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2345,%dummy}, %rd9683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2346}, %rd9683;
	}
	shf.r.wrap.b32 	%r2347, %r2346, %r2345, 19;
	shf.r.wrap.b32 	%r2348, %r2345, %r2346, 19;
	mov.b64 	%rd3144, {%r2348, %r2347};
	xor.b64  	%rd3145, %rd3144, %rd3143;
	shf.l.wrap.b32 	%r2349, %r2345, %r2346, 3;
	shf.l.wrap.b32 	%r2350, %r2346, %r2345, 3;
	mov.b64 	%rd3146, {%r2350, %r2349};
	xor.b64  	%rd3147, %rd3145, %rd3146;
	shr.u64 	%rd3148, %rd9701, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2351,%dummy}, %rd9701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2352}, %rd9701;
	}
	shf.r.wrap.b32 	%r2353, %r2352, %r2351, 1;
	shf.r.wrap.b32 	%r2354, %r2351, %r2352, 1;
	mov.b64 	%rd3149, {%r2354, %r2353};
	xor.b64  	%rd3150, %rd3149, %rd3148;
	shf.r.wrap.b32 	%r2355, %r2352, %r2351, 8;
	shf.r.wrap.b32 	%r2356, %r2351, %r2352, 8;
	mov.b64 	%rd3151, {%r2356, %r2355};
	xor.b64  	%rd3152, %rd3150, %rd3151;
	add.s64 	%rd3153, %rd9688, %rd9700;
	add.s64 	%rd3154, %rd3153, %rd3147;
	add.s64 	%rd9700, %rd3154, %rd3152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd9699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd9699;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 19;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 19;
	mov.b64 	%rd3155, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 3;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 3;
	mov.b64 	%rd3156, {%r2362, %r2361};
	shr.u64 	%rd3157, %rd9699, 6;
	xor.b64  	%rd3158, %rd3155, %rd3157;
	xor.b64  	%rd3159, %rd3158, %rd3156;
	shr.u64 	%rd3160, %rd9702, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2363,%dummy}, %rd9702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2364}, %rd9702;
	}
	shf.r.wrap.b32 	%r2365, %r2364, %r2363, 1;
	shf.r.wrap.b32 	%r2366, %r2363, %r2364, 1;
	mov.b64 	%rd3161, {%r2366, %r2365};
	xor.b64  	%rd3162, %rd3161, %rd3160;
	shf.r.wrap.b32 	%r2367, %r2364, %r2363, 8;
	shf.r.wrap.b32 	%r2368, %r2363, %r2364, 8;
	mov.b64 	%rd3163, {%r2368, %r2367};
	xor.b64  	%rd3164, %rd3162, %rd3163;
	add.s64 	%rd3165, %rd9687, %rd9701;
	add.s64 	%rd3166, %rd3165, %rd3159;
	add.s64 	%rd9701, %rd3166, %rd3164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2369,%dummy}, %rd9700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2370}, %rd9700;
	}
	shf.r.wrap.b32 	%r2371, %r2370, %r2369, 19;
	shf.r.wrap.b32 	%r2372, %r2369, %r2370, 19;
	mov.b64 	%rd3167, {%r2372, %r2371};
	shf.l.wrap.b32 	%r2373, %r2369, %r2370, 3;
	shf.l.wrap.b32 	%r2374, %r2370, %r2369, 3;
	mov.b64 	%rd3168, {%r2374, %r2373};
	shr.u64 	%rd3169, %rd9700, 6;
	xor.b64  	%rd3170, %rd3167, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3168;
	shr.u64 	%rd3172, %rd9703, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2375,%dummy}, %rd9703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2376}, %rd9703;
	}
	shf.r.wrap.b32 	%r2377, %r2376, %r2375, 1;
	shf.r.wrap.b32 	%r2378, %r2375, %r2376, 1;
	mov.b64 	%rd3173, {%r2378, %r2377};
	xor.b64  	%rd3174, %rd3173, %rd3172;
	shf.r.wrap.b32 	%r2379, %r2376, %r2375, 8;
	shf.r.wrap.b32 	%r2380, %r2375, %r2376, 8;
	mov.b64 	%rd3175, {%r2380, %r2379};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	add.s64 	%rd3177, %rd9686, %rd9702;
	add.s64 	%rd3178, %rd3177, %rd3171;
	add.s64 	%rd9702, %rd3178, %rd3176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd9701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd9701;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 19;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 19;
	mov.b64 	%rd3179, {%r2384, %r2383};
	shf.l.wrap.b32 	%r2385, %r2381, %r2382, 3;
	shf.l.wrap.b32 	%r2386, %r2382, %r2381, 3;
	mov.b64 	%rd3180, {%r2386, %r2385};
	shr.u64 	%rd3181, %rd9701, 6;
	xor.b64  	%rd3182, %rd3179, %rd3181;
	xor.b64  	%rd3183, %rd3182, %rd3180;
	shr.u64 	%rd3184, %rd9704, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd9704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd9704;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 1;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 1;
	mov.b64 	%rd3185, {%r2390, %r2389};
	xor.b64  	%rd3186, %rd3185, %rd3184;
	shf.r.wrap.b32 	%r2391, %r2388, %r2387, 8;
	shf.r.wrap.b32 	%r2392, %r2387, %r2388, 8;
	mov.b64 	%rd3187, {%r2392, %r2391};
	xor.b64  	%rd3188, %rd3186, %rd3187;
	add.s64 	%rd3189, %rd9685, %rd9703;
	add.s64 	%rd3190, %rd3189, %rd3183;
	add.s64 	%rd9703, %rd3190, %rd3188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2393,%dummy}, %rd9702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2394}, %rd9702;
	}
	shf.r.wrap.b32 	%r2395, %r2394, %r2393, 19;
	shf.r.wrap.b32 	%r2396, %r2393, %r2394, 19;
	mov.b64 	%rd3191, {%r2396, %r2395};
	shf.l.wrap.b32 	%r2397, %r2393, %r2394, 3;
	shf.l.wrap.b32 	%r2398, %r2394, %r2393, 3;
	mov.b64 	%rd3192, {%r2398, %r2397};
	shr.u64 	%rd3193, %rd9702, 6;
	xor.b64  	%rd3194, %rd3191, %rd3193;
	xor.b64  	%rd3195, %rd3194, %rd3192;
	shr.u64 	%rd3196, %rd9705, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2399,%dummy}, %rd9705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2400}, %rd9705;
	}
	shf.r.wrap.b32 	%r2401, %r2400, %r2399, 1;
	shf.r.wrap.b32 	%r2402, %r2399, %r2400, 1;
	mov.b64 	%rd3197, {%r2402, %r2401};
	xor.b64  	%rd3198, %rd3197, %rd3196;
	shf.r.wrap.b32 	%r2403, %r2400, %r2399, 8;
	shf.r.wrap.b32 	%r2404, %r2399, %r2400, 8;
	mov.b64 	%rd3199, {%r2404, %r2403};
	xor.b64  	%rd3200, %rd3198, %rd3199;
	add.s64 	%rd3201, %rd9684, %rd9704;
	add.s64 	%rd3202, %rd3201, %rd3195;
	add.s64 	%rd9704, %rd3202, %rd3200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd9703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2406}, %rd9703;
	}
	shf.r.wrap.b32 	%r2407, %r2406, %r2405, 19;
	shf.r.wrap.b32 	%r2408, %r2405, %r2406, 19;
	mov.b64 	%rd3203, {%r2408, %r2407};
	shf.l.wrap.b32 	%r2409, %r2405, %r2406, 3;
	shf.l.wrap.b32 	%r2410, %r2406, %r2405, 3;
	mov.b64 	%rd3204, {%r2410, %r2409};
	shr.u64 	%rd3205, %rd9703, 6;
	xor.b64  	%rd3206, %rd3203, %rd3205;
	xor.b64  	%rd3207, %rd3206, %rd3204;
	shr.u64 	%rd3208, %rd9706, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2411,%dummy}, %rd9706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2412}, %rd9706;
	}
	shf.r.wrap.b32 	%r2413, %r2412, %r2411, 1;
	shf.r.wrap.b32 	%r2414, %r2411, %r2412, 1;
	mov.b64 	%rd3209, {%r2414, %r2413};
	xor.b64  	%rd3210, %rd3209, %rd3208;
	shf.r.wrap.b32 	%r2415, %r2412, %r2411, 8;
	shf.r.wrap.b32 	%r2416, %r2411, %r2412, 8;
	mov.b64 	%rd3211, {%r2416, %r2415};
	xor.b64  	%rd3212, %rd3210, %rd3211;
	add.s64 	%rd3213, %rd9683, %rd9705;
	add.s64 	%rd3214, %rd3213, %rd3207;
	add.s64 	%rd9705, %rd3214, %rd3212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd9704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd9704;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 19;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 19;
	mov.b64 	%rd3215, {%r2420, %r2419};
	shf.l.wrap.b32 	%r2421, %r2417, %r2418, 3;
	shf.l.wrap.b32 	%r2422, %r2418, %r2417, 3;
	mov.b64 	%rd3216, {%r2422, %r2421};
	shr.u64 	%rd3217, %rd9704, 6;
	xor.b64  	%rd3218, %rd3215, %rd3217;
	xor.b64  	%rd3219, %rd3218, %rd3216;
	shr.u64 	%rd3220, %rd9690, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2423,%dummy}, %rd9690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd9690;
	}
	shf.r.wrap.b32 	%r2425, %r2424, %r2423, 1;
	shf.r.wrap.b32 	%r2426, %r2423, %r2424, 1;
	mov.b64 	%rd3221, {%r2426, %r2425};
	xor.b64  	%rd3222, %rd3221, %rd3220;
	shf.r.wrap.b32 	%r2427, %r2424, %r2423, 8;
	shf.r.wrap.b32 	%r2428, %r2423, %r2424, 8;
	mov.b64 	%rd3223, {%r2428, %r2427};
	xor.b64  	%rd3224, %rd3222, %rd3223;
	add.s64 	%rd3225, %rd9699, %rd9706;
	add.s64 	%rd3226, %rd3225, %rd3219;
	add.s64 	%rd9706, %rd3226, %rd3224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2429,%dummy}, %rd9705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2430}, %rd9705;
	}
	shf.r.wrap.b32 	%r2431, %r2430, %r2429, 19;
	shf.r.wrap.b32 	%r2432, %r2429, %r2430, 19;
	mov.b64 	%rd3227, {%r2432, %r2431};
	shf.l.wrap.b32 	%r2433, %r2429, %r2430, 3;
	shf.l.wrap.b32 	%r2434, %r2430, %r2429, 3;
	mov.b64 	%rd3228, {%r2434, %r2433};
	shr.u64 	%rd3229, %rd9705, 6;
	xor.b64  	%rd3230, %rd3227, %rd3229;
	xor.b64  	%rd3231, %rd3230, %rd3228;
	shr.u64 	%rd3232, %rd9689, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2435,%dummy}, %rd9689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd9689;
	}
	shf.r.wrap.b32 	%r2437, %r2436, %r2435, 1;
	shf.r.wrap.b32 	%r2438, %r2435, %r2436, 1;
	mov.b64 	%rd3233, {%r2438, %r2437};
	xor.b64  	%rd3234, %rd3233, %rd3232;
	shf.r.wrap.b32 	%r2439, %r2436, %r2435, 8;
	shf.r.wrap.b32 	%r2440, %r2435, %r2436, 8;
	mov.b64 	%rd3235, {%r2440, %r2439};
	xor.b64  	%rd3236, %rd3234, %rd3235;
	add.s64 	%rd3237, %rd9700, %rd9690;
	add.s64 	%rd3238, %rd3237, %rd3231;
	add.s64 	%rd9690, %rd3238, %rd3236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd9706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2442}, %rd9706;
	}
	shf.r.wrap.b32 	%r2443, %r2442, %r2441, 19;
	shf.r.wrap.b32 	%r2444, %r2441, %r2442, 19;
	mov.b64 	%rd3239, {%r2444, %r2443};
	shf.l.wrap.b32 	%r2445, %r2441, %r2442, 3;
	shf.l.wrap.b32 	%r2446, %r2442, %r2441, 3;
	mov.b64 	%rd3240, {%r2446, %r2445};
	shr.u64 	%rd3241, %rd9706, 6;
	xor.b64  	%rd3242, %rd3239, %rd3241;
	xor.b64  	%rd3243, %rd3242, %rd3240;
	shr.u64 	%rd3244, %rd9688, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2447,%dummy}, %rd9688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd9688;
	}
	shf.r.wrap.b32 	%r2449, %r2448, %r2447, 1;
	shf.r.wrap.b32 	%r2450, %r2447, %r2448, 1;
	mov.b64 	%rd3245, {%r2450, %r2449};
	xor.b64  	%rd3246, %rd3245, %rd3244;
	shf.r.wrap.b32 	%r2451, %r2448, %r2447, 8;
	shf.r.wrap.b32 	%r2452, %r2447, %r2448, 8;
	mov.b64 	%rd3247, {%r2452, %r2451};
	xor.b64  	%rd3248, %rd3246, %rd3247;
	add.s64 	%rd3249, %rd9701, %rd9689;
	add.s64 	%rd3250, %rd3249, %rd3243;
	add.s64 	%rd9689, %rd3250, %rd3248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2453,%dummy}, %rd9690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2454}, %rd9690;
	}
	shf.r.wrap.b32 	%r2455, %r2454, %r2453, 19;
	shf.r.wrap.b32 	%r2456, %r2453, %r2454, 19;
	mov.b64 	%rd3251, {%r2456, %r2455};
	shf.l.wrap.b32 	%r2457, %r2453, %r2454, 3;
	shf.l.wrap.b32 	%r2458, %r2454, %r2453, 3;
	mov.b64 	%rd3252, {%r2458, %r2457};
	shr.u64 	%rd3253, %rd9690, 6;
	xor.b64  	%rd3254, %rd3251, %rd3253;
	xor.b64  	%rd3255, %rd3254, %rd3252;
	shr.u64 	%rd3256, %rd9687, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2459,%dummy}, %rd9687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd9687;
	}
	shf.r.wrap.b32 	%r2461, %r2460, %r2459, 1;
	shf.r.wrap.b32 	%r2462, %r2459, %r2460, 1;
	mov.b64 	%rd3257, {%r2462, %r2461};
	xor.b64  	%rd3258, %rd3257, %rd3256;
	shf.r.wrap.b32 	%r2463, %r2460, %r2459, 8;
	shf.r.wrap.b32 	%r2464, %r2459, %r2460, 8;
	mov.b64 	%rd3259, {%r2464, %r2463};
	xor.b64  	%rd3260, %rd3258, %rd3259;
	add.s64 	%rd3261, %rd9702, %rd9688;
	add.s64 	%rd3262, %rd3261, %rd3255;
	add.s64 	%rd9688, %rd3262, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2465,%dummy}, %rd9689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2466}, %rd9689;
	}
	shf.r.wrap.b32 	%r2467, %r2466, %r2465, 19;
	shf.r.wrap.b32 	%r2468, %r2465, %r2466, 19;
	mov.b64 	%rd3263, {%r2468, %r2467};
	shf.l.wrap.b32 	%r2469, %r2465, %r2466, 3;
	shf.l.wrap.b32 	%r2470, %r2466, %r2465, 3;
	mov.b64 	%rd3264, {%r2470, %r2469};
	shr.u64 	%rd3265, %rd9689, 6;
	xor.b64  	%rd3266, %rd3263, %rd3265;
	xor.b64  	%rd3267, %rd3266, %rd3264;
	shr.u64 	%rd3268, %rd9686, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2471,%dummy}, %rd9686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2472}, %rd9686;
	}
	shf.r.wrap.b32 	%r2473, %r2472, %r2471, 1;
	shf.r.wrap.b32 	%r2474, %r2471, %r2472, 1;
	mov.b64 	%rd3269, {%r2474, %r2473};
	xor.b64  	%rd3270, %rd3269, %rd3268;
	shf.r.wrap.b32 	%r2475, %r2472, %r2471, 8;
	shf.r.wrap.b32 	%r2476, %r2471, %r2472, 8;
	mov.b64 	%rd3271, {%r2476, %r2475};
	xor.b64  	%rd3272, %rd3270, %rd3271;
	add.s64 	%rd3273, %rd9703, %rd9687;
	add.s64 	%rd3274, %rd3273, %rd3267;
	add.s64 	%rd9687, %rd3274, %rd3272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd9688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd9688;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 19;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 19;
	mov.b64 	%rd3275, {%r2480, %r2479};
	shf.l.wrap.b32 	%r2481, %r2477, %r2478, 3;
	shf.l.wrap.b32 	%r2482, %r2478, %r2477, 3;
	mov.b64 	%rd3276, {%r2482, %r2481};
	shr.u64 	%rd3277, %rd9688, 6;
	xor.b64  	%rd3278, %rd3275, %rd3277;
	xor.b64  	%rd3279, %rd3278, %rd3276;
	shr.u64 	%rd3280, %rd9685, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd9685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd9685;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 1;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 1;
	mov.b64 	%rd3281, {%r2486, %r2485};
	xor.b64  	%rd3282, %rd3281, %rd3280;
	shf.r.wrap.b32 	%r2487, %r2484, %r2483, 8;
	shf.r.wrap.b32 	%r2488, %r2483, %r2484, 8;
	mov.b64 	%rd3283, {%r2488, %r2487};
	xor.b64  	%rd3284, %rd3282, %rd3283;
	add.s64 	%rd3285, %rd9704, %rd9686;
	add.s64 	%rd3286, %rd3285, %rd3279;
	add.s64 	%rd9686, %rd3286, %rd3284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd9687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd9687;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 19;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 19;
	mov.b64 	%rd3287, {%r2492, %r2491};
	shf.l.wrap.b32 	%r2493, %r2489, %r2490, 3;
	shf.l.wrap.b32 	%r2494, %r2490, %r2489, 3;
	mov.b64 	%rd3288, {%r2494, %r2493};
	shr.u64 	%rd3289, %rd9687, 6;
	xor.b64  	%rd3290, %rd3287, %rd3289;
	xor.b64  	%rd3291, %rd3290, %rd3288;
	shr.u64 	%rd3292, %rd9684, 7;
	shf.r.wrap.b32 	%r2495, %r2334, %r2333, 1;
	shf.r.wrap.b32 	%r2496, %r2333, %r2334, 1;
	mov.b64 	%rd3293, {%r2496, %r2495};
	xor.b64  	%rd3294, %rd3293, %rd3292;
	shf.r.wrap.b32 	%r2497, %r2334, %r2333, 8;
	shf.r.wrap.b32 	%r2498, %r2333, %r2334, 8;
	mov.b64 	%rd3295, {%r2498, %r2497};
	xor.b64  	%rd3296, %rd3294, %rd3295;
	add.s64 	%rd3297, %rd9705, %rd9685;
	add.s64 	%rd3298, %rd3297, %rd3291;
	add.s64 	%rd9685, %rd3298, %rd3296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2499,%dummy}, %rd9686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2500}, %rd9686;
	}
	shf.r.wrap.b32 	%r2501, %r2500, %r2499, 19;
	shf.r.wrap.b32 	%r2502, %r2499, %r2500, 19;
	mov.b64 	%rd3299, {%r2502, %r2501};
	shf.l.wrap.b32 	%r2503, %r2499, %r2500, 3;
	shf.l.wrap.b32 	%r2504, %r2500, %r2499, 3;
	mov.b64 	%rd3300, {%r2504, %r2503};
	shr.u64 	%rd3301, %rd9686, 6;
	xor.b64  	%rd3302, %rd3299, %rd3301;
	xor.b64  	%rd3303, %rd3302, %rd3300;
	shr.u64 	%rd3304, %rd9683, 7;
	shf.r.wrap.b32 	%r2505, %r2346, %r2345, 1;
	shf.r.wrap.b32 	%r2506, %r2345, %r2346, 1;
	mov.b64 	%rd3305, {%r2506, %r2505};
	xor.b64  	%rd3306, %rd3305, %rd3304;
	shf.r.wrap.b32 	%r2507, %r2346, %r2345, 8;
	shf.r.wrap.b32 	%r2508, %r2345, %r2346, 8;
	mov.b64 	%rd3307, {%r2508, %r2507};
	xor.b64  	%rd3308, %rd3306, %rd3307;
	add.s64 	%rd3309, %rd9706, %rd9684;
	add.s64 	%rd3310, %rd3309, %rd3303;
	add.s64 	%rd9684, %rd3310, %rd3308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd9685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2510}, %rd9685;
	}
	shf.r.wrap.b32 	%r2511, %r2510, %r2509, 19;
	shf.r.wrap.b32 	%r2512, %r2509, %r2510, 19;
	mov.b64 	%rd3311, {%r2512, %r2511};
	shf.l.wrap.b32 	%r2513, %r2509, %r2510, 3;
	shf.l.wrap.b32 	%r2514, %r2510, %r2509, 3;
	mov.b64 	%rd3312, {%r2514, %r2513};
	shr.u64 	%rd3313, %rd9685, 6;
	xor.b64  	%rd3314, %rd3311, %rd3313;
	xor.b64  	%rd3315, %rd3314, %rd3312;
	shf.r.wrap.b32 	%r2515, %r2358, %r2357, 1;
	shf.r.wrap.b32 	%r2516, %r2357, %r2358, 1;
	mov.b64 	%rd3316, {%r2516, %r2515};
	shf.r.wrap.b32 	%r2517, %r2358, %r2357, 8;
	shf.r.wrap.b32 	%r2518, %r2357, %r2358, 8;
	mov.b64 	%rd3317, {%r2518, %r2517};
	shr.u64 	%rd3318, %rd9699, 7;
	xor.b64  	%rd3319, %rd3316, %rd3318;
	xor.b64  	%rd3320, %rd3319, %rd3317;
	add.s64 	%rd3321, %rd9690, %rd9683;
	add.s64 	%rd3322, %rd3321, %rd3315;
	add.s64 	%rd9683, %rd3322, %rd3320;
	add.s64 	%rd293, %rd9682, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd9695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd9695;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 18;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 18;
	mov.b64 	%rd3323, {%r2522, %r2521};
	shf.r.wrap.b32 	%r2523, %r2520, %r2519, 14;
	shf.r.wrap.b32 	%r2524, %r2519, %r2520, 14;
	mov.b64 	%rd3324, {%r2524, %r2523};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	shf.l.wrap.b32 	%r2525, %r2519, %r2520, 23;
	shf.l.wrap.b32 	%r2526, %r2520, %r2519, 23;
	mov.b64 	%rd3326, {%r2526, %r2525};
	xor.b64  	%rd3327, %rd3325, %rd3326;
	xor.b64  	%rd3328, %rd9696, %rd9697;
	and.b64  	%rd3329, %rd9695, %rd3328;
	xor.b64  	%rd3330, %rd3329, %rd9697;
	add.s64 	%rd3331, %rd3330, %rd9698;
	add.s64 	%rd3332, %rd3331, %rd9699;
	ld.const.u64 	%rd3333, [%rd9682+128];
	add.s64 	%rd3334, %rd3332, %rd3333;
	add.s64 	%rd3335, %rd3334, %rd3327;
	add.s64 	%rd3336, %rd3335, %rd9694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2527}, %rd9691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd9691;
	}
	shf.l.wrap.b32 	%r2529, %r2528, %r2527, 30;
	shf.l.wrap.b32 	%r2530, %r2527, %r2528, 30;
	mov.b64 	%rd3337, {%r2530, %r2529};
	shf.r.wrap.b32 	%r2531, %r2527, %r2528, 28;
	shf.r.wrap.b32 	%r2532, %r2528, %r2527, 28;
	mov.b64 	%rd3338, {%r2532, %r2531};
	xor.b64  	%rd3339, %rd3337, %rd3338;
	shf.l.wrap.b32 	%r2533, %r2528, %r2527, 25;
	shf.l.wrap.b32 	%r2534, %r2527, %r2528, 25;
	mov.b64 	%rd3340, {%r2534, %r2533};
	xor.b64  	%rd3341, %rd3339, %rd3340;
	xor.b64  	%rd3342, %rd9691, %rd9692;
	and.b64  	%rd3343, %rd3342, %rd9693;
	and.b64  	%rd3344, %rd9691, %rd9692;
	or.b64  	%rd3345, %rd3343, %rd3344;
	add.s64 	%rd3346, %rd3335, %rd3345;
	add.s64 	%rd3347, %rd3346, %rd3341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2535,%dummy}, %rd3336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd3336;
	}
	shf.r.wrap.b32 	%r2537, %r2536, %r2535, 14;
	shf.r.wrap.b32 	%r2538, %r2535, %r2536, 14;
	mov.b64 	%rd3348, {%r2538, %r2537};
	shf.r.wrap.b32 	%r2539, %r2536, %r2535, 18;
	shf.r.wrap.b32 	%r2540, %r2535, %r2536, 18;
	mov.b64 	%rd3349, {%r2540, %r2539};
	xor.b64  	%rd3350, %rd3349, %rd3348;
	shf.l.wrap.b32 	%r2541, %r2535, %r2536, 23;
	shf.l.wrap.b32 	%r2542, %r2536, %r2535, 23;
	mov.b64 	%rd3351, {%r2542, %r2541};
	xor.b64  	%rd3352, %rd3350, %rd3351;
	xor.b64  	%rd3353, %rd9695, %rd9696;
	and.b64  	%rd3354, %rd3336, %rd3353;
	xor.b64  	%rd3355, %rd3354, %rd9696;
	add.s64 	%rd3356, %rd9700, %rd9697;
	ld.const.u64 	%rd3357, [%rd9682+136];
	add.s64 	%rd3358, %rd3356, %rd3357;
	add.s64 	%rd3359, %rd3358, %rd3355;
	add.s64 	%rd3360, %rd3359, %rd3352;
	add.s64 	%rd3361, %rd3360, %rd9693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd3347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd3347;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 28;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 28;
	mov.b64 	%rd3362, {%r2546, %r2545};
	shf.l.wrap.b32 	%r2547, %r2543, %r2544, 30;
	shf.l.wrap.b32 	%r2548, %r2544, %r2543, 30;
	mov.b64 	%rd3363, {%r2548, %r2547};
	xor.b64  	%rd3364, %rd3363, %rd3362;
	shf.l.wrap.b32 	%r2549, %r2543, %r2544, 25;
	shf.l.wrap.b32 	%r2550, %r2544, %r2543, 25;
	mov.b64 	%rd3365, {%r2550, %r2549};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	and.b64  	%rd3367, %rd3347, %rd9691;
	xor.b64  	%rd3368, %rd3347, %rd9691;
	and.b64  	%rd3369, %rd3368, %rd9692;
	or.b64  	%rd3370, %rd3369, %rd3367;
	add.s64 	%rd3371, %rd3360, %rd3370;
	add.s64 	%rd3372, %rd3371, %rd3366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd3361;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 14;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 14;
	mov.b64 	%rd3373, {%r2554, %r2553};
	shf.r.wrap.b32 	%r2555, %r2552, %r2551, 18;
	shf.r.wrap.b32 	%r2556, %r2551, %r2552, 18;
	mov.b64 	%rd3374, {%r2556, %r2555};
	xor.b64  	%rd3375, %rd3374, %rd3373;
	shf.l.wrap.b32 	%r2557, %r2551, %r2552, 23;
	shf.l.wrap.b32 	%r2558, %r2552, %r2551, 23;
	mov.b64 	%rd3376, {%r2558, %r2557};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	xor.b64  	%rd3378, %rd3336, %rd9695;
	and.b64  	%rd3379, %rd3361, %rd3378;
	xor.b64  	%rd3380, %rd3379, %rd9695;
	add.s64 	%rd3381, %rd9701, %rd9696;
	ld.const.u64 	%rd3382, [%rd9682+144];
	add.s64 	%rd3383, %rd3381, %rd3382;
	add.s64 	%rd3384, %rd3383, %rd3380;
	add.s64 	%rd3385, %rd3384, %rd3377;
	add.s64 	%rd3386, %rd3385, %rd9692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2559,%dummy}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2560}, %rd3372;
	}
	shf.r.wrap.b32 	%r2561, %r2560, %r2559, 28;
	shf.r.wrap.b32 	%r2562, %r2559, %r2560, 28;
	mov.b64 	%rd3387, {%r2562, %r2561};
	shf.l.wrap.b32 	%r2563, %r2559, %r2560, 30;
	shf.l.wrap.b32 	%r2564, %r2560, %r2559, 30;
	mov.b64 	%rd3388, {%r2564, %r2563};
	xor.b64  	%rd3389, %rd3388, %rd3387;
	shf.l.wrap.b32 	%r2565, %r2559, %r2560, 25;
	shf.l.wrap.b32 	%r2566, %r2560, %r2559, 25;
	mov.b64 	%rd3390, {%r2566, %r2565};
	xor.b64  	%rd3391, %rd3389, %rd3390;
	and.b64  	%rd3392, %rd3372, %rd3347;
	xor.b64  	%rd3393, %rd3372, %rd3347;
	and.b64  	%rd3394, %rd3393, %rd9691;
	or.b64  	%rd3395, %rd3394, %rd3392;
	add.s64 	%rd3396, %rd3385, %rd3395;
	add.s64 	%rd3397, %rd3396, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd3386;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 14;
	mov.b64 	%rd3398, {%r2570, %r2569};
	shf.r.wrap.b32 	%r2571, %r2568, %r2567, 18;
	shf.r.wrap.b32 	%r2572, %r2567, %r2568, 18;
	mov.b64 	%rd3399, {%r2572, %r2571};
	xor.b64  	%rd3400, %rd3399, %rd3398;
	shf.l.wrap.b32 	%r2573, %r2567, %r2568, 23;
	shf.l.wrap.b32 	%r2574, %r2568, %r2567, 23;
	mov.b64 	%rd3401, {%r2574, %r2573};
	xor.b64  	%rd3402, %rd3400, %rd3401;
	xor.b64  	%rd3403, %rd3361, %rd3336;
	and.b64  	%rd3404, %rd3386, %rd3403;
	xor.b64  	%rd3405, %rd3404, %rd3336;
	add.s64 	%rd3406, %rd9702, %rd9695;
	ld.const.u64 	%rd3407, [%rd9682+152];
	add.s64 	%rd3408, %rd3406, %rd3407;
	add.s64 	%rd3409, %rd3408, %rd3405;
	add.s64 	%rd3410, %rd3409, %rd3402;
	add.s64 	%rd3411, %rd3410, %rd9691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2575,%dummy}, %rd3397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2576}, %rd3397;
	}
	shf.r.wrap.b32 	%r2577, %r2576, %r2575, 28;
	shf.r.wrap.b32 	%r2578, %r2575, %r2576, 28;
	mov.b64 	%rd3412, {%r2578, %r2577};
	shf.l.wrap.b32 	%r2579, %r2575, %r2576, 30;
	shf.l.wrap.b32 	%r2580, %r2576, %r2575, 30;
	mov.b64 	%rd3413, {%r2580, %r2579};
	xor.b64  	%rd3414, %rd3413, %rd3412;
	shf.l.wrap.b32 	%r2581, %r2575, %r2576, 25;
	shf.l.wrap.b32 	%r2582, %r2576, %r2575, 25;
	mov.b64 	%rd3415, {%r2582, %r2581};
	xor.b64  	%rd3416, %rd3414, %rd3415;
	and.b64  	%rd3417, %rd3397, %rd3372;
	xor.b64  	%rd3418, %rd3397, %rd3372;
	and.b64  	%rd3419, %rd3418, %rd3347;
	or.b64  	%rd3420, %rd3419, %rd3417;
	add.s64 	%rd3421, %rd3410, %rd3420;
	add.s64 	%rd3422, %rd3421, %rd3416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd3411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd3411;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 14;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 14;
	mov.b64 	%rd3423, {%r2586, %r2585};
	shf.r.wrap.b32 	%r2587, %r2584, %r2583, 18;
	shf.r.wrap.b32 	%r2588, %r2583, %r2584, 18;
	mov.b64 	%rd3424, {%r2588, %r2587};
	xor.b64  	%rd3425, %rd3424, %rd3423;
	shf.l.wrap.b32 	%r2589, %r2583, %r2584, 23;
	shf.l.wrap.b32 	%r2590, %r2584, %r2583, 23;
	mov.b64 	%rd3426, {%r2590, %r2589};
	xor.b64  	%rd3427, %rd3425, %rd3426;
	xor.b64  	%rd3428, %rd3386, %rd3361;
	and.b64  	%rd3429, %rd3411, %rd3428;
	xor.b64  	%rd3430, %rd3429, %rd3361;
	add.s64 	%rd3431, %rd3336, %rd9703;
	ld.const.u64 	%rd3432, [%rd9682+160];
	add.s64 	%rd3433, %rd3431, %rd3432;
	add.s64 	%rd3434, %rd3433, %rd3430;
	add.s64 	%rd3435, %rd3434, %rd3427;
	add.s64 	%rd3436, %rd3435, %rd3347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd3422;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 28;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 28;
	mov.b64 	%rd3437, {%r2594, %r2593};
	shf.l.wrap.b32 	%r2595, %r2591, %r2592, 30;
	shf.l.wrap.b32 	%r2596, %r2592, %r2591, 30;
	mov.b64 	%rd3438, {%r2596, %r2595};
	xor.b64  	%rd3439, %rd3438, %rd3437;
	shf.l.wrap.b32 	%r2597, %r2591, %r2592, 25;
	shf.l.wrap.b32 	%r2598, %r2592, %r2591, 25;
	mov.b64 	%rd3440, {%r2598, %r2597};
	xor.b64  	%rd3441, %rd3439, %rd3440;
	and.b64  	%rd3442, %rd3422, %rd3397;
	xor.b64  	%rd3443, %rd3422, %rd3397;
	and.b64  	%rd3444, %rd3443, %rd3372;
	or.b64  	%rd3445, %rd3444, %rd3442;
	add.s64 	%rd3446, %rd3435, %rd3445;
	add.s64 	%rd3447, %rd3446, %rd3441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2599,%dummy}, %rd3436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd3436;
	}
	shf.r.wrap.b32 	%r2601, %r2600, %r2599, 14;
	shf.r.wrap.b32 	%r2602, %r2599, %r2600, 14;
	mov.b64 	%rd3448, {%r2602, %r2601};
	shf.r.wrap.b32 	%r2603, %r2600, %r2599, 18;
	shf.r.wrap.b32 	%r2604, %r2599, %r2600, 18;
	mov.b64 	%rd3449, {%r2604, %r2603};
	xor.b64  	%rd3450, %rd3449, %rd3448;
	shf.l.wrap.b32 	%r2605, %r2599, %r2600, 23;
	shf.l.wrap.b32 	%r2606, %r2600, %r2599, 23;
	mov.b64 	%rd3451, {%r2606, %r2605};
	xor.b64  	%rd3452, %rd3450, %rd3451;
	xor.b64  	%rd3453, %rd3411, %rd3386;
	and.b64  	%rd3454, %rd3436, %rd3453;
	xor.b64  	%rd3455, %rd3454, %rd3386;
	add.s64 	%rd3456, %rd3361, %rd9704;
	ld.const.u64 	%rd3457, [%rd9682+168];
	add.s64 	%rd3458, %rd3456, %rd3457;
	add.s64 	%rd3459, %rd3458, %rd3455;
	add.s64 	%rd3460, %rd3459, %rd3452;
	add.s64 	%rd3461, %rd3460, %rd3372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd3447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd3447;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 28;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 28;
	mov.b64 	%rd3462, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 30;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 30;
	mov.b64 	%rd3463, {%r2612, %r2611};
	xor.b64  	%rd3464, %rd3463, %rd3462;
	shf.l.wrap.b32 	%r2613, %r2607, %r2608, 25;
	shf.l.wrap.b32 	%r2614, %r2608, %r2607, 25;
	mov.b64 	%rd3465, {%r2614, %r2613};
	xor.b64  	%rd3466, %rd3464, %rd3465;
	and.b64  	%rd3467, %rd3447, %rd3422;
	xor.b64  	%rd3468, %rd3447, %rd3422;
	and.b64  	%rd3469, %rd3468, %rd3397;
	or.b64  	%rd3470, %rd3469, %rd3467;
	add.s64 	%rd3471, %rd3460, %rd3470;
	add.s64 	%rd3472, %rd3471, %rd3466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd3461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd3461;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 14;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 14;
	mov.b64 	%rd3473, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2616, %r2615, 18;
	shf.r.wrap.b32 	%r2620, %r2615, %r2616, 18;
	mov.b64 	%rd3474, {%r2620, %r2619};
	xor.b64  	%rd3475, %rd3474, %rd3473;
	shf.l.wrap.b32 	%r2621, %r2615, %r2616, 23;
	shf.l.wrap.b32 	%r2622, %r2616, %r2615, 23;
	mov.b64 	%rd3476, {%r2622, %r2621};
	xor.b64  	%rd3477, %rd3475, %rd3476;
	xor.b64  	%rd3478, %rd3436, %rd3411;
	and.b64  	%rd3479, %rd3461, %rd3478;
	xor.b64  	%rd3480, %rd3479, %rd3411;
	add.s64 	%rd3481, %rd3386, %rd9705;
	ld.const.u64 	%rd3482, [%rd9682+176];
	add.s64 	%rd3483, %rd3481, %rd3482;
	add.s64 	%rd3484, %rd3483, %rd3480;
	add.s64 	%rd3485, %rd3484, %rd3477;
	add.s64 	%rd3486, %rd3485, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd3472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd3472;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 28;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 28;
	mov.b64 	%rd3487, {%r2626, %r2625};
	shf.l.wrap.b32 	%r2627, %r2623, %r2624, 30;
	shf.l.wrap.b32 	%r2628, %r2624, %r2623, 30;
	mov.b64 	%rd3488, {%r2628, %r2627};
	xor.b64  	%rd3489, %rd3488, %rd3487;
	shf.l.wrap.b32 	%r2629, %r2623, %r2624, 25;
	shf.l.wrap.b32 	%r2630, %r2624, %r2623, 25;
	mov.b64 	%rd3490, {%r2630, %r2629};
	xor.b64  	%rd3491, %rd3489, %rd3490;
	and.b64  	%rd3492, %rd3472, %rd3447;
	xor.b64  	%rd3493, %rd3472, %rd3447;
	and.b64  	%rd3494, %rd3493, %rd3422;
	or.b64  	%rd3495, %rd3494, %rd3492;
	add.s64 	%rd3496, %rd3485, %rd3495;
	add.s64 	%rd3497, %rd3496, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd3486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd3486;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 14;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 14;
	mov.b64 	%rd3498, {%r2634, %r2633};
	shf.r.wrap.b32 	%r2635, %r2632, %r2631, 18;
	shf.r.wrap.b32 	%r2636, %r2631, %r2632, 18;
	mov.b64 	%rd3499, {%r2636, %r2635};
	xor.b64  	%rd3500, %rd3499, %rd3498;
	shf.l.wrap.b32 	%r2637, %r2631, %r2632, 23;
	shf.l.wrap.b32 	%r2638, %r2632, %r2631, 23;
	mov.b64 	%rd3501, {%r2638, %r2637};
	xor.b64  	%rd3502, %rd3500, %rd3501;
	xor.b64  	%rd3503, %rd3461, %rd3436;
	and.b64  	%rd3504, %rd3486, %rd3503;
	xor.b64  	%rd3505, %rd3504, %rd3436;
	add.s64 	%rd3506, %rd3411, %rd9706;
	ld.const.u64 	%rd3507, [%rd9682+184];
	add.s64 	%rd3508, %rd3506, %rd3507;
	add.s64 	%rd3509, %rd3508, %rd3505;
	add.s64 	%rd3510, %rd3509, %rd3502;
	add.s64 	%rd3511, %rd3510, %rd3422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd3497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd3497;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 28;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 28;
	mov.b64 	%rd3512, {%r2642, %r2641};
	shf.l.wrap.b32 	%r2643, %r2639, %r2640, 30;
	shf.l.wrap.b32 	%r2644, %r2640, %r2639, 30;
	mov.b64 	%rd3513, {%r2644, %r2643};
	xor.b64  	%rd3514, %rd3513, %rd3512;
	shf.l.wrap.b32 	%r2645, %r2639, %r2640, 25;
	shf.l.wrap.b32 	%r2646, %r2640, %r2639, 25;
	mov.b64 	%rd3515, {%r2646, %r2645};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	and.b64  	%rd3517, %rd3497, %rd3472;
	xor.b64  	%rd3518, %rd3497, %rd3472;
	and.b64  	%rd3519, %rd3518, %rd3447;
	or.b64  	%rd3520, %rd3519, %rd3517;
	add.s64 	%rd3521, %rd3510, %rd3520;
	add.s64 	%rd3522, %rd3521, %rd3516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2647,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd3511;
	}
	shf.r.wrap.b32 	%r2649, %r2648, %r2647, 14;
	shf.r.wrap.b32 	%r2650, %r2647, %r2648, 14;
	mov.b64 	%rd3523, {%r2650, %r2649};
	shf.r.wrap.b32 	%r2651, %r2648, %r2647, 18;
	shf.r.wrap.b32 	%r2652, %r2647, %r2648, 18;
	mov.b64 	%rd3524, {%r2652, %r2651};
	xor.b64  	%rd3525, %rd3524, %rd3523;
	shf.l.wrap.b32 	%r2653, %r2647, %r2648, 23;
	shf.l.wrap.b32 	%r2654, %r2648, %r2647, 23;
	mov.b64 	%rd3526, {%r2654, %r2653};
	xor.b64  	%rd3527, %rd3525, %rd3526;
	xor.b64  	%rd3528, %rd3486, %rd3461;
	and.b64  	%rd3529, %rd3511, %rd3528;
	xor.b64  	%rd3530, %rd3529, %rd3461;
	add.s64 	%rd3531, %rd3436, %rd9690;
	ld.const.u64 	%rd3532, [%rd9682+192];
	add.s64 	%rd3533, %rd3531, %rd3532;
	add.s64 	%rd3534, %rd3533, %rd3530;
	add.s64 	%rd3535, %rd3534, %rd3527;
	add.s64 	%rd3536, %rd3535, %rd3447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd3522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd3522;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 28;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 28;
	mov.b64 	%rd3537, {%r2658, %r2657};
	shf.l.wrap.b32 	%r2659, %r2655, %r2656, 30;
	shf.l.wrap.b32 	%r2660, %r2656, %r2655, 30;
	mov.b64 	%rd3538, {%r2660, %r2659};
	xor.b64  	%rd3539, %rd3538, %rd3537;
	shf.l.wrap.b32 	%r2661, %r2655, %r2656, 25;
	shf.l.wrap.b32 	%r2662, %r2656, %r2655, 25;
	mov.b64 	%rd3540, {%r2662, %r2661};
	xor.b64  	%rd3541, %rd3539, %rd3540;
	and.b64  	%rd3542, %rd3522, %rd3497;
	xor.b64  	%rd3543, %rd3522, %rd3497;
	and.b64  	%rd3544, %rd3543, %rd3472;
	or.b64  	%rd3545, %rd3544, %rd3542;
	add.s64 	%rd3546, %rd3535, %rd3545;
	add.s64 	%rd3547, %rd3546, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd3536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd3536;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 14;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 14;
	mov.b64 	%rd3548, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 18;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 18;
	mov.b64 	%rd3549, {%r2668, %r2667};
	xor.b64  	%rd3550, %rd3549, %rd3548;
	shf.l.wrap.b32 	%r2669, %r2663, %r2664, 23;
	shf.l.wrap.b32 	%r2670, %r2664, %r2663, 23;
	mov.b64 	%rd3551, {%r2670, %r2669};
	xor.b64  	%rd3552, %rd3550, %rd3551;
	xor.b64  	%rd3553, %rd3511, %rd3486;
	and.b64  	%rd3554, %rd3536, %rd3553;
	xor.b64  	%rd3555, %rd3554, %rd3486;
	add.s64 	%rd3556, %rd3461, %rd9689;
	ld.const.u64 	%rd3557, [%rd9682+200];
	add.s64 	%rd3558, %rd3556, %rd3557;
	add.s64 	%rd3559, %rd3558, %rd3555;
	add.s64 	%rd3560, %rd3559, %rd3552;
	add.s64 	%rd3561, %rd3560, %rd3472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd3547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd3547;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 28;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 28;
	mov.b64 	%rd3562, {%r2674, %r2673};
	shf.l.wrap.b32 	%r2675, %r2671, %r2672, 30;
	shf.l.wrap.b32 	%r2676, %r2672, %r2671, 30;
	mov.b64 	%rd3563, {%r2676, %r2675};
	xor.b64  	%rd3564, %rd3563, %rd3562;
	shf.l.wrap.b32 	%r2677, %r2671, %r2672, 25;
	shf.l.wrap.b32 	%r2678, %r2672, %r2671, 25;
	mov.b64 	%rd3565, {%r2678, %r2677};
	xor.b64  	%rd3566, %rd3564, %rd3565;
	and.b64  	%rd3567, %rd3547, %rd3522;
	xor.b64  	%rd3568, %rd3547, %rd3522;
	and.b64  	%rd3569, %rd3568, %rd3497;
	or.b64  	%rd3570, %rd3569, %rd3567;
	add.s64 	%rd3571, %rd3560, %rd3570;
	add.s64 	%rd3572, %rd3571, %rd3566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd3561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd3561;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 14;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 14;
	mov.b64 	%rd3573, {%r2682, %r2681};
	shf.r.wrap.b32 	%r2683, %r2680, %r2679, 18;
	shf.r.wrap.b32 	%r2684, %r2679, %r2680, 18;
	mov.b64 	%rd3574, {%r2684, %r2683};
	xor.b64  	%rd3575, %rd3574, %rd3573;
	shf.l.wrap.b32 	%r2685, %r2679, %r2680, 23;
	shf.l.wrap.b32 	%r2686, %r2680, %r2679, 23;
	mov.b64 	%rd3576, {%r2686, %r2685};
	xor.b64  	%rd3577, %rd3575, %rd3576;
	xor.b64  	%rd3578, %rd3536, %rd3511;
	and.b64  	%rd3579, %rd3561, %rd3578;
	xor.b64  	%rd3580, %rd3579, %rd3511;
	add.s64 	%rd3581, %rd3486, %rd9688;
	ld.const.u64 	%rd3582, [%rd9682+208];
	add.s64 	%rd3583, %rd3581, %rd3582;
	add.s64 	%rd3584, %rd3583, %rd3580;
	add.s64 	%rd3585, %rd3584, %rd3577;
	add.s64 	%rd3586, %rd3585, %rd3497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2687,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd3572;
	}
	shf.r.wrap.b32 	%r2689, %r2688, %r2687, 28;
	shf.r.wrap.b32 	%r2690, %r2687, %r2688, 28;
	mov.b64 	%rd3587, {%r2690, %r2689};
	shf.l.wrap.b32 	%r2691, %r2687, %r2688, 30;
	shf.l.wrap.b32 	%r2692, %r2688, %r2687, 30;
	mov.b64 	%rd3588, {%r2692, %r2691};
	xor.b64  	%rd3589, %rd3588, %rd3587;
	shf.l.wrap.b32 	%r2693, %r2687, %r2688, 25;
	shf.l.wrap.b32 	%r2694, %r2688, %r2687, 25;
	mov.b64 	%rd3590, {%r2694, %r2693};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	and.b64  	%rd3592, %rd3572, %rd3547;
	xor.b64  	%rd3593, %rd3572, %rd3547;
	and.b64  	%rd3594, %rd3593, %rd3522;
	or.b64  	%rd3595, %rd3594, %rd3592;
	add.s64 	%rd3596, %rd3585, %rd3595;
	add.s64 	%rd3597, %rd3596, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2695,%dummy}, %rd3586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2696}, %rd3586;
	}
	shf.r.wrap.b32 	%r2697, %r2696, %r2695, 14;
	shf.r.wrap.b32 	%r2698, %r2695, %r2696, 14;
	mov.b64 	%rd3598, {%r2698, %r2697};
	shf.r.wrap.b32 	%r2699, %r2696, %r2695, 18;
	shf.r.wrap.b32 	%r2700, %r2695, %r2696, 18;
	mov.b64 	%rd3599, {%r2700, %r2699};
	xor.b64  	%rd3600, %rd3599, %rd3598;
	shf.l.wrap.b32 	%r2701, %r2695, %r2696, 23;
	shf.l.wrap.b32 	%r2702, %r2696, %r2695, 23;
	mov.b64 	%rd3601, {%r2702, %r2701};
	xor.b64  	%rd3602, %rd3600, %rd3601;
	xor.b64  	%rd3603, %rd3561, %rd3536;
	and.b64  	%rd3604, %rd3586, %rd3603;
	xor.b64  	%rd3605, %rd3604, %rd3536;
	add.s64 	%rd3606, %rd3511, %rd9687;
	ld.const.u64 	%rd3607, [%rd9682+216];
	add.s64 	%rd3608, %rd3606, %rd3607;
	add.s64 	%rd3609, %rd3608, %rd3605;
	add.s64 	%rd3610, %rd3609, %rd3602;
	add.s64 	%rd3611, %rd3610, %rd3522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2703,%dummy}, %rd3597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2704}, %rd3597;
	}
	shf.r.wrap.b32 	%r2705, %r2704, %r2703, 28;
	shf.r.wrap.b32 	%r2706, %r2703, %r2704, 28;
	mov.b64 	%rd3612, {%r2706, %r2705};
	shf.l.wrap.b32 	%r2707, %r2703, %r2704, 30;
	shf.l.wrap.b32 	%r2708, %r2704, %r2703, 30;
	mov.b64 	%rd3613, {%r2708, %r2707};
	xor.b64  	%rd3614, %rd3613, %rd3612;
	shf.l.wrap.b32 	%r2709, %r2703, %r2704, 25;
	shf.l.wrap.b32 	%r2710, %r2704, %r2703, 25;
	mov.b64 	%rd3615, {%r2710, %r2709};
	xor.b64  	%rd3616, %rd3614, %rd3615;
	and.b64  	%rd3617, %rd3597, %rd3572;
	xor.b64  	%rd3618, %rd3597, %rd3572;
	and.b64  	%rd3619, %rd3618, %rd3547;
	or.b64  	%rd3620, %rd3619, %rd3617;
	add.s64 	%rd3621, %rd3610, %rd3620;
	add.s64 	%rd3622, %rd3621, %rd3616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2711,%dummy}, %rd3611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd3611;
	}
	shf.r.wrap.b32 	%r2713, %r2712, %r2711, 14;
	shf.r.wrap.b32 	%r2714, %r2711, %r2712, 14;
	mov.b64 	%rd3623, {%r2714, %r2713};
	shf.r.wrap.b32 	%r2715, %r2712, %r2711, 18;
	shf.r.wrap.b32 	%r2716, %r2711, %r2712, 18;
	mov.b64 	%rd3624, {%r2716, %r2715};
	xor.b64  	%rd3625, %rd3624, %rd3623;
	shf.l.wrap.b32 	%r2717, %r2711, %r2712, 23;
	shf.l.wrap.b32 	%r2718, %r2712, %r2711, 23;
	mov.b64 	%rd3626, {%r2718, %r2717};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	xor.b64  	%rd3628, %rd3586, %rd3561;
	and.b64  	%rd3629, %rd3611, %rd3628;
	xor.b64  	%rd3630, %rd3629, %rd3561;
	add.s64 	%rd3631, %rd3536, %rd9686;
	ld.const.u64 	%rd3632, [%rd9682+224];
	add.s64 	%rd3633, %rd3631, %rd3632;
	add.s64 	%rd3634, %rd3633, %rd3630;
	add.s64 	%rd3635, %rd3634, %rd3627;
	add.s64 	%rd9698, %rd3635, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd3622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd3622;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 28;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 28;
	mov.b64 	%rd3636, {%r2722, %r2721};
	shf.l.wrap.b32 	%r2723, %r2719, %r2720, 30;
	shf.l.wrap.b32 	%r2724, %r2720, %r2719, 30;
	mov.b64 	%rd3637, {%r2724, %r2723};
	xor.b64  	%rd3638, %rd3637, %rd3636;
	shf.l.wrap.b32 	%r2725, %r2719, %r2720, 25;
	shf.l.wrap.b32 	%r2726, %r2720, %r2719, 25;
	mov.b64 	%rd3639, {%r2726, %r2725};
	xor.b64  	%rd3640, %rd3638, %rd3639;
	and.b64  	%rd3641, %rd3622, %rd3597;
	xor.b64  	%rd3642, %rd3622, %rd3597;
	and.b64  	%rd3643, %rd3642, %rd3572;
	or.b64  	%rd3644, %rd3643, %rd3641;
	add.s64 	%rd3645, %rd3635, %rd3644;
	add.s64 	%rd9694, %rd3645, %rd3640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2727,%dummy}, %rd9698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2728}, %rd9698;
	}
	shf.r.wrap.b32 	%r2729, %r2728, %r2727, 14;
	shf.r.wrap.b32 	%r2730, %r2727, %r2728, 14;
	mov.b64 	%rd3646, {%r2730, %r2729};
	shf.r.wrap.b32 	%r2731, %r2728, %r2727, 18;
	shf.r.wrap.b32 	%r2732, %r2727, %r2728, 18;
	mov.b64 	%rd3647, {%r2732, %r2731};
	xor.b64  	%rd3648, %rd3647, %rd3646;
	shf.l.wrap.b32 	%r2733, %r2727, %r2728, 23;
	shf.l.wrap.b32 	%r2734, %r2728, %r2727, 23;
	mov.b64 	%rd3649, {%r2734, %r2733};
	xor.b64  	%rd3650, %rd3648, %rd3649;
	xor.b64  	%rd3651, %rd3611, %rd3586;
	and.b64  	%rd3652, %rd9698, %rd3651;
	xor.b64  	%rd3653, %rd3652, %rd3586;
	add.s64 	%rd3654, %rd3561, %rd9685;
	ld.const.u64 	%rd3655, [%rd9682+232];
	add.s64 	%rd3656, %rd3654, %rd3655;
	add.s64 	%rd3657, %rd3656, %rd3653;
	add.s64 	%rd3658, %rd3657, %rd3650;
	add.s64 	%rd9697, %rd3658, %rd3572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd9694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd9694;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 28;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 28;
	mov.b64 	%rd3659, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 30;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 30;
	mov.b64 	%rd3660, {%r2740, %r2739};
	xor.b64  	%rd3661, %rd3660, %rd3659;
	shf.l.wrap.b32 	%r2741, %r2735, %r2736, 25;
	shf.l.wrap.b32 	%r2742, %r2736, %r2735, 25;
	mov.b64 	%rd3662, {%r2742, %r2741};
	xor.b64  	%rd3663, %rd3661, %rd3662;
	and.b64  	%rd3664, %rd9694, %rd3622;
	xor.b64  	%rd3665, %rd9694, %rd3622;
	and.b64  	%rd3666, %rd3665, %rd3597;
	or.b64  	%rd3667, %rd3666, %rd3664;
	add.s64 	%rd3668, %rd3658, %rd3667;
	add.s64 	%rd9693, %rd3668, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2743,%dummy}, %rd9697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2744}, %rd9697;
	}
	shf.r.wrap.b32 	%r2745, %r2744, %r2743, 14;
	shf.r.wrap.b32 	%r2746, %r2743, %r2744, 14;
	mov.b64 	%rd3669, {%r2746, %r2745};
	shf.r.wrap.b32 	%r2747, %r2744, %r2743, 18;
	shf.r.wrap.b32 	%r2748, %r2743, %r2744, 18;
	mov.b64 	%rd3670, {%r2748, %r2747};
	xor.b64  	%rd3671, %rd3670, %rd3669;
	shf.l.wrap.b32 	%r2749, %r2743, %r2744, 23;
	shf.l.wrap.b32 	%r2750, %r2744, %r2743, 23;
	mov.b64 	%rd3672, {%r2750, %r2749};
	xor.b64  	%rd3673, %rd3671, %rd3672;
	xor.b64  	%rd3674, %rd9698, %rd3611;
	and.b64  	%rd3675, %rd9697, %rd3674;
	xor.b64  	%rd3676, %rd3675, %rd3611;
	add.s64 	%rd3677, %rd3586, %rd9684;
	ld.const.u64 	%rd3678, [%rd9682+240];
	add.s64 	%rd3679, %rd3677, %rd3678;
	add.s64 	%rd3680, %rd3679, %rd3676;
	add.s64 	%rd3681, %rd3680, %rd3673;
	add.s64 	%rd9696, %rd3681, %rd3597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2751,%dummy}, %rd9693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2752}, %rd9693;
	}
	shf.r.wrap.b32 	%r2753, %r2752, %r2751, 28;
	shf.r.wrap.b32 	%r2754, %r2751, %r2752, 28;
	mov.b64 	%rd3682, {%r2754, %r2753};
	shf.l.wrap.b32 	%r2755, %r2751, %r2752, 30;
	shf.l.wrap.b32 	%r2756, %r2752, %r2751, 30;
	mov.b64 	%rd3683, {%r2756, %r2755};
	xor.b64  	%rd3684, %rd3683, %rd3682;
	shf.l.wrap.b32 	%r2757, %r2751, %r2752, 25;
	shf.l.wrap.b32 	%r2758, %r2752, %r2751, 25;
	mov.b64 	%rd3685, {%r2758, %r2757};
	xor.b64  	%rd3686, %rd3684, %rd3685;
	and.b64  	%rd3687, %rd9693, %rd9694;
	xor.b64  	%rd3688, %rd9693, %rd9694;
	and.b64  	%rd3689, %rd3688, %rd3622;
	or.b64  	%rd3690, %rd3689, %rd3687;
	add.s64 	%rd3691, %rd3681, %rd3690;
	add.s64 	%rd9692, %rd3691, %rd3686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2759,%dummy}, %rd9696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2760}, %rd9696;
	}
	shf.r.wrap.b32 	%r2761, %r2760, %r2759, 14;
	shf.r.wrap.b32 	%r2762, %r2759, %r2760, 14;
	mov.b64 	%rd3692, {%r2762, %r2761};
	shf.r.wrap.b32 	%r2763, %r2760, %r2759, 18;
	shf.r.wrap.b32 	%r2764, %r2759, %r2760, 18;
	mov.b64 	%rd3693, {%r2764, %r2763};
	xor.b64  	%rd3694, %rd3693, %rd3692;
	shf.l.wrap.b32 	%r2765, %r2759, %r2760, 23;
	shf.l.wrap.b32 	%r2766, %r2760, %r2759, 23;
	mov.b64 	%rd3695, {%r2766, %r2765};
	xor.b64  	%rd3696, %rd3694, %rd3695;
	xor.b64  	%rd3697, %rd9697, %rd9698;
	and.b64  	%rd3698, %rd9696, %rd3697;
	xor.b64  	%rd3699, %rd3698, %rd9698;
	add.s64 	%rd3700, %rd3611, %rd9683;
	ld.const.u64 	%rd3701, [%rd9682+248];
	add.s64 	%rd3702, %rd3700, %rd3701;
	add.s64 	%rd3703, %rd3702, %rd3699;
	add.s64 	%rd3704, %rd3703, %rd3696;
	add.s64 	%rd9695, %rd3704, %rd3622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2767,%dummy}, %rd9692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2768}, %rd9692;
	}
	shf.r.wrap.b32 	%r2769, %r2768, %r2767, 28;
	shf.r.wrap.b32 	%r2770, %r2767, %r2768, 28;
	mov.b64 	%rd3705, {%r2770, %r2769};
	shf.l.wrap.b32 	%r2771, %r2767, %r2768, 30;
	shf.l.wrap.b32 	%r2772, %r2768, %r2767, 30;
	mov.b64 	%rd3706, {%r2772, %r2771};
	xor.b64  	%rd3707, %rd3706, %rd3705;
	shf.l.wrap.b32 	%r2773, %r2767, %r2768, 25;
	shf.l.wrap.b32 	%r2774, %r2768, %r2767, 25;
	mov.b64 	%rd3708, {%r2774, %r2773};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	and.b64  	%rd3710, %rd9692, %rd9693;
	xor.b64  	%rd3711, %rd9692, %rd9693;
	and.b64  	%rd3712, %rd3711, %rd9694;
	or.b64  	%rd3713, %rd3712, %rd3710;
	add.s64 	%rd3714, %rd3704, %rd3713;
	add.s64 	%rd9691, %rd3714, %rd3709;
	add.s32 	%r7436, %r7436, 16;
	setp.lt.s32	%p21, %r7436, 80;
	mov.u64 	%rd9682, %rd293;
	@%p21 bra 	BB3_18;

	ld.const.u64 	%rd9713, [k_sha512+72];
	ld.const.u64 	%rd9714, [k_sha512+64];
	ld.const.u64 	%rd9715, [k_sha512+56];
	ld.const.u64 	%rd9716, [k_sha512+48];
	ld.const.u64 	%rd9717, [k_sha512+40];
	ld.const.u64 	%rd9718, [k_sha512+32];
	ld.const.u64 	%rd9719, [k_sha512+24];
	ld.const.u64 	%rd9720, [k_sha512+16];
	add.s64 	%rd3715, %rd9691, %rd41;
	mov.b64	{%r7439, %r7440}, %rd3715;
	add.s64 	%rd3716, %rd9692, %rd40;
	mov.b64	{%r7437, %r7438}, %rd3716;
	add.s64 	%rd3717, %rd9693, %rd39;
	mov.b64	{%r7443, %r7444}, %rd3717;
	add.s64 	%rd3718, %rd9694, %rd38;
	mov.b64	{%r7441, %r7442}, %rd3718;
	add.s64 	%rd3719, %rd9695, %rd37;
	mov.b64	{%r7447, %r7448}, %rd3719;
	add.s64 	%rd3720, %rd9696, %rd36;
	mov.b64	{%r7445, %r7446}, %rd3720;
	add.s64 	%rd3721, %rd9697, %rd35;
	mov.b64	{%r7451, %r7452}, %rd3721;
	add.s64 	%rd3722, %rd9698, %rd34;
	mov.b64	{%r7449, %r7450}, %rd3722;
	mov.u32 	%r7454, %r7453;
	mov.u32 	%r7455, %r7453;
	mov.u32 	%r7456, %r7453;
	mov.u32 	%r7457, %r7453;
	mov.u32 	%r7458, %r7453;
	mov.u32 	%r7459, %r7453;
	mov.u32 	%r7460, %r7453;
	mov.u32 	%r7461, %r7453;
	mov.u32 	%r7462, %r7453;
	mov.u32 	%r7463, %r7453;
	mov.u32 	%r7464, %r7453;
	mov.u32 	%r7465, %r7453;
	mov.u32 	%r7466, %r7453;
	mov.u32 	%r7467, %r7453;
	mov.u32 	%r7468, %r7453;

BB3_20:
	xor.b32  	%r2792, %r7437, 909522486;
	xor.b32  	%r2793, %r7438, 909522486;
	xor.b32  	%r2794, %r7439, 909522486;
	xor.b32  	%r2795, %r7440, 909522486;
	add.u64 	%rd3723, %SP, 0;
	add.u64 	%rd3724, %SPL, 0;
	st.local.v4.u32 	[%rd3724], {%r2795, %r2794, %r2793, %r2792};
	xor.b32  	%r2796, %r7441, 909522486;
	xor.b32  	%r2797, %r7442, 909522486;
	xor.b32  	%r2798, %r7443, 909522486;
	xor.b32  	%r2799, %r7444, 909522486;
	add.u64 	%rd3725, %SP, 16;
	add.u64 	%rd3726, %SPL, 16;
	st.local.v4.u32 	[%rd3726], {%r2799, %r2798, %r2797, %r2796};
	xor.b32  	%r2800, %r7445, 909522486;
	xor.b32  	%r2801, %r7446, 909522486;
	xor.b32  	%r2802, %r7447, 909522486;
	xor.b32  	%r2803, %r7448, 909522486;
	add.u64 	%rd3727, %SP, 32;
	add.u64 	%rd3728, %SPL, 32;
	st.local.v4.u32 	[%rd3728], {%r2803, %r2802, %r2801, %r2800};
	xor.b32  	%r2804, %r7449, 909522486;
	xor.b32  	%r2805, %r7450, 909522486;
	xor.b32  	%r2806, %r7451, 909522486;
	xor.b32  	%r2807, %r7452, 909522486;
	add.u64 	%rd3729, %SP, 48;
	add.u64 	%rd3730, %SPL, 48;
	st.local.v4.u32 	[%rd3730], {%r2807, %r2806, %r2805, %r2804};
	xor.b32  	%r2808, %r7453, 909522486;
	xor.b32  	%r2809, %r7454, 909522486;
	xor.b32  	%r2810, %r7455, 909522486;
	xor.b32  	%r2811, %r7456, 909522486;
	add.u64 	%rd3731, %SP, 64;
	add.u64 	%rd3732, %SPL, 64;
	st.local.v4.u32 	[%rd3732], {%r2811, %r2810, %r2809, %r2808};
	xor.b32  	%r2812, %r7457, 909522486;
	xor.b32  	%r2813, %r7458, 909522486;
	xor.b32  	%r2814, %r7459, 909522486;
	xor.b32  	%r2815, %r7460, 909522486;
	add.u64 	%rd3733, %SP, 80;
	add.u64 	%rd3734, %SPL, 80;
	st.local.v4.u32 	[%rd3734], {%r2815, %r2814, %r2813, %r2812};
	xor.b32  	%r2816, %r7461, 909522486;
	xor.b32  	%r2817, %r7462, 909522486;
	xor.b32  	%r2818, %r7463, 909522486;
	xor.b32  	%r2819, %r7464, 909522486;
	add.u64 	%rd3735, %SP, 96;
	add.u64 	%rd3736, %SPL, 96;
	st.local.v4.u32 	[%rd3736], {%r2819, %r2818, %r2817, %r2816};
	xor.b32  	%r2820, %r7465, 909522486;
	xor.b32  	%r2821, %r7466, 909522486;
	xor.b32  	%r2822, %r7467, 909522486;
	xor.b32  	%r2823, %r7468, 909522486;
	add.u64 	%rd3737, %SP, 112;
	add.u64 	%rd3738, %SPL, 112;
	st.local.v4.u32 	[%rd3738], {%r2823, %r2822, %r2821, %r2820};
	add.u64 	%rd3739, %SP, 128;
	add.u64 	%rd9747, %SPL, 128;
	mov.u64 	%rd3740, 7640891576956012808;
	st.local.u64 	[%rd9747], %rd3740;
	mov.u64 	%rd3741, -4942790177534073029;
	st.local.u64 	[%rd9747+8], %rd3741;
	mov.u64 	%rd3742, 4354685564936845355;
	st.local.u64 	[%rd9747+16], %rd3742;
	mov.u64 	%rd3743, -6534734903238641935;
	st.local.u64 	[%rd9747+24], %rd3743;
	mov.u64 	%rd3744, 5840696475078001361;
	st.local.u64 	[%rd9747+32], %rd3744;
	mov.u64 	%rd3745, -7276294671716946913;
	st.local.u64 	[%rd9747+40], %rd3745;
	mov.u64 	%rd3746, 2270897969802886507;
	st.local.u64 	[%rd9747+48], %rd3746;
	mov.u64 	%rd3747, 6620516959819538809;
	st.local.u64 	[%rd9747+56], %rd3747;
	mov.u32 	%r7470, 0;
	st.local.v2.u32 	[%rd9747+64], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+72], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+80], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+88], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+96], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+104], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+112], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+120], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+128], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+136], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+144], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+152], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+160], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+168], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+176], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+184], {%r7470, %r7470};
	st.local.u32 	[%rd9747+192], %r7470;
	mov.u32 	%r2825, 128;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3739;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3723;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd3725;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd3727;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd3729;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd3731;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd3733;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd3735;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd3737;
	.param .b32 param9;
	st.param.b32	[param9+0], %r2825;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 17
	st.local.u64 	[%rd9747+200], %rd3740;
	st.local.u64 	[%rd9747+208], %rd3741;
	st.local.u64 	[%rd9747+216], %rd3742;
	st.local.u64 	[%rd9747+224], %rd3743;
	st.local.u64 	[%rd9747+232], %rd3744;
	st.local.u64 	[%rd9747+240], %rd3745;
	st.local.u64 	[%rd9747+248], %rd3746;
	st.local.u64 	[%rd9747+256], %rd3747;
	st.local.u32 	[%rd9747+392], %r2825;
	xor.b32  	%r2826, %r7439, 1549556828;
	xor.b32  	%r2827, %r7440, 1549556828;
	st.local.v2.u32 	[%rd9747+264], {%r2827, %r2826};
	xor.b32  	%r2828, %r7437, 1549556828;
	xor.b32  	%r2829, %r7438, 1549556828;
	st.local.v2.u32 	[%rd9747+272], {%r2829, %r2828};
	xor.b32  	%r2830, %r7443, 1549556828;
	xor.b32  	%r2831, %r7444, 1549556828;
	st.local.v2.u32 	[%rd9747+280], {%r2831, %r2830};
	xor.b32  	%r2832, %r7441, 1549556828;
	xor.b32  	%r2833, %r7442, 1549556828;
	st.local.v2.u32 	[%rd9747+288], {%r2833, %r2832};
	xor.b32  	%r2834, %r7447, 1549556828;
	xor.b32  	%r2835, %r7448, 1549556828;
	st.local.v2.u32 	[%rd9747+296], {%r2835, %r2834};
	xor.b32  	%r2836, %r7445, 1549556828;
	xor.b32  	%r2837, %r7446, 1549556828;
	st.local.v2.u32 	[%rd9747+304], {%r2837, %r2836};
	xor.b32  	%r2838, %r7451, 1549556828;
	xor.b32  	%r2839, %r7452, 1549556828;
	st.local.v2.u32 	[%rd9747+312], {%r2839, %r2838};
	xor.b32  	%r2840, %r7449, 1549556828;
	xor.b32  	%r2841, %r7450, 1549556828;
	st.local.v2.u32 	[%rd9747+320], {%r2841, %r2840};
	xor.b32  	%r2842, %r7455, 1549556828;
	xor.b32  	%r2843, %r7456, 1549556828;
	st.local.v2.u32 	[%rd9747+328], {%r2843, %r2842};
	xor.b32  	%r2844, %r7453, 1549556828;
	xor.b32  	%r2845, %r7454, 1549556828;
	st.local.v2.u32 	[%rd9747+336], {%r2845, %r2844};
	xor.b32  	%r2846, %r7459, 1549556828;
	xor.b32  	%r2847, %r7460, 1549556828;
	st.local.v2.u32 	[%rd9747+344], {%r2847, %r2846};
	xor.b32  	%r2848, %r7457, 1549556828;
	xor.b32  	%r2849, %r7458, 1549556828;
	st.local.v2.u32 	[%rd9747+352], {%r2849, %r2848};
	xor.b32  	%r2850, %r7463, 1549556828;
	xor.b32  	%r2851, %r7464, 1549556828;
	st.local.v2.u32 	[%rd9747+360], {%r2851, %r2850};
	xor.b32  	%r2852, %r7461, 1549556828;
	xor.b32  	%r2853, %r7462, 1549556828;
	st.local.v2.u32 	[%rd9747+368], {%r2853, %r2852};
	xor.b32  	%r2854, %r7467, 1549556828;
	xor.b32  	%r2855, %r7468, 1549556828;
	st.local.v2.u32 	[%rd9747+376], {%r2855, %r2854};
	xor.b32  	%r2856, %r7465, 1549556828;
	xor.b32  	%r2857, %r7466, 1549556828;
	st.local.v2.u32 	[%rd9747+384], {%r2857, %r2856};
	mov.b64	%rd9739, {%r2826, %r2827};
	mov.b64	%rd9740, {%r2828, %r2829};
	mov.b64	%rd9741, {%r2830, %r2831};
	mov.b64	%rd9742, {%r2832, %r2833};
	mov.b64	%rd9743, {%r2834, %r2835};
	mov.b64	%rd9744, {%r2836, %r2837};
	mov.b64	%rd9745, {%r2838, %r2839};
	mov.b64	%rd9746, {%r2840, %r2841};
	mov.b64	%rd9730, {%r2842, %r2843};
	mov.b64	%rd9729, {%r2844, %r2845};
	mov.b64	%rd9728, {%r2846, %r2847};
	mov.b64	%rd9727, {%r2848, %r2849};
	mov.b64	%rd9726, {%r2850, %r2851};
	mov.b64	%rd9725, {%r2852, %r2853};
	mov.b64	%rd9724, {%r2854, %r2855};
	mov.b64	%rd9723, {%r2856, %r2857};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd3744;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 18;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 18;
	mov.b64 	%rd3748, {%r2861, %r2860};
	shf.r.wrap.b32 	%r2862, %r2859, %r2858, 14;
	shf.r.wrap.b32 	%r2863, %r2858, %r2859, 14;
	mov.b64 	%rd3749, {%r2863, %r2862};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 23;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 23;
	mov.b64 	%rd3751, {%r2865, %r2864};
	xor.b64  	%rd3752, %rd3750, %rd3751;
	add.s64 	%rd3753, %rd9739, %rd9722;
	add.s64 	%rd3754, %rd3753, %rd3752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2866}, %rd3740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2867,%dummy}, %rd3740;
	}
	shf.l.wrap.b32 	%r2868, %r2867, %r2866, 30;
	shf.l.wrap.b32 	%r2869, %r2866, %r2867, 30;
	mov.b64 	%rd3755, {%r2869, %r2868};
	shf.r.wrap.b32 	%r2870, %r2866, %r2867, 28;
	shf.r.wrap.b32 	%r2871, %r2867, %r2866, 28;
	mov.b64 	%rd3756, {%r2871, %r2870};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	shf.l.wrap.b32 	%r2872, %r2867, %r2866, 25;
	shf.l.wrap.b32 	%r2873, %r2866, %r2867, 25;
	mov.b64 	%rd3758, {%r2873, %r2872};
	xor.b64  	%rd3759, %rd3757, %rd3758;
	add.s64 	%rd3760, %rd3754, %rd3759;
	add.s64 	%rd3761, %rd3754, 2357225248857953701;
	add.s64 	%rd3762, %rd3760, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd3761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd3761;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 14;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 14;
	mov.b64 	%rd3763, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2875, %r2874, 18;
	shf.r.wrap.b32 	%r2879, %r2874, %r2875, 18;
	mov.b64 	%rd3764, {%r2879, %r2878};
	xor.b64  	%rd3765, %rd3764, %rd3763;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 23;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 23;
	mov.b64 	%rd3766, {%r2881, %r2880};
	xor.b64  	%rd3767, %rd3765, %rd3766;
	and.b64  	%rd3768, %rd3761, -3887949035690463538;
	xor.b64  	%rd3769, %rd3768, -7276294671716946913;
	add.s64 	%rd3770, %rd9740, %rd9721;
	add.s64 	%rd3771, %rd3770, %rd3769;
	add.s64 	%rd3772, %rd3771, %rd3767;
	and.b64  	%rd3773, %rd3762, 7640891576956012808;
	and.b64  	%rd3774, %rd3762, -4942790177534073029;
	xor.b64  	%rd3775, %rd3774, 3026882967131160840;
	or.b64  	%rd3776, %rd3775, %rd3773;
	add.s64 	%rd3777, %rd3772, %rd3776;
	add.s64 	%rd3778, %rd3772, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd3762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd3762;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 28;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 28;
	mov.b64 	%rd3779, {%r2885, %r2884};
	shf.l.wrap.b32 	%r2886, %r2882, %r2883, 30;
	shf.l.wrap.b32 	%r2887, %r2883, %r2882, 30;
	mov.b64 	%rd3780, {%r2887, %r2886};
	xor.b64  	%rd3781, %rd3780, %rd3779;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 25;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 25;
	mov.b64 	%rd3782, {%r2889, %r2888};
	xor.b64  	%rd3783, %rd3781, %rd3782;
	add.s64 	%rd3784, %rd3777, %rd3783;
	add.s64 	%rd3785, %rd3784, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd3778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd3778;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 14;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 14;
	mov.b64 	%rd3786, {%r2893, %r2892};
	shf.r.wrap.b32 	%r2894, %r2891, %r2890, 18;
	shf.r.wrap.b32 	%r2895, %r2890, %r2891, 18;
	mov.b64 	%rd3787, {%r2895, %r2894};
	xor.b64  	%rd3788, %rd3787, %rd3786;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 23;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 23;
	mov.b64 	%rd3789, {%r2897, %r2896};
	xor.b64  	%rd3790, %rd3788, %rd3789;
	xor.b64  	%rd3791, %rd3761, 5840696475078001361;
	and.b64  	%rd3792, %rd3778, %rd3791;
	xor.b64  	%rd3793, %rd3792, 5840696475078001361;
	add.s64 	%rd3794, %rd9741, %rd9720;
	add.s64 	%rd3795, %rd3794, %rd3793;
	add.s64 	%rd3796, %rd3795, %rd3790;
	and.b64  	%rd3797, %rd3785, %rd3762;
	xor.b64  	%rd3798, %rd3785, %rd3762;
	and.b64  	%rd3799, %rd3798, 7640891576956012808;
	or.b64  	%rd3800, %rd3799, %rd3797;
	add.s64 	%rd3801, %rd3796, %rd3800;
	add.s64 	%rd3802, %rd3796, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd3785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd3785;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 28;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 28;
	mov.b64 	%rd3803, {%r2901, %r2900};
	shf.l.wrap.b32 	%r2902, %r2898, %r2899, 30;
	shf.l.wrap.b32 	%r2903, %r2899, %r2898, 30;
	mov.b64 	%rd3804, {%r2903, %r2902};
	xor.b64  	%rd3805, %rd3804, %rd3803;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 25;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 25;
	mov.b64 	%rd3806, {%r2905, %r2904};
	xor.b64  	%rd3807, %rd3805, %rd3806;
	add.s64 	%rd3808, %rd3801, %rd3807;
	add.s64 	%rd3809, %rd3808, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd3802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd3802;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 14;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 14;
	mov.b64 	%rd3810, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2907, %r2906, 18;
	shf.r.wrap.b32 	%r2911, %r2906, %r2907, 18;
	mov.b64 	%rd3811, {%r2911, %r2910};
	xor.b64  	%rd3812, %rd3811, %rd3810;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 23;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 23;
	mov.b64 	%rd3813, {%r2913, %r2912};
	xor.b64  	%rd3814, %rd3812, %rd3813;
	xor.b64  	%rd3815, %rd3778, %rd3761;
	and.b64  	%rd3816, %rd3802, %rd3815;
	xor.b64  	%rd3817, %rd3816, %rd3761;
	add.s64 	%rd3818, %rd9742, %rd9719;
	add.s64 	%rd3819, %rd3818, %rd3817;
	add.s64 	%rd3820, %rd3819, %rd3814;
	and.b64  	%rd3821, %rd3809, %rd3785;
	xor.b64  	%rd3822, %rd3809, %rd3785;
	and.b64  	%rd3823, %rd3822, %rd3762;
	or.b64  	%rd3824, %rd3823, %rd3821;
	add.s64 	%rd3825, %rd3820, %rd3824;
	add.s64 	%rd3826, %rd3820, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd3809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd3809;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 28;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 28;
	mov.b64 	%rd3827, {%r2917, %r2916};
	shf.l.wrap.b32 	%r2918, %r2914, %r2915, 30;
	shf.l.wrap.b32 	%r2919, %r2915, %r2914, 30;
	mov.b64 	%rd3828, {%r2919, %r2918};
	xor.b64  	%rd3829, %rd3828, %rd3827;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 25;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 25;
	mov.b64 	%rd3830, {%r2921, %r2920};
	xor.b64  	%rd3831, %rd3829, %rd3830;
	add.s64 	%rd3832, %rd3825, %rd3831;
	add.s64 	%rd3833, %rd3832, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd3826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd3826;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 14;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 14;
	mov.b64 	%rd3834, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2923, %r2922, 18;
	shf.r.wrap.b32 	%r2927, %r2922, %r2923, 18;
	mov.b64 	%rd3835, {%r2927, %r2926};
	xor.b64  	%rd3836, %rd3835, %rd3834;
	shf.l.wrap.b32 	%r2928, %r2922, %r2923, 23;
	shf.l.wrap.b32 	%r2929, %r2923, %r2922, 23;
	mov.b64 	%rd3837, {%r2929, %r2928};
	xor.b64  	%rd3838, %rd3836, %rd3837;
	xor.b64  	%rd3839, %rd3802, %rd3778;
	and.b64  	%rd3840, %rd3826, %rd3839;
	xor.b64  	%rd3841, %rd3840, %rd3778;
	add.s64 	%rd3842, %rd3761, %rd9743;
	add.s64 	%rd3843, %rd3842, %rd9718;
	add.s64 	%rd3844, %rd3843, %rd3841;
	add.s64 	%rd3845, %rd3844, %rd3838;
	add.s64 	%rd3846, %rd3845, %rd3762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd3833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd3833;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 28;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 28;
	mov.b64 	%rd3847, {%r2933, %r2932};
	shf.l.wrap.b32 	%r2934, %r2930, %r2931, 30;
	shf.l.wrap.b32 	%r2935, %r2931, %r2930, 30;
	mov.b64 	%rd3848, {%r2935, %r2934};
	xor.b64  	%rd3849, %rd3848, %rd3847;
	shf.l.wrap.b32 	%r2936, %r2930, %r2931, 25;
	shf.l.wrap.b32 	%r2937, %r2931, %r2930, 25;
	mov.b64 	%rd3850, {%r2937, %r2936};
	xor.b64  	%rd3851, %rd3849, %rd3850;
	and.b64  	%rd3852, %rd3833, %rd3809;
	xor.b64  	%rd3853, %rd3833, %rd3809;
	and.b64  	%rd3854, %rd3853, %rd3785;
	or.b64  	%rd3855, %rd3854, %rd3852;
	add.s64 	%rd3856, %rd3845, %rd3855;
	add.s64 	%rd3857, %rd3856, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd3846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd3846;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 14;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 14;
	mov.b64 	%rd3858, {%r2941, %r2940};
	shf.r.wrap.b32 	%r2942, %r2939, %r2938, 18;
	shf.r.wrap.b32 	%r2943, %r2938, %r2939, 18;
	mov.b64 	%rd3859, {%r2943, %r2942};
	xor.b64  	%rd3860, %rd3859, %rd3858;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 23;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 23;
	mov.b64 	%rd3861, {%r2945, %r2944};
	xor.b64  	%rd3862, %rd3860, %rd3861;
	xor.b64  	%rd3863, %rd3826, %rd3802;
	and.b64  	%rd3864, %rd3846, %rd3863;
	xor.b64  	%rd3865, %rd3864, %rd3802;
	add.s64 	%rd3866, %rd3778, %rd9744;
	add.s64 	%rd3867, %rd3866, %rd9717;
	add.s64 	%rd3868, %rd3867, %rd3865;
	add.s64 	%rd3869, %rd3868, %rd3862;
	add.s64 	%rd3870, %rd3869, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd3857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd3857;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 28;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 28;
	mov.b64 	%rd3871, {%r2949, %r2948};
	shf.l.wrap.b32 	%r2950, %r2946, %r2947, 30;
	shf.l.wrap.b32 	%r2951, %r2947, %r2946, 30;
	mov.b64 	%rd3872, {%r2951, %r2950};
	xor.b64  	%rd3873, %rd3872, %rd3871;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 25;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 25;
	mov.b64 	%rd3874, {%r2953, %r2952};
	xor.b64  	%rd3875, %rd3873, %rd3874;
	and.b64  	%rd3876, %rd3857, %rd3833;
	xor.b64  	%rd3877, %rd3857, %rd3833;
	and.b64  	%rd3878, %rd3877, %rd3809;
	or.b64  	%rd3879, %rd3878, %rd3876;
	add.s64 	%rd3880, %rd3869, %rd3879;
	add.s64 	%rd3881, %rd3880, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd3870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd3870;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 14;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 14;
	mov.b64 	%rd3882, {%r2957, %r2956};
	shf.r.wrap.b32 	%r2958, %r2955, %r2954, 18;
	shf.r.wrap.b32 	%r2959, %r2954, %r2955, 18;
	mov.b64 	%rd3883, {%r2959, %r2958};
	xor.b64  	%rd3884, %rd3883, %rd3882;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 23;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 23;
	mov.b64 	%rd3885, {%r2961, %r2960};
	xor.b64  	%rd3886, %rd3884, %rd3885;
	xor.b64  	%rd3887, %rd3846, %rd3826;
	and.b64  	%rd3888, %rd3870, %rd3887;
	xor.b64  	%rd3889, %rd3888, %rd3826;
	add.s64 	%rd3890, %rd3802, %rd9745;
	add.s64 	%rd3891, %rd3890, %rd9716;
	add.s64 	%rd3892, %rd3891, %rd3889;
	add.s64 	%rd3893, %rd3892, %rd3886;
	add.s64 	%rd3894, %rd3893, %rd3809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd3881;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 28;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 28;
	mov.b64 	%rd3895, {%r2965, %r2964};
	shf.l.wrap.b32 	%r2966, %r2962, %r2963, 30;
	shf.l.wrap.b32 	%r2967, %r2963, %r2962, 30;
	mov.b64 	%rd3896, {%r2967, %r2966};
	xor.b64  	%rd3897, %rd3896, %rd3895;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 25;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 25;
	mov.b64 	%rd3898, {%r2969, %r2968};
	xor.b64  	%rd3899, %rd3897, %rd3898;
	and.b64  	%rd3900, %rd3881, %rd3857;
	xor.b64  	%rd3901, %rd3881, %rd3857;
	and.b64  	%rd3902, %rd3901, %rd3833;
	or.b64  	%rd3903, %rd3902, %rd3900;
	add.s64 	%rd3904, %rd3893, %rd3903;
	add.s64 	%rd3905, %rd3904, %rd3899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd3894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd3894;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 14;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 14;
	mov.b64 	%rd3906, {%r2973, %r2972};
	shf.r.wrap.b32 	%r2974, %r2971, %r2970, 18;
	shf.r.wrap.b32 	%r2975, %r2970, %r2971, 18;
	mov.b64 	%rd3907, {%r2975, %r2974};
	xor.b64  	%rd3908, %rd3907, %rd3906;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 23;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 23;
	mov.b64 	%rd3909, {%r2977, %r2976};
	xor.b64  	%rd3910, %rd3908, %rd3909;
	xor.b64  	%rd3911, %rd3870, %rd3846;
	and.b64  	%rd3912, %rd3894, %rd3911;
	xor.b64  	%rd3913, %rd3912, %rd3846;
	add.s64 	%rd3914, %rd3826, %rd9746;
	add.s64 	%rd3915, %rd3914, %rd9715;
	add.s64 	%rd3916, %rd3915, %rd3913;
	add.s64 	%rd3917, %rd3916, %rd3910;
	add.s64 	%rd3918, %rd3917, %rd3833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd3905;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 28;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 28;
	mov.b64 	%rd3919, {%r2981, %r2980};
	shf.l.wrap.b32 	%r2982, %r2978, %r2979, 30;
	shf.l.wrap.b32 	%r2983, %r2979, %r2978, 30;
	mov.b64 	%rd3920, {%r2983, %r2982};
	xor.b64  	%rd3921, %rd3920, %rd3919;
	shf.l.wrap.b32 	%r2984, %r2978, %r2979, 25;
	shf.l.wrap.b32 	%r2985, %r2979, %r2978, 25;
	mov.b64 	%rd3922, {%r2985, %r2984};
	xor.b64  	%rd3923, %rd3921, %rd3922;
	and.b64  	%rd3924, %rd3905, %rd3881;
	xor.b64  	%rd3925, %rd3905, %rd3881;
	and.b64  	%rd3926, %rd3925, %rd3857;
	or.b64  	%rd3927, %rd3926, %rd3924;
	add.s64 	%rd3928, %rd3917, %rd3927;
	add.s64 	%rd3929, %rd3928, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd3918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd3918;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 14;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 14;
	mov.b64 	%rd3930, {%r2989, %r2988};
	shf.r.wrap.b32 	%r2990, %r2987, %r2986, 18;
	shf.r.wrap.b32 	%r2991, %r2986, %r2987, 18;
	mov.b64 	%rd3931, {%r2991, %r2990};
	xor.b64  	%rd3932, %rd3931, %rd3930;
	shf.l.wrap.b32 	%r2992, %r2986, %r2987, 23;
	shf.l.wrap.b32 	%r2993, %r2987, %r2986, 23;
	mov.b64 	%rd3933, {%r2993, %r2992};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	xor.b64  	%rd3935, %rd3894, %rd3870;
	and.b64  	%rd3936, %rd3918, %rd3935;
	xor.b64  	%rd3937, %rd3936, %rd3870;
	add.s64 	%rd3938, %rd3846, %rd9730;
	add.s64 	%rd3939, %rd3938, %rd9714;
	add.s64 	%rd3940, %rd3939, %rd3937;
	add.s64 	%rd3941, %rd3940, %rd3934;
	add.s64 	%rd3942, %rd3941, %rd3857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2995}, %rd3929;
	}
	shf.r.wrap.b32 	%r2996, %r2995, %r2994, 28;
	shf.r.wrap.b32 	%r2997, %r2994, %r2995, 28;
	mov.b64 	%rd3943, {%r2997, %r2996};
	shf.l.wrap.b32 	%r2998, %r2994, %r2995, 30;
	shf.l.wrap.b32 	%r2999, %r2995, %r2994, 30;
	mov.b64 	%rd3944, {%r2999, %r2998};
	xor.b64  	%rd3945, %rd3944, %rd3943;
	shf.l.wrap.b32 	%r3000, %r2994, %r2995, 25;
	shf.l.wrap.b32 	%r3001, %r2995, %r2994, 25;
	mov.b64 	%rd3946, {%r3001, %r3000};
	xor.b64  	%rd3947, %rd3945, %rd3946;
	and.b64  	%rd3948, %rd3929, %rd3905;
	xor.b64  	%rd3949, %rd3929, %rd3905;
	and.b64  	%rd3950, %rd3949, %rd3881;
	or.b64  	%rd3951, %rd3950, %rd3948;
	add.s64 	%rd3952, %rd3941, %rd3951;
	add.s64 	%rd3953, %rd3952, %rd3947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3002,%dummy}, %rd3942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd3942;
	}
	shf.r.wrap.b32 	%r3004, %r3003, %r3002, 14;
	shf.r.wrap.b32 	%r3005, %r3002, %r3003, 14;
	mov.b64 	%rd3954, {%r3005, %r3004};
	shf.r.wrap.b32 	%r3006, %r3003, %r3002, 18;
	shf.r.wrap.b32 	%r3007, %r3002, %r3003, 18;
	mov.b64 	%rd3955, {%r3007, %r3006};
	xor.b64  	%rd3956, %rd3955, %rd3954;
	shf.l.wrap.b32 	%r3008, %r3002, %r3003, 23;
	shf.l.wrap.b32 	%r3009, %r3003, %r3002, 23;
	mov.b64 	%rd3957, {%r3009, %r3008};
	xor.b64  	%rd3958, %rd3956, %rd3957;
	xor.b64  	%rd3959, %rd3918, %rd3894;
	and.b64  	%rd3960, %rd3942, %rd3959;
	xor.b64  	%rd3961, %rd3960, %rd3894;
	add.s64 	%rd3962, %rd3870, %rd9729;
	add.s64 	%rd3963, %rd3962, %rd9713;
	add.s64 	%rd3964, %rd3963, %rd3961;
	add.s64 	%rd3965, %rd3964, %rd3958;
	add.s64 	%rd3966, %rd3965, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd3953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd3953;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 28;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 28;
	mov.b64 	%rd3967, {%r3013, %r3012};
	shf.l.wrap.b32 	%r3014, %r3010, %r3011, 30;
	shf.l.wrap.b32 	%r3015, %r3011, %r3010, 30;
	mov.b64 	%rd3968, {%r3015, %r3014};
	xor.b64  	%rd3969, %rd3968, %rd3967;
	shf.l.wrap.b32 	%r3016, %r3010, %r3011, 25;
	shf.l.wrap.b32 	%r3017, %r3011, %r3010, 25;
	mov.b64 	%rd3970, {%r3017, %r3016};
	xor.b64  	%rd3971, %rd3969, %rd3970;
	and.b64  	%rd3972, %rd3953, %rd3929;
	xor.b64  	%rd3973, %rd3953, %rd3929;
	and.b64  	%rd3974, %rd3973, %rd3905;
	or.b64  	%rd3975, %rd3974, %rd3972;
	add.s64 	%rd3976, %rd3965, %rd3975;
	add.s64 	%rd3977, %rd3976, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd3966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd3966;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 14;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 14;
	mov.b64 	%rd3978, {%r3021, %r3020};
	shf.r.wrap.b32 	%r3022, %r3019, %r3018, 18;
	shf.r.wrap.b32 	%r3023, %r3018, %r3019, 18;
	mov.b64 	%rd3979, {%r3023, %r3022};
	xor.b64  	%rd3980, %rd3979, %rd3978;
	shf.l.wrap.b32 	%r3024, %r3018, %r3019, 23;
	shf.l.wrap.b32 	%r3025, %r3019, %r3018, 23;
	mov.b64 	%rd3981, {%r3025, %r3024};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	xor.b64  	%rd3983, %rd3942, %rd3918;
	and.b64  	%rd3984, %rd3966, %rd3983;
	xor.b64  	%rd3985, %rd3984, %rd3918;
	add.s64 	%rd3986, %rd3894, %rd9728;
	add.s64 	%rd3987, %rd3986, %rd9712;
	add.s64 	%rd3988, %rd3987, %rd3985;
	add.s64 	%rd3989, %rd3988, %rd3982;
	add.s64 	%rd3990, %rd3989, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd3977;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 28;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 28;
	mov.b64 	%rd3991, {%r3029, %r3028};
	shf.l.wrap.b32 	%r3030, %r3026, %r3027, 30;
	shf.l.wrap.b32 	%r3031, %r3027, %r3026, 30;
	mov.b64 	%rd3992, {%r3031, %r3030};
	xor.b64  	%rd3993, %rd3992, %rd3991;
	shf.l.wrap.b32 	%r3032, %r3026, %r3027, 25;
	shf.l.wrap.b32 	%r3033, %r3027, %r3026, 25;
	mov.b64 	%rd3994, {%r3033, %r3032};
	xor.b64  	%rd3995, %rd3993, %rd3994;
	and.b64  	%rd3996, %rd3977, %rd3953;
	xor.b64  	%rd3997, %rd3977, %rd3953;
	and.b64  	%rd3998, %rd3997, %rd3929;
	or.b64  	%rd3999, %rd3998, %rd3996;
	add.s64 	%rd4000, %rd3989, %rd3999;
	add.s64 	%rd4001, %rd4000, %rd3995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd3990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3035}, %rd3990;
	}
	shf.r.wrap.b32 	%r3036, %r3035, %r3034, 14;
	shf.r.wrap.b32 	%r3037, %r3034, %r3035, 14;
	mov.b64 	%rd4002, {%r3037, %r3036};
	shf.r.wrap.b32 	%r3038, %r3035, %r3034, 18;
	shf.r.wrap.b32 	%r3039, %r3034, %r3035, 18;
	mov.b64 	%rd4003, {%r3039, %r3038};
	xor.b64  	%rd4004, %rd4003, %rd4002;
	shf.l.wrap.b32 	%r3040, %r3034, %r3035, 23;
	shf.l.wrap.b32 	%r3041, %r3035, %r3034, 23;
	mov.b64 	%rd4005, {%r3041, %r3040};
	xor.b64  	%rd4006, %rd4004, %rd4005;
	xor.b64  	%rd4007, %rd3966, %rd3942;
	and.b64  	%rd4008, %rd3990, %rd4007;
	xor.b64  	%rd4009, %rd4008, %rd3942;
	add.s64 	%rd4010, %rd3918, %rd9727;
	add.s64 	%rd4011, %rd4010, %rd9711;
	add.s64 	%rd4012, %rd4011, %rd4009;
	add.s64 	%rd4013, %rd4012, %rd4006;
	add.s64 	%rd4014, %rd4013, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd4001;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 28;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 28;
	mov.b64 	%rd4015, {%r3045, %r3044};
	shf.l.wrap.b32 	%r3046, %r3042, %r3043, 30;
	shf.l.wrap.b32 	%r3047, %r3043, %r3042, 30;
	mov.b64 	%rd4016, {%r3047, %r3046};
	xor.b64  	%rd4017, %rd4016, %rd4015;
	shf.l.wrap.b32 	%r3048, %r3042, %r3043, 25;
	shf.l.wrap.b32 	%r3049, %r3043, %r3042, 25;
	mov.b64 	%rd4018, {%r3049, %r3048};
	xor.b64  	%rd4019, %rd4017, %rd4018;
	and.b64  	%rd4020, %rd4001, %rd3977;
	xor.b64  	%rd4021, %rd4001, %rd3977;
	and.b64  	%rd4022, %rd4021, %rd3953;
	or.b64  	%rd4023, %rd4022, %rd4020;
	add.s64 	%rd4024, %rd4013, %rd4023;
	add.s64 	%rd4025, %rd4024, %rd4019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd4014;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 14;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 14;
	mov.b64 	%rd4026, {%r3053, %r3052};
	shf.r.wrap.b32 	%r3054, %r3051, %r3050, 18;
	shf.r.wrap.b32 	%r3055, %r3050, %r3051, 18;
	mov.b64 	%rd4027, {%r3055, %r3054};
	xor.b64  	%rd4028, %rd4027, %rd4026;
	shf.l.wrap.b32 	%r3056, %r3050, %r3051, 23;
	shf.l.wrap.b32 	%r3057, %r3051, %r3050, 23;
	mov.b64 	%rd4029, {%r3057, %r3056};
	xor.b64  	%rd4030, %rd4028, %rd4029;
	xor.b64  	%rd4031, %rd3990, %rd3966;
	and.b64  	%rd4032, %rd4014, %rd4031;
	xor.b64  	%rd4033, %rd4032, %rd3966;
	add.s64 	%rd4034, %rd3942, %rd9726;
	add.s64 	%rd4035, %rd4034, %rd9710;
	add.s64 	%rd4036, %rd4035, %rd4033;
	add.s64 	%rd4037, %rd4036, %rd4030;
	add.s64 	%rd9738, %rd4037, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4025;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 28;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 28;
	mov.b64 	%rd4038, {%r3061, %r3060};
	shf.l.wrap.b32 	%r3062, %r3058, %r3059, 30;
	shf.l.wrap.b32 	%r3063, %r3059, %r3058, 30;
	mov.b64 	%rd4039, {%r3063, %r3062};
	xor.b64  	%rd4040, %rd4039, %rd4038;
	shf.l.wrap.b32 	%r3064, %r3058, %r3059, 25;
	shf.l.wrap.b32 	%r3065, %r3059, %r3058, 25;
	mov.b64 	%rd4041, {%r3065, %r3064};
	xor.b64  	%rd4042, %rd4040, %rd4041;
	and.b64  	%rd4043, %rd4025, %rd4001;
	xor.b64  	%rd4044, %rd4025, %rd4001;
	and.b64  	%rd4045, %rd4044, %rd3977;
	or.b64  	%rd4046, %rd4045, %rd4043;
	add.s64 	%rd4047, %rd4037, %rd4046;
	add.s64 	%rd9734, %rd4047, %rd4042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd9738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd9738;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 14;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 14;
	mov.b64 	%rd4048, {%r3069, %r3068};
	shf.r.wrap.b32 	%r3070, %r3067, %r3066, 18;
	shf.r.wrap.b32 	%r3071, %r3066, %r3067, 18;
	mov.b64 	%rd4049, {%r3071, %r3070};
	xor.b64  	%rd4050, %rd4049, %rd4048;
	shf.l.wrap.b32 	%r3072, %r3066, %r3067, 23;
	shf.l.wrap.b32 	%r3073, %r3067, %r3066, 23;
	mov.b64 	%rd4051, {%r3073, %r3072};
	xor.b64  	%rd4052, %rd4050, %rd4051;
	xor.b64  	%rd4053, %rd4014, %rd3990;
	and.b64  	%rd4054, %rd9738, %rd4053;
	xor.b64  	%rd4055, %rd4054, %rd3990;
	add.s64 	%rd4056, %rd3966, %rd9725;
	add.s64 	%rd4057, %rd4056, %rd9709;
	add.s64 	%rd4058, %rd4057, %rd4055;
	add.s64 	%rd4059, %rd4058, %rd4052;
	add.s64 	%rd9737, %rd4059, %rd3977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd9734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd9734;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 28;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 28;
	mov.b64 	%rd4060, {%r3077, %r3076};
	shf.l.wrap.b32 	%r3078, %r3074, %r3075, 30;
	shf.l.wrap.b32 	%r3079, %r3075, %r3074, 30;
	mov.b64 	%rd4061, {%r3079, %r3078};
	xor.b64  	%rd4062, %rd4061, %rd4060;
	shf.l.wrap.b32 	%r3080, %r3074, %r3075, 25;
	shf.l.wrap.b32 	%r3081, %r3075, %r3074, 25;
	mov.b64 	%rd4063, {%r3081, %r3080};
	xor.b64  	%rd4064, %rd4062, %rd4063;
	and.b64  	%rd4065, %rd9734, %rd4025;
	xor.b64  	%rd4066, %rd9734, %rd4025;
	and.b64  	%rd4067, %rd4066, %rd4001;
	or.b64  	%rd4068, %rd4067, %rd4065;
	add.s64 	%rd4069, %rd4059, %rd4068;
	add.s64 	%rd9733, %rd4069, %rd4064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3082,%dummy}, %rd9737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd9737;
	}
	shf.r.wrap.b32 	%r3084, %r3083, %r3082, 14;
	shf.r.wrap.b32 	%r3085, %r3082, %r3083, 14;
	mov.b64 	%rd4070, {%r3085, %r3084};
	shf.r.wrap.b32 	%r3086, %r3083, %r3082, 18;
	shf.r.wrap.b32 	%r3087, %r3082, %r3083, 18;
	mov.b64 	%rd4071, {%r3087, %r3086};
	xor.b64  	%rd4072, %rd4071, %rd4070;
	shf.l.wrap.b32 	%r3088, %r3082, %r3083, 23;
	shf.l.wrap.b32 	%r3089, %r3083, %r3082, 23;
	mov.b64 	%rd4073, {%r3089, %r3088};
	xor.b64  	%rd4074, %rd4072, %rd4073;
	xor.b64  	%rd4075, %rd9738, %rd4014;
	and.b64  	%rd4076, %rd9737, %rd4075;
	xor.b64  	%rd4077, %rd4076, %rd4014;
	add.s64 	%rd4078, %rd3990, %rd9724;
	add.s64 	%rd4079, %rd4078, %rd9708;
	add.s64 	%rd4080, %rd4079, %rd4077;
	add.s64 	%rd4081, %rd4080, %rd4074;
	add.s64 	%rd9736, %rd4081, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd9733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd9733;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 28;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 28;
	mov.b64 	%rd4082, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 30;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 30;
	mov.b64 	%rd4083, {%r3095, %r3094};
	xor.b64  	%rd4084, %rd4083, %rd4082;
	shf.l.wrap.b32 	%r3096, %r3090, %r3091, 25;
	shf.l.wrap.b32 	%r3097, %r3091, %r3090, 25;
	mov.b64 	%rd4085, {%r3097, %r3096};
	xor.b64  	%rd4086, %rd4084, %rd4085;
	and.b64  	%rd4087, %rd9733, %rd9734;
	xor.b64  	%rd4088, %rd9733, %rd9734;
	and.b64  	%rd4089, %rd4088, %rd4025;
	or.b64  	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4081, %rd4090;
	add.s64 	%rd9732, %rd4091, %rd4086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd9736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd9736;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 14;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 14;
	mov.b64 	%rd4092, {%r3101, %r3100};
	shf.r.wrap.b32 	%r3102, %r3099, %r3098, 18;
	shf.r.wrap.b32 	%r3103, %r3098, %r3099, 18;
	mov.b64 	%rd4093, {%r3103, %r3102};
	xor.b64  	%rd4094, %rd4093, %rd4092;
	shf.l.wrap.b32 	%r3104, %r3098, %r3099, 23;
	shf.l.wrap.b32 	%r3105, %r3099, %r3098, 23;
	mov.b64 	%rd4095, {%r3105, %r3104};
	xor.b64  	%rd4096, %rd4094, %rd4095;
	xor.b64  	%rd4097, %rd9737, %rd9738;
	and.b64  	%rd4098, %rd9736, %rd4097;
	xor.b64  	%rd4099, %rd4098, %rd9738;
	add.s64 	%rd4100, %rd4014, %rd9723;
	add.s64 	%rd4101, %rd4100, %rd9707;
	add.s64 	%rd4102, %rd4101, %rd4099;
	add.s64 	%rd4103, %rd4102, %rd4096;
	add.s64 	%rd9735, %rd4103, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd9732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd9732;
	}
	shf.r.wrap.b32 	%r3108, %r3107, %r3106, 28;
	shf.r.wrap.b32 	%r3109, %r3106, %r3107, 28;
	mov.b64 	%rd4104, {%r3109, %r3108};
	shf.l.wrap.b32 	%r3110, %r3106, %r3107, 30;
	shf.l.wrap.b32 	%r3111, %r3107, %r3106, 30;
	mov.b64 	%rd4105, {%r3111, %r3110};
	xor.b64  	%rd4106, %rd4105, %rd4104;
	shf.l.wrap.b32 	%r3112, %r3106, %r3107, 25;
	shf.l.wrap.b32 	%r3113, %r3107, %r3106, 25;
	mov.b64 	%rd4107, {%r3113, %r3112};
	xor.b64  	%rd4108, %rd4106, %rd4107;
	and.b64  	%rd4109, %rd9732, %rd9733;
	xor.b64  	%rd4110, %rd9732, %rd9733;
	and.b64  	%rd4111, %rd4110, %rd9734;
	or.b64  	%rd4112, %rd4111, %rd4109;
	add.s64 	%rd4113, %rd4103, %rd4112;
	add.s64 	%rd9731, %rd4113, %rd4108;
	mov.u32 	%r7469, 16;

BB3_21:
	shr.u64 	%rd4114, %rd9724, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3114,%dummy}, %rd9724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3115}, %rd9724;
	}
	shf.r.wrap.b32 	%r3116, %r3115, %r3114, 19;
	shf.r.wrap.b32 	%r3117, %r3114, %r3115, 19;
	mov.b64 	%rd4115, {%r3117, %r3116};
	xor.b64  	%rd4116, %rd4115, %rd4114;
	shf.l.wrap.b32 	%r3118, %r3114, %r3115, 3;
	shf.l.wrap.b32 	%r3119, %r3115, %r3114, 3;
	mov.b64 	%rd4117, {%r3119, %r3118};
	xor.b64  	%rd4118, %rd4116, %rd4117;
	shr.u64 	%rd4119, %rd9740, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd9740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3121}, %rd9740;
	}
	shf.r.wrap.b32 	%r3122, %r3121, %r3120, 1;
	shf.r.wrap.b32 	%r3123, %r3120, %r3121, 1;
	mov.b64 	%rd4120, {%r3123, %r3122};
	xor.b64  	%rd4121, %rd4120, %rd4119;
	shf.r.wrap.b32 	%r3124, %r3121, %r3120, 8;
	shf.r.wrap.b32 	%r3125, %r3120, %r3121, 8;
	mov.b64 	%rd4122, {%r3125, %r3124};
	xor.b64  	%rd4123, %rd4121, %rd4122;
	add.s64 	%rd4124, %rd9729, %rd9739;
	add.s64 	%rd4125, %rd4124, %rd4118;
	add.s64 	%rd9739, %rd4125, %rd4123;
	shr.u64 	%rd4126, %rd9723, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd9723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd9723;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 19;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 19;
	mov.b64 	%rd4127, {%r3129, %r3128};
	xor.b64  	%rd4128, %rd4127, %rd4126;
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 3;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 3;
	mov.b64 	%rd4129, {%r3131, %r3130};
	xor.b64  	%rd4130, %rd4128, %rd4129;
	shr.u64 	%rd4131, %rd9741, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3132,%dummy}, %rd9741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3133}, %rd9741;
	}
	shf.r.wrap.b32 	%r3134, %r3133, %r3132, 1;
	shf.r.wrap.b32 	%r3135, %r3132, %r3133, 1;
	mov.b64 	%rd4132, {%r3135, %r3134};
	xor.b64  	%rd4133, %rd4132, %rd4131;
	shf.r.wrap.b32 	%r3136, %r3133, %r3132, 8;
	shf.r.wrap.b32 	%r3137, %r3132, %r3133, 8;
	mov.b64 	%rd4134, {%r3137, %r3136};
	xor.b64  	%rd4135, %rd4133, %rd4134;
	add.s64 	%rd4136, %rd9728, %rd9740;
	add.s64 	%rd4137, %rd4136, %rd4130;
	add.s64 	%rd9740, %rd4137, %rd4135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd9739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3139}, %rd9739;
	}
	shf.r.wrap.b32 	%r3140, %r3139, %r3138, 19;
	shf.r.wrap.b32 	%r3141, %r3138, %r3139, 19;
	mov.b64 	%rd4138, {%r3141, %r3140};
	shf.l.wrap.b32 	%r3142, %r3138, %r3139, 3;
	shf.l.wrap.b32 	%r3143, %r3139, %r3138, 3;
	mov.b64 	%rd4139, {%r3143, %r3142};
	shr.u64 	%rd4140, %rd9739, 6;
	xor.b64  	%rd4141, %rd4138, %rd4140;
	xor.b64  	%rd4142, %rd4141, %rd4139;
	shr.u64 	%rd4143, %rd9742, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3144,%dummy}, %rd9742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3145}, %rd9742;
	}
	shf.r.wrap.b32 	%r3146, %r3145, %r3144, 1;
	shf.r.wrap.b32 	%r3147, %r3144, %r3145, 1;
	mov.b64 	%rd4144, {%r3147, %r3146};
	xor.b64  	%rd4145, %rd4144, %rd4143;
	shf.r.wrap.b32 	%r3148, %r3145, %r3144, 8;
	shf.r.wrap.b32 	%r3149, %r3144, %r3145, 8;
	mov.b64 	%rd4146, {%r3149, %r3148};
	xor.b64  	%rd4147, %rd4145, %rd4146;
	add.s64 	%rd4148, %rd9727, %rd9741;
	add.s64 	%rd4149, %rd4148, %rd4142;
	add.s64 	%rd9741, %rd4149, %rd4147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3150,%dummy}, %rd9740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3151}, %rd9740;
	}
	shf.r.wrap.b32 	%r3152, %r3151, %r3150, 19;
	shf.r.wrap.b32 	%r3153, %r3150, %r3151, 19;
	mov.b64 	%rd4150, {%r3153, %r3152};
	shf.l.wrap.b32 	%r3154, %r3150, %r3151, 3;
	shf.l.wrap.b32 	%r3155, %r3151, %r3150, 3;
	mov.b64 	%rd4151, {%r3155, %r3154};
	shr.u64 	%rd4152, %rd9740, 6;
	xor.b64  	%rd4153, %rd4150, %rd4152;
	xor.b64  	%rd4154, %rd4153, %rd4151;
	shr.u64 	%rd4155, %rd9743, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3156,%dummy}, %rd9743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3157}, %rd9743;
	}
	shf.r.wrap.b32 	%r3158, %r3157, %r3156, 1;
	shf.r.wrap.b32 	%r3159, %r3156, %r3157, 1;
	mov.b64 	%rd4156, {%r3159, %r3158};
	xor.b64  	%rd4157, %rd4156, %rd4155;
	shf.r.wrap.b32 	%r3160, %r3157, %r3156, 8;
	shf.r.wrap.b32 	%r3161, %r3156, %r3157, 8;
	mov.b64 	%rd4158, {%r3161, %r3160};
	xor.b64  	%rd4159, %rd4157, %rd4158;
	add.s64 	%rd4160, %rd9726, %rd9742;
	add.s64 	%rd4161, %rd4160, %rd4154;
	add.s64 	%rd9742, %rd4161, %rd4159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd9741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd9741;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 19;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 19;
	mov.b64 	%rd4162, {%r3165, %r3164};
	shf.l.wrap.b32 	%r3166, %r3162, %r3163, 3;
	shf.l.wrap.b32 	%r3167, %r3163, %r3162, 3;
	mov.b64 	%rd4163, {%r3167, %r3166};
	shr.u64 	%rd4164, %rd9741, 6;
	xor.b64  	%rd4165, %rd4162, %rd4164;
	xor.b64  	%rd4166, %rd4165, %rd4163;
	shr.u64 	%rd4167, %rd9744, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3168,%dummy}, %rd9744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd9744;
	}
	shf.r.wrap.b32 	%r3170, %r3169, %r3168, 1;
	shf.r.wrap.b32 	%r3171, %r3168, %r3169, 1;
	mov.b64 	%rd4168, {%r3171, %r3170};
	xor.b64  	%rd4169, %rd4168, %rd4167;
	shf.r.wrap.b32 	%r3172, %r3169, %r3168, 8;
	shf.r.wrap.b32 	%r3173, %r3168, %r3169, 8;
	mov.b64 	%rd4170, {%r3173, %r3172};
	xor.b64  	%rd4171, %rd4169, %rd4170;
	add.s64 	%rd4172, %rd9725, %rd9743;
	add.s64 	%rd4173, %rd4172, %rd4166;
	add.s64 	%rd9743, %rd4173, %rd4171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd9742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd9742;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 19;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 19;
	mov.b64 	%rd4174, {%r3177, %r3176};
	shf.l.wrap.b32 	%r3178, %r3174, %r3175, 3;
	shf.l.wrap.b32 	%r3179, %r3175, %r3174, 3;
	mov.b64 	%rd4175, {%r3179, %r3178};
	shr.u64 	%rd4176, %rd9742, 6;
	xor.b64  	%rd4177, %rd4174, %rd4176;
	xor.b64  	%rd4178, %rd4177, %rd4175;
	shr.u64 	%rd4179, %rd9745, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3180,%dummy}, %rd9745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd9745;
	}
	shf.r.wrap.b32 	%r3182, %r3181, %r3180, 1;
	shf.r.wrap.b32 	%r3183, %r3180, %r3181, 1;
	mov.b64 	%rd4180, {%r3183, %r3182};
	xor.b64  	%rd4181, %rd4180, %rd4179;
	shf.r.wrap.b32 	%r3184, %r3181, %r3180, 8;
	shf.r.wrap.b32 	%r3185, %r3180, %r3181, 8;
	mov.b64 	%rd4182, {%r3185, %r3184};
	xor.b64  	%rd4183, %rd4181, %rd4182;
	add.s64 	%rd4184, %rd9724, %rd9744;
	add.s64 	%rd4185, %rd4184, %rd4178;
	add.s64 	%rd9744, %rd4185, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd9743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd9743;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 19;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 19;
	mov.b64 	%rd4186, {%r3189, %r3188};
	shf.l.wrap.b32 	%r3190, %r3186, %r3187, 3;
	shf.l.wrap.b32 	%r3191, %r3187, %r3186, 3;
	mov.b64 	%rd4187, {%r3191, %r3190};
	shr.u64 	%rd4188, %rd9743, 6;
	xor.b64  	%rd4189, %rd4186, %rd4188;
	xor.b64  	%rd4190, %rd4189, %rd4187;
	shr.u64 	%rd4191, %rd9746, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3192,%dummy}, %rd9746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3193}, %rd9746;
	}
	shf.r.wrap.b32 	%r3194, %r3193, %r3192, 1;
	shf.r.wrap.b32 	%r3195, %r3192, %r3193, 1;
	mov.b64 	%rd4192, {%r3195, %r3194};
	xor.b64  	%rd4193, %rd4192, %rd4191;
	shf.r.wrap.b32 	%r3196, %r3193, %r3192, 8;
	shf.r.wrap.b32 	%r3197, %r3192, %r3193, 8;
	mov.b64 	%rd4194, {%r3197, %r3196};
	xor.b64  	%rd4195, %rd4193, %rd4194;
	add.s64 	%rd4196, %rd9723, %rd9745;
	add.s64 	%rd4197, %rd4196, %rd4190;
	add.s64 	%rd9745, %rd4197, %rd4195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3198,%dummy}, %rd9744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd9744;
	}
	shf.r.wrap.b32 	%r3200, %r3199, %r3198, 19;
	shf.r.wrap.b32 	%r3201, %r3198, %r3199, 19;
	mov.b64 	%rd4198, {%r3201, %r3200};
	shf.l.wrap.b32 	%r3202, %r3198, %r3199, 3;
	shf.l.wrap.b32 	%r3203, %r3199, %r3198, 3;
	mov.b64 	%rd4199, {%r3203, %r3202};
	shr.u64 	%rd4200, %rd9744, 6;
	xor.b64  	%rd4201, %rd4198, %rd4200;
	xor.b64  	%rd4202, %rd4201, %rd4199;
	shr.u64 	%rd4203, %rd9730, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd9730;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 1;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 1;
	mov.b64 	%rd4204, {%r3207, %r3206};
	xor.b64  	%rd4205, %rd4204, %rd4203;
	shf.r.wrap.b32 	%r3208, %r3205, %r3204, 8;
	shf.r.wrap.b32 	%r3209, %r3204, %r3205, 8;
	mov.b64 	%rd4206, {%r3209, %r3208};
	xor.b64  	%rd4207, %rd4205, %rd4206;
	add.s64 	%rd4208, %rd9739, %rd9746;
	add.s64 	%rd4209, %rd4208, %rd4202;
	add.s64 	%rd9746, %rd4209, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd9745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd9745;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 19;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 19;
	mov.b64 	%rd4210, {%r3213, %r3212};
	shf.l.wrap.b32 	%r3214, %r3210, %r3211, 3;
	shf.l.wrap.b32 	%r3215, %r3211, %r3210, 3;
	mov.b64 	%rd4211, {%r3215, %r3214};
	shr.u64 	%rd4212, %rd9745, 6;
	xor.b64  	%rd4213, %rd4210, %rd4212;
	xor.b64  	%rd4214, %rd4213, %rd4211;
	shr.u64 	%rd4215, %rd9729, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3216,%dummy}, %rd9729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd9729;
	}
	shf.r.wrap.b32 	%r3218, %r3217, %r3216, 1;
	shf.r.wrap.b32 	%r3219, %r3216, %r3217, 1;
	mov.b64 	%rd4216, {%r3219, %r3218};
	xor.b64  	%rd4217, %rd4216, %rd4215;
	shf.r.wrap.b32 	%r3220, %r3217, %r3216, 8;
	shf.r.wrap.b32 	%r3221, %r3216, %r3217, 8;
	mov.b64 	%rd4218, {%r3221, %r3220};
	xor.b64  	%rd4219, %rd4217, %rd4218;
	add.s64 	%rd4220, %rd9740, %rd9730;
	add.s64 	%rd4221, %rd4220, %rd4214;
	add.s64 	%rd9730, %rd4221, %rd4219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd9746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd9746;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 19;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 19;
	mov.b64 	%rd4222, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 3;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 3;
	mov.b64 	%rd4223, {%r3227, %r3226};
	shr.u64 	%rd4224, %rd9746, 6;
	xor.b64  	%rd4225, %rd4222, %rd4224;
	xor.b64  	%rd4226, %rd4225, %rd4223;
	shr.u64 	%rd4227, %rd9728, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3228,%dummy}, %rd9728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3229}, %rd9728;
	}
	shf.r.wrap.b32 	%r3230, %r3229, %r3228, 1;
	shf.r.wrap.b32 	%r3231, %r3228, %r3229, 1;
	mov.b64 	%rd4228, {%r3231, %r3230};
	xor.b64  	%rd4229, %rd4228, %rd4227;
	shf.r.wrap.b32 	%r3232, %r3229, %r3228, 8;
	shf.r.wrap.b32 	%r3233, %r3228, %r3229, 8;
	mov.b64 	%rd4230, {%r3233, %r3232};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	add.s64 	%rd4232, %rd9741, %rd9729;
	add.s64 	%rd4233, %rd4232, %rd4226;
	add.s64 	%rd9729, %rd4233, %rd4231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3234,%dummy}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd9730;
	}
	shf.r.wrap.b32 	%r3236, %r3235, %r3234, 19;
	shf.r.wrap.b32 	%r3237, %r3234, %r3235, 19;
	mov.b64 	%rd4234, {%r3237, %r3236};
	shf.l.wrap.b32 	%r3238, %r3234, %r3235, 3;
	shf.l.wrap.b32 	%r3239, %r3235, %r3234, 3;
	mov.b64 	%rd4235, {%r3239, %r3238};
	shr.u64 	%rd4236, %rd9730, 6;
	xor.b64  	%rd4237, %rd4234, %rd4236;
	xor.b64  	%rd4238, %rd4237, %rd4235;
	shr.u64 	%rd4239, %rd9727, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3240,%dummy}, %rd9727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd9727;
	}
	shf.r.wrap.b32 	%r3242, %r3241, %r3240, 1;
	shf.r.wrap.b32 	%r3243, %r3240, %r3241, 1;
	mov.b64 	%rd4240, {%r3243, %r3242};
	xor.b64  	%rd4241, %rd4240, %rd4239;
	shf.r.wrap.b32 	%r3244, %r3241, %r3240, 8;
	shf.r.wrap.b32 	%r3245, %r3240, %r3241, 8;
	mov.b64 	%rd4242, {%r3245, %r3244};
	xor.b64  	%rd4243, %rd4241, %rd4242;
	add.s64 	%rd4244, %rd9742, %rd9728;
	add.s64 	%rd4245, %rd4244, %rd4238;
	add.s64 	%rd9728, %rd4245, %rd4243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3246,%dummy}, %rd9729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3247}, %rd9729;
	}
	shf.r.wrap.b32 	%r3248, %r3247, %r3246, 19;
	shf.r.wrap.b32 	%r3249, %r3246, %r3247, 19;
	mov.b64 	%rd4246, {%r3249, %r3248};
	shf.l.wrap.b32 	%r3250, %r3246, %r3247, 3;
	shf.l.wrap.b32 	%r3251, %r3247, %r3246, 3;
	mov.b64 	%rd4247, {%r3251, %r3250};
	shr.u64 	%rd4248, %rd9729, 6;
	xor.b64  	%rd4249, %rd4246, %rd4248;
	xor.b64  	%rd4250, %rd4249, %rd4247;
	shr.u64 	%rd4251, %rd9726, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3252,%dummy}, %rd9726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd9726;
	}
	shf.r.wrap.b32 	%r3254, %r3253, %r3252, 1;
	shf.r.wrap.b32 	%r3255, %r3252, %r3253, 1;
	mov.b64 	%rd4252, {%r3255, %r3254};
	xor.b64  	%rd4253, %rd4252, %rd4251;
	shf.r.wrap.b32 	%r3256, %r3253, %r3252, 8;
	shf.r.wrap.b32 	%r3257, %r3252, %r3253, 8;
	mov.b64 	%rd4254, {%r3257, %r3256};
	xor.b64  	%rd4255, %rd4253, %rd4254;
	add.s64 	%rd4256, %rd9743, %rd9727;
	add.s64 	%rd4257, %rd4256, %rd4250;
	add.s64 	%rd9727, %rd4257, %rd4255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd9728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd9728;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 19;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 19;
	mov.b64 	%rd4258, {%r3261, %r3260};
	shf.l.wrap.b32 	%r3262, %r3258, %r3259, 3;
	shf.l.wrap.b32 	%r3263, %r3259, %r3258, 3;
	mov.b64 	%rd4259, {%r3263, %r3262};
	shr.u64 	%rd4260, %rd9728, 6;
	xor.b64  	%rd4261, %rd4258, %rd4260;
	xor.b64  	%rd4262, %rd4261, %rd4259;
	shr.u64 	%rd4263, %rd9725, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3264,%dummy}, %rd9725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd9725;
	}
	shf.r.wrap.b32 	%r3266, %r3265, %r3264, 1;
	shf.r.wrap.b32 	%r3267, %r3264, %r3265, 1;
	mov.b64 	%rd4264, {%r3267, %r3266};
	xor.b64  	%rd4265, %rd4264, %rd4263;
	shf.r.wrap.b32 	%r3268, %r3265, %r3264, 8;
	shf.r.wrap.b32 	%r3269, %r3264, %r3265, 8;
	mov.b64 	%rd4266, {%r3269, %r3268};
	xor.b64  	%rd4267, %rd4265, %rd4266;
	add.s64 	%rd4268, %rd9744, %rd9726;
	add.s64 	%rd4269, %rd4268, %rd4262;
	add.s64 	%rd9726, %rd4269, %rd4267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd9727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3271}, %rd9727;
	}
	shf.r.wrap.b32 	%r3272, %r3271, %r3270, 19;
	shf.r.wrap.b32 	%r3273, %r3270, %r3271, 19;
	mov.b64 	%rd4270, {%r3273, %r3272};
	shf.l.wrap.b32 	%r3274, %r3270, %r3271, 3;
	shf.l.wrap.b32 	%r3275, %r3271, %r3270, 3;
	mov.b64 	%rd4271, {%r3275, %r3274};
	shr.u64 	%rd4272, %rd9727, 6;
	xor.b64  	%rd4273, %rd4270, %rd4272;
	xor.b64  	%rd4274, %rd4273, %rd4271;
	shr.u64 	%rd4275, %rd9724, 7;
	shf.r.wrap.b32 	%r3276, %r3115, %r3114, 1;
	shf.r.wrap.b32 	%r3277, %r3114, %r3115, 1;
	mov.b64 	%rd4276, {%r3277, %r3276};
	xor.b64  	%rd4277, %rd4276, %rd4275;
	shf.r.wrap.b32 	%r3278, %r3115, %r3114, 8;
	shf.r.wrap.b32 	%r3279, %r3114, %r3115, 8;
	mov.b64 	%rd4278, {%r3279, %r3278};
	xor.b64  	%rd4279, %rd4277, %rd4278;
	add.s64 	%rd4280, %rd9745, %rd9725;
	add.s64 	%rd4281, %rd4280, %rd4274;
	add.s64 	%rd9725, %rd4281, %rd4279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3280,%dummy}, %rd9726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3281}, %rd9726;
	}
	shf.r.wrap.b32 	%r3282, %r3281, %r3280, 19;
	shf.r.wrap.b32 	%r3283, %r3280, %r3281, 19;
	mov.b64 	%rd4282, {%r3283, %r3282};
	shf.l.wrap.b32 	%r3284, %r3280, %r3281, 3;
	shf.l.wrap.b32 	%r3285, %r3281, %r3280, 3;
	mov.b64 	%rd4283, {%r3285, %r3284};
	shr.u64 	%rd4284, %rd9726, 6;
	xor.b64  	%rd4285, %rd4282, %rd4284;
	xor.b64  	%rd4286, %rd4285, %rd4283;
	shr.u64 	%rd4287, %rd9723, 7;
	shf.r.wrap.b32 	%r3286, %r3127, %r3126, 1;
	shf.r.wrap.b32 	%r3287, %r3126, %r3127, 1;
	mov.b64 	%rd4288, {%r3287, %r3286};
	xor.b64  	%rd4289, %rd4288, %rd4287;
	shf.r.wrap.b32 	%r3288, %r3127, %r3126, 8;
	shf.r.wrap.b32 	%r3289, %r3126, %r3127, 8;
	mov.b64 	%rd4290, {%r3289, %r3288};
	xor.b64  	%rd4291, %rd4289, %rd4290;
	add.s64 	%rd4292, %rd9746, %rd9724;
	add.s64 	%rd4293, %rd4292, %rd4286;
	add.s64 	%rd9724, %rd4293, %rd4291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd9725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd9725;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 19;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 19;
	mov.b64 	%rd4294, {%r3293, %r3292};
	shf.l.wrap.b32 	%r3294, %r3290, %r3291, 3;
	shf.l.wrap.b32 	%r3295, %r3291, %r3290, 3;
	mov.b64 	%rd4295, {%r3295, %r3294};
	shr.u64 	%rd4296, %rd9725, 6;
	xor.b64  	%rd4297, %rd4294, %rd4296;
	xor.b64  	%rd4298, %rd4297, %rd4295;
	shf.r.wrap.b32 	%r3296, %r3139, %r3138, 1;
	shf.r.wrap.b32 	%r3297, %r3138, %r3139, 1;
	mov.b64 	%rd4299, {%r3297, %r3296};
	shf.r.wrap.b32 	%r3298, %r3139, %r3138, 8;
	shf.r.wrap.b32 	%r3299, %r3138, %r3139, 8;
	mov.b64 	%rd4300, {%r3299, %r3298};
	shr.u64 	%rd4301, %rd9739, 7;
	xor.b64  	%rd4302, %rd4299, %rd4301;
	xor.b64  	%rd4303, %rd4302, %rd4300;
	add.s64 	%rd4304, %rd9730, %rd9723;
	add.s64 	%rd4305, %rd4304, %rd4298;
	add.s64 	%rd9723, %rd4305, %rd4303;
	mul.wide.s32 	%rd4306, %r7469, 8;
	mov.u64 	%rd4307, k_sha512;
	add.s64 	%rd4308, %rd4307, %rd4306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3300,%dummy}, %rd9735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3301}, %rd9735;
	}
	shf.r.wrap.b32 	%r3302, %r3301, %r3300, 18;
	shf.r.wrap.b32 	%r3303, %r3300, %r3301, 18;
	mov.b64 	%rd4309, {%r3303, %r3302};
	shf.r.wrap.b32 	%r3304, %r3301, %r3300, 14;
	shf.r.wrap.b32 	%r3305, %r3300, %r3301, 14;
	mov.b64 	%rd4310, {%r3305, %r3304};
	xor.b64  	%rd4311, %rd4309, %rd4310;
	shf.l.wrap.b32 	%r3306, %r3300, %r3301, 23;
	shf.l.wrap.b32 	%r3307, %r3301, %r3300, 23;
	mov.b64 	%rd4312, {%r3307, %r3306};
	xor.b64  	%rd4313, %rd4311, %rd4312;
	xor.b64  	%rd4314, %rd9736, %rd9737;
	and.b64  	%rd4315, %rd9735, %rd4314;
	xor.b64  	%rd4316, %rd4315, %rd9737;
	add.s64 	%rd4317, %rd4316, %rd9738;
	add.s64 	%rd4318, %rd4317, %rd9739;
	ld.const.u64 	%rd4319, [%rd4308];
	add.s64 	%rd4320, %rd4318, %rd4319;
	add.s64 	%rd4321, %rd4320, %rd4313;
	add.s64 	%rd4322, %rd4321, %rd9734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3308}, %rd9731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3309,%dummy}, %rd9731;
	}
	shf.l.wrap.b32 	%r3310, %r3309, %r3308, 30;
	shf.l.wrap.b32 	%r3311, %r3308, %r3309, 30;
	mov.b64 	%rd4323, {%r3311, %r3310};
	shf.r.wrap.b32 	%r3312, %r3308, %r3309, 28;
	shf.r.wrap.b32 	%r3313, %r3309, %r3308, 28;
	mov.b64 	%rd4324, {%r3313, %r3312};
	xor.b64  	%rd4325, %rd4323, %rd4324;
	shf.l.wrap.b32 	%r3314, %r3309, %r3308, 25;
	shf.l.wrap.b32 	%r3315, %r3308, %r3309, 25;
	mov.b64 	%rd4326, {%r3315, %r3314};
	xor.b64  	%rd4327, %rd4325, %rd4326;
	xor.b64  	%rd4328, %rd9731, %rd9732;
	and.b64  	%rd4329, %rd4328, %rd9733;
	and.b64  	%rd4330, %rd9731, %rd9732;
	or.b64  	%rd4331, %rd4329, %rd4330;
	add.s64 	%rd4332, %rd4321, %rd4331;
	add.s64 	%rd4333, %rd4332, %rd4327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3316,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3317}, %rd4322;
	}
	shf.r.wrap.b32 	%r3318, %r3317, %r3316, 14;
	shf.r.wrap.b32 	%r3319, %r3316, %r3317, 14;
	mov.b64 	%rd4334, {%r3319, %r3318};
	shf.r.wrap.b32 	%r3320, %r3317, %r3316, 18;
	shf.r.wrap.b32 	%r3321, %r3316, %r3317, 18;
	mov.b64 	%rd4335, {%r3321, %r3320};
	xor.b64  	%rd4336, %rd4335, %rd4334;
	shf.l.wrap.b32 	%r3322, %r3316, %r3317, 23;
	shf.l.wrap.b32 	%r3323, %r3317, %r3316, 23;
	mov.b64 	%rd4337, {%r3323, %r3322};
	xor.b64  	%rd4338, %rd4336, %rd4337;
	xor.b64  	%rd4339, %rd9735, %rd9736;
	and.b64  	%rd4340, %rd4322, %rd4339;
	xor.b64  	%rd4341, %rd4340, %rd9736;
	add.s64 	%rd4342, %rd9740, %rd9737;
	ld.const.u64 	%rd4343, [%rd4308+8];
	add.s64 	%rd4344, %rd4342, %rd4343;
	add.s64 	%rd4345, %rd4344, %rd4341;
	add.s64 	%rd4346, %rd4345, %rd4338;
	add.s64 	%rd4347, %rd4346, %rd9733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3324,%dummy}, %rd4333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3325}, %rd4333;
	}
	shf.r.wrap.b32 	%r3326, %r3325, %r3324, 28;
	shf.r.wrap.b32 	%r3327, %r3324, %r3325, 28;
	mov.b64 	%rd4348, {%r3327, %r3326};
	shf.l.wrap.b32 	%r3328, %r3324, %r3325, 30;
	shf.l.wrap.b32 	%r3329, %r3325, %r3324, 30;
	mov.b64 	%rd4349, {%r3329, %r3328};
	xor.b64  	%rd4350, %rd4349, %rd4348;
	shf.l.wrap.b32 	%r3330, %r3324, %r3325, 25;
	shf.l.wrap.b32 	%r3331, %r3325, %r3324, 25;
	mov.b64 	%rd4351, {%r3331, %r3330};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	and.b64  	%rd4353, %rd4333, %rd9731;
	xor.b64  	%rd4354, %rd4333, %rd9731;
	and.b64  	%rd4355, %rd4354, %rd9732;
	or.b64  	%rd4356, %rd4355, %rd4353;
	add.s64 	%rd4357, %rd4346, %rd4356;
	add.s64 	%rd4358, %rd4357, %rd4352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3332,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3333}, %rd4347;
	}
	shf.r.wrap.b32 	%r3334, %r3333, %r3332, 14;
	shf.r.wrap.b32 	%r3335, %r3332, %r3333, 14;
	mov.b64 	%rd4359, {%r3335, %r3334};
	shf.r.wrap.b32 	%r3336, %r3333, %r3332, 18;
	shf.r.wrap.b32 	%r3337, %r3332, %r3333, 18;
	mov.b64 	%rd4360, {%r3337, %r3336};
	xor.b64  	%rd4361, %rd4360, %rd4359;
	shf.l.wrap.b32 	%r3338, %r3332, %r3333, 23;
	shf.l.wrap.b32 	%r3339, %r3333, %r3332, 23;
	mov.b64 	%rd4362, {%r3339, %r3338};
	xor.b64  	%rd4363, %rd4361, %rd4362;
	xor.b64  	%rd4364, %rd4322, %rd9735;
	and.b64  	%rd4365, %rd4347, %rd4364;
	xor.b64  	%rd4366, %rd4365, %rd9735;
	add.s64 	%rd4367, %rd9741, %rd9736;
	ld.const.u64 	%rd4368, [%rd4308+16];
	add.s64 	%rd4369, %rd4367, %rd4368;
	add.s64 	%rd4370, %rd4369, %rd4366;
	add.s64 	%rd4371, %rd4370, %rd4363;
	add.s64 	%rd4372, %rd4371, %rd9732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3340,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3341}, %rd4358;
	}
	shf.r.wrap.b32 	%r3342, %r3341, %r3340, 28;
	shf.r.wrap.b32 	%r3343, %r3340, %r3341, 28;
	mov.b64 	%rd4373, {%r3343, %r3342};
	shf.l.wrap.b32 	%r3344, %r3340, %r3341, 30;
	shf.l.wrap.b32 	%r3345, %r3341, %r3340, 30;
	mov.b64 	%rd4374, {%r3345, %r3344};
	xor.b64  	%rd4375, %rd4374, %rd4373;
	shf.l.wrap.b32 	%r3346, %r3340, %r3341, 25;
	shf.l.wrap.b32 	%r3347, %r3341, %r3340, 25;
	mov.b64 	%rd4376, {%r3347, %r3346};
	xor.b64  	%rd4377, %rd4375, %rd4376;
	and.b64  	%rd4378, %rd4358, %rd4333;
	xor.b64  	%rd4379, %rd4358, %rd4333;
	and.b64  	%rd4380, %rd4379, %rd9731;
	or.b64  	%rd4381, %rd4380, %rd4378;
	add.s64 	%rd4382, %rd4371, %rd4381;
	add.s64 	%rd4383, %rd4382, %rd4377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd4372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3349}, %rd4372;
	}
	shf.r.wrap.b32 	%r3350, %r3349, %r3348, 14;
	shf.r.wrap.b32 	%r3351, %r3348, %r3349, 14;
	mov.b64 	%rd4384, {%r3351, %r3350};
	shf.r.wrap.b32 	%r3352, %r3349, %r3348, 18;
	shf.r.wrap.b32 	%r3353, %r3348, %r3349, 18;
	mov.b64 	%rd4385, {%r3353, %r3352};
	xor.b64  	%rd4386, %rd4385, %rd4384;
	shf.l.wrap.b32 	%r3354, %r3348, %r3349, 23;
	shf.l.wrap.b32 	%r3355, %r3349, %r3348, 23;
	mov.b64 	%rd4387, {%r3355, %r3354};
	xor.b64  	%rd4388, %rd4386, %rd4387;
	xor.b64  	%rd4389, %rd4347, %rd4322;
	and.b64  	%rd4390, %rd4372, %rd4389;
	xor.b64  	%rd4391, %rd4390, %rd4322;
	add.s64 	%rd4392, %rd9742, %rd9735;
	ld.const.u64 	%rd4393, [%rd4308+24];
	add.s64 	%rd4394, %rd4392, %rd4393;
	add.s64 	%rd4395, %rd4394, %rd4391;
	add.s64 	%rd4396, %rd4395, %rd4388;
	add.s64 	%rd4397, %rd4396, %rd9731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3356,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd4383;
	}
	shf.r.wrap.b32 	%r3358, %r3357, %r3356, 28;
	shf.r.wrap.b32 	%r3359, %r3356, %r3357, 28;
	mov.b64 	%rd4398, {%r3359, %r3358};
	shf.l.wrap.b32 	%r3360, %r3356, %r3357, 30;
	shf.l.wrap.b32 	%r3361, %r3357, %r3356, 30;
	mov.b64 	%rd4399, {%r3361, %r3360};
	xor.b64  	%rd4400, %rd4399, %rd4398;
	shf.l.wrap.b32 	%r3362, %r3356, %r3357, 25;
	shf.l.wrap.b32 	%r3363, %r3357, %r3356, 25;
	mov.b64 	%rd4401, {%r3363, %r3362};
	xor.b64  	%rd4402, %rd4400, %rd4401;
	and.b64  	%rd4403, %rd4383, %rd4358;
	xor.b64  	%rd4404, %rd4383, %rd4358;
	and.b64  	%rd4405, %rd4404, %rd4333;
	or.b64  	%rd4406, %rd4405, %rd4403;
	add.s64 	%rd4407, %rd4396, %rd4406;
	add.s64 	%rd4408, %rd4407, %rd4402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3364,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3365}, %rd4397;
	}
	shf.r.wrap.b32 	%r3366, %r3365, %r3364, 14;
	shf.r.wrap.b32 	%r3367, %r3364, %r3365, 14;
	mov.b64 	%rd4409, {%r3367, %r3366};
	shf.r.wrap.b32 	%r3368, %r3365, %r3364, 18;
	shf.r.wrap.b32 	%r3369, %r3364, %r3365, 18;
	mov.b64 	%rd4410, {%r3369, %r3368};
	xor.b64  	%rd4411, %rd4410, %rd4409;
	shf.l.wrap.b32 	%r3370, %r3364, %r3365, 23;
	shf.l.wrap.b32 	%r3371, %r3365, %r3364, 23;
	mov.b64 	%rd4412, {%r3371, %r3370};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	xor.b64  	%rd4414, %rd4372, %rd4347;
	and.b64  	%rd4415, %rd4397, %rd4414;
	xor.b64  	%rd4416, %rd4415, %rd4347;
	add.s64 	%rd4417, %rd4322, %rd9743;
	ld.const.u64 	%rd4418, [%rd4308+32];
	add.s64 	%rd4419, %rd4417, %rd4418;
	add.s64 	%rd4420, %rd4419, %rd4416;
	add.s64 	%rd4421, %rd4420, %rd4413;
	add.s64 	%rd4422, %rd4421, %rd4333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3372,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3373}, %rd4408;
	}
	shf.r.wrap.b32 	%r3374, %r3373, %r3372, 28;
	shf.r.wrap.b32 	%r3375, %r3372, %r3373, 28;
	mov.b64 	%rd4423, {%r3375, %r3374};
	shf.l.wrap.b32 	%r3376, %r3372, %r3373, 30;
	shf.l.wrap.b32 	%r3377, %r3373, %r3372, 30;
	mov.b64 	%rd4424, {%r3377, %r3376};
	xor.b64  	%rd4425, %rd4424, %rd4423;
	shf.l.wrap.b32 	%r3378, %r3372, %r3373, 25;
	shf.l.wrap.b32 	%r3379, %r3373, %r3372, 25;
	mov.b64 	%rd4426, {%r3379, %r3378};
	xor.b64  	%rd4427, %rd4425, %rd4426;
	and.b64  	%rd4428, %rd4408, %rd4383;
	xor.b64  	%rd4429, %rd4408, %rd4383;
	and.b64  	%rd4430, %rd4429, %rd4358;
	or.b64  	%rd4431, %rd4430, %rd4428;
	add.s64 	%rd4432, %rd4421, %rd4431;
	add.s64 	%rd4433, %rd4432, %rd4427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3380,%dummy}, %rd4422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3381}, %rd4422;
	}
	shf.r.wrap.b32 	%r3382, %r3381, %r3380, 14;
	shf.r.wrap.b32 	%r3383, %r3380, %r3381, 14;
	mov.b64 	%rd4434, {%r3383, %r3382};
	shf.r.wrap.b32 	%r3384, %r3381, %r3380, 18;
	shf.r.wrap.b32 	%r3385, %r3380, %r3381, 18;
	mov.b64 	%rd4435, {%r3385, %r3384};
	xor.b64  	%rd4436, %rd4435, %rd4434;
	shf.l.wrap.b32 	%r3386, %r3380, %r3381, 23;
	shf.l.wrap.b32 	%r3387, %r3381, %r3380, 23;
	mov.b64 	%rd4437, {%r3387, %r3386};
	xor.b64  	%rd4438, %rd4436, %rd4437;
	xor.b64  	%rd4439, %rd4397, %rd4372;
	and.b64  	%rd4440, %rd4422, %rd4439;
	xor.b64  	%rd4441, %rd4440, %rd4372;
	add.s64 	%rd4442, %rd4347, %rd9744;
	ld.const.u64 	%rd4443, [%rd4308+40];
	add.s64 	%rd4444, %rd4442, %rd4443;
	add.s64 	%rd4445, %rd4444, %rd4441;
	add.s64 	%rd4446, %rd4445, %rd4438;
	add.s64 	%rd4447, %rd4446, %rd4358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3388,%dummy}, %rd4433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3389}, %rd4433;
	}
	shf.r.wrap.b32 	%r3390, %r3389, %r3388, 28;
	shf.r.wrap.b32 	%r3391, %r3388, %r3389, 28;
	mov.b64 	%rd4448, {%r3391, %r3390};
	shf.l.wrap.b32 	%r3392, %r3388, %r3389, 30;
	shf.l.wrap.b32 	%r3393, %r3389, %r3388, 30;
	mov.b64 	%rd4449, {%r3393, %r3392};
	xor.b64  	%rd4450, %rd4449, %rd4448;
	shf.l.wrap.b32 	%r3394, %r3388, %r3389, 25;
	shf.l.wrap.b32 	%r3395, %r3389, %r3388, 25;
	mov.b64 	%rd4451, {%r3395, %r3394};
	xor.b64  	%rd4452, %rd4450, %rd4451;
	and.b64  	%rd4453, %rd4433, %rd4408;
	xor.b64  	%rd4454, %rd4433, %rd4408;
	and.b64  	%rd4455, %rd4454, %rd4383;
	or.b64  	%rd4456, %rd4455, %rd4453;
	add.s64 	%rd4457, %rd4446, %rd4456;
	add.s64 	%rd4458, %rd4457, %rd4452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd4447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4447;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 14;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 14;
	mov.b64 	%rd4459, {%r3399, %r3398};
	shf.r.wrap.b32 	%r3400, %r3397, %r3396, 18;
	shf.r.wrap.b32 	%r3401, %r3396, %r3397, 18;
	mov.b64 	%rd4460, {%r3401, %r3400};
	xor.b64  	%rd4461, %rd4460, %rd4459;
	shf.l.wrap.b32 	%r3402, %r3396, %r3397, 23;
	shf.l.wrap.b32 	%r3403, %r3397, %r3396, 23;
	mov.b64 	%rd4462, {%r3403, %r3402};
	xor.b64  	%rd4463, %rd4461, %rd4462;
	xor.b64  	%rd4464, %rd4422, %rd4397;
	and.b64  	%rd4465, %rd4447, %rd4464;
	xor.b64  	%rd4466, %rd4465, %rd4397;
	add.s64 	%rd4467, %rd4372, %rd9745;
	ld.const.u64 	%rd4468, [%rd4308+48];
	add.s64 	%rd4469, %rd4467, %rd4468;
	add.s64 	%rd4470, %rd4469, %rd4466;
	add.s64 	%rd4471, %rd4470, %rd4463;
	add.s64 	%rd4472, %rd4471, %rd4383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3404,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3405}, %rd4458;
	}
	shf.r.wrap.b32 	%r3406, %r3405, %r3404, 28;
	shf.r.wrap.b32 	%r3407, %r3404, %r3405, 28;
	mov.b64 	%rd4473, {%r3407, %r3406};
	shf.l.wrap.b32 	%r3408, %r3404, %r3405, 30;
	shf.l.wrap.b32 	%r3409, %r3405, %r3404, 30;
	mov.b64 	%rd4474, {%r3409, %r3408};
	xor.b64  	%rd4475, %rd4474, %rd4473;
	shf.l.wrap.b32 	%r3410, %r3404, %r3405, 25;
	shf.l.wrap.b32 	%r3411, %r3405, %r3404, 25;
	mov.b64 	%rd4476, {%r3411, %r3410};
	xor.b64  	%rd4477, %rd4475, %rd4476;
	and.b64  	%rd4478, %rd4458, %rd4433;
	xor.b64  	%rd4479, %rd4458, %rd4433;
	and.b64  	%rd4480, %rd4479, %rd4408;
	or.b64  	%rd4481, %rd4480, %rd4478;
	add.s64 	%rd4482, %rd4471, %rd4481;
	add.s64 	%rd4483, %rd4482, %rd4477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3412,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4472;
	}
	shf.r.wrap.b32 	%r3414, %r3413, %r3412, 14;
	shf.r.wrap.b32 	%r3415, %r3412, %r3413, 14;
	mov.b64 	%rd4484, {%r3415, %r3414};
	shf.r.wrap.b32 	%r3416, %r3413, %r3412, 18;
	shf.r.wrap.b32 	%r3417, %r3412, %r3413, 18;
	mov.b64 	%rd4485, {%r3417, %r3416};
	xor.b64  	%rd4486, %rd4485, %rd4484;
	shf.l.wrap.b32 	%r3418, %r3412, %r3413, 23;
	shf.l.wrap.b32 	%r3419, %r3413, %r3412, 23;
	mov.b64 	%rd4487, {%r3419, %r3418};
	xor.b64  	%rd4488, %rd4486, %rd4487;
	xor.b64  	%rd4489, %rd4447, %rd4422;
	and.b64  	%rd4490, %rd4472, %rd4489;
	xor.b64  	%rd4491, %rd4490, %rd4422;
	add.s64 	%rd4492, %rd4397, %rd9746;
	ld.const.u64 	%rd4493, [%rd4308+56];
	add.s64 	%rd4494, %rd4492, %rd4493;
	add.s64 	%rd4495, %rd4494, %rd4491;
	add.s64 	%rd4496, %rd4495, %rd4488;
	add.s64 	%rd4497, %rd4496, %rd4408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3420,%dummy}, %rd4483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3421}, %rd4483;
	}
	shf.r.wrap.b32 	%r3422, %r3421, %r3420, 28;
	shf.r.wrap.b32 	%r3423, %r3420, %r3421, 28;
	mov.b64 	%rd4498, {%r3423, %r3422};
	shf.l.wrap.b32 	%r3424, %r3420, %r3421, 30;
	shf.l.wrap.b32 	%r3425, %r3421, %r3420, 30;
	mov.b64 	%rd4499, {%r3425, %r3424};
	xor.b64  	%rd4500, %rd4499, %rd4498;
	shf.l.wrap.b32 	%r3426, %r3420, %r3421, 25;
	shf.l.wrap.b32 	%r3427, %r3421, %r3420, 25;
	mov.b64 	%rd4501, {%r3427, %r3426};
	xor.b64  	%rd4502, %rd4500, %rd4501;
	and.b64  	%rd4503, %rd4483, %rd4458;
	xor.b64  	%rd4504, %rd4483, %rd4458;
	and.b64  	%rd4505, %rd4504, %rd4433;
	or.b64  	%rd4506, %rd4505, %rd4503;
	add.s64 	%rd4507, %rd4496, %rd4506;
	add.s64 	%rd4508, %rd4507, %rd4502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3428,%dummy}, %rd4497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3429}, %rd4497;
	}
	shf.r.wrap.b32 	%r3430, %r3429, %r3428, 14;
	shf.r.wrap.b32 	%r3431, %r3428, %r3429, 14;
	mov.b64 	%rd4509, {%r3431, %r3430};
	shf.r.wrap.b32 	%r3432, %r3429, %r3428, 18;
	shf.r.wrap.b32 	%r3433, %r3428, %r3429, 18;
	mov.b64 	%rd4510, {%r3433, %r3432};
	xor.b64  	%rd4511, %rd4510, %rd4509;
	shf.l.wrap.b32 	%r3434, %r3428, %r3429, 23;
	shf.l.wrap.b32 	%r3435, %r3429, %r3428, 23;
	mov.b64 	%rd4512, {%r3435, %r3434};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	xor.b64  	%rd4514, %rd4472, %rd4447;
	and.b64  	%rd4515, %rd4497, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4447;
	add.s64 	%rd4517, %rd4422, %rd9730;
	ld.const.u64 	%rd4518, [%rd4308+64];
	add.s64 	%rd4519, %rd4517, %rd4518;
	add.s64 	%rd4520, %rd4519, %rd4516;
	add.s64 	%rd4521, %rd4520, %rd4513;
	add.s64 	%rd4522, %rd4521, %rd4433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3436,%dummy}, %rd4508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3437}, %rd4508;
	}
	shf.r.wrap.b32 	%r3438, %r3437, %r3436, 28;
	shf.r.wrap.b32 	%r3439, %r3436, %r3437, 28;
	mov.b64 	%rd4523, {%r3439, %r3438};
	shf.l.wrap.b32 	%r3440, %r3436, %r3437, 30;
	shf.l.wrap.b32 	%r3441, %r3437, %r3436, 30;
	mov.b64 	%rd4524, {%r3441, %r3440};
	xor.b64  	%rd4525, %rd4524, %rd4523;
	shf.l.wrap.b32 	%r3442, %r3436, %r3437, 25;
	shf.l.wrap.b32 	%r3443, %r3437, %r3436, 25;
	mov.b64 	%rd4526, {%r3443, %r3442};
	xor.b64  	%rd4527, %rd4525, %rd4526;
	and.b64  	%rd4528, %rd4508, %rd4483;
	xor.b64  	%rd4529, %rd4508, %rd4483;
	and.b64  	%rd4530, %rd4529, %rd4458;
	or.b64  	%rd4531, %rd4530, %rd4528;
	add.s64 	%rd4532, %rd4521, %rd4531;
	add.s64 	%rd4533, %rd4532, %rd4527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3444,%dummy}, %rd4522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd4522;
	}
	shf.r.wrap.b32 	%r3446, %r3445, %r3444, 14;
	shf.r.wrap.b32 	%r3447, %r3444, %r3445, 14;
	mov.b64 	%rd4534, {%r3447, %r3446};
	shf.r.wrap.b32 	%r3448, %r3445, %r3444, 18;
	shf.r.wrap.b32 	%r3449, %r3444, %r3445, 18;
	mov.b64 	%rd4535, {%r3449, %r3448};
	xor.b64  	%rd4536, %rd4535, %rd4534;
	shf.l.wrap.b32 	%r3450, %r3444, %r3445, 23;
	shf.l.wrap.b32 	%r3451, %r3445, %r3444, 23;
	mov.b64 	%rd4537, {%r3451, %r3450};
	xor.b64  	%rd4538, %rd4536, %rd4537;
	xor.b64  	%rd4539, %rd4497, %rd4472;
	and.b64  	%rd4540, %rd4522, %rd4539;
	xor.b64  	%rd4541, %rd4540, %rd4472;
	add.s64 	%rd4542, %rd4447, %rd9729;
	ld.const.u64 	%rd4543, [%rd4308+72];
	add.s64 	%rd4544, %rd4542, %rd4543;
	add.s64 	%rd4545, %rd4544, %rd4541;
	add.s64 	%rd4546, %rd4545, %rd4538;
	add.s64 	%rd4547, %rd4546, %rd4458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3452,%dummy}, %rd4533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd4533;
	}
	shf.r.wrap.b32 	%r3454, %r3453, %r3452, 28;
	shf.r.wrap.b32 	%r3455, %r3452, %r3453, 28;
	mov.b64 	%rd4548, {%r3455, %r3454};
	shf.l.wrap.b32 	%r3456, %r3452, %r3453, 30;
	shf.l.wrap.b32 	%r3457, %r3453, %r3452, 30;
	mov.b64 	%rd4549, {%r3457, %r3456};
	xor.b64  	%rd4550, %rd4549, %rd4548;
	shf.l.wrap.b32 	%r3458, %r3452, %r3453, 25;
	shf.l.wrap.b32 	%r3459, %r3453, %r3452, 25;
	mov.b64 	%rd4551, {%r3459, %r3458};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	and.b64  	%rd4553, %rd4533, %rd4508;
	xor.b64  	%rd4554, %rd4533, %rd4508;
	and.b64  	%rd4555, %rd4554, %rd4483;
	or.b64  	%rd4556, %rd4555, %rd4553;
	add.s64 	%rd4557, %rd4546, %rd4556;
	add.s64 	%rd4558, %rd4557, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3460,%dummy}, %rd4547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3461}, %rd4547;
	}
	shf.r.wrap.b32 	%r3462, %r3461, %r3460, 14;
	shf.r.wrap.b32 	%r3463, %r3460, %r3461, 14;
	mov.b64 	%rd4559, {%r3463, %r3462};
	shf.r.wrap.b32 	%r3464, %r3461, %r3460, 18;
	shf.r.wrap.b32 	%r3465, %r3460, %r3461, 18;
	mov.b64 	%rd4560, {%r3465, %r3464};
	xor.b64  	%rd4561, %rd4560, %rd4559;
	shf.l.wrap.b32 	%r3466, %r3460, %r3461, 23;
	shf.l.wrap.b32 	%r3467, %r3461, %r3460, 23;
	mov.b64 	%rd4562, {%r3467, %r3466};
	xor.b64  	%rd4563, %rd4561, %rd4562;
	xor.b64  	%rd4564, %rd4522, %rd4497;
	and.b64  	%rd4565, %rd4547, %rd4564;
	xor.b64  	%rd4566, %rd4565, %rd4497;
	add.s64 	%rd4567, %rd4472, %rd9728;
	ld.const.u64 	%rd4568, [%rd4308+80];
	add.s64 	%rd4569, %rd4567, %rd4568;
	add.s64 	%rd4570, %rd4569, %rd4566;
	add.s64 	%rd4571, %rd4570, %rd4563;
	add.s64 	%rd4572, %rd4571, %rd4483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3468,%dummy}, %rd4558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3469}, %rd4558;
	}
	shf.r.wrap.b32 	%r3470, %r3469, %r3468, 28;
	shf.r.wrap.b32 	%r3471, %r3468, %r3469, 28;
	mov.b64 	%rd4573, {%r3471, %r3470};
	shf.l.wrap.b32 	%r3472, %r3468, %r3469, 30;
	shf.l.wrap.b32 	%r3473, %r3469, %r3468, 30;
	mov.b64 	%rd4574, {%r3473, %r3472};
	xor.b64  	%rd4575, %rd4574, %rd4573;
	shf.l.wrap.b32 	%r3474, %r3468, %r3469, 25;
	shf.l.wrap.b32 	%r3475, %r3469, %r3468, 25;
	mov.b64 	%rd4576, {%r3475, %r3474};
	xor.b64  	%rd4577, %rd4575, %rd4576;
	and.b64  	%rd4578, %rd4558, %rd4533;
	xor.b64  	%rd4579, %rd4558, %rd4533;
	and.b64  	%rd4580, %rd4579, %rd4508;
	or.b64  	%rd4581, %rd4580, %rd4578;
	add.s64 	%rd4582, %rd4571, %rd4581;
	add.s64 	%rd4583, %rd4582, %rd4577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3476,%dummy}, %rd4572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3477}, %rd4572;
	}
	shf.r.wrap.b32 	%r3478, %r3477, %r3476, 14;
	shf.r.wrap.b32 	%r3479, %r3476, %r3477, 14;
	mov.b64 	%rd4584, {%r3479, %r3478};
	shf.r.wrap.b32 	%r3480, %r3477, %r3476, 18;
	shf.r.wrap.b32 	%r3481, %r3476, %r3477, 18;
	mov.b64 	%rd4585, {%r3481, %r3480};
	xor.b64  	%rd4586, %rd4585, %rd4584;
	shf.l.wrap.b32 	%r3482, %r3476, %r3477, 23;
	shf.l.wrap.b32 	%r3483, %r3477, %r3476, 23;
	mov.b64 	%rd4587, {%r3483, %r3482};
	xor.b64  	%rd4588, %rd4586, %rd4587;
	xor.b64  	%rd4589, %rd4547, %rd4522;
	and.b64  	%rd4590, %rd4572, %rd4589;
	xor.b64  	%rd4591, %rd4590, %rd4522;
	add.s64 	%rd4592, %rd4497, %rd9727;
	ld.const.u64 	%rd4593, [%rd4308+88];
	add.s64 	%rd4594, %rd4592, %rd4593;
	add.s64 	%rd4595, %rd4594, %rd4591;
	add.s64 	%rd4596, %rd4595, %rd4588;
	add.s64 	%rd4597, %rd4596, %rd4508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3484,%dummy}, %rd4583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3485}, %rd4583;
	}
	shf.r.wrap.b32 	%r3486, %r3485, %r3484, 28;
	shf.r.wrap.b32 	%r3487, %r3484, %r3485, 28;
	mov.b64 	%rd4598, {%r3487, %r3486};
	shf.l.wrap.b32 	%r3488, %r3484, %r3485, 30;
	shf.l.wrap.b32 	%r3489, %r3485, %r3484, 30;
	mov.b64 	%rd4599, {%r3489, %r3488};
	xor.b64  	%rd4600, %rd4599, %rd4598;
	shf.l.wrap.b32 	%r3490, %r3484, %r3485, 25;
	shf.l.wrap.b32 	%r3491, %r3485, %r3484, 25;
	mov.b64 	%rd4601, {%r3491, %r3490};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	and.b64  	%rd4603, %rd4583, %rd4558;
	xor.b64  	%rd4604, %rd4583, %rd4558;
	and.b64  	%rd4605, %rd4604, %rd4533;
	or.b64  	%rd4606, %rd4605, %rd4603;
	add.s64 	%rd4607, %rd4596, %rd4606;
	add.s64 	%rd4608, %rd4607, %rd4602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3492,%dummy}, %rd4597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3493}, %rd4597;
	}
	shf.r.wrap.b32 	%r3494, %r3493, %r3492, 14;
	shf.r.wrap.b32 	%r3495, %r3492, %r3493, 14;
	mov.b64 	%rd4609, {%r3495, %r3494};
	shf.r.wrap.b32 	%r3496, %r3493, %r3492, 18;
	shf.r.wrap.b32 	%r3497, %r3492, %r3493, 18;
	mov.b64 	%rd4610, {%r3497, %r3496};
	xor.b64  	%rd4611, %rd4610, %rd4609;
	shf.l.wrap.b32 	%r3498, %r3492, %r3493, 23;
	shf.l.wrap.b32 	%r3499, %r3493, %r3492, 23;
	mov.b64 	%rd4612, {%r3499, %r3498};
	xor.b64  	%rd4613, %rd4611, %rd4612;
	xor.b64  	%rd4614, %rd4572, %rd4547;
	and.b64  	%rd4615, %rd4597, %rd4614;
	xor.b64  	%rd4616, %rd4615, %rd4547;
	add.s64 	%rd4617, %rd4522, %rd9726;
	ld.const.u64 	%rd4618, [%rd4308+96];
	add.s64 	%rd4619, %rd4617, %rd4618;
	add.s64 	%rd4620, %rd4619, %rd4616;
	add.s64 	%rd4621, %rd4620, %rd4613;
	add.s64 	%rd9738, %rd4621, %rd4533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3500,%dummy}, %rd4608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3501}, %rd4608;
	}
	shf.r.wrap.b32 	%r3502, %r3501, %r3500, 28;
	shf.r.wrap.b32 	%r3503, %r3500, %r3501, 28;
	mov.b64 	%rd4622, {%r3503, %r3502};
	shf.l.wrap.b32 	%r3504, %r3500, %r3501, 30;
	shf.l.wrap.b32 	%r3505, %r3501, %r3500, 30;
	mov.b64 	%rd4623, {%r3505, %r3504};
	xor.b64  	%rd4624, %rd4623, %rd4622;
	shf.l.wrap.b32 	%r3506, %r3500, %r3501, 25;
	shf.l.wrap.b32 	%r3507, %r3501, %r3500, 25;
	mov.b64 	%rd4625, {%r3507, %r3506};
	xor.b64  	%rd4626, %rd4624, %rd4625;
	and.b64  	%rd4627, %rd4608, %rd4583;
	xor.b64  	%rd4628, %rd4608, %rd4583;
	and.b64  	%rd4629, %rd4628, %rd4558;
	or.b64  	%rd4630, %rd4629, %rd4627;
	add.s64 	%rd4631, %rd4621, %rd4630;
	add.s64 	%rd9734, %rd4631, %rd4626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3508,%dummy}, %rd9738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3509}, %rd9738;
	}
	shf.r.wrap.b32 	%r3510, %r3509, %r3508, 14;
	shf.r.wrap.b32 	%r3511, %r3508, %r3509, 14;
	mov.b64 	%rd4632, {%r3511, %r3510};
	shf.r.wrap.b32 	%r3512, %r3509, %r3508, 18;
	shf.r.wrap.b32 	%r3513, %r3508, %r3509, 18;
	mov.b64 	%rd4633, {%r3513, %r3512};
	xor.b64  	%rd4634, %rd4633, %rd4632;
	shf.l.wrap.b32 	%r3514, %r3508, %r3509, 23;
	shf.l.wrap.b32 	%r3515, %r3509, %r3508, 23;
	mov.b64 	%rd4635, {%r3515, %r3514};
	xor.b64  	%rd4636, %rd4634, %rd4635;
	xor.b64  	%rd4637, %rd4597, %rd4572;
	and.b64  	%rd4638, %rd9738, %rd4637;
	xor.b64  	%rd4639, %rd4638, %rd4572;
	add.s64 	%rd4640, %rd4547, %rd9725;
	ld.const.u64 	%rd4641, [%rd4308+104];
	add.s64 	%rd4642, %rd4640, %rd4641;
	add.s64 	%rd4643, %rd4642, %rd4639;
	add.s64 	%rd4644, %rd4643, %rd4636;
	add.s64 	%rd9737, %rd4644, %rd4558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd9734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd9734;
	}
	shf.r.wrap.b32 	%r3518, %r3517, %r3516, 28;
	shf.r.wrap.b32 	%r3519, %r3516, %r3517, 28;
	mov.b64 	%rd4645, {%r3519, %r3518};
	shf.l.wrap.b32 	%r3520, %r3516, %r3517, 30;
	shf.l.wrap.b32 	%r3521, %r3517, %r3516, 30;
	mov.b64 	%rd4646, {%r3521, %r3520};
	xor.b64  	%rd4647, %rd4646, %rd4645;
	shf.l.wrap.b32 	%r3522, %r3516, %r3517, 25;
	shf.l.wrap.b32 	%r3523, %r3517, %r3516, 25;
	mov.b64 	%rd4648, {%r3523, %r3522};
	xor.b64  	%rd4649, %rd4647, %rd4648;
	and.b64  	%rd4650, %rd9734, %rd4608;
	xor.b64  	%rd4651, %rd9734, %rd4608;
	and.b64  	%rd4652, %rd4651, %rd4583;
	or.b64  	%rd4653, %rd4652, %rd4650;
	add.s64 	%rd4654, %rd4644, %rd4653;
	add.s64 	%rd9733, %rd4654, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3524,%dummy}, %rd9737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3525}, %rd9737;
	}
	shf.r.wrap.b32 	%r3526, %r3525, %r3524, 14;
	shf.r.wrap.b32 	%r3527, %r3524, %r3525, 14;
	mov.b64 	%rd4655, {%r3527, %r3526};
	shf.r.wrap.b32 	%r3528, %r3525, %r3524, 18;
	shf.r.wrap.b32 	%r3529, %r3524, %r3525, 18;
	mov.b64 	%rd4656, {%r3529, %r3528};
	xor.b64  	%rd4657, %rd4656, %rd4655;
	shf.l.wrap.b32 	%r3530, %r3524, %r3525, 23;
	shf.l.wrap.b32 	%r3531, %r3525, %r3524, 23;
	mov.b64 	%rd4658, {%r3531, %r3530};
	xor.b64  	%rd4659, %rd4657, %rd4658;
	xor.b64  	%rd4660, %rd9738, %rd4597;
	and.b64  	%rd4661, %rd9737, %rd4660;
	xor.b64  	%rd4662, %rd4661, %rd4597;
	add.s64 	%rd4663, %rd4572, %rd9724;
	ld.const.u64 	%rd4664, [%rd4308+112];
	add.s64 	%rd4665, %rd4663, %rd4664;
	add.s64 	%rd4666, %rd4665, %rd4662;
	add.s64 	%rd4667, %rd4666, %rd4659;
	add.s64 	%rd9736, %rd4667, %rd4583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3532,%dummy}, %rd9733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3533}, %rd9733;
	}
	shf.r.wrap.b32 	%r3534, %r3533, %r3532, 28;
	shf.r.wrap.b32 	%r3535, %r3532, %r3533, 28;
	mov.b64 	%rd4668, {%r3535, %r3534};
	shf.l.wrap.b32 	%r3536, %r3532, %r3533, 30;
	shf.l.wrap.b32 	%r3537, %r3533, %r3532, 30;
	mov.b64 	%rd4669, {%r3537, %r3536};
	xor.b64  	%rd4670, %rd4669, %rd4668;
	shf.l.wrap.b32 	%r3538, %r3532, %r3533, 25;
	shf.l.wrap.b32 	%r3539, %r3533, %r3532, 25;
	mov.b64 	%rd4671, {%r3539, %r3538};
	xor.b64  	%rd4672, %rd4670, %rd4671;
	and.b64  	%rd4673, %rd9733, %rd9734;
	xor.b64  	%rd4674, %rd9733, %rd9734;
	and.b64  	%rd4675, %rd4674, %rd4608;
	or.b64  	%rd4676, %rd4675, %rd4673;
	add.s64 	%rd4677, %rd4667, %rd4676;
	add.s64 	%rd9732, %rd4677, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3540,%dummy}, %rd9736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3541}, %rd9736;
	}
	shf.r.wrap.b32 	%r3542, %r3541, %r3540, 14;
	shf.r.wrap.b32 	%r3543, %r3540, %r3541, 14;
	mov.b64 	%rd4678, {%r3543, %r3542};
	shf.r.wrap.b32 	%r3544, %r3541, %r3540, 18;
	shf.r.wrap.b32 	%r3545, %r3540, %r3541, 18;
	mov.b64 	%rd4679, {%r3545, %r3544};
	xor.b64  	%rd4680, %rd4679, %rd4678;
	shf.l.wrap.b32 	%r3546, %r3540, %r3541, 23;
	shf.l.wrap.b32 	%r3547, %r3541, %r3540, 23;
	mov.b64 	%rd4681, {%r3547, %r3546};
	xor.b64  	%rd4682, %rd4680, %rd4681;
	xor.b64  	%rd4683, %rd9737, %rd9738;
	and.b64  	%rd4684, %rd9736, %rd4683;
	xor.b64  	%rd4685, %rd4684, %rd9738;
	add.s64 	%rd4686, %rd4597, %rd9723;
	ld.const.u64 	%rd4687, [%rd4308+120];
	add.s64 	%rd4688, %rd4686, %rd4687;
	add.s64 	%rd4689, %rd4688, %rd4685;
	add.s64 	%rd4690, %rd4689, %rd4682;
	add.s64 	%rd9735, %rd4690, %rd4608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3548,%dummy}, %rd9732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3549}, %rd9732;
	}
	shf.r.wrap.b32 	%r3550, %r3549, %r3548, 28;
	shf.r.wrap.b32 	%r3551, %r3548, %r3549, 28;
	mov.b64 	%rd4691, {%r3551, %r3550};
	shf.l.wrap.b32 	%r3552, %r3548, %r3549, 30;
	shf.l.wrap.b32 	%r3553, %r3549, %r3548, 30;
	mov.b64 	%rd4692, {%r3553, %r3552};
	xor.b64  	%rd4693, %rd4692, %rd4691;
	shf.l.wrap.b32 	%r3554, %r3548, %r3549, 25;
	shf.l.wrap.b32 	%r3555, %r3549, %r3548, 25;
	mov.b64 	%rd4694, {%r3555, %r3554};
	xor.b64  	%rd4695, %rd4693, %rd4694;
	and.b64  	%rd4696, %rd9732, %rd9733;
	xor.b64  	%rd4697, %rd9732, %rd9733;
	and.b64  	%rd4698, %rd4697, %rd9734;
	or.b64  	%rd4699, %rd4698, %rd4696;
	add.s64 	%rd4700, %rd4690, %rd4699;
	add.s64 	%rd9731, %rd4700, %rd4695;
	add.s32 	%r7469, %r7469, 16;
	setp.lt.s32	%p22, %r7469, 80;
	@%p22 bra 	BB3_21;

	mov.b32	%r7364, %envreg3;
	mov.u32 	%r7363, %ntid.x;
	mov.u32 	%r7362, %ctaid.x;
	mov.u32 	%r7361, %tid.x;
	mad.lo.s32 	%r7360, %r7362, %r7363, %r7364;
	add.s32 	%r7359, %r7360, %r7361;
	ld.param.u64 	%rd9589, [m07100_init_param_17];
	ld.param.u64 	%rd9572, [m07100_init_param_18];
	ld.param.u64 	%rd9571, [m07100_init_param_24];
	ld.param.u64 	%rd9570, [m07100_init_param_4];
	add.s64 	%rd4701, %rd9731, 7640891576956012808;
	st.local.u64 	[%rd9747+200], %rd4701;
	add.s64 	%rd4702, %rd9732, -4942790177534073029;
	st.local.u64 	[%rd9747+208], %rd4702;
	add.s64 	%rd4703, %rd9733, 4354685564936845355;
	st.local.u64 	[%rd9747+216], %rd4703;
	add.s64 	%rd4704, %rd9734, -6534734903238641935;
	st.local.u64 	[%rd9747+224], %rd4704;
	add.s64 	%rd4705, %rd9735, 5840696475078001361;
	st.local.u64 	[%rd9747+232], %rd4705;
	add.s64 	%rd4706, %rd9736, -7276294671716946913;
	st.local.u64 	[%rd9747+240], %rd4706;
	add.s64 	%rd4707, %rd9737, 2270897969802886507;
	st.local.u64 	[%rd9747+248], %rd4707;
	add.s64 	%rd4708, %rd9738, 6620516959819538809;
	st.local.u64 	[%rd9747+256], %rd4708;
	st.local.v2.u32 	[%rd9747+264], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+272], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+280], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+288], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+296], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+304], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+312], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+320], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+328], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+336], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+344], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+352], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+360], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+368], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+376], {%r7470, %r7470};
	st.local.v2.u32 	[%rd9747+384], {%r7470, %r7470};
	ld.local.u64 	%rd4709, [%rd9747];
	mul.wide.s32 	%rd4710, %r7359, 384;
	add.s64 	%rd383, %rd9570, %rd4710;
	st.global.u64 	[%rd383], %rd4709;
	ld.local.u64 	%rd4711, [%rd9747+8];
	st.global.u64 	[%rd383+8], %rd4711;
	ld.local.u64 	%rd4712, [%rd9747+16];
	st.global.u64 	[%rd383+16], %rd4712;
	ld.local.u64 	%rd4713, [%rd9747+24];
	st.global.u64 	[%rd383+24], %rd4713;
	ld.local.u64 	%rd4714, [%rd9747+32];
	st.global.u64 	[%rd383+32], %rd4714;
	ld.local.u64 	%rd4715, [%rd9747+40];
	st.global.u64 	[%rd383+40], %rd4715;
	ld.local.u64 	%rd4716, [%rd9747+48];
	st.global.u64 	[%rd383+48], %rd4716;
	ld.local.u64 	%rd4717, [%rd9747+56];
	st.global.u64 	[%rd383+56], %rd4717;
	st.global.u64 	[%rd383+64], %rd4701;
	st.global.u64 	[%rd383+72], %rd4702;
	st.global.u64 	[%rd383+80], %rd4703;
	st.global.u64 	[%rd383+88], %rd4704;
	st.global.u64 	[%rd383+96], %rd4705;
	st.global.u64 	[%rd383+104], %rd4706;
	st.global.u64 	[%rd383+112], %rd4707;
	st.global.u64 	[%rd383+120], %rd4708;
	ld.global.u32 	%r3557, [%rd9571+32];
	mul.wide.u32 	%rd4718, %r3557, 256;
	add.s64 	%rd4719, %rd9572, %rd4718;
	ld.global.u32 	%r3558, [%rd9571+12];
	mul.wide.u32 	%rd4720, %r3558, 568;
	add.s64 	%rd4721, %rd9589, %rd4720;
	ld.global.u32 	%r3559, [%rd4721+512];
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3739;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4719;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3559;
	call.uni 
	sha512_hmac_update_global_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 18
	add.u64 	%rd4723, %SP, 528;
	add.u64 	%rd9748, %SPL, 528;
	add.s64 	%rd384, %rd9748, 192;

BB3_23:
	ld.local.v2.u32 	{%r3560, %r3561}, [%rd9747];
	st.local.v2.u32 	[%rd9748], {%r3560, %r3561};
	add.s64 	%rd9748, %rd9748, 8;
	add.s64 	%rd9747, %rd9747, 8;
	add.s32 	%r7470, %r7470, 1;
	setp.lt.u32	%p23, %r7470, 50;
	@%p23 bra 	BB3_23;

	add.u64 	%rd4724, %SP, 928;
	add.u64 	%rd4725, %SPL, 928;
	mov.u32 	%r3564, 1;
	mov.u32 	%r3565, 0;
	st.local.v4.u32 	[%rd4725], {%r3564, %r3565, %r3565, %r3565};
	add.u64 	%rd4726, %SP, 944;
	add.u64 	%rd4727, %SPL, 944;
	st.local.v4.u32 	[%rd4727], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4728, %SP, 960;
	add.u64 	%rd4729, %SPL, 960;
	st.local.v4.u32 	[%rd4729], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4730, %SP, 976;
	add.u64 	%rd4731, %SPL, 976;
	st.local.v4.u32 	[%rd4731], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4732, %SP, 992;
	add.u64 	%rd4733, %SPL, 992;
	st.local.v4.u32 	[%rd4733], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4734, %SP, 1008;
	add.u64 	%rd4735, %SPL, 1008;
	st.local.v4.u32 	[%rd4735], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4736, %SP, 1024;
	add.u64 	%rd4737, %SPL, 1024;
	st.local.v4.u32 	[%rd4737], {%r3565, %r3565, %r3565, %r3565};
	add.u64 	%rd4738, %SP, 1040;
	add.u64 	%rd4739, %SPL, 1040;
	st.local.v4.u32 	[%rd4739], {%r3565, %r3565, %r3565, %r3565};
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4723;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4724;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd4726;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd4728;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd4730;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd4732;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd4734;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd4736;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd4738;
	call.uni 
	sha512_hmac_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8
	);
	
	//{
	}// Callseq End 19
	ld.local.u32 	%r255, [%rd384];
	not.b32 	%r3566, %r255;
	and.b32  	%r3567, %r255, 127;
	bfe.u32 	%r3568, %r255, 2, 2;
	and.b32  	%r3569, %r3566, 3;
	shl.b32 	%r3570, %r3569, 3;
	mov.u32 	%r3571, 255;
	shl.b32 	%r3572, %r3571, %r3570;
	setp.eq.s32	%p24, %r3568, 0;
	selp.b32	%r3573, %r3572, 0, %p24;
	setp.eq.s32	%p25, %r3568, 1;
	selp.b32	%r3574, %r3572, 0, %p25;
	setp.eq.s32	%p26, %r3568, 2;
	selp.b32	%r3575, %r3572, 0, %p26;
	setp.eq.s32	%p27, %r3568, 3;
	selp.b32	%r3576, %r3572, 0, %p27;
	bfe.u32 	%r3577, %r255, 4, 3;
	setp.eq.s32	%p28, %r3577, 0;
	selp.b32	%r3578, -2139062144, 0, %p28;
	and.b32  	%r3579, %r3573, %r3578;
	ld.local.v2.u32 	{%r3580, %r3581}, [%rd384+-128];
	or.b32  	%r7501, %r3579, %r3580;
	and.b32  	%r3584, %r3574, %r3578;
	or.b32  	%r7500, %r3584, %r3581;
	st.local.v2.u32 	[%rd384+-128], {%r7501, %r7500};
	and.b32  	%r3585, %r3575, %r3578;
	ld.local.v2.u32 	{%r3586, %r3587}, [%rd384+-120];
	or.b32  	%r7499, %r3585, %r3586;
	and.b32  	%r3590, %r3576, %r3578;
	or.b32  	%r7498, %r3590, %r3587;
	st.local.v2.u32 	[%rd384+-120], {%r7499, %r7498};
	setp.eq.s32	%p29, %r3577, 1;
	selp.b32	%r3591, -2139062144, 0, %p29;
	and.b32  	%r3592, %r3573, %r3591;
	ld.local.v2.u32 	{%r3593, %r3594}, [%rd384+-112];
	or.b32  	%r7497, %r3592, %r3593;
	and.b32  	%r3597, %r3574, %r3591;
	or.b32  	%r7496, %r3594, %r3597;
	st.local.v2.u32 	[%rd384+-112], {%r7497, %r7496};
	and.b32  	%r3598, %r3575, %r3591;
	ld.local.v2.u32 	{%r3599, %r3600}, [%rd384+-104];
	or.b32  	%r7495, %r3599, %r3598;
	and.b32  	%r3603, %r3576, %r3591;
	or.b32  	%r7494, %r3600, %r3603;
	st.local.v2.u32 	[%rd384+-104], {%r7495, %r7494};
	setp.eq.s32	%p30, %r3577, 2;
	selp.b32	%r3604, -2139062144, 0, %p30;
	and.b32  	%r3605, %r3573, %r3604;
	ld.local.v2.u32 	{%r3606, %r3607}, [%rd384+-96];
	or.b32  	%r7493, %r3606, %r3605;
	and.b32  	%r3610, %r3574, %r3604;
	or.b32  	%r7492, %r3607, %r3610;
	st.local.v2.u32 	[%rd384+-96], {%r7493, %r7492};
	and.b32  	%r3611, %r3575, %r3604;
	ld.local.v2.u32 	{%r3612, %r3613}, [%rd384+-88];
	or.b32  	%r7491, %r3612, %r3611;
	and.b32  	%r3616, %r3576, %r3604;
	or.b32  	%r7490, %r3613, %r3616;
	st.local.v2.u32 	[%rd384+-88], {%r7491, %r7490};
	setp.eq.s32	%p31, %r3577, 3;
	selp.b32	%r3617, -2139062144, 0, %p31;
	and.b32  	%r3618, %r3573, %r3617;
	ld.local.v2.u32 	{%r3619, %r3620}, [%rd384+-80];
	or.b32  	%r7489, %r3619, %r3618;
	and.b32  	%r3623, %r3574, %r3617;
	or.b32  	%r7488, %r3620, %r3623;
	st.local.v2.u32 	[%rd384+-80], {%r7489, %r7488};
	and.b32  	%r3624, %r3575, %r3617;
	ld.local.v2.u32 	{%r3625, %r3626}, [%rd384+-72];
	or.b32  	%r7487, %r3625, %r3624;
	and.b32  	%r3629, %r3576, %r3617;
	or.b32  	%r7486, %r3626, %r3629;
	st.local.v2.u32 	[%rd384+-72], {%r7487, %r7486};
	setp.eq.s32	%p32, %r3577, 4;
	selp.b32	%r3630, -2139062144, 0, %p32;
	and.b32  	%r3631, %r3573, %r3630;
	ld.local.v2.u32 	{%r3632, %r3633}, [%rd384+-64];
	or.b32  	%r7485, %r3632, %r3631;
	and.b32  	%r3636, %r3574, %r3630;
	or.b32  	%r7484, %r3633, %r3636;
	st.local.v2.u32 	[%rd384+-64], {%r7485, %r7484};
	and.b32  	%r3637, %r3575, %r3630;
	ld.local.v2.u32 	{%r3638, %r3639}, [%rd384+-56];
	or.b32  	%r7483, %r3638, %r3637;
	and.b32  	%r3642, %r3576, %r3630;
	or.b32  	%r7482, %r3639, %r3642;
	st.local.v2.u32 	[%rd384+-56], {%r7483, %r7482};
	setp.eq.s32	%p33, %r3577, 5;
	selp.b32	%r3643, -2139062144, 0, %p33;
	and.b32  	%r3644, %r3573, %r3643;
	ld.local.v2.u32 	{%r3645, %r3646}, [%rd384+-48];
	or.b32  	%r7481, %r3645, %r3644;
	and.b32  	%r3649, %r3574, %r3643;
	or.b32  	%r7480, %r3646, %r3649;
	st.local.v2.u32 	[%rd384+-48], {%r7481, %r7480};
	and.b32  	%r3650, %r3575, %r3643;
	ld.local.v2.u32 	{%r3651, %r3652}, [%rd384+-40];
	or.b32  	%r7479, %r3651, %r3650;
	and.b32  	%r3655, %r3576, %r3643;
	or.b32  	%r7478, %r3652, %r3655;
	st.local.v2.u32 	[%rd384+-40], {%r7479, %r7478};
	setp.eq.s32	%p34, %r3577, 6;
	selp.b32	%r3656, -2139062144, 0, %p34;
	and.b32  	%r3657, %r3573, %r3656;
	ld.local.v2.u32 	{%r3658, %r3659}, [%rd384+-32];
	or.b32  	%r7477, %r3658, %r3657;
	and.b32  	%r3662, %r3574, %r3656;
	or.b32  	%r7476, %r3659, %r3662;
	st.local.v2.u32 	[%rd384+-32], {%r7477, %r7476};
	and.b32  	%r3663, %r3575, %r3656;
	ld.local.v2.u32 	{%r3664, %r3665}, [%rd384+-24];
	or.b32  	%r7475, %r3664, %r3663;
	and.b32  	%r3668, %r3576, %r3656;
	or.b32  	%r7474, %r3665, %r3668;
	st.local.v2.u32 	[%rd384+-24], {%r7475, %r7474};
	setp.eq.s32	%p35, %r3577, 7;
	selp.b32	%r3669, -2139062144, 0, %p35;
	and.b32  	%r3670, %r3573, %r3669;
	ld.local.v2.u32 	{%r3671, %r3672}, [%rd384+-16];
	or.b32  	%r7473, %r3671, %r3670;
	and.b32  	%r3675, %r3574, %r3669;
	or.b32  	%r7472, %r3672, %r3675;
	st.local.v2.u32 	[%rd384+-16], {%r7473, %r7472};
	and.b32  	%r3676, %r3575, %r3669;
	ld.local.v2.u32 	{%r3677, %r3678}, [%rd384+-8];
	or.b32  	%r286, %r3677, %r3676;
	and.b32  	%r3681, %r3576, %r3669;
	or.b32  	%r287, %r3678, %r3681;
	st.local.v2.u32 	[%rd384+-8], {%r286, %r287};
	ld.local.u64 	%rd9780, [%rd384+-192];
	ld.local.u64 	%rd9779, [%rd384+-184];
	ld.local.u64 	%rd9778, [%rd384+-176];
	ld.local.u64 	%rd9777, [%rd384+-168];
	ld.local.u64 	%rd9776, [%rd384+-160];
	ld.local.u64 	%rd9775, [%rd384+-152];
	ld.local.u64 	%rd9774, [%rd384+-144];
	ld.local.u64 	%rd9773, [%rd384+-136];
	setp.lt.u32	%p36, %r3567, 112;
	@%p36 bra 	BB3_28;

	mov.b64	%rd9765, {%r7500, %r7501};
	mov.b64	%rd9766, {%r7498, %r7499};
	mov.b64	%rd9767, {%r7496, %r7497};
	mov.b64	%rd9768, {%r7494, %r7495};
	mov.b64	%rd9769, {%r7492, %r7493};
	mov.b64	%rd9770, {%r7490, %r7491};
	mov.b64	%rd9771, {%r7488, %r7489};
	mov.b64	%rd9772, {%r7486, %r7487};
	mov.b64	%rd9756, {%r7484, %r7485};
	mov.b64	%rd9755, {%r7482, %r7483};
	mov.b64	%rd9754, {%r7480, %r7481};
	mov.b64	%rd9753, {%r7478, %r7479};
	mov.b64	%rd9752, {%r7476, %r7477};
	mov.b64	%rd9751, {%r7474, %r7475};
	mov.b64	%rd9750, {%r7472, %r7473};
	mov.b64	%rd9749, {%r287, %r286};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd9776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd9776;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 18;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 18;
	mov.b64 	%rd4741, {%r3686, %r3685};
	shf.r.wrap.b32 	%r3687, %r3684, %r3683, 14;
	shf.r.wrap.b32 	%r3688, %r3683, %r3684, 14;
	mov.b64 	%rd4742, {%r3688, %r3687};
	xor.b64  	%rd4743, %rd4741, %rd4742;
	shf.l.wrap.b32 	%r3689, %r3683, %r3684, 23;
	shf.l.wrap.b32 	%r3690, %r3684, %r3683, 23;
	mov.b64 	%rd4744, {%r3690, %r3689};
	xor.b64  	%rd4745, %rd4743, %rd4744;
	xor.b64  	%rd4746, %rd9774, %rd9775;
	and.b64  	%rd4747, %rd4746, %rd9776;
	xor.b64  	%rd4748, %rd4747, %rd9774;
	add.s64 	%rd4749, %rd4748, %rd9773;
	add.s64 	%rd4750, %rd4749, %rd9765;
	add.s64 	%rd4751, %rd4750, %rd9722;
	add.s64 	%rd4752, %rd4751, %rd4745;
	add.s64 	%rd4753, %rd4752, %rd9777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd9780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3692,%dummy}, %rd9780;
	}
	shf.l.wrap.b32 	%r3693, %r3692, %r3691, 30;
	shf.l.wrap.b32 	%r3694, %r3691, %r3692, 30;
	mov.b64 	%rd4754, {%r3694, %r3693};
	shf.r.wrap.b32 	%r3695, %r3691, %r3692, 28;
	shf.r.wrap.b32 	%r3696, %r3692, %r3691, 28;
	mov.b64 	%rd4755, {%r3696, %r3695};
	xor.b64  	%rd4756, %rd4754, %rd4755;
	shf.l.wrap.b32 	%r3697, %r3692, %r3691, 25;
	shf.l.wrap.b32 	%r3698, %r3691, %r3692, 25;
	mov.b64 	%rd4757, {%r3698, %r3697};
	xor.b64  	%rd4758, %rd4756, %rd4757;
	xor.b64  	%rd4759, %rd9779, %rd9780;
	and.b64  	%rd4760, %rd9778, %rd4759;
	and.b64  	%rd4761, %rd9779, %rd9780;
	or.b64  	%rd4762, %rd4760, %rd4761;
	add.s64 	%rd4763, %rd4752, %rd4762;
	add.s64 	%rd4764, %rd4763, %rd4758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3699,%dummy}, %rd4753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3700}, %rd4753;
	}
	shf.r.wrap.b32 	%r3701, %r3700, %r3699, 14;
	shf.r.wrap.b32 	%r3702, %r3699, %r3700, 14;
	mov.b64 	%rd4765, {%r3702, %r3701};
	shf.r.wrap.b32 	%r3703, %r3700, %r3699, 18;
	shf.r.wrap.b32 	%r3704, %r3699, %r3700, 18;
	mov.b64 	%rd4766, {%r3704, %r3703};
	xor.b64  	%rd4767, %rd4766, %rd4765;
	shf.l.wrap.b32 	%r3705, %r3699, %r3700, 23;
	shf.l.wrap.b32 	%r3706, %r3700, %r3699, 23;
	mov.b64 	%rd4768, {%r3706, %r3705};
	xor.b64  	%rd4769, %rd4767, %rd4768;
	xor.b64  	%rd4770, %rd9775, %rd9776;
	and.b64  	%rd4771, %rd4753, %rd4770;
	xor.b64  	%rd4772, %rd4771, %rd9775;
	add.s64 	%rd4773, %rd9766, %rd9774;
	add.s64 	%rd4774, %rd4773, %rd9721;
	add.s64 	%rd4775, %rd4774, %rd4772;
	add.s64 	%rd4776, %rd4775, %rd4769;
	add.s64 	%rd4777, %rd4776, %rd9778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd4764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd4764;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 28;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 28;
	mov.b64 	%rd4778, {%r3710, %r3709};
	shf.l.wrap.b32 	%r3711, %r3707, %r3708, 30;
	shf.l.wrap.b32 	%r3712, %r3708, %r3707, 30;
	mov.b64 	%rd4779, {%r3712, %r3711};
	xor.b64  	%rd4780, %rd4779, %rd4778;
	shf.l.wrap.b32 	%r3713, %r3707, %r3708, 25;
	shf.l.wrap.b32 	%r3714, %r3708, %r3707, 25;
	mov.b64 	%rd4781, {%r3714, %r3713};
	xor.b64  	%rd4782, %rd4780, %rd4781;
	and.b64  	%rd4783, %rd4764, %rd9780;
	xor.b64  	%rd4784, %rd4764, %rd9780;
	and.b64  	%rd4785, %rd4784, %rd9779;
	or.b64  	%rd4786, %rd4785, %rd4783;
	add.s64 	%rd4787, %rd4776, %rd4786;
	add.s64 	%rd4788, %rd4787, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3715,%dummy}, %rd4777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3716}, %rd4777;
	}
	shf.r.wrap.b32 	%r3717, %r3716, %r3715, 14;
	shf.r.wrap.b32 	%r3718, %r3715, %r3716, 14;
	mov.b64 	%rd4789, {%r3718, %r3717};
	shf.r.wrap.b32 	%r3719, %r3716, %r3715, 18;
	shf.r.wrap.b32 	%r3720, %r3715, %r3716, 18;
	mov.b64 	%rd4790, {%r3720, %r3719};
	xor.b64  	%rd4791, %rd4790, %rd4789;
	shf.l.wrap.b32 	%r3721, %r3715, %r3716, 23;
	shf.l.wrap.b32 	%r3722, %r3716, %r3715, 23;
	mov.b64 	%rd4792, {%r3722, %r3721};
	xor.b64  	%rd4793, %rd4791, %rd4792;
	xor.b64  	%rd4794, %rd4753, %rd9776;
	and.b64  	%rd4795, %rd4777, %rd4794;
	xor.b64  	%rd4796, %rd4795, %rd9776;
	add.s64 	%rd4797, %rd9767, %rd9775;
	add.s64 	%rd4798, %rd4797, %rd9720;
	add.s64 	%rd4799, %rd4798, %rd4796;
	add.s64 	%rd4800, %rd4799, %rd4793;
	add.s64 	%rd4801, %rd4800, %rd9779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3723,%dummy}, %rd4788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3724}, %rd4788;
	}
	shf.r.wrap.b32 	%r3725, %r3724, %r3723, 28;
	shf.r.wrap.b32 	%r3726, %r3723, %r3724, 28;
	mov.b64 	%rd4802, {%r3726, %r3725};
	shf.l.wrap.b32 	%r3727, %r3723, %r3724, 30;
	shf.l.wrap.b32 	%r3728, %r3724, %r3723, 30;
	mov.b64 	%rd4803, {%r3728, %r3727};
	xor.b64  	%rd4804, %rd4803, %rd4802;
	shf.l.wrap.b32 	%r3729, %r3723, %r3724, 25;
	shf.l.wrap.b32 	%r3730, %r3724, %r3723, 25;
	mov.b64 	%rd4805, {%r3730, %r3729};
	xor.b64  	%rd4806, %rd4804, %rd4805;
	and.b64  	%rd4807, %rd4788, %rd4764;
	xor.b64  	%rd4808, %rd4788, %rd4764;
	and.b64  	%rd4809, %rd4808, %rd9780;
	or.b64  	%rd4810, %rd4809, %rd4807;
	add.s64 	%rd4811, %rd4800, %rd4810;
	add.s64 	%rd4812, %rd4811, %rd4806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3731,%dummy}, %rd4801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3732}, %rd4801;
	}
	shf.r.wrap.b32 	%r3733, %r3732, %r3731, 14;
	shf.r.wrap.b32 	%r3734, %r3731, %r3732, 14;
	mov.b64 	%rd4813, {%r3734, %r3733};
	shf.r.wrap.b32 	%r3735, %r3732, %r3731, 18;
	shf.r.wrap.b32 	%r3736, %r3731, %r3732, 18;
	mov.b64 	%rd4814, {%r3736, %r3735};
	xor.b64  	%rd4815, %rd4814, %rd4813;
	shf.l.wrap.b32 	%r3737, %r3731, %r3732, 23;
	shf.l.wrap.b32 	%r3738, %r3732, %r3731, 23;
	mov.b64 	%rd4816, {%r3738, %r3737};
	xor.b64  	%rd4817, %rd4815, %rd4816;
	xor.b64  	%rd4818, %rd4777, %rd4753;
	and.b64  	%rd4819, %rd4801, %rd4818;
	xor.b64  	%rd4820, %rd4819, %rd4753;
	add.s64 	%rd4821, %rd9768, %rd9776;
	add.s64 	%rd4822, %rd4821, %rd9719;
	add.s64 	%rd4823, %rd4822, %rd4820;
	add.s64 	%rd4824, %rd4823, %rd4817;
	add.s64 	%rd4825, %rd4824, %rd9780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3739,%dummy}, %rd4812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3740}, %rd4812;
	}
	shf.r.wrap.b32 	%r3741, %r3740, %r3739, 28;
	shf.r.wrap.b32 	%r3742, %r3739, %r3740, 28;
	mov.b64 	%rd4826, {%r3742, %r3741};
	shf.l.wrap.b32 	%r3743, %r3739, %r3740, 30;
	shf.l.wrap.b32 	%r3744, %r3740, %r3739, 30;
	mov.b64 	%rd4827, {%r3744, %r3743};
	xor.b64  	%rd4828, %rd4827, %rd4826;
	shf.l.wrap.b32 	%r3745, %r3739, %r3740, 25;
	shf.l.wrap.b32 	%r3746, %r3740, %r3739, 25;
	mov.b64 	%rd4829, {%r3746, %r3745};
	xor.b64  	%rd4830, %rd4828, %rd4829;
	and.b64  	%rd4831, %rd4812, %rd4788;
	xor.b64  	%rd4832, %rd4812, %rd4788;
	and.b64  	%rd4833, %rd4832, %rd4764;
	or.b64  	%rd4834, %rd4833, %rd4831;
	add.s64 	%rd4835, %rd4824, %rd4834;
	add.s64 	%rd4836, %rd4835, %rd4830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3747,%dummy}, %rd4825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3748}, %rd4825;
	}
	shf.r.wrap.b32 	%r3749, %r3748, %r3747, 14;
	shf.r.wrap.b32 	%r3750, %r3747, %r3748, 14;
	mov.b64 	%rd4837, {%r3750, %r3749};
	shf.r.wrap.b32 	%r3751, %r3748, %r3747, 18;
	shf.r.wrap.b32 	%r3752, %r3747, %r3748, 18;
	mov.b64 	%rd4838, {%r3752, %r3751};
	xor.b64  	%rd4839, %rd4838, %rd4837;
	shf.l.wrap.b32 	%r3753, %r3747, %r3748, 23;
	shf.l.wrap.b32 	%r3754, %r3748, %r3747, 23;
	mov.b64 	%rd4840, {%r3754, %r3753};
	xor.b64  	%rd4841, %rd4839, %rd4840;
	xor.b64  	%rd4842, %rd4801, %rd4777;
	and.b64  	%rd4843, %rd4825, %rd4842;
	xor.b64  	%rd4844, %rd4843, %rd4777;
	add.s64 	%rd4845, %rd4753, %rd9769;
	add.s64 	%rd4846, %rd4845, %rd9718;
	add.s64 	%rd4847, %rd4846, %rd4844;
	add.s64 	%rd4848, %rd4847, %rd4841;
	add.s64 	%rd4849, %rd4848, %rd4764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3755,%dummy}, %rd4836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3756}, %rd4836;
	}
	shf.r.wrap.b32 	%r3757, %r3756, %r3755, 28;
	shf.r.wrap.b32 	%r3758, %r3755, %r3756, 28;
	mov.b64 	%rd4850, {%r3758, %r3757};
	shf.l.wrap.b32 	%r3759, %r3755, %r3756, 30;
	shf.l.wrap.b32 	%r3760, %r3756, %r3755, 30;
	mov.b64 	%rd4851, {%r3760, %r3759};
	xor.b64  	%rd4852, %rd4851, %rd4850;
	shf.l.wrap.b32 	%r3761, %r3755, %r3756, 25;
	shf.l.wrap.b32 	%r3762, %r3756, %r3755, 25;
	mov.b64 	%rd4853, {%r3762, %r3761};
	xor.b64  	%rd4854, %rd4852, %rd4853;
	and.b64  	%rd4855, %rd4836, %rd4812;
	xor.b64  	%rd4856, %rd4836, %rd4812;
	and.b64  	%rd4857, %rd4856, %rd4788;
	or.b64  	%rd4858, %rd4857, %rd4855;
	add.s64 	%rd4859, %rd4848, %rd4858;
	add.s64 	%rd4860, %rd4859, %rd4854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3763,%dummy}, %rd4849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3764}, %rd4849;
	}
	shf.r.wrap.b32 	%r3765, %r3764, %r3763, 14;
	shf.r.wrap.b32 	%r3766, %r3763, %r3764, 14;
	mov.b64 	%rd4861, {%r3766, %r3765};
	shf.r.wrap.b32 	%r3767, %r3764, %r3763, 18;
	shf.r.wrap.b32 	%r3768, %r3763, %r3764, 18;
	mov.b64 	%rd4862, {%r3768, %r3767};
	xor.b64  	%rd4863, %rd4862, %rd4861;
	shf.l.wrap.b32 	%r3769, %r3763, %r3764, 23;
	shf.l.wrap.b32 	%r3770, %r3764, %r3763, 23;
	mov.b64 	%rd4864, {%r3770, %r3769};
	xor.b64  	%rd4865, %rd4863, %rd4864;
	xor.b64  	%rd4866, %rd4825, %rd4801;
	and.b64  	%rd4867, %rd4849, %rd4866;
	xor.b64  	%rd4868, %rd4867, %rd4801;
	add.s64 	%rd4869, %rd4777, %rd9770;
	add.s64 	%rd4870, %rd4869, %rd9717;
	add.s64 	%rd4871, %rd4870, %rd4868;
	add.s64 	%rd4872, %rd4871, %rd4865;
	add.s64 	%rd4873, %rd4872, %rd4788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3771,%dummy}, %rd4860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3772}, %rd4860;
	}
	shf.r.wrap.b32 	%r3773, %r3772, %r3771, 28;
	shf.r.wrap.b32 	%r3774, %r3771, %r3772, 28;
	mov.b64 	%rd4874, {%r3774, %r3773};
	shf.l.wrap.b32 	%r3775, %r3771, %r3772, 30;
	shf.l.wrap.b32 	%r3776, %r3772, %r3771, 30;
	mov.b64 	%rd4875, {%r3776, %r3775};
	xor.b64  	%rd4876, %rd4875, %rd4874;
	shf.l.wrap.b32 	%r3777, %r3771, %r3772, 25;
	shf.l.wrap.b32 	%r3778, %r3772, %r3771, 25;
	mov.b64 	%rd4877, {%r3778, %r3777};
	xor.b64  	%rd4878, %rd4876, %rd4877;
	and.b64  	%rd4879, %rd4860, %rd4836;
	xor.b64  	%rd4880, %rd4860, %rd4836;
	and.b64  	%rd4881, %rd4880, %rd4812;
	or.b64  	%rd4882, %rd4881, %rd4879;
	add.s64 	%rd4883, %rd4872, %rd4882;
	add.s64 	%rd4884, %rd4883, %rd4878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd4873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd4873;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 14;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 14;
	mov.b64 	%rd4885, {%r3782, %r3781};
	shf.r.wrap.b32 	%r3783, %r3780, %r3779, 18;
	shf.r.wrap.b32 	%r3784, %r3779, %r3780, 18;
	mov.b64 	%rd4886, {%r3784, %r3783};
	xor.b64  	%rd4887, %rd4886, %rd4885;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 23;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 23;
	mov.b64 	%rd4888, {%r3786, %r3785};
	xor.b64  	%rd4889, %rd4887, %rd4888;
	xor.b64  	%rd4890, %rd4849, %rd4825;
	and.b64  	%rd4891, %rd4873, %rd4890;
	xor.b64  	%rd4892, %rd4891, %rd4825;
	add.s64 	%rd4893, %rd4801, %rd9771;
	add.s64 	%rd4894, %rd4893, %rd9716;
	add.s64 	%rd4895, %rd4894, %rd4892;
	add.s64 	%rd4896, %rd4895, %rd4889;
	add.s64 	%rd4897, %rd4896, %rd4812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd4884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd4884;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 28;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 28;
	mov.b64 	%rd4898, {%r3790, %r3789};
	shf.l.wrap.b32 	%r3791, %r3787, %r3788, 30;
	shf.l.wrap.b32 	%r3792, %r3788, %r3787, 30;
	mov.b64 	%rd4899, {%r3792, %r3791};
	xor.b64  	%rd4900, %rd4899, %rd4898;
	shf.l.wrap.b32 	%r3793, %r3787, %r3788, 25;
	shf.l.wrap.b32 	%r3794, %r3788, %r3787, 25;
	mov.b64 	%rd4901, {%r3794, %r3793};
	xor.b64  	%rd4902, %rd4900, %rd4901;
	and.b64  	%rd4903, %rd4884, %rd4860;
	xor.b64  	%rd4904, %rd4884, %rd4860;
	and.b64  	%rd4905, %rd4904, %rd4836;
	or.b64  	%rd4906, %rd4905, %rd4903;
	add.s64 	%rd4907, %rd4896, %rd4906;
	add.s64 	%rd4908, %rd4907, %rd4902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3795,%dummy}, %rd4897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3796}, %rd4897;
	}
	shf.r.wrap.b32 	%r3797, %r3796, %r3795, 14;
	shf.r.wrap.b32 	%r3798, %r3795, %r3796, 14;
	mov.b64 	%rd4909, {%r3798, %r3797};
	shf.r.wrap.b32 	%r3799, %r3796, %r3795, 18;
	shf.r.wrap.b32 	%r3800, %r3795, %r3796, 18;
	mov.b64 	%rd4910, {%r3800, %r3799};
	xor.b64  	%rd4911, %rd4910, %rd4909;
	shf.l.wrap.b32 	%r3801, %r3795, %r3796, 23;
	shf.l.wrap.b32 	%r3802, %r3796, %r3795, 23;
	mov.b64 	%rd4912, {%r3802, %r3801};
	xor.b64  	%rd4913, %rd4911, %rd4912;
	xor.b64  	%rd4914, %rd4873, %rd4849;
	and.b64  	%rd4915, %rd4897, %rd4914;
	xor.b64  	%rd4916, %rd4915, %rd4849;
	add.s64 	%rd4917, %rd4825, %rd9772;
	add.s64 	%rd4918, %rd4917, %rd9715;
	add.s64 	%rd4919, %rd4918, %rd4916;
	add.s64 	%rd4920, %rd4919, %rd4913;
	add.s64 	%rd4921, %rd4920, %rd4836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3803,%dummy}, %rd4908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3804}, %rd4908;
	}
	shf.r.wrap.b32 	%r3805, %r3804, %r3803, 28;
	shf.r.wrap.b32 	%r3806, %r3803, %r3804, 28;
	mov.b64 	%rd4922, {%r3806, %r3805};
	shf.l.wrap.b32 	%r3807, %r3803, %r3804, 30;
	shf.l.wrap.b32 	%r3808, %r3804, %r3803, 30;
	mov.b64 	%rd4923, {%r3808, %r3807};
	xor.b64  	%rd4924, %rd4923, %rd4922;
	shf.l.wrap.b32 	%r3809, %r3803, %r3804, 25;
	shf.l.wrap.b32 	%r3810, %r3804, %r3803, 25;
	mov.b64 	%rd4925, {%r3810, %r3809};
	xor.b64  	%rd4926, %rd4924, %rd4925;
	and.b64  	%rd4927, %rd4908, %rd4884;
	xor.b64  	%rd4928, %rd4908, %rd4884;
	and.b64  	%rd4929, %rd4928, %rd4860;
	or.b64  	%rd4930, %rd4929, %rd4927;
	add.s64 	%rd4931, %rd4920, %rd4930;
	add.s64 	%rd4932, %rd4931, %rd4926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3811,%dummy}, %rd4921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3812}, %rd4921;
	}
	shf.r.wrap.b32 	%r3813, %r3812, %r3811, 14;
	shf.r.wrap.b32 	%r3814, %r3811, %r3812, 14;
	mov.b64 	%rd4933, {%r3814, %r3813};
	shf.r.wrap.b32 	%r3815, %r3812, %r3811, 18;
	shf.r.wrap.b32 	%r3816, %r3811, %r3812, 18;
	mov.b64 	%rd4934, {%r3816, %r3815};
	xor.b64  	%rd4935, %rd4934, %rd4933;
	shf.l.wrap.b32 	%r3817, %r3811, %r3812, 23;
	shf.l.wrap.b32 	%r3818, %r3812, %r3811, 23;
	mov.b64 	%rd4936, {%r3818, %r3817};
	xor.b64  	%rd4937, %rd4935, %rd4936;
	xor.b64  	%rd4938, %rd4897, %rd4873;
	and.b64  	%rd4939, %rd4921, %rd4938;
	xor.b64  	%rd4940, %rd4939, %rd4873;
	add.s64 	%rd4941, %rd4849, %rd9756;
	add.s64 	%rd4942, %rd4941, %rd9714;
	add.s64 	%rd4943, %rd4942, %rd4940;
	add.s64 	%rd4944, %rd4943, %rd4937;
	add.s64 	%rd4945, %rd4944, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3819,%dummy}, %rd4932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3820}, %rd4932;
	}
	shf.r.wrap.b32 	%r3821, %r3820, %r3819, 28;
	shf.r.wrap.b32 	%r3822, %r3819, %r3820, 28;
	mov.b64 	%rd4946, {%r3822, %r3821};
	shf.l.wrap.b32 	%r3823, %r3819, %r3820, 30;
	shf.l.wrap.b32 	%r3824, %r3820, %r3819, 30;
	mov.b64 	%rd4947, {%r3824, %r3823};
	xor.b64  	%rd4948, %rd4947, %rd4946;
	shf.l.wrap.b32 	%r3825, %r3819, %r3820, 25;
	shf.l.wrap.b32 	%r3826, %r3820, %r3819, 25;
	mov.b64 	%rd4949, {%r3826, %r3825};
	xor.b64  	%rd4950, %rd4948, %rd4949;
	and.b64  	%rd4951, %rd4932, %rd4908;
	xor.b64  	%rd4952, %rd4932, %rd4908;
	and.b64  	%rd4953, %rd4952, %rd4884;
	or.b64  	%rd4954, %rd4953, %rd4951;
	add.s64 	%rd4955, %rd4944, %rd4954;
	add.s64 	%rd4956, %rd4955, %rd4950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3827,%dummy}, %rd4945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3828}, %rd4945;
	}
	shf.r.wrap.b32 	%r3829, %r3828, %r3827, 14;
	shf.r.wrap.b32 	%r3830, %r3827, %r3828, 14;
	mov.b64 	%rd4957, {%r3830, %r3829};
	shf.r.wrap.b32 	%r3831, %r3828, %r3827, 18;
	shf.r.wrap.b32 	%r3832, %r3827, %r3828, 18;
	mov.b64 	%rd4958, {%r3832, %r3831};
	xor.b64  	%rd4959, %rd4958, %rd4957;
	shf.l.wrap.b32 	%r3833, %r3827, %r3828, 23;
	shf.l.wrap.b32 	%r3834, %r3828, %r3827, 23;
	mov.b64 	%rd4960, {%r3834, %r3833};
	xor.b64  	%rd4961, %rd4959, %rd4960;
	xor.b64  	%rd4962, %rd4921, %rd4897;
	and.b64  	%rd4963, %rd4945, %rd4962;
	xor.b64  	%rd4964, %rd4963, %rd4897;
	add.s64 	%rd4965, %rd4873, %rd9755;
	add.s64 	%rd4966, %rd4965, %rd9713;
	add.s64 	%rd4967, %rd4966, %rd4964;
	add.s64 	%rd4968, %rd4967, %rd4961;
	add.s64 	%rd4969, %rd4968, %rd4884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3835,%dummy}, %rd4956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3836}, %rd4956;
	}
	shf.r.wrap.b32 	%r3837, %r3836, %r3835, 28;
	shf.r.wrap.b32 	%r3838, %r3835, %r3836, 28;
	mov.b64 	%rd4970, {%r3838, %r3837};
	shf.l.wrap.b32 	%r3839, %r3835, %r3836, 30;
	shf.l.wrap.b32 	%r3840, %r3836, %r3835, 30;
	mov.b64 	%rd4971, {%r3840, %r3839};
	xor.b64  	%rd4972, %rd4971, %rd4970;
	shf.l.wrap.b32 	%r3841, %r3835, %r3836, 25;
	shf.l.wrap.b32 	%r3842, %r3836, %r3835, 25;
	mov.b64 	%rd4973, {%r3842, %r3841};
	xor.b64  	%rd4974, %rd4972, %rd4973;
	and.b64  	%rd4975, %rd4956, %rd4932;
	xor.b64  	%rd4976, %rd4956, %rd4932;
	and.b64  	%rd4977, %rd4976, %rd4908;
	or.b64  	%rd4978, %rd4977, %rd4975;
	add.s64 	%rd4979, %rd4968, %rd4978;
	add.s64 	%rd4980, %rd4979, %rd4974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3843,%dummy}, %rd4969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3844}, %rd4969;
	}
	shf.r.wrap.b32 	%r3845, %r3844, %r3843, 14;
	shf.r.wrap.b32 	%r3846, %r3843, %r3844, 14;
	mov.b64 	%rd4981, {%r3846, %r3845};
	shf.r.wrap.b32 	%r3847, %r3844, %r3843, 18;
	shf.r.wrap.b32 	%r3848, %r3843, %r3844, 18;
	mov.b64 	%rd4982, {%r3848, %r3847};
	xor.b64  	%rd4983, %rd4982, %rd4981;
	shf.l.wrap.b32 	%r3849, %r3843, %r3844, 23;
	shf.l.wrap.b32 	%r3850, %r3844, %r3843, 23;
	mov.b64 	%rd4984, {%r3850, %r3849};
	xor.b64  	%rd4985, %rd4983, %rd4984;
	xor.b64  	%rd4986, %rd4945, %rd4921;
	and.b64  	%rd4987, %rd4969, %rd4986;
	xor.b64  	%rd4988, %rd4987, %rd4921;
	add.s64 	%rd4989, %rd4897, %rd9754;
	add.s64 	%rd4990, %rd4989, %rd9712;
	add.s64 	%rd4991, %rd4990, %rd4988;
	add.s64 	%rd4992, %rd4991, %rd4985;
	add.s64 	%rd4993, %rd4992, %rd4908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3851,%dummy}, %rd4980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3852}, %rd4980;
	}
	shf.r.wrap.b32 	%r3853, %r3852, %r3851, 28;
	shf.r.wrap.b32 	%r3854, %r3851, %r3852, 28;
	mov.b64 	%rd4994, {%r3854, %r3853};
	shf.l.wrap.b32 	%r3855, %r3851, %r3852, 30;
	shf.l.wrap.b32 	%r3856, %r3852, %r3851, 30;
	mov.b64 	%rd4995, {%r3856, %r3855};
	xor.b64  	%rd4996, %rd4995, %rd4994;
	shf.l.wrap.b32 	%r3857, %r3851, %r3852, 25;
	shf.l.wrap.b32 	%r3858, %r3852, %r3851, 25;
	mov.b64 	%rd4997, {%r3858, %r3857};
	xor.b64  	%rd4998, %rd4996, %rd4997;
	and.b64  	%rd4999, %rd4980, %rd4956;
	xor.b64  	%rd5000, %rd4980, %rd4956;
	and.b64  	%rd5001, %rd5000, %rd4932;
	or.b64  	%rd5002, %rd5001, %rd4999;
	add.s64 	%rd5003, %rd4992, %rd5002;
	add.s64 	%rd5004, %rd5003, %rd4998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3859,%dummy}, %rd4993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3860}, %rd4993;
	}
	shf.r.wrap.b32 	%r3861, %r3860, %r3859, 14;
	shf.r.wrap.b32 	%r3862, %r3859, %r3860, 14;
	mov.b64 	%rd5005, {%r3862, %r3861};
	shf.r.wrap.b32 	%r3863, %r3860, %r3859, 18;
	shf.r.wrap.b32 	%r3864, %r3859, %r3860, 18;
	mov.b64 	%rd5006, {%r3864, %r3863};
	xor.b64  	%rd5007, %rd5006, %rd5005;
	shf.l.wrap.b32 	%r3865, %r3859, %r3860, 23;
	shf.l.wrap.b32 	%r3866, %r3860, %r3859, 23;
	mov.b64 	%rd5008, {%r3866, %r3865};
	xor.b64  	%rd5009, %rd5007, %rd5008;
	xor.b64  	%rd5010, %rd4969, %rd4945;
	and.b64  	%rd5011, %rd4993, %rd5010;
	xor.b64  	%rd5012, %rd5011, %rd4945;
	add.s64 	%rd5013, %rd4921, %rd9753;
	add.s64 	%rd5014, %rd5013, %rd9711;
	add.s64 	%rd5015, %rd5014, %rd5012;
	add.s64 	%rd5016, %rd5015, %rd5009;
	add.s64 	%rd5017, %rd5016, %rd4932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3867,%dummy}, %rd5004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3868}, %rd5004;
	}
	shf.r.wrap.b32 	%r3869, %r3868, %r3867, 28;
	shf.r.wrap.b32 	%r3870, %r3867, %r3868, 28;
	mov.b64 	%rd5018, {%r3870, %r3869};
	shf.l.wrap.b32 	%r3871, %r3867, %r3868, 30;
	shf.l.wrap.b32 	%r3872, %r3868, %r3867, 30;
	mov.b64 	%rd5019, {%r3872, %r3871};
	xor.b64  	%rd5020, %rd5019, %rd5018;
	shf.l.wrap.b32 	%r3873, %r3867, %r3868, 25;
	shf.l.wrap.b32 	%r3874, %r3868, %r3867, 25;
	mov.b64 	%rd5021, {%r3874, %r3873};
	xor.b64  	%rd5022, %rd5020, %rd5021;
	and.b64  	%rd5023, %rd5004, %rd4980;
	xor.b64  	%rd5024, %rd5004, %rd4980;
	and.b64  	%rd5025, %rd5024, %rd4956;
	or.b64  	%rd5026, %rd5025, %rd5023;
	add.s64 	%rd5027, %rd5016, %rd5026;
	add.s64 	%rd5028, %rd5027, %rd5022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd5017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd5017;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 14;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 14;
	mov.b64 	%rd5029, {%r3878, %r3877};
	shf.r.wrap.b32 	%r3879, %r3876, %r3875, 18;
	shf.r.wrap.b32 	%r3880, %r3875, %r3876, 18;
	mov.b64 	%rd5030, {%r3880, %r3879};
	xor.b64  	%rd5031, %rd5030, %rd5029;
	shf.l.wrap.b32 	%r3881, %r3875, %r3876, 23;
	shf.l.wrap.b32 	%r3882, %r3876, %r3875, 23;
	mov.b64 	%rd5032, {%r3882, %r3881};
	xor.b64  	%rd5033, %rd5031, %rd5032;
	xor.b64  	%rd5034, %rd4993, %rd4969;
	and.b64  	%rd5035, %rd5017, %rd5034;
	xor.b64  	%rd5036, %rd5035, %rd4969;
	add.s64 	%rd5037, %rd4945, %rd9752;
	add.s64 	%rd5038, %rd5037, %rd9710;
	add.s64 	%rd5039, %rd5038, %rd5036;
	add.s64 	%rd5040, %rd5039, %rd5033;
	add.s64 	%rd9764, %rd5040, %rd4956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd5028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd5028;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 28;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 28;
	mov.b64 	%rd5041, {%r3886, %r3885};
	shf.l.wrap.b32 	%r3887, %r3883, %r3884, 30;
	shf.l.wrap.b32 	%r3888, %r3884, %r3883, 30;
	mov.b64 	%rd5042, {%r3888, %r3887};
	xor.b64  	%rd5043, %rd5042, %rd5041;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 25;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 25;
	mov.b64 	%rd5044, {%r3890, %r3889};
	xor.b64  	%rd5045, %rd5043, %rd5044;
	and.b64  	%rd5046, %rd5028, %rd5004;
	xor.b64  	%rd5047, %rd5028, %rd5004;
	and.b64  	%rd5048, %rd5047, %rd4980;
	or.b64  	%rd5049, %rd5048, %rd5046;
	add.s64 	%rd5050, %rd5040, %rd5049;
	add.s64 	%rd9760, %rd5050, %rd5045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd9764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd9764;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 14;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 14;
	mov.b64 	%rd5051, {%r3894, %r3893};
	shf.r.wrap.b32 	%r3895, %r3892, %r3891, 18;
	shf.r.wrap.b32 	%r3896, %r3891, %r3892, 18;
	mov.b64 	%rd5052, {%r3896, %r3895};
	xor.b64  	%rd5053, %rd5052, %rd5051;
	shf.l.wrap.b32 	%r3897, %r3891, %r3892, 23;
	shf.l.wrap.b32 	%r3898, %r3892, %r3891, 23;
	mov.b64 	%rd5054, {%r3898, %r3897};
	xor.b64  	%rd5055, %rd5053, %rd5054;
	xor.b64  	%rd5056, %rd5017, %rd4993;
	and.b64  	%rd5057, %rd9764, %rd5056;
	xor.b64  	%rd5058, %rd5057, %rd4993;
	add.s64 	%rd5059, %rd4969, %rd9751;
	add.s64 	%rd5060, %rd5059, %rd9709;
	add.s64 	%rd5061, %rd5060, %rd5058;
	add.s64 	%rd5062, %rd5061, %rd5055;
	add.s64 	%rd9763, %rd5062, %rd4980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3899,%dummy}, %rd9760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3900}, %rd9760;
	}
	shf.r.wrap.b32 	%r3901, %r3900, %r3899, 28;
	shf.r.wrap.b32 	%r3902, %r3899, %r3900, 28;
	mov.b64 	%rd5063, {%r3902, %r3901};
	shf.l.wrap.b32 	%r3903, %r3899, %r3900, 30;
	shf.l.wrap.b32 	%r3904, %r3900, %r3899, 30;
	mov.b64 	%rd5064, {%r3904, %r3903};
	xor.b64  	%rd5065, %rd5064, %rd5063;
	shf.l.wrap.b32 	%r3905, %r3899, %r3900, 25;
	shf.l.wrap.b32 	%r3906, %r3900, %r3899, 25;
	mov.b64 	%rd5066, {%r3906, %r3905};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	and.b64  	%rd5068, %rd9760, %rd5028;
	xor.b64  	%rd5069, %rd9760, %rd5028;
	and.b64  	%rd5070, %rd5069, %rd5004;
	or.b64  	%rd5071, %rd5070, %rd5068;
	add.s64 	%rd5072, %rd5062, %rd5071;
	add.s64 	%rd9759, %rd5072, %rd5067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3907,%dummy}, %rd9763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3908}, %rd9763;
	}
	shf.r.wrap.b32 	%r3909, %r3908, %r3907, 14;
	shf.r.wrap.b32 	%r3910, %r3907, %r3908, 14;
	mov.b64 	%rd5073, {%r3910, %r3909};
	shf.r.wrap.b32 	%r3911, %r3908, %r3907, 18;
	shf.r.wrap.b32 	%r3912, %r3907, %r3908, 18;
	mov.b64 	%rd5074, {%r3912, %r3911};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.l.wrap.b32 	%r3913, %r3907, %r3908, 23;
	shf.l.wrap.b32 	%r3914, %r3908, %r3907, 23;
	mov.b64 	%rd5076, {%r3914, %r3913};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	xor.b64  	%rd5078, %rd9764, %rd5017;
	and.b64  	%rd5079, %rd9763, %rd5078;
	xor.b64  	%rd5080, %rd5079, %rd5017;
	add.s64 	%rd5081, %rd4993, %rd9750;
	add.s64 	%rd5082, %rd5081, %rd9708;
	add.s64 	%rd5083, %rd5082, %rd5080;
	add.s64 	%rd5084, %rd5083, %rd5077;
	add.s64 	%rd9762, %rd5084, %rd5004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3915,%dummy}, %rd9759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3916}, %rd9759;
	}
	shf.r.wrap.b32 	%r3917, %r3916, %r3915, 28;
	shf.r.wrap.b32 	%r3918, %r3915, %r3916, 28;
	mov.b64 	%rd5085, {%r3918, %r3917};
	shf.l.wrap.b32 	%r3919, %r3915, %r3916, 30;
	shf.l.wrap.b32 	%r3920, %r3916, %r3915, 30;
	mov.b64 	%rd5086, {%r3920, %r3919};
	xor.b64  	%rd5087, %rd5086, %rd5085;
	shf.l.wrap.b32 	%r3921, %r3915, %r3916, 25;
	shf.l.wrap.b32 	%r3922, %r3916, %r3915, 25;
	mov.b64 	%rd5088, {%r3922, %r3921};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	and.b64  	%rd5090, %rd9759, %rd9760;
	xor.b64  	%rd5091, %rd9759, %rd9760;
	and.b64  	%rd5092, %rd5091, %rd5028;
	or.b64  	%rd5093, %rd5092, %rd5090;
	add.s64 	%rd5094, %rd5084, %rd5093;
	add.s64 	%rd9758, %rd5094, %rd5089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3923,%dummy}, %rd9762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3924}, %rd9762;
	}
	shf.r.wrap.b32 	%r3925, %r3924, %r3923, 14;
	shf.r.wrap.b32 	%r3926, %r3923, %r3924, 14;
	mov.b64 	%rd5095, {%r3926, %r3925};
	shf.r.wrap.b32 	%r3927, %r3924, %r3923, 18;
	shf.r.wrap.b32 	%r3928, %r3923, %r3924, 18;
	mov.b64 	%rd5096, {%r3928, %r3927};
	xor.b64  	%rd5097, %rd5096, %rd5095;
	shf.l.wrap.b32 	%r3929, %r3923, %r3924, 23;
	shf.l.wrap.b32 	%r3930, %r3924, %r3923, 23;
	mov.b64 	%rd5098, {%r3930, %r3929};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	xor.b64  	%rd5100, %rd9763, %rd9764;
	and.b64  	%rd5101, %rd9762, %rd5100;
	xor.b64  	%rd5102, %rd5101, %rd9764;
	add.s64 	%rd5103, %rd5017, %rd9749;
	add.s64 	%rd5104, %rd5103, %rd9707;
	add.s64 	%rd5105, %rd5104, %rd5102;
	add.s64 	%rd5106, %rd5105, %rd5099;
	add.s64 	%rd9761, %rd5106, %rd5028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3931,%dummy}, %rd9758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3932}, %rd9758;
	}
	shf.r.wrap.b32 	%r3933, %r3932, %r3931, 28;
	shf.r.wrap.b32 	%r3934, %r3931, %r3932, 28;
	mov.b64 	%rd5107, {%r3934, %r3933};
	shf.l.wrap.b32 	%r3935, %r3931, %r3932, 30;
	shf.l.wrap.b32 	%r3936, %r3932, %r3931, 30;
	mov.b64 	%rd5108, {%r3936, %r3935};
	xor.b64  	%rd5109, %rd5108, %rd5107;
	shf.l.wrap.b32 	%r3937, %r3931, %r3932, 25;
	shf.l.wrap.b32 	%r3938, %r3932, %r3931, 25;
	mov.b64 	%rd5110, {%r3938, %r3937};
	xor.b64  	%rd5111, %rd5109, %rd5110;
	and.b64  	%rd5112, %rd9758, %rd9759;
	xor.b64  	%rd5113, %rd9758, %rd9759;
	and.b64  	%rd5114, %rd5113, %rd9760;
	or.b64  	%rd5115, %rd5114, %rd5112;
	add.s64 	%rd5116, %rd5106, %rd5115;
	add.s64 	%rd9757, %rd5116, %rd5111;
	mov.u32 	%r7471, 16;

BB3_26:
	shr.u64 	%rd5117, %rd9750, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3939,%dummy}, %rd9750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3940}, %rd9750;
	}
	shf.r.wrap.b32 	%r3941, %r3940, %r3939, 19;
	shf.r.wrap.b32 	%r3942, %r3939, %r3940, 19;
	mov.b64 	%rd5118, {%r3942, %r3941};
	xor.b64  	%rd5119, %rd5118, %rd5117;
	shf.l.wrap.b32 	%r3943, %r3939, %r3940, 3;
	shf.l.wrap.b32 	%r3944, %r3940, %r3939, 3;
	mov.b64 	%rd5120, {%r3944, %r3943};
	xor.b64  	%rd5121, %rd5119, %rd5120;
	shr.u64 	%rd5122, %rd9766, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3945,%dummy}, %rd9766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3946}, %rd9766;
	}
	shf.r.wrap.b32 	%r3947, %r3946, %r3945, 1;
	shf.r.wrap.b32 	%r3948, %r3945, %r3946, 1;
	mov.b64 	%rd5123, {%r3948, %r3947};
	xor.b64  	%rd5124, %rd5123, %rd5122;
	shf.r.wrap.b32 	%r3949, %r3946, %r3945, 8;
	shf.r.wrap.b32 	%r3950, %r3945, %r3946, 8;
	mov.b64 	%rd5125, {%r3950, %r3949};
	xor.b64  	%rd5126, %rd5124, %rd5125;
	add.s64 	%rd5127, %rd9755, %rd9765;
	add.s64 	%rd5128, %rd5127, %rd5121;
	add.s64 	%rd9765, %rd5128, %rd5126;
	shr.u64 	%rd5129, %rd9749, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3951,%dummy}, %rd9749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3952}, %rd9749;
	}
	shf.r.wrap.b32 	%r3953, %r3952, %r3951, 19;
	shf.r.wrap.b32 	%r3954, %r3951, %r3952, 19;
	mov.b64 	%rd5130, {%r3954, %r3953};
	xor.b64  	%rd5131, %rd5130, %rd5129;
	shf.l.wrap.b32 	%r3955, %r3951, %r3952, 3;
	shf.l.wrap.b32 	%r3956, %r3952, %r3951, 3;
	mov.b64 	%rd5132, {%r3956, %r3955};
	xor.b64  	%rd5133, %rd5131, %rd5132;
	shr.u64 	%rd5134, %rd9767, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd9767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd9767;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 1;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 1;
	mov.b64 	%rd5135, {%r3960, %r3959};
	xor.b64  	%rd5136, %rd5135, %rd5134;
	shf.r.wrap.b32 	%r3961, %r3958, %r3957, 8;
	shf.r.wrap.b32 	%r3962, %r3957, %r3958, 8;
	mov.b64 	%rd5137, {%r3962, %r3961};
	xor.b64  	%rd5138, %rd5136, %rd5137;
	add.s64 	%rd5139, %rd9754, %rd9766;
	add.s64 	%rd5140, %rd5139, %rd5133;
	add.s64 	%rd9766, %rd5140, %rd5138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3963,%dummy}, %rd9765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3964}, %rd9765;
	}
	shf.r.wrap.b32 	%r3965, %r3964, %r3963, 19;
	shf.r.wrap.b32 	%r3966, %r3963, %r3964, 19;
	mov.b64 	%rd5141, {%r3966, %r3965};
	shf.l.wrap.b32 	%r3967, %r3963, %r3964, 3;
	shf.l.wrap.b32 	%r3968, %r3964, %r3963, 3;
	mov.b64 	%rd5142, {%r3968, %r3967};
	shr.u64 	%rd5143, %rd9765, 6;
	xor.b64  	%rd5144, %rd5141, %rd5143;
	xor.b64  	%rd5145, %rd5144, %rd5142;
	shr.u64 	%rd5146, %rd9768, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3969,%dummy}, %rd9768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3970}, %rd9768;
	}
	shf.r.wrap.b32 	%r3971, %r3970, %r3969, 1;
	shf.r.wrap.b32 	%r3972, %r3969, %r3970, 1;
	mov.b64 	%rd5147, {%r3972, %r3971};
	xor.b64  	%rd5148, %rd5147, %rd5146;
	shf.r.wrap.b32 	%r3973, %r3970, %r3969, 8;
	shf.r.wrap.b32 	%r3974, %r3969, %r3970, 8;
	mov.b64 	%rd5149, {%r3974, %r3973};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	add.s64 	%rd5151, %rd9753, %rd9767;
	add.s64 	%rd5152, %rd5151, %rd5145;
	add.s64 	%rd9767, %rd5152, %rd5150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3975,%dummy}, %rd9766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3976}, %rd9766;
	}
	shf.r.wrap.b32 	%r3977, %r3976, %r3975, 19;
	shf.r.wrap.b32 	%r3978, %r3975, %r3976, 19;
	mov.b64 	%rd5153, {%r3978, %r3977};
	shf.l.wrap.b32 	%r3979, %r3975, %r3976, 3;
	shf.l.wrap.b32 	%r3980, %r3976, %r3975, 3;
	mov.b64 	%rd5154, {%r3980, %r3979};
	shr.u64 	%rd5155, %rd9766, 6;
	xor.b64  	%rd5156, %rd5153, %rd5155;
	xor.b64  	%rd5157, %rd5156, %rd5154;
	shr.u64 	%rd5158, %rd9769, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3981,%dummy}, %rd9769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3982}, %rd9769;
	}
	shf.r.wrap.b32 	%r3983, %r3982, %r3981, 1;
	shf.r.wrap.b32 	%r3984, %r3981, %r3982, 1;
	mov.b64 	%rd5159, {%r3984, %r3983};
	xor.b64  	%rd5160, %rd5159, %rd5158;
	shf.r.wrap.b32 	%r3985, %r3982, %r3981, 8;
	shf.r.wrap.b32 	%r3986, %r3981, %r3982, 8;
	mov.b64 	%rd5161, {%r3986, %r3985};
	xor.b64  	%rd5162, %rd5160, %rd5161;
	add.s64 	%rd5163, %rd9752, %rd9768;
	add.s64 	%rd5164, %rd5163, %rd5157;
	add.s64 	%rd9768, %rd5164, %rd5162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd9767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd9767;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 19;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 19;
	mov.b64 	%rd5165, {%r3990, %r3989};
	shf.l.wrap.b32 	%r3991, %r3987, %r3988, 3;
	shf.l.wrap.b32 	%r3992, %r3988, %r3987, 3;
	mov.b64 	%rd5166, {%r3992, %r3991};
	shr.u64 	%rd5167, %rd9767, 6;
	xor.b64  	%rd5168, %rd5165, %rd5167;
	xor.b64  	%rd5169, %rd5168, %rd5166;
	shr.u64 	%rd5170, %rd9770, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3993,%dummy}, %rd9770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3994}, %rd9770;
	}
	shf.r.wrap.b32 	%r3995, %r3994, %r3993, 1;
	shf.r.wrap.b32 	%r3996, %r3993, %r3994, 1;
	mov.b64 	%rd5171, {%r3996, %r3995};
	xor.b64  	%rd5172, %rd5171, %rd5170;
	shf.r.wrap.b32 	%r3997, %r3994, %r3993, 8;
	shf.r.wrap.b32 	%r3998, %r3993, %r3994, 8;
	mov.b64 	%rd5173, {%r3998, %r3997};
	xor.b64  	%rd5174, %rd5172, %rd5173;
	add.s64 	%rd5175, %rd9751, %rd9769;
	add.s64 	%rd5176, %rd5175, %rd5169;
	add.s64 	%rd9769, %rd5176, %rd5174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3999,%dummy}, %rd9768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4000}, %rd9768;
	}
	shf.r.wrap.b32 	%r4001, %r4000, %r3999, 19;
	shf.r.wrap.b32 	%r4002, %r3999, %r4000, 19;
	mov.b64 	%rd5177, {%r4002, %r4001};
	shf.l.wrap.b32 	%r4003, %r3999, %r4000, 3;
	shf.l.wrap.b32 	%r4004, %r4000, %r3999, 3;
	mov.b64 	%rd5178, {%r4004, %r4003};
	shr.u64 	%rd5179, %rd9768, 6;
	xor.b64  	%rd5180, %rd5177, %rd5179;
	xor.b64  	%rd5181, %rd5180, %rd5178;
	shr.u64 	%rd5182, %rd9771, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd9771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd9771;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 1;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 1;
	mov.b64 	%rd5183, {%r4008, %r4007};
	xor.b64  	%rd5184, %rd5183, %rd5182;
	shf.r.wrap.b32 	%r4009, %r4006, %r4005, 8;
	shf.r.wrap.b32 	%r4010, %r4005, %r4006, 8;
	mov.b64 	%rd5185, {%r4010, %r4009};
	xor.b64  	%rd5186, %rd5184, %rd5185;
	add.s64 	%rd5187, %rd9750, %rd9770;
	add.s64 	%rd5188, %rd5187, %rd5181;
	add.s64 	%rd9770, %rd5188, %rd5186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4011,%dummy}, %rd9769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4012}, %rd9769;
	}
	shf.r.wrap.b32 	%r4013, %r4012, %r4011, 19;
	shf.r.wrap.b32 	%r4014, %r4011, %r4012, 19;
	mov.b64 	%rd5189, {%r4014, %r4013};
	shf.l.wrap.b32 	%r4015, %r4011, %r4012, 3;
	shf.l.wrap.b32 	%r4016, %r4012, %r4011, 3;
	mov.b64 	%rd5190, {%r4016, %r4015};
	shr.u64 	%rd5191, %rd9769, 6;
	xor.b64  	%rd5192, %rd5189, %rd5191;
	xor.b64  	%rd5193, %rd5192, %rd5190;
	shr.u64 	%rd5194, %rd9772, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4017,%dummy}, %rd9772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4018}, %rd9772;
	}
	shf.r.wrap.b32 	%r4019, %r4018, %r4017, 1;
	shf.r.wrap.b32 	%r4020, %r4017, %r4018, 1;
	mov.b64 	%rd5195, {%r4020, %r4019};
	xor.b64  	%rd5196, %rd5195, %rd5194;
	shf.r.wrap.b32 	%r4021, %r4018, %r4017, 8;
	shf.r.wrap.b32 	%r4022, %r4017, %r4018, 8;
	mov.b64 	%rd5197, {%r4022, %r4021};
	xor.b64  	%rd5198, %rd5196, %rd5197;
	add.s64 	%rd5199, %rd9749, %rd9771;
	add.s64 	%rd5200, %rd5199, %rd5193;
	add.s64 	%rd9771, %rd5200, %rd5198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4023,%dummy}, %rd9770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4024}, %rd9770;
	}
	shf.r.wrap.b32 	%r4025, %r4024, %r4023, 19;
	shf.r.wrap.b32 	%r4026, %r4023, %r4024, 19;
	mov.b64 	%rd5201, {%r4026, %r4025};
	shf.l.wrap.b32 	%r4027, %r4023, %r4024, 3;
	shf.l.wrap.b32 	%r4028, %r4024, %r4023, 3;
	mov.b64 	%rd5202, {%r4028, %r4027};
	shr.u64 	%rd5203, %rd9770, 6;
	xor.b64  	%rd5204, %rd5201, %rd5203;
	xor.b64  	%rd5205, %rd5204, %rd5202;
	shr.u64 	%rd5206, %rd9756, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4029,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4030}, %rd9756;
	}
	shf.r.wrap.b32 	%r4031, %r4030, %r4029, 1;
	shf.r.wrap.b32 	%r4032, %r4029, %r4030, 1;
	mov.b64 	%rd5207, {%r4032, %r4031};
	xor.b64  	%rd5208, %rd5207, %rd5206;
	shf.r.wrap.b32 	%r4033, %r4030, %r4029, 8;
	shf.r.wrap.b32 	%r4034, %r4029, %r4030, 8;
	mov.b64 	%rd5209, {%r4034, %r4033};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	add.s64 	%rd5211, %rd9765, %rd9772;
	add.s64 	%rd5212, %rd5211, %rd5205;
	add.s64 	%rd9772, %rd5212, %rd5210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4035,%dummy}, %rd9771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4036}, %rd9771;
	}
	shf.r.wrap.b32 	%r4037, %r4036, %r4035, 19;
	shf.r.wrap.b32 	%r4038, %r4035, %r4036, 19;
	mov.b64 	%rd5213, {%r4038, %r4037};
	shf.l.wrap.b32 	%r4039, %r4035, %r4036, 3;
	shf.l.wrap.b32 	%r4040, %r4036, %r4035, 3;
	mov.b64 	%rd5214, {%r4040, %r4039};
	shr.u64 	%rd5215, %rd9771, 6;
	xor.b64  	%rd5216, %rd5213, %rd5215;
	xor.b64  	%rd5217, %rd5216, %rd5214;
	shr.u64 	%rd5218, %rd9755, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4041,%dummy}, %rd9755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4042}, %rd9755;
	}
	shf.r.wrap.b32 	%r4043, %r4042, %r4041, 1;
	shf.r.wrap.b32 	%r4044, %r4041, %r4042, 1;
	mov.b64 	%rd5219, {%r4044, %r4043};
	xor.b64  	%rd5220, %rd5219, %rd5218;
	shf.r.wrap.b32 	%r4045, %r4042, %r4041, 8;
	shf.r.wrap.b32 	%r4046, %r4041, %r4042, 8;
	mov.b64 	%rd5221, {%r4046, %r4045};
	xor.b64  	%rd5222, %rd5220, %rd5221;
	add.s64 	%rd5223, %rd9766, %rd9756;
	add.s64 	%rd5224, %rd5223, %rd5217;
	add.s64 	%rd9756, %rd5224, %rd5222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd9772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd9772;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 19;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 19;
	mov.b64 	%rd5225, {%r4050, %r4049};
	shf.l.wrap.b32 	%r4051, %r4047, %r4048, 3;
	shf.l.wrap.b32 	%r4052, %r4048, %r4047, 3;
	mov.b64 	%rd5226, {%r4052, %r4051};
	shr.u64 	%rd5227, %rd9772, 6;
	xor.b64  	%rd5228, %rd5225, %rd5227;
	xor.b64  	%rd5229, %rd5228, %rd5226;
	shr.u64 	%rd5230, %rd9754, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4053,%dummy}, %rd9754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4054}, %rd9754;
	}
	shf.r.wrap.b32 	%r4055, %r4054, %r4053, 1;
	shf.r.wrap.b32 	%r4056, %r4053, %r4054, 1;
	mov.b64 	%rd5231, {%r4056, %r4055};
	xor.b64  	%rd5232, %rd5231, %rd5230;
	shf.r.wrap.b32 	%r4057, %r4054, %r4053, 8;
	shf.r.wrap.b32 	%r4058, %r4053, %r4054, 8;
	mov.b64 	%rd5233, {%r4058, %r4057};
	xor.b64  	%rd5234, %rd5232, %rd5233;
	add.s64 	%rd5235, %rd9767, %rd9755;
	add.s64 	%rd5236, %rd5235, %rd5229;
	add.s64 	%rd9755, %rd5236, %rd5234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4059,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4060}, %rd9756;
	}
	shf.r.wrap.b32 	%r4061, %r4060, %r4059, 19;
	shf.r.wrap.b32 	%r4062, %r4059, %r4060, 19;
	mov.b64 	%rd5237, {%r4062, %r4061};
	shf.l.wrap.b32 	%r4063, %r4059, %r4060, 3;
	shf.l.wrap.b32 	%r4064, %r4060, %r4059, 3;
	mov.b64 	%rd5238, {%r4064, %r4063};
	shr.u64 	%rd5239, %rd9756, 6;
	xor.b64  	%rd5240, %rd5237, %rd5239;
	xor.b64  	%rd5241, %rd5240, %rd5238;
	shr.u64 	%rd5242, %rd9753, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd9753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd9753;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 1;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 1;
	mov.b64 	%rd5243, {%r4068, %r4067};
	xor.b64  	%rd5244, %rd5243, %rd5242;
	shf.r.wrap.b32 	%r4069, %r4066, %r4065, 8;
	shf.r.wrap.b32 	%r4070, %r4065, %r4066, 8;
	mov.b64 	%rd5245, {%r4070, %r4069};
	xor.b64  	%rd5246, %rd5244, %rd5245;
	add.s64 	%rd5247, %rd9768, %rd9754;
	add.s64 	%rd5248, %rd5247, %rd5241;
	add.s64 	%rd9754, %rd5248, %rd5246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4071,%dummy}, %rd9755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4072}, %rd9755;
	}
	shf.r.wrap.b32 	%r4073, %r4072, %r4071, 19;
	shf.r.wrap.b32 	%r4074, %r4071, %r4072, 19;
	mov.b64 	%rd5249, {%r4074, %r4073};
	shf.l.wrap.b32 	%r4075, %r4071, %r4072, 3;
	shf.l.wrap.b32 	%r4076, %r4072, %r4071, 3;
	mov.b64 	%rd5250, {%r4076, %r4075};
	shr.u64 	%rd5251, %rd9755, 6;
	xor.b64  	%rd5252, %rd5249, %rd5251;
	xor.b64  	%rd5253, %rd5252, %rd5250;
	shr.u64 	%rd5254, %rd9752, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4077,%dummy}, %rd9752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4078}, %rd9752;
	}
	shf.r.wrap.b32 	%r4079, %r4078, %r4077, 1;
	shf.r.wrap.b32 	%r4080, %r4077, %r4078, 1;
	mov.b64 	%rd5255, {%r4080, %r4079};
	xor.b64  	%rd5256, %rd5255, %rd5254;
	shf.r.wrap.b32 	%r4081, %r4078, %r4077, 8;
	shf.r.wrap.b32 	%r4082, %r4077, %r4078, 8;
	mov.b64 	%rd5257, {%r4082, %r4081};
	xor.b64  	%rd5258, %rd5256, %rd5257;
	add.s64 	%rd5259, %rd9769, %rd9753;
	add.s64 	%rd5260, %rd5259, %rd5253;
	add.s64 	%rd9753, %rd5260, %rd5258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd9754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd9754;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 19;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 19;
	mov.b64 	%rd5261, {%r4086, %r4085};
	shf.l.wrap.b32 	%r4087, %r4083, %r4084, 3;
	shf.l.wrap.b32 	%r4088, %r4084, %r4083, 3;
	mov.b64 	%rd5262, {%r4088, %r4087};
	shr.u64 	%rd5263, %rd9754, 6;
	xor.b64  	%rd5264, %rd5261, %rd5263;
	xor.b64  	%rd5265, %rd5264, %rd5262;
	shr.u64 	%rd5266, %rd9751, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4089,%dummy}, %rd9751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4090}, %rd9751;
	}
	shf.r.wrap.b32 	%r4091, %r4090, %r4089, 1;
	shf.r.wrap.b32 	%r4092, %r4089, %r4090, 1;
	mov.b64 	%rd5267, {%r4092, %r4091};
	xor.b64  	%rd5268, %rd5267, %rd5266;
	shf.r.wrap.b32 	%r4093, %r4090, %r4089, 8;
	shf.r.wrap.b32 	%r4094, %r4089, %r4090, 8;
	mov.b64 	%rd5269, {%r4094, %r4093};
	xor.b64  	%rd5270, %rd5268, %rd5269;
	add.s64 	%rd5271, %rd9770, %rd9752;
	add.s64 	%rd5272, %rd5271, %rd5265;
	add.s64 	%rd9752, %rd5272, %rd5270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4095,%dummy}, %rd9753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4096}, %rd9753;
	}
	shf.r.wrap.b32 	%r4097, %r4096, %r4095, 19;
	shf.r.wrap.b32 	%r4098, %r4095, %r4096, 19;
	mov.b64 	%rd5273, {%r4098, %r4097};
	shf.l.wrap.b32 	%r4099, %r4095, %r4096, 3;
	shf.l.wrap.b32 	%r4100, %r4096, %r4095, 3;
	mov.b64 	%rd5274, {%r4100, %r4099};
	shr.u64 	%rd5275, %rd9753, 6;
	xor.b64  	%rd5276, %rd5273, %rd5275;
	xor.b64  	%rd5277, %rd5276, %rd5274;
	shr.u64 	%rd5278, %rd9750, 7;
	shf.r.wrap.b32 	%r4101, %r3940, %r3939, 1;
	shf.r.wrap.b32 	%r4102, %r3939, %r3940, 1;
	mov.b64 	%rd5279, {%r4102, %r4101};
	xor.b64  	%rd5280, %rd5279, %rd5278;
	shf.r.wrap.b32 	%r4103, %r3940, %r3939, 8;
	shf.r.wrap.b32 	%r4104, %r3939, %r3940, 8;
	mov.b64 	%rd5281, {%r4104, %r4103};
	xor.b64  	%rd5282, %rd5280, %rd5281;
	add.s64 	%rd5283, %rd9771, %rd9751;
	add.s64 	%rd5284, %rd5283, %rd5277;
	add.s64 	%rd9751, %rd5284, %rd5282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4105,%dummy}, %rd9752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4106}, %rd9752;
	}
	shf.r.wrap.b32 	%r4107, %r4106, %r4105, 19;
	shf.r.wrap.b32 	%r4108, %r4105, %r4106, 19;
	mov.b64 	%rd5285, {%r4108, %r4107};
	shf.l.wrap.b32 	%r4109, %r4105, %r4106, 3;
	shf.l.wrap.b32 	%r4110, %r4106, %r4105, 3;
	mov.b64 	%rd5286, {%r4110, %r4109};
	shr.u64 	%rd5287, %rd9752, 6;
	xor.b64  	%rd5288, %rd5285, %rd5287;
	xor.b64  	%rd5289, %rd5288, %rd5286;
	shr.u64 	%rd5290, %rd9749, 7;
	shf.r.wrap.b32 	%r4111, %r3952, %r3951, 1;
	shf.r.wrap.b32 	%r4112, %r3951, %r3952, 1;
	mov.b64 	%rd5291, {%r4112, %r4111};
	xor.b64  	%rd5292, %rd5291, %rd5290;
	shf.r.wrap.b32 	%r4113, %r3952, %r3951, 8;
	shf.r.wrap.b32 	%r4114, %r3951, %r3952, 8;
	mov.b64 	%rd5293, {%r4114, %r4113};
	xor.b64  	%rd5294, %rd5292, %rd5293;
	add.s64 	%rd5295, %rd9772, %rd9750;
	add.s64 	%rd5296, %rd5295, %rd5289;
	add.s64 	%rd9750, %rd5296, %rd5294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4115,%dummy}, %rd9751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4116}, %rd9751;
	}
	shf.r.wrap.b32 	%r4117, %r4116, %r4115, 19;
	shf.r.wrap.b32 	%r4118, %r4115, %r4116, 19;
	mov.b64 	%rd5297, {%r4118, %r4117};
	shf.l.wrap.b32 	%r4119, %r4115, %r4116, 3;
	shf.l.wrap.b32 	%r4120, %r4116, %r4115, 3;
	mov.b64 	%rd5298, {%r4120, %r4119};
	shr.u64 	%rd5299, %rd9751, 6;
	xor.b64  	%rd5300, %rd5297, %rd5299;
	xor.b64  	%rd5301, %rd5300, %rd5298;
	shf.r.wrap.b32 	%r4121, %r3964, %r3963, 1;
	shf.r.wrap.b32 	%r4122, %r3963, %r3964, 1;
	mov.b64 	%rd5302, {%r4122, %r4121};
	shf.r.wrap.b32 	%r4123, %r3964, %r3963, 8;
	shf.r.wrap.b32 	%r4124, %r3963, %r3964, 8;
	mov.b64 	%rd5303, {%r4124, %r4123};
	shr.u64 	%rd5304, %rd9765, 7;
	xor.b64  	%rd5305, %rd5302, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5303;
	add.s64 	%rd5307, %rd9756, %rd9749;
	add.s64 	%rd5308, %rd5307, %rd5301;
	add.s64 	%rd9749, %rd5308, %rd5306;
	mul.wide.s32 	%rd5309, %r7471, 8;
	mov.u64 	%rd5310, k_sha512;
	add.s64 	%rd5311, %rd5310, %rd5309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd9761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd9761;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 18;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 18;
	mov.b64 	%rd5312, {%r4128, %r4127};
	shf.r.wrap.b32 	%r4129, %r4126, %r4125, 14;
	shf.r.wrap.b32 	%r4130, %r4125, %r4126, 14;
	mov.b64 	%rd5313, {%r4130, %r4129};
	xor.b64  	%rd5314, %rd5312, %rd5313;
	shf.l.wrap.b32 	%r4131, %r4125, %r4126, 23;
	shf.l.wrap.b32 	%r4132, %r4126, %r4125, 23;
	mov.b64 	%rd5315, {%r4132, %r4131};
	xor.b64  	%rd5316, %rd5314, %rd5315;
	xor.b64  	%rd5317, %rd9762, %rd9763;
	and.b64  	%rd5318, %rd9761, %rd5317;
	xor.b64  	%rd5319, %rd5318, %rd9763;
	add.s64 	%rd5320, %rd5319, %rd9764;
	add.s64 	%rd5321, %rd5320, %rd9765;
	ld.const.u64 	%rd5322, [%rd5311];
	add.s64 	%rd5323, %rd5321, %rd5322;
	add.s64 	%rd5324, %rd5323, %rd5316;
	add.s64 	%rd5325, %rd5324, %rd9760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd9757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4134,%dummy}, %rd9757;
	}
	shf.l.wrap.b32 	%r4135, %r4134, %r4133, 30;
	shf.l.wrap.b32 	%r4136, %r4133, %r4134, 30;
	mov.b64 	%rd5326, {%r4136, %r4135};
	shf.r.wrap.b32 	%r4137, %r4133, %r4134, 28;
	shf.r.wrap.b32 	%r4138, %r4134, %r4133, 28;
	mov.b64 	%rd5327, {%r4138, %r4137};
	xor.b64  	%rd5328, %rd5326, %rd5327;
	shf.l.wrap.b32 	%r4139, %r4134, %r4133, 25;
	shf.l.wrap.b32 	%r4140, %r4133, %r4134, 25;
	mov.b64 	%rd5329, {%r4140, %r4139};
	xor.b64  	%rd5330, %rd5328, %rd5329;
	xor.b64  	%rd5331, %rd9757, %rd9758;
	and.b64  	%rd5332, %rd5331, %rd9759;
	and.b64  	%rd5333, %rd9757, %rd9758;
	or.b64  	%rd5334, %rd5332, %rd5333;
	add.s64 	%rd5335, %rd5324, %rd5334;
	add.s64 	%rd5336, %rd5335, %rd5330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4141,%dummy}, %rd5325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4142}, %rd5325;
	}
	shf.r.wrap.b32 	%r4143, %r4142, %r4141, 14;
	shf.r.wrap.b32 	%r4144, %r4141, %r4142, 14;
	mov.b64 	%rd5337, {%r4144, %r4143};
	shf.r.wrap.b32 	%r4145, %r4142, %r4141, 18;
	shf.r.wrap.b32 	%r4146, %r4141, %r4142, 18;
	mov.b64 	%rd5338, {%r4146, %r4145};
	xor.b64  	%rd5339, %rd5338, %rd5337;
	shf.l.wrap.b32 	%r4147, %r4141, %r4142, 23;
	shf.l.wrap.b32 	%r4148, %r4142, %r4141, 23;
	mov.b64 	%rd5340, {%r4148, %r4147};
	xor.b64  	%rd5341, %rd5339, %rd5340;
	xor.b64  	%rd5342, %rd9761, %rd9762;
	and.b64  	%rd5343, %rd5325, %rd5342;
	xor.b64  	%rd5344, %rd5343, %rd9762;
	add.s64 	%rd5345, %rd9766, %rd9763;
	ld.const.u64 	%rd5346, [%rd5311+8];
	add.s64 	%rd5347, %rd5345, %rd5346;
	add.s64 	%rd5348, %rd5347, %rd5344;
	add.s64 	%rd5349, %rd5348, %rd5341;
	add.s64 	%rd5350, %rd5349, %rd9759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4149,%dummy}, %rd5336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4150}, %rd5336;
	}
	shf.r.wrap.b32 	%r4151, %r4150, %r4149, 28;
	shf.r.wrap.b32 	%r4152, %r4149, %r4150, 28;
	mov.b64 	%rd5351, {%r4152, %r4151};
	shf.l.wrap.b32 	%r4153, %r4149, %r4150, 30;
	shf.l.wrap.b32 	%r4154, %r4150, %r4149, 30;
	mov.b64 	%rd5352, {%r4154, %r4153};
	xor.b64  	%rd5353, %rd5352, %rd5351;
	shf.l.wrap.b32 	%r4155, %r4149, %r4150, 25;
	shf.l.wrap.b32 	%r4156, %r4150, %r4149, 25;
	mov.b64 	%rd5354, {%r4156, %r4155};
	xor.b64  	%rd5355, %rd5353, %rd5354;
	and.b64  	%rd5356, %rd5336, %rd9757;
	xor.b64  	%rd5357, %rd5336, %rd9757;
	and.b64  	%rd5358, %rd5357, %rd9758;
	or.b64  	%rd5359, %rd5358, %rd5356;
	add.s64 	%rd5360, %rd5349, %rd5359;
	add.s64 	%rd5361, %rd5360, %rd5355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4157,%dummy}, %rd5350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4158}, %rd5350;
	}
	shf.r.wrap.b32 	%r4159, %r4158, %r4157, 14;
	shf.r.wrap.b32 	%r4160, %r4157, %r4158, 14;
	mov.b64 	%rd5362, {%r4160, %r4159};
	shf.r.wrap.b32 	%r4161, %r4158, %r4157, 18;
	shf.r.wrap.b32 	%r4162, %r4157, %r4158, 18;
	mov.b64 	%rd5363, {%r4162, %r4161};
	xor.b64  	%rd5364, %rd5363, %rd5362;
	shf.l.wrap.b32 	%r4163, %r4157, %r4158, 23;
	shf.l.wrap.b32 	%r4164, %r4158, %r4157, 23;
	mov.b64 	%rd5365, {%r4164, %r4163};
	xor.b64  	%rd5366, %rd5364, %rd5365;
	xor.b64  	%rd5367, %rd5325, %rd9761;
	and.b64  	%rd5368, %rd5350, %rd5367;
	xor.b64  	%rd5369, %rd5368, %rd9761;
	add.s64 	%rd5370, %rd9767, %rd9762;
	ld.const.u64 	%rd5371, [%rd5311+16];
	add.s64 	%rd5372, %rd5370, %rd5371;
	add.s64 	%rd5373, %rd5372, %rd5369;
	add.s64 	%rd5374, %rd5373, %rd5366;
	add.s64 	%rd5375, %rd5374, %rd9758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4165,%dummy}, %rd5361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4166}, %rd5361;
	}
	shf.r.wrap.b32 	%r4167, %r4166, %r4165, 28;
	shf.r.wrap.b32 	%r4168, %r4165, %r4166, 28;
	mov.b64 	%rd5376, {%r4168, %r4167};
	shf.l.wrap.b32 	%r4169, %r4165, %r4166, 30;
	shf.l.wrap.b32 	%r4170, %r4166, %r4165, 30;
	mov.b64 	%rd5377, {%r4170, %r4169};
	xor.b64  	%rd5378, %rd5377, %rd5376;
	shf.l.wrap.b32 	%r4171, %r4165, %r4166, 25;
	shf.l.wrap.b32 	%r4172, %r4166, %r4165, 25;
	mov.b64 	%rd5379, {%r4172, %r4171};
	xor.b64  	%rd5380, %rd5378, %rd5379;
	and.b64  	%rd5381, %rd5361, %rd5336;
	xor.b64  	%rd5382, %rd5361, %rd5336;
	and.b64  	%rd5383, %rd5382, %rd9757;
	or.b64  	%rd5384, %rd5383, %rd5381;
	add.s64 	%rd5385, %rd5374, %rd5384;
	add.s64 	%rd5386, %rd5385, %rd5380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4173,%dummy}, %rd5375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4174}, %rd5375;
	}
	shf.r.wrap.b32 	%r4175, %r4174, %r4173, 14;
	shf.r.wrap.b32 	%r4176, %r4173, %r4174, 14;
	mov.b64 	%rd5387, {%r4176, %r4175};
	shf.r.wrap.b32 	%r4177, %r4174, %r4173, 18;
	shf.r.wrap.b32 	%r4178, %r4173, %r4174, 18;
	mov.b64 	%rd5388, {%r4178, %r4177};
	xor.b64  	%rd5389, %rd5388, %rd5387;
	shf.l.wrap.b32 	%r4179, %r4173, %r4174, 23;
	shf.l.wrap.b32 	%r4180, %r4174, %r4173, 23;
	mov.b64 	%rd5390, {%r4180, %r4179};
	xor.b64  	%rd5391, %rd5389, %rd5390;
	xor.b64  	%rd5392, %rd5350, %rd5325;
	and.b64  	%rd5393, %rd5375, %rd5392;
	xor.b64  	%rd5394, %rd5393, %rd5325;
	add.s64 	%rd5395, %rd9768, %rd9761;
	ld.const.u64 	%rd5396, [%rd5311+24];
	add.s64 	%rd5397, %rd5395, %rd5396;
	add.s64 	%rd5398, %rd5397, %rd5394;
	add.s64 	%rd5399, %rd5398, %rd5391;
	add.s64 	%rd5400, %rd5399, %rd9757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4181,%dummy}, %rd5386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4182}, %rd5386;
	}
	shf.r.wrap.b32 	%r4183, %r4182, %r4181, 28;
	shf.r.wrap.b32 	%r4184, %r4181, %r4182, 28;
	mov.b64 	%rd5401, {%r4184, %r4183};
	shf.l.wrap.b32 	%r4185, %r4181, %r4182, 30;
	shf.l.wrap.b32 	%r4186, %r4182, %r4181, 30;
	mov.b64 	%rd5402, {%r4186, %r4185};
	xor.b64  	%rd5403, %rd5402, %rd5401;
	shf.l.wrap.b32 	%r4187, %r4181, %r4182, 25;
	shf.l.wrap.b32 	%r4188, %r4182, %r4181, 25;
	mov.b64 	%rd5404, {%r4188, %r4187};
	xor.b64  	%rd5405, %rd5403, %rd5404;
	and.b64  	%rd5406, %rd5386, %rd5361;
	xor.b64  	%rd5407, %rd5386, %rd5361;
	and.b64  	%rd5408, %rd5407, %rd5336;
	or.b64  	%rd5409, %rd5408, %rd5406;
	add.s64 	%rd5410, %rd5399, %rd5409;
	add.s64 	%rd5411, %rd5410, %rd5405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4189,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4190}, %rd5400;
	}
	shf.r.wrap.b32 	%r4191, %r4190, %r4189, 14;
	shf.r.wrap.b32 	%r4192, %r4189, %r4190, 14;
	mov.b64 	%rd5412, {%r4192, %r4191};
	shf.r.wrap.b32 	%r4193, %r4190, %r4189, 18;
	shf.r.wrap.b32 	%r4194, %r4189, %r4190, 18;
	mov.b64 	%rd5413, {%r4194, %r4193};
	xor.b64  	%rd5414, %rd5413, %rd5412;
	shf.l.wrap.b32 	%r4195, %r4189, %r4190, 23;
	shf.l.wrap.b32 	%r4196, %r4190, %r4189, 23;
	mov.b64 	%rd5415, {%r4196, %r4195};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	xor.b64  	%rd5417, %rd5375, %rd5350;
	and.b64  	%rd5418, %rd5400, %rd5417;
	xor.b64  	%rd5419, %rd5418, %rd5350;
	add.s64 	%rd5420, %rd5325, %rd9769;
	ld.const.u64 	%rd5421, [%rd5311+32];
	add.s64 	%rd5422, %rd5420, %rd5421;
	add.s64 	%rd5423, %rd5422, %rd5419;
	add.s64 	%rd5424, %rd5423, %rd5416;
	add.s64 	%rd5425, %rd5424, %rd5336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4197,%dummy}, %rd5411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4198}, %rd5411;
	}
	shf.r.wrap.b32 	%r4199, %r4198, %r4197, 28;
	shf.r.wrap.b32 	%r4200, %r4197, %r4198, 28;
	mov.b64 	%rd5426, {%r4200, %r4199};
	shf.l.wrap.b32 	%r4201, %r4197, %r4198, 30;
	shf.l.wrap.b32 	%r4202, %r4198, %r4197, 30;
	mov.b64 	%rd5427, {%r4202, %r4201};
	xor.b64  	%rd5428, %rd5427, %rd5426;
	shf.l.wrap.b32 	%r4203, %r4197, %r4198, 25;
	shf.l.wrap.b32 	%r4204, %r4198, %r4197, 25;
	mov.b64 	%rd5429, {%r4204, %r4203};
	xor.b64  	%rd5430, %rd5428, %rd5429;
	and.b64  	%rd5431, %rd5411, %rd5386;
	xor.b64  	%rd5432, %rd5411, %rd5386;
	and.b64  	%rd5433, %rd5432, %rd5361;
	or.b64  	%rd5434, %rd5433, %rd5431;
	add.s64 	%rd5435, %rd5424, %rd5434;
	add.s64 	%rd5436, %rd5435, %rd5430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4205,%dummy}, %rd5425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4206}, %rd5425;
	}
	shf.r.wrap.b32 	%r4207, %r4206, %r4205, 14;
	shf.r.wrap.b32 	%r4208, %r4205, %r4206, 14;
	mov.b64 	%rd5437, {%r4208, %r4207};
	shf.r.wrap.b32 	%r4209, %r4206, %r4205, 18;
	shf.r.wrap.b32 	%r4210, %r4205, %r4206, 18;
	mov.b64 	%rd5438, {%r4210, %r4209};
	xor.b64  	%rd5439, %rd5438, %rd5437;
	shf.l.wrap.b32 	%r4211, %r4205, %r4206, 23;
	shf.l.wrap.b32 	%r4212, %r4206, %r4205, 23;
	mov.b64 	%rd5440, {%r4212, %r4211};
	xor.b64  	%rd5441, %rd5439, %rd5440;
	xor.b64  	%rd5442, %rd5400, %rd5375;
	and.b64  	%rd5443, %rd5425, %rd5442;
	xor.b64  	%rd5444, %rd5443, %rd5375;
	add.s64 	%rd5445, %rd5350, %rd9770;
	ld.const.u64 	%rd5446, [%rd5311+40];
	add.s64 	%rd5447, %rd5445, %rd5446;
	add.s64 	%rd5448, %rd5447, %rd5444;
	add.s64 	%rd5449, %rd5448, %rd5441;
	add.s64 	%rd5450, %rd5449, %rd5361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4213,%dummy}, %rd5436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4214}, %rd5436;
	}
	shf.r.wrap.b32 	%r4215, %r4214, %r4213, 28;
	shf.r.wrap.b32 	%r4216, %r4213, %r4214, 28;
	mov.b64 	%rd5451, {%r4216, %r4215};
	shf.l.wrap.b32 	%r4217, %r4213, %r4214, 30;
	shf.l.wrap.b32 	%r4218, %r4214, %r4213, 30;
	mov.b64 	%rd5452, {%r4218, %r4217};
	xor.b64  	%rd5453, %rd5452, %rd5451;
	shf.l.wrap.b32 	%r4219, %r4213, %r4214, 25;
	shf.l.wrap.b32 	%r4220, %r4214, %r4213, 25;
	mov.b64 	%rd5454, {%r4220, %r4219};
	xor.b64  	%rd5455, %rd5453, %rd5454;
	and.b64  	%rd5456, %rd5436, %rd5411;
	xor.b64  	%rd5457, %rd5436, %rd5411;
	and.b64  	%rd5458, %rd5457, %rd5386;
	or.b64  	%rd5459, %rd5458, %rd5456;
	add.s64 	%rd5460, %rd5449, %rd5459;
	add.s64 	%rd5461, %rd5460, %rd5455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4221,%dummy}, %rd5450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4222}, %rd5450;
	}
	shf.r.wrap.b32 	%r4223, %r4222, %r4221, 14;
	shf.r.wrap.b32 	%r4224, %r4221, %r4222, 14;
	mov.b64 	%rd5462, {%r4224, %r4223};
	shf.r.wrap.b32 	%r4225, %r4222, %r4221, 18;
	shf.r.wrap.b32 	%r4226, %r4221, %r4222, 18;
	mov.b64 	%rd5463, {%r4226, %r4225};
	xor.b64  	%rd5464, %rd5463, %rd5462;
	shf.l.wrap.b32 	%r4227, %r4221, %r4222, 23;
	shf.l.wrap.b32 	%r4228, %r4222, %r4221, 23;
	mov.b64 	%rd5465, {%r4228, %r4227};
	xor.b64  	%rd5466, %rd5464, %rd5465;
	xor.b64  	%rd5467, %rd5425, %rd5400;
	and.b64  	%rd5468, %rd5450, %rd5467;
	xor.b64  	%rd5469, %rd5468, %rd5400;
	add.s64 	%rd5470, %rd5375, %rd9771;
	ld.const.u64 	%rd5471, [%rd5311+48];
	add.s64 	%rd5472, %rd5470, %rd5471;
	add.s64 	%rd5473, %rd5472, %rd5469;
	add.s64 	%rd5474, %rd5473, %rd5466;
	add.s64 	%rd5475, %rd5474, %rd5386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd5461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd5461;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 28;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 28;
	mov.b64 	%rd5476, {%r4232, %r4231};
	shf.l.wrap.b32 	%r4233, %r4229, %r4230, 30;
	shf.l.wrap.b32 	%r4234, %r4230, %r4229, 30;
	mov.b64 	%rd5477, {%r4234, %r4233};
	xor.b64  	%rd5478, %rd5477, %rd5476;
	shf.l.wrap.b32 	%r4235, %r4229, %r4230, 25;
	shf.l.wrap.b32 	%r4236, %r4230, %r4229, 25;
	mov.b64 	%rd5479, {%r4236, %r4235};
	xor.b64  	%rd5480, %rd5478, %rd5479;
	and.b64  	%rd5481, %rd5461, %rd5436;
	xor.b64  	%rd5482, %rd5461, %rd5436;
	and.b64  	%rd5483, %rd5482, %rd5411;
	or.b64  	%rd5484, %rd5483, %rd5481;
	add.s64 	%rd5485, %rd5474, %rd5484;
	add.s64 	%rd5486, %rd5485, %rd5480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd5475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd5475;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 14;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 14;
	mov.b64 	%rd5487, {%r4240, %r4239};
	shf.r.wrap.b32 	%r4241, %r4238, %r4237, 18;
	shf.r.wrap.b32 	%r4242, %r4237, %r4238, 18;
	mov.b64 	%rd5488, {%r4242, %r4241};
	xor.b64  	%rd5489, %rd5488, %rd5487;
	shf.l.wrap.b32 	%r4243, %r4237, %r4238, 23;
	shf.l.wrap.b32 	%r4244, %r4238, %r4237, 23;
	mov.b64 	%rd5490, {%r4244, %r4243};
	xor.b64  	%rd5491, %rd5489, %rd5490;
	xor.b64  	%rd5492, %rd5450, %rd5425;
	and.b64  	%rd5493, %rd5475, %rd5492;
	xor.b64  	%rd5494, %rd5493, %rd5425;
	add.s64 	%rd5495, %rd5400, %rd9772;
	ld.const.u64 	%rd5496, [%rd5311+56];
	add.s64 	%rd5497, %rd5495, %rd5496;
	add.s64 	%rd5498, %rd5497, %rd5494;
	add.s64 	%rd5499, %rd5498, %rd5491;
	add.s64 	%rd5500, %rd5499, %rd5411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4245,%dummy}, %rd5486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4246}, %rd5486;
	}
	shf.r.wrap.b32 	%r4247, %r4246, %r4245, 28;
	shf.r.wrap.b32 	%r4248, %r4245, %r4246, 28;
	mov.b64 	%rd5501, {%r4248, %r4247};
	shf.l.wrap.b32 	%r4249, %r4245, %r4246, 30;
	shf.l.wrap.b32 	%r4250, %r4246, %r4245, 30;
	mov.b64 	%rd5502, {%r4250, %r4249};
	xor.b64  	%rd5503, %rd5502, %rd5501;
	shf.l.wrap.b32 	%r4251, %r4245, %r4246, 25;
	shf.l.wrap.b32 	%r4252, %r4246, %r4245, 25;
	mov.b64 	%rd5504, {%r4252, %r4251};
	xor.b64  	%rd5505, %rd5503, %rd5504;
	and.b64  	%rd5506, %rd5486, %rd5461;
	xor.b64  	%rd5507, %rd5486, %rd5461;
	and.b64  	%rd5508, %rd5507, %rd5436;
	or.b64  	%rd5509, %rd5508, %rd5506;
	add.s64 	%rd5510, %rd5499, %rd5509;
	add.s64 	%rd5511, %rd5510, %rd5505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4253,%dummy}, %rd5500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4254}, %rd5500;
	}
	shf.r.wrap.b32 	%r4255, %r4254, %r4253, 14;
	shf.r.wrap.b32 	%r4256, %r4253, %r4254, 14;
	mov.b64 	%rd5512, {%r4256, %r4255};
	shf.r.wrap.b32 	%r4257, %r4254, %r4253, 18;
	shf.r.wrap.b32 	%r4258, %r4253, %r4254, 18;
	mov.b64 	%rd5513, {%r4258, %r4257};
	xor.b64  	%rd5514, %rd5513, %rd5512;
	shf.l.wrap.b32 	%r4259, %r4253, %r4254, 23;
	shf.l.wrap.b32 	%r4260, %r4254, %r4253, 23;
	mov.b64 	%rd5515, {%r4260, %r4259};
	xor.b64  	%rd5516, %rd5514, %rd5515;
	xor.b64  	%rd5517, %rd5475, %rd5450;
	and.b64  	%rd5518, %rd5500, %rd5517;
	xor.b64  	%rd5519, %rd5518, %rd5450;
	add.s64 	%rd5520, %rd5425, %rd9756;
	ld.const.u64 	%rd5521, [%rd5311+64];
	add.s64 	%rd5522, %rd5520, %rd5521;
	add.s64 	%rd5523, %rd5522, %rd5519;
	add.s64 	%rd5524, %rd5523, %rd5516;
	add.s64 	%rd5525, %rd5524, %rd5436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4261,%dummy}, %rd5511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4262}, %rd5511;
	}
	shf.r.wrap.b32 	%r4263, %r4262, %r4261, 28;
	shf.r.wrap.b32 	%r4264, %r4261, %r4262, 28;
	mov.b64 	%rd5526, {%r4264, %r4263};
	shf.l.wrap.b32 	%r4265, %r4261, %r4262, 30;
	shf.l.wrap.b32 	%r4266, %r4262, %r4261, 30;
	mov.b64 	%rd5527, {%r4266, %r4265};
	xor.b64  	%rd5528, %rd5527, %rd5526;
	shf.l.wrap.b32 	%r4267, %r4261, %r4262, 25;
	shf.l.wrap.b32 	%r4268, %r4262, %r4261, 25;
	mov.b64 	%rd5529, {%r4268, %r4267};
	xor.b64  	%rd5530, %rd5528, %rd5529;
	and.b64  	%rd5531, %rd5511, %rd5486;
	xor.b64  	%rd5532, %rd5511, %rd5486;
	and.b64  	%rd5533, %rd5532, %rd5461;
	or.b64  	%rd5534, %rd5533, %rd5531;
	add.s64 	%rd5535, %rd5524, %rd5534;
	add.s64 	%rd5536, %rd5535, %rd5530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4269,%dummy}, %rd5525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4270}, %rd5525;
	}
	shf.r.wrap.b32 	%r4271, %r4270, %r4269, 14;
	shf.r.wrap.b32 	%r4272, %r4269, %r4270, 14;
	mov.b64 	%rd5537, {%r4272, %r4271};
	shf.r.wrap.b32 	%r4273, %r4270, %r4269, 18;
	shf.r.wrap.b32 	%r4274, %r4269, %r4270, 18;
	mov.b64 	%rd5538, {%r4274, %r4273};
	xor.b64  	%rd5539, %rd5538, %rd5537;
	shf.l.wrap.b32 	%r4275, %r4269, %r4270, 23;
	shf.l.wrap.b32 	%r4276, %r4270, %r4269, 23;
	mov.b64 	%rd5540, {%r4276, %r4275};
	xor.b64  	%rd5541, %rd5539, %rd5540;
	xor.b64  	%rd5542, %rd5500, %rd5475;
	and.b64  	%rd5543, %rd5525, %rd5542;
	xor.b64  	%rd5544, %rd5543, %rd5475;
	add.s64 	%rd5545, %rd5450, %rd9755;
	ld.const.u64 	%rd5546, [%rd5311+72];
	add.s64 	%rd5547, %rd5545, %rd5546;
	add.s64 	%rd5548, %rd5547, %rd5544;
	add.s64 	%rd5549, %rd5548, %rd5541;
	add.s64 	%rd5550, %rd5549, %rd5461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4277,%dummy}, %rd5536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4278}, %rd5536;
	}
	shf.r.wrap.b32 	%r4279, %r4278, %r4277, 28;
	shf.r.wrap.b32 	%r4280, %r4277, %r4278, 28;
	mov.b64 	%rd5551, {%r4280, %r4279};
	shf.l.wrap.b32 	%r4281, %r4277, %r4278, 30;
	shf.l.wrap.b32 	%r4282, %r4278, %r4277, 30;
	mov.b64 	%rd5552, {%r4282, %r4281};
	xor.b64  	%rd5553, %rd5552, %rd5551;
	shf.l.wrap.b32 	%r4283, %r4277, %r4278, 25;
	shf.l.wrap.b32 	%r4284, %r4278, %r4277, 25;
	mov.b64 	%rd5554, {%r4284, %r4283};
	xor.b64  	%rd5555, %rd5553, %rd5554;
	and.b64  	%rd5556, %rd5536, %rd5511;
	xor.b64  	%rd5557, %rd5536, %rd5511;
	and.b64  	%rd5558, %rd5557, %rd5486;
	or.b64  	%rd5559, %rd5558, %rd5556;
	add.s64 	%rd5560, %rd5549, %rd5559;
	add.s64 	%rd5561, %rd5560, %rd5555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4285,%dummy}, %rd5550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4286}, %rd5550;
	}
	shf.r.wrap.b32 	%r4287, %r4286, %r4285, 14;
	shf.r.wrap.b32 	%r4288, %r4285, %r4286, 14;
	mov.b64 	%rd5562, {%r4288, %r4287};
	shf.r.wrap.b32 	%r4289, %r4286, %r4285, 18;
	shf.r.wrap.b32 	%r4290, %r4285, %r4286, 18;
	mov.b64 	%rd5563, {%r4290, %r4289};
	xor.b64  	%rd5564, %rd5563, %rd5562;
	shf.l.wrap.b32 	%r4291, %r4285, %r4286, 23;
	shf.l.wrap.b32 	%r4292, %r4286, %r4285, 23;
	mov.b64 	%rd5565, {%r4292, %r4291};
	xor.b64  	%rd5566, %rd5564, %rd5565;
	xor.b64  	%rd5567, %rd5525, %rd5500;
	and.b64  	%rd5568, %rd5550, %rd5567;
	xor.b64  	%rd5569, %rd5568, %rd5500;
	add.s64 	%rd5570, %rd5475, %rd9754;
	ld.const.u64 	%rd5571, [%rd5311+80];
	add.s64 	%rd5572, %rd5570, %rd5571;
	add.s64 	%rd5573, %rd5572, %rd5569;
	add.s64 	%rd5574, %rd5573, %rd5566;
	add.s64 	%rd5575, %rd5574, %rd5486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4293,%dummy}, %rd5561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4294}, %rd5561;
	}
	shf.r.wrap.b32 	%r4295, %r4294, %r4293, 28;
	shf.r.wrap.b32 	%r4296, %r4293, %r4294, 28;
	mov.b64 	%rd5576, {%r4296, %r4295};
	shf.l.wrap.b32 	%r4297, %r4293, %r4294, 30;
	shf.l.wrap.b32 	%r4298, %r4294, %r4293, 30;
	mov.b64 	%rd5577, {%r4298, %r4297};
	xor.b64  	%rd5578, %rd5577, %rd5576;
	shf.l.wrap.b32 	%r4299, %r4293, %r4294, 25;
	shf.l.wrap.b32 	%r4300, %r4294, %r4293, 25;
	mov.b64 	%rd5579, {%r4300, %r4299};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	and.b64  	%rd5581, %rd5561, %rd5536;
	xor.b64  	%rd5582, %rd5561, %rd5536;
	and.b64  	%rd5583, %rd5582, %rd5511;
	or.b64  	%rd5584, %rd5583, %rd5581;
	add.s64 	%rd5585, %rd5574, %rd5584;
	add.s64 	%rd5586, %rd5585, %rd5580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4301,%dummy}, %rd5575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4302}, %rd5575;
	}
	shf.r.wrap.b32 	%r4303, %r4302, %r4301, 14;
	shf.r.wrap.b32 	%r4304, %r4301, %r4302, 14;
	mov.b64 	%rd5587, {%r4304, %r4303};
	shf.r.wrap.b32 	%r4305, %r4302, %r4301, 18;
	shf.r.wrap.b32 	%r4306, %r4301, %r4302, 18;
	mov.b64 	%rd5588, {%r4306, %r4305};
	xor.b64  	%rd5589, %rd5588, %rd5587;
	shf.l.wrap.b32 	%r4307, %r4301, %r4302, 23;
	shf.l.wrap.b32 	%r4308, %r4302, %r4301, 23;
	mov.b64 	%rd5590, {%r4308, %r4307};
	xor.b64  	%rd5591, %rd5589, %rd5590;
	xor.b64  	%rd5592, %rd5550, %rd5525;
	and.b64  	%rd5593, %rd5575, %rd5592;
	xor.b64  	%rd5594, %rd5593, %rd5525;
	add.s64 	%rd5595, %rd5500, %rd9753;
	ld.const.u64 	%rd5596, [%rd5311+88];
	add.s64 	%rd5597, %rd5595, %rd5596;
	add.s64 	%rd5598, %rd5597, %rd5594;
	add.s64 	%rd5599, %rd5598, %rd5591;
	add.s64 	%rd5600, %rd5599, %rd5511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4309,%dummy}, %rd5586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4310}, %rd5586;
	}
	shf.r.wrap.b32 	%r4311, %r4310, %r4309, 28;
	shf.r.wrap.b32 	%r4312, %r4309, %r4310, 28;
	mov.b64 	%rd5601, {%r4312, %r4311};
	shf.l.wrap.b32 	%r4313, %r4309, %r4310, 30;
	shf.l.wrap.b32 	%r4314, %r4310, %r4309, 30;
	mov.b64 	%rd5602, {%r4314, %r4313};
	xor.b64  	%rd5603, %rd5602, %rd5601;
	shf.l.wrap.b32 	%r4315, %r4309, %r4310, 25;
	shf.l.wrap.b32 	%r4316, %r4310, %r4309, 25;
	mov.b64 	%rd5604, {%r4316, %r4315};
	xor.b64  	%rd5605, %rd5603, %rd5604;
	and.b64  	%rd5606, %rd5586, %rd5561;
	xor.b64  	%rd5607, %rd5586, %rd5561;
	and.b64  	%rd5608, %rd5607, %rd5536;
	or.b64  	%rd5609, %rd5608, %rd5606;
	add.s64 	%rd5610, %rd5599, %rd5609;
	add.s64 	%rd5611, %rd5610, %rd5605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4317,%dummy}, %rd5600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4318}, %rd5600;
	}
	shf.r.wrap.b32 	%r4319, %r4318, %r4317, 14;
	shf.r.wrap.b32 	%r4320, %r4317, %r4318, 14;
	mov.b64 	%rd5612, {%r4320, %r4319};
	shf.r.wrap.b32 	%r4321, %r4318, %r4317, 18;
	shf.r.wrap.b32 	%r4322, %r4317, %r4318, 18;
	mov.b64 	%rd5613, {%r4322, %r4321};
	xor.b64  	%rd5614, %rd5613, %rd5612;
	shf.l.wrap.b32 	%r4323, %r4317, %r4318, 23;
	shf.l.wrap.b32 	%r4324, %r4318, %r4317, 23;
	mov.b64 	%rd5615, {%r4324, %r4323};
	xor.b64  	%rd5616, %rd5614, %rd5615;
	xor.b64  	%rd5617, %rd5575, %rd5550;
	and.b64  	%rd5618, %rd5600, %rd5617;
	xor.b64  	%rd5619, %rd5618, %rd5550;
	add.s64 	%rd5620, %rd5525, %rd9752;
	ld.const.u64 	%rd5621, [%rd5311+96];
	add.s64 	%rd5622, %rd5620, %rd5621;
	add.s64 	%rd5623, %rd5622, %rd5619;
	add.s64 	%rd5624, %rd5623, %rd5616;
	add.s64 	%rd9764, %rd5624, %rd5536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4325,%dummy}, %rd5611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4326}, %rd5611;
	}
	shf.r.wrap.b32 	%r4327, %r4326, %r4325, 28;
	shf.r.wrap.b32 	%r4328, %r4325, %r4326, 28;
	mov.b64 	%rd5625, {%r4328, %r4327};
	shf.l.wrap.b32 	%r4329, %r4325, %r4326, 30;
	shf.l.wrap.b32 	%r4330, %r4326, %r4325, 30;
	mov.b64 	%rd5626, {%r4330, %r4329};
	xor.b64  	%rd5627, %rd5626, %rd5625;
	shf.l.wrap.b32 	%r4331, %r4325, %r4326, 25;
	shf.l.wrap.b32 	%r4332, %r4326, %r4325, 25;
	mov.b64 	%rd5628, {%r4332, %r4331};
	xor.b64  	%rd5629, %rd5627, %rd5628;
	and.b64  	%rd5630, %rd5611, %rd5586;
	xor.b64  	%rd5631, %rd5611, %rd5586;
	and.b64  	%rd5632, %rd5631, %rd5561;
	or.b64  	%rd5633, %rd5632, %rd5630;
	add.s64 	%rd5634, %rd5624, %rd5633;
	add.s64 	%rd9760, %rd5634, %rd5629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4333,%dummy}, %rd9764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4334}, %rd9764;
	}
	shf.r.wrap.b32 	%r4335, %r4334, %r4333, 14;
	shf.r.wrap.b32 	%r4336, %r4333, %r4334, 14;
	mov.b64 	%rd5635, {%r4336, %r4335};
	shf.r.wrap.b32 	%r4337, %r4334, %r4333, 18;
	shf.r.wrap.b32 	%r4338, %r4333, %r4334, 18;
	mov.b64 	%rd5636, {%r4338, %r4337};
	xor.b64  	%rd5637, %rd5636, %rd5635;
	shf.l.wrap.b32 	%r4339, %r4333, %r4334, 23;
	shf.l.wrap.b32 	%r4340, %r4334, %r4333, 23;
	mov.b64 	%rd5638, {%r4340, %r4339};
	xor.b64  	%rd5639, %rd5637, %rd5638;
	xor.b64  	%rd5640, %rd5600, %rd5575;
	and.b64  	%rd5641, %rd9764, %rd5640;
	xor.b64  	%rd5642, %rd5641, %rd5575;
	add.s64 	%rd5643, %rd5550, %rd9751;
	ld.const.u64 	%rd5644, [%rd5311+104];
	add.s64 	%rd5645, %rd5643, %rd5644;
	add.s64 	%rd5646, %rd5645, %rd5642;
	add.s64 	%rd5647, %rd5646, %rd5639;
	add.s64 	%rd9763, %rd5647, %rd5561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4341,%dummy}, %rd9760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4342}, %rd9760;
	}
	shf.r.wrap.b32 	%r4343, %r4342, %r4341, 28;
	shf.r.wrap.b32 	%r4344, %r4341, %r4342, 28;
	mov.b64 	%rd5648, {%r4344, %r4343};
	shf.l.wrap.b32 	%r4345, %r4341, %r4342, 30;
	shf.l.wrap.b32 	%r4346, %r4342, %r4341, 30;
	mov.b64 	%rd5649, {%r4346, %r4345};
	xor.b64  	%rd5650, %rd5649, %rd5648;
	shf.l.wrap.b32 	%r4347, %r4341, %r4342, 25;
	shf.l.wrap.b32 	%r4348, %r4342, %r4341, 25;
	mov.b64 	%rd5651, {%r4348, %r4347};
	xor.b64  	%rd5652, %rd5650, %rd5651;
	and.b64  	%rd5653, %rd9760, %rd5611;
	xor.b64  	%rd5654, %rd9760, %rd5611;
	and.b64  	%rd5655, %rd5654, %rd5586;
	or.b64  	%rd5656, %rd5655, %rd5653;
	add.s64 	%rd5657, %rd5647, %rd5656;
	add.s64 	%rd9759, %rd5657, %rd5652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4349,%dummy}, %rd9763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4350}, %rd9763;
	}
	shf.r.wrap.b32 	%r4351, %r4350, %r4349, 14;
	shf.r.wrap.b32 	%r4352, %r4349, %r4350, 14;
	mov.b64 	%rd5658, {%r4352, %r4351};
	shf.r.wrap.b32 	%r4353, %r4350, %r4349, 18;
	shf.r.wrap.b32 	%r4354, %r4349, %r4350, 18;
	mov.b64 	%rd5659, {%r4354, %r4353};
	xor.b64  	%rd5660, %rd5659, %rd5658;
	shf.l.wrap.b32 	%r4355, %r4349, %r4350, 23;
	shf.l.wrap.b32 	%r4356, %r4350, %r4349, 23;
	mov.b64 	%rd5661, {%r4356, %r4355};
	xor.b64  	%rd5662, %rd5660, %rd5661;
	xor.b64  	%rd5663, %rd9764, %rd5600;
	and.b64  	%rd5664, %rd9763, %rd5663;
	xor.b64  	%rd5665, %rd5664, %rd5600;
	add.s64 	%rd5666, %rd5575, %rd9750;
	ld.const.u64 	%rd5667, [%rd5311+112];
	add.s64 	%rd5668, %rd5666, %rd5667;
	add.s64 	%rd5669, %rd5668, %rd5665;
	add.s64 	%rd5670, %rd5669, %rd5662;
	add.s64 	%rd9762, %rd5670, %rd5586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4357,%dummy}, %rd9759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4358}, %rd9759;
	}
	shf.r.wrap.b32 	%r4359, %r4358, %r4357, 28;
	shf.r.wrap.b32 	%r4360, %r4357, %r4358, 28;
	mov.b64 	%rd5671, {%r4360, %r4359};
	shf.l.wrap.b32 	%r4361, %r4357, %r4358, 30;
	shf.l.wrap.b32 	%r4362, %r4358, %r4357, 30;
	mov.b64 	%rd5672, {%r4362, %r4361};
	xor.b64  	%rd5673, %rd5672, %rd5671;
	shf.l.wrap.b32 	%r4363, %r4357, %r4358, 25;
	shf.l.wrap.b32 	%r4364, %r4358, %r4357, 25;
	mov.b64 	%rd5674, {%r4364, %r4363};
	xor.b64  	%rd5675, %rd5673, %rd5674;
	and.b64  	%rd5676, %rd9759, %rd9760;
	xor.b64  	%rd5677, %rd9759, %rd9760;
	and.b64  	%rd5678, %rd5677, %rd5611;
	or.b64  	%rd5679, %rd5678, %rd5676;
	add.s64 	%rd5680, %rd5670, %rd5679;
	add.s64 	%rd9758, %rd5680, %rd5675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4365,%dummy}, %rd9762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4366}, %rd9762;
	}
	shf.r.wrap.b32 	%r4367, %r4366, %r4365, 14;
	shf.r.wrap.b32 	%r4368, %r4365, %r4366, 14;
	mov.b64 	%rd5681, {%r4368, %r4367};
	shf.r.wrap.b32 	%r4369, %r4366, %r4365, 18;
	shf.r.wrap.b32 	%r4370, %r4365, %r4366, 18;
	mov.b64 	%rd5682, {%r4370, %r4369};
	xor.b64  	%rd5683, %rd5682, %rd5681;
	shf.l.wrap.b32 	%r4371, %r4365, %r4366, 23;
	shf.l.wrap.b32 	%r4372, %r4366, %r4365, 23;
	mov.b64 	%rd5684, {%r4372, %r4371};
	xor.b64  	%rd5685, %rd5683, %rd5684;
	xor.b64  	%rd5686, %rd9763, %rd9764;
	and.b64  	%rd5687, %rd9762, %rd5686;
	xor.b64  	%rd5688, %rd5687, %rd9764;
	add.s64 	%rd5689, %rd5600, %rd9749;
	ld.const.u64 	%rd5690, [%rd5311+120];
	add.s64 	%rd5691, %rd5689, %rd5690;
	add.s64 	%rd5692, %rd5691, %rd5688;
	add.s64 	%rd5693, %rd5692, %rd5685;
	add.s64 	%rd9761, %rd5693, %rd5611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4373,%dummy}, %rd9758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4374}, %rd9758;
	}
	shf.r.wrap.b32 	%r4375, %r4374, %r4373, 28;
	shf.r.wrap.b32 	%r4376, %r4373, %r4374, 28;
	mov.b64 	%rd5694, {%r4376, %r4375};
	shf.l.wrap.b32 	%r4377, %r4373, %r4374, 30;
	shf.l.wrap.b32 	%r4378, %r4374, %r4373, 30;
	mov.b64 	%rd5695, {%r4378, %r4377};
	xor.b64  	%rd5696, %rd5695, %rd5694;
	shf.l.wrap.b32 	%r4379, %r4373, %r4374, 25;
	shf.l.wrap.b32 	%r4380, %r4374, %r4373, 25;
	mov.b64 	%rd5697, {%r4380, %r4379};
	xor.b64  	%rd5698, %rd5696, %rd5697;
	and.b64  	%rd5699, %rd9758, %rd9759;
	xor.b64  	%rd5700, %rd9758, %rd9759;
	and.b64  	%rd5701, %rd5700, %rd9760;
	or.b64  	%rd5702, %rd5701, %rd5699;
	add.s64 	%rd5703, %rd5693, %rd5702;
	add.s64 	%rd9757, %rd5703, %rd5698;
	add.s32 	%r7471, %r7471, 16;
	setp.lt.s32	%p37, %r7471, 80;
	@%p37 bra 	BB3_26;

	add.s64 	%rd9780, %rd9780, %rd9757;
	st.local.u64 	[%rd384+-192], %rd9780;
	add.s64 	%rd9779, %rd9779, %rd9758;
	st.local.u64 	[%rd384+-184], %rd9779;
	add.s64 	%rd9778, %rd9778, %rd9759;
	st.local.u64 	[%rd384+-176], %rd9778;
	add.s64 	%rd9777, %rd9777, %rd9760;
	st.local.u64 	[%rd384+-168], %rd9777;
	add.s64 	%rd9776, %rd9776, %rd9761;
	st.local.u64 	[%rd384+-160], %rd9776;
	add.s64 	%rd9775, %rd9775, %rd9762;
	st.local.u64 	[%rd384+-152], %rd9775;
	add.s64 	%rd9774, %rd9774, %rd9763;
	st.local.u64 	[%rd384+-144], %rd9774;
	add.s64 	%rd9773, %rd9773, %rd9764;
	st.local.u64 	[%rd384+-136], %rd9773;
	mov.u32 	%r7472, 0;
	st.local.v2.u32 	[%rd384+-128], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-120], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-112], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-104], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-96], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-88], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-80], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-72], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-64], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-56], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-48], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-40], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-32], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-24], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-16], {%r7472, %r7472};
	st.local.v2.u32 	[%rd384+-8], {%r7472, %r7472};
	mov.u32 	%r7473, %r7472;
	mov.u32 	%r7474, %r7472;
	mov.u32 	%r7475, %r7472;
	mov.u32 	%r7476, %r7472;
	mov.u32 	%r7477, %r7472;
	mov.u32 	%r7478, %r7472;
	mov.u32 	%r7479, %r7472;
	mov.u32 	%r7480, %r7472;
	mov.u32 	%r7481, %r7472;
	mov.u32 	%r7482, %r7472;
	mov.u32 	%r7483, %r7472;
	mov.u32 	%r7484, %r7472;
	mov.u32 	%r7485, %r7472;
	mov.u32 	%r7486, %r7472;
	mov.u32 	%r7487, %r7472;
	mov.u32 	%r7488, %r7472;
	mov.u32 	%r7489, %r7472;
	mov.u32 	%r7490, %r7472;
	mov.u32 	%r7491, %r7472;
	mov.u32 	%r7492, %r7472;
	mov.u32 	%r7493, %r7472;
	mov.u32 	%r7494, %r7472;
	mov.u32 	%r7495, %r7472;
	mov.u32 	%r7496, %r7472;
	mov.u32 	%r7497, %r7472;
	mov.u32 	%r7498, %r7472;
	mov.u32 	%r7499, %r7472;
	mov.u32 	%r7500, %r7472;
	mov.u32 	%r7501, %r7472;

BB3_28:
	mov.u32 	%r7365, 0;
	shl.b32 	%r4412, %r255, 3;
	st.local.v2.u32 	[%rd384+-8], {%r7365, %r4412};
	mov.b64	%rd9797, {%r7500, %r7501};
	mov.b64	%rd9798, {%r7498, %r7499};
	mov.b64	%rd9799, {%r7496, %r7497};
	mov.b64	%rd9800, {%r7494, %r7495};
	mov.b64	%rd9801, {%r7492, %r7493};
	mov.b64	%rd9802, {%r7490, %r7491};
	mov.b64	%rd9803, {%r7488, %r7489};
	mov.b64	%rd9804, {%r7486, %r7487};
	mov.b64	%rd9788, {%r7484, %r7485};
	mov.b64	%rd9787, {%r7482, %r7483};
	mov.b64	%rd9786, {%r7480, %r7481};
	mov.b64	%rd9785, {%r7478, %r7479};
	mov.b64	%rd9784, {%r7476, %r7477};
	mov.b64	%rd9783, {%r7474, %r7475};
	mov.b64	%rd9782, {%r7472, %r7473};
	mov.b64	%rd9781, {%r4412, %r7365};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd9776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd9776;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 18;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 18;
	mov.b64 	%rd5704, {%r4417, %r4416};
	shf.r.wrap.b32 	%r4418, %r4415, %r4414, 14;
	shf.r.wrap.b32 	%r4419, %r4414, %r4415, 14;
	mov.b64 	%rd5705, {%r4419, %r4418};
	xor.b64  	%rd5706, %rd5704, %rd5705;
	shf.l.wrap.b32 	%r4420, %r4414, %r4415, 23;
	shf.l.wrap.b32 	%r4421, %r4415, %r4414, 23;
	mov.b64 	%rd5707, {%r4421, %r4420};
	xor.b64  	%rd5708, %rd5706, %rd5707;
	xor.b64  	%rd5709, %rd9774, %rd9775;
	and.b64  	%rd5710, %rd5709, %rd9776;
	xor.b64  	%rd5711, %rd5710, %rd9774;
	add.s64 	%rd5712, %rd5711, %rd9773;
	add.s64 	%rd5713, %rd5712, %rd9797;
	add.s64 	%rd5714, %rd5713, %rd9722;
	add.s64 	%rd5715, %rd5714, %rd5708;
	add.s64 	%rd5716, %rd5715, %rd9777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4422}, %rd9780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4423,%dummy}, %rd9780;
	}
	shf.l.wrap.b32 	%r4424, %r4423, %r4422, 30;
	shf.l.wrap.b32 	%r4425, %r4422, %r4423, 30;
	mov.b64 	%rd5717, {%r4425, %r4424};
	shf.r.wrap.b32 	%r4426, %r4422, %r4423, 28;
	shf.r.wrap.b32 	%r4427, %r4423, %r4422, 28;
	mov.b64 	%rd5718, {%r4427, %r4426};
	xor.b64  	%rd5719, %rd5717, %rd5718;
	shf.l.wrap.b32 	%r4428, %r4423, %r4422, 25;
	shf.l.wrap.b32 	%r4429, %r4422, %r4423, 25;
	mov.b64 	%rd5720, {%r4429, %r4428};
	xor.b64  	%rd5721, %rd5719, %rd5720;
	xor.b64  	%rd5722, %rd9779, %rd9780;
	and.b64  	%rd5723, %rd9778, %rd5722;
	and.b64  	%rd5724, %rd9779, %rd9780;
	or.b64  	%rd5725, %rd5723, %rd5724;
	add.s64 	%rd5726, %rd5715, %rd5725;
	add.s64 	%rd5727, %rd5726, %rd5721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4431}, %rd5716;
	}
	shf.r.wrap.b32 	%r4432, %r4431, %r4430, 14;
	shf.r.wrap.b32 	%r4433, %r4430, %r4431, 14;
	mov.b64 	%rd5728, {%r4433, %r4432};
	shf.r.wrap.b32 	%r4434, %r4431, %r4430, 18;
	shf.r.wrap.b32 	%r4435, %r4430, %r4431, 18;
	mov.b64 	%rd5729, {%r4435, %r4434};
	xor.b64  	%rd5730, %rd5729, %rd5728;
	shf.l.wrap.b32 	%r4436, %r4430, %r4431, 23;
	shf.l.wrap.b32 	%r4437, %r4431, %r4430, 23;
	mov.b64 	%rd5731, {%r4437, %r4436};
	xor.b64  	%rd5732, %rd5730, %rd5731;
	xor.b64  	%rd5733, %rd9775, %rd9776;
	and.b64  	%rd5734, %rd5716, %rd5733;
	xor.b64  	%rd5735, %rd5734, %rd9775;
	add.s64 	%rd5736, %rd9798, %rd9774;
	add.s64 	%rd5737, %rd5736, %rd9721;
	add.s64 	%rd5738, %rd5737, %rd5735;
	add.s64 	%rd5739, %rd5738, %rd5732;
	add.s64 	%rd5740, %rd5739, %rd9778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd5727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4439}, %rd5727;
	}
	shf.r.wrap.b32 	%r4440, %r4439, %r4438, 28;
	shf.r.wrap.b32 	%r4441, %r4438, %r4439, 28;
	mov.b64 	%rd5741, {%r4441, %r4440};
	shf.l.wrap.b32 	%r4442, %r4438, %r4439, 30;
	shf.l.wrap.b32 	%r4443, %r4439, %r4438, 30;
	mov.b64 	%rd5742, {%r4443, %r4442};
	xor.b64  	%rd5743, %rd5742, %rd5741;
	shf.l.wrap.b32 	%r4444, %r4438, %r4439, 25;
	shf.l.wrap.b32 	%r4445, %r4439, %r4438, 25;
	mov.b64 	%rd5744, {%r4445, %r4444};
	xor.b64  	%rd5745, %rd5743, %rd5744;
	and.b64  	%rd5746, %rd5727, %rd9780;
	xor.b64  	%rd5747, %rd5727, %rd9780;
	and.b64  	%rd5748, %rd5747, %rd9779;
	or.b64  	%rd5749, %rd5748, %rd5746;
	add.s64 	%rd5750, %rd5739, %rd5749;
	add.s64 	%rd5751, %rd5750, %rd5745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd5740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4447}, %rd5740;
	}
	shf.r.wrap.b32 	%r4448, %r4447, %r4446, 14;
	shf.r.wrap.b32 	%r4449, %r4446, %r4447, 14;
	mov.b64 	%rd5752, {%r4449, %r4448};
	shf.r.wrap.b32 	%r4450, %r4447, %r4446, 18;
	shf.r.wrap.b32 	%r4451, %r4446, %r4447, 18;
	mov.b64 	%rd5753, {%r4451, %r4450};
	xor.b64  	%rd5754, %rd5753, %rd5752;
	shf.l.wrap.b32 	%r4452, %r4446, %r4447, 23;
	shf.l.wrap.b32 	%r4453, %r4447, %r4446, 23;
	mov.b64 	%rd5755, {%r4453, %r4452};
	xor.b64  	%rd5756, %rd5754, %rd5755;
	xor.b64  	%rd5757, %rd5716, %rd9776;
	and.b64  	%rd5758, %rd5740, %rd5757;
	xor.b64  	%rd5759, %rd5758, %rd9776;
	add.s64 	%rd5760, %rd9799, %rd9775;
	add.s64 	%rd5761, %rd5760, %rd9720;
	add.s64 	%rd5762, %rd5761, %rd5759;
	add.s64 	%rd5763, %rd5762, %rd5756;
	add.s64 	%rd5764, %rd5763, %rd9779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd5751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd5751;
	}
	shf.r.wrap.b32 	%r4456, %r4455, %r4454, 28;
	shf.r.wrap.b32 	%r4457, %r4454, %r4455, 28;
	mov.b64 	%rd5765, {%r4457, %r4456};
	shf.l.wrap.b32 	%r4458, %r4454, %r4455, 30;
	shf.l.wrap.b32 	%r4459, %r4455, %r4454, 30;
	mov.b64 	%rd5766, {%r4459, %r4458};
	xor.b64  	%rd5767, %rd5766, %rd5765;
	shf.l.wrap.b32 	%r4460, %r4454, %r4455, 25;
	shf.l.wrap.b32 	%r4461, %r4455, %r4454, 25;
	mov.b64 	%rd5768, {%r4461, %r4460};
	xor.b64  	%rd5769, %rd5767, %rd5768;
	and.b64  	%rd5770, %rd5751, %rd5727;
	xor.b64  	%rd5771, %rd5751, %rd5727;
	and.b64  	%rd5772, %rd5771, %rd9780;
	or.b64  	%rd5773, %rd5772, %rd5770;
	add.s64 	%rd5774, %rd5763, %rd5773;
	add.s64 	%rd5775, %rd5774, %rd5769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4462,%dummy}, %rd5764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4463}, %rd5764;
	}
	shf.r.wrap.b32 	%r4464, %r4463, %r4462, 14;
	shf.r.wrap.b32 	%r4465, %r4462, %r4463, 14;
	mov.b64 	%rd5776, {%r4465, %r4464};
	shf.r.wrap.b32 	%r4466, %r4463, %r4462, 18;
	shf.r.wrap.b32 	%r4467, %r4462, %r4463, 18;
	mov.b64 	%rd5777, {%r4467, %r4466};
	xor.b64  	%rd5778, %rd5777, %rd5776;
	shf.l.wrap.b32 	%r4468, %r4462, %r4463, 23;
	shf.l.wrap.b32 	%r4469, %r4463, %r4462, 23;
	mov.b64 	%rd5779, {%r4469, %r4468};
	xor.b64  	%rd5780, %rd5778, %rd5779;
	xor.b64  	%rd5781, %rd5740, %rd5716;
	and.b64  	%rd5782, %rd5764, %rd5781;
	xor.b64  	%rd5783, %rd5782, %rd5716;
	add.s64 	%rd5784, %rd9800, %rd9776;
	add.s64 	%rd5785, %rd5784, %rd9719;
	add.s64 	%rd5786, %rd5785, %rd5783;
	add.s64 	%rd5787, %rd5786, %rd5780;
	add.s64 	%rd5788, %rd5787, %rd9780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd5775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd5775;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 28;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 28;
	mov.b64 	%rd5789, {%r4473, %r4472};
	shf.l.wrap.b32 	%r4474, %r4470, %r4471, 30;
	shf.l.wrap.b32 	%r4475, %r4471, %r4470, 30;
	mov.b64 	%rd5790, {%r4475, %r4474};
	xor.b64  	%rd5791, %rd5790, %rd5789;
	shf.l.wrap.b32 	%r4476, %r4470, %r4471, 25;
	shf.l.wrap.b32 	%r4477, %r4471, %r4470, 25;
	mov.b64 	%rd5792, {%r4477, %r4476};
	xor.b64  	%rd5793, %rd5791, %rd5792;
	and.b64  	%rd5794, %rd5775, %rd5751;
	xor.b64  	%rd5795, %rd5775, %rd5751;
	and.b64  	%rd5796, %rd5795, %rd5727;
	or.b64  	%rd5797, %rd5796, %rd5794;
	add.s64 	%rd5798, %rd5787, %rd5797;
	add.s64 	%rd5799, %rd5798, %rd5793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4478,%dummy}, %rd5788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4479}, %rd5788;
	}
	shf.r.wrap.b32 	%r4480, %r4479, %r4478, 14;
	shf.r.wrap.b32 	%r4481, %r4478, %r4479, 14;
	mov.b64 	%rd5800, {%r4481, %r4480};
	shf.r.wrap.b32 	%r4482, %r4479, %r4478, 18;
	shf.r.wrap.b32 	%r4483, %r4478, %r4479, 18;
	mov.b64 	%rd5801, {%r4483, %r4482};
	xor.b64  	%rd5802, %rd5801, %rd5800;
	shf.l.wrap.b32 	%r4484, %r4478, %r4479, 23;
	shf.l.wrap.b32 	%r4485, %r4479, %r4478, 23;
	mov.b64 	%rd5803, {%r4485, %r4484};
	xor.b64  	%rd5804, %rd5802, %rd5803;
	xor.b64  	%rd5805, %rd5764, %rd5740;
	and.b64  	%rd5806, %rd5788, %rd5805;
	xor.b64  	%rd5807, %rd5806, %rd5740;
	add.s64 	%rd5808, %rd5716, %rd9801;
	add.s64 	%rd5809, %rd5808, %rd9718;
	add.s64 	%rd5810, %rd5809, %rd5807;
	add.s64 	%rd5811, %rd5810, %rd5804;
	add.s64 	%rd5812, %rd5811, %rd5727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd5799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4487}, %rd5799;
	}
	shf.r.wrap.b32 	%r4488, %r4487, %r4486, 28;
	shf.r.wrap.b32 	%r4489, %r4486, %r4487, 28;
	mov.b64 	%rd5813, {%r4489, %r4488};
	shf.l.wrap.b32 	%r4490, %r4486, %r4487, 30;
	shf.l.wrap.b32 	%r4491, %r4487, %r4486, 30;
	mov.b64 	%rd5814, {%r4491, %r4490};
	xor.b64  	%rd5815, %rd5814, %rd5813;
	shf.l.wrap.b32 	%r4492, %r4486, %r4487, 25;
	shf.l.wrap.b32 	%r4493, %r4487, %r4486, 25;
	mov.b64 	%rd5816, {%r4493, %r4492};
	xor.b64  	%rd5817, %rd5815, %rd5816;
	and.b64  	%rd5818, %rd5799, %rd5775;
	xor.b64  	%rd5819, %rd5799, %rd5775;
	and.b64  	%rd5820, %rd5819, %rd5751;
	or.b64  	%rd5821, %rd5820, %rd5818;
	add.s64 	%rd5822, %rd5811, %rd5821;
	add.s64 	%rd5823, %rd5822, %rd5817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd5812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd5812;
	}
	shf.r.wrap.b32 	%r4496, %r4495, %r4494, 14;
	shf.r.wrap.b32 	%r4497, %r4494, %r4495, 14;
	mov.b64 	%rd5824, {%r4497, %r4496};
	shf.r.wrap.b32 	%r4498, %r4495, %r4494, 18;
	shf.r.wrap.b32 	%r4499, %r4494, %r4495, 18;
	mov.b64 	%rd5825, {%r4499, %r4498};
	xor.b64  	%rd5826, %rd5825, %rd5824;
	shf.l.wrap.b32 	%r4500, %r4494, %r4495, 23;
	shf.l.wrap.b32 	%r4501, %r4495, %r4494, 23;
	mov.b64 	%rd5827, {%r4501, %r4500};
	xor.b64  	%rd5828, %rd5826, %rd5827;
	xor.b64  	%rd5829, %rd5788, %rd5764;
	and.b64  	%rd5830, %rd5812, %rd5829;
	xor.b64  	%rd5831, %rd5830, %rd5764;
	add.s64 	%rd5832, %rd5740, %rd9802;
	add.s64 	%rd5833, %rd5832, %rd9717;
	add.s64 	%rd5834, %rd5833, %rd5831;
	add.s64 	%rd5835, %rd5834, %rd5828;
	add.s64 	%rd5836, %rd5835, %rd5751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4502,%dummy}, %rd5823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4503}, %rd5823;
	}
	shf.r.wrap.b32 	%r4504, %r4503, %r4502, 28;
	shf.r.wrap.b32 	%r4505, %r4502, %r4503, 28;
	mov.b64 	%rd5837, {%r4505, %r4504};
	shf.l.wrap.b32 	%r4506, %r4502, %r4503, 30;
	shf.l.wrap.b32 	%r4507, %r4503, %r4502, 30;
	mov.b64 	%rd5838, {%r4507, %r4506};
	xor.b64  	%rd5839, %rd5838, %rd5837;
	shf.l.wrap.b32 	%r4508, %r4502, %r4503, 25;
	shf.l.wrap.b32 	%r4509, %r4503, %r4502, 25;
	mov.b64 	%rd5840, {%r4509, %r4508};
	xor.b64  	%rd5841, %rd5839, %rd5840;
	and.b64  	%rd5842, %rd5823, %rd5799;
	xor.b64  	%rd5843, %rd5823, %rd5799;
	and.b64  	%rd5844, %rd5843, %rd5775;
	or.b64  	%rd5845, %rd5844, %rd5842;
	add.s64 	%rd5846, %rd5835, %rd5845;
	add.s64 	%rd5847, %rd5846, %rd5841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4510,%dummy}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4511}, %rd5836;
	}
	shf.r.wrap.b32 	%r4512, %r4511, %r4510, 14;
	shf.r.wrap.b32 	%r4513, %r4510, %r4511, 14;
	mov.b64 	%rd5848, {%r4513, %r4512};
	shf.r.wrap.b32 	%r4514, %r4511, %r4510, 18;
	shf.r.wrap.b32 	%r4515, %r4510, %r4511, 18;
	mov.b64 	%rd5849, {%r4515, %r4514};
	xor.b64  	%rd5850, %rd5849, %rd5848;
	shf.l.wrap.b32 	%r4516, %r4510, %r4511, 23;
	shf.l.wrap.b32 	%r4517, %r4511, %r4510, 23;
	mov.b64 	%rd5851, {%r4517, %r4516};
	xor.b64  	%rd5852, %rd5850, %rd5851;
	xor.b64  	%rd5853, %rd5812, %rd5788;
	and.b64  	%rd5854, %rd5836, %rd5853;
	xor.b64  	%rd5855, %rd5854, %rd5788;
	add.s64 	%rd5856, %rd5764, %rd9803;
	add.s64 	%rd5857, %rd5856, %rd9716;
	add.s64 	%rd5858, %rd5857, %rd5855;
	add.s64 	%rd5859, %rd5858, %rd5852;
	add.s64 	%rd5860, %rd5859, %rd5775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4518,%dummy}, %rd5847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4519}, %rd5847;
	}
	shf.r.wrap.b32 	%r4520, %r4519, %r4518, 28;
	shf.r.wrap.b32 	%r4521, %r4518, %r4519, 28;
	mov.b64 	%rd5861, {%r4521, %r4520};
	shf.l.wrap.b32 	%r4522, %r4518, %r4519, 30;
	shf.l.wrap.b32 	%r4523, %r4519, %r4518, 30;
	mov.b64 	%rd5862, {%r4523, %r4522};
	xor.b64  	%rd5863, %rd5862, %rd5861;
	shf.l.wrap.b32 	%r4524, %r4518, %r4519, 25;
	shf.l.wrap.b32 	%r4525, %r4519, %r4518, 25;
	mov.b64 	%rd5864, {%r4525, %r4524};
	xor.b64  	%rd5865, %rd5863, %rd5864;
	and.b64  	%rd5866, %rd5847, %rd5823;
	xor.b64  	%rd5867, %rd5847, %rd5823;
	and.b64  	%rd5868, %rd5867, %rd5799;
	or.b64  	%rd5869, %rd5868, %rd5866;
	add.s64 	%rd5870, %rd5859, %rd5869;
	add.s64 	%rd5871, %rd5870, %rd5865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4526,%dummy}, %rd5860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4527}, %rd5860;
	}
	shf.r.wrap.b32 	%r4528, %r4527, %r4526, 14;
	shf.r.wrap.b32 	%r4529, %r4526, %r4527, 14;
	mov.b64 	%rd5872, {%r4529, %r4528};
	shf.r.wrap.b32 	%r4530, %r4527, %r4526, 18;
	shf.r.wrap.b32 	%r4531, %r4526, %r4527, 18;
	mov.b64 	%rd5873, {%r4531, %r4530};
	xor.b64  	%rd5874, %rd5873, %rd5872;
	shf.l.wrap.b32 	%r4532, %r4526, %r4527, 23;
	shf.l.wrap.b32 	%r4533, %r4527, %r4526, 23;
	mov.b64 	%rd5875, {%r4533, %r4532};
	xor.b64  	%rd5876, %rd5874, %rd5875;
	xor.b64  	%rd5877, %rd5836, %rd5812;
	and.b64  	%rd5878, %rd5860, %rd5877;
	xor.b64  	%rd5879, %rd5878, %rd5812;
	add.s64 	%rd5880, %rd5788, %rd9804;
	add.s64 	%rd5881, %rd5880, %rd9715;
	add.s64 	%rd5882, %rd5881, %rd5879;
	add.s64 	%rd5883, %rd5882, %rd5876;
	add.s64 	%rd5884, %rd5883, %rd5799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4534,%dummy}, %rd5871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4535}, %rd5871;
	}
	shf.r.wrap.b32 	%r4536, %r4535, %r4534, 28;
	shf.r.wrap.b32 	%r4537, %r4534, %r4535, 28;
	mov.b64 	%rd5885, {%r4537, %r4536};
	shf.l.wrap.b32 	%r4538, %r4534, %r4535, 30;
	shf.l.wrap.b32 	%r4539, %r4535, %r4534, 30;
	mov.b64 	%rd5886, {%r4539, %r4538};
	xor.b64  	%rd5887, %rd5886, %rd5885;
	shf.l.wrap.b32 	%r4540, %r4534, %r4535, 25;
	shf.l.wrap.b32 	%r4541, %r4535, %r4534, 25;
	mov.b64 	%rd5888, {%r4541, %r4540};
	xor.b64  	%rd5889, %rd5887, %rd5888;
	and.b64  	%rd5890, %rd5871, %rd5847;
	xor.b64  	%rd5891, %rd5871, %rd5847;
	and.b64  	%rd5892, %rd5891, %rd5823;
	or.b64  	%rd5893, %rd5892, %rd5890;
	add.s64 	%rd5894, %rd5883, %rd5893;
	add.s64 	%rd5895, %rd5894, %rd5889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd5884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4543}, %rd5884;
	}
	shf.r.wrap.b32 	%r4544, %r4543, %r4542, 14;
	shf.r.wrap.b32 	%r4545, %r4542, %r4543, 14;
	mov.b64 	%rd5896, {%r4545, %r4544};
	shf.r.wrap.b32 	%r4546, %r4543, %r4542, 18;
	shf.r.wrap.b32 	%r4547, %r4542, %r4543, 18;
	mov.b64 	%rd5897, {%r4547, %r4546};
	xor.b64  	%rd5898, %rd5897, %rd5896;
	shf.l.wrap.b32 	%r4548, %r4542, %r4543, 23;
	shf.l.wrap.b32 	%r4549, %r4543, %r4542, 23;
	mov.b64 	%rd5899, {%r4549, %r4548};
	xor.b64  	%rd5900, %rd5898, %rd5899;
	xor.b64  	%rd5901, %rd5860, %rd5836;
	and.b64  	%rd5902, %rd5884, %rd5901;
	xor.b64  	%rd5903, %rd5902, %rd5836;
	add.s64 	%rd5904, %rd5812, %rd9788;
	add.s64 	%rd5905, %rd5904, %rd9714;
	add.s64 	%rd5906, %rd5905, %rd5903;
	add.s64 	%rd5907, %rd5906, %rd5900;
	add.s64 	%rd5908, %rd5907, %rd5823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd5895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd5895;
	}
	shf.r.wrap.b32 	%r4552, %r4551, %r4550, 28;
	shf.r.wrap.b32 	%r4553, %r4550, %r4551, 28;
	mov.b64 	%rd5909, {%r4553, %r4552};
	shf.l.wrap.b32 	%r4554, %r4550, %r4551, 30;
	shf.l.wrap.b32 	%r4555, %r4551, %r4550, 30;
	mov.b64 	%rd5910, {%r4555, %r4554};
	xor.b64  	%rd5911, %rd5910, %rd5909;
	shf.l.wrap.b32 	%r4556, %r4550, %r4551, 25;
	shf.l.wrap.b32 	%r4557, %r4551, %r4550, 25;
	mov.b64 	%rd5912, {%r4557, %r4556};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	and.b64  	%rd5914, %rd5895, %rd5871;
	xor.b64  	%rd5915, %rd5895, %rd5871;
	and.b64  	%rd5916, %rd5915, %rd5847;
	or.b64  	%rd5917, %rd5916, %rd5914;
	add.s64 	%rd5918, %rd5907, %rd5917;
	add.s64 	%rd5919, %rd5918, %rd5913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4558,%dummy}, %rd5908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4559}, %rd5908;
	}
	shf.r.wrap.b32 	%r4560, %r4559, %r4558, 14;
	shf.r.wrap.b32 	%r4561, %r4558, %r4559, 14;
	mov.b64 	%rd5920, {%r4561, %r4560};
	shf.r.wrap.b32 	%r4562, %r4559, %r4558, 18;
	shf.r.wrap.b32 	%r4563, %r4558, %r4559, 18;
	mov.b64 	%rd5921, {%r4563, %r4562};
	xor.b64  	%rd5922, %rd5921, %rd5920;
	shf.l.wrap.b32 	%r4564, %r4558, %r4559, 23;
	shf.l.wrap.b32 	%r4565, %r4559, %r4558, 23;
	mov.b64 	%rd5923, {%r4565, %r4564};
	xor.b64  	%rd5924, %rd5922, %rd5923;
	xor.b64  	%rd5925, %rd5884, %rd5860;
	and.b64  	%rd5926, %rd5908, %rd5925;
	xor.b64  	%rd5927, %rd5926, %rd5860;
	add.s64 	%rd5928, %rd5836, %rd9787;
	add.s64 	%rd5929, %rd5928, %rd9713;
	add.s64 	%rd5930, %rd5929, %rd5927;
	add.s64 	%rd5931, %rd5930, %rd5924;
	add.s64 	%rd5932, %rd5931, %rd5847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4566,%dummy}, %rd5919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4567}, %rd5919;
	}
	shf.r.wrap.b32 	%r4568, %r4567, %r4566, 28;
	shf.r.wrap.b32 	%r4569, %r4566, %r4567, 28;
	mov.b64 	%rd5933, {%r4569, %r4568};
	shf.l.wrap.b32 	%r4570, %r4566, %r4567, 30;
	shf.l.wrap.b32 	%r4571, %r4567, %r4566, 30;
	mov.b64 	%rd5934, {%r4571, %r4570};
	xor.b64  	%rd5935, %rd5934, %rd5933;
	shf.l.wrap.b32 	%r4572, %r4566, %r4567, 25;
	shf.l.wrap.b32 	%r4573, %r4567, %r4566, 25;
	mov.b64 	%rd5936, {%r4573, %r4572};
	xor.b64  	%rd5937, %rd5935, %rd5936;
	and.b64  	%rd5938, %rd5919, %rd5895;
	xor.b64  	%rd5939, %rd5919, %rd5895;
	and.b64  	%rd5940, %rd5939, %rd5871;
	or.b64  	%rd5941, %rd5940, %rd5938;
	add.s64 	%rd5942, %rd5931, %rd5941;
	add.s64 	%rd5943, %rd5942, %rd5937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4574,%dummy}, %rd5932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4575}, %rd5932;
	}
	shf.r.wrap.b32 	%r4576, %r4575, %r4574, 14;
	shf.r.wrap.b32 	%r4577, %r4574, %r4575, 14;
	mov.b64 	%rd5944, {%r4577, %r4576};
	shf.r.wrap.b32 	%r4578, %r4575, %r4574, 18;
	shf.r.wrap.b32 	%r4579, %r4574, %r4575, 18;
	mov.b64 	%rd5945, {%r4579, %r4578};
	xor.b64  	%rd5946, %rd5945, %rd5944;
	shf.l.wrap.b32 	%r4580, %r4574, %r4575, 23;
	shf.l.wrap.b32 	%r4581, %r4575, %r4574, 23;
	mov.b64 	%rd5947, {%r4581, %r4580};
	xor.b64  	%rd5948, %rd5946, %rd5947;
	xor.b64  	%rd5949, %rd5908, %rd5884;
	and.b64  	%rd5950, %rd5932, %rd5949;
	xor.b64  	%rd5951, %rd5950, %rd5884;
	add.s64 	%rd5952, %rd5860, %rd9786;
	add.s64 	%rd5953, %rd5952, %rd9712;
	add.s64 	%rd5954, %rd5953, %rd5951;
	add.s64 	%rd5955, %rd5954, %rd5948;
	add.s64 	%rd5956, %rd5955, %rd5871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4582,%dummy}, %rd5943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4583}, %rd5943;
	}
	shf.r.wrap.b32 	%r4584, %r4583, %r4582, 28;
	shf.r.wrap.b32 	%r4585, %r4582, %r4583, 28;
	mov.b64 	%rd5957, {%r4585, %r4584};
	shf.l.wrap.b32 	%r4586, %r4582, %r4583, 30;
	shf.l.wrap.b32 	%r4587, %r4583, %r4582, 30;
	mov.b64 	%rd5958, {%r4587, %r4586};
	xor.b64  	%rd5959, %rd5958, %rd5957;
	shf.l.wrap.b32 	%r4588, %r4582, %r4583, 25;
	shf.l.wrap.b32 	%r4589, %r4583, %r4582, 25;
	mov.b64 	%rd5960, {%r4589, %r4588};
	xor.b64  	%rd5961, %rd5959, %rd5960;
	and.b64  	%rd5962, %rd5943, %rd5919;
	xor.b64  	%rd5963, %rd5943, %rd5919;
	and.b64  	%rd5964, %rd5963, %rd5895;
	or.b64  	%rd5965, %rd5964, %rd5962;
	add.s64 	%rd5966, %rd5955, %rd5965;
	add.s64 	%rd5967, %rd5966, %rd5961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4590,%dummy}, %rd5956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4591}, %rd5956;
	}
	shf.r.wrap.b32 	%r4592, %r4591, %r4590, 14;
	shf.r.wrap.b32 	%r4593, %r4590, %r4591, 14;
	mov.b64 	%rd5968, {%r4593, %r4592};
	shf.r.wrap.b32 	%r4594, %r4591, %r4590, 18;
	shf.r.wrap.b32 	%r4595, %r4590, %r4591, 18;
	mov.b64 	%rd5969, {%r4595, %r4594};
	xor.b64  	%rd5970, %rd5969, %rd5968;
	shf.l.wrap.b32 	%r4596, %r4590, %r4591, 23;
	shf.l.wrap.b32 	%r4597, %r4591, %r4590, 23;
	mov.b64 	%rd5971, {%r4597, %r4596};
	xor.b64  	%rd5972, %rd5970, %rd5971;
	xor.b64  	%rd5973, %rd5932, %rd5908;
	and.b64  	%rd5974, %rd5956, %rd5973;
	xor.b64  	%rd5975, %rd5974, %rd5908;
	add.s64 	%rd5976, %rd5884, %rd9785;
	add.s64 	%rd5977, %rd5976, %rd9711;
	add.s64 	%rd5978, %rd5977, %rd5975;
	add.s64 	%rd5979, %rd5978, %rd5972;
	add.s64 	%rd5980, %rd5979, %rd5895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd5967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd5967;
	}
	shf.r.wrap.b32 	%r4600, %r4599, %r4598, 28;
	shf.r.wrap.b32 	%r4601, %r4598, %r4599, 28;
	mov.b64 	%rd5981, {%r4601, %r4600};
	shf.l.wrap.b32 	%r4602, %r4598, %r4599, 30;
	shf.l.wrap.b32 	%r4603, %r4599, %r4598, 30;
	mov.b64 	%rd5982, {%r4603, %r4602};
	xor.b64  	%rd5983, %rd5982, %rd5981;
	shf.l.wrap.b32 	%r4604, %r4598, %r4599, 25;
	shf.l.wrap.b32 	%r4605, %r4599, %r4598, 25;
	mov.b64 	%rd5984, {%r4605, %r4604};
	xor.b64  	%rd5985, %rd5983, %rd5984;
	and.b64  	%rd5986, %rd5967, %rd5943;
	xor.b64  	%rd5987, %rd5967, %rd5943;
	and.b64  	%rd5988, %rd5987, %rd5919;
	or.b64  	%rd5989, %rd5988, %rd5986;
	add.s64 	%rd5990, %rd5979, %rd5989;
	add.s64 	%rd5991, %rd5990, %rd5985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd5980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd5980;
	}
	shf.r.wrap.b32 	%r4608, %r4607, %r4606, 14;
	shf.r.wrap.b32 	%r4609, %r4606, %r4607, 14;
	mov.b64 	%rd5992, {%r4609, %r4608};
	shf.r.wrap.b32 	%r4610, %r4607, %r4606, 18;
	shf.r.wrap.b32 	%r4611, %r4606, %r4607, 18;
	mov.b64 	%rd5993, {%r4611, %r4610};
	xor.b64  	%rd5994, %rd5993, %rd5992;
	shf.l.wrap.b32 	%r4612, %r4606, %r4607, 23;
	shf.l.wrap.b32 	%r4613, %r4607, %r4606, 23;
	mov.b64 	%rd5995, {%r4613, %r4612};
	xor.b64  	%rd5996, %rd5994, %rd5995;
	xor.b64  	%rd5997, %rd5956, %rd5932;
	and.b64  	%rd5998, %rd5980, %rd5997;
	xor.b64  	%rd5999, %rd5998, %rd5932;
	add.s64 	%rd6000, %rd5908, %rd9784;
	add.s64 	%rd6001, %rd6000, %rd9710;
	add.s64 	%rd6002, %rd6001, %rd5999;
	add.s64 	%rd6003, %rd6002, %rd5996;
	add.s64 	%rd9796, %rd6003, %rd5919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4614,%dummy}, %rd5991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4615}, %rd5991;
	}
	shf.r.wrap.b32 	%r4616, %r4615, %r4614, 28;
	shf.r.wrap.b32 	%r4617, %r4614, %r4615, 28;
	mov.b64 	%rd6004, {%r4617, %r4616};
	shf.l.wrap.b32 	%r4618, %r4614, %r4615, 30;
	shf.l.wrap.b32 	%r4619, %r4615, %r4614, 30;
	mov.b64 	%rd6005, {%r4619, %r4618};
	xor.b64  	%rd6006, %rd6005, %rd6004;
	shf.l.wrap.b32 	%r4620, %r4614, %r4615, 25;
	shf.l.wrap.b32 	%r4621, %r4615, %r4614, 25;
	mov.b64 	%rd6007, {%r4621, %r4620};
	xor.b64  	%rd6008, %rd6006, %rd6007;
	and.b64  	%rd6009, %rd5991, %rd5967;
	xor.b64  	%rd6010, %rd5991, %rd5967;
	and.b64  	%rd6011, %rd6010, %rd5943;
	or.b64  	%rd6012, %rd6011, %rd6009;
	add.s64 	%rd6013, %rd6003, %rd6012;
	add.s64 	%rd9792, %rd6013, %rd6008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4622,%dummy}, %rd9796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4623}, %rd9796;
	}
	shf.r.wrap.b32 	%r4624, %r4623, %r4622, 14;
	shf.r.wrap.b32 	%r4625, %r4622, %r4623, 14;
	mov.b64 	%rd6014, {%r4625, %r4624};
	shf.r.wrap.b32 	%r4626, %r4623, %r4622, 18;
	shf.r.wrap.b32 	%r4627, %r4622, %r4623, 18;
	mov.b64 	%rd6015, {%r4627, %r4626};
	xor.b64  	%rd6016, %rd6015, %rd6014;
	shf.l.wrap.b32 	%r4628, %r4622, %r4623, 23;
	shf.l.wrap.b32 	%r4629, %r4623, %r4622, 23;
	mov.b64 	%rd6017, {%r4629, %r4628};
	xor.b64  	%rd6018, %rd6016, %rd6017;
	xor.b64  	%rd6019, %rd5980, %rd5956;
	and.b64  	%rd6020, %rd9796, %rd6019;
	xor.b64  	%rd6021, %rd6020, %rd5956;
	add.s64 	%rd6022, %rd5932, %rd9783;
	add.s64 	%rd6023, %rd6022, %rd9709;
	add.s64 	%rd6024, %rd6023, %rd6021;
	add.s64 	%rd6025, %rd6024, %rd6018;
	add.s64 	%rd9795, %rd6025, %rd5943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4630,%dummy}, %rd9792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4631}, %rd9792;
	}
	shf.r.wrap.b32 	%r4632, %r4631, %r4630, 28;
	shf.r.wrap.b32 	%r4633, %r4630, %r4631, 28;
	mov.b64 	%rd6026, {%r4633, %r4632};
	shf.l.wrap.b32 	%r4634, %r4630, %r4631, 30;
	shf.l.wrap.b32 	%r4635, %r4631, %r4630, 30;
	mov.b64 	%rd6027, {%r4635, %r4634};
	xor.b64  	%rd6028, %rd6027, %rd6026;
	shf.l.wrap.b32 	%r4636, %r4630, %r4631, 25;
	shf.l.wrap.b32 	%r4637, %r4631, %r4630, 25;
	mov.b64 	%rd6029, {%r4637, %r4636};
	xor.b64  	%rd6030, %rd6028, %rd6029;
	and.b64  	%rd6031, %rd9792, %rd5991;
	xor.b64  	%rd6032, %rd9792, %rd5991;
	and.b64  	%rd6033, %rd6032, %rd5967;
	or.b64  	%rd6034, %rd6033, %rd6031;
	add.s64 	%rd6035, %rd6025, %rd6034;
	add.s64 	%rd9791, %rd6035, %rd6030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4638,%dummy}, %rd9795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4639}, %rd9795;
	}
	shf.r.wrap.b32 	%r4640, %r4639, %r4638, 14;
	shf.r.wrap.b32 	%r4641, %r4638, %r4639, 14;
	mov.b64 	%rd6036, {%r4641, %r4640};
	shf.r.wrap.b32 	%r4642, %r4639, %r4638, 18;
	shf.r.wrap.b32 	%r4643, %r4638, %r4639, 18;
	mov.b64 	%rd6037, {%r4643, %r4642};
	xor.b64  	%rd6038, %rd6037, %rd6036;
	shf.l.wrap.b32 	%r4644, %r4638, %r4639, 23;
	shf.l.wrap.b32 	%r4645, %r4639, %r4638, 23;
	mov.b64 	%rd6039, {%r4645, %r4644};
	xor.b64  	%rd6040, %rd6038, %rd6039;
	xor.b64  	%rd6041, %rd9796, %rd5980;
	and.b64  	%rd6042, %rd9795, %rd6041;
	xor.b64  	%rd6043, %rd6042, %rd5980;
	add.s64 	%rd6044, %rd5956, %rd9782;
	add.s64 	%rd6045, %rd6044, %rd9708;
	add.s64 	%rd6046, %rd6045, %rd6043;
	add.s64 	%rd6047, %rd6046, %rd6040;
	add.s64 	%rd9794, %rd6047, %rd5967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4646,%dummy}, %rd9791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4647}, %rd9791;
	}
	shf.r.wrap.b32 	%r4648, %r4647, %r4646, 28;
	shf.r.wrap.b32 	%r4649, %r4646, %r4647, 28;
	mov.b64 	%rd6048, {%r4649, %r4648};
	shf.l.wrap.b32 	%r4650, %r4646, %r4647, 30;
	shf.l.wrap.b32 	%r4651, %r4647, %r4646, 30;
	mov.b64 	%rd6049, {%r4651, %r4650};
	xor.b64  	%rd6050, %rd6049, %rd6048;
	shf.l.wrap.b32 	%r4652, %r4646, %r4647, 25;
	shf.l.wrap.b32 	%r4653, %r4647, %r4646, 25;
	mov.b64 	%rd6051, {%r4653, %r4652};
	xor.b64  	%rd6052, %rd6050, %rd6051;
	and.b64  	%rd6053, %rd9791, %rd9792;
	xor.b64  	%rd6054, %rd9791, %rd9792;
	and.b64  	%rd6055, %rd6054, %rd5991;
	or.b64  	%rd6056, %rd6055, %rd6053;
	add.s64 	%rd6057, %rd6047, %rd6056;
	add.s64 	%rd9790, %rd6057, %rd6052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4654,%dummy}, %rd9794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4655}, %rd9794;
	}
	shf.r.wrap.b32 	%r4656, %r4655, %r4654, 14;
	shf.r.wrap.b32 	%r4657, %r4654, %r4655, 14;
	mov.b64 	%rd6058, {%r4657, %r4656};
	shf.r.wrap.b32 	%r4658, %r4655, %r4654, 18;
	shf.r.wrap.b32 	%r4659, %r4654, %r4655, 18;
	mov.b64 	%rd6059, {%r4659, %r4658};
	xor.b64  	%rd6060, %rd6059, %rd6058;
	shf.l.wrap.b32 	%r4660, %r4654, %r4655, 23;
	shf.l.wrap.b32 	%r4661, %r4655, %r4654, 23;
	mov.b64 	%rd6061, {%r4661, %r4660};
	xor.b64  	%rd6062, %rd6060, %rd6061;
	xor.b64  	%rd6063, %rd9795, %rd9796;
	and.b64  	%rd6064, %rd9794, %rd6063;
	xor.b64  	%rd6065, %rd6064, %rd9796;
	add.s64 	%rd6066, %rd5980, %rd9781;
	add.s64 	%rd6067, %rd6066, %rd9707;
	add.s64 	%rd6068, %rd6067, %rd6065;
	add.s64 	%rd6069, %rd6068, %rd6062;
	add.s64 	%rd9793, %rd6069, %rd5991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd9790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4663}, %rd9790;
	}
	shf.r.wrap.b32 	%r4664, %r4663, %r4662, 28;
	shf.r.wrap.b32 	%r4665, %r4662, %r4663, 28;
	mov.b64 	%rd6070, {%r4665, %r4664};
	shf.l.wrap.b32 	%r4666, %r4662, %r4663, 30;
	shf.l.wrap.b32 	%r4667, %r4663, %r4662, 30;
	mov.b64 	%rd6071, {%r4667, %r4666};
	xor.b64  	%rd6072, %rd6071, %rd6070;
	shf.l.wrap.b32 	%r4668, %r4662, %r4663, 25;
	shf.l.wrap.b32 	%r4669, %r4663, %r4662, 25;
	mov.b64 	%rd6073, {%r4669, %r4668};
	xor.b64  	%rd6074, %rd6072, %rd6073;
	and.b64  	%rd6075, %rd9790, %rd9791;
	xor.b64  	%rd6076, %rd9790, %rd9791;
	and.b64  	%rd6077, %rd6076, %rd9792;
	or.b64  	%rd6078, %rd6077, %rd6075;
	add.s64 	%rd6079, %rd6069, %rd6078;
	add.s64 	%rd9789, %rd6079, %rd6074;
	mov.u32 	%r7502, 16;

BB3_29:
	mov.u64 	%rd9598, k_sha512;
	shr.u64 	%rd6080, %rd9782, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4670,%dummy}, %rd9782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4671}, %rd9782;
	}
	shf.r.wrap.b32 	%r4672, %r4671, %r4670, 19;
	shf.r.wrap.b32 	%r4673, %r4670, %r4671, 19;
	mov.b64 	%rd6081, {%r4673, %r4672};
	xor.b64  	%rd6082, %rd6081, %rd6080;
	shf.l.wrap.b32 	%r4674, %r4670, %r4671, 3;
	shf.l.wrap.b32 	%r4675, %r4671, %r4670, 3;
	mov.b64 	%rd6083, {%r4675, %r4674};
	xor.b64  	%rd6084, %rd6082, %rd6083;
	shr.u64 	%rd6085, %rd9798, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4676,%dummy}, %rd9798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4677}, %rd9798;
	}
	shf.r.wrap.b32 	%r4678, %r4677, %r4676, 1;
	shf.r.wrap.b32 	%r4679, %r4676, %r4677, 1;
	mov.b64 	%rd6086, {%r4679, %r4678};
	xor.b64  	%rd6087, %rd6086, %rd6085;
	shf.r.wrap.b32 	%r4680, %r4677, %r4676, 8;
	shf.r.wrap.b32 	%r4681, %r4676, %r4677, 8;
	mov.b64 	%rd6088, {%r4681, %r4680};
	xor.b64  	%rd6089, %rd6087, %rd6088;
	add.s64 	%rd6090, %rd9787, %rd9797;
	add.s64 	%rd6091, %rd6090, %rd6084;
	add.s64 	%rd9797, %rd6091, %rd6089;
	shr.u64 	%rd6092, %rd9781, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4682,%dummy}, %rd9781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4683}, %rd9781;
	}
	shf.r.wrap.b32 	%r4684, %r4683, %r4682, 19;
	shf.r.wrap.b32 	%r4685, %r4682, %r4683, 19;
	mov.b64 	%rd6093, {%r4685, %r4684};
	xor.b64  	%rd6094, %rd6093, %rd6092;
	shf.l.wrap.b32 	%r4686, %r4682, %r4683, 3;
	shf.l.wrap.b32 	%r4687, %r4683, %r4682, 3;
	mov.b64 	%rd6095, {%r4687, %r4686};
	xor.b64  	%rd6096, %rd6094, %rd6095;
	shr.u64 	%rd6097, %rd9799, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4688,%dummy}, %rd9799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd9799;
	}
	shf.r.wrap.b32 	%r4690, %r4689, %r4688, 1;
	shf.r.wrap.b32 	%r4691, %r4688, %r4689, 1;
	mov.b64 	%rd6098, {%r4691, %r4690};
	xor.b64  	%rd6099, %rd6098, %rd6097;
	shf.r.wrap.b32 	%r4692, %r4689, %r4688, 8;
	shf.r.wrap.b32 	%r4693, %r4688, %r4689, 8;
	mov.b64 	%rd6100, {%r4693, %r4692};
	xor.b64  	%rd6101, %rd6099, %rd6100;
	add.s64 	%rd6102, %rd9786, %rd9798;
	add.s64 	%rd6103, %rd6102, %rd6096;
	add.s64 	%rd9798, %rd6103, %rd6101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4694,%dummy}, %rd9797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4695}, %rd9797;
	}
	shf.r.wrap.b32 	%r4696, %r4695, %r4694, 19;
	shf.r.wrap.b32 	%r4697, %r4694, %r4695, 19;
	mov.b64 	%rd6104, {%r4697, %r4696};
	shf.l.wrap.b32 	%r4698, %r4694, %r4695, 3;
	shf.l.wrap.b32 	%r4699, %r4695, %r4694, 3;
	mov.b64 	%rd6105, {%r4699, %r4698};
	shr.u64 	%rd6106, %rd9797, 6;
	xor.b64  	%rd6107, %rd6104, %rd6106;
	xor.b64  	%rd6108, %rd6107, %rd6105;
	shr.u64 	%rd6109, %rd9800, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4700,%dummy}, %rd9800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4701}, %rd9800;
	}
	shf.r.wrap.b32 	%r4702, %r4701, %r4700, 1;
	shf.r.wrap.b32 	%r4703, %r4700, %r4701, 1;
	mov.b64 	%rd6110, {%r4703, %r4702};
	xor.b64  	%rd6111, %rd6110, %rd6109;
	shf.r.wrap.b32 	%r4704, %r4701, %r4700, 8;
	shf.r.wrap.b32 	%r4705, %r4700, %r4701, 8;
	mov.b64 	%rd6112, {%r4705, %r4704};
	xor.b64  	%rd6113, %rd6111, %rd6112;
	add.s64 	%rd6114, %rd9785, %rd9799;
	add.s64 	%rd6115, %rd6114, %rd6108;
	add.s64 	%rd9799, %rd6115, %rd6113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4706,%dummy}, %rd9798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4707}, %rd9798;
	}
	shf.r.wrap.b32 	%r4708, %r4707, %r4706, 19;
	shf.r.wrap.b32 	%r4709, %r4706, %r4707, 19;
	mov.b64 	%rd6116, {%r4709, %r4708};
	shf.l.wrap.b32 	%r4710, %r4706, %r4707, 3;
	shf.l.wrap.b32 	%r4711, %r4707, %r4706, 3;
	mov.b64 	%rd6117, {%r4711, %r4710};
	shr.u64 	%rd6118, %rd9798, 6;
	xor.b64  	%rd6119, %rd6116, %rd6118;
	xor.b64  	%rd6120, %rd6119, %rd6117;
	shr.u64 	%rd6121, %rd9801, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4712,%dummy}, %rd9801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4713}, %rd9801;
	}
	shf.r.wrap.b32 	%r4714, %r4713, %r4712, 1;
	shf.r.wrap.b32 	%r4715, %r4712, %r4713, 1;
	mov.b64 	%rd6122, {%r4715, %r4714};
	xor.b64  	%rd6123, %rd6122, %rd6121;
	shf.r.wrap.b32 	%r4716, %r4713, %r4712, 8;
	shf.r.wrap.b32 	%r4717, %r4712, %r4713, 8;
	mov.b64 	%rd6124, {%r4717, %r4716};
	xor.b64  	%rd6125, %rd6123, %rd6124;
	add.s64 	%rd6126, %rd9784, %rd9800;
	add.s64 	%rd6127, %rd6126, %rd6120;
	add.s64 	%rd9800, %rd6127, %rd6125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd9799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4719}, %rd9799;
	}
	shf.r.wrap.b32 	%r4720, %r4719, %r4718, 19;
	shf.r.wrap.b32 	%r4721, %r4718, %r4719, 19;
	mov.b64 	%rd6128, {%r4721, %r4720};
	shf.l.wrap.b32 	%r4722, %r4718, %r4719, 3;
	shf.l.wrap.b32 	%r4723, %r4719, %r4718, 3;
	mov.b64 	%rd6129, {%r4723, %r4722};
	shr.u64 	%rd6130, %rd9799, 6;
	xor.b64  	%rd6131, %rd6128, %rd6130;
	xor.b64  	%rd6132, %rd6131, %rd6129;
	shr.u64 	%rd6133, %rd9802, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4724,%dummy}, %rd9802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd9802;
	}
	shf.r.wrap.b32 	%r4726, %r4725, %r4724, 1;
	shf.r.wrap.b32 	%r4727, %r4724, %r4725, 1;
	mov.b64 	%rd6134, {%r4727, %r4726};
	xor.b64  	%rd6135, %rd6134, %rd6133;
	shf.r.wrap.b32 	%r4728, %r4725, %r4724, 8;
	shf.r.wrap.b32 	%r4729, %r4724, %r4725, 8;
	mov.b64 	%rd6136, {%r4729, %r4728};
	xor.b64  	%rd6137, %rd6135, %rd6136;
	add.s64 	%rd6138, %rd9783, %rd9801;
	add.s64 	%rd6139, %rd6138, %rd6132;
	add.s64 	%rd9801, %rd6139, %rd6137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd9800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4731}, %rd9800;
	}
	shf.r.wrap.b32 	%r4732, %r4731, %r4730, 19;
	shf.r.wrap.b32 	%r4733, %r4730, %r4731, 19;
	mov.b64 	%rd6140, {%r4733, %r4732};
	shf.l.wrap.b32 	%r4734, %r4730, %r4731, 3;
	shf.l.wrap.b32 	%r4735, %r4731, %r4730, 3;
	mov.b64 	%rd6141, {%r4735, %r4734};
	shr.u64 	%rd6142, %rd9800, 6;
	xor.b64  	%rd6143, %rd6140, %rd6142;
	xor.b64  	%rd6144, %rd6143, %rd6141;
	shr.u64 	%rd6145, %rd9803, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4736,%dummy}, %rd9803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4737}, %rd9803;
	}
	shf.r.wrap.b32 	%r4738, %r4737, %r4736, 1;
	shf.r.wrap.b32 	%r4739, %r4736, %r4737, 1;
	mov.b64 	%rd6146, {%r4739, %r4738};
	xor.b64  	%rd6147, %rd6146, %rd6145;
	shf.r.wrap.b32 	%r4740, %r4737, %r4736, 8;
	shf.r.wrap.b32 	%r4741, %r4736, %r4737, 8;
	mov.b64 	%rd6148, {%r4741, %r4740};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	add.s64 	%rd6150, %rd9782, %rd9802;
	add.s64 	%rd6151, %rd6150, %rd6144;
	add.s64 	%rd9802, %rd6151, %rd6149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4742,%dummy}, %rd9801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4743}, %rd9801;
	}
	shf.r.wrap.b32 	%r4744, %r4743, %r4742, 19;
	shf.r.wrap.b32 	%r4745, %r4742, %r4743, 19;
	mov.b64 	%rd6152, {%r4745, %r4744};
	shf.l.wrap.b32 	%r4746, %r4742, %r4743, 3;
	shf.l.wrap.b32 	%r4747, %r4743, %r4742, 3;
	mov.b64 	%rd6153, {%r4747, %r4746};
	shr.u64 	%rd6154, %rd9801, 6;
	xor.b64  	%rd6155, %rd6152, %rd6154;
	xor.b64  	%rd6156, %rd6155, %rd6153;
	shr.u64 	%rd6157, %rd9804, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4748,%dummy}, %rd9804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4749}, %rd9804;
	}
	shf.r.wrap.b32 	%r4750, %r4749, %r4748, 1;
	shf.r.wrap.b32 	%r4751, %r4748, %r4749, 1;
	mov.b64 	%rd6158, {%r4751, %r4750};
	xor.b64  	%rd6159, %rd6158, %rd6157;
	shf.r.wrap.b32 	%r4752, %r4749, %r4748, 8;
	shf.r.wrap.b32 	%r4753, %r4748, %r4749, 8;
	mov.b64 	%rd6160, {%r4753, %r4752};
	xor.b64  	%rd6161, %rd6159, %rd6160;
	add.s64 	%rd6162, %rd9781, %rd9803;
	add.s64 	%rd6163, %rd6162, %rd6156;
	add.s64 	%rd9803, %rd6163, %rd6161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4754,%dummy}, %rd9802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4755}, %rd9802;
	}
	shf.r.wrap.b32 	%r4756, %r4755, %r4754, 19;
	shf.r.wrap.b32 	%r4757, %r4754, %r4755, 19;
	mov.b64 	%rd6164, {%r4757, %r4756};
	shf.l.wrap.b32 	%r4758, %r4754, %r4755, 3;
	shf.l.wrap.b32 	%r4759, %r4755, %r4754, 3;
	mov.b64 	%rd6165, {%r4759, %r4758};
	shr.u64 	%rd6166, %rd9802, 6;
	xor.b64  	%rd6167, %rd6164, %rd6166;
	xor.b64  	%rd6168, %rd6167, %rd6165;
	shr.u64 	%rd6169, %rd9788, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4760,%dummy}, %rd9788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4761}, %rd9788;
	}
	shf.r.wrap.b32 	%r4762, %r4761, %r4760, 1;
	shf.r.wrap.b32 	%r4763, %r4760, %r4761, 1;
	mov.b64 	%rd6170, {%r4763, %r4762};
	xor.b64  	%rd6171, %rd6170, %rd6169;
	shf.r.wrap.b32 	%r4764, %r4761, %r4760, 8;
	shf.r.wrap.b32 	%r4765, %r4760, %r4761, 8;
	mov.b64 	%rd6172, {%r4765, %r4764};
	xor.b64  	%rd6173, %rd6171, %rd6172;
	add.s64 	%rd6174, %rd9797, %rd9804;
	add.s64 	%rd6175, %rd6174, %rd6168;
	add.s64 	%rd9804, %rd6175, %rd6173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4766,%dummy}, %rd9803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4767}, %rd9803;
	}
	shf.r.wrap.b32 	%r4768, %r4767, %r4766, 19;
	shf.r.wrap.b32 	%r4769, %r4766, %r4767, 19;
	mov.b64 	%rd6176, {%r4769, %r4768};
	shf.l.wrap.b32 	%r4770, %r4766, %r4767, 3;
	shf.l.wrap.b32 	%r4771, %r4767, %r4766, 3;
	mov.b64 	%rd6177, {%r4771, %r4770};
	shr.u64 	%rd6178, %rd9803, 6;
	xor.b64  	%rd6179, %rd6176, %rd6178;
	xor.b64  	%rd6180, %rd6179, %rd6177;
	shr.u64 	%rd6181, %rd9787, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4772,%dummy}, %rd9787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd9787;
	}
	shf.r.wrap.b32 	%r4774, %r4773, %r4772, 1;
	shf.r.wrap.b32 	%r4775, %r4772, %r4773, 1;
	mov.b64 	%rd6182, {%r4775, %r4774};
	xor.b64  	%rd6183, %rd6182, %rd6181;
	shf.r.wrap.b32 	%r4776, %r4773, %r4772, 8;
	shf.r.wrap.b32 	%r4777, %r4772, %r4773, 8;
	mov.b64 	%rd6184, {%r4777, %r4776};
	xor.b64  	%rd6185, %rd6183, %rd6184;
	add.s64 	%rd6186, %rd9798, %rd9788;
	add.s64 	%rd6187, %rd6186, %rd6180;
	add.s64 	%rd9788, %rd6187, %rd6185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4778,%dummy}, %rd9804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4779}, %rd9804;
	}
	shf.r.wrap.b32 	%r4780, %r4779, %r4778, 19;
	shf.r.wrap.b32 	%r4781, %r4778, %r4779, 19;
	mov.b64 	%rd6188, {%r4781, %r4780};
	shf.l.wrap.b32 	%r4782, %r4778, %r4779, 3;
	shf.l.wrap.b32 	%r4783, %r4779, %r4778, 3;
	mov.b64 	%rd6189, {%r4783, %r4782};
	shr.u64 	%rd6190, %rd9804, 6;
	xor.b64  	%rd6191, %rd6188, %rd6190;
	xor.b64  	%rd6192, %rd6191, %rd6189;
	shr.u64 	%rd6193, %rd9786, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4784,%dummy}, %rd9786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd9786;
	}
	shf.r.wrap.b32 	%r4786, %r4785, %r4784, 1;
	shf.r.wrap.b32 	%r4787, %r4784, %r4785, 1;
	mov.b64 	%rd6194, {%r4787, %r4786};
	xor.b64  	%rd6195, %rd6194, %rd6193;
	shf.r.wrap.b32 	%r4788, %r4785, %r4784, 8;
	shf.r.wrap.b32 	%r4789, %r4784, %r4785, 8;
	mov.b64 	%rd6196, {%r4789, %r4788};
	xor.b64  	%rd6197, %rd6195, %rd6196;
	add.s64 	%rd6198, %rd9799, %rd9787;
	add.s64 	%rd6199, %rd6198, %rd6192;
	add.s64 	%rd9787, %rd6199, %rd6197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4790,%dummy}, %rd9788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4791}, %rd9788;
	}
	shf.r.wrap.b32 	%r4792, %r4791, %r4790, 19;
	shf.r.wrap.b32 	%r4793, %r4790, %r4791, 19;
	mov.b64 	%rd6200, {%r4793, %r4792};
	shf.l.wrap.b32 	%r4794, %r4790, %r4791, 3;
	shf.l.wrap.b32 	%r4795, %r4791, %r4790, 3;
	mov.b64 	%rd6201, {%r4795, %r4794};
	shr.u64 	%rd6202, %rd9788, 6;
	xor.b64  	%rd6203, %rd6200, %rd6202;
	xor.b64  	%rd6204, %rd6203, %rd6201;
	shr.u64 	%rd6205, %rd9785, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4796,%dummy}, %rd9785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4797}, %rd9785;
	}
	shf.r.wrap.b32 	%r4798, %r4797, %r4796, 1;
	shf.r.wrap.b32 	%r4799, %r4796, %r4797, 1;
	mov.b64 	%rd6206, {%r4799, %r4798};
	xor.b64  	%rd6207, %rd6206, %rd6205;
	shf.r.wrap.b32 	%r4800, %r4797, %r4796, 8;
	shf.r.wrap.b32 	%r4801, %r4796, %r4797, 8;
	mov.b64 	%rd6208, {%r4801, %r4800};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	add.s64 	%rd6210, %rd9800, %rd9786;
	add.s64 	%rd6211, %rd6210, %rd6204;
	add.s64 	%rd9786, %rd6211, %rd6209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd9787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4803}, %rd9787;
	}
	shf.r.wrap.b32 	%r4804, %r4803, %r4802, 19;
	shf.r.wrap.b32 	%r4805, %r4802, %r4803, 19;
	mov.b64 	%rd6212, {%r4805, %r4804};
	shf.l.wrap.b32 	%r4806, %r4802, %r4803, 3;
	shf.l.wrap.b32 	%r4807, %r4803, %r4802, 3;
	mov.b64 	%rd6213, {%r4807, %r4806};
	shr.u64 	%rd6214, %rd9787, 6;
	xor.b64  	%rd6215, %rd6212, %rd6214;
	xor.b64  	%rd6216, %rd6215, %rd6213;
	shr.u64 	%rd6217, %rd9784, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4808,%dummy}, %rd9784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4809}, %rd9784;
	}
	shf.r.wrap.b32 	%r4810, %r4809, %r4808, 1;
	shf.r.wrap.b32 	%r4811, %r4808, %r4809, 1;
	mov.b64 	%rd6218, {%r4811, %r4810};
	xor.b64  	%rd6219, %rd6218, %rd6217;
	shf.r.wrap.b32 	%r4812, %r4809, %r4808, 8;
	shf.r.wrap.b32 	%r4813, %r4808, %r4809, 8;
	mov.b64 	%rd6220, {%r4813, %r4812};
	xor.b64  	%rd6221, %rd6219, %rd6220;
	add.s64 	%rd6222, %rd9801, %rd9785;
	add.s64 	%rd6223, %rd6222, %rd6216;
	add.s64 	%rd9785, %rd6223, %rd6221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd9786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd9786;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 19;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 19;
	mov.b64 	%rd6224, {%r4817, %r4816};
	shf.l.wrap.b32 	%r4818, %r4814, %r4815, 3;
	shf.l.wrap.b32 	%r4819, %r4815, %r4814, 3;
	mov.b64 	%rd6225, {%r4819, %r4818};
	shr.u64 	%rd6226, %rd9786, 6;
	xor.b64  	%rd6227, %rd6224, %rd6226;
	xor.b64  	%rd6228, %rd6227, %rd6225;
	shr.u64 	%rd6229, %rd9783, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4820,%dummy}, %rd9783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4821}, %rd9783;
	}
	shf.r.wrap.b32 	%r4822, %r4821, %r4820, 1;
	shf.r.wrap.b32 	%r4823, %r4820, %r4821, 1;
	mov.b64 	%rd6230, {%r4823, %r4822};
	xor.b64  	%rd6231, %rd6230, %rd6229;
	shf.r.wrap.b32 	%r4824, %r4821, %r4820, 8;
	shf.r.wrap.b32 	%r4825, %r4820, %r4821, 8;
	mov.b64 	%rd6232, {%r4825, %r4824};
	xor.b64  	%rd6233, %rd6231, %rd6232;
	add.s64 	%rd6234, %rd9802, %rd9784;
	add.s64 	%rd6235, %rd6234, %rd6228;
	add.s64 	%rd9784, %rd6235, %rd6233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4826,%dummy}, %rd9785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4827}, %rd9785;
	}
	shf.r.wrap.b32 	%r4828, %r4827, %r4826, 19;
	shf.r.wrap.b32 	%r4829, %r4826, %r4827, 19;
	mov.b64 	%rd6236, {%r4829, %r4828};
	shf.l.wrap.b32 	%r4830, %r4826, %r4827, 3;
	shf.l.wrap.b32 	%r4831, %r4827, %r4826, 3;
	mov.b64 	%rd6237, {%r4831, %r4830};
	shr.u64 	%rd6238, %rd9785, 6;
	xor.b64  	%rd6239, %rd6236, %rd6238;
	xor.b64  	%rd6240, %rd6239, %rd6237;
	shr.u64 	%rd6241, %rd9782, 7;
	shf.r.wrap.b32 	%r4832, %r4671, %r4670, 1;
	shf.r.wrap.b32 	%r4833, %r4670, %r4671, 1;
	mov.b64 	%rd6242, {%r4833, %r4832};
	xor.b64  	%rd6243, %rd6242, %rd6241;
	shf.r.wrap.b32 	%r4834, %r4671, %r4670, 8;
	shf.r.wrap.b32 	%r4835, %r4670, %r4671, 8;
	mov.b64 	%rd6244, {%r4835, %r4834};
	xor.b64  	%rd6245, %rd6243, %rd6244;
	add.s64 	%rd6246, %rd9803, %rd9783;
	add.s64 	%rd6247, %rd6246, %rd6240;
	add.s64 	%rd9783, %rd6247, %rd6245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4836,%dummy}, %rd9784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd9784;
	}
	shf.r.wrap.b32 	%r4838, %r4837, %r4836, 19;
	shf.r.wrap.b32 	%r4839, %r4836, %r4837, 19;
	mov.b64 	%rd6248, {%r4839, %r4838};
	shf.l.wrap.b32 	%r4840, %r4836, %r4837, 3;
	shf.l.wrap.b32 	%r4841, %r4837, %r4836, 3;
	mov.b64 	%rd6249, {%r4841, %r4840};
	shr.u64 	%rd6250, %rd9784, 6;
	xor.b64  	%rd6251, %rd6248, %rd6250;
	xor.b64  	%rd6252, %rd6251, %rd6249;
	shr.u64 	%rd6253, %rd9781, 7;
	shf.r.wrap.b32 	%r4842, %r4683, %r4682, 1;
	shf.r.wrap.b32 	%r4843, %r4682, %r4683, 1;
	mov.b64 	%rd6254, {%r4843, %r4842};
	xor.b64  	%rd6255, %rd6254, %rd6253;
	shf.r.wrap.b32 	%r4844, %r4683, %r4682, 8;
	shf.r.wrap.b32 	%r4845, %r4682, %r4683, 8;
	mov.b64 	%rd6256, {%r4845, %r4844};
	xor.b64  	%rd6257, %rd6255, %rd6256;
	add.s64 	%rd6258, %rd9804, %rd9782;
	add.s64 	%rd6259, %rd6258, %rd6252;
	add.s64 	%rd9782, %rd6259, %rd6257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4846,%dummy}, %rd9783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4847}, %rd9783;
	}
	shf.r.wrap.b32 	%r4848, %r4847, %r4846, 19;
	shf.r.wrap.b32 	%r4849, %r4846, %r4847, 19;
	mov.b64 	%rd6260, {%r4849, %r4848};
	shf.l.wrap.b32 	%r4850, %r4846, %r4847, 3;
	shf.l.wrap.b32 	%r4851, %r4847, %r4846, 3;
	mov.b64 	%rd6261, {%r4851, %r4850};
	shr.u64 	%rd6262, %rd9783, 6;
	xor.b64  	%rd6263, %rd6260, %rd6262;
	xor.b64  	%rd6264, %rd6263, %rd6261;
	shf.r.wrap.b32 	%r4852, %r4695, %r4694, 1;
	shf.r.wrap.b32 	%r4853, %r4694, %r4695, 1;
	mov.b64 	%rd6265, {%r4853, %r4852};
	shf.r.wrap.b32 	%r4854, %r4695, %r4694, 8;
	shf.r.wrap.b32 	%r4855, %r4694, %r4695, 8;
	mov.b64 	%rd6266, {%r4855, %r4854};
	shr.u64 	%rd6267, %rd9797, 7;
	xor.b64  	%rd6268, %rd6265, %rd6267;
	xor.b64  	%rd6269, %rd6268, %rd6266;
	add.s64 	%rd6270, %rd9788, %rd9781;
	add.s64 	%rd6271, %rd6270, %rd6264;
	add.s64 	%rd9781, %rd6271, %rd6269;
	mul.wide.s32 	%rd6272, %r7502, 8;
	add.s64 	%rd6274, %rd9598, %rd6272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4856,%dummy}, %rd9793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4857}, %rd9793;
	}
	shf.r.wrap.b32 	%r4858, %r4857, %r4856, 18;
	shf.r.wrap.b32 	%r4859, %r4856, %r4857, 18;
	mov.b64 	%rd6275, {%r4859, %r4858};
	shf.r.wrap.b32 	%r4860, %r4857, %r4856, 14;
	shf.r.wrap.b32 	%r4861, %r4856, %r4857, 14;
	mov.b64 	%rd6276, {%r4861, %r4860};
	xor.b64  	%rd6277, %rd6275, %rd6276;
	shf.l.wrap.b32 	%r4862, %r4856, %r4857, 23;
	shf.l.wrap.b32 	%r4863, %r4857, %r4856, 23;
	mov.b64 	%rd6278, {%r4863, %r4862};
	xor.b64  	%rd6279, %rd6277, %rd6278;
	xor.b64  	%rd6280, %rd9794, %rd9795;
	and.b64  	%rd6281, %rd9793, %rd6280;
	xor.b64  	%rd6282, %rd6281, %rd9795;
	add.s64 	%rd6283, %rd6282, %rd9796;
	add.s64 	%rd6284, %rd6283, %rd9797;
	ld.const.u64 	%rd6285, [%rd6274];
	add.s64 	%rd6286, %rd6284, %rd6285;
	add.s64 	%rd6287, %rd6286, %rd6279;
	add.s64 	%rd6288, %rd6287, %rd9792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4864}, %rd9789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4865,%dummy}, %rd9789;
	}
	shf.l.wrap.b32 	%r4866, %r4865, %r4864, 30;
	shf.l.wrap.b32 	%r4867, %r4864, %r4865, 30;
	mov.b64 	%rd6289, {%r4867, %r4866};
	shf.r.wrap.b32 	%r4868, %r4864, %r4865, 28;
	shf.r.wrap.b32 	%r4869, %r4865, %r4864, 28;
	mov.b64 	%rd6290, {%r4869, %r4868};
	xor.b64  	%rd6291, %rd6289, %rd6290;
	shf.l.wrap.b32 	%r4870, %r4865, %r4864, 25;
	shf.l.wrap.b32 	%r4871, %r4864, %r4865, 25;
	mov.b64 	%rd6292, {%r4871, %r4870};
	xor.b64  	%rd6293, %rd6291, %rd6292;
	xor.b64  	%rd6294, %rd9789, %rd9790;
	and.b64  	%rd6295, %rd6294, %rd9791;
	and.b64  	%rd6296, %rd9789, %rd9790;
	or.b64  	%rd6297, %rd6295, %rd6296;
	add.s64 	%rd6298, %rd6287, %rd6297;
	add.s64 	%rd6299, %rd6298, %rd6293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4872,%dummy}, %rd6288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd6288;
	}
	shf.r.wrap.b32 	%r4874, %r4873, %r4872, 14;
	shf.r.wrap.b32 	%r4875, %r4872, %r4873, 14;
	mov.b64 	%rd6300, {%r4875, %r4874};
	shf.r.wrap.b32 	%r4876, %r4873, %r4872, 18;
	shf.r.wrap.b32 	%r4877, %r4872, %r4873, 18;
	mov.b64 	%rd6301, {%r4877, %r4876};
	xor.b64  	%rd6302, %rd6301, %rd6300;
	shf.l.wrap.b32 	%r4878, %r4872, %r4873, 23;
	shf.l.wrap.b32 	%r4879, %r4873, %r4872, 23;
	mov.b64 	%rd6303, {%r4879, %r4878};
	xor.b64  	%rd6304, %rd6302, %rd6303;
	xor.b64  	%rd6305, %rd9793, %rd9794;
	and.b64  	%rd6306, %rd6288, %rd6305;
	xor.b64  	%rd6307, %rd6306, %rd9794;
	add.s64 	%rd6308, %rd9798, %rd9795;
	ld.const.u64 	%rd6309, [%rd6274+8];
	add.s64 	%rd6310, %rd6308, %rd6309;
	add.s64 	%rd6311, %rd6310, %rd6307;
	add.s64 	%rd6312, %rd6311, %rd6304;
	add.s64 	%rd6313, %rd6312, %rd9791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4880,%dummy}, %rd6299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4881}, %rd6299;
	}
	shf.r.wrap.b32 	%r4882, %r4881, %r4880, 28;
	shf.r.wrap.b32 	%r4883, %r4880, %r4881, 28;
	mov.b64 	%rd6314, {%r4883, %r4882};
	shf.l.wrap.b32 	%r4884, %r4880, %r4881, 30;
	shf.l.wrap.b32 	%r4885, %r4881, %r4880, 30;
	mov.b64 	%rd6315, {%r4885, %r4884};
	xor.b64  	%rd6316, %rd6315, %rd6314;
	shf.l.wrap.b32 	%r4886, %r4880, %r4881, 25;
	shf.l.wrap.b32 	%r4887, %r4881, %r4880, 25;
	mov.b64 	%rd6317, {%r4887, %r4886};
	xor.b64  	%rd6318, %rd6316, %rd6317;
	and.b64  	%rd6319, %rd6299, %rd9789;
	xor.b64  	%rd6320, %rd6299, %rd9789;
	and.b64  	%rd6321, %rd6320, %rd9790;
	or.b64  	%rd6322, %rd6321, %rd6319;
	add.s64 	%rd6323, %rd6312, %rd6322;
	add.s64 	%rd6324, %rd6323, %rd6318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4888,%dummy}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4889}, %rd6313;
	}
	shf.r.wrap.b32 	%r4890, %r4889, %r4888, 14;
	shf.r.wrap.b32 	%r4891, %r4888, %r4889, 14;
	mov.b64 	%rd6325, {%r4891, %r4890};
	shf.r.wrap.b32 	%r4892, %r4889, %r4888, 18;
	shf.r.wrap.b32 	%r4893, %r4888, %r4889, 18;
	mov.b64 	%rd6326, {%r4893, %r4892};
	xor.b64  	%rd6327, %rd6326, %rd6325;
	shf.l.wrap.b32 	%r4894, %r4888, %r4889, 23;
	shf.l.wrap.b32 	%r4895, %r4889, %r4888, 23;
	mov.b64 	%rd6328, {%r4895, %r4894};
	xor.b64  	%rd6329, %rd6327, %rd6328;
	xor.b64  	%rd6330, %rd6288, %rd9793;
	and.b64  	%rd6331, %rd6313, %rd6330;
	xor.b64  	%rd6332, %rd6331, %rd9793;
	add.s64 	%rd6333, %rd9799, %rd9794;
	ld.const.u64 	%rd6334, [%rd6274+16];
	add.s64 	%rd6335, %rd6333, %rd6334;
	add.s64 	%rd6336, %rd6335, %rd6332;
	add.s64 	%rd6337, %rd6336, %rd6329;
	add.s64 	%rd6338, %rd6337, %rd9790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4896,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd6324;
	}
	shf.r.wrap.b32 	%r4898, %r4897, %r4896, 28;
	shf.r.wrap.b32 	%r4899, %r4896, %r4897, 28;
	mov.b64 	%rd6339, {%r4899, %r4898};
	shf.l.wrap.b32 	%r4900, %r4896, %r4897, 30;
	shf.l.wrap.b32 	%r4901, %r4897, %r4896, 30;
	mov.b64 	%rd6340, {%r4901, %r4900};
	xor.b64  	%rd6341, %rd6340, %rd6339;
	shf.l.wrap.b32 	%r4902, %r4896, %r4897, 25;
	shf.l.wrap.b32 	%r4903, %r4897, %r4896, 25;
	mov.b64 	%rd6342, {%r4903, %r4902};
	xor.b64  	%rd6343, %rd6341, %rd6342;
	and.b64  	%rd6344, %rd6324, %rd6299;
	xor.b64  	%rd6345, %rd6324, %rd6299;
	and.b64  	%rd6346, %rd6345, %rd9789;
	or.b64  	%rd6347, %rd6346, %rd6344;
	add.s64 	%rd6348, %rd6337, %rd6347;
	add.s64 	%rd6349, %rd6348, %rd6343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4904,%dummy}, %rd6338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd6338;
	}
	shf.r.wrap.b32 	%r4906, %r4905, %r4904, 14;
	shf.r.wrap.b32 	%r4907, %r4904, %r4905, 14;
	mov.b64 	%rd6350, {%r4907, %r4906};
	shf.r.wrap.b32 	%r4908, %r4905, %r4904, 18;
	shf.r.wrap.b32 	%r4909, %r4904, %r4905, 18;
	mov.b64 	%rd6351, {%r4909, %r4908};
	xor.b64  	%rd6352, %rd6351, %rd6350;
	shf.l.wrap.b32 	%r4910, %r4904, %r4905, 23;
	shf.l.wrap.b32 	%r4911, %r4905, %r4904, 23;
	mov.b64 	%rd6353, {%r4911, %r4910};
	xor.b64  	%rd6354, %rd6352, %rd6353;
	xor.b64  	%rd6355, %rd6313, %rd6288;
	and.b64  	%rd6356, %rd6338, %rd6355;
	xor.b64  	%rd6357, %rd6356, %rd6288;
	add.s64 	%rd6358, %rd9800, %rd9793;
	ld.const.u64 	%rd6359, [%rd6274+24];
	add.s64 	%rd6360, %rd6358, %rd6359;
	add.s64 	%rd6361, %rd6360, %rd6357;
	add.s64 	%rd6362, %rd6361, %rd6354;
	add.s64 	%rd6363, %rd6362, %rd9789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4912,%dummy}, %rd6349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4913}, %rd6349;
	}
	shf.r.wrap.b32 	%r4914, %r4913, %r4912, 28;
	shf.r.wrap.b32 	%r4915, %r4912, %r4913, 28;
	mov.b64 	%rd6364, {%r4915, %r4914};
	shf.l.wrap.b32 	%r4916, %r4912, %r4913, 30;
	shf.l.wrap.b32 	%r4917, %r4913, %r4912, 30;
	mov.b64 	%rd6365, {%r4917, %r4916};
	xor.b64  	%rd6366, %rd6365, %rd6364;
	shf.l.wrap.b32 	%r4918, %r4912, %r4913, 25;
	shf.l.wrap.b32 	%r4919, %r4913, %r4912, 25;
	mov.b64 	%rd6367, {%r4919, %r4918};
	xor.b64  	%rd6368, %rd6366, %rd6367;
	and.b64  	%rd6369, %rd6349, %rd6324;
	xor.b64  	%rd6370, %rd6349, %rd6324;
	and.b64  	%rd6371, %rd6370, %rd6299;
	or.b64  	%rd6372, %rd6371, %rd6369;
	add.s64 	%rd6373, %rd6362, %rd6372;
	add.s64 	%rd6374, %rd6373, %rd6368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd6363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd6363;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 14;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 14;
	mov.b64 	%rd6375, {%r4923, %r4922};
	shf.r.wrap.b32 	%r4924, %r4921, %r4920, 18;
	shf.r.wrap.b32 	%r4925, %r4920, %r4921, 18;
	mov.b64 	%rd6376, {%r4925, %r4924};
	xor.b64  	%rd6377, %rd6376, %rd6375;
	shf.l.wrap.b32 	%r4926, %r4920, %r4921, 23;
	shf.l.wrap.b32 	%r4927, %r4921, %r4920, 23;
	mov.b64 	%rd6378, {%r4927, %r4926};
	xor.b64  	%rd6379, %rd6377, %rd6378;
	xor.b64  	%rd6380, %rd6338, %rd6313;
	and.b64  	%rd6381, %rd6363, %rd6380;
	xor.b64  	%rd6382, %rd6381, %rd6313;
	add.s64 	%rd6383, %rd6288, %rd9801;
	ld.const.u64 	%rd6384, [%rd6274+32];
	add.s64 	%rd6385, %rd6383, %rd6384;
	add.s64 	%rd6386, %rd6385, %rd6382;
	add.s64 	%rd6387, %rd6386, %rd6379;
	add.s64 	%rd6388, %rd6387, %rd6299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd6374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd6374;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 28;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 28;
	mov.b64 	%rd6389, {%r4931, %r4930};
	shf.l.wrap.b32 	%r4932, %r4928, %r4929, 30;
	shf.l.wrap.b32 	%r4933, %r4929, %r4928, 30;
	mov.b64 	%rd6390, {%r4933, %r4932};
	xor.b64  	%rd6391, %rd6390, %rd6389;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 25;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 25;
	mov.b64 	%rd6392, {%r4935, %r4934};
	xor.b64  	%rd6393, %rd6391, %rd6392;
	and.b64  	%rd6394, %rd6374, %rd6349;
	xor.b64  	%rd6395, %rd6374, %rd6349;
	and.b64  	%rd6396, %rd6395, %rd6324;
	or.b64  	%rd6397, %rd6396, %rd6394;
	add.s64 	%rd6398, %rd6387, %rd6397;
	add.s64 	%rd6399, %rd6398, %rd6393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4936,%dummy}, %rd6388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4937}, %rd6388;
	}
	shf.r.wrap.b32 	%r4938, %r4937, %r4936, 14;
	shf.r.wrap.b32 	%r4939, %r4936, %r4937, 14;
	mov.b64 	%rd6400, {%r4939, %r4938};
	shf.r.wrap.b32 	%r4940, %r4937, %r4936, 18;
	shf.r.wrap.b32 	%r4941, %r4936, %r4937, 18;
	mov.b64 	%rd6401, {%r4941, %r4940};
	xor.b64  	%rd6402, %rd6401, %rd6400;
	shf.l.wrap.b32 	%r4942, %r4936, %r4937, 23;
	shf.l.wrap.b32 	%r4943, %r4937, %r4936, 23;
	mov.b64 	%rd6403, {%r4943, %r4942};
	xor.b64  	%rd6404, %rd6402, %rd6403;
	xor.b64  	%rd6405, %rd6363, %rd6338;
	and.b64  	%rd6406, %rd6388, %rd6405;
	xor.b64  	%rd6407, %rd6406, %rd6338;
	add.s64 	%rd6408, %rd6313, %rd9802;
	ld.const.u64 	%rd6409, [%rd6274+40];
	add.s64 	%rd6410, %rd6408, %rd6409;
	add.s64 	%rd6411, %rd6410, %rd6407;
	add.s64 	%rd6412, %rd6411, %rd6404;
	add.s64 	%rd6413, %rd6412, %rd6324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4944,%dummy}, %rd6399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd6399;
	}
	shf.r.wrap.b32 	%r4946, %r4945, %r4944, 28;
	shf.r.wrap.b32 	%r4947, %r4944, %r4945, 28;
	mov.b64 	%rd6414, {%r4947, %r4946};
	shf.l.wrap.b32 	%r4948, %r4944, %r4945, 30;
	shf.l.wrap.b32 	%r4949, %r4945, %r4944, 30;
	mov.b64 	%rd6415, {%r4949, %r4948};
	xor.b64  	%rd6416, %rd6415, %rd6414;
	shf.l.wrap.b32 	%r4950, %r4944, %r4945, 25;
	shf.l.wrap.b32 	%r4951, %r4945, %r4944, 25;
	mov.b64 	%rd6417, {%r4951, %r4950};
	xor.b64  	%rd6418, %rd6416, %rd6417;
	and.b64  	%rd6419, %rd6399, %rd6374;
	xor.b64  	%rd6420, %rd6399, %rd6374;
	and.b64  	%rd6421, %rd6420, %rd6349;
	or.b64  	%rd6422, %rd6421, %rd6419;
	add.s64 	%rd6423, %rd6412, %rd6422;
	add.s64 	%rd6424, %rd6423, %rd6418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4952,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4953}, %rd6413;
	}
	shf.r.wrap.b32 	%r4954, %r4953, %r4952, 14;
	shf.r.wrap.b32 	%r4955, %r4952, %r4953, 14;
	mov.b64 	%rd6425, {%r4955, %r4954};
	shf.r.wrap.b32 	%r4956, %r4953, %r4952, 18;
	shf.r.wrap.b32 	%r4957, %r4952, %r4953, 18;
	mov.b64 	%rd6426, {%r4957, %r4956};
	xor.b64  	%rd6427, %rd6426, %rd6425;
	shf.l.wrap.b32 	%r4958, %r4952, %r4953, 23;
	shf.l.wrap.b32 	%r4959, %r4953, %r4952, 23;
	mov.b64 	%rd6428, {%r4959, %r4958};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	xor.b64  	%rd6430, %rd6388, %rd6363;
	and.b64  	%rd6431, %rd6413, %rd6430;
	xor.b64  	%rd6432, %rd6431, %rd6363;
	add.s64 	%rd6433, %rd6338, %rd9803;
	ld.const.u64 	%rd6434, [%rd6274+48];
	add.s64 	%rd6435, %rd6433, %rd6434;
	add.s64 	%rd6436, %rd6435, %rd6432;
	add.s64 	%rd6437, %rd6436, %rd6429;
	add.s64 	%rd6438, %rd6437, %rd6349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4960,%dummy}, %rd6424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4961}, %rd6424;
	}
	shf.r.wrap.b32 	%r4962, %r4961, %r4960, 28;
	shf.r.wrap.b32 	%r4963, %r4960, %r4961, 28;
	mov.b64 	%rd6439, {%r4963, %r4962};
	shf.l.wrap.b32 	%r4964, %r4960, %r4961, 30;
	shf.l.wrap.b32 	%r4965, %r4961, %r4960, 30;
	mov.b64 	%rd6440, {%r4965, %r4964};
	xor.b64  	%rd6441, %rd6440, %rd6439;
	shf.l.wrap.b32 	%r4966, %r4960, %r4961, 25;
	shf.l.wrap.b32 	%r4967, %r4961, %r4960, 25;
	mov.b64 	%rd6442, {%r4967, %r4966};
	xor.b64  	%rd6443, %rd6441, %rd6442;
	and.b64  	%rd6444, %rd6424, %rd6399;
	xor.b64  	%rd6445, %rd6424, %rd6399;
	and.b64  	%rd6446, %rd6445, %rd6374;
	or.b64  	%rd6447, %rd6446, %rd6444;
	add.s64 	%rd6448, %rd6437, %rd6447;
	add.s64 	%rd6449, %rd6448, %rd6443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4968,%dummy}, %rd6438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4969}, %rd6438;
	}
	shf.r.wrap.b32 	%r4970, %r4969, %r4968, 14;
	shf.r.wrap.b32 	%r4971, %r4968, %r4969, 14;
	mov.b64 	%rd6450, {%r4971, %r4970};
	shf.r.wrap.b32 	%r4972, %r4969, %r4968, 18;
	shf.r.wrap.b32 	%r4973, %r4968, %r4969, 18;
	mov.b64 	%rd6451, {%r4973, %r4972};
	xor.b64  	%rd6452, %rd6451, %rd6450;
	shf.l.wrap.b32 	%r4974, %r4968, %r4969, 23;
	shf.l.wrap.b32 	%r4975, %r4969, %r4968, 23;
	mov.b64 	%rd6453, {%r4975, %r4974};
	xor.b64  	%rd6454, %rd6452, %rd6453;
	xor.b64  	%rd6455, %rd6413, %rd6388;
	and.b64  	%rd6456, %rd6438, %rd6455;
	xor.b64  	%rd6457, %rd6456, %rd6388;
	add.s64 	%rd6458, %rd6363, %rd9804;
	ld.const.u64 	%rd6459, [%rd6274+56];
	add.s64 	%rd6460, %rd6458, %rd6459;
	add.s64 	%rd6461, %rd6460, %rd6457;
	add.s64 	%rd6462, %rd6461, %rd6454;
	add.s64 	%rd6463, %rd6462, %rd6374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4976,%dummy}, %rd6449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4977}, %rd6449;
	}
	shf.r.wrap.b32 	%r4978, %r4977, %r4976, 28;
	shf.r.wrap.b32 	%r4979, %r4976, %r4977, 28;
	mov.b64 	%rd6464, {%r4979, %r4978};
	shf.l.wrap.b32 	%r4980, %r4976, %r4977, 30;
	shf.l.wrap.b32 	%r4981, %r4977, %r4976, 30;
	mov.b64 	%rd6465, {%r4981, %r4980};
	xor.b64  	%rd6466, %rd6465, %rd6464;
	shf.l.wrap.b32 	%r4982, %r4976, %r4977, 25;
	shf.l.wrap.b32 	%r4983, %r4977, %r4976, 25;
	mov.b64 	%rd6467, {%r4983, %r4982};
	xor.b64  	%rd6468, %rd6466, %rd6467;
	and.b64  	%rd6469, %rd6449, %rd6424;
	xor.b64  	%rd6470, %rd6449, %rd6424;
	and.b64  	%rd6471, %rd6470, %rd6399;
	or.b64  	%rd6472, %rd6471, %rd6469;
	add.s64 	%rd6473, %rd6462, %rd6472;
	add.s64 	%rd6474, %rd6473, %rd6468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4984,%dummy}, %rd6463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4985}, %rd6463;
	}
	shf.r.wrap.b32 	%r4986, %r4985, %r4984, 14;
	shf.r.wrap.b32 	%r4987, %r4984, %r4985, 14;
	mov.b64 	%rd6475, {%r4987, %r4986};
	shf.r.wrap.b32 	%r4988, %r4985, %r4984, 18;
	shf.r.wrap.b32 	%r4989, %r4984, %r4985, 18;
	mov.b64 	%rd6476, {%r4989, %r4988};
	xor.b64  	%rd6477, %rd6476, %rd6475;
	shf.l.wrap.b32 	%r4990, %r4984, %r4985, 23;
	shf.l.wrap.b32 	%r4991, %r4985, %r4984, 23;
	mov.b64 	%rd6478, {%r4991, %r4990};
	xor.b64  	%rd6479, %rd6477, %rd6478;
	xor.b64  	%rd6480, %rd6438, %rd6413;
	and.b64  	%rd6481, %rd6463, %rd6480;
	xor.b64  	%rd6482, %rd6481, %rd6413;
	add.s64 	%rd6483, %rd6388, %rd9788;
	ld.const.u64 	%rd6484, [%rd6274+64];
	add.s64 	%rd6485, %rd6483, %rd6484;
	add.s64 	%rd6486, %rd6485, %rd6482;
	add.s64 	%rd6487, %rd6486, %rd6479;
	add.s64 	%rd6488, %rd6487, %rd6399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4992,%dummy}, %rd6474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd6474;
	}
	shf.r.wrap.b32 	%r4994, %r4993, %r4992, 28;
	shf.r.wrap.b32 	%r4995, %r4992, %r4993, 28;
	mov.b64 	%rd6489, {%r4995, %r4994};
	shf.l.wrap.b32 	%r4996, %r4992, %r4993, 30;
	shf.l.wrap.b32 	%r4997, %r4993, %r4992, 30;
	mov.b64 	%rd6490, {%r4997, %r4996};
	xor.b64  	%rd6491, %rd6490, %rd6489;
	shf.l.wrap.b32 	%r4998, %r4992, %r4993, 25;
	shf.l.wrap.b32 	%r4999, %r4993, %r4992, 25;
	mov.b64 	%rd6492, {%r4999, %r4998};
	xor.b64  	%rd6493, %rd6491, %rd6492;
	and.b64  	%rd6494, %rd6474, %rd6449;
	xor.b64  	%rd6495, %rd6474, %rd6449;
	and.b64  	%rd6496, %rd6495, %rd6424;
	or.b64  	%rd6497, %rd6496, %rd6494;
	add.s64 	%rd6498, %rd6487, %rd6497;
	add.s64 	%rd6499, %rd6498, %rd6493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5000,%dummy}, %rd6488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5001}, %rd6488;
	}
	shf.r.wrap.b32 	%r5002, %r5001, %r5000, 14;
	shf.r.wrap.b32 	%r5003, %r5000, %r5001, 14;
	mov.b64 	%rd6500, {%r5003, %r5002};
	shf.r.wrap.b32 	%r5004, %r5001, %r5000, 18;
	shf.r.wrap.b32 	%r5005, %r5000, %r5001, 18;
	mov.b64 	%rd6501, {%r5005, %r5004};
	xor.b64  	%rd6502, %rd6501, %rd6500;
	shf.l.wrap.b32 	%r5006, %r5000, %r5001, 23;
	shf.l.wrap.b32 	%r5007, %r5001, %r5000, 23;
	mov.b64 	%rd6503, {%r5007, %r5006};
	xor.b64  	%rd6504, %rd6502, %rd6503;
	xor.b64  	%rd6505, %rd6463, %rd6438;
	and.b64  	%rd6506, %rd6488, %rd6505;
	xor.b64  	%rd6507, %rd6506, %rd6438;
	add.s64 	%rd6508, %rd6413, %rd9787;
	ld.const.u64 	%rd6509, [%rd6274+72];
	add.s64 	%rd6510, %rd6508, %rd6509;
	add.s64 	%rd6511, %rd6510, %rd6507;
	add.s64 	%rd6512, %rd6511, %rd6504;
	add.s64 	%rd6513, %rd6512, %rd6424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5008,%dummy}, %rd6499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5009}, %rd6499;
	}
	shf.r.wrap.b32 	%r5010, %r5009, %r5008, 28;
	shf.r.wrap.b32 	%r5011, %r5008, %r5009, 28;
	mov.b64 	%rd6514, {%r5011, %r5010};
	shf.l.wrap.b32 	%r5012, %r5008, %r5009, 30;
	shf.l.wrap.b32 	%r5013, %r5009, %r5008, 30;
	mov.b64 	%rd6515, {%r5013, %r5012};
	xor.b64  	%rd6516, %rd6515, %rd6514;
	shf.l.wrap.b32 	%r5014, %r5008, %r5009, 25;
	shf.l.wrap.b32 	%r5015, %r5009, %r5008, 25;
	mov.b64 	%rd6517, {%r5015, %r5014};
	xor.b64  	%rd6518, %rd6516, %rd6517;
	and.b64  	%rd6519, %rd6499, %rd6474;
	xor.b64  	%rd6520, %rd6499, %rd6474;
	and.b64  	%rd6521, %rd6520, %rd6449;
	or.b64  	%rd6522, %rd6521, %rd6519;
	add.s64 	%rd6523, %rd6512, %rd6522;
	add.s64 	%rd6524, %rd6523, %rd6518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5016,%dummy}, %rd6513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5017}, %rd6513;
	}
	shf.r.wrap.b32 	%r5018, %r5017, %r5016, 14;
	shf.r.wrap.b32 	%r5019, %r5016, %r5017, 14;
	mov.b64 	%rd6525, {%r5019, %r5018};
	shf.r.wrap.b32 	%r5020, %r5017, %r5016, 18;
	shf.r.wrap.b32 	%r5021, %r5016, %r5017, 18;
	mov.b64 	%rd6526, {%r5021, %r5020};
	xor.b64  	%rd6527, %rd6526, %rd6525;
	shf.l.wrap.b32 	%r5022, %r5016, %r5017, 23;
	shf.l.wrap.b32 	%r5023, %r5017, %r5016, 23;
	mov.b64 	%rd6528, {%r5023, %r5022};
	xor.b64  	%rd6529, %rd6527, %rd6528;
	xor.b64  	%rd6530, %rd6488, %rd6463;
	and.b64  	%rd6531, %rd6513, %rd6530;
	xor.b64  	%rd6532, %rd6531, %rd6463;
	add.s64 	%rd6533, %rd6438, %rd9786;
	ld.const.u64 	%rd6534, [%rd6274+80];
	add.s64 	%rd6535, %rd6533, %rd6534;
	add.s64 	%rd6536, %rd6535, %rd6532;
	add.s64 	%rd6537, %rd6536, %rd6529;
	add.s64 	%rd6538, %rd6537, %rd6449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5024,%dummy}, %rd6524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd6524;
	}
	shf.r.wrap.b32 	%r5026, %r5025, %r5024, 28;
	shf.r.wrap.b32 	%r5027, %r5024, %r5025, 28;
	mov.b64 	%rd6539, {%r5027, %r5026};
	shf.l.wrap.b32 	%r5028, %r5024, %r5025, 30;
	shf.l.wrap.b32 	%r5029, %r5025, %r5024, 30;
	mov.b64 	%rd6540, {%r5029, %r5028};
	xor.b64  	%rd6541, %rd6540, %rd6539;
	shf.l.wrap.b32 	%r5030, %r5024, %r5025, 25;
	shf.l.wrap.b32 	%r5031, %r5025, %r5024, 25;
	mov.b64 	%rd6542, {%r5031, %r5030};
	xor.b64  	%rd6543, %rd6541, %rd6542;
	and.b64  	%rd6544, %rd6524, %rd6499;
	xor.b64  	%rd6545, %rd6524, %rd6499;
	and.b64  	%rd6546, %rd6545, %rd6474;
	or.b64  	%rd6547, %rd6546, %rd6544;
	add.s64 	%rd6548, %rd6537, %rd6547;
	add.s64 	%rd6549, %rd6548, %rd6543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd6538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd6538;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 14;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 14;
	mov.b64 	%rd6550, {%r5035, %r5034};
	shf.r.wrap.b32 	%r5036, %r5033, %r5032, 18;
	shf.r.wrap.b32 	%r5037, %r5032, %r5033, 18;
	mov.b64 	%rd6551, {%r5037, %r5036};
	xor.b64  	%rd6552, %rd6551, %rd6550;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 23;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 23;
	mov.b64 	%rd6553, {%r5039, %r5038};
	xor.b64  	%rd6554, %rd6552, %rd6553;
	xor.b64  	%rd6555, %rd6513, %rd6488;
	and.b64  	%rd6556, %rd6538, %rd6555;
	xor.b64  	%rd6557, %rd6556, %rd6488;
	add.s64 	%rd6558, %rd6463, %rd9785;
	ld.const.u64 	%rd6559, [%rd6274+88];
	add.s64 	%rd6560, %rd6558, %rd6559;
	add.s64 	%rd6561, %rd6560, %rd6557;
	add.s64 	%rd6562, %rd6561, %rd6554;
	add.s64 	%rd6563, %rd6562, %rd6474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd6549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd6549;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 28;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 28;
	mov.b64 	%rd6564, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 30;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 30;
	mov.b64 	%rd6565, {%r5045, %r5044};
	xor.b64  	%rd6566, %rd6565, %rd6564;
	shf.l.wrap.b32 	%r5046, %r5040, %r5041, 25;
	shf.l.wrap.b32 	%r5047, %r5041, %r5040, 25;
	mov.b64 	%rd6567, {%r5047, %r5046};
	xor.b64  	%rd6568, %rd6566, %rd6567;
	and.b64  	%rd6569, %rd6549, %rd6524;
	xor.b64  	%rd6570, %rd6549, %rd6524;
	and.b64  	%rd6571, %rd6570, %rd6499;
	or.b64  	%rd6572, %rd6571, %rd6569;
	add.s64 	%rd6573, %rd6562, %rd6572;
	add.s64 	%rd6574, %rd6573, %rd6568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5048,%dummy}, %rd6563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5049}, %rd6563;
	}
	shf.r.wrap.b32 	%r5050, %r5049, %r5048, 14;
	shf.r.wrap.b32 	%r5051, %r5048, %r5049, 14;
	mov.b64 	%rd6575, {%r5051, %r5050};
	shf.r.wrap.b32 	%r5052, %r5049, %r5048, 18;
	shf.r.wrap.b32 	%r5053, %r5048, %r5049, 18;
	mov.b64 	%rd6576, {%r5053, %r5052};
	xor.b64  	%rd6577, %rd6576, %rd6575;
	shf.l.wrap.b32 	%r5054, %r5048, %r5049, 23;
	shf.l.wrap.b32 	%r5055, %r5049, %r5048, 23;
	mov.b64 	%rd6578, {%r5055, %r5054};
	xor.b64  	%rd6579, %rd6577, %rd6578;
	xor.b64  	%rd6580, %rd6538, %rd6513;
	and.b64  	%rd6581, %rd6563, %rd6580;
	xor.b64  	%rd6582, %rd6581, %rd6513;
	add.s64 	%rd6583, %rd6488, %rd9784;
	ld.const.u64 	%rd6584, [%rd6274+96];
	add.s64 	%rd6585, %rd6583, %rd6584;
	add.s64 	%rd6586, %rd6585, %rd6582;
	add.s64 	%rd6587, %rd6586, %rd6579;
	add.s64 	%rd9796, %rd6587, %rd6499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5056,%dummy}, %rd6574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5057}, %rd6574;
	}
	shf.r.wrap.b32 	%r5058, %r5057, %r5056, 28;
	shf.r.wrap.b32 	%r5059, %r5056, %r5057, 28;
	mov.b64 	%rd6588, {%r5059, %r5058};
	shf.l.wrap.b32 	%r5060, %r5056, %r5057, 30;
	shf.l.wrap.b32 	%r5061, %r5057, %r5056, 30;
	mov.b64 	%rd6589, {%r5061, %r5060};
	xor.b64  	%rd6590, %rd6589, %rd6588;
	shf.l.wrap.b32 	%r5062, %r5056, %r5057, 25;
	shf.l.wrap.b32 	%r5063, %r5057, %r5056, 25;
	mov.b64 	%rd6591, {%r5063, %r5062};
	xor.b64  	%rd6592, %rd6590, %rd6591;
	and.b64  	%rd6593, %rd6574, %rd6549;
	xor.b64  	%rd6594, %rd6574, %rd6549;
	and.b64  	%rd6595, %rd6594, %rd6524;
	or.b64  	%rd6596, %rd6595, %rd6593;
	add.s64 	%rd6597, %rd6587, %rd6596;
	add.s64 	%rd9792, %rd6597, %rd6592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5064,%dummy}, %rd9796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5065}, %rd9796;
	}
	shf.r.wrap.b32 	%r5066, %r5065, %r5064, 14;
	shf.r.wrap.b32 	%r5067, %r5064, %r5065, 14;
	mov.b64 	%rd6598, {%r5067, %r5066};
	shf.r.wrap.b32 	%r5068, %r5065, %r5064, 18;
	shf.r.wrap.b32 	%r5069, %r5064, %r5065, 18;
	mov.b64 	%rd6599, {%r5069, %r5068};
	xor.b64  	%rd6600, %rd6599, %rd6598;
	shf.l.wrap.b32 	%r5070, %r5064, %r5065, 23;
	shf.l.wrap.b32 	%r5071, %r5065, %r5064, 23;
	mov.b64 	%rd6601, {%r5071, %r5070};
	xor.b64  	%rd6602, %rd6600, %rd6601;
	xor.b64  	%rd6603, %rd6563, %rd6538;
	and.b64  	%rd6604, %rd9796, %rd6603;
	xor.b64  	%rd6605, %rd6604, %rd6538;
	add.s64 	%rd6606, %rd6513, %rd9783;
	ld.const.u64 	%rd6607, [%rd6274+104];
	add.s64 	%rd6608, %rd6606, %rd6607;
	add.s64 	%rd6609, %rd6608, %rd6605;
	add.s64 	%rd6610, %rd6609, %rd6602;
	add.s64 	%rd9795, %rd6610, %rd6524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5072,%dummy}, %rd9792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5073}, %rd9792;
	}
	shf.r.wrap.b32 	%r5074, %r5073, %r5072, 28;
	shf.r.wrap.b32 	%r5075, %r5072, %r5073, 28;
	mov.b64 	%rd6611, {%r5075, %r5074};
	shf.l.wrap.b32 	%r5076, %r5072, %r5073, 30;
	shf.l.wrap.b32 	%r5077, %r5073, %r5072, 30;
	mov.b64 	%rd6612, {%r5077, %r5076};
	xor.b64  	%rd6613, %rd6612, %rd6611;
	shf.l.wrap.b32 	%r5078, %r5072, %r5073, 25;
	shf.l.wrap.b32 	%r5079, %r5073, %r5072, 25;
	mov.b64 	%rd6614, {%r5079, %r5078};
	xor.b64  	%rd6615, %rd6613, %rd6614;
	and.b64  	%rd6616, %rd9792, %rd6574;
	xor.b64  	%rd6617, %rd9792, %rd6574;
	and.b64  	%rd6618, %rd6617, %rd6549;
	or.b64  	%rd6619, %rd6618, %rd6616;
	add.s64 	%rd6620, %rd6610, %rd6619;
	add.s64 	%rd9791, %rd6620, %rd6615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5080,%dummy}, %rd9795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5081}, %rd9795;
	}
	shf.r.wrap.b32 	%r5082, %r5081, %r5080, 14;
	shf.r.wrap.b32 	%r5083, %r5080, %r5081, 14;
	mov.b64 	%rd6621, {%r5083, %r5082};
	shf.r.wrap.b32 	%r5084, %r5081, %r5080, 18;
	shf.r.wrap.b32 	%r5085, %r5080, %r5081, 18;
	mov.b64 	%rd6622, {%r5085, %r5084};
	xor.b64  	%rd6623, %rd6622, %rd6621;
	shf.l.wrap.b32 	%r5086, %r5080, %r5081, 23;
	shf.l.wrap.b32 	%r5087, %r5081, %r5080, 23;
	mov.b64 	%rd6624, {%r5087, %r5086};
	xor.b64  	%rd6625, %rd6623, %rd6624;
	xor.b64  	%rd6626, %rd9796, %rd6563;
	and.b64  	%rd6627, %rd9795, %rd6626;
	xor.b64  	%rd6628, %rd6627, %rd6563;
	add.s64 	%rd6629, %rd6538, %rd9782;
	ld.const.u64 	%rd6630, [%rd6274+112];
	add.s64 	%rd6631, %rd6629, %rd6630;
	add.s64 	%rd6632, %rd6631, %rd6628;
	add.s64 	%rd6633, %rd6632, %rd6625;
	add.s64 	%rd9794, %rd6633, %rd6549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5088,%dummy}, %rd9791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5089}, %rd9791;
	}
	shf.r.wrap.b32 	%r5090, %r5089, %r5088, 28;
	shf.r.wrap.b32 	%r5091, %r5088, %r5089, 28;
	mov.b64 	%rd6634, {%r5091, %r5090};
	shf.l.wrap.b32 	%r5092, %r5088, %r5089, 30;
	shf.l.wrap.b32 	%r5093, %r5089, %r5088, 30;
	mov.b64 	%rd6635, {%r5093, %r5092};
	xor.b64  	%rd6636, %rd6635, %rd6634;
	shf.l.wrap.b32 	%r5094, %r5088, %r5089, 25;
	shf.l.wrap.b32 	%r5095, %r5089, %r5088, 25;
	mov.b64 	%rd6637, {%r5095, %r5094};
	xor.b64  	%rd6638, %rd6636, %rd6637;
	and.b64  	%rd6639, %rd9791, %rd9792;
	xor.b64  	%rd6640, %rd9791, %rd9792;
	and.b64  	%rd6641, %rd6640, %rd6574;
	or.b64  	%rd6642, %rd6641, %rd6639;
	add.s64 	%rd6643, %rd6633, %rd6642;
	add.s64 	%rd9790, %rd6643, %rd6638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5096,%dummy}, %rd9794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5097}, %rd9794;
	}
	shf.r.wrap.b32 	%r5098, %r5097, %r5096, 14;
	shf.r.wrap.b32 	%r5099, %r5096, %r5097, 14;
	mov.b64 	%rd6644, {%r5099, %r5098};
	shf.r.wrap.b32 	%r5100, %r5097, %r5096, 18;
	shf.r.wrap.b32 	%r5101, %r5096, %r5097, 18;
	mov.b64 	%rd6645, {%r5101, %r5100};
	xor.b64  	%rd6646, %rd6645, %rd6644;
	shf.l.wrap.b32 	%r5102, %r5096, %r5097, 23;
	shf.l.wrap.b32 	%r5103, %r5097, %r5096, 23;
	mov.b64 	%rd6647, {%r5103, %r5102};
	xor.b64  	%rd6648, %rd6646, %rd6647;
	xor.b64  	%rd6649, %rd9795, %rd9796;
	and.b64  	%rd6650, %rd9794, %rd6649;
	xor.b64  	%rd6651, %rd6650, %rd9796;
	add.s64 	%rd6652, %rd6563, %rd9781;
	ld.const.u64 	%rd6653, [%rd6274+120];
	add.s64 	%rd6654, %rd6652, %rd6653;
	add.s64 	%rd6655, %rd6654, %rd6651;
	add.s64 	%rd6656, %rd6655, %rd6648;
	add.s64 	%rd9793, %rd6656, %rd6574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5104,%dummy}, %rd9790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5105}, %rd9790;
	}
	shf.r.wrap.b32 	%r5106, %r5105, %r5104, 28;
	shf.r.wrap.b32 	%r5107, %r5104, %r5105, 28;
	mov.b64 	%rd6657, {%r5107, %r5106};
	shf.l.wrap.b32 	%r5108, %r5104, %r5105, 30;
	shf.l.wrap.b32 	%r5109, %r5105, %r5104, 30;
	mov.b64 	%rd6658, {%r5109, %r5108};
	xor.b64  	%rd6659, %rd6658, %rd6657;
	shf.l.wrap.b32 	%r5110, %r5104, %r5105, 25;
	shf.l.wrap.b32 	%r5111, %r5105, %r5104, 25;
	mov.b64 	%rd6660, {%r5111, %r5110};
	xor.b64  	%rd6661, %rd6659, %rd6660;
	and.b64  	%rd6662, %rd9790, %rd9791;
	xor.b64  	%rd6663, %rd9790, %rd9791;
	and.b64  	%rd6664, %rd6663, %rd9792;
	or.b64  	%rd6665, %rd6664, %rd6662;
	add.s64 	%rd6666, %rd6656, %rd6665;
	add.s64 	%rd9789, %rd6666, %rd6661;
	add.s32 	%r7502, %r7502, 16;
	setp.lt.s32	%p38, %r7502, 80;
	@%p38 bra 	BB3_29;

	mov.u32 	%r7366, 255;
	add.s64 	%rd6667, %rd9780, %rd9789;
	st.local.u64 	[%rd384+-192], %rd6667;
	add.s64 	%rd6668, %rd9779, %rd9790;
	st.local.u64 	[%rd384+-184], %rd6668;
	add.s64 	%rd6669, %rd9778, %rd9791;
	st.local.u64 	[%rd384+-176], %rd6669;
	add.s64 	%rd6670, %rd9777, %rd9792;
	st.local.u64 	[%rd384+-168], %rd6670;
	add.s64 	%rd6671, %rd9776, %rd9793;
	st.local.u64 	[%rd384+-160], %rd6671;
	add.s64 	%rd6672, %rd9775, %rd9794;
	st.local.u64 	[%rd384+-152], %rd6672;
	add.s64 	%rd6673, %rd9774, %rd9795;
	st.local.u64 	[%rd384+-144], %rd6673;
	add.s64 	%rd6674, %rd9773, %rd9796;
	st.local.u64 	[%rd384+-136], %rd6674;
	mov.b64	{%r5112, %r5113}, %rd6667;
	mov.b64	{%r5114, %r5115}, %rd6668;
	mov.b64	{%r5116, %r5117}, %rd6669;
	mov.b64	{%r5118, %r5119}, %rd6670;
	mov.b64	{%r5120, %r5121}, %rd6671;
	mov.b64	{%r5122, %r5123}, %rd6672;
	mov.b64	{%r5124, %r5125}, %rd6673;
	mov.b64	{%r5126, %r5127}, %rd6674;
	ld.local.u32 	%r5128, [%rd384+200];
	add.s32 	%r322, %r5128, 64;
	not.b32 	%r5129, %r322;
	st.local.u32 	[%rd384+200], %r322;
	and.b32  	%r5130, %r322, 127;
	bfe.u32 	%r5131, %r322, 2, 2;
	and.b32  	%r5132, %r5129, 3;
	shl.b32 	%r5133, %r5132, 3;
	shl.b32 	%r5135, %r7366, %r5133;
	setp.eq.s32	%p39, %r5131, 0;
	selp.b32	%r5136, %r5135, 0, %p39;
	setp.eq.s32	%p40, %r5131, 1;
	selp.b32	%r5137, %r5135, 0, %p40;
	setp.eq.s32	%p41, %r5131, 2;
	selp.b32	%r5138, %r5135, 0, %p41;
	setp.eq.s32	%p42, %r5131, 3;
	selp.b32	%r5139, %r5135, 0, %p42;
	bfe.u32 	%r5140, %r322, 4, 3;
	setp.eq.s32	%p43, %r5140, 0;
	selp.b32	%r5141, -2139062144, 0, %p43;
	and.b32  	%r5142, %r5136, %r5141;
	or.b32  	%r7533, %r5142, %r5113;
	and.b32  	%r5143, %r5137, %r5141;
	or.b32  	%r7532, %r5143, %r5112;
	st.local.v2.u32 	[%rd384+72], {%r7533, %r7532};
	and.b32  	%r5144, %r5138, %r5141;
	or.b32  	%r7531, %r5144, %r5115;
	and.b32  	%r5145, %r5139, %r5141;
	or.b32  	%r7530, %r5145, %r5114;
	st.local.v2.u32 	[%rd384+80], {%r7531, %r7530};
	setp.eq.s32	%p44, %r5140, 1;
	selp.b32	%r5146, -2139062144, 0, %p44;
	and.b32  	%r5147, %r5136, %r5146;
	or.b32  	%r7529, %r5147, %r5117;
	and.b32  	%r5148, %r5137, %r5146;
	or.b32  	%r7528, %r5148, %r5116;
	st.local.v2.u32 	[%rd384+88], {%r7529, %r7528};
	and.b32  	%r5149, %r5138, %r5146;
	or.b32  	%r7527, %r5119, %r5149;
	and.b32  	%r5150, %r5139, %r5146;
	or.b32  	%r7526, %r5118, %r5150;
	st.local.v2.u32 	[%rd384+96], {%r7527, %r7526};
	setp.eq.s32	%p45, %r5140, 2;
	selp.b32	%r5151, -2139062144, 0, %p45;
	and.b32  	%r5152, %r5136, %r5151;
	or.b32  	%r7525, %r5121, %r5152;
	and.b32  	%r5153, %r5137, %r5151;
	or.b32  	%r7524, %r5120, %r5153;
	st.local.v2.u32 	[%rd384+104], {%r7525, %r7524};
	and.b32  	%r5154, %r5138, %r5151;
	or.b32  	%r7523, %r5123, %r5154;
	and.b32  	%r5155, %r5139, %r5151;
	or.b32  	%r7522, %r5122, %r5155;
	st.local.v2.u32 	[%rd384+112], {%r7523, %r7522};
	setp.eq.s32	%p46, %r5140, 3;
	selp.b32	%r5156, -2139062144, 0, %p46;
	and.b32  	%r5157, %r5136, %r5156;
	or.b32  	%r7521, %r5125, %r5157;
	and.b32  	%r5158, %r5137, %r5156;
	or.b32  	%r7520, %r5124, %r5158;
	st.local.v2.u32 	[%rd384+120], {%r7521, %r7520};
	and.b32  	%r5159, %r5138, %r5156;
	or.b32  	%r7519, %r5127, %r5159;
	and.b32  	%r5160, %r5139, %r5156;
	or.b32  	%r7518, %r5126, %r5160;
	st.local.v2.u32 	[%rd384+128], {%r7519, %r7518};
	setp.eq.s32	%p47, %r5140, 4;
	selp.b32	%r5161, -2139062144, 0, %p47;
	and.b32  	%r7517, %r5136, %r5161;
	and.b32  	%r7516, %r5137, %r5161;
	st.local.v2.u32 	[%rd384+136], {%r7517, %r7516};
	and.b32  	%r7515, %r5138, %r5161;
	and.b32  	%r7514, %r5139, %r5161;
	st.local.v2.u32 	[%rd384+144], {%r7515, %r7514};
	setp.eq.s32	%p48, %r5140, 5;
	selp.b32	%r5162, -2139062144, 0, %p48;
	and.b32  	%r7513, %r5136, %r5162;
	and.b32  	%r7512, %r5137, %r5162;
	st.local.v2.u32 	[%rd384+152], {%r7513, %r7512};
	and.b32  	%r7511, %r5138, %r5162;
	and.b32  	%r7510, %r5139, %r5162;
	st.local.v2.u32 	[%rd384+160], {%r7511, %r7510};
	setp.eq.s32	%p49, %r5140, 6;
	selp.b32	%r5163, -2139062144, 0, %p49;
	and.b32  	%r7509, %r5136, %r5163;
	and.b32  	%r7508, %r5137, %r5163;
	st.local.v2.u32 	[%rd384+168], {%r7509, %r7508};
	and.b32  	%r7507, %r5138, %r5163;
	and.b32  	%r7506, %r5139, %r5163;
	st.local.v2.u32 	[%rd384+176], {%r7507, %r7506};
	setp.eq.s32	%p50, %r5140, 7;
	selp.b32	%r5164, -2139062144, 0, %p50;
	and.b32  	%r7505, %r5136, %r5164;
	and.b32  	%r7504, %r5137, %r5164;
	st.local.v2.u32 	[%rd384+184], {%r7505, %r7504};
	and.b32  	%r353, %r5138, %r5164;
	and.b32  	%r354, %r5139, %r5164;
	st.local.v2.u32 	[%rd384+192], {%r353, %r354};
	ld.local.u64 	%rd9836, [%rd384+8];
	ld.local.u64 	%rd9835, [%rd384+16];
	ld.local.u64 	%rd9834, [%rd384+24];
	ld.local.u64 	%rd9833, [%rd384+32];
	ld.local.u64 	%rd9832, [%rd384+40];
	ld.local.u64 	%rd9831, [%rd384+48];
	ld.local.u64 	%rd9830, [%rd384+56];
	ld.local.u64 	%rd9829, [%rd384+64];
	setp.lt.u32	%p51, %r5130, 112;
	@%p51 bra 	BB3_34;

	mov.b64	%rd9821, {%r7532, %r7533};
	mov.b64	%rd9822, {%r7530, %r7531};
	mov.b64	%rd9823, {%r7528, %r7529};
	mov.b64	%rd9824, {%r7526, %r7527};
	mov.b64	%rd9825, {%r7524, %r7525};
	mov.b64	%rd9826, {%r7522, %r7523};
	mov.b64	%rd9827, {%r7520, %r7521};
	mov.b64	%rd9828, {%r7518, %r7519};
	mov.b64	%rd9812, {%r7516, %r7517};
	mov.b64	%rd9811, {%r7514, %r7515};
	mov.b64	%rd9810, {%r7512, %r7513};
	mov.b64	%rd9809, {%r7510, %r7511};
	mov.b64	%rd9808, {%r7508, %r7509};
	mov.b64	%rd9807, {%r7506, %r7507};
	mov.b64	%rd9806, {%r7504, %r7505};
	mov.b64	%rd9805, {%r354, %r353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5166,%dummy}, %rd9832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5167}, %rd9832;
	}
	shf.r.wrap.b32 	%r5168, %r5167, %r5166, 18;
	shf.r.wrap.b32 	%r5169, %r5166, %r5167, 18;
	mov.b64 	%rd6675, {%r5169, %r5168};
	shf.r.wrap.b32 	%r5170, %r5167, %r5166, 14;
	shf.r.wrap.b32 	%r5171, %r5166, %r5167, 14;
	mov.b64 	%rd6676, {%r5171, %r5170};
	xor.b64  	%rd6677, %rd6675, %rd6676;
	shf.l.wrap.b32 	%r5172, %r5166, %r5167, 23;
	shf.l.wrap.b32 	%r5173, %r5167, %r5166, 23;
	mov.b64 	%rd6678, {%r5173, %r5172};
	xor.b64  	%rd6679, %rd6677, %rd6678;
	xor.b64  	%rd6680, %rd9830, %rd9831;
	and.b64  	%rd6681, %rd6680, %rd9832;
	xor.b64  	%rd6682, %rd6681, %rd9830;
	add.s64 	%rd6683, %rd6682, %rd9829;
	add.s64 	%rd6684, %rd6683, %rd9821;
	add.s64 	%rd6685, %rd6684, %rd9722;
	add.s64 	%rd6686, %rd6685, %rd6679;
	add.s64 	%rd6687, %rd6686, %rd9833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5174}, %rd9836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5175,%dummy}, %rd9836;
	}
	shf.l.wrap.b32 	%r5176, %r5175, %r5174, 30;
	shf.l.wrap.b32 	%r5177, %r5174, %r5175, 30;
	mov.b64 	%rd6688, {%r5177, %r5176};
	shf.r.wrap.b32 	%r5178, %r5174, %r5175, 28;
	shf.r.wrap.b32 	%r5179, %r5175, %r5174, 28;
	mov.b64 	%rd6689, {%r5179, %r5178};
	xor.b64  	%rd6690, %rd6688, %rd6689;
	shf.l.wrap.b32 	%r5180, %r5175, %r5174, 25;
	shf.l.wrap.b32 	%r5181, %r5174, %r5175, 25;
	mov.b64 	%rd6691, {%r5181, %r5180};
	xor.b64  	%rd6692, %rd6690, %rd6691;
	xor.b64  	%rd6693, %rd9835, %rd9836;
	and.b64  	%rd6694, %rd9834, %rd6693;
	and.b64  	%rd6695, %rd9835, %rd9836;
	or.b64  	%rd6696, %rd6694, %rd6695;
	add.s64 	%rd6697, %rd6686, %rd6696;
	add.s64 	%rd6698, %rd6697, %rd6692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5182,%dummy}, %rd6687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5183}, %rd6687;
	}
	shf.r.wrap.b32 	%r5184, %r5183, %r5182, 14;
	shf.r.wrap.b32 	%r5185, %r5182, %r5183, 14;
	mov.b64 	%rd6699, {%r5185, %r5184};
	shf.r.wrap.b32 	%r5186, %r5183, %r5182, 18;
	shf.r.wrap.b32 	%r5187, %r5182, %r5183, 18;
	mov.b64 	%rd6700, {%r5187, %r5186};
	xor.b64  	%rd6701, %rd6700, %rd6699;
	shf.l.wrap.b32 	%r5188, %r5182, %r5183, 23;
	shf.l.wrap.b32 	%r5189, %r5183, %r5182, 23;
	mov.b64 	%rd6702, {%r5189, %r5188};
	xor.b64  	%rd6703, %rd6701, %rd6702;
	xor.b64  	%rd6704, %rd9831, %rd9832;
	and.b64  	%rd6705, %rd6687, %rd6704;
	xor.b64  	%rd6706, %rd6705, %rd9831;
	add.s64 	%rd6707, %rd9822, %rd9830;
	add.s64 	%rd6708, %rd6707, %rd9721;
	add.s64 	%rd6709, %rd6708, %rd6706;
	add.s64 	%rd6710, %rd6709, %rd6703;
	add.s64 	%rd6711, %rd6710, %rd9834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5190,%dummy}, %rd6698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5191}, %rd6698;
	}
	shf.r.wrap.b32 	%r5192, %r5191, %r5190, 28;
	shf.r.wrap.b32 	%r5193, %r5190, %r5191, 28;
	mov.b64 	%rd6712, {%r5193, %r5192};
	shf.l.wrap.b32 	%r5194, %r5190, %r5191, 30;
	shf.l.wrap.b32 	%r5195, %r5191, %r5190, 30;
	mov.b64 	%rd6713, {%r5195, %r5194};
	xor.b64  	%rd6714, %rd6713, %rd6712;
	shf.l.wrap.b32 	%r5196, %r5190, %r5191, 25;
	shf.l.wrap.b32 	%r5197, %r5191, %r5190, 25;
	mov.b64 	%rd6715, {%r5197, %r5196};
	xor.b64  	%rd6716, %rd6714, %rd6715;
	and.b64  	%rd6717, %rd6698, %rd9836;
	xor.b64  	%rd6718, %rd6698, %rd9836;
	and.b64  	%rd6719, %rd6718, %rd9835;
	or.b64  	%rd6720, %rd6719, %rd6717;
	add.s64 	%rd6721, %rd6710, %rd6720;
	add.s64 	%rd6722, %rd6721, %rd6716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5198,%dummy}, %rd6711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5199}, %rd6711;
	}
	shf.r.wrap.b32 	%r5200, %r5199, %r5198, 14;
	shf.r.wrap.b32 	%r5201, %r5198, %r5199, 14;
	mov.b64 	%rd6723, {%r5201, %r5200};
	shf.r.wrap.b32 	%r5202, %r5199, %r5198, 18;
	shf.r.wrap.b32 	%r5203, %r5198, %r5199, 18;
	mov.b64 	%rd6724, {%r5203, %r5202};
	xor.b64  	%rd6725, %rd6724, %rd6723;
	shf.l.wrap.b32 	%r5204, %r5198, %r5199, 23;
	shf.l.wrap.b32 	%r5205, %r5199, %r5198, 23;
	mov.b64 	%rd6726, {%r5205, %r5204};
	xor.b64  	%rd6727, %rd6725, %rd6726;
	xor.b64  	%rd6728, %rd6687, %rd9832;
	and.b64  	%rd6729, %rd6711, %rd6728;
	xor.b64  	%rd6730, %rd6729, %rd9832;
	add.s64 	%rd6731, %rd9823, %rd9831;
	add.s64 	%rd6732, %rd6731, %rd9720;
	add.s64 	%rd6733, %rd6732, %rd6730;
	add.s64 	%rd6734, %rd6733, %rd6727;
	add.s64 	%rd6735, %rd6734, %rd9835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5206,%dummy}, %rd6722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5207}, %rd6722;
	}
	shf.r.wrap.b32 	%r5208, %r5207, %r5206, 28;
	shf.r.wrap.b32 	%r5209, %r5206, %r5207, 28;
	mov.b64 	%rd6736, {%r5209, %r5208};
	shf.l.wrap.b32 	%r5210, %r5206, %r5207, 30;
	shf.l.wrap.b32 	%r5211, %r5207, %r5206, 30;
	mov.b64 	%rd6737, {%r5211, %r5210};
	xor.b64  	%rd6738, %rd6737, %rd6736;
	shf.l.wrap.b32 	%r5212, %r5206, %r5207, 25;
	shf.l.wrap.b32 	%r5213, %r5207, %r5206, 25;
	mov.b64 	%rd6739, {%r5213, %r5212};
	xor.b64  	%rd6740, %rd6738, %rd6739;
	and.b64  	%rd6741, %rd6722, %rd6698;
	xor.b64  	%rd6742, %rd6722, %rd6698;
	and.b64  	%rd6743, %rd6742, %rd9836;
	or.b64  	%rd6744, %rd6743, %rd6741;
	add.s64 	%rd6745, %rd6734, %rd6744;
	add.s64 	%rd6746, %rd6745, %rd6740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd6735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5215}, %rd6735;
	}
	shf.r.wrap.b32 	%r5216, %r5215, %r5214, 14;
	shf.r.wrap.b32 	%r5217, %r5214, %r5215, 14;
	mov.b64 	%rd6747, {%r5217, %r5216};
	shf.r.wrap.b32 	%r5218, %r5215, %r5214, 18;
	shf.r.wrap.b32 	%r5219, %r5214, %r5215, 18;
	mov.b64 	%rd6748, {%r5219, %r5218};
	xor.b64  	%rd6749, %rd6748, %rd6747;
	shf.l.wrap.b32 	%r5220, %r5214, %r5215, 23;
	shf.l.wrap.b32 	%r5221, %r5215, %r5214, 23;
	mov.b64 	%rd6750, {%r5221, %r5220};
	xor.b64  	%rd6751, %rd6749, %rd6750;
	xor.b64  	%rd6752, %rd6711, %rd6687;
	and.b64  	%rd6753, %rd6735, %rd6752;
	xor.b64  	%rd6754, %rd6753, %rd6687;
	add.s64 	%rd6755, %rd9824, %rd9832;
	add.s64 	%rd6756, %rd6755, %rd9719;
	add.s64 	%rd6757, %rd6756, %rd6754;
	add.s64 	%rd6758, %rd6757, %rd6751;
	add.s64 	%rd6759, %rd6758, %rd9836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd6746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5223}, %rd6746;
	}
	shf.r.wrap.b32 	%r5224, %r5223, %r5222, 28;
	shf.r.wrap.b32 	%r5225, %r5222, %r5223, 28;
	mov.b64 	%rd6760, {%r5225, %r5224};
	shf.l.wrap.b32 	%r5226, %r5222, %r5223, 30;
	shf.l.wrap.b32 	%r5227, %r5223, %r5222, 30;
	mov.b64 	%rd6761, {%r5227, %r5226};
	xor.b64  	%rd6762, %rd6761, %rd6760;
	shf.l.wrap.b32 	%r5228, %r5222, %r5223, 25;
	shf.l.wrap.b32 	%r5229, %r5223, %r5222, 25;
	mov.b64 	%rd6763, {%r5229, %r5228};
	xor.b64  	%rd6764, %rd6762, %rd6763;
	and.b64  	%rd6765, %rd6746, %rd6722;
	xor.b64  	%rd6766, %rd6746, %rd6722;
	and.b64  	%rd6767, %rd6766, %rd6698;
	or.b64  	%rd6768, %rd6767, %rd6765;
	add.s64 	%rd6769, %rd6758, %rd6768;
	add.s64 	%rd6770, %rd6769, %rd6764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5230,%dummy}, %rd6759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5231}, %rd6759;
	}
	shf.r.wrap.b32 	%r5232, %r5231, %r5230, 14;
	shf.r.wrap.b32 	%r5233, %r5230, %r5231, 14;
	mov.b64 	%rd6771, {%r5233, %r5232};
	shf.r.wrap.b32 	%r5234, %r5231, %r5230, 18;
	shf.r.wrap.b32 	%r5235, %r5230, %r5231, 18;
	mov.b64 	%rd6772, {%r5235, %r5234};
	xor.b64  	%rd6773, %rd6772, %rd6771;
	shf.l.wrap.b32 	%r5236, %r5230, %r5231, 23;
	shf.l.wrap.b32 	%r5237, %r5231, %r5230, 23;
	mov.b64 	%rd6774, {%r5237, %r5236};
	xor.b64  	%rd6775, %rd6773, %rd6774;
	xor.b64  	%rd6776, %rd6735, %rd6711;
	and.b64  	%rd6777, %rd6759, %rd6776;
	xor.b64  	%rd6778, %rd6777, %rd6711;
	add.s64 	%rd6779, %rd6687, %rd9825;
	add.s64 	%rd6780, %rd6779, %rd9718;
	add.s64 	%rd6781, %rd6780, %rd6778;
	add.s64 	%rd6782, %rd6781, %rd6775;
	add.s64 	%rd6783, %rd6782, %rd6698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5238,%dummy}, %rd6770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5239}, %rd6770;
	}
	shf.r.wrap.b32 	%r5240, %r5239, %r5238, 28;
	shf.r.wrap.b32 	%r5241, %r5238, %r5239, 28;
	mov.b64 	%rd6784, {%r5241, %r5240};
	shf.l.wrap.b32 	%r5242, %r5238, %r5239, 30;
	shf.l.wrap.b32 	%r5243, %r5239, %r5238, 30;
	mov.b64 	%rd6785, {%r5243, %r5242};
	xor.b64  	%rd6786, %rd6785, %rd6784;
	shf.l.wrap.b32 	%r5244, %r5238, %r5239, 25;
	shf.l.wrap.b32 	%r5245, %r5239, %r5238, 25;
	mov.b64 	%rd6787, {%r5245, %r5244};
	xor.b64  	%rd6788, %rd6786, %rd6787;
	and.b64  	%rd6789, %rd6770, %rd6746;
	xor.b64  	%rd6790, %rd6770, %rd6746;
	and.b64  	%rd6791, %rd6790, %rd6722;
	or.b64  	%rd6792, %rd6791, %rd6789;
	add.s64 	%rd6793, %rd6782, %rd6792;
	add.s64 	%rd6794, %rd6793, %rd6788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5246,%dummy}, %rd6783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5247}, %rd6783;
	}
	shf.r.wrap.b32 	%r5248, %r5247, %r5246, 14;
	shf.r.wrap.b32 	%r5249, %r5246, %r5247, 14;
	mov.b64 	%rd6795, {%r5249, %r5248};
	shf.r.wrap.b32 	%r5250, %r5247, %r5246, 18;
	shf.r.wrap.b32 	%r5251, %r5246, %r5247, 18;
	mov.b64 	%rd6796, {%r5251, %r5250};
	xor.b64  	%rd6797, %rd6796, %rd6795;
	shf.l.wrap.b32 	%r5252, %r5246, %r5247, 23;
	shf.l.wrap.b32 	%r5253, %r5247, %r5246, 23;
	mov.b64 	%rd6798, {%r5253, %r5252};
	xor.b64  	%rd6799, %rd6797, %rd6798;
	xor.b64  	%rd6800, %rd6759, %rd6735;
	and.b64  	%rd6801, %rd6783, %rd6800;
	xor.b64  	%rd6802, %rd6801, %rd6735;
	add.s64 	%rd6803, %rd6711, %rd9826;
	add.s64 	%rd6804, %rd6803, %rd9717;
	add.s64 	%rd6805, %rd6804, %rd6802;
	add.s64 	%rd6806, %rd6805, %rd6799;
	add.s64 	%rd6807, %rd6806, %rd6722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5254,%dummy}, %rd6794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5255}, %rd6794;
	}
	shf.r.wrap.b32 	%r5256, %r5255, %r5254, 28;
	shf.r.wrap.b32 	%r5257, %r5254, %r5255, 28;
	mov.b64 	%rd6808, {%r5257, %r5256};
	shf.l.wrap.b32 	%r5258, %r5254, %r5255, 30;
	shf.l.wrap.b32 	%r5259, %r5255, %r5254, 30;
	mov.b64 	%rd6809, {%r5259, %r5258};
	xor.b64  	%rd6810, %rd6809, %rd6808;
	shf.l.wrap.b32 	%r5260, %r5254, %r5255, 25;
	shf.l.wrap.b32 	%r5261, %r5255, %r5254, 25;
	mov.b64 	%rd6811, {%r5261, %r5260};
	xor.b64  	%rd6812, %rd6810, %rd6811;
	and.b64  	%rd6813, %rd6794, %rd6770;
	xor.b64  	%rd6814, %rd6794, %rd6770;
	and.b64  	%rd6815, %rd6814, %rd6746;
	or.b64  	%rd6816, %rd6815, %rd6813;
	add.s64 	%rd6817, %rd6806, %rd6816;
	add.s64 	%rd6818, %rd6817, %rd6812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5262,%dummy}, %rd6807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5263}, %rd6807;
	}
	shf.r.wrap.b32 	%r5264, %r5263, %r5262, 14;
	shf.r.wrap.b32 	%r5265, %r5262, %r5263, 14;
	mov.b64 	%rd6819, {%r5265, %r5264};
	shf.r.wrap.b32 	%r5266, %r5263, %r5262, 18;
	shf.r.wrap.b32 	%r5267, %r5262, %r5263, 18;
	mov.b64 	%rd6820, {%r5267, %r5266};
	xor.b64  	%rd6821, %rd6820, %rd6819;
	shf.l.wrap.b32 	%r5268, %r5262, %r5263, 23;
	shf.l.wrap.b32 	%r5269, %r5263, %r5262, 23;
	mov.b64 	%rd6822, {%r5269, %r5268};
	xor.b64  	%rd6823, %rd6821, %rd6822;
	xor.b64  	%rd6824, %rd6783, %rd6759;
	and.b64  	%rd6825, %rd6807, %rd6824;
	xor.b64  	%rd6826, %rd6825, %rd6759;
	add.s64 	%rd6827, %rd6735, %rd9827;
	add.s64 	%rd6828, %rd6827, %rd9716;
	add.s64 	%rd6829, %rd6828, %rd6826;
	add.s64 	%rd6830, %rd6829, %rd6823;
	add.s64 	%rd6831, %rd6830, %rd6746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5270,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5271}, %rd6818;
	}
	shf.r.wrap.b32 	%r5272, %r5271, %r5270, 28;
	shf.r.wrap.b32 	%r5273, %r5270, %r5271, 28;
	mov.b64 	%rd6832, {%r5273, %r5272};
	shf.l.wrap.b32 	%r5274, %r5270, %r5271, 30;
	shf.l.wrap.b32 	%r5275, %r5271, %r5270, 30;
	mov.b64 	%rd6833, {%r5275, %r5274};
	xor.b64  	%rd6834, %rd6833, %rd6832;
	shf.l.wrap.b32 	%r5276, %r5270, %r5271, 25;
	shf.l.wrap.b32 	%r5277, %r5271, %r5270, 25;
	mov.b64 	%rd6835, {%r5277, %r5276};
	xor.b64  	%rd6836, %rd6834, %rd6835;
	and.b64  	%rd6837, %rd6818, %rd6794;
	xor.b64  	%rd6838, %rd6818, %rd6794;
	and.b64  	%rd6839, %rd6838, %rd6770;
	or.b64  	%rd6840, %rd6839, %rd6837;
	add.s64 	%rd6841, %rd6830, %rd6840;
	add.s64 	%rd6842, %rd6841, %rd6836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5278,%dummy}, %rd6831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5279}, %rd6831;
	}
	shf.r.wrap.b32 	%r5280, %r5279, %r5278, 14;
	shf.r.wrap.b32 	%r5281, %r5278, %r5279, 14;
	mov.b64 	%rd6843, {%r5281, %r5280};
	shf.r.wrap.b32 	%r5282, %r5279, %r5278, 18;
	shf.r.wrap.b32 	%r5283, %r5278, %r5279, 18;
	mov.b64 	%rd6844, {%r5283, %r5282};
	xor.b64  	%rd6845, %rd6844, %rd6843;
	shf.l.wrap.b32 	%r5284, %r5278, %r5279, 23;
	shf.l.wrap.b32 	%r5285, %r5279, %r5278, 23;
	mov.b64 	%rd6846, {%r5285, %r5284};
	xor.b64  	%rd6847, %rd6845, %rd6846;
	xor.b64  	%rd6848, %rd6807, %rd6783;
	and.b64  	%rd6849, %rd6831, %rd6848;
	xor.b64  	%rd6850, %rd6849, %rd6783;
	add.s64 	%rd6851, %rd6759, %rd9828;
	add.s64 	%rd6852, %rd6851, %rd9715;
	add.s64 	%rd6853, %rd6852, %rd6850;
	add.s64 	%rd6854, %rd6853, %rd6847;
	add.s64 	%rd6855, %rd6854, %rd6770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5286,%dummy}, %rd6842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5287}, %rd6842;
	}
	shf.r.wrap.b32 	%r5288, %r5287, %r5286, 28;
	shf.r.wrap.b32 	%r5289, %r5286, %r5287, 28;
	mov.b64 	%rd6856, {%r5289, %r5288};
	shf.l.wrap.b32 	%r5290, %r5286, %r5287, 30;
	shf.l.wrap.b32 	%r5291, %r5287, %r5286, 30;
	mov.b64 	%rd6857, {%r5291, %r5290};
	xor.b64  	%rd6858, %rd6857, %rd6856;
	shf.l.wrap.b32 	%r5292, %r5286, %r5287, 25;
	shf.l.wrap.b32 	%r5293, %r5287, %r5286, 25;
	mov.b64 	%rd6859, {%r5293, %r5292};
	xor.b64  	%rd6860, %rd6858, %rd6859;
	and.b64  	%rd6861, %rd6842, %rd6818;
	xor.b64  	%rd6862, %rd6842, %rd6818;
	and.b64  	%rd6863, %rd6862, %rd6794;
	or.b64  	%rd6864, %rd6863, %rd6861;
	add.s64 	%rd6865, %rd6854, %rd6864;
	add.s64 	%rd6866, %rd6865, %rd6860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5294,%dummy}, %rd6855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5295}, %rd6855;
	}
	shf.r.wrap.b32 	%r5296, %r5295, %r5294, 14;
	shf.r.wrap.b32 	%r5297, %r5294, %r5295, 14;
	mov.b64 	%rd6867, {%r5297, %r5296};
	shf.r.wrap.b32 	%r5298, %r5295, %r5294, 18;
	shf.r.wrap.b32 	%r5299, %r5294, %r5295, 18;
	mov.b64 	%rd6868, {%r5299, %r5298};
	xor.b64  	%rd6869, %rd6868, %rd6867;
	shf.l.wrap.b32 	%r5300, %r5294, %r5295, 23;
	shf.l.wrap.b32 	%r5301, %r5295, %r5294, 23;
	mov.b64 	%rd6870, {%r5301, %r5300};
	xor.b64  	%rd6871, %rd6869, %rd6870;
	xor.b64  	%rd6872, %rd6831, %rd6807;
	and.b64  	%rd6873, %rd6855, %rd6872;
	xor.b64  	%rd6874, %rd6873, %rd6807;
	add.s64 	%rd6875, %rd6783, %rd9812;
	add.s64 	%rd6876, %rd6875, %rd9714;
	add.s64 	%rd6877, %rd6876, %rd6874;
	add.s64 	%rd6878, %rd6877, %rd6871;
	add.s64 	%rd6879, %rd6878, %rd6794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5302,%dummy}, %rd6866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5303}, %rd6866;
	}
	shf.r.wrap.b32 	%r5304, %r5303, %r5302, 28;
	shf.r.wrap.b32 	%r5305, %r5302, %r5303, 28;
	mov.b64 	%rd6880, {%r5305, %r5304};
	shf.l.wrap.b32 	%r5306, %r5302, %r5303, 30;
	shf.l.wrap.b32 	%r5307, %r5303, %r5302, 30;
	mov.b64 	%rd6881, {%r5307, %r5306};
	xor.b64  	%rd6882, %rd6881, %rd6880;
	shf.l.wrap.b32 	%r5308, %r5302, %r5303, 25;
	shf.l.wrap.b32 	%r5309, %r5303, %r5302, 25;
	mov.b64 	%rd6883, {%r5309, %r5308};
	xor.b64  	%rd6884, %rd6882, %rd6883;
	and.b64  	%rd6885, %rd6866, %rd6842;
	xor.b64  	%rd6886, %rd6866, %rd6842;
	and.b64  	%rd6887, %rd6886, %rd6818;
	or.b64  	%rd6888, %rd6887, %rd6885;
	add.s64 	%rd6889, %rd6878, %rd6888;
	add.s64 	%rd6890, %rd6889, %rd6884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd6879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5311}, %rd6879;
	}
	shf.r.wrap.b32 	%r5312, %r5311, %r5310, 14;
	shf.r.wrap.b32 	%r5313, %r5310, %r5311, 14;
	mov.b64 	%rd6891, {%r5313, %r5312};
	shf.r.wrap.b32 	%r5314, %r5311, %r5310, 18;
	shf.r.wrap.b32 	%r5315, %r5310, %r5311, 18;
	mov.b64 	%rd6892, {%r5315, %r5314};
	xor.b64  	%rd6893, %rd6892, %rd6891;
	shf.l.wrap.b32 	%r5316, %r5310, %r5311, 23;
	shf.l.wrap.b32 	%r5317, %r5311, %r5310, 23;
	mov.b64 	%rd6894, {%r5317, %r5316};
	xor.b64  	%rd6895, %rd6893, %rd6894;
	xor.b64  	%rd6896, %rd6855, %rd6831;
	and.b64  	%rd6897, %rd6879, %rd6896;
	xor.b64  	%rd6898, %rd6897, %rd6831;
	add.s64 	%rd6899, %rd6807, %rd9811;
	add.s64 	%rd6900, %rd6899, %rd9713;
	add.s64 	%rd6901, %rd6900, %rd6898;
	add.s64 	%rd6902, %rd6901, %rd6895;
	add.s64 	%rd6903, %rd6902, %rd6818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5318,%dummy}, %rd6890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5319}, %rd6890;
	}
	shf.r.wrap.b32 	%r5320, %r5319, %r5318, 28;
	shf.r.wrap.b32 	%r5321, %r5318, %r5319, 28;
	mov.b64 	%rd6904, {%r5321, %r5320};
	shf.l.wrap.b32 	%r5322, %r5318, %r5319, 30;
	shf.l.wrap.b32 	%r5323, %r5319, %r5318, 30;
	mov.b64 	%rd6905, {%r5323, %r5322};
	xor.b64  	%rd6906, %rd6905, %rd6904;
	shf.l.wrap.b32 	%r5324, %r5318, %r5319, 25;
	shf.l.wrap.b32 	%r5325, %r5319, %r5318, 25;
	mov.b64 	%rd6907, {%r5325, %r5324};
	xor.b64  	%rd6908, %rd6906, %rd6907;
	and.b64  	%rd6909, %rd6890, %rd6866;
	xor.b64  	%rd6910, %rd6890, %rd6866;
	and.b64  	%rd6911, %rd6910, %rd6842;
	or.b64  	%rd6912, %rd6911, %rd6909;
	add.s64 	%rd6913, %rd6902, %rd6912;
	add.s64 	%rd6914, %rd6913, %rd6908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd6903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5327}, %rd6903;
	}
	shf.r.wrap.b32 	%r5328, %r5327, %r5326, 14;
	shf.r.wrap.b32 	%r5329, %r5326, %r5327, 14;
	mov.b64 	%rd6915, {%r5329, %r5328};
	shf.r.wrap.b32 	%r5330, %r5327, %r5326, 18;
	shf.r.wrap.b32 	%r5331, %r5326, %r5327, 18;
	mov.b64 	%rd6916, {%r5331, %r5330};
	xor.b64  	%rd6917, %rd6916, %rd6915;
	shf.l.wrap.b32 	%r5332, %r5326, %r5327, 23;
	shf.l.wrap.b32 	%r5333, %r5327, %r5326, 23;
	mov.b64 	%rd6918, {%r5333, %r5332};
	xor.b64  	%rd6919, %rd6917, %rd6918;
	xor.b64  	%rd6920, %rd6879, %rd6855;
	and.b64  	%rd6921, %rd6903, %rd6920;
	xor.b64  	%rd6922, %rd6921, %rd6855;
	add.s64 	%rd6923, %rd6831, %rd9810;
	add.s64 	%rd6924, %rd6923, %rd9712;
	add.s64 	%rd6925, %rd6924, %rd6922;
	add.s64 	%rd6926, %rd6925, %rd6919;
	add.s64 	%rd6927, %rd6926, %rd6842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5334,%dummy}, %rd6914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5335}, %rd6914;
	}
	shf.r.wrap.b32 	%r5336, %r5335, %r5334, 28;
	shf.r.wrap.b32 	%r5337, %r5334, %r5335, 28;
	mov.b64 	%rd6928, {%r5337, %r5336};
	shf.l.wrap.b32 	%r5338, %r5334, %r5335, 30;
	shf.l.wrap.b32 	%r5339, %r5335, %r5334, 30;
	mov.b64 	%rd6929, {%r5339, %r5338};
	xor.b64  	%rd6930, %rd6929, %rd6928;
	shf.l.wrap.b32 	%r5340, %r5334, %r5335, 25;
	shf.l.wrap.b32 	%r5341, %r5335, %r5334, 25;
	mov.b64 	%rd6931, {%r5341, %r5340};
	xor.b64  	%rd6932, %rd6930, %rd6931;
	and.b64  	%rd6933, %rd6914, %rd6890;
	xor.b64  	%rd6934, %rd6914, %rd6890;
	and.b64  	%rd6935, %rd6934, %rd6866;
	or.b64  	%rd6936, %rd6935, %rd6933;
	add.s64 	%rd6937, %rd6926, %rd6936;
	add.s64 	%rd6938, %rd6937, %rd6932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5342,%dummy}, %rd6927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5343}, %rd6927;
	}
	shf.r.wrap.b32 	%r5344, %r5343, %r5342, 14;
	shf.r.wrap.b32 	%r5345, %r5342, %r5343, 14;
	mov.b64 	%rd6939, {%r5345, %r5344};
	shf.r.wrap.b32 	%r5346, %r5343, %r5342, 18;
	shf.r.wrap.b32 	%r5347, %r5342, %r5343, 18;
	mov.b64 	%rd6940, {%r5347, %r5346};
	xor.b64  	%rd6941, %rd6940, %rd6939;
	shf.l.wrap.b32 	%r5348, %r5342, %r5343, 23;
	shf.l.wrap.b32 	%r5349, %r5343, %r5342, 23;
	mov.b64 	%rd6942, {%r5349, %r5348};
	xor.b64  	%rd6943, %rd6941, %rd6942;
	xor.b64  	%rd6944, %rd6903, %rd6879;
	and.b64  	%rd6945, %rd6927, %rd6944;
	xor.b64  	%rd6946, %rd6945, %rd6879;
	add.s64 	%rd6947, %rd6855, %rd9809;
	add.s64 	%rd6948, %rd6947, %rd9711;
	add.s64 	%rd6949, %rd6948, %rd6946;
	add.s64 	%rd6950, %rd6949, %rd6943;
	add.s64 	%rd6951, %rd6950, %rd6866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5350,%dummy}, %rd6938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5351}, %rd6938;
	}
	shf.r.wrap.b32 	%r5352, %r5351, %r5350, 28;
	shf.r.wrap.b32 	%r5353, %r5350, %r5351, 28;
	mov.b64 	%rd6952, {%r5353, %r5352};
	shf.l.wrap.b32 	%r5354, %r5350, %r5351, 30;
	shf.l.wrap.b32 	%r5355, %r5351, %r5350, 30;
	mov.b64 	%rd6953, {%r5355, %r5354};
	xor.b64  	%rd6954, %rd6953, %rd6952;
	shf.l.wrap.b32 	%r5356, %r5350, %r5351, 25;
	shf.l.wrap.b32 	%r5357, %r5351, %r5350, 25;
	mov.b64 	%rd6955, {%r5357, %r5356};
	xor.b64  	%rd6956, %rd6954, %rd6955;
	and.b64  	%rd6957, %rd6938, %rd6914;
	xor.b64  	%rd6958, %rd6938, %rd6914;
	and.b64  	%rd6959, %rd6958, %rd6890;
	or.b64  	%rd6960, %rd6959, %rd6957;
	add.s64 	%rd6961, %rd6950, %rd6960;
	add.s64 	%rd6962, %rd6961, %rd6956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5358,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5359}, %rd6951;
	}
	shf.r.wrap.b32 	%r5360, %r5359, %r5358, 14;
	shf.r.wrap.b32 	%r5361, %r5358, %r5359, 14;
	mov.b64 	%rd6963, {%r5361, %r5360};
	shf.r.wrap.b32 	%r5362, %r5359, %r5358, 18;
	shf.r.wrap.b32 	%r5363, %r5358, %r5359, 18;
	mov.b64 	%rd6964, {%r5363, %r5362};
	xor.b64  	%rd6965, %rd6964, %rd6963;
	shf.l.wrap.b32 	%r5364, %r5358, %r5359, 23;
	shf.l.wrap.b32 	%r5365, %r5359, %r5358, 23;
	mov.b64 	%rd6966, {%r5365, %r5364};
	xor.b64  	%rd6967, %rd6965, %rd6966;
	xor.b64  	%rd6968, %rd6927, %rd6903;
	and.b64  	%rd6969, %rd6951, %rd6968;
	xor.b64  	%rd6970, %rd6969, %rd6903;
	add.s64 	%rd6971, %rd6879, %rd9808;
	add.s64 	%rd6972, %rd6971, %rd9710;
	add.s64 	%rd6973, %rd6972, %rd6970;
	add.s64 	%rd6974, %rd6973, %rd6967;
	add.s64 	%rd9820, %rd6974, %rd6890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5366,%dummy}, %rd6962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5367}, %rd6962;
	}
	shf.r.wrap.b32 	%r5368, %r5367, %r5366, 28;
	shf.r.wrap.b32 	%r5369, %r5366, %r5367, 28;
	mov.b64 	%rd6975, {%r5369, %r5368};
	shf.l.wrap.b32 	%r5370, %r5366, %r5367, 30;
	shf.l.wrap.b32 	%r5371, %r5367, %r5366, 30;
	mov.b64 	%rd6976, {%r5371, %r5370};
	xor.b64  	%rd6977, %rd6976, %rd6975;
	shf.l.wrap.b32 	%r5372, %r5366, %r5367, 25;
	shf.l.wrap.b32 	%r5373, %r5367, %r5366, 25;
	mov.b64 	%rd6978, {%r5373, %r5372};
	xor.b64  	%rd6979, %rd6977, %rd6978;
	and.b64  	%rd6980, %rd6962, %rd6938;
	xor.b64  	%rd6981, %rd6962, %rd6938;
	and.b64  	%rd6982, %rd6981, %rd6914;
	or.b64  	%rd6983, %rd6982, %rd6980;
	add.s64 	%rd6984, %rd6974, %rd6983;
	add.s64 	%rd9816, %rd6984, %rd6979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5374,%dummy}, %rd9820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5375}, %rd9820;
	}
	shf.r.wrap.b32 	%r5376, %r5375, %r5374, 14;
	shf.r.wrap.b32 	%r5377, %r5374, %r5375, 14;
	mov.b64 	%rd6985, {%r5377, %r5376};
	shf.r.wrap.b32 	%r5378, %r5375, %r5374, 18;
	shf.r.wrap.b32 	%r5379, %r5374, %r5375, 18;
	mov.b64 	%rd6986, {%r5379, %r5378};
	xor.b64  	%rd6987, %rd6986, %rd6985;
	shf.l.wrap.b32 	%r5380, %r5374, %r5375, 23;
	shf.l.wrap.b32 	%r5381, %r5375, %r5374, 23;
	mov.b64 	%rd6988, {%r5381, %r5380};
	xor.b64  	%rd6989, %rd6987, %rd6988;
	xor.b64  	%rd6990, %rd6951, %rd6927;
	and.b64  	%rd6991, %rd9820, %rd6990;
	xor.b64  	%rd6992, %rd6991, %rd6927;
	add.s64 	%rd6993, %rd6903, %rd9807;
	add.s64 	%rd6994, %rd6993, %rd9709;
	add.s64 	%rd6995, %rd6994, %rd6992;
	add.s64 	%rd6996, %rd6995, %rd6989;
	add.s64 	%rd9819, %rd6996, %rd6914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5382,%dummy}, %rd9816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5383}, %rd9816;
	}
	shf.r.wrap.b32 	%r5384, %r5383, %r5382, 28;
	shf.r.wrap.b32 	%r5385, %r5382, %r5383, 28;
	mov.b64 	%rd6997, {%r5385, %r5384};
	shf.l.wrap.b32 	%r5386, %r5382, %r5383, 30;
	shf.l.wrap.b32 	%r5387, %r5383, %r5382, 30;
	mov.b64 	%rd6998, {%r5387, %r5386};
	xor.b64  	%rd6999, %rd6998, %rd6997;
	shf.l.wrap.b32 	%r5388, %r5382, %r5383, 25;
	shf.l.wrap.b32 	%r5389, %r5383, %r5382, 25;
	mov.b64 	%rd7000, {%r5389, %r5388};
	xor.b64  	%rd7001, %rd6999, %rd7000;
	and.b64  	%rd7002, %rd9816, %rd6962;
	xor.b64  	%rd7003, %rd9816, %rd6962;
	and.b64  	%rd7004, %rd7003, %rd6938;
	or.b64  	%rd7005, %rd7004, %rd7002;
	add.s64 	%rd7006, %rd6996, %rd7005;
	add.s64 	%rd9815, %rd7006, %rd7001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5390,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5391}, %rd9819;
	}
	shf.r.wrap.b32 	%r5392, %r5391, %r5390, 14;
	shf.r.wrap.b32 	%r5393, %r5390, %r5391, 14;
	mov.b64 	%rd7007, {%r5393, %r5392};
	shf.r.wrap.b32 	%r5394, %r5391, %r5390, 18;
	shf.r.wrap.b32 	%r5395, %r5390, %r5391, 18;
	mov.b64 	%rd7008, {%r5395, %r5394};
	xor.b64  	%rd7009, %rd7008, %rd7007;
	shf.l.wrap.b32 	%r5396, %r5390, %r5391, 23;
	shf.l.wrap.b32 	%r5397, %r5391, %r5390, 23;
	mov.b64 	%rd7010, {%r5397, %r5396};
	xor.b64  	%rd7011, %rd7009, %rd7010;
	xor.b64  	%rd7012, %rd9820, %rd6951;
	and.b64  	%rd7013, %rd9819, %rd7012;
	xor.b64  	%rd7014, %rd7013, %rd6951;
	add.s64 	%rd7015, %rd6927, %rd9806;
	add.s64 	%rd7016, %rd7015, %rd9708;
	add.s64 	%rd7017, %rd7016, %rd7014;
	add.s64 	%rd7018, %rd7017, %rd7011;
	add.s64 	%rd9818, %rd7018, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5398,%dummy}, %rd9815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5399}, %rd9815;
	}
	shf.r.wrap.b32 	%r5400, %r5399, %r5398, 28;
	shf.r.wrap.b32 	%r5401, %r5398, %r5399, 28;
	mov.b64 	%rd7019, {%r5401, %r5400};
	shf.l.wrap.b32 	%r5402, %r5398, %r5399, 30;
	shf.l.wrap.b32 	%r5403, %r5399, %r5398, 30;
	mov.b64 	%rd7020, {%r5403, %r5402};
	xor.b64  	%rd7021, %rd7020, %rd7019;
	shf.l.wrap.b32 	%r5404, %r5398, %r5399, 25;
	shf.l.wrap.b32 	%r5405, %r5399, %r5398, 25;
	mov.b64 	%rd7022, {%r5405, %r5404};
	xor.b64  	%rd7023, %rd7021, %rd7022;
	and.b64  	%rd7024, %rd9815, %rd9816;
	xor.b64  	%rd7025, %rd9815, %rd9816;
	and.b64  	%rd7026, %rd7025, %rd6962;
	or.b64  	%rd7027, %rd7026, %rd7024;
	add.s64 	%rd7028, %rd7018, %rd7027;
	add.s64 	%rd9814, %rd7028, %rd7023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5406,%dummy}, %rd9818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5407}, %rd9818;
	}
	shf.r.wrap.b32 	%r5408, %r5407, %r5406, 14;
	shf.r.wrap.b32 	%r5409, %r5406, %r5407, 14;
	mov.b64 	%rd7029, {%r5409, %r5408};
	shf.r.wrap.b32 	%r5410, %r5407, %r5406, 18;
	shf.r.wrap.b32 	%r5411, %r5406, %r5407, 18;
	mov.b64 	%rd7030, {%r5411, %r5410};
	xor.b64  	%rd7031, %rd7030, %rd7029;
	shf.l.wrap.b32 	%r5412, %r5406, %r5407, 23;
	shf.l.wrap.b32 	%r5413, %r5407, %r5406, 23;
	mov.b64 	%rd7032, {%r5413, %r5412};
	xor.b64  	%rd7033, %rd7031, %rd7032;
	xor.b64  	%rd7034, %rd9819, %rd9820;
	and.b64  	%rd7035, %rd9818, %rd7034;
	xor.b64  	%rd7036, %rd7035, %rd9820;
	add.s64 	%rd7037, %rd6951, %rd9805;
	add.s64 	%rd7038, %rd7037, %rd9707;
	add.s64 	%rd7039, %rd7038, %rd7036;
	add.s64 	%rd7040, %rd7039, %rd7033;
	add.s64 	%rd9817, %rd7040, %rd6962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd9814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5415}, %rd9814;
	}
	shf.r.wrap.b32 	%r5416, %r5415, %r5414, 28;
	shf.r.wrap.b32 	%r5417, %r5414, %r5415, 28;
	mov.b64 	%rd7041, {%r5417, %r5416};
	shf.l.wrap.b32 	%r5418, %r5414, %r5415, 30;
	shf.l.wrap.b32 	%r5419, %r5415, %r5414, 30;
	mov.b64 	%rd7042, {%r5419, %r5418};
	xor.b64  	%rd7043, %rd7042, %rd7041;
	shf.l.wrap.b32 	%r5420, %r5414, %r5415, 25;
	shf.l.wrap.b32 	%r5421, %r5415, %r5414, 25;
	mov.b64 	%rd7044, {%r5421, %r5420};
	xor.b64  	%rd7045, %rd7043, %rd7044;
	and.b64  	%rd7046, %rd9814, %rd9815;
	xor.b64  	%rd7047, %rd9814, %rd9815;
	and.b64  	%rd7048, %rd7047, %rd9816;
	or.b64  	%rd7049, %rd7048, %rd7046;
	add.s64 	%rd7050, %rd7040, %rd7049;
	add.s64 	%rd9813, %rd7050, %rd7045;
	mov.u32 	%r7503, 16;

BB3_32:
	shr.u64 	%rd7051, %rd9806, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd9806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd9806;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 19;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 19;
	mov.b64 	%rd7052, {%r5425, %r5424};
	xor.b64  	%rd7053, %rd7052, %rd7051;
	shf.l.wrap.b32 	%r5426, %r5422, %r5423, 3;
	shf.l.wrap.b32 	%r5427, %r5423, %r5422, 3;
	mov.b64 	%rd7054, {%r5427, %r5426};
	xor.b64  	%rd7055, %rd7053, %rd7054;
	shr.u64 	%rd7056, %rd9822, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5428,%dummy}, %rd9822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5429}, %rd9822;
	}
	shf.r.wrap.b32 	%r5430, %r5429, %r5428, 1;
	shf.r.wrap.b32 	%r5431, %r5428, %r5429, 1;
	mov.b64 	%rd7057, {%r5431, %r5430};
	xor.b64  	%rd7058, %rd7057, %rd7056;
	shf.r.wrap.b32 	%r5432, %r5429, %r5428, 8;
	shf.r.wrap.b32 	%r5433, %r5428, %r5429, 8;
	mov.b64 	%rd7059, {%r5433, %r5432};
	xor.b64  	%rd7060, %rd7058, %rd7059;
	add.s64 	%rd7061, %rd9811, %rd9821;
	add.s64 	%rd7062, %rd7061, %rd7055;
	add.s64 	%rd9821, %rd7062, %rd7060;
	shr.u64 	%rd7063, %rd9805, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5434,%dummy}, %rd9805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5435}, %rd9805;
	}
	shf.r.wrap.b32 	%r5436, %r5435, %r5434, 19;
	shf.r.wrap.b32 	%r5437, %r5434, %r5435, 19;
	mov.b64 	%rd7064, {%r5437, %r5436};
	xor.b64  	%rd7065, %rd7064, %rd7063;
	shf.l.wrap.b32 	%r5438, %r5434, %r5435, 3;
	shf.l.wrap.b32 	%r5439, %r5435, %r5434, 3;
	mov.b64 	%rd7066, {%r5439, %r5438};
	xor.b64  	%rd7067, %rd7065, %rd7066;
	shr.u64 	%rd7068, %rd9823, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5440,%dummy}, %rd9823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd9823;
	}
	shf.r.wrap.b32 	%r5442, %r5441, %r5440, 1;
	shf.r.wrap.b32 	%r5443, %r5440, %r5441, 1;
	mov.b64 	%rd7069, {%r5443, %r5442};
	xor.b64  	%rd7070, %rd7069, %rd7068;
	shf.r.wrap.b32 	%r5444, %r5441, %r5440, 8;
	shf.r.wrap.b32 	%r5445, %r5440, %r5441, 8;
	mov.b64 	%rd7071, {%r5445, %r5444};
	xor.b64  	%rd7072, %rd7070, %rd7071;
	add.s64 	%rd7073, %rd9810, %rd9822;
	add.s64 	%rd7074, %rd7073, %rd7067;
	add.s64 	%rd9822, %rd7074, %rd7072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5446,%dummy}, %rd9821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5447}, %rd9821;
	}
	shf.r.wrap.b32 	%r5448, %r5447, %r5446, 19;
	shf.r.wrap.b32 	%r5449, %r5446, %r5447, 19;
	mov.b64 	%rd7075, {%r5449, %r5448};
	shf.l.wrap.b32 	%r5450, %r5446, %r5447, 3;
	shf.l.wrap.b32 	%r5451, %r5447, %r5446, 3;
	mov.b64 	%rd7076, {%r5451, %r5450};
	shr.u64 	%rd7077, %rd9821, 6;
	xor.b64  	%rd7078, %rd7075, %rd7077;
	xor.b64  	%rd7079, %rd7078, %rd7076;
	shr.u64 	%rd7080, %rd9824, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5452,%dummy}, %rd9824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5453}, %rd9824;
	}
	shf.r.wrap.b32 	%r5454, %r5453, %r5452, 1;
	shf.r.wrap.b32 	%r5455, %r5452, %r5453, 1;
	mov.b64 	%rd7081, {%r5455, %r5454};
	xor.b64  	%rd7082, %rd7081, %rd7080;
	shf.r.wrap.b32 	%r5456, %r5453, %r5452, 8;
	shf.r.wrap.b32 	%r5457, %r5452, %r5453, 8;
	mov.b64 	%rd7083, {%r5457, %r5456};
	xor.b64  	%rd7084, %rd7082, %rd7083;
	add.s64 	%rd7085, %rd9809, %rd9823;
	add.s64 	%rd7086, %rd7085, %rd7079;
	add.s64 	%rd9823, %rd7086, %rd7084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd9822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5459}, %rd9822;
	}
	shf.r.wrap.b32 	%r5460, %r5459, %r5458, 19;
	shf.r.wrap.b32 	%r5461, %r5458, %r5459, 19;
	mov.b64 	%rd7087, {%r5461, %r5460};
	shf.l.wrap.b32 	%r5462, %r5458, %r5459, 3;
	shf.l.wrap.b32 	%r5463, %r5459, %r5458, 3;
	mov.b64 	%rd7088, {%r5463, %r5462};
	shr.u64 	%rd7089, %rd9822, 6;
	xor.b64  	%rd7090, %rd7087, %rd7089;
	xor.b64  	%rd7091, %rd7090, %rd7088;
	shr.u64 	%rd7092, %rd9825, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5464,%dummy}, %rd9825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5465}, %rd9825;
	}
	shf.r.wrap.b32 	%r5466, %r5465, %r5464, 1;
	shf.r.wrap.b32 	%r5467, %r5464, %r5465, 1;
	mov.b64 	%rd7093, {%r5467, %r5466};
	xor.b64  	%rd7094, %rd7093, %rd7092;
	shf.r.wrap.b32 	%r5468, %r5465, %r5464, 8;
	shf.r.wrap.b32 	%r5469, %r5464, %r5465, 8;
	mov.b64 	%rd7095, {%r5469, %r5468};
	xor.b64  	%rd7096, %rd7094, %rd7095;
	add.s64 	%rd7097, %rd9808, %rd9824;
	add.s64 	%rd7098, %rd7097, %rd7091;
	add.s64 	%rd9824, %rd7098, %rd7096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5470,%dummy}, %rd9823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5471}, %rd9823;
	}
	shf.r.wrap.b32 	%r5472, %r5471, %r5470, 19;
	shf.r.wrap.b32 	%r5473, %r5470, %r5471, 19;
	mov.b64 	%rd7099, {%r5473, %r5472};
	shf.l.wrap.b32 	%r5474, %r5470, %r5471, 3;
	shf.l.wrap.b32 	%r5475, %r5471, %r5470, 3;
	mov.b64 	%rd7100, {%r5475, %r5474};
	shr.u64 	%rd7101, %rd9823, 6;
	xor.b64  	%rd7102, %rd7099, %rd7101;
	xor.b64  	%rd7103, %rd7102, %rd7100;
	shr.u64 	%rd7104, %rd9826, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5476,%dummy}, %rd9826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5477}, %rd9826;
	}
	shf.r.wrap.b32 	%r5478, %r5477, %r5476, 1;
	shf.r.wrap.b32 	%r5479, %r5476, %r5477, 1;
	mov.b64 	%rd7105, {%r5479, %r5478};
	xor.b64  	%rd7106, %rd7105, %rd7104;
	shf.r.wrap.b32 	%r5480, %r5477, %r5476, 8;
	shf.r.wrap.b32 	%r5481, %r5476, %r5477, 8;
	mov.b64 	%rd7107, {%r5481, %r5480};
	xor.b64  	%rd7108, %rd7106, %rd7107;
	add.s64 	%rd7109, %rd9807, %rd9825;
	add.s64 	%rd7110, %rd7109, %rd7103;
	add.s64 	%rd9825, %rd7110, %rd7108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd9824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd9824;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 19;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 19;
	mov.b64 	%rd7111, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 3;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 3;
	mov.b64 	%rd7112, {%r5487, %r5486};
	shr.u64 	%rd7113, %rd9824, 6;
	xor.b64  	%rd7114, %rd7111, %rd7113;
	xor.b64  	%rd7115, %rd7114, %rd7112;
	shr.u64 	%rd7116, %rd9827, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd9827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd9827;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 1;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 1;
	mov.b64 	%rd7117, {%r5491, %r5490};
	xor.b64  	%rd7118, %rd7117, %rd7116;
	shf.r.wrap.b32 	%r5492, %r5489, %r5488, 8;
	shf.r.wrap.b32 	%r5493, %r5488, %r5489, 8;
	mov.b64 	%rd7119, {%r5493, %r5492};
	xor.b64  	%rd7120, %rd7118, %rd7119;
	add.s64 	%rd7121, %rd9806, %rd9826;
	add.s64 	%rd7122, %rd7121, %rd7115;
	add.s64 	%rd9826, %rd7122, %rd7120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5494,%dummy}, %rd9825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5495}, %rd9825;
	}
	shf.r.wrap.b32 	%r5496, %r5495, %r5494, 19;
	shf.r.wrap.b32 	%r5497, %r5494, %r5495, 19;
	mov.b64 	%rd7123, {%r5497, %r5496};
	shf.l.wrap.b32 	%r5498, %r5494, %r5495, 3;
	shf.l.wrap.b32 	%r5499, %r5495, %r5494, 3;
	mov.b64 	%rd7124, {%r5499, %r5498};
	shr.u64 	%rd7125, %rd9825, 6;
	xor.b64  	%rd7126, %rd7123, %rd7125;
	xor.b64  	%rd7127, %rd7126, %rd7124;
	shr.u64 	%rd7128, %rd9828, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd9828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd9828;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 1;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 1;
	mov.b64 	%rd7129, {%r5503, %r5502};
	xor.b64  	%rd7130, %rd7129, %rd7128;
	shf.r.wrap.b32 	%r5504, %r5501, %r5500, 8;
	shf.r.wrap.b32 	%r5505, %r5500, %r5501, 8;
	mov.b64 	%rd7131, {%r5505, %r5504};
	xor.b64  	%rd7132, %rd7130, %rd7131;
	add.s64 	%rd7133, %rd9805, %rd9827;
	add.s64 	%rd7134, %rd7133, %rd7127;
	add.s64 	%rd9827, %rd7134, %rd7132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5506,%dummy}, %rd9826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5507}, %rd9826;
	}
	shf.r.wrap.b32 	%r5508, %r5507, %r5506, 19;
	shf.r.wrap.b32 	%r5509, %r5506, %r5507, 19;
	mov.b64 	%rd7135, {%r5509, %r5508};
	shf.l.wrap.b32 	%r5510, %r5506, %r5507, 3;
	shf.l.wrap.b32 	%r5511, %r5507, %r5506, 3;
	mov.b64 	%rd7136, {%r5511, %r5510};
	shr.u64 	%rd7137, %rd9826, 6;
	xor.b64  	%rd7138, %rd7135, %rd7137;
	xor.b64  	%rd7139, %rd7138, %rd7136;
	shr.u64 	%rd7140, %rd9812, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd9812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd9812;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 1;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 1;
	mov.b64 	%rd7141, {%r5515, %r5514};
	xor.b64  	%rd7142, %rd7141, %rd7140;
	shf.r.wrap.b32 	%r5516, %r5513, %r5512, 8;
	shf.r.wrap.b32 	%r5517, %r5512, %r5513, 8;
	mov.b64 	%rd7143, {%r5517, %r5516};
	xor.b64  	%rd7144, %rd7142, %rd7143;
	add.s64 	%rd7145, %rd9821, %rd9828;
	add.s64 	%rd7146, %rd7145, %rd7139;
	add.s64 	%rd9828, %rd7146, %rd7144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5518,%dummy}, %rd9827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5519}, %rd9827;
	}
	shf.r.wrap.b32 	%r5520, %r5519, %r5518, 19;
	shf.r.wrap.b32 	%r5521, %r5518, %r5519, 19;
	mov.b64 	%rd7147, {%r5521, %r5520};
	shf.l.wrap.b32 	%r5522, %r5518, %r5519, 3;
	shf.l.wrap.b32 	%r5523, %r5519, %r5518, 3;
	mov.b64 	%rd7148, {%r5523, %r5522};
	shr.u64 	%rd7149, %rd9827, 6;
	xor.b64  	%rd7150, %rd7147, %rd7149;
	xor.b64  	%rd7151, %rd7150, %rd7148;
	shr.u64 	%rd7152, %rd9811, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5524,%dummy}, %rd9811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5525}, %rd9811;
	}
	shf.r.wrap.b32 	%r5526, %r5525, %r5524, 1;
	shf.r.wrap.b32 	%r5527, %r5524, %r5525, 1;
	mov.b64 	%rd7153, {%r5527, %r5526};
	xor.b64  	%rd7154, %rd7153, %rd7152;
	shf.r.wrap.b32 	%r5528, %r5525, %r5524, 8;
	shf.r.wrap.b32 	%r5529, %r5524, %r5525, 8;
	mov.b64 	%rd7155, {%r5529, %r5528};
	xor.b64  	%rd7156, %rd7154, %rd7155;
	add.s64 	%rd7157, %rd9822, %rd9812;
	add.s64 	%rd7158, %rd7157, %rd7151;
	add.s64 	%rd9812, %rd7158, %rd7156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5530,%dummy}, %rd9828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5531}, %rd9828;
	}
	shf.r.wrap.b32 	%r5532, %r5531, %r5530, 19;
	shf.r.wrap.b32 	%r5533, %r5530, %r5531, 19;
	mov.b64 	%rd7159, {%r5533, %r5532};
	shf.l.wrap.b32 	%r5534, %r5530, %r5531, 3;
	shf.l.wrap.b32 	%r5535, %r5531, %r5530, 3;
	mov.b64 	%rd7160, {%r5535, %r5534};
	shr.u64 	%rd7161, %rd9828, 6;
	xor.b64  	%rd7162, %rd7159, %rd7161;
	xor.b64  	%rd7163, %rd7162, %rd7160;
	shr.u64 	%rd7164, %rd9810, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd9810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd9810;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 1;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 1;
	mov.b64 	%rd7165, {%r5539, %r5538};
	xor.b64  	%rd7166, %rd7165, %rd7164;
	shf.r.wrap.b32 	%r5540, %r5537, %r5536, 8;
	shf.r.wrap.b32 	%r5541, %r5536, %r5537, 8;
	mov.b64 	%rd7167, {%r5541, %r5540};
	xor.b64  	%rd7168, %rd7166, %rd7167;
	add.s64 	%rd7169, %rd9823, %rd9811;
	add.s64 	%rd7170, %rd7169, %rd7163;
	add.s64 	%rd9811, %rd7170, %rd7168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd9812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5543}, %rd9812;
	}
	shf.r.wrap.b32 	%r5544, %r5543, %r5542, 19;
	shf.r.wrap.b32 	%r5545, %r5542, %r5543, 19;
	mov.b64 	%rd7171, {%r5545, %r5544};
	shf.l.wrap.b32 	%r5546, %r5542, %r5543, 3;
	shf.l.wrap.b32 	%r5547, %r5543, %r5542, 3;
	mov.b64 	%rd7172, {%r5547, %r5546};
	shr.u64 	%rd7173, %rd9812, 6;
	xor.b64  	%rd7174, %rd7171, %rd7173;
	xor.b64  	%rd7175, %rd7174, %rd7172;
	shr.u64 	%rd7176, %rd9809, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5548,%dummy}, %rd9809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5549}, %rd9809;
	}
	shf.r.wrap.b32 	%r5550, %r5549, %r5548, 1;
	shf.r.wrap.b32 	%r5551, %r5548, %r5549, 1;
	mov.b64 	%rd7177, {%r5551, %r5550};
	xor.b64  	%rd7178, %rd7177, %rd7176;
	shf.r.wrap.b32 	%r5552, %r5549, %r5548, 8;
	shf.r.wrap.b32 	%r5553, %r5548, %r5549, 8;
	mov.b64 	%rd7179, {%r5553, %r5552};
	xor.b64  	%rd7180, %rd7178, %rd7179;
	add.s64 	%rd7181, %rd9824, %rd9810;
	add.s64 	%rd7182, %rd7181, %rd7175;
	add.s64 	%rd9810, %rd7182, %rd7180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5554,%dummy}, %rd9811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5555}, %rd9811;
	}
	shf.r.wrap.b32 	%r5556, %r5555, %r5554, 19;
	shf.r.wrap.b32 	%r5557, %r5554, %r5555, 19;
	mov.b64 	%rd7183, {%r5557, %r5556};
	shf.l.wrap.b32 	%r5558, %r5554, %r5555, 3;
	shf.l.wrap.b32 	%r5559, %r5555, %r5554, 3;
	mov.b64 	%rd7184, {%r5559, %r5558};
	shr.u64 	%rd7185, %rd9811, 6;
	xor.b64  	%rd7186, %rd7183, %rd7185;
	xor.b64  	%rd7187, %rd7186, %rd7184;
	shr.u64 	%rd7188, %rd9808, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd9808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd9808;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 1;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 1;
	mov.b64 	%rd7189, {%r5563, %r5562};
	xor.b64  	%rd7190, %rd7189, %rd7188;
	shf.r.wrap.b32 	%r5564, %r5561, %r5560, 8;
	shf.r.wrap.b32 	%r5565, %r5560, %r5561, 8;
	mov.b64 	%rd7191, {%r5565, %r5564};
	xor.b64  	%rd7192, %rd7190, %rd7191;
	add.s64 	%rd7193, %rd9825, %rd9809;
	add.s64 	%rd7194, %rd7193, %rd7187;
	add.s64 	%rd9809, %rd7194, %rd7192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5566,%dummy}, %rd9810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5567}, %rd9810;
	}
	shf.r.wrap.b32 	%r5568, %r5567, %r5566, 19;
	shf.r.wrap.b32 	%r5569, %r5566, %r5567, 19;
	mov.b64 	%rd7195, {%r5569, %r5568};
	shf.l.wrap.b32 	%r5570, %r5566, %r5567, 3;
	shf.l.wrap.b32 	%r5571, %r5567, %r5566, 3;
	mov.b64 	%rd7196, {%r5571, %r5570};
	shr.u64 	%rd7197, %rd9810, 6;
	xor.b64  	%rd7198, %rd7195, %rd7197;
	xor.b64  	%rd7199, %rd7198, %rd7196;
	shr.u64 	%rd7200, %rd9807, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5572,%dummy}, %rd9807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5573}, %rd9807;
	}
	shf.r.wrap.b32 	%r5574, %r5573, %r5572, 1;
	shf.r.wrap.b32 	%r5575, %r5572, %r5573, 1;
	mov.b64 	%rd7201, {%r5575, %r5574};
	xor.b64  	%rd7202, %rd7201, %rd7200;
	shf.r.wrap.b32 	%r5576, %r5573, %r5572, 8;
	shf.r.wrap.b32 	%r5577, %r5572, %r5573, 8;
	mov.b64 	%rd7203, {%r5577, %r5576};
	xor.b64  	%rd7204, %rd7202, %rd7203;
	add.s64 	%rd7205, %rd9826, %rd9808;
	add.s64 	%rd7206, %rd7205, %rd7199;
	add.s64 	%rd9808, %rd7206, %rd7204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd9809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd9809;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 19;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 19;
	mov.b64 	%rd7207, {%r5581, %r5580};
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 3;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 3;
	mov.b64 	%rd7208, {%r5583, %r5582};
	shr.u64 	%rd7209, %rd9809, 6;
	xor.b64  	%rd7210, %rd7207, %rd7209;
	xor.b64  	%rd7211, %rd7210, %rd7208;
	shr.u64 	%rd7212, %rd9806, 7;
	shf.r.wrap.b32 	%r5584, %r5423, %r5422, 1;
	shf.r.wrap.b32 	%r5585, %r5422, %r5423, 1;
	mov.b64 	%rd7213, {%r5585, %r5584};
	xor.b64  	%rd7214, %rd7213, %rd7212;
	shf.r.wrap.b32 	%r5586, %r5423, %r5422, 8;
	shf.r.wrap.b32 	%r5587, %r5422, %r5423, 8;
	mov.b64 	%rd7215, {%r5587, %r5586};
	xor.b64  	%rd7216, %rd7214, %rd7215;
	add.s64 	%rd7217, %rd9827, %rd9807;
	add.s64 	%rd7218, %rd7217, %rd7211;
	add.s64 	%rd9807, %rd7218, %rd7216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5588,%dummy}, %rd9808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5589}, %rd9808;
	}
	shf.r.wrap.b32 	%r5590, %r5589, %r5588, 19;
	shf.r.wrap.b32 	%r5591, %r5588, %r5589, 19;
	mov.b64 	%rd7219, {%r5591, %r5590};
	shf.l.wrap.b32 	%r5592, %r5588, %r5589, 3;
	shf.l.wrap.b32 	%r5593, %r5589, %r5588, 3;
	mov.b64 	%rd7220, {%r5593, %r5592};
	shr.u64 	%rd7221, %rd9808, 6;
	xor.b64  	%rd7222, %rd7219, %rd7221;
	xor.b64  	%rd7223, %rd7222, %rd7220;
	shr.u64 	%rd7224, %rd9805, 7;
	shf.r.wrap.b32 	%r5594, %r5435, %r5434, 1;
	shf.r.wrap.b32 	%r5595, %r5434, %r5435, 1;
	mov.b64 	%rd7225, {%r5595, %r5594};
	xor.b64  	%rd7226, %rd7225, %rd7224;
	shf.r.wrap.b32 	%r5596, %r5435, %r5434, 8;
	shf.r.wrap.b32 	%r5597, %r5434, %r5435, 8;
	mov.b64 	%rd7227, {%r5597, %r5596};
	xor.b64  	%rd7228, %rd7226, %rd7227;
	add.s64 	%rd7229, %rd9828, %rd9806;
	add.s64 	%rd7230, %rd7229, %rd7223;
	add.s64 	%rd9806, %rd7230, %rd7228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5598,%dummy}, %rd9807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5599}, %rd9807;
	}
	shf.r.wrap.b32 	%r5600, %r5599, %r5598, 19;
	shf.r.wrap.b32 	%r5601, %r5598, %r5599, 19;
	mov.b64 	%rd7231, {%r5601, %r5600};
	shf.l.wrap.b32 	%r5602, %r5598, %r5599, 3;
	shf.l.wrap.b32 	%r5603, %r5599, %r5598, 3;
	mov.b64 	%rd7232, {%r5603, %r5602};
	shr.u64 	%rd7233, %rd9807, 6;
	xor.b64  	%rd7234, %rd7231, %rd7233;
	xor.b64  	%rd7235, %rd7234, %rd7232;
	shf.r.wrap.b32 	%r5604, %r5447, %r5446, 1;
	shf.r.wrap.b32 	%r5605, %r5446, %r5447, 1;
	mov.b64 	%rd7236, {%r5605, %r5604};
	shf.r.wrap.b32 	%r5606, %r5447, %r5446, 8;
	shf.r.wrap.b32 	%r5607, %r5446, %r5447, 8;
	mov.b64 	%rd7237, {%r5607, %r5606};
	shr.u64 	%rd7238, %rd9821, 7;
	xor.b64  	%rd7239, %rd7236, %rd7238;
	xor.b64  	%rd7240, %rd7239, %rd7237;
	add.s64 	%rd7241, %rd9812, %rd9805;
	add.s64 	%rd7242, %rd7241, %rd7235;
	add.s64 	%rd9805, %rd7242, %rd7240;
	mul.wide.s32 	%rd7243, %r7503, 8;
	mov.u64 	%rd7244, k_sha512;
	add.s64 	%rd7245, %rd7244, %rd7243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd9817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd9817;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 18;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 18;
	mov.b64 	%rd7246, {%r5611, %r5610};
	shf.r.wrap.b32 	%r5612, %r5609, %r5608, 14;
	shf.r.wrap.b32 	%r5613, %r5608, %r5609, 14;
	mov.b64 	%rd7247, {%r5613, %r5612};
	xor.b64  	%rd7248, %rd7246, %rd7247;
	shf.l.wrap.b32 	%r5614, %r5608, %r5609, 23;
	shf.l.wrap.b32 	%r5615, %r5609, %r5608, 23;
	mov.b64 	%rd7249, {%r5615, %r5614};
	xor.b64  	%rd7250, %rd7248, %rd7249;
	xor.b64  	%rd7251, %rd9818, %rd9819;
	and.b64  	%rd7252, %rd9817, %rd7251;
	xor.b64  	%rd7253, %rd7252, %rd9819;
	add.s64 	%rd7254, %rd7253, %rd9820;
	add.s64 	%rd7255, %rd7254, %rd9821;
	ld.const.u64 	%rd7256, [%rd7245];
	add.s64 	%rd7257, %rd7255, %rd7256;
	add.s64 	%rd7258, %rd7257, %rd7250;
	add.s64 	%rd7259, %rd7258, %rd9816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5616}, %rd9813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5617,%dummy}, %rd9813;
	}
	shf.l.wrap.b32 	%r5618, %r5617, %r5616, 30;
	shf.l.wrap.b32 	%r5619, %r5616, %r5617, 30;
	mov.b64 	%rd7260, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5616, %r5617, 28;
	shf.r.wrap.b32 	%r5621, %r5617, %r5616, 28;
	mov.b64 	%rd7261, {%r5621, %r5620};
	xor.b64  	%rd7262, %rd7260, %rd7261;
	shf.l.wrap.b32 	%r5622, %r5617, %r5616, 25;
	shf.l.wrap.b32 	%r5623, %r5616, %r5617, 25;
	mov.b64 	%rd7263, {%r5623, %r5622};
	xor.b64  	%rd7264, %rd7262, %rd7263;
	xor.b64  	%rd7265, %rd9813, %rd9814;
	and.b64  	%rd7266, %rd7265, %rd9815;
	and.b64  	%rd7267, %rd9813, %rd9814;
	or.b64  	%rd7268, %rd7266, %rd7267;
	add.s64 	%rd7269, %rd7258, %rd7268;
	add.s64 	%rd7270, %rd7269, %rd7264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd7259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd7259;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 14;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 14;
	mov.b64 	%rd7271, {%r5627, %r5626};
	shf.r.wrap.b32 	%r5628, %r5625, %r5624, 18;
	shf.r.wrap.b32 	%r5629, %r5624, %r5625, 18;
	mov.b64 	%rd7272, {%r5629, %r5628};
	xor.b64  	%rd7273, %rd7272, %rd7271;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 23;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 23;
	mov.b64 	%rd7274, {%r5631, %r5630};
	xor.b64  	%rd7275, %rd7273, %rd7274;
	xor.b64  	%rd7276, %rd9817, %rd9818;
	and.b64  	%rd7277, %rd7259, %rd7276;
	xor.b64  	%rd7278, %rd7277, %rd9818;
	add.s64 	%rd7279, %rd9822, %rd9819;
	ld.const.u64 	%rd7280, [%rd7245+8];
	add.s64 	%rd7281, %rd7279, %rd7280;
	add.s64 	%rd7282, %rd7281, %rd7278;
	add.s64 	%rd7283, %rd7282, %rd7275;
	add.s64 	%rd7284, %rd7283, %rd9815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd7270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd7270;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 28;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 28;
	mov.b64 	%rd7285, {%r5635, %r5634};
	shf.l.wrap.b32 	%r5636, %r5632, %r5633, 30;
	shf.l.wrap.b32 	%r5637, %r5633, %r5632, 30;
	mov.b64 	%rd7286, {%r5637, %r5636};
	xor.b64  	%rd7287, %rd7286, %rd7285;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 25;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 25;
	mov.b64 	%rd7288, {%r5639, %r5638};
	xor.b64  	%rd7289, %rd7287, %rd7288;
	and.b64  	%rd7290, %rd7270, %rd9813;
	xor.b64  	%rd7291, %rd7270, %rd9813;
	and.b64  	%rd7292, %rd7291, %rd9814;
	or.b64  	%rd7293, %rd7292, %rd7290;
	add.s64 	%rd7294, %rd7283, %rd7293;
	add.s64 	%rd7295, %rd7294, %rd7289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd7284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd7284;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 14;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 14;
	mov.b64 	%rd7296, {%r5643, %r5642};
	shf.r.wrap.b32 	%r5644, %r5641, %r5640, 18;
	shf.r.wrap.b32 	%r5645, %r5640, %r5641, 18;
	mov.b64 	%rd7297, {%r5645, %r5644};
	xor.b64  	%rd7298, %rd7297, %rd7296;
	shf.l.wrap.b32 	%r5646, %r5640, %r5641, 23;
	shf.l.wrap.b32 	%r5647, %r5641, %r5640, 23;
	mov.b64 	%rd7299, {%r5647, %r5646};
	xor.b64  	%rd7300, %rd7298, %rd7299;
	xor.b64  	%rd7301, %rd7259, %rd9817;
	and.b64  	%rd7302, %rd7284, %rd7301;
	xor.b64  	%rd7303, %rd7302, %rd9817;
	add.s64 	%rd7304, %rd9823, %rd9818;
	ld.const.u64 	%rd7305, [%rd7245+16];
	add.s64 	%rd7306, %rd7304, %rd7305;
	add.s64 	%rd7307, %rd7306, %rd7303;
	add.s64 	%rd7308, %rd7307, %rd7300;
	add.s64 	%rd7309, %rd7308, %rd9814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd7295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd7295;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 28;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 28;
	mov.b64 	%rd7310, {%r5651, %r5650};
	shf.l.wrap.b32 	%r5652, %r5648, %r5649, 30;
	shf.l.wrap.b32 	%r5653, %r5649, %r5648, 30;
	mov.b64 	%rd7311, {%r5653, %r5652};
	xor.b64  	%rd7312, %rd7311, %rd7310;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 25;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 25;
	mov.b64 	%rd7313, {%r5655, %r5654};
	xor.b64  	%rd7314, %rd7312, %rd7313;
	and.b64  	%rd7315, %rd7295, %rd7270;
	xor.b64  	%rd7316, %rd7295, %rd7270;
	and.b64  	%rd7317, %rd7316, %rd9813;
	or.b64  	%rd7318, %rd7317, %rd7315;
	add.s64 	%rd7319, %rd7308, %rd7318;
	add.s64 	%rd7320, %rd7319, %rd7314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd7309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd7309;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 14;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 14;
	mov.b64 	%rd7321, {%r5659, %r5658};
	shf.r.wrap.b32 	%r5660, %r5657, %r5656, 18;
	shf.r.wrap.b32 	%r5661, %r5656, %r5657, 18;
	mov.b64 	%rd7322, {%r5661, %r5660};
	xor.b64  	%rd7323, %rd7322, %rd7321;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 23;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 23;
	mov.b64 	%rd7324, {%r5663, %r5662};
	xor.b64  	%rd7325, %rd7323, %rd7324;
	xor.b64  	%rd7326, %rd7284, %rd7259;
	and.b64  	%rd7327, %rd7309, %rd7326;
	xor.b64  	%rd7328, %rd7327, %rd7259;
	add.s64 	%rd7329, %rd9824, %rd9817;
	ld.const.u64 	%rd7330, [%rd7245+24];
	add.s64 	%rd7331, %rd7329, %rd7330;
	add.s64 	%rd7332, %rd7331, %rd7328;
	add.s64 	%rd7333, %rd7332, %rd7325;
	add.s64 	%rd7334, %rd7333, %rd9813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd7320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd7320;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 28;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 28;
	mov.b64 	%rd7335, {%r5667, %r5666};
	shf.l.wrap.b32 	%r5668, %r5664, %r5665, 30;
	shf.l.wrap.b32 	%r5669, %r5665, %r5664, 30;
	mov.b64 	%rd7336, {%r5669, %r5668};
	xor.b64  	%rd7337, %rd7336, %rd7335;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 25;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 25;
	mov.b64 	%rd7338, {%r5671, %r5670};
	xor.b64  	%rd7339, %rd7337, %rd7338;
	and.b64  	%rd7340, %rd7320, %rd7295;
	xor.b64  	%rd7341, %rd7320, %rd7295;
	and.b64  	%rd7342, %rd7341, %rd7270;
	or.b64  	%rd7343, %rd7342, %rd7340;
	add.s64 	%rd7344, %rd7333, %rd7343;
	add.s64 	%rd7345, %rd7344, %rd7339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd7334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd7334;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 14;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 14;
	mov.b64 	%rd7346, {%r5675, %r5674};
	shf.r.wrap.b32 	%r5676, %r5673, %r5672, 18;
	shf.r.wrap.b32 	%r5677, %r5672, %r5673, 18;
	mov.b64 	%rd7347, {%r5677, %r5676};
	xor.b64  	%rd7348, %rd7347, %rd7346;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 23;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 23;
	mov.b64 	%rd7349, {%r5679, %r5678};
	xor.b64  	%rd7350, %rd7348, %rd7349;
	xor.b64  	%rd7351, %rd7309, %rd7284;
	and.b64  	%rd7352, %rd7334, %rd7351;
	xor.b64  	%rd7353, %rd7352, %rd7284;
	add.s64 	%rd7354, %rd7259, %rd9825;
	ld.const.u64 	%rd7355, [%rd7245+32];
	add.s64 	%rd7356, %rd7354, %rd7355;
	add.s64 	%rd7357, %rd7356, %rd7353;
	add.s64 	%rd7358, %rd7357, %rd7350;
	add.s64 	%rd7359, %rd7358, %rd7270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd7345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd7345;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 28;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 28;
	mov.b64 	%rd7360, {%r5683, %r5682};
	shf.l.wrap.b32 	%r5684, %r5680, %r5681, 30;
	shf.l.wrap.b32 	%r5685, %r5681, %r5680, 30;
	mov.b64 	%rd7361, {%r5685, %r5684};
	xor.b64  	%rd7362, %rd7361, %rd7360;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 25;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 25;
	mov.b64 	%rd7363, {%r5687, %r5686};
	xor.b64  	%rd7364, %rd7362, %rd7363;
	and.b64  	%rd7365, %rd7345, %rd7320;
	xor.b64  	%rd7366, %rd7345, %rd7320;
	and.b64  	%rd7367, %rd7366, %rd7295;
	or.b64  	%rd7368, %rd7367, %rd7365;
	add.s64 	%rd7369, %rd7358, %rd7368;
	add.s64 	%rd7370, %rd7369, %rd7364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd7359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd7359;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 14;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 14;
	mov.b64 	%rd7371, {%r5691, %r5690};
	shf.r.wrap.b32 	%r5692, %r5689, %r5688, 18;
	shf.r.wrap.b32 	%r5693, %r5688, %r5689, 18;
	mov.b64 	%rd7372, {%r5693, %r5692};
	xor.b64  	%rd7373, %rd7372, %rd7371;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 23;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 23;
	mov.b64 	%rd7374, {%r5695, %r5694};
	xor.b64  	%rd7375, %rd7373, %rd7374;
	xor.b64  	%rd7376, %rd7334, %rd7309;
	and.b64  	%rd7377, %rd7359, %rd7376;
	xor.b64  	%rd7378, %rd7377, %rd7309;
	add.s64 	%rd7379, %rd7284, %rd9826;
	ld.const.u64 	%rd7380, [%rd7245+40];
	add.s64 	%rd7381, %rd7379, %rd7380;
	add.s64 	%rd7382, %rd7381, %rd7378;
	add.s64 	%rd7383, %rd7382, %rd7375;
	add.s64 	%rd7384, %rd7383, %rd7295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd7370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd7370;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 28;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 28;
	mov.b64 	%rd7385, {%r5699, %r5698};
	shf.l.wrap.b32 	%r5700, %r5696, %r5697, 30;
	shf.l.wrap.b32 	%r5701, %r5697, %r5696, 30;
	mov.b64 	%rd7386, {%r5701, %r5700};
	xor.b64  	%rd7387, %rd7386, %rd7385;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 25;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 25;
	mov.b64 	%rd7388, {%r5703, %r5702};
	xor.b64  	%rd7389, %rd7387, %rd7388;
	and.b64  	%rd7390, %rd7370, %rd7345;
	xor.b64  	%rd7391, %rd7370, %rd7345;
	and.b64  	%rd7392, %rd7391, %rd7320;
	or.b64  	%rd7393, %rd7392, %rd7390;
	add.s64 	%rd7394, %rd7383, %rd7393;
	add.s64 	%rd7395, %rd7394, %rd7389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd7384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd7384;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 14;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 14;
	mov.b64 	%rd7396, {%r5707, %r5706};
	shf.r.wrap.b32 	%r5708, %r5705, %r5704, 18;
	shf.r.wrap.b32 	%r5709, %r5704, %r5705, 18;
	mov.b64 	%rd7397, {%r5709, %r5708};
	xor.b64  	%rd7398, %rd7397, %rd7396;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 23;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 23;
	mov.b64 	%rd7399, {%r5711, %r5710};
	xor.b64  	%rd7400, %rd7398, %rd7399;
	xor.b64  	%rd7401, %rd7359, %rd7334;
	and.b64  	%rd7402, %rd7384, %rd7401;
	xor.b64  	%rd7403, %rd7402, %rd7334;
	add.s64 	%rd7404, %rd7309, %rd9827;
	ld.const.u64 	%rd7405, [%rd7245+48];
	add.s64 	%rd7406, %rd7404, %rd7405;
	add.s64 	%rd7407, %rd7406, %rd7403;
	add.s64 	%rd7408, %rd7407, %rd7400;
	add.s64 	%rd7409, %rd7408, %rd7320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd7395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd7395;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 28;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 28;
	mov.b64 	%rd7410, {%r5715, %r5714};
	shf.l.wrap.b32 	%r5716, %r5712, %r5713, 30;
	shf.l.wrap.b32 	%r5717, %r5713, %r5712, 30;
	mov.b64 	%rd7411, {%r5717, %r5716};
	xor.b64  	%rd7412, %rd7411, %rd7410;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 25;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 25;
	mov.b64 	%rd7413, {%r5719, %r5718};
	xor.b64  	%rd7414, %rd7412, %rd7413;
	and.b64  	%rd7415, %rd7395, %rd7370;
	xor.b64  	%rd7416, %rd7395, %rd7370;
	and.b64  	%rd7417, %rd7416, %rd7345;
	or.b64  	%rd7418, %rd7417, %rd7415;
	add.s64 	%rd7419, %rd7408, %rd7418;
	add.s64 	%rd7420, %rd7419, %rd7414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd7409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd7409;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 14;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 14;
	mov.b64 	%rd7421, {%r5723, %r5722};
	shf.r.wrap.b32 	%r5724, %r5721, %r5720, 18;
	shf.r.wrap.b32 	%r5725, %r5720, %r5721, 18;
	mov.b64 	%rd7422, {%r5725, %r5724};
	xor.b64  	%rd7423, %rd7422, %rd7421;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 23;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 23;
	mov.b64 	%rd7424, {%r5727, %r5726};
	xor.b64  	%rd7425, %rd7423, %rd7424;
	xor.b64  	%rd7426, %rd7384, %rd7359;
	and.b64  	%rd7427, %rd7409, %rd7426;
	xor.b64  	%rd7428, %rd7427, %rd7359;
	add.s64 	%rd7429, %rd7334, %rd9828;
	ld.const.u64 	%rd7430, [%rd7245+56];
	add.s64 	%rd7431, %rd7429, %rd7430;
	add.s64 	%rd7432, %rd7431, %rd7428;
	add.s64 	%rd7433, %rd7432, %rd7425;
	add.s64 	%rd7434, %rd7433, %rd7345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd7420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd7420;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 28;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 28;
	mov.b64 	%rd7435, {%r5731, %r5730};
	shf.l.wrap.b32 	%r5732, %r5728, %r5729, 30;
	shf.l.wrap.b32 	%r5733, %r5729, %r5728, 30;
	mov.b64 	%rd7436, {%r5733, %r5732};
	xor.b64  	%rd7437, %rd7436, %rd7435;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 25;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 25;
	mov.b64 	%rd7438, {%r5735, %r5734};
	xor.b64  	%rd7439, %rd7437, %rd7438;
	and.b64  	%rd7440, %rd7420, %rd7395;
	xor.b64  	%rd7441, %rd7420, %rd7395;
	and.b64  	%rd7442, %rd7441, %rd7370;
	or.b64  	%rd7443, %rd7442, %rd7440;
	add.s64 	%rd7444, %rd7433, %rd7443;
	add.s64 	%rd7445, %rd7444, %rd7439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd7434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd7434;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 14;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 14;
	mov.b64 	%rd7446, {%r5739, %r5738};
	shf.r.wrap.b32 	%r5740, %r5737, %r5736, 18;
	shf.r.wrap.b32 	%r5741, %r5736, %r5737, 18;
	mov.b64 	%rd7447, {%r5741, %r5740};
	xor.b64  	%rd7448, %rd7447, %rd7446;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 23;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 23;
	mov.b64 	%rd7449, {%r5743, %r5742};
	xor.b64  	%rd7450, %rd7448, %rd7449;
	xor.b64  	%rd7451, %rd7409, %rd7384;
	and.b64  	%rd7452, %rd7434, %rd7451;
	xor.b64  	%rd7453, %rd7452, %rd7384;
	add.s64 	%rd7454, %rd7359, %rd9812;
	ld.const.u64 	%rd7455, [%rd7245+64];
	add.s64 	%rd7456, %rd7454, %rd7455;
	add.s64 	%rd7457, %rd7456, %rd7453;
	add.s64 	%rd7458, %rd7457, %rd7450;
	add.s64 	%rd7459, %rd7458, %rd7370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd7445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd7445;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 28;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 28;
	mov.b64 	%rd7460, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 30;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 30;
	mov.b64 	%rd7461, {%r5749, %r5748};
	xor.b64  	%rd7462, %rd7461, %rd7460;
	shf.l.wrap.b32 	%r5750, %r5744, %r5745, 25;
	shf.l.wrap.b32 	%r5751, %r5745, %r5744, 25;
	mov.b64 	%rd7463, {%r5751, %r5750};
	xor.b64  	%rd7464, %rd7462, %rd7463;
	and.b64  	%rd7465, %rd7445, %rd7420;
	xor.b64  	%rd7466, %rd7445, %rd7420;
	and.b64  	%rd7467, %rd7466, %rd7395;
	or.b64  	%rd7468, %rd7467, %rd7465;
	add.s64 	%rd7469, %rd7458, %rd7468;
	add.s64 	%rd7470, %rd7469, %rd7464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5752,%dummy}, %rd7459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5753}, %rd7459;
	}
	shf.r.wrap.b32 	%r5754, %r5753, %r5752, 14;
	shf.r.wrap.b32 	%r5755, %r5752, %r5753, 14;
	mov.b64 	%rd7471, {%r5755, %r5754};
	shf.r.wrap.b32 	%r5756, %r5753, %r5752, 18;
	shf.r.wrap.b32 	%r5757, %r5752, %r5753, 18;
	mov.b64 	%rd7472, {%r5757, %r5756};
	xor.b64  	%rd7473, %rd7472, %rd7471;
	shf.l.wrap.b32 	%r5758, %r5752, %r5753, 23;
	shf.l.wrap.b32 	%r5759, %r5753, %r5752, 23;
	mov.b64 	%rd7474, {%r5759, %r5758};
	xor.b64  	%rd7475, %rd7473, %rd7474;
	xor.b64  	%rd7476, %rd7434, %rd7409;
	and.b64  	%rd7477, %rd7459, %rd7476;
	xor.b64  	%rd7478, %rd7477, %rd7409;
	add.s64 	%rd7479, %rd7384, %rd9811;
	ld.const.u64 	%rd7480, [%rd7245+72];
	add.s64 	%rd7481, %rd7479, %rd7480;
	add.s64 	%rd7482, %rd7481, %rd7478;
	add.s64 	%rd7483, %rd7482, %rd7475;
	add.s64 	%rd7484, %rd7483, %rd7395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5760,%dummy}, %rd7470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd7470;
	}
	shf.r.wrap.b32 	%r5762, %r5761, %r5760, 28;
	shf.r.wrap.b32 	%r5763, %r5760, %r5761, 28;
	mov.b64 	%rd7485, {%r5763, %r5762};
	shf.l.wrap.b32 	%r5764, %r5760, %r5761, 30;
	shf.l.wrap.b32 	%r5765, %r5761, %r5760, 30;
	mov.b64 	%rd7486, {%r5765, %r5764};
	xor.b64  	%rd7487, %rd7486, %rd7485;
	shf.l.wrap.b32 	%r5766, %r5760, %r5761, 25;
	shf.l.wrap.b32 	%r5767, %r5761, %r5760, 25;
	mov.b64 	%rd7488, {%r5767, %r5766};
	xor.b64  	%rd7489, %rd7487, %rd7488;
	and.b64  	%rd7490, %rd7470, %rd7445;
	xor.b64  	%rd7491, %rd7470, %rd7445;
	and.b64  	%rd7492, %rd7491, %rd7420;
	or.b64  	%rd7493, %rd7492, %rd7490;
	add.s64 	%rd7494, %rd7483, %rd7493;
	add.s64 	%rd7495, %rd7494, %rd7489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd7484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd7484;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 14;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 14;
	mov.b64 	%rd7496, {%r5771, %r5770};
	shf.r.wrap.b32 	%r5772, %r5769, %r5768, 18;
	shf.r.wrap.b32 	%r5773, %r5768, %r5769, 18;
	mov.b64 	%rd7497, {%r5773, %r5772};
	xor.b64  	%rd7498, %rd7497, %rd7496;
	shf.l.wrap.b32 	%r5774, %r5768, %r5769, 23;
	shf.l.wrap.b32 	%r5775, %r5769, %r5768, 23;
	mov.b64 	%rd7499, {%r5775, %r5774};
	xor.b64  	%rd7500, %rd7498, %rd7499;
	xor.b64  	%rd7501, %rd7459, %rd7434;
	and.b64  	%rd7502, %rd7484, %rd7501;
	xor.b64  	%rd7503, %rd7502, %rd7434;
	add.s64 	%rd7504, %rd7409, %rd9810;
	ld.const.u64 	%rd7505, [%rd7245+80];
	add.s64 	%rd7506, %rd7504, %rd7505;
	add.s64 	%rd7507, %rd7506, %rd7503;
	add.s64 	%rd7508, %rd7507, %rd7500;
	add.s64 	%rd7509, %rd7508, %rd7420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5776,%dummy}, %rd7495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5777}, %rd7495;
	}
	shf.r.wrap.b32 	%r5778, %r5777, %r5776, 28;
	shf.r.wrap.b32 	%r5779, %r5776, %r5777, 28;
	mov.b64 	%rd7510, {%r5779, %r5778};
	shf.l.wrap.b32 	%r5780, %r5776, %r5777, 30;
	shf.l.wrap.b32 	%r5781, %r5777, %r5776, 30;
	mov.b64 	%rd7511, {%r5781, %r5780};
	xor.b64  	%rd7512, %rd7511, %rd7510;
	shf.l.wrap.b32 	%r5782, %r5776, %r5777, 25;
	shf.l.wrap.b32 	%r5783, %r5777, %r5776, 25;
	mov.b64 	%rd7513, {%r5783, %r5782};
	xor.b64  	%rd7514, %rd7512, %rd7513;
	and.b64  	%rd7515, %rd7495, %rd7470;
	xor.b64  	%rd7516, %rd7495, %rd7470;
	and.b64  	%rd7517, %rd7516, %rd7445;
	or.b64  	%rd7518, %rd7517, %rd7515;
	add.s64 	%rd7519, %rd7508, %rd7518;
	add.s64 	%rd7520, %rd7519, %rd7514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5784,%dummy}, %rd7509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5785}, %rd7509;
	}
	shf.r.wrap.b32 	%r5786, %r5785, %r5784, 14;
	shf.r.wrap.b32 	%r5787, %r5784, %r5785, 14;
	mov.b64 	%rd7521, {%r5787, %r5786};
	shf.r.wrap.b32 	%r5788, %r5785, %r5784, 18;
	shf.r.wrap.b32 	%r5789, %r5784, %r5785, 18;
	mov.b64 	%rd7522, {%r5789, %r5788};
	xor.b64  	%rd7523, %rd7522, %rd7521;
	shf.l.wrap.b32 	%r5790, %r5784, %r5785, 23;
	shf.l.wrap.b32 	%r5791, %r5785, %r5784, 23;
	mov.b64 	%rd7524, {%r5791, %r5790};
	xor.b64  	%rd7525, %rd7523, %rd7524;
	xor.b64  	%rd7526, %rd7484, %rd7459;
	and.b64  	%rd7527, %rd7509, %rd7526;
	xor.b64  	%rd7528, %rd7527, %rd7459;
	add.s64 	%rd7529, %rd7434, %rd9809;
	ld.const.u64 	%rd7530, [%rd7245+88];
	add.s64 	%rd7531, %rd7529, %rd7530;
	add.s64 	%rd7532, %rd7531, %rd7528;
	add.s64 	%rd7533, %rd7532, %rd7525;
	add.s64 	%rd7534, %rd7533, %rd7445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd7520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd7520;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 28;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 28;
	mov.b64 	%rd7535, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 30;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 30;
	mov.b64 	%rd7536, {%r5797, %r5796};
	xor.b64  	%rd7537, %rd7536, %rd7535;
	shf.l.wrap.b32 	%r5798, %r5792, %r5793, 25;
	shf.l.wrap.b32 	%r5799, %r5793, %r5792, 25;
	mov.b64 	%rd7538, {%r5799, %r5798};
	xor.b64  	%rd7539, %rd7537, %rd7538;
	and.b64  	%rd7540, %rd7520, %rd7495;
	xor.b64  	%rd7541, %rd7520, %rd7495;
	and.b64  	%rd7542, %rd7541, %rd7470;
	or.b64  	%rd7543, %rd7542, %rd7540;
	add.s64 	%rd7544, %rd7533, %rd7543;
	add.s64 	%rd7545, %rd7544, %rd7539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5800,%dummy}, %rd7534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5801}, %rd7534;
	}
	shf.r.wrap.b32 	%r5802, %r5801, %r5800, 14;
	shf.r.wrap.b32 	%r5803, %r5800, %r5801, 14;
	mov.b64 	%rd7546, {%r5803, %r5802};
	shf.r.wrap.b32 	%r5804, %r5801, %r5800, 18;
	shf.r.wrap.b32 	%r5805, %r5800, %r5801, 18;
	mov.b64 	%rd7547, {%r5805, %r5804};
	xor.b64  	%rd7548, %rd7547, %rd7546;
	shf.l.wrap.b32 	%r5806, %r5800, %r5801, 23;
	shf.l.wrap.b32 	%r5807, %r5801, %r5800, 23;
	mov.b64 	%rd7549, {%r5807, %r5806};
	xor.b64  	%rd7550, %rd7548, %rd7549;
	xor.b64  	%rd7551, %rd7509, %rd7484;
	and.b64  	%rd7552, %rd7534, %rd7551;
	xor.b64  	%rd7553, %rd7552, %rd7484;
	add.s64 	%rd7554, %rd7459, %rd9808;
	ld.const.u64 	%rd7555, [%rd7245+96];
	add.s64 	%rd7556, %rd7554, %rd7555;
	add.s64 	%rd7557, %rd7556, %rd7553;
	add.s64 	%rd7558, %rd7557, %rd7550;
	add.s64 	%rd9820, %rd7558, %rd7470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5808,%dummy}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5809}, %rd7545;
	}
	shf.r.wrap.b32 	%r5810, %r5809, %r5808, 28;
	shf.r.wrap.b32 	%r5811, %r5808, %r5809, 28;
	mov.b64 	%rd7559, {%r5811, %r5810};
	shf.l.wrap.b32 	%r5812, %r5808, %r5809, 30;
	shf.l.wrap.b32 	%r5813, %r5809, %r5808, 30;
	mov.b64 	%rd7560, {%r5813, %r5812};
	xor.b64  	%rd7561, %rd7560, %rd7559;
	shf.l.wrap.b32 	%r5814, %r5808, %r5809, 25;
	shf.l.wrap.b32 	%r5815, %r5809, %r5808, 25;
	mov.b64 	%rd7562, {%r5815, %r5814};
	xor.b64  	%rd7563, %rd7561, %rd7562;
	and.b64  	%rd7564, %rd7545, %rd7520;
	xor.b64  	%rd7565, %rd7545, %rd7520;
	and.b64  	%rd7566, %rd7565, %rd7495;
	or.b64  	%rd7567, %rd7566, %rd7564;
	add.s64 	%rd7568, %rd7558, %rd7567;
	add.s64 	%rd9816, %rd7568, %rd7563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd9820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd9820;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 14;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 14;
	mov.b64 	%rd7569, {%r5819, %r5818};
	shf.r.wrap.b32 	%r5820, %r5817, %r5816, 18;
	shf.r.wrap.b32 	%r5821, %r5816, %r5817, 18;
	mov.b64 	%rd7570, {%r5821, %r5820};
	xor.b64  	%rd7571, %rd7570, %rd7569;
	shf.l.wrap.b32 	%r5822, %r5816, %r5817, 23;
	shf.l.wrap.b32 	%r5823, %r5817, %r5816, 23;
	mov.b64 	%rd7572, {%r5823, %r5822};
	xor.b64  	%rd7573, %rd7571, %rd7572;
	xor.b64  	%rd7574, %rd7534, %rd7509;
	and.b64  	%rd7575, %rd9820, %rd7574;
	xor.b64  	%rd7576, %rd7575, %rd7509;
	add.s64 	%rd7577, %rd7484, %rd9807;
	ld.const.u64 	%rd7578, [%rd7245+104];
	add.s64 	%rd7579, %rd7577, %rd7578;
	add.s64 	%rd7580, %rd7579, %rd7576;
	add.s64 	%rd7581, %rd7580, %rd7573;
	add.s64 	%rd9819, %rd7581, %rd7495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5824,%dummy}, %rd9816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5825}, %rd9816;
	}
	shf.r.wrap.b32 	%r5826, %r5825, %r5824, 28;
	shf.r.wrap.b32 	%r5827, %r5824, %r5825, 28;
	mov.b64 	%rd7582, {%r5827, %r5826};
	shf.l.wrap.b32 	%r5828, %r5824, %r5825, 30;
	shf.l.wrap.b32 	%r5829, %r5825, %r5824, 30;
	mov.b64 	%rd7583, {%r5829, %r5828};
	xor.b64  	%rd7584, %rd7583, %rd7582;
	shf.l.wrap.b32 	%r5830, %r5824, %r5825, 25;
	shf.l.wrap.b32 	%r5831, %r5825, %r5824, 25;
	mov.b64 	%rd7585, {%r5831, %r5830};
	xor.b64  	%rd7586, %rd7584, %rd7585;
	and.b64  	%rd7587, %rd9816, %rd7545;
	xor.b64  	%rd7588, %rd9816, %rd7545;
	and.b64  	%rd7589, %rd7588, %rd7520;
	or.b64  	%rd7590, %rd7589, %rd7587;
	add.s64 	%rd7591, %rd7581, %rd7590;
	add.s64 	%rd9815, %rd7591, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5832,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5833}, %rd9819;
	}
	shf.r.wrap.b32 	%r5834, %r5833, %r5832, 14;
	shf.r.wrap.b32 	%r5835, %r5832, %r5833, 14;
	mov.b64 	%rd7592, {%r5835, %r5834};
	shf.r.wrap.b32 	%r5836, %r5833, %r5832, 18;
	shf.r.wrap.b32 	%r5837, %r5832, %r5833, 18;
	mov.b64 	%rd7593, {%r5837, %r5836};
	xor.b64  	%rd7594, %rd7593, %rd7592;
	shf.l.wrap.b32 	%r5838, %r5832, %r5833, 23;
	shf.l.wrap.b32 	%r5839, %r5833, %r5832, 23;
	mov.b64 	%rd7595, {%r5839, %r5838};
	xor.b64  	%rd7596, %rd7594, %rd7595;
	xor.b64  	%rd7597, %rd9820, %rd7534;
	and.b64  	%rd7598, %rd9819, %rd7597;
	xor.b64  	%rd7599, %rd7598, %rd7534;
	add.s64 	%rd7600, %rd7509, %rd9806;
	ld.const.u64 	%rd7601, [%rd7245+112];
	add.s64 	%rd7602, %rd7600, %rd7601;
	add.s64 	%rd7603, %rd7602, %rd7599;
	add.s64 	%rd7604, %rd7603, %rd7596;
	add.s64 	%rd9818, %rd7604, %rd7520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd9815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd9815;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 28;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 28;
	mov.b64 	%rd7605, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 30;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 30;
	mov.b64 	%rd7606, {%r5845, %r5844};
	xor.b64  	%rd7607, %rd7606, %rd7605;
	shf.l.wrap.b32 	%r5846, %r5840, %r5841, 25;
	shf.l.wrap.b32 	%r5847, %r5841, %r5840, 25;
	mov.b64 	%rd7608, {%r5847, %r5846};
	xor.b64  	%rd7609, %rd7607, %rd7608;
	and.b64  	%rd7610, %rd9815, %rd9816;
	xor.b64  	%rd7611, %rd9815, %rd9816;
	and.b64  	%rd7612, %rd7611, %rd7545;
	or.b64  	%rd7613, %rd7612, %rd7610;
	add.s64 	%rd7614, %rd7604, %rd7613;
	add.s64 	%rd9814, %rd7614, %rd7609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5848,%dummy}, %rd9818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5849}, %rd9818;
	}
	shf.r.wrap.b32 	%r5850, %r5849, %r5848, 14;
	shf.r.wrap.b32 	%r5851, %r5848, %r5849, 14;
	mov.b64 	%rd7615, {%r5851, %r5850};
	shf.r.wrap.b32 	%r5852, %r5849, %r5848, 18;
	shf.r.wrap.b32 	%r5853, %r5848, %r5849, 18;
	mov.b64 	%rd7616, {%r5853, %r5852};
	xor.b64  	%rd7617, %rd7616, %rd7615;
	shf.l.wrap.b32 	%r5854, %r5848, %r5849, 23;
	shf.l.wrap.b32 	%r5855, %r5849, %r5848, 23;
	mov.b64 	%rd7618, {%r5855, %r5854};
	xor.b64  	%rd7619, %rd7617, %rd7618;
	xor.b64  	%rd7620, %rd9819, %rd9820;
	and.b64  	%rd7621, %rd9818, %rd7620;
	xor.b64  	%rd7622, %rd7621, %rd9820;
	add.s64 	%rd7623, %rd7534, %rd9805;
	ld.const.u64 	%rd7624, [%rd7245+120];
	add.s64 	%rd7625, %rd7623, %rd7624;
	add.s64 	%rd7626, %rd7625, %rd7622;
	add.s64 	%rd7627, %rd7626, %rd7619;
	add.s64 	%rd9817, %rd7627, %rd7545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5856,%dummy}, %rd9814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5857}, %rd9814;
	}
	shf.r.wrap.b32 	%r5858, %r5857, %r5856, 28;
	shf.r.wrap.b32 	%r5859, %r5856, %r5857, 28;
	mov.b64 	%rd7628, {%r5859, %r5858};
	shf.l.wrap.b32 	%r5860, %r5856, %r5857, 30;
	shf.l.wrap.b32 	%r5861, %r5857, %r5856, 30;
	mov.b64 	%rd7629, {%r5861, %r5860};
	xor.b64  	%rd7630, %rd7629, %rd7628;
	shf.l.wrap.b32 	%r5862, %r5856, %r5857, 25;
	shf.l.wrap.b32 	%r5863, %r5857, %r5856, 25;
	mov.b64 	%rd7631, {%r5863, %r5862};
	xor.b64  	%rd7632, %rd7630, %rd7631;
	and.b64  	%rd7633, %rd9814, %rd9815;
	xor.b64  	%rd7634, %rd9814, %rd9815;
	and.b64  	%rd7635, %rd7634, %rd9816;
	or.b64  	%rd7636, %rd7635, %rd7633;
	add.s64 	%rd7637, %rd7627, %rd7636;
	add.s64 	%rd9813, %rd7637, %rd7632;
	add.s32 	%r7503, %r7503, 16;
	setp.lt.s32	%p52, %r7503, 80;
	@%p52 bra 	BB3_32;

	add.u64 	%rd9601, %SPL, 528;
	add.s64 	%rd9600, %rd9601, 192;
	mov.u32 	%r7504, 0;
	add.s64 	%rd9836, %rd9836, %rd9813;
	st.local.u64 	[%rd9600+8], %rd9836;
	add.s64 	%rd9835, %rd9835, %rd9814;
	st.local.u64 	[%rd9600+16], %rd9835;
	add.s64 	%rd9834, %rd9834, %rd9815;
	st.local.u64 	[%rd9600+24], %rd9834;
	add.s64 	%rd9833, %rd9833, %rd9816;
	st.local.u64 	[%rd9600+32], %rd9833;
	add.s64 	%rd9832, %rd9832, %rd9817;
	st.local.u64 	[%rd9600+40], %rd9832;
	add.s64 	%rd9831, %rd9831, %rd9818;
	st.local.u64 	[%rd9600+48], %rd9831;
	add.s64 	%rd9830, %rd9830, %rd9819;
	st.local.u64 	[%rd9600+56], %rd9830;
	add.s64 	%rd9829, %rd9829, %rd9820;
	st.local.u64 	[%rd9600+64], %rd9829;
	st.local.v2.u32 	[%rd9600+72], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+80], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+88], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+96], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+104], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+112], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+120], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+128], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+136], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+144], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+152], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+160], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+168], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+176], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+184], {%r7504, %r7504};
	st.local.v2.u32 	[%rd9600+192], {%r7504, %r7504};
	mov.u32 	%r7505, %r7504;
	mov.u32 	%r7506, %r7504;
	mov.u32 	%r7507, %r7504;
	mov.u32 	%r7508, %r7504;
	mov.u32 	%r7509, %r7504;
	mov.u32 	%r7510, %r7504;
	mov.u32 	%r7511, %r7504;
	mov.u32 	%r7512, %r7504;
	mov.u32 	%r7513, %r7504;
	mov.u32 	%r7514, %r7504;
	mov.u32 	%r7515, %r7504;
	mov.u32 	%r7516, %r7504;
	mov.u32 	%r7517, %r7504;
	mov.u32 	%r7518, %r7504;
	mov.u32 	%r7519, %r7504;
	mov.u32 	%r7520, %r7504;
	mov.u32 	%r7521, %r7504;
	mov.u32 	%r7522, %r7504;
	mov.u32 	%r7523, %r7504;
	mov.u32 	%r7524, %r7504;
	mov.u32 	%r7525, %r7504;
	mov.u32 	%r7526, %r7504;
	mov.u32 	%r7527, %r7504;
	mov.u32 	%r7528, %r7504;
	mov.u32 	%r7529, %r7504;
	mov.u32 	%r7530, %r7504;
	mov.u32 	%r7531, %r7504;
	mov.u32 	%r7532, %r7504;
	mov.u32 	%r7533, %r7504;

BB3_34:
	add.u64 	%rd9604, %SPL, 528;
	add.s64 	%rd9603, %rd9604, 192;
	mov.u64 	%rd9837, k_sha512;
	mov.u32 	%r7367, 0;
	shl.b32 	%r5895, %r322, 3;
	st.local.v2.u32 	[%rd9603+192], {%r7367, %r5895};
	mov.b64	%rd9854, {%r7532, %r7533};
	mov.b64	%rd9855, {%r7530, %r7531};
	mov.b64	%rd9856, {%r7528, %r7529};
	mov.b64	%rd9857, {%r7526, %r7527};
	mov.b64	%rd9858, {%r7524, %r7525};
	mov.b64	%rd9859, {%r7522, %r7523};
	mov.b64	%rd9860, {%r7520, %r7521};
	mov.b64	%rd9861, {%r7518, %r7519};
	mov.b64	%rd9845, {%r7516, %r7517};
	mov.b64	%rd9844, {%r7514, %r7515};
	mov.b64	%rd9843, {%r7512, %r7513};
	mov.b64	%rd9842, {%r7510, %r7511};
	mov.b64	%rd9841, {%r7508, %r7509};
	mov.b64	%rd9840, {%r7506, %r7507};
	mov.b64	%rd9839, {%r7504, %r7505};
	mov.b64	%rd9838, {%r5895, %r7367};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5897,%dummy}, %rd9832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5898}, %rd9832;
	}
	shf.r.wrap.b32 	%r5899, %r5898, %r5897, 18;
	shf.r.wrap.b32 	%r5900, %r5897, %r5898, 18;
	mov.b64 	%rd7639, {%r5900, %r5899};
	shf.r.wrap.b32 	%r5901, %r5898, %r5897, 14;
	shf.r.wrap.b32 	%r5902, %r5897, %r5898, 14;
	mov.b64 	%rd7640, {%r5902, %r5901};
	xor.b64  	%rd7641, %rd7639, %rd7640;
	shf.l.wrap.b32 	%r5903, %r5897, %r5898, 23;
	shf.l.wrap.b32 	%r5904, %r5898, %r5897, 23;
	mov.b64 	%rd7642, {%r5904, %r5903};
	xor.b64  	%rd7643, %rd7641, %rd7642;
	xor.b64  	%rd7644, %rd9830, %rd9831;
	and.b64  	%rd7645, %rd7644, %rd9832;
	xor.b64  	%rd7646, %rd7645, %rd9830;
	add.s64 	%rd7647, %rd7646, %rd9829;
	add.s64 	%rd7648, %rd7647, %rd9854;
	add.s64 	%rd7649, %rd7648, %rd9722;
	add.s64 	%rd7650, %rd7649, %rd7643;
	add.s64 	%rd7651, %rd7650, %rd9833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5905}, %rd9836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5906,%dummy}, %rd9836;
	}
	shf.l.wrap.b32 	%r5907, %r5906, %r5905, 30;
	shf.l.wrap.b32 	%r5908, %r5905, %r5906, 30;
	mov.b64 	%rd7652, {%r5908, %r5907};
	shf.r.wrap.b32 	%r5909, %r5905, %r5906, 28;
	shf.r.wrap.b32 	%r5910, %r5906, %r5905, 28;
	mov.b64 	%rd7653, {%r5910, %r5909};
	xor.b64  	%rd7654, %rd7652, %rd7653;
	shf.l.wrap.b32 	%r5911, %r5906, %r5905, 25;
	shf.l.wrap.b32 	%r5912, %r5905, %r5906, 25;
	mov.b64 	%rd7655, {%r5912, %r5911};
	xor.b64  	%rd7656, %rd7654, %rd7655;
	xor.b64  	%rd7657, %rd9835, %rd9836;
	and.b64  	%rd7658, %rd9834, %rd7657;
	and.b64  	%rd7659, %rd9835, %rd9836;
	or.b64  	%rd7660, %rd7658, %rd7659;
	add.s64 	%rd7661, %rd7650, %rd7660;
	add.s64 	%rd7662, %rd7661, %rd7656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5913,%dummy}, %rd7651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5914}, %rd7651;
	}
	shf.r.wrap.b32 	%r5915, %r5914, %r5913, 14;
	shf.r.wrap.b32 	%r5916, %r5913, %r5914, 14;
	mov.b64 	%rd7663, {%r5916, %r5915};
	shf.r.wrap.b32 	%r5917, %r5914, %r5913, 18;
	shf.r.wrap.b32 	%r5918, %r5913, %r5914, 18;
	mov.b64 	%rd7664, {%r5918, %r5917};
	xor.b64  	%rd7665, %rd7664, %rd7663;
	shf.l.wrap.b32 	%r5919, %r5913, %r5914, 23;
	shf.l.wrap.b32 	%r5920, %r5914, %r5913, 23;
	mov.b64 	%rd7666, {%r5920, %r5919};
	xor.b64  	%rd7667, %rd7665, %rd7666;
	xor.b64  	%rd7668, %rd9831, %rd9832;
	and.b64  	%rd7669, %rd7651, %rd7668;
	xor.b64  	%rd7670, %rd7669, %rd9831;
	add.s64 	%rd7671, %rd9855, %rd9830;
	add.s64 	%rd7672, %rd7671, %rd9721;
	add.s64 	%rd7673, %rd7672, %rd7670;
	add.s64 	%rd7674, %rd7673, %rd7667;
	add.s64 	%rd7675, %rd7674, %rd9834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5921,%dummy}, %rd7662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5922}, %rd7662;
	}
	shf.r.wrap.b32 	%r5923, %r5922, %r5921, 28;
	shf.r.wrap.b32 	%r5924, %r5921, %r5922, 28;
	mov.b64 	%rd7676, {%r5924, %r5923};
	shf.l.wrap.b32 	%r5925, %r5921, %r5922, 30;
	shf.l.wrap.b32 	%r5926, %r5922, %r5921, 30;
	mov.b64 	%rd7677, {%r5926, %r5925};
	xor.b64  	%rd7678, %rd7677, %rd7676;
	shf.l.wrap.b32 	%r5927, %r5921, %r5922, 25;
	shf.l.wrap.b32 	%r5928, %r5922, %r5921, 25;
	mov.b64 	%rd7679, {%r5928, %r5927};
	xor.b64  	%rd7680, %rd7678, %rd7679;
	and.b64  	%rd7681, %rd7662, %rd9836;
	xor.b64  	%rd7682, %rd7662, %rd9836;
	and.b64  	%rd7683, %rd7682, %rd9835;
	or.b64  	%rd7684, %rd7683, %rd7681;
	add.s64 	%rd7685, %rd7674, %rd7684;
	add.s64 	%rd7686, %rd7685, %rd7680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5929,%dummy}, %rd7675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5930}, %rd7675;
	}
	shf.r.wrap.b32 	%r5931, %r5930, %r5929, 14;
	shf.r.wrap.b32 	%r5932, %r5929, %r5930, 14;
	mov.b64 	%rd7687, {%r5932, %r5931};
	shf.r.wrap.b32 	%r5933, %r5930, %r5929, 18;
	shf.r.wrap.b32 	%r5934, %r5929, %r5930, 18;
	mov.b64 	%rd7688, {%r5934, %r5933};
	xor.b64  	%rd7689, %rd7688, %rd7687;
	shf.l.wrap.b32 	%r5935, %r5929, %r5930, 23;
	shf.l.wrap.b32 	%r5936, %r5930, %r5929, 23;
	mov.b64 	%rd7690, {%r5936, %r5935};
	xor.b64  	%rd7691, %rd7689, %rd7690;
	xor.b64  	%rd7692, %rd7651, %rd9832;
	and.b64  	%rd7693, %rd7675, %rd7692;
	xor.b64  	%rd7694, %rd7693, %rd9832;
	add.s64 	%rd7695, %rd9856, %rd9831;
	add.s64 	%rd7696, %rd7695, %rd9720;
	add.s64 	%rd7697, %rd7696, %rd7694;
	add.s64 	%rd7698, %rd7697, %rd7691;
	add.s64 	%rd7699, %rd7698, %rd9835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5937,%dummy}, %rd7686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5938}, %rd7686;
	}
	shf.r.wrap.b32 	%r5939, %r5938, %r5937, 28;
	shf.r.wrap.b32 	%r5940, %r5937, %r5938, 28;
	mov.b64 	%rd7700, {%r5940, %r5939};
	shf.l.wrap.b32 	%r5941, %r5937, %r5938, 30;
	shf.l.wrap.b32 	%r5942, %r5938, %r5937, 30;
	mov.b64 	%rd7701, {%r5942, %r5941};
	xor.b64  	%rd7702, %rd7701, %rd7700;
	shf.l.wrap.b32 	%r5943, %r5937, %r5938, 25;
	shf.l.wrap.b32 	%r5944, %r5938, %r5937, 25;
	mov.b64 	%rd7703, {%r5944, %r5943};
	xor.b64  	%rd7704, %rd7702, %rd7703;
	and.b64  	%rd7705, %rd7686, %rd7662;
	xor.b64  	%rd7706, %rd7686, %rd7662;
	and.b64  	%rd7707, %rd7706, %rd9836;
	or.b64  	%rd7708, %rd7707, %rd7705;
	add.s64 	%rd7709, %rd7698, %rd7708;
	add.s64 	%rd7710, %rd7709, %rd7704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5945,%dummy}, %rd7699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5946}, %rd7699;
	}
	shf.r.wrap.b32 	%r5947, %r5946, %r5945, 14;
	shf.r.wrap.b32 	%r5948, %r5945, %r5946, 14;
	mov.b64 	%rd7711, {%r5948, %r5947};
	shf.r.wrap.b32 	%r5949, %r5946, %r5945, 18;
	shf.r.wrap.b32 	%r5950, %r5945, %r5946, 18;
	mov.b64 	%rd7712, {%r5950, %r5949};
	xor.b64  	%rd7713, %rd7712, %rd7711;
	shf.l.wrap.b32 	%r5951, %r5945, %r5946, 23;
	shf.l.wrap.b32 	%r5952, %r5946, %r5945, 23;
	mov.b64 	%rd7714, {%r5952, %r5951};
	xor.b64  	%rd7715, %rd7713, %rd7714;
	xor.b64  	%rd7716, %rd7675, %rd7651;
	and.b64  	%rd7717, %rd7699, %rd7716;
	xor.b64  	%rd7718, %rd7717, %rd7651;
	add.s64 	%rd7719, %rd9857, %rd9832;
	add.s64 	%rd7720, %rd7719, %rd9719;
	add.s64 	%rd7721, %rd7720, %rd7718;
	add.s64 	%rd7722, %rd7721, %rd7715;
	add.s64 	%rd7723, %rd7722, %rd9836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5953,%dummy}, %rd7710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5954}, %rd7710;
	}
	shf.r.wrap.b32 	%r5955, %r5954, %r5953, 28;
	shf.r.wrap.b32 	%r5956, %r5953, %r5954, 28;
	mov.b64 	%rd7724, {%r5956, %r5955};
	shf.l.wrap.b32 	%r5957, %r5953, %r5954, 30;
	shf.l.wrap.b32 	%r5958, %r5954, %r5953, 30;
	mov.b64 	%rd7725, {%r5958, %r5957};
	xor.b64  	%rd7726, %rd7725, %rd7724;
	shf.l.wrap.b32 	%r5959, %r5953, %r5954, 25;
	shf.l.wrap.b32 	%r5960, %r5954, %r5953, 25;
	mov.b64 	%rd7727, {%r5960, %r5959};
	xor.b64  	%rd7728, %rd7726, %rd7727;
	and.b64  	%rd7729, %rd7710, %rd7686;
	xor.b64  	%rd7730, %rd7710, %rd7686;
	and.b64  	%rd7731, %rd7730, %rd7662;
	or.b64  	%rd7732, %rd7731, %rd7729;
	add.s64 	%rd7733, %rd7722, %rd7732;
	add.s64 	%rd7734, %rd7733, %rd7728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5961,%dummy}, %rd7723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5962}, %rd7723;
	}
	shf.r.wrap.b32 	%r5963, %r5962, %r5961, 14;
	shf.r.wrap.b32 	%r5964, %r5961, %r5962, 14;
	mov.b64 	%rd7735, {%r5964, %r5963};
	shf.r.wrap.b32 	%r5965, %r5962, %r5961, 18;
	shf.r.wrap.b32 	%r5966, %r5961, %r5962, 18;
	mov.b64 	%rd7736, {%r5966, %r5965};
	xor.b64  	%rd7737, %rd7736, %rd7735;
	shf.l.wrap.b32 	%r5967, %r5961, %r5962, 23;
	shf.l.wrap.b32 	%r5968, %r5962, %r5961, 23;
	mov.b64 	%rd7738, {%r5968, %r5967};
	xor.b64  	%rd7739, %rd7737, %rd7738;
	xor.b64  	%rd7740, %rd7699, %rd7675;
	and.b64  	%rd7741, %rd7723, %rd7740;
	xor.b64  	%rd7742, %rd7741, %rd7675;
	add.s64 	%rd7743, %rd7651, %rd9858;
	add.s64 	%rd7744, %rd7743, %rd9718;
	add.s64 	%rd7745, %rd7744, %rd7742;
	add.s64 	%rd7746, %rd7745, %rd7739;
	add.s64 	%rd7747, %rd7746, %rd7662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5969,%dummy}, %rd7734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5970}, %rd7734;
	}
	shf.r.wrap.b32 	%r5971, %r5970, %r5969, 28;
	shf.r.wrap.b32 	%r5972, %r5969, %r5970, 28;
	mov.b64 	%rd7748, {%r5972, %r5971};
	shf.l.wrap.b32 	%r5973, %r5969, %r5970, 30;
	shf.l.wrap.b32 	%r5974, %r5970, %r5969, 30;
	mov.b64 	%rd7749, {%r5974, %r5973};
	xor.b64  	%rd7750, %rd7749, %rd7748;
	shf.l.wrap.b32 	%r5975, %r5969, %r5970, 25;
	shf.l.wrap.b32 	%r5976, %r5970, %r5969, 25;
	mov.b64 	%rd7751, {%r5976, %r5975};
	xor.b64  	%rd7752, %rd7750, %rd7751;
	and.b64  	%rd7753, %rd7734, %rd7710;
	xor.b64  	%rd7754, %rd7734, %rd7710;
	and.b64  	%rd7755, %rd7754, %rd7686;
	or.b64  	%rd7756, %rd7755, %rd7753;
	add.s64 	%rd7757, %rd7746, %rd7756;
	add.s64 	%rd7758, %rd7757, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5977,%dummy}, %rd7747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5978}, %rd7747;
	}
	shf.r.wrap.b32 	%r5979, %r5978, %r5977, 14;
	shf.r.wrap.b32 	%r5980, %r5977, %r5978, 14;
	mov.b64 	%rd7759, {%r5980, %r5979};
	shf.r.wrap.b32 	%r5981, %r5978, %r5977, 18;
	shf.r.wrap.b32 	%r5982, %r5977, %r5978, 18;
	mov.b64 	%rd7760, {%r5982, %r5981};
	xor.b64  	%rd7761, %rd7760, %rd7759;
	shf.l.wrap.b32 	%r5983, %r5977, %r5978, 23;
	shf.l.wrap.b32 	%r5984, %r5978, %r5977, 23;
	mov.b64 	%rd7762, {%r5984, %r5983};
	xor.b64  	%rd7763, %rd7761, %rd7762;
	xor.b64  	%rd7764, %rd7723, %rd7699;
	and.b64  	%rd7765, %rd7747, %rd7764;
	xor.b64  	%rd7766, %rd7765, %rd7699;
	add.s64 	%rd7767, %rd7675, %rd9859;
	add.s64 	%rd7768, %rd7767, %rd9717;
	add.s64 	%rd7769, %rd7768, %rd7766;
	add.s64 	%rd7770, %rd7769, %rd7763;
	add.s64 	%rd7771, %rd7770, %rd7686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5985,%dummy}, %rd7758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5986}, %rd7758;
	}
	shf.r.wrap.b32 	%r5987, %r5986, %r5985, 28;
	shf.r.wrap.b32 	%r5988, %r5985, %r5986, 28;
	mov.b64 	%rd7772, {%r5988, %r5987};
	shf.l.wrap.b32 	%r5989, %r5985, %r5986, 30;
	shf.l.wrap.b32 	%r5990, %r5986, %r5985, 30;
	mov.b64 	%rd7773, {%r5990, %r5989};
	xor.b64  	%rd7774, %rd7773, %rd7772;
	shf.l.wrap.b32 	%r5991, %r5985, %r5986, 25;
	shf.l.wrap.b32 	%r5992, %r5986, %r5985, 25;
	mov.b64 	%rd7775, {%r5992, %r5991};
	xor.b64  	%rd7776, %rd7774, %rd7775;
	and.b64  	%rd7777, %rd7758, %rd7734;
	xor.b64  	%rd7778, %rd7758, %rd7734;
	and.b64  	%rd7779, %rd7778, %rd7710;
	or.b64  	%rd7780, %rd7779, %rd7777;
	add.s64 	%rd7781, %rd7770, %rd7780;
	add.s64 	%rd7782, %rd7781, %rd7776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5993,%dummy}, %rd7771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5994}, %rd7771;
	}
	shf.r.wrap.b32 	%r5995, %r5994, %r5993, 14;
	shf.r.wrap.b32 	%r5996, %r5993, %r5994, 14;
	mov.b64 	%rd7783, {%r5996, %r5995};
	shf.r.wrap.b32 	%r5997, %r5994, %r5993, 18;
	shf.r.wrap.b32 	%r5998, %r5993, %r5994, 18;
	mov.b64 	%rd7784, {%r5998, %r5997};
	xor.b64  	%rd7785, %rd7784, %rd7783;
	shf.l.wrap.b32 	%r5999, %r5993, %r5994, 23;
	shf.l.wrap.b32 	%r6000, %r5994, %r5993, 23;
	mov.b64 	%rd7786, {%r6000, %r5999};
	xor.b64  	%rd7787, %rd7785, %rd7786;
	xor.b64  	%rd7788, %rd7747, %rd7723;
	and.b64  	%rd7789, %rd7771, %rd7788;
	xor.b64  	%rd7790, %rd7789, %rd7723;
	add.s64 	%rd7791, %rd7699, %rd9860;
	add.s64 	%rd7792, %rd7791, %rd9716;
	add.s64 	%rd7793, %rd7792, %rd7790;
	add.s64 	%rd7794, %rd7793, %rd7787;
	add.s64 	%rd7795, %rd7794, %rd7710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6001,%dummy}, %rd7782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6002}, %rd7782;
	}
	shf.r.wrap.b32 	%r6003, %r6002, %r6001, 28;
	shf.r.wrap.b32 	%r6004, %r6001, %r6002, 28;
	mov.b64 	%rd7796, {%r6004, %r6003};
	shf.l.wrap.b32 	%r6005, %r6001, %r6002, 30;
	shf.l.wrap.b32 	%r6006, %r6002, %r6001, 30;
	mov.b64 	%rd7797, {%r6006, %r6005};
	xor.b64  	%rd7798, %rd7797, %rd7796;
	shf.l.wrap.b32 	%r6007, %r6001, %r6002, 25;
	shf.l.wrap.b32 	%r6008, %r6002, %r6001, 25;
	mov.b64 	%rd7799, {%r6008, %r6007};
	xor.b64  	%rd7800, %rd7798, %rd7799;
	and.b64  	%rd7801, %rd7782, %rd7758;
	xor.b64  	%rd7802, %rd7782, %rd7758;
	and.b64  	%rd7803, %rd7802, %rd7734;
	or.b64  	%rd7804, %rd7803, %rd7801;
	add.s64 	%rd7805, %rd7794, %rd7804;
	add.s64 	%rd7806, %rd7805, %rd7800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6009,%dummy}, %rd7795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6010}, %rd7795;
	}
	shf.r.wrap.b32 	%r6011, %r6010, %r6009, 14;
	shf.r.wrap.b32 	%r6012, %r6009, %r6010, 14;
	mov.b64 	%rd7807, {%r6012, %r6011};
	shf.r.wrap.b32 	%r6013, %r6010, %r6009, 18;
	shf.r.wrap.b32 	%r6014, %r6009, %r6010, 18;
	mov.b64 	%rd7808, {%r6014, %r6013};
	xor.b64  	%rd7809, %rd7808, %rd7807;
	shf.l.wrap.b32 	%r6015, %r6009, %r6010, 23;
	shf.l.wrap.b32 	%r6016, %r6010, %r6009, 23;
	mov.b64 	%rd7810, {%r6016, %r6015};
	xor.b64  	%rd7811, %rd7809, %rd7810;
	xor.b64  	%rd7812, %rd7771, %rd7747;
	and.b64  	%rd7813, %rd7795, %rd7812;
	xor.b64  	%rd7814, %rd7813, %rd7747;
	add.s64 	%rd7815, %rd7723, %rd9861;
	add.s64 	%rd7816, %rd7815, %rd9715;
	add.s64 	%rd7817, %rd7816, %rd7814;
	add.s64 	%rd7818, %rd7817, %rd7811;
	add.s64 	%rd7819, %rd7818, %rd7734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6017,%dummy}, %rd7806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6018}, %rd7806;
	}
	shf.r.wrap.b32 	%r6019, %r6018, %r6017, 28;
	shf.r.wrap.b32 	%r6020, %r6017, %r6018, 28;
	mov.b64 	%rd7820, {%r6020, %r6019};
	shf.l.wrap.b32 	%r6021, %r6017, %r6018, 30;
	shf.l.wrap.b32 	%r6022, %r6018, %r6017, 30;
	mov.b64 	%rd7821, {%r6022, %r6021};
	xor.b64  	%rd7822, %rd7821, %rd7820;
	shf.l.wrap.b32 	%r6023, %r6017, %r6018, 25;
	shf.l.wrap.b32 	%r6024, %r6018, %r6017, 25;
	mov.b64 	%rd7823, {%r6024, %r6023};
	xor.b64  	%rd7824, %rd7822, %rd7823;
	and.b64  	%rd7825, %rd7806, %rd7782;
	xor.b64  	%rd7826, %rd7806, %rd7782;
	and.b64  	%rd7827, %rd7826, %rd7758;
	or.b64  	%rd7828, %rd7827, %rd7825;
	add.s64 	%rd7829, %rd7818, %rd7828;
	add.s64 	%rd7830, %rd7829, %rd7824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6025,%dummy}, %rd7819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6026}, %rd7819;
	}
	shf.r.wrap.b32 	%r6027, %r6026, %r6025, 14;
	shf.r.wrap.b32 	%r6028, %r6025, %r6026, 14;
	mov.b64 	%rd7831, {%r6028, %r6027};
	shf.r.wrap.b32 	%r6029, %r6026, %r6025, 18;
	shf.r.wrap.b32 	%r6030, %r6025, %r6026, 18;
	mov.b64 	%rd7832, {%r6030, %r6029};
	xor.b64  	%rd7833, %rd7832, %rd7831;
	shf.l.wrap.b32 	%r6031, %r6025, %r6026, 23;
	shf.l.wrap.b32 	%r6032, %r6026, %r6025, 23;
	mov.b64 	%rd7834, {%r6032, %r6031};
	xor.b64  	%rd7835, %rd7833, %rd7834;
	xor.b64  	%rd7836, %rd7795, %rd7771;
	and.b64  	%rd7837, %rd7819, %rd7836;
	xor.b64  	%rd7838, %rd7837, %rd7771;
	add.s64 	%rd7839, %rd7747, %rd9845;
	add.s64 	%rd7840, %rd7839, %rd9714;
	add.s64 	%rd7841, %rd7840, %rd7838;
	add.s64 	%rd7842, %rd7841, %rd7835;
	add.s64 	%rd7843, %rd7842, %rd7758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6033,%dummy}, %rd7830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6034}, %rd7830;
	}
	shf.r.wrap.b32 	%r6035, %r6034, %r6033, 28;
	shf.r.wrap.b32 	%r6036, %r6033, %r6034, 28;
	mov.b64 	%rd7844, {%r6036, %r6035};
	shf.l.wrap.b32 	%r6037, %r6033, %r6034, 30;
	shf.l.wrap.b32 	%r6038, %r6034, %r6033, 30;
	mov.b64 	%rd7845, {%r6038, %r6037};
	xor.b64  	%rd7846, %rd7845, %rd7844;
	shf.l.wrap.b32 	%r6039, %r6033, %r6034, 25;
	shf.l.wrap.b32 	%r6040, %r6034, %r6033, 25;
	mov.b64 	%rd7847, {%r6040, %r6039};
	xor.b64  	%rd7848, %rd7846, %rd7847;
	and.b64  	%rd7849, %rd7830, %rd7806;
	xor.b64  	%rd7850, %rd7830, %rd7806;
	and.b64  	%rd7851, %rd7850, %rd7782;
	or.b64  	%rd7852, %rd7851, %rd7849;
	add.s64 	%rd7853, %rd7842, %rd7852;
	add.s64 	%rd7854, %rd7853, %rd7848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6041,%dummy}, %rd7843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6042}, %rd7843;
	}
	shf.r.wrap.b32 	%r6043, %r6042, %r6041, 14;
	shf.r.wrap.b32 	%r6044, %r6041, %r6042, 14;
	mov.b64 	%rd7855, {%r6044, %r6043};
	shf.r.wrap.b32 	%r6045, %r6042, %r6041, 18;
	shf.r.wrap.b32 	%r6046, %r6041, %r6042, 18;
	mov.b64 	%rd7856, {%r6046, %r6045};
	xor.b64  	%rd7857, %rd7856, %rd7855;
	shf.l.wrap.b32 	%r6047, %r6041, %r6042, 23;
	shf.l.wrap.b32 	%r6048, %r6042, %r6041, 23;
	mov.b64 	%rd7858, {%r6048, %r6047};
	xor.b64  	%rd7859, %rd7857, %rd7858;
	xor.b64  	%rd7860, %rd7819, %rd7795;
	and.b64  	%rd7861, %rd7843, %rd7860;
	xor.b64  	%rd7862, %rd7861, %rd7795;
	add.s64 	%rd7863, %rd7771, %rd9844;
	add.s64 	%rd7864, %rd7863, %rd9713;
	add.s64 	%rd7865, %rd7864, %rd7862;
	add.s64 	%rd7866, %rd7865, %rd7859;
	add.s64 	%rd7867, %rd7866, %rd7782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6049,%dummy}, %rd7854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6050}, %rd7854;
	}
	shf.r.wrap.b32 	%r6051, %r6050, %r6049, 28;
	shf.r.wrap.b32 	%r6052, %r6049, %r6050, 28;
	mov.b64 	%rd7868, {%r6052, %r6051};
	shf.l.wrap.b32 	%r6053, %r6049, %r6050, 30;
	shf.l.wrap.b32 	%r6054, %r6050, %r6049, 30;
	mov.b64 	%rd7869, {%r6054, %r6053};
	xor.b64  	%rd7870, %rd7869, %rd7868;
	shf.l.wrap.b32 	%r6055, %r6049, %r6050, 25;
	shf.l.wrap.b32 	%r6056, %r6050, %r6049, 25;
	mov.b64 	%rd7871, {%r6056, %r6055};
	xor.b64  	%rd7872, %rd7870, %rd7871;
	and.b64  	%rd7873, %rd7854, %rd7830;
	xor.b64  	%rd7874, %rd7854, %rd7830;
	and.b64  	%rd7875, %rd7874, %rd7806;
	or.b64  	%rd7876, %rd7875, %rd7873;
	add.s64 	%rd7877, %rd7866, %rd7876;
	add.s64 	%rd7878, %rd7877, %rd7872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6057,%dummy}, %rd7867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6058}, %rd7867;
	}
	shf.r.wrap.b32 	%r6059, %r6058, %r6057, 14;
	shf.r.wrap.b32 	%r6060, %r6057, %r6058, 14;
	mov.b64 	%rd7879, {%r6060, %r6059};
	shf.r.wrap.b32 	%r6061, %r6058, %r6057, 18;
	shf.r.wrap.b32 	%r6062, %r6057, %r6058, 18;
	mov.b64 	%rd7880, {%r6062, %r6061};
	xor.b64  	%rd7881, %rd7880, %rd7879;
	shf.l.wrap.b32 	%r6063, %r6057, %r6058, 23;
	shf.l.wrap.b32 	%r6064, %r6058, %r6057, 23;
	mov.b64 	%rd7882, {%r6064, %r6063};
	xor.b64  	%rd7883, %rd7881, %rd7882;
	xor.b64  	%rd7884, %rd7843, %rd7819;
	and.b64  	%rd7885, %rd7867, %rd7884;
	xor.b64  	%rd7886, %rd7885, %rd7819;
	add.s64 	%rd7887, %rd7795, %rd9843;
	add.s64 	%rd7888, %rd7887, %rd9712;
	add.s64 	%rd7889, %rd7888, %rd7886;
	add.s64 	%rd7890, %rd7889, %rd7883;
	add.s64 	%rd7891, %rd7890, %rd7806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6065,%dummy}, %rd7878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6066}, %rd7878;
	}
	shf.r.wrap.b32 	%r6067, %r6066, %r6065, 28;
	shf.r.wrap.b32 	%r6068, %r6065, %r6066, 28;
	mov.b64 	%rd7892, {%r6068, %r6067};
	shf.l.wrap.b32 	%r6069, %r6065, %r6066, 30;
	shf.l.wrap.b32 	%r6070, %r6066, %r6065, 30;
	mov.b64 	%rd7893, {%r6070, %r6069};
	xor.b64  	%rd7894, %rd7893, %rd7892;
	shf.l.wrap.b32 	%r6071, %r6065, %r6066, 25;
	shf.l.wrap.b32 	%r6072, %r6066, %r6065, 25;
	mov.b64 	%rd7895, {%r6072, %r6071};
	xor.b64  	%rd7896, %rd7894, %rd7895;
	and.b64  	%rd7897, %rd7878, %rd7854;
	xor.b64  	%rd7898, %rd7878, %rd7854;
	and.b64  	%rd7899, %rd7898, %rd7830;
	or.b64  	%rd7900, %rd7899, %rd7897;
	add.s64 	%rd7901, %rd7890, %rd7900;
	add.s64 	%rd7902, %rd7901, %rd7896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6073,%dummy}, %rd7891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6074}, %rd7891;
	}
	shf.r.wrap.b32 	%r6075, %r6074, %r6073, 14;
	shf.r.wrap.b32 	%r6076, %r6073, %r6074, 14;
	mov.b64 	%rd7903, {%r6076, %r6075};
	shf.r.wrap.b32 	%r6077, %r6074, %r6073, 18;
	shf.r.wrap.b32 	%r6078, %r6073, %r6074, 18;
	mov.b64 	%rd7904, {%r6078, %r6077};
	xor.b64  	%rd7905, %rd7904, %rd7903;
	shf.l.wrap.b32 	%r6079, %r6073, %r6074, 23;
	shf.l.wrap.b32 	%r6080, %r6074, %r6073, 23;
	mov.b64 	%rd7906, {%r6080, %r6079};
	xor.b64  	%rd7907, %rd7905, %rd7906;
	xor.b64  	%rd7908, %rd7867, %rd7843;
	and.b64  	%rd7909, %rd7891, %rd7908;
	xor.b64  	%rd7910, %rd7909, %rd7843;
	add.s64 	%rd7911, %rd7819, %rd9842;
	add.s64 	%rd7912, %rd7911, %rd9711;
	add.s64 	%rd7913, %rd7912, %rd7910;
	add.s64 	%rd7914, %rd7913, %rd7907;
	add.s64 	%rd7915, %rd7914, %rd7830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6081,%dummy}, %rd7902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6082}, %rd7902;
	}
	shf.r.wrap.b32 	%r6083, %r6082, %r6081, 28;
	shf.r.wrap.b32 	%r6084, %r6081, %r6082, 28;
	mov.b64 	%rd7916, {%r6084, %r6083};
	shf.l.wrap.b32 	%r6085, %r6081, %r6082, 30;
	shf.l.wrap.b32 	%r6086, %r6082, %r6081, 30;
	mov.b64 	%rd7917, {%r6086, %r6085};
	xor.b64  	%rd7918, %rd7917, %rd7916;
	shf.l.wrap.b32 	%r6087, %r6081, %r6082, 25;
	shf.l.wrap.b32 	%r6088, %r6082, %r6081, 25;
	mov.b64 	%rd7919, {%r6088, %r6087};
	xor.b64  	%rd7920, %rd7918, %rd7919;
	and.b64  	%rd7921, %rd7902, %rd7878;
	xor.b64  	%rd7922, %rd7902, %rd7878;
	and.b64  	%rd7923, %rd7922, %rd7854;
	or.b64  	%rd7924, %rd7923, %rd7921;
	add.s64 	%rd7925, %rd7914, %rd7924;
	add.s64 	%rd7926, %rd7925, %rd7920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6089,%dummy}, %rd7915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6090}, %rd7915;
	}
	shf.r.wrap.b32 	%r6091, %r6090, %r6089, 14;
	shf.r.wrap.b32 	%r6092, %r6089, %r6090, 14;
	mov.b64 	%rd7927, {%r6092, %r6091};
	shf.r.wrap.b32 	%r6093, %r6090, %r6089, 18;
	shf.r.wrap.b32 	%r6094, %r6089, %r6090, 18;
	mov.b64 	%rd7928, {%r6094, %r6093};
	xor.b64  	%rd7929, %rd7928, %rd7927;
	shf.l.wrap.b32 	%r6095, %r6089, %r6090, 23;
	shf.l.wrap.b32 	%r6096, %r6090, %r6089, 23;
	mov.b64 	%rd7930, {%r6096, %r6095};
	xor.b64  	%rd7931, %rd7929, %rd7930;
	xor.b64  	%rd7932, %rd7891, %rd7867;
	and.b64  	%rd7933, %rd7915, %rd7932;
	xor.b64  	%rd7934, %rd7933, %rd7867;
	add.s64 	%rd7935, %rd7843, %rd9841;
	add.s64 	%rd7936, %rd7935, %rd9710;
	add.s64 	%rd7937, %rd7936, %rd7934;
	add.s64 	%rd7938, %rd7937, %rd7931;
	add.s64 	%rd9853, %rd7938, %rd7854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6097,%dummy}, %rd7926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6098}, %rd7926;
	}
	shf.r.wrap.b32 	%r6099, %r6098, %r6097, 28;
	shf.r.wrap.b32 	%r6100, %r6097, %r6098, 28;
	mov.b64 	%rd7939, {%r6100, %r6099};
	shf.l.wrap.b32 	%r6101, %r6097, %r6098, 30;
	shf.l.wrap.b32 	%r6102, %r6098, %r6097, 30;
	mov.b64 	%rd7940, {%r6102, %r6101};
	xor.b64  	%rd7941, %rd7940, %rd7939;
	shf.l.wrap.b32 	%r6103, %r6097, %r6098, 25;
	shf.l.wrap.b32 	%r6104, %r6098, %r6097, 25;
	mov.b64 	%rd7942, {%r6104, %r6103};
	xor.b64  	%rd7943, %rd7941, %rd7942;
	and.b64  	%rd7944, %rd7926, %rd7902;
	xor.b64  	%rd7945, %rd7926, %rd7902;
	and.b64  	%rd7946, %rd7945, %rd7878;
	or.b64  	%rd7947, %rd7946, %rd7944;
	add.s64 	%rd7948, %rd7938, %rd7947;
	add.s64 	%rd9849, %rd7948, %rd7943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6105,%dummy}, %rd9853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6106}, %rd9853;
	}
	shf.r.wrap.b32 	%r6107, %r6106, %r6105, 14;
	shf.r.wrap.b32 	%r6108, %r6105, %r6106, 14;
	mov.b64 	%rd7949, {%r6108, %r6107};
	shf.r.wrap.b32 	%r6109, %r6106, %r6105, 18;
	shf.r.wrap.b32 	%r6110, %r6105, %r6106, 18;
	mov.b64 	%rd7950, {%r6110, %r6109};
	xor.b64  	%rd7951, %rd7950, %rd7949;
	shf.l.wrap.b32 	%r6111, %r6105, %r6106, 23;
	shf.l.wrap.b32 	%r6112, %r6106, %r6105, 23;
	mov.b64 	%rd7952, {%r6112, %r6111};
	xor.b64  	%rd7953, %rd7951, %rd7952;
	xor.b64  	%rd7954, %rd7915, %rd7891;
	and.b64  	%rd7955, %rd9853, %rd7954;
	xor.b64  	%rd7956, %rd7955, %rd7891;
	add.s64 	%rd7957, %rd7867, %rd9840;
	add.s64 	%rd7958, %rd7957, %rd9709;
	add.s64 	%rd7959, %rd7958, %rd7956;
	add.s64 	%rd7960, %rd7959, %rd7953;
	add.s64 	%rd9852, %rd7960, %rd7878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6113,%dummy}, %rd9849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6114}, %rd9849;
	}
	shf.r.wrap.b32 	%r6115, %r6114, %r6113, 28;
	shf.r.wrap.b32 	%r6116, %r6113, %r6114, 28;
	mov.b64 	%rd7961, {%r6116, %r6115};
	shf.l.wrap.b32 	%r6117, %r6113, %r6114, 30;
	shf.l.wrap.b32 	%r6118, %r6114, %r6113, 30;
	mov.b64 	%rd7962, {%r6118, %r6117};
	xor.b64  	%rd7963, %rd7962, %rd7961;
	shf.l.wrap.b32 	%r6119, %r6113, %r6114, 25;
	shf.l.wrap.b32 	%r6120, %r6114, %r6113, 25;
	mov.b64 	%rd7964, {%r6120, %r6119};
	xor.b64  	%rd7965, %rd7963, %rd7964;
	and.b64  	%rd7966, %rd9849, %rd7926;
	xor.b64  	%rd7967, %rd9849, %rd7926;
	and.b64  	%rd7968, %rd7967, %rd7902;
	or.b64  	%rd7969, %rd7968, %rd7966;
	add.s64 	%rd7970, %rd7960, %rd7969;
	add.s64 	%rd9848, %rd7970, %rd7965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6121,%dummy}, %rd9852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6122}, %rd9852;
	}
	shf.r.wrap.b32 	%r6123, %r6122, %r6121, 14;
	shf.r.wrap.b32 	%r6124, %r6121, %r6122, 14;
	mov.b64 	%rd7971, {%r6124, %r6123};
	shf.r.wrap.b32 	%r6125, %r6122, %r6121, 18;
	shf.r.wrap.b32 	%r6126, %r6121, %r6122, 18;
	mov.b64 	%rd7972, {%r6126, %r6125};
	xor.b64  	%rd7973, %rd7972, %rd7971;
	shf.l.wrap.b32 	%r6127, %r6121, %r6122, 23;
	shf.l.wrap.b32 	%r6128, %r6122, %r6121, 23;
	mov.b64 	%rd7974, {%r6128, %r6127};
	xor.b64  	%rd7975, %rd7973, %rd7974;
	xor.b64  	%rd7976, %rd9853, %rd7915;
	and.b64  	%rd7977, %rd9852, %rd7976;
	xor.b64  	%rd7978, %rd7977, %rd7915;
	add.s64 	%rd7979, %rd7891, %rd9839;
	add.s64 	%rd7980, %rd7979, %rd9708;
	add.s64 	%rd7981, %rd7980, %rd7978;
	add.s64 	%rd7982, %rd7981, %rd7975;
	add.s64 	%rd9851, %rd7982, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6129,%dummy}, %rd9848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6130}, %rd9848;
	}
	shf.r.wrap.b32 	%r6131, %r6130, %r6129, 28;
	shf.r.wrap.b32 	%r6132, %r6129, %r6130, 28;
	mov.b64 	%rd7983, {%r6132, %r6131};
	shf.l.wrap.b32 	%r6133, %r6129, %r6130, 30;
	shf.l.wrap.b32 	%r6134, %r6130, %r6129, 30;
	mov.b64 	%rd7984, {%r6134, %r6133};
	xor.b64  	%rd7985, %rd7984, %rd7983;
	shf.l.wrap.b32 	%r6135, %r6129, %r6130, 25;
	shf.l.wrap.b32 	%r6136, %r6130, %r6129, 25;
	mov.b64 	%rd7986, {%r6136, %r6135};
	xor.b64  	%rd7987, %rd7985, %rd7986;
	and.b64  	%rd7988, %rd9848, %rd9849;
	xor.b64  	%rd7989, %rd9848, %rd9849;
	and.b64  	%rd7990, %rd7989, %rd7926;
	or.b64  	%rd7991, %rd7990, %rd7988;
	add.s64 	%rd7992, %rd7982, %rd7991;
	add.s64 	%rd9847, %rd7992, %rd7987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6137,%dummy}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6138}, %rd9851;
	}
	shf.r.wrap.b32 	%r6139, %r6138, %r6137, 14;
	shf.r.wrap.b32 	%r6140, %r6137, %r6138, 14;
	mov.b64 	%rd7993, {%r6140, %r6139};
	shf.r.wrap.b32 	%r6141, %r6138, %r6137, 18;
	shf.r.wrap.b32 	%r6142, %r6137, %r6138, 18;
	mov.b64 	%rd7994, {%r6142, %r6141};
	xor.b64  	%rd7995, %rd7994, %rd7993;
	shf.l.wrap.b32 	%r6143, %r6137, %r6138, 23;
	shf.l.wrap.b32 	%r6144, %r6138, %r6137, 23;
	mov.b64 	%rd7996, {%r6144, %r6143};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	xor.b64  	%rd7998, %rd9852, %rd9853;
	and.b64  	%rd7999, %rd9851, %rd7998;
	xor.b64  	%rd8000, %rd7999, %rd9853;
	add.s64 	%rd8001, %rd7915, %rd9838;
	add.s64 	%rd8002, %rd8001, %rd9707;
	add.s64 	%rd8003, %rd8002, %rd8000;
	add.s64 	%rd8004, %rd8003, %rd7997;
	add.s64 	%rd9850, %rd8004, %rd7926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6145,%dummy}, %rd9847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6146}, %rd9847;
	}
	shf.r.wrap.b32 	%r6147, %r6146, %r6145, 28;
	shf.r.wrap.b32 	%r6148, %r6145, %r6146, 28;
	mov.b64 	%rd8005, {%r6148, %r6147};
	shf.l.wrap.b32 	%r6149, %r6145, %r6146, 30;
	shf.l.wrap.b32 	%r6150, %r6146, %r6145, 30;
	mov.b64 	%rd8006, {%r6150, %r6149};
	xor.b64  	%rd8007, %rd8006, %rd8005;
	shf.l.wrap.b32 	%r6151, %r6145, %r6146, 25;
	shf.l.wrap.b32 	%r6152, %r6146, %r6145, 25;
	mov.b64 	%rd8008, {%r6152, %r6151};
	xor.b64  	%rd8009, %rd8007, %rd8008;
	and.b64  	%rd8010, %rd9847, %rd9848;
	xor.b64  	%rd8011, %rd9847, %rd9848;
	and.b64  	%rd8012, %rd8011, %rd9849;
	or.b64  	%rd8013, %rd8012, %rd8010;
	add.s64 	%rd8014, %rd8004, %rd8013;
	add.s64 	%rd9846, %rd8014, %rd8009;
	mov.u32 	%r7534, 16;

BB3_35:
	shr.u64 	%rd8015, %rd9839, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6153,%dummy}, %rd9839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6154}, %rd9839;
	}
	shf.r.wrap.b32 	%r6155, %r6154, %r6153, 19;
	shf.r.wrap.b32 	%r6156, %r6153, %r6154, 19;
	mov.b64 	%rd8016, {%r6156, %r6155};
	xor.b64  	%rd8017, %rd8016, %rd8015;
	shf.l.wrap.b32 	%r6157, %r6153, %r6154, 3;
	shf.l.wrap.b32 	%r6158, %r6154, %r6153, 3;
	mov.b64 	%rd8018, {%r6158, %r6157};
	xor.b64  	%rd8019, %rd8017, %rd8018;
	shr.u64 	%rd8020, %rd9855, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6159,%dummy}, %rd9855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6160}, %rd9855;
	}
	shf.r.wrap.b32 	%r6161, %r6160, %r6159, 1;
	shf.r.wrap.b32 	%r6162, %r6159, %r6160, 1;
	mov.b64 	%rd8021, {%r6162, %r6161};
	xor.b64  	%rd8022, %rd8021, %rd8020;
	shf.r.wrap.b32 	%r6163, %r6160, %r6159, 8;
	shf.r.wrap.b32 	%r6164, %r6159, %r6160, 8;
	mov.b64 	%rd8023, {%r6164, %r6163};
	xor.b64  	%rd8024, %rd8022, %rd8023;
	add.s64 	%rd8025, %rd9844, %rd9854;
	add.s64 	%rd8026, %rd8025, %rd8019;
	add.s64 	%rd9854, %rd8026, %rd8024;
	shr.u64 	%rd8027, %rd9838, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6165,%dummy}, %rd9838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6166}, %rd9838;
	}
	shf.r.wrap.b32 	%r6167, %r6166, %r6165, 19;
	shf.r.wrap.b32 	%r6168, %r6165, %r6166, 19;
	mov.b64 	%rd8028, {%r6168, %r6167};
	xor.b64  	%rd8029, %rd8028, %rd8027;
	shf.l.wrap.b32 	%r6169, %r6165, %r6166, 3;
	shf.l.wrap.b32 	%r6170, %r6166, %r6165, 3;
	mov.b64 	%rd8030, {%r6170, %r6169};
	xor.b64  	%rd8031, %rd8029, %rd8030;
	shr.u64 	%rd8032, %rd9856, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd9856;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 1;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 1;
	mov.b64 	%rd8033, {%r6174, %r6173};
	xor.b64  	%rd8034, %rd8033, %rd8032;
	shf.r.wrap.b32 	%r6175, %r6172, %r6171, 8;
	shf.r.wrap.b32 	%r6176, %r6171, %r6172, 8;
	mov.b64 	%rd8035, {%r6176, %r6175};
	xor.b64  	%rd8036, %rd8034, %rd8035;
	add.s64 	%rd8037, %rd9843, %rd9855;
	add.s64 	%rd8038, %rd8037, %rd8031;
	add.s64 	%rd9855, %rd8038, %rd8036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6177,%dummy}, %rd9854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6178}, %rd9854;
	}
	shf.r.wrap.b32 	%r6179, %r6178, %r6177, 19;
	shf.r.wrap.b32 	%r6180, %r6177, %r6178, 19;
	mov.b64 	%rd8039, {%r6180, %r6179};
	shf.l.wrap.b32 	%r6181, %r6177, %r6178, 3;
	shf.l.wrap.b32 	%r6182, %r6178, %r6177, 3;
	mov.b64 	%rd8040, {%r6182, %r6181};
	shr.u64 	%rd8041, %rd9854, 6;
	xor.b64  	%rd8042, %rd8039, %rd8041;
	xor.b64  	%rd8043, %rd8042, %rd8040;
	shr.u64 	%rd8044, %rd9857, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6183,%dummy}, %rd9857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6184}, %rd9857;
	}
	shf.r.wrap.b32 	%r6185, %r6184, %r6183, 1;
	shf.r.wrap.b32 	%r6186, %r6183, %r6184, 1;
	mov.b64 	%rd8045, {%r6186, %r6185};
	xor.b64  	%rd8046, %rd8045, %rd8044;
	shf.r.wrap.b32 	%r6187, %r6184, %r6183, 8;
	shf.r.wrap.b32 	%r6188, %r6183, %r6184, 8;
	mov.b64 	%rd8047, {%r6188, %r6187};
	xor.b64  	%rd8048, %rd8046, %rd8047;
	add.s64 	%rd8049, %rd9842, %rd9856;
	add.s64 	%rd8050, %rd8049, %rd8043;
	add.s64 	%rd9856, %rd8050, %rd8048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd9855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd9855;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 19;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 19;
	mov.b64 	%rd8051, {%r6192, %r6191};
	shf.l.wrap.b32 	%r6193, %r6189, %r6190, 3;
	shf.l.wrap.b32 	%r6194, %r6190, %r6189, 3;
	mov.b64 	%rd8052, {%r6194, %r6193};
	shr.u64 	%rd8053, %rd9855, 6;
	xor.b64  	%rd8054, %rd8051, %rd8053;
	xor.b64  	%rd8055, %rd8054, %rd8052;
	shr.u64 	%rd8056, %rd9858, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6195,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6196}, %rd9858;
	}
	shf.r.wrap.b32 	%r6197, %r6196, %r6195, 1;
	shf.r.wrap.b32 	%r6198, %r6195, %r6196, 1;
	mov.b64 	%rd8057, {%r6198, %r6197};
	xor.b64  	%rd8058, %rd8057, %rd8056;
	shf.r.wrap.b32 	%r6199, %r6196, %r6195, 8;
	shf.r.wrap.b32 	%r6200, %r6195, %r6196, 8;
	mov.b64 	%rd8059, {%r6200, %r6199};
	xor.b64  	%rd8060, %rd8058, %rd8059;
	add.s64 	%rd8061, %rd9841, %rd9857;
	add.s64 	%rd8062, %rd8061, %rd8055;
	add.s64 	%rd9857, %rd8062, %rd8060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6201,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6202}, %rd9856;
	}
	shf.r.wrap.b32 	%r6203, %r6202, %r6201, 19;
	shf.r.wrap.b32 	%r6204, %r6201, %r6202, 19;
	mov.b64 	%rd8063, {%r6204, %r6203};
	shf.l.wrap.b32 	%r6205, %r6201, %r6202, 3;
	shf.l.wrap.b32 	%r6206, %r6202, %r6201, 3;
	mov.b64 	%rd8064, {%r6206, %r6205};
	shr.u64 	%rd8065, %rd9856, 6;
	xor.b64  	%rd8066, %rd8063, %rd8065;
	xor.b64  	%rd8067, %rd8066, %rd8064;
	shr.u64 	%rd8068, %rd9859, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6207,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6208}, %rd9859;
	}
	shf.r.wrap.b32 	%r6209, %r6208, %r6207, 1;
	shf.r.wrap.b32 	%r6210, %r6207, %r6208, 1;
	mov.b64 	%rd8069, {%r6210, %r6209};
	xor.b64  	%rd8070, %rd8069, %rd8068;
	shf.r.wrap.b32 	%r6211, %r6208, %r6207, 8;
	shf.r.wrap.b32 	%r6212, %r6207, %r6208, 8;
	mov.b64 	%rd8071, {%r6212, %r6211};
	xor.b64  	%rd8072, %rd8070, %rd8071;
	add.s64 	%rd8073, %rd9840, %rd9858;
	add.s64 	%rd8074, %rd8073, %rd8067;
	add.s64 	%rd9858, %rd8074, %rd8072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd9857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd9857;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 19;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 19;
	mov.b64 	%rd8075, {%r6216, %r6215};
	shf.l.wrap.b32 	%r6217, %r6213, %r6214, 3;
	shf.l.wrap.b32 	%r6218, %r6214, %r6213, 3;
	mov.b64 	%rd8076, {%r6218, %r6217};
	shr.u64 	%rd8077, %rd9857, 6;
	xor.b64  	%rd8078, %rd8075, %rd8077;
	xor.b64  	%rd8079, %rd8078, %rd8076;
	shr.u64 	%rd8080, %rd9860, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6219,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6220}, %rd9860;
	}
	shf.r.wrap.b32 	%r6221, %r6220, %r6219, 1;
	shf.r.wrap.b32 	%r6222, %r6219, %r6220, 1;
	mov.b64 	%rd8081, {%r6222, %r6221};
	xor.b64  	%rd8082, %rd8081, %rd8080;
	shf.r.wrap.b32 	%r6223, %r6220, %r6219, 8;
	shf.r.wrap.b32 	%r6224, %r6219, %r6220, 8;
	mov.b64 	%rd8083, {%r6224, %r6223};
	xor.b64  	%rd8084, %rd8082, %rd8083;
	add.s64 	%rd8085, %rd9839, %rd9859;
	add.s64 	%rd8086, %rd8085, %rd8079;
	add.s64 	%rd9859, %rd8086, %rd8084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6225,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6226}, %rd9858;
	}
	shf.r.wrap.b32 	%r6227, %r6226, %r6225, 19;
	shf.r.wrap.b32 	%r6228, %r6225, %r6226, 19;
	mov.b64 	%rd8087, {%r6228, %r6227};
	shf.l.wrap.b32 	%r6229, %r6225, %r6226, 3;
	shf.l.wrap.b32 	%r6230, %r6226, %r6225, 3;
	mov.b64 	%rd8088, {%r6230, %r6229};
	shr.u64 	%rd8089, %rd9858, 6;
	xor.b64  	%rd8090, %rd8087, %rd8089;
	xor.b64  	%rd8091, %rd8090, %rd8088;
	shr.u64 	%rd8092, %rd9861, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6231,%dummy}, %rd9861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6232}, %rd9861;
	}
	shf.r.wrap.b32 	%r6233, %r6232, %r6231, 1;
	shf.r.wrap.b32 	%r6234, %r6231, %r6232, 1;
	mov.b64 	%rd8093, {%r6234, %r6233};
	xor.b64  	%rd8094, %rd8093, %rd8092;
	shf.r.wrap.b32 	%r6235, %r6232, %r6231, 8;
	shf.r.wrap.b32 	%r6236, %r6231, %r6232, 8;
	mov.b64 	%rd8095, {%r6236, %r6235};
	xor.b64  	%rd8096, %rd8094, %rd8095;
	add.s64 	%rd8097, %rd9838, %rd9860;
	add.s64 	%rd8098, %rd8097, %rd8091;
	add.s64 	%rd9860, %rd8098, %rd8096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6237,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6238}, %rd9859;
	}
	shf.r.wrap.b32 	%r6239, %r6238, %r6237, 19;
	shf.r.wrap.b32 	%r6240, %r6237, %r6238, 19;
	mov.b64 	%rd8099, {%r6240, %r6239};
	shf.l.wrap.b32 	%r6241, %r6237, %r6238, 3;
	shf.l.wrap.b32 	%r6242, %r6238, %r6237, 3;
	mov.b64 	%rd8100, {%r6242, %r6241};
	shr.u64 	%rd8101, %rd9859, 6;
	xor.b64  	%rd8102, %rd8099, %rd8101;
	xor.b64  	%rd8103, %rd8102, %rd8100;
	shr.u64 	%rd8104, %rd9845, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6243,%dummy}, %rd9845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6244}, %rd9845;
	}
	shf.r.wrap.b32 	%r6245, %r6244, %r6243, 1;
	shf.r.wrap.b32 	%r6246, %r6243, %r6244, 1;
	mov.b64 	%rd8105, {%r6246, %r6245};
	xor.b64  	%rd8106, %rd8105, %rd8104;
	shf.r.wrap.b32 	%r6247, %r6244, %r6243, 8;
	shf.r.wrap.b32 	%r6248, %r6243, %r6244, 8;
	mov.b64 	%rd8107, {%r6248, %r6247};
	xor.b64  	%rd8108, %rd8106, %rd8107;
	add.s64 	%rd8109, %rd9854, %rd9861;
	add.s64 	%rd8110, %rd8109, %rd8103;
	add.s64 	%rd9861, %rd8110, %rd8108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6249,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6250}, %rd9860;
	}
	shf.r.wrap.b32 	%r6251, %r6250, %r6249, 19;
	shf.r.wrap.b32 	%r6252, %r6249, %r6250, 19;
	mov.b64 	%rd8111, {%r6252, %r6251};
	shf.l.wrap.b32 	%r6253, %r6249, %r6250, 3;
	shf.l.wrap.b32 	%r6254, %r6250, %r6249, 3;
	mov.b64 	%rd8112, {%r6254, %r6253};
	shr.u64 	%rd8113, %rd9860, 6;
	xor.b64  	%rd8114, %rd8111, %rd8113;
	xor.b64  	%rd8115, %rd8114, %rd8112;
	shr.u64 	%rd8116, %rd9844, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6255,%dummy}, %rd9844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6256}, %rd9844;
	}
	shf.r.wrap.b32 	%r6257, %r6256, %r6255, 1;
	shf.r.wrap.b32 	%r6258, %r6255, %r6256, 1;
	mov.b64 	%rd8117, {%r6258, %r6257};
	xor.b64  	%rd8118, %rd8117, %rd8116;
	shf.r.wrap.b32 	%r6259, %r6256, %r6255, 8;
	shf.r.wrap.b32 	%r6260, %r6255, %r6256, 8;
	mov.b64 	%rd8119, {%r6260, %r6259};
	xor.b64  	%rd8120, %rd8118, %rd8119;
	add.s64 	%rd8121, %rd9855, %rd9845;
	add.s64 	%rd8122, %rd8121, %rd8115;
	add.s64 	%rd9845, %rd8122, %rd8120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6261,%dummy}, %rd9861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6262}, %rd9861;
	}
	shf.r.wrap.b32 	%r6263, %r6262, %r6261, 19;
	shf.r.wrap.b32 	%r6264, %r6261, %r6262, 19;
	mov.b64 	%rd8123, {%r6264, %r6263};
	shf.l.wrap.b32 	%r6265, %r6261, %r6262, 3;
	shf.l.wrap.b32 	%r6266, %r6262, %r6261, 3;
	mov.b64 	%rd8124, {%r6266, %r6265};
	shr.u64 	%rd8125, %rd9861, 6;
	xor.b64  	%rd8126, %rd8123, %rd8125;
	xor.b64  	%rd8127, %rd8126, %rd8124;
	shr.u64 	%rd8128, %rd9843, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6267,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6268}, %rd9843;
	}
	shf.r.wrap.b32 	%r6269, %r6268, %r6267, 1;
	shf.r.wrap.b32 	%r6270, %r6267, %r6268, 1;
	mov.b64 	%rd8129, {%r6270, %r6269};
	xor.b64  	%rd8130, %rd8129, %rd8128;
	shf.r.wrap.b32 	%r6271, %r6268, %r6267, 8;
	shf.r.wrap.b32 	%r6272, %r6267, %r6268, 8;
	mov.b64 	%rd8131, {%r6272, %r6271};
	xor.b64  	%rd8132, %rd8130, %rd8131;
	add.s64 	%rd8133, %rd9856, %rd9844;
	add.s64 	%rd8134, %rd8133, %rd8127;
	add.s64 	%rd9844, %rd8134, %rd8132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6273,%dummy}, %rd9845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6274}, %rd9845;
	}
	shf.r.wrap.b32 	%r6275, %r6274, %r6273, 19;
	shf.r.wrap.b32 	%r6276, %r6273, %r6274, 19;
	mov.b64 	%rd8135, {%r6276, %r6275};
	shf.l.wrap.b32 	%r6277, %r6273, %r6274, 3;
	shf.l.wrap.b32 	%r6278, %r6274, %r6273, 3;
	mov.b64 	%rd8136, {%r6278, %r6277};
	shr.u64 	%rd8137, %rd9845, 6;
	xor.b64  	%rd8138, %rd8135, %rd8137;
	xor.b64  	%rd8139, %rd8138, %rd8136;
	shr.u64 	%rd8140, %rd9842, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6279,%dummy}, %rd9842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6280}, %rd9842;
	}
	shf.r.wrap.b32 	%r6281, %r6280, %r6279, 1;
	shf.r.wrap.b32 	%r6282, %r6279, %r6280, 1;
	mov.b64 	%rd8141, {%r6282, %r6281};
	xor.b64  	%rd8142, %rd8141, %rd8140;
	shf.r.wrap.b32 	%r6283, %r6280, %r6279, 8;
	shf.r.wrap.b32 	%r6284, %r6279, %r6280, 8;
	mov.b64 	%rd8143, {%r6284, %r6283};
	xor.b64  	%rd8144, %rd8142, %rd8143;
	add.s64 	%rd8145, %rd9857, %rd9843;
	add.s64 	%rd8146, %rd8145, %rd8139;
	add.s64 	%rd9843, %rd8146, %rd8144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6285,%dummy}, %rd9844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6286}, %rd9844;
	}
	shf.r.wrap.b32 	%r6287, %r6286, %r6285, 19;
	shf.r.wrap.b32 	%r6288, %r6285, %r6286, 19;
	mov.b64 	%rd8147, {%r6288, %r6287};
	shf.l.wrap.b32 	%r6289, %r6285, %r6286, 3;
	shf.l.wrap.b32 	%r6290, %r6286, %r6285, 3;
	mov.b64 	%rd8148, {%r6290, %r6289};
	shr.u64 	%rd8149, %rd9844, 6;
	xor.b64  	%rd8150, %rd8147, %rd8149;
	xor.b64  	%rd8151, %rd8150, %rd8148;
	shr.u64 	%rd8152, %rd9841, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6291,%dummy}, %rd9841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6292}, %rd9841;
	}
	shf.r.wrap.b32 	%r6293, %r6292, %r6291, 1;
	shf.r.wrap.b32 	%r6294, %r6291, %r6292, 1;
	mov.b64 	%rd8153, {%r6294, %r6293};
	xor.b64  	%rd8154, %rd8153, %rd8152;
	shf.r.wrap.b32 	%r6295, %r6292, %r6291, 8;
	shf.r.wrap.b32 	%r6296, %r6291, %r6292, 8;
	mov.b64 	%rd8155, {%r6296, %r6295};
	xor.b64  	%rd8156, %rd8154, %rd8155;
	add.s64 	%rd8157, %rd9858, %rd9842;
	add.s64 	%rd8158, %rd8157, %rd8151;
	add.s64 	%rd9842, %rd8158, %rd8156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6297,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6298}, %rd9843;
	}
	shf.r.wrap.b32 	%r6299, %r6298, %r6297, 19;
	shf.r.wrap.b32 	%r6300, %r6297, %r6298, 19;
	mov.b64 	%rd8159, {%r6300, %r6299};
	shf.l.wrap.b32 	%r6301, %r6297, %r6298, 3;
	shf.l.wrap.b32 	%r6302, %r6298, %r6297, 3;
	mov.b64 	%rd8160, {%r6302, %r6301};
	shr.u64 	%rd8161, %rd9843, 6;
	xor.b64  	%rd8162, %rd8159, %rd8161;
	xor.b64  	%rd8163, %rd8162, %rd8160;
	shr.u64 	%rd8164, %rd9840, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6303,%dummy}, %rd9840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6304}, %rd9840;
	}
	shf.r.wrap.b32 	%r6305, %r6304, %r6303, 1;
	shf.r.wrap.b32 	%r6306, %r6303, %r6304, 1;
	mov.b64 	%rd8165, {%r6306, %r6305};
	xor.b64  	%rd8166, %rd8165, %rd8164;
	shf.r.wrap.b32 	%r6307, %r6304, %r6303, 8;
	shf.r.wrap.b32 	%r6308, %r6303, %r6304, 8;
	mov.b64 	%rd8167, {%r6308, %r6307};
	xor.b64  	%rd8168, %rd8166, %rd8167;
	add.s64 	%rd8169, %rd9859, %rd9841;
	add.s64 	%rd8170, %rd8169, %rd8163;
	add.s64 	%rd9841, %rd8170, %rd8168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6309,%dummy}, %rd9842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6310}, %rd9842;
	}
	shf.r.wrap.b32 	%r6311, %r6310, %r6309, 19;
	shf.r.wrap.b32 	%r6312, %r6309, %r6310, 19;
	mov.b64 	%rd8171, {%r6312, %r6311};
	shf.l.wrap.b32 	%r6313, %r6309, %r6310, 3;
	shf.l.wrap.b32 	%r6314, %r6310, %r6309, 3;
	mov.b64 	%rd8172, {%r6314, %r6313};
	shr.u64 	%rd8173, %rd9842, 6;
	xor.b64  	%rd8174, %rd8171, %rd8173;
	xor.b64  	%rd8175, %rd8174, %rd8172;
	shr.u64 	%rd8176, %rd9839, 7;
	shf.r.wrap.b32 	%r6315, %r6154, %r6153, 1;
	shf.r.wrap.b32 	%r6316, %r6153, %r6154, 1;
	mov.b64 	%rd8177, {%r6316, %r6315};
	xor.b64  	%rd8178, %rd8177, %rd8176;
	shf.r.wrap.b32 	%r6317, %r6154, %r6153, 8;
	shf.r.wrap.b32 	%r6318, %r6153, %r6154, 8;
	mov.b64 	%rd8179, {%r6318, %r6317};
	xor.b64  	%rd8180, %rd8178, %rd8179;
	add.s64 	%rd8181, %rd9860, %rd9840;
	add.s64 	%rd8182, %rd8181, %rd8175;
	add.s64 	%rd9840, %rd8182, %rd8180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6319,%dummy}, %rd9841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6320}, %rd9841;
	}
	shf.r.wrap.b32 	%r6321, %r6320, %r6319, 19;
	shf.r.wrap.b32 	%r6322, %r6319, %r6320, 19;
	mov.b64 	%rd8183, {%r6322, %r6321};
	shf.l.wrap.b32 	%r6323, %r6319, %r6320, 3;
	shf.l.wrap.b32 	%r6324, %r6320, %r6319, 3;
	mov.b64 	%rd8184, {%r6324, %r6323};
	shr.u64 	%rd8185, %rd9841, 6;
	xor.b64  	%rd8186, %rd8183, %rd8185;
	xor.b64  	%rd8187, %rd8186, %rd8184;
	shr.u64 	%rd8188, %rd9838, 7;
	shf.r.wrap.b32 	%r6325, %r6166, %r6165, 1;
	shf.r.wrap.b32 	%r6326, %r6165, %r6166, 1;
	mov.b64 	%rd8189, {%r6326, %r6325};
	xor.b64  	%rd8190, %rd8189, %rd8188;
	shf.r.wrap.b32 	%r6327, %r6166, %r6165, 8;
	shf.r.wrap.b32 	%r6328, %r6165, %r6166, 8;
	mov.b64 	%rd8191, {%r6328, %r6327};
	xor.b64  	%rd8192, %rd8190, %rd8191;
	add.s64 	%rd8193, %rd9861, %rd9839;
	add.s64 	%rd8194, %rd8193, %rd8187;
	add.s64 	%rd9839, %rd8194, %rd8192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6329,%dummy}, %rd9840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6330}, %rd9840;
	}
	shf.r.wrap.b32 	%r6331, %r6330, %r6329, 19;
	shf.r.wrap.b32 	%r6332, %r6329, %r6330, 19;
	mov.b64 	%rd8195, {%r6332, %r6331};
	shf.l.wrap.b32 	%r6333, %r6329, %r6330, 3;
	shf.l.wrap.b32 	%r6334, %r6330, %r6329, 3;
	mov.b64 	%rd8196, {%r6334, %r6333};
	shr.u64 	%rd8197, %rd9840, 6;
	xor.b64  	%rd8198, %rd8195, %rd8197;
	xor.b64  	%rd8199, %rd8198, %rd8196;
	shf.r.wrap.b32 	%r6335, %r6178, %r6177, 1;
	shf.r.wrap.b32 	%r6336, %r6177, %r6178, 1;
	mov.b64 	%rd8200, {%r6336, %r6335};
	shf.r.wrap.b32 	%r6337, %r6178, %r6177, 8;
	shf.r.wrap.b32 	%r6338, %r6177, %r6178, 8;
	mov.b64 	%rd8201, {%r6338, %r6337};
	shr.u64 	%rd8202, %rd9854, 7;
	xor.b64  	%rd8203, %rd8200, %rd8202;
	xor.b64  	%rd8204, %rd8203, %rd8201;
	add.s64 	%rd8205, %rd9845, %rd9838;
	add.s64 	%rd8206, %rd8205, %rd8199;
	add.s64 	%rd9838, %rd8206, %rd8204;
	add.s64 	%rd728, %rd9837, 128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6339,%dummy}, %rd9850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6340}, %rd9850;
	}
	shf.r.wrap.b32 	%r6341, %r6340, %r6339, 18;
	shf.r.wrap.b32 	%r6342, %r6339, %r6340, 18;
	mov.b64 	%rd8207, {%r6342, %r6341};
	shf.r.wrap.b32 	%r6343, %r6340, %r6339, 14;
	shf.r.wrap.b32 	%r6344, %r6339, %r6340, 14;
	mov.b64 	%rd8208, {%r6344, %r6343};
	xor.b64  	%rd8209, %rd8207, %rd8208;
	shf.l.wrap.b32 	%r6345, %r6339, %r6340, 23;
	shf.l.wrap.b32 	%r6346, %r6340, %r6339, 23;
	mov.b64 	%rd8210, {%r6346, %r6345};
	xor.b64  	%rd8211, %rd8209, %rd8210;
	xor.b64  	%rd8212, %rd9851, %rd9852;
	and.b64  	%rd8213, %rd9850, %rd8212;
	xor.b64  	%rd8214, %rd8213, %rd9852;
	add.s64 	%rd8215, %rd8214, %rd9853;
	add.s64 	%rd8216, %rd8215, %rd9854;
	ld.const.u64 	%rd8217, [%rd9837+128];
	add.s64 	%rd8218, %rd8216, %rd8217;
	add.s64 	%rd8219, %rd8218, %rd8211;
	add.s64 	%rd8220, %rd8219, %rd9849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd9846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6348,%dummy}, %rd9846;
	}
	shf.l.wrap.b32 	%r6349, %r6348, %r6347, 30;
	shf.l.wrap.b32 	%r6350, %r6347, %r6348, 30;
	mov.b64 	%rd8221, {%r6350, %r6349};
	shf.r.wrap.b32 	%r6351, %r6347, %r6348, 28;
	shf.r.wrap.b32 	%r6352, %r6348, %r6347, 28;
	mov.b64 	%rd8222, {%r6352, %r6351};
	xor.b64  	%rd8223, %rd8221, %rd8222;
	shf.l.wrap.b32 	%r6353, %r6348, %r6347, 25;
	shf.l.wrap.b32 	%r6354, %r6347, %r6348, 25;
	mov.b64 	%rd8224, {%r6354, %r6353};
	xor.b64  	%rd8225, %rd8223, %rd8224;
	xor.b64  	%rd8226, %rd9846, %rd9847;
	and.b64  	%rd8227, %rd8226, %rd9848;
	and.b64  	%rd8228, %rd9846, %rd9847;
	or.b64  	%rd8229, %rd8227, %rd8228;
	add.s64 	%rd8230, %rd8219, %rd8229;
	add.s64 	%rd8231, %rd8230, %rd8225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6355,%dummy}, %rd8220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6356}, %rd8220;
	}
	shf.r.wrap.b32 	%r6357, %r6356, %r6355, 14;
	shf.r.wrap.b32 	%r6358, %r6355, %r6356, 14;
	mov.b64 	%rd8232, {%r6358, %r6357};
	shf.r.wrap.b32 	%r6359, %r6356, %r6355, 18;
	shf.r.wrap.b32 	%r6360, %r6355, %r6356, 18;
	mov.b64 	%rd8233, {%r6360, %r6359};
	xor.b64  	%rd8234, %rd8233, %rd8232;
	shf.l.wrap.b32 	%r6361, %r6355, %r6356, 23;
	shf.l.wrap.b32 	%r6362, %r6356, %r6355, 23;
	mov.b64 	%rd8235, {%r6362, %r6361};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	xor.b64  	%rd8237, %rd9850, %rd9851;
	and.b64  	%rd8238, %rd8220, %rd8237;
	xor.b64  	%rd8239, %rd8238, %rd9851;
	add.s64 	%rd8240, %rd9855, %rd9852;
	ld.const.u64 	%rd8241, [%rd9837+136];
	add.s64 	%rd8242, %rd8240, %rd8241;
	add.s64 	%rd8243, %rd8242, %rd8239;
	add.s64 	%rd8244, %rd8243, %rd8236;
	add.s64 	%rd8245, %rd8244, %rd9848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd8231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd8231;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 28;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 28;
	mov.b64 	%rd8246, {%r6366, %r6365};
	shf.l.wrap.b32 	%r6367, %r6363, %r6364, 30;
	shf.l.wrap.b32 	%r6368, %r6364, %r6363, 30;
	mov.b64 	%rd8247, {%r6368, %r6367};
	xor.b64  	%rd8248, %rd8247, %rd8246;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 25;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 25;
	mov.b64 	%rd8249, {%r6370, %r6369};
	xor.b64  	%rd8250, %rd8248, %rd8249;
	and.b64  	%rd8251, %rd8231, %rd9846;
	xor.b64  	%rd8252, %rd8231, %rd9846;
	and.b64  	%rd8253, %rd8252, %rd9847;
	or.b64  	%rd8254, %rd8253, %rd8251;
	add.s64 	%rd8255, %rd8244, %rd8254;
	add.s64 	%rd8256, %rd8255, %rd8250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd8245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd8245;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 14;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 14;
	mov.b64 	%rd8257, {%r6374, %r6373};
	shf.r.wrap.b32 	%r6375, %r6372, %r6371, 18;
	shf.r.wrap.b32 	%r6376, %r6371, %r6372, 18;
	mov.b64 	%rd8258, {%r6376, %r6375};
	xor.b64  	%rd8259, %rd8258, %rd8257;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 23;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 23;
	mov.b64 	%rd8260, {%r6378, %r6377};
	xor.b64  	%rd8261, %rd8259, %rd8260;
	xor.b64  	%rd8262, %rd8220, %rd9850;
	and.b64  	%rd8263, %rd8245, %rd8262;
	xor.b64  	%rd8264, %rd8263, %rd9850;
	add.s64 	%rd8265, %rd9856, %rd9851;
	ld.const.u64 	%rd8266, [%rd9837+144];
	add.s64 	%rd8267, %rd8265, %rd8266;
	add.s64 	%rd8268, %rd8267, %rd8264;
	add.s64 	%rd8269, %rd8268, %rd8261;
	add.s64 	%rd8270, %rd8269, %rd9847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6379,%dummy}, %rd8256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6380}, %rd8256;
	}
	shf.r.wrap.b32 	%r6381, %r6380, %r6379, 28;
	shf.r.wrap.b32 	%r6382, %r6379, %r6380, 28;
	mov.b64 	%rd8271, {%r6382, %r6381};
	shf.l.wrap.b32 	%r6383, %r6379, %r6380, 30;
	shf.l.wrap.b32 	%r6384, %r6380, %r6379, 30;
	mov.b64 	%rd8272, {%r6384, %r6383};
	xor.b64  	%rd8273, %rd8272, %rd8271;
	shf.l.wrap.b32 	%r6385, %r6379, %r6380, 25;
	shf.l.wrap.b32 	%r6386, %r6380, %r6379, 25;
	mov.b64 	%rd8274, {%r6386, %r6385};
	xor.b64  	%rd8275, %rd8273, %rd8274;
	and.b64  	%rd8276, %rd8256, %rd8231;
	xor.b64  	%rd8277, %rd8256, %rd8231;
	and.b64  	%rd8278, %rd8277, %rd9846;
	or.b64  	%rd8279, %rd8278, %rd8276;
	add.s64 	%rd8280, %rd8269, %rd8279;
	add.s64 	%rd8281, %rd8280, %rd8275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6387,%dummy}, %rd8270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6388}, %rd8270;
	}
	shf.r.wrap.b32 	%r6389, %r6388, %r6387, 14;
	shf.r.wrap.b32 	%r6390, %r6387, %r6388, 14;
	mov.b64 	%rd8282, {%r6390, %r6389};
	shf.r.wrap.b32 	%r6391, %r6388, %r6387, 18;
	shf.r.wrap.b32 	%r6392, %r6387, %r6388, 18;
	mov.b64 	%rd8283, {%r6392, %r6391};
	xor.b64  	%rd8284, %rd8283, %rd8282;
	shf.l.wrap.b32 	%r6393, %r6387, %r6388, 23;
	shf.l.wrap.b32 	%r6394, %r6388, %r6387, 23;
	mov.b64 	%rd8285, {%r6394, %r6393};
	xor.b64  	%rd8286, %rd8284, %rd8285;
	xor.b64  	%rd8287, %rd8245, %rd8220;
	and.b64  	%rd8288, %rd8270, %rd8287;
	xor.b64  	%rd8289, %rd8288, %rd8220;
	add.s64 	%rd8290, %rd9857, %rd9850;
	ld.const.u64 	%rd8291, [%rd9837+152];
	add.s64 	%rd8292, %rd8290, %rd8291;
	add.s64 	%rd8293, %rd8292, %rd8289;
	add.s64 	%rd8294, %rd8293, %rd8286;
	add.s64 	%rd8295, %rd8294, %rd9846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6395,%dummy}, %rd8281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6396}, %rd8281;
	}
	shf.r.wrap.b32 	%r6397, %r6396, %r6395, 28;
	shf.r.wrap.b32 	%r6398, %r6395, %r6396, 28;
	mov.b64 	%rd8296, {%r6398, %r6397};
	shf.l.wrap.b32 	%r6399, %r6395, %r6396, 30;
	shf.l.wrap.b32 	%r6400, %r6396, %r6395, 30;
	mov.b64 	%rd8297, {%r6400, %r6399};
	xor.b64  	%rd8298, %rd8297, %rd8296;
	shf.l.wrap.b32 	%r6401, %r6395, %r6396, 25;
	shf.l.wrap.b32 	%r6402, %r6396, %r6395, 25;
	mov.b64 	%rd8299, {%r6402, %r6401};
	xor.b64  	%rd8300, %rd8298, %rd8299;
	and.b64  	%rd8301, %rd8281, %rd8256;
	xor.b64  	%rd8302, %rd8281, %rd8256;
	and.b64  	%rd8303, %rd8302, %rd8231;
	or.b64  	%rd8304, %rd8303, %rd8301;
	add.s64 	%rd8305, %rd8294, %rd8304;
	add.s64 	%rd8306, %rd8305, %rd8300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6403,%dummy}, %rd8295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6404}, %rd8295;
	}
	shf.r.wrap.b32 	%r6405, %r6404, %r6403, 14;
	shf.r.wrap.b32 	%r6406, %r6403, %r6404, 14;
	mov.b64 	%rd8307, {%r6406, %r6405};
	shf.r.wrap.b32 	%r6407, %r6404, %r6403, 18;
	shf.r.wrap.b32 	%r6408, %r6403, %r6404, 18;
	mov.b64 	%rd8308, {%r6408, %r6407};
	xor.b64  	%rd8309, %rd8308, %rd8307;
	shf.l.wrap.b32 	%r6409, %r6403, %r6404, 23;
	shf.l.wrap.b32 	%r6410, %r6404, %r6403, 23;
	mov.b64 	%rd8310, {%r6410, %r6409};
	xor.b64  	%rd8311, %rd8309, %rd8310;
	xor.b64  	%rd8312, %rd8270, %rd8245;
	and.b64  	%rd8313, %rd8295, %rd8312;
	xor.b64  	%rd8314, %rd8313, %rd8245;
	add.s64 	%rd8315, %rd8220, %rd9858;
	ld.const.u64 	%rd8316, [%rd9837+160];
	add.s64 	%rd8317, %rd8315, %rd8316;
	add.s64 	%rd8318, %rd8317, %rd8314;
	add.s64 	%rd8319, %rd8318, %rd8311;
	add.s64 	%rd8320, %rd8319, %rd8231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6411,%dummy}, %rd8306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6412}, %rd8306;
	}
	shf.r.wrap.b32 	%r6413, %r6412, %r6411, 28;
	shf.r.wrap.b32 	%r6414, %r6411, %r6412, 28;
	mov.b64 	%rd8321, {%r6414, %r6413};
	shf.l.wrap.b32 	%r6415, %r6411, %r6412, 30;
	shf.l.wrap.b32 	%r6416, %r6412, %r6411, 30;
	mov.b64 	%rd8322, {%r6416, %r6415};
	xor.b64  	%rd8323, %rd8322, %rd8321;
	shf.l.wrap.b32 	%r6417, %r6411, %r6412, 25;
	shf.l.wrap.b32 	%r6418, %r6412, %r6411, 25;
	mov.b64 	%rd8324, {%r6418, %r6417};
	xor.b64  	%rd8325, %rd8323, %rd8324;
	and.b64  	%rd8326, %rd8306, %rd8281;
	xor.b64  	%rd8327, %rd8306, %rd8281;
	and.b64  	%rd8328, %rd8327, %rd8256;
	or.b64  	%rd8329, %rd8328, %rd8326;
	add.s64 	%rd8330, %rd8319, %rd8329;
	add.s64 	%rd8331, %rd8330, %rd8325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd8320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd8320;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 14;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 14;
	mov.b64 	%rd8332, {%r6422, %r6421};
	shf.r.wrap.b32 	%r6423, %r6420, %r6419, 18;
	shf.r.wrap.b32 	%r6424, %r6419, %r6420, 18;
	mov.b64 	%rd8333, {%r6424, %r6423};
	xor.b64  	%rd8334, %rd8333, %rd8332;
	shf.l.wrap.b32 	%r6425, %r6419, %r6420, 23;
	shf.l.wrap.b32 	%r6426, %r6420, %r6419, 23;
	mov.b64 	%rd8335, {%r6426, %r6425};
	xor.b64  	%rd8336, %rd8334, %rd8335;
	xor.b64  	%rd8337, %rd8295, %rd8270;
	and.b64  	%rd8338, %rd8320, %rd8337;
	xor.b64  	%rd8339, %rd8338, %rd8270;
	add.s64 	%rd8340, %rd8245, %rd9859;
	ld.const.u64 	%rd8341, [%rd9837+168];
	add.s64 	%rd8342, %rd8340, %rd8341;
	add.s64 	%rd8343, %rd8342, %rd8339;
	add.s64 	%rd8344, %rd8343, %rd8336;
	add.s64 	%rd8345, %rd8344, %rd8256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6427,%dummy}, %rd8331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6428}, %rd8331;
	}
	shf.r.wrap.b32 	%r6429, %r6428, %r6427, 28;
	shf.r.wrap.b32 	%r6430, %r6427, %r6428, 28;
	mov.b64 	%rd8346, {%r6430, %r6429};
	shf.l.wrap.b32 	%r6431, %r6427, %r6428, 30;
	shf.l.wrap.b32 	%r6432, %r6428, %r6427, 30;
	mov.b64 	%rd8347, {%r6432, %r6431};
	xor.b64  	%rd8348, %rd8347, %rd8346;
	shf.l.wrap.b32 	%r6433, %r6427, %r6428, 25;
	shf.l.wrap.b32 	%r6434, %r6428, %r6427, 25;
	mov.b64 	%rd8349, {%r6434, %r6433};
	xor.b64  	%rd8350, %rd8348, %rd8349;
	and.b64  	%rd8351, %rd8331, %rd8306;
	xor.b64  	%rd8352, %rd8331, %rd8306;
	and.b64  	%rd8353, %rd8352, %rd8281;
	or.b64  	%rd8354, %rd8353, %rd8351;
	add.s64 	%rd8355, %rd8344, %rd8354;
	add.s64 	%rd8356, %rd8355, %rd8350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6435,%dummy}, %rd8345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6436}, %rd8345;
	}
	shf.r.wrap.b32 	%r6437, %r6436, %r6435, 14;
	shf.r.wrap.b32 	%r6438, %r6435, %r6436, 14;
	mov.b64 	%rd8357, {%r6438, %r6437};
	shf.r.wrap.b32 	%r6439, %r6436, %r6435, 18;
	shf.r.wrap.b32 	%r6440, %r6435, %r6436, 18;
	mov.b64 	%rd8358, {%r6440, %r6439};
	xor.b64  	%rd8359, %rd8358, %rd8357;
	shf.l.wrap.b32 	%r6441, %r6435, %r6436, 23;
	shf.l.wrap.b32 	%r6442, %r6436, %r6435, 23;
	mov.b64 	%rd8360, {%r6442, %r6441};
	xor.b64  	%rd8361, %rd8359, %rd8360;
	xor.b64  	%rd8362, %rd8320, %rd8295;
	and.b64  	%rd8363, %rd8345, %rd8362;
	xor.b64  	%rd8364, %rd8363, %rd8295;
	add.s64 	%rd8365, %rd8270, %rd9860;
	ld.const.u64 	%rd8366, [%rd9837+176];
	add.s64 	%rd8367, %rd8365, %rd8366;
	add.s64 	%rd8368, %rd8367, %rd8364;
	add.s64 	%rd8369, %rd8368, %rd8361;
	add.s64 	%rd8370, %rd8369, %rd8281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6443,%dummy}, %rd8356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6444}, %rd8356;
	}
	shf.r.wrap.b32 	%r6445, %r6444, %r6443, 28;
	shf.r.wrap.b32 	%r6446, %r6443, %r6444, 28;
	mov.b64 	%rd8371, {%r6446, %r6445};
	shf.l.wrap.b32 	%r6447, %r6443, %r6444, 30;
	shf.l.wrap.b32 	%r6448, %r6444, %r6443, 30;
	mov.b64 	%rd8372, {%r6448, %r6447};
	xor.b64  	%rd8373, %rd8372, %rd8371;
	shf.l.wrap.b32 	%r6449, %r6443, %r6444, 25;
	shf.l.wrap.b32 	%r6450, %r6444, %r6443, 25;
	mov.b64 	%rd8374, {%r6450, %r6449};
	xor.b64  	%rd8375, %rd8373, %rd8374;
	and.b64  	%rd8376, %rd8356, %rd8331;
	xor.b64  	%rd8377, %rd8356, %rd8331;
	and.b64  	%rd8378, %rd8377, %rd8306;
	or.b64  	%rd8379, %rd8378, %rd8376;
	add.s64 	%rd8380, %rd8369, %rd8379;
	add.s64 	%rd8381, %rd8380, %rd8375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6451,%dummy}, %rd8370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6452}, %rd8370;
	}
	shf.r.wrap.b32 	%r6453, %r6452, %r6451, 14;
	shf.r.wrap.b32 	%r6454, %r6451, %r6452, 14;
	mov.b64 	%rd8382, {%r6454, %r6453};
	shf.r.wrap.b32 	%r6455, %r6452, %r6451, 18;
	shf.r.wrap.b32 	%r6456, %r6451, %r6452, 18;
	mov.b64 	%rd8383, {%r6456, %r6455};
	xor.b64  	%rd8384, %rd8383, %rd8382;
	shf.l.wrap.b32 	%r6457, %r6451, %r6452, 23;
	shf.l.wrap.b32 	%r6458, %r6452, %r6451, 23;
	mov.b64 	%rd8385, {%r6458, %r6457};
	xor.b64  	%rd8386, %rd8384, %rd8385;
	xor.b64  	%rd8387, %rd8345, %rd8320;
	and.b64  	%rd8388, %rd8370, %rd8387;
	xor.b64  	%rd8389, %rd8388, %rd8320;
	add.s64 	%rd8390, %rd8295, %rd9861;
	ld.const.u64 	%rd8391, [%rd9837+184];
	add.s64 	%rd8392, %rd8390, %rd8391;
	add.s64 	%rd8393, %rd8392, %rd8389;
	add.s64 	%rd8394, %rd8393, %rd8386;
	add.s64 	%rd8395, %rd8394, %rd8306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6459,%dummy}, %rd8381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6460}, %rd8381;
	}
	shf.r.wrap.b32 	%r6461, %r6460, %r6459, 28;
	shf.r.wrap.b32 	%r6462, %r6459, %r6460, 28;
	mov.b64 	%rd8396, {%r6462, %r6461};
	shf.l.wrap.b32 	%r6463, %r6459, %r6460, 30;
	shf.l.wrap.b32 	%r6464, %r6460, %r6459, 30;
	mov.b64 	%rd8397, {%r6464, %r6463};
	xor.b64  	%rd8398, %rd8397, %rd8396;
	shf.l.wrap.b32 	%r6465, %r6459, %r6460, 25;
	shf.l.wrap.b32 	%r6466, %r6460, %r6459, 25;
	mov.b64 	%rd8399, {%r6466, %r6465};
	xor.b64  	%rd8400, %rd8398, %rd8399;
	and.b64  	%rd8401, %rd8381, %rd8356;
	xor.b64  	%rd8402, %rd8381, %rd8356;
	and.b64  	%rd8403, %rd8402, %rd8331;
	or.b64  	%rd8404, %rd8403, %rd8401;
	add.s64 	%rd8405, %rd8394, %rd8404;
	add.s64 	%rd8406, %rd8405, %rd8400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd8395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd8395;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 14;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 14;
	mov.b64 	%rd8407, {%r6470, %r6469};
	shf.r.wrap.b32 	%r6471, %r6468, %r6467, 18;
	shf.r.wrap.b32 	%r6472, %r6467, %r6468, 18;
	mov.b64 	%rd8408, {%r6472, %r6471};
	xor.b64  	%rd8409, %rd8408, %rd8407;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 23;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 23;
	mov.b64 	%rd8410, {%r6474, %r6473};
	xor.b64  	%rd8411, %rd8409, %rd8410;
	xor.b64  	%rd8412, %rd8370, %rd8345;
	and.b64  	%rd8413, %rd8395, %rd8412;
	xor.b64  	%rd8414, %rd8413, %rd8345;
	add.s64 	%rd8415, %rd8320, %rd9845;
	ld.const.u64 	%rd8416, [%rd9837+192];
	add.s64 	%rd8417, %rd8415, %rd8416;
	add.s64 	%rd8418, %rd8417, %rd8414;
	add.s64 	%rd8419, %rd8418, %rd8411;
	add.s64 	%rd8420, %rd8419, %rd8331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd8406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd8406;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 28;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 28;
	mov.b64 	%rd8421, {%r6478, %r6477};
	shf.l.wrap.b32 	%r6479, %r6475, %r6476, 30;
	shf.l.wrap.b32 	%r6480, %r6476, %r6475, 30;
	mov.b64 	%rd8422, {%r6480, %r6479};
	xor.b64  	%rd8423, %rd8422, %rd8421;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 25;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 25;
	mov.b64 	%rd8424, {%r6482, %r6481};
	xor.b64  	%rd8425, %rd8423, %rd8424;
	and.b64  	%rd8426, %rd8406, %rd8381;
	xor.b64  	%rd8427, %rd8406, %rd8381;
	and.b64  	%rd8428, %rd8427, %rd8356;
	or.b64  	%rd8429, %rd8428, %rd8426;
	add.s64 	%rd8430, %rd8419, %rd8429;
	add.s64 	%rd8431, %rd8430, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd8420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd8420;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 14;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 14;
	mov.b64 	%rd8432, {%r6486, %r6485};
	shf.r.wrap.b32 	%r6487, %r6484, %r6483, 18;
	shf.r.wrap.b32 	%r6488, %r6483, %r6484, 18;
	mov.b64 	%rd8433, {%r6488, %r6487};
	xor.b64  	%rd8434, %rd8433, %rd8432;
	shf.l.wrap.b32 	%r6489, %r6483, %r6484, 23;
	shf.l.wrap.b32 	%r6490, %r6484, %r6483, 23;
	mov.b64 	%rd8435, {%r6490, %r6489};
	xor.b64  	%rd8436, %rd8434, %rd8435;
	xor.b64  	%rd8437, %rd8395, %rd8370;
	and.b64  	%rd8438, %rd8420, %rd8437;
	xor.b64  	%rd8439, %rd8438, %rd8370;
	add.s64 	%rd8440, %rd8345, %rd9844;
	ld.const.u64 	%rd8441, [%rd9837+200];
	add.s64 	%rd8442, %rd8440, %rd8441;
	add.s64 	%rd8443, %rd8442, %rd8439;
	add.s64 	%rd8444, %rd8443, %rd8436;
	add.s64 	%rd8445, %rd8444, %rd8356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd8431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd8431;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 28;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 28;
	mov.b64 	%rd8446, {%r6494, %r6493};
	shf.l.wrap.b32 	%r6495, %r6491, %r6492, 30;
	shf.l.wrap.b32 	%r6496, %r6492, %r6491, 30;
	mov.b64 	%rd8447, {%r6496, %r6495};
	xor.b64  	%rd8448, %rd8447, %rd8446;
	shf.l.wrap.b32 	%r6497, %r6491, %r6492, 25;
	shf.l.wrap.b32 	%r6498, %r6492, %r6491, 25;
	mov.b64 	%rd8449, {%r6498, %r6497};
	xor.b64  	%rd8450, %rd8448, %rd8449;
	and.b64  	%rd8451, %rd8431, %rd8406;
	xor.b64  	%rd8452, %rd8431, %rd8406;
	and.b64  	%rd8453, %rd8452, %rd8381;
	or.b64  	%rd8454, %rd8453, %rd8451;
	add.s64 	%rd8455, %rd8444, %rd8454;
	add.s64 	%rd8456, %rd8455, %rd8450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6499,%dummy}, %rd8445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6500}, %rd8445;
	}
	shf.r.wrap.b32 	%r6501, %r6500, %r6499, 14;
	shf.r.wrap.b32 	%r6502, %r6499, %r6500, 14;
	mov.b64 	%rd8457, {%r6502, %r6501};
	shf.r.wrap.b32 	%r6503, %r6500, %r6499, 18;
	shf.r.wrap.b32 	%r6504, %r6499, %r6500, 18;
	mov.b64 	%rd8458, {%r6504, %r6503};
	xor.b64  	%rd8459, %rd8458, %rd8457;
	shf.l.wrap.b32 	%r6505, %r6499, %r6500, 23;
	shf.l.wrap.b32 	%r6506, %r6500, %r6499, 23;
	mov.b64 	%rd8460, {%r6506, %r6505};
	xor.b64  	%rd8461, %rd8459, %rd8460;
	xor.b64  	%rd8462, %rd8420, %rd8395;
	and.b64  	%rd8463, %rd8445, %rd8462;
	xor.b64  	%rd8464, %rd8463, %rd8395;
	add.s64 	%rd8465, %rd8370, %rd9843;
	ld.const.u64 	%rd8466, [%rd9837+208];
	add.s64 	%rd8467, %rd8465, %rd8466;
	add.s64 	%rd8468, %rd8467, %rd8464;
	add.s64 	%rd8469, %rd8468, %rd8461;
	add.s64 	%rd8470, %rd8469, %rd8381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd8456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd8456;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 28;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 28;
	mov.b64 	%rd8471, {%r6510, %r6509};
	shf.l.wrap.b32 	%r6511, %r6507, %r6508, 30;
	shf.l.wrap.b32 	%r6512, %r6508, %r6507, 30;
	mov.b64 	%rd8472, {%r6512, %r6511};
	xor.b64  	%rd8473, %rd8472, %rd8471;
	shf.l.wrap.b32 	%r6513, %r6507, %r6508, 25;
	shf.l.wrap.b32 	%r6514, %r6508, %r6507, 25;
	mov.b64 	%rd8474, {%r6514, %r6513};
	xor.b64  	%rd8475, %rd8473, %rd8474;
	and.b64  	%rd8476, %rd8456, %rd8431;
	xor.b64  	%rd8477, %rd8456, %rd8431;
	and.b64  	%rd8478, %rd8477, %rd8406;
	or.b64  	%rd8479, %rd8478, %rd8476;
	add.s64 	%rd8480, %rd8469, %rd8479;
	add.s64 	%rd8481, %rd8480, %rd8475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6515,%dummy}, %rd8470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6516}, %rd8470;
	}
	shf.r.wrap.b32 	%r6517, %r6516, %r6515, 14;
	shf.r.wrap.b32 	%r6518, %r6515, %r6516, 14;
	mov.b64 	%rd8482, {%r6518, %r6517};
	shf.r.wrap.b32 	%r6519, %r6516, %r6515, 18;
	shf.r.wrap.b32 	%r6520, %r6515, %r6516, 18;
	mov.b64 	%rd8483, {%r6520, %r6519};
	xor.b64  	%rd8484, %rd8483, %rd8482;
	shf.l.wrap.b32 	%r6521, %r6515, %r6516, 23;
	shf.l.wrap.b32 	%r6522, %r6516, %r6515, 23;
	mov.b64 	%rd8485, {%r6522, %r6521};
	xor.b64  	%rd8486, %rd8484, %rd8485;
	xor.b64  	%rd8487, %rd8445, %rd8420;
	and.b64  	%rd8488, %rd8470, %rd8487;
	xor.b64  	%rd8489, %rd8488, %rd8420;
	add.s64 	%rd8490, %rd8395, %rd9842;
	ld.const.u64 	%rd8491, [%rd9837+216];
	add.s64 	%rd8492, %rd8490, %rd8491;
	add.s64 	%rd8493, %rd8492, %rd8489;
	add.s64 	%rd8494, %rd8493, %rd8486;
	add.s64 	%rd8495, %rd8494, %rd8406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6523,%dummy}, %rd8481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6524}, %rd8481;
	}
	shf.r.wrap.b32 	%r6525, %r6524, %r6523, 28;
	shf.r.wrap.b32 	%r6526, %r6523, %r6524, 28;
	mov.b64 	%rd8496, {%r6526, %r6525};
	shf.l.wrap.b32 	%r6527, %r6523, %r6524, 30;
	shf.l.wrap.b32 	%r6528, %r6524, %r6523, 30;
	mov.b64 	%rd8497, {%r6528, %r6527};
	xor.b64  	%rd8498, %rd8497, %rd8496;
	shf.l.wrap.b32 	%r6529, %r6523, %r6524, 25;
	shf.l.wrap.b32 	%r6530, %r6524, %r6523, 25;
	mov.b64 	%rd8499, {%r6530, %r6529};
	xor.b64  	%rd8500, %rd8498, %rd8499;
	and.b64  	%rd8501, %rd8481, %rd8456;
	xor.b64  	%rd8502, %rd8481, %rd8456;
	and.b64  	%rd8503, %rd8502, %rd8431;
	or.b64  	%rd8504, %rd8503, %rd8501;
	add.s64 	%rd8505, %rd8494, %rd8504;
	add.s64 	%rd8506, %rd8505, %rd8500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd8495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd8495;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 14;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 14;
	mov.b64 	%rd8507, {%r6534, %r6533};
	shf.r.wrap.b32 	%r6535, %r6532, %r6531, 18;
	shf.r.wrap.b32 	%r6536, %r6531, %r6532, 18;
	mov.b64 	%rd8508, {%r6536, %r6535};
	xor.b64  	%rd8509, %rd8508, %rd8507;
	shf.l.wrap.b32 	%r6537, %r6531, %r6532, 23;
	shf.l.wrap.b32 	%r6538, %r6532, %r6531, 23;
	mov.b64 	%rd8510, {%r6538, %r6537};
	xor.b64  	%rd8511, %rd8509, %rd8510;
	xor.b64  	%rd8512, %rd8470, %rd8445;
	and.b64  	%rd8513, %rd8495, %rd8512;
	xor.b64  	%rd8514, %rd8513, %rd8445;
	add.s64 	%rd8515, %rd8420, %rd9841;
	ld.const.u64 	%rd8516, [%rd9837+224];
	add.s64 	%rd8517, %rd8515, %rd8516;
	add.s64 	%rd8518, %rd8517, %rd8514;
	add.s64 	%rd8519, %rd8518, %rd8511;
	add.s64 	%rd9853, %rd8519, %rd8431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6539,%dummy}, %rd8506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6540}, %rd8506;
	}
	shf.r.wrap.b32 	%r6541, %r6540, %r6539, 28;
	shf.r.wrap.b32 	%r6542, %r6539, %r6540, 28;
	mov.b64 	%rd8520, {%r6542, %r6541};
	shf.l.wrap.b32 	%r6543, %r6539, %r6540, 30;
	shf.l.wrap.b32 	%r6544, %r6540, %r6539, 30;
	mov.b64 	%rd8521, {%r6544, %r6543};
	xor.b64  	%rd8522, %rd8521, %rd8520;
	shf.l.wrap.b32 	%r6545, %r6539, %r6540, 25;
	shf.l.wrap.b32 	%r6546, %r6540, %r6539, 25;
	mov.b64 	%rd8523, {%r6546, %r6545};
	xor.b64  	%rd8524, %rd8522, %rd8523;
	and.b64  	%rd8525, %rd8506, %rd8481;
	xor.b64  	%rd8526, %rd8506, %rd8481;
	and.b64  	%rd8527, %rd8526, %rd8456;
	or.b64  	%rd8528, %rd8527, %rd8525;
	add.s64 	%rd8529, %rd8519, %rd8528;
	add.s64 	%rd9849, %rd8529, %rd8524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6547,%dummy}, %rd9853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd9853;
	}
	shf.r.wrap.b32 	%r6549, %r6548, %r6547, 14;
	shf.r.wrap.b32 	%r6550, %r6547, %r6548, 14;
	mov.b64 	%rd8530, {%r6550, %r6549};
	shf.r.wrap.b32 	%r6551, %r6548, %r6547, 18;
	shf.r.wrap.b32 	%r6552, %r6547, %r6548, 18;
	mov.b64 	%rd8531, {%r6552, %r6551};
	xor.b64  	%rd8532, %rd8531, %rd8530;
	shf.l.wrap.b32 	%r6553, %r6547, %r6548, 23;
	shf.l.wrap.b32 	%r6554, %r6548, %r6547, 23;
	mov.b64 	%rd8533, {%r6554, %r6553};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	xor.b64  	%rd8535, %rd8495, %rd8470;
	and.b64  	%rd8536, %rd9853, %rd8535;
	xor.b64  	%rd8537, %rd8536, %rd8470;
	add.s64 	%rd8538, %rd8445, %rd9840;
	ld.const.u64 	%rd8539, [%rd9837+232];
	add.s64 	%rd8540, %rd8538, %rd8539;
	add.s64 	%rd8541, %rd8540, %rd8537;
	add.s64 	%rd8542, %rd8541, %rd8534;
	add.s64 	%rd9852, %rd8542, %rd8456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6555,%dummy}, %rd9849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6556}, %rd9849;
	}
	shf.r.wrap.b32 	%r6557, %r6556, %r6555, 28;
	shf.r.wrap.b32 	%r6558, %r6555, %r6556, 28;
	mov.b64 	%rd8543, {%r6558, %r6557};
	shf.l.wrap.b32 	%r6559, %r6555, %r6556, 30;
	shf.l.wrap.b32 	%r6560, %r6556, %r6555, 30;
	mov.b64 	%rd8544, {%r6560, %r6559};
	xor.b64  	%rd8545, %rd8544, %rd8543;
	shf.l.wrap.b32 	%r6561, %r6555, %r6556, 25;
	shf.l.wrap.b32 	%r6562, %r6556, %r6555, 25;
	mov.b64 	%rd8546, {%r6562, %r6561};
	xor.b64  	%rd8547, %rd8545, %rd8546;
	and.b64  	%rd8548, %rd9849, %rd8506;
	xor.b64  	%rd8549, %rd9849, %rd8506;
	and.b64  	%rd8550, %rd8549, %rd8481;
	or.b64  	%rd8551, %rd8550, %rd8548;
	add.s64 	%rd8552, %rd8542, %rd8551;
	add.s64 	%rd9848, %rd8552, %rd8547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6563,%dummy}, %rd9852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6564}, %rd9852;
	}
	shf.r.wrap.b32 	%r6565, %r6564, %r6563, 14;
	shf.r.wrap.b32 	%r6566, %r6563, %r6564, 14;
	mov.b64 	%rd8553, {%r6566, %r6565};
	shf.r.wrap.b32 	%r6567, %r6564, %r6563, 18;
	shf.r.wrap.b32 	%r6568, %r6563, %r6564, 18;
	mov.b64 	%rd8554, {%r6568, %r6567};
	xor.b64  	%rd8555, %rd8554, %rd8553;
	shf.l.wrap.b32 	%r6569, %r6563, %r6564, 23;
	shf.l.wrap.b32 	%r6570, %r6564, %r6563, 23;
	mov.b64 	%rd8556, {%r6570, %r6569};
	xor.b64  	%rd8557, %rd8555, %rd8556;
	xor.b64  	%rd8558, %rd9853, %rd8495;
	and.b64  	%rd8559, %rd9852, %rd8558;
	xor.b64  	%rd8560, %rd8559, %rd8495;
	add.s64 	%rd8561, %rd8470, %rd9839;
	ld.const.u64 	%rd8562, [%rd9837+240];
	add.s64 	%rd8563, %rd8561, %rd8562;
	add.s64 	%rd8564, %rd8563, %rd8560;
	add.s64 	%rd8565, %rd8564, %rd8557;
	add.s64 	%rd9851, %rd8565, %rd8481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6571,%dummy}, %rd9848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6572}, %rd9848;
	}
	shf.r.wrap.b32 	%r6573, %r6572, %r6571, 28;
	shf.r.wrap.b32 	%r6574, %r6571, %r6572, 28;
	mov.b64 	%rd8566, {%r6574, %r6573};
	shf.l.wrap.b32 	%r6575, %r6571, %r6572, 30;
	shf.l.wrap.b32 	%r6576, %r6572, %r6571, 30;
	mov.b64 	%rd8567, {%r6576, %r6575};
	xor.b64  	%rd8568, %rd8567, %rd8566;
	shf.l.wrap.b32 	%r6577, %r6571, %r6572, 25;
	shf.l.wrap.b32 	%r6578, %r6572, %r6571, 25;
	mov.b64 	%rd8569, {%r6578, %r6577};
	xor.b64  	%rd8570, %rd8568, %rd8569;
	and.b64  	%rd8571, %rd9848, %rd9849;
	xor.b64  	%rd8572, %rd9848, %rd9849;
	and.b64  	%rd8573, %rd8572, %rd8506;
	or.b64  	%rd8574, %rd8573, %rd8571;
	add.s64 	%rd8575, %rd8565, %rd8574;
	add.s64 	%rd9847, %rd8575, %rd8570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6579,%dummy}, %rd9851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6580}, %rd9851;
	}
	shf.r.wrap.b32 	%r6581, %r6580, %r6579, 14;
	shf.r.wrap.b32 	%r6582, %r6579, %r6580, 14;
	mov.b64 	%rd8576, {%r6582, %r6581};
	shf.r.wrap.b32 	%r6583, %r6580, %r6579, 18;
	shf.r.wrap.b32 	%r6584, %r6579, %r6580, 18;
	mov.b64 	%rd8577, {%r6584, %r6583};
	xor.b64  	%rd8578, %rd8577, %rd8576;
	shf.l.wrap.b32 	%r6585, %r6579, %r6580, 23;
	shf.l.wrap.b32 	%r6586, %r6580, %r6579, 23;
	mov.b64 	%rd8579, {%r6586, %r6585};
	xor.b64  	%rd8580, %rd8578, %rd8579;
	xor.b64  	%rd8581, %rd9852, %rd9853;
	and.b64  	%rd8582, %rd9851, %rd8581;
	xor.b64  	%rd8583, %rd8582, %rd9853;
	add.s64 	%rd8584, %rd8495, %rd9838;
	ld.const.u64 	%rd8585, [%rd9837+248];
	add.s64 	%rd8586, %rd8584, %rd8585;
	add.s64 	%rd8587, %rd8586, %rd8583;
	add.s64 	%rd8588, %rd8587, %rd8580;
	add.s64 	%rd9850, %rd8588, %rd8506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6587,%dummy}, %rd9847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6588}, %rd9847;
	}
	shf.r.wrap.b32 	%r6589, %r6588, %r6587, 28;
	shf.r.wrap.b32 	%r6590, %r6587, %r6588, 28;
	mov.b64 	%rd8589, {%r6590, %r6589};
	shf.l.wrap.b32 	%r6591, %r6587, %r6588, 30;
	shf.l.wrap.b32 	%r6592, %r6588, %r6587, 30;
	mov.b64 	%rd8590, {%r6592, %r6591};
	xor.b64  	%rd8591, %rd8590, %rd8589;
	shf.l.wrap.b32 	%r6593, %r6587, %r6588, 25;
	shf.l.wrap.b32 	%r6594, %r6588, %r6587, 25;
	mov.b64 	%rd8592, {%r6594, %r6593};
	xor.b64  	%rd8593, %rd8591, %rd8592;
	and.b64  	%rd8594, %rd9847, %rd9848;
	xor.b64  	%rd8595, %rd9847, %rd9848;
	and.b64  	%rd8596, %rd8595, %rd9849;
	or.b64  	%rd8597, %rd8596, %rd8594;
	add.s64 	%rd8598, %rd8588, %rd8597;
	add.s64 	%rd9846, %rd8598, %rd8593;
	add.s32 	%r7534, %r7534, 16;
	setp.lt.s32	%p53, %r7534, 80;
	mov.u64 	%rd9837, %rd728;
	@%p53 bra 	BB3_35;

	add.u64 	%rd9607, %SPL, 528;
	add.s64 	%rd9606, %rd9607, 192;
	add.s64 	%rd8599, %rd9836, %rd9846;
	st.local.u64 	[%rd9606+8], %rd8599;
	add.s64 	%rd8600, %rd9835, %rd9847;
	st.local.u64 	[%rd9606+16], %rd8600;
	add.s64 	%rd8601, %rd9834, %rd9848;
	st.local.u64 	[%rd9606+24], %rd8601;
	add.s64 	%rd8602, %rd9833, %rd9849;
	st.local.u64 	[%rd9606+32], %rd8602;
	add.s64 	%rd8603, %rd9832, %rd9850;
	st.local.u64 	[%rd9606+40], %rd8603;
	add.s64 	%rd8604, %rd9831, %rd9851;
	st.local.u64 	[%rd9606+48], %rd8604;
	add.s64 	%rd8605, %rd9830, %rd9852;
	st.local.u64 	[%rd9606+56], %rd8605;
	add.s64 	%rd8606, %rd9829, %rd9853;
	st.local.u64 	[%rd9606+64], %rd8606;
	st.global.u64 	[%rd383+128], %rd8599;
	st.global.u64 	[%rd383+136], %rd8600;
	st.global.u64 	[%rd383+144], %rd8601;
	st.global.u64 	[%rd383+152], %rd8602;
	st.global.u64 	[%rd383+160], %rd8603;
	st.global.u64 	[%rd383+168], %rd8604;
	st.global.u64 	[%rd383+176], %rd8605;
	st.global.u64 	[%rd383+184], %rd8606;
	st.global.u64 	[%rd383+256], %rd8599;
	st.global.u64 	[%rd383+264], %rd8600;
	st.global.u64 	[%rd383+272], %rd8601;
	st.global.u64 	[%rd383+280], %rd8602;
	st.global.u64 	[%rd383+288], %rd8603;
	st.global.u64 	[%rd383+296], %rd8604;
	st.global.u64 	[%rd383+304], %rd8605;
	st.global.u64 	[%rd383+312], %rd8606;

BB3_37:
	ret;
}

	// .globl	m07100_loop
.entry m07100_loop(
	.param .u64 .ptr .global .align 4 m07100_loop_param_0,
	.param .u64 .ptr .global .align 4 m07100_loop_param_1,
	.param .u64 .ptr .global .align 4 m07100_loop_param_2,
	.param .u64 .ptr .const .align 4 m07100_loop_param_3,
	.param .u64 .ptr .global .align 8 m07100_loop_param_4,
	.param .u64 .ptr .global .align 1 m07100_loop_param_5,
	.param .u64 .ptr .global .align 4 m07100_loop_param_6,
	.param .u64 .ptr .global .align 4 m07100_loop_param_7,
	.param .u64 .ptr .global .align 4 m07100_loop_param_8,
	.param .u64 .ptr .global .align 4 m07100_loop_param_9,
	.param .u64 .ptr .global .align 4 m07100_loop_param_10,
	.param .u64 .ptr .global .align 4 m07100_loop_param_11,
	.param .u64 .ptr .global .align 4 m07100_loop_param_12,
	.param .u64 .ptr .global .align 4 m07100_loop_param_13,
	.param .u64 .ptr .global .align 8 m07100_loop_param_14,
	.param .u64 .ptr .global .align 4 m07100_loop_param_15,
	.param .u64 .ptr .global .align 4 m07100_loop_param_16,
	.param .u64 .ptr .global .align 4 m07100_loop_param_17,
	.param .u64 .ptr .global .align 4 m07100_loop_param_18,
	.param .u64 .ptr .global .align 4 m07100_loop_param_19,
	.param .u64 .ptr .global .align 1 m07100_loop_param_20,
	.param .u64 .ptr .global .align 1 m07100_loop_param_21,
	.param .u64 .ptr .global .align 1 m07100_loop_param_22,
	.param .u64 .ptr .global .align 1 m07100_loop_param_23,
	.param .u64 .ptr .global .align 8 m07100_loop_param_24
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<1416>;
	.reg .b64 	%rd<2233>;


	ld.param.u64 	%rd223, [m07100_loop_param_4];
	ld.param.u64 	%rd224, [m07100_loop_param_24];
	mov.b32	%r9, %envreg3;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r9;
	mov.u32 	%r13, %tid.x;
	add.s32 	%r1, %r12, %r13;
	cvt.s64.s32	%rd225, %r1;
	add.s64 	%rd1, %rd224, 56;
	ld.global.u64 	%rd226, [%rd224+56];
	setp.ge.u64	%p1, %rd225, %rd226;
	@%p1 bra 	BB4_9;

	mul.wide.s32 	%rd227, %r1, 384;
	add.s64 	%rd2, %rd223, %rd227;
	ld.global.u64 	%rd3, [%rd2+24];
	ld.global.u64 	%rd4, [%rd2+56];
	ld.global.u64 	%rd5, [%rd2+88];
	ld.global.u64 	%rd6, [%rd2+120];
	ld.const.u64 	%rd7, [k_sha512];
	ld.global.u64 	%rd8, [%rd2+48];
	ld.global.u64 	%rd9, [%rd2+40];
	ld.global.u64 	%rd10, [%rd2+32];
	ld.global.u64 	%rd11, [%rd2+8];
	ld.global.u64 	%rd12, [%rd2];
	ld.global.u64 	%rd13, [%rd2+16];
	ld.const.u64 	%rd14, [k_sha512+8];
	ld.const.u64 	%rd15, [k_sha512+16];
	ld.const.u64 	%rd16, [k_sha512+24];
	ld.const.u64 	%rd17, [k_sha512+32];
	ld.const.u64 	%rd18, [k_sha512+40];
	ld.const.u64 	%rd19, [k_sha512+48];
	ld.const.u64 	%rd20, [k_sha512+56];
	ld.const.u64 	%rd228, [k_sha512+64];
	xor.b64  	%rd21, %rd228, -9223372036854775808;
	ld.const.u64 	%rd22, [k_sha512+72];
	ld.const.u64 	%rd23, [k_sha512+80];
	ld.const.u64 	%rd24, [k_sha512+88];
	ld.const.u64 	%rd25, [k_sha512+96];
	ld.const.u64 	%rd26, [k_sha512+104];
	ld.const.u64 	%rd27, [k_sha512+112];
	ld.const.u64 	%rd229, [k_sha512+120];
	add.s64 	%rd28, %rd229, 1536;
	ld.global.u64 	%rd29, [%rd2+112];
	ld.global.u64 	%rd30, [%rd2+104];
	ld.global.u64 	%rd31, [%rd2+96];
	ld.global.u64 	%rd32, [%rd2+72];
	ld.global.u64 	%rd33, [%rd2+64];
	ld.global.u64 	%rd34, [%rd2+80];
	ld.global.u64 	%rd2185, [%rd2+128];
	ld.global.u64 	%rd2186, [%rd2+136];
	ld.global.u64 	%rd2187, [%rd2+144];
	ld.global.u64 	%rd2188, [%rd2+152];
	ld.global.u64 	%rd2189, [%rd2+160];
	ld.global.u64 	%rd2190, [%rd2+168];
	ld.global.u64 	%rd2191, [%rd2+176];
	ld.global.u64 	%rd2192, [%rd2+184];
	ld.global.u64 	%rd2217, [%rd2+256];
	ld.global.u64 	%rd2218, [%rd2+264];
	ld.global.u64 	%rd2219, [%rd2+272];
	ld.global.u64 	%rd2220, [%rd2+280];
	ld.global.u64 	%rd2221, [%rd2+288];
	ld.global.u64 	%rd2222, [%rd2+296];
	ld.global.u64 	%rd2223, [%rd2+304];
	ld.global.u64 	%rd2224, [%rd2+312];
	ld.global.u32 	%r2, [%rd1+-36];
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB4_8;

	{
	.reg .b32 %dummy;
	mov.b64 	{%r15,%dummy}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16}, %rd10;
	}
	shf.r.wrap.b32 	%r17, %r16, %r15, 14;
	shf.r.wrap.b32 	%r18, %r15, %r16, 14;
	mov.b64 	%rd230, {%r18, %r17};
	shf.r.wrap.b32 	%r19, %r16, %r15, 18;
	shf.r.wrap.b32 	%r20, %r15, %r16, 18;
	mov.b64 	%rd231, {%r20, %r19};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r21, %r15, %r16, 23;
	shf.l.wrap.b32 	%r22, %r16, %r15, 23;
	mov.b64 	%rd233, {%r22, %r21};
	xor.b64  	%rd234, %rd232, %rd233;
	add.s64 	%rd235, %rd234, %rd4;
	xor.b64  	%rd236, %rd8, %rd9;
	and.b64  	%rd237, %rd236, %rd10;
	xor.b64  	%rd238, %rd237, %rd8;
	add.s64 	%rd51, %rd235, %rd238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r23}, %rd12;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r24,%dummy}, %rd12;
	}
	shf.l.wrap.b32 	%r25, %r24, %r23, 30;
	shf.l.wrap.b32 	%r26, %r23, %r24, 30;
	mov.b64 	%rd239, {%r26, %r25};
	shf.r.wrap.b32 	%r27, %r23, %r24, 28;
	shf.r.wrap.b32 	%r28, %r24, %r23, 28;
	mov.b64 	%rd240, {%r28, %r27};
	xor.b64  	%rd241, %rd240, %rd239;
	shf.l.wrap.b32 	%r29, %r24, %r23, 25;
	shf.l.wrap.b32 	%r30, %r23, %r24, 25;
	mov.b64 	%rd242, {%r30, %r29};
	xor.b64  	%rd243, %rd241, %rd242;
	xor.b64  	%rd244, %rd11, %rd12;
	and.b64  	%rd245, %rd13, %rd244;
	and.b64  	%rd246, %rd11, %rd12;
	or.b64  	%rd247, %rd245, %rd246;
	add.s64 	%rd52, %rd247, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd31;
	}
	shf.r.wrap.b32 	%r33, %r32, %r31, 18;
	shf.r.wrap.b32 	%r34, %r31, %r32, 18;
	mov.b64 	%rd248, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r32, %r31, 14;
	shf.r.wrap.b32 	%r36, %r31, %r32, 14;
	mov.b64 	%rd249, {%r36, %r35};
	xor.b64  	%rd250, %rd249, %rd248;
	shf.l.wrap.b32 	%r37, %r31, %r32, 23;
	shf.l.wrap.b32 	%r38, %r32, %r31, 23;
	mov.b64 	%rd251, {%r38, %r37};
	xor.b64  	%rd252, %rd250, %rd251;
	add.s64 	%rd253, %rd252, %rd6;
	xor.b64  	%rd254, %rd29, %rd30;
	and.b64  	%rd255, %rd254, %rd31;
	xor.b64  	%rd256, %rd255, %rd29;
	add.s64 	%rd53, %rd253, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39}, %rd33;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd33;
	}
	shf.l.wrap.b32 	%r41, %r40, %r39, 30;
	shf.l.wrap.b32 	%r42, %r39, %r40, 30;
	mov.b64 	%rd257, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r39, %r40, 28;
	shf.r.wrap.b32 	%r44, %r40, %r39, 28;
	mov.b64 	%rd258, {%r44, %r43};
	xor.b64  	%rd259, %rd258, %rd257;
	shf.l.wrap.b32 	%r45, %r40, %r39, 25;
	shf.l.wrap.b32 	%r46, %r39, %r40, 25;
	mov.b64 	%rd260, {%r46, %r45};
	xor.b64  	%rd261, %rd259, %rd260;
	xor.b64  	%rd262, %rd32, %rd33;
	and.b64  	%rd263, %rd34, %rd262;
	and.b64  	%rd264, %rd32, %rd33;
	or.b64  	%rd265, %rd263, %rd264;
	add.s64 	%rd54, %rd265, %rd261;
	mov.u32 	%r1413, 0;

BB4_3:
	add.s64 	%rd274, %rd51, %rd2185;
	add.s64 	%rd275, %rd274, %rd7;
	add.s64 	%rd276, %rd275, %rd3;
	add.s64 	%rd277, %rd52, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd276;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 14;
	shf.r.wrap.b32 	%r51, %r48, %r49, 14;
	mov.b64 	%rd278, {%r51, %r50};
	shf.r.wrap.b32 	%r52, %r49, %r48, 18;
	shf.r.wrap.b32 	%r53, %r48, %r49, 18;
	mov.b64 	%rd279, {%r53, %r52};
	xor.b64  	%rd280, %rd278, %rd279;
	shf.l.wrap.b32 	%r54, %r48, %r49, 23;
	shf.l.wrap.b32 	%r55, %r49, %r48, 23;
	mov.b64 	%rd281, {%r55, %r54};
	xor.b64  	%rd282, %rd280, %rd281;
	xor.b64  	%rd283, %rd9, %rd10;
	and.b64  	%rd284, %rd276, %rd283;
	xor.b64  	%rd285, %rd284, %rd9;
	add.s64 	%rd286, %rd2186, %rd8;
	add.s64 	%rd287, %rd286, %rd14;
	add.s64 	%rd288, %rd287, %rd285;
	add.s64 	%rd289, %rd288, %rd282;
	add.s64 	%rd290, %rd289, %rd13;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd277;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 28;
	shf.r.wrap.b32 	%r59, %r56, %r57, 28;
	mov.b64 	%rd291, {%r59, %r58};
	shf.l.wrap.b32 	%r60, %r56, %r57, 30;
	shf.l.wrap.b32 	%r61, %r57, %r56, 30;
	mov.b64 	%rd292, {%r61, %r60};
	xor.b64  	%rd293, %rd291, %rd292;
	shf.l.wrap.b32 	%r62, %r56, %r57, 25;
	shf.l.wrap.b32 	%r63, %r57, %r56, 25;
	mov.b64 	%rd294, {%r63, %r62};
	xor.b64  	%rd295, %rd293, %rd294;
	and.b64  	%rd296, %rd277, %rd12;
	xor.b64  	%rd297, %rd277, %rd12;
	and.b64  	%rd298, %rd297, %rd11;
	or.b64  	%rd299, %rd298, %rd296;
	add.s64 	%rd300, %rd295, %rd299;
	add.s64 	%rd301, %rd300, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd290;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 14;
	shf.r.wrap.b32 	%r67, %r64, %r65, 14;
	mov.b64 	%rd302, {%r67, %r66};
	shf.r.wrap.b32 	%r68, %r65, %r64, 18;
	shf.r.wrap.b32 	%r69, %r64, %r65, 18;
	mov.b64 	%rd303, {%r69, %r68};
	xor.b64  	%rd304, %rd302, %rd303;
	shf.l.wrap.b32 	%r70, %r64, %r65, 23;
	shf.l.wrap.b32 	%r71, %r65, %r64, 23;
	mov.b64 	%rd305, {%r71, %r70};
	xor.b64  	%rd306, %rd304, %rd305;
	xor.b64  	%rd307, %rd276, %rd10;
	and.b64  	%rd308, %rd290, %rd307;
	xor.b64  	%rd309, %rd308, %rd10;
	add.s64 	%rd310, %rd2187, %rd9;
	add.s64 	%rd311, %rd310, %rd15;
	add.s64 	%rd312, %rd311, %rd309;
	add.s64 	%rd313, %rd312, %rd306;
	add.s64 	%rd314, %rd313, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd301;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 28;
	shf.r.wrap.b32 	%r75, %r72, %r73, 28;
	mov.b64 	%rd315, {%r75, %r74};
	shf.l.wrap.b32 	%r76, %r72, %r73, 30;
	shf.l.wrap.b32 	%r77, %r73, %r72, 30;
	mov.b64 	%rd316, {%r77, %r76};
	xor.b64  	%rd317, %rd315, %rd316;
	shf.l.wrap.b32 	%r78, %r72, %r73, 25;
	shf.l.wrap.b32 	%r79, %r73, %r72, 25;
	mov.b64 	%rd318, {%r79, %r78};
	xor.b64  	%rd319, %rd317, %rd318;
	and.b64  	%rd320, %rd301, %rd277;
	xor.b64  	%rd321, %rd301, %rd277;
	and.b64  	%rd322, %rd321, %rd12;
	or.b64  	%rd323, %rd322, %rd320;
	add.s64 	%rd324, %rd319, %rd323;
	add.s64 	%rd325, %rd324, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd314;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 14;
	shf.r.wrap.b32 	%r83, %r80, %r81, 14;
	mov.b64 	%rd326, {%r83, %r82};
	shf.r.wrap.b32 	%r84, %r81, %r80, 18;
	shf.r.wrap.b32 	%r85, %r80, %r81, 18;
	mov.b64 	%rd327, {%r85, %r84};
	xor.b64  	%rd328, %rd326, %rd327;
	shf.l.wrap.b32 	%r86, %r80, %r81, 23;
	shf.l.wrap.b32 	%r87, %r81, %r80, 23;
	mov.b64 	%rd329, {%r87, %r86};
	xor.b64  	%rd330, %rd328, %rd329;
	xor.b64  	%rd331, %rd290, %rd276;
	and.b64  	%rd332, %rd314, %rd331;
	xor.b64  	%rd333, %rd332, %rd276;
	add.s64 	%rd334, %rd2188, %rd10;
	add.s64 	%rd335, %rd334, %rd16;
	add.s64 	%rd336, %rd335, %rd333;
	add.s64 	%rd337, %rd336, %rd330;
	add.s64 	%rd338, %rd337, %rd12;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd325;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 28;
	shf.r.wrap.b32 	%r91, %r88, %r89, 28;
	mov.b64 	%rd339, {%r91, %r90};
	shf.l.wrap.b32 	%r92, %r88, %r89, 30;
	shf.l.wrap.b32 	%r93, %r89, %r88, 30;
	mov.b64 	%rd340, {%r93, %r92};
	xor.b64  	%rd341, %rd339, %rd340;
	shf.l.wrap.b32 	%r94, %r88, %r89, 25;
	shf.l.wrap.b32 	%r95, %r89, %r88, 25;
	mov.b64 	%rd342, {%r95, %r94};
	xor.b64  	%rd343, %rd341, %rd342;
	and.b64  	%rd344, %rd325, %rd301;
	xor.b64  	%rd345, %rd325, %rd301;
	and.b64  	%rd346, %rd345, %rd277;
	or.b64  	%rd347, %rd346, %rd344;
	add.s64 	%rd348, %rd343, %rd347;
	add.s64 	%rd349, %rd348, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r96,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r97}, %rd338;
	}
	shf.r.wrap.b32 	%r98, %r97, %r96, 14;
	shf.r.wrap.b32 	%r99, %r96, %r97, 14;
	mov.b64 	%rd350, {%r99, %r98};
	shf.r.wrap.b32 	%r100, %r97, %r96, 18;
	shf.r.wrap.b32 	%r101, %r96, %r97, 18;
	mov.b64 	%rd351, {%r101, %r100};
	xor.b64  	%rd352, %rd350, %rd351;
	shf.l.wrap.b32 	%r102, %r96, %r97, 23;
	shf.l.wrap.b32 	%r103, %r97, %r96, 23;
	mov.b64 	%rd353, {%r103, %r102};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd314, %rd290;
	and.b64  	%rd356, %rd338, %rd355;
	xor.b64  	%rd357, %rd356, %rd290;
	add.s64 	%rd358, %rd276, %rd2189;
	add.s64 	%rd359, %rd358, %rd17;
	add.s64 	%rd360, %rd359, %rd357;
	add.s64 	%rd361, %rd360, %rd354;
	add.s64 	%rd362, %rd361, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd349;
	}
	shf.r.wrap.b32 	%r106, %r105, %r104, 28;
	shf.r.wrap.b32 	%r107, %r104, %r105, 28;
	mov.b64 	%rd363, {%r107, %r106};
	shf.l.wrap.b32 	%r108, %r104, %r105, 30;
	shf.l.wrap.b32 	%r109, %r105, %r104, 30;
	mov.b64 	%rd364, {%r109, %r108};
	xor.b64  	%rd365, %rd363, %rd364;
	shf.l.wrap.b32 	%r110, %r104, %r105, 25;
	shf.l.wrap.b32 	%r111, %r105, %r104, 25;
	mov.b64 	%rd366, {%r111, %r110};
	xor.b64  	%rd367, %rd365, %rd366;
	and.b64  	%rd368, %rd349, %rd325;
	xor.b64  	%rd369, %rd349, %rd325;
	and.b64  	%rd370, %rd369, %rd301;
	or.b64  	%rd371, %rd370, %rd368;
	add.s64 	%rd372, %rd367, %rd371;
	add.s64 	%rd373, %rd372, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd362;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 14;
	shf.r.wrap.b32 	%r115, %r112, %r113, 14;
	mov.b64 	%rd374, {%r115, %r114};
	shf.r.wrap.b32 	%r116, %r113, %r112, 18;
	shf.r.wrap.b32 	%r117, %r112, %r113, 18;
	mov.b64 	%rd375, {%r117, %r116};
	xor.b64  	%rd376, %rd374, %rd375;
	shf.l.wrap.b32 	%r118, %r112, %r113, 23;
	shf.l.wrap.b32 	%r119, %r113, %r112, 23;
	mov.b64 	%rd377, {%r119, %r118};
	xor.b64  	%rd378, %rd376, %rd377;
	xor.b64  	%rd379, %rd338, %rd314;
	and.b64  	%rd380, %rd362, %rd379;
	xor.b64  	%rd381, %rd380, %rd314;
	add.s64 	%rd382, %rd18, %rd2190;
	add.s64 	%rd383, %rd382, %rd290;
	add.s64 	%rd384, %rd383, %rd381;
	add.s64 	%rd385, %rd384, %rd378;
	add.s64 	%rd386, %rd385, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd373;
	}
	shf.r.wrap.b32 	%r122, %r121, %r120, 28;
	shf.r.wrap.b32 	%r123, %r120, %r121, 28;
	mov.b64 	%rd387, {%r123, %r122};
	shf.l.wrap.b32 	%r124, %r120, %r121, 30;
	shf.l.wrap.b32 	%r125, %r121, %r120, 30;
	mov.b64 	%rd388, {%r125, %r124};
	xor.b64  	%rd389, %rd387, %rd388;
	shf.l.wrap.b32 	%r126, %r120, %r121, 25;
	shf.l.wrap.b32 	%r127, %r121, %r120, 25;
	mov.b64 	%rd390, {%r127, %r126};
	xor.b64  	%rd391, %rd389, %rd390;
	and.b64  	%rd392, %rd373, %rd349;
	xor.b64  	%rd393, %rd373, %rd349;
	and.b64  	%rd394, %rd393, %rd325;
	or.b64  	%rd395, %rd394, %rd392;
	add.s64 	%rd396, %rd391, %rd395;
	add.s64 	%rd397, %rd396, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd386;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 14;
	shf.r.wrap.b32 	%r131, %r128, %r129, 14;
	mov.b64 	%rd398, {%r131, %r130};
	shf.r.wrap.b32 	%r132, %r129, %r128, 18;
	shf.r.wrap.b32 	%r133, %r128, %r129, 18;
	mov.b64 	%rd399, {%r133, %r132};
	xor.b64  	%rd400, %rd398, %rd399;
	shf.l.wrap.b32 	%r134, %r128, %r129, 23;
	shf.l.wrap.b32 	%r135, %r129, %r128, 23;
	mov.b64 	%rd401, {%r135, %r134};
	xor.b64  	%rd402, %rd400, %rd401;
	xor.b64  	%rd403, %rd362, %rd338;
	and.b64  	%rd404, %rd386, %rd403;
	xor.b64  	%rd405, %rd404, %rd338;
	add.s64 	%rd406, %rd19, %rd2191;
	add.s64 	%rd407, %rd406, %rd314;
	add.s64 	%rd408, %rd407, %rd405;
	add.s64 	%rd409, %rd408, %rd402;
	add.s64 	%rd410, %rd409, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd397;
	}
	shf.r.wrap.b32 	%r138, %r137, %r136, 28;
	shf.r.wrap.b32 	%r139, %r136, %r137, 28;
	mov.b64 	%rd411, {%r139, %r138};
	shf.l.wrap.b32 	%r140, %r136, %r137, 30;
	shf.l.wrap.b32 	%r141, %r137, %r136, 30;
	mov.b64 	%rd412, {%r141, %r140};
	xor.b64  	%rd413, %rd411, %rd412;
	shf.l.wrap.b32 	%r142, %r136, %r137, 25;
	shf.l.wrap.b32 	%r143, %r137, %r136, 25;
	mov.b64 	%rd414, {%r143, %r142};
	xor.b64  	%rd415, %rd413, %rd414;
	and.b64  	%rd416, %rd397, %rd373;
	xor.b64  	%rd417, %rd397, %rd373;
	and.b64  	%rd418, %rd417, %rd349;
	or.b64  	%rd419, %rd418, %rd416;
	add.s64 	%rd420, %rd415, %rd419;
	add.s64 	%rd421, %rd420, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd410;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 14;
	shf.r.wrap.b32 	%r147, %r144, %r145, 14;
	mov.b64 	%rd422, {%r147, %r146};
	shf.r.wrap.b32 	%r148, %r145, %r144, 18;
	shf.r.wrap.b32 	%r149, %r144, %r145, 18;
	mov.b64 	%rd423, {%r149, %r148};
	xor.b64  	%rd424, %rd422, %rd423;
	shf.l.wrap.b32 	%r150, %r144, %r145, 23;
	shf.l.wrap.b32 	%r151, %r145, %r144, 23;
	mov.b64 	%rd425, {%r151, %r150};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd386, %rd362;
	and.b64  	%rd428, %rd410, %rd427;
	xor.b64  	%rd429, %rd428, %rd362;
	add.s64 	%rd430, %rd20, %rd2192;
	add.s64 	%rd431, %rd430, %rd338;
	add.s64 	%rd432, %rd431, %rd429;
	add.s64 	%rd433, %rd432, %rd426;
	add.s64 	%rd434, %rd433, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd421;
	}
	shf.r.wrap.b32 	%r154, %r153, %r152, 28;
	shf.r.wrap.b32 	%r155, %r152, %r153, 28;
	mov.b64 	%rd435, {%r155, %r154};
	shf.l.wrap.b32 	%r156, %r152, %r153, 30;
	shf.l.wrap.b32 	%r157, %r153, %r152, 30;
	mov.b64 	%rd436, {%r157, %r156};
	xor.b64  	%rd437, %rd435, %rd436;
	shf.l.wrap.b32 	%r158, %r152, %r153, 25;
	shf.l.wrap.b32 	%r159, %r153, %r152, 25;
	mov.b64 	%rd438, {%r159, %r158};
	xor.b64  	%rd439, %rd437, %rd438;
	and.b64  	%rd440, %rd421, %rd397;
	xor.b64  	%rd441, %rd421, %rd397;
	and.b64  	%rd442, %rd441, %rd373;
	or.b64  	%rd443, %rd442, %rd440;
	add.s64 	%rd444, %rd439, %rd443;
	add.s64 	%rd445, %rd444, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd434;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 14;
	shf.r.wrap.b32 	%r163, %r160, %r161, 14;
	mov.b64 	%rd446, {%r163, %r162};
	shf.r.wrap.b32 	%r164, %r161, %r160, 18;
	shf.r.wrap.b32 	%r165, %r160, %r161, 18;
	mov.b64 	%rd447, {%r165, %r164};
	xor.b64  	%rd448, %rd446, %rd447;
	shf.l.wrap.b32 	%r166, %r160, %r161, 23;
	shf.l.wrap.b32 	%r167, %r161, %r160, 23;
	mov.b64 	%rd449, {%r167, %r166};
	xor.b64  	%rd450, %rd448, %rd449;
	xor.b64  	%rd451, %rd410, %rd386;
	and.b64  	%rd452, %rd434, %rd451;
	xor.b64  	%rd453, %rd452, %rd386;
	add.s64 	%rd454, %rd21, %rd362;
	add.s64 	%rd455, %rd454, %rd453;
	add.s64 	%rd456, %rd455, %rd450;
	add.s64 	%rd457, %rd456, %rd373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd445;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 28;
	shf.r.wrap.b32 	%r171, %r168, %r169, 28;
	mov.b64 	%rd458, {%r171, %r170};
	shf.l.wrap.b32 	%r172, %r168, %r169, 30;
	shf.l.wrap.b32 	%r173, %r169, %r168, 30;
	mov.b64 	%rd459, {%r173, %r172};
	xor.b64  	%rd460, %rd458, %rd459;
	shf.l.wrap.b32 	%r174, %r168, %r169, 25;
	shf.l.wrap.b32 	%r175, %r169, %r168, 25;
	mov.b64 	%rd461, {%r175, %r174};
	xor.b64  	%rd462, %rd460, %rd461;
	and.b64  	%rd463, %rd445, %rd421;
	xor.b64  	%rd464, %rd445, %rd421;
	and.b64  	%rd465, %rd464, %rd397;
	or.b64  	%rd466, %rd465, %rd463;
	add.s64 	%rd467, %rd462, %rd466;
	add.s64 	%rd468, %rd467, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd457;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 14;
	shf.r.wrap.b32 	%r179, %r176, %r177, 14;
	mov.b64 	%rd469, {%r179, %r178};
	shf.r.wrap.b32 	%r180, %r177, %r176, 18;
	shf.r.wrap.b32 	%r181, %r176, %r177, 18;
	mov.b64 	%rd470, {%r181, %r180};
	xor.b64  	%rd471, %rd469, %rd470;
	shf.l.wrap.b32 	%r182, %r176, %r177, 23;
	shf.l.wrap.b32 	%r183, %r177, %r176, 23;
	mov.b64 	%rd472, {%r183, %r182};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd434, %rd410;
	and.b64  	%rd475, %rd457, %rd474;
	xor.b64  	%rd476, %rd475, %rd410;
	add.s64 	%rd477, %rd386, %rd22;
	add.s64 	%rd478, %rd477, %rd476;
	add.s64 	%rd479, %rd478, %rd473;
	add.s64 	%rd480, %rd479, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd468;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 28;
	shf.r.wrap.b32 	%r187, %r184, %r185, 28;
	mov.b64 	%rd481, {%r187, %r186};
	shf.l.wrap.b32 	%r188, %r184, %r185, 30;
	shf.l.wrap.b32 	%r189, %r185, %r184, 30;
	mov.b64 	%rd482, {%r189, %r188};
	xor.b64  	%rd483, %rd481, %rd482;
	shf.l.wrap.b32 	%r190, %r184, %r185, 25;
	shf.l.wrap.b32 	%r191, %r185, %r184, 25;
	mov.b64 	%rd484, {%r191, %r190};
	xor.b64  	%rd485, %rd483, %rd484;
	and.b64  	%rd486, %rd468, %rd445;
	xor.b64  	%rd487, %rd468, %rd445;
	and.b64  	%rd488, %rd487, %rd421;
	or.b64  	%rd489, %rd488, %rd486;
	add.s64 	%rd490, %rd485, %rd489;
	add.s64 	%rd491, %rd490, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd480;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 14;
	shf.r.wrap.b32 	%r195, %r192, %r193, 14;
	mov.b64 	%rd492, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r193, %r192, 18;
	shf.r.wrap.b32 	%r197, %r192, %r193, 18;
	mov.b64 	%rd493, {%r197, %r196};
	xor.b64  	%rd494, %rd492, %rd493;
	shf.l.wrap.b32 	%r198, %r192, %r193, 23;
	shf.l.wrap.b32 	%r199, %r193, %r192, 23;
	mov.b64 	%rd495, {%r199, %r198};
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd457, %rd434;
	and.b64  	%rd498, %rd480, %rd497;
	xor.b64  	%rd499, %rd498, %rd434;
	add.s64 	%rd500, %rd410, %rd23;
	add.s64 	%rd501, %rd500, %rd499;
	add.s64 	%rd502, %rd501, %rd496;
	add.s64 	%rd503, %rd502, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd491;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 28;
	shf.r.wrap.b32 	%r203, %r200, %r201, 28;
	mov.b64 	%rd504, {%r203, %r202};
	shf.l.wrap.b32 	%r204, %r200, %r201, 30;
	shf.l.wrap.b32 	%r205, %r201, %r200, 30;
	mov.b64 	%rd505, {%r205, %r204};
	xor.b64  	%rd506, %rd504, %rd505;
	shf.l.wrap.b32 	%r206, %r200, %r201, 25;
	shf.l.wrap.b32 	%r207, %r201, %r200, 25;
	mov.b64 	%rd507, {%r207, %r206};
	xor.b64  	%rd508, %rd506, %rd507;
	and.b64  	%rd509, %rd491, %rd468;
	xor.b64  	%rd510, %rd491, %rd468;
	and.b64  	%rd511, %rd510, %rd445;
	or.b64  	%rd512, %rd511, %rd509;
	add.s64 	%rd513, %rd508, %rd512;
	add.s64 	%rd514, %rd513, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd503;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 14;
	shf.r.wrap.b32 	%r211, %r208, %r209, 14;
	mov.b64 	%rd515, {%r211, %r210};
	shf.r.wrap.b32 	%r212, %r209, %r208, 18;
	shf.r.wrap.b32 	%r213, %r208, %r209, 18;
	mov.b64 	%rd516, {%r213, %r212};
	xor.b64  	%rd517, %rd515, %rd516;
	shf.l.wrap.b32 	%r214, %r208, %r209, 23;
	shf.l.wrap.b32 	%r215, %r209, %r208, 23;
	mov.b64 	%rd518, {%r215, %r214};
	xor.b64  	%rd519, %rd517, %rd518;
	xor.b64  	%rd520, %rd480, %rd457;
	and.b64  	%rd521, %rd503, %rd520;
	xor.b64  	%rd522, %rd521, %rd457;
	add.s64 	%rd523, %rd434, %rd24;
	add.s64 	%rd524, %rd523, %rd522;
	add.s64 	%rd525, %rd524, %rd519;
	add.s64 	%rd526, %rd525, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd514;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 28;
	shf.r.wrap.b32 	%r219, %r216, %r217, 28;
	mov.b64 	%rd527, {%r219, %r218};
	shf.l.wrap.b32 	%r220, %r216, %r217, 30;
	shf.l.wrap.b32 	%r221, %r217, %r216, 30;
	mov.b64 	%rd528, {%r221, %r220};
	xor.b64  	%rd529, %rd527, %rd528;
	shf.l.wrap.b32 	%r222, %r216, %r217, 25;
	shf.l.wrap.b32 	%r223, %r217, %r216, 25;
	mov.b64 	%rd530, {%r223, %r222};
	xor.b64  	%rd531, %rd529, %rd530;
	and.b64  	%rd532, %rd514, %rd491;
	xor.b64  	%rd533, %rd514, %rd491;
	and.b64  	%rd534, %rd533, %rd468;
	or.b64  	%rd535, %rd534, %rd532;
	add.s64 	%rd536, %rd531, %rd535;
	add.s64 	%rd537, %rd536, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd526;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 14;
	shf.r.wrap.b32 	%r227, %r224, %r225, 14;
	mov.b64 	%rd538, {%r227, %r226};
	shf.r.wrap.b32 	%r228, %r225, %r224, 18;
	shf.r.wrap.b32 	%r229, %r224, %r225, 18;
	mov.b64 	%rd539, {%r229, %r228};
	xor.b64  	%rd540, %rd538, %rd539;
	shf.l.wrap.b32 	%r230, %r224, %r225, 23;
	shf.l.wrap.b32 	%r231, %r225, %r224, 23;
	mov.b64 	%rd541, {%r231, %r230};
	xor.b64  	%rd542, %rd540, %rd541;
	xor.b64  	%rd543, %rd503, %rd480;
	and.b64  	%rd544, %rd526, %rd543;
	xor.b64  	%rd545, %rd544, %rd480;
	add.s64 	%rd546, %rd457, %rd25;
	add.s64 	%rd547, %rd546, %rd545;
	add.s64 	%rd548, %rd547, %rd542;
	add.s64 	%rd2184, %rd548, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd537;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 28;
	shf.r.wrap.b32 	%r235, %r232, %r233, 28;
	mov.b64 	%rd549, {%r235, %r234};
	shf.l.wrap.b32 	%r236, %r232, %r233, 30;
	shf.l.wrap.b32 	%r237, %r233, %r232, 30;
	mov.b64 	%rd550, {%r237, %r236};
	xor.b64  	%rd551, %rd549, %rd550;
	shf.l.wrap.b32 	%r238, %r232, %r233, 25;
	shf.l.wrap.b32 	%r239, %r233, %r232, 25;
	mov.b64 	%rd552, {%r239, %r238};
	xor.b64  	%rd553, %rd551, %rd552;
	and.b64  	%rd554, %rd537, %rd514;
	xor.b64  	%rd555, %rd537, %rd514;
	and.b64  	%rd556, %rd555, %rd491;
	or.b64  	%rd557, %rd556, %rd554;
	add.s64 	%rd558, %rd553, %rd557;
	add.s64 	%rd2180, %rd558, %rd548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd2184;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 14;
	shf.r.wrap.b32 	%r243, %r240, %r241, 14;
	mov.b64 	%rd559, {%r243, %r242};
	shf.r.wrap.b32 	%r244, %r241, %r240, 18;
	shf.r.wrap.b32 	%r245, %r240, %r241, 18;
	mov.b64 	%rd560, {%r245, %r244};
	xor.b64  	%rd561, %rd559, %rd560;
	shf.l.wrap.b32 	%r246, %r240, %r241, 23;
	shf.l.wrap.b32 	%r247, %r241, %r240, 23;
	mov.b64 	%rd562, {%r247, %r246};
	xor.b64  	%rd563, %rd561, %rd562;
	xor.b64  	%rd564, %rd526, %rd503;
	and.b64  	%rd565, %rd2184, %rd564;
	xor.b64  	%rd566, %rd565, %rd503;
	add.s64 	%rd567, %rd480, %rd26;
	add.s64 	%rd568, %rd567, %rd566;
	add.s64 	%rd569, %rd568, %rd563;
	add.s64 	%rd2183, %rd569, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd2180;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 28;
	shf.r.wrap.b32 	%r251, %r248, %r249, 28;
	mov.b64 	%rd570, {%r251, %r250};
	shf.l.wrap.b32 	%r252, %r248, %r249, 30;
	shf.l.wrap.b32 	%r253, %r249, %r248, 30;
	mov.b64 	%rd571, {%r253, %r252};
	xor.b64  	%rd572, %rd570, %rd571;
	shf.l.wrap.b32 	%r254, %r248, %r249, 25;
	shf.l.wrap.b32 	%r255, %r249, %r248, 25;
	mov.b64 	%rd573, {%r255, %r254};
	xor.b64  	%rd574, %rd572, %rd573;
	and.b64  	%rd575, %rd2180, %rd537;
	xor.b64  	%rd576, %rd2180, %rd537;
	and.b64  	%rd577, %rd576, %rd514;
	or.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd574, %rd578;
	add.s64 	%rd2179, %rd579, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd2183;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 14;
	shf.r.wrap.b32 	%r259, %r256, %r257, 14;
	mov.b64 	%rd580, {%r259, %r258};
	shf.r.wrap.b32 	%r260, %r257, %r256, 18;
	shf.r.wrap.b32 	%r261, %r256, %r257, 18;
	mov.b64 	%rd581, {%r261, %r260};
	xor.b64  	%rd582, %rd580, %rd581;
	shf.l.wrap.b32 	%r262, %r256, %r257, 23;
	shf.l.wrap.b32 	%r263, %r257, %r256, 23;
	mov.b64 	%rd583, {%r263, %r262};
	xor.b64  	%rd584, %rd582, %rd583;
	xor.b64  	%rd585, %rd2184, %rd526;
	and.b64  	%rd586, %rd2183, %rd585;
	xor.b64  	%rd587, %rd586, %rd526;
	add.s64 	%rd588, %rd503, %rd27;
	add.s64 	%rd589, %rd588, %rd587;
	add.s64 	%rd590, %rd589, %rd584;
	add.s64 	%rd2182, %rd590, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd2179;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 28;
	shf.r.wrap.b32 	%r267, %r264, %r265, 28;
	mov.b64 	%rd591, {%r267, %r266};
	shf.l.wrap.b32 	%r268, %r264, %r265, 30;
	shf.l.wrap.b32 	%r269, %r265, %r264, 30;
	mov.b64 	%rd592, {%r269, %r268};
	xor.b64  	%rd593, %rd591, %rd592;
	shf.l.wrap.b32 	%r270, %r264, %r265, 25;
	shf.l.wrap.b32 	%r271, %r265, %r264, 25;
	mov.b64 	%rd594, {%r271, %r270};
	xor.b64  	%rd595, %rd593, %rd594;
	and.b64  	%rd596, %rd2179, %rd2180;
	xor.b64  	%rd597, %rd2179, %rd2180;
	and.b64  	%rd598, %rd597, %rd537;
	or.b64  	%rd599, %rd598, %rd596;
	add.s64 	%rd600, %rd595, %rd599;
	add.s64 	%rd2178, %rd600, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd2182;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 14;
	shf.r.wrap.b32 	%r275, %r272, %r273, 14;
	mov.b64 	%rd601, {%r275, %r274};
	shf.r.wrap.b32 	%r276, %r273, %r272, 18;
	shf.r.wrap.b32 	%r277, %r272, %r273, 18;
	mov.b64 	%rd602, {%r277, %r276};
	xor.b64  	%rd603, %rd601, %rd602;
	shf.l.wrap.b32 	%r278, %r272, %r273, 23;
	shf.l.wrap.b32 	%r279, %r273, %r272, 23;
	mov.b64 	%rd604, {%r279, %r278};
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd2183, %rd2184;
	and.b64  	%rd607, %rd2182, %rd606;
	xor.b64  	%rd608, %rd607, %rd2184;
	add.s64 	%rd609, %rd28, %rd526;
	add.s64 	%rd610, %rd609, %rd608;
	add.s64 	%rd611, %rd610, %rd605;
	add.s64 	%rd2181, %rd611, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd2178;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 28;
	shf.r.wrap.b32 	%r283, %r280, %r281, 28;
	mov.b64 	%rd612, {%r283, %r282};
	shf.l.wrap.b32 	%r284, %r280, %r281, 30;
	shf.l.wrap.b32 	%r285, %r281, %r280, 30;
	mov.b64 	%rd613, {%r285, %r284};
	xor.b64  	%rd614, %rd612, %rd613;
	shf.l.wrap.b32 	%r286, %r280, %r281, 25;
	shf.l.wrap.b32 	%r287, %r281, %r280, 25;
	mov.b64 	%rd615, {%r287, %r286};
	xor.b64  	%rd616, %rd614, %rd615;
	and.b64  	%rd617, %rd2178, %rd2179;
	xor.b64  	%rd618, %rd2178, %rd2179;
	and.b64  	%rd619, %rd618, %rd2180;
	or.b64  	%rd620, %rd619, %rd617;
	add.s64 	%rd621, %rd616, %rd620;
	add.s64 	%rd2177, %rd621, %rd611;
	mov.u64 	%rd2176, -9223372036854775808;
	mov.u64 	%rd2170, 0;
	mov.u64 	%rd2169, 1536;
	mov.u32 	%r1414, 16;
	mov.u64 	%rd2171, %rd2170;
	mov.u64 	%rd2172, %rd2170;
	mov.u64 	%rd2173, %rd2170;
	mov.u64 	%rd2174, %rd2170;
	mov.u64 	%rd2175, %rd2170;

BB4_4:
	shr.u64 	%rd622, %rd2170, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd2170;
	}
	shf.l.wrap.b32 	%r290, %r289, %r288, 3;
	shf.l.wrap.b32 	%r291, %r288, %r289, 3;
	mov.b64 	%rd623, {%r291, %r290};
	xor.b64  	%rd624, %rd623, %rd622;
	shf.r.wrap.b32 	%r292, %r288, %r289, 19;
	shf.r.wrap.b32 	%r293, %r289, %r288, 19;
	mov.b64 	%rd625, {%r293, %r292};
	xor.b64  	%rd626, %rd624, %rd625;
	shr.u64 	%rd627, %rd2186, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd2186;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 8;
	shf.r.wrap.b32 	%r297, %r294, %r295, 8;
	mov.b64 	%rd628, {%r297, %r296};
	xor.b64  	%rd629, %rd628, %rd627;
	shf.r.wrap.b32 	%r298, %r295, %r294, 1;
	shf.r.wrap.b32 	%r299, %r294, %r295, 1;
	mov.b64 	%rd630, {%r299, %r298};
	xor.b64  	%rd631, %rd629, %rd630;
	add.s64 	%rd632, %rd631, %rd2185;
	add.s64 	%rd633, %rd632, %rd2175;
	add.s64 	%rd2185, %rd633, %rd626;
	shr.u64 	%rd634, %rd2169, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd2169;
	}
	shf.l.wrap.b32 	%r302, %r301, %r300, 3;
	shf.l.wrap.b32 	%r303, %r300, %r301, 3;
	mov.b64 	%rd635, {%r303, %r302};
	xor.b64  	%rd636, %rd635, %rd634;
	shf.r.wrap.b32 	%r304, %r300, %r301, 19;
	shf.r.wrap.b32 	%r305, %r301, %r300, 19;
	mov.b64 	%rd637, {%r305, %r304};
	xor.b64  	%rd638, %rd636, %rd637;
	shr.u64 	%rd639, %rd2187, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd2187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd2187;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 8;
	shf.r.wrap.b32 	%r309, %r306, %r307, 8;
	mov.b64 	%rd640, {%r309, %r308};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.r.wrap.b32 	%r310, %r307, %r306, 1;
	shf.r.wrap.b32 	%r311, %r306, %r307, 1;
	mov.b64 	%rd642, {%r311, %r310};
	xor.b64  	%rd643, %rd641, %rd642;
	add.s64 	%rd644, %rd643, %rd2186;
	add.s64 	%rd645, %rd644, %rd2174;
	add.s64 	%rd2186, %rd645, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd2185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd2185;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 19;
	shf.r.wrap.b32 	%r315, %r312, %r313, 19;
	mov.b64 	%rd646, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 3;
	shf.l.wrap.b32 	%r317, %r313, %r312, 3;
	mov.b64 	%rd647, {%r317, %r316};
	shr.u64 	%rd648, %rd2185, 6;
	xor.b64  	%rd649, %rd647, %rd648;
	xor.b64  	%rd650, %rd649, %rd646;
	shr.u64 	%rd651, %rd2188, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd2188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd2188;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 8;
	shf.r.wrap.b32 	%r321, %r318, %r319, 8;
	mov.b64 	%rd652, {%r321, %r320};
	xor.b64  	%rd653, %rd652, %rd651;
	shf.r.wrap.b32 	%r322, %r319, %r318, 1;
	shf.r.wrap.b32 	%r323, %r318, %r319, 1;
	mov.b64 	%rd654, {%r323, %r322};
	xor.b64  	%rd655, %rd653, %rd654;
	add.s64 	%rd656, %rd655, %rd2187;
	add.s64 	%rd657, %rd656, %rd2173;
	add.s64 	%rd2187, %rd657, %rd650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd2186;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 19;
	shf.r.wrap.b32 	%r327, %r324, %r325, 19;
	mov.b64 	%rd658, {%r327, %r326};
	shf.l.wrap.b32 	%r328, %r324, %r325, 3;
	shf.l.wrap.b32 	%r329, %r325, %r324, 3;
	mov.b64 	%rd659, {%r329, %r328};
	shr.u64 	%rd660, %rd2186, 6;
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd661, %rd658;
	shr.u64 	%rd663, %rd2189, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd2189;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 8;
	shf.r.wrap.b32 	%r333, %r330, %r331, 8;
	mov.b64 	%rd664, {%r333, %r332};
	xor.b64  	%rd665, %rd664, %rd663;
	shf.r.wrap.b32 	%r334, %r331, %r330, 1;
	shf.r.wrap.b32 	%r335, %r330, %r331, 1;
	mov.b64 	%rd666, {%r335, %r334};
	xor.b64  	%rd667, %rd665, %rd666;
	add.s64 	%rd668, %rd667, %rd2188;
	add.s64 	%rd669, %rd668, %rd2172;
	add.s64 	%rd2188, %rd669, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd2187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd2187;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 19;
	shf.r.wrap.b32 	%r339, %r336, %r337, 19;
	mov.b64 	%rd670, {%r339, %r338};
	shf.l.wrap.b32 	%r340, %r336, %r337, 3;
	shf.l.wrap.b32 	%r341, %r337, %r336, 3;
	mov.b64 	%rd671, {%r341, %r340};
	shr.u64 	%rd672, %rd2187, 6;
	xor.b64  	%rd673, %rd671, %rd672;
	xor.b64  	%rd674, %rd673, %rd670;
	shr.u64 	%rd675, %rd2190, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd2190;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 8;
	shf.r.wrap.b32 	%r345, %r342, %r343, 8;
	mov.b64 	%rd676, {%r345, %r344};
	xor.b64  	%rd677, %rd676, %rd675;
	shf.r.wrap.b32 	%r346, %r343, %r342, 1;
	shf.r.wrap.b32 	%r347, %r342, %r343, 1;
	mov.b64 	%rd678, {%r347, %r346};
	xor.b64  	%rd679, %rd677, %rd678;
	add.s64 	%rd680, %rd679, %rd2189;
	add.s64 	%rd681, %rd680, %rd2171;
	add.s64 	%rd2189, %rd681, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd2188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd2188;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 19;
	shf.r.wrap.b32 	%r351, %r348, %r349, 19;
	mov.b64 	%rd682, {%r351, %r350};
	shf.l.wrap.b32 	%r352, %r348, %r349, 3;
	shf.l.wrap.b32 	%r353, %r349, %r348, 3;
	mov.b64 	%rd683, {%r353, %r352};
	shr.u64 	%rd684, %rd2188, 6;
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd685, %rd682;
	shr.u64 	%rd687, %rd2191, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd2191;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 8;
	shf.r.wrap.b32 	%r357, %r354, %r355, 8;
	mov.b64 	%rd688, {%r357, %r356};
	xor.b64  	%rd689, %rd688, %rd687;
	shf.r.wrap.b32 	%r358, %r355, %r354, 1;
	shf.r.wrap.b32 	%r359, %r354, %r355, 1;
	mov.b64 	%rd690, {%r359, %r358};
	xor.b64  	%rd691, %rd689, %rd690;
	add.s64 	%rd692, %rd691, %rd2190;
	add.s64 	%rd693, %rd692, %rd2170;
	add.s64 	%rd2190, %rd693, %rd686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd2189;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 19;
	shf.r.wrap.b32 	%r363, %r360, %r361, 19;
	mov.b64 	%rd694, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 3;
	shf.l.wrap.b32 	%r365, %r361, %r360, 3;
	mov.b64 	%rd695, {%r365, %r364};
	shr.u64 	%rd696, %rd2189, 6;
	xor.b64  	%rd697, %rd695, %rd696;
	xor.b64  	%rd698, %rd697, %rd694;
	shr.u64 	%rd699, %rd2192, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd2192;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 8;
	shf.r.wrap.b32 	%r369, %r366, %r367, 8;
	mov.b64 	%rd700, {%r369, %r368};
	xor.b64  	%rd701, %rd700, %rd699;
	shf.r.wrap.b32 	%r370, %r367, %r366, 1;
	shf.r.wrap.b32 	%r371, %r366, %r367, 1;
	mov.b64 	%rd702, {%r371, %r370};
	xor.b64  	%rd703, %rd701, %rd702;
	add.s64 	%rd704, %rd703, %rd2191;
	add.s64 	%rd705, %rd704, %rd2169;
	add.s64 	%rd2191, %rd705, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd2190;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 19;
	shf.r.wrap.b32 	%r375, %r372, %r373, 19;
	mov.b64 	%rd706, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 3;
	shf.l.wrap.b32 	%r377, %r373, %r372, 3;
	mov.b64 	%rd707, {%r377, %r376};
	shr.u64 	%rd708, %rd2190, 6;
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd709, %rd706;
	shr.u64 	%rd711, %rd2176, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd2176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd2176;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 8;
	shf.r.wrap.b32 	%r381, %r378, %r379, 8;
	mov.b64 	%rd712, {%r381, %r380};
	xor.b64  	%rd713, %rd712, %rd711;
	shf.r.wrap.b32 	%r382, %r379, %r378, 1;
	shf.r.wrap.b32 	%r383, %r378, %r379, 1;
	mov.b64 	%rd714, {%r383, %r382};
	xor.b64  	%rd715, %rd713, %rd714;
	add.s64 	%rd716, %rd715, %rd2192;
	add.s64 	%rd717, %rd716, %rd2185;
	add.s64 	%rd2192, %rd717, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd2191;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd718, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 3;
	shf.l.wrap.b32 	%r389, %r385, %r384, 3;
	mov.b64 	%rd719, {%r389, %r388};
	shr.u64 	%rd720, %rd2191, 6;
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd721, %rd718;
	shr.u64 	%rd723, %rd2175, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd2175;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 8;
	shf.r.wrap.b32 	%r393, %r390, %r391, 8;
	mov.b64 	%rd724, {%r393, %r392};
	xor.b64  	%rd725, %rd724, %rd723;
	shf.r.wrap.b32 	%r394, %r391, %r390, 1;
	shf.r.wrap.b32 	%r395, %r390, %r391, 1;
	mov.b64 	%rd726, {%r395, %r394};
	xor.b64  	%rd727, %rd725, %rd726;
	add.s64 	%rd728, %rd727, %rd2176;
	add.s64 	%rd729, %rd728, %rd2186;
	add.s64 	%rd2176, %rd729, %rd722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd2192;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd730, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd731, {%r401, %r400};
	shr.u64 	%rd732, %rd2192, 6;
	xor.b64  	%rd733, %rd731, %rd732;
	xor.b64  	%rd734, %rd733, %rd730;
	shr.u64 	%rd735, %rd2174, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd2174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd2174;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 8;
	shf.r.wrap.b32 	%r405, %r402, %r403, 8;
	mov.b64 	%rd736, {%r405, %r404};
	xor.b64  	%rd737, %rd736, %rd735;
	shf.r.wrap.b32 	%r406, %r403, %r402, 1;
	shf.r.wrap.b32 	%r407, %r402, %r403, 1;
	mov.b64 	%rd738, {%r407, %r406};
	xor.b64  	%rd739, %rd737, %rd738;
	add.s64 	%rd740, %rd739, %rd2175;
	add.s64 	%rd741, %rd740, %rd2187;
	add.s64 	%rd2175, %rd741, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd2176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd2176;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 19;
	shf.r.wrap.b32 	%r411, %r408, %r409, 19;
	mov.b64 	%rd742, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 3;
	shf.l.wrap.b32 	%r413, %r409, %r408, 3;
	mov.b64 	%rd743, {%r413, %r412};
	shr.u64 	%rd744, %rd2176, 6;
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd745, %rd742;
	shr.u64 	%rd747, %rd2173, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd2173;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 8;
	shf.r.wrap.b32 	%r417, %r414, %r415, 8;
	mov.b64 	%rd748, {%r417, %r416};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.r.wrap.b32 	%r418, %r415, %r414, 1;
	shf.r.wrap.b32 	%r419, %r414, %r415, 1;
	mov.b64 	%rd750, {%r419, %r418};
	xor.b64  	%rd751, %rd749, %rd750;
	add.s64 	%rd752, %rd751, %rd2174;
	add.s64 	%rd753, %rd752, %rd2188;
	add.s64 	%rd2174, %rd753, %rd746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd2175;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 19;
	shf.r.wrap.b32 	%r423, %r420, %r421, 19;
	mov.b64 	%rd754, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 3;
	shf.l.wrap.b32 	%r425, %r421, %r420, 3;
	mov.b64 	%rd755, {%r425, %r424};
	shr.u64 	%rd756, %rd2175, 6;
	xor.b64  	%rd757, %rd755, %rd756;
	xor.b64  	%rd758, %rd757, %rd754;
	shr.u64 	%rd759, %rd2172, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd2172;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 8;
	shf.r.wrap.b32 	%r429, %r426, %r427, 8;
	mov.b64 	%rd760, {%r429, %r428};
	xor.b64  	%rd761, %rd760, %rd759;
	shf.r.wrap.b32 	%r430, %r427, %r426, 1;
	shf.r.wrap.b32 	%r431, %r426, %r427, 1;
	mov.b64 	%rd762, {%r431, %r430};
	xor.b64  	%rd763, %rd761, %rd762;
	add.s64 	%rd764, %rd763, %rd2173;
	add.s64 	%rd765, %rd764, %rd2189;
	add.s64 	%rd2173, %rd765, %rd758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd2174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd2174;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 19;
	shf.r.wrap.b32 	%r435, %r432, %r433, 19;
	mov.b64 	%rd766, {%r435, %r434};
	shf.l.wrap.b32 	%r436, %r432, %r433, 3;
	shf.l.wrap.b32 	%r437, %r433, %r432, 3;
	mov.b64 	%rd767, {%r437, %r436};
	shr.u64 	%rd768, %rd2174, 6;
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd769, %rd766;
	shr.u64 	%rd771, %rd2171, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd2171;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 8;
	shf.r.wrap.b32 	%r441, %r438, %r439, 8;
	mov.b64 	%rd772, {%r441, %r440};
	xor.b64  	%rd773, %rd772, %rd771;
	shf.r.wrap.b32 	%r442, %r439, %r438, 1;
	shf.r.wrap.b32 	%r443, %r438, %r439, 1;
	mov.b64 	%rd774, {%r443, %r442};
	xor.b64  	%rd775, %rd773, %rd774;
	add.s64 	%rd776, %rd775, %rd2172;
	add.s64 	%rd777, %rd776, %rd2190;
	add.s64 	%rd2172, %rd777, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd2173;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 19;
	shf.r.wrap.b32 	%r447, %r444, %r445, 19;
	mov.b64 	%rd778, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 3;
	shf.l.wrap.b32 	%r449, %r445, %r444, 3;
	mov.b64 	%rd779, {%r449, %r448};
	shr.u64 	%rd780, %rd2173, 6;
	xor.b64  	%rd781, %rd779, %rd780;
	xor.b64  	%rd782, %rd781, %rd778;
	shr.u64 	%rd783, %rd2170, 7;
	shf.r.wrap.b32 	%r450, %r288, %r289, 8;
	shf.r.wrap.b32 	%r451, %r289, %r288, 8;
	mov.b64 	%rd784, {%r451, %r450};
	xor.b64  	%rd785, %rd784, %rd783;
	shf.r.wrap.b32 	%r452, %r288, %r289, 1;
	shf.r.wrap.b32 	%r453, %r289, %r288, 1;
	mov.b64 	%rd786, {%r453, %r452};
	xor.b64  	%rd787, %rd785, %rd786;
	add.s64 	%rd788, %rd787, %rd2171;
	add.s64 	%rd789, %rd788, %rd2191;
	add.s64 	%rd2171, %rd789, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r454,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r455}, %rd2172;
	}
	shf.r.wrap.b32 	%r456, %r455, %r454, 19;
	shf.r.wrap.b32 	%r457, %r454, %r455, 19;
	mov.b64 	%rd790, {%r457, %r456};
	shf.l.wrap.b32 	%r458, %r454, %r455, 3;
	shf.l.wrap.b32 	%r459, %r455, %r454, 3;
	mov.b64 	%rd791, {%r459, %r458};
	shr.u64 	%rd792, %rd2172, 6;
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd793, %rd790;
	shr.u64 	%rd795, %rd2169, 7;
	shf.r.wrap.b32 	%r460, %r300, %r301, 8;
	shf.r.wrap.b32 	%r461, %r301, %r300, 8;
	mov.b64 	%rd796, {%r461, %r460};
	xor.b64  	%rd797, %rd796, %rd795;
	shf.r.wrap.b32 	%r462, %r300, %r301, 1;
	shf.r.wrap.b32 	%r463, %r301, %r300, 1;
	mov.b64 	%rd798, {%r463, %r462};
	xor.b64  	%rd799, %rd797, %rd798;
	add.s64 	%rd800, %rd799, %rd2170;
	add.s64 	%rd801, %rd800, %rd2192;
	add.s64 	%rd2170, %rd801, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd2171;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 19;
	shf.r.wrap.b32 	%r467, %r464, %r465, 19;
	mov.b64 	%rd802, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 3;
	shf.l.wrap.b32 	%r469, %r465, %r464, 3;
	mov.b64 	%rd803, {%r469, %r468};
	shr.u64 	%rd804, %rd2171, 6;
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd805, %rd802;
	shf.r.wrap.b32 	%r470, %r313, %r312, 1;
	shf.r.wrap.b32 	%r471, %r312, %r313, 1;
	mov.b64 	%rd807, {%r471, %r470};
	shf.r.wrap.b32 	%r472, %r313, %r312, 8;
	shf.r.wrap.b32 	%r473, %r312, %r313, 8;
	mov.b64 	%rd808, {%r473, %r472};
	shr.u64 	%rd809, %rd2185, 7;
	xor.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd810, %rd807;
	add.s64 	%rd812, %rd811, %rd2169;
	add.s64 	%rd813, %rd812, %rd2176;
	add.s64 	%rd2169, %rd813, %rd806;
	mul.wide.s32 	%rd814, %r1414, 8;
	mov.u64 	%rd815, k_sha512;
	add.s64 	%rd816, %rd815, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd2181;
	}
	shf.r.wrap.b32 	%r476, %r475, %r474, 18;
	shf.r.wrap.b32 	%r477, %r474, %r475, 18;
	mov.b64 	%rd817, {%r477, %r476};
	shf.r.wrap.b32 	%r478, %r475, %r474, 14;
	shf.r.wrap.b32 	%r479, %r474, %r475, 14;
	mov.b64 	%rd818, {%r479, %r478};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r480, %r474, %r475, 23;
	shf.l.wrap.b32 	%r481, %r475, %r474, 23;
	mov.b64 	%rd820, {%r481, %r480};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd2182, %rd2183;
	and.b64  	%rd823, %rd2181, %rd822;
	xor.b64  	%rd824, %rd823, %rd2183;
	add.s64 	%rd825, %rd824, %rd2184;
	add.s64 	%rd826, %rd825, %rd821;
	add.s64 	%rd827, %rd826, %rd2185;
	ld.const.u64 	%rd828, [%rd816];
	add.s64 	%rd829, %rd827, %rd828;
	add.s64 	%rd830, %rd829, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd2177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd2177;
	}
	shf.l.wrap.b32 	%r484, %r483, %r482, 30;
	shf.l.wrap.b32 	%r485, %r482, %r483, 30;
	mov.b64 	%rd831, {%r485, %r484};
	shf.r.wrap.b32 	%r486, %r482, %r483, 28;
	shf.r.wrap.b32 	%r487, %r483, %r482, 28;
	mov.b64 	%rd832, {%r487, %r486};
	xor.b64  	%rd833, %rd832, %rd831;
	shf.l.wrap.b32 	%r488, %r483, %r482, 25;
	shf.l.wrap.b32 	%r489, %r482, %r483, 25;
	mov.b64 	%rd834, {%r489, %r488};
	xor.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd2177, %rd2178;
	and.b64  	%rd837, %rd836, %rd2179;
	and.b64  	%rd838, %rd2177, %rd2178;
	or.b64  	%rd839, %rd837, %rd838;
	add.s64 	%rd840, %rd835, %rd839;
	add.s64 	%rd841, %rd840, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd830;
	}
	shf.r.wrap.b32 	%r492, %r491, %r490, 14;
	shf.r.wrap.b32 	%r493, %r490, %r491, 14;
	mov.b64 	%rd842, {%r493, %r492};
	shf.r.wrap.b32 	%r494, %r491, %r490, 18;
	shf.r.wrap.b32 	%r495, %r490, %r491, 18;
	mov.b64 	%rd843, {%r495, %r494};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r496, %r490, %r491, 23;
	shf.l.wrap.b32 	%r497, %r491, %r490, 23;
	mov.b64 	%rd845, {%r497, %r496};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd2181, %rd2182;
	and.b64  	%rd848, %rd830, %rd847;
	xor.b64  	%rd849, %rd848, %rd2182;
	add.s64 	%rd850, %rd2186, %rd2183;
	ld.const.u64 	%rd851, [%rd816+8];
	add.s64 	%rd852, %rd850, %rd851;
	add.s64 	%rd853, %rd852, %rd849;
	add.s64 	%rd854, %rd853, %rd846;
	add.s64 	%rd855, %rd854, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd841;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 28;
	shf.r.wrap.b32 	%r501, %r498, %r499, 28;
	mov.b64 	%rd856, {%r501, %r500};
	shf.l.wrap.b32 	%r502, %r498, %r499, 30;
	shf.l.wrap.b32 	%r503, %r499, %r498, 30;
	mov.b64 	%rd857, {%r503, %r502};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r504, %r498, %r499, 25;
	shf.l.wrap.b32 	%r505, %r499, %r498, 25;
	mov.b64 	%rd859, {%r505, %r504};
	xor.b64  	%rd860, %rd858, %rd859;
	and.b64  	%rd861, %rd841, %rd2177;
	xor.b64  	%rd862, %rd841, %rd2177;
	and.b64  	%rd863, %rd862, %rd2178;
	or.b64  	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd860, %rd864;
	add.s64 	%rd866, %rd865, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd855;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 14;
	shf.r.wrap.b32 	%r509, %r506, %r507, 14;
	mov.b64 	%rd867, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 18;
	shf.r.wrap.b32 	%r511, %r506, %r507, 18;
	mov.b64 	%rd868, {%r511, %r510};
	xor.b64  	%rd869, %rd867, %rd868;
	shf.l.wrap.b32 	%r512, %r506, %r507, 23;
	shf.l.wrap.b32 	%r513, %r507, %r506, 23;
	mov.b64 	%rd870, {%r513, %r512};
	xor.b64  	%rd871, %rd869, %rd870;
	xor.b64  	%rd872, %rd830, %rd2181;
	and.b64  	%rd873, %rd855, %rd872;
	xor.b64  	%rd874, %rd873, %rd2181;
	add.s64 	%rd875, %rd2187, %rd2182;
	ld.const.u64 	%rd876, [%rd816+16];
	add.s64 	%rd877, %rd875, %rd876;
	add.s64 	%rd878, %rd877, %rd874;
	add.s64 	%rd879, %rd878, %rd871;
	add.s64 	%rd880, %rd879, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd866;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 28;
	shf.r.wrap.b32 	%r517, %r514, %r515, 28;
	mov.b64 	%rd881, {%r517, %r516};
	shf.l.wrap.b32 	%r518, %r514, %r515, 30;
	shf.l.wrap.b32 	%r519, %r515, %r514, 30;
	mov.b64 	%rd882, {%r519, %r518};
	xor.b64  	%rd883, %rd881, %rd882;
	shf.l.wrap.b32 	%r520, %r514, %r515, 25;
	shf.l.wrap.b32 	%r521, %r515, %r514, 25;
	mov.b64 	%rd884, {%r521, %r520};
	xor.b64  	%rd885, %rd883, %rd884;
	and.b64  	%rd886, %rd866, %rd841;
	xor.b64  	%rd887, %rd866, %rd841;
	and.b64  	%rd888, %rd887, %rd2177;
	or.b64  	%rd889, %rd888, %rd886;
	add.s64 	%rd890, %rd885, %rd889;
	add.s64 	%rd891, %rd890, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd880;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 14;
	shf.r.wrap.b32 	%r525, %r522, %r523, 14;
	mov.b64 	%rd892, {%r525, %r524};
	shf.r.wrap.b32 	%r526, %r523, %r522, 18;
	shf.r.wrap.b32 	%r527, %r522, %r523, 18;
	mov.b64 	%rd893, {%r527, %r526};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r528, %r522, %r523, 23;
	shf.l.wrap.b32 	%r529, %r523, %r522, 23;
	mov.b64 	%rd895, {%r529, %r528};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd855, %rd830;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd830;
	add.s64 	%rd900, %rd2188, %rd2181;
	ld.const.u64 	%rd901, [%rd816+24];
	add.s64 	%rd902, %rd900, %rd901;
	add.s64 	%rd903, %rd902, %rd899;
	add.s64 	%rd904, %rd903, %rd896;
	add.s64 	%rd905, %rd904, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd891;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 28;
	shf.r.wrap.b32 	%r533, %r530, %r531, 28;
	mov.b64 	%rd906, {%r533, %r532};
	shf.l.wrap.b32 	%r534, %r530, %r531, 30;
	shf.l.wrap.b32 	%r535, %r531, %r530, 30;
	mov.b64 	%rd907, {%r535, %r534};
	xor.b64  	%rd908, %rd906, %rd907;
	shf.l.wrap.b32 	%r536, %r530, %r531, 25;
	shf.l.wrap.b32 	%r537, %r531, %r530, 25;
	mov.b64 	%rd909, {%r537, %r536};
	xor.b64  	%rd910, %rd908, %rd909;
	and.b64  	%rd911, %rd891, %rd866;
	xor.b64  	%rd912, %rd891, %rd866;
	and.b64  	%rd913, %rd912, %rd841;
	or.b64  	%rd914, %rd913, %rd911;
	add.s64 	%rd915, %rd910, %rd914;
	add.s64 	%rd916, %rd915, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd905;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 14;
	shf.r.wrap.b32 	%r541, %r538, %r539, 14;
	mov.b64 	%rd917, {%r541, %r540};
	shf.r.wrap.b32 	%r542, %r539, %r538, 18;
	shf.r.wrap.b32 	%r543, %r538, %r539, 18;
	mov.b64 	%rd918, {%r543, %r542};
	xor.b64  	%rd919, %rd917, %rd918;
	shf.l.wrap.b32 	%r544, %r538, %r539, 23;
	shf.l.wrap.b32 	%r545, %r539, %r538, 23;
	mov.b64 	%rd920, {%r545, %r544};
	xor.b64  	%rd921, %rd919, %rd920;
	xor.b64  	%rd922, %rd880, %rd855;
	and.b64  	%rd923, %rd905, %rd922;
	xor.b64  	%rd924, %rd923, %rd855;
	add.s64 	%rd925, %rd830, %rd2189;
	ld.const.u64 	%rd926, [%rd816+32];
	add.s64 	%rd927, %rd925, %rd926;
	add.s64 	%rd928, %rd927, %rd924;
	add.s64 	%rd929, %rd928, %rd921;
	add.s64 	%rd930, %rd929, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd916;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 28;
	shf.r.wrap.b32 	%r549, %r546, %r547, 28;
	mov.b64 	%rd931, {%r549, %r548};
	shf.l.wrap.b32 	%r550, %r546, %r547, 30;
	shf.l.wrap.b32 	%r551, %r547, %r546, 30;
	mov.b64 	%rd932, {%r551, %r550};
	xor.b64  	%rd933, %rd931, %rd932;
	shf.l.wrap.b32 	%r552, %r546, %r547, 25;
	shf.l.wrap.b32 	%r553, %r547, %r546, 25;
	mov.b64 	%rd934, {%r553, %r552};
	xor.b64  	%rd935, %rd933, %rd934;
	and.b64  	%rd936, %rd916, %rd891;
	xor.b64  	%rd937, %rd916, %rd891;
	and.b64  	%rd938, %rd937, %rd866;
	or.b64  	%rd939, %rd938, %rd936;
	add.s64 	%rd940, %rd935, %rd939;
	add.s64 	%rd941, %rd940, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd930;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 14;
	shf.r.wrap.b32 	%r557, %r554, %r555, 14;
	mov.b64 	%rd942, {%r557, %r556};
	shf.r.wrap.b32 	%r558, %r555, %r554, 18;
	shf.r.wrap.b32 	%r559, %r554, %r555, 18;
	mov.b64 	%rd943, {%r559, %r558};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r560, %r554, %r555, 23;
	shf.l.wrap.b32 	%r561, %r555, %r554, 23;
	mov.b64 	%rd945, {%r561, %r560};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd905, %rd880;
	and.b64  	%rd948, %rd930, %rd947;
	xor.b64  	%rd949, %rd948, %rd880;
	ld.const.u64 	%rd950, [%rd816+40];
	add.s64 	%rd951, %rd950, %rd2190;
	add.s64 	%rd952, %rd951, %rd855;
	add.s64 	%rd953, %rd952, %rd949;
	add.s64 	%rd954, %rd953, %rd946;
	add.s64 	%rd955, %rd954, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd941;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 28;
	shf.r.wrap.b32 	%r565, %r562, %r563, 28;
	mov.b64 	%rd956, {%r565, %r564};
	shf.l.wrap.b32 	%r566, %r562, %r563, 30;
	shf.l.wrap.b32 	%r567, %r563, %r562, 30;
	mov.b64 	%rd957, {%r567, %r566};
	xor.b64  	%rd958, %rd956, %rd957;
	shf.l.wrap.b32 	%r568, %r562, %r563, 25;
	shf.l.wrap.b32 	%r569, %r563, %r562, 25;
	mov.b64 	%rd959, {%r569, %r568};
	xor.b64  	%rd960, %rd958, %rd959;
	and.b64  	%rd961, %rd941, %rd916;
	xor.b64  	%rd962, %rd941, %rd916;
	and.b64  	%rd963, %rd962, %rd891;
	or.b64  	%rd964, %rd963, %rd961;
	add.s64 	%rd965, %rd960, %rd964;
	add.s64 	%rd966, %rd965, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd955;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 14;
	shf.r.wrap.b32 	%r573, %r570, %r571, 14;
	mov.b64 	%rd967, {%r573, %r572};
	shf.r.wrap.b32 	%r574, %r571, %r570, 18;
	shf.r.wrap.b32 	%r575, %r570, %r571, 18;
	mov.b64 	%rd968, {%r575, %r574};
	xor.b64  	%rd969, %rd967, %rd968;
	shf.l.wrap.b32 	%r576, %r570, %r571, 23;
	shf.l.wrap.b32 	%r577, %r571, %r570, 23;
	mov.b64 	%rd970, {%r577, %r576};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd930, %rd905;
	and.b64  	%rd973, %rd955, %rd972;
	xor.b64  	%rd974, %rd973, %rd905;
	ld.const.u64 	%rd975, [%rd816+48];
	add.s64 	%rd976, %rd975, %rd2191;
	add.s64 	%rd977, %rd976, %rd880;
	add.s64 	%rd978, %rd977, %rd974;
	add.s64 	%rd979, %rd978, %rd971;
	add.s64 	%rd980, %rd979, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd966;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 28;
	shf.r.wrap.b32 	%r581, %r578, %r579, 28;
	mov.b64 	%rd981, {%r581, %r580};
	shf.l.wrap.b32 	%r582, %r578, %r579, 30;
	shf.l.wrap.b32 	%r583, %r579, %r578, 30;
	mov.b64 	%rd982, {%r583, %r582};
	xor.b64  	%rd983, %rd981, %rd982;
	shf.l.wrap.b32 	%r584, %r578, %r579, 25;
	shf.l.wrap.b32 	%r585, %r579, %r578, 25;
	mov.b64 	%rd984, {%r585, %r584};
	xor.b64  	%rd985, %rd983, %rd984;
	and.b64  	%rd986, %rd966, %rd941;
	xor.b64  	%rd987, %rd966, %rd941;
	and.b64  	%rd988, %rd987, %rd916;
	or.b64  	%rd989, %rd988, %rd986;
	add.s64 	%rd990, %rd985, %rd989;
	add.s64 	%rd991, %rd990, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd980;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 14;
	shf.r.wrap.b32 	%r589, %r586, %r587, 14;
	mov.b64 	%rd992, {%r589, %r588};
	shf.r.wrap.b32 	%r590, %r587, %r586, 18;
	shf.r.wrap.b32 	%r591, %r586, %r587, 18;
	mov.b64 	%rd993, {%r591, %r590};
	xor.b64  	%rd994, %rd992, %rd993;
	shf.l.wrap.b32 	%r592, %r586, %r587, 23;
	shf.l.wrap.b32 	%r593, %r587, %r586, 23;
	mov.b64 	%rd995, {%r593, %r592};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd955, %rd930;
	and.b64  	%rd998, %rd980, %rd997;
	xor.b64  	%rd999, %rd998, %rd930;
	ld.const.u64 	%rd1000, [%rd816+56];
	add.s64 	%rd1001, %rd1000, %rd2192;
	add.s64 	%rd1002, %rd1001, %rd905;
	add.s64 	%rd1003, %rd1002, %rd999;
	add.s64 	%rd1004, %rd1003, %rd996;
	add.s64 	%rd1005, %rd1004, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd991;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 28;
	shf.r.wrap.b32 	%r597, %r594, %r595, 28;
	mov.b64 	%rd1006, {%r597, %r596};
	shf.l.wrap.b32 	%r598, %r594, %r595, 30;
	shf.l.wrap.b32 	%r599, %r595, %r594, 30;
	mov.b64 	%rd1007, {%r599, %r598};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r600, %r594, %r595, 25;
	shf.l.wrap.b32 	%r601, %r595, %r594, 25;
	mov.b64 	%rd1009, {%r601, %r600};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	and.b64  	%rd1011, %rd991, %rd966;
	xor.b64  	%rd1012, %rd991, %rd966;
	and.b64  	%rd1013, %rd1012, %rd941;
	or.b64  	%rd1014, %rd1013, %rd1011;
	add.s64 	%rd1015, %rd1010, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd1005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd1005;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 14;
	shf.r.wrap.b32 	%r605, %r602, %r603, 14;
	mov.b64 	%rd1017, {%r605, %r604};
	shf.r.wrap.b32 	%r606, %r603, %r602, 18;
	shf.r.wrap.b32 	%r607, %r602, %r603, 18;
	mov.b64 	%rd1018, {%r607, %r606};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	shf.l.wrap.b32 	%r608, %r602, %r603, 23;
	shf.l.wrap.b32 	%r609, %r603, %r602, 23;
	mov.b64 	%rd1020, {%r609, %r608};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd980, %rd955;
	and.b64  	%rd1023, %rd1005, %rd1022;
	xor.b64  	%rd1024, %rd1023, %rd955;
	ld.const.u64 	%rd1025, [%rd816+64];
	add.s64 	%rd1026, %rd1025, %rd2176;
	add.s64 	%rd1027, %rd1026, %rd930;
	add.s64 	%rd1028, %rd1027, %rd1024;
	add.s64 	%rd1029, %rd1028, %rd1021;
	add.s64 	%rd1030, %rd1029, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd1016;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 28;
	shf.r.wrap.b32 	%r613, %r610, %r611, 28;
	mov.b64 	%rd1031, {%r613, %r612};
	shf.l.wrap.b32 	%r614, %r610, %r611, 30;
	shf.l.wrap.b32 	%r615, %r611, %r610, 30;
	mov.b64 	%rd1032, {%r615, %r614};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	shf.l.wrap.b32 	%r616, %r610, %r611, 25;
	shf.l.wrap.b32 	%r617, %r611, %r610, 25;
	mov.b64 	%rd1034, {%r617, %r616};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	and.b64  	%rd1036, %rd1016, %rd991;
	xor.b64  	%rd1037, %rd1016, %rd991;
	and.b64  	%rd1038, %rd1037, %rd966;
	or.b64  	%rd1039, %rd1038, %rd1036;
	add.s64 	%rd1040, %rd1035, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd1030;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 14;
	shf.r.wrap.b32 	%r621, %r618, %r619, 14;
	mov.b64 	%rd1042, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 18;
	shf.r.wrap.b32 	%r623, %r618, %r619, 18;
	mov.b64 	%rd1043, {%r623, %r622};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	shf.l.wrap.b32 	%r624, %r618, %r619, 23;
	shf.l.wrap.b32 	%r625, %r619, %r618, 23;
	mov.b64 	%rd1045, {%r625, %r624};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	xor.b64  	%rd1047, %rd1005, %rd980;
	and.b64  	%rd1048, %rd1030, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd980;
	ld.const.u64 	%rd1050, [%rd816+72];
	add.s64 	%rd1051, %rd1050, %rd2175;
	add.s64 	%rd1052, %rd1051, %rd955;
	add.s64 	%rd1053, %rd1052, %rd1049;
	add.s64 	%rd1054, %rd1053, %rd1046;
	add.s64 	%rd1055, %rd1054, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd1041;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 28;
	shf.r.wrap.b32 	%r629, %r626, %r627, 28;
	mov.b64 	%rd1056, {%r629, %r628};
	shf.l.wrap.b32 	%r630, %r626, %r627, 30;
	shf.l.wrap.b32 	%r631, %r627, %r626, 30;
	mov.b64 	%rd1057, {%r631, %r630};
	xor.b64  	%rd1058, %rd1056, %rd1057;
	shf.l.wrap.b32 	%r632, %r626, %r627, 25;
	shf.l.wrap.b32 	%r633, %r627, %r626, 25;
	mov.b64 	%rd1059, {%r633, %r632};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	and.b64  	%rd1061, %rd1041, %rd1016;
	xor.b64  	%rd1062, %rd1041, %rd1016;
	and.b64  	%rd1063, %rd1062, %rd991;
	or.b64  	%rd1064, %rd1063, %rd1061;
	add.s64 	%rd1065, %rd1060, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd1055;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 14;
	shf.r.wrap.b32 	%r637, %r634, %r635, 14;
	mov.b64 	%rd1067, {%r637, %r636};
	shf.r.wrap.b32 	%r638, %r635, %r634, 18;
	shf.r.wrap.b32 	%r639, %r634, %r635, 18;
	mov.b64 	%rd1068, {%r639, %r638};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	shf.l.wrap.b32 	%r640, %r634, %r635, 23;
	shf.l.wrap.b32 	%r641, %r635, %r634, 23;
	mov.b64 	%rd1070, {%r641, %r640};
	xor.b64  	%rd1071, %rd1069, %rd1070;
	xor.b64  	%rd1072, %rd1030, %rd1005;
	and.b64  	%rd1073, %rd1055, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1005;
	ld.const.u64 	%rd1075, [%rd816+80];
	add.s64 	%rd1076, %rd1075, %rd2174;
	add.s64 	%rd1077, %rd1076, %rd980;
	add.s64 	%rd1078, %rd1077, %rd1074;
	add.s64 	%rd1079, %rd1078, %rd1071;
	add.s64 	%rd1080, %rd1079, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd1066;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 28;
	shf.r.wrap.b32 	%r645, %r642, %r643, 28;
	mov.b64 	%rd1081, {%r645, %r644};
	shf.l.wrap.b32 	%r646, %r642, %r643, 30;
	shf.l.wrap.b32 	%r647, %r643, %r642, 30;
	mov.b64 	%rd1082, {%r647, %r646};
	xor.b64  	%rd1083, %rd1081, %rd1082;
	shf.l.wrap.b32 	%r648, %r642, %r643, 25;
	shf.l.wrap.b32 	%r649, %r643, %r642, 25;
	mov.b64 	%rd1084, {%r649, %r648};
	xor.b64  	%rd1085, %rd1083, %rd1084;
	and.b64  	%rd1086, %rd1066, %rd1041;
	xor.b64  	%rd1087, %rd1066, %rd1041;
	and.b64  	%rd1088, %rd1087, %rd1016;
	or.b64  	%rd1089, %rd1088, %rd1086;
	add.s64 	%rd1090, %rd1085, %rd1089;
	add.s64 	%rd1091, %rd1090, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd1080;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 14;
	shf.r.wrap.b32 	%r653, %r650, %r651, 14;
	mov.b64 	%rd1092, {%r653, %r652};
	shf.r.wrap.b32 	%r654, %r651, %r650, 18;
	shf.r.wrap.b32 	%r655, %r650, %r651, 18;
	mov.b64 	%rd1093, {%r655, %r654};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	shf.l.wrap.b32 	%r656, %r650, %r651, 23;
	shf.l.wrap.b32 	%r657, %r651, %r650, 23;
	mov.b64 	%rd1095, {%r657, %r656};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	xor.b64  	%rd1097, %rd1055, %rd1030;
	and.b64  	%rd1098, %rd1080, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1030;
	ld.const.u64 	%rd1100, [%rd816+88];
	add.s64 	%rd1101, %rd1100, %rd2173;
	add.s64 	%rd1102, %rd1101, %rd1005;
	add.s64 	%rd1103, %rd1102, %rd1099;
	add.s64 	%rd1104, %rd1103, %rd1096;
	add.s64 	%rd1105, %rd1104, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd1091;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 28;
	shf.r.wrap.b32 	%r661, %r658, %r659, 28;
	mov.b64 	%rd1106, {%r661, %r660};
	shf.l.wrap.b32 	%r662, %r658, %r659, 30;
	shf.l.wrap.b32 	%r663, %r659, %r658, 30;
	mov.b64 	%rd1107, {%r663, %r662};
	xor.b64  	%rd1108, %rd1106, %rd1107;
	shf.l.wrap.b32 	%r664, %r658, %r659, 25;
	shf.l.wrap.b32 	%r665, %r659, %r658, 25;
	mov.b64 	%rd1109, {%r665, %r664};
	xor.b64  	%rd1110, %rd1108, %rd1109;
	and.b64  	%rd1111, %rd1091, %rd1066;
	xor.b64  	%rd1112, %rd1091, %rd1066;
	and.b64  	%rd1113, %rd1112, %rd1041;
	or.b64  	%rd1114, %rd1113, %rd1111;
	add.s64 	%rd1115, %rd1110, %rd1114;
	add.s64 	%rd1116, %rd1115, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd1105;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 14;
	shf.r.wrap.b32 	%r669, %r666, %r667, 14;
	mov.b64 	%rd1117, {%r669, %r668};
	shf.r.wrap.b32 	%r670, %r667, %r666, 18;
	shf.r.wrap.b32 	%r671, %r666, %r667, 18;
	mov.b64 	%rd1118, {%r671, %r670};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	shf.l.wrap.b32 	%r672, %r666, %r667, 23;
	shf.l.wrap.b32 	%r673, %r667, %r666, 23;
	mov.b64 	%rd1120, {%r673, %r672};
	xor.b64  	%rd1121, %rd1119, %rd1120;
	xor.b64  	%rd1122, %rd1080, %rd1055;
	and.b64  	%rd1123, %rd1105, %rd1122;
	xor.b64  	%rd1124, %rd1123, %rd1055;
	ld.const.u64 	%rd1125, [%rd816+96];
	add.s64 	%rd1126, %rd1125, %rd2172;
	add.s64 	%rd1127, %rd1126, %rd1030;
	add.s64 	%rd1128, %rd1127, %rd1124;
	add.s64 	%rd1129, %rd1128, %rd1121;
	add.s64 	%rd2184, %rd1129, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd1116;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 28;
	shf.r.wrap.b32 	%r677, %r674, %r675, 28;
	mov.b64 	%rd1130, {%r677, %r676};
	shf.l.wrap.b32 	%r678, %r674, %r675, 30;
	shf.l.wrap.b32 	%r679, %r675, %r674, 30;
	mov.b64 	%rd1131, {%r679, %r678};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	shf.l.wrap.b32 	%r680, %r674, %r675, 25;
	shf.l.wrap.b32 	%r681, %r675, %r674, 25;
	mov.b64 	%rd1133, {%r681, %r680};
	xor.b64  	%rd1134, %rd1132, %rd1133;
	and.b64  	%rd1135, %rd1116, %rd1091;
	xor.b64  	%rd1136, %rd1116, %rd1091;
	and.b64  	%rd1137, %rd1136, %rd1066;
	or.b64  	%rd1138, %rd1137, %rd1135;
	add.s64 	%rd1139, %rd1134, %rd1138;
	add.s64 	%rd2180, %rd1139, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd2184;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 14;
	shf.r.wrap.b32 	%r685, %r682, %r683, 14;
	mov.b64 	%rd1140, {%r685, %r684};
	shf.r.wrap.b32 	%r686, %r683, %r682, 18;
	shf.r.wrap.b32 	%r687, %r682, %r683, 18;
	mov.b64 	%rd1141, {%r687, %r686};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	shf.l.wrap.b32 	%r688, %r682, %r683, 23;
	shf.l.wrap.b32 	%r689, %r683, %r682, 23;
	mov.b64 	%rd1143, {%r689, %r688};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	xor.b64  	%rd1145, %rd1105, %rd1080;
	and.b64  	%rd1146, %rd2184, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1080;
	ld.const.u64 	%rd1148, [%rd816+104];
	add.s64 	%rd1149, %rd1148, %rd2171;
	add.s64 	%rd1150, %rd1149, %rd1055;
	add.s64 	%rd1151, %rd1150, %rd1147;
	add.s64 	%rd1152, %rd1151, %rd1144;
	add.s64 	%rd2183, %rd1152, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd2180;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 28;
	shf.r.wrap.b32 	%r693, %r690, %r691, 28;
	mov.b64 	%rd1153, {%r693, %r692};
	shf.l.wrap.b32 	%r694, %r690, %r691, 30;
	shf.l.wrap.b32 	%r695, %r691, %r690, 30;
	mov.b64 	%rd1154, {%r695, %r694};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	shf.l.wrap.b32 	%r696, %r690, %r691, 25;
	shf.l.wrap.b32 	%r697, %r691, %r690, 25;
	mov.b64 	%rd1156, {%r697, %r696};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	and.b64  	%rd1158, %rd2180, %rd1116;
	xor.b64  	%rd1159, %rd2180, %rd1116;
	and.b64  	%rd1160, %rd1159, %rd1091;
	or.b64  	%rd1161, %rd1160, %rd1158;
	add.s64 	%rd1162, %rd1157, %rd1161;
	add.s64 	%rd2179, %rd1162, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd2183;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 14;
	shf.r.wrap.b32 	%r701, %r698, %r699, 14;
	mov.b64 	%rd1163, {%r701, %r700};
	shf.r.wrap.b32 	%r702, %r699, %r698, 18;
	shf.r.wrap.b32 	%r703, %r698, %r699, 18;
	mov.b64 	%rd1164, {%r703, %r702};
	xor.b64  	%rd1165, %rd1163, %rd1164;
	shf.l.wrap.b32 	%r704, %r698, %r699, 23;
	shf.l.wrap.b32 	%r705, %r699, %r698, 23;
	mov.b64 	%rd1166, {%r705, %r704};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd2184, %rd1105;
	and.b64  	%rd1169, %rd2183, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1105;
	ld.const.u64 	%rd1171, [%rd816+112];
	add.s64 	%rd1172, %rd1171, %rd2170;
	add.s64 	%rd1173, %rd1172, %rd1080;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd2182, %rd1175, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd2179;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 28;
	shf.r.wrap.b32 	%r709, %r706, %r707, 28;
	mov.b64 	%rd1176, {%r709, %r708};
	shf.l.wrap.b32 	%r710, %r706, %r707, 30;
	shf.l.wrap.b32 	%r711, %r707, %r706, 30;
	mov.b64 	%rd1177, {%r711, %r710};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	shf.l.wrap.b32 	%r712, %r706, %r707, 25;
	shf.l.wrap.b32 	%r713, %r707, %r706, 25;
	mov.b64 	%rd1179, {%r713, %r712};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	and.b64  	%rd1181, %rd2179, %rd2180;
	xor.b64  	%rd1182, %rd2179, %rd2180;
	and.b64  	%rd1183, %rd1182, %rd1116;
	or.b64  	%rd1184, %rd1183, %rd1181;
	add.s64 	%rd1185, %rd1180, %rd1184;
	add.s64 	%rd2178, %rd1185, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd2182;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 14;
	shf.r.wrap.b32 	%r717, %r714, %r715, 14;
	mov.b64 	%rd1186, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r715, %r714, 18;
	shf.r.wrap.b32 	%r719, %r714, %r715, 18;
	mov.b64 	%rd1187, {%r719, %r718};
	xor.b64  	%rd1188, %rd1186, %rd1187;
	shf.l.wrap.b32 	%r720, %r714, %r715, 23;
	shf.l.wrap.b32 	%r721, %r715, %r714, 23;
	mov.b64 	%rd1189, {%r721, %r720};
	xor.b64  	%rd1190, %rd1188, %rd1189;
	xor.b64  	%rd1191, %rd2183, %rd2184;
	and.b64  	%rd1192, %rd2182, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd2184;
	ld.const.u64 	%rd1194, [%rd816+120];
	add.s64 	%rd1195, %rd1194, %rd2169;
	add.s64 	%rd1196, %rd1195, %rd1105;
	add.s64 	%rd1197, %rd1196, %rd1193;
	add.s64 	%rd1198, %rd1197, %rd1190;
	add.s64 	%rd2181, %rd1198, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd2178;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 28;
	shf.r.wrap.b32 	%r725, %r722, %r723, 28;
	mov.b64 	%rd1199, {%r725, %r724};
	shf.l.wrap.b32 	%r726, %r722, %r723, 30;
	shf.l.wrap.b32 	%r727, %r723, %r722, 30;
	mov.b64 	%rd1200, {%r727, %r726};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	shf.l.wrap.b32 	%r728, %r722, %r723, 25;
	shf.l.wrap.b32 	%r729, %r723, %r722, 25;
	mov.b64 	%rd1202, {%r729, %r728};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	and.b64  	%rd1204, %rd2178, %rd2179;
	xor.b64  	%rd1205, %rd2178, %rd2179;
	and.b64  	%rd1206, %rd1205, %rd2180;
	or.b64  	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1203, %rd1207;
	add.s64 	%rd2177, %rd1208, %rd1198;
	add.s32 	%r1414, %r1414, 16;
	setp.lt.s32	%p3, %r1414, 80;
	@%p3 bra 	BB4_4;

	add.s64 	%rd2209, %rd2177, %rd12;
	add.s64 	%rd1217, %rd53, %rd2209;
	add.s64 	%rd1218, %rd1217, %rd7;
	add.s64 	%rd1219, %rd1218, %rd5;
	add.s64 	%rd1220, %rd54, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd1219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd1219;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 14;
	shf.r.wrap.b32 	%r734, %r731, %r732, 14;
	mov.b64 	%rd1221, {%r734, %r733};
	shf.r.wrap.b32 	%r735, %r732, %r731, 18;
	shf.r.wrap.b32 	%r736, %r731, %r732, 18;
	mov.b64 	%rd1222, {%r736, %r735};
	xor.b64  	%rd1223, %rd1221, %rd1222;
	shf.l.wrap.b32 	%r737, %r731, %r732, 23;
	shf.l.wrap.b32 	%r738, %r732, %r731, 23;
	mov.b64 	%rd1224, {%r738, %r737};
	xor.b64  	%rd1225, %rd1223, %rd1224;
	xor.b64  	%rd1226, %rd30, %rd31;
	and.b64  	%rd1227, %rd1219, %rd1226;
	xor.b64  	%rd1228, %rd1227, %rd30;
	add.s64 	%rd2210, %rd2178, %rd11;
	add.s64 	%rd1229, %rd2210, %rd29;
	add.s64 	%rd1230, %rd1229, %rd14;
	add.s64 	%rd1231, %rd1230, %rd1228;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd34;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1220;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 28;
	shf.r.wrap.b32 	%r742, %r739, %r740, 28;
	mov.b64 	%rd1234, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 30;
	shf.l.wrap.b32 	%r744, %r740, %r739, 30;
	mov.b64 	%rd1235, {%r744, %r743};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	shf.l.wrap.b32 	%r745, %r739, %r740, 25;
	shf.l.wrap.b32 	%r746, %r740, %r739, 25;
	mov.b64 	%rd1237, {%r746, %r745};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	and.b64  	%rd1239, %rd1220, %rd33;
	xor.b64  	%rd1240, %rd1220, %rd33;
	and.b64  	%rd1241, %rd1240, %rd32;
	or.b64  	%rd1242, %rd1241, %rd1239;
	add.s64 	%rd1243, %rd1238, %rd1242;
	add.s64 	%rd1244, %rd1243, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1233;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 14;
	shf.r.wrap.b32 	%r750, %r747, %r748, 14;
	mov.b64 	%rd1245, {%r750, %r749};
	shf.r.wrap.b32 	%r751, %r748, %r747, 18;
	shf.r.wrap.b32 	%r752, %r747, %r748, 18;
	mov.b64 	%rd1246, {%r752, %r751};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	shf.l.wrap.b32 	%r753, %r747, %r748, 23;
	shf.l.wrap.b32 	%r754, %r748, %r747, 23;
	mov.b64 	%rd1248, {%r754, %r753};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	xor.b64  	%rd1250, %rd1219, %rd31;
	and.b64  	%rd1251, %rd1233, %rd1250;
	xor.b64  	%rd1252, %rd1251, %rd31;
	add.s64 	%rd2211, %rd2179, %rd13;
	add.s64 	%rd1253, %rd2211, %rd30;
	add.s64 	%rd1254, %rd1253, %rd15;
	add.s64 	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1255, %rd1249;
	add.s64 	%rd1257, %rd1256, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd1244;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 28;
	shf.r.wrap.b32 	%r758, %r755, %r756, 28;
	mov.b64 	%rd1258, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 30;
	shf.l.wrap.b32 	%r760, %r756, %r755, 30;
	mov.b64 	%rd1259, {%r760, %r759};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	shf.l.wrap.b32 	%r761, %r755, %r756, 25;
	shf.l.wrap.b32 	%r762, %r756, %r755, 25;
	mov.b64 	%rd1261, {%r762, %r761};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	and.b64  	%rd1263, %rd1244, %rd1220;
	xor.b64  	%rd1264, %rd1244, %rd1220;
	and.b64  	%rd1265, %rd1264, %rd33;
	or.b64  	%rd1266, %rd1265, %rd1263;
	add.s64 	%rd1267, %rd1262, %rd1266;
	add.s64 	%rd1268, %rd1267, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1257;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 14;
	shf.r.wrap.b32 	%r766, %r763, %r764, 14;
	mov.b64 	%rd1269, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r764, %r763, 18;
	shf.r.wrap.b32 	%r768, %r763, %r764, 18;
	mov.b64 	%rd1270, {%r768, %r767};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	shf.l.wrap.b32 	%r769, %r763, %r764, 23;
	shf.l.wrap.b32 	%r770, %r764, %r763, 23;
	mov.b64 	%rd1272, {%r770, %r769};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	xor.b64  	%rd1274, %rd1233, %rd1219;
	and.b64  	%rd1275, %rd1257, %rd1274;
	xor.b64  	%rd1276, %rd1275, %rd1219;
	add.s64 	%rd2212, %rd2180, %rd3;
	add.s64 	%rd1277, %rd2212, %rd31;
	add.s64 	%rd1278, %rd1277, %rd16;
	add.s64 	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1273;
	add.s64 	%rd1281, %rd1280, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd1268;
	}
	shf.r.wrap.b32 	%r773, %r772, %r771, 28;
	shf.r.wrap.b32 	%r774, %r771, %r772, 28;
	mov.b64 	%rd1282, {%r774, %r773};
	shf.l.wrap.b32 	%r775, %r771, %r772, 30;
	shf.l.wrap.b32 	%r776, %r772, %r771, 30;
	mov.b64 	%rd1283, {%r776, %r775};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	shf.l.wrap.b32 	%r777, %r771, %r772, 25;
	shf.l.wrap.b32 	%r778, %r772, %r771, 25;
	mov.b64 	%rd1285, {%r778, %r777};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	and.b64  	%rd1287, %rd1268, %rd1244;
	xor.b64  	%rd1288, %rd1268, %rd1244;
	and.b64  	%rd1289, %rd1288, %rd1220;
	or.b64  	%rd1290, %rd1289, %rd1287;
	add.s64 	%rd1291, %rd1286, %rd1290;
	add.s64 	%rd1292, %rd1291, %rd1280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1281;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 14;
	shf.r.wrap.b32 	%r782, %r779, %r780, 14;
	mov.b64 	%rd1293, {%r782, %r781};
	shf.r.wrap.b32 	%r783, %r780, %r779, 18;
	shf.r.wrap.b32 	%r784, %r779, %r780, 18;
	mov.b64 	%rd1294, {%r784, %r783};
	xor.b64  	%rd1295, %rd1293, %rd1294;
	shf.l.wrap.b32 	%r785, %r779, %r780, 23;
	shf.l.wrap.b32 	%r786, %r780, %r779, 23;
	mov.b64 	%rd1296, {%r786, %r785};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd1257, %rd1233;
	and.b64  	%rd1299, %rd1281, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1233;
	add.s64 	%rd2213, %rd2181, %rd10;
	add.s64 	%rd1301, %rd1219, %rd2213;
	add.s64 	%rd1302, %rd1301, %rd17;
	add.s64 	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1303, %rd1297;
	add.s64 	%rd1305, %rd1304, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd1292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd1292;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 28;
	shf.r.wrap.b32 	%r790, %r787, %r788, 28;
	mov.b64 	%rd1306, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 30;
	shf.l.wrap.b32 	%r792, %r788, %r787, 30;
	mov.b64 	%rd1307, {%r792, %r791};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	shf.l.wrap.b32 	%r793, %r787, %r788, 25;
	shf.l.wrap.b32 	%r794, %r788, %r787, 25;
	mov.b64 	%rd1309, {%r794, %r793};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	and.b64  	%rd1311, %rd1292, %rd1268;
	xor.b64  	%rd1312, %rd1292, %rd1268;
	and.b64  	%rd1313, %rd1312, %rd1244;
	or.b64  	%rd1314, %rd1313, %rd1311;
	add.s64 	%rd1315, %rd1310, %rd1314;
	add.s64 	%rd1316, %rd1315, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd1305;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 14;
	shf.r.wrap.b32 	%r798, %r795, %r796, 14;
	mov.b64 	%rd1317, {%r798, %r797};
	shf.r.wrap.b32 	%r799, %r796, %r795, 18;
	shf.r.wrap.b32 	%r800, %r795, %r796, 18;
	mov.b64 	%rd1318, {%r800, %r799};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	shf.l.wrap.b32 	%r801, %r795, %r796, 23;
	shf.l.wrap.b32 	%r802, %r796, %r795, 23;
	mov.b64 	%rd1320, {%r802, %r801};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	xor.b64  	%rd1322, %rd1281, %rd1257;
	and.b64  	%rd1323, %rd1305, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1257;
	add.s64 	%rd2214, %rd2182, %rd9;
	add.s64 	%rd1325, %rd18, %rd2214;
	add.s64 	%rd1326, %rd1325, %rd1233;
	add.s64 	%rd1327, %rd1326, %rd1324;
	add.s64 	%rd1328, %rd1327, %rd1321;
	add.s64 	%rd1329, %rd1328, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd1316;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 28;
	shf.r.wrap.b32 	%r806, %r803, %r804, 28;
	mov.b64 	%rd1330, {%r806, %r805};
	shf.l.wrap.b32 	%r807, %r803, %r804, 30;
	shf.l.wrap.b32 	%r808, %r804, %r803, 30;
	mov.b64 	%rd1331, {%r808, %r807};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	shf.l.wrap.b32 	%r809, %r803, %r804, 25;
	shf.l.wrap.b32 	%r810, %r804, %r803, 25;
	mov.b64 	%rd1333, {%r810, %r809};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	and.b64  	%rd1335, %rd1316, %rd1292;
	xor.b64  	%rd1336, %rd1316, %rd1292;
	and.b64  	%rd1337, %rd1336, %rd1268;
	or.b64  	%rd1338, %rd1337, %rd1335;
	add.s64 	%rd1339, %rd1334, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r811,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd1329;
	}
	shf.r.wrap.b32 	%r813, %r812, %r811, 14;
	shf.r.wrap.b32 	%r814, %r811, %r812, 14;
	mov.b64 	%rd1341, {%r814, %r813};
	shf.r.wrap.b32 	%r815, %r812, %r811, 18;
	shf.r.wrap.b32 	%r816, %r811, %r812, 18;
	mov.b64 	%rd1342, {%r816, %r815};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	shf.l.wrap.b32 	%r817, %r811, %r812, 23;
	shf.l.wrap.b32 	%r818, %r812, %r811, 23;
	mov.b64 	%rd1344, {%r818, %r817};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd1305, %rd1281;
	and.b64  	%rd1347, %rd1329, %rd1346;
	xor.b64  	%rd1348, %rd1347, %rd1281;
	add.s64 	%rd2215, %rd2183, %rd8;
	add.s64 	%rd1349, %rd19, %rd2215;
	add.s64 	%rd1350, %rd1349, %rd1257;
	add.s64 	%rd1351, %rd1350, %rd1348;
	add.s64 	%rd1352, %rd1351, %rd1345;
	add.s64 	%rd1353, %rd1352, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1340;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 28;
	shf.r.wrap.b32 	%r822, %r819, %r820, 28;
	mov.b64 	%rd1354, {%r822, %r821};
	shf.l.wrap.b32 	%r823, %r819, %r820, 30;
	shf.l.wrap.b32 	%r824, %r820, %r819, 30;
	mov.b64 	%rd1355, {%r824, %r823};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	shf.l.wrap.b32 	%r825, %r819, %r820, 25;
	shf.l.wrap.b32 	%r826, %r820, %r819, 25;
	mov.b64 	%rd1357, {%r826, %r825};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	and.b64  	%rd1359, %rd1340, %rd1316;
	xor.b64  	%rd1360, %rd1340, %rd1316;
	and.b64  	%rd1361, %rd1360, %rd1292;
	or.b64  	%rd1362, %rd1361, %rd1359;
	add.s64 	%rd1363, %rd1358, %rd1362;
	add.s64 	%rd1364, %rd1363, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1353;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 14;
	shf.r.wrap.b32 	%r830, %r827, %r828, 14;
	mov.b64 	%rd1365, {%r830, %r829};
	shf.r.wrap.b32 	%r831, %r828, %r827, 18;
	shf.r.wrap.b32 	%r832, %r827, %r828, 18;
	mov.b64 	%rd1366, {%r832, %r831};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	shf.l.wrap.b32 	%r833, %r827, %r828, 23;
	shf.l.wrap.b32 	%r834, %r828, %r827, 23;
	mov.b64 	%rd1368, {%r834, %r833};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1329, %rd1305;
	and.b64  	%rd1371, %rd1353, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd1305;
	add.s64 	%rd2216, %rd2184, %rd4;
	add.s64 	%rd1373, %rd20, %rd2216;
	add.s64 	%rd1374, %rd1373, %rd1281;
	add.s64 	%rd1375, %rd1374, %rd1372;
	add.s64 	%rd1376, %rd1375, %rd1369;
	add.s64 	%rd1377, %rd1376, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1364;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 28;
	shf.r.wrap.b32 	%r838, %r835, %r836, 28;
	mov.b64 	%rd1378, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 30;
	shf.l.wrap.b32 	%r840, %r836, %r835, 30;
	mov.b64 	%rd1379, {%r840, %r839};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	shf.l.wrap.b32 	%r841, %r835, %r836, 25;
	shf.l.wrap.b32 	%r842, %r836, %r835, 25;
	mov.b64 	%rd1381, {%r842, %r841};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	and.b64  	%rd1383, %rd1364, %rd1340;
	xor.b64  	%rd1384, %rd1364, %rd1340;
	and.b64  	%rd1385, %rd1384, %rd1316;
	or.b64  	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1382, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1377;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 14;
	shf.r.wrap.b32 	%r846, %r843, %r844, 14;
	mov.b64 	%rd1389, {%r846, %r845};
	shf.r.wrap.b32 	%r847, %r844, %r843, 18;
	shf.r.wrap.b32 	%r848, %r843, %r844, 18;
	mov.b64 	%rd1390, {%r848, %r847};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shf.l.wrap.b32 	%r849, %r843, %r844, 23;
	shf.l.wrap.b32 	%r850, %r844, %r843, 23;
	mov.b64 	%rd1392, {%r850, %r849};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1353, %rd1329;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1329;
	add.s64 	%rd1397, %rd21, %rd1305;
	add.s64 	%rd1398, %rd1397, %rd1396;
	add.s64 	%rd1399, %rd1398, %rd1393;
	add.s64 	%rd1400, %rd1399, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd1388;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 28;
	shf.r.wrap.b32 	%r854, %r851, %r852, 28;
	mov.b64 	%rd1401, {%r854, %r853};
	shf.l.wrap.b32 	%r855, %r851, %r852, 30;
	shf.l.wrap.b32 	%r856, %r852, %r851, 30;
	mov.b64 	%rd1402, {%r856, %r855};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	shf.l.wrap.b32 	%r857, %r851, %r852, 25;
	shf.l.wrap.b32 	%r858, %r852, %r851, 25;
	mov.b64 	%rd1404, {%r858, %r857};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	and.b64  	%rd1406, %rd1388, %rd1364;
	xor.b64  	%rd1407, %rd1388, %rd1364;
	and.b64  	%rd1408, %rd1407, %rd1340;
	or.b64  	%rd1409, %rd1408, %rd1406;
	add.s64 	%rd1410, %rd1405, %rd1409;
	add.s64 	%rd1411, %rd1410, %rd1399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd1400;
	}
	shf.r.wrap.b32 	%r861, %r860, %r859, 14;
	shf.r.wrap.b32 	%r862, %r859, %r860, 14;
	mov.b64 	%rd1412, {%r862, %r861};
	shf.r.wrap.b32 	%r863, %r860, %r859, 18;
	shf.r.wrap.b32 	%r864, %r859, %r860, 18;
	mov.b64 	%rd1413, {%r864, %r863};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	shf.l.wrap.b32 	%r865, %r859, %r860, 23;
	shf.l.wrap.b32 	%r866, %r860, %r859, 23;
	mov.b64 	%rd1415, {%r866, %r865};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	xor.b64  	%rd1417, %rd1377, %rd1353;
	and.b64  	%rd1418, %rd1400, %rd1417;
	xor.b64  	%rd1419, %rd1418, %rd1353;
	add.s64 	%rd1420, %rd1329, %rd22;
	add.s64 	%rd1421, %rd1420, %rd1419;
	add.s64 	%rd1422, %rd1421, %rd1416;
	add.s64 	%rd1423, %rd1422, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd1411;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 28;
	shf.r.wrap.b32 	%r870, %r867, %r868, 28;
	mov.b64 	%rd1424, {%r870, %r869};
	shf.l.wrap.b32 	%r871, %r867, %r868, 30;
	shf.l.wrap.b32 	%r872, %r868, %r867, 30;
	mov.b64 	%rd1425, {%r872, %r871};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	shf.l.wrap.b32 	%r873, %r867, %r868, 25;
	shf.l.wrap.b32 	%r874, %r868, %r867, 25;
	mov.b64 	%rd1427, {%r874, %r873};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	and.b64  	%rd1429, %rd1411, %rd1388;
	xor.b64  	%rd1430, %rd1411, %rd1388;
	and.b64  	%rd1431, %rd1430, %rd1364;
	or.b64  	%rd1432, %rd1431, %rd1429;
	add.s64 	%rd1433, %rd1428, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r875,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd1423;
	}
	shf.r.wrap.b32 	%r877, %r876, %r875, 14;
	shf.r.wrap.b32 	%r878, %r875, %r876, 14;
	mov.b64 	%rd1435, {%r878, %r877};
	shf.r.wrap.b32 	%r879, %r876, %r875, 18;
	shf.r.wrap.b32 	%r880, %r875, %r876, 18;
	mov.b64 	%rd1436, {%r880, %r879};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	shf.l.wrap.b32 	%r881, %r875, %r876, 23;
	shf.l.wrap.b32 	%r882, %r876, %r875, 23;
	mov.b64 	%rd1438, {%r882, %r881};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1400, %rd1377;
	and.b64  	%rd1441, %rd1423, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1377;
	add.s64 	%rd1443, %rd1353, %rd23;
	add.s64 	%rd1444, %rd1443, %rd1442;
	add.s64 	%rd1445, %rd1444, %rd1439;
	add.s64 	%rd1446, %rd1445, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r883,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd1434;
	}
	shf.r.wrap.b32 	%r885, %r884, %r883, 28;
	shf.r.wrap.b32 	%r886, %r883, %r884, 28;
	mov.b64 	%rd1447, {%r886, %r885};
	shf.l.wrap.b32 	%r887, %r883, %r884, 30;
	shf.l.wrap.b32 	%r888, %r884, %r883, 30;
	mov.b64 	%rd1448, {%r888, %r887};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	shf.l.wrap.b32 	%r889, %r883, %r884, 25;
	shf.l.wrap.b32 	%r890, %r884, %r883, 25;
	mov.b64 	%rd1450, {%r890, %r889};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	and.b64  	%rd1452, %rd1434, %rd1411;
	xor.b64  	%rd1453, %rd1434, %rd1411;
	and.b64  	%rd1454, %rd1453, %rd1388;
	or.b64  	%rd1455, %rd1454, %rd1452;
	add.s64 	%rd1456, %rd1451, %rd1455;
	add.s64 	%rd1457, %rd1456, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd1446;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 14;
	shf.r.wrap.b32 	%r894, %r891, %r892, 14;
	mov.b64 	%rd1458, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r892, %r891, 18;
	shf.r.wrap.b32 	%r896, %r891, %r892, 18;
	mov.b64 	%rd1459, {%r896, %r895};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	shf.l.wrap.b32 	%r897, %r891, %r892, 23;
	shf.l.wrap.b32 	%r898, %r892, %r891, 23;
	mov.b64 	%rd1461, {%r898, %r897};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1423, %rd1400;
	and.b64  	%rd1464, %rd1446, %rd1463;
	xor.b64  	%rd1465, %rd1464, %rd1400;
	add.s64 	%rd1466, %rd1377, %rd24;
	add.s64 	%rd1467, %rd1466, %rd1465;
	add.s64 	%rd1468, %rd1467, %rd1462;
	add.s64 	%rd1469, %rd1468, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd1457;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 28;
	shf.r.wrap.b32 	%r902, %r899, %r900, 28;
	mov.b64 	%rd1470, {%r902, %r901};
	shf.l.wrap.b32 	%r903, %r899, %r900, 30;
	shf.l.wrap.b32 	%r904, %r900, %r899, 30;
	mov.b64 	%rd1471, {%r904, %r903};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	shf.l.wrap.b32 	%r905, %r899, %r900, 25;
	shf.l.wrap.b32 	%r906, %r900, %r899, 25;
	mov.b64 	%rd1473, {%r906, %r905};
	xor.b64  	%rd1474, %rd1472, %rd1473;
	and.b64  	%rd1475, %rd1457, %rd1434;
	xor.b64  	%rd1476, %rd1457, %rd1434;
	and.b64  	%rd1477, %rd1476, %rd1411;
	or.b64  	%rd1478, %rd1477, %rd1475;
	add.s64 	%rd1479, %rd1474, %rd1478;
	add.s64 	%rd1480, %rd1479, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd1469;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 14;
	shf.r.wrap.b32 	%r910, %r907, %r908, 14;
	mov.b64 	%rd1481, {%r910, %r909};
	shf.r.wrap.b32 	%r911, %r908, %r907, 18;
	shf.r.wrap.b32 	%r912, %r907, %r908, 18;
	mov.b64 	%rd1482, {%r912, %r911};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shf.l.wrap.b32 	%r913, %r907, %r908, 23;
	shf.l.wrap.b32 	%r914, %r908, %r907, 23;
	mov.b64 	%rd1484, {%r914, %r913};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	xor.b64  	%rd1486, %rd1446, %rd1423;
	and.b64  	%rd1487, %rd1469, %rd1486;
	xor.b64  	%rd1488, %rd1487, %rd1423;
	add.s64 	%rd1489, %rd1400, %rd25;
	add.s64 	%rd1490, %rd1489, %rd1488;
	add.s64 	%rd1491, %rd1490, %rd1485;
	add.s64 	%rd2208, %rd1491, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd1480;
	}
	shf.r.wrap.b32 	%r917, %r916, %r915, 28;
	shf.r.wrap.b32 	%r918, %r915, %r916, 28;
	mov.b64 	%rd1492, {%r918, %r917};
	shf.l.wrap.b32 	%r919, %r915, %r916, 30;
	shf.l.wrap.b32 	%r920, %r916, %r915, 30;
	mov.b64 	%rd1493, {%r920, %r919};
	xor.b64  	%rd1494, %rd1492, %rd1493;
	shf.l.wrap.b32 	%r921, %r915, %r916, 25;
	shf.l.wrap.b32 	%r922, %r916, %r915, 25;
	mov.b64 	%rd1495, {%r922, %r921};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	and.b64  	%rd1497, %rd1480, %rd1457;
	xor.b64  	%rd1498, %rd1480, %rd1457;
	and.b64  	%rd1499, %rd1498, %rd1434;
	or.b64  	%rd1500, %rd1499, %rd1497;
	add.s64 	%rd1501, %rd1496, %rd1500;
	add.s64 	%rd2204, %rd1501, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd2208;
	}
	shf.r.wrap.b32 	%r925, %r924, %r923, 14;
	shf.r.wrap.b32 	%r926, %r923, %r924, 14;
	mov.b64 	%rd1502, {%r926, %r925};
	shf.r.wrap.b32 	%r927, %r924, %r923, 18;
	shf.r.wrap.b32 	%r928, %r923, %r924, 18;
	mov.b64 	%rd1503, {%r928, %r927};
	xor.b64  	%rd1504, %rd1502, %rd1503;
	shf.l.wrap.b32 	%r929, %r923, %r924, 23;
	shf.l.wrap.b32 	%r930, %r924, %r923, 23;
	mov.b64 	%rd1505, {%r930, %r929};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	xor.b64  	%rd1507, %rd1469, %rd1446;
	and.b64  	%rd1508, %rd2208, %rd1507;
	xor.b64  	%rd1509, %rd1508, %rd1446;
	add.s64 	%rd1510, %rd1423, %rd26;
	add.s64 	%rd1511, %rd1510, %rd1509;
	add.s64 	%rd1512, %rd1511, %rd1506;
	add.s64 	%rd2207, %rd1512, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd2204;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 28;
	shf.r.wrap.b32 	%r934, %r931, %r932, 28;
	mov.b64 	%rd1513, {%r934, %r933};
	shf.l.wrap.b32 	%r935, %r931, %r932, 30;
	shf.l.wrap.b32 	%r936, %r932, %r931, 30;
	mov.b64 	%rd1514, {%r936, %r935};
	xor.b64  	%rd1515, %rd1513, %rd1514;
	shf.l.wrap.b32 	%r937, %r931, %r932, 25;
	shf.l.wrap.b32 	%r938, %r932, %r931, 25;
	mov.b64 	%rd1516, {%r938, %r937};
	xor.b64  	%rd1517, %rd1515, %rd1516;
	and.b64  	%rd1518, %rd2204, %rd1480;
	xor.b64  	%rd1519, %rd2204, %rd1480;
	and.b64  	%rd1520, %rd1519, %rd1457;
	or.b64  	%rd1521, %rd1520, %rd1518;
	add.s64 	%rd1522, %rd1517, %rd1521;
	add.s64 	%rd2203, %rd1522, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd2207;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 14;
	shf.r.wrap.b32 	%r942, %r939, %r940, 14;
	mov.b64 	%rd1523, {%r942, %r941};
	shf.r.wrap.b32 	%r943, %r940, %r939, 18;
	shf.r.wrap.b32 	%r944, %r939, %r940, 18;
	mov.b64 	%rd1524, {%r944, %r943};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	shf.l.wrap.b32 	%r945, %r939, %r940, 23;
	shf.l.wrap.b32 	%r946, %r940, %r939, 23;
	mov.b64 	%rd1526, {%r946, %r945};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd2208, %rd1469;
	and.b64  	%rd1529, %rd2207, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1469;
	add.s64 	%rd1531, %rd1446, %rd27;
	add.s64 	%rd1532, %rd1531, %rd1530;
	add.s64 	%rd1533, %rd1532, %rd1527;
	add.s64 	%rd2206, %rd1533, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd2203;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 28;
	shf.r.wrap.b32 	%r950, %r947, %r948, 28;
	mov.b64 	%rd1534, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 30;
	shf.l.wrap.b32 	%r952, %r948, %r947, 30;
	mov.b64 	%rd1535, {%r952, %r951};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shf.l.wrap.b32 	%r953, %r947, %r948, 25;
	shf.l.wrap.b32 	%r954, %r948, %r947, 25;
	mov.b64 	%rd1537, {%r954, %r953};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	and.b64  	%rd1539, %rd2203, %rd2204;
	xor.b64  	%rd1540, %rd2203, %rd2204;
	and.b64  	%rd1541, %rd1540, %rd1480;
	or.b64  	%rd1542, %rd1541, %rd1539;
	add.s64 	%rd1543, %rd1538, %rd1542;
	add.s64 	%rd2202, %rd1543, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd2206;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 14;
	shf.r.wrap.b32 	%r958, %r955, %r956, 14;
	mov.b64 	%rd1544, {%r958, %r957};
	shf.r.wrap.b32 	%r959, %r956, %r955, 18;
	shf.r.wrap.b32 	%r960, %r955, %r956, 18;
	mov.b64 	%rd1545, {%r960, %r959};
	xor.b64  	%rd1546, %rd1544, %rd1545;
	shf.l.wrap.b32 	%r961, %r955, %r956, 23;
	shf.l.wrap.b32 	%r962, %r956, %r955, 23;
	mov.b64 	%rd1547, {%r962, %r961};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	xor.b64  	%rd1549, %rd2207, %rd2208;
	and.b64  	%rd1550, %rd2206, %rd1549;
	xor.b64  	%rd1551, %rd1550, %rd2208;
	add.s64 	%rd1552, %rd28, %rd1469;
	add.s64 	%rd1553, %rd1552, %rd1551;
	add.s64 	%rd1554, %rd1553, %rd1548;
	add.s64 	%rd2205, %rd1554, %rd1480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r963,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd2202;
	}
	shf.r.wrap.b32 	%r965, %r964, %r963, 28;
	shf.r.wrap.b32 	%r966, %r963, %r964, 28;
	mov.b64 	%rd1555, {%r966, %r965};
	shf.l.wrap.b32 	%r967, %r963, %r964, 30;
	shf.l.wrap.b32 	%r968, %r964, %r963, 30;
	mov.b64 	%rd1556, {%r968, %r967};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shf.l.wrap.b32 	%r969, %r963, %r964, 25;
	shf.l.wrap.b32 	%r970, %r964, %r963, 25;
	mov.b64 	%rd1558, {%r970, %r969};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	and.b64  	%rd1560, %rd2202, %rd2203;
	xor.b64  	%rd1561, %rd2202, %rd2203;
	and.b64  	%rd1562, %rd1561, %rd2204;
	or.b64  	%rd1563, %rd1562, %rd1560;
	add.s64 	%rd1564, %rd1559, %rd1563;
	add.s64 	%rd2201, %rd1564, %rd1554;
	mov.u64 	%rd2200, -9223372036854775808;
	mov.u64 	%rd2194, 0;
	mov.u64 	%rd2193, 1536;
	mov.u32 	%r1415, 16;
	mov.u64 	%rd2195, %rd2194;
	mov.u64 	%rd2196, %rd2194;
	mov.u64 	%rd2197, %rd2194;
	mov.u64 	%rd2198, %rd2194;
	mov.u64 	%rd2199, %rd2194;

BB4_6:
	mov.u64 	%rd2152, k_sha512;
	shr.u64 	%rd1565, %rd2194, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd2194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd2194;
	}
	shf.l.wrap.b32 	%r973, %r972, %r971, 3;
	shf.l.wrap.b32 	%r974, %r971, %r972, 3;
	mov.b64 	%rd1566, {%r974, %r973};
	xor.b64  	%rd1567, %rd1566, %rd1565;
	shf.r.wrap.b32 	%r975, %r971, %r972, 19;
	shf.r.wrap.b32 	%r976, %r972, %r971, 19;
	mov.b64 	%rd1568, {%r976, %r975};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	shr.u64 	%rd1570, %rd2210, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r977,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r978}, %rd2210;
	}
	shf.r.wrap.b32 	%r979, %r978, %r977, 8;
	shf.r.wrap.b32 	%r980, %r977, %r978, 8;
	mov.b64 	%rd1571, {%r980, %r979};
	xor.b64  	%rd1572, %rd1571, %rd1570;
	shf.r.wrap.b32 	%r981, %r978, %r977, 1;
	shf.r.wrap.b32 	%r982, %r977, %r978, 1;
	mov.b64 	%rd1573, {%r982, %r981};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	add.s64 	%rd1575, %rd1574, %rd2209;
	add.s64 	%rd1576, %rd1575, %rd2199;
	add.s64 	%rd2209, %rd1576, %rd1569;
	shr.u64 	%rd1577, %rd2193, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd2193;
	}
	shf.l.wrap.b32 	%r985, %r984, %r983, 3;
	shf.l.wrap.b32 	%r986, %r983, %r984, 3;
	mov.b64 	%rd1578, {%r986, %r985};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.r.wrap.b32 	%r987, %r983, %r984, 19;
	shf.r.wrap.b32 	%r988, %r984, %r983, 19;
	mov.b64 	%rd1580, {%r988, %r987};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	shr.u64 	%rd1582, %rd2211, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd2211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd2211;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 8;
	shf.r.wrap.b32 	%r992, %r989, %r990, 8;
	mov.b64 	%rd1583, {%r992, %r991};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.r.wrap.b32 	%r993, %r990, %r989, 1;
	shf.r.wrap.b32 	%r994, %r989, %r990, 1;
	mov.b64 	%rd1585, {%r994, %r993};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd2210;
	add.s64 	%rd1588, %rd1587, %rd2198;
	add.s64 	%rd2210, %rd1588, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd2209;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 19;
	shf.r.wrap.b32 	%r998, %r995, %r996, 19;
	mov.b64 	%rd1589, {%r998, %r997};
	shf.l.wrap.b32 	%r999, %r995, %r996, 3;
	shf.l.wrap.b32 	%r1000, %r996, %r995, 3;
	mov.b64 	%rd1590, {%r1000, %r999};
	shr.u64 	%rd1591, %rd2209, 6;
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1592, %rd1589;
	shr.u64 	%rd1594, %rd2212, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd2212;
	}
	shf.r.wrap.b32 	%r1003, %r1002, %r1001, 8;
	shf.r.wrap.b32 	%r1004, %r1001, %r1002, 8;
	mov.b64 	%rd1595, {%r1004, %r1003};
	xor.b64  	%rd1596, %rd1595, %rd1594;
	shf.r.wrap.b32 	%r1005, %r1002, %r1001, 1;
	shf.r.wrap.b32 	%r1006, %r1001, %r1002, 1;
	mov.b64 	%rd1597, {%r1006, %r1005};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	add.s64 	%rd1599, %rd1598, %rd2211;
	add.s64 	%rd1600, %rd1599, %rd2197;
	add.s64 	%rd2211, %rd1600, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd2210;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 19;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 19;
	mov.b64 	%rd1601, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 3;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 3;
	mov.b64 	%rd1602, {%r1012, %r1011};
	shr.u64 	%rd1603, %rd2210, 6;
	xor.b64  	%rd1604, %rd1602, %rd1603;
	xor.b64  	%rd1605, %rd1604, %rd1601;
	shr.u64 	%rd1606, %rd2213, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd2213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd2213;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 8;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 8;
	mov.b64 	%rd1607, {%r1016, %r1015};
	xor.b64  	%rd1608, %rd1607, %rd1606;
	shf.r.wrap.b32 	%r1017, %r1014, %r1013, 1;
	shf.r.wrap.b32 	%r1018, %r1013, %r1014, 1;
	mov.b64 	%rd1609, {%r1018, %r1017};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	add.s64 	%rd1611, %rd1610, %rd2212;
	add.s64 	%rd1612, %rd1611, %rd2196;
	add.s64 	%rd2212, %rd1612, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1019,%dummy}, %rd2211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1020}, %rd2211;
	}
	shf.r.wrap.b32 	%r1021, %r1020, %r1019, 19;
	shf.r.wrap.b32 	%r1022, %r1019, %r1020, 19;
	mov.b64 	%rd1613, {%r1022, %r1021};
	shf.l.wrap.b32 	%r1023, %r1019, %r1020, 3;
	shf.l.wrap.b32 	%r1024, %r1020, %r1019, 3;
	mov.b64 	%rd1614, {%r1024, %r1023};
	shr.u64 	%rd1615, %rd2211, 6;
	xor.b64  	%rd1616, %rd1614, %rd1615;
	xor.b64  	%rd1617, %rd1616, %rd1613;
	shr.u64 	%rd1618, %rd2214, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd2214;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 8;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 8;
	mov.b64 	%rd1619, {%r1028, %r1027};
	xor.b64  	%rd1620, %rd1619, %rd1618;
	shf.r.wrap.b32 	%r1029, %r1026, %r1025, 1;
	shf.r.wrap.b32 	%r1030, %r1025, %r1026, 1;
	mov.b64 	%rd1621, {%r1030, %r1029};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	add.s64 	%rd1623, %rd1622, %rd2213;
	add.s64 	%rd1624, %rd1623, %rd2195;
	add.s64 	%rd2213, %rd1624, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd2212;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 19;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 19;
	mov.b64 	%rd1625, {%r1034, %r1033};
	shf.l.wrap.b32 	%r1035, %r1031, %r1032, 3;
	shf.l.wrap.b32 	%r1036, %r1032, %r1031, 3;
	mov.b64 	%rd1626, {%r1036, %r1035};
	shr.u64 	%rd1627, %rd2212, 6;
	xor.b64  	%rd1628, %rd1626, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1625;
	shr.u64 	%rd1630, %rd2215, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd2215;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 8;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 8;
	mov.b64 	%rd1631, {%r1040, %r1039};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.r.wrap.b32 	%r1041, %r1038, %r1037, 1;
	shf.r.wrap.b32 	%r1042, %r1037, %r1038, 1;
	mov.b64 	%rd1633, {%r1042, %r1041};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	add.s64 	%rd1635, %rd1634, %rd2214;
	add.s64 	%rd1636, %rd1635, %rd2194;
	add.s64 	%rd2214, %rd1636, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd2213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd2213;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 19;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 19;
	mov.b64 	%rd1637, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 3;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 3;
	mov.b64 	%rd1638, {%r1048, %r1047};
	shr.u64 	%rd1639, %rd2213, 6;
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1640, %rd1637;
	shr.u64 	%rd1642, %rd2216, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd2216;
	}
	shf.r.wrap.b32 	%r1051, %r1050, %r1049, 8;
	shf.r.wrap.b32 	%r1052, %r1049, %r1050, 8;
	mov.b64 	%rd1643, {%r1052, %r1051};
	xor.b64  	%rd1644, %rd1643, %rd1642;
	shf.r.wrap.b32 	%r1053, %r1050, %r1049, 1;
	shf.r.wrap.b32 	%r1054, %r1049, %r1050, 1;
	mov.b64 	%rd1645, {%r1054, %r1053};
	xor.b64  	%rd1646, %rd1644, %rd1645;
	add.s64 	%rd1647, %rd1646, %rd2215;
	add.s64 	%rd1648, %rd1647, %rd2193;
	add.s64 	%rd2215, %rd1648, %rd1641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd2214;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 19;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 19;
	mov.b64 	%rd1649, {%r1058, %r1057};
	shf.l.wrap.b32 	%r1059, %r1055, %r1056, 3;
	shf.l.wrap.b32 	%r1060, %r1056, %r1055, 3;
	mov.b64 	%rd1650, {%r1060, %r1059};
	shr.u64 	%rd1651, %rd2214, 6;
	xor.b64  	%rd1652, %rd1650, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1649;
	shr.u64 	%rd1654, %rd2200, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd2200;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 8;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 8;
	mov.b64 	%rd1655, {%r1064, %r1063};
	xor.b64  	%rd1656, %rd1655, %rd1654;
	shf.r.wrap.b32 	%r1065, %r1062, %r1061, 1;
	shf.r.wrap.b32 	%r1066, %r1061, %r1062, 1;
	mov.b64 	%rd1657, {%r1066, %r1065};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd2216;
	add.s64 	%rd1660, %rd1659, %rd2209;
	add.s64 	%rd2216, %rd1660, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1067,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd2215;
	}
	shf.r.wrap.b32 	%r1069, %r1068, %r1067, 19;
	shf.r.wrap.b32 	%r1070, %r1067, %r1068, 19;
	mov.b64 	%rd1661, {%r1070, %r1069};
	shf.l.wrap.b32 	%r1071, %r1067, %r1068, 3;
	shf.l.wrap.b32 	%r1072, %r1068, %r1067, 3;
	mov.b64 	%rd1662, {%r1072, %r1071};
	shr.u64 	%rd1663, %rd2215, 6;
	xor.b64  	%rd1664, %rd1662, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1661;
	shr.u64 	%rd1666, %rd2199, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1073,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd2199;
	}
	shf.r.wrap.b32 	%r1075, %r1074, %r1073, 8;
	shf.r.wrap.b32 	%r1076, %r1073, %r1074, 8;
	mov.b64 	%rd1667, {%r1076, %r1075};
	xor.b64  	%rd1668, %rd1667, %rd1666;
	shf.r.wrap.b32 	%r1077, %r1074, %r1073, 1;
	shf.r.wrap.b32 	%r1078, %r1073, %r1074, 1;
	mov.b64 	%rd1669, {%r1078, %r1077};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	add.s64 	%rd1671, %rd1670, %rd2200;
	add.s64 	%rd1672, %rd1671, %rd2210;
	add.s64 	%rd2200, %rd1672, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd2216;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 19;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 19;
	mov.b64 	%rd1673, {%r1082, %r1081};
	shf.l.wrap.b32 	%r1083, %r1079, %r1080, 3;
	shf.l.wrap.b32 	%r1084, %r1080, %r1079, 3;
	mov.b64 	%rd1674, {%r1084, %r1083};
	shr.u64 	%rd1675, %rd2216, 6;
	xor.b64  	%rd1676, %rd1674, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1673;
	shr.u64 	%rd1678, %rd2198, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd2198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd2198;
	}
	shf.r.wrap.b32 	%r1087, %r1086, %r1085, 8;
	shf.r.wrap.b32 	%r1088, %r1085, %r1086, 8;
	mov.b64 	%rd1679, {%r1088, %r1087};
	xor.b64  	%rd1680, %rd1679, %rd1678;
	shf.r.wrap.b32 	%r1089, %r1086, %r1085, 1;
	shf.r.wrap.b32 	%r1090, %r1085, %r1086, 1;
	mov.b64 	%rd1681, {%r1090, %r1089};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	add.s64 	%rd1683, %rd1682, %rd2199;
	add.s64 	%rd1684, %rd1683, %rd2211;
	add.s64 	%rd2199, %rd1684, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1091,%dummy}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd2200;
	}
	shf.r.wrap.b32 	%r1093, %r1092, %r1091, 19;
	shf.r.wrap.b32 	%r1094, %r1091, %r1092, 19;
	mov.b64 	%rd1685, {%r1094, %r1093};
	shf.l.wrap.b32 	%r1095, %r1091, %r1092, 3;
	shf.l.wrap.b32 	%r1096, %r1092, %r1091, 3;
	mov.b64 	%rd1686, {%r1096, %r1095};
	shr.u64 	%rd1687, %rd2200, 6;
	xor.b64  	%rd1688, %rd1686, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1685;
	shr.u64 	%rd1690, %rd2197, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd2197;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 8;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 8;
	mov.b64 	%rd1691, {%r1100, %r1099};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shf.r.wrap.b32 	%r1101, %r1098, %r1097, 1;
	shf.r.wrap.b32 	%r1102, %r1097, %r1098, 1;
	mov.b64 	%rd1693, {%r1102, %r1101};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd1695, %rd1694, %rd2198;
	add.s64 	%rd1696, %rd1695, %rd2212;
	add.s64 	%rd2198, %rd1696, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd2199;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 19;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 19;
	mov.b64 	%rd1697, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 3;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 3;
	mov.b64 	%rd1698, {%r1108, %r1107};
	shr.u64 	%rd1699, %rd2199, 6;
	xor.b64  	%rd1700, %rd1698, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1697;
	shr.u64 	%rd1702, %rd2196, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd2196;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 8;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 8;
	mov.b64 	%rd1703, {%r1112, %r1111};
	xor.b64  	%rd1704, %rd1703, %rd1702;
	shf.r.wrap.b32 	%r1113, %r1110, %r1109, 1;
	shf.r.wrap.b32 	%r1114, %r1109, %r1110, 1;
	mov.b64 	%rd1705, {%r1114, %r1113};
	xor.b64  	%rd1706, %rd1704, %rd1705;
	add.s64 	%rd1707, %rd1706, %rd2197;
	add.s64 	%rd1708, %rd1707, %rd2213;
	add.s64 	%rd2197, %rd1708, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd2198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd2198;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 19;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 19;
	mov.b64 	%rd1709, {%r1118, %r1117};
	shf.l.wrap.b32 	%r1119, %r1115, %r1116, 3;
	shf.l.wrap.b32 	%r1120, %r1116, %r1115, 3;
	mov.b64 	%rd1710, {%r1120, %r1119};
	shr.u64 	%rd1711, %rd2198, 6;
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1709;
	shr.u64 	%rd1714, %rd2195, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd2195;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 8;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 8;
	mov.b64 	%rd1715, {%r1124, %r1123};
	xor.b64  	%rd1716, %rd1715, %rd1714;
	shf.r.wrap.b32 	%r1125, %r1122, %r1121, 1;
	shf.r.wrap.b32 	%r1126, %r1121, %r1122, 1;
	mov.b64 	%rd1717, {%r1126, %r1125};
	xor.b64  	%rd1718, %rd1716, %rd1717;
	add.s64 	%rd1719, %rd1718, %rd2196;
	add.s64 	%rd1720, %rd1719, %rd2214;
	add.s64 	%rd2196, %rd1720, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1127,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1128}, %rd2197;
	}
	shf.r.wrap.b32 	%r1129, %r1128, %r1127, 19;
	shf.r.wrap.b32 	%r1130, %r1127, %r1128, 19;
	mov.b64 	%rd1721, {%r1130, %r1129};
	shf.l.wrap.b32 	%r1131, %r1127, %r1128, 3;
	shf.l.wrap.b32 	%r1132, %r1128, %r1127, 3;
	mov.b64 	%rd1722, {%r1132, %r1131};
	shr.u64 	%rd1723, %rd2197, 6;
	xor.b64  	%rd1724, %rd1722, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1721;
	shr.u64 	%rd1726, %rd2194, 7;
	shf.r.wrap.b32 	%r1133, %r971, %r972, 8;
	shf.r.wrap.b32 	%r1134, %r972, %r971, 8;
	mov.b64 	%rd1727, {%r1134, %r1133};
	xor.b64  	%rd1728, %rd1727, %rd1726;
	shf.r.wrap.b32 	%r1135, %r971, %r972, 1;
	shf.r.wrap.b32 	%r1136, %r972, %r971, 1;
	mov.b64 	%rd1729, {%r1136, %r1135};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	add.s64 	%rd1731, %rd1730, %rd2195;
	add.s64 	%rd1732, %rd1731, %rd2215;
	add.s64 	%rd2195, %rd1732, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd2196;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 19;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 19;
	mov.b64 	%rd1733, {%r1140, %r1139};
	shf.l.wrap.b32 	%r1141, %r1137, %r1138, 3;
	shf.l.wrap.b32 	%r1142, %r1138, %r1137, 3;
	mov.b64 	%rd1734, {%r1142, %r1141};
	shr.u64 	%rd1735, %rd2196, 6;
	xor.b64  	%rd1736, %rd1734, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1733;
	shr.u64 	%rd1738, %rd2193, 7;
	shf.r.wrap.b32 	%r1143, %r983, %r984, 8;
	shf.r.wrap.b32 	%r1144, %r984, %r983, 8;
	mov.b64 	%rd1739, {%r1144, %r1143};
	xor.b64  	%rd1740, %rd1739, %rd1738;
	shf.r.wrap.b32 	%r1145, %r983, %r984, 1;
	shf.r.wrap.b32 	%r1146, %r984, %r983, 1;
	mov.b64 	%rd1741, {%r1146, %r1145};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	add.s64 	%rd1743, %rd1742, %rd2194;
	add.s64 	%rd1744, %rd1743, %rd2216;
	add.s64 	%rd2194, %rd1744, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd2195;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 19;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 19;
	mov.b64 	%rd1745, {%r1150, %r1149};
	shf.l.wrap.b32 	%r1151, %r1147, %r1148, 3;
	shf.l.wrap.b32 	%r1152, %r1148, %r1147, 3;
	mov.b64 	%rd1746, {%r1152, %r1151};
	shr.u64 	%rd1747, %rd2195, 6;
	xor.b64  	%rd1748, %rd1746, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1745;
	shf.r.wrap.b32 	%r1153, %r996, %r995, 1;
	shf.r.wrap.b32 	%r1154, %r995, %r996, 1;
	mov.b64 	%rd1750, {%r1154, %r1153};
	shf.r.wrap.b32 	%r1155, %r996, %r995, 8;
	shf.r.wrap.b32 	%r1156, %r995, %r996, 8;
	mov.b64 	%rd1751, {%r1156, %r1155};
	shr.u64 	%rd1752, %rd2209, 7;
	xor.b64  	%rd1753, %rd1751, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1750;
	add.s64 	%rd1755, %rd1754, %rd2193;
	add.s64 	%rd1756, %rd1755, %rd2200;
	add.s64 	%rd2193, %rd1756, %rd1749;
	mul.wide.s32 	%rd1757, %r1415, 8;
	add.s64 	%rd1759, %rd2152, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd2205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd2205;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 18;
	mov.b64 	%rd1760, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r1158, %r1157, 14;
	shf.r.wrap.b32 	%r1162, %r1157, %r1158, 14;
	mov.b64 	%rd1761, {%r1162, %r1161};
	xor.b64  	%rd1762, %rd1761, %rd1760;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 23;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 23;
	mov.b64 	%rd1763, {%r1164, %r1163};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd2206, %rd2207;
	and.b64  	%rd1766, %rd2205, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd2207;
	add.s64 	%rd1768, %rd1767, %rd2208;
	add.s64 	%rd1769, %rd1768, %rd1764;
	add.s64 	%rd1770, %rd1769, %rd2209;
	ld.const.u64 	%rd1771, [%rd1759];
	add.s64 	%rd1772, %rd1770, %rd1771;
	add.s64 	%rd1773, %rd1772, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd2201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd2201;
	}
	shf.l.wrap.b32 	%r1167, %r1166, %r1165, 30;
	shf.l.wrap.b32 	%r1168, %r1165, %r1166, 30;
	mov.b64 	%rd1774, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r1165, %r1166, 28;
	shf.r.wrap.b32 	%r1170, %r1166, %r1165, 28;
	mov.b64 	%rd1775, {%r1170, %r1169};
	xor.b64  	%rd1776, %rd1775, %rd1774;
	shf.l.wrap.b32 	%r1171, %r1166, %r1165, 25;
	shf.l.wrap.b32 	%r1172, %r1165, %r1166, 25;
	mov.b64 	%rd1777, {%r1172, %r1171};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	xor.b64  	%rd1779, %rd2201, %rd2202;
	and.b64  	%rd1780, %rd1779, %rd2203;
	and.b64  	%rd1781, %rd2201, %rd2202;
	or.b64  	%rd1782, %rd1780, %rd1781;
	add.s64 	%rd1783, %rd1778, %rd1782;
	add.s64 	%rd1784, %rd1783, %rd1772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1773;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 14;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 14;
	mov.b64 	%rd1785, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r1174, %r1173, 18;
	shf.r.wrap.b32 	%r1178, %r1173, %r1174, 18;
	mov.b64 	%rd1786, {%r1178, %r1177};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 23;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 23;
	mov.b64 	%rd1788, {%r1180, %r1179};
	xor.b64  	%rd1789, %rd1787, %rd1788;
	xor.b64  	%rd1790, %rd2205, %rd2206;
	and.b64  	%rd1791, %rd1773, %rd1790;
	xor.b64  	%rd1792, %rd1791, %rd2206;
	add.s64 	%rd1793, %rd2210, %rd2207;
	ld.const.u64 	%rd1794, [%rd1759+8];
	add.s64 	%rd1795, %rd1793, %rd1794;
	add.s64 	%rd1796, %rd1795, %rd1792;
	add.s64 	%rd1797, %rd1796, %rd1789;
	add.s64 	%rd1798, %rd1797, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1784;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 28;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 28;
	mov.b64 	%rd1799, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 30;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 30;
	mov.b64 	%rd1800, {%r1186, %r1185};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	shf.l.wrap.b32 	%r1187, %r1181, %r1182, 25;
	shf.l.wrap.b32 	%r1188, %r1182, %r1181, 25;
	mov.b64 	%rd1802, {%r1188, %r1187};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	and.b64  	%rd1804, %rd1784, %rd2201;
	xor.b64  	%rd1805, %rd1784, %rd2201;
	and.b64  	%rd1806, %rd1805, %rd2202;
	or.b64  	%rd1807, %rd1806, %rd1804;
	add.s64 	%rd1808, %rd1803, %rd1807;
	add.s64 	%rd1809, %rd1808, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1798;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 14;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 14;
	mov.b64 	%rd1810, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r1190, %r1189, 18;
	shf.r.wrap.b32 	%r1194, %r1189, %r1190, 18;
	mov.b64 	%rd1811, {%r1194, %r1193};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 23;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 23;
	mov.b64 	%rd1813, {%r1196, %r1195};
	xor.b64  	%rd1814, %rd1812, %rd1813;
	xor.b64  	%rd1815, %rd1773, %rd2205;
	and.b64  	%rd1816, %rd1798, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd2205;
	add.s64 	%rd1818, %rd2211, %rd2206;
	ld.const.u64 	%rd1819, [%rd1759+16];
	add.s64 	%rd1820, %rd1818, %rd1819;
	add.s64 	%rd1821, %rd1820, %rd1817;
	add.s64 	%rd1822, %rd1821, %rd1814;
	add.s64 	%rd1823, %rd1822, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1809;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 28;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 28;
	mov.b64 	%rd1824, {%r1200, %r1199};
	shf.l.wrap.b32 	%r1201, %r1197, %r1198, 30;
	shf.l.wrap.b32 	%r1202, %r1198, %r1197, 30;
	mov.b64 	%rd1825, {%r1202, %r1201};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 25;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 25;
	mov.b64 	%rd1827, {%r1204, %r1203};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	and.b64  	%rd1829, %rd1809, %rd1784;
	xor.b64  	%rd1830, %rd1809, %rd1784;
	and.b64  	%rd1831, %rd1830, %rd2201;
	or.b64  	%rd1832, %rd1831, %rd1829;
	add.s64 	%rd1833, %rd1828, %rd1832;
	add.s64 	%rd1834, %rd1833, %rd1822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1823;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 14;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 14;
	mov.b64 	%rd1835, {%r1208, %r1207};
	shf.r.wrap.b32 	%r1209, %r1206, %r1205, 18;
	shf.r.wrap.b32 	%r1210, %r1205, %r1206, 18;
	mov.b64 	%rd1836, {%r1210, %r1209};
	xor.b64  	%rd1837, %rd1835, %rd1836;
	shf.l.wrap.b32 	%r1211, %r1205, %r1206, 23;
	shf.l.wrap.b32 	%r1212, %r1206, %r1205, 23;
	mov.b64 	%rd1838, {%r1212, %r1211};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	xor.b64  	%rd1840, %rd1798, %rd1773;
	and.b64  	%rd1841, %rd1823, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1773;
	add.s64 	%rd1843, %rd2212, %rd2205;
	ld.const.u64 	%rd1844, [%rd1759+24];
	add.s64 	%rd1845, %rd1843, %rd1844;
	add.s64 	%rd1846, %rd1845, %rd1842;
	add.s64 	%rd1847, %rd1846, %rd1839;
	add.s64 	%rd1848, %rd1847, %rd2201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1834;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 28;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 28;
	mov.b64 	%rd1849, {%r1216, %r1215};
	shf.l.wrap.b32 	%r1217, %r1213, %r1214, 30;
	shf.l.wrap.b32 	%r1218, %r1214, %r1213, 30;
	mov.b64 	%rd1850, {%r1218, %r1217};
	xor.b64  	%rd1851, %rd1849, %rd1850;
	shf.l.wrap.b32 	%r1219, %r1213, %r1214, 25;
	shf.l.wrap.b32 	%r1220, %r1214, %r1213, 25;
	mov.b64 	%rd1852, {%r1220, %r1219};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	and.b64  	%rd1854, %rd1834, %rd1809;
	xor.b64  	%rd1855, %rd1834, %rd1809;
	and.b64  	%rd1856, %rd1855, %rd1784;
	or.b64  	%rd1857, %rd1856, %rd1854;
	add.s64 	%rd1858, %rd1853, %rd1857;
	add.s64 	%rd1859, %rd1858, %rd1847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1848;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 14;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 14;
	mov.b64 	%rd1860, {%r1224, %r1223};
	shf.r.wrap.b32 	%r1225, %r1222, %r1221, 18;
	shf.r.wrap.b32 	%r1226, %r1221, %r1222, 18;
	mov.b64 	%rd1861, {%r1226, %r1225};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	shf.l.wrap.b32 	%r1227, %r1221, %r1222, 23;
	shf.l.wrap.b32 	%r1228, %r1222, %r1221, 23;
	mov.b64 	%rd1863, {%r1228, %r1227};
	xor.b64  	%rd1864, %rd1862, %rd1863;
	xor.b64  	%rd1865, %rd1823, %rd1798;
	and.b64  	%rd1866, %rd1848, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1798;
	add.s64 	%rd1868, %rd1773, %rd2213;
	ld.const.u64 	%rd1869, [%rd1759+32];
	add.s64 	%rd1870, %rd1868, %rd1869;
	add.s64 	%rd1871, %rd1870, %rd1867;
	add.s64 	%rd1872, %rd1871, %rd1864;
	add.s64 	%rd1873, %rd1872, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1859;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 28;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 28;
	mov.b64 	%rd1874, {%r1232, %r1231};
	shf.l.wrap.b32 	%r1233, %r1229, %r1230, 30;
	shf.l.wrap.b32 	%r1234, %r1230, %r1229, 30;
	mov.b64 	%rd1875, {%r1234, %r1233};
	xor.b64  	%rd1876, %rd1874, %rd1875;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 25;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 25;
	mov.b64 	%rd1877, {%r1236, %r1235};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	and.b64  	%rd1879, %rd1859, %rd1834;
	xor.b64  	%rd1880, %rd1859, %rd1834;
	and.b64  	%rd1881, %rd1880, %rd1809;
	or.b64  	%rd1882, %rd1881, %rd1879;
	add.s64 	%rd1883, %rd1878, %rd1882;
	add.s64 	%rd1884, %rd1883, %rd1872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1873;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 14;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 14;
	mov.b64 	%rd1885, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r1238, %r1237, 18;
	shf.r.wrap.b32 	%r1242, %r1237, %r1238, 18;
	mov.b64 	%rd1886, {%r1242, %r1241};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 23;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 23;
	mov.b64 	%rd1888, {%r1244, %r1243};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1848, %rd1823;
	and.b64  	%rd1891, %rd1873, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1823;
	ld.const.u64 	%rd1893, [%rd1759+40];
	add.s64 	%rd1894, %rd1893, %rd2214;
	add.s64 	%rd1895, %rd1894, %rd1798;
	add.s64 	%rd1896, %rd1895, %rd1892;
	add.s64 	%rd1897, %rd1896, %rd1889;
	add.s64 	%rd1898, %rd1897, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1884;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 28;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 28;
	mov.b64 	%rd1899, {%r1248, %r1247};
	shf.l.wrap.b32 	%r1249, %r1245, %r1246, 30;
	shf.l.wrap.b32 	%r1250, %r1246, %r1245, 30;
	mov.b64 	%rd1900, {%r1250, %r1249};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 25;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 25;
	mov.b64 	%rd1902, {%r1252, %r1251};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	and.b64  	%rd1904, %rd1884, %rd1859;
	xor.b64  	%rd1905, %rd1884, %rd1859;
	and.b64  	%rd1906, %rd1905, %rd1834;
	or.b64  	%rd1907, %rd1906, %rd1904;
	add.s64 	%rd1908, %rd1903, %rd1907;
	add.s64 	%rd1909, %rd1908, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1898;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 14;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 14;
	mov.b64 	%rd1910, {%r1256, %r1255};
	shf.r.wrap.b32 	%r1257, %r1254, %r1253, 18;
	shf.r.wrap.b32 	%r1258, %r1253, %r1254, 18;
	mov.b64 	%rd1911, {%r1258, %r1257};
	xor.b64  	%rd1912, %rd1910, %rd1911;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 23;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 23;
	mov.b64 	%rd1913, {%r1260, %r1259};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1873, %rd1848;
	and.b64  	%rd1916, %rd1898, %rd1915;
	xor.b64  	%rd1917, %rd1916, %rd1848;
	ld.const.u64 	%rd1918, [%rd1759+48];
	add.s64 	%rd1919, %rd1918, %rd2215;
	add.s64 	%rd1920, %rd1919, %rd1823;
	add.s64 	%rd1921, %rd1920, %rd1917;
	add.s64 	%rd1922, %rd1921, %rd1914;
	add.s64 	%rd1923, %rd1922, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1909;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 28;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 28;
	mov.b64 	%rd1924, {%r1264, %r1263};
	shf.l.wrap.b32 	%r1265, %r1261, %r1262, 30;
	shf.l.wrap.b32 	%r1266, %r1262, %r1261, 30;
	mov.b64 	%rd1925, {%r1266, %r1265};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 25;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 25;
	mov.b64 	%rd1927, {%r1268, %r1267};
	xor.b64  	%rd1928, %rd1926, %rd1927;
	and.b64  	%rd1929, %rd1909, %rd1884;
	xor.b64  	%rd1930, %rd1909, %rd1884;
	and.b64  	%rd1931, %rd1930, %rd1859;
	or.b64  	%rd1932, %rd1931, %rd1929;
	add.s64 	%rd1933, %rd1928, %rd1932;
	add.s64 	%rd1934, %rd1933, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1923;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd1935, {%r1272, %r1271};
	shf.r.wrap.b32 	%r1273, %r1270, %r1269, 18;
	shf.r.wrap.b32 	%r1274, %r1269, %r1270, 18;
	mov.b64 	%rd1936, {%r1274, %r1273};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 23;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 23;
	mov.b64 	%rd1938, {%r1276, %r1275};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	xor.b64  	%rd1940, %rd1898, %rd1873;
	and.b64  	%rd1941, %rd1923, %rd1940;
	xor.b64  	%rd1942, %rd1941, %rd1873;
	ld.const.u64 	%rd1943, [%rd1759+56];
	add.s64 	%rd1944, %rd1943, %rd2216;
	add.s64 	%rd1945, %rd1944, %rd1848;
	add.s64 	%rd1946, %rd1945, %rd1942;
	add.s64 	%rd1947, %rd1946, %rd1939;
	add.s64 	%rd1948, %rd1947, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1934;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 28;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 28;
	mov.b64 	%rd1949, {%r1280, %r1279};
	shf.l.wrap.b32 	%r1281, %r1277, %r1278, 30;
	shf.l.wrap.b32 	%r1282, %r1278, %r1277, 30;
	mov.b64 	%rd1950, {%r1282, %r1281};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 25;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 25;
	mov.b64 	%rd1952, {%r1284, %r1283};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	and.b64  	%rd1954, %rd1934, %rd1909;
	xor.b64  	%rd1955, %rd1934, %rd1909;
	and.b64  	%rd1956, %rd1955, %rd1884;
	or.b64  	%rd1957, %rd1956, %rd1954;
	add.s64 	%rd1958, %rd1953, %rd1957;
	add.s64 	%rd1959, %rd1958, %rd1947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1948;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 14;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 14;
	mov.b64 	%rd1960, {%r1288, %r1287};
	shf.r.wrap.b32 	%r1289, %r1286, %r1285, 18;
	shf.r.wrap.b32 	%r1290, %r1285, %r1286, 18;
	mov.b64 	%rd1961, {%r1290, %r1289};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 23;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 23;
	mov.b64 	%rd1963, {%r1292, %r1291};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1923, %rd1898;
	and.b64  	%rd1966, %rd1948, %rd1965;
	xor.b64  	%rd1967, %rd1966, %rd1898;
	ld.const.u64 	%rd1968, [%rd1759+64];
	add.s64 	%rd1969, %rd1968, %rd2200;
	add.s64 	%rd1970, %rd1969, %rd1873;
	add.s64 	%rd1971, %rd1970, %rd1967;
	add.s64 	%rd1972, %rd1971, %rd1964;
	add.s64 	%rd1973, %rd1972, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1959;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 28;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 28;
	mov.b64 	%rd1974, {%r1296, %r1295};
	shf.l.wrap.b32 	%r1297, %r1293, %r1294, 30;
	shf.l.wrap.b32 	%r1298, %r1294, %r1293, 30;
	mov.b64 	%rd1975, {%r1298, %r1297};
	xor.b64  	%rd1976, %rd1974, %rd1975;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 25;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 25;
	mov.b64 	%rd1977, {%r1300, %r1299};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	and.b64  	%rd1979, %rd1959, %rd1934;
	xor.b64  	%rd1980, %rd1959, %rd1934;
	and.b64  	%rd1981, %rd1980, %rd1909;
	or.b64  	%rd1982, %rd1981, %rd1979;
	add.s64 	%rd1983, %rd1978, %rd1982;
	add.s64 	%rd1984, %rd1983, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1973;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 14;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 14;
	mov.b64 	%rd1985, {%r1304, %r1303};
	shf.r.wrap.b32 	%r1305, %r1302, %r1301, 18;
	shf.r.wrap.b32 	%r1306, %r1301, %r1302, 18;
	mov.b64 	%rd1986, {%r1306, %r1305};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 23;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 23;
	mov.b64 	%rd1988, {%r1308, %r1307};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	xor.b64  	%rd1990, %rd1948, %rd1923;
	and.b64  	%rd1991, %rd1973, %rd1990;
	xor.b64  	%rd1992, %rd1991, %rd1923;
	ld.const.u64 	%rd1993, [%rd1759+72];
	add.s64 	%rd1994, %rd1993, %rd2199;
	add.s64 	%rd1995, %rd1994, %rd1898;
	add.s64 	%rd1996, %rd1995, %rd1992;
	add.s64 	%rd1997, %rd1996, %rd1989;
	add.s64 	%rd1998, %rd1997, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd1984;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 28;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 28;
	mov.b64 	%rd1999, {%r1312, %r1311};
	shf.l.wrap.b32 	%r1313, %r1309, %r1310, 30;
	shf.l.wrap.b32 	%r1314, %r1310, %r1309, 30;
	mov.b64 	%rd2000, {%r1314, %r1313};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 25;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 25;
	mov.b64 	%rd2002, {%r1316, %r1315};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	and.b64  	%rd2004, %rd1984, %rd1959;
	xor.b64  	%rd2005, %rd1984, %rd1959;
	and.b64  	%rd2006, %rd2005, %rd1934;
	or.b64  	%rd2007, %rd2006, %rd2004;
	add.s64 	%rd2008, %rd2003, %rd2007;
	add.s64 	%rd2009, %rd2008, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1998;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 14;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 14;
	mov.b64 	%rd2010, {%r1320, %r1319};
	shf.r.wrap.b32 	%r1321, %r1318, %r1317, 18;
	shf.r.wrap.b32 	%r1322, %r1317, %r1318, 18;
	mov.b64 	%rd2011, {%r1322, %r1321};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 23;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 23;
	mov.b64 	%rd2013, {%r1324, %r1323};
	xor.b64  	%rd2014, %rd2012, %rd2013;
	xor.b64  	%rd2015, %rd1973, %rd1948;
	and.b64  	%rd2016, %rd1998, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1948;
	ld.const.u64 	%rd2018, [%rd1759+80];
	add.s64 	%rd2019, %rd2018, %rd2198;
	add.s64 	%rd2020, %rd2019, %rd1923;
	add.s64 	%rd2021, %rd2020, %rd2017;
	add.s64 	%rd2022, %rd2021, %rd2014;
	add.s64 	%rd2023, %rd2022, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd2009;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 28;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 28;
	mov.b64 	%rd2024, {%r1328, %r1327};
	shf.l.wrap.b32 	%r1329, %r1325, %r1326, 30;
	shf.l.wrap.b32 	%r1330, %r1326, %r1325, 30;
	mov.b64 	%rd2025, {%r1330, %r1329};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 25;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 25;
	mov.b64 	%rd2027, {%r1332, %r1331};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	and.b64  	%rd2029, %rd2009, %rd1984;
	xor.b64  	%rd2030, %rd2009, %rd1984;
	and.b64  	%rd2031, %rd2030, %rd1959;
	or.b64  	%rd2032, %rd2031, %rd2029;
	add.s64 	%rd2033, %rd2028, %rd2032;
	add.s64 	%rd2034, %rd2033, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd2023;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 14;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 14;
	mov.b64 	%rd2035, {%r1336, %r1335};
	shf.r.wrap.b32 	%r1337, %r1334, %r1333, 18;
	shf.r.wrap.b32 	%r1338, %r1333, %r1334, 18;
	mov.b64 	%rd2036, {%r1338, %r1337};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 23;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 23;
	mov.b64 	%rd2038, {%r1340, %r1339};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	xor.b64  	%rd2040, %rd1998, %rd1973;
	and.b64  	%rd2041, %rd2023, %rd2040;
	xor.b64  	%rd2042, %rd2041, %rd1973;
	ld.const.u64 	%rd2043, [%rd1759+88];
	add.s64 	%rd2044, %rd2043, %rd2197;
	add.s64 	%rd2045, %rd2044, %rd1948;
	add.s64 	%rd2046, %rd2045, %rd2042;
	add.s64 	%rd2047, %rd2046, %rd2039;
	add.s64 	%rd2048, %rd2047, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd2034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd2034;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 28;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 28;
	mov.b64 	%rd2049, {%r1344, %r1343};
	shf.l.wrap.b32 	%r1345, %r1341, %r1342, 30;
	shf.l.wrap.b32 	%r1346, %r1342, %r1341, 30;
	mov.b64 	%rd2050, {%r1346, %r1345};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 25;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 25;
	mov.b64 	%rd2052, {%r1348, %r1347};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	and.b64  	%rd2054, %rd2034, %rd2009;
	xor.b64  	%rd2055, %rd2034, %rd2009;
	and.b64  	%rd2056, %rd2055, %rd1984;
	or.b64  	%rd2057, %rd2056, %rd2054;
	add.s64 	%rd2058, %rd2053, %rd2057;
	add.s64 	%rd2059, %rd2058, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd2048;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 14;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 14;
	mov.b64 	%rd2060, {%r1352, %r1351};
	shf.r.wrap.b32 	%r1353, %r1350, %r1349, 18;
	shf.r.wrap.b32 	%r1354, %r1349, %r1350, 18;
	mov.b64 	%rd2061, {%r1354, %r1353};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 23;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 23;
	mov.b64 	%rd2063, {%r1356, %r1355};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2023, %rd1998;
	and.b64  	%rd2066, %rd2048, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd1998;
	ld.const.u64 	%rd2068, [%rd1759+96];
	add.s64 	%rd2069, %rd2068, %rd2196;
	add.s64 	%rd2070, %rd2069, %rd1973;
	add.s64 	%rd2071, %rd2070, %rd2067;
	add.s64 	%rd2072, %rd2071, %rd2064;
	add.s64 	%rd2208, %rd2072, %rd1984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd2059;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 28;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 28;
	mov.b64 	%rd2073, {%r1360, %r1359};
	shf.l.wrap.b32 	%r1361, %r1357, %r1358, 30;
	shf.l.wrap.b32 	%r1362, %r1358, %r1357, 30;
	mov.b64 	%rd2074, {%r1362, %r1361};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shf.l.wrap.b32 	%r1363, %r1357, %r1358, 25;
	shf.l.wrap.b32 	%r1364, %r1358, %r1357, 25;
	mov.b64 	%rd2076, {%r1364, %r1363};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	and.b64  	%rd2078, %rd2059, %rd2034;
	xor.b64  	%rd2079, %rd2059, %rd2034;
	and.b64  	%rd2080, %rd2079, %rd2009;
	or.b64  	%rd2081, %rd2080, %rd2078;
	add.s64 	%rd2082, %rd2077, %rd2081;
	add.s64 	%rd2204, %rd2082, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd2208;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 14;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 14;
	mov.b64 	%rd2083, {%r1368, %r1367};
	shf.r.wrap.b32 	%r1369, %r1366, %r1365, 18;
	shf.r.wrap.b32 	%r1370, %r1365, %r1366, 18;
	mov.b64 	%rd2084, {%r1370, %r1369};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	shf.l.wrap.b32 	%r1371, %r1365, %r1366, 23;
	shf.l.wrap.b32 	%r1372, %r1366, %r1365, 23;
	mov.b64 	%rd2086, {%r1372, %r1371};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	xor.b64  	%rd2088, %rd2048, %rd2023;
	and.b64  	%rd2089, %rd2208, %rd2088;
	xor.b64  	%rd2090, %rd2089, %rd2023;
	ld.const.u64 	%rd2091, [%rd1759+104];
	add.s64 	%rd2092, %rd2091, %rd2195;
	add.s64 	%rd2093, %rd2092, %rd1998;
	add.s64 	%rd2094, %rd2093, %rd2090;
	add.s64 	%rd2095, %rd2094, %rd2087;
	add.s64 	%rd2207, %rd2095, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd2204;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 28;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 28;
	mov.b64 	%rd2096, {%r1376, %r1375};
	shf.l.wrap.b32 	%r1377, %r1373, %r1374, 30;
	shf.l.wrap.b32 	%r1378, %r1374, %r1373, 30;
	mov.b64 	%rd2097, {%r1378, %r1377};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 25;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 25;
	mov.b64 	%rd2099, {%r1380, %r1379};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	and.b64  	%rd2101, %rd2204, %rd2059;
	xor.b64  	%rd2102, %rd2204, %rd2059;
	and.b64  	%rd2103, %rd2102, %rd2034;
	or.b64  	%rd2104, %rd2103, %rd2101;
	add.s64 	%rd2105, %rd2100, %rd2104;
	add.s64 	%rd2203, %rd2105, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd2207;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 14;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 14;
	mov.b64 	%rd2106, {%r1384, %r1383};
	shf.r.wrap.b32 	%r1385, %r1382, %r1381, 18;
	shf.r.wrap.b32 	%r1386, %r1381, %r1382, 18;
	mov.b64 	%rd2107, {%r1386, %r1385};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 23;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 23;
	mov.b64 	%rd2109, {%r1388, %r1387};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	xor.b64  	%rd2111, %rd2208, %rd2048;
	and.b64  	%rd2112, %rd2207, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2048;
	ld.const.u64 	%rd2114, [%rd1759+112];
	add.s64 	%rd2115, %rd2114, %rd2194;
	add.s64 	%rd2116, %rd2115, %rd2023;
	add.s64 	%rd2117, %rd2116, %rd2113;
	add.s64 	%rd2118, %rd2117, %rd2110;
	add.s64 	%rd2206, %rd2118, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2203;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 28;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 28;
	mov.b64 	%rd2119, {%r1392, %r1391};
	shf.l.wrap.b32 	%r1393, %r1389, %r1390, 30;
	shf.l.wrap.b32 	%r1394, %r1390, %r1389, 30;
	mov.b64 	%rd2120, {%r1394, %r1393};
	xor.b64  	%rd2121, %rd2119, %rd2120;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 25;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 25;
	mov.b64 	%rd2122, {%r1396, %r1395};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	and.b64  	%rd2124, %rd2203, %rd2204;
	xor.b64  	%rd2125, %rd2203, %rd2204;
	and.b64  	%rd2126, %rd2125, %rd2059;
	or.b64  	%rd2127, %rd2126, %rd2124;
	add.s64 	%rd2128, %rd2123, %rd2127;
	add.s64 	%rd2202, %rd2128, %rd2118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2206;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 14;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 14;
	mov.b64 	%rd2129, {%r1400, %r1399};
	shf.r.wrap.b32 	%r1401, %r1398, %r1397, 18;
	shf.r.wrap.b32 	%r1402, %r1397, %r1398, 18;
	mov.b64 	%rd2130, {%r1402, %r1401};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 23;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 23;
	mov.b64 	%rd2132, {%r1404, %r1403};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2207, %rd2208;
	and.b64  	%rd2135, %rd2206, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2208;
	ld.const.u64 	%rd2137, [%rd1759+120];
	add.s64 	%rd2138, %rd2137, %rd2193;
	add.s64 	%rd2139, %rd2138, %rd2048;
	add.s64 	%rd2140, %rd2139, %rd2136;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2205, %rd2141, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2202;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 28;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 28;
	mov.b64 	%rd2142, {%r1408, %r1407};
	shf.l.wrap.b32 	%r1409, %r1405, %r1406, 30;
	shf.l.wrap.b32 	%r1410, %r1406, %r1405, 30;
	mov.b64 	%rd2143, {%r1410, %r1409};
	xor.b64  	%rd2144, %rd2142, %rd2143;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 25;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 25;
	mov.b64 	%rd2145, {%r1412, %r1411};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	and.b64  	%rd2147, %rd2202, %rd2203;
	xor.b64  	%rd2148, %rd2202, %rd2203;
	and.b64  	%rd2149, %rd2148, %rd2204;
	or.b64  	%rd2150, %rd2149, %rd2147;
	add.s64 	%rd2151, %rd2146, %rd2150;
	add.s64 	%rd2201, %rd2151, %rd2141;
	add.s32 	%r1415, %r1415, 16;
	setp.lt.s32	%p4, %r1415, 80;
	@%p4 bra 	BB4_6;

	add.s64 	%rd2185, %rd2201, %rd33;
	xor.b64  	%rd2217, %rd2185, %rd2217;
	add.s64 	%rd2186, %rd2202, %rd32;
	xor.b64  	%rd2218, %rd2186, %rd2218;
	add.s64 	%rd2187, %rd2203, %rd34;
	xor.b64  	%rd2219, %rd2187, %rd2219;
	add.s64 	%rd2188, %rd2204, %rd5;
	xor.b64  	%rd2220, %rd2188, %rd2220;
	add.s64 	%rd2189, %rd2205, %rd31;
	xor.b64  	%rd2221, %rd2189, %rd2221;
	add.s64 	%rd2190, %rd2206, %rd30;
	xor.b64  	%rd2222, %rd2190, %rd2222;
	add.s64 	%rd2191, %rd2207, %rd29;
	xor.b64  	%rd2223, %rd2191, %rd2223;
	add.s64 	%rd2192, %rd2208, %rd6;
	xor.b64  	%rd2224, %rd2192, %rd2224;
	add.s32 	%r1413, %r1413, 1;
	setp.lt.u32	%p5, %r1413, %r2;
	@%p5 bra 	BB4_3;

BB4_8:
	st.global.u64 	[%rd2+128], %rd2185;
	st.global.u64 	[%rd2+136], %rd2186;
	st.global.u64 	[%rd2+144], %rd2187;
	st.global.u64 	[%rd2+152], %rd2188;
	st.global.u64 	[%rd2+160], %rd2189;
	st.global.u64 	[%rd2+168], %rd2190;
	st.global.u64 	[%rd2+176], %rd2191;
	st.global.u64 	[%rd2+184], %rd2192;
	st.global.u64 	[%rd2+256], %rd2217;
	st.global.u64 	[%rd2+264], %rd2218;
	st.global.u64 	[%rd2+272], %rd2219;
	st.global.u64 	[%rd2+280], %rd2220;
	st.global.u64 	[%rd2+288], %rd2221;
	st.global.u64 	[%rd2+296], %rd2222;
	st.global.u64 	[%rd2+304], %rd2223;
	st.global.u64 	[%rd2+312], %rd2224;

BB4_9:
	ret;
}

	// .globl	m07100_comp
.entry m07100_comp(
	.param .u64 .ptr .global .align 4 m07100_comp_param_0,
	.param .u64 .ptr .global .align 4 m07100_comp_param_1,
	.param .u64 .ptr .global .align 4 m07100_comp_param_2,
	.param .u64 .ptr .const .align 4 m07100_comp_param_3,
	.param .u64 .ptr .global .align 8 m07100_comp_param_4,
	.param .u64 .ptr .global .align 1 m07100_comp_param_5,
	.param .u64 .ptr .global .align 4 m07100_comp_param_6,
	.param .u64 .ptr .global .align 4 m07100_comp_param_7,
	.param .u64 .ptr .global .align 4 m07100_comp_param_8,
	.param .u64 .ptr .global .align 4 m07100_comp_param_9,
	.param .u64 .ptr .global .align 4 m07100_comp_param_10,
	.param .u64 .ptr .global .align 4 m07100_comp_param_11,
	.param .u64 .ptr .global .align 4 m07100_comp_param_12,
	.param .u64 .ptr .global .align 4 m07100_comp_param_13,
	.param .u64 .ptr .global .align 8 m07100_comp_param_14,
	.param .u64 .ptr .global .align 4 m07100_comp_param_15,
	.param .u64 .ptr .global .align 4 m07100_comp_param_16,
	.param .u64 .ptr .global .align 4 m07100_comp_param_17,
	.param .u64 .ptr .global .align 4 m07100_comp_param_18,
	.param .u64 .ptr .global .align 4 m07100_comp_param_19,
	.param .u64 .ptr .global .align 1 m07100_comp_param_20,
	.param .u64 .ptr .global .align 1 m07100_comp_param_21,
	.param .u64 .ptr .global .align 1 m07100_comp_param_22,
	.param .u64 .ptr .global .align 1 m07100_comp_param_23,
	.param .u64 .ptr .global .align 8 m07100_comp_param_24
)
{
	.local .align 4 .b8 	__local_depot5[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<116>;
	.reg .b64 	%rd<52>;


	mov.u64 	%SPL, __local_depot5;
	ld.param.u64 	%rd6, [m07100_comp_param_4];
	ld.param.u64 	%rd7, [m07100_comp_param_6];
	ld.param.u64 	%rd8, [m07100_comp_param_7];
	ld.param.u64 	%rd9, [m07100_comp_param_8];
	ld.param.u64 	%rd10, [m07100_comp_param_9];
	ld.param.u64 	%rd11, [m07100_comp_param_10];
	ld.param.u64 	%rd12, [m07100_comp_param_11];
	ld.param.u64 	%rd13, [m07100_comp_param_12];
	ld.param.u64 	%rd14, [m07100_comp_param_13];
	ld.param.u64 	%rd15, [m07100_comp_param_14];
	ld.param.u64 	%rd16, [m07100_comp_param_15];
	ld.param.u64 	%rd17, [m07100_comp_param_16];
	ld.param.u64 	%rd18, [m07100_comp_param_19];
	ld.param.u64 	%rd19, [m07100_comp_param_24];
	mov.u32 	%r31, %ctaid.x;
	mov.u32 	%r32, %ntid.x;
	mov.b32	%r33, %envreg3;
	mad.lo.s32 	%r34, %r31, %r32, %r33;
	mov.u32 	%r35, %tid.x;
	add.s32 	%r1, %r34, %r35;
	cvt.s64.s32	%rd1, %r1;
	add.s64 	%rd2, %rd19, 56;
	ld.global.u64 	%rd20, [%rd19+56];
	setp.ge.u64	%p1, %rd1, %rd20;
	@%p1 bra 	BB5_28;

	mul.wide.s32 	%rd21, %r1, 384;
	add.s64 	%rd22, %rd6, %rd21;
	ld.global.v2.u32 	{%r36, %r37}, [%rd22+256];
	mov.u32 	%r38, 1;
	ld.global.v2.u32 	{%r39, %r40}, [%rd22+264];
	add.s64 	%rd3, %rd2, -56;
	ld.global.u32 	%r41, [%rd2+-52];
	and.b32  	%r8, %r41, 31;
	shr.u32 	%r42, %r36, %r8;
	ld.global.u32 	%r9, [%rd2+-56];
	and.b32  	%r43, %r42, %r9;
	mul.wide.u32 	%rd23, %r43, 4;
	add.s64 	%rd24, %rd7, %rd23;
	and.b32  	%r44, %r36, 31;
	shl.b32 	%r45, %r38, %r44;
	ld.global.u32 	%r46, [%rd24];
	and.b32  	%r47, %r46, %r45;
	setp.eq.s32	%p2, %r47, 0;
	@%p2 bra 	BB5_28;

	shr.u32 	%r48, %r37, %r8;
	and.b32  	%r49, %r48, %r9;
	mul.wide.u32 	%rd25, %r49, 4;
	add.s64 	%rd26, %rd8, %rd25;
	and.b32  	%r50, %r37, 31;
	shl.b32 	%r10, %r38, %r50;
	ld.global.u32 	%r52, [%rd26];
	and.b32  	%r53, %r52, %r10;
	setp.eq.s32	%p3, %r53, 0;
	@%p3 bra 	BB5_28;

	shr.u32 	%r54, %r39, %r8;
	and.b32  	%r55, %r54, %r9;
	mul.wide.u32 	%rd27, %r55, 4;
	add.s64 	%rd28, %rd9, %rd27;
	and.b32  	%r56, %r39, 31;
	shl.b32 	%r11, %r38, %r56;
	ld.global.u32 	%r58, [%rd28];
	and.b32  	%r59, %r58, %r11;
	setp.eq.s32	%p4, %r59, 0;
	@%p4 bra 	BB5_28;

	shr.u32 	%r61, %r40, %r8;
	and.b32  	%r62, %r61, %r9;
	mul.wide.u32 	%rd29, %r62, 4;
	add.s64 	%rd30, %rd10, %rd29;
	and.b32  	%r63, %r40, 31;
	shl.b32 	%r12, %r38, %r63;
	ld.global.u32 	%r64, [%rd30];
	and.b32  	%r65, %r64, %r12;
	setp.eq.s32	%p5, %r65, 0;
	@%p5 bra 	BB5_28;

	ld.global.u32 	%r66, [%rd3+8];
	and.b32  	%r13, %r66, 31;
	shr.u32 	%r67, %r36, %r13;
	and.b32  	%r68, %r67, %r9;
	mul.wide.u32 	%rd31, %r68, 4;
	add.s64 	%rd32, %rd11, %rd31;
	ld.global.u32 	%r72, [%rd32];
	and.b32  	%r73, %r72, %r45;
	setp.eq.s32	%p6, %r73, 0;
	@%p6 bra 	BB5_28;

	shr.u32 	%r74, %r37, %r13;
	and.b32  	%r75, %r74, %r9;
	mul.wide.u32 	%rd33, %r75, 4;
	add.s64 	%rd34, %rd12, %rd33;
	ld.global.u32 	%r76, [%rd34];
	and.b32  	%r77, %r76, %r10;
	setp.eq.s32	%p7, %r77, 0;
	@%p7 bra 	BB5_28;

	shr.u32 	%r78, %r39, %r13;
	and.b32  	%r79, %r78, %r9;
	mul.wide.u32 	%rd35, %r79, 4;
	add.s64 	%rd36, %rd13, %rd35;
	ld.global.u32 	%r80, [%rd36];
	and.b32  	%r81, %r80, %r11;
	setp.eq.s32	%p8, %r81, 0;
	@%p8 bra 	BB5_28;

	shr.u32 	%r82, %r40, %r13;
	and.b32  	%r83, %r82, %r9;
	mul.wide.u32 	%rd37, %r83, 4;
	add.s64 	%rd38, %rd14, %rd37;
	ld.global.u32 	%r84, [%rd38];
	and.b32  	%r85, %r84, %r12;
	setp.eq.s32	%p9, %r85, 0;
	@%p9 bra 	BB5_28;

	ld.global.u32 	%rd4, [%rd19+32];
	ld.global.u32 	%r112, [%rd19+28];
	setp.eq.s32	%p10, %r112, 0;
	mov.u32 	%r113, 0;
	mov.u32 	%r86, -1;
	@%p10 bra 	BB5_22;

BB5_10:
	shr.u32 	%r17, %r112, 1;
	add.s32 	%r115, %r17, %r113;
	cvt.u64.u32	%rd39, %r115;
	add.s64 	%rd40, %rd39, %rd4;
	shl.b64 	%rd41, %rd40, 7;
	add.s64 	%rd5, %rd16, %rd41;
	ld.global.u32 	%r19, [%rd5+12];
	setp.gt.u32	%p11, %r40, %r19;
	mov.u32 	%r114, %r38;
	@%p11 bra 	BB5_20;

	setp.lt.u32	%p12, %r40, %r19;
	mov.u32 	%r89, -1;
	@%p12 bra 	BB5_12;
	bra.uni 	BB5_13;

BB5_12:
	mov.u32 	%r114, %r89;
	bra.uni 	BB5_20;

BB5_13:
	ld.global.u32 	%r20, [%rd5+8];
	setp.gt.u32	%p13, %r39, %r20;
	mov.u32 	%r114, %r38;
	@%p13 bra 	BB5_20;

	setp.lt.u32	%p14, %r39, %r20;
	@%p14 bra 	BB5_15;
	bra.uni 	BB5_16;

BB5_15:
	mov.u32 	%r114, %r89;
	bra.uni 	BB5_20;

BB5_16:
	ld.global.u32 	%r21, [%rd5+4];
	setp.gt.u32	%p15, %r37, %r21;
	mov.u32 	%r114, %r38;
	@%p15 bra 	BB5_20;

	setp.lt.u32	%p16, %r37, %r21;
	mov.u32 	%r114, %r89;
	@%p16 bra 	BB5_20;

	ld.global.u32 	%r22, [%rd5];
	setp.gt.u32	%p17, %r36, %r22;
	mov.u32 	%r114, %r38;
	@%p17 bra 	BB5_20;

	setp.lt.u32	%p18, %r36, %r22;
	selp.b32	%r114, -1, 0, %p18;

BB5_20:
	add.s32 	%r95, %r17, 1;
	setp.gt.s32	%p19, %r114, 0;
	selp.b32	%r96, %r95, 0, %p19;
	add.s32 	%r113, %r96, %r113;
	selp.b32	%r97, -1, 0, %p19;
	add.s32 	%r98, %r97, %r112;
	shr.u32 	%r112, %r98, 1;
	setp.eq.s32	%p20, %r114, 0;
	@%p20 bra 	BB5_23;

	setp.ne.s32	%p21, %r112, 0;
	@%p21 bra 	BB5_10;

BB5_22:
	mov.u32 	%r115, %r86;

BB5_23:
	setp.eq.s32	%p22, %r115, -1;
	@%p22 bra 	BB5_28;

	cvt.u32.u64	%r100, %rd4;
	add.s32 	%r28, %r100, %r115;
	mul.wide.u32 	%rd42, %r28, 4;
	add.s64 	%rd43, %rd17, %rd42;
	add.u64 	%rd45, %SPL, 0;
	mov.u32 	%r101, 1;
	st.local.u32 	[%rd45], %r101;
	ld.local.u32 	%r102, [%rd45];
	atom.global.add.u32 	%r103, [%rd43], %r102;
	setp.ne.s32	%p23, %r103, 0;
	@%p23 bra 	BB5_28;

	ld.global.u32 	%r29, [%rd19+12];
	ld.global.u32 	%r104, [%rd19+28];
	add.u64 	%rd47, %SPL, 8;
	st.local.u32 	[%rd47], %r101;
	ld.local.u32 	%r106, [%rd47];
	atom.global.add.u32 	%r30, [%rd18], %r106;
	setp.lt.u32	%p24, %r30, %r104;
	@%p24 bra 	BB5_27;
	bra.uni 	BB5_26;

BB5_27:
	mul.wide.u32 	%rd50, %r30, 32;
	add.s64 	%rd51, %rd15, %rd50;
	st.global.u32 	[%rd51+12], %r29;
	st.global.u32 	[%rd51+16], %r115;
	st.global.u32 	[%rd51+20], %r28;
	st.global.u64 	[%rd51], %rd1;
	mov.u32 	%r111, 0;
	st.global.u32 	[%rd51+8], %r111;
	st.global.u32 	[%rd51+24], %r111;
	st.global.u32 	[%rd51+28], %r111;
	bra.uni 	BB5_28;

BB5_26:
	add.u64 	%rd49, %SPL, 4;
	st.local.u32 	[%rd49], %r101;
	ld.local.u32 	%r108, [%rd49];
	neg.s32 	%r109, %r108;
	atom.global.add.u32 	%r110, [%rd18], %r109;

BB5_28:
	ret;
}


  
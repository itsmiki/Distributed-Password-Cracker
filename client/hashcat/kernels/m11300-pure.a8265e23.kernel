//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.5
.target sm_61, texmode_independent
.address_size 64

.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 4 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 4 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 4 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 4 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 4 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 4 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 4 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 4 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 4 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 4 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
// m11300_comp$s_td0 has been demoted
// m11300_comp$s_td1 has been demoted
// m11300_comp$s_td2 has been demoted
// m11300_comp$s_td3 has been demoted
// m11300_comp$s_td4 has been demoted
// m11300_comp$s_te0 has been demoted
// m11300_comp$s_te1 has been demoted
// m11300_comp$s_te2 has been demoted
// m11300_comp$s_te3 has been demoted

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<99>;
	.reg .b32 	%r<11652>;
	.reg .b64 	%rd<5815>;


	ld.param.u64 	%rd17, [sha512_update_128_param_0];
	ld.param.u64 	%rd18, [sha512_update_128_param_1];
	ld.param.u64 	%rd19, [sha512_update_128_param_2];
	ld.param.u64 	%rd20, [sha512_update_128_param_3];
	ld.param.u64 	%rd21, [sha512_update_128_param_4];
	ld.param.u64 	%rd22, [sha512_update_128_param_5];
	ld.param.u64 	%rd23, [sha512_update_128_param_6];
	ld.param.u64 	%rd24, [sha512_update_128_param_7];
	ld.param.u64 	%rd25, [sha512_update_128_param_8];
	ld.param.u32 	%r603, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd18;
	cvta.to.local.u64 	%rd2, %rd19;
	cvta.to.local.u64 	%rd3, %rd20;
	cvta.to.local.u64 	%rd4, %rd21;
	cvta.to.local.u64 	%rd5, %rd22;
	cvta.to.local.u64 	%rd6, %rd23;
	cvta.to.local.u64 	%rd7, %rd24;
	cvta.to.local.u64 	%rd8, %rd25;
	cvta.to.local.u64 	%rd9, %rd17;
	setp.eq.s32	%p1, %r603, 0;
	@%p1 bra 	BB0_175;

	add.s64 	%rd10, %rd9, 192;
	ld.local.u32 	%r1, [%rd9+192];
	and.b32  	%r2, %r1, 127;
	add.s32 	%r604, %r1, %r603;
	st.local.u32 	[%rd9+192], %r604;
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_173;

	add.s32 	%r605, %r2, %r603;
	setp.lt.s32	%p3, %r605, 128;
	shr.u32 	%r3, %r2, 2;
	and.b32  	%r606, %r1, 3;
	shl.b32 	%r607, %r606, 2;
	mov.u32 	%r608, 1985229328;
	shr.u32 	%r609, %r608, %r607;
	and.b32  	%r4, %r609, 65535;
	@%p3 bra 	BB0_92;
	bra.uni 	BB0_3;

BB0_92:
	setp.gt.s32	%p51, %r3, 15;
	@%p51 bra 	BB0_124;

	setp.gt.s32	%p75, %r3, 7;
	@%p75 bra 	BB0_109;

	setp.gt.s32	%p87, %r3, 3;
	@%p87 bra 	BB0_102;

	setp.gt.s32	%p93, %r3, 1;
	@%p93 bra 	BB0_99;

	setp.eq.s32	%p96, %r3, 0;
	@%p96 bra 	BB0_170;
	bra.uni 	BB0_97;

BB0_170:
	ld.local.u32 	%r9450, [%rd8+12];
	ld.local.u32 	%r9451, [%rd8+8];
	// inline asm
	prmt.b32 %r9449, %r9450, %r9451, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r9449;
	ld.local.u32 	%r9454, [%rd8+8];
	ld.local.u32 	%r9455, [%rd8+4];
	// inline asm
	prmt.b32 %r9453, %r9454, %r9455, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r9453;
	ld.local.u32 	%r9458, [%rd8+4];
	ld.local.u32 	%r9459, [%rd8];
	// inline asm
	prmt.b32 %r9457, %r9458, %r9459, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r9457;
	ld.local.u32 	%r9462, [%rd8];
	ld.local.u32 	%r9463, [%rd7+12];
	// inline asm
	prmt.b32 %r9461, %r9462, %r9463, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r9461;
	ld.local.u32 	%r9466, [%rd7+12];
	ld.local.u32 	%r9467, [%rd7+8];
	// inline asm
	prmt.b32 %r9465, %r9466, %r9467, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r9465;
	ld.local.u32 	%r9470, [%rd7+8];
	ld.local.u32 	%r9471, [%rd7+4];
	// inline asm
	prmt.b32 %r9469, %r9470, %r9471, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r9469;
	ld.local.u32 	%r9474, [%rd7+4];
	ld.local.u32 	%r9475, [%rd7];
	// inline asm
	prmt.b32 %r9473, %r9474, %r9475, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r9473;
	ld.local.u32 	%r9478, [%rd7];
	ld.local.u32 	%r9479, [%rd6+12];
	// inline asm
	prmt.b32 %r9477, %r9478, %r9479, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r9477;
	ld.local.u32 	%r9482, [%rd6+12];
	ld.local.u32 	%r9483, [%rd6+8];
	// inline asm
	prmt.b32 %r9481, %r9482, %r9483, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r9481;
	ld.local.u32 	%r9486, [%rd6+8];
	ld.local.u32 	%r9487, [%rd6+4];
	// inline asm
	prmt.b32 %r9485, %r9486, %r9487, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r9485;
	ld.local.u32 	%r9490, [%rd6+4];
	ld.local.u32 	%r9491, [%rd6];
	// inline asm
	prmt.b32 %r9489, %r9490, %r9491, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r9489;
	ld.local.u32 	%r9494, [%rd6];
	ld.local.u32 	%r9495, [%rd5+12];
	// inline asm
	prmt.b32 %r9493, %r9494, %r9495, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r9493;
	ld.local.u32 	%r9498, [%rd5+12];
	ld.local.u32 	%r9499, [%rd5+8];
	// inline asm
	prmt.b32 %r9497, %r9498, %r9499, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r9497;
	ld.local.u32 	%r9502, [%rd5+8];
	ld.local.u32 	%r9503, [%rd5+4];
	// inline asm
	prmt.b32 %r9501, %r9502, %r9503, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r9501;
	ld.local.u32 	%r9506, [%rd5+4];
	ld.local.u32 	%r9507, [%rd5];
	// inline asm
	prmt.b32 %r9505, %r9506, %r9507, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r9505;
	ld.local.u32 	%r9510, [%rd5];
	ld.local.u32 	%r9511, [%rd4+12];
	// inline asm
	prmt.b32 %r9509, %r9510, %r9511, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r9509;
	ld.local.u32 	%r9514, [%rd4+12];
	ld.local.u32 	%r9515, [%rd4+8];
	// inline asm
	prmt.b32 %r9513, %r9514, %r9515, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r9513;
	ld.local.u32 	%r9518, [%rd4+8];
	ld.local.u32 	%r9519, [%rd4+4];
	// inline asm
	prmt.b32 %r9517, %r9518, %r9519, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r9517;
	ld.local.u32 	%r9522, [%rd4+4];
	ld.local.u32 	%r9523, [%rd4];
	// inline asm
	prmt.b32 %r9521, %r9522, %r9523, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r9521;
	ld.local.u32 	%r9526, [%rd4];
	ld.local.u32 	%r9527, [%rd3+12];
	// inline asm
	prmt.b32 %r9525, %r9526, %r9527, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r9525;
	ld.local.u32 	%r9530, [%rd3+12];
	ld.local.u32 	%r9531, [%rd3+8];
	// inline asm
	prmt.b32 %r9529, %r9530, %r9531, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r9529;
	ld.local.u32 	%r9534, [%rd3+8];
	ld.local.u32 	%r9535, [%rd3+4];
	// inline asm
	prmt.b32 %r9533, %r9534, %r9535, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r9533;
	ld.local.u32 	%r9538, [%rd3+4];
	ld.local.u32 	%r9539, [%rd3];
	// inline asm
	prmt.b32 %r9537, %r9538, %r9539, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r9537;
	ld.local.u32 	%r9542, [%rd3];
	ld.local.u32 	%r9543, [%rd2+12];
	// inline asm
	prmt.b32 %r9541, %r9542, %r9543, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r9541;
	ld.local.u32 	%r9546, [%rd2+12];
	ld.local.u32 	%r9547, [%rd2+8];
	// inline asm
	prmt.b32 %r9545, %r9546, %r9547, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r9545;
	ld.local.u32 	%r9550, [%rd2+8];
	ld.local.u32 	%r9551, [%rd2+4];
	// inline asm
	prmt.b32 %r9549, %r9550, %r9551, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r9549;
	ld.local.u32 	%r9554, [%rd2+4];
	ld.local.u32 	%r9555, [%rd2];
	// inline asm
	prmt.b32 %r9553, %r9554, %r9555, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r9553;
	ld.local.u32 	%r9558, [%rd2];
	ld.local.u32 	%r9559, [%rd1+12];
	// inline asm
	prmt.b32 %r9557, %r9558, %r9559, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r9557;
	ld.local.u32 	%r9562, [%rd1+12];
	ld.local.u32 	%r9563, [%rd1+8];
	// inline asm
	prmt.b32 %r9561, %r9562, %r9563, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r9561;
	ld.local.u32 	%r9566, [%rd1+8];
	ld.local.u32 	%r9567, [%rd1+4];
	// inline asm
	prmt.b32 %r9565, %r9566, %r9567, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r9565;
	ld.local.u32 	%r9570, [%rd1+4];
	ld.local.u32 	%r9571, [%rd1];
	// inline asm
	prmt.b32 %r9569, %r9570, %r9571, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r9569;
	ld.local.u32 	%r9574, [%rd1];
	mov.u32 	%r9575, 0;
	// inline asm
	prmt.b32 %r11651, %r9574, %r9575, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r11651;
	bra.uni 	BB0_172;

BB0_173:
	ld.local.u32 	%r571, [%rd1];
	st.local.u32 	[%rd10+-128], %r571;
	ld.local.u32 	%r572, [%rd1+4];
	st.local.u32 	[%rd10+-124], %r572;
	ld.local.u32 	%r573, [%rd1+8];
	st.local.u32 	[%rd10+-120], %r573;
	ld.local.u32 	%r574, [%rd1+12];
	st.local.u32 	[%rd10+-116], %r574;
	ld.local.u32 	%r575, [%rd2];
	st.local.u32 	[%rd10+-112], %r575;
	ld.local.u32 	%r576, [%rd2+4];
	st.local.u32 	[%rd10+-108], %r576;
	ld.local.u32 	%r577, [%rd2+8];
	st.local.u32 	[%rd10+-104], %r577;
	ld.local.u32 	%r578, [%rd2+12];
	st.local.u32 	[%rd10+-100], %r578;
	ld.local.u32 	%r579, [%rd3];
	st.local.u32 	[%rd10+-96], %r579;
	ld.local.u32 	%r580, [%rd3+4];
	st.local.u32 	[%rd10+-92], %r580;
	ld.local.u32 	%r581, [%rd3+8];
	st.local.u32 	[%rd10+-88], %r581;
	ld.local.u32 	%r582, [%rd3+12];
	st.local.u32 	[%rd10+-84], %r582;
	ld.local.u32 	%r583, [%rd4];
	st.local.u32 	[%rd10+-80], %r583;
	ld.local.u32 	%r584, [%rd4+4];
	st.local.u32 	[%rd10+-76], %r584;
	ld.local.u32 	%r585, [%rd4+8];
	st.local.u32 	[%rd10+-72], %r585;
	ld.local.u32 	%r586, [%rd4+12];
	st.local.u32 	[%rd10+-68], %r586;
	ld.local.u32 	%r587, [%rd5];
	st.local.u32 	[%rd10+-64], %r587;
	ld.local.u32 	%r588, [%rd5+4];
	st.local.u32 	[%rd10+-60], %r588;
	ld.local.u32 	%r589, [%rd5+8];
	st.local.u32 	[%rd10+-56], %r589;
	ld.local.u32 	%r590, [%rd5+12];
	st.local.u32 	[%rd10+-52], %r590;
	ld.local.u32 	%r591, [%rd6];
	st.local.u32 	[%rd10+-48], %r591;
	ld.local.u32 	%r592, [%rd6+4];
	st.local.u32 	[%rd10+-44], %r592;
	ld.local.u32 	%r593, [%rd6+8];
	st.local.u32 	[%rd10+-40], %r593;
	ld.local.u32 	%r594, [%rd6+12];
	st.local.u32 	[%rd10+-36], %r594;
	ld.local.u32 	%r595, [%rd7];
	st.local.u32 	[%rd10+-32], %r595;
	ld.local.u32 	%r596, [%rd7+4];
	st.local.u32 	[%rd10+-28], %r596;
	ld.local.u32 	%r597, [%rd7+8];
	st.local.u32 	[%rd10+-24], %r597;
	ld.local.u32 	%r598, [%rd7+12];
	st.local.u32 	[%rd10+-20], %r598;
	ld.local.u32 	%r599, [%rd8];
	st.local.u32 	[%rd10+-16], %r599;
	ld.local.u32 	%r600, [%rd8+4];
	st.local.u32 	[%rd10+-12], %r600;
	ld.local.u32 	%r601, [%rd8+8];
	st.local.u32 	[%rd10+-8], %r601;
	ld.local.u32 	%r602, [%rd8+12];
	st.local.u32 	[%rd10+-4], %r602;
	setp.ne.s32	%p98, %r603, 128;
	@%p98 bra 	BB0_175;

	mov.b64	%rd2950, {%r572, %r571};
	mov.b64	%rd2951, {%r574, %r573};
	mov.b64	%rd2952, {%r576, %r575};
	mov.b64	%rd2953, {%r578, %r577};
	mov.b64	%rd2954, {%r580, %r579};
	mov.b64	%rd2955, {%r582, %r581};
	mov.b64	%rd2956, {%r584, %r583};
	mov.b64	%rd2957, {%r586, %r585};
	mov.b64	%rd2958, {%r588, %r587};
	mov.b64	%rd2959, {%r590, %r589};
	mov.b64	%rd2960, {%r592, %r591};
	mov.b64	%rd2961, {%r594, %r593};
	mov.b64	%rd2962, {%r596, %r595};
	mov.b64	%rd2963, {%r598, %r597};
	mov.b64	%rd2964, {%r600, %r599};
	mov.b64	%rd2965, {%r602, %r601};
	ld.local.u64 	%rd2966, [%rd10+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd2966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9673}, %rd2966;
	}
	shf.r.wrap.b32 	%r9674, %r9673, %r9672, 14;
	shf.r.wrap.b32 	%r9675, %r9672, %r9673, 14;
	mov.b64 	%rd2967, {%r9675, %r9674};
	shf.r.wrap.b32 	%r9676, %r9673, %r9672, 18;
	shf.r.wrap.b32 	%r9677, %r9672, %r9673, 18;
	mov.b64 	%rd2968, {%r9677, %r9676};
	xor.b64  	%rd2969, %rd2967, %rd2968;
	shf.l.wrap.b32 	%r9678, %r9672, %r9673, 23;
	shf.l.wrap.b32 	%r9679, %r9673, %r9672, 23;
	mov.b64 	%rd2970, {%r9679, %r9678};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	ld.local.u64 	%rd2972, [%rd10+-144];
	ld.local.u64 	%rd2973, [%rd10+-152];
	xor.b64  	%rd2974, %rd2972, %rd2973;
	and.b64  	%rd2975, %rd2974, %rd2966;
	xor.b64  	%rd2976, %rd2975, %rd2972;
	ld.local.u64 	%rd2977, [%rd10+-136];
	add.s64 	%rd2978, %rd2971, %rd2977;
	add.s64 	%rd2979, %rd2978, %rd2976;
	add.s64 	%rd2980, %rd2979, %rd2950;
	ld.const.u64 	%rd2981, [k_sha512];
	add.s64 	%rd2982, %rd2980, %rd2981;
	ld.local.u64 	%rd2983, [%rd10+-168];
	add.s64 	%rd2984, %rd2982, %rd2983;
	ld.local.u64 	%rd2985, [%rd10+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd2985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9681}, %rd2985;
	}
	shf.r.wrap.b32 	%r9682, %r9681, %r9680, 28;
	shf.r.wrap.b32 	%r9683, %r9680, %r9681, 28;
	mov.b64 	%rd2986, {%r9683, %r9682};
	shf.l.wrap.b32 	%r9684, %r9680, %r9681, 30;
	shf.l.wrap.b32 	%r9685, %r9681, %r9680, 30;
	mov.b64 	%rd2987, {%r9685, %r9684};
	xor.b64  	%rd2988, %rd2986, %rd2987;
	shf.l.wrap.b32 	%r9686, %r9680, %r9681, 25;
	shf.l.wrap.b32 	%r9687, %r9681, %r9680, 25;
	mov.b64 	%rd2989, {%r9687, %r9686};
	xor.b64  	%rd2990, %rd2988, %rd2989;
	ld.local.u64 	%rd2991, [%rd10+-184];
	and.b64  	%rd2992, %rd2991, %rd2985;
	xor.b64  	%rd2993, %rd2991, %rd2985;
	ld.local.u64 	%rd2994, [%rd10+-176];
	and.b64  	%rd2995, %rd2994, %rd2993;
	or.b64  	%rd2996, %rd2995, %rd2992;
	add.s64 	%rd2997, %rd2996, %rd2990;
	add.s64 	%rd2998, %rd2997, %rd2982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9688,%dummy}, %rd2984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9689}, %rd2984;
	}
	shf.r.wrap.b32 	%r9690, %r9689, %r9688, 14;
	shf.r.wrap.b32 	%r9691, %r9688, %r9689, 14;
	mov.b64 	%rd2999, {%r9691, %r9690};
	shf.r.wrap.b32 	%r9692, %r9689, %r9688, 18;
	shf.r.wrap.b32 	%r9693, %r9688, %r9689, 18;
	mov.b64 	%rd3000, {%r9693, %r9692};
	xor.b64  	%rd3001, %rd2999, %rd3000;
	shf.l.wrap.b32 	%r9694, %r9688, %r9689, 23;
	shf.l.wrap.b32 	%r9695, %r9689, %r9688, 23;
	mov.b64 	%rd3002, {%r9695, %r9694};
	xor.b64  	%rd3003, %rd3001, %rd3002;
	xor.b64  	%rd3004, %rd2973, %rd2966;
	and.b64  	%rd3005, %rd2984, %rd3004;
	xor.b64  	%rd3006, %rd3005, %rd2973;
	add.s64 	%rd3007, %rd2951, %rd2972;
	ld.const.u64 	%rd3008, [k_sha512+8];
	add.s64 	%rd3009, %rd3007, %rd3008;
	add.s64 	%rd3010, %rd3009, %rd3006;
	add.s64 	%rd3011, %rd3010, %rd3003;
	add.s64 	%rd3012, %rd3011, %rd2994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9696,%dummy}, %rd2998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9697}, %rd2998;
	}
	shf.r.wrap.b32 	%r9698, %r9697, %r9696, 28;
	shf.r.wrap.b32 	%r9699, %r9696, %r9697, 28;
	mov.b64 	%rd3013, {%r9699, %r9698};
	shf.l.wrap.b32 	%r9700, %r9696, %r9697, 30;
	shf.l.wrap.b32 	%r9701, %r9697, %r9696, 30;
	mov.b64 	%rd3014, {%r9701, %r9700};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	shf.l.wrap.b32 	%r9702, %r9696, %r9697, 25;
	shf.l.wrap.b32 	%r9703, %r9697, %r9696, 25;
	mov.b64 	%rd3016, {%r9703, %r9702};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	and.b64  	%rd3018, %rd2998, %rd2985;
	xor.b64  	%rd3019, %rd2998, %rd2985;
	and.b64  	%rd3020, %rd3019, %rd2991;
	or.b64  	%rd3021, %rd3020, %rd3018;
	add.s64 	%rd3022, %rd3017, %rd3021;
	add.s64 	%rd3023, %rd3022, %rd3011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd3012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd3012;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 14;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 14;
	mov.b64 	%rd3024, {%r9707, %r9706};
	shf.r.wrap.b32 	%r9708, %r9705, %r9704, 18;
	shf.r.wrap.b32 	%r9709, %r9704, %r9705, 18;
	mov.b64 	%rd3025, {%r9709, %r9708};
	xor.b64  	%rd3026, %rd3024, %rd3025;
	shf.l.wrap.b32 	%r9710, %r9704, %r9705, 23;
	shf.l.wrap.b32 	%r9711, %r9705, %r9704, 23;
	mov.b64 	%rd3027, {%r9711, %r9710};
	xor.b64  	%rd3028, %rd3026, %rd3027;
	xor.b64  	%rd3029, %rd2984, %rd2966;
	and.b64  	%rd3030, %rd3012, %rd3029;
	xor.b64  	%rd3031, %rd3030, %rd2966;
	add.s64 	%rd3032, %rd2952, %rd2973;
	ld.const.u64 	%rd3033, [k_sha512+16];
	add.s64 	%rd3034, %rd3032, %rd3033;
	add.s64 	%rd3035, %rd3034, %rd3031;
	add.s64 	%rd3036, %rd3035, %rd3028;
	add.s64 	%rd3037, %rd3036, %rd2991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd3023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9713}, %rd3023;
	}
	shf.r.wrap.b32 	%r9714, %r9713, %r9712, 28;
	shf.r.wrap.b32 	%r9715, %r9712, %r9713, 28;
	mov.b64 	%rd3038, {%r9715, %r9714};
	shf.l.wrap.b32 	%r9716, %r9712, %r9713, 30;
	shf.l.wrap.b32 	%r9717, %r9713, %r9712, 30;
	mov.b64 	%rd3039, {%r9717, %r9716};
	xor.b64  	%rd3040, %rd3038, %rd3039;
	shf.l.wrap.b32 	%r9718, %r9712, %r9713, 25;
	shf.l.wrap.b32 	%r9719, %r9713, %r9712, 25;
	mov.b64 	%rd3041, {%r9719, %r9718};
	xor.b64  	%rd3042, %rd3040, %rd3041;
	and.b64  	%rd3043, %rd3023, %rd2998;
	xor.b64  	%rd3044, %rd3023, %rd2998;
	and.b64  	%rd3045, %rd3044, %rd2985;
	or.b64  	%rd3046, %rd3045, %rd3043;
	add.s64 	%rd3047, %rd3042, %rd3046;
	add.s64 	%rd3048, %rd3047, %rd3036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd3037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9721}, %rd3037;
	}
	shf.r.wrap.b32 	%r9722, %r9721, %r9720, 14;
	shf.r.wrap.b32 	%r9723, %r9720, %r9721, 14;
	mov.b64 	%rd3049, {%r9723, %r9722};
	shf.r.wrap.b32 	%r9724, %r9721, %r9720, 18;
	shf.r.wrap.b32 	%r9725, %r9720, %r9721, 18;
	mov.b64 	%rd3050, {%r9725, %r9724};
	xor.b64  	%rd3051, %rd3049, %rd3050;
	shf.l.wrap.b32 	%r9726, %r9720, %r9721, 23;
	shf.l.wrap.b32 	%r9727, %r9721, %r9720, 23;
	mov.b64 	%rd3052, {%r9727, %r9726};
	xor.b64  	%rd3053, %rd3051, %rd3052;
	xor.b64  	%rd3054, %rd3012, %rd2984;
	and.b64  	%rd3055, %rd3037, %rd3054;
	xor.b64  	%rd3056, %rd3055, %rd2984;
	add.s64 	%rd3057, %rd2953, %rd2966;
	ld.const.u64 	%rd3058, [k_sha512+24];
	add.s64 	%rd3059, %rd3057, %rd3058;
	add.s64 	%rd3060, %rd3059, %rd3056;
	add.s64 	%rd3061, %rd3060, %rd3053;
	add.s64 	%rd3062, %rd3061, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9729}, %rd3048;
	}
	shf.r.wrap.b32 	%r9730, %r9729, %r9728, 28;
	shf.r.wrap.b32 	%r9731, %r9728, %r9729, 28;
	mov.b64 	%rd3063, {%r9731, %r9730};
	shf.l.wrap.b32 	%r9732, %r9728, %r9729, 30;
	shf.l.wrap.b32 	%r9733, %r9729, %r9728, 30;
	mov.b64 	%rd3064, {%r9733, %r9732};
	xor.b64  	%rd3065, %rd3063, %rd3064;
	shf.l.wrap.b32 	%r9734, %r9728, %r9729, 25;
	shf.l.wrap.b32 	%r9735, %r9729, %r9728, 25;
	mov.b64 	%rd3066, {%r9735, %r9734};
	xor.b64  	%rd3067, %rd3065, %rd3066;
	and.b64  	%rd3068, %rd3048, %rd3023;
	xor.b64  	%rd3069, %rd3048, %rd3023;
	and.b64  	%rd3070, %rd3069, %rd2998;
	or.b64  	%rd3071, %rd3070, %rd3068;
	add.s64 	%rd3072, %rd3067, %rd3071;
	add.s64 	%rd3073, %rd3072, %rd3061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9736,%dummy}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9737}, %rd3062;
	}
	shf.r.wrap.b32 	%r9738, %r9737, %r9736, 14;
	shf.r.wrap.b32 	%r9739, %r9736, %r9737, 14;
	mov.b64 	%rd3074, {%r9739, %r9738};
	shf.r.wrap.b32 	%r9740, %r9737, %r9736, 18;
	shf.r.wrap.b32 	%r9741, %r9736, %r9737, 18;
	mov.b64 	%rd3075, {%r9741, %r9740};
	xor.b64  	%rd3076, %rd3074, %rd3075;
	shf.l.wrap.b32 	%r9742, %r9736, %r9737, 23;
	shf.l.wrap.b32 	%r9743, %r9737, %r9736, 23;
	mov.b64 	%rd3077, {%r9743, %r9742};
	xor.b64  	%rd3078, %rd3076, %rd3077;
	xor.b64  	%rd3079, %rd3037, %rd3012;
	and.b64  	%rd3080, %rd3062, %rd3079;
	xor.b64  	%rd3081, %rd3080, %rd3012;
	add.s64 	%rd3082, %rd2984, %rd2954;
	ld.const.u64 	%rd3083, [k_sha512+32];
	add.s64 	%rd3084, %rd3082, %rd3083;
	add.s64 	%rd3085, %rd3084, %rd3081;
	add.s64 	%rd3086, %rd3085, %rd3078;
	add.s64 	%rd3087, %rd3086, %rd2998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd3073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9745}, %rd3073;
	}
	shf.r.wrap.b32 	%r9746, %r9745, %r9744, 28;
	shf.r.wrap.b32 	%r9747, %r9744, %r9745, 28;
	mov.b64 	%rd3088, {%r9747, %r9746};
	shf.l.wrap.b32 	%r9748, %r9744, %r9745, 30;
	shf.l.wrap.b32 	%r9749, %r9745, %r9744, 30;
	mov.b64 	%rd3089, {%r9749, %r9748};
	xor.b64  	%rd3090, %rd3088, %rd3089;
	shf.l.wrap.b32 	%r9750, %r9744, %r9745, 25;
	shf.l.wrap.b32 	%r9751, %r9745, %r9744, 25;
	mov.b64 	%rd3091, {%r9751, %r9750};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	and.b64  	%rd3093, %rd3073, %rd3048;
	xor.b64  	%rd3094, %rd3073, %rd3048;
	and.b64  	%rd3095, %rd3094, %rd3023;
	or.b64  	%rd3096, %rd3095, %rd3093;
	add.s64 	%rd3097, %rd3092, %rd3096;
	add.s64 	%rd3098, %rd3097, %rd3086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd3087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9753}, %rd3087;
	}
	shf.r.wrap.b32 	%r9754, %r9753, %r9752, 14;
	shf.r.wrap.b32 	%r9755, %r9752, %r9753, 14;
	mov.b64 	%rd3099, {%r9755, %r9754};
	shf.r.wrap.b32 	%r9756, %r9753, %r9752, 18;
	shf.r.wrap.b32 	%r9757, %r9752, %r9753, 18;
	mov.b64 	%rd3100, {%r9757, %r9756};
	xor.b64  	%rd3101, %rd3099, %rd3100;
	shf.l.wrap.b32 	%r9758, %r9752, %r9753, 23;
	shf.l.wrap.b32 	%r9759, %r9753, %r9752, 23;
	mov.b64 	%rd3102, {%r9759, %r9758};
	xor.b64  	%rd3103, %rd3101, %rd3102;
	xor.b64  	%rd3104, %rd3062, %rd3037;
	and.b64  	%rd3105, %rd3087, %rd3104;
	xor.b64  	%rd3106, %rd3105, %rd3037;
	ld.const.u64 	%rd3107, [k_sha512+40];
	add.s64 	%rd3108, %rd3107, %rd2955;
	add.s64 	%rd3109, %rd3108, %rd3012;
	add.s64 	%rd3110, %rd3109, %rd3106;
	add.s64 	%rd3111, %rd3110, %rd3103;
	add.s64 	%rd3112, %rd3111, %rd3023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9760,%dummy}, %rd3098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9761}, %rd3098;
	}
	shf.r.wrap.b32 	%r9762, %r9761, %r9760, 28;
	shf.r.wrap.b32 	%r9763, %r9760, %r9761, 28;
	mov.b64 	%rd3113, {%r9763, %r9762};
	shf.l.wrap.b32 	%r9764, %r9760, %r9761, 30;
	shf.l.wrap.b32 	%r9765, %r9761, %r9760, 30;
	mov.b64 	%rd3114, {%r9765, %r9764};
	xor.b64  	%rd3115, %rd3113, %rd3114;
	shf.l.wrap.b32 	%r9766, %r9760, %r9761, 25;
	shf.l.wrap.b32 	%r9767, %r9761, %r9760, 25;
	mov.b64 	%rd3116, {%r9767, %r9766};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	and.b64  	%rd3118, %rd3098, %rd3073;
	xor.b64  	%rd3119, %rd3098, %rd3073;
	and.b64  	%rd3120, %rd3119, %rd3048;
	or.b64  	%rd3121, %rd3120, %rd3118;
	add.s64 	%rd3122, %rd3117, %rd3121;
	add.s64 	%rd3123, %rd3122, %rd3111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd3112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9769}, %rd3112;
	}
	shf.r.wrap.b32 	%r9770, %r9769, %r9768, 14;
	shf.r.wrap.b32 	%r9771, %r9768, %r9769, 14;
	mov.b64 	%rd3124, {%r9771, %r9770};
	shf.r.wrap.b32 	%r9772, %r9769, %r9768, 18;
	shf.r.wrap.b32 	%r9773, %r9768, %r9769, 18;
	mov.b64 	%rd3125, {%r9773, %r9772};
	xor.b64  	%rd3126, %rd3124, %rd3125;
	shf.l.wrap.b32 	%r9774, %r9768, %r9769, 23;
	shf.l.wrap.b32 	%r9775, %r9769, %r9768, 23;
	mov.b64 	%rd3127, {%r9775, %r9774};
	xor.b64  	%rd3128, %rd3126, %rd3127;
	xor.b64  	%rd3129, %rd3087, %rd3062;
	and.b64  	%rd3130, %rd3112, %rd3129;
	xor.b64  	%rd3131, %rd3130, %rd3062;
	ld.const.u64 	%rd3132, [k_sha512+48];
	add.s64 	%rd3133, %rd3132, %rd2956;
	add.s64 	%rd3134, %rd3133, %rd3037;
	add.s64 	%rd3135, %rd3134, %rd3131;
	add.s64 	%rd3136, %rd3135, %rd3128;
	add.s64 	%rd3137, %rd3136, %rd3048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd3123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9777}, %rd3123;
	}
	shf.r.wrap.b32 	%r9778, %r9777, %r9776, 28;
	shf.r.wrap.b32 	%r9779, %r9776, %r9777, 28;
	mov.b64 	%rd3138, {%r9779, %r9778};
	shf.l.wrap.b32 	%r9780, %r9776, %r9777, 30;
	shf.l.wrap.b32 	%r9781, %r9777, %r9776, 30;
	mov.b64 	%rd3139, {%r9781, %r9780};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	shf.l.wrap.b32 	%r9782, %r9776, %r9777, 25;
	shf.l.wrap.b32 	%r9783, %r9777, %r9776, 25;
	mov.b64 	%rd3141, {%r9783, %r9782};
	xor.b64  	%rd3142, %rd3140, %rd3141;
	and.b64  	%rd3143, %rd3123, %rd3098;
	xor.b64  	%rd3144, %rd3123, %rd3098;
	and.b64  	%rd3145, %rd3144, %rd3073;
	or.b64  	%rd3146, %rd3145, %rd3143;
	add.s64 	%rd3147, %rd3142, %rd3146;
	add.s64 	%rd3148, %rd3147, %rd3136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd3137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9785}, %rd3137;
	}
	shf.r.wrap.b32 	%r9786, %r9785, %r9784, 14;
	shf.r.wrap.b32 	%r9787, %r9784, %r9785, 14;
	mov.b64 	%rd3149, {%r9787, %r9786};
	shf.r.wrap.b32 	%r9788, %r9785, %r9784, 18;
	shf.r.wrap.b32 	%r9789, %r9784, %r9785, 18;
	mov.b64 	%rd3150, {%r9789, %r9788};
	xor.b64  	%rd3151, %rd3149, %rd3150;
	shf.l.wrap.b32 	%r9790, %r9784, %r9785, 23;
	shf.l.wrap.b32 	%r9791, %r9785, %r9784, 23;
	mov.b64 	%rd3152, {%r9791, %r9790};
	xor.b64  	%rd3153, %rd3151, %rd3152;
	xor.b64  	%rd3154, %rd3112, %rd3087;
	and.b64  	%rd3155, %rd3137, %rd3154;
	xor.b64  	%rd3156, %rd3155, %rd3087;
	ld.const.u64 	%rd3157, [k_sha512+56];
	add.s64 	%rd3158, %rd3157, %rd2957;
	add.s64 	%rd3159, %rd3158, %rd3062;
	add.s64 	%rd3160, %rd3159, %rd3156;
	add.s64 	%rd3161, %rd3160, %rd3153;
	add.s64 	%rd3162, %rd3161, %rd3073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9792,%dummy}, %rd3148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9793}, %rd3148;
	}
	shf.r.wrap.b32 	%r9794, %r9793, %r9792, 28;
	shf.r.wrap.b32 	%r9795, %r9792, %r9793, 28;
	mov.b64 	%rd3163, {%r9795, %r9794};
	shf.l.wrap.b32 	%r9796, %r9792, %r9793, 30;
	shf.l.wrap.b32 	%r9797, %r9793, %r9792, 30;
	mov.b64 	%rd3164, {%r9797, %r9796};
	xor.b64  	%rd3165, %rd3163, %rd3164;
	shf.l.wrap.b32 	%r9798, %r9792, %r9793, 25;
	shf.l.wrap.b32 	%r9799, %r9793, %r9792, 25;
	mov.b64 	%rd3166, {%r9799, %r9798};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	and.b64  	%rd3168, %rd3148, %rd3123;
	xor.b64  	%rd3169, %rd3148, %rd3123;
	and.b64  	%rd3170, %rd3169, %rd3098;
	or.b64  	%rd3171, %rd3170, %rd3168;
	add.s64 	%rd3172, %rd3167, %rd3171;
	add.s64 	%rd3173, %rd3172, %rd3161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd3162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9801}, %rd3162;
	}
	shf.r.wrap.b32 	%r9802, %r9801, %r9800, 14;
	shf.r.wrap.b32 	%r9803, %r9800, %r9801, 14;
	mov.b64 	%rd3174, {%r9803, %r9802};
	shf.r.wrap.b32 	%r9804, %r9801, %r9800, 18;
	shf.r.wrap.b32 	%r9805, %r9800, %r9801, 18;
	mov.b64 	%rd3175, {%r9805, %r9804};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	shf.l.wrap.b32 	%r9806, %r9800, %r9801, 23;
	shf.l.wrap.b32 	%r9807, %r9801, %r9800, 23;
	mov.b64 	%rd3177, {%r9807, %r9806};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	xor.b64  	%rd3179, %rd3137, %rd3112;
	and.b64  	%rd3180, %rd3162, %rd3179;
	xor.b64  	%rd3181, %rd3180, %rd3112;
	ld.const.u64 	%rd3182, [k_sha512+64];
	add.s64 	%rd3183, %rd3182, %rd2958;
	add.s64 	%rd3184, %rd3183, %rd3087;
	add.s64 	%rd3185, %rd3184, %rd3181;
	add.s64 	%rd3186, %rd3185, %rd3178;
	add.s64 	%rd3187, %rd3186, %rd3098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9808,%dummy}, %rd3173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9809}, %rd3173;
	}
	shf.r.wrap.b32 	%r9810, %r9809, %r9808, 28;
	shf.r.wrap.b32 	%r9811, %r9808, %r9809, 28;
	mov.b64 	%rd3188, {%r9811, %r9810};
	shf.l.wrap.b32 	%r9812, %r9808, %r9809, 30;
	shf.l.wrap.b32 	%r9813, %r9809, %r9808, 30;
	mov.b64 	%rd3189, {%r9813, %r9812};
	xor.b64  	%rd3190, %rd3188, %rd3189;
	shf.l.wrap.b32 	%r9814, %r9808, %r9809, 25;
	shf.l.wrap.b32 	%r9815, %r9809, %r9808, 25;
	mov.b64 	%rd3191, {%r9815, %r9814};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	and.b64  	%rd3193, %rd3173, %rd3148;
	xor.b64  	%rd3194, %rd3173, %rd3148;
	and.b64  	%rd3195, %rd3194, %rd3123;
	or.b64  	%rd3196, %rd3195, %rd3193;
	add.s64 	%rd3197, %rd3192, %rd3196;
	add.s64 	%rd3198, %rd3197, %rd3186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9816,%dummy}, %rd3187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9817}, %rd3187;
	}
	shf.r.wrap.b32 	%r9818, %r9817, %r9816, 14;
	shf.r.wrap.b32 	%r9819, %r9816, %r9817, 14;
	mov.b64 	%rd3199, {%r9819, %r9818};
	shf.r.wrap.b32 	%r9820, %r9817, %r9816, 18;
	shf.r.wrap.b32 	%r9821, %r9816, %r9817, 18;
	mov.b64 	%rd3200, {%r9821, %r9820};
	xor.b64  	%rd3201, %rd3199, %rd3200;
	shf.l.wrap.b32 	%r9822, %r9816, %r9817, 23;
	shf.l.wrap.b32 	%r9823, %r9817, %r9816, 23;
	mov.b64 	%rd3202, {%r9823, %r9822};
	xor.b64  	%rd3203, %rd3201, %rd3202;
	xor.b64  	%rd3204, %rd3162, %rd3137;
	and.b64  	%rd3205, %rd3187, %rd3204;
	xor.b64  	%rd3206, %rd3205, %rd3137;
	ld.const.u64 	%rd3207, [k_sha512+72];
	add.s64 	%rd3208, %rd3207, %rd2959;
	add.s64 	%rd3209, %rd3208, %rd3112;
	add.s64 	%rd3210, %rd3209, %rd3206;
	add.s64 	%rd3211, %rd3210, %rd3203;
	add.s64 	%rd3212, %rd3211, %rd3123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd3198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9825}, %rd3198;
	}
	shf.r.wrap.b32 	%r9826, %r9825, %r9824, 28;
	shf.r.wrap.b32 	%r9827, %r9824, %r9825, 28;
	mov.b64 	%rd3213, {%r9827, %r9826};
	shf.l.wrap.b32 	%r9828, %r9824, %r9825, 30;
	shf.l.wrap.b32 	%r9829, %r9825, %r9824, 30;
	mov.b64 	%rd3214, {%r9829, %r9828};
	xor.b64  	%rd3215, %rd3213, %rd3214;
	shf.l.wrap.b32 	%r9830, %r9824, %r9825, 25;
	shf.l.wrap.b32 	%r9831, %r9825, %r9824, 25;
	mov.b64 	%rd3216, {%r9831, %r9830};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	and.b64  	%rd3218, %rd3198, %rd3173;
	xor.b64  	%rd3219, %rd3198, %rd3173;
	and.b64  	%rd3220, %rd3219, %rd3148;
	or.b64  	%rd3221, %rd3220, %rd3218;
	add.s64 	%rd3222, %rd3217, %rd3221;
	add.s64 	%rd3223, %rd3222, %rd3211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9832,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9833}, %rd3212;
	}
	shf.r.wrap.b32 	%r9834, %r9833, %r9832, 14;
	shf.r.wrap.b32 	%r9835, %r9832, %r9833, 14;
	mov.b64 	%rd3224, {%r9835, %r9834};
	shf.r.wrap.b32 	%r9836, %r9833, %r9832, 18;
	shf.r.wrap.b32 	%r9837, %r9832, %r9833, 18;
	mov.b64 	%rd3225, {%r9837, %r9836};
	xor.b64  	%rd3226, %rd3224, %rd3225;
	shf.l.wrap.b32 	%r9838, %r9832, %r9833, 23;
	shf.l.wrap.b32 	%r9839, %r9833, %r9832, 23;
	mov.b64 	%rd3227, {%r9839, %r9838};
	xor.b64  	%rd3228, %rd3226, %rd3227;
	xor.b64  	%rd3229, %rd3187, %rd3162;
	and.b64  	%rd3230, %rd3212, %rd3229;
	xor.b64  	%rd3231, %rd3230, %rd3162;
	ld.const.u64 	%rd3232, [k_sha512+80];
	add.s64 	%rd3233, %rd3232, %rd2960;
	add.s64 	%rd3234, %rd3233, %rd3137;
	add.s64 	%rd3235, %rd3234, %rd3231;
	add.s64 	%rd3236, %rd3235, %rd3228;
	add.s64 	%rd3237, %rd3236, %rd3148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9840,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9841}, %rd3223;
	}
	shf.r.wrap.b32 	%r9842, %r9841, %r9840, 28;
	shf.r.wrap.b32 	%r9843, %r9840, %r9841, 28;
	mov.b64 	%rd3238, {%r9843, %r9842};
	shf.l.wrap.b32 	%r9844, %r9840, %r9841, 30;
	shf.l.wrap.b32 	%r9845, %r9841, %r9840, 30;
	mov.b64 	%rd3239, {%r9845, %r9844};
	xor.b64  	%rd3240, %rd3238, %rd3239;
	shf.l.wrap.b32 	%r9846, %r9840, %r9841, 25;
	shf.l.wrap.b32 	%r9847, %r9841, %r9840, 25;
	mov.b64 	%rd3241, {%r9847, %r9846};
	xor.b64  	%rd3242, %rd3240, %rd3241;
	and.b64  	%rd3243, %rd3223, %rd3198;
	xor.b64  	%rd3244, %rd3223, %rd3198;
	and.b64  	%rd3245, %rd3244, %rd3173;
	or.b64  	%rd3246, %rd3245, %rd3243;
	add.s64 	%rd3247, %rd3242, %rd3246;
	add.s64 	%rd3248, %rd3247, %rd3236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9848,%dummy}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9849}, %rd3237;
	}
	shf.r.wrap.b32 	%r9850, %r9849, %r9848, 14;
	shf.r.wrap.b32 	%r9851, %r9848, %r9849, 14;
	mov.b64 	%rd3249, {%r9851, %r9850};
	shf.r.wrap.b32 	%r9852, %r9849, %r9848, 18;
	shf.r.wrap.b32 	%r9853, %r9848, %r9849, 18;
	mov.b64 	%rd3250, {%r9853, %r9852};
	xor.b64  	%rd3251, %rd3249, %rd3250;
	shf.l.wrap.b32 	%r9854, %r9848, %r9849, 23;
	shf.l.wrap.b32 	%r9855, %r9849, %r9848, 23;
	mov.b64 	%rd3252, {%r9855, %r9854};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	xor.b64  	%rd3254, %rd3212, %rd3187;
	and.b64  	%rd3255, %rd3237, %rd3254;
	xor.b64  	%rd3256, %rd3255, %rd3187;
	ld.const.u64 	%rd3257, [k_sha512+88];
	add.s64 	%rd3258, %rd3257, %rd2961;
	add.s64 	%rd3259, %rd3258, %rd3162;
	add.s64 	%rd3260, %rd3259, %rd3256;
	add.s64 	%rd3261, %rd3260, %rd3253;
	add.s64 	%rd3262, %rd3261, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9857}, %rd3248;
	}
	shf.r.wrap.b32 	%r9858, %r9857, %r9856, 28;
	shf.r.wrap.b32 	%r9859, %r9856, %r9857, 28;
	mov.b64 	%rd3263, {%r9859, %r9858};
	shf.l.wrap.b32 	%r9860, %r9856, %r9857, 30;
	shf.l.wrap.b32 	%r9861, %r9857, %r9856, 30;
	mov.b64 	%rd3264, {%r9861, %r9860};
	xor.b64  	%rd3265, %rd3263, %rd3264;
	shf.l.wrap.b32 	%r9862, %r9856, %r9857, 25;
	shf.l.wrap.b32 	%r9863, %r9857, %r9856, 25;
	mov.b64 	%rd3266, {%r9863, %r9862};
	xor.b64  	%rd3267, %rd3265, %rd3266;
	and.b64  	%rd3268, %rd3248, %rd3223;
	xor.b64  	%rd3269, %rd3248, %rd3223;
	and.b64  	%rd3270, %rd3269, %rd3198;
	or.b64  	%rd3271, %rd3270, %rd3268;
	add.s64 	%rd3272, %rd3267, %rd3271;
	add.s64 	%rd3273, %rd3272, %rd3261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd3262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9865}, %rd3262;
	}
	shf.r.wrap.b32 	%r9866, %r9865, %r9864, 14;
	shf.r.wrap.b32 	%r9867, %r9864, %r9865, 14;
	mov.b64 	%rd3274, {%r9867, %r9866};
	shf.r.wrap.b32 	%r9868, %r9865, %r9864, 18;
	shf.r.wrap.b32 	%r9869, %r9864, %r9865, 18;
	mov.b64 	%rd3275, {%r9869, %r9868};
	xor.b64  	%rd3276, %rd3274, %rd3275;
	shf.l.wrap.b32 	%r9870, %r9864, %r9865, 23;
	shf.l.wrap.b32 	%r9871, %r9865, %r9864, 23;
	mov.b64 	%rd3277, {%r9871, %r9870};
	xor.b64  	%rd3278, %rd3276, %rd3277;
	xor.b64  	%rd3279, %rd3237, %rd3212;
	and.b64  	%rd3280, %rd3262, %rd3279;
	xor.b64  	%rd3281, %rd3280, %rd3212;
	ld.const.u64 	%rd3282, [k_sha512+96];
	add.s64 	%rd3283, %rd3282, %rd2962;
	add.s64 	%rd3284, %rd3283, %rd3187;
	add.s64 	%rd3285, %rd3284, %rd3281;
	add.s64 	%rd3286, %rd3285, %rd3278;
	add.s64 	%rd3287, %rd3286, %rd3198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9872,%dummy}, %rd3273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9873}, %rd3273;
	}
	shf.r.wrap.b32 	%r9874, %r9873, %r9872, 28;
	shf.r.wrap.b32 	%r9875, %r9872, %r9873, 28;
	mov.b64 	%rd3288, {%r9875, %r9874};
	shf.l.wrap.b32 	%r9876, %r9872, %r9873, 30;
	shf.l.wrap.b32 	%r9877, %r9873, %r9872, 30;
	mov.b64 	%rd3289, {%r9877, %r9876};
	xor.b64  	%rd3290, %rd3288, %rd3289;
	shf.l.wrap.b32 	%r9878, %r9872, %r9873, 25;
	shf.l.wrap.b32 	%r9879, %r9873, %r9872, 25;
	mov.b64 	%rd3291, {%r9879, %r9878};
	xor.b64  	%rd3292, %rd3290, %rd3291;
	and.b64  	%rd3293, %rd3273, %rd3248;
	xor.b64  	%rd3294, %rd3273, %rd3248;
	and.b64  	%rd3295, %rd3294, %rd3223;
	or.b64  	%rd3296, %rd3295, %rd3293;
	add.s64 	%rd3297, %rd3292, %rd3296;
	add.s64 	%rd3298, %rd3297, %rd3286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9880,%dummy}, %rd3287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9881}, %rd3287;
	}
	shf.r.wrap.b32 	%r9882, %r9881, %r9880, 14;
	shf.r.wrap.b32 	%r9883, %r9880, %r9881, 14;
	mov.b64 	%rd3299, {%r9883, %r9882};
	shf.r.wrap.b32 	%r9884, %r9881, %r9880, 18;
	shf.r.wrap.b32 	%r9885, %r9880, %r9881, 18;
	mov.b64 	%rd3300, {%r9885, %r9884};
	xor.b64  	%rd3301, %rd3299, %rd3300;
	shf.l.wrap.b32 	%r9886, %r9880, %r9881, 23;
	shf.l.wrap.b32 	%r9887, %r9881, %r9880, 23;
	mov.b64 	%rd3302, {%r9887, %r9886};
	xor.b64  	%rd3303, %rd3301, %rd3302;
	xor.b64  	%rd3304, %rd3262, %rd3237;
	and.b64  	%rd3305, %rd3287, %rd3304;
	xor.b64  	%rd3306, %rd3305, %rd3237;
	ld.const.u64 	%rd3307, [k_sha512+104];
	add.s64 	%rd3308, %rd3307, %rd2963;
	add.s64 	%rd3309, %rd3308, %rd3212;
	add.s64 	%rd3310, %rd3309, %rd3306;
	add.s64 	%rd3311, %rd3310, %rd3303;
	add.s64 	%rd3312, %rd3311, %rd3223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd3298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9889}, %rd3298;
	}
	shf.r.wrap.b32 	%r9890, %r9889, %r9888, 28;
	shf.r.wrap.b32 	%r9891, %r9888, %r9889, 28;
	mov.b64 	%rd3313, {%r9891, %r9890};
	shf.l.wrap.b32 	%r9892, %r9888, %r9889, 30;
	shf.l.wrap.b32 	%r9893, %r9889, %r9888, 30;
	mov.b64 	%rd3314, {%r9893, %r9892};
	xor.b64  	%rd3315, %rd3313, %rd3314;
	shf.l.wrap.b32 	%r9894, %r9888, %r9889, 25;
	shf.l.wrap.b32 	%r9895, %r9889, %r9888, 25;
	mov.b64 	%rd3316, {%r9895, %r9894};
	xor.b64  	%rd3317, %rd3315, %rd3316;
	and.b64  	%rd3318, %rd3298, %rd3273;
	xor.b64  	%rd3319, %rd3298, %rd3273;
	and.b64  	%rd3320, %rd3319, %rd3248;
	or.b64  	%rd3321, %rd3320, %rd3318;
	add.s64 	%rd3322, %rd3317, %rd3321;
	add.s64 	%rd3323, %rd3322, %rd3311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9896,%dummy}, %rd3312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9897}, %rd3312;
	}
	shf.r.wrap.b32 	%r9898, %r9897, %r9896, 14;
	shf.r.wrap.b32 	%r9899, %r9896, %r9897, 14;
	mov.b64 	%rd3324, {%r9899, %r9898};
	shf.r.wrap.b32 	%r9900, %r9897, %r9896, 18;
	shf.r.wrap.b32 	%r9901, %r9896, %r9897, 18;
	mov.b64 	%rd3325, {%r9901, %r9900};
	xor.b64  	%rd3326, %rd3324, %rd3325;
	shf.l.wrap.b32 	%r9902, %r9896, %r9897, 23;
	shf.l.wrap.b32 	%r9903, %r9897, %r9896, 23;
	mov.b64 	%rd3327, {%r9903, %r9902};
	xor.b64  	%rd3328, %rd3326, %rd3327;
	xor.b64  	%rd3329, %rd3287, %rd3262;
	and.b64  	%rd3330, %rd3312, %rd3329;
	xor.b64  	%rd3331, %rd3330, %rd3262;
	ld.const.u64 	%rd3332, [k_sha512+112];
	add.s64 	%rd3333, %rd3332, %rd2964;
	add.s64 	%rd3334, %rd3333, %rd3237;
	add.s64 	%rd3335, %rd3334, %rd3331;
	add.s64 	%rd3336, %rd3335, %rd3328;
	add.s64 	%rd3337, %rd3336, %rd3248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9904,%dummy}, %rd3323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9905}, %rd3323;
	}
	shf.r.wrap.b32 	%r9906, %r9905, %r9904, 28;
	shf.r.wrap.b32 	%r9907, %r9904, %r9905, 28;
	mov.b64 	%rd3338, {%r9907, %r9906};
	shf.l.wrap.b32 	%r9908, %r9904, %r9905, 30;
	shf.l.wrap.b32 	%r9909, %r9905, %r9904, 30;
	mov.b64 	%rd3339, {%r9909, %r9908};
	xor.b64  	%rd3340, %rd3338, %rd3339;
	shf.l.wrap.b32 	%r9910, %r9904, %r9905, 25;
	shf.l.wrap.b32 	%r9911, %r9905, %r9904, 25;
	mov.b64 	%rd3341, {%r9911, %r9910};
	xor.b64  	%rd3342, %rd3340, %rd3341;
	and.b64  	%rd3343, %rd3323, %rd3298;
	xor.b64  	%rd3344, %rd3323, %rd3298;
	and.b64  	%rd3345, %rd3344, %rd3273;
	or.b64  	%rd3346, %rd3345, %rd3343;
	add.s64 	%rd3347, %rd3342, %rd3346;
	add.s64 	%rd3348, %rd3347, %rd3336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9912,%dummy}, %rd3337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9913}, %rd3337;
	}
	shf.r.wrap.b32 	%r9914, %r9913, %r9912, 14;
	shf.r.wrap.b32 	%r9915, %r9912, %r9913, 14;
	mov.b64 	%rd3349, {%r9915, %r9914};
	shf.r.wrap.b32 	%r9916, %r9913, %r9912, 18;
	shf.r.wrap.b32 	%r9917, %r9912, %r9913, 18;
	mov.b64 	%rd3350, {%r9917, %r9916};
	xor.b64  	%rd3351, %rd3349, %rd3350;
	shf.l.wrap.b32 	%r9918, %r9912, %r9913, 23;
	shf.l.wrap.b32 	%r9919, %r9913, %r9912, 23;
	mov.b64 	%rd3352, {%r9919, %r9918};
	xor.b64  	%rd3353, %rd3351, %rd3352;
	xor.b64  	%rd3354, %rd3312, %rd3287;
	and.b64  	%rd3355, %rd3337, %rd3354;
	xor.b64  	%rd3356, %rd3355, %rd3287;
	ld.const.u64 	%rd3357, [k_sha512+120];
	add.s64 	%rd3358, %rd3357, %rd2965;
	add.s64 	%rd3359, %rd3358, %rd3262;
	add.s64 	%rd3360, %rd3359, %rd3356;
	add.s64 	%rd3361, %rd3360, %rd3353;
	add.s64 	%rd3362, %rd3361, %rd3273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9920,%dummy}, %rd3348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9921}, %rd3348;
	}
	shf.r.wrap.b32 	%r9922, %r9921, %r9920, 28;
	shf.r.wrap.b32 	%r9923, %r9920, %r9921, 28;
	mov.b64 	%rd3363, {%r9923, %r9922};
	shf.l.wrap.b32 	%r9924, %r9920, %r9921, 30;
	shf.l.wrap.b32 	%r9925, %r9921, %r9920, 30;
	mov.b64 	%rd3364, {%r9925, %r9924};
	xor.b64  	%rd3365, %rd3363, %rd3364;
	shf.l.wrap.b32 	%r9926, %r9920, %r9921, 25;
	shf.l.wrap.b32 	%r9927, %r9921, %r9920, 25;
	mov.b64 	%rd3366, {%r9927, %r9926};
	xor.b64  	%rd3367, %rd3365, %rd3366;
	and.b64  	%rd3368, %rd3348, %rd3323;
	xor.b64  	%rd3369, %rd3348, %rd3323;
	and.b64  	%rd3370, %rd3369, %rd3298;
	or.b64  	%rd3371, %rd3370, %rd3368;
	add.s64 	%rd3372, %rd3367, %rd3371;
	add.s64 	%rd3373, %rd3372, %rd3361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9928,%dummy}, %rd2964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9929}, %rd2964;
	}
	shf.r.wrap.b32 	%r9930, %r9929, %r9928, 19;
	shf.r.wrap.b32 	%r9931, %r9928, %r9929, 19;
	mov.b64 	%rd3374, {%r9931, %r9930};
	shf.l.wrap.b32 	%r9932, %r9928, %r9929, 3;
	shf.l.wrap.b32 	%r9933, %r9929, %r9928, 3;
	mov.b64 	%rd3375, {%r9933, %r9932};
	shr.u64 	%rd3376, %rd2964, 6;
	xor.b64  	%rd3377, %rd3375, %rd3376;
	xor.b64  	%rd3378, %rd3377, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9934,%dummy}, %rd2951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9935}, %rd2951;
	}
	shf.r.wrap.b32 	%r9936, %r9935, %r9934, 1;
	shf.r.wrap.b32 	%r9937, %r9934, %r9935, 1;
	mov.b64 	%rd3379, {%r9937, %r9936};
	shf.r.wrap.b32 	%r9938, %r9935, %r9934, 8;
	shf.r.wrap.b32 	%r9939, %r9934, %r9935, 8;
	mov.b64 	%rd3380, {%r9939, %r9938};
	shr.u64 	%rd3381, %rd2951, 7;
	xor.b64  	%rd3382, %rd3380, %rd3381;
	xor.b64  	%rd3383, %rd3382, %rd3379;
	add.s64 	%rd3384, %rd3383, %rd2950;
	add.s64 	%rd3385, %rd3384, %rd2959;
	add.s64 	%rd3386, %rd3385, %rd3378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9940,%dummy}, %rd2965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9941}, %rd2965;
	}
	shf.r.wrap.b32 	%r9942, %r9941, %r9940, 19;
	shf.r.wrap.b32 	%r9943, %r9940, %r9941, 19;
	mov.b64 	%rd3387, {%r9943, %r9942};
	shf.l.wrap.b32 	%r9944, %r9940, %r9941, 3;
	shf.l.wrap.b32 	%r9945, %r9941, %r9940, 3;
	mov.b64 	%rd3388, {%r9945, %r9944};
	shr.u64 	%rd3389, %rd2965, 6;
	xor.b64  	%rd3390, %rd3388, %rd3389;
	xor.b64  	%rd3391, %rd3390, %rd3387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9946,%dummy}, %rd2952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9947}, %rd2952;
	}
	shf.r.wrap.b32 	%r9948, %r9947, %r9946, 1;
	shf.r.wrap.b32 	%r9949, %r9946, %r9947, 1;
	mov.b64 	%rd3392, {%r9949, %r9948};
	shf.r.wrap.b32 	%r9950, %r9947, %r9946, 8;
	shf.r.wrap.b32 	%r9951, %r9946, %r9947, 8;
	mov.b64 	%rd3393, {%r9951, %r9950};
	shr.u64 	%rd3394, %rd2952, 7;
	xor.b64  	%rd3395, %rd3393, %rd3394;
	xor.b64  	%rd3396, %rd3395, %rd3392;
	add.s64 	%rd3397, %rd3396, %rd2951;
	add.s64 	%rd3398, %rd3397, %rd2960;
	add.s64 	%rd3399, %rd3398, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9952,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9953}, %rd3386;
	}
	shf.r.wrap.b32 	%r9954, %r9953, %r9952, 19;
	shf.r.wrap.b32 	%r9955, %r9952, %r9953, 19;
	mov.b64 	%rd3400, {%r9955, %r9954};
	shf.l.wrap.b32 	%r9956, %r9952, %r9953, 3;
	shf.l.wrap.b32 	%r9957, %r9953, %r9952, 3;
	mov.b64 	%rd3401, {%r9957, %r9956};
	shr.u64 	%rd3402, %rd3386, 6;
	xor.b64  	%rd3403, %rd3401, %rd3402;
	xor.b64  	%rd3404, %rd3403, %rd3400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9958,%dummy}, %rd2953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd2953;
	}
	shf.r.wrap.b32 	%r9960, %r9959, %r9958, 1;
	shf.r.wrap.b32 	%r9961, %r9958, %r9959, 1;
	mov.b64 	%rd3405, {%r9961, %r9960};
	shf.r.wrap.b32 	%r9962, %r9959, %r9958, 8;
	shf.r.wrap.b32 	%r9963, %r9958, %r9959, 8;
	mov.b64 	%rd3406, {%r9963, %r9962};
	shr.u64 	%rd3407, %rd2953, 7;
	xor.b64  	%rd3408, %rd3406, %rd3407;
	xor.b64  	%rd3409, %rd3408, %rd3405;
	add.s64 	%rd3410, %rd3409, %rd2952;
	add.s64 	%rd3411, %rd3410, %rd2961;
	add.s64 	%rd3412, %rd3411, %rd3404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9964,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9965}, %rd3399;
	}
	shf.r.wrap.b32 	%r9966, %r9965, %r9964, 19;
	shf.r.wrap.b32 	%r9967, %r9964, %r9965, 19;
	mov.b64 	%rd3413, {%r9967, %r9966};
	shf.l.wrap.b32 	%r9968, %r9964, %r9965, 3;
	shf.l.wrap.b32 	%r9969, %r9965, %r9964, 3;
	mov.b64 	%rd3414, {%r9969, %r9968};
	shr.u64 	%rd3415, %rd3399, 6;
	xor.b64  	%rd3416, %rd3414, %rd3415;
	xor.b64  	%rd3417, %rd3416, %rd3413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9970,%dummy}, %rd2954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9971}, %rd2954;
	}
	shf.r.wrap.b32 	%r9972, %r9971, %r9970, 1;
	shf.r.wrap.b32 	%r9973, %r9970, %r9971, 1;
	mov.b64 	%rd3418, {%r9973, %r9972};
	shf.r.wrap.b32 	%r9974, %r9971, %r9970, 8;
	shf.r.wrap.b32 	%r9975, %r9970, %r9971, 8;
	mov.b64 	%rd3419, {%r9975, %r9974};
	shr.u64 	%rd3420, %rd2954, 7;
	xor.b64  	%rd3421, %rd3419, %rd3420;
	xor.b64  	%rd3422, %rd3421, %rd3418;
	add.s64 	%rd3423, %rd3422, %rd2953;
	add.s64 	%rd3424, %rd3423, %rd2962;
	add.s64 	%rd3425, %rd3424, %rd3417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9976,%dummy}, %rd3412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9977}, %rd3412;
	}
	shf.r.wrap.b32 	%r9978, %r9977, %r9976, 19;
	shf.r.wrap.b32 	%r9979, %r9976, %r9977, 19;
	mov.b64 	%rd3426, {%r9979, %r9978};
	shf.l.wrap.b32 	%r9980, %r9976, %r9977, 3;
	shf.l.wrap.b32 	%r9981, %r9977, %r9976, 3;
	mov.b64 	%rd3427, {%r9981, %r9980};
	shr.u64 	%rd3428, %rd3412, 6;
	xor.b64  	%rd3429, %rd3427, %rd3428;
	xor.b64  	%rd3430, %rd3429, %rd3426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9982,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9983}, %rd2955;
	}
	shf.r.wrap.b32 	%r9984, %r9983, %r9982, 1;
	shf.r.wrap.b32 	%r9985, %r9982, %r9983, 1;
	mov.b64 	%rd3431, {%r9985, %r9984};
	shf.r.wrap.b32 	%r9986, %r9983, %r9982, 8;
	shf.r.wrap.b32 	%r9987, %r9982, %r9983, 8;
	mov.b64 	%rd3432, {%r9987, %r9986};
	shr.u64 	%rd3433, %rd2955, 7;
	xor.b64  	%rd3434, %rd3432, %rd3433;
	xor.b64  	%rd3435, %rd3434, %rd3431;
	add.s64 	%rd3436, %rd3435, %rd2954;
	add.s64 	%rd3437, %rd3436, %rd2963;
	add.s64 	%rd3438, %rd3437, %rd3430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9989}, %rd3425;
	}
	shf.r.wrap.b32 	%r9990, %r9989, %r9988, 19;
	shf.r.wrap.b32 	%r9991, %r9988, %r9989, 19;
	mov.b64 	%rd3439, {%r9991, %r9990};
	shf.l.wrap.b32 	%r9992, %r9988, %r9989, 3;
	shf.l.wrap.b32 	%r9993, %r9989, %r9988, 3;
	mov.b64 	%rd3440, {%r9993, %r9992};
	shr.u64 	%rd3441, %rd3425, 6;
	xor.b64  	%rd3442, %rd3440, %rd3441;
	xor.b64  	%rd3443, %rd3442, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9994,%dummy}, %rd2956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9995}, %rd2956;
	}
	shf.r.wrap.b32 	%r9996, %r9995, %r9994, 1;
	shf.r.wrap.b32 	%r9997, %r9994, %r9995, 1;
	mov.b64 	%rd3444, {%r9997, %r9996};
	shf.r.wrap.b32 	%r9998, %r9995, %r9994, 8;
	shf.r.wrap.b32 	%r9999, %r9994, %r9995, 8;
	mov.b64 	%rd3445, {%r9999, %r9998};
	shr.u64 	%rd3446, %rd2956, 7;
	xor.b64  	%rd3447, %rd3445, %rd3446;
	xor.b64  	%rd3448, %rd3447, %rd3444;
	add.s64 	%rd3449, %rd3448, %rd2955;
	add.s64 	%rd3450, %rd3449, %rd2964;
	add.s64 	%rd3451, %rd3450, %rd3443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10000,%dummy}, %rd3438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10001}, %rd3438;
	}
	shf.r.wrap.b32 	%r10002, %r10001, %r10000, 19;
	shf.r.wrap.b32 	%r10003, %r10000, %r10001, 19;
	mov.b64 	%rd3452, {%r10003, %r10002};
	shf.l.wrap.b32 	%r10004, %r10000, %r10001, 3;
	shf.l.wrap.b32 	%r10005, %r10001, %r10000, 3;
	mov.b64 	%rd3453, {%r10005, %r10004};
	shr.u64 	%rd3454, %rd3438, 6;
	xor.b64  	%rd3455, %rd3453, %rd3454;
	xor.b64  	%rd3456, %rd3455, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10006,%dummy}, %rd2957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10007}, %rd2957;
	}
	shf.r.wrap.b32 	%r10008, %r10007, %r10006, 1;
	shf.r.wrap.b32 	%r10009, %r10006, %r10007, 1;
	mov.b64 	%rd3457, {%r10009, %r10008};
	shf.r.wrap.b32 	%r10010, %r10007, %r10006, 8;
	shf.r.wrap.b32 	%r10011, %r10006, %r10007, 8;
	mov.b64 	%rd3458, {%r10011, %r10010};
	shr.u64 	%rd3459, %rd2957, 7;
	xor.b64  	%rd3460, %rd3458, %rd3459;
	xor.b64  	%rd3461, %rd3460, %rd3457;
	add.s64 	%rd3462, %rd3461, %rd2956;
	add.s64 	%rd3463, %rd3462, %rd2965;
	add.s64 	%rd3464, %rd3463, %rd3456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10012,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10013}, %rd3451;
	}
	shf.r.wrap.b32 	%r10014, %r10013, %r10012, 19;
	shf.r.wrap.b32 	%r10015, %r10012, %r10013, 19;
	mov.b64 	%rd3465, {%r10015, %r10014};
	shf.l.wrap.b32 	%r10016, %r10012, %r10013, 3;
	shf.l.wrap.b32 	%r10017, %r10013, %r10012, 3;
	mov.b64 	%rd3466, {%r10017, %r10016};
	shr.u64 	%rd3467, %rd3451, 6;
	xor.b64  	%rd3468, %rd3466, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10018,%dummy}, %rd2958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10019}, %rd2958;
	}
	shf.r.wrap.b32 	%r10020, %r10019, %r10018, 1;
	shf.r.wrap.b32 	%r10021, %r10018, %r10019, 1;
	mov.b64 	%rd3470, {%r10021, %r10020};
	shf.r.wrap.b32 	%r10022, %r10019, %r10018, 8;
	shf.r.wrap.b32 	%r10023, %r10018, %r10019, 8;
	mov.b64 	%rd3471, {%r10023, %r10022};
	shr.u64 	%rd3472, %rd2958, 7;
	xor.b64  	%rd3473, %rd3471, %rd3472;
	xor.b64  	%rd3474, %rd3473, %rd3470;
	add.s64 	%rd3475, %rd3474, %rd2957;
	add.s64 	%rd3476, %rd3475, %rd3386;
	add.s64 	%rd3477, %rd3476, %rd3469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10024,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10025}, %rd3464;
	}
	shf.r.wrap.b32 	%r10026, %r10025, %r10024, 19;
	shf.r.wrap.b32 	%r10027, %r10024, %r10025, 19;
	mov.b64 	%rd3478, {%r10027, %r10026};
	shf.l.wrap.b32 	%r10028, %r10024, %r10025, 3;
	shf.l.wrap.b32 	%r10029, %r10025, %r10024, 3;
	mov.b64 	%rd3479, {%r10029, %r10028};
	shr.u64 	%rd3480, %rd3464, 6;
	xor.b64  	%rd3481, %rd3479, %rd3480;
	xor.b64  	%rd3482, %rd3481, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10030,%dummy}, %rd2959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd2959;
	}
	shf.r.wrap.b32 	%r10032, %r10031, %r10030, 1;
	shf.r.wrap.b32 	%r10033, %r10030, %r10031, 1;
	mov.b64 	%rd3483, {%r10033, %r10032};
	shf.r.wrap.b32 	%r10034, %r10031, %r10030, 8;
	shf.r.wrap.b32 	%r10035, %r10030, %r10031, 8;
	mov.b64 	%rd3484, {%r10035, %r10034};
	shr.u64 	%rd3485, %rd2959, 7;
	xor.b64  	%rd3486, %rd3484, %rd3485;
	xor.b64  	%rd3487, %rd3486, %rd3483;
	add.s64 	%rd3488, %rd3487, %rd2958;
	add.s64 	%rd3489, %rd3488, %rd3399;
	add.s64 	%rd3490, %rd3489, %rd3482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10036,%dummy}, %rd3477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10037}, %rd3477;
	}
	shf.r.wrap.b32 	%r10038, %r10037, %r10036, 19;
	shf.r.wrap.b32 	%r10039, %r10036, %r10037, 19;
	mov.b64 	%rd3491, {%r10039, %r10038};
	shf.l.wrap.b32 	%r10040, %r10036, %r10037, 3;
	shf.l.wrap.b32 	%r10041, %r10037, %r10036, 3;
	mov.b64 	%rd3492, {%r10041, %r10040};
	shr.u64 	%rd3493, %rd3477, 6;
	xor.b64  	%rd3494, %rd3492, %rd3493;
	xor.b64  	%rd3495, %rd3494, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10042,%dummy}, %rd2960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10043}, %rd2960;
	}
	shf.r.wrap.b32 	%r10044, %r10043, %r10042, 1;
	shf.r.wrap.b32 	%r10045, %r10042, %r10043, 1;
	mov.b64 	%rd3496, {%r10045, %r10044};
	shf.r.wrap.b32 	%r10046, %r10043, %r10042, 8;
	shf.r.wrap.b32 	%r10047, %r10042, %r10043, 8;
	mov.b64 	%rd3497, {%r10047, %r10046};
	shr.u64 	%rd3498, %rd2960, 7;
	xor.b64  	%rd3499, %rd3497, %rd3498;
	xor.b64  	%rd3500, %rd3499, %rd3496;
	add.s64 	%rd3501, %rd3500, %rd2959;
	add.s64 	%rd3502, %rd3501, %rd3412;
	add.s64 	%rd3503, %rd3502, %rd3495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10048,%dummy}, %rd3490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10049}, %rd3490;
	}
	shf.r.wrap.b32 	%r10050, %r10049, %r10048, 19;
	shf.r.wrap.b32 	%r10051, %r10048, %r10049, 19;
	mov.b64 	%rd3504, {%r10051, %r10050};
	shf.l.wrap.b32 	%r10052, %r10048, %r10049, 3;
	shf.l.wrap.b32 	%r10053, %r10049, %r10048, 3;
	mov.b64 	%rd3505, {%r10053, %r10052};
	shr.u64 	%rd3506, %rd3490, 6;
	xor.b64  	%rd3507, %rd3505, %rd3506;
	xor.b64  	%rd3508, %rd3507, %rd3504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10054,%dummy}, %rd2961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10055}, %rd2961;
	}
	shf.r.wrap.b32 	%r10056, %r10055, %r10054, 1;
	shf.r.wrap.b32 	%r10057, %r10054, %r10055, 1;
	mov.b64 	%rd3509, {%r10057, %r10056};
	shf.r.wrap.b32 	%r10058, %r10055, %r10054, 8;
	shf.r.wrap.b32 	%r10059, %r10054, %r10055, 8;
	mov.b64 	%rd3510, {%r10059, %r10058};
	shr.u64 	%rd3511, %rd2961, 7;
	xor.b64  	%rd3512, %rd3510, %rd3511;
	xor.b64  	%rd3513, %rd3512, %rd3509;
	add.s64 	%rd3514, %rd3513, %rd2960;
	add.s64 	%rd3515, %rd3514, %rd3425;
	add.s64 	%rd3516, %rd3515, %rd3508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10060,%dummy}, %rd3503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10061}, %rd3503;
	}
	shf.r.wrap.b32 	%r10062, %r10061, %r10060, 19;
	shf.r.wrap.b32 	%r10063, %r10060, %r10061, 19;
	mov.b64 	%rd3517, {%r10063, %r10062};
	shf.l.wrap.b32 	%r10064, %r10060, %r10061, 3;
	shf.l.wrap.b32 	%r10065, %r10061, %r10060, 3;
	mov.b64 	%rd3518, {%r10065, %r10064};
	shr.u64 	%rd3519, %rd3503, 6;
	xor.b64  	%rd3520, %rd3518, %rd3519;
	xor.b64  	%rd3521, %rd3520, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10066,%dummy}, %rd2962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10067}, %rd2962;
	}
	shf.r.wrap.b32 	%r10068, %r10067, %r10066, 1;
	shf.r.wrap.b32 	%r10069, %r10066, %r10067, 1;
	mov.b64 	%rd3522, {%r10069, %r10068};
	shf.r.wrap.b32 	%r10070, %r10067, %r10066, 8;
	shf.r.wrap.b32 	%r10071, %r10066, %r10067, 8;
	mov.b64 	%rd3523, {%r10071, %r10070};
	shr.u64 	%rd3524, %rd2962, 7;
	xor.b64  	%rd3525, %rd3523, %rd3524;
	xor.b64  	%rd3526, %rd3525, %rd3522;
	add.s64 	%rd3527, %rd3526, %rd2961;
	add.s64 	%rd3528, %rd3527, %rd3438;
	add.s64 	%rd3529, %rd3528, %rd3521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd3516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10073}, %rd3516;
	}
	shf.r.wrap.b32 	%r10074, %r10073, %r10072, 19;
	shf.r.wrap.b32 	%r10075, %r10072, %r10073, 19;
	mov.b64 	%rd3530, {%r10075, %r10074};
	shf.l.wrap.b32 	%r10076, %r10072, %r10073, 3;
	shf.l.wrap.b32 	%r10077, %r10073, %r10072, 3;
	mov.b64 	%rd3531, {%r10077, %r10076};
	shr.u64 	%rd3532, %rd3516, 6;
	xor.b64  	%rd3533, %rd3531, %rd3532;
	xor.b64  	%rd3534, %rd3533, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10078,%dummy}, %rd2963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10079}, %rd2963;
	}
	shf.r.wrap.b32 	%r10080, %r10079, %r10078, 1;
	shf.r.wrap.b32 	%r10081, %r10078, %r10079, 1;
	mov.b64 	%rd3535, {%r10081, %r10080};
	shf.r.wrap.b32 	%r10082, %r10079, %r10078, 8;
	shf.r.wrap.b32 	%r10083, %r10078, %r10079, 8;
	mov.b64 	%rd3536, {%r10083, %r10082};
	shr.u64 	%rd3537, %rd2963, 7;
	xor.b64  	%rd3538, %rd3536, %rd3537;
	xor.b64  	%rd3539, %rd3538, %rd3535;
	add.s64 	%rd3540, %rd3539, %rd2962;
	add.s64 	%rd3541, %rd3540, %rd3451;
	add.s64 	%rd3542, %rd3541, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10084,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10085}, %rd3529;
	}
	shf.r.wrap.b32 	%r10086, %r10085, %r10084, 19;
	shf.r.wrap.b32 	%r10087, %r10084, %r10085, 19;
	mov.b64 	%rd3543, {%r10087, %r10086};
	shf.l.wrap.b32 	%r10088, %r10084, %r10085, 3;
	shf.l.wrap.b32 	%r10089, %r10085, %r10084, 3;
	mov.b64 	%rd3544, {%r10089, %r10088};
	shr.u64 	%rd3545, %rd3529, 6;
	xor.b64  	%rd3546, %rd3544, %rd3545;
	xor.b64  	%rd3547, %rd3546, %rd3543;
	shf.r.wrap.b32 	%r10090, %r9929, %r9928, 1;
	shf.r.wrap.b32 	%r10091, %r9928, %r9929, 1;
	mov.b64 	%rd3548, {%r10091, %r10090};
	shf.r.wrap.b32 	%r10092, %r9929, %r9928, 8;
	shf.r.wrap.b32 	%r10093, %r9928, %r9929, 8;
	mov.b64 	%rd3549, {%r10093, %r10092};
	shr.u64 	%rd3550, %rd2964, 7;
	xor.b64  	%rd3551, %rd3549, %rd3550;
	xor.b64  	%rd3552, %rd3551, %rd3548;
	add.s64 	%rd3553, %rd3552, %rd2963;
	add.s64 	%rd3554, %rd3553, %rd3464;
	add.s64 	%rd3555, %rd3554, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10094,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10095}, %rd3542;
	}
	shf.r.wrap.b32 	%r10096, %r10095, %r10094, 19;
	shf.r.wrap.b32 	%r10097, %r10094, %r10095, 19;
	mov.b64 	%rd3556, {%r10097, %r10096};
	shf.l.wrap.b32 	%r10098, %r10094, %r10095, 3;
	shf.l.wrap.b32 	%r10099, %r10095, %r10094, 3;
	mov.b64 	%rd3557, {%r10099, %r10098};
	shr.u64 	%rd3558, %rd3542, 6;
	xor.b64  	%rd3559, %rd3557, %rd3558;
	xor.b64  	%rd3560, %rd3559, %rd3556;
	shf.r.wrap.b32 	%r10100, %r9941, %r9940, 1;
	shf.r.wrap.b32 	%r10101, %r9940, %r9941, 1;
	mov.b64 	%rd3561, {%r10101, %r10100};
	shf.r.wrap.b32 	%r10102, %r9941, %r9940, 8;
	shf.r.wrap.b32 	%r10103, %r9940, %r9941, 8;
	mov.b64 	%rd3562, {%r10103, %r10102};
	shr.u64 	%rd3563, %rd2965, 7;
	xor.b64  	%rd3564, %rd3562, %rd3563;
	xor.b64  	%rd3565, %rd3564, %rd3561;
	add.s64 	%rd3566, %rd3565, %rd2964;
	add.s64 	%rd3567, %rd3566, %rd3477;
	add.s64 	%rd3568, %rd3567, %rd3560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10104,%dummy}, %rd3555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10105}, %rd3555;
	}
	shf.r.wrap.b32 	%r10106, %r10105, %r10104, 19;
	shf.r.wrap.b32 	%r10107, %r10104, %r10105, 19;
	mov.b64 	%rd3569, {%r10107, %r10106};
	shf.l.wrap.b32 	%r10108, %r10104, %r10105, 3;
	shf.l.wrap.b32 	%r10109, %r10105, %r10104, 3;
	mov.b64 	%rd3570, {%r10109, %r10108};
	shr.u64 	%rd3571, %rd3555, 6;
	xor.b64  	%rd3572, %rd3570, %rd3571;
	xor.b64  	%rd3573, %rd3572, %rd3569;
	shf.r.wrap.b32 	%r10110, %r9953, %r9952, 1;
	shf.r.wrap.b32 	%r10111, %r9952, %r9953, 1;
	mov.b64 	%rd3574, {%r10111, %r10110};
	shf.r.wrap.b32 	%r10112, %r9953, %r9952, 8;
	shf.r.wrap.b32 	%r10113, %r9952, %r9953, 8;
	mov.b64 	%rd3575, {%r10113, %r10112};
	shr.u64 	%rd3576, %rd3386, 7;
	xor.b64  	%rd3577, %rd3575, %rd3576;
	xor.b64  	%rd3578, %rd3577, %rd3574;
	add.s64 	%rd3579, %rd3578, %rd2965;
	add.s64 	%rd3580, %rd3579, %rd3490;
	add.s64 	%rd3581, %rd3580, %rd3573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10114,%dummy}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10115}, %rd3362;
	}
	shf.r.wrap.b32 	%r10116, %r10115, %r10114, 14;
	shf.r.wrap.b32 	%r10117, %r10114, %r10115, 14;
	mov.b64 	%rd3582, {%r10117, %r10116};
	shf.r.wrap.b32 	%r10118, %r10115, %r10114, 18;
	shf.r.wrap.b32 	%r10119, %r10114, %r10115, 18;
	mov.b64 	%rd3583, {%r10119, %r10118};
	xor.b64  	%rd3584, %rd3582, %rd3583;
	shf.l.wrap.b32 	%r10120, %r10114, %r10115, 23;
	shf.l.wrap.b32 	%r10121, %r10115, %r10114, 23;
	mov.b64 	%rd3585, {%r10121, %r10120};
	xor.b64  	%rd3586, %rd3584, %rd3585;
	xor.b64  	%rd3587, %rd3337, %rd3312;
	and.b64  	%rd3588, %rd3362, %rd3587;
	xor.b64  	%rd3589, %rd3588, %rd3312;
	add.s64 	%rd3590, %rd3589, %rd3287;
	add.s64 	%rd3591, %rd3590, %rd3586;
	add.s64 	%rd3592, %rd3591, %rd3386;
	ld.const.u64 	%rd3593, [k_sha512+128];
	add.s64 	%rd3594, %rd3592, %rd3593;
	add.s64 	%rd3595, %rd3594, %rd3298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10122,%dummy}, %rd3373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10123}, %rd3373;
	}
	shf.r.wrap.b32 	%r10124, %r10123, %r10122, 28;
	shf.r.wrap.b32 	%r10125, %r10122, %r10123, 28;
	mov.b64 	%rd3596, {%r10125, %r10124};
	shf.l.wrap.b32 	%r10126, %r10122, %r10123, 30;
	shf.l.wrap.b32 	%r10127, %r10123, %r10122, 30;
	mov.b64 	%rd3597, {%r10127, %r10126};
	xor.b64  	%rd3598, %rd3596, %rd3597;
	shf.l.wrap.b32 	%r10128, %r10122, %r10123, 25;
	shf.l.wrap.b32 	%r10129, %r10123, %r10122, 25;
	mov.b64 	%rd3599, {%r10129, %r10128};
	xor.b64  	%rd3600, %rd3598, %rd3599;
	and.b64  	%rd3601, %rd3373, %rd3348;
	xor.b64  	%rd3602, %rd3373, %rd3348;
	and.b64  	%rd3603, %rd3602, %rd3323;
	or.b64  	%rd3604, %rd3603, %rd3601;
	add.s64 	%rd3605, %rd3600, %rd3604;
	add.s64 	%rd3606, %rd3605, %rd3594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10130,%dummy}, %rd3595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10131}, %rd3595;
	}
	shf.r.wrap.b32 	%r10132, %r10131, %r10130, 14;
	shf.r.wrap.b32 	%r10133, %r10130, %r10131, 14;
	mov.b64 	%rd3607, {%r10133, %r10132};
	shf.r.wrap.b32 	%r10134, %r10131, %r10130, 18;
	shf.r.wrap.b32 	%r10135, %r10130, %r10131, 18;
	mov.b64 	%rd3608, {%r10135, %r10134};
	xor.b64  	%rd3609, %rd3607, %rd3608;
	shf.l.wrap.b32 	%r10136, %r10130, %r10131, 23;
	shf.l.wrap.b32 	%r10137, %r10131, %r10130, 23;
	mov.b64 	%rd3610, {%r10137, %r10136};
	xor.b64  	%rd3611, %rd3609, %rd3610;
	xor.b64  	%rd3612, %rd3362, %rd3337;
	and.b64  	%rd3613, %rd3595, %rd3612;
	xor.b64  	%rd3614, %rd3613, %rd3337;
	add.s64 	%rd3615, %rd3399, %rd3312;
	ld.const.u64 	%rd3616, [k_sha512+136];
	add.s64 	%rd3617, %rd3615, %rd3616;
	add.s64 	%rd3618, %rd3617, %rd3614;
	add.s64 	%rd3619, %rd3618, %rd3611;
	add.s64 	%rd3620, %rd3619, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10138,%dummy}, %rd3606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10139}, %rd3606;
	}
	shf.r.wrap.b32 	%r10140, %r10139, %r10138, 28;
	shf.r.wrap.b32 	%r10141, %r10138, %r10139, 28;
	mov.b64 	%rd3621, {%r10141, %r10140};
	shf.l.wrap.b32 	%r10142, %r10138, %r10139, 30;
	shf.l.wrap.b32 	%r10143, %r10139, %r10138, 30;
	mov.b64 	%rd3622, {%r10143, %r10142};
	xor.b64  	%rd3623, %rd3621, %rd3622;
	shf.l.wrap.b32 	%r10144, %r10138, %r10139, 25;
	shf.l.wrap.b32 	%r10145, %r10139, %r10138, 25;
	mov.b64 	%rd3624, {%r10145, %r10144};
	xor.b64  	%rd3625, %rd3623, %rd3624;
	and.b64  	%rd3626, %rd3606, %rd3373;
	xor.b64  	%rd3627, %rd3606, %rd3373;
	and.b64  	%rd3628, %rd3627, %rd3348;
	or.b64  	%rd3629, %rd3628, %rd3626;
	add.s64 	%rd3630, %rd3625, %rd3629;
	add.s64 	%rd3631, %rd3630, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10146,%dummy}, %rd3620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10147}, %rd3620;
	}
	shf.r.wrap.b32 	%r10148, %r10147, %r10146, 14;
	shf.r.wrap.b32 	%r10149, %r10146, %r10147, 14;
	mov.b64 	%rd3632, {%r10149, %r10148};
	shf.r.wrap.b32 	%r10150, %r10147, %r10146, 18;
	shf.r.wrap.b32 	%r10151, %r10146, %r10147, 18;
	mov.b64 	%rd3633, {%r10151, %r10150};
	xor.b64  	%rd3634, %rd3632, %rd3633;
	shf.l.wrap.b32 	%r10152, %r10146, %r10147, 23;
	shf.l.wrap.b32 	%r10153, %r10147, %r10146, 23;
	mov.b64 	%rd3635, {%r10153, %r10152};
	xor.b64  	%rd3636, %rd3634, %rd3635;
	xor.b64  	%rd3637, %rd3595, %rd3362;
	and.b64  	%rd3638, %rd3620, %rd3637;
	xor.b64  	%rd3639, %rd3638, %rd3362;
	add.s64 	%rd3640, %rd3412, %rd3337;
	ld.const.u64 	%rd3641, [k_sha512+144];
	add.s64 	%rd3642, %rd3640, %rd3641;
	add.s64 	%rd3643, %rd3642, %rd3639;
	add.s64 	%rd3644, %rd3643, %rd3636;
	add.s64 	%rd3645, %rd3644, %rd3348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10154,%dummy}, %rd3631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10155}, %rd3631;
	}
	shf.r.wrap.b32 	%r10156, %r10155, %r10154, 28;
	shf.r.wrap.b32 	%r10157, %r10154, %r10155, 28;
	mov.b64 	%rd3646, {%r10157, %r10156};
	shf.l.wrap.b32 	%r10158, %r10154, %r10155, 30;
	shf.l.wrap.b32 	%r10159, %r10155, %r10154, 30;
	mov.b64 	%rd3647, {%r10159, %r10158};
	xor.b64  	%rd3648, %rd3646, %rd3647;
	shf.l.wrap.b32 	%r10160, %r10154, %r10155, 25;
	shf.l.wrap.b32 	%r10161, %r10155, %r10154, 25;
	mov.b64 	%rd3649, {%r10161, %r10160};
	xor.b64  	%rd3650, %rd3648, %rd3649;
	and.b64  	%rd3651, %rd3631, %rd3606;
	xor.b64  	%rd3652, %rd3631, %rd3606;
	and.b64  	%rd3653, %rd3652, %rd3373;
	or.b64  	%rd3654, %rd3653, %rd3651;
	add.s64 	%rd3655, %rd3650, %rd3654;
	add.s64 	%rd3656, %rd3655, %rd3644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10162,%dummy}, %rd3645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10163}, %rd3645;
	}
	shf.r.wrap.b32 	%r10164, %r10163, %r10162, 14;
	shf.r.wrap.b32 	%r10165, %r10162, %r10163, 14;
	mov.b64 	%rd3657, {%r10165, %r10164};
	shf.r.wrap.b32 	%r10166, %r10163, %r10162, 18;
	shf.r.wrap.b32 	%r10167, %r10162, %r10163, 18;
	mov.b64 	%rd3658, {%r10167, %r10166};
	xor.b64  	%rd3659, %rd3657, %rd3658;
	shf.l.wrap.b32 	%r10168, %r10162, %r10163, 23;
	shf.l.wrap.b32 	%r10169, %r10163, %r10162, 23;
	mov.b64 	%rd3660, {%r10169, %r10168};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	xor.b64  	%rd3662, %rd3620, %rd3595;
	and.b64  	%rd3663, %rd3645, %rd3662;
	xor.b64  	%rd3664, %rd3663, %rd3595;
	add.s64 	%rd3665, %rd3425, %rd3362;
	ld.const.u64 	%rd3666, [k_sha512+152];
	add.s64 	%rd3667, %rd3665, %rd3666;
	add.s64 	%rd3668, %rd3667, %rd3664;
	add.s64 	%rd3669, %rd3668, %rd3661;
	add.s64 	%rd3670, %rd3669, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10170,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10171}, %rd3656;
	}
	shf.r.wrap.b32 	%r10172, %r10171, %r10170, 28;
	shf.r.wrap.b32 	%r10173, %r10170, %r10171, 28;
	mov.b64 	%rd3671, {%r10173, %r10172};
	shf.l.wrap.b32 	%r10174, %r10170, %r10171, 30;
	shf.l.wrap.b32 	%r10175, %r10171, %r10170, 30;
	mov.b64 	%rd3672, {%r10175, %r10174};
	xor.b64  	%rd3673, %rd3671, %rd3672;
	shf.l.wrap.b32 	%r10176, %r10170, %r10171, 25;
	shf.l.wrap.b32 	%r10177, %r10171, %r10170, 25;
	mov.b64 	%rd3674, {%r10177, %r10176};
	xor.b64  	%rd3675, %rd3673, %rd3674;
	and.b64  	%rd3676, %rd3656, %rd3631;
	xor.b64  	%rd3677, %rd3656, %rd3631;
	and.b64  	%rd3678, %rd3677, %rd3606;
	or.b64  	%rd3679, %rd3678, %rd3676;
	add.s64 	%rd3680, %rd3675, %rd3679;
	add.s64 	%rd3681, %rd3680, %rd3669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10178,%dummy}, %rd3670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10179}, %rd3670;
	}
	shf.r.wrap.b32 	%r10180, %r10179, %r10178, 14;
	shf.r.wrap.b32 	%r10181, %r10178, %r10179, 14;
	mov.b64 	%rd3682, {%r10181, %r10180};
	shf.r.wrap.b32 	%r10182, %r10179, %r10178, 18;
	shf.r.wrap.b32 	%r10183, %r10178, %r10179, 18;
	mov.b64 	%rd3683, {%r10183, %r10182};
	xor.b64  	%rd3684, %rd3682, %rd3683;
	shf.l.wrap.b32 	%r10184, %r10178, %r10179, 23;
	shf.l.wrap.b32 	%r10185, %r10179, %r10178, 23;
	mov.b64 	%rd3685, {%r10185, %r10184};
	xor.b64  	%rd3686, %rd3684, %rd3685;
	xor.b64  	%rd3687, %rd3645, %rd3620;
	and.b64  	%rd3688, %rd3670, %rd3687;
	xor.b64  	%rd3689, %rd3688, %rd3620;
	add.s64 	%rd3690, %rd3595, %rd3438;
	ld.const.u64 	%rd3691, [k_sha512+160];
	add.s64 	%rd3692, %rd3690, %rd3691;
	add.s64 	%rd3693, %rd3692, %rd3689;
	add.s64 	%rd3694, %rd3693, %rd3686;
	add.s64 	%rd3695, %rd3694, %rd3606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10186,%dummy}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10187}, %rd3681;
	}
	shf.r.wrap.b32 	%r10188, %r10187, %r10186, 28;
	shf.r.wrap.b32 	%r10189, %r10186, %r10187, 28;
	mov.b64 	%rd3696, {%r10189, %r10188};
	shf.l.wrap.b32 	%r10190, %r10186, %r10187, 30;
	shf.l.wrap.b32 	%r10191, %r10187, %r10186, 30;
	mov.b64 	%rd3697, {%r10191, %r10190};
	xor.b64  	%rd3698, %rd3696, %rd3697;
	shf.l.wrap.b32 	%r10192, %r10186, %r10187, 25;
	shf.l.wrap.b32 	%r10193, %r10187, %r10186, 25;
	mov.b64 	%rd3699, {%r10193, %r10192};
	xor.b64  	%rd3700, %rd3698, %rd3699;
	and.b64  	%rd3701, %rd3681, %rd3656;
	xor.b64  	%rd3702, %rd3681, %rd3656;
	and.b64  	%rd3703, %rd3702, %rd3631;
	or.b64  	%rd3704, %rd3703, %rd3701;
	add.s64 	%rd3705, %rd3700, %rd3704;
	add.s64 	%rd3706, %rd3705, %rd3694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10194,%dummy}, %rd3695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10195}, %rd3695;
	}
	shf.r.wrap.b32 	%r10196, %r10195, %r10194, 14;
	shf.r.wrap.b32 	%r10197, %r10194, %r10195, 14;
	mov.b64 	%rd3707, {%r10197, %r10196};
	shf.r.wrap.b32 	%r10198, %r10195, %r10194, 18;
	shf.r.wrap.b32 	%r10199, %r10194, %r10195, 18;
	mov.b64 	%rd3708, {%r10199, %r10198};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	shf.l.wrap.b32 	%r10200, %r10194, %r10195, 23;
	shf.l.wrap.b32 	%r10201, %r10195, %r10194, 23;
	mov.b64 	%rd3710, {%r10201, %r10200};
	xor.b64  	%rd3711, %rd3709, %rd3710;
	xor.b64  	%rd3712, %rd3670, %rd3645;
	and.b64  	%rd3713, %rd3695, %rd3712;
	xor.b64  	%rd3714, %rd3713, %rd3645;
	ld.const.u64 	%rd3715, [k_sha512+168];
	add.s64 	%rd3716, %rd3715, %rd3451;
	add.s64 	%rd3717, %rd3716, %rd3620;
	add.s64 	%rd3718, %rd3717, %rd3714;
	add.s64 	%rd3719, %rd3718, %rd3711;
	add.s64 	%rd3720, %rd3719, %rd3631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10202,%dummy}, %rd3706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10203}, %rd3706;
	}
	shf.r.wrap.b32 	%r10204, %r10203, %r10202, 28;
	shf.r.wrap.b32 	%r10205, %r10202, %r10203, 28;
	mov.b64 	%rd3721, {%r10205, %r10204};
	shf.l.wrap.b32 	%r10206, %r10202, %r10203, 30;
	shf.l.wrap.b32 	%r10207, %r10203, %r10202, 30;
	mov.b64 	%rd3722, {%r10207, %r10206};
	xor.b64  	%rd3723, %rd3721, %rd3722;
	shf.l.wrap.b32 	%r10208, %r10202, %r10203, 25;
	shf.l.wrap.b32 	%r10209, %r10203, %r10202, 25;
	mov.b64 	%rd3724, {%r10209, %r10208};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	and.b64  	%rd3726, %rd3706, %rd3681;
	xor.b64  	%rd3727, %rd3706, %rd3681;
	and.b64  	%rd3728, %rd3727, %rd3656;
	or.b64  	%rd3729, %rd3728, %rd3726;
	add.s64 	%rd3730, %rd3725, %rd3729;
	add.s64 	%rd3731, %rd3730, %rd3719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10210,%dummy}, %rd3720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10211}, %rd3720;
	}
	shf.r.wrap.b32 	%r10212, %r10211, %r10210, 14;
	shf.r.wrap.b32 	%r10213, %r10210, %r10211, 14;
	mov.b64 	%rd3732, {%r10213, %r10212};
	shf.r.wrap.b32 	%r10214, %r10211, %r10210, 18;
	shf.r.wrap.b32 	%r10215, %r10210, %r10211, 18;
	mov.b64 	%rd3733, {%r10215, %r10214};
	xor.b64  	%rd3734, %rd3732, %rd3733;
	shf.l.wrap.b32 	%r10216, %r10210, %r10211, 23;
	shf.l.wrap.b32 	%r10217, %r10211, %r10210, 23;
	mov.b64 	%rd3735, {%r10217, %r10216};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	xor.b64  	%rd3737, %rd3695, %rd3670;
	and.b64  	%rd3738, %rd3720, %rd3737;
	xor.b64  	%rd3739, %rd3738, %rd3670;
	ld.const.u64 	%rd3740, [k_sha512+176];
	add.s64 	%rd3741, %rd3740, %rd3464;
	add.s64 	%rd3742, %rd3741, %rd3645;
	add.s64 	%rd3743, %rd3742, %rd3739;
	add.s64 	%rd3744, %rd3743, %rd3736;
	add.s64 	%rd3745, %rd3744, %rd3656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10218,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10219}, %rd3731;
	}
	shf.r.wrap.b32 	%r10220, %r10219, %r10218, 28;
	shf.r.wrap.b32 	%r10221, %r10218, %r10219, 28;
	mov.b64 	%rd3746, {%r10221, %r10220};
	shf.l.wrap.b32 	%r10222, %r10218, %r10219, 30;
	shf.l.wrap.b32 	%r10223, %r10219, %r10218, 30;
	mov.b64 	%rd3747, {%r10223, %r10222};
	xor.b64  	%rd3748, %rd3746, %rd3747;
	shf.l.wrap.b32 	%r10224, %r10218, %r10219, 25;
	shf.l.wrap.b32 	%r10225, %r10219, %r10218, 25;
	mov.b64 	%rd3749, {%r10225, %r10224};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	and.b64  	%rd3751, %rd3731, %rd3706;
	xor.b64  	%rd3752, %rd3731, %rd3706;
	and.b64  	%rd3753, %rd3752, %rd3681;
	or.b64  	%rd3754, %rd3753, %rd3751;
	add.s64 	%rd3755, %rd3750, %rd3754;
	add.s64 	%rd3756, %rd3755, %rd3744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10226,%dummy}, %rd3745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10227}, %rd3745;
	}
	shf.r.wrap.b32 	%r10228, %r10227, %r10226, 14;
	shf.r.wrap.b32 	%r10229, %r10226, %r10227, 14;
	mov.b64 	%rd3757, {%r10229, %r10228};
	shf.r.wrap.b32 	%r10230, %r10227, %r10226, 18;
	shf.r.wrap.b32 	%r10231, %r10226, %r10227, 18;
	mov.b64 	%rd3758, {%r10231, %r10230};
	xor.b64  	%rd3759, %rd3757, %rd3758;
	shf.l.wrap.b32 	%r10232, %r10226, %r10227, 23;
	shf.l.wrap.b32 	%r10233, %r10227, %r10226, 23;
	mov.b64 	%rd3760, {%r10233, %r10232};
	xor.b64  	%rd3761, %rd3759, %rd3760;
	xor.b64  	%rd3762, %rd3720, %rd3695;
	and.b64  	%rd3763, %rd3745, %rd3762;
	xor.b64  	%rd3764, %rd3763, %rd3695;
	ld.const.u64 	%rd3765, [k_sha512+184];
	add.s64 	%rd3766, %rd3765, %rd3477;
	add.s64 	%rd3767, %rd3766, %rd3670;
	add.s64 	%rd3768, %rd3767, %rd3764;
	add.s64 	%rd3769, %rd3768, %rd3761;
	add.s64 	%rd3770, %rd3769, %rd3681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10234,%dummy}, %rd3756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10235}, %rd3756;
	}
	shf.r.wrap.b32 	%r10236, %r10235, %r10234, 28;
	shf.r.wrap.b32 	%r10237, %r10234, %r10235, 28;
	mov.b64 	%rd3771, {%r10237, %r10236};
	shf.l.wrap.b32 	%r10238, %r10234, %r10235, 30;
	shf.l.wrap.b32 	%r10239, %r10235, %r10234, 30;
	mov.b64 	%rd3772, {%r10239, %r10238};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	shf.l.wrap.b32 	%r10240, %r10234, %r10235, 25;
	shf.l.wrap.b32 	%r10241, %r10235, %r10234, 25;
	mov.b64 	%rd3774, {%r10241, %r10240};
	xor.b64  	%rd3775, %rd3773, %rd3774;
	and.b64  	%rd3776, %rd3756, %rd3731;
	xor.b64  	%rd3777, %rd3756, %rd3731;
	and.b64  	%rd3778, %rd3777, %rd3706;
	or.b64  	%rd3779, %rd3778, %rd3776;
	add.s64 	%rd3780, %rd3775, %rd3779;
	add.s64 	%rd3781, %rd3780, %rd3769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10242,%dummy}, %rd3770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10243}, %rd3770;
	}
	shf.r.wrap.b32 	%r10244, %r10243, %r10242, 14;
	shf.r.wrap.b32 	%r10245, %r10242, %r10243, 14;
	mov.b64 	%rd3782, {%r10245, %r10244};
	shf.r.wrap.b32 	%r10246, %r10243, %r10242, 18;
	shf.r.wrap.b32 	%r10247, %r10242, %r10243, 18;
	mov.b64 	%rd3783, {%r10247, %r10246};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	shf.l.wrap.b32 	%r10248, %r10242, %r10243, 23;
	shf.l.wrap.b32 	%r10249, %r10243, %r10242, 23;
	mov.b64 	%rd3785, {%r10249, %r10248};
	xor.b64  	%rd3786, %rd3784, %rd3785;
	xor.b64  	%rd3787, %rd3745, %rd3720;
	and.b64  	%rd3788, %rd3770, %rd3787;
	xor.b64  	%rd3789, %rd3788, %rd3720;
	ld.const.u64 	%rd3790, [k_sha512+192];
	add.s64 	%rd3791, %rd3790, %rd3490;
	add.s64 	%rd3792, %rd3791, %rd3695;
	add.s64 	%rd3793, %rd3792, %rd3789;
	add.s64 	%rd3794, %rd3793, %rd3786;
	add.s64 	%rd3795, %rd3794, %rd3706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10250,%dummy}, %rd3781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10251}, %rd3781;
	}
	shf.r.wrap.b32 	%r10252, %r10251, %r10250, 28;
	shf.r.wrap.b32 	%r10253, %r10250, %r10251, 28;
	mov.b64 	%rd3796, {%r10253, %r10252};
	shf.l.wrap.b32 	%r10254, %r10250, %r10251, 30;
	shf.l.wrap.b32 	%r10255, %r10251, %r10250, 30;
	mov.b64 	%rd3797, {%r10255, %r10254};
	xor.b64  	%rd3798, %rd3796, %rd3797;
	shf.l.wrap.b32 	%r10256, %r10250, %r10251, 25;
	shf.l.wrap.b32 	%r10257, %r10251, %r10250, 25;
	mov.b64 	%rd3799, {%r10257, %r10256};
	xor.b64  	%rd3800, %rd3798, %rd3799;
	and.b64  	%rd3801, %rd3781, %rd3756;
	xor.b64  	%rd3802, %rd3781, %rd3756;
	and.b64  	%rd3803, %rd3802, %rd3731;
	or.b64  	%rd3804, %rd3803, %rd3801;
	add.s64 	%rd3805, %rd3800, %rd3804;
	add.s64 	%rd3806, %rd3805, %rd3794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10258,%dummy}, %rd3795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10259}, %rd3795;
	}
	shf.r.wrap.b32 	%r10260, %r10259, %r10258, 14;
	shf.r.wrap.b32 	%r10261, %r10258, %r10259, 14;
	mov.b64 	%rd3807, {%r10261, %r10260};
	shf.r.wrap.b32 	%r10262, %r10259, %r10258, 18;
	shf.r.wrap.b32 	%r10263, %r10258, %r10259, 18;
	mov.b64 	%rd3808, {%r10263, %r10262};
	xor.b64  	%rd3809, %rd3807, %rd3808;
	shf.l.wrap.b32 	%r10264, %r10258, %r10259, 23;
	shf.l.wrap.b32 	%r10265, %r10259, %r10258, 23;
	mov.b64 	%rd3810, {%r10265, %r10264};
	xor.b64  	%rd3811, %rd3809, %rd3810;
	xor.b64  	%rd3812, %rd3770, %rd3745;
	and.b64  	%rd3813, %rd3795, %rd3812;
	xor.b64  	%rd3814, %rd3813, %rd3745;
	ld.const.u64 	%rd3815, [k_sha512+200];
	add.s64 	%rd3816, %rd3815, %rd3503;
	add.s64 	%rd3817, %rd3816, %rd3720;
	add.s64 	%rd3818, %rd3817, %rd3814;
	add.s64 	%rd3819, %rd3818, %rd3811;
	add.s64 	%rd3820, %rd3819, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10266,%dummy}, %rd3806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10267}, %rd3806;
	}
	shf.r.wrap.b32 	%r10268, %r10267, %r10266, 28;
	shf.r.wrap.b32 	%r10269, %r10266, %r10267, 28;
	mov.b64 	%rd3821, {%r10269, %r10268};
	shf.l.wrap.b32 	%r10270, %r10266, %r10267, 30;
	shf.l.wrap.b32 	%r10271, %r10267, %r10266, 30;
	mov.b64 	%rd3822, {%r10271, %r10270};
	xor.b64  	%rd3823, %rd3821, %rd3822;
	shf.l.wrap.b32 	%r10272, %r10266, %r10267, 25;
	shf.l.wrap.b32 	%r10273, %r10267, %r10266, 25;
	mov.b64 	%rd3824, {%r10273, %r10272};
	xor.b64  	%rd3825, %rd3823, %rd3824;
	and.b64  	%rd3826, %rd3806, %rd3781;
	xor.b64  	%rd3827, %rd3806, %rd3781;
	and.b64  	%rd3828, %rd3827, %rd3756;
	or.b64  	%rd3829, %rd3828, %rd3826;
	add.s64 	%rd3830, %rd3825, %rd3829;
	add.s64 	%rd3831, %rd3830, %rd3819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10274,%dummy}, %rd3820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10275}, %rd3820;
	}
	shf.r.wrap.b32 	%r10276, %r10275, %r10274, 14;
	shf.r.wrap.b32 	%r10277, %r10274, %r10275, 14;
	mov.b64 	%rd3832, {%r10277, %r10276};
	shf.r.wrap.b32 	%r10278, %r10275, %r10274, 18;
	shf.r.wrap.b32 	%r10279, %r10274, %r10275, 18;
	mov.b64 	%rd3833, {%r10279, %r10278};
	xor.b64  	%rd3834, %rd3832, %rd3833;
	shf.l.wrap.b32 	%r10280, %r10274, %r10275, 23;
	shf.l.wrap.b32 	%r10281, %r10275, %r10274, 23;
	mov.b64 	%rd3835, {%r10281, %r10280};
	xor.b64  	%rd3836, %rd3834, %rd3835;
	xor.b64  	%rd3837, %rd3795, %rd3770;
	and.b64  	%rd3838, %rd3820, %rd3837;
	xor.b64  	%rd3839, %rd3838, %rd3770;
	ld.const.u64 	%rd3840, [k_sha512+208];
	add.s64 	%rd3841, %rd3840, %rd3516;
	add.s64 	%rd3842, %rd3841, %rd3745;
	add.s64 	%rd3843, %rd3842, %rd3839;
	add.s64 	%rd3844, %rd3843, %rd3836;
	add.s64 	%rd3845, %rd3844, %rd3756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10282,%dummy}, %rd3831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10283}, %rd3831;
	}
	shf.r.wrap.b32 	%r10284, %r10283, %r10282, 28;
	shf.r.wrap.b32 	%r10285, %r10282, %r10283, 28;
	mov.b64 	%rd3846, {%r10285, %r10284};
	shf.l.wrap.b32 	%r10286, %r10282, %r10283, 30;
	shf.l.wrap.b32 	%r10287, %r10283, %r10282, 30;
	mov.b64 	%rd3847, {%r10287, %r10286};
	xor.b64  	%rd3848, %rd3846, %rd3847;
	shf.l.wrap.b32 	%r10288, %r10282, %r10283, 25;
	shf.l.wrap.b32 	%r10289, %r10283, %r10282, 25;
	mov.b64 	%rd3849, {%r10289, %r10288};
	xor.b64  	%rd3850, %rd3848, %rd3849;
	and.b64  	%rd3851, %rd3831, %rd3806;
	xor.b64  	%rd3852, %rd3831, %rd3806;
	and.b64  	%rd3853, %rd3852, %rd3781;
	or.b64  	%rd3854, %rd3853, %rd3851;
	add.s64 	%rd3855, %rd3850, %rd3854;
	add.s64 	%rd3856, %rd3855, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10290,%dummy}, %rd3845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10291}, %rd3845;
	}
	shf.r.wrap.b32 	%r10292, %r10291, %r10290, 14;
	shf.r.wrap.b32 	%r10293, %r10290, %r10291, 14;
	mov.b64 	%rd3857, {%r10293, %r10292};
	shf.r.wrap.b32 	%r10294, %r10291, %r10290, 18;
	shf.r.wrap.b32 	%r10295, %r10290, %r10291, 18;
	mov.b64 	%rd3858, {%r10295, %r10294};
	xor.b64  	%rd3859, %rd3857, %rd3858;
	shf.l.wrap.b32 	%r10296, %r10290, %r10291, 23;
	shf.l.wrap.b32 	%r10297, %r10291, %r10290, 23;
	mov.b64 	%rd3860, {%r10297, %r10296};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	xor.b64  	%rd3862, %rd3820, %rd3795;
	and.b64  	%rd3863, %rd3845, %rd3862;
	xor.b64  	%rd3864, %rd3863, %rd3795;
	ld.const.u64 	%rd3865, [k_sha512+216];
	add.s64 	%rd3866, %rd3865, %rd3529;
	add.s64 	%rd3867, %rd3866, %rd3770;
	add.s64 	%rd3868, %rd3867, %rd3864;
	add.s64 	%rd3869, %rd3868, %rd3861;
	add.s64 	%rd3870, %rd3869, %rd3781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10298,%dummy}, %rd3856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10299}, %rd3856;
	}
	shf.r.wrap.b32 	%r10300, %r10299, %r10298, 28;
	shf.r.wrap.b32 	%r10301, %r10298, %r10299, 28;
	mov.b64 	%rd3871, {%r10301, %r10300};
	shf.l.wrap.b32 	%r10302, %r10298, %r10299, 30;
	shf.l.wrap.b32 	%r10303, %r10299, %r10298, 30;
	mov.b64 	%rd3872, {%r10303, %r10302};
	xor.b64  	%rd3873, %rd3871, %rd3872;
	shf.l.wrap.b32 	%r10304, %r10298, %r10299, 25;
	shf.l.wrap.b32 	%r10305, %r10299, %r10298, 25;
	mov.b64 	%rd3874, {%r10305, %r10304};
	xor.b64  	%rd3875, %rd3873, %rd3874;
	and.b64  	%rd3876, %rd3856, %rd3831;
	xor.b64  	%rd3877, %rd3856, %rd3831;
	and.b64  	%rd3878, %rd3877, %rd3806;
	or.b64  	%rd3879, %rd3878, %rd3876;
	add.s64 	%rd3880, %rd3875, %rd3879;
	add.s64 	%rd3881, %rd3880, %rd3869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10306,%dummy}, %rd3870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10307}, %rd3870;
	}
	shf.r.wrap.b32 	%r10308, %r10307, %r10306, 14;
	shf.r.wrap.b32 	%r10309, %r10306, %r10307, 14;
	mov.b64 	%rd3882, {%r10309, %r10308};
	shf.r.wrap.b32 	%r10310, %r10307, %r10306, 18;
	shf.r.wrap.b32 	%r10311, %r10306, %r10307, 18;
	mov.b64 	%rd3883, {%r10311, %r10310};
	xor.b64  	%rd3884, %rd3882, %rd3883;
	shf.l.wrap.b32 	%r10312, %r10306, %r10307, 23;
	shf.l.wrap.b32 	%r10313, %r10307, %r10306, 23;
	mov.b64 	%rd3885, {%r10313, %r10312};
	xor.b64  	%rd3886, %rd3884, %rd3885;
	xor.b64  	%rd3887, %rd3845, %rd3820;
	and.b64  	%rd3888, %rd3870, %rd3887;
	xor.b64  	%rd3889, %rd3888, %rd3820;
	ld.const.u64 	%rd3890, [k_sha512+224];
	add.s64 	%rd3891, %rd3890, %rd3542;
	add.s64 	%rd3892, %rd3891, %rd3795;
	add.s64 	%rd3893, %rd3892, %rd3889;
	add.s64 	%rd3894, %rd3893, %rd3886;
	add.s64 	%rd3895, %rd3894, %rd3806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10314,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10315}, %rd3881;
	}
	shf.r.wrap.b32 	%r10316, %r10315, %r10314, 28;
	shf.r.wrap.b32 	%r10317, %r10314, %r10315, 28;
	mov.b64 	%rd3896, {%r10317, %r10316};
	shf.l.wrap.b32 	%r10318, %r10314, %r10315, 30;
	shf.l.wrap.b32 	%r10319, %r10315, %r10314, 30;
	mov.b64 	%rd3897, {%r10319, %r10318};
	xor.b64  	%rd3898, %rd3896, %rd3897;
	shf.l.wrap.b32 	%r10320, %r10314, %r10315, 25;
	shf.l.wrap.b32 	%r10321, %r10315, %r10314, 25;
	mov.b64 	%rd3899, {%r10321, %r10320};
	xor.b64  	%rd3900, %rd3898, %rd3899;
	and.b64  	%rd3901, %rd3881, %rd3856;
	xor.b64  	%rd3902, %rd3881, %rd3856;
	and.b64  	%rd3903, %rd3902, %rd3831;
	or.b64  	%rd3904, %rd3903, %rd3901;
	add.s64 	%rd3905, %rd3900, %rd3904;
	add.s64 	%rd3906, %rd3905, %rd3894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10322,%dummy}, %rd3895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10323}, %rd3895;
	}
	shf.r.wrap.b32 	%r10324, %r10323, %r10322, 14;
	shf.r.wrap.b32 	%r10325, %r10322, %r10323, 14;
	mov.b64 	%rd3907, {%r10325, %r10324};
	shf.r.wrap.b32 	%r10326, %r10323, %r10322, 18;
	shf.r.wrap.b32 	%r10327, %r10322, %r10323, 18;
	mov.b64 	%rd3908, {%r10327, %r10326};
	xor.b64  	%rd3909, %rd3907, %rd3908;
	shf.l.wrap.b32 	%r10328, %r10322, %r10323, 23;
	shf.l.wrap.b32 	%r10329, %r10323, %r10322, 23;
	mov.b64 	%rd3910, {%r10329, %r10328};
	xor.b64  	%rd3911, %rd3909, %rd3910;
	xor.b64  	%rd3912, %rd3870, %rd3845;
	and.b64  	%rd3913, %rd3895, %rd3912;
	xor.b64  	%rd3914, %rd3913, %rd3845;
	ld.const.u64 	%rd3915, [k_sha512+232];
	add.s64 	%rd3916, %rd3915, %rd3555;
	add.s64 	%rd3917, %rd3916, %rd3820;
	add.s64 	%rd3918, %rd3917, %rd3914;
	add.s64 	%rd3919, %rd3918, %rd3911;
	add.s64 	%rd3920, %rd3919, %rd3831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10330,%dummy}, %rd3906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10331}, %rd3906;
	}
	shf.r.wrap.b32 	%r10332, %r10331, %r10330, 28;
	shf.r.wrap.b32 	%r10333, %r10330, %r10331, 28;
	mov.b64 	%rd3921, {%r10333, %r10332};
	shf.l.wrap.b32 	%r10334, %r10330, %r10331, 30;
	shf.l.wrap.b32 	%r10335, %r10331, %r10330, 30;
	mov.b64 	%rd3922, {%r10335, %r10334};
	xor.b64  	%rd3923, %rd3921, %rd3922;
	shf.l.wrap.b32 	%r10336, %r10330, %r10331, 25;
	shf.l.wrap.b32 	%r10337, %r10331, %r10330, 25;
	mov.b64 	%rd3924, {%r10337, %r10336};
	xor.b64  	%rd3925, %rd3923, %rd3924;
	and.b64  	%rd3926, %rd3906, %rd3881;
	xor.b64  	%rd3927, %rd3906, %rd3881;
	and.b64  	%rd3928, %rd3927, %rd3856;
	or.b64  	%rd3929, %rd3928, %rd3926;
	add.s64 	%rd3930, %rd3925, %rd3929;
	add.s64 	%rd3931, %rd3930, %rd3919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10338,%dummy}, %rd3920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10339}, %rd3920;
	}
	shf.r.wrap.b32 	%r10340, %r10339, %r10338, 14;
	shf.r.wrap.b32 	%r10341, %r10338, %r10339, 14;
	mov.b64 	%rd3932, {%r10341, %r10340};
	shf.r.wrap.b32 	%r10342, %r10339, %r10338, 18;
	shf.r.wrap.b32 	%r10343, %r10338, %r10339, 18;
	mov.b64 	%rd3933, {%r10343, %r10342};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	shf.l.wrap.b32 	%r10344, %r10338, %r10339, 23;
	shf.l.wrap.b32 	%r10345, %r10339, %r10338, 23;
	mov.b64 	%rd3935, {%r10345, %r10344};
	xor.b64  	%rd3936, %rd3934, %rd3935;
	xor.b64  	%rd3937, %rd3895, %rd3870;
	and.b64  	%rd3938, %rd3920, %rd3937;
	xor.b64  	%rd3939, %rd3938, %rd3870;
	ld.const.u64 	%rd3940, [k_sha512+240];
	add.s64 	%rd3941, %rd3940, %rd3568;
	add.s64 	%rd3942, %rd3941, %rd3845;
	add.s64 	%rd3943, %rd3942, %rd3939;
	add.s64 	%rd3944, %rd3943, %rd3936;
	add.s64 	%rd3945, %rd3944, %rd3856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10346,%dummy}, %rd3931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10347}, %rd3931;
	}
	shf.r.wrap.b32 	%r10348, %r10347, %r10346, 28;
	shf.r.wrap.b32 	%r10349, %r10346, %r10347, 28;
	mov.b64 	%rd3946, {%r10349, %r10348};
	shf.l.wrap.b32 	%r10350, %r10346, %r10347, 30;
	shf.l.wrap.b32 	%r10351, %r10347, %r10346, 30;
	mov.b64 	%rd3947, {%r10351, %r10350};
	xor.b64  	%rd3948, %rd3946, %rd3947;
	shf.l.wrap.b32 	%r10352, %r10346, %r10347, 25;
	shf.l.wrap.b32 	%r10353, %r10347, %r10346, 25;
	mov.b64 	%rd3949, {%r10353, %r10352};
	xor.b64  	%rd3950, %rd3948, %rd3949;
	and.b64  	%rd3951, %rd3931, %rd3906;
	xor.b64  	%rd3952, %rd3931, %rd3906;
	and.b64  	%rd3953, %rd3952, %rd3881;
	or.b64  	%rd3954, %rd3953, %rd3951;
	add.s64 	%rd3955, %rd3950, %rd3954;
	add.s64 	%rd3956, %rd3955, %rd3944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10354,%dummy}, %rd3945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10355}, %rd3945;
	}
	shf.r.wrap.b32 	%r10356, %r10355, %r10354, 14;
	shf.r.wrap.b32 	%r10357, %r10354, %r10355, 14;
	mov.b64 	%rd3957, {%r10357, %r10356};
	shf.r.wrap.b32 	%r10358, %r10355, %r10354, 18;
	shf.r.wrap.b32 	%r10359, %r10354, %r10355, 18;
	mov.b64 	%rd3958, {%r10359, %r10358};
	xor.b64  	%rd3959, %rd3957, %rd3958;
	shf.l.wrap.b32 	%r10360, %r10354, %r10355, 23;
	shf.l.wrap.b32 	%r10361, %r10355, %r10354, 23;
	mov.b64 	%rd3960, {%r10361, %r10360};
	xor.b64  	%rd3961, %rd3959, %rd3960;
	xor.b64  	%rd3962, %rd3920, %rd3895;
	and.b64  	%rd3963, %rd3945, %rd3962;
	xor.b64  	%rd3964, %rd3963, %rd3895;
	ld.const.u64 	%rd3965, [k_sha512+248];
	add.s64 	%rd3966, %rd3965, %rd3581;
	add.s64 	%rd3967, %rd3966, %rd3870;
	add.s64 	%rd3968, %rd3967, %rd3964;
	add.s64 	%rd3969, %rd3968, %rd3961;
	add.s64 	%rd3970, %rd3969, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10362,%dummy}, %rd3956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10363}, %rd3956;
	}
	shf.r.wrap.b32 	%r10364, %r10363, %r10362, 28;
	shf.r.wrap.b32 	%r10365, %r10362, %r10363, 28;
	mov.b64 	%rd3971, {%r10365, %r10364};
	shf.l.wrap.b32 	%r10366, %r10362, %r10363, 30;
	shf.l.wrap.b32 	%r10367, %r10363, %r10362, 30;
	mov.b64 	%rd3972, {%r10367, %r10366};
	xor.b64  	%rd3973, %rd3971, %rd3972;
	shf.l.wrap.b32 	%r10368, %r10362, %r10363, 25;
	shf.l.wrap.b32 	%r10369, %r10363, %r10362, 25;
	mov.b64 	%rd3974, {%r10369, %r10368};
	xor.b64  	%rd3975, %rd3973, %rd3974;
	and.b64  	%rd3976, %rd3956, %rd3931;
	xor.b64  	%rd3977, %rd3956, %rd3931;
	and.b64  	%rd3978, %rd3977, %rd3906;
	or.b64  	%rd3979, %rd3978, %rd3976;
	add.s64 	%rd3980, %rd3975, %rd3979;
	add.s64 	%rd3981, %rd3980, %rd3969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10370,%dummy}, %rd3568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10371}, %rd3568;
	}
	shf.r.wrap.b32 	%r10372, %r10371, %r10370, 19;
	shf.r.wrap.b32 	%r10373, %r10370, %r10371, 19;
	mov.b64 	%rd3982, {%r10373, %r10372};
	shf.l.wrap.b32 	%r10374, %r10370, %r10371, 3;
	shf.l.wrap.b32 	%r10375, %r10371, %r10370, 3;
	mov.b64 	%rd3983, {%r10375, %r10374};
	shr.u64 	%rd3984, %rd3568, 6;
	xor.b64  	%rd3985, %rd3983, %rd3984;
	xor.b64  	%rd3986, %rd3985, %rd3982;
	shf.r.wrap.b32 	%r10376, %r9965, %r9964, 1;
	shf.r.wrap.b32 	%r10377, %r9964, %r9965, 1;
	mov.b64 	%rd3987, {%r10377, %r10376};
	shf.r.wrap.b32 	%r10378, %r9965, %r9964, 8;
	shf.r.wrap.b32 	%r10379, %r9964, %r9965, 8;
	mov.b64 	%rd3988, {%r10379, %r10378};
	shr.u64 	%rd3989, %rd3399, 7;
	xor.b64  	%rd3990, %rd3988, %rd3989;
	xor.b64  	%rd3991, %rd3990, %rd3987;
	add.s64 	%rd3992, %rd3991, %rd3386;
	add.s64 	%rd3993, %rd3992, %rd3503;
	add.s64 	%rd3994, %rd3993, %rd3986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10380,%dummy}, %rd3581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10381}, %rd3581;
	}
	shf.r.wrap.b32 	%r10382, %r10381, %r10380, 19;
	shf.r.wrap.b32 	%r10383, %r10380, %r10381, 19;
	mov.b64 	%rd3995, {%r10383, %r10382};
	shf.l.wrap.b32 	%r10384, %r10380, %r10381, 3;
	shf.l.wrap.b32 	%r10385, %r10381, %r10380, 3;
	mov.b64 	%rd3996, {%r10385, %r10384};
	shr.u64 	%rd3997, %rd3581, 6;
	xor.b64  	%rd3998, %rd3996, %rd3997;
	xor.b64  	%rd3999, %rd3998, %rd3995;
	shf.r.wrap.b32 	%r10386, %r9977, %r9976, 1;
	shf.r.wrap.b32 	%r10387, %r9976, %r9977, 1;
	mov.b64 	%rd4000, {%r10387, %r10386};
	shf.r.wrap.b32 	%r10388, %r9977, %r9976, 8;
	shf.r.wrap.b32 	%r10389, %r9976, %r9977, 8;
	mov.b64 	%rd4001, {%r10389, %r10388};
	shr.u64 	%rd4002, %rd3412, 7;
	xor.b64  	%rd4003, %rd4001, %rd4002;
	xor.b64  	%rd4004, %rd4003, %rd4000;
	add.s64 	%rd4005, %rd4004, %rd3399;
	add.s64 	%rd4006, %rd4005, %rd3516;
	add.s64 	%rd4007, %rd4006, %rd3999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10390,%dummy}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10391}, %rd3994;
	}
	shf.r.wrap.b32 	%r10392, %r10391, %r10390, 19;
	shf.r.wrap.b32 	%r10393, %r10390, %r10391, 19;
	mov.b64 	%rd4008, {%r10393, %r10392};
	shf.l.wrap.b32 	%r10394, %r10390, %r10391, 3;
	shf.l.wrap.b32 	%r10395, %r10391, %r10390, 3;
	mov.b64 	%rd4009, {%r10395, %r10394};
	shr.u64 	%rd4010, %rd3994, 6;
	xor.b64  	%rd4011, %rd4009, %rd4010;
	xor.b64  	%rd4012, %rd4011, %rd4008;
	shf.r.wrap.b32 	%r10396, %r9989, %r9988, 1;
	shf.r.wrap.b32 	%r10397, %r9988, %r9989, 1;
	mov.b64 	%rd4013, {%r10397, %r10396};
	shf.r.wrap.b32 	%r10398, %r9989, %r9988, 8;
	shf.r.wrap.b32 	%r10399, %r9988, %r9989, 8;
	mov.b64 	%rd4014, {%r10399, %r10398};
	shr.u64 	%rd4015, %rd3425, 7;
	xor.b64  	%rd4016, %rd4014, %rd4015;
	xor.b64  	%rd4017, %rd4016, %rd4013;
	add.s64 	%rd4018, %rd4017, %rd3412;
	add.s64 	%rd4019, %rd4018, %rd3529;
	add.s64 	%rd4020, %rd4019, %rd4012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10400,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10401}, %rd4007;
	}
	shf.r.wrap.b32 	%r10402, %r10401, %r10400, 19;
	shf.r.wrap.b32 	%r10403, %r10400, %r10401, 19;
	mov.b64 	%rd4021, {%r10403, %r10402};
	shf.l.wrap.b32 	%r10404, %r10400, %r10401, 3;
	shf.l.wrap.b32 	%r10405, %r10401, %r10400, 3;
	mov.b64 	%rd4022, {%r10405, %r10404};
	shr.u64 	%rd4023, %rd4007, 6;
	xor.b64  	%rd4024, %rd4022, %rd4023;
	xor.b64  	%rd4025, %rd4024, %rd4021;
	shf.r.wrap.b32 	%r10406, %r10001, %r10000, 1;
	shf.r.wrap.b32 	%r10407, %r10000, %r10001, 1;
	mov.b64 	%rd4026, {%r10407, %r10406};
	shf.r.wrap.b32 	%r10408, %r10001, %r10000, 8;
	shf.r.wrap.b32 	%r10409, %r10000, %r10001, 8;
	mov.b64 	%rd4027, {%r10409, %r10408};
	shr.u64 	%rd4028, %rd3438, 7;
	xor.b64  	%rd4029, %rd4027, %rd4028;
	xor.b64  	%rd4030, %rd4029, %rd4026;
	add.s64 	%rd4031, %rd4030, %rd3425;
	add.s64 	%rd4032, %rd4031, %rd3542;
	add.s64 	%rd4033, %rd4032, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10410,%dummy}, %rd4020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10411}, %rd4020;
	}
	shf.r.wrap.b32 	%r10412, %r10411, %r10410, 19;
	shf.r.wrap.b32 	%r10413, %r10410, %r10411, 19;
	mov.b64 	%rd4034, {%r10413, %r10412};
	shf.l.wrap.b32 	%r10414, %r10410, %r10411, 3;
	shf.l.wrap.b32 	%r10415, %r10411, %r10410, 3;
	mov.b64 	%rd4035, {%r10415, %r10414};
	shr.u64 	%rd4036, %rd4020, 6;
	xor.b64  	%rd4037, %rd4035, %rd4036;
	xor.b64  	%rd4038, %rd4037, %rd4034;
	shf.r.wrap.b32 	%r10416, %r10013, %r10012, 1;
	shf.r.wrap.b32 	%r10417, %r10012, %r10013, 1;
	mov.b64 	%rd4039, {%r10417, %r10416};
	shf.r.wrap.b32 	%r10418, %r10013, %r10012, 8;
	shf.r.wrap.b32 	%r10419, %r10012, %r10013, 8;
	mov.b64 	%rd4040, {%r10419, %r10418};
	shr.u64 	%rd4041, %rd3451, 7;
	xor.b64  	%rd4042, %rd4040, %rd4041;
	xor.b64  	%rd4043, %rd4042, %rd4039;
	add.s64 	%rd4044, %rd4043, %rd3438;
	add.s64 	%rd4045, %rd4044, %rd3555;
	add.s64 	%rd4046, %rd4045, %rd4038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10420,%dummy}, %rd4033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10421}, %rd4033;
	}
	shf.r.wrap.b32 	%r10422, %r10421, %r10420, 19;
	shf.r.wrap.b32 	%r10423, %r10420, %r10421, 19;
	mov.b64 	%rd4047, {%r10423, %r10422};
	shf.l.wrap.b32 	%r10424, %r10420, %r10421, 3;
	shf.l.wrap.b32 	%r10425, %r10421, %r10420, 3;
	mov.b64 	%rd4048, {%r10425, %r10424};
	shr.u64 	%rd4049, %rd4033, 6;
	xor.b64  	%rd4050, %rd4048, %rd4049;
	xor.b64  	%rd4051, %rd4050, %rd4047;
	shf.r.wrap.b32 	%r10426, %r10025, %r10024, 1;
	shf.r.wrap.b32 	%r10427, %r10024, %r10025, 1;
	mov.b64 	%rd4052, {%r10427, %r10426};
	shf.r.wrap.b32 	%r10428, %r10025, %r10024, 8;
	shf.r.wrap.b32 	%r10429, %r10024, %r10025, 8;
	mov.b64 	%rd4053, {%r10429, %r10428};
	shr.u64 	%rd4054, %rd3464, 7;
	xor.b64  	%rd4055, %rd4053, %rd4054;
	xor.b64  	%rd4056, %rd4055, %rd4052;
	add.s64 	%rd4057, %rd4056, %rd3451;
	add.s64 	%rd4058, %rd4057, %rd3568;
	add.s64 	%rd4059, %rd4058, %rd4051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10430,%dummy}, %rd4046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10431}, %rd4046;
	}
	shf.r.wrap.b32 	%r10432, %r10431, %r10430, 19;
	shf.r.wrap.b32 	%r10433, %r10430, %r10431, 19;
	mov.b64 	%rd4060, {%r10433, %r10432};
	shf.l.wrap.b32 	%r10434, %r10430, %r10431, 3;
	shf.l.wrap.b32 	%r10435, %r10431, %r10430, 3;
	mov.b64 	%rd4061, {%r10435, %r10434};
	shr.u64 	%rd4062, %rd4046, 6;
	xor.b64  	%rd4063, %rd4061, %rd4062;
	xor.b64  	%rd4064, %rd4063, %rd4060;
	shf.r.wrap.b32 	%r10436, %r10037, %r10036, 1;
	shf.r.wrap.b32 	%r10437, %r10036, %r10037, 1;
	mov.b64 	%rd4065, {%r10437, %r10436};
	shf.r.wrap.b32 	%r10438, %r10037, %r10036, 8;
	shf.r.wrap.b32 	%r10439, %r10036, %r10037, 8;
	mov.b64 	%rd4066, {%r10439, %r10438};
	shr.u64 	%rd4067, %rd3477, 7;
	xor.b64  	%rd4068, %rd4066, %rd4067;
	xor.b64  	%rd4069, %rd4068, %rd4065;
	add.s64 	%rd4070, %rd4069, %rd3464;
	add.s64 	%rd4071, %rd4070, %rd3581;
	add.s64 	%rd4072, %rd4071, %rd4064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10440,%dummy}, %rd4059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10441}, %rd4059;
	}
	shf.r.wrap.b32 	%r10442, %r10441, %r10440, 19;
	shf.r.wrap.b32 	%r10443, %r10440, %r10441, 19;
	mov.b64 	%rd4073, {%r10443, %r10442};
	shf.l.wrap.b32 	%r10444, %r10440, %r10441, 3;
	shf.l.wrap.b32 	%r10445, %r10441, %r10440, 3;
	mov.b64 	%rd4074, {%r10445, %r10444};
	shr.u64 	%rd4075, %rd4059, 6;
	xor.b64  	%rd4076, %rd4074, %rd4075;
	xor.b64  	%rd4077, %rd4076, %rd4073;
	shf.r.wrap.b32 	%r10446, %r10049, %r10048, 1;
	shf.r.wrap.b32 	%r10447, %r10048, %r10049, 1;
	mov.b64 	%rd4078, {%r10447, %r10446};
	shf.r.wrap.b32 	%r10448, %r10049, %r10048, 8;
	shf.r.wrap.b32 	%r10449, %r10048, %r10049, 8;
	mov.b64 	%rd4079, {%r10449, %r10448};
	shr.u64 	%rd4080, %rd3490, 7;
	xor.b64  	%rd4081, %rd4079, %rd4080;
	xor.b64  	%rd4082, %rd4081, %rd4078;
	add.s64 	%rd4083, %rd4082, %rd3477;
	add.s64 	%rd4084, %rd4083, %rd3994;
	add.s64 	%rd4085, %rd4084, %rd4077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10450,%dummy}, %rd4072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10451}, %rd4072;
	}
	shf.r.wrap.b32 	%r10452, %r10451, %r10450, 19;
	shf.r.wrap.b32 	%r10453, %r10450, %r10451, 19;
	mov.b64 	%rd4086, {%r10453, %r10452};
	shf.l.wrap.b32 	%r10454, %r10450, %r10451, 3;
	shf.l.wrap.b32 	%r10455, %r10451, %r10450, 3;
	mov.b64 	%rd4087, {%r10455, %r10454};
	shr.u64 	%rd4088, %rd4072, 6;
	xor.b64  	%rd4089, %rd4087, %rd4088;
	xor.b64  	%rd4090, %rd4089, %rd4086;
	shf.r.wrap.b32 	%r10456, %r10061, %r10060, 1;
	shf.r.wrap.b32 	%r10457, %r10060, %r10061, 1;
	mov.b64 	%rd4091, {%r10457, %r10456};
	shf.r.wrap.b32 	%r10458, %r10061, %r10060, 8;
	shf.r.wrap.b32 	%r10459, %r10060, %r10061, 8;
	mov.b64 	%rd4092, {%r10459, %r10458};
	shr.u64 	%rd4093, %rd3503, 7;
	xor.b64  	%rd4094, %rd4092, %rd4093;
	xor.b64  	%rd4095, %rd4094, %rd4091;
	add.s64 	%rd4096, %rd4095, %rd3490;
	add.s64 	%rd4097, %rd4096, %rd4007;
	add.s64 	%rd4098, %rd4097, %rd4090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10460,%dummy}, %rd4085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10461}, %rd4085;
	}
	shf.r.wrap.b32 	%r10462, %r10461, %r10460, 19;
	shf.r.wrap.b32 	%r10463, %r10460, %r10461, 19;
	mov.b64 	%rd4099, {%r10463, %r10462};
	shf.l.wrap.b32 	%r10464, %r10460, %r10461, 3;
	shf.l.wrap.b32 	%r10465, %r10461, %r10460, 3;
	mov.b64 	%rd4100, {%r10465, %r10464};
	shr.u64 	%rd4101, %rd4085, 6;
	xor.b64  	%rd4102, %rd4100, %rd4101;
	xor.b64  	%rd4103, %rd4102, %rd4099;
	shf.r.wrap.b32 	%r10466, %r10073, %r10072, 1;
	shf.r.wrap.b32 	%r10467, %r10072, %r10073, 1;
	mov.b64 	%rd4104, {%r10467, %r10466};
	shf.r.wrap.b32 	%r10468, %r10073, %r10072, 8;
	shf.r.wrap.b32 	%r10469, %r10072, %r10073, 8;
	mov.b64 	%rd4105, {%r10469, %r10468};
	shr.u64 	%rd4106, %rd3516, 7;
	xor.b64  	%rd4107, %rd4105, %rd4106;
	xor.b64  	%rd4108, %rd4107, %rd4104;
	add.s64 	%rd4109, %rd4108, %rd3503;
	add.s64 	%rd4110, %rd4109, %rd4020;
	add.s64 	%rd4111, %rd4110, %rd4103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10470,%dummy}, %rd4098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd4098;
	}
	shf.r.wrap.b32 	%r10472, %r10471, %r10470, 19;
	shf.r.wrap.b32 	%r10473, %r10470, %r10471, 19;
	mov.b64 	%rd4112, {%r10473, %r10472};
	shf.l.wrap.b32 	%r10474, %r10470, %r10471, 3;
	shf.l.wrap.b32 	%r10475, %r10471, %r10470, 3;
	mov.b64 	%rd4113, {%r10475, %r10474};
	shr.u64 	%rd4114, %rd4098, 6;
	xor.b64  	%rd4115, %rd4113, %rd4114;
	xor.b64  	%rd4116, %rd4115, %rd4112;
	shf.r.wrap.b32 	%r10476, %r10085, %r10084, 1;
	shf.r.wrap.b32 	%r10477, %r10084, %r10085, 1;
	mov.b64 	%rd4117, {%r10477, %r10476};
	shf.r.wrap.b32 	%r10478, %r10085, %r10084, 8;
	shf.r.wrap.b32 	%r10479, %r10084, %r10085, 8;
	mov.b64 	%rd4118, {%r10479, %r10478};
	shr.u64 	%rd4119, %rd3529, 7;
	xor.b64  	%rd4120, %rd4118, %rd4119;
	xor.b64  	%rd4121, %rd4120, %rd4117;
	add.s64 	%rd4122, %rd4121, %rd3516;
	add.s64 	%rd4123, %rd4122, %rd4033;
	add.s64 	%rd4124, %rd4123, %rd4116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10480,%dummy}, %rd4111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10481}, %rd4111;
	}
	shf.r.wrap.b32 	%r10482, %r10481, %r10480, 19;
	shf.r.wrap.b32 	%r10483, %r10480, %r10481, 19;
	mov.b64 	%rd4125, {%r10483, %r10482};
	shf.l.wrap.b32 	%r10484, %r10480, %r10481, 3;
	shf.l.wrap.b32 	%r10485, %r10481, %r10480, 3;
	mov.b64 	%rd4126, {%r10485, %r10484};
	shr.u64 	%rd4127, %rd4111, 6;
	xor.b64  	%rd4128, %rd4126, %rd4127;
	xor.b64  	%rd4129, %rd4128, %rd4125;
	shf.r.wrap.b32 	%r10486, %r10095, %r10094, 1;
	shf.r.wrap.b32 	%r10487, %r10094, %r10095, 1;
	mov.b64 	%rd4130, {%r10487, %r10486};
	shf.r.wrap.b32 	%r10488, %r10095, %r10094, 8;
	shf.r.wrap.b32 	%r10489, %r10094, %r10095, 8;
	mov.b64 	%rd4131, {%r10489, %r10488};
	shr.u64 	%rd4132, %rd3542, 7;
	xor.b64  	%rd4133, %rd4131, %rd4132;
	xor.b64  	%rd4134, %rd4133, %rd4130;
	add.s64 	%rd4135, %rd4134, %rd3529;
	add.s64 	%rd4136, %rd4135, %rd4046;
	add.s64 	%rd4137, %rd4136, %rd4129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10490,%dummy}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10491}, %rd4124;
	}
	shf.r.wrap.b32 	%r10492, %r10491, %r10490, 19;
	shf.r.wrap.b32 	%r10493, %r10490, %r10491, 19;
	mov.b64 	%rd4138, {%r10493, %r10492};
	shf.l.wrap.b32 	%r10494, %r10490, %r10491, 3;
	shf.l.wrap.b32 	%r10495, %r10491, %r10490, 3;
	mov.b64 	%rd4139, {%r10495, %r10494};
	shr.u64 	%rd4140, %rd4124, 6;
	xor.b64  	%rd4141, %rd4139, %rd4140;
	xor.b64  	%rd4142, %rd4141, %rd4138;
	shf.r.wrap.b32 	%r10496, %r10105, %r10104, 1;
	shf.r.wrap.b32 	%r10497, %r10104, %r10105, 1;
	mov.b64 	%rd4143, {%r10497, %r10496};
	shf.r.wrap.b32 	%r10498, %r10105, %r10104, 8;
	shf.r.wrap.b32 	%r10499, %r10104, %r10105, 8;
	mov.b64 	%rd4144, {%r10499, %r10498};
	shr.u64 	%rd4145, %rd3555, 7;
	xor.b64  	%rd4146, %rd4144, %rd4145;
	xor.b64  	%rd4147, %rd4146, %rd4143;
	add.s64 	%rd4148, %rd4147, %rd3542;
	add.s64 	%rd4149, %rd4148, %rd4059;
	add.s64 	%rd4150, %rd4149, %rd4142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10500,%dummy}, %rd4137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10501}, %rd4137;
	}
	shf.r.wrap.b32 	%r10502, %r10501, %r10500, 19;
	shf.r.wrap.b32 	%r10503, %r10500, %r10501, 19;
	mov.b64 	%rd4151, {%r10503, %r10502};
	shf.l.wrap.b32 	%r10504, %r10500, %r10501, 3;
	shf.l.wrap.b32 	%r10505, %r10501, %r10500, 3;
	mov.b64 	%rd4152, {%r10505, %r10504};
	shr.u64 	%rd4153, %rd4137, 6;
	xor.b64  	%rd4154, %rd4152, %rd4153;
	xor.b64  	%rd4155, %rd4154, %rd4151;
	shf.r.wrap.b32 	%r10506, %r10371, %r10370, 1;
	shf.r.wrap.b32 	%r10507, %r10370, %r10371, 1;
	mov.b64 	%rd4156, {%r10507, %r10506};
	shf.r.wrap.b32 	%r10508, %r10371, %r10370, 8;
	shf.r.wrap.b32 	%r10509, %r10370, %r10371, 8;
	mov.b64 	%rd4157, {%r10509, %r10508};
	shr.u64 	%rd4158, %rd3568, 7;
	xor.b64  	%rd4159, %rd4157, %rd4158;
	xor.b64  	%rd4160, %rd4159, %rd4156;
	add.s64 	%rd4161, %rd4160, %rd3555;
	add.s64 	%rd4162, %rd4161, %rd4072;
	add.s64 	%rd4163, %rd4162, %rd4155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10510,%dummy}, %rd4150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10511}, %rd4150;
	}
	shf.r.wrap.b32 	%r10512, %r10511, %r10510, 19;
	shf.r.wrap.b32 	%r10513, %r10510, %r10511, 19;
	mov.b64 	%rd4164, {%r10513, %r10512};
	shf.l.wrap.b32 	%r10514, %r10510, %r10511, 3;
	shf.l.wrap.b32 	%r10515, %r10511, %r10510, 3;
	mov.b64 	%rd4165, {%r10515, %r10514};
	shr.u64 	%rd4166, %rd4150, 6;
	xor.b64  	%rd4167, %rd4165, %rd4166;
	xor.b64  	%rd4168, %rd4167, %rd4164;
	shf.r.wrap.b32 	%r10516, %r10381, %r10380, 1;
	shf.r.wrap.b32 	%r10517, %r10380, %r10381, 1;
	mov.b64 	%rd4169, {%r10517, %r10516};
	shf.r.wrap.b32 	%r10518, %r10381, %r10380, 8;
	shf.r.wrap.b32 	%r10519, %r10380, %r10381, 8;
	mov.b64 	%rd4170, {%r10519, %r10518};
	shr.u64 	%rd4171, %rd3581, 7;
	xor.b64  	%rd4172, %rd4170, %rd4171;
	xor.b64  	%rd4173, %rd4172, %rd4169;
	add.s64 	%rd4174, %rd4173, %rd3568;
	add.s64 	%rd4175, %rd4174, %rd4085;
	add.s64 	%rd4176, %rd4175, %rd4168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10520,%dummy}, %rd4163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10521}, %rd4163;
	}
	shf.r.wrap.b32 	%r10522, %r10521, %r10520, 19;
	shf.r.wrap.b32 	%r10523, %r10520, %r10521, 19;
	mov.b64 	%rd4177, {%r10523, %r10522};
	shf.l.wrap.b32 	%r10524, %r10520, %r10521, 3;
	shf.l.wrap.b32 	%r10525, %r10521, %r10520, 3;
	mov.b64 	%rd4178, {%r10525, %r10524};
	shr.u64 	%rd4179, %rd4163, 6;
	xor.b64  	%rd4180, %rd4178, %rd4179;
	xor.b64  	%rd4181, %rd4180, %rd4177;
	shf.r.wrap.b32 	%r10526, %r10391, %r10390, 1;
	shf.r.wrap.b32 	%r10527, %r10390, %r10391, 1;
	mov.b64 	%rd4182, {%r10527, %r10526};
	shf.r.wrap.b32 	%r10528, %r10391, %r10390, 8;
	shf.r.wrap.b32 	%r10529, %r10390, %r10391, 8;
	mov.b64 	%rd4183, {%r10529, %r10528};
	shr.u64 	%rd4184, %rd3994, 7;
	xor.b64  	%rd4185, %rd4183, %rd4184;
	xor.b64  	%rd4186, %rd4185, %rd4182;
	add.s64 	%rd4187, %rd4186, %rd3581;
	add.s64 	%rd4188, %rd4187, %rd4098;
	add.s64 	%rd4189, %rd4188, %rd4181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10530,%dummy}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10531}, %rd3970;
	}
	shf.r.wrap.b32 	%r10532, %r10531, %r10530, 14;
	shf.r.wrap.b32 	%r10533, %r10530, %r10531, 14;
	mov.b64 	%rd4190, {%r10533, %r10532};
	shf.r.wrap.b32 	%r10534, %r10531, %r10530, 18;
	shf.r.wrap.b32 	%r10535, %r10530, %r10531, 18;
	mov.b64 	%rd4191, {%r10535, %r10534};
	xor.b64  	%rd4192, %rd4190, %rd4191;
	shf.l.wrap.b32 	%r10536, %r10530, %r10531, 23;
	shf.l.wrap.b32 	%r10537, %r10531, %r10530, 23;
	mov.b64 	%rd4193, {%r10537, %r10536};
	xor.b64  	%rd4194, %rd4192, %rd4193;
	xor.b64  	%rd4195, %rd3945, %rd3920;
	and.b64  	%rd4196, %rd3970, %rd4195;
	xor.b64  	%rd4197, %rd4196, %rd3920;
	add.s64 	%rd4198, %rd4197, %rd3895;
	add.s64 	%rd4199, %rd4198, %rd4194;
	add.s64 	%rd4200, %rd4199, %rd3994;
	ld.const.u64 	%rd4201, [k_sha512+256];
	add.s64 	%rd4202, %rd4200, %rd4201;
	add.s64 	%rd4203, %rd4202, %rd3906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10538,%dummy}, %rd3981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10539}, %rd3981;
	}
	shf.r.wrap.b32 	%r10540, %r10539, %r10538, 28;
	shf.r.wrap.b32 	%r10541, %r10538, %r10539, 28;
	mov.b64 	%rd4204, {%r10541, %r10540};
	shf.l.wrap.b32 	%r10542, %r10538, %r10539, 30;
	shf.l.wrap.b32 	%r10543, %r10539, %r10538, 30;
	mov.b64 	%rd4205, {%r10543, %r10542};
	xor.b64  	%rd4206, %rd4204, %rd4205;
	shf.l.wrap.b32 	%r10544, %r10538, %r10539, 25;
	shf.l.wrap.b32 	%r10545, %r10539, %r10538, 25;
	mov.b64 	%rd4207, {%r10545, %r10544};
	xor.b64  	%rd4208, %rd4206, %rd4207;
	and.b64  	%rd4209, %rd3981, %rd3956;
	xor.b64  	%rd4210, %rd3981, %rd3956;
	and.b64  	%rd4211, %rd4210, %rd3931;
	or.b64  	%rd4212, %rd4211, %rd4209;
	add.s64 	%rd4213, %rd4208, %rd4212;
	add.s64 	%rd4214, %rd4213, %rd4202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10546,%dummy}, %rd4203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10547}, %rd4203;
	}
	shf.r.wrap.b32 	%r10548, %r10547, %r10546, 14;
	shf.r.wrap.b32 	%r10549, %r10546, %r10547, 14;
	mov.b64 	%rd4215, {%r10549, %r10548};
	shf.r.wrap.b32 	%r10550, %r10547, %r10546, 18;
	shf.r.wrap.b32 	%r10551, %r10546, %r10547, 18;
	mov.b64 	%rd4216, {%r10551, %r10550};
	xor.b64  	%rd4217, %rd4215, %rd4216;
	shf.l.wrap.b32 	%r10552, %r10546, %r10547, 23;
	shf.l.wrap.b32 	%r10553, %r10547, %r10546, 23;
	mov.b64 	%rd4218, {%r10553, %r10552};
	xor.b64  	%rd4219, %rd4217, %rd4218;
	xor.b64  	%rd4220, %rd3970, %rd3945;
	and.b64  	%rd4221, %rd4203, %rd4220;
	xor.b64  	%rd4222, %rd4221, %rd3945;
	add.s64 	%rd4223, %rd4007, %rd3920;
	ld.const.u64 	%rd4224, [k_sha512+264];
	add.s64 	%rd4225, %rd4223, %rd4224;
	add.s64 	%rd4226, %rd4225, %rd4222;
	add.s64 	%rd4227, %rd4226, %rd4219;
	add.s64 	%rd4228, %rd4227, %rd3931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10554,%dummy}, %rd4214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10555}, %rd4214;
	}
	shf.r.wrap.b32 	%r10556, %r10555, %r10554, 28;
	shf.r.wrap.b32 	%r10557, %r10554, %r10555, 28;
	mov.b64 	%rd4229, {%r10557, %r10556};
	shf.l.wrap.b32 	%r10558, %r10554, %r10555, 30;
	shf.l.wrap.b32 	%r10559, %r10555, %r10554, 30;
	mov.b64 	%rd4230, {%r10559, %r10558};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	shf.l.wrap.b32 	%r10560, %r10554, %r10555, 25;
	shf.l.wrap.b32 	%r10561, %r10555, %r10554, 25;
	mov.b64 	%rd4232, {%r10561, %r10560};
	xor.b64  	%rd4233, %rd4231, %rd4232;
	and.b64  	%rd4234, %rd4214, %rd3981;
	xor.b64  	%rd4235, %rd4214, %rd3981;
	and.b64  	%rd4236, %rd4235, %rd3956;
	or.b64  	%rd4237, %rd4236, %rd4234;
	add.s64 	%rd4238, %rd4233, %rd4237;
	add.s64 	%rd4239, %rd4238, %rd4227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10562,%dummy}, %rd4228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10563}, %rd4228;
	}
	shf.r.wrap.b32 	%r10564, %r10563, %r10562, 14;
	shf.r.wrap.b32 	%r10565, %r10562, %r10563, 14;
	mov.b64 	%rd4240, {%r10565, %r10564};
	shf.r.wrap.b32 	%r10566, %r10563, %r10562, 18;
	shf.r.wrap.b32 	%r10567, %r10562, %r10563, 18;
	mov.b64 	%rd4241, {%r10567, %r10566};
	xor.b64  	%rd4242, %rd4240, %rd4241;
	shf.l.wrap.b32 	%r10568, %r10562, %r10563, 23;
	shf.l.wrap.b32 	%r10569, %r10563, %r10562, 23;
	mov.b64 	%rd4243, {%r10569, %r10568};
	xor.b64  	%rd4244, %rd4242, %rd4243;
	xor.b64  	%rd4245, %rd4203, %rd3970;
	and.b64  	%rd4246, %rd4228, %rd4245;
	xor.b64  	%rd4247, %rd4246, %rd3970;
	add.s64 	%rd4248, %rd4020, %rd3945;
	ld.const.u64 	%rd4249, [k_sha512+272];
	add.s64 	%rd4250, %rd4248, %rd4249;
	add.s64 	%rd4251, %rd4250, %rd4247;
	add.s64 	%rd4252, %rd4251, %rd4244;
	add.s64 	%rd4253, %rd4252, %rd3956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10570,%dummy}, %rd4239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10571}, %rd4239;
	}
	shf.r.wrap.b32 	%r10572, %r10571, %r10570, 28;
	shf.r.wrap.b32 	%r10573, %r10570, %r10571, 28;
	mov.b64 	%rd4254, {%r10573, %r10572};
	shf.l.wrap.b32 	%r10574, %r10570, %r10571, 30;
	shf.l.wrap.b32 	%r10575, %r10571, %r10570, 30;
	mov.b64 	%rd4255, {%r10575, %r10574};
	xor.b64  	%rd4256, %rd4254, %rd4255;
	shf.l.wrap.b32 	%r10576, %r10570, %r10571, 25;
	shf.l.wrap.b32 	%r10577, %r10571, %r10570, 25;
	mov.b64 	%rd4257, {%r10577, %r10576};
	xor.b64  	%rd4258, %rd4256, %rd4257;
	and.b64  	%rd4259, %rd4239, %rd4214;
	xor.b64  	%rd4260, %rd4239, %rd4214;
	and.b64  	%rd4261, %rd4260, %rd3981;
	or.b64  	%rd4262, %rd4261, %rd4259;
	add.s64 	%rd4263, %rd4258, %rd4262;
	add.s64 	%rd4264, %rd4263, %rd4252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10578,%dummy}, %rd4253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10579}, %rd4253;
	}
	shf.r.wrap.b32 	%r10580, %r10579, %r10578, 14;
	shf.r.wrap.b32 	%r10581, %r10578, %r10579, 14;
	mov.b64 	%rd4265, {%r10581, %r10580};
	shf.r.wrap.b32 	%r10582, %r10579, %r10578, 18;
	shf.r.wrap.b32 	%r10583, %r10578, %r10579, 18;
	mov.b64 	%rd4266, {%r10583, %r10582};
	xor.b64  	%rd4267, %rd4265, %rd4266;
	shf.l.wrap.b32 	%r10584, %r10578, %r10579, 23;
	shf.l.wrap.b32 	%r10585, %r10579, %r10578, 23;
	mov.b64 	%rd4268, {%r10585, %r10584};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	xor.b64  	%rd4270, %rd4228, %rd4203;
	and.b64  	%rd4271, %rd4253, %rd4270;
	xor.b64  	%rd4272, %rd4271, %rd4203;
	add.s64 	%rd4273, %rd4033, %rd3970;
	ld.const.u64 	%rd4274, [k_sha512+280];
	add.s64 	%rd4275, %rd4273, %rd4274;
	add.s64 	%rd4276, %rd4275, %rd4272;
	add.s64 	%rd4277, %rd4276, %rd4269;
	add.s64 	%rd4278, %rd4277, %rd3981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10586,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10587}, %rd4264;
	}
	shf.r.wrap.b32 	%r10588, %r10587, %r10586, 28;
	shf.r.wrap.b32 	%r10589, %r10586, %r10587, 28;
	mov.b64 	%rd4279, {%r10589, %r10588};
	shf.l.wrap.b32 	%r10590, %r10586, %r10587, 30;
	shf.l.wrap.b32 	%r10591, %r10587, %r10586, 30;
	mov.b64 	%rd4280, {%r10591, %r10590};
	xor.b64  	%rd4281, %rd4279, %rd4280;
	shf.l.wrap.b32 	%r10592, %r10586, %r10587, 25;
	shf.l.wrap.b32 	%r10593, %r10587, %r10586, 25;
	mov.b64 	%rd4282, {%r10593, %r10592};
	xor.b64  	%rd4283, %rd4281, %rd4282;
	and.b64  	%rd4284, %rd4264, %rd4239;
	xor.b64  	%rd4285, %rd4264, %rd4239;
	and.b64  	%rd4286, %rd4285, %rd4214;
	or.b64  	%rd4287, %rd4286, %rd4284;
	add.s64 	%rd4288, %rd4283, %rd4287;
	add.s64 	%rd4289, %rd4288, %rd4277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10594,%dummy}, %rd4278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10595}, %rd4278;
	}
	shf.r.wrap.b32 	%r10596, %r10595, %r10594, 14;
	shf.r.wrap.b32 	%r10597, %r10594, %r10595, 14;
	mov.b64 	%rd4290, {%r10597, %r10596};
	shf.r.wrap.b32 	%r10598, %r10595, %r10594, 18;
	shf.r.wrap.b32 	%r10599, %r10594, %r10595, 18;
	mov.b64 	%rd4291, {%r10599, %r10598};
	xor.b64  	%rd4292, %rd4290, %rd4291;
	shf.l.wrap.b32 	%r10600, %r10594, %r10595, 23;
	shf.l.wrap.b32 	%r10601, %r10595, %r10594, 23;
	mov.b64 	%rd4293, {%r10601, %r10600};
	xor.b64  	%rd4294, %rd4292, %rd4293;
	xor.b64  	%rd4295, %rd4253, %rd4228;
	and.b64  	%rd4296, %rd4278, %rd4295;
	xor.b64  	%rd4297, %rd4296, %rd4228;
	add.s64 	%rd4298, %rd4203, %rd4046;
	ld.const.u64 	%rd4299, [k_sha512+288];
	add.s64 	%rd4300, %rd4298, %rd4299;
	add.s64 	%rd4301, %rd4300, %rd4297;
	add.s64 	%rd4302, %rd4301, %rd4294;
	add.s64 	%rd4303, %rd4302, %rd4214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10602,%dummy}, %rd4289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10603}, %rd4289;
	}
	shf.r.wrap.b32 	%r10604, %r10603, %r10602, 28;
	shf.r.wrap.b32 	%r10605, %r10602, %r10603, 28;
	mov.b64 	%rd4304, {%r10605, %r10604};
	shf.l.wrap.b32 	%r10606, %r10602, %r10603, 30;
	shf.l.wrap.b32 	%r10607, %r10603, %r10602, 30;
	mov.b64 	%rd4305, {%r10607, %r10606};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	shf.l.wrap.b32 	%r10608, %r10602, %r10603, 25;
	shf.l.wrap.b32 	%r10609, %r10603, %r10602, 25;
	mov.b64 	%rd4307, {%r10609, %r10608};
	xor.b64  	%rd4308, %rd4306, %rd4307;
	and.b64  	%rd4309, %rd4289, %rd4264;
	xor.b64  	%rd4310, %rd4289, %rd4264;
	and.b64  	%rd4311, %rd4310, %rd4239;
	or.b64  	%rd4312, %rd4311, %rd4309;
	add.s64 	%rd4313, %rd4308, %rd4312;
	add.s64 	%rd4314, %rd4313, %rd4302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10610,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10611}, %rd4303;
	}
	shf.r.wrap.b32 	%r10612, %r10611, %r10610, 14;
	shf.r.wrap.b32 	%r10613, %r10610, %r10611, 14;
	mov.b64 	%rd4315, {%r10613, %r10612};
	shf.r.wrap.b32 	%r10614, %r10611, %r10610, 18;
	shf.r.wrap.b32 	%r10615, %r10610, %r10611, 18;
	mov.b64 	%rd4316, {%r10615, %r10614};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	shf.l.wrap.b32 	%r10616, %r10610, %r10611, 23;
	shf.l.wrap.b32 	%r10617, %r10611, %r10610, 23;
	mov.b64 	%rd4318, {%r10617, %r10616};
	xor.b64  	%rd4319, %rd4317, %rd4318;
	xor.b64  	%rd4320, %rd4278, %rd4253;
	and.b64  	%rd4321, %rd4303, %rd4320;
	xor.b64  	%rd4322, %rd4321, %rd4253;
	ld.const.u64 	%rd4323, [k_sha512+296];
	add.s64 	%rd4324, %rd4323, %rd4059;
	add.s64 	%rd4325, %rd4324, %rd4228;
	add.s64 	%rd4326, %rd4325, %rd4322;
	add.s64 	%rd4327, %rd4326, %rd4319;
	add.s64 	%rd4328, %rd4327, %rd4239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10618,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10619}, %rd4314;
	}
	shf.r.wrap.b32 	%r10620, %r10619, %r10618, 28;
	shf.r.wrap.b32 	%r10621, %r10618, %r10619, 28;
	mov.b64 	%rd4329, {%r10621, %r10620};
	shf.l.wrap.b32 	%r10622, %r10618, %r10619, 30;
	shf.l.wrap.b32 	%r10623, %r10619, %r10618, 30;
	mov.b64 	%rd4330, {%r10623, %r10622};
	xor.b64  	%rd4331, %rd4329, %rd4330;
	shf.l.wrap.b32 	%r10624, %r10618, %r10619, 25;
	shf.l.wrap.b32 	%r10625, %r10619, %r10618, 25;
	mov.b64 	%rd4332, {%r10625, %r10624};
	xor.b64  	%rd4333, %rd4331, %rd4332;
	and.b64  	%rd4334, %rd4314, %rd4289;
	xor.b64  	%rd4335, %rd4314, %rd4289;
	and.b64  	%rd4336, %rd4335, %rd4264;
	or.b64  	%rd4337, %rd4336, %rd4334;
	add.s64 	%rd4338, %rd4333, %rd4337;
	add.s64 	%rd4339, %rd4338, %rd4327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10626,%dummy}, %rd4328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10627}, %rd4328;
	}
	shf.r.wrap.b32 	%r10628, %r10627, %r10626, 14;
	shf.r.wrap.b32 	%r10629, %r10626, %r10627, 14;
	mov.b64 	%rd4340, {%r10629, %r10628};
	shf.r.wrap.b32 	%r10630, %r10627, %r10626, 18;
	shf.r.wrap.b32 	%r10631, %r10626, %r10627, 18;
	mov.b64 	%rd4341, {%r10631, %r10630};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	shf.l.wrap.b32 	%r10632, %r10626, %r10627, 23;
	shf.l.wrap.b32 	%r10633, %r10627, %r10626, 23;
	mov.b64 	%rd4343, {%r10633, %r10632};
	xor.b64  	%rd4344, %rd4342, %rd4343;
	xor.b64  	%rd4345, %rd4303, %rd4278;
	and.b64  	%rd4346, %rd4328, %rd4345;
	xor.b64  	%rd4347, %rd4346, %rd4278;
	ld.const.u64 	%rd4348, [k_sha512+304];
	add.s64 	%rd4349, %rd4348, %rd4072;
	add.s64 	%rd4350, %rd4349, %rd4253;
	add.s64 	%rd4351, %rd4350, %rd4347;
	add.s64 	%rd4352, %rd4351, %rd4344;
	add.s64 	%rd4353, %rd4352, %rd4264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10634,%dummy}, %rd4339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10635}, %rd4339;
	}
	shf.r.wrap.b32 	%r10636, %r10635, %r10634, 28;
	shf.r.wrap.b32 	%r10637, %r10634, %r10635, 28;
	mov.b64 	%rd4354, {%r10637, %r10636};
	shf.l.wrap.b32 	%r10638, %r10634, %r10635, 30;
	shf.l.wrap.b32 	%r10639, %r10635, %r10634, 30;
	mov.b64 	%rd4355, {%r10639, %r10638};
	xor.b64  	%rd4356, %rd4354, %rd4355;
	shf.l.wrap.b32 	%r10640, %r10634, %r10635, 25;
	shf.l.wrap.b32 	%r10641, %r10635, %r10634, 25;
	mov.b64 	%rd4357, {%r10641, %r10640};
	xor.b64  	%rd4358, %rd4356, %rd4357;
	and.b64  	%rd4359, %rd4339, %rd4314;
	xor.b64  	%rd4360, %rd4339, %rd4314;
	and.b64  	%rd4361, %rd4360, %rd4289;
	or.b64  	%rd4362, %rd4361, %rd4359;
	add.s64 	%rd4363, %rd4358, %rd4362;
	add.s64 	%rd4364, %rd4363, %rd4352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10642,%dummy}, %rd4353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10643}, %rd4353;
	}
	shf.r.wrap.b32 	%r10644, %r10643, %r10642, 14;
	shf.r.wrap.b32 	%r10645, %r10642, %r10643, 14;
	mov.b64 	%rd4365, {%r10645, %r10644};
	shf.r.wrap.b32 	%r10646, %r10643, %r10642, 18;
	shf.r.wrap.b32 	%r10647, %r10642, %r10643, 18;
	mov.b64 	%rd4366, {%r10647, %r10646};
	xor.b64  	%rd4367, %rd4365, %rd4366;
	shf.l.wrap.b32 	%r10648, %r10642, %r10643, 23;
	shf.l.wrap.b32 	%r10649, %r10643, %r10642, 23;
	mov.b64 	%rd4368, {%r10649, %r10648};
	xor.b64  	%rd4369, %rd4367, %rd4368;
	xor.b64  	%rd4370, %rd4328, %rd4303;
	and.b64  	%rd4371, %rd4353, %rd4370;
	xor.b64  	%rd4372, %rd4371, %rd4303;
	ld.const.u64 	%rd4373, [k_sha512+312];
	add.s64 	%rd4374, %rd4373, %rd4085;
	add.s64 	%rd4375, %rd4374, %rd4278;
	add.s64 	%rd4376, %rd4375, %rd4372;
	add.s64 	%rd4377, %rd4376, %rd4369;
	add.s64 	%rd4378, %rd4377, %rd4289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10650,%dummy}, %rd4364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10651}, %rd4364;
	}
	shf.r.wrap.b32 	%r10652, %r10651, %r10650, 28;
	shf.r.wrap.b32 	%r10653, %r10650, %r10651, 28;
	mov.b64 	%rd4379, {%r10653, %r10652};
	shf.l.wrap.b32 	%r10654, %r10650, %r10651, 30;
	shf.l.wrap.b32 	%r10655, %r10651, %r10650, 30;
	mov.b64 	%rd4380, {%r10655, %r10654};
	xor.b64  	%rd4381, %rd4379, %rd4380;
	shf.l.wrap.b32 	%r10656, %r10650, %r10651, 25;
	shf.l.wrap.b32 	%r10657, %r10651, %r10650, 25;
	mov.b64 	%rd4382, {%r10657, %r10656};
	xor.b64  	%rd4383, %rd4381, %rd4382;
	and.b64  	%rd4384, %rd4364, %rd4339;
	xor.b64  	%rd4385, %rd4364, %rd4339;
	and.b64  	%rd4386, %rd4385, %rd4314;
	or.b64  	%rd4387, %rd4386, %rd4384;
	add.s64 	%rd4388, %rd4383, %rd4387;
	add.s64 	%rd4389, %rd4388, %rd4377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10658,%dummy}, %rd4378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10659}, %rd4378;
	}
	shf.r.wrap.b32 	%r10660, %r10659, %r10658, 14;
	shf.r.wrap.b32 	%r10661, %r10658, %r10659, 14;
	mov.b64 	%rd4390, {%r10661, %r10660};
	shf.r.wrap.b32 	%r10662, %r10659, %r10658, 18;
	shf.r.wrap.b32 	%r10663, %r10658, %r10659, 18;
	mov.b64 	%rd4391, {%r10663, %r10662};
	xor.b64  	%rd4392, %rd4390, %rd4391;
	shf.l.wrap.b32 	%r10664, %r10658, %r10659, 23;
	shf.l.wrap.b32 	%r10665, %r10659, %r10658, 23;
	mov.b64 	%rd4393, {%r10665, %r10664};
	xor.b64  	%rd4394, %rd4392, %rd4393;
	xor.b64  	%rd4395, %rd4353, %rd4328;
	and.b64  	%rd4396, %rd4378, %rd4395;
	xor.b64  	%rd4397, %rd4396, %rd4328;
	ld.const.u64 	%rd4398, [k_sha512+320];
	add.s64 	%rd4399, %rd4398, %rd4098;
	add.s64 	%rd4400, %rd4399, %rd4303;
	add.s64 	%rd4401, %rd4400, %rd4397;
	add.s64 	%rd4402, %rd4401, %rd4394;
	add.s64 	%rd4403, %rd4402, %rd4314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10666,%dummy}, %rd4389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10667}, %rd4389;
	}
	shf.r.wrap.b32 	%r10668, %r10667, %r10666, 28;
	shf.r.wrap.b32 	%r10669, %r10666, %r10667, 28;
	mov.b64 	%rd4404, {%r10669, %r10668};
	shf.l.wrap.b32 	%r10670, %r10666, %r10667, 30;
	shf.l.wrap.b32 	%r10671, %r10667, %r10666, 30;
	mov.b64 	%rd4405, {%r10671, %r10670};
	xor.b64  	%rd4406, %rd4404, %rd4405;
	shf.l.wrap.b32 	%r10672, %r10666, %r10667, 25;
	shf.l.wrap.b32 	%r10673, %r10667, %r10666, 25;
	mov.b64 	%rd4407, {%r10673, %r10672};
	xor.b64  	%rd4408, %rd4406, %rd4407;
	and.b64  	%rd4409, %rd4389, %rd4364;
	xor.b64  	%rd4410, %rd4389, %rd4364;
	and.b64  	%rd4411, %rd4410, %rd4339;
	or.b64  	%rd4412, %rd4411, %rd4409;
	add.s64 	%rd4413, %rd4408, %rd4412;
	add.s64 	%rd4414, %rd4413, %rd4402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10674,%dummy}, %rd4403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10675}, %rd4403;
	}
	shf.r.wrap.b32 	%r10676, %r10675, %r10674, 14;
	shf.r.wrap.b32 	%r10677, %r10674, %r10675, 14;
	mov.b64 	%rd4415, {%r10677, %r10676};
	shf.r.wrap.b32 	%r10678, %r10675, %r10674, 18;
	shf.r.wrap.b32 	%r10679, %r10674, %r10675, 18;
	mov.b64 	%rd4416, {%r10679, %r10678};
	xor.b64  	%rd4417, %rd4415, %rd4416;
	shf.l.wrap.b32 	%r10680, %r10674, %r10675, 23;
	shf.l.wrap.b32 	%r10681, %r10675, %r10674, 23;
	mov.b64 	%rd4418, {%r10681, %r10680};
	xor.b64  	%rd4419, %rd4417, %rd4418;
	xor.b64  	%rd4420, %rd4378, %rd4353;
	and.b64  	%rd4421, %rd4403, %rd4420;
	xor.b64  	%rd4422, %rd4421, %rd4353;
	ld.const.u64 	%rd4423, [k_sha512+328];
	add.s64 	%rd4424, %rd4423, %rd4111;
	add.s64 	%rd4425, %rd4424, %rd4328;
	add.s64 	%rd4426, %rd4425, %rd4422;
	add.s64 	%rd4427, %rd4426, %rd4419;
	add.s64 	%rd4428, %rd4427, %rd4339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10682,%dummy}, %rd4414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10683}, %rd4414;
	}
	shf.r.wrap.b32 	%r10684, %r10683, %r10682, 28;
	shf.r.wrap.b32 	%r10685, %r10682, %r10683, 28;
	mov.b64 	%rd4429, {%r10685, %r10684};
	shf.l.wrap.b32 	%r10686, %r10682, %r10683, 30;
	shf.l.wrap.b32 	%r10687, %r10683, %r10682, 30;
	mov.b64 	%rd4430, {%r10687, %r10686};
	xor.b64  	%rd4431, %rd4429, %rd4430;
	shf.l.wrap.b32 	%r10688, %r10682, %r10683, 25;
	shf.l.wrap.b32 	%r10689, %r10683, %r10682, 25;
	mov.b64 	%rd4432, {%r10689, %r10688};
	xor.b64  	%rd4433, %rd4431, %rd4432;
	and.b64  	%rd4434, %rd4414, %rd4389;
	xor.b64  	%rd4435, %rd4414, %rd4389;
	and.b64  	%rd4436, %rd4435, %rd4364;
	or.b64  	%rd4437, %rd4436, %rd4434;
	add.s64 	%rd4438, %rd4433, %rd4437;
	add.s64 	%rd4439, %rd4438, %rd4427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10690,%dummy}, %rd4428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10691}, %rd4428;
	}
	shf.r.wrap.b32 	%r10692, %r10691, %r10690, 14;
	shf.r.wrap.b32 	%r10693, %r10690, %r10691, 14;
	mov.b64 	%rd4440, {%r10693, %r10692};
	shf.r.wrap.b32 	%r10694, %r10691, %r10690, 18;
	shf.r.wrap.b32 	%r10695, %r10690, %r10691, 18;
	mov.b64 	%rd4441, {%r10695, %r10694};
	xor.b64  	%rd4442, %rd4440, %rd4441;
	shf.l.wrap.b32 	%r10696, %r10690, %r10691, 23;
	shf.l.wrap.b32 	%r10697, %r10691, %r10690, 23;
	mov.b64 	%rd4443, {%r10697, %r10696};
	xor.b64  	%rd4444, %rd4442, %rd4443;
	xor.b64  	%rd4445, %rd4403, %rd4378;
	and.b64  	%rd4446, %rd4428, %rd4445;
	xor.b64  	%rd4447, %rd4446, %rd4378;
	ld.const.u64 	%rd4448, [k_sha512+336];
	add.s64 	%rd4449, %rd4448, %rd4124;
	add.s64 	%rd4450, %rd4449, %rd4353;
	add.s64 	%rd4451, %rd4450, %rd4447;
	add.s64 	%rd4452, %rd4451, %rd4444;
	add.s64 	%rd4453, %rd4452, %rd4364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10698,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10699}, %rd4439;
	}
	shf.r.wrap.b32 	%r10700, %r10699, %r10698, 28;
	shf.r.wrap.b32 	%r10701, %r10698, %r10699, 28;
	mov.b64 	%rd4454, {%r10701, %r10700};
	shf.l.wrap.b32 	%r10702, %r10698, %r10699, 30;
	shf.l.wrap.b32 	%r10703, %r10699, %r10698, 30;
	mov.b64 	%rd4455, {%r10703, %r10702};
	xor.b64  	%rd4456, %rd4454, %rd4455;
	shf.l.wrap.b32 	%r10704, %r10698, %r10699, 25;
	shf.l.wrap.b32 	%r10705, %r10699, %r10698, 25;
	mov.b64 	%rd4457, {%r10705, %r10704};
	xor.b64  	%rd4458, %rd4456, %rd4457;
	and.b64  	%rd4459, %rd4439, %rd4414;
	xor.b64  	%rd4460, %rd4439, %rd4414;
	and.b64  	%rd4461, %rd4460, %rd4389;
	or.b64  	%rd4462, %rd4461, %rd4459;
	add.s64 	%rd4463, %rd4458, %rd4462;
	add.s64 	%rd4464, %rd4463, %rd4452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10706,%dummy}, %rd4453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10707}, %rd4453;
	}
	shf.r.wrap.b32 	%r10708, %r10707, %r10706, 14;
	shf.r.wrap.b32 	%r10709, %r10706, %r10707, 14;
	mov.b64 	%rd4465, {%r10709, %r10708};
	shf.r.wrap.b32 	%r10710, %r10707, %r10706, 18;
	shf.r.wrap.b32 	%r10711, %r10706, %r10707, 18;
	mov.b64 	%rd4466, {%r10711, %r10710};
	xor.b64  	%rd4467, %rd4465, %rd4466;
	shf.l.wrap.b32 	%r10712, %r10706, %r10707, 23;
	shf.l.wrap.b32 	%r10713, %r10707, %r10706, 23;
	mov.b64 	%rd4468, {%r10713, %r10712};
	xor.b64  	%rd4469, %rd4467, %rd4468;
	xor.b64  	%rd4470, %rd4428, %rd4403;
	and.b64  	%rd4471, %rd4453, %rd4470;
	xor.b64  	%rd4472, %rd4471, %rd4403;
	ld.const.u64 	%rd4473, [k_sha512+344];
	add.s64 	%rd4474, %rd4473, %rd4137;
	add.s64 	%rd4475, %rd4474, %rd4378;
	add.s64 	%rd4476, %rd4475, %rd4472;
	add.s64 	%rd4477, %rd4476, %rd4469;
	add.s64 	%rd4478, %rd4477, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10714,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10715}, %rd4464;
	}
	shf.r.wrap.b32 	%r10716, %r10715, %r10714, 28;
	shf.r.wrap.b32 	%r10717, %r10714, %r10715, 28;
	mov.b64 	%rd4479, {%r10717, %r10716};
	shf.l.wrap.b32 	%r10718, %r10714, %r10715, 30;
	shf.l.wrap.b32 	%r10719, %r10715, %r10714, 30;
	mov.b64 	%rd4480, {%r10719, %r10718};
	xor.b64  	%rd4481, %rd4479, %rd4480;
	shf.l.wrap.b32 	%r10720, %r10714, %r10715, 25;
	shf.l.wrap.b32 	%r10721, %r10715, %r10714, 25;
	mov.b64 	%rd4482, {%r10721, %r10720};
	xor.b64  	%rd4483, %rd4481, %rd4482;
	and.b64  	%rd4484, %rd4464, %rd4439;
	xor.b64  	%rd4485, %rd4464, %rd4439;
	and.b64  	%rd4486, %rd4485, %rd4414;
	or.b64  	%rd4487, %rd4486, %rd4484;
	add.s64 	%rd4488, %rd4483, %rd4487;
	add.s64 	%rd4489, %rd4488, %rd4477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10722,%dummy}, %rd4478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10723}, %rd4478;
	}
	shf.r.wrap.b32 	%r10724, %r10723, %r10722, 14;
	shf.r.wrap.b32 	%r10725, %r10722, %r10723, 14;
	mov.b64 	%rd4490, {%r10725, %r10724};
	shf.r.wrap.b32 	%r10726, %r10723, %r10722, 18;
	shf.r.wrap.b32 	%r10727, %r10722, %r10723, 18;
	mov.b64 	%rd4491, {%r10727, %r10726};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	shf.l.wrap.b32 	%r10728, %r10722, %r10723, 23;
	shf.l.wrap.b32 	%r10729, %r10723, %r10722, 23;
	mov.b64 	%rd4493, {%r10729, %r10728};
	xor.b64  	%rd4494, %rd4492, %rd4493;
	xor.b64  	%rd4495, %rd4453, %rd4428;
	and.b64  	%rd4496, %rd4478, %rd4495;
	xor.b64  	%rd4497, %rd4496, %rd4428;
	ld.const.u64 	%rd4498, [k_sha512+352];
	add.s64 	%rd4499, %rd4498, %rd4150;
	add.s64 	%rd4500, %rd4499, %rd4403;
	add.s64 	%rd4501, %rd4500, %rd4497;
	add.s64 	%rd4502, %rd4501, %rd4494;
	add.s64 	%rd4503, %rd4502, %rd4414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10730,%dummy}, %rd4489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10731}, %rd4489;
	}
	shf.r.wrap.b32 	%r10732, %r10731, %r10730, 28;
	shf.r.wrap.b32 	%r10733, %r10730, %r10731, 28;
	mov.b64 	%rd4504, {%r10733, %r10732};
	shf.l.wrap.b32 	%r10734, %r10730, %r10731, 30;
	shf.l.wrap.b32 	%r10735, %r10731, %r10730, 30;
	mov.b64 	%rd4505, {%r10735, %r10734};
	xor.b64  	%rd4506, %rd4504, %rd4505;
	shf.l.wrap.b32 	%r10736, %r10730, %r10731, 25;
	shf.l.wrap.b32 	%r10737, %r10731, %r10730, 25;
	mov.b64 	%rd4507, {%r10737, %r10736};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	and.b64  	%rd4509, %rd4489, %rd4464;
	xor.b64  	%rd4510, %rd4489, %rd4464;
	and.b64  	%rd4511, %rd4510, %rd4439;
	or.b64  	%rd4512, %rd4511, %rd4509;
	add.s64 	%rd4513, %rd4508, %rd4512;
	add.s64 	%rd4514, %rd4513, %rd4502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10738,%dummy}, %rd4503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10739}, %rd4503;
	}
	shf.r.wrap.b32 	%r10740, %r10739, %r10738, 14;
	shf.r.wrap.b32 	%r10741, %r10738, %r10739, 14;
	mov.b64 	%rd4515, {%r10741, %r10740};
	shf.r.wrap.b32 	%r10742, %r10739, %r10738, 18;
	shf.r.wrap.b32 	%r10743, %r10738, %r10739, 18;
	mov.b64 	%rd4516, {%r10743, %r10742};
	xor.b64  	%rd4517, %rd4515, %rd4516;
	shf.l.wrap.b32 	%r10744, %r10738, %r10739, 23;
	shf.l.wrap.b32 	%r10745, %r10739, %r10738, 23;
	mov.b64 	%rd4518, {%r10745, %r10744};
	xor.b64  	%rd4519, %rd4517, %rd4518;
	xor.b64  	%rd4520, %rd4478, %rd4453;
	and.b64  	%rd4521, %rd4503, %rd4520;
	xor.b64  	%rd4522, %rd4521, %rd4453;
	ld.const.u64 	%rd4523, [k_sha512+360];
	add.s64 	%rd4524, %rd4523, %rd4163;
	add.s64 	%rd4525, %rd4524, %rd4428;
	add.s64 	%rd4526, %rd4525, %rd4522;
	add.s64 	%rd4527, %rd4526, %rd4519;
	add.s64 	%rd4528, %rd4527, %rd4439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10746,%dummy}, %rd4514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10747}, %rd4514;
	}
	shf.r.wrap.b32 	%r10748, %r10747, %r10746, 28;
	shf.r.wrap.b32 	%r10749, %r10746, %r10747, 28;
	mov.b64 	%rd4529, {%r10749, %r10748};
	shf.l.wrap.b32 	%r10750, %r10746, %r10747, 30;
	shf.l.wrap.b32 	%r10751, %r10747, %r10746, 30;
	mov.b64 	%rd4530, {%r10751, %r10750};
	xor.b64  	%rd4531, %rd4529, %rd4530;
	shf.l.wrap.b32 	%r10752, %r10746, %r10747, 25;
	shf.l.wrap.b32 	%r10753, %r10747, %r10746, 25;
	mov.b64 	%rd4532, {%r10753, %r10752};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	and.b64  	%rd4534, %rd4514, %rd4489;
	xor.b64  	%rd4535, %rd4514, %rd4489;
	and.b64  	%rd4536, %rd4535, %rd4464;
	or.b64  	%rd4537, %rd4536, %rd4534;
	add.s64 	%rd4538, %rd4533, %rd4537;
	add.s64 	%rd4539, %rd4538, %rd4527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10754,%dummy}, %rd4528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10755}, %rd4528;
	}
	shf.r.wrap.b32 	%r10756, %r10755, %r10754, 14;
	shf.r.wrap.b32 	%r10757, %r10754, %r10755, 14;
	mov.b64 	%rd4540, {%r10757, %r10756};
	shf.r.wrap.b32 	%r10758, %r10755, %r10754, 18;
	shf.r.wrap.b32 	%r10759, %r10754, %r10755, 18;
	mov.b64 	%rd4541, {%r10759, %r10758};
	xor.b64  	%rd4542, %rd4540, %rd4541;
	shf.l.wrap.b32 	%r10760, %r10754, %r10755, 23;
	shf.l.wrap.b32 	%r10761, %r10755, %r10754, 23;
	mov.b64 	%rd4543, {%r10761, %r10760};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	xor.b64  	%rd4545, %rd4503, %rd4478;
	and.b64  	%rd4546, %rd4528, %rd4545;
	xor.b64  	%rd4547, %rd4546, %rd4478;
	ld.const.u64 	%rd4548, [k_sha512+368];
	add.s64 	%rd4549, %rd4548, %rd4176;
	add.s64 	%rd4550, %rd4549, %rd4453;
	add.s64 	%rd4551, %rd4550, %rd4547;
	add.s64 	%rd4552, %rd4551, %rd4544;
	add.s64 	%rd4553, %rd4552, %rd4464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10762,%dummy}, %rd4539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd4539;
	}
	shf.r.wrap.b32 	%r10764, %r10763, %r10762, 28;
	shf.r.wrap.b32 	%r10765, %r10762, %r10763, 28;
	mov.b64 	%rd4554, {%r10765, %r10764};
	shf.l.wrap.b32 	%r10766, %r10762, %r10763, 30;
	shf.l.wrap.b32 	%r10767, %r10763, %r10762, 30;
	mov.b64 	%rd4555, {%r10767, %r10766};
	xor.b64  	%rd4556, %rd4554, %rd4555;
	shf.l.wrap.b32 	%r10768, %r10762, %r10763, 25;
	shf.l.wrap.b32 	%r10769, %r10763, %r10762, 25;
	mov.b64 	%rd4557, {%r10769, %r10768};
	xor.b64  	%rd4558, %rd4556, %rd4557;
	and.b64  	%rd4559, %rd4539, %rd4514;
	xor.b64  	%rd4560, %rd4539, %rd4514;
	and.b64  	%rd4561, %rd4560, %rd4489;
	or.b64  	%rd4562, %rd4561, %rd4559;
	add.s64 	%rd4563, %rd4558, %rd4562;
	add.s64 	%rd4564, %rd4563, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10770,%dummy}, %rd4553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10771}, %rd4553;
	}
	shf.r.wrap.b32 	%r10772, %r10771, %r10770, 14;
	shf.r.wrap.b32 	%r10773, %r10770, %r10771, 14;
	mov.b64 	%rd4565, {%r10773, %r10772};
	shf.r.wrap.b32 	%r10774, %r10771, %r10770, 18;
	shf.r.wrap.b32 	%r10775, %r10770, %r10771, 18;
	mov.b64 	%rd4566, {%r10775, %r10774};
	xor.b64  	%rd4567, %rd4565, %rd4566;
	shf.l.wrap.b32 	%r10776, %r10770, %r10771, 23;
	shf.l.wrap.b32 	%r10777, %r10771, %r10770, 23;
	mov.b64 	%rd4568, {%r10777, %r10776};
	xor.b64  	%rd4569, %rd4567, %rd4568;
	xor.b64  	%rd4570, %rd4528, %rd4503;
	and.b64  	%rd4571, %rd4553, %rd4570;
	xor.b64  	%rd4572, %rd4571, %rd4503;
	ld.const.u64 	%rd4573, [k_sha512+376];
	add.s64 	%rd4574, %rd4573, %rd4189;
	add.s64 	%rd4575, %rd4574, %rd4478;
	add.s64 	%rd4576, %rd4575, %rd4572;
	add.s64 	%rd4577, %rd4576, %rd4569;
	add.s64 	%rd4578, %rd4577, %rd4489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10778,%dummy}, %rd4564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10779}, %rd4564;
	}
	shf.r.wrap.b32 	%r10780, %r10779, %r10778, 28;
	shf.r.wrap.b32 	%r10781, %r10778, %r10779, 28;
	mov.b64 	%rd4579, {%r10781, %r10780};
	shf.l.wrap.b32 	%r10782, %r10778, %r10779, 30;
	shf.l.wrap.b32 	%r10783, %r10779, %r10778, 30;
	mov.b64 	%rd4580, {%r10783, %r10782};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	shf.l.wrap.b32 	%r10784, %r10778, %r10779, 25;
	shf.l.wrap.b32 	%r10785, %r10779, %r10778, 25;
	mov.b64 	%rd4582, {%r10785, %r10784};
	xor.b64  	%rd4583, %rd4581, %rd4582;
	and.b64  	%rd4584, %rd4564, %rd4539;
	xor.b64  	%rd4585, %rd4564, %rd4539;
	and.b64  	%rd4586, %rd4585, %rd4514;
	or.b64  	%rd4587, %rd4586, %rd4584;
	add.s64 	%rd4588, %rd4583, %rd4587;
	add.s64 	%rd4589, %rd4588, %rd4577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10786,%dummy}, %rd4176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10787}, %rd4176;
	}
	shf.r.wrap.b32 	%r10788, %r10787, %r10786, 19;
	shf.r.wrap.b32 	%r10789, %r10786, %r10787, 19;
	mov.b64 	%rd4590, {%r10789, %r10788};
	shf.l.wrap.b32 	%r10790, %r10786, %r10787, 3;
	shf.l.wrap.b32 	%r10791, %r10787, %r10786, 3;
	mov.b64 	%rd4591, {%r10791, %r10790};
	shr.u64 	%rd4592, %rd4176, 6;
	xor.b64  	%rd4593, %rd4591, %rd4592;
	xor.b64  	%rd4594, %rd4593, %rd4590;
	shf.r.wrap.b32 	%r10792, %r10401, %r10400, 1;
	shf.r.wrap.b32 	%r10793, %r10400, %r10401, 1;
	mov.b64 	%rd4595, {%r10793, %r10792};
	shf.r.wrap.b32 	%r10794, %r10401, %r10400, 8;
	shf.r.wrap.b32 	%r10795, %r10400, %r10401, 8;
	mov.b64 	%rd4596, {%r10795, %r10794};
	shr.u64 	%rd4597, %rd4007, 7;
	xor.b64  	%rd4598, %rd4596, %rd4597;
	xor.b64  	%rd4599, %rd4598, %rd4595;
	add.s64 	%rd4600, %rd4599, %rd3994;
	add.s64 	%rd4601, %rd4600, %rd4111;
	add.s64 	%rd4602, %rd4601, %rd4594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10796,%dummy}, %rd4189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10797}, %rd4189;
	}
	shf.r.wrap.b32 	%r10798, %r10797, %r10796, 19;
	shf.r.wrap.b32 	%r10799, %r10796, %r10797, 19;
	mov.b64 	%rd4603, {%r10799, %r10798};
	shf.l.wrap.b32 	%r10800, %r10796, %r10797, 3;
	shf.l.wrap.b32 	%r10801, %r10797, %r10796, 3;
	mov.b64 	%rd4604, {%r10801, %r10800};
	shr.u64 	%rd4605, %rd4189, 6;
	xor.b64  	%rd4606, %rd4604, %rd4605;
	xor.b64  	%rd4607, %rd4606, %rd4603;
	shf.r.wrap.b32 	%r10802, %r10411, %r10410, 1;
	shf.r.wrap.b32 	%r10803, %r10410, %r10411, 1;
	mov.b64 	%rd4608, {%r10803, %r10802};
	shf.r.wrap.b32 	%r10804, %r10411, %r10410, 8;
	shf.r.wrap.b32 	%r10805, %r10410, %r10411, 8;
	mov.b64 	%rd4609, {%r10805, %r10804};
	shr.u64 	%rd4610, %rd4020, 7;
	xor.b64  	%rd4611, %rd4609, %rd4610;
	xor.b64  	%rd4612, %rd4611, %rd4608;
	add.s64 	%rd4613, %rd4612, %rd4007;
	add.s64 	%rd4614, %rd4613, %rd4124;
	add.s64 	%rd4615, %rd4614, %rd4607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10806,%dummy}, %rd4602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10807}, %rd4602;
	}
	shf.r.wrap.b32 	%r10808, %r10807, %r10806, 19;
	shf.r.wrap.b32 	%r10809, %r10806, %r10807, 19;
	mov.b64 	%rd4616, {%r10809, %r10808};
	shf.l.wrap.b32 	%r10810, %r10806, %r10807, 3;
	shf.l.wrap.b32 	%r10811, %r10807, %r10806, 3;
	mov.b64 	%rd4617, {%r10811, %r10810};
	shr.u64 	%rd4618, %rd4602, 6;
	xor.b64  	%rd4619, %rd4617, %rd4618;
	xor.b64  	%rd4620, %rd4619, %rd4616;
	shf.r.wrap.b32 	%r10812, %r10421, %r10420, 1;
	shf.r.wrap.b32 	%r10813, %r10420, %r10421, 1;
	mov.b64 	%rd4621, {%r10813, %r10812};
	shf.r.wrap.b32 	%r10814, %r10421, %r10420, 8;
	shf.r.wrap.b32 	%r10815, %r10420, %r10421, 8;
	mov.b64 	%rd4622, {%r10815, %r10814};
	shr.u64 	%rd4623, %rd4033, 7;
	xor.b64  	%rd4624, %rd4622, %rd4623;
	xor.b64  	%rd4625, %rd4624, %rd4621;
	add.s64 	%rd4626, %rd4625, %rd4020;
	add.s64 	%rd4627, %rd4626, %rd4137;
	add.s64 	%rd4628, %rd4627, %rd4620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10816,%dummy}, %rd4615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10817}, %rd4615;
	}
	shf.r.wrap.b32 	%r10818, %r10817, %r10816, 19;
	shf.r.wrap.b32 	%r10819, %r10816, %r10817, 19;
	mov.b64 	%rd4629, {%r10819, %r10818};
	shf.l.wrap.b32 	%r10820, %r10816, %r10817, 3;
	shf.l.wrap.b32 	%r10821, %r10817, %r10816, 3;
	mov.b64 	%rd4630, {%r10821, %r10820};
	shr.u64 	%rd4631, %rd4615, 6;
	xor.b64  	%rd4632, %rd4630, %rd4631;
	xor.b64  	%rd4633, %rd4632, %rd4629;
	shf.r.wrap.b32 	%r10822, %r10431, %r10430, 1;
	shf.r.wrap.b32 	%r10823, %r10430, %r10431, 1;
	mov.b64 	%rd4634, {%r10823, %r10822};
	shf.r.wrap.b32 	%r10824, %r10431, %r10430, 8;
	shf.r.wrap.b32 	%r10825, %r10430, %r10431, 8;
	mov.b64 	%rd4635, {%r10825, %r10824};
	shr.u64 	%rd4636, %rd4046, 7;
	xor.b64  	%rd4637, %rd4635, %rd4636;
	xor.b64  	%rd4638, %rd4637, %rd4634;
	add.s64 	%rd4639, %rd4638, %rd4033;
	add.s64 	%rd4640, %rd4639, %rd4150;
	add.s64 	%rd4641, %rd4640, %rd4633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10826,%dummy}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10827}, %rd4628;
	}
	shf.r.wrap.b32 	%r10828, %r10827, %r10826, 19;
	shf.r.wrap.b32 	%r10829, %r10826, %r10827, 19;
	mov.b64 	%rd4642, {%r10829, %r10828};
	shf.l.wrap.b32 	%r10830, %r10826, %r10827, 3;
	shf.l.wrap.b32 	%r10831, %r10827, %r10826, 3;
	mov.b64 	%rd4643, {%r10831, %r10830};
	shr.u64 	%rd4644, %rd4628, 6;
	xor.b64  	%rd4645, %rd4643, %rd4644;
	xor.b64  	%rd4646, %rd4645, %rd4642;
	shf.r.wrap.b32 	%r10832, %r10441, %r10440, 1;
	shf.r.wrap.b32 	%r10833, %r10440, %r10441, 1;
	mov.b64 	%rd4647, {%r10833, %r10832};
	shf.r.wrap.b32 	%r10834, %r10441, %r10440, 8;
	shf.r.wrap.b32 	%r10835, %r10440, %r10441, 8;
	mov.b64 	%rd4648, {%r10835, %r10834};
	shr.u64 	%rd4649, %rd4059, 7;
	xor.b64  	%rd4650, %rd4648, %rd4649;
	xor.b64  	%rd4651, %rd4650, %rd4647;
	add.s64 	%rd4652, %rd4651, %rd4046;
	add.s64 	%rd4653, %rd4652, %rd4163;
	add.s64 	%rd4654, %rd4653, %rd4646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10836,%dummy}, %rd4641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10837}, %rd4641;
	}
	shf.r.wrap.b32 	%r10838, %r10837, %r10836, 19;
	shf.r.wrap.b32 	%r10839, %r10836, %r10837, 19;
	mov.b64 	%rd4655, {%r10839, %r10838};
	shf.l.wrap.b32 	%r10840, %r10836, %r10837, 3;
	shf.l.wrap.b32 	%r10841, %r10837, %r10836, 3;
	mov.b64 	%rd4656, {%r10841, %r10840};
	shr.u64 	%rd4657, %rd4641, 6;
	xor.b64  	%rd4658, %rd4656, %rd4657;
	xor.b64  	%rd4659, %rd4658, %rd4655;
	shf.r.wrap.b32 	%r10842, %r10451, %r10450, 1;
	shf.r.wrap.b32 	%r10843, %r10450, %r10451, 1;
	mov.b64 	%rd4660, {%r10843, %r10842};
	shf.r.wrap.b32 	%r10844, %r10451, %r10450, 8;
	shf.r.wrap.b32 	%r10845, %r10450, %r10451, 8;
	mov.b64 	%rd4661, {%r10845, %r10844};
	shr.u64 	%rd4662, %rd4072, 7;
	xor.b64  	%rd4663, %rd4661, %rd4662;
	xor.b64  	%rd4664, %rd4663, %rd4660;
	add.s64 	%rd4665, %rd4664, %rd4059;
	add.s64 	%rd4666, %rd4665, %rd4176;
	add.s64 	%rd4667, %rd4666, %rd4659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10846,%dummy}, %rd4654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10847}, %rd4654;
	}
	shf.r.wrap.b32 	%r10848, %r10847, %r10846, 19;
	shf.r.wrap.b32 	%r10849, %r10846, %r10847, 19;
	mov.b64 	%rd4668, {%r10849, %r10848};
	shf.l.wrap.b32 	%r10850, %r10846, %r10847, 3;
	shf.l.wrap.b32 	%r10851, %r10847, %r10846, 3;
	mov.b64 	%rd4669, {%r10851, %r10850};
	shr.u64 	%rd4670, %rd4654, 6;
	xor.b64  	%rd4671, %rd4669, %rd4670;
	xor.b64  	%rd4672, %rd4671, %rd4668;
	shf.r.wrap.b32 	%r10852, %r10461, %r10460, 1;
	shf.r.wrap.b32 	%r10853, %r10460, %r10461, 1;
	mov.b64 	%rd4673, {%r10853, %r10852};
	shf.r.wrap.b32 	%r10854, %r10461, %r10460, 8;
	shf.r.wrap.b32 	%r10855, %r10460, %r10461, 8;
	mov.b64 	%rd4674, {%r10855, %r10854};
	shr.u64 	%rd4675, %rd4085, 7;
	xor.b64  	%rd4676, %rd4674, %rd4675;
	xor.b64  	%rd4677, %rd4676, %rd4673;
	add.s64 	%rd4678, %rd4677, %rd4072;
	add.s64 	%rd4679, %rd4678, %rd4189;
	add.s64 	%rd4680, %rd4679, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10856,%dummy}, %rd4667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10857}, %rd4667;
	}
	shf.r.wrap.b32 	%r10858, %r10857, %r10856, 19;
	shf.r.wrap.b32 	%r10859, %r10856, %r10857, 19;
	mov.b64 	%rd4681, {%r10859, %r10858};
	shf.l.wrap.b32 	%r10860, %r10856, %r10857, 3;
	shf.l.wrap.b32 	%r10861, %r10857, %r10856, 3;
	mov.b64 	%rd4682, {%r10861, %r10860};
	shr.u64 	%rd4683, %rd4667, 6;
	xor.b64  	%rd4684, %rd4682, %rd4683;
	xor.b64  	%rd4685, %rd4684, %rd4681;
	shf.r.wrap.b32 	%r10862, %r10471, %r10470, 1;
	shf.r.wrap.b32 	%r10863, %r10470, %r10471, 1;
	mov.b64 	%rd4686, {%r10863, %r10862};
	shf.r.wrap.b32 	%r10864, %r10471, %r10470, 8;
	shf.r.wrap.b32 	%r10865, %r10470, %r10471, 8;
	mov.b64 	%rd4687, {%r10865, %r10864};
	shr.u64 	%rd4688, %rd4098, 7;
	xor.b64  	%rd4689, %rd4687, %rd4688;
	xor.b64  	%rd4690, %rd4689, %rd4686;
	add.s64 	%rd4691, %rd4690, %rd4085;
	add.s64 	%rd4692, %rd4691, %rd4602;
	add.s64 	%rd4693, %rd4692, %rd4685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10866,%dummy}, %rd4680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10867}, %rd4680;
	}
	shf.r.wrap.b32 	%r10868, %r10867, %r10866, 19;
	shf.r.wrap.b32 	%r10869, %r10866, %r10867, 19;
	mov.b64 	%rd4694, {%r10869, %r10868};
	shf.l.wrap.b32 	%r10870, %r10866, %r10867, 3;
	shf.l.wrap.b32 	%r10871, %r10867, %r10866, 3;
	mov.b64 	%rd4695, {%r10871, %r10870};
	shr.u64 	%rd4696, %rd4680, 6;
	xor.b64  	%rd4697, %rd4695, %rd4696;
	xor.b64  	%rd4698, %rd4697, %rd4694;
	shf.r.wrap.b32 	%r10872, %r10481, %r10480, 1;
	shf.r.wrap.b32 	%r10873, %r10480, %r10481, 1;
	mov.b64 	%rd4699, {%r10873, %r10872};
	shf.r.wrap.b32 	%r10874, %r10481, %r10480, 8;
	shf.r.wrap.b32 	%r10875, %r10480, %r10481, 8;
	mov.b64 	%rd4700, {%r10875, %r10874};
	shr.u64 	%rd4701, %rd4111, 7;
	xor.b64  	%rd4702, %rd4700, %rd4701;
	xor.b64  	%rd4703, %rd4702, %rd4699;
	add.s64 	%rd4704, %rd4703, %rd4098;
	add.s64 	%rd4705, %rd4704, %rd4615;
	add.s64 	%rd4706, %rd4705, %rd4698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10876,%dummy}, %rd4693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10877}, %rd4693;
	}
	shf.r.wrap.b32 	%r10878, %r10877, %r10876, 19;
	shf.r.wrap.b32 	%r10879, %r10876, %r10877, 19;
	mov.b64 	%rd4707, {%r10879, %r10878};
	shf.l.wrap.b32 	%r10880, %r10876, %r10877, 3;
	shf.l.wrap.b32 	%r10881, %r10877, %r10876, 3;
	mov.b64 	%rd4708, {%r10881, %r10880};
	shr.u64 	%rd4709, %rd4693, 6;
	xor.b64  	%rd4710, %rd4708, %rd4709;
	xor.b64  	%rd4711, %rd4710, %rd4707;
	shf.r.wrap.b32 	%r10882, %r10491, %r10490, 1;
	shf.r.wrap.b32 	%r10883, %r10490, %r10491, 1;
	mov.b64 	%rd4712, {%r10883, %r10882};
	shf.r.wrap.b32 	%r10884, %r10491, %r10490, 8;
	shf.r.wrap.b32 	%r10885, %r10490, %r10491, 8;
	mov.b64 	%rd4713, {%r10885, %r10884};
	shr.u64 	%rd4714, %rd4124, 7;
	xor.b64  	%rd4715, %rd4713, %rd4714;
	xor.b64  	%rd4716, %rd4715, %rd4712;
	add.s64 	%rd4717, %rd4716, %rd4111;
	add.s64 	%rd4718, %rd4717, %rd4628;
	add.s64 	%rd4719, %rd4718, %rd4711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10886,%dummy}, %rd4706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10887}, %rd4706;
	}
	shf.r.wrap.b32 	%r10888, %r10887, %r10886, 19;
	shf.r.wrap.b32 	%r10889, %r10886, %r10887, 19;
	mov.b64 	%rd4720, {%r10889, %r10888};
	shf.l.wrap.b32 	%r10890, %r10886, %r10887, 3;
	shf.l.wrap.b32 	%r10891, %r10887, %r10886, 3;
	mov.b64 	%rd4721, {%r10891, %r10890};
	shr.u64 	%rd4722, %rd4706, 6;
	xor.b64  	%rd4723, %rd4721, %rd4722;
	xor.b64  	%rd4724, %rd4723, %rd4720;
	shf.r.wrap.b32 	%r10892, %r10501, %r10500, 1;
	shf.r.wrap.b32 	%r10893, %r10500, %r10501, 1;
	mov.b64 	%rd4725, {%r10893, %r10892};
	shf.r.wrap.b32 	%r10894, %r10501, %r10500, 8;
	shf.r.wrap.b32 	%r10895, %r10500, %r10501, 8;
	mov.b64 	%rd4726, {%r10895, %r10894};
	shr.u64 	%rd4727, %rd4137, 7;
	xor.b64  	%rd4728, %rd4726, %rd4727;
	xor.b64  	%rd4729, %rd4728, %rd4725;
	add.s64 	%rd4730, %rd4729, %rd4124;
	add.s64 	%rd4731, %rd4730, %rd4641;
	add.s64 	%rd4732, %rd4731, %rd4724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10896,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10897}, %rd4719;
	}
	shf.r.wrap.b32 	%r10898, %r10897, %r10896, 19;
	shf.r.wrap.b32 	%r10899, %r10896, %r10897, 19;
	mov.b64 	%rd4733, {%r10899, %r10898};
	shf.l.wrap.b32 	%r10900, %r10896, %r10897, 3;
	shf.l.wrap.b32 	%r10901, %r10897, %r10896, 3;
	mov.b64 	%rd4734, {%r10901, %r10900};
	shr.u64 	%rd4735, %rd4719, 6;
	xor.b64  	%rd4736, %rd4734, %rd4735;
	xor.b64  	%rd4737, %rd4736, %rd4733;
	shf.r.wrap.b32 	%r10902, %r10511, %r10510, 1;
	shf.r.wrap.b32 	%r10903, %r10510, %r10511, 1;
	mov.b64 	%rd4738, {%r10903, %r10902};
	shf.r.wrap.b32 	%r10904, %r10511, %r10510, 8;
	shf.r.wrap.b32 	%r10905, %r10510, %r10511, 8;
	mov.b64 	%rd4739, {%r10905, %r10904};
	shr.u64 	%rd4740, %rd4150, 7;
	xor.b64  	%rd4741, %rd4739, %rd4740;
	xor.b64  	%rd4742, %rd4741, %rd4738;
	add.s64 	%rd4743, %rd4742, %rd4137;
	add.s64 	%rd4744, %rd4743, %rd4654;
	add.s64 	%rd4745, %rd4744, %rd4737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10906,%dummy}, %rd4732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10907}, %rd4732;
	}
	shf.r.wrap.b32 	%r10908, %r10907, %r10906, 19;
	shf.r.wrap.b32 	%r10909, %r10906, %r10907, 19;
	mov.b64 	%rd4746, {%r10909, %r10908};
	shf.l.wrap.b32 	%r10910, %r10906, %r10907, 3;
	shf.l.wrap.b32 	%r10911, %r10907, %r10906, 3;
	mov.b64 	%rd4747, {%r10911, %r10910};
	shr.u64 	%rd4748, %rd4732, 6;
	xor.b64  	%rd4749, %rd4747, %rd4748;
	xor.b64  	%rd4750, %rd4749, %rd4746;
	shf.r.wrap.b32 	%r10912, %r10521, %r10520, 1;
	shf.r.wrap.b32 	%r10913, %r10520, %r10521, 1;
	mov.b64 	%rd4751, {%r10913, %r10912};
	shf.r.wrap.b32 	%r10914, %r10521, %r10520, 8;
	shf.r.wrap.b32 	%r10915, %r10520, %r10521, 8;
	mov.b64 	%rd4752, {%r10915, %r10914};
	shr.u64 	%rd4753, %rd4163, 7;
	xor.b64  	%rd4754, %rd4752, %rd4753;
	xor.b64  	%rd4755, %rd4754, %rd4751;
	add.s64 	%rd4756, %rd4755, %rd4150;
	add.s64 	%rd4757, %rd4756, %rd4667;
	add.s64 	%rd4758, %rd4757, %rd4750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10916,%dummy}, %rd4745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10917}, %rd4745;
	}
	shf.r.wrap.b32 	%r10918, %r10917, %r10916, 19;
	shf.r.wrap.b32 	%r10919, %r10916, %r10917, 19;
	mov.b64 	%rd4759, {%r10919, %r10918};
	shf.l.wrap.b32 	%r10920, %r10916, %r10917, 3;
	shf.l.wrap.b32 	%r10921, %r10917, %r10916, 3;
	mov.b64 	%rd4760, {%r10921, %r10920};
	shr.u64 	%rd4761, %rd4745, 6;
	xor.b64  	%rd4762, %rd4760, %rd4761;
	xor.b64  	%rd4763, %rd4762, %rd4759;
	shf.r.wrap.b32 	%r10922, %r10787, %r10786, 1;
	shf.r.wrap.b32 	%r10923, %r10786, %r10787, 1;
	mov.b64 	%rd4764, {%r10923, %r10922};
	shf.r.wrap.b32 	%r10924, %r10787, %r10786, 8;
	shf.r.wrap.b32 	%r10925, %r10786, %r10787, 8;
	mov.b64 	%rd4765, {%r10925, %r10924};
	shr.u64 	%rd4766, %rd4176, 7;
	xor.b64  	%rd4767, %rd4765, %rd4766;
	xor.b64  	%rd4768, %rd4767, %rd4764;
	add.s64 	%rd4769, %rd4768, %rd4163;
	add.s64 	%rd4770, %rd4769, %rd4680;
	add.s64 	%rd4771, %rd4770, %rd4763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10926,%dummy}, %rd4758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10927}, %rd4758;
	}
	shf.r.wrap.b32 	%r10928, %r10927, %r10926, 19;
	shf.r.wrap.b32 	%r10929, %r10926, %r10927, 19;
	mov.b64 	%rd4772, {%r10929, %r10928};
	shf.l.wrap.b32 	%r10930, %r10926, %r10927, 3;
	shf.l.wrap.b32 	%r10931, %r10927, %r10926, 3;
	mov.b64 	%rd4773, {%r10931, %r10930};
	shr.u64 	%rd4774, %rd4758, 6;
	xor.b64  	%rd4775, %rd4773, %rd4774;
	xor.b64  	%rd4776, %rd4775, %rd4772;
	shf.r.wrap.b32 	%r10932, %r10797, %r10796, 1;
	shf.r.wrap.b32 	%r10933, %r10796, %r10797, 1;
	mov.b64 	%rd4777, {%r10933, %r10932};
	shf.r.wrap.b32 	%r10934, %r10797, %r10796, 8;
	shf.r.wrap.b32 	%r10935, %r10796, %r10797, 8;
	mov.b64 	%rd4778, {%r10935, %r10934};
	shr.u64 	%rd4779, %rd4189, 7;
	xor.b64  	%rd4780, %rd4778, %rd4779;
	xor.b64  	%rd4781, %rd4780, %rd4777;
	add.s64 	%rd4782, %rd4781, %rd4176;
	add.s64 	%rd4783, %rd4782, %rd4693;
	add.s64 	%rd4784, %rd4783, %rd4776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10936,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10937}, %rd4771;
	}
	shf.r.wrap.b32 	%r10938, %r10937, %r10936, 19;
	shf.r.wrap.b32 	%r10939, %r10936, %r10937, 19;
	mov.b64 	%rd4785, {%r10939, %r10938};
	shf.l.wrap.b32 	%r10940, %r10936, %r10937, 3;
	shf.l.wrap.b32 	%r10941, %r10937, %r10936, 3;
	mov.b64 	%rd4786, {%r10941, %r10940};
	shr.u64 	%rd4787, %rd4771, 6;
	xor.b64  	%rd4788, %rd4786, %rd4787;
	xor.b64  	%rd4789, %rd4788, %rd4785;
	shf.r.wrap.b32 	%r10942, %r10807, %r10806, 1;
	shf.r.wrap.b32 	%r10943, %r10806, %r10807, 1;
	mov.b64 	%rd4790, {%r10943, %r10942};
	shf.r.wrap.b32 	%r10944, %r10807, %r10806, 8;
	shf.r.wrap.b32 	%r10945, %r10806, %r10807, 8;
	mov.b64 	%rd4791, {%r10945, %r10944};
	shr.u64 	%rd4792, %rd4602, 7;
	xor.b64  	%rd4793, %rd4791, %rd4792;
	xor.b64  	%rd4794, %rd4793, %rd4790;
	add.s64 	%rd4795, %rd4794, %rd4189;
	add.s64 	%rd4796, %rd4795, %rd4706;
	add.s64 	%rd4797, %rd4796, %rd4789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10946,%dummy}, %rd4578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10947}, %rd4578;
	}
	shf.r.wrap.b32 	%r10948, %r10947, %r10946, 14;
	shf.r.wrap.b32 	%r10949, %r10946, %r10947, 14;
	mov.b64 	%rd4798, {%r10949, %r10948};
	shf.r.wrap.b32 	%r10950, %r10947, %r10946, 18;
	shf.r.wrap.b32 	%r10951, %r10946, %r10947, 18;
	mov.b64 	%rd4799, {%r10951, %r10950};
	xor.b64  	%rd4800, %rd4798, %rd4799;
	shf.l.wrap.b32 	%r10952, %r10946, %r10947, 23;
	shf.l.wrap.b32 	%r10953, %r10947, %r10946, 23;
	mov.b64 	%rd4801, {%r10953, %r10952};
	xor.b64  	%rd4802, %rd4800, %rd4801;
	xor.b64  	%rd4803, %rd4553, %rd4528;
	and.b64  	%rd4804, %rd4578, %rd4803;
	xor.b64  	%rd4805, %rd4804, %rd4528;
	add.s64 	%rd4806, %rd4805, %rd4503;
	add.s64 	%rd4807, %rd4806, %rd4802;
	add.s64 	%rd4808, %rd4807, %rd4602;
	ld.const.u64 	%rd4809, [k_sha512+384];
	add.s64 	%rd4810, %rd4808, %rd4809;
	add.s64 	%rd4811, %rd4810, %rd4514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10954,%dummy}, %rd4589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10955}, %rd4589;
	}
	shf.r.wrap.b32 	%r10956, %r10955, %r10954, 28;
	shf.r.wrap.b32 	%r10957, %r10954, %r10955, 28;
	mov.b64 	%rd4812, {%r10957, %r10956};
	shf.l.wrap.b32 	%r10958, %r10954, %r10955, 30;
	shf.l.wrap.b32 	%r10959, %r10955, %r10954, 30;
	mov.b64 	%rd4813, {%r10959, %r10958};
	xor.b64  	%rd4814, %rd4812, %rd4813;
	shf.l.wrap.b32 	%r10960, %r10954, %r10955, 25;
	shf.l.wrap.b32 	%r10961, %r10955, %r10954, 25;
	mov.b64 	%rd4815, {%r10961, %r10960};
	xor.b64  	%rd4816, %rd4814, %rd4815;
	and.b64  	%rd4817, %rd4589, %rd4564;
	xor.b64  	%rd4818, %rd4589, %rd4564;
	and.b64  	%rd4819, %rd4818, %rd4539;
	or.b64  	%rd4820, %rd4819, %rd4817;
	add.s64 	%rd4821, %rd4816, %rd4820;
	add.s64 	%rd4822, %rd4821, %rd4810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10962,%dummy}, %rd4811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10963}, %rd4811;
	}
	shf.r.wrap.b32 	%r10964, %r10963, %r10962, 14;
	shf.r.wrap.b32 	%r10965, %r10962, %r10963, 14;
	mov.b64 	%rd4823, {%r10965, %r10964};
	shf.r.wrap.b32 	%r10966, %r10963, %r10962, 18;
	shf.r.wrap.b32 	%r10967, %r10962, %r10963, 18;
	mov.b64 	%rd4824, {%r10967, %r10966};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	shf.l.wrap.b32 	%r10968, %r10962, %r10963, 23;
	shf.l.wrap.b32 	%r10969, %r10963, %r10962, 23;
	mov.b64 	%rd4826, {%r10969, %r10968};
	xor.b64  	%rd4827, %rd4825, %rd4826;
	xor.b64  	%rd4828, %rd4578, %rd4553;
	and.b64  	%rd4829, %rd4811, %rd4828;
	xor.b64  	%rd4830, %rd4829, %rd4553;
	add.s64 	%rd4831, %rd4615, %rd4528;
	ld.const.u64 	%rd4832, [k_sha512+392];
	add.s64 	%rd4833, %rd4831, %rd4832;
	add.s64 	%rd4834, %rd4833, %rd4830;
	add.s64 	%rd4835, %rd4834, %rd4827;
	add.s64 	%rd4836, %rd4835, %rd4539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10970,%dummy}, %rd4822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10971}, %rd4822;
	}
	shf.r.wrap.b32 	%r10972, %r10971, %r10970, 28;
	shf.r.wrap.b32 	%r10973, %r10970, %r10971, 28;
	mov.b64 	%rd4837, {%r10973, %r10972};
	shf.l.wrap.b32 	%r10974, %r10970, %r10971, 30;
	shf.l.wrap.b32 	%r10975, %r10971, %r10970, 30;
	mov.b64 	%rd4838, {%r10975, %r10974};
	xor.b64  	%rd4839, %rd4837, %rd4838;
	shf.l.wrap.b32 	%r10976, %r10970, %r10971, 25;
	shf.l.wrap.b32 	%r10977, %r10971, %r10970, 25;
	mov.b64 	%rd4840, {%r10977, %r10976};
	xor.b64  	%rd4841, %rd4839, %rd4840;
	and.b64  	%rd4842, %rd4822, %rd4589;
	xor.b64  	%rd4843, %rd4822, %rd4589;
	and.b64  	%rd4844, %rd4843, %rd4564;
	or.b64  	%rd4845, %rd4844, %rd4842;
	add.s64 	%rd4846, %rd4841, %rd4845;
	add.s64 	%rd4847, %rd4846, %rd4835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10978,%dummy}, %rd4836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10979}, %rd4836;
	}
	shf.r.wrap.b32 	%r10980, %r10979, %r10978, 14;
	shf.r.wrap.b32 	%r10981, %r10978, %r10979, 14;
	mov.b64 	%rd4848, {%r10981, %r10980};
	shf.r.wrap.b32 	%r10982, %r10979, %r10978, 18;
	shf.r.wrap.b32 	%r10983, %r10978, %r10979, 18;
	mov.b64 	%rd4849, {%r10983, %r10982};
	xor.b64  	%rd4850, %rd4848, %rd4849;
	shf.l.wrap.b32 	%r10984, %r10978, %r10979, 23;
	shf.l.wrap.b32 	%r10985, %r10979, %r10978, 23;
	mov.b64 	%rd4851, {%r10985, %r10984};
	xor.b64  	%rd4852, %rd4850, %rd4851;
	xor.b64  	%rd4853, %rd4811, %rd4578;
	and.b64  	%rd4854, %rd4836, %rd4853;
	xor.b64  	%rd4855, %rd4854, %rd4578;
	add.s64 	%rd4856, %rd4628, %rd4553;
	ld.const.u64 	%rd4857, [k_sha512+400];
	add.s64 	%rd4858, %rd4856, %rd4857;
	add.s64 	%rd4859, %rd4858, %rd4855;
	add.s64 	%rd4860, %rd4859, %rd4852;
	add.s64 	%rd4861, %rd4860, %rd4564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10986,%dummy}, %rd4847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10987}, %rd4847;
	}
	shf.r.wrap.b32 	%r10988, %r10987, %r10986, 28;
	shf.r.wrap.b32 	%r10989, %r10986, %r10987, 28;
	mov.b64 	%rd4862, {%r10989, %r10988};
	shf.l.wrap.b32 	%r10990, %r10986, %r10987, 30;
	shf.l.wrap.b32 	%r10991, %r10987, %r10986, 30;
	mov.b64 	%rd4863, {%r10991, %r10990};
	xor.b64  	%rd4864, %rd4862, %rd4863;
	shf.l.wrap.b32 	%r10992, %r10986, %r10987, 25;
	shf.l.wrap.b32 	%r10993, %r10987, %r10986, 25;
	mov.b64 	%rd4865, {%r10993, %r10992};
	xor.b64  	%rd4866, %rd4864, %rd4865;
	and.b64  	%rd4867, %rd4847, %rd4822;
	xor.b64  	%rd4868, %rd4847, %rd4822;
	and.b64  	%rd4869, %rd4868, %rd4589;
	or.b64  	%rd4870, %rd4869, %rd4867;
	add.s64 	%rd4871, %rd4866, %rd4870;
	add.s64 	%rd4872, %rd4871, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10994,%dummy}, %rd4861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10995}, %rd4861;
	}
	shf.r.wrap.b32 	%r10996, %r10995, %r10994, 14;
	shf.r.wrap.b32 	%r10997, %r10994, %r10995, 14;
	mov.b64 	%rd4873, {%r10997, %r10996};
	shf.r.wrap.b32 	%r10998, %r10995, %r10994, 18;
	shf.r.wrap.b32 	%r10999, %r10994, %r10995, 18;
	mov.b64 	%rd4874, {%r10999, %r10998};
	xor.b64  	%rd4875, %rd4873, %rd4874;
	shf.l.wrap.b32 	%r11000, %r10994, %r10995, 23;
	shf.l.wrap.b32 	%r11001, %r10995, %r10994, 23;
	mov.b64 	%rd4876, {%r11001, %r11000};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	xor.b64  	%rd4878, %rd4836, %rd4811;
	and.b64  	%rd4879, %rd4861, %rd4878;
	xor.b64  	%rd4880, %rd4879, %rd4811;
	add.s64 	%rd4881, %rd4641, %rd4578;
	ld.const.u64 	%rd4882, [k_sha512+408];
	add.s64 	%rd4883, %rd4881, %rd4882;
	add.s64 	%rd4884, %rd4883, %rd4880;
	add.s64 	%rd4885, %rd4884, %rd4877;
	add.s64 	%rd4886, %rd4885, %rd4589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11002,%dummy}, %rd4872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11003}, %rd4872;
	}
	shf.r.wrap.b32 	%r11004, %r11003, %r11002, 28;
	shf.r.wrap.b32 	%r11005, %r11002, %r11003, 28;
	mov.b64 	%rd4887, {%r11005, %r11004};
	shf.l.wrap.b32 	%r11006, %r11002, %r11003, 30;
	shf.l.wrap.b32 	%r11007, %r11003, %r11002, 30;
	mov.b64 	%rd4888, {%r11007, %r11006};
	xor.b64  	%rd4889, %rd4887, %rd4888;
	shf.l.wrap.b32 	%r11008, %r11002, %r11003, 25;
	shf.l.wrap.b32 	%r11009, %r11003, %r11002, 25;
	mov.b64 	%rd4890, {%r11009, %r11008};
	xor.b64  	%rd4891, %rd4889, %rd4890;
	and.b64  	%rd4892, %rd4872, %rd4847;
	xor.b64  	%rd4893, %rd4872, %rd4847;
	and.b64  	%rd4894, %rd4893, %rd4822;
	or.b64  	%rd4895, %rd4894, %rd4892;
	add.s64 	%rd4896, %rd4891, %rd4895;
	add.s64 	%rd4897, %rd4896, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11010,%dummy}, %rd4886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11011}, %rd4886;
	}
	shf.r.wrap.b32 	%r11012, %r11011, %r11010, 14;
	shf.r.wrap.b32 	%r11013, %r11010, %r11011, 14;
	mov.b64 	%rd4898, {%r11013, %r11012};
	shf.r.wrap.b32 	%r11014, %r11011, %r11010, 18;
	shf.r.wrap.b32 	%r11015, %r11010, %r11011, 18;
	mov.b64 	%rd4899, {%r11015, %r11014};
	xor.b64  	%rd4900, %rd4898, %rd4899;
	shf.l.wrap.b32 	%r11016, %r11010, %r11011, 23;
	shf.l.wrap.b32 	%r11017, %r11011, %r11010, 23;
	mov.b64 	%rd4901, {%r11017, %r11016};
	xor.b64  	%rd4902, %rd4900, %rd4901;
	xor.b64  	%rd4903, %rd4861, %rd4836;
	and.b64  	%rd4904, %rd4886, %rd4903;
	xor.b64  	%rd4905, %rd4904, %rd4836;
	add.s64 	%rd4906, %rd4811, %rd4654;
	ld.const.u64 	%rd4907, [k_sha512+416];
	add.s64 	%rd4908, %rd4906, %rd4907;
	add.s64 	%rd4909, %rd4908, %rd4905;
	add.s64 	%rd4910, %rd4909, %rd4902;
	add.s64 	%rd4911, %rd4910, %rd4822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11018,%dummy}, %rd4897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11019}, %rd4897;
	}
	shf.r.wrap.b32 	%r11020, %r11019, %r11018, 28;
	shf.r.wrap.b32 	%r11021, %r11018, %r11019, 28;
	mov.b64 	%rd4912, {%r11021, %r11020};
	shf.l.wrap.b32 	%r11022, %r11018, %r11019, 30;
	shf.l.wrap.b32 	%r11023, %r11019, %r11018, 30;
	mov.b64 	%rd4913, {%r11023, %r11022};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	shf.l.wrap.b32 	%r11024, %r11018, %r11019, 25;
	shf.l.wrap.b32 	%r11025, %r11019, %r11018, 25;
	mov.b64 	%rd4915, {%r11025, %r11024};
	xor.b64  	%rd4916, %rd4914, %rd4915;
	and.b64  	%rd4917, %rd4897, %rd4872;
	xor.b64  	%rd4918, %rd4897, %rd4872;
	and.b64  	%rd4919, %rd4918, %rd4847;
	or.b64  	%rd4920, %rd4919, %rd4917;
	add.s64 	%rd4921, %rd4916, %rd4920;
	add.s64 	%rd4922, %rd4921, %rd4910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11026,%dummy}, %rd4911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11027}, %rd4911;
	}
	shf.r.wrap.b32 	%r11028, %r11027, %r11026, 14;
	shf.r.wrap.b32 	%r11029, %r11026, %r11027, 14;
	mov.b64 	%rd4923, {%r11029, %r11028};
	shf.r.wrap.b32 	%r11030, %r11027, %r11026, 18;
	shf.r.wrap.b32 	%r11031, %r11026, %r11027, 18;
	mov.b64 	%rd4924, {%r11031, %r11030};
	xor.b64  	%rd4925, %rd4923, %rd4924;
	shf.l.wrap.b32 	%r11032, %r11026, %r11027, 23;
	shf.l.wrap.b32 	%r11033, %r11027, %r11026, 23;
	mov.b64 	%rd4926, {%r11033, %r11032};
	xor.b64  	%rd4927, %rd4925, %rd4926;
	xor.b64  	%rd4928, %rd4886, %rd4861;
	and.b64  	%rd4929, %rd4911, %rd4928;
	xor.b64  	%rd4930, %rd4929, %rd4861;
	ld.const.u64 	%rd4931, [k_sha512+424];
	add.s64 	%rd4932, %rd4931, %rd4667;
	add.s64 	%rd4933, %rd4932, %rd4836;
	add.s64 	%rd4934, %rd4933, %rd4930;
	add.s64 	%rd4935, %rd4934, %rd4927;
	add.s64 	%rd4936, %rd4935, %rd4847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11034,%dummy}, %rd4922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11035}, %rd4922;
	}
	shf.r.wrap.b32 	%r11036, %r11035, %r11034, 28;
	shf.r.wrap.b32 	%r11037, %r11034, %r11035, 28;
	mov.b64 	%rd4937, {%r11037, %r11036};
	shf.l.wrap.b32 	%r11038, %r11034, %r11035, 30;
	shf.l.wrap.b32 	%r11039, %r11035, %r11034, 30;
	mov.b64 	%rd4938, {%r11039, %r11038};
	xor.b64  	%rd4939, %rd4937, %rd4938;
	shf.l.wrap.b32 	%r11040, %r11034, %r11035, 25;
	shf.l.wrap.b32 	%r11041, %r11035, %r11034, 25;
	mov.b64 	%rd4940, {%r11041, %r11040};
	xor.b64  	%rd4941, %rd4939, %rd4940;
	and.b64  	%rd4942, %rd4922, %rd4897;
	xor.b64  	%rd4943, %rd4922, %rd4897;
	and.b64  	%rd4944, %rd4943, %rd4872;
	or.b64  	%rd4945, %rd4944, %rd4942;
	add.s64 	%rd4946, %rd4941, %rd4945;
	add.s64 	%rd4947, %rd4946, %rd4935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11042,%dummy}, %rd4936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11043}, %rd4936;
	}
	shf.r.wrap.b32 	%r11044, %r11043, %r11042, 14;
	shf.r.wrap.b32 	%r11045, %r11042, %r11043, 14;
	mov.b64 	%rd4948, {%r11045, %r11044};
	shf.r.wrap.b32 	%r11046, %r11043, %r11042, 18;
	shf.r.wrap.b32 	%r11047, %r11042, %r11043, 18;
	mov.b64 	%rd4949, {%r11047, %r11046};
	xor.b64  	%rd4950, %rd4948, %rd4949;
	shf.l.wrap.b32 	%r11048, %r11042, %r11043, 23;
	shf.l.wrap.b32 	%r11049, %r11043, %r11042, 23;
	mov.b64 	%rd4951, {%r11049, %r11048};
	xor.b64  	%rd4952, %rd4950, %rd4951;
	xor.b64  	%rd4953, %rd4911, %rd4886;
	and.b64  	%rd4954, %rd4936, %rd4953;
	xor.b64  	%rd4955, %rd4954, %rd4886;
	ld.const.u64 	%rd4956, [k_sha512+432];
	add.s64 	%rd4957, %rd4956, %rd4680;
	add.s64 	%rd4958, %rd4957, %rd4861;
	add.s64 	%rd4959, %rd4958, %rd4955;
	add.s64 	%rd4960, %rd4959, %rd4952;
	add.s64 	%rd4961, %rd4960, %rd4872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11050,%dummy}, %rd4947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11051}, %rd4947;
	}
	shf.r.wrap.b32 	%r11052, %r11051, %r11050, 28;
	shf.r.wrap.b32 	%r11053, %r11050, %r11051, 28;
	mov.b64 	%rd4962, {%r11053, %r11052};
	shf.l.wrap.b32 	%r11054, %r11050, %r11051, 30;
	shf.l.wrap.b32 	%r11055, %r11051, %r11050, 30;
	mov.b64 	%rd4963, {%r11055, %r11054};
	xor.b64  	%rd4964, %rd4962, %rd4963;
	shf.l.wrap.b32 	%r11056, %r11050, %r11051, 25;
	shf.l.wrap.b32 	%r11057, %r11051, %r11050, 25;
	mov.b64 	%rd4965, {%r11057, %r11056};
	xor.b64  	%rd4966, %rd4964, %rd4965;
	and.b64  	%rd4967, %rd4947, %rd4922;
	xor.b64  	%rd4968, %rd4947, %rd4922;
	and.b64  	%rd4969, %rd4968, %rd4897;
	or.b64  	%rd4970, %rd4969, %rd4967;
	add.s64 	%rd4971, %rd4966, %rd4970;
	add.s64 	%rd4972, %rd4971, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11058,%dummy}, %rd4961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11059}, %rd4961;
	}
	shf.r.wrap.b32 	%r11060, %r11059, %r11058, 14;
	shf.r.wrap.b32 	%r11061, %r11058, %r11059, 14;
	mov.b64 	%rd4973, {%r11061, %r11060};
	shf.r.wrap.b32 	%r11062, %r11059, %r11058, 18;
	shf.r.wrap.b32 	%r11063, %r11058, %r11059, 18;
	mov.b64 	%rd4974, {%r11063, %r11062};
	xor.b64  	%rd4975, %rd4973, %rd4974;
	shf.l.wrap.b32 	%r11064, %r11058, %r11059, 23;
	shf.l.wrap.b32 	%r11065, %r11059, %r11058, 23;
	mov.b64 	%rd4976, {%r11065, %r11064};
	xor.b64  	%rd4977, %rd4975, %rd4976;
	xor.b64  	%rd4978, %rd4936, %rd4911;
	and.b64  	%rd4979, %rd4961, %rd4978;
	xor.b64  	%rd4980, %rd4979, %rd4911;
	ld.const.u64 	%rd4981, [k_sha512+440];
	add.s64 	%rd4982, %rd4981, %rd4693;
	add.s64 	%rd4983, %rd4982, %rd4886;
	add.s64 	%rd4984, %rd4983, %rd4980;
	add.s64 	%rd4985, %rd4984, %rd4977;
	add.s64 	%rd4986, %rd4985, %rd4897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11066,%dummy}, %rd4972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11067}, %rd4972;
	}
	shf.r.wrap.b32 	%r11068, %r11067, %r11066, 28;
	shf.r.wrap.b32 	%r11069, %r11066, %r11067, 28;
	mov.b64 	%rd4987, {%r11069, %r11068};
	shf.l.wrap.b32 	%r11070, %r11066, %r11067, 30;
	shf.l.wrap.b32 	%r11071, %r11067, %r11066, 30;
	mov.b64 	%rd4988, {%r11071, %r11070};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	shf.l.wrap.b32 	%r11072, %r11066, %r11067, 25;
	shf.l.wrap.b32 	%r11073, %r11067, %r11066, 25;
	mov.b64 	%rd4990, {%r11073, %r11072};
	xor.b64  	%rd4991, %rd4989, %rd4990;
	and.b64  	%rd4992, %rd4972, %rd4947;
	xor.b64  	%rd4993, %rd4972, %rd4947;
	and.b64  	%rd4994, %rd4993, %rd4922;
	or.b64  	%rd4995, %rd4994, %rd4992;
	add.s64 	%rd4996, %rd4991, %rd4995;
	add.s64 	%rd4997, %rd4996, %rd4985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11074,%dummy}, %rd4986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11075}, %rd4986;
	}
	shf.r.wrap.b32 	%r11076, %r11075, %r11074, 14;
	shf.r.wrap.b32 	%r11077, %r11074, %r11075, 14;
	mov.b64 	%rd4998, {%r11077, %r11076};
	shf.r.wrap.b32 	%r11078, %r11075, %r11074, 18;
	shf.r.wrap.b32 	%r11079, %r11074, %r11075, 18;
	mov.b64 	%rd4999, {%r11079, %r11078};
	xor.b64  	%rd5000, %rd4998, %rd4999;
	shf.l.wrap.b32 	%r11080, %r11074, %r11075, 23;
	shf.l.wrap.b32 	%r11081, %r11075, %r11074, 23;
	mov.b64 	%rd5001, {%r11081, %r11080};
	xor.b64  	%rd5002, %rd5000, %rd5001;
	xor.b64  	%rd5003, %rd4961, %rd4936;
	and.b64  	%rd5004, %rd4986, %rd5003;
	xor.b64  	%rd5005, %rd5004, %rd4936;
	ld.const.u64 	%rd5006, [k_sha512+448];
	add.s64 	%rd5007, %rd5006, %rd4706;
	add.s64 	%rd5008, %rd5007, %rd4911;
	add.s64 	%rd5009, %rd5008, %rd5005;
	add.s64 	%rd5010, %rd5009, %rd5002;
	add.s64 	%rd5011, %rd5010, %rd4922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11082,%dummy}, %rd4997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11083}, %rd4997;
	}
	shf.r.wrap.b32 	%r11084, %r11083, %r11082, 28;
	shf.r.wrap.b32 	%r11085, %r11082, %r11083, 28;
	mov.b64 	%rd5012, {%r11085, %r11084};
	shf.l.wrap.b32 	%r11086, %r11082, %r11083, 30;
	shf.l.wrap.b32 	%r11087, %r11083, %r11082, 30;
	mov.b64 	%rd5013, {%r11087, %r11086};
	xor.b64  	%rd5014, %rd5012, %rd5013;
	shf.l.wrap.b32 	%r11088, %r11082, %r11083, 25;
	shf.l.wrap.b32 	%r11089, %r11083, %r11082, 25;
	mov.b64 	%rd5015, {%r11089, %r11088};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	and.b64  	%rd5017, %rd4997, %rd4972;
	xor.b64  	%rd5018, %rd4997, %rd4972;
	and.b64  	%rd5019, %rd5018, %rd4947;
	or.b64  	%rd5020, %rd5019, %rd5017;
	add.s64 	%rd5021, %rd5016, %rd5020;
	add.s64 	%rd5022, %rd5021, %rd5010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11090,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11091}, %rd5011;
	}
	shf.r.wrap.b32 	%r11092, %r11091, %r11090, 14;
	shf.r.wrap.b32 	%r11093, %r11090, %r11091, 14;
	mov.b64 	%rd5023, {%r11093, %r11092};
	shf.r.wrap.b32 	%r11094, %r11091, %r11090, 18;
	shf.r.wrap.b32 	%r11095, %r11090, %r11091, 18;
	mov.b64 	%rd5024, {%r11095, %r11094};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	shf.l.wrap.b32 	%r11096, %r11090, %r11091, 23;
	shf.l.wrap.b32 	%r11097, %r11091, %r11090, 23;
	mov.b64 	%rd5026, {%r11097, %r11096};
	xor.b64  	%rd5027, %rd5025, %rd5026;
	xor.b64  	%rd5028, %rd4986, %rd4961;
	and.b64  	%rd5029, %rd5011, %rd5028;
	xor.b64  	%rd5030, %rd5029, %rd4961;
	ld.const.u64 	%rd5031, [k_sha512+456];
	add.s64 	%rd5032, %rd5031, %rd4719;
	add.s64 	%rd5033, %rd5032, %rd4936;
	add.s64 	%rd5034, %rd5033, %rd5030;
	add.s64 	%rd5035, %rd5034, %rd5027;
	add.s64 	%rd5036, %rd5035, %rd4947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11098,%dummy}, %rd5022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11099}, %rd5022;
	}
	shf.r.wrap.b32 	%r11100, %r11099, %r11098, 28;
	shf.r.wrap.b32 	%r11101, %r11098, %r11099, 28;
	mov.b64 	%rd5037, {%r11101, %r11100};
	shf.l.wrap.b32 	%r11102, %r11098, %r11099, 30;
	shf.l.wrap.b32 	%r11103, %r11099, %r11098, 30;
	mov.b64 	%rd5038, {%r11103, %r11102};
	xor.b64  	%rd5039, %rd5037, %rd5038;
	shf.l.wrap.b32 	%r11104, %r11098, %r11099, 25;
	shf.l.wrap.b32 	%r11105, %r11099, %r11098, 25;
	mov.b64 	%rd5040, {%r11105, %r11104};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	and.b64  	%rd5042, %rd5022, %rd4997;
	xor.b64  	%rd5043, %rd5022, %rd4997;
	and.b64  	%rd5044, %rd5043, %rd4972;
	or.b64  	%rd5045, %rd5044, %rd5042;
	add.s64 	%rd5046, %rd5041, %rd5045;
	add.s64 	%rd5047, %rd5046, %rd5035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11106,%dummy}, %rd5036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11107}, %rd5036;
	}
	shf.r.wrap.b32 	%r11108, %r11107, %r11106, 14;
	shf.r.wrap.b32 	%r11109, %r11106, %r11107, 14;
	mov.b64 	%rd5048, {%r11109, %r11108};
	shf.r.wrap.b32 	%r11110, %r11107, %r11106, 18;
	shf.r.wrap.b32 	%r11111, %r11106, %r11107, 18;
	mov.b64 	%rd5049, {%r11111, %r11110};
	xor.b64  	%rd5050, %rd5048, %rd5049;
	shf.l.wrap.b32 	%r11112, %r11106, %r11107, 23;
	shf.l.wrap.b32 	%r11113, %r11107, %r11106, 23;
	mov.b64 	%rd5051, {%r11113, %r11112};
	xor.b64  	%rd5052, %rd5050, %rd5051;
	xor.b64  	%rd5053, %rd5011, %rd4986;
	and.b64  	%rd5054, %rd5036, %rd5053;
	xor.b64  	%rd5055, %rd5054, %rd4986;
	ld.const.u64 	%rd5056, [k_sha512+464];
	add.s64 	%rd5057, %rd5056, %rd4732;
	add.s64 	%rd5058, %rd5057, %rd4961;
	add.s64 	%rd5059, %rd5058, %rd5055;
	add.s64 	%rd5060, %rd5059, %rd5052;
	add.s64 	%rd5061, %rd5060, %rd4972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11114,%dummy}, %rd5047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11115}, %rd5047;
	}
	shf.r.wrap.b32 	%r11116, %r11115, %r11114, 28;
	shf.r.wrap.b32 	%r11117, %r11114, %r11115, 28;
	mov.b64 	%rd5062, {%r11117, %r11116};
	shf.l.wrap.b32 	%r11118, %r11114, %r11115, 30;
	shf.l.wrap.b32 	%r11119, %r11115, %r11114, 30;
	mov.b64 	%rd5063, {%r11119, %r11118};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	shf.l.wrap.b32 	%r11120, %r11114, %r11115, 25;
	shf.l.wrap.b32 	%r11121, %r11115, %r11114, 25;
	mov.b64 	%rd5065, {%r11121, %r11120};
	xor.b64  	%rd5066, %rd5064, %rd5065;
	and.b64  	%rd5067, %rd5047, %rd5022;
	xor.b64  	%rd5068, %rd5047, %rd5022;
	and.b64  	%rd5069, %rd5068, %rd4997;
	or.b64  	%rd5070, %rd5069, %rd5067;
	add.s64 	%rd5071, %rd5066, %rd5070;
	add.s64 	%rd5072, %rd5071, %rd5060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11122,%dummy}, %rd5061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11123}, %rd5061;
	}
	shf.r.wrap.b32 	%r11124, %r11123, %r11122, 14;
	shf.r.wrap.b32 	%r11125, %r11122, %r11123, 14;
	mov.b64 	%rd5073, {%r11125, %r11124};
	shf.r.wrap.b32 	%r11126, %r11123, %r11122, 18;
	shf.r.wrap.b32 	%r11127, %r11122, %r11123, 18;
	mov.b64 	%rd5074, {%r11127, %r11126};
	xor.b64  	%rd5075, %rd5073, %rd5074;
	shf.l.wrap.b32 	%r11128, %r11122, %r11123, 23;
	shf.l.wrap.b32 	%r11129, %r11123, %r11122, 23;
	mov.b64 	%rd5076, {%r11129, %r11128};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	xor.b64  	%rd5078, %rd5036, %rd5011;
	and.b64  	%rd5079, %rd5061, %rd5078;
	xor.b64  	%rd5080, %rd5079, %rd5011;
	ld.const.u64 	%rd5081, [k_sha512+472];
	add.s64 	%rd5082, %rd5081, %rd4745;
	add.s64 	%rd5083, %rd5082, %rd4986;
	add.s64 	%rd5084, %rd5083, %rd5080;
	add.s64 	%rd5085, %rd5084, %rd5077;
	add.s64 	%rd5086, %rd5085, %rd4997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11130,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11131}, %rd5072;
	}
	shf.r.wrap.b32 	%r11132, %r11131, %r11130, 28;
	shf.r.wrap.b32 	%r11133, %r11130, %r11131, 28;
	mov.b64 	%rd5087, {%r11133, %r11132};
	shf.l.wrap.b32 	%r11134, %r11130, %r11131, 30;
	shf.l.wrap.b32 	%r11135, %r11131, %r11130, 30;
	mov.b64 	%rd5088, {%r11135, %r11134};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	shf.l.wrap.b32 	%r11136, %r11130, %r11131, 25;
	shf.l.wrap.b32 	%r11137, %r11131, %r11130, 25;
	mov.b64 	%rd5090, {%r11137, %r11136};
	xor.b64  	%rd5091, %rd5089, %rd5090;
	and.b64  	%rd5092, %rd5072, %rd5047;
	xor.b64  	%rd5093, %rd5072, %rd5047;
	and.b64  	%rd5094, %rd5093, %rd5022;
	or.b64  	%rd5095, %rd5094, %rd5092;
	add.s64 	%rd5096, %rd5091, %rd5095;
	add.s64 	%rd5097, %rd5096, %rd5085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11138,%dummy}, %rd5086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11139}, %rd5086;
	}
	shf.r.wrap.b32 	%r11140, %r11139, %r11138, 14;
	shf.r.wrap.b32 	%r11141, %r11138, %r11139, 14;
	mov.b64 	%rd5098, {%r11141, %r11140};
	shf.r.wrap.b32 	%r11142, %r11139, %r11138, 18;
	shf.r.wrap.b32 	%r11143, %r11138, %r11139, 18;
	mov.b64 	%rd5099, {%r11143, %r11142};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	shf.l.wrap.b32 	%r11144, %r11138, %r11139, 23;
	shf.l.wrap.b32 	%r11145, %r11139, %r11138, 23;
	mov.b64 	%rd5101, {%r11145, %r11144};
	xor.b64  	%rd5102, %rd5100, %rd5101;
	xor.b64  	%rd5103, %rd5061, %rd5036;
	and.b64  	%rd5104, %rd5086, %rd5103;
	xor.b64  	%rd5105, %rd5104, %rd5036;
	ld.const.u64 	%rd5106, [k_sha512+480];
	add.s64 	%rd5107, %rd5106, %rd4758;
	add.s64 	%rd5108, %rd5107, %rd5011;
	add.s64 	%rd5109, %rd5108, %rd5105;
	add.s64 	%rd5110, %rd5109, %rd5102;
	add.s64 	%rd5111, %rd5110, %rd5022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11146,%dummy}, %rd5097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11147}, %rd5097;
	}
	shf.r.wrap.b32 	%r11148, %r11147, %r11146, 28;
	shf.r.wrap.b32 	%r11149, %r11146, %r11147, 28;
	mov.b64 	%rd5112, {%r11149, %r11148};
	shf.l.wrap.b32 	%r11150, %r11146, %r11147, 30;
	shf.l.wrap.b32 	%r11151, %r11147, %r11146, 30;
	mov.b64 	%rd5113, {%r11151, %r11150};
	xor.b64  	%rd5114, %rd5112, %rd5113;
	shf.l.wrap.b32 	%r11152, %r11146, %r11147, 25;
	shf.l.wrap.b32 	%r11153, %r11147, %r11146, 25;
	mov.b64 	%rd5115, {%r11153, %r11152};
	xor.b64  	%rd5116, %rd5114, %rd5115;
	and.b64  	%rd5117, %rd5097, %rd5072;
	xor.b64  	%rd5118, %rd5097, %rd5072;
	and.b64  	%rd5119, %rd5118, %rd5047;
	or.b64  	%rd5120, %rd5119, %rd5117;
	add.s64 	%rd5121, %rd5116, %rd5120;
	add.s64 	%rd5122, %rd5121, %rd5110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11154,%dummy}, %rd5111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11155}, %rd5111;
	}
	shf.r.wrap.b32 	%r11156, %r11155, %r11154, 14;
	shf.r.wrap.b32 	%r11157, %r11154, %r11155, 14;
	mov.b64 	%rd5123, {%r11157, %r11156};
	shf.r.wrap.b32 	%r11158, %r11155, %r11154, 18;
	shf.r.wrap.b32 	%r11159, %r11154, %r11155, 18;
	mov.b64 	%rd5124, {%r11159, %r11158};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	shf.l.wrap.b32 	%r11160, %r11154, %r11155, 23;
	shf.l.wrap.b32 	%r11161, %r11155, %r11154, 23;
	mov.b64 	%rd5126, {%r11161, %r11160};
	xor.b64  	%rd5127, %rd5125, %rd5126;
	xor.b64  	%rd5128, %rd5086, %rd5061;
	and.b64  	%rd5129, %rd5111, %rd5128;
	xor.b64  	%rd5130, %rd5129, %rd5061;
	ld.const.u64 	%rd5131, [k_sha512+488];
	add.s64 	%rd5132, %rd5131, %rd4771;
	add.s64 	%rd5133, %rd5132, %rd5036;
	add.s64 	%rd5134, %rd5133, %rd5130;
	add.s64 	%rd5135, %rd5134, %rd5127;
	add.s64 	%rd5136, %rd5135, %rd5047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11162,%dummy}, %rd5122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11163}, %rd5122;
	}
	shf.r.wrap.b32 	%r11164, %r11163, %r11162, 28;
	shf.r.wrap.b32 	%r11165, %r11162, %r11163, 28;
	mov.b64 	%rd5137, {%r11165, %r11164};
	shf.l.wrap.b32 	%r11166, %r11162, %r11163, 30;
	shf.l.wrap.b32 	%r11167, %r11163, %r11162, 30;
	mov.b64 	%rd5138, {%r11167, %r11166};
	xor.b64  	%rd5139, %rd5137, %rd5138;
	shf.l.wrap.b32 	%r11168, %r11162, %r11163, 25;
	shf.l.wrap.b32 	%r11169, %r11163, %r11162, 25;
	mov.b64 	%rd5140, {%r11169, %r11168};
	xor.b64  	%rd5141, %rd5139, %rd5140;
	and.b64  	%rd5142, %rd5122, %rd5097;
	xor.b64  	%rd5143, %rd5122, %rd5097;
	and.b64  	%rd5144, %rd5143, %rd5072;
	or.b64  	%rd5145, %rd5144, %rd5142;
	add.s64 	%rd5146, %rd5141, %rd5145;
	add.s64 	%rd5147, %rd5146, %rd5135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11170,%dummy}, %rd5136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd5136;
	}
	shf.r.wrap.b32 	%r11172, %r11171, %r11170, 14;
	shf.r.wrap.b32 	%r11173, %r11170, %r11171, 14;
	mov.b64 	%rd5148, {%r11173, %r11172};
	shf.r.wrap.b32 	%r11174, %r11171, %r11170, 18;
	shf.r.wrap.b32 	%r11175, %r11170, %r11171, 18;
	mov.b64 	%rd5149, {%r11175, %r11174};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	shf.l.wrap.b32 	%r11176, %r11170, %r11171, 23;
	shf.l.wrap.b32 	%r11177, %r11171, %r11170, 23;
	mov.b64 	%rd5151, {%r11177, %r11176};
	xor.b64  	%rd5152, %rd5150, %rd5151;
	xor.b64  	%rd5153, %rd5111, %rd5086;
	and.b64  	%rd5154, %rd5136, %rd5153;
	xor.b64  	%rd5155, %rd5154, %rd5086;
	ld.const.u64 	%rd5156, [k_sha512+496];
	add.s64 	%rd5157, %rd5156, %rd4784;
	add.s64 	%rd5158, %rd5157, %rd5061;
	add.s64 	%rd5159, %rd5158, %rd5155;
	add.s64 	%rd5160, %rd5159, %rd5152;
	add.s64 	%rd5161, %rd5160, %rd5072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11178,%dummy}, %rd5147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd5147;
	}
	shf.r.wrap.b32 	%r11180, %r11179, %r11178, 28;
	shf.r.wrap.b32 	%r11181, %r11178, %r11179, 28;
	mov.b64 	%rd5162, {%r11181, %r11180};
	shf.l.wrap.b32 	%r11182, %r11178, %r11179, 30;
	shf.l.wrap.b32 	%r11183, %r11179, %r11178, 30;
	mov.b64 	%rd5163, {%r11183, %r11182};
	xor.b64  	%rd5164, %rd5162, %rd5163;
	shf.l.wrap.b32 	%r11184, %r11178, %r11179, 25;
	shf.l.wrap.b32 	%r11185, %r11179, %r11178, 25;
	mov.b64 	%rd5165, {%r11185, %r11184};
	xor.b64  	%rd5166, %rd5164, %rd5165;
	and.b64  	%rd5167, %rd5147, %rd5122;
	xor.b64  	%rd5168, %rd5147, %rd5122;
	and.b64  	%rd5169, %rd5168, %rd5097;
	or.b64  	%rd5170, %rd5169, %rd5167;
	add.s64 	%rd5171, %rd5166, %rd5170;
	add.s64 	%rd5172, %rd5171, %rd5160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11186,%dummy}, %rd5161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11187}, %rd5161;
	}
	shf.r.wrap.b32 	%r11188, %r11187, %r11186, 14;
	shf.r.wrap.b32 	%r11189, %r11186, %r11187, 14;
	mov.b64 	%rd5173, {%r11189, %r11188};
	shf.r.wrap.b32 	%r11190, %r11187, %r11186, 18;
	shf.r.wrap.b32 	%r11191, %r11186, %r11187, 18;
	mov.b64 	%rd5174, {%r11191, %r11190};
	xor.b64  	%rd5175, %rd5173, %rd5174;
	shf.l.wrap.b32 	%r11192, %r11186, %r11187, 23;
	shf.l.wrap.b32 	%r11193, %r11187, %r11186, 23;
	mov.b64 	%rd5176, {%r11193, %r11192};
	xor.b64  	%rd5177, %rd5175, %rd5176;
	xor.b64  	%rd5178, %rd5136, %rd5111;
	and.b64  	%rd5179, %rd5161, %rd5178;
	xor.b64  	%rd5180, %rd5179, %rd5111;
	ld.const.u64 	%rd5181, [k_sha512+504];
	add.s64 	%rd5182, %rd5181, %rd4797;
	add.s64 	%rd5183, %rd5182, %rd5086;
	add.s64 	%rd5184, %rd5183, %rd5180;
	add.s64 	%rd5185, %rd5184, %rd5177;
	add.s64 	%rd5186, %rd5185, %rd5097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11194,%dummy}, %rd5172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11195}, %rd5172;
	}
	shf.r.wrap.b32 	%r11196, %r11195, %r11194, 28;
	shf.r.wrap.b32 	%r11197, %r11194, %r11195, 28;
	mov.b64 	%rd5187, {%r11197, %r11196};
	shf.l.wrap.b32 	%r11198, %r11194, %r11195, 30;
	shf.l.wrap.b32 	%r11199, %r11195, %r11194, 30;
	mov.b64 	%rd5188, {%r11199, %r11198};
	xor.b64  	%rd5189, %rd5187, %rd5188;
	shf.l.wrap.b32 	%r11200, %r11194, %r11195, 25;
	shf.l.wrap.b32 	%r11201, %r11195, %r11194, 25;
	mov.b64 	%rd5190, {%r11201, %r11200};
	xor.b64  	%rd5191, %rd5189, %rd5190;
	and.b64  	%rd5192, %rd5172, %rd5147;
	xor.b64  	%rd5193, %rd5172, %rd5147;
	and.b64  	%rd5194, %rd5193, %rd5122;
	or.b64  	%rd5195, %rd5194, %rd5192;
	add.s64 	%rd5196, %rd5191, %rd5195;
	add.s64 	%rd5197, %rd5196, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11202,%dummy}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11203}, %rd4784;
	}
	shf.r.wrap.b32 	%r11204, %r11203, %r11202, 19;
	shf.r.wrap.b32 	%r11205, %r11202, %r11203, 19;
	mov.b64 	%rd5198, {%r11205, %r11204};
	shf.l.wrap.b32 	%r11206, %r11202, %r11203, 3;
	shf.l.wrap.b32 	%r11207, %r11203, %r11202, 3;
	mov.b64 	%rd5199, {%r11207, %r11206};
	shr.u64 	%rd5200, %rd4784, 6;
	xor.b64  	%rd5201, %rd5199, %rd5200;
	xor.b64  	%rd5202, %rd5201, %rd5198;
	shf.r.wrap.b32 	%r11208, %r10817, %r10816, 1;
	shf.r.wrap.b32 	%r11209, %r10816, %r10817, 1;
	mov.b64 	%rd5203, {%r11209, %r11208};
	shf.r.wrap.b32 	%r11210, %r10817, %r10816, 8;
	shf.r.wrap.b32 	%r11211, %r10816, %r10817, 8;
	mov.b64 	%rd5204, {%r11211, %r11210};
	shr.u64 	%rd5205, %rd4615, 7;
	xor.b64  	%rd5206, %rd5204, %rd5205;
	xor.b64  	%rd5207, %rd5206, %rd5203;
	add.s64 	%rd5208, %rd5207, %rd4602;
	add.s64 	%rd5209, %rd5208, %rd4719;
	add.s64 	%rd5210, %rd5209, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11212,%dummy}, %rd4797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11213}, %rd4797;
	}
	shf.r.wrap.b32 	%r11214, %r11213, %r11212, 19;
	shf.r.wrap.b32 	%r11215, %r11212, %r11213, 19;
	mov.b64 	%rd5211, {%r11215, %r11214};
	shf.l.wrap.b32 	%r11216, %r11212, %r11213, 3;
	shf.l.wrap.b32 	%r11217, %r11213, %r11212, 3;
	mov.b64 	%rd5212, {%r11217, %r11216};
	shr.u64 	%rd5213, %rd4797, 6;
	xor.b64  	%rd5214, %rd5212, %rd5213;
	xor.b64  	%rd5215, %rd5214, %rd5211;
	shf.r.wrap.b32 	%r11218, %r10827, %r10826, 1;
	shf.r.wrap.b32 	%r11219, %r10826, %r10827, 1;
	mov.b64 	%rd5216, {%r11219, %r11218};
	shf.r.wrap.b32 	%r11220, %r10827, %r10826, 8;
	shf.r.wrap.b32 	%r11221, %r10826, %r10827, 8;
	mov.b64 	%rd5217, {%r11221, %r11220};
	shr.u64 	%rd5218, %rd4628, 7;
	xor.b64  	%rd5219, %rd5217, %rd5218;
	xor.b64  	%rd5220, %rd5219, %rd5216;
	add.s64 	%rd5221, %rd5220, %rd4615;
	add.s64 	%rd5222, %rd5221, %rd4732;
	add.s64 	%rd5223, %rd5222, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11222,%dummy}, %rd5210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11223}, %rd5210;
	}
	shf.r.wrap.b32 	%r11224, %r11223, %r11222, 19;
	shf.r.wrap.b32 	%r11225, %r11222, %r11223, 19;
	mov.b64 	%rd5224, {%r11225, %r11224};
	shf.l.wrap.b32 	%r11226, %r11222, %r11223, 3;
	shf.l.wrap.b32 	%r11227, %r11223, %r11222, 3;
	mov.b64 	%rd5225, {%r11227, %r11226};
	shr.u64 	%rd5226, %rd5210, 6;
	xor.b64  	%rd5227, %rd5225, %rd5226;
	xor.b64  	%rd5228, %rd5227, %rd5224;
	shf.r.wrap.b32 	%r11228, %r10837, %r10836, 1;
	shf.r.wrap.b32 	%r11229, %r10836, %r10837, 1;
	mov.b64 	%rd5229, {%r11229, %r11228};
	shf.r.wrap.b32 	%r11230, %r10837, %r10836, 8;
	shf.r.wrap.b32 	%r11231, %r10836, %r10837, 8;
	mov.b64 	%rd5230, {%r11231, %r11230};
	shr.u64 	%rd5231, %rd4641, 7;
	xor.b64  	%rd5232, %rd5230, %rd5231;
	xor.b64  	%rd5233, %rd5232, %rd5229;
	add.s64 	%rd5234, %rd5233, %rd4628;
	add.s64 	%rd5235, %rd5234, %rd4745;
	add.s64 	%rd5236, %rd5235, %rd5228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11232,%dummy}, %rd5223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11233}, %rd5223;
	}
	shf.r.wrap.b32 	%r11234, %r11233, %r11232, 19;
	shf.r.wrap.b32 	%r11235, %r11232, %r11233, 19;
	mov.b64 	%rd5237, {%r11235, %r11234};
	shf.l.wrap.b32 	%r11236, %r11232, %r11233, 3;
	shf.l.wrap.b32 	%r11237, %r11233, %r11232, 3;
	mov.b64 	%rd5238, {%r11237, %r11236};
	shr.u64 	%rd5239, %rd5223, 6;
	xor.b64  	%rd5240, %rd5238, %rd5239;
	xor.b64  	%rd5241, %rd5240, %rd5237;
	shf.r.wrap.b32 	%r11238, %r10847, %r10846, 1;
	shf.r.wrap.b32 	%r11239, %r10846, %r10847, 1;
	mov.b64 	%rd5242, {%r11239, %r11238};
	shf.r.wrap.b32 	%r11240, %r10847, %r10846, 8;
	shf.r.wrap.b32 	%r11241, %r10846, %r10847, 8;
	mov.b64 	%rd5243, {%r11241, %r11240};
	shr.u64 	%rd5244, %rd4654, 7;
	xor.b64  	%rd5245, %rd5243, %rd5244;
	xor.b64  	%rd5246, %rd5245, %rd5242;
	add.s64 	%rd5247, %rd5246, %rd4641;
	add.s64 	%rd5248, %rd5247, %rd4758;
	add.s64 	%rd5249, %rd5248, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11242,%dummy}, %rd5236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11243}, %rd5236;
	}
	shf.r.wrap.b32 	%r11244, %r11243, %r11242, 19;
	shf.r.wrap.b32 	%r11245, %r11242, %r11243, 19;
	mov.b64 	%rd5250, {%r11245, %r11244};
	shf.l.wrap.b32 	%r11246, %r11242, %r11243, 3;
	shf.l.wrap.b32 	%r11247, %r11243, %r11242, 3;
	mov.b64 	%rd5251, {%r11247, %r11246};
	shr.u64 	%rd5252, %rd5236, 6;
	xor.b64  	%rd5253, %rd5251, %rd5252;
	xor.b64  	%rd5254, %rd5253, %rd5250;
	shf.r.wrap.b32 	%r11248, %r10857, %r10856, 1;
	shf.r.wrap.b32 	%r11249, %r10856, %r10857, 1;
	mov.b64 	%rd5255, {%r11249, %r11248};
	shf.r.wrap.b32 	%r11250, %r10857, %r10856, 8;
	shf.r.wrap.b32 	%r11251, %r10856, %r10857, 8;
	mov.b64 	%rd5256, {%r11251, %r11250};
	shr.u64 	%rd5257, %rd4667, 7;
	xor.b64  	%rd5258, %rd5256, %rd5257;
	xor.b64  	%rd5259, %rd5258, %rd5255;
	add.s64 	%rd5260, %rd5259, %rd4654;
	add.s64 	%rd5261, %rd5260, %rd4771;
	add.s64 	%rd5262, %rd5261, %rd5254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11252,%dummy}, %rd5249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11253}, %rd5249;
	}
	shf.r.wrap.b32 	%r11254, %r11253, %r11252, 19;
	shf.r.wrap.b32 	%r11255, %r11252, %r11253, 19;
	mov.b64 	%rd5263, {%r11255, %r11254};
	shf.l.wrap.b32 	%r11256, %r11252, %r11253, 3;
	shf.l.wrap.b32 	%r11257, %r11253, %r11252, 3;
	mov.b64 	%rd5264, {%r11257, %r11256};
	shr.u64 	%rd5265, %rd5249, 6;
	xor.b64  	%rd5266, %rd5264, %rd5265;
	xor.b64  	%rd5267, %rd5266, %rd5263;
	shf.r.wrap.b32 	%r11258, %r10867, %r10866, 1;
	shf.r.wrap.b32 	%r11259, %r10866, %r10867, 1;
	mov.b64 	%rd5268, {%r11259, %r11258};
	shf.r.wrap.b32 	%r11260, %r10867, %r10866, 8;
	shf.r.wrap.b32 	%r11261, %r10866, %r10867, 8;
	mov.b64 	%rd5269, {%r11261, %r11260};
	shr.u64 	%rd5270, %rd4680, 7;
	xor.b64  	%rd5271, %rd5269, %rd5270;
	xor.b64  	%rd5272, %rd5271, %rd5268;
	add.s64 	%rd5273, %rd5272, %rd4667;
	add.s64 	%rd5274, %rd5273, %rd4784;
	add.s64 	%rd5275, %rd5274, %rd5267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11262,%dummy}, %rd5262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11263}, %rd5262;
	}
	shf.r.wrap.b32 	%r11264, %r11263, %r11262, 19;
	shf.r.wrap.b32 	%r11265, %r11262, %r11263, 19;
	mov.b64 	%rd5276, {%r11265, %r11264};
	shf.l.wrap.b32 	%r11266, %r11262, %r11263, 3;
	shf.l.wrap.b32 	%r11267, %r11263, %r11262, 3;
	mov.b64 	%rd5277, {%r11267, %r11266};
	shr.u64 	%rd5278, %rd5262, 6;
	xor.b64  	%rd5279, %rd5277, %rd5278;
	xor.b64  	%rd5280, %rd5279, %rd5276;
	shf.r.wrap.b32 	%r11268, %r10877, %r10876, 1;
	shf.r.wrap.b32 	%r11269, %r10876, %r10877, 1;
	mov.b64 	%rd5281, {%r11269, %r11268};
	shf.r.wrap.b32 	%r11270, %r10877, %r10876, 8;
	shf.r.wrap.b32 	%r11271, %r10876, %r10877, 8;
	mov.b64 	%rd5282, {%r11271, %r11270};
	shr.u64 	%rd5283, %rd4693, 7;
	xor.b64  	%rd5284, %rd5282, %rd5283;
	xor.b64  	%rd5285, %rd5284, %rd5281;
	add.s64 	%rd5286, %rd5285, %rd4680;
	add.s64 	%rd5287, %rd5286, %rd4797;
	add.s64 	%rd5288, %rd5287, %rd5280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11272,%dummy}, %rd5275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11273}, %rd5275;
	}
	shf.r.wrap.b32 	%r11274, %r11273, %r11272, 19;
	shf.r.wrap.b32 	%r11275, %r11272, %r11273, 19;
	mov.b64 	%rd5289, {%r11275, %r11274};
	shf.l.wrap.b32 	%r11276, %r11272, %r11273, 3;
	shf.l.wrap.b32 	%r11277, %r11273, %r11272, 3;
	mov.b64 	%rd5290, {%r11277, %r11276};
	shr.u64 	%rd5291, %rd5275, 6;
	xor.b64  	%rd5292, %rd5290, %rd5291;
	xor.b64  	%rd5293, %rd5292, %rd5289;
	shf.r.wrap.b32 	%r11278, %r10887, %r10886, 1;
	shf.r.wrap.b32 	%r11279, %r10886, %r10887, 1;
	mov.b64 	%rd5294, {%r11279, %r11278};
	shf.r.wrap.b32 	%r11280, %r10887, %r10886, 8;
	shf.r.wrap.b32 	%r11281, %r10886, %r10887, 8;
	mov.b64 	%rd5295, {%r11281, %r11280};
	shr.u64 	%rd5296, %rd4706, 7;
	xor.b64  	%rd5297, %rd5295, %rd5296;
	xor.b64  	%rd5298, %rd5297, %rd5294;
	add.s64 	%rd5299, %rd5298, %rd4693;
	add.s64 	%rd5300, %rd5299, %rd5210;
	add.s64 	%rd5301, %rd5300, %rd5293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11282,%dummy}, %rd5288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11283}, %rd5288;
	}
	shf.r.wrap.b32 	%r11284, %r11283, %r11282, 19;
	shf.r.wrap.b32 	%r11285, %r11282, %r11283, 19;
	mov.b64 	%rd5302, {%r11285, %r11284};
	shf.l.wrap.b32 	%r11286, %r11282, %r11283, 3;
	shf.l.wrap.b32 	%r11287, %r11283, %r11282, 3;
	mov.b64 	%rd5303, {%r11287, %r11286};
	shr.u64 	%rd5304, %rd5288, 6;
	xor.b64  	%rd5305, %rd5303, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5302;
	shf.r.wrap.b32 	%r11288, %r10897, %r10896, 1;
	shf.r.wrap.b32 	%r11289, %r10896, %r10897, 1;
	mov.b64 	%rd5307, {%r11289, %r11288};
	shf.r.wrap.b32 	%r11290, %r10897, %r10896, 8;
	shf.r.wrap.b32 	%r11291, %r10896, %r10897, 8;
	mov.b64 	%rd5308, {%r11291, %r11290};
	shr.u64 	%rd5309, %rd4719, 7;
	xor.b64  	%rd5310, %rd5308, %rd5309;
	xor.b64  	%rd5311, %rd5310, %rd5307;
	add.s64 	%rd5312, %rd5311, %rd4706;
	add.s64 	%rd5313, %rd5312, %rd5223;
	add.s64 	%rd5314, %rd5313, %rd5306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11292,%dummy}, %rd5301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11293}, %rd5301;
	}
	shf.r.wrap.b32 	%r11294, %r11293, %r11292, 19;
	shf.r.wrap.b32 	%r11295, %r11292, %r11293, 19;
	mov.b64 	%rd5315, {%r11295, %r11294};
	shf.l.wrap.b32 	%r11296, %r11292, %r11293, 3;
	shf.l.wrap.b32 	%r11297, %r11293, %r11292, 3;
	mov.b64 	%rd5316, {%r11297, %r11296};
	shr.u64 	%rd5317, %rd5301, 6;
	xor.b64  	%rd5318, %rd5316, %rd5317;
	xor.b64  	%rd5319, %rd5318, %rd5315;
	shf.r.wrap.b32 	%r11298, %r10907, %r10906, 1;
	shf.r.wrap.b32 	%r11299, %r10906, %r10907, 1;
	mov.b64 	%rd5320, {%r11299, %r11298};
	shf.r.wrap.b32 	%r11300, %r10907, %r10906, 8;
	shf.r.wrap.b32 	%r11301, %r10906, %r10907, 8;
	mov.b64 	%rd5321, {%r11301, %r11300};
	shr.u64 	%rd5322, %rd4732, 7;
	xor.b64  	%rd5323, %rd5321, %rd5322;
	xor.b64  	%rd5324, %rd5323, %rd5320;
	add.s64 	%rd5325, %rd5324, %rd4719;
	add.s64 	%rd5326, %rd5325, %rd5236;
	add.s64 	%rd5327, %rd5326, %rd5319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11302,%dummy}, %rd5314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11303}, %rd5314;
	}
	shf.r.wrap.b32 	%r11304, %r11303, %r11302, 19;
	shf.r.wrap.b32 	%r11305, %r11302, %r11303, 19;
	mov.b64 	%rd5328, {%r11305, %r11304};
	shf.l.wrap.b32 	%r11306, %r11302, %r11303, 3;
	shf.l.wrap.b32 	%r11307, %r11303, %r11302, 3;
	mov.b64 	%rd5329, {%r11307, %r11306};
	shr.u64 	%rd5330, %rd5314, 6;
	xor.b64  	%rd5331, %rd5329, %rd5330;
	xor.b64  	%rd5332, %rd5331, %rd5328;
	shf.r.wrap.b32 	%r11308, %r10917, %r10916, 1;
	shf.r.wrap.b32 	%r11309, %r10916, %r10917, 1;
	mov.b64 	%rd5333, {%r11309, %r11308};
	shf.r.wrap.b32 	%r11310, %r10917, %r10916, 8;
	shf.r.wrap.b32 	%r11311, %r10916, %r10917, 8;
	mov.b64 	%rd5334, {%r11311, %r11310};
	shr.u64 	%rd5335, %rd4745, 7;
	xor.b64  	%rd5336, %rd5334, %rd5335;
	xor.b64  	%rd5337, %rd5336, %rd5333;
	add.s64 	%rd5338, %rd5337, %rd4732;
	add.s64 	%rd5339, %rd5338, %rd5249;
	add.s64 	%rd5340, %rd5339, %rd5332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11312,%dummy}, %rd5327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11313}, %rd5327;
	}
	shf.r.wrap.b32 	%r11314, %r11313, %r11312, 19;
	shf.r.wrap.b32 	%r11315, %r11312, %r11313, 19;
	mov.b64 	%rd5341, {%r11315, %r11314};
	shf.l.wrap.b32 	%r11316, %r11312, %r11313, 3;
	shf.l.wrap.b32 	%r11317, %r11313, %r11312, 3;
	mov.b64 	%rd5342, {%r11317, %r11316};
	shr.u64 	%rd5343, %rd5327, 6;
	xor.b64  	%rd5344, %rd5342, %rd5343;
	xor.b64  	%rd5345, %rd5344, %rd5341;
	shf.r.wrap.b32 	%r11318, %r10927, %r10926, 1;
	shf.r.wrap.b32 	%r11319, %r10926, %r10927, 1;
	mov.b64 	%rd5346, {%r11319, %r11318};
	shf.r.wrap.b32 	%r11320, %r10927, %r10926, 8;
	shf.r.wrap.b32 	%r11321, %r10926, %r10927, 8;
	mov.b64 	%rd5347, {%r11321, %r11320};
	shr.u64 	%rd5348, %rd4758, 7;
	xor.b64  	%rd5349, %rd5347, %rd5348;
	xor.b64  	%rd5350, %rd5349, %rd5346;
	add.s64 	%rd5351, %rd5350, %rd4745;
	add.s64 	%rd5352, %rd5351, %rd5262;
	add.s64 	%rd5353, %rd5352, %rd5345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11322,%dummy}, %rd5340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11323}, %rd5340;
	}
	shf.r.wrap.b32 	%r11324, %r11323, %r11322, 19;
	shf.r.wrap.b32 	%r11325, %r11322, %r11323, 19;
	mov.b64 	%rd5354, {%r11325, %r11324};
	shf.l.wrap.b32 	%r11326, %r11322, %r11323, 3;
	shf.l.wrap.b32 	%r11327, %r11323, %r11322, 3;
	mov.b64 	%rd5355, {%r11327, %r11326};
	shr.u64 	%rd5356, %rd5340, 6;
	xor.b64  	%rd5357, %rd5355, %rd5356;
	xor.b64  	%rd5358, %rd5357, %rd5354;
	shf.r.wrap.b32 	%r11328, %r10937, %r10936, 1;
	shf.r.wrap.b32 	%r11329, %r10936, %r10937, 1;
	mov.b64 	%rd5359, {%r11329, %r11328};
	shf.r.wrap.b32 	%r11330, %r10937, %r10936, 8;
	shf.r.wrap.b32 	%r11331, %r10936, %r10937, 8;
	mov.b64 	%rd5360, {%r11331, %r11330};
	shr.u64 	%rd5361, %rd4771, 7;
	xor.b64  	%rd5362, %rd5360, %rd5361;
	xor.b64  	%rd5363, %rd5362, %rd5359;
	add.s64 	%rd5364, %rd5363, %rd4758;
	add.s64 	%rd5365, %rd5364, %rd5275;
	add.s64 	%rd5366, %rd5365, %rd5358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11332,%dummy}, %rd5353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11333}, %rd5353;
	}
	shf.r.wrap.b32 	%r11334, %r11333, %r11332, 19;
	shf.r.wrap.b32 	%r11335, %r11332, %r11333, 19;
	mov.b64 	%rd5367, {%r11335, %r11334};
	shf.l.wrap.b32 	%r11336, %r11332, %r11333, 3;
	shf.l.wrap.b32 	%r11337, %r11333, %r11332, 3;
	mov.b64 	%rd5368, {%r11337, %r11336};
	shr.u64 	%rd5369, %rd5353, 6;
	xor.b64  	%rd5370, %rd5368, %rd5369;
	xor.b64  	%rd5371, %rd5370, %rd5367;
	shf.r.wrap.b32 	%r11338, %r11203, %r11202, 1;
	shf.r.wrap.b32 	%r11339, %r11202, %r11203, 1;
	mov.b64 	%rd5372, {%r11339, %r11338};
	shf.r.wrap.b32 	%r11340, %r11203, %r11202, 8;
	shf.r.wrap.b32 	%r11341, %r11202, %r11203, 8;
	mov.b64 	%rd5373, {%r11341, %r11340};
	shr.u64 	%rd5374, %rd4784, 7;
	xor.b64  	%rd5375, %rd5373, %rd5374;
	xor.b64  	%rd5376, %rd5375, %rd5372;
	add.s64 	%rd5377, %rd5376, %rd4771;
	add.s64 	%rd5378, %rd5377, %rd5288;
	add.s64 	%rd5379, %rd5378, %rd5371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11342,%dummy}, %rd5366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11343}, %rd5366;
	}
	shf.r.wrap.b32 	%r11344, %r11343, %r11342, 19;
	shf.r.wrap.b32 	%r11345, %r11342, %r11343, 19;
	mov.b64 	%rd5380, {%r11345, %r11344};
	shf.l.wrap.b32 	%r11346, %r11342, %r11343, 3;
	shf.l.wrap.b32 	%r11347, %r11343, %r11342, 3;
	mov.b64 	%rd5381, {%r11347, %r11346};
	shr.u64 	%rd5382, %rd5366, 6;
	xor.b64  	%rd5383, %rd5381, %rd5382;
	xor.b64  	%rd5384, %rd5383, %rd5380;
	shf.r.wrap.b32 	%r11348, %r11213, %r11212, 1;
	shf.r.wrap.b32 	%r11349, %r11212, %r11213, 1;
	mov.b64 	%rd5385, {%r11349, %r11348};
	shf.r.wrap.b32 	%r11350, %r11213, %r11212, 8;
	shf.r.wrap.b32 	%r11351, %r11212, %r11213, 8;
	mov.b64 	%rd5386, {%r11351, %r11350};
	shr.u64 	%rd5387, %rd4797, 7;
	xor.b64  	%rd5388, %rd5386, %rd5387;
	xor.b64  	%rd5389, %rd5388, %rd5385;
	add.s64 	%rd5390, %rd5389, %rd4784;
	add.s64 	%rd5391, %rd5390, %rd5301;
	add.s64 	%rd5392, %rd5391, %rd5384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11352,%dummy}, %rd5379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11353}, %rd5379;
	}
	shf.r.wrap.b32 	%r11354, %r11353, %r11352, 19;
	shf.r.wrap.b32 	%r11355, %r11352, %r11353, 19;
	mov.b64 	%rd5393, {%r11355, %r11354};
	shf.l.wrap.b32 	%r11356, %r11352, %r11353, 3;
	shf.l.wrap.b32 	%r11357, %r11353, %r11352, 3;
	mov.b64 	%rd5394, {%r11357, %r11356};
	shr.u64 	%rd5395, %rd5379, 6;
	xor.b64  	%rd5396, %rd5394, %rd5395;
	xor.b64  	%rd5397, %rd5396, %rd5393;
	shf.r.wrap.b32 	%r11358, %r11223, %r11222, 1;
	shf.r.wrap.b32 	%r11359, %r11222, %r11223, 1;
	mov.b64 	%rd5398, {%r11359, %r11358};
	shf.r.wrap.b32 	%r11360, %r11223, %r11222, 8;
	shf.r.wrap.b32 	%r11361, %r11222, %r11223, 8;
	mov.b64 	%rd5399, {%r11361, %r11360};
	shr.u64 	%rd5400, %rd5210, 7;
	xor.b64  	%rd5401, %rd5399, %rd5400;
	xor.b64  	%rd5402, %rd5401, %rd5398;
	add.s64 	%rd5403, %rd5402, %rd4797;
	add.s64 	%rd5404, %rd5403, %rd5314;
	add.s64 	%rd5405, %rd5404, %rd5397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11362,%dummy}, %rd5186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11363}, %rd5186;
	}
	shf.r.wrap.b32 	%r11364, %r11363, %r11362, 14;
	shf.r.wrap.b32 	%r11365, %r11362, %r11363, 14;
	mov.b64 	%rd5406, {%r11365, %r11364};
	shf.r.wrap.b32 	%r11366, %r11363, %r11362, 18;
	shf.r.wrap.b32 	%r11367, %r11362, %r11363, 18;
	mov.b64 	%rd5407, {%r11367, %r11366};
	xor.b64  	%rd5408, %rd5406, %rd5407;
	shf.l.wrap.b32 	%r11368, %r11362, %r11363, 23;
	shf.l.wrap.b32 	%r11369, %r11363, %r11362, 23;
	mov.b64 	%rd5409, {%r11369, %r11368};
	xor.b64  	%rd5410, %rd5408, %rd5409;
	xor.b64  	%rd5411, %rd5161, %rd5136;
	and.b64  	%rd5412, %rd5186, %rd5411;
	xor.b64  	%rd5413, %rd5412, %rd5136;
	add.s64 	%rd5414, %rd5413, %rd5111;
	add.s64 	%rd5415, %rd5414, %rd5410;
	add.s64 	%rd5416, %rd5415, %rd5210;
	ld.const.u64 	%rd5417, [k_sha512+512];
	add.s64 	%rd5418, %rd5416, %rd5417;
	add.s64 	%rd5419, %rd5418, %rd5122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11370,%dummy}, %rd5197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11371}, %rd5197;
	}
	shf.r.wrap.b32 	%r11372, %r11371, %r11370, 28;
	shf.r.wrap.b32 	%r11373, %r11370, %r11371, 28;
	mov.b64 	%rd5420, {%r11373, %r11372};
	shf.l.wrap.b32 	%r11374, %r11370, %r11371, 30;
	shf.l.wrap.b32 	%r11375, %r11371, %r11370, 30;
	mov.b64 	%rd5421, {%r11375, %r11374};
	xor.b64  	%rd5422, %rd5420, %rd5421;
	shf.l.wrap.b32 	%r11376, %r11370, %r11371, 25;
	shf.l.wrap.b32 	%r11377, %r11371, %r11370, 25;
	mov.b64 	%rd5423, {%r11377, %r11376};
	xor.b64  	%rd5424, %rd5422, %rd5423;
	and.b64  	%rd5425, %rd5197, %rd5172;
	xor.b64  	%rd5426, %rd5197, %rd5172;
	and.b64  	%rd5427, %rd5426, %rd5147;
	or.b64  	%rd5428, %rd5427, %rd5425;
	add.s64 	%rd5429, %rd5424, %rd5428;
	add.s64 	%rd5430, %rd5429, %rd5418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11378,%dummy}, %rd5419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11379}, %rd5419;
	}
	shf.r.wrap.b32 	%r11380, %r11379, %r11378, 14;
	shf.r.wrap.b32 	%r11381, %r11378, %r11379, 14;
	mov.b64 	%rd5431, {%r11381, %r11380};
	shf.r.wrap.b32 	%r11382, %r11379, %r11378, 18;
	shf.r.wrap.b32 	%r11383, %r11378, %r11379, 18;
	mov.b64 	%rd5432, {%r11383, %r11382};
	xor.b64  	%rd5433, %rd5431, %rd5432;
	shf.l.wrap.b32 	%r11384, %r11378, %r11379, 23;
	shf.l.wrap.b32 	%r11385, %r11379, %r11378, 23;
	mov.b64 	%rd5434, {%r11385, %r11384};
	xor.b64  	%rd5435, %rd5433, %rd5434;
	xor.b64  	%rd5436, %rd5186, %rd5161;
	and.b64  	%rd5437, %rd5419, %rd5436;
	xor.b64  	%rd5438, %rd5437, %rd5161;
	add.s64 	%rd5439, %rd5223, %rd5136;
	ld.const.u64 	%rd5440, [k_sha512+520];
	add.s64 	%rd5441, %rd5439, %rd5440;
	add.s64 	%rd5442, %rd5441, %rd5438;
	add.s64 	%rd5443, %rd5442, %rd5435;
	add.s64 	%rd5444, %rd5443, %rd5147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11386,%dummy}, %rd5430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11387}, %rd5430;
	}
	shf.r.wrap.b32 	%r11388, %r11387, %r11386, 28;
	shf.r.wrap.b32 	%r11389, %r11386, %r11387, 28;
	mov.b64 	%rd5445, {%r11389, %r11388};
	shf.l.wrap.b32 	%r11390, %r11386, %r11387, 30;
	shf.l.wrap.b32 	%r11391, %r11387, %r11386, 30;
	mov.b64 	%rd5446, {%r11391, %r11390};
	xor.b64  	%rd5447, %rd5445, %rd5446;
	shf.l.wrap.b32 	%r11392, %r11386, %r11387, 25;
	shf.l.wrap.b32 	%r11393, %r11387, %r11386, 25;
	mov.b64 	%rd5448, {%r11393, %r11392};
	xor.b64  	%rd5449, %rd5447, %rd5448;
	and.b64  	%rd5450, %rd5430, %rd5197;
	xor.b64  	%rd5451, %rd5430, %rd5197;
	and.b64  	%rd5452, %rd5451, %rd5172;
	or.b64  	%rd5453, %rd5452, %rd5450;
	add.s64 	%rd5454, %rd5449, %rd5453;
	add.s64 	%rd5455, %rd5454, %rd5443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11394,%dummy}, %rd5444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11395}, %rd5444;
	}
	shf.r.wrap.b32 	%r11396, %r11395, %r11394, 14;
	shf.r.wrap.b32 	%r11397, %r11394, %r11395, 14;
	mov.b64 	%rd5456, {%r11397, %r11396};
	shf.r.wrap.b32 	%r11398, %r11395, %r11394, 18;
	shf.r.wrap.b32 	%r11399, %r11394, %r11395, 18;
	mov.b64 	%rd5457, {%r11399, %r11398};
	xor.b64  	%rd5458, %rd5456, %rd5457;
	shf.l.wrap.b32 	%r11400, %r11394, %r11395, 23;
	shf.l.wrap.b32 	%r11401, %r11395, %r11394, 23;
	mov.b64 	%rd5459, {%r11401, %r11400};
	xor.b64  	%rd5460, %rd5458, %rd5459;
	xor.b64  	%rd5461, %rd5419, %rd5186;
	and.b64  	%rd5462, %rd5444, %rd5461;
	xor.b64  	%rd5463, %rd5462, %rd5186;
	add.s64 	%rd5464, %rd5236, %rd5161;
	ld.const.u64 	%rd5465, [k_sha512+528];
	add.s64 	%rd5466, %rd5464, %rd5465;
	add.s64 	%rd5467, %rd5466, %rd5463;
	add.s64 	%rd5468, %rd5467, %rd5460;
	add.s64 	%rd5469, %rd5468, %rd5172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11402,%dummy}, %rd5455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11403}, %rd5455;
	}
	shf.r.wrap.b32 	%r11404, %r11403, %r11402, 28;
	shf.r.wrap.b32 	%r11405, %r11402, %r11403, 28;
	mov.b64 	%rd5470, {%r11405, %r11404};
	shf.l.wrap.b32 	%r11406, %r11402, %r11403, 30;
	shf.l.wrap.b32 	%r11407, %r11403, %r11402, 30;
	mov.b64 	%rd5471, {%r11407, %r11406};
	xor.b64  	%rd5472, %rd5470, %rd5471;
	shf.l.wrap.b32 	%r11408, %r11402, %r11403, 25;
	shf.l.wrap.b32 	%r11409, %r11403, %r11402, 25;
	mov.b64 	%rd5473, {%r11409, %r11408};
	xor.b64  	%rd5474, %rd5472, %rd5473;
	and.b64  	%rd5475, %rd5455, %rd5430;
	xor.b64  	%rd5476, %rd5455, %rd5430;
	and.b64  	%rd5477, %rd5476, %rd5197;
	or.b64  	%rd5478, %rd5477, %rd5475;
	add.s64 	%rd5479, %rd5474, %rd5478;
	add.s64 	%rd5480, %rd5479, %rd5468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11410,%dummy}, %rd5469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11411}, %rd5469;
	}
	shf.r.wrap.b32 	%r11412, %r11411, %r11410, 14;
	shf.r.wrap.b32 	%r11413, %r11410, %r11411, 14;
	mov.b64 	%rd5481, {%r11413, %r11412};
	shf.r.wrap.b32 	%r11414, %r11411, %r11410, 18;
	shf.r.wrap.b32 	%r11415, %r11410, %r11411, 18;
	mov.b64 	%rd5482, {%r11415, %r11414};
	xor.b64  	%rd5483, %rd5481, %rd5482;
	shf.l.wrap.b32 	%r11416, %r11410, %r11411, 23;
	shf.l.wrap.b32 	%r11417, %r11411, %r11410, 23;
	mov.b64 	%rd5484, {%r11417, %r11416};
	xor.b64  	%rd5485, %rd5483, %rd5484;
	xor.b64  	%rd5486, %rd5444, %rd5419;
	and.b64  	%rd5487, %rd5469, %rd5486;
	xor.b64  	%rd5488, %rd5487, %rd5419;
	add.s64 	%rd5489, %rd5249, %rd5186;
	ld.const.u64 	%rd5490, [k_sha512+536];
	add.s64 	%rd5491, %rd5489, %rd5490;
	add.s64 	%rd5492, %rd5491, %rd5488;
	add.s64 	%rd5493, %rd5492, %rd5485;
	add.s64 	%rd5494, %rd5493, %rd5197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11418,%dummy}, %rd5480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11419}, %rd5480;
	}
	shf.r.wrap.b32 	%r11420, %r11419, %r11418, 28;
	shf.r.wrap.b32 	%r11421, %r11418, %r11419, 28;
	mov.b64 	%rd5495, {%r11421, %r11420};
	shf.l.wrap.b32 	%r11422, %r11418, %r11419, 30;
	shf.l.wrap.b32 	%r11423, %r11419, %r11418, 30;
	mov.b64 	%rd5496, {%r11423, %r11422};
	xor.b64  	%rd5497, %rd5495, %rd5496;
	shf.l.wrap.b32 	%r11424, %r11418, %r11419, 25;
	shf.l.wrap.b32 	%r11425, %r11419, %r11418, 25;
	mov.b64 	%rd5498, {%r11425, %r11424};
	xor.b64  	%rd5499, %rd5497, %rd5498;
	and.b64  	%rd5500, %rd5480, %rd5455;
	xor.b64  	%rd5501, %rd5480, %rd5455;
	and.b64  	%rd5502, %rd5501, %rd5430;
	or.b64  	%rd5503, %rd5502, %rd5500;
	add.s64 	%rd5504, %rd5499, %rd5503;
	add.s64 	%rd5505, %rd5504, %rd5493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11426,%dummy}, %rd5494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11427}, %rd5494;
	}
	shf.r.wrap.b32 	%r11428, %r11427, %r11426, 14;
	shf.r.wrap.b32 	%r11429, %r11426, %r11427, 14;
	mov.b64 	%rd5506, {%r11429, %r11428};
	shf.r.wrap.b32 	%r11430, %r11427, %r11426, 18;
	shf.r.wrap.b32 	%r11431, %r11426, %r11427, 18;
	mov.b64 	%rd5507, {%r11431, %r11430};
	xor.b64  	%rd5508, %rd5506, %rd5507;
	shf.l.wrap.b32 	%r11432, %r11426, %r11427, 23;
	shf.l.wrap.b32 	%r11433, %r11427, %r11426, 23;
	mov.b64 	%rd5509, {%r11433, %r11432};
	xor.b64  	%rd5510, %rd5508, %rd5509;
	xor.b64  	%rd5511, %rd5469, %rd5444;
	and.b64  	%rd5512, %rd5494, %rd5511;
	xor.b64  	%rd5513, %rd5512, %rd5444;
	add.s64 	%rd5514, %rd5419, %rd5262;
	ld.const.u64 	%rd5515, [k_sha512+544];
	add.s64 	%rd5516, %rd5514, %rd5515;
	add.s64 	%rd5517, %rd5516, %rd5513;
	add.s64 	%rd5518, %rd5517, %rd5510;
	add.s64 	%rd5519, %rd5518, %rd5430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11434,%dummy}, %rd5505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11435}, %rd5505;
	}
	shf.r.wrap.b32 	%r11436, %r11435, %r11434, 28;
	shf.r.wrap.b32 	%r11437, %r11434, %r11435, 28;
	mov.b64 	%rd5520, {%r11437, %r11436};
	shf.l.wrap.b32 	%r11438, %r11434, %r11435, 30;
	shf.l.wrap.b32 	%r11439, %r11435, %r11434, 30;
	mov.b64 	%rd5521, {%r11439, %r11438};
	xor.b64  	%rd5522, %rd5520, %rd5521;
	shf.l.wrap.b32 	%r11440, %r11434, %r11435, 25;
	shf.l.wrap.b32 	%r11441, %r11435, %r11434, 25;
	mov.b64 	%rd5523, {%r11441, %r11440};
	xor.b64  	%rd5524, %rd5522, %rd5523;
	and.b64  	%rd5525, %rd5505, %rd5480;
	xor.b64  	%rd5526, %rd5505, %rd5480;
	and.b64  	%rd5527, %rd5526, %rd5455;
	or.b64  	%rd5528, %rd5527, %rd5525;
	add.s64 	%rd5529, %rd5524, %rd5528;
	add.s64 	%rd5530, %rd5529, %rd5518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11442,%dummy}, %rd5519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11443}, %rd5519;
	}
	shf.r.wrap.b32 	%r11444, %r11443, %r11442, 14;
	shf.r.wrap.b32 	%r11445, %r11442, %r11443, 14;
	mov.b64 	%rd5531, {%r11445, %r11444};
	shf.r.wrap.b32 	%r11446, %r11443, %r11442, 18;
	shf.r.wrap.b32 	%r11447, %r11442, %r11443, 18;
	mov.b64 	%rd5532, {%r11447, %r11446};
	xor.b64  	%rd5533, %rd5531, %rd5532;
	shf.l.wrap.b32 	%r11448, %r11442, %r11443, 23;
	shf.l.wrap.b32 	%r11449, %r11443, %r11442, 23;
	mov.b64 	%rd5534, {%r11449, %r11448};
	xor.b64  	%rd5535, %rd5533, %rd5534;
	xor.b64  	%rd5536, %rd5494, %rd5469;
	and.b64  	%rd5537, %rd5519, %rd5536;
	xor.b64  	%rd5538, %rd5537, %rd5469;
	ld.const.u64 	%rd5539, [k_sha512+552];
	add.s64 	%rd5540, %rd5539, %rd5275;
	add.s64 	%rd5541, %rd5540, %rd5444;
	add.s64 	%rd5542, %rd5541, %rd5538;
	add.s64 	%rd5543, %rd5542, %rd5535;
	add.s64 	%rd5544, %rd5543, %rd5455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11450,%dummy}, %rd5530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11451}, %rd5530;
	}
	shf.r.wrap.b32 	%r11452, %r11451, %r11450, 28;
	shf.r.wrap.b32 	%r11453, %r11450, %r11451, 28;
	mov.b64 	%rd5545, {%r11453, %r11452};
	shf.l.wrap.b32 	%r11454, %r11450, %r11451, 30;
	shf.l.wrap.b32 	%r11455, %r11451, %r11450, 30;
	mov.b64 	%rd5546, {%r11455, %r11454};
	xor.b64  	%rd5547, %rd5545, %rd5546;
	shf.l.wrap.b32 	%r11456, %r11450, %r11451, 25;
	shf.l.wrap.b32 	%r11457, %r11451, %r11450, 25;
	mov.b64 	%rd5548, {%r11457, %r11456};
	xor.b64  	%rd5549, %rd5547, %rd5548;
	and.b64  	%rd5550, %rd5530, %rd5505;
	xor.b64  	%rd5551, %rd5530, %rd5505;
	and.b64  	%rd5552, %rd5551, %rd5480;
	or.b64  	%rd5553, %rd5552, %rd5550;
	add.s64 	%rd5554, %rd5549, %rd5553;
	add.s64 	%rd5555, %rd5554, %rd5543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11458,%dummy}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11459}, %rd5544;
	}
	shf.r.wrap.b32 	%r11460, %r11459, %r11458, 14;
	shf.r.wrap.b32 	%r11461, %r11458, %r11459, 14;
	mov.b64 	%rd5556, {%r11461, %r11460};
	shf.r.wrap.b32 	%r11462, %r11459, %r11458, 18;
	shf.r.wrap.b32 	%r11463, %r11458, %r11459, 18;
	mov.b64 	%rd5557, {%r11463, %r11462};
	xor.b64  	%rd5558, %rd5556, %rd5557;
	shf.l.wrap.b32 	%r11464, %r11458, %r11459, 23;
	shf.l.wrap.b32 	%r11465, %r11459, %r11458, 23;
	mov.b64 	%rd5559, {%r11465, %r11464};
	xor.b64  	%rd5560, %rd5558, %rd5559;
	xor.b64  	%rd5561, %rd5519, %rd5494;
	and.b64  	%rd5562, %rd5544, %rd5561;
	xor.b64  	%rd5563, %rd5562, %rd5494;
	ld.const.u64 	%rd5564, [k_sha512+560];
	add.s64 	%rd5565, %rd5564, %rd5288;
	add.s64 	%rd5566, %rd5565, %rd5469;
	add.s64 	%rd5567, %rd5566, %rd5563;
	add.s64 	%rd5568, %rd5567, %rd5560;
	add.s64 	%rd5569, %rd5568, %rd5480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11466,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11467}, %rd5555;
	}
	shf.r.wrap.b32 	%r11468, %r11467, %r11466, 28;
	shf.r.wrap.b32 	%r11469, %r11466, %r11467, 28;
	mov.b64 	%rd5570, {%r11469, %r11468};
	shf.l.wrap.b32 	%r11470, %r11466, %r11467, 30;
	shf.l.wrap.b32 	%r11471, %r11467, %r11466, 30;
	mov.b64 	%rd5571, {%r11471, %r11470};
	xor.b64  	%rd5572, %rd5570, %rd5571;
	shf.l.wrap.b32 	%r11472, %r11466, %r11467, 25;
	shf.l.wrap.b32 	%r11473, %r11467, %r11466, 25;
	mov.b64 	%rd5573, {%r11473, %r11472};
	xor.b64  	%rd5574, %rd5572, %rd5573;
	and.b64  	%rd5575, %rd5555, %rd5530;
	xor.b64  	%rd5576, %rd5555, %rd5530;
	and.b64  	%rd5577, %rd5576, %rd5505;
	or.b64  	%rd5578, %rd5577, %rd5575;
	add.s64 	%rd5579, %rd5574, %rd5578;
	add.s64 	%rd5580, %rd5579, %rd5568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11474,%dummy}, %rd5569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11475}, %rd5569;
	}
	shf.r.wrap.b32 	%r11476, %r11475, %r11474, 14;
	shf.r.wrap.b32 	%r11477, %r11474, %r11475, 14;
	mov.b64 	%rd5581, {%r11477, %r11476};
	shf.r.wrap.b32 	%r11478, %r11475, %r11474, 18;
	shf.r.wrap.b32 	%r11479, %r11474, %r11475, 18;
	mov.b64 	%rd5582, {%r11479, %r11478};
	xor.b64  	%rd5583, %rd5581, %rd5582;
	shf.l.wrap.b32 	%r11480, %r11474, %r11475, 23;
	shf.l.wrap.b32 	%r11481, %r11475, %r11474, 23;
	mov.b64 	%rd5584, {%r11481, %r11480};
	xor.b64  	%rd5585, %rd5583, %rd5584;
	xor.b64  	%rd5586, %rd5544, %rd5519;
	and.b64  	%rd5587, %rd5569, %rd5586;
	xor.b64  	%rd5588, %rd5587, %rd5519;
	ld.const.u64 	%rd5589, [k_sha512+568];
	add.s64 	%rd5590, %rd5589, %rd5301;
	add.s64 	%rd5591, %rd5590, %rd5494;
	add.s64 	%rd5592, %rd5591, %rd5588;
	add.s64 	%rd5593, %rd5592, %rd5585;
	add.s64 	%rd5594, %rd5593, %rd5505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11482,%dummy}, %rd5580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11483}, %rd5580;
	}
	shf.r.wrap.b32 	%r11484, %r11483, %r11482, 28;
	shf.r.wrap.b32 	%r11485, %r11482, %r11483, 28;
	mov.b64 	%rd5595, {%r11485, %r11484};
	shf.l.wrap.b32 	%r11486, %r11482, %r11483, 30;
	shf.l.wrap.b32 	%r11487, %r11483, %r11482, 30;
	mov.b64 	%rd5596, {%r11487, %r11486};
	xor.b64  	%rd5597, %rd5595, %rd5596;
	shf.l.wrap.b32 	%r11488, %r11482, %r11483, 25;
	shf.l.wrap.b32 	%r11489, %r11483, %r11482, 25;
	mov.b64 	%rd5598, {%r11489, %r11488};
	xor.b64  	%rd5599, %rd5597, %rd5598;
	and.b64  	%rd5600, %rd5580, %rd5555;
	xor.b64  	%rd5601, %rd5580, %rd5555;
	and.b64  	%rd5602, %rd5601, %rd5530;
	or.b64  	%rd5603, %rd5602, %rd5600;
	add.s64 	%rd5604, %rd5599, %rd5603;
	add.s64 	%rd5605, %rd5604, %rd5593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11490,%dummy}, %rd5594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11491}, %rd5594;
	}
	shf.r.wrap.b32 	%r11492, %r11491, %r11490, 14;
	shf.r.wrap.b32 	%r11493, %r11490, %r11491, 14;
	mov.b64 	%rd5606, {%r11493, %r11492};
	shf.r.wrap.b32 	%r11494, %r11491, %r11490, 18;
	shf.r.wrap.b32 	%r11495, %r11490, %r11491, 18;
	mov.b64 	%rd5607, {%r11495, %r11494};
	xor.b64  	%rd5608, %rd5606, %rd5607;
	shf.l.wrap.b32 	%r11496, %r11490, %r11491, 23;
	shf.l.wrap.b32 	%r11497, %r11491, %r11490, 23;
	mov.b64 	%rd5609, {%r11497, %r11496};
	xor.b64  	%rd5610, %rd5608, %rd5609;
	xor.b64  	%rd5611, %rd5569, %rd5544;
	and.b64  	%rd5612, %rd5594, %rd5611;
	xor.b64  	%rd5613, %rd5612, %rd5544;
	ld.const.u64 	%rd5614, [k_sha512+576];
	add.s64 	%rd5615, %rd5614, %rd5314;
	add.s64 	%rd5616, %rd5615, %rd5519;
	add.s64 	%rd5617, %rd5616, %rd5613;
	add.s64 	%rd5618, %rd5617, %rd5610;
	add.s64 	%rd5619, %rd5618, %rd5530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11498,%dummy}, %rd5605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11499}, %rd5605;
	}
	shf.r.wrap.b32 	%r11500, %r11499, %r11498, 28;
	shf.r.wrap.b32 	%r11501, %r11498, %r11499, 28;
	mov.b64 	%rd5620, {%r11501, %r11500};
	shf.l.wrap.b32 	%r11502, %r11498, %r11499, 30;
	shf.l.wrap.b32 	%r11503, %r11499, %r11498, 30;
	mov.b64 	%rd5621, {%r11503, %r11502};
	xor.b64  	%rd5622, %rd5620, %rd5621;
	shf.l.wrap.b32 	%r11504, %r11498, %r11499, 25;
	shf.l.wrap.b32 	%r11505, %r11499, %r11498, 25;
	mov.b64 	%rd5623, {%r11505, %r11504};
	xor.b64  	%rd5624, %rd5622, %rd5623;
	and.b64  	%rd5625, %rd5605, %rd5580;
	xor.b64  	%rd5626, %rd5605, %rd5580;
	and.b64  	%rd5627, %rd5626, %rd5555;
	or.b64  	%rd5628, %rd5627, %rd5625;
	add.s64 	%rd5629, %rd5624, %rd5628;
	add.s64 	%rd5630, %rd5629, %rd5618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11506,%dummy}, %rd5619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11507}, %rd5619;
	}
	shf.r.wrap.b32 	%r11508, %r11507, %r11506, 14;
	shf.r.wrap.b32 	%r11509, %r11506, %r11507, 14;
	mov.b64 	%rd5631, {%r11509, %r11508};
	shf.r.wrap.b32 	%r11510, %r11507, %r11506, 18;
	shf.r.wrap.b32 	%r11511, %r11506, %r11507, 18;
	mov.b64 	%rd5632, {%r11511, %r11510};
	xor.b64  	%rd5633, %rd5631, %rd5632;
	shf.l.wrap.b32 	%r11512, %r11506, %r11507, 23;
	shf.l.wrap.b32 	%r11513, %r11507, %r11506, 23;
	mov.b64 	%rd5634, {%r11513, %r11512};
	xor.b64  	%rd5635, %rd5633, %rd5634;
	xor.b64  	%rd5636, %rd5594, %rd5569;
	and.b64  	%rd5637, %rd5619, %rd5636;
	xor.b64  	%rd5638, %rd5637, %rd5569;
	ld.const.u64 	%rd5639, [k_sha512+584];
	add.s64 	%rd5640, %rd5639, %rd5327;
	add.s64 	%rd5641, %rd5640, %rd5544;
	add.s64 	%rd5642, %rd5641, %rd5638;
	add.s64 	%rd5643, %rd5642, %rd5635;
	add.s64 	%rd5644, %rd5643, %rd5555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11514,%dummy}, %rd5630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11515}, %rd5630;
	}
	shf.r.wrap.b32 	%r11516, %r11515, %r11514, 28;
	shf.r.wrap.b32 	%r11517, %r11514, %r11515, 28;
	mov.b64 	%rd5645, {%r11517, %r11516};
	shf.l.wrap.b32 	%r11518, %r11514, %r11515, 30;
	shf.l.wrap.b32 	%r11519, %r11515, %r11514, 30;
	mov.b64 	%rd5646, {%r11519, %r11518};
	xor.b64  	%rd5647, %rd5645, %rd5646;
	shf.l.wrap.b32 	%r11520, %r11514, %r11515, 25;
	shf.l.wrap.b32 	%r11521, %r11515, %r11514, 25;
	mov.b64 	%rd5648, {%r11521, %r11520};
	xor.b64  	%rd5649, %rd5647, %rd5648;
	and.b64  	%rd5650, %rd5630, %rd5605;
	xor.b64  	%rd5651, %rd5630, %rd5605;
	and.b64  	%rd5652, %rd5651, %rd5580;
	or.b64  	%rd5653, %rd5652, %rd5650;
	add.s64 	%rd5654, %rd5649, %rd5653;
	add.s64 	%rd5655, %rd5654, %rd5643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11522,%dummy}, %rd5644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11523}, %rd5644;
	}
	shf.r.wrap.b32 	%r11524, %r11523, %r11522, 14;
	shf.r.wrap.b32 	%r11525, %r11522, %r11523, 14;
	mov.b64 	%rd5656, {%r11525, %r11524};
	shf.r.wrap.b32 	%r11526, %r11523, %r11522, 18;
	shf.r.wrap.b32 	%r11527, %r11522, %r11523, 18;
	mov.b64 	%rd5657, {%r11527, %r11526};
	xor.b64  	%rd5658, %rd5656, %rd5657;
	shf.l.wrap.b32 	%r11528, %r11522, %r11523, 23;
	shf.l.wrap.b32 	%r11529, %r11523, %r11522, 23;
	mov.b64 	%rd5659, {%r11529, %r11528};
	xor.b64  	%rd5660, %rd5658, %rd5659;
	xor.b64  	%rd5661, %rd5619, %rd5594;
	and.b64  	%rd5662, %rd5644, %rd5661;
	xor.b64  	%rd5663, %rd5662, %rd5594;
	ld.const.u64 	%rd5664, [k_sha512+592];
	add.s64 	%rd5665, %rd5664, %rd5340;
	add.s64 	%rd5666, %rd5665, %rd5569;
	add.s64 	%rd5667, %rd5666, %rd5663;
	add.s64 	%rd5668, %rd5667, %rd5660;
	add.s64 	%rd5669, %rd5668, %rd5580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11530,%dummy}, %rd5655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11531}, %rd5655;
	}
	shf.r.wrap.b32 	%r11532, %r11531, %r11530, 28;
	shf.r.wrap.b32 	%r11533, %r11530, %r11531, 28;
	mov.b64 	%rd5670, {%r11533, %r11532};
	shf.l.wrap.b32 	%r11534, %r11530, %r11531, 30;
	shf.l.wrap.b32 	%r11535, %r11531, %r11530, 30;
	mov.b64 	%rd5671, {%r11535, %r11534};
	xor.b64  	%rd5672, %rd5670, %rd5671;
	shf.l.wrap.b32 	%r11536, %r11530, %r11531, 25;
	shf.l.wrap.b32 	%r11537, %r11531, %r11530, 25;
	mov.b64 	%rd5673, {%r11537, %r11536};
	xor.b64  	%rd5674, %rd5672, %rd5673;
	and.b64  	%rd5675, %rd5655, %rd5630;
	xor.b64  	%rd5676, %rd5655, %rd5630;
	and.b64  	%rd5677, %rd5676, %rd5605;
	or.b64  	%rd5678, %rd5677, %rd5675;
	add.s64 	%rd5679, %rd5674, %rd5678;
	add.s64 	%rd5680, %rd5679, %rd5668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11538,%dummy}, %rd5669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11539}, %rd5669;
	}
	shf.r.wrap.b32 	%r11540, %r11539, %r11538, 14;
	shf.r.wrap.b32 	%r11541, %r11538, %r11539, 14;
	mov.b64 	%rd5681, {%r11541, %r11540};
	shf.r.wrap.b32 	%r11542, %r11539, %r11538, 18;
	shf.r.wrap.b32 	%r11543, %r11538, %r11539, 18;
	mov.b64 	%rd5682, {%r11543, %r11542};
	xor.b64  	%rd5683, %rd5681, %rd5682;
	shf.l.wrap.b32 	%r11544, %r11538, %r11539, 23;
	shf.l.wrap.b32 	%r11545, %r11539, %r11538, 23;
	mov.b64 	%rd5684, {%r11545, %r11544};
	xor.b64  	%rd5685, %rd5683, %rd5684;
	xor.b64  	%rd5686, %rd5644, %rd5619;
	and.b64  	%rd5687, %rd5669, %rd5686;
	xor.b64  	%rd5688, %rd5687, %rd5619;
	ld.const.u64 	%rd5689, [k_sha512+600];
	add.s64 	%rd5690, %rd5689, %rd5353;
	add.s64 	%rd5691, %rd5690, %rd5594;
	add.s64 	%rd5692, %rd5691, %rd5688;
	add.s64 	%rd5693, %rd5692, %rd5685;
	add.s64 	%rd5694, %rd5693, %rd5605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11546,%dummy}, %rd5680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11547}, %rd5680;
	}
	shf.r.wrap.b32 	%r11548, %r11547, %r11546, 28;
	shf.r.wrap.b32 	%r11549, %r11546, %r11547, 28;
	mov.b64 	%rd5695, {%r11549, %r11548};
	shf.l.wrap.b32 	%r11550, %r11546, %r11547, 30;
	shf.l.wrap.b32 	%r11551, %r11547, %r11546, 30;
	mov.b64 	%rd5696, {%r11551, %r11550};
	xor.b64  	%rd5697, %rd5695, %rd5696;
	shf.l.wrap.b32 	%r11552, %r11546, %r11547, 25;
	shf.l.wrap.b32 	%r11553, %r11547, %r11546, 25;
	mov.b64 	%rd5698, {%r11553, %r11552};
	xor.b64  	%rd5699, %rd5697, %rd5698;
	and.b64  	%rd5700, %rd5680, %rd5655;
	xor.b64  	%rd5701, %rd5680, %rd5655;
	and.b64  	%rd5702, %rd5701, %rd5630;
	or.b64  	%rd5703, %rd5702, %rd5700;
	add.s64 	%rd5704, %rd5699, %rd5703;
	add.s64 	%rd5705, %rd5704, %rd5693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11554,%dummy}, %rd5694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11555}, %rd5694;
	}
	shf.r.wrap.b32 	%r11556, %r11555, %r11554, 14;
	shf.r.wrap.b32 	%r11557, %r11554, %r11555, 14;
	mov.b64 	%rd5706, {%r11557, %r11556};
	shf.r.wrap.b32 	%r11558, %r11555, %r11554, 18;
	shf.r.wrap.b32 	%r11559, %r11554, %r11555, 18;
	mov.b64 	%rd5707, {%r11559, %r11558};
	xor.b64  	%rd5708, %rd5706, %rd5707;
	shf.l.wrap.b32 	%r11560, %r11554, %r11555, 23;
	shf.l.wrap.b32 	%r11561, %r11555, %r11554, 23;
	mov.b64 	%rd5709, {%r11561, %r11560};
	xor.b64  	%rd5710, %rd5708, %rd5709;
	xor.b64  	%rd5711, %rd5669, %rd5644;
	and.b64  	%rd5712, %rd5694, %rd5711;
	xor.b64  	%rd5713, %rd5712, %rd5644;
	ld.const.u64 	%rd5714, [k_sha512+608];
	add.s64 	%rd5715, %rd5714, %rd5366;
	add.s64 	%rd5716, %rd5715, %rd5619;
	add.s64 	%rd5717, %rd5716, %rd5713;
	add.s64 	%rd5718, %rd5717, %rd5710;
	add.s64 	%rd5719, %rd5718, %rd5630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11562,%dummy}, %rd5705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11563}, %rd5705;
	}
	shf.r.wrap.b32 	%r11564, %r11563, %r11562, 28;
	shf.r.wrap.b32 	%r11565, %r11562, %r11563, 28;
	mov.b64 	%rd5720, {%r11565, %r11564};
	shf.l.wrap.b32 	%r11566, %r11562, %r11563, 30;
	shf.l.wrap.b32 	%r11567, %r11563, %r11562, 30;
	mov.b64 	%rd5721, {%r11567, %r11566};
	xor.b64  	%rd5722, %rd5720, %rd5721;
	shf.l.wrap.b32 	%r11568, %r11562, %r11563, 25;
	shf.l.wrap.b32 	%r11569, %r11563, %r11562, 25;
	mov.b64 	%rd5723, {%r11569, %r11568};
	xor.b64  	%rd5724, %rd5722, %rd5723;
	and.b64  	%rd5725, %rd5705, %rd5680;
	xor.b64  	%rd5726, %rd5705, %rd5680;
	and.b64  	%rd5727, %rd5726, %rd5655;
	or.b64  	%rd5728, %rd5727, %rd5725;
	add.s64 	%rd5729, %rd5724, %rd5728;
	add.s64 	%rd5730, %rd5729, %rd5718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11570,%dummy}, %rd5719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11571}, %rd5719;
	}
	shf.r.wrap.b32 	%r11572, %r11571, %r11570, 14;
	shf.r.wrap.b32 	%r11573, %r11570, %r11571, 14;
	mov.b64 	%rd5731, {%r11573, %r11572};
	shf.r.wrap.b32 	%r11574, %r11571, %r11570, 18;
	shf.r.wrap.b32 	%r11575, %r11570, %r11571, 18;
	mov.b64 	%rd5732, {%r11575, %r11574};
	xor.b64  	%rd5733, %rd5731, %rd5732;
	shf.l.wrap.b32 	%r11576, %r11570, %r11571, 23;
	shf.l.wrap.b32 	%r11577, %r11571, %r11570, 23;
	mov.b64 	%rd5734, {%r11577, %r11576};
	xor.b64  	%rd5735, %rd5733, %rd5734;
	xor.b64  	%rd5736, %rd5694, %rd5669;
	and.b64  	%rd5737, %rd5719, %rd5736;
	xor.b64  	%rd5738, %rd5737, %rd5669;
	ld.const.u64 	%rd5739, [k_sha512+616];
	add.s64 	%rd5740, %rd5739, %rd5379;
	add.s64 	%rd5741, %rd5740, %rd5644;
	add.s64 	%rd5742, %rd5741, %rd5738;
	add.s64 	%rd5743, %rd5742, %rd5735;
	add.s64 	%rd5744, %rd5743, %rd5655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11578,%dummy}, %rd5730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11579}, %rd5730;
	}
	shf.r.wrap.b32 	%r11580, %r11579, %r11578, 28;
	shf.r.wrap.b32 	%r11581, %r11578, %r11579, 28;
	mov.b64 	%rd5745, {%r11581, %r11580};
	shf.l.wrap.b32 	%r11582, %r11578, %r11579, 30;
	shf.l.wrap.b32 	%r11583, %r11579, %r11578, 30;
	mov.b64 	%rd5746, {%r11583, %r11582};
	xor.b64  	%rd5747, %rd5745, %rd5746;
	shf.l.wrap.b32 	%r11584, %r11578, %r11579, 25;
	shf.l.wrap.b32 	%r11585, %r11579, %r11578, 25;
	mov.b64 	%rd5748, {%r11585, %r11584};
	xor.b64  	%rd5749, %rd5747, %rd5748;
	and.b64  	%rd5750, %rd5730, %rd5705;
	xor.b64  	%rd5751, %rd5730, %rd5705;
	and.b64  	%rd5752, %rd5751, %rd5680;
	or.b64  	%rd5753, %rd5752, %rd5750;
	add.s64 	%rd5754, %rd5749, %rd5753;
	add.s64 	%rd5755, %rd5754, %rd5743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11586,%dummy}, %rd5744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11587}, %rd5744;
	}
	shf.r.wrap.b32 	%r11588, %r11587, %r11586, 14;
	shf.r.wrap.b32 	%r11589, %r11586, %r11587, 14;
	mov.b64 	%rd5756, {%r11589, %r11588};
	shf.r.wrap.b32 	%r11590, %r11587, %r11586, 18;
	shf.r.wrap.b32 	%r11591, %r11586, %r11587, 18;
	mov.b64 	%rd5757, {%r11591, %r11590};
	xor.b64  	%rd5758, %rd5756, %rd5757;
	shf.l.wrap.b32 	%r11592, %r11586, %r11587, 23;
	shf.l.wrap.b32 	%r11593, %r11587, %r11586, 23;
	mov.b64 	%rd5759, {%r11593, %r11592};
	xor.b64  	%rd5760, %rd5758, %rd5759;
	xor.b64  	%rd5761, %rd5719, %rd5694;
	and.b64  	%rd5762, %rd5744, %rd5761;
	xor.b64  	%rd5763, %rd5762, %rd5694;
	ld.const.u64 	%rd5764, [k_sha512+624];
	add.s64 	%rd5765, %rd5764, %rd5392;
	add.s64 	%rd5766, %rd5765, %rd5669;
	add.s64 	%rd5767, %rd5766, %rd5763;
	add.s64 	%rd5768, %rd5767, %rd5760;
	add.s64 	%rd5769, %rd5768, %rd5680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11594,%dummy}, %rd5755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11595}, %rd5755;
	}
	shf.r.wrap.b32 	%r11596, %r11595, %r11594, 28;
	shf.r.wrap.b32 	%r11597, %r11594, %r11595, 28;
	mov.b64 	%rd5770, {%r11597, %r11596};
	shf.l.wrap.b32 	%r11598, %r11594, %r11595, 30;
	shf.l.wrap.b32 	%r11599, %r11595, %r11594, 30;
	mov.b64 	%rd5771, {%r11599, %r11598};
	xor.b64  	%rd5772, %rd5770, %rd5771;
	shf.l.wrap.b32 	%r11600, %r11594, %r11595, 25;
	shf.l.wrap.b32 	%r11601, %r11595, %r11594, 25;
	mov.b64 	%rd5773, {%r11601, %r11600};
	xor.b64  	%rd5774, %rd5772, %rd5773;
	and.b64  	%rd5775, %rd5755, %rd5730;
	xor.b64  	%rd5776, %rd5755, %rd5730;
	and.b64  	%rd5777, %rd5776, %rd5705;
	or.b64  	%rd5778, %rd5777, %rd5775;
	add.s64 	%rd5779, %rd5774, %rd5778;
	add.s64 	%rd5780, %rd5779, %rd5768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11602,%dummy}, %rd5769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11603}, %rd5769;
	}
	shf.r.wrap.b32 	%r11604, %r11603, %r11602, 14;
	shf.r.wrap.b32 	%r11605, %r11602, %r11603, 14;
	mov.b64 	%rd5781, {%r11605, %r11604};
	shf.r.wrap.b32 	%r11606, %r11603, %r11602, 18;
	shf.r.wrap.b32 	%r11607, %r11602, %r11603, 18;
	mov.b64 	%rd5782, {%r11607, %r11606};
	xor.b64  	%rd5783, %rd5781, %rd5782;
	shf.l.wrap.b32 	%r11608, %r11602, %r11603, 23;
	shf.l.wrap.b32 	%r11609, %r11603, %r11602, 23;
	mov.b64 	%rd5784, {%r11609, %r11608};
	xor.b64  	%rd5785, %rd5783, %rd5784;
	xor.b64  	%rd5786, %rd5744, %rd5719;
	and.b64  	%rd5787, %rd5769, %rd5786;
	xor.b64  	%rd5788, %rd5787, %rd5719;
	ld.const.u64 	%rd5789, [k_sha512+632];
	add.s64 	%rd5790, %rd5789, %rd5405;
	add.s64 	%rd5791, %rd5790, %rd5694;
	add.s64 	%rd5792, %rd5791, %rd5788;
	add.s64 	%rd5793, %rd5792, %rd5785;
	add.s64 	%rd5794, %rd5793, %rd5705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11610,%dummy}, %rd5780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11611}, %rd5780;
	}
	shf.r.wrap.b32 	%r11612, %r11611, %r11610, 28;
	shf.r.wrap.b32 	%r11613, %r11610, %r11611, 28;
	mov.b64 	%rd5795, {%r11613, %r11612};
	shf.l.wrap.b32 	%r11614, %r11610, %r11611, 30;
	shf.l.wrap.b32 	%r11615, %r11611, %r11610, 30;
	mov.b64 	%rd5796, {%r11615, %r11614};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	shf.l.wrap.b32 	%r11616, %r11610, %r11611, 25;
	shf.l.wrap.b32 	%r11617, %r11611, %r11610, 25;
	mov.b64 	%rd5798, {%r11617, %r11616};
	xor.b64  	%rd5799, %rd5797, %rd5798;
	and.b64  	%rd5800, %rd5780, %rd5755;
	xor.b64  	%rd5801, %rd5780, %rd5755;
	and.b64  	%rd5802, %rd5801, %rd5730;
	or.b64  	%rd5803, %rd5802, %rd5800;
	add.s64 	%rd5804, %rd5799, %rd5803;
	add.s64 	%rd5805, %rd5804, %rd5793;
	add.s64 	%rd5806, %rd2985, %rd5805;
	st.local.u64 	[%rd10+-192], %rd5806;
	add.s64 	%rd5807, %rd2991, %rd5780;
	st.local.u64 	[%rd10+-184], %rd5807;
	add.s64 	%rd5808, %rd2994, %rd5755;
	st.local.u64 	[%rd10+-176], %rd5808;
	add.s64 	%rd5809, %rd2983, %rd5730;
	st.local.u64 	[%rd10+-168], %rd5809;
	add.s64 	%rd5810, %rd2966, %rd5794;
	st.local.u64 	[%rd10+-160], %rd5810;
	add.s64 	%rd5811, %rd2973, %rd5769;
	st.local.u64 	[%rd10+-152], %rd5811;
	add.s64 	%rd5812, %rd2972, %rd5744;
	st.local.u64 	[%rd10+-144], %rd5812;
	add.s64 	%rd5813, %rd2977, %rd5719;
	st.local.u64 	[%rd10+-136], %rd5813;
	mov.u64 	%rd5814, 0;
	st.local.u32 	[%rd10+-124], %rd5814;
	st.local.u32 	[%rd10+-128], %rd5814;
	st.local.u32 	[%rd10+-116], %rd5814;
	st.local.u32 	[%rd10+-120], %rd5814;
	st.local.u32 	[%rd10+-108], %rd5814;
	st.local.u32 	[%rd10+-112], %rd5814;
	st.local.u32 	[%rd10+-100], %rd5814;
	st.local.u32 	[%rd10+-104], %rd5814;
	st.local.u32 	[%rd10+-92], %rd5814;
	st.local.u32 	[%rd10+-96], %rd5814;
	st.local.u32 	[%rd10+-84], %rd5814;
	st.local.u32 	[%rd10+-88], %rd5814;
	st.local.u32 	[%rd10+-76], %rd5814;
	st.local.u32 	[%rd10+-80], %rd5814;
	st.local.u32 	[%rd10+-68], %rd5814;
	st.local.u32 	[%rd10+-72], %rd5814;
	st.local.u32 	[%rd10+-60], %rd5814;
	st.local.u32 	[%rd10+-64], %rd5814;
	st.local.u32 	[%rd10+-52], %rd5814;
	st.local.u32 	[%rd10+-56], %rd5814;
	st.local.u32 	[%rd10+-44], %rd5814;
	st.local.u32 	[%rd10+-48], %rd5814;
	st.local.u32 	[%rd10+-36], %rd5814;
	st.local.u32 	[%rd10+-40], %rd5814;
	st.local.u32 	[%rd10+-28], %rd5814;
	st.local.u32 	[%rd10+-32], %rd5814;
	st.local.u32 	[%rd10+-20], %rd5814;
	st.local.u32 	[%rd10+-24], %rd5814;
	st.local.u32 	[%rd10+-12], %rd5814;
	st.local.u32 	[%rd10+-16], %rd5814;
	st.local.u32 	[%rd10+-4], %rd5814;
	st.local.u32 	[%rd10+-8], %rd5814;
	bra.uni 	BB0_175;

BB0_3:
	setp.gt.s32	%p4, %r3, 15;
	@%p4 bra 	BB0_36;

	setp.gt.s32	%p28, %r3, 7;
	@%p28 bra 	BB0_21;

	setp.gt.s32	%p40, %r3, 3;
	@%p40 bra 	BB0_14;

	setp.gt.s32	%p46, %r3, 1;
	@%p46 bra 	BB0_10;

	setp.eq.s32	%p49, %r3, 0;
	@%p49 bra 	BB0_88;
	bra.uni 	BB0_8;

BB0_88:
	ld.local.u32 	%r5200, [%rd8+12];
	mov.u32 	%r11619, 0;
	// inline asm
	prmt.b32 %r11622, %r11619, %r5200, %r4;
	// inline asm
	ld.local.u32 	%r5203, [%rd8+12];
	ld.local.u32 	%r5204, [%rd8+8];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5202;
	ld.local.u32 	%r5207, [%rd8+8];
	ld.local.u32 	%r5208, [%rd8+4];
	// inline asm
	prmt.b32 %r5206, %r5207, %r5208, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5206;
	ld.local.u32 	%r5211, [%rd8+4];
	ld.local.u32 	%r5212, [%rd8];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5210;
	ld.local.u32 	%r5215, [%rd8];
	ld.local.u32 	%r5216, [%rd7+12];
	// inline asm
	prmt.b32 %r5214, %r5215, %r5216, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5214;
	ld.local.u32 	%r5219, [%rd7+12];
	ld.local.u32 	%r5220, [%rd7+8];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5218;
	ld.local.u32 	%r5223, [%rd7+8];
	ld.local.u32 	%r5224, [%rd7+4];
	// inline asm
	prmt.b32 %r5222, %r5223, %r5224, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5222;
	ld.local.u32 	%r5227, [%rd7+4];
	ld.local.u32 	%r5228, [%rd7];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5226;
	ld.local.u32 	%r5231, [%rd7];
	ld.local.u32 	%r5232, [%rd6+12];
	// inline asm
	prmt.b32 %r5230, %r5231, %r5232, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5230;
	ld.local.u32 	%r5235, [%rd6+12];
	ld.local.u32 	%r5236, [%rd6+8];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5234;
	ld.local.u32 	%r5239, [%rd6+8];
	ld.local.u32 	%r5240, [%rd6+4];
	// inline asm
	prmt.b32 %r5238, %r5239, %r5240, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5238;
	ld.local.u32 	%r5243, [%rd6+4];
	ld.local.u32 	%r5244, [%rd6];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5242;
	ld.local.u32 	%r5247, [%rd6];
	ld.local.u32 	%r5248, [%rd5+12];
	// inline asm
	prmt.b32 %r5246, %r5247, %r5248, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5246;
	ld.local.u32 	%r5251, [%rd5+12];
	ld.local.u32 	%r5252, [%rd5+8];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5250;
	ld.local.u32 	%r5255, [%rd5+8];
	ld.local.u32 	%r5256, [%rd5+4];
	// inline asm
	prmt.b32 %r5254, %r5255, %r5256, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5254;
	ld.local.u32 	%r5259, [%rd5+4];
	ld.local.u32 	%r5260, [%rd5];
	// inline asm
	prmt.b32 %r5258, %r5259, %r5260, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5258;
	ld.local.u32 	%r5263, [%rd5];
	ld.local.u32 	%r5264, [%rd4+12];
	// inline asm
	prmt.b32 %r5262, %r5263, %r5264, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5262;
	ld.local.u32 	%r5267, [%rd4+12];
	ld.local.u32 	%r5268, [%rd4+8];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5266;
	ld.local.u32 	%r5271, [%rd4+8];
	ld.local.u32 	%r5272, [%rd4+4];
	// inline asm
	prmt.b32 %r5270, %r5271, %r5272, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5270;
	ld.local.u32 	%r5275, [%rd4+4];
	ld.local.u32 	%r5276, [%rd4];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5274;
	ld.local.u32 	%r5279, [%rd4];
	ld.local.u32 	%r5280, [%rd3+12];
	// inline asm
	prmt.b32 %r5278, %r5279, %r5280, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5278;
	ld.local.u32 	%r5283, [%rd3+12];
	ld.local.u32 	%r5284, [%rd3+8];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5282;
	ld.local.u32 	%r5287, [%rd3+8];
	ld.local.u32 	%r5288, [%rd3+4];
	// inline asm
	prmt.b32 %r5286, %r5287, %r5288, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5286;
	ld.local.u32 	%r5291, [%rd3+4];
	ld.local.u32 	%r5292, [%rd3];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5290;
	ld.local.u32 	%r5295, [%rd3];
	ld.local.u32 	%r5296, [%rd2+12];
	// inline asm
	prmt.b32 %r5294, %r5295, %r5296, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5294;
	ld.local.u32 	%r5299, [%rd2+12];
	ld.local.u32 	%r5300, [%rd2+8];
	// inline asm
	prmt.b32 %r5298, %r5299, %r5300, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5298;
	ld.local.u32 	%r5303, [%rd2+8];
	ld.local.u32 	%r5304, [%rd2+4];
	// inline asm
	prmt.b32 %r5302, %r5303, %r5304, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5302;
	ld.local.u32 	%r5307, [%rd2+4];
	ld.local.u32 	%r5308, [%rd2];
	// inline asm
	prmt.b32 %r5306, %r5307, %r5308, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5306;
	ld.local.u32 	%r5311, [%rd2];
	ld.local.u32 	%r5312, [%rd1+12];
	// inline asm
	prmt.b32 %r5310, %r5311, %r5312, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5310;
	ld.local.u32 	%r5315, [%rd1+12];
	ld.local.u32 	%r5316, [%rd1+8];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5314;
	ld.local.u32 	%r5319, [%rd1+8];
	ld.local.u32 	%r5320, [%rd1+4];
	// inline asm
	prmt.b32 %r5318, %r5319, %r5320, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5318;
	ld.local.u32 	%r5323, [%rd1+4];
	ld.local.u32 	%r5324, [%rd1];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5322;
	ld.local.u32 	%r5327, [%rd1];
	// inline asm
	prmt.b32 %r11618, %r5327, %r11619, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r11618;
	mov.u32 	%r11620, %r11619;
	mov.u32 	%r11621, %r11619;
	bra.uni 	BB0_90;

BB0_124:
	setp.gt.s32	%p52, %r3, 23;
	@%p52 bra 	BB0_140;

	setp.gt.s32	%p64, %r3, 19;
	@%p64 bra 	BB0_133;

	setp.gt.s32	%p70, %r3, 17;
	@%p70 bra 	BB0_130;

	setp.eq.s32	%p73, %r3, 16;
	@%p73 bra 	BB0_162;
	bra.uni 	BB0_128;

BB0_162:
	ld.local.u32 	%r7930, [%rd4+12];
	ld.local.u32 	%r7931, [%rd4+8];
	// inline asm
	prmt.b32 %r7929, %r7930, %r7931, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7929;
	ld.local.u32 	%r7934, [%rd4+8];
	ld.local.u32 	%r7935, [%rd4+4];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7933;
	ld.local.u32 	%r7938, [%rd4+4];
	ld.local.u32 	%r7939, [%rd4];
	// inline asm
	prmt.b32 %r7937, %r7938, %r7939, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7937;
	ld.local.u32 	%r7942, [%rd4];
	ld.local.u32 	%r7943, [%rd3+12];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7941;
	ld.local.u32 	%r7946, [%rd3+12];
	ld.local.u32 	%r7947, [%rd3+8];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7945;
	ld.local.u32 	%r7950, [%rd3+8];
	ld.local.u32 	%r7951, [%rd3+4];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7949;
	ld.local.u32 	%r7954, [%rd3+4];
	ld.local.u32 	%r7955, [%rd3];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7953;
	ld.local.u32 	%r7958, [%rd3];
	ld.local.u32 	%r7959, [%rd2+12];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7957;
	ld.local.u32 	%r7962, [%rd2+12];
	ld.local.u32 	%r7963, [%rd2+8];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7961;
	ld.local.u32 	%r7966, [%rd2+8];
	ld.local.u32 	%r7967, [%rd2+4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7965;
	ld.local.u32 	%r7970, [%rd2+4];
	ld.local.u32 	%r7971, [%rd2];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7969;
	ld.local.u32 	%r7974, [%rd2];
	ld.local.u32 	%r7975, [%rd1+12];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7973;
	ld.local.u32 	%r7978, [%rd1+12];
	ld.local.u32 	%r7979, [%rd1+8];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7977;
	ld.local.u32 	%r7982, [%rd1+8];
	ld.local.u32 	%r7983, [%rd1+4];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7981;
	ld.local.u32 	%r7986, [%rd1+4];
	ld.local.u32 	%r7987, [%rd1];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7985;
	ld.local.u32 	%r7990, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7989, %r7990, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7989;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2935, 0;
	st.local.u32 	[%rd1+4], %rd2935;
	st.local.u32 	[%rd1], %rd2935;
	bra.uni 	BB0_172;

BB0_36:
	setp.gt.s32	%p5, %r3, 23;
	@%p5 bra 	BB0_52;

	setp.gt.s32	%p17, %r3, 19;
	@%p17 bra 	BB0_45;

	setp.gt.s32	%p23, %r3, 17;
	@%p23 bra 	BB0_42;

	setp.eq.s32	%p26, %r3, 16;
	@%p26 bra 	BB0_74;
	bra.uni 	BB0_40;

BB0_74:
	ld.local.u32 	%r2712, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11638, %r11618, %r2712, %r4;
	// inline asm
	ld.local.u32 	%r2715, [%rd8+12];
	ld.local.u32 	%r2716, [%rd8+8];
	// inline asm
	prmt.b32 %r11631, %r2715, %r2716, %r4;
	// inline asm
	ld.local.u32 	%r2719, [%rd8+8];
	ld.local.u32 	%r2720, [%rd8+4];
	// inline asm
	prmt.b32 %r11632, %r2719, %r2720, %r4;
	// inline asm
	ld.local.u32 	%r2723, [%rd8+4];
	ld.local.u32 	%r2724, [%rd8];
	// inline asm
	prmt.b32 %r11633, %r2723, %r2724, %r4;
	// inline asm
	ld.local.u32 	%r2727, [%rd8];
	ld.local.u32 	%r2728, [%rd7+12];
	// inline asm
	prmt.b32 %r11634, %r2727, %r2728, %r4;
	// inline asm
	ld.local.u32 	%r2731, [%rd7+12];
	ld.local.u32 	%r2732, [%rd7+8];
	// inline asm
	prmt.b32 %r11627, %r2731, %r2732, %r4;
	// inline asm
	ld.local.u32 	%r2735, [%rd7+8];
	ld.local.u32 	%r2736, [%rd7+4];
	// inline asm
	prmt.b32 %r11628, %r2735, %r2736, %r4;
	// inline asm
	ld.local.u32 	%r2739, [%rd7+4];
	ld.local.u32 	%r2740, [%rd7];
	// inline asm
	prmt.b32 %r11629, %r2739, %r2740, %r4;
	// inline asm
	ld.local.u32 	%r2743, [%rd7];
	ld.local.u32 	%r2744, [%rd6+12];
	// inline asm
	prmt.b32 %r11630, %r2743, %r2744, %r4;
	// inline asm
	ld.local.u32 	%r2747, [%rd6+12];
	ld.local.u32 	%r2748, [%rd6+8];
	// inline asm
	prmt.b32 %r11623, %r2747, %r2748, %r4;
	// inline asm
	ld.local.u32 	%r2751, [%rd6+8];
	ld.local.u32 	%r2752, [%rd6+4];
	// inline asm
	prmt.b32 %r11624, %r2751, %r2752, %r4;
	// inline asm
	ld.local.u32 	%r2755, [%rd6+4];
	ld.local.u32 	%r2756, [%rd6];
	// inline asm
	prmt.b32 %r11625, %r2755, %r2756, %r4;
	// inline asm
	ld.local.u32 	%r2759, [%rd6];
	ld.local.u32 	%r2760, [%rd5+12];
	// inline asm
	prmt.b32 %r11626, %r2759, %r2760, %r4;
	// inline asm
	ld.local.u32 	%r2763, [%rd5+12];
	ld.local.u32 	%r2764, [%rd5+8];
	// inline asm
	prmt.b32 %r11619, %r2763, %r2764, %r4;
	// inline asm
	ld.local.u32 	%r2767, [%rd5+8];
	ld.local.u32 	%r2768, [%rd5+4];
	// inline asm
	prmt.b32 %r11620, %r2767, %r2768, %r4;
	// inline asm
	ld.local.u32 	%r2771, [%rd5+4];
	ld.local.u32 	%r2772, [%rd5];
	// inline asm
	prmt.b32 %r11621, %r2771, %r2772, %r4;
	// inline asm
	ld.local.u32 	%r2775, [%rd5];
	ld.local.u32 	%r2776, [%rd4+12];
	// inline asm
	prmt.b32 %r11622, %r2775, %r2776, %r4;
	// inline asm
	ld.local.u32 	%r2779, [%rd4+12];
	ld.local.u32 	%r2780, [%rd4+8];
	// inline asm
	prmt.b32 %r2778, %r2779, %r2780, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2778;
	ld.local.u32 	%r2783, [%rd4+8];
	ld.local.u32 	%r2784, [%rd4+4];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2782;
	ld.local.u32 	%r2787, [%rd4+4];
	ld.local.u32 	%r2788, [%rd4];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2786;
	ld.local.u32 	%r2791, [%rd4];
	ld.local.u32 	%r2792, [%rd3+12];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2790;
	ld.local.u32 	%r2795, [%rd3+12];
	ld.local.u32 	%r2796, [%rd3+8];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2794;
	ld.local.u32 	%r2799, [%rd3+8];
	ld.local.u32 	%r2800, [%rd3+4];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2798;
	ld.local.u32 	%r2803, [%rd3+4];
	ld.local.u32 	%r2804, [%rd3];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2802;
	ld.local.u32 	%r2807, [%rd3];
	ld.local.u32 	%r2808, [%rd2+12];
	// inline asm
	prmt.b32 %r2806, %r2807, %r2808, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2806;
	ld.local.u32 	%r2811, [%rd2+12];
	ld.local.u32 	%r2812, [%rd2+8];
	// inline asm
	prmt.b32 %r2810, %r2811, %r2812, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2810;
	ld.local.u32 	%r2815, [%rd2+8];
	ld.local.u32 	%r2816, [%rd2+4];
	// inline asm
	prmt.b32 %r2814, %r2815, %r2816, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2814;
	ld.local.u32 	%r2819, [%rd2+4];
	ld.local.u32 	%r2820, [%rd2];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2818;
	ld.local.u32 	%r2823, [%rd2];
	ld.local.u32 	%r2824, [%rd1+12];
	// inline asm
	prmt.b32 %r2822, %r2823, %r2824, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2822;
	ld.local.u32 	%r2827, [%rd1+12];
	ld.local.u32 	%r2828, [%rd1+8];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2826;
	ld.local.u32 	%r2831, [%rd1+8];
	ld.local.u32 	%r2832, [%rd1+4];
	// inline asm
	prmt.b32 %r2830, %r2831, %r2832, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2830;
	ld.local.u32 	%r2835, [%rd1+4];
	ld.local.u32 	%r2836, [%rd1];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2834;
	ld.local.u32 	%r2839, [%rd1];
	// inline asm
	prmt.b32 %r2838, %r2839, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2838;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd41, 0;
	st.local.u32 	[%rd1+4], %rd41;
	st.local.u32 	[%rd1], %rd41;
	mov.u32 	%r11635, %r11618;
	mov.u32 	%r11636, %r11618;
	mov.u32 	%r11637, %r11618;
	bra.uni 	BB0_84;

BB0_109:
	setp.gt.s32	%p76, %r3, 11;
	@%p76 bra 	BB0_117;

	setp.gt.s32	%p82, %r3, 9;
	@%p82 bra 	BB0_114;

	setp.eq.s32	%p85, %r3, 8;
	@%p85 bra 	BB0_166;
	bra.uni 	BB0_112;

BB0_166:
	ld.local.u32 	%r8562, [%rd6+12];
	ld.local.u32 	%r8563, [%rd6+8];
	// inline asm
	prmt.b32 %r8561, %r8562, %r8563, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8561;
	ld.local.u32 	%r8566, [%rd6+8];
	ld.local.u32 	%r8567, [%rd6+4];
	// inline asm
	prmt.b32 %r8565, %r8566, %r8567, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8565;
	ld.local.u32 	%r8570, [%rd6+4];
	ld.local.u32 	%r8571, [%rd6];
	// inline asm
	prmt.b32 %r8569, %r8570, %r8571, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8569;
	ld.local.u32 	%r8574, [%rd6];
	ld.local.u32 	%r8575, [%rd5+12];
	// inline asm
	prmt.b32 %r8573, %r8574, %r8575, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8573;
	ld.local.u32 	%r8578, [%rd5+12];
	ld.local.u32 	%r8579, [%rd5+8];
	// inline asm
	prmt.b32 %r8577, %r8578, %r8579, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8577;
	ld.local.u32 	%r8582, [%rd5+8];
	ld.local.u32 	%r8583, [%rd5+4];
	// inline asm
	prmt.b32 %r8581, %r8582, %r8583, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8581;
	ld.local.u32 	%r8586, [%rd5+4];
	ld.local.u32 	%r8587, [%rd5];
	// inline asm
	prmt.b32 %r8585, %r8586, %r8587, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8585;
	ld.local.u32 	%r8590, [%rd5];
	ld.local.u32 	%r8591, [%rd4+12];
	// inline asm
	prmt.b32 %r8589, %r8590, %r8591, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8589;
	ld.local.u32 	%r8594, [%rd4+12];
	ld.local.u32 	%r8595, [%rd4+8];
	// inline asm
	prmt.b32 %r8593, %r8594, %r8595, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8593;
	ld.local.u32 	%r8598, [%rd4+8];
	ld.local.u32 	%r8599, [%rd4+4];
	// inline asm
	prmt.b32 %r8597, %r8598, %r8599, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8597;
	ld.local.u32 	%r8602, [%rd4+4];
	ld.local.u32 	%r8603, [%rd4];
	// inline asm
	prmt.b32 %r8601, %r8602, %r8603, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8601;
	ld.local.u32 	%r8606, [%rd4];
	ld.local.u32 	%r8607, [%rd3+12];
	// inline asm
	prmt.b32 %r8605, %r8606, %r8607, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8605;
	ld.local.u32 	%r8610, [%rd3+12];
	ld.local.u32 	%r8611, [%rd3+8];
	// inline asm
	prmt.b32 %r8609, %r8610, %r8611, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8609;
	ld.local.u32 	%r8614, [%rd3+8];
	ld.local.u32 	%r8615, [%rd3+4];
	// inline asm
	prmt.b32 %r8613, %r8614, %r8615, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8613;
	ld.local.u32 	%r8618, [%rd3+4];
	ld.local.u32 	%r8619, [%rd3];
	// inline asm
	prmt.b32 %r8617, %r8618, %r8619, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8617;
	ld.local.u32 	%r8622, [%rd3];
	ld.local.u32 	%r8623, [%rd2+12];
	// inline asm
	prmt.b32 %r8621, %r8622, %r8623, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8621;
	ld.local.u32 	%r8626, [%rd2+12];
	ld.local.u32 	%r8627, [%rd2+8];
	// inline asm
	prmt.b32 %r8625, %r8626, %r8627, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8625;
	ld.local.u32 	%r8630, [%rd2+8];
	ld.local.u32 	%r8631, [%rd2+4];
	// inline asm
	prmt.b32 %r8629, %r8630, %r8631, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8629;
	ld.local.u32 	%r8634, [%rd2+4];
	ld.local.u32 	%r8635, [%rd2];
	// inline asm
	prmt.b32 %r8633, %r8634, %r8635, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8633;
	ld.local.u32 	%r8638, [%rd2];
	ld.local.u32 	%r8639, [%rd1+12];
	// inline asm
	prmt.b32 %r8637, %r8638, %r8639, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8637;
	ld.local.u32 	%r8642, [%rd1+12];
	ld.local.u32 	%r8643, [%rd1+8];
	// inline asm
	prmt.b32 %r8641, %r8642, %r8643, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8641;
	ld.local.u32 	%r8646, [%rd1+8];
	ld.local.u32 	%r8647, [%rd1+4];
	// inline asm
	prmt.b32 %r8645, %r8646, %r8647, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8645;
	ld.local.u32 	%r8650, [%rd1+4];
	ld.local.u32 	%r8651, [%rd1];
	// inline asm
	prmt.b32 %r8649, %r8650, %r8651, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8649;
	ld.local.u32 	%r8654, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8653, %r8654, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8653;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2943, 0;
	st.local.u32 	[%rd1+4], %rd2943;
	st.local.u32 	[%rd1], %rd2943;
	bra.uni 	BB0_172;

BB0_21:
	setp.gt.s32	%p29, %r3, 11;
	@%p29 bra 	BB0_29;

	setp.gt.s32	%p35, %r3, 9;
	@%p35 bra 	BB0_26;

	setp.eq.s32	%p38, %r3, 8;
	@%p38 bra 	BB0_78;
	bra.uni 	BB0_24;

BB0_78:
	ld.local.u32 	%r3924, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11630, %r11618, %r3924, %r4;
	// inline asm
	ld.local.u32 	%r3927, [%rd8+12];
	ld.local.u32 	%r3928, [%rd8+8];
	// inline asm
	prmt.b32 %r11623, %r3927, %r3928, %r4;
	// inline asm
	ld.local.u32 	%r3931, [%rd8+8];
	ld.local.u32 	%r3932, [%rd8+4];
	// inline asm
	prmt.b32 %r11624, %r3931, %r3932, %r4;
	// inline asm
	ld.local.u32 	%r3935, [%rd8+4];
	ld.local.u32 	%r3936, [%rd8];
	// inline asm
	prmt.b32 %r11625, %r3935, %r3936, %r4;
	// inline asm
	ld.local.u32 	%r3939, [%rd8];
	ld.local.u32 	%r3940, [%rd7+12];
	// inline asm
	prmt.b32 %r11626, %r3939, %r3940, %r4;
	// inline asm
	ld.local.u32 	%r3943, [%rd7+12];
	ld.local.u32 	%r3944, [%rd7+8];
	// inline asm
	prmt.b32 %r11619, %r3943, %r3944, %r4;
	// inline asm
	ld.local.u32 	%r3947, [%rd7+8];
	ld.local.u32 	%r3948, [%rd7+4];
	// inline asm
	prmt.b32 %r11620, %r3947, %r3948, %r4;
	// inline asm
	ld.local.u32 	%r3951, [%rd7+4];
	ld.local.u32 	%r3952, [%rd7];
	// inline asm
	prmt.b32 %r11621, %r3951, %r3952, %r4;
	// inline asm
	ld.local.u32 	%r3955, [%rd7];
	ld.local.u32 	%r3956, [%rd6+12];
	// inline asm
	prmt.b32 %r11622, %r3955, %r3956, %r4;
	// inline asm
	ld.local.u32 	%r3959, [%rd6+12];
	ld.local.u32 	%r3960, [%rd6+8];
	// inline asm
	prmt.b32 %r3958, %r3959, %r3960, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3958;
	ld.local.u32 	%r3963, [%rd6+8];
	ld.local.u32 	%r3964, [%rd6+4];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3962;
	ld.local.u32 	%r3967, [%rd6+4];
	ld.local.u32 	%r3968, [%rd6];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3966;
	ld.local.u32 	%r3971, [%rd6];
	ld.local.u32 	%r3972, [%rd5+12];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3970;
	ld.local.u32 	%r3975, [%rd5+12];
	ld.local.u32 	%r3976, [%rd5+8];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3974;
	ld.local.u32 	%r3979, [%rd5+8];
	ld.local.u32 	%r3980, [%rd5+4];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3978;
	ld.local.u32 	%r3983, [%rd5+4];
	ld.local.u32 	%r3984, [%rd5];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3982;
	ld.local.u32 	%r3987, [%rd5];
	ld.local.u32 	%r3988, [%rd4+12];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3986;
	ld.local.u32 	%r3991, [%rd4+12];
	ld.local.u32 	%r3992, [%rd4+8];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3990;
	ld.local.u32 	%r3995, [%rd4+8];
	ld.local.u32 	%r3996, [%rd4+4];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3994;
	ld.local.u32 	%r3999, [%rd4+4];
	ld.local.u32 	%r4000, [%rd4];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3998;
	ld.local.u32 	%r4003, [%rd4];
	ld.local.u32 	%r4004, [%rd3+12];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4002;
	ld.local.u32 	%r4007, [%rd3+12];
	ld.local.u32 	%r4008, [%rd3+8];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4006;
	ld.local.u32 	%r4011, [%rd3+8];
	ld.local.u32 	%r4012, [%rd3+4];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4010;
	ld.local.u32 	%r4015, [%rd3+4];
	ld.local.u32 	%r4016, [%rd3];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4014;
	ld.local.u32 	%r4019, [%rd3];
	ld.local.u32 	%r4020, [%rd2+12];
	// inline asm
	prmt.b32 %r4018, %r4019, %r4020, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4018;
	ld.local.u32 	%r4023, [%rd2+12];
	ld.local.u32 	%r4024, [%rd2+8];
	// inline asm
	prmt.b32 %r4022, %r4023, %r4024, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4022;
	ld.local.u32 	%r4027, [%rd2+8];
	ld.local.u32 	%r4028, [%rd2+4];
	// inline asm
	prmt.b32 %r4026, %r4027, %r4028, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4026;
	ld.local.u32 	%r4031, [%rd2+4];
	ld.local.u32 	%r4032, [%rd2];
	// inline asm
	prmt.b32 %r4030, %r4031, %r4032, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4030;
	ld.local.u32 	%r4035, [%rd2];
	ld.local.u32 	%r4036, [%rd1+12];
	// inline asm
	prmt.b32 %r4034, %r4035, %r4036, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4034;
	ld.local.u32 	%r4039, [%rd1+12];
	ld.local.u32 	%r4040, [%rd1+8];
	// inline asm
	prmt.b32 %r4038, %r4039, %r4040, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4038;
	ld.local.u32 	%r4043, [%rd1+8];
	ld.local.u32 	%r4044, [%rd1+4];
	// inline asm
	prmt.b32 %r4042, %r4043, %r4044, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4042;
	ld.local.u32 	%r4047, [%rd1+4];
	ld.local.u32 	%r4048, [%rd1];
	// inline asm
	prmt.b32 %r4046, %r4047, %r4048, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4046;
	ld.local.u32 	%r4051, [%rd1];
	// inline asm
	prmt.b32 %r4050, %r4051, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4050;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd49, 0;
	st.local.u32 	[%rd1+4], %rd49;
	st.local.u32 	[%rd1], %rd49;
	mov.u32 	%r11627, %r11618;
	mov.u32 	%r11628, %r11618;
	mov.u32 	%r11629, %r11618;
	bra.uni 	BB0_82;

BB0_140:
	setp.gt.s32	%p53, %r3, 27;
	@%p53 bra 	BB0_148;

	setp.gt.s32	%p59, %r3, 25;
	@%p59 bra 	BB0_145;

	setp.eq.s32	%p62, %r3, 24;
	@%p62 bra 	BB0_158;
	bra.uni 	BB0_143;

BB0_158:
	ld.local.u32 	%r7554, [%rd2+12];
	ld.local.u32 	%r7555, [%rd2+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7553;
	ld.local.u32 	%r7558, [%rd2+8];
	ld.local.u32 	%r7559, [%rd2+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7557;
	ld.local.u32 	%r7562, [%rd2+4];
	ld.local.u32 	%r7563, [%rd2];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7561;
	ld.local.u32 	%r7566, [%rd2];
	ld.local.u32 	%r7567, [%rd1+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7565;
	ld.local.u32 	%r7570, [%rd1+12];
	ld.local.u32 	%r7571, [%rd1+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7569;
	ld.local.u32 	%r7574, [%rd1+8];
	ld.local.u32 	%r7575, [%rd1+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7573;
	ld.local.u32 	%r7578, [%rd1+4];
	ld.local.u32 	%r7579, [%rd1];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7577;
	ld.local.u32 	%r7582, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7581, %r7582, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7581;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2927, 0;
	st.local.u32 	[%rd1+4], %rd2927;
	st.local.u32 	[%rd1], %rd2927;
	bra.uni 	BB0_172;

BB0_52:
	setp.gt.s32	%p6, %r3, 27;
	@%p6 bra 	BB0_60;

	setp.gt.s32	%p12, %r3, 25;
	@%p12 bra 	BB0_57;

	setp.eq.s32	%p15, %r3, 24;
	@%p15 bra 	BB0_70;
	bra.uni 	BB0_55;

BB0_70:
	ld.local.u32 	%r1564, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11646, %r11618, %r1564, %r4;
	// inline asm
	ld.local.u32 	%r1567, [%rd8+12];
	ld.local.u32 	%r1568, [%rd8+8];
	// inline asm
	prmt.b32 %r11639, %r1567, %r1568, %r4;
	// inline asm
	ld.local.u32 	%r1571, [%rd8+8];
	ld.local.u32 	%r1572, [%rd8+4];
	// inline asm
	prmt.b32 %r11640, %r1571, %r1572, %r4;
	// inline asm
	ld.local.u32 	%r1575, [%rd8+4];
	ld.local.u32 	%r1576, [%rd8];
	// inline asm
	prmt.b32 %r11641, %r1575, %r1576, %r4;
	// inline asm
	ld.local.u32 	%r1579, [%rd8];
	ld.local.u32 	%r1580, [%rd7+12];
	// inline asm
	prmt.b32 %r11642, %r1579, %r1580, %r4;
	// inline asm
	ld.local.u32 	%r1583, [%rd7+12];
	ld.local.u32 	%r1584, [%rd7+8];
	// inline asm
	prmt.b32 %r11635, %r1583, %r1584, %r4;
	// inline asm
	ld.local.u32 	%r1587, [%rd7+8];
	ld.local.u32 	%r1588, [%rd7+4];
	// inline asm
	prmt.b32 %r11636, %r1587, %r1588, %r4;
	// inline asm
	ld.local.u32 	%r1591, [%rd7+4];
	ld.local.u32 	%r1592, [%rd7];
	// inline asm
	prmt.b32 %r11637, %r1591, %r1592, %r4;
	// inline asm
	ld.local.u32 	%r1595, [%rd7];
	ld.local.u32 	%r1596, [%rd6+12];
	// inline asm
	prmt.b32 %r11638, %r1595, %r1596, %r4;
	// inline asm
	ld.local.u32 	%r1599, [%rd6+12];
	ld.local.u32 	%r1600, [%rd6+8];
	// inline asm
	prmt.b32 %r11631, %r1599, %r1600, %r4;
	// inline asm
	ld.local.u32 	%r1603, [%rd6+8];
	ld.local.u32 	%r1604, [%rd6+4];
	// inline asm
	prmt.b32 %r11632, %r1603, %r1604, %r4;
	// inline asm
	ld.local.u32 	%r1607, [%rd6+4];
	ld.local.u32 	%r1608, [%rd6];
	// inline asm
	prmt.b32 %r11633, %r1607, %r1608, %r4;
	// inline asm
	ld.local.u32 	%r1611, [%rd6];
	ld.local.u32 	%r1612, [%rd5+12];
	// inline asm
	prmt.b32 %r11634, %r1611, %r1612, %r4;
	// inline asm
	ld.local.u32 	%r1615, [%rd5+12];
	ld.local.u32 	%r1616, [%rd5+8];
	// inline asm
	prmt.b32 %r11627, %r1615, %r1616, %r4;
	// inline asm
	ld.local.u32 	%r1619, [%rd5+8];
	ld.local.u32 	%r1620, [%rd5+4];
	// inline asm
	prmt.b32 %r11628, %r1619, %r1620, %r4;
	// inline asm
	ld.local.u32 	%r1623, [%rd5+4];
	ld.local.u32 	%r1624, [%rd5];
	// inline asm
	prmt.b32 %r11629, %r1623, %r1624, %r4;
	// inline asm
	ld.local.u32 	%r1627, [%rd5];
	ld.local.u32 	%r1628, [%rd4+12];
	// inline asm
	prmt.b32 %r11630, %r1627, %r1628, %r4;
	// inline asm
	ld.local.u32 	%r1631, [%rd4+12];
	ld.local.u32 	%r1632, [%rd4+8];
	// inline asm
	prmt.b32 %r11623, %r1631, %r1632, %r4;
	// inline asm
	ld.local.u32 	%r1635, [%rd4+8];
	ld.local.u32 	%r1636, [%rd4+4];
	// inline asm
	prmt.b32 %r11624, %r1635, %r1636, %r4;
	// inline asm
	ld.local.u32 	%r1639, [%rd4+4];
	ld.local.u32 	%r1640, [%rd4];
	// inline asm
	prmt.b32 %r11625, %r1639, %r1640, %r4;
	// inline asm
	ld.local.u32 	%r1643, [%rd4];
	ld.local.u32 	%r1644, [%rd3+12];
	// inline asm
	prmt.b32 %r11626, %r1643, %r1644, %r4;
	// inline asm
	ld.local.u32 	%r1647, [%rd3+12];
	ld.local.u32 	%r1648, [%rd3+8];
	// inline asm
	prmt.b32 %r11619, %r1647, %r1648, %r4;
	// inline asm
	ld.local.u32 	%r1651, [%rd3+8];
	ld.local.u32 	%r1652, [%rd3+4];
	// inline asm
	prmt.b32 %r11620, %r1651, %r1652, %r4;
	// inline asm
	ld.local.u32 	%r1655, [%rd3+4];
	ld.local.u32 	%r1656, [%rd3];
	// inline asm
	prmt.b32 %r11621, %r1655, %r1656, %r4;
	// inline asm
	ld.local.u32 	%r1659, [%rd3];
	ld.local.u32 	%r1660, [%rd2+12];
	// inline asm
	prmt.b32 %r11622, %r1659, %r1660, %r4;
	// inline asm
	ld.local.u32 	%r1663, [%rd2+12];
	ld.local.u32 	%r1664, [%rd2+8];
	// inline asm
	prmt.b32 %r1662, %r1663, %r1664, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1662;
	ld.local.u32 	%r1667, [%rd2+8];
	ld.local.u32 	%r1668, [%rd2+4];
	// inline asm
	prmt.b32 %r1666, %r1667, %r1668, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1666;
	ld.local.u32 	%r1671, [%rd2+4];
	ld.local.u32 	%r1672, [%rd2];
	// inline asm
	prmt.b32 %r1670, %r1671, %r1672, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1670;
	ld.local.u32 	%r1675, [%rd2];
	ld.local.u32 	%r1676, [%rd1+12];
	// inline asm
	prmt.b32 %r1674, %r1675, %r1676, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1674;
	ld.local.u32 	%r1679, [%rd1+12];
	ld.local.u32 	%r1680, [%rd1+8];
	// inline asm
	prmt.b32 %r1678, %r1679, %r1680, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1678;
	ld.local.u32 	%r1683, [%rd1+8];
	ld.local.u32 	%r1684, [%rd1+4];
	// inline asm
	prmt.b32 %r1682, %r1683, %r1684, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1682;
	ld.local.u32 	%r1687, [%rd1+4];
	ld.local.u32 	%r1688, [%rd1];
	// inline asm
	prmt.b32 %r1686, %r1687, %r1688, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1686;
	ld.local.u32 	%r1691, [%rd1];
	// inline asm
	prmt.b32 %r1690, %r1691, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1690;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd33, 0;
	st.local.u32 	[%rd1+4], %rd33;
	st.local.u32 	[%rd1], %rd33;
	mov.u32 	%r11643, %r11618;
	mov.u32 	%r11644, %r11618;
	mov.u32 	%r11645, %r11618;
	bra.uni 	BB0_86;

BB0_102:
	setp.gt.s32	%p88, %r3, 5;
	@%p88 bra 	BB0_106;

	setp.eq.s32	%p91, %r3, 4;
	@%p91 bra 	BB0_168;
	bra.uni 	BB0_104;

BB0_168:
	ld.local.u32 	%r8974, [%rd7+12];
	ld.local.u32 	%r8975, [%rd7+8];
	// inline asm
	prmt.b32 %r8973, %r8974, %r8975, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8973;
	ld.local.u32 	%r8978, [%rd7+8];
	ld.local.u32 	%r8979, [%rd7+4];
	// inline asm
	prmt.b32 %r8977, %r8978, %r8979, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8977;
	ld.local.u32 	%r8982, [%rd7+4];
	ld.local.u32 	%r8983, [%rd7];
	// inline asm
	prmt.b32 %r8981, %r8982, %r8983, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8981;
	ld.local.u32 	%r8986, [%rd7];
	ld.local.u32 	%r8987, [%rd6+12];
	// inline asm
	prmt.b32 %r8985, %r8986, %r8987, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8985;
	ld.local.u32 	%r8990, [%rd6+12];
	ld.local.u32 	%r8991, [%rd6+8];
	// inline asm
	prmt.b32 %r8989, %r8990, %r8991, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8989;
	ld.local.u32 	%r8994, [%rd6+8];
	ld.local.u32 	%r8995, [%rd6+4];
	// inline asm
	prmt.b32 %r8993, %r8994, %r8995, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8993;
	ld.local.u32 	%r8998, [%rd6+4];
	ld.local.u32 	%r8999, [%rd6];
	// inline asm
	prmt.b32 %r8997, %r8998, %r8999, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8997;
	ld.local.u32 	%r9002, [%rd6];
	ld.local.u32 	%r9003, [%rd5+12];
	// inline asm
	prmt.b32 %r9001, %r9002, %r9003, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r9001;
	ld.local.u32 	%r9006, [%rd5+12];
	ld.local.u32 	%r9007, [%rd5+8];
	// inline asm
	prmt.b32 %r9005, %r9006, %r9007, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r9005;
	ld.local.u32 	%r9010, [%rd5+8];
	ld.local.u32 	%r9011, [%rd5+4];
	// inline asm
	prmt.b32 %r9009, %r9010, %r9011, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r9009;
	ld.local.u32 	%r9014, [%rd5+4];
	ld.local.u32 	%r9015, [%rd5];
	// inline asm
	prmt.b32 %r9013, %r9014, %r9015, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r9013;
	ld.local.u32 	%r9018, [%rd5];
	ld.local.u32 	%r9019, [%rd4+12];
	// inline asm
	prmt.b32 %r9017, %r9018, %r9019, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r9017;
	ld.local.u32 	%r9022, [%rd4+12];
	ld.local.u32 	%r9023, [%rd4+8];
	// inline asm
	prmt.b32 %r9021, %r9022, %r9023, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r9021;
	ld.local.u32 	%r9026, [%rd4+8];
	ld.local.u32 	%r9027, [%rd4+4];
	// inline asm
	prmt.b32 %r9025, %r9026, %r9027, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r9025;
	ld.local.u32 	%r9030, [%rd4+4];
	ld.local.u32 	%r9031, [%rd4];
	// inline asm
	prmt.b32 %r9029, %r9030, %r9031, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r9029;
	ld.local.u32 	%r9034, [%rd4];
	ld.local.u32 	%r9035, [%rd3+12];
	// inline asm
	prmt.b32 %r9033, %r9034, %r9035, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r9033;
	ld.local.u32 	%r9038, [%rd3+12];
	ld.local.u32 	%r9039, [%rd3+8];
	// inline asm
	prmt.b32 %r9037, %r9038, %r9039, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r9037;
	ld.local.u32 	%r9042, [%rd3+8];
	ld.local.u32 	%r9043, [%rd3+4];
	// inline asm
	prmt.b32 %r9041, %r9042, %r9043, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r9041;
	ld.local.u32 	%r9046, [%rd3+4];
	ld.local.u32 	%r9047, [%rd3];
	// inline asm
	prmt.b32 %r9045, %r9046, %r9047, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r9045;
	ld.local.u32 	%r9050, [%rd3];
	ld.local.u32 	%r9051, [%rd2+12];
	// inline asm
	prmt.b32 %r9049, %r9050, %r9051, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r9049;
	ld.local.u32 	%r9054, [%rd2+12];
	ld.local.u32 	%r9055, [%rd2+8];
	// inline asm
	prmt.b32 %r9053, %r9054, %r9055, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r9053;
	ld.local.u32 	%r9058, [%rd2+8];
	ld.local.u32 	%r9059, [%rd2+4];
	// inline asm
	prmt.b32 %r9057, %r9058, %r9059, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r9057;
	ld.local.u32 	%r9062, [%rd2+4];
	ld.local.u32 	%r9063, [%rd2];
	// inline asm
	prmt.b32 %r9061, %r9062, %r9063, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r9061;
	ld.local.u32 	%r9066, [%rd2];
	ld.local.u32 	%r9067, [%rd1+12];
	// inline asm
	prmt.b32 %r9065, %r9066, %r9067, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r9065;
	ld.local.u32 	%r9070, [%rd1+12];
	ld.local.u32 	%r9071, [%rd1+8];
	// inline asm
	prmt.b32 %r9069, %r9070, %r9071, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r9069;
	ld.local.u32 	%r9074, [%rd1+8];
	ld.local.u32 	%r9075, [%rd1+4];
	// inline asm
	prmt.b32 %r9073, %r9074, %r9075, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r9073;
	ld.local.u32 	%r9078, [%rd1+4];
	ld.local.u32 	%r9079, [%rd1];
	// inline asm
	prmt.b32 %r9077, %r9078, %r9079, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r9077;
	ld.local.u32 	%r9082, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r9081, %r9082, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r9081;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2947, 0;
	st.local.u32 	[%rd1+4], %rd2947;
	st.local.u32 	[%rd1], %rd2947;
	bra.uni 	BB0_172;

BB0_14:
	setp.gt.s32	%p41, %r3, 5;
	@%p41 bra 	BB0_18;

	setp.eq.s32	%p44, %r3, 4;
	@%p44 bra 	BB0_80;
	bra.uni 	BB0_16;

BB0_80:
	ld.local.u32 	%r4554, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11626, %r11618, %r4554, %r4;
	// inline asm
	ld.local.u32 	%r4557, [%rd8+12];
	ld.local.u32 	%r4558, [%rd8+8];
	// inline asm
	prmt.b32 %r11619, %r4557, %r4558, %r4;
	// inline asm
	ld.local.u32 	%r4561, [%rd8+8];
	ld.local.u32 	%r4562, [%rd8+4];
	// inline asm
	prmt.b32 %r11620, %r4561, %r4562, %r4;
	// inline asm
	ld.local.u32 	%r4565, [%rd8+4];
	ld.local.u32 	%r4566, [%rd8];
	// inline asm
	prmt.b32 %r11621, %r4565, %r4566, %r4;
	// inline asm
	ld.local.u32 	%r4569, [%rd8];
	ld.local.u32 	%r4570, [%rd7+12];
	// inline asm
	prmt.b32 %r11622, %r4569, %r4570, %r4;
	// inline asm
	ld.local.u32 	%r4573, [%rd7+12];
	ld.local.u32 	%r4574, [%rd7+8];
	// inline asm
	prmt.b32 %r4572, %r4573, %r4574, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4572;
	ld.local.u32 	%r4577, [%rd7+8];
	ld.local.u32 	%r4578, [%rd7+4];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4576;
	ld.local.u32 	%r4581, [%rd7+4];
	ld.local.u32 	%r4582, [%rd7];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4580;
	ld.local.u32 	%r4585, [%rd7];
	ld.local.u32 	%r4586, [%rd6+12];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4584;
	ld.local.u32 	%r4589, [%rd6+12];
	ld.local.u32 	%r4590, [%rd6+8];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4588;
	ld.local.u32 	%r4593, [%rd6+8];
	ld.local.u32 	%r4594, [%rd6+4];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4592;
	ld.local.u32 	%r4597, [%rd6+4];
	ld.local.u32 	%r4598, [%rd6];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4596;
	ld.local.u32 	%r4601, [%rd6];
	ld.local.u32 	%r4602, [%rd5+12];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4600;
	ld.local.u32 	%r4605, [%rd5+12];
	ld.local.u32 	%r4606, [%rd5+8];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4604;
	ld.local.u32 	%r4609, [%rd5+8];
	ld.local.u32 	%r4610, [%rd5+4];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4608;
	ld.local.u32 	%r4613, [%rd5+4];
	ld.local.u32 	%r4614, [%rd5];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4612;
	ld.local.u32 	%r4617, [%rd5];
	ld.local.u32 	%r4618, [%rd4+12];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4616;
	ld.local.u32 	%r4621, [%rd4+12];
	ld.local.u32 	%r4622, [%rd4+8];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4620;
	ld.local.u32 	%r4625, [%rd4+8];
	ld.local.u32 	%r4626, [%rd4+4];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4624;
	ld.local.u32 	%r4629, [%rd4+4];
	ld.local.u32 	%r4630, [%rd4];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4628;
	ld.local.u32 	%r4633, [%rd4];
	ld.local.u32 	%r4634, [%rd3+12];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4632;
	ld.local.u32 	%r4637, [%rd3+12];
	ld.local.u32 	%r4638, [%rd3+8];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4636;
	ld.local.u32 	%r4641, [%rd3+8];
	ld.local.u32 	%r4642, [%rd3+4];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4640;
	ld.local.u32 	%r4645, [%rd3+4];
	ld.local.u32 	%r4646, [%rd3];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4644;
	ld.local.u32 	%r4649, [%rd3];
	ld.local.u32 	%r4650, [%rd2+12];
	// inline asm
	prmt.b32 %r4648, %r4649, %r4650, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4648;
	ld.local.u32 	%r4653, [%rd2+12];
	ld.local.u32 	%r4654, [%rd2+8];
	// inline asm
	prmt.b32 %r4652, %r4653, %r4654, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4652;
	ld.local.u32 	%r4657, [%rd2+8];
	ld.local.u32 	%r4658, [%rd2+4];
	// inline asm
	prmt.b32 %r4656, %r4657, %r4658, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4656;
	ld.local.u32 	%r4661, [%rd2+4];
	ld.local.u32 	%r4662, [%rd2];
	// inline asm
	prmt.b32 %r4660, %r4661, %r4662, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4660;
	ld.local.u32 	%r4665, [%rd2];
	ld.local.u32 	%r4666, [%rd1+12];
	// inline asm
	prmt.b32 %r4664, %r4665, %r4666, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4664;
	ld.local.u32 	%r4669, [%rd1+12];
	ld.local.u32 	%r4670, [%rd1+8];
	// inline asm
	prmt.b32 %r4668, %r4669, %r4670, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4668;
	ld.local.u32 	%r4673, [%rd1+8];
	ld.local.u32 	%r4674, [%rd1+4];
	// inline asm
	prmt.b32 %r4672, %r4673, %r4674, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4672;
	ld.local.u32 	%r4677, [%rd1+4];
	ld.local.u32 	%r4678, [%rd1];
	// inline asm
	prmt.b32 %r4676, %r4677, %r4678, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4676;
	ld.local.u32 	%r4681, [%rd1];
	// inline asm
	prmt.b32 %r4680, %r4681, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4680;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd53, 0;
	st.local.u32 	[%rd1+4], %rd53;
	st.local.u32 	[%rd1], %rd53;
	mov.u32 	%r11623, %r11618;
	mov.u32 	%r11624, %r11618;
	mov.u32 	%r11625, %r11618;
	bra.uni 	BB0_81;

BB0_133:
	setp.gt.s32	%p65, %r3, 21;
	@%p65 bra 	BB0_137;

	setp.eq.s32	%p68, %r3, 20;
	@%p68 bra 	BB0_160;
	bra.uni 	BB0_135;

BB0_160:
	ld.local.u32 	%r7710, [%rd3+12];
	ld.local.u32 	%r7711, [%rd3+8];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7709;
	ld.local.u32 	%r7714, [%rd3+8];
	ld.local.u32 	%r7715, [%rd3+4];
	// inline asm
	prmt.b32 %r7713, %r7714, %r7715, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7713;
	ld.local.u32 	%r7718, [%rd3+4];
	ld.local.u32 	%r7719, [%rd3];
	// inline asm
	prmt.b32 %r7717, %r7718, %r7719, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7717;
	ld.local.u32 	%r7722, [%rd3];
	ld.local.u32 	%r7723, [%rd2+12];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7721;
	ld.local.u32 	%r7726, [%rd2+12];
	ld.local.u32 	%r7727, [%rd2+8];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7725;
	ld.local.u32 	%r7730, [%rd2+8];
	ld.local.u32 	%r7731, [%rd2+4];
	// inline asm
	prmt.b32 %r7729, %r7730, %r7731, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7729;
	ld.local.u32 	%r7734, [%rd2+4];
	ld.local.u32 	%r7735, [%rd2];
	// inline asm
	prmt.b32 %r7733, %r7734, %r7735, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7733;
	ld.local.u32 	%r7738, [%rd2];
	ld.local.u32 	%r7739, [%rd1+12];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7737;
	ld.local.u32 	%r7742, [%rd1+12];
	ld.local.u32 	%r7743, [%rd1+8];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7741;
	ld.local.u32 	%r7746, [%rd1+8];
	ld.local.u32 	%r7747, [%rd1+4];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7745;
	ld.local.u32 	%r7750, [%rd1+4];
	ld.local.u32 	%r7751, [%rd1];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7749;
	ld.local.u32 	%r7754, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7753, %r7754, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7753;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2931, 0;
	st.local.u32 	[%rd1+4], %rd2931;
	st.local.u32 	[%rd1], %rd2931;
	bra.uni 	BB0_172;

BB0_45:
	setp.gt.s32	%p18, %r3, 21;
	@%p18 bra 	BB0_49;

	setp.eq.s32	%p21, %r3, 20;
	@%p21 bra 	BB0_72;
	bra.uni 	BB0_47;

BB0_72:
	ld.local.u32 	%r2130, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11642, %r11618, %r2130, %r4;
	// inline asm
	ld.local.u32 	%r2133, [%rd8+12];
	ld.local.u32 	%r2134, [%rd8+8];
	// inline asm
	prmt.b32 %r11635, %r2133, %r2134, %r4;
	// inline asm
	ld.local.u32 	%r2137, [%rd8+8];
	ld.local.u32 	%r2138, [%rd8+4];
	// inline asm
	prmt.b32 %r11636, %r2137, %r2138, %r4;
	// inline asm
	ld.local.u32 	%r2141, [%rd8+4];
	ld.local.u32 	%r2142, [%rd8];
	// inline asm
	prmt.b32 %r11637, %r2141, %r2142, %r4;
	// inline asm
	ld.local.u32 	%r2145, [%rd8];
	ld.local.u32 	%r2146, [%rd7+12];
	// inline asm
	prmt.b32 %r11638, %r2145, %r2146, %r4;
	// inline asm
	ld.local.u32 	%r2149, [%rd7+12];
	ld.local.u32 	%r2150, [%rd7+8];
	// inline asm
	prmt.b32 %r11631, %r2149, %r2150, %r4;
	// inline asm
	ld.local.u32 	%r2153, [%rd7+8];
	ld.local.u32 	%r2154, [%rd7+4];
	// inline asm
	prmt.b32 %r11632, %r2153, %r2154, %r4;
	// inline asm
	ld.local.u32 	%r2157, [%rd7+4];
	ld.local.u32 	%r2158, [%rd7];
	// inline asm
	prmt.b32 %r11633, %r2157, %r2158, %r4;
	// inline asm
	ld.local.u32 	%r2161, [%rd7];
	ld.local.u32 	%r2162, [%rd6+12];
	// inline asm
	prmt.b32 %r11634, %r2161, %r2162, %r4;
	// inline asm
	ld.local.u32 	%r2165, [%rd6+12];
	ld.local.u32 	%r2166, [%rd6+8];
	// inline asm
	prmt.b32 %r11627, %r2165, %r2166, %r4;
	// inline asm
	ld.local.u32 	%r2169, [%rd6+8];
	ld.local.u32 	%r2170, [%rd6+4];
	// inline asm
	prmt.b32 %r11628, %r2169, %r2170, %r4;
	// inline asm
	ld.local.u32 	%r2173, [%rd6+4];
	ld.local.u32 	%r2174, [%rd6];
	// inline asm
	prmt.b32 %r11629, %r2173, %r2174, %r4;
	// inline asm
	ld.local.u32 	%r2177, [%rd6];
	ld.local.u32 	%r2178, [%rd5+12];
	// inline asm
	prmt.b32 %r11630, %r2177, %r2178, %r4;
	// inline asm
	ld.local.u32 	%r2181, [%rd5+12];
	ld.local.u32 	%r2182, [%rd5+8];
	// inline asm
	prmt.b32 %r11623, %r2181, %r2182, %r4;
	// inline asm
	ld.local.u32 	%r2185, [%rd5+8];
	ld.local.u32 	%r2186, [%rd5+4];
	// inline asm
	prmt.b32 %r11624, %r2185, %r2186, %r4;
	// inline asm
	ld.local.u32 	%r2189, [%rd5+4];
	ld.local.u32 	%r2190, [%rd5];
	// inline asm
	prmt.b32 %r11625, %r2189, %r2190, %r4;
	// inline asm
	ld.local.u32 	%r2193, [%rd5];
	ld.local.u32 	%r2194, [%rd4+12];
	// inline asm
	prmt.b32 %r11626, %r2193, %r2194, %r4;
	// inline asm
	ld.local.u32 	%r2197, [%rd4+12];
	ld.local.u32 	%r2198, [%rd4+8];
	// inline asm
	prmt.b32 %r11619, %r2197, %r2198, %r4;
	// inline asm
	ld.local.u32 	%r2201, [%rd4+8];
	ld.local.u32 	%r2202, [%rd4+4];
	// inline asm
	prmt.b32 %r11620, %r2201, %r2202, %r4;
	// inline asm
	ld.local.u32 	%r2205, [%rd4+4];
	ld.local.u32 	%r2206, [%rd4];
	// inline asm
	prmt.b32 %r11621, %r2205, %r2206, %r4;
	// inline asm
	ld.local.u32 	%r2209, [%rd4];
	ld.local.u32 	%r2210, [%rd3+12];
	// inline asm
	prmt.b32 %r11622, %r2209, %r2210, %r4;
	// inline asm
	ld.local.u32 	%r2213, [%rd3+12];
	ld.local.u32 	%r2214, [%rd3+8];
	// inline asm
	prmt.b32 %r2212, %r2213, %r2214, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2212;
	ld.local.u32 	%r2217, [%rd3+8];
	ld.local.u32 	%r2218, [%rd3+4];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2216;
	ld.local.u32 	%r2221, [%rd3+4];
	ld.local.u32 	%r2222, [%rd3];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2220;
	ld.local.u32 	%r2225, [%rd3];
	ld.local.u32 	%r2226, [%rd2+12];
	// inline asm
	prmt.b32 %r2224, %r2225, %r2226, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2224;
	ld.local.u32 	%r2229, [%rd2+12];
	ld.local.u32 	%r2230, [%rd2+8];
	// inline asm
	prmt.b32 %r2228, %r2229, %r2230, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2228;
	ld.local.u32 	%r2233, [%rd2+8];
	ld.local.u32 	%r2234, [%rd2+4];
	// inline asm
	prmt.b32 %r2232, %r2233, %r2234, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2232;
	ld.local.u32 	%r2237, [%rd2+4];
	ld.local.u32 	%r2238, [%rd2];
	// inline asm
	prmt.b32 %r2236, %r2237, %r2238, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2236;
	ld.local.u32 	%r2241, [%rd2];
	ld.local.u32 	%r2242, [%rd1+12];
	// inline asm
	prmt.b32 %r2240, %r2241, %r2242, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2240;
	ld.local.u32 	%r2245, [%rd1+12];
	ld.local.u32 	%r2246, [%rd1+8];
	// inline asm
	prmt.b32 %r2244, %r2245, %r2246, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2244;
	ld.local.u32 	%r2249, [%rd1+8];
	ld.local.u32 	%r2250, [%rd1+4];
	// inline asm
	prmt.b32 %r2248, %r2249, %r2250, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2248;
	ld.local.u32 	%r2253, [%rd1+4];
	ld.local.u32 	%r2254, [%rd1];
	// inline asm
	prmt.b32 %r2252, %r2253, %r2254, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2252;
	ld.local.u32 	%r2257, [%rd1];
	// inline asm
	prmt.b32 %r2256, %r2257, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2256;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd37, 0;
	st.local.u32 	[%rd1+4], %rd37;
	st.local.u32 	[%rd1], %rd37;
	mov.u32 	%r11639, %r11618;
	mov.u32 	%r11640, %r11618;
	mov.u32 	%r11641, %r11618;
	bra.uni 	BB0_85;

BB0_117:
	setp.gt.s32	%p77, %r3, 13;
	@%p77 bra 	BB0_121;

	setp.eq.s32	%p80, %r3, 12;
	@%p80 bra 	BB0_164;
	bra.uni 	BB0_119;

BB0_164:
	ld.local.u32 	%r8214, [%rd5+12];
	ld.local.u32 	%r8215, [%rd5+8];
	// inline asm
	prmt.b32 %r8213, %r8214, %r8215, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8213;
	ld.local.u32 	%r8218, [%rd5+8];
	ld.local.u32 	%r8219, [%rd5+4];
	// inline asm
	prmt.b32 %r8217, %r8218, %r8219, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8217;
	ld.local.u32 	%r8222, [%rd5+4];
	ld.local.u32 	%r8223, [%rd5];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8221;
	ld.local.u32 	%r8226, [%rd5];
	ld.local.u32 	%r8227, [%rd4+12];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8225;
	ld.local.u32 	%r8230, [%rd4+12];
	ld.local.u32 	%r8231, [%rd4+8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8229;
	ld.local.u32 	%r8234, [%rd4+8];
	ld.local.u32 	%r8235, [%rd4+4];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8233;
	ld.local.u32 	%r8238, [%rd4+4];
	ld.local.u32 	%r8239, [%rd4];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8237;
	ld.local.u32 	%r8242, [%rd4];
	ld.local.u32 	%r8243, [%rd3+12];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8241;
	ld.local.u32 	%r8246, [%rd3+12];
	ld.local.u32 	%r8247, [%rd3+8];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8245;
	ld.local.u32 	%r8250, [%rd3+8];
	ld.local.u32 	%r8251, [%rd3+4];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8249;
	ld.local.u32 	%r8254, [%rd3+4];
	ld.local.u32 	%r8255, [%rd3];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8253;
	ld.local.u32 	%r8258, [%rd3];
	ld.local.u32 	%r8259, [%rd2+12];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8257;
	ld.local.u32 	%r8262, [%rd2+12];
	ld.local.u32 	%r8263, [%rd2+8];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8261;
	ld.local.u32 	%r8266, [%rd2+8];
	ld.local.u32 	%r8267, [%rd2+4];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8265;
	ld.local.u32 	%r8270, [%rd2+4];
	ld.local.u32 	%r8271, [%rd2];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8269;
	ld.local.u32 	%r8274, [%rd2];
	ld.local.u32 	%r8275, [%rd1+12];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8273;
	ld.local.u32 	%r8278, [%rd1+12];
	ld.local.u32 	%r8279, [%rd1+8];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8277;
	ld.local.u32 	%r8282, [%rd1+8];
	ld.local.u32 	%r8283, [%rd1+4];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8281;
	ld.local.u32 	%r8286, [%rd1+4];
	ld.local.u32 	%r8287, [%rd1];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8285;
	ld.local.u32 	%r8290, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8289, %r8290, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8289;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2939, 0;
	st.local.u32 	[%rd1+4], %rd2939;
	st.local.u32 	[%rd1], %rd2939;
	bra.uni 	BB0_172;

BB0_29:
	setp.gt.s32	%p30, %r3, 13;
	@%p30 bra 	BB0_33;

	setp.eq.s32	%p33, %r3, 12;
	@%p33 bra 	BB0_76;
	bra.uni 	BB0_31;

BB0_76:
	ld.local.u32 	%r3310, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11634, %r11618, %r3310, %r4;
	// inline asm
	ld.local.u32 	%r3313, [%rd8+12];
	ld.local.u32 	%r3314, [%rd8+8];
	// inline asm
	prmt.b32 %r11627, %r3313, %r3314, %r4;
	// inline asm
	ld.local.u32 	%r3317, [%rd8+8];
	ld.local.u32 	%r3318, [%rd8+4];
	// inline asm
	prmt.b32 %r11628, %r3317, %r3318, %r4;
	// inline asm
	ld.local.u32 	%r3321, [%rd8+4];
	ld.local.u32 	%r3322, [%rd8];
	// inline asm
	prmt.b32 %r11629, %r3321, %r3322, %r4;
	// inline asm
	ld.local.u32 	%r3325, [%rd8];
	ld.local.u32 	%r3326, [%rd7+12];
	// inline asm
	prmt.b32 %r11630, %r3325, %r3326, %r4;
	// inline asm
	ld.local.u32 	%r3329, [%rd7+12];
	ld.local.u32 	%r3330, [%rd7+8];
	// inline asm
	prmt.b32 %r11623, %r3329, %r3330, %r4;
	// inline asm
	ld.local.u32 	%r3333, [%rd7+8];
	ld.local.u32 	%r3334, [%rd7+4];
	// inline asm
	prmt.b32 %r11624, %r3333, %r3334, %r4;
	// inline asm
	ld.local.u32 	%r3337, [%rd7+4];
	ld.local.u32 	%r3338, [%rd7];
	// inline asm
	prmt.b32 %r11625, %r3337, %r3338, %r4;
	// inline asm
	ld.local.u32 	%r3341, [%rd7];
	ld.local.u32 	%r3342, [%rd6+12];
	// inline asm
	prmt.b32 %r11626, %r3341, %r3342, %r4;
	// inline asm
	ld.local.u32 	%r3345, [%rd6+12];
	ld.local.u32 	%r3346, [%rd6+8];
	// inline asm
	prmt.b32 %r11619, %r3345, %r3346, %r4;
	// inline asm
	ld.local.u32 	%r3349, [%rd6+8];
	ld.local.u32 	%r3350, [%rd6+4];
	// inline asm
	prmt.b32 %r11620, %r3349, %r3350, %r4;
	// inline asm
	ld.local.u32 	%r3353, [%rd6+4];
	ld.local.u32 	%r3354, [%rd6];
	// inline asm
	prmt.b32 %r11621, %r3353, %r3354, %r4;
	// inline asm
	ld.local.u32 	%r3357, [%rd6];
	ld.local.u32 	%r3358, [%rd5+12];
	// inline asm
	prmt.b32 %r11622, %r3357, %r3358, %r4;
	// inline asm
	ld.local.u32 	%r3361, [%rd5+12];
	ld.local.u32 	%r3362, [%rd5+8];
	// inline asm
	prmt.b32 %r3360, %r3361, %r3362, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3360;
	ld.local.u32 	%r3365, [%rd5+8];
	ld.local.u32 	%r3366, [%rd5+4];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3364;
	ld.local.u32 	%r3369, [%rd5+4];
	ld.local.u32 	%r3370, [%rd5];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3368;
	ld.local.u32 	%r3373, [%rd5];
	ld.local.u32 	%r3374, [%rd4+12];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3372;
	ld.local.u32 	%r3377, [%rd4+12];
	ld.local.u32 	%r3378, [%rd4+8];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3376;
	ld.local.u32 	%r3381, [%rd4+8];
	ld.local.u32 	%r3382, [%rd4+4];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3380;
	ld.local.u32 	%r3385, [%rd4+4];
	ld.local.u32 	%r3386, [%rd4];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3384;
	ld.local.u32 	%r3389, [%rd4];
	ld.local.u32 	%r3390, [%rd3+12];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3388;
	ld.local.u32 	%r3393, [%rd3+12];
	ld.local.u32 	%r3394, [%rd3+8];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3392;
	ld.local.u32 	%r3397, [%rd3+8];
	ld.local.u32 	%r3398, [%rd3+4];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3396;
	ld.local.u32 	%r3401, [%rd3+4];
	ld.local.u32 	%r3402, [%rd3];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3400;
	ld.local.u32 	%r3405, [%rd3];
	ld.local.u32 	%r3406, [%rd2+12];
	// inline asm
	prmt.b32 %r3404, %r3405, %r3406, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3404;
	ld.local.u32 	%r3409, [%rd2+12];
	ld.local.u32 	%r3410, [%rd2+8];
	// inline asm
	prmt.b32 %r3408, %r3409, %r3410, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3408;
	ld.local.u32 	%r3413, [%rd2+8];
	ld.local.u32 	%r3414, [%rd2+4];
	// inline asm
	prmt.b32 %r3412, %r3413, %r3414, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3412;
	ld.local.u32 	%r3417, [%rd2+4];
	ld.local.u32 	%r3418, [%rd2];
	// inline asm
	prmt.b32 %r3416, %r3417, %r3418, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3416;
	ld.local.u32 	%r3421, [%rd2];
	ld.local.u32 	%r3422, [%rd1+12];
	// inline asm
	prmt.b32 %r3420, %r3421, %r3422, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3420;
	ld.local.u32 	%r3425, [%rd1+12];
	ld.local.u32 	%r3426, [%rd1+8];
	// inline asm
	prmt.b32 %r3424, %r3425, %r3426, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3424;
	ld.local.u32 	%r3429, [%rd1+8];
	ld.local.u32 	%r3430, [%rd1+4];
	// inline asm
	prmt.b32 %r3428, %r3429, %r3430, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3428;
	ld.local.u32 	%r3433, [%rd1+4];
	ld.local.u32 	%r3434, [%rd1];
	// inline asm
	prmt.b32 %r3432, %r3433, %r3434, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3432;
	ld.local.u32 	%r3437, [%rd1];
	// inline asm
	prmt.b32 %r3436, %r3437, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3436;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd45, 0;
	st.local.u32 	[%rd1+4], %rd45;
	st.local.u32 	[%rd1], %rd45;
	mov.u32 	%r11631, %r11618;
	mov.u32 	%r11632, %r11618;
	mov.u32 	%r11633, %r11618;
	bra.uni 	BB0_83;

BB0_148:
	setp.gt.s32	%p54, %r3, 29;
	@%p54 bra 	BB0_152;

	setp.eq.s32	%p57, %r3, 28;
	@%p57 bra 	BB0_156;
	bra.uni 	BB0_150;

BB0_156:
	ld.local.u32 	%r7462, [%rd1+12];
	ld.local.u32 	%r7463, [%rd1+8];
	// inline asm
	prmt.b32 %r7461, %r7462, %r7463, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7461;
	ld.local.u32 	%r7466, [%rd1+8];
	ld.local.u32 	%r7467, [%rd1+4];
	// inline asm
	prmt.b32 %r7465, %r7466, %r7467, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7465;
	ld.local.u32 	%r7470, [%rd1+4];
	ld.local.u32 	%r7471, [%rd1];
	// inline asm
	prmt.b32 %r7469, %r7470, %r7471, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7469;
	ld.local.u32 	%r7474, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7473, %r7474, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7473;
	st.local.u32 	[%rd7+12], %r11651;
	st.local.u32 	[%rd7+8], %r11651;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2923, 0;
	st.local.u32 	[%rd1+4], %rd2923;
	st.local.u32 	[%rd1], %rd2923;
	bra.uni 	BB0_172;

BB0_60:
	setp.gt.s32	%p7, %r3, 29;
	@%p7 bra 	BB0_64;

	setp.eq.s32	%p10, %r3, 28;
	@%p10 bra 	BB0_68;
	bra.uni 	BB0_62;

BB0_68:
	ld.local.u32 	%r1014, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11650, %r11618, %r1014, %r4;
	// inline asm
	ld.local.u32 	%r1017, [%rd8+12];
	ld.local.u32 	%r1018, [%rd8+8];
	// inline asm
	prmt.b32 %r11643, %r1017, %r1018, %r4;
	// inline asm
	ld.local.u32 	%r1021, [%rd8+8];
	ld.local.u32 	%r1022, [%rd8+4];
	// inline asm
	prmt.b32 %r11644, %r1021, %r1022, %r4;
	// inline asm
	ld.local.u32 	%r1025, [%rd8+4];
	ld.local.u32 	%r1026, [%rd8];
	// inline asm
	prmt.b32 %r11645, %r1025, %r1026, %r4;
	// inline asm
	ld.local.u32 	%r1029, [%rd8];
	ld.local.u32 	%r1030, [%rd7+12];
	// inline asm
	prmt.b32 %r11646, %r1029, %r1030, %r4;
	// inline asm
	ld.local.u32 	%r1033, [%rd7+12];
	ld.local.u32 	%r1034, [%rd7+8];
	// inline asm
	prmt.b32 %r11639, %r1033, %r1034, %r4;
	// inline asm
	ld.local.u32 	%r1037, [%rd7+8];
	ld.local.u32 	%r1038, [%rd7+4];
	// inline asm
	prmt.b32 %r11640, %r1037, %r1038, %r4;
	// inline asm
	ld.local.u32 	%r1041, [%rd7+4];
	ld.local.u32 	%r1042, [%rd7];
	// inline asm
	prmt.b32 %r11641, %r1041, %r1042, %r4;
	// inline asm
	ld.local.u32 	%r1045, [%rd7];
	ld.local.u32 	%r1046, [%rd6+12];
	// inline asm
	prmt.b32 %r11642, %r1045, %r1046, %r4;
	// inline asm
	ld.local.u32 	%r1049, [%rd6+12];
	ld.local.u32 	%r1050, [%rd6+8];
	// inline asm
	prmt.b32 %r11635, %r1049, %r1050, %r4;
	// inline asm
	ld.local.u32 	%r1053, [%rd6+8];
	ld.local.u32 	%r1054, [%rd6+4];
	// inline asm
	prmt.b32 %r11636, %r1053, %r1054, %r4;
	// inline asm
	ld.local.u32 	%r1057, [%rd6+4];
	ld.local.u32 	%r1058, [%rd6];
	// inline asm
	prmt.b32 %r11637, %r1057, %r1058, %r4;
	// inline asm
	ld.local.u32 	%r1061, [%rd6];
	ld.local.u32 	%r1062, [%rd5+12];
	// inline asm
	prmt.b32 %r11638, %r1061, %r1062, %r4;
	// inline asm
	ld.local.u32 	%r1065, [%rd5+12];
	ld.local.u32 	%r1066, [%rd5+8];
	// inline asm
	prmt.b32 %r11631, %r1065, %r1066, %r4;
	// inline asm
	ld.local.u32 	%r1069, [%rd5+8];
	ld.local.u32 	%r1070, [%rd5+4];
	// inline asm
	prmt.b32 %r11632, %r1069, %r1070, %r4;
	// inline asm
	ld.local.u32 	%r1073, [%rd5+4];
	ld.local.u32 	%r1074, [%rd5];
	// inline asm
	prmt.b32 %r11633, %r1073, %r1074, %r4;
	// inline asm
	ld.local.u32 	%r1077, [%rd5];
	ld.local.u32 	%r1078, [%rd4+12];
	// inline asm
	prmt.b32 %r11634, %r1077, %r1078, %r4;
	// inline asm
	ld.local.u32 	%r1081, [%rd4+12];
	ld.local.u32 	%r1082, [%rd4+8];
	// inline asm
	prmt.b32 %r11627, %r1081, %r1082, %r4;
	// inline asm
	ld.local.u32 	%r1085, [%rd4+8];
	ld.local.u32 	%r1086, [%rd4+4];
	// inline asm
	prmt.b32 %r11628, %r1085, %r1086, %r4;
	// inline asm
	ld.local.u32 	%r1089, [%rd4+4];
	ld.local.u32 	%r1090, [%rd4];
	// inline asm
	prmt.b32 %r11629, %r1089, %r1090, %r4;
	// inline asm
	ld.local.u32 	%r1093, [%rd4];
	ld.local.u32 	%r1094, [%rd3+12];
	// inline asm
	prmt.b32 %r11630, %r1093, %r1094, %r4;
	// inline asm
	ld.local.u32 	%r1097, [%rd3+12];
	ld.local.u32 	%r1098, [%rd3+8];
	// inline asm
	prmt.b32 %r11623, %r1097, %r1098, %r4;
	// inline asm
	ld.local.u32 	%r1101, [%rd3+8];
	ld.local.u32 	%r1102, [%rd3+4];
	// inline asm
	prmt.b32 %r11624, %r1101, %r1102, %r4;
	// inline asm
	ld.local.u32 	%r1105, [%rd3+4];
	ld.local.u32 	%r1106, [%rd3];
	// inline asm
	prmt.b32 %r11625, %r1105, %r1106, %r4;
	// inline asm
	ld.local.u32 	%r1109, [%rd3];
	ld.local.u32 	%r1110, [%rd2+12];
	// inline asm
	prmt.b32 %r11626, %r1109, %r1110, %r4;
	// inline asm
	ld.local.u32 	%r1113, [%rd2+12];
	ld.local.u32 	%r1114, [%rd2+8];
	// inline asm
	prmt.b32 %r11619, %r1113, %r1114, %r4;
	// inline asm
	ld.local.u32 	%r1117, [%rd2+8];
	ld.local.u32 	%r1118, [%rd2+4];
	// inline asm
	prmt.b32 %r11620, %r1117, %r1118, %r4;
	// inline asm
	ld.local.u32 	%r1121, [%rd2+4];
	ld.local.u32 	%r1122, [%rd2];
	// inline asm
	prmt.b32 %r11621, %r1121, %r1122, %r4;
	// inline asm
	ld.local.u32 	%r1125, [%rd2];
	ld.local.u32 	%r1126, [%rd1+12];
	// inline asm
	prmt.b32 %r11622, %r1125, %r1126, %r4;
	// inline asm
	ld.local.u32 	%r1129, [%rd1+12];
	ld.local.u32 	%r1130, [%rd1+8];
	// inline asm
	prmt.b32 %r1128, %r1129, %r1130, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1128;
	ld.local.u32 	%r1133, [%rd1+8];
	ld.local.u32 	%r1134, [%rd1+4];
	// inline asm
	prmt.b32 %r1132, %r1133, %r1134, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1132;
	ld.local.u32 	%r1137, [%rd1+4];
	ld.local.u32 	%r1138, [%rd1];
	// inline asm
	prmt.b32 %r1136, %r1137, %r1138, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1136;
	ld.local.u32 	%r1141, [%rd1];
	// inline asm
	prmt.b32 %r1140, %r1141, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1140;
	st.local.u32 	[%rd7+12], %r11618;
	st.local.u32 	[%rd7+8], %r11618;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd29, 0;
	st.local.u32 	[%rd1+4], %rd29;
	st.local.u32 	[%rd1], %rd29;
	mov.u32 	%r11647, %r11618;
	mov.u32 	%r11648, %r11618;
	mov.u32 	%r11649, %r11618;
	bra.uni 	BB0_91;

BB0_99:
	setp.eq.s32	%p94, %r3, 2;
	@%p94 bra 	BB0_169;
	bra.uni 	BB0_100;

BB0_169:
	ld.local.u32 	%r9204, [%rd8+4];
	ld.local.u32 	%r9205, [%rd8];
	// inline asm
	prmt.b32 %r9203, %r9204, %r9205, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r9203;
	ld.local.u32 	%r9208, [%rd8];
	ld.local.u32 	%r9209, [%rd7+12];
	// inline asm
	prmt.b32 %r9207, %r9208, %r9209, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r9207;
	ld.local.u32 	%r9212, [%rd7+12];
	ld.local.u32 	%r9213, [%rd7+8];
	// inline asm
	prmt.b32 %r9211, %r9212, %r9213, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r9211;
	ld.local.u32 	%r9216, [%rd7+8];
	ld.local.u32 	%r9217, [%rd7+4];
	// inline asm
	prmt.b32 %r9215, %r9216, %r9217, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r9215;
	ld.local.u32 	%r9220, [%rd7+4];
	ld.local.u32 	%r9221, [%rd7];
	// inline asm
	prmt.b32 %r9219, %r9220, %r9221, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r9219;
	ld.local.u32 	%r9224, [%rd7];
	ld.local.u32 	%r9225, [%rd6+12];
	// inline asm
	prmt.b32 %r9223, %r9224, %r9225, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r9223;
	ld.local.u32 	%r9228, [%rd6+12];
	ld.local.u32 	%r9229, [%rd6+8];
	// inline asm
	prmt.b32 %r9227, %r9228, %r9229, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r9227;
	ld.local.u32 	%r9232, [%rd6+8];
	ld.local.u32 	%r9233, [%rd6+4];
	// inline asm
	prmt.b32 %r9231, %r9232, %r9233, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r9231;
	ld.local.u32 	%r9236, [%rd6+4];
	ld.local.u32 	%r9237, [%rd6];
	// inline asm
	prmt.b32 %r9235, %r9236, %r9237, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r9235;
	ld.local.u32 	%r9240, [%rd6];
	ld.local.u32 	%r9241, [%rd5+12];
	// inline asm
	prmt.b32 %r9239, %r9240, %r9241, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r9239;
	ld.local.u32 	%r9244, [%rd5+12];
	ld.local.u32 	%r9245, [%rd5+8];
	// inline asm
	prmt.b32 %r9243, %r9244, %r9245, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r9243;
	ld.local.u32 	%r9248, [%rd5+8];
	ld.local.u32 	%r9249, [%rd5+4];
	// inline asm
	prmt.b32 %r9247, %r9248, %r9249, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r9247;
	ld.local.u32 	%r9252, [%rd5+4];
	ld.local.u32 	%r9253, [%rd5];
	// inline asm
	prmt.b32 %r9251, %r9252, %r9253, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r9251;
	ld.local.u32 	%r9256, [%rd5];
	ld.local.u32 	%r9257, [%rd4+12];
	// inline asm
	prmt.b32 %r9255, %r9256, %r9257, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r9255;
	ld.local.u32 	%r9260, [%rd4+12];
	ld.local.u32 	%r9261, [%rd4+8];
	// inline asm
	prmt.b32 %r9259, %r9260, %r9261, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r9259;
	ld.local.u32 	%r9264, [%rd4+8];
	ld.local.u32 	%r9265, [%rd4+4];
	// inline asm
	prmt.b32 %r9263, %r9264, %r9265, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r9263;
	ld.local.u32 	%r9268, [%rd4+4];
	ld.local.u32 	%r9269, [%rd4];
	// inline asm
	prmt.b32 %r9267, %r9268, %r9269, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r9267;
	ld.local.u32 	%r9272, [%rd4];
	ld.local.u32 	%r9273, [%rd3+12];
	// inline asm
	prmt.b32 %r9271, %r9272, %r9273, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r9271;
	ld.local.u32 	%r9276, [%rd3+12];
	ld.local.u32 	%r9277, [%rd3+8];
	// inline asm
	prmt.b32 %r9275, %r9276, %r9277, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r9275;
	ld.local.u32 	%r9280, [%rd3+8];
	ld.local.u32 	%r9281, [%rd3+4];
	// inline asm
	prmt.b32 %r9279, %r9280, %r9281, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r9279;
	ld.local.u32 	%r9284, [%rd3+4];
	ld.local.u32 	%r9285, [%rd3];
	// inline asm
	prmt.b32 %r9283, %r9284, %r9285, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r9283;
	ld.local.u32 	%r9288, [%rd3];
	ld.local.u32 	%r9289, [%rd2+12];
	// inline asm
	prmt.b32 %r9287, %r9288, %r9289, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r9287;
	ld.local.u32 	%r9292, [%rd2+12];
	ld.local.u32 	%r9293, [%rd2+8];
	// inline asm
	prmt.b32 %r9291, %r9292, %r9293, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r9291;
	ld.local.u32 	%r9296, [%rd2+8];
	ld.local.u32 	%r9297, [%rd2+4];
	// inline asm
	prmt.b32 %r9295, %r9296, %r9297, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r9295;
	ld.local.u32 	%r9300, [%rd2+4];
	ld.local.u32 	%r9301, [%rd2];
	// inline asm
	prmt.b32 %r9299, %r9300, %r9301, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r9299;
	ld.local.u32 	%r9304, [%rd2];
	ld.local.u32 	%r9305, [%rd1+12];
	// inline asm
	prmt.b32 %r9303, %r9304, %r9305, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r9303;
	ld.local.u32 	%r9308, [%rd1+12];
	ld.local.u32 	%r9309, [%rd1+8];
	// inline asm
	prmt.b32 %r9307, %r9308, %r9309, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r9307;
	ld.local.u32 	%r9312, [%rd1+8];
	ld.local.u32 	%r9313, [%rd1+4];
	// inline asm
	prmt.b32 %r9311, %r9312, %r9313, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r9311;
	ld.local.u32 	%r9316, [%rd1+4];
	ld.local.u32 	%r9317, [%rd1];
	// inline asm
	prmt.b32 %r9315, %r9316, %r9317, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r9315;
	ld.local.u32 	%r9320, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r9319, %r9320, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r9319;
	mov.u64 	%rd2949, 0;
	st.local.u32 	[%rd1+4], %rd2949;
	st.local.u32 	[%rd1], %rd2949;
	bra.uni 	BB0_172;

BB0_10:
	setp.eq.s32	%p47, %r3, 2;
	@%p47 bra 	BB0_87;
	bra.uni 	BB0_11;

BB0_87:
	ld.local.u32 	%r4875, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11620, %r11618, %r4875, %r4;
	// inline asm
	ld.local.u32 	%r4878, [%rd8+12];
	ld.local.u32 	%r4879, [%rd8+8];
	// inline asm
	prmt.b32 %r11621, %r4878, %r4879, %r4;
	// inline asm
	ld.local.u32 	%r4882, [%rd8+8];
	ld.local.u32 	%r4883, [%rd8+4];
	// inline asm
	prmt.b32 %r11622, %r4882, %r4883, %r4;
	// inline asm
	ld.local.u32 	%r4886, [%rd8+4];
	ld.local.u32 	%r4887, [%rd8];
	// inline asm
	prmt.b32 %r4885, %r4886, %r4887, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4885;
	ld.local.u32 	%r4890, [%rd8];
	ld.local.u32 	%r4891, [%rd7+12];
	// inline asm
	prmt.b32 %r4889, %r4890, %r4891, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4889;
	ld.local.u32 	%r4894, [%rd7+12];
	ld.local.u32 	%r4895, [%rd7+8];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4893;
	ld.local.u32 	%r4898, [%rd7+8];
	ld.local.u32 	%r4899, [%rd7+4];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4897;
	ld.local.u32 	%r4902, [%rd7+4];
	ld.local.u32 	%r4903, [%rd7];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4901;
	ld.local.u32 	%r4906, [%rd7];
	ld.local.u32 	%r4907, [%rd6+12];
	// inline asm
	prmt.b32 %r4905, %r4906, %r4907, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4905;
	ld.local.u32 	%r4910, [%rd6+12];
	ld.local.u32 	%r4911, [%rd6+8];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4909;
	ld.local.u32 	%r4914, [%rd6+8];
	ld.local.u32 	%r4915, [%rd6+4];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4913;
	ld.local.u32 	%r4918, [%rd6+4];
	ld.local.u32 	%r4919, [%rd6];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4917;
	ld.local.u32 	%r4922, [%rd6];
	ld.local.u32 	%r4923, [%rd5+12];
	// inline asm
	prmt.b32 %r4921, %r4922, %r4923, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4921;
	ld.local.u32 	%r4926, [%rd5+12];
	ld.local.u32 	%r4927, [%rd5+8];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4925;
	ld.local.u32 	%r4930, [%rd5+8];
	ld.local.u32 	%r4931, [%rd5+4];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4929;
	ld.local.u32 	%r4934, [%rd5+4];
	ld.local.u32 	%r4935, [%rd5];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4933;
	ld.local.u32 	%r4938, [%rd5];
	ld.local.u32 	%r4939, [%rd4+12];
	// inline asm
	prmt.b32 %r4937, %r4938, %r4939, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4937;
	ld.local.u32 	%r4942, [%rd4+12];
	ld.local.u32 	%r4943, [%rd4+8];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4941;
	ld.local.u32 	%r4946, [%rd4+8];
	ld.local.u32 	%r4947, [%rd4+4];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4945;
	ld.local.u32 	%r4950, [%rd4+4];
	ld.local.u32 	%r4951, [%rd4];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4949;
	ld.local.u32 	%r4954, [%rd4];
	ld.local.u32 	%r4955, [%rd3+12];
	// inline asm
	prmt.b32 %r4953, %r4954, %r4955, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4953;
	ld.local.u32 	%r4958, [%rd3+12];
	ld.local.u32 	%r4959, [%rd3+8];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4957;
	ld.local.u32 	%r4962, [%rd3+8];
	ld.local.u32 	%r4963, [%rd3+4];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4961;
	ld.local.u32 	%r4966, [%rd3+4];
	ld.local.u32 	%r4967, [%rd3];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4965;
	ld.local.u32 	%r4970, [%rd3];
	ld.local.u32 	%r4971, [%rd2+12];
	// inline asm
	prmt.b32 %r4969, %r4970, %r4971, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4969;
	ld.local.u32 	%r4974, [%rd2+12];
	ld.local.u32 	%r4975, [%rd2+8];
	// inline asm
	prmt.b32 %r4973, %r4974, %r4975, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4973;
	ld.local.u32 	%r4978, [%rd2+8];
	ld.local.u32 	%r4979, [%rd2+4];
	// inline asm
	prmt.b32 %r4977, %r4978, %r4979, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4977;
	ld.local.u32 	%r4982, [%rd2+4];
	ld.local.u32 	%r4983, [%rd2];
	// inline asm
	prmt.b32 %r4981, %r4982, %r4983, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4981;
	ld.local.u32 	%r4986, [%rd2];
	ld.local.u32 	%r4987, [%rd1+12];
	// inline asm
	prmt.b32 %r4985, %r4986, %r4987, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4985;
	ld.local.u32 	%r4990, [%rd1+12];
	ld.local.u32 	%r4991, [%rd1+8];
	// inline asm
	prmt.b32 %r4989, %r4990, %r4991, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4989;
	ld.local.u32 	%r4994, [%rd1+8];
	ld.local.u32 	%r4995, [%rd1+4];
	// inline asm
	prmt.b32 %r4993, %r4994, %r4995, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4993;
	ld.local.u32 	%r4998, [%rd1+4];
	ld.local.u32 	%r4999, [%rd1];
	// inline asm
	prmt.b32 %r4997, %r4998, %r4999, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4997;
	ld.local.u32 	%r5002, [%rd1];
	// inline asm
	prmt.b32 %r5001, %r5002, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5001;
	mov.u64 	%rd55, 0;
	st.local.u32 	[%rd1+4], %rd55;
	st.local.u32 	[%rd1], %rd55;
	mov.u32 	%r11619, %r11618;
	bra.uni 	BB0_13;

BB0_130:
	setp.eq.s32	%p71, %r3, 18;
	@%p71 bra 	BB0_161;
	bra.uni 	BB0_131;

BB0_161:
	ld.local.u32 	%r7812, [%rd4+4];
	ld.local.u32 	%r7813, [%rd4];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7811;
	ld.local.u32 	%r7816, [%rd4];
	ld.local.u32 	%r7817, [%rd3+12];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7815;
	ld.local.u32 	%r7820, [%rd3+12];
	ld.local.u32 	%r7821, [%rd3+8];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7819;
	ld.local.u32 	%r7824, [%rd3+8];
	ld.local.u32 	%r7825, [%rd3+4];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7823;
	ld.local.u32 	%r7828, [%rd3+4];
	ld.local.u32 	%r7829, [%rd3];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7827;
	ld.local.u32 	%r7832, [%rd3];
	ld.local.u32 	%r7833, [%rd2+12];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7831;
	ld.local.u32 	%r7836, [%rd2+12];
	ld.local.u32 	%r7837, [%rd2+8];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7835;
	ld.local.u32 	%r7840, [%rd2+8];
	ld.local.u32 	%r7841, [%rd2+4];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7839;
	ld.local.u32 	%r7844, [%rd2+4];
	ld.local.u32 	%r7845, [%rd2];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7843;
	ld.local.u32 	%r7848, [%rd2];
	ld.local.u32 	%r7849, [%rd1+12];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7847;
	ld.local.u32 	%r7852, [%rd1+12];
	ld.local.u32 	%r7853, [%rd1+8];
	// inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7851;
	ld.local.u32 	%r7856, [%rd1+8];
	ld.local.u32 	%r7857, [%rd1+4];
	// inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7855;
	ld.local.u32 	%r7860, [%rd1+4];
	ld.local.u32 	%r7861, [%rd1];
	// inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7859;
	ld.local.u32 	%r7864, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7863, %r7864, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7863;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2933, 0;
	st.local.u32 	[%rd1+4], %rd2933;
	st.local.u32 	[%rd1], %rd2933;
	bra.uni 	BB0_172;

BB0_42:
	setp.eq.s32	%p24, %r3, 18;
	@%p24 bra 	BB0_73;
	bra.uni 	BB0_43;

BB0_73:
	ld.local.u32 	%r2419, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11636, %r11618, %r2419, %r4;
	// inline asm
	ld.local.u32 	%r2422, [%rd8+12];
	ld.local.u32 	%r2423, [%rd8+8];
	// inline asm
	prmt.b32 %r11637, %r2422, %r2423, %r4;
	// inline asm
	ld.local.u32 	%r2426, [%rd8+8];
	ld.local.u32 	%r2427, [%rd8+4];
	// inline asm
	prmt.b32 %r11638, %r2426, %r2427, %r4;
	// inline asm
	ld.local.u32 	%r2430, [%rd8+4];
	ld.local.u32 	%r2431, [%rd8];
	// inline asm
	prmt.b32 %r11631, %r2430, %r2431, %r4;
	// inline asm
	ld.local.u32 	%r2434, [%rd8];
	ld.local.u32 	%r2435, [%rd7+12];
	// inline asm
	prmt.b32 %r11632, %r2434, %r2435, %r4;
	// inline asm
	ld.local.u32 	%r2438, [%rd7+12];
	ld.local.u32 	%r2439, [%rd7+8];
	// inline asm
	prmt.b32 %r11633, %r2438, %r2439, %r4;
	// inline asm
	ld.local.u32 	%r2442, [%rd7+8];
	ld.local.u32 	%r2443, [%rd7+4];
	// inline asm
	prmt.b32 %r11634, %r2442, %r2443, %r4;
	// inline asm
	ld.local.u32 	%r2446, [%rd7+4];
	ld.local.u32 	%r2447, [%rd7];
	// inline asm
	prmt.b32 %r11627, %r2446, %r2447, %r4;
	// inline asm
	ld.local.u32 	%r2450, [%rd7];
	ld.local.u32 	%r2451, [%rd6+12];
	// inline asm
	prmt.b32 %r11628, %r2450, %r2451, %r4;
	// inline asm
	ld.local.u32 	%r2454, [%rd6+12];
	ld.local.u32 	%r2455, [%rd6+8];
	// inline asm
	prmt.b32 %r11629, %r2454, %r2455, %r4;
	// inline asm
	ld.local.u32 	%r2458, [%rd6+8];
	ld.local.u32 	%r2459, [%rd6+4];
	// inline asm
	prmt.b32 %r11630, %r2458, %r2459, %r4;
	// inline asm
	ld.local.u32 	%r2462, [%rd6+4];
	ld.local.u32 	%r2463, [%rd6];
	// inline asm
	prmt.b32 %r11623, %r2462, %r2463, %r4;
	// inline asm
	ld.local.u32 	%r2466, [%rd6];
	ld.local.u32 	%r2467, [%rd5+12];
	// inline asm
	prmt.b32 %r11624, %r2466, %r2467, %r4;
	// inline asm
	ld.local.u32 	%r2470, [%rd5+12];
	ld.local.u32 	%r2471, [%rd5+8];
	// inline asm
	prmt.b32 %r11625, %r2470, %r2471, %r4;
	// inline asm
	ld.local.u32 	%r2474, [%rd5+8];
	ld.local.u32 	%r2475, [%rd5+4];
	// inline asm
	prmt.b32 %r11626, %r2474, %r2475, %r4;
	// inline asm
	ld.local.u32 	%r2478, [%rd5+4];
	ld.local.u32 	%r2479, [%rd5];
	// inline asm
	prmt.b32 %r11619, %r2478, %r2479, %r4;
	// inline asm
	ld.local.u32 	%r2482, [%rd5];
	ld.local.u32 	%r2483, [%rd4+12];
	// inline asm
	prmt.b32 %r11620, %r2482, %r2483, %r4;
	// inline asm
	ld.local.u32 	%r2486, [%rd4+12];
	ld.local.u32 	%r2487, [%rd4+8];
	// inline asm
	prmt.b32 %r11621, %r2486, %r2487, %r4;
	// inline asm
	ld.local.u32 	%r2490, [%rd4+8];
	ld.local.u32 	%r2491, [%rd4+4];
	// inline asm
	prmt.b32 %r11622, %r2490, %r2491, %r4;
	// inline asm
	ld.local.u32 	%r2494, [%rd4+4];
	ld.local.u32 	%r2495, [%rd4];
	// inline asm
	prmt.b32 %r2493, %r2494, %r2495, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2493;
	ld.local.u32 	%r2498, [%rd4];
	ld.local.u32 	%r2499, [%rd3+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2497;
	ld.local.u32 	%r2502, [%rd3+12];
	ld.local.u32 	%r2503, [%rd3+8];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2501;
	ld.local.u32 	%r2506, [%rd3+8];
	ld.local.u32 	%r2507, [%rd3+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2505;
	ld.local.u32 	%r2510, [%rd3+4];
	ld.local.u32 	%r2511, [%rd3];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2509;
	ld.local.u32 	%r2514, [%rd3];
	ld.local.u32 	%r2515, [%rd2+12];
	// inline asm
	prmt.b32 %r2513, %r2514, %r2515, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2513;
	ld.local.u32 	%r2518, [%rd2+12];
	ld.local.u32 	%r2519, [%rd2+8];
	// inline asm
	prmt.b32 %r2517, %r2518, %r2519, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2517;
	ld.local.u32 	%r2522, [%rd2+8];
	ld.local.u32 	%r2523, [%rd2+4];
	// inline asm
	prmt.b32 %r2521, %r2522, %r2523, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2521;
	ld.local.u32 	%r2526, [%rd2+4];
	ld.local.u32 	%r2527, [%rd2];
	// inline asm
	prmt.b32 %r2525, %r2526, %r2527, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2525;
	ld.local.u32 	%r2530, [%rd2];
	ld.local.u32 	%r2531, [%rd1+12];
	// inline asm
	prmt.b32 %r2529, %r2530, %r2531, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2529;
	ld.local.u32 	%r2534, [%rd1+12];
	ld.local.u32 	%r2535, [%rd1+8];
	// inline asm
	prmt.b32 %r2533, %r2534, %r2535, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2533;
	ld.local.u32 	%r2538, [%rd1+8];
	ld.local.u32 	%r2539, [%rd1+4];
	// inline asm
	prmt.b32 %r2537, %r2538, %r2539, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2537;
	ld.local.u32 	%r2542, [%rd1+4];
	ld.local.u32 	%r2543, [%rd1];
	// inline asm
	prmt.b32 %r2541, %r2542, %r2543, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2541;
	ld.local.u32 	%r2546, [%rd1];
	// inline asm
	prmt.b32 %r2545, %r2546, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2545;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd39, 0;
	st.local.u32 	[%rd1+4], %rd39;
	st.local.u32 	[%rd1], %rd39;
	mov.u32 	%r11635, %r11618;
	bra.uni 	BB0_84;

BB0_114:
	setp.eq.s32	%p83, %r3, 10;
	@%p83 bra 	BB0_165;
	bra.uni 	BB0_115;

BB0_165:
	ld.local.u32 	%r8380, [%rd6+4];
	ld.local.u32 	%r8381, [%rd6];
	// inline asm
	prmt.b32 %r8379, %r8380, %r8381, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8379;
	ld.local.u32 	%r8384, [%rd6];
	ld.local.u32 	%r8385, [%rd5+12];
	// inline asm
	prmt.b32 %r8383, %r8384, %r8385, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8383;
	ld.local.u32 	%r8388, [%rd5+12];
	ld.local.u32 	%r8389, [%rd5+8];
	// inline asm
	prmt.b32 %r8387, %r8388, %r8389, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8387;
	ld.local.u32 	%r8392, [%rd5+8];
	ld.local.u32 	%r8393, [%rd5+4];
	// inline asm
	prmt.b32 %r8391, %r8392, %r8393, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8391;
	ld.local.u32 	%r8396, [%rd5+4];
	ld.local.u32 	%r8397, [%rd5];
	// inline asm
	prmt.b32 %r8395, %r8396, %r8397, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8395;
	ld.local.u32 	%r8400, [%rd5];
	ld.local.u32 	%r8401, [%rd4+12];
	// inline asm
	prmt.b32 %r8399, %r8400, %r8401, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8399;
	ld.local.u32 	%r8404, [%rd4+12];
	ld.local.u32 	%r8405, [%rd4+8];
	// inline asm
	prmt.b32 %r8403, %r8404, %r8405, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8403;
	ld.local.u32 	%r8408, [%rd4+8];
	ld.local.u32 	%r8409, [%rd4+4];
	// inline asm
	prmt.b32 %r8407, %r8408, %r8409, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8407;
	ld.local.u32 	%r8412, [%rd4+4];
	ld.local.u32 	%r8413, [%rd4];
	// inline asm
	prmt.b32 %r8411, %r8412, %r8413, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8411;
	ld.local.u32 	%r8416, [%rd4];
	ld.local.u32 	%r8417, [%rd3+12];
	// inline asm
	prmt.b32 %r8415, %r8416, %r8417, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8415;
	ld.local.u32 	%r8420, [%rd3+12];
	ld.local.u32 	%r8421, [%rd3+8];
	// inline asm
	prmt.b32 %r8419, %r8420, %r8421, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8419;
	ld.local.u32 	%r8424, [%rd3+8];
	ld.local.u32 	%r8425, [%rd3+4];
	// inline asm
	prmt.b32 %r8423, %r8424, %r8425, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8423;
	ld.local.u32 	%r8428, [%rd3+4];
	ld.local.u32 	%r8429, [%rd3];
	// inline asm
	prmt.b32 %r8427, %r8428, %r8429, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8427;
	ld.local.u32 	%r8432, [%rd3];
	ld.local.u32 	%r8433, [%rd2+12];
	// inline asm
	prmt.b32 %r8431, %r8432, %r8433, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8431;
	ld.local.u32 	%r8436, [%rd2+12];
	ld.local.u32 	%r8437, [%rd2+8];
	// inline asm
	prmt.b32 %r8435, %r8436, %r8437, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8435;
	ld.local.u32 	%r8440, [%rd2+8];
	ld.local.u32 	%r8441, [%rd2+4];
	// inline asm
	prmt.b32 %r8439, %r8440, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8439;
	ld.local.u32 	%r8444, [%rd2+4];
	ld.local.u32 	%r8445, [%rd2];
	// inline asm
	prmt.b32 %r8443, %r8444, %r8445, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8443;
	ld.local.u32 	%r8448, [%rd2];
	ld.local.u32 	%r8449, [%rd1+12];
	// inline asm
	prmt.b32 %r8447, %r8448, %r8449, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8447;
	ld.local.u32 	%r8452, [%rd1+12];
	ld.local.u32 	%r8453, [%rd1+8];
	// inline asm
	prmt.b32 %r8451, %r8452, %r8453, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8451;
	ld.local.u32 	%r8456, [%rd1+8];
	ld.local.u32 	%r8457, [%rd1+4];
	// inline asm
	prmt.b32 %r8455, %r8456, %r8457, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8455;
	ld.local.u32 	%r8460, [%rd1+4];
	ld.local.u32 	%r8461, [%rd1];
	// inline asm
	prmt.b32 %r8459, %r8460, %r8461, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8459;
	ld.local.u32 	%r8464, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8463, %r8464, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8463;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2941, 0;
	st.local.u32 	[%rd1+4], %rd2941;
	st.local.u32 	[%rd1], %rd2941;
	bra.uni 	BB0_172;

BB0_26:
	setp.eq.s32	%p36, %r3, 10;
	@%p36 bra 	BB0_77;
	bra.uni 	BB0_27;

BB0_77:
	ld.local.u32 	%r3615, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11628, %r11618, %r3615, %r4;
	// inline asm
	ld.local.u32 	%r3618, [%rd8+12];
	ld.local.u32 	%r3619, [%rd8+8];
	// inline asm
	prmt.b32 %r11629, %r3618, %r3619, %r4;
	// inline asm
	ld.local.u32 	%r3622, [%rd8+8];
	ld.local.u32 	%r3623, [%rd8+4];
	// inline asm
	prmt.b32 %r11630, %r3622, %r3623, %r4;
	// inline asm
	ld.local.u32 	%r3626, [%rd8+4];
	ld.local.u32 	%r3627, [%rd8];
	// inline asm
	prmt.b32 %r11623, %r3626, %r3627, %r4;
	// inline asm
	ld.local.u32 	%r3630, [%rd8];
	ld.local.u32 	%r3631, [%rd7+12];
	// inline asm
	prmt.b32 %r11624, %r3630, %r3631, %r4;
	// inline asm
	ld.local.u32 	%r3634, [%rd7+12];
	ld.local.u32 	%r3635, [%rd7+8];
	// inline asm
	prmt.b32 %r11625, %r3634, %r3635, %r4;
	// inline asm
	ld.local.u32 	%r3638, [%rd7+8];
	ld.local.u32 	%r3639, [%rd7+4];
	// inline asm
	prmt.b32 %r11626, %r3638, %r3639, %r4;
	// inline asm
	ld.local.u32 	%r3642, [%rd7+4];
	ld.local.u32 	%r3643, [%rd7];
	// inline asm
	prmt.b32 %r11619, %r3642, %r3643, %r4;
	// inline asm
	ld.local.u32 	%r3646, [%rd7];
	ld.local.u32 	%r3647, [%rd6+12];
	// inline asm
	prmt.b32 %r11620, %r3646, %r3647, %r4;
	// inline asm
	ld.local.u32 	%r3650, [%rd6+12];
	ld.local.u32 	%r3651, [%rd6+8];
	// inline asm
	prmt.b32 %r11621, %r3650, %r3651, %r4;
	// inline asm
	ld.local.u32 	%r3654, [%rd6+8];
	ld.local.u32 	%r3655, [%rd6+4];
	// inline asm
	prmt.b32 %r11622, %r3654, %r3655, %r4;
	// inline asm
	ld.local.u32 	%r3658, [%rd6+4];
	ld.local.u32 	%r3659, [%rd6];
	// inline asm
	prmt.b32 %r3657, %r3658, %r3659, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3657;
	ld.local.u32 	%r3662, [%rd6];
	ld.local.u32 	%r3663, [%rd5+12];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3661;
	ld.local.u32 	%r3666, [%rd5+12];
	ld.local.u32 	%r3667, [%rd5+8];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3665;
	ld.local.u32 	%r3670, [%rd5+8];
	ld.local.u32 	%r3671, [%rd5+4];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3669;
	ld.local.u32 	%r3674, [%rd5+4];
	ld.local.u32 	%r3675, [%rd5];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3673;
	ld.local.u32 	%r3678, [%rd5];
	ld.local.u32 	%r3679, [%rd4+12];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3677;
	ld.local.u32 	%r3682, [%rd4+12];
	ld.local.u32 	%r3683, [%rd4+8];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3681;
	ld.local.u32 	%r3686, [%rd4+8];
	ld.local.u32 	%r3687, [%rd4+4];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3685;
	ld.local.u32 	%r3690, [%rd4+4];
	ld.local.u32 	%r3691, [%rd4];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3689;
	ld.local.u32 	%r3694, [%rd4];
	ld.local.u32 	%r3695, [%rd3+12];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3693;
	ld.local.u32 	%r3698, [%rd3+12];
	ld.local.u32 	%r3699, [%rd3+8];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3697;
	ld.local.u32 	%r3702, [%rd3+8];
	ld.local.u32 	%r3703, [%rd3+4];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3701;
	ld.local.u32 	%r3706, [%rd3+4];
	ld.local.u32 	%r3707, [%rd3];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3705;
	ld.local.u32 	%r3710, [%rd3];
	ld.local.u32 	%r3711, [%rd2+12];
	// inline asm
	prmt.b32 %r3709, %r3710, %r3711, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3709;
	ld.local.u32 	%r3714, [%rd2+12];
	ld.local.u32 	%r3715, [%rd2+8];
	// inline asm
	prmt.b32 %r3713, %r3714, %r3715, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3713;
	ld.local.u32 	%r3718, [%rd2+8];
	ld.local.u32 	%r3719, [%rd2+4];
	// inline asm
	prmt.b32 %r3717, %r3718, %r3719, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3717;
	ld.local.u32 	%r3722, [%rd2+4];
	ld.local.u32 	%r3723, [%rd2];
	// inline asm
	prmt.b32 %r3721, %r3722, %r3723, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3721;
	ld.local.u32 	%r3726, [%rd2];
	ld.local.u32 	%r3727, [%rd1+12];
	// inline asm
	prmt.b32 %r3725, %r3726, %r3727, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3725;
	ld.local.u32 	%r3730, [%rd1+12];
	ld.local.u32 	%r3731, [%rd1+8];
	// inline asm
	prmt.b32 %r3729, %r3730, %r3731, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3729;
	ld.local.u32 	%r3734, [%rd1+8];
	ld.local.u32 	%r3735, [%rd1+4];
	// inline asm
	prmt.b32 %r3733, %r3734, %r3735, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3733;
	ld.local.u32 	%r3738, [%rd1+4];
	ld.local.u32 	%r3739, [%rd1];
	// inline asm
	prmt.b32 %r3737, %r3738, %r3739, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3737;
	ld.local.u32 	%r3742, [%rd1];
	// inline asm
	prmt.b32 %r3741, %r3742, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3741;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd47, 0;
	st.local.u32 	[%rd1+4], %rd47;
	st.local.u32 	[%rd1], %rd47;
	mov.u32 	%r11627, %r11618;
	bra.uni 	BB0_82;

BB0_145:
	setp.eq.s32	%p60, %r3, 26;
	@%p60 bra 	BB0_157;
	bra.uni 	BB0_146;

BB0_157:
	ld.local.u32 	%r7500, [%rd2+4];
	ld.local.u32 	%r7501, [%rd2];
	// inline asm
	prmt.b32 %r7499, %r7500, %r7501, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7499;
	ld.local.u32 	%r7504, [%rd2];
	ld.local.u32 	%r7505, [%rd1+12];
	// inline asm
	prmt.b32 %r7503, %r7504, %r7505, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7503;
	ld.local.u32 	%r7508, [%rd1+12];
	ld.local.u32 	%r7509, [%rd1+8];
	// inline asm
	prmt.b32 %r7507, %r7508, %r7509, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7507;
	ld.local.u32 	%r7512, [%rd1+8];
	ld.local.u32 	%r7513, [%rd1+4];
	// inline asm
	prmt.b32 %r7511, %r7512, %r7513, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7511;
	ld.local.u32 	%r7516, [%rd1+4];
	ld.local.u32 	%r7517, [%rd1];
	// inline asm
	prmt.b32 %r7515, %r7516, %r7517, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7515;
	ld.local.u32 	%r7520, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7519, %r7520, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7519;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2925, 0;
	st.local.u32 	[%rd1+4], %rd2925;
	st.local.u32 	[%rd1], %rd2925;
	bra.uni 	BB0_172;

BB0_57:
	setp.eq.s32	%p13, %r3, 26;
	@%p13 bra 	BB0_69;
	bra.uni 	BB0_58;

BB0_69:
	ld.local.u32 	%r1287, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11644, %r11618, %r1287, %r4;
	// inline asm
	ld.local.u32 	%r1290, [%rd8+12];
	ld.local.u32 	%r1291, [%rd8+8];
	// inline asm
	prmt.b32 %r11645, %r1290, %r1291, %r4;
	// inline asm
	ld.local.u32 	%r1294, [%rd8+8];
	ld.local.u32 	%r1295, [%rd8+4];
	// inline asm
	prmt.b32 %r11646, %r1294, %r1295, %r4;
	// inline asm
	ld.local.u32 	%r1298, [%rd8+4];
	ld.local.u32 	%r1299, [%rd8];
	// inline asm
	prmt.b32 %r11639, %r1298, %r1299, %r4;
	// inline asm
	ld.local.u32 	%r1302, [%rd8];
	ld.local.u32 	%r1303, [%rd7+12];
	// inline asm
	prmt.b32 %r11640, %r1302, %r1303, %r4;
	// inline asm
	ld.local.u32 	%r1306, [%rd7+12];
	ld.local.u32 	%r1307, [%rd7+8];
	// inline asm
	prmt.b32 %r11641, %r1306, %r1307, %r4;
	// inline asm
	ld.local.u32 	%r1310, [%rd7+8];
	ld.local.u32 	%r1311, [%rd7+4];
	// inline asm
	prmt.b32 %r11642, %r1310, %r1311, %r4;
	// inline asm
	ld.local.u32 	%r1314, [%rd7+4];
	ld.local.u32 	%r1315, [%rd7];
	// inline asm
	prmt.b32 %r11635, %r1314, %r1315, %r4;
	// inline asm
	ld.local.u32 	%r1318, [%rd7];
	ld.local.u32 	%r1319, [%rd6+12];
	// inline asm
	prmt.b32 %r11636, %r1318, %r1319, %r4;
	// inline asm
	ld.local.u32 	%r1322, [%rd6+12];
	ld.local.u32 	%r1323, [%rd6+8];
	// inline asm
	prmt.b32 %r11637, %r1322, %r1323, %r4;
	// inline asm
	ld.local.u32 	%r1326, [%rd6+8];
	ld.local.u32 	%r1327, [%rd6+4];
	// inline asm
	prmt.b32 %r11638, %r1326, %r1327, %r4;
	// inline asm
	ld.local.u32 	%r1330, [%rd6+4];
	ld.local.u32 	%r1331, [%rd6];
	// inline asm
	prmt.b32 %r11631, %r1330, %r1331, %r4;
	// inline asm
	ld.local.u32 	%r1334, [%rd6];
	ld.local.u32 	%r1335, [%rd5+12];
	// inline asm
	prmt.b32 %r11632, %r1334, %r1335, %r4;
	// inline asm
	ld.local.u32 	%r1338, [%rd5+12];
	ld.local.u32 	%r1339, [%rd5+8];
	// inline asm
	prmt.b32 %r11633, %r1338, %r1339, %r4;
	// inline asm
	ld.local.u32 	%r1342, [%rd5+8];
	ld.local.u32 	%r1343, [%rd5+4];
	// inline asm
	prmt.b32 %r11634, %r1342, %r1343, %r4;
	// inline asm
	ld.local.u32 	%r1346, [%rd5+4];
	ld.local.u32 	%r1347, [%rd5];
	// inline asm
	prmt.b32 %r11627, %r1346, %r1347, %r4;
	// inline asm
	ld.local.u32 	%r1350, [%rd5];
	ld.local.u32 	%r1351, [%rd4+12];
	// inline asm
	prmt.b32 %r11628, %r1350, %r1351, %r4;
	// inline asm
	ld.local.u32 	%r1354, [%rd4+12];
	ld.local.u32 	%r1355, [%rd4+8];
	// inline asm
	prmt.b32 %r11629, %r1354, %r1355, %r4;
	// inline asm
	ld.local.u32 	%r1358, [%rd4+8];
	ld.local.u32 	%r1359, [%rd4+4];
	// inline asm
	prmt.b32 %r11630, %r1358, %r1359, %r4;
	// inline asm
	ld.local.u32 	%r1362, [%rd4+4];
	ld.local.u32 	%r1363, [%rd4];
	// inline asm
	prmt.b32 %r11623, %r1362, %r1363, %r4;
	// inline asm
	ld.local.u32 	%r1366, [%rd4];
	ld.local.u32 	%r1367, [%rd3+12];
	// inline asm
	prmt.b32 %r11624, %r1366, %r1367, %r4;
	// inline asm
	ld.local.u32 	%r1370, [%rd3+12];
	ld.local.u32 	%r1371, [%rd3+8];
	// inline asm
	prmt.b32 %r11625, %r1370, %r1371, %r4;
	// inline asm
	ld.local.u32 	%r1374, [%rd3+8];
	ld.local.u32 	%r1375, [%rd3+4];
	// inline asm
	prmt.b32 %r11626, %r1374, %r1375, %r4;
	// inline asm
	ld.local.u32 	%r1378, [%rd3+4];
	ld.local.u32 	%r1379, [%rd3];
	// inline asm
	prmt.b32 %r11619, %r1378, %r1379, %r4;
	// inline asm
	ld.local.u32 	%r1382, [%rd3];
	ld.local.u32 	%r1383, [%rd2+12];
	// inline asm
	prmt.b32 %r11620, %r1382, %r1383, %r4;
	// inline asm
	ld.local.u32 	%r1386, [%rd2+12];
	ld.local.u32 	%r1387, [%rd2+8];
	// inline asm
	prmt.b32 %r11621, %r1386, %r1387, %r4;
	// inline asm
	ld.local.u32 	%r1390, [%rd2+8];
	ld.local.u32 	%r1391, [%rd2+4];
	// inline asm
	prmt.b32 %r11622, %r1390, %r1391, %r4;
	// inline asm
	ld.local.u32 	%r1394, [%rd2+4];
	ld.local.u32 	%r1395, [%rd2];
	// inline asm
	prmt.b32 %r1393, %r1394, %r1395, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1393;
	ld.local.u32 	%r1398, [%rd2];
	ld.local.u32 	%r1399, [%rd1+12];
	// inline asm
	prmt.b32 %r1397, %r1398, %r1399, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1397;
	ld.local.u32 	%r1402, [%rd1+12];
	ld.local.u32 	%r1403, [%rd1+8];
	// inline asm
	prmt.b32 %r1401, %r1402, %r1403, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1401;
	ld.local.u32 	%r1406, [%rd1+8];
	ld.local.u32 	%r1407, [%rd1+4];
	// inline asm
	prmt.b32 %r1405, %r1406, %r1407, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1405;
	ld.local.u32 	%r1410, [%rd1+4];
	ld.local.u32 	%r1411, [%rd1];
	// inline asm
	prmt.b32 %r1409, %r1410, %r1411, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1409;
	ld.local.u32 	%r1414, [%rd1];
	// inline asm
	prmt.b32 %r1413, %r1414, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1413;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd31, 0;
	st.local.u32 	[%rd1+4], %rd31;
	st.local.u32 	[%rd1], %rd31;
	mov.u32 	%r11643, %r11618;
	bra.uni 	BB0_86;

BB0_106:
	setp.eq.s32	%p89, %r3, 6;
	@%p89 bra 	BB0_167;
	bra.uni 	BB0_107;

BB0_167:
	ld.local.u32 	%r8760, [%rd7+4];
	ld.local.u32 	%r8761, [%rd7];
	// inline asm
	prmt.b32 %r8759, %r8760, %r8761, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8759;
	ld.local.u32 	%r8764, [%rd7];
	ld.local.u32 	%r8765, [%rd6+12];
	// inline asm
	prmt.b32 %r8763, %r8764, %r8765, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8763;
	ld.local.u32 	%r8768, [%rd6+12];
	ld.local.u32 	%r8769, [%rd6+8];
	// inline asm
	prmt.b32 %r8767, %r8768, %r8769, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8767;
	ld.local.u32 	%r8772, [%rd6+8];
	ld.local.u32 	%r8773, [%rd6+4];
	// inline asm
	prmt.b32 %r8771, %r8772, %r8773, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8771;
	ld.local.u32 	%r8776, [%rd6+4];
	ld.local.u32 	%r8777, [%rd6];
	// inline asm
	prmt.b32 %r8775, %r8776, %r8777, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8775;
	ld.local.u32 	%r8780, [%rd6];
	ld.local.u32 	%r8781, [%rd5+12];
	// inline asm
	prmt.b32 %r8779, %r8780, %r8781, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8779;
	ld.local.u32 	%r8784, [%rd5+12];
	ld.local.u32 	%r8785, [%rd5+8];
	// inline asm
	prmt.b32 %r8783, %r8784, %r8785, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8783;
	ld.local.u32 	%r8788, [%rd5+8];
	ld.local.u32 	%r8789, [%rd5+4];
	// inline asm
	prmt.b32 %r8787, %r8788, %r8789, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8787;
	ld.local.u32 	%r8792, [%rd5+4];
	ld.local.u32 	%r8793, [%rd5];
	// inline asm
	prmt.b32 %r8791, %r8792, %r8793, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8791;
	ld.local.u32 	%r8796, [%rd5];
	ld.local.u32 	%r8797, [%rd4+12];
	// inline asm
	prmt.b32 %r8795, %r8796, %r8797, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8795;
	ld.local.u32 	%r8800, [%rd4+12];
	ld.local.u32 	%r8801, [%rd4+8];
	// inline asm
	prmt.b32 %r8799, %r8800, %r8801, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8799;
	ld.local.u32 	%r8804, [%rd4+8];
	ld.local.u32 	%r8805, [%rd4+4];
	// inline asm
	prmt.b32 %r8803, %r8804, %r8805, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8803;
	ld.local.u32 	%r8808, [%rd4+4];
	ld.local.u32 	%r8809, [%rd4];
	// inline asm
	prmt.b32 %r8807, %r8808, %r8809, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8807;
	ld.local.u32 	%r8812, [%rd4];
	ld.local.u32 	%r8813, [%rd3+12];
	// inline asm
	prmt.b32 %r8811, %r8812, %r8813, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8811;
	ld.local.u32 	%r8816, [%rd3+12];
	ld.local.u32 	%r8817, [%rd3+8];
	// inline asm
	prmt.b32 %r8815, %r8816, %r8817, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8815;
	ld.local.u32 	%r8820, [%rd3+8];
	ld.local.u32 	%r8821, [%rd3+4];
	// inline asm
	prmt.b32 %r8819, %r8820, %r8821, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8819;
	ld.local.u32 	%r8824, [%rd3+4];
	ld.local.u32 	%r8825, [%rd3];
	// inline asm
	prmt.b32 %r8823, %r8824, %r8825, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8823;
	ld.local.u32 	%r8828, [%rd3];
	ld.local.u32 	%r8829, [%rd2+12];
	// inline asm
	prmt.b32 %r8827, %r8828, %r8829, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8827;
	ld.local.u32 	%r8832, [%rd2+12];
	ld.local.u32 	%r8833, [%rd2+8];
	// inline asm
	prmt.b32 %r8831, %r8832, %r8833, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8831;
	ld.local.u32 	%r8836, [%rd2+8];
	ld.local.u32 	%r8837, [%rd2+4];
	// inline asm
	prmt.b32 %r8835, %r8836, %r8837, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8835;
	ld.local.u32 	%r8840, [%rd2+4];
	ld.local.u32 	%r8841, [%rd2];
	// inline asm
	prmt.b32 %r8839, %r8840, %r8841, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8839;
	ld.local.u32 	%r8844, [%rd2];
	ld.local.u32 	%r8845, [%rd1+12];
	// inline asm
	prmt.b32 %r8843, %r8844, %r8845, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8843;
	ld.local.u32 	%r8848, [%rd1+12];
	ld.local.u32 	%r8849, [%rd1+8];
	// inline asm
	prmt.b32 %r8847, %r8848, %r8849, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8847;
	ld.local.u32 	%r8852, [%rd1+8];
	ld.local.u32 	%r8853, [%rd1+4];
	// inline asm
	prmt.b32 %r8851, %r8852, %r8853, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8851;
	ld.local.u32 	%r8856, [%rd1+4];
	ld.local.u32 	%r8857, [%rd1];
	// inline asm
	prmt.b32 %r8855, %r8856, %r8857, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8855;
	ld.local.u32 	%r8860, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8859, %r8860, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8859;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2945, 0;
	st.local.u32 	[%rd1+4], %rd2945;
	st.local.u32 	[%rd1], %rd2945;
	bra.uni 	BB0_172;

BB0_18:
	setp.eq.s32	%p42, %r3, 6;
	@%p42 bra 	BB0_79;
	bra.uni 	BB0_19;

BB0_79:
	ld.local.u32 	%r4237, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11624, %r11618, %r4237, %r4;
	// inline asm
	ld.local.u32 	%r4240, [%rd8+12];
	ld.local.u32 	%r4241, [%rd8+8];
	// inline asm
	prmt.b32 %r11625, %r4240, %r4241, %r4;
	// inline asm
	ld.local.u32 	%r4244, [%rd8+8];
	ld.local.u32 	%r4245, [%rd8+4];
	// inline asm
	prmt.b32 %r11626, %r4244, %r4245, %r4;
	// inline asm
	ld.local.u32 	%r4248, [%rd8+4];
	ld.local.u32 	%r4249, [%rd8];
	// inline asm
	prmt.b32 %r11619, %r4248, %r4249, %r4;
	// inline asm
	ld.local.u32 	%r4252, [%rd8];
	ld.local.u32 	%r4253, [%rd7+12];
	// inline asm
	prmt.b32 %r11620, %r4252, %r4253, %r4;
	// inline asm
	ld.local.u32 	%r4256, [%rd7+12];
	ld.local.u32 	%r4257, [%rd7+8];
	// inline asm
	prmt.b32 %r11621, %r4256, %r4257, %r4;
	// inline asm
	ld.local.u32 	%r4260, [%rd7+8];
	ld.local.u32 	%r4261, [%rd7+4];
	// inline asm
	prmt.b32 %r11622, %r4260, %r4261, %r4;
	// inline asm
	ld.local.u32 	%r4264, [%rd7+4];
	ld.local.u32 	%r4265, [%rd7];
	// inline asm
	prmt.b32 %r4263, %r4264, %r4265, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4263;
	ld.local.u32 	%r4268, [%rd7];
	ld.local.u32 	%r4269, [%rd6+12];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4267;
	ld.local.u32 	%r4272, [%rd6+12];
	ld.local.u32 	%r4273, [%rd6+8];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4271;
	ld.local.u32 	%r4276, [%rd6+8];
	ld.local.u32 	%r4277, [%rd6+4];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4275;
	ld.local.u32 	%r4280, [%rd6+4];
	ld.local.u32 	%r4281, [%rd6];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4279;
	ld.local.u32 	%r4284, [%rd6];
	ld.local.u32 	%r4285, [%rd5+12];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4283;
	ld.local.u32 	%r4288, [%rd5+12];
	ld.local.u32 	%r4289, [%rd5+8];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4287;
	ld.local.u32 	%r4292, [%rd5+8];
	ld.local.u32 	%r4293, [%rd5+4];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4291;
	ld.local.u32 	%r4296, [%rd5+4];
	ld.local.u32 	%r4297, [%rd5];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4295;
	ld.local.u32 	%r4300, [%rd5];
	ld.local.u32 	%r4301, [%rd4+12];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4299;
	ld.local.u32 	%r4304, [%rd4+12];
	ld.local.u32 	%r4305, [%rd4+8];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4303;
	ld.local.u32 	%r4308, [%rd4+8];
	ld.local.u32 	%r4309, [%rd4+4];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4307;
	ld.local.u32 	%r4312, [%rd4+4];
	ld.local.u32 	%r4313, [%rd4];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4311;
	ld.local.u32 	%r4316, [%rd4];
	ld.local.u32 	%r4317, [%rd3+12];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4315;
	ld.local.u32 	%r4320, [%rd3+12];
	ld.local.u32 	%r4321, [%rd3+8];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4319;
	ld.local.u32 	%r4324, [%rd3+8];
	ld.local.u32 	%r4325, [%rd3+4];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4323;
	ld.local.u32 	%r4328, [%rd3+4];
	ld.local.u32 	%r4329, [%rd3];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4327;
	ld.local.u32 	%r4332, [%rd3];
	ld.local.u32 	%r4333, [%rd2+12];
	// inline asm
	prmt.b32 %r4331, %r4332, %r4333, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4331;
	ld.local.u32 	%r4336, [%rd2+12];
	ld.local.u32 	%r4337, [%rd2+8];
	// inline asm
	prmt.b32 %r4335, %r4336, %r4337, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4335;
	ld.local.u32 	%r4340, [%rd2+8];
	ld.local.u32 	%r4341, [%rd2+4];
	// inline asm
	prmt.b32 %r4339, %r4340, %r4341, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4339;
	ld.local.u32 	%r4344, [%rd2+4];
	ld.local.u32 	%r4345, [%rd2];
	// inline asm
	prmt.b32 %r4343, %r4344, %r4345, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4343;
	ld.local.u32 	%r4348, [%rd2];
	ld.local.u32 	%r4349, [%rd1+12];
	// inline asm
	prmt.b32 %r4347, %r4348, %r4349, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4347;
	ld.local.u32 	%r4352, [%rd1+12];
	ld.local.u32 	%r4353, [%rd1+8];
	// inline asm
	prmt.b32 %r4351, %r4352, %r4353, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4351;
	ld.local.u32 	%r4356, [%rd1+8];
	ld.local.u32 	%r4357, [%rd1+4];
	// inline asm
	prmt.b32 %r4355, %r4356, %r4357, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4355;
	ld.local.u32 	%r4360, [%rd1+4];
	ld.local.u32 	%r4361, [%rd1];
	// inline asm
	prmt.b32 %r4359, %r4360, %r4361, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4359;
	ld.local.u32 	%r4364, [%rd1];
	// inline asm
	prmt.b32 %r4363, %r4364, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4363;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd51, 0;
	st.local.u32 	[%rd1+4], %rd51;
	st.local.u32 	[%rd1], %rd51;
	mov.u32 	%r11623, %r11618;
	bra.uni 	BB0_81;

BB0_137:
	setp.eq.s32	%p66, %r3, 22;
	@%p66 bra 	BB0_159;
	bra.uni 	BB0_138;

BB0_159:
	ld.local.u32 	%r7624, [%rd3+4];
	ld.local.u32 	%r7625, [%rd3];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7623;
	ld.local.u32 	%r7628, [%rd3];
	ld.local.u32 	%r7629, [%rd2+12];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7627;
	ld.local.u32 	%r7632, [%rd2+12];
	ld.local.u32 	%r7633, [%rd2+8];
	// inline asm
	prmt.b32 %r7631, %r7632, %r7633, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7631;
	ld.local.u32 	%r7636, [%rd2+8];
	ld.local.u32 	%r7637, [%rd2+4];
	// inline asm
	prmt.b32 %r7635, %r7636, %r7637, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7635;
	ld.local.u32 	%r7640, [%rd2+4];
	ld.local.u32 	%r7641, [%rd2];
	// inline asm
	prmt.b32 %r7639, %r7640, %r7641, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7639;
	ld.local.u32 	%r7644, [%rd2];
	ld.local.u32 	%r7645, [%rd1+12];
	// inline asm
	prmt.b32 %r7643, %r7644, %r7645, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7643;
	ld.local.u32 	%r7648, [%rd1+12];
	ld.local.u32 	%r7649, [%rd1+8];
	// inline asm
	prmt.b32 %r7647, %r7648, %r7649, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7647;
	ld.local.u32 	%r7652, [%rd1+8];
	ld.local.u32 	%r7653, [%rd1+4];
	// inline asm
	prmt.b32 %r7651, %r7652, %r7653, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7651;
	ld.local.u32 	%r7656, [%rd1+4];
	ld.local.u32 	%r7657, [%rd1];
	// inline asm
	prmt.b32 %r7655, %r7656, %r7657, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7655;
	ld.local.u32 	%r7660, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7659, %r7660, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7659;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2929, 0;
	st.local.u32 	[%rd1+4], %rd2929;
	st.local.u32 	[%rd1], %rd2929;
	bra.uni 	BB0_172;

BB0_49:
	setp.eq.s32	%p19, %r3, 22;
	@%p19 bra 	BB0_71;
	bra.uni 	BB0_50;

BB0_71:
	ld.local.u32 	%r1845, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11640, %r11618, %r1845, %r4;
	// inline asm
	ld.local.u32 	%r1848, [%rd8+12];
	ld.local.u32 	%r1849, [%rd8+8];
	// inline asm
	prmt.b32 %r11641, %r1848, %r1849, %r4;
	// inline asm
	ld.local.u32 	%r1852, [%rd8+8];
	ld.local.u32 	%r1853, [%rd8+4];
	// inline asm
	prmt.b32 %r11642, %r1852, %r1853, %r4;
	// inline asm
	ld.local.u32 	%r1856, [%rd8+4];
	ld.local.u32 	%r1857, [%rd8];
	// inline asm
	prmt.b32 %r11635, %r1856, %r1857, %r4;
	// inline asm
	ld.local.u32 	%r1860, [%rd8];
	ld.local.u32 	%r1861, [%rd7+12];
	// inline asm
	prmt.b32 %r11636, %r1860, %r1861, %r4;
	// inline asm
	ld.local.u32 	%r1864, [%rd7+12];
	ld.local.u32 	%r1865, [%rd7+8];
	// inline asm
	prmt.b32 %r11637, %r1864, %r1865, %r4;
	// inline asm
	ld.local.u32 	%r1868, [%rd7+8];
	ld.local.u32 	%r1869, [%rd7+4];
	// inline asm
	prmt.b32 %r11638, %r1868, %r1869, %r4;
	// inline asm
	ld.local.u32 	%r1872, [%rd7+4];
	ld.local.u32 	%r1873, [%rd7];
	// inline asm
	prmt.b32 %r11631, %r1872, %r1873, %r4;
	// inline asm
	ld.local.u32 	%r1876, [%rd7];
	ld.local.u32 	%r1877, [%rd6+12];
	// inline asm
	prmt.b32 %r11632, %r1876, %r1877, %r4;
	// inline asm
	ld.local.u32 	%r1880, [%rd6+12];
	ld.local.u32 	%r1881, [%rd6+8];
	// inline asm
	prmt.b32 %r11633, %r1880, %r1881, %r4;
	// inline asm
	ld.local.u32 	%r1884, [%rd6+8];
	ld.local.u32 	%r1885, [%rd6+4];
	// inline asm
	prmt.b32 %r11634, %r1884, %r1885, %r4;
	// inline asm
	ld.local.u32 	%r1888, [%rd6+4];
	ld.local.u32 	%r1889, [%rd6];
	// inline asm
	prmt.b32 %r11627, %r1888, %r1889, %r4;
	// inline asm
	ld.local.u32 	%r1892, [%rd6];
	ld.local.u32 	%r1893, [%rd5+12];
	// inline asm
	prmt.b32 %r11628, %r1892, %r1893, %r4;
	// inline asm
	ld.local.u32 	%r1896, [%rd5+12];
	ld.local.u32 	%r1897, [%rd5+8];
	// inline asm
	prmt.b32 %r11629, %r1896, %r1897, %r4;
	// inline asm
	ld.local.u32 	%r1900, [%rd5+8];
	ld.local.u32 	%r1901, [%rd5+4];
	// inline asm
	prmt.b32 %r11630, %r1900, %r1901, %r4;
	// inline asm
	ld.local.u32 	%r1904, [%rd5+4];
	ld.local.u32 	%r1905, [%rd5];
	// inline asm
	prmt.b32 %r11623, %r1904, %r1905, %r4;
	// inline asm
	ld.local.u32 	%r1908, [%rd5];
	ld.local.u32 	%r1909, [%rd4+12];
	// inline asm
	prmt.b32 %r11624, %r1908, %r1909, %r4;
	// inline asm
	ld.local.u32 	%r1912, [%rd4+12];
	ld.local.u32 	%r1913, [%rd4+8];
	// inline asm
	prmt.b32 %r11625, %r1912, %r1913, %r4;
	// inline asm
	ld.local.u32 	%r1916, [%rd4+8];
	ld.local.u32 	%r1917, [%rd4+4];
	// inline asm
	prmt.b32 %r11626, %r1916, %r1917, %r4;
	// inline asm
	ld.local.u32 	%r1920, [%rd4+4];
	ld.local.u32 	%r1921, [%rd4];
	// inline asm
	prmt.b32 %r11619, %r1920, %r1921, %r4;
	// inline asm
	ld.local.u32 	%r1924, [%rd4];
	ld.local.u32 	%r1925, [%rd3+12];
	// inline asm
	prmt.b32 %r11620, %r1924, %r1925, %r4;
	// inline asm
	ld.local.u32 	%r1928, [%rd3+12];
	ld.local.u32 	%r1929, [%rd3+8];
	// inline asm
	prmt.b32 %r11621, %r1928, %r1929, %r4;
	// inline asm
	ld.local.u32 	%r1932, [%rd3+8];
	ld.local.u32 	%r1933, [%rd3+4];
	// inline asm
	prmt.b32 %r11622, %r1932, %r1933, %r4;
	// inline asm
	ld.local.u32 	%r1936, [%rd3+4];
	ld.local.u32 	%r1937, [%rd3];
	// inline asm
	prmt.b32 %r1935, %r1936, %r1937, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1935;
	ld.local.u32 	%r1940, [%rd3];
	ld.local.u32 	%r1941, [%rd2+12];
	// inline asm
	prmt.b32 %r1939, %r1940, %r1941, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1939;
	ld.local.u32 	%r1944, [%rd2+12];
	ld.local.u32 	%r1945, [%rd2+8];
	// inline asm
	prmt.b32 %r1943, %r1944, %r1945, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1943;
	ld.local.u32 	%r1948, [%rd2+8];
	ld.local.u32 	%r1949, [%rd2+4];
	// inline asm
	prmt.b32 %r1947, %r1948, %r1949, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1947;
	ld.local.u32 	%r1952, [%rd2+4];
	ld.local.u32 	%r1953, [%rd2];
	// inline asm
	prmt.b32 %r1951, %r1952, %r1953, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1951;
	ld.local.u32 	%r1956, [%rd2];
	ld.local.u32 	%r1957, [%rd1+12];
	// inline asm
	prmt.b32 %r1955, %r1956, %r1957, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1955;
	ld.local.u32 	%r1960, [%rd1+12];
	ld.local.u32 	%r1961, [%rd1+8];
	// inline asm
	prmt.b32 %r1959, %r1960, %r1961, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1959;
	ld.local.u32 	%r1964, [%rd1+8];
	ld.local.u32 	%r1965, [%rd1+4];
	// inline asm
	prmt.b32 %r1963, %r1964, %r1965, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1963;
	ld.local.u32 	%r1968, [%rd1+4];
	ld.local.u32 	%r1969, [%rd1];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1967;
	ld.local.u32 	%r1972, [%rd1];
	// inline asm
	prmt.b32 %r1971, %r1972, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r1971;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd35, 0;
	st.local.u32 	[%rd1+4], %rd35;
	st.local.u32 	[%rd1], %rd35;
	mov.u32 	%r11639, %r11618;
	bra.uni 	BB0_85;

BB0_121:
	setp.eq.s32	%p78, %r3, 14;
	@%p78 bra 	BB0_163;
	bra.uni 	BB0_122;

BB0_163:
	ld.local.u32 	%r8064, [%rd5+4];
	ld.local.u32 	%r8065, [%rd5];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8063;
	ld.local.u32 	%r8068, [%rd5];
	ld.local.u32 	%r8069, [%rd4+12];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8067;
	ld.local.u32 	%r8072, [%rd4+12];
	ld.local.u32 	%r8073, [%rd4+8];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8071;
	ld.local.u32 	%r8076, [%rd4+8];
	ld.local.u32 	%r8077, [%rd4+4];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8075;
	ld.local.u32 	%r8080, [%rd4+4];
	ld.local.u32 	%r8081, [%rd4];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8079;
	ld.local.u32 	%r8084, [%rd4];
	ld.local.u32 	%r8085, [%rd3+12];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8083;
	ld.local.u32 	%r8088, [%rd3+12];
	ld.local.u32 	%r8089, [%rd3+8];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8087;
	ld.local.u32 	%r8092, [%rd3+8];
	ld.local.u32 	%r8093, [%rd3+4];
	// inline asm
	prmt.b32 %r8091, %r8092, %r8093, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8091;
	ld.local.u32 	%r8096, [%rd3+4];
	ld.local.u32 	%r8097, [%rd3];
	// inline asm
	prmt.b32 %r8095, %r8096, %r8097, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8095;
	ld.local.u32 	%r8100, [%rd3];
	ld.local.u32 	%r8101, [%rd2+12];
	// inline asm
	prmt.b32 %r8099, %r8100, %r8101, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8099;
	ld.local.u32 	%r8104, [%rd2+12];
	ld.local.u32 	%r8105, [%rd2+8];
	// inline asm
	prmt.b32 %r8103, %r8104, %r8105, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8103;
	ld.local.u32 	%r8108, [%rd2+8];
	ld.local.u32 	%r8109, [%rd2+4];
	// inline asm
	prmt.b32 %r8107, %r8108, %r8109, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8107;
	ld.local.u32 	%r8112, [%rd2+4];
	ld.local.u32 	%r8113, [%rd2];
	// inline asm
	prmt.b32 %r8111, %r8112, %r8113, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8111;
	ld.local.u32 	%r8116, [%rd2];
	ld.local.u32 	%r8117, [%rd1+12];
	// inline asm
	prmt.b32 %r8115, %r8116, %r8117, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8115;
	ld.local.u32 	%r8120, [%rd1+12];
	ld.local.u32 	%r8121, [%rd1+8];
	// inline asm
	prmt.b32 %r8119, %r8120, %r8121, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8119;
	ld.local.u32 	%r8124, [%rd1+8];
	ld.local.u32 	%r8125, [%rd1+4];
	// inline asm
	prmt.b32 %r8123, %r8124, %r8125, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8123;
	ld.local.u32 	%r8128, [%rd1+4];
	ld.local.u32 	%r8129, [%rd1];
	// inline asm
	prmt.b32 %r8127, %r8128, %r8129, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8127;
	ld.local.u32 	%r8132, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8131, %r8132, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8131;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2937, 0;
	st.local.u32 	[%rd1+4], %rd2937;
	st.local.u32 	[%rd1], %rd2937;
	bra.uni 	BB0_172;

BB0_33:
	setp.eq.s32	%p31, %r3, 14;
	@%p31 bra 	BB0_75;
	bra.uni 	BB0_34;

BB0_75:
	ld.local.u32 	%r3009, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11632, %r11618, %r3009, %r4;
	// inline asm
	ld.local.u32 	%r3012, [%rd8+12];
	ld.local.u32 	%r3013, [%rd8+8];
	// inline asm
	prmt.b32 %r11633, %r3012, %r3013, %r4;
	// inline asm
	ld.local.u32 	%r3016, [%rd8+8];
	ld.local.u32 	%r3017, [%rd8+4];
	// inline asm
	prmt.b32 %r11634, %r3016, %r3017, %r4;
	// inline asm
	ld.local.u32 	%r3020, [%rd8+4];
	ld.local.u32 	%r3021, [%rd8];
	// inline asm
	prmt.b32 %r11627, %r3020, %r3021, %r4;
	// inline asm
	ld.local.u32 	%r3024, [%rd8];
	ld.local.u32 	%r3025, [%rd7+12];
	// inline asm
	prmt.b32 %r11628, %r3024, %r3025, %r4;
	// inline asm
	ld.local.u32 	%r3028, [%rd7+12];
	ld.local.u32 	%r3029, [%rd7+8];
	// inline asm
	prmt.b32 %r11629, %r3028, %r3029, %r4;
	// inline asm
	ld.local.u32 	%r3032, [%rd7+8];
	ld.local.u32 	%r3033, [%rd7+4];
	// inline asm
	prmt.b32 %r11630, %r3032, %r3033, %r4;
	// inline asm
	ld.local.u32 	%r3036, [%rd7+4];
	ld.local.u32 	%r3037, [%rd7];
	// inline asm
	prmt.b32 %r11623, %r3036, %r3037, %r4;
	// inline asm
	ld.local.u32 	%r3040, [%rd7];
	ld.local.u32 	%r3041, [%rd6+12];
	// inline asm
	prmt.b32 %r11624, %r3040, %r3041, %r4;
	// inline asm
	ld.local.u32 	%r3044, [%rd6+12];
	ld.local.u32 	%r3045, [%rd6+8];
	// inline asm
	prmt.b32 %r11625, %r3044, %r3045, %r4;
	// inline asm
	ld.local.u32 	%r3048, [%rd6+8];
	ld.local.u32 	%r3049, [%rd6+4];
	// inline asm
	prmt.b32 %r11626, %r3048, %r3049, %r4;
	// inline asm
	ld.local.u32 	%r3052, [%rd6+4];
	ld.local.u32 	%r3053, [%rd6];
	// inline asm
	prmt.b32 %r11619, %r3052, %r3053, %r4;
	// inline asm
	ld.local.u32 	%r3056, [%rd6];
	ld.local.u32 	%r3057, [%rd5+12];
	// inline asm
	prmt.b32 %r11620, %r3056, %r3057, %r4;
	// inline asm
	ld.local.u32 	%r3060, [%rd5+12];
	ld.local.u32 	%r3061, [%rd5+8];
	// inline asm
	prmt.b32 %r11621, %r3060, %r3061, %r4;
	// inline asm
	ld.local.u32 	%r3064, [%rd5+8];
	ld.local.u32 	%r3065, [%rd5+4];
	// inline asm
	prmt.b32 %r11622, %r3064, %r3065, %r4;
	// inline asm
	ld.local.u32 	%r3068, [%rd5+4];
	ld.local.u32 	%r3069, [%rd5];
	// inline asm
	prmt.b32 %r3067, %r3068, %r3069, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3067;
	ld.local.u32 	%r3072, [%rd5];
	ld.local.u32 	%r3073, [%rd4+12];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3071;
	ld.local.u32 	%r3076, [%rd4+12];
	ld.local.u32 	%r3077, [%rd4+8];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3075;
	ld.local.u32 	%r3080, [%rd4+8];
	ld.local.u32 	%r3081, [%rd4+4];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3079;
	ld.local.u32 	%r3084, [%rd4+4];
	ld.local.u32 	%r3085, [%rd4];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3083;
	ld.local.u32 	%r3088, [%rd4];
	ld.local.u32 	%r3089, [%rd3+12];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3087;
	ld.local.u32 	%r3092, [%rd3+12];
	ld.local.u32 	%r3093, [%rd3+8];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3091;
	ld.local.u32 	%r3096, [%rd3+8];
	ld.local.u32 	%r3097, [%rd3+4];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3095;
	ld.local.u32 	%r3100, [%rd3+4];
	ld.local.u32 	%r3101, [%rd3];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3099;
	ld.local.u32 	%r3104, [%rd3];
	ld.local.u32 	%r3105, [%rd2+12];
	// inline asm
	prmt.b32 %r3103, %r3104, %r3105, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3103;
	ld.local.u32 	%r3108, [%rd2+12];
	ld.local.u32 	%r3109, [%rd2+8];
	// inline asm
	prmt.b32 %r3107, %r3108, %r3109, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3107;
	ld.local.u32 	%r3112, [%rd2+8];
	ld.local.u32 	%r3113, [%rd2+4];
	// inline asm
	prmt.b32 %r3111, %r3112, %r3113, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3111;
	ld.local.u32 	%r3116, [%rd2+4];
	ld.local.u32 	%r3117, [%rd2];
	// inline asm
	prmt.b32 %r3115, %r3116, %r3117, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3115;
	ld.local.u32 	%r3120, [%rd2];
	ld.local.u32 	%r3121, [%rd1+12];
	// inline asm
	prmt.b32 %r3119, %r3120, %r3121, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3119;
	ld.local.u32 	%r3124, [%rd1+12];
	ld.local.u32 	%r3125, [%rd1+8];
	// inline asm
	prmt.b32 %r3123, %r3124, %r3125, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3123;
	ld.local.u32 	%r3128, [%rd1+8];
	ld.local.u32 	%r3129, [%rd1+4];
	// inline asm
	prmt.b32 %r3127, %r3128, %r3129, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3127;
	ld.local.u32 	%r3132, [%rd1+4];
	ld.local.u32 	%r3133, [%rd1];
	// inline asm
	prmt.b32 %r3131, %r3132, %r3133, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3131;
	ld.local.u32 	%r3136, [%rd1];
	// inline asm
	prmt.b32 %r3135, %r3136, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3135;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd43, 0;
	st.local.u32 	[%rd1+4], %rd43;
	st.local.u32 	[%rd1], %rd43;
	mov.u32 	%r11631, %r11618;
	bra.uni 	BB0_83;

BB0_152:
	setp.eq.s32	%p55, %r3, 30;
	@%p55 bra 	BB0_155;
	bra.uni 	BB0_153;

BB0_155:
	ld.local.u32 	%r7440, [%rd1+4];
	ld.local.u32 	%r7441, [%rd1];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7439;
	ld.local.u32 	%r7444, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7443, %r7444, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7443;
	st.local.u32 	[%rd8+4], %r11651;
	st.local.u32 	[%rd8], %r11651;
	st.local.u32 	[%rd7+12], %r11651;
	st.local.u32 	[%rd7+8], %r11651;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2921, 0;
	st.local.u32 	[%rd1+4], %rd2921;
	st.local.u32 	[%rd1], %rd2921;
	bra.uni 	BB0_172;

BB0_64:
	setp.eq.s32	%p8, %r3, 30;
	@%p8 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	ld.local.u32 	%r745, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11648, %r11618, %r745, %r4;
	// inline asm
	ld.local.u32 	%r748, [%rd8+12];
	ld.local.u32 	%r749, [%rd8+8];
	// inline asm
	prmt.b32 %r11649, %r748, %r749, %r4;
	// inline asm
	ld.local.u32 	%r752, [%rd8+8];
	ld.local.u32 	%r753, [%rd8+4];
	// inline asm
	prmt.b32 %r11650, %r752, %r753, %r4;
	// inline asm
	ld.local.u32 	%r756, [%rd8+4];
	ld.local.u32 	%r757, [%rd8];
	// inline asm
	prmt.b32 %r11643, %r756, %r757, %r4;
	// inline asm
	ld.local.u32 	%r760, [%rd8];
	ld.local.u32 	%r761, [%rd7+12];
	// inline asm
	prmt.b32 %r11644, %r760, %r761, %r4;
	// inline asm
	ld.local.u32 	%r764, [%rd7+12];
	ld.local.u32 	%r765, [%rd7+8];
	// inline asm
	prmt.b32 %r11645, %r764, %r765, %r4;
	// inline asm
	ld.local.u32 	%r768, [%rd7+8];
	ld.local.u32 	%r769, [%rd7+4];
	// inline asm
	prmt.b32 %r11646, %r768, %r769, %r4;
	// inline asm
	ld.local.u32 	%r772, [%rd7+4];
	ld.local.u32 	%r773, [%rd7];
	// inline asm
	prmt.b32 %r11639, %r772, %r773, %r4;
	// inline asm
	ld.local.u32 	%r776, [%rd7];
	ld.local.u32 	%r777, [%rd6+12];
	// inline asm
	prmt.b32 %r11640, %r776, %r777, %r4;
	// inline asm
	ld.local.u32 	%r780, [%rd6+12];
	ld.local.u32 	%r781, [%rd6+8];
	// inline asm
	prmt.b32 %r11641, %r780, %r781, %r4;
	// inline asm
	ld.local.u32 	%r784, [%rd6+8];
	ld.local.u32 	%r785, [%rd6+4];
	// inline asm
	prmt.b32 %r11642, %r784, %r785, %r4;
	// inline asm
	ld.local.u32 	%r788, [%rd6+4];
	ld.local.u32 	%r789, [%rd6];
	// inline asm
	prmt.b32 %r11635, %r788, %r789, %r4;
	// inline asm
	ld.local.u32 	%r792, [%rd6];
	ld.local.u32 	%r793, [%rd5+12];
	// inline asm
	prmt.b32 %r11636, %r792, %r793, %r4;
	// inline asm
	ld.local.u32 	%r796, [%rd5+12];
	ld.local.u32 	%r797, [%rd5+8];
	// inline asm
	prmt.b32 %r11637, %r796, %r797, %r4;
	// inline asm
	ld.local.u32 	%r800, [%rd5+8];
	ld.local.u32 	%r801, [%rd5+4];
	// inline asm
	prmt.b32 %r11638, %r800, %r801, %r4;
	// inline asm
	ld.local.u32 	%r804, [%rd5+4];
	ld.local.u32 	%r805, [%rd5];
	// inline asm
	prmt.b32 %r11631, %r804, %r805, %r4;
	// inline asm
	ld.local.u32 	%r808, [%rd5];
	ld.local.u32 	%r809, [%rd4+12];
	// inline asm
	prmt.b32 %r11632, %r808, %r809, %r4;
	// inline asm
	ld.local.u32 	%r812, [%rd4+12];
	ld.local.u32 	%r813, [%rd4+8];
	// inline asm
	prmt.b32 %r11633, %r812, %r813, %r4;
	// inline asm
	ld.local.u32 	%r816, [%rd4+8];
	ld.local.u32 	%r817, [%rd4+4];
	// inline asm
	prmt.b32 %r11634, %r816, %r817, %r4;
	// inline asm
	ld.local.u32 	%r820, [%rd4+4];
	ld.local.u32 	%r821, [%rd4];
	// inline asm
	prmt.b32 %r11627, %r820, %r821, %r4;
	// inline asm
	ld.local.u32 	%r824, [%rd4];
	ld.local.u32 	%r825, [%rd3+12];
	// inline asm
	prmt.b32 %r11628, %r824, %r825, %r4;
	// inline asm
	ld.local.u32 	%r828, [%rd3+12];
	ld.local.u32 	%r829, [%rd3+8];
	// inline asm
	prmt.b32 %r11629, %r828, %r829, %r4;
	// inline asm
	ld.local.u32 	%r832, [%rd3+8];
	ld.local.u32 	%r833, [%rd3+4];
	// inline asm
	prmt.b32 %r11630, %r832, %r833, %r4;
	// inline asm
	ld.local.u32 	%r836, [%rd3+4];
	ld.local.u32 	%r837, [%rd3];
	// inline asm
	prmt.b32 %r11623, %r836, %r837, %r4;
	// inline asm
	ld.local.u32 	%r840, [%rd3];
	ld.local.u32 	%r841, [%rd2+12];
	// inline asm
	prmt.b32 %r11624, %r840, %r841, %r4;
	// inline asm
	ld.local.u32 	%r844, [%rd2+12];
	ld.local.u32 	%r845, [%rd2+8];
	// inline asm
	prmt.b32 %r11625, %r844, %r845, %r4;
	// inline asm
	ld.local.u32 	%r848, [%rd2+8];
	ld.local.u32 	%r849, [%rd2+4];
	// inline asm
	prmt.b32 %r11626, %r848, %r849, %r4;
	// inline asm
	ld.local.u32 	%r852, [%rd2+4];
	ld.local.u32 	%r853, [%rd2];
	// inline asm
	prmt.b32 %r11619, %r852, %r853, %r4;
	// inline asm
	ld.local.u32 	%r856, [%rd2];
	ld.local.u32 	%r857, [%rd1+12];
	// inline asm
	prmt.b32 %r11620, %r856, %r857, %r4;
	// inline asm
	ld.local.u32 	%r860, [%rd1+12];
	ld.local.u32 	%r861, [%rd1+8];
	// inline asm
	prmt.b32 %r11621, %r860, %r861, %r4;
	// inline asm
	ld.local.u32 	%r864, [%rd1+8];
	ld.local.u32 	%r865, [%rd1+4];
	// inline asm
	prmt.b32 %r11622, %r864, %r865, %r4;
	// inline asm
	ld.local.u32 	%r868, [%rd1+4];
	ld.local.u32 	%r869, [%rd1];
	// inline asm
	prmt.b32 %r867, %r868, %r869, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r867;
	ld.local.u32 	%r872, [%rd1];
	// inline asm
	prmt.b32 %r871, %r872, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r871;
	st.local.u32 	[%rd8+4], %r11618;
	st.local.u32 	[%rd8], %r11618;
	st.local.u32 	[%rd7+12], %r11618;
	st.local.u32 	[%rd7+8], %r11618;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd27, 0;
	st.local.u32 	[%rd1+4], %rd27;
	st.local.u32 	[%rd1], %rd27;
	mov.u32 	%r11647, %r11618;
	bra.uni 	BB0_91;

BB0_97:
	setp.eq.s32	%p97, %r3, 1;
	@%p97 bra 	BB0_98;
	bra.uni 	BB0_171;

BB0_98:
	ld.local.u32 	%r9325, [%rd8+8];
	ld.local.u32 	%r9326, [%rd8+4];
	// inline asm
	prmt.b32 %r9324, %r9325, %r9326, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r9324;
	ld.local.u32 	%r9329, [%rd8+4];
	ld.local.u32 	%r9330, [%rd8];
	// inline asm
	prmt.b32 %r9328, %r9329, %r9330, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r9328;
	ld.local.u32 	%r9333, [%rd8];
	ld.local.u32 	%r9334, [%rd7+12];
	// inline asm
	prmt.b32 %r9332, %r9333, %r9334, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r9332;
	ld.local.u32 	%r9337, [%rd7+12];
	ld.local.u32 	%r9338, [%rd7+8];
	// inline asm
	prmt.b32 %r9336, %r9337, %r9338, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r9336;
	ld.local.u32 	%r9341, [%rd7+8];
	ld.local.u32 	%r9342, [%rd7+4];
	// inline asm
	prmt.b32 %r9340, %r9341, %r9342, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r9340;
	ld.local.u32 	%r9345, [%rd7+4];
	ld.local.u32 	%r9346, [%rd7];
	// inline asm
	prmt.b32 %r9344, %r9345, %r9346, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r9344;
	ld.local.u32 	%r9349, [%rd7];
	ld.local.u32 	%r9350, [%rd6+12];
	// inline asm
	prmt.b32 %r9348, %r9349, %r9350, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r9348;
	ld.local.u32 	%r9353, [%rd6+12];
	ld.local.u32 	%r9354, [%rd6+8];
	// inline asm
	prmt.b32 %r9352, %r9353, %r9354, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r9352;
	ld.local.u32 	%r9357, [%rd6+8];
	ld.local.u32 	%r9358, [%rd6+4];
	// inline asm
	prmt.b32 %r9356, %r9357, %r9358, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r9356;
	ld.local.u32 	%r9361, [%rd6+4];
	ld.local.u32 	%r9362, [%rd6];
	// inline asm
	prmt.b32 %r9360, %r9361, %r9362, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r9360;
	ld.local.u32 	%r9365, [%rd6];
	ld.local.u32 	%r9366, [%rd5+12];
	// inline asm
	prmt.b32 %r9364, %r9365, %r9366, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r9364;
	ld.local.u32 	%r9369, [%rd5+12];
	ld.local.u32 	%r9370, [%rd5+8];
	// inline asm
	prmt.b32 %r9368, %r9369, %r9370, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r9368;
	ld.local.u32 	%r9373, [%rd5+8];
	ld.local.u32 	%r9374, [%rd5+4];
	// inline asm
	prmt.b32 %r9372, %r9373, %r9374, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r9372;
	ld.local.u32 	%r9377, [%rd5+4];
	ld.local.u32 	%r9378, [%rd5];
	// inline asm
	prmt.b32 %r9376, %r9377, %r9378, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r9376;
	ld.local.u32 	%r9381, [%rd5];
	ld.local.u32 	%r9382, [%rd4+12];
	// inline asm
	prmt.b32 %r9380, %r9381, %r9382, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r9380;
	ld.local.u32 	%r9385, [%rd4+12];
	ld.local.u32 	%r9386, [%rd4+8];
	// inline asm
	prmt.b32 %r9384, %r9385, %r9386, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r9384;
	ld.local.u32 	%r9389, [%rd4+8];
	ld.local.u32 	%r9390, [%rd4+4];
	// inline asm
	prmt.b32 %r9388, %r9389, %r9390, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r9388;
	ld.local.u32 	%r9393, [%rd4+4];
	ld.local.u32 	%r9394, [%rd4];
	// inline asm
	prmt.b32 %r9392, %r9393, %r9394, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r9392;
	ld.local.u32 	%r9397, [%rd4];
	ld.local.u32 	%r9398, [%rd3+12];
	// inline asm
	prmt.b32 %r9396, %r9397, %r9398, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r9396;
	ld.local.u32 	%r9401, [%rd3+12];
	ld.local.u32 	%r9402, [%rd3+8];
	// inline asm
	prmt.b32 %r9400, %r9401, %r9402, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r9400;
	ld.local.u32 	%r9405, [%rd3+8];
	ld.local.u32 	%r9406, [%rd3+4];
	// inline asm
	prmt.b32 %r9404, %r9405, %r9406, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r9404;
	ld.local.u32 	%r9409, [%rd3+4];
	ld.local.u32 	%r9410, [%rd3];
	// inline asm
	prmt.b32 %r9408, %r9409, %r9410, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r9408;
	ld.local.u32 	%r9413, [%rd3];
	ld.local.u32 	%r9414, [%rd2+12];
	// inline asm
	prmt.b32 %r9412, %r9413, %r9414, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r9412;
	ld.local.u32 	%r9417, [%rd2+12];
	ld.local.u32 	%r9418, [%rd2+8];
	// inline asm
	prmt.b32 %r9416, %r9417, %r9418, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r9416;
	ld.local.u32 	%r9421, [%rd2+8];
	ld.local.u32 	%r9422, [%rd2+4];
	// inline asm
	prmt.b32 %r9420, %r9421, %r9422, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r9420;
	ld.local.u32 	%r9425, [%rd2+4];
	ld.local.u32 	%r9426, [%rd2];
	// inline asm
	prmt.b32 %r9424, %r9425, %r9426, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r9424;
	ld.local.u32 	%r9429, [%rd2];
	ld.local.u32 	%r9430, [%rd1+12];
	// inline asm
	prmt.b32 %r9428, %r9429, %r9430, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r9428;
	ld.local.u32 	%r9433, [%rd1+12];
	ld.local.u32 	%r9434, [%rd1+8];
	// inline asm
	prmt.b32 %r9432, %r9433, %r9434, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r9432;
	ld.local.u32 	%r9437, [%rd1+8];
	ld.local.u32 	%r9438, [%rd1+4];
	// inline asm
	prmt.b32 %r9436, %r9437, %r9438, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r9436;
	ld.local.u32 	%r9441, [%rd1+4];
	ld.local.u32 	%r9442, [%rd1];
	// inline asm
	prmt.b32 %r9440, %r9441, %r9442, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r9440;
	ld.local.u32 	%r9445, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r9444, %r9445, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r9444;
	st.local.u32 	[%rd1], %r11651;
	bra.uni 	BB0_172;

BB0_8:
	setp.eq.s32	%p50, %r3, 1;
	@%p50 bra 	BB0_9;
	bra.uni 	BB0_89;

BB0_9:
	ld.local.u32 	%r5037, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11621, %r11618, %r5037, %r4;
	// inline asm
	ld.local.u32 	%r5040, [%rd8+12];
	ld.local.u32 	%r5041, [%rd8+8];
	// inline asm
	prmt.b32 %r11622, %r5040, %r5041, %r4;
	// inline asm
	ld.local.u32 	%r5044, [%rd8+8];
	ld.local.u32 	%r5045, [%rd8+4];
	// inline asm
	prmt.b32 %r5043, %r5044, %r5045, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5043;
	ld.local.u32 	%r5048, [%rd8+4];
	ld.local.u32 	%r5049, [%rd8];
	// inline asm
	prmt.b32 %r5047, %r5048, %r5049, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5047;
	ld.local.u32 	%r5052, [%rd8];
	ld.local.u32 	%r5053, [%rd7+12];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5051;
	ld.local.u32 	%r5056, [%rd7+12];
	ld.local.u32 	%r5057, [%rd7+8];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5055;
	ld.local.u32 	%r5060, [%rd7+8];
	ld.local.u32 	%r5061, [%rd7+4];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5059;
	ld.local.u32 	%r5064, [%rd7+4];
	ld.local.u32 	%r5065, [%rd7];
	// inline asm
	prmt.b32 %r5063, %r5064, %r5065, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5063;
	ld.local.u32 	%r5068, [%rd7];
	ld.local.u32 	%r5069, [%rd6+12];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5067;
	ld.local.u32 	%r5072, [%rd6+12];
	ld.local.u32 	%r5073, [%rd6+8];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5071;
	ld.local.u32 	%r5076, [%rd6+8];
	ld.local.u32 	%r5077, [%rd6+4];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5075;
	ld.local.u32 	%r5080, [%rd6+4];
	ld.local.u32 	%r5081, [%rd6];
	// inline asm
	prmt.b32 %r5079, %r5080, %r5081, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5079;
	ld.local.u32 	%r5084, [%rd6];
	ld.local.u32 	%r5085, [%rd5+12];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5083;
	ld.local.u32 	%r5088, [%rd5+12];
	ld.local.u32 	%r5089, [%rd5+8];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5087;
	ld.local.u32 	%r5092, [%rd5+8];
	ld.local.u32 	%r5093, [%rd5+4];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5091;
	ld.local.u32 	%r5096, [%rd5+4];
	ld.local.u32 	%r5097, [%rd5];
	// inline asm
	prmt.b32 %r5095, %r5096, %r5097, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5095;
	ld.local.u32 	%r5100, [%rd5];
	ld.local.u32 	%r5101, [%rd4+12];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5099;
	ld.local.u32 	%r5104, [%rd4+12];
	ld.local.u32 	%r5105, [%rd4+8];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5103;
	ld.local.u32 	%r5108, [%rd4+8];
	ld.local.u32 	%r5109, [%rd4+4];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5107;
	ld.local.u32 	%r5112, [%rd4+4];
	ld.local.u32 	%r5113, [%rd4];
	// inline asm
	prmt.b32 %r5111, %r5112, %r5113, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5111;
	ld.local.u32 	%r5116, [%rd4];
	ld.local.u32 	%r5117, [%rd3+12];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5115;
	ld.local.u32 	%r5120, [%rd3+12];
	ld.local.u32 	%r5121, [%rd3+8];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5119;
	ld.local.u32 	%r5124, [%rd3+8];
	ld.local.u32 	%r5125, [%rd3+4];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5123;
	ld.local.u32 	%r5128, [%rd3+4];
	ld.local.u32 	%r5129, [%rd3];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5127;
	ld.local.u32 	%r5132, [%rd3];
	ld.local.u32 	%r5133, [%rd2+12];
	// inline asm
	prmt.b32 %r5131, %r5132, %r5133, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5131;
	ld.local.u32 	%r5136, [%rd2+12];
	ld.local.u32 	%r5137, [%rd2+8];
	// inline asm
	prmt.b32 %r5135, %r5136, %r5137, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5135;
	ld.local.u32 	%r5140, [%rd2+8];
	ld.local.u32 	%r5141, [%rd2+4];
	// inline asm
	prmt.b32 %r5139, %r5140, %r5141, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5139;
	ld.local.u32 	%r5144, [%rd2+4];
	ld.local.u32 	%r5145, [%rd2];
	// inline asm
	prmt.b32 %r5143, %r5144, %r5145, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5143;
	ld.local.u32 	%r5148, [%rd2];
	ld.local.u32 	%r5149, [%rd1+12];
	// inline asm
	prmt.b32 %r5147, %r5148, %r5149, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5147;
	ld.local.u32 	%r5152, [%rd1+12];
	ld.local.u32 	%r5153, [%rd1+8];
	// inline asm
	prmt.b32 %r5151, %r5152, %r5153, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5151;
	ld.local.u32 	%r5156, [%rd1+8];
	ld.local.u32 	%r5157, [%rd1+4];
	// inline asm
	prmt.b32 %r5155, %r5156, %r5157, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5155;
	ld.local.u32 	%r5160, [%rd1+4];
	ld.local.u32 	%r5161, [%rd1];
	// inline asm
	prmt.b32 %r5159, %r5160, %r5161, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5159;
	ld.local.u32 	%r5164, [%rd1];
	// inline asm
	prmt.b32 %r5163, %r5164, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5163;
	st.local.u32 	[%rd1], %r11618;
	mov.u32 	%r11619, %r11618;
	mov.u32 	%r11620, %r11618;
	bra.uni 	BB0_13;

BB0_128:
	setp.eq.s32	%p74, %r3, 17;
	@%p74 bra 	BB0_129;
	bra.uni 	BB0_171;

BB0_129:
	ld.local.u32 	%r7869, [%rd4+8];
	ld.local.u32 	%r7870, [%rd4+4];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7868;
	ld.local.u32 	%r7873, [%rd4+4];
	ld.local.u32 	%r7874, [%rd4];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7872;
	ld.local.u32 	%r7877, [%rd4];
	ld.local.u32 	%r7878, [%rd3+12];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7876;
	ld.local.u32 	%r7881, [%rd3+12];
	ld.local.u32 	%r7882, [%rd3+8];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7880;
	ld.local.u32 	%r7885, [%rd3+8];
	ld.local.u32 	%r7886, [%rd3+4];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7884;
	ld.local.u32 	%r7889, [%rd3+4];
	ld.local.u32 	%r7890, [%rd3];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7888;
	ld.local.u32 	%r7893, [%rd3];
	ld.local.u32 	%r7894, [%rd2+12];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7892;
	ld.local.u32 	%r7897, [%rd2+12];
	ld.local.u32 	%r7898, [%rd2+8];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7896;
	ld.local.u32 	%r7901, [%rd2+8];
	ld.local.u32 	%r7902, [%rd2+4];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7900;
	ld.local.u32 	%r7905, [%rd2+4];
	ld.local.u32 	%r7906, [%rd2];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7904;
	ld.local.u32 	%r7909, [%rd2];
	ld.local.u32 	%r7910, [%rd1+12];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7908;
	ld.local.u32 	%r7913, [%rd1+12];
	ld.local.u32 	%r7914, [%rd1+8];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7912;
	ld.local.u32 	%r7917, [%rd1+8];
	ld.local.u32 	%r7918, [%rd1+4];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7916;
	ld.local.u32 	%r7921, [%rd1+4];
	ld.local.u32 	%r7922, [%rd1];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7920;
	ld.local.u32 	%r7925, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7924, %r7925, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7924;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2934, 0;
	st.local.u32 	[%rd1+4], %rd2934;
	st.local.u32 	[%rd1], %rd2934;
	bra.uni 	BB0_172;

BB0_40:
	setp.eq.s32	%p27, %r3, 17;
	@%p27 bra 	BB0_41;
	bra.uni 	BB0_89;

BB0_41:
	ld.local.u32 	%r2565, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11637, %r11618, %r2565, %r4;
	// inline asm
	ld.local.u32 	%r2568, [%rd8+12];
	ld.local.u32 	%r2569, [%rd8+8];
	// inline asm
	prmt.b32 %r11638, %r2568, %r2569, %r4;
	// inline asm
	ld.local.u32 	%r2572, [%rd8+8];
	ld.local.u32 	%r2573, [%rd8+4];
	// inline asm
	prmt.b32 %r11631, %r2572, %r2573, %r4;
	// inline asm
	ld.local.u32 	%r2576, [%rd8+4];
	ld.local.u32 	%r2577, [%rd8];
	// inline asm
	prmt.b32 %r11632, %r2576, %r2577, %r4;
	// inline asm
	ld.local.u32 	%r2580, [%rd8];
	ld.local.u32 	%r2581, [%rd7+12];
	// inline asm
	prmt.b32 %r11633, %r2580, %r2581, %r4;
	// inline asm
	ld.local.u32 	%r2584, [%rd7+12];
	ld.local.u32 	%r2585, [%rd7+8];
	// inline asm
	prmt.b32 %r11634, %r2584, %r2585, %r4;
	// inline asm
	ld.local.u32 	%r2588, [%rd7+8];
	ld.local.u32 	%r2589, [%rd7+4];
	// inline asm
	prmt.b32 %r11627, %r2588, %r2589, %r4;
	// inline asm
	ld.local.u32 	%r2592, [%rd7+4];
	ld.local.u32 	%r2593, [%rd7];
	// inline asm
	prmt.b32 %r11628, %r2592, %r2593, %r4;
	// inline asm
	ld.local.u32 	%r2596, [%rd7];
	ld.local.u32 	%r2597, [%rd6+12];
	// inline asm
	prmt.b32 %r11629, %r2596, %r2597, %r4;
	// inline asm
	ld.local.u32 	%r2600, [%rd6+12];
	ld.local.u32 	%r2601, [%rd6+8];
	// inline asm
	prmt.b32 %r11630, %r2600, %r2601, %r4;
	// inline asm
	ld.local.u32 	%r2604, [%rd6+8];
	ld.local.u32 	%r2605, [%rd6+4];
	// inline asm
	prmt.b32 %r11623, %r2604, %r2605, %r4;
	// inline asm
	ld.local.u32 	%r2608, [%rd6+4];
	ld.local.u32 	%r2609, [%rd6];
	// inline asm
	prmt.b32 %r11624, %r2608, %r2609, %r4;
	// inline asm
	ld.local.u32 	%r2612, [%rd6];
	ld.local.u32 	%r2613, [%rd5+12];
	// inline asm
	prmt.b32 %r11625, %r2612, %r2613, %r4;
	// inline asm
	ld.local.u32 	%r2616, [%rd5+12];
	ld.local.u32 	%r2617, [%rd5+8];
	// inline asm
	prmt.b32 %r11626, %r2616, %r2617, %r4;
	// inline asm
	ld.local.u32 	%r2620, [%rd5+8];
	ld.local.u32 	%r2621, [%rd5+4];
	// inline asm
	prmt.b32 %r11619, %r2620, %r2621, %r4;
	// inline asm
	ld.local.u32 	%r2624, [%rd5+4];
	ld.local.u32 	%r2625, [%rd5];
	// inline asm
	prmt.b32 %r11620, %r2624, %r2625, %r4;
	// inline asm
	ld.local.u32 	%r2628, [%rd5];
	ld.local.u32 	%r2629, [%rd4+12];
	// inline asm
	prmt.b32 %r11621, %r2628, %r2629, %r4;
	// inline asm
	ld.local.u32 	%r2632, [%rd4+12];
	ld.local.u32 	%r2633, [%rd4+8];
	// inline asm
	prmt.b32 %r11622, %r2632, %r2633, %r4;
	// inline asm
	ld.local.u32 	%r2636, [%rd4+8];
	ld.local.u32 	%r2637, [%rd4+4];
	// inline asm
	prmt.b32 %r2635, %r2636, %r2637, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2635;
	ld.local.u32 	%r2640, [%rd4+4];
	ld.local.u32 	%r2641, [%rd4];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2639;
	ld.local.u32 	%r2644, [%rd4];
	ld.local.u32 	%r2645, [%rd3+12];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2643;
	ld.local.u32 	%r2648, [%rd3+12];
	ld.local.u32 	%r2649, [%rd3+8];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2647;
	ld.local.u32 	%r2652, [%rd3+8];
	ld.local.u32 	%r2653, [%rd3+4];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2651;
	ld.local.u32 	%r2656, [%rd3+4];
	ld.local.u32 	%r2657, [%rd3];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2655;
	ld.local.u32 	%r2660, [%rd3];
	ld.local.u32 	%r2661, [%rd2+12];
	// inline asm
	prmt.b32 %r2659, %r2660, %r2661, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2659;
	ld.local.u32 	%r2664, [%rd2+12];
	ld.local.u32 	%r2665, [%rd2+8];
	// inline asm
	prmt.b32 %r2663, %r2664, %r2665, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2663;
	ld.local.u32 	%r2668, [%rd2+8];
	ld.local.u32 	%r2669, [%rd2+4];
	// inline asm
	prmt.b32 %r2667, %r2668, %r2669, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2667;
	ld.local.u32 	%r2672, [%rd2+4];
	ld.local.u32 	%r2673, [%rd2];
	// inline asm
	prmt.b32 %r2671, %r2672, %r2673, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2671;
	ld.local.u32 	%r2676, [%rd2];
	ld.local.u32 	%r2677, [%rd1+12];
	// inline asm
	prmt.b32 %r2675, %r2676, %r2677, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2675;
	ld.local.u32 	%r2680, [%rd1+12];
	ld.local.u32 	%r2681, [%rd1+8];
	// inline asm
	prmt.b32 %r2679, %r2680, %r2681, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2679;
	ld.local.u32 	%r2684, [%rd1+8];
	ld.local.u32 	%r2685, [%rd1+4];
	// inline asm
	prmt.b32 %r2683, %r2684, %r2685, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2683;
	ld.local.u32 	%r2688, [%rd1+4];
	ld.local.u32 	%r2689, [%rd1];
	// inline asm
	prmt.b32 %r2687, %r2688, %r2689, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2687;
	ld.local.u32 	%r2692, [%rd1];
	// inline asm
	prmt.b32 %r2691, %r2692, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2691;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd40, 0;
	st.local.u32 	[%rd1+4], %rd40;
	st.local.u32 	[%rd1], %rd40;
	mov.u32 	%r11635, %r11618;
	mov.u32 	%r11636, %r11618;
	bra.uni 	BB0_84;

BB0_112:
	setp.eq.s32	%p86, %r3, 9;
	@%p86 bra 	BB0_113;
	bra.uni 	BB0_171;

BB0_113:
	ld.local.u32 	%r8469, [%rd6+8];
	ld.local.u32 	%r8470, [%rd6+4];
	// inline asm
	prmt.b32 %r8468, %r8469, %r8470, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8468;
	ld.local.u32 	%r8473, [%rd6+4];
	ld.local.u32 	%r8474, [%rd6];
	// inline asm
	prmt.b32 %r8472, %r8473, %r8474, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8472;
	ld.local.u32 	%r8477, [%rd6];
	ld.local.u32 	%r8478, [%rd5+12];
	// inline asm
	prmt.b32 %r8476, %r8477, %r8478, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8476;
	ld.local.u32 	%r8481, [%rd5+12];
	ld.local.u32 	%r8482, [%rd5+8];
	// inline asm
	prmt.b32 %r8480, %r8481, %r8482, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8480;
	ld.local.u32 	%r8485, [%rd5+8];
	ld.local.u32 	%r8486, [%rd5+4];
	// inline asm
	prmt.b32 %r8484, %r8485, %r8486, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8484;
	ld.local.u32 	%r8489, [%rd5+4];
	ld.local.u32 	%r8490, [%rd5];
	// inline asm
	prmt.b32 %r8488, %r8489, %r8490, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8488;
	ld.local.u32 	%r8493, [%rd5];
	ld.local.u32 	%r8494, [%rd4+12];
	// inline asm
	prmt.b32 %r8492, %r8493, %r8494, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8492;
	ld.local.u32 	%r8497, [%rd4+12];
	ld.local.u32 	%r8498, [%rd4+8];
	// inline asm
	prmt.b32 %r8496, %r8497, %r8498, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8496;
	ld.local.u32 	%r8501, [%rd4+8];
	ld.local.u32 	%r8502, [%rd4+4];
	// inline asm
	prmt.b32 %r8500, %r8501, %r8502, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8500;
	ld.local.u32 	%r8505, [%rd4+4];
	ld.local.u32 	%r8506, [%rd4];
	// inline asm
	prmt.b32 %r8504, %r8505, %r8506, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8504;
	ld.local.u32 	%r8509, [%rd4];
	ld.local.u32 	%r8510, [%rd3+12];
	// inline asm
	prmt.b32 %r8508, %r8509, %r8510, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8508;
	ld.local.u32 	%r8513, [%rd3+12];
	ld.local.u32 	%r8514, [%rd3+8];
	// inline asm
	prmt.b32 %r8512, %r8513, %r8514, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8512;
	ld.local.u32 	%r8517, [%rd3+8];
	ld.local.u32 	%r8518, [%rd3+4];
	// inline asm
	prmt.b32 %r8516, %r8517, %r8518, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8516;
	ld.local.u32 	%r8521, [%rd3+4];
	ld.local.u32 	%r8522, [%rd3];
	// inline asm
	prmt.b32 %r8520, %r8521, %r8522, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8520;
	ld.local.u32 	%r8525, [%rd3];
	ld.local.u32 	%r8526, [%rd2+12];
	// inline asm
	prmt.b32 %r8524, %r8525, %r8526, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8524;
	ld.local.u32 	%r8529, [%rd2+12];
	ld.local.u32 	%r8530, [%rd2+8];
	// inline asm
	prmt.b32 %r8528, %r8529, %r8530, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8528;
	ld.local.u32 	%r8533, [%rd2+8];
	ld.local.u32 	%r8534, [%rd2+4];
	// inline asm
	prmt.b32 %r8532, %r8533, %r8534, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8532;
	ld.local.u32 	%r8537, [%rd2+4];
	ld.local.u32 	%r8538, [%rd2];
	// inline asm
	prmt.b32 %r8536, %r8537, %r8538, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8536;
	ld.local.u32 	%r8541, [%rd2];
	ld.local.u32 	%r8542, [%rd1+12];
	// inline asm
	prmt.b32 %r8540, %r8541, %r8542, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8540;
	ld.local.u32 	%r8545, [%rd1+12];
	ld.local.u32 	%r8546, [%rd1+8];
	// inline asm
	prmt.b32 %r8544, %r8545, %r8546, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8544;
	ld.local.u32 	%r8549, [%rd1+8];
	ld.local.u32 	%r8550, [%rd1+4];
	// inline asm
	prmt.b32 %r8548, %r8549, %r8550, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8548;
	ld.local.u32 	%r8553, [%rd1+4];
	ld.local.u32 	%r8554, [%rd1];
	// inline asm
	prmt.b32 %r8552, %r8553, %r8554, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8552;
	ld.local.u32 	%r8557, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8556, %r8557, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8556;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2942, 0;
	st.local.u32 	[%rd1+4], %rd2942;
	st.local.u32 	[%rd1], %rd2942;
	bra.uni 	BB0_172;

BB0_24:
	setp.eq.s32	%p39, %r3, 9;
	@%p39 bra 	BB0_25;
	bra.uni 	BB0_89;

BB0_25:
	ld.local.u32 	%r3769, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11629, %r11618, %r3769, %r4;
	// inline asm
	ld.local.u32 	%r3772, [%rd8+12];
	ld.local.u32 	%r3773, [%rd8+8];
	// inline asm
	prmt.b32 %r11630, %r3772, %r3773, %r4;
	// inline asm
	ld.local.u32 	%r3776, [%rd8+8];
	ld.local.u32 	%r3777, [%rd8+4];
	// inline asm
	prmt.b32 %r11623, %r3776, %r3777, %r4;
	// inline asm
	ld.local.u32 	%r3780, [%rd8+4];
	ld.local.u32 	%r3781, [%rd8];
	// inline asm
	prmt.b32 %r11624, %r3780, %r3781, %r4;
	// inline asm
	ld.local.u32 	%r3784, [%rd8];
	ld.local.u32 	%r3785, [%rd7+12];
	// inline asm
	prmt.b32 %r11625, %r3784, %r3785, %r4;
	// inline asm
	ld.local.u32 	%r3788, [%rd7+12];
	ld.local.u32 	%r3789, [%rd7+8];
	// inline asm
	prmt.b32 %r11626, %r3788, %r3789, %r4;
	// inline asm
	ld.local.u32 	%r3792, [%rd7+8];
	ld.local.u32 	%r3793, [%rd7+4];
	// inline asm
	prmt.b32 %r11619, %r3792, %r3793, %r4;
	// inline asm
	ld.local.u32 	%r3796, [%rd7+4];
	ld.local.u32 	%r3797, [%rd7];
	// inline asm
	prmt.b32 %r11620, %r3796, %r3797, %r4;
	// inline asm
	ld.local.u32 	%r3800, [%rd7];
	ld.local.u32 	%r3801, [%rd6+12];
	// inline asm
	prmt.b32 %r11621, %r3800, %r3801, %r4;
	// inline asm
	ld.local.u32 	%r3804, [%rd6+12];
	ld.local.u32 	%r3805, [%rd6+8];
	// inline asm
	prmt.b32 %r11622, %r3804, %r3805, %r4;
	// inline asm
	ld.local.u32 	%r3808, [%rd6+8];
	ld.local.u32 	%r3809, [%rd6+4];
	// inline asm
	prmt.b32 %r3807, %r3808, %r3809, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3807;
	ld.local.u32 	%r3812, [%rd6+4];
	ld.local.u32 	%r3813, [%rd6];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3811;
	ld.local.u32 	%r3816, [%rd6];
	ld.local.u32 	%r3817, [%rd5+12];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3815;
	ld.local.u32 	%r3820, [%rd5+12];
	ld.local.u32 	%r3821, [%rd5+8];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3819;
	ld.local.u32 	%r3824, [%rd5+8];
	ld.local.u32 	%r3825, [%rd5+4];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3823;
	ld.local.u32 	%r3828, [%rd5+4];
	ld.local.u32 	%r3829, [%rd5];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3827;
	ld.local.u32 	%r3832, [%rd5];
	ld.local.u32 	%r3833, [%rd4+12];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3831;
	ld.local.u32 	%r3836, [%rd4+12];
	ld.local.u32 	%r3837, [%rd4+8];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3835;
	ld.local.u32 	%r3840, [%rd4+8];
	ld.local.u32 	%r3841, [%rd4+4];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3839;
	ld.local.u32 	%r3844, [%rd4+4];
	ld.local.u32 	%r3845, [%rd4];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3843;
	ld.local.u32 	%r3848, [%rd4];
	ld.local.u32 	%r3849, [%rd3+12];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3847;
	ld.local.u32 	%r3852, [%rd3+12];
	ld.local.u32 	%r3853, [%rd3+8];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3851;
	ld.local.u32 	%r3856, [%rd3+8];
	ld.local.u32 	%r3857, [%rd3+4];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3855;
	ld.local.u32 	%r3860, [%rd3+4];
	ld.local.u32 	%r3861, [%rd3];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3859;
	ld.local.u32 	%r3864, [%rd3];
	ld.local.u32 	%r3865, [%rd2+12];
	// inline asm
	prmt.b32 %r3863, %r3864, %r3865, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3863;
	ld.local.u32 	%r3868, [%rd2+12];
	ld.local.u32 	%r3869, [%rd2+8];
	// inline asm
	prmt.b32 %r3867, %r3868, %r3869, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3867;
	ld.local.u32 	%r3872, [%rd2+8];
	ld.local.u32 	%r3873, [%rd2+4];
	// inline asm
	prmt.b32 %r3871, %r3872, %r3873, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3871;
	ld.local.u32 	%r3876, [%rd2+4];
	ld.local.u32 	%r3877, [%rd2];
	// inline asm
	prmt.b32 %r3875, %r3876, %r3877, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3875;
	ld.local.u32 	%r3880, [%rd2];
	ld.local.u32 	%r3881, [%rd1+12];
	// inline asm
	prmt.b32 %r3879, %r3880, %r3881, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3879;
	ld.local.u32 	%r3884, [%rd1+12];
	ld.local.u32 	%r3885, [%rd1+8];
	// inline asm
	prmt.b32 %r3883, %r3884, %r3885, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3883;
	ld.local.u32 	%r3888, [%rd1+8];
	ld.local.u32 	%r3889, [%rd1+4];
	// inline asm
	prmt.b32 %r3887, %r3888, %r3889, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3887;
	ld.local.u32 	%r3892, [%rd1+4];
	ld.local.u32 	%r3893, [%rd1];
	// inline asm
	prmt.b32 %r3891, %r3892, %r3893, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3891;
	ld.local.u32 	%r3896, [%rd1];
	// inline asm
	prmt.b32 %r3895, %r3896, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r3895;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd48, 0;
	st.local.u32 	[%rd1+4], %rd48;
	st.local.u32 	[%rd1], %rd48;
	mov.u32 	%r11627, %r11618;
	mov.u32 	%r11628, %r11618;
	bra.uni 	BB0_82;

BB0_143:
	setp.eq.s32	%p63, %r3, 25;
	@%p63 bra 	BB0_144;
	bra.uni 	BB0_171;

BB0_144:
	ld.local.u32 	%r7525, [%rd2+8];
	ld.local.u32 	%r7526, [%rd2+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7524;
	ld.local.u32 	%r7529, [%rd2+4];
	ld.local.u32 	%r7530, [%rd2];
	// inline asm
	prmt.b32 %r7528, %r7529, %r7530, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7528;
	ld.local.u32 	%r7533, [%rd2];
	ld.local.u32 	%r7534, [%rd1+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7532;
	ld.local.u32 	%r7537, [%rd1+12];
	ld.local.u32 	%r7538, [%rd1+8];
	// inline asm
	prmt.b32 %r7536, %r7537, %r7538, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7536;
	ld.local.u32 	%r7541, [%rd1+8];
	ld.local.u32 	%r7542, [%rd1+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7540;
	ld.local.u32 	%r7545, [%rd1+4];
	ld.local.u32 	%r7546, [%rd1];
	// inline asm
	prmt.b32 %r7544, %r7545, %r7546, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7544;
	ld.local.u32 	%r7549, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7548, %r7549, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7548;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2926, 0;
	st.local.u32 	[%rd1+4], %rd2926;
	st.local.u32 	[%rd1], %rd2926;
	bra.uni 	BB0_172;

BB0_55:
	setp.eq.s32	%p16, %r3, 25;
	@%p16 bra 	BB0_56;
	bra.uni 	BB0_89;

BB0_56:
	ld.local.u32 	%r1425, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11645, %r11618, %r1425, %r4;
	// inline asm
	ld.local.u32 	%r1428, [%rd8+12];
	ld.local.u32 	%r1429, [%rd8+8];
	// inline asm
	prmt.b32 %r11646, %r1428, %r1429, %r4;
	// inline asm
	ld.local.u32 	%r1432, [%rd8+8];
	ld.local.u32 	%r1433, [%rd8+4];
	// inline asm
	prmt.b32 %r11639, %r1432, %r1433, %r4;
	// inline asm
	ld.local.u32 	%r1436, [%rd8+4];
	ld.local.u32 	%r1437, [%rd8];
	// inline asm
	prmt.b32 %r11640, %r1436, %r1437, %r4;
	// inline asm
	ld.local.u32 	%r1440, [%rd8];
	ld.local.u32 	%r1441, [%rd7+12];
	// inline asm
	prmt.b32 %r11641, %r1440, %r1441, %r4;
	// inline asm
	ld.local.u32 	%r1444, [%rd7+12];
	ld.local.u32 	%r1445, [%rd7+8];
	// inline asm
	prmt.b32 %r11642, %r1444, %r1445, %r4;
	// inline asm
	ld.local.u32 	%r1448, [%rd7+8];
	ld.local.u32 	%r1449, [%rd7+4];
	// inline asm
	prmt.b32 %r11635, %r1448, %r1449, %r4;
	// inline asm
	ld.local.u32 	%r1452, [%rd7+4];
	ld.local.u32 	%r1453, [%rd7];
	// inline asm
	prmt.b32 %r11636, %r1452, %r1453, %r4;
	// inline asm
	ld.local.u32 	%r1456, [%rd7];
	ld.local.u32 	%r1457, [%rd6+12];
	// inline asm
	prmt.b32 %r11637, %r1456, %r1457, %r4;
	// inline asm
	ld.local.u32 	%r1460, [%rd6+12];
	ld.local.u32 	%r1461, [%rd6+8];
	// inline asm
	prmt.b32 %r11638, %r1460, %r1461, %r4;
	// inline asm
	ld.local.u32 	%r1464, [%rd6+8];
	ld.local.u32 	%r1465, [%rd6+4];
	// inline asm
	prmt.b32 %r11631, %r1464, %r1465, %r4;
	// inline asm
	ld.local.u32 	%r1468, [%rd6+4];
	ld.local.u32 	%r1469, [%rd6];
	// inline asm
	prmt.b32 %r11632, %r1468, %r1469, %r4;
	// inline asm
	ld.local.u32 	%r1472, [%rd6];
	ld.local.u32 	%r1473, [%rd5+12];
	// inline asm
	prmt.b32 %r11633, %r1472, %r1473, %r4;
	// inline asm
	ld.local.u32 	%r1476, [%rd5+12];
	ld.local.u32 	%r1477, [%rd5+8];
	// inline asm
	prmt.b32 %r11634, %r1476, %r1477, %r4;
	// inline asm
	ld.local.u32 	%r1480, [%rd5+8];
	ld.local.u32 	%r1481, [%rd5+4];
	// inline asm
	prmt.b32 %r11627, %r1480, %r1481, %r4;
	// inline asm
	ld.local.u32 	%r1484, [%rd5+4];
	ld.local.u32 	%r1485, [%rd5];
	// inline asm
	prmt.b32 %r11628, %r1484, %r1485, %r4;
	// inline asm
	ld.local.u32 	%r1488, [%rd5];
	ld.local.u32 	%r1489, [%rd4+12];
	// inline asm
	prmt.b32 %r11629, %r1488, %r1489, %r4;
	// inline asm
	ld.local.u32 	%r1492, [%rd4+12];
	ld.local.u32 	%r1493, [%rd4+8];
	// inline asm
	prmt.b32 %r11630, %r1492, %r1493, %r4;
	// inline asm
	ld.local.u32 	%r1496, [%rd4+8];
	ld.local.u32 	%r1497, [%rd4+4];
	// inline asm
	prmt.b32 %r11623, %r1496, %r1497, %r4;
	// inline asm
	ld.local.u32 	%r1500, [%rd4+4];
	ld.local.u32 	%r1501, [%rd4];
	// inline asm
	prmt.b32 %r11624, %r1500, %r1501, %r4;
	// inline asm
	ld.local.u32 	%r1504, [%rd4];
	ld.local.u32 	%r1505, [%rd3+12];
	// inline asm
	prmt.b32 %r11625, %r1504, %r1505, %r4;
	// inline asm
	ld.local.u32 	%r1508, [%rd3+12];
	ld.local.u32 	%r1509, [%rd3+8];
	// inline asm
	prmt.b32 %r11626, %r1508, %r1509, %r4;
	// inline asm
	ld.local.u32 	%r1512, [%rd3+8];
	ld.local.u32 	%r1513, [%rd3+4];
	// inline asm
	prmt.b32 %r11619, %r1512, %r1513, %r4;
	// inline asm
	ld.local.u32 	%r1516, [%rd3+4];
	ld.local.u32 	%r1517, [%rd3];
	// inline asm
	prmt.b32 %r11620, %r1516, %r1517, %r4;
	// inline asm
	ld.local.u32 	%r1520, [%rd3];
	ld.local.u32 	%r1521, [%rd2+12];
	// inline asm
	prmt.b32 %r11621, %r1520, %r1521, %r4;
	// inline asm
	ld.local.u32 	%r1524, [%rd2+12];
	ld.local.u32 	%r1525, [%rd2+8];
	// inline asm
	prmt.b32 %r11622, %r1524, %r1525, %r4;
	// inline asm
	ld.local.u32 	%r1528, [%rd2+8];
	ld.local.u32 	%r1529, [%rd2+4];
	// inline asm
	prmt.b32 %r1527, %r1528, %r1529, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1527;
	ld.local.u32 	%r1532, [%rd2+4];
	ld.local.u32 	%r1533, [%rd2];
	// inline asm
	prmt.b32 %r1531, %r1532, %r1533, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1531;
	ld.local.u32 	%r1536, [%rd2];
	ld.local.u32 	%r1537, [%rd1+12];
	// inline asm
	prmt.b32 %r1535, %r1536, %r1537, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1535;
	ld.local.u32 	%r1540, [%rd1+12];
	ld.local.u32 	%r1541, [%rd1+8];
	// inline asm
	prmt.b32 %r1539, %r1540, %r1541, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1539;
	ld.local.u32 	%r1544, [%rd1+8];
	ld.local.u32 	%r1545, [%rd1+4];
	// inline asm
	prmt.b32 %r1543, %r1544, %r1545, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1543;
	ld.local.u32 	%r1548, [%rd1+4];
	ld.local.u32 	%r1549, [%rd1];
	// inline asm
	prmt.b32 %r1547, %r1548, %r1549, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1547;
	ld.local.u32 	%r1552, [%rd1];
	// inline asm
	prmt.b32 %r1551, %r1552, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1551;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd32, 0;
	st.local.u32 	[%rd1+4], %rd32;
	st.local.u32 	[%rd1], %rd32;
	mov.u32 	%r11643, %r11618;
	mov.u32 	%r11644, %r11618;
	bra.uni 	BB0_86;

BB0_104:
	setp.eq.s32	%p92, %r3, 5;
	@%p92 bra 	BB0_105;
	bra.uni 	BB0_171;

BB0_105:
	ld.local.u32 	%r8865, [%rd7+8];
	ld.local.u32 	%r8866, [%rd7+4];
	// inline asm
	prmt.b32 %r8864, %r8865, %r8866, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8864;
	ld.local.u32 	%r8869, [%rd7+4];
	ld.local.u32 	%r8870, [%rd7];
	// inline asm
	prmt.b32 %r8868, %r8869, %r8870, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8868;
	ld.local.u32 	%r8873, [%rd7];
	ld.local.u32 	%r8874, [%rd6+12];
	// inline asm
	prmt.b32 %r8872, %r8873, %r8874, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8872;
	ld.local.u32 	%r8877, [%rd6+12];
	ld.local.u32 	%r8878, [%rd6+8];
	// inline asm
	prmt.b32 %r8876, %r8877, %r8878, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8876;
	ld.local.u32 	%r8881, [%rd6+8];
	ld.local.u32 	%r8882, [%rd6+4];
	// inline asm
	prmt.b32 %r8880, %r8881, %r8882, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8880;
	ld.local.u32 	%r8885, [%rd6+4];
	ld.local.u32 	%r8886, [%rd6];
	// inline asm
	prmt.b32 %r8884, %r8885, %r8886, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8884;
	ld.local.u32 	%r8889, [%rd6];
	ld.local.u32 	%r8890, [%rd5+12];
	// inline asm
	prmt.b32 %r8888, %r8889, %r8890, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8888;
	ld.local.u32 	%r8893, [%rd5+12];
	ld.local.u32 	%r8894, [%rd5+8];
	// inline asm
	prmt.b32 %r8892, %r8893, %r8894, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8892;
	ld.local.u32 	%r8897, [%rd5+8];
	ld.local.u32 	%r8898, [%rd5+4];
	// inline asm
	prmt.b32 %r8896, %r8897, %r8898, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8896;
	ld.local.u32 	%r8901, [%rd5+4];
	ld.local.u32 	%r8902, [%rd5];
	// inline asm
	prmt.b32 %r8900, %r8901, %r8902, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8900;
	ld.local.u32 	%r8905, [%rd5];
	ld.local.u32 	%r8906, [%rd4+12];
	// inline asm
	prmt.b32 %r8904, %r8905, %r8906, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8904;
	ld.local.u32 	%r8909, [%rd4+12];
	ld.local.u32 	%r8910, [%rd4+8];
	// inline asm
	prmt.b32 %r8908, %r8909, %r8910, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8908;
	ld.local.u32 	%r8913, [%rd4+8];
	ld.local.u32 	%r8914, [%rd4+4];
	// inline asm
	prmt.b32 %r8912, %r8913, %r8914, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8912;
	ld.local.u32 	%r8917, [%rd4+4];
	ld.local.u32 	%r8918, [%rd4];
	// inline asm
	prmt.b32 %r8916, %r8917, %r8918, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8916;
	ld.local.u32 	%r8921, [%rd4];
	ld.local.u32 	%r8922, [%rd3+12];
	// inline asm
	prmt.b32 %r8920, %r8921, %r8922, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8920;
	ld.local.u32 	%r8925, [%rd3+12];
	ld.local.u32 	%r8926, [%rd3+8];
	// inline asm
	prmt.b32 %r8924, %r8925, %r8926, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8924;
	ld.local.u32 	%r8929, [%rd3+8];
	ld.local.u32 	%r8930, [%rd3+4];
	// inline asm
	prmt.b32 %r8928, %r8929, %r8930, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8928;
	ld.local.u32 	%r8933, [%rd3+4];
	ld.local.u32 	%r8934, [%rd3];
	// inline asm
	prmt.b32 %r8932, %r8933, %r8934, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8932;
	ld.local.u32 	%r8937, [%rd3];
	ld.local.u32 	%r8938, [%rd2+12];
	// inline asm
	prmt.b32 %r8936, %r8937, %r8938, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8936;
	ld.local.u32 	%r8941, [%rd2+12];
	ld.local.u32 	%r8942, [%rd2+8];
	// inline asm
	prmt.b32 %r8940, %r8941, %r8942, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8940;
	ld.local.u32 	%r8945, [%rd2+8];
	ld.local.u32 	%r8946, [%rd2+4];
	// inline asm
	prmt.b32 %r8944, %r8945, %r8946, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8944;
	ld.local.u32 	%r8949, [%rd2+4];
	ld.local.u32 	%r8950, [%rd2];
	// inline asm
	prmt.b32 %r8948, %r8949, %r8950, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8948;
	ld.local.u32 	%r8953, [%rd2];
	ld.local.u32 	%r8954, [%rd1+12];
	// inline asm
	prmt.b32 %r8952, %r8953, %r8954, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8952;
	ld.local.u32 	%r8957, [%rd1+12];
	ld.local.u32 	%r8958, [%rd1+8];
	// inline asm
	prmt.b32 %r8956, %r8957, %r8958, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8956;
	ld.local.u32 	%r8961, [%rd1+8];
	ld.local.u32 	%r8962, [%rd1+4];
	// inline asm
	prmt.b32 %r8960, %r8961, %r8962, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8960;
	ld.local.u32 	%r8965, [%rd1+4];
	ld.local.u32 	%r8966, [%rd1];
	// inline asm
	prmt.b32 %r8964, %r8965, %r8966, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8964;
	ld.local.u32 	%r8969, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8968, %r8969, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8968;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2946, 0;
	st.local.u32 	[%rd1+4], %rd2946;
	st.local.u32 	[%rd1], %rd2946;
	bra.uni 	BB0_172;

BB0_16:
	setp.eq.s32	%p45, %r3, 5;
	@%p45 bra 	BB0_17;
	bra.uni 	BB0_89;

BB0_17:
	ld.local.u32 	%r4395, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11625, %r11618, %r4395, %r4;
	// inline asm
	ld.local.u32 	%r4398, [%rd8+12];
	ld.local.u32 	%r4399, [%rd8+8];
	// inline asm
	prmt.b32 %r11626, %r4398, %r4399, %r4;
	// inline asm
	ld.local.u32 	%r4402, [%rd8+8];
	ld.local.u32 	%r4403, [%rd8+4];
	// inline asm
	prmt.b32 %r11619, %r4402, %r4403, %r4;
	// inline asm
	ld.local.u32 	%r4406, [%rd8+4];
	ld.local.u32 	%r4407, [%rd8];
	// inline asm
	prmt.b32 %r11620, %r4406, %r4407, %r4;
	// inline asm
	ld.local.u32 	%r4410, [%rd8];
	ld.local.u32 	%r4411, [%rd7+12];
	// inline asm
	prmt.b32 %r11621, %r4410, %r4411, %r4;
	// inline asm
	ld.local.u32 	%r4414, [%rd7+12];
	ld.local.u32 	%r4415, [%rd7+8];
	// inline asm
	prmt.b32 %r11622, %r4414, %r4415, %r4;
	// inline asm
	ld.local.u32 	%r4418, [%rd7+8];
	ld.local.u32 	%r4419, [%rd7+4];
	// inline asm
	prmt.b32 %r4417, %r4418, %r4419, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4417;
	ld.local.u32 	%r4422, [%rd7+4];
	ld.local.u32 	%r4423, [%rd7];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4421;
	ld.local.u32 	%r4426, [%rd7];
	ld.local.u32 	%r4427, [%rd6+12];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4425;
	ld.local.u32 	%r4430, [%rd6+12];
	ld.local.u32 	%r4431, [%rd6+8];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4429;
	ld.local.u32 	%r4434, [%rd6+8];
	ld.local.u32 	%r4435, [%rd6+4];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4433;
	ld.local.u32 	%r4438, [%rd6+4];
	ld.local.u32 	%r4439, [%rd6];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4437;
	ld.local.u32 	%r4442, [%rd6];
	ld.local.u32 	%r4443, [%rd5+12];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4441;
	ld.local.u32 	%r4446, [%rd5+12];
	ld.local.u32 	%r4447, [%rd5+8];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4445;
	ld.local.u32 	%r4450, [%rd5+8];
	ld.local.u32 	%r4451, [%rd5+4];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4449;
	ld.local.u32 	%r4454, [%rd5+4];
	ld.local.u32 	%r4455, [%rd5];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4453;
	ld.local.u32 	%r4458, [%rd5];
	ld.local.u32 	%r4459, [%rd4+12];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4457;
	ld.local.u32 	%r4462, [%rd4+12];
	ld.local.u32 	%r4463, [%rd4+8];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4461;
	ld.local.u32 	%r4466, [%rd4+8];
	ld.local.u32 	%r4467, [%rd4+4];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4465;
	ld.local.u32 	%r4470, [%rd4+4];
	ld.local.u32 	%r4471, [%rd4];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4469;
	ld.local.u32 	%r4474, [%rd4];
	ld.local.u32 	%r4475, [%rd3+12];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4473;
	ld.local.u32 	%r4478, [%rd3+12];
	ld.local.u32 	%r4479, [%rd3+8];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4477;
	ld.local.u32 	%r4482, [%rd3+8];
	ld.local.u32 	%r4483, [%rd3+4];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4481;
	ld.local.u32 	%r4486, [%rd3+4];
	ld.local.u32 	%r4487, [%rd3];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4485;
	ld.local.u32 	%r4490, [%rd3];
	ld.local.u32 	%r4491, [%rd2+12];
	// inline asm
	prmt.b32 %r4489, %r4490, %r4491, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4489;
	ld.local.u32 	%r4494, [%rd2+12];
	ld.local.u32 	%r4495, [%rd2+8];
	// inline asm
	prmt.b32 %r4493, %r4494, %r4495, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4493;
	ld.local.u32 	%r4498, [%rd2+8];
	ld.local.u32 	%r4499, [%rd2+4];
	// inline asm
	prmt.b32 %r4497, %r4498, %r4499, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4497;
	ld.local.u32 	%r4502, [%rd2+4];
	ld.local.u32 	%r4503, [%rd2];
	// inline asm
	prmt.b32 %r4501, %r4502, %r4503, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4501;
	ld.local.u32 	%r4506, [%rd2];
	ld.local.u32 	%r4507, [%rd1+12];
	// inline asm
	prmt.b32 %r4505, %r4506, %r4507, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4505;
	ld.local.u32 	%r4510, [%rd1+12];
	ld.local.u32 	%r4511, [%rd1+8];
	// inline asm
	prmt.b32 %r4509, %r4510, %r4511, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4509;
	ld.local.u32 	%r4514, [%rd1+8];
	ld.local.u32 	%r4515, [%rd1+4];
	// inline asm
	prmt.b32 %r4513, %r4514, %r4515, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4513;
	ld.local.u32 	%r4518, [%rd1+4];
	ld.local.u32 	%r4519, [%rd1];
	// inline asm
	prmt.b32 %r4517, %r4518, %r4519, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4517;
	ld.local.u32 	%r4522, [%rd1];
	// inline asm
	prmt.b32 %r4521, %r4522, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4521;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd52, 0;
	st.local.u32 	[%rd1+4], %rd52;
	st.local.u32 	[%rd1], %rd52;
	mov.u32 	%r11623, %r11618;
	mov.u32 	%r11624, %r11618;
	bra.uni 	BB0_81;

BB0_135:
	setp.eq.s32	%p69, %r3, 21;
	@%p69 bra 	BB0_136;
	bra.uni 	BB0_171;

BB0_136:
	ld.local.u32 	%r7665, [%rd3+8];
	ld.local.u32 	%r7666, [%rd3+4];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7664;
	ld.local.u32 	%r7669, [%rd3+4];
	ld.local.u32 	%r7670, [%rd3];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7668;
	ld.local.u32 	%r7673, [%rd3];
	ld.local.u32 	%r7674, [%rd2+12];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7672;
	ld.local.u32 	%r7677, [%rd2+12];
	ld.local.u32 	%r7678, [%rd2+8];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7676;
	ld.local.u32 	%r7681, [%rd2+8];
	ld.local.u32 	%r7682, [%rd2+4];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7680;
	ld.local.u32 	%r7685, [%rd2+4];
	ld.local.u32 	%r7686, [%rd2];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7684;
	ld.local.u32 	%r7689, [%rd2];
	ld.local.u32 	%r7690, [%rd1+12];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7688;
	ld.local.u32 	%r7693, [%rd1+12];
	ld.local.u32 	%r7694, [%rd1+8];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7692;
	ld.local.u32 	%r7697, [%rd1+8];
	ld.local.u32 	%r7698, [%rd1+4];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7696;
	ld.local.u32 	%r7701, [%rd1+4];
	ld.local.u32 	%r7702, [%rd1];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7700;
	ld.local.u32 	%r7705, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7704, %r7705, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7704;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2930, 0;
	st.local.u32 	[%rd1+4], %rd2930;
	st.local.u32 	[%rd1], %rd2930;
	bra.uni 	BB0_172;

BB0_47:
	setp.eq.s32	%p22, %r3, 21;
	@%p22 bra 	BB0_48;
	bra.uni 	BB0_89;

BB0_48:
	ld.local.u32 	%r1987, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11641, %r11618, %r1987, %r4;
	// inline asm
	ld.local.u32 	%r1990, [%rd8+12];
	ld.local.u32 	%r1991, [%rd8+8];
	// inline asm
	prmt.b32 %r11642, %r1990, %r1991, %r4;
	// inline asm
	ld.local.u32 	%r1994, [%rd8+8];
	ld.local.u32 	%r1995, [%rd8+4];
	// inline asm
	prmt.b32 %r11635, %r1994, %r1995, %r4;
	// inline asm
	ld.local.u32 	%r1998, [%rd8+4];
	ld.local.u32 	%r1999, [%rd8];
	// inline asm
	prmt.b32 %r11636, %r1998, %r1999, %r4;
	// inline asm
	ld.local.u32 	%r2002, [%rd8];
	ld.local.u32 	%r2003, [%rd7+12];
	// inline asm
	prmt.b32 %r11637, %r2002, %r2003, %r4;
	// inline asm
	ld.local.u32 	%r2006, [%rd7+12];
	ld.local.u32 	%r2007, [%rd7+8];
	// inline asm
	prmt.b32 %r11638, %r2006, %r2007, %r4;
	// inline asm
	ld.local.u32 	%r2010, [%rd7+8];
	ld.local.u32 	%r2011, [%rd7+4];
	// inline asm
	prmt.b32 %r11631, %r2010, %r2011, %r4;
	// inline asm
	ld.local.u32 	%r2014, [%rd7+4];
	ld.local.u32 	%r2015, [%rd7];
	// inline asm
	prmt.b32 %r11632, %r2014, %r2015, %r4;
	// inline asm
	ld.local.u32 	%r2018, [%rd7];
	ld.local.u32 	%r2019, [%rd6+12];
	// inline asm
	prmt.b32 %r11633, %r2018, %r2019, %r4;
	// inline asm
	ld.local.u32 	%r2022, [%rd6+12];
	ld.local.u32 	%r2023, [%rd6+8];
	// inline asm
	prmt.b32 %r11634, %r2022, %r2023, %r4;
	// inline asm
	ld.local.u32 	%r2026, [%rd6+8];
	ld.local.u32 	%r2027, [%rd6+4];
	// inline asm
	prmt.b32 %r11627, %r2026, %r2027, %r4;
	// inline asm
	ld.local.u32 	%r2030, [%rd6+4];
	ld.local.u32 	%r2031, [%rd6];
	// inline asm
	prmt.b32 %r11628, %r2030, %r2031, %r4;
	// inline asm
	ld.local.u32 	%r2034, [%rd6];
	ld.local.u32 	%r2035, [%rd5+12];
	// inline asm
	prmt.b32 %r11629, %r2034, %r2035, %r4;
	// inline asm
	ld.local.u32 	%r2038, [%rd5+12];
	ld.local.u32 	%r2039, [%rd5+8];
	// inline asm
	prmt.b32 %r11630, %r2038, %r2039, %r4;
	// inline asm
	ld.local.u32 	%r2042, [%rd5+8];
	ld.local.u32 	%r2043, [%rd5+4];
	// inline asm
	prmt.b32 %r11623, %r2042, %r2043, %r4;
	// inline asm
	ld.local.u32 	%r2046, [%rd5+4];
	ld.local.u32 	%r2047, [%rd5];
	// inline asm
	prmt.b32 %r11624, %r2046, %r2047, %r4;
	// inline asm
	ld.local.u32 	%r2050, [%rd5];
	ld.local.u32 	%r2051, [%rd4+12];
	// inline asm
	prmt.b32 %r11625, %r2050, %r2051, %r4;
	// inline asm
	ld.local.u32 	%r2054, [%rd4+12];
	ld.local.u32 	%r2055, [%rd4+8];
	// inline asm
	prmt.b32 %r11626, %r2054, %r2055, %r4;
	// inline asm
	ld.local.u32 	%r2058, [%rd4+8];
	ld.local.u32 	%r2059, [%rd4+4];
	// inline asm
	prmt.b32 %r11619, %r2058, %r2059, %r4;
	// inline asm
	ld.local.u32 	%r2062, [%rd4+4];
	ld.local.u32 	%r2063, [%rd4];
	// inline asm
	prmt.b32 %r11620, %r2062, %r2063, %r4;
	// inline asm
	ld.local.u32 	%r2066, [%rd4];
	ld.local.u32 	%r2067, [%rd3+12];
	// inline asm
	prmt.b32 %r11621, %r2066, %r2067, %r4;
	// inline asm
	ld.local.u32 	%r2070, [%rd3+12];
	ld.local.u32 	%r2071, [%rd3+8];
	// inline asm
	prmt.b32 %r11622, %r2070, %r2071, %r4;
	// inline asm
	ld.local.u32 	%r2074, [%rd3+8];
	ld.local.u32 	%r2075, [%rd3+4];
	// inline asm
	prmt.b32 %r2073, %r2074, %r2075, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2073;
	ld.local.u32 	%r2078, [%rd3+4];
	ld.local.u32 	%r2079, [%rd3];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2077;
	ld.local.u32 	%r2082, [%rd3];
	ld.local.u32 	%r2083, [%rd2+12];
	// inline asm
	prmt.b32 %r2081, %r2082, %r2083, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2081;
	ld.local.u32 	%r2086, [%rd2+12];
	ld.local.u32 	%r2087, [%rd2+8];
	// inline asm
	prmt.b32 %r2085, %r2086, %r2087, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2085;
	ld.local.u32 	%r2090, [%rd2+8];
	ld.local.u32 	%r2091, [%rd2+4];
	// inline asm
	prmt.b32 %r2089, %r2090, %r2091, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2089;
	ld.local.u32 	%r2094, [%rd2+4];
	ld.local.u32 	%r2095, [%rd2];
	// inline asm
	prmt.b32 %r2093, %r2094, %r2095, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2093;
	ld.local.u32 	%r2098, [%rd2];
	ld.local.u32 	%r2099, [%rd1+12];
	// inline asm
	prmt.b32 %r2097, %r2098, %r2099, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2097;
	ld.local.u32 	%r2102, [%rd1+12];
	ld.local.u32 	%r2103, [%rd1+8];
	// inline asm
	prmt.b32 %r2101, %r2102, %r2103, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2101;
	ld.local.u32 	%r2106, [%rd1+8];
	ld.local.u32 	%r2107, [%rd1+4];
	// inline asm
	prmt.b32 %r2105, %r2106, %r2107, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2105;
	ld.local.u32 	%r2110, [%rd1+4];
	ld.local.u32 	%r2111, [%rd1];
	// inline asm
	prmt.b32 %r2109, %r2110, %r2111, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2109;
	ld.local.u32 	%r2114, [%rd1];
	// inline asm
	prmt.b32 %r2113, %r2114, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2113;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd36, 0;
	st.local.u32 	[%rd1+4], %rd36;
	st.local.u32 	[%rd1], %rd36;
	mov.u32 	%r11639, %r11618;
	mov.u32 	%r11640, %r11618;
	bra.uni 	BB0_85;

BB0_119:
	setp.eq.s32	%p81, %r3, 13;
	@%p81 bra 	BB0_120;
	bra.uni 	BB0_171;

BB0_120:
	ld.local.u32 	%r8137, [%rd5+8];
	ld.local.u32 	%r8138, [%rd5+4];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8136;
	ld.local.u32 	%r8141, [%rd5+4];
	ld.local.u32 	%r8142, [%rd5];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8140;
	ld.local.u32 	%r8145, [%rd5];
	ld.local.u32 	%r8146, [%rd4+12];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8144;
	ld.local.u32 	%r8149, [%rd4+12];
	ld.local.u32 	%r8150, [%rd4+8];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8148;
	ld.local.u32 	%r8153, [%rd4+8];
	ld.local.u32 	%r8154, [%rd4+4];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8152;
	ld.local.u32 	%r8157, [%rd4+4];
	ld.local.u32 	%r8158, [%rd4];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8156;
	ld.local.u32 	%r8161, [%rd4];
	ld.local.u32 	%r8162, [%rd3+12];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8160;
	ld.local.u32 	%r8165, [%rd3+12];
	ld.local.u32 	%r8166, [%rd3+8];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8164;
	ld.local.u32 	%r8169, [%rd3+8];
	ld.local.u32 	%r8170, [%rd3+4];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8168;
	ld.local.u32 	%r8173, [%rd3+4];
	ld.local.u32 	%r8174, [%rd3];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8172;
	ld.local.u32 	%r8177, [%rd3];
	ld.local.u32 	%r8178, [%rd2+12];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8176;
	ld.local.u32 	%r8181, [%rd2+12];
	ld.local.u32 	%r8182, [%rd2+8];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8180;
	ld.local.u32 	%r8185, [%rd2+8];
	ld.local.u32 	%r8186, [%rd2+4];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8184;
	ld.local.u32 	%r8189, [%rd2+4];
	ld.local.u32 	%r8190, [%rd2];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8188;
	ld.local.u32 	%r8193, [%rd2];
	ld.local.u32 	%r8194, [%rd1+12];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8192;
	ld.local.u32 	%r8197, [%rd1+12];
	ld.local.u32 	%r8198, [%rd1+8];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8196;
	ld.local.u32 	%r8201, [%rd1+8];
	ld.local.u32 	%r8202, [%rd1+4];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8200;
	ld.local.u32 	%r8205, [%rd1+4];
	ld.local.u32 	%r8206, [%rd1];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8204;
	ld.local.u32 	%r8209, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8208, %r8209, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8208;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2938, 0;
	st.local.u32 	[%rd1+4], %rd2938;
	st.local.u32 	[%rd1], %rd2938;
	bra.uni 	BB0_172;

BB0_31:
	setp.eq.s32	%p34, %r3, 13;
	@%p34 bra 	BB0_32;
	bra.uni 	BB0_89;

BB0_32:
	ld.local.u32 	%r3159, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11633, %r11618, %r3159, %r4;
	// inline asm
	ld.local.u32 	%r3162, [%rd8+12];
	ld.local.u32 	%r3163, [%rd8+8];
	// inline asm
	prmt.b32 %r11634, %r3162, %r3163, %r4;
	// inline asm
	ld.local.u32 	%r3166, [%rd8+8];
	ld.local.u32 	%r3167, [%rd8+4];
	// inline asm
	prmt.b32 %r11627, %r3166, %r3167, %r4;
	// inline asm
	ld.local.u32 	%r3170, [%rd8+4];
	ld.local.u32 	%r3171, [%rd8];
	// inline asm
	prmt.b32 %r11628, %r3170, %r3171, %r4;
	// inline asm
	ld.local.u32 	%r3174, [%rd8];
	ld.local.u32 	%r3175, [%rd7+12];
	// inline asm
	prmt.b32 %r11629, %r3174, %r3175, %r4;
	// inline asm
	ld.local.u32 	%r3178, [%rd7+12];
	ld.local.u32 	%r3179, [%rd7+8];
	// inline asm
	prmt.b32 %r11630, %r3178, %r3179, %r4;
	// inline asm
	ld.local.u32 	%r3182, [%rd7+8];
	ld.local.u32 	%r3183, [%rd7+4];
	// inline asm
	prmt.b32 %r11623, %r3182, %r3183, %r4;
	// inline asm
	ld.local.u32 	%r3186, [%rd7+4];
	ld.local.u32 	%r3187, [%rd7];
	// inline asm
	prmt.b32 %r11624, %r3186, %r3187, %r4;
	// inline asm
	ld.local.u32 	%r3190, [%rd7];
	ld.local.u32 	%r3191, [%rd6+12];
	// inline asm
	prmt.b32 %r11625, %r3190, %r3191, %r4;
	// inline asm
	ld.local.u32 	%r3194, [%rd6+12];
	ld.local.u32 	%r3195, [%rd6+8];
	// inline asm
	prmt.b32 %r11626, %r3194, %r3195, %r4;
	// inline asm
	ld.local.u32 	%r3198, [%rd6+8];
	ld.local.u32 	%r3199, [%rd6+4];
	// inline asm
	prmt.b32 %r11619, %r3198, %r3199, %r4;
	// inline asm
	ld.local.u32 	%r3202, [%rd6+4];
	ld.local.u32 	%r3203, [%rd6];
	// inline asm
	prmt.b32 %r11620, %r3202, %r3203, %r4;
	// inline asm
	ld.local.u32 	%r3206, [%rd6];
	ld.local.u32 	%r3207, [%rd5+12];
	// inline asm
	prmt.b32 %r11621, %r3206, %r3207, %r4;
	// inline asm
	ld.local.u32 	%r3210, [%rd5+12];
	ld.local.u32 	%r3211, [%rd5+8];
	// inline asm
	prmt.b32 %r11622, %r3210, %r3211, %r4;
	// inline asm
	ld.local.u32 	%r3214, [%rd5+8];
	ld.local.u32 	%r3215, [%rd5+4];
	// inline asm
	prmt.b32 %r3213, %r3214, %r3215, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3213;
	ld.local.u32 	%r3218, [%rd5+4];
	ld.local.u32 	%r3219, [%rd5];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3217;
	ld.local.u32 	%r3222, [%rd5];
	ld.local.u32 	%r3223, [%rd4+12];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3221;
	ld.local.u32 	%r3226, [%rd4+12];
	ld.local.u32 	%r3227, [%rd4+8];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3225;
	ld.local.u32 	%r3230, [%rd4+8];
	ld.local.u32 	%r3231, [%rd4+4];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3229;
	ld.local.u32 	%r3234, [%rd4+4];
	ld.local.u32 	%r3235, [%rd4];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3233;
	ld.local.u32 	%r3238, [%rd4];
	ld.local.u32 	%r3239, [%rd3+12];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3237;
	ld.local.u32 	%r3242, [%rd3+12];
	ld.local.u32 	%r3243, [%rd3+8];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3241;
	ld.local.u32 	%r3246, [%rd3+8];
	ld.local.u32 	%r3247, [%rd3+4];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3245;
	ld.local.u32 	%r3250, [%rd3+4];
	ld.local.u32 	%r3251, [%rd3];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3249;
	ld.local.u32 	%r3254, [%rd3];
	ld.local.u32 	%r3255, [%rd2+12];
	// inline asm
	prmt.b32 %r3253, %r3254, %r3255, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3253;
	ld.local.u32 	%r3258, [%rd2+12];
	ld.local.u32 	%r3259, [%rd2+8];
	// inline asm
	prmt.b32 %r3257, %r3258, %r3259, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3257;
	ld.local.u32 	%r3262, [%rd2+8];
	ld.local.u32 	%r3263, [%rd2+4];
	// inline asm
	prmt.b32 %r3261, %r3262, %r3263, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3261;
	ld.local.u32 	%r3266, [%rd2+4];
	ld.local.u32 	%r3267, [%rd2];
	// inline asm
	prmt.b32 %r3265, %r3266, %r3267, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3265;
	ld.local.u32 	%r3270, [%rd2];
	ld.local.u32 	%r3271, [%rd1+12];
	// inline asm
	prmt.b32 %r3269, %r3270, %r3271, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3269;
	ld.local.u32 	%r3274, [%rd1+12];
	ld.local.u32 	%r3275, [%rd1+8];
	// inline asm
	prmt.b32 %r3273, %r3274, %r3275, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3273;
	ld.local.u32 	%r3278, [%rd1+8];
	ld.local.u32 	%r3279, [%rd1+4];
	// inline asm
	prmt.b32 %r3277, %r3278, %r3279, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3277;
	ld.local.u32 	%r3282, [%rd1+4];
	ld.local.u32 	%r3283, [%rd1];
	// inline asm
	prmt.b32 %r3281, %r3282, %r3283, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3281;
	ld.local.u32 	%r3286, [%rd1];
	// inline asm
	prmt.b32 %r3285, %r3286, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3285;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd44, 0;
	st.local.u32 	[%rd1+4], %rd44;
	st.local.u32 	[%rd1], %rd44;
	mov.u32 	%r11631, %r11618;
	mov.u32 	%r11632, %r11618;
	bra.uni 	BB0_83;

BB0_150:
	setp.eq.s32	%p58, %r3, 29;
	@%p58 bra 	BB0_151;
	bra.uni 	BB0_171;

BB0_151:
	ld.local.u32 	%r7449, [%rd1+8];
	ld.local.u32 	%r7450, [%rd1+4];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7448;
	ld.local.u32 	%r7453, [%rd1+4];
	ld.local.u32 	%r7454, [%rd1];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7452;
	ld.local.u32 	%r7457, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7456, %r7457, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7456;
	st.local.u32 	[%rd8], %r11651;
	st.local.u32 	[%rd7+12], %r11651;
	st.local.u32 	[%rd7+8], %r11651;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2922, 0;
	st.local.u32 	[%rd1+4], %rd2922;
	st.local.u32 	[%rd1], %rd2922;
	bra.uni 	BB0_172;

BB0_62:
	setp.eq.s32	%p11, %r3, 29;
	@%p11 bra 	BB0_63;
	bra.uni 	BB0_89;

BB0_63:
	ld.local.u32 	%r879, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11649, %r11618, %r879, %r4;
	// inline asm
	ld.local.u32 	%r882, [%rd8+12];
	ld.local.u32 	%r883, [%rd8+8];
	// inline asm
	prmt.b32 %r11650, %r882, %r883, %r4;
	// inline asm
	ld.local.u32 	%r886, [%rd8+8];
	ld.local.u32 	%r887, [%rd8+4];
	// inline asm
	prmt.b32 %r11643, %r886, %r887, %r4;
	// inline asm
	ld.local.u32 	%r890, [%rd8+4];
	ld.local.u32 	%r891, [%rd8];
	// inline asm
	prmt.b32 %r11644, %r890, %r891, %r4;
	// inline asm
	ld.local.u32 	%r894, [%rd8];
	ld.local.u32 	%r895, [%rd7+12];
	// inline asm
	prmt.b32 %r11645, %r894, %r895, %r4;
	// inline asm
	ld.local.u32 	%r898, [%rd7+12];
	ld.local.u32 	%r899, [%rd7+8];
	// inline asm
	prmt.b32 %r11646, %r898, %r899, %r4;
	// inline asm
	ld.local.u32 	%r902, [%rd7+8];
	ld.local.u32 	%r903, [%rd7+4];
	// inline asm
	prmt.b32 %r11639, %r902, %r903, %r4;
	// inline asm
	ld.local.u32 	%r906, [%rd7+4];
	ld.local.u32 	%r907, [%rd7];
	// inline asm
	prmt.b32 %r11640, %r906, %r907, %r4;
	// inline asm
	ld.local.u32 	%r910, [%rd7];
	ld.local.u32 	%r911, [%rd6+12];
	// inline asm
	prmt.b32 %r11641, %r910, %r911, %r4;
	// inline asm
	ld.local.u32 	%r914, [%rd6+12];
	ld.local.u32 	%r915, [%rd6+8];
	// inline asm
	prmt.b32 %r11642, %r914, %r915, %r4;
	// inline asm
	ld.local.u32 	%r918, [%rd6+8];
	ld.local.u32 	%r919, [%rd6+4];
	// inline asm
	prmt.b32 %r11635, %r918, %r919, %r4;
	// inline asm
	ld.local.u32 	%r922, [%rd6+4];
	ld.local.u32 	%r923, [%rd6];
	// inline asm
	prmt.b32 %r11636, %r922, %r923, %r4;
	// inline asm
	ld.local.u32 	%r926, [%rd6];
	ld.local.u32 	%r927, [%rd5+12];
	// inline asm
	prmt.b32 %r11637, %r926, %r927, %r4;
	// inline asm
	ld.local.u32 	%r930, [%rd5+12];
	ld.local.u32 	%r931, [%rd5+8];
	// inline asm
	prmt.b32 %r11638, %r930, %r931, %r4;
	// inline asm
	ld.local.u32 	%r934, [%rd5+8];
	ld.local.u32 	%r935, [%rd5+4];
	// inline asm
	prmt.b32 %r11631, %r934, %r935, %r4;
	// inline asm
	ld.local.u32 	%r938, [%rd5+4];
	ld.local.u32 	%r939, [%rd5];
	// inline asm
	prmt.b32 %r11632, %r938, %r939, %r4;
	// inline asm
	ld.local.u32 	%r942, [%rd5];
	ld.local.u32 	%r943, [%rd4+12];
	// inline asm
	prmt.b32 %r11633, %r942, %r943, %r4;
	// inline asm
	ld.local.u32 	%r946, [%rd4+12];
	ld.local.u32 	%r947, [%rd4+8];
	// inline asm
	prmt.b32 %r11634, %r946, %r947, %r4;
	// inline asm
	ld.local.u32 	%r950, [%rd4+8];
	ld.local.u32 	%r951, [%rd4+4];
	// inline asm
	prmt.b32 %r11627, %r950, %r951, %r4;
	// inline asm
	ld.local.u32 	%r954, [%rd4+4];
	ld.local.u32 	%r955, [%rd4];
	// inline asm
	prmt.b32 %r11628, %r954, %r955, %r4;
	// inline asm
	ld.local.u32 	%r958, [%rd4];
	ld.local.u32 	%r959, [%rd3+12];
	// inline asm
	prmt.b32 %r11629, %r958, %r959, %r4;
	// inline asm
	ld.local.u32 	%r962, [%rd3+12];
	ld.local.u32 	%r963, [%rd3+8];
	// inline asm
	prmt.b32 %r11630, %r962, %r963, %r4;
	// inline asm
	ld.local.u32 	%r966, [%rd3+8];
	ld.local.u32 	%r967, [%rd3+4];
	// inline asm
	prmt.b32 %r11623, %r966, %r967, %r4;
	// inline asm
	ld.local.u32 	%r970, [%rd3+4];
	ld.local.u32 	%r971, [%rd3];
	// inline asm
	prmt.b32 %r11624, %r970, %r971, %r4;
	// inline asm
	ld.local.u32 	%r974, [%rd3];
	ld.local.u32 	%r975, [%rd2+12];
	// inline asm
	prmt.b32 %r11625, %r974, %r975, %r4;
	// inline asm
	ld.local.u32 	%r978, [%rd2+12];
	ld.local.u32 	%r979, [%rd2+8];
	// inline asm
	prmt.b32 %r11626, %r978, %r979, %r4;
	// inline asm
	ld.local.u32 	%r982, [%rd2+8];
	ld.local.u32 	%r983, [%rd2+4];
	// inline asm
	prmt.b32 %r11619, %r982, %r983, %r4;
	// inline asm
	ld.local.u32 	%r986, [%rd2+4];
	ld.local.u32 	%r987, [%rd2];
	// inline asm
	prmt.b32 %r11620, %r986, %r987, %r4;
	// inline asm
	ld.local.u32 	%r990, [%rd2];
	ld.local.u32 	%r991, [%rd1+12];
	// inline asm
	prmt.b32 %r11621, %r990, %r991, %r4;
	// inline asm
	ld.local.u32 	%r994, [%rd1+12];
	ld.local.u32 	%r995, [%rd1+8];
	// inline asm
	prmt.b32 %r11622, %r994, %r995, %r4;
	// inline asm
	ld.local.u32 	%r998, [%rd1+8];
	ld.local.u32 	%r999, [%rd1+4];
	// inline asm
	prmt.b32 %r997, %r998, %r999, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r997;
	ld.local.u32 	%r1002, [%rd1+4];
	ld.local.u32 	%r1003, [%rd1];
	// inline asm
	prmt.b32 %r1001, %r1002, %r1003, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1001;
	ld.local.u32 	%r1006, [%rd1];
	// inline asm
	prmt.b32 %r1005, %r1006, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1005;
	st.local.u32 	[%rd8], %r11618;
	st.local.u32 	[%rd7+12], %r11618;
	st.local.u32 	[%rd7+8], %r11618;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd28, 0;
	st.local.u32 	[%rd1+4], %rd28;
	st.local.u32 	[%rd1], %rd28;
	mov.u32 	%r11647, %r11618;
	mov.u32 	%r11648, %r11618;
	bra.uni 	BB0_91;

BB0_100:
	setp.eq.s32	%p95, %r3, 3;
	@%p95 bra 	BB0_101;
	bra.uni 	BB0_171;

BB0_101:
	ld.local.u32 	%r9087, [%rd8];
	ld.local.u32 	%r9088, [%rd7+12];
	// inline asm
	prmt.b32 %r9086, %r9087, %r9088, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r9086;
	ld.local.u32 	%r9091, [%rd7+12];
	ld.local.u32 	%r9092, [%rd7+8];
	// inline asm
	prmt.b32 %r9090, %r9091, %r9092, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r9090;
	ld.local.u32 	%r9095, [%rd7+8];
	ld.local.u32 	%r9096, [%rd7+4];
	// inline asm
	prmt.b32 %r9094, %r9095, %r9096, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r9094;
	ld.local.u32 	%r9099, [%rd7+4];
	ld.local.u32 	%r9100, [%rd7];
	// inline asm
	prmt.b32 %r9098, %r9099, %r9100, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r9098;
	ld.local.u32 	%r9103, [%rd7];
	ld.local.u32 	%r9104, [%rd6+12];
	// inline asm
	prmt.b32 %r9102, %r9103, %r9104, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r9102;
	ld.local.u32 	%r9107, [%rd6+12];
	ld.local.u32 	%r9108, [%rd6+8];
	// inline asm
	prmt.b32 %r9106, %r9107, %r9108, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r9106;
	ld.local.u32 	%r9111, [%rd6+8];
	ld.local.u32 	%r9112, [%rd6+4];
	// inline asm
	prmt.b32 %r9110, %r9111, %r9112, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r9110;
	ld.local.u32 	%r9115, [%rd6+4];
	ld.local.u32 	%r9116, [%rd6];
	// inline asm
	prmt.b32 %r9114, %r9115, %r9116, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r9114;
	ld.local.u32 	%r9119, [%rd6];
	ld.local.u32 	%r9120, [%rd5+12];
	// inline asm
	prmt.b32 %r9118, %r9119, %r9120, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r9118;
	ld.local.u32 	%r9123, [%rd5+12];
	ld.local.u32 	%r9124, [%rd5+8];
	// inline asm
	prmt.b32 %r9122, %r9123, %r9124, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r9122;
	ld.local.u32 	%r9127, [%rd5+8];
	ld.local.u32 	%r9128, [%rd5+4];
	// inline asm
	prmt.b32 %r9126, %r9127, %r9128, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r9126;
	ld.local.u32 	%r9131, [%rd5+4];
	ld.local.u32 	%r9132, [%rd5];
	// inline asm
	prmt.b32 %r9130, %r9131, %r9132, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r9130;
	ld.local.u32 	%r9135, [%rd5];
	ld.local.u32 	%r9136, [%rd4+12];
	// inline asm
	prmt.b32 %r9134, %r9135, %r9136, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r9134;
	ld.local.u32 	%r9139, [%rd4+12];
	ld.local.u32 	%r9140, [%rd4+8];
	// inline asm
	prmt.b32 %r9138, %r9139, %r9140, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r9138;
	ld.local.u32 	%r9143, [%rd4+8];
	ld.local.u32 	%r9144, [%rd4+4];
	// inline asm
	prmt.b32 %r9142, %r9143, %r9144, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r9142;
	ld.local.u32 	%r9147, [%rd4+4];
	ld.local.u32 	%r9148, [%rd4];
	// inline asm
	prmt.b32 %r9146, %r9147, %r9148, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r9146;
	ld.local.u32 	%r9151, [%rd4];
	ld.local.u32 	%r9152, [%rd3+12];
	// inline asm
	prmt.b32 %r9150, %r9151, %r9152, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r9150;
	ld.local.u32 	%r9155, [%rd3+12];
	ld.local.u32 	%r9156, [%rd3+8];
	// inline asm
	prmt.b32 %r9154, %r9155, %r9156, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r9154;
	ld.local.u32 	%r9159, [%rd3+8];
	ld.local.u32 	%r9160, [%rd3+4];
	// inline asm
	prmt.b32 %r9158, %r9159, %r9160, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r9158;
	ld.local.u32 	%r9163, [%rd3+4];
	ld.local.u32 	%r9164, [%rd3];
	// inline asm
	prmt.b32 %r9162, %r9163, %r9164, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r9162;
	ld.local.u32 	%r9167, [%rd3];
	ld.local.u32 	%r9168, [%rd2+12];
	// inline asm
	prmt.b32 %r9166, %r9167, %r9168, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r9166;
	ld.local.u32 	%r9171, [%rd2+12];
	ld.local.u32 	%r9172, [%rd2+8];
	// inline asm
	prmt.b32 %r9170, %r9171, %r9172, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r9170;
	ld.local.u32 	%r9175, [%rd2+8];
	ld.local.u32 	%r9176, [%rd2+4];
	// inline asm
	prmt.b32 %r9174, %r9175, %r9176, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r9174;
	ld.local.u32 	%r9179, [%rd2+4];
	ld.local.u32 	%r9180, [%rd2];
	// inline asm
	prmt.b32 %r9178, %r9179, %r9180, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r9178;
	ld.local.u32 	%r9183, [%rd2];
	ld.local.u32 	%r9184, [%rd1+12];
	// inline asm
	prmt.b32 %r9182, %r9183, %r9184, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r9182;
	ld.local.u32 	%r9187, [%rd1+12];
	ld.local.u32 	%r9188, [%rd1+8];
	// inline asm
	prmt.b32 %r9186, %r9187, %r9188, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r9186;
	ld.local.u32 	%r9191, [%rd1+8];
	ld.local.u32 	%r9192, [%rd1+4];
	// inline asm
	prmt.b32 %r9190, %r9191, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r9190;
	ld.local.u32 	%r9195, [%rd1+4];
	ld.local.u32 	%r9196, [%rd1];
	// inline asm
	prmt.b32 %r9194, %r9195, %r9196, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r9194;
	ld.local.u32 	%r9199, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r9198, %r9199, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r9198;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2948, 0;
	st.local.u32 	[%rd1+4], %rd2948;
	st.local.u32 	[%rd1], %rd2948;
	bra.uni 	BB0_172;

BB0_11:
	setp.eq.s32	%p48, %r3, 3;
	@%p48 bra 	BB0_12;
	bra.uni 	BB0_89;

BB0_12:
	ld.local.u32 	%r4714, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11619, %r11618, %r4714, %r4;
	// inline asm
	ld.local.u32 	%r4717, [%rd8+12];
	ld.local.u32 	%r4718, [%rd8+8];
	// inline asm
	prmt.b32 %r11620, %r4717, %r4718, %r4;
	// inline asm
	ld.local.u32 	%r4721, [%rd8+8];
	ld.local.u32 	%r4722, [%rd8+4];
	// inline asm
	prmt.b32 %r11621, %r4721, %r4722, %r4;
	// inline asm
	ld.local.u32 	%r4725, [%rd8+4];
	ld.local.u32 	%r4726, [%rd8];
	// inline asm
	prmt.b32 %r11622, %r4725, %r4726, %r4;
	// inline asm
	ld.local.u32 	%r4729, [%rd8];
	ld.local.u32 	%r4730, [%rd7+12];
	// inline asm
	prmt.b32 %r4728, %r4729, %r4730, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4728;
	ld.local.u32 	%r4733, [%rd7+12];
	ld.local.u32 	%r4734, [%rd7+8];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4732;
	ld.local.u32 	%r4737, [%rd7+8];
	ld.local.u32 	%r4738, [%rd7+4];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4736;
	ld.local.u32 	%r4741, [%rd7+4];
	ld.local.u32 	%r4742, [%rd7];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4740;
	ld.local.u32 	%r4745, [%rd7];
	ld.local.u32 	%r4746, [%rd6+12];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4744;
	ld.local.u32 	%r4749, [%rd6+12];
	ld.local.u32 	%r4750, [%rd6+8];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4748;
	ld.local.u32 	%r4753, [%rd6+8];
	ld.local.u32 	%r4754, [%rd6+4];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4752;
	ld.local.u32 	%r4757, [%rd6+4];
	ld.local.u32 	%r4758, [%rd6];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4756;
	ld.local.u32 	%r4761, [%rd6];
	ld.local.u32 	%r4762, [%rd5+12];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4760;
	ld.local.u32 	%r4765, [%rd5+12];
	ld.local.u32 	%r4766, [%rd5+8];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4764;
	ld.local.u32 	%r4769, [%rd5+8];
	ld.local.u32 	%r4770, [%rd5+4];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4768;
	ld.local.u32 	%r4773, [%rd5+4];
	ld.local.u32 	%r4774, [%rd5];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4772;
	ld.local.u32 	%r4777, [%rd5];
	ld.local.u32 	%r4778, [%rd4+12];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4776;
	ld.local.u32 	%r4781, [%rd4+12];
	ld.local.u32 	%r4782, [%rd4+8];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4780;
	ld.local.u32 	%r4785, [%rd4+8];
	ld.local.u32 	%r4786, [%rd4+4];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4784;
	ld.local.u32 	%r4789, [%rd4+4];
	ld.local.u32 	%r4790, [%rd4];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4788;
	ld.local.u32 	%r4793, [%rd4];
	ld.local.u32 	%r4794, [%rd3+12];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4792;
	ld.local.u32 	%r4797, [%rd3+12];
	ld.local.u32 	%r4798, [%rd3+8];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4796;
	ld.local.u32 	%r4801, [%rd3+8];
	ld.local.u32 	%r4802, [%rd3+4];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4800;
	ld.local.u32 	%r4805, [%rd3+4];
	ld.local.u32 	%r4806, [%rd3];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4804;
	ld.local.u32 	%r4809, [%rd3];
	ld.local.u32 	%r4810, [%rd2+12];
	// inline asm
	prmt.b32 %r4808, %r4809, %r4810, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4808;
	ld.local.u32 	%r4813, [%rd2+12];
	ld.local.u32 	%r4814, [%rd2+8];
	// inline asm
	prmt.b32 %r4812, %r4813, %r4814, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4812;
	ld.local.u32 	%r4817, [%rd2+8];
	ld.local.u32 	%r4818, [%rd2+4];
	// inline asm
	prmt.b32 %r4816, %r4817, %r4818, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4816;
	ld.local.u32 	%r4821, [%rd2+4];
	ld.local.u32 	%r4822, [%rd2];
	// inline asm
	prmt.b32 %r4820, %r4821, %r4822, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4820;
	ld.local.u32 	%r4825, [%rd2];
	ld.local.u32 	%r4826, [%rd1+12];
	// inline asm
	prmt.b32 %r4824, %r4825, %r4826, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4824;
	ld.local.u32 	%r4829, [%rd1+12];
	ld.local.u32 	%r4830, [%rd1+8];
	// inline asm
	prmt.b32 %r4828, %r4829, %r4830, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4828;
	ld.local.u32 	%r4833, [%rd1+8];
	ld.local.u32 	%r4834, [%rd1+4];
	// inline asm
	prmt.b32 %r4832, %r4833, %r4834, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4832;
	ld.local.u32 	%r4837, [%rd1+4];
	ld.local.u32 	%r4838, [%rd1];
	// inline asm
	prmt.b32 %r4836, %r4837, %r4838, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4836;
	ld.local.u32 	%r4841, [%rd1];
	// inline asm
	prmt.b32 %r4840, %r4841, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4840;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd54, 0;
	st.local.u32 	[%rd1+4], %rd54;
	st.local.u32 	[%rd1], %rd54;

BB0_13:
	mov.u32 	%r11623, %r11618;
	mov.u32 	%r11624, %r11618;
	mov.u32 	%r11625, %r11618;
	mov.u32 	%r11626, %r11618;
	bra.uni 	BB0_81;

BB0_131:
	setp.eq.s32	%p72, %r3, 19;
	@%p72 bra 	BB0_132;
	bra.uni 	BB0_171;

BB0_132:
	ld.local.u32 	%r7759, [%rd4];
	ld.local.u32 	%r7760, [%rd3+12];
	// inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7758;
	ld.local.u32 	%r7763, [%rd3+12];
	ld.local.u32 	%r7764, [%rd3+8];
	// inline asm
	prmt.b32 %r7762, %r7763, %r7764, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7762;
	ld.local.u32 	%r7767, [%rd3+8];
	ld.local.u32 	%r7768, [%rd3+4];
	// inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7766;
	ld.local.u32 	%r7771, [%rd3+4];
	ld.local.u32 	%r7772, [%rd3];
	// inline asm
	prmt.b32 %r7770, %r7771, %r7772, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7770;
	ld.local.u32 	%r7775, [%rd3];
	ld.local.u32 	%r7776, [%rd2+12];
	// inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7774;
	ld.local.u32 	%r7779, [%rd2+12];
	ld.local.u32 	%r7780, [%rd2+8];
	// inline asm
	prmt.b32 %r7778, %r7779, %r7780, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7778;
	ld.local.u32 	%r7783, [%rd2+8];
	ld.local.u32 	%r7784, [%rd2+4];
	// inline asm
	prmt.b32 %r7782, %r7783, %r7784, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7782;
	ld.local.u32 	%r7787, [%rd2+4];
	ld.local.u32 	%r7788, [%rd2];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7786;
	ld.local.u32 	%r7791, [%rd2];
	ld.local.u32 	%r7792, [%rd1+12];
	// inline asm
	prmt.b32 %r7790, %r7791, %r7792, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7790;
	ld.local.u32 	%r7795, [%rd1+12];
	ld.local.u32 	%r7796, [%rd1+8];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7794;
	ld.local.u32 	%r7799, [%rd1+8];
	ld.local.u32 	%r7800, [%rd1+4];
	// inline asm
	prmt.b32 %r7798, %r7799, %r7800, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7798;
	ld.local.u32 	%r7803, [%rd1+4];
	ld.local.u32 	%r7804, [%rd1];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7802;
	ld.local.u32 	%r7807, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7806, %r7807, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7806;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2932, 0;
	st.local.u32 	[%rd1+4], %rd2932;
	st.local.u32 	[%rd1], %rd2932;
	bra.uni 	BB0_172;

BB0_43:
	setp.eq.s32	%p25, %r3, 19;
	@%p25 bra 	BB0_44;
	bra.uni 	BB0_89;

BB0_44:
	ld.local.u32 	%r2274, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11635, %r11618, %r2274, %r4;
	// inline asm
	ld.local.u32 	%r2277, [%rd8+12];
	ld.local.u32 	%r2278, [%rd8+8];
	// inline asm
	prmt.b32 %r11636, %r2277, %r2278, %r4;
	// inline asm
	ld.local.u32 	%r2281, [%rd8+8];
	ld.local.u32 	%r2282, [%rd8+4];
	// inline asm
	prmt.b32 %r11637, %r2281, %r2282, %r4;
	// inline asm
	ld.local.u32 	%r2285, [%rd8+4];
	ld.local.u32 	%r2286, [%rd8];
	// inline asm
	prmt.b32 %r11638, %r2285, %r2286, %r4;
	// inline asm
	ld.local.u32 	%r2289, [%rd8];
	ld.local.u32 	%r2290, [%rd7+12];
	// inline asm
	prmt.b32 %r11631, %r2289, %r2290, %r4;
	// inline asm
	ld.local.u32 	%r2293, [%rd7+12];
	ld.local.u32 	%r2294, [%rd7+8];
	// inline asm
	prmt.b32 %r11632, %r2293, %r2294, %r4;
	// inline asm
	ld.local.u32 	%r2297, [%rd7+8];
	ld.local.u32 	%r2298, [%rd7+4];
	// inline asm
	prmt.b32 %r11633, %r2297, %r2298, %r4;
	// inline asm
	ld.local.u32 	%r2301, [%rd7+4];
	ld.local.u32 	%r2302, [%rd7];
	// inline asm
	prmt.b32 %r11634, %r2301, %r2302, %r4;
	// inline asm
	ld.local.u32 	%r2305, [%rd7];
	ld.local.u32 	%r2306, [%rd6+12];
	// inline asm
	prmt.b32 %r11627, %r2305, %r2306, %r4;
	// inline asm
	ld.local.u32 	%r2309, [%rd6+12];
	ld.local.u32 	%r2310, [%rd6+8];
	// inline asm
	prmt.b32 %r11628, %r2309, %r2310, %r4;
	// inline asm
	ld.local.u32 	%r2313, [%rd6+8];
	ld.local.u32 	%r2314, [%rd6+4];
	// inline asm
	prmt.b32 %r11629, %r2313, %r2314, %r4;
	// inline asm
	ld.local.u32 	%r2317, [%rd6+4];
	ld.local.u32 	%r2318, [%rd6];
	// inline asm
	prmt.b32 %r11630, %r2317, %r2318, %r4;
	// inline asm
	ld.local.u32 	%r2321, [%rd6];
	ld.local.u32 	%r2322, [%rd5+12];
	// inline asm
	prmt.b32 %r11623, %r2321, %r2322, %r4;
	// inline asm
	ld.local.u32 	%r2325, [%rd5+12];
	ld.local.u32 	%r2326, [%rd5+8];
	// inline asm
	prmt.b32 %r11624, %r2325, %r2326, %r4;
	// inline asm
	ld.local.u32 	%r2329, [%rd5+8];
	ld.local.u32 	%r2330, [%rd5+4];
	// inline asm
	prmt.b32 %r11625, %r2329, %r2330, %r4;
	// inline asm
	ld.local.u32 	%r2333, [%rd5+4];
	ld.local.u32 	%r2334, [%rd5];
	// inline asm
	prmt.b32 %r11626, %r2333, %r2334, %r4;
	// inline asm
	ld.local.u32 	%r2337, [%rd5];
	ld.local.u32 	%r2338, [%rd4+12];
	// inline asm
	prmt.b32 %r11619, %r2337, %r2338, %r4;
	// inline asm
	ld.local.u32 	%r2341, [%rd4+12];
	ld.local.u32 	%r2342, [%rd4+8];
	// inline asm
	prmt.b32 %r11620, %r2341, %r2342, %r4;
	// inline asm
	ld.local.u32 	%r2345, [%rd4+8];
	ld.local.u32 	%r2346, [%rd4+4];
	// inline asm
	prmt.b32 %r11621, %r2345, %r2346, %r4;
	// inline asm
	ld.local.u32 	%r2349, [%rd4+4];
	ld.local.u32 	%r2350, [%rd4];
	// inline asm
	prmt.b32 %r11622, %r2349, %r2350, %r4;
	// inline asm
	ld.local.u32 	%r2353, [%rd4];
	ld.local.u32 	%r2354, [%rd3+12];
	// inline asm
	prmt.b32 %r2352, %r2353, %r2354, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2352;
	ld.local.u32 	%r2357, [%rd3+12];
	ld.local.u32 	%r2358, [%rd3+8];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2356;
	ld.local.u32 	%r2361, [%rd3+8];
	ld.local.u32 	%r2362, [%rd3+4];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2360;
	ld.local.u32 	%r2365, [%rd3+4];
	ld.local.u32 	%r2366, [%rd3];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2364;
	ld.local.u32 	%r2369, [%rd3];
	ld.local.u32 	%r2370, [%rd2+12];
	// inline asm
	prmt.b32 %r2368, %r2369, %r2370, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2368;
	ld.local.u32 	%r2373, [%rd2+12];
	ld.local.u32 	%r2374, [%rd2+8];
	// inline asm
	prmt.b32 %r2372, %r2373, %r2374, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2372;
	ld.local.u32 	%r2377, [%rd2+8];
	ld.local.u32 	%r2378, [%rd2+4];
	// inline asm
	prmt.b32 %r2376, %r2377, %r2378, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2376;
	ld.local.u32 	%r2381, [%rd2+4];
	ld.local.u32 	%r2382, [%rd2];
	// inline asm
	prmt.b32 %r2380, %r2381, %r2382, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2380;
	ld.local.u32 	%r2385, [%rd2];
	ld.local.u32 	%r2386, [%rd1+12];
	// inline asm
	prmt.b32 %r2384, %r2385, %r2386, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2384;
	ld.local.u32 	%r2389, [%rd1+12];
	ld.local.u32 	%r2390, [%rd1+8];
	// inline asm
	prmt.b32 %r2388, %r2389, %r2390, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2388;
	ld.local.u32 	%r2393, [%rd1+8];
	ld.local.u32 	%r2394, [%rd1+4];
	// inline asm
	prmt.b32 %r2392, %r2393, %r2394, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2392;
	ld.local.u32 	%r2397, [%rd1+4];
	ld.local.u32 	%r2398, [%rd1];
	// inline asm
	prmt.b32 %r2396, %r2397, %r2398, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2396;
	ld.local.u32 	%r2401, [%rd1];
	// inline asm
	prmt.b32 %r2400, %r2401, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2400;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd38, 0;
	st.local.u32 	[%rd1+4], %rd38;
	st.local.u32 	[%rd1], %rd38;
	bra.uni 	BB0_84;

BB0_115:
	setp.eq.s32	%p84, %r3, 11;
	@%p84 bra 	BB0_116;
	bra.uni 	BB0_171;

BB0_116:
	ld.local.u32 	%r8295, [%rd6];
	ld.local.u32 	%r8296, [%rd5+12];
	// inline asm
	prmt.b32 %r8294, %r8295, %r8296, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8294;
	ld.local.u32 	%r8299, [%rd5+12];
	ld.local.u32 	%r8300, [%rd5+8];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8298;
	ld.local.u32 	%r8303, [%rd5+8];
	ld.local.u32 	%r8304, [%rd5+4];
	// inline asm
	prmt.b32 %r8302, %r8303, %r8304, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8302;
	ld.local.u32 	%r8307, [%rd5+4];
	ld.local.u32 	%r8308, [%rd5];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8306;
	ld.local.u32 	%r8311, [%rd5];
	ld.local.u32 	%r8312, [%rd4+12];
	// inline asm
	prmt.b32 %r8310, %r8311, %r8312, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8310;
	ld.local.u32 	%r8315, [%rd4+12];
	ld.local.u32 	%r8316, [%rd4+8];
	// inline asm
	prmt.b32 %r8314, %r8315, %r8316, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8314;
	ld.local.u32 	%r8319, [%rd4+8];
	ld.local.u32 	%r8320, [%rd4+4];
	// inline asm
	prmt.b32 %r8318, %r8319, %r8320, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8318;
	ld.local.u32 	%r8323, [%rd4+4];
	ld.local.u32 	%r8324, [%rd4];
	// inline asm
	prmt.b32 %r8322, %r8323, %r8324, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8322;
	ld.local.u32 	%r8327, [%rd4];
	ld.local.u32 	%r8328, [%rd3+12];
	// inline asm
	prmt.b32 %r8326, %r8327, %r8328, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8326;
	ld.local.u32 	%r8331, [%rd3+12];
	ld.local.u32 	%r8332, [%rd3+8];
	// inline asm
	prmt.b32 %r8330, %r8331, %r8332, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8330;
	ld.local.u32 	%r8335, [%rd3+8];
	ld.local.u32 	%r8336, [%rd3+4];
	// inline asm
	prmt.b32 %r8334, %r8335, %r8336, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8334;
	ld.local.u32 	%r8339, [%rd3+4];
	ld.local.u32 	%r8340, [%rd3];
	// inline asm
	prmt.b32 %r8338, %r8339, %r8340, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8338;
	ld.local.u32 	%r8343, [%rd3];
	ld.local.u32 	%r8344, [%rd2+12];
	// inline asm
	prmt.b32 %r8342, %r8343, %r8344, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8342;
	ld.local.u32 	%r8347, [%rd2+12];
	ld.local.u32 	%r8348, [%rd2+8];
	// inline asm
	prmt.b32 %r8346, %r8347, %r8348, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8346;
	ld.local.u32 	%r8351, [%rd2+8];
	ld.local.u32 	%r8352, [%rd2+4];
	// inline asm
	prmt.b32 %r8350, %r8351, %r8352, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8350;
	ld.local.u32 	%r8355, [%rd2+4];
	ld.local.u32 	%r8356, [%rd2];
	// inline asm
	prmt.b32 %r8354, %r8355, %r8356, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8354;
	ld.local.u32 	%r8359, [%rd2];
	ld.local.u32 	%r8360, [%rd1+12];
	// inline asm
	prmt.b32 %r8358, %r8359, %r8360, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8358;
	ld.local.u32 	%r8363, [%rd1+12];
	ld.local.u32 	%r8364, [%rd1+8];
	// inline asm
	prmt.b32 %r8362, %r8363, %r8364, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8362;
	ld.local.u32 	%r8367, [%rd1+8];
	ld.local.u32 	%r8368, [%rd1+4];
	// inline asm
	prmt.b32 %r8366, %r8367, %r8368, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8366;
	ld.local.u32 	%r8371, [%rd1+4];
	ld.local.u32 	%r8372, [%rd1];
	// inline asm
	prmt.b32 %r8370, %r8371, %r8372, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8370;
	ld.local.u32 	%r8375, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8374, %r8375, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8374;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2940, 0;
	st.local.u32 	[%rd1+4], %rd2940;
	st.local.u32 	[%rd1], %rd2940;
	bra.uni 	BB0_172;

BB0_27:
	setp.eq.s32	%p37, %r3, 11;
	@%p37 bra 	BB0_28;
	bra.uni 	BB0_89;

BB0_28:
	ld.local.u32 	%r3462, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11627, %r11618, %r3462, %r4;
	// inline asm
	ld.local.u32 	%r3465, [%rd8+12];
	ld.local.u32 	%r3466, [%rd8+8];
	// inline asm
	prmt.b32 %r11628, %r3465, %r3466, %r4;
	// inline asm
	ld.local.u32 	%r3469, [%rd8+8];
	ld.local.u32 	%r3470, [%rd8+4];
	// inline asm
	prmt.b32 %r11629, %r3469, %r3470, %r4;
	// inline asm
	ld.local.u32 	%r3473, [%rd8+4];
	ld.local.u32 	%r3474, [%rd8];
	// inline asm
	prmt.b32 %r11630, %r3473, %r3474, %r4;
	// inline asm
	ld.local.u32 	%r3477, [%rd8];
	ld.local.u32 	%r3478, [%rd7+12];
	// inline asm
	prmt.b32 %r11623, %r3477, %r3478, %r4;
	// inline asm
	ld.local.u32 	%r3481, [%rd7+12];
	ld.local.u32 	%r3482, [%rd7+8];
	// inline asm
	prmt.b32 %r11624, %r3481, %r3482, %r4;
	// inline asm
	ld.local.u32 	%r3485, [%rd7+8];
	ld.local.u32 	%r3486, [%rd7+4];
	// inline asm
	prmt.b32 %r11625, %r3485, %r3486, %r4;
	// inline asm
	ld.local.u32 	%r3489, [%rd7+4];
	ld.local.u32 	%r3490, [%rd7];
	// inline asm
	prmt.b32 %r11626, %r3489, %r3490, %r4;
	// inline asm
	ld.local.u32 	%r3493, [%rd7];
	ld.local.u32 	%r3494, [%rd6+12];
	// inline asm
	prmt.b32 %r11619, %r3493, %r3494, %r4;
	// inline asm
	ld.local.u32 	%r3497, [%rd6+12];
	ld.local.u32 	%r3498, [%rd6+8];
	// inline asm
	prmt.b32 %r11620, %r3497, %r3498, %r4;
	// inline asm
	ld.local.u32 	%r3501, [%rd6+8];
	ld.local.u32 	%r3502, [%rd6+4];
	// inline asm
	prmt.b32 %r11621, %r3501, %r3502, %r4;
	// inline asm
	ld.local.u32 	%r3505, [%rd6+4];
	ld.local.u32 	%r3506, [%rd6];
	// inline asm
	prmt.b32 %r11622, %r3505, %r3506, %r4;
	// inline asm
	ld.local.u32 	%r3509, [%rd6];
	ld.local.u32 	%r3510, [%rd5+12];
	// inline asm
	prmt.b32 %r3508, %r3509, %r3510, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3508;
	ld.local.u32 	%r3513, [%rd5+12];
	ld.local.u32 	%r3514, [%rd5+8];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3512;
	ld.local.u32 	%r3517, [%rd5+8];
	ld.local.u32 	%r3518, [%rd5+4];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3516;
	ld.local.u32 	%r3521, [%rd5+4];
	ld.local.u32 	%r3522, [%rd5];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3520;
	ld.local.u32 	%r3525, [%rd5];
	ld.local.u32 	%r3526, [%rd4+12];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3524;
	ld.local.u32 	%r3529, [%rd4+12];
	ld.local.u32 	%r3530, [%rd4+8];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3528;
	ld.local.u32 	%r3533, [%rd4+8];
	ld.local.u32 	%r3534, [%rd4+4];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3532;
	ld.local.u32 	%r3537, [%rd4+4];
	ld.local.u32 	%r3538, [%rd4];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3536;
	ld.local.u32 	%r3541, [%rd4];
	ld.local.u32 	%r3542, [%rd3+12];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3540;
	ld.local.u32 	%r3545, [%rd3+12];
	ld.local.u32 	%r3546, [%rd3+8];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3544;
	ld.local.u32 	%r3549, [%rd3+8];
	ld.local.u32 	%r3550, [%rd3+4];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3548;
	ld.local.u32 	%r3553, [%rd3+4];
	ld.local.u32 	%r3554, [%rd3];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3552;
	ld.local.u32 	%r3557, [%rd3];
	ld.local.u32 	%r3558, [%rd2+12];
	// inline asm
	prmt.b32 %r3556, %r3557, %r3558, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3556;
	ld.local.u32 	%r3561, [%rd2+12];
	ld.local.u32 	%r3562, [%rd2+8];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3560;
	ld.local.u32 	%r3565, [%rd2+8];
	ld.local.u32 	%r3566, [%rd2+4];
	// inline asm
	prmt.b32 %r3564, %r3565, %r3566, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3564;
	ld.local.u32 	%r3569, [%rd2+4];
	ld.local.u32 	%r3570, [%rd2];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3568;
	ld.local.u32 	%r3573, [%rd2];
	ld.local.u32 	%r3574, [%rd1+12];
	// inline asm
	prmt.b32 %r3572, %r3573, %r3574, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3572;
	ld.local.u32 	%r3577, [%rd1+12];
	ld.local.u32 	%r3578, [%rd1+8];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3576;
	ld.local.u32 	%r3581, [%rd1+8];
	ld.local.u32 	%r3582, [%rd1+4];
	// inline asm
	prmt.b32 %r3580, %r3581, %r3582, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3580;
	ld.local.u32 	%r3585, [%rd1+4];
	ld.local.u32 	%r3586, [%rd1];
	// inline asm
	prmt.b32 %r3584, %r3585, %r3586, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3584;
	ld.local.u32 	%r3589, [%rd1];
	// inline asm
	prmt.b32 %r3588, %r3589, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3588;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd46, 0;
	st.local.u32 	[%rd1+4], %rd46;
	st.local.u32 	[%rd1], %rd46;
	bra.uni 	BB0_82;

BB0_146:
	setp.eq.s32	%p61, %r3, 27;
	@%p61 bra 	BB0_147;
	bra.uni 	BB0_171;

BB0_147:
	ld.local.u32 	%r7479, [%rd2];
	ld.local.u32 	%r7480, [%rd1+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7478;
	ld.local.u32 	%r7483, [%rd1+12];
	ld.local.u32 	%r7484, [%rd1+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7482;
	ld.local.u32 	%r7487, [%rd1+8];
	ld.local.u32 	%r7488, [%rd1+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7486;
	ld.local.u32 	%r7491, [%rd1+4];
	ld.local.u32 	%r7492, [%rd1];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7490;
	ld.local.u32 	%r7495, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7494, %r7495, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7494;
	st.local.u32 	[%rd7+8], %r11651;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2924, 0;
	st.local.u32 	[%rd1+4], %rd2924;
	st.local.u32 	[%rd1], %rd2924;
	bra.uni 	BB0_172;

BB0_58:
	setp.eq.s32	%p14, %r3, 27;
	@%p14 bra 	BB0_59;
	bra.uni 	BB0_89;

BB0_59:
	ld.local.u32 	%r1150, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11643, %r11618, %r1150, %r4;
	// inline asm
	ld.local.u32 	%r1153, [%rd8+12];
	ld.local.u32 	%r1154, [%rd8+8];
	// inline asm
	prmt.b32 %r11644, %r1153, %r1154, %r4;
	// inline asm
	ld.local.u32 	%r1157, [%rd8+8];
	ld.local.u32 	%r1158, [%rd8+4];
	// inline asm
	prmt.b32 %r11645, %r1157, %r1158, %r4;
	// inline asm
	ld.local.u32 	%r1161, [%rd8+4];
	ld.local.u32 	%r1162, [%rd8];
	// inline asm
	prmt.b32 %r11646, %r1161, %r1162, %r4;
	// inline asm
	ld.local.u32 	%r1165, [%rd8];
	ld.local.u32 	%r1166, [%rd7+12];
	// inline asm
	prmt.b32 %r11639, %r1165, %r1166, %r4;
	// inline asm
	ld.local.u32 	%r1169, [%rd7+12];
	ld.local.u32 	%r1170, [%rd7+8];
	// inline asm
	prmt.b32 %r11640, %r1169, %r1170, %r4;
	// inline asm
	ld.local.u32 	%r1173, [%rd7+8];
	ld.local.u32 	%r1174, [%rd7+4];
	// inline asm
	prmt.b32 %r11641, %r1173, %r1174, %r4;
	// inline asm
	ld.local.u32 	%r1177, [%rd7+4];
	ld.local.u32 	%r1178, [%rd7];
	// inline asm
	prmt.b32 %r11642, %r1177, %r1178, %r4;
	// inline asm
	ld.local.u32 	%r1181, [%rd7];
	ld.local.u32 	%r1182, [%rd6+12];
	// inline asm
	prmt.b32 %r11635, %r1181, %r1182, %r4;
	// inline asm
	ld.local.u32 	%r1185, [%rd6+12];
	ld.local.u32 	%r1186, [%rd6+8];
	// inline asm
	prmt.b32 %r11636, %r1185, %r1186, %r4;
	// inline asm
	ld.local.u32 	%r1189, [%rd6+8];
	ld.local.u32 	%r1190, [%rd6+4];
	// inline asm
	prmt.b32 %r11637, %r1189, %r1190, %r4;
	// inline asm
	ld.local.u32 	%r1193, [%rd6+4];
	ld.local.u32 	%r1194, [%rd6];
	// inline asm
	prmt.b32 %r11638, %r1193, %r1194, %r4;
	// inline asm
	ld.local.u32 	%r1197, [%rd6];
	ld.local.u32 	%r1198, [%rd5+12];
	// inline asm
	prmt.b32 %r11631, %r1197, %r1198, %r4;
	// inline asm
	ld.local.u32 	%r1201, [%rd5+12];
	ld.local.u32 	%r1202, [%rd5+8];
	// inline asm
	prmt.b32 %r11632, %r1201, %r1202, %r4;
	// inline asm
	ld.local.u32 	%r1205, [%rd5+8];
	ld.local.u32 	%r1206, [%rd5+4];
	// inline asm
	prmt.b32 %r11633, %r1205, %r1206, %r4;
	// inline asm
	ld.local.u32 	%r1209, [%rd5+4];
	ld.local.u32 	%r1210, [%rd5];
	// inline asm
	prmt.b32 %r11634, %r1209, %r1210, %r4;
	// inline asm
	ld.local.u32 	%r1213, [%rd5];
	ld.local.u32 	%r1214, [%rd4+12];
	// inline asm
	prmt.b32 %r11627, %r1213, %r1214, %r4;
	// inline asm
	ld.local.u32 	%r1217, [%rd4+12];
	ld.local.u32 	%r1218, [%rd4+8];
	// inline asm
	prmt.b32 %r11628, %r1217, %r1218, %r4;
	// inline asm
	ld.local.u32 	%r1221, [%rd4+8];
	ld.local.u32 	%r1222, [%rd4+4];
	// inline asm
	prmt.b32 %r11629, %r1221, %r1222, %r4;
	// inline asm
	ld.local.u32 	%r1225, [%rd4+4];
	ld.local.u32 	%r1226, [%rd4];
	// inline asm
	prmt.b32 %r11630, %r1225, %r1226, %r4;
	// inline asm
	ld.local.u32 	%r1229, [%rd4];
	ld.local.u32 	%r1230, [%rd3+12];
	// inline asm
	prmt.b32 %r11623, %r1229, %r1230, %r4;
	// inline asm
	ld.local.u32 	%r1233, [%rd3+12];
	ld.local.u32 	%r1234, [%rd3+8];
	// inline asm
	prmt.b32 %r11624, %r1233, %r1234, %r4;
	// inline asm
	ld.local.u32 	%r1237, [%rd3+8];
	ld.local.u32 	%r1238, [%rd3+4];
	// inline asm
	prmt.b32 %r11625, %r1237, %r1238, %r4;
	// inline asm
	ld.local.u32 	%r1241, [%rd3+4];
	ld.local.u32 	%r1242, [%rd3];
	// inline asm
	prmt.b32 %r11626, %r1241, %r1242, %r4;
	// inline asm
	ld.local.u32 	%r1245, [%rd3];
	ld.local.u32 	%r1246, [%rd2+12];
	// inline asm
	prmt.b32 %r11619, %r1245, %r1246, %r4;
	// inline asm
	ld.local.u32 	%r1249, [%rd2+12];
	ld.local.u32 	%r1250, [%rd2+8];
	// inline asm
	prmt.b32 %r11620, %r1249, %r1250, %r4;
	// inline asm
	ld.local.u32 	%r1253, [%rd2+8];
	ld.local.u32 	%r1254, [%rd2+4];
	// inline asm
	prmt.b32 %r11621, %r1253, %r1254, %r4;
	// inline asm
	ld.local.u32 	%r1257, [%rd2+4];
	ld.local.u32 	%r1258, [%rd2];
	// inline asm
	prmt.b32 %r11622, %r1257, %r1258, %r4;
	// inline asm
	ld.local.u32 	%r1261, [%rd2];
	ld.local.u32 	%r1262, [%rd1+12];
	// inline asm
	prmt.b32 %r1260, %r1261, %r1262, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1260;
	ld.local.u32 	%r1265, [%rd1+12];
	ld.local.u32 	%r1266, [%rd1+8];
	// inline asm
	prmt.b32 %r1264, %r1265, %r1266, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1264;
	ld.local.u32 	%r1269, [%rd1+8];
	ld.local.u32 	%r1270, [%rd1+4];
	// inline asm
	prmt.b32 %r1268, %r1269, %r1270, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1268;
	ld.local.u32 	%r1273, [%rd1+4];
	ld.local.u32 	%r1274, [%rd1];
	// inline asm
	prmt.b32 %r1272, %r1273, %r1274, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1272;
	ld.local.u32 	%r1277, [%rd1];
	// inline asm
	prmt.b32 %r1276, %r1277, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1276;
	st.local.u32 	[%rd7+8], %r11618;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd30, 0;
	st.local.u32 	[%rd1+4], %rd30;
	st.local.u32 	[%rd1], %rd30;
	bra.uni 	BB0_86;

BB0_107:
	setp.eq.s32	%p90, %r3, 7;
	@%p90 bra 	BB0_108;
	bra.uni 	BB0_171;

BB0_108:
	ld.local.u32 	%r8659, [%rd7];
	ld.local.u32 	%r8660, [%rd6+12];
	// inline asm
	prmt.b32 %r8658, %r8659, %r8660, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8658;
	ld.local.u32 	%r8663, [%rd6+12];
	ld.local.u32 	%r8664, [%rd6+8];
	// inline asm
	prmt.b32 %r8662, %r8663, %r8664, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8662;
	ld.local.u32 	%r8667, [%rd6+8];
	ld.local.u32 	%r8668, [%rd6+4];
	// inline asm
	prmt.b32 %r8666, %r8667, %r8668, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8666;
	ld.local.u32 	%r8671, [%rd6+4];
	ld.local.u32 	%r8672, [%rd6];
	// inline asm
	prmt.b32 %r8670, %r8671, %r8672, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8670;
	ld.local.u32 	%r8675, [%rd6];
	ld.local.u32 	%r8676, [%rd5+12];
	// inline asm
	prmt.b32 %r8674, %r8675, %r8676, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8674;
	ld.local.u32 	%r8679, [%rd5+12];
	ld.local.u32 	%r8680, [%rd5+8];
	// inline asm
	prmt.b32 %r8678, %r8679, %r8680, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8678;
	ld.local.u32 	%r8683, [%rd5+8];
	ld.local.u32 	%r8684, [%rd5+4];
	// inline asm
	prmt.b32 %r8682, %r8683, %r8684, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8682;
	ld.local.u32 	%r8687, [%rd5+4];
	ld.local.u32 	%r8688, [%rd5];
	// inline asm
	prmt.b32 %r8686, %r8687, %r8688, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8686;
	ld.local.u32 	%r8691, [%rd5];
	ld.local.u32 	%r8692, [%rd4+12];
	// inline asm
	prmt.b32 %r8690, %r8691, %r8692, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8690;
	ld.local.u32 	%r8695, [%rd4+12];
	ld.local.u32 	%r8696, [%rd4+8];
	// inline asm
	prmt.b32 %r8694, %r8695, %r8696, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8694;
	ld.local.u32 	%r8699, [%rd4+8];
	ld.local.u32 	%r8700, [%rd4+4];
	// inline asm
	prmt.b32 %r8698, %r8699, %r8700, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8698;
	ld.local.u32 	%r8703, [%rd4+4];
	ld.local.u32 	%r8704, [%rd4];
	// inline asm
	prmt.b32 %r8702, %r8703, %r8704, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8702;
	ld.local.u32 	%r8707, [%rd4];
	ld.local.u32 	%r8708, [%rd3+12];
	// inline asm
	prmt.b32 %r8706, %r8707, %r8708, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8706;
	ld.local.u32 	%r8711, [%rd3+12];
	ld.local.u32 	%r8712, [%rd3+8];
	// inline asm
	prmt.b32 %r8710, %r8711, %r8712, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8710;
	ld.local.u32 	%r8715, [%rd3+8];
	ld.local.u32 	%r8716, [%rd3+4];
	// inline asm
	prmt.b32 %r8714, %r8715, %r8716, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8714;
	ld.local.u32 	%r8719, [%rd3+4];
	ld.local.u32 	%r8720, [%rd3];
	// inline asm
	prmt.b32 %r8718, %r8719, %r8720, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8718;
	ld.local.u32 	%r8723, [%rd3];
	ld.local.u32 	%r8724, [%rd2+12];
	// inline asm
	prmt.b32 %r8722, %r8723, %r8724, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8722;
	ld.local.u32 	%r8727, [%rd2+12];
	ld.local.u32 	%r8728, [%rd2+8];
	// inline asm
	prmt.b32 %r8726, %r8727, %r8728, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8726;
	ld.local.u32 	%r8731, [%rd2+8];
	ld.local.u32 	%r8732, [%rd2+4];
	// inline asm
	prmt.b32 %r8730, %r8731, %r8732, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8730;
	ld.local.u32 	%r8735, [%rd2+4];
	ld.local.u32 	%r8736, [%rd2];
	// inline asm
	prmt.b32 %r8734, %r8735, %r8736, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8734;
	ld.local.u32 	%r8739, [%rd2];
	ld.local.u32 	%r8740, [%rd1+12];
	// inline asm
	prmt.b32 %r8738, %r8739, %r8740, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8738;
	ld.local.u32 	%r8743, [%rd1+12];
	ld.local.u32 	%r8744, [%rd1+8];
	// inline asm
	prmt.b32 %r8742, %r8743, %r8744, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8742;
	ld.local.u32 	%r8747, [%rd1+8];
	ld.local.u32 	%r8748, [%rd1+4];
	// inline asm
	prmt.b32 %r8746, %r8747, %r8748, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8746;
	ld.local.u32 	%r8751, [%rd1+4];
	ld.local.u32 	%r8752, [%rd1];
	// inline asm
	prmt.b32 %r8750, %r8751, %r8752, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8750;
	ld.local.u32 	%r8755, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8754, %r8755, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8754;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2944, 0;
	st.local.u32 	[%rd1+4], %rd2944;
	st.local.u32 	[%rd1], %rd2944;
	bra.uni 	BB0_172;

BB0_19:
	setp.eq.s32	%p43, %r3, 7;
	@%p43 bra 	BB0_20;
	bra.uni 	BB0_89;

BB0_20:
	ld.local.u32 	%r4080, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11623, %r11618, %r4080, %r4;
	// inline asm
	ld.local.u32 	%r4083, [%rd8+12];
	ld.local.u32 	%r4084, [%rd8+8];
	// inline asm
	prmt.b32 %r11624, %r4083, %r4084, %r4;
	// inline asm
	ld.local.u32 	%r4087, [%rd8+8];
	ld.local.u32 	%r4088, [%rd8+4];
	// inline asm
	prmt.b32 %r11625, %r4087, %r4088, %r4;
	// inline asm
	ld.local.u32 	%r4091, [%rd8+4];
	ld.local.u32 	%r4092, [%rd8];
	// inline asm
	prmt.b32 %r11626, %r4091, %r4092, %r4;
	// inline asm
	ld.local.u32 	%r4095, [%rd8];
	ld.local.u32 	%r4096, [%rd7+12];
	// inline asm
	prmt.b32 %r11619, %r4095, %r4096, %r4;
	// inline asm
	ld.local.u32 	%r4099, [%rd7+12];
	ld.local.u32 	%r4100, [%rd7+8];
	// inline asm
	prmt.b32 %r11620, %r4099, %r4100, %r4;
	// inline asm
	ld.local.u32 	%r4103, [%rd7+8];
	ld.local.u32 	%r4104, [%rd7+4];
	// inline asm
	prmt.b32 %r11621, %r4103, %r4104, %r4;
	// inline asm
	ld.local.u32 	%r4107, [%rd7+4];
	ld.local.u32 	%r4108, [%rd7];
	// inline asm
	prmt.b32 %r11622, %r4107, %r4108, %r4;
	// inline asm
	ld.local.u32 	%r4111, [%rd7];
	ld.local.u32 	%r4112, [%rd6+12];
	// inline asm
	prmt.b32 %r4110, %r4111, %r4112, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4110;
	ld.local.u32 	%r4115, [%rd6+12];
	ld.local.u32 	%r4116, [%rd6+8];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4114;
	ld.local.u32 	%r4119, [%rd6+8];
	ld.local.u32 	%r4120, [%rd6+4];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4118;
	ld.local.u32 	%r4123, [%rd6+4];
	ld.local.u32 	%r4124, [%rd6];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4122;
	ld.local.u32 	%r4127, [%rd6];
	ld.local.u32 	%r4128, [%rd5+12];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4126;
	ld.local.u32 	%r4131, [%rd5+12];
	ld.local.u32 	%r4132, [%rd5+8];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4130;
	ld.local.u32 	%r4135, [%rd5+8];
	ld.local.u32 	%r4136, [%rd5+4];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4134;
	ld.local.u32 	%r4139, [%rd5+4];
	ld.local.u32 	%r4140, [%rd5];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4138;
	ld.local.u32 	%r4143, [%rd5];
	ld.local.u32 	%r4144, [%rd4+12];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4142;
	ld.local.u32 	%r4147, [%rd4+12];
	ld.local.u32 	%r4148, [%rd4+8];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4146;
	ld.local.u32 	%r4151, [%rd4+8];
	ld.local.u32 	%r4152, [%rd4+4];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4150;
	ld.local.u32 	%r4155, [%rd4+4];
	ld.local.u32 	%r4156, [%rd4];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4154;
	ld.local.u32 	%r4159, [%rd4];
	ld.local.u32 	%r4160, [%rd3+12];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4158;
	ld.local.u32 	%r4163, [%rd3+12];
	ld.local.u32 	%r4164, [%rd3+8];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4162;
	ld.local.u32 	%r4167, [%rd3+8];
	ld.local.u32 	%r4168, [%rd3+4];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4166;
	ld.local.u32 	%r4171, [%rd3+4];
	ld.local.u32 	%r4172, [%rd3];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4170;
	ld.local.u32 	%r4175, [%rd3];
	ld.local.u32 	%r4176, [%rd2+12];
	// inline asm
	prmt.b32 %r4174, %r4175, %r4176, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4174;
	ld.local.u32 	%r4179, [%rd2+12];
	ld.local.u32 	%r4180, [%rd2+8];
	// inline asm
	prmt.b32 %r4178, %r4179, %r4180, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4178;
	ld.local.u32 	%r4183, [%rd2+8];
	ld.local.u32 	%r4184, [%rd2+4];
	// inline asm
	prmt.b32 %r4182, %r4183, %r4184, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4182;
	ld.local.u32 	%r4187, [%rd2+4];
	ld.local.u32 	%r4188, [%rd2];
	// inline asm
	prmt.b32 %r4186, %r4187, %r4188, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4186;
	ld.local.u32 	%r4191, [%rd2];
	ld.local.u32 	%r4192, [%rd1+12];
	// inline asm
	prmt.b32 %r4190, %r4191, %r4192, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4190;
	ld.local.u32 	%r4195, [%rd1+12];
	ld.local.u32 	%r4196, [%rd1+8];
	// inline asm
	prmt.b32 %r4194, %r4195, %r4196, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4194;
	ld.local.u32 	%r4199, [%rd1+8];
	ld.local.u32 	%r4200, [%rd1+4];
	// inline asm
	prmt.b32 %r4198, %r4199, %r4200, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4198;
	ld.local.u32 	%r4203, [%rd1+4];
	ld.local.u32 	%r4204, [%rd1];
	// inline asm
	prmt.b32 %r4202, %r4203, %r4204, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4202;
	ld.local.u32 	%r4207, [%rd1];
	// inline asm
	prmt.b32 %r4206, %r4207, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4206;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd50, 0;
	st.local.u32 	[%rd1+4], %rd50;
	st.local.u32 	[%rd1], %rd50;

BB0_81:
	mov.u32 	%r11627, %r11618;
	mov.u32 	%r11628, %r11618;
	mov.u32 	%r11629, %r11618;
	mov.u32 	%r11630, %r11618;

BB0_82:
	mov.u32 	%r11631, %r11618;
	mov.u32 	%r11632, %r11618;
	mov.u32 	%r11633, %r11618;
	mov.u32 	%r11634, %r11618;

BB0_83:
	mov.u32 	%r11635, %r11618;
	mov.u32 	%r11636, %r11618;
	mov.u32 	%r11637, %r11618;
	mov.u32 	%r11638, %r11618;

BB0_84:
	mov.u32 	%r11639, %r11618;
	mov.u32 	%r11640, %r11618;
	mov.u32 	%r11641, %r11618;
	mov.u32 	%r11642, %r11618;

BB0_85:
	mov.u32 	%r11643, %r11618;
	mov.u32 	%r11644, %r11618;
	mov.u32 	%r11645, %r11618;
	mov.u32 	%r11646, %r11618;

BB0_86:
	mov.u32 	%r11647, %r11618;
	mov.u32 	%r11648, %r11618;
	mov.u32 	%r11649, %r11618;
	mov.u32 	%r11650, %r11618;
	bra.uni 	BB0_91;

BB0_138:
	setp.eq.s32	%p67, %r3, 23;
	@%p67 bra 	BB0_139;
	bra.uni 	BB0_171;

BB0_139:
	ld.local.u32 	%r7587, [%rd3];
	ld.local.u32 	%r7588, [%rd2+12];
	// inline asm
	prmt.b32 %r7586, %r7587, %r7588, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7586;
	ld.local.u32 	%r7591, [%rd2+12];
	ld.local.u32 	%r7592, [%rd2+8];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7590;
	ld.local.u32 	%r7595, [%rd2+8];
	ld.local.u32 	%r7596, [%rd2+4];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7594;
	ld.local.u32 	%r7599, [%rd2+4];
	ld.local.u32 	%r7600, [%rd2];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7598;
	ld.local.u32 	%r7603, [%rd2];
	ld.local.u32 	%r7604, [%rd1+12];
	// inline asm
	prmt.b32 %r7602, %r7603, %r7604, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7602;
	ld.local.u32 	%r7607, [%rd1+12];
	ld.local.u32 	%r7608, [%rd1+8];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7606;
	ld.local.u32 	%r7611, [%rd1+8];
	ld.local.u32 	%r7612, [%rd1+4];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7610;
	ld.local.u32 	%r7615, [%rd1+4];
	ld.local.u32 	%r7616, [%rd1];
	// inline asm
	prmt.b32 %r7614, %r7615, %r7616, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7614;
	ld.local.u32 	%r7619, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7618, %r7619, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7618;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2928, 0;
	st.local.u32 	[%rd1+4], %rd2928;
	st.local.u32 	[%rd1], %rd2928;
	bra.uni 	BB0_172;

BB0_50:
	setp.eq.s32	%p20, %r3, 23;
	@%p20 bra 	BB0_51;
	bra.uni 	BB0_89;

BB0_51:
	ld.local.u32 	%r1704, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11639, %r11618, %r1704, %r4;
	// inline asm
	ld.local.u32 	%r1707, [%rd8+12];
	ld.local.u32 	%r1708, [%rd8+8];
	// inline asm
	prmt.b32 %r11640, %r1707, %r1708, %r4;
	// inline asm
	ld.local.u32 	%r1711, [%rd8+8];
	ld.local.u32 	%r1712, [%rd8+4];
	// inline asm
	prmt.b32 %r11641, %r1711, %r1712, %r4;
	// inline asm
	ld.local.u32 	%r1715, [%rd8+4];
	ld.local.u32 	%r1716, [%rd8];
	// inline asm
	prmt.b32 %r11642, %r1715, %r1716, %r4;
	// inline asm
	ld.local.u32 	%r1719, [%rd8];
	ld.local.u32 	%r1720, [%rd7+12];
	// inline asm
	prmt.b32 %r11635, %r1719, %r1720, %r4;
	// inline asm
	ld.local.u32 	%r1723, [%rd7+12];
	ld.local.u32 	%r1724, [%rd7+8];
	// inline asm
	prmt.b32 %r11636, %r1723, %r1724, %r4;
	// inline asm
	ld.local.u32 	%r1727, [%rd7+8];
	ld.local.u32 	%r1728, [%rd7+4];
	// inline asm
	prmt.b32 %r11637, %r1727, %r1728, %r4;
	// inline asm
	ld.local.u32 	%r1731, [%rd7+4];
	ld.local.u32 	%r1732, [%rd7];
	// inline asm
	prmt.b32 %r11638, %r1731, %r1732, %r4;
	// inline asm
	ld.local.u32 	%r1735, [%rd7];
	ld.local.u32 	%r1736, [%rd6+12];
	// inline asm
	prmt.b32 %r11631, %r1735, %r1736, %r4;
	// inline asm
	ld.local.u32 	%r1739, [%rd6+12];
	ld.local.u32 	%r1740, [%rd6+8];
	// inline asm
	prmt.b32 %r11632, %r1739, %r1740, %r4;
	// inline asm
	ld.local.u32 	%r1743, [%rd6+8];
	ld.local.u32 	%r1744, [%rd6+4];
	// inline asm
	prmt.b32 %r11633, %r1743, %r1744, %r4;
	// inline asm
	ld.local.u32 	%r1747, [%rd6+4];
	ld.local.u32 	%r1748, [%rd6];
	// inline asm
	prmt.b32 %r11634, %r1747, %r1748, %r4;
	// inline asm
	ld.local.u32 	%r1751, [%rd6];
	ld.local.u32 	%r1752, [%rd5+12];
	// inline asm
	prmt.b32 %r11627, %r1751, %r1752, %r4;
	// inline asm
	ld.local.u32 	%r1755, [%rd5+12];
	ld.local.u32 	%r1756, [%rd5+8];
	// inline asm
	prmt.b32 %r11628, %r1755, %r1756, %r4;
	// inline asm
	ld.local.u32 	%r1759, [%rd5+8];
	ld.local.u32 	%r1760, [%rd5+4];
	// inline asm
	prmt.b32 %r11629, %r1759, %r1760, %r4;
	// inline asm
	ld.local.u32 	%r1763, [%rd5+4];
	ld.local.u32 	%r1764, [%rd5];
	// inline asm
	prmt.b32 %r11630, %r1763, %r1764, %r4;
	// inline asm
	ld.local.u32 	%r1767, [%rd5];
	ld.local.u32 	%r1768, [%rd4+12];
	// inline asm
	prmt.b32 %r11623, %r1767, %r1768, %r4;
	// inline asm
	ld.local.u32 	%r1771, [%rd4+12];
	ld.local.u32 	%r1772, [%rd4+8];
	// inline asm
	prmt.b32 %r11624, %r1771, %r1772, %r4;
	// inline asm
	ld.local.u32 	%r1775, [%rd4+8];
	ld.local.u32 	%r1776, [%rd4+4];
	// inline asm
	prmt.b32 %r11625, %r1775, %r1776, %r4;
	// inline asm
	ld.local.u32 	%r1779, [%rd4+4];
	ld.local.u32 	%r1780, [%rd4];
	// inline asm
	prmt.b32 %r11626, %r1779, %r1780, %r4;
	// inline asm
	ld.local.u32 	%r1783, [%rd4];
	ld.local.u32 	%r1784, [%rd3+12];
	// inline asm
	prmt.b32 %r11619, %r1783, %r1784, %r4;
	// inline asm
	ld.local.u32 	%r1787, [%rd3+12];
	ld.local.u32 	%r1788, [%rd3+8];
	// inline asm
	prmt.b32 %r11620, %r1787, %r1788, %r4;
	// inline asm
	ld.local.u32 	%r1791, [%rd3+8];
	ld.local.u32 	%r1792, [%rd3+4];
	// inline asm
	prmt.b32 %r11621, %r1791, %r1792, %r4;
	// inline asm
	ld.local.u32 	%r1795, [%rd3+4];
	ld.local.u32 	%r1796, [%rd3];
	// inline asm
	prmt.b32 %r11622, %r1795, %r1796, %r4;
	// inline asm
	ld.local.u32 	%r1799, [%rd3];
	ld.local.u32 	%r1800, [%rd2+12];
	// inline asm
	prmt.b32 %r1798, %r1799, %r1800, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1798;
	ld.local.u32 	%r1803, [%rd2+12];
	ld.local.u32 	%r1804, [%rd2+8];
	// inline asm
	prmt.b32 %r1802, %r1803, %r1804, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1802;
	ld.local.u32 	%r1807, [%rd2+8];
	ld.local.u32 	%r1808, [%rd2+4];
	// inline asm
	prmt.b32 %r1806, %r1807, %r1808, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1806;
	ld.local.u32 	%r1811, [%rd2+4];
	ld.local.u32 	%r1812, [%rd2];
	// inline asm
	prmt.b32 %r1810, %r1811, %r1812, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1810;
	ld.local.u32 	%r1815, [%rd2];
	ld.local.u32 	%r1816, [%rd1+12];
	// inline asm
	prmt.b32 %r1814, %r1815, %r1816, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1814;
	ld.local.u32 	%r1819, [%rd1+12];
	ld.local.u32 	%r1820, [%rd1+8];
	// inline asm
	prmt.b32 %r1818, %r1819, %r1820, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1818;
	ld.local.u32 	%r1823, [%rd1+8];
	ld.local.u32 	%r1824, [%rd1+4];
	// inline asm
	prmt.b32 %r1822, %r1823, %r1824, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1822;
	ld.local.u32 	%r1827, [%rd1+4];
	ld.local.u32 	%r1828, [%rd1];
	// inline asm
	prmt.b32 %r1826, %r1827, %r1828, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1826;
	ld.local.u32 	%r1831, [%rd1];
	// inline asm
	prmt.b32 %r1830, %r1831, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1830;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd34, 0;
	st.local.u32 	[%rd1+4], %rd34;
	st.local.u32 	[%rd1], %rd34;
	bra.uni 	BB0_85;

BB0_122:
	setp.eq.s32	%p79, %r3, 15;
	@%p79 bra 	BB0_123;
	bra.uni 	BB0_171;

BB0_123:
	ld.local.u32 	%r7995, [%rd5];
	ld.local.u32 	%r7996, [%rd4+12];
	// inline asm
	prmt.b32 %r7994, %r7995, %r7996, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7994;
	ld.local.u32 	%r7999, [%rd4+12];
	ld.local.u32 	%r8000, [%rd4+8];
	// inline asm
	prmt.b32 %r7998, %r7999, %r8000, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7998;
	ld.local.u32 	%r8003, [%rd4+8];
	ld.local.u32 	%r8004, [%rd4+4];
	// inline asm
	prmt.b32 %r8002, %r8003, %r8004, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8002;
	ld.local.u32 	%r8007, [%rd4+4];
	ld.local.u32 	%r8008, [%rd4];
	// inline asm
	prmt.b32 %r8006, %r8007, %r8008, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8006;
	ld.local.u32 	%r8011, [%rd4];
	ld.local.u32 	%r8012, [%rd3+12];
	// inline asm
	prmt.b32 %r8010, %r8011, %r8012, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8010;
	ld.local.u32 	%r8015, [%rd3+12];
	ld.local.u32 	%r8016, [%rd3+8];
	// inline asm
	prmt.b32 %r8014, %r8015, %r8016, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8014;
	ld.local.u32 	%r8019, [%rd3+8];
	ld.local.u32 	%r8020, [%rd3+4];
	// inline asm
	prmt.b32 %r8018, %r8019, %r8020, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8018;
	ld.local.u32 	%r8023, [%rd3+4];
	ld.local.u32 	%r8024, [%rd3];
	// inline asm
	prmt.b32 %r8022, %r8023, %r8024, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8022;
	ld.local.u32 	%r8027, [%rd3];
	ld.local.u32 	%r8028, [%rd2+12];
	// inline asm
	prmt.b32 %r8026, %r8027, %r8028, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8026;
	ld.local.u32 	%r8031, [%rd2+12];
	ld.local.u32 	%r8032, [%rd2+8];
	// inline asm
	prmt.b32 %r8030, %r8031, %r8032, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8030;
	ld.local.u32 	%r8035, [%rd2+8];
	ld.local.u32 	%r8036, [%rd2+4];
	// inline asm
	prmt.b32 %r8034, %r8035, %r8036, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8034;
	ld.local.u32 	%r8039, [%rd2+4];
	ld.local.u32 	%r8040, [%rd2];
	// inline asm
	prmt.b32 %r8038, %r8039, %r8040, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8038;
	ld.local.u32 	%r8043, [%rd2];
	ld.local.u32 	%r8044, [%rd1+12];
	// inline asm
	prmt.b32 %r8042, %r8043, %r8044, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8042;
	ld.local.u32 	%r8047, [%rd1+12];
	ld.local.u32 	%r8048, [%rd1+8];
	// inline asm
	prmt.b32 %r8046, %r8047, %r8048, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8046;
	ld.local.u32 	%r8051, [%rd1+8];
	ld.local.u32 	%r8052, [%rd1+4];
	// inline asm
	prmt.b32 %r8050, %r8051, %r8052, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8050;
	ld.local.u32 	%r8055, [%rd1+4];
	ld.local.u32 	%r8056, [%rd1];
	// inline asm
	prmt.b32 %r8054, %r8055, %r8056, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8054;
	ld.local.u32 	%r8059, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r8058, %r8059, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8058;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2936, 0;
	st.local.u32 	[%rd1+4], %rd2936;
	st.local.u32 	[%rd1], %rd2936;
	bra.uni 	BB0_172;

BB0_34:
	setp.eq.s32	%p32, %r3, 15;
	@%p32 bra 	BB0_35;
	bra.uni 	BB0_89;

BB0_35:
	ld.local.u32 	%r2860, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11631, %r11618, %r2860, %r4;
	// inline asm
	ld.local.u32 	%r2863, [%rd8+12];
	ld.local.u32 	%r2864, [%rd8+8];
	// inline asm
	prmt.b32 %r11632, %r2863, %r2864, %r4;
	// inline asm
	ld.local.u32 	%r2867, [%rd8+8];
	ld.local.u32 	%r2868, [%rd8+4];
	// inline asm
	prmt.b32 %r11633, %r2867, %r2868, %r4;
	// inline asm
	ld.local.u32 	%r2871, [%rd8+4];
	ld.local.u32 	%r2872, [%rd8];
	// inline asm
	prmt.b32 %r11634, %r2871, %r2872, %r4;
	// inline asm
	ld.local.u32 	%r2875, [%rd8];
	ld.local.u32 	%r2876, [%rd7+12];
	// inline asm
	prmt.b32 %r11627, %r2875, %r2876, %r4;
	// inline asm
	ld.local.u32 	%r2879, [%rd7+12];
	ld.local.u32 	%r2880, [%rd7+8];
	// inline asm
	prmt.b32 %r11628, %r2879, %r2880, %r4;
	// inline asm
	ld.local.u32 	%r2883, [%rd7+8];
	ld.local.u32 	%r2884, [%rd7+4];
	// inline asm
	prmt.b32 %r11629, %r2883, %r2884, %r4;
	// inline asm
	ld.local.u32 	%r2887, [%rd7+4];
	ld.local.u32 	%r2888, [%rd7];
	// inline asm
	prmt.b32 %r11630, %r2887, %r2888, %r4;
	// inline asm
	ld.local.u32 	%r2891, [%rd7];
	ld.local.u32 	%r2892, [%rd6+12];
	// inline asm
	prmt.b32 %r11623, %r2891, %r2892, %r4;
	// inline asm
	ld.local.u32 	%r2895, [%rd6+12];
	ld.local.u32 	%r2896, [%rd6+8];
	// inline asm
	prmt.b32 %r11624, %r2895, %r2896, %r4;
	// inline asm
	ld.local.u32 	%r2899, [%rd6+8];
	ld.local.u32 	%r2900, [%rd6+4];
	// inline asm
	prmt.b32 %r11625, %r2899, %r2900, %r4;
	// inline asm
	ld.local.u32 	%r2903, [%rd6+4];
	ld.local.u32 	%r2904, [%rd6];
	// inline asm
	prmt.b32 %r11626, %r2903, %r2904, %r4;
	// inline asm
	ld.local.u32 	%r2907, [%rd6];
	ld.local.u32 	%r2908, [%rd5+12];
	// inline asm
	prmt.b32 %r11619, %r2907, %r2908, %r4;
	// inline asm
	ld.local.u32 	%r2911, [%rd5+12];
	ld.local.u32 	%r2912, [%rd5+8];
	// inline asm
	prmt.b32 %r11620, %r2911, %r2912, %r4;
	// inline asm
	ld.local.u32 	%r2915, [%rd5+8];
	ld.local.u32 	%r2916, [%rd5+4];
	// inline asm
	prmt.b32 %r11621, %r2915, %r2916, %r4;
	// inline asm
	ld.local.u32 	%r2919, [%rd5+4];
	ld.local.u32 	%r2920, [%rd5];
	// inline asm
	prmt.b32 %r11622, %r2919, %r2920, %r4;
	// inline asm
	ld.local.u32 	%r2923, [%rd5];
	ld.local.u32 	%r2924, [%rd4+12];
	// inline asm
	prmt.b32 %r2922, %r2923, %r2924, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2922;
	ld.local.u32 	%r2927, [%rd4+12];
	ld.local.u32 	%r2928, [%rd4+8];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2926;
	ld.local.u32 	%r2931, [%rd4+8];
	ld.local.u32 	%r2932, [%rd4+4];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2930;
	ld.local.u32 	%r2935, [%rd4+4];
	ld.local.u32 	%r2936, [%rd4];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2934;
	ld.local.u32 	%r2939, [%rd4];
	ld.local.u32 	%r2940, [%rd3+12];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2938;
	ld.local.u32 	%r2943, [%rd3+12];
	ld.local.u32 	%r2944, [%rd3+8];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2942;
	ld.local.u32 	%r2947, [%rd3+8];
	ld.local.u32 	%r2948, [%rd3+4];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2946;
	ld.local.u32 	%r2951, [%rd3+4];
	ld.local.u32 	%r2952, [%rd3];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2950;
	ld.local.u32 	%r2955, [%rd3];
	ld.local.u32 	%r2956, [%rd2+12];
	// inline asm
	prmt.b32 %r2954, %r2955, %r2956, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2954;
	ld.local.u32 	%r2959, [%rd2+12];
	ld.local.u32 	%r2960, [%rd2+8];
	// inline asm
	prmt.b32 %r2958, %r2959, %r2960, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2958;
	ld.local.u32 	%r2963, [%rd2+8];
	ld.local.u32 	%r2964, [%rd2+4];
	// inline asm
	prmt.b32 %r2962, %r2963, %r2964, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2962;
	ld.local.u32 	%r2967, [%rd2+4];
	ld.local.u32 	%r2968, [%rd2];
	// inline asm
	prmt.b32 %r2966, %r2967, %r2968, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2966;
	ld.local.u32 	%r2971, [%rd2];
	ld.local.u32 	%r2972, [%rd1+12];
	// inline asm
	prmt.b32 %r2970, %r2971, %r2972, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2970;
	ld.local.u32 	%r2975, [%rd1+12];
	ld.local.u32 	%r2976, [%rd1+8];
	// inline asm
	prmt.b32 %r2974, %r2975, %r2976, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2974;
	ld.local.u32 	%r2979, [%rd1+8];
	ld.local.u32 	%r2980, [%rd1+4];
	// inline asm
	prmt.b32 %r2978, %r2979, %r2980, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2978;
	ld.local.u32 	%r2983, [%rd1+4];
	ld.local.u32 	%r2984, [%rd1];
	// inline asm
	prmt.b32 %r2982, %r2983, %r2984, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2982;
	ld.local.u32 	%r2987, [%rd1];
	// inline asm
	prmt.b32 %r2986, %r2987, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r2986;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd42, 0;
	st.local.u32 	[%rd1+4], %rd42;
	st.local.u32 	[%rd1], %rd42;
	bra.uni 	BB0_83;

BB0_153:
	setp.ne.s32	%p56, %r3, 31;
	@%p56 bra 	BB0_171;

	ld.local.u32 	%r7435, [%rd1];
	mov.u32 	%r11651, 0;
	// inline asm
	prmt.b32 %r7434, %r7435, %r11651, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7434;
	st.local.u32 	[%rd8+8], %r11651;
	st.local.u32 	[%rd8+4], %r11651;
	st.local.u32 	[%rd8], %r11651;
	st.local.u32 	[%rd7+12], %r11651;
	st.local.u32 	[%rd7+8], %r11651;
	st.local.u32 	[%rd7+4], %r11651;
	st.local.u32 	[%rd7], %r11651;
	st.local.u32 	[%rd6+12], %r11651;
	st.local.u32 	[%rd6+8], %r11651;
	st.local.u32 	[%rd6+4], %r11651;
	st.local.u32 	[%rd6], %r11651;
	st.local.u32 	[%rd5+12], %r11651;
	st.local.u32 	[%rd5+8], %r11651;
	st.local.u32 	[%rd5+4], %r11651;
	st.local.u32 	[%rd5], %r11651;
	st.local.u32 	[%rd4+12], %r11651;
	st.local.u32 	[%rd4+8], %r11651;
	st.local.u32 	[%rd4+4], %r11651;
	st.local.u32 	[%rd4], %r11651;
	st.local.u32 	[%rd3+12], %r11651;
	st.local.u32 	[%rd3+8], %r11651;
	st.local.u32 	[%rd3+4], %r11651;
	st.local.u32 	[%rd3], %r11651;
	st.local.u32 	[%rd2+12], %r11651;
	st.local.u32 	[%rd2+8], %r11651;
	st.local.u32 	[%rd2+4], %r11651;
	st.local.u32 	[%rd2], %r11651;
	st.local.u32 	[%rd1+12], %r11651;
	st.local.u32 	[%rd1+8], %r11651;
	mov.u64 	%rd2920, 0;
	st.local.u32 	[%rd1+4], %rd2920;
	st.local.u32 	[%rd1], %rd2920;
	bra.uni 	BB0_172;

BB0_171:
	ld.local.u32 	%r11651, [%rd1];

BB0_172:
	ld.local.u32 	%r9577, [%rd9+64];
	or.b32  	%r9578, %r9577, %r11651;
	st.local.u32 	[%rd9+64], %r9578;
	ld.local.u32 	%r9579, [%rd9+68];
	ld.local.u32 	%r9580, [%rd1+4];
	or.b32  	%r9581, %r9579, %r9580;
	st.local.u32 	[%rd9+68], %r9581;
	ld.local.u32 	%r9582, [%rd9+72];
	ld.local.u32 	%r9583, [%rd1+8];
	or.b32  	%r9584, %r9582, %r9583;
	st.local.u32 	[%rd9+72], %r9584;
	ld.local.u32 	%r9585, [%rd9+76];
	ld.local.u32 	%r9586, [%rd1+12];
	or.b32  	%r9587, %r9585, %r9586;
	st.local.u32 	[%rd9+76], %r9587;
	ld.local.u32 	%r9588, [%rd9+80];
	ld.local.u32 	%r9589, [%rd2];
	or.b32  	%r9590, %r9588, %r9589;
	st.local.u32 	[%rd9+80], %r9590;
	ld.local.u32 	%r9591, [%rd9+84];
	ld.local.u32 	%r9592, [%rd2+4];
	or.b32  	%r9593, %r9591, %r9592;
	st.local.u32 	[%rd9+84], %r9593;
	ld.local.u32 	%r9594, [%rd9+88];
	ld.local.u32 	%r9595, [%rd2+8];
	or.b32  	%r9596, %r9594, %r9595;
	st.local.u32 	[%rd9+88], %r9596;
	ld.local.u32 	%r9597, [%rd9+92];
	ld.local.u32 	%r9598, [%rd2+12];
	or.b32  	%r9599, %r9597, %r9598;
	st.local.u32 	[%rd9+92], %r9599;
	ld.local.u32 	%r9600, [%rd9+96];
	ld.local.u32 	%r9601, [%rd3];
	or.b32  	%r9602, %r9600, %r9601;
	st.local.u32 	[%rd9+96], %r9602;
	ld.local.u32 	%r9603, [%rd9+100];
	ld.local.u32 	%r9604, [%rd3+4];
	or.b32  	%r9605, %r9603, %r9604;
	st.local.u32 	[%rd9+100], %r9605;
	ld.local.u32 	%r9606, [%rd9+104];
	ld.local.u32 	%r9607, [%rd3+8];
	or.b32  	%r9608, %r9606, %r9607;
	st.local.u32 	[%rd9+104], %r9608;
	ld.local.u32 	%r9609, [%rd9+108];
	ld.local.u32 	%r9610, [%rd3+12];
	or.b32  	%r9611, %r9609, %r9610;
	st.local.u32 	[%rd9+108], %r9611;
	ld.local.u32 	%r9612, [%rd9+112];
	ld.local.u32 	%r9613, [%rd4];
	or.b32  	%r9614, %r9612, %r9613;
	st.local.u32 	[%rd9+112], %r9614;
	ld.local.u32 	%r9615, [%rd9+116];
	ld.local.u32 	%r9616, [%rd4+4];
	or.b32  	%r9617, %r9615, %r9616;
	st.local.u32 	[%rd9+116], %r9617;
	ld.local.u32 	%r9618, [%rd9+120];
	ld.local.u32 	%r9619, [%rd4+8];
	or.b32  	%r9620, %r9618, %r9619;
	st.local.u32 	[%rd9+120], %r9620;
	ld.local.u32 	%r9621, [%rd9+124];
	ld.local.u32 	%r9622, [%rd4+12];
	or.b32  	%r9623, %r9621, %r9622;
	st.local.u32 	[%rd9+124], %r9623;
	ld.local.u32 	%r9624, [%rd9+128];
	ld.local.u32 	%r9625, [%rd5];
	or.b32  	%r9626, %r9624, %r9625;
	st.local.u32 	[%rd9+128], %r9626;
	ld.local.u32 	%r9627, [%rd9+132];
	ld.local.u32 	%r9628, [%rd5+4];
	or.b32  	%r9629, %r9627, %r9628;
	st.local.u32 	[%rd9+132], %r9629;
	ld.local.u32 	%r9630, [%rd9+136];
	ld.local.u32 	%r9631, [%rd5+8];
	or.b32  	%r9632, %r9630, %r9631;
	st.local.u32 	[%rd9+136], %r9632;
	ld.local.u32 	%r9633, [%rd9+140];
	ld.local.u32 	%r9634, [%rd5+12];
	or.b32  	%r9635, %r9633, %r9634;
	st.local.u32 	[%rd9+140], %r9635;
	ld.local.u32 	%r9636, [%rd9+144];
	ld.local.u32 	%r9637, [%rd6];
	or.b32  	%r9638, %r9636, %r9637;
	st.local.u32 	[%rd9+144], %r9638;
	ld.local.u32 	%r9639, [%rd9+148];
	ld.local.u32 	%r9640, [%rd6+4];
	or.b32  	%r9641, %r9639, %r9640;
	st.local.u32 	[%rd9+148], %r9641;
	ld.local.u32 	%r9642, [%rd9+152];
	ld.local.u32 	%r9643, [%rd6+8];
	or.b32  	%r9644, %r9642, %r9643;
	st.local.u32 	[%rd9+152], %r9644;
	ld.local.u32 	%r9645, [%rd9+156];
	ld.local.u32 	%r9646, [%rd6+12];
	or.b32  	%r9647, %r9645, %r9646;
	st.local.u32 	[%rd9+156], %r9647;
	ld.local.u32 	%r9648, [%rd9+160];
	ld.local.u32 	%r9649, [%rd7];
	or.b32  	%r9650, %r9648, %r9649;
	st.local.u32 	[%rd9+160], %r9650;
	ld.local.u32 	%r9651, [%rd9+164];
	ld.local.u32 	%r9652, [%rd7+4];
	or.b32  	%r9653, %r9651, %r9652;
	st.local.u32 	[%rd9+164], %r9653;
	ld.local.u32 	%r9654, [%rd9+168];
	ld.local.u32 	%r9655, [%rd7+8];
	or.b32  	%r9656, %r9654, %r9655;
	st.local.u32 	[%rd9+168], %r9656;
	ld.local.u32 	%r9657, [%rd9+172];
	ld.local.u32 	%r9658, [%rd7+12];
	or.b32  	%r9659, %r9657, %r9658;
	st.local.u32 	[%rd9+172], %r9659;
	ld.local.u32 	%r9660, [%rd9+176];
	ld.local.u32 	%r9661, [%rd8];
	or.b32  	%r9662, %r9660, %r9661;
	st.local.u32 	[%rd9+176], %r9662;
	ld.local.u32 	%r9663, [%rd9+180];
	ld.local.u32 	%r9664, [%rd8+4];
	or.b32  	%r9665, %r9663, %r9664;
	st.local.u32 	[%rd9+180], %r9665;
	ld.local.u32 	%r9666, [%rd9+184];
	ld.local.u32 	%r9667, [%rd8+8];
	or.b32  	%r9668, %r9666, %r9667;
	st.local.u32 	[%rd9+184], %r9668;
	ld.local.u32 	%r9669, [%rd9+188];
	ld.local.u32 	%r9670, [%rd8+12];
	or.b32  	%r9671, %r9669, %r9670;
	st.local.u32 	[%rd9+188], %r9671;
	bra.uni 	BB0_175;

BB0_65:
	setp.ne.s32	%p9, %r3, 31;
	@%p9 bra 	BB0_89;

	ld.local.u32 	%r612, [%rd8+12];
	mov.u32 	%r11618, 0;
	// inline asm
	prmt.b32 %r11647, %r11618, %r612, %r4;
	// inline asm
	ld.local.u32 	%r615, [%rd8+12];
	ld.local.u32 	%r616, [%rd8+8];
	// inline asm
	prmt.b32 %r11648, %r615, %r616, %r4;
	// inline asm
	ld.local.u32 	%r619, [%rd8+8];
	ld.local.u32 	%r620, [%rd8+4];
	// inline asm
	prmt.b32 %r11649, %r619, %r620, %r4;
	// inline asm
	ld.local.u32 	%r623, [%rd8+4];
	ld.local.u32 	%r624, [%rd8];
	// inline asm
	prmt.b32 %r11650, %r623, %r624, %r4;
	// inline asm
	ld.local.u32 	%r627, [%rd8];
	ld.local.u32 	%r628, [%rd7+12];
	// inline asm
	prmt.b32 %r11643, %r627, %r628, %r4;
	// inline asm
	ld.local.u32 	%r631, [%rd7+12];
	ld.local.u32 	%r632, [%rd7+8];
	// inline asm
	prmt.b32 %r11644, %r631, %r632, %r4;
	// inline asm
	ld.local.u32 	%r635, [%rd7+8];
	ld.local.u32 	%r636, [%rd7+4];
	// inline asm
	prmt.b32 %r11645, %r635, %r636, %r4;
	// inline asm
	ld.local.u32 	%r639, [%rd7+4];
	ld.local.u32 	%r640, [%rd7];
	// inline asm
	prmt.b32 %r11646, %r639, %r640, %r4;
	// inline asm
	ld.local.u32 	%r643, [%rd7];
	ld.local.u32 	%r644, [%rd6+12];
	// inline asm
	prmt.b32 %r11639, %r643, %r644, %r4;
	// inline asm
	ld.local.u32 	%r647, [%rd6+12];
	ld.local.u32 	%r648, [%rd6+8];
	// inline asm
	prmt.b32 %r11640, %r647, %r648, %r4;
	// inline asm
	ld.local.u32 	%r651, [%rd6+8];
	ld.local.u32 	%r652, [%rd6+4];
	// inline asm
	prmt.b32 %r11641, %r651, %r652, %r4;
	// inline asm
	ld.local.u32 	%r655, [%rd6+4];
	ld.local.u32 	%r656, [%rd6];
	// inline asm
	prmt.b32 %r11642, %r655, %r656, %r4;
	// inline asm
	ld.local.u32 	%r659, [%rd6];
	ld.local.u32 	%r660, [%rd5+12];
	// inline asm
	prmt.b32 %r11635, %r659, %r660, %r4;
	// inline asm
	ld.local.u32 	%r663, [%rd5+12];
	ld.local.u32 	%r664, [%rd5+8];
	// inline asm
	prmt.b32 %r11636, %r663, %r664, %r4;
	// inline asm
	ld.local.u32 	%r667, [%rd5+8];
	ld.local.u32 	%r668, [%rd5+4];
	// inline asm
	prmt.b32 %r11637, %r667, %r668, %r4;
	// inline asm
	ld.local.u32 	%r671, [%rd5+4];
	ld.local.u32 	%r672, [%rd5];
	// inline asm
	prmt.b32 %r11638, %r671, %r672, %r4;
	// inline asm
	ld.local.u32 	%r675, [%rd5];
	ld.local.u32 	%r676, [%rd4+12];
	// inline asm
	prmt.b32 %r11631, %r675, %r676, %r4;
	// inline asm
	ld.local.u32 	%r679, [%rd4+12];
	ld.local.u32 	%r680, [%rd4+8];
	// inline asm
	prmt.b32 %r11632, %r679, %r680, %r4;
	// inline asm
	ld.local.u32 	%r683, [%rd4+8];
	ld.local.u32 	%r684, [%rd4+4];
	// inline asm
	prmt.b32 %r11633, %r683, %r684, %r4;
	// inline asm
	ld.local.u32 	%r687, [%rd4+4];
	ld.local.u32 	%r688, [%rd4];
	// inline asm
	prmt.b32 %r11634, %r687, %r688, %r4;
	// inline asm
	ld.local.u32 	%r691, [%rd4];
	ld.local.u32 	%r692, [%rd3+12];
	// inline asm
	prmt.b32 %r11627, %r691, %r692, %r4;
	// inline asm
	ld.local.u32 	%r695, [%rd3+12];
	ld.local.u32 	%r696, [%rd3+8];
	// inline asm
	prmt.b32 %r11628, %r695, %r696, %r4;
	// inline asm
	ld.local.u32 	%r699, [%rd3+8];
	ld.local.u32 	%r700, [%rd3+4];
	// inline asm
	prmt.b32 %r11629, %r699, %r700, %r4;
	// inline asm
	ld.local.u32 	%r703, [%rd3+4];
	ld.local.u32 	%r704, [%rd3];
	// inline asm
	prmt.b32 %r11630, %r703, %r704, %r4;
	// inline asm
	ld.local.u32 	%r707, [%rd3];
	ld.local.u32 	%r708, [%rd2+12];
	// inline asm
	prmt.b32 %r11623, %r707, %r708, %r4;
	// inline asm
	ld.local.u32 	%r711, [%rd2+12];
	ld.local.u32 	%r712, [%rd2+8];
	// inline asm
	prmt.b32 %r11624, %r711, %r712, %r4;
	// inline asm
	ld.local.u32 	%r715, [%rd2+8];
	ld.local.u32 	%r716, [%rd2+4];
	// inline asm
	prmt.b32 %r11625, %r715, %r716, %r4;
	// inline asm
	ld.local.u32 	%r719, [%rd2+4];
	ld.local.u32 	%r720, [%rd2];
	// inline asm
	prmt.b32 %r11626, %r719, %r720, %r4;
	// inline asm
	ld.local.u32 	%r723, [%rd2];
	ld.local.u32 	%r724, [%rd1+12];
	// inline asm
	prmt.b32 %r11619, %r723, %r724, %r4;
	// inline asm
	ld.local.u32 	%r727, [%rd1+12];
	ld.local.u32 	%r728, [%rd1+8];
	// inline asm
	prmt.b32 %r11620, %r727, %r728, %r4;
	// inline asm
	ld.local.u32 	%r731, [%rd1+8];
	ld.local.u32 	%r732, [%rd1+4];
	// inline asm
	prmt.b32 %r11621, %r731, %r732, %r4;
	// inline asm
	ld.local.u32 	%r735, [%rd1+4];
	ld.local.u32 	%r736, [%rd1];
	// inline asm
	prmt.b32 %r11622, %r735, %r736, %r4;
	// inline asm
	ld.local.u32 	%r739, [%rd1];
	// inline asm
	prmt.b32 %r738, %r739, %r11618, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r738;
	st.local.u32 	[%rd8+8], %r11618;
	st.local.u32 	[%rd8+4], %r11618;
	st.local.u32 	[%rd8], %r11618;
	st.local.u32 	[%rd7+12], %r11618;
	st.local.u32 	[%rd7+8], %r11618;
	st.local.u32 	[%rd7+4], %r11618;
	st.local.u32 	[%rd7], %r11618;
	st.local.u32 	[%rd6+12], %r11618;
	st.local.u32 	[%rd6+8], %r11618;
	st.local.u32 	[%rd6+4], %r11618;
	st.local.u32 	[%rd6], %r11618;
	st.local.u32 	[%rd5+12], %r11618;
	st.local.u32 	[%rd5+8], %r11618;
	st.local.u32 	[%rd5+4], %r11618;
	st.local.u32 	[%rd5], %r11618;
	st.local.u32 	[%rd4+12], %r11618;
	st.local.u32 	[%rd4+8], %r11618;
	st.local.u32 	[%rd4+4], %r11618;
	st.local.u32 	[%rd4], %r11618;
	st.local.u32 	[%rd3+12], %r11618;
	st.local.u32 	[%rd3+8], %r11618;
	st.local.u32 	[%rd3+4], %r11618;
	st.local.u32 	[%rd3], %r11618;
	st.local.u32 	[%rd2+12], %r11618;
	st.local.u32 	[%rd2+8], %r11618;
	st.local.u32 	[%rd2+4], %r11618;
	st.local.u32 	[%rd2], %r11618;
	st.local.u32 	[%rd1+12], %r11618;
	st.local.u32 	[%rd1+8], %r11618;
	mov.u64 	%rd26, 0;
	st.local.u32 	[%rd1+4], %rd26;
	st.local.u32 	[%rd1], %rd26;
	bra.uni 	BB0_91;

BB0_89:
	ld.local.u32 	%r11618, [%rd1];
	mov.u32 	%r11619, 0;
	mov.u32 	%r11620, %r11619;
	mov.u32 	%r11621, %r11619;
	mov.u32 	%r11622, %r11619;

BB0_90:
	mov.u32 	%r11623, %r11619;
	mov.u32 	%r11624, %r11619;
	mov.u32 	%r11625, %r11619;
	mov.u32 	%r11626, %r11619;
	mov.u32 	%r11627, %r11619;
	mov.u32 	%r11628, %r11619;
	mov.u32 	%r11629, %r11619;
	mov.u32 	%r11630, %r11619;
	mov.u32 	%r11631, %r11619;
	mov.u32 	%r11632, %r11619;
	mov.u32 	%r11633, %r11619;
	mov.u32 	%r11634, %r11619;
	mov.u32 	%r11635, %r11619;
	mov.u32 	%r11636, %r11619;
	mov.u32 	%r11637, %r11619;
	mov.u32 	%r11638, %r11619;
	mov.u32 	%r11639, %r11619;
	mov.u32 	%r11640, %r11619;
	mov.u32 	%r11641, %r11619;
	mov.u32 	%r11642, %r11619;
	mov.u32 	%r11643, %r11619;
	mov.u32 	%r11644, %r11619;
	mov.u32 	%r11645, %r11619;
	mov.u32 	%r11646, %r11619;
	mov.u32 	%r11647, %r11619;
	mov.u32 	%r11648, %r11619;
	mov.u32 	%r11649, %r11619;
	mov.u32 	%r11650, %r11619;

BB0_91:
	ld.local.u32 	%r5393, [%rd9+64];
	or.b32  	%r5394, %r5393, %r11618;
	st.local.u32 	[%rd9+64], %r5394;
	ld.local.u32 	%r5395, [%rd9+68];
	ld.local.u32 	%r5396, [%rd1+4];
	or.b32  	%r5397, %r5395, %r5396;
	st.local.u32 	[%rd9+68], %r5397;
	ld.local.u32 	%r5398, [%rd9+72];
	ld.local.u32 	%r5399, [%rd1+8];
	or.b32  	%r5400, %r5398, %r5399;
	st.local.u32 	[%rd9+72], %r5400;
	ld.local.u32 	%r5401, [%rd9+76];
	ld.local.u32 	%r5402, [%rd1+12];
	or.b32  	%r5403, %r5401, %r5402;
	st.local.u32 	[%rd9+76], %r5403;
	ld.local.u32 	%r5404, [%rd9+80];
	ld.local.u32 	%r5405, [%rd2];
	or.b32  	%r5406, %r5404, %r5405;
	st.local.u32 	[%rd9+80], %r5406;
	ld.local.u32 	%r5407, [%rd9+84];
	ld.local.u32 	%r5408, [%rd2+4];
	or.b32  	%r5409, %r5407, %r5408;
	st.local.u32 	[%rd9+84], %r5409;
	ld.local.u32 	%r5410, [%rd9+88];
	ld.local.u32 	%r5411, [%rd2+8];
	or.b32  	%r5412, %r5410, %r5411;
	st.local.u32 	[%rd9+88], %r5412;
	ld.local.u32 	%r5413, [%rd9+92];
	ld.local.u32 	%r5414, [%rd2+12];
	or.b32  	%r5415, %r5413, %r5414;
	st.local.u32 	[%rd9+92], %r5415;
	ld.local.u32 	%r5416, [%rd9+96];
	ld.local.u32 	%r5417, [%rd3];
	or.b32  	%r5418, %r5416, %r5417;
	st.local.u32 	[%rd9+96], %r5418;
	ld.local.u32 	%r5419, [%rd9+100];
	ld.local.u32 	%r5420, [%rd3+4];
	or.b32  	%r5421, %r5419, %r5420;
	st.local.u32 	[%rd9+100], %r5421;
	ld.local.u32 	%r5422, [%rd9+104];
	ld.local.u32 	%r5423, [%rd3+8];
	or.b32  	%r5424, %r5422, %r5423;
	st.local.u32 	[%rd9+104], %r5424;
	ld.local.u32 	%r5425, [%rd9+108];
	ld.local.u32 	%r5426, [%rd3+12];
	or.b32  	%r5427, %r5425, %r5426;
	st.local.u32 	[%rd9+108], %r5427;
	ld.local.u32 	%r5428, [%rd9+112];
	ld.local.u32 	%r5429, [%rd4];
	or.b32  	%r5430, %r5428, %r5429;
	st.local.u32 	[%rd9+112], %r5430;
	ld.local.u32 	%r5431, [%rd9+116];
	ld.local.u32 	%r5432, [%rd4+4];
	or.b32  	%r5433, %r5431, %r5432;
	st.local.u32 	[%rd9+116], %r5433;
	ld.local.u32 	%r5434, [%rd9+120];
	ld.local.u32 	%r5435, [%rd4+8];
	or.b32  	%r5436, %r5434, %r5435;
	st.local.u32 	[%rd9+120], %r5436;
	ld.local.u32 	%r5437, [%rd9+124];
	ld.local.u32 	%r5438, [%rd4+12];
	or.b32  	%r5439, %r5437, %r5438;
	st.local.u32 	[%rd9+124], %r5439;
	ld.local.u32 	%r5440, [%rd9+128];
	ld.local.u32 	%r5441, [%rd5];
	or.b32  	%r5442, %r5440, %r5441;
	st.local.u32 	[%rd9+128], %r5442;
	ld.local.u32 	%r5443, [%rd9+132];
	ld.local.u32 	%r5444, [%rd5+4];
	or.b32  	%r5445, %r5443, %r5444;
	st.local.u32 	[%rd9+132], %r5445;
	ld.local.u32 	%r5446, [%rd9+136];
	ld.local.u32 	%r5447, [%rd5+8];
	or.b32  	%r5448, %r5446, %r5447;
	st.local.u32 	[%rd9+136], %r5448;
	ld.local.u32 	%r5449, [%rd9+140];
	ld.local.u32 	%r5450, [%rd5+12];
	or.b32  	%r5451, %r5449, %r5450;
	st.local.u32 	[%rd9+140], %r5451;
	ld.local.u32 	%r5452, [%rd9+144];
	ld.local.u32 	%r5453, [%rd6];
	or.b32  	%r5454, %r5452, %r5453;
	st.local.u32 	[%rd9+144], %r5454;
	ld.local.u32 	%r5455, [%rd9+148];
	ld.local.u32 	%r5456, [%rd6+4];
	or.b32  	%r5457, %r5455, %r5456;
	st.local.u32 	[%rd9+148], %r5457;
	ld.local.u32 	%r5458, [%rd9+152];
	ld.local.u32 	%r5459, [%rd6+8];
	or.b32  	%r5460, %r5458, %r5459;
	st.local.u32 	[%rd9+152], %r5460;
	ld.local.u32 	%r5461, [%rd9+156];
	ld.local.u32 	%r5462, [%rd6+12];
	or.b32  	%r5463, %r5461, %r5462;
	st.local.u32 	[%rd9+156], %r5463;
	ld.local.u32 	%r5464, [%rd9+160];
	ld.local.u32 	%r5465, [%rd7];
	or.b32  	%r5466, %r5464, %r5465;
	st.local.u32 	[%rd9+160], %r5466;
	ld.local.u32 	%r5467, [%rd9+164];
	ld.local.u32 	%r5468, [%rd7+4];
	or.b32  	%r5469, %r5467, %r5468;
	st.local.u32 	[%rd9+164], %r5469;
	ld.local.u32 	%r5470, [%rd9+168];
	ld.local.u32 	%r5471, [%rd7+8];
	or.b32  	%r5472, %r5470, %r5471;
	st.local.u32 	[%rd9+168], %r5472;
	ld.local.u32 	%r5473, [%rd9+172];
	ld.local.u32 	%r5474, [%rd7+12];
	or.b32  	%r5475, %r5473, %r5474;
	st.local.u32 	[%rd9+172], %r5475;
	ld.local.u32 	%r5476, [%rd9+176];
	ld.local.u32 	%r5477, [%rd8];
	or.b32  	%r5478, %r5476, %r5477;
	st.local.u32 	[%rd9+176], %r5478;
	ld.local.u32 	%r5479, [%rd9+180];
	ld.local.u32 	%r5480, [%rd8+4];
	or.b32  	%r5481, %r5479, %r5480;
	st.local.u32 	[%rd9+180], %r5481;
	ld.local.u32 	%r5482, [%rd9+184];
	ld.local.u32 	%r5483, [%rd8+8];
	or.b32  	%r5484, %r5482, %r5483;
	st.local.u32 	[%rd9+184], %r5484;
	ld.local.u32 	%r5485, [%rd9+188];
	ld.local.u32 	%r5486, [%rd8+12];
	mov.b64	%rd56, {%r5397, %r5394};
	mov.b64	%rd57, {%r5403, %r5400};
	mov.b64	%rd58, {%r5409, %r5406};
	mov.b64	%rd59, {%r5415, %r5412};
	mov.b64	%rd60, {%r5421, %r5418};
	mov.b64	%rd61, {%r5427, %r5424};
	mov.b64	%rd62, {%r5433, %r5430};
	mov.b64	%rd63, {%r5439, %r5436};
	mov.b64	%rd64, {%r5445, %r5442};
	mov.b64	%rd65, {%r5451, %r5448};
	mov.b64	%rd66, {%r5457, %r5454};
	mov.b64	%rd67, {%r5463, %r5460};
	mov.b64	%rd68, {%r5469, %r5466};
	mov.b64	%rd69, {%r5475, %r5472};
	mov.b64	%rd70, {%r5481, %r5478};
	or.b32  	%r5487, %r5485, %r5486;
	mov.b64	%rd71, {%r5487, %r5484};
	ld.local.u64 	%rd72, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd72;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd72;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 14;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 14;
	mov.b64 	%rd73, {%r5491, %r5490};
	shf.r.wrap.b32 	%r5492, %r5489, %r5488, 18;
	shf.r.wrap.b32 	%r5493, %r5488, %r5489, 18;
	mov.b64 	%rd74, {%r5493, %r5492};
	xor.b64  	%rd75, %rd73, %rd74;
	shf.l.wrap.b32 	%r5494, %r5488, %r5489, 23;
	shf.l.wrap.b32 	%r5495, %r5489, %r5488, 23;
	mov.b64 	%rd76, {%r5495, %r5494};
	xor.b64  	%rd77, %rd75, %rd76;
	ld.local.u64 	%rd78, [%rd9+48];
	ld.local.u64 	%rd79, [%rd9+40];
	xor.b64  	%rd80, %rd78, %rd79;
	and.b64  	%rd81, %rd80, %rd72;
	xor.b64  	%rd82, %rd81, %rd78;
	ld.local.u64 	%rd83, [%rd9+56];
	add.s64 	%rd84, %rd77, %rd83;
	add.s64 	%rd85, %rd84, %rd82;
	add.s64 	%rd86, %rd85, %rd56;
	ld.const.u64 	%rd87, [k_sha512];
	add.s64 	%rd88, %rd86, %rd87;
	ld.local.u64 	%rd89, [%rd9+24];
	add.s64 	%rd90, %rd88, %rd89;
	ld.local.u64 	%rd91, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5496,%dummy}, %rd91;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd91;
	}
	shf.r.wrap.b32 	%r5498, %r5497, %r5496, 28;
	shf.r.wrap.b32 	%r5499, %r5496, %r5497, 28;
	mov.b64 	%rd92, {%r5499, %r5498};
	shf.l.wrap.b32 	%r5500, %r5496, %r5497, 30;
	shf.l.wrap.b32 	%r5501, %r5497, %r5496, 30;
	mov.b64 	%rd93, {%r5501, %r5500};
	xor.b64  	%rd94, %rd92, %rd93;
	shf.l.wrap.b32 	%r5502, %r5496, %r5497, 25;
	shf.l.wrap.b32 	%r5503, %r5497, %r5496, 25;
	mov.b64 	%rd95, {%r5503, %r5502};
	xor.b64  	%rd96, %rd94, %rd95;
	ld.local.u64 	%rd97, [%rd9+8];
	and.b64  	%rd98, %rd97, %rd91;
	xor.b64  	%rd99, %rd97, %rd91;
	ld.local.u64 	%rd100, [%rd9+16];
	and.b64  	%rd101, %rd100, %rd99;
	or.b64  	%rd102, %rd101, %rd98;
	add.s64 	%rd103, %rd102, %rd96;
	add.s64 	%rd104, %rd103, %rd88;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5504,%dummy}, %rd90;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5505}, %rd90;
	}
	shf.r.wrap.b32 	%r5506, %r5505, %r5504, 14;
	shf.r.wrap.b32 	%r5507, %r5504, %r5505, 14;
	mov.b64 	%rd105, {%r5507, %r5506};
	shf.r.wrap.b32 	%r5508, %r5505, %r5504, 18;
	shf.r.wrap.b32 	%r5509, %r5504, %r5505, 18;
	mov.b64 	%rd106, {%r5509, %r5508};
	xor.b64  	%rd107, %rd105, %rd106;
	shf.l.wrap.b32 	%r5510, %r5504, %r5505, 23;
	shf.l.wrap.b32 	%r5511, %r5505, %r5504, 23;
	mov.b64 	%rd108, {%r5511, %r5510};
	xor.b64  	%rd109, %rd107, %rd108;
	xor.b64  	%rd110, %rd79, %rd72;
	and.b64  	%rd111, %rd90, %rd110;
	xor.b64  	%rd112, %rd111, %rd79;
	add.s64 	%rd113, %rd57, %rd78;
	ld.const.u64 	%rd114, [k_sha512+8];
	add.s64 	%rd115, %rd113, %rd114;
	add.s64 	%rd116, %rd115, %rd112;
	add.s64 	%rd117, %rd116, %rd109;
	add.s64 	%rd118, %rd117, %rd100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd104;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 28;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 28;
	mov.b64 	%rd119, {%r5515, %r5514};
	shf.l.wrap.b32 	%r5516, %r5512, %r5513, 30;
	shf.l.wrap.b32 	%r5517, %r5513, %r5512, 30;
	mov.b64 	%rd120, {%r5517, %r5516};
	xor.b64  	%rd121, %rd119, %rd120;
	shf.l.wrap.b32 	%r5518, %r5512, %r5513, 25;
	shf.l.wrap.b32 	%r5519, %r5513, %r5512, 25;
	mov.b64 	%rd122, {%r5519, %r5518};
	xor.b64  	%rd123, %rd121, %rd122;
	and.b64  	%rd124, %rd104, %rd91;
	xor.b64  	%rd125, %rd104, %rd91;
	and.b64  	%rd126, %rd125, %rd97;
	or.b64  	%rd127, %rd126, %rd124;
	add.s64 	%rd128, %rd123, %rd127;
	add.s64 	%rd129, %rd128, %rd117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5520,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5521}, %rd118;
	}
	shf.r.wrap.b32 	%r5522, %r5521, %r5520, 14;
	shf.r.wrap.b32 	%r5523, %r5520, %r5521, 14;
	mov.b64 	%rd130, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5521, %r5520, 18;
	shf.r.wrap.b32 	%r5525, %r5520, %r5521, 18;
	mov.b64 	%rd131, {%r5525, %r5524};
	xor.b64  	%rd132, %rd130, %rd131;
	shf.l.wrap.b32 	%r5526, %r5520, %r5521, 23;
	shf.l.wrap.b32 	%r5527, %r5521, %r5520, 23;
	mov.b64 	%rd133, {%r5527, %r5526};
	xor.b64  	%rd134, %rd132, %rd133;
	xor.b64  	%rd135, %rd90, %rd72;
	and.b64  	%rd136, %rd118, %rd135;
	xor.b64  	%rd137, %rd136, %rd72;
	add.s64 	%rd138, %rd58, %rd79;
	ld.const.u64 	%rd139, [k_sha512+16];
	add.s64 	%rd140, %rd138, %rd139;
	add.s64 	%rd141, %rd140, %rd137;
	add.s64 	%rd142, %rd141, %rd134;
	add.s64 	%rd143, %rd142, %rd97;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5528,%dummy}, %rd129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd129;
	}
	shf.r.wrap.b32 	%r5530, %r5529, %r5528, 28;
	shf.r.wrap.b32 	%r5531, %r5528, %r5529, 28;
	mov.b64 	%rd144, {%r5531, %r5530};
	shf.l.wrap.b32 	%r5532, %r5528, %r5529, 30;
	shf.l.wrap.b32 	%r5533, %r5529, %r5528, 30;
	mov.b64 	%rd145, {%r5533, %r5532};
	xor.b64  	%rd146, %rd144, %rd145;
	shf.l.wrap.b32 	%r5534, %r5528, %r5529, 25;
	shf.l.wrap.b32 	%r5535, %r5529, %r5528, 25;
	mov.b64 	%rd147, {%r5535, %r5534};
	xor.b64  	%rd148, %rd146, %rd147;
	and.b64  	%rd149, %rd129, %rd104;
	xor.b64  	%rd150, %rd129, %rd104;
	and.b64  	%rd151, %rd150, %rd91;
	or.b64  	%rd152, %rd151, %rd149;
	add.s64 	%rd153, %rd148, %rd152;
	add.s64 	%rd154, %rd153, %rd142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd143;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 14;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 14;
	mov.b64 	%rd155, {%r5539, %r5538};
	shf.r.wrap.b32 	%r5540, %r5537, %r5536, 18;
	shf.r.wrap.b32 	%r5541, %r5536, %r5537, 18;
	mov.b64 	%rd156, {%r5541, %r5540};
	xor.b64  	%rd157, %rd155, %rd156;
	shf.l.wrap.b32 	%r5542, %r5536, %r5537, 23;
	shf.l.wrap.b32 	%r5543, %r5537, %r5536, 23;
	mov.b64 	%rd158, {%r5543, %r5542};
	xor.b64  	%rd159, %rd157, %rd158;
	xor.b64  	%rd160, %rd118, %rd90;
	and.b64  	%rd161, %rd143, %rd160;
	xor.b64  	%rd162, %rd161, %rd90;
	add.s64 	%rd163, %rd59, %rd72;
	ld.const.u64 	%rd164, [k_sha512+24];
	add.s64 	%rd165, %rd163, %rd164;
	add.s64 	%rd166, %rd165, %rd162;
	add.s64 	%rd167, %rd166, %rd159;
	add.s64 	%rd168, %rd167, %rd91;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd154;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 28;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 28;
	mov.b64 	%rd169, {%r5547, %r5546};
	shf.l.wrap.b32 	%r5548, %r5544, %r5545, 30;
	shf.l.wrap.b32 	%r5549, %r5545, %r5544, 30;
	mov.b64 	%rd170, {%r5549, %r5548};
	xor.b64  	%rd171, %rd169, %rd170;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 25;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 25;
	mov.b64 	%rd172, {%r5551, %r5550};
	xor.b64  	%rd173, %rd171, %rd172;
	and.b64  	%rd174, %rd154, %rd129;
	xor.b64  	%rd175, %rd154, %rd129;
	and.b64  	%rd176, %rd175, %rd104;
	or.b64  	%rd177, %rd176, %rd174;
	add.s64 	%rd178, %rd173, %rd177;
	add.s64 	%rd179, %rd178, %rd167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd168;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 14;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 14;
	mov.b64 	%rd180, {%r5555, %r5554};
	shf.r.wrap.b32 	%r5556, %r5553, %r5552, 18;
	shf.r.wrap.b32 	%r5557, %r5552, %r5553, 18;
	mov.b64 	%rd181, {%r5557, %r5556};
	xor.b64  	%rd182, %rd180, %rd181;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 23;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 23;
	mov.b64 	%rd183, {%r5559, %r5558};
	xor.b64  	%rd184, %rd182, %rd183;
	xor.b64  	%rd185, %rd143, %rd118;
	and.b64  	%rd186, %rd168, %rd185;
	xor.b64  	%rd187, %rd186, %rd118;
	add.s64 	%rd188, %rd90, %rd60;
	ld.const.u64 	%rd189, [k_sha512+32];
	add.s64 	%rd190, %rd188, %rd189;
	add.s64 	%rd191, %rd190, %rd187;
	add.s64 	%rd192, %rd191, %rd184;
	add.s64 	%rd193, %rd192, %rd104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd179;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 28;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 28;
	mov.b64 	%rd194, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 30;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 30;
	mov.b64 	%rd195, {%r5565, %r5564};
	xor.b64  	%rd196, %rd194, %rd195;
	shf.l.wrap.b32 	%r5566, %r5560, %r5561, 25;
	shf.l.wrap.b32 	%r5567, %r5561, %r5560, 25;
	mov.b64 	%rd197, {%r5567, %r5566};
	xor.b64  	%rd198, %rd196, %rd197;
	and.b64  	%rd199, %rd179, %rd154;
	xor.b64  	%rd200, %rd179, %rd154;
	and.b64  	%rd201, %rd200, %rd129;
	or.b64  	%rd202, %rd201, %rd199;
	add.s64 	%rd203, %rd198, %rd202;
	add.s64 	%rd204, %rd203, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd193;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd205, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd206, {%r5573, %r5572};
	xor.b64  	%rd207, %rd205, %rd206;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd208, {%r5575, %r5574};
	xor.b64  	%rd209, %rd207, %rd208;
	xor.b64  	%rd210, %rd168, %rd143;
	and.b64  	%rd211, %rd193, %rd210;
	xor.b64  	%rd212, %rd211, %rd143;
	ld.const.u64 	%rd213, [k_sha512+40];
	add.s64 	%rd214, %rd213, %rd61;
	add.s64 	%rd215, %rd214, %rd118;
	add.s64 	%rd216, %rd215, %rd212;
	add.s64 	%rd217, %rd216, %rd209;
	add.s64 	%rd218, %rd217, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd204;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd219, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd220, {%r5581, %r5580};
	xor.b64  	%rd221, %rd219, %rd220;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd222, {%r5583, %r5582};
	xor.b64  	%rd223, %rd221, %rd222;
	and.b64  	%rd224, %rd204, %rd179;
	xor.b64  	%rd225, %rd204, %rd179;
	and.b64  	%rd226, %rd225, %rd154;
	or.b64  	%rd227, %rd226, %rd224;
	add.s64 	%rd228, %rd223, %rd227;
	add.s64 	%rd229, %rd228, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd218;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 14;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 14;
	mov.b64 	%rd230, {%r5587, %r5586};
	shf.r.wrap.b32 	%r5588, %r5585, %r5584, 18;
	shf.r.wrap.b32 	%r5589, %r5584, %r5585, 18;
	mov.b64 	%rd231, {%r5589, %r5588};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r5590, %r5584, %r5585, 23;
	shf.l.wrap.b32 	%r5591, %r5585, %r5584, 23;
	mov.b64 	%rd233, {%r5591, %r5590};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd193, %rd168;
	and.b64  	%rd236, %rd218, %rd235;
	xor.b64  	%rd237, %rd236, %rd168;
	ld.const.u64 	%rd238, [k_sha512+48];
	add.s64 	%rd239, %rd238, %rd62;
	add.s64 	%rd240, %rd239, %rd143;
	add.s64 	%rd241, %rd240, %rd237;
	add.s64 	%rd242, %rd241, %rd234;
	add.s64 	%rd243, %rd242, %rd154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5592,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd229;
	}
	shf.r.wrap.b32 	%r5594, %r5593, %r5592, 28;
	shf.r.wrap.b32 	%r5595, %r5592, %r5593, 28;
	mov.b64 	%rd244, {%r5595, %r5594};
	shf.l.wrap.b32 	%r5596, %r5592, %r5593, 30;
	shf.l.wrap.b32 	%r5597, %r5593, %r5592, 30;
	mov.b64 	%rd245, {%r5597, %r5596};
	xor.b64  	%rd246, %rd244, %rd245;
	shf.l.wrap.b32 	%r5598, %r5592, %r5593, 25;
	shf.l.wrap.b32 	%r5599, %r5593, %r5592, 25;
	mov.b64 	%rd247, {%r5599, %r5598};
	xor.b64  	%rd248, %rd246, %rd247;
	and.b64  	%rd249, %rd229, %rd204;
	xor.b64  	%rd250, %rd229, %rd204;
	and.b64  	%rd251, %rd250, %rd179;
	or.b64  	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd248, %rd252;
	add.s64 	%rd254, %rd253, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5600,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd243;
	}
	shf.r.wrap.b32 	%r5602, %r5601, %r5600, 14;
	shf.r.wrap.b32 	%r5603, %r5600, %r5601, 14;
	mov.b64 	%rd255, {%r5603, %r5602};
	shf.r.wrap.b32 	%r5604, %r5601, %r5600, 18;
	shf.r.wrap.b32 	%r5605, %r5600, %r5601, 18;
	mov.b64 	%rd256, {%r5605, %r5604};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r5606, %r5600, %r5601, 23;
	shf.l.wrap.b32 	%r5607, %r5601, %r5600, 23;
	mov.b64 	%rd258, {%r5607, %r5606};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd218, %rd193;
	and.b64  	%rd261, %rd243, %rd260;
	xor.b64  	%rd262, %rd261, %rd193;
	ld.const.u64 	%rd263, [k_sha512+56];
	add.s64 	%rd264, %rd263, %rd63;
	add.s64 	%rd265, %rd264, %rd168;
	add.s64 	%rd266, %rd265, %rd262;
	add.s64 	%rd267, %rd266, %rd259;
	add.s64 	%rd268, %rd267, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd254;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 28;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 28;
	mov.b64 	%rd269, {%r5611, %r5610};
	shf.l.wrap.b32 	%r5612, %r5608, %r5609, 30;
	shf.l.wrap.b32 	%r5613, %r5609, %r5608, 30;
	mov.b64 	%rd270, {%r5613, %r5612};
	xor.b64  	%rd271, %rd269, %rd270;
	shf.l.wrap.b32 	%r5614, %r5608, %r5609, 25;
	shf.l.wrap.b32 	%r5615, %r5609, %r5608, 25;
	mov.b64 	%rd272, {%r5615, %r5614};
	xor.b64  	%rd273, %rd271, %rd272;
	and.b64  	%rd274, %rd254, %rd229;
	xor.b64  	%rd275, %rd254, %rd229;
	and.b64  	%rd276, %rd275, %rd204;
	or.b64  	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd273, %rd277;
	add.s64 	%rd279, %rd278, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5616,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd268;
	}
	shf.r.wrap.b32 	%r5618, %r5617, %r5616, 14;
	shf.r.wrap.b32 	%r5619, %r5616, %r5617, 14;
	mov.b64 	%rd280, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5617, %r5616, 18;
	shf.r.wrap.b32 	%r5621, %r5616, %r5617, 18;
	mov.b64 	%rd281, {%r5621, %r5620};
	xor.b64  	%rd282, %rd280, %rd281;
	shf.l.wrap.b32 	%r5622, %r5616, %r5617, 23;
	shf.l.wrap.b32 	%r5623, %r5617, %r5616, 23;
	mov.b64 	%rd283, {%r5623, %r5622};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd243, %rd218;
	and.b64  	%rd286, %rd268, %rd285;
	xor.b64  	%rd287, %rd286, %rd218;
	ld.const.u64 	%rd288, [k_sha512+64];
	add.s64 	%rd289, %rd288, %rd64;
	add.s64 	%rd290, %rd289, %rd193;
	add.s64 	%rd291, %rd290, %rd287;
	add.s64 	%rd292, %rd291, %rd284;
	add.s64 	%rd293, %rd292, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd279;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 28;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 28;
	mov.b64 	%rd294, {%r5627, %r5626};
	shf.l.wrap.b32 	%r5628, %r5624, %r5625, 30;
	shf.l.wrap.b32 	%r5629, %r5625, %r5624, 30;
	mov.b64 	%rd295, {%r5629, %r5628};
	xor.b64  	%rd296, %rd294, %rd295;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 25;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 25;
	mov.b64 	%rd297, {%r5631, %r5630};
	xor.b64  	%rd298, %rd296, %rd297;
	and.b64  	%rd299, %rd279, %rd254;
	xor.b64  	%rd300, %rd279, %rd254;
	and.b64  	%rd301, %rd300, %rd229;
	or.b64  	%rd302, %rd301, %rd299;
	add.s64 	%rd303, %rd298, %rd302;
	add.s64 	%rd304, %rd303, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd293;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 14;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 14;
	mov.b64 	%rd305, {%r5635, %r5634};
	shf.r.wrap.b32 	%r5636, %r5633, %r5632, 18;
	shf.r.wrap.b32 	%r5637, %r5632, %r5633, 18;
	mov.b64 	%rd306, {%r5637, %r5636};
	xor.b64  	%rd307, %rd305, %rd306;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 23;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 23;
	mov.b64 	%rd308, {%r5639, %r5638};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd268, %rd243;
	and.b64  	%rd311, %rd293, %rd310;
	xor.b64  	%rd312, %rd311, %rd243;
	ld.const.u64 	%rd313, [k_sha512+72];
	add.s64 	%rd314, %rd313, %rd65;
	add.s64 	%rd315, %rd314, %rd218;
	add.s64 	%rd316, %rd315, %rd312;
	add.s64 	%rd317, %rd316, %rd309;
	add.s64 	%rd318, %rd317, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd304;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 28;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 28;
	mov.b64 	%rd319, {%r5643, %r5642};
	shf.l.wrap.b32 	%r5644, %r5640, %r5641, 30;
	shf.l.wrap.b32 	%r5645, %r5641, %r5640, 30;
	mov.b64 	%rd320, {%r5645, %r5644};
	xor.b64  	%rd321, %rd319, %rd320;
	shf.l.wrap.b32 	%r5646, %r5640, %r5641, 25;
	shf.l.wrap.b32 	%r5647, %r5641, %r5640, 25;
	mov.b64 	%rd322, {%r5647, %r5646};
	xor.b64  	%rd323, %rd321, %rd322;
	and.b64  	%rd324, %rd304, %rd279;
	xor.b64  	%rd325, %rd304, %rd279;
	and.b64  	%rd326, %rd325, %rd254;
	or.b64  	%rd327, %rd326, %rd324;
	add.s64 	%rd328, %rd323, %rd327;
	add.s64 	%rd329, %rd328, %rd317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd318;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd330, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd331, {%r5653, %r5652};
	xor.b64  	%rd332, %rd330, %rd331;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd333, {%r5655, %r5654};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd293, %rd268;
	and.b64  	%rd336, %rd318, %rd335;
	xor.b64  	%rd337, %rd336, %rd268;
	ld.const.u64 	%rd338, [k_sha512+80];
	add.s64 	%rd339, %rd338, %rd66;
	add.s64 	%rd340, %rd339, %rd243;
	add.s64 	%rd341, %rd340, %rd337;
	add.s64 	%rd342, %rd341, %rd334;
	add.s64 	%rd343, %rd342, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd329;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd344, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd345, {%r5661, %r5660};
	xor.b64  	%rd346, %rd344, %rd345;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd347, {%r5663, %r5662};
	xor.b64  	%rd348, %rd346, %rd347;
	and.b64  	%rd349, %rd329, %rd304;
	xor.b64  	%rd350, %rd329, %rd304;
	and.b64  	%rd351, %rd350, %rd279;
	or.b64  	%rd352, %rd351, %rd349;
	add.s64 	%rd353, %rd348, %rd352;
	add.s64 	%rd354, %rd353, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd343;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 14;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 14;
	mov.b64 	%rd355, {%r5667, %r5666};
	shf.r.wrap.b32 	%r5668, %r5665, %r5664, 18;
	shf.r.wrap.b32 	%r5669, %r5664, %r5665, 18;
	mov.b64 	%rd356, {%r5669, %r5668};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 23;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 23;
	mov.b64 	%rd358, {%r5671, %r5670};
	xor.b64  	%rd359, %rd357, %rd358;
	xor.b64  	%rd360, %rd318, %rd293;
	and.b64  	%rd361, %rd343, %rd360;
	xor.b64  	%rd362, %rd361, %rd293;
	ld.const.u64 	%rd363, [k_sha512+88];
	add.s64 	%rd364, %rd363, %rd67;
	add.s64 	%rd365, %rd364, %rd268;
	add.s64 	%rd366, %rd365, %rd362;
	add.s64 	%rd367, %rd366, %rd359;
	add.s64 	%rd368, %rd367, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd354;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 28;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 28;
	mov.b64 	%rd369, {%r5675, %r5674};
	shf.l.wrap.b32 	%r5676, %r5672, %r5673, 30;
	shf.l.wrap.b32 	%r5677, %r5673, %r5672, 30;
	mov.b64 	%rd370, {%r5677, %r5676};
	xor.b64  	%rd371, %rd369, %rd370;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 25;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 25;
	mov.b64 	%rd372, {%r5679, %r5678};
	xor.b64  	%rd373, %rd371, %rd372;
	and.b64  	%rd374, %rd354, %rd329;
	xor.b64  	%rd375, %rd354, %rd329;
	and.b64  	%rd376, %rd375, %rd304;
	or.b64  	%rd377, %rd376, %rd374;
	add.s64 	%rd378, %rd373, %rd377;
	add.s64 	%rd379, %rd378, %rd367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd368;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 14;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 14;
	mov.b64 	%rd380, {%r5683, %r5682};
	shf.r.wrap.b32 	%r5684, %r5681, %r5680, 18;
	shf.r.wrap.b32 	%r5685, %r5680, %r5681, 18;
	mov.b64 	%rd381, {%r5685, %r5684};
	xor.b64  	%rd382, %rd380, %rd381;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 23;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 23;
	mov.b64 	%rd383, {%r5687, %r5686};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd343, %rd318;
	and.b64  	%rd386, %rd368, %rd385;
	xor.b64  	%rd387, %rd386, %rd318;
	ld.const.u64 	%rd388, [k_sha512+96];
	add.s64 	%rd389, %rd388, %rd68;
	add.s64 	%rd390, %rd389, %rd293;
	add.s64 	%rd391, %rd390, %rd387;
	add.s64 	%rd392, %rd391, %rd384;
	add.s64 	%rd393, %rd392, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd379;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 28;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 28;
	mov.b64 	%rd394, {%r5691, %r5690};
	shf.l.wrap.b32 	%r5692, %r5688, %r5689, 30;
	shf.l.wrap.b32 	%r5693, %r5689, %r5688, 30;
	mov.b64 	%rd395, {%r5693, %r5692};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 25;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 25;
	mov.b64 	%rd397, {%r5695, %r5694};
	xor.b64  	%rd398, %rd396, %rd397;
	and.b64  	%rd399, %rd379, %rd354;
	xor.b64  	%rd400, %rd379, %rd354;
	and.b64  	%rd401, %rd400, %rd329;
	or.b64  	%rd402, %rd401, %rd399;
	add.s64 	%rd403, %rd398, %rd402;
	add.s64 	%rd404, %rd403, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd393;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 14;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 14;
	mov.b64 	%rd405, {%r5699, %r5698};
	shf.r.wrap.b32 	%r5700, %r5697, %r5696, 18;
	shf.r.wrap.b32 	%r5701, %r5696, %r5697, 18;
	mov.b64 	%rd406, {%r5701, %r5700};
	xor.b64  	%rd407, %rd405, %rd406;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 23;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 23;
	mov.b64 	%rd408, {%r5703, %r5702};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd368, %rd343;
	and.b64  	%rd411, %rd393, %rd410;
	xor.b64  	%rd412, %rd411, %rd343;
	ld.const.u64 	%rd413, [k_sha512+104];
	add.s64 	%rd414, %rd413, %rd69;
	add.s64 	%rd415, %rd414, %rd318;
	add.s64 	%rd416, %rd415, %rd412;
	add.s64 	%rd417, %rd416, %rd409;
	add.s64 	%rd418, %rd417, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd404;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 28;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 28;
	mov.b64 	%rd419, {%r5707, %r5706};
	shf.l.wrap.b32 	%r5708, %r5704, %r5705, 30;
	shf.l.wrap.b32 	%r5709, %r5705, %r5704, 30;
	mov.b64 	%rd420, {%r5709, %r5708};
	xor.b64  	%rd421, %rd419, %rd420;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 25;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 25;
	mov.b64 	%rd422, {%r5711, %r5710};
	xor.b64  	%rd423, %rd421, %rd422;
	and.b64  	%rd424, %rd404, %rd379;
	xor.b64  	%rd425, %rd404, %rd379;
	and.b64  	%rd426, %rd425, %rd354;
	or.b64  	%rd427, %rd426, %rd424;
	add.s64 	%rd428, %rd423, %rd427;
	add.s64 	%rd429, %rd428, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd418;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 14;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 14;
	mov.b64 	%rd430, {%r5715, %r5714};
	shf.r.wrap.b32 	%r5716, %r5713, %r5712, 18;
	shf.r.wrap.b32 	%r5717, %r5712, %r5713, 18;
	mov.b64 	%rd431, {%r5717, %r5716};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 23;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 23;
	mov.b64 	%rd433, {%r5719, %r5718};
	xor.b64  	%rd434, %rd432, %rd433;
	xor.b64  	%rd435, %rd393, %rd368;
	and.b64  	%rd436, %rd418, %rd435;
	xor.b64  	%rd437, %rd436, %rd368;
	ld.const.u64 	%rd438, [k_sha512+112];
	add.s64 	%rd439, %rd438, %rd70;
	add.s64 	%rd440, %rd439, %rd343;
	add.s64 	%rd441, %rd440, %rd437;
	add.s64 	%rd442, %rd441, %rd434;
	add.s64 	%rd443, %rd442, %rd354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd429;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 28;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 28;
	mov.b64 	%rd444, {%r5723, %r5722};
	shf.l.wrap.b32 	%r5724, %r5720, %r5721, 30;
	shf.l.wrap.b32 	%r5725, %r5721, %r5720, 30;
	mov.b64 	%rd445, {%r5725, %r5724};
	xor.b64  	%rd446, %rd444, %rd445;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 25;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 25;
	mov.b64 	%rd447, {%r5727, %r5726};
	xor.b64  	%rd448, %rd446, %rd447;
	and.b64  	%rd449, %rd429, %rd404;
	xor.b64  	%rd450, %rd429, %rd404;
	and.b64  	%rd451, %rd450, %rd379;
	or.b64  	%rd452, %rd451, %rd449;
	add.s64 	%rd453, %rd448, %rd452;
	add.s64 	%rd454, %rd453, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd443;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 14;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 14;
	mov.b64 	%rd455, {%r5731, %r5730};
	shf.r.wrap.b32 	%r5732, %r5729, %r5728, 18;
	shf.r.wrap.b32 	%r5733, %r5728, %r5729, 18;
	mov.b64 	%rd456, {%r5733, %r5732};
	xor.b64  	%rd457, %rd455, %rd456;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 23;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 23;
	mov.b64 	%rd458, {%r5735, %r5734};
	xor.b64  	%rd459, %rd457, %rd458;
	xor.b64  	%rd460, %rd418, %rd393;
	and.b64  	%rd461, %rd443, %rd460;
	xor.b64  	%rd462, %rd461, %rd393;
	ld.const.u64 	%rd463, [k_sha512+120];
	add.s64 	%rd464, %rd463, %rd71;
	add.s64 	%rd465, %rd464, %rd368;
	add.s64 	%rd466, %rd465, %rd462;
	add.s64 	%rd467, %rd466, %rd459;
	add.s64 	%rd468, %rd467, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd454;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 28;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 28;
	mov.b64 	%rd469, {%r5739, %r5738};
	shf.l.wrap.b32 	%r5740, %r5736, %r5737, 30;
	shf.l.wrap.b32 	%r5741, %r5737, %r5736, 30;
	mov.b64 	%rd470, {%r5741, %r5740};
	xor.b64  	%rd471, %rd469, %rd470;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 25;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 25;
	mov.b64 	%rd472, {%r5743, %r5742};
	xor.b64  	%rd473, %rd471, %rd472;
	and.b64  	%rd474, %rd454, %rd429;
	xor.b64  	%rd475, %rd454, %rd429;
	and.b64  	%rd476, %rd475, %rd404;
	or.b64  	%rd477, %rd476, %rd474;
	add.s64 	%rd478, %rd473, %rd477;
	add.s64 	%rd479, %rd478, %rd467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd70;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd70;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 19;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 19;
	mov.b64 	%rd480, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 3;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 3;
	mov.b64 	%rd481, {%r5749, %r5748};
	shr.u64 	%rd482, %rd70, 6;
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd483, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd57;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 1;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 1;
	mov.b64 	%rd485, {%r5753, %r5752};
	shf.r.wrap.b32 	%r5754, %r5751, %r5750, 8;
	shf.r.wrap.b32 	%r5755, %r5750, %r5751, 8;
	mov.b64 	%rd486, {%r5755, %r5754};
	shr.u64 	%rd487, %rd57, 7;
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd488, %rd485;
	add.s64 	%rd490, %rd489, %rd56;
	add.s64 	%rd491, %rd490, %rd65;
	add.s64 	%rd492, %rd491, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd71;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd71;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 19;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 19;
	mov.b64 	%rd493, {%r5759, %r5758};
	shf.l.wrap.b32 	%r5760, %r5756, %r5757, 3;
	shf.l.wrap.b32 	%r5761, %r5757, %r5756, 3;
	mov.b64 	%rd494, {%r5761, %r5760};
	shr.u64 	%rd495, %rd71, 6;
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd496, %rd493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd58;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 1;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 1;
	mov.b64 	%rd498, {%r5765, %r5764};
	shf.r.wrap.b32 	%r5766, %r5763, %r5762, 8;
	shf.r.wrap.b32 	%r5767, %r5762, %r5763, 8;
	mov.b64 	%rd499, {%r5767, %r5766};
	shr.u64 	%rd500, %rd58, 7;
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd501, %rd498;
	add.s64 	%rd503, %rd502, %rd57;
	add.s64 	%rd504, %rd503, %rd66;
	add.s64 	%rd505, %rd504, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd492;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd506, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd507, {%r5773, %r5772};
	shr.u64 	%rd508, %rd492, 6;
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd509, %rd506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd59;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 1;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 1;
	mov.b64 	%rd511, {%r5777, %r5776};
	shf.r.wrap.b32 	%r5778, %r5775, %r5774, 8;
	shf.r.wrap.b32 	%r5779, %r5774, %r5775, 8;
	mov.b64 	%rd512, {%r5779, %r5778};
	shr.u64 	%rd513, %rd59, 7;
	xor.b64  	%rd514, %rd512, %rd513;
	xor.b64  	%rd515, %rd514, %rd511;
	add.s64 	%rd516, %rd515, %rd58;
	add.s64 	%rd517, %rd516, %rd67;
	add.s64 	%rd518, %rd517, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd505;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 19;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 19;
	mov.b64 	%rd519, {%r5783, %r5782};
	shf.l.wrap.b32 	%r5784, %r5780, %r5781, 3;
	shf.l.wrap.b32 	%r5785, %r5781, %r5780, 3;
	mov.b64 	%rd520, {%r5785, %r5784};
	shr.u64 	%rd521, %rd505, 6;
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd522, %rd519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd60;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 1;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 1;
	mov.b64 	%rd524, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 8;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 8;
	mov.b64 	%rd525, {%r5791, %r5790};
	shr.u64 	%rd526, %rd60, 7;
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd527, %rd524;
	add.s64 	%rd529, %rd528, %rd59;
	add.s64 	%rd530, %rd529, %rd68;
	add.s64 	%rd531, %rd530, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd518;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 19;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 19;
	mov.b64 	%rd532, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 3;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 3;
	mov.b64 	%rd533, {%r5797, %r5796};
	shr.u64 	%rd534, %rd518, 6;
	xor.b64  	%rd535, %rd533, %rd534;
	xor.b64  	%rd536, %rd535, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd61;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd61;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 1;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 1;
	mov.b64 	%rd537, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5799, %r5798, 8;
	shf.r.wrap.b32 	%r5803, %r5798, %r5799, 8;
	mov.b64 	%rd538, {%r5803, %r5802};
	shr.u64 	%rd539, %rd61, 7;
	xor.b64  	%rd540, %rd538, %rd539;
	xor.b64  	%rd541, %rd540, %rd537;
	add.s64 	%rd542, %rd541, %rd60;
	add.s64 	%rd543, %rd542, %rd69;
	add.s64 	%rd544, %rd543, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd531;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 19;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 19;
	mov.b64 	%rd545, {%r5807, %r5806};
	shf.l.wrap.b32 	%r5808, %r5804, %r5805, 3;
	shf.l.wrap.b32 	%r5809, %r5805, %r5804, 3;
	mov.b64 	%rd546, {%r5809, %r5808};
	shr.u64 	%rd547, %rd531, 6;
	xor.b64  	%rd548, %rd546, %rd547;
	xor.b64  	%rd549, %rd548, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd62;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 1;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 1;
	mov.b64 	%rd550, {%r5813, %r5812};
	shf.r.wrap.b32 	%r5814, %r5811, %r5810, 8;
	shf.r.wrap.b32 	%r5815, %r5810, %r5811, 8;
	mov.b64 	%rd551, {%r5815, %r5814};
	shr.u64 	%rd552, %rd62, 7;
	xor.b64  	%rd553, %rd551, %rd552;
	xor.b64  	%rd554, %rd553, %rd550;
	add.s64 	%rd555, %rd554, %rd61;
	add.s64 	%rd556, %rd555, %rd70;
	add.s64 	%rd557, %rd556, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd544;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 19;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 19;
	mov.b64 	%rd558, {%r5819, %r5818};
	shf.l.wrap.b32 	%r5820, %r5816, %r5817, 3;
	shf.l.wrap.b32 	%r5821, %r5817, %r5816, 3;
	mov.b64 	%rd559, {%r5821, %r5820};
	shr.u64 	%rd560, %rd544, 6;
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd561, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd63;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 1;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 1;
	mov.b64 	%rd563, {%r5825, %r5824};
	shf.r.wrap.b32 	%r5826, %r5823, %r5822, 8;
	shf.r.wrap.b32 	%r5827, %r5822, %r5823, 8;
	mov.b64 	%rd564, {%r5827, %r5826};
	shr.u64 	%rd565, %rd63, 7;
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd566, %rd563;
	add.s64 	%rd568, %rd567, %rd62;
	add.s64 	%rd569, %rd568, %rd71;
	add.s64 	%rd570, %rd569, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd557;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 19;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 19;
	mov.b64 	%rd571, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 3;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 3;
	mov.b64 	%rd572, {%r5833, %r5832};
	shr.u64 	%rd573, %rd557, 6;
	xor.b64  	%rd574, %rd572, %rd573;
	xor.b64  	%rd575, %rd574, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd64;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd64;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 1;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 1;
	mov.b64 	%rd576, {%r5837, %r5836};
	shf.r.wrap.b32 	%r5838, %r5835, %r5834, 8;
	shf.r.wrap.b32 	%r5839, %r5834, %r5835, 8;
	mov.b64 	%rd577, {%r5839, %r5838};
	shr.u64 	%rd578, %rd64, 7;
	xor.b64  	%rd579, %rd577, %rd578;
	xor.b64  	%rd580, %rd579, %rd576;
	add.s64 	%rd581, %rd580, %rd63;
	add.s64 	%rd582, %rd581, %rd492;
	add.s64 	%rd583, %rd582, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd570;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 19;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 19;
	mov.b64 	%rd584, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 3;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 3;
	mov.b64 	%rd585, {%r5845, %r5844};
	shr.u64 	%rd586, %rd570, 6;
	xor.b64  	%rd587, %rd585, %rd586;
	xor.b64  	%rd588, %rd587, %rd584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd65;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd65;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 1;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 1;
	mov.b64 	%rd589, {%r5849, %r5848};
	shf.r.wrap.b32 	%r5850, %r5847, %r5846, 8;
	shf.r.wrap.b32 	%r5851, %r5846, %r5847, 8;
	mov.b64 	%rd590, {%r5851, %r5850};
	shr.u64 	%rd591, %rd65, 7;
	xor.b64  	%rd592, %rd590, %rd591;
	xor.b64  	%rd593, %rd592, %rd589;
	add.s64 	%rd594, %rd593, %rd64;
	add.s64 	%rd595, %rd594, %rd505;
	add.s64 	%rd596, %rd595, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd583;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 19;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 19;
	mov.b64 	%rd597, {%r5855, %r5854};
	shf.l.wrap.b32 	%r5856, %r5852, %r5853, 3;
	shf.l.wrap.b32 	%r5857, %r5853, %r5852, 3;
	mov.b64 	%rd598, {%r5857, %r5856};
	shr.u64 	%rd599, %rd583, 6;
	xor.b64  	%rd600, %rd598, %rd599;
	xor.b64  	%rd601, %rd600, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd66;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 1;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 1;
	mov.b64 	%rd602, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5859, %r5858, 8;
	shf.r.wrap.b32 	%r5863, %r5858, %r5859, 8;
	mov.b64 	%rd603, {%r5863, %r5862};
	shr.u64 	%rd604, %rd66, 7;
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd605, %rd602;
	add.s64 	%rd607, %rd606, %rd65;
	add.s64 	%rd608, %rd607, %rd518;
	add.s64 	%rd609, %rd608, %rd601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd596;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 19;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 19;
	mov.b64 	%rd610, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 3;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 3;
	mov.b64 	%rd611, {%r5869, %r5868};
	shr.u64 	%rd612, %rd596, 6;
	xor.b64  	%rd613, %rd611, %rd612;
	xor.b64  	%rd614, %rd613, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd67;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd67;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 1;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 1;
	mov.b64 	%rd615, {%r5873, %r5872};
	shf.r.wrap.b32 	%r5874, %r5871, %r5870, 8;
	shf.r.wrap.b32 	%r5875, %r5870, %r5871, 8;
	mov.b64 	%rd616, {%r5875, %r5874};
	shr.u64 	%rd617, %rd67, 7;
	xor.b64  	%rd618, %rd616, %rd617;
	xor.b64  	%rd619, %rd618, %rd615;
	add.s64 	%rd620, %rd619, %rd66;
	add.s64 	%rd621, %rd620, %rd531;
	add.s64 	%rd622, %rd621, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd609;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 19;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 19;
	mov.b64 	%rd623, {%r5879, %r5878};
	shf.l.wrap.b32 	%r5880, %r5876, %r5877, 3;
	shf.l.wrap.b32 	%r5881, %r5877, %r5876, 3;
	mov.b64 	%rd624, {%r5881, %r5880};
	shr.u64 	%rd625, %rd609, 6;
	xor.b64  	%rd626, %rd624, %rd625;
	xor.b64  	%rd627, %rd626, %rd623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd68;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd68;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 1;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 1;
	mov.b64 	%rd628, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 8;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 8;
	mov.b64 	%rd629, {%r5887, %r5886};
	shr.u64 	%rd630, %rd68, 7;
	xor.b64  	%rd631, %rd629, %rd630;
	xor.b64  	%rd632, %rd631, %rd628;
	add.s64 	%rd633, %rd632, %rd67;
	add.s64 	%rd634, %rd633, %rd544;
	add.s64 	%rd635, %rd634, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd622;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 19;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 19;
	mov.b64 	%rd636, {%r5891, %r5890};
	shf.l.wrap.b32 	%r5892, %r5888, %r5889, 3;
	shf.l.wrap.b32 	%r5893, %r5889, %r5888, 3;
	mov.b64 	%rd637, {%r5893, %r5892};
	shr.u64 	%rd638, %rd622, 6;
	xor.b64  	%rd639, %rd637, %rd638;
	xor.b64  	%rd640, %rd639, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd69;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5895}, %rd69;
	}
	shf.r.wrap.b32 	%r5896, %r5895, %r5894, 1;
	shf.r.wrap.b32 	%r5897, %r5894, %r5895, 1;
	mov.b64 	%rd641, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5895, %r5894, 8;
	shf.r.wrap.b32 	%r5899, %r5894, %r5895, 8;
	mov.b64 	%rd642, {%r5899, %r5898};
	shr.u64 	%rd643, %rd69, 7;
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd644, %rd641;
	add.s64 	%rd646, %rd645, %rd68;
	add.s64 	%rd647, %rd646, %rd557;
	add.s64 	%rd648, %rd647, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd635;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 19;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 19;
	mov.b64 	%rd649, {%r5903, %r5902};
	shf.l.wrap.b32 	%r5904, %r5900, %r5901, 3;
	shf.l.wrap.b32 	%r5905, %r5901, %r5900, 3;
	mov.b64 	%rd650, {%r5905, %r5904};
	shr.u64 	%rd651, %rd635, 6;
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd652, %rd649;
	shf.r.wrap.b32 	%r5906, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5907, %r5744, %r5745, 1;
	mov.b64 	%rd654, {%r5907, %r5906};
	shf.r.wrap.b32 	%r5908, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5909, %r5744, %r5745, 8;
	mov.b64 	%rd655, {%r5909, %r5908};
	shr.u64 	%rd656, %rd70, 7;
	xor.b64  	%rd657, %rd655, %rd656;
	xor.b64  	%rd658, %rd657, %rd654;
	add.s64 	%rd659, %rd658, %rd69;
	add.s64 	%rd660, %rd659, %rd570;
	add.s64 	%rd661, %rd660, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd648;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 19;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 19;
	mov.b64 	%rd662, {%r5913, %r5912};
	shf.l.wrap.b32 	%r5914, %r5910, %r5911, 3;
	shf.l.wrap.b32 	%r5915, %r5911, %r5910, 3;
	mov.b64 	%rd663, {%r5915, %r5914};
	shr.u64 	%rd664, %rd648, 6;
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd665, %rd662;
	shf.r.wrap.b32 	%r5916, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5917, %r5756, %r5757, 1;
	mov.b64 	%rd667, {%r5917, %r5916};
	shf.r.wrap.b32 	%r5918, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5919, %r5756, %r5757, 8;
	mov.b64 	%rd668, {%r5919, %r5918};
	shr.u64 	%rd669, %rd71, 7;
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd670, %rd667;
	add.s64 	%rd672, %rd671, %rd70;
	add.s64 	%rd673, %rd672, %rd583;
	add.s64 	%rd674, %rd673, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5920,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd661;
	}
	shf.r.wrap.b32 	%r5922, %r5921, %r5920, 19;
	shf.r.wrap.b32 	%r5923, %r5920, %r5921, 19;
	mov.b64 	%rd675, {%r5923, %r5922};
	shf.l.wrap.b32 	%r5924, %r5920, %r5921, 3;
	shf.l.wrap.b32 	%r5925, %r5921, %r5920, 3;
	mov.b64 	%rd676, {%r5925, %r5924};
	shr.u64 	%rd677, %rd661, 6;
	xor.b64  	%rd678, %rd676, %rd677;
	xor.b64  	%rd679, %rd678, %rd675;
	shf.r.wrap.b32 	%r5926, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5927, %r5768, %r5769, 1;
	mov.b64 	%rd680, {%r5927, %r5926};
	shf.r.wrap.b32 	%r5928, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5929, %r5768, %r5769, 8;
	mov.b64 	%rd681, {%r5929, %r5928};
	shr.u64 	%rd682, %rd492, 7;
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd683, %rd680;
	add.s64 	%rd685, %rd684, %rd71;
	add.s64 	%rd686, %rd685, %rd596;
	add.s64 	%rd687, %rd686, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd468;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 14;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 14;
	mov.b64 	%rd688, {%r5933, %r5932};
	shf.r.wrap.b32 	%r5934, %r5931, %r5930, 18;
	shf.r.wrap.b32 	%r5935, %r5930, %r5931, 18;
	mov.b64 	%rd689, {%r5935, %r5934};
	xor.b64  	%rd690, %rd688, %rd689;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 23;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 23;
	mov.b64 	%rd691, {%r5937, %r5936};
	xor.b64  	%rd692, %rd690, %rd691;
	xor.b64  	%rd693, %rd443, %rd418;
	and.b64  	%rd694, %rd468, %rd693;
	xor.b64  	%rd695, %rd694, %rd418;
	add.s64 	%rd696, %rd695, %rd393;
	add.s64 	%rd697, %rd696, %rd692;
	add.s64 	%rd698, %rd697, %rd492;
	ld.const.u64 	%rd699, [k_sha512+128];
	add.s64 	%rd700, %rd698, %rd699;
	add.s64 	%rd701, %rd700, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5939}, %rd479;
	}
	shf.r.wrap.b32 	%r5940, %r5939, %r5938, 28;
	shf.r.wrap.b32 	%r5941, %r5938, %r5939, 28;
	mov.b64 	%rd702, {%r5941, %r5940};
	shf.l.wrap.b32 	%r5942, %r5938, %r5939, 30;
	shf.l.wrap.b32 	%r5943, %r5939, %r5938, 30;
	mov.b64 	%rd703, {%r5943, %r5942};
	xor.b64  	%rd704, %rd702, %rd703;
	shf.l.wrap.b32 	%r5944, %r5938, %r5939, 25;
	shf.l.wrap.b32 	%r5945, %r5939, %r5938, 25;
	mov.b64 	%rd705, {%r5945, %r5944};
	xor.b64  	%rd706, %rd704, %rd705;
	and.b64  	%rd707, %rd479, %rd454;
	xor.b64  	%rd708, %rd479, %rd454;
	and.b64  	%rd709, %rd708, %rd429;
	or.b64  	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd706, %rd710;
	add.s64 	%rd712, %rd711, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5947}, %rd701;
	}
	shf.r.wrap.b32 	%r5948, %r5947, %r5946, 14;
	shf.r.wrap.b32 	%r5949, %r5946, %r5947, 14;
	mov.b64 	%rd713, {%r5949, %r5948};
	shf.r.wrap.b32 	%r5950, %r5947, %r5946, 18;
	shf.r.wrap.b32 	%r5951, %r5946, %r5947, 18;
	mov.b64 	%rd714, {%r5951, %r5950};
	xor.b64  	%rd715, %rd713, %rd714;
	shf.l.wrap.b32 	%r5952, %r5946, %r5947, 23;
	shf.l.wrap.b32 	%r5953, %r5947, %r5946, 23;
	mov.b64 	%rd716, {%r5953, %r5952};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd468, %rd443;
	and.b64  	%rd719, %rd701, %rd718;
	xor.b64  	%rd720, %rd719, %rd443;
	add.s64 	%rd721, %rd505, %rd418;
	ld.const.u64 	%rd722, [k_sha512+136];
	add.s64 	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd723, %rd720;
	add.s64 	%rd725, %rd724, %rd717;
	add.s64 	%rd726, %rd725, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5955}, %rd712;
	}
	shf.r.wrap.b32 	%r5956, %r5955, %r5954, 28;
	shf.r.wrap.b32 	%r5957, %r5954, %r5955, 28;
	mov.b64 	%rd727, {%r5957, %r5956};
	shf.l.wrap.b32 	%r5958, %r5954, %r5955, 30;
	shf.l.wrap.b32 	%r5959, %r5955, %r5954, 30;
	mov.b64 	%rd728, {%r5959, %r5958};
	xor.b64  	%rd729, %rd727, %rd728;
	shf.l.wrap.b32 	%r5960, %r5954, %r5955, 25;
	shf.l.wrap.b32 	%r5961, %r5955, %r5954, 25;
	mov.b64 	%rd730, {%r5961, %r5960};
	xor.b64  	%rd731, %rd729, %rd730;
	and.b64  	%rd732, %rd712, %rd479;
	xor.b64  	%rd733, %rd712, %rd479;
	and.b64  	%rd734, %rd733, %rd454;
	or.b64  	%rd735, %rd734, %rd732;
	add.s64 	%rd736, %rd731, %rd735;
	add.s64 	%rd737, %rd736, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd726;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 14;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 14;
	mov.b64 	%rd738, {%r5965, %r5964};
	shf.r.wrap.b32 	%r5966, %r5963, %r5962, 18;
	shf.r.wrap.b32 	%r5967, %r5962, %r5963, 18;
	mov.b64 	%rd739, {%r5967, %r5966};
	xor.b64  	%rd740, %rd738, %rd739;
	shf.l.wrap.b32 	%r5968, %r5962, %r5963, 23;
	shf.l.wrap.b32 	%r5969, %r5963, %r5962, 23;
	mov.b64 	%rd741, {%r5969, %r5968};
	xor.b64  	%rd742, %rd740, %rd741;
	xor.b64  	%rd743, %rd701, %rd468;
	and.b64  	%rd744, %rd726, %rd743;
	xor.b64  	%rd745, %rd744, %rd468;
	add.s64 	%rd746, %rd518, %rd443;
	ld.const.u64 	%rd747, [k_sha512+144];
	add.s64 	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd748, %rd745;
	add.s64 	%rd750, %rd749, %rd742;
	add.s64 	%rd751, %rd750, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5970,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5971}, %rd737;
	}
	shf.r.wrap.b32 	%r5972, %r5971, %r5970, 28;
	shf.r.wrap.b32 	%r5973, %r5970, %r5971, 28;
	mov.b64 	%rd752, {%r5973, %r5972};
	shf.l.wrap.b32 	%r5974, %r5970, %r5971, 30;
	shf.l.wrap.b32 	%r5975, %r5971, %r5970, 30;
	mov.b64 	%rd753, {%r5975, %r5974};
	xor.b64  	%rd754, %rd752, %rd753;
	shf.l.wrap.b32 	%r5976, %r5970, %r5971, 25;
	shf.l.wrap.b32 	%r5977, %r5971, %r5970, 25;
	mov.b64 	%rd755, {%r5977, %r5976};
	xor.b64  	%rd756, %rd754, %rd755;
	and.b64  	%rd757, %rd737, %rd712;
	xor.b64  	%rd758, %rd737, %rd712;
	and.b64  	%rd759, %rd758, %rd479;
	or.b64  	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd756, %rd760;
	add.s64 	%rd762, %rd761, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5978,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5979}, %rd751;
	}
	shf.r.wrap.b32 	%r5980, %r5979, %r5978, 14;
	shf.r.wrap.b32 	%r5981, %r5978, %r5979, 14;
	mov.b64 	%rd763, {%r5981, %r5980};
	shf.r.wrap.b32 	%r5982, %r5979, %r5978, 18;
	shf.r.wrap.b32 	%r5983, %r5978, %r5979, 18;
	mov.b64 	%rd764, {%r5983, %r5982};
	xor.b64  	%rd765, %rd763, %rd764;
	shf.l.wrap.b32 	%r5984, %r5978, %r5979, 23;
	shf.l.wrap.b32 	%r5985, %r5979, %r5978, 23;
	mov.b64 	%rd766, {%r5985, %r5984};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd726, %rd701;
	and.b64  	%rd769, %rd751, %rd768;
	xor.b64  	%rd770, %rd769, %rd701;
	add.s64 	%rd771, %rd531, %rd468;
	ld.const.u64 	%rd772, [k_sha512+152];
	add.s64 	%rd773, %rd771, %rd772;
	add.s64 	%rd774, %rd773, %rd770;
	add.s64 	%rd775, %rd774, %rd767;
	add.s64 	%rd776, %rd775, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd762;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 28;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 28;
	mov.b64 	%rd777, {%r5989, %r5988};
	shf.l.wrap.b32 	%r5990, %r5986, %r5987, 30;
	shf.l.wrap.b32 	%r5991, %r5987, %r5986, 30;
	mov.b64 	%rd778, {%r5991, %r5990};
	xor.b64  	%rd779, %rd777, %rd778;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 25;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 25;
	mov.b64 	%rd780, {%r5993, %r5992};
	xor.b64  	%rd781, %rd779, %rd780;
	and.b64  	%rd782, %rd762, %rd737;
	xor.b64  	%rd783, %rd762, %rd737;
	and.b64  	%rd784, %rd783, %rd712;
	or.b64  	%rd785, %rd784, %rd782;
	add.s64 	%rd786, %rd781, %rd785;
	add.s64 	%rd787, %rd786, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd776;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 14;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 14;
	mov.b64 	%rd788, {%r5997, %r5996};
	shf.r.wrap.b32 	%r5998, %r5995, %r5994, 18;
	shf.r.wrap.b32 	%r5999, %r5994, %r5995, 18;
	mov.b64 	%rd789, {%r5999, %r5998};
	xor.b64  	%rd790, %rd788, %rd789;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 23;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 23;
	mov.b64 	%rd791, {%r6001, %r6000};
	xor.b64  	%rd792, %rd790, %rd791;
	xor.b64  	%rd793, %rd751, %rd726;
	and.b64  	%rd794, %rd776, %rd793;
	xor.b64  	%rd795, %rd794, %rd726;
	add.s64 	%rd796, %rd701, %rd544;
	ld.const.u64 	%rd797, [k_sha512+160];
	add.s64 	%rd798, %rd796, %rd797;
	add.s64 	%rd799, %rd798, %rd795;
	add.s64 	%rd800, %rd799, %rd792;
	add.s64 	%rd801, %rd800, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd787;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 28;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 28;
	mov.b64 	%rd802, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 30;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 30;
	mov.b64 	%rd803, {%r6007, %r6006};
	xor.b64  	%rd804, %rd802, %rd803;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 25;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 25;
	mov.b64 	%rd805, {%r6009, %r6008};
	xor.b64  	%rd806, %rd804, %rd805;
	and.b64  	%rd807, %rd787, %rd762;
	xor.b64  	%rd808, %rd787, %rd762;
	and.b64  	%rd809, %rd808, %rd737;
	or.b64  	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd806, %rd810;
	add.s64 	%rd812, %rd811, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd801;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 14;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 14;
	mov.b64 	%rd813, {%r6013, %r6012};
	shf.r.wrap.b32 	%r6014, %r6011, %r6010, 18;
	shf.r.wrap.b32 	%r6015, %r6010, %r6011, 18;
	mov.b64 	%rd814, {%r6015, %r6014};
	xor.b64  	%rd815, %rd813, %rd814;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 23;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 23;
	mov.b64 	%rd816, {%r6017, %r6016};
	xor.b64  	%rd817, %rd815, %rd816;
	xor.b64  	%rd818, %rd776, %rd751;
	and.b64  	%rd819, %rd801, %rd818;
	xor.b64  	%rd820, %rd819, %rd751;
	ld.const.u64 	%rd821, [k_sha512+168];
	add.s64 	%rd822, %rd821, %rd557;
	add.s64 	%rd823, %rd822, %rd726;
	add.s64 	%rd824, %rd823, %rd820;
	add.s64 	%rd825, %rd824, %rd817;
	add.s64 	%rd826, %rd825, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd812;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 28;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 28;
	mov.b64 	%rd827, {%r6021, %r6020};
	shf.l.wrap.b32 	%r6022, %r6018, %r6019, 30;
	shf.l.wrap.b32 	%r6023, %r6019, %r6018, 30;
	mov.b64 	%rd828, {%r6023, %r6022};
	xor.b64  	%rd829, %rd827, %rd828;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 25;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 25;
	mov.b64 	%rd830, {%r6025, %r6024};
	xor.b64  	%rd831, %rd829, %rd830;
	and.b64  	%rd832, %rd812, %rd787;
	xor.b64  	%rd833, %rd812, %rd787;
	and.b64  	%rd834, %rd833, %rd762;
	or.b64  	%rd835, %rd834, %rd832;
	add.s64 	%rd836, %rd831, %rd835;
	add.s64 	%rd837, %rd836, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd826;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 14;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 14;
	mov.b64 	%rd838, {%r6029, %r6028};
	shf.r.wrap.b32 	%r6030, %r6027, %r6026, 18;
	shf.r.wrap.b32 	%r6031, %r6026, %r6027, 18;
	mov.b64 	%rd839, {%r6031, %r6030};
	xor.b64  	%rd840, %rd838, %rd839;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 23;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 23;
	mov.b64 	%rd841, {%r6033, %r6032};
	xor.b64  	%rd842, %rd840, %rd841;
	xor.b64  	%rd843, %rd801, %rd776;
	and.b64  	%rd844, %rd826, %rd843;
	xor.b64  	%rd845, %rd844, %rd776;
	ld.const.u64 	%rd846, [k_sha512+176];
	add.s64 	%rd847, %rd846, %rd570;
	add.s64 	%rd848, %rd847, %rd751;
	add.s64 	%rd849, %rd848, %rd845;
	add.s64 	%rd850, %rd849, %rd842;
	add.s64 	%rd851, %rd850, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6035}, %rd837;
	}
	shf.r.wrap.b32 	%r6036, %r6035, %r6034, 28;
	shf.r.wrap.b32 	%r6037, %r6034, %r6035, 28;
	mov.b64 	%rd852, {%r6037, %r6036};
	shf.l.wrap.b32 	%r6038, %r6034, %r6035, 30;
	shf.l.wrap.b32 	%r6039, %r6035, %r6034, 30;
	mov.b64 	%rd853, {%r6039, %r6038};
	xor.b64  	%rd854, %rd852, %rd853;
	shf.l.wrap.b32 	%r6040, %r6034, %r6035, 25;
	shf.l.wrap.b32 	%r6041, %r6035, %r6034, 25;
	mov.b64 	%rd855, {%r6041, %r6040};
	xor.b64  	%rd856, %rd854, %rd855;
	and.b64  	%rd857, %rd837, %rd812;
	xor.b64  	%rd858, %rd837, %rd812;
	and.b64  	%rd859, %rd858, %rd787;
	or.b64  	%rd860, %rd859, %rd857;
	add.s64 	%rd861, %rd856, %rd860;
	add.s64 	%rd862, %rd861, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd851;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 14;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 14;
	mov.b64 	%rd863, {%r6045, %r6044};
	shf.r.wrap.b32 	%r6046, %r6043, %r6042, 18;
	shf.r.wrap.b32 	%r6047, %r6042, %r6043, 18;
	mov.b64 	%rd864, {%r6047, %r6046};
	xor.b64  	%rd865, %rd863, %rd864;
	shf.l.wrap.b32 	%r6048, %r6042, %r6043, 23;
	shf.l.wrap.b32 	%r6049, %r6043, %r6042, 23;
	mov.b64 	%rd866, {%r6049, %r6048};
	xor.b64  	%rd867, %rd865, %rd866;
	xor.b64  	%rd868, %rd826, %rd801;
	and.b64  	%rd869, %rd851, %rd868;
	xor.b64  	%rd870, %rd869, %rd801;
	ld.const.u64 	%rd871, [k_sha512+184];
	add.s64 	%rd872, %rd871, %rd583;
	add.s64 	%rd873, %rd872, %rd776;
	add.s64 	%rd874, %rd873, %rd870;
	add.s64 	%rd875, %rd874, %rd867;
	add.s64 	%rd876, %rd875, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6051}, %rd862;
	}
	shf.r.wrap.b32 	%r6052, %r6051, %r6050, 28;
	shf.r.wrap.b32 	%r6053, %r6050, %r6051, 28;
	mov.b64 	%rd877, {%r6053, %r6052};
	shf.l.wrap.b32 	%r6054, %r6050, %r6051, 30;
	shf.l.wrap.b32 	%r6055, %r6051, %r6050, 30;
	mov.b64 	%rd878, {%r6055, %r6054};
	xor.b64  	%rd879, %rd877, %rd878;
	shf.l.wrap.b32 	%r6056, %r6050, %r6051, 25;
	shf.l.wrap.b32 	%r6057, %r6051, %r6050, 25;
	mov.b64 	%rd880, {%r6057, %r6056};
	xor.b64  	%rd881, %rd879, %rd880;
	and.b64  	%rd882, %rd862, %rd837;
	xor.b64  	%rd883, %rd862, %rd837;
	and.b64  	%rd884, %rd883, %rd812;
	or.b64  	%rd885, %rd884, %rd882;
	add.s64 	%rd886, %rd881, %rd885;
	add.s64 	%rd887, %rd886, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6059}, %rd876;
	}
	shf.r.wrap.b32 	%r6060, %r6059, %r6058, 14;
	shf.r.wrap.b32 	%r6061, %r6058, %r6059, 14;
	mov.b64 	%rd888, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r6059, %r6058, 18;
	shf.r.wrap.b32 	%r6063, %r6058, %r6059, 18;
	mov.b64 	%rd889, {%r6063, %r6062};
	xor.b64  	%rd890, %rd888, %rd889;
	shf.l.wrap.b32 	%r6064, %r6058, %r6059, 23;
	shf.l.wrap.b32 	%r6065, %r6059, %r6058, 23;
	mov.b64 	%rd891, {%r6065, %r6064};
	xor.b64  	%rd892, %rd890, %rd891;
	xor.b64  	%rd893, %rd851, %rd826;
	and.b64  	%rd894, %rd876, %rd893;
	xor.b64  	%rd895, %rd894, %rd826;
	ld.const.u64 	%rd896, [k_sha512+192];
	add.s64 	%rd897, %rd896, %rd596;
	add.s64 	%rd898, %rd897, %rd801;
	add.s64 	%rd899, %rd898, %rd895;
	add.s64 	%rd900, %rd899, %rd892;
	add.s64 	%rd901, %rd900, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6067}, %rd887;
	}
	shf.r.wrap.b32 	%r6068, %r6067, %r6066, 28;
	shf.r.wrap.b32 	%r6069, %r6066, %r6067, 28;
	mov.b64 	%rd902, {%r6069, %r6068};
	shf.l.wrap.b32 	%r6070, %r6066, %r6067, 30;
	shf.l.wrap.b32 	%r6071, %r6067, %r6066, 30;
	mov.b64 	%rd903, {%r6071, %r6070};
	xor.b64  	%rd904, %rd902, %rd903;
	shf.l.wrap.b32 	%r6072, %r6066, %r6067, 25;
	shf.l.wrap.b32 	%r6073, %r6067, %r6066, 25;
	mov.b64 	%rd905, {%r6073, %r6072};
	xor.b64  	%rd906, %rd904, %rd905;
	and.b64  	%rd907, %rd887, %rd862;
	xor.b64  	%rd908, %rd887, %rd862;
	and.b64  	%rd909, %rd908, %rd837;
	or.b64  	%rd910, %rd909, %rd907;
	add.s64 	%rd911, %rd906, %rd910;
	add.s64 	%rd912, %rd911, %rd900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6074,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6075}, %rd901;
	}
	shf.r.wrap.b32 	%r6076, %r6075, %r6074, 14;
	shf.r.wrap.b32 	%r6077, %r6074, %r6075, 14;
	mov.b64 	%rd913, {%r6077, %r6076};
	shf.r.wrap.b32 	%r6078, %r6075, %r6074, 18;
	shf.r.wrap.b32 	%r6079, %r6074, %r6075, 18;
	mov.b64 	%rd914, {%r6079, %r6078};
	xor.b64  	%rd915, %rd913, %rd914;
	shf.l.wrap.b32 	%r6080, %r6074, %r6075, 23;
	shf.l.wrap.b32 	%r6081, %r6075, %r6074, 23;
	mov.b64 	%rd916, {%r6081, %r6080};
	xor.b64  	%rd917, %rd915, %rd916;
	xor.b64  	%rd918, %rd876, %rd851;
	and.b64  	%rd919, %rd901, %rd918;
	xor.b64  	%rd920, %rd919, %rd851;
	ld.const.u64 	%rd921, [k_sha512+200];
	add.s64 	%rd922, %rd921, %rd609;
	add.s64 	%rd923, %rd922, %rd826;
	add.s64 	%rd924, %rd923, %rd920;
	add.s64 	%rd925, %rd924, %rd917;
	add.s64 	%rd926, %rd925, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6083}, %rd912;
	}
	shf.r.wrap.b32 	%r6084, %r6083, %r6082, 28;
	shf.r.wrap.b32 	%r6085, %r6082, %r6083, 28;
	mov.b64 	%rd927, {%r6085, %r6084};
	shf.l.wrap.b32 	%r6086, %r6082, %r6083, 30;
	shf.l.wrap.b32 	%r6087, %r6083, %r6082, 30;
	mov.b64 	%rd928, {%r6087, %r6086};
	xor.b64  	%rd929, %rd927, %rd928;
	shf.l.wrap.b32 	%r6088, %r6082, %r6083, 25;
	shf.l.wrap.b32 	%r6089, %r6083, %r6082, 25;
	mov.b64 	%rd930, {%r6089, %r6088};
	xor.b64  	%rd931, %rd929, %rd930;
	and.b64  	%rd932, %rd912, %rd887;
	xor.b64  	%rd933, %rd912, %rd887;
	and.b64  	%rd934, %rd933, %rd862;
	or.b64  	%rd935, %rd934, %rd932;
	add.s64 	%rd936, %rd931, %rd935;
	add.s64 	%rd937, %rd936, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd926;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd938, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd939, {%r6095, %r6094};
	xor.b64  	%rd940, %rd938, %rd939;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd941, {%r6097, %r6096};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd901, %rd876;
	and.b64  	%rd944, %rd926, %rd943;
	xor.b64  	%rd945, %rd944, %rd876;
	ld.const.u64 	%rd946, [k_sha512+208];
	add.s64 	%rd947, %rd946, %rd622;
	add.s64 	%rd948, %rd947, %rd851;
	add.s64 	%rd949, %rd948, %rd945;
	add.s64 	%rd950, %rd949, %rd942;
	add.s64 	%rd951, %rd950, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd937;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd952, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd953, {%r6103, %r6102};
	xor.b64  	%rd954, %rd952, %rd953;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd955, {%r6105, %r6104};
	xor.b64  	%rd956, %rd954, %rd955;
	and.b64  	%rd957, %rd937, %rd912;
	xor.b64  	%rd958, %rd937, %rd912;
	and.b64  	%rd959, %rd958, %rd887;
	or.b64  	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd956, %rd960;
	add.s64 	%rd962, %rd961, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd951;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 14;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 14;
	mov.b64 	%rd963, {%r6109, %r6108};
	shf.r.wrap.b32 	%r6110, %r6107, %r6106, 18;
	shf.r.wrap.b32 	%r6111, %r6106, %r6107, 18;
	mov.b64 	%rd964, {%r6111, %r6110};
	xor.b64  	%rd965, %rd963, %rd964;
	shf.l.wrap.b32 	%r6112, %r6106, %r6107, 23;
	shf.l.wrap.b32 	%r6113, %r6107, %r6106, 23;
	mov.b64 	%rd966, {%r6113, %r6112};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd926, %rd901;
	and.b64  	%rd969, %rd951, %rd968;
	xor.b64  	%rd970, %rd969, %rd901;
	ld.const.u64 	%rd971, [k_sha512+216];
	add.s64 	%rd972, %rd971, %rd635;
	add.s64 	%rd973, %rd972, %rd876;
	add.s64 	%rd974, %rd973, %rd970;
	add.s64 	%rd975, %rd974, %rd967;
	add.s64 	%rd976, %rd975, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6115}, %rd962;
	}
	shf.r.wrap.b32 	%r6116, %r6115, %r6114, 28;
	shf.r.wrap.b32 	%r6117, %r6114, %r6115, 28;
	mov.b64 	%rd977, {%r6117, %r6116};
	shf.l.wrap.b32 	%r6118, %r6114, %r6115, 30;
	shf.l.wrap.b32 	%r6119, %r6115, %r6114, 30;
	mov.b64 	%rd978, {%r6119, %r6118};
	xor.b64  	%rd979, %rd977, %rd978;
	shf.l.wrap.b32 	%r6120, %r6114, %r6115, 25;
	shf.l.wrap.b32 	%r6121, %r6115, %r6114, 25;
	mov.b64 	%rd980, {%r6121, %r6120};
	xor.b64  	%rd981, %rd979, %rd980;
	and.b64  	%rd982, %rd962, %rd937;
	xor.b64  	%rd983, %rd962, %rd937;
	and.b64  	%rd984, %rd983, %rd912;
	or.b64  	%rd985, %rd984, %rd982;
	add.s64 	%rd986, %rd981, %rd985;
	add.s64 	%rd987, %rd986, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd976;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd988, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd989, {%r6127, %r6126};
	xor.b64  	%rd990, %rd988, %rd989;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd991, {%r6129, %r6128};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd951, %rd926;
	and.b64  	%rd994, %rd976, %rd993;
	xor.b64  	%rd995, %rd994, %rd926;
	ld.const.u64 	%rd996, [k_sha512+224];
	add.s64 	%rd997, %rd996, %rd648;
	add.s64 	%rd998, %rd997, %rd901;
	add.s64 	%rd999, %rd998, %rd995;
	add.s64 	%rd1000, %rd999, %rd992;
	add.s64 	%rd1001, %rd1000, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd987;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd1002, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd1003, {%r6135, %r6134};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd1005, {%r6137, %r6136};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	and.b64  	%rd1007, %rd987, %rd962;
	xor.b64  	%rd1008, %rd987, %rd962;
	and.b64  	%rd1009, %rd1008, %rd937;
	or.b64  	%rd1010, %rd1009, %rd1007;
	add.s64 	%rd1011, %rd1006, %rd1010;
	add.s64 	%rd1012, %rd1011, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd1001;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 14;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 14;
	mov.b64 	%rd1013, {%r6141, %r6140};
	shf.r.wrap.b32 	%r6142, %r6139, %r6138, 18;
	shf.r.wrap.b32 	%r6143, %r6138, %r6139, 18;
	mov.b64 	%rd1014, {%r6143, %r6142};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	shf.l.wrap.b32 	%r6144, %r6138, %r6139, 23;
	shf.l.wrap.b32 	%r6145, %r6139, %r6138, 23;
	mov.b64 	%rd1016, {%r6145, %r6144};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd976, %rd951;
	and.b64  	%rd1019, %rd1001, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd951;
	ld.const.u64 	%rd1021, [k_sha512+232];
	add.s64 	%rd1022, %rd1021, %rd661;
	add.s64 	%rd1023, %rd1022, %rd926;
	add.s64 	%rd1024, %rd1023, %rd1020;
	add.s64 	%rd1025, %rd1024, %rd1017;
	add.s64 	%rd1026, %rd1025, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd1012;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 28;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 28;
	mov.b64 	%rd1027, {%r6149, %r6148};
	shf.l.wrap.b32 	%r6150, %r6146, %r6147, 30;
	shf.l.wrap.b32 	%r6151, %r6147, %r6146, 30;
	mov.b64 	%rd1028, {%r6151, %r6150};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 25;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 25;
	mov.b64 	%rd1030, {%r6153, %r6152};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	and.b64  	%rd1032, %rd1012, %rd987;
	xor.b64  	%rd1033, %rd1012, %rd987;
	and.b64  	%rd1034, %rd1033, %rd962;
	or.b64  	%rd1035, %rd1034, %rd1032;
	add.s64 	%rd1036, %rd1031, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1026;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1038, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1039, {%r6159, %r6158};
	xor.b64  	%rd1040, %rd1038, %rd1039;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1041, {%r6161, %r6160};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	xor.b64  	%rd1043, %rd1001, %rd976;
	and.b64  	%rd1044, %rd1026, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd976;
	ld.const.u64 	%rd1046, [k_sha512+240];
	add.s64 	%rd1047, %rd1046, %rd674;
	add.s64 	%rd1048, %rd1047, %rd951;
	add.s64 	%rd1049, %rd1048, %rd1045;
	add.s64 	%rd1050, %rd1049, %rd1042;
	add.s64 	%rd1051, %rd1050, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1037;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1052, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1053, {%r6167, %r6166};
	xor.b64  	%rd1054, %rd1052, %rd1053;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1055, {%r6169, %r6168};
	xor.b64  	%rd1056, %rd1054, %rd1055;
	and.b64  	%rd1057, %rd1037, %rd1012;
	xor.b64  	%rd1058, %rd1037, %rd1012;
	and.b64  	%rd1059, %rd1058, %rd987;
	or.b64  	%rd1060, %rd1059, %rd1057;
	add.s64 	%rd1061, %rd1056, %rd1060;
	add.s64 	%rd1062, %rd1061, %rd1050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6171}, %rd1051;
	}
	shf.r.wrap.b32 	%r6172, %r6171, %r6170, 14;
	shf.r.wrap.b32 	%r6173, %r6170, %r6171, 14;
	mov.b64 	%rd1063, {%r6173, %r6172};
	shf.r.wrap.b32 	%r6174, %r6171, %r6170, 18;
	shf.r.wrap.b32 	%r6175, %r6170, %r6171, 18;
	mov.b64 	%rd1064, {%r6175, %r6174};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	shf.l.wrap.b32 	%r6176, %r6170, %r6171, 23;
	shf.l.wrap.b32 	%r6177, %r6171, %r6170, 23;
	mov.b64 	%rd1066, {%r6177, %r6176};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	xor.b64  	%rd1068, %rd1026, %rd1001;
	and.b64  	%rd1069, %rd1051, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1001;
	ld.const.u64 	%rd1071, [k_sha512+248];
	add.s64 	%rd1072, %rd1071, %rd687;
	add.s64 	%rd1073, %rd1072, %rd976;
	add.s64 	%rd1074, %rd1073, %rd1070;
	add.s64 	%rd1075, %rd1074, %rd1067;
	add.s64 	%rd1076, %rd1075, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6179}, %rd1062;
	}
	shf.r.wrap.b32 	%r6180, %r6179, %r6178, 28;
	shf.r.wrap.b32 	%r6181, %r6178, %r6179, 28;
	mov.b64 	%rd1077, {%r6181, %r6180};
	shf.l.wrap.b32 	%r6182, %r6178, %r6179, 30;
	shf.l.wrap.b32 	%r6183, %r6179, %r6178, 30;
	mov.b64 	%rd1078, {%r6183, %r6182};
	xor.b64  	%rd1079, %rd1077, %rd1078;
	shf.l.wrap.b32 	%r6184, %r6178, %r6179, 25;
	shf.l.wrap.b32 	%r6185, %r6179, %r6178, 25;
	mov.b64 	%rd1080, {%r6185, %r6184};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	and.b64  	%rd1082, %rd1062, %rd1037;
	xor.b64  	%rd1083, %rd1062, %rd1037;
	and.b64  	%rd1084, %rd1083, %rd1012;
	or.b64  	%rd1085, %rd1084, %rd1082;
	add.s64 	%rd1086, %rd1081, %rd1085;
	add.s64 	%rd1087, %rd1086, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6187}, %rd674;
	}
	shf.r.wrap.b32 	%r6188, %r6187, %r6186, 19;
	shf.r.wrap.b32 	%r6189, %r6186, %r6187, 19;
	mov.b64 	%rd1088, {%r6189, %r6188};
	shf.l.wrap.b32 	%r6190, %r6186, %r6187, 3;
	shf.l.wrap.b32 	%r6191, %r6187, %r6186, 3;
	mov.b64 	%rd1089, {%r6191, %r6190};
	shr.u64 	%rd1090, %rd674, 6;
	xor.b64  	%rd1091, %rd1089, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1088;
	shf.r.wrap.b32 	%r6192, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r6193, %r5780, %r5781, 1;
	mov.b64 	%rd1093, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r6195, %r5780, %r5781, 8;
	mov.b64 	%rd1094, {%r6195, %r6194};
	shr.u64 	%rd1095, %rd505, 7;
	xor.b64  	%rd1096, %rd1094, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1093;
	add.s64 	%rd1098, %rd1097, %rd492;
	add.s64 	%rd1099, %rd1098, %rd609;
	add.s64 	%rd1100, %rd1099, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd687;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 19;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 19;
	mov.b64 	%rd1101, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 3;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 3;
	mov.b64 	%rd1102, {%r6201, %r6200};
	shr.u64 	%rd1103, %rd687, 6;
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1101;
	shf.r.wrap.b32 	%r6202, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r6203, %r5792, %r5793, 1;
	mov.b64 	%rd1106, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r6205, %r5792, %r5793, 8;
	mov.b64 	%rd1107, {%r6205, %r6204};
	shr.u64 	%rd1108, %rd518, 7;
	xor.b64  	%rd1109, %rd1107, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1106;
	add.s64 	%rd1111, %rd1110, %rd505;
	add.s64 	%rd1112, %rd1111, %rd622;
	add.s64 	%rd1113, %rd1112, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6206,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6207}, %rd1100;
	}
	shf.r.wrap.b32 	%r6208, %r6207, %r6206, 19;
	shf.r.wrap.b32 	%r6209, %r6206, %r6207, 19;
	mov.b64 	%rd1114, {%r6209, %r6208};
	shf.l.wrap.b32 	%r6210, %r6206, %r6207, 3;
	shf.l.wrap.b32 	%r6211, %r6207, %r6206, 3;
	mov.b64 	%rd1115, {%r6211, %r6210};
	shr.u64 	%rd1116, %rd1100, 6;
	xor.b64  	%rd1117, %rd1115, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1114;
	shf.r.wrap.b32 	%r6212, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r6213, %r5804, %r5805, 1;
	mov.b64 	%rd1119, {%r6213, %r6212};
	shf.r.wrap.b32 	%r6214, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r6215, %r5804, %r5805, 8;
	mov.b64 	%rd1120, {%r6215, %r6214};
	shr.u64 	%rd1121, %rd531, 7;
	xor.b64  	%rd1122, %rd1120, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1119;
	add.s64 	%rd1124, %rd1123, %rd518;
	add.s64 	%rd1125, %rd1124, %rd635;
	add.s64 	%rd1126, %rd1125, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd1113;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 19;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 19;
	mov.b64 	%rd1127, {%r6219, %r6218};
	shf.l.wrap.b32 	%r6220, %r6216, %r6217, 3;
	shf.l.wrap.b32 	%r6221, %r6217, %r6216, 3;
	mov.b64 	%rd1128, {%r6221, %r6220};
	shr.u64 	%rd1129, %rd1113, 6;
	xor.b64  	%rd1130, %rd1128, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1127;
	shf.r.wrap.b32 	%r6222, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r6223, %r5816, %r5817, 1;
	mov.b64 	%rd1132, {%r6223, %r6222};
	shf.r.wrap.b32 	%r6224, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r6225, %r5816, %r5817, 8;
	mov.b64 	%rd1133, {%r6225, %r6224};
	shr.u64 	%rd1134, %rd544, 7;
	xor.b64  	%rd1135, %rd1133, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1132;
	add.s64 	%rd1137, %rd1136, %rd531;
	add.s64 	%rd1138, %rd1137, %rd648;
	add.s64 	%rd1139, %rd1138, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6227}, %rd1126;
	}
	shf.r.wrap.b32 	%r6228, %r6227, %r6226, 19;
	shf.r.wrap.b32 	%r6229, %r6226, %r6227, 19;
	mov.b64 	%rd1140, {%r6229, %r6228};
	shf.l.wrap.b32 	%r6230, %r6226, %r6227, 3;
	shf.l.wrap.b32 	%r6231, %r6227, %r6226, 3;
	mov.b64 	%rd1141, {%r6231, %r6230};
	shr.u64 	%rd1142, %rd1126, 6;
	xor.b64  	%rd1143, %rd1141, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1140;
	shf.r.wrap.b32 	%r6232, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r6233, %r5828, %r5829, 1;
	mov.b64 	%rd1145, {%r6233, %r6232};
	shf.r.wrap.b32 	%r6234, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r6235, %r5828, %r5829, 8;
	mov.b64 	%rd1146, {%r6235, %r6234};
	shr.u64 	%rd1147, %rd557, 7;
	xor.b64  	%rd1148, %rd1146, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd544;
	add.s64 	%rd1151, %rd1150, %rd661;
	add.s64 	%rd1152, %rd1151, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6236,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd1139;
	}
	shf.r.wrap.b32 	%r6238, %r6237, %r6236, 19;
	shf.r.wrap.b32 	%r6239, %r6236, %r6237, 19;
	mov.b64 	%rd1153, {%r6239, %r6238};
	shf.l.wrap.b32 	%r6240, %r6236, %r6237, 3;
	shf.l.wrap.b32 	%r6241, %r6237, %r6236, 3;
	mov.b64 	%rd1154, {%r6241, %r6240};
	shr.u64 	%rd1155, %rd1139, 6;
	xor.b64  	%rd1156, %rd1154, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1153;
	shf.r.wrap.b32 	%r6242, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r6243, %r5840, %r5841, 1;
	mov.b64 	%rd1158, {%r6243, %r6242};
	shf.r.wrap.b32 	%r6244, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r6245, %r5840, %r5841, 8;
	mov.b64 	%rd1159, {%r6245, %r6244};
	shr.u64 	%rd1160, %rd570, 7;
	xor.b64  	%rd1161, %rd1159, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1158;
	add.s64 	%rd1163, %rd1162, %rd557;
	add.s64 	%rd1164, %rd1163, %rd674;
	add.s64 	%rd1165, %rd1164, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd1152;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd1166, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd1167, {%r6251, %r6250};
	shr.u64 	%rd1168, %rd1152, 6;
	xor.b64  	%rd1169, %rd1167, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1166;
	shf.r.wrap.b32 	%r6252, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r6253, %r5852, %r5853, 1;
	mov.b64 	%rd1171, {%r6253, %r6252};
	shf.r.wrap.b32 	%r6254, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r6255, %r5852, %r5853, 8;
	mov.b64 	%rd1172, {%r6255, %r6254};
	shr.u64 	%rd1173, %rd583, 7;
	xor.b64  	%rd1174, %rd1172, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1171;
	add.s64 	%rd1176, %rd1175, %rd570;
	add.s64 	%rd1177, %rd1176, %rd687;
	add.s64 	%rd1178, %rd1177, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd1165;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 19;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 19;
	mov.b64 	%rd1179, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 3;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 3;
	mov.b64 	%rd1180, {%r6261, %r6260};
	shr.u64 	%rd1181, %rd1165, 6;
	xor.b64  	%rd1182, %rd1180, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1179;
	shf.r.wrap.b32 	%r6262, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r6263, %r5864, %r5865, 1;
	mov.b64 	%rd1184, {%r6263, %r6262};
	shf.r.wrap.b32 	%r6264, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r6265, %r5864, %r5865, 8;
	mov.b64 	%rd1185, {%r6265, %r6264};
	shr.u64 	%rd1186, %rd596, 7;
	xor.b64  	%rd1187, %rd1185, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1184;
	add.s64 	%rd1189, %rd1188, %rd583;
	add.s64 	%rd1190, %rd1189, %rd1100;
	add.s64 	%rd1191, %rd1190, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6267}, %rd1178;
	}
	shf.r.wrap.b32 	%r6268, %r6267, %r6266, 19;
	shf.r.wrap.b32 	%r6269, %r6266, %r6267, 19;
	mov.b64 	%rd1192, {%r6269, %r6268};
	shf.l.wrap.b32 	%r6270, %r6266, %r6267, 3;
	shf.l.wrap.b32 	%r6271, %r6267, %r6266, 3;
	mov.b64 	%rd1193, {%r6271, %r6270};
	shr.u64 	%rd1194, %rd1178, 6;
	xor.b64  	%rd1195, %rd1193, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1192;
	shf.r.wrap.b32 	%r6272, %r5877, %r5876, 1;
	shf.r.wrap.b32 	%r6273, %r5876, %r5877, 1;
	mov.b64 	%rd1197, {%r6273, %r6272};
	shf.r.wrap.b32 	%r6274, %r5877, %r5876, 8;
	shf.r.wrap.b32 	%r6275, %r5876, %r5877, 8;
	mov.b64 	%rd1198, {%r6275, %r6274};
	shr.u64 	%rd1199, %rd609, 7;
	xor.b64  	%rd1200, %rd1198, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1197;
	add.s64 	%rd1202, %rd1201, %rd596;
	add.s64 	%rd1203, %rd1202, %rd1113;
	add.s64 	%rd1204, %rd1203, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd1191;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 19;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 19;
	mov.b64 	%rd1205, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 3;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 3;
	mov.b64 	%rd1206, {%r6281, %r6280};
	shr.u64 	%rd1207, %rd1191, 6;
	xor.b64  	%rd1208, %rd1206, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1205;
	shf.r.wrap.b32 	%r6282, %r5889, %r5888, 1;
	shf.r.wrap.b32 	%r6283, %r5888, %r5889, 1;
	mov.b64 	%rd1210, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r5889, %r5888, 8;
	shf.r.wrap.b32 	%r6285, %r5888, %r5889, 8;
	mov.b64 	%rd1211, {%r6285, %r6284};
	shr.u64 	%rd1212, %rd622, 7;
	xor.b64  	%rd1213, %rd1211, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1210;
	add.s64 	%rd1215, %rd1214, %rd609;
	add.s64 	%rd1216, %rd1215, %rd1126;
	add.s64 	%rd1217, %rd1216, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6287}, %rd1204;
	}
	shf.r.wrap.b32 	%r6288, %r6287, %r6286, 19;
	shf.r.wrap.b32 	%r6289, %r6286, %r6287, 19;
	mov.b64 	%rd1218, {%r6289, %r6288};
	shf.l.wrap.b32 	%r6290, %r6286, %r6287, 3;
	shf.l.wrap.b32 	%r6291, %r6287, %r6286, 3;
	mov.b64 	%rd1219, {%r6291, %r6290};
	shr.u64 	%rd1220, %rd1204, 6;
	xor.b64  	%rd1221, %rd1219, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1218;
	shf.r.wrap.b32 	%r6292, %r5901, %r5900, 1;
	shf.r.wrap.b32 	%r6293, %r5900, %r5901, 1;
	mov.b64 	%rd1223, {%r6293, %r6292};
	shf.r.wrap.b32 	%r6294, %r5901, %r5900, 8;
	shf.r.wrap.b32 	%r6295, %r5900, %r5901, 8;
	mov.b64 	%rd1224, {%r6295, %r6294};
	shr.u64 	%rd1225, %rd635, 7;
	xor.b64  	%rd1226, %rd1224, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1223;
	add.s64 	%rd1228, %rd1227, %rd622;
	add.s64 	%rd1229, %rd1228, %rd1139;
	add.s64 	%rd1230, %rd1229, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd1217;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 19;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 19;
	mov.b64 	%rd1231, {%r6299, %r6298};
	shf.l.wrap.b32 	%r6300, %r6296, %r6297, 3;
	shf.l.wrap.b32 	%r6301, %r6297, %r6296, 3;
	mov.b64 	%rd1232, {%r6301, %r6300};
	shr.u64 	%rd1233, %rd1217, 6;
	xor.b64  	%rd1234, %rd1232, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1231;
	shf.r.wrap.b32 	%r6302, %r5911, %r5910, 1;
	shf.r.wrap.b32 	%r6303, %r5910, %r5911, 1;
	mov.b64 	%rd1236, {%r6303, %r6302};
	shf.r.wrap.b32 	%r6304, %r5911, %r5910, 8;
	shf.r.wrap.b32 	%r6305, %r5910, %r5911, 8;
	mov.b64 	%rd1237, {%r6305, %r6304};
	shr.u64 	%rd1238, %rd648, 7;
	xor.b64  	%rd1239, %rd1237, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1236;
	add.s64 	%rd1241, %rd1240, %rd635;
	add.s64 	%rd1242, %rd1241, %rd1152;
	add.s64 	%rd1243, %rd1242, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6306,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6307}, %rd1230;
	}
	shf.r.wrap.b32 	%r6308, %r6307, %r6306, 19;
	shf.r.wrap.b32 	%r6309, %r6306, %r6307, 19;
	mov.b64 	%rd1244, {%r6309, %r6308};
	shf.l.wrap.b32 	%r6310, %r6306, %r6307, 3;
	shf.l.wrap.b32 	%r6311, %r6307, %r6306, 3;
	mov.b64 	%rd1245, {%r6311, %r6310};
	shr.u64 	%rd1246, %rd1230, 6;
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1244;
	shf.r.wrap.b32 	%r6312, %r5921, %r5920, 1;
	shf.r.wrap.b32 	%r6313, %r5920, %r5921, 1;
	mov.b64 	%rd1249, {%r6313, %r6312};
	shf.r.wrap.b32 	%r6314, %r5921, %r5920, 8;
	shf.r.wrap.b32 	%r6315, %r5920, %r5921, 8;
	mov.b64 	%rd1250, {%r6315, %r6314};
	shr.u64 	%rd1251, %rd661, 7;
	xor.b64  	%rd1252, %rd1250, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1249;
	add.s64 	%rd1254, %rd1253, %rd648;
	add.s64 	%rd1255, %rd1254, %rd1165;
	add.s64 	%rd1256, %rd1255, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd1243;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 19;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 19;
	mov.b64 	%rd1257, {%r6319, %r6318};
	shf.l.wrap.b32 	%r6320, %r6316, %r6317, 3;
	shf.l.wrap.b32 	%r6321, %r6317, %r6316, 3;
	mov.b64 	%rd1258, {%r6321, %r6320};
	shr.u64 	%rd1259, %rd1243, 6;
	xor.b64  	%rd1260, %rd1258, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1257;
	shf.r.wrap.b32 	%r6322, %r6187, %r6186, 1;
	shf.r.wrap.b32 	%r6323, %r6186, %r6187, 1;
	mov.b64 	%rd1262, {%r6323, %r6322};
	shf.r.wrap.b32 	%r6324, %r6187, %r6186, 8;
	shf.r.wrap.b32 	%r6325, %r6186, %r6187, 8;
	mov.b64 	%rd1263, {%r6325, %r6324};
	shr.u64 	%rd1264, %rd674, 7;
	xor.b64  	%rd1265, %rd1263, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1262;
	add.s64 	%rd1267, %rd1266, %rd661;
	add.s64 	%rd1268, %rd1267, %rd1178;
	add.s64 	%rd1269, %rd1268, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6326,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6327}, %rd1256;
	}
	shf.r.wrap.b32 	%r6328, %r6327, %r6326, 19;
	shf.r.wrap.b32 	%r6329, %r6326, %r6327, 19;
	mov.b64 	%rd1270, {%r6329, %r6328};
	shf.l.wrap.b32 	%r6330, %r6326, %r6327, 3;
	shf.l.wrap.b32 	%r6331, %r6327, %r6326, 3;
	mov.b64 	%rd1271, {%r6331, %r6330};
	shr.u64 	%rd1272, %rd1256, 6;
	xor.b64  	%rd1273, %rd1271, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1270;
	shf.r.wrap.b32 	%r6332, %r6197, %r6196, 1;
	shf.r.wrap.b32 	%r6333, %r6196, %r6197, 1;
	mov.b64 	%rd1275, {%r6333, %r6332};
	shf.r.wrap.b32 	%r6334, %r6197, %r6196, 8;
	shf.r.wrap.b32 	%r6335, %r6196, %r6197, 8;
	mov.b64 	%rd1276, {%r6335, %r6334};
	shr.u64 	%rd1277, %rd687, 7;
	xor.b64  	%rd1278, %rd1276, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1275;
	add.s64 	%rd1280, %rd1279, %rd674;
	add.s64 	%rd1281, %rd1280, %rd1191;
	add.s64 	%rd1282, %rd1281, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd1269;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 19;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 19;
	mov.b64 	%rd1283, {%r6339, %r6338};
	shf.l.wrap.b32 	%r6340, %r6336, %r6337, 3;
	shf.l.wrap.b32 	%r6341, %r6337, %r6336, 3;
	mov.b64 	%rd1284, {%r6341, %r6340};
	shr.u64 	%rd1285, %rd1269, 6;
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1283;
	shf.r.wrap.b32 	%r6342, %r6207, %r6206, 1;
	shf.r.wrap.b32 	%r6343, %r6206, %r6207, 1;
	mov.b64 	%rd1288, {%r6343, %r6342};
	shf.r.wrap.b32 	%r6344, %r6207, %r6206, 8;
	shf.r.wrap.b32 	%r6345, %r6206, %r6207, 8;
	mov.b64 	%rd1289, {%r6345, %r6344};
	shr.u64 	%rd1290, %rd1100, 7;
	xor.b64  	%rd1291, %rd1289, %rd1290;
	xor.b64  	%rd1292, %rd1291, %rd1288;
	add.s64 	%rd1293, %rd1292, %rd687;
	add.s64 	%rd1294, %rd1293, %rd1204;
	add.s64 	%rd1295, %rd1294, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd1076;
	}
	shf.r.wrap.b32 	%r6348, %r6347, %r6346, 14;
	shf.r.wrap.b32 	%r6349, %r6346, %r6347, 14;
	mov.b64 	%rd1296, {%r6349, %r6348};
	shf.r.wrap.b32 	%r6350, %r6347, %r6346, 18;
	shf.r.wrap.b32 	%r6351, %r6346, %r6347, 18;
	mov.b64 	%rd1297, {%r6351, %r6350};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r6352, %r6346, %r6347, 23;
	shf.l.wrap.b32 	%r6353, %r6347, %r6346, 23;
	mov.b64 	%rd1299, {%r6353, %r6352};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	xor.b64  	%rd1301, %rd1051, %rd1026;
	and.b64  	%rd1302, %rd1076, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1026;
	add.s64 	%rd1304, %rd1303, %rd1001;
	add.s64 	%rd1305, %rd1304, %rd1300;
	add.s64 	%rd1306, %rd1305, %rd1100;
	ld.const.u64 	%rd1307, [k_sha512+256];
	add.s64 	%rd1308, %rd1306, %rd1307;
	add.s64 	%rd1309, %rd1308, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd1087;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 28;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 28;
	mov.b64 	%rd1310, {%r6357, %r6356};
	shf.l.wrap.b32 	%r6358, %r6354, %r6355, 30;
	shf.l.wrap.b32 	%r6359, %r6355, %r6354, 30;
	mov.b64 	%rd1311, {%r6359, %r6358};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	shf.l.wrap.b32 	%r6360, %r6354, %r6355, 25;
	shf.l.wrap.b32 	%r6361, %r6355, %r6354, 25;
	mov.b64 	%rd1313, {%r6361, %r6360};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	and.b64  	%rd1315, %rd1087, %rd1062;
	xor.b64  	%rd1316, %rd1087, %rd1062;
	and.b64  	%rd1317, %rd1316, %rd1037;
	or.b64  	%rd1318, %rd1317, %rd1315;
	add.s64 	%rd1319, %rd1314, %rd1318;
	add.s64 	%rd1320, %rd1319, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6362,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6363}, %rd1309;
	}
	shf.r.wrap.b32 	%r6364, %r6363, %r6362, 14;
	shf.r.wrap.b32 	%r6365, %r6362, %r6363, 14;
	mov.b64 	%rd1321, {%r6365, %r6364};
	shf.r.wrap.b32 	%r6366, %r6363, %r6362, 18;
	shf.r.wrap.b32 	%r6367, %r6362, %r6363, 18;
	mov.b64 	%rd1322, {%r6367, %r6366};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shf.l.wrap.b32 	%r6368, %r6362, %r6363, 23;
	shf.l.wrap.b32 	%r6369, %r6363, %r6362, 23;
	mov.b64 	%rd1324, {%r6369, %r6368};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	xor.b64  	%rd1326, %rd1076, %rd1051;
	and.b64  	%rd1327, %rd1309, %rd1326;
	xor.b64  	%rd1328, %rd1327, %rd1051;
	add.s64 	%rd1329, %rd1113, %rd1026;
	ld.const.u64 	%rd1330, [k_sha512+264];
	add.s64 	%rd1331, %rd1329, %rd1330;
	add.s64 	%rd1332, %rd1331, %rd1328;
	add.s64 	%rd1333, %rd1332, %rd1325;
	add.s64 	%rd1334, %rd1333, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd1320;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 28;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 28;
	mov.b64 	%rd1335, {%r6373, %r6372};
	shf.l.wrap.b32 	%r6374, %r6370, %r6371, 30;
	shf.l.wrap.b32 	%r6375, %r6371, %r6370, 30;
	mov.b64 	%rd1336, {%r6375, %r6374};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 25;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 25;
	mov.b64 	%rd1338, {%r6377, %r6376};
	xor.b64  	%rd1339, %rd1337, %rd1338;
	and.b64  	%rd1340, %rd1320, %rd1087;
	xor.b64  	%rd1341, %rd1320, %rd1087;
	and.b64  	%rd1342, %rd1341, %rd1062;
	or.b64  	%rd1343, %rd1342, %rd1340;
	add.s64 	%rd1344, %rd1339, %rd1343;
	add.s64 	%rd1345, %rd1344, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd1334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd1334;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 14;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 14;
	mov.b64 	%rd1346, {%r6381, %r6380};
	shf.r.wrap.b32 	%r6382, %r6379, %r6378, 18;
	shf.r.wrap.b32 	%r6383, %r6378, %r6379, 18;
	mov.b64 	%rd1347, {%r6383, %r6382};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 23;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 23;
	mov.b64 	%rd1349, {%r6385, %r6384};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	xor.b64  	%rd1351, %rd1309, %rd1076;
	and.b64  	%rd1352, %rd1334, %rd1351;
	xor.b64  	%rd1353, %rd1352, %rd1076;
	add.s64 	%rd1354, %rd1126, %rd1051;
	ld.const.u64 	%rd1355, [k_sha512+272];
	add.s64 	%rd1356, %rd1354, %rd1355;
	add.s64 	%rd1357, %rd1356, %rd1353;
	add.s64 	%rd1358, %rd1357, %rd1350;
	add.s64 	%rd1359, %rd1358, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd1345;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 28;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 28;
	mov.b64 	%rd1360, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 30;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 30;
	mov.b64 	%rd1361, {%r6391, %r6390};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shf.l.wrap.b32 	%r6392, %r6386, %r6387, 25;
	shf.l.wrap.b32 	%r6393, %r6387, %r6386, 25;
	mov.b64 	%rd1363, {%r6393, %r6392};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	and.b64  	%rd1365, %rd1345, %rd1320;
	xor.b64  	%rd1366, %rd1345, %rd1320;
	and.b64  	%rd1367, %rd1366, %rd1087;
	or.b64  	%rd1368, %rd1367, %rd1365;
	add.s64 	%rd1369, %rd1364, %rd1368;
	add.s64 	%rd1370, %rd1369, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6394,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6395}, %rd1359;
	}
	shf.r.wrap.b32 	%r6396, %r6395, %r6394, 14;
	shf.r.wrap.b32 	%r6397, %r6394, %r6395, 14;
	mov.b64 	%rd1371, {%r6397, %r6396};
	shf.r.wrap.b32 	%r6398, %r6395, %r6394, 18;
	shf.r.wrap.b32 	%r6399, %r6394, %r6395, 18;
	mov.b64 	%rd1372, {%r6399, %r6398};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	shf.l.wrap.b32 	%r6400, %r6394, %r6395, 23;
	shf.l.wrap.b32 	%r6401, %r6395, %r6394, 23;
	mov.b64 	%rd1374, {%r6401, %r6400};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	xor.b64  	%rd1376, %rd1334, %rd1309;
	and.b64  	%rd1377, %rd1359, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1309;
	add.s64 	%rd1379, %rd1139, %rd1076;
	ld.const.u64 	%rd1380, [k_sha512+280];
	add.s64 	%rd1381, %rd1379, %rd1380;
	add.s64 	%rd1382, %rd1381, %rd1378;
	add.s64 	%rd1383, %rd1382, %rd1375;
	add.s64 	%rd1384, %rd1383, %rd1087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6403}, %rd1370;
	}
	shf.r.wrap.b32 	%r6404, %r6403, %r6402, 28;
	shf.r.wrap.b32 	%r6405, %r6402, %r6403, 28;
	mov.b64 	%rd1385, {%r6405, %r6404};
	shf.l.wrap.b32 	%r6406, %r6402, %r6403, 30;
	shf.l.wrap.b32 	%r6407, %r6403, %r6402, 30;
	mov.b64 	%rd1386, {%r6407, %r6406};
	xor.b64  	%rd1387, %rd1385, %rd1386;
	shf.l.wrap.b32 	%r6408, %r6402, %r6403, 25;
	shf.l.wrap.b32 	%r6409, %r6403, %r6402, 25;
	mov.b64 	%rd1388, {%r6409, %r6408};
	xor.b64  	%rd1389, %rd1387, %rd1388;
	and.b64  	%rd1390, %rd1370, %rd1345;
	xor.b64  	%rd1391, %rd1370, %rd1345;
	and.b64  	%rd1392, %rd1391, %rd1320;
	or.b64  	%rd1393, %rd1392, %rd1390;
	add.s64 	%rd1394, %rd1389, %rd1393;
	add.s64 	%rd1395, %rd1394, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd1384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6411}, %rd1384;
	}
	shf.r.wrap.b32 	%r6412, %r6411, %r6410, 14;
	shf.r.wrap.b32 	%r6413, %r6410, %r6411, 14;
	mov.b64 	%rd1396, {%r6413, %r6412};
	shf.r.wrap.b32 	%r6414, %r6411, %r6410, 18;
	shf.r.wrap.b32 	%r6415, %r6410, %r6411, 18;
	mov.b64 	%rd1397, {%r6415, %r6414};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r6416, %r6410, %r6411, 23;
	shf.l.wrap.b32 	%r6417, %r6411, %r6410, 23;
	mov.b64 	%rd1399, {%r6417, %r6416};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	xor.b64  	%rd1401, %rd1359, %rd1334;
	and.b64  	%rd1402, %rd1384, %rd1401;
	xor.b64  	%rd1403, %rd1402, %rd1334;
	add.s64 	%rd1404, %rd1309, %rd1152;
	ld.const.u64 	%rd1405, [k_sha512+288];
	add.s64 	%rd1406, %rd1404, %rd1405;
	add.s64 	%rd1407, %rd1406, %rd1403;
	add.s64 	%rd1408, %rd1407, %rd1400;
	add.s64 	%rd1409, %rd1408, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6419}, %rd1395;
	}
	shf.r.wrap.b32 	%r6420, %r6419, %r6418, 28;
	shf.r.wrap.b32 	%r6421, %r6418, %r6419, 28;
	mov.b64 	%rd1410, {%r6421, %r6420};
	shf.l.wrap.b32 	%r6422, %r6418, %r6419, 30;
	shf.l.wrap.b32 	%r6423, %r6419, %r6418, 30;
	mov.b64 	%rd1411, {%r6423, %r6422};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	shf.l.wrap.b32 	%r6424, %r6418, %r6419, 25;
	shf.l.wrap.b32 	%r6425, %r6419, %r6418, 25;
	mov.b64 	%rd1413, {%r6425, %r6424};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	and.b64  	%rd1415, %rd1395, %rd1370;
	xor.b64  	%rd1416, %rd1395, %rd1370;
	and.b64  	%rd1417, %rd1416, %rd1345;
	or.b64  	%rd1418, %rd1417, %rd1415;
	add.s64 	%rd1419, %rd1414, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd1409;
	}
	shf.r.wrap.b32 	%r6428, %r6427, %r6426, 14;
	shf.r.wrap.b32 	%r6429, %r6426, %r6427, 14;
	mov.b64 	%rd1421, {%r6429, %r6428};
	shf.r.wrap.b32 	%r6430, %r6427, %r6426, 18;
	shf.r.wrap.b32 	%r6431, %r6426, %r6427, 18;
	mov.b64 	%rd1422, {%r6431, %r6430};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shf.l.wrap.b32 	%r6432, %r6426, %r6427, 23;
	shf.l.wrap.b32 	%r6433, %r6427, %r6426, 23;
	mov.b64 	%rd1424, {%r6433, %r6432};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd1384, %rd1359;
	and.b64  	%rd1427, %rd1409, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd1359;
	ld.const.u64 	%rd1429, [k_sha512+296];
	add.s64 	%rd1430, %rd1429, %rd1165;
	add.s64 	%rd1431, %rd1430, %rd1334;
	add.s64 	%rd1432, %rd1431, %rd1428;
	add.s64 	%rd1433, %rd1432, %rd1425;
	add.s64 	%rd1434, %rd1433, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6434,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6435}, %rd1420;
	}
	shf.r.wrap.b32 	%r6436, %r6435, %r6434, 28;
	shf.r.wrap.b32 	%r6437, %r6434, %r6435, 28;
	mov.b64 	%rd1435, {%r6437, %r6436};
	shf.l.wrap.b32 	%r6438, %r6434, %r6435, 30;
	shf.l.wrap.b32 	%r6439, %r6435, %r6434, 30;
	mov.b64 	%rd1436, {%r6439, %r6438};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	shf.l.wrap.b32 	%r6440, %r6434, %r6435, 25;
	shf.l.wrap.b32 	%r6441, %r6435, %r6434, 25;
	mov.b64 	%rd1438, {%r6441, %r6440};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	and.b64  	%rd1440, %rd1420, %rd1395;
	xor.b64  	%rd1441, %rd1420, %rd1395;
	and.b64  	%rd1442, %rd1441, %rd1370;
	or.b64  	%rd1443, %rd1442, %rd1440;
	add.s64 	%rd1444, %rd1439, %rd1443;
	add.s64 	%rd1445, %rd1444, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6442,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6443}, %rd1434;
	}
	shf.r.wrap.b32 	%r6444, %r6443, %r6442, 14;
	shf.r.wrap.b32 	%r6445, %r6442, %r6443, 14;
	mov.b64 	%rd1446, {%r6445, %r6444};
	shf.r.wrap.b32 	%r6446, %r6443, %r6442, 18;
	shf.r.wrap.b32 	%r6447, %r6442, %r6443, 18;
	mov.b64 	%rd1447, {%r6447, %r6446};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.l.wrap.b32 	%r6448, %r6442, %r6443, 23;
	shf.l.wrap.b32 	%r6449, %r6443, %r6442, 23;
	mov.b64 	%rd1449, {%r6449, %r6448};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	xor.b64  	%rd1451, %rd1409, %rd1384;
	and.b64  	%rd1452, %rd1434, %rd1451;
	xor.b64  	%rd1453, %rd1452, %rd1384;
	ld.const.u64 	%rd1454, [k_sha512+304];
	add.s64 	%rd1455, %rd1454, %rd1178;
	add.s64 	%rd1456, %rd1455, %rd1359;
	add.s64 	%rd1457, %rd1456, %rd1453;
	add.s64 	%rd1458, %rd1457, %rd1450;
	add.s64 	%rd1459, %rd1458, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd1445;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 28;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 28;
	mov.b64 	%rd1460, {%r6453, %r6452};
	shf.l.wrap.b32 	%r6454, %r6450, %r6451, 30;
	shf.l.wrap.b32 	%r6455, %r6451, %r6450, 30;
	mov.b64 	%rd1461, {%r6455, %r6454};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shf.l.wrap.b32 	%r6456, %r6450, %r6451, 25;
	shf.l.wrap.b32 	%r6457, %r6451, %r6450, 25;
	mov.b64 	%rd1463, {%r6457, %r6456};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	and.b64  	%rd1465, %rd1445, %rd1420;
	xor.b64  	%rd1466, %rd1445, %rd1420;
	and.b64  	%rd1467, %rd1466, %rd1395;
	or.b64  	%rd1468, %rd1467, %rd1465;
	add.s64 	%rd1469, %rd1464, %rd1468;
	add.s64 	%rd1470, %rd1469, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd1459;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 14;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 14;
	mov.b64 	%rd1471, {%r6461, %r6460};
	shf.r.wrap.b32 	%r6462, %r6459, %r6458, 18;
	shf.r.wrap.b32 	%r6463, %r6458, %r6459, 18;
	mov.b64 	%rd1472, {%r6463, %r6462};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 23;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 23;
	mov.b64 	%rd1474, {%r6465, %r6464};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	xor.b64  	%rd1476, %rd1434, %rd1409;
	and.b64  	%rd1477, %rd1459, %rd1476;
	xor.b64  	%rd1478, %rd1477, %rd1409;
	ld.const.u64 	%rd1479, [k_sha512+312];
	add.s64 	%rd1480, %rd1479, %rd1191;
	add.s64 	%rd1481, %rd1480, %rd1384;
	add.s64 	%rd1482, %rd1481, %rd1478;
	add.s64 	%rd1483, %rd1482, %rd1475;
	add.s64 	%rd1484, %rd1483, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd1470;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 28;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 28;
	mov.b64 	%rd1485, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 30;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 30;
	mov.b64 	%rd1486, {%r6471, %r6470};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	shf.l.wrap.b32 	%r6472, %r6466, %r6467, 25;
	shf.l.wrap.b32 	%r6473, %r6467, %r6466, 25;
	mov.b64 	%rd1488, {%r6473, %r6472};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	and.b64  	%rd1490, %rd1470, %rd1445;
	xor.b64  	%rd1491, %rd1470, %rd1445;
	and.b64  	%rd1492, %rd1491, %rd1420;
	or.b64  	%rd1493, %rd1492, %rd1490;
	add.s64 	%rd1494, %rd1489, %rd1493;
	add.s64 	%rd1495, %rd1494, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6475}, %rd1484;
	}
	shf.r.wrap.b32 	%r6476, %r6475, %r6474, 14;
	shf.r.wrap.b32 	%r6477, %r6474, %r6475, 14;
	mov.b64 	%rd1496, {%r6477, %r6476};
	shf.r.wrap.b32 	%r6478, %r6475, %r6474, 18;
	shf.r.wrap.b32 	%r6479, %r6474, %r6475, 18;
	mov.b64 	%rd1497, {%r6479, %r6478};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	shf.l.wrap.b32 	%r6480, %r6474, %r6475, 23;
	shf.l.wrap.b32 	%r6481, %r6475, %r6474, 23;
	mov.b64 	%rd1499, {%r6481, %r6480};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	xor.b64  	%rd1501, %rd1459, %rd1434;
	and.b64  	%rd1502, %rd1484, %rd1501;
	xor.b64  	%rd1503, %rd1502, %rd1434;
	ld.const.u64 	%rd1504, [k_sha512+320];
	add.s64 	%rd1505, %rd1504, %rd1204;
	add.s64 	%rd1506, %rd1505, %rd1409;
	add.s64 	%rd1507, %rd1506, %rd1503;
	add.s64 	%rd1508, %rd1507, %rd1500;
	add.s64 	%rd1509, %rd1508, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6482,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6483}, %rd1495;
	}
	shf.r.wrap.b32 	%r6484, %r6483, %r6482, 28;
	shf.r.wrap.b32 	%r6485, %r6482, %r6483, 28;
	mov.b64 	%rd1510, {%r6485, %r6484};
	shf.l.wrap.b32 	%r6486, %r6482, %r6483, 30;
	shf.l.wrap.b32 	%r6487, %r6483, %r6482, 30;
	mov.b64 	%rd1511, {%r6487, %r6486};
	xor.b64  	%rd1512, %rd1510, %rd1511;
	shf.l.wrap.b32 	%r6488, %r6482, %r6483, 25;
	shf.l.wrap.b32 	%r6489, %r6483, %r6482, 25;
	mov.b64 	%rd1513, {%r6489, %r6488};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	and.b64  	%rd1515, %rd1495, %rd1470;
	xor.b64  	%rd1516, %rd1495, %rd1470;
	and.b64  	%rd1517, %rd1516, %rd1445;
	or.b64  	%rd1518, %rd1517, %rd1515;
	add.s64 	%rd1519, %rd1514, %rd1518;
	add.s64 	%rd1520, %rd1519, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6491}, %rd1509;
	}
	shf.r.wrap.b32 	%r6492, %r6491, %r6490, 14;
	shf.r.wrap.b32 	%r6493, %r6490, %r6491, 14;
	mov.b64 	%rd1521, {%r6493, %r6492};
	shf.r.wrap.b32 	%r6494, %r6491, %r6490, 18;
	shf.r.wrap.b32 	%r6495, %r6490, %r6491, 18;
	mov.b64 	%rd1522, {%r6495, %r6494};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	shf.l.wrap.b32 	%r6496, %r6490, %r6491, 23;
	shf.l.wrap.b32 	%r6497, %r6491, %r6490, 23;
	mov.b64 	%rd1524, {%r6497, %r6496};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	xor.b64  	%rd1526, %rd1484, %rd1459;
	and.b64  	%rd1527, %rd1509, %rd1526;
	xor.b64  	%rd1528, %rd1527, %rd1459;
	ld.const.u64 	%rd1529, [k_sha512+328];
	add.s64 	%rd1530, %rd1529, %rd1217;
	add.s64 	%rd1531, %rd1530, %rd1434;
	add.s64 	%rd1532, %rd1531, %rd1528;
	add.s64 	%rd1533, %rd1532, %rd1525;
	add.s64 	%rd1534, %rd1533, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6499}, %rd1520;
	}
	shf.r.wrap.b32 	%r6500, %r6499, %r6498, 28;
	shf.r.wrap.b32 	%r6501, %r6498, %r6499, 28;
	mov.b64 	%rd1535, {%r6501, %r6500};
	shf.l.wrap.b32 	%r6502, %r6498, %r6499, 30;
	shf.l.wrap.b32 	%r6503, %r6499, %r6498, 30;
	mov.b64 	%rd1536, {%r6503, %r6502};
	xor.b64  	%rd1537, %rd1535, %rd1536;
	shf.l.wrap.b32 	%r6504, %r6498, %r6499, 25;
	shf.l.wrap.b32 	%r6505, %r6499, %r6498, 25;
	mov.b64 	%rd1538, {%r6505, %r6504};
	xor.b64  	%rd1539, %rd1537, %rd1538;
	and.b64  	%rd1540, %rd1520, %rd1495;
	xor.b64  	%rd1541, %rd1520, %rd1495;
	and.b64  	%rd1542, %rd1541, %rd1470;
	or.b64  	%rd1543, %rd1542, %rd1540;
	add.s64 	%rd1544, %rd1539, %rd1543;
	add.s64 	%rd1545, %rd1544, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6506,%dummy}, %rd1534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6507}, %rd1534;
	}
	shf.r.wrap.b32 	%r6508, %r6507, %r6506, 14;
	shf.r.wrap.b32 	%r6509, %r6506, %r6507, 14;
	mov.b64 	%rd1546, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6507, %r6506, 18;
	shf.r.wrap.b32 	%r6511, %r6506, %r6507, 18;
	mov.b64 	%rd1547, {%r6511, %r6510};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	shf.l.wrap.b32 	%r6512, %r6506, %r6507, 23;
	shf.l.wrap.b32 	%r6513, %r6507, %r6506, 23;
	mov.b64 	%rd1549, {%r6513, %r6512};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	xor.b64  	%rd1551, %rd1509, %rd1484;
	and.b64  	%rd1552, %rd1534, %rd1551;
	xor.b64  	%rd1553, %rd1552, %rd1484;
	ld.const.u64 	%rd1554, [k_sha512+336];
	add.s64 	%rd1555, %rd1554, %rd1230;
	add.s64 	%rd1556, %rd1555, %rd1459;
	add.s64 	%rd1557, %rd1556, %rd1553;
	add.s64 	%rd1558, %rd1557, %rd1550;
	add.s64 	%rd1559, %rd1558, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd1545;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 28;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 28;
	mov.b64 	%rd1560, {%r6517, %r6516};
	shf.l.wrap.b32 	%r6518, %r6514, %r6515, 30;
	shf.l.wrap.b32 	%r6519, %r6515, %r6514, 30;
	mov.b64 	%rd1561, {%r6519, %r6518};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 25;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 25;
	mov.b64 	%rd1563, {%r6521, %r6520};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	and.b64  	%rd1565, %rd1545, %rd1520;
	xor.b64  	%rd1566, %rd1545, %rd1520;
	and.b64  	%rd1567, %rd1566, %rd1495;
	or.b64  	%rd1568, %rd1567, %rd1565;
	add.s64 	%rd1569, %rd1564, %rd1568;
	add.s64 	%rd1570, %rd1569, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd1559;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 14;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 14;
	mov.b64 	%rd1571, {%r6525, %r6524};
	shf.r.wrap.b32 	%r6526, %r6523, %r6522, 18;
	shf.r.wrap.b32 	%r6527, %r6522, %r6523, 18;
	mov.b64 	%rd1572, {%r6527, %r6526};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shf.l.wrap.b32 	%r6528, %r6522, %r6523, 23;
	shf.l.wrap.b32 	%r6529, %r6523, %r6522, 23;
	mov.b64 	%rd1574, {%r6529, %r6528};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1534, %rd1509;
	and.b64  	%rd1577, %rd1559, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1509;
	ld.const.u64 	%rd1579, [k_sha512+344];
	add.s64 	%rd1580, %rd1579, %rd1243;
	add.s64 	%rd1581, %rd1580, %rd1484;
	add.s64 	%rd1582, %rd1581, %rd1578;
	add.s64 	%rd1583, %rd1582, %rd1575;
	add.s64 	%rd1584, %rd1583, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6531}, %rd1570;
	}
	shf.r.wrap.b32 	%r6532, %r6531, %r6530, 28;
	shf.r.wrap.b32 	%r6533, %r6530, %r6531, 28;
	mov.b64 	%rd1585, {%r6533, %r6532};
	shf.l.wrap.b32 	%r6534, %r6530, %r6531, 30;
	shf.l.wrap.b32 	%r6535, %r6531, %r6530, 30;
	mov.b64 	%rd1586, {%r6535, %r6534};
	xor.b64  	%rd1587, %rd1585, %rd1586;
	shf.l.wrap.b32 	%r6536, %r6530, %r6531, 25;
	shf.l.wrap.b32 	%r6537, %r6531, %r6530, 25;
	mov.b64 	%rd1588, {%r6537, %r6536};
	xor.b64  	%rd1589, %rd1587, %rd1588;
	and.b64  	%rd1590, %rd1570, %rd1545;
	xor.b64  	%rd1591, %rd1570, %rd1545;
	and.b64  	%rd1592, %rd1591, %rd1520;
	or.b64  	%rd1593, %rd1592, %rd1590;
	add.s64 	%rd1594, %rd1589, %rd1593;
	add.s64 	%rd1595, %rd1594, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6538,%dummy}, %rd1584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6539}, %rd1584;
	}
	shf.r.wrap.b32 	%r6540, %r6539, %r6538, 14;
	shf.r.wrap.b32 	%r6541, %r6538, %r6539, 14;
	mov.b64 	%rd1596, {%r6541, %r6540};
	shf.r.wrap.b32 	%r6542, %r6539, %r6538, 18;
	shf.r.wrap.b32 	%r6543, %r6538, %r6539, 18;
	mov.b64 	%rd1597, {%r6543, %r6542};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	shf.l.wrap.b32 	%r6544, %r6538, %r6539, 23;
	shf.l.wrap.b32 	%r6545, %r6539, %r6538, 23;
	mov.b64 	%rd1599, {%r6545, %r6544};
	xor.b64  	%rd1600, %rd1598, %rd1599;
	xor.b64  	%rd1601, %rd1559, %rd1534;
	and.b64  	%rd1602, %rd1584, %rd1601;
	xor.b64  	%rd1603, %rd1602, %rd1534;
	ld.const.u64 	%rd1604, [k_sha512+352];
	add.s64 	%rd1605, %rd1604, %rd1256;
	add.s64 	%rd1606, %rd1605, %rd1509;
	add.s64 	%rd1607, %rd1606, %rd1603;
	add.s64 	%rd1608, %rd1607, %rd1600;
	add.s64 	%rd1609, %rd1608, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd1595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6547}, %rd1595;
	}
	shf.r.wrap.b32 	%r6548, %r6547, %r6546, 28;
	shf.r.wrap.b32 	%r6549, %r6546, %r6547, 28;
	mov.b64 	%rd1610, {%r6549, %r6548};
	shf.l.wrap.b32 	%r6550, %r6546, %r6547, 30;
	shf.l.wrap.b32 	%r6551, %r6547, %r6546, 30;
	mov.b64 	%rd1611, {%r6551, %r6550};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	shf.l.wrap.b32 	%r6552, %r6546, %r6547, 25;
	shf.l.wrap.b32 	%r6553, %r6547, %r6546, 25;
	mov.b64 	%rd1613, {%r6553, %r6552};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	and.b64  	%rd1615, %rd1595, %rd1570;
	xor.b64  	%rd1616, %rd1595, %rd1570;
	and.b64  	%rd1617, %rd1616, %rd1545;
	or.b64  	%rd1618, %rd1617, %rd1615;
	add.s64 	%rd1619, %rd1614, %rd1618;
	add.s64 	%rd1620, %rd1619, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd1609;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 14;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 14;
	mov.b64 	%rd1621, {%r6557, %r6556};
	shf.r.wrap.b32 	%r6558, %r6555, %r6554, 18;
	shf.r.wrap.b32 	%r6559, %r6554, %r6555, 18;
	mov.b64 	%rd1622, {%r6559, %r6558};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	shf.l.wrap.b32 	%r6560, %r6554, %r6555, 23;
	shf.l.wrap.b32 	%r6561, %r6555, %r6554, 23;
	mov.b64 	%rd1624, {%r6561, %r6560};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	xor.b64  	%rd1626, %rd1584, %rd1559;
	and.b64  	%rd1627, %rd1609, %rd1626;
	xor.b64  	%rd1628, %rd1627, %rd1559;
	ld.const.u64 	%rd1629, [k_sha512+360];
	add.s64 	%rd1630, %rd1629, %rd1269;
	add.s64 	%rd1631, %rd1630, %rd1534;
	add.s64 	%rd1632, %rd1631, %rd1628;
	add.s64 	%rd1633, %rd1632, %rd1625;
	add.s64 	%rd1634, %rd1633, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6562,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6563}, %rd1620;
	}
	shf.r.wrap.b32 	%r6564, %r6563, %r6562, 28;
	shf.r.wrap.b32 	%r6565, %r6562, %r6563, 28;
	mov.b64 	%rd1635, {%r6565, %r6564};
	shf.l.wrap.b32 	%r6566, %r6562, %r6563, 30;
	shf.l.wrap.b32 	%r6567, %r6563, %r6562, 30;
	mov.b64 	%rd1636, {%r6567, %r6566};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	shf.l.wrap.b32 	%r6568, %r6562, %r6563, 25;
	shf.l.wrap.b32 	%r6569, %r6563, %r6562, 25;
	mov.b64 	%rd1638, {%r6569, %r6568};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	and.b64  	%rd1640, %rd1620, %rd1595;
	xor.b64  	%rd1641, %rd1620, %rd1595;
	and.b64  	%rd1642, %rd1641, %rd1570;
	or.b64  	%rd1643, %rd1642, %rd1640;
	add.s64 	%rd1644, %rd1639, %rd1643;
	add.s64 	%rd1645, %rd1644, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6571}, %rd1634;
	}
	shf.r.wrap.b32 	%r6572, %r6571, %r6570, 14;
	shf.r.wrap.b32 	%r6573, %r6570, %r6571, 14;
	mov.b64 	%rd1646, {%r6573, %r6572};
	shf.r.wrap.b32 	%r6574, %r6571, %r6570, 18;
	shf.r.wrap.b32 	%r6575, %r6570, %r6571, 18;
	mov.b64 	%rd1647, {%r6575, %r6574};
	xor.b64  	%rd1648, %rd1646, %rd1647;
	shf.l.wrap.b32 	%r6576, %r6570, %r6571, 23;
	shf.l.wrap.b32 	%r6577, %r6571, %r6570, 23;
	mov.b64 	%rd1649, {%r6577, %r6576};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	xor.b64  	%rd1651, %rd1609, %rd1584;
	and.b64  	%rd1652, %rd1634, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1584;
	ld.const.u64 	%rd1654, [k_sha512+368];
	add.s64 	%rd1655, %rd1654, %rd1282;
	add.s64 	%rd1656, %rd1655, %rd1559;
	add.s64 	%rd1657, %rd1656, %rd1653;
	add.s64 	%rd1658, %rd1657, %rd1650;
	add.s64 	%rd1659, %rd1658, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd1645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6579}, %rd1645;
	}
	shf.r.wrap.b32 	%r6580, %r6579, %r6578, 28;
	shf.r.wrap.b32 	%r6581, %r6578, %r6579, 28;
	mov.b64 	%rd1660, {%r6581, %r6580};
	shf.l.wrap.b32 	%r6582, %r6578, %r6579, 30;
	shf.l.wrap.b32 	%r6583, %r6579, %r6578, 30;
	mov.b64 	%rd1661, {%r6583, %r6582};
	xor.b64  	%rd1662, %rd1660, %rd1661;
	shf.l.wrap.b32 	%r6584, %r6578, %r6579, 25;
	shf.l.wrap.b32 	%r6585, %r6579, %r6578, 25;
	mov.b64 	%rd1663, {%r6585, %r6584};
	xor.b64  	%rd1664, %rd1662, %rd1663;
	and.b64  	%rd1665, %rd1645, %rd1620;
	xor.b64  	%rd1666, %rd1645, %rd1620;
	and.b64  	%rd1667, %rd1666, %rd1595;
	or.b64  	%rd1668, %rd1667, %rd1665;
	add.s64 	%rd1669, %rd1664, %rd1668;
	add.s64 	%rd1670, %rd1669, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6587}, %rd1659;
	}
	shf.r.wrap.b32 	%r6588, %r6587, %r6586, 14;
	shf.r.wrap.b32 	%r6589, %r6586, %r6587, 14;
	mov.b64 	%rd1671, {%r6589, %r6588};
	shf.r.wrap.b32 	%r6590, %r6587, %r6586, 18;
	shf.r.wrap.b32 	%r6591, %r6586, %r6587, 18;
	mov.b64 	%rd1672, {%r6591, %r6590};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	shf.l.wrap.b32 	%r6592, %r6586, %r6587, 23;
	shf.l.wrap.b32 	%r6593, %r6587, %r6586, 23;
	mov.b64 	%rd1674, {%r6593, %r6592};
	xor.b64  	%rd1675, %rd1673, %rd1674;
	xor.b64  	%rd1676, %rd1634, %rd1609;
	and.b64  	%rd1677, %rd1659, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1609;
	ld.const.u64 	%rd1679, [k_sha512+376];
	add.s64 	%rd1680, %rd1679, %rd1295;
	add.s64 	%rd1681, %rd1680, %rd1584;
	add.s64 	%rd1682, %rd1681, %rd1678;
	add.s64 	%rd1683, %rd1682, %rd1675;
	add.s64 	%rd1684, %rd1683, %rd1595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6594,%dummy}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6595}, %rd1670;
	}
	shf.r.wrap.b32 	%r6596, %r6595, %r6594, 28;
	shf.r.wrap.b32 	%r6597, %r6594, %r6595, 28;
	mov.b64 	%rd1685, {%r6597, %r6596};
	shf.l.wrap.b32 	%r6598, %r6594, %r6595, 30;
	shf.l.wrap.b32 	%r6599, %r6595, %r6594, 30;
	mov.b64 	%rd1686, {%r6599, %r6598};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	shf.l.wrap.b32 	%r6600, %r6594, %r6595, 25;
	shf.l.wrap.b32 	%r6601, %r6595, %r6594, 25;
	mov.b64 	%rd1688, {%r6601, %r6600};
	xor.b64  	%rd1689, %rd1687, %rd1688;
	and.b64  	%rd1690, %rd1670, %rd1645;
	xor.b64  	%rd1691, %rd1670, %rd1645;
	and.b64  	%rd1692, %rd1691, %rd1620;
	or.b64  	%rd1693, %rd1692, %rd1690;
	add.s64 	%rd1694, %rd1689, %rd1693;
	add.s64 	%rd1695, %rd1694, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd1282;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 19;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 19;
	mov.b64 	%rd1696, {%r6605, %r6604};
	shf.l.wrap.b32 	%r6606, %r6602, %r6603, 3;
	shf.l.wrap.b32 	%r6607, %r6603, %r6602, 3;
	mov.b64 	%rd1697, {%r6607, %r6606};
	shr.u64 	%rd1698, %rd1282, 6;
	xor.b64  	%rd1699, %rd1697, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1696;
	shf.r.wrap.b32 	%r6608, %r6217, %r6216, 1;
	shf.r.wrap.b32 	%r6609, %r6216, %r6217, 1;
	mov.b64 	%rd1701, {%r6609, %r6608};
	shf.r.wrap.b32 	%r6610, %r6217, %r6216, 8;
	shf.r.wrap.b32 	%r6611, %r6216, %r6217, 8;
	mov.b64 	%rd1702, {%r6611, %r6610};
	shr.u64 	%rd1703, %rd1113, 7;
	xor.b64  	%rd1704, %rd1702, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1701;
	add.s64 	%rd1706, %rd1705, %rd1100;
	add.s64 	%rd1707, %rd1706, %rd1217;
	add.s64 	%rd1708, %rd1707, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6612,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd1295;
	}
	shf.r.wrap.b32 	%r6614, %r6613, %r6612, 19;
	shf.r.wrap.b32 	%r6615, %r6612, %r6613, 19;
	mov.b64 	%rd1709, {%r6615, %r6614};
	shf.l.wrap.b32 	%r6616, %r6612, %r6613, 3;
	shf.l.wrap.b32 	%r6617, %r6613, %r6612, 3;
	mov.b64 	%rd1710, {%r6617, %r6616};
	shr.u64 	%rd1711, %rd1295, 6;
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1709;
	shf.r.wrap.b32 	%r6618, %r6227, %r6226, 1;
	shf.r.wrap.b32 	%r6619, %r6226, %r6227, 1;
	mov.b64 	%rd1714, {%r6619, %r6618};
	shf.r.wrap.b32 	%r6620, %r6227, %r6226, 8;
	shf.r.wrap.b32 	%r6621, %r6226, %r6227, 8;
	mov.b64 	%rd1715, {%r6621, %r6620};
	shr.u64 	%rd1716, %rd1126, 7;
	xor.b64  	%rd1717, %rd1715, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1714;
	add.s64 	%rd1719, %rd1718, %rd1113;
	add.s64 	%rd1720, %rd1719, %rd1230;
	add.s64 	%rd1721, %rd1720, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6622,%dummy}, %rd1708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6623}, %rd1708;
	}
	shf.r.wrap.b32 	%r6624, %r6623, %r6622, 19;
	shf.r.wrap.b32 	%r6625, %r6622, %r6623, 19;
	mov.b64 	%rd1722, {%r6625, %r6624};
	shf.l.wrap.b32 	%r6626, %r6622, %r6623, 3;
	shf.l.wrap.b32 	%r6627, %r6623, %r6622, 3;
	mov.b64 	%rd1723, {%r6627, %r6626};
	shr.u64 	%rd1724, %rd1708, 6;
	xor.b64  	%rd1725, %rd1723, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1722;
	shf.r.wrap.b32 	%r6628, %r6237, %r6236, 1;
	shf.r.wrap.b32 	%r6629, %r6236, %r6237, 1;
	mov.b64 	%rd1727, {%r6629, %r6628};
	shf.r.wrap.b32 	%r6630, %r6237, %r6236, 8;
	shf.r.wrap.b32 	%r6631, %r6236, %r6237, 8;
	mov.b64 	%rd1728, {%r6631, %r6630};
	shr.u64 	%rd1729, %rd1139, 7;
	xor.b64  	%rd1730, %rd1728, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1727;
	add.s64 	%rd1732, %rd1731, %rd1126;
	add.s64 	%rd1733, %rd1732, %rd1243;
	add.s64 	%rd1734, %rd1733, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6632,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd1721;
	}
	shf.r.wrap.b32 	%r6634, %r6633, %r6632, 19;
	shf.r.wrap.b32 	%r6635, %r6632, %r6633, 19;
	mov.b64 	%rd1735, {%r6635, %r6634};
	shf.l.wrap.b32 	%r6636, %r6632, %r6633, 3;
	shf.l.wrap.b32 	%r6637, %r6633, %r6632, 3;
	mov.b64 	%rd1736, {%r6637, %r6636};
	shr.u64 	%rd1737, %rd1721, 6;
	xor.b64  	%rd1738, %rd1736, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1735;
	shf.r.wrap.b32 	%r6638, %r6247, %r6246, 1;
	shf.r.wrap.b32 	%r6639, %r6246, %r6247, 1;
	mov.b64 	%rd1740, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6247, %r6246, 8;
	shf.r.wrap.b32 	%r6641, %r6246, %r6247, 8;
	mov.b64 	%rd1741, {%r6641, %r6640};
	shr.u64 	%rd1742, %rd1152, 7;
	xor.b64  	%rd1743, %rd1741, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1740;
	add.s64 	%rd1745, %rd1744, %rd1139;
	add.s64 	%rd1746, %rd1745, %rd1256;
	add.s64 	%rd1747, %rd1746, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd1734;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 19;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 19;
	mov.b64 	%rd1748, {%r6645, %r6644};
	shf.l.wrap.b32 	%r6646, %r6642, %r6643, 3;
	shf.l.wrap.b32 	%r6647, %r6643, %r6642, 3;
	mov.b64 	%rd1749, {%r6647, %r6646};
	shr.u64 	%rd1750, %rd1734, 6;
	xor.b64  	%rd1751, %rd1749, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1748;
	shf.r.wrap.b32 	%r6648, %r6257, %r6256, 1;
	shf.r.wrap.b32 	%r6649, %r6256, %r6257, 1;
	mov.b64 	%rd1753, {%r6649, %r6648};
	shf.r.wrap.b32 	%r6650, %r6257, %r6256, 8;
	shf.r.wrap.b32 	%r6651, %r6256, %r6257, 8;
	mov.b64 	%rd1754, {%r6651, %r6650};
	shr.u64 	%rd1755, %rd1165, 7;
	xor.b64  	%rd1756, %rd1754, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1753;
	add.s64 	%rd1758, %rd1757, %rd1152;
	add.s64 	%rd1759, %rd1758, %rd1269;
	add.s64 	%rd1760, %rd1759, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd1747;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 19;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 19;
	mov.b64 	%rd1761, {%r6655, %r6654};
	shf.l.wrap.b32 	%r6656, %r6652, %r6653, 3;
	shf.l.wrap.b32 	%r6657, %r6653, %r6652, 3;
	mov.b64 	%rd1762, {%r6657, %r6656};
	shr.u64 	%rd1763, %rd1747, 6;
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1761;
	shf.r.wrap.b32 	%r6658, %r6267, %r6266, 1;
	shf.r.wrap.b32 	%r6659, %r6266, %r6267, 1;
	mov.b64 	%rd1766, {%r6659, %r6658};
	shf.r.wrap.b32 	%r6660, %r6267, %r6266, 8;
	shf.r.wrap.b32 	%r6661, %r6266, %r6267, 8;
	mov.b64 	%rd1767, {%r6661, %r6660};
	shr.u64 	%rd1768, %rd1178, 7;
	xor.b64  	%rd1769, %rd1767, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1766;
	add.s64 	%rd1771, %rd1770, %rd1165;
	add.s64 	%rd1772, %rd1771, %rd1282;
	add.s64 	%rd1773, %rd1772, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6663}, %rd1760;
	}
	shf.r.wrap.b32 	%r6664, %r6663, %r6662, 19;
	shf.r.wrap.b32 	%r6665, %r6662, %r6663, 19;
	mov.b64 	%rd1774, {%r6665, %r6664};
	shf.l.wrap.b32 	%r6666, %r6662, %r6663, 3;
	shf.l.wrap.b32 	%r6667, %r6663, %r6662, 3;
	mov.b64 	%rd1775, {%r6667, %r6666};
	shr.u64 	%rd1776, %rd1760, 6;
	xor.b64  	%rd1777, %rd1775, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1774;
	shf.r.wrap.b32 	%r6668, %r6277, %r6276, 1;
	shf.r.wrap.b32 	%r6669, %r6276, %r6277, 1;
	mov.b64 	%rd1779, {%r6669, %r6668};
	shf.r.wrap.b32 	%r6670, %r6277, %r6276, 8;
	shf.r.wrap.b32 	%r6671, %r6276, %r6277, 8;
	mov.b64 	%rd1780, {%r6671, %r6670};
	shr.u64 	%rd1781, %rd1191, 7;
	xor.b64  	%rd1782, %rd1780, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1779;
	add.s64 	%rd1784, %rd1783, %rd1178;
	add.s64 	%rd1785, %rd1784, %rd1295;
	add.s64 	%rd1786, %rd1785, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6672,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6673}, %rd1773;
	}
	shf.r.wrap.b32 	%r6674, %r6673, %r6672, 19;
	shf.r.wrap.b32 	%r6675, %r6672, %r6673, 19;
	mov.b64 	%rd1787, {%r6675, %r6674};
	shf.l.wrap.b32 	%r6676, %r6672, %r6673, 3;
	shf.l.wrap.b32 	%r6677, %r6673, %r6672, 3;
	mov.b64 	%rd1788, {%r6677, %r6676};
	shr.u64 	%rd1789, %rd1773, 6;
	xor.b64  	%rd1790, %rd1788, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1787;
	shf.r.wrap.b32 	%r6678, %r6287, %r6286, 1;
	shf.r.wrap.b32 	%r6679, %r6286, %r6287, 1;
	mov.b64 	%rd1792, {%r6679, %r6678};
	shf.r.wrap.b32 	%r6680, %r6287, %r6286, 8;
	shf.r.wrap.b32 	%r6681, %r6286, %r6287, 8;
	mov.b64 	%rd1793, {%r6681, %r6680};
	shr.u64 	%rd1794, %rd1204, 7;
	xor.b64  	%rd1795, %rd1793, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1792;
	add.s64 	%rd1797, %rd1796, %rd1191;
	add.s64 	%rd1798, %rd1797, %rd1708;
	add.s64 	%rd1799, %rd1798, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd1786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd1786;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 19;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 19;
	mov.b64 	%rd1800, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 3;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 3;
	mov.b64 	%rd1801, {%r6687, %r6686};
	shr.u64 	%rd1802, %rd1786, 6;
	xor.b64  	%rd1803, %rd1801, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1800;
	shf.r.wrap.b32 	%r6688, %r6297, %r6296, 1;
	shf.r.wrap.b32 	%r6689, %r6296, %r6297, 1;
	mov.b64 	%rd1805, {%r6689, %r6688};
	shf.r.wrap.b32 	%r6690, %r6297, %r6296, 8;
	shf.r.wrap.b32 	%r6691, %r6296, %r6297, 8;
	mov.b64 	%rd1806, {%r6691, %r6690};
	shr.u64 	%rd1807, %rd1217, 7;
	xor.b64  	%rd1808, %rd1806, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1805;
	add.s64 	%rd1810, %rd1809, %rd1204;
	add.s64 	%rd1811, %rd1810, %rd1721;
	add.s64 	%rd1812, %rd1811, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd1799;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 19;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 19;
	mov.b64 	%rd1813, {%r6695, %r6694};
	shf.l.wrap.b32 	%r6696, %r6692, %r6693, 3;
	shf.l.wrap.b32 	%r6697, %r6693, %r6692, 3;
	mov.b64 	%rd1814, {%r6697, %r6696};
	shr.u64 	%rd1815, %rd1799, 6;
	xor.b64  	%rd1816, %rd1814, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1813;
	shf.r.wrap.b32 	%r6698, %r6307, %r6306, 1;
	shf.r.wrap.b32 	%r6699, %r6306, %r6307, 1;
	mov.b64 	%rd1818, {%r6699, %r6698};
	shf.r.wrap.b32 	%r6700, %r6307, %r6306, 8;
	shf.r.wrap.b32 	%r6701, %r6306, %r6307, 8;
	mov.b64 	%rd1819, {%r6701, %r6700};
	shr.u64 	%rd1820, %rd1230, 7;
	xor.b64  	%rd1821, %rd1819, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1818;
	add.s64 	%rd1823, %rd1822, %rd1217;
	add.s64 	%rd1824, %rd1823, %rd1734;
	add.s64 	%rd1825, %rd1824, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6703}, %rd1812;
	}
	shf.r.wrap.b32 	%r6704, %r6703, %r6702, 19;
	shf.r.wrap.b32 	%r6705, %r6702, %r6703, 19;
	mov.b64 	%rd1826, {%r6705, %r6704};
	shf.l.wrap.b32 	%r6706, %r6702, %r6703, 3;
	shf.l.wrap.b32 	%r6707, %r6703, %r6702, 3;
	mov.b64 	%rd1827, {%r6707, %r6706};
	shr.u64 	%rd1828, %rd1812, 6;
	xor.b64  	%rd1829, %rd1827, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1826;
	shf.r.wrap.b32 	%r6708, %r6317, %r6316, 1;
	shf.r.wrap.b32 	%r6709, %r6316, %r6317, 1;
	mov.b64 	%rd1831, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6317, %r6316, 8;
	shf.r.wrap.b32 	%r6711, %r6316, %r6317, 8;
	mov.b64 	%rd1832, {%r6711, %r6710};
	shr.u64 	%rd1833, %rd1243, 7;
	xor.b64  	%rd1834, %rd1832, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1831;
	add.s64 	%rd1836, %rd1835, %rd1230;
	add.s64 	%rd1837, %rd1836, %rd1747;
	add.s64 	%rd1838, %rd1837, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6712,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6713}, %rd1825;
	}
	shf.r.wrap.b32 	%r6714, %r6713, %r6712, 19;
	shf.r.wrap.b32 	%r6715, %r6712, %r6713, 19;
	mov.b64 	%rd1839, {%r6715, %r6714};
	shf.l.wrap.b32 	%r6716, %r6712, %r6713, 3;
	shf.l.wrap.b32 	%r6717, %r6713, %r6712, 3;
	mov.b64 	%rd1840, {%r6717, %r6716};
	shr.u64 	%rd1841, %rd1825, 6;
	xor.b64  	%rd1842, %rd1840, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1839;
	shf.r.wrap.b32 	%r6718, %r6327, %r6326, 1;
	shf.r.wrap.b32 	%r6719, %r6326, %r6327, 1;
	mov.b64 	%rd1844, {%r6719, %r6718};
	shf.r.wrap.b32 	%r6720, %r6327, %r6326, 8;
	shf.r.wrap.b32 	%r6721, %r6326, %r6327, 8;
	mov.b64 	%rd1845, {%r6721, %r6720};
	shr.u64 	%rd1846, %rd1256, 7;
	xor.b64  	%rd1847, %rd1845, %rd1846;
	xor.b64  	%rd1848, %rd1847, %rd1844;
	add.s64 	%rd1849, %rd1848, %rd1243;
	add.s64 	%rd1850, %rd1849, %rd1760;
	add.s64 	%rd1851, %rd1850, %rd1843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd1838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd1838;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 19;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 19;
	mov.b64 	%rd1852, {%r6725, %r6724};
	shf.l.wrap.b32 	%r6726, %r6722, %r6723, 3;
	shf.l.wrap.b32 	%r6727, %r6723, %r6722, 3;
	mov.b64 	%rd1853, {%r6727, %r6726};
	shr.u64 	%rd1854, %rd1838, 6;
	xor.b64  	%rd1855, %rd1853, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1852;
	shf.r.wrap.b32 	%r6728, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6729, %r6336, %r6337, 1;
	mov.b64 	%rd1857, {%r6729, %r6728};
	shf.r.wrap.b32 	%r6730, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6731, %r6336, %r6337, 8;
	mov.b64 	%rd1858, {%r6731, %r6730};
	shr.u64 	%rd1859, %rd1269, 7;
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1857;
	add.s64 	%rd1862, %rd1861, %rd1256;
	add.s64 	%rd1863, %rd1862, %rd1773;
	add.s64 	%rd1864, %rd1863, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd1851;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 19;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 19;
	mov.b64 	%rd1865, {%r6735, %r6734};
	shf.l.wrap.b32 	%r6736, %r6732, %r6733, 3;
	shf.l.wrap.b32 	%r6737, %r6733, %r6732, 3;
	mov.b64 	%rd1866, {%r6737, %r6736};
	shr.u64 	%rd1867, %rd1851, 6;
	xor.b64  	%rd1868, %rd1866, %rd1867;
	xor.b64  	%rd1869, %rd1868, %rd1865;
	shf.r.wrap.b32 	%r6738, %r6603, %r6602, 1;
	shf.r.wrap.b32 	%r6739, %r6602, %r6603, 1;
	mov.b64 	%rd1870, {%r6739, %r6738};
	shf.r.wrap.b32 	%r6740, %r6603, %r6602, 8;
	shf.r.wrap.b32 	%r6741, %r6602, %r6603, 8;
	mov.b64 	%rd1871, {%r6741, %r6740};
	shr.u64 	%rd1872, %rd1282, 7;
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1870;
	add.s64 	%rd1875, %rd1874, %rd1269;
	add.s64 	%rd1876, %rd1875, %rd1786;
	add.s64 	%rd1877, %rd1876, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6742,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6743}, %rd1864;
	}
	shf.r.wrap.b32 	%r6744, %r6743, %r6742, 19;
	shf.r.wrap.b32 	%r6745, %r6742, %r6743, 19;
	mov.b64 	%rd1878, {%r6745, %r6744};
	shf.l.wrap.b32 	%r6746, %r6742, %r6743, 3;
	shf.l.wrap.b32 	%r6747, %r6743, %r6742, 3;
	mov.b64 	%rd1879, {%r6747, %r6746};
	shr.u64 	%rd1880, %rd1864, 6;
	xor.b64  	%rd1881, %rd1879, %rd1880;
	xor.b64  	%rd1882, %rd1881, %rd1878;
	shf.r.wrap.b32 	%r6748, %r6613, %r6612, 1;
	shf.r.wrap.b32 	%r6749, %r6612, %r6613, 1;
	mov.b64 	%rd1883, {%r6749, %r6748};
	shf.r.wrap.b32 	%r6750, %r6613, %r6612, 8;
	shf.r.wrap.b32 	%r6751, %r6612, %r6613, 8;
	mov.b64 	%rd1884, {%r6751, %r6750};
	shr.u64 	%rd1885, %rd1295, 7;
	xor.b64  	%rd1886, %rd1884, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1883;
	add.s64 	%rd1888, %rd1887, %rd1282;
	add.s64 	%rd1889, %rd1888, %rd1799;
	add.s64 	%rd1890, %rd1889, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6752,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd1877;
	}
	shf.r.wrap.b32 	%r6754, %r6753, %r6752, 19;
	shf.r.wrap.b32 	%r6755, %r6752, %r6753, 19;
	mov.b64 	%rd1891, {%r6755, %r6754};
	shf.l.wrap.b32 	%r6756, %r6752, %r6753, 3;
	shf.l.wrap.b32 	%r6757, %r6753, %r6752, 3;
	mov.b64 	%rd1892, {%r6757, %r6756};
	shr.u64 	%rd1893, %rd1877, 6;
	xor.b64  	%rd1894, %rd1892, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1891;
	shf.r.wrap.b32 	%r6758, %r6623, %r6622, 1;
	shf.r.wrap.b32 	%r6759, %r6622, %r6623, 1;
	mov.b64 	%rd1896, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6623, %r6622, 8;
	shf.r.wrap.b32 	%r6761, %r6622, %r6623, 8;
	mov.b64 	%rd1897, {%r6761, %r6760};
	shr.u64 	%rd1898, %rd1708, 7;
	xor.b64  	%rd1899, %rd1897, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1896;
	add.s64 	%rd1901, %rd1900, %rd1295;
	add.s64 	%rd1902, %rd1901, %rd1812;
	add.s64 	%rd1903, %rd1902, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd1684;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 14;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 14;
	mov.b64 	%rd1904, {%r6765, %r6764};
	shf.r.wrap.b32 	%r6766, %r6763, %r6762, 18;
	shf.r.wrap.b32 	%r6767, %r6762, %r6763, 18;
	mov.b64 	%rd1905, {%r6767, %r6766};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 23;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 23;
	mov.b64 	%rd1907, {%r6769, %r6768};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1659, %rd1634;
	and.b64  	%rd1910, %rd1684, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1634;
	add.s64 	%rd1912, %rd1911, %rd1609;
	add.s64 	%rd1913, %rd1912, %rd1908;
	add.s64 	%rd1914, %rd1913, %rd1708;
	ld.const.u64 	%rd1915, [k_sha512+384];
	add.s64 	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd1695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd1695;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 28;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 28;
	mov.b64 	%rd1918, {%r6773, %r6772};
	shf.l.wrap.b32 	%r6774, %r6770, %r6771, 30;
	shf.l.wrap.b32 	%r6775, %r6771, %r6770, 30;
	mov.b64 	%rd1919, {%r6775, %r6774};
	xor.b64  	%rd1920, %rd1918, %rd1919;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 25;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 25;
	mov.b64 	%rd1921, {%r6777, %r6776};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	and.b64  	%rd1923, %rd1695, %rd1670;
	xor.b64  	%rd1924, %rd1695, %rd1670;
	and.b64  	%rd1925, %rd1924, %rd1645;
	or.b64  	%rd1926, %rd1925, %rd1923;
	add.s64 	%rd1927, %rd1922, %rd1926;
	add.s64 	%rd1928, %rd1927, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd1917;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 14;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 14;
	mov.b64 	%rd1929, {%r6781, %r6780};
	shf.r.wrap.b32 	%r6782, %r6779, %r6778, 18;
	shf.r.wrap.b32 	%r6783, %r6778, %r6779, 18;
	mov.b64 	%rd1930, {%r6783, %r6782};
	xor.b64  	%rd1931, %rd1929, %rd1930;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 23;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 23;
	mov.b64 	%rd1932, {%r6785, %r6784};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	xor.b64  	%rd1934, %rd1684, %rd1659;
	and.b64  	%rd1935, %rd1917, %rd1934;
	xor.b64  	%rd1936, %rd1935, %rd1659;
	add.s64 	%rd1937, %rd1721, %rd1634;
	ld.const.u64 	%rd1938, [k_sha512+392];
	add.s64 	%rd1939, %rd1937, %rd1938;
	add.s64 	%rd1940, %rd1939, %rd1936;
	add.s64 	%rd1941, %rd1940, %rd1933;
	add.s64 	%rd1942, %rd1941, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd1928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd1928;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 28;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 28;
	mov.b64 	%rd1943, {%r6789, %r6788};
	shf.l.wrap.b32 	%r6790, %r6786, %r6787, 30;
	shf.l.wrap.b32 	%r6791, %r6787, %r6786, 30;
	mov.b64 	%rd1944, {%r6791, %r6790};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 25;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 25;
	mov.b64 	%rd1946, {%r6793, %r6792};
	xor.b64  	%rd1947, %rd1945, %rd1946;
	and.b64  	%rd1948, %rd1928, %rd1695;
	xor.b64  	%rd1949, %rd1928, %rd1695;
	and.b64  	%rd1950, %rd1949, %rd1670;
	or.b64  	%rd1951, %rd1950, %rd1948;
	add.s64 	%rd1952, %rd1947, %rd1951;
	add.s64 	%rd1953, %rd1952, %rd1941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd1942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd1942;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 14;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 14;
	mov.b64 	%rd1954, {%r6797, %r6796};
	shf.r.wrap.b32 	%r6798, %r6795, %r6794, 18;
	shf.r.wrap.b32 	%r6799, %r6794, %r6795, 18;
	mov.b64 	%rd1955, {%r6799, %r6798};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 23;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 23;
	mov.b64 	%rd1957, {%r6801, %r6800};
	xor.b64  	%rd1958, %rd1956, %rd1957;
	xor.b64  	%rd1959, %rd1917, %rd1684;
	and.b64  	%rd1960, %rd1942, %rd1959;
	xor.b64  	%rd1961, %rd1960, %rd1684;
	add.s64 	%rd1962, %rd1734, %rd1659;
	ld.const.u64 	%rd1963, [k_sha512+400];
	add.s64 	%rd1964, %rd1962, %rd1963;
	add.s64 	%rd1965, %rd1964, %rd1961;
	add.s64 	%rd1966, %rd1965, %rd1958;
	add.s64 	%rd1967, %rd1966, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd1953;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 28;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 28;
	mov.b64 	%rd1968, {%r6805, %r6804};
	shf.l.wrap.b32 	%r6806, %r6802, %r6803, 30;
	shf.l.wrap.b32 	%r6807, %r6803, %r6802, 30;
	mov.b64 	%rd1969, {%r6807, %r6806};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 25;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 25;
	mov.b64 	%rd1971, {%r6809, %r6808};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	and.b64  	%rd1973, %rd1953, %rd1928;
	xor.b64  	%rd1974, %rd1953, %rd1928;
	and.b64  	%rd1975, %rd1974, %rd1695;
	or.b64  	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd1972, %rd1976;
	add.s64 	%rd1978, %rd1977, %rd1966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd1967;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 14;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 14;
	mov.b64 	%rd1979, {%r6813, %r6812};
	shf.r.wrap.b32 	%r6814, %r6811, %r6810, 18;
	shf.r.wrap.b32 	%r6815, %r6810, %r6811, 18;
	mov.b64 	%rd1980, {%r6815, %r6814};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 23;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 23;
	mov.b64 	%rd1982, {%r6817, %r6816};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd1942, %rd1917;
	and.b64  	%rd1985, %rd1967, %rd1984;
	xor.b64  	%rd1986, %rd1985, %rd1917;
	add.s64 	%rd1987, %rd1747, %rd1684;
	ld.const.u64 	%rd1988, [k_sha512+408];
	add.s64 	%rd1989, %rd1987, %rd1988;
	add.s64 	%rd1990, %rd1989, %rd1986;
	add.s64 	%rd1991, %rd1990, %rd1983;
	add.s64 	%rd1992, %rd1991, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd1978;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 28;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 28;
	mov.b64 	%rd1993, {%r6821, %r6820};
	shf.l.wrap.b32 	%r6822, %r6818, %r6819, 30;
	shf.l.wrap.b32 	%r6823, %r6819, %r6818, 30;
	mov.b64 	%rd1994, {%r6823, %r6822};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 25;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 25;
	mov.b64 	%rd1996, {%r6825, %r6824};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	and.b64  	%rd1998, %rd1978, %rd1953;
	xor.b64  	%rd1999, %rd1978, %rd1953;
	and.b64  	%rd2000, %rd1999, %rd1928;
	or.b64  	%rd2001, %rd2000, %rd1998;
	add.s64 	%rd2002, %rd1997, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd1992;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 14;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 14;
	mov.b64 	%rd2004, {%r6829, %r6828};
	shf.r.wrap.b32 	%r6830, %r6827, %r6826, 18;
	shf.r.wrap.b32 	%r6831, %r6826, %r6827, 18;
	mov.b64 	%rd2005, {%r6831, %r6830};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 23;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 23;
	mov.b64 	%rd2007, {%r6833, %r6832};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd1967, %rd1942;
	and.b64  	%rd2010, %rd1992, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1942;
	add.s64 	%rd2012, %rd1917, %rd1760;
	ld.const.u64 	%rd2013, [k_sha512+416];
	add.s64 	%rd2014, %rd2012, %rd2013;
	add.s64 	%rd2015, %rd2014, %rd2011;
	add.s64 	%rd2016, %rd2015, %rd2008;
	add.s64 	%rd2017, %rd2016, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd2003;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 28;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 28;
	mov.b64 	%rd2018, {%r6837, %r6836};
	shf.l.wrap.b32 	%r6838, %r6834, %r6835, 30;
	shf.l.wrap.b32 	%r6839, %r6835, %r6834, 30;
	mov.b64 	%rd2019, {%r6839, %r6838};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 25;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 25;
	mov.b64 	%rd2021, {%r6841, %r6840};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	and.b64  	%rd2023, %rd2003, %rd1978;
	xor.b64  	%rd2024, %rd2003, %rd1978;
	and.b64  	%rd2025, %rd2024, %rd1953;
	or.b64  	%rd2026, %rd2025, %rd2023;
	add.s64 	%rd2027, %rd2022, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd2017;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 14;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 14;
	mov.b64 	%rd2029, {%r6845, %r6844};
	shf.r.wrap.b32 	%r6846, %r6843, %r6842, 18;
	shf.r.wrap.b32 	%r6847, %r6842, %r6843, 18;
	mov.b64 	%rd2030, {%r6847, %r6846};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 23;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 23;
	mov.b64 	%rd2032, {%r6849, %r6848};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd1992, %rd1967;
	and.b64  	%rd2035, %rd2017, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd1967;
	ld.const.u64 	%rd2037, [k_sha512+424];
	add.s64 	%rd2038, %rd2037, %rd1773;
	add.s64 	%rd2039, %rd2038, %rd1942;
	add.s64 	%rd2040, %rd2039, %rd2036;
	add.s64 	%rd2041, %rd2040, %rd2033;
	add.s64 	%rd2042, %rd2041, %rd1953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd2028;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 28;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 28;
	mov.b64 	%rd2043, {%r6853, %r6852};
	shf.l.wrap.b32 	%r6854, %r6850, %r6851, 30;
	shf.l.wrap.b32 	%r6855, %r6851, %r6850, 30;
	mov.b64 	%rd2044, {%r6855, %r6854};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 25;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 25;
	mov.b64 	%rd2046, {%r6857, %r6856};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	and.b64  	%rd2048, %rd2028, %rd2003;
	xor.b64  	%rd2049, %rd2028, %rd2003;
	and.b64  	%rd2050, %rd2049, %rd1978;
	or.b64  	%rd2051, %rd2050, %rd2048;
	add.s64 	%rd2052, %rd2047, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd2042;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 14;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 14;
	mov.b64 	%rd2054, {%r6861, %r6860};
	shf.r.wrap.b32 	%r6862, %r6859, %r6858, 18;
	shf.r.wrap.b32 	%r6863, %r6858, %r6859, 18;
	mov.b64 	%rd2055, {%r6863, %r6862};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 23;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 23;
	mov.b64 	%rd2057, {%r6865, %r6864};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2017, %rd1992;
	and.b64  	%rd2060, %rd2042, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd1992;
	ld.const.u64 	%rd2062, [k_sha512+432];
	add.s64 	%rd2063, %rd2062, %rd1786;
	add.s64 	%rd2064, %rd2063, %rd1967;
	add.s64 	%rd2065, %rd2064, %rd2061;
	add.s64 	%rd2066, %rd2065, %rd2058;
	add.s64 	%rd2067, %rd2066, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd2053;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 28;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 28;
	mov.b64 	%rd2068, {%r6869, %r6868};
	shf.l.wrap.b32 	%r6870, %r6866, %r6867, 30;
	shf.l.wrap.b32 	%r6871, %r6867, %r6866, 30;
	mov.b64 	%rd2069, {%r6871, %r6870};
	xor.b64  	%rd2070, %rd2068, %rd2069;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 25;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 25;
	mov.b64 	%rd2071, {%r6873, %r6872};
	xor.b64  	%rd2072, %rd2070, %rd2071;
	and.b64  	%rd2073, %rd2053, %rd2028;
	xor.b64  	%rd2074, %rd2053, %rd2028;
	and.b64  	%rd2075, %rd2074, %rd2003;
	or.b64  	%rd2076, %rd2075, %rd2073;
	add.s64 	%rd2077, %rd2072, %rd2076;
	add.s64 	%rd2078, %rd2077, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd2067;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 14;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 14;
	mov.b64 	%rd2079, {%r6877, %r6876};
	shf.r.wrap.b32 	%r6878, %r6875, %r6874, 18;
	shf.r.wrap.b32 	%r6879, %r6874, %r6875, 18;
	mov.b64 	%rd2080, {%r6879, %r6878};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 23;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 23;
	mov.b64 	%rd2082, {%r6881, %r6880};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	xor.b64  	%rd2084, %rd2042, %rd2017;
	and.b64  	%rd2085, %rd2067, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2017;
	ld.const.u64 	%rd2087, [k_sha512+440];
	add.s64 	%rd2088, %rd2087, %rd1799;
	add.s64 	%rd2089, %rd2088, %rd1992;
	add.s64 	%rd2090, %rd2089, %rd2086;
	add.s64 	%rd2091, %rd2090, %rd2083;
	add.s64 	%rd2092, %rd2091, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd2078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd2078;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 28;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 28;
	mov.b64 	%rd2093, {%r6885, %r6884};
	shf.l.wrap.b32 	%r6886, %r6882, %r6883, 30;
	shf.l.wrap.b32 	%r6887, %r6883, %r6882, 30;
	mov.b64 	%rd2094, {%r6887, %r6886};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 25;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 25;
	mov.b64 	%rd2096, {%r6889, %r6888};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	and.b64  	%rd2098, %rd2078, %rd2053;
	xor.b64  	%rd2099, %rd2078, %rd2053;
	and.b64  	%rd2100, %rd2099, %rd2028;
	or.b64  	%rd2101, %rd2100, %rd2098;
	add.s64 	%rd2102, %rd2097, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd2092;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 14;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 14;
	mov.b64 	%rd2104, {%r6893, %r6892};
	shf.r.wrap.b32 	%r6894, %r6891, %r6890, 18;
	shf.r.wrap.b32 	%r6895, %r6890, %r6891, 18;
	mov.b64 	%rd2105, {%r6895, %r6894};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 23;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 23;
	mov.b64 	%rd2107, {%r6897, %r6896};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2067, %rd2042;
	and.b64  	%rd2110, %rd2092, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2042;
	ld.const.u64 	%rd2112, [k_sha512+448];
	add.s64 	%rd2113, %rd2112, %rd1812;
	add.s64 	%rd2114, %rd2113, %rd2017;
	add.s64 	%rd2115, %rd2114, %rd2111;
	add.s64 	%rd2116, %rd2115, %rd2108;
	add.s64 	%rd2117, %rd2116, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd2103;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 28;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 28;
	mov.b64 	%rd2118, {%r6901, %r6900};
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 30;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 30;
	mov.b64 	%rd2119, {%r6903, %r6902};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	shf.l.wrap.b32 	%r6904, %r6898, %r6899, 25;
	shf.l.wrap.b32 	%r6905, %r6899, %r6898, 25;
	mov.b64 	%rd2121, {%r6905, %r6904};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	and.b64  	%rd2123, %rd2103, %rd2078;
	xor.b64  	%rd2124, %rd2103, %rd2078;
	and.b64  	%rd2125, %rd2124, %rd2053;
	or.b64  	%rd2126, %rd2125, %rd2123;
	add.s64 	%rd2127, %rd2122, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6906,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6907}, %rd2117;
	}
	shf.r.wrap.b32 	%r6908, %r6907, %r6906, 14;
	shf.r.wrap.b32 	%r6909, %r6906, %r6907, 14;
	mov.b64 	%rd2129, {%r6909, %r6908};
	shf.r.wrap.b32 	%r6910, %r6907, %r6906, 18;
	shf.r.wrap.b32 	%r6911, %r6906, %r6907, 18;
	mov.b64 	%rd2130, {%r6911, %r6910};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	shf.l.wrap.b32 	%r6912, %r6906, %r6907, 23;
	shf.l.wrap.b32 	%r6913, %r6907, %r6906, 23;
	mov.b64 	%rd2132, {%r6913, %r6912};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2092, %rd2067;
	and.b64  	%rd2135, %rd2117, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2067;
	ld.const.u64 	%rd2137, [k_sha512+456];
	add.s64 	%rd2138, %rd2137, %rd1825;
	add.s64 	%rd2139, %rd2138, %rd2042;
	add.s64 	%rd2140, %rd2139, %rd2136;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2142, %rd2141, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6914,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6915}, %rd2128;
	}
	shf.r.wrap.b32 	%r6916, %r6915, %r6914, 28;
	shf.r.wrap.b32 	%r6917, %r6914, %r6915, 28;
	mov.b64 	%rd2143, {%r6917, %r6916};
	shf.l.wrap.b32 	%r6918, %r6914, %r6915, 30;
	shf.l.wrap.b32 	%r6919, %r6915, %r6914, 30;
	mov.b64 	%rd2144, {%r6919, %r6918};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	shf.l.wrap.b32 	%r6920, %r6914, %r6915, 25;
	shf.l.wrap.b32 	%r6921, %r6915, %r6914, 25;
	mov.b64 	%rd2146, {%r6921, %r6920};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	and.b64  	%rd2148, %rd2128, %rd2103;
	xor.b64  	%rd2149, %rd2128, %rd2103;
	and.b64  	%rd2150, %rd2149, %rd2078;
	or.b64  	%rd2151, %rd2150, %rd2148;
	add.s64 	%rd2152, %rd2147, %rd2151;
	add.s64 	%rd2153, %rd2152, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd2142;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 14;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 14;
	mov.b64 	%rd2154, {%r6925, %r6924};
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 18;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 18;
	mov.b64 	%rd2155, {%r6927, %r6926};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	shf.l.wrap.b32 	%r6928, %r6922, %r6923, 23;
	shf.l.wrap.b32 	%r6929, %r6923, %r6922, 23;
	mov.b64 	%rd2157, {%r6929, %r6928};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	xor.b64  	%rd2159, %rd2117, %rd2092;
	and.b64  	%rd2160, %rd2142, %rd2159;
	xor.b64  	%rd2161, %rd2160, %rd2092;
	ld.const.u64 	%rd2162, [k_sha512+464];
	add.s64 	%rd2163, %rd2162, %rd1838;
	add.s64 	%rd2164, %rd2163, %rd2067;
	add.s64 	%rd2165, %rd2164, %rd2161;
	add.s64 	%rd2166, %rd2165, %rd2158;
	add.s64 	%rd2167, %rd2166, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6931}, %rd2153;
	}
	shf.r.wrap.b32 	%r6932, %r6931, %r6930, 28;
	shf.r.wrap.b32 	%r6933, %r6930, %r6931, 28;
	mov.b64 	%rd2168, {%r6933, %r6932};
	shf.l.wrap.b32 	%r6934, %r6930, %r6931, 30;
	shf.l.wrap.b32 	%r6935, %r6931, %r6930, 30;
	mov.b64 	%rd2169, {%r6935, %r6934};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shf.l.wrap.b32 	%r6936, %r6930, %r6931, 25;
	shf.l.wrap.b32 	%r6937, %r6931, %r6930, 25;
	mov.b64 	%rd2171, {%r6937, %r6936};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	and.b64  	%rd2173, %rd2153, %rd2128;
	xor.b64  	%rd2174, %rd2153, %rd2128;
	and.b64  	%rd2175, %rd2174, %rd2103;
	or.b64  	%rd2176, %rd2175, %rd2173;
	add.s64 	%rd2177, %rd2172, %rd2176;
	add.s64 	%rd2178, %rd2177, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd2167;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 14;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 14;
	mov.b64 	%rd2179, {%r6941, %r6940};
	shf.r.wrap.b32 	%r6942, %r6939, %r6938, 18;
	shf.r.wrap.b32 	%r6943, %r6938, %r6939, 18;
	mov.b64 	%rd2180, {%r6943, %r6942};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	shf.l.wrap.b32 	%r6944, %r6938, %r6939, 23;
	shf.l.wrap.b32 	%r6945, %r6939, %r6938, 23;
	mov.b64 	%rd2182, {%r6945, %r6944};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2142, %rd2117;
	and.b64  	%rd2185, %rd2167, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2117;
	ld.const.u64 	%rd2187, [k_sha512+472];
	add.s64 	%rd2188, %rd2187, %rd1851;
	add.s64 	%rd2189, %rd2188, %rd2092;
	add.s64 	%rd2190, %rd2189, %rd2186;
	add.s64 	%rd2191, %rd2190, %rd2183;
	add.s64 	%rd2192, %rd2191, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd2178;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 28;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 28;
	mov.b64 	%rd2193, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 30;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 30;
	mov.b64 	%rd2194, {%r6951, %r6950};
	xor.b64  	%rd2195, %rd2193, %rd2194;
	shf.l.wrap.b32 	%r6952, %r6946, %r6947, 25;
	shf.l.wrap.b32 	%r6953, %r6947, %r6946, 25;
	mov.b64 	%rd2196, {%r6953, %r6952};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	and.b64  	%rd2198, %rd2178, %rd2153;
	xor.b64  	%rd2199, %rd2178, %rd2153;
	and.b64  	%rd2200, %rd2199, %rd2128;
	or.b64  	%rd2201, %rd2200, %rd2198;
	add.s64 	%rd2202, %rd2197, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6955}, %rd2192;
	}
	shf.r.wrap.b32 	%r6956, %r6955, %r6954, 14;
	shf.r.wrap.b32 	%r6957, %r6954, %r6955, 14;
	mov.b64 	%rd2204, {%r6957, %r6956};
	shf.r.wrap.b32 	%r6958, %r6955, %r6954, 18;
	shf.r.wrap.b32 	%r6959, %r6954, %r6955, 18;
	mov.b64 	%rd2205, {%r6959, %r6958};
	xor.b64  	%rd2206, %rd2204, %rd2205;
	shf.l.wrap.b32 	%r6960, %r6954, %r6955, 23;
	shf.l.wrap.b32 	%r6961, %r6955, %r6954, 23;
	mov.b64 	%rd2207, {%r6961, %r6960};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2167, %rd2142;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2142;
	ld.const.u64 	%rd2212, [k_sha512+480];
	add.s64 	%rd2213, %rd2212, %rd1864;
	add.s64 	%rd2214, %rd2213, %rd2117;
	add.s64 	%rd2215, %rd2214, %rd2211;
	add.s64 	%rd2216, %rd2215, %rd2208;
	add.s64 	%rd2217, %rd2216, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd2203;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 28;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 28;
	mov.b64 	%rd2218, {%r6965, %r6964};
	shf.l.wrap.b32 	%r6966, %r6962, %r6963, 30;
	shf.l.wrap.b32 	%r6967, %r6963, %r6962, 30;
	mov.b64 	%rd2219, {%r6967, %r6966};
	xor.b64  	%rd2220, %rd2218, %rd2219;
	shf.l.wrap.b32 	%r6968, %r6962, %r6963, 25;
	shf.l.wrap.b32 	%r6969, %r6963, %r6962, 25;
	mov.b64 	%rd2221, {%r6969, %r6968};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	and.b64  	%rd2223, %rd2203, %rd2178;
	xor.b64  	%rd2224, %rd2203, %rd2178;
	and.b64  	%rd2225, %rd2224, %rd2153;
	or.b64  	%rd2226, %rd2225, %rd2223;
	add.s64 	%rd2227, %rd2222, %rd2226;
	add.s64 	%rd2228, %rd2227, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd2217;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 14;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 14;
	mov.b64 	%rd2229, {%r6973, %r6972};
	shf.r.wrap.b32 	%r6974, %r6971, %r6970, 18;
	shf.r.wrap.b32 	%r6975, %r6970, %r6971, 18;
	mov.b64 	%rd2230, {%r6975, %r6974};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	shf.l.wrap.b32 	%r6976, %r6970, %r6971, 23;
	shf.l.wrap.b32 	%r6977, %r6971, %r6970, 23;
	mov.b64 	%rd2232, {%r6977, %r6976};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	xor.b64  	%rd2234, %rd2192, %rd2167;
	and.b64  	%rd2235, %rd2217, %rd2234;
	xor.b64  	%rd2236, %rd2235, %rd2167;
	ld.const.u64 	%rd2237, [k_sha512+488];
	add.s64 	%rd2238, %rd2237, %rd1877;
	add.s64 	%rd2239, %rd2238, %rd2142;
	add.s64 	%rd2240, %rd2239, %rd2236;
	add.s64 	%rd2241, %rd2240, %rd2233;
	add.s64 	%rd2242, %rd2241, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6979}, %rd2228;
	}
	shf.r.wrap.b32 	%r6980, %r6979, %r6978, 28;
	shf.r.wrap.b32 	%r6981, %r6978, %r6979, 28;
	mov.b64 	%rd2243, {%r6981, %r6980};
	shf.l.wrap.b32 	%r6982, %r6978, %r6979, 30;
	shf.l.wrap.b32 	%r6983, %r6979, %r6978, 30;
	mov.b64 	%rd2244, {%r6983, %r6982};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	shf.l.wrap.b32 	%r6984, %r6978, %r6979, 25;
	shf.l.wrap.b32 	%r6985, %r6979, %r6978, 25;
	mov.b64 	%rd2246, {%r6985, %r6984};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	and.b64  	%rd2248, %rd2228, %rd2203;
	xor.b64  	%rd2249, %rd2228, %rd2203;
	and.b64  	%rd2250, %rd2249, %rd2178;
	or.b64  	%rd2251, %rd2250, %rd2248;
	add.s64 	%rd2252, %rd2247, %rd2251;
	add.s64 	%rd2253, %rd2252, %rd2241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd2242;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 14;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 14;
	mov.b64 	%rd2254, {%r6989, %r6988};
	shf.r.wrap.b32 	%r6990, %r6987, %r6986, 18;
	shf.r.wrap.b32 	%r6991, %r6986, %r6987, 18;
	mov.b64 	%rd2255, {%r6991, %r6990};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	shf.l.wrap.b32 	%r6992, %r6986, %r6987, 23;
	shf.l.wrap.b32 	%r6993, %r6987, %r6986, 23;
	mov.b64 	%rd2257, {%r6993, %r6992};
	xor.b64  	%rd2258, %rd2256, %rd2257;
	xor.b64  	%rd2259, %rd2217, %rd2192;
	and.b64  	%rd2260, %rd2242, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2192;
	ld.const.u64 	%rd2262, [k_sha512+496];
	add.s64 	%rd2263, %rd2262, %rd1890;
	add.s64 	%rd2264, %rd2263, %rd2167;
	add.s64 	%rd2265, %rd2264, %rd2261;
	add.s64 	%rd2266, %rd2265, %rd2258;
	add.s64 	%rd2267, %rd2266, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd2253;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 28;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 28;
	mov.b64 	%rd2268, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 30;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 30;
	mov.b64 	%rd2269, {%r6999, %r6998};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	shf.l.wrap.b32 	%r7000, %r6994, %r6995, 25;
	shf.l.wrap.b32 	%r7001, %r6995, %r6994, 25;
	mov.b64 	%rd2271, {%r7001, %r7000};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	and.b64  	%rd2273, %rd2253, %rd2228;
	xor.b64  	%rd2274, %rd2253, %rd2228;
	and.b64  	%rd2275, %rd2274, %rd2203;
	or.b64  	%rd2276, %rd2275, %rd2273;
	add.s64 	%rd2277, %rd2272, %rd2276;
	add.s64 	%rd2278, %rd2277, %rd2266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd2267;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 14;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 14;
	mov.b64 	%rd2279, {%r7005, %r7004};
	shf.r.wrap.b32 	%r7006, %r7003, %r7002, 18;
	shf.r.wrap.b32 	%r7007, %r7002, %r7003, 18;
	mov.b64 	%rd2280, {%r7007, %r7006};
	xor.b64  	%rd2281, %rd2279, %rd2280;
	shf.l.wrap.b32 	%r7008, %r7002, %r7003, 23;
	shf.l.wrap.b32 	%r7009, %r7003, %r7002, 23;
	mov.b64 	%rd2282, {%r7009, %r7008};
	xor.b64  	%rd2283, %rd2281, %rd2282;
	xor.b64  	%rd2284, %rd2242, %rd2217;
	and.b64  	%rd2285, %rd2267, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2217;
	ld.const.u64 	%rd2287, [k_sha512+504];
	add.s64 	%rd2288, %rd2287, %rd1903;
	add.s64 	%rd2289, %rd2288, %rd2192;
	add.s64 	%rd2290, %rd2289, %rd2286;
	add.s64 	%rd2291, %rd2290, %rd2283;
	add.s64 	%rd2292, %rd2291, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd2278;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 28;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 28;
	mov.b64 	%rd2293, {%r7013, %r7012};
	shf.l.wrap.b32 	%r7014, %r7010, %r7011, 30;
	shf.l.wrap.b32 	%r7015, %r7011, %r7010, 30;
	mov.b64 	%rd2294, {%r7015, %r7014};
	xor.b64  	%rd2295, %rd2293, %rd2294;
	shf.l.wrap.b32 	%r7016, %r7010, %r7011, 25;
	shf.l.wrap.b32 	%r7017, %r7011, %r7010, 25;
	mov.b64 	%rd2296, {%r7017, %r7016};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	and.b64  	%rd2298, %rd2278, %rd2253;
	xor.b64  	%rd2299, %rd2278, %rd2253;
	and.b64  	%rd2300, %rd2299, %rd2228;
	or.b64  	%rd2301, %rd2300, %rd2298;
	add.s64 	%rd2302, %rd2297, %rd2301;
	add.s64 	%rd2303, %rd2302, %rd2291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1890;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd2304, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd2305, {%r7023, %r7022};
	shr.u64 	%rd2306, %rd1890, 6;
	xor.b64  	%rd2307, %rd2305, %rd2306;
	xor.b64  	%rd2308, %rd2307, %rd2304;
	shf.r.wrap.b32 	%r7024, %r6633, %r6632, 1;
	shf.r.wrap.b32 	%r7025, %r6632, %r6633, 1;
	mov.b64 	%rd2309, {%r7025, %r7024};
	shf.r.wrap.b32 	%r7026, %r6633, %r6632, 8;
	shf.r.wrap.b32 	%r7027, %r6632, %r6633, 8;
	mov.b64 	%rd2310, {%r7027, %r7026};
	shr.u64 	%rd2311, %rd1721, 7;
	xor.b64  	%rd2312, %rd2310, %rd2311;
	xor.b64  	%rd2313, %rd2312, %rd2309;
	add.s64 	%rd2314, %rd2313, %rd1708;
	add.s64 	%rd2315, %rd2314, %rd1825;
	add.s64 	%rd2316, %rd2315, %rd2308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7028,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7029}, %rd1903;
	}
	shf.r.wrap.b32 	%r7030, %r7029, %r7028, 19;
	shf.r.wrap.b32 	%r7031, %r7028, %r7029, 19;
	mov.b64 	%rd2317, {%r7031, %r7030};
	shf.l.wrap.b32 	%r7032, %r7028, %r7029, 3;
	shf.l.wrap.b32 	%r7033, %r7029, %r7028, 3;
	mov.b64 	%rd2318, {%r7033, %r7032};
	shr.u64 	%rd2319, %rd1903, 6;
	xor.b64  	%rd2320, %rd2318, %rd2319;
	xor.b64  	%rd2321, %rd2320, %rd2317;
	shf.r.wrap.b32 	%r7034, %r6643, %r6642, 1;
	shf.r.wrap.b32 	%r7035, %r6642, %r6643, 1;
	mov.b64 	%rd2322, {%r7035, %r7034};
	shf.r.wrap.b32 	%r7036, %r6643, %r6642, 8;
	shf.r.wrap.b32 	%r7037, %r6642, %r6643, 8;
	mov.b64 	%rd2323, {%r7037, %r7036};
	shr.u64 	%rd2324, %rd1734, 7;
	xor.b64  	%rd2325, %rd2323, %rd2324;
	xor.b64  	%rd2326, %rd2325, %rd2322;
	add.s64 	%rd2327, %rd2326, %rd1721;
	add.s64 	%rd2328, %rd2327, %rd1838;
	add.s64 	%rd2329, %rd2328, %rd2321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd2316;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 19;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 19;
	mov.b64 	%rd2330, {%r7041, %r7040};
	shf.l.wrap.b32 	%r7042, %r7038, %r7039, 3;
	shf.l.wrap.b32 	%r7043, %r7039, %r7038, 3;
	mov.b64 	%rd2331, {%r7043, %r7042};
	shr.u64 	%rd2332, %rd2316, 6;
	xor.b64  	%rd2333, %rd2331, %rd2332;
	xor.b64  	%rd2334, %rd2333, %rd2330;
	shf.r.wrap.b32 	%r7044, %r6653, %r6652, 1;
	shf.r.wrap.b32 	%r7045, %r6652, %r6653, 1;
	mov.b64 	%rd2335, {%r7045, %r7044};
	shf.r.wrap.b32 	%r7046, %r6653, %r6652, 8;
	shf.r.wrap.b32 	%r7047, %r6652, %r6653, 8;
	mov.b64 	%rd2336, {%r7047, %r7046};
	shr.u64 	%rd2337, %rd1747, 7;
	xor.b64  	%rd2338, %rd2336, %rd2337;
	xor.b64  	%rd2339, %rd2338, %rd2335;
	add.s64 	%rd2340, %rd2339, %rd1734;
	add.s64 	%rd2341, %rd2340, %rd1851;
	add.s64 	%rd2342, %rd2341, %rd2334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd2329;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 19;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 19;
	mov.b64 	%rd2343, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 3;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 3;
	mov.b64 	%rd2344, {%r7053, %r7052};
	shr.u64 	%rd2345, %rd2329, 6;
	xor.b64  	%rd2346, %rd2344, %rd2345;
	xor.b64  	%rd2347, %rd2346, %rd2343;
	shf.r.wrap.b32 	%r7054, %r6663, %r6662, 1;
	shf.r.wrap.b32 	%r7055, %r6662, %r6663, 1;
	mov.b64 	%rd2348, {%r7055, %r7054};
	shf.r.wrap.b32 	%r7056, %r6663, %r6662, 8;
	shf.r.wrap.b32 	%r7057, %r6662, %r6663, 8;
	mov.b64 	%rd2349, {%r7057, %r7056};
	shr.u64 	%rd2350, %rd1760, 7;
	xor.b64  	%rd2351, %rd2349, %rd2350;
	xor.b64  	%rd2352, %rd2351, %rd2348;
	add.s64 	%rd2353, %rd2352, %rd1747;
	add.s64 	%rd2354, %rd2353, %rd1864;
	add.s64 	%rd2355, %rd2354, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7058,%dummy}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7059}, %rd2342;
	}
	shf.r.wrap.b32 	%r7060, %r7059, %r7058, 19;
	shf.r.wrap.b32 	%r7061, %r7058, %r7059, 19;
	mov.b64 	%rd2356, {%r7061, %r7060};
	shf.l.wrap.b32 	%r7062, %r7058, %r7059, 3;
	shf.l.wrap.b32 	%r7063, %r7059, %r7058, 3;
	mov.b64 	%rd2357, {%r7063, %r7062};
	shr.u64 	%rd2358, %rd2342, 6;
	xor.b64  	%rd2359, %rd2357, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2356;
	shf.r.wrap.b32 	%r7064, %r6673, %r6672, 1;
	shf.r.wrap.b32 	%r7065, %r6672, %r6673, 1;
	mov.b64 	%rd2361, {%r7065, %r7064};
	shf.r.wrap.b32 	%r7066, %r6673, %r6672, 8;
	shf.r.wrap.b32 	%r7067, %r6672, %r6673, 8;
	mov.b64 	%rd2362, {%r7067, %r7066};
	shr.u64 	%rd2363, %rd1773, 7;
	xor.b64  	%rd2364, %rd2362, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd2361;
	add.s64 	%rd2366, %rd2365, %rd1760;
	add.s64 	%rd2367, %rd2366, %rd1877;
	add.s64 	%rd2368, %rd2367, %rd2360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7068,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd2355;
	}
	shf.r.wrap.b32 	%r7070, %r7069, %r7068, 19;
	shf.r.wrap.b32 	%r7071, %r7068, %r7069, 19;
	mov.b64 	%rd2369, {%r7071, %r7070};
	shf.l.wrap.b32 	%r7072, %r7068, %r7069, 3;
	shf.l.wrap.b32 	%r7073, %r7069, %r7068, 3;
	mov.b64 	%rd2370, {%r7073, %r7072};
	shr.u64 	%rd2371, %rd2355, 6;
	xor.b64  	%rd2372, %rd2370, %rd2371;
	xor.b64  	%rd2373, %rd2372, %rd2369;
	shf.r.wrap.b32 	%r7074, %r6683, %r6682, 1;
	shf.r.wrap.b32 	%r7075, %r6682, %r6683, 1;
	mov.b64 	%rd2374, {%r7075, %r7074};
	shf.r.wrap.b32 	%r7076, %r6683, %r6682, 8;
	shf.r.wrap.b32 	%r7077, %r6682, %r6683, 8;
	mov.b64 	%rd2375, {%r7077, %r7076};
	shr.u64 	%rd2376, %rd1786, 7;
	xor.b64  	%rd2377, %rd2375, %rd2376;
	xor.b64  	%rd2378, %rd2377, %rd2374;
	add.s64 	%rd2379, %rd2378, %rd1773;
	add.s64 	%rd2380, %rd2379, %rd1890;
	add.s64 	%rd2381, %rd2380, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7079}, %rd2368;
	}
	shf.r.wrap.b32 	%r7080, %r7079, %r7078, 19;
	shf.r.wrap.b32 	%r7081, %r7078, %r7079, 19;
	mov.b64 	%rd2382, {%r7081, %r7080};
	shf.l.wrap.b32 	%r7082, %r7078, %r7079, 3;
	shf.l.wrap.b32 	%r7083, %r7079, %r7078, 3;
	mov.b64 	%rd2383, {%r7083, %r7082};
	shr.u64 	%rd2384, %rd2368, 6;
	xor.b64  	%rd2385, %rd2383, %rd2384;
	xor.b64  	%rd2386, %rd2385, %rd2382;
	shf.r.wrap.b32 	%r7084, %r6693, %r6692, 1;
	shf.r.wrap.b32 	%r7085, %r6692, %r6693, 1;
	mov.b64 	%rd2387, {%r7085, %r7084};
	shf.r.wrap.b32 	%r7086, %r6693, %r6692, 8;
	shf.r.wrap.b32 	%r7087, %r6692, %r6693, 8;
	mov.b64 	%rd2388, {%r7087, %r7086};
	shr.u64 	%rd2389, %rd1799, 7;
	xor.b64  	%rd2390, %rd2388, %rd2389;
	xor.b64  	%rd2391, %rd2390, %rd2387;
	add.s64 	%rd2392, %rd2391, %rd1786;
	add.s64 	%rd2393, %rd2392, %rd1903;
	add.s64 	%rd2394, %rd2393, %rd2386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7088,%dummy}, %rd2381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7089}, %rd2381;
	}
	shf.r.wrap.b32 	%r7090, %r7089, %r7088, 19;
	shf.r.wrap.b32 	%r7091, %r7088, %r7089, 19;
	mov.b64 	%rd2395, {%r7091, %r7090};
	shf.l.wrap.b32 	%r7092, %r7088, %r7089, 3;
	shf.l.wrap.b32 	%r7093, %r7089, %r7088, 3;
	mov.b64 	%rd2396, {%r7093, %r7092};
	shr.u64 	%rd2397, %rd2381, 6;
	xor.b64  	%rd2398, %rd2396, %rd2397;
	xor.b64  	%rd2399, %rd2398, %rd2395;
	shf.r.wrap.b32 	%r7094, %r6703, %r6702, 1;
	shf.r.wrap.b32 	%r7095, %r6702, %r6703, 1;
	mov.b64 	%rd2400, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r6703, %r6702, 8;
	shf.r.wrap.b32 	%r7097, %r6702, %r6703, 8;
	mov.b64 	%rd2401, {%r7097, %r7096};
	shr.u64 	%rd2402, %rd1812, 7;
	xor.b64  	%rd2403, %rd2401, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2400;
	add.s64 	%rd2405, %rd2404, %rd1799;
	add.s64 	%rd2406, %rd2405, %rd2316;
	add.s64 	%rd2407, %rd2406, %rd2399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd2394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd2394;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 19;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 19;
	mov.b64 	%rd2408, {%r7101, %r7100};
	shf.l.wrap.b32 	%r7102, %r7098, %r7099, 3;
	shf.l.wrap.b32 	%r7103, %r7099, %r7098, 3;
	mov.b64 	%rd2409, {%r7103, %r7102};
	shr.u64 	%rd2410, %rd2394, 6;
	xor.b64  	%rd2411, %rd2409, %rd2410;
	xor.b64  	%rd2412, %rd2411, %rd2408;
	shf.r.wrap.b32 	%r7104, %r6713, %r6712, 1;
	shf.r.wrap.b32 	%r7105, %r6712, %r6713, 1;
	mov.b64 	%rd2413, {%r7105, %r7104};
	shf.r.wrap.b32 	%r7106, %r6713, %r6712, 8;
	shf.r.wrap.b32 	%r7107, %r6712, %r6713, 8;
	mov.b64 	%rd2414, {%r7107, %r7106};
	shr.u64 	%rd2415, %rd1825, 7;
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2416, %rd2413;
	add.s64 	%rd2418, %rd2417, %rd1812;
	add.s64 	%rd2419, %rd2418, %rd2329;
	add.s64 	%rd2420, %rd2419, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7108,%dummy}, %rd2407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd2407;
	}
	shf.r.wrap.b32 	%r7110, %r7109, %r7108, 19;
	shf.r.wrap.b32 	%r7111, %r7108, %r7109, 19;
	mov.b64 	%rd2421, {%r7111, %r7110};
	shf.l.wrap.b32 	%r7112, %r7108, %r7109, 3;
	shf.l.wrap.b32 	%r7113, %r7109, %r7108, 3;
	mov.b64 	%rd2422, {%r7113, %r7112};
	shr.u64 	%rd2423, %rd2407, 6;
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2424, %rd2421;
	shf.r.wrap.b32 	%r7114, %r6723, %r6722, 1;
	shf.r.wrap.b32 	%r7115, %r6722, %r6723, 1;
	mov.b64 	%rd2426, {%r7115, %r7114};
	shf.r.wrap.b32 	%r7116, %r6723, %r6722, 8;
	shf.r.wrap.b32 	%r7117, %r6722, %r6723, 8;
	mov.b64 	%rd2427, {%r7117, %r7116};
	shr.u64 	%rd2428, %rd1838, 7;
	xor.b64  	%rd2429, %rd2427, %rd2428;
	xor.b64  	%rd2430, %rd2429, %rd2426;
	add.s64 	%rd2431, %rd2430, %rd1825;
	add.s64 	%rd2432, %rd2431, %rd2342;
	add.s64 	%rd2433, %rd2432, %rd2425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd2420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd2420;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 19;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 19;
	mov.b64 	%rd2434, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 3;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 3;
	mov.b64 	%rd2435, {%r7123, %r7122};
	shr.u64 	%rd2436, %rd2420, 6;
	xor.b64  	%rd2437, %rd2435, %rd2436;
	xor.b64  	%rd2438, %rd2437, %rd2434;
	shf.r.wrap.b32 	%r7124, %r6733, %r6732, 1;
	shf.r.wrap.b32 	%r7125, %r6732, %r6733, 1;
	mov.b64 	%rd2439, {%r7125, %r7124};
	shf.r.wrap.b32 	%r7126, %r6733, %r6732, 8;
	shf.r.wrap.b32 	%r7127, %r6732, %r6733, 8;
	mov.b64 	%rd2440, {%r7127, %r7126};
	shr.u64 	%rd2441, %rd1851, 7;
	xor.b64  	%rd2442, %rd2440, %rd2441;
	xor.b64  	%rd2443, %rd2442, %rd2439;
	add.s64 	%rd2444, %rd2443, %rd1838;
	add.s64 	%rd2445, %rd2444, %rd2355;
	add.s64 	%rd2446, %rd2445, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd2433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd2433;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 19;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 19;
	mov.b64 	%rd2447, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 3;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 3;
	mov.b64 	%rd2448, {%r7133, %r7132};
	shr.u64 	%rd2449, %rd2433, 6;
	xor.b64  	%rd2450, %rd2448, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2447;
	shf.r.wrap.b32 	%r7134, %r6743, %r6742, 1;
	shf.r.wrap.b32 	%r7135, %r6742, %r6743, 1;
	mov.b64 	%rd2452, {%r7135, %r7134};
	shf.r.wrap.b32 	%r7136, %r6743, %r6742, 8;
	shf.r.wrap.b32 	%r7137, %r6742, %r6743, 8;
	mov.b64 	%rd2453, {%r7137, %r7136};
	shr.u64 	%rd2454, %rd1864, 7;
	xor.b64  	%rd2455, %rd2453, %rd2454;
	xor.b64  	%rd2456, %rd2455, %rd2452;
	add.s64 	%rd2457, %rd2456, %rd1851;
	add.s64 	%rd2458, %rd2457, %rd2368;
	add.s64 	%rd2459, %rd2458, %rd2451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7138,%dummy}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7139}, %rd2446;
	}
	shf.r.wrap.b32 	%r7140, %r7139, %r7138, 19;
	shf.r.wrap.b32 	%r7141, %r7138, %r7139, 19;
	mov.b64 	%rd2460, {%r7141, %r7140};
	shf.l.wrap.b32 	%r7142, %r7138, %r7139, 3;
	shf.l.wrap.b32 	%r7143, %r7139, %r7138, 3;
	mov.b64 	%rd2461, {%r7143, %r7142};
	shr.u64 	%rd2462, %rd2446, 6;
	xor.b64  	%rd2463, %rd2461, %rd2462;
	xor.b64  	%rd2464, %rd2463, %rd2460;
	shf.r.wrap.b32 	%r7144, %r6753, %r6752, 1;
	shf.r.wrap.b32 	%r7145, %r6752, %r6753, 1;
	mov.b64 	%rd2465, {%r7145, %r7144};
	shf.r.wrap.b32 	%r7146, %r6753, %r6752, 8;
	shf.r.wrap.b32 	%r7147, %r6752, %r6753, 8;
	mov.b64 	%rd2466, {%r7147, %r7146};
	shr.u64 	%rd2467, %rd1877, 7;
	xor.b64  	%rd2468, %rd2466, %rd2467;
	xor.b64  	%rd2469, %rd2468, %rd2465;
	add.s64 	%rd2470, %rd2469, %rd1864;
	add.s64 	%rd2471, %rd2470, %rd2381;
	add.s64 	%rd2472, %rd2471, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7148,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd2459;
	}
	shf.r.wrap.b32 	%r7150, %r7149, %r7148, 19;
	shf.r.wrap.b32 	%r7151, %r7148, %r7149, 19;
	mov.b64 	%rd2473, {%r7151, %r7150};
	shf.l.wrap.b32 	%r7152, %r7148, %r7149, 3;
	shf.l.wrap.b32 	%r7153, %r7149, %r7148, 3;
	mov.b64 	%rd2474, {%r7153, %r7152};
	shr.u64 	%rd2475, %rd2459, 6;
	xor.b64  	%rd2476, %rd2474, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2473;
	shf.r.wrap.b32 	%r7154, %r7019, %r7018, 1;
	shf.r.wrap.b32 	%r7155, %r7018, %r7019, 1;
	mov.b64 	%rd2478, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7019, %r7018, 8;
	shf.r.wrap.b32 	%r7157, %r7018, %r7019, 8;
	mov.b64 	%rd2479, {%r7157, %r7156};
	shr.u64 	%rd2480, %rd1890, 7;
	xor.b64  	%rd2481, %rd2479, %rd2480;
	xor.b64  	%rd2482, %rd2481, %rd2478;
	add.s64 	%rd2483, %rd2482, %rd1877;
	add.s64 	%rd2484, %rd2483, %rd2394;
	add.s64 	%rd2485, %rd2484, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd2472;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 19;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 19;
	mov.b64 	%rd2486, {%r7161, %r7160};
	shf.l.wrap.b32 	%r7162, %r7158, %r7159, 3;
	shf.l.wrap.b32 	%r7163, %r7159, %r7158, 3;
	mov.b64 	%rd2487, {%r7163, %r7162};
	shr.u64 	%rd2488, %rd2472, 6;
	xor.b64  	%rd2489, %rd2487, %rd2488;
	xor.b64  	%rd2490, %rd2489, %rd2486;
	shf.r.wrap.b32 	%r7164, %r7029, %r7028, 1;
	shf.r.wrap.b32 	%r7165, %r7028, %r7029, 1;
	mov.b64 	%rd2491, {%r7165, %r7164};
	shf.r.wrap.b32 	%r7166, %r7029, %r7028, 8;
	shf.r.wrap.b32 	%r7167, %r7028, %r7029, 8;
	mov.b64 	%rd2492, {%r7167, %r7166};
	shr.u64 	%rd2493, %rd1903, 7;
	xor.b64  	%rd2494, %rd2492, %rd2493;
	xor.b64  	%rd2495, %rd2494, %rd2491;
	add.s64 	%rd2496, %rd2495, %rd1890;
	add.s64 	%rd2497, %rd2496, %rd2407;
	add.s64 	%rd2498, %rd2497, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7168,%dummy}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd2485;
	}
	shf.r.wrap.b32 	%r7170, %r7169, %r7168, 19;
	shf.r.wrap.b32 	%r7171, %r7168, %r7169, 19;
	mov.b64 	%rd2499, {%r7171, %r7170};
	shf.l.wrap.b32 	%r7172, %r7168, %r7169, 3;
	shf.l.wrap.b32 	%r7173, %r7169, %r7168, 3;
	mov.b64 	%rd2500, {%r7173, %r7172};
	shr.u64 	%rd2501, %rd2485, 6;
	xor.b64  	%rd2502, %rd2500, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2499;
	shf.r.wrap.b32 	%r7174, %r7039, %r7038, 1;
	shf.r.wrap.b32 	%r7175, %r7038, %r7039, 1;
	mov.b64 	%rd2504, {%r7175, %r7174};
	shf.r.wrap.b32 	%r7176, %r7039, %r7038, 8;
	shf.r.wrap.b32 	%r7177, %r7038, %r7039, 8;
	mov.b64 	%rd2505, {%r7177, %r7176};
	shr.u64 	%rd2506, %rd2316, 7;
	xor.b64  	%rd2507, %rd2505, %rd2506;
	xor.b64  	%rd2508, %rd2507, %rd2504;
	add.s64 	%rd2509, %rd2508, %rd1903;
	add.s64 	%rd2510, %rd2509, %rd2420;
	add.s64 	%rd2511, %rd2510, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd2292;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 14;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 14;
	mov.b64 	%rd2512, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7179, %r7178, 18;
	shf.r.wrap.b32 	%r7183, %r7178, %r7179, 18;
	mov.b64 	%rd2513, {%r7183, %r7182};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 23;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 23;
	mov.b64 	%rd2515, {%r7185, %r7184};
	xor.b64  	%rd2516, %rd2514, %rd2515;
	xor.b64  	%rd2517, %rd2267, %rd2242;
	and.b64  	%rd2518, %rd2292, %rd2517;
	xor.b64  	%rd2519, %rd2518, %rd2242;
	add.s64 	%rd2520, %rd2519, %rd2217;
	add.s64 	%rd2521, %rd2520, %rd2516;
	add.s64 	%rd2522, %rd2521, %rd2316;
	ld.const.u64 	%rd2523, [k_sha512+512];
	add.s64 	%rd2524, %rd2522, %rd2523;
	add.s64 	%rd2525, %rd2524, %rd2228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd2303;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 28;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 28;
	mov.b64 	%rd2526, {%r7189, %r7188};
	shf.l.wrap.b32 	%r7190, %r7186, %r7187, 30;
	shf.l.wrap.b32 	%r7191, %r7187, %r7186, 30;
	mov.b64 	%rd2527, {%r7191, %r7190};
	xor.b64  	%rd2528, %rd2526, %rd2527;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 25;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 25;
	mov.b64 	%rd2529, {%r7193, %r7192};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	and.b64  	%rd2531, %rd2303, %rd2278;
	xor.b64  	%rd2532, %rd2303, %rd2278;
	and.b64  	%rd2533, %rd2532, %rd2253;
	or.b64  	%rd2534, %rd2533, %rd2531;
	add.s64 	%rd2535, %rd2530, %rd2534;
	add.s64 	%rd2536, %rd2535, %rd2524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd2525;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 14;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 14;
	mov.b64 	%rd2537, {%r7197, %r7196};
	shf.r.wrap.b32 	%r7198, %r7195, %r7194, 18;
	shf.r.wrap.b32 	%r7199, %r7194, %r7195, 18;
	mov.b64 	%rd2538, {%r7199, %r7198};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 23;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 23;
	mov.b64 	%rd2540, {%r7201, %r7200};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	xor.b64  	%rd2542, %rd2292, %rd2267;
	and.b64  	%rd2543, %rd2525, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2267;
	add.s64 	%rd2545, %rd2329, %rd2242;
	ld.const.u64 	%rd2546, [k_sha512+520];
	add.s64 	%rd2547, %rd2545, %rd2546;
	add.s64 	%rd2548, %rd2547, %rd2544;
	add.s64 	%rd2549, %rd2548, %rd2541;
	add.s64 	%rd2550, %rd2549, %rd2253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd2536;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 28;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 28;
	mov.b64 	%rd2551, {%r7205, %r7204};
	shf.l.wrap.b32 	%r7206, %r7202, %r7203, 30;
	shf.l.wrap.b32 	%r7207, %r7203, %r7202, 30;
	mov.b64 	%rd2552, {%r7207, %r7206};
	xor.b64  	%rd2553, %rd2551, %rd2552;
	shf.l.wrap.b32 	%r7208, %r7202, %r7203, 25;
	shf.l.wrap.b32 	%r7209, %r7203, %r7202, 25;
	mov.b64 	%rd2554, {%r7209, %r7208};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	and.b64  	%rd2556, %rd2536, %rd2303;
	xor.b64  	%rd2557, %rd2536, %rd2303;
	and.b64  	%rd2558, %rd2557, %rd2278;
	or.b64  	%rd2559, %rd2558, %rd2556;
	add.s64 	%rd2560, %rd2555, %rd2559;
	add.s64 	%rd2561, %rd2560, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd2550;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 14;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 14;
	mov.b64 	%rd2562, {%r7213, %r7212};
	shf.r.wrap.b32 	%r7214, %r7211, %r7210, 18;
	shf.r.wrap.b32 	%r7215, %r7210, %r7211, 18;
	mov.b64 	%rd2563, {%r7215, %r7214};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	shf.l.wrap.b32 	%r7216, %r7210, %r7211, 23;
	shf.l.wrap.b32 	%r7217, %r7211, %r7210, 23;
	mov.b64 	%rd2565, {%r7217, %r7216};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	xor.b64  	%rd2567, %rd2525, %rd2292;
	and.b64  	%rd2568, %rd2550, %rd2567;
	xor.b64  	%rd2569, %rd2568, %rd2292;
	add.s64 	%rd2570, %rd2342, %rd2267;
	ld.const.u64 	%rd2571, [k_sha512+528];
	add.s64 	%rd2572, %rd2570, %rd2571;
	add.s64 	%rd2573, %rd2572, %rd2569;
	add.s64 	%rd2574, %rd2573, %rd2566;
	add.s64 	%rd2575, %rd2574, %rd2278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7219}, %rd2561;
	}
	shf.r.wrap.b32 	%r7220, %r7219, %r7218, 28;
	shf.r.wrap.b32 	%r7221, %r7218, %r7219, 28;
	mov.b64 	%rd2576, {%r7221, %r7220};
	shf.l.wrap.b32 	%r7222, %r7218, %r7219, 30;
	shf.l.wrap.b32 	%r7223, %r7219, %r7218, 30;
	mov.b64 	%rd2577, {%r7223, %r7222};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	shf.l.wrap.b32 	%r7224, %r7218, %r7219, 25;
	shf.l.wrap.b32 	%r7225, %r7219, %r7218, 25;
	mov.b64 	%rd2579, {%r7225, %r7224};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	and.b64  	%rd2581, %rd2561, %rd2536;
	xor.b64  	%rd2582, %rd2561, %rd2536;
	and.b64  	%rd2583, %rd2582, %rd2303;
	or.b64  	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2580, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7227}, %rd2575;
	}
	shf.r.wrap.b32 	%r7228, %r7227, %r7226, 14;
	shf.r.wrap.b32 	%r7229, %r7226, %r7227, 14;
	mov.b64 	%rd2587, {%r7229, %r7228};
	shf.r.wrap.b32 	%r7230, %r7227, %r7226, 18;
	shf.r.wrap.b32 	%r7231, %r7226, %r7227, 18;
	mov.b64 	%rd2588, {%r7231, %r7230};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	shf.l.wrap.b32 	%r7232, %r7226, %r7227, 23;
	shf.l.wrap.b32 	%r7233, %r7227, %r7226, 23;
	mov.b64 	%rd2590, {%r7233, %r7232};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2550, %rd2525;
	and.b64  	%rd2593, %rd2575, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2525;
	add.s64 	%rd2595, %rd2355, %rd2292;
	ld.const.u64 	%rd2596, [k_sha512+536];
	add.s64 	%rd2597, %rd2595, %rd2596;
	add.s64 	%rd2598, %rd2597, %rd2594;
	add.s64 	%rd2599, %rd2598, %rd2591;
	add.s64 	%rd2600, %rd2599, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd2586;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 28;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 28;
	mov.b64 	%rd2601, {%r7237, %r7236};
	shf.l.wrap.b32 	%r7238, %r7234, %r7235, 30;
	shf.l.wrap.b32 	%r7239, %r7235, %r7234, 30;
	mov.b64 	%rd2602, {%r7239, %r7238};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	shf.l.wrap.b32 	%r7240, %r7234, %r7235, 25;
	shf.l.wrap.b32 	%r7241, %r7235, %r7234, 25;
	mov.b64 	%rd2604, {%r7241, %r7240};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	and.b64  	%rd2606, %rd2586, %rd2561;
	xor.b64  	%rd2607, %rd2586, %rd2561;
	and.b64  	%rd2608, %rd2607, %rd2536;
	or.b64  	%rd2609, %rd2608, %rd2606;
	add.s64 	%rd2610, %rd2605, %rd2609;
	add.s64 	%rd2611, %rd2610, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7243}, %rd2600;
	}
	shf.r.wrap.b32 	%r7244, %r7243, %r7242, 14;
	shf.r.wrap.b32 	%r7245, %r7242, %r7243, 14;
	mov.b64 	%rd2612, {%r7245, %r7244};
	shf.r.wrap.b32 	%r7246, %r7243, %r7242, 18;
	shf.r.wrap.b32 	%r7247, %r7242, %r7243, 18;
	mov.b64 	%rd2613, {%r7247, %r7246};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	shf.l.wrap.b32 	%r7248, %r7242, %r7243, 23;
	shf.l.wrap.b32 	%r7249, %r7243, %r7242, 23;
	mov.b64 	%rd2615, {%r7249, %r7248};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	xor.b64  	%rd2617, %rd2575, %rd2550;
	and.b64  	%rd2618, %rd2600, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2550;
	add.s64 	%rd2620, %rd2525, %rd2368;
	ld.const.u64 	%rd2621, [k_sha512+544];
	add.s64 	%rd2622, %rd2620, %rd2621;
	add.s64 	%rd2623, %rd2622, %rd2619;
	add.s64 	%rd2624, %rd2623, %rd2616;
	add.s64 	%rd2625, %rd2624, %rd2536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd2611;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 28;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 28;
	mov.b64 	%rd2626, {%r7253, %r7252};
	shf.l.wrap.b32 	%r7254, %r7250, %r7251, 30;
	shf.l.wrap.b32 	%r7255, %r7251, %r7250, 30;
	mov.b64 	%rd2627, {%r7255, %r7254};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	shf.l.wrap.b32 	%r7256, %r7250, %r7251, 25;
	shf.l.wrap.b32 	%r7257, %r7251, %r7250, 25;
	mov.b64 	%rd2629, {%r7257, %r7256};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	and.b64  	%rd2631, %rd2611, %rd2586;
	xor.b64  	%rd2632, %rd2611, %rd2586;
	and.b64  	%rd2633, %rd2632, %rd2561;
	or.b64  	%rd2634, %rd2633, %rd2631;
	add.s64 	%rd2635, %rd2630, %rd2634;
	add.s64 	%rd2636, %rd2635, %rd2624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd2625;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 14;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 14;
	mov.b64 	%rd2637, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7259, %r7258, 18;
	shf.r.wrap.b32 	%r7263, %r7258, %r7259, 18;
	mov.b64 	%rd2638, {%r7263, %r7262};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	shf.l.wrap.b32 	%r7264, %r7258, %r7259, 23;
	shf.l.wrap.b32 	%r7265, %r7259, %r7258, 23;
	mov.b64 	%rd2640, {%r7265, %r7264};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	xor.b64  	%rd2642, %rd2600, %rd2575;
	and.b64  	%rd2643, %rd2625, %rd2642;
	xor.b64  	%rd2644, %rd2643, %rd2575;
	ld.const.u64 	%rd2645, [k_sha512+552];
	add.s64 	%rd2646, %rd2645, %rd2381;
	add.s64 	%rd2647, %rd2646, %rd2550;
	add.s64 	%rd2648, %rd2647, %rd2644;
	add.s64 	%rd2649, %rd2648, %rd2641;
	add.s64 	%rd2650, %rd2649, %rd2561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd2636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7267}, %rd2636;
	}
	shf.r.wrap.b32 	%r7268, %r7267, %r7266, 28;
	shf.r.wrap.b32 	%r7269, %r7266, %r7267, 28;
	mov.b64 	%rd2651, {%r7269, %r7268};
	shf.l.wrap.b32 	%r7270, %r7266, %r7267, 30;
	shf.l.wrap.b32 	%r7271, %r7267, %r7266, 30;
	mov.b64 	%rd2652, {%r7271, %r7270};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	shf.l.wrap.b32 	%r7272, %r7266, %r7267, 25;
	shf.l.wrap.b32 	%r7273, %r7267, %r7266, 25;
	mov.b64 	%rd2654, {%r7273, %r7272};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	and.b64  	%rd2656, %rd2636, %rd2611;
	xor.b64  	%rd2657, %rd2636, %rd2611;
	and.b64  	%rd2658, %rd2657, %rd2586;
	or.b64  	%rd2659, %rd2658, %rd2656;
	add.s64 	%rd2660, %rd2655, %rd2659;
	add.s64 	%rd2661, %rd2660, %rd2649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd2650;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 14;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 14;
	mov.b64 	%rd2662, {%r7277, %r7276};
	shf.r.wrap.b32 	%r7278, %r7275, %r7274, 18;
	shf.r.wrap.b32 	%r7279, %r7274, %r7275, 18;
	mov.b64 	%rd2663, {%r7279, %r7278};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	shf.l.wrap.b32 	%r7280, %r7274, %r7275, 23;
	shf.l.wrap.b32 	%r7281, %r7275, %r7274, 23;
	mov.b64 	%rd2665, {%r7281, %r7280};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	xor.b64  	%rd2667, %rd2625, %rd2600;
	and.b64  	%rd2668, %rd2650, %rd2667;
	xor.b64  	%rd2669, %rd2668, %rd2600;
	ld.const.u64 	%rd2670, [k_sha512+560];
	add.s64 	%rd2671, %rd2670, %rd2394;
	add.s64 	%rd2672, %rd2671, %rd2575;
	add.s64 	%rd2673, %rd2672, %rd2669;
	add.s64 	%rd2674, %rd2673, %rd2666;
	add.s64 	%rd2675, %rd2674, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd2661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7283}, %rd2661;
	}
	shf.r.wrap.b32 	%r7284, %r7283, %r7282, 28;
	shf.r.wrap.b32 	%r7285, %r7282, %r7283, 28;
	mov.b64 	%rd2676, {%r7285, %r7284};
	shf.l.wrap.b32 	%r7286, %r7282, %r7283, 30;
	shf.l.wrap.b32 	%r7287, %r7283, %r7282, 30;
	mov.b64 	%rd2677, {%r7287, %r7286};
	xor.b64  	%rd2678, %rd2676, %rd2677;
	shf.l.wrap.b32 	%r7288, %r7282, %r7283, 25;
	shf.l.wrap.b32 	%r7289, %r7283, %r7282, 25;
	mov.b64 	%rd2679, {%r7289, %r7288};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	and.b64  	%rd2681, %rd2661, %rd2636;
	xor.b64  	%rd2682, %rd2661, %rd2636;
	and.b64  	%rd2683, %rd2682, %rd2611;
	or.b64  	%rd2684, %rd2683, %rd2681;
	add.s64 	%rd2685, %rd2680, %rd2684;
	add.s64 	%rd2686, %rd2685, %rd2674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd2675;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 14;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 14;
	mov.b64 	%rd2687, {%r7293, %r7292};
	shf.r.wrap.b32 	%r7294, %r7291, %r7290, 18;
	shf.r.wrap.b32 	%r7295, %r7290, %r7291, 18;
	mov.b64 	%rd2688, {%r7295, %r7294};
	xor.b64  	%rd2689, %rd2687, %rd2688;
	shf.l.wrap.b32 	%r7296, %r7290, %r7291, 23;
	shf.l.wrap.b32 	%r7297, %r7291, %r7290, 23;
	mov.b64 	%rd2690, {%r7297, %r7296};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	xor.b64  	%rd2692, %rd2650, %rd2625;
	and.b64  	%rd2693, %rd2675, %rd2692;
	xor.b64  	%rd2694, %rd2693, %rd2625;
	ld.const.u64 	%rd2695, [k_sha512+568];
	add.s64 	%rd2696, %rd2695, %rd2407;
	add.s64 	%rd2697, %rd2696, %rd2600;
	add.s64 	%rd2698, %rd2697, %rd2694;
	add.s64 	%rd2699, %rd2698, %rd2691;
	add.s64 	%rd2700, %rd2699, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd2686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd2686;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 28;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 28;
	mov.b64 	%rd2701, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 30;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 30;
	mov.b64 	%rd2702, {%r7303, %r7302};
	xor.b64  	%rd2703, %rd2701, %rd2702;
	shf.l.wrap.b32 	%r7304, %r7298, %r7299, 25;
	shf.l.wrap.b32 	%r7305, %r7299, %r7298, 25;
	mov.b64 	%rd2704, {%r7305, %r7304};
	xor.b64  	%rd2705, %rd2703, %rd2704;
	and.b64  	%rd2706, %rd2686, %rd2661;
	xor.b64  	%rd2707, %rd2686, %rd2661;
	and.b64  	%rd2708, %rd2707, %rd2636;
	or.b64  	%rd2709, %rd2708, %rd2706;
	add.s64 	%rd2710, %rd2705, %rd2709;
	add.s64 	%rd2711, %rd2710, %rd2699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7307}, %rd2700;
	}
	shf.r.wrap.b32 	%r7308, %r7307, %r7306, 14;
	shf.r.wrap.b32 	%r7309, %r7306, %r7307, 14;
	mov.b64 	%rd2712, {%r7309, %r7308};
	shf.r.wrap.b32 	%r7310, %r7307, %r7306, 18;
	shf.r.wrap.b32 	%r7311, %r7306, %r7307, 18;
	mov.b64 	%rd2713, {%r7311, %r7310};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	shf.l.wrap.b32 	%r7312, %r7306, %r7307, 23;
	shf.l.wrap.b32 	%r7313, %r7307, %r7306, 23;
	mov.b64 	%rd2715, {%r7313, %r7312};
	xor.b64  	%rd2716, %rd2714, %rd2715;
	xor.b64  	%rd2717, %rd2675, %rd2650;
	and.b64  	%rd2718, %rd2700, %rd2717;
	xor.b64  	%rd2719, %rd2718, %rd2650;
	ld.const.u64 	%rd2720, [k_sha512+576];
	add.s64 	%rd2721, %rd2720, %rd2420;
	add.s64 	%rd2722, %rd2721, %rd2625;
	add.s64 	%rd2723, %rd2722, %rd2719;
	add.s64 	%rd2724, %rd2723, %rd2716;
	add.s64 	%rd2725, %rd2724, %rd2636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd2711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd2711;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 28;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 28;
	mov.b64 	%rd2726, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 30;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 30;
	mov.b64 	%rd2727, {%r7319, %r7318};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	shf.l.wrap.b32 	%r7320, %r7314, %r7315, 25;
	shf.l.wrap.b32 	%r7321, %r7315, %r7314, 25;
	mov.b64 	%rd2729, {%r7321, %r7320};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	and.b64  	%rd2731, %rd2711, %rd2686;
	xor.b64  	%rd2732, %rd2711, %rd2686;
	and.b64  	%rd2733, %rd2732, %rd2661;
	or.b64  	%rd2734, %rd2733, %rd2731;
	add.s64 	%rd2735, %rd2730, %rd2734;
	add.s64 	%rd2736, %rd2735, %rd2724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd2725;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd2737, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd2738, {%r7327, %r7326};
	xor.b64  	%rd2739, %rd2737, %rd2738;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd2740, {%r7329, %r7328};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	xor.b64  	%rd2742, %rd2700, %rd2675;
	and.b64  	%rd2743, %rd2725, %rd2742;
	xor.b64  	%rd2744, %rd2743, %rd2675;
	ld.const.u64 	%rd2745, [k_sha512+584];
	add.s64 	%rd2746, %rd2745, %rd2433;
	add.s64 	%rd2747, %rd2746, %rd2650;
	add.s64 	%rd2748, %rd2747, %rd2744;
	add.s64 	%rd2749, %rd2748, %rd2741;
	add.s64 	%rd2750, %rd2749, %rd2661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd2736;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd2751, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd2752, {%r7335, %r7334};
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd2754, {%r7337, %r7336};
	xor.b64  	%rd2755, %rd2753, %rd2754;
	and.b64  	%rd2756, %rd2736, %rd2711;
	xor.b64  	%rd2757, %rd2736, %rd2711;
	and.b64  	%rd2758, %rd2757, %rd2686;
	or.b64  	%rd2759, %rd2758, %rd2756;
	add.s64 	%rd2760, %rd2755, %rd2759;
	add.s64 	%rd2761, %rd2760, %rd2749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7339}, %rd2750;
	}
	shf.r.wrap.b32 	%r7340, %r7339, %r7338, 14;
	shf.r.wrap.b32 	%r7341, %r7338, %r7339, 14;
	mov.b64 	%rd2762, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7339, %r7338, 18;
	shf.r.wrap.b32 	%r7343, %r7338, %r7339, 18;
	mov.b64 	%rd2763, {%r7343, %r7342};
	xor.b64  	%rd2764, %rd2762, %rd2763;
	shf.l.wrap.b32 	%r7344, %r7338, %r7339, 23;
	shf.l.wrap.b32 	%r7345, %r7339, %r7338, 23;
	mov.b64 	%rd2765, {%r7345, %r7344};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	xor.b64  	%rd2767, %rd2725, %rd2700;
	and.b64  	%rd2768, %rd2750, %rd2767;
	xor.b64  	%rd2769, %rd2768, %rd2700;
	ld.const.u64 	%rd2770, [k_sha512+592];
	add.s64 	%rd2771, %rd2770, %rd2446;
	add.s64 	%rd2772, %rd2771, %rd2675;
	add.s64 	%rd2773, %rd2772, %rd2769;
	add.s64 	%rd2774, %rd2773, %rd2766;
	add.s64 	%rd2775, %rd2774, %rd2686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd2761;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 28;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 28;
	mov.b64 	%rd2776, {%r7349, %r7348};
	shf.l.wrap.b32 	%r7350, %r7346, %r7347, 30;
	shf.l.wrap.b32 	%r7351, %r7347, %r7346, 30;
	mov.b64 	%rd2777, {%r7351, %r7350};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	shf.l.wrap.b32 	%r7352, %r7346, %r7347, 25;
	shf.l.wrap.b32 	%r7353, %r7347, %r7346, 25;
	mov.b64 	%rd2779, {%r7353, %r7352};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	and.b64  	%rd2781, %rd2761, %rd2736;
	xor.b64  	%rd2782, %rd2761, %rd2736;
	and.b64  	%rd2783, %rd2782, %rd2711;
	or.b64  	%rd2784, %rd2783, %rd2781;
	add.s64 	%rd2785, %rd2780, %rd2784;
	add.s64 	%rd2786, %rd2785, %rd2774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd2775;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 14;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 14;
	mov.b64 	%rd2787, {%r7357, %r7356};
	shf.r.wrap.b32 	%r7358, %r7355, %r7354, 18;
	shf.r.wrap.b32 	%r7359, %r7354, %r7355, 18;
	mov.b64 	%rd2788, {%r7359, %r7358};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 23;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 23;
	mov.b64 	%rd2790, {%r7361, %r7360};
	xor.b64  	%rd2791, %rd2789, %rd2790;
	xor.b64  	%rd2792, %rd2750, %rd2725;
	and.b64  	%rd2793, %rd2775, %rd2792;
	xor.b64  	%rd2794, %rd2793, %rd2725;
	ld.const.u64 	%rd2795, [k_sha512+600];
	add.s64 	%rd2796, %rd2795, %rd2459;
	add.s64 	%rd2797, %rd2796, %rd2700;
	add.s64 	%rd2798, %rd2797, %rd2794;
	add.s64 	%rd2799, %rd2798, %rd2791;
	add.s64 	%rd2800, %rd2799, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd2786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd2786;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 28;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 28;
	mov.b64 	%rd2801, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 30;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 30;
	mov.b64 	%rd2802, {%r7367, %r7366};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	shf.l.wrap.b32 	%r7368, %r7362, %r7363, 25;
	shf.l.wrap.b32 	%r7369, %r7363, %r7362, 25;
	mov.b64 	%rd2804, {%r7369, %r7368};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	and.b64  	%rd2806, %rd2786, %rd2761;
	xor.b64  	%rd2807, %rd2786, %rd2761;
	and.b64  	%rd2808, %rd2807, %rd2736;
	or.b64  	%rd2809, %rd2808, %rd2806;
	add.s64 	%rd2810, %rd2805, %rd2809;
	add.s64 	%rd2811, %rd2810, %rd2799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7370,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7371}, %rd2800;
	}
	shf.r.wrap.b32 	%r7372, %r7371, %r7370, 14;
	shf.r.wrap.b32 	%r7373, %r7370, %r7371, 14;
	mov.b64 	%rd2812, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7371, %r7370, 18;
	shf.r.wrap.b32 	%r7375, %r7370, %r7371, 18;
	mov.b64 	%rd2813, {%r7375, %r7374};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	shf.l.wrap.b32 	%r7376, %r7370, %r7371, 23;
	shf.l.wrap.b32 	%r7377, %r7371, %r7370, 23;
	mov.b64 	%rd2815, {%r7377, %r7376};
	xor.b64  	%rd2816, %rd2814, %rd2815;
	xor.b64  	%rd2817, %rd2775, %rd2750;
	and.b64  	%rd2818, %rd2800, %rd2817;
	xor.b64  	%rd2819, %rd2818, %rd2750;
	ld.const.u64 	%rd2820, [k_sha512+608];
	add.s64 	%rd2821, %rd2820, %rd2472;
	add.s64 	%rd2822, %rd2821, %rd2725;
	add.s64 	%rd2823, %rd2822, %rd2819;
	add.s64 	%rd2824, %rd2823, %rd2816;
	add.s64 	%rd2825, %rd2824, %rd2736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7378,%dummy}, %rd2811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7379}, %rd2811;
	}
	shf.r.wrap.b32 	%r7380, %r7379, %r7378, 28;
	shf.r.wrap.b32 	%r7381, %r7378, %r7379, 28;
	mov.b64 	%rd2826, {%r7381, %r7380};
	shf.l.wrap.b32 	%r7382, %r7378, %r7379, 30;
	shf.l.wrap.b32 	%r7383, %r7379, %r7378, 30;
	mov.b64 	%rd2827, {%r7383, %r7382};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	shf.l.wrap.b32 	%r7384, %r7378, %r7379, 25;
	shf.l.wrap.b32 	%r7385, %r7379, %r7378, 25;
	mov.b64 	%rd2829, {%r7385, %r7384};
	xor.b64  	%rd2830, %rd2828, %rd2829;
	and.b64  	%rd2831, %rd2811, %rd2786;
	xor.b64  	%rd2832, %rd2811, %rd2786;
	and.b64  	%rd2833, %rd2832, %rd2761;
	or.b64  	%rd2834, %rd2833, %rd2831;
	add.s64 	%rd2835, %rd2830, %rd2834;
	add.s64 	%rd2836, %rd2835, %rd2824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd2825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd2825;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd2837, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd2838, {%r7391, %r7390};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd2840, {%r7393, %r7392};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	xor.b64  	%rd2842, %rd2800, %rd2775;
	and.b64  	%rd2843, %rd2825, %rd2842;
	xor.b64  	%rd2844, %rd2843, %rd2775;
	ld.const.u64 	%rd2845, [k_sha512+616];
	add.s64 	%rd2846, %rd2845, %rd2485;
	add.s64 	%rd2847, %rd2846, %rd2750;
	add.s64 	%rd2848, %rd2847, %rd2844;
	add.s64 	%rd2849, %rd2848, %rd2841;
	add.s64 	%rd2850, %rd2849, %rd2761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd2836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd2836;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd2851, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd2852, {%r7399, %r7398};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd2854, {%r7401, %r7400};
	xor.b64  	%rd2855, %rd2853, %rd2854;
	and.b64  	%rd2856, %rd2836, %rd2811;
	xor.b64  	%rd2857, %rd2836, %rd2811;
	and.b64  	%rd2858, %rd2857, %rd2786;
	or.b64  	%rd2859, %rd2858, %rd2856;
	add.s64 	%rd2860, %rd2855, %rd2859;
	add.s64 	%rd2861, %rd2860, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7403}, %rd2850;
	}
	shf.r.wrap.b32 	%r7404, %r7403, %r7402, 14;
	shf.r.wrap.b32 	%r7405, %r7402, %r7403, 14;
	mov.b64 	%rd2862, {%r7405, %r7404};
	shf.r.wrap.b32 	%r7406, %r7403, %r7402, 18;
	shf.r.wrap.b32 	%r7407, %r7402, %r7403, 18;
	mov.b64 	%rd2863, {%r7407, %r7406};
	xor.b64  	%rd2864, %rd2862, %rd2863;
	shf.l.wrap.b32 	%r7408, %r7402, %r7403, 23;
	shf.l.wrap.b32 	%r7409, %r7403, %r7402, 23;
	mov.b64 	%rd2865, {%r7409, %r7408};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	xor.b64  	%rd2867, %rd2825, %rd2800;
	and.b64  	%rd2868, %rd2850, %rd2867;
	xor.b64  	%rd2869, %rd2868, %rd2800;
	ld.const.u64 	%rd2870, [k_sha512+624];
	add.s64 	%rd2871, %rd2870, %rd2498;
	add.s64 	%rd2872, %rd2871, %rd2775;
	add.s64 	%rd2873, %rd2872, %rd2869;
	add.s64 	%rd2874, %rd2873, %rd2866;
	add.s64 	%rd2875, %rd2874, %rd2786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd2861;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 28;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 28;
	mov.b64 	%rd2876, {%r7413, %r7412};
	shf.l.wrap.b32 	%r7414, %r7410, %r7411, 30;
	shf.l.wrap.b32 	%r7415, %r7411, %r7410, 30;
	mov.b64 	%rd2877, {%r7415, %r7414};
	xor.b64  	%rd2878, %rd2876, %rd2877;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 25;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 25;
	mov.b64 	%rd2879, {%r7417, %r7416};
	xor.b64  	%rd2880, %rd2878, %rd2879;
	and.b64  	%rd2881, %rd2861, %rd2836;
	xor.b64  	%rd2882, %rd2861, %rd2836;
	and.b64  	%rd2883, %rd2882, %rd2811;
	or.b64  	%rd2884, %rd2883, %rd2881;
	add.s64 	%rd2885, %rd2880, %rd2884;
	add.s64 	%rd2886, %rd2885, %rd2874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd2875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd2875;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 14;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 14;
	mov.b64 	%rd2887, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7419, %r7418, 18;
	shf.r.wrap.b32 	%r7423, %r7418, %r7419, 18;
	mov.b64 	%rd2888, {%r7423, %r7422};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 23;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 23;
	mov.b64 	%rd2890, {%r7425, %r7424};
	xor.b64  	%rd2891, %rd2889, %rd2890;
	xor.b64  	%rd2892, %rd2850, %rd2825;
	and.b64  	%rd2893, %rd2875, %rd2892;
	xor.b64  	%rd2894, %rd2893, %rd2825;
	ld.const.u64 	%rd2895, [k_sha512+632];
	add.s64 	%rd2896, %rd2895, %rd2511;
	add.s64 	%rd2897, %rd2896, %rd2800;
	add.s64 	%rd2898, %rd2897, %rd2894;
	add.s64 	%rd2899, %rd2898, %rd2891;
	add.s64 	%rd2900, %rd2899, %rd2811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd2886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7427}, %rd2886;
	}
	shf.r.wrap.b32 	%r7428, %r7427, %r7426, 28;
	shf.r.wrap.b32 	%r7429, %r7426, %r7427, 28;
	mov.b64 	%rd2901, {%r7429, %r7428};
	shf.l.wrap.b32 	%r7430, %r7426, %r7427, 30;
	shf.l.wrap.b32 	%r7431, %r7427, %r7426, 30;
	mov.b64 	%rd2902, {%r7431, %r7430};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	shf.l.wrap.b32 	%r7432, %r7426, %r7427, 25;
	shf.l.wrap.b32 	%r7433, %r7427, %r7426, 25;
	mov.b64 	%rd2904, {%r7433, %r7432};
	xor.b64  	%rd2905, %rd2903, %rd2904;
	and.b64  	%rd2906, %rd2886, %rd2861;
	xor.b64  	%rd2907, %rd2886, %rd2861;
	and.b64  	%rd2908, %rd2907, %rd2836;
	or.b64  	%rd2909, %rd2908, %rd2906;
	add.s64 	%rd2910, %rd2905, %rd2909;
	add.s64 	%rd2911, %rd2910, %rd2899;
	add.s64 	%rd2912, %rd91, %rd2911;
	st.local.u64 	[%rd9], %rd2912;
	add.s64 	%rd2913, %rd97, %rd2886;
	st.local.u64 	[%rd9+8], %rd2913;
	add.s64 	%rd2914, %rd100, %rd2861;
	st.local.u64 	[%rd9+16], %rd2914;
	add.s64 	%rd2915, %rd89, %rd2836;
	st.local.u64 	[%rd9+24], %rd2915;
	add.s64 	%rd2916, %rd72, %rd2900;
	st.local.u64 	[%rd9+32], %rd2916;
	add.s64 	%rd2917, %rd79, %rd2875;
	st.local.u64 	[%rd9+40], %rd2917;
	add.s64 	%rd2918, %rd78, %rd2850;
	st.local.u64 	[%rd9+48], %rd2918;
	add.s64 	%rd2919, %rd83, %rd2825;
	st.local.u64 	[%rd9+56], %rd2919;
	st.local.u32 	[%rd9+64], %r11622;
	st.local.u32 	[%rd9+68], %r11621;
	st.local.u32 	[%rd9+72], %r11620;
	st.local.u32 	[%rd9+76], %r11619;
	st.local.u32 	[%rd9+80], %r11626;
	st.local.u32 	[%rd9+84], %r11625;
	st.local.u32 	[%rd9+88], %r11624;
	st.local.u32 	[%rd9+92], %r11623;
	st.local.u32 	[%rd9+96], %r11630;
	st.local.u32 	[%rd9+100], %r11629;
	st.local.u32 	[%rd9+104], %r11628;
	st.local.u32 	[%rd9+108], %r11627;
	st.local.u32 	[%rd9+112], %r11634;
	st.local.u32 	[%rd9+116], %r11633;
	st.local.u32 	[%rd9+120], %r11632;
	st.local.u32 	[%rd9+124], %r11631;
	st.local.u32 	[%rd9+128], %r11638;
	st.local.u32 	[%rd9+132], %r11637;
	st.local.u32 	[%rd9+136], %r11636;
	st.local.u32 	[%rd9+140], %r11635;
	st.local.u32 	[%rd9+144], %r11642;
	st.local.u32 	[%rd9+148], %r11641;
	st.local.u32 	[%rd9+152], %r11640;
	st.local.u32 	[%rd9+156], %r11639;
	st.local.u32 	[%rd9+160], %r11646;
	st.local.u32 	[%rd9+164], %r11645;
	st.local.u32 	[%rd9+168], %r11644;
	st.local.u32 	[%rd9+172], %r11643;
	st.local.u32 	[%rd9+176], %r11650;
	st.local.u32 	[%rd9+180], %r11649;
	st.local.u32 	[%rd9+184], %r11648;
	st.local.u32 	[%rd9+188], %r11647;

BB0_175:
	ret;
}

	// .globl	m11300_init
.entry m11300_init(
	.param .u64 .ptr .global .align 4 m11300_init_param_0,
	.param .u64 .ptr .global .align 4 m11300_init_param_1,
	.param .u64 .ptr .global .align 4 m11300_init_param_2,
	.param .u64 .ptr .const .align 4 m11300_init_param_3,
	.param .u64 .ptr .global .align 8 m11300_init_param_4,
	.param .u64 .ptr .global .align 1 m11300_init_param_5,
	.param .u64 .ptr .global .align 4 m11300_init_param_6,
	.param .u64 .ptr .global .align 4 m11300_init_param_7,
	.param .u64 .ptr .global .align 4 m11300_init_param_8,
	.param .u64 .ptr .global .align 4 m11300_init_param_9,
	.param .u64 .ptr .global .align 4 m11300_init_param_10,
	.param .u64 .ptr .global .align 4 m11300_init_param_11,
	.param .u64 .ptr .global .align 4 m11300_init_param_12,
	.param .u64 .ptr .global .align 4 m11300_init_param_13,
	.param .u64 .ptr .global .align 8 m11300_init_param_14,
	.param .u64 .ptr .global .align 4 m11300_init_param_15,
	.param .u64 .ptr .global .align 4 m11300_init_param_16,
	.param .u64 .ptr .global .align 4 m11300_init_param_17,
	.param .u64 .ptr .global .align 4 m11300_init_param_18,
	.param .u64 .ptr .global .align 4 m11300_init_param_19,
	.param .u64 .ptr .global .align 1 m11300_init_param_20,
	.param .u64 .ptr .global .align 1 m11300_init_param_21,
	.param .u64 .ptr .global .align 1 m11300_init_param_22,
	.param .u64 .ptr .global .align 1 m11300_init_param_23,
	.param .u64 .ptr .global .align 8 m11300_init_param_24
)
{
	.local .align 16 .b8 	__local_depot1[336];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<211>;
	.reg .b32 	%r<39546>;
	.reg .b64 	%rd<23219>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd138, [m11300_init_param_0];
	ld.param.u64 	%rd140, [m11300_init_param_17];
	ld.param.u64 	%rd141, [m11300_init_param_24];
	add.u64 	%rd142, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd143, %SP, 16;
	add.u64 	%rd2, %SPL, 16;
	add.u64 	%rd144, %SP, 32;
	add.u64 	%rd3, %SPL, 32;
	add.u64 	%rd145, %SP, 48;
	add.u64 	%rd4, %SPL, 48;
	add.u64 	%rd146, %SP, 64;
	add.u64 	%rd5, %SPL, 64;
	add.u64 	%rd147, %SP, 80;
	add.u64 	%rd6, %SPL, 80;
	add.u64 	%rd148, %SP, 96;
	add.u64 	%rd7, %SPL, 96;
	add.u64 	%rd149, %SP, 112;
	add.u64 	%rd8, %SPL, 112;
	add.u64 	%rd150, %SP, 128;
	add.u64 	%rd9, %SPL, 128;
	mov.u32 	%r3707, %ctaid.x;
	mov.u32 	%r3708, %ntid.x;
	mov.b32	%r3709, %envreg3;
	mad.lo.s32 	%r3710, %r3707, %r3708, %r3709;
	mov.u32 	%r3711, %tid.x;
	add.s32 	%r1, %r3710, %r3711;
	cvt.s64.s32	%rd151, %r1;
	ld.global.u64 	%rd152, [%rd141+56];
	setp.ge.u64	%p1, %rd151, %rd152;
	@%p1 bra 	BB1_219;

	mov.u64 	%rd153, 7640891576956012808;
	st.local.u64 	[%rd9], %rd153;
	mov.u64 	%rd154, -4942790177534073029;
	st.local.u64 	[%rd9+8], %rd154;
	mov.u64 	%rd155, 4354685564936845355;
	st.local.u64 	[%rd9+16], %rd155;
	mov.u64 	%rd156, -6534734903238641935;
	st.local.u64 	[%rd9+24], %rd156;
	mov.u64 	%rd157, 5840696475078001361;
	st.local.u64 	[%rd9+32], %rd157;
	mov.u64 	%rd158, -7276294671716946913;
	st.local.u64 	[%rd9+40], %rd158;
	mov.u64 	%rd159, 2270897969802886507;
	st.local.u64 	[%rd9+48], %rd159;
	mov.u64 	%rd160, 6620516959819538809;
	st.local.u64 	[%rd9+56], %rd160;
	mov.u32 	%r39223, 0;
	st.local.v2.u32 	[%rd9+64], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+72], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+80], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+88], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+96], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+104], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+112], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+120], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+128], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+136], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+144], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+152], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+160], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+168], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+176], {%r39223, %r39223};
	st.local.v2.u32 	[%rd9+184], {%r39223, %r39223};
	st.local.u32 	[%rd9+192], %r39223;
	mul.wide.s32 	%rd161, %r1, 260;
	add.s64 	%rd162, %rd138, %rd161;
	ld.global.u32 	%r2, [%rd162+256];
	add.s64 	%rd11, %rd1, 8;
	add.s64 	%rd12, %rd2, 8;
	add.s64 	%rd13, %rd3, 8;
	add.s64 	%rd14, %rd4, 8;
	add.s64 	%rd15, %rd5, 8;
	add.s64 	%rd16, %rd6, 8;
	add.s64 	%rd17, %rd7, 8;
	add.s64 	%rd18, %rd8, 8;
	mov.u32 	%r39224, %r39223;
	bra.uni 	BB1_2;

BB1_400:
	st.local.u64 	[%rd9+56], %rd23218;
	st.local.v2.u32 	[%rd9+64], {%r39513, %r39512};
	st.local.v2.u32 	[%rd9+72], {%r39511, %r39510};
	st.local.v2.u32 	[%rd9+80], {%r39485, %r39484};
	st.local.v2.u32 	[%rd9+88], {%r39483, %r39482};
	st.local.v2.u32 	[%rd9+96], {%r39489, %r39488};
	st.local.v2.u32 	[%rd9+104], {%r39487, %r39486};
	st.local.v2.u32 	[%rd9+112], {%r39493, %r39492};
	st.local.v2.u32 	[%rd9+120], {%r39491, %r39490};
	st.local.v2.u32 	[%rd9+128], {%r39497, %r39496};
	st.local.v2.u32 	[%rd9+136], {%r39495, %r39494};
	st.local.v2.u32 	[%rd9+144], {%r39501, %r39500};
	st.local.v2.u32 	[%rd9+152], {%r39499, %r39498};
	st.local.v2.u32 	[%rd9+160], {%r39505, %r39504};
	st.local.v2.u32 	[%rd9+168], {%r39503, %r39502};
	st.local.v2.u32 	[%rd9+176], {%r39509, %r39508};
	st.local.v2.u32 	[%rd9+184], {%r39507, %r39506};
	add.s32 	%r39223, %r39223, 128;
	add.s32 	%r39224, %r39224, 32;

BB1_2:
	add.s32 	%r3714, %r2, -128;
	setp.lt.s32	%p2, %r39223, %r3714;
	mul.wide.s32 	%rd165, %r39224, 4;
	add.s64 	%rd166, %rd162, %rd165;
	ld.global.u32 	%r5, [%rd166];
	ld.global.u32 	%r3715, [%rd166+12];
	ld.global.u32 	%r3716, [%rd166+8];
	ld.global.u32 	%r3717, [%rd166+4];
	st.local.v4.u32 	[%rd1], {%r5, %r3717, %r3716, %r3715};
	ld.global.u32 	%r3718, [%rd166+28];
	ld.global.u32 	%r3719, [%rd166+24];
	ld.global.u32 	%r3720, [%rd166+20];
	ld.global.u32 	%r3721, [%rd166+16];
	st.local.v4.u32 	[%rd2], {%r3721, %r3720, %r3719, %r3718};
	ld.global.u32 	%r3722, [%rd166+44];
	ld.global.u32 	%r3723, [%rd166+40];
	ld.global.u32 	%r3724, [%rd166+36];
	ld.global.u32 	%r3725, [%rd166+32];
	st.local.v4.u32 	[%rd3], {%r3725, %r3724, %r3723, %r3722};
	ld.global.u32 	%r3726, [%rd166+60];
	ld.global.u32 	%r3727, [%rd166+56];
	ld.global.u32 	%r3728, [%rd166+52];
	ld.global.u32 	%r3729, [%rd166+48];
	st.local.v4.u32 	[%rd4], {%r3729, %r3728, %r3727, %r3726};
	ld.global.u32 	%r3730, [%rd166+76];
	ld.global.u32 	%r3731, [%rd166+72];
	ld.global.u32 	%r3732, [%rd166+68];
	ld.global.u32 	%r3733, [%rd166+64];
	st.local.v4.u32 	[%rd5], {%r3733, %r3732, %r3731, %r3730};
	ld.global.u32 	%r3734, [%rd166+92];
	ld.global.u32 	%r3735, [%rd166+88];
	ld.global.u32 	%r3736, [%rd166+84];
	ld.global.u32 	%r3737, [%rd166+80];
	st.local.v4.u32 	[%rd6], {%r3737, %r3736, %r3735, %r3734};
	ld.global.u32 	%r3738, [%rd166+108];
	ld.global.u32 	%r3739, [%rd166+104];
	ld.global.u32 	%r3740, [%rd166+100];
	ld.global.u32 	%r3741, [%rd166+96];
	st.local.v4.u32 	[%rd7], {%r3741, %r3740, %r3739, %r3738};
	ld.global.u32 	%r3742, [%rd166+124];
	ld.global.u32 	%r3743, [%rd166+120];
	ld.global.u32 	%r3744, [%rd166+116];
	ld.global.u32 	%r3745, [%rd166+112];
	st.local.v4.u32 	[%rd8], {%r3745, %r3744, %r3743, %r3742};
	@%p2 bra 	BB1_311;
	bra.uni 	BB1_3;

BB1_311:
	// inline asm
	prmt.b32 %r29202, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r29202;
	ld.local.u32 	%r29205, [%rd1+4];
	// inline asm
	prmt.b32 %r29204, %r29205, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+4], %r29204;
	ld.local.u32 	%r29207, [%rd1+8];
	// inline asm
	prmt.b32 %r29206, %r29207, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+8], %r29206;
	ld.local.u32 	%r29209, [%rd1+12];
	// inline asm
	prmt.b32 %r29208, %r29209, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+12], %r29208;
	ld.local.u32 	%r29211, [%rd2];
	// inline asm
	prmt.b32 %r29210, %r29211, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r29210;
	ld.local.u32 	%r29213, [%rd2+4];
	// inline asm
	prmt.b32 %r29212, %r29213, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r29212;
	ld.local.u32 	%r29215, [%rd2+8];
	// inline asm
	prmt.b32 %r29214, %r29215, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r29214;
	ld.local.u32 	%r29217, [%rd2+12];
	// inline asm
	prmt.b32 %r29216, %r29217, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r29216;
	ld.local.u32 	%r29219, [%rd3];
	// inline asm
	prmt.b32 %r29218, %r29219, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r29218;
	ld.local.u32 	%r29221, [%rd3+4];
	// inline asm
	prmt.b32 %r29220, %r29221, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r29220;
	ld.local.u32 	%r29223, [%rd3+8];
	// inline asm
	prmt.b32 %r29222, %r29223, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r29222;
	ld.local.u32 	%r29225, [%rd3+12];
	// inline asm
	prmt.b32 %r29224, %r29225, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r29224;
	ld.local.u32 	%r29227, [%rd4];
	// inline asm
	prmt.b32 %r29226, %r29227, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r29226;
	ld.local.u32 	%r29229, [%rd4+4];
	// inline asm
	prmt.b32 %r29228, %r29229, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r29228;
	ld.local.u32 	%r29231, [%rd4+8];
	// inline asm
	prmt.b32 %r29230, %r29231, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r29230;
	ld.local.u32 	%r29233, [%rd4+12];
	// inline asm
	prmt.b32 %r29232, %r29233, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r29232;
	ld.local.u32 	%r29235, [%rd5];
	// inline asm
	prmt.b32 %r29234, %r29235, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r29234;
	ld.local.u32 	%r29237, [%rd5+4];
	// inline asm
	prmt.b32 %r29236, %r29237, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r29236;
	ld.local.u32 	%r29239, [%rd5+8];
	// inline asm
	prmt.b32 %r29238, %r29239, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r29238;
	ld.local.u32 	%r29241, [%rd5+12];
	// inline asm
	prmt.b32 %r29240, %r29241, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r29240;
	ld.local.u32 	%r29243, [%rd6];
	// inline asm
	prmt.b32 %r29242, %r29243, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r29242;
	ld.local.u32 	%r29245, [%rd6+4];
	// inline asm
	prmt.b32 %r29244, %r29245, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r29244;
	ld.local.u32 	%r29247, [%rd6+8];
	// inline asm
	prmt.b32 %r29246, %r29247, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r29246;
	ld.local.u32 	%r29249, [%rd6+12];
	// inline asm
	prmt.b32 %r29248, %r29249, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r29248;
	ld.local.u32 	%r29251, [%rd7];
	// inline asm
	prmt.b32 %r29250, %r29251, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r29250;
	ld.local.u32 	%r29253, [%rd7+4];
	// inline asm
	prmt.b32 %r29252, %r29253, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r29252;
	ld.local.u32 	%r29255, [%rd7+8];
	// inline asm
	prmt.b32 %r29254, %r29255, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r29254;
	ld.local.u32 	%r29257, [%rd7+12];
	// inline asm
	prmt.b32 %r29256, %r29257, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r29256;
	ld.local.u32 	%r29259, [%rd8];
	// inline asm
	prmt.b32 %r29258, %r29259, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r29258;
	ld.local.u32 	%r29261, [%rd8+4];
	// inline asm
	prmt.b32 %r29260, %r29261, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r29260;
	ld.local.u32 	%r29263, [%rd8+8];
	// inline asm
	prmt.b32 %r29262, %r29263, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r29262;
	ld.local.u32 	%r29265, [%rd8+12];
	// inline asm
	prmt.b32 %r29264, %r29265, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r29264;
	ld.local.u32 	%r3107, [%rd9+192];
	and.b32  	%r3108, %r3107, 127;
	add.s32 	%r29266, %r3107, 128;
	st.local.u32 	[%rd9+192], %r29266;
	setp.eq.s32	%p163, %r3108, 0;
	@%p163 bra 	BB1_399;
	bra.uni 	BB1_312;

BB1_399:
	ld.local.v4.u32 	{%r37214, %r37215, %r37216, %r37217}, [%rd1];
	mov.u32 	%r39513, 0;
	st.local.v2.u32 	[%rd9+64], {%r37214, %r37215};
	st.local.v2.u32 	[%rd9+72], {%r37216, %r37217};
	ld.local.v4.u32 	{%r37222, %r37223, %r37224, %r37225}, [%rd2];
	st.local.v2.u32 	[%rd9+80], {%r37222, %r37223};
	st.local.v2.u32 	[%rd9+88], {%r37224, %r37225};
	ld.local.v4.u32 	{%r37230, %r37231, %r37232, %r37233}, [%rd3];
	st.local.v2.u32 	[%rd9+96], {%r37230, %r37231};
	st.local.v2.u32 	[%rd9+104], {%r37232, %r37233};
	ld.local.v4.u32 	{%r37238, %r37239, %r37240, %r37241}, [%rd4];
	st.local.v2.u32 	[%rd9+112], {%r37238, %r37239};
	st.local.v2.u32 	[%rd9+120], {%r37240, %r37241};
	ld.local.v4.u32 	{%r37246, %r37247, %r37248, %r37249}, [%rd5];
	st.local.v2.u32 	[%rd9+128], {%r37246, %r37247};
	st.local.v2.u32 	[%rd9+136], {%r37248, %r37249};
	ld.local.v4.u32 	{%r37254, %r37255, %r37256, %r37257}, [%rd6];
	st.local.v2.u32 	[%rd9+144], {%r37254, %r37255};
	st.local.v2.u32 	[%rd9+152], {%r37256, %r37257};
	ld.local.v4.u32 	{%r37262, %r37263, %r37264, %r37265}, [%rd7];
	st.local.v2.u32 	[%rd9+160], {%r37262, %r37263};
	st.local.v2.u32 	[%rd9+168], {%r37264, %r37265};
	ld.local.v4.u32 	{%r37270, %r37271, %r37272, %r37273}, [%rd8];
	st.local.v2.u32 	[%rd9+176], {%r37270, %r37271};
	st.local.v2.u32 	[%rd9+184], {%r37272, %r29264};
	mov.b64	%rd20345, {%r37215, %r37214};
	mov.b64	%rd20346, {%r37217, %r37216};
	mov.b64	%rd20347, {%r37223, %r37222};
	mov.b64	%rd20348, {%r37225, %r37224};
	mov.b64	%rd20349, {%r37231, %r37230};
	mov.b64	%rd20350, {%r37233, %r37232};
	mov.b64	%rd20351, {%r37239, %r37238};
	mov.b64	%rd20352, {%r37241, %r37240};
	mov.b64	%rd20353, {%r37247, %r37246};
	mov.b64	%rd20354, {%r37249, %r37248};
	mov.b64	%rd20355, {%r37255, %r37254};
	mov.b64	%rd20356, {%r37257, %r37256};
	mov.b64	%rd20357, {%r37263, %r37262};
	mov.b64	%rd20358, {%r37265, %r37264};
	mov.b64	%rd20359, {%r37271, %r37270};
	mov.b64	%rd20360, {%r29264, %r37272};
	ld.local.u64 	%rd20361, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37277,%dummy}, %rd20361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37278}, %rd20361;
	}
	shf.r.wrap.b32 	%r37279, %r37278, %r37277, 14;
	shf.r.wrap.b32 	%r37280, %r37277, %r37278, 14;
	mov.b64 	%rd20362, {%r37280, %r37279};
	shf.r.wrap.b32 	%r37281, %r37278, %r37277, 18;
	shf.r.wrap.b32 	%r37282, %r37277, %r37278, 18;
	mov.b64 	%rd20363, {%r37282, %r37281};
	xor.b64  	%rd20364, %rd20363, %rd20362;
	shf.l.wrap.b32 	%r37283, %r37277, %r37278, 23;
	shf.l.wrap.b32 	%r37284, %r37278, %r37277, 23;
	mov.b64 	%rd20365, {%r37284, %r37283};
	xor.b64  	%rd20366, %rd20364, %rd20365;
	ld.local.u64 	%rd20367, [%rd9+48];
	ld.local.u64 	%rd20368, [%rd9+40];
	xor.b64  	%rd20369, %rd20367, %rd20368;
	and.b64  	%rd20370, %rd20369, %rd20361;
	xor.b64  	%rd20371, %rd20370, %rd20367;
	ld.local.u64 	%rd20372, [%rd9+56];
	add.s64 	%rd20373, %rd20371, %rd20372;
	add.s64 	%rd20374, %rd20373, %rd20345;
	ld.const.u64 	%rd20375, [k_sha512];
	add.s64 	%rd20376, %rd20374, %rd20375;
	add.s64 	%rd20377, %rd20376, %rd20366;
	ld.local.u64 	%rd20378, [%rd9+24];
	add.s64 	%rd20379, %rd20377, %rd20378;
	ld.local.u64 	%rd20380, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37285,%dummy}, %rd20380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37286}, %rd20380;
	}
	shf.r.wrap.b32 	%r37287, %r37286, %r37285, 28;
	shf.r.wrap.b32 	%r37288, %r37285, %r37286, 28;
	mov.b64 	%rd20381, {%r37288, %r37287};
	shf.l.wrap.b32 	%r37289, %r37285, %r37286, 30;
	shf.l.wrap.b32 	%r37290, %r37286, %r37285, 30;
	mov.b64 	%rd20382, {%r37290, %r37289};
	xor.b64  	%rd20383, %rd20382, %rd20381;
	shf.l.wrap.b32 	%r37291, %r37285, %r37286, 25;
	shf.l.wrap.b32 	%r37292, %r37286, %r37285, 25;
	mov.b64 	%rd20384, {%r37292, %r37291};
	xor.b64  	%rd20385, %rd20383, %rd20384;
	ld.local.u64 	%rd20386, [%rd9+8];
	and.b64  	%rd20387, %rd20386, %rd20380;
	xor.b64  	%rd20388, %rd20386, %rd20380;
	ld.local.u64 	%rd20389, [%rd9+16];
	and.b64  	%rd20390, %rd20389, %rd20388;
	or.b64  	%rd20391, %rd20390, %rd20387;
	add.s64 	%rd20392, %rd20377, %rd20391;
	add.s64 	%rd20393, %rd20392, %rd20385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37293,%dummy}, %rd20379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37294}, %rd20379;
	}
	shf.r.wrap.b32 	%r37295, %r37294, %r37293, 14;
	shf.r.wrap.b32 	%r37296, %r37293, %r37294, 14;
	mov.b64 	%rd20394, {%r37296, %r37295};
	shf.r.wrap.b32 	%r37297, %r37294, %r37293, 18;
	shf.r.wrap.b32 	%r37298, %r37293, %r37294, 18;
	mov.b64 	%rd20395, {%r37298, %r37297};
	xor.b64  	%rd20396, %rd20395, %rd20394;
	shf.l.wrap.b32 	%r37299, %r37293, %r37294, 23;
	shf.l.wrap.b32 	%r37300, %r37294, %r37293, 23;
	mov.b64 	%rd20397, {%r37300, %r37299};
	xor.b64  	%rd20398, %rd20396, %rd20397;
	xor.b64  	%rd20399, %rd20368, %rd20361;
	and.b64  	%rd20400, %rd20379, %rd20399;
	xor.b64  	%rd20401, %rd20400, %rd20368;
	add.s64 	%rd20402, %rd20346, %rd20367;
	ld.const.u64 	%rd20403, [k_sha512+8];
	add.s64 	%rd20404, %rd20402, %rd20403;
	add.s64 	%rd20405, %rd20404, %rd20401;
	add.s64 	%rd20406, %rd20405, %rd20398;
	add.s64 	%rd20407, %rd20406, %rd20389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37301,%dummy}, %rd20393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37302}, %rd20393;
	}
	shf.r.wrap.b32 	%r37303, %r37302, %r37301, 28;
	shf.r.wrap.b32 	%r37304, %r37301, %r37302, 28;
	mov.b64 	%rd20408, {%r37304, %r37303};
	shf.l.wrap.b32 	%r37305, %r37301, %r37302, 30;
	shf.l.wrap.b32 	%r37306, %r37302, %r37301, 30;
	mov.b64 	%rd20409, {%r37306, %r37305};
	xor.b64  	%rd20410, %rd20409, %rd20408;
	shf.l.wrap.b32 	%r37307, %r37301, %r37302, 25;
	shf.l.wrap.b32 	%r37308, %r37302, %r37301, 25;
	mov.b64 	%rd20411, {%r37308, %r37307};
	xor.b64  	%rd20412, %rd20410, %rd20411;
	and.b64  	%rd20413, %rd20393, %rd20380;
	xor.b64  	%rd20414, %rd20393, %rd20380;
	and.b64  	%rd20415, %rd20414, %rd20386;
	or.b64  	%rd20416, %rd20415, %rd20413;
	add.s64 	%rd20417, %rd20406, %rd20416;
	add.s64 	%rd20418, %rd20417, %rd20412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37309,%dummy}, %rd20407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37310}, %rd20407;
	}
	shf.r.wrap.b32 	%r37311, %r37310, %r37309, 14;
	shf.r.wrap.b32 	%r37312, %r37309, %r37310, 14;
	mov.b64 	%rd20419, {%r37312, %r37311};
	shf.r.wrap.b32 	%r37313, %r37310, %r37309, 18;
	shf.r.wrap.b32 	%r37314, %r37309, %r37310, 18;
	mov.b64 	%rd20420, {%r37314, %r37313};
	xor.b64  	%rd20421, %rd20420, %rd20419;
	shf.l.wrap.b32 	%r37315, %r37309, %r37310, 23;
	shf.l.wrap.b32 	%r37316, %r37310, %r37309, 23;
	mov.b64 	%rd20422, {%r37316, %r37315};
	xor.b64  	%rd20423, %rd20421, %rd20422;
	xor.b64  	%rd20424, %rd20379, %rd20361;
	and.b64  	%rd20425, %rd20407, %rd20424;
	xor.b64  	%rd20426, %rd20425, %rd20361;
	add.s64 	%rd20427, %rd20347, %rd20368;
	ld.const.u64 	%rd20428, [k_sha512+16];
	add.s64 	%rd20429, %rd20427, %rd20428;
	add.s64 	%rd20430, %rd20429, %rd20426;
	add.s64 	%rd20431, %rd20430, %rd20423;
	add.s64 	%rd20432, %rd20431, %rd20386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37317,%dummy}, %rd20418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37318}, %rd20418;
	}
	shf.r.wrap.b32 	%r37319, %r37318, %r37317, 28;
	shf.r.wrap.b32 	%r37320, %r37317, %r37318, 28;
	mov.b64 	%rd20433, {%r37320, %r37319};
	shf.l.wrap.b32 	%r37321, %r37317, %r37318, 30;
	shf.l.wrap.b32 	%r37322, %r37318, %r37317, 30;
	mov.b64 	%rd20434, {%r37322, %r37321};
	xor.b64  	%rd20435, %rd20434, %rd20433;
	shf.l.wrap.b32 	%r37323, %r37317, %r37318, 25;
	shf.l.wrap.b32 	%r37324, %r37318, %r37317, 25;
	mov.b64 	%rd20436, {%r37324, %r37323};
	xor.b64  	%rd20437, %rd20435, %rd20436;
	and.b64  	%rd20438, %rd20418, %rd20393;
	xor.b64  	%rd20439, %rd20418, %rd20393;
	and.b64  	%rd20440, %rd20439, %rd20380;
	or.b64  	%rd20441, %rd20440, %rd20438;
	add.s64 	%rd20442, %rd20431, %rd20441;
	add.s64 	%rd20443, %rd20442, %rd20437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37325,%dummy}, %rd20432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37326}, %rd20432;
	}
	shf.r.wrap.b32 	%r37327, %r37326, %r37325, 14;
	shf.r.wrap.b32 	%r37328, %r37325, %r37326, 14;
	mov.b64 	%rd20444, {%r37328, %r37327};
	shf.r.wrap.b32 	%r37329, %r37326, %r37325, 18;
	shf.r.wrap.b32 	%r37330, %r37325, %r37326, 18;
	mov.b64 	%rd20445, {%r37330, %r37329};
	xor.b64  	%rd20446, %rd20445, %rd20444;
	shf.l.wrap.b32 	%r37331, %r37325, %r37326, 23;
	shf.l.wrap.b32 	%r37332, %r37326, %r37325, 23;
	mov.b64 	%rd20447, {%r37332, %r37331};
	xor.b64  	%rd20448, %rd20446, %rd20447;
	xor.b64  	%rd20449, %rd20407, %rd20379;
	and.b64  	%rd20450, %rd20432, %rd20449;
	xor.b64  	%rd20451, %rd20450, %rd20379;
	add.s64 	%rd20452, %rd20348, %rd20361;
	ld.const.u64 	%rd20453, [k_sha512+24];
	add.s64 	%rd20454, %rd20452, %rd20453;
	add.s64 	%rd20455, %rd20454, %rd20451;
	add.s64 	%rd20456, %rd20455, %rd20448;
	add.s64 	%rd20457, %rd20456, %rd20380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37333,%dummy}, %rd20443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37334}, %rd20443;
	}
	shf.r.wrap.b32 	%r37335, %r37334, %r37333, 28;
	shf.r.wrap.b32 	%r37336, %r37333, %r37334, 28;
	mov.b64 	%rd20458, {%r37336, %r37335};
	shf.l.wrap.b32 	%r37337, %r37333, %r37334, 30;
	shf.l.wrap.b32 	%r37338, %r37334, %r37333, 30;
	mov.b64 	%rd20459, {%r37338, %r37337};
	xor.b64  	%rd20460, %rd20459, %rd20458;
	shf.l.wrap.b32 	%r37339, %r37333, %r37334, 25;
	shf.l.wrap.b32 	%r37340, %r37334, %r37333, 25;
	mov.b64 	%rd20461, {%r37340, %r37339};
	xor.b64  	%rd20462, %rd20460, %rd20461;
	and.b64  	%rd20463, %rd20443, %rd20418;
	xor.b64  	%rd20464, %rd20443, %rd20418;
	and.b64  	%rd20465, %rd20464, %rd20393;
	or.b64  	%rd20466, %rd20465, %rd20463;
	add.s64 	%rd20467, %rd20456, %rd20466;
	add.s64 	%rd20468, %rd20467, %rd20462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37341,%dummy}, %rd20457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37342}, %rd20457;
	}
	shf.r.wrap.b32 	%r37343, %r37342, %r37341, 14;
	shf.r.wrap.b32 	%r37344, %r37341, %r37342, 14;
	mov.b64 	%rd20469, {%r37344, %r37343};
	shf.r.wrap.b32 	%r37345, %r37342, %r37341, 18;
	shf.r.wrap.b32 	%r37346, %r37341, %r37342, 18;
	mov.b64 	%rd20470, {%r37346, %r37345};
	xor.b64  	%rd20471, %rd20470, %rd20469;
	shf.l.wrap.b32 	%r37347, %r37341, %r37342, 23;
	shf.l.wrap.b32 	%r37348, %r37342, %r37341, 23;
	mov.b64 	%rd20472, {%r37348, %r37347};
	xor.b64  	%rd20473, %rd20471, %rd20472;
	xor.b64  	%rd20474, %rd20432, %rd20407;
	and.b64  	%rd20475, %rd20457, %rd20474;
	xor.b64  	%rd20476, %rd20475, %rd20407;
	add.s64 	%rd20477, %rd20379, %rd20349;
	ld.const.u64 	%rd20478, [k_sha512+32];
	add.s64 	%rd20479, %rd20477, %rd20478;
	add.s64 	%rd20480, %rd20479, %rd20476;
	add.s64 	%rd20481, %rd20480, %rd20473;
	add.s64 	%rd20482, %rd20481, %rd20393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37349,%dummy}, %rd20468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37350}, %rd20468;
	}
	shf.r.wrap.b32 	%r37351, %r37350, %r37349, 28;
	shf.r.wrap.b32 	%r37352, %r37349, %r37350, 28;
	mov.b64 	%rd20483, {%r37352, %r37351};
	shf.l.wrap.b32 	%r37353, %r37349, %r37350, 30;
	shf.l.wrap.b32 	%r37354, %r37350, %r37349, 30;
	mov.b64 	%rd20484, {%r37354, %r37353};
	xor.b64  	%rd20485, %rd20484, %rd20483;
	shf.l.wrap.b32 	%r37355, %r37349, %r37350, 25;
	shf.l.wrap.b32 	%r37356, %r37350, %r37349, 25;
	mov.b64 	%rd20486, {%r37356, %r37355};
	xor.b64  	%rd20487, %rd20485, %rd20486;
	and.b64  	%rd20488, %rd20468, %rd20443;
	xor.b64  	%rd20489, %rd20468, %rd20443;
	and.b64  	%rd20490, %rd20489, %rd20418;
	or.b64  	%rd20491, %rd20490, %rd20488;
	add.s64 	%rd20492, %rd20481, %rd20491;
	add.s64 	%rd20493, %rd20492, %rd20487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37357,%dummy}, %rd20482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37358}, %rd20482;
	}
	shf.r.wrap.b32 	%r37359, %r37358, %r37357, 14;
	shf.r.wrap.b32 	%r37360, %r37357, %r37358, 14;
	mov.b64 	%rd20494, {%r37360, %r37359};
	shf.r.wrap.b32 	%r37361, %r37358, %r37357, 18;
	shf.r.wrap.b32 	%r37362, %r37357, %r37358, 18;
	mov.b64 	%rd20495, {%r37362, %r37361};
	xor.b64  	%rd20496, %rd20495, %rd20494;
	shf.l.wrap.b32 	%r37363, %r37357, %r37358, 23;
	shf.l.wrap.b32 	%r37364, %r37358, %r37357, 23;
	mov.b64 	%rd20497, {%r37364, %r37363};
	xor.b64  	%rd20498, %rd20496, %rd20497;
	xor.b64  	%rd20499, %rd20457, %rd20432;
	and.b64  	%rd20500, %rd20482, %rd20499;
	xor.b64  	%rd20501, %rd20500, %rd20432;
	add.s64 	%rd20502, %rd20407, %rd20350;
	ld.const.u64 	%rd20503, [k_sha512+40];
	add.s64 	%rd20504, %rd20502, %rd20503;
	add.s64 	%rd20505, %rd20504, %rd20501;
	add.s64 	%rd20506, %rd20505, %rd20498;
	add.s64 	%rd20507, %rd20506, %rd20418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37365,%dummy}, %rd20493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37366}, %rd20493;
	}
	shf.r.wrap.b32 	%r37367, %r37366, %r37365, 28;
	shf.r.wrap.b32 	%r37368, %r37365, %r37366, 28;
	mov.b64 	%rd20508, {%r37368, %r37367};
	shf.l.wrap.b32 	%r37369, %r37365, %r37366, 30;
	shf.l.wrap.b32 	%r37370, %r37366, %r37365, 30;
	mov.b64 	%rd20509, {%r37370, %r37369};
	xor.b64  	%rd20510, %rd20509, %rd20508;
	shf.l.wrap.b32 	%r37371, %r37365, %r37366, 25;
	shf.l.wrap.b32 	%r37372, %r37366, %r37365, 25;
	mov.b64 	%rd20511, {%r37372, %r37371};
	xor.b64  	%rd20512, %rd20510, %rd20511;
	and.b64  	%rd20513, %rd20493, %rd20468;
	xor.b64  	%rd20514, %rd20493, %rd20468;
	and.b64  	%rd20515, %rd20514, %rd20443;
	or.b64  	%rd20516, %rd20515, %rd20513;
	add.s64 	%rd20517, %rd20506, %rd20516;
	add.s64 	%rd20518, %rd20517, %rd20512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37373,%dummy}, %rd20507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37374}, %rd20507;
	}
	shf.r.wrap.b32 	%r37375, %r37374, %r37373, 14;
	shf.r.wrap.b32 	%r37376, %r37373, %r37374, 14;
	mov.b64 	%rd20519, {%r37376, %r37375};
	shf.r.wrap.b32 	%r37377, %r37374, %r37373, 18;
	shf.r.wrap.b32 	%r37378, %r37373, %r37374, 18;
	mov.b64 	%rd20520, {%r37378, %r37377};
	xor.b64  	%rd20521, %rd20520, %rd20519;
	shf.l.wrap.b32 	%r37379, %r37373, %r37374, 23;
	shf.l.wrap.b32 	%r37380, %r37374, %r37373, 23;
	mov.b64 	%rd20522, {%r37380, %r37379};
	xor.b64  	%rd20523, %rd20521, %rd20522;
	xor.b64  	%rd20524, %rd20482, %rd20457;
	and.b64  	%rd20525, %rd20507, %rd20524;
	xor.b64  	%rd20526, %rd20525, %rd20457;
	add.s64 	%rd20527, %rd20432, %rd20351;
	ld.const.u64 	%rd20528, [k_sha512+48];
	add.s64 	%rd20529, %rd20527, %rd20528;
	add.s64 	%rd20530, %rd20529, %rd20526;
	add.s64 	%rd20531, %rd20530, %rd20523;
	add.s64 	%rd20532, %rd20531, %rd20443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37381,%dummy}, %rd20518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37382}, %rd20518;
	}
	shf.r.wrap.b32 	%r37383, %r37382, %r37381, 28;
	shf.r.wrap.b32 	%r37384, %r37381, %r37382, 28;
	mov.b64 	%rd20533, {%r37384, %r37383};
	shf.l.wrap.b32 	%r37385, %r37381, %r37382, 30;
	shf.l.wrap.b32 	%r37386, %r37382, %r37381, 30;
	mov.b64 	%rd20534, {%r37386, %r37385};
	xor.b64  	%rd20535, %rd20534, %rd20533;
	shf.l.wrap.b32 	%r37387, %r37381, %r37382, 25;
	shf.l.wrap.b32 	%r37388, %r37382, %r37381, 25;
	mov.b64 	%rd20536, {%r37388, %r37387};
	xor.b64  	%rd20537, %rd20535, %rd20536;
	and.b64  	%rd20538, %rd20518, %rd20493;
	xor.b64  	%rd20539, %rd20518, %rd20493;
	and.b64  	%rd20540, %rd20539, %rd20468;
	or.b64  	%rd20541, %rd20540, %rd20538;
	add.s64 	%rd20542, %rd20531, %rd20541;
	add.s64 	%rd20543, %rd20542, %rd20537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37389,%dummy}, %rd20532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37390}, %rd20532;
	}
	shf.r.wrap.b32 	%r37391, %r37390, %r37389, 14;
	shf.r.wrap.b32 	%r37392, %r37389, %r37390, 14;
	mov.b64 	%rd20544, {%r37392, %r37391};
	shf.r.wrap.b32 	%r37393, %r37390, %r37389, 18;
	shf.r.wrap.b32 	%r37394, %r37389, %r37390, 18;
	mov.b64 	%rd20545, {%r37394, %r37393};
	xor.b64  	%rd20546, %rd20545, %rd20544;
	shf.l.wrap.b32 	%r37395, %r37389, %r37390, 23;
	shf.l.wrap.b32 	%r37396, %r37390, %r37389, 23;
	mov.b64 	%rd20547, {%r37396, %r37395};
	xor.b64  	%rd20548, %rd20546, %rd20547;
	xor.b64  	%rd20549, %rd20507, %rd20482;
	and.b64  	%rd20550, %rd20532, %rd20549;
	xor.b64  	%rd20551, %rd20550, %rd20482;
	add.s64 	%rd20552, %rd20457, %rd20352;
	ld.const.u64 	%rd20553, [k_sha512+56];
	add.s64 	%rd20554, %rd20552, %rd20553;
	add.s64 	%rd20555, %rd20554, %rd20551;
	add.s64 	%rd20556, %rd20555, %rd20548;
	add.s64 	%rd20557, %rd20556, %rd20468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37397,%dummy}, %rd20543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37398}, %rd20543;
	}
	shf.r.wrap.b32 	%r37399, %r37398, %r37397, 28;
	shf.r.wrap.b32 	%r37400, %r37397, %r37398, 28;
	mov.b64 	%rd20558, {%r37400, %r37399};
	shf.l.wrap.b32 	%r37401, %r37397, %r37398, 30;
	shf.l.wrap.b32 	%r37402, %r37398, %r37397, 30;
	mov.b64 	%rd20559, {%r37402, %r37401};
	xor.b64  	%rd20560, %rd20559, %rd20558;
	shf.l.wrap.b32 	%r37403, %r37397, %r37398, 25;
	shf.l.wrap.b32 	%r37404, %r37398, %r37397, 25;
	mov.b64 	%rd20561, {%r37404, %r37403};
	xor.b64  	%rd20562, %rd20560, %rd20561;
	and.b64  	%rd20563, %rd20543, %rd20518;
	xor.b64  	%rd20564, %rd20543, %rd20518;
	and.b64  	%rd20565, %rd20564, %rd20493;
	or.b64  	%rd20566, %rd20565, %rd20563;
	add.s64 	%rd20567, %rd20556, %rd20566;
	add.s64 	%rd20568, %rd20567, %rd20562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37405,%dummy}, %rd20557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37406}, %rd20557;
	}
	shf.r.wrap.b32 	%r37407, %r37406, %r37405, 14;
	shf.r.wrap.b32 	%r37408, %r37405, %r37406, 14;
	mov.b64 	%rd20569, {%r37408, %r37407};
	shf.r.wrap.b32 	%r37409, %r37406, %r37405, 18;
	shf.r.wrap.b32 	%r37410, %r37405, %r37406, 18;
	mov.b64 	%rd20570, {%r37410, %r37409};
	xor.b64  	%rd20571, %rd20570, %rd20569;
	shf.l.wrap.b32 	%r37411, %r37405, %r37406, 23;
	shf.l.wrap.b32 	%r37412, %r37406, %r37405, 23;
	mov.b64 	%rd20572, {%r37412, %r37411};
	xor.b64  	%rd20573, %rd20571, %rd20572;
	xor.b64  	%rd20574, %rd20532, %rd20507;
	and.b64  	%rd20575, %rd20557, %rd20574;
	xor.b64  	%rd20576, %rd20575, %rd20507;
	add.s64 	%rd20577, %rd20482, %rd20353;
	ld.const.u64 	%rd20578, [k_sha512+64];
	add.s64 	%rd20579, %rd20577, %rd20578;
	add.s64 	%rd20580, %rd20579, %rd20576;
	add.s64 	%rd20581, %rd20580, %rd20573;
	add.s64 	%rd20582, %rd20581, %rd20493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37413,%dummy}, %rd20568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37414}, %rd20568;
	}
	shf.r.wrap.b32 	%r37415, %r37414, %r37413, 28;
	shf.r.wrap.b32 	%r37416, %r37413, %r37414, 28;
	mov.b64 	%rd20583, {%r37416, %r37415};
	shf.l.wrap.b32 	%r37417, %r37413, %r37414, 30;
	shf.l.wrap.b32 	%r37418, %r37414, %r37413, 30;
	mov.b64 	%rd20584, {%r37418, %r37417};
	xor.b64  	%rd20585, %rd20584, %rd20583;
	shf.l.wrap.b32 	%r37419, %r37413, %r37414, 25;
	shf.l.wrap.b32 	%r37420, %r37414, %r37413, 25;
	mov.b64 	%rd20586, {%r37420, %r37419};
	xor.b64  	%rd20587, %rd20585, %rd20586;
	and.b64  	%rd20588, %rd20568, %rd20543;
	xor.b64  	%rd20589, %rd20568, %rd20543;
	and.b64  	%rd20590, %rd20589, %rd20518;
	or.b64  	%rd20591, %rd20590, %rd20588;
	add.s64 	%rd20592, %rd20581, %rd20591;
	add.s64 	%rd20593, %rd20592, %rd20587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37421,%dummy}, %rd20582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37422}, %rd20582;
	}
	shf.r.wrap.b32 	%r37423, %r37422, %r37421, 14;
	shf.r.wrap.b32 	%r37424, %r37421, %r37422, 14;
	mov.b64 	%rd20594, {%r37424, %r37423};
	shf.r.wrap.b32 	%r37425, %r37422, %r37421, 18;
	shf.r.wrap.b32 	%r37426, %r37421, %r37422, 18;
	mov.b64 	%rd20595, {%r37426, %r37425};
	xor.b64  	%rd20596, %rd20595, %rd20594;
	shf.l.wrap.b32 	%r37427, %r37421, %r37422, 23;
	shf.l.wrap.b32 	%r37428, %r37422, %r37421, 23;
	mov.b64 	%rd20597, {%r37428, %r37427};
	xor.b64  	%rd20598, %rd20596, %rd20597;
	xor.b64  	%rd20599, %rd20557, %rd20532;
	and.b64  	%rd20600, %rd20582, %rd20599;
	xor.b64  	%rd20601, %rd20600, %rd20532;
	add.s64 	%rd20602, %rd20507, %rd20354;
	ld.const.u64 	%rd20603, [k_sha512+72];
	add.s64 	%rd20604, %rd20602, %rd20603;
	add.s64 	%rd20605, %rd20604, %rd20601;
	add.s64 	%rd20606, %rd20605, %rd20598;
	add.s64 	%rd20607, %rd20606, %rd20518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37429,%dummy}, %rd20593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37430}, %rd20593;
	}
	shf.r.wrap.b32 	%r37431, %r37430, %r37429, 28;
	shf.r.wrap.b32 	%r37432, %r37429, %r37430, 28;
	mov.b64 	%rd20608, {%r37432, %r37431};
	shf.l.wrap.b32 	%r37433, %r37429, %r37430, 30;
	shf.l.wrap.b32 	%r37434, %r37430, %r37429, 30;
	mov.b64 	%rd20609, {%r37434, %r37433};
	xor.b64  	%rd20610, %rd20609, %rd20608;
	shf.l.wrap.b32 	%r37435, %r37429, %r37430, 25;
	shf.l.wrap.b32 	%r37436, %r37430, %r37429, 25;
	mov.b64 	%rd20611, {%r37436, %r37435};
	xor.b64  	%rd20612, %rd20610, %rd20611;
	and.b64  	%rd20613, %rd20593, %rd20568;
	xor.b64  	%rd20614, %rd20593, %rd20568;
	and.b64  	%rd20615, %rd20614, %rd20543;
	or.b64  	%rd20616, %rd20615, %rd20613;
	add.s64 	%rd20617, %rd20606, %rd20616;
	add.s64 	%rd20618, %rd20617, %rd20612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37437,%dummy}, %rd20607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37438}, %rd20607;
	}
	shf.r.wrap.b32 	%r37439, %r37438, %r37437, 14;
	shf.r.wrap.b32 	%r37440, %r37437, %r37438, 14;
	mov.b64 	%rd20619, {%r37440, %r37439};
	shf.r.wrap.b32 	%r37441, %r37438, %r37437, 18;
	shf.r.wrap.b32 	%r37442, %r37437, %r37438, 18;
	mov.b64 	%rd20620, {%r37442, %r37441};
	xor.b64  	%rd20621, %rd20620, %rd20619;
	shf.l.wrap.b32 	%r37443, %r37437, %r37438, 23;
	shf.l.wrap.b32 	%r37444, %r37438, %r37437, 23;
	mov.b64 	%rd20622, {%r37444, %r37443};
	xor.b64  	%rd20623, %rd20621, %rd20622;
	xor.b64  	%rd20624, %rd20582, %rd20557;
	and.b64  	%rd20625, %rd20607, %rd20624;
	xor.b64  	%rd20626, %rd20625, %rd20557;
	add.s64 	%rd20627, %rd20532, %rd20355;
	ld.const.u64 	%rd20628, [k_sha512+80];
	add.s64 	%rd20629, %rd20627, %rd20628;
	add.s64 	%rd20630, %rd20629, %rd20626;
	add.s64 	%rd20631, %rd20630, %rd20623;
	add.s64 	%rd20632, %rd20631, %rd20543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37445,%dummy}, %rd20618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37446}, %rd20618;
	}
	shf.r.wrap.b32 	%r37447, %r37446, %r37445, 28;
	shf.r.wrap.b32 	%r37448, %r37445, %r37446, 28;
	mov.b64 	%rd20633, {%r37448, %r37447};
	shf.l.wrap.b32 	%r37449, %r37445, %r37446, 30;
	shf.l.wrap.b32 	%r37450, %r37446, %r37445, 30;
	mov.b64 	%rd20634, {%r37450, %r37449};
	xor.b64  	%rd20635, %rd20634, %rd20633;
	shf.l.wrap.b32 	%r37451, %r37445, %r37446, 25;
	shf.l.wrap.b32 	%r37452, %r37446, %r37445, 25;
	mov.b64 	%rd20636, {%r37452, %r37451};
	xor.b64  	%rd20637, %rd20635, %rd20636;
	and.b64  	%rd20638, %rd20618, %rd20593;
	xor.b64  	%rd20639, %rd20618, %rd20593;
	and.b64  	%rd20640, %rd20639, %rd20568;
	or.b64  	%rd20641, %rd20640, %rd20638;
	add.s64 	%rd20642, %rd20631, %rd20641;
	add.s64 	%rd20643, %rd20642, %rd20637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37453,%dummy}, %rd20632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37454}, %rd20632;
	}
	shf.r.wrap.b32 	%r37455, %r37454, %r37453, 14;
	shf.r.wrap.b32 	%r37456, %r37453, %r37454, 14;
	mov.b64 	%rd20644, {%r37456, %r37455};
	shf.r.wrap.b32 	%r37457, %r37454, %r37453, 18;
	shf.r.wrap.b32 	%r37458, %r37453, %r37454, 18;
	mov.b64 	%rd20645, {%r37458, %r37457};
	xor.b64  	%rd20646, %rd20645, %rd20644;
	shf.l.wrap.b32 	%r37459, %r37453, %r37454, 23;
	shf.l.wrap.b32 	%r37460, %r37454, %r37453, 23;
	mov.b64 	%rd20647, {%r37460, %r37459};
	xor.b64  	%rd20648, %rd20646, %rd20647;
	xor.b64  	%rd20649, %rd20607, %rd20582;
	and.b64  	%rd20650, %rd20632, %rd20649;
	xor.b64  	%rd20651, %rd20650, %rd20582;
	add.s64 	%rd20652, %rd20557, %rd20356;
	ld.const.u64 	%rd20653, [k_sha512+88];
	add.s64 	%rd20654, %rd20652, %rd20653;
	add.s64 	%rd20655, %rd20654, %rd20651;
	add.s64 	%rd20656, %rd20655, %rd20648;
	add.s64 	%rd20657, %rd20656, %rd20568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37461,%dummy}, %rd20643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37462}, %rd20643;
	}
	shf.r.wrap.b32 	%r37463, %r37462, %r37461, 28;
	shf.r.wrap.b32 	%r37464, %r37461, %r37462, 28;
	mov.b64 	%rd20658, {%r37464, %r37463};
	shf.l.wrap.b32 	%r37465, %r37461, %r37462, 30;
	shf.l.wrap.b32 	%r37466, %r37462, %r37461, 30;
	mov.b64 	%rd20659, {%r37466, %r37465};
	xor.b64  	%rd20660, %rd20659, %rd20658;
	shf.l.wrap.b32 	%r37467, %r37461, %r37462, 25;
	shf.l.wrap.b32 	%r37468, %r37462, %r37461, 25;
	mov.b64 	%rd20661, {%r37468, %r37467};
	xor.b64  	%rd20662, %rd20660, %rd20661;
	and.b64  	%rd20663, %rd20643, %rd20618;
	xor.b64  	%rd20664, %rd20643, %rd20618;
	and.b64  	%rd20665, %rd20664, %rd20593;
	or.b64  	%rd20666, %rd20665, %rd20663;
	add.s64 	%rd20667, %rd20656, %rd20666;
	add.s64 	%rd20668, %rd20667, %rd20662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37469,%dummy}, %rd20657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37470}, %rd20657;
	}
	shf.r.wrap.b32 	%r37471, %r37470, %r37469, 14;
	shf.r.wrap.b32 	%r37472, %r37469, %r37470, 14;
	mov.b64 	%rd20669, {%r37472, %r37471};
	shf.r.wrap.b32 	%r37473, %r37470, %r37469, 18;
	shf.r.wrap.b32 	%r37474, %r37469, %r37470, 18;
	mov.b64 	%rd20670, {%r37474, %r37473};
	xor.b64  	%rd20671, %rd20670, %rd20669;
	shf.l.wrap.b32 	%r37475, %r37469, %r37470, 23;
	shf.l.wrap.b32 	%r37476, %r37470, %r37469, 23;
	mov.b64 	%rd20672, {%r37476, %r37475};
	xor.b64  	%rd20673, %rd20671, %rd20672;
	xor.b64  	%rd20674, %rd20632, %rd20607;
	and.b64  	%rd20675, %rd20657, %rd20674;
	xor.b64  	%rd20676, %rd20675, %rd20607;
	add.s64 	%rd20677, %rd20582, %rd20357;
	ld.const.u64 	%rd20678, [k_sha512+96];
	add.s64 	%rd20679, %rd20677, %rd20678;
	add.s64 	%rd20680, %rd20679, %rd20676;
	add.s64 	%rd20681, %rd20680, %rd20673;
	add.s64 	%rd20682, %rd20681, %rd20593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37477,%dummy}, %rd20668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37478}, %rd20668;
	}
	shf.r.wrap.b32 	%r37479, %r37478, %r37477, 28;
	shf.r.wrap.b32 	%r37480, %r37477, %r37478, 28;
	mov.b64 	%rd20683, {%r37480, %r37479};
	shf.l.wrap.b32 	%r37481, %r37477, %r37478, 30;
	shf.l.wrap.b32 	%r37482, %r37478, %r37477, 30;
	mov.b64 	%rd20684, {%r37482, %r37481};
	xor.b64  	%rd20685, %rd20684, %rd20683;
	shf.l.wrap.b32 	%r37483, %r37477, %r37478, 25;
	shf.l.wrap.b32 	%r37484, %r37478, %r37477, 25;
	mov.b64 	%rd20686, {%r37484, %r37483};
	xor.b64  	%rd20687, %rd20685, %rd20686;
	and.b64  	%rd20688, %rd20668, %rd20643;
	xor.b64  	%rd20689, %rd20668, %rd20643;
	and.b64  	%rd20690, %rd20689, %rd20618;
	or.b64  	%rd20691, %rd20690, %rd20688;
	add.s64 	%rd20692, %rd20681, %rd20691;
	add.s64 	%rd20693, %rd20692, %rd20687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37485,%dummy}, %rd20682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37486}, %rd20682;
	}
	shf.r.wrap.b32 	%r37487, %r37486, %r37485, 14;
	shf.r.wrap.b32 	%r37488, %r37485, %r37486, 14;
	mov.b64 	%rd20694, {%r37488, %r37487};
	shf.r.wrap.b32 	%r37489, %r37486, %r37485, 18;
	shf.r.wrap.b32 	%r37490, %r37485, %r37486, 18;
	mov.b64 	%rd20695, {%r37490, %r37489};
	xor.b64  	%rd20696, %rd20695, %rd20694;
	shf.l.wrap.b32 	%r37491, %r37485, %r37486, 23;
	shf.l.wrap.b32 	%r37492, %r37486, %r37485, 23;
	mov.b64 	%rd20697, {%r37492, %r37491};
	xor.b64  	%rd20698, %rd20696, %rd20697;
	xor.b64  	%rd20699, %rd20657, %rd20632;
	and.b64  	%rd20700, %rd20682, %rd20699;
	xor.b64  	%rd20701, %rd20700, %rd20632;
	add.s64 	%rd20702, %rd20607, %rd20358;
	ld.const.u64 	%rd20703, [k_sha512+104];
	add.s64 	%rd20704, %rd20702, %rd20703;
	add.s64 	%rd20705, %rd20704, %rd20701;
	add.s64 	%rd20706, %rd20705, %rd20698;
	add.s64 	%rd20707, %rd20706, %rd20618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37493,%dummy}, %rd20693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37494}, %rd20693;
	}
	shf.r.wrap.b32 	%r37495, %r37494, %r37493, 28;
	shf.r.wrap.b32 	%r37496, %r37493, %r37494, 28;
	mov.b64 	%rd20708, {%r37496, %r37495};
	shf.l.wrap.b32 	%r37497, %r37493, %r37494, 30;
	shf.l.wrap.b32 	%r37498, %r37494, %r37493, 30;
	mov.b64 	%rd20709, {%r37498, %r37497};
	xor.b64  	%rd20710, %rd20709, %rd20708;
	shf.l.wrap.b32 	%r37499, %r37493, %r37494, 25;
	shf.l.wrap.b32 	%r37500, %r37494, %r37493, 25;
	mov.b64 	%rd20711, {%r37500, %r37499};
	xor.b64  	%rd20712, %rd20710, %rd20711;
	and.b64  	%rd20713, %rd20693, %rd20668;
	xor.b64  	%rd20714, %rd20693, %rd20668;
	and.b64  	%rd20715, %rd20714, %rd20643;
	or.b64  	%rd20716, %rd20715, %rd20713;
	add.s64 	%rd20717, %rd20706, %rd20716;
	add.s64 	%rd20718, %rd20717, %rd20712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37501,%dummy}, %rd20707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37502}, %rd20707;
	}
	shf.r.wrap.b32 	%r37503, %r37502, %r37501, 14;
	shf.r.wrap.b32 	%r37504, %r37501, %r37502, 14;
	mov.b64 	%rd20719, {%r37504, %r37503};
	shf.r.wrap.b32 	%r37505, %r37502, %r37501, 18;
	shf.r.wrap.b32 	%r37506, %r37501, %r37502, 18;
	mov.b64 	%rd20720, {%r37506, %r37505};
	xor.b64  	%rd20721, %rd20720, %rd20719;
	shf.l.wrap.b32 	%r37507, %r37501, %r37502, 23;
	shf.l.wrap.b32 	%r37508, %r37502, %r37501, 23;
	mov.b64 	%rd20722, {%r37508, %r37507};
	xor.b64  	%rd20723, %rd20721, %rd20722;
	xor.b64  	%rd20724, %rd20682, %rd20657;
	and.b64  	%rd20725, %rd20707, %rd20724;
	xor.b64  	%rd20726, %rd20725, %rd20657;
	add.s64 	%rd20727, %rd20632, %rd20359;
	ld.const.u64 	%rd20728, [k_sha512+112];
	add.s64 	%rd20729, %rd20727, %rd20728;
	add.s64 	%rd20730, %rd20729, %rd20726;
	add.s64 	%rd20731, %rd20730, %rd20723;
	add.s64 	%rd20732, %rd20731, %rd20643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37509,%dummy}, %rd20718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37510}, %rd20718;
	}
	shf.r.wrap.b32 	%r37511, %r37510, %r37509, 28;
	shf.r.wrap.b32 	%r37512, %r37509, %r37510, 28;
	mov.b64 	%rd20733, {%r37512, %r37511};
	shf.l.wrap.b32 	%r37513, %r37509, %r37510, 30;
	shf.l.wrap.b32 	%r37514, %r37510, %r37509, 30;
	mov.b64 	%rd20734, {%r37514, %r37513};
	xor.b64  	%rd20735, %rd20734, %rd20733;
	shf.l.wrap.b32 	%r37515, %r37509, %r37510, 25;
	shf.l.wrap.b32 	%r37516, %r37510, %r37509, 25;
	mov.b64 	%rd20736, {%r37516, %r37515};
	xor.b64  	%rd20737, %rd20735, %rd20736;
	and.b64  	%rd20738, %rd20718, %rd20693;
	xor.b64  	%rd20739, %rd20718, %rd20693;
	and.b64  	%rd20740, %rd20739, %rd20668;
	or.b64  	%rd20741, %rd20740, %rd20738;
	add.s64 	%rd20742, %rd20731, %rd20741;
	add.s64 	%rd20743, %rd20742, %rd20737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37517,%dummy}, %rd20732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37518}, %rd20732;
	}
	shf.r.wrap.b32 	%r37519, %r37518, %r37517, 14;
	shf.r.wrap.b32 	%r37520, %r37517, %r37518, 14;
	mov.b64 	%rd20744, {%r37520, %r37519};
	shf.r.wrap.b32 	%r37521, %r37518, %r37517, 18;
	shf.r.wrap.b32 	%r37522, %r37517, %r37518, 18;
	mov.b64 	%rd20745, {%r37522, %r37521};
	xor.b64  	%rd20746, %rd20745, %rd20744;
	shf.l.wrap.b32 	%r37523, %r37517, %r37518, 23;
	shf.l.wrap.b32 	%r37524, %r37518, %r37517, 23;
	mov.b64 	%rd20747, {%r37524, %r37523};
	xor.b64  	%rd20748, %rd20746, %rd20747;
	xor.b64  	%rd20749, %rd20707, %rd20682;
	and.b64  	%rd20750, %rd20732, %rd20749;
	xor.b64  	%rd20751, %rd20750, %rd20682;
	add.s64 	%rd20752, %rd20657, %rd20360;
	ld.const.u64 	%rd20753, [k_sha512+120];
	add.s64 	%rd20754, %rd20752, %rd20753;
	add.s64 	%rd20755, %rd20754, %rd20751;
	add.s64 	%rd20756, %rd20755, %rd20748;
	add.s64 	%rd20757, %rd20756, %rd20668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37525,%dummy}, %rd20743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37526}, %rd20743;
	}
	shf.r.wrap.b32 	%r37527, %r37526, %r37525, 28;
	shf.r.wrap.b32 	%r37528, %r37525, %r37526, 28;
	mov.b64 	%rd20758, {%r37528, %r37527};
	shf.l.wrap.b32 	%r37529, %r37525, %r37526, 30;
	shf.l.wrap.b32 	%r37530, %r37526, %r37525, 30;
	mov.b64 	%rd20759, {%r37530, %r37529};
	xor.b64  	%rd20760, %rd20759, %rd20758;
	shf.l.wrap.b32 	%r37531, %r37525, %r37526, 25;
	shf.l.wrap.b32 	%r37532, %r37526, %r37525, 25;
	mov.b64 	%rd20761, {%r37532, %r37531};
	xor.b64  	%rd20762, %rd20760, %rd20761;
	and.b64  	%rd20763, %rd20743, %rd20718;
	xor.b64  	%rd20764, %rd20743, %rd20718;
	and.b64  	%rd20765, %rd20764, %rd20693;
	or.b64  	%rd20766, %rd20765, %rd20763;
	add.s64 	%rd20767, %rd20756, %rd20766;
	add.s64 	%rd20768, %rd20767, %rd20762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37533,%dummy}, %rd20359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37534}, %rd20359;
	}
	shf.r.wrap.b32 	%r37535, %r37534, %r37533, 19;
	shf.r.wrap.b32 	%r37536, %r37533, %r37534, 19;
	mov.b64 	%rd20769, {%r37536, %r37535};
	shf.l.wrap.b32 	%r37537, %r37533, %r37534, 3;
	shf.l.wrap.b32 	%r37538, %r37534, %r37533, 3;
	mov.b64 	%rd20770, {%r37538, %r37537};
	shr.u64 	%rd20771, %rd20359, 6;
	xor.b64  	%rd20772, %rd20769, %rd20771;
	xor.b64  	%rd20773, %rd20772, %rd20770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37539,%dummy}, %rd20346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37540}, %rd20346;
	}
	shf.r.wrap.b32 	%r37541, %r37540, %r37539, 1;
	shf.r.wrap.b32 	%r37542, %r37539, %r37540, 1;
	mov.b64 	%rd20774, {%r37542, %r37541};
	shf.r.wrap.b32 	%r37543, %r37540, %r37539, 8;
	shf.r.wrap.b32 	%r37544, %r37539, %r37540, 8;
	mov.b64 	%rd20775, {%r37544, %r37543};
	shr.u64 	%rd20776, %rd20346, 7;
	xor.b64  	%rd20777, %rd20774, %rd20776;
	xor.b64  	%rd20778, %rd20777, %rd20775;
	add.s64 	%rd20779, %rd20354, %rd20345;
	add.s64 	%rd20780, %rd20779, %rd20773;
	add.s64 	%rd20781, %rd20780, %rd20778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37545,%dummy}, %rd20360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37546}, %rd20360;
	}
	shf.r.wrap.b32 	%r37547, %r37546, %r37545, 19;
	shf.r.wrap.b32 	%r37548, %r37545, %r37546, 19;
	mov.b64 	%rd20782, {%r37548, %r37547};
	shf.l.wrap.b32 	%r37549, %r37545, %r37546, 3;
	shf.l.wrap.b32 	%r37550, %r37546, %r37545, 3;
	mov.b64 	%rd20783, {%r37550, %r37549};
	shr.u64 	%rd20784, %rd20360, 6;
	xor.b64  	%rd20785, %rd20782, %rd20784;
	xor.b64  	%rd20786, %rd20785, %rd20783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37551,%dummy}, %rd20347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37552}, %rd20347;
	}
	shf.r.wrap.b32 	%r37553, %r37552, %r37551, 1;
	shf.r.wrap.b32 	%r37554, %r37551, %r37552, 1;
	mov.b64 	%rd20787, {%r37554, %r37553};
	shf.r.wrap.b32 	%r37555, %r37552, %r37551, 8;
	shf.r.wrap.b32 	%r37556, %r37551, %r37552, 8;
	mov.b64 	%rd20788, {%r37556, %r37555};
	shr.u64 	%rd20789, %rd20347, 7;
	xor.b64  	%rd20790, %rd20787, %rd20789;
	xor.b64  	%rd20791, %rd20790, %rd20788;
	add.s64 	%rd20792, %rd20355, %rd20346;
	add.s64 	%rd20793, %rd20792, %rd20786;
	add.s64 	%rd20794, %rd20793, %rd20791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37557,%dummy}, %rd20781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37558}, %rd20781;
	}
	shf.r.wrap.b32 	%r37559, %r37558, %r37557, 19;
	shf.r.wrap.b32 	%r37560, %r37557, %r37558, 19;
	mov.b64 	%rd20795, {%r37560, %r37559};
	shf.l.wrap.b32 	%r37561, %r37557, %r37558, 3;
	shf.l.wrap.b32 	%r37562, %r37558, %r37557, 3;
	mov.b64 	%rd20796, {%r37562, %r37561};
	shr.u64 	%rd20797, %rd20781, 6;
	xor.b64  	%rd20798, %rd20795, %rd20797;
	xor.b64  	%rd20799, %rd20798, %rd20796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37563,%dummy}, %rd20348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37564}, %rd20348;
	}
	shf.r.wrap.b32 	%r37565, %r37564, %r37563, 1;
	shf.r.wrap.b32 	%r37566, %r37563, %r37564, 1;
	mov.b64 	%rd20800, {%r37566, %r37565};
	shf.r.wrap.b32 	%r37567, %r37564, %r37563, 8;
	shf.r.wrap.b32 	%r37568, %r37563, %r37564, 8;
	mov.b64 	%rd20801, {%r37568, %r37567};
	shr.u64 	%rd20802, %rd20348, 7;
	xor.b64  	%rd20803, %rd20800, %rd20802;
	xor.b64  	%rd20804, %rd20803, %rd20801;
	add.s64 	%rd20805, %rd20356, %rd20347;
	add.s64 	%rd20806, %rd20805, %rd20799;
	add.s64 	%rd20807, %rd20806, %rd20804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37569,%dummy}, %rd20794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37570}, %rd20794;
	}
	shf.r.wrap.b32 	%r37571, %r37570, %r37569, 19;
	shf.r.wrap.b32 	%r37572, %r37569, %r37570, 19;
	mov.b64 	%rd20808, {%r37572, %r37571};
	shf.l.wrap.b32 	%r37573, %r37569, %r37570, 3;
	shf.l.wrap.b32 	%r37574, %r37570, %r37569, 3;
	mov.b64 	%rd20809, {%r37574, %r37573};
	shr.u64 	%rd20810, %rd20794, 6;
	xor.b64  	%rd20811, %rd20808, %rd20810;
	xor.b64  	%rd20812, %rd20811, %rd20809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37575,%dummy}, %rd20349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37576}, %rd20349;
	}
	shf.r.wrap.b32 	%r37577, %r37576, %r37575, 1;
	shf.r.wrap.b32 	%r37578, %r37575, %r37576, 1;
	mov.b64 	%rd20813, {%r37578, %r37577};
	shf.r.wrap.b32 	%r37579, %r37576, %r37575, 8;
	shf.r.wrap.b32 	%r37580, %r37575, %r37576, 8;
	mov.b64 	%rd20814, {%r37580, %r37579};
	shr.u64 	%rd20815, %rd20349, 7;
	xor.b64  	%rd20816, %rd20813, %rd20815;
	xor.b64  	%rd20817, %rd20816, %rd20814;
	add.s64 	%rd20818, %rd20357, %rd20348;
	add.s64 	%rd20819, %rd20818, %rd20812;
	add.s64 	%rd20820, %rd20819, %rd20817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37581,%dummy}, %rd20807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37582}, %rd20807;
	}
	shf.r.wrap.b32 	%r37583, %r37582, %r37581, 19;
	shf.r.wrap.b32 	%r37584, %r37581, %r37582, 19;
	mov.b64 	%rd20821, {%r37584, %r37583};
	shf.l.wrap.b32 	%r37585, %r37581, %r37582, 3;
	shf.l.wrap.b32 	%r37586, %r37582, %r37581, 3;
	mov.b64 	%rd20822, {%r37586, %r37585};
	shr.u64 	%rd20823, %rd20807, 6;
	xor.b64  	%rd20824, %rd20821, %rd20823;
	xor.b64  	%rd20825, %rd20824, %rd20822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37587,%dummy}, %rd20350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37588}, %rd20350;
	}
	shf.r.wrap.b32 	%r37589, %r37588, %r37587, 1;
	shf.r.wrap.b32 	%r37590, %r37587, %r37588, 1;
	mov.b64 	%rd20826, {%r37590, %r37589};
	shf.r.wrap.b32 	%r37591, %r37588, %r37587, 8;
	shf.r.wrap.b32 	%r37592, %r37587, %r37588, 8;
	mov.b64 	%rd20827, {%r37592, %r37591};
	shr.u64 	%rd20828, %rd20350, 7;
	xor.b64  	%rd20829, %rd20826, %rd20828;
	xor.b64  	%rd20830, %rd20829, %rd20827;
	add.s64 	%rd20831, %rd20358, %rd20349;
	add.s64 	%rd20832, %rd20831, %rd20825;
	add.s64 	%rd20833, %rd20832, %rd20830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37593,%dummy}, %rd20820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37594}, %rd20820;
	}
	shf.r.wrap.b32 	%r37595, %r37594, %r37593, 19;
	shf.r.wrap.b32 	%r37596, %r37593, %r37594, 19;
	mov.b64 	%rd20834, {%r37596, %r37595};
	shf.l.wrap.b32 	%r37597, %r37593, %r37594, 3;
	shf.l.wrap.b32 	%r37598, %r37594, %r37593, 3;
	mov.b64 	%rd20835, {%r37598, %r37597};
	shr.u64 	%rd20836, %rd20820, 6;
	xor.b64  	%rd20837, %rd20834, %rd20836;
	xor.b64  	%rd20838, %rd20837, %rd20835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37599,%dummy}, %rd20351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37600}, %rd20351;
	}
	shf.r.wrap.b32 	%r37601, %r37600, %r37599, 1;
	shf.r.wrap.b32 	%r37602, %r37599, %r37600, 1;
	mov.b64 	%rd20839, {%r37602, %r37601};
	shf.r.wrap.b32 	%r37603, %r37600, %r37599, 8;
	shf.r.wrap.b32 	%r37604, %r37599, %r37600, 8;
	mov.b64 	%rd20840, {%r37604, %r37603};
	shr.u64 	%rd20841, %rd20351, 7;
	xor.b64  	%rd20842, %rd20839, %rd20841;
	xor.b64  	%rd20843, %rd20842, %rd20840;
	add.s64 	%rd20844, %rd20359, %rd20350;
	add.s64 	%rd20845, %rd20844, %rd20838;
	add.s64 	%rd20846, %rd20845, %rd20843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37605,%dummy}, %rd20833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37606}, %rd20833;
	}
	shf.r.wrap.b32 	%r37607, %r37606, %r37605, 19;
	shf.r.wrap.b32 	%r37608, %r37605, %r37606, 19;
	mov.b64 	%rd20847, {%r37608, %r37607};
	shf.l.wrap.b32 	%r37609, %r37605, %r37606, 3;
	shf.l.wrap.b32 	%r37610, %r37606, %r37605, 3;
	mov.b64 	%rd20848, {%r37610, %r37609};
	shr.u64 	%rd20849, %rd20833, 6;
	xor.b64  	%rd20850, %rd20847, %rd20849;
	xor.b64  	%rd20851, %rd20850, %rd20848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37611,%dummy}, %rd20352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37612}, %rd20352;
	}
	shf.r.wrap.b32 	%r37613, %r37612, %r37611, 1;
	shf.r.wrap.b32 	%r37614, %r37611, %r37612, 1;
	mov.b64 	%rd20852, {%r37614, %r37613};
	shf.r.wrap.b32 	%r37615, %r37612, %r37611, 8;
	shf.r.wrap.b32 	%r37616, %r37611, %r37612, 8;
	mov.b64 	%rd20853, {%r37616, %r37615};
	shr.u64 	%rd20854, %rd20352, 7;
	xor.b64  	%rd20855, %rd20852, %rd20854;
	xor.b64  	%rd20856, %rd20855, %rd20853;
	add.s64 	%rd20857, %rd20360, %rd20351;
	add.s64 	%rd20858, %rd20857, %rd20851;
	add.s64 	%rd20859, %rd20858, %rd20856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37617,%dummy}, %rd20846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37618}, %rd20846;
	}
	shf.r.wrap.b32 	%r37619, %r37618, %r37617, 19;
	shf.r.wrap.b32 	%r37620, %r37617, %r37618, 19;
	mov.b64 	%rd20860, {%r37620, %r37619};
	shf.l.wrap.b32 	%r37621, %r37617, %r37618, 3;
	shf.l.wrap.b32 	%r37622, %r37618, %r37617, 3;
	mov.b64 	%rd20861, {%r37622, %r37621};
	shr.u64 	%rd20862, %rd20846, 6;
	xor.b64  	%rd20863, %rd20860, %rd20862;
	xor.b64  	%rd20864, %rd20863, %rd20861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37623,%dummy}, %rd20353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37624}, %rd20353;
	}
	shf.r.wrap.b32 	%r37625, %r37624, %r37623, 1;
	shf.r.wrap.b32 	%r37626, %r37623, %r37624, 1;
	mov.b64 	%rd20865, {%r37626, %r37625};
	shf.r.wrap.b32 	%r37627, %r37624, %r37623, 8;
	shf.r.wrap.b32 	%r37628, %r37623, %r37624, 8;
	mov.b64 	%rd20866, {%r37628, %r37627};
	shr.u64 	%rd20867, %rd20353, 7;
	xor.b64  	%rd20868, %rd20865, %rd20867;
	xor.b64  	%rd20869, %rd20868, %rd20866;
	add.s64 	%rd20870, %rd20781, %rd20352;
	add.s64 	%rd20871, %rd20870, %rd20864;
	add.s64 	%rd20872, %rd20871, %rd20869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37629,%dummy}, %rd20859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37630}, %rd20859;
	}
	shf.r.wrap.b32 	%r37631, %r37630, %r37629, 19;
	shf.r.wrap.b32 	%r37632, %r37629, %r37630, 19;
	mov.b64 	%rd20873, {%r37632, %r37631};
	shf.l.wrap.b32 	%r37633, %r37629, %r37630, 3;
	shf.l.wrap.b32 	%r37634, %r37630, %r37629, 3;
	mov.b64 	%rd20874, {%r37634, %r37633};
	shr.u64 	%rd20875, %rd20859, 6;
	xor.b64  	%rd20876, %rd20873, %rd20875;
	xor.b64  	%rd20877, %rd20876, %rd20874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37635,%dummy}, %rd20354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37636}, %rd20354;
	}
	shf.r.wrap.b32 	%r37637, %r37636, %r37635, 1;
	shf.r.wrap.b32 	%r37638, %r37635, %r37636, 1;
	mov.b64 	%rd20878, {%r37638, %r37637};
	shf.r.wrap.b32 	%r37639, %r37636, %r37635, 8;
	shf.r.wrap.b32 	%r37640, %r37635, %r37636, 8;
	mov.b64 	%rd20879, {%r37640, %r37639};
	shr.u64 	%rd20880, %rd20354, 7;
	xor.b64  	%rd20881, %rd20878, %rd20880;
	xor.b64  	%rd20882, %rd20881, %rd20879;
	add.s64 	%rd20883, %rd20794, %rd20353;
	add.s64 	%rd20884, %rd20883, %rd20877;
	add.s64 	%rd20885, %rd20884, %rd20882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37641,%dummy}, %rd20872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37642}, %rd20872;
	}
	shf.r.wrap.b32 	%r37643, %r37642, %r37641, 19;
	shf.r.wrap.b32 	%r37644, %r37641, %r37642, 19;
	mov.b64 	%rd20886, {%r37644, %r37643};
	shf.l.wrap.b32 	%r37645, %r37641, %r37642, 3;
	shf.l.wrap.b32 	%r37646, %r37642, %r37641, 3;
	mov.b64 	%rd20887, {%r37646, %r37645};
	shr.u64 	%rd20888, %rd20872, 6;
	xor.b64  	%rd20889, %rd20886, %rd20888;
	xor.b64  	%rd20890, %rd20889, %rd20887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37647,%dummy}, %rd20355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37648}, %rd20355;
	}
	shf.r.wrap.b32 	%r37649, %r37648, %r37647, 1;
	shf.r.wrap.b32 	%r37650, %r37647, %r37648, 1;
	mov.b64 	%rd20891, {%r37650, %r37649};
	shf.r.wrap.b32 	%r37651, %r37648, %r37647, 8;
	shf.r.wrap.b32 	%r37652, %r37647, %r37648, 8;
	mov.b64 	%rd20892, {%r37652, %r37651};
	shr.u64 	%rd20893, %rd20355, 7;
	xor.b64  	%rd20894, %rd20891, %rd20893;
	xor.b64  	%rd20895, %rd20894, %rd20892;
	add.s64 	%rd20896, %rd20807, %rd20354;
	add.s64 	%rd20897, %rd20896, %rd20890;
	add.s64 	%rd20898, %rd20897, %rd20895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37653,%dummy}, %rd20885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37654}, %rd20885;
	}
	shf.r.wrap.b32 	%r37655, %r37654, %r37653, 19;
	shf.r.wrap.b32 	%r37656, %r37653, %r37654, 19;
	mov.b64 	%rd20899, {%r37656, %r37655};
	shf.l.wrap.b32 	%r37657, %r37653, %r37654, 3;
	shf.l.wrap.b32 	%r37658, %r37654, %r37653, 3;
	mov.b64 	%rd20900, {%r37658, %r37657};
	shr.u64 	%rd20901, %rd20885, 6;
	xor.b64  	%rd20902, %rd20899, %rd20901;
	xor.b64  	%rd20903, %rd20902, %rd20900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37659,%dummy}, %rd20356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37660}, %rd20356;
	}
	shf.r.wrap.b32 	%r37661, %r37660, %r37659, 1;
	shf.r.wrap.b32 	%r37662, %r37659, %r37660, 1;
	mov.b64 	%rd20904, {%r37662, %r37661};
	shf.r.wrap.b32 	%r37663, %r37660, %r37659, 8;
	shf.r.wrap.b32 	%r37664, %r37659, %r37660, 8;
	mov.b64 	%rd20905, {%r37664, %r37663};
	shr.u64 	%rd20906, %rd20356, 7;
	xor.b64  	%rd20907, %rd20904, %rd20906;
	xor.b64  	%rd20908, %rd20907, %rd20905;
	add.s64 	%rd20909, %rd20820, %rd20355;
	add.s64 	%rd20910, %rd20909, %rd20903;
	add.s64 	%rd20911, %rd20910, %rd20908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37665,%dummy}, %rd20898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37666}, %rd20898;
	}
	shf.r.wrap.b32 	%r37667, %r37666, %r37665, 19;
	shf.r.wrap.b32 	%r37668, %r37665, %r37666, 19;
	mov.b64 	%rd20912, {%r37668, %r37667};
	shf.l.wrap.b32 	%r37669, %r37665, %r37666, 3;
	shf.l.wrap.b32 	%r37670, %r37666, %r37665, 3;
	mov.b64 	%rd20913, {%r37670, %r37669};
	shr.u64 	%rd20914, %rd20898, 6;
	xor.b64  	%rd20915, %rd20912, %rd20914;
	xor.b64  	%rd20916, %rd20915, %rd20913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37671,%dummy}, %rd20357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37672}, %rd20357;
	}
	shf.r.wrap.b32 	%r37673, %r37672, %r37671, 1;
	shf.r.wrap.b32 	%r37674, %r37671, %r37672, 1;
	mov.b64 	%rd20917, {%r37674, %r37673};
	shf.r.wrap.b32 	%r37675, %r37672, %r37671, 8;
	shf.r.wrap.b32 	%r37676, %r37671, %r37672, 8;
	mov.b64 	%rd20918, {%r37676, %r37675};
	shr.u64 	%rd20919, %rd20357, 7;
	xor.b64  	%rd20920, %rd20917, %rd20919;
	xor.b64  	%rd20921, %rd20920, %rd20918;
	add.s64 	%rd20922, %rd20833, %rd20356;
	add.s64 	%rd20923, %rd20922, %rd20916;
	add.s64 	%rd20924, %rd20923, %rd20921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37677,%dummy}, %rd20911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37678}, %rd20911;
	}
	shf.r.wrap.b32 	%r37679, %r37678, %r37677, 19;
	shf.r.wrap.b32 	%r37680, %r37677, %r37678, 19;
	mov.b64 	%rd20925, {%r37680, %r37679};
	shf.l.wrap.b32 	%r37681, %r37677, %r37678, 3;
	shf.l.wrap.b32 	%r37682, %r37678, %r37677, 3;
	mov.b64 	%rd20926, {%r37682, %r37681};
	shr.u64 	%rd20927, %rd20911, 6;
	xor.b64  	%rd20928, %rd20925, %rd20927;
	xor.b64  	%rd20929, %rd20928, %rd20926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37683,%dummy}, %rd20358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37684}, %rd20358;
	}
	shf.r.wrap.b32 	%r37685, %r37684, %r37683, 1;
	shf.r.wrap.b32 	%r37686, %r37683, %r37684, 1;
	mov.b64 	%rd20930, {%r37686, %r37685};
	shf.r.wrap.b32 	%r37687, %r37684, %r37683, 8;
	shf.r.wrap.b32 	%r37688, %r37683, %r37684, 8;
	mov.b64 	%rd20931, {%r37688, %r37687};
	shr.u64 	%rd20932, %rd20358, 7;
	xor.b64  	%rd20933, %rd20930, %rd20932;
	xor.b64  	%rd20934, %rd20933, %rd20931;
	add.s64 	%rd20935, %rd20846, %rd20357;
	add.s64 	%rd20936, %rd20935, %rd20929;
	add.s64 	%rd20937, %rd20936, %rd20934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37689,%dummy}, %rd20924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37690}, %rd20924;
	}
	shf.r.wrap.b32 	%r37691, %r37690, %r37689, 19;
	shf.r.wrap.b32 	%r37692, %r37689, %r37690, 19;
	mov.b64 	%rd20938, {%r37692, %r37691};
	shf.l.wrap.b32 	%r37693, %r37689, %r37690, 3;
	shf.l.wrap.b32 	%r37694, %r37690, %r37689, 3;
	mov.b64 	%rd20939, {%r37694, %r37693};
	shr.u64 	%rd20940, %rd20924, 6;
	xor.b64  	%rd20941, %rd20938, %rd20940;
	xor.b64  	%rd20942, %rd20941, %rd20939;
	shf.r.wrap.b32 	%r37695, %r37534, %r37533, 1;
	shf.r.wrap.b32 	%r37696, %r37533, %r37534, 1;
	mov.b64 	%rd20943, {%r37696, %r37695};
	shf.r.wrap.b32 	%r37697, %r37534, %r37533, 8;
	shf.r.wrap.b32 	%r37698, %r37533, %r37534, 8;
	mov.b64 	%rd20944, {%r37698, %r37697};
	shr.u64 	%rd20945, %rd20359, 7;
	xor.b64  	%rd20946, %rd20943, %rd20945;
	xor.b64  	%rd20947, %rd20946, %rd20944;
	add.s64 	%rd20948, %rd20859, %rd20358;
	add.s64 	%rd20949, %rd20948, %rd20942;
	add.s64 	%rd20950, %rd20949, %rd20947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37699,%dummy}, %rd20937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37700}, %rd20937;
	}
	shf.r.wrap.b32 	%r37701, %r37700, %r37699, 19;
	shf.r.wrap.b32 	%r37702, %r37699, %r37700, 19;
	mov.b64 	%rd20951, {%r37702, %r37701};
	shf.l.wrap.b32 	%r37703, %r37699, %r37700, 3;
	shf.l.wrap.b32 	%r37704, %r37700, %r37699, 3;
	mov.b64 	%rd20952, {%r37704, %r37703};
	shr.u64 	%rd20953, %rd20937, 6;
	xor.b64  	%rd20954, %rd20951, %rd20953;
	xor.b64  	%rd20955, %rd20954, %rd20952;
	shf.r.wrap.b32 	%r37705, %r37546, %r37545, 1;
	shf.r.wrap.b32 	%r37706, %r37545, %r37546, 1;
	mov.b64 	%rd20956, {%r37706, %r37705};
	shf.r.wrap.b32 	%r37707, %r37546, %r37545, 8;
	shf.r.wrap.b32 	%r37708, %r37545, %r37546, 8;
	mov.b64 	%rd20957, {%r37708, %r37707};
	shr.u64 	%rd20958, %rd20360, 7;
	xor.b64  	%rd20959, %rd20956, %rd20958;
	xor.b64  	%rd20960, %rd20959, %rd20957;
	add.s64 	%rd20961, %rd20872, %rd20359;
	add.s64 	%rd20962, %rd20961, %rd20955;
	add.s64 	%rd20963, %rd20962, %rd20960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37709,%dummy}, %rd20950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37710}, %rd20950;
	}
	shf.r.wrap.b32 	%r37711, %r37710, %r37709, 19;
	shf.r.wrap.b32 	%r37712, %r37709, %r37710, 19;
	mov.b64 	%rd20964, {%r37712, %r37711};
	shf.l.wrap.b32 	%r37713, %r37709, %r37710, 3;
	shf.l.wrap.b32 	%r37714, %r37710, %r37709, 3;
	mov.b64 	%rd20965, {%r37714, %r37713};
	shr.u64 	%rd20966, %rd20950, 6;
	xor.b64  	%rd20967, %rd20964, %rd20966;
	xor.b64  	%rd20968, %rd20967, %rd20965;
	shf.r.wrap.b32 	%r37715, %r37558, %r37557, 1;
	shf.r.wrap.b32 	%r37716, %r37557, %r37558, 1;
	mov.b64 	%rd20969, {%r37716, %r37715};
	shf.r.wrap.b32 	%r37717, %r37558, %r37557, 8;
	shf.r.wrap.b32 	%r37718, %r37557, %r37558, 8;
	mov.b64 	%rd20970, {%r37718, %r37717};
	shr.u64 	%rd20971, %rd20781, 7;
	xor.b64  	%rd20972, %rd20969, %rd20971;
	xor.b64  	%rd20973, %rd20972, %rd20970;
	add.s64 	%rd20974, %rd20885, %rd20360;
	add.s64 	%rd20975, %rd20974, %rd20968;
	add.s64 	%rd20976, %rd20975, %rd20973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37719,%dummy}, %rd20757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37720}, %rd20757;
	}
	shf.r.wrap.b32 	%r37721, %r37720, %r37719, 14;
	shf.r.wrap.b32 	%r37722, %r37719, %r37720, 14;
	mov.b64 	%rd20977, {%r37722, %r37721};
	shf.r.wrap.b32 	%r37723, %r37720, %r37719, 18;
	shf.r.wrap.b32 	%r37724, %r37719, %r37720, 18;
	mov.b64 	%rd20978, {%r37724, %r37723};
	xor.b64  	%rd20979, %rd20978, %rd20977;
	shf.l.wrap.b32 	%r37725, %r37719, %r37720, 23;
	shf.l.wrap.b32 	%r37726, %r37720, %r37719, 23;
	mov.b64 	%rd20980, {%r37726, %r37725};
	xor.b64  	%rd20981, %rd20979, %rd20980;
	xor.b64  	%rd20982, %rd20732, %rd20707;
	and.b64  	%rd20983, %rd20757, %rd20982;
	xor.b64  	%rd20984, %rd20983, %rd20707;
	add.s64 	%rd20985, %rd20984, %rd20682;
	add.s64 	%rd20986, %rd20985, %rd20781;
	ld.const.u64 	%rd20987, [k_sha512+128];
	add.s64 	%rd20988, %rd20986, %rd20987;
	add.s64 	%rd20989, %rd20988, %rd20981;
	add.s64 	%rd20990, %rd20989, %rd20693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37727,%dummy}, %rd20768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37728}, %rd20768;
	}
	shf.r.wrap.b32 	%r37729, %r37728, %r37727, 28;
	shf.r.wrap.b32 	%r37730, %r37727, %r37728, 28;
	mov.b64 	%rd20991, {%r37730, %r37729};
	shf.l.wrap.b32 	%r37731, %r37727, %r37728, 30;
	shf.l.wrap.b32 	%r37732, %r37728, %r37727, 30;
	mov.b64 	%rd20992, {%r37732, %r37731};
	xor.b64  	%rd20993, %rd20992, %rd20991;
	shf.l.wrap.b32 	%r37733, %r37727, %r37728, 25;
	shf.l.wrap.b32 	%r37734, %r37728, %r37727, 25;
	mov.b64 	%rd20994, {%r37734, %r37733};
	xor.b64  	%rd20995, %rd20993, %rd20994;
	and.b64  	%rd20996, %rd20768, %rd20743;
	xor.b64  	%rd20997, %rd20768, %rd20743;
	and.b64  	%rd20998, %rd20997, %rd20718;
	or.b64  	%rd20999, %rd20998, %rd20996;
	add.s64 	%rd21000, %rd20989, %rd20999;
	add.s64 	%rd21001, %rd21000, %rd20995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37735,%dummy}, %rd20990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37736}, %rd20990;
	}
	shf.r.wrap.b32 	%r37737, %r37736, %r37735, 14;
	shf.r.wrap.b32 	%r37738, %r37735, %r37736, 14;
	mov.b64 	%rd21002, {%r37738, %r37737};
	shf.r.wrap.b32 	%r37739, %r37736, %r37735, 18;
	shf.r.wrap.b32 	%r37740, %r37735, %r37736, 18;
	mov.b64 	%rd21003, {%r37740, %r37739};
	xor.b64  	%rd21004, %rd21003, %rd21002;
	shf.l.wrap.b32 	%r37741, %r37735, %r37736, 23;
	shf.l.wrap.b32 	%r37742, %r37736, %r37735, 23;
	mov.b64 	%rd21005, {%r37742, %r37741};
	xor.b64  	%rd21006, %rd21004, %rd21005;
	xor.b64  	%rd21007, %rd20757, %rd20732;
	and.b64  	%rd21008, %rd20990, %rd21007;
	xor.b64  	%rd21009, %rd21008, %rd20732;
	add.s64 	%rd21010, %rd20794, %rd20707;
	ld.const.u64 	%rd21011, [k_sha512+136];
	add.s64 	%rd21012, %rd21010, %rd21011;
	add.s64 	%rd21013, %rd21012, %rd21009;
	add.s64 	%rd21014, %rd21013, %rd21006;
	add.s64 	%rd21015, %rd21014, %rd20718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37743,%dummy}, %rd21001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37744}, %rd21001;
	}
	shf.r.wrap.b32 	%r37745, %r37744, %r37743, 28;
	shf.r.wrap.b32 	%r37746, %r37743, %r37744, 28;
	mov.b64 	%rd21016, {%r37746, %r37745};
	shf.l.wrap.b32 	%r37747, %r37743, %r37744, 30;
	shf.l.wrap.b32 	%r37748, %r37744, %r37743, 30;
	mov.b64 	%rd21017, {%r37748, %r37747};
	xor.b64  	%rd21018, %rd21017, %rd21016;
	shf.l.wrap.b32 	%r37749, %r37743, %r37744, 25;
	shf.l.wrap.b32 	%r37750, %r37744, %r37743, 25;
	mov.b64 	%rd21019, {%r37750, %r37749};
	xor.b64  	%rd21020, %rd21018, %rd21019;
	and.b64  	%rd21021, %rd21001, %rd20768;
	xor.b64  	%rd21022, %rd21001, %rd20768;
	and.b64  	%rd21023, %rd21022, %rd20743;
	or.b64  	%rd21024, %rd21023, %rd21021;
	add.s64 	%rd21025, %rd21014, %rd21024;
	add.s64 	%rd21026, %rd21025, %rd21020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37751,%dummy}, %rd21015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37752}, %rd21015;
	}
	shf.r.wrap.b32 	%r37753, %r37752, %r37751, 14;
	shf.r.wrap.b32 	%r37754, %r37751, %r37752, 14;
	mov.b64 	%rd21027, {%r37754, %r37753};
	shf.r.wrap.b32 	%r37755, %r37752, %r37751, 18;
	shf.r.wrap.b32 	%r37756, %r37751, %r37752, 18;
	mov.b64 	%rd21028, {%r37756, %r37755};
	xor.b64  	%rd21029, %rd21028, %rd21027;
	shf.l.wrap.b32 	%r37757, %r37751, %r37752, 23;
	shf.l.wrap.b32 	%r37758, %r37752, %r37751, 23;
	mov.b64 	%rd21030, {%r37758, %r37757};
	xor.b64  	%rd21031, %rd21029, %rd21030;
	xor.b64  	%rd21032, %rd20990, %rd20757;
	and.b64  	%rd21033, %rd21015, %rd21032;
	xor.b64  	%rd21034, %rd21033, %rd20757;
	add.s64 	%rd21035, %rd20807, %rd20732;
	ld.const.u64 	%rd21036, [k_sha512+144];
	add.s64 	%rd21037, %rd21035, %rd21036;
	add.s64 	%rd21038, %rd21037, %rd21034;
	add.s64 	%rd21039, %rd21038, %rd21031;
	add.s64 	%rd21040, %rd21039, %rd20743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37759,%dummy}, %rd21026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37760}, %rd21026;
	}
	shf.r.wrap.b32 	%r37761, %r37760, %r37759, 28;
	shf.r.wrap.b32 	%r37762, %r37759, %r37760, 28;
	mov.b64 	%rd21041, {%r37762, %r37761};
	shf.l.wrap.b32 	%r37763, %r37759, %r37760, 30;
	shf.l.wrap.b32 	%r37764, %r37760, %r37759, 30;
	mov.b64 	%rd21042, {%r37764, %r37763};
	xor.b64  	%rd21043, %rd21042, %rd21041;
	shf.l.wrap.b32 	%r37765, %r37759, %r37760, 25;
	shf.l.wrap.b32 	%r37766, %r37760, %r37759, 25;
	mov.b64 	%rd21044, {%r37766, %r37765};
	xor.b64  	%rd21045, %rd21043, %rd21044;
	and.b64  	%rd21046, %rd21026, %rd21001;
	xor.b64  	%rd21047, %rd21026, %rd21001;
	and.b64  	%rd21048, %rd21047, %rd20768;
	or.b64  	%rd21049, %rd21048, %rd21046;
	add.s64 	%rd21050, %rd21039, %rd21049;
	add.s64 	%rd21051, %rd21050, %rd21045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37767,%dummy}, %rd21040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37768}, %rd21040;
	}
	shf.r.wrap.b32 	%r37769, %r37768, %r37767, 14;
	shf.r.wrap.b32 	%r37770, %r37767, %r37768, 14;
	mov.b64 	%rd21052, {%r37770, %r37769};
	shf.r.wrap.b32 	%r37771, %r37768, %r37767, 18;
	shf.r.wrap.b32 	%r37772, %r37767, %r37768, 18;
	mov.b64 	%rd21053, {%r37772, %r37771};
	xor.b64  	%rd21054, %rd21053, %rd21052;
	shf.l.wrap.b32 	%r37773, %r37767, %r37768, 23;
	shf.l.wrap.b32 	%r37774, %r37768, %r37767, 23;
	mov.b64 	%rd21055, {%r37774, %r37773};
	xor.b64  	%rd21056, %rd21054, %rd21055;
	xor.b64  	%rd21057, %rd21015, %rd20990;
	and.b64  	%rd21058, %rd21040, %rd21057;
	xor.b64  	%rd21059, %rd21058, %rd20990;
	add.s64 	%rd21060, %rd20820, %rd20757;
	ld.const.u64 	%rd21061, [k_sha512+152];
	add.s64 	%rd21062, %rd21060, %rd21061;
	add.s64 	%rd21063, %rd21062, %rd21059;
	add.s64 	%rd21064, %rd21063, %rd21056;
	add.s64 	%rd21065, %rd21064, %rd20768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37775,%dummy}, %rd21051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37776}, %rd21051;
	}
	shf.r.wrap.b32 	%r37777, %r37776, %r37775, 28;
	shf.r.wrap.b32 	%r37778, %r37775, %r37776, 28;
	mov.b64 	%rd21066, {%r37778, %r37777};
	shf.l.wrap.b32 	%r37779, %r37775, %r37776, 30;
	shf.l.wrap.b32 	%r37780, %r37776, %r37775, 30;
	mov.b64 	%rd21067, {%r37780, %r37779};
	xor.b64  	%rd21068, %rd21067, %rd21066;
	shf.l.wrap.b32 	%r37781, %r37775, %r37776, 25;
	shf.l.wrap.b32 	%r37782, %r37776, %r37775, 25;
	mov.b64 	%rd21069, {%r37782, %r37781};
	xor.b64  	%rd21070, %rd21068, %rd21069;
	and.b64  	%rd21071, %rd21051, %rd21026;
	xor.b64  	%rd21072, %rd21051, %rd21026;
	and.b64  	%rd21073, %rd21072, %rd21001;
	or.b64  	%rd21074, %rd21073, %rd21071;
	add.s64 	%rd21075, %rd21064, %rd21074;
	add.s64 	%rd21076, %rd21075, %rd21070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37783,%dummy}, %rd21065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37784}, %rd21065;
	}
	shf.r.wrap.b32 	%r37785, %r37784, %r37783, 14;
	shf.r.wrap.b32 	%r37786, %r37783, %r37784, 14;
	mov.b64 	%rd21077, {%r37786, %r37785};
	shf.r.wrap.b32 	%r37787, %r37784, %r37783, 18;
	shf.r.wrap.b32 	%r37788, %r37783, %r37784, 18;
	mov.b64 	%rd21078, {%r37788, %r37787};
	xor.b64  	%rd21079, %rd21078, %rd21077;
	shf.l.wrap.b32 	%r37789, %r37783, %r37784, 23;
	shf.l.wrap.b32 	%r37790, %r37784, %r37783, 23;
	mov.b64 	%rd21080, {%r37790, %r37789};
	xor.b64  	%rd21081, %rd21079, %rd21080;
	xor.b64  	%rd21082, %rd21040, %rd21015;
	and.b64  	%rd21083, %rd21065, %rd21082;
	xor.b64  	%rd21084, %rd21083, %rd21015;
	add.s64 	%rd21085, %rd20990, %rd20833;
	ld.const.u64 	%rd21086, [k_sha512+160];
	add.s64 	%rd21087, %rd21085, %rd21086;
	add.s64 	%rd21088, %rd21087, %rd21084;
	add.s64 	%rd21089, %rd21088, %rd21081;
	add.s64 	%rd21090, %rd21089, %rd21001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37791,%dummy}, %rd21076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37792}, %rd21076;
	}
	shf.r.wrap.b32 	%r37793, %r37792, %r37791, 28;
	shf.r.wrap.b32 	%r37794, %r37791, %r37792, 28;
	mov.b64 	%rd21091, {%r37794, %r37793};
	shf.l.wrap.b32 	%r37795, %r37791, %r37792, 30;
	shf.l.wrap.b32 	%r37796, %r37792, %r37791, 30;
	mov.b64 	%rd21092, {%r37796, %r37795};
	xor.b64  	%rd21093, %rd21092, %rd21091;
	shf.l.wrap.b32 	%r37797, %r37791, %r37792, 25;
	shf.l.wrap.b32 	%r37798, %r37792, %r37791, 25;
	mov.b64 	%rd21094, {%r37798, %r37797};
	xor.b64  	%rd21095, %rd21093, %rd21094;
	and.b64  	%rd21096, %rd21076, %rd21051;
	xor.b64  	%rd21097, %rd21076, %rd21051;
	and.b64  	%rd21098, %rd21097, %rd21026;
	or.b64  	%rd21099, %rd21098, %rd21096;
	add.s64 	%rd21100, %rd21089, %rd21099;
	add.s64 	%rd21101, %rd21100, %rd21095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37799,%dummy}, %rd21090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37800}, %rd21090;
	}
	shf.r.wrap.b32 	%r37801, %r37800, %r37799, 14;
	shf.r.wrap.b32 	%r37802, %r37799, %r37800, 14;
	mov.b64 	%rd21102, {%r37802, %r37801};
	shf.r.wrap.b32 	%r37803, %r37800, %r37799, 18;
	shf.r.wrap.b32 	%r37804, %r37799, %r37800, 18;
	mov.b64 	%rd21103, {%r37804, %r37803};
	xor.b64  	%rd21104, %rd21103, %rd21102;
	shf.l.wrap.b32 	%r37805, %r37799, %r37800, 23;
	shf.l.wrap.b32 	%r37806, %r37800, %r37799, 23;
	mov.b64 	%rd21105, {%r37806, %r37805};
	xor.b64  	%rd21106, %rd21104, %rd21105;
	xor.b64  	%rd21107, %rd21065, %rd21040;
	and.b64  	%rd21108, %rd21090, %rd21107;
	xor.b64  	%rd21109, %rd21108, %rd21040;
	add.s64 	%rd21110, %rd21015, %rd20846;
	ld.const.u64 	%rd21111, [k_sha512+168];
	add.s64 	%rd21112, %rd21110, %rd21111;
	add.s64 	%rd21113, %rd21112, %rd21109;
	add.s64 	%rd21114, %rd21113, %rd21106;
	add.s64 	%rd21115, %rd21114, %rd21026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37807,%dummy}, %rd21101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37808}, %rd21101;
	}
	shf.r.wrap.b32 	%r37809, %r37808, %r37807, 28;
	shf.r.wrap.b32 	%r37810, %r37807, %r37808, 28;
	mov.b64 	%rd21116, {%r37810, %r37809};
	shf.l.wrap.b32 	%r37811, %r37807, %r37808, 30;
	shf.l.wrap.b32 	%r37812, %r37808, %r37807, 30;
	mov.b64 	%rd21117, {%r37812, %r37811};
	xor.b64  	%rd21118, %rd21117, %rd21116;
	shf.l.wrap.b32 	%r37813, %r37807, %r37808, 25;
	shf.l.wrap.b32 	%r37814, %r37808, %r37807, 25;
	mov.b64 	%rd21119, {%r37814, %r37813};
	xor.b64  	%rd21120, %rd21118, %rd21119;
	and.b64  	%rd21121, %rd21101, %rd21076;
	xor.b64  	%rd21122, %rd21101, %rd21076;
	and.b64  	%rd21123, %rd21122, %rd21051;
	or.b64  	%rd21124, %rd21123, %rd21121;
	add.s64 	%rd21125, %rd21114, %rd21124;
	add.s64 	%rd21126, %rd21125, %rd21120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37815,%dummy}, %rd21115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37816}, %rd21115;
	}
	shf.r.wrap.b32 	%r37817, %r37816, %r37815, 14;
	shf.r.wrap.b32 	%r37818, %r37815, %r37816, 14;
	mov.b64 	%rd21127, {%r37818, %r37817};
	shf.r.wrap.b32 	%r37819, %r37816, %r37815, 18;
	shf.r.wrap.b32 	%r37820, %r37815, %r37816, 18;
	mov.b64 	%rd21128, {%r37820, %r37819};
	xor.b64  	%rd21129, %rd21128, %rd21127;
	shf.l.wrap.b32 	%r37821, %r37815, %r37816, 23;
	shf.l.wrap.b32 	%r37822, %r37816, %r37815, 23;
	mov.b64 	%rd21130, {%r37822, %r37821};
	xor.b64  	%rd21131, %rd21129, %rd21130;
	xor.b64  	%rd21132, %rd21090, %rd21065;
	and.b64  	%rd21133, %rd21115, %rd21132;
	xor.b64  	%rd21134, %rd21133, %rd21065;
	add.s64 	%rd21135, %rd21040, %rd20859;
	ld.const.u64 	%rd21136, [k_sha512+176];
	add.s64 	%rd21137, %rd21135, %rd21136;
	add.s64 	%rd21138, %rd21137, %rd21134;
	add.s64 	%rd21139, %rd21138, %rd21131;
	add.s64 	%rd21140, %rd21139, %rd21051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37823,%dummy}, %rd21126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37824}, %rd21126;
	}
	shf.r.wrap.b32 	%r37825, %r37824, %r37823, 28;
	shf.r.wrap.b32 	%r37826, %r37823, %r37824, 28;
	mov.b64 	%rd21141, {%r37826, %r37825};
	shf.l.wrap.b32 	%r37827, %r37823, %r37824, 30;
	shf.l.wrap.b32 	%r37828, %r37824, %r37823, 30;
	mov.b64 	%rd21142, {%r37828, %r37827};
	xor.b64  	%rd21143, %rd21142, %rd21141;
	shf.l.wrap.b32 	%r37829, %r37823, %r37824, 25;
	shf.l.wrap.b32 	%r37830, %r37824, %r37823, 25;
	mov.b64 	%rd21144, {%r37830, %r37829};
	xor.b64  	%rd21145, %rd21143, %rd21144;
	and.b64  	%rd21146, %rd21126, %rd21101;
	xor.b64  	%rd21147, %rd21126, %rd21101;
	and.b64  	%rd21148, %rd21147, %rd21076;
	or.b64  	%rd21149, %rd21148, %rd21146;
	add.s64 	%rd21150, %rd21139, %rd21149;
	add.s64 	%rd21151, %rd21150, %rd21145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37831,%dummy}, %rd21140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37832}, %rd21140;
	}
	shf.r.wrap.b32 	%r37833, %r37832, %r37831, 14;
	shf.r.wrap.b32 	%r37834, %r37831, %r37832, 14;
	mov.b64 	%rd21152, {%r37834, %r37833};
	shf.r.wrap.b32 	%r37835, %r37832, %r37831, 18;
	shf.r.wrap.b32 	%r37836, %r37831, %r37832, 18;
	mov.b64 	%rd21153, {%r37836, %r37835};
	xor.b64  	%rd21154, %rd21153, %rd21152;
	shf.l.wrap.b32 	%r37837, %r37831, %r37832, 23;
	shf.l.wrap.b32 	%r37838, %r37832, %r37831, 23;
	mov.b64 	%rd21155, {%r37838, %r37837};
	xor.b64  	%rd21156, %rd21154, %rd21155;
	xor.b64  	%rd21157, %rd21115, %rd21090;
	and.b64  	%rd21158, %rd21140, %rd21157;
	xor.b64  	%rd21159, %rd21158, %rd21090;
	add.s64 	%rd21160, %rd21065, %rd20872;
	ld.const.u64 	%rd21161, [k_sha512+184];
	add.s64 	%rd21162, %rd21160, %rd21161;
	add.s64 	%rd21163, %rd21162, %rd21159;
	add.s64 	%rd21164, %rd21163, %rd21156;
	add.s64 	%rd21165, %rd21164, %rd21076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37839,%dummy}, %rd21151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37840}, %rd21151;
	}
	shf.r.wrap.b32 	%r37841, %r37840, %r37839, 28;
	shf.r.wrap.b32 	%r37842, %r37839, %r37840, 28;
	mov.b64 	%rd21166, {%r37842, %r37841};
	shf.l.wrap.b32 	%r37843, %r37839, %r37840, 30;
	shf.l.wrap.b32 	%r37844, %r37840, %r37839, 30;
	mov.b64 	%rd21167, {%r37844, %r37843};
	xor.b64  	%rd21168, %rd21167, %rd21166;
	shf.l.wrap.b32 	%r37845, %r37839, %r37840, 25;
	shf.l.wrap.b32 	%r37846, %r37840, %r37839, 25;
	mov.b64 	%rd21169, {%r37846, %r37845};
	xor.b64  	%rd21170, %rd21168, %rd21169;
	and.b64  	%rd21171, %rd21151, %rd21126;
	xor.b64  	%rd21172, %rd21151, %rd21126;
	and.b64  	%rd21173, %rd21172, %rd21101;
	or.b64  	%rd21174, %rd21173, %rd21171;
	add.s64 	%rd21175, %rd21164, %rd21174;
	add.s64 	%rd21176, %rd21175, %rd21170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37847,%dummy}, %rd21165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37848}, %rd21165;
	}
	shf.r.wrap.b32 	%r37849, %r37848, %r37847, 14;
	shf.r.wrap.b32 	%r37850, %r37847, %r37848, 14;
	mov.b64 	%rd21177, {%r37850, %r37849};
	shf.r.wrap.b32 	%r37851, %r37848, %r37847, 18;
	shf.r.wrap.b32 	%r37852, %r37847, %r37848, 18;
	mov.b64 	%rd21178, {%r37852, %r37851};
	xor.b64  	%rd21179, %rd21178, %rd21177;
	shf.l.wrap.b32 	%r37853, %r37847, %r37848, 23;
	shf.l.wrap.b32 	%r37854, %r37848, %r37847, 23;
	mov.b64 	%rd21180, {%r37854, %r37853};
	xor.b64  	%rd21181, %rd21179, %rd21180;
	xor.b64  	%rd21182, %rd21140, %rd21115;
	and.b64  	%rd21183, %rd21165, %rd21182;
	xor.b64  	%rd21184, %rd21183, %rd21115;
	add.s64 	%rd21185, %rd21090, %rd20885;
	ld.const.u64 	%rd21186, [k_sha512+192];
	add.s64 	%rd21187, %rd21185, %rd21186;
	add.s64 	%rd21188, %rd21187, %rd21184;
	add.s64 	%rd21189, %rd21188, %rd21181;
	add.s64 	%rd21190, %rd21189, %rd21101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37855,%dummy}, %rd21176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37856}, %rd21176;
	}
	shf.r.wrap.b32 	%r37857, %r37856, %r37855, 28;
	shf.r.wrap.b32 	%r37858, %r37855, %r37856, 28;
	mov.b64 	%rd21191, {%r37858, %r37857};
	shf.l.wrap.b32 	%r37859, %r37855, %r37856, 30;
	shf.l.wrap.b32 	%r37860, %r37856, %r37855, 30;
	mov.b64 	%rd21192, {%r37860, %r37859};
	xor.b64  	%rd21193, %rd21192, %rd21191;
	shf.l.wrap.b32 	%r37861, %r37855, %r37856, 25;
	shf.l.wrap.b32 	%r37862, %r37856, %r37855, 25;
	mov.b64 	%rd21194, {%r37862, %r37861};
	xor.b64  	%rd21195, %rd21193, %rd21194;
	and.b64  	%rd21196, %rd21176, %rd21151;
	xor.b64  	%rd21197, %rd21176, %rd21151;
	and.b64  	%rd21198, %rd21197, %rd21126;
	or.b64  	%rd21199, %rd21198, %rd21196;
	add.s64 	%rd21200, %rd21189, %rd21199;
	add.s64 	%rd21201, %rd21200, %rd21195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37863,%dummy}, %rd21190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37864}, %rd21190;
	}
	shf.r.wrap.b32 	%r37865, %r37864, %r37863, 14;
	shf.r.wrap.b32 	%r37866, %r37863, %r37864, 14;
	mov.b64 	%rd21202, {%r37866, %r37865};
	shf.r.wrap.b32 	%r37867, %r37864, %r37863, 18;
	shf.r.wrap.b32 	%r37868, %r37863, %r37864, 18;
	mov.b64 	%rd21203, {%r37868, %r37867};
	xor.b64  	%rd21204, %rd21203, %rd21202;
	shf.l.wrap.b32 	%r37869, %r37863, %r37864, 23;
	shf.l.wrap.b32 	%r37870, %r37864, %r37863, 23;
	mov.b64 	%rd21205, {%r37870, %r37869};
	xor.b64  	%rd21206, %rd21204, %rd21205;
	xor.b64  	%rd21207, %rd21165, %rd21140;
	and.b64  	%rd21208, %rd21190, %rd21207;
	xor.b64  	%rd21209, %rd21208, %rd21140;
	add.s64 	%rd21210, %rd21115, %rd20898;
	ld.const.u64 	%rd21211, [k_sha512+200];
	add.s64 	%rd21212, %rd21210, %rd21211;
	add.s64 	%rd21213, %rd21212, %rd21209;
	add.s64 	%rd21214, %rd21213, %rd21206;
	add.s64 	%rd21215, %rd21214, %rd21126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37871,%dummy}, %rd21201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37872}, %rd21201;
	}
	shf.r.wrap.b32 	%r37873, %r37872, %r37871, 28;
	shf.r.wrap.b32 	%r37874, %r37871, %r37872, 28;
	mov.b64 	%rd21216, {%r37874, %r37873};
	shf.l.wrap.b32 	%r37875, %r37871, %r37872, 30;
	shf.l.wrap.b32 	%r37876, %r37872, %r37871, 30;
	mov.b64 	%rd21217, {%r37876, %r37875};
	xor.b64  	%rd21218, %rd21217, %rd21216;
	shf.l.wrap.b32 	%r37877, %r37871, %r37872, 25;
	shf.l.wrap.b32 	%r37878, %r37872, %r37871, 25;
	mov.b64 	%rd21219, {%r37878, %r37877};
	xor.b64  	%rd21220, %rd21218, %rd21219;
	and.b64  	%rd21221, %rd21201, %rd21176;
	xor.b64  	%rd21222, %rd21201, %rd21176;
	and.b64  	%rd21223, %rd21222, %rd21151;
	or.b64  	%rd21224, %rd21223, %rd21221;
	add.s64 	%rd21225, %rd21214, %rd21224;
	add.s64 	%rd21226, %rd21225, %rd21220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37879,%dummy}, %rd21215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37880}, %rd21215;
	}
	shf.r.wrap.b32 	%r37881, %r37880, %r37879, 14;
	shf.r.wrap.b32 	%r37882, %r37879, %r37880, 14;
	mov.b64 	%rd21227, {%r37882, %r37881};
	shf.r.wrap.b32 	%r37883, %r37880, %r37879, 18;
	shf.r.wrap.b32 	%r37884, %r37879, %r37880, 18;
	mov.b64 	%rd21228, {%r37884, %r37883};
	xor.b64  	%rd21229, %rd21228, %rd21227;
	shf.l.wrap.b32 	%r37885, %r37879, %r37880, 23;
	shf.l.wrap.b32 	%r37886, %r37880, %r37879, 23;
	mov.b64 	%rd21230, {%r37886, %r37885};
	xor.b64  	%rd21231, %rd21229, %rd21230;
	xor.b64  	%rd21232, %rd21190, %rd21165;
	and.b64  	%rd21233, %rd21215, %rd21232;
	xor.b64  	%rd21234, %rd21233, %rd21165;
	add.s64 	%rd21235, %rd21140, %rd20911;
	ld.const.u64 	%rd21236, [k_sha512+208];
	add.s64 	%rd21237, %rd21235, %rd21236;
	add.s64 	%rd21238, %rd21237, %rd21234;
	add.s64 	%rd21239, %rd21238, %rd21231;
	add.s64 	%rd21240, %rd21239, %rd21151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37887,%dummy}, %rd21226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37888}, %rd21226;
	}
	shf.r.wrap.b32 	%r37889, %r37888, %r37887, 28;
	shf.r.wrap.b32 	%r37890, %r37887, %r37888, 28;
	mov.b64 	%rd21241, {%r37890, %r37889};
	shf.l.wrap.b32 	%r37891, %r37887, %r37888, 30;
	shf.l.wrap.b32 	%r37892, %r37888, %r37887, 30;
	mov.b64 	%rd21242, {%r37892, %r37891};
	xor.b64  	%rd21243, %rd21242, %rd21241;
	shf.l.wrap.b32 	%r37893, %r37887, %r37888, 25;
	shf.l.wrap.b32 	%r37894, %r37888, %r37887, 25;
	mov.b64 	%rd21244, {%r37894, %r37893};
	xor.b64  	%rd21245, %rd21243, %rd21244;
	and.b64  	%rd21246, %rd21226, %rd21201;
	xor.b64  	%rd21247, %rd21226, %rd21201;
	and.b64  	%rd21248, %rd21247, %rd21176;
	or.b64  	%rd21249, %rd21248, %rd21246;
	add.s64 	%rd21250, %rd21239, %rd21249;
	add.s64 	%rd21251, %rd21250, %rd21245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37895,%dummy}, %rd21240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37896}, %rd21240;
	}
	shf.r.wrap.b32 	%r37897, %r37896, %r37895, 14;
	shf.r.wrap.b32 	%r37898, %r37895, %r37896, 14;
	mov.b64 	%rd21252, {%r37898, %r37897};
	shf.r.wrap.b32 	%r37899, %r37896, %r37895, 18;
	shf.r.wrap.b32 	%r37900, %r37895, %r37896, 18;
	mov.b64 	%rd21253, {%r37900, %r37899};
	xor.b64  	%rd21254, %rd21253, %rd21252;
	shf.l.wrap.b32 	%r37901, %r37895, %r37896, 23;
	shf.l.wrap.b32 	%r37902, %r37896, %r37895, 23;
	mov.b64 	%rd21255, {%r37902, %r37901};
	xor.b64  	%rd21256, %rd21254, %rd21255;
	xor.b64  	%rd21257, %rd21215, %rd21190;
	and.b64  	%rd21258, %rd21240, %rd21257;
	xor.b64  	%rd21259, %rd21258, %rd21190;
	add.s64 	%rd21260, %rd21165, %rd20924;
	ld.const.u64 	%rd21261, [k_sha512+216];
	add.s64 	%rd21262, %rd21260, %rd21261;
	add.s64 	%rd21263, %rd21262, %rd21259;
	add.s64 	%rd21264, %rd21263, %rd21256;
	add.s64 	%rd21265, %rd21264, %rd21176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37903,%dummy}, %rd21251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37904}, %rd21251;
	}
	shf.r.wrap.b32 	%r37905, %r37904, %r37903, 28;
	shf.r.wrap.b32 	%r37906, %r37903, %r37904, 28;
	mov.b64 	%rd21266, {%r37906, %r37905};
	shf.l.wrap.b32 	%r37907, %r37903, %r37904, 30;
	shf.l.wrap.b32 	%r37908, %r37904, %r37903, 30;
	mov.b64 	%rd21267, {%r37908, %r37907};
	xor.b64  	%rd21268, %rd21267, %rd21266;
	shf.l.wrap.b32 	%r37909, %r37903, %r37904, 25;
	shf.l.wrap.b32 	%r37910, %r37904, %r37903, 25;
	mov.b64 	%rd21269, {%r37910, %r37909};
	xor.b64  	%rd21270, %rd21268, %rd21269;
	and.b64  	%rd21271, %rd21251, %rd21226;
	xor.b64  	%rd21272, %rd21251, %rd21226;
	and.b64  	%rd21273, %rd21272, %rd21201;
	or.b64  	%rd21274, %rd21273, %rd21271;
	add.s64 	%rd21275, %rd21264, %rd21274;
	add.s64 	%rd21276, %rd21275, %rd21270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37911,%dummy}, %rd21265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37912}, %rd21265;
	}
	shf.r.wrap.b32 	%r37913, %r37912, %r37911, 14;
	shf.r.wrap.b32 	%r37914, %r37911, %r37912, 14;
	mov.b64 	%rd21277, {%r37914, %r37913};
	shf.r.wrap.b32 	%r37915, %r37912, %r37911, 18;
	shf.r.wrap.b32 	%r37916, %r37911, %r37912, 18;
	mov.b64 	%rd21278, {%r37916, %r37915};
	xor.b64  	%rd21279, %rd21278, %rd21277;
	shf.l.wrap.b32 	%r37917, %r37911, %r37912, 23;
	shf.l.wrap.b32 	%r37918, %r37912, %r37911, 23;
	mov.b64 	%rd21280, {%r37918, %r37917};
	xor.b64  	%rd21281, %rd21279, %rd21280;
	xor.b64  	%rd21282, %rd21240, %rd21215;
	and.b64  	%rd21283, %rd21265, %rd21282;
	xor.b64  	%rd21284, %rd21283, %rd21215;
	add.s64 	%rd21285, %rd21190, %rd20937;
	ld.const.u64 	%rd21286, [k_sha512+224];
	add.s64 	%rd21287, %rd21285, %rd21286;
	add.s64 	%rd21288, %rd21287, %rd21284;
	add.s64 	%rd21289, %rd21288, %rd21281;
	add.s64 	%rd21290, %rd21289, %rd21201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37919,%dummy}, %rd21276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37920}, %rd21276;
	}
	shf.r.wrap.b32 	%r37921, %r37920, %r37919, 28;
	shf.r.wrap.b32 	%r37922, %r37919, %r37920, 28;
	mov.b64 	%rd21291, {%r37922, %r37921};
	shf.l.wrap.b32 	%r37923, %r37919, %r37920, 30;
	shf.l.wrap.b32 	%r37924, %r37920, %r37919, 30;
	mov.b64 	%rd21292, {%r37924, %r37923};
	xor.b64  	%rd21293, %rd21292, %rd21291;
	shf.l.wrap.b32 	%r37925, %r37919, %r37920, 25;
	shf.l.wrap.b32 	%r37926, %r37920, %r37919, 25;
	mov.b64 	%rd21294, {%r37926, %r37925};
	xor.b64  	%rd21295, %rd21293, %rd21294;
	and.b64  	%rd21296, %rd21276, %rd21251;
	xor.b64  	%rd21297, %rd21276, %rd21251;
	and.b64  	%rd21298, %rd21297, %rd21226;
	or.b64  	%rd21299, %rd21298, %rd21296;
	add.s64 	%rd21300, %rd21289, %rd21299;
	add.s64 	%rd21301, %rd21300, %rd21295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37927,%dummy}, %rd21290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37928}, %rd21290;
	}
	shf.r.wrap.b32 	%r37929, %r37928, %r37927, 14;
	shf.r.wrap.b32 	%r37930, %r37927, %r37928, 14;
	mov.b64 	%rd21302, {%r37930, %r37929};
	shf.r.wrap.b32 	%r37931, %r37928, %r37927, 18;
	shf.r.wrap.b32 	%r37932, %r37927, %r37928, 18;
	mov.b64 	%rd21303, {%r37932, %r37931};
	xor.b64  	%rd21304, %rd21303, %rd21302;
	shf.l.wrap.b32 	%r37933, %r37927, %r37928, 23;
	shf.l.wrap.b32 	%r37934, %r37928, %r37927, 23;
	mov.b64 	%rd21305, {%r37934, %r37933};
	xor.b64  	%rd21306, %rd21304, %rd21305;
	xor.b64  	%rd21307, %rd21265, %rd21240;
	and.b64  	%rd21308, %rd21290, %rd21307;
	xor.b64  	%rd21309, %rd21308, %rd21240;
	add.s64 	%rd21310, %rd21215, %rd20950;
	ld.const.u64 	%rd21311, [k_sha512+232];
	add.s64 	%rd21312, %rd21310, %rd21311;
	add.s64 	%rd21313, %rd21312, %rd21309;
	add.s64 	%rd21314, %rd21313, %rd21306;
	add.s64 	%rd21315, %rd21314, %rd21226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37935,%dummy}, %rd21301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37936}, %rd21301;
	}
	shf.r.wrap.b32 	%r37937, %r37936, %r37935, 28;
	shf.r.wrap.b32 	%r37938, %r37935, %r37936, 28;
	mov.b64 	%rd21316, {%r37938, %r37937};
	shf.l.wrap.b32 	%r37939, %r37935, %r37936, 30;
	shf.l.wrap.b32 	%r37940, %r37936, %r37935, 30;
	mov.b64 	%rd21317, {%r37940, %r37939};
	xor.b64  	%rd21318, %rd21317, %rd21316;
	shf.l.wrap.b32 	%r37941, %r37935, %r37936, 25;
	shf.l.wrap.b32 	%r37942, %r37936, %r37935, 25;
	mov.b64 	%rd21319, {%r37942, %r37941};
	xor.b64  	%rd21320, %rd21318, %rd21319;
	and.b64  	%rd21321, %rd21301, %rd21276;
	xor.b64  	%rd21322, %rd21301, %rd21276;
	and.b64  	%rd21323, %rd21322, %rd21251;
	or.b64  	%rd21324, %rd21323, %rd21321;
	add.s64 	%rd21325, %rd21314, %rd21324;
	add.s64 	%rd21326, %rd21325, %rd21320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37943,%dummy}, %rd21315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37944}, %rd21315;
	}
	shf.r.wrap.b32 	%r37945, %r37944, %r37943, 14;
	shf.r.wrap.b32 	%r37946, %r37943, %r37944, 14;
	mov.b64 	%rd21327, {%r37946, %r37945};
	shf.r.wrap.b32 	%r37947, %r37944, %r37943, 18;
	shf.r.wrap.b32 	%r37948, %r37943, %r37944, 18;
	mov.b64 	%rd21328, {%r37948, %r37947};
	xor.b64  	%rd21329, %rd21328, %rd21327;
	shf.l.wrap.b32 	%r37949, %r37943, %r37944, 23;
	shf.l.wrap.b32 	%r37950, %r37944, %r37943, 23;
	mov.b64 	%rd21330, {%r37950, %r37949};
	xor.b64  	%rd21331, %rd21329, %rd21330;
	xor.b64  	%rd21332, %rd21290, %rd21265;
	and.b64  	%rd21333, %rd21315, %rd21332;
	xor.b64  	%rd21334, %rd21333, %rd21265;
	add.s64 	%rd21335, %rd21240, %rd20963;
	ld.const.u64 	%rd21336, [k_sha512+240];
	add.s64 	%rd21337, %rd21335, %rd21336;
	add.s64 	%rd21338, %rd21337, %rd21334;
	add.s64 	%rd21339, %rd21338, %rd21331;
	add.s64 	%rd21340, %rd21339, %rd21251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37951,%dummy}, %rd21326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37952}, %rd21326;
	}
	shf.r.wrap.b32 	%r37953, %r37952, %r37951, 28;
	shf.r.wrap.b32 	%r37954, %r37951, %r37952, 28;
	mov.b64 	%rd21341, {%r37954, %r37953};
	shf.l.wrap.b32 	%r37955, %r37951, %r37952, 30;
	shf.l.wrap.b32 	%r37956, %r37952, %r37951, 30;
	mov.b64 	%rd21342, {%r37956, %r37955};
	xor.b64  	%rd21343, %rd21342, %rd21341;
	shf.l.wrap.b32 	%r37957, %r37951, %r37952, 25;
	shf.l.wrap.b32 	%r37958, %r37952, %r37951, 25;
	mov.b64 	%rd21344, {%r37958, %r37957};
	xor.b64  	%rd21345, %rd21343, %rd21344;
	and.b64  	%rd21346, %rd21326, %rd21301;
	xor.b64  	%rd21347, %rd21326, %rd21301;
	and.b64  	%rd21348, %rd21347, %rd21276;
	or.b64  	%rd21349, %rd21348, %rd21346;
	add.s64 	%rd21350, %rd21339, %rd21349;
	add.s64 	%rd21351, %rd21350, %rd21345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37959,%dummy}, %rd21340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37960}, %rd21340;
	}
	shf.r.wrap.b32 	%r37961, %r37960, %r37959, 14;
	shf.r.wrap.b32 	%r37962, %r37959, %r37960, 14;
	mov.b64 	%rd21352, {%r37962, %r37961};
	shf.r.wrap.b32 	%r37963, %r37960, %r37959, 18;
	shf.r.wrap.b32 	%r37964, %r37959, %r37960, 18;
	mov.b64 	%rd21353, {%r37964, %r37963};
	xor.b64  	%rd21354, %rd21353, %rd21352;
	shf.l.wrap.b32 	%r37965, %r37959, %r37960, 23;
	shf.l.wrap.b32 	%r37966, %r37960, %r37959, 23;
	mov.b64 	%rd21355, {%r37966, %r37965};
	xor.b64  	%rd21356, %rd21354, %rd21355;
	xor.b64  	%rd21357, %rd21315, %rd21290;
	and.b64  	%rd21358, %rd21340, %rd21357;
	xor.b64  	%rd21359, %rd21358, %rd21290;
	add.s64 	%rd21360, %rd21265, %rd20976;
	ld.const.u64 	%rd21361, [k_sha512+248];
	add.s64 	%rd21362, %rd21360, %rd21361;
	add.s64 	%rd21363, %rd21362, %rd21359;
	add.s64 	%rd21364, %rd21363, %rd21356;
	add.s64 	%rd21365, %rd21364, %rd21276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37967,%dummy}, %rd21351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37968}, %rd21351;
	}
	shf.r.wrap.b32 	%r37969, %r37968, %r37967, 28;
	shf.r.wrap.b32 	%r37970, %r37967, %r37968, 28;
	mov.b64 	%rd21366, {%r37970, %r37969};
	shf.l.wrap.b32 	%r37971, %r37967, %r37968, 30;
	shf.l.wrap.b32 	%r37972, %r37968, %r37967, 30;
	mov.b64 	%rd21367, {%r37972, %r37971};
	xor.b64  	%rd21368, %rd21367, %rd21366;
	shf.l.wrap.b32 	%r37973, %r37967, %r37968, 25;
	shf.l.wrap.b32 	%r37974, %r37968, %r37967, 25;
	mov.b64 	%rd21369, {%r37974, %r37973};
	xor.b64  	%rd21370, %rd21368, %rd21369;
	and.b64  	%rd21371, %rd21351, %rd21326;
	xor.b64  	%rd21372, %rd21351, %rd21326;
	and.b64  	%rd21373, %rd21372, %rd21301;
	or.b64  	%rd21374, %rd21373, %rd21371;
	add.s64 	%rd21375, %rd21364, %rd21374;
	add.s64 	%rd21376, %rd21375, %rd21370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37975,%dummy}, %rd20963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37976}, %rd20963;
	}
	shf.r.wrap.b32 	%r37977, %r37976, %r37975, 19;
	shf.r.wrap.b32 	%r37978, %r37975, %r37976, 19;
	mov.b64 	%rd21377, {%r37978, %r37977};
	shf.l.wrap.b32 	%r37979, %r37975, %r37976, 3;
	shf.l.wrap.b32 	%r37980, %r37976, %r37975, 3;
	mov.b64 	%rd21378, {%r37980, %r37979};
	shr.u64 	%rd21379, %rd20963, 6;
	xor.b64  	%rd21380, %rd21377, %rd21379;
	xor.b64  	%rd21381, %rd21380, %rd21378;
	shf.r.wrap.b32 	%r37981, %r37570, %r37569, 1;
	shf.r.wrap.b32 	%r37982, %r37569, %r37570, 1;
	mov.b64 	%rd21382, {%r37982, %r37981};
	shf.r.wrap.b32 	%r37983, %r37570, %r37569, 8;
	shf.r.wrap.b32 	%r37984, %r37569, %r37570, 8;
	mov.b64 	%rd21383, {%r37984, %r37983};
	shr.u64 	%rd21384, %rd20794, 7;
	xor.b64  	%rd21385, %rd21382, %rd21384;
	xor.b64  	%rd21386, %rd21385, %rd21383;
	add.s64 	%rd21387, %rd20898, %rd20781;
	add.s64 	%rd21388, %rd21387, %rd21381;
	add.s64 	%rd21389, %rd21388, %rd21386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37985,%dummy}, %rd20976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37986}, %rd20976;
	}
	shf.r.wrap.b32 	%r37987, %r37986, %r37985, 19;
	shf.r.wrap.b32 	%r37988, %r37985, %r37986, 19;
	mov.b64 	%rd21390, {%r37988, %r37987};
	shf.l.wrap.b32 	%r37989, %r37985, %r37986, 3;
	shf.l.wrap.b32 	%r37990, %r37986, %r37985, 3;
	mov.b64 	%rd21391, {%r37990, %r37989};
	shr.u64 	%rd21392, %rd20976, 6;
	xor.b64  	%rd21393, %rd21390, %rd21392;
	xor.b64  	%rd21394, %rd21393, %rd21391;
	shf.r.wrap.b32 	%r37991, %r37582, %r37581, 1;
	shf.r.wrap.b32 	%r37992, %r37581, %r37582, 1;
	mov.b64 	%rd21395, {%r37992, %r37991};
	shf.r.wrap.b32 	%r37993, %r37582, %r37581, 8;
	shf.r.wrap.b32 	%r37994, %r37581, %r37582, 8;
	mov.b64 	%rd21396, {%r37994, %r37993};
	shr.u64 	%rd21397, %rd20807, 7;
	xor.b64  	%rd21398, %rd21395, %rd21397;
	xor.b64  	%rd21399, %rd21398, %rd21396;
	add.s64 	%rd21400, %rd20911, %rd20794;
	add.s64 	%rd21401, %rd21400, %rd21394;
	add.s64 	%rd21402, %rd21401, %rd21399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37995,%dummy}, %rd21389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37996}, %rd21389;
	}
	shf.r.wrap.b32 	%r37997, %r37996, %r37995, 19;
	shf.r.wrap.b32 	%r37998, %r37995, %r37996, 19;
	mov.b64 	%rd21403, {%r37998, %r37997};
	shf.l.wrap.b32 	%r37999, %r37995, %r37996, 3;
	shf.l.wrap.b32 	%r38000, %r37996, %r37995, 3;
	mov.b64 	%rd21404, {%r38000, %r37999};
	shr.u64 	%rd21405, %rd21389, 6;
	xor.b64  	%rd21406, %rd21403, %rd21405;
	xor.b64  	%rd21407, %rd21406, %rd21404;
	shf.r.wrap.b32 	%r38001, %r37594, %r37593, 1;
	shf.r.wrap.b32 	%r38002, %r37593, %r37594, 1;
	mov.b64 	%rd21408, {%r38002, %r38001};
	shf.r.wrap.b32 	%r38003, %r37594, %r37593, 8;
	shf.r.wrap.b32 	%r38004, %r37593, %r37594, 8;
	mov.b64 	%rd21409, {%r38004, %r38003};
	shr.u64 	%rd21410, %rd20820, 7;
	xor.b64  	%rd21411, %rd21408, %rd21410;
	xor.b64  	%rd21412, %rd21411, %rd21409;
	add.s64 	%rd21413, %rd20924, %rd20807;
	add.s64 	%rd21414, %rd21413, %rd21407;
	add.s64 	%rd21415, %rd21414, %rd21412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38005,%dummy}, %rd21402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38006}, %rd21402;
	}
	shf.r.wrap.b32 	%r38007, %r38006, %r38005, 19;
	shf.r.wrap.b32 	%r38008, %r38005, %r38006, 19;
	mov.b64 	%rd21416, {%r38008, %r38007};
	shf.l.wrap.b32 	%r38009, %r38005, %r38006, 3;
	shf.l.wrap.b32 	%r38010, %r38006, %r38005, 3;
	mov.b64 	%rd21417, {%r38010, %r38009};
	shr.u64 	%rd21418, %rd21402, 6;
	xor.b64  	%rd21419, %rd21416, %rd21418;
	xor.b64  	%rd21420, %rd21419, %rd21417;
	shf.r.wrap.b32 	%r38011, %r37606, %r37605, 1;
	shf.r.wrap.b32 	%r38012, %r37605, %r37606, 1;
	mov.b64 	%rd21421, {%r38012, %r38011};
	shf.r.wrap.b32 	%r38013, %r37606, %r37605, 8;
	shf.r.wrap.b32 	%r38014, %r37605, %r37606, 8;
	mov.b64 	%rd21422, {%r38014, %r38013};
	shr.u64 	%rd21423, %rd20833, 7;
	xor.b64  	%rd21424, %rd21421, %rd21423;
	xor.b64  	%rd21425, %rd21424, %rd21422;
	add.s64 	%rd21426, %rd20937, %rd20820;
	add.s64 	%rd21427, %rd21426, %rd21420;
	add.s64 	%rd21428, %rd21427, %rd21425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38015,%dummy}, %rd21415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38016}, %rd21415;
	}
	shf.r.wrap.b32 	%r38017, %r38016, %r38015, 19;
	shf.r.wrap.b32 	%r38018, %r38015, %r38016, 19;
	mov.b64 	%rd21429, {%r38018, %r38017};
	shf.l.wrap.b32 	%r38019, %r38015, %r38016, 3;
	shf.l.wrap.b32 	%r38020, %r38016, %r38015, 3;
	mov.b64 	%rd21430, {%r38020, %r38019};
	shr.u64 	%rd21431, %rd21415, 6;
	xor.b64  	%rd21432, %rd21429, %rd21431;
	xor.b64  	%rd21433, %rd21432, %rd21430;
	shf.r.wrap.b32 	%r38021, %r37618, %r37617, 1;
	shf.r.wrap.b32 	%r38022, %r37617, %r37618, 1;
	mov.b64 	%rd21434, {%r38022, %r38021};
	shf.r.wrap.b32 	%r38023, %r37618, %r37617, 8;
	shf.r.wrap.b32 	%r38024, %r37617, %r37618, 8;
	mov.b64 	%rd21435, {%r38024, %r38023};
	shr.u64 	%rd21436, %rd20846, 7;
	xor.b64  	%rd21437, %rd21434, %rd21436;
	xor.b64  	%rd21438, %rd21437, %rd21435;
	add.s64 	%rd21439, %rd20950, %rd20833;
	add.s64 	%rd21440, %rd21439, %rd21433;
	add.s64 	%rd21441, %rd21440, %rd21438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38025,%dummy}, %rd21428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38026}, %rd21428;
	}
	shf.r.wrap.b32 	%r38027, %r38026, %r38025, 19;
	shf.r.wrap.b32 	%r38028, %r38025, %r38026, 19;
	mov.b64 	%rd21442, {%r38028, %r38027};
	shf.l.wrap.b32 	%r38029, %r38025, %r38026, 3;
	shf.l.wrap.b32 	%r38030, %r38026, %r38025, 3;
	mov.b64 	%rd21443, {%r38030, %r38029};
	shr.u64 	%rd21444, %rd21428, 6;
	xor.b64  	%rd21445, %rd21442, %rd21444;
	xor.b64  	%rd21446, %rd21445, %rd21443;
	shf.r.wrap.b32 	%r38031, %r37630, %r37629, 1;
	shf.r.wrap.b32 	%r38032, %r37629, %r37630, 1;
	mov.b64 	%rd21447, {%r38032, %r38031};
	shf.r.wrap.b32 	%r38033, %r37630, %r37629, 8;
	shf.r.wrap.b32 	%r38034, %r37629, %r37630, 8;
	mov.b64 	%rd21448, {%r38034, %r38033};
	shr.u64 	%rd21449, %rd20859, 7;
	xor.b64  	%rd21450, %rd21447, %rd21449;
	xor.b64  	%rd21451, %rd21450, %rd21448;
	add.s64 	%rd21452, %rd20963, %rd20846;
	add.s64 	%rd21453, %rd21452, %rd21446;
	add.s64 	%rd21454, %rd21453, %rd21451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38035,%dummy}, %rd21441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38036}, %rd21441;
	}
	shf.r.wrap.b32 	%r38037, %r38036, %r38035, 19;
	shf.r.wrap.b32 	%r38038, %r38035, %r38036, 19;
	mov.b64 	%rd21455, {%r38038, %r38037};
	shf.l.wrap.b32 	%r38039, %r38035, %r38036, 3;
	shf.l.wrap.b32 	%r38040, %r38036, %r38035, 3;
	mov.b64 	%rd21456, {%r38040, %r38039};
	shr.u64 	%rd21457, %rd21441, 6;
	xor.b64  	%rd21458, %rd21455, %rd21457;
	xor.b64  	%rd21459, %rd21458, %rd21456;
	shf.r.wrap.b32 	%r38041, %r37642, %r37641, 1;
	shf.r.wrap.b32 	%r38042, %r37641, %r37642, 1;
	mov.b64 	%rd21460, {%r38042, %r38041};
	shf.r.wrap.b32 	%r38043, %r37642, %r37641, 8;
	shf.r.wrap.b32 	%r38044, %r37641, %r37642, 8;
	mov.b64 	%rd21461, {%r38044, %r38043};
	shr.u64 	%rd21462, %rd20872, 7;
	xor.b64  	%rd21463, %rd21460, %rd21462;
	xor.b64  	%rd21464, %rd21463, %rd21461;
	add.s64 	%rd21465, %rd20976, %rd20859;
	add.s64 	%rd21466, %rd21465, %rd21459;
	add.s64 	%rd21467, %rd21466, %rd21464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38045,%dummy}, %rd21454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38046}, %rd21454;
	}
	shf.r.wrap.b32 	%r38047, %r38046, %r38045, 19;
	shf.r.wrap.b32 	%r38048, %r38045, %r38046, 19;
	mov.b64 	%rd21468, {%r38048, %r38047};
	shf.l.wrap.b32 	%r38049, %r38045, %r38046, 3;
	shf.l.wrap.b32 	%r38050, %r38046, %r38045, 3;
	mov.b64 	%rd21469, {%r38050, %r38049};
	shr.u64 	%rd21470, %rd21454, 6;
	xor.b64  	%rd21471, %rd21468, %rd21470;
	xor.b64  	%rd21472, %rd21471, %rd21469;
	shf.r.wrap.b32 	%r38051, %r37654, %r37653, 1;
	shf.r.wrap.b32 	%r38052, %r37653, %r37654, 1;
	mov.b64 	%rd21473, {%r38052, %r38051};
	shf.r.wrap.b32 	%r38053, %r37654, %r37653, 8;
	shf.r.wrap.b32 	%r38054, %r37653, %r37654, 8;
	mov.b64 	%rd21474, {%r38054, %r38053};
	shr.u64 	%rd21475, %rd20885, 7;
	xor.b64  	%rd21476, %rd21473, %rd21475;
	xor.b64  	%rd21477, %rd21476, %rd21474;
	add.s64 	%rd21478, %rd21389, %rd20872;
	add.s64 	%rd21479, %rd21478, %rd21472;
	add.s64 	%rd21480, %rd21479, %rd21477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38055,%dummy}, %rd21467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38056}, %rd21467;
	}
	shf.r.wrap.b32 	%r38057, %r38056, %r38055, 19;
	shf.r.wrap.b32 	%r38058, %r38055, %r38056, 19;
	mov.b64 	%rd21481, {%r38058, %r38057};
	shf.l.wrap.b32 	%r38059, %r38055, %r38056, 3;
	shf.l.wrap.b32 	%r38060, %r38056, %r38055, 3;
	mov.b64 	%rd21482, {%r38060, %r38059};
	shr.u64 	%rd21483, %rd21467, 6;
	xor.b64  	%rd21484, %rd21481, %rd21483;
	xor.b64  	%rd21485, %rd21484, %rd21482;
	shf.r.wrap.b32 	%r38061, %r37666, %r37665, 1;
	shf.r.wrap.b32 	%r38062, %r37665, %r37666, 1;
	mov.b64 	%rd21486, {%r38062, %r38061};
	shf.r.wrap.b32 	%r38063, %r37666, %r37665, 8;
	shf.r.wrap.b32 	%r38064, %r37665, %r37666, 8;
	mov.b64 	%rd21487, {%r38064, %r38063};
	shr.u64 	%rd21488, %rd20898, 7;
	xor.b64  	%rd21489, %rd21486, %rd21488;
	xor.b64  	%rd21490, %rd21489, %rd21487;
	add.s64 	%rd21491, %rd21402, %rd20885;
	add.s64 	%rd21492, %rd21491, %rd21485;
	add.s64 	%rd21493, %rd21492, %rd21490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38065,%dummy}, %rd21480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38066}, %rd21480;
	}
	shf.r.wrap.b32 	%r38067, %r38066, %r38065, 19;
	shf.r.wrap.b32 	%r38068, %r38065, %r38066, 19;
	mov.b64 	%rd21494, {%r38068, %r38067};
	shf.l.wrap.b32 	%r38069, %r38065, %r38066, 3;
	shf.l.wrap.b32 	%r38070, %r38066, %r38065, 3;
	mov.b64 	%rd21495, {%r38070, %r38069};
	shr.u64 	%rd21496, %rd21480, 6;
	xor.b64  	%rd21497, %rd21494, %rd21496;
	xor.b64  	%rd21498, %rd21497, %rd21495;
	shf.r.wrap.b32 	%r38071, %r37678, %r37677, 1;
	shf.r.wrap.b32 	%r38072, %r37677, %r37678, 1;
	mov.b64 	%rd21499, {%r38072, %r38071};
	shf.r.wrap.b32 	%r38073, %r37678, %r37677, 8;
	shf.r.wrap.b32 	%r38074, %r37677, %r37678, 8;
	mov.b64 	%rd21500, {%r38074, %r38073};
	shr.u64 	%rd21501, %rd20911, 7;
	xor.b64  	%rd21502, %rd21499, %rd21501;
	xor.b64  	%rd21503, %rd21502, %rd21500;
	add.s64 	%rd21504, %rd21415, %rd20898;
	add.s64 	%rd21505, %rd21504, %rd21498;
	add.s64 	%rd21506, %rd21505, %rd21503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38075,%dummy}, %rd21493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38076}, %rd21493;
	}
	shf.r.wrap.b32 	%r38077, %r38076, %r38075, 19;
	shf.r.wrap.b32 	%r38078, %r38075, %r38076, 19;
	mov.b64 	%rd21507, {%r38078, %r38077};
	shf.l.wrap.b32 	%r38079, %r38075, %r38076, 3;
	shf.l.wrap.b32 	%r38080, %r38076, %r38075, 3;
	mov.b64 	%rd21508, {%r38080, %r38079};
	shr.u64 	%rd21509, %rd21493, 6;
	xor.b64  	%rd21510, %rd21507, %rd21509;
	xor.b64  	%rd21511, %rd21510, %rd21508;
	shf.r.wrap.b32 	%r38081, %r37690, %r37689, 1;
	shf.r.wrap.b32 	%r38082, %r37689, %r37690, 1;
	mov.b64 	%rd21512, {%r38082, %r38081};
	shf.r.wrap.b32 	%r38083, %r37690, %r37689, 8;
	shf.r.wrap.b32 	%r38084, %r37689, %r37690, 8;
	mov.b64 	%rd21513, {%r38084, %r38083};
	shr.u64 	%rd21514, %rd20924, 7;
	xor.b64  	%rd21515, %rd21512, %rd21514;
	xor.b64  	%rd21516, %rd21515, %rd21513;
	add.s64 	%rd21517, %rd21428, %rd20911;
	add.s64 	%rd21518, %rd21517, %rd21511;
	add.s64 	%rd21519, %rd21518, %rd21516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38085,%dummy}, %rd21506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38086}, %rd21506;
	}
	shf.r.wrap.b32 	%r38087, %r38086, %r38085, 19;
	shf.r.wrap.b32 	%r38088, %r38085, %r38086, 19;
	mov.b64 	%rd21520, {%r38088, %r38087};
	shf.l.wrap.b32 	%r38089, %r38085, %r38086, 3;
	shf.l.wrap.b32 	%r38090, %r38086, %r38085, 3;
	mov.b64 	%rd21521, {%r38090, %r38089};
	shr.u64 	%rd21522, %rd21506, 6;
	xor.b64  	%rd21523, %rd21520, %rd21522;
	xor.b64  	%rd21524, %rd21523, %rd21521;
	shf.r.wrap.b32 	%r38091, %r37700, %r37699, 1;
	shf.r.wrap.b32 	%r38092, %r37699, %r37700, 1;
	mov.b64 	%rd21525, {%r38092, %r38091};
	shf.r.wrap.b32 	%r38093, %r37700, %r37699, 8;
	shf.r.wrap.b32 	%r38094, %r37699, %r37700, 8;
	mov.b64 	%rd21526, {%r38094, %r38093};
	shr.u64 	%rd21527, %rd20937, 7;
	xor.b64  	%rd21528, %rd21525, %rd21527;
	xor.b64  	%rd21529, %rd21528, %rd21526;
	add.s64 	%rd21530, %rd21441, %rd20924;
	add.s64 	%rd21531, %rd21530, %rd21524;
	add.s64 	%rd21532, %rd21531, %rd21529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38095,%dummy}, %rd21519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38096}, %rd21519;
	}
	shf.r.wrap.b32 	%r38097, %r38096, %r38095, 19;
	shf.r.wrap.b32 	%r38098, %r38095, %r38096, 19;
	mov.b64 	%rd21533, {%r38098, %r38097};
	shf.l.wrap.b32 	%r38099, %r38095, %r38096, 3;
	shf.l.wrap.b32 	%r38100, %r38096, %r38095, 3;
	mov.b64 	%rd21534, {%r38100, %r38099};
	shr.u64 	%rd21535, %rd21519, 6;
	xor.b64  	%rd21536, %rd21533, %rd21535;
	xor.b64  	%rd21537, %rd21536, %rd21534;
	shf.r.wrap.b32 	%r38101, %r37710, %r37709, 1;
	shf.r.wrap.b32 	%r38102, %r37709, %r37710, 1;
	mov.b64 	%rd21538, {%r38102, %r38101};
	shf.r.wrap.b32 	%r38103, %r37710, %r37709, 8;
	shf.r.wrap.b32 	%r38104, %r37709, %r37710, 8;
	mov.b64 	%rd21539, {%r38104, %r38103};
	shr.u64 	%rd21540, %rd20950, 7;
	xor.b64  	%rd21541, %rd21538, %rd21540;
	xor.b64  	%rd21542, %rd21541, %rd21539;
	add.s64 	%rd21543, %rd21454, %rd20937;
	add.s64 	%rd21544, %rd21543, %rd21537;
	add.s64 	%rd21545, %rd21544, %rd21542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38105,%dummy}, %rd21532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38106}, %rd21532;
	}
	shf.r.wrap.b32 	%r38107, %r38106, %r38105, 19;
	shf.r.wrap.b32 	%r38108, %r38105, %r38106, 19;
	mov.b64 	%rd21546, {%r38108, %r38107};
	shf.l.wrap.b32 	%r38109, %r38105, %r38106, 3;
	shf.l.wrap.b32 	%r38110, %r38106, %r38105, 3;
	mov.b64 	%rd21547, {%r38110, %r38109};
	shr.u64 	%rd21548, %rd21532, 6;
	xor.b64  	%rd21549, %rd21546, %rd21548;
	xor.b64  	%rd21550, %rd21549, %rd21547;
	shf.r.wrap.b32 	%r38111, %r37976, %r37975, 1;
	shf.r.wrap.b32 	%r38112, %r37975, %r37976, 1;
	mov.b64 	%rd21551, {%r38112, %r38111};
	shf.r.wrap.b32 	%r38113, %r37976, %r37975, 8;
	shf.r.wrap.b32 	%r38114, %r37975, %r37976, 8;
	mov.b64 	%rd21552, {%r38114, %r38113};
	shr.u64 	%rd21553, %rd20963, 7;
	xor.b64  	%rd21554, %rd21551, %rd21553;
	xor.b64  	%rd21555, %rd21554, %rd21552;
	add.s64 	%rd21556, %rd21467, %rd20950;
	add.s64 	%rd21557, %rd21556, %rd21550;
	add.s64 	%rd21558, %rd21557, %rd21555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38115,%dummy}, %rd21545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38116}, %rd21545;
	}
	shf.r.wrap.b32 	%r38117, %r38116, %r38115, 19;
	shf.r.wrap.b32 	%r38118, %r38115, %r38116, 19;
	mov.b64 	%rd21559, {%r38118, %r38117};
	shf.l.wrap.b32 	%r38119, %r38115, %r38116, 3;
	shf.l.wrap.b32 	%r38120, %r38116, %r38115, 3;
	mov.b64 	%rd21560, {%r38120, %r38119};
	shr.u64 	%rd21561, %rd21545, 6;
	xor.b64  	%rd21562, %rd21559, %rd21561;
	xor.b64  	%rd21563, %rd21562, %rd21560;
	shf.r.wrap.b32 	%r38121, %r37986, %r37985, 1;
	shf.r.wrap.b32 	%r38122, %r37985, %r37986, 1;
	mov.b64 	%rd21564, {%r38122, %r38121};
	shf.r.wrap.b32 	%r38123, %r37986, %r37985, 8;
	shf.r.wrap.b32 	%r38124, %r37985, %r37986, 8;
	mov.b64 	%rd21565, {%r38124, %r38123};
	shr.u64 	%rd21566, %rd20976, 7;
	xor.b64  	%rd21567, %rd21564, %rd21566;
	xor.b64  	%rd21568, %rd21567, %rd21565;
	add.s64 	%rd21569, %rd21480, %rd20963;
	add.s64 	%rd21570, %rd21569, %rd21563;
	add.s64 	%rd21571, %rd21570, %rd21568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38125,%dummy}, %rd21558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38126}, %rd21558;
	}
	shf.r.wrap.b32 	%r38127, %r38126, %r38125, 19;
	shf.r.wrap.b32 	%r38128, %r38125, %r38126, 19;
	mov.b64 	%rd21572, {%r38128, %r38127};
	shf.l.wrap.b32 	%r38129, %r38125, %r38126, 3;
	shf.l.wrap.b32 	%r38130, %r38126, %r38125, 3;
	mov.b64 	%rd21573, {%r38130, %r38129};
	shr.u64 	%rd21574, %rd21558, 6;
	xor.b64  	%rd21575, %rd21572, %rd21574;
	xor.b64  	%rd21576, %rd21575, %rd21573;
	shf.r.wrap.b32 	%r38131, %r37996, %r37995, 1;
	shf.r.wrap.b32 	%r38132, %r37995, %r37996, 1;
	mov.b64 	%rd21577, {%r38132, %r38131};
	shf.r.wrap.b32 	%r38133, %r37996, %r37995, 8;
	shf.r.wrap.b32 	%r38134, %r37995, %r37996, 8;
	mov.b64 	%rd21578, {%r38134, %r38133};
	shr.u64 	%rd21579, %rd21389, 7;
	xor.b64  	%rd21580, %rd21577, %rd21579;
	xor.b64  	%rd21581, %rd21580, %rd21578;
	add.s64 	%rd21582, %rd21493, %rd20976;
	add.s64 	%rd21583, %rd21582, %rd21576;
	add.s64 	%rd21584, %rd21583, %rd21581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38135,%dummy}, %rd21365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38136}, %rd21365;
	}
	shf.r.wrap.b32 	%r38137, %r38136, %r38135, 14;
	shf.r.wrap.b32 	%r38138, %r38135, %r38136, 14;
	mov.b64 	%rd21585, {%r38138, %r38137};
	shf.r.wrap.b32 	%r38139, %r38136, %r38135, 18;
	shf.r.wrap.b32 	%r38140, %r38135, %r38136, 18;
	mov.b64 	%rd21586, {%r38140, %r38139};
	xor.b64  	%rd21587, %rd21586, %rd21585;
	shf.l.wrap.b32 	%r38141, %r38135, %r38136, 23;
	shf.l.wrap.b32 	%r38142, %r38136, %r38135, 23;
	mov.b64 	%rd21588, {%r38142, %r38141};
	xor.b64  	%rd21589, %rd21587, %rd21588;
	xor.b64  	%rd21590, %rd21340, %rd21315;
	and.b64  	%rd21591, %rd21365, %rd21590;
	xor.b64  	%rd21592, %rd21591, %rd21315;
	add.s64 	%rd21593, %rd21592, %rd21290;
	add.s64 	%rd21594, %rd21593, %rd21389;
	ld.const.u64 	%rd21595, [k_sha512+256];
	add.s64 	%rd21596, %rd21594, %rd21595;
	add.s64 	%rd21597, %rd21596, %rd21589;
	add.s64 	%rd21598, %rd21597, %rd21301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38143,%dummy}, %rd21376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38144}, %rd21376;
	}
	shf.r.wrap.b32 	%r38145, %r38144, %r38143, 28;
	shf.r.wrap.b32 	%r38146, %r38143, %r38144, 28;
	mov.b64 	%rd21599, {%r38146, %r38145};
	shf.l.wrap.b32 	%r38147, %r38143, %r38144, 30;
	shf.l.wrap.b32 	%r38148, %r38144, %r38143, 30;
	mov.b64 	%rd21600, {%r38148, %r38147};
	xor.b64  	%rd21601, %rd21600, %rd21599;
	shf.l.wrap.b32 	%r38149, %r38143, %r38144, 25;
	shf.l.wrap.b32 	%r38150, %r38144, %r38143, 25;
	mov.b64 	%rd21602, {%r38150, %r38149};
	xor.b64  	%rd21603, %rd21601, %rd21602;
	and.b64  	%rd21604, %rd21376, %rd21351;
	xor.b64  	%rd21605, %rd21376, %rd21351;
	and.b64  	%rd21606, %rd21605, %rd21326;
	or.b64  	%rd21607, %rd21606, %rd21604;
	add.s64 	%rd21608, %rd21597, %rd21607;
	add.s64 	%rd21609, %rd21608, %rd21603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38151,%dummy}, %rd21598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38152}, %rd21598;
	}
	shf.r.wrap.b32 	%r38153, %r38152, %r38151, 14;
	shf.r.wrap.b32 	%r38154, %r38151, %r38152, 14;
	mov.b64 	%rd21610, {%r38154, %r38153};
	shf.r.wrap.b32 	%r38155, %r38152, %r38151, 18;
	shf.r.wrap.b32 	%r38156, %r38151, %r38152, 18;
	mov.b64 	%rd21611, {%r38156, %r38155};
	xor.b64  	%rd21612, %rd21611, %rd21610;
	shf.l.wrap.b32 	%r38157, %r38151, %r38152, 23;
	shf.l.wrap.b32 	%r38158, %r38152, %r38151, 23;
	mov.b64 	%rd21613, {%r38158, %r38157};
	xor.b64  	%rd21614, %rd21612, %rd21613;
	xor.b64  	%rd21615, %rd21365, %rd21340;
	and.b64  	%rd21616, %rd21598, %rd21615;
	xor.b64  	%rd21617, %rd21616, %rd21340;
	add.s64 	%rd21618, %rd21402, %rd21315;
	ld.const.u64 	%rd21619, [k_sha512+264];
	add.s64 	%rd21620, %rd21618, %rd21619;
	add.s64 	%rd21621, %rd21620, %rd21617;
	add.s64 	%rd21622, %rd21621, %rd21614;
	add.s64 	%rd21623, %rd21622, %rd21326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38159,%dummy}, %rd21609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38160}, %rd21609;
	}
	shf.r.wrap.b32 	%r38161, %r38160, %r38159, 28;
	shf.r.wrap.b32 	%r38162, %r38159, %r38160, 28;
	mov.b64 	%rd21624, {%r38162, %r38161};
	shf.l.wrap.b32 	%r38163, %r38159, %r38160, 30;
	shf.l.wrap.b32 	%r38164, %r38160, %r38159, 30;
	mov.b64 	%rd21625, {%r38164, %r38163};
	xor.b64  	%rd21626, %rd21625, %rd21624;
	shf.l.wrap.b32 	%r38165, %r38159, %r38160, 25;
	shf.l.wrap.b32 	%r38166, %r38160, %r38159, 25;
	mov.b64 	%rd21627, {%r38166, %r38165};
	xor.b64  	%rd21628, %rd21626, %rd21627;
	and.b64  	%rd21629, %rd21609, %rd21376;
	xor.b64  	%rd21630, %rd21609, %rd21376;
	and.b64  	%rd21631, %rd21630, %rd21351;
	or.b64  	%rd21632, %rd21631, %rd21629;
	add.s64 	%rd21633, %rd21622, %rd21632;
	add.s64 	%rd21634, %rd21633, %rd21628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38167,%dummy}, %rd21623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38168}, %rd21623;
	}
	shf.r.wrap.b32 	%r38169, %r38168, %r38167, 14;
	shf.r.wrap.b32 	%r38170, %r38167, %r38168, 14;
	mov.b64 	%rd21635, {%r38170, %r38169};
	shf.r.wrap.b32 	%r38171, %r38168, %r38167, 18;
	shf.r.wrap.b32 	%r38172, %r38167, %r38168, 18;
	mov.b64 	%rd21636, {%r38172, %r38171};
	xor.b64  	%rd21637, %rd21636, %rd21635;
	shf.l.wrap.b32 	%r38173, %r38167, %r38168, 23;
	shf.l.wrap.b32 	%r38174, %r38168, %r38167, 23;
	mov.b64 	%rd21638, {%r38174, %r38173};
	xor.b64  	%rd21639, %rd21637, %rd21638;
	xor.b64  	%rd21640, %rd21598, %rd21365;
	and.b64  	%rd21641, %rd21623, %rd21640;
	xor.b64  	%rd21642, %rd21641, %rd21365;
	add.s64 	%rd21643, %rd21415, %rd21340;
	ld.const.u64 	%rd21644, [k_sha512+272];
	add.s64 	%rd21645, %rd21643, %rd21644;
	add.s64 	%rd21646, %rd21645, %rd21642;
	add.s64 	%rd21647, %rd21646, %rd21639;
	add.s64 	%rd21648, %rd21647, %rd21351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38175,%dummy}, %rd21634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38176}, %rd21634;
	}
	shf.r.wrap.b32 	%r38177, %r38176, %r38175, 28;
	shf.r.wrap.b32 	%r38178, %r38175, %r38176, 28;
	mov.b64 	%rd21649, {%r38178, %r38177};
	shf.l.wrap.b32 	%r38179, %r38175, %r38176, 30;
	shf.l.wrap.b32 	%r38180, %r38176, %r38175, 30;
	mov.b64 	%rd21650, {%r38180, %r38179};
	xor.b64  	%rd21651, %rd21650, %rd21649;
	shf.l.wrap.b32 	%r38181, %r38175, %r38176, 25;
	shf.l.wrap.b32 	%r38182, %r38176, %r38175, 25;
	mov.b64 	%rd21652, {%r38182, %r38181};
	xor.b64  	%rd21653, %rd21651, %rd21652;
	and.b64  	%rd21654, %rd21634, %rd21609;
	xor.b64  	%rd21655, %rd21634, %rd21609;
	and.b64  	%rd21656, %rd21655, %rd21376;
	or.b64  	%rd21657, %rd21656, %rd21654;
	add.s64 	%rd21658, %rd21647, %rd21657;
	add.s64 	%rd21659, %rd21658, %rd21653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38183,%dummy}, %rd21648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38184}, %rd21648;
	}
	shf.r.wrap.b32 	%r38185, %r38184, %r38183, 14;
	shf.r.wrap.b32 	%r38186, %r38183, %r38184, 14;
	mov.b64 	%rd21660, {%r38186, %r38185};
	shf.r.wrap.b32 	%r38187, %r38184, %r38183, 18;
	shf.r.wrap.b32 	%r38188, %r38183, %r38184, 18;
	mov.b64 	%rd21661, {%r38188, %r38187};
	xor.b64  	%rd21662, %rd21661, %rd21660;
	shf.l.wrap.b32 	%r38189, %r38183, %r38184, 23;
	shf.l.wrap.b32 	%r38190, %r38184, %r38183, 23;
	mov.b64 	%rd21663, {%r38190, %r38189};
	xor.b64  	%rd21664, %rd21662, %rd21663;
	xor.b64  	%rd21665, %rd21623, %rd21598;
	and.b64  	%rd21666, %rd21648, %rd21665;
	xor.b64  	%rd21667, %rd21666, %rd21598;
	add.s64 	%rd21668, %rd21428, %rd21365;
	ld.const.u64 	%rd21669, [k_sha512+280];
	add.s64 	%rd21670, %rd21668, %rd21669;
	add.s64 	%rd21671, %rd21670, %rd21667;
	add.s64 	%rd21672, %rd21671, %rd21664;
	add.s64 	%rd21673, %rd21672, %rd21376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38191,%dummy}, %rd21659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38192}, %rd21659;
	}
	shf.r.wrap.b32 	%r38193, %r38192, %r38191, 28;
	shf.r.wrap.b32 	%r38194, %r38191, %r38192, 28;
	mov.b64 	%rd21674, {%r38194, %r38193};
	shf.l.wrap.b32 	%r38195, %r38191, %r38192, 30;
	shf.l.wrap.b32 	%r38196, %r38192, %r38191, 30;
	mov.b64 	%rd21675, {%r38196, %r38195};
	xor.b64  	%rd21676, %rd21675, %rd21674;
	shf.l.wrap.b32 	%r38197, %r38191, %r38192, 25;
	shf.l.wrap.b32 	%r38198, %r38192, %r38191, 25;
	mov.b64 	%rd21677, {%r38198, %r38197};
	xor.b64  	%rd21678, %rd21676, %rd21677;
	and.b64  	%rd21679, %rd21659, %rd21634;
	xor.b64  	%rd21680, %rd21659, %rd21634;
	and.b64  	%rd21681, %rd21680, %rd21609;
	or.b64  	%rd21682, %rd21681, %rd21679;
	add.s64 	%rd21683, %rd21672, %rd21682;
	add.s64 	%rd21684, %rd21683, %rd21678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38199,%dummy}, %rd21673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38200}, %rd21673;
	}
	shf.r.wrap.b32 	%r38201, %r38200, %r38199, 14;
	shf.r.wrap.b32 	%r38202, %r38199, %r38200, 14;
	mov.b64 	%rd21685, {%r38202, %r38201};
	shf.r.wrap.b32 	%r38203, %r38200, %r38199, 18;
	shf.r.wrap.b32 	%r38204, %r38199, %r38200, 18;
	mov.b64 	%rd21686, {%r38204, %r38203};
	xor.b64  	%rd21687, %rd21686, %rd21685;
	shf.l.wrap.b32 	%r38205, %r38199, %r38200, 23;
	shf.l.wrap.b32 	%r38206, %r38200, %r38199, 23;
	mov.b64 	%rd21688, {%r38206, %r38205};
	xor.b64  	%rd21689, %rd21687, %rd21688;
	xor.b64  	%rd21690, %rd21648, %rd21623;
	and.b64  	%rd21691, %rd21673, %rd21690;
	xor.b64  	%rd21692, %rd21691, %rd21623;
	add.s64 	%rd21693, %rd21598, %rd21441;
	ld.const.u64 	%rd21694, [k_sha512+288];
	add.s64 	%rd21695, %rd21693, %rd21694;
	add.s64 	%rd21696, %rd21695, %rd21692;
	add.s64 	%rd21697, %rd21696, %rd21689;
	add.s64 	%rd21698, %rd21697, %rd21609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38207,%dummy}, %rd21684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38208}, %rd21684;
	}
	shf.r.wrap.b32 	%r38209, %r38208, %r38207, 28;
	shf.r.wrap.b32 	%r38210, %r38207, %r38208, 28;
	mov.b64 	%rd21699, {%r38210, %r38209};
	shf.l.wrap.b32 	%r38211, %r38207, %r38208, 30;
	shf.l.wrap.b32 	%r38212, %r38208, %r38207, 30;
	mov.b64 	%rd21700, {%r38212, %r38211};
	xor.b64  	%rd21701, %rd21700, %rd21699;
	shf.l.wrap.b32 	%r38213, %r38207, %r38208, 25;
	shf.l.wrap.b32 	%r38214, %r38208, %r38207, 25;
	mov.b64 	%rd21702, {%r38214, %r38213};
	xor.b64  	%rd21703, %rd21701, %rd21702;
	and.b64  	%rd21704, %rd21684, %rd21659;
	xor.b64  	%rd21705, %rd21684, %rd21659;
	and.b64  	%rd21706, %rd21705, %rd21634;
	or.b64  	%rd21707, %rd21706, %rd21704;
	add.s64 	%rd21708, %rd21697, %rd21707;
	add.s64 	%rd21709, %rd21708, %rd21703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38215,%dummy}, %rd21698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38216}, %rd21698;
	}
	shf.r.wrap.b32 	%r38217, %r38216, %r38215, 14;
	shf.r.wrap.b32 	%r38218, %r38215, %r38216, 14;
	mov.b64 	%rd21710, {%r38218, %r38217};
	shf.r.wrap.b32 	%r38219, %r38216, %r38215, 18;
	shf.r.wrap.b32 	%r38220, %r38215, %r38216, 18;
	mov.b64 	%rd21711, {%r38220, %r38219};
	xor.b64  	%rd21712, %rd21711, %rd21710;
	shf.l.wrap.b32 	%r38221, %r38215, %r38216, 23;
	shf.l.wrap.b32 	%r38222, %r38216, %r38215, 23;
	mov.b64 	%rd21713, {%r38222, %r38221};
	xor.b64  	%rd21714, %rd21712, %rd21713;
	xor.b64  	%rd21715, %rd21673, %rd21648;
	and.b64  	%rd21716, %rd21698, %rd21715;
	xor.b64  	%rd21717, %rd21716, %rd21648;
	add.s64 	%rd21718, %rd21623, %rd21454;
	ld.const.u64 	%rd21719, [k_sha512+296];
	add.s64 	%rd21720, %rd21718, %rd21719;
	add.s64 	%rd21721, %rd21720, %rd21717;
	add.s64 	%rd21722, %rd21721, %rd21714;
	add.s64 	%rd21723, %rd21722, %rd21634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38223,%dummy}, %rd21709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38224}, %rd21709;
	}
	shf.r.wrap.b32 	%r38225, %r38224, %r38223, 28;
	shf.r.wrap.b32 	%r38226, %r38223, %r38224, 28;
	mov.b64 	%rd21724, {%r38226, %r38225};
	shf.l.wrap.b32 	%r38227, %r38223, %r38224, 30;
	shf.l.wrap.b32 	%r38228, %r38224, %r38223, 30;
	mov.b64 	%rd21725, {%r38228, %r38227};
	xor.b64  	%rd21726, %rd21725, %rd21724;
	shf.l.wrap.b32 	%r38229, %r38223, %r38224, 25;
	shf.l.wrap.b32 	%r38230, %r38224, %r38223, 25;
	mov.b64 	%rd21727, {%r38230, %r38229};
	xor.b64  	%rd21728, %rd21726, %rd21727;
	and.b64  	%rd21729, %rd21709, %rd21684;
	xor.b64  	%rd21730, %rd21709, %rd21684;
	and.b64  	%rd21731, %rd21730, %rd21659;
	or.b64  	%rd21732, %rd21731, %rd21729;
	add.s64 	%rd21733, %rd21722, %rd21732;
	add.s64 	%rd21734, %rd21733, %rd21728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38231,%dummy}, %rd21723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38232}, %rd21723;
	}
	shf.r.wrap.b32 	%r38233, %r38232, %r38231, 14;
	shf.r.wrap.b32 	%r38234, %r38231, %r38232, 14;
	mov.b64 	%rd21735, {%r38234, %r38233};
	shf.r.wrap.b32 	%r38235, %r38232, %r38231, 18;
	shf.r.wrap.b32 	%r38236, %r38231, %r38232, 18;
	mov.b64 	%rd21736, {%r38236, %r38235};
	xor.b64  	%rd21737, %rd21736, %rd21735;
	shf.l.wrap.b32 	%r38237, %r38231, %r38232, 23;
	shf.l.wrap.b32 	%r38238, %r38232, %r38231, 23;
	mov.b64 	%rd21738, {%r38238, %r38237};
	xor.b64  	%rd21739, %rd21737, %rd21738;
	xor.b64  	%rd21740, %rd21698, %rd21673;
	and.b64  	%rd21741, %rd21723, %rd21740;
	xor.b64  	%rd21742, %rd21741, %rd21673;
	add.s64 	%rd21743, %rd21648, %rd21467;
	ld.const.u64 	%rd21744, [k_sha512+304];
	add.s64 	%rd21745, %rd21743, %rd21744;
	add.s64 	%rd21746, %rd21745, %rd21742;
	add.s64 	%rd21747, %rd21746, %rd21739;
	add.s64 	%rd21748, %rd21747, %rd21659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38239,%dummy}, %rd21734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38240}, %rd21734;
	}
	shf.r.wrap.b32 	%r38241, %r38240, %r38239, 28;
	shf.r.wrap.b32 	%r38242, %r38239, %r38240, 28;
	mov.b64 	%rd21749, {%r38242, %r38241};
	shf.l.wrap.b32 	%r38243, %r38239, %r38240, 30;
	shf.l.wrap.b32 	%r38244, %r38240, %r38239, 30;
	mov.b64 	%rd21750, {%r38244, %r38243};
	xor.b64  	%rd21751, %rd21750, %rd21749;
	shf.l.wrap.b32 	%r38245, %r38239, %r38240, 25;
	shf.l.wrap.b32 	%r38246, %r38240, %r38239, 25;
	mov.b64 	%rd21752, {%r38246, %r38245};
	xor.b64  	%rd21753, %rd21751, %rd21752;
	and.b64  	%rd21754, %rd21734, %rd21709;
	xor.b64  	%rd21755, %rd21734, %rd21709;
	and.b64  	%rd21756, %rd21755, %rd21684;
	or.b64  	%rd21757, %rd21756, %rd21754;
	add.s64 	%rd21758, %rd21747, %rd21757;
	add.s64 	%rd21759, %rd21758, %rd21753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38247,%dummy}, %rd21748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38248}, %rd21748;
	}
	shf.r.wrap.b32 	%r38249, %r38248, %r38247, 14;
	shf.r.wrap.b32 	%r38250, %r38247, %r38248, 14;
	mov.b64 	%rd21760, {%r38250, %r38249};
	shf.r.wrap.b32 	%r38251, %r38248, %r38247, 18;
	shf.r.wrap.b32 	%r38252, %r38247, %r38248, 18;
	mov.b64 	%rd21761, {%r38252, %r38251};
	xor.b64  	%rd21762, %rd21761, %rd21760;
	shf.l.wrap.b32 	%r38253, %r38247, %r38248, 23;
	shf.l.wrap.b32 	%r38254, %r38248, %r38247, 23;
	mov.b64 	%rd21763, {%r38254, %r38253};
	xor.b64  	%rd21764, %rd21762, %rd21763;
	xor.b64  	%rd21765, %rd21723, %rd21698;
	and.b64  	%rd21766, %rd21748, %rd21765;
	xor.b64  	%rd21767, %rd21766, %rd21698;
	add.s64 	%rd21768, %rd21673, %rd21480;
	ld.const.u64 	%rd21769, [k_sha512+312];
	add.s64 	%rd21770, %rd21768, %rd21769;
	add.s64 	%rd21771, %rd21770, %rd21767;
	add.s64 	%rd21772, %rd21771, %rd21764;
	add.s64 	%rd21773, %rd21772, %rd21684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38255,%dummy}, %rd21759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38256}, %rd21759;
	}
	shf.r.wrap.b32 	%r38257, %r38256, %r38255, 28;
	shf.r.wrap.b32 	%r38258, %r38255, %r38256, 28;
	mov.b64 	%rd21774, {%r38258, %r38257};
	shf.l.wrap.b32 	%r38259, %r38255, %r38256, 30;
	shf.l.wrap.b32 	%r38260, %r38256, %r38255, 30;
	mov.b64 	%rd21775, {%r38260, %r38259};
	xor.b64  	%rd21776, %rd21775, %rd21774;
	shf.l.wrap.b32 	%r38261, %r38255, %r38256, 25;
	shf.l.wrap.b32 	%r38262, %r38256, %r38255, 25;
	mov.b64 	%rd21777, {%r38262, %r38261};
	xor.b64  	%rd21778, %rd21776, %rd21777;
	and.b64  	%rd21779, %rd21759, %rd21734;
	xor.b64  	%rd21780, %rd21759, %rd21734;
	and.b64  	%rd21781, %rd21780, %rd21709;
	or.b64  	%rd21782, %rd21781, %rd21779;
	add.s64 	%rd21783, %rd21772, %rd21782;
	add.s64 	%rd21784, %rd21783, %rd21778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38263,%dummy}, %rd21773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38264}, %rd21773;
	}
	shf.r.wrap.b32 	%r38265, %r38264, %r38263, 14;
	shf.r.wrap.b32 	%r38266, %r38263, %r38264, 14;
	mov.b64 	%rd21785, {%r38266, %r38265};
	shf.r.wrap.b32 	%r38267, %r38264, %r38263, 18;
	shf.r.wrap.b32 	%r38268, %r38263, %r38264, 18;
	mov.b64 	%rd21786, {%r38268, %r38267};
	xor.b64  	%rd21787, %rd21786, %rd21785;
	shf.l.wrap.b32 	%r38269, %r38263, %r38264, 23;
	shf.l.wrap.b32 	%r38270, %r38264, %r38263, 23;
	mov.b64 	%rd21788, {%r38270, %r38269};
	xor.b64  	%rd21789, %rd21787, %rd21788;
	xor.b64  	%rd21790, %rd21748, %rd21723;
	and.b64  	%rd21791, %rd21773, %rd21790;
	xor.b64  	%rd21792, %rd21791, %rd21723;
	add.s64 	%rd21793, %rd21698, %rd21493;
	ld.const.u64 	%rd21794, [k_sha512+320];
	add.s64 	%rd21795, %rd21793, %rd21794;
	add.s64 	%rd21796, %rd21795, %rd21792;
	add.s64 	%rd21797, %rd21796, %rd21789;
	add.s64 	%rd21798, %rd21797, %rd21709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38271,%dummy}, %rd21784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38272}, %rd21784;
	}
	shf.r.wrap.b32 	%r38273, %r38272, %r38271, 28;
	shf.r.wrap.b32 	%r38274, %r38271, %r38272, 28;
	mov.b64 	%rd21799, {%r38274, %r38273};
	shf.l.wrap.b32 	%r38275, %r38271, %r38272, 30;
	shf.l.wrap.b32 	%r38276, %r38272, %r38271, 30;
	mov.b64 	%rd21800, {%r38276, %r38275};
	xor.b64  	%rd21801, %rd21800, %rd21799;
	shf.l.wrap.b32 	%r38277, %r38271, %r38272, 25;
	shf.l.wrap.b32 	%r38278, %r38272, %r38271, 25;
	mov.b64 	%rd21802, {%r38278, %r38277};
	xor.b64  	%rd21803, %rd21801, %rd21802;
	and.b64  	%rd21804, %rd21784, %rd21759;
	xor.b64  	%rd21805, %rd21784, %rd21759;
	and.b64  	%rd21806, %rd21805, %rd21734;
	or.b64  	%rd21807, %rd21806, %rd21804;
	add.s64 	%rd21808, %rd21797, %rd21807;
	add.s64 	%rd21809, %rd21808, %rd21803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38279,%dummy}, %rd21798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38280}, %rd21798;
	}
	shf.r.wrap.b32 	%r38281, %r38280, %r38279, 14;
	shf.r.wrap.b32 	%r38282, %r38279, %r38280, 14;
	mov.b64 	%rd21810, {%r38282, %r38281};
	shf.r.wrap.b32 	%r38283, %r38280, %r38279, 18;
	shf.r.wrap.b32 	%r38284, %r38279, %r38280, 18;
	mov.b64 	%rd21811, {%r38284, %r38283};
	xor.b64  	%rd21812, %rd21811, %rd21810;
	shf.l.wrap.b32 	%r38285, %r38279, %r38280, 23;
	shf.l.wrap.b32 	%r38286, %r38280, %r38279, 23;
	mov.b64 	%rd21813, {%r38286, %r38285};
	xor.b64  	%rd21814, %rd21812, %rd21813;
	xor.b64  	%rd21815, %rd21773, %rd21748;
	and.b64  	%rd21816, %rd21798, %rd21815;
	xor.b64  	%rd21817, %rd21816, %rd21748;
	add.s64 	%rd21818, %rd21723, %rd21506;
	ld.const.u64 	%rd21819, [k_sha512+328];
	add.s64 	%rd21820, %rd21818, %rd21819;
	add.s64 	%rd21821, %rd21820, %rd21817;
	add.s64 	%rd21822, %rd21821, %rd21814;
	add.s64 	%rd21823, %rd21822, %rd21734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38287,%dummy}, %rd21809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38288}, %rd21809;
	}
	shf.r.wrap.b32 	%r38289, %r38288, %r38287, 28;
	shf.r.wrap.b32 	%r38290, %r38287, %r38288, 28;
	mov.b64 	%rd21824, {%r38290, %r38289};
	shf.l.wrap.b32 	%r38291, %r38287, %r38288, 30;
	shf.l.wrap.b32 	%r38292, %r38288, %r38287, 30;
	mov.b64 	%rd21825, {%r38292, %r38291};
	xor.b64  	%rd21826, %rd21825, %rd21824;
	shf.l.wrap.b32 	%r38293, %r38287, %r38288, 25;
	shf.l.wrap.b32 	%r38294, %r38288, %r38287, 25;
	mov.b64 	%rd21827, {%r38294, %r38293};
	xor.b64  	%rd21828, %rd21826, %rd21827;
	and.b64  	%rd21829, %rd21809, %rd21784;
	xor.b64  	%rd21830, %rd21809, %rd21784;
	and.b64  	%rd21831, %rd21830, %rd21759;
	or.b64  	%rd21832, %rd21831, %rd21829;
	add.s64 	%rd21833, %rd21822, %rd21832;
	add.s64 	%rd21834, %rd21833, %rd21828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38295,%dummy}, %rd21823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38296}, %rd21823;
	}
	shf.r.wrap.b32 	%r38297, %r38296, %r38295, 14;
	shf.r.wrap.b32 	%r38298, %r38295, %r38296, 14;
	mov.b64 	%rd21835, {%r38298, %r38297};
	shf.r.wrap.b32 	%r38299, %r38296, %r38295, 18;
	shf.r.wrap.b32 	%r38300, %r38295, %r38296, 18;
	mov.b64 	%rd21836, {%r38300, %r38299};
	xor.b64  	%rd21837, %rd21836, %rd21835;
	shf.l.wrap.b32 	%r38301, %r38295, %r38296, 23;
	shf.l.wrap.b32 	%r38302, %r38296, %r38295, 23;
	mov.b64 	%rd21838, {%r38302, %r38301};
	xor.b64  	%rd21839, %rd21837, %rd21838;
	xor.b64  	%rd21840, %rd21798, %rd21773;
	and.b64  	%rd21841, %rd21823, %rd21840;
	xor.b64  	%rd21842, %rd21841, %rd21773;
	add.s64 	%rd21843, %rd21748, %rd21519;
	ld.const.u64 	%rd21844, [k_sha512+336];
	add.s64 	%rd21845, %rd21843, %rd21844;
	add.s64 	%rd21846, %rd21845, %rd21842;
	add.s64 	%rd21847, %rd21846, %rd21839;
	add.s64 	%rd21848, %rd21847, %rd21759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38303,%dummy}, %rd21834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38304}, %rd21834;
	}
	shf.r.wrap.b32 	%r38305, %r38304, %r38303, 28;
	shf.r.wrap.b32 	%r38306, %r38303, %r38304, 28;
	mov.b64 	%rd21849, {%r38306, %r38305};
	shf.l.wrap.b32 	%r38307, %r38303, %r38304, 30;
	shf.l.wrap.b32 	%r38308, %r38304, %r38303, 30;
	mov.b64 	%rd21850, {%r38308, %r38307};
	xor.b64  	%rd21851, %rd21850, %rd21849;
	shf.l.wrap.b32 	%r38309, %r38303, %r38304, 25;
	shf.l.wrap.b32 	%r38310, %r38304, %r38303, 25;
	mov.b64 	%rd21852, {%r38310, %r38309};
	xor.b64  	%rd21853, %rd21851, %rd21852;
	and.b64  	%rd21854, %rd21834, %rd21809;
	xor.b64  	%rd21855, %rd21834, %rd21809;
	and.b64  	%rd21856, %rd21855, %rd21784;
	or.b64  	%rd21857, %rd21856, %rd21854;
	add.s64 	%rd21858, %rd21847, %rd21857;
	add.s64 	%rd21859, %rd21858, %rd21853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38311,%dummy}, %rd21848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38312}, %rd21848;
	}
	shf.r.wrap.b32 	%r38313, %r38312, %r38311, 14;
	shf.r.wrap.b32 	%r38314, %r38311, %r38312, 14;
	mov.b64 	%rd21860, {%r38314, %r38313};
	shf.r.wrap.b32 	%r38315, %r38312, %r38311, 18;
	shf.r.wrap.b32 	%r38316, %r38311, %r38312, 18;
	mov.b64 	%rd21861, {%r38316, %r38315};
	xor.b64  	%rd21862, %rd21861, %rd21860;
	shf.l.wrap.b32 	%r38317, %r38311, %r38312, 23;
	shf.l.wrap.b32 	%r38318, %r38312, %r38311, 23;
	mov.b64 	%rd21863, {%r38318, %r38317};
	xor.b64  	%rd21864, %rd21862, %rd21863;
	xor.b64  	%rd21865, %rd21823, %rd21798;
	and.b64  	%rd21866, %rd21848, %rd21865;
	xor.b64  	%rd21867, %rd21866, %rd21798;
	add.s64 	%rd21868, %rd21773, %rd21532;
	ld.const.u64 	%rd21869, [k_sha512+344];
	add.s64 	%rd21870, %rd21868, %rd21869;
	add.s64 	%rd21871, %rd21870, %rd21867;
	add.s64 	%rd21872, %rd21871, %rd21864;
	add.s64 	%rd21873, %rd21872, %rd21784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38319,%dummy}, %rd21859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38320}, %rd21859;
	}
	shf.r.wrap.b32 	%r38321, %r38320, %r38319, 28;
	shf.r.wrap.b32 	%r38322, %r38319, %r38320, 28;
	mov.b64 	%rd21874, {%r38322, %r38321};
	shf.l.wrap.b32 	%r38323, %r38319, %r38320, 30;
	shf.l.wrap.b32 	%r38324, %r38320, %r38319, 30;
	mov.b64 	%rd21875, {%r38324, %r38323};
	xor.b64  	%rd21876, %rd21875, %rd21874;
	shf.l.wrap.b32 	%r38325, %r38319, %r38320, 25;
	shf.l.wrap.b32 	%r38326, %r38320, %r38319, 25;
	mov.b64 	%rd21877, {%r38326, %r38325};
	xor.b64  	%rd21878, %rd21876, %rd21877;
	and.b64  	%rd21879, %rd21859, %rd21834;
	xor.b64  	%rd21880, %rd21859, %rd21834;
	and.b64  	%rd21881, %rd21880, %rd21809;
	or.b64  	%rd21882, %rd21881, %rd21879;
	add.s64 	%rd21883, %rd21872, %rd21882;
	add.s64 	%rd21884, %rd21883, %rd21878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38327,%dummy}, %rd21873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38328}, %rd21873;
	}
	shf.r.wrap.b32 	%r38329, %r38328, %r38327, 14;
	shf.r.wrap.b32 	%r38330, %r38327, %r38328, 14;
	mov.b64 	%rd21885, {%r38330, %r38329};
	shf.r.wrap.b32 	%r38331, %r38328, %r38327, 18;
	shf.r.wrap.b32 	%r38332, %r38327, %r38328, 18;
	mov.b64 	%rd21886, {%r38332, %r38331};
	xor.b64  	%rd21887, %rd21886, %rd21885;
	shf.l.wrap.b32 	%r38333, %r38327, %r38328, 23;
	shf.l.wrap.b32 	%r38334, %r38328, %r38327, 23;
	mov.b64 	%rd21888, {%r38334, %r38333};
	xor.b64  	%rd21889, %rd21887, %rd21888;
	xor.b64  	%rd21890, %rd21848, %rd21823;
	and.b64  	%rd21891, %rd21873, %rd21890;
	xor.b64  	%rd21892, %rd21891, %rd21823;
	add.s64 	%rd21893, %rd21798, %rd21545;
	ld.const.u64 	%rd21894, [k_sha512+352];
	add.s64 	%rd21895, %rd21893, %rd21894;
	add.s64 	%rd21896, %rd21895, %rd21892;
	add.s64 	%rd21897, %rd21896, %rd21889;
	add.s64 	%rd21898, %rd21897, %rd21809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38335,%dummy}, %rd21884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38336}, %rd21884;
	}
	shf.r.wrap.b32 	%r38337, %r38336, %r38335, 28;
	shf.r.wrap.b32 	%r38338, %r38335, %r38336, 28;
	mov.b64 	%rd21899, {%r38338, %r38337};
	shf.l.wrap.b32 	%r38339, %r38335, %r38336, 30;
	shf.l.wrap.b32 	%r38340, %r38336, %r38335, 30;
	mov.b64 	%rd21900, {%r38340, %r38339};
	xor.b64  	%rd21901, %rd21900, %rd21899;
	shf.l.wrap.b32 	%r38341, %r38335, %r38336, 25;
	shf.l.wrap.b32 	%r38342, %r38336, %r38335, 25;
	mov.b64 	%rd21902, {%r38342, %r38341};
	xor.b64  	%rd21903, %rd21901, %rd21902;
	and.b64  	%rd21904, %rd21884, %rd21859;
	xor.b64  	%rd21905, %rd21884, %rd21859;
	and.b64  	%rd21906, %rd21905, %rd21834;
	or.b64  	%rd21907, %rd21906, %rd21904;
	add.s64 	%rd21908, %rd21897, %rd21907;
	add.s64 	%rd21909, %rd21908, %rd21903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38343,%dummy}, %rd21898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38344}, %rd21898;
	}
	shf.r.wrap.b32 	%r38345, %r38344, %r38343, 14;
	shf.r.wrap.b32 	%r38346, %r38343, %r38344, 14;
	mov.b64 	%rd21910, {%r38346, %r38345};
	shf.r.wrap.b32 	%r38347, %r38344, %r38343, 18;
	shf.r.wrap.b32 	%r38348, %r38343, %r38344, 18;
	mov.b64 	%rd21911, {%r38348, %r38347};
	xor.b64  	%rd21912, %rd21911, %rd21910;
	shf.l.wrap.b32 	%r38349, %r38343, %r38344, 23;
	shf.l.wrap.b32 	%r38350, %r38344, %r38343, 23;
	mov.b64 	%rd21913, {%r38350, %r38349};
	xor.b64  	%rd21914, %rd21912, %rd21913;
	xor.b64  	%rd21915, %rd21873, %rd21848;
	and.b64  	%rd21916, %rd21898, %rd21915;
	xor.b64  	%rd21917, %rd21916, %rd21848;
	add.s64 	%rd21918, %rd21823, %rd21558;
	ld.const.u64 	%rd21919, [k_sha512+360];
	add.s64 	%rd21920, %rd21918, %rd21919;
	add.s64 	%rd21921, %rd21920, %rd21917;
	add.s64 	%rd21922, %rd21921, %rd21914;
	add.s64 	%rd21923, %rd21922, %rd21834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38351,%dummy}, %rd21909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38352}, %rd21909;
	}
	shf.r.wrap.b32 	%r38353, %r38352, %r38351, 28;
	shf.r.wrap.b32 	%r38354, %r38351, %r38352, 28;
	mov.b64 	%rd21924, {%r38354, %r38353};
	shf.l.wrap.b32 	%r38355, %r38351, %r38352, 30;
	shf.l.wrap.b32 	%r38356, %r38352, %r38351, 30;
	mov.b64 	%rd21925, {%r38356, %r38355};
	xor.b64  	%rd21926, %rd21925, %rd21924;
	shf.l.wrap.b32 	%r38357, %r38351, %r38352, 25;
	shf.l.wrap.b32 	%r38358, %r38352, %r38351, 25;
	mov.b64 	%rd21927, {%r38358, %r38357};
	xor.b64  	%rd21928, %rd21926, %rd21927;
	and.b64  	%rd21929, %rd21909, %rd21884;
	xor.b64  	%rd21930, %rd21909, %rd21884;
	and.b64  	%rd21931, %rd21930, %rd21859;
	or.b64  	%rd21932, %rd21931, %rd21929;
	add.s64 	%rd21933, %rd21922, %rd21932;
	add.s64 	%rd21934, %rd21933, %rd21928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38359,%dummy}, %rd21923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38360}, %rd21923;
	}
	shf.r.wrap.b32 	%r38361, %r38360, %r38359, 14;
	shf.r.wrap.b32 	%r38362, %r38359, %r38360, 14;
	mov.b64 	%rd21935, {%r38362, %r38361};
	shf.r.wrap.b32 	%r38363, %r38360, %r38359, 18;
	shf.r.wrap.b32 	%r38364, %r38359, %r38360, 18;
	mov.b64 	%rd21936, {%r38364, %r38363};
	xor.b64  	%rd21937, %rd21936, %rd21935;
	shf.l.wrap.b32 	%r38365, %r38359, %r38360, 23;
	shf.l.wrap.b32 	%r38366, %r38360, %r38359, 23;
	mov.b64 	%rd21938, {%r38366, %r38365};
	xor.b64  	%rd21939, %rd21937, %rd21938;
	xor.b64  	%rd21940, %rd21898, %rd21873;
	and.b64  	%rd21941, %rd21923, %rd21940;
	xor.b64  	%rd21942, %rd21941, %rd21873;
	add.s64 	%rd21943, %rd21848, %rd21571;
	ld.const.u64 	%rd21944, [k_sha512+368];
	add.s64 	%rd21945, %rd21943, %rd21944;
	add.s64 	%rd21946, %rd21945, %rd21942;
	add.s64 	%rd21947, %rd21946, %rd21939;
	add.s64 	%rd21948, %rd21947, %rd21859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38367,%dummy}, %rd21934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38368}, %rd21934;
	}
	shf.r.wrap.b32 	%r38369, %r38368, %r38367, 28;
	shf.r.wrap.b32 	%r38370, %r38367, %r38368, 28;
	mov.b64 	%rd21949, {%r38370, %r38369};
	shf.l.wrap.b32 	%r38371, %r38367, %r38368, 30;
	shf.l.wrap.b32 	%r38372, %r38368, %r38367, 30;
	mov.b64 	%rd21950, {%r38372, %r38371};
	xor.b64  	%rd21951, %rd21950, %rd21949;
	shf.l.wrap.b32 	%r38373, %r38367, %r38368, 25;
	shf.l.wrap.b32 	%r38374, %r38368, %r38367, 25;
	mov.b64 	%rd21952, {%r38374, %r38373};
	xor.b64  	%rd21953, %rd21951, %rd21952;
	and.b64  	%rd21954, %rd21934, %rd21909;
	xor.b64  	%rd21955, %rd21934, %rd21909;
	and.b64  	%rd21956, %rd21955, %rd21884;
	or.b64  	%rd21957, %rd21956, %rd21954;
	add.s64 	%rd21958, %rd21947, %rd21957;
	add.s64 	%rd21959, %rd21958, %rd21953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38375,%dummy}, %rd21948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38376}, %rd21948;
	}
	shf.r.wrap.b32 	%r38377, %r38376, %r38375, 14;
	shf.r.wrap.b32 	%r38378, %r38375, %r38376, 14;
	mov.b64 	%rd21960, {%r38378, %r38377};
	shf.r.wrap.b32 	%r38379, %r38376, %r38375, 18;
	shf.r.wrap.b32 	%r38380, %r38375, %r38376, 18;
	mov.b64 	%rd21961, {%r38380, %r38379};
	xor.b64  	%rd21962, %rd21961, %rd21960;
	shf.l.wrap.b32 	%r38381, %r38375, %r38376, 23;
	shf.l.wrap.b32 	%r38382, %r38376, %r38375, 23;
	mov.b64 	%rd21963, {%r38382, %r38381};
	xor.b64  	%rd21964, %rd21962, %rd21963;
	xor.b64  	%rd21965, %rd21923, %rd21898;
	and.b64  	%rd21966, %rd21948, %rd21965;
	xor.b64  	%rd21967, %rd21966, %rd21898;
	add.s64 	%rd21968, %rd21873, %rd21584;
	ld.const.u64 	%rd21969, [k_sha512+376];
	add.s64 	%rd21970, %rd21968, %rd21969;
	add.s64 	%rd21971, %rd21970, %rd21967;
	add.s64 	%rd21972, %rd21971, %rd21964;
	add.s64 	%rd21973, %rd21972, %rd21884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38383,%dummy}, %rd21959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38384}, %rd21959;
	}
	shf.r.wrap.b32 	%r38385, %r38384, %r38383, 28;
	shf.r.wrap.b32 	%r38386, %r38383, %r38384, 28;
	mov.b64 	%rd21974, {%r38386, %r38385};
	shf.l.wrap.b32 	%r38387, %r38383, %r38384, 30;
	shf.l.wrap.b32 	%r38388, %r38384, %r38383, 30;
	mov.b64 	%rd21975, {%r38388, %r38387};
	xor.b64  	%rd21976, %rd21975, %rd21974;
	shf.l.wrap.b32 	%r38389, %r38383, %r38384, 25;
	shf.l.wrap.b32 	%r38390, %r38384, %r38383, 25;
	mov.b64 	%rd21977, {%r38390, %r38389};
	xor.b64  	%rd21978, %rd21976, %rd21977;
	and.b64  	%rd21979, %rd21959, %rd21934;
	xor.b64  	%rd21980, %rd21959, %rd21934;
	and.b64  	%rd21981, %rd21980, %rd21909;
	or.b64  	%rd21982, %rd21981, %rd21979;
	add.s64 	%rd21983, %rd21972, %rd21982;
	add.s64 	%rd21984, %rd21983, %rd21978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38391,%dummy}, %rd21571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38392}, %rd21571;
	}
	shf.r.wrap.b32 	%r38393, %r38392, %r38391, 19;
	shf.r.wrap.b32 	%r38394, %r38391, %r38392, 19;
	mov.b64 	%rd21985, {%r38394, %r38393};
	shf.l.wrap.b32 	%r38395, %r38391, %r38392, 3;
	shf.l.wrap.b32 	%r38396, %r38392, %r38391, 3;
	mov.b64 	%rd21986, {%r38396, %r38395};
	shr.u64 	%rd21987, %rd21571, 6;
	xor.b64  	%rd21988, %rd21985, %rd21987;
	xor.b64  	%rd21989, %rd21988, %rd21986;
	shf.r.wrap.b32 	%r38397, %r38006, %r38005, 1;
	shf.r.wrap.b32 	%r38398, %r38005, %r38006, 1;
	mov.b64 	%rd21990, {%r38398, %r38397};
	shf.r.wrap.b32 	%r38399, %r38006, %r38005, 8;
	shf.r.wrap.b32 	%r38400, %r38005, %r38006, 8;
	mov.b64 	%rd21991, {%r38400, %r38399};
	shr.u64 	%rd21992, %rd21402, 7;
	xor.b64  	%rd21993, %rd21990, %rd21992;
	xor.b64  	%rd21994, %rd21993, %rd21991;
	add.s64 	%rd21995, %rd21506, %rd21389;
	add.s64 	%rd21996, %rd21995, %rd21989;
	add.s64 	%rd21997, %rd21996, %rd21994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38401,%dummy}, %rd21584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38402}, %rd21584;
	}
	shf.r.wrap.b32 	%r38403, %r38402, %r38401, 19;
	shf.r.wrap.b32 	%r38404, %r38401, %r38402, 19;
	mov.b64 	%rd21998, {%r38404, %r38403};
	shf.l.wrap.b32 	%r38405, %r38401, %r38402, 3;
	shf.l.wrap.b32 	%r38406, %r38402, %r38401, 3;
	mov.b64 	%rd21999, {%r38406, %r38405};
	shr.u64 	%rd22000, %rd21584, 6;
	xor.b64  	%rd22001, %rd21998, %rd22000;
	xor.b64  	%rd22002, %rd22001, %rd21999;
	shf.r.wrap.b32 	%r38407, %r38016, %r38015, 1;
	shf.r.wrap.b32 	%r38408, %r38015, %r38016, 1;
	mov.b64 	%rd22003, {%r38408, %r38407};
	shf.r.wrap.b32 	%r38409, %r38016, %r38015, 8;
	shf.r.wrap.b32 	%r38410, %r38015, %r38016, 8;
	mov.b64 	%rd22004, {%r38410, %r38409};
	shr.u64 	%rd22005, %rd21415, 7;
	xor.b64  	%rd22006, %rd22003, %rd22005;
	xor.b64  	%rd22007, %rd22006, %rd22004;
	add.s64 	%rd22008, %rd21519, %rd21402;
	add.s64 	%rd22009, %rd22008, %rd22002;
	add.s64 	%rd22010, %rd22009, %rd22007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38411,%dummy}, %rd21997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38412}, %rd21997;
	}
	shf.r.wrap.b32 	%r38413, %r38412, %r38411, 19;
	shf.r.wrap.b32 	%r38414, %r38411, %r38412, 19;
	mov.b64 	%rd22011, {%r38414, %r38413};
	shf.l.wrap.b32 	%r38415, %r38411, %r38412, 3;
	shf.l.wrap.b32 	%r38416, %r38412, %r38411, 3;
	mov.b64 	%rd22012, {%r38416, %r38415};
	shr.u64 	%rd22013, %rd21997, 6;
	xor.b64  	%rd22014, %rd22011, %rd22013;
	xor.b64  	%rd22015, %rd22014, %rd22012;
	shf.r.wrap.b32 	%r38417, %r38026, %r38025, 1;
	shf.r.wrap.b32 	%r38418, %r38025, %r38026, 1;
	mov.b64 	%rd22016, {%r38418, %r38417};
	shf.r.wrap.b32 	%r38419, %r38026, %r38025, 8;
	shf.r.wrap.b32 	%r38420, %r38025, %r38026, 8;
	mov.b64 	%rd22017, {%r38420, %r38419};
	shr.u64 	%rd22018, %rd21428, 7;
	xor.b64  	%rd22019, %rd22016, %rd22018;
	xor.b64  	%rd22020, %rd22019, %rd22017;
	add.s64 	%rd22021, %rd21532, %rd21415;
	add.s64 	%rd22022, %rd22021, %rd22015;
	add.s64 	%rd22023, %rd22022, %rd22020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38421,%dummy}, %rd22010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38422}, %rd22010;
	}
	shf.r.wrap.b32 	%r38423, %r38422, %r38421, 19;
	shf.r.wrap.b32 	%r38424, %r38421, %r38422, 19;
	mov.b64 	%rd22024, {%r38424, %r38423};
	shf.l.wrap.b32 	%r38425, %r38421, %r38422, 3;
	shf.l.wrap.b32 	%r38426, %r38422, %r38421, 3;
	mov.b64 	%rd22025, {%r38426, %r38425};
	shr.u64 	%rd22026, %rd22010, 6;
	xor.b64  	%rd22027, %rd22024, %rd22026;
	xor.b64  	%rd22028, %rd22027, %rd22025;
	shf.r.wrap.b32 	%r38427, %r38036, %r38035, 1;
	shf.r.wrap.b32 	%r38428, %r38035, %r38036, 1;
	mov.b64 	%rd22029, {%r38428, %r38427};
	shf.r.wrap.b32 	%r38429, %r38036, %r38035, 8;
	shf.r.wrap.b32 	%r38430, %r38035, %r38036, 8;
	mov.b64 	%rd22030, {%r38430, %r38429};
	shr.u64 	%rd22031, %rd21441, 7;
	xor.b64  	%rd22032, %rd22029, %rd22031;
	xor.b64  	%rd22033, %rd22032, %rd22030;
	add.s64 	%rd22034, %rd21545, %rd21428;
	add.s64 	%rd22035, %rd22034, %rd22028;
	add.s64 	%rd22036, %rd22035, %rd22033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38431,%dummy}, %rd22023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38432}, %rd22023;
	}
	shf.r.wrap.b32 	%r38433, %r38432, %r38431, 19;
	shf.r.wrap.b32 	%r38434, %r38431, %r38432, 19;
	mov.b64 	%rd22037, {%r38434, %r38433};
	shf.l.wrap.b32 	%r38435, %r38431, %r38432, 3;
	shf.l.wrap.b32 	%r38436, %r38432, %r38431, 3;
	mov.b64 	%rd22038, {%r38436, %r38435};
	shr.u64 	%rd22039, %rd22023, 6;
	xor.b64  	%rd22040, %rd22037, %rd22039;
	xor.b64  	%rd22041, %rd22040, %rd22038;
	shf.r.wrap.b32 	%r38437, %r38046, %r38045, 1;
	shf.r.wrap.b32 	%r38438, %r38045, %r38046, 1;
	mov.b64 	%rd22042, {%r38438, %r38437};
	shf.r.wrap.b32 	%r38439, %r38046, %r38045, 8;
	shf.r.wrap.b32 	%r38440, %r38045, %r38046, 8;
	mov.b64 	%rd22043, {%r38440, %r38439};
	shr.u64 	%rd22044, %rd21454, 7;
	xor.b64  	%rd22045, %rd22042, %rd22044;
	xor.b64  	%rd22046, %rd22045, %rd22043;
	add.s64 	%rd22047, %rd21558, %rd21441;
	add.s64 	%rd22048, %rd22047, %rd22041;
	add.s64 	%rd22049, %rd22048, %rd22046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38441,%dummy}, %rd22036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38442}, %rd22036;
	}
	shf.r.wrap.b32 	%r38443, %r38442, %r38441, 19;
	shf.r.wrap.b32 	%r38444, %r38441, %r38442, 19;
	mov.b64 	%rd22050, {%r38444, %r38443};
	shf.l.wrap.b32 	%r38445, %r38441, %r38442, 3;
	shf.l.wrap.b32 	%r38446, %r38442, %r38441, 3;
	mov.b64 	%rd22051, {%r38446, %r38445};
	shr.u64 	%rd22052, %rd22036, 6;
	xor.b64  	%rd22053, %rd22050, %rd22052;
	xor.b64  	%rd22054, %rd22053, %rd22051;
	shf.r.wrap.b32 	%r38447, %r38056, %r38055, 1;
	shf.r.wrap.b32 	%r38448, %r38055, %r38056, 1;
	mov.b64 	%rd22055, {%r38448, %r38447};
	shf.r.wrap.b32 	%r38449, %r38056, %r38055, 8;
	shf.r.wrap.b32 	%r38450, %r38055, %r38056, 8;
	mov.b64 	%rd22056, {%r38450, %r38449};
	shr.u64 	%rd22057, %rd21467, 7;
	xor.b64  	%rd22058, %rd22055, %rd22057;
	xor.b64  	%rd22059, %rd22058, %rd22056;
	add.s64 	%rd22060, %rd21571, %rd21454;
	add.s64 	%rd22061, %rd22060, %rd22054;
	add.s64 	%rd22062, %rd22061, %rd22059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38451,%dummy}, %rd22049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38452}, %rd22049;
	}
	shf.r.wrap.b32 	%r38453, %r38452, %r38451, 19;
	shf.r.wrap.b32 	%r38454, %r38451, %r38452, 19;
	mov.b64 	%rd22063, {%r38454, %r38453};
	shf.l.wrap.b32 	%r38455, %r38451, %r38452, 3;
	shf.l.wrap.b32 	%r38456, %r38452, %r38451, 3;
	mov.b64 	%rd22064, {%r38456, %r38455};
	shr.u64 	%rd22065, %rd22049, 6;
	xor.b64  	%rd22066, %rd22063, %rd22065;
	xor.b64  	%rd22067, %rd22066, %rd22064;
	shf.r.wrap.b32 	%r38457, %r38066, %r38065, 1;
	shf.r.wrap.b32 	%r38458, %r38065, %r38066, 1;
	mov.b64 	%rd22068, {%r38458, %r38457};
	shf.r.wrap.b32 	%r38459, %r38066, %r38065, 8;
	shf.r.wrap.b32 	%r38460, %r38065, %r38066, 8;
	mov.b64 	%rd22069, {%r38460, %r38459};
	shr.u64 	%rd22070, %rd21480, 7;
	xor.b64  	%rd22071, %rd22068, %rd22070;
	xor.b64  	%rd22072, %rd22071, %rd22069;
	add.s64 	%rd22073, %rd21584, %rd21467;
	add.s64 	%rd22074, %rd22073, %rd22067;
	add.s64 	%rd22075, %rd22074, %rd22072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38461,%dummy}, %rd22062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38462}, %rd22062;
	}
	shf.r.wrap.b32 	%r38463, %r38462, %r38461, 19;
	shf.r.wrap.b32 	%r38464, %r38461, %r38462, 19;
	mov.b64 	%rd22076, {%r38464, %r38463};
	shf.l.wrap.b32 	%r38465, %r38461, %r38462, 3;
	shf.l.wrap.b32 	%r38466, %r38462, %r38461, 3;
	mov.b64 	%rd22077, {%r38466, %r38465};
	shr.u64 	%rd22078, %rd22062, 6;
	xor.b64  	%rd22079, %rd22076, %rd22078;
	xor.b64  	%rd22080, %rd22079, %rd22077;
	shf.r.wrap.b32 	%r38467, %r38076, %r38075, 1;
	shf.r.wrap.b32 	%r38468, %r38075, %r38076, 1;
	mov.b64 	%rd22081, {%r38468, %r38467};
	shf.r.wrap.b32 	%r38469, %r38076, %r38075, 8;
	shf.r.wrap.b32 	%r38470, %r38075, %r38076, 8;
	mov.b64 	%rd22082, {%r38470, %r38469};
	shr.u64 	%rd22083, %rd21493, 7;
	xor.b64  	%rd22084, %rd22081, %rd22083;
	xor.b64  	%rd22085, %rd22084, %rd22082;
	add.s64 	%rd22086, %rd21997, %rd21480;
	add.s64 	%rd22087, %rd22086, %rd22080;
	add.s64 	%rd22088, %rd22087, %rd22085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38471,%dummy}, %rd22075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38472}, %rd22075;
	}
	shf.r.wrap.b32 	%r38473, %r38472, %r38471, 19;
	shf.r.wrap.b32 	%r38474, %r38471, %r38472, 19;
	mov.b64 	%rd22089, {%r38474, %r38473};
	shf.l.wrap.b32 	%r38475, %r38471, %r38472, 3;
	shf.l.wrap.b32 	%r38476, %r38472, %r38471, 3;
	mov.b64 	%rd22090, {%r38476, %r38475};
	shr.u64 	%rd22091, %rd22075, 6;
	xor.b64  	%rd22092, %rd22089, %rd22091;
	xor.b64  	%rd22093, %rd22092, %rd22090;
	shf.r.wrap.b32 	%r38477, %r38086, %r38085, 1;
	shf.r.wrap.b32 	%r38478, %r38085, %r38086, 1;
	mov.b64 	%rd22094, {%r38478, %r38477};
	shf.r.wrap.b32 	%r38479, %r38086, %r38085, 8;
	shf.r.wrap.b32 	%r38480, %r38085, %r38086, 8;
	mov.b64 	%rd22095, {%r38480, %r38479};
	shr.u64 	%rd22096, %rd21506, 7;
	xor.b64  	%rd22097, %rd22094, %rd22096;
	xor.b64  	%rd22098, %rd22097, %rd22095;
	add.s64 	%rd22099, %rd22010, %rd21493;
	add.s64 	%rd22100, %rd22099, %rd22093;
	add.s64 	%rd22101, %rd22100, %rd22098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38481,%dummy}, %rd22088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38482}, %rd22088;
	}
	shf.r.wrap.b32 	%r38483, %r38482, %r38481, 19;
	shf.r.wrap.b32 	%r38484, %r38481, %r38482, 19;
	mov.b64 	%rd22102, {%r38484, %r38483};
	shf.l.wrap.b32 	%r38485, %r38481, %r38482, 3;
	shf.l.wrap.b32 	%r38486, %r38482, %r38481, 3;
	mov.b64 	%rd22103, {%r38486, %r38485};
	shr.u64 	%rd22104, %rd22088, 6;
	xor.b64  	%rd22105, %rd22102, %rd22104;
	xor.b64  	%rd22106, %rd22105, %rd22103;
	shf.r.wrap.b32 	%r38487, %r38096, %r38095, 1;
	shf.r.wrap.b32 	%r38488, %r38095, %r38096, 1;
	mov.b64 	%rd22107, {%r38488, %r38487};
	shf.r.wrap.b32 	%r38489, %r38096, %r38095, 8;
	shf.r.wrap.b32 	%r38490, %r38095, %r38096, 8;
	mov.b64 	%rd22108, {%r38490, %r38489};
	shr.u64 	%rd22109, %rd21519, 7;
	xor.b64  	%rd22110, %rd22107, %rd22109;
	xor.b64  	%rd22111, %rd22110, %rd22108;
	add.s64 	%rd22112, %rd22023, %rd21506;
	add.s64 	%rd22113, %rd22112, %rd22106;
	add.s64 	%rd22114, %rd22113, %rd22111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38491,%dummy}, %rd22101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38492}, %rd22101;
	}
	shf.r.wrap.b32 	%r38493, %r38492, %r38491, 19;
	shf.r.wrap.b32 	%r38494, %r38491, %r38492, 19;
	mov.b64 	%rd22115, {%r38494, %r38493};
	shf.l.wrap.b32 	%r38495, %r38491, %r38492, 3;
	shf.l.wrap.b32 	%r38496, %r38492, %r38491, 3;
	mov.b64 	%rd22116, {%r38496, %r38495};
	shr.u64 	%rd22117, %rd22101, 6;
	xor.b64  	%rd22118, %rd22115, %rd22117;
	xor.b64  	%rd22119, %rd22118, %rd22116;
	shf.r.wrap.b32 	%r38497, %r38106, %r38105, 1;
	shf.r.wrap.b32 	%r38498, %r38105, %r38106, 1;
	mov.b64 	%rd22120, {%r38498, %r38497};
	shf.r.wrap.b32 	%r38499, %r38106, %r38105, 8;
	shf.r.wrap.b32 	%r38500, %r38105, %r38106, 8;
	mov.b64 	%rd22121, {%r38500, %r38499};
	shr.u64 	%rd22122, %rd21532, 7;
	xor.b64  	%rd22123, %rd22120, %rd22122;
	xor.b64  	%rd22124, %rd22123, %rd22121;
	add.s64 	%rd22125, %rd22036, %rd21519;
	add.s64 	%rd22126, %rd22125, %rd22119;
	add.s64 	%rd22127, %rd22126, %rd22124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38501,%dummy}, %rd22114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38502}, %rd22114;
	}
	shf.r.wrap.b32 	%r38503, %r38502, %r38501, 19;
	shf.r.wrap.b32 	%r38504, %r38501, %r38502, 19;
	mov.b64 	%rd22128, {%r38504, %r38503};
	shf.l.wrap.b32 	%r38505, %r38501, %r38502, 3;
	shf.l.wrap.b32 	%r38506, %r38502, %r38501, 3;
	mov.b64 	%rd22129, {%r38506, %r38505};
	shr.u64 	%rd22130, %rd22114, 6;
	xor.b64  	%rd22131, %rd22128, %rd22130;
	xor.b64  	%rd22132, %rd22131, %rd22129;
	shf.r.wrap.b32 	%r38507, %r38116, %r38115, 1;
	shf.r.wrap.b32 	%r38508, %r38115, %r38116, 1;
	mov.b64 	%rd22133, {%r38508, %r38507};
	shf.r.wrap.b32 	%r38509, %r38116, %r38115, 8;
	shf.r.wrap.b32 	%r38510, %r38115, %r38116, 8;
	mov.b64 	%rd22134, {%r38510, %r38509};
	shr.u64 	%rd22135, %rd21545, 7;
	xor.b64  	%rd22136, %rd22133, %rd22135;
	xor.b64  	%rd22137, %rd22136, %rd22134;
	add.s64 	%rd22138, %rd22049, %rd21532;
	add.s64 	%rd22139, %rd22138, %rd22132;
	add.s64 	%rd22140, %rd22139, %rd22137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38511,%dummy}, %rd22127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38512}, %rd22127;
	}
	shf.r.wrap.b32 	%r38513, %r38512, %r38511, 19;
	shf.r.wrap.b32 	%r38514, %r38511, %r38512, 19;
	mov.b64 	%rd22141, {%r38514, %r38513};
	shf.l.wrap.b32 	%r38515, %r38511, %r38512, 3;
	shf.l.wrap.b32 	%r38516, %r38512, %r38511, 3;
	mov.b64 	%rd22142, {%r38516, %r38515};
	shr.u64 	%rd22143, %rd22127, 6;
	xor.b64  	%rd22144, %rd22141, %rd22143;
	xor.b64  	%rd22145, %rd22144, %rd22142;
	shf.r.wrap.b32 	%r38517, %r38126, %r38125, 1;
	shf.r.wrap.b32 	%r38518, %r38125, %r38126, 1;
	mov.b64 	%rd22146, {%r38518, %r38517};
	shf.r.wrap.b32 	%r38519, %r38126, %r38125, 8;
	shf.r.wrap.b32 	%r38520, %r38125, %r38126, 8;
	mov.b64 	%rd22147, {%r38520, %r38519};
	shr.u64 	%rd22148, %rd21558, 7;
	xor.b64  	%rd22149, %rd22146, %rd22148;
	xor.b64  	%rd22150, %rd22149, %rd22147;
	add.s64 	%rd22151, %rd22062, %rd21545;
	add.s64 	%rd22152, %rd22151, %rd22145;
	add.s64 	%rd22153, %rd22152, %rd22150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38521,%dummy}, %rd22140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38522}, %rd22140;
	}
	shf.r.wrap.b32 	%r38523, %r38522, %r38521, 19;
	shf.r.wrap.b32 	%r38524, %r38521, %r38522, 19;
	mov.b64 	%rd22154, {%r38524, %r38523};
	shf.l.wrap.b32 	%r38525, %r38521, %r38522, 3;
	shf.l.wrap.b32 	%r38526, %r38522, %r38521, 3;
	mov.b64 	%rd22155, {%r38526, %r38525};
	shr.u64 	%rd22156, %rd22140, 6;
	xor.b64  	%rd22157, %rd22154, %rd22156;
	xor.b64  	%rd22158, %rd22157, %rd22155;
	shf.r.wrap.b32 	%r38527, %r38392, %r38391, 1;
	shf.r.wrap.b32 	%r38528, %r38391, %r38392, 1;
	mov.b64 	%rd22159, {%r38528, %r38527};
	shf.r.wrap.b32 	%r38529, %r38392, %r38391, 8;
	shf.r.wrap.b32 	%r38530, %r38391, %r38392, 8;
	mov.b64 	%rd22160, {%r38530, %r38529};
	shr.u64 	%rd22161, %rd21571, 7;
	xor.b64  	%rd22162, %rd22159, %rd22161;
	xor.b64  	%rd22163, %rd22162, %rd22160;
	add.s64 	%rd22164, %rd22075, %rd21558;
	add.s64 	%rd22165, %rd22164, %rd22158;
	add.s64 	%rd22166, %rd22165, %rd22163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38531,%dummy}, %rd22153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38532}, %rd22153;
	}
	shf.r.wrap.b32 	%r38533, %r38532, %r38531, 19;
	shf.r.wrap.b32 	%r38534, %r38531, %r38532, 19;
	mov.b64 	%rd22167, {%r38534, %r38533};
	shf.l.wrap.b32 	%r38535, %r38531, %r38532, 3;
	shf.l.wrap.b32 	%r38536, %r38532, %r38531, 3;
	mov.b64 	%rd22168, {%r38536, %r38535};
	shr.u64 	%rd22169, %rd22153, 6;
	xor.b64  	%rd22170, %rd22167, %rd22169;
	xor.b64  	%rd22171, %rd22170, %rd22168;
	shf.r.wrap.b32 	%r38537, %r38402, %r38401, 1;
	shf.r.wrap.b32 	%r38538, %r38401, %r38402, 1;
	mov.b64 	%rd22172, {%r38538, %r38537};
	shf.r.wrap.b32 	%r38539, %r38402, %r38401, 8;
	shf.r.wrap.b32 	%r38540, %r38401, %r38402, 8;
	mov.b64 	%rd22173, {%r38540, %r38539};
	shr.u64 	%rd22174, %rd21584, 7;
	xor.b64  	%rd22175, %rd22172, %rd22174;
	xor.b64  	%rd22176, %rd22175, %rd22173;
	add.s64 	%rd22177, %rd22088, %rd21571;
	add.s64 	%rd22178, %rd22177, %rd22171;
	add.s64 	%rd22179, %rd22178, %rd22176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38541,%dummy}, %rd22166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38542}, %rd22166;
	}
	shf.r.wrap.b32 	%r38543, %r38542, %r38541, 19;
	shf.r.wrap.b32 	%r38544, %r38541, %r38542, 19;
	mov.b64 	%rd22180, {%r38544, %r38543};
	shf.l.wrap.b32 	%r38545, %r38541, %r38542, 3;
	shf.l.wrap.b32 	%r38546, %r38542, %r38541, 3;
	mov.b64 	%rd22181, {%r38546, %r38545};
	shr.u64 	%rd22182, %rd22166, 6;
	xor.b64  	%rd22183, %rd22180, %rd22182;
	xor.b64  	%rd22184, %rd22183, %rd22181;
	shf.r.wrap.b32 	%r38547, %r38412, %r38411, 1;
	shf.r.wrap.b32 	%r38548, %r38411, %r38412, 1;
	mov.b64 	%rd22185, {%r38548, %r38547};
	shf.r.wrap.b32 	%r38549, %r38412, %r38411, 8;
	shf.r.wrap.b32 	%r38550, %r38411, %r38412, 8;
	mov.b64 	%rd22186, {%r38550, %r38549};
	shr.u64 	%rd22187, %rd21997, 7;
	xor.b64  	%rd22188, %rd22185, %rd22187;
	xor.b64  	%rd22189, %rd22188, %rd22186;
	add.s64 	%rd22190, %rd22101, %rd21584;
	add.s64 	%rd22191, %rd22190, %rd22184;
	add.s64 	%rd22192, %rd22191, %rd22189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38551,%dummy}, %rd21973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38552}, %rd21973;
	}
	shf.r.wrap.b32 	%r38553, %r38552, %r38551, 14;
	shf.r.wrap.b32 	%r38554, %r38551, %r38552, 14;
	mov.b64 	%rd22193, {%r38554, %r38553};
	shf.r.wrap.b32 	%r38555, %r38552, %r38551, 18;
	shf.r.wrap.b32 	%r38556, %r38551, %r38552, 18;
	mov.b64 	%rd22194, {%r38556, %r38555};
	xor.b64  	%rd22195, %rd22194, %rd22193;
	shf.l.wrap.b32 	%r38557, %r38551, %r38552, 23;
	shf.l.wrap.b32 	%r38558, %r38552, %r38551, 23;
	mov.b64 	%rd22196, {%r38558, %r38557};
	xor.b64  	%rd22197, %rd22195, %rd22196;
	xor.b64  	%rd22198, %rd21948, %rd21923;
	and.b64  	%rd22199, %rd21973, %rd22198;
	xor.b64  	%rd22200, %rd22199, %rd21923;
	add.s64 	%rd22201, %rd22200, %rd21898;
	add.s64 	%rd22202, %rd22201, %rd21997;
	ld.const.u64 	%rd22203, [k_sha512+384];
	add.s64 	%rd22204, %rd22202, %rd22203;
	add.s64 	%rd22205, %rd22204, %rd22197;
	add.s64 	%rd22206, %rd22205, %rd21909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38559,%dummy}, %rd21984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38560}, %rd21984;
	}
	shf.r.wrap.b32 	%r38561, %r38560, %r38559, 28;
	shf.r.wrap.b32 	%r38562, %r38559, %r38560, 28;
	mov.b64 	%rd22207, {%r38562, %r38561};
	shf.l.wrap.b32 	%r38563, %r38559, %r38560, 30;
	shf.l.wrap.b32 	%r38564, %r38560, %r38559, 30;
	mov.b64 	%rd22208, {%r38564, %r38563};
	xor.b64  	%rd22209, %rd22208, %rd22207;
	shf.l.wrap.b32 	%r38565, %r38559, %r38560, 25;
	shf.l.wrap.b32 	%r38566, %r38560, %r38559, 25;
	mov.b64 	%rd22210, {%r38566, %r38565};
	xor.b64  	%rd22211, %rd22209, %rd22210;
	and.b64  	%rd22212, %rd21984, %rd21959;
	xor.b64  	%rd22213, %rd21984, %rd21959;
	and.b64  	%rd22214, %rd22213, %rd21934;
	or.b64  	%rd22215, %rd22214, %rd22212;
	add.s64 	%rd22216, %rd22205, %rd22215;
	add.s64 	%rd22217, %rd22216, %rd22211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38567,%dummy}, %rd22206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38568}, %rd22206;
	}
	shf.r.wrap.b32 	%r38569, %r38568, %r38567, 14;
	shf.r.wrap.b32 	%r38570, %r38567, %r38568, 14;
	mov.b64 	%rd22218, {%r38570, %r38569};
	shf.r.wrap.b32 	%r38571, %r38568, %r38567, 18;
	shf.r.wrap.b32 	%r38572, %r38567, %r38568, 18;
	mov.b64 	%rd22219, {%r38572, %r38571};
	xor.b64  	%rd22220, %rd22219, %rd22218;
	shf.l.wrap.b32 	%r38573, %r38567, %r38568, 23;
	shf.l.wrap.b32 	%r38574, %r38568, %r38567, 23;
	mov.b64 	%rd22221, {%r38574, %r38573};
	xor.b64  	%rd22222, %rd22220, %rd22221;
	xor.b64  	%rd22223, %rd21973, %rd21948;
	and.b64  	%rd22224, %rd22206, %rd22223;
	xor.b64  	%rd22225, %rd22224, %rd21948;
	add.s64 	%rd22226, %rd22010, %rd21923;
	ld.const.u64 	%rd22227, [k_sha512+392];
	add.s64 	%rd22228, %rd22226, %rd22227;
	add.s64 	%rd22229, %rd22228, %rd22225;
	add.s64 	%rd22230, %rd22229, %rd22222;
	add.s64 	%rd22231, %rd22230, %rd21934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38575,%dummy}, %rd22217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38576}, %rd22217;
	}
	shf.r.wrap.b32 	%r38577, %r38576, %r38575, 28;
	shf.r.wrap.b32 	%r38578, %r38575, %r38576, 28;
	mov.b64 	%rd22232, {%r38578, %r38577};
	shf.l.wrap.b32 	%r38579, %r38575, %r38576, 30;
	shf.l.wrap.b32 	%r38580, %r38576, %r38575, 30;
	mov.b64 	%rd22233, {%r38580, %r38579};
	xor.b64  	%rd22234, %rd22233, %rd22232;
	shf.l.wrap.b32 	%r38581, %r38575, %r38576, 25;
	shf.l.wrap.b32 	%r38582, %r38576, %r38575, 25;
	mov.b64 	%rd22235, {%r38582, %r38581};
	xor.b64  	%rd22236, %rd22234, %rd22235;
	and.b64  	%rd22237, %rd22217, %rd21984;
	xor.b64  	%rd22238, %rd22217, %rd21984;
	and.b64  	%rd22239, %rd22238, %rd21959;
	or.b64  	%rd22240, %rd22239, %rd22237;
	add.s64 	%rd22241, %rd22230, %rd22240;
	add.s64 	%rd22242, %rd22241, %rd22236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38583,%dummy}, %rd22231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38584}, %rd22231;
	}
	shf.r.wrap.b32 	%r38585, %r38584, %r38583, 14;
	shf.r.wrap.b32 	%r38586, %r38583, %r38584, 14;
	mov.b64 	%rd22243, {%r38586, %r38585};
	shf.r.wrap.b32 	%r38587, %r38584, %r38583, 18;
	shf.r.wrap.b32 	%r38588, %r38583, %r38584, 18;
	mov.b64 	%rd22244, {%r38588, %r38587};
	xor.b64  	%rd22245, %rd22244, %rd22243;
	shf.l.wrap.b32 	%r38589, %r38583, %r38584, 23;
	shf.l.wrap.b32 	%r38590, %r38584, %r38583, 23;
	mov.b64 	%rd22246, {%r38590, %r38589};
	xor.b64  	%rd22247, %rd22245, %rd22246;
	xor.b64  	%rd22248, %rd22206, %rd21973;
	and.b64  	%rd22249, %rd22231, %rd22248;
	xor.b64  	%rd22250, %rd22249, %rd21973;
	add.s64 	%rd22251, %rd22023, %rd21948;
	ld.const.u64 	%rd22252, [k_sha512+400];
	add.s64 	%rd22253, %rd22251, %rd22252;
	add.s64 	%rd22254, %rd22253, %rd22250;
	add.s64 	%rd22255, %rd22254, %rd22247;
	add.s64 	%rd22256, %rd22255, %rd21959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38591,%dummy}, %rd22242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38592}, %rd22242;
	}
	shf.r.wrap.b32 	%r38593, %r38592, %r38591, 28;
	shf.r.wrap.b32 	%r38594, %r38591, %r38592, 28;
	mov.b64 	%rd22257, {%r38594, %r38593};
	shf.l.wrap.b32 	%r38595, %r38591, %r38592, 30;
	shf.l.wrap.b32 	%r38596, %r38592, %r38591, 30;
	mov.b64 	%rd22258, {%r38596, %r38595};
	xor.b64  	%rd22259, %rd22258, %rd22257;
	shf.l.wrap.b32 	%r38597, %r38591, %r38592, 25;
	shf.l.wrap.b32 	%r38598, %r38592, %r38591, 25;
	mov.b64 	%rd22260, {%r38598, %r38597};
	xor.b64  	%rd22261, %rd22259, %rd22260;
	and.b64  	%rd22262, %rd22242, %rd22217;
	xor.b64  	%rd22263, %rd22242, %rd22217;
	and.b64  	%rd22264, %rd22263, %rd21984;
	or.b64  	%rd22265, %rd22264, %rd22262;
	add.s64 	%rd22266, %rd22255, %rd22265;
	add.s64 	%rd22267, %rd22266, %rd22261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38599,%dummy}, %rd22256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38600}, %rd22256;
	}
	shf.r.wrap.b32 	%r38601, %r38600, %r38599, 14;
	shf.r.wrap.b32 	%r38602, %r38599, %r38600, 14;
	mov.b64 	%rd22268, {%r38602, %r38601};
	shf.r.wrap.b32 	%r38603, %r38600, %r38599, 18;
	shf.r.wrap.b32 	%r38604, %r38599, %r38600, 18;
	mov.b64 	%rd22269, {%r38604, %r38603};
	xor.b64  	%rd22270, %rd22269, %rd22268;
	shf.l.wrap.b32 	%r38605, %r38599, %r38600, 23;
	shf.l.wrap.b32 	%r38606, %r38600, %r38599, 23;
	mov.b64 	%rd22271, {%r38606, %r38605};
	xor.b64  	%rd22272, %rd22270, %rd22271;
	xor.b64  	%rd22273, %rd22231, %rd22206;
	and.b64  	%rd22274, %rd22256, %rd22273;
	xor.b64  	%rd22275, %rd22274, %rd22206;
	add.s64 	%rd22276, %rd22036, %rd21973;
	ld.const.u64 	%rd22277, [k_sha512+408];
	add.s64 	%rd22278, %rd22276, %rd22277;
	add.s64 	%rd22279, %rd22278, %rd22275;
	add.s64 	%rd22280, %rd22279, %rd22272;
	add.s64 	%rd22281, %rd22280, %rd21984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38607,%dummy}, %rd22267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38608}, %rd22267;
	}
	shf.r.wrap.b32 	%r38609, %r38608, %r38607, 28;
	shf.r.wrap.b32 	%r38610, %r38607, %r38608, 28;
	mov.b64 	%rd22282, {%r38610, %r38609};
	shf.l.wrap.b32 	%r38611, %r38607, %r38608, 30;
	shf.l.wrap.b32 	%r38612, %r38608, %r38607, 30;
	mov.b64 	%rd22283, {%r38612, %r38611};
	xor.b64  	%rd22284, %rd22283, %rd22282;
	shf.l.wrap.b32 	%r38613, %r38607, %r38608, 25;
	shf.l.wrap.b32 	%r38614, %r38608, %r38607, 25;
	mov.b64 	%rd22285, {%r38614, %r38613};
	xor.b64  	%rd22286, %rd22284, %rd22285;
	and.b64  	%rd22287, %rd22267, %rd22242;
	xor.b64  	%rd22288, %rd22267, %rd22242;
	and.b64  	%rd22289, %rd22288, %rd22217;
	or.b64  	%rd22290, %rd22289, %rd22287;
	add.s64 	%rd22291, %rd22280, %rd22290;
	add.s64 	%rd22292, %rd22291, %rd22286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38615,%dummy}, %rd22281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38616}, %rd22281;
	}
	shf.r.wrap.b32 	%r38617, %r38616, %r38615, 14;
	shf.r.wrap.b32 	%r38618, %r38615, %r38616, 14;
	mov.b64 	%rd22293, {%r38618, %r38617};
	shf.r.wrap.b32 	%r38619, %r38616, %r38615, 18;
	shf.r.wrap.b32 	%r38620, %r38615, %r38616, 18;
	mov.b64 	%rd22294, {%r38620, %r38619};
	xor.b64  	%rd22295, %rd22294, %rd22293;
	shf.l.wrap.b32 	%r38621, %r38615, %r38616, 23;
	shf.l.wrap.b32 	%r38622, %r38616, %r38615, 23;
	mov.b64 	%rd22296, {%r38622, %r38621};
	xor.b64  	%rd22297, %rd22295, %rd22296;
	xor.b64  	%rd22298, %rd22256, %rd22231;
	and.b64  	%rd22299, %rd22281, %rd22298;
	xor.b64  	%rd22300, %rd22299, %rd22231;
	add.s64 	%rd22301, %rd22206, %rd22049;
	ld.const.u64 	%rd22302, [k_sha512+416];
	add.s64 	%rd22303, %rd22301, %rd22302;
	add.s64 	%rd22304, %rd22303, %rd22300;
	add.s64 	%rd22305, %rd22304, %rd22297;
	add.s64 	%rd22306, %rd22305, %rd22217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38623,%dummy}, %rd22292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38624}, %rd22292;
	}
	shf.r.wrap.b32 	%r38625, %r38624, %r38623, 28;
	shf.r.wrap.b32 	%r38626, %r38623, %r38624, 28;
	mov.b64 	%rd22307, {%r38626, %r38625};
	shf.l.wrap.b32 	%r38627, %r38623, %r38624, 30;
	shf.l.wrap.b32 	%r38628, %r38624, %r38623, 30;
	mov.b64 	%rd22308, {%r38628, %r38627};
	xor.b64  	%rd22309, %rd22308, %rd22307;
	shf.l.wrap.b32 	%r38629, %r38623, %r38624, 25;
	shf.l.wrap.b32 	%r38630, %r38624, %r38623, 25;
	mov.b64 	%rd22310, {%r38630, %r38629};
	xor.b64  	%rd22311, %rd22309, %rd22310;
	and.b64  	%rd22312, %rd22292, %rd22267;
	xor.b64  	%rd22313, %rd22292, %rd22267;
	and.b64  	%rd22314, %rd22313, %rd22242;
	or.b64  	%rd22315, %rd22314, %rd22312;
	add.s64 	%rd22316, %rd22305, %rd22315;
	add.s64 	%rd22317, %rd22316, %rd22311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38631,%dummy}, %rd22306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38632}, %rd22306;
	}
	shf.r.wrap.b32 	%r38633, %r38632, %r38631, 14;
	shf.r.wrap.b32 	%r38634, %r38631, %r38632, 14;
	mov.b64 	%rd22318, {%r38634, %r38633};
	shf.r.wrap.b32 	%r38635, %r38632, %r38631, 18;
	shf.r.wrap.b32 	%r38636, %r38631, %r38632, 18;
	mov.b64 	%rd22319, {%r38636, %r38635};
	xor.b64  	%rd22320, %rd22319, %rd22318;
	shf.l.wrap.b32 	%r38637, %r38631, %r38632, 23;
	shf.l.wrap.b32 	%r38638, %r38632, %r38631, 23;
	mov.b64 	%rd22321, {%r38638, %r38637};
	xor.b64  	%rd22322, %rd22320, %rd22321;
	xor.b64  	%rd22323, %rd22281, %rd22256;
	and.b64  	%rd22324, %rd22306, %rd22323;
	xor.b64  	%rd22325, %rd22324, %rd22256;
	add.s64 	%rd22326, %rd22231, %rd22062;
	ld.const.u64 	%rd22327, [k_sha512+424];
	add.s64 	%rd22328, %rd22326, %rd22327;
	add.s64 	%rd22329, %rd22328, %rd22325;
	add.s64 	%rd22330, %rd22329, %rd22322;
	add.s64 	%rd22331, %rd22330, %rd22242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38639,%dummy}, %rd22317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38640}, %rd22317;
	}
	shf.r.wrap.b32 	%r38641, %r38640, %r38639, 28;
	shf.r.wrap.b32 	%r38642, %r38639, %r38640, 28;
	mov.b64 	%rd22332, {%r38642, %r38641};
	shf.l.wrap.b32 	%r38643, %r38639, %r38640, 30;
	shf.l.wrap.b32 	%r38644, %r38640, %r38639, 30;
	mov.b64 	%rd22333, {%r38644, %r38643};
	xor.b64  	%rd22334, %rd22333, %rd22332;
	shf.l.wrap.b32 	%r38645, %r38639, %r38640, 25;
	shf.l.wrap.b32 	%r38646, %r38640, %r38639, 25;
	mov.b64 	%rd22335, {%r38646, %r38645};
	xor.b64  	%rd22336, %rd22334, %rd22335;
	and.b64  	%rd22337, %rd22317, %rd22292;
	xor.b64  	%rd22338, %rd22317, %rd22292;
	and.b64  	%rd22339, %rd22338, %rd22267;
	or.b64  	%rd22340, %rd22339, %rd22337;
	add.s64 	%rd22341, %rd22330, %rd22340;
	add.s64 	%rd22342, %rd22341, %rd22336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38647,%dummy}, %rd22331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38648}, %rd22331;
	}
	shf.r.wrap.b32 	%r38649, %r38648, %r38647, 14;
	shf.r.wrap.b32 	%r38650, %r38647, %r38648, 14;
	mov.b64 	%rd22343, {%r38650, %r38649};
	shf.r.wrap.b32 	%r38651, %r38648, %r38647, 18;
	shf.r.wrap.b32 	%r38652, %r38647, %r38648, 18;
	mov.b64 	%rd22344, {%r38652, %r38651};
	xor.b64  	%rd22345, %rd22344, %rd22343;
	shf.l.wrap.b32 	%r38653, %r38647, %r38648, 23;
	shf.l.wrap.b32 	%r38654, %r38648, %r38647, 23;
	mov.b64 	%rd22346, {%r38654, %r38653};
	xor.b64  	%rd22347, %rd22345, %rd22346;
	xor.b64  	%rd22348, %rd22306, %rd22281;
	and.b64  	%rd22349, %rd22331, %rd22348;
	xor.b64  	%rd22350, %rd22349, %rd22281;
	add.s64 	%rd22351, %rd22256, %rd22075;
	ld.const.u64 	%rd22352, [k_sha512+432];
	add.s64 	%rd22353, %rd22351, %rd22352;
	add.s64 	%rd22354, %rd22353, %rd22350;
	add.s64 	%rd22355, %rd22354, %rd22347;
	add.s64 	%rd22356, %rd22355, %rd22267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38655,%dummy}, %rd22342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38656}, %rd22342;
	}
	shf.r.wrap.b32 	%r38657, %r38656, %r38655, 28;
	shf.r.wrap.b32 	%r38658, %r38655, %r38656, 28;
	mov.b64 	%rd22357, {%r38658, %r38657};
	shf.l.wrap.b32 	%r38659, %r38655, %r38656, 30;
	shf.l.wrap.b32 	%r38660, %r38656, %r38655, 30;
	mov.b64 	%rd22358, {%r38660, %r38659};
	xor.b64  	%rd22359, %rd22358, %rd22357;
	shf.l.wrap.b32 	%r38661, %r38655, %r38656, 25;
	shf.l.wrap.b32 	%r38662, %r38656, %r38655, 25;
	mov.b64 	%rd22360, {%r38662, %r38661};
	xor.b64  	%rd22361, %rd22359, %rd22360;
	and.b64  	%rd22362, %rd22342, %rd22317;
	xor.b64  	%rd22363, %rd22342, %rd22317;
	and.b64  	%rd22364, %rd22363, %rd22292;
	or.b64  	%rd22365, %rd22364, %rd22362;
	add.s64 	%rd22366, %rd22355, %rd22365;
	add.s64 	%rd22367, %rd22366, %rd22361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38663,%dummy}, %rd22356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38664}, %rd22356;
	}
	shf.r.wrap.b32 	%r38665, %r38664, %r38663, 14;
	shf.r.wrap.b32 	%r38666, %r38663, %r38664, 14;
	mov.b64 	%rd22368, {%r38666, %r38665};
	shf.r.wrap.b32 	%r38667, %r38664, %r38663, 18;
	shf.r.wrap.b32 	%r38668, %r38663, %r38664, 18;
	mov.b64 	%rd22369, {%r38668, %r38667};
	xor.b64  	%rd22370, %rd22369, %rd22368;
	shf.l.wrap.b32 	%r38669, %r38663, %r38664, 23;
	shf.l.wrap.b32 	%r38670, %r38664, %r38663, 23;
	mov.b64 	%rd22371, {%r38670, %r38669};
	xor.b64  	%rd22372, %rd22370, %rd22371;
	xor.b64  	%rd22373, %rd22331, %rd22306;
	and.b64  	%rd22374, %rd22356, %rd22373;
	xor.b64  	%rd22375, %rd22374, %rd22306;
	add.s64 	%rd22376, %rd22281, %rd22088;
	ld.const.u64 	%rd22377, [k_sha512+440];
	add.s64 	%rd22378, %rd22376, %rd22377;
	add.s64 	%rd22379, %rd22378, %rd22375;
	add.s64 	%rd22380, %rd22379, %rd22372;
	add.s64 	%rd22381, %rd22380, %rd22292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38671,%dummy}, %rd22367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38672}, %rd22367;
	}
	shf.r.wrap.b32 	%r38673, %r38672, %r38671, 28;
	shf.r.wrap.b32 	%r38674, %r38671, %r38672, 28;
	mov.b64 	%rd22382, {%r38674, %r38673};
	shf.l.wrap.b32 	%r38675, %r38671, %r38672, 30;
	shf.l.wrap.b32 	%r38676, %r38672, %r38671, 30;
	mov.b64 	%rd22383, {%r38676, %r38675};
	xor.b64  	%rd22384, %rd22383, %rd22382;
	shf.l.wrap.b32 	%r38677, %r38671, %r38672, 25;
	shf.l.wrap.b32 	%r38678, %r38672, %r38671, 25;
	mov.b64 	%rd22385, {%r38678, %r38677};
	xor.b64  	%rd22386, %rd22384, %rd22385;
	and.b64  	%rd22387, %rd22367, %rd22342;
	xor.b64  	%rd22388, %rd22367, %rd22342;
	and.b64  	%rd22389, %rd22388, %rd22317;
	or.b64  	%rd22390, %rd22389, %rd22387;
	add.s64 	%rd22391, %rd22380, %rd22390;
	add.s64 	%rd22392, %rd22391, %rd22386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38679,%dummy}, %rd22381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38680}, %rd22381;
	}
	shf.r.wrap.b32 	%r38681, %r38680, %r38679, 14;
	shf.r.wrap.b32 	%r38682, %r38679, %r38680, 14;
	mov.b64 	%rd22393, {%r38682, %r38681};
	shf.r.wrap.b32 	%r38683, %r38680, %r38679, 18;
	shf.r.wrap.b32 	%r38684, %r38679, %r38680, 18;
	mov.b64 	%rd22394, {%r38684, %r38683};
	xor.b64  	%rd22395, %rd22394, %rd22393;
	shf.l.wrap.b32 	%r38685, %r38679, %r38680, 23;
	shf.l.wrap.b32 	%r38686, %r38680, %r38679, 23;
	mov.b64 	%rd22396, {%r38686, %r38685};
	xor.b64  	%rd22397, %rd22395, %rd22396;
	xor.b64  	%rd22398, %rd22356, %rd22331;
	and.b64  	%rd22399, %rd22381, %rd22398;
	xor.b64  	%rd22400, %rd22399, %rd22331;
	add.s64 	%rd22401, %rd22306, %rd22101;
	ld.const.u64 	%rd22402, [k_sha512+448];
	add.s64 	%rd22403, %rd22401, %rd22402;
	add.s64 	%rd22404, %rd22403, %rd22400;
	add.s64 	%rd22405, %rd22404, %rd22397;
	add.s64 	%rd22406, %rd22405, %rd22317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38687,%dummy}, %rd22392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38688}, %rd22392;
	}
	shf.r.wrap.b32 	%r38689, %r38688, %r38687, 28;
	shf.r.wrap.b32 	%r38690, %r38687, %r38688, 28;
	mov.b64 	%rd22407, {%r38690, %r38689};
	shf.l.wrap.b32 	%r38691, %r38687, %r38688, 30;
	shf.l.wrap.b32 	%r38692, %r38688, %r38687, 30;
	mov.b64 	%rd22408, {%r38692, %r38691};
	xor.b64  	%rd22409, %rd22408, %rd22407;
	shf.l.wrap.b32 	%r38693, %r38687, %r38688, 25;
	shf.l.wrap.b32 	%r38694, %r38688, %r38687, 25;
	mov.b64 	%rd22410, {%r38694, %r38693};
	xor.b64  	%rd22411, %rd22409, %rd22410;
	and.b64  	%rd22412, %rd22392, %rd22367;
	xor.b64  	%rd22413, %rd22392, %rd22367;
	and.b64  	%rd22414, %rd22413, %rd22342;
	or.b64  	%rd22415, %rd22414, %rd22412;
	add.s64 	%rd22416, %rd22405, %rd22415;
	add.s64 	%rd22417, %rd22416, %rd22411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38695,%dummy}, %rd22406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38696}, %rd22406;
	}
	shf.r.wrap.b32 	%r38697, %r38696, %r38695, 14;
	shf.r.wrap.b32 	%r38698, %r38695, %r38696, 14;
	mov.b64 	%rd22418, {%r38698, %r38697};
	shf.r.wrap.b32 	%r38699, %r38696, %r38695, 18;
	shf.r.wrap.b32 	%r38700, %r38695, %r38696, 18;
	mov.b64 	%rd22419, {%r38700, %r38699};
	xor.b64  	%rd22420, %rd22419, %rd22418;
	shf.l.wrap.b32 	%r38701, %r38695, %r38696, 23;
	shf.l.wrap.b32 	%r38702, %r38696, %r38695, 23;
	mov.b64 	%rd22421, {%r38702, %r38701};
	xor.b64  	%rd22422, %rd22420, %rd22421;
	xor.b64  	%rd22423, %rd22381, %rd22356;
	and.b64  	%rd22424, %rd22406, %rd22423;
	xor.b64  	%rd22425, %rd22424, %rd22356;
	add.s64 	%rd22426, %rd22331, %rd22114;
	ld.const.u64 	%rd22427, [k_sha512+456];
	add.s64 	%rd22428, %rd22426, %rd22427;
	add.s64 	%rd22429, %rd22428, %rd22425;
	add.s64 	%rd22430, %rd22429, %rd22422;
	add.s64 	%rd22431, %rd22430, %rd22342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38703,%dummy}, %rd22417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38704}, %rd22417;
	}
	shf.r.wrap.b32 	%r38705, %r38704, %r38703, 28;
	shf.r.wrap.b32 	%r38706, %r38703, %r38704, 28;
	mov.b64 	%rd22432, {%r38706, %r38705};
	shf.l.wrap.b32 	%r38707, %r38703, %r38704, 30;
	shf.l.wrap.b32 	%r38708, %r38704, %r38703, 30;
	mov.b64 	%rd22433, {%r38708, %r38707};
	xor.b64  	%rd22434, %rd22433, %rd22432;
	shf.l.wrap.b32 	%r38709, %r38703, %r38704, 25;
	shf.l.wrap.b32 	%r38710, %r38704, %r38703, 25;
	mov.b64 	%rd22435, {%r38710, %r38709};
	xor.b64  	%rd22436, %rd22434, %rd22435;
	and.b64  	%rd22437, %rd22417, %rd22392;
	xor.b64  	%rd22438, %rd22417, %rd22392;
	and.b64  	%rd22439, %rd22438, %rd22367;
	or.b64  	%rd22440, %rd22439, %rd22437;
	add.s64 	%rd22441, %rd22430, %rd22440;
	add.s64 	%rd22442, %rd22441, %rd22436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38711,%dummy}, %rd22431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38712}, %rd22431;
	}
	shf.r.wrap.b32 	%r38713, %r38712, %r38711, 14;
	shf.r.wrap.b32 	%r38714, %r38711, %r38712, 14;
	mov.b64 	%rd22443, {%r38714, %r38713};
	shf.r.wrap.b32 	%r38715, %r38712, %r38711, 18;
	shf.r.wrap.b32 	%r38716, %r38711, %r38712, 18;
	mov.b64 	%rd22444, {%r38716, %r38715};
	xor.b64  	%rd22445, %rd22444, %rd22443;
	shf.l.wrap.b32 	%r38717, %r38711, %r38712, 23;
	shf.l.wrap.b32 	%r38718, %r38712, %r38711, 23;
	mov.b64 	%rd22446, {%r38718, %r38717};
	xor.b64  	%rd22447, %rd22445, %rd22446;
	xor.b64  	%rd22448, %rd22406, %rd22381;
	and.b64  	%rd22449, %rd22431, %rd22448;
	xor.b64  	%rd22450, %rd22449, %rd22381;
	add.s64 	%rd22451, %rd22356, %rd22127;
	ld.const.u64 	%rd22452, [k_sha512+464];
	add.s64 	%rd22453, %rd22451, %rd22452;
	add.s64 	%rd22454, %rd22453, %rd22450;
	add.s64 	%rd22455, %rd22454, %rd22447;
	add.s64 	%rd22456, %rd22455, %rd22367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38719,%dummy}, %rd22442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38720}, %rd22442;
	}
	shf.r.wrap.b32 	%r38721, %r38720, %r38719, 28;
	shf.r.wrap.b32 	%r38722, %r38719, %r38720, 28;
	mov.b64 	%rd22457, {%r38722, %r38721};
	shf.l.wrap.b32 	%r38723, %r38719, %r38720, 30;
	shf.l.wrap.b32 	%r38724, %r38720, %r38719, 30;
	mov.b64 	%rd22458, {%r38724, %r38723};
	xor.b64  	%rd22459, %rd22458, %rd22457;
	shf.l.wrap.b32 	%r38725, %r38719, %r38720, 25;
	shf.l.wrap.b32 	%r38726, %r38720, %r38719, 25;
	mov.b64 	%rd22460, {%r38726, %r38725};
	xor.b64  	%rd22461, %rd22459, %rd22460;
	and.b64  	%rd22462, %rd22442, %rd22417;
	xor.b64  	%rd22463, %rd22442, %rd22417;
	and.b64  	%rd22464, %rd22463, %rd22392;
	or.b64  	%rd22465, %rd22464, %rd22462;
	add.s64 	%rd22466, %rd22455, %rd22465;
	add.s64 	%rd22467, %rd22466, %rd22461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38727,%dummy}, %rd22456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38728}, %rd22456;
	}
	shf.r.wrap.b32 	%r38729, %r38728, %r38727, 14;
	shf.r.wrap.b32 	%r38730, %r38727, %r38728, 14;
	mov.b64 	%rd22468, {%r38730, %r38729};
	shf.r.wrap.b32 	%r38731, %r38728, %r38727, 18;
	shf.r.wrap.b32 	%r38732, %r38727, %r38728, 18;
	mov.b64 	%rd22469, {%r38732, %r38731};
	xor.b64  	%rd22470, %rd22469, %rd22468;
	shf.l.wrap.b32 	%r38733, %r38727, %r38728, 23;
	shf.l.wrap.b32 	%r38734, %r38728, %r38727, 23;
	mov.b64 	%rd22471, {%r38734, %r38733};
	xor.b64  	%rd22472, %rd22470, %rd22471;
	xor.b64  	%rd22473, %rd22431, %rd22406;
	and.b64  	%rd22474, %rd22456, %rd22473;
	xor.b64  	%rd22475, %rd22474, %rd22406;
	add.s64 	%rd22476, %rd22381, %rd22140;
	ld.const.u64 	%rd22477, [k_sha512+472];
	add.s64 	%rd22478, %rd22476, %rd22477;
	add.s64 	%rd22479, %rd22478, %rd22475;
	add.s64 	%rd22480, %rd22479, %rd22472;
	add.s64 	%rd22481, %rd22480, %rd22392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38735,%dummy}, %rd22467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38736}, %rd22467;
	}
	shf.r.wrap.b32 	%r38737, %r38736, %r38735, 28;
	shf.r.wrap.b32 	%r38738, %r38735, %r38736, 28;
	mov.b64 	%rd22482, {%r38738, %r38737};
	shf.l.wrap.b32 	%r38739, %r38735, %r38736, 30;
	shf.l.wrap.b32 	%r38740, %r38736, %r38735, 30;
	mov.b64 	%rd22483, {%r38740, %r38739};
	xor.b64  	%rd22484, %rd22483, %rd22482;
	shf.l.wrap.b32 	%r38741, %r38735, %r38736, 25;
	shf.l.wrap.b32 	%r38742, %r38736, %r38735, 25;
	mov.b64 	%rd22485, {%r38742, %r38741};
	xor.b64  	%rd22486, %rd22484, %rd22485;
	and.b64  	%rd22487, %rd22467, %rd22442;
	xor.b64  	%rd22488, %rd22467, %rd22442;
	and.b64  	%rd22489, %rd22488, %rd22417;
	or.b64  	%rd22490, %rd22489, %rd22487;
	add.s64 	%rd22491, %rd22480, %rd22490;
	add.s64 	%rd22492, %rd22491, %rd22486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38743,%dummy}, %rd22481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38744}, %rd22481;
	}
	shf.r.wrap.b32 	%r38745, %r38744, %r38743, 14;
	shf.r.wrap.b32 	%r38746, %r38743, %r38744, 14;
	mov.b64 	%rd22493, {%r38746, %r38745};
	shf.r.wrap.b32 	%r38747, %r38744, %r38743, 18;
	shf.r.wrap.b32 	%r38748, %r38743, %r38744, 18;
	mov.b64 	%rd22494, {%r38748, %r38747};
	xor.b64  	%rd22495, %rd22494, %rd22493;
	shf.l.wrap.b32 	%r38749, %r38743, %r38744, 23;
	shf.l.wrap.b32 	%r38750, %r38744, %r38743, 23;
	mov.b64 	%rd22496, {%r38750, %r38749};
	xor.b64  	%rd22497, %rd22495, %rd22496;
	xor.b64  	%rd22498, %rd22456, %rd22431;
	and.b64  	%rd22499, %rd22481, %rd22498;
	xor.b64  	%rd22500, %rd22499, %rd22431;
	add.s64 	%rd22501, %rd22406, %rd22153;
	ld.const.u64 	%rd22502, [k_sha512+480];
	add.s64 	%rd22503, %rd22501, %rd22502;
	add.s64 	%rd22504, %rd22503, %rd22500;
	add.s64 	%rd22505, %rd22504, %rd22497;
	add.s64 	%rd22506, %rd22505, %rd22417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38751,%dummy}, %rd22492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38752}, %rd22492;
	}
	shf.r.wrap.b32 	%r38753, %r38752, %r38751, 28;
	shf.r.wrap.b32 	%r38754, %r38751, %r38752, 28;
	mov.b64 	%rd22507, {%r38754, %r38753};
	shf.l.wrap.b32 	%r38755, %r38751, %r38752, 30;
	shf.l.wrap.b32 	%r38756, %r38752, %r38751, 30;
	mov.b64 	%rd22508, {%r38756, %r38755};
	xor.b64  	%rd22509, %rd22508, %rd22507;
	shf.l.wrap.b32 	%r38757, %r38751, %r38752, 25;
	shf.l.wrap.b32 	%r38758, %r38752, %r38751, 25;
	mov.b64 	%rd22510, {%r38758, %r38757};
	xor.b64  	%rd22511, %rd22509, %rd22510;
	and.b64  	%rd22512, %rd22492, %rd22467;
	xor.b64  	%rd22513, %rd22492, %rd22467;
	and.b64  	%rd22514, %rd22513, %rd22442;
	or.b64  	%rd22515, %rd22514, %rd22512;
	add.s64 	%rd22516, %rd22505, %rd22515;
	add.s64 	%rd22517, %rd22516, %rd22511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38759,%dummy}, %rd22506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38760}, %rd22506;
	}
	shf.r.wrap.b32 	%r38761, %r38760, %r38759, 14;
	shf.r.wrap.b32 	%r38762, %r38759, %r38760, 14;
	mov.b64 	%rd22518, {%r38762, %r38761};
	shf.r.wrap.b32 	%r38763, %r38760, %r38759, 18;
	shf.r.wrap.b32 	%r38764, %r38759, %r38760, 18;
	mov.b64 	%rd22519, {%r38764, %r38763};
	xor.b64  	%rd22520, %rd22519, %rd22518;
	shf.l.wrap.b32 	%r38765, %r38759, %r38760, 23;
	shf.l.wrap.b32 	%r38766, %r38760, %r38759, 23;
	mov.b64 	%rd22521, {%r38766, %r38765};
	xor.b64  	%rd22522, %rd22520, %rd22521;
	xor.b64  	%rd22523, %rd22481, %rd22456;
	and.b64  	%rd22524, %rd22506, %rd22523;
	xor.b64  	%rd22525, %rd22524, %rd22456;
	add.s64 	%rd22526, %rd22431, %rd22166;
	ld.const.u64 	%rd22527, [k_sha512+488];
	add.s64 	%rd22528, %rd22526, %rd22527;
	add.s64 	%rd22529, %rd22528, %rd22525;
	add.s64 	%rd22530, %rd22529, %rd22522;
	add.s64 	%rd22531, %rd22530, %rd22442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38767,%dummy}, %rd22517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38768}, %rd22517;
	}
	shf.r.wrap.b32 	%r38769, %r38768, %r38767, 28;
	shf.r.wrap.b32 	%r38770, %r38767, %r38768, 28;
	mov.b64 	%rd22532, {%r38770, %r38769};
	shf.l.wrap.b32 	%r38771, %r38767, %r38768, 30;
	shf.l.wrap.b32 	%r38772, %r38768, %r38767, 30;
	mov.b64 	%rd22533, {%r38772, %r38771};
	xor.b64  	%rd22534, %rd22533, %rd22532;
	shf.l.wrap.b32 	%r38773, %r38767, %r38768, 25;
	shf.l.wrap.b32 	%r38774, %r38768, %r38767, 25;
	mov.b64 	%rd22535, {%r38774, %r38773};
	xor.b64  	%rd22536, %rd22534, %rd22535;
	and.b64  	%rd22537, %rd22517, %rd22492;
	xor.b64  	%rd22538, %rd22517, %rd22492;
	and.b64  	%rd22539, %rd22538, %rd22467;
	or.b64  	%rd22540, %rd22539, %rd22537;
	add.s64 	%rd22541, %rd22530, %rd22540;
	add.s64 	%rd22542, %rd22541, %rd22536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38775,%dummy}, %rd22531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38776}, %rd22531;
	}
	shf.r.wrap.b32 	%r38777, %r38776, %r38775, 14;
	shf.r.wrap.b32 	%r38778, %r38775, %r38776, 14;
	mov.b64 	%rd22543, {%r38778, %r38777};
	shf.r.wrap.b32 	%r38779, %r38776, %r38775, 18;
	shf.r.wrap.b32 	%r38780, %r38775, %r38776, 18;
	mov.b64 	%rd22544, {%r38780, %r38779};
	xor.b64  	%rd22545, %rd22544, %rd22543;
	shf.l.wrap.b32 	%r38781, %r38775, %r38776, 23;
	shf.l.wrap.b32 	%r38782, %r38776, %r38775, 23;
	mov.b64 	%rd22546, {%r38782, %r38781};
	xor.b64  	%rd22547, %rd22545, %rd22546;
	xor.b64  	%rd22548, %rd22506, %rd22481;
	and.b64  	%rd22549, %rd22531, %rd22548;
	xor.b64  	%rd22550, %rd22549, %rd22481;
	add.s64 	%rd22551, %rd22456, %rd22179;
	ld.const.u64 	%rd22552, [k_sha512+496];
	add.s64 	%rd22553, %rd22551, %rd22552;
	add.s64 	%rd22554, %rd22553, %rd22550;
	add.s64 	%rd22555, %rd22554, %rd22547;
	add.s64 	%rd22556, %rd22555, %rd22467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38783,%dummy}, %rd22542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38784}, %rd22542;
	}
	shf.r.wrap.b32 	%r38785, %r38784, %r38783, 28;
	shf.r.wrap.b32 	%r38786, %r38783, %r38784, 28;
	mov.b64 	%rd22557, {%r38786, %r38785};
	shf.l.wrap.b32 	%r38787, %r38783, %r38784, 30;
	shf.l.wrap.b32 	%r38788, %r38784, %r38783, 30;
	mov.b64 	%rd22558, {%r38788, %r38787};
	xor.b64  	%rd22559, %rd22558, %rd22557;
	shf.l.wrap.b32 	%r38789, %r38783, %r38784, 25;
	shf.l.wrap.b32 	%r38790, %r38784, %r38783, 25;
	mov.b64 	%rd22560, {%r38790, %r38789};
	xor.b64  	%rd22561, %rd22559, %rd22560;
	and.b64  	%rd22562, %rd22542, %rd22517;
	xor.b64  	%rd22563, %rd22542, %rd22517;
	and.b64  	%rd22564, %rd22563, %rd22492;
	or.b64  	%rd22565, %rd22564, %rd22562;
	add.s64 	%rd22566, %rd22555, %rd22565;
	add.s64 	%rd22567, %rd22566, %rd22561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38791,%dummy}, %rd22556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38792}, %rd22556;
	}
	shf.r.wrap.b32 	%r38793, %r38792, %r38791, 14;
	shf.r.wrap.b32 	%r38794, %r38791, %r38792, 14;
	mov.b64 	%rd22568, {%r38794, %r38793};
	shf.r.wrap.b32 	%r38795, %r38792, %r38791, 18;
	shf.r.wrap.b32 	%r38796, %r38791, %r38792, 18;
	mov.b64 	%rd22569, {%r38796, %r38795};
	xor.b64  	%rd22570, %rd22569, %rd22568;
	shf.l.wrap.b32 	%r38797, %r38791, %r38792, 23;
	shf.l.wrap.b32 	%r38798, %r38792, %r38791, 23;
	mov.b64 	%rd22571, {%r38798, %r38797};
	xor.b64  	%rd22572, %rd22570, %rd22571;
	xor.b64  	%rd22573, %rd22531, %rd22506;
	and.b64  	%rd22574, %rd22556, %rd22573;
	xor.b64  	%rd22575, %rd22574, %rd22506;
	add.s64 	%rd22576, %rd22481, %rd22192;
	ld.const.u64 	%rd22577, [k_sha512+504];
	add.s64 	%rd22578, %rd22576, %rd22577;
	add.s64 	%rd22579, %rd22578, %rd22575;
	add.s64 	%rd22580, %rd22579, %rd22572;
	add.s64 	%rd22581, %rd22580, %rd22492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38799,%dummy}, %rd22567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38800}, %rd22567;
	}
	shf.r.wrap.b32 	%r38801, %r38800, %r38799, 28;
	shf.r.wrap.b32 	%r38802, %r38799, %r38800, 28;
	mov.b64 	%rd22582, {%r38802, %r38801};
	shf.l.wrap.b32 	%r38803, %r38799, %r38800, 30;
	shf.l.wrap.b32 	%r38804, %r38800, %r38799, 30;
	mov.b64 	%rd22583, {%r38804, %r38803};
	xor.b64  	%rd22584, %rd22583, %rd22582;
	shf.l.wrap.b32 	%r38805, %r38799, %r38800, 25;
	shf.l.wrap.b32 	%r38806, %r38800, %r38799, 25;
	mov.b64 	%rd22585, {%r38806, %r38805};
	xor.b64  	%rd22586, %rd22584, %rd22585;
	and.b64  	%rd22587, %rd22567, %rd22542;
	xor.b64  	%rd22588, %rd22567, %rd22542;
	and.b64  	%rd22589, %rd22588, %rd22517;
	or.b64  	%rd22590, %rd22589, %rd22587;
	add.s64 	%rd22591, %rd22580, %rd22590;
	add.s64 	%rd22592, %rd22591, %rd22586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38807,%dummy}, %rd22179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38808}, %rd22179;
	}
	shf.r.wrap.b32 	%r38809, %r38808, %r38807, 19;
	shf.r.wrap.b32 	%r38810, %r38807, %r38808, 19;
	mov.b64 	%rd22593, {%r38810, %r38809};
	shf.l.wrap.b32 	%r38811, %r38807, %r38808, 3;
	shf.l.wrap.b32 	%r38812, %r38808, %r38807, 3;
	mov.b64 	%rd22594, {%r38812, %r38811};
	shr.u64 	%rd22595, %rd22179, 6;
	xor.b64  	%rd22596, %rd22593, %rd22595;
	xor.b64  	%rd22597, %rd22596, %rd22594;
	shf.r.wrap.b32 	%r38813, %r38422, %r38421, 1;
	shf.r.wrap.b32 	%r38814, %r38421, %r38422, 1;
	mov.b64 	%rd22598, {%r38814, %r38813};
	shf.r.wrap.b32 	%r38815, %r38422, %r38421, 8;
	shf.r.wrap.b32 	%r38816, %r38421, %r38422, 8;
	mov.b64 	%rd22599, {%r38816, %r38815};
	shr.u64 	%rd22600, %rd22010, 7;
	xor.b64  	%rd22601, %rd22598, %rd22600;
	xor.b64  	%rd22602, %rd22601, %rd22599;
	add.s64 	%rd22603, %rd22114, %rd21997;
	add.s64 	%rd22604, %rd22603, %rd22597;
	add.s64 	%rd22605, %rd22604, %rd22602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38817,%dummy}, %rd22192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38818}, %rd22192;
	}
	shf.r.wrap.b32 	%r38819, %r38818, %r38817, 19;
	shf.r.wrap.b32 	%r38820, %r38817, %r38818, 19;
	mov.b64 	%rd22606, {%r38820, %r38819};
	shf.l.wrap.b32 	%r38821, %r38817, %r38818, 3;
	shf.l.wrap.b32 	%r38822, %r38818, %r38817, 3;
	mov.b64 	%rd22607, {%r38822, %r38821};
	shr.u64 	%rd22608, %rd22192, 6;
	xor.b64  	%rd22609, %rd22606, %rd22608;
	xor.b64  	%rd22610, %rd22609, %rd22607;
	shf.r.wrap.b32 	%r38823, %r38432, %r38431, 1;
	shf.r.wrap.b32 	%r38824, %r38431, %r38432, 1;
	mov.b64 	%rd22611, {%r38824, %r38823};
	shf.r.wrap.b32 	%r38825, %r38432, %r38431, 8;
	shf.r.wrap.b32 	%r38826, %r38431, %r38432, 8;
	mov.b64 	%rd22612, {%r38826, %r38825};
	shr.u64 	%rd22613, %rd22023, 7;
	xor.b64  	%rd22614, %rd22611, %rd22613;
	xor.b64  	%rd22615, %rd22614, %rd22612;
	add.s64 	%rd22616, %rd22127, %rd22010;
	add.s64 	%rd22617, %rd22616, %rd22610;
	add.s64 	%rd22618, %rd22617, %rd22615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38827,%dummy}, %rd22605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38828}, %rd22605;
	}
	shf.r.wrap.b32 	%r38829, %r38828, %r38827, 19;
	shf.r.wrap.b32 	%r38830, %r38827, %r38828, 19;
	mov.b64 	%rd22619, {%r38830, %r38829};
	shf.l.wrap.b32 	%r38831, %r38827, %r38828, 3;
	shf.l.wrap.b32 	%r38832, %r38828, %r38827, 3;
	mov.b64 	%rd22620, {%r38832, %r38831};
	shr.u64 	%rd22621, %rd22605, 6;
	xor.b64  	%rd22622, %rd22619, %rd22621;
	xor.b64  	%rd22623, %rd22622, %rd22620;
	shf.r.wrap.b32 	%r38833, %r38442, %r38441, 1;
	shf.r.wrap.b32 	%r38834, %r38441, %r38442, 1;
	mov.b64 	%rd22624, {%r38834, %r38833};
	shf.r.wrap.b32 	%r38835, %r38442, %r38441, 8;
	shf.r.wrap.b32 	%r38836, %r38441, %r38442, 8;
	mov.b64 	%rd22625, {%r38836, %r38835};
	shr.u64 	%rd22626, %rd22036, 7;
	xor.b64  	%rd22627, %rd22624, %rd22626;
	xor.b64  	%rd22628, %rd22627, %rd22625;
	add.s64 	%rd22629, %rd22140, %rd22023;
	add.s64 	%rd22630, %rd22629, %rd22623;
	add.s64 	%rd22631, %rd22630, %rd22628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38837,%dummy}, %rd22618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38838}, %rd22618;
	}
	shf.r.wrap.b32 	%r38839, %r38838, %r38837, 19;
	shf.r.wrap.b32 	%r38840, %r38837, %r38838, 19;
	mov.b64 	%rd22632, {%r38840, %r38839};
	shf.l.wrap.b32 	%r38841, %r38837, %r38838, 3;
	shf.l.wrap.b32 	%r38842, %r38838, %r38837, 3;
	mov.b64 	%rd22633, {%r38842, %r38841};
	shr.u64 	%rd22634, %rd22618, 6;
	xor.b64  	%rd22635, %rd22632, %rd22634;
	xor.b64  	%rd22636, %rd22635, %rd22633;
	shf.r.wrap.b32 	%r38843, %r38452, %r38451, 1;
	shf.r.wrap.b32 	%r38844, %r38451, %r38452, 1;
	mov.b64 	%rd22637, {%r38844, %r38843};
	shf.r.wrap.b32 	%r38845, %r38452, %r38451, 8;
	shf.r.wrap.b32 	%r38846, %r38451, %r38452, 8;
	mov.b64 	%rd22638, {%r38846, %r38845};
	shr.u64 	%rd22639, %rd22049, 7;
	xor.b64  	%rd22640, %rd22637, %rd22639;
	xor.b64  	%rd22641, %rd22640, %rd22638;
	add.s64 	%rd22642, %rd22153, %rd22036;
	add.s64 	%rd22643, %rd22642, %rd22636;
	add.s64 	%rd22644, %rd22643, %rd22641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38847,%dummy}, %rd22631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38848}, %rd22631;
	}
	shf.r.wrap.b32 	%r38849, %r38848, %r38847, 19;
	shf.r.wrap.b32 	%r38850, %r38847, %r38848, 19;
	mov.b64 	%rd22645, {%r38850, %r38849};
	shf.l.wrap.b32 	%r38851, %r38847, %r38848, 3;
	shf.l.wrap.b32 	%r38852, %r38848, %r38847, 3;
	mov.b64 	%rd22646, {%r38852, %r38851};
	shr.u64 	%rd22647, %rd22631, 6;
	xor.b64  	%rd22648, %rd22645, %rd22647;
	xor.b64  	%rd22649, %rd22648, %rd22646;
	shf.r.wrap.b32 	%r38853, %r38462, %r38461, 1;
	shf.r.wrap.b32 	%r38854, %r38461, %r38462, 1;
	mov.b64 	%rd22650, {%r38854, %r38853};
	shf.r.wrap.b32 	%r38855, %r38462, %r38461, 8;
	shf.r.wrap.b32 	%r38856, %r38461, %r38462, 8;
	mov.b64 	%rd22651, {%r38856, %r38855};
	shr.u64 	%rd22652, %rd22062, 7;
	xor.b64  	%rd22653, %rd22650, %rd22652;
	xor.b64  	%rd22654, %rd22653, %rd22651;
	add.s64 	%rd22655, %rd22166, %rd22049;
	add.s64 	%rd22656, %rd22655, %rd22649;
	add.s64 	%rd22657, %rd22656, %rd22654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38857,%dummy}, %rd22644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38858}, %rd22644;
	}
	shf.r.wrap.b32 	%r38859, %r38858, %r38857, 19;
	shf.r.wrap.b32 	%r38860, %r38857, %r38858, 19;
	mov.b64 	%rd22658, {%r38860, %r38859};
	shf.l.wrap.b32 	%r38861, %r38857, %r38858, 3;
	shf.l.wrap.b32 	%r38862, %r38858, %r38857, 3;
	mov.b64 	%rd22659, {%r38862, %r38861};
	shr.u64 	%rd22660, %rd22644, 6;
	xor.b64  	%rd22661, %rd22658, %rd22660;
	xor.b64  	%rd22662, %rd22661, %rd22659;
	shf.r.wrap.b32 	%r38863, %r38472, %r38471, 1;
	shf.r.wrap.b32 	%r38864, %r38471, %r38472, 1;
	mov.b64 	%rd22663, {%r38864, %r38863};
	shf.r.wrap.b32 	%r38865, %r38472, %r38471, 8;
	shf.r.wrap.b32 	%r38866, %r38471, %r38472, 8;
	mov.b64 	%rd22664, {%r38866, %r38865};
	shr.u64 	%rd22665, %rd22075, 7;
	xor.b64  	%rd22666, %rd22663, %rd22665;
	xor.b64  	%rd22667, %rd22666, %rd22664;
	add.s64 	%rd22668, %rd22179, %rd22062;
	add.s64 	%rd22669, %rd22668, %rd22662;
	add.s64 	%rd22670, %rd22669, %rd22667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38867,%dummy}, %rd22657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38868}, %rd22657;
	}
	shf.r.wrap.b32 	%r38869, %r38868, %r38867, 19;
	shf.r.wrap.b32 	%r38870, %r38867, %r38868, 19;
	mov.b64 	%rd22671, {%r38870, %r38869};
	shf.l.wrap.b32 	%r38871, %r38867, %r38868, 3;
	shf.l.wrap.b32 	%r38872, %r38868, %r38867, 3;
	mov.b64 	%rd22672, {%r38872, %r38871};
	shr.u64 	%rd22673, %rd22657, 6;
	xor.b64  	%rd22674, %rd22671, %rd22673;
	xor.b64  	%rd22675, %rd22674, %rd22672;
	shf.r.wrap.b32 	%r38873, %r38482, %r38481, 1;
	shf.r.wrap.b32 	%r38874, %r38481, %r38482, 1;
	mov.b64 	%rd22676, {%r38874, %r38873};
	shf.r.wrap.b32 	%r38875, %r38482, %r38481, 8;
	shf.r.wrap.b32 	%r38876, %r38481, %r38482, 8;
	mov.b64 	%rd22677, {%r38876, %r38875};
	shr.u64 	%rd22678, %rd22088, 7;
	xor.b64  	%rd22679, %rd22676, %rd22678;
	xor.b64  	%rd22680, %rd22679, %rd22677;
	add.s64 	%rd22681, %rd22192, %rd22075;
	add.s64 	%rd22682, %rd22681, %rd22675;
	add.s64 	%rd22683, %rd22682, %rd22680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38877,%dummy}, %rd22670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38878}, %rd22670;
	}
	shf.r.wrap.b32 	%r38879, %r38878, %r38877, 19;
	shf.r.wrap.b32 	%r38880, %r38877, %r38878, 19;
	mov.b64 	%rd22684, {%r38880, %r38879};
	shf.l.wrap.b32 	%r38881, %r38877, %r38878, 3;
	shf.l.wrap.b32 	%r38882, %r38878, %r38877, 3;
	mov.b64 	%rd22685, {%r38882, %r38881};
	shr.u64 	%rd22686, %rd22670, 6;
	xor.b64  	%rd22687, %rd22684, %rd22686;
	xor.b64  	%rd22688, %rd22687, %rd22685;
	shf.r.wrap.b32 	%r38883, %r38492, %r38491, 1;
	shf.r.wrap.b32 	%r38884, %r38491, %r38492, 1;
	mov.b64 	%rd22689, {%r38884, %r38883};
	shf.r.wrap.b32 	%r38885, %r38492, %r38491, 8;
	shf.r.wrap.b32 	%r38886, %r38491, %r38492, 8;
	mov.b64 	%rd22690, {%r38886, %r38885};
	shr.u64 	%rd22691, %rd22101, 7;
	xor.b64  	%rd22692, %rd22689, %rd22691;
	xor.b64  	%rd22693, %rd22692, %rd22690;
	add.s64 	%rd22694, %rd22605, %rd22088;
	add.s64 	%rd22695, %rd22694, %rd22688;
	add.s64 	%rd22696, %rd22695, %rd22693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38887,%dummy}, %rd22683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38888}, %rd22683;
	}
	shf.r.wrap.b32 	%r38889, %r38888, %r38887, 19;
	shf.r.wrap.b32 	%r38890, %r38887, %r38888, 19;
	mov.b64 	%rd22697, {%r38890, %r38889};
	shf.l.wrap.b32 	%r38891, %r38887, %r38888, 3;
	shf.l.wrap.b32 	%r38892, %r38888, %r38887, 3;
	mov.b64 	%rd22698, {%r38892, %r38891};
	shr.u64 	%rd22699, %rd22683, 6;
	xor.b64  	%rd22700, %rd22697, %rd22699;
	xor.b64  	%rd22701, %rd22700, %rd22698;
	shf.r.wrap.b32 	%r38893, %r38502, %r38501, 1;
	shf.r.wrap.b32 	%r38894, %r38501, %r38502, 1;
	mov.b64 	%rd22702, {%r38894, %r38893};
	shf.r.wrap.b32 	%r38895, %r38502, %r38501, 8;
	shf.r.wrap.b32 	%r38896, %r38501, %r38502, 8;
	mov.b64 	%rd22703, {%r38896, %r38895};
	shr.u64 	%rd22704, %rd22114, 7;
	xor.b64  	%rd22705, %rd22702, %rd22704;
	xor.b64  	%rd22706, %rd22705, %rd22703;
	add.s64 	%rd22707, %rd22618, %rd22101;
	add.s64 	%rd22708, %rd22707, %rd22701;
	add.s64 	%rd22709, %rd22708, %rd22706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38897,%dummy}, %rd22696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38898}, %rd22696;
	}
	shf.r.wrap.b32 	%r38899, %r38898, %r38897, 19;
	shf.r.wrap.b32 	%r38900, %r38897, %r38898, 19;
	mov.b64 	%rd22710, {%r38900, %r38899};
	shf.l.wrap.b32 	%r38901, %r38897, %r38898, 3;
	shf.l.wrap.b32 	%r38902, %r38898, %r38897, 3;
	mov.b64 	%rd22711, {%r38902, %r38901};
	shr.u64 	%rd22712, %rd22696, 6;
	xor.b64  	%rd22713, %rd22710, %rd22712;
	xor.b64  	%rd22714, %rd22713, %rd22711;
	shf.r.wrap.b32 	%r38903, %r38512, %r38511, 1;
	shf.r.wrap.b32 	%r38904, %r38511, %r38512, 1;
	mov.b64 	%rd22715, {%r38904, %r38903};
	shf.r.wrap.b32 	%r38905, %r38512, %r38511, 8;
	shf.r.wrap.b32 	%r38906, %r38511, %r38512, 8;
	mov.b64 	%rd22716, {%r38906, %r38905};
	shr.u64 	%rd22717, %rd22127, 7;
	xor.b64  	%rd22718, %rd22715, %rd22717;
	xor.b64  	%rd22719, %rd22718, %rd22716;
	add.s64 	%rd22720, %rd22631, %rd22114;
	add.s64 	%rd22721, %rd22720, %rd22714;
	add.s64 	%rd22722, %rd22721, %rd22719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38907,%dummy}, %rd22709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38908}, %rd22709;
	}
	shf.r.wrap.b32 	%r38909, %r38908, %r38907, 19;
	shf.r.wrap.b32 	%r38910, %r38907, %r38908, 19;
	mov.b64 	%rd22723, {%r38910, %r38909};
	shf.l.wrap.b32 	%r38911, %r38907, %r38908, 3;
	shf.l.wrap.b32 	%r38912, %r38908, %r38907, 3;
	mov.b64 	%rd22724, {%r38912, %r38911};
	shr.u64 	%rd22725, %rd22709, 6;
	xor.b64  	%rd22726, %rd22723, %rd22725;
	xor.b64  	%rd22727, %rd22726, %rd22724;
	shf.r.wrap.b32 	%r38913, %r38522, %r38521, 1;
	shf.r.wrap.b32 	%r38914, %r38521, %r38522, 1;
	mov.b64 	%rd22728, {%r38914, %r38913};
	shf.r.wrap.b32 	%r38915, %r38522, %r38521, 8;
	shf.r.wrap.b32 	%r38916, %r38521, %r38522, 8;
	mov.b64 	%rd22729, {%r38916, %r38915};
	shr.u64 	%rd22730, %rd22140, 7;
	xor.b64  	%rd22731, %rd22728, %rd22730;
	xor.b64  	%rd22732, %rd22731, %rd22729;
	add.s64 	%rd22733, %rd22644, %rd22127;
	add.s64 	%rd22734, %rd22733, %rd22727;
	add.s64 	%rd22735, %rd22734, %rd22732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38917,%dummy}, %rd22722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38918}, %rd22722;
	}
	shf.r.wrap.b32 	%r38919, %r38918, %r38917, 19;
	shf.r.wrap.b32 	%r38920, %r38917, %r38918, 19;
	mov.b64 	%rd22736, {%r38920, %r38919};
	shf.l.wrap.b32 	%r38921, %r38917, %r38918, 3;
	shf.l.wrap.b32 	%r38922, %r38918, %r38917, 3;
	mov.b64 	%rd22737, {%r38922, %r38921};
	shr.u64 	%rd22738, %rd22722, 6;
	xor.b64  	%rd22739, %rd22736, %rd22738;
	xor.b64  	%rd22740, %rd22739, %rd22737;
	shf.r.wrap.b32 	%r38923, %r38532, %r38531, 1;
	shf.r.wrap.b32 	%r38924, %r38531, %r38532, 1;
	mov.b64 	%rd22741, {%r38924, %r38923};
	shf.r.wrap.b32 	%r38925, %r38532, %r38531, 8;
	shf.r.wrap.b32 	%r38926, %r38531, %r38532, 8;
	mov.b64 	%rd22742, {%r38926, %r38925};
	shr.u64 	%rd22743, %rd22153, 7;
	xor.b64  	%rd22744, %rd22741, %rd22743;
	xor.b64  	%rd22745, %rd22744, %rd22742;
	add.s64 	%rd22746, %rd22657, %rd22140;
	add.s64 	%rd22747, %rd22746, %rd22740;
	add.s64 	%rd22748, %rd22747, %rd22745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38927,%dummy}, %rd22735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38928}, %rd22735;
	}
	shf.r.wrap.b32 	%r38929, %r38928, %r38927, 19;
	shf.r.wrap.b32 	%r38930, %r38927, %r38928, 19;
	mov.b64 	%rd22749, {%r38930, %r38929};
	shf.l.wrap.b32 	%r38931, %r38927, %r38928, 3;
	shf.l.wrap.b32 	%r38932, %r38928, %r38927, 3;
	mov.b64 	%rd22750, {%r38932, %r38931};
	shr.u64 	%rd22751, %rd22735, 6;
	xor.b64  	%rd22752, %rd22749, %rd22751;
	xor.b64  	%rd22753, %rd22752, %rd22750;
	shf.r.wrap.b32 	%r38933, %r38542, %r38541, 1;
	shf.r.wrap.b32 	%r38934, %r38541, %r38542, 1;
	mov.b64 	%rd22754, {%r38934, %r38933};
	shf.r.wrap.b32 	%r38935, %r38542, %r38541, 8;
	shf.r.wrap.b32 	%r38936, %r38541, %r38542, 8;
	mov.b64 	%rd22755, {%r38936, %r38935};
	shr.u64 	%rd22756, %rd22166, 7;
	xor.b64  	%rd22757, %rd22754, %rd22756;
	xor.b64  	%rd22758, %rd22757, %rd22755;
	add.s64 	%rd22759, %rd22670, %rd22153;
	add.s64 	%rd22760, %rd22759, %rd22753;
	add.s64 	%rd22761, %rd22760, %rd22758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38937,%dummy}, %rd22748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38938}, %rd22748;
	}
	shf.r.wrap.b32 	%r38939, %r38938, %r38937, 19;
	shf.r.wrap.b32 	%r38940, %r38937, %r38938, 19;
	mov.b64 	%rd22762, {%r38940, %r38939};
	shf.l.wrap.b32 	%r38941, %r38937, %r38938, 3;
	shf.l.wrap.b32 	%r38942, %r38938, %r38937, 3;
	mov.b64 	%rd22763, {%r38942, %r38941};
	shr.u64 	%rd22764, %rd22748, 6;
	xor.b64  	%rd22765, %rd22762, %rd22764;
	xor.b64  	%rd22766, %rd22765, %rd22763;
	shf.r.wrap.b32 	%r38943, %r38808, %r38807, 1;
	shf.r.wrap.b32 	%r38944, %r38807, %r38808, 1;
	mov.b64 	%rd22767, {%r38944, %r38943};
	shf.r.wrap.b32 	%r38945, %r38808, %r38807, 8;
	shf.r.wrap.b32 	%r38946, %r38807, %r38808, 8;
	mov.b64 	%rd22768, {%r38946, %r38945};
	shr.u64 	%rd22769, %rd22179, 7;
	xor.b64  	%rd22770, %rd22767, %rd22769;
	xor.b64  	%rd22771, %rd22770, %rd22768;
	add.s64 	%rd22772, %rd22683, %rd22166;
	add.s64 	%rd22773, %rd22772, %rd22766;
	add.s64 	%rd22774, %rd22773, %rd22771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38947,%dummy}, %rd22761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38948}, %rd22761;
	}
	shf.r.wrap.b32 	%r38949, %r38948, %r38947, 19;
	shf.r.wrap.b32 	%r38950, %r38947, %r38948, 19;
	mov.b64 	%rd22775, {%r38950, %r38949};
	shf.l.wrap.b32 	%r38951, %r38947, %r38948, 3;
	shf.l.wrap.b32 	%r38952, %r38948, %r38947, 3;
	mov.b64 	%rd22776, {%r38952, %r38951};
	shr.u64 	%rd22777, %rd22761, 6;
	xor.b64  	%rd22778, %rd22775, %rd22777;
	xor.b64  	%rd22779, %rd22778, %rd22776;
	shf.r.wrap.b32 	%r38953, %r38818, %r38817, 1;
	shf.r.wrap.b32 	%r38954, %r38817, %r38818, 1;
	mov.b64 	%rd22780, {%r38954, %r38953};
	shf.r.wrap.b32 	%r38955, %r38818, %r38817, 8;
	shf.r.wrap.b32 	%r38956, %r38817, %r38818, 8;
	mov.b64 	%rd22781, {%r38956, %r38955};
	shr.u64 	%rd22782, %rd22192, 7;
	xor.b64  	%rd22783, %rd22780, %rd22782;
	xor.b64  	%rd22784, %rd22783, %rd22781;
	add.s64 	%rd22785, %rd22696, %rd22179;
	add.s64 	%rd22786, %rd22785, %rd22779;
	add.s64 	%rd22787, %rd22786, %rd22784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38957,%dummy}, %rd22774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38958}, %rd22774;
	}
	shf.r.wrap.b32 	%r38959, %r38958, %r38957, 19;
	shf.r.wrap.b32 	%r38960, %r38957, %r38958, 19;
	mov.b64 	%rd22788, {%r38960, %r38959};
	shf.l.wrap.b32 	%r38961, %r38957, %r38958, 3;
	shf.l.wrap.b32 	%r38962, %r38958, %r38957, 3;
	mov.b64 	%rd22789, {%r38962, %r38961};
	shr.u64 	%rd22790, %rd22774, 6;
	xor.b64  	%rd22791, %rd22788, %rd22790;
	xor.b64  	%rd22792, %rd22791, %rd22789;
	shf.r.wrap.b32 	%r38963, %r38828, %r38827, 1;
	shf.r.wrap.b32 	%r38964, %r38827, %r38828, 1;
	mov.b64 	%rd22793, {%r38964, %r38963};
	shf.r.wrap.b32 	%r38965, %r38828, %r38827, 8;
	shf.r.wrap.b32 	%r38966, %r38827, %r38828, 8;
	mov.b64 	%rd22794, {%r38966, %r38965};
	shr.u64 	%rd22795, %rd22605, 7;
	xor.b64  	%rd22796, %rd22793, %rd22795;
	xor.b64  	%rd22797, %rd22796, %rd22794;
	add.s64 	%rd22798, %rd22709, %rd22192;
	add.s64 	%rd22799, %rd22798, %rd22792;
	add.s64 	%rd22800, %rd22799, %rd22797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38967,%dummy}, %rd22581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38968}, %rd22581;
	}
	shf.r.wrap.b32 	%r38969, %r38968, %r38967, 14;
	shf.r.wrap.b32 	%r38970, %r38967, %r38968, 14;
	mov.b64 	%rd22801, {%r38970, %r38969};
	shf.r.wrap.b32 	%r38971, %r38968, %r38967, 18;
	shf.r.wrap.b32 	%r38972, %r38967, %r38968, 18;
	mov.b64 	%rd22802, {%r38972, %r38971};
	xor.b64  	%rd22803, %rd22802, %rd22801;
	shf.l.wrap.b32 	%r38973, %r38967, %r38968, 23;
	shf.l.wrap.b32 	%r38974, %r38968, %r38967, 23;
	mov.b64 	%rd22804, {%r38974, %r38973};
	xor.b64  	%rd22805, %rd22803, %rd22804;
	xor.b64  	%rd22806, %rd22556, %rd22531;
	and.b64  	%rd22807, %rd22581, %rd22806;
	xor.b64  	%rd22808, %rd22807, %rd22531;
	add.s64 	%rd22809, %rd22808, %rd22506;
	add.s64 	%rd22810, %rd22809, %rd22605;
	ld.const.u64 	%rd22811, [k_sha512+512];
	add.s64 	%rd22812, %rd22810, %rd22811;
	add.s64 	%rd22813, %rd22812, %rd22805;
	add.s64 	%rd22814, %rd22813, %rd22517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38975,%dummy}, %rd22592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38976}, %rd22592;
	}
	shf.r.wrap.b32 	%r38977, %r38976, %r38975, 28;
	shf.r.wrap.b32 	%r38978, %r38975, %r38976, 28;
	mov.b64 	%rd22815, {%r38978, %r38977};
	shf.l.wrap.b32 	%r38979, %r38975, %r38976, 30;
	shf.l.wrap.b32 	%r38980, %r38976, %r38975, 30;
	mov.b64 	%rd22816, {%r38980, %r38979};
	xor.b64  	%rd22817, %rd22816, %rd22815;
	shf.l.wrap.b32 	%r38981, %r38975, %r38976, 25;
	shf.l.wrap.b32 	%r38982, %r38976, %r38975, 25;
	mov.b64 	%rd22818, {%r38982, %r38981};
	xor.b64  	%rd22819, %rd22817, %rd22818;
	and.b64  	%rd22820, %rd22592, %rd22567;
	xor.b64  	%rd22821, %rd22592, %rd22567;
	and.b64  	%rd22822, %rd22821, %rd22542;
	or.b64  	%rd22823, %rd22822, %rd22820;
	add.s64 	%rd22824, %rd22813, %rd22823;
	add.s64 	%rd22825, %rd22824, %rd22819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38983,%dummy}, %rd22814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38984}, %rd22814;
	}
	shf.r.wrap.b32 	%r38985, %r38984, %r38983, 14;
	shf.r.wrap.b32 	%r38986, %r38983, %r38984, 14;
	mov.b64 	%rd22826, {%r38986, %r38985};
	shf.r.wrap.b32 	%r38987, %r38984, %r38983, 18;
	shf.r.wrap.b32 	%r38988, %r38983, %r38984, 18;
	mov.b64 	%rd22827, {%r38988, %r38987};
	xor.b64  	%rd22828, %rd22827, %rd22826;
	shf.l.wrap.b32 	%r38989, %r38983, %r38984, 23;
	shf.l.wrap.b32 	%r38990, %r38984, %r38983, 23;
	mov.b64 	%rd22829, {%r38990, %r38989};
	xor.b64  	%rd22830, %rd22828, %rd22829;
	xor.b64  	%rd22831, %rd22581, %rd22556;
	and.b64  	%rd22832, %rd22814, %rd22831;
	xor.b64  	%rd22833, %rd22832, %rd22556;
	add.s64 	%rd22834, %rd22618, %rd22531;
	ld.const.u64 	%rd22835, [k_sha512+520];
	add.s64 	%rd22836, %rd22834, %rd22835;
	add.s64 	%rd22837, %rd22836, %rd22833;
	add.s64 	%rd22838, %rd22837, %rd22830;
	add.s64 	%rd22839, %rd22838, %rd22542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38991,%dummy}, %rd22825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38992}, %rd22825;
	}
	shf.r.wrap.b32 	%r38993, %r38992, %r38991, 28;
	shf.r.wrap.b32 	%r38994, %r38991, %r38992, 28;
	mov.b64 	%rd22840, {%r38994, %r38993};
	shf.l.wrap.b32 	%r38995, %r38991, %r38992, 30;
	shf.l.wrap.b32 	%r38996, %r38992, %r38991, 30;
	mov.b64 	%rd22841, {%r38996, %r38995};
	xor.b64  	%rd22842, %rd22841, %rd22840;
	shf.l.wrap.b32 	%r38997, %r38991, %r38992, 25;
	shf.l.wrap.b32 	%r38998, %r38992, %r38991, 25;
	mov.b64 	%rd22843, {%r38998, %r38997};
	xor.b64  	%rd22844, %rd22842, %rd22843;
	and.b64  	%rd22845, %rd22825, %rd22592;
	xor.b64  	%rd22846, %rd22825, %rd22592;
	and.b64  	%rd22847, %rd22846, %rd22567;
	or.b64  	%rd22848, %rd22847, %rd22845;
	add.s64 	%rd22849, %rd22838, %rd22848;
	add.s64 	%rd22850, %rd22849, %rd22844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r38999,%dummy}, %rd22839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39000}, %rd22839;
	}
	shf.r.wrap.b32 	%r39001, %r39000, %r38999, 14;
	shf.r.wrap.b32 	%r39002, %r38999, %r39000, 14;
	mov.b64 	%rd22851, {%r39002, %r39001};
	shf.r.wrap.b32 	%r39003, %r39000, %r38999, 18;
	shf.r.wrap.b32 	%r39004, %r38999, %r39000, 18;
	mov.b64 	%rd22852, {%r39004, %r39003};
	xor.b64  	%rd22853, %rd22852, %rd22851;
	shf.l.wrap.b32 	%r39005, %r38999, %r39000, 23;
	shf.l.wrap.b32 	%r39006, %r39000, %r38999, 23;
	mov.b64 	%rd22854, {%r39006, %r39005};
	xor.b64  	%rd22855, %rd22853, %rd22854;
	xor.b64  	%rd22856, %rd22814, %rd22581;
	and.b64  	%rd22857, %rd22839, %rd22856;
	xor.b64  	%rd22858, %rd22857, %rd22581;
	add.s64 	%rd22859, %rd22631, %rd22556;
	ld.const.u64 	%rd22860, [k_sha512+528];
	add.s64 	%rd22861, %rd22859, %rd22860;
	add.s64 	%rd22862, %rd22861, %rd22858;
	add.s64 	%rd22863, %rd22862, %rd22855;
	add.s64 	%rd22864, %rd22863, %rd22567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39007,%dummy}, %rd22850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39008}, %rd22850;
	}
	shf.r.wrap.b32 	%r39009, %r39008, %r39007, 28;
	shf.r.wrap.b32 	%r39010, %r39007, %r39008, 28;
	mov.b64 	%rd22865, {%r39010, %r39009};
	shf.l.wrap.b32 	%r39011, %r39007, %r39008, 30;
	shf.l.wrap.b32 	%r39012, %r39008, %r39007, 30;
	mov.b64 	%rd22866, {%r39012, %r39011};
	xor.b64  	%rd22867, %rd22866, %rd22865;
	shf.l.wrap.b32 	%r39013, %r39007, %r39008, 25;
	shf.l.wrap.b32 	%r39014, %r39008, %r39007, 25;
	mov.b64 	%rd22868, {%r39014, %r39013};
	xor.b64  	%rd22869, %rd22867, %rd22868;
	and.b64  	%rd22870, %rd22850, %rd22825;
	xor.b64  	%rd22871, %rd22850, %rd22825;
	and.b64  	%rd22872, %rd22871, %rd22592;
	or.b64  	%rd22873, %rd22872, %rd22870;
	add.s64 	%rd22874, %rd22863, %rd22873;
	add.s64 	%rd22875, %rd22874, %rd22869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39015,%dummy}, %rd22864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39016}, %rd22864;
	}
	shf.r.wrap.b32 	%r39017, %r39016, %r39015, 14;
	shf.r.wrap.b32 	%r39018, %r39015, %r39016, 14;
	mov.b64 	%rd22876, {%r39018, %r39017};
	shf.r.wrap.b32 	%r39019, %r39016, %r39015, 18;
	shf.r.wrap.b32 	%r39020, %r39015, %r39016, 18;
	mov.b64 	%rd22877, {%r39020, %r39019};
	xor.b64  	%rd22878, %rd22877, %rd22876;
	shf.l.wrap.b32 	%r39021, %r39015, %r39016, 23;
	shf.l.wrap.b32 	%r39022, %r39016, %r39015, 23;
	mov.b64 	%rd22879, {%r39022, %r39021};
	xor.b64  	%rd22880, %rd22878, %rd22879;
	xor.b64  	%rd22881, %rd22839, %rd22814;
	and.b64  	%rd22882, %rd22864, %rd22881;
	xor.b64  	%rd22883, %rd22882, %rd22814;
	add.s64 	%rd22884, %rd22644, %rd22581;
	ld.const.u64 	%rd22885, [k_sha512+536];
	add.s64 	%rd22886, %rd22884, %rd22885;
	add.s64 	%rd22887, %rd22886, %rd22883;
	add.s64 	%rd22888, %rd22887, %rd22880;
	add.s64 	%rd22889, %rd22888, %rd22592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39023,%dummy}, %rd22875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39024}, %rd22875;
	}
	shf.r.wrap.b32 	%r39025, %r39024, %r39023, 28;
	shf.r.wrap.b32 	%r39026, %r39023, %r39024, 28;
	mov.b64 	%rd22890, {%r39026, %r39025};
	shf.l.wrap.b32 	%r39027, %r39023, %r39024, 30;
	shf.l.wrap.b32 	%r39028, %r39024, %r39023, 30;
	mov.b64 	%rd22891, {%r39028, %r39027};
	xor.b64  	%rd22892, %rd22891, %rd22890;
	shf.l.wrap.b32 	%r39029, %r39023, %r39024, 25;
	shf.l.wrap.b32 	%r39030, %r39024, %r39023, 25;
	mov.b64 	%rd22893, {%r39030, %r39029};
	xor.b64  	%rd22894, %rd22892, %rd22893;
	and.b64  	%rd22895, %rd22875, %rd22850;
	xor.b64  	%rd22896, %rd22875, %rd22850;
	and.b64  	%rd22897, %rd22896, %rd22825;
	or.b64  	%rd22898, %rd22897, %rd22895;
	add.s64 	%rd22899, %rd22888, %rd22898;
	add.s64 	%rd22900, %rd22899, %rd22894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39031,%dummy}, %rd22889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39032}, %rd22889;
	}
	shf.r.wrap.b32 	%r39033, %r39032, %r39031, 14;
	shf.r.wrap.b32 	%r39034, %r39031, %r39032, 14;
	mov.b64 	%rd22901, {%r39034, %r39033};
	shf.r.wrap.b32 	%r39035, %r39032, %r39031, 18;
	shf.r.wrap.b32 	%r39036, %r39031, %r39032, 18;
	mov.b64 	%rd22902, {%r39036, %r39035};
	xor.b64  	%rd22903, %rd22902, %rd22901;
	shf.l.wrap.b32 	%r39037, %r39031, %r39032, 23;
	shf.l.wrap.b32 	%r39038, %r39032, %r39031, 23;
	mov.b64 	%rd22904, {%r39038, %r39037};
	xor.b64  	%rd22905, %rd22903, %rd22904;
	xor.b64  	%rd22906, %rd22864, %rd22839;
	and.b64  	%rd22907, %rd22889, %rd22906;
	xor.b64  	%rd22908, %rd22907, %rd22839;
	add.s64 	%rd22909, %rd22814, %rd22657;
	ld.const.u64 	%rd22910, [k_sha512+544];
	add.s64 	%rd22911, %rd22909, %rd22910;
	add.s64 	%rd22912, %rd22911, %rd22908;
	add.s64 	%rd22913, %rd22912, %rd22905;
	add.s64 	%rd22914, %rd22913, %rd22825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39039,%dummy}, %rd22900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39040}, %rd22900;
	}
	shf.r.wrap.b32 	%r39041, %r39040, %r39039, 28;
	shf.r.wrap.b32 	%r39042, %r39039, %r39040, 28;
	mov.b64 	%rd22915, {%r39042, %r39041};
	shf.l.wrap.b32 	%r39043, %r39039, %r39040, 30;
	shf.l.wrap.b32 	%r39044, %r39040, %r39039, 30;
	mov.b64 	%rd22916, {%r39044, %r39043};
	xor.b64  	%rd22917, %rd22916, %rd22915;
	shf.l.wrap.b32 	%r39045, %r39039, %r39040, 25;
	shf.l.wrap.b32 	%r39046, %r39040, %r39039, 25;
	mov.b64 	%rd22918, {%r39046, %r39045};
	xor.b64  	%rd22919, %rd22917, %rd22918;
	and.b64  	%rd22920, %rd22900, %rd22875;
	xor.b64  	%rd22921, %rd22900, %rd22875;
	and.b64  	%rd22922, %rd22921, %rd22850;
	or.b64  	%rd22923, %rd22922, %rd22920;
	add.s64 	%rd22924, %rd22913, %rd22923;
	add.s64 	%rd22925, %rd22924, %rd22919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39047,%dummy}, %rd22914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39048}, %rd22914;
	}
	shf.r.wrap.b32 	%r39049, %r39048, %r39047, 14;
	shf.r.wrap.b32 	%r39050, %r39047, %r39048, 14;
	mov.b64 	%rd22926, {%r39050, %r39049};
	shf.r.wrap.b32 	%r39051, %r39048, %r39047, 18;
	shf.r.wrap.b32 	%r39052, %r39047, %r39048, 18;
	mov.b64 	%rd22927, {%r39052, %r39051};
	xor.b64  	%rd22928, %rd22927, %rd22926;
	shf.l.wrap.b32 	%r39053, %r39047, %r39048, 23;
	shf.l.wrap.b32 	%r39054, %r39048, %r39047, 23;
	mov.b64 	%rd22929, {%r39054, %r39053};
	xor.b64  	%rd22930, %rd22928, %rd22929;
	xor.b64  	%rd22931, %rd22889, %rd22864;
	and.b64  	%rd22932, %rd22914, %rd22931;
	xor.b64  	%rd22933, %rd22932, %rd22864;
	add.s64 	%rd22934, %rd22839, %rd22670;
	ld.const.u64 	%rd22935, [k_sha512+552];
	add.s64 	%rd22936, %rd22934, %rd22935;
	add.s64 	%rd22937, %rd22936, %rd22933;
	add.s64 	%rd22938, %rd22937, %rd22930;
	add.s64 	%rd22939, %rd22938, %rd22850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39055,%dummy}, %rd22925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39056}, %rd22925;
	}
	shf.r.wrap.b32 	%r39057, %r39056, %r39055, 28;
	shf.r.wrap.b32 	%r39058, %r39055, %r39056, 28;
	mov.b64 	%rd22940, {%r39058, %r39057};
	shf.l.wrap.b32 	%r39059, %r39055, %r39056, 30;
	shf.l.wrap.b32 	%r39060, %r39056, %r39055, 30;
	mov.b64 	%rd22941, {%r39060, %r39059};
	xor.b64  	%rd22942, %rd22941, %rd22940;
	shf.l.wrap.b32 	%r39061, %r39055, %r39056, 25;
	shf.l.wrap.b32 	%r39062, %r39056, %r39055, 25;
	mov.b64 	%rd22943, {%r39062, %r39061};
	xor.b64  	%rd22944, %rd22942, %rd22943;
	and.b64  	%rd22945, %rd22925, %rd22900;
	xor.b64  	%rd22946, %rd22925, %rd22900;
	and.b64  	%rd22947, %rd22946, %rd22875;
	or.b64  	%rd22948, %rd22947, %rd22945;
	add.s64 	%rd22949, %rd22938, %rd22948;
	add.s64 	%rd22950, %rd22949, %rd22944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39063,%dummy}, %rd22939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39064}, %rd22939;
	}
	shf.r.wrap.b32 	%r39065, %r39064, %r39063, 14;
	shf.r.wrap.b32 	%r39066, %r39063, %r39064, 14;
	mov.b64 	%rd22951, {%r39066, %r39065};
	shf.r.wrap.b32 	%r39067, %r39064, %r39063, 18;
	shf.r.wrap.b32 	%r39068, %r39063, %r39064, 18;
	mov.b64 	%rd22952, {%r39068, %r39067};
	xor.b64  	%rd22953, %rd22952, %rd22951;
	shf.l.wrap.b32 	%r39069, %r39063, %r39064, 23;
	shf.l.wrap.b32 	%r39070, %r39064, %r39063, 23;
	mov.b64 	%rd22954, {%r39070, %r39069};
	xor.b64  	%rd22955, %rd22953, %rd22954;
	xor.b64  	%rd22956, %rd22914, %rd22889;
	and.b64  	%rd22957, %rd22939, %rd22956;
	xor.b64  	%rd22958, %rd22957, %rd22889;
	add.s64 	%rd22959, %rd22864, %rd22683;
	ld.const.u64 	%rd22960, [k_sha512+560];
	add.s64 	%rd22961, %rd22959, %rd22960;
	add.s64 	%rd22962, %rd22961, %rd22958;
	add.s64 	%rd22963, %rd22962, %rd22955;
	add.s64 	%rd22964, %rd22963, %rd22875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39071,%dummy}, %rd22950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39072}, %rd22950;
	}
	shf.r.wrap.b32 	%r39073, %r39072, %r39071, 28;
	shf.r.wrap.b32 	%r39074, %r39071, %r39072, 28;
	mov.b64 	%rd22965, {%r39074, %r39073};
	shf.l.wrap.b32 	%r39075, %r39071, %r39072, 30;
	shf.l.wrap.b32 	%r39076, %r39072, %r39071, 30;
	mov.b64 	%rd22966, {%r39076, %r39075};
	xor.b64  	%rd22967, %rd22966, %rd22965;
	shf.l.wrap.b32 	%r39077, %r39071, %r39072, 25;
	shf.l.wrap.b32 	%r39078, %r39072, %r39071, 25;
	mov.b64 	%rd22968, {%r39078, %r39077};
	xor.b64  	%rd22969, %rd22967, %rd22968;
	and.b64  	%rd22970, %rd22950, %rd22925;
	xor.b64  	%rd22971, %rd22950, %rd22925;
	and.b64  	%rd22972, %rd22971, %rd22900;
	or.b64  	%rd22973, %rd22972, %rd22970;
	add.s64 	%rd22974, %rd22963, %rd22973;
	add.s64 	%rd22975, %rd22974, %rd22969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39079,%dummy}, %rd22964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39080}, %rd22964;
	}
	shf.r.wrap.b32 	%r39081, %r39080, %r39079, 14;
	shf.r.wrap.b32 	%r39082, %r39079, %r39080, 14;
	mov.b64 	%rd22976, {%r39082, %r39081};
	shf.r.wrap.b32 	%r39083, %r39080, %r39079, 18;
	shf.r.wrap.b32 	%r39084, %r39079, %r39080, 18;
	mov.b64 	%rd22977, {%r39084, %r39083};
	xor.b64  	%rd22978, %rd22977, %rd22976;
	shf.l.wrap.b32 	%r39085, %r39079, %r39080, 23;
	shf.l.wrap.b32 	%r39086, %r39080, %r39079, 23;
	mov.b64 	%rd22979, {%r39086, %r39085};
	xor.b64  	%rd22980, %rd22978, %rd22979;
	xor.b64  	%rd22981, %rd22939, %rd22914;
	and.b64  	%rd22982, %rd22964, %rd22981;
	xor.b64  	%rd22983, %rd22982, %rd22914;
	add.s64 	%rd22984, %rd22889, %rd22696;
	ld.const.u64 	%rd22985, [k_sha512+568];
	add.s64 	%rd22986, %rd22984, %rd22985;
	add.s64 	%rd22987, %rd22986, %rd22983;
	add.s64 	%rd22988, %rd22987, %rd22980;
	add.s64 	%rd22989, %rd22988, %rd22900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39087,%dummy}, %rd22975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39088}, %rd22975;
	}
	shf.r.wrap.b32 	%r39089, %r39088, %r39087, 28;
	shf.r.wrap.b32 	%r39090, %r39087, %r39088, 28;
	mov.b64 	%rd22990, {%r39090, %r39089};
	shf.l.wrap.b32 	%r39091, %r39087, %r39088, 30;
	shf.l.wrap.b32 	%r39092, %r39088, %r39087, 30;
	mov.b64 	%rd22991, {%r39092, %r39091};
	xor.b64  	%rd22992, %rd22991, %rd22990;
	shf.l.wrap.b32 	%r39093, %r39087, %r39088, 25;
	shf.l.wrap.b32 	%r39094, %r39088, %r39087, 25;
	mov.b64 	%rd22993, {%r39094, %r39093};
	xor.b64  	%rd22994, %rd22992, %rd22993;
	and.b64  	%rd22995, %rd22975, %rd22950;
	xor.b64  	%rd22996, %rd22975, %rd22950;
	and.b64  	%rd22997, %rd22996, %rd22925;
	or.b64  	%rd22998, %rd22997, %rd22995;
	add.s64 	%rd22999, %rd22988, %rd22998;
	add.s64 	%rd23000, %rd22999, %rd22994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39095,%dummy}, %rd22989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39096}, %rd22989;
	}
	shf.r.wrap.b32 	%r39097, %r39096, %r39095, 14;
	shf.r.wrap.b32 	%r39098, %r39095, %r39096, 14;
	mov.b64 	%rd23001, {%r39098, %r39097};
	shf.r.wrap.b32 	%r39099, %r39096, %r39095, 18;
	shf.r.wrap.b32 	%r39100, %r39095, %r39096, 18;
	mov.b64 	%rd23002, {%r39100, %r39099};
	xor.b64  	%rd23003, %rd23002, %rd23001;
	shf.l.wrap.b32 	%r39101, %r39095, %r39096, 23;
	shf.l.wrap.b32 	%r39102, %r39096, %r39095, 23;
	mov.b64 	%rd23004, {%r39102, %r39101};
	xor.b64  	%rd23005, %rd23003, %rd23004;
	xor.b64  	%rd23006, %rd22964, %rd22939;
	and.b64  	%rd23007, %rd22989, %rd23006;
	xor.b64  	%rd23008, %rd23007, %rd22939;
	add.s64 	%rd23009, %rd22914, %rd22709;
	ld.const.u64 	%rd23010, [k_sha512+576];
	add.s64 	%rd23011, %rd23009, %rd23010;
	add.s64 	%rd23012, %rd23011, %rd23008;
	add.s64 	%rd23013, %rd23012, %rd23005;
	add.s64 	%rd23014, %rd23013, %rd22925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39103,%dummy}, %rd23000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39104}, %rd23000;
	}
	shf.r.wrap.b32 	%r39105, %r39104, %r39103, 28;
	shf.r.wrap.b32 	%r39106, %r39103, %r39104, 28;
	mov.b64 	%rd23015, {%r39106, %r39105};
	shf.l.wrap.b32 	%r39107, %r39103, %r39104, 30;
	shf.l.wrap.b32 	%r39108, %r39104, %r39103, 30;
	mov.b64 	%rd23016, {%r39108, %r39107};
	xor.b64  	%rd23017, %rd23016, %rd23015;
	shf.l.wrap.b32 	%r39109, %r39103, %r39104, 25;
	shf.l.wrap.b32 	%r39110, %r39104, %r39103, 25;
	mov.b64 	%rd23018, {%r39110, %r39109};
	xor.b64  	%rd23019, %rd23017, %rd23018;
	and.b64  	%rd23020, %rd23000, %rd22975;
	xor.b64  	%rd23021, %rd23000, %rd22975;
	and.b64  	%rd23022, %rd23021, %rd22950;
	or.b64  	%rd23023, %rd23022, %rd23020;
	add.s64 	%rd23024, %rd23013, %rd23023;
	add.s64 	%rd23025, %rd23024, %rd23019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39111,%dummy}, %rd23014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39112}, %rd23014;
	}
	shf.r.wrap.b32 	%r39113, %r39112, %r39111, 14;
	shf.r.wrap.b32 	%r39114, %r39111, %r39112, 14;
	mov.b64 	%rd23026, {%r39114, %r39113};
	shf.r.wrap.b32 	%r39115, %r39112, %r39111, 18;
	shf.r.wrap.b32 	%r39116, %r39111, %r39112, 18;
	mov.b64 	%rd23027, {%r39116, %r39115};
	xor.b64  	%rd23028, %rd23027, %rd23026;
	shf.l.wrap.b32 	%r39117, %r39111, %r39112, 23;
	shf.l.wrap.b32 	%r39118, %r39112, %r39111, 23;
	mov.b64 	%rd23029, {%r39118, %r39117};
	xor.b64  	%rd23030, %rd23028, %rd23029;
	xor.b64  	%rd23031, %rd22989, %rd22964;
	and.b64  	%rd23032, %rd23014, %rd23031;
	xor.b64  	%rd23033, %rd23032, %rd22964;
	add.s64 	%rd23034, %rd22939, %rd22722;
	ld.const.u64 	%rd23035, [k_sha512+584];
	add.s64 	%rd23036, %rd23034, %rd23035;
	add.s64 	%rd23037, %rd23036, %rd23033;
	add.s64 	%rd23038, %rd23037, %rd23030;
	add.s64 	%rd23039, %rd23038, %rd22950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39119,%dummy}, %rd23025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39120}, %rd23025;
	}
	shf.r.wrap.b32 	%r39121, %r39120, %r39119, 28;
	shf.r.wrap.b32 	%r39122, %r39119, %r39120, 28;
	mov.b64 	%rd23040, {%r39122, %r39121};
	shf.l.wrap.b32 	%r39123, %r39119, %r39120, 30;
	shf.l.wrap.b32 	%r39124, %r39120, %r39119, 30;
	mov.b64 	%rd23041, {%r39124, %r39123};
	xor.b64  	%rd23042, %rd23041, %rd23040;
	shf.l.wrap.b32 	%r39125, %r39119, %r39120, 25;
	shf.l.wrap.b32 	%r39126, %r39120, %r39119, 25;
	mov.b64 	%rd23043, {%r39126, %r39125};
	xor.b64  	%rd23044, %rd23042, %rd23043;
	and.b64  	%rd23045, %rd23025, %rd23000;
	xor.b64  	%rd23046, %rd23025, %rd23000;
	and.b64  	%rd23047, %rd23046, %rd22975;
	or.b64  	%rd23048, %rd23047, %rd23045;
	add.s64 	%rd23049, %rd23038, %rd23048;
	add.s64 	%rd23050, %rd23049, %rd23044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39127,%dummy}, %rd23039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39128}, %rd23039;
	}
	shf.r.wrap.b32 	%r39129, %r39128, %r39127, 14;
	shf.r.wrap.b32 	%r39130, %r39127, %r39128, 14;
	mov.b64 	%rd23051, {%r39130, %r39129};
	shf.r.wrap.b32 	%r39131, %r39128, %r39127, 18;
	shf.r.wrap.b32 	%r39132, %r39127, %r39128, 18;
	mov.b64 	%rd23052, {%r39132, %r39131};
	xor.b64  	%rd23053, %rd23052, %rd23051;
	shf.l.wrap.b32 	%r39133, %r39127, %r39128, 23;
	shf.l.wrap.b32 	%r39134, %r39128, %r39127, 23;
	mov.b64 	%rd23054, {%r39134, %r39133};
	xor.b64  	%rd23055, %rd23053, %rd23054;
	xor.b64  	%rd23056, %rd23014, %rd22989;
	and.b64  	%rd23057, %rd23039, %rd23056;
	xor.b64  	%rd23058, %rd23057, %rd22989;
	add.s64 	%rd23059, %rd22964, %rd22735;
	ld.const.u64 	%rd23060, [k_sha512+592];
	add.s64 	%rd23061, %rd23059, %rd23060;
	add.s64 	%rd23062, %rd23061, %rd23058;
	add.s64 	%rd23063, %rd23062, %rd23055;
	add.s64 	%rd23064, %rd23063, %rd22975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39135,%dummy}, %rd23050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39136}, %rd23050;
	}
	shf.r.wrap.b32 	%r39137, %r39136, %r39135, 28;
	shf.r.wrap.b32 	%r39138, %r39135, %r39136, 28;
	mov.b64 	%rd23065, {%r39138, %r39137};
	shf.l.wrap.b32 	%r39139, %r39135, %r39136, 30;
	shf.l.wrap.b32 	%r39140, %r39136, %r39135, 30;
	mov.b64 	%rd23066, {%r39140, %r39139};
	xor.b64  	%rd23067, %rd23066, %rd23065;
	shf.l.wrap.b32 	%r39141, %r39135, %r39136, 25;
	shf.l.wrap.b32 	%r39142, %r39136, %r39135, 25;
	mov.b64 	%rd23068, {%r39142, %r39141};
	xor.b64  	%rd23069, %rd23067, %rd23068;
	and.b64  	%rd23070, %rd23050, %rd23025;
	xor.b64  	%rd23071, %rd23050, %rd23025;
	and.b64  	%rd23072, %rd23071, %rd23000;
	or.b64  	%rd23073, %rd23072, %rd23070;
	add.s64 	%rd23074, %rd23063, %rd23073;
	add.s64 	%rd23075, %rd23074, %rd23069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39143,%dummy}, %rd23064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39144}, %rd23064;
	}
	shf.r.wrap.b32 	%r39145, %r39144, %r39143, 14;
	shf.r.wrap.b32 	%r39146, %r39143, %r39144, 14;
	mov.b64 	%rd23076, {%r39146, %r39145};
	shf.r.wrap.b32 	%r39147, %r39144, %r39143, 18;
	shf.r.wrap.b32 	%r39148, %r39143, %r39144, 18;
	mov.b64 	%rd23077, {%r39148, %r39147};
	xor.b64  	%rd23078, %rd23077, %rd23076;
	shf.l.wrap.b32 	%r39149, %r39143, %r39144, 23;
	shf.l.wrap.b32 	%r39150, %r39144, %r39143, 23;
	mov.b64 	%rd23079, {%r39150, %r39149};
	xor.b64  	%rd23080, %rd23078, %rd23079;
	xor.b64  	%rd23081, %rd23039, %rd23014;
	and.b64  	%rd23082, %rd23064, %rd23081;
	xor.b64  	%rd23083, %rd23082, %rd23014;
	add.s64 	%rd23084, %rd22989, %rd22748;
	ld.const.u64 	%rd23085, [k_sha512+600];
	add.s64 	%rd23086, %rd23084, %rd23085;
	add.s64 	%rd23087, %rd23086, %rd23083;
	add.s64 	%rd23088, %rd23087, %rd23080;
	add.s64 	%rd23089, %rd23088, %rd23000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39151,%dummy}, %rd23075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39152}, %rd23075;
	}
	shf.r.wrap.b32 	%r39153, %r39152, %r39151, 28;
	shf.r.wrap.b32 	%r39154, %r39151, %r39152, 28;
	mov.b64 	%rd23090, {%r39154, %r39153};
	shf.l.wrap.b32 	%r39155, %r39151, %r39152, 30;
	shf.l.wrap.b32 	%r39156, %r39152, %r39151, 30;
	mov.b64 	%rd23091, {%r39156, %r39155};
	xor.b64  	%rd23092, %rd23091, %rd23090;
	shf.l.wrap.b32 	%r39157, %r39151, %r39152, 25;
	shf.l.wrap.b32 	%r39158, %r39152, %r39151, 25;
	mov.b64 	%rd23093, {%r39158, %r39157};
	xor.b64  	%rd23094, %rd23092, %rd23093;
	and.b64  	%rd23095, %rd23075, %rd23050;
	xor.b64  	%rd23096, %rd23075, %rd23050;
	and.b64  	%rd23097, %rd23096, %rd23025;
	or.b64  	%rd23098, %rd23097, %rd23095;
	add.s64 	%rd23099, %rd23088, %rd23098;
	add.s64 	%rd23100, %rd23099, %rd23094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39159,%dummy}, %rd23089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39160}, %rd23089;
	}
	shf.r.wrap.b32 	%r39161, %r39160, %r39159, 14;
	shf.r.wrap.b32 	%r39162, %r39159, %r39160, 14;
	mov.b64 	%rd23101, {%r39162, %r39161};
	shf.r.wrap.b32 	%r39163, %r39160, %r39159, 18;
	shf.r.wrap.b32 	%r39164, %r39159, %r39160, 18;
	mov.b64 	%rd23102, {%r39164, %r39163};
	xor.b64  	%rd23103, %rd23102, %rd23101;
	shf.l.wrap.b32 	%r39165, %r39159, %r39160, 23;
	shf.l.wrap.b32 	%r39166, %r39160, %r39159, 23;
	mov.b64 	%rd23104, {%r39166, %r39165};
	xor.b64  	%rd23105, %rd23103, %rd23104;
	xor.b64  	%rd23106, %rd23064, %rd23039;
	and.b64  	%rd23107, %rd23089, %rd23106;
	xor.b64  	%rd23108, %rd23107, %rd23039;
	add.s64 	%rd23109, %rd23014, %rd22761;
	ld.const.u64 	%rd23110, [k_sha512+608];
	add.s64 	%rd23111, %rd23109, %rd23110;
	add.s64 	%rd23112, %rd23111, %rd23108;
	add.s64 	%rd23113, %rd23112, %rd23105;
	add.s64 	%rd23114, %rd23113, %rd23025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39167,%dummy}, %rd23100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39168}, %rd23100;
	}
	shf.r.wrap.b32 	%r39169, %r39168, %r39167, 28;
	shf.r.wrap.b32 	%r39170, %r39167, %r39168, 28;
	mov.b64 	%rd23115, {%r39170, %r39169};
	shf.l.wrap.b32 	%r39171, %r39167, %r39168, 30;
	shf.l.wrap.b32 	%r39172, %r39168, %r39167, 30;
	mov.b64 	%rd23116, {%r39172, %r39171};
	xor.b64  	%rd23117, %rd23116, %rd23115;
	shf.l.wrap.b32 	%r39173, %r39167, %r39168, 25;
	shf.l.wrap.b32 	%r39174, %r39168, %r39167, 25;
	mov.b64 	%rd23118, {%r39174, %r39173};
	xor.b64  	%rd23119, %rd23117, %rd23118;
	and.b64  	%rd23120, %rd23100, %rd23075;
	xor.b64  	%rd23121, %rd23100, %rd23075;
	and.b64  	%rd23122, %rd23121, %rd23050;
	or.b64  	%rd23123, %rd23122, %rd23120;
	add.s64 	%rd23124, %rd23113, %rd23123;
	add.s64 	%rd23125, %rd23124, %rd23119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39175,%dummy}, %rd23114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39176}, %rd23114;
	}
	shf.r.wrap.b32 	%r39177, %r39176, %r39175, 14;
	shf.r.wrap.b32 	%r39178, %r39175, %r39176, 14;
	mov.b64 	%rd23126, {%r39178, %r39177};
	shf.r.wrap.b32 	%r39179, %r39176, %r39175, 18;
	shf.r.wrap.b32 	%r39180, %r39175, %r39176, 18;
	mov.b64 	%rd23127, {%r39180, %r39179};
	xor.b64  	%rd23128, %rd23127, %rd23126;
	shf.l.wrap.b32 	%r39181, %r39175, %r39176, 23;
	shf.l.wrap.b32 	%r39182, %r39176, %r39175, 23;
	mov.b64 	%rd23129, {%r39182, %r39181};
	xor.b64  	%rd23130, %rd23128, %rd23129;
	xor.b64  	%rd23131, %rd23089, %rd23064;
	and.b64  	%rd23132, %rd23114, %rd23131;
	xor.b64  	%rd23133, %rd23132, %rd23064;
	add.s64 	%rd23134, %rd23039, %rd22774;
	ld.const.u64 	%rd23135, [k_sha512+616];
	add.s64 	%rd23136, %rd23134, %rd23135;
	add.s64 	%rd23137, %rd23136, %rd23133;
	add.s64 	%rd23138, %rd23137, %rd23130;
	add.s64 	%rd23139, %rd23138, %rd23050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39183,%dummy}, %rd23125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39184}, %rd23125;
	}
	shf.r.wrap.b32 	%r39185, %r39184, %r39183, 28;
	shf.r.wrap.b32 	%r39186, %r39183, %r39184, 28;
	mov.b64 	%rd23140, {%r39186, %r39185};
	shf.l.wrap.b32 	%r39187, %r39183, %r39184, 30;
	shf.l.wrap.b32 	%r39188, %r39184, %r39183, 30;
	mov.b64 	%rd23141, {%r39188, %r39187};
	xor.b64  	%rd23142, %rd23141, %rd23140;
	shf.l.wrap.b32 	%r39189, %r39183, %r39184, 25;
	shf.l.wrap.b32 	%r39190, %r39184, %r39183, 25;
	mov.b64 	%rd23143, {%r39190, %r39189};
	xor.b64  	%rd23144, %rd23142, %rd23143;
	and.b64  	%rd23145, %rd23125, %rd23100;
	xor.b64  	%rd23146, %rd23125, %rd23100;
	and.b64  	%rd23147, %rd23146, %rd23075;
	or.b64  	%rd23148, %rd23147, %rd23145;
	add.s64 	%rd23149, %rd23138, %rd23148;
	add.s64 	%rd23150, %rd23149, %rd23144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39191,%dummy}, %rd23139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39192}, %rd23139;
	}
	shf.r.wrap.b32 	%r39193, %r39192, %r39191, 14;
	shf.r.wrap.b32 	%r39194, %r39191, %r39192, 14;
	mov.b64 	%rd23151, {%r39194, %r39193};
	shf.r.wrap.b32 	%r39195, %r39192, %r39191, 18;
	shf.r.wrap.b32 	%r39196, %r39191, %r39192, 18;
	mov.b64 	%rd23152, {%r39196, %r39195};
	xor.b64  	%rd23153, %rd23152, %rd23151;
	shf.l.wrap.b32 	%r39197, %r39191, %r39192, 23;
	shf.l.wrap.b32 	%r39198, %r39192, %r39191, 23;
	mov.b64 	%rd23154, {%r39198, %r39197};
	xor.b64  	%rd23155, %rd23153, %rd23154;
	xor.b64  	%rd23156, %rd23114, %rd23089;
	and.b64  	%rd23157, %rd23139, %rd23156;
	xor.b64  	%rd23158, %rd23157, %rd23089;
	add.s64 	%rd23159, %rd23064, %rd22787;
	ld.const.u64 	%rd23160, [k_sha512+624];
	add.s64 	%rd23161, %rd23159, %rd23160;
	add.s64 	%rd23162, %rd23161, %rd23158;
	add.s64 	%rd23163, %rd23162, %rd23155;
	add.s64 	%rd23164, %rd23163, %rd23075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39199,%dummy}, %rd23150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39200}, %rd23150;
	}
	shf.r.wrap.b32 	%r39201, %r39200, %r39199, 28;
	shf.r.wrap.b32 	%r39202, %r39199, %r39200, 28;
	mov.b64 	%rd23165, {%r39202, %r39201};
	shf.l.wrap.b32 	%r39203, %r39199, %r39200, 30;
	shf.l.wrap.b32 	%r39204, %r39200, %r39199, 30;
	mov.b64 	%rd23166, {%r39204, %r39203};
	xor.b64  	%rd23167, %rd23166, %rd23165;
	shf.l.wrap.b32 	%r39205, %r39199, %r39200, 25;
	shf.l.wrap.b32 	%r39206, %r39200, %r39199, 25;
	mov.b64 	%rd23168, {%r39206, %r39205};
	xor.b64  	%rd23169, %rd23167, %rd23168;
	and.b64  	%rd23170, %rd23150, %rd23125;
	xor.b64  	%rd23171, %rd23150, %rd23125;
	and.b64  	%rd23172, %rd23171, %rd23100;
	or.b64  	%rd23173, %rd23172, %rd23170;
	add.s64 	%rd23174, %rd23163, %rd23173;
	add.s64 	%rd23175, %rd23174, %rd23169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39207,%dummy}, %rd23164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39208}, %rd23164;
	}
	shf.r.wrap.b32 	%r39209, %r39208, %r39207, 14;
	shf.r.wrap.b32 	%r39210, %r39207, %r39208, 14;
	mov.b64 	%rd23176, {%r39210, %r39209};
	shf.r.wrap.b32 	%r39211, %r39208, %r39207, 18;
	shf.r.wrap.b32 	%r39212, %r39207, %r39208, 18;
	mov.b64 	%rd23177, {%r39212, %r39211};
	xor.b64  	%rd23178, %rd23177, %rd23176;
	shf.l.wrap.b32 	%r39213, %r39207, %r39208, 23;
	shf.l.wrap.b32 	%r39214, %r39208, %r39207, 23;
	mov.b64 	%rd23179, {%r39214, %r39213};
	xor.b64  	%rd23180, %rd23178, %rd23179;
	xor.b64  	%rd23181, %rd23139, %rd23114;
	and.b64  	%rd23182, %rd23164, %rd23181;
	xor.b64  	%rd23183, %rd23182, %rd23114;
	add.s64 	%rd23184, %rd23089, %rd22800;
	ld.const.u64 	%rd23185, [k_sha512+632];
	add.s64 	%rd23186, %rd23184, %rd23185;
	add.s64 	%rd23187, %rd23186, %rd23183;
	add.s64 	%rd23188, %rd23187, %rd23180;
	add.s64 	%rd23189, %rd23188, %rd23100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39215,%dummy}, %rd23175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39216}, %rd23175;
	}
	shf.r.wrap.b32 	%r39217, %r39216, %r39215, 28;
	shf.r.wrap.b32 	%r39218, %r39215, %r39216, 28;
	mov.b64 	%rd23190, {%r39218, %r39217};
	shf.l.wrap.b32 	%r39219, %r39215, %r39216, 30;
	shf.l.wrap.b32 	%r39220, %r39216, %r39215, 30;
	mov.b64 	%rd23191, {%r39220, %r39219};
	xor.b64  	%rd23192, %rd23191, %rd23190;
	shf.l.wrap.b32 	%r39221, %r39215, %r39216, 25;
	shf.l.wrap.b32 	%r39222, %r39216, %r39215, 25;
	mov.b64 	%rd23193, {%r39222, %r39221};
	xor.b64  	%rd23194, %rd23192, %rd23193;
	and.b64  	%rd23195, %rd23175, %rd23150;
	xor.b64  	%rd23196, %rd23175, %rd23150;
	and.b64  	%rd23197, %rd23196, %rd23125;
	or.b64  	%rd23198, %rd23197, %rd23195;
	add.s64 	%rd23199, %rd23188, %rd23198;
	add.s64 	%rd23200, %rd23199, %rd23194;
	add.s64 	%rd23201, %rd20380, %rd23200;
	st.local.u64 	[%rd9], %rd23201;
	add.s64 	%rd23202, %rd20386, %rd23175;
	st.local.u64 	[%rd9+8], %rd23202;
	add.s64 	%rd23203, %rd20389, %rd23150;
	st.local.u64 	[%rd9+16], %rd23203;
	add.s64 	%rd23204, %rd20378, %rd23125;
	st.local.u64 	[%rd9+24], %rd23204;
	add.s64 	%rd23205, %rd20361, %rd23189;
	st.local.u64 	[%rd9+32], %rd23205;
	add.s64 	%rd23206, %rd20368, %rd23164;
	st.local.u64 	[%rd9+40], %rd23206;
	add.s64 	%rd23207, %rd20367, %rd23139;
	st.local.u64 	[%rd9+48], %rd23207;
	add.s64 	%rd23218, %rd20372, %rd23114;
	mov.u32 	%r39512, %r39513;
	mov.u32 	%r39511, %r39513;
	mov.u32 	%r39510, %r39513;
	mov.u32 	%r39485, %r39513;
	mov.u32 	%r39484, %r39513;
	mov.u32 	%r39483, %r39513;
	mov.u32 	%r39482, %r39513;
	mov.u32 	%r39489, %r39513;
	mov.u32 	%r39488, %r39513;
	mov.u32 	%r39487, %r39513;
	mov.u32 	%r39486, %r39513;
	mov.u32 	%r39493, %r39513;
	mov.u32 	%r39492, %r39513;
	mov.u32 	%r39491, %r39513;
	mov.u32 	%r39490, %r39513;
	mov.u32 	%r39497, %r39513;
	mov.u32 	%r39496, %r39513;
	mov.u32 	%r39495, %r39513;
	mov.u32 	%r39494, %r39513;
	mov.u32 	%r39501, %r39513;
	mov.u32 	%r39500, %r39513;
	mov.u32 	%r39499, %r39513;
	mov.u32 	%r39498, %r39513;
	mov.u32 	%r39505, %r39513;
	mov.u32 	%r39504, %r39513;
	mov.u32 	%r39503, %r39513;
	mov.u32 	%r39502, %r39513;
	mov.u32 	%r39509, %r39513;
	mov.u32 	%r39508, %r39513;
	mov.u32 	%r39507, %r39513;
	mov.u32 	%r39506, %r39513;
	bra.uni 	BB1_400;

BB1_312:
	shr.u32 	%r29267, %r3108, 2;
	and.b32  	%r29268, %r3107, 3;
	shl.b32 	%r29269, %r29268, 2;
	mov.u32 	%r29270, 1985229328;
	shr.u32 	%r29271, %r29270, %r29269;
	and.b32  	%r3109, %r29271, 65535;
	setp.gt.s32	%p164, %r29267, 15;
	@%p164 bra 	BB1_345;

	setp.gt.s32	%p188, %r29267, 7;
	@%p188 bra 	BB1_330;

	setp.gt.s32	%p200, %r29267, 3;
	@%p200 bra 	BB1_322;

	setp.gt.s32	%p206, %r29267, 1;
	@%p206 bra 	BB1_319;

	setp.eq.s32	%p209, %r29267, 0;
	@%p209 bra 	BB1_396;
	bra.uni 	BB1_317;

BB1_396:
	mov.u32 	%r39482, 0;
	// inline asm
	prmt.b32 %r39513, %r39482, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r35015, %r35016}, [%rd18];
	// inline asm
	prmt.b32 %r34856, %r35016, %r35015, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r34856;
	ld.local.u32 	%r34861, [%rd8+8];
	ld.local.u32 	%r34862, [%rd8+4];
	// inline asm
	prmt.b32 %r34860, %r34861, %r34862, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r34860;
	ld.local.v2.u32 	{%r35017, %r35018}, [%rd8];
	// inline asm
	prmt.b32 %r34864, %r35018, %r35017, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r34864;
	ld.local.u32 	%r34869, [%rd8];
	ld.local.u32 	%r34870, [%rd7+12];
	// inline asm
	prmt.b32 %r34868, %r34869, %r34870, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r34868;
	ld.local.v2.u32 	{%r35019, %r35020}, [%rd17];
	// inline asm
	prmt.b32 %r34872, %r35020, %r35019, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r34872;
	ld.local.u32 	%r34877, [%rd7+8];
	ld.local.u32 	%r34878, [%rd7+4];
	// inline asm
	prmt.b32 %r34876, %r34877, %r34878, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r34876;
	ld.local.v2.u32 	{%r35021, %r35022}, [%rd7];
	// inline asm
	prmt.b32 %r34880, %r35022, %r35021, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r34880;
	ld.local.u32 	%r34885, [%rd7];
	ld.local.u32 	%r34886, [%rd6+12];
	// inline asm
	prmt.b32 %r34884, %r34885, %r34886, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r34884;
	ld.local.v2.u32 	{%r35023, %r35024}, [%rd16];
	// inline asm
	prmt.b32 %r34888, %r35024, %r35023, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r34888;
	ld.local.u32 	%r34893, [%rd6+8];
	ld.local.u32 	%r34894, [%rd6+4];
	// inline asm
	prmt.b32 %r34892, %r34893, %r34894, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r34892;
	ld.local.v2.u32 	{%r35025, %r35026}, [%rd6];
	// inline asm
	prmt.b32 %r34896, %r35026, %r35025, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r34896;
	ld.local.u32 	%r34901, [%rd6];
	ld.local.u32 	%r34902, [%rd5+12];
	// inline asm
	prmt.b32 %r34900, %r34901, %r34902, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r34900;
	ld.local.v2.u32 	{%r35027, %r35028}, [%rd15];
	// inline asm
	prmt.b32 %r34904, %r35028, %r35027, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r34904;
	ld.local.u32 	%r34909, [%rd5+8];
	ld.local.u32 	%r34910, [%rd5+4];
	// inline asm
	prmt.b32 %r34908, %r34909, %r34910, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r34908;
	ld.local.v2.u32 	{%r35029, %r35030}, [%rd5];
	// inline asm
	prmt.b32 %r34912, %r35030, %r35029, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r34912;
	ld.local.u32 	%r34917, [%rd5];
	ld.local.u32 	%r34918, [%rd4+12];
	// inline asm
	prmt.b32 %r34916, %r34917, %r34918, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r34916;
	ld.local.v2.u32 	{%r35031, %r35032}, [%rd14];
	// inline asm
	prmt.b32 %r34920, %r35032, %r35031, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r34920;
	ld.local.u32 	%r34925, [%rd4+8];
	ld.local.u32 	%r34926, [%rd4+4];
	// inline asm
	prmt.b32 %r34924, %r34925, %r34926, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r34924;
	ld.local.v2.u32 	{%r35033, %r35034}, [%rd4];
	// inline asm
	prmt.b32 %r34928, %r35034, %r35033, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r34928;
	ld.local.u32 	%r34933, [%rd4];
	ld.local.u32 	%r34934, [%rd3+12];
	// inline asm
	prmt.b32 %r34932, %r34933, %r34934, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r34932;
	ld.local.v2.u32 	{%r35035, %r35036}, [%rd13];
	// inline asm
	prmt.b32 %r34936, %r35036, %r35035, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r34936;
	ld.local.u32 	%r34941, [%rd3+8];
	ld.local.u32 	%r34942, [%rd3+4];
	// inline asm
	prmt.b32 %r34940, %r34941, %r34942, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r34940;
	ld.local.v2.u32 	{%r35037, %r35038}, [%rd3];
	// inline asm
	prmt.b32 %r34944, %r35038, %r35037, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r34944;
	ld.local.u32 	%r34949, [%rd3];
	ld.local.u32 	%r34950, [%rd2+12];
	// inline asm
	prmt.b32 %r34948, %r34949, %r34950, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34948;
	ld.local.v2.u32 	{%r35039, %r35040}, [%rd12];
	// inline asm
	prmt.b32 %r34952, %r35040, %r35039, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34952;
	ld.local.u32 	%r34957, [%rd2+8];
	ld.local.u32 	%r34958, [%rd2+4];
	// inline asm
	prmt.b32 %r34956, %r34957, %r34958, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34956;
	ld.local.v2.u32 	{%r35041, %r35042}, [%rd2];
	// inline asm
	prmt.b32 %r34960, %r35042, %r35041, %r3109;
	// inline asm
	st.local.u32 	[%rd2+4], %r34960;
	ld.local.u32 	%r34965, [%rd2];
	ld.local.u32 	%r34966, [%rd1+12];
	// inline asm
	prmt.b32 %r34964, %r34965, %r34966, %r3109;
	// inline asm
	st.local.u32 	[%rd2], %r34964;
	ld.local.v2.u32 	{%r35043, %r35044}, [%rd11];
	// inline asm
	prmt.b32 %r34968, %r35044, %r35043, %r3109;
	// inline asm
	st.local.u32 	[%rd1+12], %r34968;
	ld.local.u32 	%r34973, [%rd1+8];
	ld.local.u32 	%r34974, [%rd1+4];
	// inline asm
	prmt.b32 %r34972, %r34973, %r34974, %r3109;
	// inline asm
	st.local.u32 	[%rd1+8], %r34972;
	ld.local.v2.u32 	{%r35045, %r35046}, [%rd1];
	// inline asm
	prmt.b32 %r34976, %r35046, %r35045, %r3109;
	// inline asm
	st.local.u32 	[%rd1+4], %r34976;
	ld.local.u32 	%r34981, [%rd1];
	// inline asm
	prmt.b32 %r39481, %r34981, %r39482, %r3109;
	// inline asm
	st.local.u32 	[%rd1], %r39481;
	mov.u32 	%r39483, %r39482;
	mov.u32 	%r39484, %r39482;
	mov.u32 	%r39485, %r39482;
	mov.u32 	%r39486, %r39482;
	mov.u32 	%r39487, %r39482;
	mov.u32 	%r39488, %r39482;
	mov.u32 	%r39489, %r39482;
	mov.u32 	%r39490, %r39482;
	mov.u32 	%r39491, %r39482;
	mov.u32 	%r39492, %r39482;
	mov.u32 	%r39493, %r39482;
	mov.u32 	%r39494, %r39482;
	mov.u32 	%r39495, %r39482;
	mov.u32 	%r39496, %r39482;
	mov.u32 	%r39497, %r39482;
	mov.u32 	%r39498, %r39482;
	mov.u32 	%r39499, %r39482;
	mov.u32 	%r39500, %r39482;
	mov.u32 	%r39501, %r39482;
	mov.u32 	%r39502, %r39482;
	mov.u32 	%r39503, %r39482;
	mov.u32 	%r39504, %r39482;
	mov.u32 	%r39505, %r39482;
	mov.u32 	%r39506, %r39482;
	mov.u32 	%r39507, %r39482;
	mov.u32 	%r39508, %r39482;
	mov.u32 	%r39509, %r39482;
	mov.u32 	%r39510, %r39482;
	mov.u32 	%r39511, %r39482;
	mov.u32 	%r39512, %r39482;
	bra.uni 	BB1_398;

BB1_345:
	setp.gt.s32	%p165, %r29267, 23;
	@%p165 bra 	BB1_361;

	setp.gt.s32	%p177, %r29267, 19;
	@%p177 bra 	BB1_354;

	setp.gt.s32	%p183, %r29267, 17;
	@%p183 bra 	BB1_351;

	setp.eq.s32	%p186, %r29267, 16;
	@%p186 bra 	BB1_383;
	bra.uni 	BB1_349;

BB1_383:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39497, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32000, %r32001}, [%rd18];
	// inline asm
	prmt.b32 %r39490, %r32001, %r32000, %r3109;
	// inline asm
	ld.local.u32 	%r31861, [%rd8+8];
	ld.local.u32 	%r31862, [%rd8+4];
	// inline asm
	prmt.b32 %r39491, %r31861, %r31862, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32002, %r32003}, [%rd8];
	// inline asm
	prmt.b32 %r39492, %r32003, %r32002, %r3109;
	// inline asm
	ld.local.u32 	%r31869, [%rd8];
	ld.local.u32 	%r31870, [%rd7+12];
	// inline asm
	prmt.b32 %r39493, %r31869, %r31870, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32004, %r32005}, [%rd17];
	// inline asm
	prmt.b32 %r39486, %r32005, %r32004, %r3109;
	// inline asm
	ld.local.u32 	%r31877, [%rd7+8];
	ld.local.u32 	%r31878, [%rd7+4];
	// inline asm
	prmt.b32 %r39487, %r31877, %r31878, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32006, %r32007}, [%rd7];
	// inline asm
	prmt.b32 %r39488, %r32007, %r32006, %r3109;
	// inline asm
	ld.local.u32 	%r31885, [%rd7];
	ld.local.u32 	%r31886, [%rd6+12];
	// inline asm
	prmt.b32 %r39489, %r31885, %r31886, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32008, %r32009}, [%rd16];
	// inline asm
	prmt.b32 %r39482, %r32009, %r32008, %r3109;
	// inline asm
	ld.local.u32 	%r31893, [%rd6+8];
	ld.local.u32 	%r31894, [%rd6+4];
	// inline asm
	prmt.b32 %r39483, %r31893, %r31894, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32010, %r32011}, [%rd6];
	// inline asm
	prmt.b32 %r39484, %r32011, %r32010, %r3109;
	// inline asm
	ld.local.u32 	%r31901, [%rd6];
	ld.local.u32 	%r31902, [%rd5+12];
	// inline asm
	prmt.b32 %r39485, %r31901, %r31902, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32012, %r32013}, [%rd15];
	// inline asm
	prmt.b32 %r39510, %r32013, %r32012, %r3109;
	// inline asm
	ld.local.u32 	%r31909, [%rd5+8];
	ld.local.u32 	%r31910, [%rd5+4];
	// inline asm
	prmt.b32 %r39511, %r31909, %r31910, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32014, %r32015}, [%rd5];
	// inline asm
	prmt.b32 %r39512, %r32015, %r32014, %r3109;
	// inline asm
	ld.local.u32 	%r31917, [%rd5];
	ld.local.u32 	%r31918, [%rd4+12];
	// inline asm
	prmt.b32 %r39513, %r31917, %r31918, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32016, %r32017}, [%rd14];
	// inline asm
	prmt.b32 %r31920, %r32017, %r32016, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31920;
	ld.local.u32 	%r31925, [%rd4+8];
	ld.local.u32 	%r31926, [%rd4+4];
	// inline asm
	prmt.b32 %r31924, %r31925, %r31926, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31924;
	ld.local.v2.u32 	{%r32018, %r32019}, [%rd4];
	// inline asm
	prmt.b32 %r31928, %r32019, %r32018, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31928;
	ld.local.u32 	%r31933, [%rd4];
	ld.local.u32 	%r31934, [%rd3+12];
	// inline asm
	prmt.b32 %r31932, %r31933, %r31934, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31932;
	ld.local.v2.u32 	{%r32020, %r32021}, [%rd13];
	// inline asm
	prmt.b32 %r31936, %r32021, %r32020, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31936;
	ld.local.u32 	%r31941, [%rd3+8];
	ld.local.u32 	%r31942, [%rd3+4];
	// inline asm
	prmt.b32 %r31940, %r31941, %r31942, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31940;
	ld.local.v2.u32 	{%r32022, %r32023}, [%rd3];
	// inline asm
	prmt.b32 %r31944, %r32023, %r32022, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31944;
	ld.local.u32 	%r31949, [%rd3];
	ld.local.u32 	%r31950, [%rd2+12];
	// inline asm
	prmt.b32 %r31948, %r31949, %r31950, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31948;
	ld.local.v2.u32 	{%r32024, %r32025}, [%rd12];
	// inline asm
	prmt.b32 %r31952, %r32025, %r32024, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31952;
	ld.local.u32 	%r31957, [%rd2+8];
	ld.local.u32 	%r31958, [%rd2+4];
	// inline asm
	prmt.b32 %r31956, %r31957, %r31958, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31956;
	ld.local.v2.u32 	{%r32026, %r32027}, [%rd2];
	// inline asm
	prmt.b32 %r31960, %r32027, %r32026, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r31960;
	ld.local.u32 	%r31965, [%rd2];
	ld.local.u32 	%r31966, [%rd1+12];
	// inline asm
	prmt.b32 %r31964, %r31965, %r31966, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r31964;
	ld.local.v2.u32 	{%r32028, %r32029}, [%rd11];
	// inline asm
	prmt.b32 %r31968, %r32029, %r32028, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r31968;
	ld.local.u32 	%r31973, [%rd1+8];
	ld.local.u32 	%r31974, [%rd1+4];
	// inline asm
	prmt.b32 %r31972, %r31973, %r31974, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r31972;
	ld.local.v2.u32 	{%r32030, %r32031}, [%rd1];
	// inline asm
	prmt.b32 %r31976, %r32031, %r32030, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r31976;
	ld.local.u32 	%r31981, [%rd1];
	// inline asm
	prmt.b32 %r31980, %r31981, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r31980;
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39494, %r39481;
	mov.u32 	%r39495, %r39481;
	mov.u32 	%r39496, %r39481;
	bra.uni 	BB1_390;

BB1_330:
	setp.gt.s32	%p189, %r29267, 11;
	@%p189 bra 	BB1_338;

	setp.gt.s32	%p195, %r29267, 9;
	@%p195 bra 	BB1_335;

	setp.eq.s32	%p198, %r29267, 8;
	@%p198 bra 	BB1_387;
	bra.uni 	BB1_333;

BB1_387:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39489, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33476, %r33477}, [%rd18];
	// inline asm
	prmt.b32 %r39482, %r33477, %r33476, %r3109;
	// inline asm
	ld.local.u32 	%r33329, [%rd8+8];
	ld.local.u32 	%r33330, [%rd8+4];
	// inline asm
	prmt.b32 %r39483, %r33329, %r33330, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33478, %r33479}, [%rd8];
	// inline asm
	prmt.b32 %r39484, %r33479, %r33478, %r3109;
	// inline asm
	ld.local.u32 	%r33337, [%rd8];
	ld.local.u32 	%r33338, [%rd7+12];
	// inline asm
	prmt.b32 %r39485, %r33337, %r33338, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33480, %r33481}, [%rd17];
	// inline asm
	prmt.b32 %r39510, %r33481, %r33480, %r3109;
	// inline asm
	ld.local.u32 	%r33345, [%rd7+8];
	ld.local.u32 	%r33346, [%rd7+4];
	// inline asm
	prmt.b32 %r39511, %r33345, %r33346, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33482, %r33483}, [%rd7];
	// inline asm
	prmt.b32 %r39512, %r33483, %r33482, %r3109;
	// inline asm
	ld.local.u32 	%r33353, [%rd7];
	ld.local.u32 	%r33354, [%rd6+12];
	// inline asm
	prmt.b32 %r39513, %r33353, %r33354, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33484, %r33485}, [%rd16];
	// inline asm
	prmt.b32 %r33356, %r33485, %r33484, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r33356;
	ld.local.u32 	%r33361, [%rd6+8];
	ld.local.u32 	%r33362, [%rd6+4];
	// inline asm
	prmt.b32 %r33360, %r33361, %r33362, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r33360;
	ld.local.v2.u32 	{%r33486, %r33487}, [%rd6];
	// inline asm
	prmt.b32 %r33364, %r33487, %r33486, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r33364;
	ld.local.u32 	%r33369, [%rd6];
	ld.local.u32 	%r33370, [%rd5+12];
	// inline asm
	prmt.b32 %r33368, %r33369, %r33370, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33368;
	ld.local.v2.u32 	{%r33488, %r33489}, [%rd15];
	// inline asm
	prmt.b32 %r33372, %r33489, %r33488, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33372;
	ld.local.u32 	%r33377, [%rd5+8];
	ld.local.u32 	%r33378, [%rd5+4];
	// inline asm
	prmt.b32 %r33376, %r33377, %r33378, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33376;
	ld.local.v2.u32 	{%r33490, %r33491}, [%rd5];
	// inline asm
	prmt.b32 %r33380, %r33491, %r33490, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33380;
	ld.local.u32 	%r33385, [%rd5];
	ld.local.u32 	%r33386, [%rd4+12];
	// inline asm
	prmt.b32 %r33384, %r33385, %r33386, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33384;
	ld.local.v2.u32 	{%r33492, %r33493}, [%rd14];
	// inline asm
	prmt.b32 %r33388, %r33493, %r33492, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33388;
	ld.local.u32 	%r33393, [%rd4+8];
	ld.local.u32 	%r33394, [%rd4+4];
	// inline asm
	prmt.b32 %r33392, %r33393, %r33394, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33392;
	ld.local.v2.u32 	{%r33494, %r33495}, [%rd4];
	// inline asm
	prmt.b32 %r33396, %r33495, %r33494, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33396;
	ld.local.u32 	%r33401, [%rd4];
	ld.local.u32 	%r33402, [%rd3+12];
	// inline asm
	prmt.b32 %r33400, %r33401, %r33402, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33400;
	ld.local.v2.u32 	{%r33496, %r33497}, [%rd13];
	// inline asm
	prmt.b32 %r33404, %r33497, %r33496, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33404;
	ld.local.u32 	%r33409, [%rd3+8];
	ld.local.u32 	%r33410, [%rd3+4];
	// inline asm
	prmt.b32 %r33408, %r33409, %r33410, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33408;
	ld.local.v2.u32 	{%r33498, %r33499}, [%rd3];
	// inline asm
	prmt.b32 %r33412, %r33499, %r33498, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33412;
	ld.local.u32 	%r33417, [%rd3];
	ld.local.u32 	%r33418, [%rd2+12];
	// inline asm
	prmt.b32 %r33416, %r33417, %r33418, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33416;
	ld.local.v2.u32 	{%r33500, %r33501}, [%rd12];
	// inline asm
	prmt.b32 %r33420, %r33501, %r33500, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33420;
	ld.local.u32 	%r33425, [%rd2+8];
	ld.local.u32 	%r33426, [%rd2+4];
	// inline asm
	prmt.b32 %r33424, %r33425, %r33426, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33424;
	ld.local.v2.u32 	{%r33502, %r33503}, [%rd2];
	// inline asm
	prmt.b32 %r33428, %r33503, %r33502, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33428;
	ld.local.u32 	%r33433, [%rd2];
	ld.local.u32 	%r33434, [%rd1+12];
	// inline asm
	prmt.b32 %r33432, %r33433, %r33434, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33432;
	ld.local.v2.u32 	{%r33504, %r33505}, [%rd11];
	// inline asm
	prmt.b32 %r33436, %r33505, %r33504, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33436;
	ld.local.u32 	%r33441, [%rd1+8];
	ld.local.u32 	%r33442, [%rd1+4];
	// inline asm
	prmt.b32 %r33440, %r33441, %r33442, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33440;
	ld.local.v2.u32 	{%r33506, %r33507}, [%rd1];
	// inline asm
	prmt.b32 %r33444, %r33507, %r33506, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r33444;
	ld.local.u32 	%r33449, [%rd1];
	// inline asm
	prmt.b32 %r33448, %r33449, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r33448;
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39486, %r39481;
	mov.u32 	%r39487, %r39481;
	mov.u32 	%r39488, %r39481;
	bra.uni 	BB1_388;

BB1_361:
	setp.gt.s32	%p166, %r29267, 27;
	@%p166 bra 	BB1_369;

	setp.gt.s32	%p172, %r29267, 25;
	@%p172 bra 	BB1_366;

	setp.eq.s32	%p175, %r29267, 24;
	@%p175 bra 	BB1_379;
	bra.uni 	BB1_364;

BB1_379:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39505, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30588, %r30589}, [%rd18];
	// inline asm
	prmt.b32 %r39498, %r30589, %r30588, %r3109;
	// inline asm
	ld.local.u32 	%r30457, [%rd8+8];
	ld.local.u32 	%r30458, [%rd8+4];
	// inline asm
	prmt.b32 %r39499, %r30457, %r30458, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30590, %r30591}, [%rd8];
	// inline asm
	prmt.b32 %r39500, %r30591, %r30590, %r3109;
	// inline asm
	ld.local.u32 	%r30465, [%rd8];
	ld.local.u32 	%r30466, [%rd7+12];
	// inline asm
	prmt.b32 %r39501, %r30465, %r30466, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30592, %r30593}, [%rd17];
	// inline asm
	prmt.b32 %r39494, %r30593, %r30592, %r3109;
	// inline asm
	ld.local.u32 	%r30473, [%rd7+8];
	ld.local.u32 	%r30474, [%rd7+4];
	// inline asm
	prmt.b32 %r39495, %r30473, %r30474, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30594, %r30595}, [%rd7];
	// inline asm
	prmt.b32 %r39496, %r30595, %r30594, %r3109;
	// inline asm
	ld.local.u32 	%r30481, [%rd7];
	ld.local.u32 	%r30482, [%rd6+12];
	// inline asm
	prmt.b32 %r39497, %r30481, %r30482, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30596, %r30597}, [%rd16];
	// inline asm
	prmt.b32 %r39490, %r30597, %r30596, %r3109;
	// inline asm
	ld.local.u32 	%r30489, [%rd6+8];
	ld.local.u32 	%r30490, [%rd6+4];
	// inline asm
	prmt.b32 %r39491, %r30489, %r30490, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30598, %r30599}, [%rd6];
	// inline asm
	prmt.b32 %r39492, %r30599, %r30598, %r3109;
	// inline asm
	ld.local.u32 	%r30497, [%rd6];
	ld.local.u32 	%r30498, [%rd5+12];
	// inline asm
	prmt.b32 %r39493, %r30497, %r30498, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30600, %r30601}, [%rd15];
	// inline asm
	prmt.b32 %r39486, %r30601, %r30600, %r3109;
	// inline asm
	ld.local.u32 	%r30505, [%rd5+8];
	ld.local.u32 	%r30506, [%rd5+4];
	// inline asm
	prmt.b32 %r39487, %r30505, %r30506, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30602, %r30603}, [%rd5];
	// inline asm
	prmt.b32 %r39488, %r30603, %r30602, %r3109;
	// inline asm
	ld.local.u32 	%r30513, [%rd5];
	ld.local.u32 	%r30514, [%rd4+12];
	// inline asm
	prmt.b32 %r39489, %r30513, %r30514, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30604, %r30605}, [%rd14];
	// inline asm
	prmt.b32 %r39482, %r30605, %r30604, %r3109;
	// inline asm
	ld.local.u32 	%r30521, [%rd4+8];
	ld.local.u32 	%r30522, [%rd4+4];
	// inline asm
	prmt.b32 %r39483, %r30521, %r30522, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30606, %r30607}, [%rd4];
	// inline asm
	prmt.b32 %r39484, %r30607, %r30606, %r3109;
	// inline asm
	ld.local.u32 	%r30529, [%rd4];
	ld.local.u32 	%r30530, [%rd3+12];
	// inline asm
	prmt.b32 %r39485, %r30529, %r30530, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30608, %r30609}, [%rd13];
	// inline asm
	prmt.b32 %r39510, %r30609, %r30608, %r3109;
	// inline asm
	ld.local.u32 	%r30537, [%rd3+8];
	ld.local.u32 	%r30538, [%rd3+4];
	// inline asm
	prmt.b32 %r39511, %r30537, %r30538, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30610, %r30611}, [%rd3];
	// inline asm
	prmt.b32 %r39512, %r30611, %r30610, %r3109;
	// inline asm
	ld.local.u32 	%r30545, [%rd3];
	ld.local.u32 	%r30546, [%rd2+12];
	// inline asm
	prmt.b32 %r39513, %r30545, %r30546, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30612, %r30613}, [%rd12];
	// inline asm
	prmt.b32 %r30548, %r30613, %r30612, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30548;
	ld.local.u32 	%r30553, [%rd2+8];
	ld.local.u32 	%r30554, [%rd2+4];
	// inline asm
	prmt.b32 %r30552, %r30553, %r30554, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30552;
	ld.local.v2.u32 	{%r30614, %r30615}, [%rd2];
	// inline asm
	prmt.b32 %r30556, %r30615, %r30614, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30556;
	ld.local.u32 	%r30561, [%rd2];
	ld.local.u32 	%r30562, [%rd1+12];
	// inline asm
	prmt.b32 %r30560, %r30561, %r30562, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30560;
	ld.local.v2.u32 	{%r30616, %r30617}, [%rd11];
	// inline asm
	prmt.b32 %r30564, %r30617, %r30616, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r30564;
	ld.local.u32 	%r30569, [%rd1+8];
	ld.local.u32 	%r30570, [%rd1+4];
	// inline asm
	prmt.b32 %r30568, %r30569, %r30570, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r30568;
	ld.local.v2.u32 	{%r30618, %r30619}, [%rd1];
	// inline asm
	prmt.b32 %r30572, %r30619, %r30618, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r30572;
	ld.local.u32 	%r30577, [%rd1];
	// inline asm
	prmt.b32 %r30576, %r30577, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r30576;
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39502, %r39481;
	mov.u32 	%r39503, %r39481;
	mov.u32 	%r39504, %r39481;
	bra.uni 	BB1_392;

BB1_322:
	setp.gt.s32	%p201, %r29267, 5;
	@%p201 bra 	BB1_326;

	setp.eq.s32	%p204, %r29267, 4;
	@%p204 bra 	BB1_394;
	bra.uni 	BB1_324;

BB1_394:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39485, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34238, %r34239}, [%rd18];
	// inline asm
	prmt.b32 %r39510, %r34239, %r34238, %r3109;
	// inline asm
	ld.local.u32 	%r34087, [%rd8+8];
	ld.local.u32 	%r34088, [%rd8+4];
	// inline asm
	prmt.b32 %r39511, %r34087, %r34088, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34240, %r34241}, [%rd8];
	// inline asm
	prmt.b32 %r39512, %r34241, %r34240, %r3109;
	// inline asm
	ld.local.u32 	%r34095, [%rd8];
	ld.local.u32 	%r34096, [%rd7+12];
	// inline asm
	prmt.b32 %r39513, %r34095, %r34096, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34242, %r34243}, [%rd17];
	// inline asm
	prmt.b32 %r34098, %r34243, %r34242, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r34098;
	ld.local.u32 	%r34103, [%rd7+8];
	ld.local.u32 	%r34104, [%rd7+4];
	// inline asm
	prmt.b32 %r34102, %r34103, %r34104, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r34102;
	ld.local.v2.u32 	{%r34244, %r34245}, [%rd7];
	// inline asm
	prmt.b32 %r34106, %r34245, %r34244, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r34106;
	ld.local.u32 	%r34111, [%rd7];
	ld.local.u32 	%r34112, [%rd6+12];
	// inline asm
	prmt.b32 %r34110, %r34111, %r34112, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r34110;
	ld.local.v2.u32 	{%r34246, %r34247}, [%rd16];
	// inline asm
	prmt.b32 %r34114, %r34247, %r34246, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r34114;
	ld.local.u32 	%r34119, [%rd6+8];
	ld.local.u32 	%r34120, [%rd6+4];
	// inline asm
	prmt.b32 %r34118, %r34119, %r34120, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r34118;
	ld.local.v2.u32 	{%r34248, %r34249}, [%rd6];
	// inline asm
	prmt.b32 %r34122, %r34249, %r34248, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r34122;
	ld.local.u32 	%r34127, [%rd6];
	ld.local.u32 	%r34128, [%rd5+12];
	// inline asm
	prmt.b32 %r34126, %r34127, %r34128, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r34126;
	ld.local.v2.u32 	{%r34250, %r34251}, [%rd15];
	// inline asm
	prmt.b32 %r34130, %r34251, %r34250, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r34130;
	ld.local.u32 	%r34135, [%rd5+8];
	ld.local.u32 	%r34136, [%rd5+4];
	// inline asm
	prmt.b32 %r34134, %r34135, %r34136, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r34134;
	ld.local.v2.u32 	{%r34252, %r34253}, [%rd5];
	// inline asm
	prmt.b32 %r34138, %r34253, %r34252, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r34138;
	ld.local.u32 	%r34143, [%rd5];
	ld.local.u32 	%r34144, [%rd4+12];
	// inline asm
	prmt.b32 %r34142, %r34143, %r34144, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r34142;
	ld.local.v2.u32 	{%r34254, %r34255}, [%rd14];
	// inline asm
	prmt.b32 %r34146, %r34255, %r34254, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r34146;
	ld.local.u32 	%r34151, [%rd4+8];
	ld.local.u32 	%r34152, [%rd4+4];
	// inline asm
	prmt.b32 %r34150, %r34151, %r34152, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r34150;
	ld.local.v2.u32 	{%r34256, %r34257}, [%rd4];
	// inline asm
	prmt.b32 %r34154, %r34257, %r34256, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r34154;
	ld.local.u32 	%r34159, [%rd4];
	ld.local.u32 	%r34160, [%rd3+12];
	// inline asm
	prmt.b32 %r34158, %r34159, %r34160, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r34158;
	ld.local.v2.u32 	{%r34258, %r34259}, [%rd13];
	// inline asm
	prmt.b32 %r34162, %r34259, %r34258, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r34162;
	ld.local.u32 	%r34167, [%rd3+8];
	ld.local.u32 	%r34168, [%rd3+4];
	// inline asm
	prmt.b32 %r34166, %r34167, %r34168, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r34166;
	ld.local.v2.u32 	{%r34260, %r34261}, [%rd3];
	// inline asm
	prmt.b32 %r34170, %r34261, %r34260, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r34170;
	ld.local.u32 	%r34175, [%rd3];
	ld.local.u32 	%r34176, [%rd2+12];
	// inline asm
	prmt.b32 %r34174, %r34175, %r34176, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r34174;
	ld.local.v2.u32 	{%r34262, %r34263}, [%rd12];
	// inline asm
	prmt.b32 %r34178, %r34263, %r34262, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r34178;
	ld.local.u32 	%r34183, [%rd2+8];
	ld.local.u32 	%r34184, [%rd2+4];
	// inline asm
	prmt.b32 %r34182, %r34183, %r34184, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r34182;
	ld.local.v2.u32 	{%r34264, %r34265}, [%rd2];
	// inline asm
	prmt.b32 %r34186, %r34265, %r34264, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r34186;
	ld.local.u32 	%r34191, [%rd2];
	ld.local.u32 	%r34192, [%rd1+12];
	// inline asm
	prmt.b32 %r34190, %r34191, %r34192, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34190;
	ld.local.v2.u32 	{%r34266, %r34267}, [%rd11];
	// inline asm
	prmt.b32 %r34194, %r34267, %r34266, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34194;
	ld.local.u32 	%r34199, [%rd1+8];
	ld.local.u32 	%r34200, [%rd1+4];
	// inline asm
	prmt.b32 %r34198, %r34199, %r34200, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34198;
	ld.local.v2.u32 	{%r34268, %r34269}, [%rd1];
	// inline asm
	prmt.b32 %r34202, %r34269, %r34268, %r3109;
	// inline asm
	st.local.u32 	[%rd2+4], %r34202;
	ld.local.u32 	%r34207, [%rd1];
	// inline asm
	prmt.b32 %r34206, %r34207, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd2], %r34206;
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39482, %r39481;
	mov.u32 	%r39483, %r39481;
	mov.u32 	%r39484, %r39481;
	bra.uni 	BB1_329;

BB1_354:
	setp.gt.s32	%p178, %r29267, 21;
	@%p178 bra 	BB1_358;

	setp.eq.s32	%p181, %r29267, 20;
	@%p181 bra 	BB1_381;
	bra.uni 	BB1_356;

BB1_381:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39501, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31286, %r31287}, [%rd18];
	// inline asm
	prmt.b32 %r39494, %r31287, %r31286, %r3109;
	// inline asm
	ld.local.u32 	%r31151, [%rd8+8];
	ld.local.u32 	%r31152, [%rd8+4];
	// inline asm
	prmt.b32 %r39495, %r31151, %r31152, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31288, %r31289}, [%rd8];
	// inline asm
	prmt.b32 %r39496, %r31289, %r31288, %r3109;
	// inline asm
	ld.local.u32 	%r31159, [%rd8];
	ld.local.u32 	%r31160, [%rd7+12];
	// inline asm
	prmt.b32 %r39497, %r31159, %r31160, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31290, %r31291}, [%rd17];
	// inline asm
	prmt.b32 %r39490, %r31291, %r31290, %r3109;
	// inline asm
	ld.local.u32 	%r31167, [%rd7+8];
	ld.local.u32 	%r31168, [%rd7+4];
	// inline asm
	prmt.b32 %r39491, %r31167, %r31168, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31292, %r31293}, [%rd7];
	// inline asm
	prmt.b32 %r39492, %r31293, %r31292, %r3109;
	// inline asm
	ld.local.u32 	%r31175, [%rd7];
	ld.local.u32 	%r31176, [%rd6+12];
	// inline asm
	prmt.b32 %r39493, %r31175, %r31176, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31294, %r31295}, [%rd16];
	// inline asm
	prmt.b32 %r39486, %r31295, %r31294, %r3109;
	// inline asm
	ld.local.u32 	%r31183, [%rd6+8];
	ld.local.u32 	%r31184, [%rd6+4];
	// inline asm
	prmt.b32 %r39487, %r31183, %r31184, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31296, %r31297}, [%rd6];
	// inline asm
	prmt.b32 %r39488, %r31297, %r31296, %r3109;
	// inline asm
	ld.local.u32 	%r31191, [%rd6];
	ld.local.u32 	%r31192, [%rd5+12];
	// inline asm
	prmt.b32 %r39489, %r31191, %r31192, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31298, %r31299}, [%rd15];
	// inline asm
	prmt.b32 %r39482, %r31299, %r31298, %r3109;
	// inline asm
	ld.local.u32 	%r31199, [%rd5+8];
	ld.local.u32 	%r31200, [%rd5+4];
	// inline asm
	prmt.b32 %r39483, %r31199, %r31200, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31300, %r31301}, [%rd5];
	// inline asm
	prmt.b32 %r39484, %r31301, %r31300, %r3109;
	// inline asm
	ld.local.u32 	%r31207, [%rd5];
	ld.local.u32 	%r31208, [%rd4+12];
	// inline asm
	prmt.b32 %r39485, %r31207, %r31208, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31302, %r31303}, [%rd14];
	// inline asm
	prmt.b32 %r39510, %r31303, %r31302, %r3109;
	// inline asm
	ld.local.u32 	%r31215, [%rd4+8];
	ld.local.u32 	%r31216, [%rd4+4];
	// inline asm
	prmt.b32 %r39511, %r31215, %r31216, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31304, %r31305}, [%rd4];
	// inline asm
	prmt.b32 %r39512, %r31305, %r31304, %r3109;
	// inline asm
	ld.local.u32 	%r31223, [%rd4];
	ld.local.u32 	%r31224, [%rd3+12];
	// inline asm
	prmt.b32 %r39513, %r31223, %r31224, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31306, %r31307}, [%rd13];
	// inline asm
	prmt.b32 %r31226, %r31307, %r31306, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31226;
	ld.local.u32 	%r31231, [%rd3+8];
	ld.local.u32 	%r31232, [%rd3+4];
	// inline asm
	prmt.b32 %r31230, %r31231, %r31232, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31230;
	ld.local.v2.u32 	{%r31308, %r31309}, [%rd3];
	// inline asm
	prmt.b32 %r31234, %r31309, %r31308, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31234;
	ld.local.u32 	%r31239, [%rd3];
	ld.local.u32 	%r31240, [%rd2+12];
	// inline asm
	prmt.b32 %r31238, %r31239, %r31240, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31238;
	ld.local.v2.u32 	{%r31310, %r31311}, [%rd12];
	// inline asm
	prmt.b32 %r31242, %r31311, %r31310, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31242;
	ld.local.u32 	%r31247, [%rd2+8];
	ld.local.u32 	%r31248, [%rd2+4];
	// inline asm
	prmt.b32 %r31246, %r31247, %r31248, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31246;
	ld.local.v2.u32 	{%r31312, %r31313}, [%rd2];
	// inline asm
	prmt.b32 %r31250, %r31313, %r31312, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31250;
	ld.local.u32 	%r31255, [%rd2];
	ld.local.u32 	%r31256, [%rd1+12];
	// inline asm
	prmt.b32 %r31254, %r31255, %r31256, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31254;
	ld.local.v2.u32 	{%r31314, %r31315}, [%rd11];
	// inline asm
	prmt.b32 %r31258, %r31315, %r31314, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31258;
	ld.local.u32 	%r31263, [%rd1+8];
	ld.local.u32 	%r31264, [%rd1+4];
	// inline asm
	prmt.b32 %r31262, %r31263, %r31264, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31262;
	ld.local.v2.u32 	{%r31316, %r31317}, [%rd1];
	// inline asm
	prmt.b32 %r31266, %r31317, %r31316, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r31266;
	ld.local.u32 	%r31271, [%rd1];
	// inline asm
	prmt.b32 %r31270, %r31271, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r31270;
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39498, %r39481;
	mov.u32 	%r39499, %r39481;
	mov.u32 	%r39500, %r39481;
	bra.uni 	BB1_391;

BB1_338:
	setp.gt.s32	%p190, %r29267, 13;
	@%p190 bra 	BB1_342;

	setp.eq.s32	%p193, %r29267, 12;
	@%p193 bra 	BB1_385;
	bra.uni 	BB1_340;

BB1_385:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39493, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32730, %r32731}, [%rd18];
	// inline asm
	prmt.b32 %r39486, %r32731, %r32730, %r3109;
	// inline asm
	ld.local.u32 	%r32587, [%rd8+8];
	ld.local.u32 	%r32588, [%rd8+4];
	// inline asm
	prmt.b32 %r39487, %r32587, %r32588, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32732, %r32733}, [%rd8];
	// inline asm
	prmt.b32 %r39488, %r32733, %r32732, %r3109;
	// inline asm
	ld.local.u32 	%r32595, [%rd8];
	ld.local.u32 	%r32596, [%rd7+12];
	// inline asm
	prmt.b32 %r39489, %r32595, %r32596, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32734, %r32735}, [%rd17];
	// inline asm
	prmt.b32 %r39482, %r32735, %r32734, %r3109;
	// inline asm
	ld.local.u32 	%r32603, [%rd7+8];
	ld.local.u32 	%r32604, [%rd7+4];
	// inline asm
	prmt.b32 %r39483, %r32603, %r32604, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32736, %r32737}, [%rd7];
	// inline asm
	prmt.b32 %r39484, %r32737, %r32736, %r3109;
	// inline asm
	ld.local.u32 	%r32611, [%rd7];
	ld.local.u32 	%r32612, [%rd6+12];
	// inline asm
	prmt.b32 %r39485, %r32611, %r32612, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32738, %r32739}, [%rd16];
	// inline asm
	prmt.b32 %r39510, %r32739, %r32738, %r3109;
	// inline asm
	ld.local.u32 	%r32619, [%rd6+8];
	ld.local.u32 	%r32620, [%rd6+4];
	// inline asm
	prmt.b32 %r39511, %r32619, %r32620, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32740, %r32741}, [%rd6];
	// inline asm
	prmt.b32 %r39512, %r32741, %r32740, %r3109;
	// inline asm
	ld.local.u32 	%r32627, [%rd6];
	ld.local.u32 	%r32628, [%rd5+12];
	// inline asm
	prmt.b32 %r39513, %r32627, %r32628, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32742, %r32743}, [%rd15];
	// inline asm
	prmt.b32 %r32630, %r32743, %r32742, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32630;
	ld.local.u32 	%r32635, [%rd5+8];
	ld.local.u32 	%r32636, [%rd5+4];
	// inline asm
	prmt.b32 %r32634, %r32635, %r32636, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32634;
	ld.local.v2.u32 	{%r32744, %r32745}, [%rd5];
	// inline asm
	prmt.b32 %r32638, %r32745, %r32744, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32638;
	ld.local.u32 	%r32643, [%rd5];
	ld.local.u32 	%r32644, [%rd4+12];
	// inline asm
	prmt.b32 %r32642, %r32643, %r32644, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r32642;
	ld.local.v2.u32 	{%r32746, %r32747}, [%rd14];
	// inline asm
	prmt.b32 %r32646, %r32747, %r32746, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r32646;
	ld.local.u32 	%r32651, [%rd4+8];
	ld.local.u32 	%r32652, [%rd4+4];
	// inline asm
	prmt.b32 %r32650, %r32651, %r32652, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r32650;
	ld.local.v2.u32 	{%r32748, %r32749}, [%rd4];
	// inline asm
	prmt.b32 %r32654, %r32749, %r32748, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r32654;
	ld.local.u32 	%r32659, [%rd4];
	ld.local.u32 	%r32660, [%rd3+12];
	// inline asm
	prmt.b32 %r32658, %r32659, %r32660, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r32658;
	ld.local.v2.u32 	{%r32750, %r32751}, [%rd13];
	// inline asm
	prmt.b32 %r32662, %r32751, %r32750, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r32662;
	ld.local.u32 	%r32667, [%rd3+8];
	ld.local.u32 	%r32668, [%rd3+4];
	// inline asm
	prmt.b32 %r32666, %r32667, %r32668, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r32666;
	ld.local.v2.u32 	{%r32752, %r32753}, [%rd3];
	// inline asm
	prmt.b32 %r32670, %r32753, %r32752, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r32670;
	ld.local.u32 	%r32675, [%rd3];
	ld.local.u32 	%r32676, [%rd2+12];
	// inline asm
	prmt.b32 %r32674, %r32675, %r32676, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r32674;
	ld.local.v2.u32 	{%r32754, %r32755}, [%rd12];
	// inline asm
	prmt.b32 %r32678, %r32755, %r32754, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r32678;
	ld.local.u32 	%r32683, [%rd2+8];
	ld.local.u32 	%r32684, [%rd2+4];
	// inline asm
	prmt.b32 %r32682, %r32683, %r32684, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r32682;
	ld.local.v2.u32 	{%r32756, %r32757}, [%rd2];
	// inline asm
	prmt.b32 %r32686, %r32757, %r32756, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r32686;
	ld.local.u32 	%r32691, [%rd2];
	ld.local.u32 	%r32692, [%rd1+12];
	// inline asm
	prmt.b32 %r32690, %r32691, %r32692, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r32690;
	ld.local.v2.u32 	{%r32758, %r32759}, [%rd11];
	// inline asm
	prmt.b32 %r32694, %r32759, %r32758, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r32694;
	ld.local.u32 	%r32699, [%rd1+8];
	ld.local.u32 	%r32700, [%rd1+4];
	// inline asm
	prmt.b32 %r32698, %r32699, %r32700, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r32698;
	ld.local.v2.u32 	{%r32760, %r32761}, [%rd1];
	// inline asm
	prmt.b32 %r32702, %r32761, %r32760, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r32702;
	ld.local.u32 	%r32707, [%rd1];
	// inline asm
	prmt.b32 %r32706, %r32707, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r32706;
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39490, %r39481;
	mov.u32 	%r39491, %r39481;
	mov.u32 	%r39492, %r39481;
	bra.uni 	BB1_389;

BB1_369:
	setp.gt.s32	%p167, %r29267, 29;
	@%p167 bra 	BB1_373;

	setp.eq.s32	%p170, %r29267, 28;
	@%p170 bra 	BB1_377;
	bra.uni 	BB1_371;

BB1_377:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39509, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29906, %r29907}, [%rd18];
	// inline asm
	prmt.b32 %r39502, %r29907, %r29906, %r3109;
	// inline asm
	ld.local.u32 	%r29779, [%rd8+8];
	ld.local.u32 	%r29780, [%rd8+4];
	// inline asm
	prmt.b32 %r39503, %r29779, %r29780, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29908, %r29909}, [%rd8];
	// inline asm
	prmt.b32 %r39504, %r29909, %r29908, %r3109;
	// inline asm
	ld.local.u32 	%r29787, [%rd8];
	ld.local.u32 	%r29788, [%rd7+12];
	// inline asm
	prmt.b32 %r39505, %r29787, %r29788, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29910, %r29911}, [%rd17];
	// inline asm
	prmt.b32 %r39498, %r29911, %r29910, %r3109;
	// inline asm
	ld.local.u32 	%r29795, [%rd7+8];
	ld.local.u32 	%r29796, [%rd7+4];
	// inline asm
	prmt.b32 %r39499, %r29795, %r29796, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29912, %r29913}, [%rd7];
	// inline asm
	prmt.b32 %r39500, %r29913, %r29912, %r3109;
	// inline asm
	ld.local.u32 	%r29803, [%rd7];
	ld.local.u32 	%r29804, [%rd6+12];
	// inline asm
	prmt.b32 %r39501, %r29803, %r29804, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29914, %r29915}, [%rd16];
	// inline asm
	prmt.b32 %r39494, %r29915, %r29914, %r3109;
	// inline asm
	ld.local.u32 	%r29811, [%rd6+8];
	ld.local.u32 	%r29812, [%rd6+4];
	// inline asm
	prmt.b32 %r39495, %r29811, %r29812, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29916, %r29917}, [%rd6];
	// inline asm
	prmt.b32 %r39496, %r29917, %r29916, %r3109;
	// inline asm
	ld.local.u32 	%r29819, [%rd6];
	ld.local.u32 	%r29820, [%rd5+12];
	// inline asm
	prmt.b32 %r39497, %r29819, %r29820, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29918, %r29919}, [%rd15];
	// inline asm
	prmt.b32 %r39490, %r29919, %r29918, %r3109;
	// inline asm
	ld.local.u32 	%r29827, [%rd5+8];
	ld.local.u32 	%r29828, [%rd5+4];
	// inline asm
	prmt.b32 %r39491, %r29827, %r29828, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29920, %r29921}, [%rd5];
	// inline asm
	prmt.b32 %r39492, %r29921, %r29920, %r3109;
	// inline asm
	ld.local.u32 	%r29835, [%rd5];
	ld.local.u32 	%r29836, [%rd4+12];
	// inline asm
	prmt.b32 %r39493, %r29835, %r29836, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29922, %r29923}, [%rd14];
	// inline asm
	prmt.b32 %r39486, %r29923, %r29922, %r3109;
	// inline asm
	ld.local.u32 	%r29843, [%rd4+8];
	ld.local.u32 	%r29844, [%rd4+4];
	// inline asm
	prmt.b32 %r39487, %r29843, %r29844, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29924, %r29925}, [%rd4];
	// inline asm
	prmt.b32 %r39488, %r29925, %r29924, %r3109;
	// inline asm
	ld.local.u32 	%r29851, [%rd4];
	ld.local.u32 	%r29852, [%rd3+12];
	// inline asm
	prmt.b32 %r39489, %r29851, %r29852, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29926, %r29927}, [%rd13];
	// inline asm
	prmt.b32 %r39482, %r29927, %r29926, %r3109;
	// inline asm
	ld.local.u32 	%r29859, [%rd3+8];
	ld.local.u32 	%r29860, [%rd3+4];
	// inline asm
	prmt.b32 %r39483, %r29859, %r29860, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29928, %r29929}, [%rd3];
	// inline asm
	prmt.b32 %r39484, %r29929, %r29928, %r3109;
	// inline asm
	ld.local.u32 	%r29867, [%rd3];
	ld.local.u32 	%r29868, [%rd2+12];
	// inline asm
	prmt.b32 %r39485, %r29867, %r29868, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29930, %r29931}, [%rd12];
	// inline asm
	prmt.b32 %r39510, %r29931, %r29930, %r3109;
	// inline asm
	ld.local.u32 	%r29875, [%rd2+8];
	ld.local.u32 	%r29876, [%rd2+4];
	// inline asm
	prmt.b32 %r39511, %r29875, %r29876, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29932, %r29933}, [%rd2];
	// inline asm
	prmt.b32 %r39512, %r29933, %r29932, %r3109;
	// inline asm
	ld.local.u32 	%r29883, [%rd2];
	ld.local.u32 	%r29884, [%rd1+12];
	// inline asm
	prmt.b32 %r39513, %r29883, %r29884, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29934, %r29935}, [%rd11];
	// inline asm
	prmt.b32 %r29886, %r29935, %r29934, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r29886;
	ld.local.u32 	%r29891, [%rd1+8];
	ld.local.u32 	%r29892, [%rd1+4];
	// inline asm
	prmt.b32 %r29890, %r29891, %r29892, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r29890;
	ld.local.v2.u32 	{%r29936, %r29937}, [%rd1];
	// inline asm
	prmt.b32 %r29894, %r29937, %r29936, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r29894;
	ld.local.u32 	%r29899, [%rd1];
	// inline asm
	prmt.b32 %r29898, %r29899, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r29898;
	st.local.v4.u32 	[%rd7], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39506, %r39481;
	mov.u32 	%r39507, %r39481;
	mov.u32 	%r39508, %r39481;
	bra.uni 	BB1_398;

BB1_319:
	setp.eq.s32	%p207, %r29267, 2;
	@%p207 bra 	BB1_395;
	bra.uni 	BB1_320;

BB1_395:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39511, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34625, %r34626}, [%rd18];
	// inline asm
	prmt.b32 %r39512, %r34626, %r34625, %r3109;
	// inline asm
	ld.local.u32 	%r34472, [%rd8+8];
	ld.local.u32 	%r34473, [%rd8+4];
	// inline asm
	prmt.b32 %r39513, %r34472, %r34473, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34627, %r34628}, [%rd8];
	// inline asm
	prmt.b32 %r34475, %r34628, %r34627, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r34475;
	ld.local.u32 	%r34480, [%rd8];
	ld.local.u32 	%r34481, [%rd7+12];
	// inline asm
	prmt.b32 %r34479, %r34480, %r34481, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r34479;
	ld.local.v2.u32 	{%r34629, %r34630}, [%rd17];
	// inline asm
	prmt.b32 %r34483, %r34630, %r34629, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r34483;
	ld.local.u32 	%r34488, [%rd7+8];
	ld.local.u32 	%r34489, [%rd7+4];
	// inline asm
	prmt.b32 %r34487, %r34488, %r34489, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r34487;
	ld.local.v2.u32 	{%r34631, %r34632}, [%rd7];
	// inline asm
	prmt.b32 %r34491, %r34632, %r34631, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r34491;
	ld.local.u32 	%r34496, [%rd7];
	ld.local.u32 	%r34497, [%rd6+12];
	// inline asm
	prmt.b32 %r34495, %r34496, %r34497, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r34495;
	ld.local.v2.u32 	{%r34633, %r34634}, [%rd16];
	// inline asm
	prmt.b32 %r34499, %r34634, %r34633, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r34499;
	ld.local.u32 	%r34504, [%rd6+8];
	ld.local.u32 	%r34505, [%rd6+4];
	// inline asm
	prmt.b32 %r34503, %r34504, %r34505, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r34503;
	ld.local.v2.u32 	{%r34635, %r34636}, [%rd6];
	// inline asm
	prmt.b32 %r34507, %r34636, %r34635, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r34507;
	ld.local.u32 	%r34512, [%rd6];
	ld.local.u32 	%r34513, [%rd5+12];
	// inline asm
	prmt.b32 %r34511, %r34512, %r34513, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r34511;
	ld.local.v2.u32 	{%r34637, %r34638}, [%rd15];
	// inline asm
	prmt.b32 %r34515, %r34638, %r34637, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r34515;
	ld.local.u32 	%r34520, [%rd5+8];
	ld.local.u32 	%r34521, [%rd5+4];
	// inline asm
	prmt.b32 %r34519, %r34520, %r34521, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r34519;
	ld.local.v2.u32 	{%r34639, %r34640}, [%rd5];
	// inline asm
	prmt.b32 %r34523, %r34640, %r34639, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r34523;
	ld.local.u32 	%r34528, [%rd5];
	ld.local.u32 	%r34529, [%rd4+12];
	// inline asm
	prmt.b32 %r34527, %r34528, %r34529, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r34527;
	ld.local.v2.u32 	{%r34641, %r34642}, [%rd14];
	// inline asm
	prmt.b32 %r34531, %r34642, %r34641, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r34531;
	ld.local.u32 	%r34536, [%rd4+8];
	ld.local.u32 	%r34537, [%rd4+4];
	// inline asm
	prmt.b32 %r34535, %r34536, %r34537, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r34535;
	ld.local.v2.u32 	{%r34643, %r34644}, [%rd4];
	// inline asm
	prmt.b32 %r34539, %r34644, %r34643, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r34539;
	ld.local.u32 	%r34544, [%rd4];
	ld.local.u32 	%r34545, [%rd3+12];
	// inline asm
	prmt.b32 %r34543, %r34544, %r34545, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r34543;
	ld.local.v2.u32 	{%r34645, %r34646}, [%rd13];
	// inline asm
	prmt.b32 %r34547, %r34646, %r34645, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r34547;
	ld.local.u32 	%r34552, [%rd3+8];
	ld.local.u32 	%r34553, [%rd3+4];
	// inline asm
	prmt.b32 %r34551, %r34552, %r34553, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r34551;
	ld.local.v2.u32 	{%r34647, %r34648}, [%rd3];
	// inline asm
	prmt.b32 %r34555, %r34648, %r34647, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r34555;
	ld.local.u32 	%r34560, [%rd3];
	ld.local.u32 	%r34561, [%rd2+12];
	// inline asm
	prmt.b32 %r34559, %r34560, %r34561, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r34559;
	ld.local.v2.u32 	{%r34649, %r34650}, [%rd12];
	// inline asm
	prmt.b32 %r34563, %r34650, %r34649, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r34563;
	ld.local.u32 	%r34568, [%rd2+8];
	ld.local.u32 	%r34569, [%rd2+4];
	// inline asm
	prmt.b32 %r34567, %r34568, %r34569, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34567;
	ld.local.v2.u32 	{%r34651, %r34652}, [%rd2];
	// inline asm
	prmt.b32 %r34571, %r34652, %r34651, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34571;
	ld.local.u32 	%r34576, [%rd2];
	ld.local.u32 	%r34577, [%rd1+12];
	// inline asm
	prmt.b32 %r34575, %r34576, %r34577, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34575;
	ld.local.v2.u32 	{%r34653, %r34654}, [%rd11];
	// inline asm
	prmt.b32 %r34579, %r34654, %r34653, %r3109;
	// inline asm
	st.local.u32 	[%rd2+4], %r34579;
	ld.local.u32 	%r34584, [%rd1+8];
	ld.local.u32 	%r34585, [%rd1+4];
	// inline asm
	prmt.b32 %r34583, %r34584, %r34585, %r3109;
	// inline asm
	st.local.u32 	[%rd2], %r34583;
	ld.local.v2.u32 	{%r34655, %r34656}, [%rd1];
	// inline asm
	prmt.b32 %r34587, %r34656, %r34655, %r3109;
	// inline asm
	st.local.u32 	[%rd1+12], %r34587;
	ld.local.u32 	%r34592, [%rd1];
	// inline asm
	prmt.b32 %r34591, %r34592, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd1+8], %r34591;
	st.local.v2.u32 	[%rd1], {%r39481, %r39481};
	mov.u32 	%r39482, %r39481;
	mov.u32 	%r39483, %r39481;
	mov.u32 	%r39484, %r39481;
	mov.u32 	%r39485, %r39481;
	mov.u32 	%r39486, %r39481;
	mov.u32 	%r39487, %r39481;
	mov.u32 	%r39488, %r39481;
	mov.u32 	%r39489, %r39481;
	mov.u32 	%r39490, %r39481;
	mov.u32 	%r39491, %r39481;
	mov.u32 	%r39492, %r39481;
	mov.u32 	%r39493, %r39481;
	mov.u32 	%r39494, %r39481;
	mov.u32 	%r39495, %r39481;
	mov.u32 	%r39496, %r39481;
	mov.u32 	%r39497, %r39481;
	mov.u32 	%r39498, %r39481;
	mov.u32 	%r39499, %r39481;
	mov.u32 	%r39500, %r39481;
	mov.u32 	%r39501, %r39481;
	mov.u32 	%r39502, %r39481;
	mov.u32 	%r39503, %r39481;
	mov.u32 	%r39504, %r39481;
	mov.u32 	%r39505, %r39481;
	mov.u32 	%r39506, %r39481;
	mov.u32 	%r39507, %r39481;
	mov.u32 	%r39508, %r39481;
	mov.u32 	%r39509, %r39481;
	mov.u32 	%r39510, %r39481;
	bra.uni 	BB1_398;

BB1_351:
	setp.eq.s32	%p184, %r29267, 18;
	@%p184 bra 	BB1_382;
	bra.uni 	BB1_352;

BB1_382:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39495, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31641, %r31642}, [%rd18];
	// inline asm
	prmt.b32 %r39496, %r31642, %r31641, %r3109;
	// inline asm
	ld.local.u32 	%r31504, [%rd8+8];
	ld.local.u32 	%r31505, [%rd8+4];
	// inline asm
	prmt.b32 %r39497, %r31504, %r31505, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31643, %r31644}, [%rd8];
	// inline asm
	prmt.b32 %r39490, %r31644, %r31643, %r3109;
	// inline asm
	ld.local.u32 	%r31512, [%rd8];
	ld.local.u32 	%r31513, [%rd7+12];
	// inline asm
	prmt.b32 %r39491, %r31512, %r31513, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31645, %r31646}, [%rd17];
	// inline asm
	prmt.b32 %r39492, %r31646, %r31645, %r3109;
	// inline asm
	ld.local.u32 	%r31520, [%rd7+8];
	ld.local.u32 	%r31521, [%rd7+4];
	// inline asm
	prmt.b32 %r39493, %r31520, %r31521, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31647, %r31648}, [%rd7];
	// inline asm
	prmt.b32 %r39486, %r31648, %r31647, %r3109;
	// inline asm
	ld.local.u32 	%r31528, [%rd7];
	ld.local.u32 	%r31529, [%rd6+12];
	// inline asm
	prmt.b32 %r39487, %r31528, %r31529, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31649, %r31650}, [%rd16];
	// inline asm
	prmt.b32 %r39488, %r31650, %r31649, %r3109;
	// inline asm
	ld.local.u32 	%r31536, [%rd6+8];
	ld.local.u32 	%r31537, [%rd6+4];
	// inline asm
	prmt.b32 %r39489, %r31536, %r31537, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31651, %r31652}, [%rd6];
	// inline asm
	prmt.b32 %r39482, %r31652, %r31651, %r3109;
	// inline asm
	ld.local.u32 	%r31544, [%rd6];
	ld.local.u32 	%r31545, [%rd5+12];
	// inline asm
	prmt.b32 %r39483, %r31544, %r31545, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31653, %r31654}, [%rd15];
	// inline asm
	prmt.b32 %r39484, %r31654, %r31653, %r3109;
	// inline asm
	ld.local.u32 	%r31552, [%rd5+8];
	ld.local.u32 	%r31553, [%rd5+4];
	// inline asm
	prmt.b32 %r39485, %r31552, %r31553, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31655, %r31656}, [%rd5];
	// inline asm
	prmt.b32 %r39510, %r31656, %r31655, %r3109;
	// inline asm
	ld.local.u32 	%r31560, [%rd5];
	ld.local.u32 	%r31561, [%rd4+12];
	// inline asm
	prmt.b32 %r39511, %r31560, %r31561, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31657, %r31658}, [%rd14];
	// inline asm
	prmt.b32 %r39512, %r31658, %r31657, %r3109;
	// inline asm
	ld.local.u32 	%r31568, [%rd4+8];
	ld.local.u32 	%r31569, [%rd4+4];
	// inline asm
	prmt.b32 %r39513, %r31568, %r31569, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31659, %r31660}, [%rd4];
	// inline asm
	prmt.b32 %r31571, %r31660, %r31659, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31571;
	ld.local.u32 	%r31576, [%rd4];
	ld.local.u32 	%r31577, [%rd3+12];
	// inline asm
	prmt.b32 %r31575, %r31576, %r31577, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31575;
	ld.local.v2.u32 	{%r31661, %r31662}, [%rd13];
	// inline asm
	prmt.b32 %r31579, %r31662, %r31661, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31579;
	ld.local.u32 	%r31584, [%rd3+8];
	ld.local.u32 	%r31585, [%rd3+4];
	// inline asm
	prmt.b32 %r31583, %r31584, %r31585, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31583;
	ld.local.v2.u32 	{%r31663, %r31664}, [%rd3];
	// inline asm
	prmt.b32 %r31587, %r31664, %r31663, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31587;
	ld.local.u32 	%r31592, [%rd3];
	ld.local.u32 	%r31593, [%rd2+12];
	// inline asm
	prmt.b32 %r31591, %r31592, %r31593, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31591;
	ld.local.v2.u32 	{%r31665, %r31666}, [%rd12];
	// inline asm
	prmt.b32 %r31595, %r31666, %r31665, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31595;
	ld.local.u32 	%r31600, [%rd2+8];
	ld.local.u32 	%r31601, [%rd2+4];
	// inline asm
	prmt.b32 %r31599, %r31600, %r31601, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31599;
	ld.local.v2.u32 	{%r31667, %r31668}, [%rd2];
	// inline asm
	prmt.b32 %r31603, %r31668, %r31667, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31603;
	ld.local.u32 	%r31608, [%rd2];
	ld.local.u32 	%r31609, [%rd1+12];
	// inline asm
	prmt.b32 %r31607, %r31608, %r31609, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31607;
	ld.local.v2.u32 	{%r31669, %r31670}, [%rd11];
	// inline asm
	prmt.b32 %r31611, %r31670, %r31669, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r31611;
	ld.local.u32 	%r31616, [%rd1+8];
	ld.local.u32 	%r31617, [%rd1+4];
	// inline asm
	prmt.b32 %r31615, %r31616, %r31617, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r31615;
	ld.local.v2.u32 	{%r31671, %r31672}, [%rd1];
	// inline asm
	prmt.b32 %r31619, %r31672, %r31671, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r31619;
	ld.local.u32 	%r31624, [%rd1];
	// inline asm
	prmt.b32 %r31623, %r31624, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r31623;
	st.local.v2.u32 	[%rd5], {%r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39494, %r39481;
	bra.uni 	BB1_390;

BB1_335:
	setp.eq.s32	%p196, %r29267, 10;
	@%p196 bra 	BB1_386;
	bra.uni 	BB1_336;

BB1_386:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39487, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33101, %r33102}, [%rd18];
	// inline asm
	prmt.b32 %r39488, %r33102, %r33101, %r3109;
	// inline asm
	ld.local.u32 	%r32956, [%rd8+8];
	ld.local.u32 	%r32957, [%rd8+4];
	// inline asm
	prmt.b32 %r39489, %r32956, %r32957, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33103, %r33104}, [%rd8];
	// inline asm
	prmt.b32 %r39482, %r33104, %r33103, %r3109;
	// inline asm
	ld.local.u32 	%r32964, [%rd8];
	ld.local.u32 	%r32965, [%rd7+12];
	// inline asm
	prmt.b32 %r39483, %r32964, %r32965, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33105, %r33106}, [%rd17];
	// inline asm
	prmt.b32 %r39484, %r33106, %r33105, %r3109;
	// inline asm
	ld.local.u32 	%r32972, [%rd7+8];
	ld.local.u32 	%r32973, [%rd7+4];
	// inline asm
	prmt.b32 %r39485, %r32972, %r32973, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33107, %r33108}, [%rd7];
	// inline asm
	prmt.b32 %r39510, %r33108, %r33107, %r3109;
	// inline asm
	ld.local.u32 	%r32980, [%rd7];
	ld.local.u32 	%r32981, [%rd6+12];
	// inline asm
	prmt.b32 %r39511, %r32980, %r32981, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33109, %r33110}, [%rd16];
	// inline asm
	prmt.b32 %r39512, %r33110, %r33109, %r3109;
	// inline asm
	ld.local.u32 	%r32988, [%rd6+8];
	ld.local.u32 	%r32989, [%rd6+4];
	// inline asm
	prmt.b32 %r39513, %r32988, %r32989, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33111, %r33112}, [%rd6];
	// inline asm
	prmt.b32 %r32991, %r33112, %r33111, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32991;
	ld.local.u32 	%r32996, [%rd6];
	ld.local.u32 	%r32997, [%rd5+12];
	// inline asm
	prmt.b32 %r32995, %r32996, %r32997, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32995;
	ld.local.v2.u32 	{%r33113, %r33114}, [%rd15];
	// inline asm
	prmt.b32 %r32999, %r33114, %r33113, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32999;
	ld.local.u32 	%r33004, [%rd5+8];
	ld.local.u32 	%r33005, [%rd5+4];
	// inline asm
	prmt.b32 %r33003, %r33004, %r33005, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33003;
	ld.local.v2.u32 	{%r33115, %r33116}, [%rd5];
	// inline asm
	prmt.b32 %r33007, %r33116, %r33115, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33007;
	ld.local.u32 	%r33012, [%rd5];
	ld.local.u32 	%r33013, [%rd4+12];
	// inline asm
	prmt.b32 %r33011, %r33012, %r33013, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33011;
	ld.local.v2.u32 	{%r33117, %r33118}, [%rd14];
	// inline asm
	prmt.b32 %r33015, %r33118, %r33117, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33015;
	ld.local.u32 	%r33020, [%rd4+8];
	ld.local.u32 	%r33021, [%rd4+4];
	// inline asm
	prmt.b32 %r33019, %r33020, %r33021, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33019;
	ld.local.v2.u32 	{%r33119, %r33120}, [%rd4];
	// inline asm
	prmt.b32 %r33023, %r33120, %r33119, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33023;
	ld.local.u32 	%r33028, [%rd4];
	ld.local.u32 	%r33029, [%rd3+12];
	// inline asm
	prmt.b32 %r33027, %r33028, %r33029, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33027;
	ld.local.v2.u32 	{%r33121, %r33122}, [%rd13];
	// inline asm
	prmt.b32 %r33031, %r33122, %r33121, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33031;
	ld.local.u32 	%r33036, [%rd3+8];
	ld.local.u32 	%r33037, [%rd3+4];
	// inline asm
	prmt.b32 %r33035, %r33036, %r33037, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33035;
	ld.local.v2.u32 	{%r33123, %r33124}, [%rd3];
	// inline asm
	prmt.b32 %r33039, %r33124, %r33123, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33039;
	ld.local.u32 	%r33044, [%rd3];
	ld.local.u32 	%r33045, [%rd2+12];
	// inline asm
	prmt.b32 %r33043, %r33044, %r33045, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33043;
	ld.local.v2.u32 	{%r33125, %r33126}, [%rd12];
	// inline asm
	prmt.b32 %r33047, %r33126, %r33125, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33047;
	ld.local.u32 	%r33052, [%rd2+8];
	ld.local.u32 	%r33053, [%rd2+4];
	// inline asm
	prmt.b32 %r33051, %r33052, %r33053, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33051;
	ld.local.v2.u32 	{%r33127, %r33128}, [%rd2];
	// inline asm
	prmt.b32 %r33055, %r33128, %r33127, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33055;
	ld.local.u32 	%r33060, [%rd2];
	ld.local.u32 	%r33061, [%rd1+12];
	// inline asm
	prmt.b32 %r33059, %r33060, %r33061, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33059;
	ld.local.v2.u32 	{%r33129, %r33130}, [%rd11];
	// inline asm
	prmt.b32 %r33063, %r33130, %r33129, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33063;
	ld.local.u32 	%r33068, [%rd1+8];
	ld.local.u32 	%r33069, [%rd1+4];
	// inline asm
	prmt.b32 %r33067, %r33068, %r33069, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33067;
	ld.local.v2.u32 	{%r33131, %r33132}, [%rd1];
	// inline asm
	prmt.b32 %r33071, %r33132, %r33131, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33071;
	ld.local.u32 	%r33076, [%rd1];
	// inline asm
	prmt.b32 %r33075, %r33076, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33075;
	st.local.v2.u32 	[%rd3], {%r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39486, %r39481;
	bra.uni 	BB1_388;

BB1_366:
	setp.eq.s32	%p173, %r29267, 26;
	@%p173 bra 	BB1_378;
	bra.uni 	BB1_367;

BB1_378:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39503, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30245, %r30246}, [%rd18];
	// inline asm
	prmt.b32 %r39504, %r30246, %r30245, %r3109;
	// inline asm
	ld.local.u32 	%r30116, [%rd8+8];
	ld.local.u32 	%r30117, [%rd8+4];
	// inline asm
	prmt.b32 %r39505, %r30116, %r30117, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30247, %r30248}, [%rd8];
	// inline asm
	prmt.b32 %r39498, %r30248, %r30247, %r3109;
	// inline asm
	ld.local.u32 	%r30124, [%rd8];
	ld.local.u32 	%r30125, [%rd7+12];
	// inline asm
	prmt.b32 %r39499, %r30124, %r30125, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30249, %r30250}, [%rd17];
	// inline asm
	prmt.b32 %r39500, %r30250, %r30249, %r3109;
	// inline asm
	ld.local.u32 	%r30132, [%rd7+8];
	ld.local.u32 	%r30133, [%rd7+4];
	// inline asm
	prmt.b32 %r39501, %r30132, %r30133, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30251, %r30252}, [%rd7];
	// inline asm
	prmt.b32 %r39494, %r30252, %r30251, %r3109;
	// inline asm
	ld.local.u32 	%r30140, [%rd7];
	ld.local.u32 	%r30141, [%rd6+12];
	// inline asm
	prmt.b32 %r39495, %r30140, %r30141, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30253, %r30254}, [%rd16];
	// inline asm
	prmt.b32 %r39496, %r30254, %r30253, %r3109;
	// inline asm
	ld.local.u32 	%r30148, [%rd6+8];
	ld.local.u32 	%r30149, [%rd6+4];
	// inline asm
	prmt.b32 %r39497, %r30148, %r30149, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30255, %r30256}, [%rd6];
	// inline asm
	prmt.b32 %r39490, %r30256, %r30255, %r3109;
	// inline asm
	ld.local.u32 	%r30156, [%rd6];
	ld.local.u32 	%r30157, [%rd5+12];
	// inline asm
	prmt.b32 %r39491, %r30156, %r30157, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30257, %r30258}, [%rd15];
	// inline asm
	prmt.b32 %r39492, %r30258, %r30257, %r3109;
	// inline asm
	ld.local.u32 	%r30164, [%rd5+8];
	ld.local.u32 	%r30165, [%rd5+4];
	// inline asm
	prmt.b32 %r39493, %r30164, %r30165, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30259, %r30260}, [%rd5];
	// inline asm
	prmt.b32 %r39486, %r30260, %r30259, %r3109;
	// inline asm
	ld.local.u32 	%r30172, [%rd5];
	ld.local.u32 	%r30173, [%rd4+12];
	// inline asm
	prmt.b32 %r39487, %r30172, %r30173, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30261, %r30262}, [%rd14];
	// inline asm
	prmt.b32 %r39488, %r30262, %r30261, %r3109;
	// inline asm
	ld.local.u32 	%r30180, [%rd4+8];
	ld.local.u32 	%r30181, [%rd4+4];
	// inline asm
	prmt.b32 %r39489, %r30180, %r30181, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30263, %r30264}, [%rd4];
	// inline asm
	prmt.b32 %r39482, %r30264, %r30263, %r3109;
	// inline asm
	ld.local.u32 	%r30188, [%rd4];
	ld.local.u32 	%r30189, [%rd3+12];
	// inline asm
	prmt.b32 %r39483, %r30188, %r30189, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30265, %r30266}, [%rd13];
	// inline asm
	prmt.b32 %r39484, %r30266, %r30265, %r3109;
	// inline asm
	ld.local.u32 	%r30196, [%rd3+8];
	ld.local.u32 	%r30197, [%rd3+4];
	// inline asm
	prmt.b32 %r39485, %r30196, %r30197, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30267, %r30268}, [%rd3];
	// inline asm
	prmt.b32 %r39510, %r30268, %r30267, %r3109;
	// inline asm
	ld.local.u32 	%r30204, [%rd3];
	ld.local.u32 	%r30205, [%rd2+12];
	// inline asm
	prmt.b32 %r39511, %r30204, %r30205, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30269, %r30270}, [%rd12];
	// inline asm
	prmt.b32 %r39512, %r30270, %r30269, %r3109;
	// inline asm
	ld.local.u32 	%r30212, [%rd2+8];
	ld.local.u32 	%r30213, [%rd2+4];
	// inline asm
	prmt.b32 %r39513, %r30212, %r30213, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30271, %r30272}, [%rd2];
	// inline asm
	prmt.b32 %r30215, %r30272, %r30271, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30215;
	ld.local.u32 	%r30220, [%rd2];
	ld.local.u32 	%r30221, [%rd1+12];
	// inline asm
	prmt.b32 %r30219, %r30220, %r30221, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30219;
	ld.local.v2.u32 	{%r30273, %r30274}, [%rd11];
	// inline asm
	prmt.b32 %r30223, %r30274, %r30273, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30223;
	ld.local.u32 	%r30228, [%rd1+8];
	ld.local.u32 	%r30229, [%rd1+4];
	// inline asm
	prmt.b32 %r30227, %r30228, %r30229, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30227;
	ld.local.v2.u32 	{%r30275, %r30276}, [%rd1];
	// inline asm
	prmt.b32 %r30231, %r30276, %r30275, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r30231;
	ld.local.u32 	%r30236, [%rd1];
	// inline asm
	prmt.b32 %r30235, %r30236, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r30235;
	st.local.v2.u32 	[%rd7], {%r39481, %r39481};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39502, %r39481;
	bra.uni 	BB1_392;

BB1_326:
	setp.eq.s32	%p202, %r29267, 6;
	@%p202 bra 	BB1_393;
	bra.uni 	BB1_327;

BB1_393:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39483, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33855, %r33856}, [%rd18];
	// inline asm
	prmt.b32 %r39484, %r33856, %r33855, %r3109;
	// inline asm
	ld.local.u32 	%r33706, [%rd8+8];
	ld.local.u32 	%r33707, [%rd8+4];
	// inline asm
	prmt.b32 %r39485, %r33706, %r33707, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33857, %r33858}, [%rd8];
	// inline asm
	prmt.b32 %r39510, %r33858, %r33857, %r3109;
	// inline asm
	ld.local.u32 	%r33714, [%rd8];
	ld.local.u32 	%r33715, [%rd7+12];
	// inline asm
	prmt.b32 %r39511, %r33714, %r33715, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33859, %r33860}, [%rd17];
	// inline asm
	prmt.b32 %r39512, %r33860, %r33859, %r3109;
	// inline asm
	ld.local.u32 	%r33722, [%rd7+8];
	ld.local.u32 	%r33723, [%rd7+4];
	// inline asm
	prmt.b32 %r39513, %r33722, %r33723, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33861, %r33862}, [%rd7];
	// inline asm
	prmt.b32 %r33725, %r33862, %r33861, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r33725;
	ld.local.u32 	%r33730, [%rd7];
	ld.local.u32 	%r33731, [%rd6+12];
	// inline asm
	prmt.b32 %r33729, %r33730, %r33731, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r33729;
	ld.local.v2.u32 	{%r33863, %r33864}, [%rd16];
	// inline asm
	prmt.b32 %r33733, %r33864, %r33863, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r33733;
	ld.local.u32 	%r33738, [%rd6+8];
	ld.local.u32 	%r33739, [%rd6+4];
	// inline asm
	prmt.b32 %r33737, %r33738, %r33739, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33737;
	ld.local.v2.u32 	{%r33865, %r33866}, [%rd6];
	// inline asm
	prmt.b32 %r33741, %r33866, %r33865, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33741;
	ld.local.u32 	%r33746, [%rd6];
	ld.local.u32 	%r33747, [%rd5+12];
	// inline asm
	prmt.b32 %r33745, %r33746, %r33747, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33745;
	ld.local.v2.u32 	{%r33867, %r33868}, [%rd15];
	// inline asm
	prmt.b32 %r33749, %r33868, %r33867, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33749;
	ld.local.u32 	%r33754, [%rd5+8];
	ld.local.u32 	%r33755, [%rd5+4];
	// inline asm
	prmt.b32 %r33753, %r33754, %r33755, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33753;
	ld.local.v2.u32 	{%r33869, %r33870}, [%rd5];
	// inline asm
	prmt.b32 %r33757, %r33870, %r33869, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33757;
	ld.local.u32 	%r33762, [%rd5];
	ld.local.u32 	%r33763, [%rd4+12];
	// inline asm
	prmt.b32 %r33761, %r33762, %r33763, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33761;
	ld.local.v2.u32 	{%r33871, %r33872}, [%rd14];
	// inline asm
	prmt.b32 %r33765, %r33872, %r33871, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33765;
	ld.local.u32 	%r33770, [%rd4+8];
	ld.local.u32 	%r33771, [%rd4+4];
	// inline asm
	prmt.b32 %r33769, %r33770, %r33771, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33769;
	ld.local.v2.u32 	{%r33873, %r33874}, [%rd4];
	// inline asm
	prmt.b32 %r33773, %r33874, %r33873, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33773;
	ld.local.u32 	%r33778, [%rd4];
	ld.local.u32 	%r33779, [%rd3+12];
	// inline asm
	prmt.b32 %r33777, %r33778, %r33779, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33777;
	ld.local.v2.u32 	{%r33875, %r33876}, [%rd13];
	// inline asm
	prmt.b32 %r33781, %r33876, %r33875, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33781;
	ld.local.u32 	%r33786, [%rd3+8];
	ld.local.u32 	%r33787, [%rd3+4];
	// inline asm
	prmt.b32 %r33785, %r33786, %r33787, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33785;
	ld.local.v2.u32 	{%r33877, %r33878}, [%rd3];
	// inline asm
	prmt.b32 %r33789, %r33878, %r33877, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33789;
	ld.local.u32 	%r33794, [%rd3];
	ld.local.u32 	%r33795, [%rd2+12];
	// inline asm
	prmt.b32 %r33793, %r33794, %r33795, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33793;
	ld.local.v2.u32 	{%r33879, %r33880}, [%rd12];
	// inline asm
	prmt.b32 %r33797, %r33880, %r33879, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33797;
	ld.local.u32 	%r33802, [%rd2+8];
	ld.local.u32 	%r33803, [%rd2+4];
	// inline asm
	prmt.b32 %r33801, %r33802, %r33803, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33801;
	ld.local.v2.u32 	{%r33881, %r33882}, [%rd2];
	// inline asm
	prmt.b32 %r33805, %r33882, %r33881, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33805;
	ld.local.u32 	%r33810, [%rd2];
	ld.local.u32 	%r33811, [%rd1+12];
	// inline asm
	prmt.b32 %r33809, %r33810, %r33811, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33809;
	ld.local.v2.u32 	{%r33883, %r33884}, [%rd11];
	// inline asm
	prmt.b32 %r33813, %r33884, %r33883, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r33813;
	ld.local.u32 	%r33818, [%rd1+8];
	ld.local.u32 	%r33819, [%rd1+4];
	// inline asm
	prmt.b32 %r33817, %r33818, %r33819, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r33817;
	ld.local.v2.u32 	{%r33885, %r33886}, [%rd1];
	// inline asm
	prmt.b32 %r33821, %r33886, %r33885, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r33821;
	ld.local.u32 	%r33826, [%rd1];
	// inline asm
	prmt.b32 %r33825, %r33826, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r33825;
	st.local.v2.u32 	[%rd2], {%r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39482, %r39481;
	bra.uni 	BB1_329;

BB1_358:
	setp.eq.s32	%p179, %r29267, 22;
	@%p179 bra 	BB1_380;
	bra.uni 	BB1_359;

BB1_380:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39499, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30935, %r30936}, [%rd18];
	// inline asm
	prmt.b32 %r39500, %r30936, %r30935, %r3109;
	// inline asm
	ld.local.u32 	%r30802, [%rd8+8];
	ld.local.u32 	%r30803, [%rd8+4];
	// inline asm
	prmt.b32 %r39501, %r30802, %r30803, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30937, %r30938}, [%rd8];
	// inline asm
	prmt.b32 %r39494, %r30938, %r30937, %r3109;
	// inline asm
	ld.local.u32 	%r30810, [%rd8];
	ld.local.u32 	%r30811, [%rd7+12];
	// inline asm
	prmt.b32 %r39495, %r30810, %r30811, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30939, %r30940}, [%rd17];
	// inline asm
	prmt.b32 %r39496, %r30940, %r30939, %r3109;
	// inline asm
	ld.local.u32 	%r30818, [%rd7+8];
	ld.local.u32 	%r30819, [%rd7+4];
	// inline asm
	prmt.b32 %r39497, %r30818, %r30819, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30941, %r30942}, [%rd7];
	// inline asm
	prmt.b32 %r39490, %r30942, %r30941, %r3109;
	// inline asm
	ld.local.u32 	%r30826, [%rd7];
	ld.local.u32 	%r30827, [%rd6+12];
	// inline asm
	prmt.b32 %r39491, %r30826, %r30827, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30943, %r30944}, [%rd16];
	// inline asm
	prmt.b32 %r39492, %r30944, %r30943, %r3109;
	// inline asm
	ld.local.u32 	%r30834, [%rd6+8];
	ld.local.u32 	%r30835, [%rd6+4];
	// inline asm
	prmt.b32 %r39493, %r30834, %r30835, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30945, %r30946}, [%rd6];
	// inline asm
	prmt.b32 %r39486, %r30946, %r30945, %r3109;
	// inline asm
	ld.local.u32 	%r30842, [%rd6];
	ld.local.u32 	%r30843, [%rd5+12];
	// inline asm
	prmt.b32 %r39487, %r30842, %r30843, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30947, %r30948}, [%rd15];
	// inline asm
	prmt.b32 %r39488, %r30948, %r30947, %r3109;
	// inline asm
	ld.local.u32 	%r30850, [%rd5+8];
	ld.local.u32 	%r30851, [%rd5+4];
	// inline asm
	prmt.b32 %r39489, %r30850, %r30851, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30949, %r30950}, [%rd5];
	// inline asm
	prmt.b32 %r39482, %r30950, %r30949, %r3109;
	// inline asm
	ld.local.u32 	%r30858, [%rd5];
	ld.local.u32 	%r30859, [%rd4+12];
	// inline asm
	prmt.b32 %r39483, %r30858, %r30859, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30951, %r30952}, [%rd14];
	// inline asm
	prmt.b32 %r39484, %r30952, %r30951, %r3109;
	// inline asm
	ld.local.u32 	%r30866, [%rd4+8];
	ld.local.u32 	%r30867, [%rd4+4];
	// inline asm
	prmt.b32 %r39485, %r30866, %r30867, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30953, %r30954}, [%rd4];
	// inline asm
	prmt.b32 %r39510, %r30954, %r30953, %r3109;
	// inline asm
	ld.local.u32 	%r30874, [%rd4];
	ld.local.u32 	%r30875, [%rd3+12];
	// inline asm
	prmt.b32 %r39511, %r30874, %r30875, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30955, %r30956}, [%rd13];
	// inline asm
	prmt.b32 %r39512, %r30956, %r30955, %r3109;
	// inline asm
	ld.local.u32 	%r30882, [%rd3+8];
	ld.local.u32 	%r30883, [%rd3+4];
	// inline asm
	prmt.b32 %r39513, %r30882, %r30883, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30957, %r30958}, [%rd3];
	// inline asm
	prmt.b32 %r30885, %r30958, %r30957, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30885;
	ld.local.u32 	%r30890, [%rd3];
	ld.local.u32 	%r30891, [%rd2+12];
	// inline asm
	prmt.b32 %r30889, %r30890, %r30891, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30889;
	ld.local.v2.u32 	{%r30959, %r30960}, [%rd12];
	// inline asm
	prmt.b32 %r30893, %r30960, %r30959, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30893;
	ld.local.u32 	%r30898, [%rd2+8];
	ld.local.u32 	%r30899, [%rd2+4];
	// inline asm
	prmt.b32 %r30897, %r30898, %r30899, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30897;
	ld.local.v2.u32 	{%r30961, %r30962}, [%rd2];
	// inline asm
	prmt.b32 %r30901, %r30962, %r30961, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r30901;
	ld.local.u32 	%r30906, [%rd2];
	ld.local.u32 	%r30907, [%rd1+12];
	// inline asm
	prmt.b32 %r30905, %r30906, %r30907, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r30905;
	ld.local.v2.u32 	{%r30963, %r30964}, [%rd11];
	// inline asm
	prmt.b32 %r30909, %r30964, %r30963, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r30909;
	ld.local.u32 	%r30914, [%rd1+8];
	ld.local.u32 	%r30915, [%rd1+4];
	// inline asm
	prmt.b32 %r30913, %r30914, %r30915, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r30913;
	ld.local.v2.u32 	{%r30965, %r30966}, [%rd1];
	// inline asm
	prmt.b32 %r30917, %r30966, %r30965, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r30917;
	ld.local.u32 	%r30922, [%rd1];
	// inline asm
	prmt.b32 %r30921, %r30922, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r30921;
	st.local.v2.u32 	[%rd6], {%r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39498, %r39481;
	bra.uni 	BB1_391;

BB1_342:
	setp.eq.s32	%p191, %r29267, 14;
	@%p191 bra 	BB1_384;
	bra.uni 	BB1_343;

BB1_384:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39491, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32363, %r32364}, [%rd18];
	// inline asm
	prmt.b32 %r39492, %r32364, %r32363, %r3109;
	// inline asm
	ld.local.u32 	%r32222, [%rd8+8];
	ld.local.u32 	%r32223, [%rd8+4];
	// inline asm
	prmt.b32 %r39493, %r32222, %r32223, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32365, %r32366}, [%rd8];
	// inline asm
	prmt.b32 %r39486, %r32366, %r32365, %r3109;
	// inline asm
	ld.local.u32 	%r32230, [%rd8];
	ld.local.u32 	%r32231, [%rd7+12];
	// inline asm
	prmt.b32 %r39487, %r32230, %r32231, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32367, %r32368}, [%rd17];
	// inline asm
	prmt.b32 %r39488, %r32368, %r32367, %r3109;
	// inline asm
	ld.local.u32 	%r32238, [%rd7+8];
	ld.local.u32 	%r32239, [%rd7+4];
	// inline asm
	prmt.b32 %r39489, %r32238, %r32239, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32369, %r32370}, [%rd7];
	// inline asm
	prmt.b32 %r39482, %r32370, %r32369, %r3109;
	// inline asm
	ld.local.u32 	%r32246, [%rd7];
	ld.local.u32 	%r32247, [%rd6+12];
	// inline asm
	prmt.b32 %r39483, %r32246, %r32247, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32371, %r32372}, [%rd16];
	// inline asm
	prmt.b32 %r39484, %r32372, %r32371, %r3109;
	// inline asm
	ld.local.u32 	%r32254, [%rd6+8];
	ld.local.u32 	%r32255, [%rd6+4];
	// inline asm
	prmt.b32 %r39485, %r32254, %r32255, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32373, %r32374}, [%rd6];
	// inline asm
	prmt.b32 %r39510, %r32374, %r32373, %r3109;
	// inline asm
	ld.local.u32 	%r32262, [%rd6];
	ld.local.u32 	%r32263, [%rd5+12];
	// inline asm
	prmt.b32 %r39511, %r32262, %r32263, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32375, %r32376}, [%rd15];
	// inline asm
	prmt.b32 %r39512, %r32376, %r32375, %r3109;
	// inline asm
	ld.local.u32 	%r32270, [%rd5+8];
	ld.local.u32 	%r32271, [%rd5+4];
	// inline asm
	prmt.b32 %r39513, %r32270, %r32271, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32377, %r32378}, [%rd5];
	// inline asm
	prmt.b32 %r32273, %r32378, %r32377, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32273;
	ld.local.u32 	%r32278, [%rd5];
	ld.local.u32 	%r32279, [%rd4+12];
	// inline asm
	prmt.b32 %r32277, %r32278, %r32279, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32277;
	ld.local.v2.u32 	{%r32379, %r32380}, [%rd14];
	// inline asm
	prmt.b32 %r32281, %r32380, %r32379, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32281;
	ld.local.u32 	%r32286, [%rd4+8];
	ld.local.u32 	%r32287, [%rd4+4];
	// inline asm
	prmt.b32 %r32285, %r32286, %r32287, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r32285;
	ld.local.v2.u32 	{%r32381, %r32382}, [%rd4];
	// inline asm
	prmt.b32 %r32289, %r32382, %r32381, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r32289;
	ld.local.u32 	%r32294, [%rd4];
	ld.local.u32 	%r32295, [%rd3+12];
	// inline asm
	prmt.b32 %r32293, %r32294, %r32295, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r32293;
	ld.local.v2.u32 	{%r32383, %r32384}, [%rd13];
	// inline asm
	prmt.b32 %r32297, %r32384, %r32383, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r32297;
	ld.local.u32 	%r32302, [%rd3+8];
	ld.local.u32 	%r32303, [%rd3+4];
	// inline asm
	prmt.b32 %r32301, %r32302, %r32303, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r32301;
	ld.local.v2.u32 	{%r32385, %r32386}, [%rd3];
	// inline asm
	prmt.b32 %r32305, %r32386, %r32385, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r32305;
	ld.local.u32 	%r32310, [%rd3];
	ld.local.u32 	%r32311, [%rd2+12];
	// inline asm
	prmt.b32 %r32309, %r32310, %r32311, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r32309;
	ld.local.v2.u32 	{%r32387, %r32388}, [%rd12];
	// inline asm
	prmt.b32 %r32313, %r32388, %r32387, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r32313;
	ld.local.u32 	%r32318, [%rd2+8];
	ld.local.u32 	%r32319, [%rd2+4];
	// inline asm
	prmt.b32 %r32317, %r32318, %r32319, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r32317;
	ld.local.v2.u32 	{%r32389, %r32390}, [%rd2];
	// inline asm
	prmt.b32 %r32321, %r32390, %r32389, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r32321;
	ld.local.u32 	%r32326, [%rd2];
	ld.local.u32 	%r32327, [%rd1+12];
	// inline asm
	prmt.b32 %r32325, %r32326, %r32327, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r32325;
	ld.local.v2.u32 	{%r32391, %r32392}, [%rd11];
	// inline asm
	prmt.b32 %r32329, %r32392, %r32391, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r32329;
	ld.local.u32 	%r32334, [%rd1+8];
	ld.local.u32 	%r32335, [%rd1+4];
	// inline asm
	prmt.b32 %r32333, %r32334, %r32335, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r32333;
	ld.local.v2.u32 	{%r32393, %r32394}, [%rd1];
	// inline asm
	prmt.b32 %r32337, %r32394, %r32393, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r32337;
	ld.local.u32 	%r32342, [%rd1];
	// inline asm
	prmt.b32 %r32341, %r32342, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r32341;
	st.local.v2.u32 	[%rd4], {%r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39490, %r39481;
	bra.uni 	BB1_389;

BB1_373:
	setp.eq.s32	%p168, %r29267, 30;
	@%p168 bra 	BB1_376;
	bra.uni 	BB1_374;

BB1_376:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39507, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29571, %r29572}, [%rd18];
	// inline asm
	prmt.b32 %r39508, %r29572, %r29571, %r3109;
	// inline asm
	ld.local.u32 	%r29446, [%rd8+8];
	ld.local.u32 	%r29447, [%rd8+4];
	// inline asm
	prmt.b32 %r39509, %r29446, %r29447, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29573, %r29574}, [%rd8];
	// inline asm
	prmt.b32 %r39502, %r29574, %r29573, %r3109;
	// inline asm
	ld.local.u32 	%r29454, [%rd8];
	ld.local.u32 	%r29455, [%rd7+12];
	// inline asm
	prmt.b32 %r39503, %r29454, %r29455, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29575, %r29576}, [%rd17];
	// inline asm
	prmt.b32 %r39504, %r29576, %r29575, %r3109;
	// inline asm
	ld.local.u32 	%r29462, [%rd7+8];
	ld.local.u32 	%r29463, [%rd7+4];
	// inline asm
	prmt.b32 %r39505, %r29462, %r29463, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29577, %r29578}, [%rd7];
	// inline asm
	prmt.b32 %r39498, %r29578, %r29577, %r3109;
	// inline asm
	ld.local.u32 	%r29470, [%rd7];
	ld.local.u32 	%r29471, [%rd6+12];
	// inline asm
	prmt.b32 %r39499, %r29470, %r29471, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29579, %r29580}, [%rd16];
	// inline asm
	prmt.b32 %r39500, %r29580, %r29579, %r3109;
	// inline asm
	ld.local.u32 	%r29478, [%rd6+8];
	ld.local.u32 	%r29479, [%rd6+4];
	// inline asm
	prmt.b32 %r39501, %r29478, %r29479, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29581, %r29582}, [%rd6];
	// inline asm
	prmt.b32 %r39494, %r29582, %r29581, %r3109;
	// inline asm
	ld.local.u32 	%r29486, [%rd6];
	ld.local.u32 	%r29487, [%rd5+12];
	// inline asm
	prmt.b32 %r39495, %r29486, %r29487, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29583, %r29584}, [%rd15];
	// inline asm
	prmt.b32 %r39496, %r29584, %r29583, %r3109;
	// inline asm
	ld.local.u32 	%r29494, [%rd5+8];
	ld.local.u32 	%r29495, [%rd5+4];
	// inline asm
	prmt.b32 %r39497, %r29494, %r29495, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29585, %r29586}, [%rd5];
	// inline asm
	prmt.b32 %r39490, %r29586, %r29585, %r3109;
	// inline asm
	ld.local.u32 	%r29502, [%rd5];
	ld.local.u32 	%r29503, [%rd4+12];
	// inline asm
	prmt.b32 %r39491, %r29502, %r29503, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29587, %r29588}, [%rd14];
	// inline asm
	prmt.b32 %r39492, %r29588, %r29587, %r3109;
	// inline asm
	ld.local.u32 	%r29510, [%rd4+8];
	ld.local.u32 	%r29511, [%rd4+4];
	// inline asm
	prmt.b32 %r39493, %r29510, %r29511, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29589, %r29590}, [%rd4];
	// inline asm
	prmt.b32 %r39486, %r29590, %r29589, %r3109;
	// inline asm
	ld.local.u32 	%r29518, [%rd4];
	ld.local.u32 	%r29519, [%rd3+12];
	// inline asm
	prmt.b32 %r39487, %r29518, %r29519, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29591, %r29592}, [%rd13];
	// inline asm
	prmt.b32 %r39488, %r29592, %r29591, %r3109;
	// inline asm
	ld.local.u32 	%r29526, [%rd3+8];
	ld.local.u32 	%r29527, [%rd3+4];
	// inline asm
	prmt.b32 %r39489, %r29526, %r29527, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29593, %r29594}, [%rd3];
	// inline asm
	prmt.b32 %r39482, %r29594, %r29593, %r3109;
	// inline asm
	ld.local.u32 	%r29534, [%rd3];
	ld.local.u32 	%r29535, [%rd2+12];
	// inline asm
	prmt.b32 %r39483, %r29534, %r29535, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29595, %r29596}, [%rd12];
	// inline asm
	prmt.b32 %r39484, %r29596, %r29595, %r3109;
	// inline asm
	ld.local.u32 	%r29542, [%rd2+8];
	ld.local.u32 	%r29543, [%rd2+4];
	// inline asm
	prmt.b32 %r39485, %r29542, %r29543, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29597, %r29598}, [%rd2];
	// inline asm
	prmt.b32 %r39510, %r29598, %r29597, %r3109;
	// inline asm
	ld.local.u32 	%r29550, [%rd2];
	ld.local.u32 	%r29551, [%rd1+12];
	// inline asm
	prmt.b32 %r39511, %r29550, %r29551, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29599, %r29600}, [%rd11];
	// inline asm
	prmt.b32 %r39512, %r29600, %r29599, %r3109;
	// inline asm
	ld.local.u32 	%r29558, [%rd1+8];
	ld.local.u32 	%r29559, [%rd1+4];
	// inline asm
	prmt.b32 %r39513, %r29558, %r29559, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29601, %r29602}, [%rd1];
	// inline asm
	prmt.b32 %r29561, %r29602, %r29601, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r29561;
	ld.local.u32 	%r29566, [%rd1];
	// inline asm
	prmt.b32 %r29565, %r29566, %r39481, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r29565;
	st.local.v2.u32 	[%rd8], {%r39481, %r39481};
	st.local.v4.u32 	[%rd7], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39506, %r39481;
	bra.uni 	BB1_398;

BB1_317:
	setp.eq.s32	%p210, %r29267, 1;
	@%p210 bra 	BB1_318;
	bra.uni 	BB1_397;

BB1_318:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39512, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34820, %r34821}, [%rd18];
	// inline asm
	prmt.b32 %r39513, %r34821, %r34820, %r3109;
	// inline asm
	ld.local.u32 	%r34666, [%rd8+8];
	ld.local.u32 	%r34667, [%rd8+4];
	// inline asm
	prmt.b32 %r34665, %r34666, %r34667, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r34665;
	ld.local.v2.u32 	{%r34822, %r34823}, [%rd8];
	// inline asm
	prmt.b32 %r34669, %r34823, %r34822, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r34669;
	ld.local.u32 	%r34674, [%rd8];
	ld.local.u32 	%r34675, [%rd7+12];
	// inline asm
	prmt.b32 %r34673, %r34674, %r34675, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r34673;
	ld.local.v2.u32 	{%r34824, %r34825}, [%rd17];
	// inline asm
	prmt.b32 %r34677, %r34825, %r34824, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r34677;
	ld.local.u32 	%r34682, [%rd7+8];
	ld.local.u32 	%r34683, [%rd7+4];
	// inline asm
	prmt.b32 %r34681, %r34682, %r34683, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r34681;
	ld.local.v2.u32 	{%r34826, %r34827}, [%rd7];
	// inline asm
	prmt.b32 %r34685, %r34827, %r34826, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r34685;
	ld.local.u32 	%r34690, [%rd7];
	ld.local.u32 	%r34691, [%rd6+12];
	// inline asm
	prmt.b32 %r34689, %r34690, %r34691, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r34689;
	ld.local.v2.u32 	{%r34828, %r34829}, [%rd16];
	// inline asm
	prmt.b32 %r34693, %r34829, %r34828, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r34693;
	ld.local.u32 	%r34698, [%rd6+8];
	ld.local.u32 	%r34699, [%rd6+4];
	// inline asm
	prmt.b32 %r34697, %r34698, %r34699, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r34697;
	ld.local.v2.u32 	{%r34830, %r34831}, [%rd6];
	// inline asm
	prmt.b32 %r34701, %r34831, %r34830, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r34701;
	ld.local.u32 	%r34706, [%rd6];
	ld.local.u32 	%r34707, [%rd5+12];
	// inline asm
	prmt.b32 %r34705, %r34706, %r34707, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r34705;
	ld.local.v2.u32 	{%r34832, %r34833}, [%rd15];
	// inline asm
	prmt.b32 %r34709, %r34833, %r34832, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r34709;
	ld.local.u32 	%r34714, [%rd5+8];
	ld.local.u32 	%r34715, [%rd5+4];
	// inline asm
	prmt.b32 %r34713, %r34714, %r34715, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r34713;
	ld.local.v2.u32 	{%r34834, %r34835}, [%rd5];
	// inline asm
	prmt.b32 %r34717, %r34835, %r34834, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r34717;
	ld.local.u32 	%r34722, [%rd5];
	ld.local.u32 	%r34723, [%rd4+12];
	// inline asm
	prmt.b32 %r34721, %r34722, %r34723, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r34721;
	ld.local.v2.u32 	{%r34836, %r34837}, [%rd14];
	// inline asm
	prmt.b32 %r34725, %r34837, %r34836, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r34725;
	ld.local.u32 	%r34730, [%rd4+8];
	ld.local.u32 	%r34731, [%rd4+4];
	// inline asm
	prmt.b32 %r34729, %r34730, %r34731, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r34729;
	ld.local.v2.u32 	{%r34838, %r34839}, [%rd4];
	// inline asm
	prmt.b32 %r34733, %r34839, %r34838, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r34733;
	ld.local.u32 	%r34738, [%rd4];
	ld.local.u32 	%r34739, [%rd3+12];
	// inline asm
	prmt.b32 %r34737, %r34738, %r34739, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r34737;
	ld.local.v2.u32 	{%r34840, %r34841}, [%rd13];
	// inline asm
	prmt.b32 %r34741, %r34841, %r34840, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r34741;
	ld.local.u32 	%r34746, [%rd3+8];
	ld.local.u32 	%r34747, [%rd3+4];
	// inline asm
	prmt.b32 %r34745, %r34746, %r34747, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r34745;
	ld.local.v2.u32 	{%r34842, %r34843}, [%rd3];
	// inline asm
	prmt.b32 %r34749, %r34843, %r34842, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r34749;
	ld.local.u32 	%r34754, [%rd3];
	ld.local.u32 	%r34755, [%rd2+12];
	// inline asm
	prmt.b32 %r34753, %r34754, %r34755, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r34753;
	ld.local.v2.u32 	{%r34844, %r34845}, [%rd12];
	// inline asm
	prmt.b32 %r34757, %r34845, %r34844, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34757;
	ld.local.u32 	%r34762, [%rd2+8];
	ld.local.u32 	%r34763, [%rd2+4];
	// inline asm
	prmt.b32 %r34761, %r34762, %r34763, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34761;
	ld.local.v2.u32 	{%r34846, %r34847}, [%rd2];
	// inline asm
	prmt.b32 %r34765, %r34847, %r34846, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34765;
	ld.local.u32 	%r34770, [%rd2];
	ld.local.u32 	%r34771, [%rd1+12];
	// inline asm
	prmt.b32 %r34769, %r34770, %r34771, %r3109;
	// inline asm
	st.local.u32 	[%rd2+4], %r34769;
	ld.local.v2.u32 	{%r34848, %r34849}, [%rd11];
	// inline asm
	prmt.b32 %r34773, %r34849, %r34848, %r3109;
	// inline asm
	st.local.u32 	[%rd2], %r34773;
	ld.local.u32 	%r34778, [%rd1+8];
	ld.local.u32 	%r34779, [%rd1+4];
	// inline asm
	prmt.b32 %r34777, %r34778, %r34779, %r3109;
	// inline asm
	st.local.u32 	[%rd1+12], %r34777;
	ld.local.v2.u32 	{%r34850, %r34851}, [%rd1];
	// inline asm
	prmt.b32 %r34781, %r34851, %r34850, %r3109;
	// inline asm
	st.local.u32 	[%rd1+8], %r34781;
	ld.local.u32 	%r34786, [%rd1];
	// inline asm
	prmt.b32 %r34785, %r34786, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r39481, %r34785};
	mov.u32 	%r39482, %r39481;
	mov.u32 	%r39483, %r39481;
	mov.u32 	%r39484, %r39481;
	mov.u32 	%r39485, %r39481;
	mov.u32 	%r39486, %r39481;
	mov.u32 	%r39487, %r39481;
	mov.u32 	%r39488, %r39481;
	mov.u32 	%r39489, %r39481;
	mov.u32 	%r39490, %r39481;
	mov.u32 	%r39491, %r39481;
	mov.u32 	%r39492, %r39481;
	mov.u32 	%r39493, %r39481;
	mov.u32 	%r39494, %r39481;
	mov.u32 	%r39495, %r39481;
	mov.u32 	%r39496, %r39481;
	mov.u32 	%r39497, %r39481;
	mov.u32 	%r39498, %r39481;
	mov.u32 	%r39499, %r39481;
	mov.u32 	%r39500, %r39481;
	mov.u32 	%r39501, %r39481;
	mov.u32 	%r39502, %r39481;
	mov.u32 	%r39503, %r39481;
	mov.u32 	%r39504, %r39481;
	mov.u32 	%r39505, %r39481;
	mov.u32 	%r39506, %r39481;
	mov.u32 	%r39507, %r39481;
	mov.u32 	%r39508, %r39481;
	mov.u32 	%r39509, %r39481;
	mov.u32 	%r39510, %r39481;
	mov.u32 	%r39511, %r39481;
	bra.uni 	BB1_398;

BB1_349:
	setp.eq.s32	%p187, %r29267, 17;
	@%p187 bra 	BB1_350;
	bra.uni 	BB1_397;

BB1_350:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39496, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31820, %r31821}, [%rd18];
	// inline asm
	prmt.b32 %r39497, %r31821, %r31820, %r3109;
	// inline asm
	ld.local.u32 	%r31682, [%rd8+8];
	ld.local.u32 	%r31683, [%rd8+4];
	// inline asm
	prmt.b32 %r39490, %r31682, %r31683, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31822, %r31823}, [%rd8];
	// inline asm
	prmt.b32 %r39491, %r31823, %r31822, %r3109;
	// inline asm
	ld.local.u32 	%r31690, [%rd8];
	ld.local.u32 	%r31691, [%rd7+12];
	// inline asm
	prmt.b32 %r39492, %r31690, %r31691, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31824, %r31825}, [%rd17];
	// inline asm
	prmt.b32 %r39493, %r31825, %r31824, %r3109;
	// inline asm
	ld.local.u32 	%r31698, [%rd7+8];
	ld.local.u32 	%r31699, [%rd7+4];
	// inline asm
	prmt.b32 %r39486, %r31698, %r31699, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31826, %r31827}, [%rd7];
	// inline asm
	prmt.b32 %r39487, %r31827, %r31826, %r3109;
	// inline asm
	ld.local.u32 	%r31706, [%rd7];
	ld.local.u32 	%r31707, [%rd6+12];
	// inline asm
	prmt.b32 %r39488, %r31706, %r31707, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31828, %r31829}, [%rd16];
	// inline asm
	prmt.b32 %r39489, %r31829, %r31828, %r3109;
	// inline asm
	ld.local.u32 	%r31714, [%rd6+8];
	ld.local.u32 	%r31715, [%rd6+4];
	// inline asm
	prmt.b32 %r39482, %r31714, %r31715, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31830, %r31831}, [%rd6];
	// inline asm
	prmt.b32 %r39483, %r31831, %r31830, %r3109;
	// inline asm
	ld.local.u32 	%r31722, [%rd6];
	ld.local.u32 	%r31723, [%rd5+12];
	// inline asm
	prmt.b32 %r39484, %r31722, %r31723, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31832, %r31833}, [%rd15];
	// inline asm
	prmt.b32 %r39485, %r31833, %r31832, %r3109;
	// inline asm
	ld.local.u32 	%r31730, [%rd5+8];
	ld.local.u32 	%r31731, [%rd5+4];
	// inline asm
	prmt.b32 %r39510, %r31730, %r31731, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31834, %r31835}, [%rd5];
	// inline asm
	prmt.b32 %r39511, %r31835, %r31834, %r3109;
	// inline asm
	ld.local.u32 	%r31738, [%rd5];
	ld.local.u32 	%r31739, [%rd4+12];
	// inline asm
	prmt.b32 %r39512, %r31738, %r31739, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31836, %r31837}, [%rd14];
	// inline asm
	prmt.b32 %r39513, %r31837, %r31836, %r3109;
	// inline asm
	ld.local.u32 	%r31746, [%rd4+8];
	ld.local.u32 	%r31747, [%rd4+4];
	// inline asm
	prmt.b32 %r31745, %r31746, %r31747, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31745;
	ld.local.v2.u32 	{%r31838, %r31839}, [%rd4];
	// inline asm
	prmt.b32 %r31749, %r31839, %r31838, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31749;
	ld.local.u32 	%r31754, [%rd4];
	ld.local.u32 	%r31755, [%rd3+12];
	// inline asm
	prmt.b32 %r31753, %r31754, %r31755, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31753;
	ld.local.v2.u32 	{%r31840, %r31841}, [%rd13];
	// inline asm
	prmt.b32 %r31757, %r31841, %r31840, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31757;
	ld.local.u32 	%r31762, [%rd3+8];
	ld.local.u32 	%r31763, [%rd3+4];
	// inline asm
	prmt.b32 %r31761, %r31762, %r31763, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31761;
	ld.local.v2.u32 	{%r31842, %r31843}, [%rd3];
	// inline asm
	prmt.b32 %r31765, %r31843, %r31842, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31765;
	ld.local.u32 	%r31770, [%rd3];
	ld.local.u32 	%r31771, [%rd2+12];
	// inline asm
	prmt.b32 %r31769, %r31770, %r31771, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31769;
	ld.local.v2.u32 	{%r31844, %r31845}, [%rd12];
	// inline asm
	prmt.b32 %r31773, %r31845, %r31844, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31773;
	ld.local.u32 	%r31778, [%rd2+8];
	ld.local.u32 	%r31779, [%rd2+4];
	// inline asm
	prmt.b32 %r31777, %r31778, %r31779, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31777;
	ld.local.v2.u32 	{%r31846, %r31847}, [%rd2];
	// inline asm
	prmt.b32 %r31781, %r31847, %r31846, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31781;
	ld.local.u32 	%r31786, [%rd2];
	ld.local.u32 	%r31787, [%rd1+12];
	// inline asm
	prmt.b32 %r31785, %r31786, %r31787, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r31785;
	ld.local.v2.u32 	{%r31848, %r31849}, [%rd11];
	// inline asm
	prmt.b32 %r31789, %r31849, %r31848, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r31789;
	ld.local.u32 	%r31794, [%rd1+8];
	ld.local.u32 	%r31795, [%rd1+4];
	// inline asm
	prmt.b32 %r31793, %r31794, %r31795, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r31793;
	ld.local.v2.u32 	{%r31850, %r31851}, [%rd1];
	// inline asm
	prmt.b32 %r31797, %r31851, %r31850, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r31797;
	ld.local.u32 	%r31802, [%rd1];
	// inline asm
	prmt.b32 %r31801, %r31802, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r39481, %r31801};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39494, %r39481;
	mov.u32 	%r39495, %r39481;
	bra.uni 	BB1_390;

BB1_333:
	setp.eq.s32	%p199, %r29267, 9;
	@%p199 bra 	BB1_334;
	bra.uni 	BB1_397;

BB1_334:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39488, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33288, %r33289}, [%rd18];
	// inline asm
	prmt.b32 %r39489, %r33289, %r33288, %r3109;
	// inline asm
	ld.local.u32 	%r33142, [%rd8+8];
	ld.local.u32 	%r33143, [%rd8+4];
	// inline asm
	prmt.b32 %r39482, %r33142, %r33143, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33290, %r33291}, [%rd8];
	// inline asm
	prmt.b32 %r39483, %r33291, %r33290, %r3109;
	// inline asm
	ld.local.u32 	%r33150, [%rd8];
	ld.local.u32 	%r33151, [%rd7+12];
	// inline asm
	prmt.b32 %r39484, %r33150, %r33151, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33292, %r33293}, [%rd17];
	// inline asm
	prmt.b32 %r39485, %r33293, %r33292, %r3109;
	// inline asm
	ld.local.u32 	%r33158, [%rd7+8];
	ld.local.u32 	%r33159, [%rd7+4];
	// inline asm
	prmt.b32 %r39510, %r33158, %r33159, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33294, %r33295}, [%rd7];
	// inline asm
	prmt.b32 %r39511, %r33295, %r33294, %r3109;
	// inline asm
	ld.local.u32 	%r33166, [%rd7];
	ld.local.u32 	%r33167, [%rd6+12];
	// inline asm
	prmt.b32 %r39512, %r33166, %r33167, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33296, %r33297}, [%rd16];
	// inline asm
	prmt.b32 %r39513, %r33297, %r33296, %r3109;
	// inline asm
	ld.local.u32 	%r33174, [%rd6+8];
	ld.local.u32 	%r33175, [%rd6+4];
	// inline asm
	prmt.b32 %r33173, %r33174, %r33175, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r33173;
	ld.local.v2.u32 	{%r33298, %r33299}, [%rd6];
	// inline asm
	prmt.b32 %r33177, %r33299, %r33298, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r33177;
	ld.local.u32 	%r33182, [%rd6];
	ld.local.u32 	%r33183, [%rd5+12];
	// inline asm
	prmt.b32 %r33181, %r33182, %r33183, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r33181;
	ld.local.v2.u32 	{%r33300, %r33301}, [%rd15];
	// inline asm
	prmt.b32 %r33185, %r33301, %r33300, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33185;
	ld.local.u32 	%r33190, [%rd5+8];
	ld.local.u32 	%r33191, [%rd5+4];
	// inline asm
	prmt.b32 %r33189, %r33190, %r33191, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33189;
	ld.local.v2.u32 	{%r33302, %r33303}, [%rd5];
	// inline asm
	prmt.b32 %r33193, %r33303, %r33302, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33193;
	ld.local.u32 	%r33198, [%rd5];
	ld.local.u32 	%r33199, [%rd4+12];
	// inline asm
	prmt.b32 %r33197, %r33198, %r33199, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33197;
	ld.local.v2.u32 	{%r33304, %r33305}, [%rd14];
	// inline asm
	prmt.b32 %r33201, %r33305, %r33304, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33201;
	ld.local.u32 	%r33206, [%rd4+8];
	ld.local.u32 	%r33207, [%rd4+4];
	// inline asm
	prmt.b32 %r33205, %r33206, %r33207, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33205;
	ld.local.v2.u32 	{%r33306, %r33307}, [%rd4];
	// inline asm
	prmt.b32 %r33209, %r33307, %r33306, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33209;
	ld.local.u32 	%r33214, [%rd4];
	ld.local.u32 	%r33215, [%rd3+12];
	// inline asm
	prmt.b32 %r33213, %r33214, %r33215, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33213;
	ld.local.v2.u32 	{%r33308, %r33309}, [%rd13];
	// inline asm
	prmt.b32 %r33217, %r33309, %r33308, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33217;
	ld.local.u32 	%r33222, [%rd3+8];
	ld.local.u32 	%r33223, [%rd3+4];
	// inline asm
	prmt.b32 %r33221, %r33222, %r33223, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33221;
	ld.local.v2.u32 	{%r33310, %r33311}, [%rd3];
	// inline asm
	prmt.b32 %r33225, %r33311, %r33310, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33225;
	ld.local.u32 	%r33230, [%rd3];
	ld.local.u32 	%r33231, [%rd2+12];
	// inline asm
	prmt.b32 %r33229, %r33230, %r33231, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33229;
	ld.local.v2.u32 	{%r33312, %r33313}, [%rd12];
	// inline asm
	prmt.b32 %r33233, %r33313, %r33312, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33233;
	ld.local.u32 	%r33238, [%rd2+8];
	ld.local.u32 	%r33239, [%rd2+4];
	// inline asm
	prmt.b32 %r33237, %r33238, %r33239, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33237;
	ld.local.v2.u32 	{%r33314, %r33315}, [%rd2];
	// inline asm
	prmt.b32 %r33241, %r33315, %r33314, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33241;
	ld.local.u32 	%r33246, [%rd2];
	ld.local.u32 	%r33247, [%rd1+12];
	// inline asm
	prmt.b32 %r33245, %r33246, %r33247, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33245;
	ld.local.v2.u32 	{%r33316, %r33317}, [%rd11];
	// inline asm
	prmt.b32 %r33249, %r33317, %r33316, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33249;
	ld.local.u32 	%r33254, [%rd1+8];
	ld.local.u32 	%r33255, [%rd1+4];
	// inline asm
	prmt.b32 %r33253, %r33254, %r33255, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33253;
	ld.local.v2.u32 	{%r33318, %r33319}, [%rd1];
	// inline asm
	prmt.b32 %r33257, %r33319, %r33318, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33257;
	ld.local.u32 	%r33262, [%rd1];
	// inline asm
	prmt.b32 %r33261, %r33262, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r39481, %r33261};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39486, %r39481;
	mov.u32 	%r39487, %r39481;
	bra.uni 	BB1_388;

BB1_364:
	setp.eq.s32	%p176, %r29267, 25;
	@%p176 bra 	BB1_365;
	bra.uni 	BB1_397;

BB1_365:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39504, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30416, %r30417}, [%rd18];
	// inline asm
	prmt.b32 %r39505, %r30417, %r30416, %r3109;
	// inline asm
	ld.local.u32 	%r30286, [%rd8+8];
	ld.local.u32 	%r30287, [%rd8+4];
	// inline asm
	prmt.b32 %r39498, %r30286, %r30287, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30418, %r30419}, [%rd8];
	// inline asm
	prmt.b32 %r39499, %r30419, %r30418, %r3109;
	// inline asm
	ld.local.u32 	%r30294, [%rd8];
	ld.local.u32 	%r30295, [%rd7+12];
	// inline asm
	prmt.b32 %r39500, %r30294, %r30295, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30420, %r30421}, [%rd17];
	// inline asm
	prmt.b32 %r39501, %r30421, %r30420, %r3109;
	// inline asm
	ld.local.u32 	%r30302, [%rd7+8];
	ld.local.u32 	%r30303, [%rd7+4];
	// inline asm
	prmt.b32 %r39494, %r30302, %r30303, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30422, %r30423}, [%rd7];
	// inline asm
	prmt.b32 %r39495, %r30423, %r30422, %r3109;
	// inline asm
	ld.local.u32 	%r30310, [%rd7];
	ld.local.u32 	%r30311, [%rd6+12];
	// inline asm
	prmt.b32 %r39496, %r30310, %r30311, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30424, %r30425}, [%rd16];
	// inline asm
	prmt.b32 %r39497, %r30425, %r30424, %r3109;
	// inline asm
	ld.local.u32 	%r30318, [%rd6+8];
	ld.local.u32 	%r30319, [%rd6+4];
	// inline asm
	prmt.b32 %r39490, %r30318, %r30319, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30426, %r30427}, [%rd6];
	// inline asm
	prmt.b32 %r39491, %r30427, %r30426, %r3109;
	// inline asm
	ld.local.u32 	%r30326, [%rd6];
	ld.local.u32 	%r30327, [%rd5+12];
	// inline asm
	prmt.b32 %r39492, %r30326, %r30327, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30428, %r30429}, [%rd15];
	// inline asm
	prmt.b32 %r39493, %r30429, %r30428, %r3109;
	// inline asm
	ld.local.u32 	%r30334, [%rd5+8];
	ld.local.u32 	%r30335, [%rd5+4];
	// inline asm
	prmt.b32 %r39486, %r30334, %r30335, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30430, %r30431}, [%rd5];
	// inline asm
	prmt.b32 %r39487, %r30431, %r30430, %r3109;
	// inline asm
	ld.local.u32 	%r30342, [%rd5];
	ld.local.u32 	%r30343, [%rd4+12];
	// inline asm
	prmt.b32 %r39488, %r30342, %r30343, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30432, %r30433}, [%rd14];
	// inline asm
	prmt.b32 %r39489, %r30433, %r30432, %r3109;
	// inline asm
	ld.local.u32 	%r30350, [%rd4+8];
	ld.local.u32 	%r30351, [%rd4+4];
	// inline asm
	prmt.b32 %r39482, %r30350, %r30351, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30434, %r30435}, [%rd4];
	// inline asm
	prmt.b32 %r39483, %r30435, %r30434, %r3109;
	// inline asm
	ld.local.u32 	%r30358, [%rd4];
	ld.local.u32 	%r30359, [%rd3+12];
	// inline asm
	prmt.b32 %r39484, %r30358, %r30359, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30436, %r30437}, [%rd13];
	// inline asm
	prmt.b32 %r39485, %r30437, %r30436, %r3109;
	// inline asm
	ld.local.u32 	%r30366, [%rd3+8];
	ld.local.u32 	%r30367, [%rd3+4];
	// inline asm
	prmt.b32 %r39510, %r30366, %r30367, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30438, %r30439}, [%rd3];
	// inline asm
	prmt.b32 %r39511, %r30439, %r30438, %r3109;
	// inline asm
	ld.local.u32 	%r30374, [%rd3];
	ld.local.u32 	%r30375, [%rd2+12];
	// inline asm
	prmt.b32 %r39512, %r30374, %r30375, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30440, %r30441}, [%rd12];
	// inline asm
	prmt.b32 %r39513, %r30441, %r30440, %r3109;
	// inline asm
	ld.local.u32 	%r30382, [%rd2+8];
	ld.local.u32 	%r30383, [%rd2+4];
	// inline asm
	prmt.b32 %r30381, %r30382, %r30383, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30381;
	ld.local.v2.u32 	{%r30442, %r30443}, [%rd2];
	// inline asm
	prmt.b32 %r30385, %r30443, %r30442, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30385;
	ld.local.u32 	%r30390, [%rd2];
	ld.local.u32 	%r30391, [%rd1+12];
	// inline asm
	prmt.b32 %r30389, %r30390, %r30391, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30389;
	ld.local.v2.u32 	{%r30444, %r30445}, [%rd11];
	// inline asm
	prmt.b32 %r30393, %r30445, %r30444, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30393;
	ld.local.u32 	%r30398, [%rd1+8];
	ld.local.u32 	%r30399, [%rd1+4];
	// inline asm
	prmt.b32 %r30397, %r30398, %r30399, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r30397;
	ld.local.v2.u32 	{%r30446, %r30447}, [%rd1];
	// inline asm
	prmt.b32 %r30401, %r30447, %r30446, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r30401;
	ld.local.u32 	%r30406, [%rd1];
	// inline asm
	prmt.b32 %r30405, %r30406, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r39481, %r30405};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39502, %r39481;
	mov.u32 	%r39503, %r39481;
	bra.uni 	BB1_392;

BB1_324:
	setp.eq.s32	%p205, %r29267, 5;
	@%p205 bra 	BB1_325;
	bra.uni 	BB1_397;

BB1_325:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39484, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34046, %r34047}, [%rd18];
	// inline asm
	prmt.b32 %r39485, %r34047, %r34046, %r3109;
	// inline asm
	ld.local.u32 	%r33896, [%rd8+8];
	ld.local.u32 	%r33897, [%rd8+4];
	// inline asm
	prmt.b32 %r39510, %r33896, %r33897, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34048, %r34049}, [%rd8];
	// inline asm
	prmt.b32 %r39511, %r34049, %r34048, %r3109;
	// inline asm
	ld.local.u32 	%r33904, [%rd8];
	ld.local.u32 	%r33905, [%rd7+12];
	// inline asm
	prmt.b32 %r39512, %r33904, %r33905, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34050, %r34051}, [%rd17];
	// inline asm
	prmt.b32 %r39513, %r34051, %r34050, %r3109;
	// inline asm
	ld.local.u32 	%r33912, [%rd7+8];
	ld.local.u32 	%r33913, [%rd7+4];
	// inline asm
	prmt.b32 %r33911, %r33912, %r33913, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r33911;
	ld.local.v2.u32 	{%r34052, %r34053}, [%rd7];
	// inline asm
	prmt.b32 %r33915, %r34053, %r34052, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r33915;
	ld.local.u32 	%r33920, [%rd7];
	ld.local.u32 	%r33921, [%rd6+12];
	// inline asm
	prmt.b32 %r33919, %r33920, %r33921, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r33919;
	ld.local.v2.u32 	{%r34054, %r34055}, [%rd16];
	// inline asm
	prmt.b32 %r33923, %r34055, %r34054, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33923;
	ld.local.u32 	%r33928, [%rd6+8];
	ld.local.u32 	%r33929, [%rd6+4];
	// inline asm
	prmt.b32 %r33927, %r33928, %r33929, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33927;
	ld.local.v2.u32 	{%r34056, %r34057}, [%rd6];
	// inline asm
	prmt.b32 %r33931, %r34057, %r34056, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33931;
	ld.local.u32 	%r33936, [%rd6];
	ld.local.u32 	%r33937, [%rd5+12];
	// inline asm
	prmt.b32 %r33935, %r33936, %r33937, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33935;
	ld.local.v2.u32 	{%r34058, %r34059}, [%rd15];
	// inline asm
	prmt.b32 %r33939, %r34059, %r34058, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33939;
	ld.local.u32 	%r33944, [%rd5+8];
	ld.local.u32 	%r33945, [%rd5+4];
	// inline asm
	prmt.b32 %r33943, %r33944, %r33945, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33943;
	ld.local.v2.u32 	{%r34060, %r34061}, [%rd5];
	// inline asm
	prmt.b32 %r33947, %r34061, %r34060, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33947;
	ld.local.u32 	%r33952, [%rd5];
	ld.local.u32 	%r33953, [%rd4+12];
	// inline asm
	prmt.b32 %r33951, %r33952, %r33953, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33951;
	ld.local.v2.u32 	{%r34062, %r34063}, [%rd14];
	// inline asm
	prmt.b32 %r33955, %r34063, %r34062, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33955;
	ld.local.u32 	%r33960, [%rd4+8];
	ld.local.u32 	%r33961, [%rd4+4];
	// inline asm
	prmt.b32 %r33959, %r33960, %r33961, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33959;
	ld.local.v2.u32 	{%r34064, %r34065}, [%rd4];
	// inline asm
	prmt.b32 %r33963, %r34065, %r34064, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33963;
	ld.local.u32 	%r33968, [%rd4];
	ld.local.u32 	%r33969, [%rd3+12];
	// inline asm
	prmt.b32 %r33967, %r33968, %r33969, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33967;
	ld.local.v2.u32 	{%r34066, %r34067}, [%rd13];
	// inline asm
	prmt.b32 %r33971, %r34067, %r34066, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33971;
	ld.local.u32 	%r33976, [%rd3+8];
	ld.local.u32 	%r33977, [%rd3+4];
	// inline asm
	prmt.b32 %r33975, %r33976, %r33977, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33975;
	ld.local.v2.u32 	{%r34068, %r34069}, [%rd3];
	// inline asm
	prmt.b32 %r33979, %r34069, %r34068, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33979;
	ld.local.u32 	%r33984, [%rd3];
	ld.local.u32 	%r33985, [%rd2+12];
	// inline asm
	prmt.b32 %r33983, %r33984, %r33985, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33983;
	ld.local.v2.u32 	{%r34070, %r34071}, [%rd12];
	// inline asm
	prmt.b32 %r33987, %r34071, %r34070, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33987;
	ld.local.u32 	%r33992, [%rd2+8];
	ld.local.u32 	%r33993, [%rd2+4];
	// inline asm
	prmt.b32 %r33991, %r33992, %r33993, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33991;
	ld.local.v2.u32 	{%r34072, %r34073}, [%rd2];
	// inline asm
	prmt.b32 %r33995, %r34073, %r34072, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33995;
	ld.local.u32 	%r34000, [%rd2];
	ld.local.u32 	%r34001, [%rd1+12];
	// inline asm
	prmt.b32 %r33999, %r34000, %r34001, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r33999;
	ld.local.v2.u32 	{%r34074, %r34075}, [%rd11];
	// inline asm
	prmt.b32 %r34003, %r34075, %r34074, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34003;
	ld.local.u32 	%r34008, [%rd1+8];
	ld.local.u32 	%r34009, [%rd1+4];
	// inline asm
	prmt.b32 %r34007, %r34008, %r34009, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34007;
	ld.local.v2.u32 	{%r34076, %r34077}, [%rd1];
	// inline asm
	prmt.b32 %r34011, %r34077, %r34076, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34011;
	ld.local.u32 	%r34016, [%rd1];
	// inline asm
	prmt.b32 %r34015, %r34016, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r39481, %r34015};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39482, %r39481;
	mov.u32 	%r39483, %r39481;
	bra.uni 	BB1_329;

BB1_356:
	setp.eq.s32	%p182, %r29267, 21;
	@%p182 bra 	BB1_357;
	bra.uni 	BB1_397;

BB1_357:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39500, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31110, %r31111}, [%rd18];
	// inline asm
	prmt.b32 %r39501, %r31111, %r31110, %r3109;
	// inline asm
	ld.local.u32 	%r30976, [%rd8+8];
	ld.local.u32 	%r30977, [%rd8+4];
	// inline asm
	prmt.b32 %r39494, %r30976, %r30977, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31112, %r31113}, [%rd8];
	// inline asm
	prmt.b32 %r39495, %r31113, %r31112, %r3109;
	// inline asm
	ld.local.u32 	%r30984, [%rd8];
	ld.local.u32 	%r30985, [%rd7+12];
	// inline asm
	prmt.b32 %r39496, %r30984, %r30985, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31114, %r31115}, [%rd17];
	// inline asm
	prmt.b32 %r39497, %r31115, %r31114, %r3109;
	// inline asm
	ld.local.u32 	%r30992, [%rd7+8];
	ld.local.u32 	%r30993, [%rd7+4];
	// inline asm
	prmt.b32 %r39490, %r30992, %r30993, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31116, %r31117}, [%rd7];
	// inline asm
	prmt.b32 %r39491, %r31117, %r31116, %r3109;
	// inline asm
	ld.local.u32 	%r31000, [%rd7];
	ld.local.u32 	%r31001, [%rd6+12];
	// inline asm
	prmt.b32 %r39492, %r31000, %r31001, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31118, %r31119}, [%rd16];
	// inline asm
	prmt.b32 %r39493, %r31119, %r31118, %r3109;
	// inline asm
	ld.local.u32 	%r31008, [%rd6+8];
	ld.local.u32 	%r31009, [%rd6+4];
	// inline asm
	prmt.b32 %r39486, %r31008, %r31009, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31120, %r31121}, [%rd6];
	// inline asm
	prmt.b32 %r39487, %r31121, %r31120, %r3109;
	// inline asm
	ld.local.u32 	%r31016, [%rd6];
	ld.local.u32 	%r31017, [%rd5+12];
	// inline asm
	prmt.b32 %r39488, %r31016, %r31017, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31122, %r31123}, [%rd15];
	// inline asm
	prmt.b32 %r39489, %r31123, %r31122, %r3109;
	// inline asm
	ld.local.u32 	%r31024, [%rd5+8];
	ld.local.u32 	%r31025, [%rd5+4];
	// inline asm
	prmt.b32 %r39482, %r31024, %r31025, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31124, %r31125}, [%rd5];
	// inline asm
	prmt.b32 %r39483, %r31125, %r31124, %r3109;
	// inline asm
	ld.local.u32 	%r31032, [%rd5];
	ld.local.u32 	%r31033, [%rd4+12];
	// inline asm
	prmt.b32 %r39484, %r31032, %r31033, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31126, %r31127}, [%rd14];
	// inline asm
	prmt.b32 %r39485, %r31127, %r31126, %r3109;
	// inline asm
	ld.local.u32 	%r31040, [%rd4+8];
	ld.local.u32 	%r31041, [%rd4+4];
	// inline asm
	prmt.b32 %r39510, %r31040, %r31041, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31128, %r31129}, [%rd4];
	// inline asm
	prmt.b32 %r39511, %r31129, %r31128, %r3109;
	// inline asm
	ld.local.u32 	%r31048, [%rd4];
	ld.local.u32 	%r31049, [%rd3+12];
	// inline asm
	prmt.b32 %r39512, %r31048, %r31049, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31130, %r31131}, [%rd13];
	// inline asm
	prmt.b32 %r39513, %r31131, %r31130, %r3109;
	// inline asm
	ld.local.u32 	%r31056, [%rd3+8];
	ld.local.u32 	%r31057, [%rd3+4];
	// inline asm
	prmt.b32 %r31055, %r31056, %r31057, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31055;
	ld.local.v2.u32 	{%r31132, %r31133}, [%rd3];
	// inline asm
	prmt.b32 %r31059, %r31133, %r31132, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31059;
	ld.local.u32 	%r31064, [%rd3];
	ld.local.u32 	%r31065, [%rd2+12];
	// inline asm
	prmt.b32 %r31063, %r31064, %r31065, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31063;
	ld.local.v2.u32 	{%r31134, %r31135}, [%rd12];
	// inline asm
	prmt.b32 %r31067, %r31135, %r31134, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31067;
	ld.local.u32 	%r31072, [%rd2+8];
	ld.local.u32 	%r31073, [%rd2+4];
	// inline asm
	prmt.b32 %r31071, %r31072, %r31073, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31071;
	ld.local.v2.u32 	{%r31136, %r31137}, [%rd2];
	// inline asm
	prmt.b32 %r31075, %r31137, %r31136, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31075;
	ld.local.u32 	%r31080, [%rd2];
	ld.local.u32 	%r31081, [%rd1+12];
	// inline asm
	prmt.b32 %r31079, %r31080, %r31081, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31079;
	ld.local.v2.u32 	{%r31138, %r31139}, [%rd11];
	// inline asm
	prmt.b32 %r31083, %r31139, %r31138, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31083;
	ld.local.u32 	%r31088, [%rd1+8];
	ld.local.u32 	%r31089, [%rd1+4];
	// inline asm
	prmt.b32 %r31087, %r31088, %r31089, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31087;
	ld.local.v2.u32 	{%r31140, %r31141}, [%rd1];
	// inline asm
	prmt.b32 %r31091, %r31141, %r31140, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31091;
	ld.local.u32 	%r31096, [%rd1];
	// inline asm
	prmt.b32 %r31095, %r31096, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r39481, %r31095};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39498, %r39481;
	mov.u32 	%r39499, %r39481;
	bra.uni 	BB1_391;

BB1_340:
	setp.eq.s32	%p194, %r29267, 13;
	@%p194 bra 	BB1_341;
	bra.uni 	BB1_397;

BB1_341:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39492, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32546, %r32547}, [%rd18];
	// inline asm
	prmt.b32 %r39493, %r32547, %r32546, %r3109;
	// inline asm
	ld.local.u32 	%r32404, [%rd8+8];
	ld.local.u32 	%r32405, [%rd8+4];
	// inline asm
	prmt.b32 %r39486, %r32404, %r32405, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32548, %r32549}, [%rd8];
	// inline asm
	prmt.b32 %r39487, %r32549, %r32548, %r3109;
	// inline asm
	ld.local.u32 	%r32412, [%rd8];
	ld.local.u32 	%r32413, [%rd7+12];
	// inline asm
	prmt.b32 %r39488, %r32412, %r32413, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32550, %r32551}, [%rd17];
	// inline asm
	prmt.b32 %r39489, %r32551, %r32550, %r3109;
	// inline asm
	ld.local.u32 	%r32420, [%rd7+8];
	ld.local.u32 	%r32421, [%rd7+4];
	// inline asm
	prmt.b32 %r39482, %r32420, %r32421, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32552, %r32553}, [%rd7];
	// inline asm
	prmt.b32 %r39483, %r32553, %r32552, %r3109;
	// inline asm
	ld.local.u32 	%r32428, [%rd7];
	ld.local.u32 	%r32429, [%rd6+12];
	// inline asm
	prmt.b32 %r39484, %r32428, %r32429, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32554, %r32555}, [%rd16];
	// inline asm
	prmt.b32 %r39485, %r32555, %r32554, %r3109;
	// inline asm
	ld.local.u32 	%r32436, [%rd6+8];
	ld.local.u32 	%r32437, [%rd6+4];
	// inline asm
	prmt.b32 %r39510, %r32436, %r32437, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32556, %r32557}, [%rd6];
	// inline asm
	prmt.b32 %r39511, %r32557, %r32556, %r3109;
	// inline asm
	ld.local.u32 	%r32444, [%rd6];
	ld.local.u32 	%r32445, [%rd5+12];
	// inline asm
	prmt.b32 %r39512, %r32444, %r32445, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32558, %r32559}, [%rd15];
	// inline asm
	prmt.b32 %r39513, %r32559, %r32558, %r3109;
	// inline asm
	ld.local.u32 	%r32452, [%rd5+8];
	ld.local.u32 	%r32453, [%rd5+4];
	// inline asm
	prmt.b32 %r32451, %r32452, %r32453, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32451;
	ld.local.v2.u32 	{%r32560, %r32561}, [%rd5];
	// inline asm
	prmt.b32 %r32455, %r32561, %r32560, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32455;
	ld.local.u32 	%r32460, [%rd5];
	ld.local.u32 	%r32461, [%rd4+12];
	// inline asm
	prmt.b32 %r32459, %r32460, %r32461, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32459;
	ld.local.v2.u32 	{%r32562, %r32563}, [%rd14];
	// inline asm
	prmt.b32 %r32463, %r32563, %r32562, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r32463;
	ld.local.u32 	%r32468, [%rd4+8];
	ld.local.u32 	%r32469, [%rd4+4];
	// inline asm
	prmt.b32 %r32467, %r32468, %r32469, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r32467;
	ld.local.v2.u32 	{%r32564, %r32565}, [%rd4];
	// inline asm
	prmt.b32 %r32471, %r32565, %r32564, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r32471;
	ld.local.u32 	%r32476, [%rd4];
	ld.local.u32 	%r32477, [%rd3+12];
	// inline asm
	prmt.b32 %r32475, %r32476, %r32477, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r32475;
	ld.local.v2.u32 	{%r32566, %r32567}, [%rd13];
	// inline asm
	prmt.b32 %r32479, %r32567, %r32566, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r32479;
	ld.local.u32 	%r32484, [%rd3+8];
	ld.local.u32 	%r32485, [%rd3+4];
	// inline asm
	prmt.b32 %r32483, %r32484, %r32485, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r32483;
	ld.local.v2.u32 	{%r32568, %r32569}, [%rd3];
	// inline asm
	prmt.b32 %r32487, %r32569, %r32568, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r32487;
	ld.local.u32 	%r32492, [%rd3];
	ld.local.u32 	%r32493, [%rd2+12];
	// inline asm
	prmt.b32 %r32491, %r32492, %r32493, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r32491;
	ld.local.v2.u32 	{%r32570, %r32571}, [%rd12];
	// inline asm
	prmt.b32 %r32495, %r32571, %r32570, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r32495;
	ld.local.u32 	%r32500, [%rd2+8];
	ld.local.u32 	%r32501, [%rd2+4];
	// inline asm
	prmt.b32 %r32499, %r32500, %r32501, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r32499;
	ld.local.v2.u32 	{%r32572, %r32573}, [%rd2];
	// inline asm
	prmt.b32 %r32503, %r32573, %r32572, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r32503;
	ld.local.u32 	%r32508, [%rd2];
	ld.local.u32 	%r32509, [%rd1+12];
	// inline asm
	prmt.b32 %r32507, %r32508, %r32509, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r32507;
	ld.local.v2.u32 	{%r32574, %r32575}, [%rd11];
	// inline asm
	prmt.b32 %r32511, %r32575, %r32574, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r32511;
	ld.local.u32 	%r32516, [%rd1+8];
	ld.local.u32 	%r32517, [%rd1+4];
	// inline asm
	prmt.b32 %r32515, %r32516, %r32517, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r32515;
	ld.local.v2.u32 	{%r32576, %r32577}, [%rd1];
	// inline asm
	prmt.b32 %r32519, %r32577, %r32576, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r32519;
	ld.local.u32 	%r32524, [%rd1];
	// inline asm
	prmt.b32 %r32523, %r32524, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r39481, %r32523};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39490, %r39481;
	mov.u32 	%r39491, %r39481;
	bra.uni 	BB1_389;

BB1_371:
	setp.eq.s32	%p171, %r29267, 29;
	@%p171 bra 	BB1_372;
	bra.uni 	BB1_397;

BB1_372:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39508, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29738, %r29739}, [%rd18];
	// inline asm
	prmt.b32 %r39509, %r29739, %r29738, %r3109;
	// inline asm
	ld.local.u32 	%r29612, [%rd8+8];
	ld.local.u32 	%r29613, [%rd8+4];
	// inline asm
	prmt.b32 %r39502, %r29612, %r29613, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29740, %r29741}, [%rd8];
	// inline asm
	prmt.b32 %r39503, %r29741, %r29740, %r3109;
	// inline asm
	ld.local.u32 	%r29620, [%rd8];
	ld.local.u32 	%r29621, [%rd7+12];
	// inline asm
	prmt.b32 %r39504, %r29620, %r29621, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29742, %r29743}, [%rd17];
	// inline asm
	prmt.b32 %r39505, %r29743, %r29742, %r3109;
	// inline asm
	ld.local.u32 	%r29628, [%rd7+8];
	ld.local.u32 	%r29629, [%rd7+4];
	// inline asm
	prmt.b32 %r39498, %r29628, %r29629, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29744, %r29745}, [%rd7];
	// inline asm
	prmt.b32 %r39499, %r29745, %r29744, %r3109;
	// inline asm
	ld.local.u32 	%r29636, [%rd7];
	ld.local.u32 	%r29637, [%rd6+12];
	// inline asm
	prmt.b32 %r39500, %r29636, %r29637, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29746, %r29747}, [%rd16];
	// inline asm
	prmt.b32 %r39501, %r29747, %r29746, %r3109;
	// inline asm
	ld.local.u32 	%r29644, [%rd6+8];
	ld.local.u32 	%r29645, [%rd6+4];
	// inline asm
	prmt.b32 %r39494, %r29644, %r29645, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29748, %r29749}, [%rd6];
	// inline asm
	prmt.b32 %r39495, %r29749, %r29748, %r3109;
	// inline asm
	ld.local.u32 	%r29652, [%rd6];
	ld.local.u32 	%r29653, [%rd5+12];
	// inline asm
	prmt.b32 %r39496, %r29652, %r29653, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29750, %r29751}, [%rd15];
	// inline asm
	prmt.b32 %r39497, %r29751, %r29750, %r3109;
	// inline asm
	ld.local.u32 	%r29660, [%rd5+8];
	ld.local.u32 	%r29661, [%rd5+4];
	// inline asm
	prmt.b32 %r39490, %r29660, %r29661, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29752, %r29753}, [%rd5];
	// inline asm
	prmt.b32 %r39491, %r29753, %r29752, %r3109;
	// inline asm
	ld.local.u32 	%r29668, [%rd5];
	ld.local.u32 	%r29669, [%rd4+12];
	// inline asm
	prmt.b32 %r39492, %r29668, %r29669, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29754, %r29755}, [%rd14];
	// inline asm
	prmt.b32 %r39493, %r29755, %r29754, %r3109;
	// inline asm
	ld.local.u32 	%r29676, [%rd4+8];
	ld.local.u32 	%r29677, [%rd4+4];
	// inline asm
	prmt.b32 %r39486, %r29676, %r29677, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29756, %r29757}, [%rd4];
	// inline asm
	prmt.b32 %r39487, %r29757, %r29756, %r3109;
	// inline asm
	ld.local.u32 	%r29684, [%rd4];
	ld.local.u32 	%r29685, [%rd3+12];
	// inline asm
	prmt.b32 %r39488, %r29684, %r29685, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29758, %r29759}, [%rd13];
	// inline asm
	prmt.b32 %r39489, %r29759, %r29758, %r3109;
	// inline asm
	ld.local.u32 	%r29692, [%rd3+8];
	ld.local.u32 	%r29693, [%rd3+4];
	// inline asm
	prmt.b32 %r39482, %r29692, %r29693, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29760, %r29761}, [%rd3];
	// inline asm
	prmt.b32 %r39483, %r29761, %r29760, %r3109;
	// inline asm
	ld.local.u32 	%r29700, [%rd3];
	ld.local.u32 	%r29701, [%rd2+12];
	// inline asm
	prmt.b32 %r39484, %r29700, %r29701, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29762, %r29763}, [%rd12];
	// inline asm
	prmt.b32 %r39485, %r29763, %r29762, %r3109;
	// inline asm
	ld.local.u32 	%r29708, [%rd2+8];
	ld.local.u32 	%r29709, [%rd2+4];
	// inline asm
	prmt.b32 %r39510, %r29708, %r29709, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29764, %r29765}, [%rd2];
	// inline asm
	prmt.b32 %r39511, %r29765, %r29764, %r3109;
	// inline asm
	ld.local.u32 	%r29716, [%rd2];
	ld.local.u32 	%r29717, [%rd1+12];
	// inline asm
	prmt.b32 %r39512, %r29716, %r29717, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29766, %r29767}, [%rd11];
	// inline asm
	prmt.b32 %r39513, %r29767, %r29766, %r3109;
	// inline asm
	ld.local.u32 	%r29724, [%rd1+8];
	ld.local.u32 	%r29725, [%rd1+4];
	// inline asm
	prmt.b32 %r29723, %r29724, %r29725, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r29723;
	ld.local.v2.u32 	{%r29768, %r29769}, [%rd1];
	// inline asm
	prmt.b32 %r29727, %r29769, %r29768, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r29727;
	ld.local.u32 	%r29732, [%rd1];
	// inline asm
	prmt.b32 %r29731, %r29732, %r39481, %r3109;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r39481, %r29731};
	st.local.v4.u32 	[%rd7], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	mov.u32 	%r39506, %r39481;
	mov.u32 	%r39507, %r39481;
	bra.uni 	BB1_398;

BB1_320:
	setp.eq.s32	%p208, %r29267, 3;
	@%p208 bra 	BB1_321;
	bra.uni 	BB1_397;

BB1_321:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39510, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34431, %r34432}, [%rd18];
	// inline asm
	prmt.b32 %r39511, %r34432, %r34431, %r3109;
	// inline asm
	ld.local.u32 	%r34279, [%rd8+8];
	ld.local.u32 	%r34280, [%rd8+4];
	// inline asm
	prmt.b32 %r39512, %r34279, %r34280, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r34433, %r34434}, [%rd8];
	// inline asm
	prmt.b32 %r39513, %r34434, %r34433, %r3109;
	// inline asm
	ld.local.u32 	%r34287, [%rd8];
	ld.local.u32 	%r34288, [%rd7+12];
	// inline asm
	prmt.b32 %r34286, %r34287, %r34288, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r34286;
	ld.local.v2.u32 	{%r34435, %r34436}, [%rd17];
	// inline asm
	prmt.b32 %r34290, %r34436, %r34435, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r34290;
	ld.local.u32 	%r34295, [%rd7+8];
	ld.local.u32 	%r34296, [%rd7+4];
	// inline asm
	prmt.b32 %r34294, %r34295, %r34296, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r34294;
	ld.local.v2.u32 	{%r34437, %r34438}, [%rd7];
	// inline asm
	prmt.b32 %r34298, %r34438, %r34437, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r34298;
	ld.local.u32 	%r34303, [%rd7];
	ld.local.u32 	%r34304, [%rd6+12];
	// inline asm
	prmt.b32 %r34302, %r34303, %r34304, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r34302;
	ld.local.v2.u32 	{%r34439, %r34440}, [%rd16];
	// inline asm
	prmt.b32 %r34306, %r34440, %r34439, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r34306;
	ld.local.u32 	%r34311, [%rd6+8];
	ld.local.u32 	%r34312, [%rd6+4];
	// inline asm
	prmt.b32 %r34310, %r34311, %r34312, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r34310;
	ld.local.v2.u32 	{%r34441, %r34442}, [%rd6];
	// inline asm
	prmt.b32 %r34314, %r34442, %r34441, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r34314;
	ld.local.u32 	%r34319, [%rd6];
	ld.local.u32 	%r34320, [%rd5+12];
	// inline asm
	prmt.b32 %r34318, %r34319, %r34320, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r34318;
	ld.local.v2.u32 	{%r34443, %r34444}, [%rd15];
	// inline asm
	prmt.b32 %r34322, %r34444, %r34443, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r34322;
	ld.local.u32 	%r34327, [%rd5+8];
	ld.local.u32 	%r34328, [%rd5+4];
	// inline asm
	prmt.b32 %r34326, %r34327, %r34328, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r34326;
	ld.local.v2.u32 	{%r34445, %r34446}, [%rd5];
	// inline asm
	prmt.b32 %r34330, %r34446, %r34445, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r34330;
	ld.local.u32 	%r34335, [%rd5];
	ld.local.u32 	%r34336, [%rd4+12];
	// inline asm
	prmt.b32 %r34334, %r34335, %r34336, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r34334;
	ld.local.v2.u32 	{%r34447, %r34448}, [%rd14];
	// inline asm
	prmt.b32 %r34338, %r34448, %r34447, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r34338;
	ld.local.u32 	%r34343, [%rd4+8];
	ld.local.u32 	%r34344, [%rd4+4];
	// inline asm
	prmt.b32 %r34342, %r34343, %r34344, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r34342;
	ld.local.v2.u32 	{%r34449, %r34450}, [%rd4];
	// inline asm
	prmt.b32 %r34346, %r34450, %r34449, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r34346;
	ld.local.u32 	%r34351, [%rd4];
	ld.local.u32 	%r34352, [%rd3+12];
	// inline asm
	prmt.b32 %r34350, %r34351, %r34352, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r34350;
	ld.local.v2.u32 	{%r34451, %r34452}, [%rd13];
	// inline asm
	prmt.b32 %r34354, %r34452, %r34451, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r34354;
	ld.local.u32 	%r34359, [%rd3+8];
	ld.local.u32 	%r34360, [%rd3+4];
	// inline asm
	prmt.b32 %r34358, %r34359, %r34360, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r34358;
	ld.local.v2.u32 	{%r34453, %r34454}, [%rd3];
	// inline asm
	prmt.b32 %r34362, %r34454, %r34453, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r34362;
	ld.local.u32 	%r34367, [%rd3];
	ld.local.u32 	%r34368, [%rd2+12];
	// inline asm
	prmt.b32 %r34366, %r34367, %r34368, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r34366;
	ld.local.v2.u32 	{%r34455, %r34456}, [%rd12];
	// inline asm
	prmt.b32 %r34370, %r34456, %r34455, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r34370;
	ld.local.u32 	%r34375, [%rd2+8];
	ld.local.u32 	%r34376, [%rd2+4];
	// inline asm
	prmt.b32 %r34374, %r34375, %r34376, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r34374;
	ld.local.v2.u32 	{%r34457, %r34458}, [%rd2];
	// inline asm
	prmt.b32 %r34378, %r34458, %r34457, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r34378;
	ld.local.u32 	%r34383, [%rd2];
	ld.local.u32 	%r34384, [%rd1+12];
	// inline asm
	prmt.b32 %r34382, %r34383, %r34384, %r3109;
	// inline asm
	st.local.u32 	[%rd2+12], %r34382;
	ld.local.v2.u32 	{%r34459, %r34460}, [%rd11];
	// inline asm
	prmt.b32 %r34386, %r34460, %r34459, %r3109;
	// inline asm
	st.local.u32 	[%rd2+8], %r34386;
	ld.local.u32 	%r34391, [%rd1+8];
	ld.local.u32 	%r34392, [%rd1+4];
	// inline asm
	prmt.b32 %r34390, %r34391, %r34392, %r3109;
	// inline asm
	st.local.u32 	[%rd2+4], %r34390;
	ld.local.v2.u32 	{%r34461, %r34462}, [%rd1];
	// inline asm
	prmt.b32 %r34394, %r34462, %r34461, %r3109;
	// inline asm
	st.local.u32 	[%rd2], %r34394;
	ld.local.u32 	%r34399, [%rd1];
	// inline asm
	prmt.b32 %r34398, %r34399, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r34398};
	mov.u32 	%r39482, %r39481;
	mov.u32 	%r39483, %r39481;
	mov.u32 	%r39484, %r39481;
	mov.u32 	%r39485, %r39481;
	bra.uni 	BB1_329;

BB1_352:
	setp.eq.s32	%p185, %r29267, 19;
	@%p185 bra 	BB1_353;
	bra.uni 	BB1_397;

BB1_353:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39494, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31463, %r31464}, [%rd18];
	// inline asm
	prmt.b32 %r39495, %r31464, %r31463, %r3109;
	// inline asm
	ld.local.u32 	%r31327, [%rd8+8];
	ld.local.u32 	%r31328, [%rd8+4];
	// inline asm
	prmt.b32 %r39496, %r31327, %r31328, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31465, %r31466}, [%rd8];
	// inline asm
	prmt.b32 %r39497, %r31466, %r31465, %r3109;
	// inline asm
	ld.local.u32 	%r31335, [%rd8];
	ld.local.u32 	%r31336, [%rd7+12];
	// inline asm
	prmt.b32 %r39490, %r31335, %r31336, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31467, %r31468}, [%rd17];
	// inline asm
	prmt.b32 %r39491, %r31468, %r31467, %r3109;
	// inline asm
	ld.local.u32 	%r31343, [%rd7+8];
	ld.local.u32 	%r31344, [%rd7+4];
	// inline asm
	prmt.b32 %r39492, %r31343, %r31344, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31469, %r31470}, [%rd7];
	// inline asm
	prmt.b32 %r39493, %r31470, %r31469, %r3109;
	// inline asm
	ld.local.u32 	%r31351, [%rd7];
	ld.local.u32 	%r31352, [%rd6+12];
	// inline asm
	prmt.b32 %r39486, %r31351, %r31352, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31471, %r31472}, [%rd16];
	// inline asm
	prmt.b32 %r39487, %r31472, %r31471, %r3109;
	// inline asm
	ld.local.u32 	%r31359, [%rd6+8];
	ld.local.u32 	%r31360, [%rd6+4];
	// inline asm
	prmt.b32 %r39488, %r31359, %r31360, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31473, %r31474}, [%rd6];
	// inline asm
	prmt.b32 %r39489, %r31474, %r31473, %r3109;
	// inline asm
	ld.local.u32 	%r31367, [%rd6];
	ld.local.u32 	%r31368, [%rd5+12];
	// inline asm
	prmt.b32 %r39482, %r31367, %r31368, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31475, %r31476}, [%rd15];
	// inline asm
	prmt.b32 %r39483, %r31476, %r31475, %r3109;
	// inline asm
	ld.local.u32 	%r31375, [%rd5+8];
	ld.local.u32 	%r31376, [%rd5+4];
	// inline asm
	prmt.b32 %r39484, %r31375, %r31376, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31477, %r31478}, [%rd5];
	// inline asm
	prmt.b32 %r39485, %r31478, %r31477, %r3109;
	// inline asm
	ld.local.u32 	%r31383, [%rd5];
	ld.local.u32 	%r31384, [%rd4+12];
	// inline asm
	prmt.b32 %r39510, %r31383, %r31384, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31479, %r31480}, [%rd14];
	// inline asm
	prmt.b32 %r39511, %r31480, %r31479, %r3109;
	// inline asm
	ld.local.u32 	%r31391, [%rd4+8];
	ld.local.u32 	%r31392, [%rd4+4];
	// inline asm
	prmt.b32 %r39512, %r31391, %r31392, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r31481, %r31482}, [%rd4];
	// inline asm
	prmt.b32 %r39513, %r31482, %r31481, %r3109;
	// inline asm
	ld.local.u32 	%r31399, [%rd4];
	ld.local.u32 	%r31400, [%rd3+12];
	// inline asm
	prmt.b32 %r31398, %r31399, %r31400, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r31398;
	ld.local.v2.u32 	{%r31483, %r31484}, [%rd13];
	// inline asm
	prmt.b32 %r31402, %r31484, %r31483, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r31402;
	ld.local.u32 	%r31407, [%rd3+8];
	ld.local.u32 	%r31408, [%rd3+4];
	// inline asm
	prmt.b32 %r31406, %r31407, %r31408, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r31406;
	ld.local.v2.u32 	{%r31485, %r31486}, [%rd3];
	// inline asm
	prmt.b32 %r31410, %r31486, %r31485, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r31410;
	ld.local.u32 	%r31415, [%rd3];
	ld.local.u32 	%r31416, [%rd2+12];
	// inline asm
	prmt.b32 %r31414, %r31415, %r31416, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r31414;
	ld.local.v2.u32 	{%r31487, %r31488}, [%rd12];
	// inline asm
	prmt.b32 %r31418, %r31488, %r31487, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r31418;
	ld.local.u32 	%r31423, [%rd2+8];
	ld.local.u32 	%r31424, [%rd2+4];
	// inline asm
	prmt.b32 %r31422, %r31423, %r31424, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r31422;
	ld.local.v2.u32 	{%r31489, %r31490}, [%rd2];
	// inline asm
	prmt.b32 %r31426, %r31490, %r31489, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r31426;
	ld.local.u32 	%r31431, [%rd2];
	ld.local.u32 	%r31432, [%rd1+12];
	// inline asm
	prmt.b32 %r31430, %r31431, %r31432, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r31430;
	ld.local.v2.u32 	{%r31491, %r31492}, [%rd11];
	// inline asm
	prmt.b32 %r31434, %r31492, %r31491, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r31434;
	ld.local.u32 	%r31439, [%rd1+8];
	ld.local.u32 	%r31440, [%rd1+4];
	// inline asm
	prmt.b32 %r31438, %r31439, %r31440, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r31438;
	ld.local.v2.u32 	{%r31493, %r31494}, [%rd1];
	// inline asm
	prmt.b32 %r31442, %r31494, %r31493, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r31442;
	ld.local.u32 	%r31447, [%rd1];
	// inline asm
	prmt.b32 %r31446, %r31447, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r31446};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_390;

BB1_336:
	setp.eq.s32	%p197, %r29267, 11;
	@%p197 bra 	BB1_337;
	bra.uni 	BB1_397;

BB1_337:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39486, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32915, %r32916}, [%rd18];
	// inline asm
	prmt.b32 %r39487, %r32916, %r32915, %r3109;
	// inline asm
	ld.local.u32 	%r32771, [%rd8+8];
	ld.local.u32 	%r32772, [%rd8+4];
	// inline asm
	prmt.b32 %r39488, %r32771, %r32772, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32917, %r32918}, [%rd8];
	// inline asm
	prmt.b32 %r39489, %r32918, %r32917, %r3109;
	// inline asm
	ld.local.u32 	%r32779, [%rd8];
	ld.local.u32 	%r32780, [%rd7+12];
	// inline asm
	prmt.b32 %r39482, %r32779, %r32780, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32919, %r32920}, [%rd17];
	// inline asm
	prmt.b32 %r39483, %r32920, %r32919, %r3109;
	// inline asm
	ld.local.u32 	%r32787, [%rd7+8];
	ld.local.u32 	%r32788, [%rd7+4];
	// inline asm
	prmt.b32 %r39484, %r32787, %r32788, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32921, %r32922}, [%rd7];
	// inline asm
	prmt.b32 %r39485, %r32922, %r32921, %r3109;
	// inline asm
	ld.local.u32 	%r32795, [%rd7];
	ld.local.u32 	%r32796, [%rd6+12];
	// inline asm
	prmt.b32 %r39510, %r32795, %r32796, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32923, %r32924}, [%rd16];
	// inline asm
	prmt.b32 %r39511, %r32924, %r32923, %r3109;
	// inline asm
	ld.local.u32 	%r32803, [%rd6+8];
	ld.local.u32 	%r32804, [%rd6+4];
	// inline asm
	prmt.b32 %r39512, %r32803, %r32804, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32925, %r32926}, [%rd6];
	// inline asm
	prmt.b32 %r39513, %r32926, %r32925, %r3109;
	// inline asm
	ld.local.u32 	%r32811, [%rd6];
	ld.local.u32 	%r32812, [%rd5+12];
	// inline asm
	prmt.b32 %r32810, %r32811, %r32812, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32810;
	ld.local.v2.u32 	{%r32927, %r32928}, [%rd15];
	// inline asm
	prmt.b32 %r32814, %r32928, %r32927, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32814;
	ld.local.u32 	%r32819, [%rd5+8];
	ld.local.u32 	%r32820, [%rd5+4];
	// inline asm
	prmt.b32 %r32818, %r32819, %r32820, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32818;
	ld.local.v2.u32 	{%r32929, %r32930}, [%rd5];
	// inline asm
	prmt.b32 %r32822, %r32930, %r32929, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r32822;
	ld.local.u32 	%r32827, [%rd5];
	ld.local.u32 	%r32828, [%rd4+12];
	// inline asm
	prmt.b32 %r32826, %r32827, %r32828, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r32826;
	ld.local.v2.u32 	{%r32931, %r32932}, [%rd14];
	// inline asm
	prmt.b32 %r32830, %r32932, %r32931, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r32830;
	ld.local.u32 	%r32835, [%rd4+8];
	ld.local.u32 	%r32836, [%rd4+4];
	// inline asm
	prmt.b32 %r32834, %r32835, %r32836, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r32834;
	ld.local.v2.u32 	{%r32933, %r32934}, [%rd4];
	// inline asm
	prmt.b32 %r32838, %r32934, %r32933, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r32838;
	ld.local.u32 	%r32843, [%rd4];
	ld.local.u32 	%r32844, [%rd3+12];
	// inline asm
	prmt.b32 %r32842, %r32843, %r32844, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r32842;
	ld.local.v2.u32 	{%r32935, %r32936}, [%rd13];
	// inline asm
	prmt.b32 %r32846, %r32936, %r32935, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r32846;
	ld.local.u32 	%r32851, [%rd3+8];
	ld.local.u32 	%r32852, [%rd3+4];
	// inline asm
	prmt.b32 %r32850, %r32851, %r32852, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r32850;
	ld.local.v2.u32 	{%r32937, %r32938}, [%rd3];
	// inline asm
	prmt.b32 %r32854, %r32938, %r32937, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r32854;
	ld.local.u32 	%r32859, [%rd3];
	ld.local.u32 	%r32860, [%rd2+12];
	// inline asm
	prmt.b32 %r32858, %r32859, %r32860, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r32858;
	ld.local.v2.u32 	{%r32939, %r32940}, [%rd12];
	// inline asm
	prmt.b32 %r32862, %r32940, %r32939, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r32862;
	ld.local.u32 	%r32867, [%rd2+8];
	ld.local.u32 	%r32868, [%rd2+4];
	// inline asm
	prmt.b32 %r32866, %r32867, %r32868, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r32866;
	ld.local.v2.u32 	{%r32941, %r32942}, [%rd2];
	// inline asm
	prmt.b32 %r32870, %r32942, %r32941, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r32870;
	ld.local.u32 	%r32875, [%rd2];
	ld.local.u32 	%r32876, [%rd1+12];
	// inline asm
	prmt.b32 %r32874, %r32875, %r32876, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r32874;
	ld.local.v2.u32 	{%r32943, %r32944}, [%rd11];
	// inline asm
	prmt.b32 %r32878, %r32944, %r32943, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r32878;
	ld.local.u32 	%r32883, [%rd1+8];
	ld.local.u32 	%r32884, [%rd1+4];
	// inline asm
	prmt.b32 %r32882, %r32883, %r32884, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r32882;
	ld.local.v2.u32 	{%r32945, %r32946}, [%rd1];
	// inline asm
	prmt.b32 %r32886, %r32946, %r32945, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r32886;
	ld.local.u32 	%r32891, [%rd1];
	// inline asm
	prmt.b32 %r32890, %r32891, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r32890};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_388;

BB1_367:
	setp.eq.s32	%p174, %r29267, 27;
	@%p174 bra 	BB1_368;
	bra.uni 	BB1_397;

BB1_368:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39502, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30075, %r30076}, [%rd18];
	// inline asm
	prmt.b32 %r39503, %r30076, %r30075, %r3109;
	// inline asm
	ld.local.u32 	%r29947, [%rd8+8];
	ld.local.u32 	%r29948, [%rd8+4];
	// inline asm
	prmt.b32 %r39504, %r29947, %r29948, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30077, %r30078}, [%rd8];
	// inline asm
	prmt.b32 %r39505, %r30078, %r30077, %r3109;
	// inline asm
	ld.local.u32 	%r29955, [%rd8];
	ld.local.u32 	%r29956, [%rd7+12];
	// inline asm
	prmt.b32 %r39498, %r29955, %r29956, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30079, %r30080}, [%rd17];
	// inline asm
	prmt.b32 %r39499, %r30080, %r30079, %r3109;
	// inline asm
	ld.local.u32 	%r29963, [%rd7+8];
	ld.local.u32 	%r29964, [%rd7+4];
	// inline asm
	prmt.b32 %r39500, %r29963, %r29964, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30081, %r30082}, [%rd7];
	// inline asm
	prmt.b32 %r39501, %r30082, %r30081, %r3109;
	// inline asm
	ld.local.u32 	%r29971, [%rd7];
	ld.local.u32 	%r29972, [%rd6+12];
	// inline asm
	prmt.b32 %r39494, %r29971, %r29972, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30083, %r30084}, [%rd16];
	// inline asm
	prmt.b32 %r39495, %r30084, %r30083, %r3109;
	// inline asm
	ld.local.u32 	%r29979, [%rd6+8];
	ld.local.u32 	%r29980, [%rd6+4];
	// inline asm
	prmt.b32 %r39496, %r29979, %r29980, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30085, %r30086}, [%rd6];
	// inline asm
	prmt.b32 %r39497, %r30086, %r30085, %r3109;
	// inline asm
	ld.local.u32 	%r29987, [%rd6];
	ld.local.u32 	%r29988, [%rd5+12];
	// inline asm
	prmt.b32 %r39490, %r29987, %r29988, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30087, %r30088}, [%rd15];
	// inline asm
	prmt.b32 %r39491, %r30088, %r30087, %r3109;
	// inline asm
	ld.local.u32 	%r29995, [%rd5+8];
	ld.local.u32 	%r29996, [%rd5+4];
	// inline asm
	prmt.b32 %r39492, %r29995, %r29996, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30089, %r30090}, [%rd5];
	// inline asm
	prmt.b32 %r39493, %r30090, %r30089, %r3109;
	// inline asm
	ld.local.u32 	%r30003, [%rd5];
	ld.local.u32 	%r30004, [%rd4+12];
	// inline asm
	prmt.b32 %r39486, %r30003, %r30004, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30091, %r30092}, [%rd14];
	// inline asm
	prmt.b32 %r39487, %r30092, %r30091, %r3109;
	// inline asm
	ld.local.u32 	%r30011, [%rd4+8];
	ld.local.u32 	%r30012, [%rd4+4];
	// inline asm
	prmt.b32 %r39488, %r30011, %r30012, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30093, %r30094}, [%rd4];
	// inline asm
	prmt.b32 %r39489, %r30094, %r30093, %r3109;
	// inline asm
	ld.local.u32 	%r30019, [%rd4];
	ld.local.u32 	%r30020, [%rd3+12];
	// inline asm
	prmt.b32 %r39482, %r30019, %r30020, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30095, %r30096}, [%rd13];
	// inline asm
	prmt.b32 %r39483, %r30096, %r30095, %r3109;
	// inline asm
	ld.local.u32 	%r30027, [%rd3+8];
	ld.local.u32 	%r30028, [%rd3+4];
	// inline asm
	prmt.b32 %r39484, %r30027, %r30028, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30097, %r30098}, [%rd3];
	// inline asm
	prmt.b32 %r39485, %r30098, %r30097, %r3109;
	// inline asm
	ld.local.u32 	%r30035, [%rd3];
	ld.local.u32 	%r30036, [%rd2+12];
	// inline asm
	prmt.b32 %r39510, %r30035, %r30036, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30099, %r30100}, [%rd12];
	// inline asm
	prmt.b32 %r39511, %r30100, %r30099, %r3109;
	// inline asm
	ld.local.u32 	%r30043, [%rd2+8];
	ld.local.u32 	%r30044, [%rd2+4];
	// inline asm
	prmt.b32 %r39512, %r30043, %r30044, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30101, %r30102}, [%rd2];
	// inline asm
	prmt.b32 %r39513, %r30102, %r30101, %r3109;
	// inline asm
	ld.local.u32 	%r30051, [%rd2];
	ld.local.u32 	%r30052, [%rd1+12];
	// inline asm
	prmt.b32 %r30050, %r30051, %r30052, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30050;
	ld.local.v2.u32 	{%r30103, %r30104}, [%rd11];
	// inline asm
	prmt.b32 %r30054, %r30104, %r30103, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30054;
	ld.local.u32 	%r30059, [%rd1+8];
	ld.local.u32 	%r30060, [%rd1+4];
	// inline asm
	prmt.b32 %r30058, %r30059, %r30060, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30058;
	ld.local.v2.u32 	{%r30105, %r30106}, [%rd1];
	// inline asm
	prmt.b32 %r30062, %r30106, %r30105, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30062;
	ld.local.u32 	%r30067, [%rd1];
	// inline asm
	prmt.b32 %r30066, %r30067, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r39481, %r39481, %r39481, %r30066};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_392;

BB1_327:
	setp.eq.s32	%p203, %r29267, 7;
	@%p203 bra 	BB1_328;
	bra.uni 	BB1_397;

BB1_328:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39482, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33665, %r33666}, [%rd18];
	// inline asm
	prmt.b32 %r39483, %r33666, %r33665, %r3109;
	// inline asm
	ld.local.u32 	%r33517, [%rd8+8];
	ld.local.u32 	%r33518, [%rd8+4];
	// inline asm
	prmt.b32 %r39484, %r33517, %r33518, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33667, %r33668}, [%rd8];
	// inline asm
	prmt.b32 %r39485, %r33668, %r33667, %r3109;
	// inline asm
	ld.local.u32 	%r33525, [%rd8];
	ld.local.u32 	%r33526, [%rd7+12];
	// inline asm
	prmt.b32 %r39510, %r33525, %r33526, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33669, %r33670}, [%rd17];
	// inline asm
	prmt.b32 %r39511, %r33670, %r33669, %r3109;
	// inline asm
	ld.local.u32 	%r33533, [%rd7+8];
	ld.local.u32 	%r33534, [%rd7+4];
	// inline asm
	prmt.b32 %r39512, %r33533, %r33534, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r33671, %r33672}, [%rd7];
	// inline asm
	prmt.b32 %r39513, %r33672, %r33671, %r3109;
	// inline asm
	ld.local.u32 	%r33541, [%rd7];
	ld.local.u32 	%r33542, [%rd6+12];
	// inline asm
	prmt.b32 %r33540, %r33541, %r33542, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r33540;
	ld.local.v2.u32 	{%r33673, %r33674}, [%rd16];
	// inline asm
	prmt.b32 %r33544, %r33674, %r33673, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r33544;
	ld.local.u32 	%r33549, [%rd6+8];
	ld.local.u32 	%r33550, [%rd6+4];
	// inline asm
	prmt.b32 %r33548, %r33549, %r33550, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r33548;
	ld.local.v2.u32 	{%r33675, %r33676}, [%rd6];
	// inline asm
	prmt.b32 %r33552, %r33676, %r33675, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r33552;
	ld.local.u32 	%r33557, [%rd6];
	ld.local.u32 	%r33558, [%rd5+12];
	// inline asm
	prmt.b32 %r33556, %r33557, %r33558, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r33556;
	ld.local.v2.u32 	{%r33677, %r33678}, [%rd15];
	// inline asm
	prmt.b32 %r33560, %r33678, %r33677, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r33560;
	ld.local.u32 	%r33565, [%rd5+8];
	ld.local.u32 	%r33566, [%rd5+4];
	// inline asm
	prmt.b32 %r33564, %r33565, %r33566, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r33564;
	ld.local.v2.u32 	{%r33679, %r33680}, [%rd5];
	// inline asm
	prmt.b32 %r33568, %r33680, %r33679, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r33568;
	ld.local.u32 	%r33573, [%rd5];
	ld.local.u32 	%r33574, [%rd4+12];
	// inline asm
	prmt.b32 %r33572, %r33573, %r33574, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r33572;
	ld.local.v2.u32 	{%r33681, %r33682}, [%rd14];
	// inline asm
	prmt.b32 %r33576, %r33682, %r33681, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r33576;
	ld.local.u32 	%r33581, [%rd4+8];
	ld.local.u32 	%r33582, [%rd4+4];
	// inline asm
	prmt.b32 %r33580, %r33581, %r33582, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r33580;
	ld.local.v2.u32 	{%r33683, %r33684}, [%rd4];
	// inline asm
	prmt.b32 %r33584, %r33684, %r33683, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r33584;
	ld.local.u32 	%r33589, [%rd4];
	ld.local.u32 	%r33590, [%rd3+12];
	// inline asm
	prmt.b32 %r33588, %r33589, %r33590, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r33588;
	ld.local.v2.u32 	{%r33685, %r33686}, [%rd13];
	// inline asm
	prmt.b32 %r33592, %r33686, %r33685, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r33592;
	ld.local.u32 	%r33597, [%rd3+8];
	ld.local.u32 	%r33598, [%rd3+4];
	// inline asm
	prmt.b32 %r33596, %r33597, %r33598, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r33596;
	ld.local.v2.u32 	{%r33687, %r33688}, [%rd3];
	// inline asm
	prmt.b32 %r33600, %r33688, %r33687, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r33600;
	ld.local.u32 	%r33605, [%rd3];
	ld.local.u32 	%r33606, [%rd2+12];
	// inline asm
	prmt.b32 %r33604, %r33605, %r33606, %r3109;
	// inline asm
	st.local.u32 	[%rd4+12], %r33604;
	ld.local.v2.u32 	{%r33689, %r33690}, [%rd12];
	// inline asm
	prmt.b32 %r33608, %r33690, %r33689, %r3109;
	// inline asm
	st.local.u32 	[%rd4+8], %r33608;
	ld.local.u32 	%r33613, [%rd2+8];
	ld.local.u32 	%r33614, [%rd2+4];
	// inline asm
	prmt.b32 %r33612, %r33613, %r33614, %r3109;
	// inline asm
	st.local.u32 	[%rd4+4], %r33612;
	ld.local.v2.u32 	{%r33691, %r33692}, [%rd2];
	// inline asm
	prmt.b32 %r33616, %r33692, %r33691, %r3109;
	// inline asm
	st.local.u32 	[%rd4], %r33616;
	ld.local.u32 	%r33621, [%rd2];
	ld.local.u32 	%r33622, [%rd1+12];
	// inline asm
	prmt.b32 %r33620, %r33621, %r33622, %r3109;
	// inline asm
	st.local.u32 	[%rd3+12], %r33620;
	ld.local.v2.u32 	{%r33693, %r33694}, [%rd11];
	// inline asm
	prmt.b32 %r33624, %r33694, %r33693, %r3109;
	// inline asm
	st.local.u32 	[%rd3+8], %r33624;
	ld.local.u32 	%r33629, [%rd1+8];
	ld.local.u32 	%r33630, [%rd1+4];
	// inline asm
	prmt.b32 %r33628, %r33629, %r33630, %r3109;
	// inline asm
	st.local.u32 	[%rd3+4], %r33628;
	ld.local.v2.u32 	{%r33695, %r33696}, [%rd1];
	// inline asm
	prmt.b32 %r33632, %r33696, %r33695, %r3109;
	// inline asm
	st.local.u32 	[%rd3], %r33632;
	ld.local.u32 	%r33637, [%rd1];
	// inline asm
	prmt.b32 %r33636, %r33637, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r33636};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};

BB1_329:
	mov.u32 	%r39486, %r39481;
	mov.u32 	%r39487, %r39481;
	mov.u32 	%r39488, %r39481;
	mov.u32 	%r39489, %r39481;

BB1_388:
	mov.u32 	%r39490, %r39481;
	mov.u32 	%r39491, %r39481;
	mov.u32 	%r39492, %r39481;
	mov.u32 	%r39493, %r39481;

BB1_389:
	mov.u32 	%r39494, %r39481;
	mov.u32 	%r39495, %r39481;
	mov.u32 	%r39496, %r39481;
	mov.u32 	%r39497, %r39481;

BB1_390:
	mov.u32 	%r39498, %r39481;
	mov.u32 	%r39499, %r39481;
	mov.u32 	%r39500, %r39481;
	mov.u32 	%r39501, %r39481;

BB1_391:
	mov.u32 	%r39502, %r39481;
	mov.u32 	%r39503, %r39481;
	mov.u32 	%r39504, %r39481;
	mov.u32 	%r39505, %r39481;

BB1_392:
	mov.u32 	%r39506, %r39481;
	mov.u32 	%r39507, %r39481;
	mov.u32 	%r39508, %r39481;
	mov.u32 	%r39509, %r39481;
	bra.uni 	BB1_398;

BB1_359:
	setp.eq.s32	%p180, %r29267, 23;
	@%p180 bra 	BB1_360;
	bra.uni 	BB1_397;

BB1_360:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39498, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30761, %r30762}, [%rd18];
	// inline asm
	prmt.b32 %r39499, %r30762, %r30761, %r3109;
	// inline asm
	ld.local.u32 	%r30629, [%rd8+8];
	ld.local.u32 	%r30630, [%rd8+4];
	// inline asm
	prmt.b32 %r39500, %r30629, %r30630, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30763, %r30764}, [%rd8];
	// inline asm
	prmt.b32 %r39501, %r30764, %r30763, %r3109;
	// inline asm
	ld.local.u32 	%r30637, [%rd8];
	ld.local.u32 	%r30638, [%rd7+12];
	// inline asm
	prmt.b32 %r39494, %r30637, %r30638, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30765, %r30766}, [%rd17];
	// inline asm
	prmt.b32 %r39495, %r30766, %r30765, %r3109;
	// inline asm
	ld.local.u32 	%r30645, [%rd7+8];
	ld.local.u32 	%r30646, [%rd7+4];
	// inline asm
	prmt.b32 %r39496, %r30645, %r30646, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30767, %r30768}, [%rd7];
	// inline asm
	prmt.b32 %r39497, %r30768, %r30767, %r3109;
	// inline asm
	ld.local.u32 	%r30653, [%rd7];
	ld.local.u32 	%r30654, [%rd6+12];
	// inline asm
	prmt.b32 %r39490, %r30653, %r30654, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30769, %r30770}, [%rd16];
	// inline asm
	prmt.b32 %r39491, %r30770, %r30769, %r3109;
	// inline asm
	ld.local.u32 	%r30661, [%rd6+8];
	ld.local.u32 	%r30662, [%rd6+4];
	// inline asm
	prmt.b32 %r39492, %r30661, %r30662, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30771, %r30772}, [%rd6];
	// inline asm
	prmt.b32 %r39493, %r30772, %r30771, %r3109;
	// inline asm
	ld.local.u32 	%r30669, [%rd6];
	ld.local.u32 	%r30670, [%rd5+12];
	// inline asm
	prmt.b32 %r39486, %r30669, %r30670, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30773, %r30774}, [%rd15];
	// inline asm
	prmt.b32 %r39487, %r30774, %r30773, %r3109;
	// inline asm
	ld.local.u32 	%r30677, [%rd5+8];
	ld.local.u32 	%r30678, [%rd5+4];
	// inline asm
	prmt.b32 %r39488, %r30677, %r30678, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30775, %r30776}, [%rd5];
	// inline asm
	prmt.b32 %r39489, %r30776, %r30775, %r3109;
	// inline asm
	ld.local.u32 	%r30685, [%rd5];
	ld.local.u32 	%r30686, [%rd4+12];
	// inline asm
	prmt.b32 %r39482, %r30685, %r30686, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30777, %r30778}, [%rd14];
	// inline asm
	prmt.b32 %r39483, %r30778, %r30777, %r3109;
	// inline asm
	ld.local.u32 	%r30693, [%rd4+8];
	ld.local.u32 	%r30694, [%rd4+4];
	// inline asm
	prmt.b32 %r39484, %r30693, %r30694, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30779, %r30780}, [%rd4];
	// inline asm
	prmt.b32 %r39485, %r30780, %r30779, %r3109;
	// inline asm
	ld.local.u32 	%r30701, [%rd4];
	ld.local.u32 	%r30702, [%rd3+12];
	// inline asm
	prmt.b32 %r39510, %r30701, %r30702, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30781, %r30782}, [%rd13];
	// inline asm
	prmt.b32 %r39511, %r30782, %r30781, %r3109;
	// inline asm
	ld.local.u32 	%r30709, [%rd3+8];
	ld.local.u32 	%r30710, [%rd3+4];
	// inline asm
	prmt.b32 %r39512, %r30709, %r30710, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r30783, %r30784}, [%rd3];
	// inline asm
	prmt.b32 %r39513, %r30784, %r30783, %r3109;
	// inline asm
	ld.local.u32 	%r30717, [%rd3];
	ld.local.u32 	%r30718, [%rd2+12];
	// inline asm
	prmt.b32 %r30716, %r30717, %r30718, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r30716;
	ld.local.v2.u32 	{%r30785, %r30786}, [%rd12];
	// inline asm
	prmt.b32 %r30720, %r30786, %r30785, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r30720;
	ld.local.u32 	%r30725, [%rd2+8];
	ld.local.u32 	%r30726, [%rd2+4];
	// inline asm
	prmt.b32 %r30724, %r30725, %r30726, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r30724;
	ld.local.v2.u32 	{%r30787, %r30788}, [%rd2];
	// inline asm
	prmt.b32 %r30728, %r30788, %r30787, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r30728;
	ld.local.u32 	%r30733, [%rd2];
	ld.local.u32 	%r30734, [%rd1+12];
	// inline asm
	prmt.b32 %r30732, %r30733, %r30734, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r30732;
	ld.local.v2.u32 	{%r30789, %r30790}, [%rd11];
	// inline asm
	prmt.b32 %r30736, %r30790, %r30789, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r30736;
	ld.local.u32 	%r30741, [%rd1+8];
	ld.local.u32 	%r30742, [%rd1+4];
	// inline asm
	prmt.b32 %r30740, %r30741, %r30742, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r30740;
	ld.local.v2.u32 	{%r30791, %r30792}, [%rd1];
	// inline asm
	prmt.b32 %r30744, %r30792, %r30791, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r30744;
	ld.local.u32 	%r30749, [%rd1];
	// inline asm
	prmt.b32 %r30748, %r30749, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r30748};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_391;

BB1_343:
	setp.eq.s32	%p192, %r29267, 15;
	@%p192 bra 	BB1_344;
	bra.uni 	BB1_397;

BB1_344:
	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39490, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32181, %r32182}, [%rd18];
	// inline asm
	prmt.b32 %r39491, %r32182, %r32181, %r3109;
	// inline asm
	ld.local.u32 	%r32041, [%rd8+8];
	ld.local.u32 	%r32042, [%rd8+4];
	// inline asm
	prmt.b32 %r39492, %r32041, %r32042, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32183, %r32184}, [%rd8];
	// inline asm
	prmt.b32 %r39493, %r32184, %r32183, %r3109;
	// inline asm
	ld.local.u32 	%r32049, [%rd8];
	ld.local.u32 	%r32050, [%rd7+12];
	// inline asm
	prmt.b32 %r39486, %r32049, %r32050, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32185, %r32186}, [%rd17];
	// inline asm
	prmt.b32 %r39487, %r32186, %r32185, %r3109;
	// inline asm
	ld.local.u32 	%r32057, [%rd7+8];
	ld.local.u32 	%r32058, [%rd7+4];
	// inline asm
	prmt.b32 %r39488, %r32057, %r32058, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32187, %r32188}, [%rd7];
	// inline asm
	prmt.b32 %r39489, %r32188, %r32187, %r3109;
	// inline asm
	ld.local.u32 	%r32065, [%rd7];
	ld.local.u32 	%r32066, [%rd6+12];
	// inline asm
	prmt.b32 %r39482, %r32065, %r32066, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32189, %r32190}, [%rd16];
	// inline asm
	prmt.b32 %r39483, %r32190, %r32189, %r3109;
	// inline asm
	ld.local.u32 	%r32073, [%rd6+8];
	ld.local.u32 	%r32074, [%rd6+4];
	// inline asm
	prmt.b32 %r39484, %r32073, %r32074, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32191, %r32192}, [%rd6];
	// inline asm
	prmt.b32 %r39485, %r32192, %r32191, %r3109;
	// inline asm
	ld.local.u32 	%r32081, [%rd6];
	ld.local.u32 	%r32082, [%rd5+12];
	// inline asm
	prmt.b32 %r39510, %r32081, %r32082, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32193, %r32194}, [%rd15];
	// inline asm
	prmt.b32 %r39511, %r32194, %r32193, %r3109;
	// inline asm
	ld.local.u32 	%r32089, [%rd5+8];
	ld.local.u32 	%r32090, [%rd5+4];
	// inline asm
	prmt.b32 %r39512, %r32089, %r32090, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r32195, %r32196}, [%rd5];
	// inline asm
	prmt.b32 %r39513, %r32196, %r32195, %r3109;
	// inline asm
	ld.local.u32 	%r32097, [%rd5];
	ld.local.u32 	%r32098, [%rd4+12];
	// inline asm
	prmt.b32 %r32096, %r32097, %r32098, %r3109;
	// inline asm
	st.local.u32 	[%rd8+12], %r32096;
	ld.local.v2.u32 	{%r32197, %r32198}, [%rd14];
	// inline asm
	prmt.b32 %r32100, %r32198, %r32197, %r3109;
	// inline asm
	st.local.u32 	[%rd8+8], %r32100;
	ld.local.u32 	%r32105, [%rd4+8];
	ld.local.u32 	%r32106, [%rd4+4];
	// inline asm
	prmt.b32 %r32104, %r32105, %r32106, %r3109;
	// inline asm
	st.local.u32 	[%rd8+4], %r32104;
	ld.local.v2.u32 	{%r32199, %r32200}, [%rd4];
	// inline asm
	prmt.b32 %r32108, %r32200, %r32199, %r3109;
	// inline asm
	st.local.u32 	[%rd8], %r32108;
	ld.local.u32 	%r32113, [%rd4];
	ld.local.u32 	%r32114, [%rd3+12];
	// inline asm
	prmt.b32 %r32112, %r32113, %r32114, %r3109;
	// inline asm
	st.local.u32 	[%rd7+12], %r32112;
	ld.local.v2.u32 	{%r32201, %r32202}, [%rd13];
	// inline asm
	prmt.b32 %r32116, %r32202, %r32201, %r3109;
	// inline asm
	st.local.u32 	[%rd7+8], %r32116;
	ld.local.u32 	%r32121, [%rd3+8];
	ld.local.u32 	%r32122, [%rd3+4];
	// inline asm
	prmt.b32 %r32120, %r32121, %r32122, %r3109;
	// inline asm
	st.local.u32 	[%rd7+4], %r32120;
	ld.local.v2.u32 	{%r32203, %r32204}, [%rd3];
	// inline asm
	prmt.b32 %r32124, %r32204, %r32203, %r3109;
	// inline asm
	st.local.u32 	[%rd7], %r32124;
	ld.local.u32 	%r32129, [%rd3];
	ld.local.u32 	%r32130, [%rd2+12];
	// inline asm
	prmt.b32 %r32128, %r32129, %r32130, %r3109;
	// inline asm
	st.local.u32 	[%rd6+12], %r32128;
	ld.local.v2.u32 	{%r32205, %r32206}, [%rd12];
	// inline asm
	prmt.b32 %r32132, %r32206, %r32205, %r3109;
	// inline asm
	st.local.u32 	[%rd6+8], %r32132;
	ld.local.u32 	%r32137, [%rd2+8];
	ld.local.u32 	%r32138, [%rd2+4];
	// inline asm
	prmt.b32 %r32136, %r32137, %r32138, %r3109;
	// inline asm
	st.local.u32 	[%rd6+4], %r32136;
	ld.local.v2.u32 	{%r32207, %r32208}, [%rd2];
	// inline asm
	prmt.b32 %r32140, %r32208, %r32207, %r3109;
	// inline asm
	st.local.u32 	[%rd6], %r32140;
	ld.local.u32 	%r32145, [%rd2];
	ld.local.u32 	%r32146, [%rd1+12];
	// inline asm
	prmt.b32 %r32144, %r32145, %r32146, %r3109;
	// inline asm
	st.local.u32 	[%rd5+12], %r32144;
	ld.local.v2.u32 	{%r32209, %r32210}, [%rd11];
	// inline asm
	prmt.b32 %r32148, %r32210, %r32209, %r3109;
	// inline asm
	st.local.u32 	[%rd5+8], %r32148;
	ld.local.u32 	%r32153, [%rd1+8];
	ld.local.u32 	%r32154, [%rd1+4];
	// inline asm
	prmt.b32 %r32152, %r32153, %r32154, %r3109;
	// inline asm
	st.local.u32 	[%rd5+4], %r32152;
	ld.local.v2.u32 	{%r32211, %r32212}, [%rd1];
	// inline asm
	prmt.b32 %r32156, %r32212, %r32211, %r3109;
	// inline asm
	st.local.u32 	[%rd5], %r32156;
	ld.local.u32 	%r32161, [%rd1];
	// inline asm
	prmt.b32 %r32160, %r32161, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r32160};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_389;

BB1_374:
	setp.ne.s32	%p169, %r29267, 31;
	@%p169 bra 	BB1_397;

	mov.u32 	%r39481, 0;
	// inline asm
	prmt.b32 %r39506, %r39481, %r29264, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29405, %r29406}, [%rd18];
	// inline asm
	prmt.b32 %r39507, %r29406, %r29405, %r3109;
	// inline asm
	ld.local.u32 	%r29281, [%rd8+8];
	ld.local.u32 	%r29282, [%rd8+4];
	// inline asm
	prmt.b32 %r39508, %r29281, %r29282, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29407, %r29408}, [%rd8];
	// inline asm
	prmt.b32 %r39509, %r29408, %r29407, %r3109;
	// inline asm
	ld.local.u32 	%r29289, [%rd8];
	ld.local.u32 	%r29290, [%rd7+12];
	// inline asm
	prmt.b32 %r39502, %r29289, %r29290, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29409, %r29410}, [%rd17];
	// inline asm
	prmt.b32 %r39503, %r29410, %r29409, %r3109;
	// inline asm
	ld.local.u32 	%r29297, [%rd7+8];
	ld.local.u32 	%r29298, [%rd7+4];
	// inline asm
	prmt.b32 %r39504, %r29297, %r29298, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29411, %r29412}, [%rd7];
	// inline asm
	prmt.b32 %r39505, %r29412, %r29411, %r3109;
	// inline asm
	ld.local.u32 	%r29305, [%rd7];
	ld.local.u32 	%r29306, [%rd6+12];
	// inline asm
	prmt.b32 %r39498, %r29305, %r29306, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29413, %r29414}, [%rd16];
	// inline asm
	prmt.b32 %r39499, %r29414, %r29413, %r3109;
	// inline asm
	ld.local.u32 	%r29313, [%rd6+8];
	ld.local.u32 	%r29314, [%rd6+4];
	// inline asm
	prmt.b32 %r39500, %r29313, %r29314, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29415, %r29416}, [%rd6];
	// inline asm
	prmt.b32 %r39501, %r29416, %r29415, %r3109;
	// inline asm
	ld.local.u32 	%r29321, [%rd6];
	ld.local.u32 	%r29322, [%rd5+12];
	// inline asm
	prmt.b32 %r39494, %r29321, %r29322, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29417, %r29418}, [%rd15];
	// inline asm
	prmt.b32 %r39495, %r29418, %r29417, %r3109;
	// inline asm
	ld.local.u32 	%r29329, [%rd5+8];
	ld.local.u32 	%r29330, [%rd5+4];
	// inline asm
	prmt.b32 %r39496, %r29329, %r29330, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29419, %r29420}, [%rd5];
	// inline asm
	prmt.b32 %r39497, %r29420, %r29419, %r3109;
	// inline asm
	ld.local.u32 	%r29337, [%rd5];
	ld.local.u32 	%r29338, [%rd4+12];
	// inline asm
	prmt.b32 %r39490, %r29337, %r29338, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29421, %r29422}, [%rd14];
	// inline asm
	prmt.b32 %r39491, %r29422, %r29421, %r3109;
	// inline asm
	ld.local.u32 	%r29345, [%rd4+8];
	ld.local.u32 	%r29346, [%rd4+4];
	// inline asm
	prmt.b32 %r39492, %r29345, %r29346, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29423, %r29424}, [%rd4];
	// inline asm
	prmt.b32 %r39493, %r29424, %r29423, %r3109;
	// inline asm
	ld.local.u32 	%r29353, [%rd4];
	ld.local.u32 	%r29354, [%rd3+12];
	// inline asm
	prmt.b32 %r39486, %r29353, %r29354, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29425, %r29426}, [%rd13];
	// inline asm
	prmt.b32 %r39487, %r29426, %r29425, %r3109;
	// inline asm
	ld.local.u32 	%r29361, [%rd3+8];
	ld.local.u32 	%r29362, [%rd3+4];
	// inline asm
	prmt.b32 %r39488, %r29361, %r29362, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29427, %r29428}, [%rd3];
	// inline asm
	prmt.b32 %r39489, %r29428, %r29427, %r3109;
	// inline asm
	ld.local.u32 	%r29369, [%rd3];
	ld.local.u32 	%r29370, [%rd2+12];
	// inline asm
	prmt.b32 %r39482, %r29369, %r29370, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29429, %r29430}, [%rd12];
	// inline asm
	prmt.b32 %r39483, %r29430, %r29429, %r3109;
	// inline asm
	ld.local.u32 	%r29377, [%rd2+8];
	ld.local.u32 	%r29378, [%rd2+4];
	// inline asm
	prmt.b32 %r39484, %r29377, %r29378, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29431, %r29432}, [%rd2];
	// inline asm
	prmt.b32 %r39485, %r29432, %r29431, %r3109;
	// inline asm
	ld.local.u32 	%r29385, [%rd2];
	ld.local.u32 	%r29386, [%rd1+12];
	// inline asm
	prmt.b32 %r39510, %r29385, %r29386, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29433, %r29434}, [%rd11];
	// inline asm
	prmt.b32 %r39511, %r29434, %r29433, %r3109;
	// inline asm
	ld.local.u32 	%r29393, [%rd1+8];
	ld.local.u32 	%r29394, [%rd1+4];
	// inline asm
	prmt.b32 %r39512, %r29393, %r29394, %r3109;
	// inline asm
	ld.local.v2.u32 	{%r29435, %r29436}, [%rd1];
	// inline asm
	prmt.b32 %r39513, %r29436, %r29435, %r3109;
	// inline asm
	ld.local.u32 	%r29401, [%rd1];
	// inline asm
	prmt.b32 %r29400, %r29401, %r39481, %r3109;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r39481, %r39481, %r39481, %r29400};
	st.local.v4.u32 	[%rd7], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd6], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd5], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd4], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd3], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd2], {%r39481, %r39481, %r39481, %r39481};
	st.local.v4.u32 	[%rd1], {%r39481, %r39481, %r39481, %r39481};
	bra.uni 	BB1_398;

BB1_397:
	ld.local.u32 	%r39481, [%rd1];
	mov.u32 	%r39482, 0;
	mov.u32 	%r39483, %r39482;
	mov.u32 	%r39484, %r39482;
	mov.u32 	%r39485, %r39482;
	mov.u32 	%r39486, %r39482;
	mov.u32 	%r39487, %r39482;
	mov.u32 	%r39488, %r39482;
	mov.u32 	%r39489, %r39482;
	mov.u32 	%r39490, %r39482;
	mov.u32 	%r39491, %r39482;
	mov.u32 	%r39492, %r39482;
	mov.u32 	%r39493, %r39482;
	mov.u32 	%r39494, %r39482;
	mov.u32 	%r39495, %r39482;
	mov.u32 	%r39496, %r39482;
	mov.u32 	%r39497, %r39482;
	mov.u32 	%r39498, %r39482;
	mov.u32 	%r39499, %r39482;
	mov.u32 	%r39500, %r39482;
	mov.u32 	%r39501, %r39482;
	mov.u32 	%r39502, %r39482;
	mov.u32 	%r39503, %r39482;
	mov.u32 	%r39504, %r39482;
	mov.u32 	%r39505, %r39482;
	mov.u32 	%r39506, %r39482;
	mov.u32 	%r39507, %r39482;
	mov.u32 	%r39508, %r39482;
	mov.u32 	%r39509, %r39482;
	mov.u32 	%r39510, %r39482;
	mov.u32 	%r39511, %r39482;
	mov.u32 	%r39512, %r39482;
	mov.u32 	%r39513, %r39482;

BB1_398:
	ld.local.v2.u32 	{%r35079, %r35080}, [%rd9+64];
	ld.local.u32 	%r35083, [%rd1+4];
	or.b32  	%r35084, %r35080, %r35083;
	or.b32  	%r35085, %r35079, %r39481;
	st.local.v2.u32 	[%rd9+64], {%r35085, %r35084};
	ld.local.v2.u32 	{%r35086, %r35087}, [%rd11];
	ld.local.v2.u32 	{%r35090, %r35091}, [%rd9+72];
	or.b32  	%r35094, %r35091, %r35087;
	or.b32  	%r35095, %r35090, %r35086;
	st.local.v2.u32 	[%rd9+72], {%r35095, %r35094};
	ld.local.v4.u32 	{%r35096, %r35097, %r35098, %r35099}, [%rd2];
	ld.local.v2.u32 	{%r35104, %r35105}, [%rd9+80];
	or.b32  	%r35108, %r35105, %r35097;
	or.b32  	%r35109, %r35104, %r35096;
	st.local.v2.u32 	[%rd9+80], {%r35109, %r35108};
	ld.local.v2.u32 	{%r35110, %r35111}, [%rd9+88];
	or.b32  	%r35114, %r35111, %r35099;
	or.b32  	%r35115, %r35110, %r35098;
	st.local.v2.u32 	[%rd9+88], {%r35115, %r35114};
	ld.local.v4.u32 	{%r35116, %r35117, %r35118, %r35119}, [%rd3];
	ld.local.v2.u32 	{%r35124, %r35125}, [%rd9+96];
	or.b32  	%r35128, %r35125, %r35117;
	or.b32  	%r35129, %r35124, %r35116;
	st.local.v2.u32 	[%rd9+96], {%r35129, %r35128};
	ld.local.v2.u32 	{%r35130, %r35131}, [%rd9+104];
	or.b32  	%r35134, %r35131, %r35119;
	or.b32  	%r35135, %r35130, %r35118;
	st.local.v2.u32 	[%rd9+104], {%r35135, %r35134};
	ld.local.v4.u32 	{%r35136, %r35137, %r35138, %r35139}, [%rd4];
	ld.local.v2.u32 	{%r35144, %r35145}, [%rd9+112];
	or.b32  	%r35148, %r35145, %r35137;
	or.b32  	%r35149, %r35144, %r35136;
	st.local.v2.u32 	[%rd9+112], {%r35149, %r35148};
	ld.local.v2.u32 	{%r35150, %r35151}, [%rd9+120];
	or.b32  	%r35154, %r35151, %r35139;
	or.b32  	%r35155, %r35150, %r35138;
	st.local.v2.u32 	[%rd9+120], {%r35155, %r35154};
	ld.local.v4.u32 	{%r35156, %r35157, %r35158, %r35159}, [%rd5];
	ld.local.v2.u32 	{%r35164, %r35165}, [%rd9+128];
	or.b32  	%r35168, %r35165, %r35157;
	or.b32  	%r35169, %r35164, %r35156;
	st.local.v2.u32 	[%rd9+128], {%r35169, %r35168};
	ld.local.v2.u32 	{%r35170, %r35171}, [%rd9+136];
	or.b32  	%r35174, %r35171, %r35159;
	or.b32  	%r35175, %r35170, %r35158;
	st.local.v2.u32 	[%rd9+136], {%r35175, %r35174};
	ld.local.v4.u32 	{%r35176, %r35177, %r35178, %r35179}, [%rd6];
	ld.local.v2.u32 	{%r35184, %r35185}, [%rd9+144];
	or.b32  	%r35188, %r35185, %r35177;
	or.b32  	%r35189, %r35184, %r35176;
	st.local.v2.u32 	[%rd9+144], {%r35189, %r35188};
	ld.local.v2.u32 	{%r35190, %r35191}, [%rd9+152];
	or.b32  	%r35194, %r35191, %r35179;
	or.b32  	%r35195, %r35190, %r35178;
	st.local.v2.u32 	[%rd9+152], {%r35195, %r35194};
	ld.local.v4.u32 	{%r35196, %r35197, %r35198, %r35199}, [%rd7];
	ld.local.v2.u32 	{%r35204, %r35205}, [%rd9+160];
	or.b32  	%r35208, %r35205, %r35197;
	or.b32  	%r35209, %r35204, %r35196;
	st.local.v2.u32 	[%rd9+160], {%r35209, %r35208};
	ld.local.v2.u32 	{%r35210, %r35211}, [%rd9+168];
	or.b32  	%r35214, %r35211, %r35199;
	or.b32  	%r35215, %r35210, %r35198;
	st.local.v2.u32 	[%rd9+168], {%r35215, %r35214};
	ld.local.v4.u32 	{%r35216, %r35217, %r35218, %r35219}, [%rd8];
	ld.local.v2.u32 	{%r35224, %r35225}, [%rd9+176];
	or.b32  	%r35228, %r35225, %r35217;
	or.b32  	%r35229, %r35224, %r35216;
	st.local.v2.u32 	[%rd9+176], {%r35229, %r35228};
	ld.local.v2.u32 	{%r35230, %r35231}, [%rd9+184];
	or.b32  	%r35234, %r35231, %r35219;
	or.b32  	%r35235, %r35230, %r35218;
	st.local.v2.u32 	[%rd9+184], {%r35235, %r35234};
	mov.b64	%rd17466, {%r35084, %r35085};
	mov.b64	%rd17467, {%r35094, %r35095};
	mov.b64	%rd17468, {%r35108, %r35109};
	mov.b64	%rd17469, {%r35114, %r35115};
	mov.b64	%rd17470, {%r35128, %r35129};
	mov.b64	%rd17471, {%r35134, %r35135};
	mov.b64	%rd17472, {%r35148, %r35149};
	mov.b64	%rd17473, {%r35154, %r35155};
	mov.b64	%rd17474, {%r35168, %r35169};
	mov.b64	%rd17475, {%r35174, %r35175};
	mov.b64	%rd17476, {%r35188, %r35189};
	mov.b64	%rd17477, {%r35194, %r35195};
	mov.b64	%rd17478, {%r35208, %r35209};
	mov.b64	%rd17479, {%r35214, %r35215};
	mov.b64	%rd17480, {%r35228, %r35229};
	mov.b64	%rd17481, {%r35234, %r35235};
	ld.local.u64 	%rd17482, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35236,%dummy}, %rd17482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35237}, %rd17482;
	}
	shf.r.wrap.b32 	%r35238, %r35237, %r35236, 14;
	shf.r.wrap.b32 	%r35239, %r35236, %r35237, 14;
	mov.b64 	%rd17483, {%r35239, %r35238};
	shf.r.wrap.b32 	%r35240, %r35237, %r35236, 18;
	shf.r.wrap.b32 	%r35241, %r35236, %r35237, 18;
	mov.b64 	%rd17484, {%r35241, %r35240};
	xor.b64  	%rd17485, %rd17484, %rd17483;
	shf.l.wrap.b32 	%r35242, %r35236, %r35237, 23;
	shf.l.wrap.b32 	%r35243, %r35237, %r35236, 23;
	mov.b64 	%rd17486, {%r35243, %r35242};
	xor.b64  	%rd17487, %rd17485, %rd17486;
	ld.local.u64 	%rd17488, [%rd9+48];
	ld.local.u64 	%rd17489, [%rd9+40];
	xor.b64  	%rd17490, %rd17488, %rd17489;
	and.b64  	%rd17491, %rd17490, %rd17482;
	xor.b64  	%rd17492, %rd17491, %rd17488;
	ld.local.u64 	%rd17493, [%rd9+56];
	add.s64 	%rd17494, %rd17492, %rd17493;
	add.s64 	%rd17495, %rd17494, %rd17466;
	ld.const.u64 	%rd17496, [k_sha512];
	add.s64 	%rd17497, %rd17495, %rd17496;
	add.s64 	%rd17498, %rd17497, %rd17487;
	ld.local.u64 	%rd17499, [%rd9+24];
	add.s64 	%rd17500, %rd17498, %rd17499;
	ld.local.u64 	%rd17501, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35244,%dummy}, %rd17501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35245}, %rd17501;
	}
	shf.r.wrap.b32 	%r35246, %r35245, %r35244, 28;
	shf.r.wrap.b32 	%r35247, %r35244, %r35245, 28;
	mov.b64 	%rd17502, {%r35247, %r35246};
	shf.l.wrap.b32 	%r35248, %r35244, %r35245, 30;
	shf.l.wrap.b32 	%r35249, %r35245, %r35244, 30;
	mov.b64 	%rd17503, {%r35249, %r35248};
	xor.b64  	%rd17504, %rd17503, %rd17502;
	shf.l.wrap.b32 	%r35250, %r35244, %r35245, 25;
	shf.l.wrap.b32 	%r35251, %r35245, %r35244, 25;
	mov.b64 	%rd17505, {%r35251, %r35250};
	xor.b64  	%rd17506, %rd17504, %rd17505;
	ld.local.u64 	%rd17507, [%rd9+8];
	and.b64  	%rd17508, %rd17507, %rd17501;
	xor.b64  	%rd17509, %rd17507, %rd17501;
	ld.local.u64 	%rd17510, [%rd9+16];
	and.b64  	%rd17511, %rd17510, %rd17509;
	or.b64  	%rd17512, %rd17511, %rd17508;
	add.s64 	%rd17513, %rd17498, %rd17512;
	add.s64 	%rd17514, %rd17513, %rd17506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35252,%dummy}, %rd17500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35253}, %rd17500;
	}
	shf.r.wrap.b32 	%r35254, %r35253, %r35252, 14;
	shf.r.wrap.b32 	%r35255, %r35252, %r35253, 14;
	mov.b64 	%rd17515, {%r35255, %r35254};
	shf.r.wrap.b32 	%r35256, %r35253, %r35252, 18;
	shf.r.wrap.b32 	%r35257, %r35252, %r35253, 18;
	mov.b64 	%rd17516, {%r35257, %r35256};
	xor.b64  	%rd17517, %rd17516, %rd17515;
	shf.l.wrap.b32 	%r35258, %r35252, %r35253, 23;
	shf.l.wrap.b32 	%r35259, %r35253, %r35252, 23;
	mov.b64 	%rd17518, {%r35259, %r35258};
	xor.b64  	%rd17519, %rd17517, %rd17518;
	xor.b64  	%rd17520, %rd17489, %rd17482;
	and.b64  	%rd17521, %rd17500, %rd17520;
	xor.b64  	%rd17522, %rd17521, %rd17489;
	add.s64 	%rd17523, %rd17467, %rd17488;
	ld.const.u64 	%rd17524, [k_sha512+8];
	add.s64 	%rd17525, %rd17523, %rd17524;
	add.s64 	%rd17526, %rd17525, %rd17522;
	add.s64 	%rd17527, %rd17526, %rd17519;
	add.s64 	%rd17528, %rd17527, %rd17510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35260,%dummy}, %rd17514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35261}, %rd17514;
	}
	shf.r.wrap.b32 	%r35262, %r35261, %r35260, 28;
	shf.r.wrap.b32 	%r35263, %r35260, %r35261, 28;
	mov.b64 	%rd17529, {%r35263, %r35262};
	shf.l.wrap.b32 	%r35264, %r35260, %r35261, 30;
	shf.l.wrap.b32 	%r35265, %r35261, %r35260, 30;
	mov.b64 	%rd17530, {%r35265, %r35264};
	xor.b64  	%rd17531, %rd17530, %rd17529;
	shf.l.wrap.b32 	%r35266, %r35260, %r35261, 25;
	shf.l.wrap.b32 	%r35267, %r35261, %r35260, 25;
	mov.b64 	%rd17532, {%r35267, %r35266};
	xor.b64  	%rd17533, %rd17531, %rd17532;
	and.b64  	%rd17534, %rd17514, %rd17501;
	xor.b64  	%rd17535, %rd17514, %rd17501;
	and.b64  	%rd17536, %rd17535, %rd17507;
	or.b64  	%rd17537, %rd17536, %rd17534;
	add.s64 	%rd17538, %rd17527, %rd17537;
	add.s64 	%rd17539, %rd17538, %rd17533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35268,%dummy}, %rd17528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35269}, %rd17528;
	}
	shf.r.wrap.b32 	%r35270, %r35269, %r35268, 14;
	shf.r.wrap.b32 	%r35271, %r35268, %r35269, 14;
	mov.b64 	%rd17540, {%r35271, %r35270};
	shf.r.wrap.b32 	%r35272, %r35269, %r35268, 18;
	shf.r.wrap.b32 	%r35273, %r35268, %r35269, 18;
	mov.b64 	%rd17541, {%r35273, %r35272};
	xor.b64  	%rd17542, %rd17541, %rd17540;
	shf.l.wrap.b32 	%r35274, %r35268, %r35269, 23;
	shf.l.wrap.b32 	%r35275, %r35269, %r35268, 23;
	mov.b64 	%rd17543, {%r35275, %r35274};
	xor.b64  	%rd17544, %rd17542, %rd17543;
	xor.b64  	%rd17545, %rd17500, %rd17482;
	and.b64  	%rd17546, %rd17528, %rd17545;
	xor.b64  	%rd17547, %rd17546, %rd17482;
	add.s64 	%rd17548, %rd17468, %rd17489;
	ld.const.u64 	%rd17549, [k_sha512+16];
	add.s64 	%rd17550, %rd17548, %rd17549;
	add.s64 	%rd17551, %rd17550, %rd17547;
	add.s64 	%rd17552, %rd17551, %rd17544;
	add.s64 	%rd17553, %rd17552, %rd17507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35276,%dummy}, %rd17539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35277}, %rd17539;
	}
	shf.r.wrap.b32 	%r35278, %r35277, %r35276, 28;
	shf.r.wrap.b32 	%r35279, %r35276, %r35277, 28;
	mov.b64 	%rd17554, {%r35279, %r35278};
	shf.l.wrap.b32 	%r35280, %r35276, %r35277, 30;
	shf.l.wrap.b32 	%r35281, %r35277, %r35276, 30;
	mov.b64 	%rd17555, {%r35281, %r35280};
	xor.b64  	%rd17556, %rd17555, %rd17554;
	shf.l.wrap.b32 	%r35282, %r35276, %r35277, 25;
	shf.l.wrap.b32 	%r35283, %r35277, %r35276, 25;
	mov.b64 	%rd17557, {%r35283, %r35282};
	xor.b64  	%rd17558, %rd17556, %rd17557;
	and.b64  	%rd17559, %rd17539, %rd17514;
	xor.b64  	%rd17560, %rd17539, %rd17514;
	and.b64  	%rd17561, %rd17560, %rd17501;
	or.b64  	%rd17562, %rd17561, %rd17559;
	add.s64 	%rd17563, %rd17552, %rd17562;
	add.s64 	%rd17564, %rd17563, %rd17558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35284,%dummy}, %rd17553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35285}, %rd17553;
	}
	shf.r.wrap.b32 	%r35286, %r35285, %r35284, 14;
	shf.r.wrap.b32 	%r35287, %r35284, %r35285, 14;
	mov.b64 	%rd17565, {%r35287, %r35286};
	shf.r.wrap.b32 	%r35288, %r35285, %r35284, 18;
	shf.r.wrap.b32 	%r35289, %r35284, %r35285, 18;
	mov.b64 	%rd17566, {%r35289, %r35288};
	xor.b64  	%rd17567, %rd17566, %rd17565;
	shf.l.wrap.b32 	%r35290, %r35284, %r35285, 23;
	shf.l.wrap.b32 	%r35291, %r35285, %r35284, 23;
	mov.b64 	%rd17568, {%r35291, %r35290};
	xor.b64  	%rd17569, %rd17567, %rd17568;
	xor.b64  	%rd17570, %rd17528, %rd17500;
	and.b64  	%rd17571, %rd17553, %rd17570;
	xor.b64  	%rd17572, %rd17571, %rd17500;
	add.s64 	%rd17573, %rd17469, %rd17482;
	ld.const.u64 	%rd17574, [k_sha512+24];
	add.s64 	%rd17575, %rd17573, %rd17574;
	add.s64 	%rd17576, %rd17575, %rd17572;
	add.s64 	%rd17577, %rd17576, %rd17569;
	add.s64 	%rd17578, %rd17577, %rd17501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35292,%dummy}, %rd17564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35293}, %rd17564;
	}
	shf.r.wrap.b32 	%r35294, %r35293, %r35292, 28;
	shf.r.wrap.b32 	%r35295, %r35292, %r35293, 28;
	mov.b64 	%rd17579, {%r35295, %r35294};
	shf.l.wrap.b32 	%r35296, %r35292, %r35293, 30;
	shf.l.wrap.b32 	%r35297, %r35293, %r35292, 30;
	mov.b64 	%rd17580, {%r35297, %r35296};
	xor.b64  	%rd17581, %rd17580, %rd17579;
	shf.l.wrap.b32 	%r35298, %r35292, %r35293, 25;
	shf.l.wrap.b32 	%r35299, %r35293, %r35292, 25;
	mov.b64 	%rd17582, {%r35299, %r35298};
	xor.b64  	%rd17583, %rd17581, %rd17582;
	and.b64  	%rd17584, %rd17564, %rd17539;
	xor.b64  	%rd17585, %rd17564, %rd17539;
	and.b64  	%rd17586, %rd17585, %rd17514;
	or.b64  	%rd17587, %rd17586, %rd17584;
	add.s64 	%rd17588, %rd17577, %rd17587;
	add.s64 	%rd17589, %rd17588, %rd17583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35300,%dummy}, %rd17578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35301}, %rd17578;
	}
	shf.r.wrap.b32 	%r35302, %r35301, %r35300, 14;
	shf.r.wrap.b32 	%r35303, %r35300, %r35301, 14;
	mov.b64 	%rd17590, {%r35303, %r35302};
	shf.r.wrap.b32 	%r35304, %r35301, %r35300, 18;
	shf.r.wrap.b32 	%r35305, %r35300, %r35301, 18;
	mov.b64 	%rd17591, {%r35305, %r35304};
	xor.b64  	%rd17592, %rd17591, %rd17590;
	shf.l.wrap.b32 	%r35306, %r35300, %r35301, 23;
	shf.l.wrap.b32 	%r35307, %r35301, %r35300, 23;
	mov.b64 	%rd17593, {%r35307, %r35306};
	xor.b64  	%rd17594, %rd17592, %rd17593;
	xor.b64  	%rd17595, %rd17553, %rd17528;
	and.b64  	%rd17596, %rd17578, %rd17595;
	xor.b64  	%rd17597, %rd17596, %rd17528;
	add.s64 	%rd17598, %rd17500, %rd17470;
	ld.const.u64 	%rd17599, [k_sha512+32];
	add.s64 	%rd17600, %rd17598, %rd17599;
	add.s64 	%rd17601, %rd17600, %rd17597;
	add.s64 	%rd17602, %rd17601, %rd17594;
	add.s64 	%rd17603, %rd17602, %rd17514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35308,%dummy}, %rd17589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35309}, %rd17589;
	}
	shf.r.wrap.b32 	%r35310, %r35309, %r35308, 28;
	shf.r.wrap.b32 	%r35311, %r35308, %r35309, 28;
	mov.b64 	%rd17604, {%r35311, %r35310};
	shf.l.wrap.b32 	%r35312, %r35308, %r35309, 30;
	shf.l.wrap.b32 	%r35313, %r35309, %r35308, 30;
	mov.b64 	%rd17605, {%r35313, %r35312};
	xor.b64  	%rd17606, %rd17605, %rd17604;
	shf.l.wrap.b32 	%r35314, %r35308, %r35309, 25;
	shf.l.wrap.b32 	%r35315, %r35309, %r35308, 25;
	mov.b64 	%rd17607, {%r35315, %r35314};
	xor.b64  	%rd17608, %rd17606, %rd17607;
	and.b64  	%rd17609, %rd17589, %rd17564;
	xor.b64  	%rd17610, %rd17589, %rd17564;
	and.b64  	%rd17611, %rd17610, %rd17539;
	or.b64  	%rd17612, %rd17611, %rd17609;
	add.s64 	%rd17613, %rd17602, %rd17612;
	add.s64 	%rd17614, %rd17613, %rd17608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35316,%dummy}, %rd17603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35317}, %rd17603;
	}
	shf.r.wrap.b32 	%r35318, %r35317, %r35316, 14;
	shf.r.wrap.b32 	%r35319, %r35316, %r35317, 14;
	mov.b64 	%rd17615, {%r35319, %r35318};
	shf.r.wrap.b32 	%r35320, %r35317, %r35316, 18;
	shf.r.wrap.b32 	%r35321, %r35316, %r35317, 18;
	mov.b64 	%rd17616, {%r35321, %r35320};
	xor.b64  	%rd17617, %rd17616, %rd17615;
	shf.l.wrap.b32 	%r35322, %r35316, %r35317, 23;
	shf.l.wrap.b32 	%r35323, %r35317, %r35316, 23;
	mov.b64 	%rd17618, {%r35323, %r35322};
	xor.b64  	%rd17619, %rd17617, %rd17618;
	xor.b64  	%rd17620, %rd17578, %rd17553;
	and.b64  	%rd17621, %rd17603, %rd17620;
	xor.b64  	%rd17622, %rd17621, %rd17553;
	add.s64 	%rd17623, %rd17528, %rd17471;
	ld.const.u64 	%rd17624, [k_sha512+40];
	add.s64 	%rd17625, %rd17623, %rd17624;
	add.s64 	%rd17626, %rd17625, %rd17622;
	add.s64 	%rd17627, %rd17626, %rd17619;
	add.s64 	%rd17628, %rd17627, %rd17539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35324,%dummy}, %rd17614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35325}, %rd17614;
	}
	shf.r.wrap.b32 	%r35326, %r35325, %r35324, 28;
	shf.r.wrap.b32 	%r35327, %r35324, %r35325, 28;
	mov.b64 	%rd17629, {%r35327, %r35326};
	shf.l.wrap.b32 	%r35328, %r35324, %r35325, 30;
	shf.l.wrap.b32 	%r35329, %r35325, %r35324, 30;
	mov.b64 	%rd17630, {%r35329, %r35328};
	xor.b64  	%rd17631, %rd17630, %rd17629;
	shf.l.wrap.b32 	%r35330, %r35324, %r35325, 25;
	shf.l.wrap.b32 	%r35331, %r35325, %r35324, 25;
	mov.b64 	%rd17632, {%r35331, %r35330};
	xor.b64  	%rd17633, %rd17631, %rd17632;
	and.b64  	%rd17634, %rd17614, %rd17589;
	xor.b64  	%rd17635, %rd17614, %rd17589;
	and.b64  	%rd17636, %rd17635, %rd17564;
	or.b64  	%rd17637, %rd17636, %rd17634;
	add.s64 	%rd17638, %rd17627, %rd17637;
	add.s64 	%rd17639, %rd17638, %rd17633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35332,%dummy}, %rd17628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35333}, %rd17628;
	}
	shf.r.wrap.b32 	%r35334, %r35333, %r35332, 14;
	shf.r.wrap.b32 	%r35335, %r35332, %r35333, 14;
	mov.b64 	%rd17640, {%r35335, %r35334};
	shf.r.wrap.b32 	%r35336, %r35333, %r35332, 18;
	shf.r.wrap.b32 	%r35337, %r35332, %r35333, 18;
	mov.b64 	%rd17641, {%r35337, %r35336};
	xor.b64  	%rd17642, %rd17641, %rd17640;
	shf.l.wrap.b32 	%r35338, %r35332, %r35333, 23;
	shf.l.wrap.b32 	%r35339, %r35333, %r35332, 23;
	mov.b64 	%rd17643, {%r35339, %r35338};
	xor.b64  	%rd17644, %rd17642, %rd17643;
	xor.b64  	%rd17645, %rd17603, %rd17578;
	and.b64  	%rd17646, %rd17628, %rd17645;
	xor.b64  	%rd17647, %rd17646, %rd17578;
	add.s64 	%rd17648, %rd17553, %rd17472;
	ld.const.u64 	%rd17649, [k_sha512+48];
	add.s64 	%rd17650, %rd17648, %rd17649;
	add.s64 	%rd17651, %rd17650, %rd17647;
	add.s64 	%rd17652, %rd17651, %rd17644;
	add.s64 	%rd17653, %rd17652, %rd17564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35340,%dummy}, %rd17639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35341}, %rd17639;
	}
	shf.r.wrap.b32 	%r35342, %r35341, %r35340, 28;
	shf.r.wrap.b32 	%r35343, %r35340, %r35341, 28;
	mov.b64 	%rd17654, {%r35343, %r35342};
	shf.l.wrap.b32 	%r35344, %r35340, %r35341, 30;
	shf.l.wrap.b32 	%r35345, %r35341, %r35340, 30;
	mov.b64 	%rd17655, {%r35345, %r35344};
	xor.b64  	%rd17656, %rd17655, %rd17654;
	shf.l.wrap.b32 	%r35346, %r35340, %r35341, 25;
	shf.l.wrap.b32 	%r35347, %r35341, %r35340, 25;
	mov.b64 	%rd17657, {%r35347, %r35346};
	xor.b64  	%rd17658, %rd17656, %rd17657;
	and.b64  	%rd17659, %rd17639, %rd17614;
	xor.b64  	%rd17660, %rd17639, %rd17614;
	and.b64  	%rd17661, %rd17660, %rd17589;
	or.b64  	%rd17662, %rd17661, %rd17659;
	add.s64 	%rd17663, %rd17652, %rd17662;
	add.s64 	%rd17664, %rd17663, %rd17658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35348,%dummy}, %rd17653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35349}, %rd17653;
	}
	shf.r.wrap.b32 	%r35350, %r35349, %r35348, 14;
	shf.r.wrap.b32 	%r35351, %r35348, %r35349, 14;
	mov.b64 	%rd17665, {%r35351, %r35350};
	shf.r.wrap.b32 	%r35352, %r35349, %r35348, 18;
	shf.r.wrap.b32 	%r35353, %r35348, %r35349, 18;
	mov.b64 	%rd17666, {%r35353, %r35352};
	xor.b64  	%rd17667, %rd17666, %rd17665;
	shf.l.wrap.b32 	%r35354, %r35348, %r35349, 23;
	shf.l.wrap.b32 	%r35355, %r35349, %r35348, 23;
	mov.b64 	%rd17668, {%r35355, %r35354};
	xor.b64  	%rd17669, %rd17667, %rd17668;
	xor.b64  	%rd17670, %rd17628, %rd17603;
	and.b64  	%rd17671, %rd17653, %rd17670;
	xor.b64  	%rd17672, %rd17671, %rd17603;
	add.s64 	%rd17673, %rd17578, %rd17473;
	ld.const.u64 	%rd17674, [k_sha512+56];
	add.s64 	%rd17675, %rd17673, %rd17674;
	add.s64 	%rd17676, %rd17675, %rd17672;
	add.s64 	%rd17677, %rd17676, %rd17669;
	add.s64 	%rd17678, %rd17677, %rd17589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35356,%dummy}, %rd17664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35357}, %rd17664;
	}
	shf.r.wrap.b32 	%r35358, %r35357, %r35356, 28;
	shf.r.wrap.b32 	%r35359, %r35356, %r35357, 28;
	mov.b64 	%rd17679, {%r35359, %r35358};
	shf.l.wrap.b32 	%r35360, %r35356, %r35357, 30;
	shf.l.wrap.b32 	%r35361, %r35357, %r35356, 30;
	mov.b64 	%rd17680, {%r35361, %r35360};
	xor.b64  	%rd17681, %rd17680, %rd17679;
	shf.l.wrap.b32 	%r35362, %r35356, %r35357, 25;
	shf.l.wrap.b32 	%r35363, %r35357, %r35356, 25;
	mov.b64 	%rd17682, {%r35363, %r35362};
	xor.b64  	%rd17683, %rd17681, %rd17682;
	and.b64  	%rd17684, %rd17664, %rd17639;
	xor.b64  	%rd17685, %rd17664, %rd17639;
	and.b64  	%rd17686, %rd17685, %rd17614;
	or.b64  	%rd17687, %rd17686, %rd17684;
	add.s64 	%rd17688, %rd17677, %rd17687;
	add.s64 	%rd17689, %rd17688, %rd17683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35364,%dummy}, %rd17678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35365}, %rd17678;
	}
	shf.r.wrap.b32 	%r35366, %r35365, %r35364, 14;
	shf.r.wrap.b32 	%r35367, %r35364, %r35365, 14;
	mov.b64 	%rd17690, {%r35367, %r35366};
	shf.r.wrap.b32 	%r35368, %r35365, %r35364, 18;
	shf.r.wrap.b32 	%r35369, %r35364, %r35365, 18;
	mov.b64 	%rd17691, {%r35369, %r35368};
	xor.b64  	%rd17692, %rd17691, %rd17690;
	shf.l.wrap.b32 	%r35370, %r35364, %r35365, 23;
	shf.l.wrap.b32 	%r35371, %r35365, %r35364, 23;
	mov.b64 	%rd17693, {%r35371, %r35370};
	xor.b64  	%rd17694, %rd17692, %rd17693;
	xor.b64  	%rd17695, %rd17653, %rd17628;
	and.b64  	%rd17696, %rd17678, %rd17695;
	xor.b64  	%rd17697, %rd17696, %rd17628;
	add.s64 	%rd17698, %rd17603, %rd17474;
	ld.const.u64 	%rd17699, [k_sha512+64];
	add.s64 	%rd17700, %rd17698, %rd17699;
	add.s64 	%rd17701, %rd17700, %rd17697;
	add.s64 	%rd17702, %rd17701, %rd17694;
	add.s64 	%rd17703, %rd17702, %rd17614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35372,%dummy}, %rd17689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35373}, %rd17689;
	}
	shf.r.wrap.b32 	%r35374, %r35373, %r35372, 28;
	shf.r.wrap.b32 	%r35375, %r35372, %r35373, 28;
	mov.b64 	%rd17704, {%r35375, %r35374};
	shf.l.wrap.b32 	%r35376, %r35372, %r35373, 30;
	shf.l.wrap.b32 	%r35377, %r35373, %r35372, 30;
	mov.b64 	%rd17705, {%r35377, %r35376};
	xor.b64  	%rd17706, %rd17705, %rd17704;
	shf.l.wrap.b32 	%r35378, %r35372, %r35373, 25;
	shf.l.wrap.b32 	%r35379, %r35373, %r35372, 25;
	mov.b64 	%rd17707, {%r35379, %r35378};
	xor.b64  	%rd17708, %rd17706, %rd17707;
	and.b64  	%rd17709, %rd17689, %rd17664;
	xor.b64  	%rd17710, %rd17689, %rd17664;
	and.b64  	%rd17711, %rd17710, %rd17639;
	or.b64  	%rd17712, %rd17711, %rd17709;
	add.s64 	%rd17713, %rd17702, %rd17712;
	add.s64 	%rd17714, %rd17713, %rd17708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35380,%dummy}, %rd17703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35381}, %rd17703;
	}
	shf.r.wrap.b32 	%r35382, %r35381, %r35380, 14;
	shf.r.wrap.b32 	%r35383, %r35380, %r35381, 14;
	mov.b64 	%rd17715, {%r35383, %r35382};
	shf.r.wrap.b32 	%r35384, %r35381, %r35380, 18;
	shf.r.wrap.b32 	%r35385, %r35380, %r35381, 18;
	mov.b64 	%rd17716, {%r35385, %r35384};
	xor.b64  	%rd17717, %rd17716, %rd17715;
	shf.l.wrap.b32 	%r35386, %r35380, %r35381, 23;
	shf.l.wrap.b32 	%r35387, %r35381, %r35380, 23;
	mov.b64 	%rd17718, {%r35387, %r35386};
	xor.b64  	%rd17719, %rd17717, %rd17718;
	xor.b64  	%rd17720, %rd17678, %rd17653;
	and.b64  	%rd17721, %rd17703, %rd17720;
	xor.b64  	%rd17722, %rd17721, %rd17653;
	add.s64 	%rd17723, %rd17628, %rd17475;
	ld.const.u64 	%rd17724, [k_sha512+72];
	add.s64 	%rd17725, %rd17723, %rd17724;
	add.s64 	%rd17726, %rd17725, %rd17722;
	add.s64 	%rd17727, %rd17726, %rd17719;
	add.s64 	%rd17728, %rd17727, %rd17639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35388,%dummy}, %rd17714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35389}, %rd17714;
	}
	shf.r.wrap.b32 	%r35390, %r35389, %r35388, 28;
	shf.r.wrap.b32 	%r35391, %r35388, %r35389, 28;
	mov.b64 	%rd17729, {%r35391, %r35390};
	shf.l.wrap.b32 	%r35392, %r35388, %r35389, 30;
	shf.l.wrap.b32 	%r35393, %r35389, %r35388, 30;
	mov.b64 	%rd17730, {%r35393, %r35392};
	xor.b64  	%rd17731, %rd17730, %rd17729;
	shf.l.wrap.b32 	%r35394, %r35388, %r35389, 25;
	shf.l.wrap.b32 	%r35395, %r35389, %r35388, 25;
	mov.b64 	%rd17732, {%r35395, %r35394};
	xor.b64  	%rd17733, %rd17731, %rd17732;
	and.b64  	%rd17734, %rd17714, %rd17689;
	xor.b64  	%rd17735, %rd17714, %rd17689;
	and.b64  	%rd17736, %rd17735, %rd17664;
	or.b64  	%rd17737, %rd17736, %rd17734;
	add.s64 	%rd17738, %rd17727, %rd17737;
	add.s64 	%rd17739, %rd17738, %rd17733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35396,%dummy}, %rd17728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35397}, %rd17728;
	}
	shf.r.wrap.b32 	%r35398, %r35397, %r35396, 14;
	shf.r.wrap.b32 	%r35399, %r35396, %r35397, 14;
	mov.b64 	%rd17740, {%r35399, %r35398};
	shf.r.wrap.b32 	%r35400, %r35397, %r35396, 18;
	shf.r.wrap.b32 	%r35401, %r35396, %r35397, 18;
	mov.b64 	%rd17741, {%r35401, %r35400};
	xor.b64  	%rd17742, %rd17741, %rd17740;
	shf.l.wrap.b32 	%r35402, %r35396, %r35397, 23;
	shf.l.wrap.b32 	%r35403, %r35397, %r35396, 23;
	mov.b64 	%rd17743, {%r35403, %r35402};
	xor.b64  	%rd17744, %rd17742, %rd17743;
	xor.b64  	%rd17745, %rd17703, %rd17678;
	and.b64  	%rd17746, %rd17728, %rd17745;
	xor.b64  	%rd17747, %rd17746, %rd17678;
	add.s64 	%rd17748, %rd17653, %rd17476;
	ld.const.u64 	%rd17749, [k_sha512+80];
	add.s64 	%rd17750, %rd17748, %rd17749;
	add.s64 	%rd17751, %rd17750, %rd17747;
	add.s64 	%rd17752, %rd17751, %rd17744;
	add.s64 	%rd17753, %rd17752, %rd17664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35404,%dummy}, %rd17739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35405}, %rd17739;
	}
	shf.r.wrap.b32 	%r35406, %r35405, %r35404, 28;
	shf.r.wrap.b32 	%r35407, %r35404, %r35405, 28;
	mov.b64 	%rd17754, {%r35407, %r35406};
	shf.l.wrap.b32 	%r35408, %r35404, %r35405, 30;
	shf.l.wrap.b32 	%r35409, %r35405, %r35404, 30;
	mov.b64 	%rd17755, {%r35409, %r35408};
	xor.b64  	%rd17756, %rd17755, %rd17754;
	shf.l.wrap.b32 	%r35410, %r35404, %r35405, 25;
	shf.l.wrap.b32 	%r35411, %r35405, %r35404, 25;
	mov.b64 	%rd17757, {%r35411, %r35410};
	xor.b64  	%rd17758, %rd17756, %rd17757;
	and.b64  	%rd17759, %rd17739, %rd17714;
	xor.b64  	%rd17760, %rd17739, %rd17714;
	and.b64  	%rd17761, %rd17760, %rd17689;
	or.b64  	%rd17762, %rd17761, %rd17759;
	add.s64 	%rd17763, %rd17752, %rd17762;
	add.s64 	%rd17764, %rd17763, %rd17758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35412,%dummy}, %rd17753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35413}, %rd17753;
	}
	shf.r.wrap.b32 	%r35414, %r35413, %r35412, 14;
	shf.r.wrap.b32 	%r35415, %r35412, %r35413, 14;
	mov.b64 	%rd17765, {%r35415, %r35414};
	shf.r.wrap.b32 	%r35416, %r35413, %r35412, 18;
	shf.r.wrap.b32 	%r35417, %r35412, %r35413, 18;
	mov.b64 	%rd17766, {%r35417, %r35416};
	xor.b64  	%rd17767, %rd17766, %rd17765;
	shf.l.wrap.b32 	%r35418, %r35412, %r35413, 23;
	shf.l.wrap.b32 	%r35419, %r35413, %r35412, 23;
	mov.b64 	%rd17768, {%r35419, %r35418};
	xor.b64  	%rd17769, %rd17767, %rd17768;
	xor.b64  	%rd17770, %rd17728, %rd17703;
	and.b64  	%rd17771, %rd17753, %rd17770;
	xor.b64  	%rd17772, %rd17771, %rd17703;
	add.s64 	%rd17773, %rd17678, %rd17477;
	ld.const.u64 	%rd17774, [k_sha512+88];
	add.s64 	%rd17775, %rd17773, %rd17774;
	add.s64 	%rd17776, %rd17775, %rd17772;
	add.s64 	%rd17777, %rd17776, %rd17769;
	add.s64 	%rd17778, %rd17777, %rd17689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35420,%dummy}, %rd17764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35421}, %rd17764;
	}
	shf.r.wrap.b32 	%r35422, %r35421, %r35420, 28;
	shf.r.wrap.b32 	%r35423, %r35420, %r35421, 28;
	mov.b64 	%rd17779, {%r35423, %r35422};
	shf.l.wrap.b32 	%r35424, %r35420, %r35421, 30;
	shf.l.wrap.b32 	%r35425, %r35421, %r35420, 30;
	mov.b64 	%rd17780, {%r35425, %r35424};
	xor.b64  	%rd17781, %rd17780, %rd17779;
	shf.l.wrap.b32 	%r35426, %r35420, %r35421, 25;
	shf.l.wrap.b32 	%r35427, %r35421, %r35420, 25;
	mov.b64 	%rd17782, {%r35427, %r35426};
	xor.b64  	%rd17783, %rd17781, %rd17782;
	and.b64  	%rd17784, %rd17764, %rd17739;
	xor.b64  	%rd17785, %rd17764, %rd17739;
	and.b64  	%rd17786, %rd17785, %rd17714;
	or.b64  	%rd17787, %rd17786, %rd17784;
	add.s64 	%rd17788, %rd17777, %rd17787;
	add.s64 	%rd17789, %rd17788, %rd17783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35428,%dummy}, %rd17778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35429}, %rd17778;
	}
	shf.r.wrap.b32 	%r35430, %r35429, %r35428, 14;
	shf.r.wrap.b32 	%r35431, %r35428, %r35429, 14;
	mov.b64 	%rd17790, {%r35431, %r35430};
	shf.r.wrap.b32 	%r35432, %r35429, %r35428, 18;
	shf.r.wrap.b32 	%r35433, %r35428, %r35429, 18;
	mov.b64 	%rd17791, {%r35433, %r35432};
	xor.b64  	%rd17792, %rd17791, %rd17790;
	shf.l.wrap.b32 	%r35434, %r35428, %r35429, 23;
	shf.l.wrap.b32 	%r35435, %r35429, %r35428, 23;
	mov.b64 	%rd17793, {%r35435, %r35434};
	xor.b64  	%rd17794, %rd17792, %rd17793;
	xor.b64  	%rd17795, %rd17753, %rd17728;
	and.b64  	%rd17796, %rd17778, %rd17795;
	xor.b64  	%rd17797, %rd17796, %rd17728;
	add.s64 	%rd17798, %rd17703, %rd17478;
	ld.const.u64 	%rd17799, [k_sha512+96];
	add.s64 	%rd17800, %rd17798, %rd17799;
	add.s64 	%rd17801, %rd17800, %rd17797;
	add.s64 	%rd17802, %rd17801, %rd17794;
	add.s64 	%rd17803, %rd17802, %rd17714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35436,%dummy}, %rd17789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35437}, %rd17789;
	}
	shf.r.wrap.b32 	%r35438, %r35437, %r35436, 28;
	shf.r.wrap.b32 	%r35439, %r35436, %r35437, 28;
	mov.b64 	%rd17804, {%r35439, %r35438};
	shf.l.wrap.b32 	%r35440, %r35436, %r35437, 30;
	shf.l.wrap.b32 	%r35441, %r35437, %r35436, 30;
	mov.b64 	%rd17805, {%r35441, %r35440};
	xor.b64  	%rd17806, %rd17805, %rd17804;
	shf.l.wrap.b32 	%r35442, %r35436, %r35437, 25;
	shf.l.wrap.b32 	%r35443, %r35437, %r35436, 25;
	mov.b64 	%rd17807, {%r35443, %r35442};
	xor.b64  	%rd17808, %rd17806, %rd17807;
	and.b64  	%rd17809, %rd17789, %rd17764;
	xor.b64  	%rd17810, %rd17789, %rd17764;
	and.b64  	%rd17811, %rd17810, %rd17739;
	or.b64  	%rd17812, %rd17811, %rd17809;
	add.s64 	%rd17813, %rd17802, %rd17812;
	add.s64 	%rd17814, %rd17813, %rd17808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35444,%dummy}, %rd17803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35445}, %rd17803;
	}
	shf.r.wrap.b32 	%r35446, %r35445, %r35444, 14;
	shf.r.wrap.b32 	%r35447, %r35444, %r35445, 14;
	mov.b64 	%rd17815, {%r35447, %r35446};
	shf.r.wrap.b32 	%r35448, %r35445, %r35444, 18;
	shf.r.wrap.b32 	%r35449, %r35444, %r35445, 18;
	mov.b64 	%rd17816, {%r35449, %r35448};
	xor.b64  	%rd17817, %rd17816, %rd17815;
	shf.l.wrap.b32 	%r35450, %r35444, %r35445, 23;
	shf.l.wrap.b32 	%r35451, %r35445, %r35444, 23;
	mov.b64 	%rd17818, {%r35451, %r35450};
	xor.b64  	%rd17819, %rd17817, %rd17818;
	xor.b64  	%rd17820, %rd17778, %rd17753;
	and.b64  	%rd17821, %rd17803, %rd17820;
	xor.b64  	%rd17822, %rd17821, %rd17753;
	add.s64 	%rd17823, %rd17728, %rd17479;
	ld.const.u64 	%rd17824, [k_sha512+104];
	add.s64 	%rd17825, %rd17823, %rd17824;
	add.s64 	%rd17826, %rd17825, %rd17822;
	add.s64 	%rd17827, %rd17826, %rd17819;
	add.s64 	%rd17828, %rd17827, %rd17739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35452,%dummy}, %rd17814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35453}, %rd17814;
	}
	shf.r.wrap.b32 	%r35454, %r35453, %r35452, 28;
	shf.r.wrap.b32 	%r35455, %r35452, %r35453, 28;
	mov.b64 	%rd17829, {%r35455, %r35454};
	shf.l.wrap.b32 	%r35456, %r35452, %r35453, 30;
	shf.l.wrap.b32 	%r35457, %r35453, %r35452, 30;
	mov.b64 	%rd17830, {%r35457, %r35456};
	xor.b64  	%rd17831, %rd17830, %rd17829;
	shf.l.wrap.b32 	%r35458, %r35452, %r35453, 25;
	shf.l.wrap.b32 	%r35459, %r35453, %r35452, 25;
	mov.b64 	%rd17832, {%r35459, %r35458};
	xor.b64  	%rd17833, %rd17831, %rd17832;
	and.b64  	%rd17834, %rd17814, %rd17789;
	xor.b64  	%rd17835, %rd17814, %rd17789;
	and.b64  	%rd17836, %rd17835, %rd17764;
	or.b64  	%rd17837, %rd17836, %rd17834;
	add.s64 	%rd17838, %rd17827, %rd17837;
	add.s64 	%rd17839, %rd17838, %rd17833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35460,%dummy}, %rd17828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35461}, %rd17828;
	}
	shf.r.wrap.b32 	%r35462, %r35461, %r35460, 14;
	shf.r.wrap.b32 	%r35463, %r35460, %r35461, 14;
	mov.b64 	%rd17840, {%r35463, %r35462};
	shf.r.wrap.b32 	%r35464, %r35461, %r35460, 18;
	shf.r.wrap.b32 	%r35465, %r35460, %r35461, 18;
	mov.b64 	%rd17841, {%r35465, %r35464};
	xor.b64  	%rd17842, %rd17841, %rd17840;
	shf.l.wrap.b32 	%r35466, %r35460, %r35461, 23;
	shf.l.wrap.b32 	%r35467, %r35461, %r35460, 23;
	mov.b64 	%rd17843, {%r35467, %r35466};
	xor.b64  	%rd17844, %rd17842, %rd17843;
	xor.b64  	%rd17845, %rd17803, %rd17778;
	and.b64  	%rd17846, %rd17828, %rd17845;
	xor.b64  	%rd17847, %rd17846, %rd17778;
	add.s64 	%rd17848, %rd17753, %rd17480;
	ld.const.u64 	%rd17849, [k_sha512+112];
	add.s64 	%rd17850, %rd17848, %rd17849;
	add.s64 	%rd17851, %rd17850, %rd17847;
	add.s64 	%rd17852, %rd17851, %rd17844;
	add.s64 	%rd17853, %rd17852, %rd17764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35468,%dummy}, %rd17839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35469}, %rd17839;
	}
	shf.r.wrap.b32 	%r35470, %r35469, %r35468, 28;
	shf.r.wrap.b32 	%r35471, %r35468, %r35469, 28;
	mov.b64 	%rd17854, {%r35471, %r35470};
	shf.l.wrap.b32 	%r35472, %r35468, %r35469, 30;
	shf.l.wrap.b32 	%r35473, %r35469, %r35468, 30;
	mov.b64 	%rd17855, {%r35473, %r35472};
	xor.b64  	%rd17856, %rd17855, %rd17854;
	shf.l.wrap.b32 	%r35474, %r35468, %r35469, 25;
	shf.l.wrap.b32 	%r35475, %r35469, %r35468, 25;
	mov.b64 	%rd17857, {%r35475, %r35474};
	xor.b64  	%rd17858, %rd17856, %rd17857;
	and.b64  	%rd17859, %rd17839, %rd17814;
	xor.b64  	%rd17860, %rd17839, %rd17814;
	and.b64  	%rd17861, %rd17860, %rd17789;
	or.b64  	%rd17862, %rd17861, %rd17859;
	add.s64 	%rd17863, %rd17852, %rd17862;
	add.s64 	%rd17864, %rd17863, %rd17858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35476,%dummy}, %rd17853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35477}, %rd17853;
	}
	shf.r.wrap.b32 	%r35478, %r35477, %r35476, 14;
	shf.r.wrap.b32 	%r35479, %r35476, %r35477, 14;
	mov.b64 	%rd17865, {%r35479, %r35478};
	shf.r.wrap.b32 	%r35480, %r35477, %r35476, 18;
	shf.r.wrap.b32 	%r35481, %r35476, %r35477, 18;
	mov.b64 	%rd17866, {%r35481, %r35480};
	xor.b64  	%rd17867, %rd17866, %rd17865;
	shf.l.wrap.b32 	%r35482, %r35476, %r35477, 23;
	shf.l.wrap.b32 	%r35483, %r35477, %r35476, 23;
	mov.b64 	%rd17868, {%r35483, %r35482};
	xor.b64  	%rd17869, %rd17867, %rd17868;
	xor.b64  	%rd17870, %rd17828, %rd17803;
	and.b64  	%rd17871, %rd17853, %rd17870;
	xor.b64  	%rd17872, %rd17871, %rd17803;
	add.s64 	%rd17873, %rd17778, %rd17481;
	ld.const.u64 	%rd17874, [k_sha512+120];
	add.s64 	%rd17875, %rd17873, %rd17874;
	add.s64 	%rd17876, %rd17875, %rd17872;
	add.s64 	%rd17877, %rd17876, %rd17869;
	add.s64 	%rd17878, %rd17877, %rd17789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35484,%dummy}, %rd17864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35485}, %rd17864;
	}
	shf.r.wrap.b32 	%r35486, %r35485, %r35484, 28;
	shf.r.wrap.b32 	%r35487, %r35484, %r35485, 28;
	mov.b64 	%rd17879, {%r35487, %r35486};
	shf.l.wrap.b32 	%r35488, %r35484, %r35485, 30;
	shf.l.wrap.b32 	%r35489, %r35485, %r35484, 30;
	mov.b64 	%rd17880, {%r35489, %r35488};
	xor.b64  	%rd17881, %rd17880, %rd17879;
	shf.l.wrap.b32 	%r35490, %r35484, %r35485, 25;
	shf.l.wrap.b32 	%r35491, %r35485, %r35484, 25;
	mov.b64 	%rd17882, {%r35491, %r35490};
	xor.b64  	%rd17883, %rd17881, %rd17882;
	and.b64  	%rd17884, %rd17864, %rd17839;
	xor.b64  	%rd17885, %rd17864, %rd17839;
	and.b64  	%rd17886, %rd17885, %rd17814;
	or.b64  	%rd17887, %rd17886, %rd17884;
	add.s64 	%rd17888, %rd17877, %rd17887;
	add.s64 	%rd17889, %rd17888, %rd17883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35492,%dummy}, %rd17480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35493}, %rd17480;
	}
	shf.r.wrap.b32 	%r35494, %r35493, %r35492, 19;
	shf.r.wrap.b32 	%r35495, %r35492, %r35493, 19;
	mov.b64 	%rd17890, {%r35495, %r35494};
	shf.l.wrap.b32 	%r35496, %r35492, %r35493, 3;
	shf.l.wrap.b32 	%r35497, %r35493, %r35492, 3;
	mov.b64 	%rd17891, {%r35497, %r35496};
	shr.u64 	%rd17892, %rd17480, 6;
	xor.b64  	%rd17893, %rd17890, %rd17892;
	xor.b64  	%rd17894, %rd17893, %rd17891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35498,%dummy}, %rd17467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35499}, %rd17467;
	}
	shf.r.wrap.b32 	%r35500, %r35499, %r35498, 1;
	shf.r.wrap.b32 	%r35501, %r35498, %r35499, 1;
	mov.b64 	%rd17895, {%r35501, %r35500};
	shf.r.wrap.b32 	%r35502, %r35499, %r35498, 8;
	shf.r.wrap.b32 	%r35503, %r35498, %r35499, 8;
	mov.b64 	%rd17896, {%r35503, %r35502};
	shr.u64 	%rd17897, %rd17467, 7;
	xor.b64  	%rd17898, %rd17895, %rd17897;
	xor.b64  	%rd17899, %rd17898, %rd17896;
	add.s64 	%rd17900, %rd17475, %rd17466;
	add.s64 	%rd17901, %rd17900, %rd17894;
	add.s64 	%rd17902, %rd17901, %rd17899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35504,%dummy}, %rd17481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35505}, %rd17481;
	}
	shf.r.wrap.b32 	%r35506, %r35505, %r35504, 19;
	shf.r.wrap.b32 	%r35507, %r35504, %r35505, 19;
	mov.b64 	%rd17903, {%r35507, %r35506};
	shf.l.wrap.b32 	%r35508, %r35504, %r35505, 3;
	shf.l.wrap.b32 	%r35509, %r35505, %r35504, 3;
	mov.b64 	%rd17904, {%r35509, %r35508};
	shr.u64 	%rd17905, %rd17481, 6;
	xor.b64  	%rd17906, %rd17903, %rd17905;
	xor.b64  	%rd17907, %rd17906, %rd17904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35510,%dummy}, %rd17468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35511}, %rd17468;
	}
	shf.r.wrap.b32 	%r35512, %r35511, %r35510, 1;
	shf.r.wrap.b32 	%r35513, %r35510, %r35511, 1;
	mov.b64 	%rd17908, {%r35513, %r35512};
	shf.r.wrap.b32 	%r35514, %r35511, %r35510, 8;
	shf.r.wrap.b32 	%r35515, %r35510, %r35511, 8;
	mov.b64 	%rd17909, {%r35515, %r35514};
	shr.u64 	%rd17910, %rd17468, 7;
	xor.b64  	%rd17911, %rd17908, %rd17910;
	xor.b64  	%rd17912, %rd17911, %rd17909;
	add.s64 	%rd17913, %rd17476, %rd17467;
	add.s64 	%rd17914, %rd17913, %rd17907;
	add.s64 	%rd17915, %rd17914, %rd17912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35516,%dummy}, %rd17902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35517}, %rd17902;
	}
	shf.r.wrap.b32 	%r35518, %r35517, %r35516, 19;
	shf.r.wrap.b32 	%r35519, %r35516, %r35517, 19;
	mov.b64 	%rd17916, {%r35519, %r35518};
	shf.l.wrap.b32 	%r35520, %r35516, %r35517, 3;
	shf.l.wrap.b32 	%r35521, %r35517, %r35516, 3;
	mov.b64 	%rd17917, {%r35521, %r35520};
	shr.u64 	%rd17918, %rd17902, 6;
	xor.b64  	%rd17919, %rd17916, %rd17918;
	xor.b64  	%rd17920, %rd17919, %rd17917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35522,%dummy}, %rd17469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35523}, %rd17469;
	}
	shf.r.wrap.b32 	%r35524, %r35523, %r35522, 1;
	shf.r.wrap.b32 	%r35525, %r35522, %r35523, 1;
	mov.b64 	%rd17921, {%r35525, %r35524};
	shf.r.wrap.b32 	%r35526, %r35523, %r35522, 8;
	shf.r.wrap.b32 	%r35527, %r35522, %r35523, 8;
	mov.b64 	%rd17922, {%r35527, %r35526};
	shr.u64 	%rd17923, %rd17469, 7;
	xor.b64  	%rd17924, %rd17921, %rd17923;
	xor.b64  	%rd17925, %rd17924, %rd17922;
	add.s64 	%rd17926, %rd17477, %rd17468;
	add.s64 	%rd17927, %rd17926, %rd17920;
	add.s64 	%rd17928, %rd17927, %rd17925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35528,%dummy}, %rd17915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35529}, %rd17915;
	}
	shf.r.wrap.b32 	%r35530, %r35529, %r35528, 19;
	shf.r.wrap.b32 	%r35531, %r35528, %r35529, 19;
	mov.b64 	%rd17929, {%r35531, %r35530};
	shf.l.wrap.b32 	%r35532, %r35528, %r35529, 3;
	shf.l.wrap.b32 	%r35533, %r35529, %r35528, 3;
	mov.b64 	%rd17930, {%r35533, %r35532};
	shr.u64 	%rd17931, %rd17915, 6;
	xor.b64  	%rd17932, %rd17929, %rd17931;
	xor.b64  	%rd17933, %rd17932, %rd17930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35534,%dummy}, %rd17470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35535}, %rd17470;
	}
	shf.r.wrap.b32 	%r35536, %r35535, %r35534, 1;
	shf.r.wrap.b32 	%r35537, %r35534, %r35535, 1;
	mov.b64 	%rd17934, {%r35537, %r35536};
	shf.r.wrap.b32 	%r35538, %r35535, %r35534, 8;
	shf.r.wrap.b32 	%r35539, %r35534, %r35535, 8;
	mov.b64 	%rd17935, {%r35539, %r35538};
	shr.u64 	%rd17936, %rd17470, 7;
	xor.b64  	%rd17937, %rd17934, %rd17936;
	xor.b64  	%rd17938, %rd17937, %rd17935;
	add.s64 	%rd17939, %rd17478, %rd17469;
	add.s64 	%rd17940, %rd17939, %rd17933;
	add.s64 	%rd17941, %rd17940, %rd17938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35540,%dummy}, %rd17928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35541}, %rd17928;
	}
	shf.r.wrap.b32 	%r35542, %r35541, %r35540, 19;
	shf.r.wrap.b32 	%r35543, %r35540, %r35541, 19;
	mov.b64 	%rd17942, {%r35543, %r35542};
	shf.l.wrap.b32 	%r35544, %r35540, %r35541, 3;
	shf.l.wrap.b32 	%r35545, %r35541, %r35540, 3;
	mov.b64 	%rd17943, {%r35545, %r35544};
	shr.u64 	%rd17944, %rd17928, 6;
	xor.b64  	%rd17945, %rd17942, %rd17944;
	xor.b64  	%rd17946, %rd17945, %rd17943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35546,%dummy}, %rd17471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35547}, %rd17471;
	}
	shf.r.wrap.b32 	%r35548, %r35547, %r35546, 1;
	shf.r.wrap.b32 	%r35549, %r35546, %r35547, 1;
	mov.b64 	%rd17947, {%r35549, %r35548};
	shf.r.wrap.b32 	%r35550, %r35547, %r35546, 8;
	shf.r.wrap.b32 	%r35551, %r35546, %r35547, 8;
	mov.b64 	%rd17948, {%r35551, %r35550};
	shr.u64 	%rd17949, %rd17471, 7;
	xor.b64  	%rd17950, %rd17947, %rd17949;
	xor.b64  	%rd17951, %rd17950, %rd17948;
	add.s64 	%rd17952, %rd17479, %rd17470;
	add.s64 	%rd17953, %rd17952, %rd17946;
	add.s64 	%rd17954, %rd17953, %rd17951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35552,%dummy}, %rd17941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35553}, %rd17941;
	}
	shf.r.wrap.b32 	%r35554, %r35553, %r35552, 19;
	shf.r.wrap.b32 	%r35555, %r35552, %r35553, 19;
	mov.b64 	%rd17955, {%r35555, %r35554};
	shf.l.wrap.b32 	%r35556, %r35552, %r35553, 3;
	shf.l.wrap.b32 	%r35557, %r35553, %r35552, 3;
	mov.b64 	%rd17956, {%r35557, %r35556};
	shr.u64 	%rd17957, %rd17941, 6;
	xor.b64  	%rd17958, %rd17955, %rd17957;
	xor.b64  	%rd17959, %rd17958, %rd17956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35558,%dummy}, %rd17472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35559}, %rd17472;
	}
	shf.r.wrap.b32 	%r35560, %r35559, %r35558, 1;
	shf.r.wrap.b32 	%r35561, %r35558, %r35559, 1;
	mov.b64 	%rd17960, {%r35561, %r35560};
	shf.r.wrap.b32 	%r35562, %r35559, %r35558, 8;
	shf.r.wrap.b32 	%r35563, %r35558, %r35559, 8;
	mov.b64 	%rd17961, {%r35563, %r35562};
	shr.u64 	%rd17962, %rd17472, 7;
	xor.b64  	%rd17963, %rd17960, %rd17962;
	xor.b64  	%rd17964, %rd17963, %rd17961;
	add.s64 	%rd17965, %rd17480, %rd17471;
	add.s64 	%rd17966, %rd17965, %rd17959;
	add.s64 	%rd17967, %rd17966, %rd17964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35564,%dummy}, %rd17954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35565}, %rd17954;
	}
	shf.r.wrap.b32 	%r35566, %r35565, %r35564, 19;
	shf.r.wrap.b32 	%r35567, %r35564, %r35565, 19;
	mov.b64 	%rd17968, {%r35567, %r35566};
	shf.l.wrap.b32 	%r35568, %r35564, %r35565, 3;
	shf.l.wrap.b32 	%r35569, %r35565, %r35564, 3;
	mov.b64 	%rd17969, {%r35569, %r35568};
	shr.u64 	%rd17970, %rd17954, 6;
	xor.b64  	%rd17971, %rd17968, %rd17970;
	xor.b64  	%rd17972, %rd17971, %rd17969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35570,%dummy}, %rd17473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35571}, %rd17473;
	}
	shf.r.wrap.b32 	%r35572, %r35571, %r35570, 1;
	shf.r.wrap.b32 	%r35573, %r35570, %r35571, 1;
	mov.b64 	%rd17973, {%r35573, %r35572};
	shf.r.wrap.b32 	%r35574, %r35571, %r35570, 8;
	shf.r.wrap.b32 	%r35575, %r35570, %r35571, 8;
	mov.b64 	%rd17974, {%r35575, %r35574};
	shr.u64 	%rd17975, %rd17473, 7;
	xor.b64  	%rd17976, %rd17973, %rd17975;
	xor.b64  	%rd17977, %rd17976, %rd17974;
	add.s64 	%rd17978, %rd17481, %rd17472;
	add.s64 	%rd17979, %rd17978, %rd17972;
	add.s64 	%rd17980, %rd17979, %rd17977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35576,%dummy}, %rd17967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35577}, %rd17967;
	}
	shf.r.wrap.b32 	%r35578, %r35577, %r35576, 19;
	shf.r.wrap.b32 	%r35579, %r35576, %r35577, 19;
	mov.b64 	%rd17981, {%r35579, %r35578};
	shf.l.wrap.b32 	%r35580, %r35576, %r35577, 3;
	shf.l.wrap.b32 	%r35581, %r35577, %r35576, 3;
	mov.b64 	%rd17982, {%r35581, %r35580};
	shr.u64 	%rd17983, %rd17967, 6;
	xor.b64  	%rd17984, %rd17981, %rd17983;
	xor.b64  	%rd17985, %rd17984, %rd17982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35582,%dummy}, %rd17474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35583}, %rd17474;
	}
	shf.r.wrap.b32 	%r35584, %r35583, %r35582, 1;
	shf.r.wrap.b32 	%r35585, %r35582, %r35583, 1;
	mov.b64 	%rd17986, {%r35585, %r35584};
	shf.r.wrap.b32 	%r35586, %r35583, %r35582, 8;
	shf.r.wrap.b32 	%r35587, %r35582, %r35583, 8;
	mov.b64 	%rd17987, {%r35587, %r35586};
	shr.u64 	%rd17988, %rd17474, 7;
	xor.b64  	%rd17989, %rd17986, %rd17988;
	xor.b64  	%rd17990, %rd17989, %rd17987;
	add.s64 	%rd17991, %rd17902, %rd17473;
	add.s64 	%rd17992, %rd17991, %rd17985;
	add.s64 	%rd17993, %rd17992, %rd17990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35588,%dummy}, %rd17980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35589}, %rd17980;
	}
	shf.r.wrap.b32 	%r35590, %r35589, %r35588, 19;
	shf.r.wrap.b32 	%r35591, %r35588, %r35589, 19;
	mov.b64 	%rd17994, {%r35591, %r35590};
	shf.l.wrap.b32 	%r35592, %r35588, %r35589, 3;
	shf.l.wrap.b32 	%r35593, %r35589, %r35588, 3;
	mov.b64 	%rd17995, {%r35593, %r35592};
	shr.u64 	%rd17996, %rd17980, 6;
	xor.b64  	%rd17997, %rd17994, %rd17996;
	xor.b64  	%rd17998, %rd17997, %rd17995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35594,%dummy}, %rd17475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35595}, %rd17475;
	}
	shf.r.wrap.b32 	%r35596, %r35595, %r35594, 1;
	shf.r.wrap.b32 	%r35597, %r35594, %r35595, 1;
	mov.b64 	%rd17999, {%r35597, %r35596};
	shf.r.wrap.b32 	%r35598, %r35595, %r35594, 8;
	shf.r.wrap.b32 	%r35599, %r35594, %r35595, 8;
	mov.b64 	%rd18000, {%r35599, %r35598};
	shr.u64 	%rd18001, %rd17475, 7;
	xor.b64  	%rd18002, %rd17999, %rd18001;
	xor.b64  	%rd18003, %rd18002, %rd18000;
	add.s64 	%rd18004, %rd17915, %rd17474;
	add.s64 	%rd18005, %rd18004, %rd17998;
	add.s64 	%rd18006, %rd18005, %rd18003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35600,%dummy}, %rd17993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35601}, %rd17993;
	}
	shf.r.wrap.b32 	%r35602, %r35601, %r35600, 19;
	shf.r.wrap.b32 	%r35603, %r35600, %r35601, 19;
	mov.b64 	%rd18007, {%r35603, %r35602};
	shf.l.wrap.b32 	%r35604, %r35600, %r35601, 3;
	shf.l.wrap.b32 	%r35605, %r35601, %r35600, 3;
	mov.b64 	%rd18008, {%r35605, %r35604};
	shr.u64 	%rd18009, %rd17993, 6;
	xor.b64  	%rd18010, %rd18007, %rd18009;
	xor.b64  	%rd18011, %rd18010, %rd18008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35606,%dummy}, %rd17476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35607}, %rd17476;
	}
	shf.r.wrap.b32 	%r35608, %r35607, %r35606, 1;
	shf.r.wrap.b32 	%r35609, %r35606, %r35607, 1;
	mov.b64 	%rd18012, {%r35609, %r35608};
	shf.r.wrap.b32 	%r35610, %r35607, %r35606, 8;
	shf.r.wrap.b32 	%r35611, %r35606, %r35607, 8;
	mov.b64 	%rd18013, {%r35611, %r35610};
	shr.u64 	%rd18014, %rd17476, 7;
	xor.b64  	%rd18015, %rd18012, %rd18014;
	xor.b64  	%rd18016, %rd18015, %rd18013;
	add.s64 	%rd18017, %rd17928, %rd17475;
	add.s64 	%rd18018, %rd18017, %rd18011;
	add.s64 	%rd18019, %rd18018, %rd18016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35612,%dummy}, %rd18006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35613}, %rd18006;
	}
	shf.r.wrap.b32 	%r35614, %r35613, %r35612, 19;
	shf.r.wrap.b32 	%r35615, %r35612, %r35613, 19;
	mov.b64 	%rd18020, {%r35615, %r35614};
	shf.l.wrap.b32 	%r35616, %r35612, %r35613, 3;
	shf.l.wrap.b32 	%r35617, %r35613, %r35612, 3;
	mov.b64 	%rd18021, {%r35617, %r35616};
	shr.u64 	%rd18022, %rd18006, 6;
	xor.b64  	%rd18023, %rd18020, %rd18022;
	xor.b64  	%rd18024, %rd18023, %rd18021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35618,%dummy}, %rd17477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35619}, %rd17477;
	}
	shf.r.wrap.b32 	%r35620, %r35619, %r35618, 1;
	shf.r.wrap.b32 	%r35621, %r35618, %r35619, 1;
	mov.b64 	%rd18025, {%r35621, %r35620};
	shf.r.wrap.b32 	%r35622, %r35619, %r35618, 8;
	shf.r.wrap.b32 	%r35623, %r35618, %r35619, 8;
	mov.b64 	%rd18026, {%r35623, %r35622};
	shr.u64 	%rd18027, %rd17477, 7;
	xor.b64  	%rd18028, %rd18025, %rd18027;
	xor.b64  	%rd18029, %rd18028, %rd18026;
	add.s64 	%rd18030, %rd17941, %rd17476;
	add.s64 	%rd18031, %rd18030, %rd18024;
	add.s64 	%rd18032, %rd18031, %rd18029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35624,%dummy}, %rd18019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35625}, %rd18019;
	}
	shf.r.wrap.b32 	%r35626, %r35625, %r35624, 19;
	shf.r.wrap.b32 	%r35627, %r35624, %r35625, 19;
	mov.b64 	%rd18033, {%r35627, %r35626};
	shf.l.wrap.b32 	%r35628, %r35624, %r35625, 3;
	shf.l.wrap.b32 	%r35629, %r35625, %r35624, 3;
	mov.b64 	%rd18034, {%r35629, %r35628};
	shr.u64 	%rd18035, %rd18019, 6;
	xor.b64  	%rd18036, %rd18033, %rd18035;
	xor.b64  	%rd18037, %rd18036, %rd18034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35630,%dummy}, %rd17478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35631}, %rd17478;
	}
	shf.r.wrap.b32 	%r35632, %r35631, %r35630, 1;
	shf.r.wrap.b32 	%r35633, %r35630, %r35631, 1;
	mov.b64 	%rd18038, {%r35633, %r35632};
	shf.r.wrap.b32 	%r35634, %r35631, %r35630, 8;
	shf.r.wrap.b32 	%r35635, %r35630, %r35631, 8;
	mov.b64 	%rd18039, {%r35635, %r35634};
	shr.u64 	%rd18040, %rd17478, 7;
	xor.b64  	%rd18041, %rd18038, %rd18040;
	xor.b64  	%rd18042, %rd18041, %rd18039;
	add.s64 	%rd18043, %rd17954, %rd17477;
	add.s64 	%rd18044, %rd18043, %rd18037;
	add.s64 	%rd18045, %rd18044, %rd18042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35636,%dummy}, %rd18032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35637}, %rd18032;
	}
	shf.r.wrap.b32 	%r35638, %r35637, %r35636, 19;
	shf.r.wrap.b32 	%r35639, %r35636, %r35637, 19;
	mov.b64 	%rd18046, {%r35639, %r35638};
	shf.l.wrap.b32 	%r35640, %r35636, %r35637, 3;
	shf.l.wrap.b32 	%r35641, %r35637, %r35636, 3;
	mov.b64 	%rd18047, {%r35641, %r35640};
	shr.u64 	%rd18048, %rd18032, 6;
	xor.b64  	%rd18049, %rd18046, %rd18048;
	xor.b64  	%rd18050, %rd18049, %rd18047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35642,%dummy}, %rd17479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35643}, %rd17479;
	}
	shf.r.wrap.b32 	%r35644, %r35643, %r35642, 1;
	shf.r.wrap.b32 	%r35645, %r35642, %r35643, 1;
	mov.b64 	%rd18051, {%r35645, %r35644};
	shf.r.wrap.b32 	%r35646, %r35643, %r35642, 8;
	shf.r.wrap.b32 	%r35647, %r35642, %r35643, 8;
	mov.b64 	%rd18052, {%r35647, %r35646};
	shr.u64 	%rd18053, %rd17479, 7;
	xor.b64  	%rd18054, %rd18051, %rd18053;
	xor.b64  	%rd18055, %rd18054, %rd18052;
	add.s64 	%rd18056, %rd17967, %rd17478;
	add.s64 	%rd18057, %rd18056, %rd18050;
	add.s64 	%rd18058, %rd18057, %rd18055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35648,%dummy}, %rd18045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35649}, %rd18045;
	}
	shf.r.wrap.b32 	%r35650, %r35649, %r35648, 19;
	shf.r.wrap.b32 	%r35651, %r35648, %r35649, 19;
	mov.b64 	%rd18059, {%r35651, %r35650};
	shf.l.wrap.b32 	%r35652, %r35648, %r35649, 3;
	shf.l.wrap.b32 	%r35653, %r35649, %r35648, 3;
	mov.b64 	%rd18060, {%r35653, %r35652};
	shr.u64 	%rd18061, %rd18045, 6;
	xor.b64  	%rd18062, %rd18059, %rd18061;
	xor.b64  	%rd18063, %rd18062, %rd18060;
	shf.r.wrap.b32 	%r35654, %r35493, %r35492, 1;
	shf.r.wrap.b32 	%r35655, %r35492, %r35493, 1;
	mov.b64 	%rd18064, {%r35655, %r35654};
	shf.r.wrap.b32 	%r35656, %r35493, %r35492, 8;
	shf.r.wrap.b32 	%r35657, %r35492, %r35493, 8;
	mov.b64 	%rd18065, {%r35657, %r35656};
	shr.u64 	%rd18066, %rd17480, 7;
	xor.b64  	%rd18067, %rd18064, %rd18066;
	xor.b64  	%rd18068, %rd18067, %rd18065;
	add.s64 	%rd18069, %rd17980, %rd17479;
	add.s64 	%rd18070, %rd18069, %rd18063;
	add.s64 	%rd18071, %rd18070, %rd18068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35658,%dummy}, %rd18058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35659}, %rd18058;
	}
	shf.r.wrap.b32 	%r35660, %r35659, %r35658, 19;
	shf.r.wrap.b32 	%r35661, %r35658, %r35659, 19;
	mov.b64 	%rd18072, {%r35661, %r35660};
	shf.l.wrap.b32 	%r35662, %r35658, %r35659, 3;
	shf.l.wrap.b32 	%r35663, %r35659, %r35658, 3;
	mov.b64 	%rd18073, {%r35663, %r35662};
	shr.u64 	%rd18074, %rd18058, 6;
	xor.b64  	%rd18075, %rd18072, %rd18074;
	xor.b64  	%rd18076, %rd18075, %rd18073;
	shf.r.wrap.b32 	%r35664, %r35505, %r35504, 1;
	shf.r.wrap.b32 	%r35665, %r35504, %r35505, 1;
	mov.b64 	%rd18077, {%r35665, %r35664};
	shf.r.wrap.b32 	%r35666, %r35505, %r35504, 8;
	shf.r.wrap.b32 	%r35667, %r35504, %r35505, 8;
	mov.b64 	%rd18078, {%r35667, %r35666};
	shr.u64 	%rd18079, %rd17481, 7;
	xor.b64  	%rd18080, %rd18077, %rd18079;
	xor.b64  	%rd18081, %rd18080, %rd18078;
	add.s64 	%rd18082, %rd17993, %rd17480;
	add.s64 	%rd18083, %rd18082, %rd18076;
	add.s64 	%rd18084, %rd18083, %rd18081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35668,%dummy}, %rd18071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35669}, %rd18071;
	}
	shf.r.wrap.b32 	%r35670, %r35669, %r35668, 19;
	shf.r.wrap.b32 	%r35671, %r35668, %r35669, 19;
	mov.b64 	%rd18085, {%r35671, %r35670};
	shf.l.wrap.b32 	%r35672, %r35668, %r35669, 3;
	shf.l.wrap.b32 	%r35673, %r35669, %r35668, 3;
	mov.b64 	%rd18086, {%r35673, %r35672};
	shr.u64 	%rd18087, %rd18071, 6;
	xor.b64  	%rd18088, %rd18085, %rd18087;
	xor.b64  	%rd18089, %rd18088, %rd18086;
	shf.r.wrap.b32 	%r35674, %r35517, %r35516, 1;
	shf.r.wrap.b32 	%r35675, %r35516, %r35517, 1;
	mov.b64 	%rd18090, {%r35675, %r35674};
	shf.r.wrap.b32 	%r35676, %r35517, %r35516, 8;
	shf.r.wrap.b32 	%r35677, %r35516, %r35517, 8;
	mov.b64 	%rd18091, {%r35677, %r35676};
	shr.u64 	%rd18092, %rd17902, 7;
	xor.b64  	%rd18093, %rd18090, %rd18092;
	xor.b64  	%rd18094, %rd18093, %rd18091;
	add.s64 	%rd18095, %rd18006, %rd17481;
	add.s64 	%rd18096, %rd18095, %rd18089;
	add.s64 	%rd18097, %rd18096, %rd18094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35678,%dummy}, %rd17878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35679}, %rd17878;
	}
	shf.r.wrap.b32 	%r35680, %r35679, %r35678, 14;
	shf.r.wrap.b32 	%r35681, %r35678, %r35679, 14;
	mov.b64 	%rd18098, {%r35681, %r35680};
	shf.r.wrap.b32 	%r35682, %r35679, %r35678, 18;
	shf.r.wrap.b32 	%r35683, %r35678, %r35679, 18;
	mov.b64 	%rd18099, {%r35683, %r35682};
	xor.b64  	%rd18100, %rd18099, %rd18098;
	shf.l.wrap.b32 	%r35684, %r35678, %r35679, 23;
	shf.l.wrap.b32 	%r35685, %r35679, %r35678, 23;
	mov.b64 	%rd18101, {%r35685, %r35684};
	xor.b64  	%rd18102, %rd18100, %rd18101;
	xor.b64  	%rd18103, %rd17853, %rd17828;
	and.b64  	%rd18104, %rd17878, %rd18103;
	xor.b64  	%rd18105, %rd18104, %rd17828;
	add.s64 	%rd18106, %rd18105, %rd17803;
	add.s64 	%rd18107, %rd18106, %rd17902;
	ld.const.u64 	%rd18108, [k_sha512+128];
	add.s64 	%rd18109, %rd18107, %rd18108;
	add.s64 	%rd18110, %rd18109, %rd18102;
	add.s64 	%rd18111, %rd18110, %rd17814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35686,%dummy}, %rd17889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35687}, %rd17889;
	}
	shf.r.wrap.b32 	%r35688, %r35687, %r35686, 28;
	shf.r.wrap.b32 	%r35689, %r35686, %r35687, 28;
	mov.b64 	%rd18112, {%r35689, %r35688};
	shf.l.wrap.b32 	%r35690, %r35686, %r35687, 30;
	shf.l.wrap.b32 	%r35691, %r35687, %r35686, 30;
	mov.b64 	%rd18113, {%r35691, %r35690};
	xor.b64  	%rd18114, %rd18113, %rd18112;
	shf.l.wrap.b32 	%r35692, %r35686, %r35687, 25;
	shf.l.wrap.b32 	%r35693, %r35687, %r35686, 25;
	mov.b64 	%rd18115, {%r35693, %r35692};
	xor.b64  	%rd18116, %rd18114, %rd18115;
	and.b64  	%rd18117, %rd17889, %rd17864;
	xor.b64  	%rd18118, %rd17889, %rd17864;
	and.b64  	%rd18119, %rd18118, %rd17839;
	or.b64  	%rd18120, %rd18119, %rd18117;
	add.s64 	%rd18121, %rd18110, %rd18120;
	add.s64 	%rd18122, %rd18121, %rd18116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35694,%dummy}, %rd18111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35695}, %rd18111;
	}
	shf.r.wrap.b32 	%r35696, %r35695, %r35694, 14;
	shf.r.wrap.b32 	%r35697, %r35694, %r35695, 14;
	mov.b64 	%rd18123, {%r35697, %r35696};
	shf.r.wrap.b32 	%r35698, %r35695, %r35694, 18;
	shf.r.wrap.b32 	%r35699, %r35694, %r35695, 18;
	mov.b64 	%rd18124, {%r35699, %r35698};
	xor.b64  	%rd18125, %rd18124, %rd18123;
	shf.l.wrap.b32 	%r35700, %r35694, %r35695, 23;
	shf.l.wrap.b32 	%r35701, %r35695, %r35694, 23;
	mov.b64 	%rd18126, {%r35701, %r35700};
	xor.b64  	%rd18127, %rd18125, %rd18126;
	xor.b64  	%rd18128, %rd17878, %rd17853;
	and.b64  	%rd18129, %rd18111, %rd18128;
	xor.b64  	%rd18130, %rd18129, %rd17853;
	add.s64 	%rd18131, %rd17915, %rd17828;
	ld.const.u64 	%rd18132, [k_sha512+136];
	add.s64 	%rd18133, %rd18131, %rd18132;
	add.s64 	%rd18134, %rd18133, %rd18130;
	add.s64 	%rd18135, %rd18134, %rd18127;
	add.s64 	%rd18136, %rd18135, %rd17839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35702,%dummy}, %rd18122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35703}, %rd18122;
	}
	shf.r.wrap.b32 	%r35704, %r35703, %r35702, 28;
	shf.r.wrap.b32 	%r35705, %r35702, %r35703, 28;
	mov.b64 	%rd18137, {%r35705, %r35704};
	shf.l.wrap.b32 	%r35706, %r35702, %r35703, 30;
	shf.l.wrap.b32 	%r35707, %r35703, %r35702, 30;
	mov.b64 	%rd18138, {%r35707, %r35706};
	xor.b64  	%rd18139, %rd18138, %rd18137;
	shf.l.wrap.b32 	%r35708, %r35702, %r35703, 25;
	shf.l.wrap.b32 	%r35709, %r35703, %r35702, 25;
	mov.b64 	%rd18140, {%r35709, %r35708};
	xor.b64  	%rd18141, %rd18139, %rd18140;
	and.b64  	%rd18142, %rd18122, %rd17889;
	xor.b64  	%rd18143, %rd18122, %rd17889;
	and.b64  	%rd18144, %rd18143, %rd17864;
	or.b64  	%rd18145, %rd18144, %rd18142;
	add.s64 	%rd18146, %rd18135, %rd18145;
	add.s64 	%rd18147, %rd18146, %rd18141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35710,%dummy}, %rd18136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35711}, %rd18136;
	}
	shf.r.wrap.b32 	%r35712, %r35711, %r35710, 14;
	shf.r.wrap.b32 	%r35713, %r35710, %r35711, 14;
	mov.b64 	%rd18148, {%r35713, %r35712};
	shf.r.wrap.b32 	%r35714, %r35711, %r35710, 18;
	shf.r.wrap.b32 	%r35715, %r35710, %r35711, 18;
	mov.b64 	%rd18149, {%r35715, %r35714};
	xor.b64  	%rd18150, %rd18149, %rd18148;
	shf.l.wrap.b32 	%r35716, %r35710, %r35711, 23;
	shf.l.wrap.b32 	%r35717, %r35711, %r35710, 23;
	mov.b64 	%rd18151, {%r35717, %r35716};
	xor.b64  	%rd18152, %rd18150, %rd18151;
	xor.b64  	%rd18153, %rd18111, %rd17878;
	and.b64  	%rd18154, %rd18136, %rd18153;
	xor.b64  	%rd18155, %rd18154, %rd17878;
	add.s64 	%rd18156, %rd17928, %rd17853;
	ld.const.u64 	%rd18157, [k_sha512+144];
	add.s64 	%rd18158, %rd18156, %rd18157;
	add.s64 	%rd18159, %rd18158, %rd18155;
	add.s64 	%rd18160, %rd18159, %rd18152;
	add.s64 	%rd18161, %rd18160, %rd17864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35718,%dummy}, %rd18147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35719}, %rd18147;
	}
	shf.r.wrap.b32 	%r35720, %r35719, %r35718, 28;
	shf.r.wrap.b32 	%r35721, %r35718, %r35719, 28;
	mov.b64 	%rd18162, {%r35721, %r35720};
	shf.l.wrap.b32 	%r35722, %r35718, %r35719, 30;
	shf.l.wrap.b32 	%r35723, %r35719, %r35718, 30;
	mov.b64 	%rd18163, {%r35723, %r35722};
	xor.b64  	%rd18164, %rd18163, %rd18162;
	shf.l.wrap.b32 	%r35724, %r35718, %r35719, 25;
	shf.l.wrap.b32 	%r35725, %r35719, %r35718, 25;
	mov.b64 	%rd18165, {%r35725, %r35724};
	xor.b64  	%rd18166, %rd18164, %rd18165;
	and.b64  	%rd18167, %rd18147, %rd18122;
	xor.b64  	%rd18168, %rd18147, %rd18122;
	and.b64  	%rd18169, %rd18168, %rd17889;
	or.b64  	%rd18170, %rd18169, %rd18167;
	add.s64 	%rd18171, %rd18160, %rd18170;
	add.s64 	%rd18172, %rd18171, %rd18166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35726,%dummy}, %rd18161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35727}, %rd18161;
	}
	shf.r.wrap.b32 	%r35728, %r35727, %r35726, 14;
	shf.r.wrap.b32 	%r35729, %r35726, %r35727, 14;
	mov.b64 	%rd18173, {%r35729, %r35728};
	shf.r.wrap.b32 	%r35730, %r35727, %r35726, 18;
	shf.r.wrap.b32 	%r35731, %r35726, %r35727, 18;
	mov.b64 	%rd18174, {%r35731, %r35730};
	xor.b64  	%rd18175, %rd18174, %rd18173;
	shf.l.wrap.b32 	%r35732, %r35726, %r35727, 23;
	shf.l.wrap.b32 	%r35733, %r35727, %r35726, 23;
	mov.b64 	%rd18176, {%r35733, %r35732};
	xor.b64  	%rd18177, %rd18175, %rd18176;
	xor.b64  	%rd18178, %rd18136, %rd18111;
	and.b64  	%rd18179, %rd18161, %rd18178;
	xor.b64  	%rd18180, %rd18179, %rd18111;
	add.s64 	%rd18181, %rd17941, %rd17878;
	ld.const.u64 	%rd18182, [k_sha512+152];
	add.s64 	%rd18183, %rd18181, %rd18182;
	add.s64 	%rd18184, %rd18183, %rd18180;
	add.s64 	%rd18185, %rd18184, %rd18177;
	add.s64 	%rd18186, %rd18185, %rd17889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35734,%dummy}, %rd18172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35735}, %rd18172;
	}
	shf.r.wrap.b32 	%r35736, %r35735, %r35734, 28;
	shf.r.wrap.b32 	%r35737, %r35734, %r35735, 28;
	mov.b64 	%rd18187, {%r35737, %r35736};
	shf.l.wrap.b32 	%r35738, %r35734, %r35735, 30;
	shf.l.wrap.b32 	%r35739, %r35735, %r35734, 30;
	mov.b64 	%rd18188, {%r35739, %r35738};
	xor.b64  	%rd18189, %rd18188, %rd18187;
	shf.l.wrap.b32 	%r35740, %r35734, %r35735, 25;
	shf.l.wrap.b32 	%r35741, %r35735, %r35734, 25;
	mov.b64 	%rd18190, {%r35741, %r35740};
	xor.b64  	%rd18191, %rd18189, %rd18190;
	and.b64  	%rd18192, %rd18172, %rd18147;
	xor.b64  	%rd18193, %rd18172, %rd18147;
	and.b64  	%rd18194, %rd18193, %rd18122;
	or.b64  	%rd18195, %rd18194, %rd18192;
	add.s64 	%rd18196, %rd18185, %rd18195;
	add.s64 	%rd18197, %rd18196, %rd18191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35742,%dummy}, %rd18186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35743}, %rd18186;
	}
	shf.r.wrap.b32 	%r35744, %r35743, %r35742, 14;
	shf.r.wrap.b32 	%r35745, %r35742, %r35743, 14;
	mov.b64 	%rd18198, {%r35745, %r35744};
	shf.r.wrap.b32 	%r35746, %r35743, %r35742, 18;
	shf.r.wrap.b32 	%r35747, %r35742, %r35743, 18;
	mov.b64 	%rd18199, {%r35747, %r35746};
	xor.b64  	%rd18200, %rd18199, %rd18198;
	shf.l.wrap.b32 	%r35748, %r35742, %r35743, 23;
	shf.l.wrap.b32 	%r35749, %r35743, %r35742, 23;
	mov.b64 	%rd18201, {%r35749, %r35748};
	xor.b64  	%rd18202, %rd18200, %rd18201;
	xor.b64  	%rd18203, %rd18161, %rd18136;
	and.b64  	%rd18204, %rd18186, %rd18203;
	xor.b64  	%rd18205, %rd18204, %rd18136;
	add.s64 	%rd18206, %rd18111, %rd17954;
	ld.const.u64 	%rd18207, [k_sha512+160];
	add.s64 	%rd18208, %rd18206, %rd18207;
	add.s64 	%rd18209, %rd18208, %rd18205;
	add.s64 	%rd18210, %rd18209, %rd18202;
	add.s64 	%rd18211, %rd18210, %rd18122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35750,%dummy}, %rd18197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35751}, %rd18197;
	}
	shf.r.wrap.b32 	%r35752, %r35751, %r35750, 28;
	shf.r.wrap.b32 	%r35753, %r35750, %r35751, 28;
	mov.b64 	%rd18212, {%r35753, %r35752};
	shf.l.wrap.b32 	%r35754, %r35750, %r35751, 30;
	shf.l.wrap.b32 	%r35755, %r35751, %r35750, 30;
	mov.b64 	%rd18213, {%r35755, %r35754};
	xor.b64  	%rd18214, %rd18213, %rd18212;
	shf.l.wrap.b32 	%r35756, %r35750, %r35751, 25;
	shf.l.wrap.b32 	%r35757, %r35751, %r35750, 25;
	mov.b64 	%rd18215, {%r35757, %r35756};
	xor.b64  	%rd18216, %rd18214, %rd18215;
	and.b64  	%rd18217, %rd18197, %rd18172;
	xor.b64  	%rd18218, %rd18197, %rd18172;
	and.b64  	%rd18219, %rd18218, %rd18147;
	or.b64  	%rd18220, %rd18219, %rd18217;
	add.s64 	%rd18221, %rd18210, %rd18220;
	add.s64 	%rd18222, %rd18221, %rd18216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35758,%dummy}, %rd18211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35759}, %rd18211;
	}
	shf.r.wrap.b32 	%r35760, %r35759, %r35758, 14;
	shf.r.wrap.b32 	%r35761, %r35758, %r35759, 14;
	mov.b64 	%rd18223, {%r35761, %r35760};
	shf.r.wrap.b32 	%r35762, %r35759, %r35758, 18;
	shf.r.wrap.b32 	%r35763, %r35758, %r35759, 18;
	mov.b64 	%rd18224, {%r35763, %r35762};
	xor.b64  	%rd18225, %rd18224, %rd18223;
	shf.l.wrap.b32 	%r35764, %r35758, %r35759, 23;
	shf.l.wrap.b32 	%r35765, %r35759, %r35758, 23;
	mov.b64 	%rd18226, {%r35765, %r35764};
	xor.b64  	%rd18227, %rd18225, %rd18226;
	xor.b64  	%rd18228, %rd18186, %rd18161;
	and.b64  	%rd18229, %rd18211, %rd18228;
	xor.b64  	%rd18230, %rd18229, %rd18161;
	add.s64 	%rd18231, %rd18136, %rd17967;
	ld.const.u64 	%rd18232, [k_sha512+168];
	add.s64 	%rd18233, %rd18231, %rd18232;
	add.s64 	%rd18234, %rd18233, %rd18230;
	add.s64 	%rd18235, %rd18234, %rd18227;
	add.s64 	%rd18236, %rd18235, %rd18147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35766,%dummy}, %rd18222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35767}, %rd18222;
	}
	shf.r.wrap.b32 	%r35768, %r35767, %r35766, 28;
	shf.r.wrap.b32 	%r35769, %r35766, %r35767, 28;
	mov.b64 	%rd18237, {%r35769, %r35768};
	shf.l.wrap.b32 	%r35770, %r35766, %r35767, 30;
	shf.l.wrap.b32 	%r35771, %r35767, %r35766, 30;
	mov.b64 	%rd18238, {%r35771, %r35770};
	xor.b64  	%rd18239, %rd18238, %rd18237;
	shf.l.wrap.b32 	%r35772, %r35766, %r35767, 25;
	shf.l.wrap.b32 	%r35773, %r35767, %r35766, 25;
	mov.b64 	%rd18240, {%r35773, %r35772};
	xor.b64  	%rd18241, %rd18239, %rd18240;
	and.b64  	%rd18242, %rd18222, %rd18197;
	xor.b64  	%rd18243, %rd18222, %rd18197;
	and.b64  	%rd18244, %rd18243, %rd18172;
	or.b64  	%rd18245, %rd18244, %rd18242;
	add.s64 	%rd18246, %rd18235, %rd18245;
	add.s64 	%rd18247, %rd18246, %rd18241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35774,%dummy}, %rd18236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35775}, %rd18236;
	}
	shf.r.wrap.b32 	%r35776, %r35775, %r35774, 14;
	shf.r.wrap.b32 	%r35777, %r35774, %r35775, 14;
	mov.b64 	%rd18248, {%r35777, %r35776};
	shf.r.wrap.b32 	%r35778, %r35775, %r35774, 18;
	shf.r.wrap.b32 	%r35779, %r35774, %r35775, 18;
	mov.b64 	%rd18249, {%r35779, %r35778};
	xor.b64  	%rd18250, %rd18249, %rd18248;
	shf.l.wrap.b32 	%r35780, %r35774, %r35775, 23;
	shf.l.wrap.b32 	%r35781, %r35775, %r35774, 23;
	mov.b64 	%rd18251, {%r35781, %r35780};
	xor.b64  	%rd18252, %rd18250, %rd18251;
	xor.b64  	%rd18253, %rd18211, %rd18186;
	and.b64  	%rd18254, %rd18236, %rd18253;
	xor.b64  	%rd18255, %rd18254, %rd18186;
	add.s64 	%rd18256, %rd18161, %rd17980;
	ld.const.u64 	%rd18257, [k_sha512+176];
	add.s64 	%rd18258, %rd18256, %rd18257;
	add.s64 	%rd18259, %rd18258, %rd18255;
	add.s64 	%rd18260, %rd18259, %rd18252;
	add.s64 	%rd18261, %rd18260, %rd18172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35782,%dummy}, %rd18247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35783}, %rd18247;
	}
	shf.r.wrap.b32 	%r35784, %r35783, %r35782, 28;
	shf.r.wrap.b32 	%r35785, %r35782, %r35783, 28;
	mov.b64 	%rd18262, {%r35785, %r35784};
	shf.l.wrap.b32 	%r35786, %r35782, %r35783, 30;
	shf.l.wrap.b32 	%r35787, %r35783, %r35782, 30;
	mov.b64 	%rd18263, {%r35787, %r35786};
	xor.b64  	%rd18264, %rd18263, %rd18262;
	shf.l.wrap.b32 	%r35788, %r35782, %r35783, 25;
	shf.l.wrap.b32 	%r35789, %r35783, %r35782, 25;
	mov.b64 	%rd18265, {%r35789, %r35788};
	xor.b64  	%rd18266, %rd18264, %rd18265;
	and.b64  	%rd18267, %rd18247, %rd18222;
	xor.b64  	%rd18268, %rd18247, %rd18222;
	and.b64  	%rd18269, %rd18268, %rd18197;
	or.b64  	%rd18270, %rd18269, %rd18267;
	add.s64 	%rd18271, %rd18260, %rd18270;
	add.s64 	%rd18272, %rd18271, %rd18266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35790,%dummy}, %rd18261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35791}, %rd18261;
	}
	shf.r.wrap.b32 	%r35792, %r35791, %r35790, 14;
	shf.r.wrap.b32 	%r35793, %r35790, %r35791, 14;
	mov.b64 	%rd18273, {%r35793, %r35792};
	shf.r.wrap.b32 	%r35794, %r35791, %r35790, 18;
	shf.r.wrap.b32 	%r35795, %r35790, %r35791, 18;
	mov.b64 	%rd18274, {%r35795, %r35794};
	xor.b64  	%rd18275, %rd18274, %rd18273;
	shf.l.wrap.b32 	%r35796, %r35790, %r35791, 23;
	shf.l.wrap.b32 	%r35797, %r35791, %r35790, 23;
	mov.b64 	%rd18276, {%r35797, %r35796};
	xor.b64  	%rd18277, %rd18275, %rd18276;
	xor.b64  	%rd18278, %rd18236, %rd18211;
	and.b64  	%rd18279, %rd18261, %rd18278;
	xor.b64  	%rd18280, %rd18279, %rd18211;
	add.s64 	%rd18281, %rd18186, %rd17993;
	ld.const.u64 	%rd18282, [k_sha512+184];
	add.s64 	%rd18283, %rd18281, %rd18282;
	add.s64 	%rd18284, %rd18283, %rd18280;
	add.s64 	%rd18285, %rd18284, %rd18277;
	add.s64 	%rd18286, %rd18285, %rd18197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35798,%dummy}, %rd18272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35799}, %rd18272;
	}
	shf.r.wrap.b32 	%r35800, %r35799, %r35798, 28;
	shf.r.wrap.b32 	%r35801, %r35798, %r35799, 28;
	mov.b64 	%rd18287, {%r35801, %r35800};
	shf.l.wrap.b32 	%r35802, %r35798, %r35799, 30;
	shf.l.wrap.b32 	%r35803, %r35799, %r35798, 30;
	mov.b64 	%rd18288, {%r35803, %r35802};
	xor.b64  	%rd18289, %rd18288, %rd18287;
	shf.l.wrap.b32 	%r35804, %r35798, %r35799, 25;
	shf.l.wrap.b32 	%r35805, %r35799, %r35798, 25;
	mov.b64 	%rd18290, {%r35805, %r35804};
	xor.b64  	%rd18291, %rd18289, %rd18290;
	and.b64  	%rd18292, %rd18272, %rd18247;
	xor.b64  	%rd18293, %rd18272, %rd18247;
	and.b64  	%rd18294, %rd18293, %rd18222;
	or.b64  	%rd18295, %rd18294, %rd18292;
	add.s64 	%rd18296, %rd18285, %rd18295;
	add.s64 	%rd18297, %rd18296, %rd18291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35806,%dummy}, %rd18286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35807}, %rd18286;
	}
	shf.r.wrap.b32 	%r35808, %r35807, %r35806, 14;
	shf.r.wrap.b32 	%r35809, %r35806, %r35807, 14;
	mov.b64 	%rd18298, {%r35809, %r35808};
	shf.r.wrap.b32 	%r35810, %r35807, %r35806, 18;
	shf.r.wrap.b32 	%r35811, %r35806, %r35807, 18;
	mov.b64 	%rd18299, {%r35811, %r35810};
	xor.b64  	%rd18300, %rd18299, %rd18298;
	shf.l.wrap.b32 	%r35812, %r35806, %r35807, 23;
	shf.l.wrap.b32 	%r35813, %r35807, %r35806, 23;
	mov.b64 	%rd18301, {%r35813, %r35812};
	xor.b64  	%rd18302, %rd18300, %rd18301;
	xor.b64  	%rd18303, %rd18261, %rd18236;
	and.b64  	%rd18304, %rd18286, %rd18303;
	xor.b64  	%rd18305, %rd18304, %rd18236;
	add.s64 	%rd18306, %rd18211, %rd18006;
	ld.const.u64 	%rd18307, [k_sha512+192];
	add.s64 	%rd18308, %rd18306, %rd18307;
	add.s64 	%rd18309, %rd18308, %rd18305;
	add.s64 	%rd18310, %rd18309, %rd18302;
	add.s64 	%rd18311, %rd18310, %rd18222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35814,%dummy}, %rd18297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35815}, %rd18297;
	}
	shf.r.wrap.b32 	%r35816, %r35815, %r35814, 28;
	shf.r.wrap.b32 	%r35817, %r35814, %r35815, 28;
	mov.b64 	%rd18312, {%r35817, %r35816};
	shf.l.wrap.b32 	%r35818, %r35814, %r35815, 30;
	shf.l.wrap.b32 	%r35819, %r35815, %r35814, 30;
	mov.b64 	%rd18313, {%r35819, %r35818};
	xor.b64  	%rd18314, %rd18313, %rd18312;
	shf.l.wrap.b32 	%r35820, %r35814, %r35815, 25;
	shf.l.wrap.b32 	%r35821, %r35815, %r35814, 25;
	mov.b64 	%rd18315, {%r35821, %r35820};
	xor.b64  	%rd18316, %rd18314, %rd18315;
	and.b64  	%rd18317, %rd18297, %rd18272;
	xor.b64  	%rd18318, %rd18297, %rd18272;
	and.b64  	%rd18319, %rd18318, %rd18247;
	or.b64  	%rd18320, %rd18319, %rd18317;
	add.s64 	%rd18321, %rd18310, %rd18320;
	add.s64 	%rd18322, %rd18321, %rd18316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35822,%dummy}, %rd18311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35823}, %rd18311;
	}
	shf.r.wrap.b32 	%r35824, %r35823, %r35822, 14;
	shf.r.wrap.b32 	%r35825, %r35822, %r35823, 14;
	mov.b64 	%rd18323, {%r35825, %r35824};
	shf.r.wrap.b32 	%r35826, %r35823, %r35822, 18;
	shf.r.wrap.b32 	%r35827, %r35822, %r35823, 18;
	mov.b64 	%rd18324, {%r35827, %r35826};
	xor.b64  	%rd18325, %rd18324, %rd18323;
	shf.l.wrap.b32 	%r35828, %r35822, %r35823, 23;
	shf.l.wrap.b32 	%r35829, %r35823, %r35822, 23;
	mov.b64 	%rd18326, {%r35829, %r35828};
	xor.b64  	%rd18327, %rd18325, %rd18326;
	xor.b64  	%rd18328, %rd18286, %rd18261;
	and.b64  	%rd18329, %rd18311, %rd18328;
	xor.b64  	%rd18330, %rd18329, %rd18261;
	add.s64 	%rd18331, %rd18236, %rd18019;
	ld.const.u64 	%rd18332, [k_sha512+200];
	add.s64 	%rd18333, %rd18331, %rd18332;
	add.s64 	%rd18334, %rd18333, %rd18330;
	add.s64 	%rd18335, %rd18334, %rd18327;
	add.s64 	%rd18336, %rd18335, %rd18247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35830,%dummy}, %rd18322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35831}, %rd18322;
	}
	shf.r.wrap.b32 	%r35832, %r35831, %r35830, 28;
	shf.r.wrap.b32 	%r35833, %r35830, %r35831, 28;
	mov.b64 	%rd18337, {%r35833, %r35832};
	shf.l.wrap.b32 	%r35834, %r35830, %r35831, 30;
	shf.l.wrap.b32 	%r35835, %r35831, %r35830, 30;
	mov.b64 	%rd18338, {%r35835, %r35834};
	xor.b64  	%rd18339, %rd18338, %rd18337;
	shf.l.wrap.b32 	%r35836, %r35830, %r35831, 25;
	shf.l.wrap.b32 	%r35837, %r35831, %r35830, 25;
	mov.b64 	%rd18340, {%r35837, %r35836};
	xor.b64  	%rd18341, %rd18339, %rd18340;
	and.b64  	%rd18342, %rd18322, %rd18297;
	xor.b64  	%rd18343, %rd18322, %rd18297;
	and.b64  	%rd18344, %rd18343, %rd18272;
	or.b64  	%rd18345, %rd18344, %rd18342;
	add.s64 	%rd18346, %rd18335, %rd18345;
	add.s64 	%rd18347, %rd18346, %rd18341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35838,%dummy}, %rd18336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35839}, %rd18336;
	}
	shf.r.wrap.b32 	%r35840, %r35839, %r35838, 14;
	shf.r.wrap.b32 	%r35841, %r35838, %r35839, 14;
	mov.b64 	%rd18348, {%r35841, %r35840};
	shf.r.wrap.b32 	%r35842, %r35839, %r35838, 18;
	shf.r.wrap.b32 	%r35843, %r35838, %r35839, 18;
	mov.b64 	%rd18349, {%r35843, %r35842};
	xor.b64  	%rd18350, %rd18349, %rd18348;
	shf.l.wrap.b32 	%r35844, %r35838, %r35839, 23;
	shf.l.wrap.b32 	%r35845, %r35839, %r35838, 23;
	mov.b64 	%rd18351, {%r35845, %r35844};
	xor.b64  	%rd18352, %rd18350, %rd18351;
	xor.b64  	%rd18353, %rd18311, %rd18286;
	and.b64  	%rd18354, %rd18336, %rd18353;
	xor.b64  	%rd18355, %rd18354, %rd18286;
	add.s64 	%rd18356, %rd18261, %rd18032;
	ld.const.u64 	%rd18357, [k_sha512+208];
	add.s64 	%rd18358, %rd18356, %rd18357;
	add.s64 	%rd18359, %rd18358, %rd18355;
	add.s64 	%rd18360, %rd18359, %rd18352;
	add.s64 	%rd18361, %rd18360, %rd18272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35846,%dummy}, %rd18347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35847}, %rd18347;
	}
	shf.r.wrap.b32 	%r35848, %r35847, %r35846, 28;
	shf.r.wrap.b32 	%r35849, %r35846, %r35847, 28;
	mov.b64 	%rd18362, {%r35849, %r35848};
	shf.l.wrap.b32 	%r35850, %r35846, %r35847, 30;
	shf.l.wrap.b32 	%r35851, %r35847, %r35846, 30;
	mov.b64 	%rd18363, {%r35851, %r35850};
	xor.b64  	%rd18364, %rd18363, %rd18362;
	shf.l.wrap.b32 	%r35852, %r35846, %r35847, 25;
	shf.l.wrap.b32 	%r35853, %r35847, %r35846, 25;
	mov.b64 	%rd18365, {%r35853, %r35852};
	xor.b64  	%rd18366, %rd18364, %rd18365;
	and.b64  	%rd18367, %rd18347, %rd18322;
	xor.b64  	%rd18368, %rd18347, %rd18322;
	and.b64  	%rd18369, %rd18368, %rd18297;
	or.b64  	%rd18370, %rd18369, %rd18367;
	add.s64 	%rd18371, %rd18360, %rd18370;
	add.s64 	%rd18372, %rd18371, %rd18366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35854,%dummy}, %rd18361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35855}, %rd18361;
	}
	shf.r.wrap.b32 	%r35856, %r35855, %r35854, 14;
	shf.r.wrap.b32 	%r35857, %r35854, %r35855, 14;
	mov.b64 	%rd18373, {%r35857, %r35856};
	shf.r.wrap.b32 	%r35858, %r35855, %r35854, 18;
	shf.r.wrap.b32 	%r35859, %r35854, %r35855, 18;
	mov.b64 	%rd18374, {%r35859, %r35858};
	xor.b64  	%rd18375, %rd18374, %rd18373;
	shf.l.wrap.b32 	%r35860, %r35854, %r35855, 23;
	shf.l.wrap.b32 	%r35861, %r35855, %r35854, 23;
	mov.b64 	%rd18376, {%r35861, %r35860};
	xor.b64  	%rd18377, %rd18375, %rd18376;
	xor.b64  	%rd18378, %rd18336, %rd18311;
	and.b64  	%rd18379, %rd18361, %rd18378;
	xor.b64  	%rd18380, %rd18379, %rd18311;
	add.s64 	%rd18381, %rd18286, %rd18045;
	ld.const.u64 	%rd18382, [k_sha512+216];
	add.s64 	%rd18383, %rd18381, %rd18382;
	add.s64 	%rd18384, %rd18383, %rd18380;
	add.s64 	%rd18385, %rd18384, %rd18377;
	add.s64 	%rd18386, %rd18385, %rd18297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35862,%dummy}, %rd18372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35863}, %rd18372;
	}
	shf.r.wrap.b32 	%r35864, %r35863, %r35862, 28;
	shf.r.wrap.b32 	%r35865, %r35862, %r35863, 28;
	mov.b64 	%rd18387, {%r35865, %r35864};
	shf.l.wrap.b32 	%r35866, %r35862, %r35863, 30;
	shf.l.wrap.b32 	%r35867, %r35863, %r35862, 30;
	mov.b64 	%rd18388, {%r35867, %r35866};
	xor.b64  	%rd18389, %rd18388, %rd18387;
	shf.l.wrap.b32 	%r35868, %r35862, %r35863, 25;
	shf.l.wrap.b32 	%r35869, %r35863, %r35862, 25;
	mov.b64 	%rd18390, {%r35869, %r35868};
	xor.b64  	%rd18391, %rd18389, %rd18390;
	and.b64  	%rd18392, %rd18372, %rd18347;
	xor.b64  	%rd18393, %rd18372, %rd18347;
	and.b64  	%rd18394, %rd18393, %rd18322;
	or.b64  	%rd18395, %rd18394, %rd18392;
	add.s64 	%rd18396, %rd18385, %rd18395;
	add.s64 	%rd18397, %rd18396, %rd18391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35870,%dummy}, %rd18386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35871}, %rd18386;
	}
	shf.r.wrap.b32 	%r35872, %r35871, %r35870, 14;
	shf.r.wrap.b32 	%r35873, %r35870, %r35871, 14;
	mov.b64 	%rd18398, {%r35873, %r35872};
	shf.r.wrap.b32 	%r35874, %r35871, %r35870, 18;
	shf.r.wrap.b32 	%r35875, %r35870, %r35871, 18;
	mov.b64 	%rd18399, {%r35875, %r35874};
	xor.b64  	%rd18400, %rd18399, %rd18398;
	shf.l.wrap.b32 	%r35876, %r35870, %r35871, 23;
	shf.l.wrap.b32 	%r35877, %r35871, %r35870, 23;
	mov.b64 	%rd18401, {%r35877, %r35876};
	xor.b64  	%rd18402, %rd18400, %rd18401;
	xor.b64  	%rd18403, %rd18361, %rd18336;
	and.b64  	%rd18404, %rd18386, %rd18403;
	xor.b64  	%rd18405, %rd18404, %rd18336;
	add.s64 	%rd18406, %rd18311, %rd18058;
	ld.const.u64 	%rd18407, [k_sha512+224];
	add.s64 	%rd18408, %rd18406, %rd18407;
	add.s64 	%rd18409, %rd18408, %rd18405;
	add.s64 	%rd18410, %rd18409, %rd18402;
	add.s64 	%rd18411, %rd18410, %rd18322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35878,%dummy}, %rd18397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35879}, %rd18397;
	}
	shf.r.wrap.b32 	%r35880, %r35879, %r35878, 28;
	shf.r.wrap.b32 	%r35881, %r35878, %r35879, 28;
	mov.b64 	%rd18412, {%r35881, %r35880};
	shf.l.wrap.b32 	%r35882, %r35878, %r35879, 30;
	shf.l.wrap.b32 	%r35883, %r35879, %r35878, 30;
	mov.b64 	%rd18413, {%r35883, %r35882};
	xor.b64  	%rd18414, %rd18413, %rd18412;
	shf.l.wrap.b32 	%r35884, %r35878, %r35879, 25;
	shf.l.wrap.b32 	%r35885, %r35879, %r35878, 25;
	mov.b64 	%rd18415, {%r35885, %r35884};
	xor.b64  	%rd18416, %rd18414, %rd18415;
	and.b64  	%rd18417, %rd18397, %rd18372;
	xor.b64  	%rd18418, %rd18397, %rd18372;
	and.b64  	%rd18419, %rd18418, %rd18347;
	or.b64  	%rd18420, %rd18419, %rd18417;
	add.s64 	%rd18421, %rd18410, %rd18420;
	add.s64 	%rd18422, %rd18421, %rd18416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35886,%dummy}, %rd18411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35887}, %rd18411;
	}
	shf.r.wrap.b32 	%r35888, %r35887, %r35886, 14;
	shf.r.wrap.b32 	%r35889, %r35886, %r35887, 14;
	mov.b64 	%rd18423, {%r35889, %r35888};
	shf.r.wrap.b32 	%r35890, %r35887, %r35886, 18;
	shf.r.wrap.b32 	%r35891, %r35886, %r35887, 18;
	mov.b64 	%rd18424, {%r35891, %r35890};
	xor.b64  	%rd18425, %rd18424, %rd18423;
	shf.l.wrap.b32 	%r35892, %r35886, %r35887, 23;
	shf.l.wrap.b32 	%r35893, %r35887, %r35886, 23;
	mov.b64 	%rd18426, {%r35893, %r35892};
	xor.b64  	%rd18427, %rd18425, %rd18426;
	xor.b64  	%rd18428, %rd18386, %rd18361;
	and.b64  	%rd18429, %rd18411, %rd18428;
	xor.b64  	%rd18430, %rd18429, %rd18361;
	add.s64 	%rd18431, %rd18336, %rd18071;
	ld.const.u64 	%rd18432, [k_sha512+232];
	add.s64 	%rd18433, %rd18431, %rd18432;
	add.s64 	%rd18434, %rd18433, %rd18430;
	add.s64 	%rd18435, %rd18434, %rd18427;
	add.s64 	%rd18436, %rd18435, %rd18347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35894,%dummy}, %rd18422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35895}, %rd18422;
	}
	shf.r.wrap.b32 	%r35896, %r35895, %r35894, 28;
	shf.r.wrap.b32 	%r35897, %r35894, %r35895, 28;
	mov.b64 	%rd18437, {%r35897, %r35896};
	shf.l.wrap.b32 	%r35898, %r35894, %r35895, 30;
	shf.l.wrap.b32 	%r35899, %r35895, %r35894, 30;
	mov.b64 	%rd18438, {%r35899, %r35898};
	xor.b64  	%rd18439, %rd18438, %rd18437;
	shf.l.wrap.b32 	%r35900, %r35894, %r35895, 25;
	shf.l.wrap.b32 	%r35901, %r35895, %r35894, 25;
	mov.b64 	%rd18440, {%r35901, %r35900};
	xor.b64  	%rd18441, %rd18439, %rd18440;
	and.b64  	%rd18442, %rd18422, %rd18397;
	xor.b64  	%rd18443, %rd18422, %rd18397;
	and.b64  	%rd18444, %rd18443, %rd18372;
	or.b64  	%rd18445, %rd18444, %rd18442;
	add.s64 	%rd18446, %rd18435, %rd18445;
	add.s64 	%rd18447, %rd18446, %rd18441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35902,%dummy}, %rd18436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35903}, %rd18436;
	}
	shf.r.wrap.b32 	%r35904, %r35903, %r35902, 14;
	shf.r.wrap.b32 	%r35905, %r35902, %r35903, 14;
	mov.b64 	%rd18448, {%r35905, %r35904};
	shf.r.wrap.b32 	%r35906, %r35903, %r35902, 18;
	shf.r.wrap.b32 	%r35907, %r35902, %r35903, 18;
	mov.b64 	%rd18449, {%r35907, %r35906};
	xor.b64  	%rd18450, %rd18449, %rd18448;
	shf.l.wrap.b32 	%r35908, %r35902, %r35903, 23;
	shf.l.wrap.b32 	%r35909, %r35903, %r35902, 23;
	mov.b64 	%rd18451, {%r35909, %r35908};
	xor.b64  	%rd18452, %rd18450, %rd18451;
	xor.b64  	%rd18453, %rd18411, %rd18386;
	and.b64  	%rd18454, %rd18436, %rd18453;
	xor.b64  	%rd18455, %rd18454, %rd18386;
	add.s64 	%rd18456, %rd18361, %rd18084;
	ld.const.u64 	%rd18457, [k_sha512+240];
	add.s64 	%rd18458, %rd18456, %rd18457;
	add.s64 	%rd18459, %rd18458, %rd18455;
	add.s64 	%rd18460, %rd18459, %rd18452;
	add.s64 	%rd18461, %rd18460, %rd18372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35910,%dummy}, %rd18447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35911}, %rd18447;
	}
	shf.r.wrap.b32 	%r35912, %r35911, %r35910, 28;
	shf.r.wrap.b32 	%r35913, %r35910, %r35911, 28;
	mov.b64 	%rd18462, {%r35913, %r35912};
	shf.l.wrap.b32 	%r35914, %r35910, %r35911, 30;
	shf.l.wrap.b32 	%r35915, %r35911, %r35910, 30;
	mov.b64 	%rd18463, {%r35915, %r35914};
	xor.b64  	%rd18464, %rd18463, %rd18462;
	shf.l.wrap.b32 	%r35916, %r35910, %r35911, 25;
	shf.l.wrap.b32 	%r35917, %r35911, %r35910, 25;
	mov.b64 	%rd18465, {%r35917, %r35916};
	xor.b64  	%rd18466, %rd18464, %rd18465;
	and.b64  	%rd18467, %rd18447, %rd18422;
	xor.b64  	%rd18468, %rd18447, %rd18422;
	and.b64  	%rd18469, %rd18468, %rd18397;
	or.b64  	%rd18470, %rd18469, %rd18467;
	add.s64 	%rd18471, %rd18460, %rd18470;
	add.s64 	%rd18472, %rd18471, %rd18466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35918,%dummy}, %rd18461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35919}, %rd18461;
	}
	shf.r.wrap.b32 	%r35920, %r35919, %r35918, 14;
	shf.r.wrap.b32 	%r35921, %r35918, %r35919, 14;
	mov.b64 	%rd18473, {%r35921, %r35920};
	shf.r.wrap.b32 	%r35922, %r35919, %r35918, 18;
	shf.r.wrap.b32 	%r35923, %r35918, %r35919, 18;
	mov.b64 	%rd18474, {%r35923, %r35922};
	xor.b64  	%rd18475, %rd18474, %rd18473;
	shf.l.wrap.b32 	%r35924, %r35918, %r35919, 23;
	shf.l.wrap.b32 	%r35925, %r35919, %r35918, 23;
	mov.b64 	%rd18476, {%r35925, %r35924};
	xor.b64  	%rd18477, %rd18475, %rd18476;
	xor.b64  	%rd18478, %rd18436, %rd18411;
	and.b64  	%rd18479, %rd18461, %rd18478;
	xor.b64  	%rd18480, %rd18479, %rd18411;
	add.s64 	%rd18481, %rd18386, %rd18097;
	ld.const.u64 	%rd18482, [k_sha512+248];
	add.s64 	%rd18483, %rd18481, %rd18482;
	add.s64 	%rd18484, %rd18483, %rd18480;
	add.s64 	%rd18485, %rd18484, %rd18477;
	add.s64 	%rd18486, %rd18485, %rd18397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35926,%dummy}, %rd18472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35927}, %rd18472;
	}
	shf.r.wrap.b32 	%r35928, %r35927, %r35926, 28;
	shf.r.wrap.b32 	%r35929, %r35926, %r35927, 28;
	mov.b64 	%rd18487, {%r35929, %r35928};
	shf.l.wrap.b32 	%r35930, %r35926, %r35927, 30;
	shf.l.wrap.b32 	%r35931, %r35927, %r35926, 30;
	mov.b64 	%rd18488, {%r35931, %r35930};
	xor.b64  	%rd18489, %rd18488, %rd18487;
	shf.l.wrap.b32 	%r35932, %r35926, %r35927, 25;
	shf.l.wrap.b32 	%r35933, %r35927, %r35926, 25;
	mov.b64 	%rd18490, {%r35933, %r35932};
	xor.b64  	%rd18491, %rd18489, %rd18490;
	and.b64  	%rd18492, %rd18472, %rd18447;
	xor.b64  	%rd18493, %rd18472, %rd18447;
	and.b64  	%rd18494, %rd18493, %rd18422;
	or.b64  	%rd18495, %rd18494, %rd18492;
	add.s64 	%rd18496, %rd18485, %rd18495;
	add.s64 	%rd18497, %rd18496, %rd18491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35934,%dummy}, %rd18084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35935}, %rd18084;
	}
	shf.r.wrap.b32 	%r35936, %r35935, %r35934, 19;
	shf.r.wrap.b32 	%r35937, %r35934, %r35935, 19;
	mov.b64 	%rd18498, {%r35937, %r35936};
	shf.l.wrap.b32 	%r35938, %r35934, %r35935, 3;
	shf.l.wrap.b32 	%r35939, %r35935, %r35934, 3;
	mov.b64 	%rd18499, {%r35939, %r35938};
	shr.u64 	%rd18500, %rd18084, 6;
	xor.b64  	%rd18501, %rd18498, %rd18500;
	xor.b64  	%rd18502, %rd18501, %rd18499;
	shf.r.wrap.b32 	%r35940, %r35529, %r35528, 1;
	shf.r.wrap.b32 	%r35941, %r35528, %r35529, 1;
	mov.b64 	%rd18503, {%r35941, %r35940};
	shf.r.wrap.b32 	%r35942, %r35529, %r35528, 8;
	shf.r.wrap.b32 	%r35943, %r35528, %r35529, 8;
	mov.b64 	%rd18504, {%r35943, %r35942};
	shr.u64 	%rd18505, %rd17915, 7;
	xor.b64  	%rd18506, %rd18503, %rd18505;
	xor.b64  	%rd18507, %rd18506, %rd18504;
	add.s64 	%rd18508, %rd18019, %rd17902;
	add.s64 	%rd18509, %rd18508, %rd18502;
	add.s64 	%rd18510, %rd18509, %rd18507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35944,%dummy}, %rd18097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35945}, %rd18097;
	}
	shf.r.wrap.b32 	%r35946, %r35945, %r35944, 19;
	shf.r.wrap.b32 	%r35947, %r35944, %r35945, 19;
	mov.b64 	%rd18511, {%r35947, %r35946};
	shf.l.wrap.b32 	%r35948, %r35944, %r35945, 3;
	shf.l.wrap.b32 	%r35949, %r35945, %r35944, 3;
	mov.b64 	%rd18512, {%r35949, %r35948};
	shr.u64 	%rd18513, %rd18097, 6;
	xor.b64  	%rd18514, %rd18511, %rd18513;
	xor.b64  	%rd18515, %rd18514, %rd18512;
	shf.r.wrap.b32 	%r35950, %r35541, %r35540, 1;
	shf.r.wrap.b32 	%r35951, %r35540, %r35541, 1;
	mov.b64 	%rd18516, {%r35951, %r35950};
	shf.r.wrap.b32 	%r35952, %r35541, %r35540, 8;
	shf.r.wrap.b32 	%r35953, %r35540, %r35541, 8;
	mov.b64 	%rd18517, {%r35953, %r35952};
	shr.u64 	%rd18518, %rd17928, 7;
	xor.b64  	%rd18519, %rd18516, %rd18518;
	xor.b64  	%rd18520, %rd18519, %rd18517;
	add.s64 	%rd18521, %rd18032, %rd17915;
	add.s64 	%rd18522, %rd18521, %rd18515;
	add.s64 	%rd18523, %rd18522, %rd18520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35954,%dummy}, %rd18510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35955}, %rd18510;
	}
	shf.r.wrap.b32 	%r35956, %r35955, %r35954, 19;
	shf.r.wrap.b32 	%r35957, %r35954, %r35955, 19;
	mov.b64 	%rd18524, {%r35957, %r35956};
	shf.l.wrap.b32 	%r35958, %r35954, %r35955, 3;
	shf.l.wrap.b32 	%r35959, %r35955, %r35954, 3;
	mov.b64 	%rd18525, {%r35959, %r35958};
	shr.u64 	%rd18526, %rd18510, 6;
	xor.b64  	%rd18527, %rd18524, %rd18526;
	xor.b64  	%rd18528, %rd18527, %rd18525;
	shf.r.wrap.b32 	%r35960, %r35553, %r35552, 1;
	shf.r.wrap.b32 	%r35961, %r35552, %r35553, 1;
	mov.b64 	%rd18529, {%r35961, %r35960};
	shf.r.wrap.b32 	%r35962, %r35553, %r35552, 8;
	shf.r.wrap.b32 	%r35963, %r35552, %r35553, 8;
	mov.b64 	%rd18530, {%r35963, %r35962};
	shr.u64 	%rd18531, %rd17941, 7;
	xor.b64  	%rd18532, %rd18529, %rd18531;
	xor.b64  	%rd18533, %rd18532, %rd18530;
	add.s64 	%rd18534, %rd18045, %rd17928;
	add.s64 	%rd18535, %rd18534, %rd18528;
	add.s64 	%rd18536, %rd18535, %rd18533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35964,%dummy}, %rd18523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35965}, %rd18523;
	}
	shf.r.wrap.b32 	%r35966, %r35965, %r35964, 19;
	shf.r.wrap.b32 	%r35967, %r35964, %r35965, 19;
	mov.b64 	%rd18537, {%r35967, %r35966};
	shf.l.wrap.b32 	%r35968, %r35964, %r35965, 3;
	shf.l.wrap.b32 	%r35969, %r35965, %r35964, 3;
	mov.b64 	%rd18538, {%r35969, %r35968};
	shr.u64 	%rd18539, %rd18523, 6;
	xor.b64  	%rd18540, %rd18537, %rd18539;
	xor.b64  	%rd18541, %rd18540, %rd18538;
	shf.r.wrap.b32 	%r35970, %r35565, %r35564, 1;
	shf.r.wrap.b32 	%r35971, %r35564, %r35565, 1;
	mov.b64 	%rd18542, {%r35971, %r35970};
	shf.r.wrap.b32 	%r35972, %r35565, %r35564, 8;
	shf.r.wrap.b32 	%r35973, %r35564, %r35565, 8;
	mov.b64 	%rd18543, {%r35973, %r35972};
	shr.u64 	%rd18544, %rd17954, 7;
	xor.b64  	%rd18545, %rd18542, %rd18544;
	xor.b64  	%rd18546, %rd18545, %rd18543;
	add.s64 	%rd18547, %rd18058, %rd17941;
	add.s64 	%rd18548, %rd18547, %rd18541;
	add.s64 	%rd18549, %rd18548, %rd18546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35974,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35975}, %rd18536;
	}
	shf.r.wrap.b32 	%r35976, %r35975, %r35974, 19;
	shf.r.wrap.b32 	%r35977, %r35974, %r35975, 19;
	mov.b64 	%rd18550, {%r35977, %r35976};
	shf.l.wrap.b32 	%r35978, %r35974, %r35975, 3;
	shf.l.wrap.b32 	%r35979, %r35975, %r35974, 3;
	mov.b64 	%rd18551, {%r35979, %r35978};
	shr.u64 	%rd18552, %rd18536, 6;
	xor.b64  	%rd18553, %rd18550, %rd18552;
	xor.b64  	%rd18554, %rd18553, %rd18551;
	shf.r.wrap.b32 	%r35980, %r35577, %r35576, 1;
	shf.r.wrap.b32 	%r35981, %r35576, %r35577, 1;
	mov.b64 	%rd18555, {%r35981, %r35980};
	shf.r.wrap.b32 	%r35982, %r35577, %r35576, 8;
	shf.r.wrap.b32 	%r35983, %r35576, %r35577, 8;
	mov.b64 	%rd18556, {%r35983, %r35982};
	shr.u64 	%rd18557, %rd17967, 7;
	xor.b64  	%rd18558, %rd18555, %rd18557;
	xor.b64  	%rd18559, %rd18558, %rd18556;
	add.s64 	%rd18560, %rd18071, %rd17954;
	add.s64 	%rd18561, %rd18560, %rd18554;
	add.s64 	%rd18562, %rd18561, %rd18559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35984,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35985}, %rd18549;
	}
	shf.r.wrap.b32 	%r35986, %r35985, %r35984, 19;
	shf.r.wrap.b32 	%r35987, %r35984, %r35985, 19;
	mov.b64 	%rd18563, {%r35987, %r35986};
	shf.l.wrap.b32 	%r35988, %r35984, %r35985, 3;
	shf.l.wrap.b32 	%r35989, %r35985, %r35984, 3;
	mov.b64 	%rd18564, {%r35989, %r35988};
	shr.u64 	%rd18565, %rd18549, 6;
	xor.b64  	%rd18566, %rd18563, %rd18565;
	xor.b64  	%rd18567, %rd18566, %rd18564;
	shf.r.wrap.b32 	%r35990, %r35589, %r35588, 1;
	shf.r.wrap.b32 	%r35991, %r35588, %r35589, 1;
	mov.b64 	%rd18568, {%r35991, %r35990};
	shf.r.wrap.b32 	%r35992, %r35589, %r35588, 8;
	shf.r.wrap.b32 	%r35993, %r35588, %r35589, 8;
	mov.b64 	%rd18569, {%r35993, %r35992};
	shr.u64 	%rd18570, %rd17980, 7;
	xor.b64  	%rd18571, %rd18568, %rd18570;
	xor.b64  	%rd18572, %rd18571, %rd18569;
	add.s64 	%rd18573, %rd18084, %rd17967;
	add.s64 	%rd18574, %rd18573, %rd18567;
	add.s64 	%rd18575, %rd18574, %rd18572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35994,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35995}, %rd18562;
	}
	shf.r.wrap.b32 	%r35996, %r35995, %r35994, 19;
	shf.r.wrap.b32 	%r35997, %r35994, %r35995, 19;
	mov.b64 	%rd18576, {%r35997, %r35996};
	shf.l.wrap.b32 	%r35998, %r35994, %r35995, 3;
	shf.l.wrap.b32 	%r35999, %r35995, %r35994, 3;
	mov.b64 	%rd18577, {%r35999, %r35998};
	shr.u64 	%rd18578, %rd18562, 6;
	xor.b64  	%rd18579, %rd18576, %rd18578;
	xor.b64  	%rd18580, %rd18579, %rd18577;
	shf.r.wrap.b32 	%r36000, %r35601, %r35600, 1;
	shf.r.wrap.b32 	%r36001, %r35600, %r35601, 1;
	mov.b64 	%rd18581, {%r36001, %r36000};
	shf.r.wrap.b32 	%r36002, %r35601, %r35600, 8;
	shf.r.wrap.b32 	%r36003, %r35600, %r35601, 8;
	mov.b64 	%rd18582, {%r36003, %r36002};
	shr.u64 	%rd18583, %rd17993, 7;
	xor.b64  	%rd18584, %rd18581, %rd18583;
	xor.b64  	%rd18585, %rd18584, %rd18582;
	add.s64 	%rd18586, %rd18097, %rd17980;
	add.s64 	%rd18587, %rd18586, %rd18580;
	add.s64 	%rd18588, %rd18587, %rd18585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36004,%dummy}, %rd18575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36005}, %rd18575;
	}
	shf.r.wrap.b32 	%r36006, %r36005, %r36004, 19;
	shf.r.wrap.b32 	%r36007, %r36004, %r36005, 19;
	mov.b64 	%rd18589, {%r36007, %r36006};
	shf.l.wrap.b32 	%r36008, %r36004, %r36005, 3;
	shf.l.wrap.b32 	%r36009, %r36005, %r36004, 3;
	mov.b64 	%rd18590, {%r36009, %r36008};
	shr.u64 	%rd18591, %rd18575, 6;
	xor.b64  	%rd18592, %rd18589, %rd18591;
	xor.b64  	%rd18593, %rd18592, %rd18590;
	shf.r.wrap.b32 	%r36010, %r35613, %r35612, 1;
	shf.r.wrap.b32 	%r36011, %r35612, %r35613, 1;
	mov.b64 	%rd18594, {%r36011, %r36010};
	shf.r.wrap.b32 	%r36012, %r35613, %r35612, 8;
	shf.r.wrap.b32 	%r36013, %r35612, %r35613, 8;
	mov.b64 	%rd18595, {%r36013, %r36012};
	shr.u64 	%rd18596, %rd18006, 7;
	xor.b64  	%rd18597, %rd18594, %rd18596;
	xor.b64  	%rd18598, %rd18597, %rd18595;
	add.s64 	%rd18599, %rd18510, %rd17993;
	add.s64 	%rd18600, %rd18599, %rd18593;
	add.s64 	%rd18601, %rd18600, %rd18598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36014,%dummy}, %rd18588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36015}, %rd18588;
	}
	shf.r.wrap.b32 	%r36016, %r36015, %r36014, 19;
	shf.r.wrap.b32 	%r36017, %r36014, %r36015, 19;
	mov.b64 	%rd18602, {%r36017, %r36016};
	shf.l.wrap.b32 	%r36018, %r36014, %r36015, 3;
	shf.l.wrap.b32 	%r36019, %r36015, %r36014, 3;
	mov.b64 	%rd18603, {%r36019, %r36018};
	shr.u64 	%rd18604, %rd18588, 6;
	xor.b64  	%rd18605, %rd18602, %rd18604;
	xor.b64  	%rd18606, %rd18605, %rd18603;
	shf.r.wrap.b32 	%r36020, %r35625, %r35624, 1;
	shf.r.wrap.b32 	%r36021, %r35624, %r35625, 1;
	mov.b64 	%rd18607, {%r36021, %r36020};
	shf.r.wrap.b32 	%r36022, %r35625, %r35624, 8;
	shf.r.wrap.b32 	%r36023, %r35624, %r35625, 8;
	mov.b64 	%rd18608, {%r36023, %r36022};
	shr.u64 	%rd18609, %rd18019, 7;
	xor.b64  	%rd18610, %rd18607, %rd18609;
	xor.b64  	%rd18611, %rd18610, %rd18608;
	add.s64 	%rd18612, %rd18523, %rd18006;
	add.s64 	%rd18613, %rd18612, %rd18606;
	add.s64 	%rd18614, %rd18613, %rd18611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36024,%dummy}, %rd18601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36025}, %rd18601;
	}
	shf.r.wrap.b32 	%r36026, %r36025, %r36024, 19;
	shf.r.wrap.b32 	%r36027, %r36024, %r36025, 19;
	mov.b64 	%rd18615, {%r36027, %r36026};
	shf.l.wrap.b32 	%r36028, %r36024, %r36025, 3;
	shf.l.wrap.b32 	%r36029, %r36025, %r36024, 3;
	mov.b64 	%rd18616, {%r36029, %r36028};
	shr.u64 	%rd18617, %rd18601, 6;
	xor.b64  	%rd18618, %rd18615, %rd18617;
	xor.b64  	%rd18619, %rd18618, %rd18616;
	shf.r.wrap.b32 	%r36030, %r35637, %r35636, 1;
	shf.r.wrap.b32 	%r36031, %r35636, %r35637, 1;
	mov.b64 	%rd18620, {%r36031, %r36030};
	shf.r.wrap.b32 	%r36032, %r35637, %r35636, 8;
	shf.r.wrap.b32 	%r36033, %r35636, %r35637, 8;
	mov.b64 	%rd18621, {%r36033, %r36032};
	shr.u64 	%rd18622, %rd18032, 7;
	xor.b64  	%rd18623, %rd18620, %rd18622;
	xor.b64  	%rd18624, %rd18623, %rd18621;
	add.s64 	%rd18625, %rd18536, %rd18019;
	add.s64 	%rd18626, %rd18625, %rd18619;
	add.s64 	%rd18627, %rd18626, %rd18624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36034,%dummy}, %rd18614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36035}, %rd18614;
	}
	shf.r.wrap.b32 	%r36036, %r36035, %r36034, 19;
	shf.r.wrap.b32 	%r36037, %r36034, %r36035, 19;
	mov.b64 	%rd18628, {%r36037, %r36036};
	shf.l.wrap.b32 	%r36038, %r36034, %r36035, 3;
	shf.l.wrap.b32 	%r36039, %r36035, %r36034, 3;
	mov.b64 	%rd18629, {%r36039, %r36038};
	shr.u64 	%rd18630, %rd18614, 6;
	xor.b64  	%rd18631, %rd18628, %rd18630;
	xor.b64  	%rd18632, %rd18631, %rd18629;
	shf.r.wrap.b32 	%r36040, %r35649, %r35648, 1;
	shf.r.wrap.b32 	%r36041, %r35648, %r35649, 1;
	mov.b64 	%rd18633, {%r36041, %r36040};
	shf.r.wrap.b32 	%r36042, %r35649, %r35648, 8;
	shf.r.wrap.b32 	%r36043, %r35648, %r35649, 8;
	mov.b64 	%rd18634, {%r36043, %r36042};
	shr.u64 	%rd18635, %rd18045, 7;
	xor.b64  	%rd18636, %rd18633, %rd18635;
	xor.b64  	%rd18637, %rd18636, %rd18634;
	add.s64 	%rd18638, %rd18549, %rd18032;
	add.s64 	%rd18639, %rd18638, %rd18632;
	add.s64 	%rd18640, %rd18639, %rd18637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36044,%dummy}, %rd18627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36045}, %rd18627;
	}
	shf.r.wrap.b32 	%r36046, %r36045, %r36044, 19;
	shf.r.wrap.b32 	%r36047, %r36044, %r36045, 19;
	mov.b64 	%rd18641, {%r36047, %r36046};
	shf.l.wrap.b32 	%r36048, %r36044, %r36045, 3;
	shf.l.wrap.b32 	%r36049, %r36045, %r36044, 3;
	mov.b64 	%rd18642, {%r36049, %r36048};
	shr.u64 	%rd18643, %rd18627, 6;
	xor.b64  	%rd18644, %rd18641, %rd18643;
	xor.b64  	%rd18645, %rd18644, %rd18642;
	shf.r.wrap.b32 	%r36050, %r35659, %r35658, 1;
	shf.r.wrap.b32 	%r36051, %r35658, %r35659, 1;
	mov.b64 	%rd18646, {%r36051, %r36050};
	shf.r.wrap.b32 	%r36052, %r35659, %r35658, 8;
	shf.r.wrap.b32 	%r36053, %r35658, %r35659, 8;
	mov.b64 	%rd18647, {%r36053, %r36052};
	shr.u64 	%rd18648, %rd18058, 7;
	xor.b64  	%rd18649, %rd18646, %rd18648;
	xor.b64  	%rd18650, %rd18649, %rd18647;
	add.s64 	%rd18651, %rd18562, %rd18045;
	add.s64 	%rd18652, %rd18651, %rd18645;
	add.s64 	%rd18653, %rd18652, %rd18650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36054,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36055}, %rd18640;
	}
	shf.r.wrap.b32 	%r36056, %r36055, %r36054, 19;
	shf.r.wrap.b32 	%r36057, %r36054, %r36055, 19;
	mov.b64 	%rd18654, {%r36057, %r36056};
	shf.l.wrap.b32 	%r36058, %r36054, %r36055, 3;
	shf.l.wrap.b32 	%r36059, %r36055, %r36054, 3;
	mov.b64 	%rd18655, {%r36059, %r36058};
	shr.u64 	%rd18656, %rd18640, 6;
	xor.b64  	%rd18657, %rd18654, %rd18656;
	xor.b64  	%rd18658, %rd18657, %rd18655;
	shf.r.wrap.b32 	%r36060, %r35669, %r35668, 1;
	shf.r.wrap.b32 	%r36061, %r35668, %r35669, 1;
	mov.b64 	%rd18659, {%r36061, %r36060};
	shf.r.wrap.b32 	%r36062, %r35669, %r35668, 8;
	shf.r.wrap.b32 	%r36063, %r35668, %r35669, 8;
	mov.b64 	%rd18660, {%r36063, %r36062};
	shr.u64 	%rd18661, %rd18071, 7;
	xor.b64  	%rd18662, %rd18659, %rd18661;
	xor.b64  	%rd18663, %rd18662, %rd18660;
	add.s64 	%rd18664, %rd18575, %rd18058;
	add.s64 	%rd18665, %rd18664, %rd18658;
	add.s64 	%rd18666, %rd18665, %rd18663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36064,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36065}, %rd18653;
	}
	shf.r.wrap.b32 	%r36066, %r36065, %r36064, 19;
	shf.r.wrap.b32 	%r36067, %r36064, %r36065, 19;
	mov.b64 	%rd18667, {%r36067, %r36066};
	shf.l.wrap.b32 	%r36068, %r36064, %r36065, 3;
	shf.l.wrap.b32 	%r36069, %r36065, %r36064, 3;
	mov.b64 	%rd18668, {%r36069, %r36068};
	shr.u64 	%rd18669, %rd18653, 6;
	xor.b64  	%rd18670, %rd18667, %rd18669;
	xor.b64  	%rd18671, %rd18670, %rd18668;
	shf.r.wrap.b32 	%r36070, %r35935, %r35934, 1;
	shf.r.wrap.b32 	%r36071, %r35934, %r35935, 1;
	mov.b64 	%rd18672, {%r36071, %r36070};
	shf.r.wrap.b32 	%r36072, %r35935, %r35934, 8;
	shf.r.wrap.b32 	%r36073, %r35934, %r35935, 8;
	mov.b64 	%rd18673, {%r36073, %r36072};
	shr.u64 	%rd18674, %rd18084, 7;
	xor.b64  	%rd18675, %rd18672, %rd18674;
	xor.b64  	%rd18676, %rd18675, %rd18673;
	add.s64 	%rd18677, %rd18588, %rd18071;
	add.s64 	%rd18678, %rd18677, %rd18671;
	add.s64 	%rd18679, %rd18678, %rd18676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36074,%dummy}, %rd18666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36075}, %rd18666;
	}
	shf.r.wrap.b32 	%r36076, %r36075, %r36074, 19;
	shf.r.wrap.b32 	%r36077, %r36074, %r36075, 19;
	mov.b64 	%rd18680, {%r36077, %r36076};
	shf.l.wrap.b32 	%r36078, %r36074, %r36075, 3;
	shf.l.wrap.b32 	%r36079, %r36075, %r36074, 3;
	mov.b64 	%rd18681, {%r36079, %r36078};
	shr.u64 	%rd18682, %rd18666, 6;
	xor.b64  	%rd18683, %rd18680, %rd18682;
	xor.b64  	%rd18684, %rd18683, %rd18681;
	shf.r.wrap.b32 	%r36080, %r35945, %r35944, 1;
	shf.r.wrap.b32 	%r36081, %r35944, %r35945, 1;
	mov.b64 	%rd18685, {%r36081, %r36080};
	shf.r.wrap.b32 	%r36082, %r35945, %r35944, 8;
	shf.r.wrap.b32 	%r36083, %r35944, %r35945, 8;
	mov.b64 	%rd18686, {%r36083, %r36082};
	shr.u64 	%rd18687, %rd18097, 7;
	xor.b64  	%rd18688, %rd18685, %rd18687;
	xor.b64  	%rd18689, %rd18688, %rd18686;
	add.s64 	%rd18690, %rd18601, %rd18084;
	add.s64 	%rd18691, %rd18690, %rd18684;
	add.s64 	%rd18692, %rd18691, %rd18689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36084,%dummy}, %rd18679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36085}, %rd18679;
	}
	shf.r.wrap.b32 	%r36086, %r36085, %r36084, 19;
	shf.r.wrap.b32 	%r36087, %r36084, %r36085, 19;
	mov.b64 	%rd18693, {%r36087, %r36086};
	shf.l.wrap.b32 	%r36088, %r36084, %r36085, 3;
	shf.l.wrap.b32 	%r36089, %r36085, %r36084, 3;
	mov.b64 	%rd18694, {%r36089, %r36088};
	shr.u64 	%rd18695, %rd18679, 6;
	xor.b64  	%rd18696, %rd18693, %rd18695;
	xor.b64  	%rd18697, %rd18696, %rd18694;
	shf.r.wrap.b32 	%r36090, %r35955, %r35954, 1;
	shf.r.wrap.b32 	%r36091, %r35954, %r35955, 1;
	mov.b64 	%rd18698, {%r36091, %r36090};
	shf.r.wrap.b32 	%r36092, %r35955, %r35954, 8;
	shf.r.wrap.b32 	%r36093, %r35954, %r35955, 8;
	mov.b64 	%rd18699, {%r36093, %r36092};
	shr.u64 	%rd18700, %rd18510, 7;
	xor.b64  	%rd18701, %rd18698, %rd18700;
	xor.b64  	%rd18702, %rd18701, %rd18699;
	add.s64 	%rd18703, %rd18614, %rd18097;
	add.s64 	%rd18704, %rd18703, %rd18697;
	add.s64 	%rd18705, %rd18704, %rd18702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36094,%dummy}, %rd18486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36095}, %rd18486;
	}
	shf.r.wrap.b32 	%r36096, %r36095, %r36094, 14;
	shf.r.wrap.b32 	%r36097, %r36094, %r36095, 14;
	mov.b64 	%rd18706, {%r36097, %r36096};
	shf.r.wrap.b32 	%r36098, %r36095, %r36094, 18;
	shf.r.wrap.b32 	%r36099, %r36094, %r36095, 18;
	mov.b64 	%rd18707, {%r36099, %r36098};
	xor.b64  	%rd18708, %rd18707, %rd18706;
	shf.l.wrap.b32 	%r36100, %r36094, %r36095, 23;
	shf.l.wrap.b32 	%r36101, %r36095, %r36094, 23;
	mov.b64 	%rd18709, {%r36101, %r36100};
	xor.b64  	%rd18710, %rd18708, %rd18709;
	xor.b64  	%rd18711, %rd18461, %rd18436;
	and.b64  	%rd18712, %rd18486, %rd18711;
	xor.b64  	%rd18713, %rd18712, %rd18436;
	add.s64 	%rd18714, %rd18713, %rd18411;
	add.s64 	%rd18715, %rd18714, %rd18510;
	ld.const.u64 	%rd18716, [k_sha512+256];
	add.s64 	%rd18717, %rd18715, %rd18716;
	add.s64 	%rd18718, %rd18717, %rd18710;
	add.s64 	%rd18719, %rd18718, %rd18422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36102,%dummy}, %rd18497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36103}, %rd18497;
	}
	shf.r.wrap.b32 	%r36104, %r36103, %r36102, 28;
	shf.r.wrap.b32 	%r36105, %r36102, %r36103, 28;
	mov.b64 	%rd18720, {%r36105, %r36104};
	shf.l.wrap.b32 	%r36106, %r36102, %r36103, 30;
	shf.l.wrap.b32 	%r36107, %r36103, %r36102, 30;
	mov.b64 	%rd18721, {%r36107, %r36106};
	xor.b64  	%rd18722, %rd18721, %rd18720;
	shf.l.wrap.b32 	%r36108, %r36102, %r36103, 25;
	shf.l.wrap.b32 	%r36109, %r36103, %r36102, 25;
	mov.b64 	%rd18723, {%r36109, %r36108};
	xor.b64  	%rd18724, %rd18722, %rd18723;
	and.b64  	%rd18725, %rd18497, %rd18472;
	xor.b64  	%rd18726, %rd18497, %rd18472;
	and.b64  	%rd18727, %rd18726, %rd18447;
	or.b64  	%rd18728, %rd18727, %rd18725;
	add.s64 	%rd18729, %rd18718, %rd18728;
	add.s64 	%rd18730, %rd18729, %rd18724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36110,%dummy}, %rd18719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36111}, %rd18719;
	}
	shf.r.wrap.b32 	%r36112, %r36111, %r36110, 14;
	shf.r.wrap.b32 	%r36113, %r36110, %r36111, 14;
	mov.b64 	%rd18731, {%r36113, %r36112};
	shf.r.wrap.b32 	%r36114, %r36111, %r36110, 18;
	shf.r.wrap.b32 	%r36115, %r36110, %r36111, 18;
	mov.b64 	%rd18732, {%r36115, %r36114};
	xor.b64  	%rd18733, %rd18732, %rd18731;
	shf.l.wrap.b32 	%r36116, %r36110, %r36111, 23;
	shf.l.wrap.b32 	%r36117, %r36111, %r36110, 23;
	mov.b64 	%rd18734, {%r36117, %r36116};
	xor.b64  	%rd18735, %rd18733, %rd18734;
	xor.b64  	%rd18736, %rd18486, %rd18461;
	and.b64  	%rd18737, %rd18719, %rd18736;
	xor.b64  	%rd18738, %rd18737, %rd18461;
	add.s64 	%rd18739, %rd18523, %rd18436;
	ld.const.u64 	%rd18740, [k_sha512+264];
	add.s64 	%rd18741, %rd18739, %rd18740;
	add.s64 	%rd18742, %rd18741, %rd18738;
	add.s64 	%rd18743, %rd18742, %rd18735;
	add.s64 	%rd18744, %rd18743, %rd18447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36118,%dummy}, %rd18730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36119}, %rd18730;
	}
	shf.r.wrap.b32 	%r36120, %r36119, %r36118, 28;
	shf.r.wrap.b32 	%r36121, %r36118, %r36119, 28;
	mov.b64 	%rd18745, {%r36121, %r36120};
	shf.l.wrap.b32 	%r36122, %r36118, %r36119, 30;
	shf.l.wrap.b32 	%r36123, %r36119, %r36118, 30;
	mov.b64 	%rd18746, {%r36123, %r36122};
	xor.b64  	%rd18747, %rd18746, %rd18745;
	shf.l.wrap.b32 	%r36124, %r36118, %r36119, 25;
	shf.l.wrap.b32 	%r36125, %r36119, %r36118, 25;
	mov.b64 	%rd18748, {%r36125, %r36124};
	xor.b64  	%rd18749, %rd18747, %rd18748;
	and.b64  	%rd18750, %rd18730, %rd18497;
	xor.b64  	%rd18751, %rd18730, %rd18497;
	and.b64  	%rd18752, %rd18751, %rd18472;
	or.b64  	%rd18753, %rd18752, %rd18750;
	add.s64 	%rd18754, %rd18743, %rd18753;
	add.s64 	%rd18755, %rd18754, %rd18749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36126,%dummy}, %rd18744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36127}, %rd18744;
	}
	shf.r.wrap.b32 	%r36128, %r36127, %r36126, 14;
	shf.r.wrap.b32 	%r36129, %r36126, %r36127, 14;
	mov.b64 	%rd18756, {%r36129, %r36128};
	shf.r.wrap.b32 	%r36130, %r36127, %r36126, 18;
	shf.r.wrap.b32 	%r36131, %r36126, %r36127, 18;
	mov.b64 	%rd18757, {%r36131, %r36130};
	xor.b64  	%rd18758, %rd18757, %rd18756;
	shf.l.wrap.b32 	%r36132, %r36126, %r36127, 23;
	shf.l.wrap.b32 	%r36133, %r36127, %r36126, 23;
	mov.b64 	%rd18759, {%r36133, %r36132};
	xor.b64  	%rd18760, %rd18758, %rd18759;
	xor.b64  	%rd18761, %rd18719, %rd18486;
	and.b64  	%rd18762, %rd18744, %rd18761;
	xor.b64  	%rd18763, %rd18762, %rd18486;
	add.s64 	%rd18764, %rd18536, %rd18461;
	ld.const.u64 	%rd18765, [k_sha512+272];
	add.s64 	%rd18766, %rd18764, %rd18765;
	add.s64 	%rd18767, %rd18766, %rd18763;
	add.s64 	%rd18768, %rd18767, %rd18760;
	add.s64 	%rd18769, %rd18768, %rd18472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36134,%dummy}, %rd18755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36135}, %rd18755;
	}
	shf.r.wrap.b32 	%r36136, %r36135, %r36134, 28;
	shf.r.wrap.b32 	%r36137, %r36134, %r36135, 28;
	mov.b64 	%rd18770, {%r36137, %r36136};
	shf.l.wrap.b32 	%r36138, %r36134, %r36135, 30;
	shf.l.wrap.b32 	%r36139, %r36135, %r36134, 30;
	mov.b64 	%rd18771, {%r36139, %r36138};
	xor.b64  	%rd18772, %rd18771, %rd18770;
	shf.l.wrap.b32 	%r36140, %r36134, %r36135, 25;
	shf.l.wrap.b32 	%r36141, %r36135, %r36134, 25;
	mov.b64 	%rd18773, {%r36141, %r36140};
	xor.b64  	%rd18774, %rd18772, %rd18773;
	and.b64  	%rd18775, %rd18755, %rd18730;
	xor.b64  	%rd18776, %rd18755, %rd18730;
	and.b64  	%rd18777, %rd18776, %rd18497;
	or.b64  	%rd18778, %rd18777, %rd18775;
	add.s64 	%rd18779, %rd18768, %rd18778;
	add.s64 	%rd18780, %rd18779, %rd18774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36142,%dummy}, %rd18769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36143}, %rd18769;
	}
	shf.r.wrap.b32 	%r36144, %r36143, %r36142, 14;
	shf.r.wrap.b32 	%r36145, %r36142, %r36143, 14;
	mov.b64 	%rd18781, {%r36145, %r36144};
	shf.r.wrap.b32 	%r36146, %r36143, %r36142, 18;
	shf.r.wrap.b32 	%r36147, %r36142, %r36143, 18;
	mov.b64 	%rd18782, {%r36147, %r36146};
	xor.b64  	%rd18783, %rd18782, %rd18781;
	shf.l.wrap.b32 	%r36148, %r36142, %r36143, 23;
	shf.l.wrap.b32 	%r36149, %r36143, %r36142, 23;
	mov.b64 	%rd18784, {%r36149, %r36148};
	xor.b64  	%rd18785, %rd18783, %rd18784;
	xor.b64  	%rd18786, %rd18744, %rd18719;
	and.b64  	%rd18787, %rd18769, %rd18786;
	xor.b64  	%rd18788, %rd18787, %rd18719;
	add.s64 	%rd18789, %rd18549, %rd18486;
	ld.const.u64 	%rd18790, [k_sha512+280];
	add.s64 	%rd18791, %rd18789, %rd18790;
	add.s64 	%rd18792, %rd18791, %rd18788;
	add.s64 	%rd18793, %rd18792, %rd18785;
	add.s64 	%rd18794, %rd18793, %rd18497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36150,%dummy}, %rd18780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36151}, %rd18780;
	}
	shf.r.wrap.b32 	%r36152, %r36151, %r36150, 28;
	shf.r.wrap.b32 	%r36153, %r36150, %r36151, 28;
	mov.b64 	%rd18795, {%r36153, %r36152};
	shf.l.wrap.b32 	%r36154, %r36150, %r36151, 30;
	shf.l.wrap.b32 	%r36155, %r36151, %r36150, 30;
	mov.b64 	%rd18796, {%r36155, %r36154};
	xor.b64  	%rd18797, %rd18796, %rd18795;
	shf.l.wrap.b32 	%r36156, %r36150, %r36151, 25;
	shf.l.wrap.b32 	%r36157, %r36151, %r36150, 25;
	mov.b64 	%rd18798, {%r36157, %r36156};
	xor.b64  	%rd18799, %rd18797, %rd18798;
	and.b64  	%rd18800, %rd18780, %rd18755;
	xor.b64  	%rd18801, %rd18780, %rd18755;
	and.b64  	%rd18802, %rd18801, %rd18730;
	or.b64  	%rd18803, %rd18802, %rd18800;
	add.s64 	%rd18804, %rd18793, %rd18803;
	add.s64 	%rd18805, %rd18804, %rd18799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36158,%dummy}, %rd18794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36159}, %rd18794;
	}
	shf.r.wrap.b32 	%r36160, %r36159, %r36158, 14;
	shf.r.wrap.b32 	%r36161, %r36158, %r36159, 14;
	mov.b64 	%rd18806, {%r36161, %r36160};
	shf.r.wrap.b32 	%r36162, %r36159, %r36158, 18;
	shf.r.wrap.b32 	%r36163, %r36158, %r36159, 18;
	mov.b64 	%rd18807, {%r36163, %r36162};
	xor.b64  	%rd18808, %rd18807, %rd18806;
	shf.l.wrap.b32 	%r36164, %r36158, %r36159, 23;
	shf.l.wrap.b32 	%r36165, %r36159, %r36158, 23;
	mov.b64 	%rd18809, {%r36165, %r36164};
	xor.b64  	%rd18810, %rd18808, %rd18809;
	xor.b64  	%rd18811, %rd18769, %rd18744;
	and.b64  	%rd18812, %rd18794, %rd18811;
	xor.b64  	%rd18813, %rd18812, %rd18744;
	add.s64 	%rd18814, %rd18719, %rd18562;
	ld.const.u64 	%rd18815, [k_sha512+288];
	add.s64 	%rd18816, %rd18814, %rd18815;
	add.s64 	%rd18817, %rd18816, %rd18813;
	add.s64 	%rd18818, %rd18817, %rd18810;
	add.s64 	%rd18819, %rd18818, %rd18730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36166,%dummy}, %rd18805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36167}, %rd18805;
	}
	shf.r.wrap.b32 	%r36168, %r36167, %r36166, 28;
	shf.r.wrap.b32 	%r36169, %r36166, %r36167, 28;
	mov.b64 	%rd18820, {%r36169, %r36168};
	shf.l.wrap.b32 	%r36170, %r36166, %r36167, 30;
	shf.l.wrap.b32 	%r36171, %r36167, %r36166, 30;
	mov.b64 	%rd18821, {%r36171, %r36170};
	xor.b64  	%rd18822, %rd18821, %rd18820;
	shf.l.wrap.b32 	%r36172, %r36166, %r36167, 25;
	shf.l.wrap.b32 	%r36173, %r36167, %r36166, 25;
	mov.b64 	%rd18823, {%r36173, %r36172};
	xor.b64  	%rd18824, %rd18822, %rd18823;
	and.b64  	%rd18825, %rd18805, %rd18780;
	xor.b64  	%rd18826, %rd18805, %rd18780;
	and.b64  	%rd18827, %rd18826, %rd18755;
	or.b64  	%rd18828, %rd18827, %rd18825;
	add.s64 	%rd18829, %rd18818, %rd18828;
	add.s64 	%rd18830, %rd18829, %rd18824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36174,%dummy}, %rd18819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36175}, %rd18819;
	}
	shf.r.wrap.b32 	%r36176, %r36175, %r36174, 14;
	shf.r.wrap.b32 	%r36177, %r36174, %r36175, 14;
	mov.b64 	%rd18831, {%r36177, %r36176};
	shf.r.wrap.b32 	%r36178, %r36175, %r36174, 18;
	shf.r.wrap.b32 	%r36179, %r36174, %r36175, 18;
	mov.b64 	%rd18832, {%r36179, %r36178};
	xor.b64  	%rd18833, %rd18832, %rd18831;
	shf.l.wrap.b32 	%r36180, %r36174, %r36175, 23;
	shf.l.wrap.b32 	%r36181, %r36175, %r36174, 23;
	mov.b64 	%rd18834, {%r36181, %r36180};
	xor.b64  	%rd18835, %rd18833, %rd18834;
	xor.b64  	%rd18836, %rd18794, %rd18769;
	and.b64  	%rd18837, %rd18819, %rd18836;
	xor.b64  	%rd18838, %rd18837, %rd18769;
	add.s64 	%rd18839, %rd18744, %rd18575;
	ld.const.u64 	%rd18840, [k_sha512+296];
	add.s64 	%rd18841, %rd18839, %rd18840;
	add.s64 	%rd18842, %rd18841, %rd18838;
	add.s64 	%rd18843, %rd18842, %rd18835;
	add.s64 	%rd18844, %rd18843, %rd18755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36182,%dummy}, %rd18830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36183}, %rd18830;
	}
	shf.r.wrap.b32 	%r36184, %r36183, %r36182, 28;
	shf.r.wrap.b32 	%r36185, %r36182, %r36183, 28;
	mov.b64 	%rd18845, {%r36185, %r36184};
	shf.l.wrap.b32 	%r36186, %r36182, %r36183, 30;
	shf.l.wrap.b32 	%r36187, %r36183, %r36182, 30;
	mov.b64 	%rd18846, {%r36187, %r36186};
	xor.b64  	%rd18847, %rd18846, %rd18845;
	shf.l.wrap.b32 	%r36188, %r36182, %r36183, 25;
	shf.l.wrap.b32 	%r36189, %r36183, %r36182, 25;
	mov.b64 	%rd18848, {%r36189, %r36188};
	xor.b64  	%rd18849, %rd18847, %rd18848;
	and.b64  	%rd18850, %rd18830, %rd18805;
	xor.b64  	%rd18851, %rd18830, %rd18805;
	and.b64  	%rd18852, %rd18851, %rd18780;
	or.b64  	%rd18853, %rd18852, %rd18850;
	add.s64 	%rd18854, %rd18843, %rd18853;
	add.s64 	%rd18855, %rd18854, %rd18849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36190,%dummy}, %rd18844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36191}, %rd18844;
	}
	shf.r.wrap.b32 	%r36192, %r36191, %r36190, 14;
	shf.r.wrap.b32 	%r36193, %r36190, %r36191, 14;
	mov.b64 	%rd18856, {%r36193, %r36192};
	shf.r.wrap.b32 	%r36194, %r36191, %r36190, 18;
	shf.r.wrap.b32 	%r36195, %r36190, %r36191, 18;
	mov.b64 	%rd18857, {%r36195, %r36194};
	xor.b64  	%rd18858, %rd18857, %rd18856;
	shf.l.wrap.b32 	%r36196, %r36190, %r36191, 23;
	shf.l.wrap.b32 	%r36197, %r36191, %r36190, 23;
	mov.b64 	%rd18859, {%r36197, %r36196};
	xor.b64  	%rd18860, %rd18858, %rd18859;
	xor.b64  	%rd18861, %rd18819, %rd18794;
	and.b64  	%rd18862, %rd18844, %rd18861;
	xor.b64  	%rd18863, %rd18862, %rd18794;
	add.s64 	%rd18864, %rd18769, %rd18588;
	ld.const.u64 	%rd18865, [k_sha512+304];
	add.s64 	%rd18866, %rd18864, %rd18865;
	add.s64 	%rd18867, %rd18866, %rd18863;
	add.s64 	%rd18868, %rd18867, %rd18860;
	add.s64 	%rd18869, %rd18868, %rd18780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36198,%dummy}, %rd18855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36199}, %rd18855;
	}
	shf.r.wrap.b32 	%r36200, %r36199, %r36198, 28;
	shf.r.wrap.b32 	%r36201, %r36198, %r36199, 28;
	mov.b64 	%rd18870, {%r36201, %r36200};
	shf.l.wrap.b32 	%r36202, %r36198, %r36199, 30;
	shf.l.wrap.b32 	%r36203, %r36199, %r36198, 30;
	mov.b64 	%rd18871, {%r36203, %r36202};
	xor.b64  	%rd18872, %rd18871, %rd18870;
	shf.l.wrap.b32 	%r36204, %r36198, %r36199, 25;
	shf.l.wrap.b32 	%r36205, %r36199, %r36198, 25;
	mov.b64 	%rd18873, {%r36205, %r36204};
	xor.b64  	%rd18874, %rd18872, %rd18873;
	and.b64  	%rd18875, %rd18855, %rd18830;
	xor.b64  	%rd18876, %rd18855, %rd18830;
	and.b64  	%rd18877, %rd18876, %rd18805;
	or.b64  	%rd18878, %rd18877, %rd18875;
	add.s64 	%rd18879, %rd18868, %rd18878;
	add.s64 	%rd18880, %rd18879, %rd18874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36206,%dummy}, %rd18869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36207}, %rd18869;
	}
	shf.r.wrap.b32 	%r36208, %r36207, %r36206, 14;
	shf.r.wrap.b32 	%r36209, %r36206, %r36207, 14;
	mov.b64 	%rd18881, {%r36209, %r36208};
	shf.r.wrap.b32 	%r36210, %r36207, %r36206, 18;
	shf.r.wrap.b32 	%r36211, %r36206, %r36207, 18;
	mov.b64 	%rd18882, {%r36211, %r36210};
	xor.b64  	%rd18883, %rd18882, %rd18881;
	shf.l.wrap.b32 	%r36212, %r36206, %r36207, 23;
	shf.l.wrap.b32 	%r36213, %r36207, %r36206, 23;
	mov.b64 	%rd18884, {%r36213, %r36212};
	xor.b64  	%rd18885, %rd18883, %rd18884;
	xor.b64  	%rd18886, %rd18844, %rd18819;
	and.b64  	%rd18887, %rd18869, %rd18886;
	xor.b64  	%rd18888, %rd18887, %rd18819;
	add.s64 	%rd18889, %rd18794, %rd18601;
	ld.const.u64 	%rd18890, [k_sha512+312];
	add.s64 	%rd18891, %rd18889, %rd18890;
	add.s64 	%rd18892, %rd18891, %rd18888;
	add.s64 	%rd18893, %rd18892, %rd18885;
	add.s64 	%rd18894, %rd18893, %rd18805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36214,%dummy}, %rd18880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36215}, %rd18880;
	}
	shf.r.wrap.b32 	%r36216, %r36215, %r36214, 28;
	shf.r.wrap.b32 	%r36217, %r36214, %r36215, 28;
	mov.b64 	%rd18895, {%r36217, %r36216};
	shf.l.wrap.b32 	%r36218, %r36214, %r36215, 30;
	shf.l.wrap.b32 	%r36219, %r36215, %r36214, 30;
	mov.b64 	%rd18896, {%r36219, %r36218};
	xor.b64  	%rd18897, %rd18896, %rd18895;
	shf.l.wrap.b32 	%r36220, %r36214, %r36215, 25;
	shf.l.wrap.b32 	%r36221, %r36215, %r36214, 25;
	mov.b64 	%rd18898, {%r36221, %r36220};
	xor.b64  	%rd18899, %rd18897, %rd18898;
	and.b64  	%rd18900, %rd18880, %rd18855;
	xor.b64  	%rd18901, %rd18880, %rd18855;
	and.b64  	%rd18902, %rd18901, %rd18830;
	or.b64  	%rd18903, %rd18902, %rd18900;
	add.s64 	%rd18904, %rd18893, %rd18903;
	add.s64 	%rd18905, %rd18904, %rd18899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36222,%dummy}, %rd18894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36223}, %rd18894;
	}
	shf.r.wrap.b32 	%r36224, %r36223, %r36222, 14;
	shf.r.wrap.b32 	%r36225, %r36222, %r36223, 14;
	mov.b64 	%rd18906, {%r36225, %r36224};
	shf.r.wrap.b32 	%r36226, %r36223, %r36222, 18;
	shf.r.wrap.b32 	%r36227, %r36222, %r36223, 18;
	mov.b64 	%rd18907, {%r36227, %r36226};
	xor.b64  	%rd18908, %rd18907, %rd18906;
	shf.l.wrap.b32 	%r36228, %r36222, %r36223, 23;
	shf.l.wrap.b32 	%r36229, %r36223, %r36222, 23;
	mov.b64 	%rd18909, {%r36229, %r36228};
	xor.b64  	%rd18910, %rd18908, %rd18909;
	xor.b64  	%rd18911, %rd18869, %rd18844;
	and.b64  	%rd18912, %rd18894, %rd18911;
	xor.b64  	%rd18913, %rd18912, %rd18844;
	add.s64 	%rd18914, %rd18819, %rd18614;
	ld.const.u64 	%rd18915, [k_sha512+320];
	add.s64 	%rd18916, %rd18914, %rd18915;
	add.s64 	%rd18917, %rd18916, %rd18913;
	add.s64 	%rd18918, %rd18917, %rd18910;
	add.s64 	%rd18919, %rd18918, %rd18830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36230,%dummy}, %rd18905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36231}, %rd18905;
	}
	shf.r.wrap.b32 	%r36232, %r36231, %r36230, 28;
	shf.r.wrap.b32 	%r36233, %r36230, %r36231, 28;
	mov.b64 	%rd18920, {%r36233, %r36232};
	shf.l.wrap.b32 	%r36234, %r36230, %r36231, 30;
	shf.l.wrap.b32 	%r36235, %r36231, %r36230, 30;
	mov.b64 	%rd18921, {%r36235, %r36234};
	xor.b64  	%rd18922, %rd18921, %rd18920;
	shf.l.wrap.b32 	%r36236, %r36230, %r36231, 25;
	shf.l.wrap.b32 	%r36237, %r36231, %r36230, 25;
	mov.b64 	%rd18923, {%r36237, %r36236};
	xor.b64  	%rd18924, %rd18922, %rd18923;
	and.b64  	%rd18925, %rd18905, %rd18880;
	xor.b64  	%rd18926, %rd18905, %rd18880;
	and.b64  	%rd18927, %rd18926, %rd18855;
	or.b64  	%rd18928, %rd18927, %rd18925;
	add.s64 	%rd18929, %rd18918, %rd18928;
	add.s64 	%rd18930, %rd18929, %rd18924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36238,%dummy}, %rd18919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36239}, %rd18919;
	}
	shf.r.wrap.b32 	%r36240, %r36239, %r36238, 14;
	shf.r.wrap.b32 	%r36241, %r36238, %r36239, 14;
	mov.b64 	%rd18931, {%r36241, %r36240};
	shf.r.wrap.b32 	%r36242, %r36239, %r36238, 18;
	shf.r.wrap.b32 	%r36243, %r36238, %r36239, 18;
	mov.b64 	%rd18932, {%r36243, %r36242};
	xor.b64  	%rd18933, %rd18932, %rd18931;
	shf.l.wrap.b32 	%r36244, %r36238, %r36239, 23;
	shf.l.wrap.b32 	%r36245, %r36239, %r36238, 23;
	mov.b64 	%rd18934, {%r36245, %r36244};
	xor.b64  	%rd18935, %rd18933, %rd18934;
	xor.b64  	%rd18936, %rd18894, %rd18869;
	and.b64  	%rd18937, %rd18919, %rd18936;
	xor.b64  	%rd18938, %rd18937, %rd18869;
	add.s64 	%rd18939, %rd18844, %rd18627;
	ld.const.u64 	%rd18940, [k_sha512+328];
	add.s64 	%rd18941, %rd18939, %rd18940;
	add.s64 	%rd18942, %rd18941, %rd18938;
	add.s64 	%rd18943, %rd18942, %rd18935;
	add.s64 	%rd18944, %rd18943, %rd18855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36246,%dummy}, %rd18930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36247}, %rd18930;
	}
	shf.r.wrap.b32 	%r36248, %r36247, %r36246, 28;
	shf.r.wrap.b32 	%r36249, %r36246, %r36247, 28;
	mov.b64 	%rd18945, {%r36249, %r36248};
	shf.l.wrap.b32 	%r36250, %r36246, %r36247, 30;
	shf.l.wrap.b32 	%r36251, %r36247, %r36246, 30;
	mov.b64 	%rd18946, {%r36251, %r36250};
	xor.b64  	%rd18947, %rd18946, %rd18945;
	shf.l.wrap.b32 	%r36252, %r36246, %r36247, 25;
	shf.l.wrap.b32 	%r36253, %r36247, %r36246, 25;
	mov.b64 	%rd18948, {%r36253, %r36252};
	xor.b64  	%rd18949, %rd18947, %rd18948;
	and.b64  	%rd18950, %rd18930, %rd18905;
	xor.b64  	%rd18951, %rd18930, %rd18905;
	and.b64  	%rd18952, %rd18951, %rd18880;
	or.b64  	%rd18953, %rd18952, %rd18950;
	add.s64 	%rd18954, %rd18943, %rd18953;
	add.s64 	%rd18955, %rd18954, %rd18949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36254,%dummy}, %rd18944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36255}, %rd18944;
	}
	shf.r.wrap.b32 	%r36256, %r36255, %r36254, 14;
	shf.r.wrap.b32 	%r36257, %r36254, %r36255, 14;
	mov.b64 	%rd18956, {%r36257, %r36256};
	shf.r.wrap.b32 	%r36258, %r36255, %r36254, 18;
	shf.r.wrap.b32 	%r36259, %r36254, %r36255, 18;
	mov.b64 	%rd18957, {%r36259, %r36258};
	xor.b64  	%rd18958, %rd18957, %rd18956;
	shf.l.wrap.b32 	%r36260, %r36254, %r36255, 23;
	shf.l.wrap.b32 	%r36261, %r36255, %r36254, 23;
	mov.b64 	%rd18959, {%r36261, %r36260};
	xor.b64  	%rd18960, %rd18958, %rd18959;
	xor.b64  	%rd18961, %rd18919, %rd18894;
	and.b64  	%rd18962, %rd18944, %rd18961;
	xor.b64  	%rd18963, %rd18962, %rd18894;
	add.s64 	%rd18964, %rd18869, %rd18640;
	ld.const.u64 	%rd18965, [k_sha512+336];
	add.s64 	%rd18966, %rd18964, %rd18965;
	add.s64 	%rd18967, %rd18966, %rd18963;
	add.s64 	%rd18968, %rd18967, %rd18960;
	add.s64 	%rd18969, %rd18968, %rd18880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36262,%dummy}, %rd18955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36263}, %rd18955;
	}
	shf.r.wrap.b32 	%r36264, %r36263, %r36262, 28;
	shf.r.wrap.b32 	%r36265, %r36262, %r36263, 28;
	mov.b64 	%rd18970, {%r36265, %r36264};
	shf.l.wrap.b32 	%r36266, %r36262, %r36263, 30;
	shf.l.wrap.b32 	%r36267, %r36263, %r36262, 30;
	mov.b64 	%rd18971, {%r36267, %r36266};
	xor.b64  	%rd18972, %rd18971, %rd18970;
	shf.l.wrap.b32 	%r36268, %r36262, %r36263, 25;
	shf.l.wrap.b32 	%r36269, %r36263, %r36262, 25;
	mov.b64 	%rd18973, {%r36269, %r36268};
	xor.b64  	%rd18974, %rd18972, %rd18973;
	and.b64  	%rd18975, %rd18955, %rd18930;
	xor.b64  	%rd18976, %rd18955, %rd18930;
	and.b64  	%rd18977, %rd18976, %rd18905;
	or.b64  	%rd18978, %rd18977, %rd18975;
	add.s64 	%rd18979, %rd18968, %rd18978;
	add.s64 	%rd18980, %rd18979, %rd18974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36270,%dummy}, %rd18969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36271}, %rd18969;
	}
	shf.r.wrap.b32 	%r36272, %r36271, %r36270, 14;
	shf.r.wrap.b32 	%r36273, %r36270, %r36271, 14;
	mov.b64 	%rd18981, {%r36273, %r36272};
	shf.r.wrap.b32 	%r36274, %r36271, %r36270, 18;
	shf.r.wrap.b32 	%r36275, %r36270, %r36271, 18;
	mov.b64 	%rd18982, {%r36275, %r36274};
	xor.b64  	%rd18983, %rd18982, %rd18981;
	shf.l.wrap.b32 	%r36276, %r36270, %r36271, 23;
	shf.l.wrap.b32 	%r36277, %r36271, %r36270, 23;
	mov.b64 	%rd18984, {%r36277, %r36276};
	xor.b64  	%rd18985, %rd18983, %rd18984;
	xor.b64  	%rd18986, %rd18944, %rd18919;
	and.b64  	%rd18987, %rd18969, %rd18986;
	xor.b64  	%rd18988, %rd18987, %rd18919;
	add.s64 	%rd18989, %rd18894, %rd18653;
	ld.const.u64 	%rd18990, [k_sha512+344];
	add.s64 	%rd18991, %rd18989, %rd18990;
	add.s64 	%rd18992, %rd18991, %rd18988;
	add.s64 	%rd18993, %rd18992, %rd18985;
	add.s64 	%rd18994, %rd18993, %rd18905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36278,%dummy}, %rd18980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36279}, %rd18980;
	}
	shf.r.wrap.b32 	%r36280, %r36279, %r36278, 28;
	shf.r.wrap.b32 	%r36281, %r36278, %r36279, 28;
	mov.b64 	%rd18995, {%r36281, %r36280};
	shf.l.wrap.b32 	%r36282, %r36278, %r36279, 30;
	shf.l.wrap.b32 	%r36283, %r36279, %r36278, 30;
	mov.b64 	%rd18996, {%r36283, %r36282};
	xor.b64  	%rd18997, %rd18996, %rd18995;
	shf.l.wrap.b32 	%r36284, %r36278, %r36279, 25;
	shf.l.wrap.b32 	%r36285, %r36279, %r36278, 25;
	mov.b64 	%rd18998, {%r36285, %r36284};
	xor.b64  	%rd18999, %rd18997, %rd18998;
	and.b64  	%rd19000, %rd18980, %rd18955;
	xor.b64  	%rd19001, %rd18980, %rd18955;
	and.b64  	%rd19002, %rd19001, %rd18930;
	or.b64  	%rd19003, %rd19002, %rd19000;
	add.s64 	%rd19004, %rd18993, %rd19003;
	add.s64 	%rd19005, %rd19004, %rd18999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36286,%dummy}, %rd18994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36287}, %rd18994;
	}
	shf.r.wrap.b32 	%r36288, %r36287, %r36286, 14;
	shf.r.wrap.b32 	%r36289, %r36286, %r36287, 14;
	mov.b64 	%rd19006, {%r36289, %r36288};
	shf.r.wrap.b32 	%r36290, %r36287, %r36286, 18;
	shf.r.wrap.b32 	%r36291, %r36286, %r36287, 18;
	mov.b64 	%rd19007, {%r36291, %r36290};
	xor.b64  	%rd19008, %rd19007, %rd19006;
	shf.l.wrap.b32 	%r36292, %r36286, %r36287, 23;
	shf.l.wrap.b32 	%r36293, %r36287, %r36286, 23;
	mov.b64 	%rd19009, {%r36293, %r36292};
	xor.b64  	%rd19010, %rd19008, %rd19009;
	xor.b64  	%rd19011, %rd18969, %rd18944;
	and.b64  	%rd19012, %rd18994, %rd19011;
	xor.b64  	%rd19013, %rd19012, %rd18944;
	add.s64 	%rd19014, %rd18919, %rd18666;
	ld.const.u64 	%rd19015, [k_sha512+352];
	add.s64 	%rd19016, %rd19014, %rd19015;
	add.s64 	%rd19017, %rd19016, %rd19013;
	add.s64 	%rd19018, %rd19017, %rd19010;
	add.s64 	%rd19019, %rd19018, %rd18930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36294,%dummy}, %rd19005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36295}, %rd19005;
	}
	shf.r.wrap.b32 	%r36296, %r36295, %r36294, 28;
	shf.r.wrap.b32 	%r36297, %r36294, %r36295, 28;
	mov.b64 	%rd19020, {%r36297, %r36296};
	shf.l.wrap.b32 	%r36298, %r36294, %r36295, 30;
	shf.l.wrap.b32 	%r36299, %r36295, %r36294, 30;
	mov.b64 	%rd19021, {%r36299, %r36298};
	xor.b64  	%rd19022, %rd19021, %rd19020;
	shf.l.wrap.b32 	%r36300, %r36294, %r36295, 25;
	shf.l.wrap.b32 	%r36301, %r36295, %r36294, 25;
	mov.b64 	%rd19023, {%r36301, %r36300};
	xor.b64  	%rd19024, %rd19022, %rd19023;
	and.b64  	%rd19025, %rd19005, %rd18980;
	xor.b64  	%rd19026, %rd19005, %rd18980;
	and.b64  	%rd19027, %rd19026, %rd18955;
	or.b64  	%rd19028, %rd19027, %rd19025;
	add.s64 	%rd19029, %rd19018, %rd19028;
	add.s64 	%rd19030, %rd19029, %rd19024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36302,%dummy}, %rd19019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36303}, %rd19019;
	}
	shf.r.wrap.b32 	%r36304, %r36303, %r36302, 14;
	shf.r.wrap.b32 	%r36305, %r36302, %r36303, 14;
	mov.b64 	%rd19031, {%r36305, %r36304};
	shf.r.wrap.b32 	%r36306, %r36303, %r36302, 18;
	shf.r.wrap.b32 	%r36307, %r36302, %r36303, 18;
	mov.b64 	%rd19032, {%r36307, %r36306};
	xor.b64  	%rd19033, %rd19032, %rd19031;
	shf.l.wrap.b32 	%r36308, %r36302, %r36303, 23;
	shf.l.wrap.b32 	%r36309, %r36303, %r36302, 23;
	mov.b64 	%rd19034, {%r36309, %r36308};
	xor.b64  	%rd19035, %rd19033, %rd19034;
	xor.b64  	%rd19036, %rd18994, %rd18969;
	and.b64  	%rd19037, %rd19019, %rd19036;
	xor.b64  	%rd19038, %rd19037, %rd18969;
	add.s64 	%rd19039, %rd18944, %rd18679;
	ld.const.u64 	%rd19040, [k_sha512+360];
	add.s64 	%rd19041, %rd19039, %rd19040;
	add.s64 	%rd19042, %rd19041, %rd19038;
	add.s64 	%rd19043, %rd19042, %rd19035;
	add.s64 	%rd19044, %rd19043, %rd18955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36310,%dummy}, %rd19030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36311}, %rd19030;
	}
	shf.r.wrap.b32 	%r36312, %r36311, %r36310, 28;
	shf.r.wrap.b32 	%r36313, %r36310, %r36311, 28;
	mov.b64 	%rd19045, {%r36313, %r36312};
	shf.l.wrap.b32 	%r36314, %r36310, %r36311, 30;
	shf.l.wrap.b32 	%r36315, %r36311, %r36310, 30;
	mov.b64 	%rd19046, {%r36315, %r36314};
	xor.b64  	%rd19047, %rd19046, %rd19045;
	shf.l.wrap.b32 	%r36316, %r36310, %r36311, 25;
	shf.l.wrap.b32 	%r36317, %r36311, %r36310, 25;
	mov.b64 	%rd19048, {%r36317, %r36316};
	xor.b64  	%rd19049, %rd19047, %rd19048;
	and.b64  	%rd19050, %rd19030, %rd19005;
	xor.b64  	%rd19051, %rd19030, %rd19005;
	and.b64  	%rd19052, %rd19051, %rd18980;
	or.b64  	%rd19053, %rd19052, %rd19050;
	add.s64 	%rd19054, %rd19043, %rd19053;
	add.s64 	%rd19055, %rd19054, %rd19049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36318,%dummy}, %rd19044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36319}, %rd19044;
	}
	shf.r.wrap.b32 	%r36320, %r36319, %r36318, 14;
	shf.r.wrap.b32 	%r36321, %r36318, %r36319, 14;
	mov.b64 	%rd19056, {%r36321, %r36320};
	shf.r.wrap.b32 	%r36322, %r36319, %r36318, 18;
	shf.r.wrap.b32 	%r36323, %r36318, %r36319, 18;
	mov.b64 	%rd19057, {%r36323, %r36322};
	xor.b64  	%rd19058, %rd19057, %rd19056;
	shf.l.wrap.b32 	%r36324, %r36318, %r36319, 23;
	shf.l.wrap.b32 	%r36325, %r36319, %r36318, 23;
	mov.b64 	%rd19059, {%r36325, %r36324};
	xor.b64  	%rd19060, %rd19058, %rd19059;
	xor.b64  	%rd19061, %rd19019, %rd18994;
	and.b64  	%rd19062, %rd19044, %rd19061;
	xor.b64  	%rd19063, %rd19062, %rd18994;
	add.s64 	%rd19064, %rd18969, %rd18692;
	ld.const.u64 	%rd19065, [k_sha512+368];
	add.s64 	%rd19066, %rd19064, %rd19065;
	add.s64 	%rd19067, %rd19066, %rd19063;
	add.s64 	%rd19068, %rd19067, %rd19060;
	add.s64 	%rd19069, %rd19068, %rd18980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36326,%dummy}, %rd19055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36327}, %rd19055;
	}
	shf.r.wrap.b32 	%r36328, %r36327, %r36326, 28;
	shf.r.wrap.b32 	%r36329, %r36326, %r36327, 28;
	mov.b64 	%rd19070, {%r36329, %r36328};
	shf.l.wrap.b32 	%r36330, %r36326, %r36327, 30;
	shf.l.wrap.b32 	%r36331, %r36327, %r36326, 30;
	mov.b64 	%rd19071, {%r36331, %r36330};
	xor.b64  	%rd19072, %rd19071, %rd19070;
	shf.l.wrap.b32 	%r36332, %r36326, %r36327, 25;
	shf.l.wrap.b32 	%r36333, %r36327, %r36326, 25;
	mov.b64 	%rd19073, {%r36333, %r36332};
	xor.b64  	%rd19074, %rd19072, %rd19073;
	and.b64  	%rd19075, %rd19055, %rd19030;
	xor.b64  	%rd19076, %rd19055, %rd19030;
	and.b64  	%rd19077, %rd19076, %rd19005;
	or.b64  	%rd19078, %rd19077, %rd19075;
	add.s64 	%rd19079, %rd19068, %rd19078;
	add.s64 	%rd19080, %rd19079, %rd19074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36334,%dummy}, %rd19069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36335}, %rd19069;
	}
	shf.r.wrap.b32 	%r36336, %r36335, %r36334, 14;
	shf.r.wrap.b32 	%r36337, %r36334, %r36335, 14;
	mov.b64 	%rd19081, {%r36337, %r36336};
	shf.r.wrap.b32 	%r36338, %r36335, %r36334, 18;
	shf.r.wrap.b32 	%r36339, %r36334, %r36335, 18;
	mov.b64 	%rd19082, {%r36339, %r36338};
	xor.b64  	%rd19083, %rd19082, %rd19081;
	shf.l.wrap.b32 	%r36340, %r36334, %r36335, 23;
	shf.l.wrap.b32 	%r36341, %r36335, %r36334, 23;
	mov.b64 	%rd19084, {%r36341, %r36340};
	xor.b64  	%rd19085, %rd19083, %rd19084;
	xor.b64  	%rd19086, %rd19044, %rd19019;
	and.b64  	%rd19087, %rd19069, %rd19086;
	xor.b64  	%rd19088, %rd19087, %rd19019;
	add.s64 	%rd19089, %rd18994, %rd18705;
	ld.const.u64 	%rd19090, [k_sha512+376];
	add.s64 	%rd19091, %rd19089, %rd19090;
	add.s64 	%rd19092, %rd19091, %rd19088;
	add.s64 	%rd19093, %rd19092, %rd19085;
	add.s64 	%rd19094, %rd19093, %rd19005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36342,%dummy}, %rd19080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36343}, %rd19080;
	}
	shf.r.wrap.b32 	%r36344, %r36343, %r36342, 28;
	shf.r.wrap.b32 	%r36345, %r36342, %r36343, 28;
	mov.b64 	%rd19095, {%r36345, %r36344};
	shf.l.wrap.b32 	%r36346, %r36342, %r36343, 30;
	shf.l.wrap.b32 	%r36347, %r36343, %r36342, 30;
	mov.b64 	%rd19096, {%r36347, %r36346};
	xor.b64  	%rd19097, %rd19096, %rd19095;
	shf.l.wrap.b32 	%r36348, %r36342, %r36343, 25;
	shf.l.wrap.b32 	%r36349, %r36343, %r36342, 25;
	mov.b64 	%rd19098, {%r36349, %r36348};
	xor.b64  	%rd19099, %rd19097, %rd19098;
	and.b64  	%rd19100, %rd19080, %rd19055;
	xor.b64  	%rd19101, %rd19080, %rd19055;
	and.b64  	%rd19102, %rd19101, %rd19030;
	or.b64  	%rd19103, %rd19102, %rd19100;
	add.s64 	%rd19104, %rd19093, %rd19103;
	add.s64 	%rd19105, %rd19104, %rd19099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36350,%dummy}, %rd18692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36351}, %rd18692;
	}
	shf.r.wrap.b32 	%r36352, %r36351, %r36350, 19;
	shf.r.wrap.b32 	%r36353, %r36350, %r36351, 19;
	mov.b64 	%rd19106, {%r36353, %r36352};
	shf.l.wrap.b32 	%r36354, %r36350, %r36351, 3;
	shf.l.wrap.b32 	%r36355, %r36351, %r36350, 3;
	mov.b64 	%rd19107, {%r36355, %r36354};
	shr.u64 	%rd19108, %rd18692, 6;
	xor.b64  	%rd19109, %rd19106, %rd19108;
	xor.b64  	%rd19110, %rd19109, %rd19107;
	shf.r.wrap.b32 	%r36356, %r35965, %r35964, 1;
	shf.r.wrap.b32 	%r36357, %r35964, %r35965, 1;
	mov.b64 	%rd19111, {%r36357, %r36356};
	shf.r.wrap.b32 	%r36358, %r35965, %r35964, 8;
	shf.r.wrap.b32 	%r36359, %r35964, %r35965, 8;
	mov.b64 	%rd19112, {%r36359, %r36358};
	shr.u64 	%rd19113, %rd18523, 7;
	xor.b64  	%rd19114, %rd19111, %rd19113;
	xor.b64  	%rd19115, %rd19114, %rd19112;
	add.s64 	%rd19116, %rd18627, %rd18510;
	add.s64 	%rd19117, %rd19116, %rd19110;
	add.s64 	%rd19118, %rd19117, %rd19115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36360,%dummy}, %rd18705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36361}, %rd18705;
	}
	shf.r.wrap.b32 	%r36362, %r36361, %r36360, 19;
	shf.r.wrap.b32 	%r36363, %r36360, %r36361, 19;
	mov.b64 	%rd19119, {%r36363, %r36362};
	shf.l.wrap.b32 	%r36364, %r36360, %r36361, 3;
	shf.l.wrap.b32 	%r36365, %r36361, %r36360, 3;
	mov.b64 	%rd19120, {%r36365, %r36364};
	shr.u64 	%rd19121, %rd18705, 6;
	xor.b64  	%rd19122, %rd19119, %rd19121;
	xor.b64  	%rd19123, %rd19122, %rd19120;
	shf.r.wrap.b32 	%r36366, %r35975, %r35974, 1;
	shf.r.wrap.b32 	%r36367, %r35974, %r35975, 1;
	mov.b64 	%rd19124, {%r36367, %r36366};
	shf.r.wrap.b32 	%r36368, %r35975, %r35974, 8;
	shf.r.wrap.b32 	%r36369, %r35974, %r35975, 8;
	mov.b64 	%rd19125, {%r36369, %r36368};
	shr.u64 	%rd19126, %rd18536, 7;
	xor.b64  	%rd19127, %rd19124, %rd19126;
	xor.b64  	%rd19128, %rd19127, %rd19125;
	add.s64 	%rd19129, %rd18640, %rd18523;
	add.s64 	%rd19130, %rd19129, %rd19123;
	add.s64 	%rd19131, %rd19130, %rd19128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36370,%dummy}, %rd19118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36371}, %rd19118;
	}
	shf.r.wrap.b32 	%r36372, %r36371, %r36370, 19;
	shf.r.wrap.b32 	%r36373, %r36370, %r36371, 19;
	mov.b64 	%rd19132, {%r36373, %r36372};
	shf.l.wrap.b32 	%r36374, %r36370, %r36371, 3;
	shf.l.wrap.b32 	%r36375, %r36371, %r36370, 3;
	mov.b64 	%rd19133, {%r36375, %r36374};
	shr.u64 	%rd19134, %rd19118, 6;
	xor.b64  	%rd19135, %rd19132, %rd19134;
	xor.b64  	%rd19136, %rd19135, %rd19133;
	shf.r.wrap.b32 	%r36376, %r35985, %r35984, 1;
	shf.r.wrap.b32 	%r36377, %r35984, %r35985, 1;
	mov.b64 	%rd19137, {%r36377, %r36376};
	shf.r.wrap.b32 	%r36378, %r35985, %r35984, 8;
	shf.r.wrap.b32 	%r36379, %r35984, %r35985, 8;
	mov.b64 	%rd19138, {%r36379, %r36378};
	shr.u64 	%rd19139, %rd18549, 7;
	xor.b64  	%rd19140, %rd19137, %rd19139;
	xor.b64  	%rd19141, %rd19140, %rd19138;
	add.s64 	%rd19142, %rd18653, %rd18536;
	add.s64 	%rd19143, %rd19142, %rd19136;
	add.s64 	%rd19144, %rd19143, %rd19141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36380,%dummy}, %rd19131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36381}, %rd19131;
	}
	shf.r.wrap.b32 	%r36382, %r36381, %r36380, 19;
	shf.r.wrap.b32 	%r36383, %r36380, %r36381, 19;
	mov.b64 	%rd19145, {%r36383, %r36382};
	shf.l.wrap.b32 	%r36384, %r36380, %r36381, 3;
	shf.l.wrap.b32 	%r36385, %r36381, %r36380, 3;
	mov.b64 	%rd19146, {%r36385, %r36384};
	shr.u64 	%rd19147, %rd19131, 6;
	xor.b64  	%rd19148, %rd19145, %rd19147;
	xor.b64  	%rd19149, %rd19148, %rd19146;
	shf.r.wrap.b32 	%r36386, %r35995, %r35994, 1;
	shf.r.wrap.b32 	%r36387, %r35994, %r35995, 1;
	mov.b64 	%rd19150, {%r36387, %r36386};
	shf.r.wrap.b32 	%r36388, %r35995, %r35994, 8;
	shf.r.wrap.b32 	%r36389, %r35994, %r35995, 8;
	mov.b64 	%rd19151, {%r36389, %r36388};
	shr.u64 	%rd19152, %rd18562, 7;
	xor.b64  	%rd19153, %rd19150, %rd19152;
	xor.b64  	%rd19154, %rd19153, %rd19151;
	add.s64 	%rd19155, %rd18666, %rd18549;
	add.s64 	%rd19156, %rd19155, %rd19149;
	add.s64 	%rd19157, %rd19156, %rd19154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36390,%dummy}, %rd19144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36391}, %rd19144;
	}
	shf.r.wrap.b32 	%r36392, %r36391, %r36390, 19;
	shf.r.wrap.b32 	%r36393, %r36390, %r36391, 19;
	mov.b64 	%rd19158, {%r36393, %r36392};
	shf.l.wrap.b32 	%r36394, %r36390, %r36391, 3;
	shf.l.wrap.b32 	%r36395, %r36391, %r36390, 3;
	mov.b64 	%rd19159, {%r36395, %r36394};
	shr.u64 	%rd19160, %rd19144, 6;
	xor.b64  	%rd19161, %rd19158, %rd19160;
	xor.b64  	%rd19162, %rd19161, %rd19159;
	shf.r.wrap.b32 	%r36396, %r36005, %r36004, 1;
	shf.r.wrap.b32 	%r36397, %r36004, %r36005, 1;
	mov.b64 	%rd19163, {%r36397, %r36396};
	shf.r.wrap.b32 	%r36398, %r36005, %r36004, 8;
	shf.r.wrap.b32 	%r36399, %r36004, %r36005, 8;
	mov.b64 	%rd19164, {%r36399, %r36398};
	shr.u64 	%rd19165, %rd18575, 7;
	xor.b64  	%rd19166, %rd19163, %rd19165;
	xor.b64  	%rd19167, %rd19166, %rd19164;
	add.s64 	%rd19168, %rd18679, %rd18562;
	add.s64 	%rd19169, %rd19168, %rd19162;
	add.s64 	%rd19170, %rd19169, %rd19167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36400,%dummy}, %rd19157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36401}, %rd19157;
	}
	shf.r.wrap.b32 	%r36402, %r36401, %r36400, 19;
	shf.r.wrap.b32 	%r36403, %r36400, %r36401, 19;
	mov.b64 	%rd19171, {%r36403, %r36402};
	shf.l.wrap.b32 	%r36404, %r36400, %r36401, 3;
	shf.l.wrap.b32 	%r36405, %r36401, %r36400, 3;
	mov.b64 	%rd19172, {%r36405, %r36404};
	shr.u64 	%rd19173, %rd19157, 6;
	xor.b64  	%rd19174, %rd19171, %rd19173;
	xor.b64  	%rd19175, %rd19174, %rd19172;
	shf.r.wrap.b32 	%r36406, %r36015, %r36014, 1;
	shf.r.wrap.b32 	%r36407, %r36014, %r36015, 1;
	mov.b64 	%rd19176, {%r36407, %r36406};
	shf.r.wrap.b32 	%r36408, %r36015, %r36014, 8;
	shf.r.wrap.b32 	%r36409, %r36014, %r36015, 8;
	mov.b64 	%rd19177, {%r36409, %r36408};
	shr.u64 	%rd19178, %rd18588, 7;
	xor.b64  	%rd19179, %rd19176, %rd19178;
	xor.b64  	%rd19180, %rd19179, %rd19177;
	add.s64 	%rd19181, %rd18692, %rd18575;
	add.s64 	%rd19182, %rd19181, %rd19175;
	add.s64 	%rd19183, %rd19182, %rd19180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36410,%dummy}, %rd19170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36411}, %rd19170;
	}
	shf.r.wrap.b32 	%r36412, %r36411, %r36410, 19;
	shf.r.wrap.b32 	%r36413, %r36410, %r36411, 19;
	mov.b64 	%rd19184, {%r36413, %r36412};
	shf.l.wrap.b32 	%r36414, %r36410, %r36411, 3;
	shf.l.wrap.b32 	%r36415, %r36411, %r36410, 3;
	mov.b64 	%rd19185, {%r36415, %r36414};
	shr.u64 	%rd19186, %rd19170, 6;
	xor.b64  	%rd19187, %rd19184, %rd19186;
	xor.b64  	%rd19188, %rd19187, %rd19185;
	shf.r.wrap.b32 	%r36416, %r36025, %r36024, 1;
	shf.r.wrap.b32 	%r36417, %r36024, %r36025, 1;
	mov.b64 	%rd19189, {%r36417, %r36416};
	shf.r.wrap.b32 	%r36418, %r36025, %r36024, 8;
	shf.r.wrap.b32 	%r36419, %r36024, %r36025, 8;
	mov.b64 	%rd19190, {%r36419, %r36418};
	shr.u64 	%rd19191, %rd18601, 7;
	xor.b64  	%rd19192, %rd19189, %rd19191;
	xor.b64  	%rd19193, %rd19192, %rd19190;
	add.s64 	%rd19194, %rd18705, %rd18588;
	add.s64 	%rd19195, %rd19194, %rd19188;
	add.s64 	%rd19196, %rd19195, %rd19193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36420,%dummy}, %rd19183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36421}, %rd19183;
	}
	shf.r.wrap.b32 	%r36422, %r36421, %r36420, 19;
	shf.r.wrap.b32 	%r36423, %r36420, %r36421, 19;
	mov.b64 	%rd19197, {%r36423, %r36422};
	shf.l.wrap.b32 	%r36424, %r36420, %r36421, 3;
	shf.l.wrap.b32 	%r36425, %r36421, %r36420, 3;
	mov.b64 	%rd19198, {%r36425, %r36424};
	shr.u64 	%rd19199, %rd19183, 6;
	xor.b64  	%rd19200, %rd19197, %rd19199;
	xor.b64  	%rd19201, %rd19200, %rd19198;
	shf.r.wrap.b32 	%r36426, %r36035, %r36034, 1;
	shf.r.wrap.b32 	%r36427, %r36034, %r36035, 1;
	mov.b64 	%rd19202, {%r36427, %r36426};
	shf.r.wrap.b32 	%r36428, %r36035, %r36034, 8;
	shf.r.wrap.b32 	%r36429, %r36034, %r36035, 8;
	mov.b64 	%rd19203, {%r36429, %r36428};
	shr.u64 	%rd19204, %rd18614, 7;
	xor.b64  	%rd19205, %rd19202, %rd19204;
	xor.b64  	%rd19206, %rd19205, %rd19203;
	add.s64 	%rd19207, %rd19118, %rd18601;
	add.s64 	%rd19208, %rd19207, %rd19201;
	add.s64 	%rd19209, %rd19208, %rd19206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36430,%dummy}, %rd19196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36431}, %rd19196;
	}
	shf.r.wrap.b32 	%r36432, %r36431, %r36430, 19;
	shf.r.wrap.b32 	%r36433, %r36430, %r36431, 19;
	mov.b64 	%rd19210, {%r36433, %r36432};
	shf.l.wrap.b32 	%r36434, %r36430, %r36431, 3;
	shf.l.wrap.b32 	%r36435, %r36431, %r36430, 3;
	mov.b64 	%rd19211, {%r36435, %r36434};
	shr.u64 	%rd19212, %rd19196, 6;
	xor.b64  	%rd19213, %rd19210, %rd19212;
	xor.b64  	%rd19214, %rd19213, %rd19211;
	shf.r.wrap.b32 	%r36436, %r36045, %r36044, 1;
	shf.r.wrap.b32 	%r36437, %r36044, %r36045, 1;
	mov.b64 	%rd19215, {%r36437, %r36436};
	shf.r.wrap.b32 	%r36438, %r36045, %r36044, 8;
	shf.r.wrap.b32 	%r36439, %r36044, %r36045, 8;
	mov.b64 	%rd19216, {%r36439, %r36438};
	shr.u64 	%rd19217, %rd18627, 7;
	xor.b64  	%rd19218, %rd19215, %rd19217;
	xor.b64  	%rd19219, %rd19218, %rd19216;
	add.s64 	%rd19220, %rd19131, %rd18614;
	add.s64 	%rd19221, %rd19220, %rd19214;
	add.s64 	%rd19222, %rd19221, %rd19219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36440,%dummy}, %rd19209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36441}, %rd19209;
	}
	shf.r.wrap.b32 	%r36442, %r36441, %r36440, 19;
	shf.r.wrap.b32 	%r36443, %r36440, %r36441, 19;
	mov.b64 	%rd19223, {%r36443, %r36442};
	shf.l.wrap.b32 	%r36444, %r36440, %r36441, 3;
	shf.l.wrap.b32 	%r36445, %r36441, %r36440, 3;
	mov.b64 	%rd19224, {%r36445, %r36444};
	shr.u64 	%rd19225, %rd19209, 6;
	xor.b64  	%rd19226, %rd19223, %rd19225;
	xor.b64  	%rd19227, %rd19226, %rd19224;
	shf.r.wrap.b32 	%r36446, %r36055, %r36054, 1;
	shf.r.wrap.b32 	%r36447, %r36054, %r36055, 1;
	mov.b64 	%rd19228, {%r36447, %r36446};
	shf.r.wrap.b32 	%r36448, %r36055, %r36054, 8;
	shf.r.wrap.b32 	%r36449, %r36054, %r36055, 8;
	mov.b64 	%rd19229, {%r36449, %r36448};
	shr.u64 	%rd19230, %rd18640, 7;
	xor.b64  	%rd19231, %rd19228, %rd19230;
	xor.b64  	%rd19232, %rd19231, %rd19229;
	add.s64 	%rd19233, %rd19144, %rd18627;
	add.s64 	%rd19234, %rd19233, %rd19227;
	add.s64 	%rd19235, %rd19234, %rd19232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36450,%dummy}, %rd19222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36451}, %rd19222;
	}
	shf.r.wrap.b32 	%r36452, %r36451, %r36450, 19;
	shf.r.wrap.b32 	%r36453, %r36450, %r36451, 19;
	mov.b64 	%rd19236, {%r36453, %r36452};
	shf.l.wrap.b32 	%r36454, %r36450, %r36451, 3;
	shf.l.wrap.b32 	%r36455, %r36451, %r36450, 3;
	mov.b64 	%rd19237, {%r36455, %r36454};
	shr.u64 	%rd19238, %rd19222, 6;
	xor.b64  	%rd19239, %rd19236, %rd19238;
	xor.b64  	%rd19240, %rd19239, %rd19237;
	shf.r.wrap.b32 	%r36456, %r36065, %r36064, 1;
	shf.r.wrap.b32 	%r36457, %r36064, %r36065, 1;
	mov.b64 	%rd19241, {%r36457, %r36456};
	shf.r.wrap.b32 	%r36458, %r36065, %r36064, 8;
	shf.r.wrap.b32 	%r36459, %r36064, %r36065, 8;
	mov.b64 	%rd19242, {%r36459, %r36458};
	shr.u64 	%rd19243, %rd18653, 7;
	xor.b64  	%rd19244, %rd19241, %rd19243;
	xor.b64  	%rd19245, %rd19244, %rd19242;
	add.s64 	%rd19246, %rd19157, %rd18640;
	add.s64 	%rd19247, %rd19246, %rd19240;
	add.s64 	%rd19248, %rd19247, %rd19245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36460,%dummy}, %rd19235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36461}, %rd19235;
	}
	shf.r.wrap.b32 	%r36462, %r36461, %r36460, 19;
	shf.r.wrap.b32 	%r36463, %r36460, %r36461, 19;
	mov.b64 	%rd19249, {%r36463, %r36462};
	shf.l.wrap.b32 	%r36464, %r36460, %r36461, 3;
	shf.l.wrap.b32 	%r36465, %r36461, %r36460, 3;
	mov.b64 	%rd19250, {%r36465, %r36464};
	shr.u64 	%rd19251, %rd19235, 6;
	xor.b64  	%rd19252, %rd19249, %rd19251;
	xor.b64  	%rd19253, %rd19252, %rd19250;
	shf.r.wrap.b32 	%r36466, %r36075, %r36074, 1;
	shf.r.wrap.b32 	%r36467, %r36074, %r36075, 1;
	mov.b64 	%rd19254, {%r36467, %r36466};
	shf.r.wrap.b32 	%r36468, %r36075, %r36074, 8;
	shf.r.wrap.b32 	%r36469, %r36074, %r36075, 8;
	mov.b64 	%rd19255, {%r36469, %r36468};
	shr.u64 	%rd19256, %rd18666, 7;
	xor.b64  	%rd19257, %rd19254, %rd19256;
	xor.b64  	%rd19258, %rd19257, %rd19255;
	add.s64 	%rd19259, %rd19170, %rd18653;
	add.s64 	%rd19260, %rd19259, %rd19253;
	add.s64 	%rd19261, %rd19260, %rd19258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36470,%dummy}, %rd19248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36471}, %rd19248;
	}
	shf.r.wrap.b32 	%r36472, %r36471, %r36470, 19;
	shf.r.wrap.b32 	%r36473, %r36470, %r36471, 19;
	mov.b64 	%rd19262, {%r36473, %r36472};
	shf.l.wrap.b32 	%r36474, %r36470, %r36471, 3;
	shf.l.wrap.b32 	%r36475, %r36471, %r36470, 3;
	mov.b64 	%rd19263, {%r36475, %r36474};
	shr.u64 	%rd19264, %rd19248, 6;
	xor.b64  	%rd19265, %rd19262, %rd19264;
	xor.b64  	%rd19266, %rd19265, %rd19263;
	shf.r.wrap.b32 	%r36476, %r36085, %r36084, 1;
	shf.r.wrap.b32 	%r36477, %r36084, %r36085, 1;
	mov.b64 	%rd19267, {%r36477, %r36476};
	shf.r.wrap.b32 	%r36478, %r36085, %r36084, 8;
	shf.r.wrap.b32 	%r36479, %r36084, %r36085, 8;
	mov.b64 	%rd19268, {%r36479, %r36478};
	shr.u64 	%rd19269, %rd18679, 7;
	xor.b64  	%rd19270, %rd19267, %rd19269;
	xor.b64  	%rd19271, %rd19270, %rd19268;
	add.s64 	%rd19272, %rd19183, %rd18666;
	add.s64 	%rd19273, %rd19272, %rd19266;
	add.s64 	%rd19274, %rd19273, %rd19271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36480,%dummy}, %rd19261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36481}, %rd19261;
	}
	shf.r.wrap.b32 	%r36482, %r36481, %r36480, 19;
	shf.r.wrap.b32 	%r36483, %r36480, %r36481, 19;
	mov.b64 	%rd19275, {%r36483, %r36482};
	shf.l.wrap.b32 	%r36484, %r36480, %r36481, 3;
	shf.l.wrap.b32 	%r36485, %r36481, %r36480, 3;
	mov.b64 	%rd19276, {%r36485, %r36484};
	shr.u64 	%rd19277, %rd19261, 6;
	xor.b64  	%rd19278, %rd19275, %rd19277;
	xor.b64  	%rd19279, %rd19278, %rd19276;
	shf.r.wrap.b32 	%r36486, %r36351, %r36350, 1;
	shf.r.wrap.b32 	%r36487, %r36350, %r36351, 1;
	mov.b64 	%rd19280, {%r36487, %r36486};
	shf.r.wrap.b32 	%r36488, %r36351, %r36350, 8;
	shf.r.wrap.b32 	%r36489, %r36350, %r36351, 8;
	mov.b64 	%rd19281, {%r36489, %r36488};
	shr.u64 	%rd19282, %rd18692, 7;
	xor.b64  	%rd19283, %rd19280, %rd19282;
	xor.b64  	%rd19284, %rd19283, %rd19281;
	add.s64 	%rd19285, %rd19196, %rd18679;
	add.s64 	%rd19286, %rd19285, %rd19279;
	add.s64 	%rd19287, %rd19286, %rd19284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36490,%dummy}, %rd19274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36491}, %rd19274;
	}
	shf.r.wrap.b32 	%r36492, %r36491, %r36490, 19;
	shf.r.wrap.b32 	%r36493, %r36490, %r36491, 19;
	mov.b64 	%rd19288, {%r36493, %r36492};
	shf.l.wrap.b32 	%r36494, %r36490, %r36491, 3;
	shf.l.wrap.b32 	%r36495, %r36491, %r36490, 3;
	mov.b64 	%rd19289, {%r36495, %r36494};
	shr.u64 	%rd19290, %rd19274, 6;
	xor.b64  	%rd19291, %rd19288, %rd19290;
	xor.b64  	%rd19292, %rd19291, %rd19289;
	shf.r.wrap.b32 	%r36496, %r36361, %r36360, 1;
	shf.r.wrap.b32 	%r36497, %r36360, %r36361, 1;
	mov.b64 	%rd19293, {%r36497, %r36496};
	shf.r.wrap.b32 	%r36498, %r36361, %r36360, 8;
	shf.r.wrap.b32 	%r36499, %r36360, %r36361, 8;
	mov.b64 	%rd19294, {%r36499, %r36498};
	shr.u64 	%rd19295, %rd18705, 7;
	xor.b64  	%rd19296, %rd19293, %rd19295;
	xor.b64  	%rd19297, %rd19296, %rd19294;
	add.s64 	%rd19298, %rd19209, %rd18692;
	add.s64 	%rd19299, %rd19298, %rd19292;
	add.s64 	%rd19300, %rd19299, %rd19297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36500,%dummy}, %rd19287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36501}, %rd19287;
	}
	shf.r.wrap.b32 	%r36502, %r36501, %r36500, 19;
	shf.r.wrap.b32 	%r36503, %r36500, %r36501, 19;
	mov.b64 	%rd19301, {%r36503, %r36502};
	shf.l.wrap.b32 	%r36504, %r36500, %r36501, 3;
	shf.l.wrap.b32 	%r36505, %r36501, %r36500, 3;
	mov.b64 	%rd19302, {%r36505, %r36504};
	shr.u64 	%rd19303, %rd19287, 6;
	xor.b64  	%rd19304, %rd19301, %rd19303;
	xor.b64  	%rd19305, %rd19304, %rd19302;
	shf.r.wrap.b32 	%r36506, %r36371, %r36370, 1;
	shf.r.wrap.b32 	%r36507, %r36370, %r36371, 1;
	mov.b64 	%rd19306, {%r36507, %r36506};
	shf.r.wrap.b32 	%r36508, %r36371, %r36370, 8;
	shf.r.wrap.b32 	%r36509, %r36370, %r36371, 8;
	mov.b64 	%rd19307, {%r36509, %r36508};
	shr.u64 	%rd19308, %rd19118, 7;
	xor.b64  	%rd19309, %rd19306, %rd19308;
	xor.b64  	%rd19310, %rd19309, %rd19307;
	add.s64 	%rd19311, %rd19222, %rd18705;
	add.s64 	%rd19312, %rd19311, %rd19305;
	add.s64 	%rd19313, %rd19312, %rd19310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36510,%dummy}, %rd19094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36511}, %rd19094;
	}
	shf.r.wrap.b32 	%r36512, %r36511, %r36510, 14;
	shf.r.wrap.b32 	%r36513, %r36510, %r36511, 14;
	mov.b64 	%rd19314, {%r36513, %r36512};
	shf.r.wrap.b32 	%r36514, %r36511, %r36510, 18;
	shf.r.wrap.b32 	%r36515, %r36510, %r36511, 18;
	mov.b64 	%rd19315, {%r36515, %r36514};
	xor.b64  	%rd19316, %rd19315, %rd19314;
	shf.l.wrap.b32 	%r36516, %r36510, %r36511, 23;
	shf.l.wrap.b32 	%r36517, %r36511, %r36510, 23;
	mov.b64 	%rd19317, {%r36517, %r36516};
	xor.b64  	%rd19318, %rd19316, %rd19317;
	xor.b64  	%rd19319, %rd19069, %rd19044;
	and.b64  	%rd19320, %rd19094, %rd19319;
	xor.b64  	%rd19321, %rd19320, %rd19044;
	add.s64 	%rd19322, %rd19321, %rd19019;
	add.s64 	%rd19323, %rd19322, %rd19118;
	ld.const.u64 	%rd19324, [k_sha512+384];
	add.s64 	%rd19325, %rd19323, %rd19324;
	add.s64 	%rd19326, %rd19325, %rd19318;
	add.s64 	%rd19327, %rd19326, %rd19030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36518,%dummy}, %rd19105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36519}, %rd19105;
	}
	shf.r.wrap.b32 	%r36520, %r36519, %r36518, 28;
	shf.r.wrap.b32 	%r36521, %r36518, %r36519, 28;
	mov.b64 	%rd19328, {%r36521, %r36520};
	shf.l.wrap.b32 	%r36522, %r36518, %r36519, 30;
	shf.l.wrap.b32 	%r36523, %r36519, %r36518, 30;
	mov.b64 	%rd19329, {%r36523, %r36522};
	xor.b64  	%rd19330, %rd19329, %rd19328;
	shf.l.wrap.b32 	%r36524, %r36518, %r36519, 25;
	shf.l.wrap.b32 	%r36525, %r36519, %r36518, 25;
	mov.b64 	%rd19331, {%r36525, %r36524};
	xor.b64  	%rd19332, %rd19330, %rd19331;
	and.b64  	%rd19333, %rd19105, %rd19080;
	xor.b64  	%rd19334, %rd19105, %rd19080;
	and.b64  	%rd19335, %rd19334, %rd19055;
	or.b64  	%rd19336, %rd19335, %rd19333;
	add.s64 	%rd19337, %rd19326, %rd19336;
	add.s64 	%rd19338, %rd19337, %rd19332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36526,%dummy}, %rd19327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36527}, %rd19327;
	}
	shf.r.wrap.b32 	%r36528, %r36527, %r36526, 14;
	shf.r.wrap.b32 	%r36529, %r36526, %r36527, 14;
	mov.b64 	%rd19339, {%r36529, %r36528};
	shf.r.wrap.b32 	%r36530, %r36527, %r36526, 18;
	shf.r.wrap.b32 	%r36531, %r36526, %r36527, 18;
	mov.b64 	%rd19340, {%r36531, %r36530};
	xor.b64  	%rd19341, %rd19340, %rd19339;
	shf.l.wrap.b32 	%r36532, %r36526, %r36527, 23;
	shf.l.wrap.b32 	%r36533, %r36527, %r36526, 23;
	mov.b64 	%rd19342, {%r36533, %r36532};
	xor.b64  	%rd19343, %rd19341, %rd19342;
	xor.b64  	%rd19344, %rd19094, %rd19069;
	and.b64  	%rd19345, %rd19327, %rd19344;
	xor.b64  	%rd19346, %rd19345, %rd19069;
	add.s64 	%rd19347, %rd19131, %rd19044;
	ld.const.u64 	%rd19348, [k_sha512+392];
	add.s64 	%rd19349, %rd19347, %rd19348;
	add.s64 	%rd19350, %rd19349, %rd19346;
	add.s64 	%rd19351, %rd19350, %rd19343;
	add.s64 	%rd19352, %rd19351, %rd19055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36534,%dummy}, %rd19338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36535}, %rd19338;
	}
	shf.r.wrap.b32 	%r36536, %r36535, %r36534, 28;
	shf.r.wrap.b32 	%r36537, %r36534, %r36535, 28;
	mov.b64 	%rd19353, {%r36537, %r36536};
	shf.l.wrap.b32 	%r36538, %r36534, %r36535, 30;
	shf.l.wrap.b32 	%r36539, %r36535, %r36534, 30;
	mov.b64 	%rd19354, {%r36539, %r36538};
	xor.b64  	%rd19355, %rd19354, %rd19353;
	shf.l.wrap.b32 	%r36540, %r36534, %r36535, 25;
	shf.l.wrap.b32 	%r36541, %r36535, %r36534, 25;
	mov.b64 	%rd19356, {%r36541, %r36540};
	xor.b64  	%rd19357, %rd19355, %rd19356;
	and.b64  	%rd19358, %rd19338, %rd19105;
	xor.b64  	%rd19359, %rd19338, %rd19105;
	and.b64  	%rd19360, %rd19359, %rd19080;
	or.b64  	%rd19361, %rd19360, %rd19358;
	add.s64 	%rd19362, %rd19351, %rd19361;
	add.s64 	%rd19363, %rd19362, %rd19357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36542,%dummy}, %rd19352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36543}, %rd19352;
	}
	shf.r.wrap.b32 	%r36544, %r36543, %r36542, 14;
	shf.r.wrap.b32 	%r36545, %r36542, %r36543, 14;
	mov.b64 	%rd19364, {%r36545, %r36544};
	shf.r.wrap.b32 	%r36546, %r36543, %r36542, 18;
	shf.r.wrap.b32 	%r36547, %r36542, %r36543, 18;
	mov.b64 	%rd19365, {%r36547, %r36546};
	xor.b64  	%rd19366, %rd19365, %rd19364;
	shf.l.wrap.b32 	%r36548, %r36542, %r36543, 23;
	shf.l.wrap.b32 	%r36549, %r36543, %r36542, 23;
	mov.b64 	%rd19367, {%r36549, %r36548};
	xor.b64  	%rd19368, %rd19366, %rd19367;
	xor.b64  	%rd19369, %rd19327, %rd19094;
	and.b64  	%rd19370, %rd19352, %rd19369;
	xor.b64  	%rd19371, %rd19370, %rd19094;
	add.s64 	%rd19372, %rd19144, %rd19069;
	ld.const.u64 	%rd19373, [k_sha512+400];
	add.s64 	%rd19374, %rd19372, %rd19373;
	add.s64 	%rd19375, %rd19374, %rd19371;
	add.s64 	%rd19376, %rd19375, %rd19368;
	add.s64 	%rd19377, %rd19376, %rd19080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36550,%dummy}, %rd19363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36551}, %rd19363;
	}
	shf.r.wrap.b32 	%r36552, %r36551, %r36550, 28;
	shf.r.wrap.b32 	%r36553, %r36550, %r36551, 28;
	mov.b64 	%rd19378, {%r36553, %r36552};
	shf.l.wrap.b32 	%r36554, %r36550, %r36551, 30;
	shf.l.wrap.b32 	%r36555, %r36551, %r36550, 30;
	mov.b64 	%rd19379, {%r36555, %r36554};
	xor.b64  	%rd19380, %rd19379, %rd19378;
	shf.l.wrap.b32 	%r36556, %r36550, %r36551, 25;
	shf.l.wrap.b32 	%r36557, %r36551, %r36550, 25;
	mov.b64 	%rd19381, {%r36557, %r36556};
	xor.b64  	%rd19382, %rd19380, %rd19381;
	and.b64  	%rd19383, %rd19363, %rd19338;
	xor.b64  	%rd19384, %rd19363, %rd19338;
	and.b64  	%rd19385, %rd19384, %rd19105;
	or.b64  	%rd19386, %rd19385, %rd19383;
	add.s64 	%rd19387, %rd19376, %rd19386;
	add.s64 	%rd19388, %rd19387, %rd19382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36558,%dummy}, %rd19377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36559}, %rd19377;
	}
	shf.r.wrap.b32 	%r36560, %r36559, %r36558, 14;
	shf.r.wrap.b32 	%r36561, %r36558, %r36559, 14;
	mov.b64 	%rd19389, {%r36561, %r36560};
	shf.r.wrap.b32 	%r36562, %r36559, %r36558, 18;
	shf.r.wrap.b32 	%r36563, %r36558, %r36559, 18;
	mov.b64 	%rd19390, {%r36563, %r36562};
	xor.b64  	%rd19391, %rd19390, %rd19389;
	shf.l.wrap.b32 	%r36564, %r36558, %r36559, 23;
	shf.l.wrap.b32 	%r36565, %r36559, %r36558, 23;
	mov.b64 	%rd19392, {%r36565, %r36564};
	xor.b64  	%rd19393, %rd19391, %rd19392;
	xor.b64  	%rd19394, %rd19352, %rd19327;
	and.b64  	%rd19395, %rd19377, %rd19394;
	xor.b64  	%rd19396, %rd19395, %rd19327;
	add.s64 	%rd19397, %rd19157, %rd19094;
	ld.const.u64 	%rd19398, [k_sha512+408];
	add.s64 	%rd19399, %rd19397, %rd19398;
	add.s64 	%rd19400, %rd19399, %rd19396;
	add.s64 	%rd19401, %rd19400, %rd19393;
	add.s64 	%rd19402, %rd19401, %rd19105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36566,%dummy}, %rd19388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36567}, %rd19388;
	}
	shf.r.wrap.b32 	%r36568, %r36567, %r36566, 28;
	shf.r.wrap.b32 	%r36569, %r36566, %r36567, 28;
	mov.b64 	%rd19403, {%r36569, %r36568};
	shf.l.wrap.b32 	%r36570, %r36566, %r36567, 30;
	shf.l.wrap.b32 	%r36571, %r36567, %r36566, 30;
	mov.b64 	%rd19404, {%r36571, %r36570};
	xor.b64  	%rd19405, %rd19404, %rd19403;
	shf.l.wrap.b32 	%r36572, %r36566, %r36567, 25;
	shf.l.wrap.b32 	%r36573, %r36567, %r36566, 25;
	mov.b64 	%rd19406, {%r36573, %r36572};
	xor.b64  	%rd19407, %rd19405, %rd19406;
	and.b64  	%rd19408, %rd19388, %rd19363;
	xor.b64  	%rd19409, %rd19388, %rd19363;
	and.b64  	%rd19410, %rd19409, %rd19338;
	or.b64  	%rd19411, %rd19410, %rd19408;
	add.s64 	%rd19412, %rd19401, %rd19411;
	add.s64 	%rd19413, %rd19412, %rd19407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36574,%dummy}, %rd19402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36575}, %rd19402;
	}
	shf.r.wrap.b32 	%r36576, %r36575, %r36574, 14;
	shf.r.wrap.b32 	%r36577, %r36574, %r36575, 14;
	mov.b64 	%rd19414, {%r36577, %r36576};
	shf.r.wrap.b32 	%r36578, %r36575, %r36574, 18;
	shf.r.wrap.b32 	%r36579, %r36574, %r36575, 18;
	mov.b64 	%rd19415, {%r36579, %r36578};
	xor.b64  	%rd19416, %rd19415, %rd19414;
	shf.l.wrap.b32 	%r36580, %r36574, %r36575, 23;
	shf.l.wrap.b32 	%r36581, %r36575, %r36574, 23;
	mov.b64 	%rd19417, {%r36581, %r36580};
	xor.b64  	%rd19418, %rd19416, %rd19417;
	xor.b64  	%rd19419, %rd19377, %rd19352;
	and.b64  	%rd19420, %rd19402, %rd19419;
	xor.b64  	%rd19421, %rd19420, %rd19352;
	add.s64 	%rd19422, %rd19327, %rd19170;
	ld.const.u64 	%rd19423, [k_sha512+416];
	add.s64 	%rd19424, %rd19422, %rd19423;
	add.s64 	%rd19425, %rd19424, %rd19421;
	add.s64 	%rd19426, %rd19425, %rd19418;
	add.s64 	%rd19427, %rd19426, %rd19338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36582,%dummy}, %rd19413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36583}, %rd19413;
	}
	shf.r.wrap.b32 	%r36584, %r36583, %r36582, 28;
	shf.r.wrap.b32 	%r36585, %r36582, %r36583, 28;
	mov.b64 	%rd19428, {%r36585, %r36584};
	shf.l.wrap.b32 	%r36586, %r36582, %r36583, 30;
	shf.l.wrap.b32 	%r36587, %r36583, %r36582, 30;
	mov.b64 	%rd19429, {%r36587, %r36586};
	xor.b64  	%rd19430, %rd19429, %rd19428;
	shf.l.wrap.b32 	%r36588, %r36582, %r36583, 25;
	shf.l.wrap.b32 	%r36589, %r36583, %r36582, 25;
	mov.b64 	%rd19431, {%r36589, %r36588};
	xor.b64  	%rd19432, %rd19430, %rd19431;
	and.b64  	%rd19433, %rd19413, %rd19388;
	xor.b64  	%rd19434, %rd19413, %rd19388;
	and.b64  	%rd19435, %rd19434, %rd19363;
	or.b64  	%rd19436, %rd19435, %rd19433;
	add.s64 	%rd19437, %rd19426, %rd19436;
	add.s64 	%rd19438, %rd19437, %rd19432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36590,%dummy}, %rd19427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36591}, %rd19427;
	}
	shf.r.wrap.b32 	%r36592, %r36591, %r36590, 14;
	shf.r.wrap.b32 	%r36593, %r36590, %r36591, 14;
	mov.b64 	%rd19439, {%r36593, %r36592};
	shf.r.wrap.b32 	%r36594, %r36591, %r36590, 18;
	shf.r.wrap.b32 	%r36595, %r36590, %r36591, 18;
	mov.b64 	%rd19440, {%r36595, %r36594};
	xor.b64  	%rd19441, %rd19440, %rd19439;
	shf.l.wrap.b32 	%r36596, %r36590, %r36591, 23;
	shf.l.wrap.b32 	%r36597, %r36591, %r36590, 23;
	mov.b64 	%rd19442, {%r36597, %r36596};
	xor.b64  	%rd19443, %rd19441, %rd19442;
	xor.b64  	%rd19444, %rd19402, %rd19377;
	and.b64  	%rd19445, %rd19427, %rd19444;
	xor.b64  	%rd19446, %rd19445, %rd19377;
	add.s64 	%rd19447, %rd19352, %rd19183;
	ld.const.u64 	%rd19448, [k_sha512+424];
	add.s64 	%rd19449, %rd19447, %rd19448;
	add.s64 	%rd19450, %rd19449, %rd19446;
	add.s64 	%rd19451, %rd19450, %rd19443;
	add.s64 	%rd19452, %rd19451, %rd19363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36598,%dummy}, %rd19438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36599}, %rd19438;
	}
	shf.r.wrap.b32 	%r36600, %r36599, %r36598, 28;
	shf.r.wrap.b32 	%r36601, %r36598, %r36599, 28;
	mov.b64 	%rd19453, {%r36601, %r36600};
	shf.l.wrap.b32 	%r36602, %r36598, %r36599, 30;
	shf.l.wrap.b32 	%r36603, %r36599, %r36598, 30;
	mov.b64 	%rd19454, {%r36603, %r36602};
	xor.b64  	%rd19455, %rd19454, %rd19453;
	shf.l.wrap.b32 	%r36604, %r36598, %r36599, 25;
	shf.l.wrap.b32 	%r36605, %r36599, %r36598, 25;
	mov.b64 	%rd19456, {%r36605, %r36604};
	xor.b64  	%rd19457, %rd19455, %rd19456;
	and.b64  	%rd19458, %rd19438, %rd19413;
	xor.b64  	%rd19459, %rd19438, %rd19413;
	and.b64  	%rd19460, %rd19459, %rd19388;
	or.b64  	%rd19461, %rd19460, %rd19458;
	add.s64 	%rd19462, %rd19451, %rd19461;
	add.s64 	%rd19463, %rd19462, %rd19457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36606,%dummy}, %rd19452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36607}, %rd19452;
	}
	shf.r.wrap.b32 	%r36608, %r36607, %r36606, 14;
	shf.r.wrap.b32 	%r36609, %r36606, %r36607, 14;
	mov.b64 	%rd19464, {%r36609, %r36608};
	shf.r.wrap.b32 	%r36610, %r36607, %r36606, 18;
	shf.r.wrap.b32 	%r36611, %r36606, %r36607, 18;
	mov.b64 	%rd19465, {%r36611, %r36610};
	xor.b64  	%rd19466, %rd19465, %rd19464;
	shf.l.wrap.b32 	%r36612, %r36606, %r36607, 23;
	shf.l.wrap.b32 	%r36613, %r36607, %r36606, 23;
	mov.b64 	%rd19467, {%r36613, %r36612};
	xor.b64  	%rd19468, %rd19466, %rd19467;
	xor.b64  	%rd19469, %rd19427, %rd19402;
	and.b64  	%rd19470, %rd19452, %rd19469;
	xor.b64  	%rd19471, %rd19470, %rd19402;
	add.s64 	%rd19472, %rd19377, %rd19196;
	ld.const.u64 	%rd19473, [k_sha512+432];
	add.s64 	%rd19474, %rd19472, %rd19473;
	add.s64 	%rd19475, %rd19474, %rd19471;
	add.s64 	%rd19476, %rd19475, %rd19468;
	add.s64 	%rd19477, %rd19476, %rd19388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36614,%dummy}, %rd19463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36615}, %rd19463;
	}
	shf.r.wrap.b32 	%r36616, %r36615, %r36614, 28;
	shf.r.wrap.b32 	%r36617, %r36614, %r36615, 28;
	mov.b64 	%rd19478, {%r36617, %r36616};
	shf.l.wrap.b32 	%r36618, %r36614, %r36615, 30;
	shf.l.wrap.b32 	%r36619, %r36615, %r36614, 30;
	mov.b64 	%rd19479, {%r36619, %r36618};
	xor.b64  	%rd19480, %rd19479, %rd19478;
	shf.l.wrap.b32 	%r36620, %r36614, %r36615, 25;
	shf.l.wrap.b32 	%r36621, %r36615, %r36614, 25;
	mov.b64 	%rd19481, {%r36621, %r36620};
	xor.b64  	%rd19482, %rd19480, %rd19481;
	and.b64  	%rd19483, %rd19463, %rd19438;
	xor.b64  	%rd19484, %rd19463, %rd19438;
	and.b64  	%rd19485, %rd19484, %rd19413;
	or.b64  	%rd19486, %rd19485, %rd19483;
	add.s64 	%rd19487, %rd19476, %rd19486;
	add.s64 	%rd19488, %rd19487, %rd19482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36622,%dummy}, %rd19477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36623}, %rd19477;
	}
	shf.r.wrap.b32 	%r36624, %r36623, %r36622, 14;
	shf.r.wrap.b32 	%r36625, %r36622, %r36623, 14;
	mov.b64 	%rd19489, {%r36625, %r36624};
	shf.r.wrap.b32 	%r36626, %r36623, %r36622, 18;
	shf.r.wrap.b32 	%r36627, %r36622, %r36623, 18;
	mov.b64 	%rd19490, {%r36627, %r36626};
	xor.b64  	%rd19491, %rd19490, %rd19489;
	shf.l.wrap.b32 	%r36628, %r36622, %r36623, 23;
	shf.l.wrap.b32 	%r36629, %r36623, %r36622, 23;
	mov.b64 	%rd19492, {%r36629, %r36628};
	xor.b64  	%rd19493, %rd19491, %rd19492;
	xor.b64  	%rd19494, %rd19452, %rd19427;
	and.b64  	%rd19495, %rd19477, %rd19494;
	xor.b64  	%rd19496, %rd19495, %rd19427;
	add.s64 	%rd19497, %rd19402, %rd19209;
	ld.const.u64 	%rd19498, [k_sha512+440];
	add.s64 	%rd19499, %rd19497, %rd19498;
	add.s64 	%rd19500, %rd19499, %rd19496;
	add.s64 	%rd19501, %rd19500, %rd19493;
	add.s64 	%rd19502, %rd19501, %rd19413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36630,%dummy}, %rd19488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36631}, %rd19488;
	}
	shf.r.wrap.b32 	%r36632, %r36631, %r36630, 28;
	shf.r.wrap.b32 	%r36633, %r36630, %r36631, 28;
	mov.b64 	%rd19503, {%r36633, %r36632};
	shf.l.wrap.b32 	%r36634, %r36630, %r36631, 30;
	shf.l.wrap.b32 	%r36635, %r36631, %r36630, 30;
	mov.b64 	%rd19504, {%r36635, %r36634};
	xor.b64  	%rd19505, %rd19504, %rd19503;
	shf.l.wrap.b32 	%r36636, %r36630, %r36631, 25;
	shf.l.wrap.b32 	%r36637, %r36631, %r36630, 25;
	mov.b64 	%rd19506, {%r36637, %r36636};
	xor.b64  	%rd19507, %rd19505, %rd19506;
	and.b64  	%rd19508, %rd19488, %rd19463;
	xor.b64  	%rd19509, %rd19488, %rd19463;
	and.b64  	%rd19510, %rd19509, %rd19438;
	or.b64  	%rd19511, %rd19510, %rd19508;
	add.s64 	%rd19512, %rd19501, %rd19511;
	add.s64 	%rd19513, %rd19512, %rd19507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36638,%dummy}, %rd19502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36639}, %rd19502;
	}
	shf.r.wrap.b32 	%r36640, %r36639, %r36638, 14;
	shf.r.wrap.b32 	%r36641, %r36638, %r36639, 14;
	mov.b64 	%rd19514, {%r36641, %r36640};
	shf.r.wrap.b32 	%r36642, %r36639, %r36638, 18;
	shf.r.wrap.b32 	%r36643, %r36638, %r36639, 18;
	mov.b64 	%rd19515, {%r36643, %r36642};
	xor.b64  	%rd19516, %rd19515, %rd19514;
	shf.l.wrap.b32 	%r36644, %r36638, %r36639, 23;
	shf.l.wrap.b32 	%r36645, %r36639, %r36638, 23;
	mov.b64 	%rd19517, {%r36645, %r36644};
	xor.b64  	%rd19518, %rd19516, %rd19517;
	xor.b64  	%rd19519, %rd19477, %rd19452;
	and.b64  	%rd19520, %rd19502, %rd19519;
	xor.b64  	%rd19521, %rd19520, %rd19452;
	add.s64 	%rd19522, %rd19427, %rd19222;
	ld.const.u64 	%rd19523, [k_sha512+448];
	add.s64 	%rd19524, %rd19522, %rd19523;
	add.s64 	%rd19525, %rd19524, %rd19521;
	add.s64 	%rd19526, %rd19525, %rd19518;
	add.s64 	%rd19527, %rd19526, %rd19438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36646,%dummy}, %rd19513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36647}, %rd19513;
	}
	shf.r.wrap.b32 	%r36648, %r36647, %r36646, 28;
	shf.r.wrap.b32 	%r36649, %r36646, %r36647, 28;
	mov.b64 	%rd19528, {%r36649, %r36648};
	shf.l.wrap.b32 	%r36650, %r36646, %r36647, 30;
	shf.l.wrap.b32 	%r36651, %r36647, %r36646, 30;
	mov.b64 	%rd19529, {%r36651, %r36650};
	xor.b64  	%rd19530, %rd19529, %rd19528;
	shf.l.wrap.b32 	%r36652, %r36646, %r36647, 25;
	shf.l.wrap.b32 	%r36653, %r36647, %r36646, 25;
	mov.b64 	%rd19531, {%r36653, %r36652};
	xor.b64  	%rd19532, %rd19530, %rd19531;
	and.b64  	%rd19533, %rd19513, %rd19488;
	xor.b64  	%rd19534, %rd19513, %rd19488;
	and.b64  	%rd19535, %rd19534, %rd19463;
	or.b64  	%rd19536, %rd19535, %rd19533;
	add.s64 	%rd19537, %rd19526, %rd19536;
	add.s64 	%rd19538, %rd19537, %rd19532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36654,%dummy}, %rd19527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36655}, %rd19527;
	}
	shf.r.wrap.b32 	%r36656, %r36655, %r36654, 14;
	shf.r.wrap.b32 	%r36657, %r36654, %r36655, 14;
	mov.b64 	%rd19539, {%r36657, %r36656};
	shf.r.wrap.b32 	%r36658, %r36655, %r36654, 18;
	shf.r.wrap.b32 	%r36659, %r36654, %r36655, 18;
	mov.b64 	%rd19540, {%r36659, %r36658};
	xor.b64  	%rd19541, %rd19540, %rd19539;
	shf.l.wrap.b32 	%r36660, %r36654, %r36655, 23;
	shf.l.wrap.b32 	%r36661, %r36655, %r36654, 23;
	mov.b64 	%rd19542, {%r36661, %r36660};
	xor.b64  	%rd19543, %rd19541, %rd19542;
	xor.b64  	%rd19544, %rd19502, %rd19477;
	and.b64  	%rd19545, %rd19527, %rd19544;
	xor.b64  	%rd19546, %rd19545, %rd19477;
	add.s64 	%rd19547, %rd19452, %rd19235;
	ld.const.u64 	%rd19548, [k_sha512+456];
	add.s64 	%rd19549, %rd19547, %rd19548;
	add.s64 	%rd19550, %rd19549, %rd19546;
	add.s64 	%rd19551, %rd19550, %rd19543;
	add.s64 	%rd19552, %rd19551, %rd19463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36662,%dummy}, %rd19538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36663}, %rd19538;
	}
	shf.r.wrap.b32 	%r36664, %r36663, %r36662, 28;
	shf.r.wrap.b32 	%r36665, %r36662, %r36663, 28;
	mov.b64 	%rd19553, {%r36665, %r36664};
	shf.l.wrap.b32 	%r36666, %r36662, %r36663, 30;
	shf.l.wrap.b32 	%r36667, %r36663, %r36662, 30;
	mov.b64 	%rd19554, {%r36667, %r36666};
	xor.b64  	%rd19555, %rd19554, %rd19553;
	shf.l.wrap.b32 	%r36668, %r36662, %r36663, 25;
	shf.l.wrap.b32 	%r36669, %r36663, %r36662, 25;
	mov.b64 	%rd19556, {%r36669, %r36668};
	xor.b64  	%rd19557, %rd19555, %rd19556;
	and.b64  	%rd19558, %rd19538, %rd19513;
	xor.b64  	%rd19559, %rd19538, %rd19513;
	and.b64  	%rd19560, %rd19559, %rd19488;
	or.b64  	%rd19561, %rd19560, %rd19558;
	add.s64 	%rd19562, %rd19551, %rd19561;
	add.s64 	%rd19563, %rd19562, %rd19557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36670,%dummy}, %rd19552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36671}, %rd19552;
	}
	shf.r.wrap.b32 	%r36672, %r36671, %r36670, 14;
	shf.r.wrap.b32 	%r36673, %r36670, %r36671, 14;
	mov.b64 	%rd19564, {%r36673, %r36672};
	shf.r.wrap.b32 	%r36674, %r36671, %r36670, 18;
	shf.r.wrap.b32 	%r36675, %r36670, %r36671, 18;
	mov.b64 	%rd19565, {%r36675, %r36674};
	xor.b64  	%rd19566, %rd19565, %rd19564;
	shf.l.wrap.b32 	%r36676, %r36670, %r36671, 23;
	shf.l.wrap.b32 	%r36677, %r36671, %r36670, 23;
	mov.b64 	%rd19567, {%r36677, %r36676};
	xor.b64  	%rd19568, %rd19566, %rd19567;
	xor.b64  	%rd19569, %rd19527, %rd19502;
	and.b64  	%rd19570, %rd19552, %rd19569;
	xor.b64  	%rd19571, %rd19570, %rd19502;
	add.s64 	%rd19572, %rd19477, %rd19248;
	ld.const.u64 	%rd19573, [k_sha512+464];
	add.s64 	%rd19574, %rd19572, %rd19573;
	add.s64 	%rd19575, %rd19574, %rd19571;
	add.s64 	%rd19576, %rd19575, %rd19568;
	add.s64 	%rd19577, %rd19576, %rd19488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36678,%dummy}, %rd19563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36679}, %rd19563;
	}
	shf.r.wrap.b32 	%r36680, %r36679, %r36678, 28;
	shf.r.wrap.b32 	%r36681, %r36678, %r36679, 28;
	mov.b64 	%rd19578, {%r36681, %r36680};
	shf.l.wrap.b32 	%r36682, %r36678, %r36679, 30;
	shf.l.wrap.b32 	%r36683, %r36679, %r36678, 30;
	mov.b64 	%rd19579, {%r36683, %r36682};
	xor.b64  	%rd19580, %rd19579, %rd19578;
	shf.l.wrap.b32 	%r36684, %r36678, %r36679, 25;
	shf.l.wrap.b32 	%r36685, %r36679, %r36678, 25;
	mov.b64 	%rd19581, {%r36685, %r36684};
	xor.b64  	%rd19582, %rd19580, %rd19581;
	and.b64  	%rd19583, %rd19563, %rd19538;
	xor.b64  	%rd19584, %rd19563, %rd19538;
	and.b64  	%rd19585, %rd19584, %rd19513;
	or.b64  	%rd19586, %rd19585, %rd19583;
	add.s64 	%rd19587, %rd19576, %rd19586;
	add.s64 	%rd19588, %rd19587, %rd19582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36686,%dummy}, %rd19577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36687}, %rd19577;
	}
	shf.r.wrap.b32 	%r36688, %r36687, %r36686, 14;
	shf.r.wrap.b32 	%r36689, %r36686, %r36687, 14;
	mov.b64 	%rd19589, {%r36689, %r36688};
	shf.r.wrap.b32 	%r36690, %r36687, %r36686, 18;
	shf.r.wrap.b32 	%r36691, %r36686, %r36687, 18;
	mov.b64 	%rd19590, {%r36691, %r36690};
	xor.b64  	%rd19591, %rd19590, %rd19589;
	shf.l.wrap.b32 	%r36692, %r36686, %r36687, 23;
	shf.l.wrap.b32 	%r36693, %r36687, %r36686, 23;
	mov.b64 	%rd19592, {%r36693, %r36692};
	xor.b64  	%rd19593, %rd19591, %rd19592;
	xor.b64  	%rd19594, %rd19552, %rd19527;
	and.b64  	%rd19595, %rd19577, %rd19594;
	xor.b64  	%rd19596, %rd19595, %rd19527;
	add.s64 	%rd19597, %rd19502, %rd19261;
	ld.const.u64 	%rd19598, [k_sha512+472];
	add.s64 	%rd19599, %rd19597, %rd19598;
	add.s64 	%rd19600, %rd19599, %rd19596;
	add.s64 	%rd19601, %rd19600, %rd19593;
	add.s64 	%rd19602, %rd19601, %rd19513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36694,%dummy}, %rd19588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36695}, %rd19588;
	}
	shf.r.wrap.b32 	%r36696, %r36695, %r36694, 28;
	shf.r.wrap.b32 	%r36697, %r36694, %r36695, 28;
	mov.b64 	%rd19603, {%r36697, %r36696};
	shf.l.wrap.b32 	%r36698, %r36694, %r36695, 30;
	shf.l.wrap.b32 	%r36699, %r36695, %r36694, 30;
	mov.b64 	%rd19604, {%r36699, %r36698};
	xor.b64  	%rd19605, %rd19604, %rd19603;
	shf.l.wrap.b32 	%r36700, %r36694, %r36695, 25;
	shf.l.wrap.b32 	%r36701, %r36695, %r36694, 25;
	mov.b64 	%rd19606, {%r36701, %r36700};
	xor.b64  	%rd19607, %rd19605, %rd19606;
	and.b64  	%rd19608, %rd19588, %rd19563;
	xor.b64  	%rd19609, %rd19588, %rd19563;
	and.b64  	%rd19610, %rd19609, %rd19538;
	or.b64  	%rd19611, %rd19610, %rd19608;
	add.s64 	%rd19612, %rd19601, %rd19611;
	add.s64 	%rd19613, %rd19612, %rd19607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36702,%dummy}, %rd19602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36703}, %rd19602;
	}
	shf.r.wrap.b32 	%r36704, %r36703, %r36702, 14;
	shf.r.wrap.b32 	%r36705, %r36702, %r36703, 14;
	mov.b64 	%rd19614, {%r36705, %r36704};
	shf.r.wrap.b32 	%r36706, %r36703, %r36702, 18;
	shf.r.wrap.b32 	%r36707, %r36702, %r36703, 18;
	mov.b64 	%rd19615, {%r36707, %r36706};
	xor.b64  	%rd19616, %rd19615, %rd19614;
	shf.l.wrap.b32 	%r36708, %r36702, %r36703, 23;
	shf.l.wrap.b32 	%r36709, %r36703, %r36702, 23;
	mov.b64 	%rd19617, {%r36709, %r36708};
	xor.b64  	%rd19618, %rd19616, %rd19617;
	xor.b64  	%rd19619, %rd19577, %rd19552;
	and.b64  	%rd19620, %rd19602, %rd19619;
	xor.b64  	%rd19621, %rd19620, %rd19552;
	add.s64 	%rd19622, %rd19527, %rd19274;
	ld.const.u64 	%rd19623, [k_sha512+480];
	add.s64 	%rd19624, %rd19622, %rd19623;
	add.s64 	%rd19625, %rd19624, %rd19621;
	add.s64 	%rd19626, %rd19625, %rd19618;
	add.s64 	%rd19627, %rd19626, %rd19538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36710,%dummy}, %rd19613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36711}, %rd19613;
	}
	shf.r.wrap.b32 	%r36712, %r36711, %r36710, 28;
	shf.r.wrap.b32 	%r36713, %r36710, %r36711, 28;
	mov.b64 	%rd19628, {%r36713, %r36712};
	shf.l.wrap.b32 	%r36714, %r36710, %r36711, 30;
	shf.l.wrap.b32 	%r36715, %r36711, %r36710, 30;
	mov.b64 	%rd19629, {%r36715, %r36714};
	xor.b64  	%rd19630, %rd19629, %rd19628;
	shf.l.wrap.b32 	%r36716, %r36710, %r36711, 25;
	shf.l.wrap.b32 	%r36717, %r36711, %r36710, 25;
	mov.b64 	%rd19631, {%r36717, %r36716};
	xor.b64  	%rd19632, %rd19630, %rd19631;
	and.b64  	%rd19633, %rd19613, %rd19588;
	xor.b64  	%rd19634, %rd19613, %rd19588;
	and.b64  	%rd19635, %rd19634, %rd19563;
	or.b64  	%rd19636, %rd19635, %rd19633;
	add.s64 	%rd19637, %rd19626, %rd19636;
	add.s64 	%rd19638, %rd19637, %rd19632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36718,%dummy}, %rd19627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36719}, %rd19627;
	}
	shf.r.wrap.b32 	%r36720, %r36719, %r36718, 14;
	shf.r.wrap.b32 	%r36721, %r36718, %r36719, 14;
	mov.b64 	%rd19639, {%r36721, %r36720};
	shf.r.wrap.b32 	%r36722, %r36719, %r36718, 18;
	shf.r.wrap.b32 	%r36723, %r36718, %r36719, 18;
	mov.b64 	%rd19640, {%r36723, %r36722};
	xor.b64  	%rd19641, %rd19640, %rd19639;
	shf.l.wrap.b32 	%r36724, %r36718, %r36719, 23;
	shf.l.wrap.b32 	%r36725, %r36719, %r36718, 23;
	mov.b64 	%rd19642, {%r36725, %r36724};
	xor.b64  	%rd19643, %rd19641, %rd19642;
	xor.b64  	%rd19644, %rd19602, %rd19577;
	and.b64  	%rd19645, %rd19627, %rd19644;
	xor.b64  	%rd19646, %rd19645, %rd19577;
	add.s64 	%rd19647, %rd19552, %rd19287;
	ld.const.u64 	%rd19648, [k_sha512+488];
	add.s64 	%rd19649, %rd19647, %rd19648;
	add.s64 	%rd19650, %rd19649, %rd19646;
	add.s64 	%rd19651, %rd19650, %rd19643;
	add.s64 	%rd19652, %rd19651, %rd19563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36726,%dummy}, %rd19638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36727}, %rd19638;
	}
	shf.r.wrap.b32 	%r36728, %r36727, %r36726, 28;
	shf.r.wrap.b32 	%r36729, %r36726, %r36727, 28;
	mov.b64 	%rd19653, {%r36729, %r36728};
	shf.l.wrap.b32 	%r36730, %r36726, %r36727, 30;
	shf.l.wrap.b32 	%r36731, %r36727, %r36726, 30;
	mov.b64 	%rd19654, {%r36731, %r36730};
	xor.b64  	%rd19655, %rd19654, %rd19653;
	shf.l.wrap.b32 	%r36732, %r36726, %r36727, 25;
	shf.l.wrap.b32 	%r36733, %r36727, %r36726, 25;
	mov.b64 	%rd19656, {%r36733, %r36732};
	xor.b64  	%rd19657, %rd19655, %rd19656;
	and.b64  	%rd19658, %rd19638, %rd19613;
	xor.b64  	%rd19659, %rd19638, %rd19613;
	and.b64  	%rd19660, %rd19659, %rd19588;
	or.b64  	%rd19661, %rd19660, %rd19658;
	add.s64 	%rd19662, %rd19651, %rd19661;
	add.s64 	%rd19663, %rd19662, %rd19657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36734,%dummy}, %rd19652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36735}, %rd19652;
	}
	shf.r.wrap.b32 	%r36736, %r36735, %r36734, 14;
	shf.r.wrap.b32 	%r36737, %r36734, %r36735, 14;
	mov.b64 	%rd19664, {%r36737, %r36736};
	shf.r.wrap.b32 	%r36738, %r36735, %r36734, 18;
	shf.r.wrap.b32 	%r36739, %r36734, %r36735, 18;
	mov.b64 	%rd19665, {%r36739, %r36738};
	xor.b64  	%rd19666, %rd19665, %rd19664;
	shf.l.wrap.b32 	%r36740, %r36734, %r36735, 23;
	shf.l.wrap.b32 	%r36741, %r36735, %r36734, 23;
	mov.b64 	%rd19667, {%r36741, %r36740};
	xor.b64  	%rd19668, %rd19666, %rd19667;
	xor.b64  	%rd19669, %rd19627, %rd19602;
	and.b64  	%rd19670, %rd19652, %rd19669;
	xor.b64  	%rd19671, %rd19670, %rd19602;
	add.s64 	%rd19672, %rd19577, %rd19300;
	ld.const.u64 	%rd19673, [k_sha512+496];
	add.s64 	%rd19674, %rd19672, %rd19673;
	add.s64 	%rd19675, %rd19674, %rd19671;
	add.s64 	%rd19676, %rd19675, %rd19668;
	add.s64 	%rd19677, %rd19676, %rd19588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36742,%dummy}, %rd19663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36743}, %rd19663;
	}
	shf.r.wrap.b32 	%r36744, %r36743, %r36742, 28;
	shf.r.wrap.b32 	%r36745, %r36742, %r36743, 28;
	mov.b64 	%rd19678, {%r36745, %r36744};
	shf.l.wrap.b32 	%r36746, %r36742, %r36743, 30;
	shf.l.wrap.b32 	%r36747, %r36743, %r36742, 30;
	mov.b64 	%rd19679, {%r36747, %r36746};
	xor.b64  	%rd19680, %rd19679, %rd19678;
	shf.l.wrap.b32 	%r36748, %r36742, %r36743, 25;
	shf.l.wrap.b32 	%r36749, %r36743, %r36742, 25;
	mov.b64 	%rd19681, {%r36749, %r36748};
	xor.b64  	%rd19682, %rd19680, %rd19681;
	and.b64  	%rd19683, %rd19663, %rd19638;
	xor.b64  	%rd19684, %rd19663, %rd19638;
	and.b64  	%rd19685, %rd19684, %rd19613;
	or.b64  	%rd19686, %rd19685, %rd19683;
	add.s64 	%rd19687, %rd19676, %rd19686;
	add.s64 	%rd19688, %rd19687, %rd19682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36750,%dummy}, %rd19677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36751}, %rd19677;
	}
	shf.r.wrap.b32 	%r36752, %r36751, %r36750, 14;
	shf.r.wrap.b32 	%r36753, %r36750, %r36751, 14;
	mov.b64 	%rd19689, {%r36753, %r36752};
	shf.r.wrap.b32 	%r36754, %r36751, %r36750, 18;
	shf.r.wrap.b32 	%r36755, %r36750, %r36751, 18;
	mov.b64 	%rd19690, {%r36755, %r36754};
	xor.b64  	%rd19691, %rd19690, %rd19689;
	shf.l.wrap.b32 	%r36756, %r36750, %r36751, 23;
	shf.l.wrap.b32 	%r36757, %r36751, %r36750, 23;
	mov.b64 	%rd19692, {%r36757, %r36756};
	xor.b64  	%rd19693, %rd19691, %rd19692;
	xor.b64  	%rd19694, %rd19652, %rd19627;
	and.b64  	%rd19695, %rd19677, %rd19694;
	xor.b64  	%rd19696, %rd19695, %rd19627;
	add.s64 	%rd19697, %rd19602, %rd19313;
	ld.const.u64 	%rd19698, [k_sha512+504];
	add.s64 	%rd19699, %rd19697, %rd19698;
	add.s64 	%rd19700, %rd19699, %rd19696;
	add.s64 	%rd19701, %rd19700, %rd19693;
	add.s64 	%rd19702, %rd19701, %rd19613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36758,%dummy}, %rd19688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36759}, %rd19688;
	}
	shf.r.wrap.b32 	%r36760, %r36759, %r36758, 28;
	shf.r.wrap.b32 	%r36761, %r36758, %r36759, 28;
	mov.b64 	%rd19703, {%r36761, %r36760};
	shf.l.wrap.b32 	%r36762, %r36758, %r36759, 30;
	shf.l.wrap.b32 	%r36763, %r36759, %r36758, 30;
	mov.b64 	%rd19704, {%r36763, %r36762};
	xor.b64  	%rd19705, %rd19704, %rd19703;
	shf.l.wrap.b32 	%r36764, %r36758, %r36759, 25;
	shf.l.wrap.b32 	%r36765, %r36759, %r36758, 25;
	mov.b64 	%rd19706, {%r36765, %r36764};
	xor.b64  	%rd19707, %rd19705, %rd19706;
	and.b64  	%rd19708, %rd19688, %rd19663;
	xor.b64  	%rd19709, %rd19688, %rd19663;
	and.b64  	%rd19710, %rd19709, %rd19638;
	or.b64  	%rd19711, %rd19710, %rd19708;
	add.s64 	%rd19712, %rd19701, %rd19711;
	add.s64 	%rd19713, %rd19712, %rd19707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36766,%dummy}, %rd19300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36767}, %rd19300;
	}
	shf.r.wrap.b32 	%r36768, %r36767, %r36766, 19;
	shf.r.wrap.b32 	%r36769, %r36766, %r36767, 19;
	mov.b64 	%rd19714, {%r36769, %r36768};
	shf.l.wrap.b32 	%r36770, %r36766, %r36767, 3;
	shf.l.wrap.b32 	%r36771, %r36767, %r36766, 3;
	mov.b64 	%rd19715, {%r36771, %r36770};
	shr.u64 	%rd19716, %rd19300, 6;
	xor.b64  	%rd19717, %rd19714, %rd19716;
	xor.b64  	%rd19718, %rd19717, %rd19715;
	shf.r.wrap.b32 	%r36772, %r36381, %r36380, 1;
	shf.r.wrap.b32 	%r36773, %r36380, %r36381, 1;
	mov.b64 	%rd19719, {%r36773, %r36772};
	shf.r.wrap.b32 	%r36774, %r36381, %r36380, 8;
	shf.r.wrap.b32 	%r36775, %r36380, %r36381, 8;
	mov.b64 	%rd19720, {%r36775, %r36774};
	shr.u64 	%rd19721, %rd19131, 7;
	xor.b64  	%rd19722, %rd19719, %rd19721;
	xor.b64  	%rd19723, %rd19722, %rd19720;
	add.s64 	%rd19724, %rd19235, %rd19118;
	add.s64 	%rd19725, %rd19724, %rd19718;
	add.s64 	%rd19726, %rd19725, %rd19723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36776,%dummy}, %rd19313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36777}, %rd19313;
	}
	shf.r.wrap.b32 	%r36778, %r36777, %r36776, 19;
	shf.r.wrap.b32 	%r36779, %r36776, %r36777, 19;
	mov.b64 	%rd19727, {%r36779, %r36778};
	shf.l.wrap.b32 	%r36780, %r36776, %r36777, 3;
	shf.l.wrap.b32 	%r36781, %r36777, %r36776, 3;
	mov.b64 	%rd19728, {%r36781, %r36780};
	shr.u64 	%rd19729, %rd19313, 6;
	xor.b64  	%rd19730, %rd19727, %rd19729;
	xor.b64  	%rd19731, %rd19730, %rd19728;
	shf.r.wrap.b32 	%r36782, %r36391, %r36390, 1;
	shf.r.wrap.b32 	%r36783, %r36390, %r36391, 1;
	mov.b64 	%rd19732, {%r36783, %r36782};
	shf.r.wrap.b32 	%r36784, %r36391, %r36390, 8;
	shf.r.wrap.b32 	%r36785, %r36390, %r36391, 8;
	mov.b64 	%rd19733, {%r36785, %r36784};
	shr.u64 	%rd19734, %rd19144, 7;
	xor.b64  	%rd19735, %rd19732, %rd19734;
	xor.b64  	%rd19736, %rd19735, %rd19733;
	add.s64 	%rd19737, %rd19248, %rd19131;
	add.s64 	%rd19738, %rd19737, %rd19731;
	add.s64 	%rd19739, %rd19738, %rd19736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36786,%dummy}, %rd19726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36787}, %rd19726;
	}
	shf.r.wrap.b32 	%r36788, %r36787, %r36786, 19;
	shf.r.wrap.b32 	%r36789, %r36786, %r36787, 19;
	mov.b64 	%rd19740, {%r36789, %r36788};
	shf.l.wrap.b32 	%r36790, %r36786, %r36787, 3;
	shf.l.wrap.b32 	%r36791, %r36787, %r36786, 3;
	mov.b64 	%rd19741, {%r36791, %r36790};
	shr.u64 	%rd19742, %rd19726, 6;
	xor.b64  	%rd19743, %rd19740, %rd19742;
	xor.b64  	%rd19744, %rd19743, %rd19741;
	shf.r.wrap.b32 	%r36792, %r36401, %r36400, 1;
	shf.r.wrap.b32 	%r36793, %r36400, %r36401, 1;
	mov.b64 	%rd19745, {%r36793, %r36792};
	shf.r.wrap.b32 	%r36794, %r36401, %r36400, 8;
	shf.r.wrap.b32 	%r36795, %r36400, %r36401, 8;
	mov.b64 	%rd19746, {%r36795, %r36794};
	shr.u64 	%rd19747, %rd19157, 7;
	xor.b64  	%rd19748, %rd19745, %rd19747;
	xor.b64  	%rd19749, %rd19748, %rd19746;
	add.s64 	%rd19750, %rd19261, %rd19144;
	add.s64 	%rd19751, %rd19750, %rd19744;
	add.s64 	%rd19752, %rd19751, %rd19749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36796,%dummy}, %rd19739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36797}, %rd19739;
	}
	shf.r.wrap.b32 	%r36798, %r36797, %r36796, 19;
	shf.r.wrap.b32 	%r36799, %r36796, %r36797, 19;
	mov.b64 	%rd19753, {%r36799, %r36798};
	shf.l.wrap.b32 	%r36800, %r36796, %r36797, 3;
	shf.l.wrap.b32 	%r36801, %r36797, %r36796, 3;
	mov.b64 	%rd19754, {%r36801, %r36800};
	shr.u64 	%rd19755, %rd19739, 6;
	xor.b64  	%rd19756, %rd19753, %rd19755;
	xor.b64  	%rd19757, %rd19756, %rd19754;
	shf.r.wrap.b32 	%r36802, %r36411, %r36410, 1;
	shf.r.wrap.b32 	%r36803, %r36410, %r36411, 1;
	mov.b64 	%rd19758, {%r36803, %r36802};
	shf.r.wrap.b32 	%r36804, %r36411, %r36410, 8;
	shf.r.wrap.b32 	%r36805, %r36410, %r36411, 8;
	mov.b64 	%rd19759, {%r36805, %r36804};
	shr.u64 	%rd19760, %rd19170, 7;
	xor.b64  	%rd19761, %rd19758, %rd19760;
	xor.b64  	%rd19762, %rd19761, %rd19759;
	add.s64 	%rd19763, %rd19274, %rd19157;
	add.s64 	%rd19764, %rd19763, %rd19757;
	add.s64 	%rd19765, %rd19764, %rd19762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36806,%dummy}, %rd19752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36807}, %rd19752;
	}
	shf.r.wrap.b32 	%r36808, %r36807, %r36806, 19;
	shf.r.wrap.b32 	%r36809, %r36806, %r36807, 19;
	mov.b64 	%rd19766, {%r36809, %r36808};
	shf.l.wrap.b32 	%r36810, %r36806, %r36807, 3;
	shf.l.wrap.b32 	%r36811, %r36807, %r36806, 3;
	mov.b64 	%rd19767, {%r36811, %r36810};
	shr.u64 	%rd19768, %rd19752, 6;
	xor.b64  	%rd19769, %rd19766, %rd19768;
	xor.b64  	%rd19770, %rd19769, %rd19767;
	shf.r.wrap.b32 	%r36812, %r36421, %r36420, 1;
	shf.r.wrap.b32 	%r36813, %r36420, %r36421, 1;
	mov.b64 	%rd19771, {%r36813, %r36812};
	shf.r.wrap.b32 	%r36814, %r36421, %r36420, 8;
	shf.r.wrap.b32 	%r36815, %r36420, %r36421, 8;
	mov.b64 	%rd19772, {%r36815, %r36814};
	shr.u64 	%rd19773, %rd19183, 7;
	xor.b64  	%rd19774, %rd19771, %rd19773;
	xor.b64  	%rd19775, %rd19774, %rd19772;
	add.s64 	%rd19776, %rd19287, %rd19170;
	add.s64 	%rd19777, %rd19776, %rd19770;
	add.s64 	%rd19778, %rd19777, %rd19775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36816,%dummy}, %rd19765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36817}, %rd19765;
	}
	shf.r.wrap.b32 	%r36818, %r36817, %r36816, 19;
	shf.r.wrap.b32 	%r36819, %r36816, %r36817, 19;
	mov.b64 	%rd19779, {%r36819, %r36818};
	shf.l.wrap.b32 	%r36820, %r36816, %r36817, 3;
	shf.l.wrap.b32 	%r36821, %r36817, %r36816, 3;
	mov.b64 	%rd19780, {%r36821, %r36820};
	shr.u64 	%rd19781, %rd19765, 6;
	xor.b64  	%rd19782, %rd19779, %rd19781;
	xor.b64  	%rd19783, %rd19782, %rd19780;
	shf.r.wrap.b32 	%r36822, %r36431, %r36430, 1;
	shf.r.wrap.b32 	%r36823, %r36430, %r36431, 1;
	mov.b64 	%rd19784, {%r36823, %r36822};
	shf.r.wrap.b32 	%r36824, %r36431, %r36430, 8;
	shf.r.wrap.b32 	%r36825, %r36430, %r36431, 8;
	mov.b64 	%rd19785, {%r36825, %r36824};
	shr.u64 	%rd19786, %rd19196, 7;
	xor.b64  	%rd19787, %rd19784, %rd19786;
	xor.b64  	%rd19788, %rd19787, %rd19785;
	add.s64 	%rd19789, %rd19300, %rd19183;
	add.s64 	%rd19790, %rd19789, %rd19783;
	add.s64 	%rd19791, %rd19790, %rd19788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36826,%dummy}, %rd19778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36827}, %rd19778;
	}
	shf.r.wrap.b32 	%r36828, %r36827, %r36826, 19;
	shf.r.wrap.b32 	%r36829, %r36826, %r36827, 19;
	mov.b64 	%rd19792, {%r36829, %r36828};
	shf.l.wrap.b32 	%r36830, %r36826, %r36827, 3;
	shf.l.wrap.b32 	%r36831, %r36827, %r36826, 3;
	mov.b64 	%rd19793, {%r36831, %r36830};
	shr.u64 	%rd19794, %rd19778, 6;
	xor.b64  	%rd19795, %rd19792, %rd19794;
	xor.b64  	%rd19796, %rd19795, %rd19793;
	shf.r.wrap.b32 	%r36832, %r36441, %r36440, 1;
	shf.r.wrap.b32 	%r36833, %r36440, %r36441, 1;
	mov.b64 	%rd19797, {%r36833, %r36832};
	shf.r.wrap.b32 	%r36834, %r36441, %r36440, 8;
	shf.r.wrap.b32 	%r36835, %r36440, %r36441, 8;
	mov.b64 	%rd19798, {%r36835, %r36834};
	shr.u64 	%rd19799, %rd19209, 7;
	xor.b64  	%rd19800, %rd19797, %rd19799;
	xor.b64  	%rd19801, %rd19800, %rd19798;
	add.s64 	%rd19802, %rd19313, %rd19196;
	add.s64 	%rd19803, %rd19802, %rd19796;
	add.s64 	%rd19804, %rd19803, %rd19801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36836,%dummy}, %rd19791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36837}, %rd19791;
	}
	shf.r.wrap.b32 	%r36838, %r36837, %r36836, 19;
	shf.r.wrap.b32 	%r36839, %r36836, %r36837, 19;
	mov.b64 	%rd19805, {%r36839, %r36838};
	shf.l.wrap.b32 	%r36840, %r36836, %r36837, 3;
	shf.l.wrap.b32 	%r36841, %r36837, %r36836, 3;
	mov.b64 	%rd19806, {%r36841, %r36840};
	shr.u64 	%rd19807, %rd19791, 6;
	xor.b64  	%rd19808, %rd19805, %rd19807;
	xor.b64  	%rd19809, %rd19808, %rd19806;
	shf.r.wrap.b32 	%r36842, %r36451, %r36450, 1;
	shf.r.wrap.b32 	%r36843, %r36450, %r36451, 1;
	mov.b64 	%rd19810, {%r36843, %r36842};
	shf.r.wrap.b32 	%r36844, %r36451, %r36450, 8;
	shf.r.wrap.b32 	%r36845, %r36450, %r36451, 8;
	mov.b64 	%rd19811, {%r36845, %r36844};
	shr.u64 	%rd19812, %rd19222, 7;
	xor.b64  	%rd19813, %rd19810, %rd19812;
	xor.b64  	%rd19814, %rd19813, %rd19811;
	add.s64 	%rd19815, %rd19726, %rd19209;
	add.s64 	%rd19816, %rd19815, %rd19809;
	add.s64 	%rd19817, %rd19816, %rd19814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36846,%dummy}, %rd19804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36847}, %rd19804;
	}
	shf.r.wrap.b32 	%r36848, %r36847, %r36846, 19;
	shf.r.wrap.b32 	%r36849, %r36846, %r36847, 19;
	mov.b64 	%rd19818, {%r36849, %r36848};
	shf.l.wrap.b32 	%r36850, %r36846, %r36847, 3;
	shf.l.wrap.b32 	%r36851, %r36847, %r36846, 3;
	mov.b64 	%rd19819, {%r36851, %r36850};
	shr.u64 	%rd19820, %rd19804, 6;
	xor.b64  	%rd19821, %rd19818, %rd19820;
	xor.b64  	%rd19822, %rd19821, %rd19819;
	shf.r.wrap.b32 	%r36852, %r36461, %r36460, 1;
	shf.r.wrap.b32 	%r36853, %r36460, %r36461, 1;
	mov.b64 	%rd19823, {%r36853, %r36852};
	shf.r.wrap.b32 	%r36854, %r36461, %r36460, 8;
	shf.r.wrap.b32 	%r36855, %r36460, %r36461, 8;
	mov.b64 	%rd19824, {%r36855, %r36854};
	shr.u64 	%rd19825, %rd19235, 7;
	xor.b64  	%rd19826, %rd19823, %rd19825;
	xor.b64  	%rd19827, %rd19826, %rd19824;
	add.s64 	%rd19828, %rd19739, %rd19222;
	add.s64 	%rd19829, %rd19828, %rd19822;
	add.s64 	%rd19830, %rd19829, %rd19827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36856,%dummy}, %rd19817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36857}, %rd19817;
	}
	shf.r.wrap.b32 	%r36858, %r36857, %r36856, 19;
	shf.r.wrap.b32 	%r36859, %r36856, %r36857, 19;
	mov.b64 	%rd19831, {%r36859, %r36858};
	shf.l.wrap.b32 	%r36860, %r36856, %r36857, 3;
	shf.l.wrap.b32 	%r36861, %r36857, %r36856, 3;
	mov.b64 	%rd19832, {%r36861, %r36860};
	shr.u64 	%rd19833, %rd19817, 6;
	xor.b64  	%rd19834, %rd19831, %rd19833;
	xor.b64  	%rd19835, %rd19834, %rd19832;
	shf.r.wrap.b32 	%r36862, %r36471, %r36470, 1;
	shf.r.wrap.b32 	%r36863, %r36470, %r36471, 1;
	mov.b64 	%rd19836, {%r36863, %r36862};
	shf.r.wrap.b32 	%r36864, %r36471, %r36470, 8;
	shf.r.wrap.b32 	%r36865, %r36470, %r36471, 8;
	mov.b64 	%rd19837, {%r36865, %r36864};
	shr.u64 	%rd19838, %rd19248, 7;
	xor.b64  	%rd19839, %rd19836, %rd19838;
	xor.b64  	%rd19840, %rd19839, %rd19837;
	add.s64 	%rd19841, %rd19752, %rd19235;
	add.s64 	%rd19842, %rd19841, %rd19835;
	add.s64 	%rd19843, %rd19842, %rd19840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36866,%dummy}, %rd19830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36867}, %rd19830;
	}
	shf.r.wrap.b32 	%r36868, %r36867, %r36866, 19;
	shf.r.wrap.b32 	%r36869, %r36866, %r36867, 19;
	mov.b64 	%rd19844, {%r36869, %r36868};
	shf.l.wrap.b32 	%r36870, %r36866, %r36867, 3;
	shf.l.wrap.b32 	%r36871, %r36867, %r36866, 3;
	mov.b64 	%rd19845, {%r36871, %r36870};
	shr.u64 	%rd19846, %rd19830, 6;
	xor.b64  	%rd19847, %rd19844, %rd19846;
	xor.b64  	%rd19848, %rd19847, %rd19845;
	shf.r.wrap.b32 	%r36872, %r36481, %r36480, 1;
	shf.r.wrap.b32 	%r36873, %r36480, %r36481, 1;
	mov.b64 	%rd19849, {%r36873, %r36872};
	shf.r.wrap.b32 	%r36874, %r36481, %r36480, 8;
	shf.r.wrap.b32 	%r36875, %r36480, %r36481, 8;
	mov.b64 	%rd19850, {%r36875, %r36874};
	shr.u64 	%rd19851, %rd19261, 7;
	xor.b64  	%rd19852, %rd19849, %rd19851;
	xor.b64  	%rd19853, %rd19852, %rd19850;
	add.s64 	%rd19854, %rd19765, %rd19248;
	add.s64 	%rd19855, %rd19854, %rd19848;
	add.s64 	%rd19856, %rd19855, %rd19853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36876,%dummy}, %rd19843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36877}, %rd19843;
	}
	shf.r.wrap.b32 	%r36878, %r36877, %r36876, 19;
	shf.r.wrap.b32 	%r36879, %r36876, %r36877, 19;
	mov.b64 	%rd19857, {%r36879, %r36878};
	shf.l.wrap.b32 	%r36880, %r36876, %r36877, 3;
	shf.l.wrap.b32 	%r36881, %r36877, %r36876, 3;
	mov.b64 	%rd19858, {%r36881, %r36880};
	shr.u64 	%rd19859, %rd19843, 6;
	xor.b64  	%rd19860, %rd19857, %rd19859;
	xor.b64  	%rd19861, %rd19860, %rd19858;
	shf.r.wrap.b32 	%r36882, %r36491, %r36490, 1;
	shf.r.wrap.b32 	%r36883, %r36490, %r36491, 1;
	mov.b64 	%rd19862, {%r36883, %r36882};
	shf.r.wrap.b32 	%r36884, %r36491, %r36490, 8;
	shf.r.wrap.b32 	%r36885, %r36490, %r36491, 8;
	mov.b64 	%rd19863, {%r36885, %r36884};
	shr.u64 	%rd19864, %rd19274, 7;
	xor.b64  	%rd19865, %rd19862, %rd19864;
	xor.b64  	%rd19866, %rd19865, %rd19863;
	add.s64 	%rd19867, %rd19778, %rd19261;
	add.s64 	%rd19868, %rd19867, %rd19861;
	add.s64 	%rd19869, %rd19868, %rd19866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36886,%dummy}, %rd19856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36887}, %rd19856;
	}
	shf.r.wrap.b32 	%r36888, %r36887, %r36886, 19;
	shf.r.wrap.b32 	%r36889, %r36886, %r36887, 19;
	mov.b64 	%rd19870, {%r36889, %r36888};
	shf.l.wrap.b32 	%r36890, %r36886, %r36887, 3;
	shf.l.wrap.b32 	%r36891, %r36887, %r36886, 3;
	mov.b64 	%rd19871, {%r36891, %r36890};
	shr.u64 	%rd19872, %rd19856, 6;
	xor.b64  	%rd19873, %rd19870, %rd19872;
	xor.b64  	%rd19874, %rd19873, %rd19871;
	shf.r.wrap.b32 	%r36892, %r36501, %r36500, 1;
	shf.r.wrap.b32 	%r36893, %r36500, %r36501, 1;
	mov.b64 	%rd19875, {%r36893, %r36892};
	shf.r.wrap.b32 	%r36894, %r36501, %r36500, 8;
	shf.r.wrap.b32 	%r36895, %r36500, %r36501, 8;
	mov.b64 	%rd19876, {%r36895, %r36894};
	shr.u64 	%rd19877, %rd19287, 7;
	xor.b64  	%rd19878, %rd19875, %rd19877;
	xor.b64  	%rd19879, %rd19878, %rd19876;
	add.s64 	%rd19880, %rd19791, %rd19274;
	add.s64 	%rd19881, %rd19880, %rd19874;
	add.s64 	%rd19882, %rd19881, %rd19879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36896,%dummy}, %rd19869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36897}, %rd19869;
	}
	shf.r.wrap.b32 	%r36898, %r36897, %r36896, 19;
	shf.r.wrap.b32 	%r36899, %r36896, %r36897, 19;
	mov.b64 	%rd19883, {%r36899, %r36898};
	shf.l.wrap.b32 	%r36900, %r36896, %r36897, 3;
	shf.l.wrap.b32 	%r36901, %r36897, %r36896, 3;
	mov.b64 	%rd19884, {%r36901, %r36900};
	shr.u64 	%rd19885, %rd19869, 6;
	xor.b64  	%rd19886, %rd19883, %rd19885;
	xor.b64  	%rd19887, %rd19886, %rd19884;
	shf.r.wrap.b32 	%r36902, %r36767, %r36766, 1;
	shf.r.wrap.b32 	%r36903, %r36766, %r36767, 1;
	mov.b64 	%rd19888, {%r36903, %r36902};
	shf.r.wrap.b32 	%r36904, %r36767, %r36766, 8;
	shf.r.wrap.b32 	%r36905, %r36766, %r36767, 8;
	mov.b64 	%rd19889, {%r36905, %r36904};
	shr.u64 	%rd19890, %rd19300, 7;
	xor.b64  	%rd19891, %rd19888, %rd19890;
	xor.b64  	%rd19892, %rd19891, %rd19889;
	add.s64 	%rd19893, %rd19804, %rd19287;
	add.s64 	%rd19894, %rd19893, %rd19887;
	add.s64 	%rd19895, %rd19894, %rd19892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36906,%dummy}, %rd19882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36907}, %rd19882;
	}
	shf.r.wrap.b32 	%r36908, %r36907, %r36906, 19;
	shf.r.wrap.b32 	%r36909, %r36906, %r36907, 19;
	mov.b64 	%rd19896, {%r36909, %r36908};
	shf.l.wrap.b32 	%r36910, %r36906, %r36907, 3;
	shf.l.wrap.b32 	%r36911, %r36907, %r36906, 3;
	mov.b64 	%rd19897, {%r36911, %r36910};
	shr.u64 	%rd19898, %rd19882, 6;
	xor.b64  	%rd19899, %rd19896, %rd19898;
	xor.b64  	%rd19900, %rd19899, %rd19897;
	shf.r.wrap.b32 	%r36912, %r36777, %r36776, 1;
	shf.r.wrap.b32 	%r36913, %r36776, %r36777, 1;
	mov.b64 	%rd19901, {%r36913, %r36912};
	shf.r.wrap.b32 	%r36914, %r36777, %r36776, 8;
	shf.r.wrap.b32 	%r36915, %r36776, %r36777, 8;
	mov.b64 	%rd19902, {%r36915, %r36914};
	shr.u64 	%rd19903, %rd19313, 7;
	xor.b64  	%rd19904, %rd19901, %rd19903;
	xor.b64  	%rd19905, %rd19904, %rd19902;
	add.s64 	%rd19906, %rd19817, %rd19300;
	add.s64 	%rd19907, %rd19906, %rd19900;
	add.s64 	%rd19908, %rd19907, %rd19905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36916,%dummy}, %rd19895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36917}, %rd19895;
	}
	shf.r.wrap.b32 	%r36918, %r36917, %r36916, 19;
	shf.r.wrap.b32 	%r36919, %r36916, %r36917, 19;
	mov.b64 	%rd19909, {%r36919, %r36918};
	shf.l.wrap.b32 	%r36920, %r36916, %r36917, 3;
	shf.l.wrap.b32 	%r36921, %r36917, %r36916, 3;
	mov.b64 	%rd19910, {%r36921, %r36920};
	shr.u64 	%rd19911, %rd19895, 6;
	xor.b64  	%rd19912, %rd19909, %rd19911;
	xor.b64  	%rd19913, %rd19912, %rd19910;
	shf.r.wrap.b32 	%r36922, %r36787, %r36786, 1;
	shf.r.wrap.b32 	%r36923, %r36786, %r36787, 1;
	mov.b64 	%rd19914, {%r36923, %r36922};
	shf.r.wrap.b32 	%r36924, %r36787, %r36786, 8;
	shf.r.wrap.b32 	%r36925, %r36786, %r36787, 8;
	mov.b64 	%rd19915, {%r36925, %r36924};
	shr.u64 	%rd19916, %rd19726, 7;
	xor.b64  	%rd19917, %rd19914, %rd19916;
	xor.b64  	%rd19918, %rd19917, %rd19915;
	add.s64 	%rd19919, %rd19830, %rd19313;
	add.s64 	%rd19920, %rd19919, %rd19913;
	add.s64 	%rd19921, %rd19920, %rd19918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36926,%dummy}, %rd19702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36927}, %rd19702;
	}
	shf.r.wrap.b32 	%r36928, %r36927, %r36926, 14;
	shf.r.wrap.b32 	%r36929, %r36926, %r36927, 14;
	mov.b64 	%rd19922, {%r36929, %r36928};
	shf.r.wrap.b32 	%r36930, %r36927, %r36926, 18;
	shf.r.wrap.b32 	%r36931, %r36926, %r36927, 18;
	mov.b64 	%rd19923, {%r36931, %r36930};
	xor.b64  	%rd19924, %rd19923, %rd19922;
	shf.l.wrap.b32 	%r36932, %r36926, %r36927, 23;
	shf.l.wrap.b32 	%r36933, %r36927, %r36926, 23;
	mov.b64 	%rd19925, {%r36933, %r36932};
	xor.b64  	%rd19926, %rd19924, %rd19925;
	xor.b64  	%rd19927, %rd19677, %rd19652;
	and.b64  	%rd19928, %rd19702, %rd19927;
	xor.b64  	%rd19929, %rd19928, %rd19652;
	add.s64 	%rd19930, %rd19929, %rd19627;
	add.s64 	%rd19931, %rd19930, %rd19726;
	ld.const.u64 	%rd19932, [k_sha512+512];
	add.s64 	%rd19933, %rd19931, %rd19932;
	add.s64 	%rd19934, %rd19933, %rd19926;
	add.s64 	%rd19935, %rd19934, %rd19638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36934,%dummy}, %rd19713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36935}, %rd19713;
	}
	shf.r.wrap.b32 	%r36936, %r36935, %r36934, 28;
	shf.r.wrap.b32 	%r36937, %r36934, %r36935, 28;
	mov.b64 	%rd19936, {%r36937, %r36936};
	shf.l.wrap.b32 	%r36938, %r36934, %r36935, 30;
	shf.l.wrap.b32 	%r36939, %r36935, %r36934, 30;
	mov.b64 	%rd19937, {%r36939, %r36938};
	xor.b64  	%rd19938, %rd19937, %rd19936;
	shf.l.wrap.b32 	%r36940, %r36934, %r36935, 25;
	shf.l.wrap.b32 	%r36941, %r36935, %r36934, 25;
	mov.b64 	%rd19939, {%r36941, %r36940};
	xor.b64  	%rd19940, %rd19938, %rd19939;
	and.b64  	%rd19941, %rd19713, %rd19688;
	xor.b64  	%rd19942, %rd19713, %rd19688;
	and.b64  	%rd19943, %rd19942, %rd19663;
	or.b64  	%rd19944, %rd19943, %rd19941;
	add.s64 	%rd19945, %rd19934, %rd19944;
	add.s64 	%rd19946, %rd19945, %rd19940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36942,%dummy}, %rd19935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36943}, %rd19935;
	}
	shf.r.wrap.b32 	%r36944, %r36943, %r36942, 14;
	shf.r.wrap.b32 	%r36945, %r36942, %r36943, 14;
	mov.b64 	%rd19947, {%r36945, %r36944};
	shf.r.wrap.b32 	%r36946, %r36943, %r36942, 18;
	shf.r.wrap.b32 	%r36947, %r36942, %r36943, 18;
	mov.b64 	%rd19948, {%r36947, %r36946};
	xor.b64  	%rd19949, %rd19948, %rd19947;
	shf.l.wrap.b32 	%r36948, %r36942, %r36943, 23;
	shf.l.wrap.b32 	%r36949, %r36943, %r36942, 23;
	mov.b64 	%rd19950, {%r36949, %r36948};
	xor.b64  	%rd19951, %rd19949, %rd19950;
	xor.b64  	%rd19952, %rd19702, %rd19677;
	and.b64  	%rd19953, %rd19935, %rd19952;
	xor.b64  	%rd19954, %rd19953, %rd19677;
	add.s64 	%rd19955, %rd19739, %rd19652;
	ld.const.u64 	%rd19956, [k_sha512+520];
	add.s64 	%rd19957, %rd19955, %rd19956;
	add.s64 	%rd19958, %rd19957, %rd19954;
	add.s64 	%rd19959, %rd19958, %rd19951;
	add.s64 	%rd19960, %rd19959, %rd19663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36950,%dummy}, %rd19946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36951}, %rd19946;
	}
	shf.r.wrap.b32 	%r36952, %r36951, %r36950, 28;
	shf.r.wrap.b32 	%r36953, %r36950, %r36951, 28;
	mov.b64 	%rd19961, {%r36953, %r36952};
	shf.l.wrap.b32 	%r36954, %r36950, %r36951, 30;
	shf.l.wrap.b32 	%r36955, %r36951, %r36950, 30;
	mov.b64 	%rd19962, {%r36955, %r36954};
	xor.b64  	%rd19963, %rd19962, %rd19961;
	shf.l.wrap.b32 	%r36956, %r36950, %r36951, 25;
	shf.l.wrap.b32 	%r36957, %r36951, %r36950, 25;
	mov.b64 	%rd19964, {%r36957, %r36956};
	xor.b64  	%rd19965, %rd19963, %rd19964;
	and.b64  	%rd19966, %rd19946, %rd19713;
	xor.b64  	%rd19967, %rd19946, %rd19713;
	and.b64  	%rd19968, %rd19967, %rd19688;
	or.b64  	%rd19969, %rd19968, %rd19966;
	add.s64 	%rd19970, %rd19959, %rd19969;
	add.s64 	%rd19971, %rd19970, %rd19965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36958,%dummy}, %rd19960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36959}, %rd19960;
	}
	shf.r.wrap.b32 	%r36960, %r36959, %r36958, 14;
	shf.r.wrap.b32 	%r36961, %r36958, %r36959, 14;
	mov.b64 	%rd19972, {%r36961, %r36960};
	shf.r.wrap.b32 	%r36962, %r36959, %r36958, 18;
	shf.r.wrap.b32 	%r36963, %r36958, %r36959, 18;
	mov.b64 	%rd19973, {%r36963, %r36962};
	xor.b64  	%rd19974, %rd19973, %rd19972;
	shf.l.wrap.b32 	%r36964, %r36958, %r36959, 23;
	shf.l.wrap.b32 	%r36965, %r36959, %r36958, 23;
	mov.b64 	%rd19975, {%r36965, %r36964};
	xor.b64  	%rd19976, %rd19974, %rd19975;
	xor.b64  	%rd19977, %rd19935, %rd19702;
	and.b64  	%rd19978, %rd19960, %rd19977;
	xor.b64  	%rd19979, %rd19978, %rd19702;
	add.s64 	%rd19980, %rd19752, %rd19677;
	ld.const.u64 	%rd19981, [k_sha512+528];
	add.s64 	%rd19982, %rd19980, %rd19981;
	add.s64 	%rd19983, %rd19982, %rd19979;
	add.s64 	%rd19984, %rd19983, %rd19976;
	add.s64 	%rd19985, %rd19984, %rd19688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36966,%dummy}, %rd19971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36967}, %rd19971;
	}
	shf.r.wrap.b32 	%r36968, %r36967, %r36966, 28;
	shf.r.wrap.b32 	%r36969, %r36966, %r36967, 28;
	mov.b64 	%rd19986, {%r36969, %r36968};
	shf.l.wrap.b32 	%r36970, %r36966, %r36967, 30;
	shf.l.wrap.b32 	%r36971, %r36967, %r36966, 30;
	mov.b64 	%rd19987, {%r36971, %r36970};
	xor.b64  	%rd19988, %rd19987, %rd19986;
	shf.l.wrap.b32 	%r36972, %r36966, %r36967, 25;
	shf.l.wrap.b32 	%r36973, %r36967, %r36966, 25;
	mov.b64 	%rd19989, {%r36973, %r36972};
	xor.b64  	%rd19990, %rd19988, %rd19989;
	and.b64  	%rd19991, %rd19971, %rd19946;
	xor.b64  	%rd19992, %rd19971, %rd19946;
	and.b64  	%rd19993, %rd19992, %rd19713;
	or.b64  	%rd19994, %rd19993, %rd19991;
	add.s64 	%rd19995, %rd19984, %rd19994;
	add.s64 	%rd19996, %rd19995, %rd19990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36974,%dummy}, %rd19985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36975}, %rd19985;
	}
	shf.r.wrap.b32 	%r36976, %r36975, %r36974, 14;
	shf.r.wrap.b32 	%r36977, %r36974, %r36975, 14;
	mov.b64 	%rd19997, {%r36977, %r36976};
	shf.r.wrap.b32 	%r36978, %r36975, %r36974, 18;
	shf.r.wrap.b32 	%r36979, %r36974, %r36975, 18;
	mov.b64 	%rd19998, {%r36979, %r36978};
	xor.b64  	%rd19999, %rd19998, %rd19997;
	shf.l.wrap.b32 	%r36980, %r36974, %r36975, 23;
	shf.l.wrap.b32 	%r36981, %r36975, %r36974, 23;
	mov.b64 	%rd20000, {%r36981, %r36980};
	xor.b64  	%rd20001, %rd19999, %rd20000;
	xor.b64  	%rd20002, %rd19960, %rd19935;
	and.b64  	%rd20003, %rd19985, %rd20002;
	xor.b64  	%rd20004, %rd20003, %rd19935;
	add.s64 	%rd20005, %rd19765, %rd19702;
	ld.const.u64 	%rd20006, [k_sha512+536];
	add.s64 	%rd20007, %rd20005, %rd20006;
	add.s64 	%rd20008, %rd20007, %rd20004;
	add.s64 	%rd20009, %rd20008, %rd20001;
	add.s64 	%rd20010, %rd20009, %rd19713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36982,%dummy}, %rd19996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36983}, %rd19996;
	}
	shf.r.wrap.b32 	%r36984, %r36983, %r36982, 28;
	shf.r.wrap.b32 	%r36985, %r36982, %r36983, 28;
	mov.b64 	%rd20011, {%r36985, %r36984};
	shf.l.wrap.b32 	%r36986, %r36982, %r36983, 30;
	shf.l.wrap.b32 	%r36987, %r36983, %r36982, 30;
	mov.b64 	%rd20012, {%r36987, %r36986};
	xor.b64  	%rd20013, %rd20012, %rd20011;
	shf.l.wrap.b32 	%r36988, %r36982, %r36983, 25;
	shf.l.wrap.b32 	%r36989, %r36983, %r36982, 25;
	mov.b64 	%rd20014, {%r36989, %r36988};
	xor.b64  	%rd20015, %rd20013, %rd20014;
	and.b64  	%rd20016, %rd19996, %rd19971;
	xor.b64  	%rd20017, %rd19996, %rd19971;
	and.b64  	%rd20018, %rd20017, %rd19946;
	or.b64  	%rd20019, %rd20018, %rd20016;
	add.s64 	%rd20020, %rd20009, %rd20019;
	add.s64 	%rd20021, %rd20020, %rd20015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36990,%dummy}, %rd20010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36991}, %rd20010;
	}
	shf.r.wrap.b32 	%r36992, %r36991, %r36990, 14;
	shf.r.wrap.b32 	%r36993, %r36990, %r36991, 14;
	mov.b64 	%rd20022, {%r36993, %r36992};
	shf.r.wrap.b32 	%r36994, %r36991, %r36990, 18;
	shf.r.wrap.b32 	%r36995, %r36990, %r36991, 18;
	mov.b64 	%rd20023, {%r36995, %r36994};
	xor.b64  	%rd20024, %rd20023, %rd20022;
	shf.l.wrap.b32 	%r36996, %r36990, %r36991, 23;
	shf.l.wrap.b32 	%r36997, %r36991, %r36990, 23;
	mov.b64 	%rd20025, {%r36997, %r36996};
	xor.b64  	%rd20026, %rd20024, %rd20025;
	xor.b64  	%rd20027, %rd19985, %rd19960;
	and.b64  	%rd20028, %rd20010, %rd20027;
	xor.b64  	%rd20029, %rd20028, %rd19960;
	add.s64 	%rd20030, %rd19935, %rd19778;
	ld.const.u64 	%rd20031, [k_sha512+544];
	add.s64 	%rd20032, %rd20030, %rd20031;
	add.s64 	%rd20033, %rd20032, %rd20029;
	add.s64 	%rd20034, %rd20033, %rd20026;
	add.s64 	%rd20035, %rd20034, %rd19946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36998,%dummy}, %rd20021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36999}, %rd20021;
	}
	shf.r.wrap.b32 	%r37000, %r36999, %r36998, 28;
	shf.r.wrap.b32 	%r37001, %r36998, %r36999, 28;
	mov.b64 	%rd20036, {%r37001, %r37000};
	shf.l.wrap.b32 	%r37002, %r36998, %r36999, 30;
	shf.l.wrap.b32 	%r37003, %r36999, %r36998, 30;
	mov.b64 	%rd20037, {%r37003, %r37002};
	xor.b64  	%rd20038, %rd20037, %rd20036;
	shf.l.wrap.b32 	%r37004, %r36998, %r36999, 25;
	shf.l.wrap.b32 	%r37005, %r36999, %r36998, 25;
	mov.b64 	%rd20039, {%r37005, %r37004};
	xor.b64  	%rd20040, %rd20038, %rd20039;
	and.b64  	%rd20041, %rd20021, %rd19996;
	xor.b64  	%rd20042, %rd20021, %rd19996;
	and.b64  	%rd20043, %rd20042, %rd19971;
	or.b64  	%rd20044, %rd20043, %rd20041;
	add.s64 	%rd20045, %rd20034, %rd20044;
	add.s64 	%rd20046, %rd20045, %rd20040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37006,%dummy}, %rd20035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37007}, %rd20035;
	}
	shf.r.wrap.b32 	%r37008, %r37007, %r37006, 14;
	shf.r.wrap.b32 	%r37009, %r37006, %r37007, 14;
	mov.b64 	%rd20047, {%r37009, %r37008};
	shf.r.wrap.b32 	%r37010, %r37007, %r37006, 18;
	shf.r.wrap.b32 	%r37011, %r37006, %r37007, 18;
	mov.b64 	%rd20048, {%r37011, %r37010};
	xor.b64  	%rd20049, %rd20048, %rd20047;
	shf.l.wrap.b32 	%r37012, %r37006, %r37007, 23;
	shf.l.wrap.b32 	%r37013, %r37007, %r37006, 23;
	mov.b64 	%rd20050, {%r37013, %r37012};
	xor.b64  	%rd20051, %rd20049, %rd20050;
	xor.b64  	%rd20052, %rd20010, %rd19985;
	and.b64  	%rd20053, %rd20035, %rd20052;
	xor.b64  	%rd20054, %rd20053, %rd19985;
	add.s64 	%rd20055, %rd19960, %rd19791;
	ld.const.u64 	%rd20056, [k_sha512+552];
	add.s64 	%rd20057, %rd20055, %rd20056;
	add.s64 	%rd20058, %rd20057, %rd20054;
	add.s64 	%rd20059, %rd20058, %rd20051;
	add.s64 	%rd20060, %rd20059, %rd19971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37014,%dummy}, %rd20046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37015}, %rd20046;
	}
	shf.r.wrap.b32 	%r37016, %r37015, %r37014, 28;
	shf.r.wrap.b32 	%r37017, %r37014, %r37015, 28;
	mov.b64 	%rd20061, {%r37017, %r37016};
	shf.l.wrap.b32 	%r37018, %r37014, %r37015, 30;
	shf.l.wrap.b32 	%r37019, %r37015, %r37014, 30;
	mov.b64 	%rd20062, {%r37019, %r37018};
	xor.b64  	%rd20063, %rd20062, %rd20061;
	shf.l.wrap.b32 	%r37020, %r37014, %r37015, 25;
	shf.l.wrap.b32 	%r37021, %r37015, %r37014, 25;
	mov.b64 	%rd20064, {%r37021, %r37020};
	xor.b64  	%rd20065, %rd20063, %rd20064;
	and.b64  	%rd20066, %rd20046, %rd20021;
	xor.b64  	%rd20067, %rd20046, %rd20021;
	and.b64  	%rd20068, %rd20067, %rd19996;
	or.b64  	%rd20069, %rd20068, %rd20066;
	add.s64 	%rd20070, %rd20059, %rd20069;
	add.s64 	%rd20071, %rd20070, %rd20065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37022,%dummy}, %rd20060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37023}, %rd20060;
	}
	shf.r.wrap.b32 	%r37024, %r37023, %r37022, 14;
	shf.r.wrap.b32 	%r37025, %r37022, %r37023, 14;
	mov.b64 	%rd20072, {%r37025, %r37024};
	shf.r.wrap.b32 	%r37026, %r37023, %r37022, 18;
	shf.r.wrap.b32 	%r37027, %r37022, %r37023, 18;
	mov.b64 	%rd20073, {%r37027, %r37026};
	xor.b64  	%rd20074, %rd20073, %rd20072;
	shf.l.wrap.b32 	%r37028, %r37022, %r37023, 23;
	shf.l.wrap.b32 	%r37029, %r37023, %r37022, 23;
	mov.b64 	%rd20075, {%r37029, %r37028};
	xor.b64  	%rd20076, %rd20074, %rd20075;
	xor.b64  	%rd20077, %rd20035, %rd20010;
	and.b64  	%rd20078, %rd20060, %rd20077;
	xor.b64  	%rd20079, %rd20078, %rd20010;
	add.s64 	%rd20080, %rd19985, %rd19804;
	ld.const.u64 	%rd20081, [k_sha512+560];
	add.s64 	%rd20082, %rd20080, %rd20081;
	add.s64 	%rd20083, %rd20082, %rd20079;
	add.s64 	%rd20084, %rd20083, %rd20076;
	add.s64 	%rd20085, %rd20084, %rd19996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37030,%dummy}, %rd20071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37031}, %rd20071;
	}
	shf.r.wrap.b32 	%r37032, %r37031, %r37030, 28;
	shf.r.wrap.b32 	%r37033, %r37030, %r37031, 28;
	mov.b64 	%rd20086, {%r37033, %r37032};
	shf.l.wrap.b32 	%r37034, %r37030, %r37031, 30;
	shf.l.wrap.b32 	%r37035, %r37031, %r37030, 30;
	mov.b64 	%rd20087, {%r37035, %r37034};
	xor.b64  	%rd20088, %rd20087, %rd20086;
	shf.l.wrap.b32 	%r37036, %r37030, %r37031, 25;
	shf.l.wrap.b32 	%r37037, %r37031, %r37030, 25;
	mov.b64 	%rd20089, {%r37037, %r37036};
	xor.b64  	%rd20090, %rd20088, %rd20089;
	and.b64  	%rd20091, %rd20071, %rd20046;
	xor.b64  	%rd20092, %rd20071, %rd20046;
	and.b64  	%rd20093, %rd20092, %rd20021;
	or.b64  	%rd20094, %rd20093, %rd20091;
	add.s64 	%rd20095, %rd20084, %rd20094;
	add.s64 	%rd20096, %rd20095, %rd20090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37038,%dummy}, %rd20085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37039}, %rd20085;
	}
	shf.r.wrap.b32 	%r37040, %r37039, %r37038, 14;
	shf.r.wrap.b32 	%r37041, %r37038, %r37039, 14;
	mov.b64 	%rd20097, {%r37041, %r37040};
	shf.r.wrap.b32 	%r37042, %r37039, %r37038, 18;
	shf.r.wrap.b32 	%r37043, %r37038, %r37039, 18;
	mov.b64 	%rd20098, {%r37043, %r37042};
	xor.b64  	%rd20099, %rd20098, %rd20097;
	shf.l.wrap.b32 	%r37044, %r37038, %r37039, 23;
	shf.l.wrap.b32 	%r37045, %r37039, %r37038, 23;
	mov.b64 	%rd20100, {%r37045, %r37044};
	xor.b64  	%rd20101, %rd20099, %rd20100;
	xor.b64  	%rd20102, %rd20060, %rd20035;
	and.b64  	%rd20103, %rd20085, %rd20102;
	xor.b64  	%rd20104, %rd20103, %rd20035;
	add.s64 	%rd20105, %rd20010, %rd19817;
	ld.const.u64 	%rd20106, [k_sha512+568];
	add.s64 	%rd20107, %rd20105, %rd20106;
	add.s64 	%rd20108, %rd20107, %rd20104;
	add.s64 	%rd20109, %rd20108, %rd20101;
	add.s64 	%rd20110, %rd20109, %rd20021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37046,%dummy}, %rd20096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37047}, %rd20096;
	}
	shf.r.wrap.b32 	%r37048, %r37047, %r37046, 28;
	shf.r.wrap.b32 	%r37049, %r37046, %r37047, 28;
	mov.b64 	%rd20111, {%r37049, %r37048};
	shf.l.wrap.b32 	%r37050, %r37046, %r37047, 30;
	shf.l.wrap.b32 	%r37051, %r37047, %r37046, 30;
	mov.b64 	%rd20112, {%r37051, %r37050};
	xor.b64  	%rd20113, %rd20112, %rd20111;
	shf.l.wrap.b32 	%r37052, %r37046, %r37047, 25;
	shf.l.wrap.b32 	%r37053, %r37047, %r37046, 25;
	mov.b64 	%rd20114, {%r37053, %r37052};
	xor.b64  	%rd20115, %rd20113, %rd20114;
	and.b64  	%rd20116, %rd20096, %rd20071;
	xor.b64  	%rd20117, %rd20096, %rd20071;
	and.b64  	%rd20118, %rd20117, %rd20046;
	or.b64  	%rd20119, %rd20118, %rd20116;
	add.s64 	%rd20120, %rd20109, %rd20119;
	add.s64 	%rd20121, %rd20120, %rd20115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37054,%dummy}, %rd20110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37055}, %rd20110;
	}
	shf.r.wrap.b32 	%r37056, %r37055, %r37054, 14;
	shf.r.wrap.b32 	%r37057, %r37054, %r37055, 14;
	mov.b64 	%rd20122, {%r37057, %r37056};
	shf.r.wrap.b32 	%r37058, %r37055, %r37054, 18;
	shf.r.wrap.b32 	%r37059, %r37054, %r37055, 18;
	mov.b64 	%rd20123, {%r37059, %r37058};
	xor.b64  	%rd20124, %rd20123, %rd20122;
	shf.l.wrap.b32 	%r37060, %r37054, %r37055, 23;
	shf.l.wrap.b32 	%r37061, %r37055, %r37054, 23;
	mov.b64 	%rd20125, {%r37061, %r37060};
	xor.b64  	%rd20126, %rd20124, %rd20125;
	xor.b64  	%rd20127, %rd20085, %rd20060;
	and.b64  	%rd20128, %rd20110, %rd20127;
	xor.b64  	%rd20129, %rd20128, %rd20060;
	add.s64 	%rd20130, %rd20035, %rd19830;
	ld.const.u64 	%rd20131, [k_sha512+576];
	add.s64 	%rd20132, %rd20130, %rd20131;
	add.s64 	%rd20133, %rd20132, %rd20129;
	add.s64 	%rd20134, %rd20133, %rd20126;
	add.s64 	%rd20135, %rd20134, %rd20046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37062,%dummy}, %rd20121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37063}, %rd20121;
	}
	shf.r.wrap.b32 	%r37064, %r37063, %r37062, 28;
	shf.r.wrap.b32 	%r37065, %r37062, %r37063, 28;
	mov.b64 	%rd20136, {%r37065, %r37064};
	shf.l.wrap.b32 	%r37066, %r37062, %r37063, 30;
	shf.l.wrap.b32 	%r37067, %r37063, %r37062, 30;
	mov.b64 	%rd20137, {%r37067, %r37066};
	xor.b64  	%rd20138, %rd20137, %rd20136;
	shf.l.wrap.b32 	%r37068, %r37062, %r37063, 25;
	shf.l.wrap.b32 	%r37069, %r37063, %r37062, 25;
	mov.b64 	%rd20139, {%r37069, %r37068};
	xor.b64  	%rd20140, %rd20138, %rd20139;
	and.b64  	%rd20141, %rd20121, %rd20096;
	xor.b64  	%rd20142, %rd20121, %rd20096;
	and.b64  	%rd20143, %rd20142, %rd20071;
	or.b64  	%rd20144, %rd20143, %rd20141;
	add.s64 	%rd20145, %rd20134, %rd20144;
	add.s64 	%rd20146, %rd20145, %rd20140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37070,%dummy}, %rd20135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37071}, %rd20135;
	}
	shf.r.wrap.b32 	%r37072, %r37071, %r37070, 14;
	shf.r.wrap.b32 	%r37073, %r37070, %r37071, 14;
	mov.b64 	%rd20147, {%r37073, %r37072};
	shf.r.wrap.b32 	%r37074, %r37071, %r37070, 18;
	shf.r.wrap.b32 	%r37075, %r37070, %r37071, 18;
	mov.b64 	%rd20148, {%r37075, %r37074};
	xor.b64  	%rd20149, %rd20148, %rd20147;
	shf.l.wrap.b32 	%r37076, %r37070, %r37071, 23;
	shf.l.wrap.b32 	%r37077, %r37071, %r37070, 23;
	mov.b64 	%rd20150, {%r37077, %r37076};
	xor.b64  	%rd20151, %rd20149, %rd20150;
	xor.b64  	%rd20152, %rd20110, %rd20085;
	and.b64  	%rd20153, %rd20135, %rd20152;
	xor.b64  	%rd20154, %rd20153, %rd20085;
	add.s64 	%rd20155, %rd20060, %rd19843;
	ld.const.u64 	%rd20156, [k_sha512+584];
	add.s64 	%rd20157, %rd20155, %rd20156;
	add.s64 	%rd20158, %rd20157, %rd20154;
	add.s64 	%rd20159, %rd20158, %rd20151;
	add.s64 	%rd20160, %rd20159, %rd20071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37078,%dummy}, %rd20146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37079}, %rd20146;
	}
	shf.r.wrap.b32 	%r37080, %r37079, %r37078, 28;
	shf.r.wrap.b32 	%r37081, %r37078, %r37079, 28;
	mov.b64 	%rd20161, {%r37081, %r37080};
	shf.l.wrap.b32 	%r37082, %r37078, %r37079, 30;
	shf.l.wrap.b32 	%r37083, %r37079, %r37078, 30;
	mov.b64 	%rd20162, {%r37083, %r37082};
	xor.b64  	%rd20163, %rd20162, %rd20161;
	shf.l.wrap.b32 	%r37084, %r37078, %r37079, 25;
	shf.l.wrap.b32 	%r37085, %r37079, %r37078, 25;
	mov.b64 	%rd20164, {%r37085, %r37084};
	xor.b64  	%rd20165, %rd20163, %rd20164;
	and.b64  	%rd20166, %rd20146, %rd20121;
	xor.b64  	%rd20167, %rd20146, %rd20121;
	and.b64  	%rd20168, %rd20167, %rd20096;
	or.b64  	%rd20169, %rd20168, %rd20166;
	add.s64 	%rd20170, %rd20159, %rd20169;
	add.s64 	%rd20171, %rd20170, %rd20165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37086,%dummy}, %rd20160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37087}, %rd20160;
	}
	shf.r.wrap.b32 	%r37088, %r37087, %r37086, 14;
	shf.r.wrap.b32 	%r37089, %r37086, %r37087, 14;
	mov.b64 	%rd20172, {%r37089, %r37088};
	shf.r.wrap.b32 	%r37090, %r37087, %r37086, 18;
	shf.r.wrap.b32 	%r37091, %r37086, %r37087, 18;
	mov.b64 	%rd20173, {%r37091, %r37090};
	xor.b64  	%rd20174, %rd20173, %rd20172;
	shf.l.wrap.b32 	%r37092, %r37086, %r37087, 23;
	shf.l.wrap.b32 	%r37093, %r37087, %r37086, 23;
	mov.b64 	%rd20175, {%r37093, %r37092};
	xor.b64  	%rd20176, %rd20174, %rd20175;
	xor.b64  	%rd20177, %rd20135, %rd20110;
	and.b64  	%rd20178, %rd20160, %rd20177;
	xor.b64  	%rd20179, %rd20178, %rd20110;
	add.s64 	%rd20180, %rd20085, %rd19856;
	ld.const.u64 	%rd20181, [k_sha512+592];
	add.s64 	%rd20182, %rd20180, %rd20181;
	add.s64 	%rd20183, %rd20182, %rd20179;
	add.s64 	%rd20184, %rd20183, %rd20176;
	add.s64 	%rd20185, %rd20184, %rd20096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37094,%dummy}, %rd20171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37095}, %rd20171;
	}
	shf.r.wrap.b32 	%r37096, %r37095, %r37094, 28;
	shf.r.wrap.b32 	%r37097, %r37094, %r37095, 28;
	mov.b64 	%rd20186, {%r37097, %r37096};
	shf.l.wrap.b32 	%r37098, %r37094, %r37095, 30;
	shf.l.wrap.b32 	%r37099, %r37095, %r37094, 30;
	mov.b64 	%rd20187, {%r37099, %r37098};
	xor.b64  	%rd20188, %rd20187, %rd20186;
	shf.l.wrap.b32 	%r37100, %r37094, %r37095, 25;
	shf.l.wrap.b32 	%r37101, %r37095, %r37094, 25;
	mov.b64 	%rd20189, {%r37101, %r37100};
	xor.b64  	%rd20190, %rd20188, %rd20189;
	and.b64  	%rd20191, %rd20171, %rd20146;
	xor.b64  	%rd20192, %rd20171, %rd20146;
	and.b64  	%rd20193, %rd20192, %rd20121;
	or.b64  	%rd20194, %rd20193, %rd20191;
	add.s64 	%rd20195, %rd20184, %rd20194;
	add.s64 	%rd20196, %rd20195, %rd20190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37102,%dummy}, %rd20185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37103}, %rd20185;
	}
	shf.r.wrap.b32 	%r37104, %r37103, %r37102, 14;
	shf.r.wrap.b32 	%r37105, %r37102, %r37103, 14;
	mov.b64 	%rd20197, {%r37105, %r37104};
	shf.r.wrap.b32 	%r37106, %r37103, %r37102, 18;
	shf.r.wrap.b32 	%r37107, %r37102, %r37103, 18;
	mov.b64 	%rd20198, {%r37107, %r37106};
	xor.b64  	%rd20199, %rd20198, %rd20197;
	shf.l.wrap.b32 	%r37108, %r37102, %r37103, 23;
	shf.l.wrap.b32 	%r37109, %r37103, %r37102, 23;
	mov.b64 	%rd20200, {%r37109, %r37108};
	xor.b64  	%rd20201, %rd20199, %rd20200;
	xor.b64  	%rd20202, %rd20160, %rd20135;
	and.b64  	%rd20203, %rd20185, %rd20202;
	xor.b64  	%rd20204, %rd20203, %rd20135;
	add.s64 	%rd20205, %rd20110, %rd19869;
	ld.const.u64 	%rd20206, [k_sha512+600];
	add.s64 	%rd20207, %rd20205, %rd20206;
	add.s64 	%rd20208, %rd20207, %rd20204;
	add.s64 	%rd20209, %rd20208, %rd20201;
	add.s64 	%rd20210, %rd20209, %rd20121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37110,%dummy}, %rd20196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37111}, %rd20196;
	}
	shf.r.wrap.b32 	%r37112, %r37111, %r37110, 28;
	shf.r.wrap.b32 	%r37113, %r37110, %r37111, 28;
	mov.b64 	%rd20211, {%r37113, %r37112};
	shf.l.wrap.b32 	%r37114, %r37110, %r37111, 30;
	shf.l.wrap.b32 	%r37115, %r37111, %r37110, 30;
	mov.b64 	%rd20212, {%r37115, %r37114};
	xor.b64  	%rd20213, %rd20212, %rd20211;
	shf.l.wrap.b32 	%r37116, %r37110, %r37111, 25;
	shf.l.wrap.b32 	%r37117, %r37111, %r37110, 25;
	mov.b64 	%rd20214, {%r37117, %r37116};
	xor.b64  	%rd20215, %rd20213, %rd20214;
	and.b64  	%rd20216, %rd20196, %rd20171;
	xor.b64  	%rd20217, %rd20196, %rd20171;
	and.b64  	%rd20218, %rd20217, %rd20146;
	or.b64  	%rd20219, %rd20218, %rd20216;
	add.s64 	%rd20220, %rd20209, %rd20219;
	add.s64 	%rd20221, %rd20220, %rd20215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37118,%dummy}, %rd20210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37119}, %rd20210;
	}
	shf.r.wrap.b32 	%r37120, %r37119, %r37118, 14;
	shf.r.wrap.b32 	%r37121, %r37118, %r37119, 14;
	mov.b64 	%rd20222, {%r37121, %r37120};
	shf.r.wrap.b32 	%r37122, %r37119, %r37118, 18;
	shf.r.wrap.b32 	%r37123, %r37118, %r37119, 18;
	mov.b64 	%rd20223, {%r37123, %r37122};
	xor.b64  	%rd20224, %rd20223, %rd20222;
	shf.l.wrap.b32 	%r37124, %r37118, %r37119, 23;
	shf.l.wrap.b32 	%r37125, %r37119, %r37118, 23;
	mov.b64 	%rd20225, {%r37125, %r37124};
	xor.b64  	%rd20226, %rd20224, %rd20225;
	xor.b64  	%rd20227, %rd20185, %rd20160;
	and.b64  	%rd20228, %rd20210, %rd20227;
	xor.b64  	%rd20229, %rd20228, %rd20160;
	add.s64 	%rd20230, %rd20135, %rd19882;
	ld.const.u64 	%rd20231, [k_sha512+608];
	add.s64 	%rd20232, %rd20230, %rd20231;
	add.s64 	%rd20233, %rd20232, %rd20229;
	add.s64 	%rd20234, %rd20233, %rd20226;
	add.s64 	%rd20235, %rd20234, %rd20146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37126,%dummy}, %rd20221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37127}, %rd20221;
	}
	shf.r.wrap.b32 	%r37128, %r37127, %r37126, 28;
	shf.r.wrap.b32 	%r37129, %r37126, %r37127, 28;
	mov.b64 	%rd20236, {%r37129, %r37128};
	shf.l.wrap.b32 	%r37130, %r37126, %r37127, 30;
	shf.l.wrap.b32 	%r37131, %r37127, %r37126, 30;
	mov.b64 	%rd20237, {%r37131, %r37130};
	xor.b64  	%rd20238, %rd20237, %rd20236;
	shf.l.wrap.b32 	%r37132, %r37126, %r37127, 25;
	shf.l.wrap.b32 	%r37133, %r37127, %r37126, 25;
	mov.b64 	%rd20239, {%r37133, %r37132};
	xor.b64  	%rd20240, %rd20238, %rd20239;
	and.b64  	%rd20241, %rd20221, %rd20196;
	xor.b64  	%rd20242, %rd20221, %rd20196;
	and.b64  	%rd20243, %rd20242, %rd20171;
	or.b64  	%rd20244, %rd20243, %rd20241;
	add.s64 	%rd20245, %rd20234, %rd20244;
	add.s64 	%rd20246, %rd20245, %rd20240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37134,%dummy}, %rd20235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37135}, %rd20235;
	}
	shf.r.wrap.b32 	%r37136, %r37135, %r37134, 14;
	shf.r.wrap.b32 	%r37137, %r37134, %r37135, 14;
	mov.b64 	%rd20247, {%r37137, %r37136};
	shf.r.wrap.b32 	%r37138, %r37135, %r37134, 18;
	shf.r.wrap.b32 	%r37139, %r37134, %r37135, 18;
	mov.b64 	%rd20248, {%r37139, %r37138};
	xor.b64  	%rd20249, %rd20248, %rd20247;
	shf.l.wrap.b32 	%r37140, %r37134, %r37135, 23;
	shf.l.wrap.b32 	%r37141, %r37135, %r37134, 23;
	mov.b64 	%rd20250, {%r37141, %r37140};
	xor.b64  	%rd20251, %rd20249, %rd20250;
	xor.b64  	%rd20252, %rd20210, %rd20185;
	and.b64  	%rd20253, %rd20235, %rd20252;
	xor.b64  	%rd20254, %rd20253, %rd20185;
	add.s64 	%rd20255, %rd20160, %rd19895;
	ld.const.u64 	%rd20256, [k_sha512+616];
	add.s64 	%rd20257, %rd20255, %rd20256;
	add.s64 	%rd20258, %rd20257, %rd20254;
	add.s64 	%rd20259, %rd20258, %rd20251;
	add.s64 	%rd20260, %rd20259, %rd20171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37142,%dummy}, %rd20246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37143}, %rd20246;
	}
	shf.r.wrap.b32 	%r37144, %r37143, %r37142, 28;
	shf.r.wrap.b32 	%r37145, %r37142, %r37143, 28;
	mov.b64 	%rd20261, {%r37145, %r37144};
	shf.l.wrap.b32 	%r37146, %r37142, %r37143, 30;
	shf.l.wrap.b32 	%r37147, %r37143, %r37142, 30;
	mov.b64 	%rd20262, {%r37147, %r37146};
	xor.b64  	%rd20263, %rd20262, %rd20261;
	shf.l.wrap.b32 	%r37148, %r37142, %r37143, 25;
	shf.l.wrap.b32 	%r37149, %r37143, %r37142, 25;
	mov.b64 	%rd20264, {%r37149, %r37148};
	xor.b64  	%rd20265, %rd20263, %rd20264;
	and.b64  	%rd20266, %rd20246, %rd20221;
	xor.b64  	%rd20267, %rd20246, %rd20221;
	and.b64  	%rd20268, %rd20267, %rd20196;
	or.b64  	%rd20269, %rd20268, %rd20266;
	add.s64 	%rd20270, %rd20259, %rd20269;
	add.s64 	%rd20271, %rd20270, %rd20265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37150,%dummy}, %rd20260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37151}, %rd20260;
	}
	shf.r.wrap.b32 	%r37152, %r37151, %r37150, 14;
	shf.r.wrap.b32 	%r37153, %r37150, %r37151, 14;
	mov.b64 	%rd20272, {%r37153, %r37152};
	shf.r.wrap.b32 	%r37154, %r37151, %r37150, 18;
	shf.r.wrap.b32 	%r37155, %r37150, %r37151, 18;
	mov.b64 	%rd20273, {%r37155, %r37154};
	xor.b64  	%rd20274, %rd20273, %rd20272;
	shf.l.wrap.b32 	%r37156, %r37150, %r37151, 23;
	shf.l.wrap.b32 	%r37157, %r37151, %r37150, 23;
	mov.b64 	%rd20275, {%r37157, %r37156};
	xor.b64  	%rd20276, %rd20274, %rd20275;
	xor.b64  	%rd20277, %rd20235, %rd20210;
	and.b64  	%rd20278, %rd20260, %rd20277;
	xor.b64  	%rd20279, %rd20278, %rd20210;
	add.s64 	%rd20280, %rd20185, %rd19908;
	ld.const.u64 	%rd20281, [k_sha512+624];
	add.s64 	%rd20282, %rd20280, %rd20281;
	add.s64 	%rd20283, %rd20282, %rd20279;
	add.s64 	%rd20284, %rd20283, %rd20276;
	add.s64 	%rd20285, %rd20284, %rd20196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37158,%dummy}, %rd20271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37159}, %rd20271;
	}
	shf.r.wrap.b32 	%r37160, %r37159, %r37158, 28;
	shf.r.wrap.b32 	%r37161, %r37158, %r37159, 28;
	mov.b64 	%rd20286, {%r37161, %r37160};
	shf.l.wrap.b32 	%r37162, %r37158, %r37159, 30;
	shf.l.wrap.b32 	%r37163, %r37159, %r37158, 30;
	mov.b64 	%rd20287, {%r37163, %r37162};
	xor.b64  	%rd20288, %rd20287, %rd20286;
	shf.l.wrap.b32 	%r37164, %r37158, %r37159, 25;
	shf.l.wrap.b32 	%r37165, %r37159, %r37158, 25;
	mov.b64 	%rd20289, {%r37165, %r37164};
	xor.b64  	%rd20290, %rd20288, %rd20289;
	and.b64  	%rd20291, %rd20271, %rd20246;
	xor.b64  	%rd20292, %rd20271, %rd20246;
	and.b64  	%rd20293, %rd20292, %rd20221;
	or.b64  	%rd20294, %rd20293, %rd20291;
	add.s64 	%rd20295, %rd20284, %rd20294;
	add.s64 	%rd20296, %rd20295, %rd20290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37166,%dummy}, %rd20285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37167}, %rd20285;
	}
	shf.r.wrap.b32 	%r37168, %r37167, %r37166, 14;
	shf.r.wrap.b32 	%r37169, %r37166, %r37167, 14;
	mov.b64 	%rd20297, {%r37169, %r37168};
	shf.r.wrap.b32 	%r37170, %r37167, %r37166, 18;
	shf.r.wrap.b32 	%r37171, %r37166, %r37167, 18;
	mov.b64 	%rd20298, {%r37171, %r37170};
	xor.b64  	%rd20299, %rd20298, %rd20297;
	shf.l.wrap.b32 	%r37172, %r37166, %r37167, 23;
	shf.l.wrap.b32 	%r37173, %r37167, %r37166, 23;
	mov.b64 	%rd20300, {%r37173, %r37172};
	xor.b64  	%rd20301, %rd20299, %rd20300;
	xor.b64  	%rd20302, %rd20260, %rd20235;
	and.b64  	%rd20303, %rd20285, %rd20302;
	xor.b64  	%rd20304, %rd20303, %rd20235;
	add.s64 	%rd20305, %rd20210, %rd19921;
	ld.const.u64 	%rd20306, [k_sha512+632];
	add.s64 	%rd20307, %rd20305, %rd20306;
	add.s64 	%rd20308, %rd20307, %rd20304;
	add.s64 	%rd20309, %rd20308, %rd20301;
	add.s64 	%rd20310, %rd20309, %rd20221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37174,%dummy}, %rd20296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37175}, %rd20296;
	}
	shf.r.wrap.b32 	%r37176, %r37175, %r37174, 28;
	shf.r.wrap.b32 	%r37177, %r37174, %r37175, 28;
	mov.b64 	%rd20311, {%r37177, %r37176};
	shf.l.wrap.b32 	%r37178, %r37174, %r37175, 30;
	shf.l.wrap.b32 	%r37179, %r37175, %r37174, 30;
	mov.b64 	%rd20312, {%r37179, %r37178};
	xor.b64  	%rd20313, %rd20312, %rd20311;
	shf.l.wrap.b32 	%r37180, %r37174, %r37175, 25;
	shf.l.wrap.b32 	%r37181, %r37175, %r37174, 25;
	mov.b64 	%rd20314, {%r37181, %r37180};
	xor.b64  	%rd20315, %rd20313, %rd20314;
	and.b64  	%rd20316, %rd20296, %rd20271;
	xor.b64  	%rd20317, %rd20296, %rd20271;
	and.b64  	%rd20318, %rd20317, %rd20246;
	or.b64  	%rd20319, %rd20318, %rd20316;
	add.s64 	%rd20320, %rd20309, %rd20319;
	add.s64 	%rd20321, %rd20320, %rd20315;
	add.s64 	%rd20322, %rd17501, %rd20321;
	st.local.u64 	[%rd9], %rd20322;
	add.s64 	%rd20323, %rd17507, %rd20296;
	st.local.u64 	[%rd9+8], %rd20323;
	add.s64 	%rd20324, %rd17510, %rd20271;
	st.local.u64 	[%rd9+16], %rd20324;
	add.s64 	%rd20325, %rd17499, %rd20246;
	st.local.u64 	[%rd9+24], %rd20325;
	add.s64 	%rd20326, %rd17482, %rd20310;
	st.local.u64 	[%rd9+32], %rd20326;
	add.s64 	%rd20327, %rd17489, %rd20285;
	st.local.u64 	[%rd9+40], %rd20327;
	add.s64 	%rd20328, %rd17488, %rd20260;
	st.local.u64 	[%rd9+48], %rd20328;
	add.s64 	%rd23218, %rd17493, %rd20235;
	bra.uni 	BB1_400;

BB1_3:
	// inline asm
	prmt.b32 %r3746, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r3746;
	ld.local.u32 	%r3749, [%rd1+4];
	// inline asm
	prmt.b32 %r3748, %r3749, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+4], %r3748;
	ld.local.u32 	%r3751, [%rd1+8];
	// inline asm
	prmt.b32 %r3750, %r3751, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+8], %r3750;
	ld.local.u32 	%r3753, [%rd1+12];
	// inline asm
	prmt.b32 %r3752, %r3753, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1+12], %r3752;
	ld.local.u32 	%r3755, [%rd2];
	// inline asm
	prmt.b32 %r3754, %r3755, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r3754;
	ld.local.u32 	%r3757, [%rd2+4];
	// inline asm
	prmt.b32 %r3756, %r3757, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r3756;
	ld.local.u32 	%r3759, [%rd2+8];
	// inline asm
	prmt.b32 %r3758, %r3759, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r3758;
	ld.local.u32 	%r3761, [%rd2+12];
	// inline asm
	prmt.b32 %r3760, %r3761, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r3760;
	ld.local.u32 	%r3763, [%rd3];
	// inline asm
	prmt.b32 %r3762, %r3763, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r3762;
	ld.local.u32 	%r3765, [%rd3+4];
	// inline asm
	prmt.b32 %r3764, %r3765, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r3764;
	ld.local.u32 	%r3767, [%rd3+8];
	// inline asm
	prmt.b32 %r3766, %r3767, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r3766;
	ld.local.u32 	%r3769, [%rd3+12];
	// inline asm
	prmt.b32 %r3768, %r3769, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r3768;
	ld.local.u32 	%r3771, [%rd4];
	// inline asm
	prmt.b32 %r3770, %r3771, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r3770;
	ld.local.u32 	%r3773, [%rd4+4];
	// inline asm
	prmt.b32 %r3772, %r3773, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r3772;
	ld.local.u32 	%r3775, [%rd4+8];
	// inline asm
	prmt.b32 %r3774, %r3775, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r3774;
	ld.local.u32 	%r3777, [%rd4+12];
	// inline asm
	prmt.b32 %r3776, %r3777, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r3776;
	ld.local.u32 	%r3779, [%rd5];
	// inline asm
	prmt.b32 %r3778, %r3779, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r3778;
	ld.local.u32 	%r3781, [%rd5+4];
	// inline asm
	prmt.b32 %r3780, %r3781, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r3780;
	ld.local.u32 	%r3783, [%rd5+8];
	// inline asm
	prmt.b32 %r3782, %r3783, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r3782;
	ld.local.u32 	%r3785, [%rd5+12];
	// inline asm
	prmt.b32 %r3784, %r3785, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r3784;
	ld.local.u32 	%r3787, [%rd6];
	// inline asm
	prmt.b32 %r3786, %r3787, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r3786;
	ld.local.u32 	%r3789, [%rd6+4];
	// inline asm
	prmt.b32 %r3788, %r3789, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r3788;
	ld.local.u32 	%r3791, [%rd6+8];
	// inline asm
	prmt.b32 %r3790, %r3791, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r3790;
	ld.local.u32 	%r3793, [%rd6+12];
	// inline asm
	prmt.b32 %r3792, %r3793, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r3792;
	ld.local.u32 	%r3795, [%rd7];
	// inline asm
	prmt.b32 %r3794, %r3795, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r3794;
	ld.local.u32 	%r3797, [%rd7+4];
	// inline asm
	prmt.b32 %r3796, %r3797, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r3796;
	ld.local.u32 	%r3799, [%rd7+8];
	// inline asm
	prmt.b32 %r3798, %r3799, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r3798;
	ld.local.u32 	%r3801, [%rd7+12];
	// inline asm
	prmt.b32 %r3800, %r3801, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r3800;
	ld.local.u32 	%r3803, [%rd8];
	// inline asm
	prmt.b32 %r3802, %r3803, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r3802;
	ld.local.u32 	%r3805, [%rd8+4];
	// inline asm
	prmt.b32 %r3804, %r3805, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r3804;
	ld.local.u32 	%r3807, [%rd8+8];
	// inline asm
	prmt.b32 %r3806, %r3807, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r3806;
	ld.local.u32 	%r3809, [%rd8+12];
	// inline asm
	prmt.b32 %r3808, %r3809, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r3808;
	sub.s32 	%r3812, %r2, %r39223;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd142;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd143;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd144;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd145;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd146;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd147;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd148;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd149;
	.param .b32 param9;
	st.param.b32	[param9+0], %r3812;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 30
	ld.global.u32 	%r3813, [%rd141+12];
	cvt.u64.u32	%rd27, %r3813;
	mul.wide.u32 	%rd192, %r3813, 568;
	add.s64 	%rd193, %rd140, %rd192;
	ld.global.u32 	%r6, [%rd193+512];
	ld.const.u64 	%rd28, [k_sha512];
	ld.const.u64 	%rd29, [k_sha512+8];
	ld.const.u64 	%rd30, [k_sha512+16];
	ld.const.u64 	%rd31, [k_sha512+24];
	ld.const.u64 	%rd32, [k_sha512+32];
	ld.const.u64 	%rd33, [k_sha512+40];
	ld.const.u64 	%rd34, [k_sha512+48];
	ld.const.u64 	%rd35, [k_sha512+56];
	ld.const.u64 	%rd36, [k_sha512+64];
	ld.const.u64 	%rd37, [k_sha512+72];
	ld.const.u64 	%rd38, [k_sha512+80];
	ld.const.u64 	%rd39, [k_sha512+88];
	ld.const.u64 	%rd40, [k_sha512+96];
	ld.const.u64 	%rd41, [k_sha512+104];
	ld.const.u64 	%rd42, [k_sha512+112];
	ld.const.u64 	%rd43, [k_sha512+120];
	ld.const.u64 	%rd44, [k_sha512+128];
	ld.const.u64 	%rd45, [k_sha512+136];
	ld.const.u64 	%rd46, [k_sha512+144];
	ld.const.u64 	%rd47, [k_sha512+152];
	ld.const.u64 	%rd48, [k_sha512+160];
	ld.const.u64 	%rd49, [k_sha512+168];
	ld.const.u64 	%rd50, [k_sha512+176];
	ld.const.u64 	%rd51, [k_sha512+184];
	ld.const.u64 	%rd52, [k_sha512+192];
	ld.const.u64 	%rd53, [k_sha512+200];
	ld.const.u64 	%rd54, [k_sha512+208];
	ld.const.u64 	%rd55, [k_sha512+216];
	ld.const.u64 	%rd56, [k_sha512+224];
	ld.const.u64 	%rd57, [k_sha512+232];
	ld.const.u64 	%rd58, [k_sha512+240];
	ld.const.u64 	%rd59, [k_sha512+248];
	ld.const.u64 	%rd60, [k_sha512+256];
	ld.const.u64 	%rd61, [k_sha512+264];
	ld.const.u64 	%rd62, [k_sha512+272];
	ld.const.u64 	%rd63, [k_sha512+280];
	ld.const.u64 	%rd64, [k_sha512+288];
	ld.const.u64 	%rd65, [k_sha512+296];
	ld.const.u64 	%rd66, [k_sha512+304];
	ld.const.u64 	%rd67, [k_sha512+312];
	ld.const.u64 	%rd68, [k_sha512+320];
	ld.const.u64 	%rd69, [k_sha512+328];
	ld.const.u64 	%rd70, [k_sha512+336];
	ld.const.u64 	%rd71, [k_sha512+344];
	ld.const.u64 	%rd72, [k_sha512+352];
	ld.const.u64 	%rd73, [k_sha512+360];
	ld.const.u64 	%rd74, [k_sha512+368];
	ld.const.u64 	%rd75, [k_sha512+376];
	ld.const.u64 	%rd76, [k_sha512+384];
	ld.const.u64 	%rd77, [k_sha512+392];
	ld.const.u64 	%rd78, [k_sha512+400];
	ld.const.u64 	%rd79, [k_sha512+408];
	ld.const.u64 	%rd80, [k_sha512+416];
	ld.const.u64 	%rd81, [k_sha512+424];
	ld.const.u64 	%rd82, [k_sha512+432];
	ld.const.u64 	%rd83, [k_sha512+440];
	ld.const.u64 	%rd84, [k_sha512+448];
	ld.const.u64 	%rd85, [k_sha512+456];
	ld.const.u64 	%rd86, [k_sha512+464];
	ld.const.u64 	%rd87, [k_sha512+472];
	ld.const.u64 	%rd88, [k_sha512+480];
	ld.const.u64 	%rd89, [k_sha512+488];
	ld.const.u64 	%rd90, [k_sha512+496];
	ld.const.u64 	%rd91, [k_sha512+504];
	ld.const.u64 	%rd92, [k_sha512+512];
	ld.const.u64 	%rd93, [k_sha512+520];
	ld.const.u64 	%rd94, [k_sha512+528];
	ld.const.u64 	%rd95, [k_sha512+536];
	ld.const.u64 	%rd96, [k_sha512+544];
	ld.const.u64 	%rd97, [k_sha512+552];
	ld.const.u64 	%rd98, [k_sha512+560];
	ld.const.u64 	%rd99, [k_sha512+568];
	ld.const.u64 	%rd100, [k_sha512+576];
	ld.const.u64 	%rd101, [k_sha512+584];
	ld.const.u64 	%rd102, [k_sha512+592];
	ld.const.u64 	%rd103, [k_sha512+600];
	ld.const.u64 	%rd104, [k_sha512+608];
	ld.const.u64 	%rd105, [k_sha512+616];
	ld.const.u64 	%rd106, [k_sha512+624];
	mov.u32 	%r39225, 0;
	ld.const.u64 	%rd107, [k_sha512+632];
	mul.lo.s64 	%rd194, %rd27, 568;
	add.s64 	%rd195, %rd140, %rd194;
	mov.u32 	%r39226, %r39225;
	bra.uni 	BB1_4;

BB1_310:
	st.local.u64 	[%rd9+56], %rd23217;
	st.local.v2.u32 	[%rd9+64], {%r39420, %r39419};
	st.local.v2.u32 	[%rd9+72], {%r39418, %r39417};
	st.local.v2.u32 	[%rd9+80], {%r39424, %r39423};
	st.local.v2.u32 	[%rd9+88], {%r39422, %r39421};
	st.local.v2.u32 	[%rd9+96], {%r39428, %r39427};
	st.local.v2.u32 	[%rd9+104], {%r39426, %r39425};
	st.local.v2.u32 	[%rd9+112], {%r39432, %r39431};
	st.local.v2.u32 	[%rd9+120], {%r39430, %r39429};
	st.local.v2.u32 	[%rd9+128], {%r39436, %r39435};
	st.local.v2.u32 	[%rd9+136], {%r39434, %r39433};
	st.local.v2.u32 	[%rd9+144], {%r39440, %r39439};
	st.local.v2.u32 	[%rd9+152], {%r39438, %r39437};
	st.local.v2.u32 	[%rd9+160], {%r39444, %r39443};
	st.local.v2.u32 	[%rd9+168], {%r39442, %r39441};
	st.local.v2.u32 	[%rd9+176], {%r39448, %r39447};
	st.local.v2.u32 	[%rd9+184], {%r39446, %r39445};
	add.s32 	%r39225, %r39225, 128;
	add.s32 	%r39226, %r39226, 32;

BB1_4:
	add.s32 	%r3814, %r6, -128;
	setp.lt.s32	%p3, %r39225, %r3814;
	mul.wide.s32 	%rd196, %r39226, 4;
	add.s64 	%rd197, %rd195, %rd196;
	ld.global.u32 	%r9, [%rd197];
	add.s32 	%r3815, %r39226, 1;
	mul.wide.s32 	%rd198, %r3815, 4;
	add.s64 	%rd199, %rd195, %rd198;
	ld.global.u32 	%r10, [%rd199];
	add.s32 	%r3816, %r39226, 2;
	mul.wide.s32 	%rd200, %r3816, 4;
	add.s64 	%rd201, %rd195, %rd200;
	ld.global.u32 	%r11, [%rd201];
	add.s32 	%r3817, %r39226, 3;
	mul.wide.s32 	%rd202, %r3817, 4;
	add.s64 	%rd203, %rd195, %rd202;
	ld.global.u32 	%r12, [%rd203];
	add.s32 	%r3818, %r39226, 4;
	mul.wide.s32 	%rd204, %r3818, 4;
	add.s64 	%rd205, %rd195, %rd204;
	ld.global.u32 	%r13, [%rd205];
	add.s32 	%r3819, %r39226, 5;
	mul.wide.s32 	%rd206, %r3819, 4;
	add.s64 	%rd207, %rd195, %rd206;
	ld.global.u32 	%r14, [%rd207];
	add.s32 	%r3820, %r39226, 6;
	mul.wide.s32 	%rd208, %r3820, 4;
	add.s64 	%rd209, %rd195, %rd208;
	ld.global.u32 	%r15, [%rd209];
	add.s32 	%r3821, %r39226, 7;
	mul.wide.s32 	%rd210, %r3821, 4;
	add.s64 	%rd211, %rd195, %rd210;
	ld.global.u32 	%r16, [%rd211];
	add.s32 	%r3822, %r39226, 8;
	mul.wide.s32 	%rd212, %r3822, 4;
	add.s64 	%rd213, %rd195, %rd212;
	ld.global.u32 	%r17, [%rd213];
	add.s32 	%r3823, %r39226, 9;
	mul.wide.s32 	%rd214, %r3823, 4;
	add.s64 	%rd215, %rd195, %rd214;
	ld.global.u32 	%r18, [%rd215];
	add.s32 	%r3824, %r39226, 10;
	mul.wide.s32 	%rd216, %r3824, 4;
	add.s64 	%rd217, %rd195, %rd216;
	ld.global.u32 	%r19, [%rd217];
	add.s32 	%r3825, %r39226, 11;
	mul.wide.s32 	%rd218, %r3825, 4;
	add.s64 	%rd219, %rd195, %rd218;
	ld.global.u32 	%r20, [%rd219];
	add.s32 	%r3826, %r39226, 12;
	mul.wide.s32 	%rd220, %r3826, 4;
	add.s64 	%rd221, %rd195, %rd220;
	ld.global.u32 	%r21, [%rd221];
	add.s32 	%r3827, %r39226, 13;
	mul.wide.s32 	%rd222, %r3827, 4;
	add.s64 	%rd223, %rd195, %rd222;
	ld.global.u32 	%r22, [%rd223];
	add.s32 	%r3828, %r39226, 14;
	mul.wide.s32 	%rd224, %r3828, 4;
	add.s64 	%rd225, %rd195, %rd224;
	ld.global.u32 	%r23, [%rd225];
	add.s32 	%r3829, %r39226, 15;
	mul.wide.s32 	%rd226, %r3829, 4;
	add.s64 	%rd227, %rd195, %rd226;
	ld.global.u32 	%r24, [%rd227];
	add.s32 	%r3830, %r39226, 16;
	mul.wide.s32 	%rd228, %r3830, 4;
	add.s64 	%rd229, %rd195, %rd228;
	ld.global.u32 	%r25, [%rd229];
	add.s32 	%r3831, %r39226, 17;
	mul.wide.s32 	%rd230, %r3831, 4;
	add.s64 	%rd231, %rd195, %rd230;
	ld.global.u32 	%r26, [%rd231];
	add.s32 	%r3832, %r39226, 18;
	mul.wide.s32 	%rd232, %r3832, 4;
	add.s64 	%rd233, %rd195, %rd232;
	ld.global.u32 	%r27, [%rd233];
	add.s32 	%r3833, %r39226, 19;
	mul.wide.s32 	%rd234, %r3833, 4;
	add.s64 	%rd235, %rd195, %rd234;
	ld.global.u32 	%r28, [%rd235];
	add.s32 	%r3834, %r39226, 20;
	mul.wide.s32 	%rd236, %r3834, 4;
	add.s64 	%rd237, %rd195, %rd236;
	ld.global.u32 	%r29, [%rd237];
	add.s32 	%r3835, %r39226, 21;
	mul.wide.s32 	%rd238, %r3835, 4;
	add.s64 	%rd239, %rd195, %rd238;
	ld.global.u32 	%r30, [%rd239];
	add.s32 	%r3836, %r39226, 22;
	mul.wide.s32 	%rd240, %r3836, 4;
	add.s64 	%rd241, %rd195, %rd240;
	ld.global.u32 	%r31, [%rd241];
	add.s32 	%r3837, %r39226, 23;
	mul.wide.s32 	%rd242, %r3837, 4;
	add.s64 	%rd243, %rd195, %rd242;
	ld.global.u32 	%r32, [%rd243];
	add.s32 	%r3838, %r39226, 24;
	mul.wide.s32 	%rd244, %r3838, 4;
	add.s64 	%rd245, %rd195, %rd244;
	ld.global.u32 	%r33, [%rd245];
	add.s32 	%r3839, %r39226, 25;
	mul.wide.s32 	%rd246, %r3839, 4;
	add.s64 	%rd247, %rd195, %rd246;
	ld.global.u32 	%r34, [%rd247];
	add.s32 	%r3840, %r39226, 26;
	mul.wide.s32 	%rd248, %r3840, 4;
	add.s64 	%rd249, %rd195, %rd248;
	ld.global.u32 	%r35, [%rd249];
	add.s32 	%r3841, %r39226, 27;
	mul.wide.s32 	%rd250, %r3841, 4;
	add.s64 	%rd251, %rd195, %rd250;
	ld.global.u32 	%r36, [%rd251];
	add.s32 	%r3842, %r39226, 28;
	mul.wide.s32 	%rd252, %r3842, 4;
	add.s64 	%rd253, %rd195, %rd252;
	ld.global.u32 	%r37, [%rd253];
	add.s32 	%r3843, %r39226, 29;
	mul.wide.s32 	%rd254, %r3843, 4;
	add.s64 	%rd255, %rd195, %rd254;
	ld.global.u32 	%r38, [%rd255];
	add.s32 	%r3844, %r39226, 30;
	mul.wide.s32 	%rd256, %r3844, 4;
	add.s64 	%rd257, %rd195, %rd256;
	ld.global.u32 	%r39, [%rd257];
	add.s32 	%r3845, %r39226, 31;
	mul.wide.s32 	%rd258, %r3845, 4;
	add.s64 	%rd259, %rd195, %rd258;
	ld.global.u32 	%r40, [%rd259];
	@%p3 bra 	BB1_220;
	bra.uni 	BB1_5;

BB1_220:
	// inline asm
	prmt.b32 %r19864, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19866, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19868, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19870, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r35, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r40, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r1949, [%rd9+192];
	and.b32  	%r1950, %r1949, 127;
	add.s32 	%r19928, %r1949, 128;
	st.local.u32 	[%rd9+192], %r19928;
	setp.eq.s32	%p115, %r1950, 0;
	@%p115 bra 	BB1_309;
	bra.uni 	BB1_221;

BB1_309:
	mov.u32 	%r39420, 0;
	st.local.v2.u32 	[%rd9+64], {%r19864, %r19866};
	st.local.v2.u32 	[%rd9+72], {%r19868, %r19870};
	st.local.v2.u32 	[%rd9+80], {%r39392, %r39391};
	st.local.v2.u32 	[%rd9+88], {%r39390, %r39389};
	st.local.v2.u32 	[%rd9+96], {%r39396, %r39395};
	st.local.v2.u32 	[%rd9+104], {%r39394, %r39393};
	st.local.v2.u32 	[%rd9+112], {%r39400, %r39399};
	st.local.v2.u32 	[%rd9+120], {%r39398, %r39397};
	st.local.v2.u32 	[%rd9+128], {%r39404, %r39403};
	st.local.v2.u32 	[%rd9+136], {%r39402, %r39401};
	st.local.v2.u32 	[%rd9+144], {%r39408, %r39407};
	st.local.v2.u32 	[%rd9+152], {%r39406, %r39405};
	st.local.v2.u32 	[%rd9+160], {%r39412, %r39411};
	st.local.v2.u32 	[%rd9+168], {%r39410, %r39409};
	st.local.v2.u32 	[%rd9+176], {%r39416, %r39415};
	st.local.v2.u32 	[%rd9+184], {%r39414, %r39413};
	mov.b64	%rd14157, {%r19866, %r19864};
	mov.b64	%rd14158, {%r19870, %r19868};
	mov.b64	%rd14159, {%r39391, %r39392};
	mov.b64	%rd14160, {%r39389, %r39390};
	mov.b64	%rd14161, {%r39395, %r39396};
	mov.b64	%rd14162, {%r39393, %r39394};
	mov.b64	%rd14163, {%r39399, %r39400};
	mov.b64	%rd14164, {%r39397, %r39398};
	mov.b64	%rd14165, {%r39403, %r39404};
	mov.b64	%rd14166, {%r39401, %r39402};
	mov.b64	%rd14167, {%r39407, %r39408};
	mov.b64	%rd14168, {%r39405, %r39406};
	mov.b64	%rd14169, {%r39411, %r39412};
	mov.b64	%rd14170, {%r39409, %r39410};
	mov.b64	%rd14171, {%r39415, %r39416};
	mov.b64	%rd14172, {%r39413, %r39414};
	ld.local.u64 	%rd14173, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27256,%dummy}, %rd14173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27257}, %rd14173;
	}
	shf.r.wrap.b32 	%r27258, %r27257, %r27256, 14;
	shf.r.wrap.b32 	%r27259, %r27256, %r27257, 14;
	mov.b64 	%rd14174, {%r27259, %r27258};
	shf.r.wrap.b32 	%r27260, %r27257, %r27256, 18;
	shf.r.wrap.b32 	%r27261, %r27256, %r27257, 18;
	mov.b64 	%rd14175, {%r27261, %r27260};
	xor.b64  	%rd14176, %rd14175, %rd14174;
	shf.l.wrap.b32 	%r27262, %r27256, %r27257, 23;
	shf.l.wrap.b32 	%r27263, %r27257, %r27256, 23;
	mov.b64 	%rd14177, {%r27263, %r27262};
	xor.b64  	%rd14178, %rd14176, %rd14177;
	ld.local.u64 	%rd14179, [%rd9+48];
	ld.local.u64 	%rd14180, [%rd9+40];
	xor.b64  	%rd14181, %rd14179, %rd14180;
	and.b64  	%rd14182, %rd14181, %rd14173;
	xor.b64  	%rd14183, %rd14182, %rd14179;
	add.s64 	%rd14184, %rd14157, %rd28;
	ld.local.u64 	%rd14185, [%rd9+56];
	add.s64 	%rd14186, %rd14184, %rd14185;
	add.s64 	%rd14187, %rd14186, %rd14183;
	add.s64 	%rd14188, %rd14187, %rd14178;
	ld.local.u64 	%rd14189, [%rd9+24];
	add.s64 	%rd14190, %rd14188, %rd14189;
	ld.local.u64 	%rd14191, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27264,%dummy}, %rd14191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27265}, %rd14191;
	}
	shf.r.wrap.b32 	%r27266, %r27265, %r27264, 28;
	shf.r.wrap.b32 	%r27267, %r27264, %r27265, 28;
	mov.b64 	%rd14192, {%r27267, %r27266};
	shf.l.wrap.b32 	%r27268, %r27264, %r27265, 30;
	shf.l.wrap.b32 	%r27269, %r27265, %r27264, 30;
	mov.b64 	%rd14193, {%r27269, %r27268};
	xor.b64  	%rd14194, %rd14193, %rd14192;
	shf.l.wrap.b32 	%r27270, %r27264, %r27265, 25;
	shf.l.wrap.b32 	%r27271, %r27265, %r27264, 25;
	mov.b64 	%rd14195, {%r27271, %r27270};
	xor.b64  	%rd14196, %rd14194, %rd14195;
	ld.local.u64 	%rd14197, [%rd9+8];
	and.b64  	%rd14198, %rd14197, %rd14191;
	xor.b64  	%rd14199, %rd14197, %rd14191;
	ld.local.u64 	%rd14200, [%rd9+16];
	and.b64  	%rd14201, %rd14200, %rd14199;
	or.b64  	%rd14202, %rd14201, %rd14198;
	add.s64 	%rd14203, %rd14188, %rd14202;
	add.s64 	%rd14204, %rd14203, %rd14196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27272,%dummy}, %rd14190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27273}, %rd14190;
	}
	shf.r.wrap.b32 	%r27274, %r27273, %r27272, 14;
	shf.r.wrap.b32 	%r27275, %r27272, %r27273, 14;
	mov.b64 	%rd14205, {%r27275, %r27274};
	shf.r.wrap.b32 	%r27276, %r27273, %r27272, 18;
	shf.r.wrap.b32 	%r27277, %r27272, %r27273, 18;
	mov.b64 	%rd14206, {%r27277, %r27276};
	xor.b64  	%rd14207, %rd14206, %rd14205;
	shf.l.wrap.b32 	%r27278, %r27272, %r27273, 23;
	shf.l.wrap.b32 	%r27279, %r27273, %r27272, 23;
	mov.b64 	%rd14208, {%r27279, %r27278};
	xor.b64  	%rd14209, %rd14207, %rd14208;
	xor.b64  	%rd14210, %rd14180, %rd14173;
	and.b64  	%rd14211, %rd14190, %rd14210;
	xor.b64  	%rd14212, %rd14211, %rd14180;
	add.s64 	%rd14213, %rd14158, %rd29;
	add.s64 	%rd14214, %rd14213, %rd14179;
	add.s64 	%rd14215, %rd14214, %rd14212;
	add.s64 	%rd14216, %rd14215, %rd14209;
	add.s64 	%rd14217, %rd14216, %rd14200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27280,%dummy}, %rd14204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27281}, %rd14204;
	}
	shf.r.wrap.b32 	%r27282, %r27281, %r27280, 28;
	shf.r.wrap.b32 	%r27283, %r27280, %r27281, 28;
	mov.b64 	%rd14218, {%r27283, %r27282};
	shf.l.wrap.b32 	%r27284, %r27280, %r27281, 30;
	shf.l.wrap.b32 	%r27285, %r27281, %r27280, 30;
	mov.b64 	%rd14219, {%r27285, %r27284};
	xor.b64  	%rd14220, %rd14219, %rd14218;
	shf.l.wrap.b32 	%r27286, %r27280, %r27281, 25;
	shf.l.wrap.b32 	%r27287, %r27281, %r27280, 25;
	mov.b64 	%rd14221, {%r27287, %r27286};
	xor.b64  	%rd14222, %rd14220, %rd14221;
	and.b64  	%rd14223, %rd14204, %rd14191;
	xor.b64  	%rd14224, %rd14204, %rd14191;
	and.b64  	%rd14225, %rd14224, %rd14197;
	or.b64  	%rd14226, %rd14225, %rd14223;
	add.s64 	%rd14227, %rd14216, %rd14226;
	add.s64 	%rd14228, %rd14227, %rd14222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27288,%dummy}, %rd14217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27289}, %rd14217;
	}
	shf.r.wrap.b32 	%r27290, %r27289, %r27288, 14;
	shf.r.wrap.b32 	%r27291, %r27288, %r27289, 14;
	mov.b64 	%rd14229, {%r27291, %r27290};
	shf.r.wrap.b32 	%r27292, %r27289, %r27288, 18;
	shf.r.wrap.b32 	%r27293, %r27288, %r27289, 18;
	mov.b64 	%rd14230, {%r27293, %r27292};
	xor.b64  	%rd14231, %rd14230, %rd14229;
	shf.l.wrap.b32 	%r27294, %r27288, %r27289, 23;
	shf.l.wrap.b32 	%r27295, %r27289, %r27288, 23;
	mov.b64 	%rd14232, {%r27295, %r27294};
	xor.b64  	%rd14233, %rd14231, %rd14232;
	xor.b64  	%rd14234, %rd14190, %rd14173;
	and.b64  	%rd14235, %rd14217, %rd14234;
	xor.b64  	%rd14236, %rd14235, %rd14173;
	add.s64 	%rd14237, %rd14159, %rd30;
	add.s64 	%rd14238, %rd14237, %rd14180;
	add.s64 	%rd14239, %rd14238, %rd14236;
	add.s64 	%rd14240, %rd14239, %rd14233;
	add.s64 	%rd14241, %rd14240, %rd14197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27296,%dummy}, %rd14228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27297}, %rd14228;
	}
	shf.r.wrap.b32 	%r27298, %r27297, %r27296, 28;
	shf.r.wrap.b32 	%r27299, %r27296, %r27297, 28;
	mov.b64 	%rd14242, {%r27299, %r27298};
	shf.l.wrap.b32 	%r27300, %r27296, %r27297, 30;
	shf.l.wrap.b32 	%r27301, %r27297, %r27296, 30;
	mov.b64 	%rd14243, {%r27301, %r27300};
	xor.b64  	%rd14244, %rd14243, %rd14242;
	shf.l.wrap.b32 	%r27302, %r27296, %r27297, 25;
	shf.l.wrap.b32 	%r27303, %r27297, %r27296, 25;
	mov.b64 	%rd14245, {%r27303, %r27302};
	xor.b64  	%rd14246, %rd14244, %rd14245;
	and.b64  	%rd14247, %rd14228, %rd14204;
	xor.b64  	%rd14248, %rd14228, %rd14204;
	and.b64  	%rd14249, %rd14248, %rd14191;
	or.b64  	%rd14250, %rd14249, %rd14247;
	add.s64 	%rd14251, %rd14240, %rd14250;
	add.s64 	%rd14252, %rd14251, %rd14246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27304,%dummy}, %rd14241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27305}, %rd14241;
	}
	shf.r.wrap.b32 	%r27306, %r27305, %r27304, 14;
	shf.r.wrap.b32 	%r27307, %r27304, %r27305, 14;
	mov.b64 	%rd14253, {%r27307, %r27306};
	shf.r.wrap.b32 	%r27308, %r27305, %r27304, 18;
	shf.r.wrap.b32 	%r27309, %r27304, %r27305, 18;
	mov.b64 	%rd14254, {%r27309, %r27308};
	xor.b64  	%rd14255, %rd14254, %rd14253;
	shf.l.wrap.b32 	%r27310, %r27304, %r27305, 23;
	shf.l.wrap.b32 	%r27311, %r27305, %r27304, 23;
	mov.b64 	%rd14256, {%r27311, %r27310};
	xor.b64  	%rd14257, %rd14255, %rd14256;
	xor.b64  	%rd14258, %rd14217, %rd14190;
	and.b64  	%rd14259, %rd14241, %rd14258;
	xor.b64  	%rd14260, %rd14259, %rd14190;
	add.s64 	%rd14261, %rd14160, %rd31;
	add.s64 	%rd14262, %rd14261, %rd14173;
	add.s64 	%rd14263, %rd14262, %rd14260;
	add.s64 	%rd14264, %rd14263, %rd14257;
	add.s64 	%rd14265, %rd14264, %rd14191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27312,%dummy}, %rd14252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27313}, %rd14252;
	}
	shf.r.wrap.b32 	%r27314, %r27313, %r27312, 28;
	shf.r.wrap.b32 	%r27315, %r27312, %r27313, 28;
	mov.b64 	%rd14266, {%r27315, %r27314};
	shf.l.wrap.b32 	%r27316, %r27312, %r27313, 30;
	shf.l.wrap.b32 	%r27317, %r27313, %r27312, 30;
	mov.b64 	%rd14267, {%r27317, %r27316};
	xor.b64  	%rd14268, %rd14267, %rd14266;
	shf.l.wrap.b32 	%r27318, %r27312, %r27313, 25;
	shf.l.wrap.b32 	%r27319, %r27313, %r27312, 25;
	mov.b64 	%rd14269, {%r27319, %r27318};
	xor.b64  	%rd14270, %rd14268, %rd14269;
	and.b64  	%rd14271, %rd14252, %rd14228;
	xor.b64  	%rd14272, %rd14252, %rd14228;
	and.b64  	%rd14273, %rd14272, %rd14204;
	or.b64  	%rd14274, %rd14273, %rd14271;
	add.s64 	%rd14275, %rd14264, %rd14274;
	add.s64 	%rd14276, %rd14275, %rd14270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27320,%dummy}, %rd14265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27321}, %rd14265;
	}
	shf.r.wrap.b32 	%r27322, %r27321, %r27320, 14;
	shf.r.wrap.b32 	%r27323, %r27320, %r27321, 14;
	mov.b64 	%rd14277, {%r27323, %r27322};
	shf.r.wrap.b32 	%r27324, %r27321, %r27320, 18;
	shf.r.wrap.b32 	%r27325, %r27320, %r27321, 18;
	mov.b64 	%rd14278, {%r27325, %r27324};
	xor.b64  	%rd14279, %rd14278, %rd14277;
	shf.l.wrap.b32 	%r27326, %r27320, %r27321, 23;
	shf.l.wrap.b32 	%r27327, %r27321, %r27320, 23;
	mov.b64 	%rd14280, {%r27327, %r27326};
	xor.b64  	%rd14281, %rd14279, %rd14280;
	xor.b64  	%rd14282, %rd14241, %rd14217;
	and.b64  	%rd14283, %rd14265, %rd14282;
	xor.b64  	%rd14284, %rd14283, %rd14217;
	add.s64 	%rd14285, %rd14161, %rd32;
	add.s64 	%rd14286, %rd14285, %rd14190;
	add.s64 	%rd14287, %rd14286, %rd14284;
	add.s64 	%rd14288, %rd14287, %rd14281;
	add.s64 	%rd14289, %rd14288, %rd14204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27328,%dummy}, %rd14276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27329}, %rd14276;
	}
	shf.r.wrap.b32 	%r27330, %r27329, %r27328, 28;
	shf.r.wrap.b32 	%r27331, %r27328, %r27329, 28;
	mov.b64 	%rd14290, {%r27331, %r27330};
	shf.l.wrap.b32 	%r27332, %r27328, %r27329, 30;
	shf.l.wrap.b32 	%r27333, %r27329, %r27328, 30;
	mov.b64 	%rd14291, {%r27333, %r27332};
	xor.b64  	%rd14292, %rd14291, %rd14290;
	shf.l.wrap.b32 	%r27334, %r27328, %r27329, 25;
	shf.l.wrap.b32 	%r27335, %r27329, %r27328, 25;
	mov.b64 	%rd14293, {%r27335, %r27334};
	xor.b64  	%rd14294, %rd14292, %rd14293;
	and.b64  	%rd14295, %rd14276, %rd14252;
	xor.b64  	%rd14296, %rd14276, %rd14252;
	and.b64  	%rd14297, %rd14296, %rd14228;
	or.b64  	%rd14298, %rd14297, %rd14295;
	add.s64 	%rd14299, %rd14288, %rd14298;
	add.s64 	%rd14300, %rd14299, %rd14294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27336,%dummy}, %rd14289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27337}, %rd14289;
	}
	shf.r.wrap.b32 	%r27338, %r27337, %r27336, 14;
	shf.r.wrap.b32 	%r27339, %r27336, %r27337, 14;
	mov.b64 	%rd14301, {%r27339, %r27338};
	shf.r.wrap.b32 	%r27340, %r27337, %r27336, 18;
	shf.r.wrap.b32 	%r27341, %r27336, %r27337, 18;
	mov.b64 	%rd14302, {%r27341, %r27340};
	xor.b64  	%rd14303, %rd14302, %rd14301;
	shf.l.wrap.b32 	%r27342, %r27336, %r27337, 23;
	shf.l.wrap.b32 	%r27343, %r27337, %r27336, 23;
	mov.b64 	%rd14304, {%r27343, %r27342};
	xor.b64  	%rd14305, %rd14303, %rd14304;
	xor.b64  	%rd14306, %rd14265, %rd14241;
	and.b64  	%rd14307, %rd14289, %rd14306;
	xor.b64  	%rd14308, %rd14307, %rd14241;
	add.s64 	%rd14309, %rd14162, %rd33;
	add.s64 	%rd14310, %rd14309, %rd14217;
	add.s64 	%rd14311, %rd14310, %rd14308;
	add.s64 	%rd14312, %rd14311, %rd14305;
	add.s64 	%rd14313, %rd14312, %rd14228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27344,%dummy}, %rd14300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27345}, %rd14300;
	}
	shf.r.wrap.b32 	%r27346, %r27345, %r27344, 28;
	shf.r.wrap.b32 	%r27347, %r27344, %r27345, 28;
	mov.b64 	%rd14314, {%r27347, %r27346};
	shf.l.wrap.b32 	%r27348, %r27344, %r27345, 30;
	shf.l.wrap.b32 	%r27349, %r27345, %r27344, 30;
	mov.b64 	%rd14315, {%r27349, %r27348};
	xor.b64  	%rd14316, %rd14315, %rd14314;
	shf.l.wrap.b32 	%r27350, %r27344, %r27345, 25;
	shf.l.wrap.b32 	%r27351, %r27345, %r27344, 25;
	mov.b64 	%rd14317, {%r27351, %r27350};
	xor.b64  	%rd14318, %rd14316, %rd14317;
	and.b64  	%rd14319, %rd14300, %rd14276;
	xor.b64  	%rd14320, %rd14300, %rd14276;
	and.b64  	%rd14321, %rd14320, %rd14252;
	or.b64  	%rd14322, %rd14321, %rd14319;
	add.s64 	%rd14323, %rd14312, %rd14322;
	add.s64 	%rd14324, %rd14323, %rd14318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27352,%dummy}, %rd14313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27353}, %rd14313;
	}
	shf.r.wrap.b32 	%r27354, %r27353, %r27352, 14;
	shf.r.wrap.b32 	%r27355, %r27352, %r27353, 14;
	mov.b64 	%rd14325, {%r27355, %r27354};
	shf.r.wrap.b32 	%r27356, %r27353, %r27352, 18;
	shf.r.wrap.b32 	%r27357, %r27352, %r27353, 18;
	mov.b64 	%rd14326, {%r27357, %r27356};
	xor.b64  	%rd14327, %rd14326, %rd14325;
	shf.l.wrap.b32 	%r27358, %r27352, %r27353, 23;
	shf.l.wrap.b32 	%r27359, %r27353, %r27352, 23;
	mov.b64 	%rd14328, {%r27359, %r27358};
	xor.b64  	%rd14329, %rd14327, %rd14328;
	xor.b64  	%rd14330, %rd14289, %rd14265;
	and.b64  	%rd14331, %rd14313, %rd14330;
	xor.b64  	%rd14332, %rd14331, %rd14265;
	add.s64 	%rd14333, %rd14163, %rd34;
	add.s64 	%rd14334, %rd14333, %rd14241;
	add.s64 	%rd14335, %rd14334, %rd14332;
	add.s64 	%rd14336, %rd14335, %rd14329;
	add.s64 	%rd14337, %rd14336, %rd14252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27360,%dummy}, %rd14324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27361}, %rd14324;
	}
	shf.r.wrap.b32 	%r27362, %r27361, %r27360, 28;
	shf.r.wrap.b32 	%r27363, %r27360, %r27361, 28;
	mov.b64 	%rd14338, {%r27363, %r27362};
	shf.l.wrap.b32 	%r27364, %r27360, %r27361, 30;
	shf.l.wrap.b32 	%r27365, %r27361, %r27360, 30;
	mov.b64 	%rd14339, {%r27365, %r27364};
	xor.b64  	%rd14340, %rd14339, %rd14338;
	shf.l.wrap.b32 	%r27366, %r27360, %r27361, 25;
	shf.l.wrap.b32 	%r27367, %r27361, %r27360, 25;
	mov.b64 	%rd14341, {%r27367, %r27366};
	xor.b64  	%rd14342, %rd14340, %rd14341;
	and.b64  	%rd14343, %rd14324, %rd14300;
	xor.b64  	%rd14344, %rd14324, %rd14300;
	and.b64  	%rd14345, %rd14344, %rd14276;
	or.b64  	%rd14346, %rd14345, %rd14343;
	add.s64 	%rd14347, %rd14336, %rd14346;
	add.s64 	%rd14348, %rd14347, %rd14342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27368,%dummy}, %rd14337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27369}, %rd14337;
	}
	shf.r.wrap.b32 	%r27370, %r27369, %r27368, 14;
	shf.r.wrap.b32 	%r27371, %r27368, %r27369, 14;
	mov.b64 	%rd14349, {%r27371, %r27370};
	shf.r.wrap.b32 	%r27372, %r27369, %r27368, 18;
	shf.r.wrap.b32 	%r27373, %r27368, %r27369, 18;
	mov.b64 	%rd14350, {%r27373, %r27372};
	xor.b64  	%rd14351, %rd14350, %rd14349;
	shf.l.wrap.b32 	%r27374, %r27368, %r27369, 23;
	shf.l.wrap.b32 	%r27375, %r27369, %r27368, 23;
	mov.b64 	%rd14352, {%r27375, %r27374};
	xor.b64  	%rd14353, %rd14351, %rd14352;
	xor.b64  	%rd14354, %rd14313, %rd14289;
	and.b64  	%rd14355, %rd14337, %rd14354;
	xor.b64  	%rd14356, %rd14355, %rd14289;
	add.s64 	%rd14357, %rd14164, %rd35;
	add.s64 	%rd14358, %rd14357, %rd14265;
	add.s64 	%rd14359, %rd14358, %rd14356;
	add.s64 	%rd14360, %rd14359, %rd14353;
	add.s64 	%rd14361, %rd14360, %rd14276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27376,%dummy}, %rd14348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27377}, %rd14348;
	}
	shf.r.wrap.b32 	%r27378, %r27377, %r27376, 28;
	shf.r.wrap.b32 	%r27379, %r27376, %r27377, 28;
	mov.b64 	%rd14362, {%r27379, %r27378};
	shf.l.wrap.b32 	%r27380, %r27376, %r27377, 30;
	shf.l.wrap.b32 	%r27381, %r27377, %r27376, 30;
	mov.b64 	%rd14363, {%r27381, %r27380};
	xor.b64  	%rd14364, %rd14363, %rd14362;
	shf.l.wrap.b32 	%r27382, %r27376, %r27377, 25;
	shf.l.wrap.b32 	%r27383, %r27377, %r27376, 25;
	mov.b64 	%rd14365, {%r27383, %r27382};
	xor.b64  	%rd14366, %rd14364, %rd14365;
	and.b64  	%rd14367, %rd14348, %rd14324;
	xor.b64  	%rd14368, %rd14348, %rd14324;
	and.b64  	%rd14369, %rd14368, %rd14300;
	or.b64  	%rd14370, %rd14369, %rd14367;
	add.s64 	%rd14371, %rd14360, %rd14370;
	add.s64 	%rd14372, %rd14371, %rd14366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27384,%dummy}, %rd14361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27385}, %rd14361;
	}
	shf.r.wrap.b32 	%r27386, %r27385, %r27384, 14;
	shf.r.wrap.b32 	%r27387, %r27384, %r27385, 14;
	mov.b64 	%rd14373, {%r27387, %r27386};
	shf.r.wrap.b32 	%r27388, %r27385, %r27384, 18;
	shf.r.wrap.b32 	%r27389, %r27384, %r27385, 18;
	mov.b64 	%rd14374, {%r27389, %r27388};
	xor.b64  	%rd14375, %rd14374, %rd14373;
	shf.l.wrap.b32 	%r27390, %r27384, %r27385, 23;
	shf.l.wrap.b32 	%r27391, %r27385, %r27384, 23;
	mov.b64 	%rd14376, {%r27391, %r27390};
	xor.b64  	%rd14377, %rd14375, %rd14376;
	xor.b64  	%rd14378, %rd14337, %rd14313;
	and.b64  	%rd14379, %rd14361, %rd14378;
	xor.b64  	%rd14380, %rd14379, %rd14313;
	add.s64 	%rd14381, %rd14165, %rd36;
	add.s64 	%rd14382, %rd14381, %rd14289;
	add.s64 	%rd14383, %rd14382, %rd14380;
	add.s64 	%rd14384, %rd14383, %rd14377;
	add.s64 	%rd14385, %rd14384, %rd14300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27392,%dummy}, %rd14372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27393}, %rd14372;
	}
	shf.r.wrap.b32 	%r27394, %r27393, %r27392, 28;
	shf.r.wrap.b32 	%r27395, %r27392, %r27393, 28;
	mov.b64 	%rd14386, {%r27395, %r27394};
	shf.l.wrap.b32 	%r27396, %r27392, %r27393, 30;
	shf.l.wrap.b32 	%r27397, %r27393, %r27392, 30;
	mov.b64 	%rd14387, {%r27397, %r27396};
	xor.b64  	%rd14388, %rd14387, %rd14386;
	shf.l.wrap.b32 	%r27398, %r27392, %r27393, 25;
	shf.l.wrap.b32 	%r27399, %r27393, %r27392, 25;
	mov.b64 	%rd14389, {%r27399, %r27398};
	xor.b64  	%rd14390, %rd14388, %rd14389;
	and.b64  	%rd14391, %rd14372, %rd14348;
	xor.b64  	%rd14392, %rd14372, %rd14348;
	and.b64  	%rd14393, %rd14392, %rd14324;
	or.b64  	%rd14394, %rd14393, %rd14391;
	add.s64 	%rd14395, %rd14384, %rd14394;
	add.s64 	%rd14396, %rd14395, %rd14390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27400,%dummy}, %rd14385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27401}, %rd14385;
	}
	shf.r.wrap.b32 	%r27402, %r27401, %r27400, 14;
	shf.r.wrap.b32 	%r27403, %r27400, %r27401, 14;
	mov.b64 	%rd14397, {%r27403, %r27402};
	shf.r.wrap.b32 	%r27404, %r27401, %r27400, 18;
	shf.r.wrap.b32 	%r27405, %r27400, %r27401, 18;
	mov.b64 	%rd14398, {%r27405, %r27404};
	xor.b64  	%rd14399, %rd14398, %rd14397;
	shf.l.wrap.b32 	%r27406, %r27400, %r27401, 23;
	shf.l.wrap.b32 	%r27407, %r27401, %r27400, 23;
	mov.b64 	%rd14400, {%r27407, %r27406};
	xor.b64  	%rd14401, %rd14399, %rd14400;
	xor.b64  	%rd14402, %rd14361, %rd14337;
	and.b64  	%rd14403, %rd14385, %rd14402;
	xor.b64  	%rd14404, %rd14403, %rd14337;
	add.s64 	%rd14405, %rd14166, %rd37;
	add.s64 	%rd14406, %rd14405, %rd14313;
	add.s64 	%rd14407, %rd14406, %rd14404;
	add.s64 	%rd14408, %rd14407, %rd14401;
	add.s64 	%rd14409, %rd14408, %rd14324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27408,%dummy}, %rd14396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27409}, %rd14396;
	}
	shf.r.wrap.b32 	%r27410, %r27409, %r27408, 28;
	shf.r.wrap.b32 	%r27411, %r27408, %r27409, 28;
	mov.b64 	%rd14410, {%r27411, %r27410};
	shf.l.wrap.b32 	%r27412, %r27408, %r27409, 30;
	shf.l.wrap.b32 	%r27413, %r27409, %r27408, 30;
	mov.b64 	%rd14411, {%r27413, %r27412};
	xor.b64  	%rd14412, %rd14411, %rd14410;
	shf.l.wrap.b32 	%r27414, %r27408, %r27409, 25;
	shf.l.wrap.b32 	%r27415, %r27409, %r27408, 25;
	mov.b64 	%rd14413, {%r27415, %r27414};
	xor.b64  	%rd14414, %rd14412, %rd14413;
	and.b64  	%rd14415, %rd14396, %rd14372;
	xor.b64  	%rd14416, %rd14396, %rd14372;
	and.b64  	%rd14417, %rd14416, %rd14348;
	or.b64  	%rd14418, %rd14417, %rd14415;
	add.s64 	%rd14419, %rd14408, %rd14418;
	add.s64 	%rd14420, %rd14419, %rd14414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27416,%dummy}, %rd14409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27417}, %rd14409;
	}
	shf.r.wrap.b32 	%r27418, %r27417, %r27416, 14;
	shf.r.wrap.b32 	%r27419, %r27416, %r27417, 14;
	mov.b64 	%rd14421, {%r27419, %r27418};
	shf.r.wrap.b32 	%r27420, %r27417, %r27416, 18;
	shf.r.wrap.b32 	%r27421, %r27416, %r27417, 18;
	mov.b64 	%rd14422, {%r27421, %r27420};
	xor.b64  	%rd14423, %rd14422, %rd14421;
	shf.l.wrap.b32 	%r27422, %r27416, %r27417, 23;
	shf.l.wrap.b32 	%r27423, %r27417, %r27416, 23;
	mov.b64 	%rd14424, {%r27423, %r27422};
	xor.b64  	%rd14425, %rd14423, %rd14424;
	xor.b64  	%rd14426, %rd14385, %rd14361;
	and.b64  	%rd14427, %rd14409, %rd14426;
	xor.b64  	%rd14428, %rd14427, %rd14361;
	add.s64 	%rd14429, %rd14167, %rd38;
	add.s64 	%rd14430, %rd14429, %rd14337;
	add.s64 	%rd14431, %rd14430, %rd14428;
	add.s64 	%rd14432, %rd14431, %rd14425;
	add.s64 	%rd14433, %rd14432, %rd14348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27424,%dummy}, %rd14420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27425}, %rd14420;
	}
	shf.r.wrap.b32 	%r27426, %r27425, %r27424, 28;
	shf.r.wrap.b32 	%r27427, %r27424, %r27425, 28;
	mov.b64 	%rd14434, {%r27427, %r27426};
	shf.l.wrap.b32 	%r27428, %r27424, %r27425, 30;
	shf.l.wrap.b32 	%r27429, %r27425, %r27424, 30;
	mov.b64 	%rd14435, {%r27429, %r27428};
	xor.b64  	%rd14436, %rd14435, %rd14434;
	shf.l.wrap.b32 	%r27430, %r27424, %r27425, 25;
	shf.l.wrap.b32 	%r27431, %r27425, %r27424, 25;
	mov.b64 	%rd14437, {%r27431, %r27430};
	xor.b64  	%rd14438, %rd14436, %rd14437;
	and.b64  	%rd14439, %rd14420, %rd14396;
	xor.b64  	%rd14440, %rd14420, %rd14396;
	and.b64  	%rd14441, %rd14440, %rd14372;
	or.b64  	%rd14442, %rd14441, %rd14439;
	add.s64 	%rd14443, %rd14432, %rd14442;
	add.s64 	%rd14444, %rd14443, %rd14438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27432,%dummy}, %rd14433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27433}, %rd14433;
	}
	shf.r.wrap.b32 	%r27434, %r27433, %r27432, 14;
	shf.r.wrap.b32 	%r27435, %r27432, %r27433, 14;
	mov.b64 	%rd14445, {%r27435, %r27434};
	shf.r.wrap.b32 	%r27436, %r27433, %r27432, 18;
	shf.r.wrap.b32 	%r27437, %r27432, %r27433, 18;
	mov.b64 	%rd14446, {%r27437, %r27436};
	xor.b64  	%rd14447, %rd14446, %rd14445;
	shf.l.wrap.b32 	%r27438, %r27432, %r27433, 23;
	shf.l.wrap.b32 	%r27439, %r27433, %r27432, 23;
	mov.b64 	%rd14448, {%r27439, %r27438};
	xor.b64  	%rd14449, %rd14447, %rd14448;
	xor.b64  	%rd14450, %rd14409, %rd14385;
	and.b64  	%rd14451, %rd14433, %rd14450;
	xor.b64  	%rd14452, %rd14451, %rd14385;
	add.s64 	%rd14453, %rd14168, %rd39;
	add.s64 	%rd14454, %rd14453, %rd14361;
	add.s64 	%rd14455, %rd14454, %rd14452;
	add.s64 	%rd14456, %rd14455, %rd14449;
	add.s64 	%rd14457, %rd14456, %rd14372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27440,%dummy}, %rd14444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27441}, %rd14444;
	}
	shf.r.wrap.b32 	%r27442, %r27441, %r27440, 28;
	shf.r.wrap.b32 	%r27443, %r27440, %r27441, 28;
	mov.b64 	%rd14458, {%r27443, %r27442};
	shf.l.wrap.b32 	%r27444, %r27440, %r27441, 30;
	shf.l.wrap.b32 	%r27445, %r27441, %r27440, 30;
	mov.b64 	%rd14459, {%r27445, %r27444};
	xor.b64  	%rd14460, %rd14459, %rd14458;
	shf.l.wrap.b32 	%r27446, %r27440, %r27441, 25;
	shf.l.wrap.b32 	%r27447, %r27441, %r27440, 25;
	mov.b64 	%rd14461, {%r27447, %r27446};
	xor.b64  	%rd14462, %rd14460, %rd14461;
	and.b64  	%rd14463, %rd14444, %rd14420;
	xor.b64  	%rd14464, %rd14444, %rd14420;
	and.b64  	%rd14465, %rd14464, %rd14396;
	or.b64  	%rd14466, %rd14465, %rd14463;
	add.s64 	%rd14467, %rd14456, %rd14466;
	add.s64 	%rd14468, %rd14467, %rd14462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27448,%dummy}, %rd14457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27449}, %rd14457;
	}
	shf.r.wrap.b32 	%r27450, %r27449, %r27448, 14;
	shf.r.wrap.b32 	%r27451, %r27448, %r27449, 14;
	mov.b64 	%rd14469, {%r27451, %r27450};
	shf.r.wrap.b32 	%r27452, %r27449, %r27448, 18;
	shf.r.wrap.b32 	%r27453, %r27448, %r27449, 18;
	mov.b64 	%rd14470, {%r27453, %r27452};
	xor.b64  	%rd14471, %rd14470, %rd14469;
	shf.l.wrap.b32 	%r27454, %r27448, %r27449, 23;
	shf.l.wrap.b32 	%r27455, %r27449, %r27448, 23;
	mov.b64 	%rd14472, {%r27455, %r27454};
	xor.b64  	%rd14473, %rd14471, %rd14472;
	xor.b64  	%rd14474, %rd14433, %rd14409;
	and.b64  	%rd14475, %rd14457, %rd14474;
	xor.b64  	%rd14476, %rd14475, %rd14409;
	add.s64 	%rd14477, %rd14169, %rd40;
	add.s64 	%rd14478, %rd14477, %rd14385;
	add.s64 	%rd14479, %rd14478, %rd14476;
	add.s64 	%rd14480, %rd14479, %rd14473;
	add.s64 	%rd14481, %rd14480, %rd14396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27456,%dummy}, %rd14468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27457}, %rd14468;
	}
	shf.r.wrap.b32 	%r27458, %r27457, %r27456, 28;
	shf.r.wrap.b32 	%r27459, %r27456, %r27457, 28;
	mov.b64 	%rd14482, {%r27459, %r27458};
	shf.l.wrap.b32 	%r27460, %r27456, %r27457, 30;
	shf.l.wrap.b32 	%r27461, %r27457, %r27456, 30;
	mov.b64 	%rd14483, {%r27461, %r27460};
	xor.b64  	%rd14484, %rd14483, %rd14482;
	shf.l.wrap.b32 	%r27462, %r27456, %r27457, 25;
	shf.l.wrap.b32 	%r27463, %r27457, %r27456, 25;
	mov.b64 	%rd14485, {%r27463, %r27462};
	xor.b64  	%rd14486, %rd14484, %rd14485;
	and.b64  	%rd14487, %rd14468, %rd14444;
	xor.b64  	%rd14488, %rd14468, %rd14444;
	and.b64  	%rd14489, %rd14488, %rd14420;
	or.b64  	%rd14490, %rd14489, %rd14487;
	add.s64 	%rd14491, %rd14480, %rd14490;
	add.s64 	%rd14492, %rd14491, %rd14486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27464,%dummy}, %rd14481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27465}, %rd14481;
	}
	shf.r.wrap.b32 	%r27466, %r27465, %r27464, 14;
	shf.r.wrap.b32 	%r27467, %r27464, %r27465, 14;
	mov.b64 	%rd14493, {%r27467, %r27466};
	shf.r.wrap.b32 	%r27468, %r27465, %r27464, 18;
	shf.r.wrap.b32 	%r27469, %r27464, %r27465, 18;
	mov.b64 	%rd14494, {%r27469, %r27468};
	xor.b64  	%rd14495, %rd14494, %rd14493;
	shf.l.wrap.b32 	%r27470, %r27464, %r27465, 23;
	shf.l.wrap.b32 	%r27471, %r27465, %r27464, 23;
	mov.b64 	%rd14496, {%r27471, %r27470};
	xor.b64  	%rd14497, %rd14495, %rd14496;
	xor.b64  	%rd14498, %rd14457, %rd14433;
	and.b64  	%rd14499, %rd14481, %rd14498;
	xor.b64  	%rd14500, %rd14499, %rd14433;
	add.s64 	%rd14501, %rd14170, %rd41;
	add.s64 	%rd14502, %rd14501, %rd14409;
	add.s64 	%rd14503, %rd14502, %rd14500;
	add.s64 	%rd14504, %rd14503, %rd14497;
	add.s64 	%rd14505, %rd14504, %rd14420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27472,%dummy}, %rd14492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27473}, %rd14492;
	}
	shf.r.wrap.b32 	%r27474, %r27473, %r27472, 28;
	shf.r.wrap.b32 	%r27475, %r27472, %r27473, 28;
	mov.b64 	%rd14506, {%r27475, %r27474};
	shf.l.wrap.b32 	%r27476, %r27472, %r27473, 30;
	shf.l.wrap.b32 	%r27477, %r27473, %r27472, 30;
	mov.b64 	%rd14507, {%r27477, %r27476};
	xor.b64  	%rd14508, %rd14507, %rd14506;
	shf.l.wrap.b32 	%r27478, %r27472, %r27473, 25;
	shf.l.wrap.b32 	%r27479, %r27473, %r27472, 25;
	mov.b64 	%rd14509, {%r27479, %r27478};
	xor.b64  	%rd14510, %rd14508, %rd14509;
	and.b64  	%rd14511, %rd14492, %rd14468;
	xor.b64  	%rd14512, %rd14492, %rd14468;
	and.b64  	%rd14513, %rd14512, %rd14444;
	or.b64  	%rd14514, %rd14513, %rd14511;
	add.s64 	%rd14515, %rd14504, %rd14514;
	add.s64 	%rd14516, %rd14515, %rd14510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27480,%dummy}, %rd14505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27481}, %rd14505;
	}
	shf.r.wrap.b32 	%r27482, %r27481, %r27480, 14;
	shf.r.wrap.b32 	%r27483, %r27480, %r27481, 14;
	mov.b64 	%rd14517, {%r27483, %r27482};
	shf.r.wrap.b32 	%r27484, %r27481, %r27480, 18;
	shf.r.wrap.b32 	%r27485, %r27480, %r27481, 18;
	mov.b64 	%rd14518, {%r27485, %r27484};
	xor.b64  	%rd14519, %rd14518, %rd14517;
	shf.l.wrap.b32 	%r27486, %r27480, %r27481, 23;
	shf.l.wrap.b32 	%r27487, %r27481, %r27480, 23;
	mov.b64 	%rd14520, {%r27487, %r27486};
	xor.b64  	%rd14521, %rd14519, %rd14520;
	xor.b64  	%rd14522, %rd14481, %rd14457;
	and.b64  	%rd14523, %rd14505, %rd14522;
	xor.b64  	%rd14524, %rd14523, %rd14457;
	add.s64 	%rd14525, %rd14171, %rd42;
	add.s64 	%rd14526, %rd14525, %rd14433;
	add.s64 	%rd14527, %rd14526, %rd14524;
	add.s64 	%rd14528, %rd14527, %rd14521;
	add.s64 	%rd14529, %rd14528, %rd14444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27488,%dummy}, %rd14516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27489}, %rd14516;
	}
	shf.r.wrap.b32 	%r27490, %r27489, %r27488, 28;
	shf.r.wrap.b32 	%r27491, %r27488, %r27489, 28;
	mov.b64 	%rd14530, {%r27491, %r27490};
	shf.l.wrap.b32 	%r27492, %r27488, %r27489, 30;
	shf.l.wrap.b32 	%r27493, %r27489, %r27488, 30;
	mov.b64 	%rd14531, {%r27493, %r27492};
	xor.b64  	%rd14532, %rd14531, %rd14530;
	shf.l.wrap.b32 	%r27494, %r27488, %r27489, 25;
	shf.l.wrap.b32 	%r27495, %r27489, %r27488, 25;
	mov.b64 	%rd14533, {%r27495, %r27494};
	xor.b64  	%rd14534, %rd14532, %rd14533;
	and.b64  	%rd14535, %rd14516, %rd14492;
	xor.b64  	%rd14536, %rd14516, %rd14492;
	and.b64  	%rd14537, %rd14536, %rd14468;
	or.b64  	%rd14538, %rd14537, %rd14535;
	add.s64 	%rd14539, %rd14528, %rd14538;
	add.s64 	%rd14540, %rd14539, %rd14534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27496,%dummy}, %rd14529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27497}, %rd14529;
	}
	shf.r.wrap.b32 	%r27498, %r27497, %r27496, 14;
	shf.r.wrap.b32 	%r27499, %r27496, %r27497, 14;
	mov.b64 	%rd14541, {%r27499, %r27498};
	shf.r.wrap.b32 	%r27500, %r27497, %r27496, 18;
	shf.r.wrap.b32 	%r27501, %r27496, %r27497, 18;
	mov.b64 	%rd14542, {%r27501, %r27500};
	xor.b64  	%rd14543, %rd14542, %rd14541;
	shf.l.wrap.b32 	%r27502, %r27496, %r27497, 23;
	shf.l.wrap.b32 	%r27503, %r27497, %r27496, 23;
	mov.b64 	%rd14544, {%r27503, %r27502};
	xor.b64  	%rd14545, %rd14543, %rd14544;
	xor.b64  	%rd14546, %rd14505, %rd14481;
	and.b64  	%rd14547, %rd14529, %rd14546;
	xor.b64  	%rd14548, %rd14547, %rd14481;
	add.s64 	%rd14549, %rd14172, %rd43;
	add.s64 	%rd14550, %rd14549, %rd14457;
	add.s64 	%rd14551, %rd14550, %rd14548;
	add.s64 	%rd14552, %rd14551, %rd14545;
	add.s64 	%rd14553, %rd14552, %rd14468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27504,%dummy}, %rd14540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27505}, %rd14540;
	}
	shf.r.wrap.b32 	%r27506, %r27505, %r27504, 28;
	shf.r.wrap.b32 	%r27507, %r27504, %r27505, 28;
	mov.b64 	%rd14554, {%r27507, %r27506};
	shf.l.wrap.b32 	%r27508, %r27504, %r27505, 30;
	shf.l.wrap.b32 	%r27509, %r27505, %r27504, 30;
	mov.b64 	%rd14555, {%r27509, %r27508};
	xor.b64  	%rd14556, %rd14555, %rd14554;
	shf.l.wrap.b32 	%r27510, %r27504, %r27505, 25;
	shf.l.wrap.b32 	%r27511, %r27505, %r27504, 25;
	mov.b64 	%rd14557, {%r27511, %r27510};
	xor.b64  	%rd14558, %rd14556, %rd14557;
	and.b64  	%rd14559, %rd14540, %rd14516;
	xor.b64  	%rd14560, %rd14540, %rd14516;
	and.b64  	%rd14561, %rd14560, %rd14492;
	or.b64  	%rd14562, %rd14561, %rd14559;
	add.s64 	%rd14563, %rd14552, %rd14562;
	add.s64 	%rd14564, %rd14563, %rd14558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27512,%dummy}, %rd14171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27513}, %rd14171;
	}
	shf.r.wrap.b32 	%r27514, %r27513, %r27512, 19;
	shf.r.wrap.b32 	%r27515, %r27512, %r27513, 19;
	mov.b64 	%rd14565, {%r27515, %r27514};
	shf.l.wrap.b32 	%r27516, %r27512, %r27513, 3;
	shf.l.wrap.b32 	%r27517, %r27513, %r27512, 3;
	mov.b64 	%rd14566, {%r27517, %r27516};
	shr.u64 	%rd14567, %rd14171, 6;
	xor.b64  	%rd14568, %rd14565, %rd14567;
	xor.b64  	%rd14569, %rd14568, %rd14566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27518,%dummy}, %rd14158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27519}, %rd14158;
	}
	shf.r.wrap.b32 	%r27520, %r27519, %r27518, 1;
	shf.r.wrap.b32 	%r27521, %r27518, %r27519, 1;
	mov.b64 	%rd14570, {%r27521, %r27520};
	shf.r.wrap.b32 	%r27522, %r27519, %r27518, 8;
	shf.r.wrap.b32 	%r27523, %r27518, %r27519, 8;
	mov.b64 	%rd14571, {%r27523, %r27522};
	shr.u64 	%rd14572, %rd14158, 7;
	xor.b64  	%rd14573, %rd14570, %rd14572;
	xor.b64  	%rd14574, %rd14573, %rd14571;
	add.s64 	%rd14575, %rd14166, %rd14157;
	add.s64 	%rd14576, %rd14575, %rd14569;
	add.s64 	%rd14577, %rd14576, %rd14574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27524,%dummy}, %rd14172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27525}, %rd14172;
	}
	shf.r.wrap.b32 	%r27526, %r27525, %r27524, 19;
	shf.r.wrap.b32 	%r27527, %r27524, %r27525, 19;
	mov.b64 	%rd14578, {%r27527, %r27526};
	shf.l.wrap.b32 	%r27528, %r27524, %r27525, 3;
	shf.l.wrap.b32 	%r27529, %r27525, %r27524, 3;
	mov.b64 	%rd14579, {%r27529, %r27528};
	shr.u64 	%rd14580, %rd14172, 6;
	xor.b64  	%rd14581, %rd14578, %rd14580;
	xor.b64  	%rd14582, %rd14581, %rd14579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27530,%dummy}, %rd14159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27531}, %rd14159;
	}
	shf.r.wrap.b32 	%r27532, %r27531, %r27530, 1;
	shf.r.wrap.b32 	%r27533, %r27530, %r27531, 1;
	mov.b64 	%rd14583, {%r27533, %r27532};
	shf.r.wrap.b32 	%r27534, %r27531, %r27530, 8;
	shf.r.wrap.b32 	%r27535, %r27530, %r27531, 8;
	mov.b64 	%rd14584, {%r27535, %r27534};
	shr.u64 	%rd14585, %rd14159, 7;
	xor.b64  	%rd14586, %rd14583, %rd14585;
	xor.b64  	%rd14587, %rd14586, %rd14584;
	add.s64 	%rd14588, %rd14167, %rd14158;
	add.s64 	%rd14589, %rd14588, %rd14582;
	add.s64 	%rd14590, %rd14589, %rd14587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27536,%dummy}, %rd14577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27537}, %rd14577;
	}
	shf.r.wrap.b32 	%r27538, %r27537, %r27536, 19;
	shf.r.wrap.b32 	%r27539, %r27536, %r27537, 19;
	mov.b64 	%rd14591, {%r27539, %r27538};
	shf.l.wrap.b32 	%r27540, %r27536, %r27537, 3;
	shf.l.wrap.b32 	%r27541, %r27537, %r27536, 3;
	mov.b64 	%rd14592, {%r27541, %r27540};
	shr.u64 	%rd14593, %rd14577, 6;
	xor.b64  	%rd14594, %rd14591, %rd14593;
	xor.b64  	%rd14595, %rd14594, %rd14592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27542,%dummy}, %rd14160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27543}, %rd14160;
	}
	shf.r.wrap.b32 	%r27544, %r27543, %r27542, 1;
	shf.r.wrap.b32 	%r27545, %r27542, %r27543, 1;
	mov.b64 	%rd14596, {%r27545, %r27544};
	shf.r.wrap.b32 	%r27546, %r27543, %r27542, 8;
	shf.r.wrap.b32 	%r27547, %r27542, %r27543, 8;
	mov.b64 	%rd14597, {%r27547, %r27546};
	shr.u64 	%rd14598, %rd14160, 7;
	xor.b64  	%rd14599, %rd14596, %rd14598;
	xor.b64  	%rd14600, %rd14599, %rd14597;
	add.s64 	%rd14601, %rd14168, %rd14159;
	add.s64 	%rd14602, %rd14601, %rd14595;
	add.s64 	%rd14603, %rd14602, %rd14600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27548,%dummy}, %rd14590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27549}, %rd14590;
	}
	shf.r.wrap.b32 	%r27550, %r27549, %r27548, 19;
	shf.r.wrap.b32 	%r27551, %r27548, %r27549, 19;
	mov.b64 	%rd14604, {%r27551, %r27550};
	shf.l.wrap.b32 	%r27552, %r27548, %r27549, 3;
	shf.l.wrap.b32 	%r27553, %r27549, %r27548, 3;
	mov.b64 	%rd14605, {%r27553, %r27552};
	shr.u64 	%rd14606, %rd14590, 6;
	xor.b64  	%rd14607, %rd14604, %rd14606;
	xor.b64  	%rd14608, %rd14607, %rd14605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27554,%dummy}, %rd14161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27555}, %rd14161;
	}
	shf.r.wrap.b32 	%r27556, %r27555, %r27554, 1;
	shf.r.wrap.b32 	%r27557, %r27554, %r27555, 1;
	mov.b64 	%rd14609, {%r27557, %r27556};
	shf.r.wrap.b32 	%r27558, %r27555, %r27554, 8;
	shf.r.wrap.b32 	%r27559, %r27554, %r27555, 8;
	mov.b64 	%rd14610, {%r27559, %r27558};
	shr.u64 	%rd14611, %rd14161, 7;
	xor.b64  	%rd14612, %rd14609, %rd14611;
	xor.b64  	%rd14613, %rd14612, %rd14610;
	add.s64 	%rd14614, %rd14169, %rd14160;
	add.s64 	%rd14615, %rd14614, %rd14608;
	add.s64 	%rd14616, %rd14615, %rd14613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27560,%dummy}, %rd14603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27561}, %rd14603;
	}
	shf.r.wrap.b32 	%r27562, %r27561, %r27560, 19;
	shf.r.wrap.b32 	%r27563, %r27560, %r27561, 19;
	mov.b64 	%rd14617, {%r27563, %r27562};
	shf.l.wrap.b32 	%r27564, %r27560, %r27561, 3;
	shf.l.wrap.b32 	%r27565, %r27561, %r27560, 3;
	mov.b64 	%rd14618, {%r27565, %r27564};
	shr.u64 	%rd14619, %rd14603, 6;
	xor.b64  	%rd14620, %rd14617, %rd14619;
	xor.b64  	%rd14621, %rd14620, %rd14618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27566,%dummy}, %rd14162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27567}, %rd14162;
	}
	shf.r.wrap.b32 	%r27568, %r27567, %r27566, 1;
	shf.r.wrap.b32 	%r27569, %r27566, %r27567, 1;
	mov.b64 	%rd14622, {%r27569, %r27568};
	shf.r.wrap.b32 	%r27570, %r27567, %r27566, 8;
	shf.r.wrap.b32 	%r27571, %r27566, %r27567, 8;
	mov.b64 	%rd14623, {%r27571, %r27570};
	shr.u64 	%rd14624, %rd14162, 7;
	xor.b64  	%rd14625, %rd14622, %rd14624;
	xor.b64  	%rd14626, %rd14625, %rd14623;
	add.s64 	%rd14627, %rd14170, %rd14161;
	add.s64 	%rd14628, %rd14627, %rd14621;
	add.s64 	%rd14629, %rd14628, %rd14626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27572,%dummy}, %rd14616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27573}, %rd14616;
	}
	shf.r.wrap.b32 	%r27574, %r27573, %r27572, 19;
	shf.r.wrap.b32 	%r27575, %r27572, %r27573, 19;
	mov.b64 	%rd14630, {%r27575, %r27574};
	shf.l.wrap.b32 	%r27576, %r27572, %r27573, 3;
	shf.l.wrap.b32 	%r27577, %r27573, %r27572, 3;
	mov.b64 	%rd14631, {%r27577, %r27576};
	shr.u64 	%rd14632, %rd14616, 6;
	xor.b64  	%rd14633, %rd14630, %rd14632;
	xor.b64  	%rd14634, %rd14633, %rd14631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27578,%dummy}, %rd14163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27579}, %rd14163;
	}
	shf.r.wrap.b32 	%r27580, %r27579, %r27578, 1;
	shf.r.wrap.b32 	%r27581, %r27578, %r27579, 1;
	mov.b64 	%rd14635, {%r27581, %r27580};
	shf.r.wrap.b32 	%r27582, %r27579, %r27578, 8;
	shf.r.wrap.b32 	%r27583, %r27578, %r27579, 8;
	mov.b64 	%rd14636, {%r27583, %r27582};
	shr.u64 	%rd14637, %rd14163, 7;
	xor.b64  	%rd14638, %rd14635, %rd14637;
	xor.b64  	%rd14639, %rd14638, %rd14636;
	add.s64 	%rd14640, %rd14171, %rd14162;
	add.s64 	%rd14641, %rd14640, %rd14634;
	add.s64 	%rd14642, %rd14641, %rd14639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27584,%dummy}, %rd14629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27585}, %rd14629;
	}
	shf.r.wrap.b32 	%r27586, %r27585, %r27584, 19;
	shf.r.wrap.b32 	%r27587, %r27584, %r27585, 19;
	mov.b64 	%rd14643, {%r27587, %r27586};
	shf.l.wrap.b32 	%r27588, %r27584, %r27585, 3;
	shf.l.wrap.b32 	%r27589, %r27585, %r27584, 3;
	mov.b64 	%rd14644, {%r27589, %r27588};
	shr.u64 	%rd14645, %rd14629, 6;
	xor.b64  	%rd14646, %rd14643, %rd14645;
	xor.b64  	%rd14647, %rd14646, %rd14644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27590,%dummy}, %rd14164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27591}, %rd14164;
	}
	shf.r.wrap.b32 	%r27592, %r27591, %r27590, 1;
	shf.r.wrap.b32 	%r27593, %r27590, %r27591, 1;
	mov.b64 	%rd14648, {%r27593, %r27592};
	shf.r.wrap.b32 	%r27594, %r27591, %r27590, 8;
	shf.r.wrap.b32 	%r27595, %r27590, %r27591, 8;
	mov.b64 	%rd14649, {%r27595, %r27594};
	shr.u64 	%rd14650, %rd14164, 7;
	xor.b64  	%rd14651, %rd14648, %rd14650;
	xor.b64  	%rd14652, %rd14651, %rd14649;
	add.s64 	%rd14653, %rd14172, %rd14163;
	add.s64 	%rd14654, %rd14653, %rd14647;
	add.s64 	%rd14655, %rd14654, %rd14652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27596,%dummy}, %rd14642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27597}, %rd14642;
	}
	shf.r.wrap.b32 	%r27598, %r27597, %r27596, 19;
	shf.r.wrap.b32 	%r27599, %r27596, %r27597, 19;
	mov.b64 	%rd14656, {%r27599, %r27598};
	shf.l.wrap.b32 	%r27600, %r27596, %r27597, 3;
	shf.l.wrap.b32 	%r27601, %r27597, %r27596, 3;
	mov.b64 	%rd14657, {%r27601, %r27600};
	shr.u64 	%rd14658, %rd14642, 6;
	xor.b64  	%rd14659, %rd14656, %rd14658;
	xor.b64  	%rd14660, %rd14659, %rd14657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27602,%dummy}, %rd14165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27603}, %rd14165;
	}
	shf.r.wrap.b32 	%r27604, %r27603, %r27602, 1;
	shf.r.wrap.b32 	%r27605, %r27602, %r27603, 1;
	mov.b64 	%rd14661, {%r27605, %r27604};
	shf.r.wrap.b32 	%r27606, %r27603, %r27602, 8;
	shf.r.wrap.b32 	%r27607, %r27602, %r27603, 8;
	mov.b64 	%rd14662, {%r27607, %r27606};
	shr.u64 	%rd14663, %rd14165, 7;
	xor.b64  	%rd14664, %rd14661, %rd14663;
	xor.b64  	%rd14665, %rd14664, %rd14662;
	add.s64 	%rd14666, %rd14577, %rd14164;
	add.s64 	%rd14667, %rd14666, %rd14660;
	add.s64 	%rd14668, %rd14667, %rd14665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27608,%dummy}, %rd14655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27609}, %rd14655;
	}
	shf.r.wrap.b32 	%r27610, %r27609, %r27608, 19;
	shf.r.wrap.b32 	%r27611, %r27608, %r27609, 19;
	mov.b64 	%rd14669, {%r27611, %r27610};
	shf.l.wrap.b32 	%r27612, %r27608, %r27609, 3;
	shf.l.wrap.b32 	%r27613, %r27609, %r27608, 3;
	mov.b64 	%rd14670, {%r27613, %r27612};
	shr.u64 	%rd14671, %rd14655, 6;
	xor.b64  	%rd14672, %rd14669, %rd14671;
	xor.b64  	%rd14673, %rd14672, %rd14670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27614,%dummy}, %rd14166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27615}, %rd14166;
	}
	shf.r.wrap.b32 	%r27616, %r27615, %r27614, 1;
	shf.r.wrap.b32 	%r27617, %r27614, %r27615, 1;
	mov.b64 	%rd14674, {%r27617, %r27616};
	shf.r.wrap.b32 	%r27618, %r27615, %r27614, 8;
	shf.r.wrap.b32 	%r27619, %r27614, %r27615, 8;
	mov.b64 	%rd14675, {%r27619, %r27618};
	shr.u64 	%rd14676, %rd14166, 7;
	xor.b64  	%rd14677, %rd14674, %rd14676;
	xor.b64  	%rd14678, %rd14677, %rd14675;
	add.s64 	%rd14679, %rd14590, %rd14165;
	add.s64 	%rd14680, %rd14679, %rd14673;
	add.s64 	%rd14681, %rd14680, %rd14678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27620,%dummy}, %rd14668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27621}, %rd14668;
	}
	shf.r.wrap.b32 	%r27622, %r27621, %r27620, 19;
	shf.r.wrap.b32 	%r27623, %r27620, %r27621, 19;
	mov.b64 	%rd14682, {%r27623, %r27622};
	shf.l.wrap.b32 	%r27624, %r27620, %r27621, 3;
	shf.l.wrap.b32 	%r27625, %r27621, %r27620, 3;
	mov.b64 	%rd14683, {%r27625, %r27624};
	shr.u64 	%rd14684, %rd14668, 6;
	xor.b64  	%rd14685, %rd14682, %rd14684;
	xor.b64  	%rd14686, %rd14685, %rd14683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27626,%dummy}, %rd14167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27627}, %rd14167;
	}
	shf.r.wrap.b32 	%r27628, %r27627, %r27626, 1;
	shf.r.wrap.b32 	%r27629, %r27626, %r27627, 1;
	mov.b64 	%rd14687, {%r27629, %r27628};
	shf.r.wrap.b32 	%r27630, %r27627, %r27626, 8;
	shf.r.wrap.b32 	%r27631, %r27626, %r27627, 8;
	mov.b64 	%rd14688, {%r27631, %r27630};
	shr.u64 	%rd14689, %rd14167, 7;
	xor.b64  	%rd14690, %rd14687, %rd14689;
	xor.b64  	%rd14691, %rd14690, %rd14688;
	add.s64 	%rd14692, %rd14603, %rd14166;
	add.s64 	%rd14693, %rd14692, %rd14686;
	add.s64 	%rd14694, %rd14693, %rd14691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27632,%dummy}, %rd14681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27633}, %rd14681;
	}
	shf.r.wrap.b32 	%r27634, %r27633, %r27632, 19;
	shf.r.wrap.b32 	%r27635, %r27632, %r27633, 19;
	mov.b64 	%rd14695, {%r27635, %r27634};
	shf.l.wrap.b32 	%r27636, %r27632, %r27633, 3;
	shf.l.wrap.b32 	%r27637, %r27633, %r27632, 3;
	mov.b64 	%rd14696, {%r27637, %r27636};
	shr.u64 	%rd14697, %rd14681, 6;
	xor.b64  	%rd14698, %rd14695, %rd14697;
	xor.b64  	%rd14699, %rd14698, %rd14696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27638,%dummy}, %rd14168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27639}, %rd14168;
	}
	shf.r.wrap.b32 	%r27640, %r27639, %r27638, 1;
	shf.r.wrap.b32 	%r27641, %r27638, %r27639, 1;
	mov.b64 	%rd14700, {%r27641, %r27640};
	shf.r.wrap.b32 	%r27642, %r27639, %r27638, 8;
	shf.r.wrap.b32 	%r27643, %r27638, %r27639, 8;
	mov.b64 	%rd14701, {%r27643, %r27642};
	shr.u64 	%rd14702, %rd14168, 7;
	xor.b64  	%rd14703, %rd14700, %rd14702;
	xor.b64  	%rd14704, %rd14703, %rd14701;
	add.s64 	%rd14705, %rd14616, %rd14167;
	add.s64 	%rd14706, %rd14705, %rd14699;
	add.s64 	%rd14707, %rd14706, %rd14704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27644,%dummy}, %rd14694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27645}, %rd14694;
	}
	shf.r.wrap.b32 	%r27646, %r27645, %r27644, 19;
	shf.r.wrap.b32 	%r27647, %r27644, %r27645, 19;
	mov.b64 	%rd14708, {%r27647, %r27646};
	shf.l.wrap.b32 	%r27648, %r27644, %r27645, 3;
	shf.l.wrap.b32 	%r27649, %r27645, %r27644, 3;
	mov.b64 	%rd14709, {%r27649, %r27648};
	shr.u64 	%rd14710, %rd14694, 6;
	xor.b64  	%rd14711, %rd14708, %rd14710;
	xor.b64  	%rd14712, %rd14711, %rd14709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27650,%dummy}, %rd14169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27651}, %rd14169;
	}
	shf.r.wrap.b32 	%r27652, %r27651, %r27650, 1;
	shf.r.wrap.b32 	%r27653, %r27650, %r27651, 1;
	mov.b64 	%rd14713, {%r27653, %r27652};
	shf.r.wrap.b32 	%r27654, %r27651, %r27650, 8;
	shf.r.wrap.b32 	%r27655, %r27650, %r27651, 8;
	mov.b64 	%rd14714, {%r27655, %r27654};
	shr.u64 	%rd14715, %rd14169, 7;
	xor.b64  	%rd14716, %rd14713, %rd14715;
	xor.b64  	%rd14717, %rd14716, %rd14714;
	add.s64 	%rd14718, %rd14629, %rd14168;
	add.s64 	%rd14719, %rd14718, %rd14712;
	add.s64 	%rd14720, %rd14719, %rd14717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27656,%dummy}, %rd14707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27657}, %rd14707;
	}
	shf.r.wrap.b32 	%r27658, %r27657, %r27656, 19;
	shf.r.wrap.b32 	%r27659, %r27656, %r27657, 19;
	mov.b64 	%rd14721, {%r27659, %r27658};
	shf.l.wrap.b32 	%r27660, %r27656, %r27657, 3;
	shf.l.wrap.b32 	%r27661, %r27657, %r27656, 3;
	mov.b64 	%rd14722, {%r27661, %r27660};
	shr.u64 	%rd14723, %rd14707, 6;
	xor.b64  	%rd14724, %rd14721, %rd14723;
	xor.b64  	%rd14725, %rd14724, %rd14722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27662,%dummy}, %rd14170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27663}, %rd14170;
	}
	shf.r.wrap.b32 	%r27664, %r27663, %r27662, 1;
	shf.r.wrap.b32 	%r27665, %r27662, %r27663, 1;
	mov.b64 	%rd14726, {%r27665, %r27664};
	shf.r.wrap.b32 	%r27666, %r27663, %r27662, 8;
	shf.r.wrap.b32 	%r27667, %r27662, %r27663, 8;
	mov.b64 	%rd14727, {%r27667, %r27666};
	shr.u64 	%rd14728, %rd14170, 7;
	xor.b64  	%rd14729, %rd14726, %rd14728;
	xor.b64  	%rd14730, %rd14729, %rd14727;
	add.s64 	%rd14731, %rd14642, %rd14169;
	add.s64 	%rd14732, %rd14731, %rd14725;
	add.s64 	%rd14733, %rd14732, %rd14730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27668,%dummy}, %rd14720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27669}, %rd14720;
	}
	shf.r.wrap.b32 	%r27670, %r27669, %r27668, 19;
	shf.r.wrap.b32 	%r27671, %r27668, %r27669, 19;
	mov.b64 	%rd14734, {%r27671, %r27670};
	shf.l.wrap.b32 	%r27672, %r27668, %r27669, 3;
	shf.l.wrap.b32 	%r27673, %r27669, %r27668, 3;
	mov.b64 	%rd14735, {%r27673, %r27672};
	shr.u64 	%rd14736, %rd14720, 6;
	xor.b64  	%rd14737, %rd14734, %rd14736;
	xor.b64  	%rd14738, %rd14737, %rd14735;
	shf.r.wrap.b32 	%r27674, %r27513, %r27512, 1;
	shf.r.wrap.b32 	%r27675, %r27512, %r27513, 1;
	mov.b64 	%rd14739, {%r27675, %r27674};
	shf.r.wrap.b32 	%r27676, %r27513, %r27512, 8;
	shf.r.wrap.b32 	%r27677, %r27512, %r27513, 8;
	mov.b64 	%rd14740, {%r27677, %r27676};
	shr.u64 	%rd14741, %rd14171, 7;
	xor.b64  	%rd14742, %rd14739, %rd14741;
	xor.b64  	%rd14743, %rd14742, %rd14740;
	add.s64 	%rd14744, %rd14655, %rd14170;
	add.s64 	%rd14745, %rd14744, %rd14738;
	add.s64 	%rd14746, %rd14745, %rd14743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27678,%dummy}, %rd14733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27679}, %rd14733;
	}
	shf.r.wrap.b32 	%r27680, %r27679, %r27678, 19;
	shf.r.wrap.b32 	%r27681, %r27678, %r27679, 19;
	mov.b64 	%rd14747, {%r27681, %r27680};
	shf.l.wrap.b32 	%r27682, %r27678, %r27679, 3;
	shf.l.wrap.b32 	%r27683, %r27679, %r27678, 3;
	mov.b64 	%rd14748, {%r27683, %r27682};
	shr.u64 	%rd14749, %rd14733, 6;
	xor.b64  	%rd14750, %rd14747, %rd14749;
	xor.b64  	%rd14751, %rd14750, %rd14748;
	shf.r.wrap.b32 	%r27684, %r27525, %r27524, 1;
	shf.r.wrap.b32 	%r27685, %r27524, %r27525, 1;
	mov.b64 	%rd14752, {%r27685, %r27684};
	shf.r.wrap.b32 	%r27686, %r27525, %r27524, 8;
	shf.r.wrap.b32 	%r27687, %r27524, %r27525, 8;
	mov.b64 	%rd14753, {%r27687, %r27686};
	shr.u64 	%rd14754, %rd14172, 7;
	xor.b64  	%rd14755, %rd14752, %rd14754;
	xor.b64  	%rd14756, %rd14755, %rd14753;
	add.s64 	%rd14757, %rd14668, %rd14171;
	add.s64 	%rd14758, %rd14757, %rd14751;
	add.s64 	%rd14759, %rd14758, %rd14756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27688,%dummy}, %rd14746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27689}, %rd14746;
	}
	shf.r.wrap.b32 	%r27690, %r27689, %r27688, 19;
	shf.r.wrap.b32 	%r27691, %r27688, %r27689, 19;
	mov.b64 	%rd14760, {%r27691, %r27690};
	shf.l.wrap.b32 	%r27692, %r27688, %r27689, 3;
	shf.l.wrap.b32 	%r27693, %r27689, %r27688, 3;
	mov.b64 	%rd14761, {%r27693, %r27692};
	shr.u64 	%rd14762, %rd14746, 6;
	xor.b64  	%rd14763, %rd14760, %rd14762;
	xor.b64  	%rd14764, %rd14763, %rd14761;
	shf.r.wrap.b32 	%r27694, %r27537, %r27536, 1;
	shf.r.wrap.b32 	%r27695, %r27536, %r27537, 1;
	mov.b64 	%rd14765, {%r27695, %r27694};
	shf.r.wrap.b32 	%r27696, %r27537, %r27536, 8;
	shf.r.wrap.b32 	%r27697, %r27536, %r27537, 8;
	mov.b64 	%rd14766, {%r27697, %r27696};
	shr.u64 	%rd14767, %rd14577, 7;
	xor.b64  	%rd14768, %rd14765, %rd14767;
	xor.b64  	%rd14769, %rd14768, %rd14766;
	add.s64 	%rd14770, %rd14681, %rd14172;
	add.s64 	%rd14771, %rd14770, %rd14764;
	add.s64 	%rd14772, %rd14771, %rd14769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27698,%dummy}, %rd14553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27699}, %rd14553;
	}
	shf.r.wrap.b32 	%r27700, %r27699, %r27698, 14;
	shf.r.wrap.b32 	%r27701, %r27698, %r27699, 14;
	mov.b64 	%rd14773, {%r27701, %r27700};
	shf.r.wrap.b32 	%r27702, %r27699, %r27698, 18;
	shf.r.wrap.b32 	%r27703, %r27698, %r27699, 18;
	mov.b64 	%rd14774, {%r27703, %r27702};
	xor.b64  	%rd14775, %rd14774, %rd14773;
	shf.l.wrap.b32 	%r27704, %r27698, %r27699, 23;
	shf.l.wrap.b32 	%r27705, %r27699, %r27698, 23;
	mov.b64 	%rd14776, {%r27705, %r27704};
	xor.b64  	%rd14777, %rd14775, %rd14776;
	xor.b64  	%rd14778, %rd14529, %rd14505;
	and.b64  	%rd14779, %rd14553, %rd14778;
	xor.b64  	%rd14780, %rd14779, %rd14505;
	add.s64 	%rd14781, %rd14481, %rd44;
	add.s64 	%rd14782, %rd14781, %rd14780;
	add.s64 	%rd14783, %rd14782, %rd14577;
	add.s64 	%rd14784, %rd14783, %rd14777;
	add.s64 	%rd14785, %rd14784, %rd14492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27706,%dummy}, %rd14564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27707}, %rd14564;
	}
	shf.r.wrap.b32 	%r27708, %r27707, %r27706, 28;
	shf.r.wrap.b32 	%r27709, %r27706, %r27707, 28;
	mov.b64 	%rd14786, {%r27709, %r27708};
	shf.l.wrap.b32 	%r27710, %r27706, %r27707, 30;
	shf.l.wrap.b32 	%r27711, %r27707, %r27706, 30;
	mov.b64 	%rd14787, {%r27711, %r27710};
	xor.b64  	%rd14788, %rd14787, %rd14786;
	shf.l.wrap.b32 	%r27712, %r27706, %r27707, 25;
	shf.l.wrap.b32 	%r27713, %r27707, %r27706, 25;
	mov.b64 	%rd14789, {%r27713, %r27712};
	xor.b64  	%rd14790, %rd14788, %rd14789;
	and.b64  	%rd14791, %rd14564, %rd14540;
	xor.b64  	%rd14792, %rd14564, %rd14540;
	and.b64  	%rd14793, %rd14792, %rd14516;
	or.b64  	%rd14794, %rd14793, %rd14791;
	add.s64 	%rd14795, %rd14784, %rd14794;
	add.s64 	%rd14796, %rd14795, %rd14790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27714,%dummy}, %rd14785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27715}, %rd14785;
	}
	shf.r.wrap.b32 	%r27716, %r27715, %r27714, 14;
	shf.r.wrap.b32 	%r27717, %r27714, %r27715, 14;
	mov.b64 	%rd14797, {%r27717, %r27716};
	shf.r.wrap.b32 	%r27718, %r27715, %r27714, 18;
	shf.r.wrap.b32 	%r27719, %r27714, %r27715, 18;
	mov.b64 	%rd14798, {%r27719, %r27718};
	xor.b64  	%rd14799, %rd14798, %rd14797;
	shf.l.wrap.b32 	%r27720, %r27714, %r27715, 23;
	shf.l.wrap.b32 	%r27721, %r27715, %r27714, 23;
	mov.b64 	%rd14800, {%r27721, %r27720};
	xor.b64  	%rd14801, %rd14799, %rd14800;
	xor.b64  	%rd14802, %rd14553, %rd14529;
	and.b64  	%rd14803, %rd14785, %rd14802;
	xor.b64  	%rd14804, %rd14803, %rd14529;
	add.s64 	%rd14805, %rd14505, %rd45;
	add.s64 	%rd14806, %rd14805, %rd14590;
	add.s64 	%rd14807, %rd14806, %rd14804;
	add.s64 	%rd14808, %rd14807, %rd14801;
	add.s64 	%rd14809, %rd14808, %rd14516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27722,%dummy}, %rd14796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27723}, %rd14796;
	}
	shf.r.wrap.b32 	%r27724, %r27723, %r27722, 28;
	shf.r.wrap.b32 	%r27725, %r27722, %r27723, 28;
	mov.b64 	%rd14810, {%r27725, %r27724};
	shf.l.wrap.b32 	%r27726, %r27722, %r27723, 30;
	shf.l.wrap.b32 	%r27727, %r27723, %r27722, 30;
	mov.b64 	%rd14811, {%r27727, %r27726};
	xor.b64  	%rd14812, %rd14811, %rd14810;
	shf.l.wrap.b32 	%r27728, %r27722, %r27723, 25;
	shf.l.wrap.b32 	%r27729, %r27723, %r27722, 25;
	mov.b64 	%rd14813, {%r27729, %r27728};
	xor.b64  	%rd14814, %rd14812, %rd14813;
	and.b64  	%rd14815, %rd14796, %rd14564;
	xor.b64  	%rd14816, %rd14796, %rd14564;
	and.b64  	%rd14817, %rd14816, %rd14540;
	or.b64  	%rd14818, %rd14817, %rd14815;
	add.s64 	%rd14819, %rd14808, %rd14818;
	add.s64 	%rd14820, %rd14819, %rd14814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27730,%dummy}, %rd14809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27731}, %rd14809;
	}
	shf.r.wrap.b32 	%r27732, %r27731, %r27730, 14;
	shf.r.wrap.b32 	%r27733, %r27730, %r27731, 14;
	mov.b64 	%rd14821, {%r27733, %r27732};
	shf.r.wrap.b32 	%r27734, %r27731, %r27730, 18;
	shf.r.wrap.b32 	%r27735, %r27730, %r27731, 18;
	mov.b64 	%rd14822, {%r27735, %r27734};
	xor.b64  	%rd14823, %rd14822, %rd14821;
	shf.l.wrap.b32 	%r27736, %r27730, %r27731, 23;
	shf.l.wrap.b32 	%r27737, %r27731, %r27730, 23;
	mov.b64 	%rd14824, {%r27737, %r27736};
	xor.b64  	%rd14825, %rd14823, %rd14824;
	xor.b64  	%rd14826, %rd14785, %rd14553;
	and.b64  	%rd14827, %rd14809, %rd14826;
	xor.b64  	%rd14828, %rd14827, %rd14553;
	add.s64 	%rd14829, %rd14529, %rd46;
	add.s64 	%rd14830, %rd14829, %rd14603;
	add.s64 	%rd14831, %rd14830, %rd14828;
	add.s64 	%rd14832, %rd14831, %rd14825;
	add.s64 	%rd14833, %rd14832, %rd14540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27738,%dummy}, %rd14820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27739}, %rd14820;
	}
	shf.r.wrap.b32 	%r27740, %r27739, %r27738, 28;
	shf.r.wrap.b32 	%r27741, %r27738, %r27739, 28;
	mov.b64 	%rd14834, {%r27741, %r27740};
	shf.l.wrap.b32 	%r27742, %r27738, %r27739, 30;
	shf.l.wrap.b32 	%r27743, %r27739, %r27738, 30;
	mov.b64 	%rd14835, {%r27743, %r27742};
	xor.b64  	%rd14836, %rd14835, %rd14834;
	shf.l.wrap.b32 	%r27744, %r27738, %r27739, 25;
	shf.l.wrap.b32 	%r27745, %r27739, %r27738, 25;
	mov.b64 	%rd14837, {%r27745, %r27744};
	xor.b64  	%rd14838, %rd14836, %rd14837;
	and.b64  	%rd14839, %rd14820, %rd14796;
	xor.b64  	%rd14840, %rd14820, %rd14796;
	and.b64  	%rd14841, %rd14840, %rd14564;
	or.b64  	%rd14842, %rd14841, %rd14839;
	add.s64 	%rd14843, %rd14832, %rd14842;
	add.s64 	%rd14844, %rd14843, %rd14838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27746,%dummy}, %rd14833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27747}, %rd14833;
	}
	shf.r.wrap.b32 	%r27748, %r27747, %r27746, 14;
	shf.r.wrap.b32 	%r27749, %r27746, %r27747, 14;
	mov.b64 	%rd14845, {%r27749, %r27748};
	shf.r.wrap.b32 	%r27750, %r27747, %r27746, 18;
	shf.r.wrap.b32 	%r27751, %r27746, %r27747, 18;
	mov.b64 	%rd14846, {%r27751, %r27750};
	xor.b64  	%rd14847, %rd14846, %rd14845;
	shf.l.wrap.b32 	%r27752, %r27746, %r27747, 23;
	shf.l.wrap.b32 	%r27753, %r27747, %r27746, 23;
	mov.b64 	%rd14848, {%r27753, %r27752};
	xor.b64  	%rd14849, %rd14847, %rd14848;
	xor.b64  	%rd14850, %rd14809, %rd14785;
	and.b64  	%rd14851, %rd14833, %rd14850;
	xor.b64  	%rd14852, %rd14851, %rd14785;
	add.s64 	%rd14853, %rd14553, %rd47;
	add.s64 	%rd14854, %rd14853, %rd14616;
	add.s64 	%rd14855, %rd14854, %rd14852;
	add.s64 	%rd14856, %rd14855, %rd14849;
	add.s64 	%rd14857, %rd14856, %rd14564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27754,%dummy}, %rd14844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27755}, %rd14844;
	}
	shf.r.wrap.b32 	%r27756, %r27755, %r27754, 28;
	shf.r.wrap.b32 	%r27757, %r27754, %r27755, 28;
	mov.b64 	%rd14858, {%r27757, %r27756};
	shf.l.wrap.b32 	%r27758, %r27754, %r27755, 30;
	shf.l.wrap.b32 	%r27759, %r27755, %r27754, 30;
	mov.b64 	%rd14859, {%r27759, %r27758};
	xor.b64  	%rd14860, %rd14859, %rd14858;
	shf.l.wrap.b32 	%r27760, %r27754, %r27755, 25;
	shf.l.wrap.b32 	%r27761, %r27755, %r27754, 25;
	mov.b64 	%rd14861, {%r27761, %r27760};
	xor.b64  	%rd14862, %rd14860, %rd14861;
	and.b64  	%rd14863, %rd14844, %rd14820;
	xor.b64  	%rd14864, %rd14844, %rd14820;
	and.b64  	%rd14865, %rd14864, %rd14796;
	or.b64  	%rd14866, %rd14865, %rd14863;
	add.s64 	%rd14867, %rd14856, %rd14866;
	add.s64 	%rd14868, %rd14867, %rd14862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27762,%dummy}, %rd14857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27763}, %rd14857;
	}
	shf.r.wrap.b32 	%r27764, %r27763, %r27762, 14;
	shf.r.wrap.b32 	%r27765, %r27762, %r27763, 14;
	mov.b64 	%rd14869, {%r27765, %r27764};
	shf.r.wrap.b32 	%r27766, %r27763, %r27762, 18;
	shf.r.wrap.b32 	%r27767, %r27762, %r27763, 18;
	mov.b64 	%rd14870, {%r27767, %r27766};
	xor.b64  	%rd14871, %rd14870, %rd14869;
	shf.l.wrap.b32 	%r27768, %r27762, %r27763, 23;
	shf.l.wrap.b32 	%r27769, %r27763, %r27762, 23;
	mov.b64 	%rd14872, {%r27769, %r27768};
	xor.b64  	%rd14873, %rd14871, %rd14872;
	xor.b64  	%rd14874, %rd14833, %rd14809;
	and.b64  	%rd14875, %rd14857, %rd14874;
	xor.b64  	%rd14876, %rd14875, %rd14809;
	add.s64 	%rd14877, %rd14629, %rd48;
	add.s64 	%rd14878, %rd14877, %rd14785;
	add.s64 	%rd14879, %rd14878, %rd14876;
	add.s64 	%rd14880, %rd14879, %rd14873;
	add.s64 	%rd14881, %rd14880, %rd14796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27770,%dummy}, %rd14868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27771}, %rd14868;
	}
	shf.r.wrap.b32 	%r27772, %r27771, %r27770, 28;
	shf.r.wrap.b32 	%r27773, %r27770, %r27771, 28;
	mov.b64 	%rd14882, {%r27773, %r27772};
	shf.l.wrap.b32 	%r27774, %r27770, %r27771, 30;
	shf.l.wrap.b32 	%r27775, %r27771, %r27770, 30;
	mov.b64 	%rd14883, {%r27775, %r27774};
	xor.b64  	%rd14884, %rd14883, %rd14882;
	shf.l.wrap.b32 	%r27776, %r27770, %r27771, 25;
	shf.l.wrap.b32 	%r27777, %r27771, %r27770, 25;
	mov.b64 	%rd14885, {%r27777, %r27776};
	xor.b64  	%rd14886, %rd14884, %rd14885;
	and.b64  	%rd14887, %rd14868, %rd14844;
	xor.b64  	%rd14888, %rd14868, %rd14844;
	and.b64  	%rd14889, %rd14888, %rd14820;
	or.b64  	%rd14890, %rd14889, %rd14887;
	add.s64 	%rd14891, %rd14880, %rd14890;
	add.s64 	%rd14892, %rd14891, %rd14886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27778,%dummy}, %rd14881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27779}, %rd14881;
	}
	shf.r.wrap.b32 	%r27780, %r27779, %r27778, 14;
	shf.r.wrap.b32 	%r27781, %r27778, %r27779, 14;
	mov.b64 	%rd14893, {%r27781, %r27780};
	shf.r.wrap.b32 	%r27782, %r27779, %r27778, 18;
	shf.r.wrap.b32 	%r27783, %r27778, %r27779, 18;
	mov.b64 	%rd14894, {%r27783, %r27782};
	xor.b64  	%rd14895, %rd14894, %rd14893;
	shf.l.wrap.b32 	%r27784, %r27778, %r27779, 23;
	shf.l.wrap.b32 	%r27785, %r27779, %r27778, 23;
	mov.b64 	%rd14896, {%r27785, %r27784};
	xor.b64  	%rd14897, %rd14895, %rd14896;
	xor.b64  	%rd14898, %rd14857, %rd14833;
	and.b64  	%rd14899, %rd14881, %rd14898;
	xor.b64  	%rd14900, %rd14899, %rd14833;
	add.s64 	%rd14901, %rd14642, %rd49;
	add.s64 	%rd14902, %rd14901, %rd14809;
	add.s64 	%rd14903, %rd14902, %rd14900;
	add.s64 	%rd14904, %rd14903, %rd14897;
	add.s64 	%rd14905, %rd14904, %rd14820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27786,%dummy}, %rd14892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27787}, %rd14892;
	}
	shf.r.wrap.b32 	%r27788, %r27787, %r27786, 28;
	shf.r.wrap.b32 	%r27789, %r27786, %r27787, 28;
	mov.b64 	%rd14906, {%r27789, %r27788};
	shf.l.wrap.b32 	%r27790, %r27786, %r27787, 30;
	shf.l.wrap.b32 	%r27791, %r27787, %r27786, 30;
	mov.b64 	%rd14907, {%r27791, %r27790};
	xor.b64  	%rd14908, %rd14907, %rd14906;
	shf.l.wrap.b32 	%r27792, %r27786, %r27787, 25;
	shf.l.wrap.b32 	%r27793, %r27787, %r27786, 25;
	mov.b64 	%rd14909, {%r27793, %r27792};
	xor.b64  	%rd14910, %rd14908, %rd14909;
	and.b64  	%rd14911, %rd14892, %rd14868;
	xor.b64  	%rd14912, %rd14892, %rd14868;
	and.b64  	%rd14913, %rd14912, %rd14844;
	or.b64  	%rd14914, %rd14913, %rd14911;
	add.s64 	%rd14915, %rd14904, %rd14914;
	add.s64 	%rd14916, %rd14915, %rd14910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27794,%dummy}, %rd14905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27795}, %rd14905;
	}
	shf.r.wrap.b32 	%r27796, %r27795, %r27794, 14;
	shf.r.wrap.b32 	%r27797, %r27794, %r27795, 14;
	mov.b64 	%rd14917, {%r27797, %r27796};
	shf.r.wrap.b32 	%r27798, %r27795, %r27794, 18;
	shf.r.wrap.b32 	%r27799, %r27794, %r27795, 18;
	mov.b64 	%rd14918, {%r27799, %r27798};
	xor.b64  	%rd14919, %rd14918, %rd14917;
	shf.l.wrap.b32 	%r27800, %r27794, %r27795, 23;
	shf.l.wrap.b32 	%r27801, %r27795, %r27794, 23;
	mov.b64 	%rd14920, {%r27801, %r27800};
	xor.b64  	%rd14921, %rd14919, %rd14920;
	xor.b64  	%rd14922, %rd14881, %rd14857;
	and.b64  	%rd14923, %rd14905, %rd14922;
	xor.b64  	%rd14924, %rd14923, %rd14857;
	add.s64 	%rd14925, %rd14655, %rd50;
	add.s64 	%rd14926, %rd14925, %rd14833;
	add.s64 	%rd14927, %rd14926, %rd14924;
	add.s64 	%rd14928, %rd14927, %rd14921;
	add.s64 	%rd14929, %rd14928, %rd14844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27802,%dummy}, %rd14916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27803}, %rd14916;
	}
	shf.r.wrap.b32 	%r27804, %r27803, %r27802, 28;
	shf.r.wrap.b32 	%r27805, %r27802, %r27803, 28;
	mov.b64 	%rd14930, {%r27805, %r27804};
	shf.l.wrap.b32 	%r27806, %r27802, %r27803, 30;
	shf.l.wrap.b32 	%r27807, %r27803, %r27802, 30;
	mov.b64 	%rd14931, {%r27807, %r27806};
	xor.b64  	%rd14932, %rd14931, %rd14930;
	shf.l.wrap.b32 	%r27808, %r27802, %r27803, 25;
	shf.l.wrap.b32 	%r27809, %r27803, %r27802, 25;
	mov.b64 	%rd14933, {%r27809, %r27808};
	xor.b64  	%rd14934, %rd14932, %rd14933;
	and.b64  	%rd14935, %rd14916, %rd14892;
	xor.b64  	%rd14936, %rd14916, %rd14892;
	and.b64  	%rd14937, %rd14936, %rd14868;
	or.b64  	%rd14938, %rd14937, %rd14935;
	add.s64 	%rd14939, %rd14928, %rd14938;
	add.s64 	%rd14940, %rd14939, %rd14934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27810,%dummy}, %rd14929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27811}, %rd14929;
	}
	shf.r.wrap.b32 	%r27812, %r27811, %r27810, 14;
	shf.r.wrap.b32 	%r27813, %r27810, %r27811, 14;
	mov.b64 	%rd14941, {%r27813, %r27812};
	shf.r.wrap.b32 	%r27814, %r27811, %r27810, 18;
	shf.r.wrap.b32 	%r27815, %r27810, %r27811, 18;
	mov.b64 	%rd14942, {%r27815, %r27814};
	xor.b64  	%rd14943, %rd14942, %rd14941;
	shf.l.wrap.b32 	%r27816, %r27810, %r27811, 23;
	shf.l.wrap.b32 	%r27817, %r27811, %r27810, 23;
	mov.b64 	%rd14944, {%r27817, %r27816};
	xor.b64  	%rd14945, %rd14943, %rd14944;
	xor.b64  	%rd14946, %rd14905, %rd14881;
	and.b64  	%rd14947, %rd14929, %rd14946;
	xor.b64  	%rd14948, %rd14947, %rd14881;
	add.s64 	%rd14949, %rd14668, %rd51;
	add.s64 	%rd14950, %rd14949, %rd14857;
	add.s64 	%rd14951, %rd14950, %rd14948;
	add.s64 	%rd14952, %rd14951, %rd14945;
	add.s64 	%rd14953, %rd14952, %rd14868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27818,%dummy}, %rd14940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27819}, %rd14940;
	}
	shf.r.wrap.b32 	%r27820, %r27819, %r27818, 28;
	shf.r.wrap.b32 	%r27821, %r27818, %r27819, 28;
	mov.b64 	%rd14954, {%r27821, %r27820};
	shf.l.wrap.b32 	%r27822, %r27818, %r27819, 30;
	shf.l.wrap.b32 	%r27823, %r27819, %r27818, 30;
	mov.b64 	%rd14955, {%r27823, %r27822};
	xor.b64  	%rd14956, %rd14955, %rd14954;
	shf.l.wrap.b32 	%r27824, %r27818, %r27819, 25;
	shf.l.wrap.b32 	%r27825, %r27819, %r27818, 25;
	mov.b64 	%rd14957, {%r27825, %r27824};
	xor.b64  	%rd14958, %rd14956, %rd14957;
	and.b64  	%rd14959, %rd14940, %rd14916;
	xor.b64  	%rd14960, %rd14940, %rd14916;
	and.b64  	%rd14961, %rd14960, %rd14892;
	or.b64  	%rd14962, %rd14961, %rd14959;
	add.s64 	%rd14963, %rd14952, %rd14962;
	add.s64 	%rd14964, %rd14963, %rd14958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27826,%dummy}, %rd14953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27827}, %rd14953;
	}
	shf.r.wrap.b32 	%r27828, %r27827, %r27826, 14;
	shf.r.wrap.b32 	%r27829, %r27826, %r27827, 14;
	mov.b64 	%rd14965, {%r27829, %r27828};
	shf.r.wrap.b32 	%r27830, %r27827, %r27826, 18;
	shf.r.wrap.b32 	%r27831, %r27826, %r27827, 18;
	mov.b64 	%rd14966, {%r27831, %r27830};
	xor.b64  	%rd14967, %rd14966, %rd14965;
	shf.l.wrap.b32 	%r27832, %r27826, %r27827, 23;
	shf.l.wrap.b32 	%r27833, %r27827, %r27826, 23;
	mov.b64 	%rd14968, {%r27833, %r27832};
	xor.b64  	%rd14969, %rd14967, %rd14968;
	xor.b64  	%rd14970, %rd14929, %rd14905;
	and.b64  	%rd14971, %rd14953, %rd14970;
	xor.b64  	%rd14972, %rd14971, %rd14905;
	add.s64 	%rd14973, %rd14681, %rd52;
	add.s64 	%rd14974, %rd14973, %rd14881;
	add.s64 	%rd14975, %rd14974, %rd14972;
	add.s64 	%rd14976, %rd14975, %rd14969;
	add.s64 	%rd14977, %rd14976, %rd14892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27834,%dummy}, %rd14964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27835}, %rd14964;
	}
	shf.r.wrap.b32 	%r27836, %r27835, %r27834, 28;
	shf.r.wrap.b32 	%r27837, %r27834, %r27835, 28;
	mov.b64 	%rd14978, {%r27837, %r27836};
	shf.l.wrap.b32 	%r27838, %r27834, %r27835, 30;
	shf.l.wrap.b32 	%r27839, %r27835, %r27834, 30;
	mov.b64 	%rd14979, {%r27839, %r27838};
	xor.b64  	%rd14980, %rd14979, %rd14978;
	shf.l.wrap.b32 	%r27840, %r27834, %r27835, 25;
	shf.l.wrap.b32 	%r27841, %r27835, %r27834, 25;
	mov.b64 	%rd14981, {%r27841, %r27840};
	xor.b64  	%rd14982, %rd14980, %rd14981;
	and.b64  	%rd14983, %rd14964, %rd14940;
	xor.b64  	%rd14984, %rd14964, %rd14940;
	and.b64  	%rd14985, %rd14984, %rd14916;
	or.b64  	%rd14986, %rd14985, %rd14983;
	add.s64 	%rd14987, %rd14976, %rd14986;
	add.s64 	%rd14988, %rd14987, %rd14982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27842,%dummy}, %rd14977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27843}, %rd14977;
	}
	shf.r.wrap.b32 	%r27844, %r27843, %r27842, 14;
	shf.r.wrap.b32 	%r27845, %r27842, %r27843, 14;
	mov.b64 	%rd14989, {%r27845, %r27844};
	shf.r.wrap.b32 	%r27846, %r27843, %r27842, 18;
	shf.r.wrap.b32 	%r27847, %r27842, %r27843, 18;
	mov.b64 	%rd14990, {%r27847, %r27846};
	xor.b64  	%rd14991, %rd14990, %rd14989;
	shf.l.wrap.b32 	%r27848, %r27842, %r27843, 23;
	shf.l.wrap.b32 	%r27849, %r27843, %r27842, 23;
	mov.b64 	%rd14992, {%r27849, %r27848};
	xor.b64  	%rd14993, %rd14991, %rd14992;
	xor.b64  	%rd14994, %rd14953, %rd14929;
	and.b64  	%rd14995, %rd14977, %rd14994;
	xor.b64  	%rd14996, %rd14995, %rd14929;
	add.s64 	%rd14997, %rd14694, %rd53;
	add.s64 	%rd14998, %rd14997, %rd14905;
	add.s64 	%rd14999, %rd14998, %rd14996;
	add.s64 	%rd15000, %rd14999, %rd14993;
	add.s64 	%rd15001, %rd15000, %rd14916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27850,%dummy}, %rd14988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27851}, %rd14988;
	}
	shf.r.wrap.b32 	%r27852, %r27851, %r27850, 28;
	shf.r.wrap.b32 	%r27853, %r27850, %r27851, 28;
	mov.b64 	%rd15002, {%r27853, %r27852};
	shf.l.wrap.b32 	%r27854, %r27850, %r27851, 30;
	shf.l.wrap.b32 	%r27855, %r27851, %r27850, 30;
	mov.b64 	%rd15003, {%r27855, %r27854};
	xor.b64  	%rd15004, %rd15003, %rd15002;
	shf.l.wrap.b32 	%r27856, %r27850, %r27851, 25;
	shf.l.wrap.b32 	%r27857, %r27851, %r27850, 25;
	mov.b64 	%rd15005, {%r27857, %r27856};
	xor.b64  	%rd15006, %rd15004, %rd15005;
	and.b64  	%rd15007, %rd14988, %rd14964;
	xor.b64  	%rd15008, %rd14988, %rd14964;
	and.b64  	%rd15009, %rd15008, %rd14940;
	or.b64  	%rd15010, %rd15009, %rd15007;
	add.s64 	%rd15011, %rd15000, %rd15010;
	add.s64 	%rd15012, %rd15011, %rd15006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27858,%dummy}, %rd15001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27859}, %rd15001;
	}
	shf.r.wrap.b32 	%r27860, %r27859, %r27858, 14;
	shf.r.wrap.b32 	%r27861, %r27858, %r27859, 14;
	mov.b64 	%rd15013, {%r27861, %r27860};
	shf.r.wrap.b32 	%r27862, %r27859, %r27858, 18;
	shf.r.wrap.b32 	%r27863, %r27858, %r27859, 18;
	mov.b64 	%rd15014, {%r27863, %r27862};
	xor.b64  	%rd15015, %rd15014, %rd15013;
	shf.l.wrap.b32 	%r27864, %r27858, %r27859, 23;
	shf.l.wrap.b32 	%r27865, %r27859, %r27858, 23;
	mov.b64 	%rd15016, {%r27865, %r27864};
	xor.b64  	%rd15017, %rd15015, %rd15016;
	xor.b64  	%rd15018, %rd14977, %rd14953;
	and.b64  	%rd15019, %rd15001, %rd15018;
	xor.b64  	%rd15020, %rd15019, %rd14953;
	add.s64 	%rd15021, %rd14707, %rd54;
	add.s64 	%rd15022, %rd15021, %rd14929;
	add.s64 	%rd15023, %rd15022, %rd15020;
	add.s64 	%rd15024, %rd15023, %rd15017;
	add.s64 	%rd15025, %rd15024, %rd14940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27866,%dummy}, %rd15012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27867}, %rd15012;
	}
	shf.r.wrap.b32 	%r27868, %r27867, %r27866, 28;
	shf.r.wrap.b32 	%r27869, %r27866, %r27867, 28;
	mov.b64 	%rd15026, {%r27869, %r27868};
	shf.l.wrap.b32 	%r27870, %r27866, %r27867, 30;
	shf.l.wrap.b32 	%r27871, %r27867, %r27866, 30;
	mov.b64 	%rd15027, {%r27871, %r27870};
	xor.b64  	%rd15028, %rd15027, %rd15026;
	shf.l.wrap.b32 	%r27872, %r27866, %r27867, 25;
	shf.l.wrap.b32 	%r27873, %r27867, %r27866, 25;
	mov.b64 	%rd15029, {%r27873, %r27872};
	xor.b64  	%rd15030, %rd15028, %rd15029;
	and.b64  	%rd15031, %rd15012, %rd14988;
	xor.b64  	%rd15032, %rd15012, %rd14988;
	and.b64  	%rd15033, %rd15032, %rd14964;
	or.b64  	%rd15034, %rd15033, %rd15031;
	add.s64 	%rd15035, %rd15024, %rd15034;
	add.s64 	%rd15036, %rd15035, %rd15030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27874,%dummy}, %rd15025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27875}, %rd15025;
	}
	shf.r.wrap.b32 	%r27876, %r27875, %r27874, 14;
	shf.r.wrap.b32 	%r27877, %r27874, %r27875, 14;
	mov.b64 	%rd15037, {%r27877, %r27876};
	shf.r.wrap.b32 	%r27878, %r27875, %r27874, 18;
	shf.r.wrap.b32 	%r27879, %r27874, %r27875, 18;
	mov.b64 	%rd15038, {%r27879, %r27878};
	xor.b64  	%rd15039, %rd15038, %rd15037;
	shf.l.wrap.b32 	%r27880, %r27874, %r27875, 23;
	shf.l.wrap.b32 	%r27881, %r27875, %r27874, 23;
	mov.b64 	%rd15040, {%r27881, %r27880};
	xor.b64  	%rd15041, %rd15039, %rd15040;
	xor.b64  	%rd15042, %rd15001, %rd14977;
	and.b64  	%rd15043, %rd15025, %rd15042;
	xor.b64  	%rd15044, %rd15043, %rd14977;
	add.s64 	%rd15045, %rd14720, %rd55;
	add.s64 	%rd15046, %rd15045, %rd14953;
	add.s64 	%rd15047, %rd15046, %rd15044;
	add.s64 	%rd15048, %rd15047, %rd15041;
	add.s64 	%rd15049, %rd15048, %rd14964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27882,%dummy}, %rd15036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27883}, %rd15036;
	}
	shf.r.wrap.b32 	%r27884, %r27883, %r27882, 28;
	shf.r.wrap.b32 	%r27885, %r27882, %r27883, 28;
	mov.b64 	%rd15050, {%r27885, %r27884};
	shf.l.wrap.b32 	%r27886, %r27882, %r27883, 30;
	shf.l.wrap.b32 	%r27887, %r27883, %r27882, 30;
	mov.b64 	%rd15051, {%r27887, %r27886};
	xor.b64  	%rd15052, %rd15051, %rd15050;
	shf.l.wrap.b32 	%r27888, %r27882, %r27883, 25;
	shf.l.wrap.b32 	%r27889, %r27883, %r27882, 25;
	mov.b64 	%rd15053, {%r27889, %r27888};
	xor.b64  	%rd15054, %rd15052, %rd15053;
	and.b64  	%rd15055, %rd15036, %rd15012;
	xor.b64  	%rd15056, %rd15036, %rd15012;
	and.b64  	%rd15057, %rd15056, %rd14988;
	or.b64  	%rd15058, %rd15057, %rd15055;
	add.s64 	%rd15059, %rd15048, %rd15058;
	add.s64 	%rd15060, %rd15059, %rd15054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27890,%dummy}, %rd15049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27891}, %rd15049;
	}
	shf.r.wrap.b32 	%r27892, %r27891, %r27890, 14;
	shf.r.wrap.b32 	%r27893, %r27890, %r27891, 14;
	mov.b64 	%rd15061, {%r27893, %r27892};
	shf.r.wrap.b32 	%r27894, %r27891, %r27890, 18;
	shf.r.wrap.b32 	%r27895, %r27890, %r27891, 18;
	mov.b64 	%rd15062, {%r27895, %r27894};
	xor.b64  	%rd15063, %rd15062, %rd15061;
	shf.l.wrap.b32 	%r27896, %r27890, %r27891, 23;
	shf.l.wrap.b32 	%r27897, %r27891, %r27890, 23;
	mov.b64 	%rd15064, {%r27897, %r27896};
	xor.b64  	%rd15065, %rd15063, %rd15064;
	xor.b64  	%rd15066, %rd15025, %rd15001;
	and.b64  	%rd15067, %rd15049, %rd15066;
	xor.b64  	%rd15068, %rd15067, %rd15001;
	add.s64 	%rd15069, %rd14733, %rd56;
	add.s64 	%rd15070, %rd15069, %rd14977;
	add.s64 	%rd15071, %rd15070, %rd15068;
	add.s64 	%rd15072, %rd15071, %rd15065;
	add.s64 	%rd15073, %rd15072, %rd14988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27898,%dummy}, %rd15060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27899}, %rd15060;
	}
	shf.r.wrap.b32 	%r27900, %r27899, %r27898, 28;
	shf.r.wrap.b32 	%r27901, %r27898, %r27899, 28;
	mov.b64 	%rd15074, {%r27901, %r27900};
	shf.l.wrap.b32 	%r27902, %r27898, %r27899, 30;
	shf.l.wrap.b32 	%r27903, %r27899, %r27898, 30;
	mov.b64 	%rd15075, {%r27903, %r27902};
	xor.b64  	%rd15076, %rd15075, %rd15074;
	shf.l.wrap.b32 	%r27904, %r27898, %r27899, 25;
	shf.l.wrap.b32 	%r27905, %r27899, %r27898, 25;
	mov.b64 	%rd15077, {%r27905, %r27904};
	xor.b64  	%rd15078, %rd15076, %rd15077;
	and.b64  	%rd15079, %rd15060, %rd15036;
	xor.b64  	%rd15080, %rd15060, %rd15036;
	and.b64  	%rd15081, %rd15080, %rd15012;
	or.b64  	%rd15082, %rd15081, %rd15079;
	add.s64 	%rd15083, %rd15072, %rd15082;
	add.s64 	%rd15084, %rd15083, %rd15078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27906,%dummy}, %rd15073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27907}, %rd15073;
	}
	shf.r.wrap.b32 	%r27908, %r27907, %r27906, 14;
	shf.r.wrap.b32 	%r27909, %r27906, %r27907, 14;
	mov.b64 	%rd15085, {%r27909, %r27908};
	shf.r.wrap.b32 	%r27910, %r27907, %r27906, 18;
	shf.r.wrap.b32 	%r27911, %r27906, %r27907, 18;
	mov.b64 	%rd15086, {%r27911, %r27910};
	xor.b64  	%rd15087, %rd15086, %rd15085;
	shf.l.wrap.b32 	%r27912, %r27906, %r27907, 23;
	shf.l.wrap.b32 	%r27913, %r27907, %r27906, 23;
	mov.b64 	%rd15088, {%r27913, %r27912};
	xor.b64  	%rd15089, %rd15087, %rd15088;
	xor.b64  	%rd15090, %rd15049, %rd15025;
	and.b64  	%rd15091, %rd15073, %rd15090;
	xor.b64  	%rd15092, %rd15091, %rd15025;
	add.s64 	%rd15093, %rd14746, %rd57;
	add.s64 	%rd15094, %rd15093, %rd15001;
	add.s64 	%rd15095, %rd15094, %rd15092;
	add.s64 	%rd15096, %rd15095, %rd15089;
	add.s64 	%rd15097, %rd15096, %rd15012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27914,%dummy}, %rd15084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27915}, %rd15084;
	}
	shf.r.wrap.b32 	%r27916, %r27915, %r27914, 28;
	shf.r.wrap.b32 	%r27917, %r27914, %r27915, 28;
	mov.b64 	%rd15098, {%r27917, %r27916};
	shf.l.wrap.b32 	%r27918, %r27914, %r27915, 30;
	shf.l.wrap.b32 	%r27919, %r27915, %r27914, 30;
	mov.b64 	%rd15099, {%r27919, %r27918};
	xor.b64  	%rd15100, %rd15099, %rd15098;
	shf.l.wrap.b32 	%r27920, %r27914, %r27915, 25;
	shf.l.wrap.b32 	%r27921, %r27915, %r27914, 25;
	mov.b64 	%rd15101, {%r27921, %r27920};
	xor.b64  	%rd15102, %rd15100, %rd15101;
	and.b64  	%rd15103, %rd15084, %rd15060;
	xor.b64  	%rd15104, %rd15084, %rd15060;
	and.b64  	%rd15105, %rd15104, %rd15036;
	or.b64  	%rd15106, %rd15105, %rd15103;
	add.s64 	%rd15107, %rd15096, %rd15106;
	add.s64 	%rd15108, %rd15107, %rd15102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27922,%dummy}, %rd15097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27923}, %rd15097;
	}
	shf.r.wrap.b32 	%r27924, %r27923, %r27922, 14;
	shf.r.wrap.b32 	%r27925, %r27922, %r27923, 14;
	mov.b64 	%rd15109, {%r27925, %r27924};
	shf.r.wrap.b32 	%r27926, %r27923, %r27922, 18;
	shf.r.wrap.b32 	%r27927, %r27922, %r27923, 18;
	mov.b64 	%rd15110, {%r27927, %r27926};
	xor.b64  	%rd15111, %rd15110, %rd15109;
	shf.l.wrap.b32 	%r27928, %r27922, %r27923, 23;
	shf.l.wrap.b32 	%r27929, %r27923, %r27922, 23;
	mov.b64 	%rd15112, {%r27929, %r27928};
	xor.b64  	%rd15113, %rd15111, %rd15112;
	xor.b64  	%rd15114, %rd15073, %rd15049;
	and.b64  	%rd15115, %rd15097, %rd15114;
	xor.b64  	%rd15116, %rd15115, %rd15049;
	add.s64 	%rd15117, %rd14759, %rd58;
	add.s64 	%rd15118, %rd15117, %rd15025;
	add.s64 	%rd15119, %rd15118, %rd15116;
	add.s64 	%rd15120, %rd15119, %rd15113;
	add.s64 	%rd15121, %rd15120, %rd15036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27930,%dummy}, %rd15108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27931}, %rd15108;
	}
	shf.r.wrap.b32 	%r27932, %r27931, %r27930, 28;
	shf.r.wrap.b32 	%r27933, %r27930, %r27931, 28;
	mov.b64 	%rd15122, {%r27933, %r27932};
	shf.l.wrap.b32 	%r27934, %r27930, %r27931, 30;
	shf.l.wrap.b32 	%r27935, %r27931, %r27930, 30;
	mov.b64 	%rd15123, {%r27935, %r27934};
	xor.b64  	%rd15124, %rd15123, %rd15122;
	shf.l.wrap.b32 	%r27936, %r27930, %r27931, 25;
	shf.l.wrap.b32 	%r27937, %r27931, %r27930, 25;
	mov.b64 	%rd15125, {%r27937, %r27936};
	xor.b64  	%rd15126, %rd15124, %rd15125;
	and.b64  	%rd15127, %rd15108, %rd15084;
	xor.b64  	%rd15128, %rd15108, %rd15084;
	and.b64  	%rd15129, %rd15128, %rd15060;
	or.b64  	%rd15130, %rd15129, %rd15127;
	add.s64 	%rd15131, %rd15120, %rd15130;
	add.s64 	%rd15132, %rd15131, %rd15126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27938,%dummy}, %rd15121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27939}, %rd15121;
	}
	shf.r.wrap.b32 	%r27940, %r27939, %r27938, 14;
	shf.r.wrap.b32 	%r27941, %r27938, %r27939, 14;
	mov.b64 	%rd15133, {%r27941, %r27940};
	shf.r.wrap.b32 	%r27942, %r27939, %r27938, 18;
	shf.r.wrap.b32 	%r27943, %r27938, %r27939, 18;
	mov.b64 	%rd15134, {%r27943, %r27942};
	xor.b64  	%rd15135, %rd15134, %rd15133;
	shf.l.wrap.b32 	%r27944, %r27938, %r27939, 23;
	shf.l.wrap.b32 	%r27945, %r27939, %r27938, 23;
	mov.b64 	%rd15136, {%r27945, %r27944};
	xor.b64  	%rd15137, %rd15135, %rd15136;
	xor.b64  	%rd15138, %rd15097, %rd15073;
	and.b64  	%rd15139, %rd15121, %rd15138;
	xor.b64  	%rd15140, %rd15139, %rd15073;
	add.s64 	%rd15141, %rd14772, %rd59;
	add.s64 	%rd15142, %rd15141, %rd15049;
	add.s64 	%rd15143, %rd15142, %rd15140;
	add.s64 	%rd15144, %rd15143, %rd15137;
	add.s64 	%rd15145, %rd15144, %rd15060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27946,%dummy}, %rd15132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27947}, %rd15132;
	}
	shf.r.wrap.b32 	%r27948, %r27947, %r27946, 28;
	shf.r.wrap.b32 	%r27949, %r27946, %r27947, 28;
	mov.b64 	%rd15146, {%r27949, %r27948};
	shf.l.wrap.b32 	%r27950, %r27946, %r27947, 30;
	shf.l.wrap.b32 	%r27951, %r27947, %r27946, 30;
	mov.b64 	%rd15147, {%r27951, %r27950};
	xor.b64  	%rd15148, %rd15147, %rd15146;
	shf.l.wrap.b32 	%r27952, %r27946, %r27947, 25;
	shf.l.wrap.b32 	%r27953, %r27947, %r27946, 25;
	mov.b64 	%rd15149, {%r27953, %r27952};
	xor.b64  	%rd15150, %rd15148, %rd15149;
	and.b64  	%rd15151, %rd15132, %rd15108;
	xor.b64  	%rd15152, %rd15132, %rd15108;
	and.b64  	%rd15153, %rd15152, %rd15084;
	or.b64  	%rd15154, %rd15153, %rd15151;
	add.s64 	%rd15155, %rd15144, %rd15154;
	add.s64 	%rd15156, %rd15155, %rd15150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27954,%dummy}, %rd14759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27955}, %rd14759;
	}
	shf.r.wrap.b32 	%r27956, %r27955, %r27954, 19;
	shf.r.wrap.b32 	%r27957, %r27954, %r27955, 19;
	mov.b64 	%rd15157, {%r27957, %r27956};
	shf.l.wrap.b32 	%r27958, %r27954, %r27955, 3;
	shf.l.wrap.b32 	%r27959, %r27955, %r27954, 3;
	mov.b64 	%rd15158, {%r27959, %r27958};
	shr.u64 	%rd15159, %rd14759, 6;
	xor.b64  	%rd15160, %rd15157, %rd15159;
	xor.b64  	%rd15161, %rd15160, %rd15158;
	shf.r.wrap.b32 	%r27960, %r27549, %r27548, 1;
	shf.r.wrap.b32 	%r27961, %r27548, %r27549, 1;
	mov.b64 	%rd15162, {%r27961, %r27960};
	shf.r.wrap.b32 	%r27962, %r27549, %r27548, 8;
	shf.r.wrap.b32 	%r27963, %r27548, %r27549, 8;
	mov.b64 	%rd15163, {%r27963, %r27962};
	shr.u64 	%rd15164, %rd14590, 7;
	xor.b64  	%rd15165, %rd15162, %rd15164;
	xor.b64  	%rd15166, %rd15165, %rd15163;
	add.s64 	%rd15167, %rd14694, %rd14577;
	add.s64 	%rd15168, %rd15167, %rd15161;
	add.s64 	%rd15169, %rd15168, %rd15166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27964,%dummy}, %rd14772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27965}, %rd14772;
	}
	shf.r.wrap.b32 	%r27966, %r27965, %r27964, 19;
	shf.r.wrap.b32 	%r27967, %r27964, %r27965, 19;
	mov.b64 	%rd15170, {%r27967, %r27966};
	shf.l.wrap.b32 	%r27968, %r27964, %r27965, 3;
	shf.l.wrap.b32 	%r27969, %r27965, %r27964, 3;
	mov.b64 	%rd15171, {%r27969, %r27968};
	shr.u64 	%rd15172, %rd14772, 6;
	xor.b64  	%rd15173, %rd15170, %rd15172;
	xor.b64  	%rd15174, %rd15173, %rd15171;
	shf.r.wrap.b32 	%r27970, %r27561, %r27560, 1;
	shf.r.wrap.b32 	%r27971, %r27560, %r27561, 1;
	mov.b64 	%rd15175, {%r27971, %r27970};
	shf.r.wrap.b32 	%r27972, %r27561, %r27560, 8;
	shf.r.wrap.b32 	%r27973, %r27560, %r27561, 8;
	mov.b64 	%rd15176, {%r27973, %r27972};
	shr.u64 	%rd15177, %rd14603, 7;
	xor.b64  	%rd15178, %rd15175, %rd15177;
	xor.b64  	%rd15179, %rd15178, %rd15176;
	add.s64 	%rd15180, %rd14707, %rd14590;
	add.s64 	%rd15181, %rd15180, %rd15174;
	add.s64 	%rd15182, %rd15181, %rd15179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27974,%dummy}, %rd15169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27975}, %rd15169;
	}
	shf.r.wrap.b32 	%r27976, %r27975, %r27974, 19;
	shf.r.wrap.b32 	%r27977, %r27974, %r27975, 19;
	mov.b64 	%rd15183, {%r27977, %r27976};
	shf.l.wrap.b32 	%r27978, %r27974, %r27975, 3;
	shf.l.wrap.b32 	%r27979, %r27975, %r27974, 3;
	mov.b64 	%rd15184, {%r27979, %r27978};
	shr.u64 	%rd15185, %rd15169, 6;
	xor.b64  	%rd15186, %rd15183, %rd15185;
	xor.b64  	%rd15187, %rd15186, %rd15184;
	shf.r.wrap.b32 	%r27980, %r27573, %r27572, 1;
	shf.r.wrap.b32 	%r27981, %r27572, %r27573, 1;
	mov.b64 	%rd15188, {%r27981, %r27980};
	shf.r.wrap.b32 	%r27982, %r27573, %r27572, 8;
	shf.r.wrap.b32 	%r27983, %r27572, %r27573, 8;
	mov.b64 	%rd15189, {%r27983, %r27982};
	shr.u64 	%rd15190, %rd14616, 7;
	xor.b64  	%rd15191, %rd15188, %rd15190;
	xor.b64  	%rd15192, %rd15191, %rd15189;
	add.s64 	%rd15193, %rd14720, %rd14603;
	add.s64 	%rd15194, %rd15193, %rd15187;
	add.s64 	%rd15195, %rd15194, %rd15192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27984,%dummy}, %rd15182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27985}, %rd15182;
	}
	shf.r.wrap.b32 	%r27986, %r27985, %r27984, 19;
	shf.r.wrap.b32 	%r27987, %r27984, %r27985, 19;
	mov.b64 	%rd15196, {%r27987, %r27986};
	shf.l.wrap.b32 	%r27988, %r27984, %r27985, 3;
	shf.l.wrap.b32 	%r27989, %r27985, %r27984, 3;
	mov.b64 	%rd15197, {%r27989, %r27988};
	shr.u64 	%rd15198, %rd15182, 6;
	xor.b64  	%rd15199, %rd15196, %rd15198;
	xor.b64  	%rd15200, %rd15199, %rd15197;
	shf.r.wrap.b32 	%r27990, %r27585, %r27584, 1;
	shf.r.wrap.b32 	%r27991, %r27584, %r27585, 1;
	mov.b64 	%rd15201, {%r27991, %r27990};
	shf.r.wrap.b32 	%r27992, %r27585, %r27584, 8;
	shf.r.wrap.b32 	%r27993, %r27584, %r27585, 8;
	mov.b64 	%rd15202, {%r27993, %r27992};
	shr.u64 	%rd15203, %rd14629, 7;
	xor.b64  	%rd15204, %rd15201, %rd15203;
	xor.b64  	%rd15205, %rd15204, %rd15202;
	add.s64 	%rd15206, %rd14733, %rd14616;
	add.s64 	%rd15207, %rd15206, %rd15200;
	add.s64 	%rd15208, %rd15207, %rd15205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27994,%dummy}, %rd15195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27995}, %rd15195;
	}
	shf.r.wrap.b32 	%r27996, %r27995, %r27994, 19;
	shf.r.wrap.b32 	%r27997, %r27994, %r27995, 19;
	mov.b64 	%rd15209, {%r27997, %r27996};
	shf.l.wrap.b32 	%r27998, %r27994, %r27995, 3;
	shf.l.wrap.b32 	%r27999, %r27995, %r27994, 3;
	mov.b64 	%rd15210, {%r27999, %r27998};
	shr.u64 	%rd15211, %rd15195, 6;
	xor.b64  	%rd15212, %rd15209, %rd15211;
	xor.b64  	%rd15213, %rd15212, %rd15210;
	shf.r.wrap.b32 	%r28000, %r27597, %r27596, 1;
	shf.r.wrap.b32 	%r28001, %r27596, %r27597, 1;
	mov.b64 	%rd15214, {%r28001, %r28000};
	shf.r.wrap.b32 	%r28002, %r27597, %r27596, 8;
	shf.r.wrap.b32 	%r28003, %r27596, %r27597, 8;
	mov.b64 	%rd15215, {%r28003, %r28002};
	shr.u64 	%rd15216, %rd14642, 7;
	xor.b64  	%rd15217, %rd15214, %rd15216;
	xor.b64  	%rd15218, %rd15217, %rd15215;
	add.s64 	%rd15219, %rd14746, %rd14629;
	add.s64 	%rd15220, %rd15219, %rd15213;
	add.s64 	%rd15221, %rd15220, %rd15218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28004,%dummy}, %rd15208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28005}, %rd15208;
	}
	shf.r.wrap.b32 	%r28006, %r28005, %r28004, 19;
	shf.r.wrap.b32 	%r28007, %r28004, %r28005, 19;
	mov.b64 	%rd15222, {%r28007, %r28006};
	shf.l.wrap.b32 	%r28008, %r28004, %r28005, 3;
	shf.l.wrap.b32 	%r28009, %r28005, %r28004, 3;
	mov.b64 	%rd15223, {%r28009, %r28008};
	shr.u64 	%rd15224, %rd15208, 6;
	xor.b64  	%rd15225, %rd15222, %rd15224;
	xor.b64  	%rd15226, %rd15225, %rd15223;
	shf.r.wrap.b32 	%r28010, %r27609, %r27608, 1;
	shf.r.wrap.b32 	%r28011, %r27608, %r27609, 1;
	mov.b64 	%rd15227, {%r28011, %r28010};
	shf.r.wrap.b32 	%r28012, %r27609, %r27608, 8;
	shf.r.wrap.b32 	%r28013, %r27608, %r27609, 8;
	mov.b64 	%rd15228, {%r28013, %r28012};
	shr.u64 	%rd15229, %rd14655, 7;
	xor.b64  	%rd15230, %rd15227, %rd15229;
	xor.b64  	%rd15231, %rd15230, %rd15228;
	add.s64 	%rd15232, %rd14759, %rd14642;
	add.s64 	%rd15233, %rd15232, %rd15226;
	add.s64 	%rd15234, %rd15233, %rd15231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28014,%dummy}, %rd15221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28015}, %rd15221;
	}
	shf.r.wrap.b32 	%r28016, %r28015, %r28014, 19;
	shf.r.wrap.b32 	%r28017, %r28014, %r28015, 19;
	mov.b64 	%rd15235, {%r28017, %r28016};
	shf.l.wrap.b32 	%r28018, %r28014, %r28015, 3;
	shf.l.wrap.b32 	%r28019, %r28015, %r28014, 3;
	mov.b64 	%rd15236, {%r28019, %r28018};
	shr.u64 	%rd15237, %rd15221, 6;
	xor.b64  	%rd15238, %rd15235, %rd15237;
	xor.b64  	%rd15239, %rd15238, %rd15236;
	shf.r.wrap.b32 	%r28020, %r27621, %r27620, 1;
	shf.r.wrap.b32 	%r28021, %r27620, %r27621, 1;
	mov.b64 	%rd15240, {%r28021, %r28020};
	shf.r.wrap.b32 	%r28022, %r27621, %r27620, 8;
	shf.r.wrap.b32 	%r28023, %r27620, %r27621, 8;
	mov.b64 	%rd15241, {%r28023, %r28022};
	shr.u64 	%rd15242, %rd14668, 7;
	xor.b64  	%rd15243, %rd15240, %rd15242;
	xor.b64  	%rd15244, %rd15243, %rd15241;
	add.s64 	%rd15245, %rd14772, %rd14655;
	add.s64 	%rd15246, %rd15245, %rd15239;
	add.s64 	%rd15247, %rd15246, %rd15244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28024,%dummy}, %rd15234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28025}, %rd15234;
	}
	shf.r.wrap.b32 	%r28026, %r28025, %r28024, 19;
	shf.r.wrap.b32 	%r28027, %r28024, %r28025, 19;
	mov.b64 	%rd15248, {%r28027, %r28026};
	shf.l.wrap.b32 	%r28028, %r28024, %r28025, 3;
	shf.l.wrap.b32 	%r28029, %r28025, %r28024, 3;
	mov.b64 	%rd15249, {%r28029, %r28028};
	shr.u64 	%rd15250, %rd15234, 6;
	xor.b64  	%rd15251, %rd15248, %rd15250;
	xor.b64  	%rd15252, %rd15251, %rd15249;
	shf.r.wrap.b32 	%r28030, %r27633, %r27632, 1;
	shf.r.wrap.b32 	%r28031, %r27632, %r27633, 1;
	mov.b64 	%rd15253, {%r28031, %r28030};
	shf.r.wrap.b32 	%r28032, %r27633, %r27632, 8;
	shf.r.wrap.b32 	%r28033, %r27632, %r27633, 8;
	mov.b64 	%rd15254, {%r28033, %r28032};
	shr.u64 	%rd15255, %rd14681, 7;
	xor.b64  	%rd15256, %rd15253, %rd15255;
	xor.b64  	%rd15257, %rd15256, %rd15254;
	add.s64 	%rd15258, %rd15169, %rd14668;
	add.s64 	%rd15259, %rd15258, %rd15252;
	add.s64 	%rd15260, %rd15259, %rd15257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28034,%dummy}, %rd15247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28035}, %rd15247;
	}
	shf.r.wrap.b32 	%r28036, %r28035, %r28034, 19;
	shf.r.wrap.b32 	%r28037, %r28034, %r28035, 19;
	mov.b64 	%rd15261, {%r28037, %r28036};
	shf.l.wrap.b32 	%r28038, %r28034, %r28035, 3;
	shf.l.wrap.b32 	%r28039, %r28035, %r28034, 3;
	mov.b64 	%rd15262, {%r28039, %r28038};
	shr.u64 	%rd15263, %rd15247, 6;
	xor.b64  	%rd15264, %rd15261, %rd15263;
	xor.b64  	%rd15265, %rd15264, %rd15262;
	shf.r.wrap.b32 	%r28040, %r27645, %r27644, 1;
	shf.r.wrap.b32 	%r28041, %r27644, %r27645, 1;
	mov.b64 	%rd15266, {%r28041, %r28040};
	shf.r.wrap.b32 	%r28042, %r27645, %r27644, 8;
	shf.r.wrap.b32 	%r28043, %r27644, %r27645, 8;
	mov.b64 	%rd15267, {%r28043, %r28042};
	shr.u64 	%rd15268, %rd14694, 7;
	xor.b64  	%rd15269, %rd15266, %rd15268;
	xor.b64  	%rd15270, %rd15269, %rd15267;
	add.s64 	%rd15271, %rd15182, %rd14681;
	add.s64 	%rd15272, %rd15271, %rd15265;
	add.s64 	%rd15273, %rd15272, %rd15270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28044,%dummy}, %rd15260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28045}, %rd15260;
	}
	shf.r.wrap.b32 	%r28046, %r28045, %r28044, 19;
	shf.r.wrap.b32 	%r28047, %r28044, %r28045, 19;
	mov.b64 	%rd15274, {%r28047, %r28046};
	shf.l.wrap.b32 	%r28048, %r28044, %r28045, 3;
	shf.l.wrap.b32 	%r28049, %r28045, %r28044, 3;
	mov.b64 	%rd15275, {%r28049, %r28048};
	shr.u64 	%rd15276, %rd15260, 6;
	xor.b64  	%rd15277, %rd15274, %rd15276;
	xor.b64  	%rd15278, %rd15277, %rd15275;
	shf.r.wrap.b32 	%r28050, %r27657, %r27656, 1;
	shf.r.wrap.b32 	%r28051, %r27656, %r27657, 1;
	mov.b64 	%rd15279, {%r28051, %r28050};
	shf.r.wrap.b32 	%r28052, %r27657, %r27656, 8;
	shf.r.wrap.b32 	%r28053, %r27656, %r27657, 8;
	mov.b64 	%rd15280, {%r28053, %r28052};
	shr.u64 	%rd15281, %rd14707, 7;
	xor.b64  	%rd15282, %rd15279, %rd15281;
	xor.b64  	%rd15283, %rd15282, %rd15280;
	add.s64 	%rd15284, %rd15195, %rd14694;
	add.s64 	%rd15285, %rd15284, %rd15278;
	add.s64 	%rd15286, %rd15285, %rd15283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28054,%dummy}, %rd15273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28055}, %rd15273;
	}
	shf.r.wrap.b32 	%r28056, %r28055, %r28054, 19;
	shf.r.wrap.b32 	%r28057, %r28054, %r28055, 19;
	mov.b64 	%rd15287, {%r28057, %r28056};
	shf.l.wrap.b32 	%r28058, %r28054, %r28055, 3;
	shf.l.wrap.b32 	%r28059, %r28055, %r28054, 3;
	mov.b64 	%rd15288, {%r28059, %r28058};
	shr.u64 	%rd15289, %rd15273, 6;
	xor.b64  	%rd15290, %rd15287, %rd15289;
	xor.b64  	%rd15291, %rd15290, %rd15288;
	shf.r.wrap.b32 	%r28060, %r27669, %r27668, 1;
	shf.r.wrap.b32 	%r28061, %r27668, %r27669, 1;
	mov.b64 	%rd15292, {%r28061, %r28060};
	shf.r.wrap.b32 	%r28062, %r27669, %r27668, 8;
	shf.r.wrap.b32 	%r28063, %r27668, %r27669, 8;
	mov.b64 	%rd15293, {%r28063, %r28062};
	shr.u64 	%rd15294, %rd14720, 7;
	xor.b64  	%rd15295, %rd15292, %rd15294;
	xor.b64  	%rd15296, %rd15295, %rd15293;
	add.s64 	%rd15297, %rd15208, %rd14707;
	add.s64 	%rd15298, %rd15297, %rd15291;
	add.s64 	%rd15299, %rd15298, %rd15296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28064,%dummy}, %rd15286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28065}, %rd15286;
	}
	shf.r.wrap.b32 	%r28066, %r28065, %r28064, 19;
	shf.r.wrap.b32 	%r28067, %r28064, %r28065, 19;
	mov.b64 	%rd15300, {%r28067, %r28066};
	shf.l.wrap.b32 	%r28068, %r28064, %r28065, 3;
	shf.l.wrap.b32 	%r28069, %r28065, %r28064, 3;
	mov.b64 	%rd15301, {%r28069, %r28068};
	shr.u64 	%rd15302, %rd15286, 6;
	xor.b64  	%rd15303, %rd15300, %rd15302;
	xor.b64  	%rd15304, %rd15303, %rd15301;
	shf.r.wrap.b32 	%r28070, %r27679, %r27678, 1;
	shf.r.wrap.b32 	%r28071, %r27678, %r27679, 1;
	mov.b64 	%rd15305, {%r28071, %r28070};
	shf.r.wrap.b32 	%r28072, %r27679, %r27678, 8;
	shf.r.wrap.b32 	%r28073, %r27678, %r27679, 8;
	mov.b64 	%rd15306, {%r28073, %r28072};
	shr.u64 	%rd15307, %rd14733, 7;
	xor.b64  	%rd15308, %rd15305, %rd15307;
	xor.b64  	%rd15309, %rd15308, %rd15306;
	add.s64 	%rd15310, %rd15221, %rd14720;
	add.s64 	%rd15311, %rd15310, %rd15304;
	add.s64 	%rd15312, %rd15311, %rd15309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28074,%dummy}, %rd15299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28075}, %rd15299;
	}
	shf.r.wrap.b32 	%r28076, %r28075, %r28074, 19;
	shf.r.wrap.b32 	%r28077, %r28074, %r28075, 19;
	mov.b64 	%rd15313, {%r28077, %r28076};
	shf.l.wrap.b32 	%r28078, %r28074, %r28075, 3;
	shf.l.wrap.b32 	%r28079, %r28075, %r28074, 3;
	mov.b64 	%rd15314, {%r28079, %r28078};
	shr.u64 	%rd15315, %rd15299, 6;
	xor.b64  	%rd15316, %rd15313, %rd15315;
	xor.b64  	%rd15317, %rd15316, %rd15314;
	shf.r.wrap.b32 	%r28080, %r27689, %r27688, 1;
	shf.r.wrap.b32 	%r28081, %r27688, %r27689, 1;
	mov.b64 	%rd15318, {%r28081, %r28080};
	shf.r.wrap.b32 	%r28082, %r27689, %r27688, 8;
	shf.r.wrap.b32 	%r28083, %r27688, %r27689, 8;
	mov.b64 	%rd15319, {%r28083, %r28082};
	shr.u64 	%rd15320, %rd14746, 7;
	xor.b64  	%rd15321, %rd15318, %rd15320;
	xor.b64  	%rd15322, %rd15321, %rd15319;
	add.s64 	%rd15323, %rd15234, %rd14733;
	add.s64 	%rd15324, %rd15323, %rd15317;
	add.s64 	%rd15325, %rd15324, %rd15322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28084,%dummy}, %rd15312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28085}, %rd15312;
	}
	shf.r.wrap.b32 	%r28086, %r28085, %r28084, 19;
	shf.r.wrap.b32 	%r28087, %r28084, %r28085, 19;
	mov.b64 	%rd15326, {%r28087, %r28086};
	shf.l.wrap.b32 	%r28088, %r28084, %r28085, 3;
	shf.l.wrap.b32 	%r28089, %r28085, %r28084, 3;
	mov.b64 	%rd15327, {%r28089, %r28088};
	shr.u64 	%rd15328, %rd15312, 6;
	xor.b64  	%rd15329, %rd15326, %rd15328;
	xor.b64  	%rd15330, %rd15329, %rd15327;
	shf.r.wrap.b32 	%r28090, %r27955, %r27954, 1;
	shf.r.wrap.b32 	%r28091, %r27954, %r27955, 1;
	mov.b64 	%rd15331, {%r28091, %r28090};
	shf.r.wrap.b32 	%r28092, %r27955, %r27954, 8;
	shf.r.wrap.b32 	%r28093, %r27954, %r27955, 8;
	mov.b64 	%rd15332, {%r28093, %r28092};
	shr.u64 	%rd15333, %rd14759, 7;
	xor.b64  	%rd15334, %rd15331, %rd15333;
	xor.b64  	%rd15335, %rd15334, %rd15332;
	add.s64 	%rd15336, %rd15247, %rd14746;
	add.s64 	%rd15337, %rd15336, %rd15330;
	add.s64 	%rd15338, %rd15337, %rd15335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28094,%dummy}, %rd15325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28095}, %rd15325;
	}
	shf.r.wrap.b32 	%r28096, %r28095, %r28094, 19;
	shf.r.wrap.b32 	%r28097, %r28094, %r28095, 19;
	mov.b64 	%rd15339, {%r28097, %r28096};
	shf.l.wrap.b32 	%r28098, %r28094, %r28095, 3;
	shf.l.wrap.b32 	%r28099, %r28095, %r28094, 3;
	mov.b64 	%rd15340, {%r28099, %r28098};
	shr.u64 	%rd15341, %rd15325, 6;
	xor.b64  	%rd15342, %rd15339, %rd15341;
	xor.b64  	%rd15343, %rd15342, %rd15340;
	shf.r.wrap.b32 	%r28100, %r27965, %r27964, 1;
	shf.r.wrap.b32 	%r28101, %r27964, %r27965, 1;
	mov.b64 	%rd15344, {%r28101, %r28100};
	shf.r.wrap.b32 	%r28102, %r27965, %r27964, 8;
	shf.r.wrap.b32 	%r28103, %r27964, %r27965, 8;
	mov.b64 	%rd15345, {%r28103, %r28102};
	shr.u64 	%rd15346, %rd14772, 7;
	xor.b64  	%rd15347, %rd15344, %rd15346;
	xor.b64  	%rd15348, %rd15347, %rd15345;
	add.s64 	%rd15349, %rd15260, %rd14759;
	add.s64 	%rd15350, %rd15349, %rd15343;
	add.s64 	%rd15351, %rd15350, %rd15348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28104,%dummy}, %rd15338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28105}, %rd15338;
	}
	shf.r.wrap.b32 	%r28106, %r28105, %r28104, 19;
	shf.r.wrap.b32 	%r28107, %r28104, %r28105, 19;
	mov.b64 	%rd15352, {%r28107, %r28106};
	shf.l.wrap.b32 	%r28108, %r28104, %r28105, 3;
	shf.l.wrap.b32 	%r28109, %r28105, %r28104, 3;
	mov.b64 	%rd15353, {%r28109, %r28108};
	shr.u64 	%rd15354, %rd15338, 6;
	xor.b64  	%rd15355, %rd15352, %rd15354;
	xor.b64  	%rd15356, %rd15355, %rd15353;
	shf.r.wrap.b32 	%r28110, %r27975, %r27974, 1;
	shf.r.wrap.b32 	%r28111, %r27974, %r27975, 1;
	mov.b64 	%rd15357, {%r28111, %r28110};
	shf.r.wrap.b32 	%r28112, %r27975, %r27974, 8;
	shf.r.wrap.b32 	%r28113, %r27974, %r27975, 8;
	mov.b64 	%rd15358, {%r28113, %r28112};
	shr.u64 	%rd15359, %rd15169, 7;
	xor.b64  	%rd15360, %rd15357, %rd15359;
	xor.b64  	%rd15361, %rd15360, %rd15358;
	add.s64 	%rd15362, %rd15273, %rd14772;
	add.s64 	%rd15363, %rd15362, %rd15356;
	add.s64 	%rd15364, %rd15363, %rd15361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28114,%dummy}, %rd15145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28115}, %rd15145;
	}
	shf.r.wrap.b32 	%r28116, %r28115, %r28114, 14;
	shf.r.wrap.b32 	%r28117, %r28114, %r28115, 14;
	mov.b64 	%rd15365, {%r28117, %r28116};
	shf.r.wrap.b32 	%r28118, %r28115, %r28114, 18;
	shf.r.wrap.b32 	%r28119, %r28114, %r28115, 18;
	mov.b64 	%rd15366, {%r28119, %r28118};
	xor.b64  	%rd15367, %rd15366, %rd15365;
	shf.l.wrap.b32 	%r28120, %r28114, %r28115, 23;
	shf.l.wrap.b32 	%r28121, %r28115, %r28114, 23;
	mov.b64 	%rd15368, {%r28121, %r28120};
	xor.b64  	%rd15369, %rd15367, %rd15368;
	xor.b64  	%rd15370, %rd15121, %rd15097;
	and.b64  	%rd15371, %rd15145, %rd15370;
	xor.b64  	%rd15372, %rd15371, %rd15097;
	add.s64 	%rd15373, %rd15073, %rd60;
	add.s64 	%rd15374, %rd15373, %rd15372;
	add.s64 	%rd15375, %rd15374, %rd15169;
	add.s64 	%rd15376, %rd15375, %rd15369;
	add.s64 	%rd15377, %rd15376, %rd15084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28122,%dummy}, %rd15156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28123}, %rd15156;
	}
	shf.r.wrap.b32 	%r28124, %r28123, %r28122, 28;
	shf.r.wrap.b32 	%r28125, %r28122, %r28123, 28;
	mov.b64 	%rd15378, {%r28125, %r28124};
	shf.l.wrap.b32 	%r28126, %r28122, %r28123, 30;
	shf.l.wrap.b32 	%r28127, %r28123, %r28122, 30;
	mov.b64 	%rd15379, {%r28127, %r28126};
	xor.b64  	%rd15380, %rd15379, %rd15378;
	shf.l.wrap.b32 	%r28128, %r28122, %r28123, 25;
	shf.l.wrap.b32 	%r28129, %r28123, %r28122, 25;
	mov.b64 	%rd15381, {%r28129, %r28128};
	xor.b64  	%rd15382, %rd15380, %rd15381;
	and.b64  	%rd15383, %rd15156, %rd15132;
	xor.b64  	%rd15384, %rd15156, %rd15132;
	and.b64  	%rd15385, %rd15384, %rd15108;
	or.b64  	%rd15386, %rd15385, %rd15383;
	add.s64 	%rd15387, %rd15376, %rd15386;
	add.s64 	%rd15388, %rd15387, %rd15382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28130,%dummy}, %rd15377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28131}, %rd15377;
	}
	shf.r.wrap.b32 	%r28132, %r28131, %r28130, 14;
	shf.r.wrap.b32 	%r28133, %r28130, %r28131, 14;
	mov.b64 	%rd15389, {%r28133, %r28132};
	shf.r.wrap.b32 	%r28134, %r28131, %r28130, 18;
	shf.r.wrap.b32 	%r28135, %r28130, %r28131, 18;
	mov.b64 	%rd15390, {%r28135, %r28134};
	xor.b64  	%rd15391, %rd15390, %rd15389;
	shf.l.wrap.b32 	%r28136, %r28130, %r28131, 23;
	shf.l.wrap.b32 	%r28137, %r28131, %r28130, 23;
	mov.b64 	%rd15392, {%r28137, %r28136};
	xor.b64  	%rd15393, %rd15391, %rd15392;
	xor.b64  	%rd15394, %rd15145, %rd15121;
	and.b64  	%rd15395, %rd15377, %rd15394;
	xor.b64  	%rd15396, %rd15395, %rd15121;
	add.s64 	%rd15397, %rd15097, %rd61;
	add.s64 	%rd15398, %rd15397, %rd15182;
	add.s64 	%rd15399, %rd15398, %rd15396;
	add.s64 	%rd15400, %rd15399, %rd15393;
	add.s64 	%rd15401, %rd15400, %rd15108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28138,%dummy}, %rd15388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28139}, %rd15388;
	}
	shf.r.wrap.b32 	%r28140, %r28139, %r28138, 28;
	shf.r.wrap.b32 	%r28141, %r28138, %r28139, 28;
	mov.b64 	%rd15402, {%r28141, %r28140};
	shf.l.wrap.b32 	%r28142, %r28138, %r28139, 30;
	shf.l.wrap.b32 	%r28143, %r28139, %r28138, 30;
	mov.b64 	%rd15403, {%r28143, %r28142};
	xor.b64  	%rd15404, %rd15403, %rd15402;
	shf.l.wrap.b32 	%r28144, %r28138, %r28139, 25;
	shf.l.wrap.b32 	%r28145, %r28139, %r28138, 25;
	mov.b64 	%rd15405, {%r28145, %r28144};
	xor.b64  	%rd15406, %rd15404, %rd15405;
	and.b64  	%rd15407, %rd15388, %rd15156;
	xor.b64  	%rd15408, %rd15388, %rd15156;
	and.b64  	%rd15409, %rd15408, %rd15132;
	or.b64  	%rd15410, %rd15409, %rd15407;
	add.s64 	%rd15411, %rd15400, %rd15410;
	add.s64 	%rd15412, %rd15411, %rd15406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28146,%dummy}, %rd15401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28147}, %rd15401;
	}
	shf.r.wrap.b32 	%r28148, %r28147, %r28146, 14;
	shf.r.wrap.b32 	%r28149, %r28146, %r28147, 14;
	mov.b64 	%rd15413, {%r28149, %r28148};
	shf.r.wrap.b32 	%r28150, %r28147, %r28146, 18;
	shf.r.wrap.b32 	%r28151, %r28146, %r28147, 18;
	mov.b64 	%rd15414, {%r28151, %r28150};
	xor.b64  	%rd15415, %rd15414, %rd15413;
	shf.l.wrap.b32 	%r28152, %r28146, %r28147, 23;
	shf.l.wrap.b32 	%r28153, %r28147, %r28146, 23;
	mov.b64 	%rd15416, {%r28153, %r28152};
	xor.b64  	%rd15417, %rd15415, %rd15416;
	xor.b64  	%rd15418, %rd15377, %rd15145;
	and.b64  	%rd15419, %rd15401, %rd15418;
	xor.b64  	%rd15420, %rd15419, %rd15145;
	add.s64 	%rd15421, %rd15121, %rd62;
	add.s64 	%rd15422, %rd15421, %rd15195;
	add.s64 	%rd15423, %rd15422, %rd15420;
	add.s64 	%rd15424, %rd15423, %rd15417;
	add.s64 	%rd15425, %rd15424, %rd15132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28154,%dummy}, %rd15412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28155}, %rd15412;
	}
	shf.r.wrap.b32 	%r28156, %r28155, %r28154, 28;
	shf.r.wrap.b32 	%r28157, %r28154, %r28155, 28;
	mov.b64 	%rd15426, {%r28157, %r28156};
	shf.l.wrap.b32 	%r28158, %r28154, %r28155, 30;
	shf.l.wrap.b32 	%r28159, %r28155, %r28154, 30;
	mov.b64 	%rd15427, {%r28159, %r28158};
	xor.b64  	%rd15428, %rd15427, %rd15426;
	shf.l.wrap.b32 	%r28160, %r28154, %r28155, 25;
	shf.l.wrap.b32 	%r28161, %r28155, %r28154, 25;
	mov.b64 	%rd15429, {%r28161, %r28160};
	xor.b64  	%rd15430, %rd15428, %rd15429;
	and.b64  	%rd15431, %rd15412, %rd15388;
	xor.b64  	%rd15432, %rd15412, %rd15388;
	and.b64  	%rd15433, %rd15432, %rd15156;
	or.b64  	%rd15434, %rd15433, %rd15431;
	add.s64 	%rd15435, %rd15424, %rd15434;
	add.s64 	%rd15436, %rd15435, %rd15430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28162,%dummy}, %rd15425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28163}, %rd15425;
	}
	shf.r.wrap.b32 	%r28164, %r28163, %r28162, 14;
	shf.r.wrap.b32 	%r28165, %r28162, %r28163, 14;
	mov.b64 	%rd15437, {%r28165, %r28164};
	shf.r.wrap.b32 	%r28166, %r28163, %r28162, 18;
	shf.r.wrap.b32 	%r28167, %r28162, %r28163, 18;
	mov.b64 	%rd15438, {%r28167, %r28166};
	xor.b64  	%rd15439, %rd15438, %rd15437;
	shf.l.wrap.b32 	%r28168, %r28162, %r28163, 23;
	shf.l.wrap.b32 	%r28169, %r28163, %r28162, 23;
	mov.b64 	%rd15440, {%r28169, %r28168};
	xor.b64  	%rd15441, %rd15439, %rd15440;
	xor.b64  	%rd15442, %rd15401, %rd15377;
	and.b64  	%rd15443, %rd15425, %rd15442;
	xor.b64  	%rd15444, %rd15443, %rd15377;
	add.s64 	%rd15445, %rd15145, %rd63;
	add.s64 	%rd15446, %rd15445, %rd15208;
	add.s64 	%rd15447, %rd15446, %rd15444;
	add.s64 	%rd15448, %rd15447, %rd15441;
	add.s64 	%rd15449, %rd15448, %rd15156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28170,%dummy}, %rd15436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28171}, %rd15436;
	}
	shf.r.wrap.b32 	%r28172, %r28171, %r28170, 28;
	shf.r.wrap.b32 	%r28173, %r28170, %r28171, 28;
	mov.b64 	%rd15450, {%r28173, %r28172};
	shf.l.wrap.b32 	%r28174, %r28170, %r28171, 30;
	shf.l.wrap.b32 	%r28175, %r28171, %r28170, 30;
	mov.b64 	%rd15451, {%r28175, %r28174};
	xor.b64  	%rd15452, %rd15451, %rd15450;
	shf.l.wrap.b32 	%r28176, %r28170, %r28171, 25;
	shf.l.wrap.b32 	%r28177, %r28171, %r28170, 25;
	mov.b64 	%rd15453, {%r28177, %r28176};
	xor.b64  	%rd15454, %rd15452, %rd15453;
	and.b64  	%rd15455, %rd15436, %rd15412;
	xor.b64  	%rd15456, %rd15436, %rd15412;
	and.b64  	%rd15457, %rd15456, %rd15388;
	or.b64  	%rd15458, %rd15457, %rd15455;
	add.s64 	%rd15459, %rd15448, %rd15458;
	add.s64 	%rd15460, %rd15459, %rd15454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28178,%dummy}, %rd15449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28179}, %rd15449;
	}
	shf.r.wrap.b32 	%r28180, %r28179, %r28178, 14;
	shf.r.wrap.b32 	%r28181, %r28178, %r28179, 14;
	mov.b64 	%rd15461, {%r28181, %r28180};
	shf.r.wrap.b32 	%r28182, %r28179, %r28178, 18;
	shf.r.wrap.b32 	%r28183, %r28178, %r28179, 18;
	mov.b64 	%rd15462, {%r28183, %r28182};
	xor.b64  	%rd15463, %rd15462, %rd15461;
	shf.l.wrap.b32 	%r28184, %r28178, %r28179, 23;
	shf.l.wrap.b32 	%r28185, %r28179, %r28178, 23;
	mov.b64 	%rd15464, {%r28185, %r28184};
	xor.b64  	%rd15465, %rd15463, %rd15464;
	xor.b64  	%rd15466, %rd15425, %rd15401;
	and.b64  	%rd15467, %rd15449, %rd15466;
	xor.b64  	%rd15468, %rd15467, %rd15401;
	add.s64 	%rd15469, %rd15221, %rd64;
	add.s64 	%rd15470, %rd15469, %rd15377;
	add.s64 	%rd15471, %rd15470, %rd15468;
	add.s64 	%rd15472, %rd15471, %rd15465;
	add.s64 	%rd15473, %rd15472, %rd15388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28186,%dummy}, %rd15460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28187}, %rd15460;
	}
	shf.r.wrap.b32 	%r28188, %r28187, %r28186, 28;
	shf.r.wrap.b32 	%r28189, %r28186, %r28187, 28;
	mov.b64 	%rd15474, {%r28189, %r28188};
	shf.l.wrap.b32 	%r28190, %r28186, %r28187, 30;
	shf.l.wrap.b32 	%r28191, %r28187, %r28186, 30;
	mov.b64 	%rd15475, {%r28191, %r28190};
	xor.b64  	%rd15476, %rd15475, %rd15474;
	shf.l.wrap.b32 	%r28192, %r28186, %r28187, 25;
	shf.l.wrap.b32 	%r28193, %r28187, %r28186, 25;
	mov.b64 	%rd15477, {%r28193, %r28192};
	xor.b64  	%rd15478, %rd15476, %rd15477;
	and.b64  	%rd15479, %rd15460, %rd15436;
	xor.b64  	%rd15480, %rd15460, %rd15436;
	and.b64  	%rd15481, %rd15480, %rd15412;
	or.b64  	%rd15482, %rd15481, %rd15479;
	add.s64 	%rd15483, %rd15472, %rd15482;
	add.s64 	%rd15484, %rd15483, %rd15478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28194,%dummy}, %rd15473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28195}, %rd15473;
	}
	shf.r.wrap.b32 	%r28196, %r28195, %r28194, 14;
	shf.r.wrap.b32 	%r28197, %r28194, %r28195, 14;
	mov.b64 	%rd15485, {%r28197, %r28196};
	shf.r.wrap.b32 	%r28198, %r28195, %r28194, 18;
	shf.r.wrap.b32 	%r28199, %r28194, %r28195, 18;
	mov.b64 	%rd15486, {%r28199, %r28198};
	xor.b64  	%rd15487, %rd15486, %rd15485;
	shf.l.wrap.b32 	%r28200, %r28194, %r28195, 23;
	shf.l.wrap.b32 	%r28201, %r28195, %r28194, 23;
	mov.b64 	%rd15488, {%r28201, %r28200};
	xor.b64  	%rd15489, %rd15487, %rd15488;
	xor.b64  	%rd15490, %rd15449, %rd15425;
	and.b64  	%rd15491, %rd15473, %rd15490;
	xor.b64  	%rd15492, %rd15491, %rd15425;
	add.s64 	%rd15493, %rd15234, %rd65;
	add.s64 	%rd15494, %rd15493, %rd15401;
	add.s64 	%rd15495, %rd15494, %rd15492;
	add.s64 	%rd15496, %rd15495, %rd15489;
	add.s64 	%rd15497, %rd15496, %rd15412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28202,%dummy}, %rd15484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28203}, %rd15484;
	}
	shf.r.wrap.b32 	%r28204, %r28203, %r28202, 28;
	shf.r.wrap.b32 	%r28205, %r28202, %r28203, 28;
	mov.b64 	%rd15498, {%r28205, %r28204};
	shf.l.wrap.b32 	%r28206, %r28202, %r28203, 30;
	shf.l.wrap.b32 	%r28207, %r28203, %r28202, 30;
	mov.b64 	%rd15499, {%r28207, %r28206};
	xor.b64  	%rd15500, %rd15499, %rd15498;
	shf.l.wrap.b32 	%r28208, %r28202, %r28203, 25;
	shf.l.wrap.b32 	%r28209, %r28203, %r28202, 25;
	mov.b64 	%rd15501, {%r28209, %r28208};
	xor.b64  	%rd15502, %rd15500, %rd15501;
	and.b64  	%rd15503, %rd15484, %rd15460;
	xor.b64  	%rd15504, %rd15484, %rd15460;
	and.b64  	%rd15505, %rd15504, %rd15436;
	or.b64  	%rd15506, %rd15505, %rd15503;
	add.s64 	%rd15507, %rd15496, %rd15506;
	add.s64 	%rd15508, %rd15507, %rd15502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28210,%dummy}, %rd15497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28211}, %rd15497;
	}
	shf.r.wrap.b32 	%r28212, %r28211, %r28210, 14;
	shf.r.wrap.b32 	%r28213, %r28210, %r28211, 14;
	mov.b64 	%rd15509, {%r28213, %r28212};
	shf.r.wrap.b32 	%r28214, %r28211, %r28210, 18;
	shf.r.wrap.b32 	%r28215, %r28210, %r28211, 18;
	mov.b64 	%rd15510, {%r28215, %r28214};
	xor.b64  	%rd15511, %rd15510, %rd15509;
	shf.l.wrap.b32 	%r28216, %r28210, %r28211, 23;
	shf.l.wrap.b32 	%r28217, %r28211, %r28210, 23;
	mov.b64 	%rd15512, {%r28217, %r28216};
	xor.b64  	%rd15513, %rd15511, %rd15512;
	xor.b64  	%rd15514, %rd15473, %rd15449;
	and.b64  	%rd15515, %rd15497, %rd15514;
	xor.b64  	%rd15516, %rd15515, %rd15449;
	add.s64 	%rd15517, %rd15247, %rd66;
	add.s64 	%rd15518, %rd15517, %rd15425;
	add.s64 	%rd15519, %rd15518, %rd15516;
	add.s64 	%rd15520, %rd15519, %rd15513;
	add.s64 	%rd15521, %rd15520, %rd15436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28218,%dummy}, %rd15508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28219}, %rd15508;
	}
	shf.r.wrap.b32 	%r28220, %r28219, %r28218, 28;
	shf.r.wrap.b32 	%r28221, %r28218, %r28219, 28;
	mov.b64 	%rd15522, {%r28221, %r28220};
	shf.l.wrap.b32 	%r28222, %r28218, %r28219, 30;
	shf.l.wrap.b32 	%r28223, %r28219, %r28218, 30;
	mov.b64 	%rd15523, {%r28223, %r28222};
	xor.b64  	%rd15524, %rd15523, %rd15522;
	shf.l.wrap.b32 	%r28224, %r28218, %r28219, 25;
	shf.l.wrap.b32 	%r28225, %r28219, %r28218, 25;
	mov.b64 	%rd15525, {%r28225, %r28224};
	xor.b64  	%rd15526, %rd15524, %rd15525;
	and.b64  	%rd15527, %rd15508, %rd15484;
	xor.b64  	%rd15528, %rd15508, %rd15484;
	and.b64  	%rd15529, %rd15528, %rd15460;
	or.b64  	%rd15530, %rd15529, %rd15527;
	add.s64 	%rd15531, %rd15520, %rd15530;
	add.s64 	%rd15532, %rd15531, %rd15526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28226,%dummy}, %rd15521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28227}, %rd15521;
	}
	shf.r.wrap.b32 	%r28228, %r28227, %r28226, 14;
	shf.r.wrap.b32 	%r28229, %r28226, %r28227, 14;
	mov.b64 	%rd15533, {%r28229, %r28228};
	shf.r.wrap.b32 	%r28230, %r28227, %r28226, 18;
	shf.r.wrap.b32 	%r28231, %r28226, %r28227, 18;
	mov.b64 	%rd15534, {%r28231, %r28230};
	xor.b64  	%rd15535, %rd15534, %rd15533;
	shf.l.wrap.b32 	%r28232, %r28226, %r28227, 23;
	shf.l.wrap.b32 	%r28233, %r28227, %r28226, 23;
	mov.b64 	%rd15536, {%r28233, %r28232};
	xor.b64  	%rd15537, %rd15535, %rd15536;
	xor.b64  	%rd15538, %rd15497, %rd15473;
	and.b64  	%rd15539, %rd15521, %rd15538;
	xor.b64  	%rd15540, %rd15539, %rd15473;
	add.s64 	%rd15541, %rd15260, %rd67;
	add.s64 	%rd15542, %rd15541, %rd15449;
	add.s64 	%rd15543, %rd15542, %rd15540;
	add.s64 	%rd15544, %rd15543, %rd15537;
	add.s64 	%rd15545, %rd15544, %rd15460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28234,%dummy}, %rd15532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28235}, %rd15532;
	}
	shf.r.wrap.b32 	%r28236, %r28235, %r28234, 28;
	shf.r.wrap.b32 	%r28237, %r28234, %r28235, 28;
	mov.b64 	%rd15546, {%r28237, %r28236};
	shf.l.wrap.b32 	%r28238, %r28234, %r28235, 30;
	shf.l.wrap.b32 	%r28239, %r28235, %r28234, 30;
	mov.b64 	%rd15547, {%r28239, %r28238};
	xor.b64  	%rd15548, %rd15547, %rd15546;
	shf.l.wrap.b32 	%r28240, %r28234, %r28235, 25;
	shf.l.wrap.b32 	%r28241, %r28235, %r28234, 25;
	mov.b64 	%rd15549, {%r28241, %r28240};
	xor.b64  	%rd15550, %rd15548, %rd15549;
	and.b64  	%rd15551, %rd15532, %rd15508;
	xor.b64  	%rd15552, %rd15532, %rd15508;
	and.b64  	%rd15553, %rd15552, %rd15484;
	or.b64  	%rd15554, %rd15553, %rd15551;
	add.s64 	%rd15555, %rd15544, %rd15554;
	add.s64 	%rd15556, %rd15555, %rd15550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28242,%dummy}, %rd15545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28243}, %rd15545;
	}
	shf.r.wrap.b32 	%r28244, %r28243, %r28242, 14;
	shf.r.wrap.b32 	%r28245, %r28242, %r28243, 14;
	mov.b64 	%rd15557, {%r28245, %r28244};
	shf.r.wrap.b32 	%r28246, %r28243, %r28242, 18;
	shf.r.wrap.b32 	%r28247, %r28242, %r28243, 18;
	mov.b64 	%rd15558, {%r28247, %r28246};
	xor.b64  	%rd15559, %rd15558, %rd15557;
	shf.l.wrap.b32 	%r28248, %r28242, %r28243, 23;
	shf.l.wrap.b32 	%r28249, %r28243, %r28242, 23;
	mov.b64 	%rd15560, {%r28249, %r28248};
	xor.b64  	%rd15561, %rd15559, %rd15560;
	xor.b64  	%rd15562, %rd15521, %rd15497;
	and.b64  	%rd15563, %rd15545, %rd15562;
	xor.b64  	%rd15564, %rd15563, %rd15497;
	add.s64 	%rd15565, %rd15273, %rd68;
	add.s64 	%rd15566, %rd15565, %rd15473;
	add.s64 	%rd15567, %rd15566, %rd15564;
	add.s64 	%rd15568, %rd15567, %rd15561;
	add.s64 	%rd15569, %rd15568, %rd15484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28250,%dummy}, %rd15556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28251}, %rd15556;
	}
	shf.r.wrap.b32 	%r28252, %r28251, %r28250, 28;
	shf.r.wrap.b32 	%r28253, %r28250, %r28251, 28;
	mov.b64 	%rd15570, {%r28253, %r28252};
	shf.l.wrap.b32 	%r28254, %r28250, %r28251, 30;
	shf.l.wrap.b32 	%r28255, %r28251, %r28250, 30;
	mov.b64 	%rd15571, {%r28255, %r28254};
	xor.b64  	%rd15572, %rd15571, %rd15570;
	shf.l.wrap.b32 	%r28256, %r28250, %r28251, 25;
	shf.l.wrap.b32 	%r28257, %r28251, %r28250, 25;
	mov.b64 	%rd15573, {%r28257, %r28256};
	xor.b64  	%rd15574, %rd15572, %rd15573;
	and.b64  	%rd15575, %rd15556, %rd15532;
	xor.b64  	%rd15576, %rd15556, %rd15532;
	and.b64  	%rd15577, %rd15576, %rd15508;
	or.b64  	%rd15578, %rd15577, %rd15575;
	add.s64 	%rd15579, %rd15568, %rd15578;
	add.s64 	%rd15580, %rd15579, %rd15574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28258,%dummy}, %rd15569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28259}, %rd15569;
	}
	shf.r.wrap.b32 	%r28260, %r28259, %r28258, 14;
	shf.r.wrap.b32 	%r28261, %r28258, %r28259, 14;
	mov.b64 	%rd15581, {%r28261, %r28260};
	shf.r.wrap.b32 	%r28262, %r28259, %r28258, 18;
	shf.r.wrap.b32 	%r28263, %r28258, %r28259, 18;
	mov.b64 	%rd15582, {%r28263, %r28262};
	xor.b64  	%rd15583, %rd15582, %rd15581;
	shf.l.wrap.b32 	%r28264, %r28258, %r28259, 23;
	shf.l.wrap.b32 	%r28265, %r28259, %r28258, 23;
	mov.b64 	%rd15584, {%r28265, %r28264};
	xor.b64  	%rd15585, %rd15583, %rd15584;
	xor.b64  	%rd15586, %rd15545, %rd15521;
	and.b64  	%rd15587, %rd15569, %rd15586;
	xor.b64  	%rd15588, %rd15587, %rd15521;
	add.s64 	%rd15589, %rd15286, %rd69;
	add.s64 	%rd15590, %rd15589, %rd15497;
	add.s64 	%rd15591, %rd15590, %rd15588;
	add.s64 	%rd15592, %rd15591, %rd15585;
	add.s64 	%rd15593, %rd15592, %rd15508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28266,%dummy}, %rd15580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28267}, %rd15580;
	}
	shf.r.wrap.b32 	%r28268, %r28267, %r28266, 28;
	shf.r.wrap.b32 	%r28269, %r28266, %r28267, 28;
	mov.b64 	%rd15594, {%r28269, %r28268};
	shf.l.wrap.b32 	%r28270, %r28266, %r28267, 30;
	shf.l.wrap.b32 	%r28271, %r28267, %r28266, 30;
	mov.b64 	%rd15595, {%r28271, %r28270};
	xor.b64  	%rd15596, %rd15595, %rd15594;
	shf.l.wrap.b32 	%r28272, %r28266, %r28267, 25;
	shf.l.wrap.b32 	%r28273, %r28267, %r28266, 25;
	mov.b64 	%rd15597, {%r28273, %r28272};
	xor.b64  	%rd15598, %rd15596, %rd15597;
	and.b64  	%rd15599, %rd15580, %rd15556;
	xor.b64  	%rd15600, %rd15580, %rd15556;
	and.b64  	%rd15601, %rd15600, %rd15532;
	or.b64  	%rd15602, %rd15601, %rd15599;
	add.s64 	%rd15603, %rd15592, %rd15602;
	add.s64 	%rd15604, %rd15603, %rd15598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28274,%dummy}, %rd15593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28275}, %rd15593;
	}
	shf.r.wrap.b32 	%r28276, %r28275, %r28274, 14;
	shf.r.wrap.b32 	%r28277, %r28274, %r28275, 14;
	mov.b64 	%rd15605, {%r28277, %r28276};
	shf.r.wrap.b32 	%r28278, %r28275, %r28274, 18;
	shf.r.wrap.b32 	%r28279, %r28274, %r28275, 18;
	mov.b64 	%rd15606, {%r28279, %r28278};
	xor.b64  	%rd15607, %rd15606, %rd15605;
	shf.l.wrap.b32 	%r28280, %r28274, %r28275, 23;
	shf.l.wrap.b32 	%r28281, %r28275, %r28274, 23;
	mov.b64 	%rd15608, {%r28281, %r28280};
	xor.b64  	%rd15609, %rd15607, %rd15608;
	xor.b64  	%rd15610, %rd15569, %rd15545;
	and.b64  	%rd15611, %rd15593, %rd15610;
	xor.b64  	%rd15612, %rd15611, %rd15545;
	add.s64 	%rd15613, %rd15299, %rd70;
	add.s64 	%rd15614, %rd15613, %rd15521;
	add.s64 	%rd15615, %rd15614, %rd15612;
	add.s64 	%rd15616, %rd15615, %rd15609;
	add.s64 	%rd15617, %rd15616, %rd15532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28282,%dummy}, %rd15604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28283}, %rd15604;
	}
	shf.r.wrap.b32 	%r28284, %r28283, %r28282, 28;
	shf.r.wrap.b32 	%r28285, %r28282, %r28283, 28;
	mov.b64 	%rd15618, {%r28285, %r28284};
	shf.l.wrap.b32 	%r28286, %r28282, %r28283, 30;
	shf.l.wrap.b32 	%r28287, %r28283, %r28282, 30;
	mov.b64 	%rd15619, {%r28287, %r28286};
	xor.b64  	%rd15620, %rd15619, %rd15618;
	shf.l.wrap.b32 	%r28288, %r28282, %r28283, 25;
	shf.l.wrap.b32 	%r28289, %r28283, %r28282, 25;
	mov.b64 	%rd15621, {%r28289, %r28288};
	xor.b64  	%rd15622, %rd15620, %rd15621;
	and.b64  	%rd15623, %rd15604, %rd15580;
	xor.b64  	%rd15624, %rd15604, %rd15580;
	and.b64  	%rd15625, %rd15624, %rd15556;
	or.b64  	%rd15626, %rd15625, %rd15623;
	add.s64 	%rd15627, %rd15616, %rd15626;
	add.s64 	%rd15628, %rd15627, %rd15622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28290,%dummy}, %rd15617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28291}, %rd15617;
	}
	shf.r.wrap.b32 	%r28292, %r28291, %r28290, 14;
	shf.r.wrap.b32 	%r28293, %r28290, %r28291, 14;
	mov.b64 	%rd15629, {%r28293, %r28292};
	shf.r.wrap.b32 	%r28294, %r28291, %r28290, 18;
	shf.r.wrap.b32 	%r28295, %r28290, %r28291, 18;
	mov.b64 	%rd15630, {%r28295, %r28294};
	xor.b64  	%rd15631, %rd15630, %rd15629;
	shf.l.wrap.b32 	%r28296, %r28290, %r28291, 23;
	shf.l.wrap.b32 	%r28297, %r28291, %r28290, 23;
	mov.b64 	%rd15632, {%r28297, %r28296};
	xor.b64  	%rd15633, %rd15631, %rd15632;
	xor.b64  	%rd15634, %rd15593, %rd15569;
	and.b64  	%rd15635, %rd15617, %rd15634;
	xor.b64  	%rd15636, %rd15635, %rd15569;
	add.s64 	%rd15637, %rd15312, %rd71;
	add.s64 	%rd15638, %rd15637, %rd15545;
	add.s64 	%rd15639, %rd15638, %rd15636;
	add.s64 	%rd15640, %rd15639, %rd15633;
	add.s64 	%rd15641, %rd15640, %rd15556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28298,%dummy}, %rd15628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28299}, %rd15628;
	}
	shf.r.wrap.b32 	%r28300, %r28299, %r28298, 28;
	shf.r.wrap.b32 	%r28301, %r28298, %r28299, 28;
	mov.b64 	%rd15642, {%r28301, %r28300};
	shf.l.wrap.b32 	%r28302, %r28298, %r28299, 30;
	shf.l.wrap.b32 	%r28303, %r28299, %r28298, 30;
	mov.b64 	%rd15643, {%r28303, %r28302};
	xor.b64  	%rd15644, %rd15643, %rd15642;
	shf.l.wrap.b32 	%r28304, %r28298, %r28299, 25;
	shf.l.wrap.b32 	%r28305, %r28299, %r28298, 25;
	mov.b64 	%rd15645, {%r28305, %r28304};
	xor.b64  	%rd15646, %rd15644, %rd15645;
	and.b64  	%rd15647, %rd15628, %rd15604;
	xor.b64  	%rd15648, %rd15628, %rd15604;
	and.b64  	%rd15649, %rd15648, %rd15580;
	or.b64  	%rd15650, %rd15649, %rd15647;
	add.s64 	%rd15651, %rd15640, %rd15650;
	add.s64 	%rd15652, %rd15651, %rd15646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28306,%dummy}, %rd15641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28307}, %rd15641;
	}
	shf.r.wrap.b32 	%r28308, %r28307, %r28306, 14;
	shf.r.wrap.b32 	%r28309, %r28306, %r28307, 14;
	mov.b64 	%rd15653, {%r28309, %r28308};
	shf.r.wrap.b32 	%r28310, %r28307, %r28306, 18;
	shf.r.wrap.b32 	%r28311, %r28306, %r28307, 18;
	mov.b64 	%rd15654, {%r28311, %r28310};
	xor.b64  	%rd15655, %rd15654, %rd15653;
	shf.l.wrap.b32 	%r28312, %r28306, %r28307, 23;
	shf.l.wrap.b32 	%r28313, %r28307, %r28306, 23;
	mov.b64 	%rd15656, {%r28313, %r28312};
	xor.b64  	%rd15657, %rd15655, %rd15656;
	xor.b64  	%rd15658, %rd15617, %rd15593;
	and.b64  	%rd15659, %rd15641, %rd15658;
	xor.b64  	%rd15660, %rd15659, %rd15593;
	add.s64 	%rd15661, %rd15325, %rd72;
	add.s64 	%rd15662, %rd15661, %rd15569;
	add.s64 	%rd15663, %rd15662, %rd15660;
	add.s64 	%rd15664, %rd15663, %rd15657;
	add.s64 	%rd15665, %rd15664, %rd15580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28314,%dummy}, %rd15652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28315}, %rd15652;
	}
	shf.r.wrap.b32 	%r28316, %r28315, %r28314, 28;
	shf.r.wrap.b32 	%r28317, %r28314, %r28315, 28;
	mov.b64 	%rd15666, {%r28317, %r28316};
	shf.l.wrap.b32 	%r28318, %r28314, %r28315, 30;
	shf.l.wrap.b32 	%r28319, %r28315, %r28314, 30;
	mov.b64 	%rd15667, {%r28319, %r28318};
	xor.b64  	%rd15668, %rd15667, %rd15666;
	shf.l.wrap.b32 	%r28320, %r28314, %r28315, 25;
	shf.l.wrap.b32 	%r28321, %r28315, %r28314, 25;
	mov.b64 	%rd15669, {%r28321, %r28320};
	xor.b64  	%rd15670, %rd15668, %rd15669;
	and.b64  	%rd15671, %rd15652, %rd15628;
	xor.b64  	%rd15672, %rd15652, %rd15628;
	and.b64  	%rd15673, %rd15672, %rd15604;
	or.b64  	%rd15674, %rd15673, %rd15671;
	add.s64 	%rd15675, %rd15664, %rd15674;
	add.s64 	%rd15676, %rd15675, %rd15670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28322,%dummy}, %rd15665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28323}, %rd15665;
	}
	shf.r.wrap.b32 	%r28324, %r28323, %r28322, 14;
	shf.r.wrap.b32 	%r28325, %r28322, %r28323, 14;
	mov.b64 	%rd15677, {%r28325, %r28324};
	shf.r.wrap.b32 	%r28326, %r28323, %r28322, 18;
	shf.r.wrap.b32 	%r28327, %r28322, %r28323, 18;
	mov.b64 	%rd15678, {%r28327, %r28326};
	xor.b64  	%rd15679, %rd15678, %rd15677;
	shf.l.wrap.b32 	%r28328, %r28322, %r28323, 23;
	shf.l.wrap.b32 	%r28329, %r28323, %r28322, 23;
	mov.b64 	%rd15680, {%r28329, %r28328};
	xor.b64  	%rd15681, %rd15679, %rd15680;
	xor.b64  	%rd15682, %rd15641, %rd15617;
	and.b64  	%rd15683, %rd15665, %rd15682;
	xor.b64  	%rd15684, %rd15683, %rd15617;
	add.s64 	%rd15685, %rd15338, %rd73;
	add.s64 	%rd15686, %rd15685, %rd15593;
	add.s64 	%rd15687, %rd15686, %rd15684;
	add.s64 	%rd15688, %rd15687, %rd15681;
	add.s64 	%rd15689, %rd15688, %rd15604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28330,%dummy}, %rd15676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28331}, %rd15676;
	}
	shf.r.wrap.b32 	%r28332, %r28331, %r28330, 28;
	shf.r.wrap.b32 	%r28333, %r28330, %r28331, 28;
	mov.b64 	%rd15690, {%r28333, %r28332};
	shf.l.wrap.b32 	%r28334, %r28330, %r28331, 30;
	shf.l.wrap.b32 	%r28335, %r28331, %r28330, 30;
	mov.b64 	%rd15691, {%r28335, %r28334};
	xor.b64  	%rd15692, %rd15691, %rd15690;
	shf.l.wrap.b32 	%r28336, %r28330, %r28331, 25;
	shf.l.wrap.b32 	%r28337, %r28331, %r28330, 25;
	mov.b64 	%rd15693, {%r28337, %r28336};
	xor.b64  	%rd15694, %rd15692, %rd15693;
	and.b64  	%rd15695, %rd15676, %rd15652;
	xor.b64  	%rd15696, %rd15676, %rd15652;
	and.b64  	%rd15697, %rd15696, %rd15628;
	or.b64  	%rd15698, %rd15697, %rd15695;
	add.s64 	%rd15699, %rd15688, %rd15698;
	add.s64 	%rd15700, %rd15699, %rd15694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28338,%dummy}, %rd15689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28339}, %rd15689;
	}
	shf.r.wrap.b32 	%r28340, %r28339, %r28338, 14;
	shf.r.wrap.b32 	%r28341, %r28338, %r28339, 14;
	mov.b64 	%rd15701, {%r28341, %r28340};
	shf.r.wrap.b32 	%r28342, %r28339, %r28338, 18;
	shf.r.wrap.b32 	%r28343, %r28338, %r28339, 18;
	mov.b64 	%rd15702, {%r28343, %r28342};
	xor.b64  	%rd15703, %rd15702, %rd15701;
	shf.l.wrap.b32 	%r28344, %r28338, %r28339, 23;
	shf.l.wrap.b32 	%r28345, %r28339, %r28338, 23;
	mov.b64 	%rd15704, {%r28345, %r28344};
	xor.b64  	%rd15705, %rd15703, %rd15704;
	xor.b64  	%rd15706, %rd15665, %rd15641;
	and.b64  	%rd15707, %rd15689, %rd15706;
	xor.b64  	%rd15708, %rd15707, %rd15641;
	add.s64 	%rd15709, %rd15351, %rd74;
	add.s64 	%rd15710, %rd15709, %rd15617;
	add.s64 	%rd15711, %rd15710, %rd15708;
	add.s64 	%rd15712, %rd15711, %rd15705;
	add.s64 	%rd15713, %rd15712, %rd15628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28346,%dummy}, %rd15700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28347}, %rd15700;
	}
	shf.r.wrap.b32 	%r28348, %r28347, %r28346, 28;
	shf.r.wrap.b32 	%r28349, %r28346, %r28347, 28;
	mov.b64 	%rd15714, {%r28349, %r28348};
	shf.l.wrap.b32 	%r28350, %r28346, %r28347, 30;
	shf.l.wrap.b32 	%r28351, %r28347, %r28346, 30;
	mov.b64 	%rd15715, {%r28351, %r28350};
	xor.b64  	%rd15716, %rd15715, %rd15714;
	shf.l.wrap.b32 	%r28352, %r28346, %r28347, 25;
	shf.l.wrap.b32 	%r28353, %r28347, %r28346, 25;
	mov.b64 	%rd15717, {%r28353, %r28352};
	xor.b64  	%rd15718, %rd15716, %rd15717;
	and.b64  	%rd15719, %rd15700, %rd15676;
	xor.b64  	%rd15720, %rd15700, %rd15676;
	and.b64  	%rd15721, %rd15720, %rd15652;
	or.b64  	%rd15722, %rd15721, %rd15719;
	add.s64 	%rd15723, %rd15712, %rd15722;
	add.s64 	%rd15724, %rd15723, %rd15718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28354,%dummy}, %rd15713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28355}, %rd15713;
	}
	shf.r.wrap.b32 	%r28356, %r28355, %r28354, 14;
	shf.r.wrap.b32 	%r28357, %r28354, %r28355, 14;
	mov.b64 	%rd15725, {%r28357, %r28356};
	shf.r.wrap.b32 	%r28358, %r28355, %r28354, 18;
	shf.r.wrap.b32 	%r28359, %r28354, %r28355, 18;
	mov.b64 	%rd15726, {%r28359, %r28358};
	xor.b64  	%rd15727, %rd15726, %rd15725;
	shf.l.wrap.b32 	%r28360, %r28354, %r28355, 23;
	shf.l.wrap.b32 	%r28361, %r28355, %r28354, 23;
	mov.b64 	%rd15728, {%r28361, %r28360};
	xor.b64  	%rd15729, %rd15727, %rd15728;
	xor.b64  	%rd15730, %rd15689, %rd15665;
	and.b64  	%rd15731, %rd15713, %rd15730;
	xor.b64  	%rd15732, %rd15731, %rd15665;
	add.s64 	%rd15733, %rd15364, %rd75;
	add.s64 	%rd15734, %rd15733, %rd15641;
	add.s64 	%rd15735, %rd15734, %rd15732;
	add.s64 	%rd15736, %rd15735, %rd15729;
	add.s64 	%rd15737, %rd15736, %rd15652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28362,%dummy}, %rd15724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28363}, %rd15724;
	}
	shf.r.wrap.b32 	%r28364, %r28363, %r28362, 28;
	shf.r.wrap.b32 	%r28365, %r28362, %r28363, 28;
	mov.b64 	%rd15738, {%r28365, %r28364};
	shf.l.wrap.b32 	%r28366, %r28362, %r28363, 30;
	shf.l.wrap.b32 	%r28367, %r28363, %r28362, 30;
	mov.b64 	%rd15739, {%r28367, %r28366};
	xor.b64  	%rd15740, %rd15739, %rd15738;
	shf.l.wrap.b32 	%r28368, %r28362, %r28363, 25;
	shf.l.wrap.b32 	%r28369, %r28363, %r28362, 25;
	mov.b64 	%rd15741, {%r28369, %r28368};
	xor.b64  	%rd15742, %rd15740, %rd15741;
	and.b64  	%rd15743, %rd15724, %rd15700;
	xor.b64  	%rd15744, %rd15724, %rd15700;
	and.b64  	%rd15745, %rd15744, %rd15676;
	or.b64  	%rd15746, %rd15745, %rd15743;
	add.s64 	%rd15747, %rd15736, %rd15746;
	add.s64 	%rd15748, %rd15747, %rd15742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28370,%dummy}, %rd15351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28371}, %rd15351;
	}
	shf.r.wrap.b32 	%r28372, %r28371, %r28370, 19;
	shf.r.wrap.b32 	%r28373, %r28370, %r28371, 19;
	mov.b64 	%rd15749, {%r28373, %r28372};
	shf.l.wrap.b32 	%r28374, %r28370, %r28371, 3;
	shf.l.wrap.b32 	%r28375, %r28371, %r28370, 3;
	mov.b64 	%rd15750, {%r28375, %r28374};
	shr.u64 	%rd15751, %rd15351, 6;
	xor.b64  	%rd15752, %rd15749, %rd15751;
	xor.b64  	%rd15753, %rd15752, %rd15750;
	shf.r.wrap.b32 	%r28376, %r27985, %r27984, 1;
	shf.r.wrap.b32 	%r28377, %r27984, %r27985, 1;
	mov.b64 	%rd15754, {%r28377, %r28376};
	shf.r.wrap.b32 	%r28378, %r27985, %r27984, 8;
	shf.r.wrap.b32 	%r28379, %r27984, %r27985, 8;
	mov.b64 	%rd15755, {%r28379, %r28378};
	shr.u64 	%rd15756, %rd15182, 7;
	xor.b64  	%rd15757, %rd15754, %rd15756;
	xor.b64  	%rd15758, %rd15757, %rd15755;
	add.s64 	%rd15759, %rd15286, %rd15169;
	add.s64 	%rd15760, %rd15759, %rd15753;
	add.s64 	%rd15761, %rd15760, %rd15758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28380,%dummy}, %rd15364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28381}, %rd15364;
	}
	shf.r.wrap.b32 	%r28382, %r28381, %r28380, 19;
	shf.r.wrap.b32 	%r28383, %r28380, %r28381, 19;
	mov.b64 	%rd15762, {%r28383, %r28382};
	shf.l.wrap.b32 	%r28384, %r28380, %r28381, 3;
	shf.l.wrap.b32 	%r28385, %r28381, %r28380, 3;
	mov.b64 	%rd15763, {%r28385, %r28384};
	shr.u64 	%rd15764, %rd15364, 6;
	xor.b64  	%rd15765, %rd15762, %rd15764;
	xor.b64  	%rd15766, %rd15765, %rd15763;
	shf.r.wrap.b32 	%r28386, %r27995, %r27994, 1;
	shf.r.wrap.b32 	%r28387, %r27994, %r27995, 1;
	mov.b64 	%rd15767, {%r28387, %r28386};
	shf.r.wrap.b32 	%r28388, %r27995, %r27994, 8;
	shf.r.wrap.b32 	%r28389, %r27994, %r27995, 8;
	mov.b64 	%rd15768, {%r28389, %r28388};
	shr.u64 	%rd15769, %rd15195, 7;
	xor.b64  	%rd15770, %rd15767, %rd15769;
	xor.b64  	%rd15771, %rd15770, %rd15768;
	add.s64 	%rd15772, %rd15299, %rd15182;
	add.s64 	%rd15773, %rd15772, %rd15766;
	add.s64 	%rd15774, %rd15773, %rd15771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28390,%dummy}, %rd15761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28391}, %rd15761;
	}
	shf.r.wrap.b32 	%r28392, %r28391, %r28390, 19;
	shf.r.wrap.b32 	%r28393, %r28390, %r28391, 19;
	mov.b64 	%rd15775, {%r28393, %r28392};
	shf.l.wrap.b32 	%r28394, %r28390, %r28391, 3;
	shf.l.wrap.b32 	%r28395, %r28391, %r28390, 3;
	mov.b64 	%rd15776, {%r28395, %r28394};
	shr.u64 	%rd15777, %rd15761, 6;
	xor.b64  	%rd15778, %rd15775, %rd15777;
	xor.b64  	%rd15779, %rd15778, %rd15776;
	shf.r.wrap.b32 	%r28396, %r28005, %r28004, 1;
	shf.r.wrap.b32 	%r28397, %r28004, %r28005, 1;
	mov.b64 	%rd15780, {%r28397, %r28396};
	shf.r.wrap.b32 	%r28398, %r28005, %r28004, 8;
	shf.r.wrap.b32 	%r28399, %r28004, %r28005, 8;
	mov.b64 	%rd15781, {%r28399, %r28398};
	shr.u64 	%rd15782, %rd15208, 7;
	xor.b64  	%rd15783, %rd15780, %rd15782;
	xor.b64  	%rd15784, %rd15783, %rd15781;
	add.s64 	%rd15785, %rd15312, %rd15195;
	add.s64 	%rd15786, %rd15785, %rd15779;
	add.s64 	%rd15787, %rd15786, %rd15784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28400,%dummy}, %rd15774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28401}, %rd15774;
	}
	shf.r.wrap.b32 	%r28402, %r28401, %r28400, 19;
	shf.r.wrap.b32 	%r28403, %r28400, %r28401, 19;
	mov.b64 	%rd15788, {%r28403, %r28402};
	shf.l.wrap.b32 	%r28404, %r28400, %r28401, 3;
	shf.l.wrap.b32 	%r28405, %r28401, %r28400, 3;
	mov.b64 	%rd15789, {%r28405, %r28404};
	shr.u64 	%rd15790, %rd15774, 6;
	xor.b64  	%rd15791, %rd15788, %rd15790;
	xor.b64  	%rd15792, %rd15791, %rd15789;
	shf.r.wrap.b32 	%r28406, %r28015, %r28014, 1;
	shf.r.wrap.b32 	%r28407, %r28014, %r28015, 1;
	mov.b64 	%rd15793, {%r28407, %r28406};
	shf.r.wrap.b32 	%r28408, %r28015, %r28014, 8;
	shf.r.wrap.b32 	%r28409, %r28014, %r28015, 8;
	mov.b64 	%rd15794, {%r28409, %r28408};
	shr.u64 	%rd15795, %rd15221, 7;
	xor.b64  	%rd15796, %rd15793, %rd15795;
	xor.b64  	%rd15797, %rd15796, %rd15794;
	add.s64 	%rd15798, %rd15325, %rd15208;
	add.s64 	%rd15799, %rd15798, %rd15792;
	add.s64 	%rd15800, %rd15799, %rd15797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28410,%dummy}, %rd15787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28411}, %rd15787;
	}
	shf.r.wrap.b32 	%r28412, %r28411, %r28410, 19;
	shf.r.wrap.b32 	%r28413, %r28410, %r28411, 19;
	mov.b64 	%rd15801, {%r28413, %r28412};
	shf.l.wrap.b32 	%r28414, %r28410, %r28411, 3;
	shf.l.wrap.b32 	%r28415, %r28411, %r28410, 3;
	mov.b64 	%rd15802, {%r28415, %r28414};
	shr.u64 	%rd15803, %rd15787, 6;
	xor.b64  	%rd15804, %rd15801, %rd15803;
	xor.b64  	%rd15805, %rd15804, %rd15802;
	shf.r.wrap.b32 	%r28416, %r28025, %r28024, 1;
	shf.r.wrap.b32 	%r28417, %r28024, %r28025, 1;
	mov.b64 	%rd15806, {%r28417, %r28416};
	shf.r.wrap.b32 	%r28418, %r28025, %r28024, 8;
	shf.r.wrap.b32 	%r28419, %r28024, %r28025, 8;
	mov.b64 	%rd15807, {%r28419, %r28418};
	shr.u64 	%rd15808, %rd15234, 7;
	xor.b64  	%rd15809, %rd15806, %rd15808;
	xor.b64  	%rd15810, %rd15809, %rd15807;
	add.s64 	%rd15811, %rd15338, %rd15221;
	add.s64 	%rd15812, %rd15811, %rd15805;
	add.s64 	%rd15813, %rd15812, %rd15810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28420,%dummy}, %rd15800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28421}, %rd15800;
	}
	shf.r.wrap.b32 	%r28422, %r28421, %r28420, 19;
	shf.r.wrap.b32 	%r28423, %r28420, %r28421, 19;
	mov.b64 	%rd15814, {%r28423, %r28422};
	shf.l.wrap.b32 	%r28424, %r28420, %r28421, 3;
	shf.l.wrap.b32 	%r28425, %r28421, %r28420, 3;
	mov.b64 	%rd15815, {%r28425, %r28424};
	shr.u64 	%rd15816, %rd15800, 6;
	xor.b64  	%rd15817, %rd15814, %rd15816;
	xor.b64  	%rd15818, %rd15817, %rd15815;
	shf.r.wrap.b32 	%r28426, %r28035, %r28034, 1;
	shf.r.wrap.b32 	%r28427, %r28034, %r28035, 1;
	mov.b64 	%rd15819, {%r28427, %r28426};
	shf.r.wrap.b32 	%r28428, %r28035, %r28034, 8;
	shf.r.wrap.b32 	%r28429, %r28034, %r28035, 8;
	mov.b64 	%rd15820, {%r28429, %r28428};
	shr.u64 	%rd15821, %rd15247, 7;
	xor.b64  	%rd15822, %rd15819, %rd15821;
	xor.b64  	%rd15823, %rd15822, %rd15820;
	add.s64 	%rd15824, %rd15351, %rd15234;
	add.s64 	%rd15825, %rd15824, %rd15818;
	add.s64 	%rd15826, %rd15825, %rd15823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28430,%dummy}, %rd15813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28431}, %rd15813;
	}
	shf.r.wrap.b32 	%r28432, %r28431, %r28430, 19;
	shf.r.wrap.b32 	%r28433, %r28430, %r28431, 19;
	mov.b64 	%rd15827, {%r28433, %r28432};
	shf.l.wrap.b32 	%r28434, %r28430, %r28431, 3;
	shf.l.wrap.b32 	%r28435, %r28431, %r28430, 3;
	mov.b64 	%rd15828, {%r28435, %r28434};
	shr.u64 	%rd15829, %rd15813, 6;
	xor.b64  	%rd15830, %rd15827, %rd15829;
	xor.b64  	%rd15831, %rd15830, %rd15828;
	shf.r.wrap.b32 	%r28436, %r28045, %r28044, 1;
	shf.r.wrap.b32 	%r28437, %r28044, %r28045, 1;
	mov.b64 	%rd15832, {%r28437, %r28436};
	shf.r.wrap.b32 	%r28438, %r28045, %r28044, 8;
	shf.r.wrap.b32 	%r28439, %r28044, %r28045, 8;
	mov.b64 	%rd15833, {%r28439, %r28438};
	shr.u64 	%rd15834, %rd15260, 7;
	xor.b64  	%rd15835, %rd15832, %rd15834;
	xor.b64  	%rd15836, %rd15835, %rd15833;
	add.s64 	%rd15837, %rd15364, %rd15247;
	add.s64 	%rd15838, %rd15837, %rd15831;
	add.s64 	%rd15839, %rd15838, %rd15836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28440,%dummy}, %rd15826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28441}, %rd15826;
	}
	shf.r.wrap.b32 	%r28442, %r28441, %r28440, 19;
	shf.r.wrap.b32 	%r28443, %r28440, %r28441, 19;
	mov.b64 	%rd15840, {%r28443, %r28442};
	shf.l.wrap.b32 	%r28444, %r28440, %r28441, 3;
	shf.l.wrap.b32 	%r28445, %r28441, %r28440, 3;
	mov.b64 	%rd15841, {%r28445, %r28444};
	shr.u64 	%rd15842, %rd15826, 6;
	xor.b64  	%rd15843, %rd15840, %rd15842;
	xor.b64  	%rd15844, %rd15843, %rd15841;
	shf.r.wrap.b32 	%r28446, %r28055, %r28054, 1;
	shf.r.wrap.b32 	%r28447, %r28054, %r28055, 1;
	mov.b64 	%rd15845, {%r28447, %r28446};
	shf.r.wrap.b32 	%r28448, %r28055, %r28054, 8;
	shf.r.wrap.b32 	%r28449, %r28054, %r28055, 8;
	mov.b64 	%rd15846, {%r28449, %r28448};
	shr.u64 	%rd15847, %rd15273, 7;
	xor.b64  	%rd15848, %rd15845, %rd15847;
	xor.b64  	%rd15849, %rd15848, %rd15846;
	add.s64 	%rd15850, %rd15761, %rd15260;
	add.s64 	%rd15851, %rd15850, %rd15844;
	add.s64 	%rd15852, %rd15851, %rd15849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28450,%dummy}, %rd15839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28451}, %rd15839;
	}
	shf.r.wrap.b32 	%r28452, %r28451, %r28450, 19;
	shf.r.wrap.b32 	%r28453, %r28450, %r28451, 19;
	mov.b64 	%rd15853, {%r28453, %r28452};
	shf.l.wrap.b32 	%r28454, %r28450, %r28451, 3;
	shf.l.wrap.b32 	%r28455, %r28451, %r28450, 3;
	mov.b64 	%rd15854, {%r28455, %r28454};
	shr.u64 	%rd15855, %rd15839, 6;
	xor.b64  	%rd15856, %rd15853, %rd15855;
	xor.b64  	%rd15857, %rd15856, %rd15854;
	shf.r.wrap.b32 	%r28456, %r28065, %r28064, 1;
	shf.r.wrap.b32 	%r28457, %r28064, %r28065, 1;
	mov.b64 	%rd15858, {%r28457, %r28456};
	shf.r.wrap.b32 	%r28458, %r28065, %r28064, 8;
	shf.r.wrap.b32 	%r28459, %r28064, %r28065, 8;
	mov.b64 	%rd15859, {%r28459, %r28458};
	shr.u64 	%rd15860, %rd15286, 7;
	xor.b64  	%rd15861, %rd15858, %rd15860;
	xor.b64  	%rd15862, %rd15861, %rd15859;
	add.s64 	%rd15863, %rd15774, %rd15273;
	add.s64 	%rd15864, %rd15863, %rd15857;
	add.s64 	%rd15865, %rd15864, %rd15862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28460,%dummy}, %rd15852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28461}, %rd15852;
	}
	shf.r.wrap.b32 	%r28462, %r28461, %r28460, 19;
	shf.r.wrap.b32 	%r28463, %r28460, %r28461, 19;
	mov.b64 	%rd15866, {%r28463, %r28462};
	shf.l.wrap.b32 	%r28464, %r28460, %r28461, 3;
	shf.l.wrap.b32 	%r28465, %r28461, %r28460, 3;
	mov.b64 	%rd15867, {%r28465, %r28464};
	shr.u64 	%rd15868, %rd15852, 6;
	xor.b64  	%rd15869, %rd15866, %rd15868;
	xor.b64  	%rd15870, %rd15869, %rd15867;
	shf.r.wrap.b32 	%r28466, %r28075, %r28074, 1;
	shf.r.wrap.b32 	%r28467, %r28074, %r28075, 1;
	mov.b64 	%rd15871, {%r28467, %r28466};
	shf.r.wrap.b32 	%r28468, %r28075, %r28074, 8;
	shf.r.wrap.b32 	%r28469, %r28074, %r28075, 8;
	mov.b64 	%rd15872, {%r28469, %r28468};
	shr.u64 	%rd15873, %rd15299, 7;
	xor.b64  	%rd15874, %rd15871, %rd15873;
	xor.b64  	%rd15875, %rd15874, %rd15872;
	add.s64 	%rd15876, %rd15787, %rd15286;
	add.s64 	%rd15877, %rd15876, %rd15870;
	add.s64 	%rd15878, %rd15877, %rd15875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28470,%dummy}, %rd15865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28471}, %rd15865;
	}
	shf.r.wrap.b32 	%r28472, %r28471, %r28470, 19;
	shf.r.wrap.b32 	%r28473, %r28470, %r28471, 19;
	mov.b64 	%rd15879, {%r28473, %r28472};
	shf.l.wrap.b32 	%r28474, %r28470, %r28471, 3;
	shf.l.wrap.b32 	%r28475, %r28471, %r28470, 3;
	mov.b64 	%rd15880, {%r28475, %r28474};
	shr.u64 	%rd15881, %rd15865, 6;
	xor.b64  	%rd15882, %rd15879, %rd15881;
	xor.b64  	%rd15883, %rd15882, %rd15880;
	shf.r.wrap.b32 	%r28476, %r28085, %r28084, 1;
	shf.r.wrap.b32 	%r28477, %r28084, %r28085, 1;
	mov.b64 	%rd15884, {%r28477, %r28476};
	shf.r.wrap.b32 	%r28478, %r28085, %r28084, 8;
	shf.r.wrap.b32 	%r28479, %r28084, %r28085, 8;
	mov.b64 	%rd15885, {%r28479, %r28478};
	shr.u64 	%rd15886, %rd15312, 7;
	xor.b64  	%rd15887, %rd15884, %rd15886;
	xor.b64  	%rd15888, %rd15887, %rd15885;
	add.s64 	%rd15889, %rd15800, %rd15299;
	add.s64 	%rd15890, %rd15889, %rd15883;
	add.s64 	%rd15891, %rd15890, %rd15888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28480,%dummy}, %rd15878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28481}, %rd15878;
	}
	shf.r.wrap.b32 	%r28482, %r28481, %r28480, 19;
	shf.r.wrap.b32 	%r28483, %r28480, %r28481, 19;
	mov.b64 	%rd15892, {%r28483, %r28482};
	shf.l.wrap.b32 	%r28484, %r28480, %r28481, 3;
	shf.l.wrap.b32 	%r28485, %r28481, %r28480, 3;
	mov.b64 	%rd15893, {%r28485, %r28484};
	shr.u64 	%rd15894, %rd15878, 6;
	xor.b64  	%rd15895, %rd15892, %rd15894;
	xor.b64  	%rd15896, %rd15895, %rd15893;
	shf.r.wrap.b32 	%r28486, %r28095, %r28094, 1;
	shf.r.wrap.b32 	%r28487, %r28094, %r28095, 1;
	mov.b64 	%rd15897, {%r28487, %r28486};
	shf.r.wrap.b32 	%r28488, %r28095, %r28094, 8;
	shf.r.wrap.b32 	%r28489, %r28094, %r28095, 8;
	mov.b64 	%rd15898, {%r28489, %r28488};
	shr.u64 	%rd15899, %rd15325, 7;
	xor.b64  	%rd15900, %rd15897, %rd15899;
	xor.b64  	%rd15901, %rd15900, %rd15898;
	add.s64 	%rd15902, %rd15813, %rd15312;
	add.s64 	%rd15903, %rd15902, %rd15896;
	add.s64 	%rd15904, %rd15903, %rd15901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28490,%dummy}, %rd15891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28491}, %rd15891;
	}
	shf.r.wrap.b32 	%r28492, %r28491, %r28490, 19;
	shf.r.wrap.b32 	%r28493, %r28490, %r28491, 19;
	mov.b64 	%rd15905, {%r28493, %r28492};
	shf.l.wrap.b32 	%r28494, %r28490, %r28491, 3;
	shf.l.wrap.b32 	%r28495, %r28491, %r28490, 3;
	mov.b64 	%rd15906, {%r28495, %r28494};
	shr.u64 	%rd15907, %rd15891, 6;
	xor.b64  	%rd15908, %rd15905, %rd15907;
	xor.b64  	%rd15909, %rd15908, %rd15906;
	shf.r.wrap.b32 	%r28496, %r28105, %r28104, 1;
	shf.r.wrap.b32 	%r28497, %r28104, %r28105, 1;
	mov.b64 	%rd15910, {%r28497, %r28496};
	shf.r.wrap.b32 	%r28498, %r28105, %r28104, 8;
	shf.r.wrap.b32 	%r28499, %r28104, %r28105, 8;
	mov.b64 	%rd15911, {%r28499, %r28498};
	shr.u64 	%rd15912, %rd15338, 7;
	xor.b64  	%rd15913, %rd15910, %rd15912;
	xor.b64  	%rd15914, %rd15913, %rd15911;
	add.s64 	%rd15915, %rd15826, %rd15325;
	add.s64 	%rd15916, %rd15915, %rd15909;
	add.s64 	%rd15917, %rd15916, %rd15914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28500,%dummy}, %rd15904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28501}, %rd15904;
	}
	shf.r.wrap.b32 	%r28502, %r28501, %r28500, 19;
	shf.r.wrap.b32 	%r28503, %r28500, %r28501, 19;
	mov.b64 	%rd15918, {%r28503, %r28502};
	shf.l.wrap.b32 	%r28504, %r28500, %r28501, 3;
	shf.l.wrap.b32 	%r28505, %r28501, %r28500, 3;
	mov.b64 	%rd15919, {%r28505, %r28504};
	shr.u64 	%rd15920, %rd15904, 6;
	xor.b64  	%rd15921, %rd15918, %rd15920;
	xor.b64  	%rd15922, %rd15921, %rd15919;
	shf.r.wrap.b32 	%r28506, %r28371, %r28370, 1;
	shf.r.wrap.b32 	%r28507, %r28370, %r28371, 1;
	mov.b64 	%rd15923, {%r28507, %r28506};
	shf.r.wrap.b32 	%r28508, %r28371, %r28370, 8;
	shf.r.wrap.b32 	%r28509, %r28370, %r28371, 8;
	mov.b64 	%rd15924, {%r28509, %r28508};
	shr.u64 	%rd15925, %rd15351, 7;
	xor.b64  	%rd15926, %rd15923, %rd15925;
	xor.b64  	%rd15927, %rd15926, %rd15924;
	add.s64 	%rd15928, %rd15839, %rd15338;
	add.s64 	%rd15929, %rd15928, %rd15922;
	add.s64 	%rd15930, %rd15929, %rd15927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28510,%dummy}, %rd15917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28511}, %rd15917;
	}
	shf.r.wrap.b32 	%r28512, %r28511, %r28510, 19;
	shf.r.wrap.b32 	%r28513, %r28510, %r28511, 19;
	mov.b64 	%rd15931, {%r28513, %r28512};
	shf.l.wrap.b32 	%r28514, %r28510, %r28511, 3;
	shf.l.wrap.b32 	%r28515, %r28511, %r28510, 3;
	mov.b64 	%rd15932, {%r28515, %r28514};
	shr.u64 	%rd15933, %rd15917, 6;
	xor.b64  	%rd15934, %rd15931, %rd15933;
	xor.b64  	%rd15935, %rd15934, %rd15932;
	shf.r.wrap.b32 	%r28516, %r28381, %r28380, 1;
	shf.r.wrap.b32 	%r28517, %r28380, %r28381, 1;
	mov.b64 	%rd15936, {%r28517, %r28516};
	shf.r.wrap.b32 	%r28518, %r28381, %r28380, 8;
	shf.r.wrap.b32 	%r28519, %r28380, %r28381, 8;
	mov.b64 	%rd15937, {%r28519, %r28518};
	shr.u64 	%rd15938, %rd15364, 7;
	xor.b64  	%rd15939, %rd15936, %rd15938;
	xor.b64  	%rd15940, %rd15939, %rd15937;
	add.s64 	%rd15941, %rd15852, %rd15351;
	add.s64 	%rd15942, %rd15941, %rd15935;
	add.s64 	%rd15943, %rd15942, %rd15940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28520,%dummy}, %rd15930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28521}, %rd15930;
	}
	shf.r.wrap.b32 	%r28522, %r28521, %r28520, 19;
	shf.r.wrap.b32 	%r28523, %r28520, %r28521, 19;
	mov.b64 	%rd15944, {%r28523, %r28522};
	shf.l.wrap.b32 	%r28524, %r28520, %r28521, 3;
	shf.l.wrap.b32 	%r28525, %r28521, %r28520, 3;
	mov.b64 	%rd15945, {%r28525, %r28524};
	shr.u64 	%rd15946, %rd15930, 6;
	xor.b64  	%rd15947, %rd15944, %rd15946;
	xor.b64  	%rd15948, %rd15947, %rd15945;
	shf.r.wrap.b32 	%r28526, %r28391, %r28390, 1;
	shf.r.wrap.b32 	%r28527, %r28390, %r28391, 1;
	mov.b64 	%rd15949, {%r28527, %r28526};
	shf.r.wrap.b32 	%r28528, %r28391, %r28390, 8;
	shf.r.wrap.b32 	%r28529, %r28390, %r28391, 8;
	mov.b64 	%rd15950, {%r28529, %r28528};
	shr.u64 	%rd15951, %rd15761, 7;
	xor.b64  	%rd15952, %rd15949, %rd15951;
	xor.b64  	%rd15953, %rd15952, %rd15950;
	add.s64 	%rd15954, %rd15865, %rd15364;
	add.s64 	%rd15955, %rd15954, %rd15948;
	add.s64 	%rd15956, %rd15955, %rd15953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28530,%dummy}, %rd15737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28531}, %rd15737;
	}
	shf.r.wrap.b32 	%r28532, %r28531, %r28530, 14;
	shf.r.wrap.b32 	%r28533, %r28530, %r28531, 14;
	mov.b64 	%rd15957, {%r28533, %r28532};
	shf.r.wrap.b32 	%r28534, %r28531, %r28530, 18;
	shf.r.wrap.b32 	%r28535, %r28530, %r28531, 18;
	mov.b64 	%rd15958, {%r28535, %r28534};
	xor.b64  	%rd15959, %rd15958, %rd15957;
	shf.l.wrap.b32 	%r28536, %r28530, %r28531, 23;
	shf.l.wrap.b32 	%r28537, %r28531, %r28530, 23;
	mov.b64 	%rd15960, {%r28537, %r28536};
	xor.b64  	%rd15961, %rd15959, %rd15960;
	xor.b64  	%rd15962, %rd15713, %rd15689;
	and.b64  	%rd15963, %rd15737, %rd15962;
	xor.b64  	%rd15964, %rd15963, %rd15689;
	add.s64 	%rd15965, %rd15665, %rd76;
	add.s64 	%rd15966, %rd15965, %rd15964;
	add.s64 	%rd15967, %rd15966, %rd15761;
	add.s64 	%rd15968, %rd15967, %rd15961;
	add.s64 	%rd15969, %rd15968, %rd15676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28538,%dummy}, %rd15748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28539}, %rd15748;
	}
	shf.r.wrap.b32 	%r28540, %r28539, %r28538, 28;
	shf.r.wrap.b32 	%r28541, %r28538, %r28539, 28;
	mov.b64 	%rd15970, {%r28541, %r28540};
	shf.l.wrap.b32 	%r28542, %r28538, %r28539, 30;
	shf.l.wrap.b32 	%r28543, %r28539, %r28538, 30;
	mov.b64 	%rd15971, {%r28543, %r28542};
	xor.b64  	%rd15972, %rd15971, %rd15970;
	shf.l.wrap.b32 	%r28544, %r28538, %r28539, 25;
	shf.l.wrap.b32 	%r28545, %r28539, %r28538, 25;
	mov.b64 	%rd15973, {%r28545, %r28544};
	xor.b64  	%rd15974, %rd15972, %rd15973;
	and.b64  	%rd15975, %rd15748, %rd15724;
	xor.b64  	%rd15976, %rd15748, %rd15724;
	and.b64  	%rd15977, %rd15976, %rd15700;
	or.b64  	%rd15978, %rd15977, %rd15975;
	add.s64 	%rd15979, %rd15968, %rd15978;
	add.s64 	%rd15980, %rd15979, %rd15974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28546,%dummy}, %rd15969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28547}, %rd15969;
	}
	shf.r.wrap.b32 	%r28548, %r28547, %r28546, 14;
	shf.r.wrap.b32 	%r28549, %r28546, %r28547, 14;
	mov.b64 	%rd15981, {%r28549, %r28548};
	shf.r.wrap.b32 	%r28550, %r28547, %r28546, 18;
	shf.r.wrap.b32 	%r28551, %r28546, %r28547, 18;
	mov.b64 	%rd15982, {%r28551, %r28550};
	xor.b64  	%rd15983, %rd15982, %rd15981;
	shf.l.wrap.b32 	%r28552, %r28546, %r28547, 23;
	shf.l.wrap.b32 	%r28553, %r28547, %r28546, 23;
	mov.b64 	%rd15984, {%r28553, %r28552};
	xor.b64  	%rd15985, %rd15983, %rd15984;
	xor.b64  	%rd15986, %rd15737, %rd15713;
	and.b64  	%rd15987, %rd15969, %rd15986;
	xor.b64  	%rd15988, %rd15987, %rd15713;
	add.s64 	%rd15989, %rd15689, %rd77;
	add.s64 	%rd15990, %rd15989, %rd15774;
	add.s64 	%rd15991, %rd15990, %rd15988;
	add.s64 	%rd15992, %rd15991, %rd15985;
	add.s64 	%rd15993, %rd15992, %rd15700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28554,%dummy}, %rd15980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28555}, %rd15980;
	}
	shf.r.wrap.b32 	%r28556, %r28555, %r28554, 28;
	shf.r.wrap.b32 	%r28557, %r28554, %r28555, 28;
	mov.b64 	%rd15994, {%r28557, %r28556};
	shf.l.wrap.b32 	%r28558, %r28554, %r28555, 30;
	shf.l.wrap.b32 	%r28559, %r28555, %r28554, 30;
	mov.b64 	%rd15995, {%r28559, %r28558};
	xor.b64  	%rd15996, %rd15995, %rd15994;
	shf.l.wrap.b32 	%r28560, %r28554, %r28555, 25;
	shf.l.wrap.b32 	%r28561, %r28555, %r28554, 25;
	mov.b64 	%rd15997, {%r28561, %r28560};
	xor.b64  	%rd15998, %rd15996, %rd15997;
	and.b64  	%rd15999, %rd15980, %rd15748;
	xor.b64  	%rd16000, %rd15980, %rd15748;
	and.b64  	%rd16001, %rd16000, %rd15724;
	or.b64  	%rd16002, %rd16001, %rd15999;
	add.s64 	%rd16003, %rd15992, %rd16002;
	add.s64 	%rd16004, %rd16003, %rd15998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28562,%dummy}, %rd15993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28563}, %rd15993;
	}
	shf.r.wrap.b32 	%r28564, %r28563, %r28562, 14;
	shf.r.wrap.b32 	%r28565, %r28562, %r28563, 14;
	mov.b64 	%rd16005, {%r28565, %r28564};
	shf.r.wrap.b32 	%r28566, %r28563, %r28562, 18;
	shf.r.wrap.b32 	%r28567, %r28562, %r28563, 18;
	mov.b64 	%rd16006, {%r28567, %r28566};
	xor.b64  	%rd16007, %rd16006, %rd16005;
	shf.l.wrap.b32 	%r28568, %r28562, %r28563, 23;
	shf.l.wrap.b32 	%r28569, %r28563, %r28562, 23;
	mov.b64 	%rd16008, {%r28569, %r28568};
	xor.b64  	%rd16009, %rd16007, %rd16008;
	xor.b64  	%rd16010, %rd15969, %rd15737;
	and.b64  	%rd16011, %rd15993, %rd16010;
	xor.b64  	%rd16012, %rd16011, %rd15737;
	add.s64 	%rd16013, %rd15713, %rd78;
	add.s64 	%rd16014, %rd16013, %rd15787;
	add.s64 	%rd16015, %rd16014, %rd16012;
	add.s64 	%rd16016, %rd16015, %rd16009;
	add.s64 	%rd16017, %rd16016, %rd15724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28570,%dummy}, %rd16004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28571}, %rd16004;
	}
	shf.r.wrap.b32 	%r28572, %r28571, %r28570, 28;
	shf.r.wrap.b32 	%r28573, %r28570, %r28571, 28;
	mov.b64 	%rd16018, {%r28573, %r28572};
	shf.l.wrap.b32 	%r28574, %r28570, %r28571, 30;
	shf.l.wrap.b32 	%r28575, %r28571, %r28570, 30;
	mov.b64 	%rd16019, {%r28575, %r28574};
	xor.b64  	%rd16020, %rd16019, %rd16018;
	shf.l.wrap.b32 	%r28576, %r28570, %r28571, 25;
	shf.l.wrap.b32 	%r28577, %r28571, %r28570, 25;
	mov.b64 	%rd16021, {%r28577, %r28576};
	xor.b64  	%rd16022, %rd16020, %rd16021;
	and.b64  	%rd16023, %rd16004, %rd15980;
	xor.b64  	%rd16024, %rd16004, %rd15980;
	and.b64  	%rd16025, %rd16024, %rd15748;
	or.b64  	%rd16026, %rd16025, %rd16023;
	add.s64 	%rd16027, %rd16016, %rd16026;
	add.s64 	%rd16028, %rd16027, %rd16022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28578,%dummy}, %rd16017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28579}, %rd16017;
	}
	shf.r.wrap.b32 	%r28580, %r28579, %r28578, 14;
	shf.r.wrap.b32 	%r28581, %r28578, %r28579, 14;
	mov.b64 	%rd16029, {%r28581, %r28580};
	shf.r.wrap.b32 	%r28582, %r28579, %r28578, 18;
	shf.r.wrap.b32 	%r28583, %r28578, %r28579, 18;
	mov.b64 	%rd16030, {%r28583, %r28582};
	xor.b64  	%rd16031, %rd16030, %rd16029;
	shf.l.wrap.b32 	%r28584, %r28578, %r28579, 23;
	shf.l.wrap.b32 	%r28585, %r28579, %r28578, 23;
	mov.b64 	%rd16032, {%r28585, %r28584};
	xor.b64  	%rd16033, %rd16031, %rd16032;
	xor.b64  	%rd16034, %rd15993, %rd15969;
	and.b64  	%rd16035, %rd16017, %rd16034;
	xor.b64  	%rd16036, %rd16035, %rd15969;
	add.s64 	%rd16037, %rd15737, %rd79;
	add.s64 	%rd16038, %rd16037, %rd15800;
	add.s64 	%rd16039, %rd16038, %rd16036;
	add.s64 	%rd16040, %rd16039, %rd16033;
	add.s64 	%rd16041, %rd16040, %rd15748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28586,%dummy}, %rd16028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28587}, %rd16028;
	}
	shf.r.wrap.b32 	%r28588, %r28587, %r28586, 28;
	shf.r.wrap.b32 	%r28589, %r28586, %r28587, 28;
	mov.b64 	%rd16042, {%r28589, %r28588};
	shf.l.wrap.b32 	%r28590, %r28586, %r28587, 30;
	shf.l.wrap.b32 	%r28591, %r28587, %r28586, 30;
	mov.b64 	%rd16043, {%r28591, %r28590};
	xor.b64  	%rd16044, %rd16043, %rd16042;
	shf.l.wrap.b32 	%r28592, %r28586, %r28587, 25;
	shf.l.wrap.b32 	%r28593, %r28587, %r28586, 25;
	mov.b64 	%rd16045, {%r28593, %r28592};
	xor.b64  	%rd16046, %rd16044, %rd16045;
	and.b64  	%rd16047, %rd16028, %rd16004;
	xor.b64  	%rd16048, %rd16028, %rd16004;
	and.b64  	%rd16049, %rd16048, %rd15980;
	or.b64  	%rd16050, %rd16049, %rd16047;
	add.s64 	%rd16051, %rd16040, %rd16050;
	add.s64 	%rd16052, %rd16051, %rd16046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28594,%dummy}, %rd16041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28595}, %rd16041;
	}
	shf.r.wrap.b32 	%r28596, %r28595, %r28594, 14;
	shf.r.wrap.b32 	%r28597, %r28594, %r28595, 14;
	mov.b64 	%rd16053, {%r28597, %r28596};
	shf.r.wrap.b32 	%r28598, %r28595, %r28594, 18;
	shf.r.wrap.b32 	%r28599, %r28594, %r28595, 18;
	mov.b64 	%rd16054, {%r28599, %r28598};
	xor.b64  	%rd16055, %rd16054, %rd16053;
	shf.l.wrap.b32 	%r28600, %r28594, %r28595, 23;
	shf.l.wrap.b32 	%r28601, %r28595, %r28594, 23;
	mov.b64 	%rd16056, {%r28601, %r28600};
	xor.b64  	%rd16057, %rd16055, %rd16056;
	xor.b64  	%rd16058, %rd16017, %rd15993;
	and.b64  	%rd16059, %rd16041, %rd16058;
	xor.b64  	%rd16060, %rd16059, %rd15993;
	add.s64 	%rd16061, %rd15813, %rd80;
	add.s64 	%rd16062, %rd16061, %rd15969;
	add.s64 	%rd16063, %rd16062, %rd16060;
	add.s64 	%rd16064, %rd16063, %rd16057;
	add.s64 	%rd16065, %rd16064, %rd15980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28602,%dummy}, %rd16052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28603}, %rd16052;
	}
	shf.r.wrap.b32 	%r28604, %r28603, %r28602, 28;
	shf.r.wrap.b32 	%r28605, %r28602, %r28603, 28;
	mov.b64 	%rd16066, {%r28605, %r28604};
	shf.l.wrap.b32 	%r28606, %r28602, %r28603, 30;
	shf.l.wrap.b32 	%r28607, %r28603, %r28602, 30;
	mov.b64 	%rd16067, {%r28607, %r28606};
	xor.b64  	%rd16068, %rd16067, %rd16066;
	shf.l.wrap.b32 	%r28608, %r28602, %r28603, 25;
	shf.l.wrap.b32 	%r28609, %r28603, %r28602, 25;
	mov.b64 	%rd16069, {%r28609, %r28608};
	xor.b64  	%rd16070, %rd16068, %rd16069;
	and.b64  	%rd16071, %rd16052, %rd16028;
	xor.b64  	%rd16072, %rd16052, %rd16028;
	and.b64  	%rd16073, %rd16072, %rd16004;
	or.b64  	%rd16074, %rd16073, %rd16071;
	add.s64 	%rd16075, %rd16064, %rd16074;
	add.s64 	%rd16076, %rd16075, %rd16070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28610,%dummy}, %rd16065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28611}, %rd16065;
	}
	shf.r.wrap.b32 	%r28612, %r28611, %r28610, 14;
	shf.r.wrap.b32 	%r28613, %r28610, %r28611, 14;
	mov.b64 	%rd16077, {%r28613, %r28612};
	shf.r.wrap.b32 	%r28614, %r28611, %r28610, 18;
	shf.r.wrap.b32 	%r28615, %r28610, %r28611, 18;
	mov.b64 	%rd16078, {%r28615, %r28614};
	xor.b64  	%rd16079, %rd16078, %rd16077;
	shf.l.wrap.b32 	%r28616, %r28610, %r28611, 23;
	shf.l.wrap.b32 	%r28617, %r28611, %r28610, 23;
	mov.b64 	%rd16080, {%r28617, %r28616};
	xor.b64  	%rd16081, %rd16079, %rd16080;
	xor.b64  	%rd16082, %rd16041, %rd16017;
	and.b64  	%rd16083, %rd16065, %rd16082;
	xor.b64  	%rd16084, %rd16083, %rd16017;
	add.s64 	%rd16085, %rd15826, %rd81;
	add.s64 	%rd16086, %rd16085, %rd15993;
	add.s64 	%rd16087, %rd16086, %rd16084;
	add.s64 	%rd16088, %rd16087, %rd16081;
	add.s64 	%rd16089, %rd16088, %rd16004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28618,%dummy}, %rd16076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28619}, %rd16076;
	}
	shf.r.wrap.b32 	%r28620, %r28619, %r28618, 28;
	shf.r.wrap.b32 	%r28621, %r28618, %r28619, 28;
	mov.b64 	%rd16090, {%r28621, %r28620};
	shf.l.wrap.b32 	%r28622, %r28618, %r28619, 30;
	shf.l.wrap.b32 	%r28623, %r28619, %r28618, 30;
	mov.b64 	%rd16091, {%r28623, %r28622};
	xor.b64  	%rd16092, %rd16091, %rd16090;
	shf.l.wrap.b32 	%r28624, %r28618, %r28619, 25;
	shf.l.wrap.b32 	%r28625, %r28619, %r28618, 25;
	mov.b64 	%rd16093, {%r28625, %r28624};
	xor.b64  	%rd16094, %rd16092, %rd16093;
	and.b64  	%rd16095, %rd16076, %rd16052;
	xor.b64  	%rd16096, %rd16076, %rd16052;
	and.b64  	%rd16097, %rd16096, %rd16028;
	or.b64  	%rd16098, %rd16097, %rd16095;
	add.s64 	%rd16099, %rd16088, %rd16098;
	add.s64 	%rd16100, %rd16099, %rd16094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28626,%dummy}, %rd16089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28627}, %rd16089;
	}
	shf.r.wrap.b32 	%r28628, %r28627, %r28626, 14;
	shf.r.wrap.b32 	%r28629, %r28626, %r28627, 14;
	mov.b64 	%rd16101, {%r28629, %r28628};
	shf.r.wrap.b32 	%r28630, %r28627, %r28626, 18;
	shf.r.wrap.b32 	%r28631, %r28626, %r28627, 18;
	mov.b64 	%rd16102, {%r28631, %r28630};
	xor.b64  	%rd16103, %rd16102, %rd16101;
	shf.l.wrap.b32 	%r28632, %r28626, %r28627, 23;
	shf.l.wrap.b32 	%r28633, %r28627, %r28626, 23;
	mov.b64 	%rd16104, {%r28633, %r28632};
	xor.b64  	%rd16105, %rd16103, %rd16104;
	xor.b64  	%rd16106, %rd16065, %rd16041;
	and.b64  	%rd16107, %rd16089, %rd16106;
	xor.b64  	%rd16108, %rd16107, %rd16041;
	add.s64 	%rd16109, %rd15839, %rd82;
	add.s64 	%rd16110, %rd16109, %rd16017;
	add.s64 	%rd16111, %rd16110, %rd16108;
	add.s64 	%rd16112, %rd16111, %rd16105;
	add.s64 	%rd16113, %rd16112, %rd16028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28634,%dummy}, %rd16100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28635}, %rd16100;
	}
	shf.r.wrap.b32 	%r28636, %r28635, %r28634, 28;
	shf.r.wrap.b32 	%r28637, %r28634, %r28635, 28;
	mov.b64 	%rd16114, {%r28637, %r28636};
	shf.l.wrap.b32 	%r28638, %r28634, %r28635, 30;
	shf.l.wrap.b32 	%r28639, %r28635, %r28634, 30;
	mov.b64 	%rd16115, {%r28639, %r28638};
	xor.b64  	%rd16116, %rd16115, %rd16114;
	shf.l.wrap.b32 	%r28640, %r28634, %r28635, 25;
	shf.l.wrap.b32 	%r28641, %r28635, %r28634, 25;
	mov.b64 	%rd16117, {%r28641, %r28640};
	xor.b64  	%rd16118, %rd16116, %rd16117;
	and.b64  	%rd16119, %rd16100, %rd16076;
	xor.b64  	%rd16120, %rd16100, %rd16076;
	and.b64  	%rd16121, %rd16120, %rd16052;
	or.b64  	%rd16122, %rd16121, %rd16119;
	add.s64 	%rd16123, %rd16112, %rd16122;
	add.s64 	%rd16124, %rd16123, %rd16118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28642,%dummy}, %rd16113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28643}, %rd16113;
	}
	shf.r.wrap.b32 	%r28644, %r28643, %r28642, 14;
	shf.r.wrap.b32 	%r28645, %r28642, %r28643, 14;
	mov.b64 	%rd16125, {%r28645, %r28644};
	shf.r.wrap.b32 	%r28646, %r28643, %r28642, 18;
	shf.r.wrap.b32 	%r28647, %r28642, %r28643, 18;
	mov.b64 	%rd16126, {%r28647, %r28646};
	xor.b64  	%rd16127, %rd16126, %rd16125;
	shf.l.wrap.b32 	%r28648, %r28642, %r28643, 23;
	shf.l.wrap.b32 	%r28649, %r28643, %r28642, 23;
	mov.b64 	%rd16128, {%r28649, %r28648};
	xor.b64  	%rd16129, %rd16127, %rd16128;
	xor.b64  	%rd16130, %rd16089, %rd16065;
	and.b64  	%rd16131, %rd16113, %rd16130;
	xor.b64  	%rd16132, %rd16131, %rd16065;
	add.s64 	%rd16133, %rd15852, %rd83;
	add.s64 	%rd16134, %rd16133, %rd16041;
	add.s64 	%rd16135, %rd16134, %rd16132;
	add.s64 	%rd16136, %rd16135, %rd16129;
	add.s64 	%rd16137, %rd16136, %rd16052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28650,%dummy}, %rd16124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28651}, %rd16124;
	}
	shf.r.wrap.b32 	%r28652, %r28651, %r28650, 28;
	shf.r.wrap.b32 	%r28653, %r28650, %r28651, 28;
	mov.b64 	%rd16138, {%r28653, %r28652};
	shf.l.wrap.b32 	%r28654, %r28650, %r28651, 30;
	shf.l.wrap.b32 	%r28655, %r28651, %r28650, 30;
	mov.b64 	%rd16139, {%r28655, %r28654};
	xor.b64  	%rd16140, %rd16139, %rd16138;
	shf.l.wrap.b32 	%r28656, %r28650, %r28651, 25;
	shf.l.wrap.b32 	%r28657, %r28651, %r28650, 25;
	mov.b64 	%rd16141, {%r28657, %r28656};
	xor.b64  	%rd16142, %rd16140, %rd16141;
	and.b64  	%rd16143, %rd16124, %rd16100;
	xor.b64  	%rd16144, %rd16124, %rd16100;
	and.b64  	%rd16145, %rd16144, %rd16076;
	or.b64  	%rd16146, %rd16145, %rd16143;
	add.s64 	%rd16147, %rd16136, %rd16146;
	add.s64 	%rd16148, %rd16147, %rd16142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28658,%dummy}, %rd16137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28659}, %rd16137;
	}
	shf.r.wrap.b32 	%r28660, %r28659, %r28658, 14;
	shf.r.wrap.b32 	%r28661, %r28658, %r28659, 14;
	mov.b64 	%rd16149, {%r28661, %r28660};
	shf.r.wrap.b32 	%r28662, %r28659, %r28658, 18;
	shf.r.wrap.b32 	%r28663, %r28658, %r28659, 18;
	mov.b64 	%rd16150, {%r28663, %r28662};
	xor.b64  	%rd16151, %rd16150, %rd16149;
	shf.l.wrap.b32 	%r28664, %r28658, %r28659, 23;
	shf.l.wrap.b32 	%r28665, %r28659, %r28658, 23;
	mov.b64 	%rd16152, {%r28665, %r28664};
	xor.b64  	%rd16153, %rd16151, %rd16152;
	xor.b64  	%rd16154, %rd16113, %rd16089;
	and.b64  	%rd16155, %rd16137, %rd16154;
	xor.b64  	%rd16156, %rd16155, %rd16089;
	add.s64 	%rd16157, %rd15865, %rd84;
	add.s64 	%rd16158, %rd16157, %rd16065;
	add.s64 	%rd16159, %rd16158, %rd16156;
	add.s64 	%rd16160, %rd16159, %rd16153;
	add.s64 	%rd16161, %rd16160, %rd16076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28666,%dummy}, %rd16148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28667}, %rd16148;
	}
	shf.r.wrap.b32 	%r28668, %r28667, %r28666, 28;
	shf.r.wrap.b32 	%r28669, %r28666, %r28667, 28;
	mov.b64 	%rd16162, {%r28669, %r28668};
	shf.l.wrap.b32 	%r28670, %r28666, %r28667, 30;
	shf.l.wrap.b32 	%r28671, %r28667, %r28666, 30;
	mov.b64 	%rd16163, {%r28671, %r28670};
	xor.b64  	%rd16164, %rd16163, %rd16162;
	shf.l.wrap.b32 	%r28672, %r28666, %r28667, 25;
	shf.l.wrap.b32 	%r28673, %r28667, %r28666, 25;
	mov.b64 	%rd16165, {%r28673, %r28672};
	xor.b64  	%rd16166, %rd16164, %rd16165;
	and.b64  	%rd16167, %rd16148, %rd16124;
	xor.b64  	%rd16168, %rd16148, %rd16124;
	and.b64  	%rd16169, %rd16168, %rd16100;
	or.b64  	%rd16170, %rd16169, %rd16167;
	add.s64 	%rd16171, %rd16160, %rd16170;
	add.s64 	%rd16172, %rd16171, %rd16166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28674,%dummy}, %rd16161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28675}, %rd16161;
	}
	shf.r.wrap.b32 	%r28676, %r28675, %r28674, 14;
	shf.r.wrap.b32 	%r28677, %r28674, %r28675, 14;
	mov.b64 	%rd16173, {%r28677, %r28676};
	shf.r.wrap.b32 	%r28678, %r28675, %r28674, 18;
	shf.r.wrap.b32 	%r28679, %r28674, %r28675, 18;
	mov.b64 	%rd16174, {%r28679, %r28678};
	xor.b64  	%rd16175, %rd16174, %rd16173;
	shf.l.wrap.b32 	%r28680, %r28674, %r28675, 23;
	shf.l.wrap.b32 	%r28681, %r28675, %r28674, 23;
	mov.b64 	%rd16176, {%r28681, %r28680};
	xor.b64  	%rd16177, %rd16175, %rd16176;
	xor.b64  	%rd16178, %rd16137, %rd16113;
	and.b64  	%rd16179, %rd16161, %rd16178;
	xor.b64  	%rd16180, %rd16179, %rd16113;
	add.s64 	%rd16181, %rd15878, %rd85;
	add.s64 	%rd16182, %rd16181, %rd16089;
	add.s64 	%rd16183, %rd16182, %rd16180;
	add.s64 	%rd16184, %rd16183, %rd16177;
	add.s64 	%rd16185, %rd16184, %rd16100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28682,%dummy}, %rd16172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28683}, %rd16172;
	}
	shf.r.wrap.b32 	%r28684, %r28683, %r28682, 28;
	shf.r.wrap.b32 	%r28685, %r28682, %r28683, 28;
	mov.b64 	%rd16186, {%r28685, %r28684};
	shf.l.wrap.b32 	%r28686, %r28682, %r28683, 30;
	shf.l.wrap.b32 	%r28687, %r28683, %r28682, 30;
	mov.b64 	%rd16187, {%r28687, %r28686};
	xor.b64  	%rd16188, %rd16187, %rd16186;
	shf.l.wrap.b32 	%r28688, %r28682, %r28683, 25;
	shf.l.wrap.b32 	%r28689, %r28683, %r28682, 25;
	mov.b64 	%rd16189, {%r28689, %r28688};
	xor.b64  	%rd16190, %rd16188, %rd16189;
	and.b64  	%rd16191, %rd16172, %rd16148;
	xor.b64  	%rd16192, %rd16172, %rd16148;
	and.b64  	%rd16193, %rd16192, %rd16124;
	or.b64  	%rd16194, %rd16193, %rd16191;
	add.s64 	%rd16195, %rd16184, %rd16194;
	add.s64 	%rd16196, %rd16195, %rd16190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28690,%dummy}, %rd16185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28691}, %rd16185;
	}
	shf.r.wrap.b32 	%r28692, %r28691, %r28690, 14;
	shf.r.wrap.b32 	%r28693, %r28690, %r28691, 14;
	mov.b64 	%rd16197, {%r28693, %r28692};
	shf.r.wrap.b32 	%r28694, %r28691, %r28690, 18;
	shf.r.wrap.b32 	%r28695, %r28690, %r28691, 18;
	mov.b64 	%rd16198, {%r28695, %r28694};
	xor.b64  	%rd16199, %rd16198, %rd16197;
	shf.l.wrap.b32 	%r28696, %r28690, %r28691, 23;
	shf.l.wrap.b32 	%r28697, %r28691, %r28690, 23;
	mov.b64 	%rd16200, {%r28697, %r28696};
	xor.b64  	%rd16201, %rd16199, %rd16200;
	xor.b64  	%rd16202, %rd16161, %rd16137;
	and.b64  	%rd16203, %rd16185, %rd16202;
	xor.b64  	%rd16204, %rd16203, %rd16137;
	add.s64 	%rd16205, %rd15891, %rd86;
	add.s64 	%rd16206, %rd16205, %rd16113;
	add.s64 	%rd16207, %rd16206, %rd16204;
	add.s64 	%rd16208, %rd16207, %rd16201;
	add.s64 	%rd16209, %rd16208, %rd16124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28698,%dummy}, %rd16196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28699}, %rd16196;
	}
	shf.r.wrap.b32 	%r28700, %r28699, %r28698, 28;
	shf.r.wrap.b32 	%r28701, %r28698, %r28699, 28;
	mov.b64 	%rd16210, {%r28701, %r28700};
	shf.l.wrap.b32 	%r28702, %r28698, %r28699, 30;
	shf.l.wrap.b32 	%r28703, %r28699, %r28698, 30;
	mov.b64 	%rd16211, {%r28703, %r28702};
	xor.b64  	%rd16212, %rd16211, %rd16210;
	shf.l.wrap.b32 	%r28704, %r28698, %r28699, 25;
	shf.l.wrap.b32 	%r28705, %r28699, %r28698, 25;
	mov.b64 	%rd16213, {%r28705, %r28704};
	xor.b64  	%rd16214, %rd16212, %rd16213;
	and.b64  	%rd16215, %rd16196, %rd16172;
	xor.b64  	%rd16216, %rd16196, %rd16172;
	and.b64  	%rd16217, %rd16216, %rd16148;
	or.b64  	%rd16218, %rd16217, %rd16215;
	add.s64 	%rd16219, %rd16208, %rd16218;
	add.s64 	%rd16220, %rd16219, %rd16214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28706,%dummy}, %rd16209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28707}, %rd16209;
	}
	shf.r.wrap.b32 	%r28708, %r28707, %r28706, 14;
	shf.r.wrap.b32 	%r28709, %r28706, %r28707, 14;
	mov.b64 	%rd16221, {%r28709, %r28708};
	shf.r.wrap.b32 	%r28710, %r28707, %r28706, 18;
	shf.r.wrap.b32 	%r28711, %r28706, %r28707, 18;
	mov.b64 	%rd16222, {%r28711, %r28710};
	xor.b64  	%rd16223, %rd16222, %rd16221;
	shf.l.wrap.b32 	%r28712, %r28706, %r28707, 23;
	shf.l.wrap.b32 	%r28713, %r28707, %r28706, 23;
	mov.b64 	%rd16224, {%r28713, %r28712};
	xor.b64  	%rd16225, %rd16223, %rd16224;
	xor.b64  	%rd16226, %rd16185, %rd16161;
	and.b64  	%rd16227, %rd16209, %rd16226;
	xor.b64  	%rd16228, %rd16227, %rd16161;
	add.s64 	%rd16229, %rd15904, %rd87;
	add.s64 	%rd16230, %rd16229, %rd16137;
	add.s64 	%rd16231, %rd16230, %rd16228;
	add.s64 	%rd16232, %rd16231, %rd16225;
	add.s64 	%rd16233, %rd16232, %rd16148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28714,%dummy}, %rd16220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28715}, %rd16220;
	}
	shf.r.wrap.b32 	%r28716, %r28715, %r28714, 28;
	shf.r.wrap.b32 	%r28717, %r28714, %r28715, 28;
	mov.b64 	%rd16234, {%r28717, %r28716};
	shf.l.wrap.b32 	%r28718, %r28714, %r28715, 30;
	shf.l.wrap.b32 	%r28719, %r28715, %r28714, 30;
	mov.b64 	%rd16235, {%r28719, %r28718};
	xor.b64  	%rd16236, %rd16235, %rd16234;
	shf.l.wrap.b32 	%r28720, %r28714, %r28715, 25;
	shf.l.wrap.b32 	%r28721, %r28715, %r28714, 25;
	mov.b64 	%rd16237, {%r28721, %r28720};
	xor.b64  	%rd16238, %rd16236, %rd16237;
	and.b64  	%rd16239, %rd16220, %rd16196;
	xor.b64  	%rd16240, %rd16220, %rd16196;
	and.b64  	%rd16241, %rd16240, %rd16172;
	or.b64  	%rd16242, %rd16241, %rd16239;
	add.s64 	%rd16243, %rd16232, %rd16242;
	add.s64 	%rd16244, %rd16243, %rd16238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28722,%dummy}, %rd16233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28723}, %rd16233;
	}
	shf.r.wrap.b32 	%r28724, %r28723, %r28722, 14;
	shf.r.wrap.b32 	%r28725, %r28722, %r28723, 14;
	mov.b64 	%rd16245, {%r28725, %r28724};
	shf.r.wrap.b32 	%r28726, %r28723, %r28722, 18;
	shf.r.wrap.b32 	%r28727, %r28722, %r28723, 18;
	mov.b64 	%rd16246, {%r28727, %r28726};
	xor.b64  	%rd16247, %rd16246, %rd16245;
	shf.l.wrap.b32 	%r28728, %r28722, %r28723, 23;
	shf.l.wrap.b32 	%r28729, %r28723, %r28722, 23;
	mov.b64 	%rd16248, {%r28729, %r28728};
	xor.b64  	%rd16249, %rd16247, %rd16248;
	xor.b64  	%rd16250, %rd16209, %rd16185;
	and.b64  	%rd16251, %rd16233, %rd16250;
	xor.b64  	%rd16252, %rd16251, %rd16185;
	add.s64 	%rd16253, %rd15917, %rd88;
	add.s64 	%rd16254, %rd16253, %rd16161;
	add.s64 	%rd16255, %rd16254, %rd16252;
	add.s64 	%rd16256, %rd16255, %rd16249;
	add.s64 	%rd16257, %rd16256, %rd16172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28730,%dummy}, %rd16244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28731}, %rd16244;
	}
	shf.r.wrap.b32 	%r28732, %r28731, %r28730, 28;
	shf.r.wrap.b32 	%r28733, %r28730, %r28731, 28;
	mov.b64 	%rd16258, {%r28733, %r28732};
	shf.l.wrap.b32 	%r28734, %r28730, %r28731, 30;
	shf.l.wrap.b32 	%r28735, %r28731, %r28730, 30;
	mov.b64 	%rd16259, {%r28735, %r28734};
	xor.b64  	%rd16260, %rd16259, %rd16258;
	shf.l.wrap.b32 	%r28736, %r28730, %r28731, 25;
	shf.l.wrap.b32 	%r28737, %r28731, %r28730, 25;
	mov.b64 	%rd16261, {%r28737, %r28736};
	xor.b64  	%rd16262, %rd16260, %rd16261;
	and.b64  	%rd16263, %rd16244, %rd16220;
	xor.b64  	%rd16264, %rd16244, %rd16220;
	and.b64  	%rd16265, %rd16264, %rd16196;
	or.b64  	%rd16266, %rd16265, %rd16263;
	add.s64 	%rd16267, %rd16256, %rd16266;
	add.s64 	%rd16268, %rd16267, %rd16262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28738,%dummy}, %rd16257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28739}, %rd16257;
	}
	shf.r.wrap.b32 	%r28740, %r28739, %r28738, 14;
	shf.r.wrap.b32 	%r28741, %r28738, %r28739, 14;
	mov.b64 	%rd16269, {%r28741, %r28740};
	shf.r.wrap.b32 	%r28742, %r28739, %r28738, 18;
	shf.r.wrap.b32 	%r28743, %r28738, %r28739, 18;
	mov.b64 	%rd16270, {%r28743, %r28742};
	xor.b64  	%rd16271, %rd16270, %rd16269;
	shf.l.wrap.b32 	%r28744, %r28738, %r28739, 23;
	shf.l.wrap.b32 	%r28745, %r28739, %r28738, 23;
	mov.b64 	%rd16272, {%r28745, %r28744};
	xor.b64  	%rd16273, %rd16271, %rd16272;
	xor.b64  	%rd16274, %rd16233, %rd16209;
	and.b64  	%rd16275, %rd16257, %rd16274;
	xor.b64  	%rd16276, %rd16275, %rd16209;
	add.s64 	%rd16277, %rd15930, %rd89;
	add.s64 	%rd16278, %rd16277, %rd16185;
	add.s64 	%rd16279, %rd16278, %rd16276;
	add.s64 	%rd16280, %rd16279, %rd16273;
	add.s64 	%rd16281, %rd16280, %rd16196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28746,%dummy}, %rd16268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28747}, %rd16268;
	}
	shf.r.wrap.b32 	%r28748, %r28747, %r28746, 28;
	shf.r.wrap.b32 	%r28749, %r28746, %r28747, 28;
	mov.b64 	%rd16282, {%r28749, %r28748};
	shf.l.wrap.b32 	%r28750, %r28746, %r28747, 30;
	shf.l.wrap.b32 	%r28751, %r28747, %r28746, 30;
	mov.b64 	%rd16283, {%r28751, %r28750};
	xor.b64  	%rd16284, %rd16283, %rd16282;
	shf.l.wrap.b32 	%r28752, %r28746, %r28747, 25;
	shf.l.wrap.b32 	%r28753, %r28747, %r28746, 25;
	mov.b64 	%rd16285, {%r28753, %r28752};
	xor.b64  	%rd16286, %rd16284, %rd16285;
	and.b64  	%rd16287, %rd16268, %rd16244;
	xor.b64  	%rd16288, %rd16268, %rd16244;
	and.b64  	%rd16289, %rd16288, %rd16220;
	or.b64  	%rd16290, %rd16289, %rd16287;
	add.s64 	%rd16291, %rd16280, %rd16290;
	add.s64 	%rd16292, %rd16291, %rd16286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28754,%dummy}, %rd16281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28755}, %rd16281;
	}
	shf.r.wrap.b32 	%r28756, %r28755, %r28754, 14;
	shf.r.wrap.b32 	%r28757, %r28754, %r28755, 14;
	mov.b64 	%rd16293, {%r28757, %r28756};
	shf.r.wrap.b32 	%r28758, %r28755, %r28754, 18;
	shf.r.wrap.b32 	%r28759, %r28754, %r28755, 18;
	mov.b64 	%rd16294, {%r28759, %r28758};
	xor.b64  	%rd16295, %rd16294, %rd16293;
	shf.l.wrap.b32 	%r28760, %r28754, %r28755, 23;
	shf.l.wrap.b32 	%r28761, %r28755, %r28754, 23;
	mov.b64 	%rd16296, {%r28761, %r28760};
	xor.b64  	%rd16297, %rd16295, %rd16296;
	xor.b64  	%rd16298, %rd16257, %rd16233;
	and.b64  	%rd16299, %rd16281, %rd16298;
	xor.b64  	%rd16300, %rd16299, %rd16233;
	add.s64 	%rd16301, %rd15943, %rd90;
	add.s64 	%rd16302, %rd16301, %rd16209;
	add.s64 	%rd16303, %rd16302, %rd16300;
	add.s64 	%rd16304, %rd16303, %rd16297;
	add.s64 	%rd16305, %rd16304, %rd16220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28762,%dummy}, %rd16292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28763}, %rd16292;
	}
	shf.r.wrap.b32 	%r28764, %r28763, %r28762, 28;
	shf.r.wrap.b32 	%r28765, %r28762, %r28763, 28;
	mov.b64 	%rd16306, {%r28765, %r28764};
	shf.l.wrap.b32 	%r28766, %r28762, %r28763, 30;
	shf.l.wrap.b32 	%r28767, %r28763, %r28762, 30;
	mov.b64 	%rd16307, {%r28767, %r28766};
	xor.b64  	%rd16308, %rd16307, %rd16306;
	shf.l.wrap.b32 	%r28768, %r28762, %r28763, 25;
	shf.l.wrap.b32 	%r28769, %r28763, %r28762, 25;
	mov.b64 	%rd16309, {%r28769, %r28768};
	xor.b64  	%rd16310, %rd16308, %rd16309;
	and.b64  	%rd16311, %rd16292, %rd16268;
	xor.b64  	%rd16312, %rd16292, %rd16268;
	and.b64  	%rd16313, %rd16312, %rd16244;
	or.b64  	%rd16314, %rd16313, %rd16311;
	add.s64 	%rd16315, %rd16304, %rd16314;
	add.s64 	%rd16316, %rd16315, %rd16310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28770,%dummy}, %rd16305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28771}, %rd16305;
	}
	shf.r.wrap.b32 	%r28772, %r28771, %r28770, 14;
	shf.r.wrap.b32 	%r28773, %r28770, %r28771, 14;
	mov.b64 	%rd16317, {%r28773, %r28772};
	shf.r.wrap.b32 	%r28774, %r28771, %r28770, 18;
	shf.r.wrap.b32 	%r28775, %r28770, %r28771, 18;
	mov.b64 	%rd16318, {%r28775, %r28774};
	xor.b64  	%rd16319, %rd16318, %rd16317;
	shf.l.wrap.b32 	%r28776, %r28770, %r28771, 23;
	shf.l.wrap.b32 	%r28777, %r28771, %r28770, 23;
	mov.b64 	%rd16320, {%r28777, %r28776};
	xor.b64  	%rd16321, %rd16319, %rd16320;
	xor.b64  	%rd16322, %rd16281, %rd16257;
	and.b64  	%rd16323, %rd16305, %rd16322;
	xor.b64  	%rd16324, %rd16323, %rd16257;
	add.s64 	%rd16325, %rd15956, %rd91;
	add.s64 	%rd16326, %rd16325, %rd16233;
	add.s64 	%rd16327, %rd16326, %rd16324;
	add.s64 	%rd16328, %rd16327, %rd16321;
	add.s64 	%rd16329, %rd16328, %rd16244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28778,%dummy}, %rd16316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28779}, %rd16316;
	}
	shf.r.wrap.b32 	%r28780, %r28779, %r28778, 28;
	shf.r.wrap.b32 	%r28781, %r28778, %r28779, 28;
	mov.b64 	%rd16330, {%r28781, %r28780};
	shf.l.wrap.b32 	%r28782, %r28778, %r28779, 30;
	shf.l.wrap.b32 	%r28783, %r28779, %r28778, 30;
	mov.b64 	%rd16331, {%r28783, %r28782};
	xor.b64  	%rd16332, %rd16331, %rd16330;
	shf.l.wrap.b32 	%r28784, %r28778, %r28779, 25;
	shf.l.wrap.b32 	%r28785, %r28779, %r28778, 25;
	mov.b64 	%rd16333, {%r28785, %r28784};
	xor.b64  	%rd16334, %rd16332, %rd16333;
	and.b64  	%rd16335, %rd16316, %rd16292;
	xor.b64  	%rd16336, %rd16316, %rd16292;
	and.b64  	%rd16337, %rd16336, %rd16268;
	or.b64  	%rd16338, %rd16337, %rd16335;
	add.s64 	%rd16339, %rd16328, %rd16338;
	add.s64 	%rd16340, %rd16339, %rd16334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28786,%dummy}, %rd15943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28787}, %rd15943;
	}
	shf.r.wrap.b32 	%r28788, %r28787, %r28786, 19;
	shf.r.wrap.b32 	%r28789, %r28786, %r28787, 19;
	mov.b64 	%rd16341, {%r28789, %r28788};
	shf.l.wrap.b32 	%r28790, %r28786, %r28787, 3;
	shf.l.wrap.b32 	%r28791, %r28787, %r28786, 3;
	mov.b64 	%rd16342, {%r28791, %r28790};
	shr.u64 	%rd16343, %rd15943, 6;
	xor.b64  	%rd16344, %rd16341, %rd16343;
	xor.b64  	%rd16345, %rd16344, %rd16342;
	shf.r.wrap.b32 	%r28792, %r28401, %r28400, 1;
	shf.r.wrap.b32 	%r28793, %r28400, %r28401, 1;
	mov.b64 	%rd16346, {%r28793, %r28792};
	shf.r.wrap.b32 	%r28794, %r28401, %r28400, 8;
	shf.r.wrap.b32 	%r28795, %r28400, %r28401, 8;
	mov.b64 	%rd16347, {%r28795, %r28794};
	shr.u64 	%rd16348, %rd15774, 7;
	xor.b64  	%rd16349, %rd16346, %rd16348;
	xor.b64  	%rd16350, %rd16349, %rd16347;
	add.s64 	%rd16351, %rd15878, %rd15761;
	add.s64 	%rd16352, %rd16351, %rd16345;
	add.s64 	%rd16353, %rd16352, %rd16350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28796,%dummy}, %rd15956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28797}, %rd15956;
	}
	shf.r.wrap.b32 	%r28798, %r28797, %r28796, 19;
	shf.r.wrap.b32 	%r28799, %r28796, %r28797, 19;
	mov.b64 	%rd16354, {%r28799, %r28798};
	shf.l.wrap.b32 	%r28800, %r28796, %r28797, 3;
	shf.l.wrap.b32 	%r28801, %r28797, %r28796, 3;
	mov.b64 	%rd16355, {%r28801, %r28800};
	shr.u64 	%rd16356, %rd15956, 6;
	xor.b64  	%rd16357, %rd16354, %rd16356;
	xor.b64  	%rd16358, %rd16357, %rd16355;
	shf.r.wrap.b32 	%r28802, %r28411, %r28410, 1;
	shf.r.wrap.b32 	%r28803, %r28410, %r28411, 1;
	mov.b64 	%rd16359, {%r28803, %r28802};
	shf.r.wrap.b32 	%r28804, %r28411, %r28410, 8;
	shf.r.wrap.b32 	%r28805, %r28410, %r28411, 8;
	mov.b64 	%rd16360, {%r28805, %r28804};
	shr.u64 	%rd16361, %rd15787, 7;
	xor.b64  	%rd16362, %rd16359, %rd16361;
	xor.b64  	%rd16363, %rd16362, %rd16360;
	add.s64 	%rd16364, %rd15891, %rd15774;
	add.s64 	%rd16365, %rd16364, %rd16358;
	add.s64 	%rd16366, %rd16365, %rd16363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28806,%dummy}, %rd16353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28807}, %rd16353;
	}
	shf.r.wrap.b32 	%r28808, %r28807, %r28806, 19;
	shf.r.wrap.b32 	%r28809, %r28806, %r28807, 19;
	mov.b64 	%rd16367, {%r28809, %r28808};
	shf.l.wrap.b32 	%r28810, %r28806, %r28807, 3;
	shf.l.wrap.b32 	%r28811, %r28807, %r28806, 3;
	mov.b64 	%rd16368, {%r28811, %r28810};
	shr.u64 	%rd16369, %rd16353, 6;
	xor.b64  	%rd16370, %rd16367, %rd16369;
	xor.b64  	%rd16371, %rd16370, %rd16368;
	shf.r.wrap.b32 	%r28812, %r28421, %r28420, 1;
	shf.r.wrap.b32 	%r28813, %r28420, %r28421, 1;
	mov.b64 	%rd16372, {%r28813, %r28812};
	shf.r.wrap.b32 	%r28814, %r28421, %r28420, 8;
	shf.r.wrap.b32 	%r28815, %r28420, %r28421, 8;
	mov.b64 	%rd16373, {%r28815, %r28814};
	shr.u64 	%rd16374, %rd15800, 7;
	xor.b64  	%rd16375, %rd16372, %rd16374;
	xor.b64  	%rd16376, %rd16375, %rd16373;
	add.s64 	%rd16377, %rd15904, %rd15787;
	add.s64 	%rd16378, %rd16377, %rd16371;
	add.s64 	%rd16379, %rd16378, %rd16376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28816,%dummy}, %rd16366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28817}, %rd16366;
	}
	shf.r.wrap.b32 	%r28818, %r28817, %r28816, 19;
	shf.r.wrap.b32 	%r28819, %r28816, %r28817, 19;
	mov.b64 	%rd16380, {%r28819, %r28818};
	shf.l.wrap.b32 	%r28820, %r28816, %r28817, 3;
	shf.l.wrap.b32 	%r28821, %r28817, %r28816, 3;
	mov.b64 	%rd16381, {%r28821, %r28820};
	shr.u64 	%rd16382, %rd16366, 6;
	xor.b64  	%rd16383, %rd16380, %rd16382;
	xor.b64  	%rd16384, %rd16383, %rd16381;
	shf.r.wrap.b32 	%r28822, %r28431, %r28430, 1;
	shf.r.wrap.b32 	%r28823, %r28430, %r28431, 1;
	mov.b64 	%rd16385, {%r28823, %r28822};
	shf.r.wrap.b32 	%r28824, %r28431, %r28430, 8;
	shf.r.wrap.b32 	%r28825, %r28430, %r28431, 8;
	mov.b64 	%rd16386, {%r28825, %r28824};
	shr.u64 	%rd16387, %rd15813, 7;
	xor.b64  	%rd16388, %rd16385, %rd16387;
	xor.b64  	%rd16389, %rd16388, %rd16386;
	add.s64 	%rd16390, %rd15917, %rd15800;
	add.s64 	%rd16391, %rd16390, %rd16384;
	add.s64 	%rd16392, %rd16391, %rd16389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28826,%dummy}, %rd16379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28827}, %rd16379;
	}
	shf.r.wrap.b32 	%r28828, %r28827, %r28826, 19;
	shf.r.wrap.b32 	%r28829, %r28826, %r28827, 19;
	mov.b64 	%rd16393, {%r28829, %r28828};
	shf.l.wrap.b32 	%r28830, %r28826, %r28827, 3;
	shf.l.wrap.b32 	%r28831, %r28827, %r28826, 3;
	mov.b64 	%rd16394, {%r28831, %r28830};
	shr.u64 	%rd16395, %rd16379, 6;
	xor.b64  	%rd16396, %rd16393, %rd16395;
	xor.b64  	%rd16397, %rd16396, %rd16394;
	shf.r.wrap.b32 	%r28832, %r28441, %r28440, 1;
	shf.r.wrap.b32 	%r28833, %r28440, %r28441, 1;
	mov.b64 	%rd16398, {%r28833, %r28832};
	shf.r.wrap.b32 	%r28834, %r28441, %r28440, 8;
	shf.r.wrap.b32 	%r28835, %r28440, %r28441, 8;
	mov.b64 	%rd16399, {%r28835, %r28834};
	shr.u64 	%rd16400, %rd15826, 7;
	xor.b64  	%rd16401, %rd16398, %rd16400;
	xor.b64  	%rd16402, %rd16401, %rd16399;
	add.s64 	%rd16403, %rd15930, %rd15813;
	add.s64 	%rd16404, %rd16403, %rd16397;
	add.s64 	%rd16405, %rd16404, %rd16402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28836,%dummy}, %rd16392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28837}, %rd16392;
	}
	shf.r.wrap.b32 	%r28838, %r28837, %r28836, 19;
	shf.r.wrap.b32 	%r28839, %r28836, %r28837, 19;
	mov.b64 	%rd16406, {%r28839, %r28838};
	shf.l.wrap.b32 	%r28840, %r28836, %r28837, 3;
	shf.l.wrap.b32 	%r28841, %r28837, %r28836, 3;
	mov.b64 	%rd16407, {%r28841, %r28840};
	shr.u64 	%rd16408, %rd16392, 6;
	xor.b64  	%rd16409, %rd16406, %rd16408;
	xor.b64  	%rd16410, %rd16409, %rd16407;
	shf.r.wrap.b32 	%r28842, %r28451, %r28450, 1;
	shf.r.wrap.b32 	%r28843, %r28450, %r28451, 1;
	mov.b64 	%rd16411, {%r28843, %r28842};
	shf.r.wrap.b32 	%r28844, %r28451, %r28450, 8;
	shf.r.wrap.b32 	%r28845, %r28450, %r28451, 8;
	mov.b64 	%rd16412, {%r28845, %r28844};
	shr.u64 	%rd16413, %rd15839, 7;
	xor.b64  	%rd16414, %rd16411, %rd16413;
	xor.b64  	%rd16415, %rd16414, %rd16412;
	add.s64 	%rd16416, %rd15943, %rd15826;
	add.s64 	%rd16417, %rd16416, %rd16410;
	add.s64 	%rd16418, %rd16417, %rd16415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28846,%dummy}, %rd16405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28847}, %rd16405;
	}
	shf.r.wrap.b32 	%r28848, %r28847, %r28846, 19;
	shf.r.wrap.b32 	%r28849, %r28846, %r28847, 19;
	mov.b64 	%rd16419, {%r28849, %r28848};
	shf.l.wrap.b32 	%r28850, %r28846, %r28847, 3;
	shf.l.wrap.b32 	%r28851, %r28847, %r28846, 3;
	mov.b64 	%rd16420, {%r28851, %r28850};
	shr.u64 	%rd16421, %rd16405, 6;
	xor.b64  	%rd16422, %rd16419, %rd16421;
	xor.b64  	%rd16423, %rd16422, %rd16420;
	shf.r.wrap.b32 	%r28852, %r28461, %r28460, 1;
	shf.r.wrap.b32 	%r28853, %r28460, %r28461, 1;
	mov.b64 	%rd16424, {%r28853, %r28852};
	shf.r.wrap.b32 	%r28854, %r28461, %r28460, 8;
	shf.r.wrap.b32 	%r28855, %r28460, %r28461, 8;
	mov.b64 	%rd16425, {%r28855, %r28854};
	shr.u64 	%rd16426, %rd15852, 7;
	xor.b64  	%rd16427, %rd16424, %rd16426;
	xor.b64  	%rd16428, %rd16427, %rd16425;
	add.s64 	%rd16429, %rd15956, %rd15839;
	add.s64 	%rd16430, %rd16429, %rd16423;
	add.s64 	%rd16431, %rd16430, %rd16428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28856,%dummy}, %rd16418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28857}, %rd16418;
	}
	shf.r.wrap.b32 	%r28858, %r28857, %r28856, 19;
	shf.r.wrap.b32 	%r28859, %r28856, %r28857, 19;
	mov.b64 	%rd16432, {%r28859, %r28858};
	shf.l.wrap.b32 	%r28860, %r28856, %r28857, 3;
	shf.l.wrap.b32 	%r28861, %r28857, %r28856, 3;
	mov.b64 	%rd16433, {%r28861, %r28860};
	shr.u64 	%rd16434, %rd16418, 6;
	xor.b64  	%rd16435, %rd16432, %rd16434;
	xor.b64  	%rd16436, %rd16435, %rd16433;
	shf.r.wrap.b32 	%r28862, %r28471, %r28470, 1;
	shf.r.wrap.b32 	%r28863, %r28470, %r28471, 1;
	mov.b64 	%rd16437, {%r28863, %r28862};
	shf.r.wrap.b32 	%r28864, %r28471, %r28470, 8;
	shf.r.wrap.b32 	%r28865, %r28470, %r28471, 8;
	mov.b64 	%rd16438, {%r28865, %r28864};
	shr.u64 	%rd16439, %rd15865, 7;
	xor.b64  	%rd16440, %rd16437, %rd16439;
	xor.b64  	%rd16441, %rd16440, %rd16438;
	add.s64 	%rd16442, %rd16353, %rd15852;
	add.s64 	%rd16443, %rd16442, %rd16436;
	add.s64 	%rd16444, %rd16443, %rd16441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28866,%dummy}, %rd16431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28867}, %rd16431;
	}
	shf.r.wrap.b32 	%r28868, %r28867, %r28866, 19;
	shf.r.wrap.b32 	%r28869, %r28866, %r28867, 19;
	mov.b64 	%rd16445, {%r28869, %r28868};
	shf.l.wrap.b32 	%r28870, %r28866, %r28867, 3;
	shf.l.wrap.b32 	%r28871, %r28867, %r28866, 3;
	mov.b64 	%rd16446, {%r28871, %r28870};
	shr.u64 	%rd16447, %rd16431, 6;
	xor.b64  	%rd16448, %rd16445, %rd16447;
	xor.b64  	%rd16449, %rd16448, %rd16446;
	shf.r.wrap.b32 	%r28872, %r28481, %r28480, 1;
	shf.r.wrap.b32 	%r28873, %r28480, %r28481, 1;
	mov.b64 	%rd16450, {%r28873, %r28872};
	shf.r.wrap.b32 	%r28874, %r28481, %r28480, 8;
	shf.r.wrap.b32 	%r28875, %r28480, %r28481, 8;
	mov.b64 	%rd16451, {%r28875, %r28874};
	shr.u64 	%rd16452, %rd15878, 7;
	xor.b64  	%rd16453, %rd16450, %rd16452;
	xor.b64  	%rd16454, %rd16453, %rd16451;
	add.s64 	%rd16455, %rd16366, %rd15865;
	add.s64 	%rd16456, %rd16455, %rd16449;
	add.s64 	%rd16457, %rd16456, %rd16454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28876,%dummy}, %rd16444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28877}, %rd16444;
	}
	shf.r.wrap.b32 	%r28878, %r28877, %r28876, 19;
	shf.r.wrap.b32 	%r28879, %r28876, %r28877, 19;
	mov.b64 	%rd16458, {%r28879, %r28878};
	shf.l.wrap.b32 	%r28880, %r28876, %r28877, 3;
	shf.l.wrap.b32 	%r28881, %r28877, %r28876, 3;
	mov.b64 	%rd16459, {%r28881, %r28880};
	shr.u64 	%rd16460, %rd16444, 6;
	xor.b64  	%rd16461, %rd16458, %rd16460;
	xor.b64  	%rd16462, %rd16461, %rd16459;
	shf.r.wrap.b32 	%r28882, %r28491, %r28490, 1;
	shf.r.wrap.b32 	%r28883, %r28490, %r28491, 1;
	mov.b64 	%rd16463, {%r28883, %r28882};
	shf.r.wrap.b32 	%r28884, %r28491, %r28490, 8;
	shf.r.wrap.b32 	%r28885, %r28490, %r28491, 8;
	mov.b64 	%rd16464, {%r28885, %r28884};
	shr.u64 	%rd16465, %rd15891, 7;
	xor.b64  	%rd16466, %rd16463, %rd16465;
	xor.b64  	%rd16467, %rd16466, %rd16464;
	add.s64 	%rd16468, %rd16379, %rd15878;
	add.s64 	%rd16469, %rd16468, %rd16462;
	add.s64 	%rd16470, %rd16469, %rd16467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28886,%dummy}, %rd16457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28887}, %rd16457;
	}
	shf.r.wrap.b32 	%r28888, %r28887, %r28886, 19;
	shf.r.wrap.b32 	%r28889, %r28886, %r28887, 19;
	mov.b64 	%rd16471, {%r28889, %r28888};
	shf.l.wrap.b32 	%r28890, %r28886, %r28887, 3;
	shf.l.wrap.b32 	%r28891, %r28887, %r28886, 3;
	mov.b64 	%rd16472, {%r28891, %r28890};
	shr.u64 	%rd16473, %rd16457, 6;
	xor.b64  	%rd16474, %rd16471, %rd16473;
	xor.b64  	%rd16475, %rd16474, %rd16472;
	shf.r.wrap.b32 	%r28892, %r28501, %r28500, 1;
	shf.r.wrap.b32 	%r28893, %r28500, %r28501, 1;
	mov.b64 	%rd16476, {%r28893, %r28892};
	shf.r.wrap.b32 	%r28894, %r28501, %r28500, 8;
	shf.r.wrap.b32 	%r28895, %r28500, %r28501, 8;
	mov.b64 	%rd16477, {%r28895, %r28894};
	shr.u64 	%rd16478, %rd15904, 7;
	xor.b64  	%rd16479, %rd16476, %rd16478;
	xor.b64  	%rd16480, %rd16479, %rd16477;
	add.s64 	%rd16481, %rd16392, %rd15891;
	add.s64 	%rd16482, %rd16481, %rd16475;
	add.s64 	%rd16483, %rd16482, %rd16480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28896,%dummy}, %rd16470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28897}, %rd16470;
	}
	shf.r.wrap.b32 	%r28898, %r28897, %r28896, 19;
	shf.r.wrap.b32 	%r28899, %r28896, %r28897, 19;
	mov.b64 	%rd16484, {%r28899, %r28898};
	shf.l.wrap.b32 	%r28900, %r28896, %r28897, 3;
	shf.l.wrap.b32 	%r28901, %r28897, %r28896, 3;
	mov.b64 	%rd16485, {%r28901, %r28900};
	shr.u64 	%rd16486, %rd16470, 6;
	xor.b64  	%rd16487, %rd16484, %rd16486;
	xor.b64  	%rd16488, %rd16487, %rd16485;
	shf.r.wrap.b32 	%r28902, %r28511, %r28510, 1;
	shf.r.wrap.b32 	%r28903, %r28510, %r28511, 1;
	mov.b64 	%rd16489, {%r28903, %r28902};
	shf.r.wrap.b32 	%r28904, %r28511, %r28510, 8;
	shf.r.wrap.b32 	%r28905, %r28510, %r28511, 8;
	mov.b64 	%rd16490, {%r28905, %r28904};
	shr.u64 	%rd16491, %rd15917, 7;
	xor.b64  	%rd16492, %rd16489, %rd16491;
	xor.b64  	%rd16493, %rd16492, %rd16490;
	add.s64 	%rd16494, %rd16405, %rd15904;
	add.s64 	%rd16495, %rd16494, %rd16488;
	add.s64 	%rd16496, %rd16495, %rd16493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28906,%dummy}, %rd16483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28907}, %rd16483;
	}
	shf.r.wrap.b32 	%r28908, %r28907, %r28906, 19;
	shf.r.wrap.b32 	%r28909, %r28906, %r28907, 19;
	mov.b64 	%rd16497, {%r28909, %r28908};
	shf.l.wrap.b32 	%r28910, %r28906, %r28907, 3;
	shf.l.wrap.b32 	%r28911, %r28907, %r28906, 3;
	mov.b64 	%rd16498, {%r28911, %r28910};
	shr.u64 	%rd16499, %rd16483, 6;
	xor.b64  	%rd16500, %rd16497, %rd16499;
	xor.b64  	%rd16501, %rd16500, %rd16498;
	shf.r.wrap.b32 	%r28912, %r28521, %r28520, 1;
	shf.r.wrap.b32 	%r28913, %r28520, %r28521, 1;
	mov.b64 	%rd16502, {%r28913, %r28912};
	shf.r.wrap.b32 	%r28914, %r28521, %r28520, 8;
	shf.r.wrap.b32 	%r28915, %r28520, %r28521, 8;
	mov.b64 	%rd16503, {%r28915, %r28914};
	shr.u64 	%rd16504, %rd15930, 7;
	xor.b64  	%rd16505, %rd16502, %rd16504;
	xor.b64  	%rd16506, %rd16505, %rd16503;
	add.s64 	%rd16507, %rd16418, %rd15917;
	add.s64 	%rd16508, %rd16507, %rd16501;
	add.s64 	%rd16509, %rd16508, %rd16506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28916,%dummy}, %rd16496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28917}, %rd16496;
	}
	shf.r.wrap.b32 	%r28918, %r28917, %r28916, 19;
	shf.r.wrap.b32 	%r28919, %r28916, %r28917, 19;
	mov.b64 	%rd16510, {%r28919, %r28918};
	shf.l.wrap.b32 	%r28920, %r28916, %r28917, 3;
	shf.l.wrap.b32 	%r28921, %r28917, %r28916, 3;
	mov.b64 	%rd16511, {%r28921, %r28920};
	shr.u64 	%rd16512, %rd16496, 6;
	xor.b64  	%rd16513, %rd16510, %rd16512;
	xor.b64  	%rd16514, %rd16513, %rd16511;
	shf.r.wrap.b32 	%r28922, %r28787, %r28786, 1;
	shf.r.wrap.b32 	%r28923, %r28786, %r28787, 1;
	mov.b64 	%rd16515, {%r28923, %r28922};
	shf.r.wrap.b32 	%r28924, %r28787, %r28786, 8;
	shf.r.wrap.b32 	%r28925, %r28786, %r28787, 8;
	mov.b64 	%rd16516, {%r28925, %r28924};
	shr.u64 	%rd16517, %rd15943, 7;
	xor.b64  	%rd16518, %rd16515, %rd16517;
	xor.b64  	%rd16519, %rd16518, %rd16516;
	add.s64 	%rd16520, %rd16431, %rd15930;
	add.s64 	%rd16521, %rd16520, %rd16514;
	add.s64 	%rd16522, %rd16521, %rd16519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28926,%dummy}, %rd16509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28927}, %rd16509;
	}
	shf.r.wrap.b32 	%r28928, %r28927, %r28926, 19;
	shf.r.wrap.b32 	%r28929, %r28926, %r28927, 19;
	mov.b64 	%rd16523, {%r28929, %r28928};
	shf.l.wrap.b32 	%r28930, %r28926, %r28927, 3;
	shf.l.wrap.b32 	%r28931, %r28927, %r28926, 3;
	mov.b64 	%rd16524, {%r28931, %r28930};
	shr.u64 	%rd16525, %rd16509, 6;
	xor.b64  	%rd16526, %rd16523, %rd16525;
	xor.b64  	%rd16527, %rd16526, %rd16524;
	shf.r.wrap.b32 	%r28932, %r28797, %r28796, 1;
	shf.r.wrap.b32 	%r28933, %r28796, %r28797, 1;
	mov.b64 	%rd16528, {%r28933, %r28932};
	shf.r.wrap.b32 	%r28934, %r28797, %r28796, 8;
	shf.r.wrap.b32 	%r28935, %r28796, %r28797, 8;
	mov.b64 	%rd16529, {%r28935, %r28934};
	shr.u64 	%rd16530, %rd15956, 7;
	xor.b64  	%rd16531, %rd16528, %rd16530;
	xor.b64  	%rd16532, %rd16531, %rd16529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28936,%dummy}, %rd16522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28937}, %rd16522;
	}
	shf.r.wrap.b32 	%r28938, %r28937, %r28936, 19;
	shf.r.wrap.b32 	%r28939, %r28936, %r28937, 19;
	mov.b64 	%rd16533, {%r28939, %r28938};
	shf.l.wrap.b32 	%r28940, %r28936, %r28937, 3;
	shf.l.wrap.b32 	%r28941, %r28937, %r28936, 3;
	mov.b64 	%rd16534, {%r28941, %r28940};
	shr.u64 	%rd16535, %rd16522, 6;
	xor.b64  	%rd16536, %rd16533, %rd16535;
	xor.b64  	%rd16537, %rd16536, %rd16534;
	shf.r.wrap.b32 	%r28942, %r28807, %r28806, 1;
	shf.r.wrap.b32 	%r28943, %r28806, %r28807, 1;
	mov.b64 	%rd16538, {%r28943, %r28942};
	shf.r.wrap.b32 	%r28944, %r28807, %r28806, 8;
	shf.r.wrap.b32 	%r28945, %r28806, %r28807, 8;
	mov.b64 	%rd16539, {%r28945, %r28944};
	shr.u64 	%rd16540, %rd16353, 7;
	xor.b64  	%rd16541, %rd16538, %rd16540;
	xor.b64  	%rd16542, %rd16541, %rd16539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28946,%dummy}, %rd16329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28947}, %rd16329;
	}
	shf.r.wrap.b32 	%r28948, %r28947, %r28946, 14;
	shf.r.wrap.b32 	%r28949, %r28946, %r28947, 14;
	mov.b64 	%rd16543, {%r28949, %r28948};
	shf.r.wrap.b32 	%r28950, %r28947, %r28946, 18;
	shf.r.wrap.b32 	%r28951, %r28946, %r28947, 18;
	mov.b64 	%rd16544, {%r28951, %r28950};
	xor.b64  	%rd16545, %rd16544, %rd16543;
	shf.l.wrap.b32 	%r28952, %r28946, %r28947, 23;
	shf.l.wrap.b32 	%r28953, %r28947, %r28946, 23;
	mov.b64 	%rd16546, {%r28953, %r28952};
	xor.b64  	%rd16547, %rd16545, %rd16546;
	xor.b64  	%rd16548, %rd16305, %rd16281;
	and.b64  	%rd16549, %rd16329, %rd16548;
	xor.b64  	%rd16550, %rd16549, %rd16281;
	add.s64 	%rd16551, %rd16257, %rd92;
	add.s64 	%rd16552, %rd16551, %rd16550;
	add.s64 	%rd16553, %rd16552, %rd16353;
	add.s64 	%rd16554, %rd16553, %rd16547;
	add.s64 	%rd16555, %rd16554, %rd16268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28954,%dummy}, %rd16340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28955}, %rd16340;
	}
	shf.r.wrap.b32 	%r28956, %r28955, %r28954, 28;
	shf.r.wrap.b32 	%r28957, %r28954, %r28955, 28;
	mov.b64 	%rd16556, {%r28957, %r28956};
	shf.l.wrap.b32 	%r28958, %r28954, %r28955, 30;
	shf.l.wrap.b32 	%r28959, %r28955, %r28954, 30;
	mov.b64 	%rd16557, {%r28959, %r28958};
	xor.b64  	%rd16558, %rd16557, %rd16556;
	shf.l.wrap.b32 	%r28960, %r28954, %r28955, 25;
	shf.l.wrap.b32 	%r28961, %r28955, %r28954, 25;
	mov.b64 	%rd16559, {%r28961, %r28960};
	xor.b64  	%rd16560, %rd16558, %rd16559;
	and.b64  	%rd16561, %rd16340, %rd16316;
	xor.b64  	%rd16562, %rd16340, %rd16316;
	and.b64  	%rd16563, %rd16562, %rd16292;
	or.b64  	%rd16564, %rd16563, %rd16561;
	add.s64 	%rd16565, %rd16554, %rd16564;
	add.s64 	%rd16566, %rd16565, %rd16560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28962,%dummy}, %rd16555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28963}, %rd16555;
	}
	shf.r.wrap.b32 	%r28964, %r28963, %r28962, 14;
	shf.r.wrap.b32 	%r28965, %r28962, %r28963, 14;
	mov.b64 	%rd16567, {%r28965, %r28964};
	shf.r.wrap.b32 	%r28966, %r28963, %r28962, 18;
	shf.r.wrap.b32 	%r28967, %r28962, %r28963, 18;
	mov.b64 	%rd16568, {%r28967, %r28966};
	xor.b64  	%rd16569, %rd16568, %rd16567;
	shf.l.wrap.b32 	%r28968, %r28962, %r28963, 23;
	shf.l.wrap.b32 	%r28969, %r28963, %r28962, 23;
	mov.b64 	%rd16570, {%r28969, %r28968};
	xor.b64  	%rd16571, %rd16569, %rd16570;
	xor.b64  	%rd16572, %rd16329, %rd16305;
	and.b64  	%rd16573, %rd16555, %rd16572;
	xor.b64  	%rd16574, %rd16573, %rd16305;
	add.s64 	%rd16575, %rd16281, %rd93;
	add.s64 	%rd16576, %rd16575, %rd16366;
	add.s64 	%rd16577, %rd16576, %rd16574;
	add.s64 	%rd16578, %rd16577, %rd16571;
	add.s64 	%rd16579, %rd16578, %rd16292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28970,%dummy}, %rd16566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28971}, %rd16566;
	}
	shf.r.wrap.b32 	%r28972, %r28971, %r28970, 28;
	shf.r.wrap.b32 	%r28973, %r28970, %r28971, 28;
	mov.b64 	%rd16580, {%r28973, %r28972};
	shf.l.wrap.b32 	%r28974, %r28970, %r28971, 30;
	shf.l.wrap.b32 	%r28975, %r28971, %r28970, 30;
	mov.b64 	%rd16581, {%r28975, %r28974};
	xor.b64  	%rd16582, %rd16581, %rd16580;
	shf.l.wrap.b32 	%r28976, %r28970, %r28971, 25;
	shf.l.wrap.b32 	%r28977, %r28971, %r28970, 25;
	mov.b64 	%rd16583, {%r28977, %r28976};
	xor.b64  	%rd16584, %rd16582, %rd16583;
	and.b64  	%rd16585, %rd16566, %rd16340;
	xor.b64  	%rd16586, %rd16566, %rd16340;
	and.b64  	%rd16587, %rd16586, %rd16316;
	or.b64  	%rd16588, %rd16587, %rd16585;
	add.s64 	%rd16589, %rd16578, %rd16588;
	add.s64 	%rd16590, %rd16589, %rd16584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28978,%dummy}, %rd16579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28979}, %rd16579;
	}
	shf.r.wrap.b32 	%r28980, %r28979, %r28978, 14;
	shf.r.wrap.b32 	%r28981, %r28978, %r28979, 14;
	mov.b64 	%rd16591, {%r28981, %r28980};
	shf.r.wrap.b32 	%r28982, %r28979, %r28978, 18;
	shf.r.wrap.b32 	%r28983, %r28978, %r28979, 18;
	mov.b64 	%rd16592, {%r28983, %r28982};
	xor.b64  	%rd16593, %rd16592, %rd16591;
	shf.l.wrap.b32 	%r28984, %r28978, %r28979, 23;
	shf.l.wrap.b32 	%r28985, %r28979, %r28978, 23;
	mov.b64 	%rd16594, {%r28985, %r28984};
	xor.b64  	%rd16595, %rd16593, %rd16594;
	xor.b64  	%rd16596, %rd16555, %rd16329;
	and.b64  	%rd16597, %rd16579, %rd16596;
	xor.b64  	%rd16598, %rd16597, %rd16329;
	add.s64 	%rd16599, %rd16305, %rd94;
	add.s64 	%rd16600, %rd16599, %rd16379;
	add.s64 	%rd16601, %rd16600, %rd16598;
	add.s64 	%rd16602, %rd16601, %rd16595;
	add.s64 	%rd16603, %rd16602, %rd16316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28986,%dummy}, %rd16590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28987}, %rd16590;
	}
	shf.r.wrap.b32 	%r28988, %r28987, %r28986, 28;
	shf.r.wrap.b32 	%r28989, %r28986, %r28987, 28;
	mov.b64 	%rd16604, {%r28989, %r28988};
	shf.l.wrap.b32 	%r28990, %r28986, %r28987, 30;
	shf.l.wrap.b32 	%r28991, %r28987, %r28986, 30;
	mov.b64 	%rd16605, {%r28991, %r28990};
	xor.b64  	%rd16606, %rd16605, %rd16604;
	shf.l.wrap.b32 	%r28992, %r28986, %r28987, 25;
	shf.l.wrap.b32 	%r28993, %r28987, %r28986, 25;
	mov.b64 	%rd16607, {%r28993, %r28992};
	xor.b64  	%rd16608, %rd16606, %rd16607;
	and.b64  	%rd16609, %rd16590, %rd16566;
	xor.b64  	%rd16610, %rd16590, %rd16566;
	and.b64  	%rd16611, %rd16610, %rd16340;
	or.b64  	%rd16612, %rd16611, %rd16609;
	add.s64 	%rd16613, %rd16602, %rd16612;
	add.s64 	%rd16614, %rd16613, %rd16608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28994,%dummy}, %rd16603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28995}, %rd16603;
	}
	shf.r.wrap.b32 	%r28996, %r28995, %r28994, 14;
	shf.r.wrap.b32 	%r28997, %r28994, %r28995, 14;
	mov.b64 	%rd16615, {%r28997, %r28996};
	shf.r.wrap.b32 	%r28998, %r28995, %r28994, 18;
	shf.r.wrap.b32 	%r28999, %r28994, %r28995, 18;
	mov.b64 	%rd16616, {%r28999, %r28998};
	xor.b64  	%rd16617, %rd16616, %rd16615;
	shf.l.wrap.b32 	%r29000, %r28994, %r28995, 23;
	shf.l.wrap.b32 	%r29001, %r28995, %r28994, 23;
	mov.b64 	%rd16618, {%r29001, %r29000};
	xor.b64  	%rd16619, %rd16617, %rd16618;
	xor.b64  	%rd16620, %rd16579, %rd16555;
	and.b64  	%rd16621, %rd16603, %rd16620;
	xor.b64  	%rd16622, %rd16621, %rd16555;
	add.s64 	%rd16623, %rd16329, %rd95;
	add.s64 	%rd16624, %rd16623, %rd16392;
	add.s64 	%rd16625, %rd16624, %rd16622;
	add.s64 	%rd16626, %rd16625, %rd16619;
	add.s64 	%rd16627, %rd16626, %rd16340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29002,%dummy}, %rd16614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29003}, %rd16614;
	}
	shf.r.wrap.b32 	%r29004, %r29003, %r29002, 28;
	shf.r.wrap.b32 	%r29005, %r29002, %r29003, 28;
	mov.b64 	%rd16628, {%r29005, %r29004};
	shf.l.wrap.b32 	%r29006, %r29002, %r29003, 30;
	shf.l.wrap.b32 	%r29007, %r29003, %r29002, 30;
	mov.b64 	%rd16629, {%r29007, %r29006};
	xor.b64  	%rd16630, %rd16629, %rd16628;
	shf.l.wrap.b32 	%r29008, %r29002, %r29003, 25;
	shf.l.wrap.b32 	%r29009, %r29003, %r29002, 25;
	mov.b64 	%rd16631, {%r29009, %r29008};
	xor.b64  	%rd16632, %rd16630, %rd16631;
	and.b64  	%rd16633, %rd16614, %rd16590;
	xor.b64  	%rd16634, %rd16614, %rd16590;
	and.b64  	%rd16635, %rd16634, %rd16566;
	or.b64  	%rd16636, %rd16635, %rd16633;
	add.s64 	%rd16637, %rd16626, %rd16636;
	add.s64 	%rd16638, %rd16637, %rd16632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29010,%dummy}, %rd16627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29011}, %rd16627;
	}
	shf.r.wrap.b32 	%r29012, %r29011, %r29010, 14;
	shf.r.wrap.b32 	%r29013, %r29010, %r29011, 14;
	mov.b64 	%rd16639, {%r29013, %r29012};
	shf.r.wrap.b32 	%r29014, %r29011, %r29010, 18;
	shf.r.wrap.b32 	%r29015, %r29010, %r29011, 18;
	mov.b64 	%rd16640, {%r29015, %r29014};
	xor.b64  	%rd16641, %rd16640, %rd16639;
	shf.l.wrap.b32 	%r29016, %r29010, %r29011, 23;
	shf.l.wrap.b32 	%r29017, %r29011, %r29010, 23;
	mov.b64 	%rd16642, {%r29017, %r29016};
	xor.b64  	%rd16643, %rd16641, %rd16642;
	xor.b64  	%rd16644, %rd16603, %rd16579;
	and.b64  	%rd16645, %rd16627, %rd16644;
	xor.b64  	%rd16646, %rd16645, %rd16579;
	add.s64 	%rd16647, %rd16405, %rd96;
	add.s64 	%rd16648, %rd16647, %rd16555;
	add.s64 	%rd16649, %rd16648, %rd16646;
	add.s64 	%rd16650, %rd16649, %rd16643;
	add.s64 	%rd16651, %rd16650, %rd16566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29018,%dummy}, %rd16638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29019}, %rd16638;
	}
	shf.r.wrap.b32 	%r29020, %r29019, %r29018, 28;
	shf.r.wrap.b32 	%r29021, %r29018, %r29019, 28;
	mov.b64 	%rd16652, {%r29021, %r29020};
	shf.l.wrap.b32 	%r29022, %r29018, %r29019, 30;
	shf.l.wrap.b32 	%r29023, %r29019, %r29018, 30;
	mov.b64 	%rd16653, {%r29023, %r29022};
	xor.b64  	%rd16654, %rd16653, %rd16652;
	shf.l.wrap.b32 	%r29024, %r29018, %r29019, 25;
	shf.l.wrap.b32 	%r29025, %r29019, %r29018, 25;
	mov.b64 	%rd16655, {%r29025, %r29024};
	xor.b64  	%rd16656, %rd16654, %rd16655;
	and.b64  	%rd16657, %rd16638, %rd16614;
	xor.b64  	%rd16658, %rd16638, %rd16614;
	and.b64  	%rd16659, %rd16658, %rd16590;
	or.b64  	%rd16660, %rd16659, %rd16657;
	add.s64 	%rd16661, %rd16650, %rd16660;
	add.s64 	%rd16662, %rd16661, %rd16656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29026,%dummy}, %rd16651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29027}, %rd16651;
	}
	shf.r.wrap.b32 	%r29028, %r29027, %r29026, 14;
	shf.r.wrap.b32 	%r29029, %r29026, %r29027, 14;
	mov.b64 	%rd16663, {%r29029, %r29028};
	shf.r.wrap.b32 	%r29030, %r29027, %r29026, 18;
	shf.r.wrap.b32 	%r29031, %r29026, %r29027, 18;
	mov.b64 	%rd16664, {%r29031, %r29030};
	xor.b64  	%rd16665, %rd16664, %rd16663;
	shf.l.wrap.b32 	%r29032, %r29026, %r29027, 23;
	shf.l.wrap.b32 	%r29033, %r29027, %r29026, 23;
	mov.b64 	%rd16666, {%r29033, %r29032};
	xor.b64  	%rd16667, %rd16665, %rd16666;
	xor.b64  	%rd16668, %rd16627, %rd16603;
	and.b64  	%rd16669, %rd16651, %rd16668;
	xor.b64  	%rd16670, %rd16669, %rd16603;
	add.s64 	%rd16671, %rd16418, %rd97;
	add.s64 	%rd16672, %rd16671, %rd16579;
	add.s64 	%rd16673, %rd16672, %rd16670;
	add.s64 	%rd16674, %rd16673, %rd16667;
	add.s64 	%rd16675, %rd16674, %rd16590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29034,%dummy}, %rd16662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29035}, %rd16662;
	}
	shf.r.wrap.b32 	%r29036, %r29035, %r29034, 28;
	shf.r.wrap.b32 	%r29037, %r29034, %r29035, 28;
	mov.b64 	%rd16676, {%r29037, %r29036};
	shf.l.wrap.b32 	%r29038, %r29034, %r29035, 30;
	shf.l.wrap.b32 	%r29039, %r29035, %r29034, 30;
	mov.b64 	%rd16677, {%r29039, %r29038};
	xor.b64  	%rd16678, %rd16677, %rd16676;
	shf.l.wrap.b32 	%r29040, %r29034, %r29035, 25;
	shf.l.wrap.b32 	%r29041, %r29035, %r29034, 25;
	mov.b64 	%rd16679, {%r29041, %r29040};
	xor.b64  	%rd16680, %rd16678, %rd16679;
	and.b64  	%rd16681, %rd16662, %rd16638;
	xor.b64  	%rd16682, %rd16662, %rd16638;
	and.b64  	%rd16683, %rd16682, %rd16614;
	or.b64  	%rd16684, %rd16683, %rd16681;
	add.s64 	%rd16685, %rd16674, %rd16684;
	add.s64 	%rd16686, %rd16685, %rd16680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29042,%dummy}, %rd16675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29043}, %rd16675;
	}
	shf.r.wrap.b32 	%r29044, %r29043, %r29042, 14;
	shf.r.wrap.b32 	%r29045, %r29042, %r29043, 14;
	mov.b64 	%rd16687, {%r29045, %r29044};
	shf.r.wrap.b32 	%r29046, %r29043, %r29042, 18;
	shf.r.wrap.b32 	%r29047, %r29042, %r29043, 18;
	mov.b64 	%rd16688, {%r29047, %r29046};
	xor.b64  	%rd16689, %rd16688, %rd16687;
	shf.l.wrap.b32 	%r29048, %r29042, %r29043, 23;
	shf.l.wrap.b32 	%r29049, %r29043, %r29042, 23;
	mov.b64 	%rd16690, {%r29049, %r29048};
	xor.b64  	%rd16691, %rd16689, %rd16690;
	xor.b64  	%rd16692, %rd16651, %rd16627;
	and.b64  	%rd16693, %rd16675, %rd16692;
	xor.b64  	%rd16694, %rd16693, %rd16627;
	add.s64 	%rd16695, %rd16431, %rd98;
	add.s64 	%rd16696, %rd16695, %rd16603;
	add.s64 	%rd16697, %rd16696, %rd16694;
	add.s64 	%rd16698, %rd16697, %rd16691;
	add.s64 	%rd16699, %rd16698, %rd16614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29050,%dummy}, %rd16686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29051}, %rd16686;
	}
	shf.r.wrap.b32 	%r29052, %r29051, %r29050, 28;
	shf.r.wrap.b32 	%r29053, %r29050, %r29051, 28;
	mov.b64 	%rd16700, {%r29053, %r29052};
	shf.l.wrap.b32 	%r29054, %r29050, %r29051, 30;
	shf.l.wrap.b32 	%r29055, %r29051, %r29050, 30;
	mov.b64 	%rd16701, {%r29055, %r29054};
	xor.b64  	%rd16702, %rd16701, %rd16700;
	shf.l.wrap.b32 	%r29056, %r29050, %r29051, 25;
	shf.l.wrap.b32 	%r29057, %r29051, %r29050, 25;
	mov.b64 	%rd16703, {%r29057, %r29056};
	xor.b64  	%rd16704, %rd16702, %rd16703;
	and.b64  	%rd16705, %rd16686, %rd16662;
	xor.b64  	%rd16706, %rd16686, %rd16662;
	and.b64  	%rd16707, %rd16706, %rd16638;
	or.b64  	%rd16708, %rd16707, %rd16705;
	add.s64 	%rd16709, %rd16698, %rd16708;
	add.s64 	%rd16710, %rd16709, %rd16704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29058,%dummy}, %rd16699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29059}, %rd16699;
	}
	shf.r.wrap.b32 	%r29060, %r29059, %r29058, 14;
	shf.r.wrap.b32 	%r29061, %r29058, %r29059, 14;
	mov.b64 	%rd16711, {%r29061, %r29060};
	shf.r.wrap.b32 	%r29062, %r29059, %r29058, 18;
	shf.r.wrap.b32 	%r29063, %r29058, %r29059, 18;
	mov.b64 	%rd16712, {%r29063, %r29062};
	xor.b64  	%rd16713, %rd16712, %rd16711;
	shf.l.wrap.b32 	%r29064, %r29058, %r29059, 23;
	shf.l.wrap.b32 	%r29065, %r29059, %r29058, 23;
	mov.b64 	%rd16714, {%r29065, %r29064};
	xor.b64  	%rd16715, %rd16713, %rd16714;
	xor.b64  	%rd16716, %rd16675, %rd16651;
	and.b64  	%rd16717, %rd16699, %rd16716;
	xor.b64  	%rd16718, %rd16717, %rd16651;
	add.s64 	%rd16719, %rd16444, %rd99;
	add.s64 	%rd16720, %rd16719, %rd16627;
	add.s64 	%rd16721, %rd16720, %rd16718;
	add.s64 	%rd16722, %rd16721, %rd16715;
	add.s64 	%rd16723, %rd16722, %rd16638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29066,%dummy}, %rd16710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29067}, %rd16710;
	}
	shf.r.wrap.b32 	%r29068, %r29067, %r29066, 28;
	shf.r.wrap.b32 	%r29069, %r29066, %r29067, 28;
	mov.b64 	%rd16724, {%r29069, %r29068};
	shf.l.wrap.b32 	%r29070, %r29066, %r29067, 30;
	shf.l.wrap.b32 	%r29071, %r29067, %r29066, 30;
	mov.b64 	%rd16725, {%r29071, %r29070};
	xor.b64  	%rd16726, %rd16725, %rd16724;
	shf.l.wrap.b32 	%r29072, %r29066, %r29067, 25;
	shf.l.wrap.b32 	%r29073, %r29067, %r29066, 25;
	mov.b64 	%rd16727, {%r29073, %r29072};
	xor.b64  	%rd16728, %rd16726, %rd16727;
	and.b64  	%rd16729, %rd16710, %rd16686;
	xor.b64  	%rd16730, %rd16710, %rd16686;
	and.b64  	%rd16731, %rd16730, %rd16662;
	or.b64  	%rd16732, %rd16731, %rd16729;
	add.s64 	%rd16733, %rd16722, %rd16732;
	add.s64 	%rd16734, %rd16733, %rd16728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29074,%dummy}, %rd16723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29075}, %rd16723;
	}
	shf.r.wrap.b32 	%r29076, %r29075, %r29074, 14;
	shf.r.wrap.b32 	%r29077, %r29074, %r29075, 14;
	mov.b64 	%rd16735, {%r29077, %r29076};
	shf.r.wrap.b32 	%r29078, %r29075, %r29074, 18;
	shf.r.wrap.b32 	%r29079, %r29074, %r29075, 18;
	mov.b64 	%rd16736, {%r29079, %r29078};
	xor.b64  	%rd16737, %rd16736, %rd16735;
	shf.l.wrap.b32 	%r29080, %r29074, %r29075, 23;
	shf.l.wrap.b32 	%r29081, %r29075, %r29074, 23;
	mov.b64 	%rd16738, {%r29081, %r29080};
	xor.b64  	%rd16739, %rd16737, %rd16738;
	xor.b64  	%rd16740, %rd16699, %rd16675;
	and.b64  	%rd16741, %rd16723, %rd16740;
	xor.b64  	%rd16742, %rd16741, %rd16675;
	add.s64 	%rd16743, %rd16457, %rd100;
	add.s64 	%rd16744, %rd16743, %rd16651;
	add.s64 	%rd16745, %rd16744, %rd16742;
	add.s64 	%rd16746, %rd16745, %rd16739;
	add.s64 	%rd16747, %rd16746, %rd16662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29082,%dummy}, %rd16734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29083}, %rd16734;
	}
	shf.r.wrap.b32 	%r29084, %r29083, %r29082, 28;
	shf.r.wrap.b32 	%r29085, %r29082, %r29083, 28;
	mov.b64 	%rd16748, {%r29085, %r29084};
	shf.l.wrap.b32 	%r29086, %r29082, %r29083, 30;
	shf.l.wrap.b32 	%r29087, %r29083, %r29082, 30;
	mov.b64 	%rd16749, {%r29087, %r29086};
	xor.b64  	%rd16750, %rd16749, %rd16748;
	shf.l.wrap.b32 	%r29088, %r29082, %r29083, 25;
	shf.l.wrap.b32 	%r29089, %r29083, %r29082, 25;
	mov.b64 	%rd16751, {%r29089, %r29088};
	xor.b64  	%rd16752, %rd16750, %rd16751;
	and.b64  	%rd16753, %rd16734, %rd16710;
	xor.b64  	%rd16754, %rd16734, %rd16710;
	and.b64  	%rd16755, %rd16754, %rd16686;
	or.b64  	%rd16756, %rd16755, %rd16753;
	add.s64 	%rd16757, %rd16746, %rd16756;
	add.s64 	%rd16758, %rd16757, %rd16752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29090,%dummy}, %rd16747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29091}, %rd16747;
	}
	shf.r.wrap.b32 	%r29092, %r29091, %r29090, 14;
	shf.r.wrap.b32 	%r29093, %r29090, %r29091, 14;
	mov.b64 	%rd16759, {%r29093, %r29092};
	shf.r.wrap.b32 	%r29094, %r29091, %r29090, 18;
	shf.r.wrap.b32 	%r29095, %r29090, %r29091, 18;
	mov.b64 	%rd16760, {%r29095, %r29094};
	xor.b64  	%rd16761, %rd16760, %rd16759;
	shf.l.wrap.b32 	%r29096, %r29090, %r29091, 23;
	shf.l.wrap.b32 	%r29097, %r29091, %r29090, 23;
	mov.b64 	%rd16762, {%r29097, %r29096};
	xor.b64  	%rd16763, %rd16761, %rd16762;
	xor.b64  	%rd16764, %rd16723, %rd16699;
	and.b64  	%rd16765, %rd16747, %rd16764;
	xor.b64  	%rd16766, %rd16765, %rd16699;
	add.s64 	%rd16767, %rd16470, %rd101;
	add.s64 	%rd16768, %rd16767, %rd16675;
	add.s64 	%rd16769, %rd16768, %rd16766;
	add.s64 	%rd16770, %rd16769, %rd16763;
	add.s64 	%rd16771, %rd16770, %rd16686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29098,%dummy}, %rd16758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29099}, %rd16758;
	}
	shf.r.wrap.b32 	%r29100, %r29099, %r29098, 28;
	shf.r.wrap.b32 	%r29101, %r29098, %r29099, 28;
	mov.b64 	%rd16772, {%r29101, %r29100};
	shf.l.wrap.b32 	%r29102, %r29098, %r29099, 30;
	shf.l.wrap.b32 	%r29103, %r29099, %r29098, 30;
	mov.b64 	%rd16773, {%r29103, %r29102};
	xor.b64  	%rd16774, %rd16773, %rd16772;
	shf.l.wrap.b32 	%r29104, %r29098, %r29099, 25;
	shf.l.wrap.b32 	%r29105, %r29099, %r29098, 25;
	mov.b64 	%rd16775, {%r29105, %r29104};
	xor.b64  	%rd16776, %rd16774, %rd16775;
	and.b64  	%rd16777, %rd16758, %rd16734;
	xor.b64  	%rd16778, %rd16758, %rd16734;
	and.b64  	%rd16779, %rd16778, %rd16710;
	or.b64  	%rd16780, %rd16779, %rd16777;
	add.s64 	%rd16781, %rd16770, %rd16780;
	add.s64 	%rd16782, %rd16781, %rd16776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29106,%dummy}, %rd16771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29107}, %rd16771;
	}
	shf.r.wrap.b32 	%r29108, %r29107, %r29106, 14;
	shf.r.wrap.b32 	%r29109, %r29106, %r29107, 14;
	mov.b64 	%rd16783, {%r29109, %r29108};
	shf.r.wrap.b32 	%r29110, %r29107, %r29106, 18;
	shf.r.wrap.b32 	%r29111, %r29106, %r29107, 18;
	mov.b64 	%rd16784, {%r29111, %r29110};
	xor.b64  	%rd16785, %rd16784, %rd16783;
	shf.l.wrap.b32 	%r29112, %r29106, %r29107, 23;
	shf.l.wrap.b32 	%r29113, %r29107, %r29106, 23;
	mov.b64 	%rd16786, {%r29113, %r29112};
	xor.b64  	%rd16787, %rd16785, %rd16786;
	xor.b64  	%rd16788, %rd16747, %rd16723;
	and.b64  	%rd16789, %rd16771, %rd16788;
	xor.b64  	%rd16790, %rd16789, %rd16723;
	add.s64 	%rd16791, %rd16483, %rd102;
	add.s64 	%rd16792, %rd16791, %rd16699;
	add.s64 	%rd16793, %rd16792, %rd16790;
	add.s64 	%rd16794, %rd16793, %rd16787;
	add.s64 	%rd16795, %rd16794, %rd16710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29114,%dummy}, %rd16782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29115}, %rd16782;
	}
	shf.r.wrap.b32 	%r29116, %r29115, %r29114, 28;
	shf.r.wrap.b32 	%r29117, %r29114, %r29115, 28;
	mov.b64 	%rd16796, {%r29117, %r29116};
	shf.l.wrap.b32 	%r29118, %r29114, %r29115, 30;
	shf.l.wrap.b32 	%r29119, %r29115, %r29114, 30;
	mov.b64 	%rd16797, {%r29119, %r29118};
	xor.b64  	%rd16798, %rd16797, %rd16796;
	shf.l.wrap.b32 	%r29120, %r29114, %r29115, 25;
	shf.l.wrap.b32 	%r29121, %r29115, %r29114, 25;
	mov.b64 	%rd16799, {%r29121, %r29120};
	xor.b64  	%rd16800, %rd16798, %rd16799;
	and.b64  	%rd16801, %rd16782, %rd16758;
	xor.b64  	%rd16802, %rd16782, %rd16758;
	and.b64  	%rd16803, %rd16802, %rd16734;
	or.b64  	%rd16804, %rd16803, %rd16801;
	add.s64 	%rd16805, %rd16794, %rd16804;
	add.s64 	%rd16806, %rd16805, %rd16800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29122,%dummy}, %rd16795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29123}, %rd16795;
	}
	shf.r.wrap.b32 	%r29124, %r29123, %r29122, 14;
	shf.r.wrap.b32 	%r29125, %r29122, %r29123, 14;
	mov.b64 	%rd16807, {%r29125, %r29124};
	shf.r.wrap.b32 	%r29126, %r29123, %r29122, 18;
	shf.r.wrap.b32 	%r29127, %r29122, %r29123, 18;
	mov.b64 	%rd16808, {%r29127, %r29126};
	xor.b64  	%rd16809, %rd16808, %rd16807;
	shf.l.wrap.b32 	%r29128, %r29122, %r29123, 23;
	shf.l.wrap.b32 	%r29129, %r29123, %r29122, 23;
	mov.b64 	%rd16810, {%r29129, %r29128};
	xor.b64  	%rd16811, %rd16809, %rd16810;
	xor.b64  	%rd16812, %rd16771, %rd16747;
	and.b64  	%rd16813, %rd16795, %rd16812;
	xor.b64  	%rd16814, %rd16813, %rd16747;
	add.s64 	%rd16815, %rd16496, %rd103;
	add.s64 	%rd16816, %rd16815, %rd16723;
	add.s64 	%rd16817, %rd16816, %rd16814;
	add.s64 	%rd16818, %rd16817, %rd16811;
	add.s64 	%rd16819, %rd16818, %rd16734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29130,%dummy}, %rd16806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29131}, %rd16806;
	}
	shf.r.wrap.b32 	%r29132, %r29131, %r29130, 28;
	shf.r.wrap.b32 	%r29133, %r29130, %r29131, 28;
	mov.b64 	%rd16820, {%r29133, %r29132};
	shf.l.wrap.b32 	%r29134, %r29130, %r29131, 30;
	shf.l.wrap.b32 	%r29135, %r29131, %r29130, 30;
	mov.b64 	%rd16821, {%r29135, %r29134};
	xor.b64  	%rd16822, %rd16821, %rd16820;
	shf.l.wrap.b32 	%r29136, %r29130, %r29131, 25;
	shf.l.wrap.b32 	%r29137, %r29131, %r29130, 25;
	mov.b64 	%rd16823, {%r29137, %r29136};
	xor.b64  	%rd16824, %rd16822, %rd16823;
	and.b64  	%rd16825, %rd16806, %rd16782;
	xor.b64  	%rd16826, %rd16806, %rd16782;
	and.b64  	%rd16827, %rd16826, %rd16758;
	or.b64  	%rd16828, %rd16827, %rd16825;
	add.s64 	%rd16829, %rd16818, %rd16828;
	add.s64 	%rd16830, %rd16829, %rd16824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29138,%dummy}, %rd16819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29139}, %rd16819;
	}
	shf.r.wrap.b32 	%r29140, %r29139, %r29138, 14;
	shf.r.wrap.b32 	%r29141, %r29138, %r29139, 14;
	mov.b64 	%rd16831, {%r29141, %r29140};
	shf.r.wrap.b32 	%r29142, %r29139, %r29138, 18;
	shf.r.wrap.b32 	%r29143, %r29138, %r29139, 18;
	mov.b64 	%rd16832, {%r29143, %r29142};
	xor.b64  	%rd16833, %rd16832, %rd16831;
	shf.l.wrap.b32 	%r29144, %r29138, %r29139, 23;
	shf.l.wrap.b32 	%r29145, %r29139, %r29138, 23;
	mov.b64 	%rd16834, {%r29145, %r29144};
	xor.b64  	%rd16835, %rd16833, %rd16834;
	xor.b64  	%rd16836, %rd16795, %rd16771;
	and.b64  	%rd16837, %rd16819, %rd16836;
	xor.b64  	%rd16838, %rd16837, %rd16771;
	add.s64 	%rd16839, %rd16509, %rd104;
	add.s64 	%rd16840, %rd16839, %rd16747;
	add.s64 	%rd16841, %rd16840, %rd16838;
	add.s64 	%rd16842, %rd16841, %rd16835;
	add.s64 	%rd16843, %rd16842, %rd16758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29146,%dummy}, %rd16830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29147}, %rd16830;
	}
	shf.r.wrap.b32 	%r29148, %r29147, %r29146, 28;
	shf.r.wrap.b32 	%r29149, %r29146, %r29147, 28;
	mov.b64 	%rd16844, {%r29149, %r29148};
	shf.l.wrap.b32 	%r29150, %r29146, %r29147, 30;
	shf.l.wrap.b32 	%r29151, %r29147, %r29146, 30;
	mov.b64 	%rd16845, {%r29151, %r29150};
	xor.b64  	%rd16846, %rd16845, %rd16844;
	shf.l.wrap.b32 	%r29152, %r29146, %r29147, 25;
	shf.l.wrap.b32 	%r29153, %r29147, %r29146, 25;
	mov.b64 	%rd16847, {%r29153, %r29152};
	xor.b64  	%rd16848, %rd16846, %rd16847;
	and.b64  	%rd16849, %rd16830, %rd16806;
	xor.b64  	%rd16850, %rd16830, %rd16806;
	and.b64  	%rd16851, %rd16850, %rd16782;
	or.b64  	%rd16852, %rd16851, %rd16849;
	add.s64 	%rd16853, %rd16842, %rd16852;
	add.s64 	%rd16854, %rd16853, %rd16848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29154,%dummy}, %rd16843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29155}, %rd16843;
	}
	shf.r.wrap.b32 	%r29156, %r29155, %r29154, 14;
	shf.r.wrap.b32 	%r29157, %r29154, %r29155, 14;
	mov.b64 	%rd16855, {%r29157, %r29156};
	shf.r.wrap.b32 	%r29158, %r29155, %r29154, 18;
	shf.r.wrap.b32 	%r29159, %r29154, %r29155, 18;
	mov.b64 	%rd16856, {%r29159, %r29158};
	xor.b64  	%rd16857, %rd16856, %rd16855;
	shf.l.wrap.b32 	%r29160, %r29154, %r29155, 23;
	shf.l.wrap.b32 	%r29161, %r29155, %r29154, 23;
	mov.b64 	%rd16858, {%r29161, %r29160};
	xor.b64  	%rd16859, %rd16857, %rd16858;
	xor.b64  	%rd16860, %rd16819, %rd16795;
	and.b64  	%rd16861, %rd16843, %rd16860;
	xor.b64  	%rd16862, %rd16861, %rd16795;
	add.s64 	%rd16863, %rd16522, %rd105;
	add.s64 	%rd16864, %rd16863, %rd16771;
	add.s64 	%rd16865, %rd16864, %rd16862;
	add.s64 	%rd16866, %rd16865, %rd16859;
	add.s64 	%rd16867, %rd16866, %rd16782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29162,%dummy}, %rd16854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29163}, %rd16854;
	}
	shf.r.wrap.b32 	%r29164, %r29163, %r29162, 28;
	shf.r.wrap.b32 	%r29165, %r29162, %r29163, 28;
	mov.b64 	%rd16868, {%r29165, %r29164};
	shf.l.wrap.b32 	%r29166, %r29162, %r29163, 30;
	shf.l.wrap.b32 	%r29167, %r29163, %r29162, 30;
	mov.b64 	%rd16869, {%r29167, %r29166};
	xor.b64  	%rd16870, %rd16869, %rd16868;
	shf.l.wrap.b32 	%r29168, %r29162, %r29163, 25;
	shf.l.wrap.b32 	%r29169, %r29163, %r29162, 25;
	mov.b64 	%rd16871, {%r29169, %r29168};
	xor.b64  	%rd16872, %rd16870, %rd16871;
	and.b64  	%rd16873, %rd16854, %rd16830;
	xor.b64  	%rd16874, %rd16854, %rd16830;
	and.b64  	%rd16875, %rd16874, %rd16806;
	or.b64  	%rd16876, %rd16875, %rd16873;
	add.s64 	%rd16877, %rd16866, %rd16876;
	add.s64 	%rd16878, %rd16877, %rd16872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29170,%dummy}, %rd16867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29171}, %rd16867;
	}
	shf.r.wrap.b32 	%r29172, %r29171, %r29170, 14;
	shf.r.wrap.b32 	%r29173, %r29170, %r29171, 14;
	mov.b64 	%rd16879, {%r29173, %r29172};
	shf.r.wrap.b32 	%r29174, %r29171, %r29170, 18;
	shf.r.wrap.b32 	%r29175, %r29170, %r29171, 18;
	mov.b64 	%rd16880, {%r29175, %r29174};
	xor.b64  	%rd16881, %rd16880, %rd16879;
	shf.l.wrap.b32 	%r29176, %r29170, %r29171, 23;
	shf.l.wrap.b32 	%r29177, %r29171, %r29170, 23;
	mov.b64 	%rd16882, {%r29177, %r29176};
	xor.b64  	%rd16883, %rd16881, %rd16882;
	xor.b64  	%rd16884, %rd16843, %rd16819;
	and.b64  	%rd16885, %rd16867, %rd16884;
	xor.b64  	%rd16886, %rd16885, %rd16819;
	add.s64 	%rd16887, %rd15943, %rd106;
	add.s64 	%rd16888, %rd16887, %rd16444;
	add.s64 	%rd16889, %rd16888, %rd16527;
	add.s64 	%rd16890, %rd16889, %rd16532;
	add.s64 	%rd16891, %rd16890, %rd16795;
	add.s64 	%rd16892, %rd16891, %rd16886;
	add.s64 	%rd16893, %rd16892, %rd16883;
	add.s64 	%rd16894, %rd16893, %rd16806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29178,%dummy}, %rd16878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29179}, %rd16878;
	}
	shf.r.wrap.b32 	%r29180, %r29179, %r29178, 28;
	shf.r.wrap.b32 	%r29181, %r29178, %r29179, 28;
	mov.b64 	%rd16895, {%r29181, %r29180};
	shf.l.wrap.b32 	%r29182, %r29178, %r29179, 30;
	shf.l.wrap.b32 	%r29183, %r29179, %r29178, 30;
	mov.b64 	%rd16896, {%r29183, %r29182};
	xor.b64  	%rd16897, %rd16896, %rd16895;
	shf.l.wrap.b32 	%r29184, %r29178, %r29179, 25;
	shf.l.wrap.b32 	%r29185, %r29179, %r29178, 25;
	mov.b64 	%rd16898, {%r29185, %r29184};
	xor.b64  	%rd16899, %rd16897, %rd16898;
	and.b64  	%rd16900, %rd16878, %rd16854;
	xor.b64  	%rd16901, %rd16878, %rd16854;
	and.b64  	%rd16902, %rd16901, %rd16830;
	or.b64  	%rd16903, %rd16902, %rd16900;
	add.s64 	%rd16904, %rd16893, %rd16903;
	add.s64 	%rd16905, %rd16904, %rd16899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29186,%dummy}, %rd16894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29187}, %rd16894;
	}
	shf.r.wrap.b32 	%r29188, %r29187, %r29186, 14;
	shf.r.wrap.b32 	%r29189, %r29186, %r29187, 14;
	mov.b64 	%rd16906, {%r29189, %r29188};
	shf.r.wrap.b32 	%r29190, %r29187, %r29186, 18;
	shf.r.wrap.b32 	%r29191, %r29186, %r29187, 18;
	mov.b64 	%rd16907, {%r29191, %r29190};
	xor.b64  	%rd16908, %rd16907, %rd16906;
	shf.l.wrap.b32 	%r29192, %r29186, %r29187, 23;
	shf.l.wrap.b32 	%r29193, %r29187, %r29186, 23;
	mov.b64 	%rd16909, {%r29193, %r29192};
	xor.b64  	%rd16910, %rd16908, %rd16909;
	xor.b64  	%rd16911, %rd16867, %rd16843;
	and.b64  	%rd16912, %rd16894, %rd16911;
	xor.b64  	%rd16913, %rd16912, %rd16843;
	add.s64 	%rd16914, %rd15956, %rd107;
	add.s64 	%rd16915, %rd16914, %rd16457;
	add.s64 	%rd16916, %rd16915, %rd16537;
	add.s64 	%rd16917, %rd16916, %rd16542;
	add.s64 	%rd16918, %rd16917, %rd16819;
	add.s64 	%rd16919, %rd16918, %rd16913;
	add.s64 	%rd16920, %rd16919, %rd16910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29194,%dummy}, %rd16905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29195}, %rd16905;
	}
	shf.r.wrap.b32 	%r29196, %r29195, %r29194, 28;
	shf.r.wrap.b32 	%r29197, %r29194, %r29195, 28;
	mov.b64 	%rd16921, {%r29197, %r29196};
	shf.l.wrap.b32 	%r29198, %r29194, %r29195, 30;
	shf.l.wrap.b32 	%r29199, %r29195, %r29194, 30;
	mov.b64 	%rd16922, {%r29199, %r29198};
	xor.b64  	%rd16923, %rd16922, %rd16921;
	shf.l.wrap.b32 	%r29200, %r29194, %r29195, 25;
	shf.l.wrap.b32 	%r29201, %r29195, %r29194, 25;
	mov.b64 	%rd16924, {%r29201, %r29200};
	xor.b64  	%rd16925, %rd16923, %rd16924;
	and.b64  	%rd16926, %rd16905, %rd16878;
	xor.b64  	%rd16927, %rd16905, %rd16878;
	and.b64  	%rd16928, %rd16927, %rd16854;
	or.b64  	%rd16929, %rd16928, %rd16926;
	add.s64 	%rd16930, %rd16929, %rd14191;
	add.s64 	%rd16931, %rd16930, %rd16920;
	add.s64 	%rd16932, %rd16931, %rd16925;
	st.local.u64 	[%rd9], %rd16932;
	add.s64 	%rd16933, %rd16905, %rd14197;
	st.local.u64 	[%rd9+8], %rd16933;
	add.s64 	%rd16934, %rd16878, %rd14200;
	st.local.u64 	[%rd9+16], %rd16934;
	add.s64 	%rd16935, %rd16854, %rd14189;
	st.local.u64 	[%rd9+24], %rd16935;
	add.s64 	%rd16936, %rd16830, %rd14173;
	add.s64 	%rd16937, %rd16936, %rd16920;
	st.local.u64 	[%rd9+32], %rd16937;
	add.s64 	%rd16938, %rd16894, %rd14180;
	st.local.u64 	[%rd9+40], %rd16938;
	add.s64 	%rd16939, %rd16867, %rd14179;
	st.local.u64 	[%rd9+48], %rd16939;
	add.s64 	%rd23217, %rd16843, %rd14185;
	mov.u32 	%r39419, %r39420;
	mov.u32 	%r39418, %r39420;
	mov.u32 	%r39417, %r39420;
	mov.u32 	%r39424, %r39420;
	mov.u32 	%r39423, %r39420;
	mov.u32 	%r39422, %r39420;
	mov.u32 	%r39421, %r39420;
	mov.u32 	%r39428, %r39420;
	mov.u32 	%r39427, %r39420;
	mov.u32 	%r39426, %r39420;
	mov.u32 	%r39425, %r39420;
	mov.u32 	%r39432, %r39420;
	mov.u32 	%r39431, %r39420;
	mov.u32 	%r39430, %r39420;
	mov.u32 	%r39429, %r39420;
	mov.u32 	%r39436, %r39420;
	mov.u32 	%r39435, %r39420;
	mov.u32 	%r39434, %r39420;
	mov.u32 	%r39433, %r39420;
	mov.u32 	%r39440, %r39420;
	mov.u32 	%r39439, %r39420;
	mov.u32 	%r39438, %r39420;
	mov.u32 	%r39437, %r39420;
	mov.u32 	%r39444, %r39420;
	mov.u32 	%r39443, %r39420;
	mov.u32 	%r39442, %r39420;
	mov.u32 	%r39441, %r39420;
	mov.u32 	%r39448, %r39420;
	mov.u32 	%r39447, %r39420;
	mov.u32 	%r39446, %r39420;
	mov.u32 	%r39445, %r39420;
	bra.uni 	BB1_310;

BB1_221:
	shr.u32 	%r19961, %r1950, 2;
	and.b32  	%r19962, %r1949, 3;
	shl.b32 	%r19963, %r19962, 2;
	mov.u32 	%r19964, 1985229328;
	shr.u32 	%r19965, %r19964, %r19963;
	and.b32  	%r1951, %r19965, 65535;
	mov.u32 	%r39417, 0;
	setp.gt.s32	%p116, %r19961, 15;
	@%p116 bra 	BB1_254;

	setp.gt.s32	%p140, %r19961, 7;
	@%p140 bra 	BB1_239;

	setp.gt.s32	%p152, %r19961, 3;
	@%p152 bra 	BB1_231;

	setp.gt.s32	%p158, %r19961, 1;
	@%p158 bra 	BB1_228;

	setp.eq.s32	%p161, %r19961, 0;
	@%p161 bra 	BB1_306;
	bra.uni 	BB1_226;

BB1_306:
	mov.u32 	%r39417, 0;
	// inline asm
	prmt.b32 %r39420, %r39417, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39385, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39386, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39387, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39388, %r19864, %r39417, %r1951;
	// inline asm
	mov.u32 	%r39418, %r39417;
	mov.u32 	%r39419, %r39417;
	bra.uni 	BB1_307;

BB1_254:
	setp.gt.s32	%p117, %r19961, 23;
	@%p117 bra 	BB1_270;

	setp.gt.s32	%p129, %r19961, 19;
	@%p129 bra 	BB1_263;

	setp.gt.s32	%p135, %r19961, 17;
	@%p135 bra 	BB1_260;

	setp.eq.s32	%p138, %r19961, 16;
	@%p138 bra 	BB1_293;
	bra.uni 	BB1_258;

BB1_293:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39436, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39433, %r39385;
	mov.u32 	%r39434, %r39385;
	mov.u32 	%r39435, %r39385;
	bra.uni 	BB1_300;

BB1_239:
	setp.gt.s32	%p141, %r19961, 11;
	@%p141 bra 	BB1_247;

	setp.gt.s32	%p147, %r19961, 9;
	@%p147 bra 	BB1_244;

	setp.eq.s32	%p150, %r19961, 8;
	@%p150 bra 	BB1_297;
	bra.uni 	BB1_242;

BB1_297:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39428, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39425, %r39385;
	mov.u32 	%r39426, %r39385;
	mov.u32 	%r39427, %r39385;
	bra.uni 	BB1_298;

BB1_270:
	setp.gt.s32	%p118, %r19961, 27;
	@%p118 bra 	BB1_278;

	setp.gt.s32	%p124, %r19961, 25;
	@%p124 bra 	BB1_275;

	setp.eq.s32	%p127, %r19961, 24;
	@%p127 bra 	BB1_289;
	bra.uni 	BB1_273;

BB1_289:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39444, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39441, %r39385;
	mov.u32 	%r39442, %r39385;
	mov.u32 	%r39443, %r39385;
	bra.uni 	BB1_302;

BB1_231:
	setp.gt.s32	%p153, %r19961, 5;
	@%p153 bra 	BB1_235;

	setp.eq.s32	%p156, %r19961, 4;
	@%p156 bra 	BB1_304;
	bra.uni 	BB1_233;

BB1_304:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39424, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39421, %r39385;
	mov.u32 	%r39422, %r39385;
	mov.u32 	%r39423, %r39385;
	bra.uni 	BB1_238;

BB1_263:
	setp.gt.s32	%p130, %r19961, 21;
	@%p130 bra 	BB1_267;

	setp.eq.s32	%p133, %r19961, 20;
	@%p133 bra 	BB1_291;
	bra.uni 	BB1_265;

BB1_291:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39440, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39437, %r39385;
	mov.u32 	%r39438, %r39385;
	mov.u32 	%r39439, %r39385;
	bra.uni 	BB1_301;

BB1_247:
	setp.gt.s32	%p142, %r19961, 13;
	@%p142 bra 	BB1_251;

	setp.eq.s32	%p145, %r19961, 12;
	@%p145 bra 	BB1_295;
	bra.uni 	BB1_249;

BB1_295:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39432, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39429, %r39385;
	mov.u32 	%r39430, %r39385;
	mov.u32 	%r39431, %r39385;
	bra.uni 	BB1_299;

BB1_278:
	setp.gt.s32	%p119, %r19961, 29;
	@%p119 bra 	BB1_282;

	setp.eq.s32	%p122, %r19961, 28;
	@%p122 bra 	BB1_287;
	bra.uni 	BB1_280;

BB1_287:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39448, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39441, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39442, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39409, %r39385;
	mov.u32 	%r39410, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39445, %r39385;
	mov.u32 	%r39446, %r39385;
	mov.u32 	%r39447, %r39385;
	bra.uni 	BB1_308;

BB1_228:
	setp.eq.s32	%p159, %r19961, 2;
	@%p159 bra 	BB1_305;
	bra.uni 	BB1_229;

BB1_305:
	mov.u32 	%r39387, 0;
	// inline asm
	prmt.b32 %r39418, %r39387, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39385, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39386, %r19864, %r39387, %r1951;
	// inline asm
	mov.u32 	%r39388, %r39387;
	mov.u32 	%r39417, %r39387;
	mov.u32 	%r39421, %r39387;
	mov.u32 	%r39422, %r39387;
	mov.u32 	%r39423, %r39387;
	mov.u32 	%r39424, %r39387;
	mov.u32 	%r39425, %r39387;
	mov.u32 	%r39426, %r39387;
	mov.u32 	%r39427, %r39387;
	mov.u32 	%r39428, %r39387;
	mov.u32 	%r39429, %r39387;
	mov.u32 	%r39430, %r39387;
	mov.u32 	%r39431, %r39387;
	mov.u32 	%r39432, %r39387;
	mov.u32 	%r39433, %r39387;
	mov.u32 	%r39434, %r39387;
	mov.u32 	%r39435, %r39387;
	mov.u32 	%r39436, %r39387;
	mov.u32 	%r39437, %r39387;
	mov.u32 	%r39438, %r39387;
	mov.u32 	%r39439, %r39387;
	mov.u32 	%r39440, %r39387;
	mov.u32 	%r39441, %r39387;
	mov.u32 	%r39442, %r39387;
	mov.u32 	%r39443, %r39387;
	mov.u32 	%r39444, %r39387;
	mov.u32 	%r39445, %r39387;
	mov.u32 	%r39446, %r39387;
	mov.u32 	%r39447, %r39387;
	mov.u32 	%r39448, %r39387;
	bra.uni 	BB1_308;

BB1_260:
	setp.eq.s32	%p136, %r19961, 18;
	@%p136 bra 	BB1_292;
	bra.uni 	BB1_261;

BB1_292:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39434, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39433, %r39385;
	bra.uni 	BB1_300;

BB1_244:
	setp.eq.s32	%p148, %r19961, 10;
	@%p148 bra 	BB1_296;
	bra.uni 	BB1_245;

BB1_296:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39426, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39425, %r39385;
	bra.uni 	BB1_298;

BB1_275:
	setp.eq.s32	%p125, %r19961, 26;
	@%p125 bra 	BB1_288;
	bra.uni 	BB1_276;

BB1_288:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39442, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39441, %r39385;
	bra.uni 	BB1_302;

BB1_235:
	setp.eq.s32	%p154, %r19961, 6;
	@%p154 bra 	BB1_303;
	bra.uni 	BB1_236;

BB1_303:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39422, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39421, %r39385;
	bra.uni 	BB1_238;

BB1_267:
	setp.eq.s32	%p131, %r19961, 22;
	@%p131 bra 	BB1_290;
	bra.uni 	BB1_268;

BB1_290:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39438, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39437, %r39385;
	bra.uni 	BB1_301;

BB1_251:
	setp.eq.s32	%p143, %r19961, 14;
	@%p143 bra 	BB1_294;
	bra.uni 	BB1_252;

BB1_294:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39430, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39429, %r39385;
	bra.uni 	BB1_299;

BB1_282:
	setp.eq.s32	%p120, %r19961, 30;
	@%p120 bra 	BB1_286;
	bra.uni 	BB1_283;

BB1_286:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39446, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39447, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39448, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39441, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39442, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39409, %r39385;
	mov.u32 	%r39410, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39415, %r39385;
	mov.u32 	%r39416, %r39385;
	mov.u32 	%r39445, %r39385;
	bra.uni 	BB1_308;

BB1_226:
	setp.eq.s32	%p162, %r19961, 1;
	@%p162 bra 	BB1_227;
	bra.uni 	BB1_284;

BB1_227:
	mov.u32 	%r39388, 0;
	// inline asm
	prmt.b32 %r39419, %r39388, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39385, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39386, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39387, %r19864, %r39388, %r1951;
	// inline asm
	mov.u32 	%r39417, %r39388;
	mov.u32 	%r39418, %r39388;
	mov.u32 	%r39421, %r39388;
	mov.u32 	%r39422, %r39388;
	mov.u32 	%r39423, %r39388;
	mov.u32 	%r39424, %r39388;
	mov.u32 	%r39425, %r39388;
	mov.u32 	%r39426, %r39388;
	mov.u32 	%r39427, %r39388;
	mov.u32 	%r39428, %r39388;
	mov.u32 	%r39429, %r39388;
	mov.u32 	%r39430, %r39388;
	mov.u32 	%r39431, %r39388;
	mov.u32 	%r39432, %r39388;
	mov.u32 	%r39433, %r39388;
	mov.u32 	%r39434, %r39388;
	mov.u32 	%r39435, %r39388;
	mov.u32 	%r39436, %r39388;
	mov.u32 	%r39437, %r39388;
	mov.u32 	%r39438, %r39388;
	mov.u32 	%r39439, %r39388;
	mov.u32 	%r39440, %r39388;
	mov.u32 	%r39441, %r39388;
	mov.u32 	%r39442, %r39388;
	mov.u32 	%r39443, %r39388;
	mov.u32 	%r39444, %r39388;
	mov.u32 	%r39445, %r39388;
	mov.u32 	%r39446, %r39388;
	mov.u32 	%r39447, %r39388;
	mov.u32 	%r39448, %r39388;
	bra.uni 	BB1_308;

BB1_258:
	setp.eq.s32	%p139, %r19961, 17;
	@%p139 bra 	BB1_259;
	bra.uni 	BB1_284;

BB1_259:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39435, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39433, %r39385;
	mov.u32 	%r39434, %r39385;
	bra.uni 	BB1_300;

BB1_242:
	setp.eq.s32	%p151, %r19961, 9;
	@%p151 bra 	BB1_243;
	bra.uni 	BB1_284;

BB1_243:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39427, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39425, %r39385;
	mov.u32 	%r39426, %r39385;
	bra.uni 	BB1_298;

BB1_273:
	setp.eq.s32	%p128, %r19961, 25;
	@%p128 bra 	BB1_274;
	bra.uni 	BB1_284;

BB1_274:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39443, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39441, %r39385;
	mov.u32 	%r39442, %r39385;
	bra.uni 	BB1_302;

BB1_233:
	setp.eq.s32	%p157, %r19961, 5;
	@%p157 bra 	BB1_234;
	bra.uni 	BB1_284;

BB1_234:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39423, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39421, %r39385;
	mov.u32 	%r39422, %r39385;
	bra.uni 	BB1_238;

BB1_265:
	setp.eq.s32	%p134, %r19961, 21;
	@%p134 bra 	BB1_266;
	bra.uni 	BB1_284;

BB1_266:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39439, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39437, %r39385;
	mov.u32 	%r39438, %r39385;
	bra.uni 	BB1_301;

BB1_249:
	setp.eq.s32	%p146, %r19961, 13;
	@%p146 bra 	BB1_250;
	bra.uni 	BB1_284;

BB1_250:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39431, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39429, %r39385;
	mov.u32 	%r39430, %r39385;
	bra.uni 	BB1_299;

BB1_280:
	setp.eq.s32	%p123, %r19961, 29;
	@%p123 bra 	BB1_281;
	bra.uni 	BB1_284;

BB1_281:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39447, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39448, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39441, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39442, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39409, %r39385;
	mov.u32 	%r39410, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39416, %r39385;
	mov.u32 	%r39445, %r39385;
	mov.u32 	%r39446, %r39385;
	bra.uni 	BB1_308;

BB1_229:
	setp.eq.s32	%p160, %r19961, 3;
	@%p160 bra 	BB1_230;
	bra.uni 	BB1_284;

BB1_230:
	mov.u32 	%r39386, 0;
	// inline asm
	prmt.b32 %r39417, %r39386, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39390, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39391, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39392, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39385, %r19864, %r39386, %r1951;
	// inline asm
	mov.u32 	%r39387, %r39386;
	mov.u32 	%r39388, %r39386;
	mov.u32 	%r39421, %r39386;
	mov.u32 	%r39422, %r39386;
	mov.u32 	%r39423, %r39386;
	mov.u32 	%r39424, %r39386;
	mov.u32 	%r39425, %r39386;
	mov.u32 	%r39426, %r39386;
	mov.u32 	%r39427, %r39386;
	mov.u32 	%r39428, %r39386;
	mov.u32 	%r39429, %r39386;
	mov.u32 	%r39430, %r39386;
	mov.u32 	%r39431, %r39386;
	mov.u32 	%r39432, %r39386;
	mov.u32 	%r39433, %r39386;
	mov.u32 	%r39434, %r39386;
	mov.u32 	%r39435, %r39386;
	mov.u32 	%r39436, %r39386;
	mov.u32 	%r39437, %r39386;
	mov.u32 	%r39438, %r39386;
	mov.u32 	%r39439, %r39386;
	mov.u32 	%r39440, %r39386;
	mov.u32 	%r39441, %r39386;
	mov.u32 	%r39442, %r39386;
	mov.u32 	%r39443, %r39386;
	mov.u32 	%r39444, %r39386;
	mov.u32 	%r39445, %r39386;
	mov.u32 	%r39446, %r39386;
	mov.u32 	%r39447, %r39386;
	mov.u32 	%r39448, %r39386;
	bra.uni 	BB1_308;

BB1_261:
	setp.eq.s32	%p137, %r19961, 19;
	@%p137 bra 	BB1_262;
	bra.uni 	BB1_284;

BB1_262:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39433, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	bra.uni 	BB1_300;

BB1_245:
	setp.eq.s32	%p149, %r19961, 11;
	@%p149 bra 	BB1_246;
	bra.uni 	BB1_284;

BB1_246:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39425, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	bra.uni 	BB1_298;

BB1_276:
	setp.eq.s32	%p126, %r19961, 27;
	@%p126 bra 	BB1_277;
	bra.uni 	BB1_284;

BB1_277:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39441, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39442, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39410, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	bra.uni 	BB1_302;

BB1_236:
	setp.eq.s32	%p155, %r19961, 7;
	@%p155 bra 	BB1_237;
	bra.uni 	BB1_284;

BB1_237:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39421, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39398, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39399, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39400, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39393, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39394, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39395, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39396, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39389, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;

BB1_238:
	mov.u32 	%r39425, %r39385;
	mov.u32 	%r39426, %r39385;
	mov.u32 	%r39427, %r39385;
	mov.u32 	%r39428, %r39385;

BB1_298:
	mov.u32 	%r39429, %r39385;
	mov.u32 	%r39430, %r39385;
	mov.u32 	%r39431, %r39385;
	mov.u32 	%r39432, %r39385;

BB1_299:
	mov.u32 	%r39433, %r39385;
	mov.u32 	%r39434, %r39385;
	mov.u32 	%r39435, %r39385;
	mov.u32 	%r39436, %r39385;

BB1_300:
	mov.u32 	%r39437, %r39385;
	mov.u32 	%r39438, %r39385;
	mov.u32 	%r39439, %r39385;
	mov.u32 	%r39440, %r39385;

BB1_301:
	mov.u32 	%r39441, %r39385;
	mov.u32 	%r39442, %r39385;
	mov.u32 	%r39443, %r39385;
	mov.u32 	%r39444, %r39385;

BB1_302:
	mov.u32 	%r39445, %r39385;
	mov.u32 	%r39446, %r39385;
	mov.u32 	%r39447, %r39385;
	mov.u32 	%r39448, %r39385;
	bra.uni 	BB1_308;

BB1_268:
	setp.eq.s32	%p132, %r19961, 23;
	@%p132 bra 	BB1_269;
	bra.uni 	BB1_284;

BB1_269:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39437, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	bra.uni 	BB1_301;

BB1_252:
	setp.eq.s32	%p144, %r19961, 15;
	@%p144 bra 	BB1_253;
	bra.uni 	BB1_284;

BB1_253:
	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39429, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39414, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39415, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39416, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39409, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39410, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39411, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39412, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39405, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39406, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39407, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39408, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39401, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39402, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39403, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39404, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39397, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	bra.uni 	BB1_299;

BB1_283:
	setp.ne.s32	%p121, %r19961, 31;
	@%p121 bra 	BB1_284;

	mov.u32 	%r39385, 0;
	// inline asm
	prmt.b32 %r39445, %r39385, %r39413, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39446, %r39413, %r39414, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39447, %r39414, %r39415, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39448, %r39415, %r39416, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39441, %r39416, %r39409, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39442, %r39409, %r39410, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39443, %r39410, %r39411, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39444, %r39411, %r39412, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39437, %r39412, %r39405, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39438, %r39405, %r39406, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39439, %r39406, %r39407, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39440, %r39407, %r39408, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39433, %r39408, %r39401, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39434, %r39401, %r39402, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39435, %r39402, %r39403, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39436, %r39403, %r39404, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39429, %r39404, %r39397, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39430, %r39397, %r39398, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39431, %r39398, %r39399, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39432, %r39399, %r39400, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39425, %r39400, %r39393, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39426, %r39393, %r39394, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39427, %r39394, %r39395, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39428, %r39395, %r39396, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39421, %r39396, %r39389, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39422, %r39389, %r39390, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39423, %r39390, %r39391, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39424, %r39391, %r39392, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39417, %r39392, %r19870, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39418, %r19870, %r19868, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39419, %r19868, %r19866, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39420, %r19866, %r19864, %r1951;
	// inline asm
	// inline asm
	prmt.b32 %r39413, %r19864, %r39385, %r1951;
	// inline asm
	mov.u32 	%r39386, %r39385;
	mov.u32 	%r39387, %r39385;
	mov.u32 	%r39388, %r39385;
	mov.u32 	%r39389, %r39385;
	mov.u32 	%r39390, %r39385;
	mov.u32 	%r39391, %r39385;
	mov.u32 	%r39392, %r39385;
	mov.u32 	%r39393, %r39385;
	mov.u32 	%r39394, %r39385;
	mov.u32 	%r39395, %r39385;
	mov.u32 	%r39396, %r39385;
	mov.u32 	%r39397, %r39385;
	mov.u32 	%r39398, %r39385;
	mov.u32 	%r39399, %r39385;
	mov.u32 	%r39400, %r39385;
	mov.u32 	%r39401, %r39385;
	mov.u32 	%r39402, %r39385;
	mov.u32 	%r39403, %r39385;
	mov.u32 	%r39404, %r39385;
	mov.u32 	%r39405, %r39385;
	mov.u32 	%r39406, %r39385;
	mov.u32 	%r39407, %r39385;
	mov.u32 	%r39408, %r39385;
	mov.u32 	%r39409, %r39385;
	mov.u32 	%r39410, %r39385;
	mov.u32 	%r39411, %r39385;
	mov.u32 	%r39412, %r39385;
	mov.u32 	%r39414, %r39385;
	mov.u32 	%r39415, %r39385;
	mov.u32 	%r39416, %r39385;
	bra.uni 	BB1_308;

BB1_284:
	mov.u32 	%r39385, %r19870;
	mov.u32 	%r39386, %r19868;
	mov.u32 	%r39387, %r19866;
	mov.u32 	%r39388, %r19864;
	mov.u32 	%r39418, %r39417;
	mov.u32 	%r39419, %r39417;
	mov.u32 	%r39420, %r39417;

BB1_307:
	mov.u32 	%r39421, %r39417;
	mov.u32 	%r39422, %r39417;
	mov.u32 	%r39423, %r39417;
	mov.u32 	%r39424, %r39417;
	mov.u32 	%r39425, %r39417;
	mov.u32 	%r39426, %r39417;
	mov.u32 	%r39427, %r39417;
	mov.u32 	%r39428, %r39417;
	mov.u32 	%r39429, %r39417;
	mov.u32 	%r39430, %r39417;
	mov.u32 	%r39431, %r39417;
	mov.u32 	%r39432, %r39417;
	mov.u32 	%r39433, %r39417;
	mov.u32 	%r39434, %r39417;
	mov.u32 	%r39435, %r39417;
	mov.u32 	%r39436, %r39417;
	mov.u32 	%r39437, %r39417;
	mov.u32 	%r39438, %r39417;
	mov.u32 	%r39439, %r39417;
	mov.u32 	%r39440, %r39417;
	mov.u32 	%r39441, %r39417;
	mov.u32 	%r39442, %r39417;
	mov.u32 	%r39443, %r39417;
	mov.u32 	%r39444, %r39417;
	mov.u32 	%r39445, %r39417;
	mov.u32 	%r39446, %r39417;
	mov.u32 	%r39447, %r39417;
	mov.u32 	%r39448, %r39417;

BB1_308:
	ld.local.v2.u32 	{%r25182, %r25183}, [%rd9+64];
	or.b32  	%r25186, %r25183, %r39387;
	or.b32  	%r25187, %r25182, %r39388;
	st.local.v2.u32 	[%rd9+64], {%r25187, %r25186};
	ld.local.v2.u32 	{%r25188, %r25189}, [%rd9+72];
	or.b32  	%r25192, %r25189, %r39385;
	or.b32  	%r25193, %r25188, %r39386;
	st.local.v2.u32 	[%rd9+72], {%r25193, %r25192};
	ld.local.v2.u32 	{%r25194, %r25195}, [%rd9+80];
	or.b32  	%r25198, %r25195, %r39391;
	or.b32  	%r25199, %r25194, %r39392;
	st.local.v2.u32 	[%rd9+80], {%r25199, %r25198};
	ld.local.v2.u32 	{%r25200, %r25201}, [%rd9+88];
	or.b32  	%r25204, %r25201, %r39389;
	or.b32  	%r25205, %r25200, %r39390;
	st.local.v2.u32 	[%rd9+88], {%r25205, %r25204};
	ld.local.v2.u32 	{%r25206, %r25207}, [%rd9+96];
	or.b32  	%r25210, %r25207, %r39395;
	or.b32  	%r25211, %r25206, %r39396;
	st.local.v2.u32 	[%rd9+96], {%r25211, %r25210};
	ld.local.v2.u32 	{%r25212, %r25213}, [%rd9+104];
	or.b32  	%r25216, %r25213, %r39393;
	or.b32  	%r25217, %r25212, %r39394;
	st.local.v2.u32 	[%rd9+104], {%r25217, %r25216};
	ld.local.v2.u32 	{%r25218, %r25219}, [%rd9+112];
	or.b32  	%r25222, %r25219, %r39399;
	or.b32  	%r25223, %r25218, %r39400;
	st.local.v2.u32 	[%rd9+112], {%r25223, %r25222};
	ld.local.v2.u32 	{%r25224, %r25225}, [%rd9+120];
	or.b32  	%r25228, %r25225, %r39397;
	or.b32  	%r25229, %r25224, %r39398;
	st.local.v2.u32 	[%rd9+120], {%r25229, %r25228};
	ld.local.v2.u32 	{%r25230, %r25231}, [%rd9+128];
	or.b32  	%r25234, %r25231, %r39403;
	or.b32  	%r25235, %r25230, %r39404;
	st.local.v2.u32 	[%rd9+128], {%r25235, %r25234};
	ld.local.v2.u32 	{%r25236, %r25237}, [%rd9+136];
	or.b32  	%r25240, %r25237, %r39401;
	or.b32  	%r25241, %r25236, %r39402;
	st.local.v2.u32 	[%rd9+136], {%r25241, %r25240};
	ld.local.v2.u32 	{%r25242, %r25243}, [%rd9+144];
	or.b32  	%r25246, %r25243, %r39407;
	or.b32  	%r25247, %r25242, %r39408;
	st.local.v2.u32 	[%rd9+144], {%r25247, %r25246};
	ld.local.v2.u32 	{%r25248, %r25249}, [%rd9+152];
	or.b32  	%r25252, %r25249, %r39405;
	or.b32  	%r25253, %r25248, %r39406;
	st.local.v2.u32 	[%rd9+152], {%r25253, %r25252};
	ld.local.v2.u32 	{%r25254, %r25255}, [%rd9+160];
	or.b32  	%r25258, %r25255, %r39411;
	or.b32  	%r25259, %r25254, %r39412;
	st.local.v2.u32 	[%rd9+160], {%r25259, %r25258};
	ld.local.v2.u32 	{%r25260, %r25261}, [%rd9+168];
	or.b32  	%r25264, %r25261, %r39409;
	or.b32  	%r25265, %r25260, %r39410;
	st.local.v2.u32 	[%rd9+168], {%r25265, %r25264};
	ld.local.v2.u32 	{%r25266, %r25267}, [%rd9+176];
	or.b32  	%r25270, %r25267, %r39415;
	or.b32  	%r25271, %r25266, %r39416;
	st.local.v2.u32 	[%rd9+176], {%r25271, %r25270};
	ld.local.v2.u32 	{%r25272, %r25273}, [%rd9+184];
	or.b32  	%r25276, %r25273, %r39413;
	or.b32  	%r25277, %r25272, %r39414;
	st.local.v2.u32 	[%rd9+184], {%r25277, %r25276};
	mov.b64	%rd11374, {%r25186, %r25187};
	mov.b64	%rd11375, {%r25192, %r25193};
	mov.b64	%rd11376, {%r25198, %r25199};
	mov.b64	%rd11377, {%r25204, %r25205};
	mov.b64	%rd11378, {%r25210, %r25211};
	mov.b64	%rd11379, {%r25216, %r25217};
	mov.b64	%rd11380, {%r25222, %r25223};
	mov.b64	%rd11381, {%r25228, %r25229};
	mov.b64	%rd11382, {%r25234, %r25235};
	mov.b64	%rd11383, {%r25240, %r25241};
	mov.b64	%rd11384, {%r25246, %r25247};
	mov.b64	%rd11385, {%r25252, %r25253};
	mov.b64	%rd11386, {%r25258, %r25259};
	mov.b64	%rd11387, {%r25264, %r25265};
	mov.b64	%rd11388, {%r25270, %r25271};
	mov.b64	%rd11389, {%r25276, %r25277};
	ld.local.u64 	%rd11390, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25278,%dummy}, %rd11390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25279}, %rd11390;
	}
	shf.r.wrap.b32 	%r25280, %r25279, %r25278, 14;
	shf.r.wrap.b32 	%r25281, %r25278, %r25279, 14;
	mov.b64 	%rd11391, {%r25281, %r25280};
	shf.r.wrap.b32 	%r25282, %r25279, %r25278, 18;
	shf.r.wrap.b32 	%r25283, %r25278, %r25279, 18;
	mov.b64 	%rd11392, {%r25283, %r25282};
	xor.b64  	%rd11393, %rd11392, %rd11391;
	shf.l.wrap.b32 	%r25284, %r25278, %r25279, 23;
	shf.l.wrap.b32 	%r25285, %r25279, %r25278, 23;
	mov.b64 	%rd11394, {%r25285, %r25284};
	xor.b64  	%rd11395, %rd11393, %rd11394;
	ld.local.u64 	%rd11396, [%rd9+48];
	ld.local.u64 	%rd11397, [%rd9+40];
	xor.b64  	%rd11398, %rd11396, %rd11397;
	and.b64  	%rd11399, %rd11398, %rd11390;
	xor.b64  	%rd11400, %rd11399, %rd11396;
	add.s64 	%rd11401, %rd11374, %rd28;
	ld.local.u64 	%rd11402, [%rd9+56];
	add.s64 	%rd11403, %rd11401, %rd11402;
	add.s64 	%rd11404, %rd11403, %rd11400;
	add.s64 	%rd11405, %rd11404, %rd11395;
	ld.local.u64 	%rd11406, [%rd9+24];
	add.s64 	%rd11407, %rd11405, %rd11406;
	ld.local.u64 	%rd11408, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25286,%dummy}, %rd11408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25287}, %rd11408;
	}
	shf.r.wrap.b32 	%r25288, %r25287, %r25286, 28;
	shf.r.wrap.b32 	%r25289, %r25286, %r25287, 28;
	mov.b64 	%rd11409, {%r25289, %r25288};
	shf.l.wrap.b32 	%r25290, %r25286, %r25287, 30;
	shf.l.wrap.b32 	%r25291, %r25287, %r25286, 30;
	mov.b64 	%rd11410, {%r25291, %r25290};
	xor.b64  	%rd11411, %rd11410, %rd11409;
	shf.l.wrap.b32 	%r25292, %r25286, %r25287, 25;
	shf.l.wrap.b32 	%r25293, %r25287, %r25286, 25;
	mov.b64 	%rd11412, {%r25293, %r25292};
	xor.b64  	%rd11413, %rd11411, %rd11412;
	ld.local.u64 	%rd11414, [%rd9+8];
	and.b64  	%rd11415, %rd11414, %rd11408;
	xor.b64  	%rd11416, %rd11414, %rd11408;
	ld.local.u64 	%rd11417, [%rd9+16];
	and.b64  	%rd11418, %rd11417, %rd11416;
	or.b64  	%rd11419, %rd11418, %rd11415;
	add.s64 	%rd11420, %rd11405, %rd11419;
	add.s64 	%rd11421, %rd11420, %rd11413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25294,%dummy}, %rd11407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25295}, %rd11407;
	}
	shf.r.wrap.b32 	%r25296, %r25295, %r25294, 14;
	shf.r.wrap.b32 	%r25297, %r25294, %r25295, 14;
	mov.b64 	%rd11422, {%r25297, %r25296};
	shf.r.wrap.b32 	%r25298, %r25295, %r25294, 18;
	shf.r.wrap.b32 	%r25299, %r25294, %r25295, 18;
	mov.b64 	%rd11423, {%r25299, %r25298};
	xor.b64  	%rd11424, %rd11423, %rd11422;
	shf.l.wrap.b32 	%r25300, %r25294, %r25295, 23;
	shf.l.wrap.b32 	%r25301, %r25295, %r25294, 23;
	mov.b64 	%rd11425, {%r25301, %r25300};
	xor.b64  	%rd11426, %rd11424, %rd11425;
	xor.b64  	%rd11427, %rd11397, %rd11390;
	and.b64  	%rd11428, %rd11407, %rd11427;
	xor.b64  	%rd11429, %rd11428, %rd11397;
	add.s64 	%rd11430, %rd11375, %rd29;
	add.s64 	%rd11431, %rd11430, %rd11396;
	add.s64 	%rd11432, %rd11431, %rd11429;
	add.s64 	%rd11433, %rd11432, %rd11426;
	add.s64 	%rd11434, %rd11433, %rd11417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25302,%dummy}, %rd11421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25303}, %rd11421;
	}
	shf.r.wrap.b32 	%r25304, %r25303, %r25302, 28;
	shf.r.wrap.b32 	%r25305, %r25302, %r25303, 28;
	mov.b64 	%rd11435, {%r25305, %r25304};
	shf.l.wrap.b32 	%r25306, %r25302, %r25303, 30;
	shf.l.wrap.b32 	%r25307, %r25303, %r25302, 30;
	mov.b64 	%rd11436, {%r25307, %r25306};
	xor.b64  	%rd11437, %rd11436, %rd11435;
	shf.l.wrap.b32 	%r25308, %r25302, %r25303, 25;
	shf.l.wrap.b32 	%r25309, %r25303, %r25302, 25;
	mov.b64 	%rd11438, {%r25309, %r25308};
	xor.b64  	%rd11439, %rd11437, %rd11438;
	and.b64  	%rd11440, %rd11421, %rd11408;
	xor.b64  	%rd11441, %rd11421, %rd11408;
	and.b64  	%rd11442, %rd11441, %rd11414;
	or.b64  	%rd11443, %rd11442, %rd11440;
	add.s64 	%rd11444, %rd11433, %rd11443;
	add.s64 	%rd11445, %rd11444, %rd11439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25310,%dummy}, %rd11434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25311}, %rd11434;
	}
	shf.r.wrap.b32 	%r25312, %r25311, %r25310, 14;
	shf.r.wrap.b32 	%r25313, %r25310, %r25311, 14;
	mov.b64 	%rd11446, {%r25313, %r25312};
	shf.r.wrap.b32 	%r25314, %r25311, %r25310, 18;
	shf.r.wrap.b32 	%r25315, %r25310, %r25311, 18;
	mov.b64 	%rd11447, {%r25315, %r25314};
	xor.b64  	%rd11448, %rd11447, %rd11446;
	shf.l.wrap.b32 	%r25316, %r25310, %r25311, 23;
	shf.l.wrap.b32 	%r25317, %r25311, %r25310, 23;
	mov.b64 	%rd11449, {%r25317, %r25316};
	xor.b64  	%rd11450, %rd11448, %rd11449;
	xor.b64  	%rd11451, %rd11407, %rd11390;
	and.b64  	%rd11452, %rd11434, %rd11451;
	xor.b64  	%rd11453, %rd11452, %rd11390;
	add.s64 	%rd11454, %rd11376, %rd30;
	add.s64 	%rd11455, %rd11454, %rd11397;
	add.s64 	%rd11456, %rd11455, %rd11453;
	add.s64 	%rd11457, %rd11456, %rd11450;
	add.s64 	%rd11458, %rd11457, %rd11414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25318,%dummy}, %rd11445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25319}, %rd11445;
	}
	shf.r.wrap.b32 	%r25320, %r25319, %r25318, 28;
	shf.r.wrap.b32 	%r25321, %r25318, %r25319, 28;
	mov.b64 	%rd11459, {%r25321, %r25320};
	shf.l.wrap.b32 	%r25322, %r25318, %r25319, 30;
	shf.l.wrap.b32 	%r25323, %r25319, %r25318, 30;
	mov.b64 	%rd11460, {%r25323, %r25322};
	xor.b64  	%rd11461, %rd11460, %rd11459;
	shf.l.wrap.b32 	%r25324, %r25318, %r25319, 25;
	shf.l.wrap.b32 	%r25325, %r25319, %r25318, 25;
	mov.b64 	%rd11462, {%r25325, %r25324};
	xor.b64  	%rd11463, %rd11461, %rd11462;
	and.b64  	%rd11464, %rd11445, %rd11421;
	xor.b64  	%rd11465, %rd11445, %rd11421;
	and.b64  	%rd11466, %rd11465, %rd11408;
	or.b64  	%rd11467, %rd11466, %rd11464;
	add.s64 	%rd11468, %rd11457, %rd11467;
	add.s64 	%rd11469, %rd11468, %rd11463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25326,%dummy}, %rd11458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25327}, %rd11458;
	}
	shf.r.wrap.b32 	%r25328, %r25327, %r25326, 14;
	shf.r.wrap.b32 	%r25329, %r25326, %r25327, 14;
	mov.b64 	%rd11470, {%r25329, %r25328};
	shf.r.wrap.b32 	%r25330, %r25327, %r25326, 18;
	shf.r.wrap.b32 	%r25331, %r25326, %r25327, 18;
	mov.b64 	%rd11471, {%r25331, %r25330};
	xor.b64  	%rd11472, %rd11471, %rd11470;
	shf.l.wrap.b32 	%r25332, %r25326, %r25327, 23;
	shf.l.wrap.b32 	%r25333, %r25327, %r25326, 23;
	mov.b64 	%rd11473, {%r25333, %r25332};
	xor.b64  	%rd11474, %rd11472, %rd11473;
	xor.b64  	%rd11475, %rd11434, %rd11407;
	and.b64  	%rd11476, %rd11458, %rd11475;
	xor.b64  	%rd11477, %rd11476, %rd11407;
	add.s64 	%rd11478, %rd11377, %rd31;
	add.s64 	%rd11479, %rd11478, %rd11390;
	add.s64 	%rd11480, %rd11479, %rd11477;
	add.s64 	%rd11481, %rd11480, %rd11474;
	add.s64 	%rd11482, %rd11481, %rd11408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25334,%dummy}, %rd11469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25335}, %rd11469;
	}
	shf.r.wrap.b32 	%r25336, %r25335, %r25334, 28;
	shf.r.wrap.b32 	%r25337, %r25334, %r25335, 28;
	mov.b64 	%rd11483, {%r25337, %r25336};
	shf.l.wrap.b32 	%r25338, %r25334, %r25335, 30;
	shf.l.wrap.b32 	%r25339, %r25335, %r25334, 30;
	mov.b64 	%rd11484, {%r25339, %r25338};
	xor.b64  	%rd11485, %rd11484, %rd11483;
	shf.l.wrap.b32 	%r25340, %r25334, %r25335, 25;
	shf.l.wrap.b32 	%r25341, %r25335, %r25334, 25;
	mov.b64 	%rd11486, {%r25341, %r25340};
	xor.b64  	%rd11487, %rd11485, %rd11486;
	and.b64  	%rd11488, %rd11469, %rd11445;
	xor.b64  	%rd11489, %rd11469, %rd11445;
	and.b64  	%rd11490, %rd11489, %rd11421;
	or.b64  	%rd11491, %rd11490, %rd11488;
	add.s64 	%rd11492, %rd11481, %rd11491;
	add.s64 	%rd11493, %rd11492, %rd11487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25342,%dummy}, %rd11482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25343}, %rd11482;
	}
	shf.r.wrap.b32 	%r25344, %r25343, %r25342, 14;
	shf.r.wrap.b32 	%r25345, %r25342, %r25343, 14;
	mov.b64 	%rd11494, {%r25345, %r25344};
	shf.r.wrap.b32 	%r25346, %r25343, %r25342, 18;
	shf.r.wrap.b32 	%r25347, %r25342, %r25343, 18;
	mov.b64 	%rd11495, {%r25347, %r25346};
	xor.b64  	%rd11496, %rd11495, %rd11494;
	shf.l.wrap.b32 	%r25348, %r25342, %r25343, 23;
	shf.l.wrap.b32 	%r25349, %r25343, %r25342, 23;
	mov.b64 	%rd11497, {%r25349, %r25348};
	xor.b64  	%rd11498, %rd11496, %rd11497;
	xor.b64  	%rd11499, %rd11458, %rd11434;
	and.b64  	%rd11500, %rd11482, %rd11499;
	xor.b64  	%rd11501, %rd11500, %rd11434;
	add.s64 	%rd11502, %rd11378, %rd32;
	add.s64 	%rd11503, %rd11502, %rd11407;
	add.s64 	%rd11504, %rd11503, %rd11501;
	add.s64 	%rd11505, %rd11504, %rd11498;
	add.s64 	%rd11506, %rd11505, %rd11421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25350,%dummy}, %rd11493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25351}, %rd11493;
	}
	shf.r.wrap.b32 	%r25352, %r25351, %r25350, 28;
	shf.r.wrap.b32 	%r25353, %r25350, %r25351, 28;
	mov.b64 	%rd11507, {%r25353, %r25352};
	shf.l.wrap.b32 	%r25354, %r25350, %r25351, 30;
	shf.l.wrap.b32 	%r25355, %r25351, %r25350, 30;
	mov.b64 	%rd11508, {%r25355, %r25354};
	xor.b64  	%rd11509, %rd11508, %rd11507;
	shf.l.wrap.b32 	%r25356, %r25350, %r25351, 25;
	shf.l.wrap.b32 	%r25357, %r25351, %r25350, 25;
	mov.b64 	%rd11510, {%r25357, %r25356};
	xor.b64  	%rd11511, %rd11509, %rd11510;
	and.b64  	%rd11512, %rd11493, %rd11469;
	xor.b64  	%rd11513, %rd11493, %rd11469;
	and.b64  	%rd11514, %rd11513, %rd11445;
	or.b64  	%rd11515, %rd11514, %rd11512;
	add.s64 	%rd11516, %rd11505, %rd11515;
	add.s64 	%rd11517, %rd11516, %rd11511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25358,%dummy}, %rd11506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25359}, %rd11506;
	}
	shf.r.wrap.b32 	%r25360, %r25359, %r25358, 14;
	shf.r.wrap.b32 	%r25361, %r25358, %r25359, 14;
	mov.b64 	%rd11518, {%r25361, %r25360};
	shf.r.wrap.b32 	%r25362, %r25359, %r25358, 18;
	shf.r.wrap.b32 	%r25363, %r25358, %r25359, 18;
	mov.b64 	%rd11519, {%r25363, %r25362};
	xor.b64  	%rd11520, %rd11519, %rd11518;
	shf.l.wrap.b32 	%r25364, %r25358, %r25359, 23;
	shf.l.wrap.b32 	%r25365, %r25359, %r25358, 23;
	mov.b64 	%rd11521, {%r25365, %r25364};
	xor.b64  	%rd11522, %rd11520, %rd11521;
	xor.b64  	%rd11523, %rd11482, %rd11458;
	and.b64  	%rd11524, %rd11506, %rd11523;
	xor.b64  	%rd11525, %rd11524, %rd11458;
	add.s64 	%rd11526, %rd11379, %rd33;
	add.s64 	%rd11527, %rd11526, %rd11434;
	add.s64 	%rd11528, %rd11527, %rd11525;
	add.s64 	%rd11529, %rd11528, %rd11522;
	add.s64 	%rd11530, %rd11529, %rd11445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25366,%dummy}, %rd11517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25367}, %rd11517;
	}
	shf.r.wrap.b32 	%r25368, %r25367, %r25366, 28;
	shf.r.wrap.b32 	%r25369, %r25366, %r25367, 28;
	mov.b64 	%rd11531, {%r25369, %r25368};
	shf.l.wrap.b32 	%r25370, %r25366, %r25367, 30;
	shf.l.wrap.b32 	%r25371, %r25367, %r25366, 30;
	mov.b64 	%rd11532, {%r25371, %r25370};
	xor.b64  	%rd11533, %rd11532, %rd11531;
	shf.l.wrap.b32 	%r25372, %r25366, %r25367, 25;
	shf.l.wrap.b32 	%r25373, %r25367, %r25366, 25;
	mov.b64 	%rd11534, {%r25373, %r25372};
	xor.b64  	%rd11535, %rd11533, %rd11534;
	and.b64  	%rd11536, %rd11517, %rd11493;
	xor.b64  	%rd11537, %rd11517, %rd11493;
	and.b64  	%rd11538, %rd11537, %rd11469;
	or.b64  	%rd11539, %rd11538, %rd11536;
	add.s64 	%rd11540, %rd11529, %rd11539;
	add.s64 	%rd11541, %rd11540, %rd11535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25374,%dummy}, %rd11530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25375}, %rd11530;
	}
	shf.r.wrap.b32 	%r25376, %r25375, %r25374, 14;
	shf.r.wrap.b32 	%r25377, %r25374, %r25375, 14;
	mov.b64 	%rd11542, {%r25377, %r25376};
	shf.r.wrap.b32 	%r25378, %r25375, %r25374, 18;
	shf.r.wrap.b32 	%r25379, %r25374, %r25375, 18;
	mov.b64 	%rd11543, {%r25379, %r25378};
	xor.b64  	%rd11544, %rd11543, %rd11542;
	shf.l.wrap.b32 	%r25380, %r25374, %r25375, 23;
	shf.l.wrap.b32 	%r25381, %r25375, %r25374, 23;
	mov.b64 	%rd11545, {%r25381, %r25380};
	xor.b64  	%rd11546, %rd11544, %rd11545;
	xor.b64  	%rd11547, %rd11506, %rd11482;
	and.b64  	%rd11548, %rd11530, %rd11547;
	xor.b64  	%rd11549, %rd11548, %rd11482;
	add.s64 	%rd11550, %rd11380, %rd34;
	add.s64 	%rd11551, %rd11550, %rd11458;
	add.s64 	%rd11552, %rd11551, %rd11549;
	add.s64 	%rd11553, %rd11552, %rd11546;
	add.s64 	%rd11554, %rd11553, %rd11469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25382,%dummy}, %rd11541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25383}, %rd11541;
	}
	shf.r.wrap.b32 	%r25384, %r25383, %r25382, 28;
	shf.r.wrap.b32 	%r25385, %r25382, %r25383, 28;
	mov.b64 	%rd11555, {%r25385, %r25384};
	shf.l.wrap.b32 	%r25386, %r25382, %r25383, 30;
	shf.l.wrap.b32 	%r25387, %r25383, %r25382, 30;
	mov.b64 	%rd11556, {%r25387, %r25386};
	xor.b64  	%rd11557, %rd11556, %rd11555;
	shf.l.wrap.b32 	%r25388, %r25382, %r25383, 25;
	shf.l.wrap.b32 	%r25389, %r25383, %r25382, 25;
	mov.b64 	%rd11558, {%r25389, %r25388};
	xor.b64  	%rd11559, %rd11557, %rd11558;
	and.b64  	%rd11560, %rd11541, %rd11517;
	xor.b64  	%rd11561, %rd11541, %rd11517;
	and.b64  	%rd11562, %rd11561, %rd11493;
	or.b64  	%rd11563, %rd11562, %rd11560;
	add.s64 	%rd11564, %rd11553, %rd11563;
	add.s64 	%rd11565, %rd11564, %rd11559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25390,%dummy}, %rd11554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25391}, %rd11554;
	}
	shf.r.wrap.b32 	%r25392, %r25391, %r25390, 14;
	shf.r.wrap.b32 	%r25393, %r25390, %r25391, 14;
	mov.b64 	%rd11566, {%r25393, %r25392};
	shf.r.wrap.b32 	%r25394, %r25391, %r25390, 18;
	shf.r.wrap.b32 	%r25395, %r25390, %r25391, 18;
	mov.b64 	%rd11567, {%r25395, %r25394};
	xor.b64  	%rd11568, %rd11567, %rd11566;
	shf.l.wrap.b32 	%r25396, %r25390, %r25391, 23;
	shf.l.wrap.b32 	%r25397, %r25391, %r25390, 23;
	mov.b64 	%rd11569, {%r25397, %r25396};
	xor.b64  	%rd11570, %rd11568, %rd11569;
	xor.b64  	%rd11571, %rd11530, %rd11506;
	and.b64  	%rd11572, %rd11554, %rd11571;
	xor.b64  	%rd11573, %rd11572, %rd11506;
	add.s64 	%rd11574, %rd11381, %rd35;
	add.s64 	%rd11575, %rd11574, %rd11482;
	add.s64 	%rd11576, %rd11575, %rd11573;
	add.s64 	%rd11577, %rd11576, %rd11570;
	add.s64 	%rd11578, %rd11577, %rd11493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25398,%dummy}, %rd11565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25399}, %rd11565;
	}
	shf.r.wrap.b32 	%r25400, %r25399, %r25398, 28;
	shf.r.wrap.b32 	%r25401, %r25398, %r25399, 28;
	mov.b64 	%rd11579, {%r25401, %r25400};
	shf.l.wrap.b32 	%r25402, %r25398, %r25399, 30;
	shf.l.wrap.b32 	%r25403, %r25399, %r25398, 30;
	mov.b64 	%rd11580, {%r25403, %r25402};
	xor.b64  	%rd11581, %rd11580, %rd11579;
	shf.l.wrap.b32 	%r25404, %r25398, %r25399, 25;
	shf.l.wrap.b32 	%r25405, %r25399, %r25398, 25;
	mov.b64 	%rd11582, {%r25405, %r25404};
	xor.b64  	%rd11583, %rd11581, %rd11582;
	and.b64  	%rd11584, %rd11565, %rd11541;
	xor.b64  	%rd11585, %rd11565, %rd11541;
	and.b64  	%rd11586, %rd11585, %rd11517;
	or.b64  	%rd11587, %rd11586, %rd11584;
	add.s64 	%rd11588, %rd11577, %rd11587;
	add.s64 	%rd11589, %rd11588, %rd11583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25406,%dummy}, %rd11578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25407}, %rd11578;
	}
	shf.r.wrap.b32 	%r25408, %r25407, %r25406, 14;
	shf.r.wrap.b32 	%r25409, %r25406, %r25407, 14;
	mov.b64 	%rd11590, {%r25409, %r25408};
	shf.r.wrap.b32 	%r25410, %r25407, %r25406, 18;
	shf.r.wrap.b32 	%r25411, %r25406, %r25407, 18;
	mov.b64 	%rd11591, {%r25411, %r25410};
	xor.b64  	%rd11592, %rd11591, %rd11590;
	shf.l.wrap.b32 	%r25412, %r25406, %r25407, 23;
	shf.l.wrap.b32 	%r25413, %r25407, %r25406, 23;
	mov.b64 	%rd11593, {%r25413, %r25412};
	xor.b64  	%rd11594, %rd11592, %rd11593;
	xor.b64  	%rd11595, %rd11554, %rd11530;
	and.b64  	%rd11596, %rd11578, %rd11595;
	xor.b64  	%rd11597, %rd11596, %rd11530;
	add.s64 	%rd11598, %rd11382, %rd36;
	add.s64 	%rd11599, %rd11598, %rd11506;
	add.s64 	%rd11600, %rd11599, %rd11597;
	add.s64 	%rd11601, %rd11600, %rd11594;
	add.s64 	%rd11602, %rd11601, %rd11517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25414,%dummy}, %rd11589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25415}, %rd11589;
	}
	shf.r.wrap.b32 	%r25416, %r25415, %r25414, 28;
	shf.r.wrap.b32 	%r25417, %r25414, %r25415, 28;
	mov.b64 	%rd11603, {%r25417, %r25416};
	shf.l.wrap.b32 	%r25418, %r25414, %r25415, 30;
	shf.l.wrap.b32 	%r25419, %r25415, %r25414, 30;
	mov.b64 	%rd11604, {%r25419, %r25418};
	xor.b64  	%rd11605, %rd11604, %rd11603;
	shf.l.wrap.b32 	%r25420, %r25414, %r25415, 25;
	shf.l.wrap.b32 	%r25421, %r25415, %r25414, 25;
	mov.b64 	%rd11606, {%r25421, %r25420};
	xor.b64  	%rd11607, %rd11605, %rd11606;
	and.b64  	%rd11608, %rd11589, %rd11565;
	xor.b64  	%rd11609, %rd11589, %rd11565;
	and.b64  	%rd11610, %rd11609, %rd11541;
	or.b64  	%rd11611, %rd11610, %rd11608;
	add.s64 	%rd11612, %rd11601, %rd11611;
	add.s64 	%rd11613, %rd11612, %rd11607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25422,%dummy}, %rd11602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25423}, %rd11602;
	}
	shf.r.wrap.b32 	%r25424, %r25423, %r25422, 14;
	shf.r.wrap.b32 	%r25425, %r25422, %r25423, 14;
	mov.b64 	%rd11614, {%r25425, %r25424};
	shf.r.wrap.b32 	%r25426, %r25423, %r25422, 18;
	shf.r.wrap.b32 	%r25427, %r25422, %r25423, 18;
	mov.b64 	%rd11615, {%r25427, %r25426};
	xor.b64  	%rd11616, %rd11615, %rd11614;
	shf.l.wrap.b32 	%r25428, %r25422, %r25423, 23;
	shf.l.wrap.b32 	%r25429, %r25423, %r25422, 23;
	mov.b64 	%rd11617, {%r25429, %r25428};
	xor.b64  	%rd11618, %rd11616, %rd11617;
	xor.b64  	%rd11619, %rd11578, %rd11554;
	and.b64  	%rd11620, %rd11602, %rd11619;
	xor.b64  	%rd11621, %rd11620, %rd11554;
	add.s64 	%rd11622, %rd11383, %rd37;
	add.s64 	%rd11623, %rd11622, %rd11530;
	add.s64 	%rd11624, %rd11623, %rd11621;
	add.s64 	%rd11625, %rd11624, %rd11618;
	add.s64 	%rd11626, %rd11625, %rd11541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25430,%dummy}, %rd11613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25431}, %rd11613;
	}
	shf.r.wrap.b32 	%r25432, %r25431, %r25430, 28;
	shf.r.wrap.b32 	%r25433, %r25430, %r25431, 28;
	mov.b64 	%rd11627, {%r25433, %r25432};
	shf.l.wrap.b32 	%r25434, %r25430, %r25431, 30;
	shf.l.wrap.b32 	%r25435, %r25431, %r25430, 30;
	mov.b64 	%rd11628, {%r25435, %r25434};
	xor.b64  	%rd11629, %rd11628, %rd11627;
	shf.l.wrap.b32 	%r25436, %r25430, %r25431, 25;
	shf.l.wrap.b32 	%r25437, %r25431, %r25430, 25;
	mov.b64 	%rd11630, {%r25437, %r25436};
	xor.b64  	%rd11631, %rd11629, %rd11630;
	and.b64  	%rd11632, %rd11613, %rd11589;
	xor.b64  	%rd11633, %rd11613, %rd11589;
	and.b64  	%rd11634, %rd11633, %rd11565;
	or.b64  	%rd11635, %rd11634, %rd11632;
	add.s64 	%rd11636, %rd11625, %rd11635;
	add.s64 	%rd11637, %rd11636, %rd11631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25438,%dummy}, %rd11626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25439}, %rd11626;
	}
	shf.r.wrap.b32 	%r25440, %r25439, %r25438, 14;
	shf.r.wrap.b32 	%r25441, %r25438, %r25439, 14;
	mov.b64 	%rd11638, {%r25441, %r25440};
	shf.r.wrap.b32 	%r25442, %r25439, %r25438, 18;
	shf.r.wrap.b32 	%r25443, %r25438, %r25439, 18;
	mov.b64 	%rd11639, {%r25443, %r25442};
	xor.b64  	%rd11640, %rd11639, %rd11638;
	shf.l.wrap.b32 	%r25444, %r25438, %r25439, 23;
	shf.l.wrap.b32 	%r25445, %r25439, %r25438, 23;
	mov.b64 	%rd11641, {%r25445, %r25444};
	xor.b64  	%rd11642, %rd11640, %rd11641;
	xor.b64  	%rd11643, %rd11602, %rd11578;
	and.b64  	%rd11644, %rd11626, %rd11643;
	xor.b64  	%rd11645, %rd11644, %rd11578;
	add.s64 	%rd11646, %rd11384, %rd38;
	add.s64 	%rd11647, %rd11646, %rd11554;
	add.s64 	%rd11648, %rd11647, %rd11645;
	add.s64 	%rd11649, %rd11648, %rd11642;
	add.s64 	%rd11650, %rd11649, %rd11565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25446,%dummy}, %rd11637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25447}, %rd11637;
	}
	shf.r.wrap.b32 	%r25448, %r25447, %r25446, 28;
	shf.r.wrap.b32 	%r25449, %r25446, %r25447, 28;
	mov.b64 	%rd11651, {%r25449, %r25448};
	shf.l.wrap.b32 	%r25450, %r25446, %r25447, 30;
	shf.l.wrap.b32 	%r25451, %r25447, %r25446, 30;
	mov.b64 	%rd11652, {%r25451, %r25450};
	xor.b64  	%rd11653, %rd11652, %rd11651;
	shf.l.wrap.b32 	%r25452, %r25446, %r25447, 25;
	shf.l.wrap.b32 	%r25453, %r25447, %r25446, 25;
	mov.b64 	%rd11654, {%r25453, %r25452};
	xor.b64  	%rd11655, %rd11653, %rd11654;
	and.b64  	%rd11656, %rd11637, %rd11613;
	xor.b64  	%rd11657, %rd11637, %rd11613;
	and.b64  	%rd11658, %rd11657, %rd11589;
	or.b64  	%rd11659, %rd11658, %rd11656;
	add.s64 	%rd11660, %rd11649, %rd11659;
	add.s64 	%rd11661, %rd11660, %rd11655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25454,%dummy}, %rd11650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25455}, %rd11650;
	}
	shf.r.wrap.b32 	%r25456, %r25455, %r25454, 14;
	shf.r.wrap.b32 	%r25457, %r25454, %r25455, 14;
	mov.b64 	%rd11662, {%r25457, %r25456};
	shf.r.wrap.b32 	%r25458, %r25455, %r25454, 18;
	shf.r.wrap.b32 	%r25459, %r25454, %r25455, 18;
	mov.b64 	%rd11663, {%r25459, %r25458};
	xor.b64  	%rd11664, %rd11663, %rd11662;
	shf.l.wrap.b32 	%r25460, %r25454, %r25455, 23;
	shf.l.wrap.b32 	%r25461, %r25455, %r25454, 23;
	mov.b64 	%rd11665, {%r25461, %r25460};
	xor.b64  	%rd11666, %rd11664, %rd11665;
	xor.b64  	%rd11667, %rd11626, %rd11602;
	and.b64  	%rd11668, %rd11650, %rd11667;
	xor.b64  	%rd11669, %rd11668, %rd11602;
	add.s64 	%rd11670, %rd11385, %rd39;
	add.s64 	%rd11671, %rd11670, %rd11578;
	add.s64 	%rd11672, %rd11671, %rd11669;
	add.s64 	%rd11673, %rd11672, %rd11666;
	add.s64 	%rd11674, %rd11673, %rd11589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25462,%dummy}, %rd11661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25463}, %rd11661;
	}
	shf.r.wrap.b32 	%r25464, %r25463, %r25462, 28;
	shf.r.wrap.b32 	%r25465, %r25462, %r25463, 28;
	mov.b64 	%rd11675, {%r25465, %r25464};
	shf.l.wrap.b32 	%r25466, %r25462, %r25463, 30;
	shf.l.wrap.b32 	%r25467, %r25463, %r25462, 30;
	mov.b64 	%rd11676, {%r25467, %r25466};
	xor.b64  	%rd11677, %rd11676, %rd11675;
	shf.l.wrap.b32 	%r25468, %r25462, %r25463, 25;
	shf.l.wrap.b32 	%r25469, %r25463, %r25462, 25;
	mov.b64 	%rd11678, {%r25469, %r25468};
	xor.b64  	%rd11679, %rd11677, %rd11678;
	and.b64  	%rd11680, %rd11661, %rd11637;
	xor.b64  	%rd11681, %rd11661, %rd11637;
	and.b64  	%rd11682, %rd11681, %rd11613;
	or.b64  	%rd11683, %rd11682, %rd11680;
	add.s64 	%rd11684, %rd11673, %rd11683;
	add.s64 	%rd11685, %rd11684, %rd11679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25470,%dummy}, %rd11674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25471}, %rd11674;
	}
	shf.r.wrap.b32 	%r25472, %r25471, %r25470, 14;
	shf.r.wrap.b32 	%r25473, %r25470, %r25471, 14;
	mov.b64 	%rd11686, {%r25473, %r25472};
	shf.r.wrap.b32 	%r25474, %r25471, %r25470, 18;
	shf.r.wrap.b32 	%r25475, %r25470, %r25471, 18;
	mov.b64 	%rd11687, {%r25475, %r25474};
	xor.b64  	%rd11688, %rd11687, %rd11686;
	shf.l.wrap.b32 	%r25476, %r25470, %r25471, 23;
	shf.l.wrap.b32 	%r25477, %r25471, %r25470, 23;
	mov.b64 	%rd11689, {%r25477, %r25476};
	xor.b64  	%rd11690, %rd11688, %rd11689;
	xor.b64  	%rd11691, %rd11650, %rd11626;
	and.b64  	%rd11692, %rd11674, %rd11691;
	xor.b64  	%rd11693, %rd11692, %rd11626;
	add.s64 	%rd11694, %rd11386, %rd40;
	add.s64 	%rd11695, %rd11694, %rd11602;
	add.s64 	%rd11696, %rd11695, %rd11693;
	add.s64 	%rd11697, %rd11696, %rd11690;
	add.s64 	%rd11698, %rd11697, %rd11613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25478,%dummy}, %rd11685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25479}, %rd11685;
	}
	shf.r.wrap.b32 	%r25480, %r25479, %r25478, 28;
	shf.r.wrap.b32 	%r25481, %r25478, %r25479, 28;
	mov.b64 	%rd11699, {%r25481, %r25480};
	shf.l.wrap.b32 	%r25482, %r25478, %r25479, 30;
	shf.l.wrap.b32 	%r25483, %r25479, %r25478, 30;
	mov.b64 	%rd11700, {%r25483, %r25482};
	xor.b64  	%rd11701, %rd11700, %rd11699;
	shf.l.wrap.b32 	%r25484, %r25478, %r25479, 25;
	shf.l.wrap.b32 	%r25485, %r25479, %r25478, 25;
	mov.b64 	%rd11702, {%r25485, %r25484};
	xor.b64  	%rd11703, %rd11701, %rd11702;
	and.b64  	%rd11704, %rd11685, %rd11661;
	xor.b64  	%rd11705, %rd11685, %rd11661;
	and.b64  	%rd11706, %rd11705, %rd11637;
	or.b64  	%rd11707, %rd11706, %rd11704;
	add.s64 	%rd11708, %rd11697, %rd11707;
	add.s64 	%rd11709, %rd11708, %rd11703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25486,%dummy}, %rd11698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25487}, %rd11698;
	}
	shf.r.wrap.b32 	%r25488, %r25487, %r25486, 14;
	shf.r.wrap.b32 	%r25489, %r25486, %r25487, 14;
	mov.b64 	%rd11710, {%r25489, %r25488};
	shf.r.wrap.b32 	%r25490, %r25487, %r25486, 18;
	shf.r.wrap.b32 	%r25491, %r25486, %r25487, 18;
	mov.b64 	%rd11711, {%r25491, %r25490};
	xor.b64  	%rd11712, %rd11711, %rd11710;
	shf.l.wrap.b32 	%r25492, %r25486, %r25487, 23;
	shf.l.wrap.b32 	%r25493, %r25487, %r25486, 23;
	mov.b64 	%rd11713, {%r25493, %r25492};
	xor.b64  	%rd11714, %rd11712, %rd11713;
	xor.b64  	%rd11715, %rd11674, %rd11650;
	and.b64  	%rd11716, %rd11698, %rd11715;
	xor.b64  	%rd11717, %rd11716, %rd11650;
	add.s64 	%rd11718, %rd11387, %rd41;
	add.s64 	%rd11719, %rd11718, %rd11626;
	add.s64 	%rd11720, %rd11719, %rd11717;
	add.s64 	%rd11721, %rd11720, %rd11714;
	add.s64 	%rd11722, %rd11721, %rd11637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25494,%dummy}, %rd11709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25495}, %rd11709;
	}
	shf.r.wrap.b32 	%r25496, %r25495, %r25494, 28;
	shf.r.wrap.b32 	%r25497, %r25494, %r25495, 28;
	mov.b64 	%rd11723, {%r25497, %r25496};
	shf.l.wrap.b32 	%r25498, %r25494, %r25495, 30;
	shf.l.wrap.b32 	%r25499, %r25495, %r25494, 30;
	mov.b64 	%rd11724, {%r25499, %r25498};
	xor.b64  	%rd11725, %rd11724, %rd11723;
	shf.l.wrap.b32 	%r25500, %r25494, %r25495, 25;
	shf.l.wrap.b32 	%r25501, %r25495, %r25494, 25;
	mov.b64 	%rd11726, {%r25501, %r25500};
	xor.b64  	%rd11727, %rd11725, %rd11726;
	and.b64  	%rd11728, %rd11709, %rd11685;
	xor.b64  	%rd11729, %rd11709, %rd11685;
	and.b64  	%rd11730, %rd11729, %rd11661;
	or.b64  	%rd11731, %rd11730, %rd11728;
	add.s64 	%rd11732, %rd11721, %rd11731;
	add.s64 	%rd11733, %rd11732, %rd11727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25502,%dummy}, %rd11722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25503}, %rd11722;
	}
	shf.r.wrap.b32 	%r25504, %r25503, %r25502, 14;
	shf.r.wrap.b32 	%r25505, %r25502, %r25503, 14;
	mov.b64 	%rd11734, {%r25505, %r25504};
	shf.r.wrap.b32 	%r25506, %r25503, %r25502, 18;
	shf.r.wrap.b32 	%r25507, %r25502, %r25503, 18;
	mov.b64 	%rd11735, {%r25507, %r25506};
	xor.b64  	%rd11736, %rd11735, %rd11734;
	shf.l.wrap.b32 	%r25508, %r25502, %r25503, 23;
	shf.l.wrap.b32 	%r25509, %r25503, %r25502, 23;
	mov.b64 	%rd11737, {%r25509, %r25508};
	xor.b64  	%rd11738, %rd11736, %rd11737;
	xor.b64  	%rd11739, %rd11698, %rd11674;
	and.b64  	%rd11740, %rd11722, %rd11739;
	xor.b64  	%rd11741, %rd11740, %rd11674;
	add.s64 	%rd11742, %rd11388, %rd42;
	add.s64 	%rd11743, %rd11742, %rd11650;
	add.s64 	%rd11744, %rd11743, %rd11741;
	add.s64 	%rd11745, %rd11744, %rd11738;
	add.s64 	%rd11746, %rd11745, %rd11661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25510,%dummy}, %rd11733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25511}, %rd11733;
	}
	shf.r.wrap.b32 	%r25512, %r25511, %r25510, 28;
	shf.r.wrap.b32 	%r25513, %r25510, %r25511, 28;
	mov.b64 	%rd11747, {%r25513, %r25512};
	shf.l.wrap.b32 	%r25514, %r25510, %r25511, 30;
	shf.l.wrap.b32 	%r25515, %r25511, %r25510, 30;
	mov.b64 	%rd11748, {%r25515, %r25514};
	xor.b64  	%rd11749, %rd11748, %rd11747;
	shf.l.wrap.b32 	%r25516, %r25510, %r25511, 25;
	shf.l.wrap.b32 	%r25517, %r25511, %r25510, 25;
	mov.b64 	%rd11750, {%r25517, %r25516};
	xor.b64  	%rd11751, %rd11749, %rd11750;
	and.b64  	%rd11752, %rd11733, %rd11709;
	xor.b64  	%rd11753, %rd11733, %rd11709;
	and.b64  	%rd11754, %rd11753, %rd11685;
	or.b64  	%rd11755, %rd11754, %rd11752;
	add.s64 	%rd11756, %rd11745, %rd11755;
	add.s64 	%rd11757, %rd11756, %rd11751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25518,%dummy}, %rd11746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25519}, %rd11746;
	}
	shf.r.wrap.b32 	%r25520, %r25519, %r25518, 14;
	shf.r.wrap.b32 	%r25521, %r25518, %r25519, 14;
	mov.b64 	%rd11758, {%r25521, %r25520};
	shf.r.wrap.b32 	%r25522, %r25519, %r25518, 18;
	shf.r.wrap.b32 	%r25523, %r25518, %r25519, 18;
	mov.b64 	%rd11759, {%r25523, %r25522};
	xor.b64  	%rd11760, %rd11759, %rd11758;
	shf.l.wrap.b32 	%r25524, %r25518, %r25519, 23;
	shf.l.wrap.b32 	%r25525, %r25519, %r25518, 23;
	mov.b64 	%rd11761, {%r25525, %r25524};
	xor.b64  	%rd11762, %rd11760, %rd11761;
	xor.b64  	%rd11763, %rd11722, %rd11698;
	and.b64  	%rd11764, %rd11746, %rd11763;
	xor.b64  	%rd11765, %rd11764, %rd11698;
	add.s64 	%rd11766, %rd11389, %rd43;
	add.s64 	%rd11767, %rd11766, %rd11674;
	add.s64 	%rd11768, %rd11767, %rd11765;
	add.s64 	%rd11769, %rd11768, %rd11762;
	add.s64 	%rd11770, %rd11769, %rd11685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25526,%dummy}, %rd11757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25527}, %rd11757;
	}
	shf.r.wrap.b32 	%r25528, %r25527, %r25526, 28;
	shf.r.wrap.b32 	%r25529, %r25526, %r25527, 28;
	mov.b64 	%rd11771, {%r25529, %r25528};
	shf.l.wrap.b32 	%r25530, %r25526, %r25527, 30;
	shf.l.wrap.b32 	%r25531, %r25527, %r25526, 30;
	mov.b64 	%rd11772, {%r25531, %r25530};
	xor.b64  	%rd11773, %rd11772, %rd11771;
	shf.l.wrap.b32 	%r25532, %r25526, %r25527, 25;
	shf.l.wrap.b32 	%r25533, %r25527, %r25526, 25;
	mov.b64 	%rd11774, {%r25533, %r25532};
	xor.b64  	%rd11775, %rd11773, %rd11774;
	and.b64  	%rd11776, %rd11757, %rd11733;
	xor.b64  	%rd11777, %rd11757, %rd11733;
	and.b64  	%rd11778, %rd11777, %rd11709;
	or.b64  	%rd11779, %rd11778, %rd11776;
	add.s64 	%rd11780, %rd11769, %rd11779;
	add.s64 	%rd11781, %rd11780, %rd11775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25534,%dummy}, %rd11388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25535}, %rd11388;
	}
	shf.r.wrap.b32 	%r25536, %r25535, %r25534, 19;
	shf.r.wrap.b32 	%r25537, %r25534, %r25535, 19;
	mov.b64 	%rd11782, {%r25537, %r25536};
	shf.l.wrap.b32 	%r25538, %r25534, %r25535, 3;
	shf.l.wrap.b32 	%r25539, %r25535, %r25534, 3;
	mov.b64 	%rd11783, {%r25539, %r25538};
	shr.u64 	%rd11784, %rd11388, 6;
	xor.b64  	%rd11785, %rd11782, %rd11784;
	xor.b64  	%rd11786, %rd11785, %rd11783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25540,%dummy}, %rd11375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25541}, %rd11375;
	}
	shf.r.wrap.b32 	%r25542, %r25541, %r25540, 1;
	shf.r.wrap.b32 	%r25543, %r25540, %r25541, 1;
	mov.b64 	%rd11787, {%r25543, %r25542};
	shf.r.wrap.b32 	%r25544, %r25541, %r25540, 8;
	shf.r.wrap.b32 	%r25545, %r25540, %r25541, 8;
	mov.b64 	%rd11788, {%r25545, %r25544};
	shr.u64 	%rd11789, %rd11375, 7;
	xor.b64  	%rd11790, %rd11787, %rd11789;
	xor.b64  	%rd11791, %rd11790, %rd11788;
	add.s64 	%rd11792, %rd11383, %rd11374;
	add.s64 	%rd11793, %rd11792, %rd11786;
	add.s64 	%rd11794, %rd11793, %rd11791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25546,%dummy}, %rd11389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25547}, %rd11389;
	}
	shf.r.wrap.b32 	%r25548, %r25547, %r25546, 19;
	shf.r.wrap.b32 	%r25549, %r25546, %r25547, 19;
	mov.b64 	%rd11795, {%r25549, %r25548};
	shf.l.wrap.b32 	%r25550, %r25546, %r25547, 3;
	shf.l.wrap.b32 	%r25551, %r25547, %r25546, 3;
	mov.b64 	%rd11796, {%r25551, %r25550};
	shr.u64 	%rd11797, %rd11389, 6;
	xor.b64  	%rd11798, %rd11795, %rd11797;
	xor.b64  	%rd11799, %rd11798, %rd11796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25552,%dummy}, %rd11376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25553}, %rd11376;
	}
	shf.r.wrap.b32 	%r25554, %r25553, %r25552, 1;
	shf.r.wrap.b32 	%r25555, %r25552, %r25553, 1;
	mov.b64 	%rd11800, {%r25555, %r25554};
	shf.r.wrap.b32 	%r25556, %r25553, %r25552, 8;
	shf.r.wrap.b32 	%r25557, %r25552, %r25553, 8;
	mov.b64 	%rd11801, {%r25557, %r25556};
	shr.u64 	%rd11802, %rd11376, 7;
	xor.b64  	%rd11803, %rd11800, %rd11802;
	xor.b64  	%rd11804, %rd11803, %rd11801;
	add.s64 	%rd11805, %rd11384, %rd11375;
	add.s64 	%rd11806, %rd11805, %rd11799;
	add.s64 	%rd11807, %rd11806, %rd11804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25558,%dummy}, %rd11794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25559}, %rd11794;
	}
	shf.r.wrap.b32 	%r25560, %r25559, %r25558, 19;
	shf.r.wrap.b32 	%r25561, %r25558, %r25559, 19;
	mov.b64 	%rd11808, {%r25561, %r25560};
	shf.l.wrap.b32 	%r25562, %r25558, %r25559, 3;
	shf.l.wrap.b32 	%r25563, %r25559, %r25558, 3;
	mov.b64 	%rd11809, {%r25563, %r25562};
	shr.u64 	%rd11810, %rd11794, 6;
	xor.b64  	%rd11811, %rd11808, %rd11810;
	xor.b64  	%rd11812, %rd11811, %rd11809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25564,%dummy}, %rd11377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25565}, %rd11377;
	}
	shf.r.wrap.b32 	%r25566, %r25565, %r25564, 1;
	shf.r.wrap.b32 	%r25567, %r25564, %r25565, 1;
	mov.b64 	%rd11813, {%r25567, %r25566};
	shf.r.wrap.b32 	%r25568, %r25565, %r25564, 8;
	shf.r.wrap.b32 	%r25569, %r25564, %r25565, 8;
	mov.b64 	%rd11814, {%r25569, %r25568};
	shr.u64 	%rd11815, %rd11377, 7;
	xor.b64  	%rd11816, %rd11813, %rd11815;
	xor.b64  	%rd11817, %rd11816, %rd11814;
	add.s64 	%rd11818, %rd11385, %rd11376;
	add.s64 	%rd11819, %rd11818, %rd11812;
	add.s64 	%rd11820, %rd11819, %rd11817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25570,%dummy}, %rd11807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25571}, %rd11807;
	}
	shf.r.wrap.b32 	%r25572, %r25571, %r25570, 19;
	shf.r.wrap.b32 	%r25573, %r25570, %r25571, 19;
	mov.b64 	%rd11821, {%r25573, %r25572};
	shf.l.wrap.b32 	%r25574, %r25570, %r25571, 3;
	shf.l.wrap.b32 	%r25575, %r25571, %r25570, 3;
	mov.b64 	%rd11822, {%r25575, %r25574};
	shr.u64 	%rd11823, %rd11807, 6;
	xor.b64  	%rd11824, %rd11821, %rd11823;
	xor.b64  	%rd11825, %rd11824, %rd11822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25576,%dummy}, %rd11378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25577}, %rd11378;
	}
	shf.r.wrap.b32 	%r25578, %r25577, %r25576, 1;
	shf.r.wrap.b32 	%r25579, %r25576, %r25577, 1;
	mov.b64 	%rd11826, {%r25579, %r25578};
	shf.r.wrap.b32 	%r25580, %r25577, %r25576, 8;
	shf.r.wrap.b32 	%r25581, %r25576, %r25577, 8;
	mov.b64 	%rd11827, {%r25581, %r25580};
	shr.u64 	%rd11828, %rd11378, 7;
	xor.b64  	%rd11829, %rd11826, %rd11828;
	xor.b64  	%rd11830, %rd11829, %rd11827;
	add.s64 	%rd11831, %rd11386, %rd11377;
	add.s64 	%rd11832, %rd11831, %rd11825;
	add.s64 	%rd11833, %rd11832, %rd11830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25582,%dummy}, %rd11820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25583}, %rd11820;
	}
	shf.r.wrap.b32 	%r25584, %r25583, %r25582, 19;
	shf.r.wrap.b32 	%r25585, %r25582, %r25583, 19;
	mov.b64 	%rd11834, {%r25585, %r25584};
	shf.l.wrap.b32 	%r25586, %r25582, %r25583, 3;
	shf.l.wrap.b32 	%r25587, %r25583, %r25582, 3;
	mov.b64 	%rd11835, {%r25587, %r25586};
	shr.u64 	%rd11836, %rd11820, 6;
	xor.b64  	%rd11837, %rd11834, %rd11836;
	xor.b64  	%rd11838, %rd11837, %rd11835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25588,%dummy}, %rd11379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25589}, %rd11379;
	}
	shf.r.wrap.b32 	%r25590, %r25589, %r25588, 1;
	shf.r.wrap.b32 	%r25591, %r25588, %r25589, 1;
	mov.b64 	%rd11839, {%r25591, %r25590};
	shf.r.wrap.b32 	%r25592, %r25589, %r25588, 8;
	shf.r.wrap.b32 	%r25593, %r25588, %r25589, 8;
	mov.b64 	%rd11840, {%r25593, %r25592};
	shr.u64 	%rd11841, %rd11379, 7;
	xor.b64  	%rd11842, %rd11839, %rd11841;
	xor.b64  	%rd11843, %rd11842, %rd11840;
	add.s64 	%rd11844, %rd11387, %rd11378;
	add.s64 	%rd11845, %rd11844, %rd11838;
	add.s64 	%rd11846, %rd11845, %rd11843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25594,%dummy}, %rd11833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25595}, %rd11833;
	}
	shf.r.wrap.b32 	%r25596, %r25595, %r25594, 19;
	shf.r.wrap.b32 	%r25597, %r25594, %r25595, 19;
	mov.b64 	%rd11847, {%r25597, %r25596};
	shf.l.wrap.b32 	%r25598, %r25594, %r25595, 3;
	shf.l.wrap.b32 	%r25599, %r25595, %r25594, 3;
	mov.b64 	%rd11848, {%r25599, %r25598};
	shr.u64 	%rd11849, %rd11833, 6;
	xor.b64  	%rd11850, %rd11847, %rd11849;
	xor.b64  	%rd11851, %rd11850, %rd11848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25600,%dummy}, %rd11380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25601}, %rd11380;
	}
	shf.r.wrap.b32 	%r25602, %r25601, %r25600, 1;
	shf.r.wrap.b32 	%r25603, %r25600, %r25601, 1;
	mov.b64 	%rd11852, {%r25603, %r25602};
	shf.r.wrap.b32 	%r25604, %r25601, %r25600, 8;
	shf.r.wrap.b32 	%r25605, %r25600, %r25601, 8;
	mov.b64 	%rd11853, {%r25605, %r25604};
	shr.u64 	%rd11854, %rd11380, 7;
	xor.b64  	%rd11855, %rd11852, %rd11854;
	xor.b64  	%rd11856, %rd11855, %rd11853;
	add.s64 	%rd11857, %rd11388, %rd11379;
	add.s64 	%rd11858, %rd11857, %rd11851;
	add.s64 	%rd11859, %rd11858, %rd11856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25606,%dummy}, %rd11846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25607}, %rd11846;
	}
	shf.r.wrap.b32 	%r25608, %r25607, %r25606, 19;
	shf.r.wrap.b32 	%r25609, %r25606, %r25607, 19;
	mov.b64 	%rd11860, {%r25609, %r25608};
	shf.l.wrap.b32 	%r25610, %r25606, %r25607, 3;
	shf.l.wrap.b32 	%r25611, %r25607, %r25606, 3;
	mov.b64 	%rd11861, {%r25611, %r25610};
	shr.u64 	%rd11862, %rd11846, 6;
	xor.b64  	%rd11863, %rd11860, %rd11862;
	xor.b64  	%rd11864, %rd11863, %rd11861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25612,%dummy}, %rd11381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25613}, %rd11381;
	}
	shf.r.wrap.b32 	%r25614, %r25613, %r25612, 1;
	shf.r.wrap.b32 	%r25615, %r25612, %r25613, 1;
	mov.b64 	%rd11865, {%r25615, %r25614};
	shf.r.wrap.b32 	%r25616, %r25613, %r25612, 8;
	shf.r.wrap.b32 	%r25617, %r25612, %r25613, 8;
	mov.b64 	%rd11866, {%r25617, %r25616};
	shr.u64 	%rd11867, %rd11381, 7;
	xor.b64  	%rd11868, %rd11865, %rd11867;
	xor.b64  	%rd11869, %rd11868, %rd11866;
	add.s64 	%rd11870, %rd11389, %rd11380;
	add.s64 	%rd11871, %rd11870, %rd11864;
	add.s64 	%rd11872, %rd11871, %rd11869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25618,%dummy}, %rd11859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25619}, %rd11859;
	}
	shf.r.wrap.b32 	%r25620, %r25619, %r25618, 19;
	shf.r.wrap.b32 	%r25621, %r25618, %r25619, 19;
	mov.b64 	%rd11873, {%r25621, %r25620};
	shf.l.wrap.b32 	%r25622, %r25618, %r25619, 3;
	shf.l.wrap.b32 	%r25623, %r25619, %r25618, 3;
	mov.b64 	%rd11874, {%r25623, %r25622};
	shr.u64 	%rd11875, %rd11859, 6;
	xor.b64  	%rd11876, %rd11873, %rd11875;
	xor.b64  	%rd11877, %rd11876, %rd11874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25624,%dummy}, %rd11382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25625}, %rd11382;
	}
	shf.r.wrap.b32 	%r25626, %r25625, %r25624, 1;
	shf.r.wrap.b32 	%r25627, %r25624, %r25625, 1;
	mov.b64 	%rd11878, {%r25627, %r25626};
	shf.r.wrap.b32 	%r25628, %r25625, %r25624, 8;
	shf.r.wrap.b32 	%r25629, %r25624, %r25625, 8;
	mov.b64 	%rd11879, {%r25629, %r25628};
	shr.u64 	%rd11880, %rd11382, 7;
	xor.b64  	%rd11881, %rd11878, %rd11880;
	xor.b64  	%rd11882, %rd11881, %rd11879;
	add.s64 	%rd11883, %rd11794, %rd11381;
	add.s64 	%rd11884, %rd11883, %rd11877;
	add.s64 	%rd11885, %rd11884, %rd11882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25630,%dummy}, %rd11872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25631}, %rd11872;
	}
	shf.r.wrap.b32 	%r25632, %r25631, %r25630, 19;
	shf.r.wrap.b32 	%r25633, %r25630, %r25631, 19;
	mov.b64 	%rd11886, {%r25633, %r25632};
	shf.l.wrap.b32 	%r25634, %r25630, %r25631, 3;
	shf.l.wrap.b32 	%r25635, %r25631, %r25630, 3;
	mov.b64 	%rd11887, {%r25635, %r25634};
	shr.u64 	%rd11888, %rd11872, 6;
	xor.b64  	%rd11889, %rd11886, %rd11888;
	xor.b64  	%rd11890, %rd11889, %rd11887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25636,%dummy}, %rd11383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25637}, %rd11383;
	}
	shf.r.wrap.b32 	%r25638, %r25637, %r25636, 1;
	shf.r.wrap.b32 	%r25639, %r25636, %r25637, 1;
	mov.b64 	%rd11891, {%r25639, %r25638};
	shf.r.wrap.b32 	%r25640, %r25637, %r25636, 8;
	shf.r.wrap.b32 	%r25641, %r25636, %r25637, 8;
	mov.b64 	%rd11892, {%r25641, %r25640};
	shr.u64 	%rd11893, %rd11383, 7;
	xor.b64  	%rd11894, %rd11891, %rd11893;
	xor.b64  	%rd11895, %rd11894, %rd11892;
	add.s64 	%rd11896, %rd11807, %rd11382;
	add.s64 	%rd11897, %rd11896, %rd11890;
	add.s64 	%rd11898, %rd11897, %rd11895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25642,%dummy}, %rd11885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25643}, %rd11885;
	}
	shf.r.wrap.b32 	%r25644, %r25643, %r25642, 19;
	shf.r.wrap.b32 	%r25645, %r25642, %r25643, 19;
	mov.b64 	%rd11899, {%r25645, %r25644};
	shf.l.wrap.b32 	%r25646, %r25642, %r25643, 3;
	shf.l.wrap.b32 	%r25647, %r25643, %r25642, 3;
	mov.b64 	%rd11900, {%r25647, %r25646};
	shr.u64 	%rd11901, %rd11885, 6;
	xor.b64  	%rd11902, %rd11899, %rd11901;
	xor.b64  	%rd11903, %rd11902, %rd11900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25648,%dummy}, %rd11384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25649}, %rd11384;
	}
	shf.r.wrap.b32 	%r25650, %r25649, %r25648, 1;
	shf.r.wrap.b32 	%r25651, %r25648, %r25649, 1;
	mov.b64 	%rd11904, {%r25651, %r25650};
	shf.r.wrap.b32 	%r25652, %r25649, %r25648, 8;
	shf.r.wrap.b32 	%r25653, %r25648, %r25649, 8;
	mov.b64 	%rd11905, {%r25653, %r25652};
	shr.u64 	%rd11906, %rd11384, 7;
	xor.b64  	%rd11907, %rd11904, %rd11906;
	xor.b64  	%rd11908, %rd11907, %rd11905;
	add.s64 	%rd11909, %rd11820, %rd11383;
	add.s64 	%rd11910, %rd11909, %rd11903;
	add.s64 	%rd11911, %rd11910, %rd11908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25654,%dummy}, %rd11898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25655}, %rd11898;
	}
	shf.r.wrap.b32 	%r25656, %r25655, %r25654, 19;
	shf.r.wrap.b32 	%r25657, %r25654, %r25655, 19;
	mov.b64 	%rd11912, {%r25657, %r25656};
	shf.l.wrap.b32 	%r25658, %r25654, %r25655, 3;
	shf.l.wrap.b32 	%r25659, %r25655, %r25654, 3;
	mov.b64 	%rd11913, {%r25659, %r25658};
	shr.u64 	%rd11914, %rd11898, 6;
	xor.b64  	%rd11915, %rd11912, %rd11914;
	xor.b64  	%rd11916, %rd11915, %rd11913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25660,%dummy}, %rd11385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25661}, %rd11385;
	}
	shf.r.wrap.b32 	%r25662, %r25661, %r25660, 1;
	shf.r.wrap.b32 	%r25663, %r25660, %r25661, 1;
	mov.b64 	%rd11917, {%r25663, %r25662};
	shf.r.wrap.b32 	%r25664, %r25661, %r25660, 8;
	shf.r.wrap.b32 	%r25665, %r25660, %r25661, 8;
	mov.b64 	%rd11918, {%r25665, %r25664};
	shr.u64 	%rd11919, %rd11385, 7;
	xor.b64  	%rd11920, %rd11917, %rd11919;
	xor.b64  	%rd11921, %rd11920, %rd11918;
	add.s64 	%rd11922, %rd11833, %rd11384;
	add.s64 	%rd11923, %rd11922, %rd11916;
	add.s64 	%rd11924, %rd11923, %rd11921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25666,%dummy}, %rd11911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25667}, %rd11911;
	}
	shf.r.wrap.b32 	%r25668, %r25667, %r25666, 19;
	shf.r.wrap.b32 	%r25669, %r25666, %r25667, 19;
	mov.b64 	%rd11925, {%r25669, %r25668};
	shf.l.wrap.b32 	%r25670, %r25666, %r25667, 3;
	shf.l.wrap.b32 	%r25671, %r25667, %r25666, 3;
	mov.b64 	%rd11926, {%r25671, %r25670};
	shr.u64 	%rd11927, %rd11911, 6;
	xor.b64  	%rd11928, %rd11925, %rd11927;
	xor.b64  	%rd11929, %rd11928, %rd11926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25672,%dummy}, %rd11386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25673}, %rd11386;
	}
	shf.r.wrap.b32 	%r25674, %r25673, %r25672, 1;
	shf.r.wrap.b32 	%r25675, %r25672, %r25673, 1;
	mov.b64 	%rd11930, {%r25675, %r25674};
	shf.r.wrap.b32 	%r25676, %r25673, %r25672, 8;
	shf.r.wrap.b32 	%r25677, %r25672, %r25673, 8;
	mov.b64 	%rd11931, {%r25677, %r25676};
	shr.u64 	%rd11932, %rd11386, 7;
	xor.b64  	%rd11933, %rd11930, %rd11932;
	xor.b64  	%rd11934, %rd11933, %rd11931;
	add.s64 	%rd11935, %rd11846, %rd11385;
	add.s64 	%rd11936, %rd11935, %rd11929;
	add.s64 	%rd11937, %rd11936, %rd11934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25678,%dummy}, %rd11924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25679}, %rd11924;
	}
	shf.r.wrap.b32 	%r25680, %r25679, %r25678, 19;
	shf.r.wrap.b32 	%r25681, %r25678, %r25679, 19;
	mov.b64 	%rd11938, {%r25681, %r25680};
	shf.l.wrap.b32 	%r25682, %r25678, %r25679, 3;
	shf.l.wrap.b32 	%r25683, %r25679, %r25678, 3;
	mov.b64 	%rd11939, {%r25683, %r25682};
	shr.u64 	%rd11940, %rd11924, 6;
	xor.b64  	%rd11941, %rd11938, %rd11940;
	xor.b64  	%rd11942, %rd11941, %rd11939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25684,%dummy}, %rd11387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25685}, %rd11387;
	}
	shf.r.wrap.b32 	%r25686, %r25685, %r25684, 1;
	shf.r.wrap.b32 	%r25687, %r25684, %r25685, 1;
	mov.b64 	%rd11943, {%r25687, %r25686};
	shf.r.wrap.b32 	%r25688, %r25685, %r25684, 8;
	shf.r.wrap.b32 	%r25689, %r25684, %r25685, 8;
	mov.b64 	%rd11944, {%r25689, %r25688};
	shr.u64 	%rd11945, %rd11387, 7;
	xor.b64  	%rd11946, %rd11943, %rd11945;
	xor.b64  	%rd11947, %rd11946, %rd11944;
	add.s64 	%rd11948, %rd11859, %rd11386;
	add.s64 	%rd11949, %rd11948, %rd11942;
	add.s64 	%rd11950, %rd11949, %rd11947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25690,%dummy}, %rd11937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25691}, %rd11937;
	}
	shf.r.wrap.b32 	%r25692, %r25691, %r25690, 19;
	shf.r.wrap.b32 	%r25693, %r25690, %r25691, 19;
	mov.b64 	%rd11951, {%r25693, %r25692};
	shf.l.wrap.b32 	%r25694, %r25690, %r25691, 3;
	shf.l.wrap.b32 	%r25695, %r25691, %r25690, 3;
	mov.b64 	%rd11952, {%r25695, %r25694};
	shr.u64 	%rd11953, %rd11937, 6;
	xor.b64  	%rd11954, %rd11951, %rd11953;
	xor.b64  	%rd11955, %rd11954, %rd11952;
	shf.r.wrap.b32 	%r25696, %r25535, %r25534, 1;
	shf.r.wrap.b32 	%r25697, %r25534, %r25535, 1;
	mov.b64 	%rd11956, {%r25697, %r25696};
	shf.r.wrap.b32 	%r25698, %r25535, %r25534, 8;
	shf.r.wrap.b32 	%r25699, %r25534, %r25535, 8;
	mov.b64 	%rd11957, {%r25699, %r25698};
	shr.u64 	%rd11958, %rd11388, 7;
	xor.b64  	%rd11959, %rd11956, %rd11958;
	xor.b64  	%rd11960, %rd11959, %rd11957;
	add.s64 	%rd11961, %rd11872, %rd11387;
	add.s64 	%rd11962, %rd11961, %rd11955;
	add.s64 	%rd11963, %rd11962, %rd11960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25700,%dummy}, %rd11950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25701}, %rd11950;
	}
	shf.r.wrap.b32 	%r25702, %r25701, %r25700, 19;
	shf.r.wrap.b32 	%r25703, %r25700, %r25701, 19;
	mov.b64 	%rd11964, {%r25703, %r25702};
	shf.l.wrap.b32 	%r25704, %r25700, %r25701, 3;
	shf.l.wrap.b32 	%r25705, %r25701, %r25700, 3;
	mov.b64 	%rd11965, {%r25705, %r25704};
	shr.u64 	%rd11966, %rd11950, 6;
	xor.b64  	%rd11967, %rd11964, %rd11966;
	xor.b64  	%rd11968, %rd11967, %rd11965;
	shf.r.wrap.b32 	%r25706, %r25547, %r25546, 1;
	shf.r.wrap.b32 	%r25707, %r25546, %r25547, 1;
	mov.b64 	%rd11969, {%r25707, %r25706};
	shf.r.wrap.b32 	%r25708, %r25547, %r25546, 8;
	shf.r.wrap.b32 	%r25709, %r25546, %r25547, 8;
	mov.b64 	%rd11970, {%r25709, %r25708};
	shr.u64 	%rd11971, %rd11389, 7;
	xor.b64  	%rd11972, %rd11969, %rd11971;
	xor.b64  	%rd11973, %rd11972, %rd11970;
	add.s64 	%rd11974, %rd11885, %rd11388;
	add.s64 	%rd11975, %rd11974, %rd11968;
	add.s64 	%rd11976, %rd11975, %rd11973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25710,%dummy}, %rd11963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25711}, %rd11963;
	}
	shf.r.wrap.b32 	%r25712, %r25711, %r25710, 19;
	shf.r.wrap.b32 	%r25713, %r25710, %r25711, 19;
	mov.b64 	%rd11977, {%r25713, %r25712};
	shf.l.wrap.b32 	%r25714, %r25710, %r25711, 3;
	shf.l.wrap.b32 	%r25715, %r25711, %r25710, 3;
	mov.b64 	%rd11978, {%r25715, %r25714};
	shr.u64 	%rd11979, %rd11963, 6;
	xor.b64  	%rd11980, %rd11977, %rd11979;
	xor.b64  	%rd11981, %rd11980, %rd11978;
	shf.r.wrap.b32 	%r25716, %r25559, %r25558, 1;
	shf.r.wrap.b32 	%r25717, %r25558, %r25559, 1;
	mov.b64 	%rd11982, {%r25717, %r25716};
	shf.r.wrap.b32 	%r25718, %r25559, %r25558, 8;
	shf.r.wrap.b32 	%r25719, %r25558, %r25559, 8;
	mov.b64 	%rd11983, {%r25719, %r25718};
	shr.u64 	%rd11984, %rd11794, 7;
	xor.b64  	%rd11985, %rd11982, %rd11984;
	xor.b64  	%rd11986, %rd11985, %rd11983;
	add.s64 	%rd11987, %rd11898, %rd11389;
	add.s64 	%rd11988, %rd11987, %rd11981;
	add.s64 	%rd11989, %rd11988, %rd11986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25720,%dummy}, %rd11770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25721}, %rd11770;
	}
	shf.r.wrap.b32 	%r25722, %r25721, %r25720, 14;
	shf.r.wrap.b32 	%r25723, %r25720, %r25721, 14;
	mov.b64 	%rd11990, {%r25723, %r25722};
	shf.r.wrap.b32 	%r25724, %r25721, %r25720, 18;
	shf.r.wrap.b32 	%r25725, %r25720, %r25721, 18;
	mov.b64 	%rd11991, {%r25725, %r25724};
	xor.b64  	%rd11992, %rd11991, %rd11990;
	shf.l.wrap.b32 	%r25726, %r25720, %r25721, 23;
	shf.l.wrap.b32 	%r25727, %r25721, %r25720, 23;
	mov.b64 	%rd11993, {%r25727, %r25726};
	xor.b64  	%rd11994, %rd11992, %rd11993;
	xor.b64  	%rd11995, %rd11746, %rd11722;
	and.b64  	%rd11996, %rd11770, %rd11995;
	xor.b64  	%rd11997, %rd11996, %rd11722;
	add.s64 	%rd11998, %rd11698, %rd44;
	add.s64 	%rd11999, %rd11998, %rd11997;
	add.s64 	%rd12000, %rd11999, %rd11794;
	add.s64 	%rd12001, %rd12000, %rd11994;
	add.s64 	%rd12002, %rd12001, %rd11709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25728,%dummy}, %rd11781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25729}, %rd11781;
	}
	shf.r.wrap.b32 	%r25730, %r25729, %r25728, 28;
	shf.r.wrap.b32 	%r25731, %r25728, %r25729, 28;
	mov.b64 	%rd12003, {%r25731, %r25730};
	shf.l.wrap.b32 	%r25732, %r25728, %r25729, 30;
	shf.l.wrap.b32 	%r25733, %r25729, %r25728, 30;
	mov.b64 	%rd12004, {%r25733, %r25732};
	xor.b64  	%rd12005, %rd12004, %rd12003;
	shf.l.wrap.b32 	%r25734, %r25728, %r25729, 25;
	shf.l.wrap.b32 	%r25735, %r25729, %r25728, 25;
	mov.b64 	%rd12006, {%r25735, %r25734};
	xor.b64  	%rd12007, %rd12005, %rd12006;
	and.b64  	%rd12008, %rd11781, %rd11757;
	xor.b64  	%rd12009, %rd11781, %rd11757;
	and.b64  	%rd12010, %rd12009, %rd11733;
	or.b64  	%rd12011, %rd12010, %rd12008;
	add.s64 	%rd12012, %rd12001, %rd12011;
	add.s64 	%rd12013, %rd12012, %rd12007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25736,%dummy}, %rd12002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25737}, %rd12002;
	}
	shf.r.wrap.b32 	%r25738, %r25737, %r25736, 14;
	shf.r.wrap.b32 	%r25739, %r25736, %r25737, 14;
	mov.b64 	%rd12014, {%r25739, %r25738};
	shf.r.wrap.b32 	%r25740, %r25737, %r25736, 18;
	shf.r.wrap.b32 	%r25741, %r25736, %r25737, 18;
	mov.b64 	%rd12015, {%r25741, %r25740};
	xor.b64  	%rd12016, %rd12015, %rd12014;
	shf.l.wrap.b32 	%r25742, %r25736, %r25737, 23;
	shf.l.wrap.b32 	%r25743, %r25737, %r25736, 23;
	mov.b64 	%rd12017, {%r25743, %r25742};
	xor.b64  	%rd12018, %rd12016, %rd12017;
	xor.b64  	%rd12019, %rd11770, %rd11746;
	and.b64  	%rd12020, %rd12002, %rd12019;
	xor.b64  	%rd12021, %rd12020, %rd11746;
	add.s64 	%rd12022, %rd11722, %rd45;
	add.s64 	%rd12023, %rd12022, %rd11807;
	add.s64 	%rd12024, %rd12023, %rd12021;
	add.s64 	%rd12025, %rd12024, %rd12018;
	add.s64 	%rd12026, %rd12025, %rd11733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25744,%dummy}, %rd12013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25745}, %rd12013;
	}
	shf.r.wrap.b32 	%r25746, %r25745, %r25744, 28;
	shf.r.wrap.b32 	%r25747, %r25744, %r25745, 28;
	mov.b64 	%rd12027, {%r25747, %r25746};
	shf.l.wrap.b32 	%r25748, %r25744, %r25745, 30;
	shf.l.wrap.b32 	%r25749, %r25745, %r25744, 30;
	mov.b64 	%rd12028, {%r25749, %r25748};
	xor.b64  	%rd12029, %rd12028, %rd12027;
	shf.l.wrap.b32 	%r25750, %r25744, %r25745, 25;
	shf.l.wrap.b32 	%r25751, %r25745, %r25744, 25;
	mov.b64 	%rd12030, {%r25751, %r25750};
	xor.b64  	%rd12031, %rd12029, %rd12030;
	and.b64  	%rd12032, %rd12013, %rd11781;
	xor.b64  	%rd12033, %rd12013, %rd11781;
	and.b64  	%rd12034, %rd12033, %rd11757;
	or.b64  	%rd12035, %rd12034, %rd12032;
	add.s64 	%rd12036, %rd12025, %rd12035;
	add.s64 	%rd12037, %rd12036, %rd12031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25752,%dummy}, %rd12026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25753}, %rd12026;
	}
	shf.r.wrap.b32 	%r25754, %r25753, %r25752, 14;
	shf.r.wrap.b32 	%r25755, %r25752, %r25753, 14;
	mov.b64 	%rd12038, {%r25755, %r25754};
	shf.r.wrap.b32 	%r25756, %r25753, %r25752, 18;
	shf.r.wrap.b32 	%r25757, %r25752, %r25753, 18;
	mov.b64 	%rd12039, {%r25757, %r25756};
	xor.b64  	%rd12040, %rd12039, %rd12038;
	shf.l.wrap.b32 	%r25758, %r25752, %r25753, 23;
	shf.l.wrap.b32 	%r25759, %r25753, %r25752, 23;
	mov.b64 	%rd12041, {%r25759, %r25758};
	xor.b64  	%rd12042, %rd12040, %rd12041;
	xor.b64  	%rd12043, %rd12002, %rd11770;
	and.b64  	%rd12044, %rd12026, %rd12043;
	xor.b64  	%rd12045, %rd12044, %rd11770;
	add.s64 	%rd12046, %rd11746, %rd46;
	add.s64 	%rd12047, %rd12046, %rd11820;
	add.s64 	%rd12048, %rd12047, %rd12045;
	add.s64 	%rd12049, %rd12048, %rd12042;
	add.s64 	%rd12050, %rd12049, %rd11757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25760,%dummy}, %rd12037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25761}, %rd12037;
	}
	shf.r.wrap.b32 	%r25762, %r25761, %r25760, 28;
	shf.r.wrap.b32 	%r25763, %r25760, %r25761, 28;
	mov.b64 	%rd12051, {%r25763, %r25762};
	shf.l.wrap.b32 	%r25764, %r25760, %r25761, 30;
	shf.l.wrap.b32 	%r25765, %r25761, %r25760, 30;
	mov.b64 	%rd12052, {%r25765, %r25764};
	xor.b64  	%rd12053, %rd12052, %rd12051;
	shf.l.wrap.b32 	%r25766, %r25760, %r25761, 25;
	shf.l.wrap.b32 	%r25767, %r25761, %r25760, 25;
	mov.b64 	%rd12054, {%r25767, %r25766};
	xor.b64  	%rd12055, %rd12053, %rd12054;
	and.b64  	%rd12056, %rd12037, %rd12013;
	xor.b64  	%rd12057, %rd12037, %rd12013;
	and.b64  	%rd12058, %rd12057, %rd11781;
	or.b64  	%rd12059, %rd12058, %rd12056;
	add.s64 	%rd12060, %rd12049, %rd12059;
	add.s64 	%rd12061, %rd12060, %rd12055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25768,%dummy}, %rd12050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25769}, %rd12050;
	}
	shf.r.wrap.b32 	%r25770, %r25769, %r25768, 14;
	shf.r.wrap.b32 	%r25771, %r25768, %r25769, 14;
	mov.b64 	%rd12062, {%r25771, %r25770};
	shf.r.wrap.b32 	%r25772, %r25769, %r25768, 18;
	shf.r.wrap.b32 	%r25773, %r25768, %r25769, 18;
	mov.b64 	%rd12063, {%r25773, %r25772};
	xor.b64  	%rd12064, %rd12063, %rd12062;
	shf.l.wrap.b32 	%r25774, %r25768, %r25769, 23;
	shf.l.wrap.b32 	%r25775, %r25769, %r25768, 23;
	mov.b64 	%rd12065, {%r25775, %r25774};
	xor.b64  	%rd12066, %rd12064, %rd12065;
	xor.b64  	%rd12067, %rd12026, %rd12002;
	and.b64  	%rd12068, %rd12050, %rd12067;
	xor.b64  	%rd12069, %rd12068, %rd12002;
	add.s64 	%rd12070, %rd11770, %rd47;
	add.s64 	%rd12071, %rd12070, %rd11833;
	add.s64 	%rd12072, %rd12071, %rd12069;
	add.s64 	%rd12073, %rd12072, %rd12066;
	add.s64 	%rd12074, %rd12073, %rd11781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25776,%dummy}, %rd12061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25777}, %rd12061;
	}
	shf.r.wrap.b32 	%r25778, %r25777, %r25776, 28;
	shf.r.wrap.b32 	%r25779, %r25776, %r25777, 28;
	mov.b64 	%rd12075, {%r25779, %r25778};
	shf.l.wrap.b32 	%r25780, %r25776, %r25777, 30;
	shf.l.wrap.b32 	%r25781, %r25777, %r25776, 30;
	mov.b64 	%rd12076, {%r25781, %r25780};
	xor.b64  	%rd12077, %rd12076, %rd12075;
	shf.l.wrap.b32 	%r25782, %r25776, %r25777, 25;
	shf.l.wrap.b32 	%r25783, %r25777, %r25776, 25;
	mov.b64 	%rd12078, {%r25783, %r25782};
	xor.b64  	%rd12079, %rd12077, %rd12078;
	and.b64  	%rd12080, %rd12061, %rd12037;
	xor.b64  	%rd12081, %rd12061, %rd12037;
	and.b64  	%rd12082, %rd12081, %rd12013;
	or.b64  	%rd12083, %rd12082, %rd12080;
	add.s64 	%rd12084, %rd12073, %rd12083;
	add.s64 	%rd12085, %rd12084, %rd12079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25784,%dummy}, %rd12074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25785}, %rd12074;
	}
	shf.r.wrap.b32 	%r25786, %r25785, %r25784, 14;
	shf.r.wrap.b32 	%r25787, %r25784, %r25785, 14;
	mov.b64 	%rd12086, {%r25787, %r25786};
	shf.r.wrap.b32 	%r25788, %r25785, %r25784, 18;
	shf.r.wrap.b32 	%r25789, %r25784, %r25785, 18;
	mov.b64 	%rd12087, {%r25789, %r25788};
	xor.b64  	%rd12088, %rd12087, %rd12086;
	shf.l.wrap.b32 	%r25790, %r25784, %r25785, 23;
	shf.l.wrap.b32 	%r25791, %r25785, %r25784, 23;
	mov.b64 	%rd12089, {%r25791, %r25790};
	xor.b64  	%rd12090, %rd12088, %rd12089;
	xor.b64  	%rd12091, %rd12050, %rd12026;
	and.b64  	%rd12092, %rd12074, %rd12091;
	xor.b64  	%rd12093, %rd12092, %rd12026;
	add.s64 	%rd12094, %rd11846, %rd48;
	add.s64 	%rd12095, %rd12094, %rd12002;
	add.s64 	%rd12096, %rd12095, %rd12093;
	add.s64 	%rd12097, %rd12096, %rd12090;
	add.s64 	%rd12098, %rd12097, %rd12013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25792,%dummy}, %rd12085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25793}, %rd12085;
	}
	shf.r.wrap.b32 	%r25794, %r25793, %r25792, 28;
	shf.r.wrap.b32 	%r25795, %r25792, %r25793, 28;
	mov.b64 	%rd12099, {%r25795, %r25794};
	shf.l.wrap.b32 	%r25796, %r25792, %r25793, 30;
	shf.l.wrap.b32 	%r25797, %r25793, %r25792, 30;
	mov.b64 	%rd12100, {%r25797, %r25796};
	xor.b64  	%rd12101, %rd12100, %rd12099;
	shf.l.wrap.b32 	%r25798, %r25792, %r25793, 25;
	shf.l.wrap.b32 	%r25799, %r25793, %r25792, 25;
	mov.b64 	%rd12102, {%r25799, %r25798};
	xor.b64  	%rd12103, %rd12101, %rd12102;
	and.b64  	%rd12104, %rd12085, %rd12061;
	xor.b64  	%rd12105, %rd12085, %rd12061;
	and.b64  	%rd12106, %rd12105, %rd12037;
	or.b64  	%rd12107, %rd12106, %rd12104;
	add.s64 	%rd12108, %rd12097, %rd12107;
	add.s64 	%rd12109, %rd12108, %rd12103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25800,%dummy}, %rd12098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25801}, %rd12098;
	}
	shf.r.wrap.b32 	%r25802, %r25801, %r25800, 14;
	shf.r.wrap.b32 	%r25803, %r25800, %r25801, 14;
	mov.b64 	%rd12110, {%r25803, %r25802};
	shf.r.wrap.b32 	%r25804, %r25801, %r25800, 18;
	shf.r.wrap.b32 	%r25805, %r25800, %r25801, 18;
	mov.b64 	%rd12111, {%r25805, %r25804};
	xor.b64  	%rd12112, %rd12111, %rd12110;
	shf.l.wrap.b32 	%r25806, %r25800, %r25801, 23;
	shf.l.wrap.b32 	%r25807, %r25801, %r25800, 23;
	mov.b64 	%rd12113, {%r25807, %r25806};
	xor.b64  	%rd12114, %rd12112, %rd12113;
	xor.b64  	%rd12115, %rd12074, %rd12050;
	and.b64  	%rd12116, %rd12098, %rd12115;
	xor.b64  	%rd12117, %rd12116, %rd12050;
	add.s64 	%rd12118, %rd11859, %rd49;
	add.s64 	%rd12119, %rd12118, %rd12026;
	add.s64 	%rd12120, %rd12119, %rd12117;
	add.s64 	%rd12121, %rd12120, %rd12114;
	add.s64 	%rd12122, %rd12121, %rd12037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25808,%dummy}, %rd12109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25809}, %rd12109;
	}
	shf.r.wrap.b32 	%r25810, %r25809, %r25808, 28;
	shf.r.wrap.b32 	%r25811, %r25808, %r25809, 28;
	mov.b64 	%rd12123, {%r25811, %r25810};
	shf.l.wrap.b32 	%r25812, %r25808, %r25809, 30;
	shf.l.wrap.b32 	%r25813, %r25809, %r25808, 30;
	mov.b64 	%rd12124, {%r25813, %r25812};
	xor.b64  	%rd12125, %rd12124, %rd12123;
	shf.l.wrap.b32 	%r25814, %r25808, %r25809, 25;
	shf.l.wrap.b32 	%r25815, %r25809, %r25808, 25;
	mov.b64 	%rd12126, {%r25815, %r25814};
	xor.b64  	%rd12127, %rd12125, %rd12126;
	and.b64  	%rd12128, %rd12109, %rd12085;
	xor.b64  	%rd12129, %rd12109, %rd12085;
	and.b64  	%rd12130, %rd12129, %rd12061;
	or.b64  	%rd12131, %rd12130, %rd12128;
	add.s64 	%rd12132, %rd12121, %rd12131;
	add.s64 	%rd12133, %rd12132, %rd12127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25816,%dummy}, %rd12122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25817}, %rd12122;
	}
	shf.r.wrap.b32 	%r25818, %r25817, %r25816, 14;
	shf.r.wrap.b32 	%r25819, %r25816, %r25817, 14;
	mov.b64 	%rd12134, {%r25819, %r25818};
	shf.r.wrap.b32 	%r25820, %r25817, %r25816, 18;
	shf.r.wrap.b32 	%r25821, %r25816, %r25817, 18;
	mov.b64 	%rd12135, {%r25821, %r25820};
	xor.b64  	%rd12136, %rd12135, %rd12134;
	shf.l.wrap.b32 	%r25822, %r25816, %r25817, 23;
	shf.l.wrap.b32 	%r25823, %r25817, %r25816, 23;
	mov.b64 	%rd12137, {%r25823, %r25822};
	xor.b64  	%rd12138, %rd12136, %rd12137;
	xor.b64  	%rd12139, %rd12098, %rd12074;
	and.b64  	%rd12140, %rd12122, %rd12139;
	xor.b64  	%rd12141, %rd12140, %rd12074;
	add.s64 	%rd12142, %rd11872, %rd50;
	add.s64 	%rd12143, %rd12142, %rd12050;
	add.s64 	%rd12144, %rd12143, %rd12141;
	add.s64 	%rd12145, %rd12144, %rd12138;
	add.s64 	%rd12146, %rd12145, %rd12061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25824,%dummy}, %rd12133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25825}, %rd12133;
	}
	shf.r.wrap.b32 	%r25826, %r25825, %r25824, 28;
	shf.r.wrap.b32 	%r25827, %r25824, %r25825, 28;
	mov.b64 	%rd12147, {%r25827, %r25826};
	shf.l.wrap.b32 	%r25828, %r25824, %r25825, 30;
	shf.l.wrap.b32 	%r25829, %r25825, %r25824, 30;
	mov.b64 	%rd12148, {%r25829, %r25828};
	xor.b64  	%rd12149, %rd12148, %rd12147;
	shf.l.wrap.b32 	%r25830, %r25824, %r25825, 25;
	shf.l.wrap.b32 	%r25831, %r25825, %r25824, 25;
	mov.b64 	%rd12150, {%r25831, %r25830};
	xor.b64  	%rd12151, %rd12149, %rd12150;
	and.b64  	%rd12152, %rd12133, %rd12109;
	xor.b64  	%rd12153, %rd12133, %rd12109;
	and.b64  	%rd12154, %rd12153, %rd12085;
	or.b64  	%rd12155, %rd12154, %rd12152;
	add.s64 	%rd12156, %rd12145, %rd12155;
	add.s64 	%rd12157, %rd12156, %rd12151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25832,%dummy}, %rd12146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25833}, %rd12146;
	}
	shf.r.wrap.b32 	%r25834, %r25833, %r25832, 14;
	shf.r.wrap.b32 	%r25835, %r25832, %r25833, 14;
	mov.b64 	%rd12158, {%r25835, %r25834};
	shf.r.wrap.b32 	%r25836, %r25833, %r25832, 18;
	shf.r.wrap.b32 	%r25837, %r25832, %r25833, 18;
	mov.b64 	%rd12159, {%r25837, %r25836};
	xor.b64  	%rd12160, %rd12159, %rd12158;
	shf.l.wrap.b32 	%r25838, %r25832, %r25833, 23;
	shf.l.wrap.b32 	%r25839, %r25833, %r25832, 23;
	mov.b64 	%rd12161, {%r25839, %r25838};
	xor.b64  	%rd12162, %rd12160, %rd12161;
	xor.b64  	%rd12163, %rd12122, %rd12098;
	and.b64  	%rd12164, %rd12146, %rd12163;
	xor.b64  	%rd12165, %rd12164, %rd12098;
	add.s64 	%rd12166, %rd11885, %rd51;
	add.s64 	%rd12167, %rd12166, %rd12074;
	add.s64 	%rd12168, %rd12167, %rd12165;
	add.s64 	%rd12169, %rd12168, %rd12162;
	add.s64 	%rd12170, %rd12169, %rd12085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25840,%dummy}, %rd12157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25841}, %rd12157;
	}
	shf.r.wrap.b32 	%r25842, %r25841, %r25840, 28;
	shf.r.wrap.b32 	%r25843, %r25840, %r25841, 28;
	mov.b64 	%rd12171, {%r25843, %r25842};
	shf.l.wrap.b32 	%r25844, %r25840, %r25841, 30;
	shf.l.wrap.b32 	%r25845, %r25841, %r25840, 30;
	mov.b64 	%rd12172, {%r25845, %r25844};
	xor.b64  	%rd12173, %rd12172, %rd12171;
	shf.l.wrap.b32 	%r25846, %r25840, %r25841, 25;
	shf.l.wrap.b32 	%r25847, %r25841, %r25840, 25;
	mov.b64 	%rd12174, {%r25847, %r25846};
	xor.b64  	%rd12175, %rd12173, %rd12174;
	and.b64  	%rd12176, %rd12157, %rd12133;
	xor.b64  	%rd12177, %rd12157, %rd12133;
	and.b64  	%rd12178, %rd12177, %rd12109;
	or.b64  	%rd12179, %rd12178, %rd12176;
	add.s64 	%rd12180, %rd12169, %rd12179;
	add.s64 	%rd12181, %rd12180, %rd12175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25848,%dummy}, %rd12170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25849}, %rd12170;
	}
	shf.r.wrap.b32 	%r25850, %r25849, %r25848, 14;
	shf.r.wrap.b32 	%r25851, %r25848, %r25849, 14;
	mov.b64 	%rd12182, {%r25851, %r25850};
	shf.r.wrap.b32 	%r25852, %r25849, %r25848, 18;
	shf.r.wrap.b32 	%r25853, %r25848, %r25849, 18;
	mov.b64 	%rd12183, {%r25853, %r25852};
	xor.b64  	%rd12184, %rd12183, %rd12182;
	shf.l.wrap.b32 	%r25854, %r25848, %r25849, 23;
	shf.l.wrap.b32 	%r25855, %r25849, %r25848, 23;
	mov.b64 	%rd12185, {%r25855, %r25854};
	xor.b64  	%rd12186, %rd12184, %rd12185;
	xor.b64  	%rd12187, %rd12146, %rd12122;
	and.b64  	%rd12188, %rd12170, %rd12187;
	xor.b64  	%rd12189, %rd12188, %rd12122;
	add.s64 	%rd12190, %rd11898, %rd52;
	add.s64 	%rd12191, %rd12190, %rd12098;
	add.s64 	%rd12192, %rd12191, %rd12189;
	add.s64 	%rd12193, %rd12192, %rd12186;
	add.s64 	%rd12194, %rd12193, %rd12109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25856,%dummy}, %rd12181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25857}, %rd12181;
	}
	shf.r.wrap.b32 	%r25858, %r25857, %r25856, 28;
	shf.r.wrap.b32 	%r25859, %r25856, %r25857, 28;
	mov.b64 	%rd12195, {%r25859, %r25858};
	shf.l.wrap.b32 	%r25860, %r25856, %r25857, 30;
	shf.l.wrap.b32 	%r25861, %r25857, %r25856, 30;
	mov.b64 	%rd12196, {%r25861, %r25860};
	xor.b64  	%rd12197, %rd12196, %rd12195;
	shf.l.wrap.b32 	%r25862, %r25856, %r25857, 25;
	shf.l.wrap.b32 	%r25863, %r25857, %r25856, 25;
	mov.b64 	%rd12198, {%r25863, %r25862};
	xor.b64  	%rd12199, %rd12197, %rd12198;
	and.b64  	%rd12200, %rd12181, %rd12157;
	xor.b64  	%rd12201, %rd12181, %rd12157;
	and.b64  	%rd12202, %rd12201, %rd12133;
	or.b64  	%rd12203, %rd12202, %rd12200;
	add.s64 	%rd12204, %rd12193, %rd12203;
	add.s64 	%rd12205, %rd12204, %rd12199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25864,%dummy}, %rd12194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25865}, %rd12194;
	}
	shf.r.wrap.b32 	%r25866, %r25865, %r25864, 14;
	shf.r.wrap.b32 	%r25867, %r25864, %r25865, 14;
	mov.b64 	%rd12206, {%r25867, %r25866};
	shf.r.wrap.b32 	%r25868, %r25865, %r25864, 18;
	shf.r.wrap.b32 	%r25869, %r25864, %r25865, 18;
	mov.b64 	%rd12207, {%r25869, %r25868};
	xor.b64  	%rd12208, %rd12207, %rd12206;
	shf.l.wrap.b32 	%r25870, %r25864, %r25865, 23;
	shf.l.wrap.b32 	%r25871, %r25865, %r25864, 23;
	mov.b64 	%rd12209, {%r25871, %r25870};
	xor.b64  	%rd12210, %rd12208, %rd12209;
	xor.b64  	%rd12211, %rd12170, %rd12146;
	and.b64  	%rd12212, %rd12194, %rd12211;
	xor.b64  	%rd12213, %rd12212, %rd12146;
	add.s64 	%rd12214, %rd11911, %rd53;
	add.s64 	%rd12215, %rd12214, %rd12122;
	add.s64 	%rd12216, %rd12215, %rd12213;
	add.s64 	%rd12217, %rd12216, %rd12210;
	add.s64 	%rd12218, %rd12217, %rd12133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25872,%dummy}, %rd12205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25873}, %rd12205;
	}
	shf.r.wrap.b32 	%r25874, %r25873, %r25872, 28;
	shf.r.wrap.b32 	%r25875, %r25872, %r25873, 28;
	mov.b64 	%rd12219, {%r25875, %r25874};
	shf.l.wrap.b32 	%r25876, %r25872, %r25873, 30;
	shf.l.wrap.b32 	%r25877, %r25873, %r25872, 30;
	mov.b64 	%rd12220, {%r25877, %r25876};
	xor.b64  	%rd12221, %rd12220, %rd12219;
	shf.l.wrap.b32 	%r25878, %r25872, %r25873, 25;
	shf.l.wrap.b32 	%r25879, %r25873, %r25872, 25;
	mov.b64 	%rd12222, {%r25879, %r25878};
	xor.b64  	%rd12223, %rd12221, %rd12222;
	and.b64  	%rd12224, %rd12205, %rd12181;
	xor.b64  	%rd12225, %rd12205, %rd12181;
	and.b64  	%rd12226, %rd12225, %rd12157;
	or.b64  	%rd12227, %rd12226, %rd12224;
	add.s64 	%rd12228, %rd12217, %rd12227;
	add.s64 	%rd12229, %rd12228, %rd12223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25880,%dummy}, %rd12218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25881}, %rd12218;
	}
	shf.r.wrap.b32 	%r25882, %r25881, %r25880, 14;
	shf.r.wrap.b32 	%r25883, %r25880, %r25881, 14;
	mov.b64 	%rd12230, {%r25883, %r25882};
	shf.r.wrap.b32 	%r25884, %r25881, %r25880, 18;
	shf.r.wrap.b32 	%r25885, %r25880, %r25881, 18;
	mov.b64 	%rd12231, {%r25885, %r25884};
	xor.b64  	%rd12232, %rd12231, %rd12230;
	shf.l.wrap.b32 	%r25886, %r25880, %r25881, 23;
	shf.l.wrap.b32 	%r25887, %r25881, %r25880, 23;
	mov.b64 	%rd12233, {%r25887, %r25886};
	xor.b64  	%rd12234, %rd12232, %rd12233;
	xor.b64  	%rd12235, %rd12194, %rd12170;
	and.b64  	%rd12236, %rd12218, %rd12235;
	xor.b64  	%rd12237, %rd12236, %rd12170;
	add.s64 	%rd12238, %rd11924, %rd54;
	add.s64 	%rd12239, %rd12238, %rd12146;
	add.s64 	%rd12240, %rd12239, %rd12237;
	add.s64 	%rd12241, %rd12240, %rd12234;
	add.s64 	%rd12242, %rd12241, %rd12157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25888,%dummy}, %rd12229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25889}, %rd12229;
	}
	shf.r.wrap.b32 	%r25890, %r25889, %r25888, 28;
	shf.r.wrap.b32 	%r25891, %r25888, %r25889, 28;
	mov.b64 	%rd12243, {%r25891, %r25890};
	shf.l.wrap.b32 	%r25892, %r25888, %r25889, 30;
	shf.l.wrap.b32 	%r25893, %r25889, %r25888, 30;
	mov.b64 	%rd12244, {%r25893, %r25892};
	xor.b64  	%rd12245, %rd12244, %rd12243;
	shf.l.wrap.b32 	%r25894, %r25888, %r25889, 25;
	shf.l.wrap.b32 	%r25895, %r25889, %r25888, 25;
	mov.b64 	%rd12246, {%r25895, %r25894};
	xor.b64  	%rd12247, %rd12245, %rd12246;
	and.b64  	%rd12248, %rd12229, %rd12205;
	xor.b64  	%rd12249, %rd12229, %rd12205;
	and.b64  	%rd12250, %rd12249, %rd12181;
	or.b64  	%rd12251, %rd12250, %rd12248;
	add.s64 	%rd12252, %rd12241, %rd12251;
	add.s64 	%rd12253, %rd12252, %rd12247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25896,%dummy}, %rd12242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25897}, %rd12242;
	}
	shf.r.wrap.b32 	%r25898, %r25897, %r25896, 14;
	shf.r.wrap.b32 	%r25899, %r25896, %r25897, 14;
	mov.b64 	%rd12254, {%r25899, %r25898};
	shf.r.wrap.b32 	%r25900, %r25897, %r25896, 18;
	shf.r.wrap.b32 	%r25901, %r25896, %r25897, 18;
	mov.b64 	%rd12255, {%r25901, %r25900};
	xor.b64  	%rd12256, %rd12255, %rd12254;
	shf.l.wrap.b32 	%r25902, %r25896, %r25897, 23;
	shf.l.wrap.b32 	%r25903, %r25897, %r25896, 23;
	mov.b64 	%rd12257, {%r25903, %r25902};
	xor.b64  	%rd12258, %rd12256, %rd12257;
	xor.b64  	%rd12259, %rd12218, %rd12194;
	and.b64  	%rd12260, %rd12242, %rd12259;
	xor.b64  	%rd12261, %rd12260, %rd12194;
	add.s64 	%rd12262, %rd11937, %rd55;
	add.s64 	%rd12263, %rd12262, %rd12170;
	add.s64 	%rd12264, %rd12263, %rd12261;
	add.s64 	%rd12265, %rd12264, %rd12258;
	add.s64 	%rd12266, %rd12265, %rd12181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25904,%dummy}, %rd12253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25905}, %rd12253;
	}
	shf.r.wrap.b32 	%r25906, %r25905, %r25904, 28;
	shf.r.wrap.b32 	%r25907, %r25904, %r25905, 28;
	mov.b64 	%rd12267, {%r25907, %r25906};
	shf.l.wrap.b32 	%r25908, %r25904, %r25905, 30;
	shf.l.wrap.b32 	%r25909, %r25905, %r25904, 30;
	mov.b64 	%rd12268, {%r25909, %r25908};
	xor.b64  	%rd12269, %rd12268, %rd12267;
	shf.l.wrap.b32 	%r25910, %r25904, %r25905, 25;
	shf.l.wrap.b32 	%r25911, %r25905, %r25904, 25;
	mov.b64 	%rd12270, {%r25911, %r25910};
	xor.b64  	%rd12271, %rd12269, %rd12270;
	and.b64  	%rd12272, %rd12253, %rd12229;
	xor.b64  	%rd12273, %rd12253, %rd12229;
	and.b64  	%rd12274, %rd12273, %rd12205;
	or.b64  	%rd12275, %rd12274, %rd12272;
	add.s64 	%rd12276, %rd12265, %rd12275;
	add.s64 	%rd12277, %rd12276, %rd12271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25912,%dummy}, %rd12266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25913}, %rd12266;
	}
	shf.r.wrap.b32 	%r25914, %r25913, %r25912, 14;
	shf.r.wrap.b32 	%r25915, %r25912, %r25913, 14;
	mov.b64 	%rd12278, {%r25915, %r25914};
	shf.r.wrap.b32 	%r25916, %r25913, %r25912, 18;
	shf.r.wrap.b32 	%r25917, %r25912, %r25913, 18;
	mov.b64 	%rd12279, {%r25917, %r25916};
	xor.b64  	%rd12280, %rd12279, %rd12278;
	shf.l.wrap.b32 	%r25918, %r25912, %r25913, 23;
	shf.l.wrap.b32 	%r25919, %r25913, %r25912, 23;
	mov.b64 	%rd12281, {%r25919, %r25918};
	xor.b64  	%rd12282, %rd12280, %rd12281;
	xor.b64  	%rd12283, %rd12242, %rd12218;
	and.b64  	%rd12284, %rd12266, %rd12283;
	xor.b64  	%rd12285, %rd12284, %rd12218;
	add.s64 	%rd12286, %rd11950, %rd56;
	add.s64 	%rd12287, %rd12286, %rd12194;
	add.s64 	%rd12288, %rd12287, %rd12285;
	add.s64 	%rd12289, %rd12288, %rd12282;
	add.s64 	%rd12290, %rd12289, %rd12205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25920,%dummy}, %rd12277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25921}, %rd12277;
	}
	shf.r.wrap.b32 	%r25922, %r25921, %r25920, 28;
	shf.r.wrap.b32 	%r25923, %r25920, %r25921, 28;
	mov.b64 	%rd12291, {%r25923, %r25922};
	shf.l.wrap.b32 	%r25924, %r25920, %r25921, 30;
	shf.l.wrap.b32 	%r25925, %r25921, %r25920, 30;
	mov.b64 	%rd12292, {%r25925, %r25924};
	xor.b64  	%rd12293, %rd12292, %rd12291;
	shf.l.wrap.b32 	%r25926, %r25920, %r25921, 25;
	shf.l.wrap.b32 	%r25927, %r25921, %r25920, 25;
	mov.b64 	%rd12294, {%r25927, %r25926};
	xor.b64  	%rd12295, %rd12293, %rd12294;
	and.b64  	%rd12296, %rd12277, %rd12253;
	xor.b64  	%rd12297, %rd12277, %rd12253;
	and.b64  	%rd12298, %rd12297, %rd12229;
	or.b64  	%rd12299, %rd12298, %rd12296;
	add.s64 	%rd12300, %rd12289, %rd12299;
	add.s64 	%rd12301, %rd12300, %rd12295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25928,%dummy}, %rd12290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25929}, %rd12290;
	}
	shf.r.wrap.b32 	%r25930, %r25929, %r25928, 14;
	shf.r.wrap.b32 	%r25931, %r25928, %r25929, 14;
	mov.b64 	%rd12302, {%r25931, %r25930};
	shf.r.wrap.b32 	%r25932, %r25929, %r25928, 18;
	shf.r.wrap.b32 	%r25933, %r25928, %r25929, 18;
	mov.b64 	%rd12303, {%r25933, %r25932};
	xor.b64  	%rd12304, %rd12303, %rd12302;
	shf.l.wrap.b32 	%r25934, %r25928, %r25929, 23;
	shf.l.wrap.b32 	%r25935, %r25929, %r25928, 23;
	mov.b64 	%rd12305, {%r25935, %r25934};
	xor.b64  	%rd12306, %rd12304, %rd12305;
	xor.b64  	%rd12307, %rd12266, %rd12242;
	and.b64  	%rd12308, %rd12290, %rd12307;
	xor.b64  	%rd12309, %rd12308, %rd12242;
	add.s64 	%rd12310, %rd11963, %rd57;
	add.s64 	%rd12311, %rd12310, %rd12218;
	add.s64 	%rd12312, %rd12311, %rd12309;
	add.s64 	%rd12313, %rd12312, %rd12306;
	add.s64 	%rd12314, %rd12313, %rd12229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25936,%dummy}, %rd12301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25937}, %rd12301;
	}
	shf.r.wrap.b32 	%r25938, %r25937, %r25936, 28;
	shf.r.wrap.b32 	%r25939, %r25936, %r25937, 28;
	mov.b64 	%rd12315, {%r25939, %r25938};
	shf.l.wrap.b32 	%r25940, %r25936, %r25937, 30;
	shf.l.wrap.b32 	%r25941, %r25937, %r25936, 30;
	mov.b64 	%rd12316, {%r25941, %r25940};
	xor.b64  	%rd12317, %rd12316, %rd12315;
	shf.l.wrap.b32 	%r25942, %r25936, %r25937, 25;
	shf.l.wrap.b32 	%r25943, %r25937, %r25936, 25;
	mov.b64 	%rd12318, {%r25943, %r25942};
	xor.b64  	%rd12319, %rd12317, %rd12318;
	and.b64  	%rd12320, %rd12301, %rd12277;
	xor.b64  	%rd12321, %rd12301, %rd12277;
	and.b64  	%rd12322, %rd12321, %rd12253;
	or.b64  	%rd12323, %rd12322, %rd12320;
	add.s64 	%rd12324, %rd12313, %rd12323;
	add.s64 	%rd12325, %rd12324, %rd12319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25944,%dummy}, %rd12314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25945}, %rd12314;
	}
	shf.r.wrap.b32 	%r25946, %r25945, %r25944, 14;
	shf.r.wrap.b32 	%r25947, %r25944, %r25945, 14;
	mov.b64 	%rd12326, {%r25947, %r25946};
	shf.r.wrap.b32 	%r25948, %r25945, %r25944, 18;
	shf.r.wrap.b32 	%r25949, %r25944, %r25945, 18;
	mov.b64 	%rd12327, {%r25949, %r25948};
	xor.b64  	%rd12328, %rd12327, %rd12326;
	shf.l.wrap.b32 	%r25950, %r25944, %r25945, 23;
	shf.l.wrap.b32 	%r25951, %r25945, %r25944, 23;
	mov.b64 	%rd12329, {%r25951, %r25950};
	xor.b64  	%rd12330, %rd12328, %rd12329;
	xor.b64  	%rd12331, %rd12290, %rd12266;
	and.b64  	%rd12332, %rd12314, %rd12331;
	xor.b64  	%rd12333, %rd12332, %rd12266;
	add.s64 	%rd12334, %rd11976, %rd58;
	add.s64 	%rd12335, %rd12334, %rd12242;
	add.s64 	%rd12336, %rd12335, %rd12333;
	add.s64 	%rd12337, %rd12336, %rd12330;
	add.s64 	%rd12338, %rd12337, %rd12253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25952,%dummy}, %rd12325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25953}, %rd12325;
	}
	shf.r.wrap.b32 	%r25954, %r25953, %r25952, 28;
	shf.r.wrap.b32 	%r25955, %r25952, %r25953, 28;
	mov.b64 	%rd12339, {%r25955, %r25954};
	shf.l.wrap.b32 	%r25956, %r25952, %r25953, 30;
	shf.l.wrap.b32 	%r25957, %r25953, %r25952, 30;
	mov.b64 	%rd12340, {%r25957, %r25956};
	xor.b64  	%rd12341, %rd12340, %rd12339;
	shf.l.wrap.b32 	%r25958, %r25952, %r25953, 25;
	shf.l.wrap.b32 	%r25959, %r25953, %r25952, 25;
	mov.b64 	%rd12342, {%r25959, %r25958};
	xor.b64  	%rd12343, %rd12341, %rd12342;
	and.b64  	%rd12344, %rd12325, %rd12301;
	xor.b64  	%rd12345, %rd12325, %rd12301;
	and.b64  	%rd12346, %rd12345, %rd12277;
	or.b64  	%rd12347, %rd12346, %rd12344;
	add.s64 	%rd12348, %rd12337, %rd12347;
	add.s64 	%rd12349, %rd12348, %rd12343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25960,%dummy}, %rd12338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25961}, %rd12338;
	}
	shf.r.wrap.b32 	%r25962, %r25961, %r25960, 14;
	shf.r.wrap.b32 	%r25963, %r25960, %r25961, 14;
	mov.b64 	%rd12350, {%r25963, %r25962};
	shf.r.wrap.b32 	%r25964, %r25961, %r25960, 18;
	shf.r.wrap.b32 	%r25965, %r25960, %r25961, 18;
	mov.b64 	%rd12351, {%r25965, %r25964};
	xor.b64  	%rd12352, %rd12351, %rd12350;
	shf.l.wrap.b32 	%r25966, %r25960, %r25961, 23;
	shf.l.wrap.b32 	%r25967, %r25961, %r25960, 23;
	mov.b64 	%rd12353, {%r25967, %r25966};
	xor.b64  	%rd12354, %rd12352, %rd12353;
	xor.b64  	%rd12355, %rd12314, %rd12290;
	and.b64  	%rd12356, %rd12338, %rd12355;
	xor.b64  	%rd12357, %rd12356, %rd12290;
	add.s64 	%rd12358, %rd11989, %rd59;
	add.s64 	%rd12359, %rd12358, %rd12266;
	add.s64 	%rd12360, %rd12359, %rd12357;
	add.s64 	%rd12361, %rd12360, %rd12354;
	add.s64 	%rd12362, %rd12361, %rd12277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25968,%dummy}, %rd12349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25969}, %rd12349;
	}
	shf.r.wrap.b32 	%r25970, %r25969, %r25968, 28;
	shf.r.wrap.b32 	%r25971, %r25968, %r25969, 28;
	mov.b64 	%rd12363, {%r25971, %r25970};
	shf.l.wrap.b32 	%r25972, %r25968, %r25969, 30;
	shf.l.wrap.b32 	%r25973, %r25969, %r25968, 30;
	mov.b64 	%rd12364, {%r25973, %r25972};
	xor.b64  	%rd12365, %rd12364, %rd12363;
	shf.l.wrap.b32 	%r25974, %r25968, %r25969, 25;
	shf.l.wrap.b32 	%r25975, %r25969, %r25968, 25;
	mov.b64 	%rd12366, {%r25975, %r25974};
	xor.b64  	%rd12367, %rd12365, %rd12366;
	and.b64  	%rd12368, %rd12349, %rd12325;
	xor.b64  	%rd12369, %rd12349, %rd12325;
	and.b64  	%rd12370, %rd12369, %rd12301;
	or.b64  	%rd12371, %rd12370, %rd12368;
	add.s64 	%rd12372, %rd12361, %rd12371;
	add.s64 	%rd12373, %rd12372, %rd12367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25976,%dummy}, %rd11976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25977}, %rd11976;
	}
	shf.r.wrap.b32 	%r25978, %r25977, %r25976, 19;
	shf.r.wrap.b32 	%r25979, %r25976, %r25977, 19;
	mov.b64 	%rd12374, {%r25979, %r25978};
	shf.l.wrap.b32 	%r25980, %r25976, %r25977, 3;
	shf.l.wrap.b32 	%r25981, %r25977, %r25976, 3;
	mov.b64 	%rd12375, {%r25981, %r25980};
	shr.u64 	%rd12376, %rd11976, 6;
	xor.b64  	%rd12377, %rd12374, %rd12376;
	xor.b64  	%rd12378, %rd12377, %rd12375;
	shf.r.wrap.b32 	%r25982, %r25571, %r25570, 1;
	shf.r.wrap.b32 	%r25983, %r25570, %r25571, 1;
	mov.b64 	%rd12379, {%r25983, %r25982};
	shf.r.wrap.b32 	%r25984, %r25571, %r25570, 8;
	shf.r.wrap.b32 	%r25985, %r25570, %r25571, 8;
	mov.b64 	%rd12380, {%r25985, %r25984};
	shr.u64 	%rd12381, %rd11807, 7;
	xor.b64  	%rd12382, %rd12379, %rd12381;
	xor.b64  	%rd12383, %rd12382, %rd12380;
	add.s64 	%rd12384, %rd11911, %rd11794;
	add.s64 	%rd12385, %rd12384, %rd12378;
	add.s64 	%rd12386, %rd12385, %rd12383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25986,%dummy}, %rd11989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25987}, %rd11989;
	}
	shf.r.wrap.b32 	%r25988, %r25987, %r25986, 19;
	shf.r.wrap.b32 	%r25989, %r25986, %r25987, 19;
	mov.b64 	%rd12387, {%r25989, %r25988};
	shf.l.wrap.b32 	%r25990, %r25986, %r25987, 3;
	shf.l.wrap.b32 	%r25991, %r25987, %r25986, 3;
	mov.b64 	%rd12388, {%r25991, %r25990};
	shr.u64 	%rd12389, %rd11989, 6;
	xor.b64  	%rd12390, %rd12387, %rd12389;
	xor.b64  	%rd12391, %rd12390, %rd12388;
	shf.r.wrap.b32 	%r25992, %r25583, %r25582, 1;
	shf.r.wrap.b32 	%r25993, %r25582, %r25583, 1;
	mov.b64 	%rd12392, {%r25993, %r25992};
	shf.r.wrap.b32 	%r25994, %r25583, %r25582, 8;
	shf.r.wrap.b32 	%r25995, %r25582, %r25583, 8;
	mov.b64 	%rd12393, {%r25995, %r25994};
	shr.u64 	%rd12394, %rd11820, 7;
	xor.b64  	%rd12395, %rd12392, %rd12394;
	xor.b64  	%rd12396, %rd12395, %rd12393;
	add.s64 	%rd12397, %rd11924, %rd11807;
	add.s64 	%rd12398, %rd12397, %rd12391;
	add.s64 	%rd12399, %rd12398, %rd12396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r25996,%dummy}, %rd12386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25997}, %rd12386;
	}
	shf.r.wrap.b32 	%r25998, %r25997, %r25996, 19;
	shf.r.wrap.b32 	%r25999, %r25996, %r25997, 19;
	mov.b64 	%rd12400, {%r25999, %r25998};
	shf.l.wrap.b32 	%r26000, %r25996, %r25997, 3;
	shf.l.wrap.b32 	%r26001, %r25997, %r25996, 3;
	mov.b64 	%rd12401, {%r26001, %r26000};
	shr.u64 	%rd12402, %rd12386, 6;
	xor.b64  	%rd12403, %rd12400, %rd12402;
	xor.b64  	%rd12404, %rd12403, %rd12401;
	shf.r.wrap.b32 	%r26002, %r25595, %r25594, 1;
	shf.r.wrap.b32 	%r26003, %r25594, %r25595, 1;
	mov.b64 	%rd12405, {%r26003, %r26002};
	shf.r.wrap.b32 	%r26004, %r25595, %r25594, 8;
	shf.r.wrap.b32 	%r26005, %r25594, %r25595, 8;
	mov.b64 	%rd12406, {%r26005, %r26004};
	shr.u64 	%rd12407, %rd11833, 7;
	xor.b64  	%rd12408, %rd12405, %rd12407;
	xor.b64  	%rd12409, %rd12408, %rd12406;
	add.s64 	%rd12410, %rd11937, %rd11820;
	add.s64 	%rd12411, %rd12410, %rd12404;
	add.s64 	%rd12412, %rd12411, %rd12409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26006,%dummy}, %rd12399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26007}, %rd12399;
	}
	shf.r.wrap.b32 	%r26008, %r26007, %r26006, 19;
	shf.r.wrap.b32 	%r26009, %r26006, %r26007, 19;
	mov.b64 	%rd12413, {%r26009, %r26008};
	shf.l.wrap.b32 	%r26010, %r26006, %r26007, 3;
	shf.l.wrap.b32 	%r26011, %r26007, %r26006, 3;
	mov.b64 	%rd12414, {%r26011, %r26010};
	shr.u64 	%rd12415, %rd12399, 6;
	xor.b64  	%rd12416, %rd12413, %rd12415;
	xor.b64  	%rd12417, %rd12416, %rd12414;
	shf.r.wrap.b32 	%r26012, %r25607, %r25606, 1;
	shf.r.wrap.b32 	%r26013, %r25606, %r25607, 1;
	mov.b64 	%rd12418, {%r26013, %r26012};
	shf.r.wrap.b32 	%r26014, %r25607, %r25606, 8;
	shf.r.wrap.b32 	%r26015, %r25606, %r25607, 8;
	mov.b64 	%rd12419, {%r26015, %r26014};
	shr.u64 	%rd12420, %rd11846, 7;
	xor.b64  	%rd12421, %rd12418, %rd12420;
	xor.b64  	%rd12422, %rd12421, %rd12419;
	add.s64 	%rd12423, %rd11950, %rd11833;
	add.s64 	%rd12424, %rd12423, %rd12417;
	add.s64 	%rd12425, %rd12424, %rd12422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26016,%dummy}, %rd12412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26017}, %rd12412;
	}
	shf.r.wrap.b32 	%r26018, %r26017, %r26016, 19;
	shf.r.wrap.b32 	%r26019, %r26016, %r26017, 19;
	mov.b64 	%rd12426, {%r26019, %r26018};
	shf.l.wrap.b32 	%r26020, %r26016, %r26017, 3;
	shf.l.wrap.b32 	%r26021, %r26017, %r26016, 3;
	mov.b64 	%rd12427, {%r26021, %r26020};
	shr.u64 	%rd12428, %rd12412, 6;
	xor.b64  	%rd12429, %rd12426, %rd12428;
	xor.b64  	%rd12430, %rd12429, %rd12427;
	shf.r.wrap.b32 	%r26022, %r25619, %r25618, 1;
	shf.r.wrap.b32 	%r26023, %r25618, %r25619, 1;
	mov.b64 	%rd12431, {%r26023, %r26022};
	shf.r.wrap.b32 	%r26024, %r25619, %r25618, 8;
	shf.r.wrap.b32 	%r26025, %r25618, %r25619, 8;
	mov.b64 	%rd12432, {%r26025, %r26024};
	shr.u64 	%rd12433, %rd11859, 7;
	xor.b64  	%rd12434, %rd12431, %rd12433;
	xor.b64  	%rd12435, %rd12434, %rd12432;
	add.s64 	%rd12436, %rd11963, %rd11846;
	add.s64 	%rd12437, %rd12436, %rd12430;
	add.s64 	%rd12438, %rd12437, %rd12435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26026,%dummy}, %rd12425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26027}, %rd12425;
	}
	shf.r.wrap.b32 	%r26028, %r26027, %r26026, 19;
	shf.r.wrap.b32 	%r26029, %r26026, %r26027, 19;
	mov.b64 	%rd12439, {%r26029, %r26028};
	shf.l.wrap.b32 	%r26030, %r26026, %r26027, 3;
	shf.l.wrap.b32 	%r26031, %r26027, %r26026, 3;
	mov.b64 	%rd12440, {%r26031, %r26030};
	shr.u64 	%rd12441, %rd12425, 6;
	xor.b64  	%rd12442, %rd12439, %rd12441;
	xor.b64  	%rd12443, %rd12442, %rd12440;
	shf.r.wrap.b32 	%r26032, %r25631, %r25630, 1;
	shf.r.wrap.b32 	%r26033, %r25630, %r25631, 1;
	mov.b64 	%rd12444, {%r26033, %r26032};
	shf.r.wrap.b32 	%r26034, %r25631, %r25630, 8;
	shf.r.wrap.b32 	%r26035, %r25630, %r25631, 8;
	mov.b64 	%rd12445, {%r26035, %r26034};
	shr.u64 	%rd12446, %rd11872, 7;
	xor.b64  	%rd12447, %rd12444, %rd12446;
	xor.b64  	%rd12448, %rd12447, %rd12445;
	add.s64 	%rd12449, %rd11976, %rd11859;
	add.s64 	%rd12450, %rd12449, %rd12443;
	add.s64 	%rd12451, %rd12450, %rd12448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26036,%dummy}, %rd12438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26037}, %rd12438;
	}
	shf.r.wrap.b32 	%r26038, %r26037, %r26036, 19;
	shf.r.wrap.b32 	%r26039, %r26036, %r26037, 19;
	mov.b64 	%rd12452, {%r26039, %r26038};
	shf.l.wrap.b32 	%r26040, %r26036, %r26037, 3;
	shf.l.wrap.b32 	%r26041, %r26037, %r26036, 3;
	mov.b64 	%rd12453, {%r26041, %r26040};
	shr.u64 	%rd12454, %rd12438, 6;
	xor.b64  	%rd12455, %rd12452, %rd12454;
	xor.b64  	%rd12456, %rd12455, %rd12453;
	shf.r.wrap.b32 	%r26042, %r25643, %r25642, 1;
	shf.r.wrap.b32 	%r26043, %r25642, %r25643, 1;
	mov.b64 	%rd12457, {%r26043, %r26042};
	shf.r.wrap.b32 	%r26044, %r25643, %r25642, 8;
	shf.r.wrap.b32 	%r26045, %r25642, %r25643, 8;
	mov.b64 	%rd12458, {%r26045, %r26044};
	shr.u64 	%rd12459, %rd11885, 7;
	xor.b64  	%rd12460, %rd12457, %rd12459;
	xor.b64  	%rd12461, %rd12460, %rd12458;
	add.s64 	%rd12462, %rd11989, %rd11872;
	add.s64 	%rd12463, %rd12462, %rd12456;
	add.s64 	%rd12464, %rd12463, %rd12461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26046,%dummy}, %rd12451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26047}, %rd12451;
	}
	shf.r.wrap.b32 	%r26048, %r26047, %r26046, 19;
	shf.r.wrap.b32 	%r26049, %r26046, %r26047, 19;
	mov.b64 	%rd12465, {%r26049, %r26048};
	shf.l.wrap.b32 	%r26050, %r26046, %r26047, 3;
	shf.l.wrap.b32 	%r26051, %r26047, %r26046, 3;
	mov.b64 	%rd12466, {%r26051, %r26050};
	shr.u64 	%rd12467, %rd12451, 6;
	xor.b64  	%rd12468, %rd12465, %rd12467;
	xor.b64  	%rd12469, %rd12468, %rd12466;
	shf.r.wrap.b32 	%r26052, %r25655, %r25654, 1;
	shf.r.wrap.b32 	%r26053, %r25654, %r25655, 1;
	mov.b64 	%rd12470, {%r26053, %r26052};
	shf.r.wrap.b32 	%r26054, %r25655, %r25654, 8;
	shf.r.wrap.b32 	%r26055, %r25654, %r25655, 8;
	mov.b64 	%rd12471, {%r26055, %r26054};
	shr.u64 	%rd12472, %rd11898, 7;
	xor.b64  	%rd12473, %rd12470, %rd12472;
	xor.b64  	%rd12474, %rd12473, %rd12471;
	add.s64 	%rd12475, %rd12386, %rd11885;
	add.s64 	%rd12476, %rd12475, %rd12469;
	add.s64 	%rd12477, %rd12476, %rd12474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26056,%dummy}, %rd12464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26057}, %rd12464;
	}
	shf.r.wrap.b32 	%r26058, %r26057, %r26056, 19;
	shf.r.wrap.b32 	%r26059, %r26056, %r26057, 19;
	mov.b64 	%rd12478, {%r26059, %r26058};
	shf.l.wrap.b32 	%r26060, %r26056, %r26057, 3;
	shf.l.wrap.b32 	%r26061, %r26057, %r26056, 3;
	mov.b64 	%rd12479, {%r26061, %r26060};
	shr.u64 	%rd12480, %rd12464, 6;
	xor.b64  	%rd12481, %rd12478, %rd12480;
	xor.b64  	%rd12482, %rd12481, %rd12479;
	shf.r.wrap.b32 	%r26062, %r25667, %r25666, 1;
	shf.r.wrap.b32 	%r26063, %r25666, %r25667, 1;
	mov.b64 	%rd12483, {%r26063, %r26062};
	shf.r.wrap.b32 	%r26064, %r25667, %r25666, 8;
	shf.r.wrap.b32 	%r26065, %r25666, %r25667, 8;
	mov.b64 	%rd12484, {%r26065, %r26064};
	shr.u64 	%rd12485, %rd11911, 7;
	xor.b64  	%rd12486, %rd12483, %rd12485;
	xor.b64  	%rd12487, %rd12486, %rd12484;
	add.s64 	%rd12488, %rd12399, %rd11898;
	add.s64 	%rd12489, %rd12488, %rd12482;
	add.s64 	%rd12490, %rd12489, %rd12487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26066,%dummy}, %rd12477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26067}, %rd12477;
	}
	shf.r.wrap.b32 	%r26068, %r26067, %r26066, 19;
	shf.r.wrap.b32 	%r26069, %r26066, %r26067, 19;
	mov.b64 	%rd12491, {%r26069, %r26068};
	shf.l.wrap.b32 	%r26070, %r26066, %r26067, 3;
	shf.l.wrap.b32 	%r26071, %r26067, %r26066, 3;
	mov.b64 	%rd12492, {%r26071, %r26070};
	shr.u64 	%rd12493, %rd12477, 6;
	xor.b64  	%rd12494, %rd12491, %rd12493;
	xor.b64  	%rd12495, %rd12494, %rd12492;
	shf.r.wrap.b32 	%r26072, %r25679, %r25678, 1;
	shf.r.wrap.b32 	%r26073, %r25678, %r25679, 1;
	mov.b64 	%rd12496, {%r26073, %r26072};
	shf.r.wrap.b32 	%r26074, %r25679, %r25678, 8;
	shf.r.wrap.b32 	%r26075, %r25678, %r25679, 8;
	mov.b64 	%rd12497, {%r26075, %r26074};
	shr.u64 	%rd12498, %rd11924, 7;
	xor.b64  	%rd12499, %rd12496, %rd12498;
	xor.b64  	%rd12500, %rd12499, %rd12497;
	add.s64 	%rd12501, %rd12412, %rd11911;
	add.s64 	%rd12502, %rd12501, %rd12495;
	add.s64 	%rd12503, %rd12502, %rd12500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26076,%dummy}, %rd12490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26077}, %rd12490;
	}
	shf.r.wrap.b32 	%r26078, %r26077, %r26076, 19;
	shf.r.wrap.b32 	%r26079, %r26076, %r26077, 19;
	mov.b64 	%rd12504, {%r26079, %r26078};
	shf.l.wrap.b32 	%r26080, %r26076, %r26077, 3;
	shf.l.wrap.b32 	%r26081, %r26077, %r26076, 3;
	mov.b64 	%rd12505, {%r26081, %r26080};
	shr.u64 	%rd12506, %rd12490, 6;
	xor.b64  	%rd12507, %rd12504, %rd12506;
	xor.b64  	%rd12508, %rd12507, %rd12505;
	shf.r.wrap.b32 	%r26082, %r25691, %r25690, 1;
	shf.r.wrap.b32 	%r26083, %r25690, %r25691, 1;
	mov.b64 	%rd12509, {%r26083, %r26082};
	shf.r.wrap.b32 	%r26084, %r25691, %r25690, 8;
	shf.r.wrap.b32 	%r26085, %r25690, %r25691, 8;
	mov.b64 	%rd12510, {%r26085, %r26084};
	shr.u64 	%rd12511, %rd11937, 7;
	xor.b64  	%rd12512, %rd12509, %rd12511;
	xor.b64  	%rd12513, %rd12512, %rd12510;
	add.s64 	%rd12514, %rd12425, %rd11924;
	add.s64 	%rd12515, %rd12514, %rd12508;
	add.s64 	%rd12516, %rd12515, %rd12513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26086,%dummy}, %rd12503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26087}, %rd12503;
	}
	shf.r.wrap.b32 	%r26088, %r26087, %r26086, 19;
	shf.r.wrap.b32 	%r26089, %r26086, %r26087, 19;
	mov.b64 	%rd12517, {%r26089, %r26088};
	shf.l.wrap.b32 	%r26090, %r26086, %r26087, 3;
	shf.l.wrap.b32 	%r26091, %r26087, %r26086, 3;
	mov.b64 	%rd12518, {%r26091, %r26090};
	shr.u64 	%rd12519, %rd12503, 6;
	xor.b64  	%rd12520, %rd12517, %rd12519;
	xor.b64  	%rd12521, %rd12520, %rd12518;
	shf.r.wrap.b32 	%r26092, %r25701, %r25700, 1;
	shf.r.wrap.b32 	%r26093, %r25700, %r25701, 1;
	mov.b64 	%rd12522, {%r26093, %r26092};
	shf.r.wrap.b32 	%r26094, %r25701, %r25700, 8;
	shf.r.wrap.b32 	%r26095, %r25700, %r25701, 8;
	mov.b64 	%rd12523, {%r26095, %r26094};
	shr.u64 	%rd12524, %rd11950, 7;
	xor.b64  	%rd12525, %rd12522, %rd12524;
	xor.b64  	%rd12526, %rd12525, %rd12523;
	add.s64 	%rd12527, %rd12438, %rd11937;
	add.s64 	%rd12528, %rd12527, %rd12521;
	add.s64 	%rd12529, %rd12528, %rd12526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26096,%dummy}, %rd12516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26097}, %rd12516;
	}
	shf.r.wrap.b32 	%r26098, %r26097, %r26096, 19;
	shf.r.wrap.b32 	%r26099, %r26096, %r26097, 19;
	mov.b64 	%rd12530, {%r26099, %r26098};
	shf.l.wrap.b32 	%r26100, %r26096, %r26097, 3;
	shf.l.wrap.b32 	%r26101, %r26097, %r26096, 3;
	mov.b64 	%rd12531, {%r26101, %r26100};
	shr.u64 	%rd12532, %rd12516, 6;
	xor.b64  	%rd12533, %rd12530, %rd12532;
	xor.b64  	%rd12534, %rd12533, %rd12531;
	shf.r.wrap.b32 	%r26102, %r25711, %r25710, 1;
	shf.r.wrap.b32 	%r26103, %r25710, %r25711, 1;
	mov.b64 	%rd12535, {%r26103, %r26102};
	shf.r.wrap.b32 	%r26104, %r25711, %r25710, 8;
	shf.r.wrap.b32 	%r26105, %r25710, %r25711, 8;
	mov.b64 	%rd12536, {%r26105, %r26104};
	shr.u64 	%rd12537, %rd11963, 7;
	xor.b64  	%rd12538, %rd12535, %rd12537;
	xor.b64  	%rd12539, %rd12538, %rd12536;
	add.s64 	%rd12540, %rd12451, %rd11950;
	add.s64 	%rd12541, %rd12540, %rd12534;
	add.s64 	%rd12542, %rd12541, %rd12539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26106,%dummy}, %rd12529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26107}, %rd12529;
	}
	shf.r.wrap.b32 	%r26108, %r26107, %r26106, 19;
	shf.r.wrap.b32 	%r26109, %r26106, %r26107, 19;
	mov.b64 	%rd12543, {%r26109, %r26108};
	shf.l.wrap.b32 	%r26110, %r26106, %r26107, 3;
	shf.l.wrap.b32 	%r26111, %r26107, %r26106, 3;
	mov.b64 	%rd12544, {%r26111, %r26110};
	shr.u64 	%rd12545, %rd12529, 6;
	xor.b64  	%rd12546, %rd12543, %rd12545;
	xor.b64  	%rd12547, %rd12546, %rd12544;
	shf.r.wrap.b32 	%r26112, %r25977, %r25976, 1;
	shf.r.wrap.b32 	%r26113, %r25976, %r25977, 1;
	mov.b64 	%rd12548, {%r26113, %r26112};
	shf.r.wrap.b32 	%r26114, %r25977, %r25976, 8;
	shf.r.wrap.b32 	%r26115, %r25976, %r25977, 8;
	mov.b64 	%rd12549, {%r26115, %r26114};
	shr.u64 	%rd12550, %rd11976, 7;
	xor.b64  	%rd12551, %rd12548, %rd12550;
	xor.b64  	%rd12552, %rd12551, %rd12549;
	add.s64 	%rd12553, %rd12464, %rd11963;
	add.s64 	%rd12554, %rd12553, %rd12547;
	add.s64 	%rd12555, %rd12554, %rd12552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26116,%dummy}, %rd12542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26117}, %rd12542;
	}
	shf.r.wrap.b32 	%r26118, %r26117, %r26116, 19;
	shf.r.wrap.b32 	%r26119, %r26116, %r26117, 19;
	mov.b64 	%rd12556, {%r26119, %r26118};
	shf.l.wrap.b32 	%r26120, %r26116, %r26117, 3;
	shf.l.wrap.b32 	%r26121, %r26117, %r26116, 3;
	mov.b64 	%rd12557, {%r26121, %r26120};
	shr.u64 	%rd12558, %rd12542, 6;
	xor.b64  	%rd12559, %rd12556, %rd12558;
	xor.b64  	%rd12560, %rd12559, %rd12557;
	shf.r.wrap.b32 	%r26122, %r25987, %r25986, 1;
	shf.r.wrap.b32 	%r26123, %r25986, %r25987, 1;
	mov.b64 	%rd12561, {%r26123, %r26122};
	shf.r.wrap.b32 	%r26124, %r25987, %r25986, 8;
	shf.r.wrap.b32 	%r26125, %r25986, %r25987, 8;
	mov.b64 	%rd12562, {%r26125, %r26124};
	shr.u64 	%rd12563, %rd11989, 7;
	xor.b64  	%rd12564, %rd12561, %rd12563;
	xor.b64  	%rd12565, %rd12564, %rd12562;
	add.s64 	%rd12566, %rd12477, %rd11976;
	add.s64 	%rd12567, %rd12566, %rd12560;
	add.s64 	%rd12568, %rd12567, %rd12565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26126,%dummy}, %rd12555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26127}, %rd12555;
	}
	shf.r.wrap.b32 	%r26128, %r26127, %r26126, 19;
	shf.r.wrap.b32 	%r26129, %r26126, %r26127, 19;
	mov.b64 	%rd12569, {%r26129, %r26128};
	shf.l.wrap.b32 	%r26130, %r26126, %r26127, 3;
	shf.l.wrap.b32 	%r26131, %r26127, %r26126, 3;
	mov.b64 	%rd12570, {%r26131, %r26130};
	shr.u64 	%rd12571, %rd12555, 6;
	xor.b64  	%rd12572, %rd12569, %rd12571;
	xor.b64  	%rd12573, %rd12572, %rd12570;
	shf.r.wrap.b32 	%r26132, %r25997, %r25996, 1;
	shf.r.wrap.b32 	%r26133, %r25996, %r25997, 1;
	mov.b64 	%rd12574, {%r26133, %r26132};
	shf.r.wrap.b32 	%r26134, %r25997, %r25996, 8;
	shf.r.wrap.b32 	%r26135, %r25996, %r25997, 8;
	mov.b64 	%rd12575, {%r26135, %r26134};
	shr.u64 	%rd12576, %rd12386, 7;
	xor.b64  	%rd12577, %rd12574, %rd12576;
	xor.b64  	%rd12578, %rd12577, %rd12575;
	add.s64 	%rd12579, %rd12490, %rd11989;
	add.s64 	%rd12580, %rd12579, %rd12573;
	add.s64 	%rd12581, %rd12580, %rd12578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26136,%dummy}, %rd12362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26137}, %rd12362;
	}
	shf.r.wrap.b32 	%r26138, %r26137, %r26136, 14;
	shf.r.wrap.b32 	%r26139, %r26136, %r26137, 14;
	mov.b64 	%rd12582, {%r26139, %r26138};
	shf.r.wrap.b32 	%r26140, %r26137, %r26136, 18;
	shf.r.wrap.b32 	%r26141, %r26136, %r26137, 18;
	mov.b64 	%rd12583, {%r26141, %r26140};
	xor.b64  	%rd12584, %rd12583, %rd12582;
	shf.l.wrap.b32 	%r26142, %r26136, %r26137, 23;
	shf.l.wrap.b32 	%r26143, %r26137, %r26136, 23;
	mov.b64 	%rd12585, {%r26143, %r26142};
	xor.b64  	%rd12586, %rd12584, %rd12585;
	xor.b64  	%rd12587, %rd12338, %rd12314;
	and.b64  	%rd12588, %rd12362, %rd12587;
	xor.b64  	%rd12589, %rd12588, %rd12314;
	add.s64 	%rd12590, %rd12290, %rd60;
	add.s64 	%rd12591, %rd12590, %rd12589;
	add.s64 	%rd12592, %rd12591, %rd12386;
	add.s64 	%rd12593, %rd12592, %rd12586;
	add.s64 	%rd12594, %rd12593, %rd12301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26144,%dummy}, %rd12373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26145}, %rd12373;
	}
	shf.r.wrap.b32 	%r26146, %r26145, %r26144, 28;
	shf.r.wrap.b32 	%r26147, %r26144, %r26145, 28;
	mov.b64 	%rd12595, {%r26147, %r26146};
	shf.l.wrap.b32 	%r26148, %r26144, %r26145, 30;
	shf.l.wrap.b32 	%r26149, %r26145, %r26144, 30;
	mov.b64 	%rd12596, {%r26149, %r26148};
	xor.b64  	%rd12597, %rd12596, %rd12595;
	shf.l.wrap.b32 	%r26150, %r26144, %r26145, 25;
	shf.l.wrap.b32 	%r26151, %r26145, %r26144, 25;
	mov.b64 	%rd12598, {%r26151, %r26150};
	xor.b64  	%rd12599, %rd12597, %rd12598;
	and.b64  	%rd12600, %rd12373, %rd12349;
	xor.b64  	%rd12601, %rd12373, %rd12349;
	and.b64  	%rd12602, %rd12601, %rd12325;
	or.b64  	%rd12603, %rd12602, %rd12600;
	add.s64 	%rd12604, %rd12593, %rd12603;
	add.s64 	%rd12605, %rd12604, %rd12599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26152,%dummy}, %rd12594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26153}, %rd12594;
	}
	shf.r.wrap.b32 	%r26154, %r26153, %r26152, 14;
	shf.r.wrap.b32 	%r26155, %r26152, %r26153, 14;
	mov.b64 	%rd12606, {%r26155, %r26154};
	shf.r.wrap.b32 	%r26156, %r26153, %r26152, 18;
	shf.r.wrap.b32 	%r26157, %r26152, %r26153, 18;
	mov.b64 	%rd12607, {%r26157, %r26156};
	xor.b64  	%rd12608, %rd12607, %rd12606;
	shf.l.wrap.b32 	%r26158, %r26152, %r26153, 23;
	shf.l.wrap.b32 	%r26159, %r26153, %r26152, 23;
	mov.b64 	%rd12609, {%r26159, %r26158};
	xor.b64  	%rd12610, %rd12608, %rd12609;
	xor.b64  	%rd12611, %rd12362, %rd12338;
	and.b64  	%rd12612, %rd12594, %rd12611;
	xor.b64  	%rd12613, %rd12612, %rd12338;
	add.s64 	%rd12614, %rd12314, %rd61;
	add.s64 	%rd12615, %rd12614, %rd12399;
	add.s64 	%rd12616, %rd12615, %rd12613;
	add.s64 	%rd12617, %rd12616, %rd12610;
	add.s64 	%rd12618, %rd12617, %rd12325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26160,%dummy}, %rd12605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26161}, %rd12605;
	}
	shf.r.wrap.b32 	%r26162, %r26161, %r26160, 28;
	shf.r.wrap.b32 	%r26163, %r26160, %r26161, 28;
	mov.b64 	%rd12619, {%r26163, %r26162};
	shf.l.wrap.b32 	%r26164, %r26160, %r26161, 30;
	shf.l.wrap.b32 	%r26165, %r26161, %r26160, 30;
	mov.b64 	%rd12620, {%r26165, %r26164};
	xor.b64  	%rd12621, %rd12620, %rd12619;
	shf.l.wrap.b32 	%r26166, %r26160, %r26161, 25;
	shf.l.wrap.b32 	%r26167, %r26161, %r26160, 25;
	mov.b64 	%rd12622, {%r26167, %r26166};
	xor.b64  	%rd12623, %rd12621, %rd12622;
	and.b64  	%rd12624, %rd12605, %rd12373;
	xor.b64  	%rd12625, %rd12605, %rd12373;
	and.b64  	%rd12626, %rd12625, %rd12349;
	or.b64  	%rd12627, %rd12626, %rd12624;
	add.s64 	%rd12628, %rd12617, %rd12627;
	add.s64 	%rd12629, %rd12628, %rd12623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26168,%dummy}, %rd12618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26169}, %rd12618;
	}
	shf.r.wrap.b32 	%r26170, %r26169, %r26168, 14;
	shf.r.wrap.b32 	%r26171, %r26168, %r26169, 14;
	mov.b64 	%rd12630, {%r26171, %r26170};
	shf.r.wrap.b32 	%r26172, %r26169, %r26168, 18;
	shf.r.wrap.b32 	%r26173, %r26168, %r26169, 18;
	mov.b64 	%rd12631, {%r26173, %r26172};
	xor.b64  	%rd12632, %rd12631, %rd12630;
	shf.l.wrap.b32 	%r26174, %r26168, %r26169, 23;
	shf.l.wrap.b32 	%r26175, %r26169, %r26168, 23;
	mov.b64 	%rd12633, {%r26175, %r26174};
	xor.b64  	%rd12634, %rd12632, %rd12633;
	xor.b64  	%rd12635, %rd12594, %rd12362;
	and.b64  	%rd12636, %rd12618, %rd12635;
	xor.b64  	%rd12637, %rd12636, %rd12362;
	add.s64 	%rd12638, %rd12338, %rd62;
	add.s64 	%rd12639, %rd12638, %rd12412;
	add.s64 	%rd12640, %rd12639, %rd12637;
	add.s64 	%rd12641, %rd12640, %rd12634;
	add.s64 	%rd12642, %rd12641, %rd12349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26176,%dummy}, %rd12629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26177}, %rd12629;
	}
	shf.r.wrap.b32 	%r26178, %r26177, %r26176, 28;
	shf.r.wrap.b32 	%r26179, %r26176, %r26177, 28;
	mov.b64 	%rd12643, {%r26179, %r26178};
	shf.l.wrap.b32 	%r26180, %r26176, %r26177, 30;
	shf.l.wrap.b32 	%r26181, %r26177, %r26176, 30;
	mov.b64 	%rd12644, {%r26181, %r26180};
	xor.b64  	%rd12645, %rd12644, %rd12643;
	shf.l.wrap.b32 	%r26182, %r26176, %r26177, 25;
	shf.l.wrap.b32 	%r26183, %r26177, %r26176, 25;
	mov.b64 	%rd12646, {%r26183, %r26182};
	xor.b64  	%rd12647, %rd12645, %rd12646;
	and.b64  	%rd12648, %rd12629, %rd12605;
	xor.b64  	%rd12649, %rd12629, %rd12605;
	and.b64  	%rd12650, %rd12649, %rd12373;
	or.b64  	%rd12651, %rd12650, %rd12648;
	add.s64 	%rd12652, %rd12641, %rd12651;
	add.s64 	%rd12653, %rd12652, %rd12647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26184,%dummy}, %rd12642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26185}, %rd12642;
	}
	shf.r.wrap.b32 	%r26186, %r26185, %r26184, 14;
	shf.r.wrap.b32 	%r26187, %r26184, %r26185, 14;
	mov.b64 	%rd12654, {%r26187, %r26186};
	shf.r.wrap.b32 	%r26188, %r26185, %r26184, 18;
	shf.r.wrap.b32 	%r26189, %r26184, %r26185, 18;
	mov.b64 	%rd12655, {%r26189, %r26188};
	xor.b64  	%rd12656, %rd12655, %rd12654;
	shf.l.wrap.b32 	%r26190, %r26184, %r26185, 23;
	shf.l.wrap.b32 	%r26191, %r26185, %r26184, 23;
	mov.b64 	%rd12657, {%r26191, %r26190};
	xor.b64  	%rd12658, %rd12656, %rd12657;
	xor.b64  	%rd12659, %rd12618, %rd12594;
	and.b64  	%rd12660, %rd12642, %rd12659;
	xor.b64  	%rd12661, %rd12660, %rd12594;
	add.s64 	%rd12662, %rd12362, %rd63;
	add.s64 	%rd12663, %rd12662, %rd12425;
	add.s64 	%rd12664, %rd12663, %rd12661;
	add.s64 	%rd12665, %rd12664, %rd12658;
	add.s64 	%rd12666, %rd12665, %rd12373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26192,%dummy}, %rd12653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26193}, %rd12653;
	}
	shf.r.wrap.b32 	%r26194, %r26193, %r26192, 28;
	shf.r.wrap.b32 	%r26195, %r26192, %r26193, 28;
	mov.b64 	%rd12667, {%r26195, %r26194};
	shf.l.wrap.b32 	%r26196, %r26192, %r26193, 30;
	shf.l.wrap.b32 	%r26197, %r26193, %r26192, 30;
	mov.b64 	%rd12668, {%r26197, %r26196};
	xor.b64  	%rd12669, %rd12668, %rd12667;
	shf.l.wrap.b32 	%r26198, %r26192, %r26193, 25;
	shf.l.wrap.b32 	%r26199, %r26193, %r26192, 25;
	mov.b64 	%rd12670, {%r26199, %r26198};
	xor.b64  	%rd12671, %rd12669, %rd12670;
	and.b64  	%rd12672, %rd12653, %rd12629;
	xor.b64  	%rd12673, %rd12653, %rd12629;
	and.b64  	%rd12674, %rd12673, %rd12605;
	or.b64  	%rd12675, %rd12674, %rd12672;
	add.s64 	%rd12676, %rd12665, %rd12675;
	add.s64 	%rd12677, %rd12676, %rd12671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26200,%dummy}, %rd12666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26201}, %rd12666;
	}
	shf.r.wrap.b32 	%r26202, %r26201, %r26200, 14;
	shf.r.wrap.b32 	%r26203, %r26200, %r26201, 14;
	mov.b64 	%rd12678, {%r26203, %r26202};
	shf.r.wrap.b32 	%r26204, %r26201, %r26200, 18;
	shf.r.wrap.b32 	%r26205, %r26200, %r26201, 18;
	mov.b64 	%rd12679, {%r26205, %r26204};
	xor.b64  	%rd12680, %rd12679, %rd12678;
	shf.l.wrap.b32 	%r26206, %r26200, %r26201, 23;
	shf.l.wrap.b32 	%r26207, %r26201, %r26200, 23;
	mov.b64 	%rd12681, {%r26207, %r26206};
	xor.b64  	%rd12682, %rd12680, %rd12681;
	xor.b64  	%rd12683, %rd12642, %rd12618;
	and.b64  	%rd12684, %rd12666, %rd12683;
	xor.b64  	%rd12685, %rd12684, %rd12618;
	add.s64 	%rd12686, %rd12438, %rd64;
	add.s64 	%rd12687, %rd12686, %rd12594;
	add.s64 	%rd12688, %rd12687, %rd12685;
	add.s64 	%rd12689, %rd12688, %rd12682;
	add.s64 	%rd12690, %rd12689, %rd12605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26208,%dummy}, %rd12677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26209}, %rd12677;
	}
	shf.r.wrap.b32 	%r26210, %r26209, %r26208, 28;
	shf.r.wrap.b32 	%r26211, %r26208, %r26209, 28;
	mov.b64 	%rd12691, {%r26211, %r26210};
	shf.l.wrap.b32 	%r26212, %r26208, %r26209, 30;
	shf.l.wrap.b32 	%r26213, %r26209, %r26208, 30;
	mov.b64 	%rd12692, {%r26213, %r26212};
	xor.b64  	%rd12693, %rd12692, %rd12691;
	shf.l.wrap.b32 	%r26214, %r26208, %r26209, 25;
	shf.l.wrap.b32 	%r26215, %r26209, %r26208, 25;
	mov.b64 	%rd12694, {%r26215, %r26214};
	xor.b64  	%rd12695, %rd12693, %rd12694;
	and.b64  	%rd12696, %rd12677, %rd12653;
	xor.b64  	%rd12697, %rd12677, %rd12653;
	and.b64  	%rd12698, %rd12697, %rd12629;
	or.b64  	%rd12699, %rd12698, %rd12696;
	add.s64 	%rd12700, %rd12689, %rd12699;
	add.s64 	%rd12701, %rd12700, %rd12695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26216,%dummy}, %rd12690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26217}, %rd12690;
	}
	shf.r.wrap.b32 	%r26218, %r26217, %r26216, 14;
	shf.r.wrap.b32 	%r26219, %r26216, %r26217, 14;
	mov.b64 	%rd12702, {%r26219, %r26218};
	shf.r.wrap.b32 	%r26220, %r26217, %r26216, 18;
	shf.r.wrap.b32 	%r26221, %r26216, %r26217, 18;
	mov.b64 	%rd12703, {%r26221, %r26220};
	xor.b64  	%rd12704, %rd12703, %rd12702;
	shf.l.wrap.b32 	%r26222, %r26216, %r26217, 23;
	shf.l.wrap.b32 	%r26223, %r26217, %r26216, 23;
	mov.b64 	%rd12705, {%r26223, %r26222};
	xor.b64  	%rd12706, %rd12704, %rd12705;
	xor.b64  	%rd12707, %rd12666, %rd12642;
	and.b64  	%rd12708, %rd12690, %rd12707;
	xor.b64  	%rd12709, %rd12708, %rd12642;
	add.s64 	%rd12710, %rd12451, %rd65;
	add.s64 	%rd12711, %rd12710, %rd12618;
	add.s64 	%rd12712, %rd12711, %rd12709;
	add.s64 	%rd12713, %rd12712, %rd12706;
	add.s64 	%rd12714, %rd12713, %rd12629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26224,%dummy}, %rd12701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26225}, %rd12701;
	}
	shf.r.wrap.b32 	%r26226, %r26225, %r26224, 28;
	shf.r.wrap.b32 	%r26227, %r26224, %r26225, 28;
	mov.b64 	%rd12715, {%r26227, %r26226};
	shf.l.wrap.b32 	%r26228, %r26224, %r26225, 30;
	shf.l.wrap.b32 	%r26229, %r26225, %r26224, 30;
	mov.b64 	%rd12716, {%r26229, %r26228};
	xor.b64  	%rd12717, %rd12716, %rd12715;
	shf.l.wrap.b32 	%r26230, %r26224, %r26225, 25;
	shf.l.wrap.b32 	%r26231, %r26225, %r26224, 25;
	mov.b64 	%rd12718, {%r26231, %r26230};
	xor.b64  	%rd12719, %rd12717, %rd12718;
	and.b64  	%rd12720, %rd12701, %rd12677;
	xor.b64  	%rd12721, %rd12701, %rd12677;
	and.b64  	%rd12722, %rd12721, %rd12653;
	or.b64  	%rd12723, %rd12722, %rd12720;
	add.s64 	%rd12724, %rd12713, %rd12723;
	add.s64 	%rd12725, %rd12724, %rd12719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26232,%dummy}, %rd12714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26233}, %rd12714;
	}
	shf.r.wrap.b32 	%r26234, %r26233, %r26232, 14;
	shf.r.wrap.b32 	%r26235, %r26232, %r26233, 14;
	mov.b64 	%rd12726, {%r26235, %r26234};
	shf.r.wrap.b32 	%r26236, %r26233, %r26232, 18;
	shf.r.wrap.b32 	%r26237, %r26232, %r26233, 18;
	mov.b64 	%rd12727, {%r26237, %r26236};
	xor.b64  	%rd12728, %rd12727, %rd12726;
	shf.l.wrap.b32 	%r26238, %r26232, %r26233, 23;
	shf.l.wrap.b32 	%r26239, %r26233, %r26232, 23;
	mov.b64 	%rd12729, {%r26239, %r26238};
	xor.b64  	%rd12730, %rd12728, %rd12729;
	xor.b64  	%rd12731, %rd12690, %rd12666;
	and.b64  	%rd12732, %rd12714, %rd12731;
	xor.b64  	%rd12733, %rd12732, %rd12666;
	add.s64 	%rd12734, %rd12464, %rd66;
	add.s64 	%rd12735, %rd12734, %rd12642;
	add.s64 	%rd12736, %rd12735, %rd12733;
	add.s64 	%rd12737, %rd12736, %rd12730;
	add.s64 	%rd12738, %rd12737, %rd12653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26240,%dummy}, %rd12725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26241}, %rd12725;
	}
	shf.r.wrap.b32 	%r26242, %r26241, %r26240, 28;
	shf.r.wrap.b32 	%r26243, %r26240, %r26241, 28;
	mov.b64 	%rd12739, {%r26243, %r26242};
	shf.l.wrap.b32 	%r26244, %r26240, %r26241, 30;
	shf.l.wrap.b32 	%r26245, %r26241, %r26240, 30;
	mov.b64 	%rd12740, {%r26245, %r26244};
	xor.b64  	%rd12741, %rd12740, %rd12739;
	shf.l.wrap.b32 	%r26246, %r26240, %r26241, 25;
	shf.l.wrap.b32 	%r26247, %r26241, %r26240, 25;
	mov.b64 	%rd12742, {%r26247, %r26246};
	xor.b64  	%rd12743, %rd12741, %rd12742;
	and.b64  	%rd12744, %rd12725, %rd12701;
	xor.b64  	%rd12745, %rd12725, %rd12701;
	and.b64  	%rd12746, %rd12745, %rd12677;
	or.b64  	%rd12747, %rd12746, %rd12744;
	add.s64 	%rd12748, %rd12737, %rd12747;
	add.s64 	%rd12749, %rd12748, %rd12743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26248,%dummy}, %rd12738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26249}, %rd12738;
	}
	shf.r.wrap.b32 	%r26250, %r26249, %r26248, 14;
	shf.r.wrap.b32 	%r26251, %r26248, %r26249, 14;
	mov.b64 	%rd12750, {%r26251, %r26250};
	shf.r.wrap.b32 	%r26252, %r26249, %r26248, 18;
	shf.r.wrap.b32 	%r26253, %r26248, %r26249, 18;
	mov.b64 	%rd12751, {%r26253, %r26252};
	xor.b64  	%rd12752, %rd12751, %rd12750;
	shf.l.wrap.b32 	%r26254, %r26248, %r26249, 23;
	shf.l.wrap.b32 	%r26255, %r26249, %r26248, 23;
	mov.b64 	%rd12753, {%r26255, %r26254};
	xor.b64  	%rd12754, %rd12752, %rd12753;
	xor.b64  	%rd12755, %rd12714, %rd12690;
	and.b64  	%rd12756, %rd12738, %rd12755;
	xor.b64  	%rd12757, %rd12756, %rd12690;
	add.s64 	%rd12758, %rd12477, %rd67;
	add.s64 	%rd12759, %rd12758, %rd12666;
	add.s64 	%rd12760, %rd12759, %rd12757;
	add.s64 	%rd12761, %rd12760, %rd12754;
	add.s64 	%rd12762, %rd12761, %rd12677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26256,%dummy}, %rd12749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26257}, %rd12749;
	}
	shf.r.wrap.b32 	%r26258, %r26257, %r26256, 28;
	shf.r.wrap.b32 	%r26259, %r26256, %r26257, 28;
	mov.b64 	%rd12763, {%r26259, %r26258};
	shf.l.wrap.b32 	%r26260, %r26256, %r26257, 30;
	shf.l.wrap.b32 	%r26261, %r26257, %r26256, 30;
	mov.b64 	%rd12764, {%r26261, %r26260};
	xor.b64  	%rd12765, %rd12764, %rd12763;
	shf.l.wrap.b32 	%r26262, %r26256, %r26257, 25;
	shf.l.wrap.b32 	%r26263, %r26257, %r26256, 25;
	mov.b64 	%rd12766, {%r26263, %r26262};
	xor.b64  	%rd12767, %rd12765, %rd12766;
	and.b64  	%rd12768, %rd12749, %rd12725;
	xor.b64  	%rd12769, %rd12749, %rd12725;
	and.b64  	%rd12770, %rd12769, %rd12701;
	or.b64  	%rd12771, %rd12770, %rd12768;
	add.s64 	%rd12772, %rd12761, %rd12771;
	add.s64 	%rd12773, %rd12772, %rd12767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26264,%dummy}, %rd12762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26265}, %rd12762;
	}
	shf.r.wrap.b32 	%r26266, %r26265, %r26264, 14;
	shf.r.wrap.b32 	%r26267, %r26264, %r26265, 14;
	mov.b64 	%rd12774, {%r26267, %r26266};
	shf.r.wrap.b32 	%r26268, %r26265, %r26264, 18;
	shf.r.wrap.b32 	%r26269, %r26264, %r26265, 18;
	mov.b64 	%rd12775, {%r26269, %r26268};
	xor.b64  	%rd12776, %rd12775, %rd12774;
	shf.l.wrap.b32 	%r26270, %r26264, %r26265, 23;
	shf.l.wrap.b32 	%r26271, %r26265, %r26264, 23;
	mov.b64 	%rd12777, {%r26271, %r26270};
	xor.b64  	%rd12778, %rd12776, %rd12777;
	xor.b64  	%rd12779, %rd12738, %rd12714;
	and.b64  	%rd12780, %rd12762, %rd12779;
	xor.b64  	%rd12781, %rd12780, %rd12714;
	add.s64 	%rd12782, %rd12490, %rd68;
	add.s64 	%rd12783, %rd12782, %rd12690;
	add.s64 	%rd12784, %rd12783, %rd12781;
	add.s64 	%rd12785, %rd12784, %rd12778;
	add.s64 	%rd12786, %rd12785, %rd12701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26272,%dummy}, %rd12773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26273}, %rd12773;
	}
	shf.r.wrap.b32 	%r26274, %r26273, %r26272, 28;
	shf.r.wrap.b32 	%r26275, %r26272, %r26273, 28;
	mov.b64 	%rd12787, {%r26275, %r26274};
	shf.l.wrap.b32 	%r26276, %r26272, %r26273, 30;
	shf.l.wrap.b32 	%r26277, %r26273, %r26272, 30;
	mov.b64 	%rd12788, {%r26277, %r26276};
	xor.b64  	%rd12789, %rd12788, %rd12787;
	shf.l.wrap.b32 	%r26278, %r26272, %r26273, 25;
	shf.l.wrap.b32 	%r26279, %r26273, %r26272, 25;
	mov.b64 	%rd12790, {%r26279, %r26278};
	xor.b64  	%rd12791, %rd12789, %rd12790;
	and.b64  	%rd12792, %rd12773, %rd12749;
	xor.b64  	%rd12793, %rd12773, %rd12749;
	and.b64  	%rd12794, %rd12793, %rd12725;
	or.b64  	%rd12795, %rd12794, %rd12792;
	add.s64 	%rd12796, %rd12785, %rd12795;
	add.s64 	%rd12797, %rd12796, %rd12791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26280,%dummy}, %rd12786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26281}, %rd12786;
	}
	shf.r.wrap.b32 	%r26282, %r26281, %r26280, 14;
	shf.r.wrap.b32 	%r26283, %r26280, %r26281, 14;
	mov.b64 	%rd12798, {%r26283, %r26282};
	shf.r.wrap.b32 	%r26284, %r26281, %r26280, 18;
	shf.r.wrap.b32 	%r26285, %r26280, %r26281, 18;
	mov.b64 	%rd12799, {%r26285, %r26284};
	xor.b64  	%rd12800, %rd12799, %rd12798;
	shf.l.wrap.b32 	%r26286, %r26280, %r26281, 23;
	shf.l.wrap.b32 	%r26287, %r26281, %r26280, 23;
	mov.b64 	%rd12801, {%r26287, %r26286};
	xor.b64  	%rd12802, %rd12800, %rd12801;
	xor.b64  	%rd12803, %rd12762, %rd12738;
	and.b64  	%rd12804, %rd12786, %rd12803;
	xor.b64  	%rd12805, %rd12804, %rd12738;
	add.s64 	%rd12806, %rd12503, %rd69;
	add.s64 	%rd12807, %rd12806, %rd12714;
	add.s64 	%rd12808, %rd12807, %rd12805;
	add.s64 	%rd12809, %rd12808, %rd12802;
	add.s64 	%rd12810, %rd12809, %rd12725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26288,%dummy}, %rd12797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26289}, %rd12797;
	}
	shf.r.wrap.b32 	%r26290, %r26289, %r26288, 28;
	shf.r.wrap.b32 	%r26291, %r26288, %r26289, 28;
	mov.b64 	%rd12811, {%r26291, %r26290};
	shf.l.wrap.b32 	%r26292, %r26288, %r26289, 30;
	shf.l.wrap.b32 	%r26293, %r26289, %r26288, 30;
	mov.b64 	%rd12812, {%r26293, %r26292};
	xor.b64  	%rd12813, %rd12812, %rd12811;
	shf.l.wrap.b32 	%r26294, %r26288, %r26289, 25;
	shf.l.wrap.b32 	%r26295, %r26289, %r26288, 25;
	mov.b64 	%rd12814, {%r26295, %r26294};
	xor.b64  	%rd12815, %rd12813, %rd12814;
	and.b64  	%rd12816, %rd12797, %rd12773;
	xor.b64  	%rd12817, %rd12797, %rd12773;
	and.b64  	%rd12818, %rd12817, %rd12749;
	or.b64  	%rd12819, %rd12818, %rd12816;
	add.s64 	%rd12820, %rd12809, %rd12819;
	add.s64 	%rd12821, %rd12820, %rd12815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26296,%dummy}, %rd12810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26297}, %rd12810;
	}
	shf.r.wrap.b32 	%r26298, %r26297, %r26296, 14;
	shf.r.wrap.b32 	%r26299, %r26296, %r26297, 14;
	mov.b64 	%rd12822, {%r26299, %r26298};
	shf.r.wrap.b32 	%r26300, %r26297, %r26296, 18;
	shf.r.wrap.b32 	%r26301, %r26296, %r26297, 18;
	mov.b64 	%rd12823, {%r26301, %r26300};
	xor.b64  	%rd12824, %rd12823, %rd12822;
	shf.l.wrap.b32 	%r26302, %r26296, %r26297, 23;
	shf.l.wrap.b32 	%r26303, %r26297, %r26296, 23;
	mov.b64 	%rd12825, {%r26303, %r26302};
	xor.b64  	%rd12826, %rd12824, %rd12825;
	xor.b64  	%rd12827, %rd12786, %rd12762;
	and.b64  	%rd12828, %rd12810, %rd12827;
	xor.b64  	%rd12829, %rd12828, %rd12762;
	add.s64 	%rd12830, %rd12516, %rd70;
	add.s64 	%rd12831, %rd12830, %rd12738;
	add.s64 	%rd12832, %rd12831, %rd12829;
	add.s64 	%rd12833, %rd12832, %rd12826;
	add.s64 	%rd12834, %rd12833, %rd12749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26304,%dummy}, %rd12821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26305}, %rd12821;
	}
	shf.r.wrap.b32 	%r26306, %r26305, %r26304, 28;
	shf.r.wrap.b32 	%r26307, %r26304, %r26305, 28;
	mov.b64 	%rd12835, {%r26307, %r26306};
	shf.l.wrap.b32 	%r26308, %r26304, %r26305, 30;
	shf.l.wrap.b32 	%r26309, %r26305, %r26304, 30;
	mov.b64 	%rd12836, {%r26309, %r26308};
	xor.b64  	%rd12837, %rd12836, %rd12835;
	shf.l.wrap.b32 	%r26310, %r26304, %r26305, 25;
	shf.l.wrap.b32 	%r26311, %r26305, %r26304, 25;
	mov.b64 	%rd12838, {%r26311, %r26310};
	xor.b64  	%rd12839, %rd12837, %rd12838;
	and.b64  	%rd12840, %rd12821, %rd12797;
	xor.b64  	%rd12841, %rd12821, %rd12797;
	and.b64  	%rd12842, %rd12841, %rd12773;
	or.b64  	%rd12843, %rd12842, %rd12840;
	add.s64 	%rd12844, %rd12833, %rd12843;
	add.s64 	%rd12845, %rd12844, %rd12839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26312,%dummy}, %rd12834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26313}, %rd12834;
	}
	shf.r.wrap.b32 	%r26314, %r26313, %r26312, 14;
	shf.r.wrap.b32 	%r26315, %r26312, %r26313, 14;
	mov.b64 	%rd12846, {%r26315, %r26314};
	shf.r.wrap.b32 	%r26316, %r26313, %r26312, 18;
	shf.r.wrap.b32 	%r26317, %r26312, %r26313, 18;
	mov.b64 	%rd12847, {%r26317, %r26316};
	xor.b64  	%rd12848, %rd12847, %rd12846;
	shf.l.wrap.b32 	%r26318, %r26312, %r26313, 23;
	shf.l.wrap.b32 	%r26319, %r26313, %r26312, 23;
	mov.b64 	%rd12849, {%r26319, %r26318};
	xor.b64  	%rd12850, %rd12848, %rd12849;
	xor.b64  	%rd12851, %rd12810, %rd12786;
	and.b64  	%rd12852, %rd12834, %rd12851;
	xor.b64  	%rd12853, %rd12852, %rd12786;
	add.s64 	%rd12854, %rd12529, %rd71;
	add.s64 	%rd12855, %rd12854, %rd12762;
	add.s64 	%rd12856, %rd12855, %rd12853;
	add.s64 	%rd12857, %rd12856, %rd12850;
	add.s64 	%rd12858, %rd12857, %rd12773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26320,%dummy}, %rd12845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26321}, %rd12845;
	}
	shf.r.wrap.b32 	%r26322, %r26321, %r26320, 28;
	shf.r.wrap.b32 	%r26323, %r26320, %r26321, 28;
	mov.b64 	%rd12859, {%r26323, %r26322};
	shf.l.wrap.b32 	%r26324, %r26320, %r26321, 30;
	shf.l.wrap.b32 	%r26325, %r26321, %r26320, 30;
	mov.b64 	%rd12860, {%r26325, %r26324};
	xor.b64  	%rd12861, %rd12860, %rd12859;
	shf.l.wrap.b32 	%r26326, %r26320, %r26321, 25;
	shf.l.wrap.b32 	%r26327, %r26321, %r26320, 25;
	mov.b64 	%rd12862, {%r26327, %r26326};
	xor.b64  	%rd12863, %rd12861, %rd12862;
	and.b64  	%rd12864, %rd12845, %rd12821;
	xor.b64  	%rd12865, %rd12845, %rd12821;
	and.b64  	%rd12866, %rd12865, %rd12797;
	or.b64  	%rd12867, %rd12866, %rd12864;
	add.s64 	%rd12868, %rd12857, %rd12867;
	add.s64 	%rd12869, %rd12868, %rd12863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26328,%dummy}, %rd12858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26329}, %rd12858;
	}
	shf.r.wrap.b32 	%r26330, %r26329, %r26328, 14;
	shf.r.wrap.b32 	%r26331, %r26328, %r26329, 14;
	mov.b64 	%rd12870, {%r26331, %r26330};
	shf.r.wrap.b32 	%r26332, %r26329, %r26328, 18;
	shf.r.wrap.b32 	%r26333, %r26328, %r26329, 18;
	mov.b64 	%rd12871, {%r26333, %r26332};
	xor.b64  	%rd12872, %rd12871, %rd12870;
	shf.l.wrap.b32 	%r26334, %r26328, %r26329, 23;
	shf.l.wrap.b32 	%r26335, %r26329, %r26328, 23;
	mov.b64 	%rd12873, {%r26335, %r26334};
	xor.b64  	%rd12874, %rd12872, %rd12873;
	xor.b64  	%rd12875, %rd12834, %rd12810;
	and.b64  	%rd12876, %rd12858, %rd12875;
	xor.b64  	%rd12877, %rd12876, %rd12810;
	add.s64 	%rd12878, %rd12542, %rd72;
	add.s64 	%rd12879, %rd12878, %rd12786;
	add.s64 	%rd12880, %rd12879, %rd12877;
	add.s64 	%rd12881, %rd12880, %rd12874;
	add.s64 	%rd12882, %rd12881, %rd12797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26336,%dummy}, %rd12869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26337}, %rd12869;
	}
	shf.r.wrap.b32 	%r26338, %r26337, %r26336, 28;
	shf.r.wrap.b32 	%r26339, %r26336, %r26337, 28;
	mov.b64 	%rd12883, {%r26339, %r26338};
	shf.l.wrap.b32 	%r26340, %r26336, %r26337, 30;
	shf.l.wrap.b32 	%r26341, %r26337, %r26336, 30;
	mov.b64 	%rd12884, {%r26341, %r26340};
	xor.b64  	%rd12885, %rd12884, %rd12883;
	shf.l.wrap.b32 	%r26342, %r26336, %r26337, 25;
	shf.l.wrap.b32 	%r26343, %r26337, %r26336, 25;
	mov.b64 	%rd12886, {%r26343, %r26342};
	xor.b64  	%rd12887, %rd12885, %rd12886;
	and.b64  	%rd12888, %rd12869, %rd12845;
	xor.b64  	%rd12889, %rd12869, %rd12845;
	and.b64  	%rd12890, %rd12889, %rd12821;
	or.b64  	%rd12891, %rd12890, %rd12888;
	add.s64 	%rd12892, %rd12881, %rd12891;
	add.s64 	%rd12893, %rd12892, %rd12887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26344,%dummy}, %rd12882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26345}, %rd12882;
	}
	shf.r.wrap.b32 	%r26346, %r26345, %r26344, 14;
	shf.r.wrap.b32 	%r26347, %r26344, %r26345, 14;
	mov.b64 	%rd12894, {%r26347, %r26346};
	shf.r.wrap.b32 	%r26348, %r26345, %r26344, 18;
	shf.r.wrap.b32 	%r26349, %r26344, %r26345, 18;
	mov.b64 	%rd12895, {%r26349, %r26348};
	xor.b64  	%rd12896, %rd12895, %rd12894;
	shf.l.wrap.b32 	%r26350, %r26344, %r26345, 23;
	shf.l.wrap.b32 	%r26351, %r26345, %r26344, 23;
	mov.b64 	%rd12897, {%r26351, %r26350};
	xor.b64  	%rd12898, %rd12896, %rd12897;
	xor.b64  	%rd12899, %rd12858, %rd12834;
	and.b64  	%rd12900, %rd12882, %rd12899;
	xor.b64  	%rd12901, %rd12900, %rd12834;
	add.s64 	%rd12902, %rd12555, %rd73;
	add.s64 	%rd12903, %rd12902, %rd12810;
	add.s64 	%rd12904, %rd12903, %rd12901;
	add.s64 	%rd12905, %rd12904, %rd12898;
	add.s64 	%rd12906, %rd12905, %rd12821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26352,%dummy}, %rd12893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26353}, %rd12893;
	}
	shf.r.wrap.b32 	%r26354, %r26353, %r26352, 28;
	shf.r.wrap.b32 	%r26355, %r26352, %r26353, 28;
	mov.b64 	%rd12907, {%r26355, %r26354};
	shf.l.wrap.b32 	%r26356, %r26352, %r26353, 30;
	shf.l.wrap.b32 	%r26357, %r26353, %r26352, 30;
	mov.b64 	%rd12908, {%r26357, %r26356};
	xor.b64  	%rd12909, %rd12908, %rd12907;
	shf.l.wrap.b32 	%r26358, %r26352, %r26353, 25;
	shf.l.wrap.b32 	%r26359, %r26353, %r26352, 25;
	mov.b64 	%rd12910, {%r26359, %r26358};
	xor.b64  	%rd12911, %rd12909, %rd12910;
	and.b64  	%rd12912, %rd12893, %rd12869;
	xor.b64  	%rd12913, %rd12893, %rd12869;
	and.b64  	%rd12914, %rd12913, %rd12845;
	or.b64  	%rd12915, %rd12914, %rd12912;
	add.s64 	%rd12916, %rd12905, %rd12915;
	add.s64 	%rd12917, %rd12916, %rd12911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26360,%dummy}, %rd12906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26361}, %rd12906;
	}
	shf.r.wrap.b32 	%r26362, %r26361, %r26360, 14;
	shf.r.wrap.b32 	%r26363, %r26360, %r26361, 14;
	mov.b64 	%rd12918, {%r26363, %r26362};
	shf.r.wrap.b32 	%r26364, %r26361, %r26360, 18;
	shf.r.wrap.b32 	%r26365, %r26360, %r26361, 18;
	mov.b64 	%rd12919, {%r26365, %r26364};
	xor.b64  	%rd12920, %rd12919, %rd12918;
	shf.l.wrap.b32 	%r26366, %r26360, %r26361, 23;
	shf.l.wrap.b32 	%r26367, %r26361, %r26360, 23;
	mov.b64 	%rd12921, {%r26367, %r26366};
	xor.b64  	%rd12922, %rd12920, %rd12921;
	xor.b64  	%rd12923, %rd12882, %rd12858;
	and.b64  	%rd12924, %rd12906, %rd12923;
	xor.b64  	%rd12925, %rd12924, %rd12858;
	add.s64 	%rd12926, %rd12568, %rd74;
	add.s64 	%rd12927, %rd12926, %rd12834;
	add.s64 	%rd12928, %rd12927, %rd12925;
	add.s64 	%rd12929, %rd12928, %rd12922;
	add.s64 	%rd12930, %rd12929, %rd12845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26368,%dummy}, %rd12917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26369}, %rd12917;
	}
	shf.r.wrap.b32 	%r26370, %r26369, %r26368, 28;
	shf.r.wrap.b32 	%r26371, %r26368, %r26369, 28;
	mov.b64 	%rd12931, {%r26371, %r26370};
	shf.l.wrap.b32 	%r26372, %r26368, %r26369, 30;
	shf.l.wrap.b32 	%r26373, %r26369, %r26368, 30;
	mov.b64 	%rd12932, {%r26373, %r26372};
	xor.b64  	%rd12933, %rd12932, %rd12931;
	shf.l.wrap.b32 	%r26374, %r26368, %r26369, 25;
	shf.l.wrap.b32 	%r26375, %r26369, %r26368, 25;
	mov.b64 	%rd12934, {%r26375, %r26374};
	xor.b64  	%rd12935, %rd12933, %rd12934;
	and.b64  	%rd12936, %rd12917, %rd12893;
	xor.b64  	%rd12937, %rd12917, %rd12893;
	and.b64  	%rd12938, %rd12937, %rd12869;
	or.b64  	%rd12939, %rd12938, %rd12936;
	add.s64 	%rd12940, %rd12929, %rd12939;
	add.s64 	%rd12941, %rd12940, %rd12935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26376,%dummy}, %rd12930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26377}, %rd12930;
	}
	shf.r.wrap.b32 	%r26378, %r26377, %r26376, 14;
	shf.r.wrap.b32 	%r26379, %r26376, %r26377, 14;
	mov.b64 	%rd12942, {%r26379, %r26378};
	shf.r.wrap.b32 	%r26380, %r26377, %r26376, 18;
	shf.r.wrap.b32 	%r26381, %r26376, %r26377, 18;
	mov.b64 	%rd12943, {%r26381, %r26380};
	xor.b64  	%rd12944, %rd12943, %rd12942;
	shf.l.wrap.b32 	%r26382, %r26376, %r26377, 23;
	shf.l.wrap.b32 	%r26383, %r26377, %r26376, 23;
	mov.b64 	%rd12945, {%r26383, %r26382};
	xor.b64  	%rd12946, %rd12944, %rd12945;
	xor.b64  	%rd12947, %rd12906, %rd12882;
	and.b64  	%rd12948, %rd12930, %rd12947;
	xor.b64  	%rd12949, %rd12948, %rd12882;
	add.s64 	%rd12950, %rd12581, %rd75;
	add.s64 	%rd12951, %rd12950, %rd12858;
	add.s64 	%rd12952, %rd12951, %rd12949;
	add.s64 	%rd12953, %rd12952, %rd12946;
	add.s64 	%rd12954, %rd12953, %rd12869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26384,%dummy}, %rd12941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26385}, %rd12941;
	}
	shf.r.wrap.b32 	%r26386, %r26385, %r26384, 28;
	shf.r.wrap.b32 	%r26387, %r26384, %r26385, 28;
	mov.b64 	%rd12955, {%r26387, %r26386};
	shf.l.wrap.b32 	%r26388, %r26384, %r26385, 30;
	shf.l.wrap.b32 	%r26389, %r26385, %r26384, 30;
	mov.b64 	%rd12956, {%r26389, %r26388};
	xor.b64  	%rd12957, %rd12956, %rd12955;
	shf.l.wrap.b32 	%r26390, %r26384, %r26385, 25;
	shf.l.wrap.b32 	%r26391, %r26385, %r26384, 25;
	mov.b64 	%rd12958, {%r26391, %r26390};
	xor.b64  	%rd12959, %rd12957, %rd12958;
	and.b64  	%rd12960, %rd12941, %rd12917;
	xor.b64  	%rd12961, %rd12941, %rd12917;
	and.b64  	%rd12962, %rd12961, %rd12893;
	or.b64  	%rd12963, %rd12962, %rd12960;
	add.s64 	%rd12964, %rd12953, %rd12963;
	add.s64 	%rd12965, %rd12964, %rd12959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26392,%dummy}, %rd12568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26393}, %rd12568;
	}
	shf.r.wrap.b32 	%r26394, %r26393, %r26392, 19;
	shf.r.wrap.b32 	%r26395, %r26392, %r26393, 19;
	mov.b64 	%rd12966, {%r26395, %r26394};
	shf.l.wrap.b32 	%r26396, %r26392, %r26393, 3;
	shf.l.wrap.b32 	%r26397, %r26393, %r26392, 3;
	mov.b64 	%rd12967, {%r26397, %r26396};
	shr.u64 	%rd12968, %rd12568, 6;
	xor.b64  	%rd12969, %rd12966, %rd12968;
	xor.b64  	%rd12970, %rd12969, %rd12967;
	shf.r.wrap.b32 	%r26398, %r26007, %r26006, 1;
	shf.r.wrap.b32 	%r26399, %r26006, %r26007, 1;
	mov.b64 	%rd12971, {%r26399, %r26398};
	shf.r.wrap.b32 	%r26400, %r26007, %r26006, 8;
	shf.r.wrap.b32 	%r26401, %r26006, %r26007, 8;
	mov.b64 	%rd12972, {%r26401, %r26400};
	shr.u64 	%rd12973, %rd12399, 7;
	xor.b64  	%rd12974, %rd12971, %rd12973;
	xor.b64  	%rd12975, %rd12974, %rd12972;
	add.s64 	%rd12976, %rd12503, %rd12386;
	add.s64 	%rd12977, %rd12976, %rd12970;
	add.s64 	%rd12978, %rd12977, %rd12975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26402,%dummy}, %rd12581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26403}, %rd12581;
	}
	shf.r.wrap.b32 	%r26404, %r26403, %r26402, 19;
	shf.r.wrap.b32 	%r26405, %r26402, %r26403, 19;
	mov.b64 	%rd12979, {%r26405, %r26404};
	shf.l.wrap.b32 	%r26406, %r26402, %r26403, 3;
	shf.l.wrap.b32 	%r26407, %r26403, %r26402, 3;
	mov.b64 	%rd12980, {%r26407, %r26406};
	shr.u64 	%rd12981, %rd12581, 6;
	xor.b64  	%rd12982, %rd12979, %rd12981;
	xor.b64  	%rd12983, %rd12982, %rd12980;
	shf.r.wrap.b32 	%r26408, %r26017, %r26016, 1;
	shf.r.wrap.b32 	%r26409, %r26016, %r26017, 1;
	mov.b64 	%rd12984, {%r26409, %r26408};
	shf.r.wrap.b32 	%r26410, %r26017, %r26016, 8;
	shf.r.wrap.b32 	%r26411, %r26016, %r26017, 8;
	mov.b64 	%rd12985, {%r26411, %r26410};
	shr.u64 	%rd12986, %rd12412, 7;
	xor.b64  	%rd12987, %rd12984, %rd12986;
	xor.b64  	%rd12988, %rd12987, %rd12985;
	add.s64 	%rd12989, %rd12516, %rd12399;
	add.s64 	%rd12990, %rd12989, %rd12983;
	add.s64 	%rd12991, %rd12990, %rd12988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26412,%dummy}, %rd12978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26413}, %rd12978;
	}
	shf.r.wrap.b32 	%r26414, %r26413, %r26412, 19;
	shf.r.wrap.b32 	%r26415, %r26412, %r26413, 19;
	mov.b64 	%rd12992, {%r26415, %r26414};
	shf.l.wrap.b32 	%r26416, %r26412, %r26413, 3;
	shf.l.wrap.b32 	%r26417, %r26413, %r26412, 3;
	mov.b64 	%rd12993, {%r26417, %r26416};
	shr.u64 	%rd12994, %rd12978, 6;
	xor.b64  	%rd12995, %rd12992, %rd12994;
	xor.b64  	%rd12996, %rd12995, %rd12993;
	shf.r.wrap.b32 	%r26418, %r26027, %r26026, 1;
	shf.r.wrap.b32 	%r26419, %r26026, %r26027, 1;
	mov.b64 	%rd12997, {%r26419, %r26418};
	shf.r.wrap.b32 	%r26420, %r26027, %r26026, 8;
	shf.r.wrap.b32 	%r26421, %r26026, %r26027, 8;
	mov.b64 	%rd12998, {%r26421, %r26420};
	shr.u64 	%rd12999, %rd12425, 7;
	xor.b64  	%rd13000, %rd12997, %rd12999;
	xor.b64  	%rd13001, %rd13000, %rd12998;
	add.s64 	%rd13002, %rd12529, %rd12412;
	add.s64 	%rd13003, %rd13002, %rd12996;
	add.s64 	%rd13004, %rd13003, %rd13001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26422,%dummy}, %rd12991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26423}, %rd12991;
	}
	shf.r.wrap.b32 	%r26424, %r26423, %r26422, 19;
	shf.r.wrap.b32 	%r26425, %r26422, %r26423, 19;
	mov.b64 	%rd13005, {%r26425, %r26424};
	shf.l.wrap.b32 	%r26426, %r26422, %r26423, 3;
	shf.l.wrap.b32 	%r26427, %r26423, %r26422, 3;
	mov.b64 	%rd13006, {%r26427, %r26426};
	shr.u64 	%rd13007, %rd12991, 6;
	xor.b64  	%rd13008, %rd13005, %rd13007;
	xor.b64  	%rd13009, %rd13008, %rd13006;
	shf.r.wrap.b32 	%r26428, %r26037, %r26036, 1;
	shf.r.wrap.b32 	%r26429, %r26036, %r26037, 1;
	mov.b64 	%rd13010, {%r26429, %r26428};
	shf.r.wrap.b32 	%r26430, %r26037, %r26036, 8;
	shf.r.wrap.b32 	%r26431, %r26036, %r26037, 8;
	mov.b64 	%rd13011, {%r26431, %r26430};
	shr.u64 	%rd13012, %rd12438, 7;
	xor.b64  	%rd13013, %rd13010, %rd13012;
	xor.b64  	%rd13014, %rd13013, %rd13011;
	add.s64 	%rd13015, %rd12542, %rd12425;
	add.s64 	%rd13016, %rd13015, %rd13009;
	add.s64 	%rd13017, %rd13016, %rd13014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26432,%dummy}, %rd13004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26433}, %rd13004;
	}
	shf.r.wrap.b32 	%r26434, %r26433, %r26432, 19;
	shf.r.wrap.b32 	%r26435, %r26432, %r26433, 19;
	mov.b64 	%rd13018, {%r26435, %r26434};
	shf.l.wrap.b32 	%r26436, %r26432, %r26433, 3;
	shf.l.wrap.b32 	%r26437, %r26433, %r26432, 3;
	mov.b64 	%rd13019, {%r26437, %r26436};
	shr.u64 	%rd13020, %rd13004, 6;
	xor.b64  	%rd13021, %rd13018, %rd13020;
	xor.b64  	%rd13022, %rd13021, %rd13019;
	shf.r.wrap.b32 	%r26438, %r26047, %r26046, 1;
	shf.r.wrap.b32 	%r26439, %r26046, %r26047, 1;
	mov.b64 	%rd13023, {%r26439, %r26438};
	shf.r.wrap.b32 	%r26440, %r26047, %r26046, 8;
	shf.r.wrap.b32 	%r26441, %r26046, %r26047, 8;
	mov.b64 	%rd13024, {%r26441, %r26440};
	shr.u64 	%rd13025, %rd12451, 7;
	xor.b64  	%rd13026, %rd13023, %rd13025;
	xor.b64  	%rd13027, %rd13026, %rd13024;
	add.s64 	%rd13028, %rd12555, %rd12438;
	add.s64 	%rd13029, %rd13028, %rd13022;
	add.s64 	%rd13030, %rd13029, %rd13027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26442,%dummy}, %rd13017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26443}, %rd13017;
	}
	shf.r.wrap.b32 	%r26444, %r26443, %r26442, 19;
	shf.r.wrap.b32 	%r26445, %r26442, %r26443, 19;
	mov.b64 	%rd13031, {%r26445, %r26444};
	shf.l.wrap.b32 	%r26446, %r26442, %r26443, 3;
	shf.l.wrap.b32 	%r26447, %r26443, %r26442, 3;
	mov.b64 	%rd13032, {%r26447, %r26446};
	shr.u64 	%rd13033, %rd13017, 6;
	xor.b64  	%rd13034, %rd13031, %rd13033;
	xor.b64  	%rd13035, %rd13034, %rd13032;
	shf.r.wrap.b32 	%r26448, %r26057, %r26056, 1;
	shf.r.wrap.b32 	%r26449, %r26056, %r26057, 1;
	mov.b64 	%rd13036, {%r26449, %r26448};
	shf.r.wrap.b32 	%r26450, %r26057, %r26056, 8;
	shf.r.wrap.b32 	%r26451, %r26056, %r26057, 8;
	mov.b64 	%rd13037, {%r26451, %r26450};
	shr.u64 	%rd13038, %rd12464, 7;
	xor.b64  	%rd13039, %rd13036, %rd13038;
	xor.b64  	%rd13040, %rd13039, %rd13037;
	add.s64 	%rd13041, %rd12568, %rd12451;
	add.s64 	%rd13042, %rd13041, %rd13035;
	add.s64 	%rd13043, %rd13042, %rd13040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26452,%dummy}, %rd13030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26453}, %rd13030;
	}
	shf.r.wrap.b32 	%r26454, %r26453, %r26452, 19;
	shf.r.wrap.b32 	%r26455, %r26452, %r26453, 19;
	mov.b64 	%rd13044, {%r26455, %r26454};
	shf.l.wrap.b32 	%r26456, %r26452, %r26453, 3;
	shf.l.wrap.b32 	%r26457, %r26453, %r26452, 3;
	mov.b64 	%rd13045, {%r26457, %r26456};
	shr.u64 	%rd13046, %rd13030, 6;
	xor.b64  	%rd13047, %rd13044, %rd13046;
	xor.b64  	%rd13048, %rd13047, %rd13045;
	shf.r.wrap.b32 	%r26458, %r26067, %r26066, 1;
	shf.r.wrap.b32 	%r26459, %r26066, %r26067, 1;
	mov.b64 	%rd13049, {%r26459, %r26458};
	shf.r.wrap.b32 	%r26460, %r26067, %r26066, 8;
	shf.r.wrap.b32 	%r26461, %r26066, %r26067, 8;
	mov.b64 	%rd13050, {%r26461, %r26460};
	shr.u64 	%rd13051, %rd12477, 7;
	xor.b64  	%rd13052, %rd13049, %rd13051;
	xor.b64  	%rd13053, %rd13052, %rd13050;
	add.s64 	%rd13054, %rd12581, %rd12464;
	add.s64 	%rd13055, %rd13054, %rd13048;
	add.s64 	%rd13056, %rd13055, %rd13053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26462,%dummy}, %rd13043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26463}, %rd13043;
	}
	shf.r.wrap.b32 	%r26464, %r26463, %r26462, 19;
	shf.r.wrap.b32 	%r26465, %r26462, %r26463, 19;
	mov.b64 	%rd13057, {%r26465, %r26464};
	shf.l.wrap.b32 	%r26466, %r26462, %r26463, 3;
	shf.l.wrap.b32 	%r26467, %r26463, %r26462, 3;
	mov.b64 	%rd13058, {%r26467, %r26466};
	shr.u64 	%rd13059, %rd13043, 6;
	xor.b64  	%rd13060, %rd13057, %rd13059;
	xor.b64  	%rd13061, %rd13060, %rd13058;
	shf.r.wrap.b32 	%r26468, %r26077, %r26076, 1;
	shf.r.wrap.b32 	%r26469, %r26076, %r26077, 1;
	mov.b64 	%rd13062, {%r26469, %r26468};
	shf.r.wrap.b32 	%r26470, %r26077, %r26076, 8;
	shf.r.wrap.b32 	%r26471, %r26076, %r26077, 8;
	mov.b64 	%rd13063, {%r26471, %r26470};
	shr.u64 	%rd13064, %rd12490, 7;
	xor.b64  	%rd13065, %rd13062, %rd13064;
	xor.b64  	%rd13066, %rd13065, %rd13063;
	add.s64 	%rd13067, %rd12978, %rd12477;
	add.s64 	%rd13068, %rd13067, %rd13061;
	add.s64 	%rd13069, %rd13068, %rd13066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26472,%dummy}, %rd13056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26473}, %rd13056;
	}
	shf.r.wrap.b32 	%r26474, %r26473, %r26472, 19;
	shf.r.wrap.b32 	%r26475, %r26472, %r26473, 19;
	mov.b64 	%rd13070, {%r26475, %r26474};
	shf.l.wrap.b32 	%r26476, %r26472, %r26473, 3;
	shf.l.wrap.b32 	%r26477, %r26473, %r26472, 3;
	mov.b64 	%rd13071, {%r26477, %r26476};
	shr.u64 	%rd13072, %rd13056, 6;
	xor.b64  	%rd13073, %rd13070, %rd13072;
	xor.b64  	%rd13074, %rd13073, %rd13071;
	shf.r.wrap.b32 	%r26478, %r26087, %r26086, 1;
	shf.r.wrap.b32 	%r26479, %r26086, %r26087, 1;
	mov.b64 	%rd13075, {%r26479, %r26478};
	shf.r.wrap.b32 	%r26480, %r26087, %r26086, 8;
	shf.r.wrap.b32 	%r26481, %r26086, %r26087, 8;
	mov.b64 	%rd13076, {%r26481, %r26480};
	shr.u64 	%rd13077, %rd12503, 7;
	xor.b64  	%rd13078, %rd13075, %rd13077;
	xor.b64  	%rd13079, %rd13078, %rd13076;
	add.s64 	%rd13080, %rd12991, %rd12490;
	add.s64 	%rd13081, %rd13080, %rd13074;
	add.s64 	%rd13082, %rd13081, %rd13079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26482,%dummy}, %rd13069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26483}, %rd13069;
	}
	shf.r.wrap.b32 	%r26484, %r26483, %r26482, 19;
	shf.r.wrap.b32 	%r26485, %r26482, %r26483, 19;
	mov.b64 	%rd13083, {%r26485, %r26484};
	shf.l.wrap.b32 	%r26486, %r26482, %r26483, 3;
	shf.l.wrap.b32 	%r26487, %r26483, %r26482, 3;
	mov.b64 	%rd13084, {%r26487, %r26486};
	shr.u64 	%rd13085, %rd13069, 6;
	xor.b64  	%rd13086, %rd13083, %rd13085;
	xor.b64  	%rd13087, %rd13086, %rd13084;
	shf.r.wrap.b32 	%r26488, %r26097, %r26096, 1;
	shf.r.wrap.b32 	%r26489, %r26096, %r26097, 1;
	mov.b64 	%rd13088, {%r26489, %r26488};
	shf.r.wrap.b32 	%r26490, %r26097, %r26096, 8;
	shf.r.wrap.b32 	%r26491, %r26096, %r26097, 8;
	mov.b64 	%rd13089, {%r26491, %r26490};
	shr.u64 	%rd13090, %rd12516, 7;
	xor.b64  	%rd13091, %rd13088, %rd13090;
	xor.b64  	%rd13092, %rd13091, %rd13089;
	add.s64 	%rd13093, %rd13004, %rd12503;
	add.s64 	%rd13094, %rd13093, %rd13087;
	add.s64 	%rd13095, %rd13094, %rd13092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26492,%dummy}, %rd13082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26493}, %rd13082;
	}
	shf.r.wrap.b32 	%r26494, %r26493, %r26492, 19;
	shf.r.wrap.b32 	%r26495, %r26492, %r26493, 19;
	mov.b64 	%rd13096, {%r26495, %r26494};
	shf.l.wrap.b32 	%r26496, %r26492, %r26493, 3;
	shf.l.wrap.b32 	%r26497, %r26493, %r26492, 3;
	mov.b64 	%rd13097, {%r26497, %r26496};
	shr.u64 	%rd13098, %rd13082, 6;
	xor.b64  	%rd13099, %rd13096, %rd13098;
	xor.b64  	%rd13100, %rd13099, %rd13097;
	shf.r.wrap.b32 	%r26498, %r26107, %r26106, 1;
	shf.r.wrap.b32 	%r26499, %r26106, %r26107, 1;
	mov.b64 	%rd13101, {%r26499, %r26498};
	shf.r.wrap.b32 	%r26500, %r26107, %r26106, 8;
	shf.r.wrap.b32 	%r26501, %r26106, %r26107, 8;
	mov.b64 	%rd13102, {%r26501, %r26500};
	shr.u64 	%rd13103, %rd12529, 7;
	xor.b64  	%rd13104, %rd13101, %rd13103;
	xor.b64  	%rd13105, %rd13104, %rd13102;
	add.s64 	%rd13106, %rd13017, %rd12516;
	add.s64 	%rd13107, %rd13106, %rd13100;
	add.s64 	%rd13108, %rd13107, %rd13105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26502,%dummy}, %rd13095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26503}, %rd13095;
	}
	shf.r.wrap.b32 	%r26504, %r26503, %r26502, 19;
	shf.r.wrap.b32 	%r26505, %r26502, %r26503, 19;
	mov.b64 	%rd13109, {%r26505, %r26504};
	shf.l.wrap.b32 	%r26506, %r26502, %r26503, 3;
	shf.l.wrap.b32 	%r26507, %r26503, %r26502, 3;
	mov.b64 	%rd13110, {%r26507, %r26506};
	shr.u64 	%rd13111, %rd13095, 6;
	xor.b64  	%rd13112, %rd13109, %rd13111;
	xor.b64  	%rd13113, %rd13112, %rd13110;
	shf.r.wrap.b32 	%r26508, %r26117, %r26116, 1;
	shf.r.wrap.b32 	%r26509, %r26116, %r26117, 1;
	mov.b64 	%rd13114, {%r26509, %r26508};
	shf.r.wrap.b32 	%r26510, %r26117, %r26116, 8;
	shf.r.wrap.b32 	%r26511, %r26116, %r26117, 8;
	mov.b64 	%rd13115, {%r26511, %r26510};
	shr.u64 	%rd13116, %rd12542, 7;
	xor.b64  	%rd13117, %rd13114, %rd13116;
	xor.b64  	%rd13118, %rd13117, %rd13115;
	add.s64 	%rd13119, %rd13030, %rd12529;
	add.s64 	%rd13120, %rd13119, %rd13113;
	add.s64 	%rd13121, %rd13120, %rd13118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26512,%dummy}, %rd13108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26513}, %rd13108;
	}
	shf.r.wrap.b32 	%r26514, %r26513, %r26512, 19;
	shf.r.wrap.b32 	%r26515, %r26512, %r26513, 19;
	mov.b64 	%rd13122, {%r26515, %r26514};
	shf.l.wrap.b32 	%r26516, %r26512, %r26513, 3;
	shf.l.wrap.b32 	%r26517, %r26513, %r26512, 3;
	mov.b64 	%rd13123, {%r26517, %r26516};
	shr.u64 	%rd13124, %rd13108, 6;
	xor.b64  	%rd13125, %rd13122, %rd13124;
	xor.b64  	%rd13126, %rd13125, %rd13123;
	shf.r.wrap.b32 	%r26518, %r26127, %r26126, 1;
	shf.r.wrap.b32 	%r26519, %r26126, %r26127, 1;
	mov.b64 	%rd13127, {%r26519, %r26518};
	shf.r.wrap.b32 	%r26520, %r26127, %r26126, 8;
	shf.r.wrap.b32 	%r26521, %r26126, %r26127, 8;
	mov.b64 	%rd13128, {%r26521, %r26520};
	shr.u64 	%rd13129, %rd12555, 7;
	xor.b64  	%rd13130, %rd13127, %rd13129;
	xor.b64  	%rd13131, %rd13130, %rd13128;
	add.s64 	%rd13132, %rd13043, %rd12542;
	add.s64 	%rd13133, %rd13132, %rd13126;
	add.s64 	%rd13134, %rd13133, %rd13131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26522,%dummy}, %rd13121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26523}, %rd13121;
	}
	shf.r.wrap.b32 	%r26524, %r26523, %r26522, 19;
	shf.r.wrap.b32 	%r26525, %r26522, %r26523, 19;
	mov.b64 	%rd13135, {%r26525, %r26524};
	shf.l.wrap.b32 	%r26526, %r26522, %r26523, 3;
	shf.l.wrap.b32 	%r26527, %r26523, %r26522, 3;
	mov.b64 	%rd13136, {%r26527, %r26526};
	shr.u64 	%rd13137, %rd13121, 6;
	xor.b64  	%rd13138, %rd13135, %rd13137;
	xor.b64  	%rd13139, %rd13138, %rd13136;
	shf.r.wrap.b32 	%r26528, %r26393, %r26392, 1;
	shf.r.wrap.b32 	%r26529, %r26392, %r26393, 1;
	mov.b64 	%rd13140, {%r26529, %r26528};
	shf.r.wrap.b32 	%r26530, %r26393, %r26392, 8;
	shf.r.wrap.b32 	%r26531, %r26392, %r26393, 8;
	mov.b64 	%rd13141, {%r26531, %r26530};
	shr.u64 	%rd13142, %rd12568, 7;
	xor.b64  	%rd13143, %rd13140, %rd13142;
	xor.b64  	%rd13144, %rd13143, %rd13141;
	add.s64 	%rd13145, %rd13056, %rd12555;
	add.s64 	%rd13146, %rd13145, %rd13139;
	add.s64 	%rd13147, %rd13146, %rd13144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26532,%dummy}, %rd13134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26533}, %rd13134;
	}
	shf.r.wrap.b32 	%r26534, %r26533, %r26532, 19;
	shf.r.wrap.b32 	%r26535, %r26532, %r26533, 19;
	mov.b64 	%rd13148, {%r26535, %r26534};
	shf.l.wrap.b32 	%r26536, %r26532, %r26533, 3;
	shf.l.wrap.b32 	%r26537, %r26533, %r26532, 3;
	mov.b64 	%rd13149, {%r26537, %r26536};
	shr.u64 	%rd13150, %rd13134, 6;
	xor.b64  	%rd13151, %rd13148, %rd13150;
	xor.b64  	%rd13152, %rd13151, %rd13149;
	shf.r.wrap.b32 	%r26538, %r26403, %r26402, 1;
	shf.r.wrap.b32 	%r26539, %r26402, %r26403, 1;
	mov.b64 	%rd13153, {%r26539, %r26538};
	shf.r.wrap.b32 	%r26540, %r26403, %r26402, 8;
	shf.r.wrap.b32 	%r26541, %r26402, %r26403, 8;
	mov.b64 	%rd13154, {%r26541, %r26540};
	shr.u64 	%rd13155, %rd12581, 7;
	xor.b64  	%rd13156, %rd13153, %rd13155;
	xor.b64  	%rd13157, %rd13156, %rd13154;
	add.s64 	%rd13158, %rd13069, %rd12568;
	add.s64 	%rd13159, %rd13158, %rd13152;
	add.s64 	%rd13160, %rd13159, %rd13157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26542,%dummy}, %rd13147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26543}, %rd13147;
	}
	shf.r.wrap.b32 	%r26544, %r26543, %r26542, 19;
	shf.r.wrap.b32 	%r26545, %r26542, %r26543, 19;
	mov.b64 	%rd13161, {%r26545, %r26544};
	shf.l.wrap.b32 	%r26546, %r26542, %r26543, 3;
	shf.l.wrap.b32 	%r26547, %r26543, %r26542, 3;
	mov.b64 	%rd13162, {%r26547, %r26546};
	shr.u64 	%rd13163, %rd13147, 6;
	xor.b64  	%rd13164, %rd13161, %rd13163;
	xor.b64  	%rd13165, %rd13164, %rd13162;
	shf.r.wrap.b32 	%r26548, %r26413, %r26412, 1;
	shf.r.wrap.b32 	%r26549, %r26412, %r26413, 1;
	mov.b64 	%rd13166, {%r26549, %r26548};
	shf.r.wrap.b32 	%r26550, %r26413, %r26412, 8;
	shf.r.wrap.b32 	%r26551, %r26412, %r26413, 8;
	mov.b64 	%rd13167, {%r26551, %r26550};
	shr.u64 	%rd13168, %rd12978, 7;
	xor.b64  	%rd13169, %rd13166, %rd13168;
	xor.b64  	%rd13170, %rd13169, %rd13167;
	add.s64 	%rd13171, %rd13082, %rd12581;
	add.s64 	%rd13172, %rd13171, %rd13165;
	add.s64 	%rd13173, %rd13172, %rd13170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26552,%dummy}, %rd12954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26553}, %rd12954;
	}
	shf.r.wrap.b32 	%r26554, %r26553, %r26552, 14;
	shf.r.wrap.b32 	%r26555, %r26552, %r26553, 14;
	mov.b64 	%rd13174, {%r26555, %r26554};
	shf.r.wrap.b32 	%r26556, %r26553, %r26552, 18;
	shf.r.wrap.b32 	%r26557, %r26552, %r26553, 18;
	mov.b64 	%rd13175, {%r26557, %r26556};
	xor.b64  	%rd13176, %rd13175, %rd13174;
	shf.l.wrap.b32 	%r26558, %r26552, %r26553, 23;
	shf.l.wrap.b32 	%r26559, %r26553, %r26552, 23;
	mov.b64 	%rd13177, {%r26559, %r26558};
	xor.b64  	%rd13178, %rd13176, %rd13177;
	xor.b64  	%rd13179, %rd12930, %rd12906;
	and.b64  	%rd13180, %rd12954, %rd13179;
	xor.b64  	%rd13181, %rd13180, %rd12906;
	add.s64 	%rd13182, %rd12882, %rd76;
	add.s64 	%rd13183, %rd13182, %rd13181;
	add.s64 	%rd13184, %rd13183, %rd12978;
	add.s64 	%rd13185, %rd13184, %rd13178;
	add.s64 	%rd13186, %rd13185, %rd12893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26560,%dummy}, %rd12965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26561}, %rd12965;
	}
	shf.r.wrap.b32 	%r26562, %r26561, %r26560, 28;
	shf.r.wrap.b32 	%r26563, %r26560, %r26561, 28;
	mov.b64 	%rd13187, {%r26563, %r26562};
	shf.l.wrap.b32 	%r26564, %r26560, %r26561, 30;
	shf.l.wrap.b32 	%r26565, %r26561, %r26560, 30;
	mov.b64 	%rd13188, {%r26565, %r26564};
	xor.b64  	%rd13189, %rd13188, %rd13187;
	shf.l.wrap.b32 	%r26566, %r26560, %r26561, 25;
	shf.l.wrap.b32 	%r26567, %r26561, %r26560, 25;
	mov.b64 	%rd13190, {%r26567, %r26566};
	xor.b64  	%rd13191, %rd13189, %rd13190;
	and.b64  	%rd13192, %rd12965, %rd12941;
	xor.b64  	%rd13193, %rd12965, %rd12941;
	and.b64  	%rd13194, %rd13193, %rd12917;
	or.b64  	%rd13195, %rd13194, %rd13192;
	add.s64 	%rd13196, %rd13185, %rd13195;
	add.s64 	%rd13197, %rd13196, %rd13191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26568,%dummy}, %rd13186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26569}, %rd13186;
	}
	shf.r.wrap.b32 	%r26570, %r26569, %r26568, 14;
	shf.r.wrap.b32 	%r26571, %r26568, %r26569, 14;
	mov.b64 	%rd13198, {%r26571, %r26570};
	shf.r.wrap.b32 	%r26572, %r26569, %r26568, 18;
	shf.r.wrap.b32 	%r26573, %r26568, %r26569, 18;
	mov.b64 	%rd13199, {%r26573, %r26572};
	xor.b64  	%rd13200, %rd13199, %rd13198;
	shf.l.wrap.b32 	%r26574, %r26568, %r26569, 23;
	shf.l.wrap.b32 	%r26575, %r26569, %r26568, 23;
	mov.b64 	%rd13201, {%r26575, %r26574};
	xor.b64  	%rd13202, %rd13200, %rd13201;
	xor.b64  	%rd13203, %rd12954, %rd12930;
	and.b64  	%rd13204, %rd13186, %rd13203;
	xor.b64  	%rd13205, %rd13204, %rd12930;
	add.s64 	%rd13206, %rd12906, %rd77;
	add.s64 	%rd13207, %rd13206, %rd12991;
	add.s64 	%rd13208, %rd13207, %rd13205;
	add.s64 	%rd13209, %rd13208, %rd13202;
	add.s64 	%rd13210, %rd13209, %rd12917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26576,%dummy}, %rd13197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26577}, %rd13197;
	}
	shf.r.wrap.b32 	%r26578, %r26577, %r26576, 28;
	shf.r.wrap.b32 	%r26579, %r26576, %r26577, 28;
	mov.b64 	%rd13211, {%r26579, %r26578};
	shf.l.wrap.b32 	%r26580, %r26576, %r26577, 30;
	shf.l.wrap.b32 	%r26581, %r26577, %r26576, 30;
	mov.b64 	%rd13212, {%r26581, %r26580};
	xor.b64  	%rd13213, %rd13212, %rd13211;
	shf.l.wrap.b32 	%r26582, %r26576, %r26577, 25;
	shf.l.wrap.b32 	%r26583, %r26577, %r26576, 25;
	mov.b64 	%rd13214, {%r26583, %r26582};
	xor.b64  	%rd13215, %rd13213, %rd13214;
	and.b64  	%rd13216, %rd13197, %rd12965;
	xor.b64  	%rd13217, %rd13197, %rd12965;
	and.b64  	%rd13218, %rd13217, %rd12941;
	or.b64  	%rd13219, %rd13218, %rd13216;
	add.s64 	%rd13220, %rd13209, %rd13219;
	add.s64 	%rd13221, %rd13220, %rd13215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26584,%dummy}, %rd13210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26585}, %rd13210;
	}
	shf.r.wrap.b32 	%r26586, %r26585, %r26584, 14;
	shf.r.wrap.b32 	%r26587, %r26584, %r26585, 14;
	mov.b64 	%rd13222, {%r26587, %r26586};
	shf.r.wrap.b32 	%r26588, %r26585, %r26584, 18;
	shf.r.wrap.b32 	%r26589, %r26584, %r26585, 18;
	mov.b64 	%rd13223, {%r26589, %r26588};
	xor.b64  	%rd13224, %rd13223, %rd13222;
	shf.l.wrap.b32 	%r26590, %r26584, %r26585, 23;
	shf.l.wrap.b32 	%r26591, %r26585, %r26584, 23;
	mov.b64 	%rd13225, {%r26591, %r26590};
	xor.b64  	%rd13226, %rd13224, %rd13225;
	xor.b64  	%rd13227, %rd13186, %rd12954;
	and.b64  	%rd13228, %rd13210, %rd13227;
	xor.b64  	%rd13229, %rd13228, %rd12954;
	add.s64 	%rd13230, %rd12930, %rd78;
	add.s64 	%rd13231, %rd13230, %rd13004;
	add.s64 	%rd13232, %rd13231, %rd13229;
	add.s64 	%rd13233, %rd13232, %rd13226;
	add.s64 	%rd13234, %rd13233, %rd12941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26592,%dummy}, %rd13221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26593}, %rd13221;
	}
	shf.r.wrap.b32 	%r26594, %r26593, %r26592, 28;
	shf.r.wrap.b32 	%r26595, %r26592, %r26593, 28;
	mov.b64 	%rd13235, {%r26595, %r26594};
	shf.l.wrap.b32 	%r26596, %r26592, %r26593, 30;
	shf.l.wrap.b32 	%r26597, %r26593, %r26592, 30;
	mov.b64 	%rd13236, {%r26597, %r26596};
	xor.b64  	%rd13237, %rd13236, %rd13235;
	shf.l.wrap.b32 	%r26598, %r26592, %r26593, 25;
	shf.l.wrap.b32 	%r26599, %r26593, %r26592, 25;
	mov.b64 	%rd13238, {%r26599, %r26598};
	xor.b64  	%rd13239, %rd13237, %rd13238;
	and.b64  	%rd13240, %rd13221, %rd13197;
	xor.b64  	%rd13241, %rd13221, %rd13197;
	and.b64  	%rd13242, %rd13241, %rd12965;
	or.b64  	%rd13243, %rd13242, %rd13240;
	add.s64 	%rd13244, %rd13233, %rd13243;
	add.s64 	%rd13245, %rd13244, %rd13239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26600,%dummy}, %rd13234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26601}, %rd13234;
	}
	shf.r.wrap.b32 	%r26602, %r26601, %r26600, 14;
	shf.r.wrap.b32 	%r26603, %r26600, %r26601, 14;
	mov.b64 	%rd13246, {%r26603, %r26602};
	shf.r.wrap.b32 	%r26604, %r26601, %r26600, 18;
	shf.r.wrap.b32 	%r26605, %r26600, %r26601, 18;
	mov.b64 	%rd13247, {%r26605, %r26604};
	xor.b64  	%rd13248, %rd13247, %rd13246;
	shf.l.wrap.b32 	%r26606, %r26600, %r26601, 23;
	shf.l.wrap.b32 	%r26607, %r26601, %r26600, 23;
	mov.b64 	%rd13249, {%r26607, %r26606};
	xor.b64  	%rd13250, %rd13248, %rd13249;
	xor.b64  	%rd13251, %rd13210, %rd13186;
	and.b64  	%rd13252, %rd13234, %rd13251;
	xor.b64  	%rd13253, %rd13252, %rd13186;
	add.s64 	%rd13254, %rd12954, %rd79;
	add.s64 	%rd13255, %rd13254, %rd13017;
	add.s64 	%rd13256, %rd13255, %rd13253;
	add.s64 	%rd13257, %rd13256, %rd13250;
	add.s64 	%rd13258, %rd13257, %rd12965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26608,%dummy}, %rd13245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26609}, %rd13245;
	}
	shf.r.wrap.b32 	%r26610, %r26609, %r26608, 28;
	shf.r.wrap.b32 	%r26611, %r26608, %r26609, 28;
	mov.b64 	%rd13259, {%r26611, %r26610};
	shf.l.wrap.b32 	%r26612, %r26608, %r26609, 30;
	shf.l.wrap.b32 	%r26613, %r26609, %r26608, 30;
	mov.b64 	%rd13260, {%r26613, %r26612};
	xor.b64  	%rd13261, %rd13260, %rd13259;
	shf.l.wrap.b32 	%r26614, %r26608, %r26609, 25;
	shf.l.wrap.b32 	%r26615, %r26609, %r26608, 25;
	mov.b64 	%rd13262, {%r26615, %r26614};
	xor.b64  	%rd13263, %rd13261, %rd13262;
	and.b64  	%rd13264, %rd13245, %rd13221;
	xor.b64  	%rd13265, %rd13245, %rd13221;
	and.b64  	%rd13266, %rd13265, %rd13197;
	or.b64  	%rd13267, %rd13266, %rd13264;
	add.s64 	%rd13268, %rd13257, %rd13267;
	add.s64 	%rd13269, %rd13268, %rd13263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26616,%dummy}, %rd13258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26617}, %rd13258;
	}
	shf.r.wrap.b32 	%r26618, %r26617, %r26616, 14;
	shf.r.wrap.b32 	%r26619, %r26616, %r26617, 14;
	mov.b64 	%rd13270, {%r26619, %r26618};
	shf.r.wrap.b32 	%r26620, %r26617, %r26616, 18;
	shf.r.wrap.b32 	%r26621, %r26616, %r26617, 18;
	mov.b64 	%rd13271, {%r26621, %r26620};
	xor.b64  	%rd13272, %rd13271, %rd13270;
	shf.l.wrap.b32 	%r26622, %r26616, %r26617, 23;
	shf.l.wrap.b32 	%r26623, %r26617, %r26616, 23;
	mov.b64 	%rd13273, {%r26623, %r26622};
	xor.b64  	%rd13274, %rd13272, %rd13273;
	xor.b64  	%rd13275, %rd13234, %rd13210;
	and.b64  	%rd13276, %rd13258, %rd13275;
	xor.b64  	%rd13277, %rd13276, %rd13210;
	add.s64 	%rd13278, %rd13030, %rd80;
	add.s64 	%rd13279, %rd13278, %rd13186;
	add.s64 	%rd13280, %rd13279, %rd13277;
	add.s64 	%rd13281, %rd13280, %rd13274;
	add.s64 	%rd13282, %rd13281, %rd13197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26624,%dummy}, %rd13269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26625}, %rd13269;
	}
	shf.r.wrap.b32 	%r26626, %r26625, %r26624, 28;
	shf.r.wrap.b32 	%r26627, %r26624, %r26625, 28;
	mov.b64 	%rd13283, {%r26627, %r26626};
	shf.l.wrap.b32 	%r26628, %r26624, %r26625, 30;
	shf.l.wrap.b32 	%r26629, %r26625, %r26624, 30;
	mov.b64 	%rd13284, {%r26629, %r26628};
	xor.b64  	%rd13285, %rd13284, %rd13283;
	shf.l.wrap.b32 	%r26630, %r26624, %r26625, 25;
	shf.l.wrap.b32 	%r26631, %r26625, %r26624, 25;
	mov.b64 	%rd13286, {%r26631, %r26630};
	xor.b64  	%rd13287, %rd13285, %rd13286;
	and.b64  	%rd13288, %rd13269, %rd13245;
	xor.b64  	%rd13289, %rd13269, %rd13245;
	and.b64  	%rd13290, %rd13289, %rd13221;
	or.b64  	%rd13291, %rd13290, %rd13288;
	add.s64 	%rd13292, %rd13281, %rd13291;
	add.s64 	%rd13293, %rd13292, %rd13287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26632,%dummy}, %rd13282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26633}, %rd13282;
	}
	shf.r.wrap.b32 	%r26634, %r26633, %r26632, 14;
	shf.r.wrap.b32 	%r26635, %r26632, %r26633, 14;
	mov.b64 	%rd13294, {%r26635, %r26634};
	shf.r.wrap.b32 	%r26636, %r26633, %r26632, 18;
	shf.r.wrap.b32 	%r26637, %r26632, %r26633, 18;
	mov.b64 	%rd13295, {%r26637, %r26636};
	xor.b64  	%rd13296, %rd13295, %rd13294;
	shf.l.wrap.b32 	%r26638, %r26632, %r26633, 23;
	shf.l.wrap.b32 	%r26639, %r26633, %r26632, 23;
	mov.b64 	%rd13297, {%r26639, %r26638};
	xor.b64  	%rd13298, %rd13296, %rd13297;
	xor.b64  	%rd13299, %rd13258, %rd13234;
	and.b64  	%rd13300, %rd13282, %rd13299;
	xor.b64  	%rd13301, %rd13300, %rd13234;
	add.s64 	%rd13302, %rd13043, %rd81;
	add.s64 	%rd13303, %rd13302, %rd13210;
	add.s64 	%rd13304, %rd13303, %rd13301;
	add.s64 	%rd13305, %rd13304, %rd13298;
	add.s64 	%rd13306, %rd13305, %rd13221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26640,%dummy}, %rd13293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26641}, %rd13293;
	}
	shf.r.wrap.b32 	%r26642, %r26641, %r26640, 28;
	shf.r.wrap.b32 	%r26643, %r26640, %r26641, 28;
	mov.b64 	%rd13307, {%r26643, %r26642};
	shf.l.wrap.b32 	%r26644, %r26640, %r26641, 30;
	shf.l.wrap.b32 	%r26645, %r26641, %r26640, 30;
	mov.b64 	%rd13308, {%r26645, %r26644};
	xor.b64  	%rd13309, %rd13308, %rd13307;
	shf.l.wrap.b32 	%r26646, %r26640, %r26641, 25;
	shf.l.wrap.b32 	%r26647, %r26641, %r26640, 25;
	mov.b64 	%rd13310, {%r26647, %r26646};
	xor.b64  	%rd13311, %rd13309, %rd13310;
	and.b64  	%rd13312, %rd13293, %rd13269;
	xor.b64  	%rd13313, %rd13293, %rd13269;
	and.b64  	%rd13314, %rd13313, %rd13245;
	or.b64  	%rd13315, %rd13314, %rd13312;
	add.s64 	%rd13316, %rd13305, %rd13315;
	add.s64 	%rd13317, %rd13316, %rd13311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26648,%dummy}, %rd13306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26649}, %rd13306;
	}
	shf.r.wrap.b32 	%r26650, %r26649, %r26648, 14;
	shf.r.wrap.b32 	%r26651, %r26648, %r26649, 14;
	mov.b64 	%rd13318, {%r26651, %r26650};
	shf.r.wrap.b32 	%r26652, %r26649, %r26648, 18;
	shf.r.wrap.b32 	%r26653, %r26648, %r26649, 18;
	mov.b64 	%rd13319, {%r26653, %r26652};
	xor.b64  	%rd13320, %rd13319, %rd13318;
	shf.l.wrap.b32 	%r26654, %r26648, %r26649, 23;
	shf.l.wrap.b32 	%r26655, %r26649, %r26648, 23;
	mov.b64 	%rd13321, {%r26655, %r26654};
	xor.b64  	%rd13322, %rd13320, %rd13321;
	xor.b64  	%rd13323, %rd13282, %rd13258;
	and.b64  	%rd13324, %rd13306, %rd13323;
	xor.b64  	%rd13325, %rd13324, %rd13258;
	add.s64 	%rd13326, %rd13056, %rd82;
	add.s64 	%rd13327, %rd13326, %rd13234;
	add.s64 	%rd13328, %rd13327, %rd13325;
	add.s64 	%rd13329, %rd13328, %rd13322;
	add.s64 	%rd13330, %rd13329, %rd13245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26656,%dummy}, %rd13317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26657}, %rd13317;
	}
	shf.r.wrap.b32 	%r26658, %r26657, %r26656, 28;
	shf.r.wrap.b32 	%r26659, %r26656, %r26657, 28;
	mov.b64 	%rd13331, {%r26659, %r26658};
	shf.l.wrap.b32 	%r26660, %r26656, %r26657, 30;
	shf.l.wrap.b32 	%r26661, %r26657, %r26656, 30;
	mov.b64 	%rd13332, {%r26661, %r26660};
	xor.b64  	%rd13333, %rd13332, %rd13331;
	shf.l.wrap.b32 	%r26662, %r26656, %r26657, 25;
	shf.l.wrap.b32 	%r26663, %r26657, %r26656, 25;
	mov.b64 	%rd13334, {%r26663, %r26662};
	xor.b64  	%rd13335, %rd13333, %rd13334;
	and.b64  	%rd13336, %rd13317, %rd13293;
	xor.b64  	%rd13337, %rd13317, %rd13293;
	and.b64  	%rd13338, %rd13337, %rd13269;
	or.b64  	%rd13339, %rd13338, %rd13336;
	add.s64 	%rd13340, %rd13329, %rd13339;
	add.s64 	%rd13341, %rd13340, %rd13335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26664,%dummy}, %rd13330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26665}, %rd13330;
	}
	shf.r.wrap.b32 	%r26666, %r26665, %r26664, 14;
	shf.r.wrap.b32 	%r26667, %r26664, %r26665, 14;
	mov.b64 	%rd13342, {%r26667, %r26666};
	shf.r.wrap.b32 	%r26668, %r26665, %r26664, 18;
	shf.r.wrap.b32 	%r26669, %r26664, %r26665, 18;
	mov.b64 	%rd13343, {%r26669, %r26668};
	xor.b64  	%rd13344, %rd13343, %rd13342;
	shf.l.wrap.b32 	%r26670, %r26664, %r26665, 23;
	shf.l.wrap.b32 	%r26671, %r26665, %r26664, 23;
	mov.b64 	%rd13345, {%r26671, %r26670};
	xor.b64  	%rd13346, %rd13344, %rd13345;
	xor.b64  	%rd13347, %rd13306, %rd13282;
	and.b64  	%rd13348, %rd13330, %rd13347;
	xor.b64  	%rd13349, %rd13348, %rd13282;
	add.s64 	%rd13350, %rd13069, %rd83;
	add.s64 	%rd13351, %rd13350, %rd13258;
	add.s64 	%rd13352, %rd13351, %rd13349;
	add.s64 	%rd13353, %rd13352, %rd13346;
	add.s64 	%rd13354, %rd13353, %rd13269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26672,%dummy}, %rd13341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26673}, %rd13341;
	}
	shf.r.wrap.b32 	%r26674, %r26673, %r26672, 28;
	shf.r.wrap.b32 	%r26675, %r26672, %r26673, 28;
	mov.b64 	%rd13355, {%r26675, %r26674};
	shf.l.wrap.b32 	%r26676, %r26672, %r26673, 30;
	shf.l.wrap.b32 	%r26677, %r26673, %r26672, 30;
	mov.b64 	%rd13356, {%r26677, %r26676};
	xor.b64  	%rd13357, %rd13356, %rd13355;
	shf.l.wrap.b32 	%r26678, %r26672, %r26673, 25;
	shf.l.wrap.b32 	%r26679, %r26673, %r26672, 25;
	mov.b64 	%rd13358, {%r26679, %r26678};
	xor.b64  	%rd13359, %rd13357, %rd13358;
	and.b64  	%rd13360, %rd13341, %rd13317;
	xor.b64  	%rd13361, %rd13341, %rd13317;
	and.b64  	%rd13362, %rd13361, %rd13293;
	or.b64  	%rd13363, %rd13362, %rd13360;
	add.s64 	%rd13364, %rd13353, %rd13363;
	add.s64 	%rd13365, %rd13364, %rd13359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26680,%dummy}, %rd13354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26681}, %rd13354;
	}
	shf.r.wrap.b32 	%r26682, %r26681, %r26680, 14;
	shf.r.wrap.b32 	%r26683, %r26680, %r26681, 14;
	mov.b64 	%rd13366, {%r26683, %r26682};
	shf.r.wrap.b32 	%r26684, %r26681, %r26680, 18;
	shf.r.wrap.b32 	%r26685, %r26680, %r26681, 18;
	mov.b64 	%rd13367, {%r26685, %r26684};
	xor.b64  	%rd13368, %rd13367, %rd13366;
	shf.l.wrap.b32 	%r26686, %r26680, %r26681, 23;
	shf.l.wrap.b32 	%r26687, %r26681, %r26680, 23;
	mov.b64 	%rd13369, {%r26687, %r26686};
	xor.b64  	%rd13370, %rd13368, %rd13369;
	xor.b64  	%rd13371, %rd13330, %rd13306;
	and.b64  	%rd13372, %rd13354, %rd13371;
	xor.b64  	%rd13373, %rd13372, %rd13306;
	add.s64 	%rd13374, %rd13082, %rd84;
	add.s64 	%rd13375, %rd13374, %rd13282;
	add.s64 	%rd13376, %rd13375, %rd13373;
	add.s64 	%rd13377, %rd13376, %rd13370;
	add.s64 	%rd13378, %rd13377, %rd13293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26688,%dummy}, %rd13365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26689}, %rd13365;
	}
	shf.r.wrap.b32 	%r26690, %r26689, %r26688, 28;
	shf.r.wrap.b32 	%r26691, %r26688, %r26689, 28;
	mov.b64 	%rd13379, {%r26691, %r26690};
	shf.l.wrap.b32 	%r26692, %r26688, %r26689, 30;
	shf.l.wrap.b32 	%r26693, %r26689, %r26688, 30;
	mov.b64 	%rd13380, {%r26693, %r26692};
	xor.b64  	%rd13381, %rd13380, %rd13379;
	shf.l.wrap.b32 	%r26694, %r26688, %r26689, 25;
	shf.l.wrap.b32 	%r26695, %r26689, %r26688, 25;
	mov.b64 	%rd13382, {%r26695, %r26694};
	xor.b64  	%rd13383, %rd13381, %rd13382;
	and.b64  	%rd13384, %rd13365, %rd13341;
	xor.b64  	%rd13385, %rd13365, %rd13341;
	and.b64  	%rd13386, %rd13385, %rd13317;
	or.b64  	%rd13387, %rd13386, %rd13384;
	add.s64 	%rd13388, %rd13377, %rd13387;
	add.s64 	%rd13389, %rd13388, %rd13383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26696,%dummy}, %rd13378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26697}, %rd13378;
	}
	shf.r.wrap.b32 	%r26698, %r26697, %r26696, 14;
	shf.r.wrap.b32 	%r26699, %r26696, %r26697, 14;
	mov.b64 	%rd13390, {%r26699, %r26698};
	shf.r.wrap.b32 	%r26700, %r26697, %r26696, 18;
	shf.r.wrap.b32 	%r26701, %r26696, %r26697, 18;
	mov.b64 	%rd13391, {%r26701, %r26700};
	xor.b64  	%rd13392, %rd13391, %rd13390;
	shf.l.wrap.b32 	%r26702, %r26696, %r26697, 23;
	shf.l.wrap.b32 	%r26703, %r26697, %r26696, 23;
	mov.b64 	%rd13393, {%r26703, %r26702};
	xor.b64  	%rd13394, %rd13392, %rd13393;
	xor.b64  	%rd13395, %rd13354, %rd13330;
	and.b64  	%rd13396, %rd13378, %rd13395;
	xor.b64  	%rd13397, %rd13396, %rd13330;
	add.s64 	%rd13398, %rd13095, %rd85;
	add.s64 	%rd13399, %rd13398, %rd13306;
	add.s64 	%rd13400, %rd13399, %rd13397;
	add.s64 	%rd13401, %rd13400, %rd13394;
	add.s64 	%rd13402, %rd13401, %rd13317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26704,%dummy}, %rd13389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26705}, %rd13389;
	}
	shf.r.wrap.b32 	%r26706, %r26705, %r26704, 28;
	shf.r.wrap.b32 	%r26707, %r26704, %r26705, 28;
	mov.b64 	%rd13403, {%r26707, %r26706};
	shf.l.wrap.b32 	%r26708, %r26704, %r26705, 30;
	shf.l.wrap.b32 	%r26709, %r26705, %r26704, 30;
	mov.b64 	%rd13404, {%r26709, %r26708};
	xor.b64  	%rd13405, %rd13404, %rd13403;
	shf.l.wrap.b32 	%r26710, %r26704, %r26705, 25;
	shf.l.wrap.b32 	%r26711, %r26705, %r26704, 25;
	mov.b64 	%rd13406, {%r26711, %r26710};
	xor.b64  	%rd13407, %rd13405, %rd13406;
	and.b64  	%rd13408, %rd13389, %rd13365;
	xor.b64  	%rd13409, %rd13389, %rd13365;
	and.b64  	%rd13410, %rd13409, %rd13341;
	or.b64  	%rd13411, %rd13410, %rd13408;
	add.s64 	%rd13412, %rd13401, %rd13411;
	add.s64 	%rd13413, %rd13412, %rd13407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26712,%dummy}, %rd13402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26713}, %rd13402;
	}
	shf.r.wrap.b32 	%r26714, %r26713, %r26712, 14;
	shf.r.wrap.b32 	%r26715, %r26712, %r26713, 14;
	mov.b64 	%rd13414, {%r26715, %r26714};
	shf.r.wrap.b32 	%r26716, %r26713, %r26712, 18;
	shf.r.wrap.b32 	%r26717, %r26712, %r26713, 18;
	mov.b64 	%rd13415, {%r26717, %r26716};
	xor.b64  	%rd13416, %rd13415, %rd13414;
	shf.l.wrap.b32 	%r26718, %r26712, %r26713, 23;
	shf.l.wrap.b32 	%r26719, %r26713, %r26712, 23;
	mov.b64 	%rd13417, {%r26719, %r26718};
	xor.b64  	%rd13418, %rd13416, %rd13417;
	xor.b64  	%rd13419, %rd13378, %rd13354;
	and.b64  	%rd13420, %rd13402, %rd13419;
	xor.b64  	%rd13421, %rd13420, %rd13354;
	add.s64 	%rd13422, %rd13108, %rd86;
	add.s64 	%rd13423, %rd13422, %rd13330;
	add.s64 	%rd13424, %rd13423, %rd13421;
	add.s64 	%rd13425, %rd13424, %rd13418;
	add.s64 	%rd13426, %rd13425, %rd13341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26720,%dummy}, %rd13413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26721}, %rd13413;
	}
	shf.r.wrap.b32 	%r26722, %r26721, %r26720, 28;
	shf.r.wrap.b32 	%r26723, %r26720, %r26721, 28;
	mov.b64 	%rd13427, {%r26723, %r26722};
	shf.l.wrap.b32 	%r26724, %r26720, %r26721, 30;
	shf.l.wrap.b32 	%r26725, %r26721, %r26720, 30;
	mov.b64 	%rd13428, {%r26725, %r26724};
	xor.b64  	%rd13429, %rd13428, %rd13427;
	shf.l.wrap.b32 	%r26726, %r26720, %r26721, 25;
	shf.l.wrap.b32 	%r26727, %r26721, %r26720, 25;
	mov.b64 	%rd13430, {%r26727, %r26726};
	xor.b64  	%rd13431, %rd13429, %rd13430;
	and.b64  	%rd13432, %rd13413, %rd13389;
	xor.b64  	%rd13433, %rd13413, %rd13389;
	and.b64  	%rd13434, %rd13433, %rd13365;
	or.b64  	%rd13435, %rd13434, %rd13432;
	add.s64 	%rd13436, %rd13425, %rd13435;
	add.s64 	%rd13437, %rd13436, %rd13431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26728,%dummy}, %rd13426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26729}, %rd13426;
	}
	shf.r.wrap.b32 	%r26730, %r26729, %r26728, 14;
	shf.r.wrap.b32 	%r26731, %r26728, %r26729, 14;
	mov.b64 	%rd13438, {%r26731, %r26730};
	shf.r.wrap.b32 	%r26732, %r26729, %r26728, 18;
	shf.r.wrap.b32 	%r26733, %r26728, %r26729, 18;
	mov.b64 	%rd13439, {%r26733, %r26732};
	xor.b64  	%rd13440, %rd13439, %rd13438;
	shf.l.wrap.b32 	%r26734, %r26728, %r26729, 23;
	shf.l.wrap.b32 	%r26735, %r26729, %r26728, 23;
	mov.b64 	%rd13441, {%r26735, %r26734};
	xor.b64  	%rd13442, %rd13440, %rd13441;
	xor.b64  	%rd13443, %rd13402, %rd13378;
	and.b64  	%rd13444, %rd13426, %rd13443;
	xor.b64  	%rd13445, %rd13444, %rd13378;
	add.s64 	%rd13446, %rd13121, %rd87;
	add.s64 	%rd13447, %rd13446, %rd13354;
	add.s64 	%rd13448, %rd13447, %rd13445;
	add.s64 	%rd13449, %rd13448, %rd13442;
	add.s64 	%rd13450, %rd13449, %rd13365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26736,%dummy}, %rd13437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26737}, %rd13437;
	}
	shf.r.wrap.b32 	%r26738, %r26737, %r26736, 28;
	shf.r.wrap.b32 	%r26739, %r26736, %r26737, 28;
	mov.b64 	%rd13451, {%r26739, %r26738};
	shf.l.wrap.b32 	%r26740, %r26736, %r26737, 30;
	shf.l.wrap.b32 	%r26741, %r26737, %r26736, 30;
	mov.b64 	%rd13452, {%r26741, %r26740};
	xor.b64  	%rd13453, %rd13452, %rd13451;
	shf.l.wrap.b32 	%r26742, %r26736, %r26737, 25;
	shf.l.wrap.b32 	%r26743, %r26737, %r26736, 25;
	mov.b64 	%rd13454, {%r26743, %r26742};
	xor.b64  	%rd13455, %rd13453, %rd13454;
	and.b64  	%rd13456, %rd13437, %rd13413;
	xor.b64  	%rd13457, %rd13437, %rd13413;
	and.b64  	%rd13458, %rd13457, %rd13389;
	or.b64  	%rd13459, %rd13458, %rd13456;
	add.s64 	%rd13460, %rd13449, %rd13459;
	add.s64 	%rd13461, %rd13460, %rd13455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26744,%dummy}, %rd13450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26745}, %rd13450;
	}
	shf.r.wrap.b32 	%r26746, %r26745, %r26744, 14;
	shf.r.wrap.b32 	%r26747, %r26744, %r26745, 14;
	mov.b64 	%rd13462, {%r26747, %r26746};
	shf.r.wrap.b32 	%r26748, %r26745, %r26744, 18;
	shf.r.wrap.b32 	%r26749, %r26744, %r26745, 18;
	mov.b64 	%rd13463, {%r26749, %r26748};
	xor.b64  	%rd13464, %rd13463, %rd13462;
	shf.l.wrap.b32 	%r26750, %r26744, %r26745, 23;
	shf.l.wrap.b32 	%r26751, %r26745, %r26744, 23;
	mov.b64 	%rd13465, {%r26751, %r26750};
	xor.b64  	%rd13466, %rd13464, %rd13465;
	xor.b64  	%rd13467, %rd13426, %rd13402;
	and.b64  	%rd13468, %rd13450, %rd13467;
	xor.b64  	%rd13469, %rd13468, %rd13402;
	add.s64 	%rd13470, %rd13134, %rd88;
	add.s64 	%rd13471, %rd13470, %rd13378;
	add.s64 	%rd13472, %rd13471, %rd13469;
	add.s64 	%rd13473, %rd13472, %rd13466;
	add.s64 	%rd13474, %rd13473, %rd13389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26752,%dummy}, %rd13461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26753}, %rd13461;
	}
	shf.r.wrap.b32 	%r26754, %r26753, %r26752, 28;
	shf.r.wrap.b32 	%r26755, %r26752, %r26753, 28;
	mov.b64 	%rd13475, {%r26755, %r26754};
	shf.l.wrap.b32 	%r26756, %r26752, %r26753, 30;
	shf.l.wrap.b32 	%r26757, %r26753, %r26752, 30;
	mov.b64 	%rd13476, {%r26757, %r26756};
	xor.b64  	%rd13477, %rd13476, %rd13475;
	shf.l.wrap.b32 	%r26758, %r26752, %r26753, 25;
	shf.l.wrap.b32 	%r26759, %r26753, %r26752, 25;
	mov.b64 	%rd13478, {%r26759, %r26758};
	xor.b64  	%rd13479, %rd13477, %rd13478;
	and.b64  	%rd13480, %rd13461, %rd13437;
	xor.b64  	%rd13481, %rd13461, %rd13437;
	and.b64  	%rd13482, %rd13481, %rd13413;
	or.b64  	%rd13483, %rd13482, %rd13480;
	add.s64 	%rd13484, %rd13473, %rd13483;
	add.s64 	%rd13485, %rd13484, %rd13479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26760,%dummy}, %rd13474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26761}, %rd13474;
	}
	shf.r.wrap.b32 	%r26762, %r26761, %r26760, 14;
	shf.r.wrap.b32 	%r26763, %r26760, %r26761, 14;
	mov.b64 	%rd13486, {%r26763, %r26762};
	shf.r.wrap.b32 	%r26764, %r26761, %r26760, 18;
	shf.r.wrap.b32 	%r26765, %r26760, %r26761, 18;
	mov.b64 	%rd13487, {%r26765, %r26764};
	xor.b64  	%rd13488, %rd13487, %rd13486;
	shf.l.wrap.b32 	%r26766, %r26760, %r26761, 23;
	shf.l.wrap.b32 	%r26767, %r26761, %r26760, 23;
	mov.b64 	%rd13489, {%r26767, %r26766};
	xor.b64  	%rd13490, %rd13488, %rd13489;
	xor.b64  	%rd13491, %rd13450, %rd13426;
	and.b64  	%rd13492, %rd13474, %rd13491;
	xor.b64  	%rd13493, %rd13492, %rd13426;
	add.s64 	%rd13494, %rd13147, %rd89;
	add.s64 	%rd13495, %rd13494, %rd13402;
	add.s64 	%rd13496, %rd13495, %rd13493;
	add.s64 	%rd13497, %rd13496, %rd13490;
	add.s64 	%rd13498, %rd13497, %rd13413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26768,%dummy}, %rd13485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26769}, %rd13485;
	}
	shf.r.wrap.b32 	%r26770, %r26769, %r26768, 28;
	shf.r.wrap.b32 	%r26771, %r26768, %r26769, 28;
	mov.b64 	%rd13499, {%r26771, %r26770};
	shf.l.wrap.b32 	%r26772, %r26768, %r26769, 30;
	shf.l.wrap.b32 	%r26773, %r26769, %r26768, 30;
	mov.b64 	%rd13500, {%r26773, %r26772};
	xor.b64  	%rd13501, %rd13500, %rd13499;
	shf.l.wrap.b32 	%r26774, %r26768, %r26769, 25;
	shf.l.wrap.b32 	%r26775, %r26769, %r26768, 25;
	mov.b64 	%rd13502, {%r26775, %r26774};
	xor.b64  	%rd13503, %rd13501, %rd13502;
	and.b64  	%rd13504, %rd13485, %rd13461;
	xor.b64  	%rd13505, %rd13485, %rd13461;
	and.b64  	%rd13506, %rd13505, %rd13437;
	or.b64  	%rd13507, %rd13506, %rd13504;
	add.s64 	%rd13508, %rd13497, %rd13507;
	add.s64 	%rd13509, %rd13508, %rd13503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26776,%dummy}, %rd13498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26777}, %rd13498;
	}
	shf.r.wrap.b32 	%r26778, %r26777, %r26776, 14;
	shf.r.wrap.b32 	%r26779, %r26776, %r26777, 14;
	mov.b64 	%rd13510, {%r26779, %r26778};
	shf.r.wrap.b32 	%r26780, %r26777, %r26776, 18;
	shf.r.wrap.b32 	%r26781, %r26776, %r26777, 18;
	mov.b64 	%rd13511, {%r26781, %r26780};
	xor.b64  	%rd13512, %rd13511, %rd13510;
	shf.l.wrap.b32 	%r26782, %r26776, %r26777, 23;
	shf.l.wrap.b32 	%r26783, %r26777, %r26776, 23;
	mov.b64 	%rd13513, {%r26783, %r26782};
	xor.b64  	%rd13514, %rd13512, %rd13513;
	xor.b64  	%rd13515, %rd13474, %rd13450;
	and.b64  	%rd13516, %rd13498, %rd13515;
	xor.b64  	%rd13517, %rd13516, %rd13450;
	add.s64 	%rd13518, %rd13160, %rd90;
	add.s64 	%rd13519, %rd13518, %rd13426;
	add.s64 	%rd13520, %rd13519, %rd13517;
	add.s64 	%rd13521, %rd13520, %rd13514;
	add.s64 	%rd13522, %rd13521, %rd13437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26784,%dummy}, %rd13509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26785}, %rd13509;
	}
	shf.r.wrap.b32 	%r26786, %r26785, %r26784, 28;
	shf.r.wrap.b32 	%r26787, %r26784, %r26785, 28;
	mov.b64 	%rd13523, {%r26787, %r26786};
	shf.l.wrap.b32 	%r26788, %r26784, %r26785, 30;
	shf.l.wrap.b32 	%r26789, %r26785, %r26784, 30;
	mov.b64 	%rd13524, {%r26789, %r26788};
	xor.b64  	%rd13525, %rd13524, %rd13523;
	shf.l.wrap.b32 	%r26790, %r26784, %r26785, 25;
	shf.l.wrap.b32 	%r26791, %r26785, %r26784, 25;
	mov.b64 	%rd13526, {%r26791, %r26790};
	xor.b64  	%rd13527, %rd13525, %rd13526;
	and.b64  	%rd13528, %rd13509, %rd13485;
	xor.b64  	%rd13529, %rd13509, %rd13485;
	and.b64  	%rd13530, %rd13529, %rd13461;
	or.b64  	%rd13531, %rd13530, %rd13528;
	add.s64 	%rd13532, %rd13521, %rd13531;
	add.s64 	%rd13533, %rd13532, %rd13527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26792,%dummy}, %rd13522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26793}, %rd13522;
	}
	shf.r.wrap.b32 	%r26794, %r26793, %r26792, 14;
	shf.r.wrap.b32 	%r26795, %r26792, %r26793, 14;
	mov.b64 	%rd13534, {%r26795, %r26794};
	shf.r.wrap.b32 	%r26796, %r26793, %r26792, 18;
	shf.r.wrap.b32 	%r26797, %r26792, %r26793, 18;
	mov.b64 	%rd13535, {%r26797, %r26796};
	xor.b64  	%rd13536, %rd13535, %rd13534;
	shf.l.wrap.b32 	%r26798, %r26792, %r26793, 23;
	shf.l.wrap.b32 	%r26799, %r26793, %r26792, 23;
	mov.b64 	%rd13537, {%r26799, %r26798};
	xor.b64  	%rd13538, %rd13536, %rd13537;
	xor.b64  	%rd13539, %rd13498, %rd13474;
	and.b64  	%rd13540, %rd13522, %rd13539;
	xor.b64  	%rd13541, %rd13540, %rd13474;
	add.s64 	%rd13542, %rd13173, %rd91;
	add.s64 	%rd13543, %rd13542, %rd13450;
	add.s64 	%rd13544, %rd13543, %rd13541;
	add.s64 	%rd13545, %rd13544, %rd13538;
	add.s64 	%rd13546, %rd13545, %rd13461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26800,%dummy}, %rd13533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26801}, %rd13533;
	}
	shf.r.wrap.b32 	%r26802, %r26801, %r26800, 28;
	shf.r.wrap.b32 	%r26803, %r26800, %r26801, 28;
	mov.b64 	%rd13547, {%r26803, %r26802};
	shf.l.wrap.b32 	%r26804, %r26800, %r26801, 30;
	shf.l.wrap.b32 	%r26805, %r26801, %r26800, 30;
	mov.b64 	%rd13548, {%r26805, %r26804};
	xor.b64  	%rd13549, %rd13548, %rd13547;
	shf.l.wrap.b32 	%r26806, %r26800, %r26801, 25;
	shf.l.wrap.b32 	%r26807, %r26801, %r26800, 25;
	mov.b64 	%rd13550, {%r26807, %r26806};
	xor.b64  	%rd13551, %rd13549, %rd13550;
	and.b64  	%rd13552, %rd13533, %rd13509;
	xor.b64  	%rd13553, %rd13533, %rd13509;
	and.b64  	%rd13554, %rd13553, %rd13485;
	or.b64  	%rd13555, %rd13554, %rd13552;
	add.s64 	%rd13556, %rd13545, %rd13555;
	add.s64 	%rd13557, %rd13556, %rd13551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26808,%dummy}, %rd13160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26809}, %rd13160;
	}
	shf.r.wrap.b32 	%r26810, %r26809, %r26808, 19;
	shf.r.wrap.b32 	%r26811, %r26808, %r26809, 19;
	mov.b64 	%rd13558, {%r26811, %r26810};
	shf.l.wrap.b32 	%r26812, %r26808, %r26809, 3;
	shf.l.wrap.b32 	%r26813, %r26809, %r26808, 3;
	mov.b64 	%rd13559, {%r26813, %r26812};
	shr.u64 	%rd13560, %rd13160, 6;
	xor.b64  	%rd13561, %rd13558, %rd13560;
	xor.b64  	%rd13562, %rd13561, %rd13559;
	shf.r.wrap.b32 	%r26814, %r26423, %r26422, 1;
	shf.r.wrap.b32 	%r26815, %r26422, %r26423, 1;
	mov.b64 	%rd13563, {%r26815, %r26814};
	shf.r.wrap.b32 	%r26816, %r26423, %r26422, 8;
	shf.r.wrap.b32 	%r26817, %r26422, %r26423, 8;
	mov.b64 	%rd13564, {%r26817, %r26816};
	shr.u64 	%rd13565, %rd12991, 7;
	xor.b64  	%rd13566, %rd13563, %rd13565;
	xor.b64  	%rd13567, %rd13566, %rd13564;
	add.s64 	%rd13568, %rd13095, %rd12978;
	add.s64 	%rd13569, %rd13568, %rd13562;
	add.s64 	%rd13570, %rd13569, %rd13567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26818,%dummy}, %rd13173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26819}, %rd13173;
	}
	shf.r.wrap.b32 	%r26820, %r26819, %r26818, 19;
	shf.r.wrap.b32 	%r26821, %r26818, %r26819, 19;
	mov.b64 	%rd13571, {%r26821, %r26820};
	shf.l.wrap.b32 	%r26822, %r26818, %r26819, 3;
	shf.l.wrap.b32 	%r26823, %r26819, %r26818, 3;
	mov.b64 	%rd13572, {%r26823, %r26822};
	shr.u64 	%rd13573, %rd13173, 6;
	xor.b64  	%rd13574, %rd13571, %rd13573;
	xor.b64  	%rd13575, %rd13574, %rd13572;
	shf.r.wrap.b32 	%r26824, %r26433, %r26432, 1;
	shf.r.wrap.b32 	%r26825, %r26432, %r26433, 1;
	mov.b64 	%rd13576, {%r26825, %r26824};
	shf.r.wrap.b32 	%r26826, %r26433, %r26432, 8;
	shf.r.wrap.b32 	%r26827, %r26432, %r26433, 8;
	mov.b64 	%rd13577, {%r26827, %r26826};
	shr.u64 	%rd13578, %rd13004, 7;
	xor.b64  	%rd13579, %rd13576, %rd13578;
	xor.b64  	%rd13580, %rd13579, %rd13577;
	add.s64 	%rd13581, %rd13108, %rd12991;
	add.s64 	%rd13582, %rd13581, %rd13575;
	add.s64 	%rd13583, %rd13582, %rd13580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26828,%dummy}, %rd13570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26829}, %rd13570;
	}
	shf.r.wrap.b32 	%r26830, %r26829, %r26828, 19;
	shf.r.wrap.b32 	%r26831, %r26828, %r26829, 19;
	mov.b64 	%rd13584, {%r26831, %r26830};
	shf.l.wrap.b32 	%r26832, %r26828, %r26829, 3;
	shf.l.wrap.b32 	%r26833, %r26829, %r26828, 3;
	mov.b64 	%rd13585, {%r26833, %r26832};
	shr.u64 	%rd13586, %rd13570, 6;
	xor.b64  	%rd13587, %rd13584, %rd13586;
	xor.b64  	%rd13588, %rd13587, %rd13585;
	shf.r.wrap.b32 	%r26834, %r26443, %r26442, 1;
	shf.r.wrap.b32 	%r26835, %r26442, %r26443, 1;
	mov.b64 	%rd13589, {%r26835, %r26834};
	shf.r.wrap.b32 	%r26836, %r26443, %r26442, 8;
	shf.r.wrap.b32 	%r26837, %r26442, %r26443, 8;
	mov.b64 	%rd13590, {%r26837, %r26836};
	shr.u64 	%rd13591, %rd13017, 7;
	xor.b64  	%rd13592, %rd13589, %rd13591;
	xor.b64  	%rd13593, %rd13592, %rd13590;
	add.s64 	%rd13594, %rd13121, %rd13004;
	add.s64 	%rd13595, %rd13594, %rd13588;
	add.s64 	%rd13596, %rd13595, %rd13593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26838,%dummy}, %rd13583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26839}, %rd13583;
	}
	shf.r.wrap.b32 	%r26840, %r26839, %r26838, 19;
	shf.r.wrap.b32 	%r26841, %r26838, %r26839, 19;
	mov.b64 	%rd13597, {%r26841, %r26840};
	shf.l.wrap.b32 	%r26842, %r26838, %r26839, 3;
	shf.l.wrap.b32 	%r26843, %r26839, %r26838, 3;
	mov.b64 	%rd13598, {%r26843, %r26842};
	shr.u64 	%rd13599, %rd13583, 6;
	xor.b64  	%rd13600, %rd13597, %rd13599;
	xor.b64  	%rd13601, %rd13600, %rd13598;
	shf.r.wrap.b32 	%r26844, %r26453, %r26452, 1;
	shf.r.wrap.b32 	%r26845, %r26452, %r26453, 1;
	mov.b64 	%rd13602, {%r26845, %r26844};
	shf.r.wrap.b32 	%r26846, %r26453, %r26452, 8;
	shf.r.wrap.b32 	%r26847, %r26452, %r26453, 8;
	mov.b64 	%rd13603, {%r26847, %r26846};
	shr.u64 	%rd13604, %rd13030, 7;
	xor.b64  	%rd13605, %rd13602, %rd13604;
	xor.b64  	%rd13606, %rd13605, %rd13603;
	add.s64 	%rd13607, %rd13134, %rd13017;
	add.s64 	%rd13608, %rd13607, %rd13601;
	add.s64 	%rd13609, %rd13608, %rd13606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26848,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26849}, %rd13596;
	}
	shf.r.wrap.b32 	%r26850, %r26849, %r26848, 19;
	shf.r.wrap.b32 	%r26851, %r26848, %r26849, 19;
	mov.b64 	%rd13610, {%r26851, %r26850};
	shf.l.wrap.b32 	%r26852, %r26848, %r26849, 3;
	shf.l.wrap.b32 	%r26853, %r26849, %r26848, 3;
	mov.b64 	%rd13611, {%r26853, %r26852};
	shr.u64 	%rd13612, %rd13596, 6;
	xor.b64  	%rd13613, %rd13610, %rd13612;
	xor.b64  	%rd13614, %rd13613, %rd13611;
	shf.r.wrap.b32 	%r26854, %r26463, %r26462, 1;
	shf.r.wrap.b32 	%r26855, %r26462, %r26463, 1;
	mov.b64 	%rd13615, {%r26855, %r26854};
	shf.r.wrap.b32 	%r26856, %r26463, %r26462, 8;
	shf.r.wrap.b32 	%r26857, %r26462, %r26463, 8;
	mov.b64 	%rd13616, {%r26857, %r26856};
	shr.u64 	%rd13617, %rd13043, 7;
	xor.b64  	%rd13618, %rd13615, %rd13617;
	xor.b64  	%rd13619, %rd13618, %rd13616;
	add.s64 	%rd13620, %rd13147, %rd13030;
	add.s64 	%rd13621, %rd13620, %rd13614;
	add.s64 	%rd13622, %rd13621, %rd13619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26858,%dummy}, %rd13609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26859}, %rd13609;
	}
	shf.r.wrap.b32 	%r26860, %r26859, %r26858, 19;
	shf.r.wrap.b32 	%r26861, %r26858, %r26859, 19;
	mov.b64 	%rd13623, {%r26861, %r26860};
	shf.l.wrap.b32 	%r26862, %r26858, %r26859, 3;
	shf.l.wrap.b32 	%r26863, %r26859, %r26858, 3;
	mov.b64 	%rd13624, {%r26863, %r26862};
	shr.u64 	%rd13625, %rd13609, 6;
	xor.b64  	%rd13626, %rd13623, %rd13625;
	xor.b64  	%rd13627, %rd13626, %rd13624;
	shf.r.wrap.b32 	%r26864, %r26473, %r26472, 1;
	shf.r.wrap.b32 	%r26865, %r26472, %r26473, 1;
	mov.b64 	%rd13628, {%r26865, %r26864};
	shf.r.wrap.b32 	%r26866, %r26473, %r26472, 8;
	shf.r.wrap.b32 	%r26867, %r26472, %r26473, 8;
	mov.b64 	%rd13629, {%r26867, %r26866};
	shr.u64 	%rd13630, %rd13056, 7;
	xor.b64  	%rd13631, %rd13628, %rd13630;
	xor.b64  	%rd13632, %rd13631, %rd13629;
	add.s64 	%rd13633, %rd13160, %rd13043;
	add.s64 	%rd13634, %rd13633, %rd13627;
	add.s64 	%rd13635, %rd13634, %rd13632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26868,%dummy}, %rd13622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26869}, %rd13622;
	}
	shf.r.wrap.b32 	%r26870, %r26869, %r26868, 19;
	shf.r.wrap.b32 	%r26871, %r26868, %r26869, 19;
	mov.b64 	%rd13636, {%r26871, %r26870};
	shf.l.wrap.b32 	%r26872, %r26868, %r26869, 3;
	shf.l.wrap.b32 	%r26873, %r26869, %r26868, 3;
	mov.b64 	%rd13637, {%r26873, %r26872};
	shr.u64 	%rd13638, %rd13622, 6;
	xor.b64  	%rd13639, %rd13636, %rd13638;
	xor.b64  	%rd13640, %rd13639, %rd13637;
	shf.r.wrap.b32 	%r26874, %r26483, %r26482, 1;
	shf.r.wrap.b32 	%r26875, %r26482, %r26483, 1;
	mov.b64 	%rd13641, {%r26875, %r26874};
	shf.r.wrap.b32 	%r26876, %r26483, %r26482, 8;
	shf.r.wrap.b32 	%r26877, %r26482, %r26483, 8;
	mov.b64 	%rd13642, {%r26877, %r26876};
	shr.u64 	%rd13643, %rd13069, 7;
	xor.b64  	%rd13644, %rd13641, %rd13643;
	xor.b64  	%rd13645, %rd13644, %rd13642;
	add.s64 	%rd13646, %rd13173, %rd13056;
	add.s64 	%rd13647, %rd13646, %rd13640;
	add.s64 	%rd13648, %rd13647, %rd13645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26878,%dummy}, %rd13635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26879}, %rd13635;
	}
	shf.r.wrap.b32 	%r26880, %r26879, %r26878, 19;
	shf.r.wrap.b32 	%r26881, %r26878, %r26879, 19;
	mov.b64 	%rd13649, {%r26881, %r26880};
	shf.l.wrap.b32 	%r26882, %r26878, %r26879, 3;
	shf.l.wrap.b32 	%r26883, %r26879, %r26878, 3;
	mov.b64 	%rd13650, {%r26883, %r26882};
	shr.u64 	%rd13651, %rd13635, 6;
	xor.b64  	%rd13652, %rd13649, %rd13651;
	xor.b64  	%rd13653, %rd13652, %rd13650;
	shf.r.wrap.b32 	%r26884, %r26493, %r26492, 1;
	shf.r.wrap.b32 	%r26885, %r26492, %r26493, 1;
	mov.b64 	%rd13654, {%r26885, %r26884};
	shf.r.wrap.b32 	%r26886, %r26493, %r26492, 8;
	shf.r.wrap.b32 	%r26887, %r26492, %r26493, 8;
	mov.b64 	%rd13655, {%r26887, %r26886};
	shr.u64 	%rd13656, %rd13082, 7;
	xor.b64  	%rd13657, %rd13654, %rd13656;
	xor.b64  	%rd13658, %rd13657, %rd13655;
	add.s64 	%rd13659, %rd13570, %rd13069;
	add.s64 	%rd13660, %rd13659, %rd13653;
	add.s64 	%rd13661, %rd13660, %rd13658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26888,%dummy}, %rd13648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26889}, %rd13648;
	}
	shf.r.wrap.b32 	%r26890, %r26889, %r26888, 19;
	shf.r.wrap.b32 	%r26891, %r26888, %r26889, 19;
	mov.b64 	%rd13662, {%r26891, %r26890};
	shf.l.wrap.b32 	%r26892, %r26888, %r26889, 3;
	shf.l.wrap.b32 	%r26893, %r26889, %r26888, 3;
	mov.b64 	%rd13663, {%r26893, %r26892};
	shr.u64 	%rd13664, %rd13648, 6;
	xor.b64  	%rd13665, %rd13662, %rd13664;
	xor.b64  	%rd13666, %rd13665, %rd13663;
	shf.r.wrap.b32 	%r26894, %r26503, %r26502, 1;
	shf.r.wrap.b32 	%r26895, %r26502, %r26503, 1;
	mov.b64 	%rd13667, {%r26895, %r26894};
	shf.r.wrap.b32 	%r26896, %r26503, %r26502, 8;
	shf.r.wrap.b32 	%r26897, %r26502, %r26503, 8;
	mov.b64 	%rd13668, {%r26897, %r26896};
	shr.u64 	%rd13669, %rd13095, 7;
	xor.b64  	%rd13670, %rd13667, %rd13669;
	xor.b64  	%rd13671, %rd13670, %rd13668;
	add.s64 	%rd13672, %rd13583, %rd13082;
	add.s64 	%rd13673, %rd13672, %rd13666;
	add.s64 	%rd13674, %rd13673, %rd13671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26898,%dummy}, %rd13661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26899}, %rd13661;
	}
	shf.r.wrap.b32 	%r26900, %r26899, %r26898, 19;
	shf.r.wrap.b32 	%r26901, %r26898, %r26899, 19;
	mov.b64 	%rd13675, {%r26901, %r26900};
	shf.l.wrap.b32 	%r26902, %r26898, %r26899, 3;
	shf.l.wrap.b32 	%r26903, %r26899, %r26898, 3;
	mov.b64 	%rd13676, {%r26903, %r26902};
	shr.u64 	%rd13677, %rd13661, 6;
	xor.b64  	%rd13678, %rd13675, %rd13677;
	xor.b64  	%rd13679, %rd13678, %rd13676;
	shf.r.wrap.b32 	%r26904, %r26513, %r26512, 1;
	shf.r.wrap.b32 	%r26905, %r26512, %r26513, 1;
	mov.b64 	%rd13680, {%r26905, %r26904};
	shf.r.wrap.b32 	%r26906, %r26513, %r26512, 8;
	shf.r.wrap.b32 	%r26907, %r26512, %r26513, 8;
	mov.b64 	%rd13681, {%r26907, %r26906};
	shr.u64 	%rd13682, %rd13108, 7;
	xor.b64  	%rd13683, %rd13680, %rd13682;
	xor.b64  	%rd13684, %rd13683, %rd13681;
	add.s64 	%rd13685, %rd13596, %rd13095;
	add.s64 	%rd13686, %rd13685, %rd13679;
	add.s64 	%rd13687, %rd13686, %rd13684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26908,%dummy}, %rd13674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26909}, %rd13674;
	}
	shf.r.wrap.b32 	%r26910, %r26909, %r26908, 19;
	shf.r.wrap.b32 	%r26911, %r26908, %r26909, 19;
	mov.b64 	%rd13688, {%r26911, %r26910};
	shf.l.wrap.b32 	%r26912, %r26908, %r26909, 3;
	shf.l.wrap.b32 	%r26913, %r26909, %r26908, 3;
	mov.b64 	%rd13689, {%r26913, %r26912};
	shr.u64 	%rd13690, %rd13674, 6;
	xor.b64  	%rd13691, %rd13688, %rd13690;
	xor.b64  	%rd13692, %rd13691, %rd13689;
	shf.r.wrap.b32 	%r26914, %r26523, %r26522, 1;
	shf.r.wrap.b32 	%r26915, %r26522, %r26523, 1;
	mov.b64 	%rd13693, {%r26915, %r26914};
	shf.r.wrap.b32 	%r26916, %r26523, %r26522, 8;
	shf.r.wrap.b32 	%r26917, %r26522, %r26523, 8;
	mov.b64 	%rd13694, {%r26917, %r26916};
	shr.u64 	%rd13695, %rd13121, 7;
	xor.b64  	%rd13696, %rd13693, %rd13695;
	xor.b64  	%rd13697, %rd13696, %rd13694;
	add.s64 	%rd13698, %rd13609, %rd13108;
	add.s64 	%rd13699, %rd13698, %rd13692;
	add.s64 	%rd13700, %rd13699, %rd13697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26918,%dummy}, %rd13687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26919}, %rd13687;
	}
	shf.r.wrap.b32 	%r26920, %r26919, %r26918, 19;
	shf.r.wrap.b32 	%r26921, %r26918, %r26919, 19;
	mov.b64 	%rd13701, {%r26921, %r26920};
	shf.l.wrap.b32 	%r26922, %r26918, %r26919, 3;
	shf.l.wrap.b32 	%r26923, %r26919, %r26918, 3;
	mov.b64 	%rd13702, {%r26923, %r26922};
	shr.u64 	%rd13703, %rd13687, 6;
	xor.b64  	%rd13704, %rd13701, %rd13703;
	xor.b64  	%rd13705, %rd13704, %rd13702;
	shf.r.wrap.b32 	%r26924, %r26533, %r26532, 1;
	shf.r.wrap.b32 	%r26925, %r26532, %r26533, 1;
	mov.b64 	%rd13706, {%r26925, %r26924};
	shf.r.wrap.b32 	%r26926, %r26533, %r26532, 8;
	shf.r.wrap.b32 	%r26927, %r26532, %r26533, 8;
	mov.b64 	%rd13707, {%r26927, %r26926};
	shr.u64 	%rd13708, %rd13134, 7;
	xor.b64  	%rd13709, %rd13706, %rd13708;
	xor.b64  	%rd13710, %rd13709, %rd13707;
	add.s64 	%rd13711, %rd13622, %rd13121;
	add.s64 	%rd13712, %rd13711, %rd13705;
	add.s64 	%rd13713, %rd13712, %rd13710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26928,%dummy}, %rd13700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26929}, %rd13700;
	}
	shf.r.wrap.b32 	%r26930, %r26929, %r26928, 19;
	shf.r.wrap.b32 	%r26931, %r26928, %r26929, 19;
	mov.b64 	%rd13714, {%r26931, %r26930};
	shf.l.wrap.b32 	%r26932, %r26928, %r26929, 3;
	shf.l.wrap.b32 	%r26933, %r26929, %r26928, 3;
	mov.b64 	%rd13715, {%r26933, %r26932};
	shr.u64 	%rd13716, %rd13700, 6;
	xor.b64  	%rd13717, %rd13714, %rd13716;
	xor.b64  	%rd13718, %rd13717, %rd13715;
	shf.r.wrap.b32 	%r26934, %r26543, %r26542, 1;
	shf.r.wrap.b32 	%r26935, %r26542, %r26543, 1;
	mov.b64 	%rd13719, {%r26935, %r26934};
	shf.r.wrap.b32 	%r26936, %r26543, %r26542, 8;
	shf.r.wrap.b32 	%r26937, %r26542, %r26543, 8;
	mov.b64 	%rd13720, {%r26937, %r26936};
	shr.u64 	%rd13721, %rd13147, 7;
	xor.b64  	%rd13722, %rd13719, %rd13721;
	xor.b64  	%rd13723, %rd13722, %rd13720;
	add.s64 	%rd13724, %rd13635, %rd13134;
	add.s64 	%rd13725, %rd13724, %rd13718;
	add.s64 	%rd13726, %rd13725, %rd13723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26938,%dummy}, %rd13713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26939}, %rd13713;
	}
	shf.r.wrap.b32 	%r26940, %r26939, %r26938, 19;
	shf.r.wrap.b32 	%r26941, %r26938, %r26939, 19;
	mov.b64 	%rd13727, {%r26941, %r26940};
	shf.l.wrap.b32 	%r26942, %r26938, %r26939, 3;
	shf.l.wrap.b32 	%r26943, %r26939, %r26938, 3;
	mov.b64 	%rd13728, {%r26943, %r26942};
	shr.u64 	%rd13729, %rd13713, 6;
	xor.b64  	%rd13730, %rd13727, %rd13729;
	xor.b64  	%rd13731, %rd13730, %rd13728;
	shf.r.wrap.b32 	%r26944, %r26809, %r26808, 1;
	shf.r.wrap.b32 	%r26945, %r26808, %r26809, 1;
	mov.b64 	%rd13732, {%r26945, %r26944};
	shf.r.wrap.b32 	%r26946, %r26809, %r26808, 8;
	shf.r.wrap.b32 	%r26947, %r26808, %r26809, 8;
	mov.b64 	%rd13733, {%r26947, %r26946};
	shr.u64 	%rd13734, %rd13160, 7;
	xor.b64  	%rd13735, %rd13732, %rd13734;
	xor.b64  	%rd13736, %rd13735, %rd13733;
	add.s64 	%rd13737, %rd13648, %rd13147;
	add.s64 	%rd13738, %rd13737, %rd13731;
	add.s64 	%rd13739, %rd13738, %rd13736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26948,%dummy}, %rd13726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26949}, %rd13726;
	}
	shf.r.wrap.b32 	%r26950, %r26949, %r26948, 19;
	shf.r.wrap.b32 	%r26951, %r26948, %r26949, 19;
	mov.b64 	%rd13740, {%r26951, %r26950};
	shf.l.wrap.b32 	%r26952, %r26948, %r26949, 3;
	shf.l.wrap.b32 	%r26953, %r26949, %r26948, 3;
	mov.b64 	%rd13741, {%r26953, %r26952};
	shr.u64 	%rd13742, %rd13726, 6;
	xor.b64  	%rd13743, %rd13740, %rd13742;
	xor.b64  	%rd13744, %rd13743, %rd13741;
	shf.r.wrap.b32 	%r26954, %r26819, %r26818, 1;
	shf.r.wrap.b32 	%r26955, %r26818, %r26819, 1;
	mov.b64 	%rd13745, {%r26955, %r26954};
	shf.r.wrap.b32 	%r26956, %r26819, %r26818, 8;
	shf.r.wrap.b32 	%r26957, %r26818, %r26819, 8;
	mov.b64 	%rd13746, {%r26957, %r26956};
	shr.u64 	%rd13747, %rd13173, 7;
	xor.b64  	%rd13748, %rd13745, %rd13747;
	xor.b64  	%rd13749, %rd13748, %rd13746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26958,%dummy}, %rd13739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26959}, %rd13739;
	}
	shf.r.wrap.b32 	%r26960, %r26959, %r26958, 19;
	shf.r.wrap.b32 	%r26961, %r26958, %r26959, 19;
	mov.b64 	%rd13750, {%r26961, %r26960};
	shf.l.wrap.b32 	%r26962, %r26958, %r26959, 3;
	shf.l.wrap.b32 	%r26963, %r26959, %r26958, 3;
	mov.b64 	%rd13751, {%r26963, %r26962};
	shr.u64 	%rd13752, %rd13739, 6;
	xor.b64  	%rd13753, %rd13750, %rd13752;
	xor.b64  	%rd13754, %rd13753, %rd13751;
	shf.r.wrap.b32 	%r26964, %r26829, %r26828, 1;
	shf.r.wrap.b32 	%r26965, %r26828, %r26829, 1;
	mov.b64 	%rd13755, {%r26965, %r26964};
	shf.r.wrap.b32 	%r26966, %r26829, %r26828, 8;
	shf.r.wrap.b32 	%r26967, %r26828, %r26829, 8;
	mov.b64 	%rd13756, {%r26967, %r26966};
	shr.u64 	%rd13757, %rd13570, 7;
	xor.b64  	%rd13758, %rd13755, %rd13757;
	xor.b64  	%rd13759, %rd13758, %rd13756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26968,%dummy}, %rd13546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26969}, %rd13546;
	}
	shf.r.wrap.b32 	%r26970, %r26969, %r26968, 14;
	shf.r.wrap.b32 	%r26971, %r26968, %r26969, 14;
	mov.b64 	%rd13760, {%r26971, %r26970};
	shf.r.wrap.b32 	%r26972, %r26969, %r26968, 18;
	shf.r.wrap.b32 	%r26973, %r26968, %r26969, 18;
	mov.b64 	%rd13761, {%r26973, %r26972};
	xor.b64  	%rd13762, %rd13761, %rd13760;
	shf.l.wrap.b32 	%r26974, %r26968, %r26969, 23;
	shf.l.wrap.b32 	%r26975, %r26969, %r26968, 23;
	mov.b64 	%rd13763, {%r26975, %r26974};
	xor.b64  	%rd13764, %rd13762, %rd13763;
	xor.b64  	%rd13765, %rd13522, %rd13498;
	and.b64  	%rd13766, %rd13546, %rd13765;
	xor.b64  	%rd13767, %rd13766, %rd13498;
	add.s64 	%rd13768, %rd13474, %rd92;
	add.s64 	%rd13769, %rd13768, %rd13767;
	add.s64 	%rd13770, %rd13769, %rd13570;
	add.s64 	%rd13771, %rd13770, %rd13764;
	add.s64 	%rd13772, %rd13771, %rd13485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26976,%dummy}, %rd13557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26977}, %rd13557;
	}
	shf.r.wrap.b32 	%r26978, %r26977, %r26976, 28;
	shf.r.wrap.b32 	%r26979, %r26976, %r26977, 28;
	mov.b64 	%rd13773, {%r26979, %r26978};
	shf.l.wrap.b32 	%r26980, %r26976, %r26977, 30;
	shf.l.wrap.b32 	%r26981, %r26977, %r26976, 30;
	mov.b64 	%rd13774, {%r26981, %r26980};
	xor.b64  	%rd13775, %rd13774, %rd13773;
	shf.l.wrap.b32 	%r26982, %r26976, %r26977, 25;
	shf.l.wrap.b32 	%r26983, %r26977, %r26976, 25;
	mov.b64 	%rd13776, {%r26983, %r26982};
	xor.b64  	%rd13777, %rd13775, %rd13776;
	and.b64  	%rd13778, %rd13557, %rd13533;
	xor.b64  	%rd13779, %rd13557, %rd13533;
	and.b64  	%rd13780, %rd13779, %rd13509;
	or.b64  	%rd13781, %rd13780, %rd13778;
	add.s64 	%rd13782, %rd13771, %rd13781;
	add.s64 	%rd13783, %rd13782, %rd13777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26984,%dummy}, %rd13772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26985}, %rd13772;
	}
	shf.r.wrap.b32 	%r26986, %r26985, %r26984, 14;
	shf.r.wrap.b32 	%r26987, %r26984, %r26985, 14;
	mov.b64 	%rd13784, {%r26987, %r26986};
	shf.r.wrap.b32 	%r26988, %r26985, %r26984, 18;
	shf.r.wrap.b32 	%r26989, %r26984, %r26985, 18;
	mov.b64 	%rd13785, {%r26989, %r26988};
	xor.b64  	%rd13786, %rd13785, %rd13784;
	shf.l.wrap.b32 	%r26990, %r26984, %r26985, 23;
	shf.l.wrap.b32 	%r26991, %r26985, %r26984, 23;
	mov.b64 	%rd13787, {%r26991, %r26990};
	xor.b64  	%rd13788, %rd13786, %rd13787;
	xor.b64  	%rd13789, %rd13546, %rd13522;
	and.b64  	%rd13790, %rd13772, %rd13789;
	xor.b64  	%rd13791, %rd13790, %rd13522;
	add.s64 	%rd13792, %rd13498, %rd93;
	add.s64 	%rd13793, %rd13792, %rd13583;
	add.s64 	%rd13794, %rd13793, %rd13791;
	add.s64 	%rd13795, %rd13794, %rd13788;
	add.s64 	%rd13796, %rd13795, %rd13509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26992,%dummy}, %rd13783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26993}, %rd13783;
	}
	shf.r.wrap.b32 	%r26994, %r26993, %r26992, 28;
	shf.r.wrap.b32 	%r26995, %r26992, %r26993, 28;
	mov.b64 	%rd13797, {%r26995, %r26994};
	shf.l.wrap.b32 	%r26996, %r26992, %r26993, 30;
	shf.l.wrap.b32 	%r26997, %r26993, %r26992, 30;
	mov.b64 	%rd13798, {%r26997, %r26996};
	xor.b64  	%rd13799, %rd13798, %rd13797;
	shf.l.wrap.b32 	%r26998, %r26992, %r26993, 25;
	shf.l.wrap.b32 	%r26999, %r26993, %r26992, 25;
	mov.b64 	%rd13800, {%r26999, %r26998};
	xor.b64  	%rd13801, %rd13799, %rd13800;
	and.b64  	%rd13802, %rd13783, %rd13557;
	xor.b64  	%rd13803, %rd13783, %rd13557;
	and.b64  	%rd13804, %rd13803, %rd13533;
	or.b64  	%rd13805, %rd13804, %rd13802;
	add.s64 	%rd13806, %rd13795, %rd13805;
	add.s64 	%rd13807, %rd13806, %rd13801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27000,%dummy}, %rd13796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27001}, %rd13796;
	}
	shf.r.wrap.b32 	%r27002, %r27001, %r27000, 14;
	shf.r.wrap.b32 	%r27003, %r27000, %r27001, 14;
	mov.b64 	%rd13808, {%r27003, %r27002};
	shf.r.wrap.b32 	%r27004, %r27001, %r27000, 18;
	shf.r.wrap.b32 	%r27005, %r27000, %r27001, 18;
	mov.b64 	%rd13809, {%r27005, %r27004};
	xor.b64  	%rd13810, %rd13809, %rd13808;
	shf.l.wrap.b32 	%r27006, %r27000, %r27001, 23;
	shf.l.wrap.b32 	%r27007, %r27001, %r27000, 23;
	mov.b64 	%rd13811, {%r27007, %r27006};
	xor.b64  	%rd13812, %rd13810, %rd13811;
	xor.b64  	%rd13813, %rd13772, %rd13546;
	and.b64  	%rd13814, %rd13796, %rd13813;
	xor.b64  	%rd13815, %rd13814, %rd13546;
	add.s64 	%rd13816, %rd13522, %rd94;
	add.s64 	%rd13817, %rd13816, %rd13596;
	add.s64 	%rd13818, %rd13817, %rd13815;
	add.s64 	%rd13819, %rd13818, %rd13812;
	add.s64 	%rd13820, %rd13819, %rd13533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27008,%dummy}, %rd13807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27009}, %rd13807;
	}
	shf.r.wrap.b32 	%r27010, %r27009, %r27008, 28;
	shf.r.wrap.b32 	%r27011, %r27008, %r27009, 28;
	mov.b64 	%rd13821, {%r27011, %r27010};
	shf.l.wrap.b32 	%r27012, %r27008, %r27009, 30;
	shf.l.wrap.b32 	%r27013, %r27009, %r27008, 30;
	mov.b64 	%rd13822, {%r27013, %r27012};
	xor.b64  	%rd13823, %rd13822, %rd13821;
	shf.l.wrap.b32 	%r27014, %r27008, %r27009, 25;
	shf.l.wrap.b32 	%r27015, %r27009, %r27008, 25;
	mov.b64 	%rd13824, {%r27015, %r27014};
	xor.b64  	%rd13825, %rd13823, %rd13824;
	and.b64  	%rd13826, %rd13807, %rd13783;
	xor.b64  	%rd13827, %rd13807, %rd13783;
	and.b64  	%rd13828, %rd13827, %rd13557;
	or.b64  	%rd13829, %rd13828, %rd13826;
	add.s64 	%rd13830, %rd13819, %rd13829;
	add.s64 	%rd13831, %rd13830, %rd13825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27016,%dummy}, %rd13820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27017}, %rd13820;
	}
	shf.r.wrap.b32 	%r27018, %r27017, %r27016, 14;
	shf.r.wrap.b32 	%r27019, %r27016, %r27017, 14;
	mov.b64 	%rd13832, {%r27019, %r27018};
	shf.r.wrap.b32 	%r27020, %r27017, %r27016, 18;
	shf.r.wrap.b32 	%r27021, %r27016, %r27017, 18;
	mov.b64 	%rd13833, {%r27021, %r27020};
	xor.b64  	%rd13834, %rd13833, %rd13832;
	shf.l.wrap.b32 	%r27022, %r27016, %r27017, 23;
	shf.l.wrap.b32 	%r27023, %r27017, %r27016, 23;
	mov.b64 	%rd13835, {%r27023, %r27022};
	xor.b64  	%rd13836, %rd13834, %rd13835;
	xor.b64  	%rd13837, %rd13796, %rd13772;
	and.b64  	%rd13838, %rd13820, %rd13837;
	xor.b64  	%rd13839, %rd13838, %rd13772;
	add.s64 	%rd13840, %rd13546, %rd95;
	add.s64 	%rd13841, %rd13840, %rd13609;
	add.s64 	%rd13842, %rd13841, %rd13839;
	add.s64 	%rd13843, %rd13842, %rd13836;
	add.s64 	%rd13844, %rd13843, %rd13557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27024,%dummy}, %rd13831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27025}, %rd13831;
	}
	shf.r.wrap.b32 	%r27026, %r27025, %r27024, 28;
	shf.r.wrap.b32 	%r27027, %r27024, %r27025, 28;
	mov.b64 	%rd13845, {%r27027, %r27026};
	shf.l.wrap.b32 	%r27028, %r27024, %r27025, 30;
	shf.l.wrap.b32 	%r27029, %r27025, %r27024, 30;
	mov.b64 	%rd13846, {%r27029, %r27028};
	xor.b64  	%rd13847, %rd13846, %rd13845;
	shf.l.wrap.b32 	%r27030, %r27024, %r27025, 25;
	shf.l.wrap.b32 	%r27031, %r27025, %r27024, 25;
	mov.b64 	%rd13848, {%r27031, %r27030};
	xor.b64  	%rd13849, %rd13847, %rd13848;
	and.b64  	%rd13850, %rd13831, %rd13807;
	xor.b64  	%rd13851, %rd13831, %rd13807;
	and.b64  	%rd13852, %rd13851, %rd13783;
	or.b64  	%rd13853, %rd13852, %rd13850;
	add.s64 	%rd13854, %rd13843, %rd13853;
	add.s64 	%rd13855, %rd13854, %rd13849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27032,%dummy}, %rd13844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27033}, %rd13844;
	}
	shf.r.wrap.b32 	%r27034, %r27033, %r27032, 14;
	shf.r.wrap.b32 	%r27035, %r27032, %r27033, 14;
	mov.b64 	%rd13856, {%r27035, %r27034};
	shf.r.wrap.b32 	%r27036, %r27033, %r27032, 18;
	shf.r.wrap.b32 	%r27037, %r27032, %r27033, 18;
	mov.b64 	%rd13857, {%r27037, %r27036};
	xor.b64  	%rd13858, %rd13857, %rd13856;
	shf.l.wrap.b32 	%r27038, %r27032, %r27033, 23;
	shf.l.wrap.b32 	%r27039, %r27033, %r27032, 23;
	mov.b64 	%rd13859, {%r27039, %r27038};
	xor.b64  	%rd13860, %rd13858, %rd13859;
	xor.b64  	%rd13861, %rd13820, %rd13796;
	and.b64  	%rd13862, %rd13844, %rd13861;
	xor.b64  	%rd13863, %rd13862, %rd13796;
	add.s64 	%rd13864, %rd13622, %rd96;
	add.s64 	%rd13865, %rd13864, %rd13772;
	add.s64 	%rd13866, %rd13865, %rd13863;
	add.s64 	%rd13867, %rd13866, %rd13860;
	add.s64 	%rd13868, %rd13867, %rd13783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27040,%dummy}, %rd13855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27041}, %rd13855;
	}
	shf.r.wrap.b32 	%r27042, %r27041, %r27040, 28;
	shf.r.wrap.b32 	%r27043, %r27040, %r27041, 28;
	mov.b64 	%rd13869, {%r27043, %r27042};
	shf.l.wrap.b32 	%r27044, %r27040, %r27041, 30;
	shf.l.wrap.b32 	%r27045, %r27041, %r27040, 30;
	mov.b64 	%rd13870, {%r27045, %r27044};
	xor.b64  	%rd13871, %rd13870, %rd13869;
	shf.l.wrap.b32 	%r27046, %r27040, %r27041, 25;
	shf.l.wrap.b32 	%r27047, %r27041, %r27040, 25;
	mov.b64 	%rd13872, {%r27047, %r27046};
	xor.b64  	%rd13873, %rd13871, %rd13872;
	and.b64  	%rd13874, %rd13855, %rd13831;
	xor.b64  	%rd13875, %rd13855, %rd13831;
	and.b64  	%rd13876, %rd13875, %rd13807;
	or.b64  	%rd13877, %rd13876, %rd13874;
	add.s64 	%rd13878, %rd13867, %rd13877;
	add.s64 	%rd13879, %rd13878, %rd13873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27048,%dummy}, %rd13868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27049}, %rd13868;
	}
	shf.r.wrap.b32 	%r27050, %r27049, %r27048, 14;
	shf.r.wrap.b32 	%r27051, %r27048, %r27049, 14;
	mov.b64 	%rd13880, {%r27051, %r27050};
	shf.r.wrap.b32 	%r27052, %r27049, %r27048, 18;
	shf.r.wrap.b32 	%r27053, %r27048, %r27049, 18;
	mov.b64 	%rd13881, {%r27053, %r27052};
	xor.b64  	%rd13882, %rd13881, %rd13880;
	shf.l.wrap.b32 	%r27054, %r27048, %r27049, 23;
	shf.l.wrap.b32 	%r27055, %r27049, %r27048, 23;
	mov.b64 	%rd13883, {%r27055, %r27054};
	xor.b64  	%rd13884, %rd13882, %rd13883;
	xor.b64  	%rd13885, %rd13844, %rd13820;
	and.b64  	%rd13886, %rd13868, %rd13885;
	xor.b64  	%rd13887, %rd13886, %rd13820;
	add.s64 	%rd13888, %rd13635, %rd97;
	add.s64 	%rd13889, %rd13888, %rd13796;
	add.s64 	%rd13890, %rd13889, %rd13887;
	add.s64 	%rd13891, %rd13890, %rd13884;
	add.s64 	%rd13892, %rd13891, %rd13807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27056,%dummy}, %rd13879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27057}, %rd13879;
	}
	shf.r.wrap.b32 	%r27058, %r27057, %r27056, 28;
	shf.r.wrap.b32 	%r27059, %r27056, %r27057, 28;
	mov.b64 	%rd13893, {%r27059, %r27058};
	shf.l.wrap.b32 	%r27060, %r27056, %r27057, 30;
	shf.l.wrap.b32 	%r27061, %r27057, %r27056, 30;
	mov.b64 	%rd13894, {%r27061, %r27060};
	xor.b64  	%rd13895, %rd13894, %rd13893;
	shf.l.wrap.b32 	%r27062, %r27056, %r27057, 25;
	shf.l.wrap.b32 	%r27063, %r27057, %r27056, 25;
	mov.b64 	%rd13896, {%r27063, %r27062};
	xor.b64  	%rd13897, %rd13895, %rd13896;
	and.b64  	%rd13898, %rd13879, %rd13855;
	xor.b64  	%rd13899, %rd13879, %rd13855;
	and.b64  	%rd13900, %rd13899, %rd13831;
	or.b64  	%rd13901, %rd13900, %rd13898;
	add.s64 	%rd13902, %rd13891, %rd13901;
	add.s64 	%rd13903, %rd13902, %rd13897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27064,%dummy}, %rd13892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27065}, %rd13892;
	}
	shf.r.wrap.b32 	%r27066, %r27065, %r27064, 14;
	shf.r.wrap.b32 	%r27067, %r27064, %r27065, 14;
	mov.b64 	%rd13904, {%r27067, %r27066};
	shf.r.wrap.b32 	%r27068, %r27065, %r27064, 18;
	shf.r.wrap.b32 	%r27069, %r27064, %r27065, 18;
	mov.b64 	%rd13905, {%r27069, %r27068};
	xor.b64  	%rd13906, %rd13905, %rd13904;
	shf.l.wrap.b32 	%r27070, %r27064, %r27065, 23;
	shf.l.wrap.b32 	%r27071, %r27065, %r27064, 23;
	mov.b64 	%rd13907, {%r27071, %r27070};
	xor.b64  	%rd13908, %rd13906, %rd13907;
	xor.b64  	%rd13909, %rd13868, %rd13844;
	and.b64  	%rd13910, %rd13892, %rd13909;
	xor.b64  	%rd13911, %rd13910, %rd13844;
	add.s64 	%rd13912, %rd13648, %rd98;
	add.s64 	%rd13913, %rd13912, %rd13820;
	add.s64 	%rd13914, %rd13913, %rd13911;
	add.s64 	%rd13915, %rd13914, %rd13908;
	add.s64 	%rd13916, %rd13915, %rd13831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27072,%dummy}, %rd13903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27073}, %rd13903;
	}
	shf.r.wrap.b32 	%r27074, %r27073, %r27072, 28;
	shf.r.wrap.b32 	%r27075, %r27072, %r27073, 28;
	mov.b64 	%rd13917, {%r27075, %r27074};
	shf.l.wrap.b32 	%r27076, %r27072, %r27073, 30;
	shf.l.wrap.b32 	%r27077, %r27073, %r27072, 30;
	mov.b64 	%rd13918, {%r27077, %r27076};
	xor.b64  	%rd13919, %rd13918, %rd13917;
	shf.l.wrap.b32 	%r27078, %r27072, %r27073, 25;
	shf.l.wrap.b32 	%r27079, %r27073, %r27072, 25;
	mov.b64 	%rd13920, {%r27079, %r27078};
	xor.b64  	%rd13921, %rd13919, %rd13920;
	and.b64  	%rd13922, %rd13903, %rd13879;
	xor.b64  	%rd13923, %rd13903, %rd13879;
	and.b64  	%rd13924, %rd13923, %rd13855;
	or.b64  	%rd13925, %rd13924, %rd13922;
	add.s64 	%rd13926, %rd13915, %rd13925;
	add.s64 	%rd13927, %rd13926, %rd13921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27080,%dummy}, %rd13916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27081}, %rd13916;
	}
	shf.r.wrap.b32 	%r27082, %r27081, %r27080, 14;
	shf.r.wrap.b32 	%r27083, %r27080, %r27081, 14;
	mov.b64 	%rd13928, {%r27083, %r27082};
	shf.r.wrap.b32 	%r27084, %r27081, %r27080, 18;
	shf.r.wrap.b32 	%r27085, %r27080, %r27081, 18;
	mov.b64 	%rd13929, {%r27085, %r27084};
	xor.b64  	%rd13930, %rd13929, %rd13928;
	shf.l.wrap.b32 	%r27086, %r27080, %r27081, 23;
	shf.l.wrap.b32 	%r27087, %r27081, %r27080, 23;
	mov.b64 	%rd13931, {%r27087, %r27086};
	xor.b64  	%rd13932, %rd13930, %rd13931;
	xor.b64  	%rd13933, %rd13892, %rd13868;
	and.b64  	%rd13934, %rd13916, %rd13933;
	xor.b64  	%rd13935, %rd13934, %rd13868;
	add.s64 	%rd13936, %rd13661, %rd99;
	add.s64 	%rd13937, %rd13936, %rd13844;
	add.s64 	%rd13938, %rd13937, %rd13935;
	add.s64 	%rd13939, %rd13938, %rd13932;
	add.s64 	%rd13940, %rd13939, %rd13855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27088,%dummy}, %rd13927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27089}, %rd13927;
	}
	shf.r.wrap.b32 	%r27090, %r27089, %r27088, 28;
	shf.r.wrap.b32 	%r27091, %r27088, %r27089, 28;
	mov.b64 	%rd13941, {%r27091, %r27090};
	shf.l.wrap.b32 	%r27092, %r27088, %r27089, 30;
	shf.l.wrap.b32 	%r27093, %r27089, %r27088, 30;
	mov.b64 	%rd13942, {%r27093, %r27092};
	xor.b64  	%rd13943, %rd13942, %rd13941;
	shf.l.wrap.b32 	%r27094, %r27088, %r27089, 25;
	shf.l.wrap.b32 	%r27095, %r27089, %r27088, 25;
	mov.b64 	%rd13944, {%r27095, %r27094};
	xor.b64  	%rd13945, %rd13943, %rd13944;
	and.b64  	%rd13946, %rd13927, %rd13903;
	xor.b64  	%rd13947, %rd13927, %rd13903;
	and.b64  	%rd13948, %rd13947, %rd13879;
	or.b64  	%rd13949, %rd13948, %rd13946;
	add.s64 	%rd13950, %rd13939, %rd13949;
	add.s64 	%rd13951, %rd13950, %rd13945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27096,%dummy}, %rd13940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27097}, %rd13940;
	}
	shf.r.wrap.b32 	%r27098, %r27097, %r27096, 14;
	shf.r.wrap.b32 	%r27099, %r27096, %r27097, 14;
	mov.b64 	%rd13952, {%r27099, %r27098};
	shf.r.wrap.b32 	%r27100, %r27097, %r27096, 18;
	shf.r.wrap.b32 	%r27101, %r27096, %r27097, 18;
	mov.b64 	%rd13953, {%r27101, %r27100};
	xor.b64  	%rd13954, %rd13953, %rd13952;
	shf.l.wrap.b32 	%r27102, %r27096, %r27097, 23;
	shf.l.wrap.b32 	%r27103, %r27097, %r27096, 23;
	mov.b64 	%rd13955, {%r27103, %r27102};
	xor.b64  	%rd13956, %rd13954, %rd13955;
	xor.b64  	%rd13957, %rd13916, %rd13892;
	and.b64  	%rd13958, %rd13940, %rd13957;
	xor.b64  	%rd13959, %rd13958, %rd13892;
	add.s64 	%rd13960, %rd13674, %rd100;
	add.s64 	%rd13961, %rd13960, %rd13868;
	add.s64 	%rd13962, %rd13961, %rd13959;
	add.s64 	%rd13963, %rd13962, %rd13956;
	add.s64 	%rd13964, %rd13963, %rd13879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27104,%dummy}, %rd13951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27105}, %rd13951;
	}
	shf.r.wrap.b32 	%r27106, %r27105, %r27104, 28;
	shf.r.wrap.b32 	%r27107, %r27104, %r27105, 28;
	mov.b64 	%rd13965, {%r27107, %r27106};
	shf.l.wrap.b32 	%r27108, %r27104, %r27105, 30;
	shf.l.wrap.b32 	%r27109, %r27105, %r27104, 30;
	mov.b64 	%rd13966, {%r27109, %r27108};
	xor.b64  	%rd13967, %rd13966, %rd13965;
	shf.l.wrap.b32 	%r27110, %r27104, %r27105, 25;
	shf.l.wrap.b32 	%r27111, %r27105, %r27104, 25;
	mov.b64 	%rd13968, {%r27111, %r27110};
	xor.b64  	%rd13969, %rd13967, %rd13968;
	and.b64  	%rd13970, %rd13951, %rd13927;
	xor.b64  	%rd13971, %rd13951, %rd13927;
	and.b64  	%rd13972, %rd13971, %rd13903;
	or.b64  	%rd13973, %rd13972, %rd13970;
	add.s64 	%rd13974, %rd13963, %rd13973;
	add.s64 	%rd13975, %rd13974, %rd13969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27112,%dummy}, %rd13964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27113}, %rd13964;
	}
	shf.r.wrap.b32 	%r27114, %r27113, %r27112, 14;
	shf.r.wrap.b32 	%r27115, %r27112, %r27113, 14;
	mov.b64 	%rd13976, {%r27115, %r27114};
	shf.r.wrap.b32 	%r27116, %r27113, %r27112, 18;
	shf.r.wrap.b32 	%r27117, %r27112, %r27113, 18;
	mov.b64 	%rd13977, {%r27117, %r27116};
	xor.b64  	%rd13978, %rd13977, %rd13976;
	shf.l.wrap.b32 	%r27118, %r27112, %r27113, 23;
	shf.l.wrap.b32 	%r27119, %r27113, %r27112, 23;
	mov.b64 	%rd13979, {%r27119, %r27118};
	xor.b64  	%rd13980, %rd13978, %rd13979;
	xor.b64  	%rd13981, %rd13940, %rd13916;
	and.b64  	%rd13982, %rd13964, %rd13981;
	xor.b64  	%rd13983, %rd13982, %rd13916;
	add.s64 	%rd13984, %rd13687, %rd101;
	add.s64 	%rd13985, %rd13984, %rd13892;
	add.s64 	%rd13986, %rd13985, %rd13983;
	add.s64 	%rd13987, %rd13986, %rd13980;
	add.s64 	%rd13988, %rd13987, %rd13903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27120,%dummy}, %rd13975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27121}, %rd13975;
	}
	shf.r.wrap.b32 	%r27122, %r27121, %r27120, 28;
	shf.r.wrap.b32 	%r27123, %r27120, %r27121, 28;
	mov.b64 	%rd13989, {%r27123, %r27122};
	shf.l.wrap.b32 	%r27124, %r27120, %r27121, 30;
	shf.l.wrap.b32 	%r27125, %r27121, %r27120, 30;
	mov.b64 	%rd13990, {%r27125, %r27124};
	xor.b64  	%rd13991, %rd13990, %rd13989;
	shf.l.wrap.b32 	%r27126, %r27120, %r27121, 25;
	shf.l.wrap.b32 	%r27127, %r27121, %r27120, 25;
	mov.b64 	%rd13992, {%r27127, %r27126};
	xor.b64  	%rd13993, %rd13991, %rd13992;
	and.b64  	%rd13994, %rd13975, %rd13951;
	xor.b64  	%rd13995, %rd13975, %rd13951;
	and.b64  	%rd13996, %rd13995, %rd13927;
	or.b64  	%rd13997, %rd13996, %rd13994;
	add.s64 	%rd13998, %rd13987, %rd13997;
	add.s64 	%rd13999, %rd13998, %rd13993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27128,%dummy}, %rd13988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27129}, %rd13988;
	}
	shf.r.wrap.b32 	%r27130, %r27129, %r27128, 14;
	shf.r.wrap.b32 	%r27131, %r27128, %r27129, 14;
	mov.b64 	%rd14000, {%r27131, %r27130};
	shf.r.wrap.b32 	%r27132, %r27129, %r27128, 18;
	shf.r.wrap.b32 	%r27133, %r27128, %r27129, 18;
	mov.b64 	%rd14001, {%r27133, %r27132};
	xor.b64  	%rd14002, %rd14001, %rd14000;
	shf.l.wrap.b32 	%r27134, %r27128, %r27129, 23;
	shf.l.wrap.b32 	%r27135, %r27129, %r27128, 23;
	mov.b64 	%rd14003, {%r27135, %r27134};
	xor.b64  	%rd14004, %rd14002, %rd14003;
	xor.b64  	%rd14005, %rd13964, %rd13940;
	and.b64  	%rd14006, %rd13988, %rd14005;
	xor.b64  	%rd14007, %rd14006, %rd13940;
	add.s64 	%rd14008, %rd13700, %rd102;
	add.s64 	%rd14009, %rd14008, %rd13916;
	add.s64 	%rd14010, %rd14009, %rd14007;
	add.s64 	%rd14011, %rd14010, %rd14004;
	add.s64 	%rd14012, %rd14011, %rd13927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27136,%dummy}, %rd13999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27137}, %rd13999;
	}
	shf.r.wrap.b32 	%r27138, %r27137, %r27136, 28;
	shf.r.wrap.b32 	%r27139, %r27136, %r27137, 28;
	mov.b64 	%rd14013, {%r27139, %r27138};
	shf.l.wrap.b32 	%r27140, %r27136, %r27137, 30;
	shf.l.wrap.b32 	%r27141, %r27137, %r27136, 30;
	mov.b64 	%rd14014, {%r27141, %r27140};
	xor.b64  	%rd14015, %rd14014, %rd14013;
	shf.l.wrap.b32 	%r27142, %r27136, %r27137, 25;
	shf.l.wrap.b32 	%r27143, %r27137, %r27136, 25;
	mov.b64 	%rd14016, {%r27143, %r27142};
	xor.b64  	%rd14017, %rd14015, %rd14016;
	and.b64  	%rd14018, %rd13999, %rd13975;
	xor.b64  	%rd14019, %rd13999, %rd13975;
	and.b64  	%rd14020, %rd14019, %rd13951;
	or.b64  	%rd14021, %rd14020, %rd14018;
	add.s64 	%rd14022, %rd14011, %rd14021;
	add.s64 	%rd14023, %rd14022, %rd14017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27144,%dummy}, %rd14012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27145}, %rd14012;
	}
	shf.r.wrap.b32 	%r27146, %r27145, %r27144, 14;
	shf.r.wrap.b32 	%r27147, %r27144, %r27145, 14;
	mov.b64 	%rd14024, {%r27147, %r27146};
	shf.r.wrap.b32 	%r27148, %r27145, %r27144, 18;
	shf.r.wrap.b32 	%r27149, %r27144, %r27145, 18;
	mov.b64 	%rd14025, {%r27149, %r27148};
	xor.b64  	%rd14026, %rd14025, %rd14024;
	shf.l.wrap.b32 	%r27150, %r27144, %r27145, 23;
	shf.l.wrap.b32 	%r27151, %r27145, %r27144, 23;
	mov.b64 	%rd14027, {%r27151, %r27150};
	xor.b64  	%rd14028, %rd14026, %rd14027;
	xor.b64  	%rd14029, %rd13988, %rd13964;
	and.b64  	%rd14030, %rd14012, %rd14029;
	xor.b64  	%rd14031, %rd14030, %rd13964;
	add.s64 	%rd14032, %rd13713, %rd103;
	add.s64 	%rd14033, %rd14032, %rd13940;
	add.s64 	%rd14034, %rd14033, %rd14031;
	add.s64 	%rd14035, %rd14034, %rd14028;
	add.s64 	%rd14036, %rd14035, %rd13951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27152,%dummy}, %rd14023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27153}, %rd14023;
	}
	shf.r.wrap.b32 	%r27154, %r27153, %r27152, 28;
	shf.r.wrap.b32 	%r27155, %r27152, %r27153, 28;
	mov.b64 	%rd14037, {%r27155, %r27154};
	shf.l.wrap.b32 	%r27156, %r27152, %r27153, 30;
	shf.l.wrap.b32 	%r27157, %r27153, %r27152, 30;
	mov.b64 	%rd14038, {%r27157, %r27156};
	xor.b64  	%rd14039, %rd14038, %rd14037;
	shf.l.wrap.b32 	%r27158, %r27152, %r27153, 25;
	shf.l.wrap.b32 	%r27159, %r27153, %r27152, 25;
	mov.b64 	%rd14040, {%r27159, %r27158};
	xor.b64  	%rd14041, %rd14039, %rd14040;
	and.b64  	%rd14042, %rd14023, %rd13999;
	xor.b64  	%rd14043, %rd14023, %rd13999;
	and.b64  	%rd14044, %rd14043, %rd13975;
	or.b64  	%rd14045, %rd14044, %rd14042;
	add.s64 	%rd14046, %rd14035, %rd14045;
	add.s64 	%rd14047, %rd14046, %rd14041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27160,%dummy}, %rd14036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27161}, %rd14036;
	}
	shf.r.wrap.b32 	%r27162, %r27161, %r27160, 14;
	shf.r.wrap.b32 	%r27163, %r27160, %r27161, 14;
	mov.b64 	%rd14048, {%r27163, %r27162};
	shf.r.wrap.b32 	%r27164, %r27161, %r27160, 18;
	shf.r.wrap.b32 	%r27165, %r27160, %r27161, 18;
	mov.b64 	%rd14049, {%r27165, %r27164};
	xor.b64  	%rd14050, %rd14049, %rd14048;
	shf.l.wrap.b32 	%r27166, %r27160, %r27161, 23;
	shf.l.wrap.b32 	%r27167, %r27161, %r27160, 23;
	mov.b64 	%rd14051, {%r27167, %r27166};
	xor.b64  	%rd14052, %rd14050, %rd14051;
	xor.b64  	%rd14053, %rd14012, %rd13988;
	and.b64  	%rd14054, %rd14036, %rd14053;
	xor.b64  	%rd14055, %rd14054, %rd13988;
	add.s64 	%rd14056, %rd13726, %rd104;
	add.s64 	%rd14057, %rd14056, %rd13964;
	add.s64 	%rd14058, %rd14057, %rd14055;
	add.s64 	%rd14059, %rd14058, %rd14052;
	add.s64 	%rd14060, %rd14059, %rd13975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27168,%dummy}, %rd14047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27169}, %rd14047;
	}
	shf.r.wrap.b32 	%r27170, %r27169, %r27168, 28;
	shf.r.wrap.b32 	%r27171, %r27168, %r27169, 28;
	mov.b64 	%rd14061, {%r27171, %r27170};
	shf.l.wrap.b32 	%r27172, %r27168, %r27169, 30;
	shf.l.wrap.b32 	%r27173, %r27169, %r27168, 30;
	mov.b64 	%rd14062, {%r27173, %r27172};
	xor.b64  	%rd14063, %rd14062, %rd14061;
	shf.l.wrap.b32 	%r27174, %r27168, %r27169, 25;
	shf.l.wrap.b32 	%r27175, %r27169, %r27168, 25;
	mov.b64 	%rd14064, {%r27175, %r27174};
	xor.b64  	%rd14065, %rd14063, %rd14064;
	and.b64  	%rd14066, %rd14047, %rd14023;
	xor.b64  	%rd14067, %rd14047, %rd14023;
	and.b64  	%rd14068, %rd14067, %rd13999;
	or.b64  	%rd14069, %rd14068, %rd14066;
	add.s64 	%rd14070, %rd14059, %rd14069;
	add.s64 	%rd14071, %rd14070, %rd14065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27176,%dummy}, %rd14060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27177}, %rd14060;
	}
	shf.r.wrap.b32 	%r27178, %r27177, %r27176, 14;
	shf.r.wrap.b32 	%r27179, %r27176, %r27177, 14;
	mov.b64 	%rd14072, {%r27179, %r27178};
	shf.r.wrap.b32 	%r27180, %r27177, %r27176, 18;
	shf.r.wrap.b32 	%r27181, %r27176, %r27177, 18;
	mov.b64 	%rd14073, {%r27181, %r27180};
	xor.b64  	%rd14074, %rd14073, %rd14072;
	shf.l.wrap.b32 	%r27182, %r27176, %r27177, 23;
	shf.l.wrap.b32 	%r27183, %r27177, %r27176, 23;
	mov.b64 	%rd14075, {%r27183, %r27182};
	xor.b64  	%rd14076, %rd14074, %rd14075;
	xor.b64  	%rd14077, %rd14036, %rd14012;
	and.b64  	%rd14078, %rd14060, %rd14077;
	xor.b64  	%rd14079, %rd14078, %rd14012;
	add.s64 	%rd14080, %rd13739, %rd105;
	add.s64 	%rd14081, %rd14080, %rd13988;
	add.s64 	%rd14082, %rd14081, %rd14079;
	add.s64 	%rd14083, %rd14082, %rd14076;
	add.s64 	%rd14084, %rd14083, %rd13999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27184,%dummy}, %rd14071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27185}, %rd14071;
	}
	shf.r.wrap.b32 	%r27186, %r27185, %r27184, 28;
	shf.r.wrap.b32 	%r27187, %r27184, %r27185, 28;
	mov.b64 	%rd14085, {%r27187, %r27186};
	shf.l.wrap.b32 	%r27188, %r27184, %r27185, 30;
	shf.l.wrap.b32 	%r27189, %r27185, %r27184, 30;
	mov.b64 	%rd14086, {%r27189, %r27188};
	xor.b64  	%rd14087, %rd14086, %rd14085;
	shf.l.wrap.b32 	%r27190, %r27184, %r27185, 25;
	shf.l.wrap.b32 	%r27191, %r27185, %r27184, 25;
	mov.b64 	%rd14088, {%r27191, %r27190};
	xor.b64  	%rd14089, %rd14087, %rd14088;
	and.b64  	%rd14090, %rd14071, %rd14047;
	xor.b64  	%rd14091, %rd14071, %rd14047;
	and.b64  	%rd14092, %rd14091, %rd14023;
	or.b64  	%rd14093, %rd14092, %rd14090;
	add.s64 	%rd14094, %rd14083, %rd14093;
	add.s64 	%rd14095, %rd14094, %rd14089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27192,%dummy}, %rd14084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27193}, %rd14084;
	}
	shf.r.wrap.b32 	%r27194, %r27193, %r27192, 14;
	shf.r.wrap.b32 	%r27195, %r27192, %r27193, 14;
	mov.b64 	%rd14096, {%r27195, %r27194};
	shf.r.wrap.b32 	%r27196, %r27193, %r27192, 18;
	shf.r.wrap.b32 	%r27197, %r27192, %r27193, 18;
	mov.b64 	%rd14097, {%r27197, %r27196};
	xor.b64  	%rd14098, %rd14097, %rd14096;
	shf.l.wrap.b32 	%r27198, %r27192, %r27193, 23;
	shf.l.wrap.b32 	%r27199, %r27193, %r27192, 23;
	mov.b64 	%rd14099, {%r27199, %r27198};
	xor.b64  	%rd14100, %rd14098, %rd14099;
	xor.b64  	%rd14101, %rd14060, %rd14036;
	and.b64  	%rd14102, %rd14084, %rd14101;
	xor.b64  	%rd14103, %rd14102, %rd14036;
	add.s64 	%rd14104, %rd13160, %rd106;
	add.s64 	%rd14105, %rd14104, %rd13661;
	add.s64 	%rd14106, %rd14105, %rd13744;
	add.s64 	%rd14107, %rd14106, %rd13749;
	add.s64 	%rd14108, %rd14107, %rd14012;
	add.s64 	%rd14109, %rd14108, %rd14103;
	add.s64 	%rd14110, %rd14109, %rd14100;
	add.s64 	%rd14111, %rd14110, %rd14023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27200,%dummy}, %rd14095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27201}, %rd14095;
	}
	shf.r.wrap.b32 	%r27202, %r27201, %r27200, 28;
	shf.r.wrap.b32 	%r27203, %r27200, %r27201, 28;
	mov.b64 	%rd14112, {%r27203, %r27202};
	shf.l.wrap.b32 	%r27204, %r27200, %r27201, 30;
	shf.l.wrap.b32 	%r27205, %r27201, %r27200, 30;
	mov.b64 	%rd14113, {%r27205, %r27204};
	xor.b64  	%rd14114, %rd14113, %rd14112;
	shf.l.wrap.b32 	%r27206, %r27200, %r27201, 25;
	shf.l.wrap.b32 	%r27207, %r27201, %r27200, 25;
	mov.b64 	%rd14115, {%r27207, %r27206};
	xor.b64  	%rd14116, %rd14114, %rd14115;
	and.b64  	%rd14117, %rd14095, %rd14071;
	xor.b64  	%rd14118, %rd14095, %rd14071;
	and.b64  	%rd14119, %rd14118, %rd14047;
	or.b64  	%rd14120, %rd14119, %rd14117;
	add.s64 	%rd14121, %rd14110, %rd14120;
	add.s64 	%rd14122, %rd14121, %rd14116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27208,%dummy}, %rd14111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27209}, %rd14111;
	}
	shf.r.wrap.b32 	%r27210, %r27209, %r27208, 14;
	shf.r.wrap.b32 	%r27211, %r27208, %r27209, 14;
	mov.b64 	%rd14123, {%r27211, %r27210};
	shf.r.wrap.b32 	%r27212, %r27209, %r27208, 18;
	shf.r.wrap.b32 	%r27213, %r27208, %r27209, 18;
	mov.b64 	%rd14124, {%r27213, %r27212};
	xor.b64  	%rd14125, %rd14124, %rd14123;
	shf.l.wrap.b32 	%r27214, %r27208, %r27209, 23;
	shf.l.wrap.b32 	%r27215, %r27209, %r27208, 23;
	mov.b64 	%rd14126, {%r27215, %r27214};
	xor.b64  	%rd14127, %rd14125, %rd14126;
	xor.b64  	%rd14128, %rd14084, %rd14060;
	and.b64  	%rd14129, %rd14111, %rd14128;
	xor.b64  	%rd14130, %rd14129, %rd14060;
	add.s64 	%rd14131, %rd13173, %rd107;
	add.s64 	%rd14132, %rd14131, %rd13674;
	add.s64 	%rd14133, %rd14132, %rd13754;
	add.s64 	%rd14134, %rd14133, %rd13759;
	add.s64 	%rd14135, %rd14134, %rd14036;
	add.s64 	%rd14136, %rd14135, %rd14130;
	add.s64 	%rd14137, %rd14136, %rd14127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27216,%dummy}, %rd14122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27217}, %rd14122;
	}
	shf.r.wrap.b32 	%r27218, %r27217, %r27216, 28;
	shf.r.wrap.b32 	%r27219, %r27216, %r27217, 28;
	mov.b64 	%rd14138, {%r27219, %r27218};
	shf.l.wrap.b32 	%r27220, %r27216, %r27217, 30;
	shf.l.wrap.b32 	%r27221, %r27217, %r27216, 30;
	mov.b64 	%rd14139, {%r27221, %r27220};
	xor.b64  	%rd14140, %rd14139, %rd14138;
	shf.l.wrap.b32 	%r27222, %r27216, %r27217, 25;
	shf.l.wrap.b32 	%r27223, %r27217, %r27216, 25;
	mov.b64 	%rd14141, {%r27223, %r27222};
	xor.b64  	%rd14142, %rd14140, %rd14141;
	and.b64  	%rd14143, %rd14122, %rd14095;
	xor.b64  	%rd14144, %rd14122, %rd14095;
	and.b64  	%rd14145, %rd14144, %rd14071;
	or.b64  	%rd14146, %rd14145, %rd14143;
	add.s64 	%rd14147, %rd14146, %rd11408;
	add.s64 	%rd14148, %rd14147, %rd14137;
	add.s64 	%rd14149, %rd14148, %rd14142;
	st.local.u64 	[%rd9], %rd14149;
	add.s64 	%rd14150, %rd14122, %rd11414;
	st.local.u64 	[%rd9+8], %rd14150;
	add.s64 	%rd14151, %rd14095, %rd11417;
	st.local.u64 	[%rd9+16], %rd14151;
	add.s64 	%rd14152, %rd14071, %rd11406;
	st.local.u64 	[%rd9+24], %rd14152;
	add.s64 	%rd14153, %rd14047, %rd11390;
	add.s64 	%rd14154, %rd14153, %rd14137;
	st.local.u64 	[%rd9+32], %rd14154;
	add.s64 	%rd14155, %rd14111, %rd11397;
	st.local.u64 	[%rd9+40], %rd14155;
	add.s64 	%rd14156, %rd14084, %rd11396;
	st.local.u64 	[%rd9+48], %rd14156;
	add.s64 	%rd23217, %rd14060, %rd11402;
	bra.uni 	BB1_310;

BB1_5:
	// inline asm
	prmt.b32 %r3846, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3848, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3850, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3852, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r35, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r37, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r40, 0, 0x0123;
	// inline asm
	sub.s32 	%r73, %r6, %r39225;
	setp.eq.s32	%p4, %r6, %r39225;
	@%p4 bra 	BB1_215;
	bra.uni 	BB1_6;

BB1_215:
	ld.local.v2.u32 	{%r39262, %r39261}, [%rd9+64];
	ld.local.v2.u32 	{%r39260, %r39259}, [%rd9+72];
	ld.local.v2.u32 	{%r39266, %r39265}, [%rd9+80];
	ld.local.v2.u32 	{%r39264, %r39263}, [%rd9+88];
	ld.local.v2.u32 	{%r39270, %r39269}, [%rd9+96];
	ld.local.v2.u32 	{%r39268, %r39267}, [%rd9+104];
	ld.local.v2.u32 	{%r39274, %r39273}, [%rd9+112];
	ld.local.v2.u32 	{%r39272, %r39271}, [%rd9+120];
	ld.local.v2.u32 	{%r39278, %r39277}, [%rd9+128];
	ld.local.v2.u32 	{%r39276, %r39275}, [%rd9+136];
	ld.local.v2.u32 	{%r39282, %r39281}, [%rd9+144];
	ld.local.v2.u32 	{%r39280, %r39279}, [%rd9+152];
	ld.local.v2.u32 	{%r39286, %r39285}, [%rd9+160];
	ld.local.v2.u32 	{%r39284, %r39283}, [%rd9+168];
	ld.local.v2.u32 	{%r39290, %r39289}, [%rd9+176];
	ld.local.v2.u32 	{%r39288, %r39287}, [%rd9+184];
	bra.uni 	BB1_216;

BB1_6:
	ld.local.u32 	%r74, [%rd9+192];
	and.b32  	%r75, %r74, 127;
	add.s32 	%r3910, %r74, %r73;
	st.local.u32 	[%rd9+192], %r3910;
	setp.eq.s32	%p5, %r75, 0;
	@%p5 bra 	BB1_212;

	add.s32 	%r3911, %r75, %r73;
	setp.lt.s32	%p6, %r3911, 128;
	shr.u32 	%r76, %r75, 2;
	and.b32  	%r3912, %r74, 3;
	shl.b32 	%r3913, %r3912, 2;
	mov.u32 	%r3914, 1985229328;
	shr.u32 	%r3915, %r3914, %r3913;
	and.b32  	%r77, %r3915, 65535;
	@%p6 bra 	BB1_96;
	bra.uni 	BB1_8;

BB1_96:
	setp.gt.s32	%p54, %r76, 15;
	@%p54 bra 	BB1_128;

	setp.gt.s32	%p78, %r76, 7;
	@%p78 bra 	BB1_113;

	setp.gt.s32	%p90, %r76, 3;
	@%p90 bra 	BB1_106;

	setp.gt.s32	%p96, %r76, 1;
	@%p96 bra 	BB1_103;

	setp.eq.s32	%p99, %r76, 0;
	@%p99 bra 	BB1_210;
	bra.uni 	BB1_101;

BB1_210:
	// inline asm
	prmt.b32 %r3908, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3852, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3850, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3848, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r13812, 0;
	// inline asm
	prmt.b32 %r39322, %r3846, %r13812, %r77;
	// inline asm
	bra.uni 	BB1_211;

BB1_212:
	st.local.v2.u32 	[%rd9+64], {%r3846, %r3848};
	st.local.v2.u32 	[%rd9+72], {%r3850, %r3852};
	st.local.v2.u32 	[%rd9+80], {%r3854, %r3856};
	st.local.v2.u32 	[%rd9+88], {%r3858, %r3860};
	st.local.v2.u32 	[%rd9+96], {%r3862, %r3864};
	st.local.v2.u32 	[%rd9+104], {%r3866, %r3868};
	st.local.v2.u32 	[%rd9+112], {%r3870, %r3872};
	st.local.v2.u32 	[%rd9+120], {%r3874, %r3876};
	st.local.v2.u32 	[%rd9+128], {%r3878, %r3880};
	st.local.v2.u32 	[%rd9+136], {%r3882, %r3884};
	st.local.v2.u32 	[%rd9+144], {%r3886, %r3888};
	st.local.v2.u32 	[%rd9+152], {%r3890, %r3892};
	st.local.v2.u32 	[%rd9+160], {%r3894, %r3896};
	st.local.v2.u32 	[%rd9+168], {%r3898, %r3900};
	st.local.v2.u32 	[%rd9+176], {%r3902, %r3904};
	st.local.v2.u32 	[%rd9+184], {%r3906, %r3908};
	setp.ne.s32	%p101, %r73, 128;
	@%p101 bra 	BB1_213;

	mov.b64	%rd3044, {%r3848, %r3846};
	mov.b64	%rd3045, {%r3852, %r3850};
	mov.b64	%rd3046, {%r3856, %r3854};
	mov.b64	%rd3047, {%r3860, %r3858};
	mov.b64	%rd3048, {%r3864, %r3862};
	mov.b64	%rd3049, {%r3868, %r3866};
	mov.b64	%rd3050, {%r3872, %r3870};
	mov.b64	%rd3051, {%r3876, %r3874};
	mov.b64	%rd3052, {%r3880, %r3878};
	mov.b64	%rd3053, {%r3884, %r3882};
	mov.b64	%rd3054, {%r3888, %r3886};
	mov.b64	%rd3055, {%r3892, %r3890};
	mov.b64	%rd3056, {%r3896, %r3894};
	mov.b64	%rd3057, {%r3900, %r3898};
	mov.b64	%rd3058, {%r3904, %r3902};
	mov.b64	%rd3059, {%r3908, %r3906};
	ld.local.u64 	%rd3060, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13910,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13911}, %rd3060;
	}
	shf.r.wrap.b32 	%r13912, %r13911, %r13910, 14;
	shf.r.wrap.b32 	%r13913, %r13910, %r13911, 14;
	mov.b64 	%rd3061, {%r13913, %r13912};
	shf.r.wrap.b32 	%r13914, %r13911, %r13910, 18;
	shf.r.wrap.b32 	%r13915, %r13910, %r13911, 18;
	mov.b64 	%rd3062, {%r13915, %r13914};
	xor.b64  	%rd3063, %rd3062, %rd3061;
	shf.l.wrap.b32 	%r13916, %r13910, %r13911, 23;
	shf.l.wrap.b32 	%r13917, %r13911, %r13910, 23;
	mov.b64 	%rd3064, {%r13917, %r13916};
	xor.b64  	%rd3065, %rd3063, %rd3064;
	ld.local.u64 	%rd3066, [%rd9+48];
	ld.local.u64 	%rd3067, [%rd9+40];
	xor.b64  	%rd3068, %rd3066, %rd3067;
	and.b64  	%rd3069, %rd3068, %rd3060;
	xor.b64  	%rd3070, %rd3069, %rd3066;
	add.s64 	%rd3071, %rd3044, %rd28;
	ld.local.u64 	%rd3072, [%rd9+56];
	add.s64 	%rd3073, %rd3071, %rd3072;
	add.s64 	%rd3074, %rd3073, %rd3070;
	add.s64 	%rd3075, %rd3074, %rd3065;
	ld.local.u64 	%rd3076, [%rd9+24];
	add.s64 	%rd3077, %rd3075, %rd3076;
	ld.local.u64 	%rd3078, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13918,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13919}, %rd3078;
	}
	shf.r.wrap.b32 	%r13920, %r13919, %r13918, 28;
	shf.r.wrap.b32 	%r13921, %r13918, %r13919, 28;
	mov.b64 	%rd3079, {%r13921, %r13920};
	shf.l.wrap.b32 	%r13922, %r13918, %r13919, 30;
	shf.l.wrap.b32 	%r13923, %r13919, %r13918, 30;
	mov.b64 	%rd3080, {%r13923, %r13922};
	xor.b64  	%rd3081, %rd3080, %rd3079;
	shf.l.wrap.b32 	%r13924, %r13918, %r13919, 25;
	shf.l.wrap.b32 	%r13925, %r13919, %r13918, 25;
	mov.b64 	%rd3082, {%r13925, %r13924};
	xor.b64  	%rd3083, %rd3081, %rd3082;
	ld.local.u64 	%rd3084, [%rd9+8];
	and.b64  	%rd3085, %rd3084, %rd3078;
	xor.b64  	%rd3086, %rd3084, %rd3078;
	ld.local.u64 	%rd3087, [%rd9+16];
	and.b64  	%rd3088, %rd3087, %rd3086;
	or.b64  	%rd3089, %rd3088, %rd3085;
	add.s64 	%rd3090, %rd3075, %rd3089;
	add.s64 	%rd3091, %rd3090, %rd3083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13926,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13927}, %rd3077;
	}
	shf.r.wrap.b32 	%r13928, %r13927, %r13926, 14;
	shf.r.wrap.b32 	%r13929, %r13926, %r13927, 14;
	mov.b64 	%rd3092, {%r13929, %r13928};
	shf.r.wrap.b32 	%r13930, %r13927, %r13926, 18;
	shf.r.wrap.b32 	%r13931, %r13926, %r13927, 18;
	mov.b64 	%rd3093, {%r13931, %r13930};
	xor.b64  	%rd3094, %rd3093, %rd3092;
	shf.l.wrap.b32 	%r13932, %r13926, %r13927, 23;
	shf.l.wrap.b32 	%r13933, %r13927, %r13926, 23;
	mov.b64 	%rd3095, {%r13933, %r13932};
	xor.b64  	%rd3096, %rd3094, %rd3095;
	xor.b64  	%rd3097, %rd3067, %rd3060;
	and.b64  	%rd3098, %rd3077, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3067;
	add.s64 	%rd3100, %rd3045, %rd29;
	add.s64 	%rd3101, %rd3100, %rd3066;
	add.s64 	%rd3102, %rd3101, %rd3099;
	add.s64 	%rd3103, %rd3102, %rd3096;
	add.s64 	%rd3104, %rd3103, %rd3087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13934,%dummy}, %rd3091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13935}, %rd3091;
	}
	shf.r.wrap.b32 	%r13936, %r13935, %r13934, 28;
	shf.r.wrap.b32 	%r13937, %r13934, %r13935, 28;
	mov.b64 	%rd3105, {%r13937, %r13936};
	shf.l.wrap.b32 	%r13938, %r13934, %r13935, 30;
	shf.l.wrap.b32 	%r13939, %r13935, %r13934, 30;
	mov.b64 	%rd3106, {%r13939, %r13938};
	xor.b64  	%rd3107, %rd3106, %rd3105;
	shf.l.wrap.b32 	%r13940, %r13934, %r13935, 25;
	shf.l.wrap.b32 	%r13941, %r13935, %r13934, 25;
	mov.b64 	%rd3108, {%r13941, %r13940};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	and.b64  	%rd3110, %rd3091, %rd3078;
	xor.b64  	%rd3111, %rd3091, %rd3078;
	and.b64  	%rd3112, %rd3111, %rd3084;
	or.b64  	%rd3113, %rd3112, %rd3110;
	add.s64 	%rd3114, %rd3103, %rd3113;
	add.s64 	%rd3115, %rd3114, %rd3109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13942,%dummy}, %rd3104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13943}, %rd3104;
	}
	shf.r.wrap.b32 	%r13944, %r13943, %r13942, 14;
	shf.r.wrap.b32 	%r13945, %r13942, %r13943, 14;
	mov.b64 	%rd3116, {%r13945, %r13944};
	shf.r.wrap.b32 	%r13946, %r13943, %r13942, 18;
	shf.r.wrap.b32 	%r13947, %r13942, %r13943, 18;
	mov.b64 	%rd3117, {%r13947, %r13946};
	xor.b64  	%rd3118, %rd3117, %rd3116;
	shf.l.wrap.b32 	%r13948, %r13942, %r13943, 23;
	shf.l.wrap.b32 	%r13949, %r13943, %r13942, 23;
	mov.b64 	%rd3119, {%r13949, %r13948};
	xor.b64  	%rd3120, %rd3118, %rd3119;
	xor.b64  	%rd3121, %rd3077, %rd3060;
	and.b64  	%rd3122, %rd3104, %rd3121;
	xor.b64  	%rd3123, %rd3122, %rd3060;
	add.s64 	%rd3124, %rd3046, %rd30;
	add.s64 	%rd3125, %rd3124, %rd3067;
	add.s64 	%rd3126, %rd3125, %rd3123;
	add.s64 	%rd3127, %rd3126, %rd3120;
	add.s64 	%rd3128, %rd3127, %rd3084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13950,%dummy}, %rd3115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13951}, %rd3115;
	}
	shf.r.wrap.b32 	%r13952, %r13951, %r13950, 28;
	shf.r.wrap.b32 	%r13953, %r13950, %r13951, 28;
	mov.b64 	%rd3129, {%r13953, %r13952};
	shf.l.wrap.b32 	%r13954, %r13950, %r13951, 30;
	shf.l.wrap.b32 	%r13955, %r13951, %r13950, 30;
	mov.b64 	%rd3130, {%r13955, %r13954};
	xor.b64  	%rd3131, %rd3130, %rd3129;
	shf.l.wrap.b32 	%r13956, %r13950, %r13951, 25;
	shf.l.wrap.b32 	%r13957, %r13951, %r13950, 25;
	mov.b64 	%rd3132, {%r13957, %r13956};
	xor.b64  	%rd3133, %rd3131, %rd3132;
	and.b64  	%rd3134, %rd3115, %rd3091;
	xor.b64  	%rd3135, %rd3115, %rd3091;
	and.b64  	%rd3136, %rd3135, %rd3078;
	or.b64  	%rd3137, %rd3136, %rd3134;
	add.s64 	%rd3138, %rd3127, %rd3137;
	add.s64 	%rd3139, %rd3138, %rd3133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13958,%dummy}, %rd3128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13959}, %rd3128;
	}
	shf.r.wrap.b32 	%r13960, %r13959, %r13958, 14;
	shf.r.wrap.b32 	%r13961, %r13958, %r13959, 14;
	mov.b64 	%rd3140, {%r13961, %r13960};
	shf.r.wrap.b32 	%r13962, %r13959, %r13958, 18;
	shf.r.wrap.b32 	%r13963, %r13958, %r13959, 18;
	mov.b64 	%rd3141, {%r13963, %r13962};
	xor.b64  	%rd3142, %rd3141, %rd3140;
	shf.l.wrap.b32 	%r13964, %r13958, %r13959, 23;
	shf.l.wrap.b32 	%r13965, %r13959, %r13958, 23;
	mov.b64 	%rd3143, {%r13965, %r13964};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	xor.b64  	%rd3145, %rd3104, %rd3077;
	and.b64  	%rd3146, %rd3128, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3077;
	add.s64 	%rd3148, %rd3047, %rd31;
	add.s64 	%rd3149, %rd3148, %rd3060;
	add.s64 	%rd3150, %rd3149, %rd3147;
	add.s64 	%rd3151, %rd3150, %rd3144;
	add.s64 	%rd3152, %rd3151, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13966,%dummy}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13967}, %rd3139;
	}
	shf.r.wrap.b32 	%r13968, %r13967, %r13966, 28;
	shf.r.wrap.b32 	%r13969, %r13966, %r13967, 28;
	mov.b64 	%rd3153, {%r13969, %r13968};
	shf.l.wrap.b32 	%r13970, %r13966, %r13967, 30;
	shf.l.wrap.b32 	%r13971, %r13967, %r13966, 30;
	mov.b64 	%rd3154, {%r13971, %r13970};
	xor.b64  	%rd3155, %rd3154, %rd3153;
	shf.l.wrap.b32 	%r13972, %r13966, %r13967, 25;
	shf.l.wrap.b32 	%r13973, %r13967, %r13966, 25;
	mov.b64 	%rd3156, {%r13973, %r13972};
	xor.b64  	%rd3157, %rd3155, %rd3156;
	and.b64  	%rd3158, %rd3139, %rd3115;
	xor.b64  	%rd3159, %rd3139, %rd3115;
	and.b64  	%rd3160, %rd3159, %rd3091;
	or.b64  	%rd3161, %rd3160, %rd3158;
	add.s64 	%rd3162, %rd3151, %rd3161;
	add.s64 	%rd3163, %rd3162, %rd3157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13974,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13975}, %rd3152;
	}
	shf.r.wrap.b32 	%r13976, %r13975, %r13974, 14;
	shf.r.wrap.b32 	%r13977, %r13974, %r13975, 14;
	mov.b64 	%rd3164, {%r13977, %r13976};
	shf.r.wrap.b32 	%r13978, %r13975, %r13974, 18;
	shf.r.wrap.b32 	%r13979, %r13974, %r13975, 18;
	mov.b64 	%rd3165, {%r13979, %r13978};
	xor.b64  	%rd3166, %rd3165, %rd3164;
	shf.l.wrap.b32 	%r13980, %r13974, %r13975, 23;
	shf.l.wrap.b32 	%r13981, %r13975, %r13974, 23;
	mov.b64 	%rd3167, {%r13981, %r13980};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	xor.b64  	%rd3169, %rd3128, %rd3104;
	and.b64  	%rd3170, %rd3152, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3104;
	add.s64 	%rd3172, %rd3048, %rd32;
	add.s64 	%rd3173, %rd3172, %rd3077;
	add.s64 	%rd3174, %rd3173, %rd3171;
	add.s64 	%rd3175, %rd3174, %rd3168;
	add.s64 	%rd3176, %rd3175, %rd3091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13982,%dummy}, %rd3163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13983}, %rd3163;
	}
	shf.r.wrap.b32 	%r13984, %r13983, %r13982, 28;
	shf.r.wrap.b32 	%r13985, %r13982, %r13983, 28;
	mov.b64 	%rd3177, {%r13985, %r13984};
	shf.l.wrap.b32 	%r13986, %r13982, %r13983, 30;
	shf.l.wrap.b32 	%r13987, %r13983, %r13982, 30;
	mov.b64 	%rd3178, {%r13987, %r13986};
	xor.b64  	%rd3179, %rd3178, %rd3177;
	shf.l.wrap.b32 	%r13988, %r13982, %r13983, 25;
	shf.l.wrap.b32 	%r13989, %r13983, %r13982, 25;
	mov.b64 	%rd3180, {%r13989, %r13988};
	xor.b64  	%rd3181, %rd3179, %rd3180;
	and.b64  	%rd3182, %rd3163, %rd3139;
	xor.b64  	%rd3183, %rd3163, %rd3139;
	and.b64  	%rd3184, %rd3183, %rd3115;
	or.b64  	%rd3185, %rd3184, %rd3182;
	add.s64 	%rd3186, %rd3175, %rd3185;
	add.s64 	%rd3187, %rd3186, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13990,%dummy}, %rd3176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13991}, %rd3176;
	}
	shf.r.wrap.b32 	%r13992, %r13991, %r13990, 14;
	shf.r.wrap.b32 	%r13993, %r13990, %r13991, 14;
	mov.b64 	%rd3188, {%r13993, %r13992};
	shf.r.wrap.b32 	%r13994, %r13991, %r13990, 18;
	shf.r.wrap.b32 	%r13995, %r13990, %r13991, 18;
	mov.b64 	%rd3189, {%r13995, %r13994};
	xor.b64  	%rd3190, %rd3189, %rd3188;
	shf.l.wrap.b32 	%r13996, %r13990, %r13991, 23;
	shf.l.wrap.b32 	%r13997, %r13991, %r13990, 23;
	mov.b64 	%rd3191, {%r13997, %r13996};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	xor.b64  	%rd3193, %rd3152, %rd3128;
	and.b64  	%rd3194, %rd3176, %rd3193;
	xor.b64  	%rd3195, %rd3194, %rd3128;
	add.s64 	%rd3196, %rd3049, %rd33;
	add.s64 	%rd3197, %rd3196, %rd3104;
	add.s64 	%rd3198, %rd3197, %rd3195;
	add.s64 	%rd3199, %rd3198, %rd3192;
	add.s64 	%rd3200, %rd3199, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r13998,%dummy}, %rd3187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13999}, %rd3187;
	}
	shf.r.wrap.b32 	%r14000, %r13999, %r13998, 28;
	shf.r.wrap.b32 	%r14001, %r13998, %r13999, 28;
	mov.b64 	%rd3201, {%r14001, %r14000};
	shf.l.wrap.b32 	%r14002, %r13998, %r13999, 30;
	shf.l.wrap.b32 	%r14003, %r13999, %r13998, 30;
	mov.b64 	%rd3202, {%r14003, %r14002};
	xor.b64  	%rd3203, %rd3202, %rd3201;
	shf.l.wrap.b32 	%r14004, %r13998, %r13999, 25;
	shf.l.wrap.b32 	%r14005, %r13999, %r13998, 25;
	mov.b64 	%rd3204, {%r14005, %r14004};
	xor.b64  	%rd3205, %rd3203, %rd3204;
	and.b64  	%rd3206, %rd3187, %rd3163;
	xor.b64  	%rd3207, %rd3187, %rd3163;
	and.b64  	%rd3208, %rd3207, %rd3139;
	or.b64  	%rd3209, %rd3208, %rd3206;
	add.s64 	%rd3210, %rd3199, %rd3209;
	add.s64 	%rd3211, %rd3210, %rd3205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14006,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14007}, %rd3200;
	}
	shf.r.wrap.b32 	%r14008, %r14007, %r14006, 14;
	shf.r.wrap.b32 	%r14009, %r14006, %r14007, 14;
	mov.b64 	%rd3212, {%r14009, %r14008};
	shf.r.wrap.b32 	%r14010, %r14007, %r14006, 18;
	shf.r.wrap.b32 	%r14011, %r14006, %r14007, 18;
	mov.b64 	%rd3213, {%r14011, %r14010};
	xor.b64  	%rd3214, %rd3213, %rd3212;
	shf.l.wrap.b32 	%r14012, %r14006, %r14007, 23;
	shf.l.wrap.b32 	%r14013, %r14007, %r14006, 23;
	mov.b64 	%rd3215, {%r14013, %r14012};
	xor.b64  	%rd3216, %rd3214, %rd3215;
	xor.b64  	%rd3217, %rd3176, %rd3152;
	and.b64  	%rd3218, %rd3200, %rd3217;
	xor.b64  	%rd3219, %rd3218, %rd3152;
	add.s64 	%rd3220, %rd3050, %rd34;
	add.s64 	%rd3221, %rd3220, %rd3128;
	add.s64 	%rd3222, %rd3221, %rd3219;
	add.s64 	%rd3223, %rd3222, %rd3216;
	add.s64 	%rd3224, %rd3223, %rd3139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14014,%dummy}, %rd3211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14015}, %rd3211;
	}
	shf.r.wrap.b32 	%r14016, %r14015, %r14014, 28;
	shf.r.wrap.b32 	%r14017, %r14014, %r14015, 28;
	mov.b64 	%rd3225, {%r14017, %r14016};
	shf.l.wrap.b32 	%r14018, %r14014, %r14015, 30;
	shf.l.wrap.b32 	%r14019, %r14015, %r14014, 30;
	mov.b64 	%rd3226, {%r14019, %r14018};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	shf.l.wrap.b32 	%r14020, %r14014, %r14015, 25;
	shf.l.wrap.b32 	%r14021, %r14015, %r14014, 25;
	mov.b64 	%rd3228, {%r14021, %r14020};
	xor.b64  	%rd3229, %rd3227, %rd3228;
	and.b64  	%rd3230, %rd3211, %rd3187;
	xor.b64  	%rd3231, %rd3211, %rd3187;
	and.b64  	%rd3232, %rd3231, %rd3163;
	or.b64  	%rd3233, %rd3232, %rd3230;
	add.s64 	%rd3234, %rd3223, %rd3233;
	add.s64 	%rd3235, %rd3234, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14022,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14023}, %rd3224;
	}
	shf.r.wrap.b32 	%r14024, %r14023, %r14022, 14;
	shf.r.wrap.b32 	%r14025, %r14022, %r14023, 14;
	mov.b64 	%rd3236, {%r14025, %r14024};
	shf.r.wrap.b32 	%r14026, %r14023, %r14022, 18;
	shf.r.wrap.b32 	%r14027, %r14022, %r14023, 18;
	mov.b64 	%rd3237, {%r14027, %r14026};
	xor.b64  	%rd3238, %rd3237, %rd3236;
	shf.l.wrap.b32 	%r14028, %r14022, %r14023, 23;
	shf.l.wrap.b32 	%r14029, %r14023, %r14022, 23;
	mov.b64 	%rd3239, {%r14029, %r14028};
	xor.b64  	%rd3240, %rd3238, %rd3239;
	xor.b64  	%rd3241, %rd3200, %rd3176;
	and.b64  	%rd3242, %rd3224, %rd3241;
	xor.b64  	%rd3243, %rd3242, %rd3176;
	add.s64 	%rd3244, %rd3051, %rd35;
	add.s64 	%rd3245, %rd3244, %rd3152;
	add.s64 	%rd3246, %rd3245, %rd3243;
	add.s64 	%rd3247, %rd3246, %rd3240;
	add.s64 	%rd3248, %rd3247, %rd3163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14030,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14031}, %rd3235;
	}
	shf.r.wrap.b32 	%r14032, %r14031, %r14030, 28;
	shf.r.wrap.b32 	%r14033, %r14030, %r14031, 28;
	mov.b64 	%rd3249, {%r14033, %r14032};
	shf.l.wrap.b32 	%r14034, %r14030, %r14031, 30;
	shf.l.wrap.b32 	%r14035, %r14031, %r14030, 30;
	mov.b64 	%rd3250, {%r14035, %r14034};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r14036, %r14030, %r14031, 25;
	shf.l.wrap.b32 	%r14037, %r14031, %r14030, 25;
	mov.b64 	%rd3252, {%r14037, %r14036};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	and.b64  	%rd3254, %rd3235, %rd3211;
	xor.b64  	%rd3255, %rd3235, %rd3211;
	and.b64  	%rd3256, %rd3255, %rd3187;
	or.b64  	%rd3257, %rd3256, %rd3254;
	add.s64 	%rd3258, %rd3247, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14038,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14039}, %rd3248;
	}
	shf.r.wrap.b32 	%r14040, %r14039, %r14038, 14;
	shf.r.wrap.b32 	%r14041, %r14038, %r14039, 14;
	mov.b64 	%rd3260, {%r14041, %r14040};
	shf.r.wrap.b32 	%r14042, %r14039, %r14038, 18;
	shf.r.wrap.b32 	%r14043, %r14038, %r14039, 18;
	mov.b64 	%rd3261, {%r14043, %r14042};
	xor.b64  	%rd3262, %rd3261, %rd3260;
	shf.l.wrap.b32 	%r14044, %r14038, %r14039, 23;
	shf.l.wrap.b32 	%r14045, %r14039, %r14038, 23;
	mov.b64 	%rd3263, {%r14045, %r14044};
	xor.b64  	%rd3264, %rd3262, %rd3263;
	xor.b64  	%rd3265, %rd3224, %rd3200;
	and.b64  	%rd3266, %rd3248, %rd3265;
	xor.b64  	%rd3267, %rd3266, %rd3200;
	add.s64 	%rd3268, %rd3052, %rd36;
	add.s64 	%rd3269, %rd3268, %rd3176;
	add.s64 	%rd3270, %rd3269, %rd3267;
	add.s64 	%rd3271, %rd3270, %rd3264;
	add.s64 	%rd3272, %rd3271, %rd3187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14046,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14047}, %rd3259;
	}
	shf.r.wrap.b32 	%r14048, %r14047, %r14046, 28;
	shf.r.wrap.b32 	%r14049, %r14046, %r14047, 28;
	mov.b64 	%rd3273, {%r14049, %r14048};
	shf.l.wrap.b32 	%r14050, %r14046, %r14047, 30;
	shf.l.wrap.b32 	%r14051, %r14047, %r14046, 30;
	mov.b64 	%rd3274, {%r14051, %r14050};
	xor.b64  	%rd3275, %rd3274, %rd3273;
	shf.l.wrap.b32 	%r14052, %r14046, %r14047, 25;
	shf.l.wrap.b32 	%r14053, %r14047, %r14046, 25;
	mov.b64 	%rd3276, {%r14053, %r14052};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	and.b64  	%rd3278, %rd3259, %rd3235;
	xor.b64  	%rd3279, %rd3259, %rd3235;
	and.b64  	%rd3280, %rd3279, %rd3211;
	or.b64  	%rd3281, %rd3280, %rd3278;
	add.s64 	%rd3282, %rd3271, %rd3281;
	add.s64 	%rd3283, %rd3282, %rd3277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14054,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14055}, %rd3272;
	}
	shf.r.wrap.b32 	%r14056, %r14055, %r14054, 14;
	shf.r.wrap.b32 	%r14057, %r14054, %r14055, 14;
	mov.b64 	%rd3284, {%r14057, %r14056};
	shf.r.wrap.b32 	%r14058, %r14055, %r14054, 18;
	shf.r.wrap.b32 	%r14059, %r14054, %r14055, 18;
	mov.b64 	%rd3285, {%r14059, %r14058};
	xor.b64  	%rd3286, %rd3285, %rd3284;
	shf.l.wrap.b32 	%r14060, %r14054, %r14055, 23;
	shf.l.wrap.b32 	%r14061, %r14055, %r14054, 23;
	mov.b64 	%rd3287, {%r14061, %r14060};
	xor.b64  	%rd3288, %rd3286, %rd3287;
	xor.b64  	%rd3289, %rd3248, %rd3224;
	and.b64  	%rd3290, %rd3272, %rd3289;
	xor.b64  	%rd3291, %rd3290, %rd3224;
	add.s64 	%rd3292, %rd3053, %rd37;
	add.s64 	%rd3293, %rd3292, %rd3200;
	add.s64 	%rd3294, %rd3293, %rd3291;
	add.s64 	%rd3295, %rd3294, %rd3288;
	add.s64 	%rd3296, %rd3295, %rd3211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14062,%dummy}, %rd3283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14063}, %rd3283;
	}
	shf.r.wrap.b32 	%r14064, %r14063, %r14062, 28;
	shf.r.wrap.b32 	%r14065, %r14062, %r14063, 28;
	mov.b64 	%rd3297, {%r14065, %r14064};
	shf.l.wrap.b32 	%r14066, %r14062, %r14063, 30;
	shf.l.wrap.b32 	%r14067, %r14063, %r14062, 30;
	mov.b64 	%rd3298, {%r14067, %r14066};
	xor.b64  	%rd3299, %rd3298, %rd3297;
	shf.l.wrap.b32 	%r14068, %r14062, %r14063, 25;
	shf.l.wrap.b32 	%r14069, %r14063, %r14062, 25;
	mov.b64 	%rd3300, {%r14069, %r14068};
	xor.b64  	%rd3301, %rd3299, %rd3300;
	and.b64  	%rd3302, %rd3283, %rd3259;
	xor.b64  	%rd3303, %rd3283, %rd3259;
	and.b64  	%rd3304, %rd3303, %rd3235;
	or.b64  	%rd3305, %rd3304, %rd3302;
	add.s64 	%rd3306, %rd3295, %rd3305;
	add.s64 	%rd3307, %rd3306, %rd3301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14070,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14071}, %rd3296;
	}
	shf.r.wrap.b32 	%r14072, %r14071, %r14070, 14;
	shf.r.wrap.b32 	%r14073, %r14070, %r14071, 14;
	mov.b64 	%rd3308, {%r14073, %r14072};
	shf.r.wrap.b32 	%r14074, %r14071, %r14070, 18;
	shf.r.wrap.b32 	%r14075, %r14070, %r14071, 18;
	mov.b64 	%rd3309, {%r14075, %r14074};
	xor.b64  	%rd3310, %rd3309, %rd3308;
	shf.l.wrap.b32 	%r14076, %r14070, %r14071, 23;
	shf.l.wrap.b32 	%r14077, %r14071, %r14070, 23;
	mov.b64 	%rd3311, {%r14077, %r14076};
	xor.b64  	%rd3312, %rd3310, %rd3311;
	xor.b64  	%rd3313, %rd3272, %rd3248;
	and.b64  	%rd3314, %rd3296, %rd3313;
	xor.b64  	%rd3315, %rd3314, %rd3248;
	add.s64 	%rd3316, %rd3054, %rd38;
	add.s64 	%rd3317, %rd3316, %rd3224;
	add.s64 	%rd3318, %rd3317, %rd3315;
	add.s64 	%rd3319, %rd3318, %rd3312;
	add.s64 	%rd3320, %rd3319, %rd3235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14078,%dummy}, %rd3307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14079}, %rd3307;
	}
	shf.r.wrap.b32 	%r14080, %r14079, %r14078, 28;
	shf.r.wrap.b32 	%r14081, %r14078, %r14079, 28;
	mov.b64 	%rd3321, {%r14081, %r14080};
	shf.l.wrap.b32 	%r14082, %r14078, %r14079, 30;
	shf.l.wrap.b32 	%r14083, %r14079, %r14078, 30;
	mov.b64 	%rd3322, {%r14083, %r14082};
	xor.b64  	%rd3323, %rd3322, %rd3321;
	shf.l.wrap.b32 	%r14084, %r14078, %r14079, 25;
	shf.l.wrap.b32 	%r14085, %r14079, %r14078, 25;
	mov.b64 	%rd3324, {%r14085, %r14084};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	and.b64  	%rd3326, %rd3307, %rd3283;
	xor.b64  	%rd3327, %rd3307, %rd3283;
	and.b64  	%rd3328, %rd3327, %rd3259;
	or.b64  	%rd3329, %rd3328, %rd3326;
	add.s64 	%rd3330, %rd3319, %rd3329;
	add.s64 	%rd3331, %rd3330, %rd3325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14086,%dummy}, %rd3320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14087}, %rd3320;
	}
	shf.r.wrap.b32 	%r14088, %r14087, %r14086, 14;
	shf.r.wrap.b32 	%r14089, %r14086, %r14087, 14;
	mov.b64 	%rd3332, {%r14089, %r14088};
	shf.r.wrap.b32 	%r14090, %r14087, %r14086, 18;
	shf.r.wrap.b32 	%r14091, %r14086, %r14087, 18;
	mov.b64 	%rd3333, {%r14091, %r14090};
	xor.b64  	%rd3334, %rd3333, %rd3332;
	shf.l.wrap.b32 	%r14092, %r14086, %r14087, 23;
	shf.l.wrap.b32 	%r14093, %r14087, %r14086, 23;
	mov.b64 	%rd3335, {%r14093, %r14092};
	xor.b64  	%rd3336, %rd3334, %rd3335;
	xor.b64  	%rd3337, %rd3296, %rd3272;
	and.b64  	%rd3338, %rd3320, %rd3337;
	xor.b64  	%rd3339, %rd3338, %rd3272;
	add.s64 	%rd3340, %rd3055, %rd39;
	add.s64 	%rd3341, %rd3340, %rd3248;
	add.s64 	%rd3342, %rd3341, %rd3339;
	add.s64 	%rd3343, %rd3342, %rd3336;
	add.s64 	%rd3344, %rd3343, %rd3259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14094,%dummy}, %rd3331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14095}, %rd3331;
	}
	shf.r.wrap.b32 	%r14096, %r14095, %r14094, 28;
	shf.r.wrap.b32 	%r14097, %r14094, %r14095, 28;
	mov.b64 	%rd3345, {%r14097, %r14096};
	shf.l.wrap.b32 	%r14098, %r14094, %r14095, 30;
	shf.l.wrap.b32 	%r14099, %r14095, %r14094, 30;
	mov.b64 	%rd3346, {%r14099, %r14098};
	xor.b64  	%rd3347, %rd3346, %rd3345;
	shf.l.wrap.b32 	%r14100, %r14094, %r14095, 25;
	shf.l.wrap.b32 	%r14101, %r14095, %r14094, 25;
	mov.b64 	%rd3348, {%r14101, %r14100};
	xor.b64  	%rd3349, %rd3347, %rd3348;
	and.b64  	%rd3350, %rd3331, %rd3307;
	xor.b64  	%rd3351, %rd3331, %rd3307;
	and.b64  	%rd3352, %rd3351, %rd3283;
	or.b64  	%rd3353, %rd3352, %rd3350;
	add.s64 	%rd3354, %rd3343, %rd3353;
	add.s64 	%rd3355, %rd3354, %rd3349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14102,%dummy}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14103}, %rd3344;
	}
	shf.r.wrap.b32 	%r14104, %r14103, %r14102, 14;
	shf.r.wrap.b32 	%r14105, %r14102, %r14103, 14;
	mov.b64 	%rd3356, {%r14105, %r14104};
	shf.r.wrap.b32 	%r14106, %r14103, %r14102, 18;
	shf.r.wrap.b32 	%r14107, %r14102, %r14103, 18;
	mov.b64 	%rd3357, {%r14107, %r14106};
	xor.b64  	%rd3358, %rd3357, %rd3356;
	shf.l.wrap.b32 	%r14108, %r14102, %r14103, 23;
	shf.l.wrap.b32 	%r14109, %r14103, %r14102, 23;
	mov.b64 	%rd3359, {%r14109, %r14108};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	xor.b64  	%rd3361, %rd3320, %rd3296;
	and.b64  	%rd3362, %rd3344, %rd3361;
	xor.b64  	%rd3363, %rd3362, %rd3296;
	add.s64 	%rd3364, %rd3056, %rd40;
	add.s64 	%rd3365, %rd3364, %rd3272;
	add.s64 	%rd3366, %rd3365, %rd3363;
	add.s64 	%rd3367, %rd3366, %rd3360;
	add.s64 	%rd3368, %rd3367, %rd3283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14110,%dummy}, %rd3355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14111}, %rd3355;
	}
	shf.r.wrap.b32 	%r14112, %r14111, %r14110, 28;
	shf.r.wrap.b32 	%r14113, %r14110, %r14111, 28;
	mov.b64 	%rd3369, {%r14113, %r14112};
	shf.l.wrap.b32 	%r14114, %r14110, %r14111, 30;
	shf.l.wrap.b32 	%r14115, %r14111, %r14110, 30;
	mov.b64 	%rd3370, {%r14115, %r14114};
	xor.b64  	%rd3371, %rd3370, %rd3369;
	shf.l.wrap.b32 	%r14116, %r14110, %r14111, 25;
	shf.l.wrap.b32 	%r14117, %r14111, %r14110, 25;
	mov.b64 	%rd3372, {%r14117, %r14116};
	xor.b64  	%rd3373, %rd3371, %rd3372;
	and.b64  	%rd3374, %rd3355, %rd3331;
	xor.b64  	%rd3375, %rd3355, %rd3331;
	and.b64  	%rd3376, %rd3375, %rd3307;
	or.b64  	%rd3377, %rd3376, %rd3374;
	add.s64 	%rd3378, %rd3367, %rd3377;
	add.s64 	%rd3379, %rd3378, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14118,%dummy}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14119}, %rd3368;
	}
	shf.r.wrap.b32 	%r14120, %r14119, %r14118, 14;
	shf.r.wrap.b32 	%r14121, %r14118, %r14119, 14;
	mov.b64 	%rd3380, {%r14121, %r14120};
	shf.r.wrap.b32 	%r14122, %r14119, %r14118, 18;
	shf.r.wrap.b32 	%r14123, %r14118, %r14119, 18;
	mov.b64 	%rd3381, {%r14123, %r14122};
	xor.b64  	%rd3382, %rd3381, %rd3380;
	shf.l.wrap.b32 	%r14124, %r14118, %r14119, 23;
	shf.l.wrap.b32 	%r14125, %r14119, %r14118, 23;
	mov.b64 	%rd3383, {%r14125, %r14124};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	xor.b64  	%rd3385, %rd3344, %rd3320;
	and.b64  	%rd3386, %rd3368, %rd3385;
	xor.b64  	%rd3387, %rd3386, %rd3320;
	add.s64 	%rd3388, %rd3057, %rd41;
	add.s64 	%rd3389, %rd3388, %rd3296;
	add.s64 	%rd3390, %rd3389, %rd3387;
	add.s64 	%rd3391, %rd3390, %rd3384;
	add.s64 	%rd3392, %rd3391, %rd3307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14126,%dummy}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14127}, %rd3379;
	}
	shf.r.wrap.b32 	%r14128, %r14127, %r14126, 28;
	shf.r.wrap.b32 	%r14129, %r14126, %r14127, 28;
	mov.b64 	%rd3393, {%r14129, %r14128};
	shf.l.wrap.b32 	%r14130, %r14126, %r14127, 30;
	shf.l.wrap.b32 	%r14131, %r14127, %r14126, 30;
	mov.b64 	%rd3394, {%r14131, %r14130};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	shf.l.wrap.b32 	%r14132, %r14126, %r14127, 25;
	shf.l.wrap.b32 	%r14133, %r14127, %r14126, 25;
	mov.b64 	%rd3396, {%r14133, %r14132};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	and.b64  	%rd3398, %rd3379, %rd3355;
	xor.b64  	%rd3399, %rd3379, %rd3355;
	and.b64  	%rd3400, %rd3399, %rd3331;
	or.b64  	%rd3401, %rd3400, %rd3398;
	add.s64 	%rd3402, %rd3391, %rd3401;
	add.s64 	%rd3403, %rd3402, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14134,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14135}, %rd3392;
	}
	shf.r.wrap.b32 	%r14136, %r14135, %r14134, 14;
	shf.r.wrap.b32 	%r14137, %r14134, %r14135, 14;
	mov.b64 	%rd3404, {%r14137, %r14136};
	shf.r.wrap.b32 	%r14138, %r14135, %r14134, 18;
	shf.r.wrap.b32 	%r14139, %r14134, %r14135, 18;
	mov.b64 	%rd3405, {%r14139, %r14138};
	xor.b64  	%rd3406, %rd3405, %rd3404;
	shf.l.wrap.b32 	%r14140, %r14134, %r14135, 23;
	shf.l.wrap.b32 	%r14141, %r14135, %r14134, 23;
	mov.b64 	%rd3407, {%r14141, %r14140};
	xor.b64  	%rd3408, %rd3406, %rd3407;
	xor.b64  	%rd3409, %rd3368, %rd3344;
	and.b64  	%rd3410, %rd3392, %rd3409;
	xor.b64  	%rd3411, %rd3410, %rd3344;
	add.s64 	%rd3412, %rd3058, %rd42;
	add.s64 	%rd3413, %rd3412, %rd3320;
	add.s64 	%rd3414, %rd3413, %rd3411;
	add.s64 	%rd3415, %rd3414, %rd3408;
	add.s64 	%rd3416, %rd3415, %rd3331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14142,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14143}, %rd3403;
	}
	shf.r.wrap.b32 	%r14144, %r14143, %r14142, 28;
	shf.r.wrap.b32 	%r14145, %r14142, %r14143, 28;
	mov.b64 	%rd3417, {%r14145, %r14144};
	shf.l.wrap.b32 	%r14146, %r14142, %r14143, 30;
	shf.l.wrap.b32 	%r14147, %r14143, %r14142, 30;
	mov.b64 	%rd3418, {%r14147, %r14146};
	xor.b64  	%rd3419, %rd3418, %rd3417;
	shf.l.wrap.b32 	%r14148, %r14142, %r14143, 25;
	shf.l.wrap.b32 	%r14149, %r14143, %r14142, 25;
	mov.b64 	%rd3420, {%r14149, %r14148};
	xor.b64  	%rd3421, %rd3419, %rd3420;
	and.b64  	%rd3422, %rd3403, %rd3379;
	xor.b64  	%rd3423, %rd3403, %rd3379;
	and.b64  	%rd3424, %rd3423, %rd3355;
	or.b64  	%rd3425, %rd3424, %rd3422;
	add.s64 	%rd3426, %rd3415, %rd3425;
	add.s64 	%rd3427, %rd3426, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14150,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14151}, %rd3416;
	}
	shf.r.wrap.b32 	%r14152, %r14151, %r14150, 14;
	shf.r.wrap.b32 	%r14153, %r14150, %r14151, 14;
	mov.b64 	%rd3428, {%r14153, %r14152};
	shf.r.wrap.b32 	%r14154, %r14151, %r14150, 18;
	shf.r.wrap.b32 	%r14155, %r14150, %r14151, 18;
	mov.b64 	%rd3429, {%r14155, %r14154};
	xor.b64  	%rd3430, %rd3429, %rd3428;
	shf.l.wrap.b32 	%r14156, %r14150, %r14151, 23;
	shf.l.wrap.b32 	%r14157, %r14151, %r14150, 23;
	mov.b64 	%rd3431, {%r14157, %r14156};
	xor.b64  	%rd3432, %rd3430, %rd3431;
	xor.b64  	%rd3433, %rd3392, %rd3368;
	and.b64  	%rd3434, %rd3416, %rd3433;
	xor.b64  	%rd3435, %rd3434, %rd3368;
	add.s64 	%rd3436, %rd3059, %rd43;
	add.s64 	%rd3437, %rd3436, %rd3344;
	add.s64 	%rd3438, %rd3437, %rd3435;
	add.s64 	%rd3439, %rd3438, %rd3432;
	add.s64 	%rd3440, %rd3439, %rd3355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14158,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14159}, %rd3427;
	}
	shf.r.wrap.b32 	%r14160, %r14159, %r14158, 28;
	shf.r.wrap.b32 	%r14161, %r14158, %r14159, 28;
	mov.b64 	%rd3441, {%r14161, %r14160};
	shf.l.wrap.b32 	%r14162, %r14158, %r14159, 30;
	shf.l.wrap.b32 	%r14163, %r14159, %r14158, 30;
	mov.b64 	%rd3442, {%r14163, %r14162};
	xor.b64  	%rd3443, %rd3442, %rd3441;
	shf.l.wrap.b32 	%r14164, %r14158, %r14159, 25;
	shf.l.wrap.b32 	%r14165, %r14159, %r14158, 25;
	mov.b64 	%rd3444, {%r14165, %r14164};
	xor.b64  	%rd3445, %rd3443, %rd3444;
	and.b64  	%rd3446, %rd3427, %rd3403;
	xor.b64  	%rd3447, %rd3427, %rd3403;
	and.b64  	%rd3448, %rd3447, %rd3379;
	or.b64  	%rd3449, %rd3448, %rd3446;
	add.s64 	%rd3450, %rd3439, %rd3449;
	add.s64 	%rd3451, %rd3450, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14166,%dummy}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14167}, %rd3058;
	}
	shf.r.wrap.b32 	%r14168, %r14167, %r14166, 19;
	shf.r.wrap.b32 	%r14169, %r14166, %r14167, 19;
	mov.b64 	%rd3452, {%r14169, %r14168};
	shf.l.wrap.b32 	%r14170, %r14166, %r14167, 3;
	shf.l.wrap.b32 	%r14171, %r14167, %r14166, 3;
	mov.b64 	%rd3453, {%r14171, %r14170};
	shr.u64 	%rd3454, %rd3058, 6;
	xor.b64  	%rd3455, %rd3452, %rd3454;
	xor.b64  	%rd3456, %rd3455, %rd3453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14172,%dummy}, %rd3045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14173}, %rd3045;
	}
	shf.r.wrap.b32 	%r14174, %r14173, %r14172, 1;
	shf.r.wrap.b32 	%r14175, %r14172, %r14173, 1;
	mov.b64 	%rd3457, {%r14175, %r14174};
	shf.r.wrap.b32 	%r14176, %r14173, %r14172, 8;
	shf.r.wrap.b32 	%r14177, %r14172, %r14173, 8;
	mov.b64 	%rd3458, {%r14177, %r14176};
	shr.u64 	%rd3459, %rd3045, 7;
	xor.b64  	%rd3460, %rd3457, %rd3459;
	xor.b64  	%rd3461, %rd3460, %rd3458;
	add.s64 	%rd3462, %rd3053, %rd3044;
	add.s64 	%rd3463, %rd3462, %rd3456;
	add.s64 	%rd3464, %rd3463, %rd3461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14178,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14179}, %rd3059;
	}
	shf.r.wrap.b32 	%r14180, %r14179, %r14178, 19;
	shf.r.wrap.b32 	%r14181, %r14178, %r14179, 19;
	mov.b64 	%rd3465, {%r14181, %r14180};
	shf.l.wrap.b32 	%r14182, %r14178, %r14179, 3;
	shf.l.wrap.b32 	%r14183, %r14179, %r14178, 3;
	mov.b64 	%rd3466, {%r14183, %r14182};
	shr.u64 	%rd3467, %rd3059, 6;
	xor.b64  	%rd3468, %rd3465, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14184,%dummy}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14185}, %rd3046;
	}
	shf.r.wrap.b32 	%r14186, %r14185, %r14184, 1;
	shf.r.wrap.b32 	%r14187, %r14184, %r14185, 1;
	mov.b64 	%rd3470, {%r14187, %r14186};
	shf.r.wrap.b32 	%r14188, %r14185, %r14184, 8;
	shf.r.wrap.b32 	%r14189, %r14184, %r14185, 8;
	mov.b64 	%rd3471, {%r14189, %r14188};
	shr.u64 	%rd3472, %rd3046, 7;
	xor.b64  	%rd3473, %rd3470, %rd3472;
	xor.b64  	%rd3474, %rd3473, %rd3471;
	add.s64 	%rd3475, %rd3054, %rd3045;
	add.s64 	%rd3476, %rd3475, %rd3469;
	add.s64 	%rd3477, %rd3476, %rd3474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14190,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14191}, %rd3464;
	}
	shf.r.wrap.b32 	%r14192, %r14191, %r14190, 19;
	shf.r.wrap.b32 	%r14193, %r14190, %r14191, 19;
	mov.b64 	%rd3478, {%r14193, %r14192};
	shf.l.wrap.b32 	%r14194, %r14190, %r14191, 3;
	shf.l.wrap.b32 	%r14195, %r14191, %r14190, 3;
	mov.b64 	%rd3479, {%r14195, %r14194};
	shr.u64 	%rd3480, %rd3464, 6;
	xor.b64  	%rd3481, %rd3478, %rd3480;
	xor.b64  	%rd3482, %rd3481, %rd3479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14196,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14197}, %rd3047;
	}
	shf.r.wrap.b32 	%r14198, %r14197, %r14196, 1;
	shf.r.wrap.b32 	%r14199, %r14196, %r14197, 1;
	mov.b64 	%rd3483, {%r14199, %r14198};
	shf.r.wrap.b32 	%r14200, %r14197, %r14196, 8;
	shf.r.wrap.b32 	%r14201, %r14196, %r14197, 8;
	mov.b64 	%rd3484, {%r14201, %r14200};
	shr.u64 	%rd3485, %rd3047, 7;
	xor.b64  	%rd3486, %rd3483, %rd3485;
	xor.b64  	%rd3487, %rd3486, %rd3484;
	add.s64 	%rd3488, %rd3055, %rd3046;
	add.s64 	%rd3489, %rd3488, %rd3482;
	add.s64 	%rd3490, %rd3489, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14202,%dummy}, %rd3477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14203}, %rd3477;
	}
	shf.r.wrap.b32 	%r14204, %r14203, %r14202, 19;
	shf.r.wrap.b32 	%r14205, %r14202, %r14203, 19;
	mov.b64 	%rd3491, {%r14205, %r14204};
	shf.l.wrap.b32 	%r14206, %r14202, %r14203, 3;
	shf.l.wrap.b32 	%r14207, %r14203, %r14202, 3;
	mov.b64 	%rd3492, {%r14207, %r14206};
	shr.u64 	%rd3493, %rd3477, 6;
	xor.b64  	%rd3494, %rd3491, %rd3493;
	xor.b64  	%rd3495, %rd3494, %rd3492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14208,%dummy}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14209}, %rd3048;
	}
	shf.r.wrap.b32 	%r14210, %r14209, %r14208, 1;
	shf.r.wrap.b32 	%r14211, %r14208, %r14209, 1;
	mov.b64 	%rd3496, {%r14211, %r14210};
	shf.r.wrap.b32 	%r14212, %r14209, %r14208, 8;
	shf.r.wrap.b32 	%r14213, %r14208, %r14209, 8;
	mov.b64 	%rd3497, {%r14213, %r14212};
	shr.u64 	%rd3498, %rd3048, 7;
	xor.b64  	%rd3499, %rd3496, %rd3498;
	xor.b64  	%rd3500, %rd3499, %rd3497;
	add.s64 	%rd3501, %rd3056, %rd3047;
	add.s64 	%rd3502, %rd3501, %rd3495;
	add.s64 	%rd3503, %rd3502, %rd3500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14214,%dummy}, %rd3490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14215}, %rd3490;
	}
	shf.r.wrap.b32 	%r14216, %r14215, %r14214, 19;
	shf.r.wrap.b32 	%r14217, %r14214, %r14215, 19;
	mov.b64 	%rd3504, {%r14217, %r14216};
	shf.l.wrap.b32 	%r14218, %r14214, %r14215, 3;
	shf.l.wrap.b32 	%r14219, %r14215, %r14214, 3;
	mov.b64 	%rd3505, {%r14219, %r14218};
	shr.u64 	%rd3506, %rd3490, 6;
	xor.b64  	%rd3507, %rd3504, %rd3506;
	xor.b64  	%rd3508, %rd3507, %rd3505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14220,%dummy}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14221}, %rd3049;
	}
	shf.r.wrap.b32 	%r14222, %r14221, %r14220, 1;
	shf.r.wrap.b32 	%r14223, %r14220, %r14221, 1;
	mov.b64 	%rd3509, {%r14223, %r14222};
	shf.r.wrap.b32 	%r14224, %r14221, %r14220, 8;
	shf.r.wrap.b32 	%r14225, %r14220, %r14221, 8;
	mov.b64 	%rd3510, {%r14225, %r14224};
	shr.u64 	%rd3511, %rd3049, 7;
	xor.b64  	%rd3512, %rd3509, %rd3511;
	xor.b64  	%rd3513, %rd3512, %rd3510;
	add.s64 	%rd3514, %rd3057, %rd3048;
	add.s64 	%rd3515, %rd3514, %rd3508;
	add.s64 	%rd3516, %rd3515, %rd3513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14226,%dummy}, %rd3503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14227}, %rd3503;
	}
	shf.r.wrap.b32 	%r14228, %r14227, %r14226, 19;
	shf.r.wrap.b32 	%r14229, %r14226, %r14227, 19;
	mov.b64 	%rd3517, {%r14229, %r14228};
	shf.l.wrap.b32 	%r14230, %r14226, %r14227, 3;
	shf.l.wrap.b32 	%r14231, %r14227, %r14226, 3;
	mov.b64 	%rd3518, {%r14231, %r14230};
	shr.u64 	%rd3519, %rd3503, 6;
	xor.b64  	%rd3520, %rd3517, %rd3519;
	xor.b64  	%rd3521, %rd3520, %rd3518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14232,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14233}, %rd3050;
	}
	shf.r.wrap.b32 	%r14234, %r14233, %r14232, 1;
	shf.r.wrap.b32 	%r14235, %r14232, %r14233, 1;
	mov.b64 	%rd3522, {%r14235, %r14234};
	shf.r.wrap.b32 	%r14236, %r14233, %r14232, 8;
	shf.r.wrap.b32 	%r14237, %r14232, %r14233, 8;
	mov.b64 	%rd3523, {%r14237, %r14236};
	shr.u64 	%rd3524, %rd3050, 7;
	xor.b64  	%rd3525, %rd3522, %rd3524;
	xor.b64  	%rd3526, %rd3525, %rd3523;
	add.s64 	%rd3527, %rd3058, %rd3049;
	add.s64 	%rd3528, %rd3527, %rd3521;
	add.s64 	%rd3529, %rd3528, %rd3526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14238,%dummy}, %rd3516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14239}, %rd3516;
	}
	shf.r.wrap.b32 	%r14240, %r14239, %r14238, 19;
	shf.r.wrap.b32 	%r14241, %r14238, %r14239, 19;
	mov.b64 	%rd3530, {%r14241, %r14240};
	shf.l.wrap.b32 	%r14242, %r14238, %r14239, 3;
	shf.l.wrap.b32 	%r14243, %r14239, %r14238, 3;
	mov.b64 	%rd3531, {%r14243, %r14242};
	shr.u64 	%rd3532, %rd3516, 6;
	xor.b64  	%rd3533, %rd3530, %rd3532;
	xor.b64  	%rd3534, %rd3533, %rd3531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14244,%dummy}, %rd3051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14245}, %rd3051;
	}
	shf.r.wrap.b32 	%r14246, %r14245, %r14244, 1;
	shf.r.wrap.b32 	%r14247, %r14244, %r14245, 1;
	mov.b64 	%rd3535, {%r14247, %r14246};
	shf.r.wrap.b32 	%r14248, %r14245, %r14244, 8;
	shf.r.wrap.b32 	%r14249, %r14244, %r14245, 8;
	mov.b64 	%rd3536, {%r14249, %r14248};
	shr.u64 	%rd3537, %rd3051, 7;
	xor.b64  	%rd3538, %rd3535, %rd3537;
	xor.b64  	%rd3539, %rd3538, %rd3536;
	add.s64 	%rd3540, %rd3059, %rd3050;
	add.s64 	%rd3541, %rd3540, %rd3534;
	add.s64 	%rd3542, %rd3541, %rd3539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14250,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14251}, %rd3529;
	}
	shf.r.wrap.b32 	%r14252, %r14251, %r14250, 19;
	shf.r.wrap.b32 	%r14253, %r14250, %r14251, 19;
	mov.b64 	%rd3543, {%r14253, %r14252};
	shf.l.wrap.b32 	%r14254, %r14250, %r14251, 3;
	shf.l.wrap.b32 	%r14255, %r14251, %r14250, 3;
	mov.b64 	%rd3544, {%r14255, %r14254};
	shr.u64 	%rd3545, %rd3529, 6;
	xor.b64  	%rd3546, %rd3543, %rd3545;
	xor.b64  	%rd3547, %rd3546, %rd3544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14256,%dummy}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14257}, %rd3052;
	}
	shf.r.wrap.b32 	%r14258, %r14257, %r14256, 1;
	shf.r.wrap.b32 	%r14259, %r14256, %r14257, 1;
	mov.b64 	%rd3548, {%r14259, %r14258};
	shf.r.wrap.b32 	%r14260, %r14257, %r14256, 8;
	shf.r.wrap.b32 	%r14261, %r14256, %r14257, 8;
	mov.b64 	%rd3549, {%r14261, %r14260};
	shr.u64 	%rd3550, %rd3052, 7;
	xor.b64  	%rd3551, %rd3548, %rd3550;
	xor.b64  	%rd3552, %rd3551, %rd3549;
	add.s64 	%rd3553, %rd3464, %rd3051;
	add.s64 	%rd3554, %rd3553, %rd3547;
	add.s64 	%rd3555, %rd3554, %rd3552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14262,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14263}, %rd3542;
	}
	shf.r.wrap.b32 	%r14264, %r14263, %r14262, 19;
	shf.r.wrap.b32 	%r14265, %r14262, %r14263, 19;
	mov.b64 	%rd3556, {%r14265, %r14264};
	shf.l.wrap.b32 	%r14266, %r14262, %r14263, 3;
	shf.l.wrap.b32 	%r14267, %r14263, %r14262, 3;
	mov.b64 	%rd3557, {%r14267, %r14266};
	shr.u64 	%rd3558, %rd3542, 6;
	xor.b64  	%rd3559, %rd3556, %rd3558;
	xor.b64  	%rd3560, %rd3559, %rd3557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14268,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14269}, %rd3053;
	}
	shf.r.wrap.b32 	%r14270, %r14269, %r14268, 1;
	shf.r.wrap.b32 	%r14271, %r14268, %r14269, 1;
	mov.b64 	%rd3561, {%r14271, %r14270};
	shf.r.wrap.b32 	%r14272, %r14269, %r14268, 8;
	shf.r.wrap.b32 	%r14273, %r14268, %r14269, 8;
	mov.b64 	%rd3562, {%r14273, %r14272};
	shr.u64 	%rd3563, %rd3053, 7;
	xor.b64  	%rd3564, %rd3561, %rd3563;
	xor.b64  	%rd3565, %rd3564, %rd3562;
	add.s64 	%rd3566, %rd3477, %rd3052;
	add.s64 	%rd3567, %rd3566, %rd3560;
	add.s64 	%rd3568, %rd3567, %rd3565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14274,%dummy}, %rd3555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14275}, %rd3555;
	}
	shf.r.wrap.b32 	%r14276, %r14275, %r14274, 19;
	shf.r.wrap.b32 	%r14277, %r14274, %r14275, 19;
	mov.b64 	%rd3569, {%r14277, %r14276};
	shf.l.wrap.b32 	%r14278, %r14274, %r14275, 3;
	shf.l.wrap.b32 	%r14279, %r14275, %r14274, 3;
	mov.b64 	%rd3570, {%r14279, %r14278};
	shr.u64 	%rd3571, %rd3555, 6;
	xor.b64  	%rd3572, %rd3569, %rd3571;
	xor.b64  	%rd3573, %rd3572, %rd3570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14280,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14281}, %rd3054;
	}
	shf.r.wrap.b32 	%r14282, %r14281, %r14280, 1;
	shf.r.wrap.b32 	%r14283, %r14280, %r14281, 1;
	mov.b64 	%rd3574, {%r14283, %r14282};
	shf.r.wrap.b32 	%r14284, %r14281, %r14280, 8;
	shf.r.wrap.b32 	%r14285, %r14280, %r14281, 8;
	mov.b64 	%rd3575, {%r14285, %r14284};
	shr.u64 	%rd3576, %rd3054, 7;
	xor.b64  	%rd3577, %rd3574, %rd3576;
	xor.b64  	%rd3578, %rd3577, %rd3575;
	add.s64 	%rd3579, %rd3490, %rd3053;
	add.s64 	%rd3580, %rd3579, %rd3573;
	add.s64 	%rd3581, %rd3580, %rd3578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14286,%dummy}, %rd3568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14287}, %rd3568;
	}
	shf.r.wrap.b32 	%r14288, %r14287, %r14286, 19;
	shf.r.wrap.b32 	%r14289, %r14286, %r14287, 19;
	mov.b64 	%rd3582, {%r14289, %r14288};
	shf.l.wrap.b32 	%r14290, %r14286, %r14287, 3;
	shf.l.wrap.b32 	%r14291, %r14287, %r14286, 3;
	mov.b64 	%rd3583, {%r14291, %r14290};
	shr.u64 	%rd3584, %rd3568, 6;
	xor.b64  	%rd3585, %rd3582, %rd3584;
	xor.b64  	%rd3586, %rd3585, %rd3583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14292,%dummy}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14293}, %rd3055;
	}
	shf.r.wrap.b32 	%r14294, %r14293, %r14292, 1;
	shf.r.wrap.b32 	%r14295, %r14292, %r14293, 1;
	mov.b64 	%rd3587, {%r14295, %r14294};
	shf.r.wrap.b32 	%r14296, %r14293, %r14292, 8;
	shf.r.wrap.b32 	%r14297, %r14292, %r14293, 8;
	mov.b64 	%rd3588, {%r14297, %r14296};
	shr.u64 	%rd3589, %rd3055, 7;
	xor.b64  	%rd3590, %rd3587, %rd3589;
	xor.b64  	%rd3591, %rd3590, %rd3588;
	add.s64 	%rd3592, %rd3503, %rd3054;
	add.s64 	%rd3593, %rd3592, %rd3586;
	add.s64 	%rd3594, %rd3593, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14298,%dummy}, %rd3581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14299}, %rd3581;
	}
	shf.r.wrap.b32 	%r14300, %r14299, %r14298, 19;
	shf.r.wrap.b32 	%r14301, %r14298, %r14299, 19;
	mov.b64 	%rd3595, {%r14301, %r14300};
	shf.l.wrap.b32 	%r14302, %r14298, %r14299, 3;
	shf.l.wrap.b32 	%r14303, %r14299, %r14298, 3;
	mov.b64 	%rd3596, {%r14303, %r14302};
	shr.u64 	%rd3597, %rd3581, 6;
	xor.b64  	%rd3598, %rd3595, %rd3597;
	xor.b64  	%rd3599, %rd3598, %rd3596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14304,%dummy}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14305}, %rd3056;
	}
	shf.r.wrap.b32 	%r14306, %r14305, %r14304, 1;
	shf.r.wrap.b32 	%r14307, %r14304, %r14305, 1;
	mov.b64 	%rd3600, {%r14307, %r14306};
	shf.r.wrap.b32 	%r14308, %r14305, %r14304, 8;
	shf.r.wrap.b32 	%r14309, %r14304, %r14305, 8;
	mov.b64 	%rd3601, {%r14309, %r14308};
	shr.u64 	%rd3602, %rd3056, 7;
	xor.b64  	%rd3603, %rd3600, %rd3602;
	xor.b64  	%rd3604, %rd3603, %rd3601;
	add.s64 	%rd3605, %rd3516, %rd3055;
	add.s64 	%rd3606, %rd3605, %rd3599;
	add.s64 	%rd3607, %rd3606, %rd3604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14310,%dummy}, %rd3594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14311}, %rd3594;
	}
	shf.r.wrap.b32 	%r14312, %r14311, %r14310, 19;
	shf.r.wrap.b32 	%r14313, %r14310, %r14311, 19;
	mov.b64 	%rd3608, {%r14313, %r14312};
	shf.l.wrap.b32 	%r14314, %r14310, %r14311, 3;
	shf.l.wrap.b32 	%r14315, %r14311, %r14310, 3;
	mov.b64 	%rd3609, {%r14315, %r14314};
	shr.u64 	%rd3610, %rd3594, 6;
	xor.b64  	%rd3611, %rd3608, %rd3610;
	xor.b64  	%rd3612, %rd3611, %rd3609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14316,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14317}, %rd3057;
	}
	shf.r.wrap.b32 	%r14318, %r14317, %r14316, 1;
	shf.r.wrap.b32 	%r14319, %r14316, %r14317, 1;
	mov.b64 	%rd3613, {%r14319, %r14318};
	shf.r.wrap.b32 	%r14320, %r14317, %r14316, 8;
	shf.r.wrap.b32 	%r14321, %r14316, %r14317, 8;
	mov.b64 	%rd3614, {%r14321, %r14320};
	shr.u64 	%rd3615, %rd3057, 7;
	xor.b64  	%rd3616, %rd3613, %rd3615;
	xor.b64  	%rd3617, %rd3616, %rd3614;
	add.s64 	%rd3618, %rd3529, %rd3056;
	add.s64 	%rd3619, %rd3618, %rd3612;
	add.s64 	%rd3620, %rd3619, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14322,%dummy}, %rd3607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14323}, %rd3607;
	}
	shf.r.wrap.b32 	%r14324, %r14323, %r14322, 19;
	shf.r.wrap.b32 	%r14325, %r14322, %r14323, 19;
	mov.b64 	%rd3621, {%r14325, %r14324};
	shf.l.wrap.b32 	%r14326, %r14322, %r14323, 3;
	shf.l.wrap.b32 	%r14327, %r14323, %r14322, 3;
	mov.b64 	%rd3622, {%r14327, %r14326};
	shr.u64 	%rd3623, %rd3607, 6;
	xor.b64  	%rd3624, %rd3621, %rd3623;
	xor.b64  	%rd3625, %rd3624, %rd3622;
	shf.r.wrap.b32 	%r14328, %r14167, %r14166, 1;
	shf.r.wrap.b32 	%r14329, %r14166, %r14167, 1;
	mov.b64 	%rd3626, {%r14329, %r14328};
	shf.r.wrap.b32 	%r14330, %r14167, %r14166, 8;
	shf.r.wrap.b32 	%r14331, %r14166, %r14167, 8;
	mov.b64 	%rd3627, {%r14331, %r14330};
	shr.u64 	%rd3628, %rd3058, 7;
	xor.b64  	%rd3629, %rd3626, %rd3628;
	xor.b64  	%rd3630, %rd3629, %rd3627;
	add.s64 	%rd3631, %rd3542, %rd3057;
	add.s64 	%rd3632, %rd3631, %rd3625;
	add.s64 	%rd3633, %rd3632, %rd3630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14332,%dummy}, %rd3620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14333}, %rd3620;
	}
	shf.r.wrap.b32 	%r14334, %r14333, %r14332, 19;
	shf.r.wrap.b32 	%r14335, %r14332, %r14333, 19;
	mov.b64 	%rd3634, {%r14335, %r14334};
	shf.l.wrap.b32 	%r14336, %r14332, %r14333, 3;
	shf.l.wrap.b32 	%r14337, %r14333, %r14332, 3;
	mov.b64 	%rd3635, {%r14337, %r14336};
	shr.u64 	%rd3636, %rd3620, 6;
	xor.b64  	%rd3637, %rd3634, %rd3636;
	xor.b64  	%rd3638, %rd3637, %rd3635;
	shf.r.wrap.b32 	%r14338, %r14179, %r14178, 1;
	shf.r.wrap.b32 	%r14339, %r14178, %r14179, 1;
	mov.b64 	%rd3639, {%r14339, %r14338};
	shf.r.wrap.b32 	%r14340, %r14179, %r14178, 8;
	shf.r.wrap.b32 	%r14341, %r14178, %r14179, 8;
	mov.b64 	%rd3640, {%r14341, %r14340};
	shr.u64 	%rd3641, %rd3059, 7;
	xor.b64  	%rd3642, %rd3639, %rd3641;
	xor.b64  	%rd3643, %rd3642, %rd3640;
	add.s64 	%rd3644, %rd3555, %rd3058;
	add.s64 	%rd3645, %rd3644, %rd3638;
	add.s64 	%rd3646, %rd3645, %rd3643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14342,%dummy}, %rd3633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14343}, %rd3633;
	}
	shf.r.wrap.b32 	%r14344, %r14343, %r14342, 19;
	shf.r.wrap.b32 	%r14345, %r14342, %r14343, 19;
	mov.b64 	%rd3647, {%r14345, %r14344};
	shf.l.wrap.b32 	%r14346, %r14342, %r14343, 3;
	shf.l.wrap.b32 	%r14347, %r14343, %r14342, 3;
	mov.b64 	%rd3648, {%r14347, %r14346};
	shr.u64 	%rd3649, %rd3633, 6;
	xor.b64  	%rd3650, %rd3647, %rd3649;
	xor.b64  	%rd3651, %rd3650, %rd3648;
	shf.r.wrap.b32 	%r14348, %r14191, %r14190, 1;
	shf.r.wrap.b32 	%r14349, %r14190, %r14191, 1;
	mov.b64 	%rd3652, {%r14349, %r14348};
	shf.r.wrap.b32 	%r14350, %r14191, %r14190, 8;
	shf.r.wrap.b32 	%r14351, %r14190, %r14191, 8;
	mov.b64 	%rd3653, {%r14351, %r14350};
	shr.u64 	%rd3654, %rd3464, 7;
	xor.b64  	%rd3655, %rd3652, %rd3654;
	xor.b64  	%rd3656, %rd3655, %rd3653;
	add.s64 	%rd3657, %rd3568, %rd3059;
	add.s64 	%rd3658, %rd3657, %rd3651;
	add.s64 	%rd3659, %rd3658, %rd3656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14352,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14353}, %rd3440;
	}
	shf.r.wrap.b32 	%r14354, %r14353, %r14352, 14;
	shf.r.wrap.b32 	%r14355, %r14352, %r14353, 14;
	mov.b64 	%rd3660, {%r14355, %r14354};
	shf.r.wrap.b32 	%r14356, %r14353, %r14352, 18;
	shf.r.wrap.b32 	%r14357, %r14352, %r14353, 18;
	mov.b64 	%rd3661, {%r14357, %r14356};
	xor.b64  	%rd3662, %rd3661, %rd3660;
	shf.l.wrap.b32 	%r14358, %r14352, %r14353, 23;
	shf.l.wrap.b32 	%r14359, %r14353, %r14352, 23;
	mov.b64 	%rd3663, {%r14359, %r14358};
	xor.b64  	%rd3664, %rd3662, %rd3663;
	xor.b64  	%rd3665, %rd3416, %rd3392;
	and.b64  	%rd3666, %rd3440, %rd3665;
	xor.b64  	%rd3667, %rd3666, %rd3392;
	add.s64 	%rd3668, %rd3667, %rd3368;
	add.s64 	%rd3669, %rd3668, %rd3464;
	add.s64 	%rd3670, %rd3669, %rd44;
	add.s64 	%rd3671, %rd3670, %rd3664;
	add.s64 	%rd3672, %rd3671, %rd3379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14360,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14361}, %rd3451;
	}
	shf.r.wrap.b32 	%r14362, %r14361, %r14360, 28;
	shf.r.wrap.b32 	%r14363, %r14360, %r14361, 28;
	mov.b64 	%rd3673, {%r14363, %r14362};
	shf.l.wrap.b32 	%r14364, %r14360, %r14361, 30;
	shf.l.wrap.b32 	%r14365, %r14361, %r14360, 30;
	mov.b64 	%rd3674, {%r14365, %r14364};
	xor.b64  	%rd3675, %rd3674, %rd3673;
	shf.l.wrap.b32 	%r14366, %r14360, %r14361, 25;
	shf.l.wrap.b32 	%r14367, %r14361, %r14360, 25;
	mov.b64 	%rd3676, {%r14367, %r14366};
	xor.b64  	%rd3677, %rd3675, %rd3676;
	and.b64  	%rd3678, %rd3451, %rd3427;
	xor.b64  	%rd3679, %rd3451, %rd3427;
	and.b64  	%rd3680, %rd3679, %rd3403;
	or.b64  	%rd3681, %rd3680, %rd3678;
	add.s64 	%rd3682, %rd3671, %rd3681;
	add.s64 	%rd3683, %rd3682, %rd3677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14368,%dummy}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14369}, %rd3672;
	}
	shf.r.wrap.b32 	%r14370, %r14369, %r14368, 14;
	shf.r.wrap.b32 	%r14371, %r14368, %r14369, 14;
	mov.b64 	%rd3684, {%r14371, %r14370};
	shf.r.wrap.b32 	%r14372, %r14369, %r14368, 18;
	shf.r.wrap.b32 	%r14373, %r14368, %r14369, 18;
	mov.b64 	%rd3685, {%r14373, %r14372};
	xor.b64  	%rd3686, %rd3685, %rd3684;
	shf.l.wrap.b32 	%r14374, %r14368, %r14369, 23;
	shf.l.wrap.b32 	%r14375, %r14369, %r14368, 23;
	mov.b64 	%rd3687, {%r14375, %r14374};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	xor.b64  	%rd3689, %rd3440, %rd3416;
	and.b64  	%rd3690, %rd3672, %rd3689;
	xor.b64  	%rd3691, %rd3690, %rd3416;
	add.s64 	%rd3692, %rd3477, %rd3392;
	add.s64 	%rd3693, %rd3692, %rd45;
	add.s64 	%rd3694, %rd3693, %rd3691;
	add.s64 	%rd3695, %rd3694, %rd3688;
	add.s64 	%rd3696, %rd3695, %rd3403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14376,%dummy}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14377}, %rd3683;
	}
	shf.r.wrap.b32 	%r14378, %r14377, %r14376, 28;
	shf.r.wrap.b32 	%r14379, %r14376, %r14377, 28;
	mov.b64 	%rd3697, {%r14379, %r14378};
	shf.l.wrap.b32 	%r14380, %r14376, %r14377, 30;
	shf.l.wrap.b32 	%r14381, %r14377, %r14376, 30;
	mov.b64 	%rd3698, {%r14381, %r14380};
	xor.b64  	%rd3699, %rd3698, %rd3697;
	shf.l.wrap.b32 	%r14382, %r14376, %r14377, 25;
	shf.l.wrap.b32 	%r14383, %r14377, %r14376, 25;
	mov.b64 	%rd3700, {%r14383, %r14382};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	and.b64  	%rd3702, %rd3683, %rd3451;
	xor.b64  	%rd3703, %rd3683, %rd3451;
	and.b64  	%rd3704, %rd3703, %rd3427;
	or.b64  	%rd3705, %rd3704, %rd3702;
	add.s64 	%rd3706, %rd3695, %rd3705;
	add.s64 	%rd3707, %rd3706, %rd3701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14384,%dummy}, %rd3696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14385}, %rd3696;
	}
	shf.r.wrap.b32 	%r14386, %r14385, %r14384, 14;
	shf.r.wrap.b32 	%r14387, %r14384, %r14385, 14;
	mov.b64 	%rd3708, {%r14387, %r14386};
	shf.r.wrap.b32 	%r14388, %r14385, %r14384, 18;
	shf.r.wrap.b32 	%r14389, %r14384, %r14385, 18;
	mov.b64 	%rd3709, {%r14389, %r14388};
	xor.b64  	%rd3710, %rd3709, %rd3708;
	shf.l.wrap.b32 	%r14390, %r14384, %r14385, 23;
	shf.l.wrap.b32 	%r14391, %r14385, %r14384, 23;
	mov.b64 	%rd3711, {%r14391, %r14390};
	xor.b64  	%rd3712, %rd3710, %rd3711;
	xor.b64  	%rd3713, %rd3672, %rd3440;
	and.b64  	%rd3714, %rd3696, %rd3713;
	xor.b64  	%rd3715, %rd3714, %rd3440;
	add.s64 	%rd3716, %rd3490, %rd3416;
	add.s64 	%rd3717, %rd3716, %rd46;
	add.s64 	%rd3718, %rd3717, %rd3715;
	add.s64 	%rd3719, %rd3718, %rd3712;
	add.s64 	%rd3720, %rd3719, %rd3427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14392,%dummy}, %rd3707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14393}, %rd3707;
	}
	shf.r.wrap.b32 	%r14394, %r14393, %r14392, 28;
	shf.r.wrap.b32 	%r14395, %r14392, %r14393, 28;
	mov.b64 	%rd3721, {%r14395, %r14394};
	shf.l.wrap.b32 	%r14396, %r14392, %r14393, 30;
	shf.l.wrap.b32 	%r14397, %r14393, %r14392, 30;
	mov.b64 	%rd3722, {%r14397, %r14396};
	xor.b64  	%rd3723, %rd3722, %rd3721;
	shf.l.wrap.b32 	%r14398, %r14392, %r14393, 25;
	shf.l.wrap.b32 	%r14399, %r14393, %r14392, 25;
	mov.b64 	%rd3724, {%r14399, %r14398};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	and.b64  	%rd3726, %rd3707, %rd3683;
	xor.b64  	%rd3727, %rd3707, %rd3683;
	and.b64  	%rd3728, %rd3727, %rd3451;
	or.b64  	%rd3729, %rd3728, %rd3726;
	add.s64 	%rd3730, %rd3719, %rd3729;
	add.s64 	%rd3731, %rd3730, %rd3725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14400,%dummy}, %rd3720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14401}, %rd3720;
	}
	shf.r.wrap.b32 	%r14402, %r14401, %r14400, 14;
	shf.r.wrap.b32 	%r14403, %r14400, %r14401, 14;
	mov.b64 	%rd3732, {%r14403, %r14402};
	shf.r.wrap.b32 	%r14404, %r14401, %r14400, 18;
	shf.r.wrap.b32 	%r14405, %r14400, %r14401, 18;
	mov.b64 	%rd3733, {%r14405, %r14404};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	shf.l.wrap.b32 	%r14406, %r14400, %r14401, 23;
	shf.l.wrap.b32 	%r14407, %r14401, %r14400, 23;
	mov.b64 	%rd3735, {%r14407, %r14406};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	xor.b64  	%rd3737, %rd3696, %rd3672;
	and.b64  	%rd3738, %rd3720, %rd3737;
	xor.b64  	%rd3739, %rd3738, %rd3672;
	add.s64 	%rd3740, %rd3503, %rd3440;
	add.s64 	%rd3741, %rd3740, %rd47;
	add.s64 	%rd3742, %rd3741, %rd3739;
	add.s64 	%rd3743, %rd3742, %rd3736;
	add.s64 	%rd3744, %rd3743, %rd3451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14408,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14409}, %rd3731;
	}
	shf.r.wrap.b32 	%r14410, %r14409, %r14408, 28;
	shf.r.wrap.b32 	%r14411, %r14408, %r14409, 28;
	mov.b64 	%rd3745, {%r14411, %r14410};
	shf.l.wrap.b32 	%r14412, %r14408, %r14409, 30;
	shf.l.wrap.b32 	%r14413, %r14409, %r14408, 30;
	mov.b64 	%rd3746, {%r14413, %r14412};
	xor.b64  	%rd3747, %rd3746, %rd3745;
	shf.l.wrap.b32 	%r14414, %r14408, %r14409, 25;
	shf.l.wrap.b32 	%r14415, %r14409, %r14408, 25;
	mov.b64 	%rd3748, {%r14415, %r14414};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	and.b64  	%rd3750, %rd3731, %rd3707;
	xor.b64  	%rd3751, %rd3731, %rd3707;
	and.b64  	%rd3752, %rd3751, %rd3683;
	or.b64  	%rd3753, %rd3752, %rd3750;
	add.s64 	%rd3754, %rd3743, %rd3753;
	add.s64 	%rd3755, %rd3754, %rd3749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14416,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14417}, %rd3744;
	}
	shf.r.wrap.b32 	%r14418, %r14417, %r14416, 14;
	shf.r.wrap.b32 	%r14419, %r14416, %r14417, 14;
	mov.b64 	%rd3756, {%r14419, %r14418};
	shf.r.wrap.b32 	%r14420, %r14417, %r14416, 18;
	shf.r.wrap.b32 	%r14421, %r14416, %r14417, 18;
	mov.b64 	%rd3757, {%r14421, %r14420};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	shf.l.wrap.b32 	%r14422, %r14416, %r14417, 23;
	shf.l.wrap.b32 	%r14423, %r14417, %r14416, 23;
	mov.b64 	%rd3759, {%r14423, %r14422};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	xor.b64  	%rd3761, %rd3720, %rd3696;
	and.b64  	%rd3762, %rd3744, %rd3761;
	xor.b64  	%rd3763, %rd3762, %rd3696;
	add.s64 	%rd3764, %rd3672, %rd3516;
	add.s64 	%rd3765, %rd3764, %rd48;
	add.s64 	%rd3766, %rd3765, %rd3763;
	add.s64 	%rd3767, %rd3766, %rd3760;
	add.s64 	%rd3768, %rd3767, %rd3683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14424,%dummy}, %rd3755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14425}, %rd3755;
	}
	shf.r.wrap.b32 	%r14426, %r14425, %r14424, 28;
	shf.r.wrap.b32 	%r14427, %r14424, %r14425, 28;
	mov.b64 	%rd3769, {%r14427, %r14426};
	shf.l.wrap.b32 	%r14428, %r14424, %r14425, 30;
	shf.l.wrap.b32 	%r14429, %r14425, %r14424, 30;
	mov.b64 	%rd3770, {%r14429, %r14428};
	xor.b64  	%rd3771, %rd3770, %rd3769;
	shf.l.wrap.b32 	%r14430, %r14424, %r14425, 25;
	shf.l.wrap.b32 	%r14431, %r14425, %r14424, 25;
	mov.b64 	%rd3772, {%r14431, %r14430};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	and.b64  	%rd3774, %rd3755, %rd3731;
	xor.b64  	%rd3775, %rd3755, %rd3731;
	and.b64  	%rd3776, %rd3775, %rd3707;
	or.b64  	%rd3777, %rd3776, %rd3774;
	add.s64 	%rd3778, %rd3767, %rd3777;
	add.s64 	%rd3779, %rd3778, %rd3773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14432,%dummy}, %rd3768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14433}, %rd3768;
	}
	shf.r.wrap.b32 	%r14434, %r14433, %r14432, 14;
	shf.r.wrap.b32 	%r14435, %r14432, %r14433, 14;
	mov.b64 	%rd3780, {%r14435, %r14434};
	shf.r.wrap.b32 	%r14436, %r14433, %r14432, 18;
	shf.r.wrap.b32 	%r14437, %r14432, %r14433, 18;
	mov.b64 	%rd3781, {%r14437, %r14436};
	xor.b64  	%rd3782, %rd3781, %rd3780;
	shf.l.wrap.b32 	%r14438, %r14432, %r14433, 23;
	shf.l.wrap.b32 	%r14439, %r14433, %r14432, 23;
	mov.b64 	%rd3783, {%r14439, %r14438};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	xor.b64  	%rd3785, %rd3744, %rd3720;
	and.b64  	%rd3786, %rd3768, %rd3785;
	xor.b64  	%rd3787, %rd3786, %rd3720;
	add.s64 	%rd3788, %rd3696, %rd3529;
	add.s64 	%rd3789, %rd3788, %rd49;
	add.s64 	%rd3790, %rd3789, %rd3787;
	add.s64 	%rd3791, %rd3790, %rd3784;
	add.s64 	%rd3792, %rd3791, %rd3707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14440,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14441}, %rd3779;
	}
	shf.r.wrap.b32 	%r14442, %r14441, %r14440, 28;
	shf.r.wrap.b32 	%r14443, %r14440, %r14441, 28;
	mov.b64 	%rd3793, {%r14443, %r14442};
	shf.l.wrap.b32 	%r14444, %r14440, %r14441, 30;
	shf.l.wrap.b32 	%r14445, %r14441, %r14440, 30;
	mov.b64 	%rd3794, {%r14445, %r14444};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shf.l.wrap.b32 	%r14446, %r14440, %r14441, 25;
	shf.l.wrap.b32 	%r14447, %r14441, %r14440, 25;
	mov.b64 	%rd3796, {%r14447, %r14446};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	and.b64  	%rd3798, %rd3779, %rd3755;
	xor.b64  	%rd3799, %rd3779, %rd3755;
	and.b64  	%rd3800, %rd3799, %rd3731;
	or.b64  	%rd3801, %rd3800, %rd3798;
	add.s64 	%rd3802, %rd3791, %rd3801;
	add.s64 	%rd3803, %rd3802, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14448,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14449}, %rd3792;
	}
	shf.r.wrap.b32 	%r14450, %r14449, %r14448, 14;
	shf.r.wrap.b32 	%r14451, %r14448, %r14449, 14;
	mov.b64 	%rd3804, {%r14451, %r14450};
	shf.r.wrap.b32 	%r14452, %r14449, %r14448, 18;
	shf.r.wrap.b32 	%r14453, %r14448, %r14449, 18;
	mov.b64 	%rd3805, {%r14453, %r14452};
	xor.b64  	%rd3806, %rd3805, %rd3804;
	shf.l.wrap.b32 	%r14454, %r14448, %r14449, 23;
	shf.l.wrap.b32 	%r14455, %r14449, %r14448, 23;
	mov.b64 	%rd3807, {%r14455, %r14454};
	xor.b64  	%rd3808, %rd3806, %rd3807;
	xor.b64  	%rd3809, %rd3768, %rd3744;
	and.b64  	%rd3810, %rd3792, %rd3809;
	xor.b64  	%rd3811, %rd3810, %rd3744;
	add.s64 	%rd3812, %rd3720, %rd3542;
	add.s64 	%rd3813, %rd3812, %rd50;
	add.s64 	%rd3814, %rd3813, %rd3811;
	add.s64 	%rd3815, %rd3814, %rd3808;
	add.s64 	%rd3816, %rd3815, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14456,%dummy}, %rd3803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14457}, %rd3803;
	}
	shf.r.wrap.b32 	%r14458, %r14457, %r14456, 28;
	shf.r.wrap.b32 	%r14459, %r14456, %r14457, 28;
	mov.b64 	%rd3817, {%r14459, %r14458};
	shf.l.wrap.b32 	%r14460, %r14456, %r14457, 30;
	shf.l.wrap.b32 	%r14461, %r14457, %r14456, 30;
	mov.b64 	%rd3818, {%r14461, %r14460};
	xor.b64  	%rd3819, %rd3818, %rd3817;
	shf.l.wrap.b32 	%r14462, %r14456, %r14457, 25;
	shf.l.wrap.b32 	%r14463, %r14457, %r14456, 25;
	mov.b64 	%rd3820, {%r14463, %r14462};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	and.b64  	%rd3822, %rd3803, %rd3779;
	xor.b64  	%rd3823, %rd3803, %rd3779;
	and.b64  	%rd3824, %rd3823, %rd3755;
	or.b64  	%rd3825, %rd3824, %rd3822;
	add.s64 	%rd3826, %rd3815, %rd3825;
	add.s64 	%rd3827, %rd3826, %rd3821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14464,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14465}, %rd3816;
	}
	shf.r.wrap.b32 	%r14466, %r14465, %r14464, 14;
	shf.r.wrap.b32 	%r14467, %r14464, %r14465, 14;
	mov.b64 	%rd3828, {%r14467, %r14466};
	shf.r.wrap.b32 	%r14468, %r14465, %r14464, 18;
	shf.r.wrap.b32 	%r14469, %r14464, %r14465, 18;
	mov.b64 	%rd3829, {%r14469, %r14468};
	xor.b64  	%rd3830, %rd3829, %rd3828;
	shf.l.wrap.b32 	%r14470, %r14464, %r14465, 23;
	shf.l.wrap.b32 	%r14471, %r14465, %r14464, 23;
	mov.b64 	%rd3831, {%r14471, %r14470};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	xor.b64  	%rd3833, %rd3792, %rd3768;
	and.b64  	%rd3834, %rd3816, %rd3833;
	xor.b64  	%rd3835, %rd3834, %rd3768;
	add.s64 	%rd3836, %rd3744, %rd3555;
	add.s64 	%rd3837, %rd3836, %rd51;
	add.s64 	%rd3838, %rd3837, %rd3835;
	add.s64 	%rd3839, %rd3838, %rd3832;
	add.s64 	%rd3840, %rd3839, %rd3755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14472,%dummy}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14473}, %rd3827;
	}
	shf.r.wrap.b32 	%r14474, %r14473, %r14472, 28;
	shf.r.wrap.b32 	%r14475, %r14472, %r14473, 28;
	mov.b64 	%rd3841, {%r14475, %r14474};
	shf.l.wrap.b32 	%r14476, %r14472, %r14473, 30;
	shf.l.wrap.b32 	%r14477, %r14473, %r14472, 30;
	mov.b64 	%rd3842, {%r14477, %r14476};
	xor.b64  	%rd3843, %rd3842, %rd3841;
	shf.l.wrap.b32 	%r14478, %r14472, %r14473, 25;
	shf.l.wrap.b32 	%r14479, %r14473, %r14472, 25;
	mov.b64 	%rd3844, {%r14479, %r14478};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	and.b64  	%rd3846, %rd3827, %rd3803;
	xor.b64  	%rd3847, %rd3827, %rd3803;
	and.b64  	%rd3848, %rd3847, %rd3779;
	or.b64  	%rd3849, %rd3848, %rd3846;
	add.s64 	%rd3850, %rd3839, %rd3849;
	add.s64 	%rd3851, %rd3850, %rd3845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14480,%dummy}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14481}, %rd3840;
	}
	shf.r.wrap.b32 	%r14482, %r14481, %r14480, 14;
	shf.r.wrap.b32 	%r14483, %r14480, %r14481, 14;
	mov.b64 	%rd3852, {%r14483, %r14482};
	shf.r.wrap.b32 	%r14484, %r14481, %r14480, 18;
	shf.r.wrap.b32 	%r14485, %r14480, %r14481, 18;
	mov.b64 	%rd3853, {%r14485, %r14484};
	xor.b64  	%rd3854, %rd3853, %rd3852;
	shf.l.wrap.b32 	%r14486, %r14480, %r14481, 23;
	shf.l.wrap.b32 	%r14487, %r14481, %r14480, 23;
	mov.b64 	%rd3855, {%r14487, %r14486};
	xor.b64  	%rd3856, %rd3854, %rd3855;
	xor.b64  	%rd3857, %rd3816, %rd3792;
	and.b64  	%rd3858, %rd3840, %rd3857;
	xor.b64  	%rd3859, %rd3858, %rd3792;
	add.s64 	%rd3860, %rd3768, %rd3568;
	add.s64 	%rd3861, %rd3860, %rd52;
	add.s64 	%rd3862, %rd3861, %rd3859;
	add.s64 	%rd3863, %rd3862, %rd3856;
	add.s64 	%rd3864, %rd3863, %rd3779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14488,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14489}, %rd3851;
	}
	shf.r.wrap.b32 	%r14490, %r14489, %r14488, 28;
	shf.r.wrap.b32 	%r14491, %r14488, %r14489, 28;
	mov.b64 	%rd3865, {%r14491, %r14490};
	shf.l.wrap.b32 	%r14492, %r14488, %r14489, 30;
	shf.l.wrap.b32 	%r14493, %r14489, %r14488, 30;
	mov.b64 	%rd3866, {%r14493, %r14492};
	xor.b64  	%rd3867, %rd3866, %rd3865;
	shf.l.wrap.b32 	%r14494, %r14488, %r14489, 25;
	shf.l.wrap.b32 	%r14495, %r14489, %r14488, 25;
	mov.b64 	%rd3868, {%r14495, %r14494};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	and.b64  	%rd3870, %rd3851, %rd3827;
	xor.b64  	%rd3871, %rd3851, %rd3827;
	and.b64  	%rd3872, %rd3871, %rd3803;
	or.b64  	%rd3873, %rd3872, %rd3870;
	add.s64 	%rd3874, %rd3863, %rd3873;
	add.s64 	%rd3875, %rd3874, %rd3869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14496,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14497}, %rd3864;
	}
	shf.r.wrap.b32 	%r14498, %r14497, %r14496, 14;
	shf.r.wrap.b32 	%r14499, %r14496, %r14497, 14;
	mov.b64 	%rd3876, {%r14499, %r14498};
	shf.r.wrap.b32 	%r14500, %r14497, %r14496, 18;
	shf.r.wrap.b32 	%r14501, %r14496, %r14497, 18;
	mov.b64 	%rd3877, {%r14501, %r14500};
	xor.b64  	%rd3878, %rd3877, %rd3876;
	shf.l.wrap.b32 	%r14502, %r14496, %r14497, 23;
	shf.l.wrap.b32 	%r14503, %r14497, %r14496, 23;
	mov.b64 	%rd3879, {%r14503, %r14502};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	xor.b64  	%rd3881, %rd3840, %rd3816;
	and.b64  	%rd3882, %rd3864, %rd3881;
	xor.b64  	%rd3883, %rd3882, %rd3816;
	add.s64 	%rd3884, %rd3792, %rd3581;
	add.s64 	%rd3885, %rd3884, %rd53;
	add.s64 	%rd3886, %rd3885, %rd3883;
	add.s64 	%rd3887, %rd3886, %rd3880;
	add.s64 	%rd3888, %rd3887, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14504,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14505}, %rd3875;
	}
	shf.r.wrap.b32 	%r14506, %r14505, %r14504, 28;
	shf.r.wrap.b32 	%r14507, %r14504, %r14505, 28;
	mov.b64 	%rd3889, {%r14507, %r14506};
	shf.l.wrap.b32 	%r14508, %r14504, %r14505, 30;
	shf.l.wrap.b32 	%r14509, %r14505, %r14504, 30;
	mov.b64 	%rd3890, {%r14509, %r14508};
	xor.b64  	%rd3891, %rd3890, %rd3889;
	shf.l.wrap.b32 	%r14510, %r14504, %r14505, 25;
	shf.l.wrap.b32 	%r14511, %r14505, %r14504, 25;
	mov.b64 	%rd3892, {%r14511, %r14510};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	and.b64  	%rd3894, %rd3875, %rd3851;
	xor.b64  	%rd3895, %rd3875, %rd3851;
	and.b64  	%rd3896, %rd3895, %rd3827;
	or.b64  	%rd3897, %rd3896, %rd3894;
	add.s64 	%rd3898, %rd3887, %rd3897;
	add.s64 	%rd3899, %rd3898, %rd3893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14512,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14513}, %rd3888;
	}
	shf.r.wrap.b32 	%r14514, %r14513, %r14512, 14;
	shf.r.wrap.b32 	%r14515, %r14512, %r14513, 14;
	mov.b64 	%rd3900, {%r14515, %r14514};
	shf.r.wrap.b32 	%r14516, %r14513, %r14512, 18;
	shf.r.wrap.b32 	%r14517, %r14512, %r14513, 18;
	mov.b64 	%rd3901, {%r14517, %r14516};
	xor.b64  	%rd3902, %rd3901, %rd3900;
	shf.l.wrap.b32 	%r14518, %r14512, %r14513, 23;
	shf.l.wrap.b32 	%r14519, %r14513, %r14512, 23;
	mov.b64 	%rd3903, {%r14519, %r14518};
	xor.b64  	%rd3904, %rd3902, %rd3903;
	xor.b64  	%rd3905, %rd3864, %rd3840;
	and.b64  	%rd3906, %rd3888, %rd3905;
	xor.b64  	%rd3907, %rd3906, %rd3840;
	add.s64 	%rd3908, %rd3816, %rd3594;
	add.s64 	%rd3909, %rd3908, %rd54;
	add.s64 	%rd3910, %rd3909, %rd3907;
	add.s64 	%rd3911, %rd3910, %rd3904;
	add.s64 	%rd3912, %rd3911, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14520,%dummy}, %rd3899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14521}, %rd3899;
	}
	shf.r.wrap.b32 	%r14522, %r14521, %r14520, 28;
	shf.r.wrap.b32 	%r14523, %r14520, %r14521, 28;
	mov.b64 	%rd3913, {%r14523, %r14522};
	shf.l.wrap.b32 	%r14524, %r14520, %r14521, 30;
	shf.l.wrap.b32 	%r14525, %r14521, %r14520, 30;
	mov.b64 	%rd3914, {%r14525, %r14524};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shf.l.wrap.b32 	%r14526, %r14520, %r14521, 25;
	shf.l.wrap.b32 	%r14527, %r14521, %r14520, 25;
	mov.b64 	%rd3916, {%r14527, %r14526};
	xor.b64  	%rd3917, %rd3915, %rd3916;
	and.b64  	%rd3918, %rd3899, %rd3875;
	xor.b64  	%rd3919, %rd3899, %rd3875;
	and.b64  	%rd3920, %rd3919, %rd3851;
	or.b64  	%rd3921, %rd3920, %rd3918;
	add.s64 	%rd3922, %rd3911, %rd3921;
	add.s64 	%rd3923, %rd3922, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14528,%dummy}, %rd3912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14529}, %rd3912;
	}
	shf.r.wrap.b32 	%r14530, %r14529, %r14528, 14;
	shf.r.wrap.b32 	%r14531, %r14528, %r14529, 14;
	mov.b64 	%rd3924, {%r14531, %r14530};
	shf.r.wrap.b32 	%r14532, %r14529, %r14528, 18;
	shf.r.wrap.b32 	%r14533, %r14528, %r14529, 18;
	mov.b64 	%rd3925, {%r14533, %r14532};
	xor.b64  	%rd3926, %rd3925, %rd3924;
	shf.l.wrap.b32 	%r14534, %r14528, %r14529, 23;
	shf.l.wrap.b32 	%r14535, %r14529, %r14528, 23;
	mov.b64 	%rd3927, {%r14535, %r14534};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	xor.b64  	%rd3929, %rd3888, %rd3864;
	and.b64  	%rd3930, %rd3912, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3864;
	add.s64 	%rd3932, %rd3840, %rd3607;
	add.s64 	%rd3933, %rd3932, %rd55;
	add.s64 	%rd3934, %rd3933, %rd3931;
	add.s64 	%rd3935, %rd3934, %rd3928;
	add.s64 	%rd3936, %rd3935, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14536,%dummy}, %rd3923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14537}, %rd3923;
	}
	shf.r.wrap.b32 	%r14538, %r14537, %r14536, 28;
	shf.r.wrap.b32 	%r14539, %r14536, %r14537, 28;
	mov.b64 	%rd3937, {%r14539, %r14538};
	shf.l.wrap.b32 	%r14540, %r14536, %r14537, 30;
	shf.l.wrap.b32 	%r14541, %r14537, %r14536, 30;
	mov.b64 	%rd3938, {%r14541, %r14540};
	xor.b64  	%rd3939, %rd3938, %rd3937;
	shf.l.wrap.b32 	%r14542, %r14536, %r14537, 25;
	shf.l.wrap.b32 	%r14543, %r14537, %r14536, 25;
	mov.b64 	%rd3940, {%r14543, %r14542};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	and.b64  	%rd3942, %rd3923, %rd3899;
	xor.b64  	%rd3943, %rd3923, %rd3899;
	and.b64  	%rd3944, %rd3943, %rd3875;
	or.b64  	%rd3945, %rd3944, %rd3942;
	add.s64 	%rd3946, %rd3935, %rd3945;
	add.s64 	%rd3947, %rd3946, %rd3941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14544,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14545}, %rd3936;
	}
	shf.r.wrap.b32 	%r14546, %r14545, %r14544, 14;
	shf.r.wrap.b32 	%r14547, %r14544, %r14545, 14;
	mov.b64 	%rd3948, {%r14547, %r14546};
	shf.r.wrap.b32 	%r14548, %r14545, %r14544, 18;
	shf.r.wrap.b32 	%r14549, %r14544, %r14545, 18;
	mov.b64 	%rd3949, {%r14549, %r14548};
	xor.b64  	%rd3950, %rd3949, %rd3948;
	shf.l.wrap.b32 	%r14550, %r14544, %r14545, 23;
	shf.l.wrap.b32 	%r14551, %r14545, %r14544, 23;
	mov.b64 	%rd3951, {%r14551, %r14550};
	xor.b64  	%rd3952, %rd3950, %rd3951;
	xor.b64  	%rd3953, %rd3912, %rd3888;
	and.b64  	%rd3954, %rd3936, %rd3953;
	xor.b64  	%rd3955, %rd3954, %rd3888;
	add.s64 	%rd3956, %rd3864, %rd3620;
	add.s64 	%rd3957, %rd3956, %rd56;
	add.s64 	%rd3958, %rd3957, %rd3955;
	add.s64 	%rd3959, %rd3958, %rd3952;
	add.s64 	%rd3960, %rd3959, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14552,%dummy}, %rd3947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14553}, %rd3947;
	}
	shf.r.wrap.b32 	%r14554, %r14553, %r14552, 28;
	shf.r.wrap.b32 	%r14555, %r14552, %r14553, 28;
	mov.b64 	%rd3961, {%r14555, %r14554};
	shf.l.wrap.b32 	%r14556, %r14552, %r14553, 30;
	shf.l.wrap.b32 	%r14557, %r14553, %r14552, 30;
	mov.b64 	%rd3962, {%r14557, %r14556};
	xor.b64  	%rd3963, %rd3962, %rd3961;
	shf.l.wrap.b32 	%r14558, %r14552, %r14553, 25;
	shf.l.wrap.b32 	%r14559, %r14553, %r14552, 25;
	mov.b64 	%rd3964, {%r14559, %r14558};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	and.b64  	%rd3966, %rd3947, %rd3923;
	xor.b64  	%rd3967, %rd3947, %rd3923;
	and.b64  	%rd3968, %rd3967, %rd3899;
	or.b64  	%rd3969, %rd3968, %rd3966;
	add.s64 	%rd3970, %rd3959, %rd3969;
	add.s64 	%rd3971, %rd3970, %rd3965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14560,%dummy}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14561}, %rd3960;
	}
	shf.r.wrap.b32 	%r14562, %r14561, %r14560, 14;
	shf.r.wrap.b32 	%r14563, %r14560, %r14561, 14;
	mov.b64 	%rd3972, {%r14563, %r14562};
	shf.r.wrap.b32 	%r14564, %r14561, %r14560, 18;
	shf.r.wrap.b32 	%r14565, %r14560, %r14561, 18;
	mov.b64 	%rd3973, {%r14565, %r14564};
	xor.b64  	%rd3974, %rd3973, %rd3972;
	shf.l.wrap.b32 	%r14566, %r14560, %r14561, 23;
	shf.l.wrap.b32 	%r14567, %r14561, %r14560, 23;
	mov.b64 	%rd3975, {%r14567, %r14566};
	xor.b64  	%rd3976, %rd3974, %rd3975;
	xor.b64  	%rd3977, %rd3936, %rd3912;
	and.b64  	%rd3978, %rd3960, %rd3977;
	xor.b64  	%rd3979, %rd3978, %rd3912;
	add.s64 	%rd3980, %rd3888, %rd3633;
	add.s64 	%rd3981, %rd3980, %rd57;
	add.s64 	%rd3982, %rd3981, %rd3979;
	add.s64 	%rd3983, %rd3982, %rd3976;
	add.s64 	%rd3984, %rd3983, %rd3899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14568,%dummy}, %rd3971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14569}, %rd3971;
	}
	shf.r.wrap.b32 	%r14570, %r14569, %r14568, 28;
	shf.r.wrap.b32 	%r14571, %r14568, %r14569, 28;
	mov.b64 	%rd3985, {%r14571, %r14570};
	shf.l.wrap.b32 	%r14572, %r14568, %r14569, 30;
	shf.l.wrap.b32 	%r14573, %r14569, %r14568, 30;
	mov.b64 	%rd3986, {%r14573, %r14572};
	xor.b64  	%rd3987, %rd3986, %rd3985;
	shf.l.wrap.b32 	%r14574, %r14568, %r14569, 25;
	shf.l.wrap.b32 	%r14575, %r14569, %r14568, 25;
	mov.b64 	%rd3988, {%r14575, %r14574};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	and.b64  	%rd3990, %rd3971, %rd3947;
	xor.b64  	%rd3991, %rd3971, %rd3947;
	and.b64  	%rd3992, %rd3991, %rd3923;
	or.b64  	%rd3993, %rd3992, %rd3990;
	add.s64 	%rd3994, %rd3983, %rd3993;
	add.s64 	%rd3995, %rd3994, %rd3989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14576,%dummy}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14577}, %rd3984;
	}
	shf.r.wrap.b32 	%r14578, %r14577, %r14576, 14;
	shf.r.wrap.b32 	%r14579, %r14576, %r14577, 14;
	mov.b64 	%rd3996, {%r14579, %r14578};
	shf.r.wrap.b32 	%r14580, %r14577, %r14576, 18;
	shf.r.wrap.b32 	%r14581, %r14576, %r14577, 18;
	mov.b64 	%rd3997, {%r14581, %r14580};
	xor.b64  	%rd3998, %rd3997, %rd3996;
	shf.l.wrap.b32 	%r14582, %r14576, %r14577, 23;
	shf.l.wrap.b32 	%r14583, %r14577, %r14576, 23;
	mov.b64 	%rd3999, {%r14583, %r14582};
	xor.b64  	%rd4000, %rd3998, %rd3999;
	xor.b64  	%rd4001, %rd3960, %rd3936;
	and.b64  	%rd4002, %rd3984, %rd4001;
	xor.b64  	%rd4003, %rd4002, %rd3936;
	add.s64 	%rd4004, %rd3912, %rd3646;
	add.s64 	%rd4005, %rd4004, %rd58;
	add.s64 	%rd4006, %rd4005, %rd4003;
	add.s64 	%rd4007, %rd4006, %rd4000;
	add.s64 	%rd4008, %rd4007, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14584,%dummy}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14585}, %rd3995;
	}
	shf.r.wrap.b32 	%r14586, %r14585, %r14584, 28;
	shf.r.wrap.b32 	%r14587, %r14584, %r14585, 28;
	mov.b64 	%rd4009, {%r14587, %r14586};
	shf.l.wrap.b32 	%r14588, %r14584, %r14585, 30;
	shf.l.wrap.b32 	%r14589, %r14585, %r14584, 30;
	mov.b64 	%rd4010, {%r14589, %r14588};
	xor.b64  	%rd4011, %rd4010, %rd4009;
	shf.l.wrap.b32 	%r14590, %r14584, %r14585, 25;
	shf.l.wrap.b32 	%r14591, %r14585, %r14584, 25;
	mov.b64 	%rd4012, {%r14591, %r14590};
	xor.b64  	%rd4013, %rd4011, %rd4012;
	and.b64  	%rd4014, %rd3995, %rd3971;
	xor.b64  	%rd4015, %rd3995, %rd3971;
	and.b64  	%rd4016, %rd4015, %rd3947;
	or.b64  	%rd4017, %rd4016, %rd4014;
	add.s64 	%rd4018, %rd4007, %rd4017;
	add.s64 	%rd4019, %rd4018, %rd4013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14592,%dummy}, %rd4008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14593}, %rd4008;
	}
	shf.r.wrap.b32 	%r14594, %r14593, %r14592, 14;
	shf.r.wrap.b32 	%r14595, %r14592, %r14593, 14;
	mov.b64 	%rd4020, {%r14595, %r14594};
	shf.r.wrap.b32 	%r14596, %r14593, %r14592, 18;
	shf.r.wrap.b32 	%r14597, %r14592, %r14593, 18;
	mov.b64 	%rd4021, {%r14597, %r14596};
	xor.b64  	%rd4022, %rd4021, %rd4020;
	shf.l.wrap.b32 	%r14598, %r14592, %r14593, 23;
	shf.l.wrap.b32 	%r14599, %r14593, %r14592, 23;
	mov.b64 	%rd4023, {%r14599, %r14598};
	xor.b64  	%rd4024, %rd4022, %rd4023;
	xor.b64  	%rd4025, %rd3984, %rd3960;
	and.b64  	%rd4026, %rd4008, %rd4025;
	xor.b64  	%rd4027, %rd4026, %rd3960;
	add.s64 	%rd4028, %rd3936, %rd3659;
	add.s64 	%rd4029, %rd4028, %rd59;
	add.s64 	%rd4030, %rd4029, %rd4027;
	add.s64 	%rd4031, %rd4030, %rd4024;
	add.s64 	%rd4032, %rd4031, %rd3947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14600,%dummy}, %rd4019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14601}, %rd4019;
	}
	shf.r.wrap.b32 	%r14602, %r14601, %r14600, 28;
	shf.r.wrap.b32 	%r14603, %r14600, %r14601, 28;
	mov.b64 	%rd4033, {%r14603, %r14602};
	shf.l.wrap.b32 	%r14604, %r14600, %r14601, 30;
	shf.l.wrap.b32 	%r14605, %r14601, %r14600, 30;
	mov.b64 	%rd4034, {%r14605, %r14604};
	xor.b64  	%rd4035, %rd4034, %rd4033;
	shf.l.wrap.b32 	%r14606, %r14600, %r14601, 25;
	shf.l.wrap.b32 	%r14607, %r14601, %r14600, 25;
	mov.b64 	%rd4036, {%r14607, %r14606};
	xor.b64  	%rd4037, %rd4035, %rd4036;
	and.b64  	%rd4038, %rd4019, %rd3995;
	xor.b64  	%rd4039, %rd4019, %rd3995;
	and.b64  	%rd4040, %rd4039, %rd3971;
	or.b64  	%rd4041, %rd4040, %rd4038;
	add.s64 	%rd4042, %rd4031, %rd4041;
	add.s64 	%rd4043, %rd4042, %rd4037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14608,%dummy}, %rd3646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14609}, %rd3646;
	}
	shf.r.wrap.b32 	%r14610, %r14609, %r14608, 19;
	shf.r.wrap.b32 	%r14611, %r14608, %r14609, 19;
	mov.b64 	%rd4044, {%r14611, %r14610};
	shf.l.wrap.b32 	%r14612, %r14608, %r14609, 3;
	shf.l.wrap.b32 	%r14613, %r14609, %r14608, 3;
	mov.b64 	%rd4045, {%r14613, %r14612};
	shr.u64 	%rd4046, %rd3646, 6;
	xor.b64  	%rd4047, %rd4044, %rd4046;
	xor.b64  	%rd4048, %rd4047, %rd4045;
	shf.r.wrap.b32 	%r14614, %r14203, %r14202, 1;
	shf.r.wrap.b32 	%r14615, %r14202, %r14203, 1;
	mov.b64 	%rd4049, {%r14615, %r14614};
	shf.r.wrap.b32 	%r14616, %r14203, %r14202, 8;
	shf.r.wrap.b32 	%r14617, %r14202, %r14203, 8;
	mov.b64 	%rd4050, {%r14617, %r14616};
	shr.u64 	%rd4051, %rd3477, 7;
	xor.b64  	%rd4052, %rd4049, %rd4051;
	xor.b64  	%rd4053, %rd4052, %rd4050;
	add.s64 	%rd4054, %rd3581, %rd3464;
	add.s64 	%rd4055, %rd4054, %rd4048;
	add.s64 	%rd4056, %rd4055, %rd4053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14618,%dummy}, %rd3659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14619}, %rd3659;
	}
	shf.r.wrap.b32 	%r14620, %r14619, %r14618, 19;
	shf.r.wrap.b32 	%r14621, %r14618, %r14619, 19;
	mov.b64 	%rd4057, {%r14621, %r14620};
	shf.l.wrap.b32 	%r14622, %r14618, %r14619, 3;
	shf.l.wrap.b32 	%r14623, %r14619, %r14618, 3;
	mov.b64 	%rd4058, {%r14623, %r14622};
	shr.u64 	%rd4059, %rd3659, 6;
	xor.b64  	%rd4060, %rd4057, %rd4059;
	xor.b64  	%rd4061, %rd4060, %rd4058;
	shf.r.wrap.b32 	%r14624, %r14215, %r14214, 1;
	shf.r.wrap.b32 	%r14625, %r14214, %r14215, 1;
	mov.b64 	%rd4062, {%r14625, %r14624};
	shf.r.wrap.b32 	%r14626, %r14215, %r14214, 8;
	shf.r.wrap.b32 	%r14627, %r14214, %r14215, 8;
	mov.b64 	%rd4063, {%r14627, %r14626};
	shr.u64 	%rd4064, %rd3490, 7;
	xor.b64  	%rd4065, %rd4062, %rd4064;
	xor.b64  	%rd4066, %rd4065, %rd4063;
	add.s64 	%rd4067, %rd3594, %rd3477;
	add.s64 	%rd4068, %rd4067, %rd4061;
	add.s64 	%rd4069, %rd4068, %rd4066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14628,%dummy}, %rd4056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14629}, %rd4056;
	}
	shf.r.wrap.b32 	%r14630, %r14629, %r14628, 19;
	shf.r.wrap.b32 	%r14631, %r14628, %r14629, 19;
	mov.b64 	%rd4070, {%r14631, %r14630};
	shf.l.wrap.b32 	%r14632, %r14628, %r14629, 3;
	shf.l.wrap.b32 	%r14633, %r14629, %r14628, 3;
	mov.b64 	%rd4071, {%r14633, %r14632};
	shr.u64 	%rd4072, %rd4056, 6;
	xor.b64  	%rd4073, %rd4070, %rd4072;
	xor.b64  	%rd4074, %rd4073, %rd4071;
	shf.r.wrap.b32 	%r14634, %r14227, %r14226, 1;
	shf.r.wrap.b32 	%r14635, %r14226, %r14227, 1;
	mov.b64 	%rd4075, {%r14635, %r14634};
	shf.r.wrap.b32 	%r14636, %r14227, %r14226, 8;
	shf.r.wrap.b32 	%r14637, %r14226, %r14227, 8;
	mov.b64 	%rd4076, {%r14637, %r14636};
	shr.u64 	%rd4077, %rd3503, 7;
	xor.b64  	%rd4078, %rd4075, %rd4077;
	xor.b64  	%rd4079, %rd4078, %rd4076;
	add.s64 	%rd4080, %rd3607, %rd3490;
	add.s64 	%rd4081, %rd4080, %rd4074;
	add.s64 	%rd4082, %rd4081, %rd4079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14638,%dummy}, %rd4069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14639}, %rd4069;
	}
	shf.r.wrap.b32 	%r14640, %r14639, %r14638, 19;
	shf.r.wrap.b32 	%r14641, %r14638, %r14639, 19;
	mov.b64 	%rd4083, {%r14641, %r14640};
	shf.l.wrap.b32 	%r14642, %r14638, %r14639, 3;
	shf.l.wrap.b32 	%r14643, %r14639, %r14638, 3;
	mov.b64 	%rd4084, {%r14643, %r14642};
	shr.u64 	%rd4085, %rd4069, 6;
	xor.b64  	%rd4086, %rd4083, %rd4085;
	xor.b64  	%rd4087, %rd4086, %rd4084;
	shf.r.wrap.b32 	%r14644, %r14239, %r14238, 1;
	shf.r.wrap.b32 	%r14645, %r14238, %r14239, 1;
	mov.b64 	%rd4088, {%r14645, %r14644};
	shf.r.wrap.b32 	%r14646, %r14239, %r14238, 8;
	shf.r.wrap.b32 	%r14647, %r14238, %r14239, 8;
	mov.b64 	%rd4089, {%r14647, %r14646};
	shr.u64 	%rd4090, %rd3516, 7;
	xor.b64  	%rd4091, %rd4088, %rd4090;
	xor.b64  	%rd4092, %rd4091, %rd4089;
	add.s64 	%rd4093, %rd3620, %rd3503;
	add.s64 	%rd4094, %rd4093, %rd4087;
	add.s64 	%rd4095, %rd4094, %rd4092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14648,%dummy}, %rd4082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14649}, %rd4082;
	}
	shf.r.wrap.b32 	%r14650, %r14649, %r14648, 19;
	shf.r.wrap.b32 	%r14651, %r14648, %r14649, 19;
	mov.b64 	%rd4096, {%r14651, %r14650};
	shf.l.wrap.b32 	%r14652, %r14648, %r14649, 3;
	shf.l.wrap.b32 	%r14653, %r14649, %r14648, 3;
	mov.b64 	%rd4097, {%r14653, %r14652};
	shr.u64 	%rd4098, %rd4082, 6;
	xor.b64  	%rd4099, %rd4096, %rd4098;
	xor.b64  	%rd4100, %rd4099, %rd4097;
	shf.r.wrap.b32 	%r14654, %r14251, %r14250, 1;
	shf.r.wrap.b32 	%r14655, %r14250, %r14251, 1;
	mov.b64 	%rd4101, {%r14655, %r14654};
	shf.r.wrap.b32 	%r14656, %r14251, %r14250, 8;
	shf.r.wrap.b32 	%r14657, %r14250, %r14251, 8;
	mov.b64 	%rd4102, {%r14657, %r14656};
	shr.u64 	%rd4103, %rd3529, 7;
	xor.b64  	%rd4104, %rd4101, %rd4103;
	xor.b64  	%rd4105, %rd4104, %rd4102;
	add.s64 	%rd4106, %rd3633, %rd3516;
	add.s64 	%rd4107, %rd4106, %rd4100;
	add.s64 	%rd4108, %rd4107, %rd4105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14658,%dummy}, %rd4095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14659}, %rd4095;
	}
	shf.r.wrap.b32 	%r14660, %r14659, %r14658, 19;
	shf.r.wrap.b32 	%r14661, %r14658, %r14659, 19;
	mov.b64 	%rd4109, {%r14661, %r14660};
	shf.l.wrap.b32 	%r14662, %r14658, %r14659, 3;
	shf.l.wrap.b32 	%r14663, %r14659, %r14658, 3;
	mov.b64 	%rd4110, {%r14663, %r14662};
	shr.u64 	%rd4111, %rd4095, 6;
	xor.b64  	%rd4112, %rd4109, %rd4111;
	xor.b64  	%rd4113, %rd4112, %rd4110;
	shf.r.wrap.b32 	%r14664, %r14263, %r14262, 1;
	shf.r.wrap.b32 	%r14665, %r14262, %r14263, 1;
	mov.b64 	%rd4114, {%r14665, %r14664};
	shf.r.wrap.b32 	%r14666, %r14263, %r14262, 8;
	shf.r.wrap.b32 	%r14667, %r14262, %r14263, 8;
	mov.b64 	%rd4115, {%r14667, %r14666};
	shr.u64 	%rd4116, %rd3542, 7;
	xor.b64  	%rd4117, %rd4114, %rd4116;
	xor.b64  	%rd4118, %rd4117, %rd4115;
	add.s64 	%rd4119, %rd3646, %rd3529;
	add.s64 	%rd4120, %rd4119, %rd4113;
	add.s64 	%rd4121, %rd4120, %rd4118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14668,%dummy}, %rd4108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14669}, %rd4108;
	}
	shf.r.wrap.b32 	%r14670, %r14669, %r14668, 19;
	shf.r.wrap.b32 	%r14671, %r14668, %r14669, 19;
	mov.b64 	%rd4122, {%r14671, %r14670};
	shf.l.wrap.b32 	%r14672, %r14668, %r14669, 3;
	shf.l.wrap.b32 	%r14673, %r14669, %r14668, 3;
	mov.b64 	%rd4123, {%r14673, %r14672};
	shr.u64 	%rd4124, %rd4108, 6;
	xor.b64  	%rd4125, %rd4122, %rd4124;
	xor.b64  	%rd4126, %rd4125, %rd4123;
	shf.r.wrap.b32 	%r14674, %r14275, %r14274, 1;
	shf.r.wrap.b32 	%r14675, %r14274, %r14275, 1;
	mov.b64 	%rd4127, {%r14675, %r14674};
	shf.r.wrap.b32 	%r14676, %r14275, %r14274, 8;
	shf.r.wrap.b32 	%r14677, %r14274, %r14275, 8;
	mov.b64 	%rd4128, {%r14677, %r14676};
	shr.u64 	%rd4129, %rd3555, 7;
	xor.b64  	%rd4130, %rd4127, %rd4129;
	xor.b64  	%rd4131, %rd4130, %rd4128;
	add.s64 	%rd4132, %rd3659, %rd3542;
	add.s64 	%rd4133, %rd4132, %rd4126;
	add.s64 	%rd4134, %rd4133, %rd4131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14678,%dummy}, %rd4121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14679}, %rd4121;
	}
	shf.r.wrap.b32 	%r14680, %r14679, %r14678, 19;
	shf.r.wrap.b32 	%r14681, %r14678, %r14679, 19;
	mov.b64 	%rd4135, {%r14681, %r14680};
	shf.l.wrap.b32 	%r14682, %r14678, %r14679, 3;
	shf.l.wrap.b32 	%r14683, %r14679, %r14678, 3;
	mov.b64 	%rd4136, {%r14683, %r14682};
	shr.u64 	%rd4137, %rd4121, 6;
	xor.b64  	%rd4138, %rd4135, %rd4137;
	xor.b64  	%rd4139, %rd4138, %rd4136;
	shf.r.wrap.b32 	%r14684, %r14287, %r14286, 1;
	shf.r.wrap.b32 	%r14685, %r14286, %r14287, 1;
	mov.b64 	%rd4140, {%r14685, %r14684};
	shf.r.wrap.b32 	%r14686, %r14287, %r14286, 8;
	shf.r.wrap.b32 	%r14687, %r14286, %r14287, 8;
	mov.b64 	%rd4141, {%r14687, %r14686};
	shr.u64 	%rd4142, %rd3568, 7;
	xor.b64  	%rd4143, %rd4140, %rd4142;
	xor.b64  	%rd4144, %rd4143, %rd4141;
	add.s64 	%rd4145, %rd4056, %rd3555;
	add.s64 	%rd4146, %rd4145, %rd4139;
	add.s64 	%rd4147, %rd4146, %rd4144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14688,%dummy}, %rd4134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14689}, %rd4134;
	}
	shf.r.wrap.b32 	%r14690, %r14689, %r14688, 19;
	shf.r.wrap.b32 	%r14691, %r14688, %r14689, 19;
	mov.b64 	%rd4148, {%r14691, %r14690};
	shf.l.wrap.b32 	%r14692, %r14688, %r14689, 3;
	shf.l.wrap.b32 	%r14693, %r14689, %r14688, 3;
	mov.b64 	%rd4149, {%r14693, %r14692};
	shr.u64 	%rd4150, %rd4134, 6;
	xor.b64  	%rd4151, %rd4148, %rd4150;
	xor.b64  	%rd4152, %rd4151, %rd4149;
	shf.r.wrap.b32 	%r14694, %r14299, %r14298, 1;
	shf.r.wrap.b32 	%r14695, %r14298, %r14299, 1;
	mov.b64 	%rd4153, {%r14695, %r14694};
	shf.r.wrap.b32 	%r14696, %r14299, %r14298, 8;
	shf.r.wrap.b32 	%r14697, %r14298, %r14299, 8;
	mov.b64 	%rd4154, {%r14697, %r14696};
	shr.u64 	%rd4155, %rd3581, 7;
	xor.b64  	%rd4156, %rd4153, %rd4155;
	xor.b64  	%rd4157, %rd4156, %rd4154;
	add.s64 	%rd4158, %rd4069, %rd3568;
	add.s64 	%rd4159, %rd4158, %rd4152;
	add.s64 	%rd4160, %rd4159, %rd4157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14698,%dummy}, %rd4147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14699}, %rd4147;
	}
	shf.r.wrap.b32 	%r14700, %r14699, %r14698, 19;
	shf.r.wrap.b32 	%r14701, %r14698, %r14699, 19;
	mov.b64 	%rd4161, {%r14701, %r14700};
	shf.l.wrap.b32 	%r14702, %r14698, %r14699, 3;
	shf.l.wrap.b32 	%r14703, %r14699, %r14698, 3;
	mov.b64 	%rd4162, {%r14703, %r14702};
	shr.u64 	%rd4163, %rd4147, 6;
	xor.b64  	%rd4164, %rd4161, %rd4163;
	xor.b64  	%rd4165, %rd4164, %rd4162;
	shf.r.wrap.b32 	%r14704, %r14311, %r14310, 1;
	shf.r.wrap.b32 	%r14705, %r14310, %r14311, 1;
	mov.b64 	%rd4166, {%r14705, %r14704};
	shf.r.wrap.b32 	%r14706, %r14311, %r14310, 8;
	shf.r.wrap.b32 	%r14707, %r14310, %r14311, 8;
	mov.b64 	%rd4167, {%r14707, %r14706};
	shr.u64 	%rd4168, %rd3594, 7;
	xor.b64  	%rd4169, %rd4166, %rd4168;
	xor.b64  	%rd4170, %rd4169, %rd4167;
	add.s64 	%rd4171, %rd4082, %rd3581;
	add.s64 	%rd4172, %rd4171, %rd4165;
	add.s64 	%rd4173, %rd4172, %rd4170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14708,%dummy}, %rd4160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14709}, %rd4160;
	}
	shf.r.wrap.b32 	%r14710, %r14709, %r14708, 19;
	shf.r.wrap.b32 	%r14711, %r14708, %r14709, 19;
	mov.b64 	%rd4174, {%r14711, %r14710};
	shf.l.wrap.b32 	%r14712, %r14708, %r14709, 3;
	shf.l.wrap.b32 	%r14713, %r14709, %r14708, 3;
	mov.b64 	%rd4175, {%r14713, %r14712};
	shr.u64 	%rd4176, %rd4160, 6;
	xor.b64  	%rd4177, %rd4174, %rd4176;
	xor.b64  	%rd4178, %rd4177, %rd4175;
	shf.r.wrap.b32 	%r14714, %r14323, %r14322, 1;
	shf.r.wrap.b32 	%r14715, %r14322, %r14323, 1;
	mov.b64 	%rd4179, {%r14715, %r14714};
	shf.r.wrap.b32 	%r14716, %r14323, %r14322, 8;
	shf.r.wrap.b32 	%r14717, %r14322, %r14323, 8;
	mov.b64 	%rd4180, {%r14717, %r14716};
	shr.u64 	%rd4181, %rd3607, 7;
	xor.b64  	%rd4182, %rd4179, %rd4181;
	xor.b64  	%rd4183, %rd4182, %rd4180;
	add.s64 	%rd4184, %rd4095, %rd3594;
	add.s64 	%rd4185, %rd4184, %rd4178;
	add.s64 	%rd4186, %rd4185, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14718,%dummy}, %rd4173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14719}, %rd4173;
	}
	shf.r.wrap.b32 	%r14720, %r14719, %r14718, 19;
	shf.r.wrap.b32 	%r14721, %r14718, %r14719, 19;
	mov.b64 	%rd4187, {%r14721, %r14720};
	shf.l.wrap.b32 	%r14722, %r14718, %r14719, 3;
	shf.l.wrap.b32 	%r14723, %r14719, %r14718, 3;
	mov.b64 	%rd4188, {%r14723, %r14722};
	shr.u64 	%rd4189, %rd4173, 6;
	xor.b64  	%rd4190, %rd4187, %rd4189;
	xor.b64  	%rd4191, %rd4190, %rd4188;
	shf.r.wrap.b32 	%r14724, %r14333, %r14332, 1;
	shf.r.wrap.b32 	%r14725, %r14332, %r14333, 1;
	mov.b64 	%rd4192, {%r14725, %r14724};
	shf.r.wrap.b32 	%r14726, %r14333, %r14332, 8;
	shf.r.wrap.b32 	%r14727, %r14332, %r14333, 8;
	mov.b64 	%rd4193, {%r14727, %r14726};
	shr.u64 	%rd4194, %rd3620, 7;
	xor.b64  	%rd4195, %rd4192, %rd4194;
	xor.b64  	%rd4196, %rd4195, %rd4193;
	add.s64 	%rd4197, %rd4108, %rd3607;
	add.s64 	%rd4198, %rd4197, %rd4191;
	add.s64 	%rd4199, %rd4198, %rd4196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14728,%dummy}, %rd4186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14729}, %rd4186;
	}
	shf.r.wrap.b32 	%r14730, %r14729, %r14728, 19;
	shf.r.wrap.b32 	%r14731, %r14728, %r14729, 19;
	mov.b64 	%rd4200, {%r14731, %r14730};
	shf.l.wrap.b32 	%r14732, %r14728, %r14729, 3;
	shf.l.wrap.b32 	%r14733, %r14729, %r14728, 3;
	mov.b64 	%rd4201, {%r14733, %r14732};
	shr.u64 	%rd4202, %rd4186, 6;
	xor.b64  	%rd4203, %rd4200, %rd4202;
	xor.b64  	%rd4204, %rd4203, %rd4201;
	shf.r.wrap.b32 	%r14734, %r14343, %r14342, 1;
	shf.r.wrap.b32 	%r14735, %r14342, %r14343, 1;
	mov.b64 	%rd4205, {%r14735, %r14734};
	shf.r.wrap.b32 	%r14736, %r14343, %r14342, 8;
	shf.r.wrap.b32 	%r14737, %r14342, %r14343, 8;
	mov.b64 	%rd4206, {%r14737, %r14736};
	shr.u64 	%rd4207, %rd3633, 7;
	xor.b64  	%rd4208, %rd4205, %rd4207;
	xor.b64  	%rd4209, %rd4208, %rd4206;
	add.s64 	%rd4210, %rd4121, %rd3620;
	add.s64 	%rd4211, %rd4210, %rd4204;
	add.s64 	%rd4212, %rd4211, %rd4209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14738,%dummy}, %rd4199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14739}, %rd4199;
	}
	shf.r.wrap.b32 	%r14740, %r14739, %r14738, 19;
	shf.r.wrap.b32 	%r14741, %r14738, %r14739, 19;
	mov.b64 	%rd4213, {%r14741, %r14740};
	shf.l.wrap.b32 	%r14742, %r14738, %r14739, 3;
	shf.l.wrap.b32 	%r14743, %r14739, %r14738, 3;
	mov.b64 	%rd4214, {%r14743, %r14742};
	shr.u64 	%rd4215, %rd4199, 6;
	xor.b64  	%rd4216, %rd4213, %rd4215;
	xor.b64  	%rd4217, %rd4216, %rd4214;
	shf.r.wrap.b32 	%r14744, %r14609, %r14608, 1;
	shf.r.wrap.b32 	%r14745, %r14608, %r14609, 1;
	mov.b64 	%rd4218, {%r14745, %r14744};
	shf.r.wrap.b32 	%r14746, %r14609, %r14608, 8;
	shf.r.wrap.b32 	%r14747, %r14608, %r14609, 8;
	mov.b64 	%rd4219, {%r14747, %r14746};
	shr.u64 	%rd4220, %rd3646, 7;
	xor.b64  	%rd4221, %rd4218, %rd4220;
	xor.b64  	%rd4222, %rd4221, %rd4219;
	add.s64 	%rd4223, %rd4134, %rd3633;
	add.s64 	%rd4224, %rd4223, %rd4217;
	add.s64 	%rd4225, %rd4224, %rd4222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14748,%dummy}, %rd4212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14749}, %rd4212;
	}
	shf.r.wrap.b32 	%r14750, %r14749, %r14748, 19;
	shf.r.wrap.b32 	%r14751, %r14748, %r14749, 19;
	mov.b64 	%rd4226, {%r14751, %r14750};
	shf.l.wrap.b32 	%r14752, %r14748, %r14749, 3;
	shf.l.wrap.b32 	%r14753, %r14749, %r14748, 3;
	mov.b64 	%rd4227, {%r14753, %r14752};
	shr.u64 	%rd4228, %rd4212, 6;
	xor.b64  	%rd4229, %rd4226, %rd4228;
	xor.b64  	%rd4230, %rd4229, %rd4227;
	shf.r.wrap.b32 	%r14754, %r14619, %r14618, 1;
	shf.r.wrap.b32 	%r14755, %r14618, %r14619, 1;
	mov.b64 	%rd4231, {%r14755, %r14754};
	shf.r.wrap.b32 	%r14756, %r14619, %r14618, 8;
	shf.r.wrap.b32 	%r14757, %r14618, %r14619, 8;
	mov.b64 	%rd4232, {%r14757, %r14756};
	shr.u64 	%rd4233, %rd3659, 7;
	xor.b64  	%rd4234, %rd4231, %rd4233;
	xor.b64  	%rd4235, %rd4234, %rd4232;
	add.s64 	%rd4236, %rd4147, %rd3646;
	add.s64 	%rd4237, %rd4236, %rd4230;
	add.s64 	%rd4238, %rd4237, %rd4235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14758,%dummy}, %rd4225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14759}, %rd4225;
	}
	shf.r.wrap.b32 	%r14760, %r14759, %r14758, 19;
	shf.r.wrap.b32 	%r14761, %r14758, %r14759, 19;
	mov.b64 	%rd4239, {%r14761, %r14760};
	shf.l.wrap.b32 	%r14762, %r14758, %r14759, 3;
	shf.l.wrap.b32 	%r14763, %r14759, %r14758, 3;
	mov.b64 	%rd4240, {%r14763, %r14762};
	shr.u64 	%rd4241, %rd4225, 6;
	xor.b64  	%rd4242, %rd4239, %rd4241;
	xor.b64  	%rd4243, %rd4242, %rd4240;
	shf.r.wrap.b32 	%r14764, %r14629, %r14628, 1;
	shf.r.wrap.b32 	%r14765, %r14628, %r14629, 1;
	mov.b64 	%rd4244, {%r14765, %r14764};
	shf.r.wrap.b32 	%r14766, %r14629, %r14628, 8;
	shf.r.wrap.b32 	%r14767, %r14628, %r14629, 8;
	mov.b64 	%rd4245, {%r14767, %r14766};
	shr.u64 	%rd4246, %rd4056, 7;
	xor.b64  	%rd4247, %rd4244, %rd4246;
	xor.b64  	%rd4248, %rd4247, %rd4245;
	add.s64 	%rd4249, %rd4160, %rd3659;
	add.s64 	%rd4250, %rd4249, %rd4243;
	add.s64 	%rd4251, %rd4250, %rd4248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14768,%dummy}, %rd4032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14769}, %rd4032;
	}
	shf.r.wrap.b32 	%r14770, %r14769, %r14768, 14;
	shf.r.wrap.b32 	%r14771, %r14768, %r14769, 14;
	mov.b64 	%rd4252, {%r14771, %r14770};
	shf.r.wrap.b32 	%r14772, %r14769, %r14768, 18;
	shf.r.wrap.b32 	%r14773, %r14768, %r14769, 18;
	mov.b64 	%rd4253, {%r14773, %r14772};
	xor.b64  	%rd4254, %rd4253, %rd4252;
	shf.l.wrap.b32 	%r14774, %r14768, %r14769, 23;
	shf.l.wrap.b32 	%r14775, %r14769, %r14768, 23;
	mov.b64 	%rd4255, {%r14775, %r14774};
	xor.b64  	%rd4256, %rd4254, %rd4255;
	xor.b64  	%rd4257, %rd4008, %rd3984;
	and.b64  	%rd4258, %rd4032, %rd4257;
	xor.b64  	%rd4259, %rd4258, %rd3984;
	add.s64 	%rd4260, %rd4259, %rd3960;
	add.s64 	%rd4261, %rd4260, %rd4056;
	add.s64 	%rd4262, %rd4261, %rd60;
	add.s64 	%rd4263, %rd4262, %rd4256;
	add.s64 	%rd4264, %rd4263, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14776,%dummy}, %rd4043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14777}, %rd4043;
	}
	shf.r.wrap.b32 	%r14778, %r14777, %r14776, 28;
	shf.r.wrap.b32 	%r14779, %r14776, %r14777, 28;
	mov.b64 	%rd4265, {%r14779, %r14778};
	shf.l.wrap.b32 	%r14780, %r14776, %r14777, 30;
	shf.l.wrap.b32 	%r14781, %r14777, %r14776, 30;
	mov.b64 	%rd4266, {%r14781, %r14780};
	xor.b64  	%rd4267, %rd4266, %rd4265;
	shf.l.wrap.b32 	%r14782, %r14776, %r14777, 25;
	shf.l.wrap.b32 	%r14783, %r14777, %r14776, 25;
	mov.b64 	%rd4268, {%r14783, %r14782};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	and.b64  	%rd4270, %rd4043, %rd4019;
	xor.b64  	%rd4271, %rd4043, %rd4019;
	and.b64  	%rd4272, %rd4271, %rd3995;
	or.b64  	%rd4273, %rd4272, %rd4270;
	add.s64 	%rd4274, %rd4263, %rd4273;
	add.s64 	%rd4275, %rd4274, %rd4269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14784,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14785}, %rd4264;
	}
	shf.r.wrap.b32 	%r14786, %r14785, %r14784, 14;
	shf.r.wrap.b32 	%r14787, %r14784, %r14785, 14;
	mov.b64 	%rd4276, {%r14787, %r14786};
	shf.r.wrap.b32 	%r14788, %r14785, %r14784, 18;
	shf.r.wrap.b32 	%r14789, %r14784, %r14785, 18;
	mov.b64 	%rd4277, {%r14789, %r14788};
	xor.b64  	%rd4278, %rd4277, %rd4276;
	shf.l.wrap.b32 	%r14790, %r14784, %r14785, 23;
	shf.l.wrap.b32 	%r14791, %r14785, %r14784, 23;
	mov.b64 	%rd4279, {%r14791, %r14790};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	xor.b64  	%rd4281, %rd4032, %rd4008;
	and.b64  	%rd4282, %rd4264, %rd4281;
	xor.b64  	%rd4283, %rd4282, %rd4008;
	add.s64 	%rd4284, %rd4069, %rd3984;
	add.s64 	%rd4285, %rd4284, %rd61;
	add.s64 	%rd4286, %rd4285, %rd4283;
	add.s64 	%rd4287, %rd4286, %rd4280;
	add.s64 	%rd4288, %rd4287, %rd3995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14792,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14793}, %rd4275;
	}
	shf.r.wrap.b32 	%r14794, %r14793, %r14792, 28;
	shf.r.wrap.b32 	%r14795, %r14792, %r14793, 28;
	mov.b64 	%rd4289, {%r14795, %r14794};
	shf.l.wrap.b32 	%r14796, %r14792, %r14793, 30;
	shf.l.wrap.b32 	%r14797, %r14793, %r14792, 30;
	mov.b64 	%rd4290, {%r14797, %r14796};
	xor.b64  	%rd4291, %rd4290, %rd4289;
	shf.l.wrap.b32 	%r14798, %r14792, %r14793, 25;
	shf.l.wrap.b32 	%r14799, %r14793, %r14792, 25;
	mov.b64 	%rd4292, {%r14799, %r14798};
	xor.b64  	%rd4293, %rd4291, %rd4292;
	and.b64  	%rd4294, %rd4275, %rd4043;
	xor.b64  	%rd4295, %rd4275, %rd4043;
	and.b64  	%rd4296, %rd4295, %rd4019;
	or.b64  	%rd4297, %rd4296, %rd4294;
	add.s64 	%rd4298, %rd4287, %rd4297;
	add.s64 	%rd4299, %rd4298, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14800,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14801}, %rd4288;
	}
	shf.r.wrap.b32 	%r14802, %r14801, %r14800, 14;
	shf.r.wrap.b32 	%r14803, %r14800, %r14801, 14;
	mov.b64 	%rd4300, {%r14803, %r14802};
	shf.r.wrap.b32 	%r14804, %r14801, %r14800, 18;
	shf.r.wrap.b32 	%r14805, %r14800, %r14801, 18;
	mov.b64 	%rd4301, {%r14805, %r14804};
	xor.b64  	%rd4302, %rd4301, %rd4300;
	shf.l.wrap.b32 	%r14806, %r14800, %r14801, 23;
	shf.l.wrap.b32 	%r14807, %r14801, %r14800, 23;
	mov.b64 	%rd4303, {%r14807, %r14806};
	xor.b64  	%rd4304, %rd4302, %rd4303;
	xor.b64  	%rd4305, %rd4264, %rd4032;
	and.b64  	%rd4306, %rd4288, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4032;
	add.s64 	%rd4308, %rd4082, %rd4008;
	add.s64 	%rd4309, %rd4308, %rd62;
	add.s64 	%rd4310, %rd4309, %rd4307;
	add.s64 	%rd4311, %rd4310, %rd4304;
	add.s64 	%rd4312, %rd4311, %rd4019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14808,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14809}, %rd4299;
	}
	shf.r.wrap.b32 	%r14810, %r14809, %r14808, 28;
	shf.r.wrap.b32 	%r14811, %r14808, %r14809, 28;
	mov.b64 	%rd4313, {%r14811, %r14810};
	shf.l.wrap.b32 	%r14812, %r14808, %r14809, 30;
	shf.l.wrap.b32 	%r14813, %r14809, %r14808, 30;
	mov.b64 	%rd4314, {%r14813, %r14812};
	xor.b64  	%rd4315, %rd4314, %rd4313;
	shf.l.wrap.b32 	%r14814, %r14808, %r14809, 25;
	shf.l.wrap.b32 	%r14815, %r14809, %r14808, 25;
	mov.b64 	%rd4316, {%r14815, %r14814};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	and.b64  	%rd4318, %rd4299, %rd4275;
	xor.b64  	%rd4319, %rd4299, %rd4275;
	and.b64  	%rd4320, %rd4319, %rd4043;
	or.b64  	%rd4321, %rd4320, %rd4318;
	add.s64 	%rd4322, %rd4311, %rd4321;
	add.s64 	%rd4323, %rd4322, %rd4317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14816,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14817}, %rd4312;
	}
	shf.r.wrap.b32 	%r14818, %r14817, %r14816, 14;
	shf.r.wrap.b32 	%r14819, %r14816, %r14817, 14;
	mov.b64 	%rd4324, {%r14819, %r14818};
	shf.r.wrap.b32 	%r14820, %r14817, %r14816, 18;
	shf.r.wrap.b32 	%r14821, %r14816, %r14817, 18;
	mov.b64 	%rd4325, {%r14821, %r14820};
	xor.b64  	%rd4326, %rd4325, %rd4324;
	shf.l.wrap.b32 	%r14822, %r14816, %r14817, 23;
	shf.l.wrap.b32 	%r14823, %r14817, %r14816, 23;
	mov.b64 	%rd4327, {%r14823, %r14822};
	xor.b64  	%rd4328, %rd4326, %rd4327;
	xor.b64  	%rd4329, %rd4288, %rd4264;
	and.b64  	%rd4330, %rd4312, %rd4329;
	xor.b64  	%rd4331, %rd4330, %rd4264;
	add.s64 	%rd4332, %rd4095, %rd4032;
	add.s64 	%rd4333, %rd4332, %rd63;
	add.s64 	%rd4334, %rd4333, %rd4331;
	add.s64 	%rd4335, %rd4334, %rd4328;
	add.s64 	%rd4336, %rd4335, %rd4043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14824,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14825}, %rd4323;
	}
	shf.r.wrap.b32 	%r14826, %r14825, %r14824, 28;
	shf.r.wrap.b32 	%r14827, %r14824, %r14825, 28;
	mov.b64 	%rd4337, {%r14827, %r14826};
	shf.l.wrap.b32 	%r14828, %r14824, %r14825, 30;
	shf.l.wrap.b32 	%r14829, %r14825, %r14824, 30;
	mov.b64 	%rd4338, {%r14829, %r14828};
	xor.b64  	%rd4339, %rd4338, %rd4337;
	shf.l.wrap.b32 	%r14830, %r14824, %r14825, 25;
	shf.l.wrap.b32 	%r14831, %r14825, %r14824, 25;
	mov.b64 	%rd4340, {%r14831, %r14830};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	and.b64  	%rd4342, %rd4323, %rd4299;
	xor.b64  	%rd4343, %rd4323, %rd4299;
	and.b64  	%rd4344, %rd4343, %rd4275;
	or.b64  	%rd4345, %rd4344, %rd4342;
	add.s64 	%rd4346, %rd4335, %rd4345;
	add.s64 	%rd4347, %rd4346, %rd4341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14832,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14833}, %rd4336;
	}
	shf.r.wrap.b32 	%r14834, %r14833, %r14832, 14;
	shf.r.wrap.b32 	%r14835, %r14832, %r14833, 14;
	mov.b64 	%rd4348, {%r14835, %r14834};
	shf.r.wrap.b32 	%r14836, %r14833, %r14832, 18;
	shf.r.wrap.b32 	%r14837, %r14832, %r14833, 18;
	mov.b64 	%rd4349, {%r14837, %r14836};
	xor.b64  	%rd4350, %rd4349, %rd4348;
	shf.l.wrap.b32 	%r14838, %r14832, %r14833, 23;
	shf.l.wrap.b32 	%r14839, %r14833, %r14832, 23;
	mov.b64 	%rd4351, {%r14839, %r14838};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	xor.b64  	%rd4353, %rd4312, %rd4288;
	and.b64  	%rd4354, %rd4336, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4288;
	add.s64 	%rd4356, %rd4264, %rd4108;
	add.s64 	%rd4357, %rd4356, %rd64;
	add.s64 	%rd4358, %rd4357, %rd4355;
	add.s64 	%rd4359, %rd4358, %rd4352;
	add.s64 	%rd4360, %rd4359, %rd4275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14840,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14841}, %rd4347;
	}
	shf.r.wrap.b32 	%r14842, %r14841, %r14840, 28;
	shf.r.wrap.b32 	%r14843, %r14840, %r14841, 28;
	mov.b64 	%rd4361, {%r14843, %r14842};
	shf.l.wrap.b32 	%r14844, %r14840, %r14841, 30;
	shf.l.wrap.b32 	%r14845, %r14841, %r14840, 30;
	mov.b64 	%rd4362, {%r14845, %r14844};
	xor.b64  	%rd4363, %rd4362, %rd4361;
	shf.l.wrap.b32 	%r14846, %r14840, %r14841, 25;
	shf.l.wrap.b32 	%r14847, %r14841, %r14840, 25;
	mov.b64 	%rd4364, {%r14847, %r14846};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	and.b64  	%rd4366, %rd4347, %rd4323;
	xor.b64  	%rd4367, %rd4347, %rd4323;
	and.b64  	%rd4368, %rd4367, %rd4299;
	or.b64  	%rd4369, %rd4368, %rd4366;
	add.s64 	%rd4370, %rd4359, %rd4369;
	add.s64 	%rd4371, %rd4370, %rd4365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14848,%dummy}, %rd4360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14849}, %rd4360;
	}
	shf.r.wrap.b32 	%r14850, %r14849, %r14848, 14;
	shf.r.wrap.b32 	%r14851, %r14848, %r14849, 14;
	mov.b64 	%rd4372, {%r14851, %r14850};
	shf.r.wrap.b32 	%r14852, %r14849, %r14848, 18;
	shf.r.wrap.b32 	%r14853, %r14848, %r14849, 18;
	mov.b64 	%rd4373, {%r14853, %r14852};
	xor.b64  	%rd4374, %rd4373, %rd4372;
	shf.l.wrap.b32 	%r14854, %r14848, %r14849, 23;
	shf.l.wrap.b32 	%r14855, %r14849, %r14848, 23;
	mov.b64 	%rd4375, {%r14855, %r14854};
	xor.b64  	%rd4376, %rd4374, %rd4375;
	xor.b64  	%rd4377, %rd4336, %rd4312;
	and.b64  	%rd4378, %rd4360, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4312;
	add.s64 	%rd4380, %rd4288, %rd4121;
	add.s64 	%rd4381, %rd4380, %rd65;
	add.s64 	%rd4382, %rd4381, %rd4379;
	add.s64 	%rd4383, %rd4382, %rd4376;
	add.s64 	%rd4384, %rd4383, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14856,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14857}, %rd4371;
	}
	shf.r.wrap.b32 	%r14858, %r14857, %r14856, 28;
	shf.r.wrap.b32 	%r14859, %r14856, %r14857, 28;
	mov.b64 	%rd4385, {%r14859, %r14858};
	shf.l.wrap.b32 	%r14860, %r14856, %r14857, 30;
	shf.l.wrap.b32 	%r14861, %r14857, %r14856, 30;
	mov.b64 	%rd4386, {%r14861, %r14860};
	xor.b64  	%rd4387, %rd4386, %rd4385;
	shf.l.wrap.b32 	%r14862, %r14856, %r14857, 25;
	shf.l.wrap.b32 	%r14863, %r14857, %r14856, 25;
	mov.b64 	%rd4388, {%r14863, %r14862};
	xor.b64  	%rd4389, %rd4387, %rd4388;
	and.b64  	%rd4390, %rd4371, %rd4347;
	xor.b64  	%rd4391, %rd4371, %rd4347;
	and.b64  	%rd4392, %rd4391, %rd4323;
	or.b64  	%rd4393, %rd4392, %rd4390;
	add.s64 	%rd4394, %rd4383, %rd4393;
	add.s64 	%rd4395, %rd4394, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14864,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14865}, %rd4384;
	}
	shf.r.wrap.b32 	%r14866, %r14865, %r14864, 14;
	shf.r.wrap.b32 	%r14867, %r14864, %r14865, 14;
	mov.b64 	%rd4396, {%r14867, %r14866};
	shf.r.wrap.b32 	%r14868, %r14865, %r14864, 18;
	shf.r.wrap.b32 	%r14869, %r14864, %r14865, 18;
	mov.b64 	%rd4397, {%r14869, %r14868};
	xor.b64  	%rd4398, %rd4397, %rd4396;
	shf.l.wrap.b32 	%r14870, %r14864, %r14865, 23;
	shf.l.wrap.b32 	%r14871, %r14865, %r14864, 23;
	mov.b64 	%rd4399, {%r14871, %r14870};
	xor.b64  	%rd4400, %rd4398, %rd4399;
	xor.b64  	%rd4401, %rd4360, %rd4336;
	and.b64  	%rd4402, %rd4384, %rd4401;
	xor.b64  	%rd4403, %rd4402, %rd4336;
	add.s64 	%rd4404, %rd4312, %rd4134;
	add.s64 	%rd4405, %rd4404, %rd66;
	add.s64 	%rd4406, %rd4405, %rd4403;
	add.s64 	%rd4407, %rd4406, %rd4400;
	add.s64 	%rd4408, %rd4407, %rd4323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14872,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14873}, %rd4395;
	}
	shf.r.wrap.b32 	%r14874, %r14873, %r14872, 28;
	shf.r.wrap.b32 	%r14875, %r14872, %r14873, 28;
	mov.b64 	%rd4409, {%r14875, %r14874};
	shf.l.wrap.b32 	%r14876, %r14872, %r14873, 30;
	shf.l.wrap.b32 	%r14877, %r14873, %r14872, 30;
	mov.b64 	%rd4410, {%r14877, %r14876};
	xor.b64  	%rd4411, %rd4410, %rd4409;
	shf.l.wrap.b32 	%r14878, %r14872, %r14873, 25;
	shf.l.wrap.b32 	%r14879, %r14873, %r14872, 25;
	mov.b64 	%rd4412, {%r14879, %r14878};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	and.b64  	%rd4414, %rd4395, %rd4371;
	xor.b64  	%rd4415, %rd4395, %rd4371;
	and.b64  	%rd4416, %rd4415, %rd4347;
	or.b64  	%rd4417, %rd4416, %rd4414;
	add.s64 	%rd4418, %rd4407, %rd4417;
	add.s64 	%rd4419, %rd4418, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14880,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14881}, %rd4408;
	}
	shf.r.wrap.b32 	%r14882, %r14881, %r14880, 14;
	shf.r.wrap.b32 	%r14883, %r14880, %r14881, 14;
	mov.b64 	%rd4420, {%r14883, %r14882};
	shf.r.wrap.b32 	%r14884, %r14881, %r14880, 18;
	shf.r.wrap.b32 	%r14885, %r14880, %r14881, 18;
	mov.b64 	%rd4421, {%r14885, %r14884};
	xor.b64  	%rd4422, %rd4421, %rd4420;
	shf.l.wrap.b32 	%r14886, %r14880, %r14881, 23;
	shf.l.wrap.b32 	%r14887, %r14881, %r14880, 23;
	mov.b64 	%rd4423, {%r14887, %r14886};
	xor.b64  	%rd4424, %rd4422, %rd4423;
	xor.b64  	%rd4425, %rd4384, %rd4360;
	and.b64  	%rd4426, %rd4408, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4360;
	add.s64 	%rd4428, %rd4336, %rd4147;
	add.s64 	%rd4429, %rd4428, %rd67;
	add.s64 	%rd4430, %rd4429, %rd4427;
	add.s64 	%rd4431, %rd4430, %rd4424;
	add.s64 	%rd4432, %rd4431, %rd4347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14888,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14889}, %rd4419;
	}
	shf.r.wrap.b32 	%r14890, %r14889, %r14888, 28;
	shf.r.wrap.b32 	%r14891, %r14888, %r14889, 28;
	mov.b64 	%rd4433, {%r14891, %r14890};
	shf.l.wrap.b32 	%r14892, %r14888, %r14889, 30;
	shf.l.wrap.b32 	%r14893, %r14889, %r14888, 30;
	mov.b64 	%rd4434, {%r14893, %r14892};
	xor.b64  	%rd4435, %rd4434, %rd4433;
	shf.l.wrap.b32 	%r14894, %r14888, %r14889, 25;
	shf.l.wrap.b32 	%r14895, %r14889, %r14888, 25;
	mov.b64 	%rd4436, {%r14895, %r14894};
	xor.b64  	%rd4437, %rd4435, %rd4436;
	and.b64  	%rd4438, %rd4419, %rd4395;
	xor.b64  	%rd4439, %rd4419, %rd4395;
	and.b64  	%rd4440, %rd4439, %rd4371;
	or.b64  	%rd4441, %rd4440, %rd4438;
	add.s64 	%rd4442, %rd4431, %rd4441;
	add.s64 	%rd4443, %rd4442, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14896,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14897}, %rd4432;
	}
	shf.r.wrap.b32 	%r14898, %r14897, %r14896, 14;
	shf.r.wrap.b32 	%r14899, %r14896, %r14897, 14;
	mov.b64 	%rd4444, {%r14899, %r14898};
	shf.r.wrap.b32 	%r14900, %r14897, %r14896, 18;
	shf.r.wrap.b32 	%r14901, %r14896, %r14897, 18;
	mov.b64 	%rd4445, {%r14901, %r14900};
	xor.b64  	%rd4446, %rd4445, %rd4444;
	shf.l.wrap.b32 	%r14902, %r14896, %r14897, 23;
	shf.l.wrap.b32 	%r14903, %r14897, %r14896, 23;
	mov.b64 	%rd4447, {%r14903, %r14902};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	xor.b64  	%rd4449, %rd4408, %rd4384;
	and.b64  	%rd4450, %rd4432, %rd4449;
	xor.b64  	%rd4451, %rd4450, %rd4384;
	add.s64 	%rd4452, %rd4360, %rd4160;
	add.s64 	%rd4453, %rd4452, %rd68;
	add.s64 	%rd4454, %rd4453, %rd4451;
	add.s64 	%rd4455, %rd4454, %rd4448;
	add.s64 	%rd4456, %rd4455, %rd4371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14904,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14905}, %rd4443;
	}
	shf.r.wrap.b32 	%r14906, %r14905, %r14904, 28;
	shf.r.wrap.b32 	%r14907, %r14904, %r14905, 28;
	mov.b64 	%rd4457, {%r14907, %r14906};
	shf.l.wrap.b32 	%r14908, %r14904, %r14905, 30;
	shf.l.wrap.b32 	%r14909, %r14905, %r14904, 30;
	mov.b64 	%rd4458, {%r14909, %r14908};
	xor.b64  	%rd4459, %rd4458, %rd4457;
	shf.l.wrap.b32 	%r14910, %r14904, %r14905, 25;
	shf.l.wrap.b32 	%r14911, %r14905, %r14904, 25;
	mov.b64 	%rd4460, {%r14911, %r14910};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	and.b64  	%rd4462, %rd4443, %rd4419;
	xor.b64  	%rd4463, %rd4443, %rd4419;
	and.b64  	%rd4464, %rd4463, %rd4395;
	or.b64  	%rd4465, %rd4464, %rd4462;
	add.s64 	%rd4466, %rd4455, %rd4465;
	add.s64 	%rd4467, %rd4466, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14912,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14913}, %rd4456;
	}
	shf.r.wrap.b32 	%r14914, %r14913, %r14912, 14;
	shf.r.wrap.b32 	%r14915, %r14912, %r14913, 14;
	mov.b64 	%rd4468, {%r14915, %r14914};
	shf.r.wrap.b32 	%r14916, %r14913, %r14912, 18;
	shf.r.wrap.b32 	%r14917, %r14912, %r14913, 18;
	mov.b64 	%rd4469, {%r14917, %r14916};
	xor.b64  	%rd4470, %rd4469, %rd4468;
	shf.l.wrap.b32 	%r14918, %r14912, %r14913, 23;
	shf.l.wrap.b32 	%r14919, %r14913, %r14912, 23;
	mov.b64 	%rd4471, {%r14919, %r14918};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	xor.b64  	%rd4473, %rd4432, %rd4408;
	and.b64  	%rd4474, %rd4456, %rd4473;
	xor.b64  	%rd4475, %rd4474, %rd4408;
	add.s64 	%rd4476, %rd4384, %rd4173;
	add.s64 	%rd4477, %rd4476, %rd69;
	add.s64 	%rd4478, %rd4477, %rd4475;
	add.s64 	%rd4479, %rd4478, %rd4472;
	add.s64 	%rd4480, %rd4479, %rd4395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14920,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14921}, %rd4467;
	}
	shf.r.wrap.b32 	%r14922, %r14921, %r14920, 28;
	shf.r.wrap.b32 	%r14923, %r14920, %r14921, 28;
	mov.b64 	%rd4481, {%r14923, %r14922};
	shf.l.wrap.b32 	%r14924, %r14920, %r14921, 30;
	shf.l.wrap.b32 	%r14925, %r14921, %r14920, 30;
	mov.b64 	%rd4482, {%r14925, %r14924};
	xor.b64  	%rd4483, %rd4482, %rd4481;
	shf.l.wrap.b32 	%r14926, %r14920, %r14921, 25;
	shf.l.wrap.b32 	%r14927, %r14921, %r14920, 25;
	mov.b64 	%rd4484, {%r14927, %r14926};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	and.b64  	%rd4486, %rd4467, %rd4443;
	xor.b64  	%rd4487, %rd4467, %rd4443;
	and.b64  	%rd4488, %rd4487, %rd4419;
	or.b64  	%rd4489, %rd4488, %rd4486;
	add.s64 	%rd4490, %rd4479, %rd4489;
	add.s64 	%rd4491, %rd4490, %rd4485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14928,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14929}, %rd4480;
	}
	shf.r.wrap.b32 	%r14930, %r14929, %r14928, 14;
	shf.r.wrap.b32 	%r14931, %r14928, %r14929, 14;
	mov.b64 	%rd4492, {%r14931, %r14930};
	shf.r.wrap.b32 	%r14932, %r14929, %r14928, 18;
	shf.r.wrap.b32 	%r14933, %r14928, %r14929, 18;
	mov.b64 	%rd4493, {%r14933, %r14932};
	xor.b64  	%rd4494, %rd4493, %rd4492;
	shf.l.wrap.b32 	%r14934, %r14928, %r14929, 23;
	shf.l.wrap.b32 	%r14935, %r14929, %r14928, 23;
	mov.b64 	%rd4495, {%r14935, %r14934};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	xor.b64  	%rd4497, %rd4456, %rd4432;
	and.b64  	%rd4498, %rd4480, %rd4497;
	xor.b64  	%rd4499, %rd4498, %rd4432;
	add.s64 	%rd4500, %rd4408, %rd4186;
	add.s64 	%rd4501, %rd4500, %rd70;
	add.s64 	%rd4502, %rd4501, %rd4499;
	add.s64 	%rd4503, %rd4502, %rd4496;
	add.s64 	%rd4504, %rd4503, %rd4419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14936,%dummy}, %rd4491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14937}, %rd4491;
	}
	shf.r.wrap.b32 	%r14938, %r14937, %r14936, 28;
	shf.r.wrap.b32 	%r14939, %r14936, %r14937, 28;
	mov.b64 	%rd4505, {%r14939, %r14938};
	shf.l.wrap.b32 	%r14940, %r14936, %r14937, 30;
	shf.l.wrap.b32 	%r14941, %r14937, %r14936, 30;
	mov.b64 	%rd4506, {%r14941, %r14940};
	xor.b64  	%rd4507, %rd4506, %rd4505;
	shf.l.wrap.b32 	%r14942, %r14936, %r14937, 25;
	shf.l.wrap.b32 	%r14943, %r14937, %r14936, 25;
	mov.b64 	%rd4508, {%r14943, %r14942};
	xor.b64  	%rd4509, %rd4507, %rd4508;
	and.b64  	%rd4510, %rd4491, %rd4467;
	xor.b64  	%rd4511, %rd4491, %rd4467;
	and.b64  	%rd4512, %rd4511, %rd4443;
	or.b64  	%rd4513, %rd4512, %rd4510;
	add.s64 	%rd4514, %rd4503, %rd4513;
	add.s64 	%rd4515, %rd4514, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14944,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14945}, %rd4504;
	}
	shf.r.wrap.b32 	%r14946, %r14945, %r14944, 14;
	shf.r.wrap.b32 	%r14947, %r14944, %r14945, 14;
	mov.b64 	%rd4516, {%r14947, %r14946};
	shf.r.wrap.b32 	%r14948, %r14945, %r14944, 18;
	shf.r.wrap.b32 	%r14949, %r14944, %r14945, 18;
	mov.b64 	%rd4517, {%r14949, %r14948};
	xor.b64  	%rd4518, %rd4517, %rd4516;
	shf.l.wrap.b32 	%r14950, %r14944, %r14945, 23;
	shf.l.wrap.b32 	%r14951, %r14945, %r14944, 23;
	mov.b64 	%rd4519, {%r14951, %r14950};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	xor.b64  	%rd4521, %rd4480, %rd4456;
	and.b64  	%rd4522, %rd4504, %rd4521;
	xor.b64  	%rd4523, %rd4522, %rd4456;
	add.s64 	%rd4524, %rd4432, %rd4199;
	add.s64 	%rd4525, %rd4524, %rd71;
	add.s64 	%rd4526, %rd4525, %rd4523;
	add.s64 	%rd4527, %rd4526, %rd4520;
	add.s64 	%rd4528, %rd4527, %rd4443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14952,%dummy}, %rd4515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14953}, %rd4515;
	}
	shf.r.wrap.b32 	%r14954, %r14953, %r14952, 28;
	shf.r.wrap.b32 	%r14955, %r14952, %r14953, 28;
	mov.b64 	%rd4529, {%r14955, %r14954};
	shf.l.wrap.b32 	%r14956, %r14952, %r14953, 30;
	shf.l.wrap.b32 	%r14957, %r14953, %r14952, 30;
	mov.b64 	%rd4530, {%r14957, %r14956};
	xor.b64  	%rd4531, %rd4530, %rd4529;
	shf.l.wrap.b32 	%r14958, %r14952, %r14953, 25;
	shf.l.wrap.b32 	%r14959, %r14953, %r14952, 25;
	mov.b64 	%rd4532, {%r14959, %r14958};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	and.b64  	%rd4534, %rd4515, %rd4491;
	xor.b64  	%rd4535, %rd4515, %rd4491;
	and.b64  	%rd4536, %rd4535, %rd4467;
	or.b64  	%rd4537, %rd4536, %rd4534;
	add.s64 	%rd4538, %rd4527, %rd4537;
	add.s64 	%rd4539, %rd4538, %rd4533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14960,%dummy}, %rd4528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14961}, %rd4528;
	}
	shf.r.wrap.b32 	%r14962, %r14961, %r14960, 14;
	shf.r.wrap.b32 	%r14963, %r14960, %r14961, 14;
	mov.b64 	%rd4540, {%r14963, %r14962};
	shf.r.wrap.b32 	%r14964, %r14961, %r14960, 18;
	shf.r.wrap.b32 	%r14965, %r14960, %r14961, 18;
	mov.b64 	%rd4541, {%r14965, %r14964};
	xor.b64  	%rd4542, %rd4541, %rd4540;
	shf.l.wrap.b32 	%r14966, %r14960, %r14961, 23;
	shf.l.wrap.b32 	%r14967, %r14961, %r14960, 23;
	mov.b64 	%rd4543, {%r14967, %r14966};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	xor.b64  	%rd4545, %rd4504, %rd4480;
	and.b64  	%rd4546, %rd4528, %rd4545;
	xor.b64  	%rd4547, %rd4546, %rd4480;
	add.s64 	%rd4548, %rd4456, %rd4212;
	add.s64 	%rd4549, %rd4548, %rd72;
	add.s64 	%rd4550, %rd4549, %rd4547;
	add.s64 	%rd4551, %rd4550, %rd4544;
	add.s64 	%rd4552, %rd4551, %rd4467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14968,%dummy}, %rd4539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14969}, %rd4539;
	}
	shf.r.wrap.b32 	%r14970, %r14969, %r14968, 28;
	shf.r.wrap.b32 	%r14971, %r14968, %r14969, 28;
	mov.b64 	%rd4553, {%r14971, %r14970};
	shf.l.wrap.b32 	%r14972, %r14968, %r14969, 30;
	shf.l.wrap.b32 	%r14973, %r14969, %r14968, 30;
	mov.b64 	%rd4554, {%r14973, %r14972};
	xor.b64  	%rd4555, %rd4554, %rd4553;
	shf.l.wrap.b32 	%r14974, %r14968, %r14969, 25;
	shf.l.wrap.b32 	%r14975, %r14969, %r14968, 25;
	mov.b64 	%rd4556, {%r14975, %r14974};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	and.b64  	%rd4558, %rd4539, %rd4515;
	xor.b64  	%rd4559, %rd4539, %rd4515;
	and.b64  	%rd4560, %rd4559, %rd4491;
	or.b64  	%rd4561, %rd4560, %rd4558;
	add.s64 	%rd4562, %rd4551, %rd4561;
	add.s64 	%rd4563, %rd4562, %rd4557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14976,%dummy}, %rd4552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14977}, %rd4552;
	}
	shf.r.wrap.b32 	%r14978, %r14977, %r14976, 14;
	shf.r.wrap.b32 	%r14979, %r14976, %r14977, 14;
	mov.b64 	%rd4564, {%r14979, %r14978};
	shf.r.wrap.b32 	%r14980, %r14977, %r14976, 18;
	shf.r.wrap.b32 	%r14981, %r14976, %r14977, 18;
	mov.b64 	%rd4565, {%r14981, %r14980};
	xor.b64  	%rd4566, %rd4565, %rd4564;
	shf.l.wrap.b32 	%r14982, %r14976, %r14977, 23;
	shf.l.wrap.b32 	%r14983, %r14977, %r14976, 23;
	mov.b64 	%rd4567, {%r14983, %r14982};
	xor.b64  	%rd4568, %rd4566, %rd4567;
	xor.b64  	%rd4569, %rd4528, %rd4504;
	and.b64  	%rd4570, %rd4552, %rd4569;
	xor.b64  	%rd4571, %rd4570, %rd4504;
	add.s64 	%rd4572, %rd4480, %rd4225;
	add.s64 	%rd4573, %rd4572, %rd73;
	add.s64 	%rd4574, %rd4573, %rd4571;
	add.s64 	%rd4575, %rd4574, %rd4568;
	add.s64 	%rd4576, %rd4575, %rd4491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14984,%dummy}, %rd4563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14985}, %rd4563;
	}
	shf.r.wrap.b32 	%r14986, %r14985, %r14984, 28;
	shf.r.wrap.b32 	%r14987, %r14984, %r14985, 28;
	mov.b64 	%rd4577, {%r14987, %r14986};
	shf.l.wrap.b32 	%r14988, %r14984, %r14985, 30;
	shf.l.wrap.b32 	%r14989, %r14985, %r14984, 30;
	mov.b64 	%rd4578, {%r14989, %r14988};
	xor.b64  	%rd4579, %rd4578, %rd4577;
	shf.l.wrap.b32 	%r14990, %r14984, %r14985, 25;
	shf.l.wrap.b32 	%r14991, %r14985, %r14984, 25;
	mov.b64 	%rd4580, {%r14991, %r14990};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	and.b64  	%rd4582, %rd4563, %rd4539;
	xor.b64  	%rd4583, %rd4563, %rd4539;
	and.b64  	%rd4584, %rd4583, %rd4515;
	or.b64  	%rd4585, %rd4584, %rd4582;
	add.s64 	%rd4586, %rd4575, %rd4585;
	add.s64 	%rd4587, %rd4586, %rd4581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14992,%dummy}, %rd4576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r14993}, %rd4576;
	}
	shf.r.wrap.b32 	%r14994, %r14993, %r14992, 14;
	shf.r.wrap.b32 	%r14995, %r14992, %r14993, 14;
	mov.b64 	%rd4588, {%r14995, %r14994};
	shf.r.wrap.b32 	%r14996, %r14993, %r14992, 18;
	shf.r.wrap.b32 	%r14997, %r14992, %r14993, 18;
	mov.b64 	%rd4589, {%r14997, %r14996};
	xor.b64  	%rd4590, %rd4589, %rd4588;
	shf.l.wrap.b32 	%r14998, %r14992, %r14993, 23;
	shf.l.wrap.b32 	%r14999, %r14993, %r14992, 23;
	mov.b64 	%rd4591, {%r14999, %r14998};
	xor.b64  	%rd4592, %rd4590, %rd4591;
	xor.b64  	%rd4593, %rd4552, %rd4528;
	and.b64  	%rd4594, %rd4576, %rd4593;
	xor.b64  	%rd4595, %rd4594, %rd4528;
	add.s64 	%rd4596, %rd4504, %rd4238;
	add.s64 	%rd4597, %rd4596, %rd74;
	add.s64 	%rd4598, %rd4597, %rd4595;
	add.s64 	%rd4599, %rd4598, %rd4592;
	add.s64 	%rd4600, %rd4599, %rd4515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15000,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15001}, %rd4587;
	}
	shf.r.wrap.b32 	%r15002, %r15001, %r15000, 28;
	shf.r.wrap.b32 	%r15003, %r15000, %r15001, 28;
	mov.b64 	%rd4601, {%r15003, %r15002};
	shf.l.wrap.b32 	%r15004, %r15000, %r15001, 30;
	shf.l.wrap.b32 	%r15005, %r15001, %r15000, 30;
	mov.b64 	%rd4602, {%r15005, %r15004};
	xor.b64  	%rd4603, %rd4602, %rd4601;
	shf.l.wrap.b32 	%r15006, %r15000, %r15001, 25;
	shf.l.wrap.b32 	%r15007, %r15001, %r15000, 25;
	mov.b64 	%rd4604, {%r15007, %r15006};
	xor.b64  	%rd4605, %rd4603, %rd4604;
	and.b64  	%rd4606, %rd4587, %rd4563;
	xor.b64  	%rd4607, %rd4587, %rd4563;
	and.b64  	%rd4608, %rd4607, %rd4539;
	or.b64  	%rd4609, %rd4608, %rd4606;
	add.s64 	%rd4610, %rd4599, %rd4609;
	add.s64 	%rd4611, %rd4610, %rd4605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15008,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15009}, %rd4600;
	}
	shf.r.wrap.b32 	%r15010, %r15009, %r15008, 14;
	shf.r.wrap.b32 	%r15011, %r15008, %r15009, 14;
	mov.b64 	%rd4612, {%r15011, %r15010};
	shf.r.wrap.b32 	%r15012, %r15009, %r15008, 18;
	shf.r.wrap.b32 	%r15013, %r15008, %r15009, 18;
	mov.b64 	%rd4613, {%r15013, %r15012};
	xor.b64  	%rd4614, %rd4613, %rd4612;
	shf.l.wrap.b32 	%r15014, %r15008, %r15009, 23;
	shf.l.wrap.b32 	%r15015, %r15009, %r15008, 23;
	mov.b64 	%rd4615, {%r15015, %r15014};
	xor.b64  	%rd4616, %rd4614, %rd4615;
	xor.b64  	%rd4617, %rd4576, %rd4552;
	and.b64  	%rd4618, %rd4600, %rd4617;
	xor.b64  	%rd4619, %rd4618, %rd4552;
	add.s64 	%rd4620, %rd4528, %rd4251;
	add.s64 	%rd4621, %rd4620, %rd75;
	add.s64 	%rd4622, %rd4621, %rd4619;
	add.s64 	%rd4623, %rd4622, %rd4616;
	add.s64 	%rd4624, %rd4623, %rd4539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15016,%dummy}, %rd4611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15017}, %rd4611;
	}
	shf.r.wrap.b32 	%r15018, %r15017, %r15016, 28;
	shf.r.wrap.b32 	%r15019, %r15016, %r15017, 28;
	mov.b64 	%rd4625, {%r15019, %r15018};
	shf.l.wrap.b32 	%r15020, %r15016, %r15017, 30;
	shf.l.wrap.b32 	%r15021, %r15017, %r15016, 30;
	mov.b64 	%rd4626, {%r15021, %r15020};
	xor.b64  	%rd4627, %rd4626, %rd4625;
	shf.l.wrap.b32 	%r15022, %r15016, %r15017, 25;
	shf.l.wrap.b32 	%r15023, %r15017, %r15016, 25;
	mov.b64 	%rd4628, {%r15023, %r15022};
	xor.b64  	%rd4629, %rd4627, %rd4628;
	and.b64  	%rd4630, %rd4611, %rd4587;
	xor.b64  	%rd4631, %rd4611, %rd4587;
	and.b64  	%rd4632, %rd4631, %rd4563;
	or.b64  	%rd4633, %rd4632, %rd4630;
	add.s64 	%rd4634, %rd4623, %rd4633;
	add.s64 	%rd4635, %rd4634, %rd4629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15024,%dummy}, %rd4238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15025}, %rd4238;
	}
	shf.r.wrap.b32 	%r15026, %r15025, %r15024, 19;
	shf.r.wrap.b32 	%r15027, %r15024, %r15025, 19;
	mov.b64 	%rd4636, {%r15027, %r15026};
	shf.l.wrap.b32 	%r15028, %r15024, %r15025, 3;
	shf.l.wrap.b32 	%r15029, %r15025, %r15024, 3;
	mov.b64 	%rd4637, {%r15029, %r15028};
	shr.u64 	%rd4638, %rd4238, 6;
	xor.b64  	%rd4639, %rd4636, %rd4638;
	xor.b64  	%rd4640, %rd4639, %rd4637;
	shf.r.wrap.b32 	%r15030, %r14639, %r14638, 1;
	shf.r.wrap.b32 	%r15031, %r14638, %r14639, 1;
	mov.b64 	%rd4641, {%r15031, %r15030};
	shf.r.wrap.b32 	%r15032, %r14639, %r14638, 8;
	shf.r.wrap.b32 	%r15033, %r14638, %r14639, 8;
	mov.b64 	%rd4642, {%r15033, %r15032};
	shr.u64 	%rd4643, %rd4069, 7;
	xor.b64  	%rd4644, %rd4641, %rd4643;
	xor.b64  	%rd4645, %rd4644, %rd4642;
	add.s64 	%rd4646, %rd4173, %rd4056;
	add.s64 	%rd4647, %rd4646, %rd4640;
	add.s64 	%rd4648, %rd4647, %rd4645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15034,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15035}, %rd4251;
	}
	shf.r.wrap.b32 	%r15036, %r15035, %r15034, 19;
	shf.r.wrap.b32 	%r15037, %r15034, %r15035, 19;
	mov.b64 	%rd4649, {%r15037, %r15036};
	shf.l.wrap.b32 	%r15038, %r15034, %r15035, 3;
	shf.l.wrap.b32 	%r15039, %r15035, %r15034, 3;
	mov.b64 	%rd4650, {%r15039, %r15038};
	shr.u64 	%rd4651, %rd4251, 6;
	xor.b64  	%rd4652, %rd4649, %rd4651;
	xor.b64  	%rd4653, %rd4652, %rd4650;
	shf.r.wrap.b32 	%r15040, %r14649, %r14648, 1;
	shf.r.wrap.b32 	%r15041, %r14648, %r14649, 1;
	mov.b64 	%rd4654, {%r15041, %r15040};
	shf.r.wrap.b32 	%r15042, %r14649, %r14648, 8;
	shf.r.wrap.b32 	%r15043, %r14648, %r14649, 8;
	mov.b64 	%rd4655, {%r15043, %r15042};
	shr.u64 	%rd4656, %rd4082, 7;
	xor.b64  	%rd4657, %rd4654, %rd4656;
	xor.b64  	%rd4658, %rd4657, %rd4655;
	add.s64 	%rd4659, %rd4186, %rd4069;
	add.s64 	%rd4660, %rd4659, %rd4653;
	add.s64 	%rd4661, %rd4660, %rd4658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15044,%dummy}, %rd4648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15045}, %rd4648;
	}
	shf.r.wrap.b32 	%r15046, %r15045, %r15044, 19;
	shf.r.wrap.b32 	%r15047, %r15044, %r15045, 19;
	mov.b64 	%rd4662, {%r15047, %r15046};
	shf.l.wrap.b32 	%r15048, %r15044, %r15045, 3;
	shf.l.wrap.b32 	%r15049, %r15045, %r15044, 3;
	mov.b64 	%rd4663, {%r15049, %r15048};
	shr.u64 	%rd4664, %rd4648, 6;
	xor.b64  	%rd4665, %rd4662, %rd4664;
	xor.b64  	%rd4666, %rd4665, %rd4663;
	shf.r.wrap.b32 	%r15050, %r14659, %r14658, 1;
	shf.r.wrap.b32 	%r15051, %r14658, %r14659, 1;
	mov.b64 	%rd4667, {%r15051, %r15050};
	shf.r.wrap.b32 	%r15052, %r14659, %r14658, 8;
	shf.r.wrap.b32 	%r15053, %r14658, %r14659, 8;
	mov.b64 	%rd4668, {%r15053, %r15052};
	shr.u64 	%rd4669, %rd4095, 7;
	xor.b64  	%rd4670, %rd4667, %rd4669;
	xor.b64  	%rd4671, %rd4670, %rd4668;
	add.s64 	%rd4672, %rd4199, %rd4082;
	add.s64 	%rd4673, %rd4672, %rd4666;
	add.s64 	%rd4674, %rd4673, %rd4671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15054,%dummy}, %rd4661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15055}, %rd4661;
	}
	shf.r.wrap.b32 	%r15056, %r15055, %r15054, 19;
	shf.r.wrap.b32 	%r15057, %r15054, %r15055, 19;
	mov.b64 	%rd4675, {%r15057, %r15056};
	shf.l.wrap.b32 	%r15058, %r15054, %r15055, 3;
	shf.l.wrap.b32 	%r15059, %r15055, %r15054, 3;
	mov.b64 	%rd4676, {%r15059, %r15058};
	shr.u64 	%rd4677, %rd4661, 6;
	xor.b64  	%rd4678, %rd4675, %rd4677;
	xor.b64  	%rd4679, %rd4678, %rd4676;
	shf.r.wrap.b32 	%r15060, %r14669, %r14668, 1;
	shf.r.wrap.b32 	%r15061, %r14668, %r14669, 1;
	mov.b64 	%rd4680, {%r15061, %r15060};
	shf.r.wrap.b32 	%r15062, %r14669, %r14668, 8;
	shf.r.wrap.b32 	%r15063, %r14668, %r14669, 8;
	mov.b64 	%rd4681, {%r15063, %r15062};
	shr.u64 	%rd4682, %rd4108, 7;
	xor.b64  	%rd4683, %rd4680, %rd4682;
	xor.b64  	%rd4684, %rd4683, %rd4681;
	add.s64 	%rd4685, %rd4212, %rd4095;
	add.s64 	%rd4686, %rd4685, %rd4679;
	add.s64 	%rd4687, %rd4686, %rd4684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15064,%dummy}, %rd4674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15065}, %rd4674;
	}
	shf.r.wrap.b32 	%r15066, %r15065, %r15064, 19;
	shf.r.wrap.b32 	%r15067, %r15064, %r15065, 19;
	mov.b64 	%rd4688, {%r15067, %r15066};
	shf.l.wrap.b32 	%r15068, %r15064, %r15065, 3;
	shf.l.wrap.b32 	%r15069, %r15065, %r15064, 3;
	mov.b64 	%rd4689, {%r15069, %r15068};
	shr.u64 	%rd4690, %rd4674, 6;
	xor.b64  	%rd4691, %rd4688, %rd4690;
	xor.b64  	%rd4692, %rd4691, %rd4689;
	shf.r.wrap.b32 	%r15070, %r14679, %r14678, 1;
	shf.r.wrap.b32 	%r15071, %r14678, %r14679, 1;
	mov.b64 	%rd4693, {%r15071, %r15070};
	shf.r.wrap.b32 	%r15072, %r14679, %r14678, 8;
	shf.r.wrap.b32 	%r15073, %r14678, %r14679, 8;
	mov.b64 	%rd4694, {%r15073, %r15072};
	shr.u64 	%rd4695, %rd4121, 7;
	xor.b64  	%rd4696, %rd4693, %rd4695;
	xor.b64  	%rd4697, %rd4696, %rd4694;
	add.s64 	%rd4698, %rd4225, %rd4108;
	add.s64 	%rd4699, %rd4698, %rd4692;
	add.s64 	%rd4700, %rd4699, %rd4697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15074,%dummy}, %rd4687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15075}, %rd4687;
	}
	shf.r.wrap.b32 	%r15076, %r15075, %r15074, 19;
	shf.r.wrap.b32 	%r15077, %r15074, %r15075, 19;
	mov.b64 	%rd4701, {%r15077, %r15076};
	shf.l.wrap.b32 	%r15078, %r15074, %r15075, 3;
	shf.l.wrap.b32 	%r15079, %r15075, %r15074, 3;
	mov.b64 	%rd4702, {%r15079, %r15078};
	shr.u64 	%rd4703, %rd4687, 6;
	xor.b64  	%rd4704, %rd4701, %rd4703;
	xor.b64  	%rd4705, %rd4704, %rd4702;
	shf.r.wrap.b32 	%r15080, %r14689, %r14688, 1;
	shf.r.wrap.b32 	%r15081, %r14688, %r14689, 1;
	mov.b64 	%rd4706, {%r15081, %r15080};
	shf.r.wrap.b32 	%r15082, %r14689, %r14688, 8;
	shf.r.wrap.b32 	%r15083, %r14688, %r14689, 8;
	mov.b64 	%rd4707, {%r15083, %r15082};
	shr.u64 	%rd4708, %rd4134, 7;
	xor.b64  	%rd4709, %rd4706, %rd4708;
	xor.b64  	%rd4710, %rd4709, %rd4707;
	add.s64 	%rd4711, %rd4238, %rd4121;
	add.s64 	%rd4712, %rd4711, %rd4705;
	add.s64 	%rd4713, %rd4712, %rd4710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15084,%dummy}, %rd4700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15085}, %rd4700;
	}
	shf.r.wrap.b32 	%r15086, %r15085, %r15084, 19;
	shf.r.wrap.b32 	%r15087, %r15084, %r15085, 19;
	mov.b64 	%rd4714, {%r15087, %r15086};
	shf.l.wrap.b32 	%r15088, %r15084, %r15085, 3;
	shf.l.wrap.b32 	%r15089, %r15085, %r15084, 3;
	mov.b64 	%rd4715, {%r15089, %r15088};
	shr.u64 	%rd4716, %rd4700, 6;
	xor.b64  	%rd4717, %rd4714, %rd4716;
	xor.b64  	%rd4718, %rd4717, %rd4715;
	shf.r.wrap.b32 	%r15090, %r14699, %r14698, 1;
	shf.r.wrap.b32 	%r15091, %r14698, %r14699, 1;
	mov.b64 	%rd4719, {%r15091, %r15090};
	shf.r.wrap.b32 	%r15092, %r14699, %r14698, 8;
	shf.r.wrap.b32 	%r15093, %r14698, %r14699, 8;
	mov.b64 	%rd4720, {%r15093, %r15092};
	shr.u64 	%rd4721, %rd4147, 7;
	xor.b64  	%rd4722, %rd4719, %rd4721;
	xor.b64  	%rd4723, %rd4722, %rd4720;
	add.s64 	%rd4724, %rd4251, %rd4134;
	add.s64 	%rd4725, %rd4724, %rd4718;
	add.s64 	%rd4726, %rd4725, %rd4723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15094,%dummy}, %rd4713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15095}, %rd4713;
	}
	shf.r.wrap.b32 	%r15096, %r15095, %r15094, 19;
	shf.r.wrap.b32 	%r15097, %r15094, %r15095, 19;
	mov.b64 	%rd4727, {%r15097, %r15096};
	shf.l.wrap.b32 	%r15098, %r15094, %r15095, 3;
	shf.l.wrap.b32 	%r15099, %r15095, %r15094, 3;
	mov.b64 	%rd4728, {%r15099, %r15098};
	shr.u64 	%rd4729, %rd4713, 6;
	xor.b64  	%rd4730, %rd4727, %rd4729;
	xor.b64  	%rd4731, %rd4730, %rd4728;
	shf.r.wrap.b32 	%r15100, %r14709, %r14708, 1;
	shf.r.wrap.b32 	%r15101, %r14708, %r14709, 1;
	mov.b64 	%rd4732, {%r15101, %r15100};
	shf.r.wrap.b32 	%r15102, %r14709, %r14708, 8;
	shf.r.wrap.b32 	%r15103, %r14708, %r14709, 8;
	mov.b64 	%rd4733, {%r15103, %r15102};
	shr.u64 	%rd4734, %rd4160, 7;
	xor.b64  	%rd4735, %rd4732, %rd4734;
	xor.b64  	%rd4736, %rd4735, %rd4733;
	add.s64 	%rd4737, %rd4648, %rd4147;
	add.s64 	%rd4738, %rd4737, %rd4731;
	add.s64 	%rd4739, %rd4738, %rd4736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15104,%dummy}, %rd4726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15105}, %rd4726;
	}
	shf.r.wrap.b32 	%r15106, %r15105, %r15104, 19;
	shf.r.wrap.b32 	%r15107, %r15104, %r15105, 19;
	mov.b64 	%rd4740, {%r15107, %r15106};
	shf.l.wrap.b32 	%r15108, %r15104, %r15105, 3;
	shf.l.wrap.b32 	%r15109, %r15105, %r15104, 3;
	mov.b64 	%rd4741, {%r15109, %r15108};
	shr.u64 	%rd4742, %rd4726, 6;
	xor.b64  	%rd4743, %rd4740, %rd4742;
	xor.b64  	%rd4744, %rd4743, %rd4741;
	shf.r.wrap.b32 	%r15110, %r14719, %r14718, 1;
	shf.r.wrap.b32 	%r15111, %r14718, %r14719, 1;
	mov.b64 	%rd4745, {%r15111, %r15110};
	shf.r.wrap.b32 	%r15112, %r14719, %r14718, 8;
	shf.r.wrap.b32 	%r15113, %r14718, %r14719, 8;
	mov.b64 	%rd4746, {%r15113, %r15112};
	shr.u64 	%rd4747, %rd4173, 7;
	xor.b64  	%rd4748, %rd4745, %rd4747;
	xor.b64  	%rd4749, %rd4748, %rd4746;
	add.s64 	%rd4750, %rd4661, %rd4160;
	add.s64 	%rd4751, %rd4750, %rd4744;
	add.s64 	%rd4752, %rd4751, %rd4749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15114,%dummy}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15115}, %rd4739;
	}
	shf.r.wrap.b32 	%r15116, %r15115, %r15114, 19;
	shf.r.wrap.b32 	%r15117, %r15114, %r15115, 19;
	mov.b64 	%rd4753, {%r15117, %r15116};
	shf.l.wrap.b32 	%r15118, %r15114, %r15115, 3;
	shf.l.wrap.b32 	%r15119, %r15115, %r15114, 3;
	mov.b64 	%rd4754, {%r15119, %r15118};
	shr.u64 	%rd4755, %rd4739, 6;
	xor.b64  	%rd4756, %rd4753, %rd4755;
	xor.b64  	%rd4757, %rd4756, %rd4754;
	shf.r.wrap.b32 	%r15120, %r14729, %r14728, 1;
	shf.r.wrap.b32 	%r15121, %r14728, %r14729, 1;
	mov.b64 	%rd4758, {%r15121, %r15120};
	shf.r.wrap.b32 	%r15122, %r14729, %r14728, 8;
	shf.r.wrap.b32 	%r15123, %r14728, %r14729, 8;
	mov.b64 	%rd4759, {%r15123, %r15122};
	shr.u64 	%rd4760, %rd4186, 7;
	xor.b64  	%rd4761, %rd4758, %rd4760;
	xor.b64  	%rd4762, %rd4761, %rd4759;
	add.s64 	%rd4763, %rd4674, %rd4173;
	add.s64 	%rd4764, %rd4763, %rd4757;
	add.s64 	%rd4765, %rd4764, %rd4762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15124,%dummy}, %rd4752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15125}, %rd4752;
	}
	shf.r.wrap.b32 	%r15126, %r15125, %r15124, 19;
	shf.r.wrap.b32 	%r15127, %r15124, %r15125, 19;
	mov.b64 	%rd4766, {%r15127, %r15126};
	shf.l.wrap.b32 	%r15128, %r15124, %r15125, 3;
	shf.l.wrap.b32 	%r15129, %r15125, %r15124, 3;
	mov.b64 	%rd4767, {%r15129, %r15128};
	shr.u64 	%rd4768, %rd4752, 6;
	xor.b64  	%rd4769, %rd4766, %rd4768;
	xor.b64  	%rd4770, %rd4769, %rd4767;
	shf.r.wrap.b32 	%r15130, %r14739, %r14738, 1;
	shf.r.wrap.b32 	%r15131, %r14738, %r14739, 1;
	mov.b64 	%rd4771, {%r15131, %r15130};
	shf.r.wrap.b32 	%r15132, %r14739, %r14738, 8;
	shf.r.wrap.b32 	%r15133, %r14738, %r14739, 8;
	mov.b64 	%rd4772, {%r15133, %r15132};
	shr.u64 	%rd4773, %rd4199, 7;
	xor.b64  	%rd4774, %rd4771, %rd4773;
	xor.b64  	%rd4775, %rd4774, %rd4772;
	add.s64 	%rd4776, %rd4687, %rd4186;
	add.s64 	%rd4777, %rd4776, %rd4770;
	add.s64 	%rd4778, %rd4777, %rd4775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15134,%dummy}, %rd4765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15135}, %rd4765;
	}
	shf.r.wrap.b32 	%r15136, %r15135, %r15134, 19;
	shf.r.wrap.b32 	%r15137, %r15134, %r15135, 19;
	mov.b64 	%rd4779, {%r15137, %r15136};
	shf.l.wrap.b32 	%r15138, %r15134, %r15135, 3;
	shf.l.wrap.b32 	%r15139, %r15135, %r15134, 3;
	mov.b64 	%rd4780, {%r15139, %r15138};
	shr.u64 	%rd4781, %rd4765, 6;
	xor.b64  	%rd4782, %rd4779, %rd4781;
	xor.b64  	%rd4783, %rd4782, %rd4780;
	shf.r.wrap.b32 	%r15140, %r14749, %r14748, 1;
	shf.r.wrap.b32 	%r15141, %r14748, %r14749, 1;
	mov.b64 	%rd4784, {%r15141, %r15140};
	shf.r.wrap.b32 	%r15142, %r14749, %r14748, 8;
	shf.r.wrap.b32 	%r15143, %r14748, %r14749, 8;
	mov.b64 	%rd4785, {%r15143, %r15142};
	shr.u64 	%rd4786, %rd4212, 7;
	xor.b64  	%rd4787, %rd4784, %rd4786;
	xor.b64  	%rd4788, %rd4787, %rd4785;
	add.s64 	%rd4789, %rd4700, %rd4199;
	add.s64 	%rd4790, %rd4789, %rd4783;
	add.s64 	%rd4791, %rd4790, %rd4788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15144,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15145}, %rd4778;
	}
	shf.r.wrap.b32 	%r15146, %r15145, %r15144, 19;
	shf.r.wrap.b32 	%r15147, %r15144, %r15145, 19;
	mov.b64 	%rd4792, {%r15147, %r15146};
	shf.l.wrap.b32 	%r15148, %r15144, %r15145, 3;
	shf.l.wrap.b32 	%r15149, %r15145, %r15144, 3;
	mov.b64 	%rd4793, {%r15149, %r15148};
	shr.u64 	%rd4794, %rd4778, 6;
	xor.b64  	%rd4795, %rd4792, %rd4794;
	xor.b64  	%rd4796, %rd4795, %rd4793;
	shf.r.wrap.b32 	%r15150, %r14759, %r14758, 1;
	shf.r.wrap.b32 	%r15151, %r14758, %r14759, 1;
	mov.b64 	%rd4797, {%r15151, %r15150};
	shf.r.wrap.b32 	%r15152, %r14759, %r14758, 8;
	shf.r.wrap.b32 	%r15153, %r14758, %r14759, 8;
	mov.b64 	%rd4798, {%r15153, %r15152};
	shr.u64 	%rd4799, %rd4225, 7;
	xor.b64  	%rd4800, %rd4797, %rd4799;
	xor.b64  	%rd4801, %rd4800, %rd4798;
	add.s64 	%rd4802, %rd4713, %rd4212;
	add.s64 	%rd4803, %rd4802, %rd4796;
	add.s64 	%rd4804, %rd4803, %rd4801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15154,%dummy}, %rd4791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15155}, %rd4791;
	}
	shf.r.wrap.b32 	%r15156, %r15155, %r15154, 19;
	shf.r.wrap.b32 	%r15157, %r15154, %r15155, 19;
	mov.b64 	%rd4805, {%r15157, %r15156};
	shf.l.wrap.b32 	%r15158, %r15154, %r15155, 3;
	shf.l.wrap.b32 	%r15159, %r15155, %r15154, 3;
	mov.b64 	%rd4806, {%r15159, %r15158};
	shr.u64 	%rd4807, %rd4791, 6;
	xor.b64  	%rd4808, %rd4805, %rd4807;
	xor.b64  	%rd4809, %rd4808, %rd4806;
	shf.r.wrap.b32 	%r15160, %r15025, %r15024, 1;
	shf.r.wrap.b32 	%r15161, %r15024, %r15025, 1;
	mov.b64 	%rd4810, {%r15161, %r15160};
	shf.r.wrap.b32 	%r15162, %r15025, %r15024, 8;
	shf.r.wrap.b32 	%r15163, %r15024, %r15025, 8;
	mov.b64 	%rd4811, {%r15163, %r15162};
	shr.u64 	%rd4812, %rd4238, 7;
	xor.b64  	%rd4813, %rd4810, %rd4812;
	xor.b64  	%rd4814, %rd4813, %rd4811;
	add.s64 	%rd4815, %rd4726, %rd4225;
	add.s64 	%rd4816, %rd4815, %rd4809;
	add.s64 	%rd4817, %rd4816, %rd4814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15164,%dummy}, %rd4804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15165}, %rd4804;
	}
	shf.r.wrap.b32 	%r15166, %r15165, %r15164, 19;
	shf.r.wrap.b32 	%r15167, %r15164, %r15165, 19;
	mov.b64 	%rd4818, {%r15167, %r15166};
	shf.l.wrap.b32 	%r15168, %r15164, %r15165, 3;
	shf.l.wrap.b32 	%r15169, %r15165, %r15164, 3;
	mov.b64 	%rd4819, {%r15169, %r15168};
	shr.u64 	%rd4820, %rd4804, 6;
	xor.b64  	%rd4821, %rd4818, %rd4820;
	xor.b64  	%rd4822, %rd4821, %rd4819;
	shf.r.wrap.b32 	%r15170, %r15035, %r15034, 1;
	shf.r.wrap.b32 	%r15171, %r15034, %r15035, 1;
	mov.b64 	%rd4823, {%r15171, %r15170};
	shf.r.wrap.b32 	%r15172, %r15035, %r15034, 8;
	shf.r.wrap.b32 	%r15173, %r15034, %r15035, 8;
	mov.b64 	%rd4824, {%r15173, %r15172};
	shr.u64 	%rd4825, %rd4251, 7;
	xor.b64  	%rd4826, %rd4823, %rd4825;
	xor.b64  	%rd4827, %rd4826, %rd4824;
	add.s64 	%rd4828, %rd4739, %rd4238;
	add.s64 	%rd4829, %rd4828, %rd4822;
	add.s64 	%rd4830, %rd4829, %rd4827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15174,%dummy}, %rd4817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15175}, %rd4817;
	}
	shf.r.wrap.b32 	%r15176, %r15175, %r15174, 19;
	shf.r.wrap.b32 	%r15177, %r15174, %r15175, 19;
	mov.b64 	%rd4831, {%r15177, %r15176};
	shf.l.wrap.b32 	%r15178, %r15174, %r15175, 3;
	shf.l.wrap.b32 	%r15179, %r15175, %r15174, 3;
	mov.b64 	%rd4832, {%r15179, %r15178};
	shr.u64 	%rd4833, %rd4817, 6;
	xor.b64  	%rd4834, %rd4831, %rd4833;
	xor.b64  	%rd4835, %rd4834, %rd4832;
	shf.r.wrap.b32 	%r15180, %r15045, %r15044, 1;
	shf.r.wrap.b32 	%r15181, %r15044, %r15045, 1;
	mov.b64 	%rd4836, {%r15181, %r15180};
	shf.r.wrap.b32 	%r15182, %r15045, %r15044, 8;
	shf.r.wrap.b32 	%r15183, %r15044, %r15045, 8;
	mov.b64 	%rd4837, {%r15183, %r15182};
	shr.u64 	%rd4838, %rd4648, 7;
	xor.b64  	%rd4839, %rd4836, %rd4838;
	xor.b64  	%rd4840, %rd4839, %rd4837;
	add.s64 	%rd4841, %rd4752, %rd4251;
	add.s64 	%rd4842, %rd4841, %rd4835;
	add.s64 	%rd4843, %rd4842, %rd4840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15184,%dummy}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15185}, %rd4624;
	}
	shf.r.wrap.b32 	%r15186, %r15185, %r15184, 14;
	shf.r.wrap.b32 	%r15187, %r15184, %r15185, 14;
	mov.b64 	%rd4844, {%r15187, %r15186};
	shf.r.wrap.b32 	%r15188, %r15185, %r15184, 18;
	shf.r.wrap.b32 	%r15189, %r15184, %r15185, 18;
	mov.b64 	%rd4845, {%r15189, %r15188};
	xor.b64  	%rd4846, %rd4845, %rd4844;
	shf.l.wrap.b32 	%r15190, %r15184, %r15185, 23;
	shf.l.wrap.b32 	%r15191, %r15185, %r15184, 23;
	mov.b64 	%rd4847, {%r15191, %r15190};
	xor.b64  	%rd4848, %rd4846, %rd4847;
	xor.b64  	%rd4849, %rd4600, %rd4576;
	and.b64  	%rd4850, %rd4624, %rd4849;
	xor.b64  	%rd4851, %rd4850, %rd4576;
	add.s64 	%rd4852, %rd4851, %rd4552;
	add.s64 	%rd4853, %rd4852, %rd4648;
	add.s64 	%rd4854, %rd4853, %rd76;
	add.s64 	%rd4855, %rd4854, %rd4848;
	add.s64 	%rd4856, %rd4855, %rd4563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15192,%dummy}, %rd4635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15193}, %rd4635;
	}
	shf.r.wrap.b32 	%r15194, %r15193, %r15192, 28;
	shf.r.wrap.b32 	%r15195, %r15192, %r15193, 28;
	mov.b64 	%rd4857, {%r15195, %r15194};
	shf.l.wrap.b32 	%r15196, %r15192, %r15193, 30;
	shf.l.wrap.b32 	%r15197, %r15193, %r15192, 30;
	mov.b64 	%rd4858, {%r15197, %r15196};
	xor.b64  	%rd4859, %rd4858, %rd4857;
	shf.l.wrap.b32 	%r15198, %r15192, %r15193, 25;
	shf.l.wrap.b32 	%r15199, %r15193, %r15192, 25;
	mov.b64 	%rd4860, {%r15199, %r15198};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	and.b64  	%rd4862, %rd4635, %rd4611;
	xor.b64  	%rd4863, %rd4635, %rd4611;
	and.b64  	%rd4864, %rd4863, %rd4587;
	or.b64  	%rd4865, %rd4864, %rd4862;
	add.s64 	%rd4866, %rd4855, %rd4865;
	add.s64 	%rd4867, %rd4866, %rd4861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15200,%dummy}, %rd4856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15201}, %rd4856;
	}
	shf.r.wrap.b32 	%r15202, %r15201, %r15200, 14;
	shf.r.wrap.b32 	%r15203, %r15200, %r15201, 14;
	mov.b64 	%rd4868, {%r15203, %r15202};
	shf.r.wrap.b32 	%r15204, %r15201, %r15200, 18;
	shf.r.wrap.b32 	%r15205, %r15200, %r15201, 18;
	mov.b64 	%rd4869, {%r15205, %r15204};
	xor.b64  	%rd4870, %rd4869, %rd4868;
	shf.l.wrap.b32 	%r15206, %r15200, %r15201, 23;
	shf.l.wrap.b32 	%r15207, %r15201, %r15200, 23;
	mov.b64 	%rd4871, {%r15207, %r15206};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	xor.b64  	%rd4873, %rd4624, %rd4600;
	and.b64  	%rd4874, %rd4856, %rd4873;
	xor.b64  	%rd4875, %rd4874, %rd4600;
	add.s64 	%rd4876, %rd4661, %rd4576;
	add.s64 	%rd4877, %rd4876, %rd77;
	add.s64 	%rd4878, %rd4877, %rd4875;
	add.s64 	%rd4879, %rd4878, %rd4872;
	add.s64 	%rd4880, %rd4879, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15208,%dummy}, %rd4867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15209}, %rd4867;
	}
	shf.r.wrap.b32 	%r15210, %r15209, %r15208, 28;
	shf.r.wrap.b32 	%r15211, %r15208, %r15209, 28;
	mov.b64 	%rd4881, {%r15211, %r15210};
	shf.l.wrap.b32 	%r15212, %r15208, %r15209, 30;
	shf.l.wrap.b32 	%r15213, %r15209, %r15208, 30;
	mov.b64 	%rd4882, {%r15213, %r15212};
	xor.b64  	%rd4883, %rd4882, %rd4881;
	shf.l.wrap.b32 	%r15214, %r15208, %r15209, 25;
	shf.l.wrap.b32 	%r15215, %r15209, %r15208, 25;
	mov.b64 	%rd4884, {%r15215, %r15214};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	and.b64  	%rd4886, %rd4867, %rd4635;
	xor.b64  	%rd4887, %rd4867, %rd4635;
	and.b64  	%rd4888, %rd4887, %rd4611;
	or.b64  	%rd4889, %rd4888, %rd4886;
	add.s64 	%rd4890, %rd4879, %rd4889;
	add.s64 	%rd4891, %rd4890, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15216,%dummy}, %rd4880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15217}, %rd4880;
	}
	shf.r.wrap.b32 	%r15218, %r15217, %r15216, 14;
	shf.r.wrap.b32 	%r15219, %r15216, %r15217, 14;
	mov.b64 	%rd4892, {%r15219, %r15218};
	shf.r.wrap.b32 	%r15220, %r15217, %r15216, 18;
	shf.r.wrap.b32 	%r15221, %r15216, %r15217, 18;
	mov.b64 	%rd4893, {%r15221, %r15220};
	xor.b64  	%rd4894, %rd4893, %rd4892;
	shf.l.wrap.b32 	%r15222, %r15216, %r15217, 23;
	shf.l.wrap.b32 	%r15223, %r15217, %r15216, 23;
	mov.b64 	%rd4895, {%r15223, %r15222};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	xor.b64  	%rd4897, %rd4856, %rd4624;
	and.b64  	%rd4898, %rd4880, %rd4897;
	xor.b64  	%rd4899, %rd4898, %rd4624;
	add.s64 	%rd4900, %rd4674, %rd4600;
	add.s64 	%rd4901, %rd4900, %rd78;
	add.s64 	%rd4902, %rd4901, %rd4899;
	add.s64 	%rd4903, %rd4902, %rd4896;
	add.s64 	%rd4904, %rd4903, %rd4611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15224,%dummy}, %rd4891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15225}, %rd4891;
	}
	shf.r.wrap.b32 	%r15226, %r15225, %r15224, 28;
	shf.r.wrap.b32 	%r15227, %r15224, %r15225, 28;
	mov.b64 	%rd4905, {%r15227, %r15226};
	shf.l.wrap.b32 	%r15228, %r15224, %r15225, 30;
	shf.l.wrap.b32 	%r15229, %r15225, %r15224, 30;
	mov.b64 	%rd4906, {%r15229, %r15228};
	xor.b64  	%rd4907, %rd4906, %rd4905;
	shf.l.wrap.b32 	%r15230, %r15224, %r15225, 25;
	shf.l.wrap.b32 	%r15231, %r15225, %r15224, 25;
	mov.b64 	%rd4908, {%r15231, %r15230};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	and.b64  	%rd4910, %rd4891, %rd4867;
	xor.b64  	%rd4911, %rd4891, %rd4867;
	and.b64  	%rd4912, %rd4911, %rd4635;
	or.b64  	%rd4913, %rd4912, %rd4910;
	add.s64 	%rd4914, %rd4903, %rd4913;
	add.s64 	%rd4915, %rd4914, %rd4909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15232,%dummy}, %rd4904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15233}, %rd4904;
	}
	shf.r.wrap.b32 	%r15234, %r15233, %r15232, 14;
	shf.r.wrap.b32 	%r15235, %r15232, %r15233, 14;
	mov.b64 	%rd4916, {%r15235, %r15234};
	shf.r.wrap.b32 	%r15236, %r15233, %r15232, 18;
	shf.r.wrap.b32 	%r15237, %r15232, %r15233, 18;
	mov.b64 	%rd4917, {%r15237, %r15236};
	xor.b64  	%rd4918, %rd4917, %rd4916;
	shf.l.wrap.b32 	%r15238, %r15232, %r15233, 23;
	shf.l.wrap.b32 	%r15239, %r15233, %r15232, 23;
	mov.b64 	%rd4919, {%r15239, %r15238};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	xor.b64  	%rd4921, %rd4880, %rd4856;
	and.b64  	%rd4922, %rd4904, %rd4921;
	xor.b64  	%rd4923, %rd4922, %rd4856;
	add.s64 	%rd4924, %rd4687, %rd4624;
	add.s64 	%rd4925, %rd4924, %rd79;
	add.s64 	%rd4926, %rd4925, %rd4923;
	add.s64 	%rd4927, %rd4926, %rd4920;
	add.s64 	%rd4928, %rd4927, %rd4635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15240,%dummy}, %rd4915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15241}, %rd4915;
	}
	shf.r.wrap.b32 	%r15242, %r15241, %r15240, 28;
	shf.r.wrap.b32 	%r15243, %r15240, %r15241, 28;
	mov.b64 	%rd4929, {%r15243, %r15242};
	shf.l.wrap.b32 	%r15244, %r15240, %r15241, 30;
	shf.l.wrap.b32 	%r15245, %r15241, %r15240, 30;
	mov.b64 	%rd4930, {%r15245, %r15244};
	xor.b64  	%rd4931, %rd4930, %rd4929;
	shf.l.wrap.b32 	%r15246, %r15240, %r15241, 25;
	shf.l.wrap.b32 	%r15247, %r15241, %r15240, 25;
	mov.b64 	%rd4932, {%r15247, %r15246};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	and.b64  	%rd4934, %rd4915, %rd4891;
	xor.b64  	%rd4935, %rd4915, %rd4891;
	and.b64  	%rd4936, %rd4935, %rd4867;
	or.b64  	%rd4937, %rd4936, %rd4934;
	add.s64 	%rd4938, %rd4927, %rd4937;
	add.s64 	%rd4939, %rd4938, %rd4933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15248,%dummy}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15249}, %rd4928;
	}
	shf.r.wrap.b32 	%r15250, %r15249, %r15248, 14;
	shf.r.wrap.b32 	%r15251, %r15248, %r15249, 14;
	mov.b64 	%rd4940, {%r15251, %r15250};
	shf.r.wrap.b32 	%r15252, %r15249, %r15248, 18;
	shf.r.wrap.b32 	%r15253, %r15248, %r15249, 18;
	mov.b64 	%rd4941, {%r15253, %r15252};
	xor.b64  	%rd4942, %rd4941, %rd4940;
	shf.l.wrap.b32 	%r15254, %r15248, %r15249, 23;
	shf.l.wrap.b32 	%r15255, %r15249, %r15248, 23;
	mov.b64 	%rd4943, {%r15255, %r15254};
	xor.b64  	%rd4944, %rd4942, %rd4943;
	xor.b64  	%rd4945, %rd4904, %rd4880;
	and.b64  	%rd4946, %rd4928, %rd4945;
	xor.b64  	%rd4947, %rd4946, %rd4880;
	add.s64 	%rd4948, %rd4856, %rd4700;
	add.s64 	%rd4949, %rd4948, %rd80;
	add.s64 	%rd4950, %rd4949, %rd4947;
	add.s64 	%rd4951, %rd4950, %rd4944;
	add.s64 	%rd4952, %rd4951, %rd4867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15256,%dummy}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15257}, %rd4939;
	}
	shf.r.wrap.b32 	%r15258, %r15257, %r15256, 28;
	shf.r.wrap.b32 	%r15259, %r15256, %r15257, 28;
	mov.b64 	%rd4953, {%r15259, %r15258};
	shf.l.wrap.b32 	%r15260, %r15256, %r15257, 30;
	shf.l.wrap.b32 	%r15261, %r15257, %r15256, 30;
	mov.b64 	%rd4954, {%r15261, %r15260};
	xor.b64  	%rd4955, %rd4954, %rd4953;
	shf.l.wrap.b32 	%r15262, %r15256, %r15257, 25;
	shf.l.wrap.b32 	%r15263, %r15257, %r15256, 25;
	mov.b64 	%rd4956, {%r15263, %r15262};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	and.b64  	%rd4958, %rd4939, %rd4915;
	xor.b64  	%rd4959, %rd4939, %rd4915;
	and.b64  	%rd4960, %rd4959, %rd4891;
	or.b64  	%rd4961, %rd4960, %rd4958;
	add.s64 	%rd4962, %rd4951, %rd4961;
	add.s64 	%rd4963, %rd4962, %rd4957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15264,%dummy}, %rd4952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15265}, %rd4952;
	}
	shf.r.wrap.b32 	%r15266, %r15265, %r15264, 14;
	shf.r.wrap.b32 	%r15267, %r15264, %r15265, 14;
	mov.b64 	%rd4964, {%r15267, %r15266};
	shf.r.wrap.b32 	%r15268, %r15265, %r15264, 18;
	shf.r.wrap.b32 	%r15269, %r15264, %r15265, 18;
	mov.b64 	%rd4965, {%r15269, %r15268};
	xor.b64  	%rd4966, %rd4965, %rd4964;
	shf.l.wrap.b32 	%r15270, %r15264, %r15265, 23;
	shf.l.wrap.b32 	%r15271, %r15265, %r15264, 23;
	mov.b64 	%rd4967, {%r15271, %r15270};
	xor.b64  	%rd4968, %rd4966, %rd4967;
	xor.b64  	%rd4969, %rd4928, %rd4904;
	and.b64  	%rd4970, %rd4952, %rd4969;
	xor.b64  	%rd4971, %rd4970, %rd4904;
	add.s64 	%rd4972, %rd4880, %rd4713;
	add.s64 	%rd4973, %rd4972, %rd81;
	add.s64 	%rd4974, %rd4973, %rd4971;
	add.s64 	%rd4975, %rd4974, %rd4968;
	add.s64 	%rd4976, %rd4975, %rd4891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15272,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15273}, %rd4963;
	}
	shf.r.wrap.b32 	%r15274, %r15273, %r15272, 28;
	shf.r.wrap.b32 	%r15275, %r15272, %r15273, 28;
	mov.b64 	%rd4977, {%r15275, %r15274};
	shf.l.wrap.b32 	%r15276, %r15272, %r15273, 30;
	shf.l.wrap.b32 	%r15277, %r15273, %r15272, 30;
	mov.b64 	%rd4978, {%r15277, %r15276};
	xor.b64  	%rd4979, %rd4978, %rd4977;
	shf.l.wrap.b32 	%r15278, %r15272, %r15273, 25;
	shf.l.wrap.b32 	%r15279, %r15273, %r15272, 25;
	mov.b64 	%rd4980, {%r15279, %r15278};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	and.b64  	%rd4982, %rd4963, %rd4939;
	xor.b64  	%rd4983, %rd4963, %rd4939;
	and.b64  	%rd4984, %rd4983, %rd4915;
	or.b64  	%rd4985, %rd4984, %rd4982;
	add.s64 	%rd4986, %rd4975, %rd4985;
	add.s64 	%rd4987, %rd4986, %rd4981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15280,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15281}, %rd4976;
	}
	shf.r.wrap.b32 	%r15282, %r15281, %r15280, 14;
	shf.r.wrap.b32 	%r15283, %r15280, %r15281, 14;
	mov.b64 	%rd4988, {%r15283, %r15282};
	shf.r.wrap.b32 	%r15284, %r15281, %r15280, 18;
	shf.r.wrap.b32 	%r15285, %r15280, %r15281, 18;
	mov.b64 	%rd4989, {%r15285, %r15284};
	xor.b64  	%rd4990, %rd4989, %rd4988;
	shf.l.wrap.b32 	%r15286, %r15280, %r15281, 23;
	shf.l.wrap.b32 	%r15287, %r15281, %r15280, 23;
	mov.b64 	%rd4991, {%r15287, %r15286};
	xor.b64  	%rd4992, %rd4990, %rd4991;
	xor.b64  	%rd4993, %rd4952, %rd4928;
	and.b64  	%rd4994, %rd4976, %rd4993;
	xor.b64  	%rd4995, %rd4994, %rd4928;
	add.s64 	%rd4996, %rd4904, %rd4726;
	add.s64 	%rd4997, %rd4996, %rd82;
	add.s64 	%rd4998, %rd4997, %rd4995;
	add.s64 	%rd4999, %rd4998, %rd4992;
	add.s64 	%rd5000, %rd4999, %rd4915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15288,%dummy}, %rd4987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15289}, %rd4987;
	}
	shf.r.wrap.b32 	%r15290, %r15289, %r15288, 28;
	shf.r.wrap.b32 	%r15291, %r15288, %r15289, 28;
	mov.b64 	%rd5001, {%r15291, %r15290};
	shf.l.wrap.b32 	%r15292, %r15288, %r15289, 30;
	shf.l.wrap.b32 	%r15293, %r15289, %r15288, 30;
	mov.b64 	%rd5002, {%r15293, %r15292};
	xor.b64  	%rd5003, %rd5002, %rd5001;
	shf.l.wrap.b32 	%r15294, %r15288, %r15289, 25;
	shf.l.wrap.b32 	%r15295, %r15289, %r15288, 25;
	mov.b64 	%rd5004, {%r15295, %r15294};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	and.b64  	%rd5006, %rd4987, %rd4963;
	xor.b64  	%rd5007, %rd4987, %rd4963;
	and.b64  	%rd5008, %rd5007, %rd4939;
	or.b64  	%rd5009, %rd5008, %rd5006;
	add.s64 	%rd5010, %rd4999, %rd5009;
	add.s64 	%rd5011, %rd5010, %rd5005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15296,%dummy}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15297}, %rd5000;
	}
	shf.r.wrap.b32 	%r15298, %r15297, %r15296, 14;
	shf.r.wrap.b32 	%r15299, %r15296, %r15297, 14;
	mov.b64 	%rd5012, {%r15299, %r15298};
	shf.r.wrap.b32 	%r15300, %r15297, %r15296, 18;
	shf.r.wrap.b32 	%r15301, %r15296, %r15297, 18;
	mov.b64 	%rd5013, {%r15301, %r15300};
	xor.b64  	%rd5014, %rd5013, %rd5012;
	shf.l.wrap.b32 	%r15302, %r15296, %r15297, 23;
	shf.l.wrap.b32 	%r15303, %r15297, %r15296, 23;
	mov.b64 	%rd5015, {%r15303, %r15302};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	xor.b64  	%rd5017, %rd4976, %rd4952;
	and.b64  	%rd5018, %rd5000, %rd5017;
	xor.b64  	%rd5019, %rd5018, %rd4952;
	add.s64 	%rd5020, %rd4928, %rd4739;
	add.s64 	%rd5021, %rd5020, %rd83;
	add.s64 	%rd5022, %rd5021, %rd5019;
	add.s64 	%rd5023, %rd5022, %rd5016;
	add.s64 	%rd5024, %rd5023, %rd4939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15304,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15305}, %rd5011;
	}
	shf.r.wrap.b32 	%r15306, %r15305, %r15304, 28;
	shf.r.wrap.b32 	%r15307, %r15304, %r15305, 28;
	mov.b64 	%rd5025, {%r15307, %r15306};
	shf.l.wrap.b32 	%r15308, %r15304, %r15305, 30;
	shf.l.wrap.b32 	%r15309, %r15305, %r15304, 30;
	mov.b64 	%rd5026, {%r15309, %r15308};
	xor.b64  	%rd5027, %rd5026, %rd5025;
	shf.l.wrap.b32 	%r15310, %r15304, %r15305, 25;
	shf.l.wrap.b32 	%r15311, %r15305, %r15304, 25;
	mov.b64 	%rd5028, {%r15311, %r15310};
	xor.b64  	%rd5029, %rd5027, %rd5028;
	and.b64  	%rd5030, %rd5011, %rd4987;
	xor.b64  	%rd5031, %rd5011, %rd4987;
	and.b64  	%rd5032, %rd5031, %rd4963;
	or.b64  	%rd5033, %rd5032, %rd5030;
	add.s64 	%rd5034, %rd5023, %rd5033;
	add.s64 	%rd5035, %rd5034, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15312,%dummy}, %rd5024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15313}, %rd5024;
	}
	shf.r.wrap.b32 	%r15314, %r15313, %r15312, 14;
	shf.r.wrap.b32 	%r15315, %r15312, %r15313, 14;
	mov.b64 	%rd5036, {%r15315, %r15314};
	shf.r.wrap.b32 	%r15316, %r15313, %r15312, 18;
	shf.r.wrap.b32 	%r15317, %r15312, %r15313, 18;
	mov.b64 	%rd5037, {%r15317, %r15316};
	xor.b64  	%rd5038, %rd5037, %rd5036;
	shf.l.wrap.b32 	%r15318, %r15312, %r15313, 23;
	shf.l.wrap.b32 	%r15319, %r15313, %r15312, 23;
	mov.b64 	%rd5039, {%r15319, %r15318};
	xor.b64  	%rd5040, %rd5038, %rd5039;
	xor.b64  	%rd5041, %rd5000, %rd4976;
	and.b64  	%rd5042, %rd5024, %rd5041;
	xor.b64  	%rd5043, %rd5042, %rd4976;
	add.s64 	%rd5044, %rd4952, %rd4752;
	add.s64 	%rd5045, %rd5044, %rd84;
	add.s64 	%rd5046, %rd5045, %rd5043;
	add.s64 	%rd5047, %rd5046, %rd5040;
	add.s64 	%rd5048, %rd5047, %rd4963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15320,%dummy}, %rd5035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15321}, %rd5035;
	}
	shf.r.wrap.b32 	%r15322, %r15321, %r15320, 28;
	shf.r.wrap.b32 	%r15323, %r15320, %r15321, 28;
	mov.b64 	%rd5049, {%r15323, %r15322};
	shf.l.wrap.b32 	%r15324, %r15320, %r15321, 30;
	shf.l.wrap.b32 	%r15325, %r15321, %r15320, 30;
	mov.b64 	%rd5050, {%r15325, %r15324};
	xor.b64  	%rd5051, %rd5050, %rd5049;
	shf.l.wrap.b32 	%r15326, %r15320, %r15321, 25;
	shf.l.wrap.b32 	%r15327, %r15321, %r15320, 25;
	mov.b64 	%rd5052, {%r15327, %r15326};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	and.b64  	%rd5054, %rd5035, %rd5011;
	xor.b64  	%rd5055, %rd5035, %rd5011;
	and.b64  	%rd5056, %rd5055, %rd4987;
	or.b64  	%rd5057, %rd5056, %rd5054;
	add.s64 	%rd5058, %rd5047, %rd5057;
	add.s64 	%rd5059, %rd5058, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15328,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15329}, %rd5048;
	}
	shf.r.wrap.b32 	%r15330, %r15329, %r15328, 14;
	shf.r.wrap.b32 	%r15331, %r15328, %r15329, 14;
	mov.b64 	%rd5060, {%r15331, %r15330};
	shf.r.wrap.b32 	%r15332, %r15329, %r15328, 18;
	shf.r.wrap.b32 	%r15333, %r15328, %r15329, 18;
	mov.b64 	%rd5061, {%r15333, %r15332};
	xor.b64  	%rd5062, %rd5061, %rd5060;
	shf.l.wrap.b32 	%r15334, %r15328, %r15329, 23;
	shf.l.wrap.b32 	%r15335, %r15329, %r15328, 23;
	mov.b64 	%rd5063, {%r15335, %r15334};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	xor.b64  	%rd5065, %rd5024, %rd5000;
	and.b64  	%rd5066, %rd5048, %rd5065;
	xor.b64  	%rd5067, %rd5066, %rd5000;
	add.s64 	%rd5068, %rd4976, %rd4765;
	add.s64 	%rd5069, %rd5068, %rd85;
	add.s64 	%rd5070, %rd5069, %rd5067;
	add.s64 	%rd5071, %rd5070, %rd5064;
	add.s64 	%rd5072, %rd5071, %rd4987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15336,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15337}, %rd5059;
	}
	shf.r.wrap.b32 	%r15338, %r15337, %r15336, 28;
	shf.r.wrap.b32 	%r15339, %r15336, %r15337, 28;
	mov.b64 	%rd5073, {%r15339, %r15338};
	shf.l.wrap.b32 	%r15340, %r15336, %r15337, 30;
	shf.l.wrap.b32 	%r15341, %r15337, %r15336, 30;
	mov.b64 	%rd5074, {%r15341, %r15340};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.l.wrap.b32 	%r15342, %r15336, %r15337, 25;
	shf.l.wrap.b32 	%r15343, %r15337, %r15336, 25;
	mov.b64 	%rd5076, {%r15343, %r15342};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	and.b64  	%rd5078, %rd5059, %rd5035;
	xor.b64  	%rd5079, %rd5059, %rd5035;
	and.b64  	%rd5080, %rd5079, %rd5011;
	or.b64  	%rd5081, %rd5080, %rd5078;
	add.s64 	%rd5082, %rd5071, %rd5081;
	add.s64 	%rd5083, %rd5082, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15344,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15345}, %rd5072;
	}
	shf.r.wrap.b32 	%r15346, %r15345, %r15344, 14;
	shf.r.wrap.b32 	%r15347, %r15344, %r15345, 14;
	mov.b64 	%rd5084, {%r15347, %r15346};
	shf.r.wrap.b32 	%r15348, %r15345, %r15344, 18;
	shf.r.wrap.b32 	%r15349, %r15344, %r15345, 18;
	mov.b64 	%rd5085, {%r15349, %r15348};
	xor.b64  	%rd5086, %rd5085, %rd5084;
	shf.l.wrap.b32 	%r15350, %r15344, %r15345, 23;
	shf.l.wrap.b32 	%r15351, %r15345, %r15344, 23;
	mov.b64 	%rd5087, {%r15351, %r15350};
	xor.b64  	%rd5088, %rd5086, %rd5087;
	xor.b64  	%rd5089, %rd5048, %rd5024;
	and.b64  	%rd5090, %rd5072, %rd5089;
	xor.b64  	%rd5091, %rd5090, %rd5024;
	add.s64 	%rd5092, %rd5000, %rd4778;
	add.s64 	%rd5093, %rd5092, %rd86;
	add.s64 	%rd5094, %rd5093, %rd5091;
	add.s64 	%rd5095, %rd5094, %rd5088;
	add.s64 	%rd5096, %rd5095, %rd5011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15352,%dummy}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15353}, %rd5083;
	}
	shf.r.wrap.b32 	%r15354, %r15353, %r15352, 28;
	shf.r.wrap.b32 	%r15355, %r15352, %r15353, 28;
	mov.b64 	%rd5097, {%r15355, %r15354};
	shf.l.wrap.b32 	%r15356, %r15352, %r15353, 30;
	shf.l.wrap.b32 	%r15357, %r15353, %r15352, 30;
	mov.b64 	%rd5098, {%r15357, %r15356};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.l.wrap.b32 	%r15358, %r15352, %r15353, 25;
	shf.l.wrap.b32 	%r15359, %r15353, %r15352, 25;
	mov.b64 	%rd5100, {%r15359, %r15358};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	and.b64  	%rd5102, %rd5083, %rd5059;
	xor.b64  	%rd5103, %rd5083, %rd5059;
	and.b64  	%rd5104, %rd5103, %rd5035;
	or.b64  	%rd5105, %rd5104, %rd5102;
	add.s64 	%rd5106, %rd5095, %rd5105;
	add.s64 	%rd5107, %rd5106, %rd5101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15360,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15361}, %rd5096;
	}
	shf.r.wrap.b32 	%r15362, %r15361, %r15360, 14;
	shf.r.wrap.b32 	%r15363, %r15360, %r15361, 14;
	mov.b64 	%rd5108, {%r15363, %r15362};
	shf.r.wrap.b32 	%r15364, %r15361, %r15360, 18;
	shf.r.wrap.b32 	%r15365, %r15360, %r15361, 18;
	mov.b64 	%rd5109, {%r15365, %r15364};
	xor.b64  	%rd5110, %rd5109, %rd5108;
	shf.l.wrap.b32 	%r15366, %r15360, %r15361, 23;
	shf.l.wrap.b32 	%r15367, %r15361, %r15360, 23;
	mov.b64 	%rd5111, {%r15367, %r15366};
	xor.b64  	%rd5112, %rd5110, %rd5111;
	xor.b64  	%rd5113, %rd5072, %rd5048;
	and.b64  	%rd5114, %rd5096, %rd5113;
	xor.b64  	%rd5115, %rd5114, %rd5048;
	add.s64 	%rd5116, %rd5024, %rd4791;
	add.s64 	%rd5117, %rd5116, %rd87;
	add.s64 	%rd5118, %rd5117, %rd5115;
	add.s64 	%rd5119, %rd5118, %rd5112;
	add.s64 	%rd5120, %rd5119, %rd5035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15368,%dummy}, %rd5107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15369}, %rd5107;
	}
	shf.r.wrap.b32 	%r15370, %r15369, %r15368, 28;
	shf.r.wrap.b32 	%r15371, %r15368, %r15369, 28;
	mov.b64 	%rd5121, {%r15371, %r15370};
	shf.l.wrap.b32 	%r15372, %r15368, %r15369, 30;
	shf.l.wrap.b32 	%r15373, %r15369, %r15368, 30;
	mov.b64 	%rd5122, {%r15373, %r15372};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.l.wrap.b32 	%r15374, %r15368, %r15369, 25;
	shf.l.wrap.b32 	%r15375, %r15369, %r15368, 25;
	mov.b64 	%rd5124, {%r15375, %r15374};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	and.b64  	%rd5126, %rd5107, %rd5083;
	xor.b64  	%rd5127, %rd5107, %rd5083;
	and.b64  	%rd5128, %rd5127, %rd5059;
	or.b64  	%rd5129, %rd5128, %rd5126;
	add.s64 	%rd5130, %rd5119, %rd5129;
	add.s64 	%rd5131, %rd5130, %rd5125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15376,%dummy}, %rd5120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15377}, %rd5120;
	}
	shf.r.wrap.b32 	%r15378, %r15377, %r15376, 14;
	shf.r.wrap.b32 	%r15379, %r15376, %r15377, 14;
	mov.b64 	%rd5132, {%r15379, %r15378};
	shf.r.wrap.b32 	%r15380, %r15377, %r15376, 18;
	shf.r.wrap.b32 	%r15381, %r15376, %r15377, 18;
	mov.b64 	%rd5133, {%r15381, %r15380};
	xor.b64  	%rd5134, %rd5133, %rd5132;
	shf.l.wrap.b32 	%r15382, %r15376, %r15377, 23;
	shf.l.wrap.b32 	%r15383, %r15377, %r15376, 23;
	mov.b64 	%rd5135, {%r15383, %r15382};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	xor.b64  	%rd5137, %rd5096, %rd5072;
	and.b64  	%rd5138, %rd5120, %rd5137;
	xor.b64  	%rd5139, %rd5138, %rd5072;
	add.s64 	%rd5140, %rd5048, %rd4804;
	add.s64 	%rd5141, %rd5140, %rd88;
	add.s64 	%rd5142, %rd5141, %rd5139;
	add.s64 	%rd5143, %rd5142, %rd5136;
	add.s64 	%rd5144, %rd5143, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15384,%dummy}, %rd5131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15385}, %rd5131;
	}
	shf.r.wrap.b32 	%r15386, %r15385, %r15384, 28;
	shf.r.wrap.b32 	%r15387, %r15384, %r15385, 28;
	mov.b64 	%rd5145, {%r15387, %r15386};
	shf.l.wrap.b32 	%r15388, %r15384, %r15385, 30;
	shf.l.wrap.b32 	%r15389, %r15385, %r15384, 30;
	mov.b64 	%rd5146, {%r15389, %r15388};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.l.wrap.b32 	%r15390, %r15384, %r15385, 25;
	shf.l.wrap.b32 	%r15391, %r15385, %r15384, 25;
	mov.b64 	%rd5148, {%r15391, %r15390};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	and.b64  	%rd5150, %rd5131, %rd5107;
	xor.b64  	%rd5151, %rd5131, %rd5107;
	and.b64  	%rd5152, %rd5151, %rd5083;
	or.b64  	%rd5153, %rd5152, %rd5150;
	add.s64 	%rd5154, %rd5143, %rd5153;
	add.s64 	%rd5155, %rd5154, %rd5149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15392,%dummy}, %rd5144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15393}, %rd5144;
	}
	shf.r.wrap.b32 	%r15394, %r15393, %r15392, 14;
	shf.r.wrap.b32 	%r15395, %r15392, %r15393, 14;
	mov.b64 	%rd5156, {%r15395, %r15394};
	shf.r.wrap.b32 	%r15396, %r15393, %r15392, 18;
	shf.r.wrap.b32 	%r15397, %r15392, %r15393, 18;
	mov.b64 	%rd5157, {%r15397, %r15396};
	xor.b64  	%rd5158, %rd5157, %rd5156;
	shf.l.wrap.b32 	%r15398, %r15392, %r15393, 23;
	shf.l.wrap.b32 	%r15399, %r15393, %r15392, 23;
	mov.b64 	%rd5159, {%r15399, %r15398};
	xor.b64  	%rd5160, %rd5158, %rd5159;
	xor.b64  	%rd5161, %rd5120, %rd5096;
	and.b64  	%rd5162, %rd5144, %rd5161;
	xor.b64  	%rd5163, %rd5162, %rd5096;
	add.s64 	%rd5164, %rd5072, %rd4817;
	add.s64 	%rd5165, %rd5164, %rd89;
	add.s64 	%rd5166, %rd5165, %rd5163;
	add.s64 	%rd5167, %rd5166, %rd5160;
	add.s64 	%rd5168, %rd5167, %rd5083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15400,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15401}, %rd5155;
	}
	shf.r.wrap.b32 	%r15402, %r15401, %r15400, 28;
	shf.r.wrap.b32 	%r15403, %r15400, %r15401, 28;
	mov.b64 	%rd5169, {%r15403, %r15402};
	shf.l.wrap.b32 	%r15404, %r15400, %r15401, 30;
	shf.l.wrap.b32 	%r15405, %r15401, %r15400, 30;
	mov.b64 	%rd5170, {%r15405, %r15404};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.l.wrap.b32 	%r15406, %r15400, %r15401, 25;
	shf.l.wrap.b32 	%r15407, %r15401, %r15400, 25;
	mov.b64 	%rd5172, {%r15407, %r15406};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	and.b64  	%rd5174, %rd5155, %rd5131;
	xor.b64  	%rd5175, %rd5155, %rd5131;
	and.b64  	%rd5176, %rd5175, %rd5107;
	or.b64  	%rd5177, %rd5176, %rd5174;
	add.s64 	%rd5178, %rd5167, %rd5177;
	add.s64 	%rd5179, %rd5178, %rd5173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15408,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15409}, %rd5168;
	}
	shf.r.wrap.b32 	%r15410, %r15409, %r15408, 14;
	shf.r.wrap.b32 	%r15411, %r15408, %r15409, 14;
	mov.b64 	%rd5180, {%r15411, %r15410};
	shf.r.wrap.b32 	%r15412, %r15409, %r15408, 18;
	shf.r.wrap.b32 	%r15413, %r15408, %r15409, 18;
	mov.b64 	%rd5181, {%r15413, %r15412};
	xor.b64  	%rd5182, %rd5181, %rd5180;
	shf.l.wrap.b32 	%r15414, %r15408, %r15409, 23;
	shf.l.wrap.b32 	%r15415, %r15409, %r15408, 23;
	mov.b64 	%rd5183, {%r15415, %r15414};
	xor.b64  	%rd5184, %rd5182, %rd5183;
	xor.b64  	%rd5185, %rd5144, %rd5120;
	and.b64  	%rd5186, %rd5168, %rd5185;
	xor.b64  	%rd5187, %rd5186, %rd5120;
	add.s64 	%rd5188, %rd5096, %rd4830;
	add.s64 	%rd5189, %rd5188, %rd90;
	add.s64 	%rd5190, %rd5189, %rd5187;
	add.s64 	%rd5191, %rd5190, %rd5184;
	add.s64 	%rd5192, %rd5191, %rd5107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15416,%dummy}, %rd5179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15417}, %rd5179;
	}
	shf.r.wrap.b32 	%r15418, %r15417, %r15416, 28;
	shf.r.wrap.b32 	%r15419, %r15416, %r15417, 28;
	mov.b64 	%rd5193, {%r15419, %r15418};
	shf.l.wrap.b32 	%r15420, %r15416, %r15417, 30;
	shf.l.wrap.b32 	%r15421, %r15417, %r15416, 30;
	mov.b64 	%rd5194, {%r15421, %r15420};
	xor.b64  	%rd5195, %rd5194, %rd5193;
	shf.l.wrap.b32 	%r15422, %r15416, %r15417, 25;
	shf.l.wrap.b32 	%r15423, %r15417, %r15416, 25;
	mov.b64 	%rd5196, {%r15423, %r15422};
	xor.b64  	%rd5197, %rd5195, %rd5196;
	and.b64  	%rd5198, %rd5179, %rd5155;
	xor.b64  	%rd5199, %rd5179, %rd5155;
	and.b64  	%rd5200, %rd5199, %rd5131;
	or.b64  	%rd5201, %rd5200, %rd5198;
	add.s64 	%rd5202, %rd5191, %rd5201;
	add.s64 	%rd5203, %rd5202, %rd5197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15424,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15425}, %rd5192;
	}
	shf.r.wrap.b32 	%r15426, %r15425, %r15424, 14;
	shf.r.wrap.b32 	%r15427, %r15424, %r15425, 14;
	mov.b64 	%rd5204, {%r15427, %r15426};
	shf.r.wrap.b32 	%r15428, %r15425, %r15424, 18;
	shf.r.wrap.b32 	%r15429, %r15424, %r15425, 18;
	mov.b64 	%rd5205, {%r15429, %r15428};
	xor.b64  	%rd5206, %rd5205, %rd5204;
	shf.l.wrap.b32 	%r15430, %r15424, %r15425, 23;
	shf.l.wrap.b32 	%r15431, %r15425, %r15424, 23;
	mov.b64 	%rd5207, {%r15431, %r15430};
	xor.b64  	%rd5208, %rd5206, %rd5207;
	xor.b64  	%rd5209, %rd5168, %rd5144;
	and.b64  	%rd5210, %rd5192, %rd5209;
	xor.b64  	%rd5211, %rd5210, %rd5144;
	add.s64 	%rd5212, %rd5120, %rd4843;
	add.s64 	%rd5213, %rd5212, %rd91;
	add.s64 	%rd5214, %rd5213, %rd5211;
	add.s64 	%rd5215, %rd5214, %rd5208;
	add.s64 	%rd5216, %rd5215, %rd5131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15432,%dummy}, %rd5203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15433}, %rd5203;
	}
	shf.r.wrap.b32 	%r15434, %r15433, %r15432, 28;
	shf.r.wrap.b32 	%r15435, %r15432, %r15433, 28;
	mov.b64 	%rd5217, {%r15435, %r15434};
	shf.l.wrap.b32 	%r15436, %r15432, %r15433, 30;
	shf.l.wrap.b32 	%r15437, %r15433, %r15432, 30;
	mov.b64 	%rd5218, {%r15437, %r15436};
	xor.b64  	%rd5219, %rd5218, %rd5217;
	shf.l.wrap.b32 	%r15438, %r15432, %r15433, 25;
	shf.l.wrap.b32 	%r15439, %r15433, %r15432, 25;
	mov.b64 	%rd5220, {%r15439, %r15438};
	xor.b64  	%rd5221, %rd5219, %rd5220;
	and.b64  	%rd5222, %rd5203, %rd5179;
	xor.b64  	%rd5223, %rd5203, %rd5179;
	and.b64  	%rd5224, %rd5223, %rd5155;
	or.b64  	%rd5225, %rd5224, %rd5222;
	add.s64 	%rd5226, %rd5215, %rd5225;
	add.s64 	%rd5227, %rd5226, %rd5221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15440,%dummy}, %rd4830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15441}, %rd4830;
	}
	shf.r.wrap.b32 	%r15442, %r15441, %r15440, 19;
	shf.r.wrap.b32 	%r15443, %r15440, %r15441, 19;
	mov.b64 	%rd5228, {%r15443, %r15442};
	shf.l.wrap.b32 	%r15444, %r15440, %r15441, 3;
	shf.l.wrap.b32 	%r15445, %r15441, %r15440, 3;
	mov.b64 	%rd5229, {%r15445, %r15444};
	shr.u64 	%rd5230, %rd4830, 6;
	xor.b64  	%rd5231, %rd5228, %rd5230;
	xor.b64  	%rd5232, %rd5231, %rd5229;
	shf.r.wrap.b32 	%r15446, %r15055, %r15054, 1;
	shf.r.wrap.b32 	%r15447, %r15054, %r15055, 1;
	mov.b64 	%rd5233, {%r15447, %r15446};
	shf.r.wrap.b32 	%r15448, %r15055, %r15054, 8;
	shf.r.wrap.b32 	%r15449, %r15054, %r15055, 8;
	mov.b64 	%rd5234, {%r15449, %r15448};
	shr.u64 	%rd5235, %rd4661, 7;
	xor.b64  	%rd5236, %rd5233, %rd5235;
	xor.b64  	%rd5237, %rd5236, %rd5234;
	add.s64 	%rd5238, %rd4765, %rd4648;
	add.s64 	%rd5239, %rd5238, %rd5232;
	add.s64 	%rd5240, %rd5239, %rd5237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15450,%dummy}, %rd4843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15451}, %rd4843;
	}
	shf.r.wrap.b32 	%r15452, %r15451, %r15450, 19;
	shf.r.wrap.b32 	%r15453, %r15450, %r15451, 19;
	mov.b64 	%rd5241, {%r15453, %r15452};
	shf.l.wrap.b32 	%r15454, %r15450, %r15451, 3;
	shf.l.wrap.b32 	%r15455, %r15451, %r15450, 3;
	mov.b64 	%rd5242, {%r15455, %r15454};
	shr.u64 	%rd5243, %rd4843, 6;
	xor.b64  	%rd5244, %rd5241, %rd5243;
	xor.b64  	%rd5245, %rd5244, %rd5242;
	shf.r.wrap.b32 	%r15456, %r15065, %r15064, 1;
	shf.r.wrap.b32 	%r15457, %r15064, %r15065, 1;
	mov.b64 	%rd5246, {%r15457, %r15456};
	shf.r.wrap.b32 	%r15458, %r15065, %r15064, 8;
	shf.r.wrap.b32 	%r15459, %r15064, %r15065, 8;
	mov.b64 	%rd5247, {%r15459, %r15458};
	shr.u64 	%rd5248, %rd4674, 7;
	xor.b64  	%rd5249, %rd5246, %rd5248;
	xor.b64  	%rd5250, %rd5249, %rd5247;
	add.s64 	%rd5251, %rd4778, %rd4661;
	add.s64 	%rd5252, %rd5251, %rd5245;
	add.s64 	%rd5253, %rd5252, %rd5250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15460,%dummy}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15461}, %rd5240;
	}
	shf.r.wrap.b32 	%r15462, %r15461, %r15460, 19;
	shf.r.wrap.b32 	%r15463, %r15460, %r15461, 19;
	mov.b64 	%rd5254, {%r15463, %r15462};
	shf.l.wrap.b32 	%r15464, %r15460, %r15461, 3;
	shf.l.wrap.b32 	%r15465, %r15461, %r15460, 3;
	mov.b64 	%rd5255, {%r15465, %r15464};
	shr.u64 	%rd5256, %rd5240, 6;
	xor.b64  	%rd5257, %rd5254, %rd5256;
	xor.b64  	%rd5258, %rd5257, %rd5255;
	shf.r.wrap.b32 	%r15466, %r15075, %r15074, 1;
	shf.r.wrap.b32 	%r15467, %r15074, %r15075, 1;
	mov.b64 	%rd5259, {%r15467, %r15466};
	shf.r.wrap.b32 	%r15468, %r15075, %r15074, 8;
	shf.r.wrap.b32 	%r15469, %r15074, %r15075, 8;
	mov.b64 	%rd5260, {%r15469, %r15468};
	shr.u64 	%rd5261, %rd4687, 7;
	xor.b64  	%rd5262, %rd5259, %rd5261;
	xor.b64  	%rd5263, %rd5262, %rd5260;
	add.s64 	%rd5264, %rd4791, %rd4674;
	add.s64 	%rd5265, %rd5264, %rd5258;
	add.s64 	%rd5266, %rd5265, %rd5263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15470,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15471}, %rd5253;
	}
	shf.r.wrap.b32 	%r15472, %r15471, %r15470, 19;
	shf.r.wrap.b32 	%r15473, %r15470, %r15471, 19;
	mov.b64 	%rd5267, {%r15473, %r15472};
	shf.l.wrap.b32 	%r15474, %r15470, %r15471, 3;
	shf.l.wrap.b32 	%r15475, %r15471, %r15470, 3;
	mov.b64 	%rd5268, {%r15475, %r15474};
	shr.u64 	%rd5269, %rd5253, 6;
	xor.b64  	%rd5270, %rd5267, %rd5269;
	xor.b64  	%rd5271, %rd5270, %rd5268;
	shf.r.wrap.b32 	%r15476, %r15085, %r15084, 1;
	shf.r.wrap.b32 	%r15477, %r15084, %r15085, 1;
	mov.b64 	%rd5272, {%r15477, %r15476};
	shf.r.wrap.b32 	%r15478, %r15085, %r15084, 8;
	shf.r.wrap.b32 	%r15479, %r15084, %r15085, 8;
	mov.b64 	%rd5273, {%r15479, %r15478};
	shr.u64 	%rd5274, %rd4700, 7;
	xor.b64  	%rd5275, %rd5272, %rd5274;
	xor.b64  	%rd5276, %rd5275, %rd5273;
	add.s64 	%rd5277, %rd4804, %rd4687;
	add.s64 	%rd5278, %rd5277, %rd5271;
	add.s64 	%rd5279, %rd5278, %rd5276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15480,%dummy}, %rd5266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15481}, %rd5266;
	}
	shf.r.wrap.b32 	%r15482, %r15481, %r15480, 19;
	shf.r.wrap.b32 	%r15483, %r15480, %r15481, 19;
	mov.b64 	%rd5280, {%r15483, %r15482};
	shf.l.wrap.b32 	%r15484, %r15480, %r15481, 3;
	shf.l.wrap.b32 	%r15485, %r15481, %r15480, 3;
	mov.b64 	%rd5281, {%r15485, %r15484};
	shr.u64 	%rd5282, %rd5266, 6;
	xor.b64  	%rd5283, %rd5280, %rd5282;
	xor.b64  	%rd5284, %rd5283, %rd5281;
	shf.r.wrap.b32 	%r15486, %r15095, %r15094, 1;
	shf.r.wrap.b32 	%r15487, %r15094, %r15095, 1;
	mov.b64 	%rd5285, {%r15487, %r15486};
	shf.r.wrap.b32 	%r15488, %r15095, %r15094, 8;
	shf.r.wrap.b32 	%r15489, %r15094, %r15095, 8;
	mov.b64 	%rd5286, {%r15489, %r15488};
	shr.u64 	%rd5287, %rd4713, 7;
	xor.b64  	%rd5288, %rd5285, %rd5287;
	xor.b64  	%rd5289, %rd5288, %rd5286;
	add.s64 	%rd5290, %rd4817, %rd4700;
	add.s64 	%rd5291, %rd5290, %rd5284;
	add.s64 	%rd5292, %rd5291, %rd5289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15490,%dummy}, %rd5279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15491}, %rd5279;
	}
	shf.r.wrap.b32 	%r15492, %r15491, %r15490, 19;
	shf.r.wrap.b32 	%r15493, %r15490, %r15491, 19;
	mov.b64 	%rd5293, {%r15493, %r15492};
	shf.l.wrap.b32 	%r15494, %r15490, %r15491, 3;
	shf.l.wrap.b32 	%r15495, %r15491, %r15490, 3;
	mov.b64 	%rd5294, {%r15495, %r15494};
	shr.u64 	%rd5295, %rd5279, 6;
	xor.b64  	%rd5296, %rd5293, %rd5295;
	xor.b64  	%rd5297, %rd5296, %rd5294;
	shf.r.wrap.b32 	%r15496, %r15105, %r15104, 1;
	shf.r.wrap.b32 	%r15497, %r15104, %r15105, 1;
	mov.b64 	%rd5298, {%r15497, %r15496};
	shf.r.wrap.b32 	%r15498, %r15105, %r15104, 8;
	shf.r.wrap.b32 	%r15499, %r15104, %r15105, 8;
	mov.b64 	%rd5299, {%r15499, %r15498};
	shr.u64 	%rd5300, %rd4726, 7;
	xor.b64  	%rd5301, %rd5298, %rd5300;
	xor.b64  	%rd5302, %rd5301, %rd5299;
	add.s64 	%rd5303, %rd4830, %rd4713;
	add.s64 	%rd5304, %rd5303, %rd5297;
	add.s64 	%rd5305, %rd5304, %rd5302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15500,%dummy}, %rd5292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15501}, %rd5292;
	}
	shf.r.wrap.b32 	%r15502, %r15501, %r15500, 19;
	shf.r.wrap.b32 	%r15503, %r15500, %r15501, 19;
	mov.b64 	%rd5306, {%r15503, %r15502};
	shf.l.wrap.b32 	%r15504, %r15500, %r15501, 3;
	shf.l.wrap.b32 	%r15505, %r15501, %r15500, 3;
	mov.b64 	%rd5307, {%r15505, %r15504};
	shr.u64 	%rd5308, %rd5292, 6;
	xor.b64  	%rd5309, %rd5306, %rd5308;
	xor.b64  	%rd5310, %rd5309, %rd5307;
	shf.r.wrap.b32 	%r15506, %r15115, %r15114, 1;
	shf.r.wrap.b32 	%r15507, %r15114, %r15115, 1;
	mov.b64 	%rd5311, {%r15507, %r15506};
	shf.r.wrap.b32 	%r15508, %r15115, %r15114, 8;
	shf.r.wrap.b32 	%r15509, %r15114, %r15115, 8;
	mov.b64 	%rd5312, {%r15509, %r15508};
	shr.u64 	%rd5313, %rd4739, 7;
	xor.b64  	%rd5314, %rd5311, %rd5313;
	xor.b64  	%rd5315, %rd5314, %rd5312;
	add.s64 	%rd5316, %rd4843, %rd4726;
	add.s64 	%rd5317, %rd5316, %rd5310;
	add.s64 	%rd5318, %rd5317, %rd5315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15510,%dummy}, %rd5305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15511}, %rd5305;
	}
	shf.r.wrap.b32 	%r15512, %r15511, %r15510, 19;
	shf.r.wrap.b32 	%r15513, %r15510, %r15511, 19;
	mov.b64 	%rd5319, {%r15513, %r15512};
	shf.l.wrap.b32 	%r15514, %r15510, %r15511, 3;
	shf.l.wrap.b32 	%r15515, %r15511, %r15510, 3;
	mov.b64 	%rd5320, {%r15515, %r15514};
	shr.u64 	%rd5321, %rd5305, 6;
	xor.b64  	%rd5322, %rd5319, %rd5321;
	xor.b64  	%rd5323, %rd5322, %rd5320;
	shf.r.wrap.b32 	%r15516, %r15125, %r15124, 1;
	shf.r.wrap.b32 	%r15517, %r15124, %r15125, 1;
	mov.b64 	%rd5324, {%r15517, %r15516};
	shf.r.wrap.b32 	%r15518, %r15125, %r15124, 8;
	shf.r.wrap.b32 	%r15519, %r15124, %r15125, 8;
	mov.b64 	%rd5325, {%r15519, %r15518};
	shr.u64 	%rd5326, %rd4752, 7;
	xor.b64  	%rd5327, %rd5324, %rd5326;
	xor.b64  	%rd5328, %rd5327, %rd5325;
	add.s64 	%rd5329, %rd5240, %rd4739;
	add.s64 	%rd5330, %rd5329, %rd5323;
	add.s64 	%rd5331, %rd5330, %rd5328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15520,%dummy}, %rd5318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15521}, %rd5318;
	}
	shf.r.wrap.b32 	%r15522, %r15521, %r15520, 19;
	shf.r.wrap.b32 	%r15523, %r15520, %r15521, 19;
	mov.b64 	%rd5332, {%r15523, %r15522};
	shf.l.wrap.b32 	%r15524, %r15520, %r15521, 3;
	shf.l.wrap.b32 	%r15525, %r15521, %r15520, 3;
	mov.b64 	%rd5333, {%r15525, %r15524};
	shr.u64 	%rd5334, %rd5318, 6;
	xor.b64  	%rd5335, %rd5332, %rd5334;
	xor.b64  	%rd5336, %rd5335, %rd5333;
	shf.r.wrap.b32 	%r15526, %r15135, %r15134, 1;
	shf.r.wrap.b32 	%r15527, %r15134, %r15135, 1;
	mov.b64 	%rd5337, {%r15527, %r15526};
	shf.r.wrap.b32 	%r15528, %r15135, %r15134, 8;
	shf.r.wrap.b32 	%r15529, %r15134, %r15135, 8;
	mov.b64 	%rd5338, {%r15529, %r15528};
	shr.u64 	%rd5339, %rd4765, 7;
	xor.b64  	%rd5340, %rd5337, %rd5339;
	xor.b64  	%rd5341, %rd5340, %rd5338;
	add.s64 	%rd5342, %rd5253, %rd4752;
	add.s64 	%rd5343, %rd5342, %rd5336;
	add.s64 	%rd5344, %rd5343, %rd5341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15530,%dummy}, %rd5331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15531}, %rd5331;
	}
	shf.r.wrap.b32 	%r15532, %r15531, %r15530, 19;
	shf.r.wrap.b32 	%r15533, %r15530, %r15531, 19;
	mov.b64 	%rd5345, {%r15533, %r15532};
	shf.l.wrap.b32 	%r15534, %r15530, %r15531, 3;
	shf.l.wrap.b32 	%r15535, %r15531, %r15530, 3;
	mov.b64 	%rd5346, {%r15535, %r15534};
	shr.u64 	%rd5347, %rd5331, 6;
	xor.b64  	%rd5348, %rd5345, %rd5347;
	xor.b64  	%rd5349, %rd5348, %rd5346;
	shf.r.wrap.b32 	%r15536, %r15145, %r15144, 1;
	shf.r.wrap.b32 	%r15537, %r15144, %r15145, 1;
	mov.b64 	%rd5350, {%r15537, %r15536};
	shf.r.wrap.b32 	%r15538, %r15145, %r15144, 8;
	shf.r.wrap.b32 	%r15539, %r15144, %r15145, 8;
	mov.b64 	%rd5351, {%r15539, %r15538};
	shr.u64 	%rd5352, %rd4778, 7;
	xor.b64  	%rd5353, %rd5350, %rd5352;
	xor.b64  	%rd5354, %rd5353, %rd5351;
	add.s64 	%rd5355, %rd5266, %rd4765;
	add.s64 	%rd5356, %rd5355, %rd5349;
	add.s64 	%rd5357, %rd5356, %rd5354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15540,%dummy}, %rd5344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15541}, %rd5344;
	}
	shf.r.wrap.b32 	%r15542, %r15541, %r15540, 19;
	shf.r.wrap.b32 	%r15543, %r15540, %r15541, 19;
	mov.b64 	%rd5358, {%r15543, %r15542};
	shf.l.wrap.b32 	%r15544, %r15540, %r15541, 3;
	shf.l.wrap.b32 	%r15545, %r15541, %r15540, 3;
	mov.b64 	%rd5359, {%r15545, %r15544};
	shr.u64 	%rd5360, %rd5344, 6;
	xor.b64  	%rd5361, %rd5358, %rd5360;
	xor.b64  	%rd5362, %rd5361, %rd5359;
	shf.r.wrap.b32 	%r15546, %r15155, %r15154, 1;
	shf.r.wrap.b32 	%r15547, %r15154, %r15155, 1;
	mov.b64 	%rd5363, {%r15547, %r15546};
	shf.r.wrap.b32 	%r15548, %r15155, %r15154, 8;
	shf.r.wrap.b32 	%r15549, %r15154, %r15155, 8;
	mov.b64 	%rd5364, {%r15549, %r15548};
	shr.u64 	%rd5365, %rd4791, 7;
	xor.b64  	%rd5366, %rd5363, %rd5365;
	xor.b64  	%rd5367, %rd5366, %rd5364;
	add.s64 	%rd5368, %rd5279, %rd4778;
	add.s64 	%rd5369, %rd5368, %rd5362;
	add.s64 	%rd5370, %rd5369, %rd5367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15550,%dummy}, %rd5357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15551}, %rd5357;
	}
	shf.r.wrap.b32 	%r15552, %r15551, %r15550, 19;
	shf.r.wrap.b32 	%r15553, %r15550, %r15551, 19;
	mov.b64 	%rd5371, {%r15553, %r15552};
	shf.l.wrap.b32 	%r15554, %r15550, %r15551, 3;
	shf.l.wrap.b32 	%r15555, %r15551, %r15550, 3;
	mov.b64 	%rd5372, {%r15555, %r15554};
	shr.u64 	%rd5373, %rd5357, 6;
	xor.b64  	%rd5374, %rd5371, %rd5373;
	xor.b64  	%rd5375, %rd5374, %rd5372;
	shf.r.wrap.b32 	%r15556, %r15165, %r15164, 1;
	shf.r.wrap.b32 	%r15557, %r15164, %r15165, 1;
	mov.b64 	%rd5376, {%r15557, %r15556};
	shf.r.wrap.b32 	%r15558, %r15165, %r15164, 8;
	shf.r.wrap.b32 	%r15559, %r15164, %r15165, 8;
	mov.b64 	%rd5377, {%r15559, %r15558};
	shr.u64 	%rd5378, %rd4804, 7;
	xor.b64  	%rd5379, %rd5376, %rd5378;
	xor.b64  	%rd5380, %rd5379, %rd5377;
	add.s64 	%rd5381, %rd5292, %rd4791;
	add.s64 	%rd5382, %rd5381, %rd5375;
	add.s64 	%rd5383, %rd5382, %rd5380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15560,%dummy}, %rd5370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15561}, %rd5370;
	}
	shf.r.wrap.b32 	%r15562, %r15561, %r15560, 19;
	shf.r.wrap.b32 	%r15563, %r15560, %r15561, 19;
	mov.b64 	%rd5384, {%r15563, %r15562};
	shf.l.wrap.b32 	%r15564, %r15560, %r15561, 3;
	shf.l.wrap.b32 	%r15565, %r15561, %r15560, 3;
	mov.b64 	%rd5385, {%r15565, %r15564};
	shr.u64 	%rd5386, %rd5370, 6;
	xor.b64  	%rd5387, %rd5384, %rd5386;
	xor.b64  	%rd5388, %rd5387, %rd5385;
	shf.r.wrap.b32 	%r15566, %r15175, %r15174, 1;
	shf.r.wrap.b32 	%r15567, %r15174, %r15175, 1;
	mov.b64 	%rd5389, {%r15567, %r15566};
	shf.r.wrap.b32 	%r15568, %r15175, %r15174, 8;
	shf.r.wrap.b32 	%r15569, %r15174, %r15175, 8;
	mov.b64 	%rd5390, {%r15569, %r15568};
	shr.u64 	%rd5391, %rd4817, 7;
	xor.b64  	%rd5392, %rd5389, %rd5391;
	xor.b64  	%rd5393, %rd5392, %rd5390;
	add.s64 	%rd5394, %rd5305, %rd4804;
	add.s64 	%rd5395, %rd5394, %rd5388;
	add.s64 	%rd5396, %rd5395, %rd5393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15570,%dummy}, %rd5383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15571}, %rd5383;
	}
	shf.r.wrap.b32 	%r15572, %r15571, %r15570, 19;
	shf.r.wrap.b32 	%r15573, %r15570, %r15571, 19;
	mov.b64 	%rd5397, {%r15573, %r15572};
	shf.l.wrap.b32 	%r15574, %r15570, %r15571, 3;
	shf.l.wrap.b32 	%r15575, %r15571, %r15570, 3;
	mov.b64 	%rd5398, {%r15575, %r15574};
	shr.u64 	%rd5399, %rd5383, 6;
	xor.b64  	%rd5400, %rd5397, %rd5399;
	xor.b64  	%rd5401, %rd5400, %rd5398;
	shf.r.wrap.b32 	%r15576, %r15441, %r15440, 1;
	shf.r.wrap.b32 	%r15577, %r15440, %r15441, 1;
	mov.b64 	%rd5402, {%r15577, %r15576};
	shf.r.wrap.b32 	%r15578, %r15441, %r15440, 8;
	shf.r.wrap.b32 	%r15579, %r15440, %r15441, 8;
	mov.b64 	%rd5403, {%r15579, %r15578};
	shr.u64 	%rd5404, %rd4830, 7;
	xor.b64  	%rd5405, %rd5402, %rd5404;
	xor.b64  	%rd5406, %rd5405, %rd5403;
	add.s64 	%rd5407, %rd5318, %rd4817;
	add.s64 	%rd5408, %rd5407, %rd5401;
	add.s64 	%rd5409, %rd5408, %rd5406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15580,%dummy}, %rd5396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15581}, %rd5396;
	}
	shf.r.wrap.b32 	%r15582, %r15581, %r15580, 19;
	shf.r.wrap.b32 	%r15583, %r15580, %r15581, 19;
	mov.b64 	%rd5410, {%r15583, %r15582};
	shf.l.wrap.b32 	%r15584, %r15580, %r15581, 3;
	shf.l.wrap.b32 	%r15585, %r15581, %r15580, 3;
	mov.b64 	%rd5411, {%r15585, %r15584};
	shr.u64 	%rd5412, %rd5396, 6;
	xor.b64  	%rd5413, %rd5410, %rd5412;
	xor.b64  	%rd5414, %rd5413, %rd5411;
	shf.r.wrap.b32 	%r15586, %r15451, %r15450, 1;
	shf.r.wrap.b32 	%r15587, %r15450, %r15451, 1;
	mov.b64 	%rd5415, {%r15587, %r15586};
	shf.r.wrap.b32 	%r15588, %r15451, %r15450, 8;
	shf.r.wrap.b32 	%r15589, %r15450, %r15451, 8;
	mov.b64 	%rd5416, {%r15589, %r15588};
	shr.u64 	%rd5417, %rd4843, 7;
	xor.b64  	%rd5418, %rd5415, %rd5417;
	xor.b64  	%rd5419, %rd5418, %rd5416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15590,%dummy}, %rd5409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15591}, %rd5409;
	}
	shf.r.wrap.b32 	%r15592, %r15591, %r15590, 19;
	shf.r.wrap.b32 	%r15593, %r15590, %r15591, 19;
	mov.b64 	%rd5420, {%r15593, %r15592};
	shf.l.wrap.b32 	%r15594, %r15590, %r15591, 3;
	shf.l.wrap.b32 	%r15595, %r15591, %r15590, 3;
	mov.b64 	%rd5421, {%r15595, %r15594};
	shr.u64 	%rd5422, %rd5409, 6;
	xor.b64  	%rd5423, %rd5420, %rd5422;
	xor.b64  	%rd5424, %rd5423, %rd5421;
	shf.r.wrap.b32 	%r15596, %r15461, %r15460, 1;
	shf.r.wrap.b32 	%r15597, %r15460, %r15461, 1;
	mov.b64 	%rd5425, {%r15597, %r15596};
	shf.r.wrap.b32 	%r15598, %r15461, %r15460, 8;
	shf.r.wrap.b32 	%r15599, %r15460, %r15461, 8;
	mov.b64 	%rd5426, {%r15599, %r15598};
	shr.u64 	%rd5427, %rd5240, 7;
	xor.b64  	%rd5428, %rd5425, %rd5427;
	xor.b64  	%rd5429, %rd5428, %rd5426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15600,%dummy}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15601}, %rd5216;
	}
	shf.r.wrap.b32 	%r15602, %r15601, %r15600, 14;
	shf.r.wrap.b32 	%r15603, %r15600, %r15601, 14;
	mov.b64 	%rd5430, {%r15603, %r15602};
	shf.r.wrap.b32 	%r15604, %r15601, %r15600, 18;
	shf.r.wrap.b32 	%r15605, %r15600, %r15601, 18;
	mov.b64 	%rd5431, {%r15605, %r15604};
	xor.b64  	%rd5432, %rd5431, %rd5430;
	shf.l.wrap.b32 	%r15606, %r15600, %r15601, 23;
	shf.l.wrap.b32 	%r15607, %r15601, %r15600, 23;
	mov.b64 	%rd5433, {%r15607, %r15606};
	xor.b64  	%rd5434, %rd5432, %rd5433;
	xor.b64  	%rd5435, %rd5192, %rd5168;
	and.b64  	%rd5436, %rd5216, %rd5435;
	xor.b64  	%rd5437, %rd5436, %rd5168;
	add.s64 	%rd5438, %rd5437, %rd5144;
	add.s64 	%rd5439, %rd5438, %rd5240;
	add.s64 	%rd5440, %rd5439, %rd92;
	add.s64 	%rd5441, %rd5440, %rd5434;
	add.s64 	%rd5442, %rd5441, %rd5155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15608,%dummy}, %rd5227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15609}, %rd5227;
	}
	shf.r.wrap.b32 	%r15610, %r15609, %r15608, 28;
	shf.r.wrap.b32 	%r15611, %r15608, %r15609, 28;
	mov.b64 	%rd5443, {%r15611, %r15610};
	shf.l.wrap.b32 	%r15612, %r15608, %r15609, 30;
	shf.l.wrap.b32 	%r15613, %r15609, %r15608, 30;
	mov.b64 	%rd5444, {%r15613, %r15612};
	xor.b64  	%rd5445, %rd5444, %rd5443;
	shf.l.wrap.b32 	%r15614, %r15608, %r15609, 25;
	shf.l.wrap.b32 	%r15615, %r15609, %r15608, 25;
	mov.b64 	%rd5446, {%r15615, %r15614};
	xor.b64  	%rd5447, %rd5445, %rd5446;
	and.b64  	%rd5448, %rd5227, %rd5203;
	xor.b64  	%rd5449, %rd5227, %rd5203;
	and.b64  	%rd5450, %rd5449, %rd5179;
	or.b64  	%rd5451, %rd5450, %rd5448;
	add.s64 	%rd5452, %rd5441, %rd5451;
	add.s64 	%rd5453, %rd5452, %rd5447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15616,%dummy}, %rd5442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15617}, %rd5442;
	}
	shf.r.wrap.b32 	%r15618, %r15617, %r15616, 14;
	shf.r.wrap.b32 	%r15619, %r15616, %r15617, 14;
	mov.b64 	%rd5454, {%r15619, %r15618};
	shf.r.wrap.b32 	%r15620, %r15617, %r15616, 18;
	shf.r.wrap.b32 	%r15621, %r15616, %r15617, 18;
	mov.b64 	%rd5455, {%r15621, %r15620};
	xor.b64  	%rd5456, %rd5455, %rd5454;
	shf.l.wrap.b32 	%r15622, %r15616, %r15617, 23;
	shf.l.wrap.b32 	%r15623, %r15617, %r15616, 23;
	mov.b64 	%rd5457, {%r15623, %r15622};
	xor.b64  	%rd5458, %rd5456, %rd5457;
	xor.b64  	%rd5459, %rd5216, %rd5192;
	and.b64  	%rd5460, %rd5442, %rd5459;
	xor.b64  	%rd5461, %rd5460, %rd5192;
	add.s64 	%rd5462, %rd5253, %rd5168;
	add.s64 	%rd5463, %rd5462, %rd93;
	add.s64 	%rd5464, %rd5463, %rd5461;
	add.s64 	%rd5465, %rd5464, %rd5458;
	add.s64 	%rd5466, %rd5465, %rd5179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15624,%dummy}, %rd5453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15625}, %rd5453;
	}
	shf.r.wrap.b32 	%r15626, %r15625, %r15624, 28;
	shf.r.wrap.b32 	%r15627, %r15624, %r15625, 28;
	mov.b64 	%rd5467, {%r15627, %r15626};
	shf.l.wrap.b32 	%r15628, %r15624, %r15625, 30;
	shf.l.wrap.b32 	%r15629, %r15625, %r15624, 30;
	mov.b64 	%rd5468, {%r15629, %r15628};
	xor.b64  	%rd5469, %rd5468, %rd5467;
	shf.l.wrap.b32 	%r15630, %r15624, %r15625, 25;
	shf.l.wrap.b32 	%r15631, %r15625, %r15624, 25;
	mov.b64 	%rd5470, {%r15631, %r15630};
	xor.b64  	%rd5471, %rd5469, %rd5470;
	and.b64  	%rd5472, %rd5453, %rd5227;
	xor.b64  	%rd5473, %rd5453, %rd5227;
	and.b64  	%rd5474, %rd5473, %rd5203;
	or.b64  	%rd5475, %rd5474, %rd5472;
	add.s64 	%rd5476, %rd5465, %rd5475;
	add.s64 	%rd5477, %rd5476, %rd5471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15632,%dummy}, %rd5466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15633}, %rd5466;
	}
	shf.r.wrap.b32 	%r15634, %r15633, %r15632, 14;
	shf.r.wrap.b32 	%r15635, %r15632, %r15633, 14;
	mov.b64 	%rd5478, {%r15635, %r15634};
	shf.r.wrap.b32 	%r15636, %r15633, %r15632, 18;
	shf.r.wrap.b32 	%r15637, %r15632, %r15633, 18;
	mov.b64 	%rd5479, {%r15637, %r15636};
	xor.b64  	%rd5480, %rd5479, %rd5478;
	shf.l.wrap.b32 	%r15638, %r15632, %r15633, 23;
	shf.l.wrap.b32 	%r15639, %r15633, %r15632, 23;
	mov.b64 	%rd5481, {%r15639, %r15638};
	xor.b64  	%rd5482, %rd5480, %rd5481;
	xor.b64  	%rd5483, %rd5442, %rd5216;
	and.b64  	%rd5484, %rd5466, %rd5483;
	xor.b64  	%rd5485, %rd5484, %rd5216;
	add.s64 	%rd5486, %rd5266, %rd5192;
	add.s64 	%rd5487, %rd5486, %rd94;
	add.s64 	%rd5488, %rd5487, %rd5485;
	add.s64 	%rd5489, %rd5488, %rd5482;
	add.s64 	%rd5490, %rd5489, %rd5203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15640,%dummy}, %rd5477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15641}, %rd5477;
	}
	shf.r.wrap.b32 	%r15642, %r15641, %r15640, 28;
	shf.r.wrap.b32 	%r15643, %r15640, %r15641, 28;
	mov.b64 	%rd5491, {%r15643, %r15642};
	shf.l.wrap.b32 	%r15644, %r15640, %r15641, 30;
	shf.l.wrap.b32 	%r15645, %r15641, %r15640, 30;
	mov.b64 	%rd5492, {%r15645, %r15644};
	xor.b64  	%rd5493, %rd5492, %rd5491;
	shf.l.wrap.b32 	%r15646, %r15640, %r15641, 25;
	shf.l.wrap.b32 	%r15647, %r15641, %r15640, 25;
	mov.b64 	%rd5494, {%r15647, %r15646};
	xor.b64  	%rd5495, %rd5493, %rd5494;
	and.b64  	%rd5496, %rd5477, %rd5453;
	xor.b64  	%rd5497, %rd5477, %rd5453;
	and.b64  	%rd5498, %rd5497, %rd5227;
	or.b64  	%rd5499, %rd5498, %rd5496;
	add.s64 	%rd5500, %rd5489, %rd5499;
	add.s64 	%rd5501, %rd5500, %rd5495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15648,%dummy}, %rd5490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15649}, %rd5490;
	}
	shf.r.wrap.b32 	%r15650, %r15649, %r15648, 14;
	shf.r.wrap.b32 	%r15651, %r15648, %r15649, 14;
	mov.b64 	%rd5502, {%r15651, %r15650};
	shf.r.wrap.b32 	%r15652, %r15649, %r15648, 18;
	shf.r.wrap.b32 	%r15653, %r15648, %r15649, 18;
	mov.b64 	%rd5503, {%r15653, %r15652};
	xor.b64  	%rd5504, %rd5503, %rd5502;
	shf.l.wrap.b32 	%r15654, %r15648, %r15649, 23;
	shf.l.wrap.b32 	%r15655, %r15649, %r15648, 23;
	mov.b64 	%rd5505, {%r15655, %r15654};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	xor.b64  	%rd5507, %rd5466, %rd5442;
	and.b64  	%rd5508, %rd5490, %rd5507;
	xor.b64  	%rd5509, %rd5508, %rd5442;
	add.s64 	%rd5510, %rd5279, %rd5216;
	add.s64 	%rd5511, %rd5510, %rd95;
	add.s64 	%rd5512, %rd5511, %rd5509;
	add.s64 	%rd5513, %rd5512, %rd5506;
	add.s64 	%rd5514, %rd5513, %rd5227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15656,%dummy}, %rd5501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15657}, %rd5501;
	}
	shf.r.wrap.b32 	%r15658, %r15657, %r15656, 28;
	shf.r.wrap.b32 	%r15659, %r15656, %r15657, 28;
	mov.b64 	%rd5515, {%r15659, %r15658};
	shf.l.wrap.b32 	%r15660, %r15656, %r15657, 30;
	shf.l.wrap.b32 	%r15661, %r15657, %r15656, 30;
	mov.b64 	%rd5516, {%r15661, %r15660};
	xor.b64  	%rd5517, %rd5516, %rd5515;
	shf.l.wrap.b32 	%r15662, %r15656, %r15657, 25;
	shf.l.wrap.b32 	%r15663, %r15657, %r15656, 25;
	mov.b64 	%rd5518, {%r15663, %r15662};
	xor.b64  	%rd5519, %rd5517, %rd5518;
	and.b64  	%rd5520, %rd5501, %rd5477;
	xor.b64  	%rd5521, %rd5501, %rd5477;
	and.b64  	%rd5522, %rd5521, %rd5453;
	or.b64  	%rd5523, %rd5522, %rd5520;
	add.s64 	%rd5524, %rd5513, %rd5523;
	add.s64 	%rd5525, %rd5524, %rd5519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15664,%dummy}, %rd5514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15665}, %rd5514;
	}
	shf.r.wrap.b32 	%r15666, %r15665, %r15664, 14;
	shf.r.wrap.b32 	%r15667, %r15664, %r15665, 14;
	mov.b64 	%rd5526, {%r15667, %r15666};
	shf.r.wrap.b32 	%r15668, %r15665, %r15664, 18;
	shf.r.wrap.b32 	%r15669, %r15664, %r15665, 18;
	mov.b64 	%rd5527, {%r15669, %r15668};
	xor.b64  	%rd5528, %rd5527, %rd5526;
	shf.l.wrap.b32 	%r15670, %r15664, %r15665, 23;
	shf.l.wrap.b32 	%r15671, %r15665, %r15664, 23;
	mov.b64 	%rd5529, {%r15671, %r15670};
	xor.b64  	%rd5530, %rd5528, %rd5529;
	xor.b64  	%rd5531, %rd5490, %rd5466;
	and.b64  	%rd5532, %rd5514, %rd5531;
	xor.b64  	%rd5533, %rd5532, %rd5466;
	add.s64 	%rd5534, %rd5442, %rd5292;
	add.s64 	%rd5535, %rd5534, %rd96;
	add.s64 	%rd5536, %rd5535, %rd5533;
	add.s64 	%rd5537, %rd5536, %rd5530;
	add.s64 	%rd5538, %rd5537, %rd5453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15672,%dummy}, %rd5525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15673}, %rd5525;
	}
	shf.r.wrap.b32 	%r15674, %r15673, %r15672, 28;
	shf.r.wrap.b32 	%r15675, %r15672, %r15673, 28;
	mov.b64 	%rd5539, {%r15675, %r15674};
	shf.l.wrap.b32 	%r15676, %r15672, %r15673, 30;
	shf.l.wrap.b32 	%r15677, %r15673, %r15672, 30;
	mov.b64 	%rd5540, {%r15677, %r15676};
	xor.b64  	%rd5541, %rd5540, %rd5539;
	shf.l.wrap.b32 	%r15678, %r15672, %r15673, 25;
	shf.l.wrap.b32 	%r15679, %r15673, %r15672, 25;
	mov.b64 	%rd5542, {%r15679, %r15678};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	and.b64  	%rd5544, %rd5525, %rd5501;
	xor.b64  	%rd5545, %rd5525, %rd5501;
	and.b64  	%rd5546, %rd5545, %rd5477;
	or.b64  	%rd5547, %rd5546, %rd5544;
	add.s64 	%rd5548, %rd5537, %rd5547;
	add.s64 	%rd5549, %rd5548, %rd5543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15680,%dummy}, %rd5538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15681}, %rd5538;
	}
	shf.r.wrap.b32 	%r15682, %r15681, %r15680, 14;
	shf.r.wrap.b32 	%r15683, %r15680, %r15681, 14;
	mov.b64 	%rd5550, {%r15683, %r15682};
	shf.r.wrap.b32 	%r15684, %r15681, %r15680, 18;
	shf.r.wrap.b32 	%r15685, %r15680, %r15681, 18;
	mov.b64 	%rd5551, {%r15685, %r15684};
	xor.b64  	%rd5552, %rd5551, %rd5550;
	shf.l.wrap.b32 	%r15686, %r15680, %r15681, 23;
	shf.l.wrap.b32 	%r15687, %r15681, %r15680, 23;
	mov.b64 	%rd5553, {%r15687, %r15686};
	xor.b64  	%rd5554, %rd5552, %rd5553;
	xor.b64  	%rd5555, %rd5514, %rd5490;
	and.b64  	%rd5556, %rd5538, %rd5555;
	xor.b64  	%rd5557, %rd5556, %rd5490;
	add.s64 	%rd5558, %rd5466, %rd5305;
	add.s64 	%rd5559, %rd5558, %rd97;
	add.s64 	%rd5560, %rd5559, %rd5557;
	add.s64 	%rd5561, %rd5560, %rd5554;
	add.s64 	%rd5562, %rd5561, %rd5477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15688,%dummy}, %rd5549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15689}, %rd5549;
	}
	shf.r.wrap.b32 	%r15690, %r15689, %r15688, 28;
	shf.r.wrap.b32 	%r15691, %r15688, %r15689, 28;
	mov.b64 	%rd5563, {%r15691, %r15690};
	shf.l.wrap.b32 	%r15692, %r15688, %r15689, 30;
	shf.l.wrap.b32 	%r15693, %r15689, %r15688, 30;
	mov.b64 	%rd5564, {%r15693, %r15692};
	xor.b64  	%rd5565, %rd5564, %rd5563;
	shf.l.wrap.b32 	%r15694, %r15688, %r15689, 25;
	shf.l.wrap.b32 	%r15695, %r15689, %r15688, 25;
	mov.b64 	%rd5566, {%r15695, %r15694};
	xor.b64  	%rd5567, %rd5565, %rd5566;
	and.b64  	%rd5568, %rd5549, %rd5525;
	xor.b64  	%rd5569, %rd5549, %rd5525;
	and.b64  	%rd5570, %rd5569, %rd5501;
	or.b64  	%rd5571, %rd5570, %rd5568;
	add.s64 	%rd5572, %rd5561, %rd5571;
	add.s64 	%rd5573, %rd5572, %rd5567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15696,%dummy}, %rd5562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15697}, %rd5562;
	}
	shf.r.wrap.b32 	%r15698, %r15697, %r15696, 14;
	shf.r.wrap.b32 	%r15699, %r15696, %r15697, 14;
	mov.b64 	%rd5574, {%r15699, %r15698};
	shf.r.wrap.b32 	%r15700, %r15697, %r15696, 18;
	shf.r.wrap.b32 	%r15701, %r15696, %r15697, 18;
	mov.b64 	%rd5575, {%r15701, %r15700};
	xor.b64  	%rd5576, %rd5575, %rd5574;
	shf.l.wrap.b32 	%r15702, %r15696, %r15697, 23;
	shf.l.wrap.b32 	%r15703, %r15697, %r15696, 23;
	mov.b64 	%rd5577, {%r15703, %r15702};
	xor.b64  	%rd5578, %rd5576, %rd5577;
	xor.b64  	%rd5579, %rd5538, %rd5514;
	and.b64  	%rd5580, %rd5562, %rd5579;
	xor.b64  	%rd5581, %rd5580, %rd5514;
	add.s64 	%rd5582, %rd5490, %rd5318;
	add.s64 	%rd5583, %rd5582, %rd98;
	add.s64 	%rd5584, %rd5583, %rd5581;
	add.s64 	%rd5585, %rd5584, %rd5578;
	add.s64 	%rd5586, %rd5585, %rd5501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15704,%dummy}, %rd5573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15705}, %rd5573;
	}
	shf.r.wrap.b32 	%r15706, %r15705, %r15704, 28;
	shf.r.wrap.b32 	%r15707, %r15704, %r15705, 28;
	mov.b64 	%rd5587, {%r15707, %r15706};
	shf.l.wrap.b32 	%r15708, %r15704, %r15705, 30;
	shf.l.wrap.b32 	%r15709, %r15705, %r15704, 30;
	mov.b64 	%rd5588, {%r15709, %r15708};
	xor.b64  	%rd5589, %rd5588, %rd5587;
	shf.l.wrap.b32 	%r15710, %r15704, %r15705, 25;
	shf.l.wrap.b32 	%r15711, %r15705, %r15704, 25;
	mov.b64 	%rd5590, {%r15711, %r15710};
	xor.b64  	%rd5591, %rd5589, %rd5590;
	and.b64  	%rd5592, %rd5573, %rd5549;
	xor.b64  	%rd5593, %rd5573, %rd5549;
	and.b64  	%rd5594, %rd5593, %rd5525;
	or.b64  	%rd5595, %rd5594, %rd5592;
	add.s64 	%rd5596, %rd5585, %rd5595;
	add.s64 	%rd5597, %rd5596, %rd5591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15712,%dummy}, %rd5586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15713}, %rd5586;
	}
	shf.r.wrap.b32 	%r15714, %r15713, %r15712, 14;
	shf.r.wrap.b32 	%r15715, %r15712, %r15713, 14;
	mov.b64 	%rd5598, {%r15715, %r15714};
	shf.r.wrap.b32 	%r15716, %r15713, %r15712, 18;
	shf.r.wrap.b32 	%r15717, %r15712, %r15713, 18;
	mov.b64 	%rd5599, {%r15717, %r15716};
	xor.b64  	%rd5600, %rd5599, %rd5598;
	shf.l.wrap.b32 	%r15718, %r15712, %r15713, 23;
	shf.l.wrap.b32 	%r15719, %r15713, %r15712, 23;
	mov.b64 	%rd5601, {%r15719, %r15718};
	xor.b64  	%rd5602, %rd5600, %rd5601;
	xor.b64  	%rd5603, %rd5562, %rd5538;
	and.b64  	%rd5604, %rd5586, %rd5603;
	xor.b64  	%rd5605, %rd5604, %rd5538;
	add.s64 	%rd5606, %rd5514, %rd5331;
	add.s64 	%rd5607, %rd5606, %rd99;
	add.s64 	%rd5608, %rd5607, %rd5605;
	add.s64 	%rd5609, %rd5608, %rd5602;
	add.s64 	%rd5610, %rd5609, %rd5525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15720,%dummy}, %rd5597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15721}, %rd5597;
	}
	shf.r.wrap.b32 	%r15722, %r15721, %r15720, 28;
	shf.r.wrap.b32 	%r15723, %r15720, %r15721, 28;
	mov.b64 	%rd5611, {%r15723, %r15722};
	shf.l.wrap.b32 	%r15724, %r15720, %r15721, 30;
	shf.l.wrap.b32 	%r15725, %r15721, %r15720, 30;
	mov.b64 	%rd5612, {%r15725, %r15724};
	xor.b64  	%rd5613, %rd5612, %rd5611;
	shf.l.wrap.b32 	%r15726, %r15720, %r15721, 25;
	shf.l.wrap.b32 	%r15727, %r15721, %r15720, 25;
	mov.b64 	%rd5614, {%r15727, %r15726};
	xor.b64  	%rd5615, %rd5613, %rd5614;
	and.b64  	%rd5616, %rd5597, %rd5573;
	xor.b64  	%rd5617, %rd5597, %rd5573;
	and.b64  	%rd5618, %rd5617, %rd5549;
	or.b64  	%rd5619, %rd5618, %rd5616;
	add.s64 	%rd5620, %rd5609, %rd5619;
	add.s64 	%rd5621, %rd5620, %rd5615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15728,%dummy}, %rd5610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15729}, %rd5610;
	}
	shf.r.wrap.b32 	%r15730, %r15729, %r15728, 14;
	shf.r.wrap.b32 	%r15731, %r15728, %r15729, 14;
	mov.b64 	%rd5622, {%r15731, %r15730};
	shf.r.wrap.b32 	%r15732, %r15729, %r15728, 18;
	shf.r.wrap.b32 	%r15733, %r15728, %r15729, 18;
	mov.b64 	%rd5623, {%r15733, %r15732};
	xor.b64  	%rd5624, %rd5623, %rd5622;
	shf.l.wrap.b32 	%r15734, %r15728, %r15729, 23;
	shf.l.wrap.b32 	%r15735, %r15729, %r15728, 23;
	mov.b64 	%rd5625, {%r15735, %r15734};
	xor.b64  	%rd5626, %rd5624, %rd5625;
	xor.b64  	%rd5627, %rd5586, %rd5562;
	and.b64  	%rd5628, %rd5610, %rd5627;
	xor.b64  	%rd5629, %rd5628, %rd5562;
	add.s64 	%rd5630, %rd5538, %rd5344;
	add.s64 	%rd5631, %rd5630, %rd100;
	add.s64 	%rd5632, %rd5631, %rd5629;
	add.s64 	%rd5633, %rd5632, %rd5626;
	add.s64 	%rd5634, %rd5633, %rd5549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15736,%dummy}, %rd5621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15737}, %rd5621;
	}
	shf.r.wrap.b32 	%r15738, %r15737, %r15736, 28;
	shf.r.wrap.b32 	%r15739, %r15736, %r15737, 28;
	mov.b64 	%rd5635, {%r15739, %r15738};
	shf.l.wrap.b32 	%r15740, %r15736, %r15737, 30;
	shf.l.wrap.b32 	%r15741, %r15737, %r15736, 30;
	mov.b64 	%rd5636, {%r15741, %r15740};
	xor.b64  	%rd5637, %rd5636, %rd5635;
	shf.l.wrap.b32 	%r15742, %r15736, %r15737, 25;
	shf.l.wrap.b32 	%r15743, %r15737, %r15736, 25;
	mov.b64 	%rd5638, {%r15743, %r15742};
	xor.b64  	%rd5639, %rd5637, %rd5638;
	and.b64  	%rd5640, %rd5621, %rd5597;
	xor.b64  	%rd5641, %rd5621, %rd5597;
	and.b64  	%rd5642, %rd5641, %rd5573;
	or.b64  	%rd5643, %rd5642, %rd5640;
	add.s64 	%rd5644, %rd5633, %rd5643;
	add.s64 	%rd5645, %rd5644, %rd5639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15744,%dummy}, %rd5634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15745}, %rd5634;
	}
	shf.r.wrap.b32 	%r15746, %r15745, %r15744, 14;
	shf.r.wrap.b32 	%r15747, %r15744, %r15745, 14;
	mov.b64 	%rd5646, {%r15747, %r15746};
	shf.r.wrap.b32 	%r15748, %r15745, %r15744, 18;
	shf.r.wrap.b32 	%r15749, %r15744, %r15745, 18;
	mov.b64 	%rd5647, {%r15749, %r15748};
	xor.b64  	%rd5648, %rd5647, %rd5646;
	shf.l.wrap.b32 	%r15750, %r15744, %r15745, 23;
	shf.l.wrap.b32 	%r15751, %r15745, %r15744, 23;
	mov.b64 	%rd5649, {%r15751, %r15750};
	xor.b64  	%rd5650, %rd5648, %rd5649;
	xor.b64  	%rd5651, %rd5610, %rd5586;
	and.b64  	%rd5652, %rd5634, %rd5651;
	xor.b64  	%rd5653, %rd5652, %rd5586;
	add.s64 	%rd5654, %rd5562, %rd5357;
	add.s64 	%rd5655, %rd5654, %rd101;
	add.s64 	%rd5656, %rd5655, %rd5653;
	add.s64 	%rd5657, %rd5656, %rd5650;
	add.s64 	%rd5658, %rd5657, %rd5573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15752,%dummy}, %rd5645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15753}, %rd5645;
	}
	shf.r.wrap.b32 	%r15754, %r15753, %r15752, 28;
	shf.r.wrap.b32 	%r15755, %r15752, %r15753, 28;
	mov.b64 	%rd5659, {%r15755, %r15754};
	shf.l.wrap.b32 	%r15756, %r15752, %r15753, 30;
	shf.l.wrap.b32 	%r15757, %r15753, %r15752, 30;
	mov.b64 	%rd5660, {%r15757, %r15756};
	xor.b64  	%rd5661, %rd5660, %rd5659;
	shf.l.wrap.b32 	%r15758, %r15752, %r15753, 25;
	shf.l.wrap.b32 	%r15759, %r15753, %r15752, 25;
	mov.b64 	%rd5662, {%r15759, %r15758};
	xor.b64  	%rd5663, %rd5661, %rd5662;
	and.b64  	%rd5664, %rd5645, %rd5621;
	xor.b64  	%rd5665, %rd5645, %rd5621;
	and.b64  	%rd5666, %rd5665, %rd5597;
	or.b64  	%rd5667, %rd5666, %rd5664;
	add.s64 	%rd5668, %rd5657, %rd5667;
	add.s64 	%rd5669, %rd5668, %rd5663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15760,%dummy}, %rd5658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15761}, %rd5658;
	}
	shf.r.wrap.b32 	%r15762, %r15761, %r15760, 14;
	shf.r.wrap.b32 	%r15763, %r15760, %r15761, 14;
	mov.b64 	%rd5670, {%r15763, %r15762};
	shf.r.wrap.b32 	%r15764, %r15761, %r15760, 18;
	shf.r.wrap.b32 	%r15765, %r15760, %r15761, 18;
	mov.b64 	%rd5671, {%r15765, %r15764};
	xor.b64  	%rd5672, %rd5671, %rd5670;
	shf.l.wrap.b32 	%r15766, %r15760, %r15761, 23;
	shf.l.wrap.b32 	%r15767, %r15761, %r15760, 23;
	mov.b64 	%rd5673, {%r15767, %r15766};
	xor.b64  	%rd5674, %rd5672, %rd5673;
	xor.b64  	%rd5675, %rd5634, %rd5610;
	and.b64  	%rd5676, %rd5658, %rd5675;
	xor.b64  	%rd5677, %rd5676, %rd5610;
	add.s64 	%rd5678, %rd5586, %rd5370;
	add.s64 	%rd5679, %rd5678, %rd102;
	add.s64 	%rd5680, %rd5679, %rd5677;
	add.s64 	%rd5681, %rd5680, %rd5674;
	add.s64 	%rd5682, %rd5681, %rd5597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15768,%dummy}, %rd5669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15769}, %rd5669;
	}
	shf.r.wrap.b32 	%r15770, %r15769, %r15768, 28;
	shf.r.wrap.b32 	%r15771, %r15768, %r15769, 28;
	mov.b64 	%rd5683, {%r15771, %r15770};
	shf.l.wrap.b32 	%r15772, %r15768, %r15769, 30;
	shf.l.wrap.b32 	%r15773, %r15769, %r15768, 30;
	mov.b64 	%rd5684, {%r15773, %r15772};
	xor.b64  	%rd5685, %rd5684, %rd5683;
	shf.l.wrap.b32 	%r15774, %r15768, %r15769, 25;
	shf.l.wrap.b32 	%r15775, %r15769, %r15768, 25;
	mov.b64 	%rd5686, {%r15775, %r15774};
	xor.b64  	%rd5687, %rd5685, %rd5686;
	and.b64  	%rd5688, %rd5669, %rd5645;
	xor.b64  	%rd5689, %rd5669, %rd5645;
	and.b64  	%rd5690, %rd5689, %rd5621;
	or.b64  	%rd5691, %rd5690, %rd5688;
	add.s64 	%rd5692, %rd5681, %rd5691;
	add.s64 	%rd5693, %rd5692, %rd5687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15776,%dummy}, %rd5682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15777}, %rd5682;
	}
	shf.r.wrap.b32 	%r15778, %r15777, %r15776, 14;
	shf.r.wrap.b32 	%r15779, %r15776, %r15777, 14;
	mov.b64 	%rd5694, {%r15779, %r15778};
	shf.r.wrap.b32 	%r15780, %r15777, %r15776, 18;
	shf.r.wrap.b32 	%r15781, %r15776, %r15777, 18;
	mov.b64 	%rd5695, {%r15781, %r15780};
	xor.b64  	%rd5696, %rd5695, %rd5694;
	shf.l.wrap.b32 	%r15782, %r15776, %r15777, 23;
	shf.l.wrap.b32 	%r15783, %r15777, %r15776, 23;
	mov.b64 	%rd5697, {%r15783, %r15782};
	xor.b64  	%rd5698, %rd5696, %rd5697;
	xor.b64  	%rd5699, %rd5658, %rd5634;
	and.b64  	%rd5700, %rd5682, %rd5699;
	xor.b64  	%rd5701, %rd5700, %rd5634;
	add.s64 	%rd5702, %rd5610, %rd5383;
	add.s64 	%rd5703, %rd5702, %rd103;
	add.s64 	%rd5704, %rd5703, %rd5701;
	add.s64 	%rd5705, %rd5704, %rd5698;
	add.s64 	%rd5706, %rd5705, %rd5621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15784,%dummy}, %rd5693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15785}, %rd5693;
	}
	shf.r.wrap.b32 	%r15786, %r15785, %r15784, 28;
	shf.r.wrap.b32 	%r15787, %r15784, %r15785, 28;
	mov.b64 	%rd5707, {%r15787, %r15786};
	shf.l.wrap.b32 	%r15788, %r15784, %r15785, 30;
	shf.l.wrap.b32 	%r15789, %r15785, %r15784, 30;
	mov.b64 	%rd5708, {%r15789, %r15788};
	xor.b64  	%rd5709, %rd5708, %rd5707;
	shf.l.wrap.b32 	%r15790, %r15784, %r15785, 25;
	shf.l.wrap.b32 	%r15791, %r15785, %r15784, 25;
	mov.b64 	%rd5710, {%r15791, %r15790};
	xor.b64  	%rd5711, %rd5709, %rd5710;
	and.b64  	%rd5712, %rd5693, %rd5669;
	xor.b64  	%rd5713, %rd5693, %rd5669;
	and.b64  	%rd5714, %rd5713, %rd5645;
	or.b64  	%rd5715, %rd5714, %rd5712;
	add.s64 	%rd5716, %rd5705, %rd5715;
	add.s64 	%rd5717, %rd5716, %rd5711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15792,%dummy}, %rd5706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15793}, %rd5706;
	}
	shf.r.wrap.b32 	%r15794, %r15793, %r15792, 14;
	shf.r.wrap.b32 	%r15795, %r15792, %r15793, 14;
	mov.b64 	%rd5718, {%r15795, %r15794};
	shf.r.wrap.b32 	%r15796, %r15793, %r15792, 18;
	shf.r.wrap.b32 	%r15797, %r15792, %r15793, 18;
	mov.b64 	%rd5719, {%r15797, %r15796};
	xor.b64  	%rd5720, %rd5719, %rd5718;
	shf.l.wrap.b32 	%r15798, %r15792, %r15793, 23;
	shf.l.wrap.b32 	%r15799, %r15793, %r15792, 23;
	mov.b64 	%rd5721, {%r15799, %r15798};
	xor.b64  	%rd5722, %rd5720, %rd5721;
	xor.b64  	%rd5723, %rd5682, %rd5658;
	and.b64  	%rd5724, %rd5706, %rd5723;
	xor.b64  	%rd5725, %rd5724, %rd5658;
	add.s64 	%rd5726, %rd5634, %rd5396;
	add.s64 	%rd5727, %rd5726, %rd104;
	add.s64 	%rd5728, %rd5727, %rd5725;
	add.s64 	%rd5729, %rd5728, %rd5722;
	add.s64 	%rd5730, %rd5729, %rd5645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15800,%dummy}, %rd5717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15801}, %rd5717;
	}
	shf.r.wrap.b32 	%r15802, %r15801, %r15800, 28;
	shf.r.wrap.b32 	%r15803, %r15800, %r15801, 28;
	mov.b64 	%rd5731, {%r15803, %r15802};
	shf.l.wrap.b32 	%r15804, %r15800, %r15801, 30;
	shf.l.wrap.b32 	%r15805, %r15801, %r15800, 30;
	mov.b64 	%rd5732, {%r15805, %r15804};
	xor.b64  	%rd5733, %rd5732, %rd5731;
	shf.l.wrap.b32 	%r15806, %r15800, %r15801, 25;
	shf.l.wrap.b32 	%r15807, %r15801, %r15800, 25;
	mov.b64 	%rd5734, {%r15807, %r15806};
	xor.b64  	%rd5735, %rd5733, %rd5734;
	and.b64  	%rd5736, %rd5717, %rd5693;
	xor.b64  	%rd5737, %rd5717, %rd5693;
	and.b64  	%rd5738, %rd5737, %rd5669;
	or.b64  	%rd5739, %rd5738, %rd5736;
	add.s64 	%rd5740, %rd5729, %rd5739;
	add.s64 	%rd5741, %rd5740, %rd5735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15808,%dummy}, %rd5730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15809}, %rd5730;
	}
	shf.r.wrap.b32 	%r15810, %r15809, %r15808, 14;
	shf.r.wrap.b32 	%r15811, %r15808, %r15809, 14;
	mov.b64 	%rd5742, {%r15811, %r15810};
	shf.r.wrap.b32 	%r15812, %r15809, %r15808, 18;
	shf.r.wrap.b32 	%r15813, %r15808, %r15809, 18;
	mov.b64 	%rd5743, {%r15813, %r15812};
	xor.b64  	%rd5744, %rd5743, %rd5742;
	shf.l.wrap.b32 	%r15814, %r15808, %r15809, 23;
	shf.l.wrap.b32 	%r15815, %r15809, %r15808, 23;
	mov.b64 	%rd5745, {%r15815, %r15814};
	xor.b64  	%rd5746, %rd5744, %rd5745;
	xor.b64  	%rd5747, %rd5706, %rd5682;
	and.b64  	%rd5748, %rd5730, %rd5747;
	xor.b64  	%rd5749, %rd5748, %rd5682;
	add.s64 	%rd5750, %rd5658, %rd5409;
	add.s64 	%rd5751, %rd5750, %rd105;
	add.s64 	%rd5752, %rd5751, %rd5749;
	add.s64 	%rd5753, %rd5752, %rd5746;
	add.s64 	%rd5754, %rd5753, %rd5669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15816,%dummy}, %rd5741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15817}, %rd5741;
	}
	shf.r.wrap.b32 	%r15818, %r15817, %r15816, 28;
	shf.r.wrap.b32 	%r15819, %r15816, %r15817, 28;
	mov.b64 	%rd5755, {%r15819, %r15818};
	shf.l.wrap.b32 	%r15820, %r15816, %r15817, 30;
	shf.l.wrap.b32 	%r15821, %r15817, %r15816, 30;
	mov.b64 	%rd5756, {%r15821, %r15820};
	xor.b64  	%rd5757, %rd5756, %rd5755;
	shf.l.wrap.b32 	%r15822, %r15816, %r15817, 25;
	shf.l.wrap.b32 	%r15823, %r15817, %r15816, 25;
	mov.b64 	%rd5758, {%r15823, %r15822};
	xor.b64  	%rd5759, %rd5757, %rd5758;
	and.b64  	%rd5760, %rd5741, %rd5717;
	xor.b64  	%rd5761, %rd5741, %rd5717;
	and.b64  	%rd5762, %rd5761, %rd5693;
	or.b64  	%rd5763, %rd5762, %rd5760;
	add.s64 	%rd5764, %rd5753, %rd5763;
	add.s64 	%rd5765, %rd5764, %rd5759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15824,%dummy}, %rd5754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15825}, %rd5754;
	}
	shf.r.wrap.b32 	%r15826, %r15825, %r15824, 14;
	shf.r.wrap.b32 	%r15827, %r15824, %r15825, 14;
	mov.b64 	%rd5766, {%r15827, %r15826};
	shf.r.wrap.b32 	%r15828, %r15825, %r15824, 18;
	shf.r.wrap.b32 	%r15829, %r15824, %r15825, 18;
	mov.b64 	%rd5767, {%r15829, %r15828};
	xor.b64  	%rd5768, %rd5767, %rd5766;
	shf.l.wrap.b32 	%r15830, %r15824, %r15825, 23;
	shf.l.wrap.b32 	%r15831, %r15825, %r15824, 23;
	mov.b64 	%rd5769, {%r15831, %r15830};
	xor.b64  	%rd5770, %rd5768, %rd5769;
	xor.b64  	%rd5771, %rd5730, %rd5706;
	and.b64  	%rd5772, %rd5754, %rd5771;
	xor.b64  	%rd5773, %rd5772, %rd5706;
	add.s64 	%rd5774, %rd5331, %rd4830;
	add.s64 	%rd5775, %rd5774, %rd5414;
	add.s64 	%rd5776, %rd5775, %rd5419;
	add.s64 	%rd5777, %rd5776, %rd5682;
	add.s64 	%rd5778, %rd5777, %rd106;
	add.s64 	%rd5779, %rd5778, %rd5773;
	add.s64 	%rd5780, %rd5779, %rd5770;
	add.s64 	%rd5781, %rd5780, %rd5693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15832,%dummy}, %rd5765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15833}, %rd5765;
	}
	shf.r.wrap.b32 	%r15834, %r15833, %r15832, 28;
	shf.r.wrap.b32 	%r15835, %r15832, %r15833, 28;
	mov.b64 	%rd5782, {%r15835, %r15834};
	shf.l.wrap.b32 	%r15836, %r15832, %r15833, 30;
	shf.l.wrap.b32 	%r15837, %r15833, %r15832, 30;
	mov.b64 	%rd5783, {%r15837, %r15836};
	xor.b64  	%rd5784, %rd5783, %rd5782;
	shf.l.wrap.b32 	%r15838, %r15832, %r15833, 25;
	shf.l.wrap.b32 	%r15839, %r15833, %r15832, 25;
	mov.b64 	%rd5785, {%r15839, %r15838};
	xor.b64  	%rd5786, %rd5784, %rd5785;
	and.b64  	%rd5787, %rd5765, %rd5741;
	xor.b64  	%rd5788, %rd5765, %rd5741;
	and.b64  	%rd5789, %rd5788, %rd5717;
	or.b64  	%rd5790, %rd5789, %rd5787;
	add.s64 	%rd5791, %rd5780, %rd5790;
	add.s64 	%rd5792, %rd5791, %rd5786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15840,%dummy}, %rd5781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15841}, %rd5781;
	}
	shf.r.wrap.b32 	%r15842, %r15841, %r15840, 14;
	shf.r.wrap.b32 	%r15843, %r15840, %r15841, 14;
	mov.b64 	%rd5793, {%r15843, %r15842};
	shf.r.wrap.b32 	%r15844, %r15841, %r15840, 18;
	shf.r.wrap.b32 	%r15845, %r15840, %r15841, 18;
	mov.b64 	%rd5794, {%r15845, %r15844};
	xor.b64  	%rd5795, %rd5794, %rd5793;
	shf.l.wrap.b32 	%r15846, %r15840, %r15841, 23;
	shf.l.wrap.b32 	%r15847, %r15841, %r15840, 23;
	mov.b64 	%rd5796, {%r15847, %r15846};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	xor.b64  	%rd5798, %rd5754, %rd5730;
	and.b64  	%rd5799, %rd5781, %rd5798;
	xor.b64  	%rd5800, %rd5799, %rd5730;
	add.s64 	%rd5801, %rd5344, %rd4843;
	add.s64 	%rd5802, %rd5801, %rd5424;
	add.s64 	%rd5803, %rd5802, %rd5429;
	add.s64 	%rd5804, %rd5803, %rd5706;
	add.s64 	%rd5805, %rd5804, %rd107;
	add.s64 	%rd5806, %rd5805, %rd5800;
	add.s64 	%rd5807, %rd5806, %rd5797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15848,%dummy}, %rd5792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15849}, %rd5792;
	}
	shf.r.wrap.b32 	%r15850, %r15849, %r15848, 28;
	shf.r.wrap.b32 	%r15851, %r15848, %r15849, 28;
	mov.b64 	%rd5808, {%r15851, %r15850};
	shf.l.wrap.b32 	%r15852, %r15848, %r15849, 30;
	shf.l.wrap.b32 	%r15853, %r15849, %r15848, 30;
	mov.b64 	%rd5809, {%r15853, %r15852};
	xor.b64  	%rd5810, %rd5809, %rd5808;
	shf.l.wrap.b32 	%r15854, %r15848, %r15849, 25;
	shf.l.wrap.b32 	%r15855, %r15849, %r15848, 25;
	mov.b64 	%rd5811, {%r15855, %r15854};
	xor.b64  	%rd5812, %rd5810, %rd5811;
	and.b64  	%rd5813, %rd5792, %rd5765;
	xor.b64  	%rd5814, %rd5792, %rd5765;
	and.b64  	%rd5815, %rd5814, %rd5741;
	or.b64  	%rd5816, %rd5815, %rd5813;
	add.s64 	%rd5817, %rd5816, %rd3078;
	add.s64 	%rd5818, %rd5817, %rd5807;
	add.s64 	%rd5819, %rd5818, %rd5812;
	st.local.u64 	[%rd9], %rd5819;
	add.s64 	%rd5820, %rd5792, %rd3084;
	st.local.u64 	[%rd9+8], %rd5820;
	add.s64 	%rd5821, %rd5765, %rd3087;
	st.local.u64 	[%rd9+16], %rd5821;
	add.s64 	%rd5822, %rd5741, %rd3076;
	st.local.u64 	[%rd9+24], %rd5822;
	add.s64 	%rd5823, %rd5717, %rd3060;
	add.s64 	%rd5824, %rd5823, %rd5807;
	st.local.u64 	[%rd9+32], %rd5824;
	add.s64 	%rd5825, %rd5781, %rd3067;
	st.local.u64 	[%rd9+40], %rd5825;
	add.s64 	%rd5826, %rd5754, %rd3066;
	st.local.u64 	[%rd9+48], %rd5826;
	add.s64 	%rd5827, %rd5730, %rd3072;
	st.local.u64 	[%rd9+56], %rd5827;
	mov.u32 	%r39287, 0;
	st.local.v2.u32 	[%rd9+64], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+72], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+80], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+88], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+96], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+104], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+112], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+120], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+128], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+136], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+144], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+152], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+160], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+168], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+176], {%r39287, %r39287};
	st.local.v2.u32 	[%rd9+184], {%r39287, %r39287};
	mov.u32 	%r39288, %r39287;
	mov.u32 	%r39289, %r39287;
	mov.u32 	%r39290, %r39287;
	mov.u32 	%r39283, %r39287;
	mov.u32 	%r39284, %r39287;
	mov.u32 	%r39285, %r39287;
	mov.u32 	%r39286, %r39287;
	mov.u32 	%r39279, %r39287;
	mov.u32 	%r39280, %r39287;
	mov.u32 	%r39281, %r39287;
	mov.u32 	%r39282, %r39287;
	mov.u32 	%r39275, %r39287;
	mov.u32 	%r39276, %r39287;
	mov.u32 	%r39277, %r39287;
	mov.u32 	%r39278, %r39287;
	mov.u32 	%r39271, %r39287;
	mov.u32 	%r39272, %r39287;
	mov.u32 	%r39273, %r39287;
	mov.u32 	%r39274, %r39287;
	mov.u32 	%r39267, %r39287;
	mov.u32 	%r39268, %r39287;
	mov.u32 	%r39269, %r39287;
	mov.u32 	%r39270, %r39287;
	mov.u32 	%r39263, %r39287;
	mov.u32 	%r39264, %r39287;
	mov.u32 	%r39265, %r39287;
	mov.u32 	%r39266, %r39287;
	mov.u32 	%r39259, %r39287;
	mov.u32 	%r39260, %r39287;
	mov.u32 	%r39261, %r39287;
	mov.u32 	%r39262, %r39287;
	bra.uni 	BB1_216;

BB1_8:
	mov.u32 	%r39259, 0;
	setp.gt.s32	%p7, %r76, 15;
	@%p7 bra 	BB1_41;

	setp.gt.s32	%p31, %r76, 7;
	@%p31 bra 	BB1_26;

	setp.gt.s32	%p43, %r76, 3;
	@%p43 bra 	BB1_18;

	setp.gt.s32	%p49, %r76, 1;
	@%p49 bra 	BB1_15;

	setp.eq.s32	%p52, %r76, 0;
	@%p52 bra 	BB1_93;
	bra.uni 	BB1_13;

BB1_93:
	mov.u32 	%r39259, 0;
	// inline asm
	prmt.b32 %r39262, %r39259, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39227, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39228, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39229, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39258, %r3846, %r39259, %r77;
	// inline asm
	mov.u32 	%r39260, %r39259;
	mov.u32 	%r39261, %r39259;
	bra.uni 	BB1_94;

BB1_213:
	mov.u32 	%r39287, %r3908;
	mov.u32 	%r39288, %r3906;
	mov.u32 	%r39289, %r3904;
	mov.u32 	%r39290, %r3902;
	mov.u32 	%r39283, %r3900;
	mov.u32 	%r39284, %r3898;
	mov.u32 	%r39285, %r3896;
	mov.u32 	%r39286, %r3894;
	mov.u32 	%r39279, %r3892;
	mov.u32 	%r39280, %r3890;
	mov.u32 	%r39281, %r3888;
	mov.u32 	%r39282, %r3886;
	mov.u32 	%r39275, %r3884;
	mov.u32 	%r39276, %r3882;
	mov.u32 	%r39277, %r3880;
	mov.u32 	%r39278, %r3878;
	mov.u32 	%r39271, %r3876;
	mov.u32 	%r39272, %r3874;
	mov.u32 	%r39273, %r3872;
	mov.u32 	%r39274, %r3870;
	mov.u32 	%r39267, %r3868;
	mov.u32 	%r39268, %r3866;
	mov.u32 	%r39269, %r3864;
	mov.u32 	%r39270, %r3862;
	mov.u32 	%r39263, %r3860;
	mov.u32 	%r39264, %r3858;
	mov.u32 	%r39265, %r3856;
	mov.u32 	%r39266, %r3854;
	mov.u32 	%r39259, %r3852;
	mov.u32 	%r39260, %r3850;
	mov.u32 	%r39261, %r3848;
	mov.u32 	%r39262, %r3846;
	bra.uni 	BB1_216;

BB1_128:
	setp.gt.s32	%p55, %r76, 23;
	@%p55 bra 	BB1_144;

	setp.gt.s32	%p67, %r76, 19;
	@%p67 bra 	BB1_137;

	setp.gt.s32	%p73, %r76, 17;
	@%p73 bra 	BB1_134;

	setp.eq.s32	%p76, %r76, 16;
	@%p76 bra 	BB1_185;
	bra.uni 	BB1_132;

BB1_185:
	// inline asm
	prmt.b32 %r3908, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3878, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	bra.uni 	BB1_186;

BB1_41:
	setp.gt.s32	%p8, %r76, 23;
	@%p8 bra 	BB1_57;

	setp.gt.s32	%p20, %r76, 19;
	@%p20 bra 	BB1_50;

	setp.gt.s32	%p26, %r76, 17;
	@%p26 bra 	BB1_47;

	setp.eq.s32	%p29, %r76, 16;
	@%p29 bra 	BB1_80;
	bra.uni 	BB1_45;

BB1_80:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39278, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39275, %r39227;
	mov.u32 	%r39276, %r39227;
	mov.u32 	%r39277, %r39227;
	bra.uni 	BB1_87;

BB1_113:
	setp.gt.s32	%p79, %r76, 11;
	@%p79 bra 	BB1_121;

	setp.gt.s32	%p85, %r76, 9;
	@%p85 bra 	BB1_118;

	setp.eq.s32	%p88, %r76, 8;
	@%p88 bra 	BB1_199;
	bra.uni 	BB1_116;

BB1_199:
	// inline asm
	prmt.b32 %r3908, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3862, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	bra.uni 	BB1_200;

BB1_26:
	setp.gt.s32	%p32, %r76, 11;
	@%p32 bra 	BB1_34;

	setp.gt.s32	%p38, %r76, 9;
	@%p38 bra 	BB1_31;

	setp.eq.s32	%p41, %r76, 8;
	@%p41 bra 	BB1_84;
	bra.uni 	BB1_29;

BB1_84:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39270, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39267, %r39227;
	mov.u32 	%r39268, %r39227;
	mov.u32 	%r39269, %r39227;
	bra.uni 	BB1_85;

BB1_144:
	setp.gt.s32	%p56, %r76, 27;
	@%p56 bra 	BB1_152;

	setp.gt.s32	%p62, %r76, 25;
	@%p62 bra 	BB1_149;

	setp.eq.s32	%p65, %r76, 24;
	@%p65 bra 	BB1_171;
	bra.uni 	BB1_147;

BB1_171:
	// inline asm
	prmt.b32 %r3908, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3894, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	bra.uni 	BB1_172;

BB1_57:
	setp.gt.s32	%p9, %r76, 27;
	@%p9 bra 	BB1_65;

	setp.gt.s32	%p15, %r76, 25;
	@%p15 bra 	BB1_62;

	setp.eq.s32	%p18, %r76, 24;
	@%p18 bra 	BB1_76;
	bra.uni 	BB1_60;

BB1_76:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39286, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39283, %r39227;
	mov.u32 	%r39284, %r39227;
	mov.u32 	%r39285, %r39227;
	bra.uni 	BB1_89;

BB1_106:
	setp.gt.s32	%p91, %r76, 5;
	@%p91 bra 	BB1_110;

	setp.eq.s32	%p94, %r76, 4;
	@%p94 bra 	BB1_206;
	bra.uni 	BB1_108;

BB1_206:
	// inline asm
	prmt.b32 %r3908, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3854, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_18:
	setp.gt.s32	%p44, %r76, 5;
	@%p44 bra 	BB1_22;

	setp.eq.s32	%p47, %r76, 4;
	@%p47 bra 	BB1_91;
	bra.uni 	BB1_20;

BB1_91:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39266, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39263, %r39227;
	mov.u32 	%r39264, %r39227;
	mov.u32 	%r39265, %r39227;
	bra.uni 	BB1_25;

BB1_137:
	setp.gt.s32	%p68, %r76, 21;
	@%p68 bra 	BB1_141;

	setp.eq.s32	%p71, %r76, 20;
	@%p71 bra 	BB1_178;
	bra.uni 	BB1_139;

BB1_178:
	// inline asm
	prmt.b32 %r3908, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3886, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	bra.uni 	BB1_179;

BB1_50:
	setp.gt.s32	%p21, %r76, 21;
	@%p21 bra 	BB1_54;

	setp.eq.s32	%p24, %r76, 20;
	@%p24 bra 	BB1_78;
	bra.uni 	BB1_52;

BB1_78:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39282, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39279, %r39227;
	mov.u32 	%r39280, %r39227;
	mov.u32 	%r39281, %r39227;
	bra.uni 	BB1_88;

BB1_121:
	setp.gt.s32	%p80, %r76, 13;
	@%p80 bra 	BB1_125;

	setp.eq.s32	%p83, %r76, 12;
	@%p83 bra 	BB1_192;
	bra.uni 	BB1_123;

BB1_192:
	// inline asm
	prmt.b32 %r3908, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3870, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	bra.uni 	BB1_193;

BB1_34:
	setp.gt.s32	%p33, %r76, 13;
	@%p33 bra 	BB1_38;

	setp.eq.s32	%p36, %r76, 12;
	@%p36 bra 	BB1_82;
	bra.uni 	BB1_36;

BB1_82:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39274, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39271, %r39227;
	mov.u32 	%r39272, %r39227;
	mov.u32 	%r39273, %r39227;
	bra.uni 	BB1_86;

BB1_152:
	setp.gt.s32	%p57, %r76, 29;
	@%p57 bra 	BB1_156;

	setp.eq.s32	%p60, %r76, 28;
	@%p60 bra 	BB1_164;
	bra.uni 	BB1_154;

BB1_164:
	// inline asm
	prmt.b32 %r3908, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3902, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	mov.u32 	%r3900, %r3852;
	bra.uni 	BB1_165;

BB1_65:
	setp.gt.s32	%p10, %r76, 29;
	@%p10 bra 	BB1_69;

	setp.eq.s32	%p13, %r76, 28;
	@%p13 bra 	BB1_74;
	bra.uni 	BB1_67;

BB1_74:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39290, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39283, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39284, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3900, %r39227;
	mov.u32 	%r3898, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39287, %r39227;
	mov.u32 	%r39288, %r39227;
	mov.u32 	%r39289, %r39227;
	bra.uni 	BB1_95;

BB1_103:
	setp.eq.s32	%p97, %r76, 2;
	@%p97 bra 	BB1_208;
	bra.uni 	BB1_104;

BB1_208:
	// inline asm
	prmt.b32 %r3908, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3852, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3848, 0;
	// inline asm
	prmt.b32 %r3850, %r3846, %r3848, %r77;
	// inline asm
	mov.u32 	%r39322, %r3848;
	bra.uni 	BB1_211;

BB1_15:
	setp.eq.s32	%p50, %r76, 2;
	@%p50 bra 	BB1_92;
	bra.uni 	BB1_16;

BB1_92:
	mov.u32 	%r39229, 0;
	// inline asm
	prmt.b32 %r39260, %r39229, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39227, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39228, %r3846, %r39229, %r77;
	// inline asm
	mov.u32 	%r39258, %r39229;
	mov.u32 	%r39259, %r39229;
	mov.u32 	%r39263, %r39229;
	mov.u32 	%r39264, %r39229;
	mov.u32 	%r39265, %r39229;
	mov.u32 	%r39266, %r39229;
	mov.u32 	%r39267, %r39229;
	mov.u32 	%r39268, %r39229;
	mov.u32 	%r39269, %r39229;
	mov.u32 	%r39270, %r39229;
	mov.u32 	%r39271, %r39229;
	mov.u32 	%r39272, %r39229;
	mov.u32 	%r39273, %r39229;
	mov.u32 	%r39274, %r39229;
	mov.u32 	%r39275, %r39229;
	mov.u32 	%r39276, %r39229;
	mov.u32 	%r39277, %r39229;
	mov.u32 	%r39278, %r39229;
	mov.u32 	%r39279, %r39229;
	mov.u32 	%r39280, %r39229;
	mov.u32 	%r39281, %r39229;
	mov.u32 	%r39282, %r39229;
	mov.u32 	%r39283, %r39229;
	mov.u32 	%r39284, %r39229;
	mov.u32 	%r39285, %r39229;
	mov.u32 	%r39286, %r39229;
	mov.u32 	%r39287, %r39229;
	mov.u32 	%r39288, %r39229;
	mov.u32 	%r39289, %r39229;
	mov.u32 	%r39290, %r39229;
	bra.uni 	BB1_95;

BB1_134:
	setp.eq.s32	%p74, %r76, 18;
	@%p74 bra 	BB1_183;
	bra.uni 	BB1_135;

BB1_183:
	// inline asm
	prmt.b32 %r3908, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3882, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	bra.uni 	BB1_180;

BB1_47:
	setp.eq.s32	%p27, %r76, 18;
	@%p27 bra 	BB1_79;
	bra.uni 	BB1_48;

BB1_79:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39276, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39275, %r39227;
	bra.uni 	BB1_87;

BB1_118:
	setp.eq.s32	%p86, %r76, 10;
	@%p86 bra 	BB1_197;
	bra.uni 	BB1_119;

BB1_197:
	// inline asm
	prmt.b32 %r3908, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3866, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	bra.uni 	BB1_194;

BB1_31:
	setp.eq.s32	%p39, %r76, 10;
	@%p39 bra 	BB1_83;
	bra.uni 	BB1_32;

BB1_83:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39268, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39267, %r39227;
	bra.uni 	BB1_85;

BB1_149:
	setp.eq.s32	%p63, %r76, 26;
	@%p63 bra 	BB1_169;
	bra.uni 	BB1_150;

BB1_169:
	// inline asm
	prmt.b32 %r3908, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3898, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	bra.uni 	BB1_166;

BB1_62:
	setp.eq.s32	%p16, %r76, 26;
	@%p16 bra 	BB1_75;
	bra.uni 	BB1_63;

BB1_75:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39284, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39283, %r39227;
	bra.uni 	BB1_89;

BB1_110:
	setp.eq.s32	%p92, %r76, 6;
	@%p92 bra 	BB1_204;
	bra.uni 	BB1_111;

BB1_204:
	// inline asm
	prmt.b32 %r3908, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3858, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	bra.uni 	BB1_201;

BB1_22:
	setp.eq.s32	%p45, %r76, 6;
	@%p45 bra 	BB1_90;
	bra.uni 	BB1_23;

BB1_90:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39264, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39263, %r39227;
	bra.uni 	BB1_25;

BB1_141:
	setp.eq.s32	%p69, %r76, 22;
	@%p69 bra 	BB1_176;
	bra.uni 	BB1_142;

BB1_176:
	// inline asm
	prmt.b32 %r3908, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3890, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	bra.uni 	BB1_173;

BB1_54:
	setp.eq.s32	%p22, %r76, 22;
	@%p22 bra 	BB1_77;
	bra.uni 	BB1_55;

BB1_77:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39280, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39279, %r39227;
	bra.uni 	BB1_88;

BB1_125:
	setp.eq.s32	%p81, %r76, 14;
	@%p81 bra 	BB1_190;
	bra.uni 	BB1_126;

BB1_190:
	// inline asm
	prmt.b32 %r3908, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3874, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	bra.uni 	BB1_187;

BB1_38:
	setp.eq.s32	%p34, %r76, 14;
	@%p34 bra 	BB1_81;
	bra.uni 	BB1_39;

BB1_81:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39272, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39271, %r39227;
	bra.uni 	BB1_86;

BB1_156:
	setp.eq.s32	%p58, %r76, 30;
	@%p58 bra 	BB1_162;
	bra.uni 	BB1_157;

BB1_162:
	// inline asm
	prmt.b32 %r3908, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3906, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	mov.u32 	%r3900, %r3852;
	mov.u32 	%r3898, %r3852;
	mov.u32 	%r3896, %r3852;
	mov.u32 	%r3894, %r3852;
	bra.uni 	BB1_160;

BB1_69:
	setp.eq.s32	%p11, %r76, 30;
	@%p11 bra 	BB1_73;
	bra.uni 	BB1_70;

BB1_73:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39288, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39289, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39290, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39283, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39284, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3900, %r39227;
	mov.u32 	%r3898, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r3904, %r39227;
	mov.u32 	%r3902, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39287, %r39227;
	bra.uni 	BB1_95;

BB1_101:
	setp.eq.s32	%p100, %r76, 1;
	@%p100 bra 	BB1_209;
	bra.uni 	BB1_102;

BB1_209:
	// inline asm
	prmt.b32 %r3908, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3852, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3850, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r39322, 0;
	// inline asm
	prmt.b32 %r3848, %r3846, %r39322, %r77;
	// inline asm
	bra.uni 	BB1_211;

BB1_13:
	setp.eq.s32	%p53, %r76, 1;
	@%p53 bra 	BB1_14;
	bra.uni 	BB1_71;

BB1_14:
	mov.u32 	%r39258, 0;
	// inline asm
	prmt.b32 %r39261, %r39258, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39227, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39228, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39229, %r3846, %r39258, %r77;
	// inline asm
	mov.u32 	%r39259, %r39258;
	mov.u32 	%r39260, %r39258;
	mov.u32 	%r39263, %r39258;
	mov.u32 	%r39264, %r39258;
	mov.u32 	%r39265, %r39258;
	mov.u32 	%r39266, %r39258;
	mov.u32 	%r39267, %r39258;
	mov.u32 	%r39268, %r39258;
	mov.u32 	%r39269, %r39258;
	mov.u32 	%r39270, %r39258;
	mov.u32 	%r39271, %r39258;
	mov.u32 	%r39272, %r39258;
	mov.u32 	%r39273, %r39258;
	mov.u32 	%r39274, %r39258;
	mov.u32 	%r39275, %r39258;
	mov.u32 	%r39276, %r39258;
	mov.u32 	%r39277, %r39258;
	mov.u32 	%r39278, %r39258;
	mov.u32 	%r39279, %r39258;
	mov.u32 	%r39280, %r39258;
	mov.u32 	%r39281, %r39258;
	mov.u32 	%r39282, %r39258;
	mov.u32 	%r39283, %r39258;
	mov.u32 	%r39284, %r39258;
	mov.u32 	%r39285, %r39258;
	mov.u32 	%r39286, %r39258;
	mov.u32 	%r39287, %r39258;
	mov.u32 	%r39288, %r39258;
	mov.u32 	%r39289, %r39258;
	mov.u32 	%r39290, %r39258;
	bra.uni 	BB1_95;

BB1_132:
	setp.eq.s32	%p77, %r76, 17;
	@%p77 bra 	BB1_184;
	bra.uni 	BB1_133;

BB1_184:
	// inline asm
	prmt.b32 %r3908, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3880, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	bra.uni 	BB1_181;

BB1_45:
	setp.eq.s32	%p30, %r76, 17;
	@%p30 bra 	BB1_46;
	bra.uni 	BB1_71;

BB1_46:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39277, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39275, %r39227;
	mov.u32 	%r39276, %r39227;
	bra.uni 	BB1_87;

BB1_116:
	setp.eq.s32	%p89, %r76, 9;
	@%p89 bra 	BB1_198;
	bra.uni 	BB1_117;

BB1_198:
	// inline asm
	prmt.b32 %r3908, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3864, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	bra.uni 	BB1_195;

BB1_29:
	setp.eq.s32	%p42, %r76, 9;
	@%p42 bra 	BB1_30;
	bra.uni 	BB1_71;

BB1_30:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39269, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39267, %r39227;
	mov.u32 	%r39268, %r39227;
	bra.uni 	BB1_85;

BB1_147:
	setp.eq.s32	%p66, %r76, 25;
	@%p66 bra 	BB1_170;
	bra.uni 	BB1_148;

BB1_170:
	// inline asm
	prmt.b32 %r3908, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3896, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	bra.uni 	BB1_167;

BB1_60:
	setp.eq.s32	%p19, %r76, 25;
	@%p19 bra 	BB1_61;
	bra.uni 	BB1_71;

BB1_61:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39285, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39283, %r39227;
	mov.u32 	%r39284, %r39227;
	bra.uni 	BB1_89;

BB1_108:
	setp.eq.s32	%p95, %r76, 5;
	@%p95 bra 	BB1_205;
	bra.uni 	BB1_109;

BB1_205:
	// inline asm
	prmt.b32 %r3908, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3856, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	bra.uni 	BB1_202;

BB1_20:
	setp.eq.s32	%p48, %r76, 5;
	@%p48 bra 	BB1_21;
	bra.uni 	BB1_71;

BB1_21:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39265, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39263, %r39227;
	mov.u32 	%r39264, %r39227;
	bra.uni 	BB1_25;

BB1_139:
	setp.eq.s32	%p72, %r76, 21;
	@%p72 bra 	BB1_177;
	bra.uni 	BB1_140;

BB1_177:
	// inline asm
	prmt.b32 %r3908, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3888, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	bra.uni 	BB1_174;

BB1_52:
	setp.eq.s32	%p25, %r76, 21;
	@%p25 bra 	BB1_53;
	bra.uni 	BB1_71;

BB1_53:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39281, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39279, %r39227;
	mov.u32 	%r39280, %r39227;
	bra.uni 	BB1_88;

BB1_123:
	setp.eq.s32	%p84, %r76, 13;
	@%p84 bra 	BB1_191;
	bra.uni 	BB1_124;

BB1_191:
	// inline asm
	prmt.b32 %r3908, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3872, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	bra.uni 	BB1_188;

BB1_36:
	setp.eq.s32	%p37, %r76, 13;
	@%p37 bra 	BB1_37;
	bra.uni 	BB1_71;

BB1_37:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39273, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39271, %r39227;
	mov.u32 	%r39272, %r39227;
	bra.uni 	BB1_86;

BB1_154:
	setp.eq.s32	%p61, %r76, 29;
	@%p61 bra 	BB1_163;
	bra.uni 	BB1_155;

BB1_163:
	// inline asm
	prmt.b32 %r3908, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3904, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	mov.u32 	%r3900, %r3852;
	mov.u32 	%r3898, %r3852;
	mov.u32 	%r3896, %r3852;
	mov.u32 	%r3894, %r3852;
	bra.uni 	BB1_161;

BB1_67:
	setp.eq.s32	%p14, %r76, 29;
	@%p14 bra 	BB1_68;
	bra.uni 	BB1_71;

BB1_68:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39289, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39290, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39283, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39284, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3900, %r39227;
	mov.u32 	%r3898, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r3902, %r39227;
	mov.u32 	%r39258, %r39227;
	mov.u32 	%r39287, %r39227;
	mov.u32 	%r39288, %r39227;
	bra.uni 	BB1_95;

BB1_104:
	setp.eq.s32	%p98, %r76, 3;
	@%p98 bra 	BB1_207;
	bra.uni 	BB1_105;

BB1_207:
	// inline asm
	prmt.b32 %r3908, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3850, 0;
	// inline asm
	prmt.b32 %r3852, %r3846, %r3850, %r77;
	// inline asm
	mov.u32 	%r3848, %r3850;
	mov.u32 	%r39322, %r3850;
	bra.uni 	BB1_211;

BB1_16:
	setp.eq.s32	%p51, %r76, 3;
	@%p51 bra 	BB1_17;
	bra.uni 	BB1_71;

BB1_17:
	mov.u32 	%r39228, 0;
	// inline asm
	prmt.b32 %r39259, %r39228, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3858, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3856, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3854, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39227, %r3846, %r39228, %r77;
	// inline asm
	mov.u32 	%r39229, %r39228;
	mov.u32 	%r39258, %r39228;
	mov.u32 	%r39263, %r39228;
	mov.u32 	%r39264, %r39228;
	mov.u32 	%r39265, %r39228;
	mov.u32 	%r39266, %r39228;
	mov.u32 	%r39267, %r39228;
	mov.u32 	%r39268, %r39228;
	mov.u32 	%r39269, %r39228;
	mov.u32 	%r39270, %r39228;
	mov.u32 	%r39271, %r39228;
	mov.u32 	%r39272, %r39228;
	mov.u32 	%r39273, %r39228;
	mov.u32 	%r39274, %r39228;
	mov.u32 	%r39275, %r39228;
	mov.u32 	%r39276, %r39228;
	mov.u32 	%r39277, %r39228;
	mov.u32 	%r39278, %r39228;
	mov.u32 	%r39279, %r39228;
	mov.u32 	%r39280, %r39228;
	mov.u32 	%r39281, %r39228;
	mov.u32 	%r39282, %r39228;
	mov.u32 	%r39283, %r39228;
	mov.u32 	%r39284, %r39228;
	mov.u32 	%r39285, %r39228;
	mov.u32 	%r39286, %r39228;
	mov.u32 	%r39287, %r39228;
	mov.u32 	%r39288, %r39228;
	mov.u32 	%r39289, %r39228;
	mov.u32 	%r39290, %r39228;
	bra.uni 	BB1_95;

BB1_135:
	setp.eq.s32	%p75, %r76, 19;
	@%p75 bra 	BB1_182;
	bra.uni 	BB1_136;

BB1_182:
	// inline asm
	prmt.b32 %r3908, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3884, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;

BB1_179:
	mov.u32 	%r3882, %r3852;

BB1_180:
	mov.u32 	%r3880, %r3852;

BB1_181:
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_48:
	setp.eq.s32	%p28, %r76, 19;
	@%p28 bra 	BB1_49;
	bra.uni 	BB1_71;

BB1_49:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39275, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_87;

BB1_119:
	setp.eq.s32	%p87, %r76, 11;
	@%p87 bra 	BB1_196;
	bra.uni 	BB1_120;

BB1_196:
	// inline asm
	prmt.b32 %r3908, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3868, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;

BB1_193:
	mov.u32 	%r3866, %r3852;

BB1_194:
	mov.u32 	%r3864, %r3852;

BB1_195:
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_32:
	setp.eq.s32	%p40, %r76, 11;
	@%p40 bra 	BB1_33;
	bra.uni 	BB1_71;

BB1_33:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39267, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_85;

BB1_150:
	setp.eq.s32	%p64, %r76, 27;
	@%p64 bra 	BB1_168;
	bra.uni 	BB1_151;

BB1_168:
	// inline asm
	prmt.b32 %r3908, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3900, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;

BB1_165:
	mov.u32 	%r3898, %r3852;

BB1_166:
	mov.u32 	%r3896, %r3852;

BB1_167:
	mov.u32 	%r3894, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_63:
	setp.eq.s32	%p17, %r76, 27;
	@%p17 bra 	BB1_64;
	bra.uni 	BB1_71;

BB1_64:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39283, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39284, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3898, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_89;

BB1_111:
	setp.eq.s32	%p93, %r76, 7;
	@%p93 bra 	BB1_203;
	bra.uni 	BB1_112;

BB1_203:
	// inline asm
	prmt.b32 %r3908, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3860, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;

BB1_200:
	mov.u32 	%r3858, %r3852;

BB1_201:
	mov.u32 	%r3856, %r3852;

BB1_202:
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_23:
	setp.eq.s32	%p46, %r76, 7;
	@%p46 bra 	BB1_24;
	bra.uni 	BB1_71;

BB1_24:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39263, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3874, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3872, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3870, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3868, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3866, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3864, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3862, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3860, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r39258, %r39227;

BB1_25:
	mov.u32 	%r39267, %r39227;
	mov.u32 	%r39268, %r39227;
	mov.u32 	%r39269, %r39227;
	mov.u32 	%r39270, %r39227;

BB1_85:
	mov.u32 	%r39271, %r39227;
	mov.u32 	%r39272, %r39227;
	mov.u32 	%r39273, %r39227;
	mov.u32 	%r39274, %r39227;

BB1_86:
	mov.u32 	%r39275, %r39227;
	mov.u32 	%r39276, %r39227;
	mov.u32 	%r39277, %r39227;
	mov.u32 	%r39278, %r39227;

BB1_87:
	mov.u32 	%r39279, %r39227;
	mov.u32 	%r39280, %r39227;
	mov.u32 	%r39281, %r39227;
	mov.u32 	%r39282, %r39227;

BB1_88:
	mov.u32 	%r39283, %r39227;
	mov.u32 	%r39284, %r39227;
	mov.u32 	%r39285, %r39227;
	mov.u32 	%r39286, %r39227;

BB1_89:
	mov.u32 	%r39287, %r39227;
	mov.u32 	%r39288, %r39227;
	mov.u32 	%r39289, %r39227;
	mov.u32 	%r39290, %r39227;
	bra.uni 	BB1_95;

BB1_142:
	setp.eq.s32	%p70, %r76, 23;
	@%p70 bra 	BB1_175;
	bra.uni 	BB1_143;

BB1_175:
	// inline asm
	prmt.b32 %r3908, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3892, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;

BB1_172:
	mov.u32 	%r3890, %r3852;

BB1_173:
	mov.u32 	%r3888, %r3852;

BB1_174:
	mov.u32 	%r3886, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_55:
	setp.eq.s32	%p23, %r76, 23;
	@%p23 bra 	BB1_56;
	bra.uni 	BB1_71;

BB1_56:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39279, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_88;

BB1_126:
	setp.eq.s32	%p82, %r76, 15;
	@%p82 bra 	BB1_189;
	bra.uni 	BB1_127;

BB1_189:
	// inline asm
	prmt.b32 %r3908, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3848, %r3846, %r77;
	// inline asm
	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3876, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;

BB1_186:
	mov.u32 	%r3874, %r3852;

BB1_187:
	mov.u32 	%r3872, %r3852;

BB1_188:
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_39:
	setp.eq.s32	%p35, %r76, 15;
	@%p35 bra 	BB1_40;
	bra.uni 	BB1_71;

BB1_40:
	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39271, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3906, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3904, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3902, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3900, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3898, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3896, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3894, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3892, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3890, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3888, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3886, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3884, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3882, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3880, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3878, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3876, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_86;

BB1_157:
	setp.ne.s32	%p59, %r76, 31;
	@%p59 bra 	BB1_158;

	mov.u32 	%r3852, 0;
	// inline asm
	prmt.b32 %r3908, %r3846, %r3852, %r77;
	// inline asm
	mov.u32 	%r3850, %r3852;
	mov.u32 	%r3848, %r3852;
	mov.u32 	%r3860, %r3852;
	mov.u32 	%r3858, %r3852;
	mov.u32 	%r3856, %r3852;
	mov.u32 	%r3854, %r3852;
	mov.u32 	%r3868, %r3852;
	mov.u32 	%r3866, %r3852;
	mov.u32 	%r3864, %r3852;
	mov.u32 	%r3862, %r3852;
	mov.u32 	%r3876, %r3852;
	mov.u32 	%r3874, %r3852;
	mov.u32 	%r3872, %r3852;
	mov.u32 	%r3870, %r3852;
	mov.u32 	%r3884, %r3852;
	mov.u32 	%r3882, %r3852;
	mov.u32 	%r3880, %r3852;
	mov.u32 	%r3878, %r3852;
	mov.u32 	%r3892, %r3852;
	mov.u32 	%r3890, %r3852;
	mov.u32 	%r3888, %r3852;
	mov.u32 	%r3886, %r3852;
	mov.u32 	%r3900, %r3852;
	mov.u32 	%r3898, %r3852;
	mov.u32 	%r3896, %r3852;
	mov.u32 	%r3894, %r3852;
	mov.u32 	%r3906, %r3852;

BB1_160:
	mov.u32 	%r3904, %r3852;

BB1_161:
	mov.u32 	%r3902, %r3852;
	mov.u32 	%r39322, %r3852;
	bra.uni 	BB1_211;

BB1_70:
	setp.ne.s32	%p12, %r76, 31;
	@%p12 bra 	BB1_71;

	mov.u32 	%r39227, 0;
	// inline asm
	prmt.b32 %r39287, %r39227, %r3908, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39288, %r3908, %r3906, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39289, %r3906, %r3904, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39290, %r3904, %r3902, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39283, %r3902, %r3900, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39284, %r3900, %r3898, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39285, %r3898, %r3896, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39286, %r3896, %r3894, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39279, %r3894, %r3892, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39280, %r3892, %r3890, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39281, %r3890, %r3888, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39282, %r3888, %r3886, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39275, %r3886, %r3884, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39276, %r3884, %r3882, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39277, %r3882, %r3880, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39278, %r3880, %r3878, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39271, %r3878, %r3876, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39272, %r3876, %r3874, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39273, %r3874, %r3872, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39274, %r3872, %r3870, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39267, %r3870, %r3868, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39268, %r3868, %r3866, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39269, %r3866, %r3864, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39270, %r3864, %r3862, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39263, %r3862, %r3860, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39264, %r3860, %r3858, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39265, %r3858, %r3856, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39266, %r3856, %r3854, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39259, %r3854, %r3852, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39260, %r3852, %r3850, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39261, %r3850, %r3848, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r39262, %r3848, %r3846, %r77;
	// inline asm
	// inline asm
	prmt.b32 %r3908, %r3846, %r39227, %r77;
	// inline asm
	mov.u32 	%r39228, %r39227;
	mov.u32 	%r39229, %r39227;
	mov.u32 	%r3860, %r39227;
	mov.u32 	%r3858, %r39227;
	mov.u32 	%r3856, %r39227;
	mov.u32 	%r3854, %r39227;
	mov.u32 	%r3868, %r39227;
	mov.u32 	%r3866, %r39227;
	mov.u32 	%r3864, %r39227;
	mov.u32 	%r3862, %r39227;
	mov.u32 	%r3876, %r39227;
	mov.u32 	%r3874, %r39227;
	mov.u32 	%r3872, %r39227;
	mov.u32 	%r3870, %r39227;
	mov.u32 	%r3884, %r39227;
	mov.u32 	%r3882, %r39227;
	mov.u32 	%r3880, %r39227;
	mov.u32 	%r3878, %r39227;
	mov.u32 	%r3892, %r39227;
	mov.u32 	%r3890, %r39227;
	mov.u32 	%r3888, %r39227;
	mov.u32 	%r3886, %r39227;
	mov.u32 	%r3900, %r39227;
	mov.u32 	%r3898, %r39227;
	mov.u32 	%r3896, %r39227;
	mov.u32 	%r3894, %r39227;
	mov.u32 	%r3906, %r39227;
	mov.u32 	%r3904, %r39227;
	mov.u32 	%r3902, %r39227;
	mov.u32 	%r39258, %r39227;
	bra.uni 	BB1_95;

BB1_71:
	mov.u32 	%r39227, %r3852;
	mov.u32 	%r39228, %r3850;
	mov.u32 	%r39229, %r3848;
	mov.u32 	%r39258, %r3846;
	mov.u32 	%r39260, %r39259;
	mov.u32 	%r39261, %r39259;
	mov.u32 	%r39262, %r39259;

BB1_94:
	mov.u32 	%r39263, %r39259;
	mov.u32 	%r39264, %r39259;
	mov.u32 	%r39265, %r39259;
	mov.u32 	%r39266, %r39259;
	mov.u32 	%r39267, %r39259;
	mov.u32 	%r39268, %r39259;
	mov.u32 	%r39269, %r39259;
	mov.u32 	%r39270, %r39259;
	mov.u32 	%r39271, %r39259;
	mov.u32 	%r39272, %r39259;
	mov.u32 	%r39273, %r39259;
	mov.u32 	%r39274, %r39259;
	mov.u32 	%r39275, %r39259;
	mov.u32 	%r39276, %r39259;
	mov.u32 	%r39277, %r39259;
	mov.u32 	%r39278, %r39259;
	mov.u32 	%r39279, %r39259;
	mov.u32 	%r39280, %r39259;
	mov.u32 	%r39281, %r39259;
	mov.u32 	%r39282, %r39259;
	mov.u32 	%r39283, %r39259;
	mov.u32 	%r39284, %r39259;
	mov.u32 	%r39285, %r39259;
	mov.u32 	%r39286, %r39259;
	mov.u32 	%r39287, %r39259;
	mov.u32 	%r39288, %r39259;
	mov.u32 	%r39289, %r39259;
	mov.u32 	%r39290, %r39259;

BB1_95:
	ld.local.v2.u32 	{%r9164, %r9165}, [%rd9+64];
	ld.local.v2.u32 	{%r9168, %r9169}, [%rd9+72];
	ld.local.v2.u32 	{%r9172, %r9173}, [%rd9+80];
	ld.local.v2.u32 	{%r9176, %r9177}, [%rd9+88];
	ld.local.v2.u32 	{%r9180, %r9181}, [%rd9+96];
	ld.local.v2.u32 	{%r9184, %r9185}, [%rd9+104];
	ld.local.v2.u32 	{%r9188, %r9189}, [%rd9+112];
	ld.local.v2.u32 	{%r9192, %r9193}, [%rd9+120];
	ld.local.v2.u32 	{%r9196, %r9197}, [%rd9+128];
	ld.local.v2.u32 	{%r9200, %r9201}, [%rd9+136];
	ld.local.v2.u32 	{%r9204, %r9205}, [%rd9+144];
	ld.local.v2.u32 	{%r9208, %r9209}, [%rd9+152];
	ld.local.v2.u32 	{%r9212, %r9213}, [%rd9+160];
	ld.local.v2.u32 	{%r9216, %r9217}, [%rd9+168];
	ld.local.v2.u32 	{%r9220, %r9221}, [%rd9+176];
	ld.local.v2.u32 	{%r9224, %r9225}, [%rd9+184];
	or.b32  	%r9228, %r9164, %r39258;
	or.b32  	%r9229, %r9165, %r39229;
	mov.b64	%rd260, {%r9229, %r9228};
	or.b32  	%r9230, %r9168, %r39228;
	or.b32  	%r9231, %r9169, %r39227;
	mov.b64	%rd261, {%r9231, %r9230};
	or.b32  	%r9232, %r9172, %r3854;
	or.b32  	%r9233, %r9173, %r3856;
	mov.b64	%rd262, {%r9233, %r9232};
	or.b32  	%r9234, %r9176, %r3858;
	or.b32  	%r9235, %r9177, %r3860;
	mov.b64	%rd263, {%r9235, %r9234};
	or.b32  	%r9236, %r9180, %r3862;
	or.b32  	%r9237, %r9181, %r3864;
	mov.b64	%rd264, {%r9237, %r9236};
	or.b32  	%r9238, %r9184, %r3866;
	or.b32  	%r9239, %r9185, %r3868;
	mov.b64	%rd265, {%r9239, %r9238};
	or.b32  	%r9240, %r9188, %r3870;
	or.b32  	%r9241, %r9189, %r3872;
	mov.b64	%rd266, {%r9241, %r9240};
	or.b32  	%r9242, %r9192, %r3874;
	or.b32  	%r9243, %r9193, %r3876;
	mov.b64	%rd267, {%r9243, %r9242};
	or.b32  	%r9244, %r9196, %r3878;
	or.b32  	%r9245, %r9197, %r3880;
	mov.b64	%rd268, {%r9245, %r9244};
	or.b32  	%r9246, %r9200, %r3882;
	or.b32  	%r9247, %r9201, %r3884;
	mov.b64	%rd269, {%r9247, %r9246};
	or.b32  	%r9248, %r9204, %r3886;
	or.b32  	%r9249, %r9205, %r3888;
	mov.b64	%rd270, {%r9249, %r9248};
	or.b32  	%r9250, %r9208, %r3890;
	or.b32  	%r9251, %r9209, %r3892;
	mov.b64	%rd271, {%r9251, %r9250};
	or.b32  	%r9252, %r9212, %r3894;
	or.b32  	%r9253, %r9213, %r3896;
	mov.b64	%rd272, {%r9253, %r9252};
	or.b32  	%r9254, %r9216, %r3898;
	or.b32  	%r9255, %r9217, %r3900;
	mov.b64	%rd273, {%r9255, %r9254};
	or.b32  	%r9256, %r9220, %r3902;
	or.b32  	%r9257, %r9221, %r3904;
	mov.b64	%rd274, {%r9257, %r9256};
	or.b32  	%r9258, %r9224, %r3906;
	or.b32  	%r9259, %r9225, %r3908;
	mov.b64	%rd275, {%r9259, %r9258};
	ld.local.u64 	%rd276, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9260,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9261}, %rd276;
	}
	shf.r.wrap.b32 	%r9262, %r9261, %r9260, 14;
	shf.r.wrap.b32 	%r9263, %r9260, %r9261, 14;
	mov.b64 	%rd277, {%r9263, %r9262};
	shf.r.wrap.b32 	%r9264, %r9261, %r9260, 18;
	shf.r.wrap.b32 	%r9265, %r9260, %r9261, 18;
	mov.b64 	%rd278, {%r9265, %r9264};
	xor.b64  	%rd279, %rd278, %rd277;
	shf.l.wrap.b32 	%r9266, %r9260, %r9261, 23;
	shf.l.wrap.b32 	%r9267, %r9261, %r9260, 23;
	mov.b64 	%rd280, {%r9267, %r9266};
	xor.b64  	%rd281, %rd279, %rd280;
	ld.local.u64 	%rd282, [%rd9+48];
	ld.local.u64 	%rd283, [%rd9+40];
	xor.b64  	%rd284, %rd282, %rd283;
	and.b64  	%rd285, %rd284, %rd276;
	xor.b64  	%rd286, %rd285, %rd282;
	add.s64 	%rd287, %rd260, %rd28;
	ld.local.u64 	%rd288, [%rd9+56];
	add.s64 	%rd289, %rd287, %rd288;
	add.s64 	%rd290, %rd289, %rd286;
	add.s64 	%rd291, %rd290, %rd281;
	ld.local.u64 	%rd292, [%rd9+24];
	add.s64 	%rd293, %rd291, %rd292;
	ld.local.u64 	%rd294, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9268,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9269}, %rd294;
	}
	shf.r.wrap.b32 	%r9270, %r9269, %r9268, 28;
	shf.r.wrap.b32 	%r9271, %r9268, %r9269, 28;
	mov.b64 	%rd295, {%r9271, %r9270};
	shf.l.wrap.b32 	%r9272, %r9268, %r9269, 30;
	shf.l.wrap.b32 	%r9273, %r9269, %r9268, 30;
	mov.b64 	%rd296, {%r9273, %r9272};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r9274, %r9268, %r9269, 25;
	shf.l.wrap.b32 	%r9275, %r9269, %r9268, 25;
	mov.b64 	%rd298, {%r9275, %r9274};
	xor.b64  	%rd299, %rd297, %rd298;
	ld.local.u64 	%rd300, [%rd9+8];
	and.b64  	%rd301, %rd300, %rd294;
	xor.b64  	%rd302, %rd300, %rd294;
	ld.local.u64 	%rd303, [%rd9+16];
	and.b64  	%rd304, %rd303, %rd302;
	or.b64  	%rd305, %rd304, %rd301;
	add.s64 	%rd306, %rd291, %rd305;
	add.s64 	%rd307, %rd306, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9276,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9277}, %rd293;
	}
	shf.r.wrap.b32 	%r9278, %r9277, %r9276, 14;
	shf.r.wrap.b32 	%r9279, %r9276, %r9277, 14;
	mov.b64 	%rd308, {%r9279, %r9278};
	shf.r.wrap.b32 	%r9280, %r9277, %r9276, 18;
	shf.r.wrap.b32 	%r9281, %r9276, %r9277, 18;
	mov.b64 	%rd309, {%r9281, %r9280};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r9282, %r9276, %r9277, 23;
	shf.l.wrap.b32 	%r9283, %r9277, %r9276, 23;
	mov.b64 	%rd311, {%r9283, %r9282};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd283, %rd276;
	and.b64  	%rd314, %rd293, %rd313;
	xor.b64  	%rd315, %rd314, %rd283;
	add.s64 	%rd316, %rd261, %rd29;
	add.s64 	%rd317, %rd316, %rd282;
	add.s64 	%rd318, %rd317, %rd315;
	add.s64 	%rd319, %rd318, %rd312;
	add.s64 	%rd320, %rd319, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9284,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9285}, %rd307;
	}
	shf.r.wrap.b32 	%r9286, %r9285, %r9284, 28;
	shf.r.wrap.b32 	%r9287, %r9284, %r9285, 28;
	mov.b64 	%rd321, {%r9287, %r9286};
	shf.l.wrap.b32 	%r9288, %r9284, %r9285, 30;
	shf.l.wrap.b32 	%r9289, %r9285, %r9284, 30;
	mov.b64 	%rd322, {%r9289, %r9288};
	xor.b64  	%rd323, %rd322, %rd321;
	shf.l.wrap.b32 	%r9290, %r9284, %r9285, 25;
	shf.l.wrap.b32 	%r9291, %r9285, %r9284, 25;
	mov.b64 	%rd324, {%r9291, %r9290};
	xor.b64  	%rd325, %rd323, %rd324;
	and.b64  	%rd326, %rd307, %rd294;
	xor.b64  	%rd327, %rd307, %rd294;
	and.b64  	%rd328, %rd327, %rd300;
	or.b64  	%rd329, %rd328, %rd326;
	add.s64 	%rd330, %rd319, %rd329;
	add.s64 	%rd331, %rd330, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9292,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9293}, %rd320;
	}
	shf.r.wrap.b32 	%r9294, %r9293, %r9292, 14;
	shf.r.wrap.b32 	%r9295, %r9292, %r9293, 14;
	mov.b64 	%rd332, {%r9295, %r9294};
	shf.r.wrap.b32 	%r9296, %r9293, %r9292, 18;
	shf.r.wrap.b32 	%r9297, %r9292, %r9293, 18;
	mov.b64 	%rd333, {%r9297, %r9296};
	xor.b64  	%rd334, %rd333, %rd332;
	shf.l.wrap.b32 	%r9298, %r9292, %r9293, 23;
	shf.l.wrap.b32 	%r9299, %r9293, %r9292, 23;
	mov.b64 	%rd335, {%r9299, %r9298};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd293, %rd276;
	and.b64  	%rd338, %rd320, %rd337;
	xor.b64  	%rd339, %rd338, %rd276;
	add.s64 	%rd340, %rd262, %rd30;
	add.s64 	%rd341, %rd340, %rd283;
	add.s64 	%rd342, %rd341, %rd339;
	add.s64 	%rd343, %rd342, %rd336;
	add.s64 	%rd344, %rd343, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9300,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9301}, %rd331;
	}
	shf.r.wrap.b32 	%r9302, %r9301, %r9300, 28;
	shf.r.wrap.b32 	%r9303, %r9300, %r9301, 28;
	mov.b64 	%rd345, {%r9303, %r9302};
	shf.l.wrap.b32 	%r9304, %r9300, %r9301, 30;
	shf.l.wrap.b32 	%r9305, %r9301, %r9300, 30;
	mov.b64 	%rd346, {%r9305, %r9304};
	xor.b64  	%rd347, %rd346, %rd345;
	shf.l.wrap.b32 	%r9306, %r9300, %r9301, 25;
	shf.l.wrap.b32 	%r9307, %r9301, %r9300, 25;
	mov.b64 	%rd348, {%r9307, %r9306};
	xor.b64  	%rd349, %rd347, %rd348;
	and.b64  	%rd350, %rd331, %rd307;
	xor.b64  	%rd351, %rd331, %rd307;
	and.b64  	%rd352, %rd351, %rd294;
	or.b64  	%rd353, %rd352, %rd350;
	add.s64 	%rd354, %rd343, %rd353;
	add.s64 	%rd355, %rd354, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9309}, %rd344;
	}
	shf.r.wrap.b32 	%r9310, %r9309, %r9308, 14;
	shf.r.wrap.b32 	%r9311, %r9308, %r9309, 14;
	mov.b64 	%rd356, {%r9311, %r9310};
	shf.r.wrap.b32 	%r9312, %r9309, %r9308, 18;
	shf.r.wrap.b32 	%r9313, %r9308, %r9309, 18;
	mov.b64 	%rd357, {%r9313, %r9312};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r9314, %r9308, %r9309, 23;
	shf.l.wrap.b32 	%r9315, %r9309, %r9308, 23;
	mov.b64 	%rd359, {%r9315, %r9314};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd320, %rd293;
	and.b64  	%rd362, %rd344, %rd361;
	xor.b64  	%rd363, %rd362, %rd293;
	add.s64 	%rd364, %rd263, %rd31;
	add.s64 	%rd365, %rd364, %rd276;
	add.s64 	%rd366, %rd365, %rd363;
	add.s64 	%rd367, %rd366, %rd360;
	add.s64 	%rd368, %rd367, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9317}, %rd355;
	}
	shf.r.wrap.b32 	%r9318, %r9317, %r9316, 28;
	shf.r.wrap.b32 	%r9319, %r9316, %r9317, 28;
	mov.b64 	%rd369, {%r9319, %r9318};
	shf.l.wrap.b32 	%r9320, %r9316, %r9317, 30;
	shf.l.wrap.b32 	%r9321, %r9317, %r9316, 30;
	mov.b64 	%rd370, {%r9321, %r9320};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r9322, %r9316, %r9317, 25;
	shf.l.wrap.b32 	%r9323, %r9317, %r9316, 25;
	mov.b64 	%rd372, {%r9323, %r9322};
	xor.b64  	%rd373, %rd371, %rd372;
	and.b64  	%rd374, %rd355, %rd331;
	xor.b64  	%rd375, %rd355, %rd331;
	and.b64  	%rd376, %rd375, %rd307;
	or.b64  	%rd377, %rd376, %rd374;
	add.s64 	%rd378, %rd367, %rd377;
	add.s64 	%rd379, %rd378, %rd373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9325}, %rd368;
	}
	shf.r.wrap.b32 	%r9326, %r9325, %r9324, 14;
	shf.r.wrap.b32 	%r9327, %r9324, %r9325, 14;
	mov.b64 	%rd380, {%r9327, %r9326};
	shf.r.wrap.b32 	%r9328, %r9325, %r9324, 18;
	shf.r.wrap.b32 	%r9329, %r9324, %r9325, 18;
	mov.b64 	%rd381, {%r9329, %r9328};
	xor.b64  	%rd382, %rd381, %rd380;
	shf.l.wrap.b32 	%r9330, %r9324, %r9325, 23;
	shf.l.wrap.b32 	%r9331, %r9325, %r9324, 23;
	mov.b64 	%rd383, {%r9331, %r9330};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd344, %rd320;
	and.b64  	%rd386, %rd368, %rd385;
	xor.b64  	%rd387, %rd386, %rd320;
	add.s64 	%rd388, %rd264, %rd32;
	add.s64 	%rd389, %rd388, %rd293;
	add.s64 	%rd390, %rd389, %rd387;
	add.s64 	%rd391, %rd390, %rd384;
	add.s64 	%rd392, %rd391, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9332,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9333}, %rd379;
	}
	shf.r.wrap.b32 	%r9334, %r9333, %r9332, 28;
	shf.r.wrap.b32 	%r9335, %r9332, %r9333, 28;
	mov.b64 	%rd393, {%r9335, %r9334};
	shf.l.wrap.b32 	%r9336, %r9332, %r9333, 30;
	shf.l.wrap.b32 	%r9337, %r9333, %r9332, 30;
	mov.b64 	%rd394, {%r9337, %r9336};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r9338, %r9332, %r9333, 25;
	shf.l.wrap.b32 	%r9339, %r9333, %r9332, 25;
	mov.b64 	%rd396, {%r9339, %r9338};
	xor.b64  	%rd397, %rd395, %rd396;
	and.b64  	%rd398, %rd379, %rd355;
	xor.b64  	%rd399, %rd379, %rd355;
	and.b64  	%rd400, %rd399, %rd331;
	or.b64  	%rd401, %rd400, %rd398;
	add.s64 	%rd402, %rd391, %rd401;
	add.s64 	%rd403, %rd402, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9340,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9341}, %rd392;
	}
	shf.r.wrap.b32 	%r9342, %r9341, %r9340, 14;
	shf.r.wrap.b32 	%r9343, %r9340, %r9341, 14;
	mov.b64 	%rd404, {%r9343, %r9342};
	shf.r.wrap.b32 	%r9344, %r9341, %r9340, 18;
	shf.r.wrap.b32 	%r9345, %r9340, %r9341, 18;
	mov.b64 	%rd405, {%r9345, %r9344};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r9346, %r9340, %r9341, 23;
	shf.l.wrap.b32 	%r9347, %r9341, %r9340, 23;
	mov.b64 	%rd407, {%r9347, %r9346};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd368, %rd344;
	and.b64  	%rd410, %rd392, %rd409;
	xor.b64  	%rd411, %rd410, %rd344;
	add.s64 	%rd412, %rd265, %rd33;
	add.s64 	%rd413, %rd412, %rd320;
	add.s64 	%rd414, %rd413, %rd411;
	add.s64 	%rd415, %rd414, %rd408;
	add.s64 	%rd416, %rd415, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9348,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9349}, %rd403;
	}
	shf.r.wrap.b32 	%r9350, %r9349, %r9348, 28;
	shf.r.wrap.b32 	%r9351, %r9348, %r9349, 28;
	mov.b64 	%rd417, {%r9351, %r9350};
	shf.l.wrap.b32 	%r9352, %r9348, %r9349, 30;
	shf.l.wrap.b32 	%r9353, %r9349, %r9348, 30;
	mov.b64 	%rd418, {%r9353, %r9352};
	xor.b64  	%rd419, %rd418, %rd417;
	shf.l.wrap.b32 	%r9354, %r9348, %r9349, 25;
	shf.l.wrap.b32 	%r9355, %r9349, %r9348, 25;
	mov.b64 	%rd420, {%r9355, %r9354};
	xor.b64  	%rd421, %rd419, %rd420;
	and.b64  	%rd422, %rd403, %rd379;
	xor.b64  	%rd423, %rd403, %rd379;
	and.b64  	%rd424, %rd423, %rd355;
	or.b64  	%rd425, %rd424, %rd422;
	add.s64 	%rd426, %rd415, %rd425;
	add.s64 	%rd427, %rd426, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9356,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9357}, %rd416;
	}
	shf.r.wrap.b32 	%r9358, %r9357, %r9356, 14;
	shf.r.wrap.b32 	%r9359, %r9356, %r9357, 14;
	mov.b64 	%rd428, {%r9359, %r9358};
	shf.r.wrap.b32 	%r9360, %r9357, %r9356, 18;
	shf.r.wrap.b32 	%r9361, %r9356, %r9357, 18;
	mov.b64 	%rd429, {%r9361, %r9360};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r9362, %r9356, %r9357, 23;
	shf.l.wrap.b32 	%r9363, %r9357, %r9356, 23;
	mov.b64 	%rd431, {%r9363, %r9362};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd392, %rd368;
	and.b64  	%rd434, %rd416, %rd433;
	xor.b64  	%rd435, %rd434, %rd368;
	add.s64 	%rd436, %rd266, %rd34;
	add.s64 	%rd437, %rd436, %rd344;
	add.s64 	%rd438, %rd437, %rd435;
	add.s64 	%rd439, %rd438, %rd432;
	add.s64 	%rd440, %rd439, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9365}, %rd427;
	}
	shf.r.wrap.b32 	%r9366, %r9365, %r9364, 28;
	shf.r.wrap.b32 	%r9367, %r9364, %r9365, 28;
	mov.b64 	%rd441, {%r9367, %r9366};
	shf.l.wrap.b32 	%r9368, %r9364, %r9365, 30;
	shf.l.wrap.b32 	%r9369, %r9365, %r9364, 30;
	mov.b64 	%rd442, {%r9369, %r9368};
	xor.b64  	%rd443, %rd442, %rd441;
	shf.l.wrap.b32 	%r9370, %r9364, %r9365, 25;
	shf.l.wrap.b32 	%r9371, %r9365, %r9364, 25;
	mov.b64 	%rd444, {%r9371, %r9370};
	xor.b64  	%rd445, %rd443, %rd444;
	and.b64  	%rd446, %rd427, %rd403;
	xor.b64  	%rd447, %rd427, %rd403;
	and.b64  	%rd448, %rd447, %rd379;
	or.b64  	%rd449, %rd448, %rd446;
	add.s64 	%rd450, %rd439, %rd449;
	add.s64 	%rd451, %rd450, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9372,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9373}, %rd440;
	}
	shf.r.wrap.b32 	%r9374, %r9373, %r9372, 14;
	shf.r.wrap.b32 	%r9375, %r9372, %r9373, 14;
	mov.b64 	%rd452, {%r9375, %r9374};
	shf.r.wrap.b32 	%r9376, %r9373, %r9372, 18;
	shf.r.wrap.b32 	%r9377, %r9372, %r9373, 18;
	mov.b64 	%rd453, {%r9377, %r9376};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.l.wrap.b32 	%r9378, %r9372, %r9373, 23;
	shf.l.wrap.b32 	%r9379, %r9373, %r9372, 23;
	mov.b64 	%rd455, {%r9379, %r9378};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd416, %rd392;
	and.b64  	%rd458, %rd440, %rd457;
	xor.b64  	%rd459, %rd458, %rd392;
	add.s64 	%rd460, %rd267, %rd35;
	add.s64 	%rd461, %rd460, %rd368;
	add.s64 	%rd462, %rd461, %rd459;
	add.s64 	%rd463, %rd462, %rd456;
	add.s64 	%rd464, %rd463, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9380,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9381}, %rd451;
	}
	shf.r.wrap.b32 	%r9382, %r9381, %r9380, 28;
	shf.r.wrap.b32 	%r9383, %r9380, %r9381, 28;
	mov.b64 	%rd465, {%r9383, %r9382};
	shf.l.wrap.b32 	%r9384, %r9380, %r9381, 30;
	shf.l.wrap.b32 	%r9385, %r9381, %r9380, 30;
	mov.b64 	%rd466, {%r9385, %r9384};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r9386, %r9380, %r9381, 25;
	shf.l.wrap.b32 	%r9387, %r9381, %r9380, 25;
	mov.b64 	%rd468, {%r9387, %r9386};
	xor.b64  	%rd469, %rd467, %rd468;
	and.b64  	%rd470, %rd451, %rd427;
	xor.b64  	%rd471, %rd451, %rd427;
	and.b64  	%rd472, %rd471, %rd403;
	or.b64  	%rd473, %rd472, %rd470;
	add.s64 	%rd474, %rd463, %rd473;
	add.s64 	%rd475, %rd474, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9388,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9389}, %rd464;
	}
	shf.r.wrap.b32 	%r9390, %r9389, %r9388, 14;
	shf.r.wrap.b32 	%r9391, %r9388, %r9389, 14;
	mov.b64 	%rd476, {%r9391, %r9390};
	shf.r.wrap.b32 	%r9392, %r9389, %r9388, 18;
	shf.r.wrap.b32 	%r9393, %r9388, %r9389, 18;
	mov.b64 	%rd477, {%r9393, %r9392};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r9394, %r9388, %r9389, 23;
	shf.l.wrap.b32 	%r9395, %r9389, %r9388, 23;
	mov.b64 	%rd479, {%r9395, %r9394};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd440, %rd416;
	and.b64  	%rd482, %rd464, %rd481;
	xor.b64  	%rd483, %rd482, %rd416;
	add.s64 	%rd484, %rd268, %rd36;
	add.s64 	%rd485, %rd484, %rd392;
	add.s64 	%rd486, %rd485, %rd483;
	add.s64 	%rd487, %rd486, %rd480;
	add.s64 	%rd488, %rd487, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9396,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9397}, %rd475;
	}
	shf.r.wrap.b32 	%r9398, %r9397, %r9396, 28;
	shf.r.wrap.b32 	%r9399, %r9396, %r9397, 28;
	mov.b64 	%rd489, {%r9399, %r9398};
	shf.l.wrap.b32 	%r9400, %r9396, %r9397, 30;
	shf.l.wrap.b32 	%r9401, %r9397, %r9396, 30;
	mov.b64 	%rd490, {%r9401, %r9400};
	xor.b64  	%rd491, %rd490, %rd489;
	shf.l.wrap.b32 	%r9402, %r9396, %r9397, 25;
	shf.l.wrap.b32 	%r9403, %r9397, %r9396, 25;
	mov.b64 	%rd492, {%r9403, %r9402};
	xor.b64  	%rd493, %rd491, %rd492;
	and.b64  	%rd494, %rd475, %rd451;
	xor.b64  	%rd495, %rd475, %rd451;
	and.b64  	%rd496, %rd495, %rd427;
	or.b64  	%rd497, %rd496, %rd494;
	add.s64 	%rd498, %rd487, %rd497;
	add.s64 	%rd499, %rd498, %rd493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9404,%dummy}, %rd488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9405}, %rd488;
	}
	shf.r.wrap.b32 	%r9406, %r9405, %r9404, 14;
	shf.r.wrap.b32 	%r9407, %r9404, %r9405, 14;
	mov.b64 	%rd500, {%r9407, %r9406};
	shf.r.wrap.b32 	%r9408, %r9405, %r9404, 18;
	shf.r.wrap.b32 	%r9409, %r9404, %r9405, 18;
	mov.b64 	%rd501, {%r9409, %r9408};
	xor.b64  	%rd502, %rd501, %rd500;
	shf.l.wrap.b32 	%r9410, %r9404, %r9405, 23;
	shf.l.wrap.b32 	%r9411, %r9405, %r9404, 23;
	mov.b64 	%rd503, {%r9411, %r9410};
	xor.b64  	%rd504, %rd502, %rd503;
	xor.b64  	%rd505, %rd464, %rd440;
	and.b64  	%rd506, %rd488, %rd505;
	xor.b64  	%rd507, %rd506, %rd440;
	add.s64 	%rd508, %rd269, %rd37;
	add.s64 	%rd509, %rd508, %rd416;
	add.s64 	%rd510, %rd509, %rd507;
	add.s64 	%rd511, %rd510, %rd504;
	add.s64 	%rd512, %rd511, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9412,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9413}, %rd499;
	}
	shf.r.wrap.b32 	%r9414, %r9413, %r9412, 28;
	shf.r.wrap.b32 	%r9415, %r9412, %r9413, 28;
	mov.b64 	%rd513, {%r9415, %r9414};
	shf.l.wrap.b32 	%r9416, %r9412, %r9413, 30;
	shf.l.wrap.b32 	%r9417, %r9413, %r9412, 30;
	mov.b64 	%rd514, {%r9417, %r9416};
	xor.b64  	%rd515, %rd514, %rd513;
	shf.l.wrap.b32 	%r9418, %r9412, %r9413, 25;
	shf.l.wrap.b32 	%r9419, %r9413, %r9412, 25;
	mov.b64 	%rd516, {%r9419, %r9418};
	xor.b64  	%rd517, %rd515, %rd516;
	and.b64  	%rd518, %rd499, %rd475;
	xor.b64  	%rd519, %rd499, %rd475;
	and.b64  	%rd520, %rd519, %rd451;
	or.b64  	%rd521, %rd520, %rd518;
	add.s64 	%rd522, %rd511, %rd521;
	add.s64 	%rd523, %rd522, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9420,%dummy}, %rd512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9421}, %rd512;
	}
	shf.r.wrap.b32 	%r9422, %r9421, %r9420, 14;
	shf.r.wrap.b32 	%r9423, %r9420, %r9421, 14;
	mov.b64 	%rd524, {%r9423, %r9422};
	shf.r.wrap.b32 	%r9424, %r9421, %r9420, 18;
	shf.r.wrap.b32 	%r9425, %r9420, %r9421, 18;
	mov.b64 	%rd525, {%r9425, %r9424};
	xor.b64  	%rd526, %rd525, %rd524;
	shf.l.wrap.b32 	%r9426, %r9420, %r9421, 23;
	shf.l.wrap.b32 	%r9427, %r9421, %r9420, 23;
	mov.b64 	%rd527, {%r9427, %r9426};
	xor.b64  	%rd528, %rd526, %rd527;
	xor.b64  	%rd529, %rd488, %rd464;
	and.b64  	%rd530, %rd512, %rd529;
	xor.b64  	%rd531, %rd530, %rd464;
	add.s64 	%rd532, %rd270, %rd38;
	add.s64 	%rd533, %rd532, %rd440;
	add.s64 	%rd534, %rd533, %rd531;
	add.s64 	%rd535, %rd534, %rd528;
	add.s64 	%rd536, %rd535, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9428,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9429}, %rd523;
	}
	shf.r.wrap.b32 	%r9430, %r9429, %r9428, 28;
	shf.r.wrap.b32 	%r9431, %r9428, %r9429, 28;
	mov.b64 	%rd537, {%r9431, %r9430};
	shf.l.wrap.b32 	%r9432, %r9428, %r9429, 30;
	shf.l.wrap.b32 	%r9433, %r9429, %r9428, 30;
	mov.b64 	%rd538, {%r9433, %r9432};
	xor.b64  	%rd539, %rd538, %rd537;
	shf.l.wrap.b32 	%r9434, %r9428, %r9429, 25;
	shf.l.wrap.b32 	%r9435, %r9429, %r9428, 25;
	mov.b64 	%rd540, {%r9435, %r9434};
	xor.b64  	%rd541, %rd539, %rd540;
	and.b64  	%rd542, %rd523, %rd499;
	xor.b64  	%rd543, %rd523, %rd499;
	and.b64  	%rd544, %rd543, %rd475;
	or.b64  	%rd545, %rd544, %rd542;
	add.s64 	%rd546, %rd535, %rd545;
	add.s64 	%rd547, %rd546, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9436,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9437}, %rd536;
	}
	shf.r.wrap.b32 	%r9438, %r9437, %r9436, 14;
	shf.r.wrap.b32 	%r9439, %r9436, %r9437, 14;
	mov.b64 	%rd548, {%r9439, %r9438};
	shf.r.wrap.b32 	%r9440, %r9437, %r9436, 18;
	shf.r.wrap.b32 	%r9441, %r9436, %r9437, 18;
	mov.b64 	%rd549, {%r9441, %r9440};
	xor.b64  	%rd550, %rd549, %rd548;
	shf.l.wrap.b32 	%r9442, %r9436, %r9437, 23;
	shf.l.wrap.b32 	%r9443, %r9437, %r9436, 23;
	mov.b64 	%rd551, {%r9443, %r9442};
	xor.b64  	%rd552, %rd550, %rd551;
	xor.b64  	%rd553, %rd512, %rd488;
	and.b64  	%rd554, %rd536, %rd553;
	xor.b64  	%rd555, %rd554, %rd488;
	add.s64 	%rd556, %rd271, %rd39;
	add.s64 	%rd557, %rd556, %rd464;
	add.s64 	%rd558, %rd557, %rd555;
	add.s64 	%rd559, %rd558, %rd552;
	add.s64 	%rd560, %rd559, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9444,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9445}, %rd547;
	}
	shf.r.wrap.b32 	%r9446, %r9445, %r9444, 28;
	shf.r.wrap.b32 	%r9447, %r9444, %r9445, 28;
	mov.b64 	%rd561, {%r9447, %r9446};
	shf.l.wrap.b32 	%r9448, %r9444, %r9445, 30;
	shf.l.wrap.b32 	%r9449, %r9445, %r9444, 30;
	mov.b64 	%rd562, {%r9449, %r9448};
	xor.b64  	%rd563, %rd562, %rd561;
	shf.l.wrap.b32 	%r9450, %r9444, %r9445, 25;
	shf.l.wrap.b32 	%r9451, %r9445, %r9444, 25;
	mov.b64 	%rd564, {%r9451, %r9450};
	xor.b64  	%rd565, %rd563, %rd564;
	and.b64  	%rd566, %rd547, %rd523;
	xor.b64  	%rd567, %rd547, %rd523;
	and.b64  	%rd568, %rd567, %rd499;
	or.b64  	%rd569, %rd568, %rd566;
	add.s64 	%rd570, %rd559, %rd569;
	add.s64 	%rd571, %rd570, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9452,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9453}, %rd560;
	}
	shf.r.wrap.b32 	%r9454, %r9453, %r9452, 14;
	shf.r.wrap.b32 	%r9455, %r9452, %r9453, 14;
	mov.b64 	%rd572, {%r9455, %r9454};
	shf.r.wrap.b32 	%r9456, %r9453, %r9452, 18;
	shf.r.wrap.b32 	%r9457, %r9452, %r9453, 18;
	mov.b64 	%rd573, {%r9457, %r9456};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r9458, %r9452, %r9453, 23;
	shf.l.wrap.b32 	%r9459, %r9453, %r9452, 23;
	mov.b64 	%rd575, {%r9459, %r9458};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd536, %rd512;
	and.b64  	%rd578, %rd560, %rd577;
	xor.b64  	%rd579, %rd578, %rd512;
	add.s64 	%rd580, %rd272, %rd40;
	add.s64 	%rd581, %rd580, %rd488;
	add.s64 	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd584, %rd583, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9460,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9461}, %rd571;
	}
	shf.r.wrap.b32 	%r9462, %r9461, %r9460, 28;
	shf.r.wrap.b32 	%r9463, %r9460, %r9461, 28;
	mov.b64 	%rd585, {%r9463, %r9462};
	shf.l.wrap.b32 	%r9464, %r9460, %r9461, 30;
	shf.l.wrap.b32 	%r9465, %r9461, %r9460, 30;
	mov.b64 	%rd586, {%r9465, %r9464};
	xor.b64  	%rd587, %rd586, %rd585;
	shf.l.wrap.b32 	%r9466, %r9460, %r9461, 25;
	shf.l.wrap.b32 	%r9467, %r9461, %r9460, 25;
	mov.b64 	%rd588, {%r9467, %r9466};
	xor.b64  	%rd589, %rd587, %rd588;
	and.b64  	%rd590, %rd571, %rd547;
	xor.b64  	%rd591, %rd571, %rd547;
	and.b64  	%rd592, %rd591, %rd523;
	or.b64  	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd583, %rd593;
	add.s64 	%rd595, %rd594, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9468,%dummy}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9469}, %rd584;
	}
	shf.r.wrap.b32 	%r9470, %r9469, %r9468, 14;
	shf.r.wrap.b32 	%r9471, %r9468, %r9469, 14;
	mov.b64 	%rd596, {%r9471, %r9470};
	shf.r.wrap.b32 	%r9472, %r9469, %r9468, 18;
	shf.r.wrap.b32 	%r9473, %r9468, %r9469, 18;
	mov.b64 	%rd597, {%r9473, %r9472};
	xor.b64  	%rd598, %rd597, %rd596;
	shf.l.wrap.b32 	%r9474, %r9468, %r9469, 23;
	shf.l.wrap.b32 	%r9475, %r9469, %r9468, 23;
	mov.b64 	%rd599, {%r9475, %r9474};
	xor.b64  	%rd600, %rd598, %rd599;
	xor.b64  	%rd601, %rd560, %rd536;
	and.b64  	%rd602, %rd584, %rd601;
	xor.b64  	%rd603, %rd602, %rd536;
	add.s64 	%rd604, %rd273, %rd41;
	add.s64 	%rd605, %rd604, %rd512;
	add.s64 	%rd606, %rd605, %rd603;
	add.s64 	%rd607, %rd606, %rd600;
	add.s64 	%rd608, %rd607, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9476,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9477}, %rd595;
	}
	shf.r.wrap.b32 	%r9478, %r9477, %r9476, 28;
	shf.r.wrap.b32 	%r9479, %r9476, %r9477, 28;
	mov.b64 	%rd609, {%r9479, %r9478};
	shf.l.wrap.b32 	%r9480, %r9476, %r9477, 30;
	shf.l.wrap.b32 	%r9481, %r9477, %r9476, 30;
	mov.b64 	%rd610, {%r9481, %r9480};
	xor.b64  	%rd611, %rd610, %rd609;
	shf.l.wrap.b32 	%r9482, %r9476, %r9477, 25;
	shf.l.wrap.b32 	%r9483, %r9477, %r9476, 25;
	mov.b64 	%rd612, {%r9483, %r9482};
	xor.b64  	%rd613, %rd611, %rd612;
	and.b64  	%rd614, %rd595, %rd571;
	xor.b64  	%rd615, %rd595, %rd571;
	and.b64  	%rd616, %rd615, %rd547;
	or.b64  	%rd617, %rd616, %rd614;
	add.s64 	%rd618, %rd607, %rd617;
	add.s64 	%rd619, %rd618, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9485}, %rd608;
	}
	shf.r.wrap.b32 	%r9486, %r9485, %r9484, 14;
	shf.r.wrap.b32 	%r9487, %r9484, %r9485, 14;
	mov.b64 	%rd620, {%r9487, %r9486};
	shf.r.wrap.b32 	%r9488, %r9485, %r9484, 18;
	shf.r.wrap.b32 	%r9489, %r9484, %r9485, 18;
	mov.b64 	%rd621, {%r9489, %r9488};
	xor.b64  	%rd622, %rd621, %rd620;
	shf.l.wrap.b32 	%r9490, %r9484, %r9485, 23;
	shf.l.wrap.b32 	%r9491, %r9485, %r9484, 23;
	mov.b64 	%rd623, {%r9491, %r9490};
	xor.b64  	%rd624, %rd622, %rd623;
	xor.b64  	%rd625, %rd584, %rd560;
	and.b64  	%rd626, %rd608, %rd625;
	xor.b64  	%rd627, %rd626, %rd560;
	add.s64 	%rd628, %rd274, %rd42;
	add.s64 	%rd629, %rd628, %rd536;
	add.s64 	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd630, %rd624;
	add.s64 	%rd632, %rd631, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9492,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9493}, %rd619;
	}
	shf.r.wrap.b32 	%r9494, %r9493, %r9492, 28;
	shf.r.wrap.b32 	%r9495, %r9492, %r9493, 28;
	mov.b64 	%rd633, {%r9495, %r9494};
	shf.l.wrap.b32 	%r9496, %r9492, %r9493, 30;
	shf.l.wrap.b32 	%r9497, %r9493, %r9492, 30;
	mov.b64 	%rd634, {%r9497, %r9496};
	xor.b64  	%rd635, %rd634, %rd633;
	shf.l.wrap.b32 	%r9498, %r9492, %r9493, 25;
	shf.l.wrap.b32 	%r9499, %r9493, %r9492, 25;
	mov.b64 	%rd636, {%r9499, %r9498};
	xor.b64  	%rd637, %rd635, %rd636;
	and.b64  	%rd638, %rd619, %rd595;
	xor.b64  	%rd639, %rd619, %rd595;
	and.b64  	%rd640, %rd639, %rd571;
	or.b64  	%rd641, %rd640, %rd638;
	add.s64 	%rd642, %rd631, %rd641;
	add.s64 	%rd643, %rd642, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9500,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9501}, %rd632;
	}
	shf.r.wrap.b32 	%r9502, %r9501, %r9500, 14;
	shf.r.wrap.b32 	%r9503, %r9500, %r9501, 14;
	mov.b64 	%rd644, {%r9503, %r9502};
	shf.r.wrap.b32 	%r9504, %r9501, %r9500, 18;
	shf.r.wrap.b32 	%r9505, %r9500, %r9501, 18;
	mov.b64 	%rd645, {%r9505, %r9504};
	xor.b64  	%rd646, %rd645, %rd644;
	shf.l.wrap.b32 	%r9506, %r9500, %r9501, 23;
	shf.l.wrap.b32 	%r9507, %r9501, %r9500, 23;
	mov.b64 	%rd647, {%r9507, %r9506};
	xor.b64  	%rd648, %rd646, %rd647;
	xor.b64  	%rd649, %rd608, %rd584;
	and.b64  	%rd650, %rd632, %rd649;
	xor.b64  	%rd651, %rd650, %rd584;
	add.s64 	%rd652, %rd275, %rd43;
	add.s64 	%rd653, %rd652, %rd560;
	add.s64 	%rd654, %rd653, %rd651;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd656, %rd655, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9508,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9509}, %rd643;
	}
	shf.r.wrap.b32 	%r9510, %r9509, %r9508, 28;
	shf.r.wrap.b32 	%r9511, %r9508, %r9509, 28;
	mov.b64 	%rd657, {%r9511, %r9510};
	shf.l.wrap.b32 	%r9512, %r9508, %r9509, 30;
	shf.l.wrap.b32 	%r9513, %r9509, %r9508, 30;
	mov.b64 	%rd658, {%r9513, %r9512};
	xor.b64  	%rd659, %rd658, %rd657;
	shf.l.wrap.b32 	%r9514, %r9508, %r9509, 25;
	shf.l.wrap.b32 	%r9515, %r9509, %r9508, 25;
	mov.b64 	%rd660, {%r9515, %r9514};
	xor.b64  	%rd661, %rd659, %rd660;
	and.b64  	%rd662, %rd643, %rd619;
	xor.b64  	%rd663, %rd643, %rd619;
	and.b64  	%rd664, %rd663, %rd595;
	or.b64  	%rd665, %rd664, %rd662;
	add.s64 	%rd666, %rd655, %rd665;
	add.s64 	%rd667, %rd666, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9516,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9517}, %rd274;
	}
	shf.r.wrap.b32 	%r9518, %r9517, %r9516, 19;
	shf.r.wrap.b32 	%r9519, %r9516, %r9517, 19;
	mov.b64 	%rd668, {%r9519, %r9518};
	shf.l.wrap.b32 	%r9520, %r9516, %r9517, 3;
	shf.l.wrap.b32 	%r9521, %r9517, %r9516, 3;
	mov.b64 	%rd669, {%r9521, %r9520};
	shr.u64 	%rd670, %rd274, 6;
	xor.b64  	%rd671, %rd668, %rd670;
	xor.b64  	%rd672, %rd671, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9522,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd261;
	}
	shf.r.wrap.b32 	%r9524, %r9523, %r9522, 1;
	shf.r.wrap.b32 	%r9525, %r9522, %r9523, 1;
	mov.b64 	%rd673, {%r9525, %r9524};
	shf.r.wrap.b32 	%r9526, %r9523, %r9522, 8;
	shf.r.wrap.b32 	%r9527, %r9522, %r9523, 8;
	mov.b64 	%rd674, {%r9527, %r9526};
	shr.u64 	%rd675, %rd261, 7;
	xor.b64  	%rd676, %rd673, %rd675;
	xor.b64  	%rd677, %rd676, %rd674;
	add.s64 	%rd678, %rd269, %rd260;
	add.s64 	%rd679, %rd678, %rd672;
	add.s64 	%rd680, %rd679, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9528,%dummy}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9529}, %rd275;
	}
	shf.r.wrap.b32 	%r9530, %r9529, %r9528, 19;
	shf.r.wrap.b32 	%r9531, %r9528, %r9529, 19;
	mov.b64 	%rd681, {%r9531, %r9530};
	shf.l.wrap.b32 	%r9532, %r9528, %r9529, 3;
	shf.l.wrap.b32 	%r9533, %r9529, %r9528, 3;
	mov.b64 	%rd682, {%r9533, %r9532};
	shr.u64 	%rd683, %rd275, 6;
	xor.b64  	%rd684, %rd681, %rd683;
	xor.b64  	%rd685, %rd684, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9534,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9535}, %rd262;
	}
	shf.r.wrap.b32 	%r9536, %r9535, %r9534, 1;
	shf.r.wrap.b32 	%r9537, %r9534, %r9535, 1;
	mov.b64 	%rd686, {%r9537, %r9536};
	shf.r.wrap.b32 	%r9538, %r9535, %r9534, 8;
	shf.r.wrap.b32 	%r9539, %r9534, %r9535, 8;
	mov.b64 	%rd687, {%r9539, %r9538};
	shr.u64 	%rd688, %rd262, 7;
	xor.b64  	%rd689, %rd686, %rd688;
	xor.b64  	%rd690, %rd689, %rd687;
	add.s64 	%rd691, %rd270, %rd261;
	add.s64 	%rd692, %rd691, %rd685;
	add.s64 	%rd693, %rd692, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9540,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9541}, %rd680;
	}
	shf.r.wrap.b32 	%r9542, %r9541, %r9540, 19;
	shf.r.wrap.b32 	%r9543, %r9540, %r9541, 19;
	mov.b64 	%rd694, {%r9543, %r9542};
	shf.l.wrap.b32 	%r9544, %r9540, %r9541, 3;
	shf.l.wrap.b32 	%r9545, %r9541, %r9540, 3;
	mov.b64 	%rd695, {%r9545, %r9544};
	shr.u64 	%rd696, %rd680, 6;
	xor.b64  	%rd697, %rd694, %rd696;
	xor.b64  	%rd698, %rd697, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9546,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9547}, %rd263;
	}
	shf.r.wrap.b32 	%r9548, %r9547, %r9546, 1;
	shf.r.wrap.b32 	%r9549, %r9546, %r9547, 1;
	mov.b64 	%rd699, {%r9549, %r9548};
	shf.r.wrap.b32 	%r9550, %r9547, %r9546, 8;
	shf.r.wrap.b32 	%r9551, %r9546, %r9547, 8;
	mov.b64 	%rd700, {%r9551, %r9550};
	shr.u64 	%rd701, %rd263, 7;
	xor.b64  	%rd702, %rd699, %rd701;
	xor.b64  	%rd703, %rd702, %rd700;
	add.s64 	%rd704, %rd271, %rd262;
	add.s64 	%rd705, %rd704, %rd698;
	add.s64 	%rd706, %rd705, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9552,%dummy}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9553}, %rd693;
	}
	shf.r.wrap.b32 	%r9554, %r9553, %r9552, 19;
	shf.r.wrap.b32 	%r9555, %r9552, %r9553, 19;
	mov.b64 	%rd707, {%r9555, %r9554};
	shf.l.wrap.b32 	%r9556, %r9552, %r9553, 3;
	shf.l.wrap.b32 	%r9557, %r9553, %r9552, 3;
	mov.b64 	%rd708, {%r9557, %r9556};
	shr.u64 	%rd709, %rd693, 6;
	xor.b64  	%rd710, %rd707, %rd709;
	xor.b64  	%rd711, %rd710, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9558,%dummy}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9559}, %rd264;
	}
	shf.r.wrap.b32 	%r9560, %r9559, %r9558, 1;
	shf.r.wrap.b32 	%r9561, %r9558, %r9559, 1;
	mov.b64 	%rd712, {%r9561, %r9560};
	shf.r.wrap.b32 	%r9562, %r9559, %r9558, 8;
	shf.r.wrap.b32 	%r9563, %r9558, %r9559, 8;
	mov.b64 	%rd713, {%r9563, %r9562};
	shr.u64 	%rd714, %rd264, 7;
	xor.b64  	%rd715, %rd712, %rd714;
	xor.b64  	%rd716, %rd715, %rd713;
	add.s64 	%rd717, %rd272, %rd263;
	add.s64 	%rd718, %rd717, %rd711;
	add.s64 	%rd719, %rd718, %rd716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9564,%dummy}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9565}, %rd706;
	}
	shf.r.wrap.b32 	%r9566, %r9565, %r9564, 19;
	shf.r.wrap.b32 	%r9567, %r9564, %r9565, 19;
	mov.b64 	%rd720, {%r9567, %r9566};
	shf.l.wrap.b32 	%r9568, %r9564, %r9565, 3;
	shf.l.wrap.b32 	%r9569, %r9565, %r9564, 3;
	mov.b64 	%rd721, {%r9569, %r9568};
	shr.u64 	%rd722, %rd706, 6;
	xor.b64  	%rd723, %rd720, %rd722;
	xor.b64  	%rd724, %rd723, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9570,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9571}, %rd265;
	}
	shf.r.wrap.b32 	%r9572, %r9571, %r9570, 1;
	shf.r.wrap.b32 	%r9573, %r9570, %r9571, 1;
	mov.b64 	%rd725, {%r9573, %r9572};
	shf.r.wrap.b32 	%r9574, %r9571, %r9570, 8;
	shf.r.wrap.b32 	%r9575, %r9570, %r9571, 8;
	mov.b64 	%rd726, {%r9575, %r9574};
	shr.u64 	%rd727, %rd265, 7;
	xor.b64  	%rd728, %rd725, %rd727;
	xor.b64  	%rd729, %rd728, %rd726;
	add.s64 	%rd730, %rd273, %rd264;
	add.s64 	%rd731, %rd730, %rd724;
	add.s64 	%rd732, %rd731, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9576,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9577}, %rd719;
	}
	shf.r.wrap.b32 	%r9578, %r9577, %r9576, 19;
	shf.r.wrap.b32 	%r9579, %r9576, %r9577, 19;
	mov.b64 	%rd733, {%r9579, %r9578};
	shf.l.wrap.b32 	%r9580, %r9576, %r9577, 3;
	shf.l.wrap.b32 	%r9581, %r9577, %r9576, 3;
	mov.b64 	%rd734, {%r9581, %r9580};
	shr.u64 	%rd735, %rd719, 6;
	xor.b64  	%rd736, %rd733, %rd735;
	xor.b64  	%rd737, %rd736, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9582,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9583}, %rd266;
	}
	shf.r.wrap.b32 	%r9584, %r9583, %r9582, 1;
	shf.r.wrap.b32 	%r9585, %r9582, %r9583, 1;
	mov.b64 	%rd738, {%r9585, %r9584};
	shf.r.wrap.b32 	%r9586, %r9583, %r9582, 8;
	shf.r.wrap.b32 	%r9587, %r9582, %r9583, 8;
	mov.b64 	%rd739, {%r9587, %r9586};
	shr.u64 	%rd740, %rd266, 7;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	add.s64 	%rd743, %rd274, %rd265;
	add.s64 	%rd744, %rd743, %rd737;
	add.s64 	%rd745, %rd744, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9588,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9589}, %rd732;
	}
	shf.r.wrap.b32 	%r9590, %r9589, %r9588, 19;
	shf.r.wrap.b32 	%r9591, %r9588, %r9589, 19;
	mov.b64 	%rd746, {%r9591, %r9590};
	shf.l.wrap.b32 	%r9592, %r9588, %r9589, 3;
	shf.l.wrap.b32 	%r9593, %r9589, %r9588, 3;
	mov.b64 	%rd747, {%r9593, %r9592};
	shr.u64 	%rd748, %rd732, 6;
	xor.b64  	%rd749, %rd746, %rd748;
	xor.b64  	%rd750, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9594,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9595}, %rd267;
	}
	shf.r.wrap.b32 	%r9596, %r9595, %r9594, 1;
	shf.r.wrap.b32 	%r9597, %r9594, %r9595, 1;
	mov.b64 	%rd751, {%r9597, %r9596};
	shf.r.wrap.b32 	%r9598, %r9595, %r9594, 8;
	shf.r.wrap.b32 	%r9599, %r9594, %r9595, 8;
	mov.b64 	%rd752, {%r9599, %r9598};
	shr.u64 	%rd753, %rd267, 7;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	add.s64 	%rd756, %rd275, %rd266;
	add.s64 	%rd757, %rd756, %rd750;
	add.s64 	%rd758, %rd757, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9600,%dummy}, %rd745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9601}, %rd745;
	}
	shf.r.wrap.b32 	%r9602, %r9601, %r9600, 19;
	shf.r.wrap.b32 	%r9603, %r9600, %r9601, 19;
	mov.b64 	%rd759, {%r9603, %r9602};
	shf.l.wrap.b32 	%r9604, %r9600, %r9601, 3;
	shf.l.wrap.b32 	%r9605, %r9601, %r9600, 3;
	mov.b64 	%rd760, {%r9605, %r9604};
	shr.u64 	%rd761, %rd745, 6;
	xor.b64  	%rd762, %rd759, %rd761;
	xor.b64  	%rd763, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9606,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9607}, %rd268;
	}
	shf.r.wrap.b32 	%r9608, %r9607, %r9606, 1;
	shf.r.wrap.b32 	%r9609, %r9606, %r9607, 1;
	mov.b64 	%rd764, {%r9609, %r9608};
	shf.r.wrap.b32 	%r9610, %r9607, %r9606, 8;
	shf.r.wrap.b32 	%r9611, %r9606, %r9607, 8;
	mov.b64 	%rd765, {%r9611, %r9610};
	shr.u64 	%rd766, %rd268, 7;
	xor.b64  	%rd767, %rd764, %rd766;
	xor.b64  	%rd768, %rd767, %rd765;
	add.s64 	%rd769, %rd680, %rd267;
	add.s64 	%rd770, %rd769, %rd763;
	add.s64 	%rd771, %rd770, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9612,%dummy}, %rd758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9613}, %rd758;
	}
	shf.r.wrap.b32 	%r9614, %r9613, %r9612, 19;
	shf.r.wrap.b32 	%r9615, %r9612, %r9613, 19;
	mov.b64 	%rd772, {%r9615, %r9614};
	shf.l.wrap.b32 	%r9616, %r9612, %r9613, 3;
	shf.l.wrap.b32 	%r9617, %r9613, %r9612, 3;
	mov.b64 	%rd773, {%r9617, %r9616};
	shr.u64 	%rd774, %rd758, 6;
	xor.b64  	%rd775, %rd772, %rd774;
	xor.b64  	%rd776, %rd775, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9618,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9619}, %rd269;
	}
	shf.r.wrap.b32 	%r9620, %r9619, %r9618, 1;
	shf.r.wrap.b32 	%r9621, %r9618, %r9619, 1;
	mov.b64 	%rd777, {%r9621, %r9620};
	shf.r.wrap.b32 	%r9622, %r9619, %r9618, 8;
	shf.r.wrap.b32 	%r9623, %r9618, %r9619, 8;
	mov.b64 	%rd778, {%r9623, %r9622};
	shr.u64 	%rd779, %rd269, 7;
	xor.b64  	%rd780, %rd777, %rd779;
	xor.b64  	%rd781, %rd780, %rd778;
	add.s64 	%rd782, %rd693, %rd268;
	add.s64 	%rd783, %rd782, %rd776;
	add.s64 	%rd784, %rd783, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9625}, %rd771;
	}
	shf.r.wrap.b32 	%r9626, %r9625, %r9624, 19;
	shf.r.wrap.b32 	%r9627, %r9624, %r9625, 19;
	mov.b64 	%rd785, {%r9627, %r9626};
	shf.l.wrap.b32 	%r9628, %r9624, %r9625, 3;
	shf.l.wrap.b32 	%r9629, %r9625, %r9624, 3;
	mov.b64 	%rd786, {%r9629, %r9628};
	shr.u64 	%rd787, %rd771, 6;
	xor.b64  	%rd788, %rd785, %rd787;
	xor.b64  	%rd789, %rd788, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9630,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9631}, %rd270;
	}
	shf.r.wrap.b32 	%r9632, %r9631, %r9630, 1;
	shf.r.wrap.b32 	%r9633, %r9630, %r9631, 1;
	mov.b64 	%rd790, {%r9633, %r9632};
	shf.r.wrap.b32 	%r9634, %r9631, %r9630, 8;
	shf.r.wrap.b32 	%r9635, %r9630, %r9631, 8;
	mov.b64 	%rd791, {%r9635, %r9634};
	shr.u64 	%rd792, %rd270, 7;
	xor.b64  	%rd793, %rd790, %rd792;
	xor.b64  	%rd794, %rd793, %rd791;
	add.s64 	%rd795, %rd706, %rd269;
	add.s64 	%rd796, %rd795, %rd789;
	add.s64 	%rd797, %rd796, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9636,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9637}, %rd784;
	}
	shf.r.wrap.b32 	%r9638, %r9637, %r9636, 19;
	shf.r.wrap.b32 	%r9639, %r9636, %r9637, 19;
	mov.b64 	%rd798, {%r9639, %r9638};
	shf.l.wrap.b32 	%r9640, %r9636, %r9637, 3;
	shf.l.wrap.b32 	%r9641, %r9637, %r9636, 3;
	mov.b64 	%rd799, {%r9641, %r9640};
	shr.u64 	%rd800, %rd784, 6;
	xor.b64  	%rd801, %rd798, %rd800;
	xor.b64  	%rd802, %rd801, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9642,%dummy}, %rd271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9643}, %rd271;
	}
	shf.r.wrap.b32 	%r9644, %r9643, %r9642, 1;
	shf.r.wrap.b32 	%r9645, %r9642, %r9643, 1;
	mov.b64 	%rd803, {%r9645, %r9644};
	shf.r.wrap.b32 	%r9646, %r9643, %r9642, 8;
	shf.r.wrap.b32 	%r9647, %r9642, %r9643, 8;
	mov.b64 	%rd804, {%r9647, %r9646};
	shr.u64 	%rd805, %rd271, 7;
	xor.b64  	%rd806, %rd803, %rd805;
	xor.b64  	%rd807, %rd806, %rd804;
	add.s64 	%rd808, %rd719, %rd270;
	add.s64 	%rd809, %rd808, %rd802;
	add.s64 	%rd810, %rd809, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9648,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9649}, %rd797;
	}
	shf.r.wrap.b32 	%r9650, %r9649, %r9648, 19;
	shf.r.wrap.b32 	%r9651, %r9648, %r9649, 19;
	mov.b64 	%rd811, {%r9651, %r9650};
	shf.l.wrap.b32 	%r9652, %r9648, %r9649, 3;
	shf.l.wrap.b32 	%r9653, %r9649, %r9648, 3;
	mov.b64 	%rd812, {%r9653, %r9652};
	shr.u64 	%rd813, %rd797, 6;
	xor.b64  	%rd814, %rd811, %rd813;
	xor.b64  	%rd815, %rd814, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9654,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd272;
	}
	shf.r.wrap.b32 	%r9656, %r9655, %r9654, 1;
	shf.r.wrap.b32 	%r9657, %r9654, %r9655, 1;
	mov.b64 	%rd816, {%r9657, %r9656};
	shf.r.wrap.b32 	%r9658, %r9655, %r9654, 8;
	shf.r.wrap.b32 	%r9659, %r9654, %r9655, 8;
	mov.b64 	%rd817, {%r9659, %r9658};
	shr.u64 	%rd818, %rd272, 7;
	xor.b64  	%rd819, %rd816, %rd818;
	xor.b64  	%rd820, %rd819, %rd817;
	add.s64 	%rd821, %rd732, %rd271;
	add.s64 	%rd822, %rd821, %rd815;
	add.s64 	%rd823, %rd822, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9660,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9661}, %rd810;
	}
	shf.r.wrap.b32 	%r9662, %r9661, %r9660, 19;
	shf.r.wrap.b32 	%r9663, %r9660, %r9661, 19;
	mov.b64 	%rd824, {%r9663, %r9662};
	shf.l.wrap.b32 	%r9664, %r9660, %r9661, 3;
	shf.l.wrap.b32 	%r9665, %r9661, %r9660, 3;
	mov.b64 	%rd825, {%r9665, %r9664};
	shr.u64 	%rd826, %rd810, 6;
	xor.b64  	%rd827, %rd824, %rd826;
	xor.b64  	%rd828, %rd827, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9666,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9667}, %rd273;
	}
	shf.r.wrap.b32 	%r9668, %r9667, %r9666, 1;
	shf.r.wrap.b32 	%r9669, %r9666, %r9667, 1;
	mov.b64 	%rd829, {%r9669, %r9668};
	shf.r.wrap.b32 	%r9670, %r9667, %r9666, 8;
	shf.r.wrap.b32 	%r9671, %r9666, %r9667, 8;
	mov.b64 	%rd830, {%r9671, %r9670};
	shr.u64 	%rd831, %rd273, 7;
	xor.b64  	%rd832, %rd829, %rd831;
	xor.b64  	%rd833, %rd832, %rd830;
	add.s64 	%rd834, %rd745, %rd272;
	add.s64 	%rd835, %rd834, %rd828;
	add.s64 	%rd836, %rd835, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9673}, %rd823;
	}
	shf.r.wrap.b32 	%r9674, %r9673, %r9672, 19;
	shf.r.wrap.b32 	%r9675, %r9672, %r9673, 19;
	mov.b64 	%rd837, {%r9675, %r9674};
	shf.l.wrap.b32 	%r9676, %r9672, %r9673, 3;
	shf.l.wrap.b32 	%r9677, %r9673, %r9672, 3;
	mov.b64 	%rd838, {%r9677, %r9676};
	shr.u64 	%rd839, %rd823, 6;
	xor.b64  	%rd840, %rd837, %rd839;
	xor.b64  	%rd841, %rd840, %rd838;
	shf.r.wrap.b32 	%r9678, %r9517, %r9516, 1;
	shf.r.wrap.b32 	%r9679, %r9516, %r9517, 1;
	mov.b64 	%rd842, {%r9679, %r9678};
	shf.r.wrap.b32 	%r9680, %r9517, %r9516, 8;
	shf.r.wrap.b32 	%r9681, %r9516, %r9517, 8;
	mov.b64 	%rd843, {%r9681, %r9680};
	shr.u64 	%rd844, %rd274, 7;
	xor.b64  	%rd845, %rd842, %rd844;
	xor.b64  	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd758, %rd273;
	add.s64 	%rd848, %rd847, %rd841;
	add.s64 	%rd849, %rd848, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9682,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9683}, %rd836;
	}
	shf.r.wrap.b32 	%r9684, %r9683, %r9682, 19;
	shf.r.wrap.b32 	%r9685, %r9682, %r9683, 19;
	mov.b64 	%rd850, {%r9685, %r9684};
	shf.l.wrap.b32 	%r9686, %r9682, %r9683, 3;
	shf.l.wrap.b32 	%r9687, %r9683, %r9682, 3;
	mov.b64 	%rd851, {%r9687, %r9686};
	shr.u64 	%rd852, %rd836, 6;
	xor.b64  	%rd853, %rd850, %rd852;
	xor.b64  	%rd854, %rd853, %rd851;
	shf.r.wrap.b32 	%r9688, %r9529, %r9528, 1;
	shf.r.wrap.b32 	%r9689, %r9528, %r9529, 1;
	mov.b64 	%rd855, {%r9689, %r9688};
	shf.r.wrap.b32 	%r9690, %r9529, %r9528, 8;
	shf.r.wrap.b32 	%r9691, %r9528, %r9529, 8;
	mov.b64 	%rd856, {%r9691, %r9690};
	shr.u64 	%rd857, %rd275, 7;
	xor.b64  	%rd858, %rd855, %rd857;
	xor.b64  	%rd859, %rd858, %rd856;
	add.s64 	%rd860, %rd771, %rd274;
	add.s64 	%rd861, %rd860, %rd854;
	add.s64 	%rd862, %rd861, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9692,%dummy}, %rd849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9693}, %rd849;
	}
	shf.r.wrap.b32 	%r9694, %r9693, %r9692, 19;
	shf.r.wrap.b32 	%r9695, %r9692, %r9693, 19;
	mov.b64 	%rd863, {%r9695, %r9694};
	shf.l.wrap.b32 	%r9696, %r9692, %r9693, 3;
	shf.l.wrap.b32 	%r9697, %r9693, %r9692, 3;
	mov.b64 	%rd864, {%r9697, %r9696};
	shr.u64 	%rd865, %rd849, 6;
	xor.b64  	%rd866, %rd863, %rd865;
	xor.b64  	%rd867, %rd866, %rd864;
	shf.r.wrap.b32 	%r9698, %r9541, %r9540, 1;
	shf.r.wrap.b32 	%r9699, %r9540, %r9541, 1;
	mov.b64 	%rd868, {%r9699, %r9698};
	shf.r.wrap.b32 	%r9700, %r9541, %r9540, 8;
	shf.r.wrap.b32 	%r9701, %r9540, %r9541, 8;
	mov.b64 	%rd869, {%r9701, %r9700};
	shr.u64 	%rd870, %rd680, 7;
	xor.b64  	%rd871, %rd868, %rd870;
	xor.b64  	%rd872, %rd871, %rd869;
	add.s64 	%rd873, %rd784, %rd275;
	add.s64 	%rd874, %rd873, %rd867;
	add.s64 	%rd875, %rd874, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9702,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9703}, %rd656;
	}
	shf.r.wrap.b32 	%r9704, %r9703, %r9702, 14;
	shf.r.wrap.b32 	%r9705, %r9702, %r9703, 14;
	mov.b64 	%rd876, {%r9705, %r9704};
	shf.r.wrap.b32 	%r9706, %r9703, %r9702, 18;
	shf.r.wrap.b32 	%r9707, %r9702, %r9703, 18;
	mov.b64 	%rd877, {%r9707, %r9706};
	xor.b64  	%rd878, %rd877, %rd876;
	shf.l.wrap.b32 	%r9708, %r9702, %r9703, 23;
	shf.l.wrap.b32 	%r9709, %r9703, %r9702, 23;
	mov.b64 	%rd879, {%r9709, %r9708};
	xor.b64  	%rd880, %rd878, %rd879;
	xor.b64  	%rd881, %rd632, %rd608;
	and.b64  	%rd882, %rd656, %rd881;
	xor.b64  	%rd883, %rd882, %rd608;
	add.s64 	%rd884, %rd883, %rd584;
	add.s64 	%rd885, %rd884, %rd680;
	add.s64 	%rd886, %rd885, %rd44;
	add.s64 	%rd887, %rd886, %rd880;
	add.s64 	%rd888, %rd887, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9710,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9711}, %rd667;
	}
	shf.r.wrap.b32 	%r9712, %r9711, %r9710, 28;
	shf.r.wrap.b32 	%r9713, %r9710, %r9711, 28;
	mov.b64 	%rd889, {%r9713, %r9712};
	shf.l.wrap.b32 	%r9714, %r9710, %r9711, 30;
	shf.l.wrap.b32 	%r9715, %r9711, %r9710, 30;
	mov.b64 	%rd890, {%r9715, %r9714};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r9716, %r9710, %r9711, 25;
	shf.l.wrap.b32 	%r9717, %r9711, %r9710, 25;
	mov.b64 	%rd892, {%r9717, %r9716};
	xor.b64  	%rd893, %rd891, %rd892;
	and.b64  	%rd894, %rd667, %rd643;
	xor.b64  	%rd895, %rd667, %rd643;
	and.b64  	%rd896, %rd895, %rd619;
	or.b64  	%rd897, %rd896, %rd894;
	add.s64 	%rd898, %rd887, %rd897;
	add.s64 	%rd899, %rd898, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9718,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9719}, %rd888;
	}
	shf.r.wrap.b32 	%r9720, %r9719, %r9718, 14;
	shf.r.wrap.b32 	%r9721, %r9718, %r9719, 14;
	mov.b64 	%rd900, {%r9721, %r9720};
	shf.r.wrap.b32 	%r9722, %r9719, %r9718, 18;
	shf.r.wrap.b32 	%r9723, %r9718, %r9719, 18;
	mov.b64 	%rd901, {%r9723, %r9722};
	xor.b64  	%rd902, %rd901, %rd900;
	shf.l.wrap.b32 	%r9724, %r9718, %r9719, 23;
	shf.l.wrap.b32 	%r9725, %r9719, %r9718, 23;
	mov.b64 	%rd903, {%r9725, %r9724};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd656, %rd632;
	and.b64  	%rd906, %rd888, %rd905;
	xor.b64  	%rd907, %rd906, %rd632;
	add.s64 	%rd908, %rd693, %rd608;
	add.s64 	%rd909, %rd908, %rd45;
	add.s64 	%rd910, %rd909, %rd907;
	add.s64 	%rd911, %rd910, %rd904;
	add.s64 	%rd912, %rd911, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9726,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9727}, %rd899;
	}
	shf.r.wrap.b32 	%r9728, %r9727, %r9726, 28;
	shf.r.wrap.b32 	%r9729, %r9726, %r9727, 28;
	mov.b64 	%rd913, {%r9729, %r9728};
	shf.l.wrap.b32 	%r9730, %r9726, %r9727, 30;
	shf.l.wrap.b32 	%r9731, %r9727, %r9726, 30;
	mov.b64 	%rd914, {%r9731, %r9730};
	xor.b64  	%rd915, %rd914, %rd913;
	shf.l.wrap.b32 	%r9732, %r9726, %r9727, 25;
	shf.l.wrap.b32 	%r9733, %r9727, %r9726, 25;
	mov.b64 	%rd916, {%r9733, %r9732};
	xor.b64  	%rd917, %rd915, %rd916;
	and.b64  	%rd918, %rd899, %rd667;
	xor.b64  	%rd919, %rd899, %rd667;
	and.b64  	%rd920, %rd919, %rd643;
	or.b64  	%rd921, %rd920, %rd918;
	add.s64 	%rd922, %rd911, %rd921;
	add.s64 	%rd923, %rd922, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9734,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9735}, %rd912;
	}
	shf.r.wrap.b32 	%r9736, %r9735, %r9734, 14;
	shf.r.wrap.b32 	%r9737, %r9734, %r9735, 14;
	mov.b64 	%rd924, {%r9737, %r9736};
	shf.r.wrap.b32 	%r9738, %r9735, %r9734, 18;
	shf.r.wrap.b32 	%r9739, %r9734, %r9735, 18;
	mov.b64 	%rd925, {%r9739, %r9738};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r9740, %r9734, %r9735, 23;
	shf.l.wrap.b32 	%r9741, %r9735, %r9734, 23;
	mov.b64 	%rd927, {%r9741, %r9740};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd888, %rd656;
	and.b64  	%rd930, %rd912, %rd929;
	xor.b64  	%rd931, %rd930, %rd656;
	add.s64 	%rd932, %rd706, %rd632;
	add.s64 	%rd933, %rd932, %rd46;
	add.s64 	%rd934, %rd933, %rd931;
	add.s64 	%rd935, %rd934, %rd928;
	add.s64 	%rd936, %rd935, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9742,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9743}, %rd923;
	}
	shf.r.wrap.b32 	%r9744, %r9743, %r9742, 28;
	shf.r.wrap.b32 	%r9745, %r9742, %r9743, 28;
	mov.b64 	%rd937, {%r9745, %r9744};
	shf.l.wrap.b32 	%r9746, %r9742, %r9743, 30;
	shf.l.wrap.b32 	%r9747, %r9743, %r9742, 30;
	mov.b64 	%rd938, {%r9747, %r9746};
	xor.b64  	%rd939, %rd938, %rd937;
	shf.l.wrap.b32 	%r9748, %r9742, %r9743, 25;
	shf.l.wrap.b32 	%r9749, %r9743, %r9742, 25;
	mov.b64 	%rd940, {%r9749, %r9748};
	xor.b64  	%rd941, %rd939, %rd940;
	and.b64  	%rd942, %rd923, %rd899;
	xor.b64  	%rd943, %rd923, %rd899;
	and.b64  	%rd944, %rd943, %rd667;
	or.b64  	%rd945, %rd944, %rd942;
	add.s64 	%rd946, %rd935, %rd945;
	add.s64 	%rd947, %rd946, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9750,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9751}, %rd936;
	}
	shf.r.wrap.b32 	%r9752, %r9751, %r9750, 14;
	shf.r.wrap.b32 	%r9753, %r9750, %r9751, 14;
	mov.b64 	%rd948, {%r9753, %r9752};
	shf.r.wrap.b32 	%r9754, %r9751, %r9750, 18;
	shf.r.wrap.b32 	%r9755, %r9750, %r9751, 18;
	mov.b64 	%rd949, {%r9755, %r9754};
	xor.b64  	%rd950, %rd949, %rd948;
	shf.l.wrap.b32 	%r9756, %r9750, %r9751, 23;
	shf.l.wrap.b32 	%r9757, %r9751, %r9750, 23;
	mov.b64 	%rd951, {%r9757, %r9756};
	xor.b64  	%rd952, %rd950, %rd951;
	xor.b64  	%rd953, %rd912, %rd888;
	and.b64  	%rd954, %rd936, %rd953;
	xor.b64  	%rd955, %rd954, %rd888;
	add.s64 	%rd956, %rd719, %rd656;
	add.s64 	%rd957, %rd956, %rd47;
	add.s64 	%rd958, %rd957, %rd955;
	add.s64 	%rd959, %rd958, %rd952;
	add.s64 	%rd960, %rd959, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9758,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9759}, %rd947;
	}
	shf.r.wrap.b32 	%r9760, %r9759, %r9758, 28;
	shf.r.wrap.b32 	%r9761, %r9758, %r9759, 28;
	mov.b64 	%rd961, {%r9761, %r9760};
	shf.l.wrap.b32 	%r9762, %r9758, %r9759, 30;
	shf.l.wrap.b32 	%r9763, %r9759, %r9758, 30;
	mov.b64 	%rd962, {%r9763, %r9762};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r9764, %r9758, %r9759, 25;
	shf.l.wrap.b32 	%r9765, %r9759, %r9758, 25;
	mov.b64 	%rd964, {%r9765, %r9764};
	xor.b64  	%rd965, %rd963, %rd964;
	and.b64  	%rd966, %rd947, %rd923;
	xor.b64  	%rd967, %rd947, %rd923;
	and.b64  	%rd968, %rd967, %rd899;
	or.b64  	%rd969, %rd968, %rd966;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9766,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9767}, %rd960;
	}
	shf.r.wrap.b32 	%r9768, %r9767, %r9766, 14;
	shf.r.wrap.b32 	%r9769, %r9766, %r9767, 14;
	mov.b64 	%rd972, {%r9769, %r9768};
	shf.r.wrap.b32 	%r9770, %r9767, %r9766, 18;
	shf.r.wrap.b32 	%r9771, %r9766, %r9767, 18;
	mov.b64 	%rd973, {%r9771, %r9770};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r9772, %r9766, %r9767, 23;
	shf.l.wrap.b32 	%r9773, %r9767, %r9766, 23;
	mov.b64 	%rd975, {%r9773, %r9772};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd936, %rd912;
	and.b64  	%rd978, %rd960, %rd977;
	xor.b64  	%rd979, %rd978, %rd912;
	add.s64 	%rd980, %rd888, %rd732;
	add.s64 	%rd981, %rd980, %rd48;
	add.s64 	%rd982, %rd981, %rd979;
	add.s64 	%rd983, %rd982, %rd976;
	add.s64 	%rd984, %rd983, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9774,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9775}, %rd971;
	}
	shf.r.wrap.b32 	%r9776, %r9775, %r9774, 28;
	shf.r.wrap.b32 	%r9777, %r9774, %r9775, 28;
	mov.b64 	%rd985, {%r9777, %r9776};
	shf.l.wrap.b32 	%r9778, %r9774, %r9775, 30;
	shf.l.wrap.b32 	%r9779, %r9775, %r9774, 30;
	mov.b64 	%rd986, {%r9779, %r9778};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r9780, %r9774, %r9775, 25;
	shf.l.wrap.b32 	%r9781, %r9775, %r9774, 25;
	mov.b64 	%rd988, {%r9781, %r9780};
	xor.b64  	%rd989, %rd987, %rd988;
	and.b64  	%rd990, %rd971, %rd947;
	xor.b64  	%rd991, %rd971, %rd947;
	and.b64  	%rd992, %rd991, %rd923;
	or.b64  	%rd993, %rd992, %rd990;
	add.s64 	%rd994, %rd983, %rd993;
	add.s64 	%rd995, %rd994, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9782,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9783}, %rd984;
	}
	shf.r.wrap.b32 	%r9784, %r9783, %r9782, 14;
	shf.r.wrap.b32 	%r9785, %r9782, %r9783, 14;
	mov.b64 	%rd996, {%r9785, %r9784};
	shf.r.wrap.b32 	%r9786, %r9783, %r9782, 18;
	shf.r.wrap.b32 	%r9787, %r9782, %r9783, 18;
	mov.b64 	%rd997, {%r9787, %r9786};
	xor.b64  	%rd998, %rd997, %rd996;
	shf.l.wrap.b32 	%r9788, %r9782, %r9783, 23;
	shf.l.wrap.b32 	%r9789, %r9783, %r9782, 23;
	mov.b64 	%rd999, {%r9789, %r9788};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd960, %rd936;
	and.b64  	%rd1002, %rd984, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd936;
	add.s64 	%rd1004, %rd912, %rd745;
	add.s64 	%rd1005, %rd1004, %rd49;
	add.s64 	%rd1006, %rd1005, %rd1003;
	add.s64 	%rd1007, %rd1006, %rd1000;
	add.s64 	%rd1008, %rd1007, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9790,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9791}, %rd995;
	}
	shf.r.wrap.b32 	%r9792, %r9791, %r9790, 28;
	shf.r.wrap.b32 	%r9793, %r9790, %r9791, 28;
	mov.b64 	%rd1009, {%r9793, %r9792};
	shf.l.wrap.b32 	%r9794, %r9790, %r9791, 30;
	shf.l.wrap.b32 	%r9795, %r9791, %r9790, 30;
	mov.b64 	%rd1010, {%r9795, %r9794};
	xor.b64  	%rd1011, %rd1010, %rd1009;
	shf.l.wrap.b32 	%r9796, %r9790, %r9791, 25;
	shf.l.wrap.b32 	%r9797, %r9791, %r9790, 25;
	mov.b64 	%rd1012, {%r9797, %r9796};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	and.b64  	%rd1014, %rd995, %rd971;
	xor.b64  	%rd1015, %rd995, %rd971;
	and.b64  	%rd1016, %rd1015, %rd947;
	or.b64  	%rd1017, %rd1016, %rd1014;
	add.s64 	%rd1018, %rd1007, %rd1017;
	add.s64 	%rd1019, %rd1018, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9798,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9799}, %rd1008;
	}
	shf.r.wrap.b32 	%r9800, %r9799, %r9798, 14;
	shf.r.wrap.b32 	%r9801, %r9798, %r9799, 14;
	mov.b64 	%rd1020, {%r9801, %r9800};
	shf.r.wrap.b32 	%r9802, %r9799, %r9798, 18;
	shf.r.wrap.b32 	%r9803, %r9798, %r9799, 18;
	mov.b64 	%rd1021, {%r9803, %r9802};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r9804, %r9798, %r9799, 23;
	shf.l.wrap.b32 	%r9805, %r9799, %r9798, 23;
	mov.b64 	%rd1023, {%r9805, %r9804};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd984, %rd960;
	and.b64  	%rd1026, %rd1008, %rd1025;
	xor.b64  	%rd1027, %rd1026, %rd960;
	add.s64 	%rd1028, %rd936, %rd758;
	add.s64 	%rd1029, %rd1028, %rd50;
	add.s64 	%rd1030, %rd1029, %rd1027;
	add.s64 	%rd1031, %rd1030, %rd1024;
	add.s64 	%rd1032, %rd1031, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9806,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9807}, %rd1019;
	}
	shf.r.wrap.b32 	%r9808, %r9807, %r9806, 28;
	shf.r.wrap.b32 	%r9809, %r9806, %r9807, 28;
	mov.b64 	%rd1033, {%r9809, %r9808};
	shf.l.wrap.b32 	%r9810, %r9806, %r9807, 30;
	shf.l.wrap.b32 	%r9811, %r9807, %r9806, 30;
	mov.b64 	%rd1034, {%r9811, %r9810};
	xor.b64  	%rd1035, %rd1034, %rd1033;
	shf.l.wrap.b32 	%r9812, %r9806, %r9807, 25;
	shf.l.wrap.b32 	%r9813, %r9807, %r9806, 25;
	mov.b64 	%rd1036, {%r9813, %r9812};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	and.b64  	%rd1038, %rd1019, %rd995;
	xor.b64  	%rd1039, %rd1019, %rd995;
	and.b64  	%rd1040, %rd1039, %rd971;
	or.b64  	%rd1041, %rd1040, %rd1038;
	add.s64 	%rd1042, %rd1031, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9814,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9815}, %rd1032;
	}
	shf.r.wrap.b32 	%r9816, %r9815, %r9814, 14;
	shf.r.wrap.b32 	%r9817, %r9814, %r9815, 14;
	mov.b64 	%rd1044, {%r9817, %r9816};
	shf.r.wrap.b32 	%r9818, %r9815, %r9814, 18;
	shf.r.wrap.b32 	%r9819, %r9814, %r9815, 18;
	mov.b64 	%rd1045, {%r9819, %r9818};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r9820, %r9814, %r9815, 23;
	shf.l.wrap.b32 	%r9821, %r9815, %r9814, 23;
	mov.b64 	%rd1047, {%r9821, %r9820};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1008, %rd984;
	and.b64  	%rd1050, %rd1032, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd984;
	add.s64 	%rd1052, %rd960, %rd771;
	add.s64 	%rd1053, %rd1052, %rd51;
	add.s64 	%rd1054, %rd1053, %rd1051;
	add.s64 	%rd1055, %rd1054, %rd1048;
	add.s64 	%rd1056, %rd1055, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9822,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd1043;
	}
	shf.r.wrap.b32 	%r9824, %r9823, %r9822, 28;
	shf.r.wrap.b32 	%r9825, %r9822, %r9823, 28;
	mov.b64 	%rd1057, {%r9825, %r9824};
	shf.l.wrap.b32 	%r9826, %r9822, %r9823, 30;
	shf.l.wrap.b32 	%r9827, %r9823, %r9822, 30;
	mov.b64 	%rd1058, {%r9827, %r9826};
	xor.b64  	%rd1059, %rd1058, %rd1057;
	shf.l.wrap.b32 	%r9828, %r9822, %r9823, 25;
	shf.l.wrap.b32 	%r9829, %r9823, %r9822, 25;
	mov.b64 	%rd1060, {%r9829, %r9828};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	and.b64  	%rd1062, %rd1043, %rd1019;
	xor.b64  	%rd1063, %rd1043, %rd1019;
	and.b64  	%rd1064, %rd1063, %rd995;
	or.b64  	%rd1065, %rd1064, %rd1062;
	add.s64 	%rd1066, %rd1055, %rd1065;
	add.s64 	%rd1067, %rd1066, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9830,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9831}, %rd1056;
	}
	shf.r.wrap.b32 	%r9832, %r9831, %r9830, 14;
	shf.r.wrap.b32 	%r9833, %r9830, %r9831, 14;
	mov.b64 	%rd1068, {%r9833, %r9832};
	shf.r.wrap.b32 	%r9834, %r9831, %r9830, 18;
	shf.r.wrap.b32 	%r9835, %r9830, %r9831, 18;
	mov.b64 	%rd1069, {%r9835, %r9834};
	xor.b64  	%rd1070, %rd1069, %rd1068;
	shf.l.wrap.b32 	%r9836, %r9830, %r9831, 23;
	shf.l.wrap.b32 	%r9837, %r9831, %r9830, 23;
	mov.b64 	%rd1071, {%r9837, %r9836};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	xor.b64  	%rd1073, %rd1032, %rd1008;
	and.b64  	%rd1074, %rd1056, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1008;
	add.s64 	%rd1076, %rd984, %rd784;
	add.s64 	%rd1077, %rd1076, %rd52;
	add.s64 	%rd1078, %rd1077, %rd1075;
	add.s64 	%rd1079, %rd1078, %rd1072;
	add.s64 	%rd1080, %rd1079, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9838,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9839}, %rd1067;
	}
	shf.r.wrap.b32 	%r9840, %r9839, %r9838, 28;
	shf.r.wrap.b32 	%r9841, %r9838, %r9839, 28;
	mov.b64 	%rd1081, {%r9841, %r9840};
	shf.l.wrap.b32 	%r9842, %r9838, %r9839, 30;
	shf.l.wrap.b32 	%r9843, %r9839, %r9838, 30;
	mov.b64 	%rd1082, {%r9843, %r9842};
	xor.b64  	%rd1083, %rd1082, %rd1081;
	shf.l.wrap.b32 	%r9844, %r9838, %r9839, 25;
	shf.l.wrap.b32 	%r9845, %r9839, %r9838, 25;
	mov.b64 	%rd1084, {%r9845, %r9844};
	xor.b64  	%rd1085, %rd1083, %rd1084;
	and.b64  	%rd1086, %rd1067, %rd1043;
	xor.b64  	%rd1087, %rd1067, %rd1043;
	and.b64  	%rd1088, %rd1087, %rd1019;
	or.b64  	%rd1089, %rd1088, %rd1086;
	add.s64 	%rd1090, %rd1079, %rd1089;
	add.s64 	%rd1091, %rd1090, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9846,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9847}, %rd1080;
	}
	shf.r.wrap.b32 	%r9848, %r9847, %r9846, 14;
	shf.r.wrap.b32 	%r9849, %r9846, %r9847, 14;
	mov.b64 	%rd1092, {%r9849, %r9848};
	shf.r.wrap.b32 	%r9850, %r9847, %r9846, 18;
	shf.r.wrap.b32 	%r9851, %r9846, %r9847, 18;
	mov.b64 	%rd1093, {%r9851, %r9850};
	xor.b64  	%rd1094, %rd1093, %rd1092;
	shf.l.wrap.b32 	%r9852, %r9846, %r9847, 23;
	shf.l.wrap.b32 	%r9853, %r9847, %r9846, 23;
	mov.b64 	%rd1095, {%r9853, %r9852};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	xor.b64  	%rd1097, %rd1056, %rd1032;
	and.b64  	%rd1098, %rd1080, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1032;
	add.s64 	%rd1100, %rd1008, %rd797;
	add.s64 	%rd1101, %rd1100, %rd53;
	add.s64 	%rd1102, %rd1101, %rd1099;
	add.s64 	%rd1103, %rd1102, %rd1096;
	add.s64 	%rd1104, %rd1103, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9854,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9855}, %rd1091;
	}
	shf.r.wrap.b32 	%r9856, %r9855, %r9854, 28;
	shf.r.wrap.b32 	%r9857, %r9854, %r9855, 28;
	mov.b64 	%rd1105, {%r9857, %r9856};
	shf.l.wrap.b32 	%r9858, %r9854, %r9855, 30;
	shf.l.wrap.b32 	%r9859, %r9855, %r9854, 30;
	mov.b64 	%rd1106, {%r9859, %r9858};
	xor.b64  	%rd1107, %rd1106, %rd1105;
	shf.l.wrap.b32 	%r9860, %r9854, %r9855, 25;
	shf.l.wrap.b32 	%r9861, %r9855, %r9854, 25;
	mov.b64 	%rd1108, {%r9861, %r9860};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	and.b64  	%rd1110, %rd1091, %rd1067;
	xor.b64  	%rd1111, %rd1091, %rd1067;
	and.b64  	%rd1112, %rd1111, %rd1043;
	or.b64  	%rd1113, %rd1112, %rd1110;
	add.s64 	%rd1114, %rd1103, %rd1113;
	add.s64 	%rd1115, %rd1114, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9862,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9863}, %rd1104;
	}
	shf.r.wrap.b32 	%r9864, %r9863, %r9862, 14;
	shf.r.wrap.b32 	%r9865, %r9862, %r9863, 14;
	mov.b64 	%rd1116, {%r9865, %r9864};
	shf.r.wrap.b32 	%r9866, %r9863, %r9862, 18;
	shf.r.wrap.b32 	%r9867, %r9862, %r9863, 18;
	mov.b64 	%rd1117, {%r9867, %r9866};
	xor.b64  	%rd1118, %rd1117, %rd1116;
	shf.l.wrap.b32 	%r9868, %r9862, %r9863, 23;
	shf.l.wrap.b32 	%r9869, %r9863, %r9862, 23;
	mov.b64 	%rd1119, {%r9869, %r9868};
	xor.b64  	%rd1120, %rd1118, %rd1119;
	xor.b64  	%rd1121, %rd1080, %rd1056;
	and.b64  	%rd1122, %rd1104, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1056;
	add.s64 	%rd1124, %rd1032, %rd810;
	add.s64 	%rd1125, %rd1124, %rd54;
	add.s64 	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd1126, %rd1120;
	add.s64 	%rd1128, %rd1127, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9870,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd1115;
	}
	shf.r.wrap.b32 	%r9872, %r9871, %r9870, 28;
	shf.r.wrap.b32 	%r9873, %r9870, %r9871, 28;
	mov.b64 	%rd1129, {%r9873, %r9872};
	shf.l.wrap.b32 	%r9874, %r9870, %r9871, 30;
	shf.l.wrap.b32 	%r9875, %r9871, %r9870, 30;
	mov.b64 	%rd1130, {%r9875, %r9874};
	xor.b64  	%rd1131, %rd1130, %rd1129;
	shf.l.wrap.b32 	%r9876, %r9870, %r9871, 25;
	shf.l.wrap.b32 	%r9877, %r9871, %r9870, 25;
	mov.b64 	%rd1132, {%r9877, %r9876};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	and.b64  	%rd1134, %rd1115, %rd1091;
	xor.b64  	%rd1135, %rd1115, %rd1091;
	and.b64  	%rd1136, %rd1135, %rd1067;
	or.b64  	%rd1137, %rd1136, %rd1134;
	add.s64 	%rd1138, %rd1127, %rd1137;
	add.s64 	%rd1139, %rd1138, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9878,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9879}, %rd1128;
	}
	shf.r.wrap.b32 	%r9880, %r9879, %r9878, 14;
	shf.r.wrap.b32 	%r9881, %r9878, %r9879, 14;
	mov.b64 	%rd1140, {%r9881, %r9880};
	shf.r.wrap.b32 	%r9882, %r9879, %r9878, 18;
	shf.r.wrap.b32 	%r9883, %r9878, %r9879, 18;
	mov.b64 	%rd1141, {%r9883, %r9882};
	xor.b64  	%rd1142, %rd1141, %rd1140;
	shf.l.wrap.b32 	%r9884, %r9878, %r9879, 23;
	shf.l.wrap.b32 	%r9885, %r9879, %r9878, 23;
	mov.b64 	%rd1143, {%r9885, %r9884};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	xor.b64  	%rd1145, %rd1104, %rd1080;
	and.b64  	%rd1146, %rd1128, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1080;
	add.s64 	%rd1148, %rd1056, %rd823;
	add.s64 	%rd1149, %rd1148, %rd55;
	add.s64 	%rd1150, %rd1149, %rd1147;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9886,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9887}, %rd1139;
	}
	shf.r.wrap.b32 	%r9888, %r9887, %r9886, 28;
	shf.r.wrap.b32 	%r9889, %r9886, %r9887, 28;
	mov.b64 	%rd1153, {%r9889, %r9888};
	shf.l.wrap.b32 	%r9890, %r9886, %r9887, 30;
	shf.l.wrap.b32 	%r9891, %r9887, %r9886, 30;
	mov.b64 	%rd1154, {%r9891, %r9890};
	xor.b64  	%rd1155, %rd1154, %rd1153;
	shf.l.wrap.b32 	%r9892, %r9886, %r9887, 25;
	shf.l.wrap.b32 	%r9893, %r9887, %r9886, 25;
	mov.b64 	%rd1156, {%r9893, %r9892};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	and.b64  	%rd1158, %rd1139, %rd1115;
	xor.b64  	%rd1159, %rd1139, %rd1115;
	and.b64  	%rd1160, %rd1159, %rd1091;
	or.b64  	%rd1161, %rd1160, %rd1158;
	add.s64 	%rd1162, %rd1151, %rd1161;
	add.s64 	%rd1163, %rd1162, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9894,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd1152;
	}
	shf.r.wrap.b32 	%r9896, %r9895, %r9894, 14;
	shf.r.wrap.b32 	%r9897, %r9894, %r9895, 14;
	mov.b64 	%rd1164, {%r9897, %r9896};
	shf.r.wrap.b32 	%r9898, %r9895, %r9894, 18;
	shf.r.wrap.b32 	%r9899, %r9894, %r9895, 18;
	mov.b64 	%rd1165, {%r9899, %r9898};
	xor.b64  	%rd1166, %rd1165, %rd1164;
	shf.l.wrap.b32 	%r9900, %r9894, %r9895, 23;
	shf.l.wrap.b32 	%r9901, %r9895, %r9894, 23;
	mov.b64 	%rd1167, {%r9901, %r9900};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	xor.b64  	%rd1169, %rd1128, %rd1104;
	and.b64  	%rd1170, %rd1152, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1104;
	add.s64 	%rd1172, %rd1080, %rd836;
	add.s64 	%rd1173, %rd1172, %rd56;
	add.s64 	%rd1174, %rd1173, %rd1171;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9902,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9903}, %rd1163;
	}
	shf.r.wrap.b32 	%r9904, %r9903, %r9902, 28;
	shf.r.wrap.b32 	%r9905, %r9902, %r9903, 28;
	mov.b64 	%rd1177, {%r9905, %r9904};
	shf.l.wrap.b32 	%r9906, %r9902, %r9903, 30;
	shf.l.wrap.b32 	%r9907, %r9903, %r9902, 30;
	mov.b64 	%rd1178, {%r9907, %r9906};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	shf.l.wrap.b32 	%r9908, %r9902, %r9903, 25;
	shf.l.wrap.b32 	%r9909, %r9903, %r9902, 25;
	mov.b64 	%rd1180, {%r9909, %r9908};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	and.b64  	%rd1182, %rd1163, %rd1139;
	xor.b64  	%rd1183, %rd1163, %rd1139;
	and.b64  	%rd1184, %rd1183, %rd1115;
	or.b64  	%rd1185, %rd1184, %rd1182;
	add.s64 	%rd1186, %rd1175, %rd1185;
	add.s64 	%rd1187, %rd1186, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9910,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9911}, %rd1176;
	}
	shf.r.wrap.b32 	%r9912, %r9911, %r9910, 14;
	shf.r.wrap.b32 	%r9913, %r9910, %r9911, 14;
	mov.b64 	%rd1188, {%r9913, %r9912};
	shf.r.wrap.b32 	%r9914, %r9911, %r9910, 18;
	shf.r.wrap.b32 	%r9915, %r9910, %r9911, 18;
	mov.b64 	%rd1189, {%r9915, %r9914};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r9916, %r9910, %r9911, 23;
	shf.l.wrap.b32 	%r9917, %r9911, %r9910, 23;
	mov.b64 	%rd1191, {%r9917, %r9916};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd1152, %rd1128;
	and.b64  	%rd1194, %rd1176, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1128;
	add.s64 	%rd1196, %rd1104, %rd849;
	add.s64 	%rd1197, %rd1196, %rd57;
	add.s64 	%rd1198, %rd1197, %rd1195;
	add.s64 	%rd1199, %rd1198, %rd1192;
	add.s64 	%rd1200, %rd1199, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9918,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9919}, %rd1187;
	}
	shf.r.wrap.b32 	%r9920, %r9919, %r9918, 28;
	shf.r.wrap.b32 	%r9921, %r9918, %r9919, 28;
	mov.b64 	%rd1201, {%r9921, %r9920};
	shf.l.wrap.b32 	%r9922, %r9918, %r9919, 30;
	shf.l.wrap.b32 	%r9923, %r9919, %r9918, 30;
	mov.b64 	%rd1202, {%r9923, %r9922};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r9924, %r9918, %r9919, 25;
	shf.l.wrap.b32 	%r9925, %r9919, %r9918, 25;
	mov.b64 	%rd1204, {%r9925, %r9924};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	and.b64  	%rd1206, %rd1187, %rd1163;
	xor.b64  	%rd1207, %rd1187, %rd1163;
	and.b64  	%rd1208, %rd1207, %rd1139;
	or.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd1199, %rd1209;
	add.s64 	%rd1211, %rd1210, %rd1205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9926,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9927}, %rd1200;
	}
	shf.r.wrap.b32 	%r9928, %r9927, %r9926, 14;
	shf.r.wrap.b32 	%r9929, %r9926, %r9927, 14;
	mov.b64 	%rd1212, {%r9929, %r9928};
	shf.r.wrap.b32 	%r9930, %r9927, %r9926, 18;
	shf.r.wrap.b32 	%r9931, %r9926, %r9927, 18;
	mov.b64 	%rd1213, {%r9931, %r9930};
	xor.b64  	%rd1214, %rd1213, %rd1212;
	shf.l.wrap.b32 	%r9932, %r9926, %r9927, 23;
	shf.l.wrap.b32 	%r9933, %r9927, %r9926, 23;
	mov.b64 	%rd1215, {%r9933, %r9932};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	xor.b64  	%rd1217, %rd1176, %rd1152;
	and.b64  	%rd1218, %rd1200, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1152;
	add.s64 	%rd1220, %rd1128, %rd862;
	add.s64 	%rd1221, %rd1220, %rd58;
	add.s64 	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1222, %rd1216;
	add.s64 	%rd1224, %rd1223, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9934,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9935}, %rd1211;
	}
	shf.r.wrap.b32 	%r9936, %r9935, %r9934, 28;
	shf.r.wrap.b32 	%r9937, %r9934, %r9935, 28;
	mov.b64 	%rd1225, {%r9937, %r9936};
	shf.l.wrap.b32 	%r9938, %r9934, %r9935, 30;
	shf.l.wrap.b32 	%r9939, %r9935, %r9934, 30;
	mov.b64 	%rd1226, {%r9939, %r9938};
	xor.b64  	%rd1227, %rd1226, %rd1225;
	shf.l.wrap.b32 	%r9940, %r9934, %r9935, 25;
	shf.l.wrap.b32 	%r9941, %r9935, %r9934, 25;
	mov.b64 	%rd1228, {%r9941, %r9940};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	and.b64  	%rd1230, %rd1211, %rd1187;
	xor.b64  	%rd1231, %rd1211, %rd1187;
	and.b64  	%rd1232, %rd1231, %rd1163;
	or.b64  	%rd1233, %rd1232, %rd1230;
	add.s64 	%rd1234, %rd1223, %rd1233;
	add.s64 	%rd1235, %rd1234, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9942,%dummy}, %rd1224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd1224;
	}
	shf.r.wrap.b32 	%r9944, %r9943, %r9942, 14;
	shf.r.wrap.b32 	%r9945, %r9942, %r9943, 14;
	mov.b64 	%rd1236, {%r9945, %r9944};
	shf.r.wrap.b32 	%r9946, %r9943, %r9942, 18;
	shf.r.wrap.b32 	%r9947, %r9942, %r9943, 18;
	mov.b64 	%rd1237, {%r9947, %r9946};
	xor.b64  	%rd1238, %rd1237, %rd1236;
	shf.l.wrap.b32 	%r9948, %r9942, %r9943, 23;
	shf.l.wrap.b32 	%r9949, %r9943, %r9942, 23;
	mov.b64 	%rd1239, {%r9949, %r9948};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	xor.b64  	%rd1241, %rd1200, %rd1176;
	and.b64  	%rd1242, %rd1224, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1176;
	add.s64 	%rd1244, %rd1152, %rd875;
	add.s64 	%rd1245, %rd1244, %rd59;
	add.s64 	%rd1246, %rd1245, %rd1243;
	add.s64 	%rd1247, %rd1246, %rd1240;
	add.s64 	%rd1248, %rd1247, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9950,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9951}, %rd1235;
	}
	shf.r.wrap.b32 	%r9952, %r9951, %r9950, 28;
	shf.r.wrap.b32 	%r9953, %r9950, %r9951, 28;
	mov.b64 	%rd1249, {%r9953, %r9952};
	shf.l.wrap.b32 	%r9954, %r9950, %r9951, 30;
	shf.l.wrap.b32 	%r9955, %r9951, %r9950, 30;
	mov.b64 	%rd1250, {%r9955, %r9954};
	xor.b64  	%rd1251, %rd1250, %rd1249;
	shf.l.wrap.b32 	%r9956, %r9950, %r9951, 25;
	shf.l.wrap.b32 	%r9957, %r9951, %r9950, 25;
	mov.b64 	%rd1252, {%r9957, %r9956};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	and.b64  	%rd1254, %rd1235, %rd1211;
	xor.b64  	%rd1255, %rd1235, %rd1211;
	and.b64  	%rd1256, %rd1255, %rd1187;
	or.b64  	%rd1257, %rd1256, %rd1254;
	add.s64 	%rd1258, %rd1247, %rd1257;
	add.s64 	%rd1259, %rd1258, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9958,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd862;
	}
	shf.r.wrap.b32 	%r9960, %r9959, %r9958, 19;
	shf.r.wrap.b32 	%r9961, %r9958, %r9959, 19;
	mov.b64 	%rd1260, {%r9961, %r9960};
	shf.l.wrap.b32 	%r9962, %r9958, %r9959, 3;
	shf.l.wrap.b32 	%r9963, %r9959, %r9958, 3;
	mov.b64 	%rd1261, {%r9963, %r9962};
	shr.u64 	%rd1262, %rd862, 6;
	xor.b64  	%rd1263, %rd1260, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1261;
	shf.r.wrap.b32 	%r9964, %r9553, %r9552, 1;
	shf.r.wrap.b32 	%r9965, %r9552, %r9553, 1;
	mov.b64 	%rd1265, {%r9965, %r9964};
	shf.r.wrap.b32 	%r9966, %r9553, %r9552, 8;
	shf.r.wrap.b32 	%r9967, %r9552, %r9553, 8;
	mov.b64 	%rd1266, {%r9967, %r9966};
	shr.u64 	%rd1267, %rd693, 7;
	xor.b64  	%rd1268, %rd1265, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1266;
	add.s64 	%rd1270, %rd797, %rd680;
	add.s64 	%rd1271, %rd1270, %rd1264;
	add.s64 	%rd1272, %rd1271, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9968,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9969}, %rd875;
	}
	shf.r.wrap.b32 	%r9970, %r9969, %r9968, 19;
	shf.r.wrap.b32 	%r9971, %r9968, %r9969, 19;
	mov.b64 	%rd1273, {%r9971, %r9970};
	shf.l.wrap.b32 	%r9972, %r9968, %r9969, 3;
	shf.l.wrap.b32 	%r9973, %r9969, %r9968, 3;
	mov.b64 	%rd1274, {%r9973, %r9972};
	shr.u64 	%rd1275, %rd875, 6;
	xor.b64  	%rd1276, %rd1273, %rd1275;
	xor.b64  	%rd1277, %rd1276, %rd1274;
	shf.r.wrap.b32 	%r9974, %r9565, %r9564, 1;
	shf.r.wrap.b32 	%r9975, %r9564, %r9565, 1;
	mov.b64 	%rd1278, {%r9975, %r9974};
	shf.r.wrap.b32 	%r9976, %r9565, %r9564, 8;
	shf.r.wrap.b32 	%r9977, %r9564, %r9565, 8;
	mov.b64 	%rd1279, {%r9977, %r9976};
	shr.u64 	%rd1280, %rd706, 7;
	xor.b64  	%rd1281, %rd1278, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1279;
	add.s64 	%rd1283, %rd810, %rd693;
	add.s64 	%rd1284, %rd1283, %rd1277;
	add.s64 	%rd1285, %rd1284, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9978,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd1272;
	}
	shf.r.wrap.b32 	%r9980, %r9979, %r9978, 19;
	shf.r.wrap.b32 	%r9981, %r9978, %r9979, 19;
	mov.b64 	%rd1286, {%r9981, %r9980};
	shf.l.wrap.b32 	%r9982, %r9978, %r9979, 3;
	shf.l.wrap.b32 	%r9983, %r9979, %r9978, 3;
	mov.b64 	%rd1287, {%r9983, %r9982};
	shr.u64 	%rd1288, %rd1272, 6;
	xor.b64  	%rd1289, %rd1286, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1287;
	shf.r.wrap.b32 	%r9984, %r9577, %r9576, 1;
	shf.r.wrap.b32 	%r9985, %r9576, %r9577, 1;
	mov.b64 	%rd1291, {%r9985, %r9984};
	shf.r.wrap.b32 	%r9986, %r9577, %r9576, 8;
	shf.r.wrap.b32 	%r9987, %r9576, %r9577, 8;
	mov.b64 	%rd1292, {%r9987, %r9986};
	shr.u64 	%rd1293, %rd719, 7;
	xor.b64  	%rd1294, %rd1291, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1292;
	add.s64 	%rd1296, %rd823, %rd706;
	add.s64 	%rd1297, %rd1296, %rd1290;
	add.s64 	%rd1298, %rd1297, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9989}, %rd1285;
	}
	shf.r.wrap.b32 	%r9990, %r9989, %r9988, 19;
	shf.r.wrap.b32 	%r9991, %r9988, %r9989, 19;
	mov.b64 	%rd1299, {%r9991, %r9990};
	shf.l.wrap.b32 	%r9992, %r9988, %r9989, 3;
	shf.l.wrap.b32 	%r9993, %r9989, %r9988, 3;
	mov.b64 	%rd1300, {%r9993, %r9992};
	shr.u64 	%rd1301, %rd1285, 6;
	xor.b64  	%rd1302, %rd1299, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1300;
	shf.r.wrap.b32 	%r9994, %r9589, %r9588, 1;
	shf.r.wrap.b32 	%r9995, %r9588, %r9589, 1;
	mov.b64 	%rd1304, {%r9995, %r9994};
	shf.r.wrap.b32 	%r9996, %r9589, %r9588, 8;
	shf.r.wrap.b32 	%r9997, %r9588, %r9589, 8;
	mov.b64 	%rd1305, {%r9997, %r9996};
	shr.u64 	%rd1306, %rd732, 7;
	xor.b64  	%rd1307, %rd1304, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1305;
	add.s64 	%rd1309, %rd836, %rd719;
	add.s64 	%rd1310, %rd1309, %rd1303;
	add.s64 	%rd1311, %rd1310, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9998,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9999}, %rd1298;
	}
	shf.r.wrap.b32 	%r10000, %r9999, %r9998, 19;
	shf.r.wrap.b32 	%r10001, %r9998, %r9999, 19;
	mov.b64 	%rd1312, {%r10001, %r10000};
	shf.l.wrap.b32 	%r10002, %r9998, %r9999, 3;
	shf.l.wrap.b32 	%r10003, %r9999, %r9998, 3;
	mov.b64 	%rd1313, {%r10003, %r10002};
	shr.u64 	%rd1314, %rd1298, 6;
	xor.b64  	%rd1315, %rd1312, %rd1314;
	xor.b64  	%rd1316, %rd1315, %rd1313;
	shf.r.wrap.b32 	%r10004, %r9601, %r9600, 1;
	shf.r.wrap.b32 	%r10005, %r9600, %r9601, 1;
	mov.b64 	%rd1317, {%r10005, %r10004};
	shf.r.wrap.b32 	%r10006, %r9601, %r9600, 8;
	shf.r.wrap.b32 	%r10007, %r9600, %r9601, 8;
	mov.b64 	%rd1318, {%r10007, %r10006};
	shr.u64 	%rd1319, %rd745, 7;
	xor.b64  	%rd1320, %rd1317, %rd1319;
	xor.b64  	%rd1321, %rd1320, %rd1318;
	add.s64 	%rd1322, %rd849, %rd732;
	add.s64 	%rd1323, %rd1322, %rd1316;
	add.s64 	%rd1324, %rd1323, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10009}, %rd1311;
	}
	shf.r.wrap.b32 	%r10010, %r10009, %r10008, 19;
	shf.r.wrap.b32 	%r10011, %r10008, %r10009, 19;
	mov.b64 	%rd1325, {%r10011, %r10010};
	shf.l.wrap.b32 	%r10012, %r10008, %r10009, 3;
	shf.l.wrap.b32 	%r10013, %r10009, %r10008, 3;
	mov.b64 	%rd1326, {%r10013, %r10012};
	shr.u64 	%rd1327, %rd1311, 6;
	xor.b64  	%rd1328, %rd1325, %rd1327;
	xor.b64  	%rd1329, %rd1328, %rd1326;
	shf.r.wrap.b32 	%r10014, %r9613, %r9612, 1;
	shf.r.wrap.b32 	%r10015, %r9612, %r9613, 1;
	mov.b64 	%rd1330, {%r10015, %r10014};
	shf.r.wrap.b32 	%r10016, %r9613, %r9612, 8;
	shf.r.wrap.b32 	%r10017, %r9612, %r9613, 8;
	mov.b64 	%rd1331, {%r10017, %r10016};
	shr.u64 	%rd1332, %rd758, 7;
	xor.b64  	%rd1333, %rd1330, %rd1332;
	xor.b64  	%rd1334, %rd1333, %rd1331;
	add.s64 	%rd1335, %rd862, %rd745;
	add.s64 	%rd1336, %rd1335, %rd1329;
	add.s64 	%rd1337, %rd1336, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10018,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10019}, %rd1324;
	}
	shf.r.wrap.b32 	%r10020, %r10019, %r10018, 19;
	shf.r.wrap.b32 	%r10021, %r10018, %r10019, 19;
	mov.b64 	%rd1338, {%r10021, %r10020};
	shf.l.wrap.b32 	%r10022, %r10018, %r10019, 3;
	shf.l.wrap.b32 	%r10023, %r10019, %r10018, 3;
	mov.b64 	%rd1339, {%r10023, %r10022};
	shr.u64 	%rd1340, %rd1324, 6;
	xor.b64  	%rd1341, %rd1338, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1339;
	shf.r.wrap.b32 	%r10024, %r9625, %r9624, 1;
	shf.r.wrap.b32 	%r10025, %r9624, %r9625, 1;
	mov.b64 	%rd1343, {%r10025, %r10024};
	shf.r.wrap.b32 	%r10026, %r9625, %r9624, 8;
	shf.r.wrap.b32 	%r10027, %r9624, %r9625, 8;
	mov.b64 	%rd1344, {%r10027, %r10026};
	shr.u64 	%rd1345, %rd771, 7;
	xor.b64  	%rd1346, %rd1343, %rd1345;
	xor.b64  	%rd1347, %rd1346, %rd1344;
	add.s64 	%rd1348, %rd875, %rd758;
	add.s64 	%rd1349, %rd1348, %rd1342;
	add.s64 	%rd1350, %rd1349, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10028,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10029}, %rd1337;
	}
	shf.r.wrap.b32 	%r10030, %r10029, %r10028, 19;
	shf.r.wrap.b32 	%r10031, %r10028, %r10029, 19;
	mov.b64 	%rd1351, {%r10031, %r10030};
	shf.l.wrap.b32 	%r10032, %r10028, %r10029, 3;
	shf.l.wrap.b32 	%r10033, %r10029, %r10028, 3;
	mov.b64 	%rd1352, {%r10033, %r10032};
	shr.u64 	%rd1353, %rd1337, 6;
	xor.b64  	%rd1354, %rd1351, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1352;
	shf.r.wrap.b32 	%r10034, %r9637, %r9636, 1;
	shf.r.wrap.b32 	%r10035, %r9636, %r9637, 1;
	mov.b64 	%rd1356, {%r10035, %r10034};
	shf.r.wrap.b32 	%r10036, %r9637, %r9636, 8;
	shf.r.wrap.b32 	%r10037, %r9636, %r9637, 8;
	mov.b64 	%rd1357, {%r10037, %r10036};
	shr.u64 	%rd1358, %rd784, 7;
	xor.b64  	%rd1359, %rd1356, %rd1358;
	xor.b64  	%rd1360, %rd1359, %rd1357;
	add.s64 	%rd1361, %rd1272, %rd771;
	add.s64 	%rd1362, %rd1361, %rd1355;
	add.s64 	%rd1363, %rd1362, %rd1360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10038,%dummy}, %rd1350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10039}, %rd1350;
	}
	shf.r.wrap.b32 	%r10040, %r10039, %r10038, 19;
	shf.r.wrap.b32 	%r10041, %r10038, %r10039, 19;
	mov.b64 	%rd1364, {%r10041, %r10040};
	shf.l.wrap.b32 	%r10042, %r10038, %r10039, 3;
	shf.l.wrap.b32 	%r10043, %r10039, %r10038, 3;
	mov.b64 	%rd1365, {%r10043, %r10042};
	shr.u64 	%rd1366, %rd1350, 6;
	xor.b64  	%rd1367, %rd1364, %rd1366;
	xor.b64  	%rd1368, %rd1367, %rd1365;
	shf.r.wrap.b32 	%r10044, %r9649, %r9648, 1;
	shf.r.wrap.b32 	%r10045, %r9648, %r9649, 1;
	mov.b64 	%rd1369, {%r10045, %r10044};
	shf.r.wrap.b32 	%r10046, %r9649, %r9648, 8;
	shf.r.wrap.b32 	%r10047, %r9648, %r9649, 8;
	mov.b64 	%rd1370, {%r10047, %r10046};
	shr.u64 	%rd1371, %rd797, 7;
	xor.b64  	%rd1372, %rd1369, %rd1371;
	xor.b64  	%rd1373, %rd1372, %rd1370;
	add.s64 	%rd1374, %rd1285, %rd784;
	add.s64 	%rd1375, %rd1374, %rd1368;
	add.s64 	%rd1376, %rd1375, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10048,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10049}, %rd1363;
	}
	shf.r.wrap.b32 	%r10050, %r10049, %r10048, 19;
	shf.r.wrap.b32 	%r10051, %r10048, %r10049, 19;
	mov.b64 	%rd1377, {%r10051, %r10050};
	shf.l.wrap.b32 	%r10052, %r10048, %r10049, 3;
	shf.l.wrap.b32 	%r10053, %r10049, %r10048, 3;
	mov.b64 	%rd1378, {%r10053, %r10052};
	shr.u64 	%rd1379, %rd1363, 6;
	xor.b64  	%rd1380, %rd1377, %rd1379;
	xor.b64  	%rd1381, %rd1380, %rd1378;
	shf.r.wrap.b32 	%r10054, %r9661, %r9660, 1;
	shf.r.wrap.b32 	%r10055, %r9660, %r9661, 1;
	mov.b64 	%rd1382, {%r10055, %r10054};
	shf.r.wrap.b32 	%r10056, %r9661, %r9660, 8;
	shf.r.wrap.b32 	%r10057, %r9660, %r9661, 8;
	mov.b64 	%rd1383, {%r10057, %r10056};
	shr.u64 	%rd1384, %rd810, 7;
	xor.b64  	%rd1385, %rd1382, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1298, %rd797;
	add.s64 	%rd1388, %rd1387, %rd1381;
	add.s64 	%rd1389, %rd1388, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10058,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10059}, %rd1376;
	}
	shf.r.wrap.b32 	%r10060, %r10059, %r10058, 19;
	shf.r.wrap.b32 	%r10061, %r10058, %r10059, 19;
	mov.b64 	%rd1390, {%r10061, %r10060};
	shf.l.wrap.b32 	%r10062, %r10058, %r10059, 3;
	shf.l.wrap.b32 	%r10063, %r10059, %r10058, 3;
	mov.b64 	%rd1391, {%r10063, %r10062};
	shr.u64 	%rd1392, %rd1376, 6;
	xor.b64  	%rd1393, %rd1390, %rd1392;
	xor.b64  	%rd1394, %rd1393, %rd1391;
	shf.r.wrap.b32 	%r10064, %r9673, %r9672, 1;
	shf.r.wrap.b32 	%r10065, %r9672, %r9673, 1;
	mov.b64 	%rd1395, {%r10065, %r10064};
	shf.r.wrap.b32 	%r10066, %r9673, %r9672, 8;
	shf.r.wrap.b32 	%r10067, %r9672, %r9673, 8;
	mov.b64 	%rd1396, {%r10067, %r10066};
	shr.u64 	%rd1397, %rd823, 7;
	xor.b64  	%rd1398, %rd1395, %rd1397;
	xor.b64  	%rd1399, %rd1398, %rd1396;
	add.s64 	%rd1400, %rd1311, %rd810;
	add.s64 	%rd1401, %rd1400, %rd1394;
	add.s64 	%rd1402, %rd1401, %rd1399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10068,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10069}, %rd1389;
	}
	shf.r.wrap.b32 	%r10070, %r10069, %r10068, 19;
	shf.r.wrap.b32 	%r10071, %r10068, %r10069, 19;
	mov.b64 	%rd1403, {%r10071, %r10070};
	shf.l.wrap.b32 	%r10072, %r10068, %r10069, 3;
	shf.l.wrap.b32 	%r10073, %r10069, %r10068, 3;
	mov.b64 	%rd1404, {%r10073, %r10072};
	shr.u64 	%rd1405, %rd1389, 6;
	xor.b64  	%rd1406, %rd1403, %rd1405;
	xor.b64  	%rd1407, %rd1406, %rd1404;
	shf.r.wrap.b32 	%r10074, %r9683, %r9682, 1;
	shf.r.wrap.b32 	%r10075, %r9682, %r9683, 1;
	mov.b64 	%rd1408, {%r10075, %r10074};
	shf.r.wrap.b32 	%r10076, %r9683, %r9682, 8;
	shf.r.wrap.b32 	%r10077, %r9682, %r9683, 8;
	mov.b64 	%rd1409, {%r10077, %r10076};
	shr.u64 	%rd1410, %rd836, 7;
	xor.b64  	%rd1411, %rd1408, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1409;
	add.s64 	%rd1413, %rd1324, %rd823;
	add.s64 	%rd1414, %rd1413, %rd1407;
	add.s64 	%rd1415, %rd1414, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10078,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10079}, %rd1402;
	}
	shf.r.wrap.b32 	%r10080, %r10079, %r10078, 19;
	shf.r.wrap.b32 	%r10081, %r10078, %r10079, 19;
	mov.b64 	%rd1416, {%r10081, %r10080};
	shf.l.wrap.b32 	%r10082, %r10078, %r10079, 3;
	shf.l.wrap.b32 	%r10083, %r10079, %r10078, 3;
	mov.b64 	%rd1417, {%r10083, %r10082};
	shr.u64 	%rd1418, %rd1402, 6;
	xor.b64  	%rd1419, %rd1416, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1417;
	shf.r.wrap.b32 	%r10084, %r9693, %r9692, 1;
	shf.r.wrap.b32 	%r10085, %r9692, %r9693, 1;
	mov.b64 	%rd1421, {%r10085, %r10084};
	shf.r.wrap.b32 	%r10086, %r9693, %r9692, 8;
	shf.r.wrap.b32 	%r10087, %r9692, %r9693, 8;
	mov.b64 	%rd1422, {%r10087, %r10086};
	shr.u64 	%rd1423, %rd849, 7;
	xor.b64  	%rd1424, %rd1421, %rd1423;
	xor.b64  	%rd1425, %rd1424, %rd1422;
	add.s64 	%rd1426, %rd1337, %rd836;
	add.s64 	%rd1427, %rd1426, %rd1420;
	add.s64 	%rd1428, %rd1427, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10088,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10089}, %rd1415;
	}
	shf.r.wrap.b32 	%r10090, %r10089, %r10088, 19;
	shf.r.wrap.b32 	%r10091, %r10088, %r10089, 19;
	mov.b64 	%rd1429, {%r10091, %r10090};
	shf.l.wrap.b32 	%r10092, %r10088, %r10089, 3;
	shf.l.wrap.b32 	%r10093, %r10089, %r10088, 3;
	mov.b64 	%rd1430, {%r10093, %r10092};
	shr.u64 	%rd1431, %rd1415, 6;
	xor.b64  	%rd1432, %rd1429, %rd1431;
	xor.b64  	%rd1433, %rd1432, %rd1430;
	shf.r.wrap.b32 	%r10094, %r9959, %r9958, 1;
	shf.r.wrap.b32 	%r10095, %r9958, %r9959, 1;
	mov.b64 	%rd1434, {%r10095, %r10094};
	shf.r.wrap.b32 	%r10096, %r9959, %r9958, 8;
	shf.r.wrap.b32 	%r10097, %r9958, %r9959, 8;
	mov.b64 	%rd1435, {%r10097, %r10096};
	shr.u64 	%rd1436, %rd862, 7;
	xor.b64  	%rd1437, %rd1434, %rd1436;
	xor.b64  	%rd1438, %rd1437, %rd1435;
	add.s64 	%rd1439, %rd1350, %rd849;
	add.s64 	%rd1440, %rd1439, %rd1433;
	add.s64 	%rd1441, %rd1440, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10098,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10099}, %rd1428;
	}
	shf.r.wrap.b32 	%r10100, %r10099, %r10098, 19;
	shf.r.wrap.b32 	%r10101, %r10098, %r10099, 19;
	mov.b64 	%rd1442, {%r10101, %r10100};
	shf.l.wrap.b32 	%r10102, %r10098, %r10099, 3;
	shf.l.wrap.b32 	%r10103, %r10099, %r10098, 3;
	mov.b64 	%rd1443, {%r10103, %r10102};
	shr.u64 	%rd1444, %rd1428, 6;
	xor.b64  	%rd1445, %rd1442, %rd1444;
	xor.b64  	%rd1446, %rd1445, %rd1443;
	shf.r.wrap.b32 	%r10104, %r9969, %r9968, 1;
	shf.r.wrap.b32 	%r10105, %r9968, %r9969, 1;
	mov.b64 	%rd1447, {%r10105, %r10104};
	shf.r.wrap.b32 	%r10106, %r9969, %r9968, 8;
	shf.r.wrap.b32 	%r10107, %r9968, %r9969, 8;
	mov.b64 	%rd1448, {%r10107, %r10106};
	shr.u64 	%rd1449, %rd875, 7;
	xor.b64  	%rd1450, %rd1447, %rd1449;
	xor.b64  	%rd1451, %rd1450, %rd1448;
	add.s64 	%rd1452, %rd1363, %rd862;
	add.s64 	%rd1453, %rd1452, %rd1446;
	add.s64 	%rd1454, %rd1453, %rd1451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10108,%dummy}, %rd1441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10109}, %rd1441;
	}
	shf.r.wrap.b32 	%r10110, %r10109, %r10108, 19;
	shf.r.wrap.b32 	%r10111, %r10108, %r10109, 19;
	mov.b64 	%rd1455, {%r10111, %r10110};
	shf.l.wrap.b32 	%r10112, %r10108, %r10109, 3;
	shf.l.wrap.b32 	%r10113, %r10109, %r10108, 3;
	mov.b64 	%rd1456, {%r10113, %r10112};
	shr.u64 	%rd1457, %rd1441, 6;
	xor.b64  	%rd1458, %rd1455, %rd1457;
	xor.b64  	%rd1459, %rd1458, %rd1456;
	shf.r.wrap.b32 	%r10114, %r9979, %r9978, 1;
	shf.r.wrap.b32 	%r10115, %r9978, %r9979, 1;
	mov.b64 	%rd1460, {%r10115, %r10114};
	shf.r.wrap.b32 	%r10116, %r9979, %r9978, 8;
	shf.r.wrap.b32 	%r10117, %r9978, %r9979, 8;
	mov.b64 	%rd1461, {%r10117, %r10116};
	shr.u64 	%rd1462, %rd1272, 7;
	xor.b64  	%rd1463, %rd1460, %rd1462;
	xor.b64  	%rd1464, %rd1463, %rd1461;
	add.s64 	%rd1465, %rd1376, %rd875;
	add.s64 	%rd1466, %rd1465, %rd1459;
	add.s64 	%rd1467, %rd1466, %rd1464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10118,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10119}, %rd1248;
	}
	shf.r.wrap.b32 	%r10120, %r10119, %r10118, 14;
	shf.r.wrap.b32 	%r10121, %r10118, %r10119, 14;
	mov.b64 	%rd1468, {%r10121, %r10120};
	shf.r.wrap.b32 	%r10122, %r10119, %r10118, 18;
	shf.r.wrap.b32 	%r10123, %r10118, %r10119, 18;
	mov.b64 	%rd1469, {%r10123, %r10122};
	xor.b64  	%rd1470, %rd1469, %rd1468;
	shf.l.wrap.b32 	%r10124, %r10118, %r10119, 23;
	shf.l.wrap.b32 	%r10125, %r10119, %r10118, 23;
	mov.b64 	%rd1471, {%r10125, %r10124};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	xor.b64  	%rd1473, %rd1224, %rd1200;
	and.b64  	%rd1474, %rd1248, %rd1473;
	xor.b64  	%rd1475, %rd1474, %rd1200;
	add.s64 	%rd1476, %rd1475, %rd1176;
	add.s64 	%rd1477, %rd1476, %rd1272;
	add.s64 	%rd1478, %rd1477, %rd60;
	add.s64 	%rd1479, %rd1478, %rd1472;
	add.s64 	%rd1480, %rd1479, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10126,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10127}, %rd1259;
	}
	shf.r.wrap.b32 	%r10128, %r10127, %r10126, 28;
	shf.r.wrap.b32 	%r10129, %r10126, %r10127, 28;
	mov.b64 	%rd1481, {%r10129, %r10128};
	shf.l.wrap.b32 	%r10130, %r10126, %r10127, 30;
	shf.l.wrap.b32 	%r10131, %r10127, %r10126, 30;
	mov.b64 	%rd1482, {%r10131, %r10130};
	xor.b64  	%rd1483, %rd1482, %rd1481;
	shf.l.wrap.b32 	%r10132, %r10126, %r10127, 25;
	shf.l.wrap.b32 	%r10133, %r10127, %r10126, 25;
	mov.b64 	%rd1484, {%r10133, %r10132};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	and.b64  	%rd1486, %rd1259, %rd1235;
	xor.b64  	%rd1487, %rd1259, %rd1235;
	and.b64  	%rd1488, %rd1487, %rd1211;
	or.b64  	%rd1489, %rd1488, %rd1486;
	add.s64 	%rd1490, %rd1479, %rd1489;
	add.s64 	%rd1491, %rd1490, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10134,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10135}, %rd1480;
	}
	shf.r.wrap.b32 	%r10136, %r10135, %r10134, 14;
	shf.r.wrap.b32 	%r10137, %r10134, %r10135, 14;
	mov.b64 	%rd1492, {%r10137, %r10136};
	shf.r.wrap.b32 	%r10138, %r10135, %r10134, 18;
	shf.r.wrap.b32 	%r10139, %r10134, %r10135, 18;
	mov.b64 	%rd1493, {%r10139, %r10138};
	xor.b64  	%rd1494, %rd1493, %rd1492;
	shf.l.wrap.b32 	%r10140, %r10134, %r10135, 23;
	shf.l.wrap.b32 	%r10141, %r10135, %r10134, 23;
	mov.b64 	%rd1495, {%r10141, %r10140};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	xor.b64  	%rd1497, %rd1248, %rd1224;
	and.b64  	%rd1498, %rd1480, %rd1497;
	xor.b64  	%rd1499, %rd1498, %rd1224;
	add.s64 	%rd1500, %rd1285, %rd1200;
	add.s64 	%rd1501, %rd1500, %rd61;
	add.s64 	%rd1502, %rd1501, %rd1499;
	add.s64 	%rd1503, %rd1502, %rd1496;
	add.s64 	%rd1504, %rd1503, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10142,%dummy}, %rd1491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10143}, %rd1491;
	}
	shf.r.wrap.b32 	%r10144, %r10143, %r10142, 28;
	shf.r.wrap.b32 	%r10145, %r10142, %r10143, 28;
	mov.b64 	%rd1505, {%r10145, %r10144};
	shf.l.wrap.b32 	%r10146, %r10142, %r10143, 30;
	shf.l.wrap.b32 	%r10147, %r10143, %r10142, 30;
	mov.b64 	%rd1506, {%r10147, %r10146};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	shf.l.wrap.b32 	%r10148, %r10142, %r10143, 25;
	shf.l.wrap.b32 	%r10149, %r10143, %r10142, 25;
	mov.b64 	%rd1508, {%r10149, %r10148};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	and.b64  	%rd1510, %rd1491, %rd1259;
	xor.b64  	%rd1511, %rd1491, %rd1259;
	and.b64  	%rd1512, %rd1511, %rd1235;
	or.b64  	%rd1513, %rd1512, %rd1510;
	add.s64 	%rd1514, %rd1503, %rd1513;
	add.s64 	%rd1515, %rd1514, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10150,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10151}, %rd1504;
	}
	shf.r.wrap.b32 	%r10152, %r10151, %r10150, 14;
	shf.r.wrap.b32 	%r10153, %r10150, %r10151, 14;
	mov.b64 	%rd1516, {%r10153, %r10152};
	shf.r.wrap.b32 	%r10154, %r10151, %r10150, 18;
	shf.r.wrap.b32 	%r10155, %r10150, %r10151, 18;
	mov.b64 	%rd1517, {%r10155, %r10154};
	xor.b64  	%rd1518, %rd1517, %rd1516;
	shf.l.wrap.b32 	%r10156, %r10150, %r10151, 23;
	shf.l.wrap.b32 	%r10157, %r10151, %r10150, 23;
	mov.b64 	%rd1519, {%r10157, %r10156};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	xor.b64  	%rd1521, %rd1480, %rd1248;
	and.b64  	%rd1522, %rd1504, %rd1521;
	xor.b64  	%rd1523, %rd1522, %rd1248;
	add.s64 	%rd1524, %rd1298, %rd1224;
	add.s64 	%rd1525, %rd1524, %rd62;
	add.s64 	%rd1526, %rd1525, %rd1523;
	add.s64 	%rd1527, %rd1526, %rd1520;
	add.s64 	%rd1528, %rd1527, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10158,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10159}, %rd1515;
	}
	shf.r.wrap.b32 	%r10160, %r10159, %r10158, 28;
	shf.r.wrap.b32 	%r10161, %r10158, %r10159, 28;
	mov.b64 	%rd1529, {%r10161, %r10160};
	shf.l.wrap.b32 	%r10162, %r10158, %r10159, 30;
	shf.l.wrap.b32 	%r10163, %r10159, %r10158, 30;
	mov.b64 	%rd1530, {%r10163, %r10162};
	xor.b64  	%rd1531, %rd1530, %rd1529;
	shf.l.wrap.b32 	%r10164, %r10158, %r10159, 25;
	shf.l.wrap.b32 	%r10165, %r10159, %r10158, 25;
	mov.b64 	%rd1532, {%r10165, %r10164};
	xor.b64  	%rd1533, %rd1531, %rd1532;
	and.b64  	%rd1534, %rd1515, %rd1491;
	xor.b64  	%rd1535, %rd1515, %rd1491;
	and.b64  	%rd1536, %rd1535, %rd1259;
	or.b64  	%rd1537, %rd1536, %rd1534;
	add.s64 	%rd1538, %rd1527, %rd1537;
	add.s64 	%rd1539, %rd1538, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10166,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10167}, %rd1528;
	}
	shf.r.wrap.b32 	%r10168, %r10167, %r10166, 14;
	shf.r.wrap.b32 	%r10169, %r10166, %r10167, 14;
	mov.b64 	%rd1540, {%r10169, %r10168};
	shf.r.wrap.b32 	%r10170, %r10167, %r10166, 18;
	shf.r.wrap.b32 	%r10171, %r10166, %r10167, 18;
	mov.b64 	%rd1541, {%r10171, %r10170};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	shf.l.wrap.b32 	%r10172, %r10166, %r10167, 23;
	shf.l.wrap.b32 	%r10173, %r10167, %r10166, 23;
	mov.b64 	%rd1543, {%r10173, %r10172};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	xor.b64  	%rd1545, %rd1504, %rd1480;
	and.b64  	%rd1546, %rd1528, %rd1545;
	xor.b64  	%rd1547, %rd1546, %rd1480;
	add.s64 	%rd1548, %rd1311, %rd1248;
	add.s64 	%rd1549, %rd1548, %rd63;
	add.s64 	%rd1550, %rd1549, %rd1547;
	add.s64 	%rd1551, %rd1550, %rd1544;
	add.s64 	%rd1552, %rd1551, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10174,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10175}, %rd1539;
	}
	shf.r.wrap.b32 	%r10176, %r10175, %r10174, 28;
	shf.r.wrap.b32 	%r10177, %r10174, %r10175, 28;
	mov.b64 	%rd1553, {%r10177, %r10176};
	shf.l.wrap.b32 	%r10178, %r10174, %r10175, 30;
	shf.l.wrap.b32 	%r10179, %r10175, %r10174, 30;
	mov.b64 	%rd1554, {%r10179, %r10178};
	xor.b64  	%rd1555, %rd1554, %rd1553;
	shf.l.wrap.b32 	%r10180, %r10174, %r10175, 25;
	shf.l.wrap.b32 	%r10181, %r10175, %r10174, 25;
	mov.b64 	%rd1556, {%r10181, %r10180};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	and.b64  	%rd1558, %rd1539, %rd1515;
	xor.b64  	%rd1559, %rd1539, %rd1515;
	and.b64  	%rd1560, %rd1559, %rd1491;
	or.b64  	%rd1561, %rd1560, %rd1558;
	add.s64 	%rd1562, %rd1551, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10182,%dummy}, %rd1552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10183}, %rd1552;
	}
	shf.r.wrap.b32 	%r10184, %r10183, %r10182, 14;
	shf.r.wrap.b32 	%r10185, %r10182, %r10183, 14;
	mov.b64 	%rd1564, {%r10185, %r10184};
	shf.r.wrap.b32 	%r10186, %r10183, %r10182, 18;
	shf.r.wrap.b32 	%r10187, %r10182, %r10183, 18;
	mov.b64 	%rd1565, {%r10187, %r10186};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	shf.l.wrap.b32 	%r10188, %r10182, %r10183, 23;
	shf.l.wrap.b32 	%r10189, %r10183, %r10182, 23;
	mov.b64 	%rd1567, {%r10189, %r10188};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	xor.b64  	%rd1569, %rd1528, %rd1504;
	and.b64  	%rd1570, %rd1552, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1504;
	add.s64 	%rd1572, %rd1480, %rd1324;
	add.s64 	%rd1573, %rd1572, %rd64;
	add.s64 	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1574, %rd1568;
	add.s64 	%rd1576, %rd1575, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10190,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10191}, %rd1563;
	}
	shf.r.wrap.b32 	%r10192, %r10191, %r10190, 28;
	shf.r.wrap.b32 	%r10193, %r10190, %r10191, 28;
	mov.b64 	%rd1577, {%r10193, %r10192};
	shf.l.wrap.b32 	%r10194, %r10190, %r10191, 30;
	shf.l.wrap.b32 	%r10195, %r10191, %r10190, 30;
	mov.b64 	%rd1578, {%r10195, %r10194};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.l.wrap.b32 	%r10196, %r10190, %r10191, 25;
	shf.l.wrap.b32 	%r10197, %r10191, %r10190, 25;
	mov.b64 	%rd1580, {%r10197, %r10196};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	and.b64  	%rd1582, %rd1563, %rd1539;
	xor.b64  	%rd1583, %rd1563, %rd1539;
	and.b64  	%rd1584, %rd1583, %rd1515;
	or.b64  	%rd1585, %rd1584, %rd1582;
	add.s64 	%rd1586, %rd1575, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10198,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10199}, %rd1576;
	}
	shf.r.wrap.b32 	%r10200, %r10199, %r10198, 14;
	shf.r.wrap.b32 	%r10201, %r10198, %r10199, 14;
	mov.b64 	%rd1588, {%r10201, %r10200};
	shf.r.wrap.b32 	%r10202, %r10199, %r10198, 18;
	shf.r.wrap.b32 	%r10203, %r10198, %r10199, 18;
	mov.b64 	%rd1589, {%r10203, %r10202};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r10204, %r10198, %r10199, 23;
	shf.l.wrap.b32 	%r10205, %r10199, %r10198, 23;
	mov.b64 	%rd1591, {%r10205, %r10204};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1552, %rd1528;
	and.b64  	%rd1594, %rd1576, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1528;
	add.s64 	%rd1596, %rd1504, %rd1337;
	add.s64 	%rd1597, %rd1596, %rd65;
	add.s64 	%rd1598, %rd1597, %rd1595;
	add.s64 	%rd1599, %rd1598, %rd1592;
	add.s64 	%rd1600, %rd1599, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10206,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10207}, %rd1587;
	}
	shf.r.wrap.b32 	%r10208, %r10207, %r10206, 28;
	shf.r.wrap.b32 	%r10209, %r10206, %r10207, 28;
	mov.b64 	%rd1601, {%r10209, %r10208};
	shf.l.wrap.b32 	%r10210, %r10206, %r10207, 30;
	shf.l.wrap.b32 	%r10211, %r10207, %r10206, 30;
	mov.b64 	%rd1602, {%r10211, %r10210};
	xor.b64  	%rd1603, %rd1602, %rd1601;
	shf.l.wrap.b32 	%r10212, %r10206, %r10207, 25;
	shf.l.wrap.b32 	%r10213, %r10207, %r10206, 25;
	mov.b64 	%rd1604, {%r10213, %r10212};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	and.b64  	%rd1606, %rd1587, %rd1563;
	xor.b64  	%rd1607, %rd1587, %rd1563;
	and.b64  	%rd1608, %rd1607, %rd1539;
	or.b64  	%rd1609, %rd1608, %rd1606;
	add.s64 	%rd1610, %rd1599, %rd1609;
	add.s64 	%rd1611, %rd1610, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10214,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10215}, %rd1600;
	}
	shf.r.wrap.b32 	%r10216, %r10215, %r10214, 14;
	shf.r.wrap.b32 	%r10217, %r10214, %r10215, 14;
	mov.b64 	%rd1612, {%r10217, %r10216};
	shf.r.wrap.b32 	%r10218, %r10215, %r10214, 18;
	shf.r.wrap.b32 	%r10219, %r10214, %r10215, 18;
	mov.b64 	%rd1613, {%r10219, %r10218};
	xor.b64  	%rd1614, %rd1613, %rd1612;
	shf.l.wrap.b32 	%r10220, %r10214, %r10215, 23;
	shf.l.wrap.b32 	%r10221, %r10215, %r10214, 23;
	mov.b64 	%rd1615, {%r10221, %r10220};
	xor.b64  	%rd1616, %rd1614, %rd1615;
	xor.b64  	%rd1617, %rd1576, %rd1552;
	and.b64  	%rd1618, %rd1600, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1552;
	add.s64 	%rd1620, %rd1528, %rd1350;
	add.s64 	%rd1621, %rd1620, %rd66;
	add.s64 	%rd1622, %rd1621, %rd1619;
	add.s64 	%rd1623, %rd1622, %rd1616;
	add.s64 	%rd1624, %rd1623, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10222,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10223}, %rd1611;
	}
	shf.r.wrap.b32 	%r10224, %r10223, %r10222, 28;
	shf.r.wrap.b32 	%r10225, %r10222, %r10223, 28;
	mov.b64 	%rd1625, {%r10225, %r10224};
	shf.l.wrap.b32 	%r10226, %r10222, %r10223, 30;
	shf.l.wrap.b32 	%r10227, %r10223, %r10222, 30;
	mov.b64 	%rd1626, {%r10227, %r10226};
	xor.b64  	%rd1627, %rd1626, %rd1625;
	shf.l.wrap.b32 	%r10228, %r10222, %r10223, 25;
	shf.l.wrap.b32 	%r10229, %r10223, %r10222, 25;
	mov.b64 	%rd1628, {%r10229, %r10228};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	and.b64  	%rd1630, %rd1611, %rd1587;
	xor.b64  	%rd1631, %rd1611, %rd1587;
	and.b64  	%rd1632, %rd1631, %rd1563;
	or.b64  	%rd1633, %rd1632, %rd1630;
	add.s64 	%rd1634, %rd1623, %rd1633;
	add.s64 	%rd1635, %rd1634, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10230,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10231}, %rd1624;
	}
	shf.r.wrap.b32 	%r10232, %r10231, %r10230, 14;
	shf.r.wrap.b32 	%r10233, %r10230, %r10231, 14;
	mov.b64 	%rd1636, {%r10233, %r10232};
	shf.r.wrap.b32 	%r10234, %r10231, %r10230, 18;
	shf.r.wrap.b32 	%r10235, %r10230, %r10231, 18;
	mov.b64 	%rd1637, {%r10235, %r10234};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r10236, %r10230, %r10231, 23;
	shf.l.wrap.b32 	%r10237, %r10231, %r10230, 23;
	mov.b64 	%rd1639, {%r10237, %r10236};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1600, %rd1576;
	and.b64  	%rd1642, %rd1624, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1576;
	add.s64 	%rd1644, %rd1552, %rd1363;
	add.s64 	%rd1645, %rd1644, %rd67;
	add.s64 	%rd1646, %rd1645, %rd1643;
	add.s64 	%rd1647, %rd1646, %rd1640;
	add.s64 	%rd1648, %rd1647, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10238,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10239}, %rd1635;
	}
	shf.r.wrap.b32 	%r10240, %r10239, %r10238, 28;
	shf.r.wrap.b32 	%r10241, %r10238, %r10239, 28;
	mov.b64 	%rd1649, {%r10241, %r10240};
	shf.l.wrap.b32 	%r10242, %r10238, %r10239, 30;
	shf.l.wrap.b32 	%r10243, %r10239, %r10238, 30;
	mov.b64 	%rd1650, {%r10243, %r10242};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r10244, %r10238, %r10239, 25;
	shf.l.wrap.b32 	%r10245, %r10239, %r10238, 25;
	mov.b64 	%rd1652, {%r10245, %r10244};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	and.b64  	%rd1654, %rd1635, %rd1611;
	xor.b64  	%rd1655, %rd1635, %rd1611;
	and.b64  	%rd1656, %rd1655, %rd1587;
	or.b64  	%rd1657, %rd1656, %rd1654;
	add.s64 	%rd1658, %rd1647, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10246,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10247}, %rd1648;
	}
	shf.r.wrap.b32 	%r10248, %r10247, %r10246, 14;
	shf.r.wrap.b32 	%r10249, %r10246, %r10247, 14;
	mov.b64 	%rd1660, {%r10249, %r10248};
	shf.r.wrap.b32 	%r10250, %r10247, %r10246, 18;
	shf.r.wrap.b32 	%r10251, %r10246, %r10247, 18;
	mov.b64 	%rd1661, {%r10251, %r10250};
	xor.b64  	%rd1662, %rd1661, %rd1660;
	shf.l.wrap.b32 	%r10252, %r10246, %r10247, 23;
	shf.l.wrap.b32 	%r10253, %r10247, %r10246, 23;
	mov.b64 	%rd1663, {%r10253, %r10252};
	xor.b64  	%rd1664, %rd1662, %rd1663;
	xor.b64  	%rd1665, %rd1624, %rd1600;
	and.b64  	%rd1666, %rd1648, %rd1665;
	xor.b64  	%rd1667, %rd1666, %rd1600;
	add.s64 	%rd1668, %rd1576, %rd1376;
	add.s64 	%rd1669, %rd1668, %rd68;
	add.s64 	%rd1670, %rd1669, %rd1667;
	add.s64 	%rd1671, %rd1670, %rd1664;
	add.s64 	%rd1672, %rd1671, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10254,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10255}, %rd1659;
	}
	shf.r.wrap.b32 	%r10256, %r10255, %r10254, 28;
	shf.r.wrap.b32 	%r10257, %r10254, %r10255, 28;
	mov.b64 	%rd1673, {%r10257, %r10256};
	shf.l.wrap.b32 	%r10258, %r10254, %r10255, 30;
	shf.l.wrap.b32 	%r10259, %r10255, %r10254, 30;
	mov.b64 	%rd1674, {%r10259, %r10258};
	xor.b64  	%rd1675, %rd1674, %rd1673;
	shf.l.wrap.b32 	%r10260, %r10254, %r10255, 25;
	shf.l.wrap.b32 	%r10261, %r10255, %r10254, 25;
	mov.b64 	%rd1676, {%r10261, %r10260};
	xor.b64  	%rd1677, %rd1675, %rd1676;
	and.b64  	%rd1678, %rd1659, %rd1635;
	xor.b64  	%rd1679, %rd1659, %rd1635;
	and.b64  	%rd1680, %rd1679, %rd1611;
	or.b64  	%rd1681, %rd1680, %rd1678;
	add.s64 	%rd1682, %rd1671, %rd1681;
	add.s64 	%rd1683, %rd1682, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10262,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10263}, %rd1672;
	}
	shf.r.wrap.b32 	%r10264, %r10263, %r10262, 14;
	shf.r.wrap.b32 	%r10265, %r10262, %r10263, 14;
	mov.b64 	%rd1684, {%r10265, %r10264};
	shf.r.wrap.b32 	%r10266, %r10263, %r10262, 18;
	shf.r.wrap.b32 	%r10267, %r10262, %r10263, 18;
	mov.b64 	%rd1685, {%r10267, %r10266};
	xor.b64  	%rd1686, %rd1685, %rd1684;
	shf.l.wrap.b32 	%r10268, %r10262, %r10263, 23;
	shf.l.wrap.b32 	%r10269, %r10263, %r10262, 23;
	mov.b64 	%rd1687, {%r10269, %r10268};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	xor.b64  	%rd1689, %rd1648, %rd1624;
	and.b64  	%rd1690, %rd1672, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1624;
	add.s64 	%rd1692, %rd1600, %rd1389;
	add.s64 	%rd1693, %rd1692, %rd69;
	add.s64 	%rd1694, %rd1693, %rd1691;
	add.s64 	%rd1695, %rd1694, %rd1688;
	add.s64 	%rd1696, %rd1695, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10270,%dummy}, %rd1683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10271}, %rd1683;
	}
	shf.r.wrap.b32 	%r10272, %r10271, %r10270, 28;
	shf.r.wrap.b32 	%r10273, %r10270, %r10271, 28;
	mov.b64 	%rd1697, {%r10273, %r10272};
	shf.l.wrap.b32 	%r10274, %r10270, %r10271, 30;
	shf.l.wrap.b32 	%r10275, %r10271, %r10270, 30;
	mov.b64 	%rd1698, {%r10275, %r10274};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.l.wrap.b32 	%r10276, %r10270, %r10271, 25;
	shf.l.wrap.b32 	%r10277, %r10271, %r10270, 25;
	mov.b64 	%rd1700, {%r10277, %r10276};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	and.b64  	%rd1702, %rd1683, %rd1659;
	xor.b64  	%rd1703, %rd1683, %rd1659;
	and.b64  	%rd1704, %rd1703, %rd1635;
	or.b64  	%rd1705, %rd1704, %rd1702;
	add.s64 	%rd1706, %rd1695, %rd1705;
	add.s64 	%rd1707, %rd1706, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10278,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10279}, %rd1696;
	}
	shf.r.wrap.b32 	%r10280, %r10279, %r10278, 14;
	shf.r.wrap.b32 	%r10281, %r10278, %r10279, 14;
	mov.b64 	%rd1708, {%r10281, %r10280};
	shf.r.wrap.b32 	%r10282, %r10279, %r10278, 18;
	shf.r.wrap.b32 	%r10283, %r10278, %r10279, 18;
	mov.b64 	%rd1709, {%r10283, %r10282};
	xor.b64  	%rd1710, %rd1709, %rd1708;
	shf.l.wrap.b32 	%r10284, %r10278, %r10279, 23;
	shf.l.wrap.b32 	%r10285, %r10279, %r10278, 23;
	mov.b64 	%rd1711, {%r10285, %r10284};
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd1672, %rd1648;
	and.b64  	%rd1714, %rd1696, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1648;
	add.s64 	%rd1716, %rd1624, %rd1402;
	add.s64 	%rd1717, %rd1716, %rd70;
	add.s64 	%rd1718, %rd1717, %rd1715;
	add.s64 	%rd1719, %rd1718, %rd1712;
	add.s64 	%rd1720, %rd1719, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10286,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10287}, %rd1707;
	}
	shf.r.wrap.b32 	%r10288, %r10287, %r10286, 28;
	shf.r.wrap.b32 	%r10289, %r10286, %r10287, 28;
	mov.b64 	%rd1721, {%r10289, %r10288};
	shf.l.wrap.b32 	%r10290, %r10286, %r10287, 30;
	shf.l.wrap.b32 	%r10291, %r10287, %r10286, 30;
	mov.b64 	%rd1722, {%r10291, %r10290};
	xor.b64  	%rd1723, %rd1722, %rd1721;
	shf.l.wrap.b32 	%r10292, %r10286, %r10287, 25;
	shf.l.wrap.b32 	%r10293, %r10287, %r10286, 25;
	mov.b64 	%rd1724, {%r10293, %r10292};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	and.b64  	%rd1726, %rd1707, %rd1683;
	xor.b64  	%rd1727, %rd1707, %rd1683;
	and.b64  	%rd1728, %rd1727, %rd1659;
	or.b64  	%rd1729, %rd1728, %rd1726;
	add.s64 	%rd1730, %rd1719, %rd1729;
	add.s64 	%rd1731, %rd1730, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10294,%dummy}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10295}, %rd1720;
	}
	shf.r.wrap.b32 	%r10296, %r10295, %r10294, 14;
	shf.r.wrap.b32 	%r10297, %r10294, %r10295, 14;
	mov.b64 	%rd1732, {%r10297, %r10296};
	shf.r.wrap.b32 	%r10298, %r10295, %r10294, 18;
	shf.r.wrap.b32 	%r10299, %r10294, %r10295, 18;
	mov.b64 	%rd1733, {%r10299, %r10298};
	xor.b64  	%rd1734, %rd1733, %rd1732;
	shf.l.wrap.b32 	%r10300, %r10294, %r10295, 23;
	shf.l.wrap.b32 	%r10301, %r10295, %r10294, 23;
	mov.b64 	%rd1735, {%r10301, %r10300};
	xor.b64  	%rd1736, %rd1734, %rd1735;
	xor.b64  	%rd1737, %rd1696, %rd1672;
	and.b64  	%rd1738, %rd1720, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1672;
	add.s64 	%rd1740, %rd1648, %rd1415;
	add.s64 	%rd1741, %rd1740, %rd71;
	add.s64 	%rd1742, %rd1741, %rd1739;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10302,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10303}, %rd1731;
	}
	shf.r.wrap.b32 	%r10304, %r10303, %r10302, 28;
	shf.r.wrap.b32 	%r10305, %r10302, %r10303, 28;
	mov.b64 	%rd1745, {%r10305, %r10304};
	shf.l.wrap.b32 	%r10306, %r10302, %r10303, 30;
	shf.l.wrap.b32 	%r10307, %r10303, %r10302, 30;
	mov.b64 	%rd1746, {%r10307, %r10306};
	xor.b64  	%rd1747, %rd1746, %rd1745;
	shf.l.wrap.b32 	%r10308, %r10302, %r10303, 25;
	shf.l.wrap.b32 	%r10309, %r10303, %r10302, 25;
	mov.b64 	%rd1748, {%r10309, %r10308};
	xor.b64  	%rd1749, %rd1747, %rd1748;
	and.b64  	%rd1750, %rd1731, %rd1707;
	xor.b64  	%rd1751, %rd1731, %rd1707;
	and.b64  	%rd1752, %rd1751, %rd1683;
	or.b64  	%rd1753, %rd1752, %rd1750;
	add.s64 	%rd1754, %rd1743, %rd1753;
	add.s64 	%rd1755, %rd1754, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10310,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10311}, %rd1744;
	}
	shf.r.wrap.b32 	%r10312, %r10311, %r10310, 14;
	shf.r.wrap.b32 	%r10313, %r10310, %r10311, 14;
	mov.b64 	%rd1756, {%r10313, %r10312};
	shf.r.wrap.b32 	%r10314, %r10311, %r10310, 18;
	shf.r.wrap.b32 	%r10315, %r10310, %r10311, 18;
	mov.b64 	%rd1757, {%r10315, %r10314};
	xor.b64  	%rd1758, %rd1757, %rd1756;
	shf.l.wrap.b32 	%r10316, %r10310, %r10311, 23;
	shf.l.wrap.b32 	%r10317, %r10311, %r10310, 23;
	mov.b64 	%rd1759, {%r10317, %r10316};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	xor.b64  	%rd1761, %rd1720, %rd1696;
	and.b64  	%rd1762, %rd1744, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1696;
	add.s64 	%rd1764, %rd1672, %rd1428;
	add.s64 	%rd1765, %rd1764, %rd72;
	add.s64 	%rd1766, %rd1765, %rd1763;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10318,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10319}, %rd1755;
	}
	shf.r.wrap.b32 	%r10320, %r10319, %r10318, 28;
	shf.r.wrap.b32 	%r10321, %r10318, %r10319, 28;
	mov.b64 	%rd1769, {%r10321, %r10320};
	shf.l.wrap.b32 	%r10322, %r10318, %r10319, 30;
	shf.l.wrap.b32 	%r10323, %r10319, %r10318, 30;
	mov.b64 	%rd1770, {%r10323, %r10322};
	xor.b64  	%rd1771, %rd1770, %rd1769;
	shf.l.wrap.b32 	%r10324, %r10318, %r10319, 25;
	shf.l.wrap.b32 	%r10325, %r10319, %r10318, 25;
	mov.b64 	%rd1772, {%r10325, %r10324};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	and.b64  	%rd1774, %rd1755, %rd1731;
	xor.b64  	%rd1775, %rd1755, %rd1731;
	and.b64  	%rd1776, %rd1775, %rd1707;
	or.b64  	%rd1777, %rd1776, %rd1774;
	add.s64 	%rd1778, %rd1767, %rd1777;
	add.s64 	%rd1779, %rd1778, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10326,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10327}, %rd1768;
	}
	shf.r.wrap.b32 	%r10328, %r10327, %r10326, 14;
	shf.r.wrap.b32 	%r10329, %r10326, %r10327, 14;
	mov.b64 	%rd1780, {%r10329, %r10328};
	shf.r.wrap.b32 	%r10330, %r10327, %r10326, 18;
	shf.r.wrap.b32 	%r10331, %r10326, %r10327, 18;
	mov.b64 	%rd1781, {%r10331, %r10330};
	xor.b64  	%rd1782, %rd1781, %rd1780;
	shf.l.wrap.b32 	%r10332, %r10326, %r10327, 23;
	shf.l.wrap.b32 	%r10333, %r10327, %r10326, 23;
	mov.b64 	%rd1783, {%r10333, %r10332};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	xor.b64  	%rd1785, %rd1744, %rd1720;
	and.b64  	%rd1786, %rd1768, %rd1785;
	xor.b64  	%rd1787, %rd1786, %rd1720;
	add.s64 	%rd1788, %rd1696, %rd1441;
	add.s64 	%rd1789, %rd1788, %rd73;
	add.s64 	%rd1790, %rd1789, %rd1787;
	add.s64 	%rd1791, %rd1790, %rd1784;
	add.s64 	%rd1792, %rd1791, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10334,%dummy}, %rd1779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10335}, %rd1779;
	}
	shf.r.wrap.b32 	%r10336, %r10335, %r10334, 28;
	shf.r.wrap.b32 	%r10337, %r10334, %r10335, 28;
	mov.b64 	%rd1793, {%r10337, %r10336};
	shf.l.wrap.b32 	%r10338, %r10334, %r10335, 30;
	shf.l.wrap.b32 	%r10339, %r10335, %r10334, 30;
	mov.b64 	%rd1794, {%r10339, %r10338};
	xor.b64  	%rd1795, %rd1794, %rd1793;
	shf.l.wrap.b32 	%r10340, %r10334, %r10335, 25;
	shf.l.wrap.b32 	%r10341, %r10335, %r10334, 25;
	mov.b64 	%rd1796, {%r10341, %r10340};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	and.b64  	%rd1798, %rd1779, %rd1755;
	xor.b64  	%rd1799, %rd1779, %rd1755;
	and.b64  	%rd1800, %rd1799, %rd1731;
	or.b64  	%rd1801, %rd1800, %rd1798;
	add.s64 	%rd1802, %rd1791, %rd1801;
	add.s64 	%rd1803, %rd1802, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10342,%dummy}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10343}, %rd1792;
	}
	shf.r.wrap.b32 	%r10344, %r10343, %r10342, 14;
	shf.r.wrap.b32 	%r10345, %r10342, %r10343, 14;
	mov.b64 	%rd1804, {%r10345, %r10344};
	shf.r.wrap.b32 	%r10346, %r10343, %r10342, 18;
	shf.r.wrap.b32 	%r10347, %r10342, %r10343, 18;
	mov.b64 	%rd1805, {%r10347, %r10346};
	xor.b64  	%rd1806, %rd1805, %rd1804;
	shf.l.wrap.b32 	%r10348, %r10342, %r10343, 23;
	shf.l.wrap.b32 	%r10349, %r10343, %r10342, 23;
	mov.b64 	%rd1807, {%r10349, %r10348};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	xor.b64  	%rd1809, %rd1768, %rd1744;
	and.b64  	%rd1810, %rd1792, %rd1809;
	xor.b64  	%rd1811, %rd1810, %rd1744;
	add.s64 	%rd1812, %rd1720, %rd1454;
	add.s64 	%rd1813, %rd1812, %rd74;
	add.s64 	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1814, %rd1808;
	add.s64 	%rd1816, %rd1815, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10350,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10351}, %rd1803;
	}
	shf.r.wrap.b32 	%r10352, %r10351, %r10350, 28;
	shf.r.wrap.b32 	%r10353, %r10350, %r10351, 28;
	mov.b64 	%rd1817, {%r10353, %r10352};
	shf.l.wrap.b32 	%r10354, %r10350, %r10351, 30;
	shf.l.wrap.b32 	%r10355, %r10351, %r10350, 30;
	mov.b64 	%rd1818, {%r10355, %r10354};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.l.wrap.b32 	%r10356, %r10350, %r10351, 25;
	shf.l.wrap.b32 	%r10357, %r10351, %r10350, 25;
	mov.b64 	%rd1820, {%r10357, %r10356};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	and.b64  	%rd1822, %rd1803, %rd1779;
	xor.b64  	%rd1823, %rd1803, %rd1779;
	and.b64  	%rd1824, %rd1823, %rd1755;
	or.b64  	%rd1825, %rd1824, %rd1822;
	add.s64 	%rd1826, %rd1815, %rd1825;
	add.s64 	%rd1827, %rd1826, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10358,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd1816;
	}
	shf.r.wrap.b32 	%r10360, %r10359, %r10358, 14;
	shf.r.wrap.b32 	%r10361, %r10358, %r10359, 14;
	mov.b64 	%rd1828, {%r10361, %r10360};
	shf.r.wrap.b32 	%r10362, %r10359, %r10358, 18;
	shf.r.wrap.b32 	%r10363, %r10358, %r10359, 18;
	mov.b64 	%rd1829, {%r10363, %r10362};
	xor.b64  	%rd1830, %rd1829, %rd1828;
	shf.l.wrap.b32 	%r10364, %r10358, %r10359, 23;
	shf.l.wrap.b32 	%r10365, %r10359, %r10358, 23;
	mov.b64 	%rd1831, {%r10365, %r10364};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	xor.b64  	%rd1833, %rd1792, %rd1768;
	and.b64  	%rd1834, %rd1816, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1768;
	add.s64 	%rd1836, %rd1744, %rd1467;
	add.s64 	%rd1837, %rd1836, %rd75;
	add.s64 	%rd1838, %rd1837, %rd1835;
	add.s64 	%rd1839, %rd1838, %rd1832;
	add.s64 	%rd1840, %rd1839, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10366,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd1827;
	}
	shf.r.wrap.b32 	%r10368, %r10367, %r10366, 28;
	shf.r.wrap.b32 	%r10369, %r10366, %r10367, 28;
	mov.b64 	%rd1841, {%r10369, %r10368};
	shf.l.wrap.b32 	%r10370, %r10366, %r10367, 30;
	shf.l.wrap.b32 	%r10371, %r10367, %r10366, 30;
	mov.b64 	%rd1842, {%r10371, %r10370};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	shf.l.wrap.b32 	%r10372, %r10366, %r10367, 25;
	shf.l.wrap.b32 	%r10373, %r10367, %r10366, 25;
	mov.b64 	%rd1844, {%r10373, %r10372};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	and.b64  	%rd1846, %rd1827, %rd1803;
	xor.b64  	%rd1847, %rd1827, %rd1803;
	and.b64  	%rd1848, %rd1847, %rd1779;
	or.b64  	%rd1849, %rd1848, %rd1846;
	add.s64 	%rd1850, %rd1839, %rd1849;
	add.s64 	%rd1851, %rd1850, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10374,%dummy}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10375}, %rd1454;
	}
	shf.r.wrap.b32 	%r10376, %r10375, %r10374, 19;
	shf.r.wrap.b32 	%r10377, %r10374, %r10375, 19;
	mov.b64 	%rd1852, {%r10377, %r10376};
	shf.l.wrap.b32 	%r10378, %r10374, %r10375, 3;
	shf.l.wrap.b32 	%r10379, %r10375, %r10374, 3;
	mov.b64 	%rd1853, {%r10379, %r10378};
	shr.u64 	%rd1854, %rd1454, 6;
	xor.b64  	%rd1855, %rd1852, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1853;
	shf.r.wrap.b32 	%r10380, %r9989, %r9988, 1;
	shf.r.wrap.b32 	%r10381, %r9988, %r9989, 1;
	mov.b64 	%rd1857, {%r10381, %r10380};
	shf.r.wrap.b32 	%r10382, %r9989, %r9988, 8;
	shf.r.wrap.b32 	%r10383, %r9988, %r9989, 8;
	mov.b64 	%rd1858, {%r10383, %r10382};
	shr.u64 	%rd1859, %rd1285, 7;
	xor.b64  	%rd1860, %rd1857, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1858;
	add.s64 	%rd1862, %rd1389, %rd1272;
	add.s64 	%rd1863, %rd1862, %rd1856;
	add.s64 	%rd1864, %rd1863, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10384,%dummy}, %rd1467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10385}, %rd1467;
	}
	shf.r.wrap.b32 	%r10386, %r10385, %r10384, 19;
	shf.r.wrap.b32 	%r10387, %r10384, %r10385, 19;
	mov.b64 	%rd1865, {%r10387, %r10386};
	shf.l.wrap.b32 	%r10388, %r10384, %r10385, 3;
	shf.l.wrap.b32 	%r10389, %r10385, %r10384, 3;
	mov.b64 	%rd1866, {%r10389, %r10388};
	shr.u64 	%rd1867, %rd1467, 6;
	xor.b64  	%rd1868, %rd1865, %rd1867;
	xor.b64  	%rd1869, %rd1868, %rd1866;
	shf.r.wrap.b32 	%r10390, %r9999, %r9998, 1;
	shf.r.wrap.b32 	%r10391, %r9998, %r9999, 1;
	mov.b64 	%rd1870, {%r10391, %r10390};
	shf.r.wrap.b32 	%r10392, %r9999, %r9998, 8;
	shf.r.wrap.b32 	%r10393, %r9998, %r9999, 8;
	mov.b64 	%rd1871, {%r10393, %r10392};
	shr.u64 	%rd1872, %rd1298, 7;
	xor.b64  	%rd1873, %rd1870, %rd1872;
	xor.b64  	%rd1874, %rd1873, %rd1871;
	add.s64 	%rd1875, %rd1402, %rd1285;
	add.s64 	%rd1876, %rd1875, %rd1869;
	add.s64 	%rd1877, %rd1876, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10394,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10395}, %rd1864;
	}
	shf.r.wrap.b32 	%r10396, %r10395, %r10394, 19;
	shf.r.wrap.b32 	%r10397, %r10394, %r10395, 19;
	mov.b64 	%rd1878, {%r10397, %r10396};
	shf.l.wrap.b32 	%r10398, %r10394, %r10395, 3;
	shf.l.wrap.b32 	%r10399, %r10395, %r10394, 3;
	mov.b64 	%rd1879, {%r10399, %r10398};
	shr.u64 	%rd1880, %rd1864, 6;
	xor.b64  	%rd1881, %rd1878, %rd1880;
	xor.b64  	%rd1882, %rd1881, %rd1879;
	shf.r.wrap.b32 	%r10400, %r10009, %r10008, 1;
	shf.r.wrap.b32 	%r10401, %r10008, %r10009, 1;
	mov.b64 	%rd1883, {%r10401, %r10400};
	shf.r.wrap.b32 	%r10402, %r10009, %r10008, 8;
	shf.r.wrap.b32 	%r10403, %r10008, %r10009, 8;
	mov.b64 	%rd1884, {%r10403, %r10402};
	shr.u64 	%rd1885, %rd1311, 7;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	add.s64 	%rd1888, %rd1415, %rd1298;
	add.s64 	%rd1889, %rd1888, %rd1882;
	add.s64 	%rd1890, %rd1889, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10404,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10405}, %rd1877;
	}
	shf.r.wrap.b32 	%r10406, %r10405, %r10404, 19;
	shf.r.wrap.b32 	%r10407, %r10404, %r10405, 19;
	mov.b64 	%rd1891, {%r10407, %r10406};
	shf.l.wrap.b32 	%r10408, %r10404, %r10405, 3;
	shf.l.wrap.b32 	%r10409, %r10405, %r10404, 3;
	mov.b64 	%rd1892, {%r10409, %r10408};
	shr.u64 	%rd1893, %rd1877, 6;
	xor.b64  	%rd1894, %rd1891, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1892;
	shf.r.wrap.b32 	%r10410, %r10019, %r10018, 1;
	shf.r.wrap.b32 	%r10411, %r10018, %r10019, 1;
	mov.b64 	%rd1896, {%r10411, %r10410};
	shf.r.wrap.b32 	%r10412, %r10019, %r10018, 8;
	shf.r.wrap.b32 	%r10413, %r10018, %r10019, 8;
	mov.b64 	%rd1897, {%r10413, %r10412};
	shr.u64 	%rd1898, %rd1324, 7;
	xor.b64  	%rd1899, %rd1896, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd1897;
	add.s64 	%rd1901, %rd1428, %rd1311;
	add.s64 	%rd1902, %rd1901, %rd1895;
	add.s64 	%rd1903, %rd1902, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10414,%dummy}, %rd1890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10415}, %rd1890;
	}
	shf.r.wrap.b32 	%r10416, %r10415, %r10414, 19;
	shf.r.wrap.b32 	%r10417, %r10414, %r10415, 19;
	mov.b64 	%rd1904, {%r10417, %r10416};
	shf.l.wrap.b32 	%r10418, %r10414, %r10415, 3;
	shf.l.wrap.b32 	%r10419, %r10415, %r10414, 3;
	mov.b64 	%rd1905, {%r10419, %r10418};
	shr.u64 	%rd1906, %rd1890, 6;
	xor.b64  	%rd1907, %rd1904, %rd1906;
	xor.b64  	%rd1908, %rd1907, %rd1905;
	shf.r.wrap.b32 	%r10420, %r10029, %r10028, 1;
	shf.r.wrap.b32 	%r10421, %r10028, %r10029, 1;
	mov.b64 	%rd1909, {%r10421, %r10420};
	shf.r.wrap.b32 	%r10422, %r10029, %r10028, 8;
	shf.r.wrap.b32 	%r10423, %r10028, %r10029, 8;
	mov.b64 	%rd1910, {%r10423, %r10422};
	shr.u64 	%rd1911, %rd1337, 7;
	xor.b64  	%rd1912, %rd1909, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1910;
	add.s64 	%rd1914, %rd1441, %rd1324;
	add.s64 	%rd1915, %rd1914, %rd1908;
	add.s64 	%rd1916, %rd1915, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10424,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10425}, %rd1903;
	}
	shf.r.wrap.b32 	%r10426, %r10425, %r10424, 19;
	shf.r.wrap.b32 	%r10427, %r10424, %r10425, 19;
	mov.b64 	%rd1917, {%r10427, %r10426};
	shf.l.wrap.b32 	%r10428, %r10424, %r10425, 3;
	shf.l.wrap.b32 	%r10429, %r10425, %r10424, 3;
	mov.b64 	%rd1918, {%r10429, %r10428};
	shr.u64 	%rd1919, %rd1903, 6;
	xor.b64  	%rd1920, %rd1917, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1918;
	shf.r.wrap.b32 	%r10430, %r10039, %r10038, 1;
	shf.r.wrap.b32 	%r10431, %r10038, %r10039, 1;
	mov.b64 	%rd1922, {%r10431, %r10430};
	shf.r.wrap.b32 	%r10432, %r10039, %r10038, 8;
	shf.r.wrap.b32 	%r10433, %r10038, %r10039, 8;
	mov.b64 	%rd1923, {%r10433, %r10432};
	shr.u64 	%rd1924, %rd1350, 7;
	xor.b64  	%rd1925, %rd1922, %rd1924;
	xor.b64  	%rd1926, %rd1925, %rd1923;
	add.s64 	%rd1927, %rd1454, %rd1337;
	add.s64 	%rd1928, %rd1927, %rd1921;
	add.s64 	%rd1929, %rd1928, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10434,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10435}, %rd1916;
	}
	shf.r.wrap.b32 	%r10436, %r10435, %r10434, 19;
	shf.r.wrap.b32 	%r10437, %r10434, %r10435, 19;
	mov.b64 	%rd1930, {%r10437, %r10436};
	shf.l.wrap.b32 	%r10438, %r10434, %r10435, 3;
	shf.l.wrap.b32 	%r10439, %r10435, %r10434, 3;
	mov.b64 	%rd1931, {%r10439, %r10438};
	shr.u64 	%rd1932, %rd1916, 6;
	xor.b64  	%rd1933, %rd1930, %rd1932;
	xor.b64  	%rd1934, %rd1933, %rd1931;
	shf.r.wrap.b32 	%r10440, %r10049, %r10048, 1;
	shf.r.wrap.b32 	%r10441, %r10048, %r10049, 1;
	mov.b64 	%rd1935, {%r10441, %r10440};
	shf.r.wrap.b32 	%r10442, %r10049, %r10048, 8;
	shf.r.wrap.b32 	%r10443, %r10048, %r10049, 8;
	mov.b64 	%rd1936, {%r10443, %r10442};
	shr.u64 	%rd1937, %rd1363, 7;
	xor.b64  	%rd1938, %rd1935, %rd1937;
	xor.b64  	%rd1939, %rd1938, %rd1936;
	add.s64 	%rd1940, %rd1467, %rd1350;
	add.s64 	%rd1941, %rd1940, %rd1934;
	add.s64 	%rd1942, %rd1941, %rd1939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10444,%dummy}, %rd1929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10445}, %rd1929;
	}
	shf.r.wrap.b32 	%r10446, %r10445, %r10444, 19;
	shf.r.wrap.b32 	%r10447, %r10444, %r10445, 19;
	mov.b64 	%rd1943, {%r10447, %r10446};
	shf.l.wrap.b32 	%r10448, %r10444, %r10445, 3;
	shf.l.wrap.b32 	%r10449, %r10445, %r10444, 3;
	mov.b64 	%rd1944, {%r10449, %r10448};
	shr.u64 	%rd1945, %rd1929, 6;
	xor.b64  	%rd1946, %rd1943, %rd1945;
	xor.b64  	%rd1947, %rd1946, %rd1944;
	shf.r.wrap.b32 	%r10450, %r10059, %r10058, 1;
	shf.r.wrap.b32 	%r10451, %r10058, %r10059, 1;
	mov.b64 	%rd1948, {%r10451, %r10450};
	shf.r.wrap.b32 	%r10452, %r10059, %r10058, 8;
	shf.r.wrap.b32 	%r10453, %r10058, %r10059, 8;
	mov.b64 	%rd1949, {%r10453, %r10452};
	shr.u64 	%rd1950, %rd1376, 7;
	xor.b64  	%rd1951, %rd1948, %rd1950;
	xor.b64  	%rd1952, %rd1951, %rd1949;
	add.s64 	%rd1953, %rd1864, %rd1363;
	add.s64 	%rd1954, %rd1953, %rd1947;
	add.s64 	%rd1955, %rd1954, %rd1952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10454,%dummy}, %rd1942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10455}, %rd1942;
	}
	shf.r.wrap.b32 	%r10456, %r10455, %r10454, 19;
	shf.r.wrap.b32 	%r10457, %r10454, %r10455, 19;
	mov.b64 	%rd1956, {%r10457, %r10456};
	shf.l.wrap.b32 	%r10458, %r10454, %r10455, 3;
	shf.l.wrap.b32 	%r10459, %r10455, %r10454, 3;
	mov.b64 	%rd1957, {%r10459, %r10458};
	shr.u64 	%rd1958, %rd1942, 6;
	xor.b64  	%rd1959, %rd1956, %rd1958;
	xor.b64  	%rd1960, %rd1959, %rd1957;
	shf.r.wrap.b32 	%r10460, %r10069, %r10068, 1;
	shf.r.wrap.b32 	%r10461, %r10068, %r10069, 1;
	mov.b64 	%rd1961, {%r10461, %r10460};
	shf.r.wrap.b32 	%r10462, %r10069, %r10068, 8;
	shf.r.wrap.b32 	%r10463, %r10068, %r10069, 8;
	mov.b64 	%rd1962, {%r10463, %r10462};
	shr.u64 	%rd1963, %rd1389, 7;
	xor.b64  	%rd1964, %rd1961, %rd1963;
	xor.b64  	%rd1965, %rd1964, %rd1962;
	add.s64 	%rd1966, %rd1877, %rd1376;
	add.s64 	%rd1967, %rd1966, %rd1960;
	add.s64 	%rd1968, %rd1967, %rd1965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10464,%dummy}, %rd1955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10465}, %rd1955;
	}
	shf.r.wrap.b32 	%r10466, %r10465, %r10464, 19;
	shf.r.wrap.b32 	%r10467, %r10464, %r10465, 19;
	mov.b64 	%rd1969, {%r10467, %r10466};
	shf.l.wrap.b32 	%r10468, %r10464, %r10465, 3;
	shf.l.wrap.b32 	%r10469, %r10465, %r10464, 3;
	mov.b64 	%rd1970, {%r10469, %r10468};
	shr.u64 	%rd1971, %rd1955, 6;
	xor.b64  	%rd1972, %rd1969, %rd1971;
	xor.b64  	%rd1973, %rd1972, %rd1970;
	shf.r.wrap.b32 	%r10470, %r10079, %r10078, 1;
	shf.r.wrap.b32 	%r10471, %r10078, %r10079, 1;
	mov.b64 	%rd1974, {%r10471, %r10470};
	shf.r.wrap.b32 	%r10472, %r10079, %r10078, 8;
	shf.r.wrap.b32 	%r10473, %r10078, %r10079, 8;
	mov.b64 	%rd1975, {%r10473, %r10472};
	shr.u64 	%rd1976, %rd1402, 7;
	xor.b64  	%rd1977, %rd1974, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1975;
	add.s64 	%rd1979, %rd1890, %rd1389;
	add.s64 	%rd1980, %rd1979, %rd1973;
	add.s64 	%rd1981, %rd1980, %rd1978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10474,%dummy}, %rd1968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10475}, %rd1968;
	}
	shf.r.wrap.b32 	%r10476, %r10475, %r10474, 19;
	shf.r.wrap.b32 	%r10477, %r10474, %r10475, 19;
	mov.b64 	%rd1982, {%r10477, %r10476};
	shf.l.wrap.b32 	%r10478, %r10474, %r10475, 3;
	shf.l.wrap.b32 	%r10479, %r10475, %r10474, 3;
	mov.b64 	%rd1983, {%r10479, %r10478};
	shr.u64 	%rd1984, %rd1968, 6;
	xor.b64  	%rd1985, %rd1982, %rd1984;
	xor.b64  	%rd1986, %rd1985, %rd1983;
	shf.r.wrap.b32 	%r10480, %r10089, %r10088, 1;
	shf.r.wrap.b32 	%r10481, %r10088, %r10089, 1;
	mov.b64 	%rd1987, {%r10481, %r10480};
	shf.r.wrap.b32 	%r10482, %r10089, %r10088, 8;
	shf.r.wrap.b32 	%r10483, %r10088, %r10089, 8;
	mov.b64 	%rd1988, {%r10483, %r10482};
	shr.u64 	%rd1989, %rd1415, 7;
	xor.b64  	%rd1990, %rd1987, %rd1989;
	xor.b64  	%rd1991, %rd1990, %rd1988;
	add.s64 	%rd1992, %rd1903, %rd1402;
	add.s64 	%rd1993, %rd1992, %rd1986;
	add.s64 	%rd1994, %rd1993, %rd1991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10484,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10485}, %rd1981;
	}
	shf.r.wrap.b32 	%r10486, %r10485, %r10484, 19;
	shf.r.wrap.b32 	%r10487, %r10484, %r10485, 19;
	mov.b64 	%rd1995, {%r10487, %r10486};
	shf.l.wrap.b32 	%r10488, %r10484, %r10485, 3;
	shf.l.wrap.b32 	%r10489, %r10485, %r10484, 3;
	mov.b64 	%rd1996, {%r10489, %r10488};
	shr.u64 	%rd1997, %rd1981, 6;
	xor.b64  	%rd1998, %rd1995, %rd1997;
	xor.b64  	%rd1999, %rd1998, %rd1996;
	shf.r.wrap.b32 	%r10490, %r10099, %r10098, 1;
	shf.r.wrap.b32 	%r10491, %r10098, %r10099, 1;
	mov.b64 	%rd2000, {%r10491, %r10490};
	shf.r.wrap.b32 	%r10492, %r10099, %r10098, 8;
	shf.r.wrap.b32 	%r10493, %r10098, %r10099, 8;
	mov.b64 	%rd2001, {%r10493, %r10492};
	shr.u64 	%rd2002, %rd1428, 7;
	xor.b64  	%rd2003, %rd2000, %rd2002;
	xor.b64  	%rd2004, %rd2003, %rd2001;
	add.s64 	%rd2005, %rd1916, %rd1415;
	add.s64 	%rd2006, %rd2005, %rd1999;
	add.s64 	%rd2007, %rd2006, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10494,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd1994;
	}
	shf.r.wrap.b32 	%r10496, %r10495, %r10494, 19;
	shf.r.wrap.b32 	%r10497, %r10494, %r10495, 19;
	mov.b64 	%rd2008, {%r10497, %r10496};
	shf.l.wrap.b32 	%r10498, %r10494, %r10495, 3;
	shf.l.wrap.b32 	%r10499, %r10495, %r10494, 3;
	mov.b64 	%rd2009, {%r10499, %r10498};
	shr.u64 	%rd2010, %rd1994, 6;
	xor.b64  	%rd2011, %rd2008, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd2009;
	shf.r.wrap.b32 	%r10500, %r10109, %r10108, 1;
	shf.r.wrap.b32 	%r10501, %r10108, %r10109, 1;
	mov.b64 	%rd2013, {%r10501, %r10500};
	shf.r.wrap.b32 	%r10502, %r10109, %r10108, 8;
	shf.r.wrap.b32 	%r10503, %r10108, %r10109, 8;
	mov.b64 	%rd2014, {%r10503, %r10502};
	shr.u64 	%rd2015, %rd1441, 7;
	xor.b64  	%rd2016, %rd2013, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd2014;
	add.s64 	%rd2018, %rd1929, %rd1428;
	add.s64 	%rd2019, %rd2018, %rd2012;
	add.s64 	%rd2020, %rd2019, %rd2017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10504,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10505}, %rd2007;
	}
	shf.r.wrap.b32 	%r10506, %r10505, %r10504, 19;
	shf.r.wrap.b32 	%r10507, %r10504, %r10505, 19;
	mov.b64 	%rd2021, {%r10507, %r10506};
	shf.l.wrap.b32 	%r10508, %r10504, %r10505, 3;
	shf.l.wrap.b32 	%r10509, %r10505, %r10504, 3;
	mov.b64 	%rd2022, {%r10509, %r10508};
	shr.u64 	%rd2023, %rd2007, 6;
	xor.b64  	%rd2024, %rd2021, %rd2023;
	xor.b64  	%rd2025, %rd2024, %rd2022;
	shf.r.wrap.b32 	%r10510, %r10375, %r10374, 1;
	shf.r.wrap.b32 	%r10511, %r10374, %r10375, 1;
	mov.b64 	%rd2026, {%r10511, %r10510};
	shf.r.wrap.b32 	%r10512, %r10375, %r10374, 8;
	shf.r.wrap.b32 	%r10513, %r10374, %r10375, 8;
	mov.b64 	%rd2027, {%r10513, %r10512};
	shr.u64 	%rd2028, %rd1454, 7;
	xor.b64  	%rd2029, %rd2026, %rd2028;
	xor.b64  	%rd2030, %rd2029, %rd2027;
	add.s64 	%rd2031, %rd1942, %rd1441;
	add.s64 	%rd2032, %rd2031, %rd2025;
	add.s64 	%rd2033, %rd2032, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10514,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10515}, %rd2020;
	}
	shf.r.wrap.b32 	%r10516, %r10515, %r10514, 19;
	shf.r.wrap.b32 	%r10517, %r10514, %r10515, 19;
	mov.b64 	%rd2034, {%r10517, %r10516};
	shf.l.wrap.b32 	%r10518, %r10514, %r10515, 3;
	shf.l.wrap.b32 	%r10519, %r10515, %r10514, 3;
	mov.b64 	%rd2035, {%r10519, %r10518};
	shr.u64 	%rd2036, %rd2020, 6;
	xor.b64  	%rd2037, %rd2034, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd2035;
	shf.r.wrap.b32 	%r10520, %r10385, %r10384, 1;
	shf.r.wrap.b32 	%r10521, %r10384, %r10385, 1;
	mov.b64 	%rd2039, {%r10521, %r10520};
	shf.r.wrap.b32 	%r10522, %r10385, %r10384, 8;
	shf.r.wrap.b32 	%r10523, %r10384, %r10385, 8;
	mov.b64 	%rd2040, {%r10523, %r10522};
	shr.u64 	%rd2041, %rd1467, 7;
	xor.b64  	%rd2042, %rd2039, %rd2041;
	xor.b64  	%rd2043, %rd2042, %rd2040;
	add.s64 	%rd2044, %rd1955, %rd1454;
	add.s64 	%rd2045, %rd2044, %rd2038;
	add.s64 	%rd2046, %rd2045, %rd2043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10524,%dummy}, %rd2033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10525}, %rd2033;
	}
	shf.r.wrap.b32 	%r10526, %r10525, %r10524, 19;
	shf.r.wrap.b32 	%r10527, %r10524, %r10525, 19;
	mov.b64 	%rd2047, {%r10527, %r10526};
	shf.l.wrap.b32 	%r10528, %r10524, %r10525, 3;
	shf.l.wrap.b32 	%r10529, %r10525, %r10524, 3;
	mov.b64 	%rd2048, {%r10529, %r10528};
	shr.u64 	%rd2049, %rd2033, 6;
	xor.b64  	%rd2050, %rd2047, %rd2049;
	xor.b64  	%rd2051, %rd2050, %rd2048;
	shf.r.wrap.b32 	%r10530, %r10395, %r10394, 1;
	shf.r.wrap.b32 	%r10531, %r10394, %r10395, 1;
	mov.b64 	%rd2052, {%r10531, %r10530};
	shf.r.wrap.b32 	%r10532, %r10395, %r10394, 8;
	shf.r.wrap.b32 	%r10533, %r10394, %r10395, 8;
	mov.b64 	%rd2053, {%r10533, %r10532};
	shr.u64 	%rd2054, %rd1864, 7;
	xor.b64  	%rd2055, %rd2052, %rd2054;
	xor.b64  	%rd2056, %rd2055, %rd2053;
	add.s64 	%rd2057, %rd1968, %rd1467;
	add.s64 	%rd2058, %rd2057, %rd2051;
	add.s64 	%rd2059, %rd2058, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10534,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd1840;
	}
	shf.r.wrap.b32 	%r10536, %r10535, %r10534, 14;
	shf.r.wrap.b32 	%r10537, %r10534, %r10535, 14;
	mov.b64 	%rd2060, {%r10537, %r10536};
	shf.r.wrap.b32 	%r10538, %r10535, %r10534, 18;
	shf.r.wrap.b32 	%r10539, %r10534, %r10535, 18;
	mov.b64 	%rd2061, {%r10539, %r10538};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r10540, %r10534, %r10535, 23;
	shf.l.wrap.b32 	%r10541, %r10535, %r10534, 23;
	mov.b64 	%rd2063, {%r10541, %r10540};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd1816, %rd1792;
	and.b64  	%rd2066, %rd1840, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd1792;
	add.s64 	%rd2068, %rd2067, %rd1768;
	add.s64 	%rd2069, %rd2068, %rd1864;
	add.s64 	%rd2070, %rd2069, %rd76;
	add.s64 	%rd2071, %rd2070, %rd2064;
	add.s64 	%rd2072, %rd2071, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10542,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10543}, %rd1851;
	}
	shf.r.wrap.b32 	%r10544, %r10543, %r10542, 28;
	shf.r.wrap.b32 	%r10545, %r10542, %r10543, 28;
	mov.b64 	%rd2073, {%r10545, %r10544};
	shf.l.wrap.b32 	%r10546, %r10542, %r10543, 30;
	shf.l.wrap.b32 	%r10547, %r10543, %r10542, 30;
	mov.b64 	%rd2074, {%r10547, %r10546};
	xor.b64  	%rd2075, %rd2074, %rd2073;
	shf.l.wrap.b32 	%r10548, %r10542, %r10543, 25;
	shf.l.wrap.b32 	%r10549, %r10543, %r10542, 25;
	mov.b64 	%rd2076, {%r10549, %r10548};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	and.b64  	%rd2078, %rd1851, %rd1827;
	xor.b64  	%rd2079, %rd1851, %rd1827;
	and.b64  	%rd2080, %rd2079, %rd1803;
	or.b64  	%rd2081, %rd2080, %rd2078;
	add.s64 	%rd2082, %rd2071, %rd2081;
	add.s64 	%rd2083, %rd2082, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10550,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd2072;
	}
	shf.r.wrap.b32 	%r10552, %r10551, %r10550, 14;
	shf.r.wrap.b32 	%r10553, %r10550, %r10551, 14;
	mov.b64 	%rd2084, {%r10553, %r10552};
	shf.r.wrap.b32 	%r10554, %r10551, %r10550, 18;
	shf.r.wrap.b32 	%r10555, %r10550, %r10551, 18;
	mov.b64 	%rd2085, {%r10555, %r10554};
	xor.b64  	%rd2086, %rd2085, %rd2084;
	shf.l.wrap.b32 	%r10556, %r10550, %r10551, 23;
	shf.l.wrap.b32 	%r10557, %r10551, %r10550, 23;
	mov.b64 	%rd2087, {%r10557, %r10556};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	xor.b64  	%rd2089, %rd1840, %rd1816;
	and.b64  	%rd2090, %rd2072, %rd2089;
	xor.b64  	%rd2091, %rd2090, %rd1816;
	add.s64 	%rd2092, %rd1877, %rd1792;
	add.s64 	%rd2093, %rd2092, %rd77;
	add.s64 	%rd2094, %rd2093, %rd2091;
	add.s64 	%rd2095, %rd2094, %rd2088;
	add.s64 	%rd2096, %rd2095, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10558,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd2083;
	}
	shf.r.wrap.b32 	%r10560, %r10559, %r10558, 28;
	shf.r.wrap.b32 	%r10561, %r10558, %r10559, 28;
	mov.b64 	%rd2097, {%r10561, %r10560};
	shf.l.wrap.b32 	%r10562, %r10558, %r10559, 30;
	shf.l.wrap.b32 	%r10563, %r10559, %r10558, 30;
	mov.b64 	%rd2098, {%r10563, %r10562};
	xor.b64  	%rd2099, %rd2098, %rd2097;
	shf.l.wrap.b32 	%r10564, %r10558, %r10559, 25;
	shf.l.wrap.b32 	%r10565, %r10559, %r10558, 25;
	mov.b64 	%rd2100, {%r10565, %r10564};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	and.b64  	%rd2102, %rd2083, %rd1851;
	xor.b64  	%rd2103, %rd2083, %rd1851;
	and.b64  	%rd2104, %rd2103, %rd1827;
	or.b64  	%rd2105, %rd2104, %rd2102;
	add.s64 	%rd2106, %rd2095, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10566,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd2096;
	}
	shf.r.wrap.b32 	%r10568, %r10567, %r10566, 14;
	shf.r.wrap.b32 	%r10569, %r10566, %r10567, 14;
	mov.b64 	%rd2108, {%r10569, %r10568};
	shf.r.wrap.b32 	%r10570, %r10567, %r10566, 18;
	shf.r.wrap.b32 	%r10571, %r10566, %r10567, 18;
	mov.b64 	%rd2109, {%r10571, %r10570};
	xor.b64  	%rd2110, %rd2109, %rd2108;
	shf.l.wrap.b32 	%r10572, %r10566, %r10567, 23;
	shf.l.wrap.b32 	%r10573, %r10567, %r10566, 23;
	mov.b64 	%rd2111, {%r10573, %r10572};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	xor.b64  	%rd2113, %rd2072, %rd1840;
	and.b64  	%rd2114, %rd2096, %rd2113;
	xor.b64  	%rd2115, %rd2114, %rd1840;
	add.s64 	%rd2116, %rd1890, %rd1816;
	add.s64 	%rd2117, %rd2116, %rd78;
	add.s64 	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2118, %rd2112;
	add.s64 	%rd2120, %rd2119, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10574,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10575}, %rd2107;
	}
	shf.r.wrap.b32 	%r10576, %r10575, %r10574, 28;
	shf.r.wrap.b32 	%r10577, %r10574, %r10575, 28;
	mov.b64 	%rd2121, {%r10577, %r10576};
	shf.l.wrap.b32 	%r10578, %r10574, %r10575, 30;
	shf.l.wrap.b32 	%r10579, %r10575, %r10574, 30;
	mov.b64 	%rd2122, {%r10579, %r10578};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r10580, %r10574, %r10575, 25;
	shf.l.wrap.b32 	%r10581, %r10575, %r10574, 25;
	mov.b64 	%rd2124, {%r10581, %r10580};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	and.b64  	%rd2126, %rd2107, %rd2083;
	xor.b64  	%rd2127, %rd2107, %rd2083;
	and.b64  	%rd2128, %rd2127, %rd1851;
	or.b64  	%rd2129, %rd2128, %rd2126;
	add.s64 	%rd2130, %rd2119, %rd2129;
	add.s64 	%rd2131, %rd2130, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10582,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd2120;
	}
	shf.r.wrap.b32 	%r10584, %r10583, %r10582, 14;
	shf.r.wrap.b32 	%r10585, %r10582, %r10583, 14;
	mov.b64 	%rd2132, {%r10585, %r10584};
	shf.r.wrap.b32 	%r10586, %r10583, %r10582, 18;
	shf.r.wrap.b32 	%r10587, %r10582, %r10583, 18;
	mov.b64 	%rd2133, {%r10587, %r10586};
	xor.b64  	%rd2134, %rd2133, %rd2132;
	shf.l.wrap.b32 	%r10588, %r10582, %r10583, 23;
	shf.l.wrap.b32 	%r10589, %r10583, %r10582, 23;
	mov.b64 	%rd2135, {%r10589, %r10588};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	xor.b64  	%rd2137, %rd2096, %rd2072;
	and.b64  	%rd2138, %rd2120, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd2072;
	add.s64 	%rd2140, %rd1903, %rd1840;
	add.s64 	%rd2141, %rd2140, %rd79;
	add.s64 	%rd2142, %rd2141, %rd2139;
	add.s64 	%rd2143, %rd2142, %rd2136;
	add.s64 	%rd2144, %rd2143, %rd1851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10590,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd2131;
	}
	shf.r.wrap.b32 	%r10592, %r10591, %r10590, 28;
	shf.r.wrap.b32 	%r10593, %r10590, %r10591, 28;
	mov.b64 	%rd2145, {%r10593, %r10592};
	shf.l.wrap.b32 	%r10594, %r10590, %r10591, 30;
	shf.l.wrap.b32 	%r10595, %r10591, %r10590, 30;
	mov.b64 	%rd2146, {%r10595, %r10594};
	xor.b64  	%rd2147, %rd2146, %rd2145;
	shf.l.wrap.b32 	%r10596, %r10590, %r10591, 25;
	shf.l.wrap.b32 	%r10597, %r10591, %r10590, 25;
	mov.b64 	%rd2148, {%r10597, %r10596};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	and.b64  	%rd2150, %rd2131, %rd2107;
	xor.b64  	%rd2151, %rd2131, %rd2107;
	and.b64  	%rd2152, %rd2151, %rd2083;
	or.b64  	%rd2153, %rd2152, %rd2150;
	add.s64 	%rd2154, %rd2143, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10598,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd2144;
	}
	shf.r.wrap.b32 	%r10600, %r10599, %r10598, 14;
	shf.r.wrap.b32 	%r10601, %r10598, %r10599, 14;
	mov.b64 	%rd2156, {%r10601, %r10600};
	shf.r.wrap.b32 	%r10602, %r10599, %r10598, 18;
	shf.r.wrap.b32 	%r10603, %r10598, %r10599, 18;
	mov.b64 	%rd2157, {%r10603, %r10602};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r10604, %r10598, %r10599, 23;
	shf.l.wrap.b32 	%r10605, %r10599, %r10598, 23;
	mov.b64 	%rd2159, {%r10605, %r10604};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2120, %rd2096;
	and.b64  	%rd2162, %rd2144, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2096;
	add.s64 	%rd2164, %rd2072, %rd1916;
	add.s64 	%rd2165, %rd2164, %rd80;
	add.s64 	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2166, %rd2160;
	add.s64 	%rd2168, %rd2167, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10606,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd2155;
	}
	shf.r.wrap.b32 	%r10608, %r10607, %r10606, 28;
	shf.r.wrap.b32 	%r10609, %r10606, %r10607, 28;
	mov.b64 	%rd2169, {%r10609, %r10608};
	shf.l.wrap.b32 	%r10610, %r10606, %r10607, 30;
	shf.l.wrap.b32 	%r10611, %r10607, %r10606, 30;
	mov.b64 	%rd2170, {%r10611, %r10610};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r10612, %r10606, %r10607, 25;
	shf.l.wrap.b32 	%r10613, %r10607, %r10606, 25;
	mov.b64 	%rd2172, {%r10613, %r10612};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	and.b64  	%rd2174, %rd2155, %rd2131;
	xor.b64  	%rd2175, %rd2155, %rd2131;
	and.b64  	%rd2176, %rd2175, %rd2107;
	or.b64  	%rd2177, %rd2176, %rd2174;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10614,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10615}, %rd2168;
	}
	shf.r.wrap.b32 	%r10616, %r10615, %r10614, 14;
	shf.r.wrap.b32 	%r10617, %r10614, %r10615, 14;
	mov.b64 	%rd2180, {%r10617, %r10616};
	shf.r.wrap.b32 	%r10618, %r10615, %r10614, 18;
	shf.r.wrap.b32 	%r10619, %r10614, %r10615, 18;
	mov.b64 	%rd2181, {%r10619, %r10618};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r10620, %r10614, %r10615, 23;
	shf.l.wrap.b32 	%r10621, %r10615, %r10614, 23;
	mov.b64 	%rd2183, {%r10621, %r10620};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2144, %rd2120;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2120;
	add.s64 	%rd2188, %rd2096, %rd1929;
	add.s64 	%rd2189, %rd2188, %rd81;
	add.s64 	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd2190, %rd2184;
	add.s64 	%rd2192, %rd2191, %rd2107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10622,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10623}, %rd2179;
	}
	shf.r.wrap.b32 	%r10624, %r10623, %r10622, 28;
	shf.r.wrap.b32 	%r10625, %r10622, %r10623, 28;
	mov.b64 	%rd2193, {%r10625, %r10624};
	shf.l.wrap.b32 	%r10626, %r10622, %r10623, 30;
	shf.l.wrap.b32 	%r10627, %r10623, %r10622, 30;
	mov.b64 	%rd2194, {%r10627, %r10626};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r10628, %r10622, %r10623, 25;
	shf.l.wrap.b32 	%r10629, %r10623, %r10622, 25;
	mov.b64 	%rd2196, {%r10629, %r10628};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	and.b64  	%rd2198, %rd2179, %rd2155;
	xor.b64  	%rd2199, %rd2179, %rd2155;
	and.b64  	%rd2200, %rd2199, %rd2131;
	or.b64  	%rd2201, %rd2200, %rd2198;
	add.s64 	%rd2202, %rd2191, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10630,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10631}, %rd2192;
	}
	shf.r.wrap.b32 	%r10632, %r10631, %r10630, 14;
	shf.r.wrap.b32 	%r10633, %r10630, %r10631, 14;
	mov.b64 	%rd2204, {%r10633, %r10632};
	shf.r.wrap.b32 	%r10634, %r10631, %r10630, 18;
	shf.r.wrap.b32 	%r10635, %r10630, %r10631, 18;
	mov.b64 	%rd2205, {%r10635, %r10634};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r10636, %r10630, %r10631, 23;
	shf.l.wrap.b32 	%r10637, %r10631, %r10630, 23;
	mov.b64 	%rd2207, {%r10637, %r10636};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2168, %rd2144;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2144;
	add.s64 	%rd2212, %rd2120, %rd1942;
	add.s64 	%rd2213, %rd2212, %rd82;
	add.s64 	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2214, %rd2208;
	add.s64 	%rd2216, %rd2215, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10638,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10639}, %rd2203;
	}
	shf.r.wrap.b32 	%r10640, %r10639, %r10638, 28;
	shf.r.wrap.b32 	%r10641, %r10638, %r10639, 28;
	mov.b64 	%rd2217, {%r10641, %r10640};
	shf.l.wrap.b32 	%r10642, %r10638, %r10639, 30;
	shf.l.wrap.b32 	%r10643, %r10639, %r10638, 30;
	mov.b64 	%rd2218, {%r10643, %r10642};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	shf.l.wrap.b32 	%r10644, %r10638, %r10639, 25;
	shf.l.wrap.b32 	%r10645, %r10639, %r10638, 25;
	mov.b64 	%rd2220, {%r10645, %r10644};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	and.b64  	%rd2222, %rd2203, %rd2179;
	xor.b64  	%rd2223, %rd2203, %rd2179;
	and.b64  	%rd2224, %rd2223, %rd2155;
	or.b64  	%rd2225, %rd2224, %rd2222;
	add.s64 	%rd2226, %rd2215, %rd2225;
	add.s64 	%rd2227, %rd2226, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10646,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10647}, %rd2216;
	}
	shf.r.wrap.b32 	%r10648, %r10647, %r10646, 14;
	shf.r.wrap.b32 	%r10649, %r10646, %r10647, 14;
	mov.b64 	%rd2228, {%r10649, %r10648};
	shf.r.wrap.b32 	%r10650, %r10647, %r10646, 18;
	shf.r.wrap.b32 	%r10651, %r10646, %r10647, 18;
	mov.b64 	%rd2229, {%r10651, %r10650};
	xor.b64  	%rd2230, %rd2229, %rd2228;
	shf.l.wrap.b32 	%r10652, %r10646, %r10647, 23;
	shf.l.wrap.b32 	%r10653, %r10647, %r10646, 23;
	mov.b64 	%rd2231, {%r10653, %r10652};
	xor.b64  	%rd2232, %rd2230, %rd2231;
	xor.b64  	%rd2233, %rd2192, %rd2168;
	and.b64  	%rd2234, %rd2216, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2168;
	add.s64 	%rd2236, %rd2144, %rd1955;
	add.s64 	%rd2237, %rd2236, %rd83;
	add.s64 	%rd2238, %rd2237, %rd2235;
	add.s64 	%rd2239, %rd2238, %rd2232;
	add.s64 	%rd2240, %rd2239, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10654,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd2227;
	}
	shf.r.wrap.b32 	%r10656, %r10655, %r10654, 28;
	shf.r.wrap.b32 	%r10657, %r10654, %r10655, 28;
	mov.b64 	%rd2241, {%r10657, %r10656};
	shf.l.wrap.b32 	%r10658, %r10654, %r10655, 30;
	shf.l.wrap.b32 	%r10659, %r10655, %r10654, 30;
	mov.b64 	%rd2242, {%r10659, %r10658};
	xor.b64  	%rd2243, %rd2242, %rd2241;
	shf.l.wrap.b32 	%r10660, %r10654, %r10655, 25;
	shf.l.wrap.b32 	%r10661, %r10655, %r10654, 25;
	mov.b64 	%rd2244, {%r10661, %r10660};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	and.b64  	%rd2246, %rd2227, %rd2203;
	xor.b64  	%rd2247, %rd2227, %rd2203;
	and.b64  	%rd2248, %rd2247, %rd2179;
	or.b64  	%rd2249, %rd2248, %rd2246;
	add.s64 	%rd2250, %rd2239, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10662,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10663}, %rd2240;
	}
	shf.r.wrap.b32 	%r10664, %r10663, %r10662, 14;
	shf.r.wrap.b32 	%r10665, %r10662, %r10663, 14;
	mov.b64 	%rd2252, {%r10665, %r10664};
	shf.r.wrap.b32 	%r10666, %r10663, %r10662, 18;
	shf.r.wrap.b32 	%r10667, %r10662, %r10663, 18;
	mov.b64 	%rd2253, {%r10667, %r10666};
	xor.b64  	%rd2254, %rd2253, %rd2252;
	shf.l.wrap.b32 	%r10668, %r10662, %r10663, 23;
	shf.l.wrap.b32 	%r10669, %r10663, %r10662, 23;
	mov.b64 	%rd2255, {%r10669, %r10668};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	xor.b64  	%rd2257, %rd2216, %rd2192;
	and.b64  	%rd2258, %rd2240, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2192;
	add.s64 	%rd2260, %rd2168, %rd1968;
	add.s64 	%rd2261, %rd2260, %rd84;
	add.s64 	%rd2262, %rd2261, %rd2259;
	add.s64 	%rd2263, %rd2262, %rd2256;
	add.s64 	%rd2264, %rd2263, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10670,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10671}, %rd2251;
	}
	shf.r.wrap.b32 	%r10672, %r10671, %r10670, 28;
	shf.r.wrap.b32 	%r10673, %r10670, %r10671, 28;
	mov.b64 	%rd2265, {%r10673, %r10672};
	shf.l.wrap.b32 	%r10674, %r10670, %r10671, 30;
	shf.l.wrap.b32 	%r10675, %r10671, %r10670, 30;
	mov.b64 	%rd2266, {%r10675, %r10674};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r10676, %r10670, %r10671, 25;
	shf.l.wrap.b32 	%r10677, %r10671, %r10670, 25;
	mov.b64 	%rd2268, {%r10677, %r10676};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	and.b64  	%rd2270, %rd2251, %rd2227;
	xor.b64  	%rd2271, %rd2251, %rd2227;
	and.b64  	%rd2272, %rd2271, %rd2203;
	or.b64  	%rd2273, %rd2272, %rd2270;
	add.s64 	%rd2274, %rd2263, %rd2273;
	add.s64 	%rd2275, %rd2274, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10678,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd2264;
	}
	shf.r.wrap.b32 	%r10680, %r10679, %r10678, 14;
	shf.r.wrap.b32 	%r10681, %r10678, %r10679, 14;
	mov.b64 	%rd2276, {%r10681, %r10680};
	shf.r.wrap.b32 	%r10682, %r10679, %r10678, 18;
	shf.r.wrap.b32 	%r10683, %r10678, %r10679, 18;
	mov.b64 	%rd2277, {%r10683, %r10682};
	xor.b64  	%rd2278, %rd2277, %rd2276;
	shf.l.wrap.b32 	%r10684, %r10678, %r10679, 23;
	shf.l.wrap.b32 	%r10685, %r10679, %r10678, 23;
	mov.b64 	%rd2279, {%r10685, %r10684};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	xor.b64  	%rd2281, %rd2240, %rd2216;
	and.b64  	%rd2282, %rd2264, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2216;
	add.s64 	%rd2284, %rd2192, %rd1981;
	add.s64 	%rd2285, %rd2284, %rd85;
	add.s64 	%rd2286, %rd2285, %rd2283;
	add.s64 	%rd2287, %rd2286, %rd2280;
	add.s64 	%rd2288, %rd2287, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10686,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10687}, %rd2275;
	}
	shf.r.wrap.b32 	%r10688, %r10687, %r10686, 28;
	shf.r.wrap.b32 	%r10689, %r10686, %r10687, 28;
	mov.b64 	%rd2289, {%r10689, %r10688};
	shf.l.wrap.b32 	%r10690, %r10686, %r10687, 30;
	shf.l.wrap.b32 	%r10691, %r10687, %r10686, 30;
	mov.b64 	%rd2290, {%r10691, %r10690};
	xor.b64  	%rd2291, %rd2290, %rd2289;
	shf.l.wrap.b32 	%r10692, %r10686, %r10687, 25;
	shf.l.wrap.b32 	%r10693, %r10687, %r10686, 25;
	mov.b64 	%rd2292, {%r10693, %r10692};
	xor.b64  	%rd2293, %rd2291, %rd2292;
	and.b64  	%rd2294, %rd2275, %rd2251;
	xor.b64  	%rd2295, %rd2275, %rd2251;
	and.b64  	%rd2296, %rd2295, %rd2227;
	or.b64  	%rd2297, %rd2296, %rd2294;
	add.s64 	%rd2298, %rd2287, %rd2297;
	add.s64 	%rd2299, %rd2298, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10694,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10695}, %rd2288;
	}
	shf.r.wrap.b32 	%r10696, %r10695, %r10694, 14;
	shf.r.wrap.b32 	%r10697, %r10694, %r10695, 14;
	mov.b64 	%rd2300, {%r10697, %r10696};
	shf.r.wrap.b32 	%r10698, %r10695, %r10694, 18;
	shf.r.wrap.b32 	%r10699, %r10694, %r10695, 18;
	mov.b64 	%rd2301, {%r10699, %r10698};
	xor.b64  	%rd2302, %rd2301, %rd2300;
	shf.l.wrap.b32 	%r10700, %r10694, %r10695, 23;
	shf.l.wrap.b32 	%r10701, %r10695, %r10694, 23;
	mov.b64 	%rd2303, {%r10701, %r10700};
	xor.b64  	%rd2304, %rd2302, %rd2303;
	xor.b64  	%rd2305, %rd2264, %rd2240;
	and.b64  	%rd2306, %rd2288, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2240;
	add.s64 	%rd2308, %rd2216, %rd1994;
	add.s64 	%rd2309, %rd2308, %rd86;
	add.s64 	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd2310, %rd2304;
	add.s64 	%rd2312, %rd2311, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10702,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd2299;
	}
	shf.r.wrap.b32 	%r10704, %r10703, %r10702, 28;
	shf.r.wrap.b32 	%r10705, %r10702, %r10703, 28;
	mov.b64 	%rd2313, {%r10705, %r10704};
	shf.l.wrap.b32 	%r10706, %r10702, %r10703, 30;
	shf.l.wrap.b32 	%r10707, %r10703, %r10702, 30;
	mov.b64 	%rd2314, {%r10707, %r10706};
	xor.b64  	%rd2315, %rd2314, %rd2313;
	shf.l.wrap.b32 	%r10708, %r10702, %r10703, 25;
	shf.l.wrap.b32 	%r10709, %r10703, %r10702, 25;
	mov.b64 	%rd2316, {%r10709, %r10708};
	xor.b64  	%rd2317, %rd2315, %rd2316;
	and.b64  	%rd2318, %rd2299, %rd2275;
	xor.b64  	%rd2319, %rd2299, %rd2275;
	and.b64  	%rd2320, %rd2319, %rd2251;
	or.b64  	%rd2321, %rd2320, %rd2318;
	add.s64 	%rd2322, %rd2311, %rd2321;
	add.s64 	%rd2323, %rd2322, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10710,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10711}, %rd2312;
	}
	shf.r.wrap.b32 	%r10712, %r10711, %r10710, 14;
	shf.r.wrap.b32 	%r10713, %r10710, %r10711, 14;
	mov.b64 	%rd2324, {%r10713, %r10712};
	shf.r.wrap.b32 	%r10714, %r10711, %r10710, 18;
	shf.r.wrap.b32 	%r10715, %r10710, %r10711, 18;
	mov.b64 	%rd2325, {%r10715, %r10714};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r10716, %r10710, %r10711, 23;
	shf.l.wrap.b32 	%r10717, %r10711, %r10710, 23;
	mov.b64 	%rd2327, {%r10717, %r10716};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd2288, %rd2264;
	and.b64  	%rd2330, %rd2312, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2264;
	add.s64 	%rd2332, %rd2240, %rd2007;
	add.s64 	%rd2333, %rd2332, %rd87;
	add.s64 	%rd2334, %rd2333, %rd2331;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10718,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10719}, %rd2323;
	}
	shf.r.wrap.b32 	%r10720, %r10719, %r10718, 28;
	shf.r.wrap.b32 	%r10721, %r10718, %r10719, 28;
	mov.b64 	%rd2337, {%r10721, %r10720};
	shf.l.wrap.b32 	%r10722, %r10718, %r10719, 30;
	shf.l.wrap.b32 	%r10723, %r10719, %r10718, 30;
	mov.b64 	%rd2338, {%r10723, %r10722};
	xor.b64  	%rd2339, %rd2338, %rd2337;
	shf.l.wrap.b32 	%r10724, %r10718, %r10719, 25;
	shf.l.wrap.b32 	%r10725, %r10719, %r10718, 25;
	mov.b64 	%rd2340, {%r10725, %r10724};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	and.b64  	%rd2342, %rd2323, %rd2299;
	xor.b64  	%rd2343, %rd2323, %rd2299;
	and.b64  	%rd2344, %rd2343, %rd2275;
	or.b64  	%rd2345, %rd2344, %rd2342;
	add.s64 	%rd2346, %rd2335, %rd2345;
	add.s64 	%rd2347, %rd2346, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10726,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd2336;
	}
	shf.r.wrap.b32 	%r10728, %r10727, %r10726, 14;
	shf.r.wrap.b32 	%r10729, %r10726, %r10727, 14;
	mov.b64 	%rd2348, {%r10729, %r10728};
	shf.r.wrap.b32 	%r10730, %r10727, %r10726, 18;
	shf.r.wrap.b32 	%r10731, %r10726, %r10727, 18;
	mov.b64 	%rd2349, {%r10731, %r10730};
	xor.b64  	%rd2350, %rd2349, %rd2348;
	shf.l.wrap.b32 	%r10732, %r10726, %r10727, 23;
	shf.l.wrap.b32 	%r10733, %r10727, %r10726, 23;
	mov.b64 	%rd2351, {%r10733, %r10732};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd2312, %rd2288;
	and.b64  	%rd2354, %rd2336, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2288;
	add.s64 	%rd2356, %rd2264, %rd2020;
	add.s64 	%rd2357, %rd2356, %rd88;
	add.s64 	%rd2358, %rd2357, %rd2355;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10734,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10735}, %rd2347;
	}
	shf.r.wrap.b32 	%r10736, %r10735, %r10734, 28;
	shf.r.wrap.b32 	%r10737, %r10734, %r10735, 28;
	mov.b64 	%rd2361, {%r10737, %r10736};
	shf.l.wrap.b32 	%r10738, %r10734, %r10735, 30;
	shf.l.wrap.b32 	%r10739, %r10735, %r10734, 30;
	mov.b64 	%rd2362, {%r10739, %r10738};
	xor.b64  	%rd2363, %rd2362, %rd2361;
	shf.l.wrap.b32 	%r10740, %r10734, %r10735, 25;
	shf.l.wrap.b32 	%r10741, %r10735, %r10734, 25;
	mov.b64 	%rd2364, {%r10741, %r10740};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	and.b64  	%rd2366, %rd2347, %rd2323;
	xor.b64  	%rd2367, %rd2347, %rd2323;
	and.b64  	%rd2368, %rd2367, %rd2299;
	or.b64  	%rd2369, %rd2368, %rd2366;
	add.s64 	%rd2370, %rd2359, %rd2369;
	add.s64 	%rd2371, %rd2370, %rd2365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10742,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10743}, %rd2360;
	}
	shf.r.wrap.b32 	%r10744, %r10743, %r10742, 14;
	shf.r.wrap.b32 	%r10745, %r10742, %r10743, 14;
	mov.b64 	%rd2372, {%r10745, %r10744};
	shf.r.wrap.b32 	%r10746, %r10743, %r10742, 18;
	shf.r.wrap.b32 	%r10747, %r10742, %r10743, 18;
	mov.b64 	%rd2373, {%r10747, %r10746};
	xor.b64  	%rd2374, %rd2373, %rd2372;
	shf.l.wrap.b32 	%r10748, %r10742, %r10743, 23;
	shf.l.wrap.b32 	%r10749, %r10743, %r10742, 23;
	mov.b64 	%rd2375, {%r10749, %r10748};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	xor.b64  	%rd2377, %rd2336, %rd2312;
	and.b64  	%rd2378, %rd2360, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd2312;
	add.s64 	%rd2380, %rd2288, %rd2033;
	add.s64 	%rd2381, %rd2380, %rd89;
	add.s64 	%rd2382, %rd2381, %rd2379;
	add.s64 	%rd2383, %rd2382, %rd2376;
	add.s64 	%rd2384, %rd2383, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10750,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd2371;
	}
	shf.r.wrap.b32 	%r10752, %r10751, %r10750, 28;
	shf.r.wrap.b32 	%r10753, %r10750, %r10751, 28;
	mov.b64 	%rd2385, {%r10753, %r10752};
	shf.l.wrap.b32 	%r10754, %r10750, %r10751, 30;
	shf.l.wrap.b32 	%r10755, %r10751, %r10750, 30;
	mov.b64 	%rd2386, {%r10755, %r10754};
	xor.b64  	%rd2387, %rd2386, %rd2385;
	shf.l.wrap.b32 	%r10756, %r10750, %r10751, 25;
	shf.l.wrap.b32 	%r10757, %r10751, %r10750, 25;
	mov.b64 	%rd2388, {%r10757, %r10756};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	and.b64  	%rd2390, %rd2371, %rd2347;
	xor.b64  	%rd2391, %rd2371, %rd2347;
	and.b64  	%rd2392, %rd2391, %rd2323;
	or.b64  	%rd2393, %rd2392, %rd2390;
	add.s64 	%rd2394, %rd2383, %rd2393;
	add.s64 	%rd2395, %rd2394, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10758,%dummy}, %rd2384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10759}, %rd2384;
	}
	shf.r.wrap.b32 	%r10760, %r10759, %r10758, 14;
	shf.r.wrap.b32 	%r10761, %r10758, %r10759, 14;
	mov.b64 	%rd2396, {%r10761, %r10760};
	shf.r.wrap.b32 	%r10762, %r10759, %r10758, 18;
	shf.r.wrap.b32 	%r10763, %r10758, %r10759, 18;
	mov.b64 	%rd2397, {%r10763, %r10762};
	xor.b64  	%rd2398, %rd2397, %rd2396;
	shf.l.wrap.b32 	%r10764, %r10758, %r10759, 23;
	shf.l.wrap.b32 	%r10765, %r10759, %r10758, 23;
	mov.b64 	%rd2399, {%r10765, %r10764};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	xor.b64  	%rd2401, %rd2360, %rd2336;
	and.b64  	%rd2402, %rd2384, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2336;
	add.s64 	%rd2404, %rd2312, %rd2046;
	add.s64 	%rd2405, %rd2404, %rd90;
	add.s64 	%rd2406, %rd2405, %rd2403;
	add.s64 	%rd2407, %rd2406, %rd2400;
	add.s64 	%rd2408, %rd2407, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10766,%dummy}, %rd2395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10767}, %rd2395;
	}
	shf.r.wrap.b32 	%r10768, %r10767, %r10766, 28;
	shf.r.wrap.b32 	%r10769, %r10766, %r10767, 28;
	mov.b64 	%rd2409, {%r10769, %r10768};
	shf.l.wrap.b32 	%r10770, %r10766, %r10767, 30;
	shf.l.wrap.b32 	%r10771, %r10767, %r10766, 30;
	mov.b64 	%rd2410, {%r10771, %r10770};
	xor.b64  	%rd2411, %rd2410, %rd2409;
	shf.l.wrap.b32 	%r10772, %r10766, %r10767, 25;
	shf.l.wrap.b32 	%r10773, %r10767, %r10766, 25;
	mov.b64 	%rd2412, {%r10773, %r10772};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	and.b64  	%rd2414, %rd2395, %rd2371;
	xor.b64  	%rd2415, %rd2395, %rd2371;
	and.b64  	%rd2416, %rd2415, %rd2347;
	or.b64  	%rd2417, %rd2416, %rd2414;
	add.s64 	%rd2418, %rd2407, %rd2417;
	add.s64 	%rd2419, %rd2418, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10774,%dummy}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10775}, %rd2408;
	}
	shf.r.wrap.b32 	%r10776, %r10775, %r10774, 14;
	shf.r.wrap.b32 	%r10777, %r10774, %r10775, 14;
	mov.b64 	%rd2420, {%r10777, %r10776};
	shf.r.wrap.b32 	%r10778, %r10775, %r10774, 18;
	shf.r.wrap.b32 	%r10779, %r10774, %r10775, 18;
	mov.b64 	%rd2421, {%r10779, %r10778};
	xor.b64  	%rd2422, %rd2421, %rd2420;
	shf.l.wrap.b32 	%r10780, %r10774, %r10775, 23;
	shf.l.wrap.b32 	%r10781, %r10775, %r10774, 23;
	mov.b64 	%rd2423, {%r10781, %r10780};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2384, %rd2360;
	and.b64  	%rd2426, %rd2408, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2360;
	add.s64 	%rd2428, %rd2336, %rd2059;
	add.s64 	%rd2429, %rd2428, %rd91;
	add.s64 	%rd2430, %rd2429, %rd2427;
	add.s64 	%rd2431, %rd2430, %rd2424;
	add.s64 	%rd2432, %rd2431, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10782,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd2419;
	}
	shf.r.wrap.b32 	%r10784, %r10783, %r10782, 28;
	shf.r.wrap.b32 	%r10785, %r10782, %r10783, 28;
	mov.b64 	%rd2433, {%r10785, %r10784};
	shf.l.wrap.b32 	%r10786, %r10782, %r10783, 30;
	shf.l.wrap.b32 	%r10787, %r10783, %r10782, 30;
	mov.b64 	%rd2434, {%r10787, %r10786};
	xor.b64  	%rd2435, %rd2434, %rd2433;
	shf.l.wrap.b32 	%r10788, %r10782, %r10783, 25;
	shf.l.wrap.b32 	%r10789, %r10783, %r10782, 25;
	mov.b64 	%rd2436, {%r10789, %r10788};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	and.b64  	%rd2438, %rd2419, %rd2395;
	xor.b64  	%rd2439, %rd2419, %rd2395;
	and.b64  	%rd2440, %rd2439, %rd2371;
	or.b64  	%rd2441, %rd2440, %rd2438;
	add.s64 	%rd2442, %rd2431, %rd2441;
	add.s64 	%rd2443, %rd2442, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10790,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10791}, %rd2046;
	}
	shf.r.wrap.b32 	%r10792, %r10791, %r10790, 19;
	shf.r.wrap.b32 	%r10793, %r10790, %r10791, 19;
	mov.b64 	%rd2444, {%r10793, %r10792};
	shf.l.wrap.b32 	%r10794, %r10790, %r10791, 3;
	shf.l.wrap.b32 	%r10795, %r10791, %r10790, 3;
	mov.b64 	%rd2445, {%r10795, %r10794};
	shr.u64 	%rd2446, %rd2046, 6;
	xor.b64  	%rd2447, %rd2444, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2445;
	shf.r.wrap.b32 	%r10796, %r10405, %r10404, 1;
	shf.r.wrap.b32 	%r10797, %r10404, %r10405, 1;
	mov.b64 	%rd2449, {%r10797, %r10796};
	shf.r.wrap.b32 	%r10798, %r10405, %r10404, 8;
	shf.r.wrap.b32 	%r10799, %r10404, %r10405, 8;
	mov.b64 	%rd2450, {%r10799, %r10798};
	shr.u64 	%rd2451, %rd1877, 7;
	xor.b64  	%rd2452, %rd2449, %rd2451;
	xor.b64  	%rd2453, %rd2452, %rd2450;
	add.s64 	%rd2454, %rd1981, %rd1864;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10800,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10801}, %rd2059;
	}
	shf.r.wrap.b32 	%r10802, %r10801, %r10800, 19;
	shf.r.wrap.b32 	%r10803, %r10800, %r10801, 19;
	mov.b64 	%rd2457, {%r10803, %r10802};
	shf.l.wrap.b32 	%r10804, %r10800, %r10801, 3;
	shf.l.wrap.b32 	%r10805, %r10801, %r10800, 3;
	mov.b64 	%rd2458, {%r10805, %r10804};
	shr.u64 	%rd2459, %rd2059, 6;
	xor.b64  	%rd2460, %rd2457, %rd2459;
	xor.b64  	%rd2461, %rd2460, %rd2458;
	shf.r.wrap.b32 	%r10806, %r10415, %r10414, 1;
	shf.r.wrap.b32 	%r10807, %r10414, %r10415, 1;
	mov.b64 	%rd2462, {%r10807, %r10806};
	shf.r.wrap.b32 	%r10808, %r10415, %r10414, 8;
	shf.r.wrap.b32 	%r10809, %r10414, %r10415, 8;
	mov.b64 	%rd2463, {%r10809, %r10808};
	shr.u64 	%rd2464, %rd1890, 7;
	xor.b64  	%rd2465, %rd2462, %rd2464;
	xor.b64  	%rd2466, %rd2465, %rd2463;
	add.s64 	%rd2467, %rd1994, %rd1877;
	add.s64 	%rd2468, %rd2467, %rd2461;
	add.s64 	%rd2469, %rd2468, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10810,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10811}, %rd2456;
	}
	shf.r.wrap.b32 	%r10812, %r10811, %r10810, 19;
	shf.r.wrap.b32 	%r10813, %r10810, %r10811, 19;
	mov.b64 	%rd2470, {%r10813, %r10812};
	shf.l.wrap.b32 	%r10814, %r10810, %r10811, 3;
	shf.l.wrap.b32 	%r10815, %r10811, %r10810, 3;
	mov.b64 	%rd2471, {%r10815, %r10814};
	shr.u64 	%rd2472, %rd2456, 6;
	xor.b64  	%rd2473, %rd2470, %rd2472;
	xor.b64  	%rd2474, %rd2473, %rd2471;
	shf.r.wrap.b32 	%r10816, %r10425, %r10424, 1;
	shf.r.wrap.b32 	%r10817, %r10424, %r10425, 1;
	mov.b64 	%rd2475, {%r10817, %r10816};
	shf.r.wrap.b32 	%r10818, %r10425, %r10424, 8;
	shf.r.wrap.b32 	%r10819, %r10424, %r10425, 8;
	mov.b64 	%rd2476, {%r10819, %r10818};
	shr.u64 	%rd2477, %rd1903, 7;
	xor.b64  	%rd2478, %rd2475, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2476;
	add.s64 	%rd2480, %rd2007, %rd1890;
	add.s64 	%rd2481, %rd2480, %rd2474;
	add.s64 	%rd2482, %rd2481, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10820,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10821}, %rd2469;
	}
	shf.r.wrap.b32 	%r10822, %r10821, %r10820, 19;
	shf.r.wrap.b32 	%r10823, %r10820, %r10821, 19;
	mov.b64 	%rd2483, {%r10823, %r10822};
	shf.l.wrap.b32 	%r10824, %r10820, %r10821, 3;
	shf.l.wrap.b32 	%r10825, %r10821, %r10820, 3;
	mov.b64 	%rd2484, {%r10825, %r10824};
	shr.u64 	%rd2485, %rd2469, 6;
	xor.b64  	%rd2486, %rd2483, %rd2485;
	xor.b64  	%rd2487, %rd2486, %rd2484;
	shf.r.wrap.b32 	%r10826, %r10435, %r10434, 1;
	shf.r.wrap.b32 	%r10827, %r10434, %r10435, 1;
	mov.b64 	%rd2488, {%r10827, %r10826};
	shf.r.wrap.b32 	%r10828, %r10435, %r10434, 8;
	shf.r.wrap.b32 	%r10829, %r10434, %r10435, 8;
	mov.b64 	%rd2489, {%r10829, %r10828};
	shr.u64 	%rd2490, %rd1916, 7;
	xor.b64  	%rd2491, %rd2488, %rd2490;
	xor.b64  	%rd2492, %rd2491, %rd2489;
	add.s64 	%rd2493, %rd2020, %rd1903;
	add.s64 	%rd2494, %rd2493, %rd2487;
	add.s64 	%rd2495, %rd2494, %rd2492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10830,%dummy}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10831}, %rd2482;
	}
	shf.r.wrap.b32 	%r10832, %r10831, %r10830, 19;
	shf.r.wrap.b32 	%r10833, %r10830, %r10831, 19;
	mov.b64 	%rd2496, {%r10833, %r10832};
	shf.l.wrap.b32 	%r10834, %r10830, %r10831, 3;
	shf.l.wrap.b32 	%r10835, %r10831, %r10830, 3;
	mov.b64 	%rd2497, {%r10835, %r10834};
	shr.u64 	%rd2498, %rd2482, 6;
	xor.b64  	%rd2499, %rd2496, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2497;
	shf.r.wrap.b32 	%r10836, %r10445, %r10444, 1;
	shf.r.wrap.b32 	%r10837, %r10444, %r10445, 1;
	mov.b64 	%rd2501, {%r10837, %r10836};
	shf.r.wrap.b32 	%r10838, %r10445, %r10444, 8;
	shf.r.wrap.b32 	%r10839, %r10444, %r10445, 8;
	mov.b64 	%rd2502, {%r10839, %r10838};
	shr.u64 	%rd2503, %rd1929, 7;
	xor.b64  	%rd2504, %rd2501, %rd2503;
	xor.b64  	%rd2505, %rd2504, %rd2502;
	add.s64 	%rd2506, %rd2033, %rd1916;
	add.s64 	%rd2507, %rd2506, %rd2500;
	add.s64 	%rd2508, %rd2507, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10840,%dummy}, %rd2495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10841}, %rd2495;
	}
	shf.r.wrap.b32 	%r10842, %r10841, %r10840, 19;
	shf.r.wrap.b32 	%r10843, %r10840, %r10841, 19;
	mov.b64 	%rd2509, {%r10843, %r10842};
	shf.l.wrap.b32 	%r10844, %r10840, %r10841, 3;
	shf.l.wrap.b32 	%r10845, %r10841, %r10840, 3;
	mov.b64 	%rd2510, {%r10845, %r10844};
	shr.u64 	%rd2511, %rd2495, 6;
	xor.b64  	%rd2512, %rd2509, %rd2511;
	xor.b64  	%rd2513, %rd2512, %rd2510;
	shf.r.wrap.b32 	%r10846, %r10455, %r10454, 1;
	shf.r.wrap.b32 	%r10847, %r10454, %r10455, 1;
	mov.b64 	%rd2514, {%r10847, %r10846};
	shf.r.wrap.b32 	%r10848, %r10455, %r10454, 8;
	shf.r.wrap.b32 	%r10849, %r10454, %r10455, 8;
	mov.b64 	%rd2515, {%r10849, %r10848};
	shr.u64 	%rd2516, %rd1942, 7;
	xor.b64  	%rd2517, %rd2514, %rd2516;
	xor.b64  	%rd2518, %rd2517, %rd2515;
	add.s64 	%rd2519, %rd2046, %rd1929;
	add.s64 	%rd2520, %rd2519, %rd2513;
	add.s64 	%rd2521, %rd2520, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10850,%dummy}, %rd2508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10851}, %rd2508;
	}
	shf.r.wrap.b32 	%r10852, %r10851, %r10850, 19;
	shf.r.wrap.b32 	%r10853, %r10850, %r10851, 19;
	mov.b64 	%rd2522, {%r10853, %r10852};
	shf.l.wrap.b32 	%r10854, %r10850, %r10851, 3;
	shf.l.wrap.b32 	%r10855, %r10851, %r10850, 3;
	mov.b64 	%rd2523, {%r10855, %r10854};
	shr.u64 	%rd2524, %rd2508, 6;
	xor.b64  	%rd2525, %rd2522, %rd2524;
	xor.b64  	%rd2526, %rd2525, %rd2523;
	shf.r.wrap.b32 	%r10856, %r10465, %r10464, 1;
	shf.r.wrap.b32 	%r10857, %r10464, %r10465, 1;
	mov.b64 	%rd2527, {%r10857, %r10856};
	shf.r.wrap.b32 	%r10858, %r10465, %r10464, 8;
	shf.r.wrap.b32 	%r10859, %r10464, %r10465, 8;
	mov.b64 	%rd2528, {%r10859, %r10858};
	shr.u64 	%rd2529, %rd1955, 7;
	xor.b64  	%rd2530, %rd2527, %rd2529;
	xor.b64  	%rd2531, %rd2530, %rd2528;
	add.s64 	%rd2532, %rd2059, %rd1942;
	add.s64 	%rd2533, %rd2532, %rd2526;
	add.s64 	%rd2534, %rd2533, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10860,%dummy}, %rd2521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10861}, %rd2521;
	}
	shf.r.wrap.b32 	%r10862, %r10861, %r10860, 19;
	shf.r.wrap.b32 	%r10863, %r10860, %r10861, 19;
	mov.b64 	%rd2535, {%r10863, %r10862};
	shf.l.wrap.b32 	%r10864, %r10860, %r10861, 3;
	shf.l.wrap.b32 	%r10865, %r10861, %r10860, 3;
	mov.b64 	%rd2536, {%r10865, %r10864};
	shr.u64 	%rd2537, %rd2521, 6;
	xor.b64  	%rd2538, %rd2535, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2536;
	shf.r.wrap.b32 	%r10866, %r10475, %r10474, 1;
	shf.r.wrap.b32 	%r10867, %r10474, %r10475, 1;
	mov.b64 	%rd2540, {%r10867, %r10866};
	shf.r.wrap.b32 	%r10868, %r10475, %r10474, 8;
	shf.r.wrap.b32 	%r10869, %r10474, %r10475, 8;
	mov.b64 	%rd2541, {%r10869, %r10868};
	shr.u64 	%rd2542, %rd1968, 7;
	xor.b64  	%rd2543, %rd2540, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2541;
	add.s64 	%rd2545, %rd2456, %rd1955;
	add.s64 	%rd2546, %rd2545, %rd2539;
	add.s64 	%rd2547, %rd2546, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10870,%dummy}, %rd2534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10871}, %rd2534;
	}
	shf.r.wrap.b32 	%r10872, %r10871, %r10870, 19;
	shf.r.wrap.b32 	%r10873, %r10870, %r10871, 19;
	mov.b64 	%rd2548, {%r10873, %r10872};
	shf.l.wrap.b32 	%r10874, %r10870, %r10871, 3;
	shf.l.wrap.b32 	%r10875, %r10871, %r10870, 3;
	mov.b64 	%rd2549, {%r10875, %r10874};
	shr.u64 	%rd2550, %rd2534, 6;
	xor.b64  	%rd2551, %rd2548, %rd2550;
	xor.b64  	%rd2552, %rd2551, %rd2549;
	shf.r.wrap.b32 	%r10876, %r10485, %r10484, 1;
	shf.r.wrap.b32 	%r10877, %r10484, %r10485, 1;
	mov.b64 	%rd2553, {%r10877, %r10876};
	shf.r.wrap.b32 	%r10878, %r10485, %r10484, 8;
	shf.r.wrap.b32 	%r10879, %r10484, %r10485, 8;
	mov.b64 	%rd2554, {%r10879, %r10878};
	shr.u64 	%rd2555, %rd1981, 7;
	xor.b64  	%rd2556, %rd2553, %rd2555;
	xor.b64  	%rd2557, %rd2556, %rd2554;
	add.s64 	%rd2558, %rd2469, %rd1968;
	add.s64 	%rd2559, %rd2558, %rd2552;
	add.s64 	%rd2560, %rd2559, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10880,%dummy}, %rd2547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10881}, %rd2547;
	}
	shf.r.wrap.b32 	%r10882, %r10881, %r10880, 19;
	shf.r.wrap.b32 	%r10883, %r10880, %r10881, 19;
	mov.b64 	%rd2561, {%r10883, %r10882};
	shf.l.wrap.b32 	%r10884, %r10880, %r10881, 3;
	shf.l.wrap.b32 	%r10885, %r10881, %r10880, 3;
	mov.b64 	%rd2562, {%r10885, %r10884};
	shr.u64 	%rd2563, %rd2547, 6;
	xor.b64  	%rd2564, %rd2561, %rd2563;
	xor.b64  	%rd2565, %rd2564, %rd2562;
	shf.r.wrap.b32 	%r10886, %r10495, %r10494, 1;
	shf.r.wrap.b32 	%r10887, %r10494, %r10495, 1;
	mov.b64 	%rd2566, {%r10887, %r10886};
	shf.r.wrap.b32 	%r10888, %r10495, %r10494, 8;
	shf.r.wrap.b32 	%r10889, %r10494, %r10495, 8;
	mov.b64 	%rd2567, {%r10889, %r10888};
	shr.u64 	%rd2568, %rd1994, 7;
	xor.b64  	%rd2569, %rd2566, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2567;
	add.s64 	%rd2571, %rd2482, %rd1981;
	add.s64 	%rd2572, %rd2571, %rd2565;
	add.s64 	%rd2573, %rd2572, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10890,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10891}, %rd2560;
	}
	shf.r.wrap.b32 	%r10892, %r10891, %r10890, 19;
	shf.r.wrap.b32 	%r10893, %r10890, %r10891, 19;
	mov.b64 	%rd2574, {%r10893, %r10892};
	shf.l.wrap.b32 	%r10894, %r10890, %r10891, 3;
	shf.l.wrap.b32 	%r10895, %r10891, %r10890, 3;
	mov.b64 	%rd2575, {%r10895, %r10894};
	shr.u64 	%rd2576, %rd2560, 6;
	xor.b64  	%rd2577, %rd2574, %rd2576;
	xor.b64  	%rd2578, %rd2577, %rd2575;
	shf.r.wrap.b32 	%r10896, %r10505, %r10504, 1;
	shf.r.wrap.b32 	%r10897, %r10504, %r10505, 1;
	mov.b64 	%rd2579, {%r10897, %r10896};
	shf.r.wrap.b32 	%r10898, %r10505, %r10504, 8;
	shf.r.wrap.b32 	%r10899, %r10504, %r10505, 8;
	mov.b64 	%rd2580, {%r10899, %r10898};
	shr.u64 	%rd2581, %rd2007, 7;
	xor.b64  	%rd2582, %rd2579, %rd2581;
	xor.b64  	%rd2583, %rd2582, %rd2580;
	add.s64 	%rd2584, %rd2495, %rd1994;
	add.s64 	%rd2585, %rd2584, %rd2578;
	add.s64 	%rd2586, %rd2585, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10900,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10901}, %rd2573;
	}
	shf.r.wrap.b32 	%r10902, %r10901, %r10900, 19;
	shf.r.wrap.b32 	%r10903, %r10900, %r10901, 19;
	mov.b64 	%rd2587, {%r10903, %r10902};
	shf.l.wrap.b32 	%r10904, %r10900, %r10901, 3;
	shf.l.wrap.b32 	%r10905, %r10901, %r10900, 3;
	mov.b64 	%rd2588, {%r10905, %r10904};
	shr.u64 	%rd2589, %rd2573, 6;
	xor.b64  	%rd2590, %rd2587, %rd2589;
	xor.b64  	%rd2591, %rd2590, %rd2588;
	shf.r.wrap.b32 	%r10906, %r10515, %r10514, 1;
	shf.r.wrap.b32 	%r10907, %r10514, %r10515, 1;
	mov.b64 	%rd2592, {%r10907, %r10906};
	shf.r.wrap.b32 	%r10908, %r10515, %r10514, 8;
	shf.r.wrap.b32 	%r10909, %r10514, %r10515, 8;
	mov.b64 	%rd2593, {%r10909, %r10908};
	shr.u64 	%rd2594, %rd2020, 7;
	xor.b64  	%rd2595, %rd2592, %rd2594;
	xor.b64  	%rd2596, %rd2595, %rd2593;
	add.s64 	%rd2597, %rd2508, %rd2007;
	add.s64 	%rd2598, %rd2597, %rd2591;
	add.s64 	%rd2599, %rd2598, %rd2596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10910,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10911}, %rd2586;
	}
	shf.r.wrap.b32 	%r10912, %r10911, %r10910, 19;
	shf.r.wrap.b32 	%r10913, %r10910, %r10911, 19;
	mov.b64 	%rd2600, {%r10913, %r10912};
	shf.l.wrap.b32 	%r10914, %r10910, %r10911, 3;
	shf.l.wrap.b32 	%r10915, %r10911, %r10910, 3;
	mov.b64 	%rd2601, {%r10915, %r10914};
	shr.u64 	%rd2602, %rd2586, 6;
	xor.b64  	%rd2603, %rd2600, %rd2602;
	xor.b64  	%rd2604, %rd2603, %rd2601;
	shf.r.wrap.b32 	%r10916, %r10525, %r10524, 1;
	shf.r.wrap.b32 	%r10917, %r10524, %r10525, 1;
	mov.b64 	%rd2605, {%r10917, %r10916};
	shf.r.wrap.b32 	%r10918, %r10525, %r10524, 8;
	shf.r.wrap.b32 	%r10919, %r10524, %r10525, 8;
	mov.b64 	%rd2606, {%r10919, %r10918};
	shr.u64 	%rd2607, %rd2033, 7;
	xor.b64  	%rd2608, %rd2605, %rd2607;
	xor.b64  	%rd2609, %rd2608, %rd2606;
	add.s64 	%rd2610, %rd2521, %rd2020;
	add.s64 	%rd2611, %rd2610, %rd2604;
	add.s64 	%rd2612, %rd2611, %rd2609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10920,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10921}, %rd2599;
	}
	shf.r.wrap.b32 	%r10922, %r10921, %r10920, 19;
	shf.r.wrap.b32 	%r10923, %r10920, %r10921, 19;
	mov.b64 	%rd2613, {%r10923, %r10922};
	shf.l.wrap.b32 	%r10924, %r10920, %r10921, 3;
	shf.l.wrap.b32 	%r10925, %r10921, %r10920, 3;
	mov.b64 	%rd2614, {%r10925, %r10924};
	shr.u64 	%rd2615, %rd2599, 6;
	xor.b64  	%rd2616, %rd2613, %rd2615;
	xor.b64  	%rd2617, %rd2616, %rd2614;
	shf.r.wrap.b32 	%r10926, %r10791, %r10790, 1;
	shf.r.wrap.b32 	%r10927, %r10790, %r10791, 1;
	mov.b64 	%rd2618, {%r10927, %r10926};
	shf.r.wrap.b32 	%r10928, %r10791, %r10790, 8;
	shf.r.wrap.b32 	%r10929, %r10790, %r10791, 8;
	mov.b64 	%rd2619, {%r10929, %r10928};
	shr.u64 	%rd2620, %rd2046, 7;
	xor.b64  	%rd2621, %rd2618, %rd2620;
	xor.b64  	%rd2622, %rd2621, %rd2619;
	add.s64 	%rd2623, %rd2534, %rd2033;
	add.s64 	%rd2624, %rd2623, %rd2617;
	add.s64 	%rd2625, %rd2624, %rd2622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10930,%dummy}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10931}, %rd2612;
	}
	shf.r.wrap.b32 	%r10932, %r10931, %r10930, 19;
	shf.r.wrap.b32 	%r10933, %r10930, %r10931, 19;
	mov.b64 	%rd2626, {%r10933, %r10932};
	shf.l.wrap.b32 	%r10934, %r10930, %r10931, 3;
	shf.l.wrap.b32 	%r10935, %r10931, %r10930, 3;
	mov.b64 	%rd2627, {%r10935, %r10934};
	shr.u64 	%rd2628, %rd2612, 6;
	xor.b64  	%rd2629, %rd2626, %rd2628;
	xor.b64  	%rd2630, %rd2629, %rd2627;
	shf.r.wrap.b32 	%r10936, %r10801, %r10800, 1;
	shf.r.wrap.b32 	%r10937, %r10800, %r10801, 1;
	mov.b64 	%rd2631, {%r10937, %r10936};
	shf.r.wrap.b32 	%r10938, %r10801, %r10800, 8;
	shf.r.wrap.b32 	%r10939, %r10800, %r10801, 8;
	mov.b64 	%rd2632, {%r10939, %r10938};
	shr.u64 	%rd2633, %rd2059, 7;
	xor.b64  	%rd2634, %rd2631, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10940,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10941}, %rd2625;
	}
	shf.r.wrap.b32 	%r10942, %r10941, %r10940, 19;
	shf.r.wrap.b32 	%r10943, %r10940, %r10941, 19;
	mov.b64 	%rd2636, {%r10943, %r10942};
	shf.l.wrap.b32 	%r10944, %r10940, %r10941, 3;
	shf.l.wrap.b32 	%r10945, %r10941, %r10940, 3;
	mov.b64 	%rd2637, {%r10945, %r10944};
	shr.u64 	%rd2638, %rd2625, 6;
	xor.b64  	%rd2639, %rd2636, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2637;
	shf.r.wrap.b32 	%r10946, %r10811, %r10810, 1;
	shf.r.wrap.b32 	%r10947, %r10810, %r10811, 1;
	mov.b64 	%rd2641, {%r10947, %r10946};
	shf.r.wrap.b32 	%r10948, %r10811, %r10810, 8;
	shf.r.wrap.b32 	%r10949, %r10810, %r10811, 8;
	mov.b64 	%rd2642, {%r10949, %r10948};
	shr.u64 	%rd2643, %rd2456, 7;
	xor.b64  	%rd2644, %rd2641, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10950,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10951}, %rd2432;
	}
	shf.r.wrap.b32 	%r10952, %r10951, %r10950, 14;
	shf.r.wrap.b32 	%r10953, %r10950, %r10951, 14;
	mov.b64 	%rd2646, {%r10953, %r10952};
	shf.r.wrap.b32 	%r10954, %r10951, %r10950, 18;
	shf.r.wrap.b32 	%r10955, %r10950, %r10951, 18;
	mov.b64 	%rd2647, {%r10955, %r10954};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r10956, %r10950, %r10951, 23;
	shf.l.wrap.b32 	%r10957, %r10951, %r10950, 23;
	mov.b64 	%rd2649, {%r10957, %r10956};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2408, %rd2384;
	and.b64  	%rd2652, %rd2432, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2384;
	add.s64 	%rd2654, %rd2653, %rd2360;
	add.s64 	%rd2655, %rd2654, %rd2456;
	add.s64 	%rd2656, %rd2655, %rd92;
	add.s64 	%rd2657, %rd2656, %rd2650;
	add.s64 	%rd2658, %rd2657, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10958,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd2443;
	}
	shf.r.wrap.b32 	%r10960, %r10959, %r10958, 28;
	shf.r.wrap.b32 	%r10961, %r10958, %r10959, 28;
	mov.b64 	%rd2659, {%r10961, %r10960};
	shf.l.wrap.b32 	%r10962, %r10958, %r10959, 30;
	shf.l.wrap.b32 	%r10963, %r10959, %r10958, 30;
	mov.b64 	%rd2660, {%r10963, %r10962};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r10964, %r10958, %r10959, 25;
	shf.l.wrap.b32 	%r10965, %r10959, %r10958, 25;
	mov.b64 	%rd2662, {%r10965, %r10964};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	and.b64  	%rd2664, %rd2443, %rd2419;
	xor.b64  	%rd2665, %rd2443, %rd2419;
	and.b64  	%rd2666, %rd2665, %rd2395;
	or.b64  	%rd2667, %rd2666, %rd2664;
	add.s64 	%rd2668, %rd2657, %rd2667;
	add.s64 	%rd2669, %rd2668, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10966,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10967}, %rd2658;
	}
	shf.r.wrap.b32 	%r10968, %r10967, %r10966, 14;
	shf.r.wrap.b32 	%r10969, %r10966, %r10967, 14;
	mov.b64 	%rd2670, {%r10969, %r10968};
	shf.r.wrap.b32 	%r10970, %r10967, %r10966, 18;
	shf.r.wrap.b32 	%r10971, %r10966, %r10967, 18;
	mov.b64 	%rd2671, {%r10971, %r10970};
	xor.b64  	%rd2672, %rd2671, %rd2670;
	shf.l.wrap.b32 	%r10972, %r10966, %r10967, 23;
	shf.l.wrap.b32 	%r10973, %r10967, %r10966, 23;
	mov.b64 	%rd2673, {%r10973, %r10972};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	xor.b64  	%rd2675, %rd2432, %rd2408;
	and.b64  	%rd2676, %rd2658, %rd2675;
	xor.b64  	%rd2677, %rd2676, %rd2408;
	add.s64 	%rd2678, %rd2469, %rd2384;
	add.s64 	%rd2679, %rd2678, %rd93;
	add.s64 	%rd2680, %rd2679, %rd2677;
	add.s64 	%rd2681, %rd2680, %rd2674;
	add.s64 	%rd2682, %rd2681, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10974,%dummy}, %rd2669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10975}, %rd2669;
	}
	shf.r.wrap.b32 	%r10976, %r10975, %r10974, 28;
	shf.r.wrap.b32 	%r10977, %r10974, %r10975, 28;
	mov.b64 	%rd2683, {%r10977, %r10976};
	shf.l.wrap.b32 	%r10978, %r10974, %r10975, 30;
	shf.l.wrap.b32 	%r10979, %r10975, %r10974, 30;
	mov.b64 	%rd2684, {%r10979, %r10978};
	xor.b64  	%rd2685, %rd2684, %rd2683;
	shf.l.wrap.b32 	%r10980, %r10974, %r10975, 25;
	shf.l.wrap.b32 	%r10981, %r10975, %r10974, 25;
	mov.b64 	%rd2686, {%r10981, %r10980};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	and.b64  	%rd2688, %rd2669, %rd2443;
	xor.b64  	%rd2689, %rd2669, %rd2443;
	and.b64  	%rd2690, %rd2689, %rd2419;
	or.b64  	%rd2691, %rd2690, %rd2688;
	add.s64 	%rd2692, %rd2681, %rd2691;
	add.s64 	%rd2693, %rd2692, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10982,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10983}, %rd2682;
	}
	shf.r.wrap.b32 	%r10984, %r10983, %r10982, 14;
	shf.r.wrap.b32 	%r10985, %r10982, %r10983, 14;
	mov.b64 	%rd2694, {%r10985, %r10984};
	shf.r.wrap.b32 	%r10986, %r10983, %r10982, 18;
	shf.r.wrap.b32 	%r10987, %r10982, %r10983, 18;
	mov.b64 	%rd2695, {%r10987, %r10986};
	xor.b64  	%rd2696, %rd2695, %rd2694;
	shf.l.wrap.b32 	%r10988, %r10982, %r10983, 23;
	shf.l.wrap.b32 	%r10989, %r10983, %r10982, 23;
	mov.b64 	%rd2697, {%r10989, %r10988};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	xor.b64  	%rd2699, %rd2658, %rd2432;
	and.b64  	%rd2700, %rd2682, %rd2699;
	xor.b64  	%rd2701, %rd2700, %rd2432;
	add.s64 	%rd2702, %rd2482, %rd2408;
	add.s64 	%rd2703, %rd2702, %rd94;
	add.s64 	%rd2704, %rd2703, %rd2701;
	add.s64 	%rd2705, %rd2704, %rd2698;
	add.s64 	%rd2706, %rd2705, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10990,%dummy}, %rd2693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10991}, %rd2693;
	}
	shf.r.wrap.b32 	%r10992, %r10991, %r10990, 28;
	shf.r.wrap.b32 	%r10993, %r10990, %r10991, 28;
	mov.b64 	%rd2707, {%r10993, %r10992};
	shf.l.wrap.b32 	%r10994, %r10990, %r10991, 30;
	shf.l.wrap.b32 	%r10995, %r10991, %r10990, 30;
	mov.b64 	%rd2708, {%r10995, %r10994};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shf.l.wrap.b32 	%r10996, %r10990, %r10991, 25;
	shf.l.wrap.b32 	%r10997, %r10991, %r10990, 25;
	mov.b64 	%rd2710, {%r10997, %r10996};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	and.b64  	%rd2712, %rd2693, %rd2669;
	xor.b64  	%rd2713, %rd2693, %rd2669;
	and.b64  	%rd2714, %rd2713, %rd2443;
	or.b64  	%rd2715, %rd2714, %rd2712;
	add.s64 	%rd2716, %rd2705, %rd2715;
	add.s64 	%rd2717, %rd2716, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10998,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10999}, %rd2706;
	}
	shf.r.wrap.b32 	%r11000, %r10999, %r10998, 14;
	shf.r.wrap.b32 	%r11001, %r10998, %r10999, 14;
	mov.b64 	%rd2718, {%r11001, %r11000};
	shf.r.wrap.b32 	%r11002, %r10999, %r10998, 18;
	shf.r.wrap.b32 	%r11003, %r10998, %r10999, 18;
	mov.b64 	%rd2719, {%r11003, %r11002};
	xor.b64  	%rd2720, %rd2719, %rd2718;
	shf.l.wrap.b32 	%r11004, %r10998, %r10999, 23;
	shf.l.wrap.b32 	%r11005, %r10999, %r10998, 23;
	mov.b64 	%rd2721, {%r11005, %r11004};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd2682, %rd2658;
	and.b64  	%rd2724, %rd2706, %rd2723;
	xor.b64  	%rd2725, %rd2724, %rd2658;
	add.s64 	%rd2726, %rd2495, %rd2432;
	add.s64 	%rd2727, %rd2726, %rd95;
	add.s64 	%rd2728, %rd2727, %rd2725;
	add.s64 	%rd2729, %rd2728, %rd2722;
	add.s64 	%rd2730, %rd2729, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11006,%dummy}, %rd2717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11007}, %rd2717;
	}
	shf.r.wrap.b32 	%r11008, %r11007, %r11006, 28;
	shf.r.wrap.b32 	%r11009, %r11006, %r11007, 28;
	mov.b64 	%rd2731, {%r11009, %r11008};
	shf.l.wrap.b32 	%r11010, %r11006, %r11007, 30;
	shf.l.wrap.b32 	%r11011, %r11007, %r11006, 30;
	mov.b64 	%rd2732, {%r11011, %r11010};
	xor.b64  	%rd2733, %rd2732, %rd2731;
	shf.l.wrap.b32 	%r11012, %r11006, %r11007, 25;
	shf.l.wrap.b32 	%r11013, %r11007, %r11006, 25;
	mov.b64 	%rd2734, {%r11013, %r11012};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	and.b64  	%rd2736, %rd2717, %rd2693;
	xor.b64  	%rd2737, %rd2717, %rd2693;
	and.b64  	%rd2738, %rd2737, %rd2669;
	or.b64  	%rd2739, %rd2738, %rd2736;
	add.s64 	%rd2740, %rd2729, %rd2739;
	add.s64 	%rd2741, %rd2740, %rd2735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11014,%dummy}, %rd2730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11015}, %rd2730;
	}
	shf.r.wrap.b32 	%r11016, %r11015, %r11014, 14;
	shf.r.wrap.b32 	%r11017, %r11014, %r11015, 14;
	mov.b64 	%rd2742, {%r11017, %r11016};
	shf.r.wrap.b32 	%r11018, %r11015, %r11014, 18;
	shf.r.wrap.b32 	%r11019, %r11014, %r11015, 18;
	mov.b64 	%rd2743, {%r11019, %r11018};
	xor.b64  	%rd2744, %rd2743, %rd2742;
	shf.l.wrap.b32 	%r11020, %r11014, %r11015, 23;
	shf.l.wrap.b32 	%r11021, %r11015, %r11014, 23;
	mov.b64 	%rd2745, {%r11021, %r11020};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	xor.b64  	%rd2747, %rd2706, %rd2682;
	and.b64  	%rd2748, %rd2730, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2682;
	add.s64 	%rd2750, %rd2658, %rd2508;
	add.s64 	%rd2751, %rd2750, %rd96;
	add.s64 	%rd2752, %rd2751, %rd2749;
	add.s64 	%rd2753, %rd2752, %rd2746;
	add.s64 	%rd2754, %rd2753, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11022,%dummy}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11023}, %rd2741;
	}
	shf.r.wrap.b32 	%r11024, %r11023, %r11022, 28;
	shf.r.wrap.b32 	%r11025, %r11022, %r11023, 28;
	mov.b64 	%rd2755, {%r11025, %r11024};
	shf.l.wrap.b32 	%r11026, %r11022, %r11023, 30;
	shf.l.wrap.b32 	%r11027, %r11023, %r11022, 30;
	mov.b64 	%rd2756, {%r11027, %r11026};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r11028, %r11022, %r11023, 25;
	shf.l.wrap.b32 	%r11029, %r11023, %r11022, 25;
	mov.b64 	%rd2758, {%r11029, %r11028};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	and.b64  	%rd2760, %rd2741, %rd2717;
	xor.b64  	%rd2761, %rd2741, %rd2717;
	and.b64  	%rd2762, %rd2761, %rd2693;
	or.b64  	%rd2763, %rd2762, %rd2760;
	add.s64 	%rd2764, %rd2753, %rd2763;
	add.s64 	%rd2765, %rd2764, %rd2759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11030,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd2754;
	}
	shf.r.wrap.b32 	%r11032, %r11031, %r11030, 14;
	shf.r.wrap.b32 	%r11033, %r11030, %r11031, 14;
	mov.b64 	%rd2766, {%r11033, %r11032};
	shf.r.wrap.b32 	%r11034, %r11031, %r11030, 18;
	shf.r.wrap.b32 	%r11035, %r11030, %r11031, 18;
	mov.b64 	%rd2767, {%r11035, %r11034};
	xor.b64  	%rd2768, %rd2767, %rd2766;
	shf.l.wrap.b32 	%r11036, %r11030, %r11031, 23;
	shf.l.wrap.b32 	%r11037, %r11031, %r11030, 23;
	mov.b64 	%rd2769, {%r11037, %r11036};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	xor.b64  	%rd2771, %rd2730, %rd2706;
	and.b64  	%rd2772, %rd2754, %rd2771;
	xor.b64  	%rd2773, %rd2772, %rd2706;
	add.s64 	%rd2774, %rd2682, %rd2521;
	add.s64 	%rd2775, %rd2774, %rd97;
	add.s64 	%rd2776, %rd2775, %rd2773;
	add.s64 	%rd2777, %rd2776, %rd2770;
	add.s64 	%rd2778, %rd2777, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11038,%dummy}, %rd2765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11039}, %rd2765;
	}
	shf.r.wrap.b32 	%r11040, %r11039, %r11038, 28;
	shf.r.wrap.b32 	%r11041, %r11038, %r11039, 28;
	mov.b64 	%rd2779, {%r11041, %r11040};
	shf.l.wrap.b32 	%r11042, %r11038, %r11039, 30;
	shf.l.wrap.b32 	%r11043, %r11039, %r11038, 30;
	mov.b64 	%rd2780, {%r11043, %r11042};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r11044, %r11038, %r11039, 25;
	shf.l.wrap.b32 	%r11045, %r11039, %r11038, 25;
	mov.b64 	%rd2782, {%r11045, %r11044};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	and.b64  	%rd2784, %rd2765, %rd2741;
	xor.b64  	%rd2785, %rd2765, %rd2741;
	and.b64  	%rd2786, %rd2785, %rd2717;
	or.b64  	%rd2787, %rd2786, %rd2784;
	add.s64 	%rd2788, %rd2777, %rd2787;
	add.s64 	%rd2789, %rd2788, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11046,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd2778;
	}
	shf.r.wrap.b32 	%r11048, %r11047, %r11046, 14;
	shf.r.wrap.b32 	%r11049, %r11046, %r11047, 14;
	mov.b64 	%rd2790, {%r11049, %r11048};
	shf.r.wrap.b32 	%r11050, %r11047, %r11046, 18;
	shf.r.wrap.b32 	%r11051, %r11046, %r11047, 18;
	mov.b64 	%rd2791, {%r11051, %r11050};
	xor.b64  	%rd2792, %rd2791, %rd2790;
	shf.l.wrap.b32 	%r11052, %r11046, %r11047, 23;
	shf.l.wrap.b32 	%r11053, %r11047, %r11046, 23;
	mov.b64 	%rd2793, {%r11053, %r11052};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	xor.b64  	%rd2795, %rd2754, %rd2730;
	and.b64  	%rd2796, %rd2778, %rd2795;
	xor.b64  	%rd2797, %rd2796, %rd2730;
	add.s64 	%rd2798, %rd2706, %rd2534;
	add.s64 	%rd2799, %rd2798, %rd98;
	add.s64 	%rd2800, %rd2799, %rd2797;
	add.s64 	%rd2801, %rd2800, %rd2794;
	add.s64 	%rd2802, %rd2801, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11054,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd2789;
	}
	shf.r.wrap.b32 	%r11056, %r11055, %r11054, 28;
	shf.r.wrap.b32 	%r11057, %r11054, %r11055, 28;
	mov.b64 	%rd2803, {%r11057, %r11056};
	shf.l.wrap.b32 	%r11058, %r11054, %r11055, 30;
	shf.l.wrap.b32 	%r11059, %r11055, %r11054, 30;
	mov.b64 	%rd2804, {%r11059, %r11058};
	xor.b64  	%rd2805, %rd2804, %rd2803;
	shf.l.wrap.b32 	%r11060, %r11054, %r11055, 25;
	shf.l.wrap.b32 	%r11061, %r11055, %r11054, 25;
	mov.b64 	%rd2806, {%r11061, %r11060};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	and.b64  	%rd2808, %rd2789, %rd2765;
	xor.b64  	%rd2809, %rd2789, %rd2765;
	and.b64  	%rd2810, %rd2809, %rd2741;
	or.b64  	%rd2811, %rd2810, %rd2808;
	add.s64 	%rd2812, %rd2801, %rd2811;
	add.s64 	%rd2813, %rd2812, %rd2807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11062,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11063}, %rd2802;
	}
	shf.r.wrap.b32 	%r11064, %r11063, %r11062, 14;
	shf.r.wrap.b32 	%r11065, %r11062, %r11063, 14;
	mov.b64 	%rd2814, {%r11065, %r11064};
	shf.r.wrap.b32 	%r11066, %r11063, %r11062, 18;
	shf.r.wrap.b32 	%r11067, %r11062, %r11063, 18;
	mov.b64 	%rd2815, {%r11067, %r11066};
	xor.b64  	%rd2816, %rd2815, %rd2814;
	shf.l.wrap.b32 	%r11068, %r11062, %r11063, 23;
	shf.l.wrap.b32 	%r11069, %r11063, %r11062, 23;
	mov.b64 	%rd2817, {%r11069, %r11068};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2778, %rd2754;
	and.b64  	%rd2820, %rd2802, %rd2819;
	xor.b64  	%rd2821, %rd2820, %rd2754;
	add.s64 	%rd2822, %rd2730, %rd2547;
	add.s64 	%rd2823, %rd2822, %rd99;
	add.s64 	%rd2824, %rd2823, %rd2821;
	add.s64 	%rd2825, %rd2824, %rd2818;
	add.s64 	%rd2826, %rd2825, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11070,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd2813;
	}
	shf.r.wrap.b32 	%r11072, %r11071, %r11070, 28;
	shf.r.wrap.b32 	%r11073, %r11070, %r11071, 28;
	mov.b64 	%rd2827, {%r11073, %r11072};
	shf.l.wrap.b32 	%r11074, %r11070, %r11071, 30;
	shf.l.wrap.b32 	%r11075, %r11071, %r11070, 30;
	mov.b64 	%rd2828, {%r11075, %r11074};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r11076, %r11070, %r11071, 25;
	shf.l.wrap.b32 	%r11077, %r11071, %r11070, 25;
	mov.b64 	%rd2830, {%r11077, %r11076};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	and.b64  	%rd2832, %rd2813, %rd2789;
	xor.b64  	%rd2833, %rd2813, %rd2789;
	and.b64  	%rd2834, %rd2833, %rd2765;
	or.b64  	%rd2835, %rd2834, %rd2832;
	add.s64 	%rd2836, %rd2825, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11078,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11079}, %rd2826;
	}
	shf.r.wrap.b32 	%r11080, %r11079, %r11078, 14;
	shf.r.wrap.b32 	%r11081, %r11078, %r11079, 14;
	mov.b64 	%rd2838, {%r11081, %r11080};
	shf.r.wrap.b32 	%r11082, %r11079, %r11078, 18;
	shf.r.wrap.b32 	%r11083, %r11078, %r11079, 18;
	mov.b64 	%rd2839, {%r11083, %r11082};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shf.l.wrap.b32 	%r11084, %r11078, %r11079, 23;
	shf.l.wrap.b32 	%r11085, %r11079, %r11078, 23;
	mov.b64 	%rd2841, {%r11085, %r11084};
	xor.b64  	%rd2842, %rd2840, %rd2841;
	xor.b64  	%rd2843, %rd2802, %rd2778;
	and.b64  	%rd2844, %rd2826, %rd2843;
	xor.b64  	%rd2845, %rd2844, %rd2778;
	add.s64 	%rd2846, %rd2754, %rd2560;
	add.s64 	%rd2847, %rd2846, %rd100;
	add.s64 	%rd2848, %rd2847, %rd2845;
	add.s64 	%rd2849, %rd2848, %rd2842;
	add.s64 	%rd2850, %rd2849, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11086,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11087}, %rd2837;
	}
	shf.r.wrap.b32 	%r11088, %r11087, %r11086, 28;
	shf.r.wrap.b32 	%r11089, %r11086, %r11087, 28;
	mov.b64 	%rd2851, {%r11089, %r11088};
	shf.l.wrap.b32 	%r11090, %r11086, %r11087, 30;
	shf.l.wrap.b32 	%r11091, %r11087, %r11086, 30;
	mov.b64 	%rd2852, {%r11091, %r11090};
	xor.b64  	%rd2853, %rd2852, %rd2851;
	shf.l.wrap.b32 	%r11092, %r11086, %r11087, 25;
	shf.l.wrap.b32 	%r11093, %r11087, %r11086, 25;
	mov.b64 	%rd2854, {%r11093, %r11092};
	xor.b64  	%rd2855, %rd2853, %rd2854;
	and.b64  	%rd2856, %rd2837, %rd2813;
	xor.b64  	%rd2857, %rd2837, %rd2813;
	and.b64  	%rd2858, %rd2857, %rd2789;
	or.b64  	%rd2859, %rd2858, %rd2856;
	add.s64 	%rd2860, %rd2849, %rd2859;
	add.s64 	%rd2861, %rd2860, %rd2855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11094,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11095}, %rd2850;
	}
	shf.r.wrap.b32 	%r11096, %r11095, %r11094, 14;
	shf.r.wrap.b32 	%r11097, %r11094, %r11095, 14;
	mov.b64 	%rd2862, {%r11097, %r11096};
	shf.r.wrap.b32 	%r11098, %r11095, %r11094, 18;
	shf.r.wrap.b32 	%r11099, %r11094, %r11095, 18;
	mov.b64 	%rd2863, {%r11099, %r11098};
	xor.b64  	%rd2864, %rd2863, %rd2862;
	shf.l.wrap.b32 	%r11100, %r11094, %r11095, 23;
	shf.l.wrap.b32 	%r11101, %r11095, %r11094, 23;
	mov.b64 	%rd2865, {%r11101, %r11100};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	xor.b64  	%rd2867, %rd2826, %rd2802;
	and.b64  	%rd2868, %rd2850, %rd2867;
	xor.b64  	%rd2869, %rd2868, %rd2802;
	add.s64 	%rd2870, %rd2778, %rd2573;
	add.s64 	%rd2871, %rd2870, %rd101;
	add.s64 	%rd2872, %rd2871, %rd2869;
	add.s64 	%rd2873, %rd2872, %rd2866;
	add.s64 	%rd2874, %rd2873, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11102,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11103}, %rd2861;
	}
	shf.r.wrap.b32 	%r11104, %r11103, %r11102, 28;
	shf.r.wrap.b32 	%r11105, %r11102, %r11103, 28;
	mov.b64 	%rd2875, {%r11105, %r11104};
	shf.l.wrap.b32 	%r11106, %r11102, %r11103, 30;
	shf.l.wrap.b32 	%r11107, %r11103, %r11102, 30;
	mov.b64 	%rd2876, {%r11107, %r11106};
	xor.b64  	%rd2877, %rd2876, %rd2875;
	shf.l.wrap.b32 	%r11108, %r11102, %r11103, 25;
	shf.l.wrap.b32 	%r11109, %r11103, %r11102, 25;
	mov.b64 	%rd2878, {%r11109, %r11108};
	xor.b64  	%rd2879, %rd2877, %rd2878;
	and.b64  	%rd2880, %rd2861, %rd2837;
	xor.b64  	%rd2881, %rd2861, %rd2837;
	and.b64  	%rd2882, %rd2881, %rd2813;
	or.b64  	%rd2883, %rd2882, %rd2880;
	add.s64 	%rd2884, %rd2873, %rd2883;
	add.s64 	%rd2885, %rd2884, %rd2879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11110,%dummy}, %rd2874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd2874;
	}
	shf.r.wrap.b32 	%r11112, %r11111, %r11110, 14;
	shf.r.wrap.b32 	%r11113, %r11110, %r11111, 14;
	mov.b64 	%rd2886, {%r11113, %r11112};
	shf.r.wrap.b32 	%r11114, %r11111, %r11110, 18;
	shf.r.wrap.b32 	%r11115, %r11110, %r11111, 18;
	mov.b64 	%rd2887, {%r11115, %r11114};
	xor.b64  	%rd2888, %rd2887, %rd2886;
	shf.l.wrap.b32 	%r11116, %r11110, %r11111, 23;
	shf.l.wrap.b32 	%r11117, %r11111, %r11110, 23;
	mov.b64 	%rd2889, {%r11117, %r11116};
	xor.b64  	%rd2890, %rd2888, %rd2889;
	xor.b64  	%rd2891, %rd2850, %rd2826;
	and.b64  	%rd2892, %rd2874, %rd2891;
	xor.b64  	%rd2893, %rd2892, %rd2826;
	add.s64 	%rd2894, %rd2802, %rd2586;
	add.s64 	%rd2895, %rd2894, %rd102;
	add.s64 	%rd2896, %rd2895, %rd2893;
	add.s64 	%rd2897, %rd2896, %rd2890;
	add.s64 	%rd2898, %rd2897, %rd2813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11118,%dummy}, %rd2885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd2885;
	}
	shf.r.wrap.b32 	%r11120, %r11119, %r11118, 28;
	shf.r.wrap.b32 	%r11121, %r11118, %r11119, 28;
	mov.b64 	%rd2899, {%r11121, %r11120};
	shf.l.wrap.b32 	%r11122, %r11118, %r11119, 30;
	shf.l.wrap.b32 	%r11123, %r11119, %r11118, 30;
	mov.b64 	%rd2900, {%r11123, %r11122};
	xor.b64  	%rd2901, %rd2900, %rd2899;
	shf.l.wrap.b32 	%r11124, %r11118, %r11119, 25;
	shf.l.wrap.b32 	%r11125, %r11119, %r11118, 25;
	mov.b64 	%rd2902, {%r11125, %r11124};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	and.b64  	%rd2904, %rd2885, %rd2861;
	xor.b64  	%rd2905, %rd2885, %rd2861;
	and.b64  	%rd2906, %rd2905, %rd2837;
	or.b64  	%rd2907, %rd2906, %rd2904;
	add.s64 	%rd2908, %rd2897, %rd2907;
	add.s64 	%rd2909, %rd2908, %rd2903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11126,%dummy}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11127}, %rd2898;
	}
	shf.r.wrap.b32 	%r11128, %r11127, %r11126, 14;
	shf.r.wrap.b32 	%r11129, %r11126, %r11127, 14;
	mov.b64 	%rd2910, {%r11129, %r11128};
	shf.r.wrap.b32 	%r11130, %r11127, %r11126, 18;
	shf.r.wrap.b32 	%r11131, %r11126, %r11127, 18;
	mov.b64 	%rd2911, {%r11131, %r11130};
	xor.b64  	%rd2912, %rd2911, %rd2910;
	shf.l.wrap.b32 	%r11132, %r11126, %r11127, 23;
	shf.l.wrap.b32 	%r11133, %r11127, %r11126, 23;
	mov.b64 	%rd2913, {%r11133, %r11132};
	xor.b64  	%rd2914, %rd2912, %rd2913;
	xor.b64  	%rd2915, %rd2874, %rd2850;
	and.b64  	%rd2916, %rd2898, %rd2915;
	xor.b64  	%rd2917, %rd2916, %rd2850;
	add.s64 	%rd2918, %rd2826, %rd2599;
	add.s64 	%rd2919, %rd2918, %rd103;
	add.s64 	%rd2920, %rd2919, %rd2917;
	add.s64 	%rd2921, %rd2920, %rd2914;
	add.s64 	%rd2922, %rd2921, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11134,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd2909;
	}
	shf.r.wrap.b32 	%r11136, %r11135, %r11134, 28;
	shf.r.wrap.b32 	%r11137, %r11134, %r11135, 28;
	mov.b64 	%rd2923, {%r11137, %r11136};
	shf.l.wrap.b32 	%r11138, %r11134, %r11135, 30;
	shf.l.wrap.b32 	%r11139, %r11135, %r11134, 30;
	mov.b64 	%rd2924, {%r11139, %r11138};
	xor.b64  	%rd2925, %rd2924, %rd2923;
	shf.l.wrap.b32 	%r11140, %r11134, %r11135, 25;
	shf.l.wrap.b32 	%r11141, %r11135, %r11134, 25;
	mov.b64 	%rd2926, {%r11141, %r11140};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	and.b64  	%rd2928, %rd2909, %rd2885;
	xor.b64  	%rd2929, %rd2909, %rd2885;
	and.b64  	%rd2930, %rd2929, %rd2861;
	or.b64  	%rd2931, %rd2930, %rd2928;
	add.s64 	%rd2932, %rd2921, %rd2931;
	add.s64 	%rd2933, %rd2932, %rd2927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11142,%dummy}, %rd2922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd2922;
	}
	shf.r.wrap.b32 	%r11144, %r11143, %r11142, 14;
	shf.r.wrap.b32 	%r11145, %r11142, %r11143, 14;
	mov.b64 	%rd2934, {%r11145, %r11144};
	shf.r.wrap.b32 	%r11146, %r11143, %r11142, 18;
	shf.r.wrap.b32 	%r11147, %r11142, %r11143, 18;
	mov.b64 	%rd2935, {%r11147, %r11146};
	xor.b64  	%rd2936, %rd2935, %rd2934;
	shf.l.wrap.b32 	%r11148, %r11142, %r11143, 23;
	shf.l.wrap.b32 	%r11149, %r11143, %r11142, 23;
	mov.b64 	%rd2937, {%r11149, %r11148};
	xor.b64  	%rd2938, %rd2936, %rd2937;
	xor.b64  	%rd2939, %rd2898, %rd2874;
	and.b64  	%rd2940, %rd2922, %rd2939;
	xor.b64  	%rd2941, %rd2940, %rd2874;
	add.s64 	%rd2942, %rd2850, %rd2612;
	add.s64 	%rd2943, %rd2942, %rd104;
	add.s64 	%rd2944, %rd2943, %rd2941;
	add.s64 	%rd2945, %rd2944, %rd2938;
	add.s64 	%rd2946, %rd2945, %rd2861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11150,%dummy}, %rd2933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11151}, %rd2933;
	}
	shf.r.wrap.b32 	%r11152, %r11151, %r11150, 28;
	shf.r.wrap.b32 	%r11153, %r11150, %r11151, 28;
	mov.b64 	%rd2947, {%r11153, %r11152};
	shf.l.wrap.b32 	%r11154, %r11150, %r11151, 30;
	shf.l.wrap.b32 	%r11155, %r11151, %r11150, 30;
	mov.b64 	%rd2948, {%r11155, %r11154};
	xor.b64  	%rd2949, %rd2948, %rd2947;
	shf.l.wrap.b32 	%r11156, %r11150, %r11151, 25;
	shf.l.wrap.b32 	%r11157, %r11151, %r11150, 25;
	mov.b64 	%rd2950, {%r11157, %r11156};
	xor.b64  	%rd2951, %rd2949, %rd2950;
	and.b64  	%rd2952, %rd2933, %rd2909;
	xor.b64  	%rd2953, %rd2933, %rd2909;
	and.b64  	%rd2954, %rd2953, %rd2885;
	or.b64  	%rd2955, %rd2954, %rd2952;
	add.s64 	%rd2956, %rd2945, %rd2955;
	add.s64 	%rd2957, %rd2956, %rd2951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11158,%dummy}, %rd2946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd2946;
	}
	shf.r.wrap.b32 	%r11160, %r11159, %r11158, 14;
	shf.r.wrap.b32 	%r11161, %r11158, %r11159, 14;
	mov.b64 	%rd2958, {%r11161, %r11160};
	shf.r.wrap.b32 	%r11162, %r11159, %r11158, 18;
	shf.r.wrap.b32 	%r11163, %r11158, %r11159, 18;
	mov.b64 	%rd2959, {%r11163, %r11162};
	xor.b64  	%rd2960, %rd2959, %rd2958;
	shf.l.wrap.b32 	%r11164, %r11158, %r11159, 23;
	shf.l.wrap.b32 	%r11165, %r11159, %r11158, 23;
	mov.b64 	%rd2961, {%r11165, %r11164};
	xor.b64  	%rd2962, %rd2960, %rd2961;
	xor.b64  	%rd2963, %rd2922, %rd2898;
	and.b64  	%rd2964, %rd2946, %rd2963;
	xor.b64  	%rd2965, %rd2964, %rd2898;
	add.s64 	%rd2966, %rd2874, %rd2625;
	add.s64 	%rd2967, %rd2966, %rd105;
	add.s64 	%rd2968, %rd2967, %rd2965;
	add.s64 	%rd2969, %rd2968, %rd2962;
	add.s64 	%rd2970, %rd2969, %rd2885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11166,%dummy}, %rd2957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11167}, %rd2957;
	}
	shf.r.wrap.b32 	%r11168, %r11167, %r11166, 28;
	shf.r.wrap.b32 	%r11169, %r11166, %r11167, 28;
	mov.b64 	%rd2971, {%r11169, %r11168};
	shf.l.wrap.b32 	%r11170, %r11166, %r11167, 30;
	shf.l.wrap.b32 	%r11171, %r11167, %r11166, 30;
	mov.b64 	%rd2972, {%r11171, %r11170};
	xor.b64  	%rd2973, %rd2972, %rd2971;
	shf.l.wrap.b32 	%r11172, %r11166, %r11167, 25;
	shf.l.wrap.b32 	%r11173, %r11167, %r11166, 25;
	mov.b64 	%rd2974, {%r11173, %r11172};
	xor.b64  	%rd2975, %rd2973, %rd2974;
	and.b64  	%rd2976, %rd2957, %rd2933;
	xor.b64  	%rd2977, %rd2957, %rd2933;
	and.b64  	%rd2978, %rd2977, %rd2909;
	or.b64  	%rd2979, %rd2978, %rd2976;
	add.s64 	%rd2980, %rd2969, %rd2979;
	add.s64 	%rd2981, %rd2980, %rd2975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11174,%dummy}, %rd2970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11175}, %rd2970;
	}
	shf.r.wrap.b32 	%r11176, %r11175, %r11174, 14;
	shf.r.wrap.b32 	%r11177, %r11174, %r11175, 14;
	mov.b64 	%rd2982, {%r11177, %r11176};
	shf.r.wrap.b32 	%r11178, %r11175, %r11174, 18;
	shf.r.wrap.b32 	%r11179, %r11174, %r11175, 18;
	mov.b64 	%rd2983, {%r11179, %r11178};
	xor.b64  	%rd2984, %rd2983, %rd2982;
	shf.l.wrap.b32 	%r11180, %r11174, %r11175, 23;
	shf.l.wrap.b32 	%r11181, %r11175, %r11174, 23;
	mov.b64 	%rd2985, {%r11181, %r11180};
	xor.b64  	%rd2986, %rd2984, %rd2985;
	xor.b64  	%rd2987, %rd2946, %rd2922;
	and.b64  	%rd2988, %rd2970, %rd2987;
	xor.b64  	%rd2989, %rd2988, %rd2922;
	add.s64 	%rd2990, %rd2547, %rd2046;
	add.s64 	%rd2991, %rd2990, %rd2630;
	add.s64 	%rd2992, %rd2991, %rd2635;
	add.s64 	%rd2993, %rd2992, %rd2898;
	add.s64 	%rd2994, %rd2993, %rd106;
	add.s64 	%rd2995, %rd2994, %rd2989;
	add.s64 	%rd2996, %rd2995, %rd2986;
	add.s64 	%rd2997, %rd2996, %rd2909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11182,%dummy}, %rd2981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11183}, %rd2981;
	}
	shf.r.wrap.b32 	%r11184, %r11183, %r11182, 28;
	shf.r.wrap.b32 	%r11185, %r11182, %r11183, 28;
	mov.b64 	%rd2998, {%r11185, %r11184};
	shf.l.wrap.b32 	%r11186, %r11182, %r11183, 30;
	shf.l.wrap.b32 	%r11187, %r11183, %r11182, 30;
	mov.b64 	%rd2999, {%r11187, %r11186};
	xor.b64  	%rd3000, %rd2999, %rd2998;
	shf.l.wrap.b32 	%r11188, %r11182, %r11183, 25;
	shf.l.wrap.b32 	%r11189, %r11183, %r11182, 25;
	mov.b64 	%rd3001, {%r11189, %r11188};
	xor.b64  	%rd3002, %rd3000, %rd3001;
	and.b64  	%rd3003, %rd2981, %rd2957;
	xor.b64  	%rd3004, %rd2981, %rd2957;
	and.b64  	%rd3005, %rd3004, %rd2933;
	or.b64  	%rd3006, %rd3005, %rd3003;
	add.s64 	%rd3007, %rd2996, %rd3006;
	add.s64 	%rd3008, %rd3007, %rd3002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11190,%dummy}, %rd2997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11191}, %rd2997;
	}
	shf.r.wrap.b32 	%r11192, %r11191, %r11190, 14;
	shf.r.wrap.b32 	%r11193, %r11190, %r11191, 14;
	mov.b64 	%rd3009, {%r11193, %r11192};
	shf.r.wrap.b32 	%r11194, %r11191, %r11190, 18;
	shf.r.wrap.b32 	%r11195, %r11190, %r11191, 18;
	mov.b64 	%rd3010, {%r11195, %r11194};
	xor.b64  	%rd3011, %rd3010, %rd3009;
	shf.l.wrap.b32 	%r11196, %r11190, %r11191, 23;
	shf.l.wrap.b32 	%r11197, %r11191, %r11190, 23;
	mov.b64 	%rd3012, {%r11197, %r11196};
	xor.b64  	%rd3013, %rd3011, %rd3012;
	xor.b64  	%rd3014, %rd2970, %rd2946;
	and.b64  	%rd3015, %rd2997, %rd3014;
	xor.b64  	%rd3016, %rd3015, %rd2946;
	add.s64 	%rd3017, %rd2560, %rd2059;
	add.s64 	%rd3018, %rd3017, %rd2640;
	add.s64 	%rd3019, %rd3018, %rd2645;
	add.s64 	%rd3020, %rd3019, %rd2922;
	add.s64 	%rd3021, %rd3020, %rd107;
	add.s64 	%rd3022, %rd3021, %rd3016;
	add.s64 	%rd3023, %rd3022, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11198,%dummy}, %rd3008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11199}, %rd3008;
	}
	shf.r.wrap.b32 	%r11200, %r11199, %r11198, 28;
	shf.r.wrap.b32 	%r11201, %r11198, %r11199, 28;
	mov.b64 	%rd3024, {%r11201, %r11200};
	shf.l.wrap.b32 	%r11202, %r11198, %r11199, 30;
	shf.l.wrap.b32 	%r11203, %r11199, %r11198, 30;
	mov.b64 	%rd3025, {%r11203, %r11202};
	xor.b64  	%rd3026, %rd3025, %rd3024;
	shf.l.wrap.b32 	%r11204, %r11198, %r11199, 25;
	shf.l.wrap.b32 	%r11205, %r11199, %r11198, 25;
	mov.b64 	%rd3027, {%r11205, %r11204};
	xor.b64  	%rd3028, %rd3026, %rd3027;
	and.b64  	%rd3029, %rd3008, %rd2981;
	xor.b64  	%rd3030, %rd3008, %rd2981;
	and.b64  	%rd3031, %rd3030, %rd2957;
	or.b64  	%rd3032, %rd3031, %rd3029;
	add.s64 	%rd3033, %rd3032, %rd294;
	add.s64 	%rd3034, %rd3033, %rd3023;
	add.s64 	%rd3035, %rd3034, %rd3028;
	st.local.u64 	[%rd9], %rd3035;
	add.s64 	%rd3036, %rd3008, %rd300;
	st.local.u64 	[%rd9+8], %rd3036;
	add.s64 	%rd3037, %rd2981, %rd303;
	st.local.u64 	[%rd9+16], %rd3037;
	add.s64 	%rd3038, %rd2957, %rd292;
	st.local.u64 	[%rd9+24], %rd3038;
	add.s64 	%rd3039, %rd2933, %rd276;
	add.s64 	%rd3040, %rd3039, %rd3023;
	st.local.u64 	[%rd9+32], %rd3040;
	add.s64 	%rd3041, %rd2997, %rd283;
	st.local.u64 	[%rd9+40], %rd3041;
	add.s64 	%rd3042, %rd2970, %rd282;
	st.local.u64 	[%rd9+48], %rd3042;
	add.s64 	%rd3043, %rd2946, %rd288;
	st.local.u64 	[%rd9+56], %rd3043;
	st.local.v2.u32 	[%rd9+64], {%r39262, %r39261};
	st.local.v2.u32 	[%rd9+72], {%r39260, %r39259};
	st.local.v2.u32 	[%rd9+80], {%r39266, %r39265};
	st.local.v2.u32 	[%rd9+88], {%r39264, %r39263};
	st.local.v2.u32 	[%rd9+96], {%r39270, %r39269};
	st.local.v2.u32 	[%rd9+104], {%r39268, %r39267};
	st.local.v2.u32 	[%rd9+112], {%r39274, %r39273};
	st.local.v2.u32 	[%rd9+120], {%r39272, %r39271};
	st.local.v2.u32 	[%rd9+128], {%r39278, %r39277};
	st.local.v2.u32 	[%rd9+136], {%r39276, %r39275};
	st.local.v2.u32 	[%rd9+144], {%r39282, %r39281};
	st.local.v2.u32 	[%rd9+152], {%r39280, %r39279};
	st.local.v2.u32 	[%rd9+160], {%r39286, %r39285};
	st.local.v2.u32 	[%rd9+168], {%r39284, %r39283};
	st.local.v2.u32 	[%rd9+176], {%r39290, %r39289};
	st.local.v2.u32 	[%rd9+184], {%r39288, %r39287};
	bra.uni 	BB1_216;

BB1_102:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_133:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_117:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_148:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_109:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_140:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_124:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_155:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_105:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_136:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_120:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_151:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_112:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_143:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_127:
	mov.u32 	%r39322, %r3846;
	bra.uni 	BB1_211;

BB1_158:
	mov.u32 	%r39322, %r3846;

BB1_211:
	ld.local.v2.u32 	{%r13814, %r13815}, [%rd9+64];
	or.b32  	%r39262, %r13814, %r39322;
	or.b32  	%r39261, %r13815, %r3848;
	st.local.v2.u32 	[%rd9+64], {%r39262, %r39261};
	ld.local.v2.u32 	{%r13818, %r13819}, [%rd9+72];
	or.b32  	%r39260, %r13818, %r3850;
	or.b32  	%r39259, %r13819, %r3852;
	st.local.v2.u32 	[%rd9+72], {%r39260, %r39259};
	ld.local.v2.u32 	{%r13822, %r13823}, [%rd9+80];
	or.b32  	%r39266, %r13822, %r3854;
	or.b32  	%r39265, %r13823, %r3856;
	st.local.v2.u32 	[%rd9+80], {%r39266, %r39265};
	ld.local.v2.u32 	{%r13826, %r13827}, [%rd9+88];
	or.b32  	%r39264, %r13826, %r3858;
	or.b32  	%r39263, %r13827, %r3860;
	st.local.v2.u32 	[%rd9+88], {%r39264, %r39263};
	ld.local.v2.u32 	{%r13830, %r13831}, [%rd9+96];
	or.b32  	%r39270, %r13830, %r3862;
	or.b32  	%r39269, %r13831, %r3864;
	st.local.v2.u32 	[%rd9+96], {%r39270, %r39269};
	ld.local.v2.u32 	{%r13834, %r13835}, [%rd9+104];
	or.b32  	%r39268, %r13834, %r3866;
	or.b32  	%r39267, %r13835, %r3868;
	st.local.v2.u32 	[%rd9+104], {%r39268, %r39267};
	ld.local.v2.u32 	{%r13838, %r13839}, [%rd9+112];
	or.b32  	%r39274, %r13838, %r3870;
	or.b32  	%r39273, %r13839, %r3872;
	st.local.v2.u32 	[%rd9+112], {%r39274, %r39273};
	ld.local.v2.u32 	{%r13842, %r13843}, [%rd9+120];
	or.b32  	%r39272, %r13842, %r3874;
	or.b32  	%r39271, %r13843, %r3876;
	st.local.v2.u32 	[%rd9+120], {%r39272, %r39271};
	ld.local.v2.u32 	{%r13846, %r13847}, [%rd9+128];
	or.b32  	%r39278, %r13846, %r3878;
	or.b32  	%r39277, %r13847, %r3880;
	st.local.v2.u32 	[%rd9+128], {%r39278, %r39277};
	ld.local.v2.u32 	{%r13850, %r13851}, [%rd9+136];
	or.b32  	%r39276, %r13850, %r3882;
	or.b32  	%r39275, %r13851, %r3884;
	st.local.v2.u32 	[%rd9+136], {%r39276, %r39275};
	ld.local.v2.u32 	{%r13854, %r13855}, [%rd9+144];
	or.b32  	%r39282, %r13854, %r3886;
	or.b32  	%r39281, %r13855, %r3888;
	st.local.v2.u32 	[%rd9+144], {%r39282, %r39281};
	ld.local.v2.u32 	{%r13858, %r13859}, [%rd9+152];
	or.b32  	%r39280, %r13858, %r3890;
	or.b32  	%r39279, %r13859, %r3892;
	st.local.v2.u32 	[%rd9+152], {%r39280, %r39279};
	ld.local.v2.u32 	{%r13862, %r13863}, [%rd9+160];
	or.b32  	%r39286, %r13862, %r3894;
	or.b32  	%r39285, %r13863, %r3896;
	st.local.v2.u32 	[%rd9+160], {%r39286, %r39285};
	ld.local.v2.u32 	{%r13866, %r13867}, [%rd9+168];
	or.b32  	%r39284, %r13866, %r3898;
	or.b32  	%r39283, %r13867, %r3900;
	st.local.v2.u32 	[%rd9+168], {%r39284, %r39283};
	ld.local.v2.u32 	{%r13870, %r13871}, [%rd9+176];
	or.b32  	%r39290, %r13870, %r3902;
	or.b32  	%r39289, %r13871, %r3904;
	st.local.v2.u32 	[%rd9+176], {%r39290, %r39289};
	ld.local.v2.u32 	{%r13874, %r13875}, [%rd9+184];
	or.b32  	%r39288, %r13874, %r3906;
	or.b32  	%r39287, %r13875, %r3908;
	st.local.v2.u32 	[%rd9+184], {%r39288, %r39287};

BB1_216:
	ld.local.u32 	%r1854, [%rd9+192];
	not.b32 	%r15888, %r1854;
	and.b32  	%r15889, %r1854, 127;
	bfe.u32 	%r15890, %r1854, 2, 2;
	and.b32  	%r15891, %r15888, 3;
	shl.b32 	%r15892, %r15891, 3;
	mov.u32 	%r15893, 255;
	shl.b32 	%r15894, %r15893, %r15892;
	setp.eq.s32	%p102, %r15890, 0;
	selp.b32	%r15895, %r15894, 0, %p102;
	setp.eq.s32	%p103, %r15890, 1;
	selp.b32	%r15896, %r15894, 0, %p103;
	setp.eq.s32	%p104, %r15890, 2;
	selp.b32	%r15897, %r15894, 0, %p104;
	setp.eq.s32	%p105, %r15890, 3;
	selp.b32	%r15898, %r15894, 0, %p105;
	bfe.u32 	%r15899, %r1854, 4, 3;
	setp.eq.s32	%p106, %r15899, 0;
	selp.b32	%r15900, -2139062144, 0, %p106;
	and.b32  	%r15901, %r15895, %r15900;
	or.b32  	%r39384, %r15901, %r39262;
	and.b32  	%r15902, %r15896, %r15900;
	or.b32  	%r39383, %r15902, %r39261;
	st.local.v2.u32 	[%rd9+64], {%r39384, %r39383};
	and.b32  	%r15903, %r15897, %r15900;
	or.b32  	%r39382, %r15903, %r39260;
	and.b32  	%r15904, %r15898, %r15900;
	or.b32  	%r39381, %r15904, %r39259;
	st.local.v2.u32 	[%rd9+72], {%r39382, %r39381};
	setp.eq.s32	%p107, %r15899, 1;
	selp.b32	%r15905, -2139062144, 0, %p107;
	and.b32  	%r15906, %r15895, %r15905;
	or.b32  	%r39380, %r15906, %r39266;
	and.b32  	%r15907, %r15896, %r15905;
	or.b32  	%r39379, %r39265, %r15907;
	st.local.v2.u32 	[%rd9+80], {%r39380, %r39379};
	and.b32  	%r15908, %r15897, %r15905;
	or.b32  	%r39378, %r39264, %r15908;
	and.b32  	%r15909, %r15898, %r15905;
	or.b32  	%r39377, %r39263, %r15909;
	st.local.v2.u32 	[%rd9+88], {%r39378, %r39377};
	setp.eq.s32	%p108, %r15899, 2;
	selp.b32	%r15910, -2139062144, 0, %p108;
	and.b32  	%r15911, %r15895, %r15910;
	or.b32  	%r39376, %r39270, %r15911;
	and.b32  	%r15912, %r15896, %r15910;
	or.b32  	%r39375, %r39269, %r15912;
	st.local.v2.u32 	[%rd9+96], {%r39376, %r39375};
	and.b32  	%r15913, %r15897, %r15910;
	or.b32  	%r39374, %r39268, %r15913;
	and.b32  	%r15914, %r15898, %r15910;
	or.b32  	%r39373, %r39267, %r15914;
	st.local.v2.u32 	[%rd9+104], {%r39374, %r39373};
	setp.eq.s32	%p109, %r15899, 3;
	selp.b32	%r15915, -2139062144, 0, %p109;
	and.b32  	%r15916, %r15895, %r15915;
	or.b32  	%r39372, %r39274, %r15916;
	and.b32  	%r15917, %r15896, %r15915;
	or.b32  	%r39371, %r39273, %r15917;
	st.local.v2.u32 	[%rd9+112], {%r39372, %r39371};
	and.b32  	%r15918, %r15897, %r15915;
	or.b32  	%r39370, %r39272, %r15918;
	and.b32  	%r15919, %r15898, %r15915;
	or.b32  	%r39369, %r39271, %r15919;
	st.local.v2.u32 	[%rd9+120], {%r39370, %r39369};
	setp.eq.s32	%p110, %r15899, 4;
	selp.b32	%r15920, -2139062144, 0, %p110;
	and.b32  	%r15921, %r15895, %r15920;
	or.b32  	%r39368, %r39278, %r15921;
	and.b32  	%r15922, %r15896, %r15920;
	or.b32  	%r39367, %r39277, %r15922;
	st.local.v2.u32 	[%rd9+128], {%r39368, %r39367};
	and.b32  	%r15923, %r15897, %r15920;
	or.b32  	%r39366, %r39276, %r15923;
	and.b32  	%r15924, %r15898, %r15920;
	or.b32  	%r39365, %r39275, %r15924;
	st.local.v2.u32 	[%rd9+136], {%r39366, %r39365};
	setp.eq.s32	%p111, %r15899, 5;
	selp.b32	%r15925, -2139062144, 0, %p111;
	and.b32  	%r15926, %r15895, %r15925;
	or.b32  	%r39364, %r39282, %r15926;
	and.b32  	%r15927, %r15896, %r15925;
	or.b32  	%r39363, %r39281, %r15927;
	st.local.v2.u32 	[%rd9+144], {%r39364, %r39363};
	and.b32  	%r15928, %r15897, %r15925;
	or.b32  	%r39362, %r39280, %r15928;
	and.b32  	%r15929, %r15898, %r15925;
	or.b32  	%r39361, %r39279, %r15929;
	st.local.v2.u32 	[%rd9+152], {%r39362, %r39361};
	setp.eq.s32	%p112, %r15899, 6;
	selp.b32	%r15930, -2139062144, 0, %p112;
	and.b32  	%r15931, %r15895, %r15930;
	or.b32  	%r39360, %r39286, %r15931;
	and.b32  	%r15932, %r15896, %r15930;
	or.b32  	%r39359, %r39285, %r15932;
	st.local.v2.u32 	[%rd9+160], {%r39360, %r39359};
	and.b32  	%r15933, %r15897, %r15930;
	or.b32  	%r39358, %r39284, %r15933;
	and.b32  	%r15934, %r15898, %r15930;
	or.b32  	%r39357, %r39283, %r15934;
	st.local.v2.u32 	[%rd9+168], {%r39358, %r39357};
	setp.eq.s32	%p113, %r15899, 7;
	selp.b32	%r15935, -2139062144, 0, %p113;
	and.b32  	%r15936, %r15895, %r15935;
	or.b32  	%r39356, %r39290, %r15936;
	and.b32  	%r15937, %r15896, %r15935;
	or.b32  	%r39355, %r39289, %r15937;
	st.local.v2.u32 	[%rd9+176], {%r39356, %r39355};
	and.b32  	%r15938, %r15897, %r15935;
	or.b32  	%r1885, %r39288, %r15938;
	and.b32  	%r15939, %r15898, %r15935;
	or.b32  	%r1886, %r39287, %r15939;
	st.local.v2.u32 	[%rd9+184], {%r1885, %r1886};
	ld.local.u64 	%rd23216, [%rd9];
	ld.local.u64 	%rd23215, [%rd9+8];
	ld.local.u64 	%rd23214, [%rd9+16];
	ld.local.u64 	%rd23213, [%rd9+24];
	ld.local.u64 	%rd23212, [%rd9+32];
	ld.local.u64 	%rd23211, [%rd9+40];
	ld.local.u64 	%rd23210, [%rd9+48];
	ld.local.u64 	%rd23209, [%rd9+56];
	setp.lt.u32	%p114, %r15889, 112;
	@%p114 bra 	BB1_218;

	mov.b64	%rd5828, {%r39383, %r39384};
	mov.b64	%rd5829, {%r39381, %r39382};
	mov.b64	%rd5830, {%r39379, %r39380};
	mov.b64	%rd5831, {%r39377, %r39378};
	mov.b64	%rd5832, {%r39375, %r39376};
	mov.b64	%rd5833, {%r39373, %r39374};
	mov.b64	%rd5834, {%r39371, %r39372};
	mov.b64	%rd5835, {%r39369, %r39370};
	mov.b64	%rd5836, {%r39367, %r39368};
	mov.b64	%rd5837, {%r39365, %r39366};
	mov.b64	%rd5838, {%r39363, %r39364};
	mov.b64	%rd5839, {%r39361, %r39362};
	mov.b64	%rd5840, {%r39359, %r39360};
	mov.b64	%rd5841, {%r39357, %r39358};
	mov.b64	%rd5842, {%r39355, %r39356};
	mov.b64	%rd5843, {%r1886, %r1885};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15970,%dummy}, %rd23212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15971}, %rd23212;
	}
	shf.r.wrap.b32 	%r15972, %r15971, %r15970, 18;
	shf.r.wrap.b32 	%r15973, %r15970, %r15971, 18;
	mov.b64 	%rd5844, {%r15973, %r15972};
	shf.r.wrap.b32 	%r15974, %r15971, %r15970, 14;
	shf.r.wrap.b32 	%r15975, %r15970, %r15971, 14;
	mov.b64 	%rd5845, {%r15975, %r15974};
	xor.b64  	%rd5846, %rd5844, %rd5845;
	shf.l.wrap.b32 	%r15976, %r15970, %r15971, 23;
	shf.l.wrap.b32 	%r15977, %r15971, %r15970, 23;
	mov.b64 	%rd5847, {%r15977, %r15976};
	xor.b64  	%rd5848, %rd5846, %rd5847;
	xor.b64  	%rd5849, %rd23210, %rd23211;
	and.b64  	%rd5850, %rd5849, %rd23212;
	xor.b64  	%rd5851, %rd5850, %rd23210;
	add.s64 	%rd5852, %rd5851, %rd23209;
	add.s64 	%rd5853, %rd5852, %rd5828;
	add.s64 	%rd5854, %rd5853, %rd28;
	add.s64 	%rd5855, %rd5854, %rd5848;
	add.s64 	%rd5856, %rd5855, %rd23213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15978}, %rd23216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15979,%dummy}, %rd23216;
	}
	shf.l.wrap.b32 	%r15980, %r15979, %r15978, 30;
	shf.l.wrap.b32 	%r15981, %r15978, %r15979, 30;
	mov.b64 	%rd5857, {%r15981, %r15980};
	shf.r.wrap.b32 	%r15982, %r15978, %r15979, 28;
	shf.r.wrap.b32 	%r15983, %r15979, %r15978, 28;
	mov.b64 	%rd5858, {%r15983, %r15982};
	xor.b64  	%rd5859, %rd5857, %rd5858;
	shf.l.wrap.b32 	%r15984, %r15979, %r15978, 25;
	shf.l.wrap.b32 	%r15985, %r15978, %r15979, 25;
	mov.b64 	%rd5860, {%r15985, %r15984};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	xor.b64  	%rd5862, %rd23215, %rd23216;
	and.b64  	%rd5863, %rd23214, %rd5862;
	and.b64  	%rd5864, %rd23215, %rd23216;
	or.b64  	%rd5865, %rd5863, %rd5864;
	add.s64 	%rd5866, %rd5855, %rd5865;
	add.s64 	%rd5867, %rd5866, %rd5861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15986,%dummy}, %rd5856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15987}, %rd5856;
	}
	shf.r.wrap.b32 	%r15988, %r15987, %r15986, 14;
	shf.r.wrap.b32 	%r15989, %r15986, %r15987, 14;
	mov.b64 	%rd5868, {%r15989, %r15988};
	shf.r.wrap.b32 	%r15990, %r15987, %r15986, 18;
	shf.r.wrap.b32 	%r15991, %r15986, %r15987, 18;
	mov.b64 	%rd5869, {%r15991, %r15990};
	xor.b64  	%rd5870, %rd5869, %rd5868;
	shf.l.wrap.b32 	%r15992, %r15986, %r15987, 23;
	shf.l.wrap.b32 	%r15993, %r15987, %r15986, 23;
	mov.b64 	%rd5871, {%r15993, %r15992};
	xor.b64  	%rd5872, %rd5870, %rd5871;
	xor.b64  	%rd5873, %rd23211, %rd23212;
	and.b64  	%rd5874, %rd5856, %rd5873;
	xor.b64  	%rd5875, %rd5874, %rd23211;
	add.s64 	%rd5876, %rd5829, %rd23210;
	add.s64 	%rd5877, %rd5876, %rd29;
	add.s64 	%rd5878, %rd5877, %rd5875;
	add.s64 	%rd5879, %rd5878, %rd5872;
	add.s64 	%rd5880, %rd5879, %rd23214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15994,%dummy}, %rd5867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15995}, %rd5867;
	}
	shf.r.wrap.b32 	%r15996, %r15995, %r15994, 28;
	shf.r.wrap.b32 	%r15997, %r15994, %r15995, 28;
	mov.b64 	%rd5881, {%r15997, %r15996};
	shf.l.wrap.b32 	%r15998, %r15994, %r15995, 30;
	shf.l.wrap.b32 	%r15999, %r15995, %r15994, 30;
	mov.b64 	%rd5882, {%r15999, %r15998};
	xor.b64  	%rd5883, %rd5882, %rd5881;
	shf.l.wrap.b32 	%r16000, %r15994, %r15995, 25;
	shf.l.wrap.b32 	%r16001, %r15995, %r15994, 25;
	mov.b64 	%rd5884, {%r16001, %r16000};
	xor.b64  	%rd5885, %rd5883, %rd5884;
	and.b64  	%rd5886, %rd5867, %rd23216;
	xor.b64  	%rd5887, %rd5867, %rd23216;
	and.b64  	%rd5888, %rd5887, %rd23215;
	or.b64  	%rd5889, %rd5888, %rd5886;
	add.s64 	%rd5890, %rd5879, %rd5889;
	add.s64 	%rd5891, %rd5890, %rd5885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16002,%dummy}, %rd5880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16003}, %rd5880;
	}
	shf.r.wrap.b32 	%r16004, %r16003, %r16002, 14;
	shf.r.wrap.b32 	%r16005, %r16002, %r16003, 14;
	mov.b64 	%rd5892, {%r16005, %r16004};
	shf.r.wrap.b32 	%r16006, %r16003, %r16002, 18;
	shf.r.wrap.b32 	%r16007, %r16002, %r16003, 18;
	mov.b64 	%rd5893, {%r16007, %r16006};
	xor.b64  	%rd5894, %rd5893, %rd5892;
	shf.l.wrap.b32 	%r16008, %r16002, %r16003, 23;
	shf.l.wrap.b32 	%r16009, %r16003, %r16002, 23;
	mov.b64 	%rd5895, {%r16009, %r16008};
	xor.b64  	%rd5896, %rd5894, %rd5895;
	xor.b64  	%rd5897, %rd5856, %rd23212;
	and.b64  	%rd5898, %rd5880, %rd5897;
	xor.b64  	%rd5899, %rd5898, %rd23212;
	add.s64 	%rd5900, %rd5830, %rd23211;
	add.s64 	%rd5901, %rd5900, %rd30;
	add.s64 	%rd5902, %rd5901, %rd5899;
	add.s64 	%rd5903, %rd5902, %rd5896;
	add.s64 	%rd5904, %rd5903, %rd23215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16010,%dummy}, %rd5891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16011}, %rd5891;
	}
	shf.r.wrap.b32 	%r16012, %r16011, %r16010, 28;
	shf.r.wrap.b32 	%r16013, %r16010, %r16011, 28;
	mov.b64 	%rd5905, {%r16013, %r16012};
	shf.l.wrap.b32 	%r16014, %r16010, %r16011, 30;
	shf.l.wrap.b32 	%r16015, %r16011, %r16010, 30;
	mov.b64 	%rd5906, {%r16015, %r16014};
	xor.b64  	%rd5907, %rd5906, %rd5905;
	shf.l.wrap.b32 	%r16016, %r16010, %r16011, 25;
	shf.l.wrap.b32 	%r16017, %r16011, %r16010, 25;
	mov.b64 	%rd5908, {%r16017, %r16016};
	xor.b64  	%rd5909, %rd5907, %rd5908;
	and.b64  	%rd5910, %rd5891, %rd5867;
	xor.b64  	%rd5911, %rd5891, %rd5867;
	and.b64  	%rd5912, %rd5911, %rd23216;
	or.b64  	%rd5913, %rd5912, %rd5910;
	add.s64 	%rd5914, %rd5903, %rd5913;
	add.s64 	%rd5915, %rd5914, %rd5909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16018,%dummy}, %rd5904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16019}, %rd5904;
	}
	shf.r.wrap.b32 	%r16020, %r16019, %r16018, 14;
	shf.r.wrap.b32 	%r16021, %r16018, %r16019, 14;
	mov.b64 	%rd5916, {%r16021, %r16020};
	shf.r.wrap.b32 	%r16022, %r16019, %r16018, 18;
	shf.r.wrap.b32 	%r16023, %r16018, %r16019, 18;
	mov.b64 	%rd5917, {%r16023, %r16022};
	xor.b64  	%rd5918, %rd5917, %rd5916;
	shf.l.wrap.b32 	%r16024, %r16018, %r16019, 23;
	shf.l.wrap.b32 	%r16025, %r16019, %r16018, 23;
	mov.b64 	%rd5919, {%r16025, %r16024};
	xor.b64  	%rd5920, %rd5918, %rd5919;
	xor.b64  	%rd5921, %rd5880, %rd5856;
	and.b64  	%rd5922, %rd5904, %rd5921;
	xor.b64  	%rd5923, %rd5922, %rd5856;
	add.s64 	%rd5924, %rd5831, %rd23212;
	add.s64 	%rd5925, %rd5924, %rd31;
	add.s64 	%rd5926, %rd5925, %rd5923;
	add.s64 	%rd5927, %rd5926, %rd5920;
	add.s64 	%rd5928, %rd5927, %rd23216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16026,%dummy}, %rd5915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16027}, %rd5915;
	}
	shf.r.wrap.b32 	%r16028, %r16027, %r16026, 28;
	shf.r.wrap.b32 	%r16029, %r16026, %r16027, 28;
	mov.b64 	%rd5929, {%r16029, %r16028};
	shf.l.wrap.b32 	%r16030, %r16026, %r16027, 30;
	shf.l.wrap.b32 	%r16031, %r16027, %r16026, 30;
	mov.b64 	%rd5930, {%r16031, %r16030};
	xor.b64  	%rd5931, %rd5930, %rd5929;
	shf.l.wrap.b32 	%r16032, %r16026, %r16027, 25;
	shf.l.wrap.b32 	%r16033, %r16027, %r16026, 25;
	mov.b64 	%rd5932, {%r16033, %r16032};
	xor.b64  	%rd5933, %rd5931, %rd5932;
	and.b64  	%rd5934, %rd5915, %rd5891;
	xor.b64  	%rd5935, %rd5915, %rd5891;
	and.b64  	%rd5936, %rd5935, %rd5867;
	or.b64  	%rd5937, %rd5936, %rd5934;
	add.s64 	%rd5938, %rd5927, %rd5937;
	add.s64 	%rd5939, %rd5938, %rd5933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16034,%dummy}, %rd5928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16035}, %rd5928;
	}
	shf.r.wrap.b32 	%r16036, %r16035, %r16034, 14;
	shf.r.wrap.b32 	%r16037, %r16034, %r16035, 14;
	mov.b64 	%rd5940, {%r16037, %r16036};
	shf.r.wrap.b32 	%r16038, %r16035, %r16034, 18;
	shf.r.wrap.b32 	%r16039, %r16034, %r16035, 18;
	mov.b64 	%rd5941, {%r16039, %r16038};
	xor.b64  	%rd5942, %rd5941, %rd5940;
	shf.l.wrap.b32 	%r16040, %r16034, %r16035, 23;
	shf.l.wrap.b32 	%r16041, %r16035, %r16034, 23;
	mov.b64 	%rd5943, {%r16041, %r16040};
	xor.b64  	%rd5944, %rd5942, %rd5943;
	xor.b64  	%rd5945, %rd5904, %rd5880;
	and.b64  	%rd5946, %rd5928, %rd5945;
	xor.b64  	%rd5947, %rd5946, %rd5880;
	add.s64 	%rd5948, %rd5856, %rd5832;
	add.s64 	%rd5949, %rd5948, %rd32;
	add.s64 	%rd5950, %rd5949, %rd5947;
	add.s64 	%rd5951, %rd5950, %rd5944;
	add.s64 	%rd5952, %rd5951, %rd5867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16042,%dummy}, %rd5939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16043}, %rd5939;
	}
	shf.r.wrap.b32 	%r16044, %r16043, %r16042, 28;
	shf.r.wrap.b32 	%r16045, %r16042, %r16043, 28;
	mov.b64 	%rd5953, {%r16045, %r16044};
	shf.l.wrap.b32 	%r16046, %r16042, %r16043, 30;
	shf.l.wrap.b32 	%r16047, %r16043, %r16042, 30;
	mov.b64 	%rd5954, {%r16047, %r16046};
	xor.b64  	%rd5955, %rd5954, %rd5953;
	shf.l.wrap.b32 	%r16048, %r16042, %r16043, 25;
	shf.l.wrap.b32 	%r16049, %r16043, %r16042, 25;
	mov.b64 	%rd5956, {%r16049, %r16048};
	xor.b64  	%rd5957, %rd5955, %rd5956;
	and.b64  	%rd5958, %rd5939, %rd5915;
	xor.b64  	%rd5959, %rd5939, %rd5915;
	and.b64  	%rd5960, %rd5959, %rd5891;
	or.b64  	%rd5961, %rd5960, %rd5958;
	add.s64 	%rd5962, %rd5951, %rd5961;
	add.s64 	%rd5963, %rd5962, %rd5957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16050,%dummy}, %rd5952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16051}, %rd5952;
	}
	shf.r.wrap.b32 	%r16052, %r16051, %r16050, 14;
	shf.r.wrap.b32 	%r16053, %r16050, %r16051, 14;
	mov.b64 	%rd5964, {%r16053, %r16052};
	shf.r.wrap.b32 	%r16054, %r16051, %r16050, 18;
	shf.r.wrap.b32 	%r16055, %r16050, %r16051, 18;
	mov.b64 	%rd5965, {%r16055, %r16054};
	xor.b64  	%rd5966, %rd5965, %rd5964;
	shf.l.wrap.b32 	%r16056, %r16050, %r16051, 23;
	shf.l.wrap.b32 	%r16057, %r16051, %r16050, 23;
	mov.b64 	%rd5967, {%r16057, %r16056};
	xor.b64  	%rd5968, %rd5966, %rd5967;
	xor.b64  	%rd5969, %rd5928, %rd5904;
	and.b64  	%rd5970, %rd5952, %rd5969;
	xor.b64  	%rd5971, %rd5970, %rd5904;
	add.s64 	%rd5972, %rd5880, %rd5833;
	add.s64 	%rd5973, %rd5972, %rd33;
	add.s64 	%rd5974, %rd5973, %rd5971;
	add.s64 	%rd5975, %rd5974, %rd5968;
	add.s64 	%rd5976, %rd5975, %rd5891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16058,%dummy}, %rd5963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16059}, %rd5963;
	}
	shf.r.wrap.b32 	%r16060, %r16059, %r16058, 28;
	shf.r.wrap.b32 	%r16061, %r16058, %r16059, 28;
	mov.b64 	%rd5977, {%r16061, %r16060};
	shf.l.wrap.b32 	%r16062, %r16058, %r16059, 30;
	shf.l.wrap.b32 	%r16063, %r16059, %r16058, 30;
	mov.b64 	%rd5978, {%r16063, %r16062};
	xor.b64  	%rd5979, %rd5978, %rd5977;
	shf.l.wrap.b32 	%r16064, %r16058, %r16059, 25;
	shf.l.wrap.b32 	%r16065, %r16059, %r16058, 25;
	mov.b64 	%rd5980, {%r16065, %r16064};
	xor.b64  	%rd5981, %rd5979, %rd5980;
	and.b64  	%rd5982, %rd5963, %rd5939;
	xor.b64  	%rd5983, %rd5963, %rd5939;
	and.b64  	%rd5984, %rd5983, %rd5915;
	or.b64  	%rd5985, %rd5984, %rd5982;
	add.s64 	%rd5986, %rd5975, %rd5985;
	add.s64 	%rd5987, %rd5986, %rd5981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16066,%dummy}, %rd5976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16067}, %rd5976;
	}
	shf.r.wrap.b32 	%r16068, %r16067, %r16066, 14;
	shf.r.wrap.b32 	%r16069, %r16066, %r16067, 14;
	mov.b64 	%rd5988, {%r16069, %r16068};
	shf.r.wrap.b32 	%r16070, %r16067, %r16066, 18;
	shf.r.wrap.b32 	%r16071, %r16066, %r16067, 18;
	mov.b64 	%rd5989, {%r16071, %r16070};
	xor.b64  	%rd5990, %rd5989, %rd5988;
	shf.l.wrap.b32 	%r16072, %r16066, %r16067, 23;
	shf.l.wrap.b32 	%r16073, %r16067, %r16066, 23;
	mov.b64 	%rd5991, {%r16073, %r16072};
	xor.b64  	%rd5992, %rd5990, %rd5991;
	xor.b64  	%rd5993, %rd5952, %rd5928;
	and.b64  	%rd5994, %rd5976, %rd5993;
	xor.b64  	%rd5995, %rd5994, %rd5928;
	add.s64 	%rd5996, %rd5904, %rd5834;
	add.s64 	%rd5997, %rd5996, %rd34;
	add.s64 	%rd5998, %rd5997, %rd5995;
	add.s64 	%rd5999, %rd5998, %rd5992;
	add.s64 	%rd6000, %rd5999, %rd5915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16074,%dummy}, %rd5987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16075}, %rd5987;
	}
	shf.r.wrap.b32 	%r16076, %r16075, %r16074, 28;
	shf.r.wrap.b32 	%r16077, %r16074, %r16075, 28;
	mov.b64 	%rd6001, {%r16077, %r16076};
	shf.l.wrap.b32 	%r16078, %r16074, %r16075, 30;
	shf.l.wrap.b32 	%r16079, %r16075, %r16074, 30;
	mov.b64 	%rd6002, {%r16079, %r16078};
	xor.b64  	%rd6003, %rd6002, %rd6001;
	shf.l.wrap.b32 	%r16080, %r16074, %r16075, 25;
	shf.l.wrap.b32 	%r16081, %r16075, %r16074, 25;
	mov.b64 	%rd6004, {%r16081, %r16080};
	xor.b64  	%rd6005, %rd6003, %rd6004;
	and.b64  	%rd6006, %rd5987, %rd5963;
	xor.b64  	%rd6007, %rd5987, %rd5963;
	and.b64  	%rd6008, %rd6007, %rd5939;
	or.b64  	%rd6009, %rd6008, %rd6006;
	add.s64 	%rd6010, %rd5999, %rd6009;
	add.s64 	%rd6011, %rd6010, %rd6005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16082,%dummy}, %rd6000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16083}, %rd6000;
	}
	shf.r.wrap.b32 	%r16084, %r16083, %r16082, 14;
	shf.r.wrap.b32 	%r16085, %r16082, %r16083, 14;
	mov.b64 	%rd6012, {%r16085, %r16084};
	shf.r.wrap.b32 	%r16086, %r16083, %r16082, 18;
	shf.r.wrap.b32 	%r16087, %r16082, %r16083, 18;
	mov.b64 	%rd6013, {%r16087, %r16086};
	xor.b64  	%rd6014, %rd6013, %rd6012;
	shf.l.wrap.b32 	%r16088, %r16082, %r16083, 23;
	shf.l.wrap.b32 	%r16089, %r16083, %r16082, 23;
	mov.b64 	%rd6015, {%r16089, %r16088};
	xor.b64  	%rd6016, %rd6014, %rd6015;
	xor.b64  	%rd6017, %rd5976, %rd5952;
	and.b64  	%rd6018, %rd6000, %rd6017;
	xor.b64  	%rd6019, %rd6018, %rd5952;
	add.s64 	%rd6020, %rd5928, %rd5835;
	add.s64 	%rd6021, %rd6020, %rd35;
	add.s64 	%rd6022, %rd6021, %rd6019;
	add.s64 	%rd6023, %rd6022, %rd6016;
	add.s64 	%rd6024, %rd6023, %rd5939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16090,%dummy}, %rd6011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16091}, %rd6011;
	}
	shf.r.wrap.b32 	%r16092, %r16091, %r16090, 28;
	shf.r.wrap.b32 	%r16093, %r16090, %r16091, 28;
	mov.b64 	%rd6025, {%r16093, %r16092};
	shf.l.wrap.b32 	%r16094, %r16090, %r16091, 30;
	shf.l.wrap.b32 	%r16095, %r16091, %r16090, 30;
	mov.b64 	%rd6026, {%r16095, %r16094};
	xor.b64  	%rd6027, %rd6026, %rd6025;
	shf.l.wrap.b32 	%r16096, %r16090, %r16091, 25;
	shf.l.wrap.b32 	%r16097, %r16091, %r16090, 25;
	mov.b64 	%rd6028, {%r16097, %r16096};
	xor.b64  	%rd6029, %rd6027, %rd6028;
	and.b64  	%rd6030, %rd6011, %rd5987;
	xor.b64  	%rd6031, %rd6011, %rd5987;
	and.b64  	%rd6032, %rd6031, %rd5963;
	or.b64  	%rd6033, %rd6032, %rd6030;
	add.s64 	%rd6034, %rd6023, %rd6033;
	add.s64 	%rd6035, %rd6034, %rd6029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16098,%dummy}, %rd6024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16099}, %rd6024;
	}
	shf.r.wrap.b32 	%r16100, %r16099, %r16098, 14;
	shf.r.wrap.b32 	%r16101, %r16098, %r16099, 14;
	mov.b64 	%rd6036, {%r16101, %r16100};
	shf.r.wrap.b32 	%r16102, %r16099, %r16098, 18;
	shf.r.wrap.b32 	%r16103, %r16098, %r16099, 18;
	mov.b64 	%rd6037, {%r16103, %r16102};
	xor.b64  	%rd6038, %rd6037, %rd6036;
	shf.l.wrap.b32 	%r16104, %r16098, %r16099, 23;
	shf.l.wrap.b32 	%r16105, %r16099, %r16098, 23;
	mov.b64 	%rd6039, {%r16105, %r16104};
	xor.b64  	%rd6040, %rd6038, %rd6039;
	xor.b64  	%rd6041, %rd6000, %rd5976;
	and.b64  	%rd6042, %rd6024, %rd6041;
	xor.b64  	%rd6043, %rd6042, %rd5976;
	add.s64 	%rd6044, %rd5952, %rd5836;
	add.s64 	%rd6045, %rd6044, %rd36;
	add.s64 	%rd6046, %rd6045, %rd6043;
	add.s64 	%rd6047, %rd6046, %rd6040;
	add.s64 	%rd6048, %rd6047, %rd5963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16106,%dummy}, %rd6035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16107}, %rd6035;
	}
	shf.r.wrap.b32 	%r16108, %r16107, %r16106, 28;
	shf.r.wrap.b32 	%r16109, %r16106, %r16107, 28;
	mov.b64 	%rd6049, {%r16109, %r16108};
	shf.l.wrap.b32 	%r16110, %r16106, %r16107, 30;
	shf.l.wrap.b32 	%r16111, %r16107, %r16106, 30;
	mov.b64 	%rd6050, {%r16111, %r16110};
	xor.b64  	%rd6051, %rd6050, %rd6049;
	shf.l.wrap.b32 	%r16112, %r16106, %r16107, 25;
	shf.l.wrap.b32 	%r16113, %r16107, %r16106, 25;
	mov.b64 	%rd6052, {%r16113, %r16112};
	xor.b64  	%rd6053, %rd6051, %rd6052;
	and.b64  	%rd6054, %rd6035, %rd6011;
	xor.b64  	%rd6055, %rd6035, %rd6011;
	and.b64  	%rd6056, %rd6055, %rd5987;
	or.b64  	%rd6057, %rd6056, %rd6054;
	add.s64 	%rd6058, %rd6047, %rd6057;
	add.s64 	%rd6059, %rd6058, %rd6053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16114,%dummy}, %rd6048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16115}, %rd6048;
	}
	shf.r.wrap.b32 	%r16116, %r16115, %r16114, 14;
	shf.r.wrap.b32 	%r16117, %r16114, %r16115, 14;
	mov.b64 	%rd6060, {%r16117, %r16116};
	shf.r.wrap.b32 	%r16118, %r16115, %r16114, 18;
	shf.r.wrap.b32 	%r16119, %r16114, %r16115, 18;
	mov.b64 	%rd6061, {%r16119, %r16118};
	xor.b64  	%rd6062, %rd6061, %rd6060;
	shf.l.wrap.b32 	%r16120, %r16114, %r16115, 23;
	shf.l.wrap.b32 	%r16121, %r16115, %r16114, 23;
	mov.b64 	%rd6063, {%r16121, %r16120};
	xor.b64  	%rd6064, %rd6062, %rd6063;
	xor.b64  	%rd6065, %rd6024, %rd6000;
	and.b64  	%rd6066, %rd6048, %rd6065;
	xor.b64  	%rd6067, %rd6066, %rd6000;
	add.s64 	%rd6068, %rd5976, %rd5837;
	add.s64 	%rd6069, %rd6068, %rd37;
	add.s64 	%rd6070, %rd6069, %rd6067;
	add.s64 	%rd6071, %rd6070, %rd6064;
	add.s64 	%rd6072, %rd6071, %rd5987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16122,%dummy}, %rd6059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16123}, %rd6059;
	}
	shf.r.wrap.b32 	%r16124, %r16123, %r16122, 28;
	shf.r.wrap.b32 	%r16125, %r16122, %r16123, 28;
	mov.b64 	%rd6073, {%r16125, %r16124};
	shf.l.wrap.b32 	%r16126, %r16122, %r16123, 30;
	shf.l.wrap.b32 	%r16127, %r16123, %r16122, 30;
	mov.b64 	%rd6074, {%r16127, %r16126};
	xor.b64  	%rd6075, %rd6074, %rd6073;
	shf.l.wrap.b32 	%r16128, %r16122, %r16123, 25;
	shf.l.wrap.b32 	%r16129, %r16123, %r16122, 25;
	mov.b64 	%rd6076, {%r16129, %r16128};
	xor.b64  	%rd6077, %rd6075, %rd6076;
	and.b64  	%rd6078, %rd6059, %rd6035;
	xor.b64  	%rd6079, %rd6059, %rd6035;
	and.b64  	%rd6080, %rd6079, %rd6011;
	or.b64  	%rd6081, %rd6080, %rd6078;
	add.s64 	%rd6082, %rd6071, %rd6081;
	add.s64 	%rd6083, %rd6082, %rd6077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16130,%dummy}, %rd6072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16131}, %rd6072;
	}
	shf.r.wrap.b32 	%r16132, %r16131, %r16130, 14;
	shf.r.wrap.b32 	%r16133, %r16130, %r16131, 14;
	mov.b64 	%rd6084, {%r16133, %r16132};
	shf.r.wrap.b32 	%r16134, %r16131, %r16130, 18;
	shf.r.wrap.b32 	%r16135, %r16130, %r16131, 18;
	mov.b64 	%rd6085, {%r16135, %r16134};
	xor.b64  	%rd6086, %rd6085, %rd6084;
	shf.l.wrap.b32 	%r16136, %r16130, %r16131, 23;
	shf.l.wrap.b32 	%r16137, %r16131, %r16130, 23;
	mov.b64 	%rd6087, {%r16137, %r16136};
	xor.b64  	%rd6088, %rd6086, %rd6087;
	xor.b64  	%rd6089, %rd6048, %rd6024;
	and.b64  	%rd6090, %rd6072, %rd6089;
	xor.b64  	%rd6091, %rd6090, %rd6024;
	add.s64 	%rd6092, %rd6000, %rd5838;
	add.s64 	%rd6093, %rd6092, %rd38;
	add.s64 	%rd6094, %rd6093, %rd6091;
	add.s64 	%rd6095, %rd6094, %rd6088;
	add.s64 	%rd6096, %rd6095, %rd6011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16138,%dummy}, %rd6083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16139}, %rd6083;
	}
	shf.r.wrap.b32 	%r16140, %r16139, %r16138, 28;
	shf.r.wrap.b32 	%r16141, %r16138, %r16139, 28;
	mov.b64 	%rd6097, {%r16141, %r16140};
	shf.l.wrap.b32 	%r16142, %r16138, %r16139, 30;
	shf.l.wrap.b32 	%r16143, %r16139, %r16138, 30;
	mov.b64 	%rd6098, {%r16143, %r16142};
	xor.b64  	%rd6099, %rd6098, %rd6097;
	shf.l.wrap.b32 	%r16144, %r16138, %r16139, 25;
	shf.l.wrap.b32 	%r16145, %r16139, %r16138, 25;
	mov.b64 	%rd6100, {%r16145, %r16144};
	xor.b64  	%rd6101, %rd6099, %rd6100;
	and.b64  	%rd6102, %rd6083, %rd6059;
	xor.b64  	%rd6103, %rd6083, %rd6059;
	and.b64  	%rd6104, %rd6103, %rd6035;
	or.b64  	%rd6105, %rd6104, %rd6102;
	add.s64 	%rd6106, %rd6095, %rd6105;
	add.s64 	%rd6107, %rd6106, %rd6101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16146,%dummy}, %rd6096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16147}, %rd6096;
	}
	shf.r.wrap.b32 	%r16148, %r16147, %r16146, 14;
	shf.r.wrap.b32 	%r16149, %r16146, %r16147, 14;
	mov.b64 	%rd6108, {%r16149, %r16148};
	shf.r.wrap.b32 	%r16150, %r16147, %r16146, 18;
	shf.r.wrap.b32 	%r16151, %r16146, %r16147, 18;
	mov.b64 	%rd6109, {%r16151, %r16150};
	xor.b64  	%rd6110, %rd6109, %rd6108;
	shf.l.wrap.b32 	%r16152, %r16146, %r16147, 23;
	shf.l.wrap.b32 	%r16153, %r16147, %r16146, 23;
	mov.b64 	%rd6111, {%r16153, %r16152};
	xor.b64  	%rd6112, %rd6110, %rd6111;
	xor.b64  	%rd6113, %rd6072, %rd6048;
	and.b64  	%rd6114, %rd6096, %rd6113;
	xor.b64  	%rd6115, %rd6114, %rd6048;
	add.s64 	%rd6116, %rd6024, %rd5839;
	add.s64 	%rd6117, %rd6116, %rd39;
	add.s64 	%rd6118, %rd6117, %rd6115;
	add.s64 	%rd6119, %rd6118, %rd6112;
	add.s64 	%rd6120, %rd6119, %rd6035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16154,%dummy}, %rd6107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16155}, %rd6107;
	}
	shf.r.wrap.b32 	%r16156, %r16155, %r16154, 28;
	shf.r.wrap.b32 	%r16157, %r16154, %r16155, 28;
	mov.b64 	%rd6121, {%r16157, %r16156};
	shf.l.wrap.b32 	%r16158, %r16154, %r16155, 30;
	shf.l.wrap.b32 	%r16159, %r16155, %r16154, 30;
	mov.b64 	%rd6122, {%r16159, %r16158};
	xor.b64  	%rd6123, %rd6122, %rd6121;
	shf.l.wrap.b32 	%r16160, %r16154, %r16155, 25;
	shf.l.wrap.b32 	%r16161, %r16155, %r16154, 25;
	mov.b64 	%rd6124, {%r16161, %r16160};
	xor.b64  	%rd6125, %rd6123, %rd6124;
	and.b64  	%rd6126, %rd6107, %rd6083;
	xor.b64  	%rd6127, %rd6107, %rd6083;
	and.b64  	%rd6128, %rd6127, %rd6059;
	or.b64  	%rd6129, %rd6128, %rd6126;
	add.s64 	%rd6130, %rd6119, %rd6129;
	add.s64 	%rd6131, %rd6130, %rd6125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16162,%dummy}, %rd6120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16163}, %rd6120;
	}
	shf.r.wrap.b32 	%r16164, %r16163, %r16162, 14;
	shf.r.wrap.b32 	%r16165, %r16162, %r16163, 14;
	mov.b64 	%rd6132, {%r16165, %r16164};
	shf.r.wrap.b32 	%r16166, %r16163, %r16162, 18;
	shf.r.wrap.b32 	%r16167, %r16162, %r16163, 18;
	mov.b64 	%rd6133, {%r16167, %r16166};
	xor.b64  	%rd6134, %rd6133, %rd6132;
	shf.l.wrap.b32 	%r16168, %r16162, %r16163, 23;
	shf.l.wrap.b32 	%r16169, %r16163, %r16162, 23;
	mov.b64 	%rd6135, {%r16169, %r16168};
	xor.b64  	%rd6136, %rd6134, %rd6135;
	xor.b64  	%rd6137, %rd6096, %rd6072;
	and.b64  	%rd6138, %rd6120, %rd6137;
	xor.b64  	%rd6139, %rd6138, %rd6072;
	add.s64 	%rd6140, %rd6048, %rd5840;
	add.s64 	%rd6141, %rd6140, %rd40;
	add.s64 	%rd6142, %rd6141, %rd6139;
	add.s64 	%rd6143, %rd6142, %rd6136;
	add.s64 	%rd6144, %rd6143, %rd6059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16170,%dummy}, %rd6131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16171}, %rd6131;
	}
	shf.r.wrap.b32 	%r16172, %r16171, %r16170, 28;
	shf.r.wrap.b32 	%r16173, %r16170, %r16171, 28;
	mov.b64 	%rd6145, {%r16173, %r16172};
	shf.l.wrap.b32 	%r16174, %r16170, %r16171, 30;
	shf.l.wrap.b32 	%r16175, %r16171, %r16170, 30;
	mov.b64 	%rd6146, {%r16175, %r16174};
	xor.b64  	%rd6147, %rd6146, %rd6145;
	shf.l.wrap.b32 	%r16176, %r16170, %r16171, 25;
	shf.l.wrap.b32 	%r16177, %r16171, %r16170, 25;
	mov.b64 	%rd6148, {%r16177, %r16176};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	and.b64  	%rd6150, %rd6131, %rd6107;
	xor.b64  	%rd6151, %rd6131, %rd6107;
	and.b64  	%rd6152, %rd6151, %rd6083;
	or.b64  	%rd6153, %rd6152, %rd6150;
	add.s64 	%rd6154, %rd6143, %rd6153;
	add.s64 	%rd6155, %rd6154, %rd6149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16178,%dummy}, %rd6144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16179}, %rd6144;
	}
	shf.r.wrap.b32 	%r16180, %r16179, %r16178, 14;
	shf.r.wrap.b32 	%r16181, %r16178, %r16179, 14;
	mov.b64 	%rd6156, {%r16181, %r16180};
	shf.r.wrap.b32 	%r16182, %r16179, %r16178, 18;
	shf.r.wrap.b32 	%r16183, %r16178, %r16179, 18;
	mov.b64 	%rd6157, {%r16183, %r16182};
	xor.b64  	%rd6158, %rd6157, %rd6156;
	shf.l.wrap.b32 	%r16184, %r16178, %r16179, 23;
	shf.l.wrap.b32 	%r16185, %r16179, %r16178, 23;
	mov.b64 	%rd6159, {%r16185, %r16184};
	xor.b64  	%rd6160, %rd6158, %rd6159;
	xor.b64  	%rd6161, %rd6120, %rd6096;
	and.b64  	%rd6162, %rd6144, %rd6161;
	xor.b64  	%rd6163, %rd6162, %rd6096;
	add.s64 	%rd6164, %rd6072, %rd5841;
	add.s64 	%rd6165, %rd6164, %rd41;
	add.s64 	%rd6166, %rd6165, %rd6163;
	add.s64 	%rd6167, %rd6166, %rd6160;
	add.s64 	%rd6168, %rd6167, %rd6083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16186,%dummy}, %rd6155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16187}, %rd6155;
	}
	shf.r.wrap.b32 	%r16188, %r16187, %r16186, 28;
	shf.r.wrap.b32 	%r16189, %r16186, %r16187, 28;
	mov.b64 	%rd6169, {%r16189, %r16188};
	shf.l.wrap.b32 	%r16190, %r16186, %r16187, 30;
	shf.l.wrap.b32 	%r16191, %r16187, %r16186, 30;
	mov.b64 	%rd6170, {%r16191, %r16190};
	xor.b64  	%rd6171, %rd6170, %rd6169;
	shf.l.wrap.b32 	%r16192, %r16186, %r16187, 25;
	shf.l.wrap.b32 	%r16193, %r16187, %r16186, 25;
	mov.b64 	%rd6172, {%r16193, %r16192};
	xor.b64  	%rd6173, %rd6171, %rd6172;
	and.b64  	%rd6174, %rd6155, %rd6131;
	xor.b64  	%rd6175, %rd6155, %rd6131;
	and.b64  	%rd6176, %rd6175, %rd6107;
	or.b64  	%rd6177, %rd6176, %rd6174;
	add.s64 	%rd6178, %rd6167, %rd6177;
	add.s64 	%rd6179, %rd6178, %rd6173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16194,%dummy}, %rd6168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16195}, %rd6168;
	}
	shf.r.wrap.b32 	%r16196, %r16195, %r16194, 14;
	shf.r.wrap.b32 	%r16197, %r16194, %r16195, 14;
	mov.b64 	%rd6180, {%r16197, %r16196};
	shf.r.wrap.b32 	%r16198, %r16195, %r16194, 18;
	shf.r.wrap.b32 	%r16199, %r16194, %r16195, 18;
	mov.b64 	%rd6181, {%r16199, %r16198};
	xor.b64  	%rd6182, %rd6181, %rd6180;
	shf.l.wrap.b32 	%r16200, %r16194, %r16195, 23;
	shf.l.wrap.b32 	%r16201, %r16195, %r16194, 23;
	mov.b64 	%rd6183, {%r16201, %r16200};
	xor.b64  	%rd6184, %rd6182, %rd6183;
	xor.b64  	%rd6185, %rd6144, %rd6120;
	and.b64  	%rd6186, %rd6168, %rd6185;
	xor.b64  	%rd6187, %rd6186, %rd6120;
	add.s64 	%rd6188, %rd6096, %rd5842;
	add.s64 	%rd6189, %rd6188, %rd42;
	add.s64 	%rd6190, %rd6189, %rd6187;
	add.s64 	%rd6191, %rd6190, %rd6184;
	add.s64 	%rd6192, %rd6191, %rd6107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16202,%dummy}, %rd6179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16203}, %rd6179;
	}
	shf.r.wrap.b32 	%r16204, %r16203, %r16202, 28;
	shf.r.wrap.b32 	%r16205, %r16202, %r16203, 28;
	mov.b64 	%rd6193, {%r16205, %r16204};
	shf.l.wrap.b32 	%r16206, %r16202, %r16203, 30;
	shf.l.wrap.b32 	%r16207, %r16203, %r16202, 30;
	mov.b64 	%rd6194, {%r16207, %r16206};
	xor.b64  	%rd6195, %rd6194, %rd6193;
	shf.l.wrap.b32 	%r16208, %r16202, %r16203, 25;
	shf.l.wrap.b32 	%r16209, %r16203, %r16202, 25;
	mov.b64 	%rd6196, {%r16209, %r16208};
	xor.b64  	%rd6197, %rd6195, %rd6196;
	and.b64  	%rd6198, %rd6179, %rd6155;
	xor.b64  	%rd6199, %rd6179, %rd6155;
	and.b64  	%rd6200, %rd6199, %rd6131;
	or.b64  	%rd6201, %rd6200, %rd6198;
	add.s64 	%rd6202, %rd6191, %rd6201;
	add.s64 	%rd6203, %rd6202, %rd6197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16210,%dummy}, %rd6192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16211}, %rd6192;
	}
	shf.r.wrap.b32 	%r16212, %r16211, %r16210, 14;
	shf.r.wrap.b32 	%r16213, %r16210, %r16211, 14;
	mov.b64 	%rd6204, {%r16213, %r16212};
	shf.r.wrap.b32 	%r16214, %r16211, %r16210, 18;
	shf.r.wrap.b32 	%r16215, %r16210, %r16211, 18;
	mov.b64 	%rd6205, {%r16215, %r16214};
	xor.b64  	%rd6206, %rd6205, %rd6204;
	shf.l.wrap.b32 	%r16216, %r16210, %r16211, 23;
	shf.l.wrap.b32 	%r16217, %r16211, %r16210, 23;
	mov.b64 	%rd6207, {%r16217, %r16216};
	xor.b64  	%rd6208, %rd6206, %rd6207;
	xor.b64  	%rd6209, %rd6168, %rd6144;
	and.b64  	%rd6210, %rd6192, %rd6209;
	xor.b64  	%rd6211, %rd6210, %rd6144;
	add.s64 	%rd6212, %rd6120, %rd5843;
	add.s64 	%rd6213, %rd6212, %rd43;
	add.s64 	%rd6214, %rd6213, %rd6211;
	add.s64 	%rd6215, %rd6214, %rd6208;
	add.s64 	%rd6216, %rd6215, %rd6131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16218,%dummy}, %rd6203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16219}, %rd6203;
	}
	shf.r.wrap.b32 	%r16220, %r16219, %r16218, 28;
	shf.r.wrap.b32 	%r16221, %r16218, %r16219, 28;
	mov.b64 	%rd6217, {%r16221, %r16220};
	shf.l.wrap.b32 	%r16222, %r16218, %r16219, 30;
	shf.l.wrap.b32 	%r16223, %r16219, %r16218, 30;
	mov.b64 	%rd6218, {%r16223, %r16222};
	xor.b64  	%rd6219, %rd6218, %rd6217;
	shf.l.wrap.b32 	%r16224, %r16218, %r16219, 25;
	shf.l.wrap.b32 	%r16225, %r16219, %r16218, 25;
	mov.b64 	%rd6220, {%r16225, %r16224};
	xor.b64  	%rd6221, %rd6219, %rd6220;
	and.b64  	%rd6222, %rd6203, %rd6179;
	xor.b64  	%rd6223, %rd6203, %rd6179;
	and.b64  	%rd6224, %rd6223, %rd6155;
	or.b64  	%rd6225, %rd6224, %rd6222;
	add.s64 	%rd6226, %rd6215, %rd6225;
	add.s64 	%rd6227, %rd6226, %rd6221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16226,%dummy}, %rd5842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16227}, %rd5842;
	}
	shf.r.wrap.b32 	%r16228, %r16227, %r16226, 19;
	shf.r.wrap.b32 	%r16229, %r16226, %r16227, 19;
	mov.b64 	%rd6228, {%r16229, %r16228};
	shf.l.wrap.b32 	%r16230, %r16226, %r16227, 3;
	shf.l.wrap.b32 	%r16231, %r16227, %r16226, 3;
	mov.b64 	%rd6229, {%r16231, %r16230};
	shr.u64 	%rd6230, %rd5842, 6;
	xor.b64  	%rd6231, %rd6228, %rd6230;
	xor.b64  	%rd6232, %rd6231, %rd6229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16232,%dummy}, %rd5829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16233}, %rd5829;
	}
	shf.r.wrap.b32 	%r16234, %r16233, %r16232, 1;
	shf.r.wrap.b32 	%r16235, %r16232, %r16233, 1;
	mov.b64 	%rd6233, {%r16235, %r16234};
	shf.r.wrap.b32 	%r16236, %r16233, %r16232, 8;
	shf.r.wrap.b32 	%r16237, %r16232, %r16233, 8;
	mov.b64 	%rd6234, {%r16237, %r16236};
	shr.u64 	%rd6235, %rd5829, 7;
	xor.b64  	%rd6236, %rd6233, %rd6235;
	xor.b64  	%rd6237, %rd6236, %rd6234;
	add.s64 	%rd6238, %rd5837, %rd5828;
	add.s64 	%rd6239, %rd6238, %rd6232;
	add.s64 	%rd6240, %rd6239, %rd6237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16238,%dummy}, %rd5843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16239}, %rd5843;
	}
	shf.r.wrap.b32 	%r16240, %r16239, %r16238, 19;
	shf.r.wrap.b32 	%r16241, %r16238, %r16239, 19;
	mov.b64 	%rd6241, {%r16241, %r16240};
	shf.l.wrap.b32 	%r16242, %r16238, %r16239, 3;
	shf.l.wrap.b32 	%r16243, %r16239, %r16238, 3;
	mov.b64 	%rd6242, {%r16243, %r16242};
	shr.u64 	%rd6243, %rd5843, 6;
	xor.b64  	%rd6244, %rd6241, %rd6243;
	xor.b64  	%rd6245, %rd6244, %rd6242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16244,%dummy}, %rd5830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16245}, %rd5830;
	}
	shf.r.wrap.b32 	%r16246, %r16245, %r16244, 1;
	shf.r.wrap.b32 	%r16247, %r16244, %r16245, 1;
	mov.b64 	%rd6246, {%r16247, %r16246};
	shf.r.wrap.b32 	%r16248, %r16245, %r16244, 8;
	shf.r.wrap.b32 	%r16249, %r16244, %r16245, 8;
	mov.b64 	%rd6247, {%r16249, %r16248};
	shr.u64 	%rd6248, %rd5830, 7;
	xor.b64  	%rd6249, %rd6246, %rd6248;
	xor.b64  	%rd6250, %rd6249, %rd6247;
	add.s64 	%rd6251, %rd5838, %rd5829;
	add.s64 	%rd6252, %rd6251, %rd6245;
	add.s64 	%rd6253, %rd6252, %rd6250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16250,%dummy}, %rd6240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16251}, %rd6240;
	}
	shf.r.wrap.b32 	%r16252, %r16251, %r16250, 19;
	shf.r.wrap.b32 	%r16253, %r16250, %r16251, 19;
	mov.b64 	%rd6254, {%r16253, %r16252};
	shf.l.wrap.b32 	%r16254, %r16250, %r16251, 3;
	shf.l.wrap.b32 	%r16255, %r16251, %r16250, 3;
	mov.b64 	%rd6255, {%r16255, %r16254};
	shr.u64 	%rd6256, %rd6240, 6;
	xor.b64  	%rd6257, %rd6254, %rd6256;
	xor.b64  	%rd6258, %rd6257, %rd6255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16256,%dummy}, %rd5831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16257}, %rd5831;
	}
	shf.r.wrap.b32 	%r16258, %r16257, %r16256, 1;
	shf.r.wrap.b32 	%r16259, %r16256, %r16257, 1;
	mov.b64 	%rd6259, {%r16259, %r16258};
	shf.r.wrap.b32 	%r16260, %r16257, %r16256, 8;
	shf.r.wrap.b32 	%r16261, %r16256, %r16257, 8;
	mov.b64 	%rd6260, {%r16261, %r16260};
	shr.u64 	%rd6261, %rd5831, 7;
	xor.b64  	%rd6262, %rd6259, %rd6261;
	xor.b64  	%rd6263, %rd6262, %rd6260;
	add.s64 	%rd6264, %rd5839, %rd5830;
	add.s64 	%rd6265, %rd6264, %rd6258;
	add.s64 	%rd6266, %rd6265, %rd6263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16262,%dummy}, %rd6253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16263}, %rd6253;
	}
	shf.r.wrap.b32 	%r16264, %r16263, %r16262, 19;
	shf.r.wrap.b32 	%r16265, %r16262, %r16263, 19;
	mov.b64 	%rd6267, {%r16265, %r16264};
	shf.l.wrap.b32 	%r16266, %r16262, %r16263, 3;
	shf.l.wrap.b32 	%r16267, %r16263, %r16262, 3;
	mov.b64 	%rd6268, {%r16267, %r16266};
	shr.u64 	%rd6269, %rd6253, 6;
	xor.b64  	%rd6270, %rd6267, %rd6269;
	xor.b64  	%rd6271, %rd6270, %rd6268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16268,%dummy}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16269}, %rd5832;
	}
	shf.r.wrap.b32 	%r16270, %r16269, %r16268, 1;
	shf.r.wrap.b32 	%r16271, %r16268, %r16269, 1;
	mov.b64 	%rd6272, {%r16271, %r16270};
	shf.r.wrap.b32 	%r16272, %r16269, %r16268, 8;
	shf.r.wrap.b32 	%r16273, %r16268, %r16269, 8;
	mov.b64 	%rd6273, {%r16273, %r16272};
	shr.u64 	%rd6274, %rd5832, 7;
	xor.b64  	%rd6275, %rd6272, %rd6274;
	xor.b64  	%rd6276, %rd6275, %rd6273;
	add.s64 	%rd6277, %rd5840, %rd5831;
	add.s64 	%rd6278, %rd6277, %rd6271;
	add.s64 	%rd6279, %rd6278, %rd6276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16274,%dummy}, %rd6266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16275}, %rd6266;
	}
	shf.r.wrap.b32 	%r16276, %r16275, %r16274, 19;
	shf.r.wrap.b32 	%r16277, %r16274, %r16275, 19;
	mov.b64 	%rd6280, {%r16277, %r16276};
	shf.l.wrap.b32 	%r16278, %r16274, %r16275, 3;
	shf.l.wrap.b32 	%r16279, %r16275, %r16274, 3;
	mov.b64 	%rd6281, {%r16279, %r16278};
	shr.u64 	%rd6282, %rd6266, 6;
	xor.b64  	%rd6283, %rd6280, %rd6282;
	xor.b64  	%rd6284, %rd6283, %rd6281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16280,%dummy}, %rd5833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16281}, %rd5833;
	}
	shf.r.wrap.b32 	%r16282, %r16281, %r16280, 1;
	shf.r.wrap.b32 	%r16283, %r16280, %r16281, 1;
	mov.b64 	%rd6285, {%r16283, %r16282};
	shf.r.wrap.b32 	%r16284, %r16281, %r16280, 8;
	shf.r.wrap.b32 	%r16285, %r16280, %r16281, 8;
	mov.b64 	%rd6286, {%r16285, %r16284};
	shr.u64 	%rd6287, %rd5833, 7;
	xor.b64  	%rd6288, %rd6285, %rd6287;
	xor.b64  	%rd6289, %rd6288, %rd6286;
	add.s64 	%rd6290, %rd5841, %rd5832;
	add.s64 	%rd6291, %rd6290, %rd6284;
	add.s64 	%rd6292, %rd6291, %rd6289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16286,%dummy}, %rd6279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16287}, %rd6279;
	}
	shf.r.wrap.b32 	%r16288, %r16287, %r16286, 19;
	shf.r.wrap.b32 	%r16289, %r16286, %r16287, 19;
	mov.b64 	%rd6293, {%r16289, %r16288};
	shf.l.wrap.b32 	%r16290, %r16286, %r16287, 3;
	shf.l.wrap.b32 	%r16291, %r16287, %r16286, 3;
	mov.b64 	%rd6294, {%r16291, %r16290};
	shr.u64 	%rd6295, %rd6279, 6;
	xor.b64  	%rd6296, %rd6293, %rd6295;
	xor.b64  	%rd6297, %rd6296, %rd6294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16292,%dummy}, %rd5834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16293}, %rd5834;
	}
	shf.r.wrap.b32 	%r16294, %r16293, %r16292, 1;
	shf.r.wrap.b32 	%r16295, %r16292, %r16293, 1;
	mov.b64 	%rd6298, {%r16295, %r16294};
	shf.r.wrap.b32 	%r16296, %r16293, %r16292, 8;
	shf.r.wrap.b32 	%r16297, %r16292, %r16293, 8;
	mov.b64 	%rd6299, {%r16297, %r16296};
	shr.u64 	%rd6300, %rd5834, 7;
	xor.b64  	%rd6301, %rd6298, %rd6300;
	xor.b64  	%rd6302, %rd6301, %rd6299;
	add.s64 	%rd6303, %rd5842, %rd5833;
	add.s64 	%rd6304, %rd6303, %rd6297;
	add.s64 	%rd6305, %rd6304, %rd6302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16298,%dummy}, %rd6292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16299}, %rd6292;
	}
	shf.r.wrap.b32 	%r16300, %r16299, %r16298, 19;
	shf.r.wrap.b32 	%r16301, %r16298, %r16299, 19;
	mov.b64 	%rd6306, {%r16301, %r16300};
	shf.l.wrap.b32 	%r16302, %r16298, %r16299, 3;
	shf.l.wrap.b32 	%r16303, %r16299, %r16298, 3;
	mov.b64 	%rd6307, {%r16303, %r16302};
	shr.u64 	%rd6308, %rd6292, 6;
	xor.b64  	%rd6309, %rd6306, %rd6308;
	xor.b64  	%rd6310, %rd6309, %rd6307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16304,%dummy}, %rd5835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16305}, %rd5835;
	}
	shf.r.wrap.b32 	%r16306, %r16305, %r16304, 1;
	shf.r.wrap.b32 	%r16307, %r16304, %r16305, 1;
	mov.b64 	%rd6311, {%r16307, %r16306};
	shf.r.wrap.b32 	%r16308, %r16305, %r16304, 8;
	shf.r.wrap.b32 	%r16309, %r16304, %r16305, 8;
	mov.b64 	%rd6312, {%r16309, %r16308};
	shr.u64 	%rd6313, %rd5835, 7;
	xor.b64  	%rd6314, %rd6311, %rd6313;
	xor.b64  	%rd6315, %rd6314, %rd6312;
	add.s64 	%rd6316, %rd5843, %rd5834;
	add.s64 	%rd6317, %rd6316, %rd6310;
	add.s64 	%rd6318, %rd6317, %rd6315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16310,%dummy}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16311}, %rd6305;
	}
	shf.r.wrap.b32 	%r16312, %r16311, %r16310, 19;
	shf.r.wrap.b32 	%r16313, %r16310, %r16311, 19;
	mov.b64 	%rd6319, {%r16313, %r16312};
	shf.l.wrap.b32 	%r16314, %r16310, %r16311, 3;
	shf.l.wrap.b32 	%r16315, %r16311, %r16310, 3;
	mov.b64 	%rd6320, {%r16315, %r16314};
	shr.u64 	%rd6321, %rd6305, 6;
	xor.b64  	%rd6322, %rd6319, %rd6321;
	xor.b64  	%rd6323, %rd6322, %rd6320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16316,%dummy}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16317}, %rd5836;
	}
	shf.r.wrap.b32 	%r16318, %r16317, %r16316, 1;
	shf.r.wrap.b32 	%r16319, %r16316, %r16317, 1;
	mov.b64 	%rd6324, {%r16319, %r16318};
	shf.r.wrap.b32 	%r16320, %r16317, %r16316, 8;
	shf.r.wrap.b32 	%r16321, %r16316, %r16317, 8;
	mov.b64 	%rd6325, {%r16321, %r16320};
	shr.u64 	%rd6326, %rd5836, 7;
	xor.b64  	%rd6327, %rd6324, %rd6326;
	xor.b64  	%rd6328, %rd6327, %rd6325;
	add.s64 	%rd6329, %rd6240, %rd5835;
	add.s64 	%rd6330, %rd6329, %rd6323;
	add.s64 	%rd6331, %rd6330, %rd6328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16322,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16323}, %rd6318;
	}
	shf.r.wrap.b32 	%r16324, %r16323, %r16322, 19;
	shf.r.wrap.b32 	%r16325, %r16322, %r16323, 19;
	mov.b64 	%rd6332, {%r16325, %r16324};
	shf.l.wrap.b32 	%r16326, %r16322, %r16323, 3;
	shf.l.wrap.b32 	%r16327, %r16323, %r16322, 3;
	mov.b64 	%rd6333, {%r16327, %r16326};
	shr.u64 	%rd6334, %rd6318, 6;
	xor.b64  	%rd6335, %rd6332, %rd6334;
	xor.b64  	%rd6336, %rd6335, %rd6333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16328,%dummy}, %rd5837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16329}, %rd5837;
	}
	shf.r.wrap.b32 	%r16330, %r16329, %r16328, 1;
	shf.r.wrap.b32 	%r16331, %r16328, %r16329, 1;
	mov.b64 	%rd6337, {%r16331, %r16330};
	shf.r.wrap.b32 	%r16332, %r16329, %r16328, 8;
	shf.r.wrap.b32 	%r16333, %r16328, %r16329, 8;
	mov.b64 	%rd6338, {%r16333, %r16332};
	shr.u64 	%rd6339, %rd5837, 7;
	xor.b64  	%rd6340, %rd6337, %rd6339;
	xor.b64  	%rd6341, %rd6340, %rd6338;
	add.s64 	%rd6342, %rd6253, %rd5836;
	add.s64 	%rd6343, %rd6342, %rd6336;
	add.s64 	%rd6344, %rd6343, %rd6341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16334,%dummy}, %rd6331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16335}, %rd6331;
	}
	shf.r.wrap.b32 	%r16336, %r16335, %r16334, 19;
	shf.r.wrap.b32 	%r16337, %r16334, %r16335, 19;
	mov.b64 	%rd6345, {%r16337, %r16336};
	shf.l.wrap.b32 	%r16338, %r16334, %r16335, 3;
	shf.l.wrap.b32 	%r16339, %r16335, %r16334, 3;
	mov.b64 	%rd6346, {%r16339, %r16338};
	shr.u64 	%rd6347, %rd6331, 6;
	xor.b64  	%rd6348, %rd6345, %rd6347;
	xor.b64  	%rd6349, %rd6348, %rd6346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16340,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16341}, %rd5838;
	}
	shf.r.wrap.b32 	%r16342, %r16341, %r16340, 1;
	shf.r.wrap.b32 	%r16343, %r16340, %r16341, 1;
	mov.b64 	%rd6350, {%r16343, %r16342};
	shf.r.wrap.b32 	%r16344, %r16341, %r16340, 8;
	shf.r.wrap.b32 	%r16345, %r16340, %r16341, 8;
	mov.b64 	%rd6351, {%r16345, %r16344};
	shr.u64 	%rd6352, %rd5838, 7;
	xor.b64  	%rd6353, %rd6350, %rd6352;
	xor.b64  	%rd6354, %rd6353, %rd6351;
	add.s64 	%rd6355, %rd6266, %rd5837;
	add.s64 	%rd6356, %rd6355, %rd6349;
	add.s64 	%rd6357, %rd6356, %rd6354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16346,%dummy}, %rd6344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16347}, %rd6344;
	}
	shf.r.wrap.b32 	%r16348, %r16347, %r16346, 19;
	shf.r.wrap.b32 	%r16349, %r16346, %r16347, 19;
	mov.b64 	%rd6358, {%r16349, %r16348};
	shf.l.wrap.b32 	%r16350, %r16346, %r16347, 3;
	shf.l.wrap.b32 	%r16351, %r16347, %r16346, 3;
	mov.b64 	%rd6359, {%r16351, %r16350};
	shr.u64 	%rd6360, %rd6344, 6;
	xor.b64  	%rd6361, %rd6358, %rd6360;
	xor.b64  	%rd6362, %rd6361, %rd6359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16352,%dummy}, %rd5839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16353}, %rd5839;
	}
	shf.r.wrap.b32 	%r16354, %r16353, %r16352, 1;
	shf.r.wrap.b32 	%r16355, %r16352, %r16353, 1;
	mov.b64 	%rd6363, {%r16355, %r16354};
	shf.r.wrap.b32 	%r16356, %r16353, %r16352, 8;
	shf.r.wrap.b32 	%r16357, %r16352, %r16353, 8;
	mov.b64 	%rd6364, {%r16357, %r16356};
	shr.u64 	%rd6365, %rd5839, 7;
	xor.b64  	%rd6366, %rd6363, %rd6365;
	xor.b64  	%rd6367, %rd6366, %rd6364;
	add.s64 	%rd6368, %rd6279, %rd5838;
	add.s64 	%rd6369, %rd6368, %rd6362;
	add.s64 	%rd6370, %rd6369, %rd6367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16358,%dummy}, %rd6357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16359}, %rd6357;
	}
	shf.r.wrap.b32 	%r16360, %r16359, %r16358, 19;
	shf.r.wrap.b32 	%r16361, %r16358, %r16359, 19;
	mov.b64 	%rd6371, {%r16361, %r16360};
	shf.l.wrap.b32 	%r16362, %r16358, %r16359, 3;
	shf.l.wrap.b32 	%r16363, %r16359, %r16358, 3;
	mov.b64 	%rd6372, {%r16363, %r16362};
	shr.u64 	%rd6373, %rd6357, 6;
	xor.b64  	%rd6374, %rd6371, %rd6373;
	xor.b64  	%rd6375, %rd6374, %rd6372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16364,%dummy}, %rd5840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16365}, %rd5840;
	}
	shf.r.wrap.b32 	%r16366, %r16365, %r16364, 1;
	shf.r.wrap.b32 	%r16367, %r16364, %r16365, 1;
	mov.b64 	%rd6376, {%r16367, %r16366};
	shf.r.wrap.b32 	%r16368, %r16365, %r16364, 8;
	shf.r.wrap.b32 	%r16369, %r16364, %r16365, 8;
	mov.b64 	%rd6377, {%r16369, %r16368};
	shr.u64 	%rd6378, %rd5840, 7;
	xor.b64  	%rd6379, %rd6376, %rd6378;
	xor.b64  	%rd6380, %rd6379, %rd6377;
	add.s64 	%rd6381, %rd6292, %rd5839;
	add.s64 	%rd6382, %rd6381, %rd6375;
	add.s64 	%rd6383, %rd6382, %rd6380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16370,%dummy}, %rd6370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16371}, %rd6370;
	}
	shf.r.wrap.b32 	%r16372, %r16371, %r16370, 19;
	shf.r.wrap.b32 	%r16373, %r16370, %r16371, 19;
	mov.b64 	%rd6384, {%r16373, %r16372};
	shf.l.wrap.b32 	%r16374, %r16370, %r16371, 3;
	shf.l.wrap.b32 	%r16375, %r16371, %r16370, 3;
	mov.b64 	%rd6385, {%r16375, %r16374};
	shr.u64 	%rd6386, %rd6370, 6;
	xor.b64  	%rd6387, %rd6384, %rd6386;
	xor.b64  	%rd6388, %rd6387, %rd6385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16376,%dummy}, %rd5841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16377}, %rd5841;
	}
	shf.r.wrap.b32 	%r16378, %r16377, %r16376, 1;
	shf.r.wrap.b32 	%r16379, %r16376, %r16377, 1;
	mov.b64 	%rd6389, {%r16379, %r16378};
	shf.r.wrap.b32 	%r16380, %r16377, %r16376, 8;
	shf.r.wrap.b32 	%r16381, %r16376, %r16377, 8;
	mov.b64 	%rd6390, {%r16381, %r16380};
	shr.u64 	%rd6391, %rd5841, 7;
	xor.b64  	%rd6392, %rd6389, %rd6391;
	xor.b64  	%rd6393, %rd6392, %rd6390;
	add.s64 	%rd6394, %rd6305, %rd5840;
	add.s64 	%rd6395, %rd6394, %rd6388;
	add.s64 	%rd6396, %rd6395, %rd6393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16382,%dummy}, %rd6383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16383}, %rd6383;
	}
	shf.r.wrap.b32 	%r16384, %r16383, %r16382, 19;
	shf.r.wrap.b32 	%r16385, %r16382, %r16383, 19;
	mov.b64 	%rd6397, {%r16385, %r16384};
	shf.l.wrap.b32 	%r16386, %r16382, %r16383, 3;
	shf.l.wrap.b32 	%r16387, %r16383, %r16382, 3;
	mov.b64 	%rd6398, {%r16387, %r16386};
	shr.u64 	%rd6399, %rd6383, 6;
	xor.b64  	%rd6400, %rd6397, %rd6399;
	xor.b64  	%rd6401, %rd6400, %rd6398;
	shf.r.wrap.b32 	%r16388, %r16227, %r16226, 1;
	shf.r.wrap.b32 	%r16389, %r16226, %r16227, 1;
	mov.b64 	%rd6402, {%r16389, %r16388};
	shf.r.wrap.b32 	%r16390, %r16227, %r16226, 8;
	shf.r.wrap.b32 	%r16391, %r16226, %r16227, 8;
	mov.b64 	%rd6403, {%r16391, %r16390};
	shr.u64 	%rd6404, %rd5842, 7;
	xor.b64  	%rd6405, %rd6402, %rd6404;
	xor.b64  	%rd6406, %rd6405, %rd6403;
	add.s64 	%rd6407, %rd6318, %rd5841;
	add.s64 	%rd6408, %rd6407, %rd6401;
	add.s64 	%rd6409, %rd6408, %rd6406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16392,%dummy}, %rd6396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16393}, %rd6396;
	}
	shf.r.wrap.b32 	%r16394, %r16393, %r16392, 19;
	shf.r.wrap.b32 	%r16395, %r16392, %r16393, 19;
	mov.b64 	%rd6410, {%r16395, %r16394};
	shf.l.wrap.b32 	%r16396, %r16392, %r16393, 3;
	shf.l.wrap.b32 	%r16397, %r16393, %r16392, 3;
	mov.b64 	%rd6411, {%r16397, %r16396};
	shr.u64 	%rd6412, %rd6396, 6;
	xor.b64  	%rd6413, %rd6410, %rd6412;
	xor.b64  	%rd6414, %rd6413, %rd6411;
	shf.r.wrap.b32 	%r16398, %r16239, %r16238, 1;
	shf.r.wrap.b32 	%r16399, %r16238, %r16239, 1;
	mov.b64 	%rd6415, {%r16399, %r16398};
	shf.r.wrap.b32 	%r16400, %r16239, %r16238, 8;
	shf.r.wrap.b32 	%r16401, %r16238, %r16239, 8;
	mov.b64 	%rd6416, {%r16401, %r16400};
	shr.u64 	%rd6417, %rd5843, 7;
	xor.b64  	%rd6418, %rd6415, %rd6417;
	xor.b64  	%rd6419, %rd6418, %rd6416;
	add.s64 	%rd6420, %rd6331, %rd5842;
	add.s64 	%rd6421, %rd6420, %rd6414;
	add.s64 	%rd6422, %rd6421, %rd6419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16402,%dummy}, %rd6409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16403}, %rd6409;
	}
	shf.r.wrap.b32 	%r16404, %r16403, %r16402, 19;
	shf.r.wrap.b32 	%r16405, %r16402, %r16403, 19;
	mov.b64 	%rd6423, {%r16405, %r16404};
	shf.l.wrap.b32 	%r16406, %r16402, %r16403, 3;
	shf.l.wrap.b32 	%r16407, %r16403, %r16402, 3;
	mov.b64 	%rd6424, {%r16407, %r16406};
	shr.u64 	%rd6425, %rd6409, 6;
	xor.b64  	%rd6426, %rd6423, %rd6425;
	xor.b64  	%rd6427, %rd6426, %rd6424;
	shf.r.wrap.b32 	%r16408, %r16251, %r16250, 1;
	shf.r.wrap.b32 	%r16409, %r16250, %r16251, 1;
	mov.b64 	%rd6428, {%r16409, %r16408};
	shf.r.wrap.b32 	%r16410, %r16251, %r16250, 8;
	shf.r.wrap.b32 	%r16411, %r16250, %r16251, 8;
	mov.b64 	%rd6429, {%r16411, %r16410};
	shr.u64 	%rd6430, %rd6240, 7;
	xor.b64  	%rd6431, %rd6428, %rd6430;
	xor.b64  	%rd6432, %rd6431, %rd6429;
	add.s64 	%rd6433, %rd6344, %rd5843;
	add.s64 	%rd6434, %rd6433, %rd6427;
	add.s64 	%rd6435, %rd6434, %rd6432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16412,%dummy}, %rd6216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16413}, %rd6216;
	}
	shf.r.wrap.b32 	%r16414, %r16413, %r16412, 14;
	shf.r.wrap.b32 	%r16415, %r16412, %r16413, 14;
	mov.b64 	%rd6436, {%r16415, %r16414};
	shf.r.wrap.b32 	%r16416, %r16413, %r16412, 18;
	shf.r.wrap.b32 	%r16417, %r16412, %r16413, 18;
	mov.b64 	%rd6437, {%r16417, %r16416};
	xor.b64  	%rd6438, %rd6437, %rd6436;
	shf.l.wrap.b32 	%r16418, %r16412, %r16413, 23;
	shf.l.wrap.b32 	%r16419, %r16413, %r16412, 23;
	mov.b64 	%rd6439, {%r16419, %r16418};
	xor.b64  	%rd6440, %rd6438, %rd6439;
	xor.b64  	%rd6441, %rd6192, %rd6168;
	and.b64  	%rd6442, %rd6216, %rd6441;
	xor.b64  	%rd6443, %rd6442, %rd6168;
	add.s64 	%rd6444, %rd6443, %rd6144;
	add.s64 	%rd6445, %rd6444, %rd6240;
	add.s64 	%rd6446, %rd6445, %rd44;
	add.s64 	%rd6447, %rd6446, %rd6440;
	add.s64 	%rd6448, %rd6447, %rd6155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16420,%dummy}, %rd6227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16421}, %rd6227;
	}
	shf.r.wrap.b32 	%r16422, %r16421, %r16420, 28;
	shf.r.wrap.b32 	%r16423, %r16420, %r16421, 28;
	mov.b64 	%rd6449, {%r16423, %r16422};
	shf.l.wrap.b32 	%r16424, %r16420, %r16421, 30;
	shf.l.wrap.b32 	%r16425, %r16421, %r16420, 30;
	mov.b64 	%rd6450, {%r16425, %r16424};
	xor.b64  	%rd6451, %rd6450, %rd6449;
	shf.l.wrap.b32 	%r16426, %r16420, %r16421, 25;
	shf.l.wrap.b32 	%r16427, %r16421, %r16420, 25;
	mov.b64 	%rd6452, {%r16427, %r16426};
	xor.b64  	%rd6453, %rd6451, %rd6452;
	and.b64  	%rd6454, %rd6227, %rd6203;
	xor.b64  	%rd6455, %rd6227, %rd6203;
	and.b64  	%rd6456, %rd6455, %rd6179;
	or.b64  	%rd6457, %rd6456, %rd6454;
	add.s64 	%rd6458, %rd6447, %rd6457;
	add.s64 	%rd6459, %rd6458, %rd6453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16428,%dummy}, %rd6448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16429}, %rd6448;
	}
	shf.r.wrap.b32 	%r16430, %r16429, %r16428, 14;
	shf.r.wrap.b32 	%r16431, %r16428, %r16429, 14;
	mov.b64 	%rd6460, {%r16431, %r16430};
	shf.r.wrap.b32 	%r16432, %r16429, %r16428, 18;
	shf.r.wrap.b32 	%r16433, %r16428, %r16429, 18;
	mov.b64 	%rd6461, {%r16433, %r16432};
	xor.b64  	%rd6462, %rd6461, %rd6460;
	shf.l.wrap.b32 	%r16434, %r16428, %r16429, 23;
	shf.l.wrap.b32 	%r16435, %r16429, %r16428, 23;
	mov.b64 	%rd6463, {%r16435, %r16434};
	xor.b64  	%rd6464, %rd6462, %rd6463;
	xor.b64  	%rd6465, %rd6216, %rd6192;
	and.b64  	%rd6466, %rd6448, %rd6465;
	xor.b64  	%rd6467, %rd6466, %rd6192;
	add.s64 	%rd6468, %rd6253, %rd6168;
	add.s64 	%rd6469, %rd6468, %rd45;
	add.s64 	%rd6470, %rd6469, %rd6467;
	add.s64 	%rd6471, %rd6470, %rd6464;
	add.s64 	%rd6472, %rd6471, %rd6179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16436,%dummy}, %rd6459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16437}, %rd6459;
	}
	shf.r.wrap.b32 	%r16438, %r16437, %r16436, 28;
	shf.r.wrap.b32 	%r16439, %r16436, %r16437, 28;
	mov.b64 	%rd6473, {%r16439, %r16438};
	shf.l.wrap.b32 	%r16440, %r16436, %r16437, 30;
	shf.l.wrap.b32 	%r16441, %r16437, %r16436, 30;
	mov.b64 	%rd6474, {%r16441, %r16440};
	xor.b64  	%rd6475, %rd6474, %rd6473;
	shf.l.wrap.b32 	%r16442, %r16436, %r16437, 25;
	shf.l.wrap.b32 	%r16443, %r16437, %r16436, 25;
	mov.b64 	%rd6476, {%r16443, %r16442};
	xor.b64  	%rd6477, %rd6475, %rd6476;
	and.b64  	%rd6478, %rd6459, %rd6227;
	xor.b64  	%rd6479, %rd6459, %rd6227;
	and.b64  	%rd6480, %rd6479, %rd6203;
	or.b64  	%rd6481, %rd6480, %rd6478;
	add.s64 	%rd6482, %rd6471, %rd6481;
	add.s64 	%rd6483, %rd6482, %rd6477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16444,%dummy}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16445}, %rd6472;
	}
	shf.r.wrap.b32 	%r16446, %r16445, %r16444, 14;
	shf.r.wrap.b32 	%r16447, %r16444, %r16445, 14;
	mov.b64 	%rd6484, {%r16447, %r16446};
	shf.r.wrap.b32 	%r16448, %r16445, %r16444, 18;
	shf.r.wrap.b32 	%r16449, %r16444, %r16445, 18;
	mov.b64 	%rd6485, {%r16449, %r16448};
	xor.b64  	%rd6486, %rd6485, %rd6484;
	shf.l.wrap.b32 	%r16450, %r16444, %r16445, 23;
	shf.l.wrap.b32 	%r16451, %r16445, %r16444, 23;
	mov.b64 	%rd6487, {%r16451, %r16450};
	xor.b64  	%rd6488, %rd6486, %rd6487;
	xor.b64  	%rd6489, %rd6448, %rd6216;
	and.b64  	%rd6490, %rd6472, %rd6489;
	xor.b64  	%rd6491, %rd6490, %rd6216;
	add.s64 	%rd6492, %rd6266, %rd6192;
	add.s64 	%rd6493, %rd6492, %rd46;
	add.s64 	%rd6494, %rd6493, %rd6491;
	add.s64 	%rd6495, %rd6494, %rd6488;
	add.s64 	%rd6496, %rd6495, %rd6203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16452,%dummy}, %rd6483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16453}, %rd6483;
	}
	shf.r.wrap.b32 	%r16454, %r16453, %r16452, 28;
	shf.r.wrap.b32 	%r16455, %r16452, %r16453, 28;
	mov.b64 	%rd6497, {%r16455, %r16454};
	shf.l.wrap.b32 	%r16456, %r16452, %r16453, 30;
	shf.l.wrap.b32 	%r16457, %r16453, %r16452, 30;
	mov.b64 	%rd6498, {%r16457, %r16456};
	xor.b64  	%rd6499, %rd6498, %rd6497;
	shf.l.wrap.b32 	%r16458, %r16452, %r16453, 25;
	shf.l.wrap.b32 	%r16459, %r16453, %r16452, 25;
	mov.b64 	%rd6500, {%r16459, %r16458};
	xor.b64  	%rd6501, %rd6499, %rd6500;
	and.b64  	%rd6502, %rd6483, %rd6459;
	xor.b64  	%rd6503, %rd6483, %rd6459;
	and.b64  	%rd6504, %rd6503, %rd6227;
	or.b64  	%rd6505, %rd6504, %rd6502;
	add.s64 	%rd6506, %rd6495, %rd6505;
	add.s64 	%rd6507, %rd6506, %rd6501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16460,%dummy}, %rd6496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16461}, %rd6496;
	}
	shf.r.wrap.b32 	%r16462, %r16461, %r16460, 14;
	shf.r.wrap.b32 	%r16463, %r16460, %r16461, 14;
	mov.b64 	%rd6508, {%r16463, %r16462};
	shf.r.wrap.b32 	%r16464, %r16461, %r16460, 18;
	shf.r.wrap.b32 	%r16465, %r16460, %r16461, 18;
	mov.b64 	%rd6509, {%r16465, %r16464};
	xor.b64  	%rd6510, %rd6509, %rd6508;
	shf.l.wrap.b32 	%r16466, %r16460, %r16461, 23;
	shf.l.wrap.b32 	%r16467, %r16461, %r16460, 23;
	mov.b64 	%rd6511, {%r16467, %r16466};
	xor.b64  	%rd6512, %rd6510, %rd6511;
	xor.b64  	%rd6513, %rd6472, %rd6448;
	and.b64  	%rd6514, %rd6496, %rd6513;
	xor.b64  	%rd6515, %rd6514, %rd6448;
	add.s64 	%rd6516, %rd6279, %rd6216;
	add.s64 	%rd6517, %rd6516, %rd47;
	add.s64 	%rd6518, %rd6517, %rd6515;
	add.s64 	%rd6519, %rd6518, %rd6512;
	add.s64 	%rd6520, %rd6519, %rd6227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16468,%dummy}, %rd6507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16469}, %rd6507;
	}
	shf.r.wrap.b32 	%r16470, %r16469, %r16468, 28;
	shf.r.wrap.b32 	%r16471, %r16468, %r16469, 28;
	mov.b64 	%rd6521, {%r16471, %r16470};
	shf.l.wrap.b32 	%r16472, %r16468, %r16469, 30;
	shf.l.wrap.b32 	%r16473, %r16469, %r16468, 30;
	mov.b64 	%rd6522, {%r16473, %r16472};
	xor.b64  	%rd6523, %rd6522, %rd6521;
	shf.l.wrap.b32 	%r16474, %r16468, %r16469, 25;
	shf.l.wrap.b32 	%r16475, %r16469, %r16468, 25;
	mov.b64 	%rd6524, {%r16475, %r16474};
	xor.b64  	%rd6525, %rd6523, %rd6524;
	and.b64  	%rd6526, %rd6507, %rd6483;
	xor.b64  	%rd6527, %rd6507, %rd6483;
	and.b64  	%rd6528, %rd6527, %rd6459;
	or.b64  	%rd6529, %rd6528, %rd6526;
	add.s64 	%rd6530, %rd6519, %rd6529;
	add.s64 	%rd6531, %rd6530, %rd6525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16476,%dummy}, %rd6520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16477}, %rd6520;
	}
	shf.r.wrap.b32 	%r16478, %r16477, %r16476, 14;
	shf.r.wrap.b32 	%r16479, %r16476, %r16477, 14;
	mov.b64 	%rd6532, {%r16479, %r16478};
	shf.r.wrap.b32 	%r16480, %r16477, %r16476, 18;
	shf.r.wrap.b32 	%r16481, %r16476, %r16477, 18;
	mov.b64 	%rd6533, {%r16481, %r16480};
	xor.b64  	%rd6534, %rd6533, %rd6532;
	shf.l.wrap.b32 	%r16482, %r16476, %r16477, 23;
	shf.l.wrap.b32 	%r16483, %r16477, %r16476, 23;
	mov.b64 	%rd6535, {%r16483, %r16482};
	xor.b64  	%rd6536, %rd6534, %rd6535;
	xor.b64  	%rd6537, %rd6496, %rd6472;
	and.b64  	%rd6538, %rd6520, %rd6537;
	xor.b64  	%rd6539, %rd6538, %rd6472;
	add.s64 	%rd6540, %rd6448, %rd6292;
	add.s64 	%rd6541, %rd6540, %rd48;
	add.s64 	%rd6542, %rd6541, %rd6539;
	add.s64 	%rd6543, %rd6542, %rd6536;
	add.s64 	%rd6544, %rd6543, %rd6459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16484,%dummy}, %rd6531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16485}, %rd6531;
	}
	shf.r.wrap.b32 	%r16486, %r16485, %r16484, 28;
	shf.r.wrap.b32 	%r16487, %r16484, %r16485, 28;
	mov.b64 	%rd6545, {%r16487, %r16486};
	shf.l.wrap.b32 	%r16488, %r16484, %r16485, 30;
	shf.l.wrap.b32 	%r16489, %r16485, %r16484, 30;
	mov.b64 	%rd6546, {%r16489, %r16488};
	xor.b64  	%rd6547, %rd6546, %rd6545;
	shf.l.wrap.b32 	%r16490, %r16484, %r16485, 25;
	shf.l.wrap.b32 	%r16491, %r16485, %r16484, 25;
	mov.b64 	%rd6548, {%r16491, %r16490};
	xor.b64  	%rd6549, %rd6547, %rd6548;
	and.b64  	%rd6550, %rd6531, %rd6507;
	xor.b64  	%rd6551, %rd6531, %rd6507;
	and.b64  	%rd6552, %rd6551, %rd6483;
	or.b64  	%rd6553, %rd6552, %rd6550;
	add.s64 	%rd6554, %rd6543, %rd6553;
	add.s64 	%rd6555, %rd6554, %rd6549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16492,%dummy}, %rd6544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16493}, %rd6544;
	}
	shf.r.wrap.b32 	%r16494, %r16493, %r16492, 14;
	shf.r.wrap.b32 	%r16495, %r16492, %r16493, 14;
	mov.b64 	%rd6556, {%r16495, %r16494};
	shf.r.wrap.b32 	%r16496, %r16493, %r16492, 18;
	shf.r.wrap.b32 	%r16497, %r16492, %r16493, 18;
	mov.b64 	%rd6557, {%r16497, %r16496};
	xor.b64  	%rd6558, %rd6557, %rd6556;
	shf.l.wrap.b32 	%r16498, %r16492, %r16493, 23;
	shf.l.wrap.b32 	%r16499, %r16493, %r16492, 23;
	mov.b64 	%rd6559, {%r16499, %r16498};
	xor.b64  	%rd6560, %rd6558, %rd6559;
	xor.b64  	%rd6561, %rd6520, %rd6496;
	and.b64  	%rd6562, %rd6544, %rd6561;
	xor.b64  	%rd6563, %rd6562, %rd6496;
	add.s64 	%rd6564, %rd6472, %rd6305;
	add.s64 	%rd6565, %rd6564, %rd49;
	add.s64 	%rd6566, %rd6565, %rd6563;
	add.s64 	%rd6567, %rd6566, %rd6560;
	add.s64 	%rd6568, %rd6567, %rd6483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16500,%dummy}, %rd6555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16501}, %rd6555;
	}
	shf.r.wrap.b32 	%r16502, %r16501, %r16500, 28;
	shf.r.wrap.b32 	%r16503, %r16500, %r16501, 28;
	mov.b64 	%rd6569, {%r16503, %r16502};
	shf.l.wrap.b32 	%r16504, %r16500, %r16501, 30;
	shf.l.wrap.b32 	%r16505, %r16501, %r16500, 30;
	mov.b64 	%rd6570, {%r16505, %r16504};
	xor.b64  	%rd6571, %rd6570, %rd6569;
	shf.l.wrap.b32 	%r16506, %r16500, %r16501, 25;
	shf.l.wrap.b32 	%r16507, %r16501, %r16500, 25;
	mov.b64 	%rd6572, {%r16507, %r16506};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	and.b64  	%rd6574, %rd6555, %rd6531;
	xor.b64  	%rd6575, %rd6555, %rd6531;
	and.b64  	%rd6576, %rd6575, %rd6507;
	or.b64  	%rd6577, %rd6576, %rd6574;
	add.s64 	%rd6578, %rd6567, %rd6577;
	add.s64 	%rd6579, %rd6578, %rd6573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16508,%dummy}, %rd6568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16509}, %rd6568;
	}
	shf.r.wrap.b32 	%r16510, %r16509, %r16508, 14;
	shf.r.wrap.b32 	%r16511, %r16508, %r16509, 14;
	mov.b64 	%rd6580, {%r16511, %r16510};
	shf.r.wrap.b32 	%r16512, %r16509, %r16508, 18;
	shf.r.wrap.b32 	%r16513, %r16508, %r16509, 18;
	mov.b64 	%rd6581, {%r16513, %r16512};
	xor.b64  	%rd6582, %rd6581, %rd6580;
	shf.l.wrap.b32 	%r16514, %r16508, %r16509, 23;
	shf.l.wrap.b32 	%r16515, %r16509, %r16508, 23;
	mov.b64 	%rd6583, {%r16515, %r16514};
	xor.b64  	%rd6584, %rd6582, %rd6583;
	xor.b64  	%rd6585, %rd6544, %rd6520;
	and.b64  	%rd6586, %rd6568, %rd6585;
	xor.b64  	%rd6587, %rd6586, %rd6520;
	add.s64 	%rd6588, %rd6496, %rd6318;
	add.s64 	%rd6589, %rd6588, %rd50;
	add.s64 	%rd6590, %rd6589, %rd6587;
	add.s64 	%rd6591, %rd6590, %rd6584;
	add.s64 	%rd6592, %rd6591, %rd6507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16516,%dummy}, %rd6579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16517}, %rd6579;
	}
	shf.r.wrap.b32 	%r16518, %r16517, %r16516, 28;
	shf.r.wrap.b32 	%r16519, %r16516, %r16517, 28;
	mov.b64 	%rd6593, {%r16519, %r16518};
	shf.l.wrap.b32 	%r16520, %r16516, %r16517, 30;
	shf.l.wrap.b32 	%r16521, %r16517, %r16516, 30;
	mov.b64 	%rd6594, {%r16521, %r16520};
	xor.b64  	%rd6595, %rd6594, %rd6593;
	shf.l.wrap.b32 	%r16522, %r16516, %r16517, 25;
	shf.l.wrap.b32 	%r16523, %r16517, %r16516, 25;
	mov.b64 	%rd6596, {%r16523, %r16522};
	xor.b64  	%rd6597, %rd6595, %rd6596;
	and.b64  	%rd6598, %rd6579, %rd6555;
	xor.b64  	%rd6599, %rd6579, %rd6555;
	and.b64  	%rd6600, %rd6599, %rd6531;
	or.b64  	%rd6601, %rd6600, %rd6598;
	add.s64 	%rd6602, %rd6591, %rd6601;
	add.s64 	%rd6603, %rd6602, %rd6597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16524,%dummy}, %rd6592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16525}, %rd6592;
	}
	shf.r.wrap.b32 	%r16526, %r16525, %r16524, 14;
	shf.r.wrap.b32 	%r16527, %r16524, %r16525, 14;
	mov.b64 	%rd6604, {%r16527, %r16526};
	shf.r.wrap.b32 	%r16528, %r16525, %r16524, 18;
	shf.r.wrap.b32 	%r16529, %r16524, %r16525, 18;
	mov.b64 	%rd6605, {%r16529, %r16528};
	xor.b64  	%rd6606, %rd6605, %rd6604;
	shf.l.wrap.b32 	%r16530, %r16524, %r16525, 23;
	shf.l.wrap.b32 	%r16531, %r16525, %r16524, 23;
	mov.b64 	%rd6607, {%r16531, %r16530};
	xor.b64  	%rd6608, %rd6606, %rd6607;
	xor.b64  	%rd6609, %rd6568, %rd6544;
	and.b64  	%rd6610, %rd6592, %rd6609;
	xor.b64  	%rd6611, %rd6610, %rd6544;
	add.s64 	%rd6612, %rd6520, %rd6331;
	add.s64 	%rd6613, %rd6612, %rd51;
	add.s64 	%rd6614, %rd6613, %rd6611;
	add.s64 	%rd6615, %rd6614, %rd6608;
	add.s64 	%rd6616, %rd6615, %rd6531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16532,%dummy}, %rd6603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16533}, %rd6603;
	}
	shf.r.wrap.b32 	%r16534, %r16533, %r16532, 28;
	shf.r.wrap.b32 	%r16535, %r16532, %r16533, 28;
	mov.b64 	%rd6617, {%r16535, %r16534};
	shf.l.wrap.b32 	%r16536, %r16532, %r16533, 30;
	shf.l.wrap.b32 	%r16537, %r16533, %r16532, 30;
	mov.b64 	%rd6618, {%r16537, %r16536};
	xor.b64  	%rd6619, %rd6618, %rd6617;
	shf.l.wrap.b32 	%r16538, %r16532, %r16533, 25;
	shf.l.wrap.b32 	%r16539, %r16533, %r16532, 25;
	mov.b64 	%rd6620, {%r16539, %r16538};
	xor.b64  	%rd6621, %rd6619, %rd6620;
	and.b64  	%rd6622, %rd6603, %rd6579;
	xor.b64  	%rd6623, %rd6603, %rd6579;
	and.b64  	%rd6624, %rd6623, %rd6555;
	or.b64  	%rd6625, %rd6624, %rd6622;
	add.s64 	%rd6626, %rd6615, %rd6625;
	add.s64 	%rd6627, %rd6626, %rd6621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16540,%dummy}, %rd6616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16541}, %rd6616;
	}
	shf.r.wrap.b32 	%r16542, %r16541, %r16540, 14;
	shf.r.wrap.b32 	%r16543, %r16540, %r16541, 14;
	mov.b64 	%rd6628, {%r16543, %r16542};
	shf.r.wrap.b32 	%r16544, %r16541, %r16540, 18;
	shf.r.wrap.b32 	%r16545, %r16540, %r16541, 18;
	mov.b64 	%rd6629, {%r16545, %r16544};
	xor.b64  	%rd6630, %rd6629, %rd6628;
	shf.l.wrap.b32 	%r16546, %r16540, %r16541, 23;
	shf.l.wrap.b32 	%r16547, %r16541, %r16540, 23;
	mov.b64 	%rd6631, {%r16547, %r16546};
	xor.b64  	%rd6632, %rd6630, %rd6631;
	xor.b64  	%rd6633, %rd6592, %rd6568;
	and.b64  	%rd6634, %rd6616, %rd6633;
	xor.b64  	%rd6635, %rd6634, %rd6568;
	add.s64 	%rd6636, %rd6544, %rd6344;
	add.s64 	%rd6637, %rd6636, %rd52;
	add.s64 	%rd6638, %rd6637, %rd6635;
	add.s64 	%rd6639, %rd6638, %rd6632;
	add.s64 	%rd6640, %rd6639, %rd6555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16548,%dummy}, %rd6627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16549}, %rd6627;
	}
	shf.r.wrap.b32 	%r16550, %r16549, %r16548, 28;
	shf.r.wrap.b32 	%r16551, %r16548, %r16549, 28;
	mov.b64 	%rd6641, {%r16551, %r16550};
	shf.l.wrap.b32 	%r16552, %r16548, %r16549, 30;
	shf.l.wrap.b32 	%r16553, %r16549, %r16548, 30;
	mov.b64 	%rd6642, {%r16553, %r16552};
	xor.b64  	%rd6643, %rd6642, %rd6641;
	shf.l.wrap.b32 	%r16554, %r16548, %r16549, 25;
	shf.l.wrap.b32 	%r16555, %r16549, %r16548, 25;
	mov.b64 	%rd6644, {%r16555, %r16554};
	xor.b64  	%rd6645, %rd6643, %rd6644;
	and.b64  	%rd6646, %rd6627, %rd6603;
	xor.b64  	%rd6647, %rd6627, %rd6603;
	and.b64  	%rd6648, %rd6647, %rd6579;
	or.b64  	%rd6649, %rd6648, %rd6646;
	add.s64 	%rd6650, %rd6639, %rd6649;
	add.s64 	%rd6651, %rd6650, %rd6645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16556,%dummy}, %rd6640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16557}, %rd6640;
	}
	shf.r.wrap.b32 	%r16558, %r16557, %r16556, 14;
	shf.r.wrap.b32 	%r16559, %r16556, %r16557, 14;
	mov.b64 	%rd6652, {%r16559, %r16558};
	shf.r.wrap.b32 	%r16560, %r16557, %r16556, 18;
	shf.r.wrap.b32 	%r16561, %r16556, %r16557, 18;
	mov.b64 	%rd6653, {%r16561, %r16560};
	xor.b64  	%rd6654, %rd6653, %rd6652;
	shf.l.wrap.b32 	%r16562, %r16556, %r16557, 23;
	shf.l.wrap.b32 	%r16563, %r16557, %r16556, 23;
	mov.b64 	%rd6655, {%r16563, %r16562};
	xor.b64  	%rd6656, %rd6654, %rd6655;
	xor.b64  	%rd6657, %rd6616, %rd6592;
	and.b64  	%rd6658, %rd6640, %rd6657;
	xor.b64  	%rd6659, %rd6658, %rd6592;
	add.s64 	%rd6660, %rd6568, %rd6357;
	add.s64 	%rd6661, %rd6660, %rd53;
	add.s64 	%rd6662, %rd6661, %rd6659;
	add.s64 	%rd6663, %rd6662, %rd6656;
	add.s64 	%rd6664, %rd6663, %rd6579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16564,%dummy}, %rd6651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16565}, %rd6651;
	}
	shf.r.wrap.b32 	%r16566, %r16565, %r16564, 28;
	shf.r.wrap.b32 	%r16567, %r16564, %r16565, 28;
	mov.b64 	%rd6665, {%r16567, %r16566};
	shf.l.wrap.b32 	%r16568, %r16564, %r16565, 30;
	shf.l.wrap.b32 	%r16569, %r16565, %r16564, 30;
	mov.b64 	%rd6666, {%r16569, %r16568};
	xor.b64  	%rd6667, %rd6666, %rd6665;
	shf.l.wrap.b32 	%r16570, %r16564, %r16565, 25;
	shf.l.wrap.b32 	%r16571, %r16565, %r16564, 25;
	mov.b64 	%rd6668, {%r16571, %r16570};
	xor.b64  	%rd6669, %rd6667, %rd6668;
	and.b64  	%rd6670, %rd6651, %rd6627;
	xor.b64  	%rd6671, %rd6651, %rd6627;
	and.b64  	%rd6672, %rd6671, %rd6603;
	or.b64  	%rd6673, %rd6672, %rd6670;
	add.s64 	%rd6674, %rd6663, %rd6673;
	add.s64 	%rd6675, %rd6674, %rd6669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16572,%dummy}, %rd6664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16573}, %rd6664;
	}
	shf.r.wrap.b32 	%r16574, %r16573, %r16572, 14;
	shf.r.wrap.b32 	%r16575, %r16572, %r16573, 14;
	mov.b64 	%rd6676, {%r16575, %r16574};
	shf.r.wrap.b32 	%r16576, %r16573, %r16572, 18;
	shf.r.wrap.b32 	%r16577, %r16572, %r16573, 18;
	mov.b64 	%rd6677, {%r16577, %r16576};
	xor.b64  	%rd6678, %rd6677, %rd6676;
	shf.l.wrap.b32 	%r16578, %r16572, %r16573, 23;
	shf.l.wrap.b32 	%r16579, %r16573, %r16572, 23;
	mov.b64 	%rd6679, {%r16579, %r16578};
	xor.b64  	%rd6680, %rd6678, %rd6679;
	xor.b64  	%rd6681, %rd6640, %rd6616;
	and.b64  	%rd6682, %rd6664, %rd6681;
	xor.b64  	%rd6683, %rd6682, %rd6616;
	add.s64 	%rd6684, %rd6592, %rd6370;
	add.s64 	%rd6685, %rd6684, %rd54;
	add.s64 	%rd6686, %rd6685, %rd6683;
	add.s64 	%rd6687, %rd6686, %rd6680;
	add.s64 	%rd6688, %rd6687, %rd6603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16580,%dummy}, %rd6675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16581}, %rd6675;
	}
	shf.r.wrap.b32 	%r16582, %r16581, %r16580, 28;
	shf.r.wrap.b32 	%r16583, %r16580, %r16581, 28;
	mov.b64 	%rd6689, {%r16583, %r16582};
	shf.l.wrap.b32 	%r16584, %r16580, %r16581, 30;
	shf.l.wrap.b32 	%r16585, %r16581, %r16580, 30;
	mov.b64 	%rd6690, {%r16585, %r16584};
	xor.b64  	%rd6691, %rd6690, %rd6689;
	shf.l.wrap.b32 	%r16586, %r16580, %r16581, 25;
	shf.l.wrap.b32 	%r16587, %r16581, %r16580, 25;
	mov.b64 	%rd6692, {%r16587, %r16586};
	xor.b64  	%rd6693, %rd6691, %rd6692;
	and.b64  	%rd6694, %rd6675, %rd6651;
	xor.b64  	%rd6695, %rd6675, %rd6651;
	and.b64  	%rd6696, %rd6695, %rd6627;
	or.b64  	%rd6697, %rd6696, %rd6694;
	add.s64 	%rd6698, %rd6687, %rd6697;
	add.s64 	%rd6699, %rd6698, %rd6693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16588,%dummy}, %rd6688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16589}, %rd6688;
	}
	shf.r.wrap.b32 	%r16590, %r16589, %r16588, 14;
	shf.r.wrap.b32 	%r16591, %r16588, %r16589, 14;
	mov.b64 	%rd6700, {%r16591, %r16590};
	shf.r.wrap.b32 	%r16592, %r16589, %r16588, 18;
	shf.r.wrap.b32 	%r16593, %r16588, %r16589, 18;
	mov.b64 	%rd6701, {%r16593, %r16592};
	xor.b64  	%rd6702, %rd6701, %rd6700;
	shf.l.wrap.b32 	%r16594, %r16588, %r16589, 23;
	shf.l.wrap.b32 	%r16595, %r16589, %r16588, 23;
	mov.b64 	%rd6703, {%r16595, %r16594};
	xor.b64  	%rd6704, %rd6702, %rd6703;
	xor.b64  	%rd6705, %rd6664, %rd6640;
	and.b64  	%rd6706, %rd6688, %rd6705;
	xor.b64  	%rd6707, %rd6706, %rd6640;
	add.s64 	%rd6708, %rd6616, %rd6383;
	add.s64 	%rd6709, %rd6708, %rd55;
	add.s64 	%rd6710, %rd6709, %rd6707;
	add.s64 	%rd6711, %rd6710, %rd6704;
	add.s64 	%rd6712, %rd6711, %rd6627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16596,%dummy}, %rd6699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16597}, %rd6699;
	}
	shf.r.wrap.b32 	%r16598, %r16597, %r16596, 28;
	shf.r.wrap.b32 	%r16599, %r16596, %r16597, 28;
	mov.b64 	%rd6713, {%r16599, %r16598};
	shf.l.wrap.b32 	%r16600, %r16596, %r16597, 30;
	shf.l.wrap.b32 	%r16601, %r16597, %r16596, 30;
	mov.b64 	%rd6714, {%r16601, %r16600};
	xor.b64  	%rd6715, %rd6714, %rd6713;
	shf.l.wrap.b32 	%r16602, %r16596, %r16597, 25;
	shf.l.wrap.b32 	%r16603, %r16597, %r16596, 25;
	mov.b64 	%rd6716, {%r16603, %r16602};
	xor.b64  	%rd6717, %rd6715, %rd6716;
	and.b64  	%rd6718, %rd6699, %rd6675;
	xor.b64  	%rd6719, %rd6699, %rd6675;
	and.b64  	%rd6720, %rd6719, %rd6651;
	or.b64  	%rd6721, %rd6720, %rd6718;
	add.s64 	%rd6722, %rd6711, %rd6721;
	add.s64 	%rd6723, %rd6722, %rd6717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16604,%dummy}, %rd6712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16605}, %rd6712;
	}
	shf.r.wrap.b32 	%r16606, %r16605, %r16604, 14;
	shf.r.wrap.b32 	%r16607, %r16604, %r16605, 14;
	mov.b64 	%rd6724, {%r16607, %r16606};
	shf.r.wrap.b32 	%r16608, %r16605, %r16604, 18;
	shf.r.wrap.b32 	%r16609, %r16604, %r16605, 18;
	mov.b64 	%rd6725, {%r16609, %r16608};
	xor.b64  	%rd6726, %rd6725, %rd6724;
	shf.l.wrap.b32 	%r16610, %r16604, %r16605, 23;
	shf.l.wrap.b32 	%r16611, %r16605, %r16604, 23;
	mov.b64 	%rd6727, {%r16611, %r16610};
	xor.b64  	%rd6728, %rd6726, %rd6727;
	xor.b64  	%rd6729, %rd6688, %rd6664;
	and.b64  	%rd6730, %rd6712, %rd6729;
	xor.b64  	%rd6731, %rd6730, %rd6664;
	add.s64 	%rd6732, %rd6640, %rd6396;
	add.s64 	%rd6733, %rd6732, %rd56;
	add.s64 	%rd6734, %rd6733, %rd6731;
	add.s64 	%rd6735, %rd6734, %rd6728;
	add.s64 	%rd6736, %rd6735, %rd6651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16612,%dummy}, %rd6723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16613}, %rd6723;
	}
	shf.r.wrap.b32 	%r16614, %r16613, %r16612, 28;
	shf.r.wrap.b32 	%r16615, %r16612, %r16613, 28;
	mov.b64 	%rd6737, {%r16615, %r16614};
	shf.l.wrap.b32 	%r16616, %r16612, %r16613, 30;
	shf.l.wrap.b32 	%r16617, %r16613, %r16612, 30;
	mov.b64 	%rd6738, {%r16617, %r16616};
	xor.b64  	%rd6739, %rd6738, %rd6737;
	shf.l.wrap.b32 	%r16618, %r16612, %r16613, 25;
	shf.l.wrap.b32 	%r16619, %r16613, %r16612, 25;
	mov.b64 	%rd6740, {%r16619, %r16618};
	xor.b64  	%rd6741, %rd6739, %rd6740;
	and.b64  	%rd6742, %rd6723, %rd6699;
	xor.b64  	%rd6743, %rd6723, %rd6699;
	and.b64  	%rd6744, %rd6743, %rd6675;
	or.b64  	%rd6745, %rd6744, %rd6742;
	add.s64 	%rd6746, %rd6735, %rd6745;
	add.s64 	%rd6747, %rd6746, %rd6741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16620,%dummy}, %rd6736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16621}, %rd6736;
	}
	shf.r.wrap.b32 	%r16622, %r16621, %r16620, 14;
	shf.r.wrap.b32 	%r16623, %r16620, %r16621, 14;
	mov.b64 	%rd6748, {%r16623, %r16622};
	shf.r.wrap.b32 	%r16624, %r16621, %r16620, 18;
	shf.r.wrap.b32 	%r16625, %r16620, %r16621, 18;
	mov.b64 	%rd6749, {%r16625, %r16624};
	xor.b64  	%rd6750, %rd6749, %rd6748;
	shf.l.wrap.b32 	%r16626, %r16620, %r16621, 23;
	shf.l.wrap.b32 	%r16627, %r16621, %r16620, 23;
	mov.b64 	%rd6751, {%r16627, %r16626};
	xor.b64  	%rd6752, %rd6750, %rd6751;
	xor.b64  	%rd6753, %rd6712, %rd6688;
	and.b64  	%rd6754, %rd6736, %rd6753;
	xor.b64  	%rd6755, %rd6754, %rd6688;
	add.s64 	%rd6756, %rd6664, %rd6409;
	add.s64 	%rd6757, %rd6756, %rd57;
	add.s64 	%rd6758, %rd6757, %rd6755;
	add.s64 	%rd6759, %rd6758, %rd6752;
	add.s64 	%rd6760, %rd6759, %rd6675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16628,%dummy}, %rd6747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16629}, %rd6747;
	}
	shf.r.wrap.b32 	%r16630, %r16629, %r16628, 28;
	shf.r.wrap.b32 	%r16631, %r16628, %r16629, 28;
	mov.b64 	%rd6761, {%r16631, %r16630};
	shf.l.wrap.b32 	%r16632, %r16628, %r16629, 30;
	shf.l.wrap.b32 	%r16633, %r16629, %r16628, 30;
	mov.b64 	%rd6762, {%r16633, %r16632};
	xor.b64  	%rd6763, %rd6762, %rd6761;
	shf.l.wrap.b32 	%r16634, %r16628, %r16629, 25;
	shf.l.wrap.b32 	%r16635, %r16629, %r16628, 25;
	mov.b64 	%rd6764, {%r16635, %r16634};
	xor.b64  	%rd6765, %rd6763, %rd6764;
	and.b64  	%rd6766, %rd6747, %rd6723;
	xor.b64  	%rd6767, %rd6747, %rd6723;
	and.b64  	%rd6768, %rd6767, %rd6699;
	or.b64  	%rd6769, %rd6768, %rd6766;
	add.s64 	%rd6770, %rd6759, %rd6769;
	add.s64 	%rd6771, %rd6770, %rd6765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16636,%dummy}, %rd6760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16637}, %rd6760;
	}
	shf.r.wrap.b32 	%r16638, %r16637, %r16636, 14;
	shf.r.wrap.b32 	%r16639, %r16636, %r16637, 14;
	mov.b64 	%rd6772, {%r16639, %r16638};
	shf.r.wrap.b32 	%r16640, %r16637, %r16636, 18;
	shf.r.wrap.b32 	%r16641, %r16636, %r16637, 18;
	mov.b64 	%rd6773, {%r16641, %r16640};
	xor.b64  	%rd6774, %rd6773, %rd6772;
	shf.l.wrap.b32 	%r16642, %r16636, %r16637, 23;
	shf.l.wrap.b32 	%r16643, %r16637, %r16636, 23;
	mov.b64 	%rd6775, {%r16643, %r16642};
	xor.b64  	%rd6776, %rd6774, %rd6775;
	xor.b64  	%rd6777, %rd6736, %rd6712;
	and.b64  	%rd6778, %rd6760, %rd6777;
	xor.b64  	%rd6779, %rd6778, %rd6712;
	add.s64 	%rd6780, %rd6688, %rd6422;
	add.s64 	%rd6781, %rd6780, %rd58;
	add.s64 	%rd6782, %rd6781, %rd6779;
	add.s64 	%rd6783, %rd6782, %rd6776;
	add.s64 	%rd6784, %rd6783, %rd6699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16644,%dummy}, %rd6771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16645}, %rd6771;
	}
	shf.r.wrap.b32 	%r16646, %r16645, %r16644, 28;
	shf.r.wrap.b32 	%r16647, %r16644, %r16645, 28;
	mov.b64 	%rd6785, {%r16647, %r16646};
	shf.l.wrap.b32 	%r16648, %r16644, %r16645, 30;
	shf.l.wrap.b32 	%r16649, %r16645, %r16644, 30;
	mov.b64 	%rd6786, {%r16649, %r16648};
	xor.b64  	%rd6787, %rd6786, %rd6785;
	shf.l.wrap.b32 	%r16650, %r16644, %r16645, 25;
	shf.l.wrap.b32 	%r16651, %r16645, %r16644, 25;
	mov.b64 	%rd6788, {%r16651, %r16650};
	xor.b64  	%rd6789, %rd6787, %rd6788;
	and.b64  	%rd6790, %rd6771, %rd6747;
	xor.b64  	%rd6791, %rd6771, %rd6747;
	and.b64  	%rd6792, %rd6791, %rd6723;
	or.b64  	%rd6793, %rd6792, %rd6790;
	add.s64 	%rd6794, %rd6783, %rd6793;
	add.s64 	%rd6795, %rd6794, %rd6789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16652,%dummy}, %rd6784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16653}, %rd6784;
	}
	shf.r.wrap.b32 	%r16654, %r16653, %r16652, 14;
	shf.r.wrap.b32 	%r16655, %r16652, %r16653, 14;
	mov.b64 	%rd6796, {%r16655, %r16654};
	shf.r.wrap.b32 	%r16656, %r16653, %r16652, 18;
	shf.r.wrap.b32 	%r16657, %r16652, %r16653, 18;
	mov.b64 	%rd6797, {%r16657, %r16656};
	xor.b64  	%rd6798, %rd6797, %rd6796;
	shf.l.wrap.b32 	%r16658, %r16652, %r16653, 23;
	shf.l.wrap.b32 	%r16659, %r16653, %r16652, 23;
	mov.b64 	%rd6799, {%r16659, %r16658};
	xor.b64  	%rd6800, %rd6798, %rd6799;
	xor.b64  	%rd6801, %rd6760, %rd6736;
	and.b64  	%rd6802, %rd6784, %rd6801;
	xor.b64  	%rd6803, %rd6802, %rd6736;
	add.s64 	%rd6804, %rd6712, %rd6435;
	add.s64 	%rd6805, %rd6804, %rd59;
	add.s64 	%rd6806, %rd6805, %rd6803;
	add.s64 	%rd6807, %rd6806, %rd6800;
	add.s64 	%rd6808, %rd6807, %rd6723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16660,%dummy}, %rd6795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16661}, %rd6795;
	}
	shf.r.wrap.b32 	%r16662, %r16661, %r16660, 28;
	shf.r.wrap.b32 	%r16663, %r16660, %r16661, 28;
	mov.b64 	%rd6809, {%r16663, %r16662};
	shf.l.wrap.b32 	%r16664, %r16660, %r16661, 30;
	shf.l.wrap.b32 	%r16665, %r16661, %r16660, 30;
	mov.b64 	%rd6810, {%r16665, %r16664};
	xor.b64  	%rd6811, %rd6810, %rd6809;
	shf.l.wrap.b32 	%r16666, %r16660, %r16661, 25;
	shf.l.wrap.b32 	%r16667, %r16661, %r16660, 25;
	mov.b64 	%rd6812, {%r16667, %r16666};
	xor.b64  	%rd6813, %rd6811, %rd6812;
	and.b64  	%rd6814, %rd6795, %rd6771;
	xor.b64  	%rd6815, %rd6795, %rd6771;
	and.b64  	%rd6816, %rd6815, %rd6747;
	or.b64  	%rd6817, %rd6816, %rd6814;
	add.s64 	%rd6818, %rd6807, %rd6817;
	add.s64 	%rd6819, %rd6818, %rd6813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16668,%dummy}, %rd6422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16669}, %rd6422;
	}
	shf.r.wrap.b32 	%r16670, %r16669, %r16668, 19;
	shf.r.wrap.b32 	%r16671, %r16668, %r16669, 19;
	mov.b64 	%rd6820, {%r16671, %r16670};
	shf.l.wrap.b32 	%r16672, %r16668, %r16669, 3;
	shf.l.wrap.b32 	%r16673, %r16669, %r16668, 3;
	mov.b64 	%rd6821, {%r16673, %r16672};
	shr.u64 	%rd6822, %rd6422, 6;
	xor.b64  	%rd6823, %rd6820, %rd6822;
	xor.b64  	%rd6824, %rd6823, %rd6821;
	shf.r.wrap.b32 	%r16674, %r16263, %r16262, 1;
	shf.r.wrap.b32 	%r16675, %r16262, %r16263, 1;
	mov.b64 	%rd6825, {%r16675, %r16674};
	shf.r.wrap.b32 	%r16676, %r16263, %r16262, 8;
	shf.r.wrap.b32 	%r16677, %r16262, %r16263, 8;
	mov.b64 	%rd6826, {%r16677, %r16676};
	shr.u64 	%rd6827, %rd6253, 7;
	xor.b64  	%rd6828, %rd6825, %rd6827;
	xor.b64  	%rd6829, %rd6828, %rd6826;
	add.s64 	%rd6830, %rd6357, %rd6240;
	add.s64 	%rd6831, %rd6830, %rd6824;
	add.s64 	%rd6832, %rd6831, %rd6829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16678,%dummy}, %rd6435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16679}, %rd6435;
	}
	shf.r.wrap.b32 	%r16680, %r16679, %r16678, 19;
	shf.r.wrap.b32 	%r16681, %r16678, %r16679, 19;
	mov.b64 	%rd6833, {%r16681, %r16680};
	shf.l.wrap.b32 	%r16682, %r16678, %r16679, 3;
	shf.l.wrap.b32 	%r16683, %r16679, %r16678, 3;
	mov.b64 	%rd6834, {%r16683, %r16682};
	shr.u64 	%rd6835, %rd6435, 6;
	xor.b64  	%rd6836, %rd6833, %rd6835;
	xor.b64  	%rd6837, %rd6836, %rd6834;
	shf.r.wrap.b32 	%r16684, %r16275, %r16274, 1;
	shf.r.wrap.b32 	%r16685, %r16274, %r16275, 1;
	mov.b64 	%rd6838, {%r16685, %r16684};
	shf.r.wrap.b32 	%r16686, %r16275, %r16274, 8;
	shf.r.wrap.b32 	%r16687, %r16274, %r16275, 8;
	mov.b64 	%rd6839, {%r16687, %r16686};
	shr.u64 	%rd6840, %rd6266, 7;
	xor.b64  	%rd6841, %rd6838, %rd6840;
	xor.b64  	%rd6842, %rd6841, %rd6839;
	add.s64 	%rd6843, %rd6370, %rd6253;
	add.s64 	%rd6844, %rd6843, %rd6837;
	add.s64 	%rd6845, %rd6844, %rd6842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16688,%dummy}, %rd6832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16689}, %rd6832;
	}
	shf.r.wrap.b32 	%r16690, %r16689, %r16688, 19;
	shf.r.wrap.b32 	%r16691, %r16688, %r16689, 19;
	mov.b64 	%rd6846, {%r16691, %r16690};
	shf.l.wrap.b32 	%r16692, %r16688, %r16689, 3;
	shf.l.wrap.b32 	%r16693, %r16689, %r16688, 3;
	mov.b64 	%rd6847, {%r16693, %r16692};
	shr.u64 	%rd6848, %rd6832, 6;
	xor.b64  	%rd6849, %rd6846, %rd6848;
	xor.b64  	%rd6850, %rd6849, %rd6847;
	shf.r.wrap.b32 	%r16694, %r16287, %r16286, 1;
	shf.r.wrap.b32 	%r16695, %r16286, %r16287, 1;
	mov.b64 	%rd6851, {%r16695, %r16694};
	shf.r.wrap.b32 	%r16696, %r16287, %r16286, 8;
	shf.r.wrap.b32 	%r16697, %r16286, %r16287, 8;
	mov.b64 	%rd6852, {%r16697, %r16696};
	shr.u64 	%rd6853, %rd6279, 7;
	xor.b64  	%rd6854, %rd6851, %rd6853;
	xor.b64  	%rd6855, %rd6854, %rd6852;
	add.s64 	%rd6856, %rd6383, %rd6266;
	add.s64 	%rd6857, %rd6856, %rd6850;
	add.s64 	%rd6858, %rd6857, %rd6855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16698,%dummy}, %rd6845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16699}, %rd6845;
	}
	shf.r.wrap.b32 	%r16700, %r16699, %r16698, 19;
	shf.r.wrap.b32 	%r16701, %r16698, %r16699, 19;
	mov.b64 	%rd6859, {%r16701, %r16700};
	shf.l.wrap.b32 	%r16702, %r16698, %r16699, 3;
	shf.l.wrap.b32 	%r16703, %r16699, %r16698, 3;
	mov.b64 	%rd6860, {%r16703, %r16702};
	shr.u64 	%rd6861, %rd6845, 6;
	xor.b64  	%rd6862, %rd6859, %rd6861;
	xor.b64  	%rd6863, %rd6862, %rd6860;
	shf.r.wrap.b32 	%r16704, %r16299, %r16298, 1;
	shf.r.wrap.b32 	%r16705, %r16298, %r16299, 1;
	mov.b64 	%rd6864, {%r16705, %r16704};
	shf.r.wrap.b32 	%r16706, %r16299, %r16298, 8;
	shf.r.wrap.b32 	%r16707, %r16298, %r16299, 8;
	mov.b64 	%rd6865, {%r16707, %r16706};
	shr.u64 	%rd6866, %rd6292, 7;
	xor.b64  	%rd6867, %rd6864, %rd6866;
	xor.b64  	%rd6868, %rd6867, %rd6865;
	add.s64 	%rd6869, %rd6396, %rd6279;
	add.s64 	%rd6870, %rd6869, %rd6863;
	add.s64 	%rd6871, %rd6870, %rd6868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16708,%dummy}, %rd6858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16709}, %rd6858;
	}
	shf.r.wrap.b32 	%r16710, %r16709, %r16708, 19;
	shf.r.wrap.b32 	%r16711, %r16708, %r16709, 19;
	mov.b64 	%rd6872, {%r16711, %r16710};
	shf.l.wrap.b32 	%r16712, %r16708, %r16709, 3;
	shf.l.wrap.b32 	%r16713, %r16709, %r16708, 3;
	mov.b64 	%rd6873, {%r16713, %r16712};
	shr.u64 	%rd6874, %rd6858, 6;
	xor.b64  	%rd6875, %rd6872, %rd6874;
	xor.b64  	%rd6876, %rd6875, %rd6873;
	shf.r.wrap.b32 	%r16714, %r16311, %r16310, 1;
	shf.r.wrap.b32 	%r16715, %r16310, %r16311, 1;
	mov.b64 	%rd6877, {%r16715, %r16714};
	shf.r.wrap.b32 	%r16716, %r16311, %r16310, 8;
	shf.r.wrap.b32 	%r16717, %r16310, %r16311, 8;
	mov.b64 	%rd6878, {%r16717, %r16716};
	shr.u64 	%rd6879, %rd6305, 7;
	xor.b64  	%rd6880, %rd6877, %rd6879;
	xor.b64  	%rd6881, %rd6880, %rd6878;
	add.s64 	%rd6882, %rd6409, %rd6292;
	add.s64 	%rd6883, %rd6882, %rd6876;
	add.s64 	%rd6884, %rd6883, %rd6881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16718,%dummy}, %rd6871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16719}, %rd6871;
	}
	shf.r.wrap.b32 	%r16720, %r16719, %r16718, 19;
	shf.r.wrap.b32 	%r16721, %r16718, %r16719, 19;
	mov.b64 	%rd6885, {%r16721, %r16720};
	shf.l.wrap.b32 	%r16722, %r16718, %r16719, 3;
	shf.l.wrap.b32 	%r16723, %r16719, %r16718, 3;
	mov.b64 	%rd6886, {%r16723, %r16722};
	shr.u64 	%rd6887, %rd6871, 6;
	xor.b64  	%rd6888, %rd6885, %rd6887;
	xor.b64  	%rd6889, %rd6888, %rd6886;
	shf.r.wrap.b32 	%r16724, %r16323, %r16322, 1;
	shf.r.wrap.b32 	%r16725, %r16322, %r16323, 1;
	mov.b64 	%rd6890, {%r16725, %r16724};
	shf.r.wrap.b32 	%r16726, %r16323, %r16322, 8;
	shf.r.wrap.b32 	%r16727, %r16322, %r16323, 8;
	mov.b64 	%rd6891, {%r16727, %r16726};
	shr.u64 	%rd6892, %rd6318, 7;
	xor.b64  	%rd6893, %rd6890, %rd6892;
	xor.b64  	%rd6894, %rd6893, %rd6891;
	add.s64 	%rd6895, %rd6422, %rd6305;
	add.s64 	%rd6896, %rd6895, %rd6889;
	add.s64 	%rd6897, %rd6896, %rd6894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16728,%dummy}, %rd6884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16729}, %rd6884;
	}
	shf.r.wrap.b32 	%r16730, %r16729, %r16728, 19;
	shf.r.wrap.b32 	%r16731, %r16728, %r16729, 19;
	mov.b64 	%rd6898, {%r16731, %r16730};
	shf.l.wrap.b32 	%r16732, %r16728, %r16729, 3;
	shf.l.wrap.b32 	%r16733, %r16729, %r16728, 3;
	mov.b64 	%rd6899, {%r16733, %r16732};
	shr.u64 	%rd6900, %rd6884, 6;
	xor.b64  	%rd6901, %rd6898, %rd6900;
	xor.b64  	%rd6902, %rd6901, %rd6899;
	shf.r.wrap.b32 	%r16734, %r16335, %r16334, 1;
	shf.r.wrap.b32 	%r16735, %r16334, %r16335, 1;
	mov.b64 	%rd6903, {%r16735, %r16734};
	shf.r.wrap.b32 	%r16736, %r16335, %r16334, 8;
	shf.r.wrap.b32 	%r16737, %r16334, %r16335, 8;
	mov.b64 	%rd6904, {%r16737, %r16736};
	shr.u64 	%rd6905, %rd6331, 7;
	xor.b64  	%rd6906, %rd6903, %rd6905;
	xor.b64  	%rd6907, %rd6906, %rd6904;
	add.s64 	%rd6908, %rd6435, %rd6318;
	add.s64 	%rd6909, %rd6908, %rd6902;
	add.s64 	%rd6910, %rd6909, %rd6907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16738,%dummy}, %rd6897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16739}, %rd6897;
	}
	shf.r.wrap.b32 	%r16740, %r16739, %r16738, 19;
	shf.r.wrap.b32 	%r16741, %r16738, %r16739, 19;
	mov.b64 	%rd6911, {%r16741, %r16740};
	shf.l.wrap.b32 	%r16742, %r16738, %r16739, 3;
	shf.l.wrap.b32 	%r16743, %r16739, %r16738, 3;
	mov.b64 	%rd6912, {%r16743, %r16742};
	shr.u64 	%rd6913, %rd6897, 6;
	xor.b64  	%rd6914, %rd6911, %rd6913;
	xor.b64  	%rd6915, %rd6914, %rd6912;
	shf.r.wrap.b32 	%r16744, %r16347, %r16346, 1;
	shf.r.wrap.b32 	%r16745, %r16346, %r16347, 1;
	mov.b64 	%rd6916, {%r16745, %r16744};
	shf.r.wrap.b32 	%r16746, %r16347, %r16346, 8;
	shf.r.wrap.b32 	%r16747, %r16346, %r16347, 8;
	mov.b64 	%rd6917, {%r16747, %r16746};
	shr.u64 	%rd6918, %rd6344, 7;
	xor.b64  	%rd6919, %rd6916, %rd6918;
	xor.b64  	%rd6920, %rd6919, %rd6917;
	add.s64 	%rd6921, %rd6832, %rd6331;
	add.s64 	%rd6922, %rd6921, %rd6915;
	add.s64 	%rd6923, %rd6922, %rd6920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16748,%dummy}, %rd6910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16749}, %rd6910;
	}
	shf.r.wrap.b32 	%r16750, %r16749, %r16748, 19;
	shf.r.wrap.b32 	%r16751, %r16748, %r16749, 19;
	mov.b64 	%rd6924, {%r16751, %r16750};
	shf.l.wrap.b32 	%r16752, %r16748, %r16749, 3;
	shf.l.wrap.b32 	%r16753, %r16749, %r16748, 3;
	mov.b64 	%rd6925, {%r16753, %r16752};
	shr.u64 	%rd6926, %rd6910, 6;
	xor.b64  	%rd6927, %rd6924, %rd6926;
	xor.b64  	%rd6928, %rd6927, %rd6925;
	shf.r.wrap.b32 	%r16754, %r16359, %r16358, 1;
	shf.r.wrap.b32 	%r16755, %r16358, %r16359, 1;
	mov.b64 	%rd6929, {%r16755, %r16754};
	shf.r.wrap.b32 	%r16756, %r16359, %r16358, 8;
	shf.r.wrap.b32 	%r16757, %r16358, %r16359, 8;
	mov.b64 	%rd6930, {%r16757, %r16756};
	shr.u64 	%rd6931, %rd6357, 7;
	xor.b64  	%rd6932, %rd6929, %rd6931;
	xor.b64  	%rd6933, %rd6932, %rd6930;
	add.s64 	%rd6934, %rd6845, %rd6344;
	add.s64 	%rd6935, %rd6934, %rd6928;
	add.s64 	%rd6936, %rd6935, %rd6933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16758,%dummy}, %rd6923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16759}, %rd6923;
	}
	shf.r.wrap.b32 	%r16760, %r16759, %r16758, 19;
	shf.r.wrap.b32 	%r16761, %r16758, %r16759, 19;
	mov.b64 	%rd6937, {%r16761, %r16760};
	shf.l.wrap.b32 	%r16762, %r16758, %r16759, 3;
	shf.l.wrap.b32 	%r16763, %r16759, %r16758, 3;
	mov.b64 	%rd6938, {%r16763, %r16762};
	shr.u64 	%rd6939, %rd6923, 6;
	xor.b64  	%rd6940, %rd6937, %rd6939;
	xor.b64  	%rd6941, %rd6940, %rd6938;
	shf.r.wrap.b32 	%r16764, %r16371, %r16370, 1;
	shf.r.wrap.b32 	%r16765, %r16370, %r16371, 1;
	mov.b64 	%rd6942, {%r16765, %r16764};
	shf.r.wrap.b32 	%r16766, %r16371, %r16370, 8;
	shf.r.wrap.b32 	%r16767, %r16370, %r16371, 8;
	mov.b64 	%rd6943, {%r16767, %r16766};
	shr.u64 	%rd6944, %rd6370, 7;
	xor.b64  	%rd6945, %rd6942, %rd6944;
	xor.b64  	%rd6946, %rd6945, %rd6943;
	add.s64 	%rd6947, %rd6858, %rd6357;
	add.s64 	%rd6948, %rd6947, %rd6941;
	add.s64 	%rd6949, %rd6948, %rd6946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16768,%dummy}, %rd6936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16769}, %rd6936;
	}
	shf.r.wrap.b32 	%r16770, %r16769, %r16768, 19;
	shf.r.wrap.b32 	%r16771, %r16768, %r16769, 19;
	mov.b64 	%rd6950, {%r16771, %r16770};
	shf.l.wrap.b32 	%r16772, %r16768, %r16769, 3;
	shf.l.wrap.b32 	%r16773, %r16769, %r16768, 3;
	mov.b64 	%rd6951, {%r16773, %r16772};
	shr.u64 	%rd6952, %rd6936, 6;
	xor.b64  	%rd6953, %rd6950, %rd6952;
	xor.b64  	%rd6954, %rd6953, %rd6951;
	shf.r.wrap.b32 	%r16774, %r16383, %r16382, 1;
	shf.r.wrap.b32 	%r16775, %r16382, %r16383, 1;
	mov.b64 	%rd6955, {%r16775, %r16774};
	shf.r.wrap.b32 	%r16776, %r16383, %r16382, 8;
	shf.r.wrap.b32 	%r16777, %r16382, %r16383, 8;
	mov.b64 	%rd6956, {%r16777, %r16776};
	shr.u64 	%rd6957, %rd6383, 7;
	xor.b64  	%rd6958, %rd6955, %rd6957;
	xor.b64  	%rd6959, %rd6958, %rd6956;
	add.s64 	%rd6960, %rd6871, %rd6370;
	add.s64 	%rd6961, %rd6960, %rd6954;
	add.s64 	%rd6962, %rd6961, %rd6959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16778,%dummy}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16779}, %rd6949;
	}
	shf.r.wrap.b32 	%r16780, %r16779, %r16778, 19;
	shf.r.wrap.b32 	%r16781, %r16778, %r16779, 19;
	mov.b64 	%rd6963, {%r16781, %r16780};
	shf.l.wrap.b32 	%r16782, %r16778, %r16779, 3;
	shf.l.wrap.b32 	%r16783, %r16779, %r16778, 3;
	mov.b64 	%rd6964, {%r16783, %r16782};
	shr.u64 	%rd6965, %rd6949, 6;
	xor.b64  	%rd6966, %rd6963, %rd6965;
	xor.b64  	%rd6967, %rd6966, %rd6964;
	shf.r.wrap.b32 	%r16784, %r16393, %r16392, 1;
	shf.r.wrap.b32 	%r16785, %r16392, %r16393, 1;
	mov.b64 	%rd6968, {%r16785, %r16784};
	shf.r.wrap.b32 	%r16786, %r16393, %r16392, 8;
	shf.r.wrap.b32 	%r16787, %r16392, %r16393, 8;
	mov.b64 	%rd6969, {%r16787, %r16786};
	shr.u64 	%rd6970, %rd6396, 7;
	xor.b64  	%rd6971, %rd6968, %rd6970;
	xor.b64  	%rd6972, %rd6971, %rd6969;
	add.s64 	%rd6973, %rd6884, %rd6383;
	add.s64 	%rd6974, %rd6973, %rd6967;
	add.s64 	%rd6975, %rd6974, %rd6972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16788,%dummy}, %rd6962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16789}, %rd6962;
	}
	shf.r.wrap.b32 	%r16790, %r16789, %r16788, 19;
	shf.r.wrap.b32 	%r16791, %r16788, %r16789, 19;
	mov.b64 	%rd6976, {%r16791, %r16790};
	shf.l.wrap.b32 	%r16792, %r16788, %r16789, 3;
	shf.l.wrap.b32 	%r16793, %r16789, %r16788, 3;
	mov.b64 	%rd6977, {%r16793, %r16792};
	shr.u64 	%rd6978, %rd6962, 6;
	xor.b64  	%rd6979, %rd6976, %rd6978;
	xor.b64  	%rd6980, %rd6979, %rd6977;
	shf.r.wrap.b32 	%r16794, %r16403, %r16402, 1;
	shf.r.wrap.b32 	%r16795, %r16402, %r16403, 1;
	mov.b64 	%rd6981, {%r16795, %r16794};
	shf.r.wrap.b32 	%r16796, %r16403, %r16402, 8;
	shf.r.wrap.b32 	%r16797, %r16402, %r16403, 8;
	mov.b64 	%rd6982, {%r16797, %r16796};
	shr.u64 	%rd6983, %rd6409, 7;
	xor.b64  	%rd6984, %rd6981, %rd6983;
	xor.b64  	%rd6985, %rd6984, %rd6982;
	add.s64 	%rd6986, %rd6897, %rd6396;
	add.s64 	%rd6987, %rd6986, %rd6980;
	add.s64 	%rd6988, %rd6987, %rd6985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16798,%dummy}, %rd6975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16799}, %rd6975;
	}
	shf.r.wrap.b32 	%r16800, %r16799, %r16798, 19;
	shf.r.wrap.b32 	%r16801, %r16798, %r16799, 19;
	mov.b64 	%rd6989, {%r16801, %r16800};
	shf.l.wrap.b32 	%r16802, %r16798, %r16799, 3;
	shf.l.wrap.b32 	%r16803, %r16799, %r16798, 3;
	mov.b64 	%rd6990, {%r16803, %r16802};
	shr.u64 	%rd6991, %rd6975, 6;
	xor.b64  	%rd6992, %rd6989, %rd6991;
	xor.b64  	%rd6993, %rd6992, %rd6990;
	shf.r.wrap.b32 	%r16804, %r16669, %r16668, 1;
	shf.r.wrap.b32 	%r16805, %r16668, %r16669, 1;
	mov.b64 	%rd6994, {%r16805, %r16804};
	shf.r.wrap.b32 	%r16806, %r16669, %r16668, 8;
	shf.r.wrap.b32 	%r16807, %r16668, %r16669, 8;
	mov.b64 	%rd6995, {%r16807, %r16806};
	shr.u64 	%rd6996, %rd6422, 7;
	xor.b64  	%rd6997, %rd6994, %rd6996;
	xor.b64  	%rd6998, %rd6997, %rd6995;
	add.s64 	%rd6999, %rd6910, %rd6409;
	add.s64 	%rd7000, %rd6999, %rd6993;
	add.s64 	%rd7001, %rd7000, %rd6998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16808,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16809}, %rd6988;
	}
	shf.r.wrap.b32 	%r16810, %r16809, %r16808, 19;
	shf.r.wrap.b32 	%r16811, %r16808, %r16809, 19;
	mov.b64 	%rd7002, {%r16811, %r16810};
	shf.l.wrap.b32 	%r16812, %r16808, %r16809, 3;
	shf.l.wrap.b32 	%r16813, %r16809, %r16808, 3;
	mov.b64 	%rd7003, {%r16813, %r16812};
	shr.u64 	%rd7004, %rd6988, 6;
	xor.b64  	%rd7005, %rd7002, %rd7004;
	xor.b64  	%rd7006, %rd7005, %rd7003;
	shf.r.wrap.b32 	%r16814, %r16679, %r16678, 1;
	shf.r.wrap.b32 	%r16815, %r16678, %r16679, 1;
	mov.b64 	%rd7007, {%r16815, %r16814};
	shf.r.wrap.b32 	%r16816, %r16679, %r16678, 8;
	shf.r.wrap.b32 	%r16817, %r16678, %r16679, 8;
	mov.b64 	%rd7008, {%r16817, %r16816};
	shr.u64 	%rd7009, %rd6435, 7;
	xor.b64  	%rd7010, %rd7007, %rd7009;
	xor.b64  	%rd7011, %rd7010, %rd7008;
	add.s64 	%rd7012, %rd6923, %rd6422;
	add.s64 	%rd7013, %rd7012, %rd7006;
	add.s64 	%rd7014, %rd7013, %rd7011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16818,%dummy}, %rd7001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16819}, %rd7001;
	}
	shf.r.wrap.b32 	%r16820, %r16819, %r16818, 19;
	shf.r.wrap.b32 	%r16821, %r16818, %r16819, 19;
	mov.b64 	%rd7015, {%r16821, %r16820};
	shf.l.wrap.b32 	%r16822, %r16818, %r16819, 3;
	shf.l.wrap.b32 	%r16823, %r16819, %r16818, 3;
	mov.b64 	%rd7016, {%r16823, %r16822};
	shr.u64 	%rd7017, %rd7001, 6;
	xor.b64  	%rd7018, %rd7015, %rd7017;
	xor.b64  	%rd7019, %rd7018, %rd7016;
	shf.r.wrap.b32 	%r16824, %r16689, %r16688, 1;
	shf.r.wrap.b32 	%r16825, %r16688, %r16689, 1;
	mov.b64 	%rd7020, {%r16825, %r16824};
	shf.r.wrap.b32 	%r16826, %r16689, %r16688, 8;
	shf.r.wrap.b32 	%r16827, %r16688, %r16689, 8;
	mov.b64 	%rd7021, {%r16827, %r16826};
	shr.u64 	%rd7022, %rd6832, 7;
	xor.b64  	%rd7023, %rd7020, %rd7022;
	xor.b64  	%rd7024, %rd7023, %rd7021;
	add.s64 	%rd7025, %rd6936, %rd6435;
	add.s64 	%rd7026, %rd7025, %rd7019;
	add.s64 	%rd7027, %rd7026, %rd7024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16828,%dummy}, %rd6808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16829}, %rd6808;
	}
	shf.r.wrap.b32 	%r16830, %r16829, %r16828, 14;
	shf.r.wrap.b32 	%r16831, %r16828, %r16829, 14;
	mov.b64 	%rd7028, {%r16831, %r16830};
	shf.r.wrap.b32 	%r16832, %r16829, %r16828, 18;
	shf.r.wrap.b32 	%r16833, %r16828, %r16829, 18;
	mov.b64 	%rd7029, {%r16833, %r16832};
	xor.b64  	%rd7030, %rd7029, %rd7028;
	shf.l.wrap.b32 	%r16834, %r16828, %r16829, 23;
	shf.l.wrap.b32 	%r16835, %r16829, %r16828, 23;
	mov.b64 	%rd7031, {%r16835, %r16834};
	xor.b64  	%rd7032, %rd7030, %rd7031;
	xor.b64  	%rd7033, %rd6784, %rd6760;
	and.b64  	%rd7034, %rd6808, %rd7033;
	xor.b64  	%rd7035, %rd7034, %rd6760;
	add.s64 	%rd7036, %rd7035, %rd6736;
	add.s64 	%rd7037, %rd7036, %rd6832;
	add.s64 	%rd7038, %rd7037, %rd60;
	add.s64 	%rd7039, %rd7038, %rd7032;
	add.s64 	%rd7040, %rd7039, %rd6747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16836,%dummy}, %rd6819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16837}, %rd6819;
	}
	shf.r.wrap.b32 	%r16838, %r16837, %r16836, 28;
	shf.r.wrap.b32 	%r16839, %r16836, %r16837, 28;
	mov.b64 	%rd7041, {%r16839, %r16838};
	shf.l.wrap.b32 	%r16840, %r16836, %r16837, 30;
	shf.l.wrap.b32 	%r16841, %r16837, %r16836, 30;
	mov.b64 	%rd7042, {%r16841, %r16840};
	xor.b64  	%rd7043, %rd7042, %rd7041;
	shf.l.wrap.b32 	%r16842, %r16836, %r16837, 25;
	shf.l.wrap.b32 	%r16843, %r16837, %r16836, 25;
	mov.b64 	%rd7044, {%r16843, %r16842};
	xor.b64  	%rd7045, %rd7043, %rd7044;
	and.b64  	%rd7046, %rd6819, %rd6795;
	xor.b64  	%rd7047, %rd6819, %rd6795;
	and.b64  	%rd7048, %rd7047, %rd6771;
	or.b64  	%rd7049, %rd7048, %rd7046;
	add.s64 	%rd7050, %rd7039, %rd7049;
	add.s64 	%rd7051, %rd7050, %rd7045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16844,%dummy}, %rd7040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16845}, %rd7040;
	}
	shf.r.wrap.b32 	%r16846, %r16845, %r16844, 14;
	shf.r.wrap.b32 	%r16847, %r16844, %r16845, 14;
	mov.b64 	%rd7052, {%r16847, %r16846};
	shf.r.wrap.b32 	%r16848, %r16845, %r16844, 18;
	shf.r.wrap.b32 	%r16849, %r16844, %r16845, 18;
	mov.b64 	%rd7053, {%r16849, %r16848};
	xor.b64  	%rd7054, %rd7053, %rd7052;
	shf.l.wrap.b32 	%r16850, %r16844, %r16845, 23;
	shf.l.wrap.b32 	%r16851, %r16845, %r16844, 23;
	mov.b64 	%rd7055, {%r16851, %r16850};
	xor.b64  	%rd7056, %rd7054, %rd7055;
	xor.b64  	%rd7057, %rd6808, %rd6784;
	and.b64  	%rd7058, %rd7040, %rd7057;
	xor.b64  	%rd7059, %rd7058, %rd6784;
	add.s64 	%rd7060, %rd6845, %rd6760;
	add.s64 	%rd7061, %rd7060, %rd61;
	add.s64 	%rd7062, %rd7061, %rd7059;
	add.s64 	%rd7063, %rd7062, %rd7056;
	add.s64 	%rd7064, %rd7063, %rd6771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16852,%dummy}, %rd7051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16853}, %rd7051;
	}
	shf.r.wrap.b32 	%r16854, %r16853, %r16852, 28;
	shf.r.wrap.b32 	%r16855, %r16852, %r16853, 28;
	mov.b64 	%rd7065, {%r16855, %r16854};
	shf.l.wrap.b32 	%r16856, %r16852, %r16853, 30;
	shf.l.wrap.b32 	%r16857, %r16853, %r16852, 30;
	mov.b64 	%rd7066, {%r16857, %r16856};
	xor.b64  	%rd7067, %rd7066, %rd7065;
	shf.l.wrap.b32 	%r16858, %r16852, %r16853, 25;
	shf.l.wrap.b32 	%r16859, %r16853, %r16852, 25;
	mov.b64 	%rd7068, {%r16859, %r16858};
	xor.b64  	%rd7069, %rd7067, %rd7068;
	and.b64  	%rd7070, %rd7051, %rd6819;
	xor.b64  	%rd7071, %rd7051, %rd6819;
	and.b64  	%rd7072, %rd7071, %rd6795;
	or.b64  	%rd7073, %rd7072, %rd7070;
	add.s64 	%rd7074, %rd7063, %rd7073;
	add.s64 	%rd7075, %rd7074, %rd7069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16860,%dummy}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16861}, %rd7064;
	}
	shf.r.wrap.b32 	%r16862, %r16861, %r16860, 14;
	shf.r.wrap.b32 	%r16863, %r16860, %r16861, 14;
	mov.b64 	%rd7076, {%r16863, %r16862};
	shf.r.wrap.b32 	%r16864, %r16861, %r16860, 18;
	shf.r.wrap.b32 	%r16865, %r16860, %r16861, 18;
	mov.b64 	%rd7077, {%r16865, %r16864};
	xor.b64  	%rd7078, %rd7077, %rd7076;
	shf.l.wrap.b32 	%r16866, %r16860, %r16861, 23;
	shf.l.wrap.b32 	%r16867, %r16861, %r16860, 23;
	mov.b64 	%rd7079, {%r16867, %r16866};
	xor.b64  	%rd7080, %rd7078, %rd7079;
	xor.b64  	%rd7081, %rd7040, %rd6808;
	and.b64  	%rd7082, %rd7064, %rd7081;
	xor.b64  	%rd7083, %rd7082, %rd6808;
	add.s64 	%rd7084, %rd6858, %rd6784;
	add.s64 	%rd7085, %rd7084, %rd62;
	add.s64 	%rd7086, %rd7085, %rd7083;
	add.s64 	%rd7087, %rd7086, %rd7080;
	add.s64 	%rd7088, %rd7087, %rd6795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16868,%dummy}, %rd7075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16869}, %rd7075;
	}
	shf.r.wrap.b32 	%r16870, %r16869, %r16868, 28;
	shf.r.wrap.b32 	%r16871, %r16868, %r16869, 28;
	mov.b64 	%rd7089, {%r16871, %r16870};
	shf.l.wrap.b32 	%r16872, %r16868, %r16869, 30;
	shf.l.wrap.b32 	%r16873, %r16869, %r16868, 30;
	mov.b64 	%rd7090, {%r16873, %r16872};
	xor.b64  	%rd7091, %rd7090, %rd7089;
	shf.l.wrap.b32 	%r16874, %r16868, %r16869, 25;
	shf.l.wrap.b32 	%r16875, %r16869, %r16868, 25;
	mov.b64 	%rd7092, {%r16875, %r16874};
	xor.b64  	%rd7093, %rd7091, %rd7092;
	and.b64  	%rd7094, %rd7075, %rd7051;
	xor.b64  	%rd7095, %rd7075, %rd7051;
	and.b64  	%rd7096, %rd7095, %rd6819;
	or.b64  	%rd7097, %rd7096, %rd7094;
	add.s64 	%rd7098, %rd7087, %rd7097;
	add.s64 	%rd7099, %rd7098, %rd7093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16876,%dummy}, %rd7088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16877}, %rd7088;
	}
	shf.r.wrap.b32 	%r16878, %r16877, %r16876, 14;
	shf.r.wrap.b32 	%r16879, %r16876, %r16877, 14;
	mov.b64 	%rd7100, {%r16879, %r16878};
	shf.r.wrap.b32 	%r16880, %r16877, %r16876, 18;
	shf.r.wrap.b32 	%r16881, %r16876, %r16877, 18;
	mov.b64 	%rd7101, {%r16881, %r16880};
	xor.b64  	%rd7102, %rd7101, %rd7100;
	shf.l.wrap.b32 	%r16882, %r16876, %r16877, 23;
	shf.l.wrap.b32 	%r16883, %r16877, %r16876, 23;
	mov.b64 	%rd7103, {%r16883, %r16882};
	xor.b64  	%rd7104, %rd7102, %rd7103;
	xor.b64  	%rd7105, %rd7064, %rd7040;
	and.b64  	%rd7106, %rd7088, %rd7105;
	xor.b64  	%rd7107, %rd7106, %rd7040;
	add.s64 	%rd7108, %rd6871, %rd6808;
	add.s64 	%rd7109, %rd7108, %rd63;
	add.s64 	%rd7110, %rd7109, %rd7107;
	add.s64 	%rd7111, %rd7110, %rd7104;
	add.s64 	%rd7112, %rd7111, %rd6819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16884,%dummy}, %rd7099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16885}, %rd7099;
	}
	shf.r.wrap.b32 	%r16886, %r16885, %r16884, 28;
	shf.r.wrap.b32 	%r16887, %r16884, %r16885, 28;
	mov.b64 	%rd7113, {%r16887, %r16886};
	shf.l.wrap.b32 	%r16888, %r16884, %r16885, 30;
	shf.l.wrap.b32 	%r16889, %r16885, %r16884, 30;
	mov.b64 	%rd7114, {%r16889, %r16888};
	xor.b64  	%rd7115, %rd7114, %rd7113;
	shf.l.wrap.b32 	%r16890, %r16884, %r16885, 25;
	shf.l.wrap.b32 	%r16891, %r16885, %r16884, 25;
	mov.b64 	%rd7116, {%r16891, %r16890};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	and.b64  	%rd7118, %rd7099, %rd7075;
	xor.b64  	%rd7119, %rd7099, %rd7075;
	and.b64  	%rd7120, %rd7119, %rd7051;
	or.b64  	%rd7121, %rd7120, %rd7118;
	add.s64 	%rd7122, %rd7111, %rd7121;
	add.s64 	%rd7123, %rd7122, %rd7117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16892,%dummy}, %rd7112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16893}, %rd7112;
	}
	shf.r.wrap.b32 	%r16894, %r16893, %r16892, 14;
	shf.r.wrap.b32 	%r16895, %r16892, %r16893, 14;
	mov.b64 	%rd7124, {%r16895, %r16894};
	shf.r.wrap.b32 	%r16896, %r16893, %r16892, 18;
	shf.r.wrap.b32 	%r16897, %r16892, %r16893, 18;
	mov.b64 	%rd7125, {%r16897, %r16896};
	xor.b64  	%rd7126, %rd7125, %rd7124;
	shf.l.wrap.b32 	%r16898, %r16892, %r16893, 23;
	shf.l.wrap.b32 	%r16899, %r16893, %r16892, 23;
	mov.b64 	%rd7127, {%r16899, %r16898};
	xor.b64  	%rd7128, %rd7126, %rd7127;
	xor.b64  	%rd7129, %rd7088, %rd7064;
	and.b64  	%rd7130, %rd7112, %rd7129;
	xor.b64  	%rd7131, %rd7130, %rd7064;
	add.s64 	%rd7132, %rd7040, %rd6884;
	add.s64 	%rd7133, %rd7132, %rd64;
	add.s64 	%rd7134, %rd7133, %rd7131;
	add.s64 	%rd7135, %rd7134, %rd7128;
	add.s64 	%rd7136, %rd7135, %rd7051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16900,%dummy}, %rd7123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16901}, %rd7123;
	}
	shf.r.wrap.b32 	%r16902, %r16901, %r16900, 28;
	shf.r.wrap.b32 	%r16903, %r16900, %r16901, 28;
	mov.b64 	%rd7137, {%r16903, %r16902};
	shf.l.wrap.b32 	%r16904, %r16900, %r16901, 30;
	shf.l.wrap.b32 	%r16905, %r16901, %r16900, 30;
	mov.b64 	%rd7138, {%r16905, %r16904};
	xor.b64  	%rd7139, %rd7138, %rd7137;
	shf.l.wrap.b32 	%r16906, %r16900, %r16901, 25;
	shf.l.wrap.b32 	%r16907, %r16901, %r16900, 25;
	mov.b64 	%rd7140, {%r16907, %r16906};
	xor.b64  	%rd7141, %rd7139, %rd7140;
	and.b64  	%rd7142, %rd7123, %rd7099;
	xor.b64  	%rd7143, %rd7123, %rd7099;
	and.b64  	%rd7144, %rd7143, %rd7075;
	or.b64  	%rd7145, %rd7144, %rd7142;
	add.s64 	%rd7146, %rd7135, %rd7145;
	add.s64 	%rd7147, %rd7146, %rd7141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16908,%dummy}, %rd7136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16909}, %rd7136;
	}
	shf.r.wrap.b32 	%r16910, %r16909, %r16908, 14;
	shf.r.wrap.b32 	%r16911, %r16908, %r16909, 14;
	mov.b64 	%rd7148, {%r16911, %r16910};
	shf.r.wrap.b32 	%r16912, %r16909, %r16908, 18;
	shf.r.wrap.b32 	%r16913, %r16908, %r16909, 18;
	mov.b64 	%rd7149, {%r16913, %r16912};
	xor.b64  	%rd7150, %rd7149, %rd7148;
	shf.l.wrap.b32 	%r16914, %r16908, %r16909, 23;
	shf.l.wrap.b32 	%r16915, %r16909, %r16908, 23;
	mov.b64 	%rd7151, {%r16915, %r16914};
	xor.b64  	%rd7152, %rd7150, %rd7151;
	xor.b64  	%rd7153, %rd7112, %rd7088;
	and.b64  	%rd7154, %rd7136, %rd7153;
	xor.b64  	%rd7155, %rd7154, %rd7088;
	add.s64 	%rd7156, %rd7064, %rd6897;
	add.s64 	%rd7157, %rd7156, %rd65;
	add.s64 	%rd7158, %rd7157, %rd7155;
	add.s64 	%rd7159, %rd7158, %rd7152;
	add.s64 	%rd7160, %rd7159, %rd7075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16916,%dummy}, %rd7147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16917}, %rd7147;
	}
	shf.r.wrap.b32 	%r16918, %r16917, %r16916, 28;
	shf.r.wrap.b32 	%r16919, %r16916, %r16917, 28;
	mov.b64 	%rd7161, {%r16919, %r16918};
	shf.l.wrap.b32 	%r16920, %r16916, %r16917, 30;
	shf.l.wrap.b32 	%r16921, %r16917, %r16916, 30;
	mov.b64 	%rd7162, {%r16921, %r16920};
	xor.b64  	%rd7163, %rd7162, %rd7161;
	shf.l.wrap.b32 	%r16922, %r16916, %r16917, 25;
	shf.l.wrap.b32 	%r16923, %r16917, %r16916, 25;
	mov.b64 	%rd7164, {%r16923, %r16922};
	xor.b64  	%rd7165, %rd7163, %rd7164;
	and.b64  	%rd7166, %rd7147, %rd7123;
	xor.b64  	%rd7167, %rd7147, %rd7123;
	and.b64  	%rd7168, %rd7167, %rd7099;
	or.b64  	%rd7169, %rd7168, %rd7166;
	add.s64 	%rd7170, %rd7159, %rd7169;
	add.s64 	%rd7171, %rd7170, %rd7165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16924,%dummy}, %rd7160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16925}, %rd7160;
	}
	shf.r.wrap.b32 	%r16926, %r16925, %r16924, 14;
	shf.r.wrap.b32 	%r16927, %r16924, %r16925, 14;
	mov.b64 	%rd7172, {%r16927, %r16926};
	shf.r.wrap.b32 	%r16928, %r16925, %r16924, 18;
	shf.r.wrap.b32 	%r16929, %r16924, %r16925, 18;
	mov.b64 	%rd7173, {%r16929, %r16928};
	xor.b64  	%rd7174, %rd7173, %rd7172;
	shf.l.wrap.b32 	%r16930, %r16924, %r16925, 23;
	shf.l.wrap.b32 	%r16931, %r16925, %r16924, 23;
	mov.b64 	%rd7175, {%r16931, %r16930};
	xor.b64  	%rd7176, %rd7174, %rd7175;
	xor.b64  	%rd7177, %rd7136, %rd7112;
	and.b64  	%rd7178, %rd7160, %rd7177;
	xor.b64  	%rd7179, %rd7178, %rd7112;
	add.s64 	%rd7180, %rd7088, %rd6910;
	add.s64 	%rd7181, %rd7180, %rd66;
	add.s64 	%rd7182, %rd7181, %rd7179;
	add.s64 	%rd7183, %rd7182, %rd7176;
	add.s64 	%rd7184, %rd7183, %rd7099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16932,%dummy}, %rd7171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16933}, %rd7171;
	}
	shf.r.wrap.b32 	%r16934, %r16933, %r16932, 28;
	shf.r.wrap.b32 	%r16935, %r16932, %r16933, 28;
	mov.b64 	%rd7185, {%r16935, %r16934};
	shf.l.wrap.b32 	%r16936, %r16932, %r16933, 30;
	shf.l.wrap.b32 	%r16937, %r16933, %r16932, 30;
	mov.b64 	%rd7186, {%r16937, %r16936};
	xor.b64  	%rd7187, %rd7186, %rd7185;
	shf.l.wrap.b32 	%r16938, %r16932, %r16933, 25;
	shf.l.wrap.b32 	%r16939, %r16933, %r16932, 25;
	mov.b64 	%rd7188, {%r16939, %r16938};
	xor.b64  	%rd7189, %rd7187, %rd7188;
	and.b64  	%rd7190, %rd7171, %rd7147;
	xor.b64  	%rd7191, %rd7171, %rd7147;
	and.b64  	%rd7192, %rd7191, %rd7123;
	or.b64  	%rd7193, %rd7192, %rd7190;
	add.s64 	%rd7194, %rd7183, %rd7193;
	add.s64 	%rd7195, %rd7194, %rd7189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16940,%dummy}, %rd7184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16941}, %rd7184;
	}
	shf.r.wrap.b32 	%r16942, %r16941, %r16940, 14;
	shf.r.wrap.b32 	%r16943, %r16940, %r16941, 14;
	mov.b64 	%rd7196, {%r16943, %r16942};
	shf.r.wrap.b32 	%r16944, %r16941, %r16940, 18;
	shf.r.wrap.b32 	%r16945, %r16940, %r16941, 18;
	mov.b64 	%rd7197, {%r16945, %r16944};
	xor.b64  	%rd7198, %rd7197, %rd7196;
	shf.l.wrap.b32 	%r16946, %r16940, %r16941, 23;
	shf.l.wrap.b32 	%r16947, %r16941, %r16940, 23;
	mov.b64 	%rd7199, {%r16947, %r16946};
	xor.b64  	%rd7200, %rd7198, %rd7199;
	xor.b64  	%rd7201, %rd7160, %rd7136;
	and.b64  	%rd7202, %rd7184, %rd7201;
	xor.b64  	%rd7203, %rd7202, %rd7136;
	add.s64 	%rd7204, %rd7112, %rd6923;
	add.s64 	%rd7205, %rd7204, %rd67;
	add.s64 	%rd7206, %rd7205, %rd7203;
	add.s64 	%rd7207, %rd7206, %rd7200;
	add.s64 	%rd7208, %rd7207, %rd7123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16948,%dummy}, %rd7195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16949}, %rd7195;
	}
	shf.r.wrap.b32 	%r16950, %r16949, %r16948, 28;
	shf.r.wrap.b32 	%r16951, %r16948, %r16949, 28;
	mov.b64 	%rd7209, {%r16951, %r16950};
	shf.l.wrap.b32 	%r16952, %r16948, %r16949, 30;
	shf.l.wrap.b32 	%r16953, %r16949, %r16948, 30;
	mov.b64 	%rd7210, {%r16953, %r16952};
	xor.b64  	%rd7211, %rd7210, %rd7209;
	shf.l.wrap.b32 	%r16954, %r16948, %r16949, 25;
	shf.l.wrap.b32 	%r16955, %r16949, %r16948, 25;
	mov.b64 	%rd7212, {%r16955, %r16954};
	xor.b64  	%rd7213, %rd7211, %rd7212;
	and.b64  	%rd7214, %rd7195, %rd7171;
	xor.b64  	%rd7215, %rd7195, %rd7171;
	and.b64  	%rd7216, %rd7215, %rd7147;
	or.b64  	%rd7217, %rd7216, %rd7214;
	add.s64 	%rd7218, %rd7207, %rd7217;
	add.s64 	%rd7219, %rd7218, %rd7213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16956,%dummy}, %rd7208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16957}, %rd7208;
	}
	shf.r.wrap.b32 	%r16958, %r16957, %r16956, 14;
	shf.r.wrap.b32 	%r16959, %r16956, %r16957, 14;
	mov.b64 	%rd7220, {%r16959, %r16958};
	shf.r.wrap.b32 	%r16960, %r16957, %r16956, 18;
	shf.r.wrap.b32 	%r16961, %r16956, %r16957, 18;
	mov.b64 	%rd7221, {%r16961, %r16960};
	xor.b64  	%rd7222, %rd7221, %rd7220;
	shf.l.wrap.b32 	%r16962, %r16956, %r16957, 23;
	shf.l.wrap.b32 	%r16963, %r16957, %r16956, 23;
	mov.b64 	%rd7223, {%r16963, %r16962};
	xor.b64  	%rd7224, %rd7222, %rd7223;
	xor.b64  	%rd7225, %rd7184, %rd7160;
	and.b64  	%rd7226, %rd7208, %rd7225;
	xor.b64  	%rd7227, %rd7226, %rd7160;
	add.s64 	%rd7228, %rd7136, %rd6936;
	add.s64 	%rd7229, %rd7228, %rd68;
	add.s64 	%rd7230, %rd7229, %rd7227;
	add.s64 	%rd7231, %rd7230, %rd7224;
	add.s64 	%rd7232, %rd7231, %rd7147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16964,%dummy}, %rd7219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16965}, %rd7219;
	}
	shf.r.wrap.b32 	%r16966, %r16965, %r16964, 28;
	shf.r.wrap.b32 	%r16967, %r16964, %r16965, 28;
	mov.b64 	%rd7233, {%r16967, %r16966};
	shf.l.wrap.b32 	%r16968, %r16964, %r16965, 30;
	shf.l.wrap.b32 	%r16969, %r16965, %r16964, 30;
	mov.b64 	%rd7234, {%r16969, %r16968};
	xor.b64  	%rd7235, %rd7234, %rd7233;
	shf.l.wrap.b32 	%r16970, %r16964, %r16965, 25;
	shf.l.wrap.b32 	%r16971, %r16965, %r16964, 25;
	mov.b64 	%rd7236, {%r16971, %r16970};
	xor.b64  	%rd7237, %rd7235, %rd7236;
	and.b64  	%rd7238, %rd7219, %rd7195;
	xor.b64  	%rd7239, %rd7219, %rd7195;
	and.b64  	%rd7240, %rd7239, %rd7171;
	or.b64  	%rd7241, %rd7240, %rd7238;
	add.s64 	%rd7242, %rd7231, %rd7241;
	add.s64 	%rd7243, %rd7242, %rd7237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16972,%dummy}, %rd7232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16973}, %rd7232;
	}
	shf.r.wrap.b32 	%r16974, %r16973, %r16972, 14;
	shf.r.wrap.b32 	%r16975, %r16972, %r16973, 14;
	mov.b64 	%rd7244, {%r16975, %r16974};
	shf.r.wrap.b32 	%r16976, %r16973, %r16972, 18;
	shf.r.wrap.b32 	%r16977, %r16972, %r16973, 18;
	mov.b64 	%rd7245, {%r16977, %r16976};
	xor.b64  	%rd7246, %rd7245, %rd7244;
	shf.l.wrap.b32 	%r16978, %r16972, %r16973, 23;
	shf.l.wrap.b32 	%r16979, %r16973, %r16972, 23;
	mov.b64 	%rd7247, {%r16979, %r16978};
	xor.b64  	%rd7248, %rd7246, %rd7247;
	xor.b64  	%rd7249, %rd7208, %rd7184;
	and.b64  	%rd7250, %rd7232, %rd7249;
	xor.b64  	%rd7251, %rd7250, %rd7184;
	add.s64 	%rd7252, %rd7160, %rd6949;
	add.s64 	%rd7253, %rd7252, %rd69;
	add.s64 	%rd7254, %rd7253, %rd7251;
	add.s64 	%rd7255, %rd7254, %rd7248;
	add.s64 	%rd7256, %rd7255, %rd7171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16980,%dummy}, %rd7243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16981}, %rd7243;
	}
	shf.r.wrap.b32 	%r16982, %r16981, %r16980, 28;
	shf.r.wrap.b32 	%r16983, %r16980, %r16981, 28;
	mov.b64 	%rd7257, {%r16983, %r16982};
	shf.l.wrap.b32 	%r16984, %r16980, %r16981, 30;
	shf.l.wrap.b32 	%r16985, %r16981, %r16980, 30;
	mov.b64 	%rd7258, {%r16985, %r16984};
	xor.b64  	%rd7259, %rd7258, %rd7257;
	shf.l.wrap.b32 	%r16986, %r16980, %r16981, 25;
	shf.l.wrap.b32 	%r16987, %r16981, %r16980, 25;
	mov.b64 	%rd7260, {%r16987, %r16986};
	xor.b64  	%rd7261, %rd7259, %rd7260;
	and.b64  	%rd7262, %rd7243, %rd7219;
	xor.b64  	%rd7263, %rd7243, %rd7219;
	and.b64  	%rd7264, %rd7263, %rd7195;
	or.b64  	%rd7265, %rd7264, %rd7262;
	add.s64 	%rd7266, %rd7255, %rd7265;
	add.s64 	%rd7267, %rd7266, %rd7261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16988,%dummy}, %rd7256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16989}, %rd7256;
	}
	shf.r.wrap.b32 	%r16990, %r16989, %r16988, 14;
	shf.r.wrap.b32 	%r16991, %r16988, %r16989, 14;
	mov.b64 	%rd7268, {%r16991, %r16990};
	shf.r.wrap.b32 	%r16992, %r16989, %r16988, 18;
	shf.r.wrap.b32 	%r16993, %r16988, %r16989, 18;
	mov.b64 	%rd7269, {%r16993, %r16992};
	xor.b64  	%rd7270, %rd7269, %rd7268;
	shf.l.wrap.b32 	%r16994, %r16988, %r16989, 23;
	shf.l.wrap.b32 	%r16995, %r16989, %r16988, 23;
	mov.b64 	%rd7271, {%r16995, %r16994};
	xor.b64  	%rd7272, %rd7270, %rd7271;
	xor.b64  	%rd7273, %rd7232, %rd7208;
	and.b64  	%rd7274, %rd7256, %rd7273;
	xor.b64  	%rd7275, %rd7274, %rd7208;
	add.s64 	%rd7276, %rd7184, %rd6962;
	add.s64 	%rd7277, %rd7276, %rd70;
	add.s64 	%rd7278, %rd7277, %rd7275;
	add.s64 	%rd7279, %rd7278, %rd7272;
	add.s64 	%rd7280, %rd7279, %rd7195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16996,%dummy}, %rd7267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16997}, %rd7267;
	}
	shf.r.wrap.b32 	%r16998, %r16997, %r16996, 28;
	shf.r.wrap.b32 	%r16999, %r16996, %r16997, 28;
	mov.b64 	%rd7281, {%r16999, %r16998};
	shf.l.wrap.b32 	%r17000, %r16996, %r16997, 30;
	shf.l.wrap.b32 	%r17001, %r16997, %r16996, 30;
	mov.b64 	%rd7282, {%r17001, %r17000};
	xor.b64  	%rd7283, %rd7282, %rd7281;
	shf.l.wrap.b32 	%r17002, %r16996, %r16997, 25;
	shf.l.wrap.b32 	%r17003, %r16997, %r16996, 25;
	mov.b64 	%rd7284, {%r17003, %r17002};
	xor.b64  	%rd7285, %rd7283, %rd7284;
	and.b64  	%rd7286, %rd7267, %rd7243;
	xor.b64  	%rd7287, %rd7267, %rd7243;
	and.b64  	%rd7288, %rd7287, %rd7219;
	or.b64  	%rd7289, %rd7288, %rd7286;
	add.s64 	%rd7290, %rd7279, %rd7289;
	add.s64 	%rd7291, %rd7290, %rd7285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17004,%dummy}, %rd7280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17005}, %rd7280;
	}
	shf.r.wrap.b32 	%r17006, %r17005, %r17004, 14;
	shf.r.wrap.b32 	%r17007, %r17004, %r17005, 14;
	mov.b64 	%rd7292, {%r17007, %r17006};
	shf.r.wrap.b32 	%r17008, %r17005, %r17004, 18;
	shf.r.wrap.b32 	%r17009, %r17004, %r17005, 18;
	mov.b64 	%rd7293, {%r17009, %r17008};
	xor.b64  	%rd7294, %rd7293, %rd7292;
	shf.l.wrap.b32 	%r17010, %r17004, %r17005, 23;
	shf.l.wrap.b32 	%r17011, %r17005, %r17004, 23;
	mov.b64 	%rd7295, {%r17011, %r17010};
	xor.b64  	%rd7296, %rd7294, %rd7295;
	xor.b64  	%rd7297, %rd7256, %rd7232;
	and.b64  	%rd7298, %rd7280, %rd7297;
	xor.b64  	%rd7299, %rd7298, %rd7232;
	add.s64 	%rd7300, %rd7208, %rd6975;
	add.s64 	%rd7301, %rd7300, %rd71;
	add.s64 	%rd7302, %rd7301, %rd7299;
	add.s64 	%rd7303, %rd7302, %rd7296;
	add.s64 	%rd7304, %rd7303, %rd7219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17012,%dummy}, %rd7291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17013}, %rd7291;
	}
	shf.r.wrap.b32 	%r17014, %r17013, %r17012, 28;
	shf.r.wrap.b32 	%r17015, %r17012, %r17013, 28;
	mov.b64 	%rd7305, {%r17015, %r17014};
	shf.l.wrap.b32 	%r17016, %r17012, %r17013, 30;
	shf.l.wrap.b32 	%r17017, %r17013, %r17012, 30;
	mov.b64 	%rd7306, {%r17017, %r17016};
	xor.b64  	%rd7307, %rd7306, %rd7305;
	shf.l.wrap.b32 	%r17018, %r17012, %r17013, 25;
	shf.l.wrap.b32 	%r17019, %r17013, %r17012, 25;
	mov.b64 	%rd7308, {%r17019, %r17018};
	xor.b64  	%rd7309, %rd7307, %rd7308;
	and.b64  	%rd7310, %rd7291, %rd7267;
	xor.b64  	%rd7311, %rd7291, %rd7267;
	and.b64  	%rd7312, %rd7311, %rd7243;
	or.b64  	%rd7313, %rd7312, %rd7310;
	add.s64 	%rd7314, %rd7303, %rd7313;
	add.s64 	%rd7315, %rd7314, %rd7309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17020,%dummy}, %rd7304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17021}, %rd7304;
	}
	shf.r.wrap.b32 	%r17022, %r17021, %r17020, 14;
	shf.r.wrap.b32 	%r17023, %r17020, %r17021, 14;
	mov.b64 	%rd7316, {%r17023, %r17022};
	shf.r.wrap.b32 	%r17024, %r17021, %r17020, 18;
	shf.r.wrap.b32 	%r17025, %r17020, %r17021, 18;
	mov.b64 	%rd7317, {%r17025, %r17024};
	xor.b64  	%rd7318, %rd7317, %rd7316;
	shf.l.wrap.b32 	%r17026, %r17020, %r17021, 23;
	shf.l.wrap.b32 	%r17027, %r17021, %r17020, 23;
	mov.b64 	%rd7319, {%r17027, %r17026};
	xor.b64  	%rd7320, %rd7318, %rd7319;
	xor.b64  	%rd7321, %rd7280, %rd7256;
	and.b64  	%rd7322, %rd7304, %rd7321;
	xor.b64  	%rd7323, %rd7322, %rd7256;
	add.s64 	%rd7324, %rd7232, %rd6988;
	add.s64 	%rd7325, %rd7324, %rd72;
	add.s64 	%rd7326, %rd7325, %rd7323;
	add.s64 	%rd7327, %rd7326, %rd7320;
	add.s64 	%rd7328, %rd7327, %rd7243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17028,%dummy}, %rd7315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17029}, %rd7315;
	}
	shf.r.wrap.b32 	%r17030, %r17029, %r17028, 28;
	shf.r.wrap.b32 	%r17031, %r17028, %r17029, 28;
	mov.b64 	%rd7329, {%r17031, %r17030};
	shf.l.wrap.b32 	%r17032, %r17028, %r17029, 30;
	shf.l.wrap.b32 	%r17033, %r17029, %r17028, 30;
	mov.b64 	%rd7330, {%r17033, %r17032};
	xor.b64  	%rd7331, %rd7330, %rd7329;
	shf.l.wrap.b32 	%r17034, %r17028, %r17029, 25;
	shf.l.wrap.b32 	%r17035, %r17029, %r17028, 25;
	mov.b64 	%rd7332, {%r17035, %r17034};
	xor.b64  	%rd7333, %rd7331, %rd7332;
	and.b64  	%rd7334, %rd7315, %rd7291;
	xor.b64  	%rd7335, %rd7315, %rd7291;
	and.b64  	%rd7336, %rd7335, %rd7267;
	or.b64  	%rd7337, %rd7336, %rd7334;
	add.s64 	%rd7338, %rd7327, %rd7337;
	add.s64 	%rd7339, %rd7338, %rd7333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17036,%dummy}, %rd7328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17037}, %rd7328;
	}
	shf.r.wrap.b32 	%r17038, %r17037, %r17036, 14;
	shf.r.wrap.b32 	%r17039, %r17036, %r17037, 14;
	mov.b64 	%rd7340, {%r17039, %r17038};
	shf.r.wrap.b32 	%r17040, %r17037, %r17036, 18;
	shf.r.wrap.b32 	%r17041, %r17036, %r17037, 18;
	mov.b64 	%rd7341, {%r17041, %r17040};
	xor.b64  	%rd7342, %rd7341, %rd7340;
	shf.l.wrap.b32 	%r17042, %r17036, %r17037, 23;
	shf.l.wrap.b32 	%r17043, %r17037, %r17036, 23;
	mov.b64 	%rd7343, {%r17043, %r17042};
	xor.b64  	%rd7344, %rd7342, %rd7343;
	xor.b64  	%rd7345, %rd7304, %rd7280;
	and.b64  	%rd7346, %rd7328, %rd7345;
	xor.b64  	%rd7347, %rd7346, %rd7280;
	add.s64 	%rd7348, %rd7256, %rd7001;
	add.s64 	%rd7349, %rd7348, %rd73;
	add.s64 	%rd7350, %rd7349, %rd7347;
	add.s64 	%rd7351, %rd7350, %rd7344;
	add.s64 	%rd7352, %rd7351, %rd7267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17044,%dummy}, %rd7339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17045}, %rd7339;
	}
	shf.r.wrap.b32 	%r17046, %r17045, %r17044, 28;
	shf.r.wrap.b32 	%r17047, %r17044, %r17045, 28;
	mov.b64 	%rd7353, {%r17047, %r17046};
	shf.l.wrap.b32 	%r17048, %r17044, %r17045, 30;
	shf.l.wrap.b32 	%r17049, %r17045, %r17044, 30;
	mov.b64 	%rd7354, {%r17049, %r17048};
	xor.b64  	%rd7355, %rd7354, %rd7353;
	shf.l.wrap.b32 	%r17050, %r17044, %r17045, 25;
	shf.l.wrap.b32 	%r17051, %r17045, %r17044, 25;
	mov.b64 	%rd7356, {%r17051, %r17050};
	xor.b64  	%rd7357, %rd7355, %rd7356;
	and.b64  	%rd7358, %rd7339, %rd7315;
	xor.b64  	%rd7359, %rd7339, %rd7315;
	and.b64  	%rd7360, %rd7359, %rd7291;
	or.b64  	%rd7361, %rd7360, %rd7358;
	add.s64 	%rd7362, %rd7351, %rd7361;
	add.s64 	%rd7363, %rd7362, %rd7357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17052,%dummy}, %rd7352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17053}, %rd7352;
	}
	shf.r.wrap.b32 	%r17054, %r17053, %r17052, 14;
	shf.r.wrap.b32 	%r17055, %r17052, %r17053, 14;
	mov.b64 	%rd7364, {%r17055, %r17054};
	shf.r.wrap.b32 	%r17056, %r17053, %r17052, 18;
	shf.r.wrap.b32 	%r17057, %r17052, %r17053, 18;
	mov.b64 	%rd7365, {%r17057, %r17056};
	xor.b64  	%rd7366, %rd7365, %rd7364;
	shf.l.wrap.b32 	%r17058, %r17052, %r17053, 23;
	shf.l.wrap.b32 	%r17059, %r17053, %r17052, 23;
	mov.b64 	%rd7367, {%r17059, %r17058};
	xor.b64  	%rd7368, %rd7366, %rd7367;
	xor.b64  	%rd7369, %rd7328, %rd7304;
	and.b64  	%rd7370, %rd7352, %rd7369;
	xor.b64  	%rd7371, %rd7370, %rd7304;
	add.s64 	%rd7372, %rd7280, %rd7014;
	add.s64 	%rd7373, %rd7372, %rd74;
	add.s64 	%rd7374, %rd7373, %rd7371;
	add.s64 	%rd7375, %rd7374, %rd7368;
	add.s64 	%rd7376, %rd7375, %rd7291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17060,%dummy}, %rd7363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17061}, %rd7363;
	}
	shf.r.wrap.b32 	%r17062, %r17061, %r17060, 28;
	shf.r.wrap.b32 	%r17063, %r17060, %r17061, 28;
	mov.b64 	%rd7377, {%r17063, %r17062};
	shf.l.wrap.b32 	%r17064, %r17060, %r17061, 30;
	shf.l.wrap.b32 	%r17065, %r17061, %r17060, 30;
	mov.b64 	%rd7378, {%r17065, %r17064};
	xor.b64  	%rd7379, %rd7378, %rd7377;
	shf.l.wrap.b32 	%r17066, %r17060, %r17061, 25;
	shf.l.wrap.b32 	%r17067, %r17061, %r17060, 25;
	mov.b64 	%rd7380, {%r17067, %r17066};
	xor.b64  	%rd7381, %rd7379, %rd7380;
	and.b64  	%rd7382, %rd7363, %rd7339;
	xor.b64  	%rd7383, %rd7363, %rd7339;
	and.b64  	%rd7384, %rd7383, %rd7315;
	or.b64  	%rd7385, %rd7384, %rd7382;
	add.s64 	%rd7386, %rd7375, %rd7385;
	add.s64 	%rd7387, %rd7386, %rd7381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17068,%dummy}, %rd7376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17069}, %rd7376;
	}
	shf.r.wrap.b32 	%r17070, %r17069, %r17068, 14;
	shf.r.wrap.b32 	%r17071, %r17068, %r17069, 14;
	mov.b64 	%rd7388, {%r17071, %r17070};
	shf.r.wrap.b32 	%r17072, %r17069, %r17068, 18;
	shf.r.wrap.b32 	%r17073, %r17068, %r17069, 18;
	mov.b64 	%rd7389, {%r17073, %r17072};
	xor.b64  	%rd7390, %rd7389, %rd7388;
	shf.l.wrap.b32 	%r17074, %r17068, %r17069, 23;
	shf.l.wrap.b32 	%r17075, %r17069, %r17068, 23;
	mov.b64 	%rd7391, {%r17075, %r17074};
	xor.b64  	%rd7392, %rd7390, %rd7391;
	xor.b64  	%rd7393, %rd7352, %rd7328;
	and.b64  	%rd7394, %rd7376, %rd7393;
	xor.b64  	%rd7395, %rd7394, %rd7328;
	add.s64 	%rd7396, %rd7304, %rd7027;
	add.s64 	%rd7397, %rd7396, %rd75;
	add.s64 	%rd7398, %rd7397, %rd7395;
	add.s64 	%rd7399, %rd7398, %rd7392;
	add.s64 	%rd7400, %rd7399, %rd7315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17076,%dummy}, %rd7387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17077}, %rd7387;
	}
	shf.r.wrap.b32 	%r17078, %r17077, %r17076, 28;
	shf.r.wrap.b32 	%r17079, %r17076, %r17077, 28;
	mov.b64 	%rd7401, {%r17079, %r17078};
	shf.l.wrap.b32 	%r17080, %r17076, %r17077, 30;
	shf.l.wrap.b32 	%r17081, %r17077, %r17076, 30;
	mov.b64 	%rd7402, {%r17081, %r17080};
	xor.b64  	%rd7403, %rd7402, %rd7401;
	shf.l.wrap.b32 	%r17082, %r17076, %r17077, 25;
	shf.l.wrap.b32 	%r17083, %r17077, %r17076, 25;
	mov.b64 	%rd7404, {%r17083, %r17082};
	xor.b64  	%rd7405, %rd7403, %rd7404;
	and.b64  	%rd7406, %rd7387, %rd7363;
	xor.b64  	%rd7407, %rd7387, %rd7363;
	and.b64  	%rd7408, %rd7407, %rd7339;
	or.b64  	%rd7409, %rd7408, %rd7406;
	add.s64 	%rd7410, %rd7399, %rd7409;
	add.s64 	%rd7411, %rd7410, %rd7405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17084,%dummy}, %rd7014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17085}, %rd7014;
	}
	shf.r.wrap.b32 	%r17086, %r17085, %r17084, 19;
	shf.r.wrap.b32 	%r17087, %r17084, %r17085, 19;
	mov.b64 	%rd7412, {%r17087, %r17086};
	shf.l.wrap.b32 	%r17088, %r17084, %r17085, 3;
	shf.l.wrap.b32 	%r17089, %r17085, %r17084, 3;
	mov.b64 	%rd7413, {%r17089, %r17088};
	shr.u64 	%rd7414, %rd7014, 6;
	xor.b64  	%rd7415, %rd7412, %rd7414;
	xor.b64  	%rd7416, %rd7415, %rd7413;
	shf.r.wrap.b32 	%r17090, %r16699, %r16698, 1;
	shf.r.wrap.b32 	%r17091, %r16698, %r16699, 1;
	mov.b64 	%rd7417, {%r17091, %r17090};
	shf.r.wrap.b32 	%r17092, %r16699, %r16698, 8;
	shf.r.wrap.b32 	%r17093, %r16698, %r16699, 8;
	mov.b64 	%rd7418, {%r17093, %r17092};
	shr.u64 	%rd7419, %rd6845, 7;
	xor.b64  	%rd7420, %rd7417, %rd7419;
	xor.b64  	%rd7421, %rd7420, %rd7418;
	add.s64 	%rd7422, %rd6949, %rd6832;
	add.s64 	%rd7423, %rd7422, %rd7416;
	add.s64 	%rd7424, %rd7423, %rd7421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17094,%dummy}, %rd7027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17095}, %rd7027;
	}
	shf.r.wrap.b32 	%r17096, %r17095, %r17094, 19;
	shf.r.wrap.b32 	%r17097, %r17094, %r17095, 19;
	mov.b64 	%rd7425, {%r17097, %r17096};
	shf.l.wrap.b32 	%r17098, %r17094, %r17095, 3;
	shf.l.wrap.b32 	%r17099, %r17095, %r17094, 3;
	mov.b64 	%rd7426, {%r17099, %r17098};
	shr.u64 	%rd7427, %rd7027, 6;
	xor.b64  	%rd7428, %rd7425, %rd7427;
	xor.b64  	%rd7429, %rd7428, %rd7426;
	shf.r.wrap.b32 	%r17100, %r16709, %r16708, 1;
	shf.r.wrap.b32 	%r17101, %r16708, %r16709, 1;
	mov.b64 	%rd7430, {%r17101, %r17100};
	shf.r.wrap.b32 	%r17102, %r16709, %r16708, 8;
	shf.r.wrap.b32 	%r17103, %r16708, %r16709, 8;
	mov.b64 	%rd7431, {%r17103, %r17102};
	shr.u64 	%rd7432, %rd6858, 7;
	xor.b64  	%rd7433, %rd7430, %rd7432;
	xor.b64  	%rd7434, %rd7433, %rd7431;
	add.s64 	%rd7435, %rd6962, %rd6845;
	add.s64 	%rd7436, %rd7435, %rd7429;
	add.s64 	%rd7437, %rd7436, %rd7434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17104,%dummy}, %rd7424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17105}, %rd7424;
	}
	shf.r.wrap.b32 	%r17106, %r17105, %r17104, 19;
	shf.r.wrap.b32 	%r17107, %r17104, %r17105, 19;
	mov.b64 	%rd7438, {%r17107, %r17106};
	shf.l.wrap.b32 	%r17108, %r17104, %r17105, 3;
	shf.l.wrap.b32 	%r17109, %r17105, %r17104, 3;
	mov.b64 	%rd7439, {%r17109, %r17108};
	shr.u64 	%rd7440, %rd7424, 6;
	xor.b64  	%rd7441, %rd7438, %rd7440;
	xor.b64  	%rd7442, %rd7441, %rd7439;
	shf.r.wrap.b32 	%r17110, %r16719, %r16718, 1;
	shf.r.wrap.b32 	%r17111, %r16718, %r16719, 1;
	mov.b64 	%rd7443, {%r17111, %r17110};
	shf.r.wrap.b32 	%r17112, %r16719, %r16718, 8;
	shf.r.wrap.b32 	%r17113, %r16718, %r16719, 8;
	mov.b64 	%rd7444, {%r17113, %r17112};
	shr.u64 	%rd7445, %rd6871, 7;
	xor.b64  	%rd7446, %rd7443, %rd7445;
	xor.b64  	%rd7447, %rd7446, %rd7444;
	add.s64 	%rd7448, %rd6975, %rd6858;
	add.s64 	%rd7449, %rd7448, %rd7442;
	add.s64 	%rd7450, %rd7449, %rd7447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17114,%dummy}, %rd7437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17115}, %rd7437;
	}
	shf.r.wrap.b32 	%r17116, %r17115, %r17114, 19;
	shf.r.wrap.b32 	%r17117, %r17114, %r17115, 19;
	mov.b64 	%rd7451, {%r17117, %r17116};
	shf.l.wrap.b32 	%r17118, %r17114, %r17115, 3;
	shf.l.wrap.b32 	%r17119, %r17115, %r17114, 3;
	mov.b64 	%rd7452, {%r17119, %r17118};
	shr.u64 	%rd7453, %rd7437, 6;
	xor.b64  	%rd7454, %rd7451, %rd7453;
	xor.b64  	%rd7455, %rd7454, %rd7452;
	shf.r.wrap.b32 	%r17120, %r16729, %r16728, 1;
	shf.r.wrap.b32 	%r17121, %r16728, %r16729, 1;
	mov.b64 	%rd7456, {%r17121, %r17120};
	shf.r.wrap.b32 	%r17122, %r16729, %r16728, 8;
	shf.r.wrap.b32 	%r17123, %r16728, %r16729, 8;
	mov.b64 	%rd7457, {%r17123, %r17122};
	shr.u64 	%rd7458, %rd6884, 7;
	xor.b64  	%rd7459, %rd7456, %rd7458;
	xor.b64  	%rd7460, %rd7459, %rd7457;
	add.s64 	%rd7461, %rd6988, %rd6871;
	add.s64 	%rd7462, %rd7461, %rd7455;
	add.s64 	%rd7463, %rd7462, %rd7460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17124,%dummy}, %rd7450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17125}, %rd7450;
	}
	shf.r.wrap.b32 	%r17126, %r17125, %r17124, 19;
	shf.r.wrap.b32 	%r17127, %r17124, %r17125, 19;
	mov.b64 	%rd7464, {%r17127, %r17126};
	shf.l.wrap.b32 	%r17128, %r17124, %r17125, 3;
	shf.l.wrap.b32 	%r17129, %r17125, %r17124, 3;
	mov.b64 	%rd7465, {%r17129, %r17128};
	shr.u64 	%rd7466, %rd7450, 6;
	xor.b64  	%rd7467, %rd7464, %rd7466;
	xor.b64  	%rd7468, %rd7467, %rd7465;
	shf.r.wrap.b32 	%r17130, %r16739, %r16738, 1;
	shf.r.wrap.b32 	%r17131, %r16738, %r16739, 1;
	mov.b64 	%rd7469, {%r17131, %r17130};
	shf.r.wrap.b32 	%r17132, %r16739, %r16738, 8;
	shf.r.wrap.b32 	%r17133, %r16738, %r16739, 8;
	mov.b64 	%rd7470, {%r17133, %r17132};
	shr.u64 	%rd7471, %rd6897, 7;
	xor.b64  	%rd7472, %rd7469, %rd7471;
	xor.b64  	%rd7473, %rd7472, %rd7470;
	add.s64 	%rd7474, %rd7001, %rd6884;
	add.s64 	%rd7475, %rd7474, %rd7468;
	add.s64 	%rd7476, %rd7475, %rd7473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17134,%dummy}, %rd7463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17135}, %rd7463;
	}
	shf.r.wrap.b32 	%r17136, %r17135, %r17134, 19;
	shf.r.wrap.b32 	%r17137, %r17134, %r17135, 19;
	mov.b64 	%rd7477, {%r17137, %r17136};
	shf.l.wrap.b32 	%r17138, %r17134, %r17135, 3;
	shf.l.wrap.b32 	%r17139, %r17135, %r17134, 3;
	mov.b64 	%rd7478, {%r17139, %r17138};
	shr.u64 	%rd7479, %rd7463, 6;
	xor.b64  	%rd7480, %rd7477, %rd7479;
	xor.b64  	%rd7481, %rd7480, %rd7478;
	shf.r.wrap.b32 	%r17140, %r16749, %r16748, 1;
	shf.r.wrap.b32 	%r17141, %r16748, %r16749, 1;
	mov.b64 	%rd7482, {%r17141, %r17140};
	shf.r.wrap.b32 	%r17142, %r16749, %r16748, 8;
	shf.r.wrap.b32 	%r17143, %r16748, %r16749, 8;
	mov.b64 	%rd7483, {%r17143, %r17142};
	shr.u64 	%rd7484, %rd6910, 7;
	xor.b64  	%rd7485, %rd7482, %rd7484;
	xor.b64  	%rd7486, %rd7485, %rd7483;
	add.s64 	%rd7487, %rd7014, %rd6897;
	add.s64 	%rd7488, %rd7487, %rd7481;
	add.s64 	%rd7489, %rd7488, %rd7486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17144,%dummy}, %rd7476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17145}, %rd7476;
	}
	shf.r.wrap.b32 	%r17146, %r17145, %r17144, 19;
	shf.r.wrap.b32 	%r17147, %r17144, %r17145, 19;
	mov.b64 	%rd7490, {%r17147, %r17146};
	shf.l.wrap.b32 	%r17148, %r17144, %r17145, 3;
	shf.l.wrap.b32 	%r17149, %r17145, %r17144, 3;
	mov.b64 	%rd7491, {%r17149, %r17148};
	shr.u64 	%rd7492, %rd7476, 6;
	xor.b64  	%rd7493, %rd7490, %rd7492;
	xor.b64  	%rd7494, %rd7493, %rd7491;
	shf.r.wrap.b32 	%r17150, %r16759, %r16758, 1;
	shf.r.wrap.b32 	%r17151, %r16758, %r16759, 1;
	mov.b64 	%rd7495, {%r17151, %r17150};
	shf.r.wrap.b32 	%r17152, %r16759, %r16758, 8;
	shf.r.wrap.b32 	%r17153, %r16758, %r16759, 8;
	mov.b64 	%rd7496, {%r17153, %r17152};
	shr.u64 	%rd7497, %rd6923, 7;
	xor.b64  	%rd7498, %rd7495, %rd7497;
	xor.b64  	%rd7499, %rd7498, %rd7496;
	add.s64 	%rd7500, %rd7027, %rd6910;
	add.s64 	%rd7501, %rd7500, %rd7494;
	add.s64 	%rd7502, %rd7501, %rd7499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17154,%dummy}, %rd7489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17155}, %rd7489;
	}
	shf.r.wrap.b32 	%r17156, %r17155, %r17154, 19;
	shf.r.wrap.b32 	%r17157, %r17154, %r17155, 19;
	mov.b64 	%rd7503, {%r17157, %r17156};
	shf.l.wrap.b32 	%r17158, %r17154, %r17155, 3;
	shf.l.wrap.b32 	%r17159, %r17155, %r17154, 3;
	mov.b64 	%rd7504, {%r17159, %r17158};
	shr.u64 	%rd7505, %rd7489, 6;
	xor.b64  	%rd7506, %rd7503, %rd7505;
	xor.b64  	%rd7507, %rd7506, %rd7504;
	shf.r.wrap.b32 	%r17160, %r16769, %r16768, 1;
	shf.r.wrap.b32 	%r17161, %r16768, %r16769, 1;
	mov.b64 	%rd7508, {%r17161, %r17160};
	shf.r.wrap.b32 	%r17162, %r16769, %r16768, 8;
	shf.r.wrap.b32 	%r17163, %r16768, %r16769, 8;
	mov.b64 	%rd7509, {%r17163, %r17162};
	shr.u64 	%rd7510, %rd6936, 7;
	xor.b64  	%rd7511, %rd7508, %rd7510;
	xor.b64  	%rd7512, %rd7511, %rd7509;
	add.s64 	%rd7513, %rd7424, %rd6923;
	add.s64 	%rd7514, %rd7513, %rd7507;
	add.s64 	%rd7515, %rd7514, %rd7512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17164,%dummy}, %rd7502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17165}, %rd7502;
	}
	shf.r.wrap.b32 	%r17166, %r17165, %r17164, 19;
	shf.r.wrap.b32 	%r17167, %r17164, %r17165, 19;
	mov.b64 	%rd7516, {%r17167, %r17166};
	shf.l.wrap.b32 	%r17168, %r17164, %r17165, 3;
	shf.l.wrap.b32 	%r17169, %r17165, %r17164, 3;
	mov.b64 	%rd7517, {%r17169, %r17168};
	shr.u64 	%rd7518, %rd7502, 6;
	xor.b64  	%rd7519, %rd7516, %rd7518;
	xor.b64  	%rd7520, %rd7519, %rd7517;
	shf.r.wrap.b32 	%r17170, %r16779, %r16778, 1;
	shf.r.wrap.b32 	%r17171, %r16778, %r16779, 1;
	mov.b64 	%rd7521, {%r17171, %r17170};
	shf.r.wrap.b32 	%r17172, %r16779, %r16778, 8;
	shf.r.wrap.b32 	%r17173, %r16778, %r16779, 8;
	mov.b64 	%rd7522, {%r17173, %r17172};
	shr.u64 	%rd7523, %rd6949, 7;
	xor.b64  	%rd7524, %rd7521, %rd7523;
	xor.b64  	%rd7525, %rd7524, %rd7522;
	add.s64 	%rd7526, %rd7437, %rd6936;
	add.s64 	%rd7527, %rd7526, %rd7520;
	add.s64 	%rd7528, %rd7527, %rd7525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17174,%dummy}, %rd7515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17175}, %rd7515;
	}
	shf.r.wrap.b32 	%r17176, %r17175, %r17174, 19;
	shf.r.wrap.b32 	%r17177, %r17174, %r17175, 19;
	mov.b64 	%rd7529, {%r17177, %r17176};
	shf.l.wrap.b32 	%r17178, %r17174, %r17175, 3;
	shf.l.wrap.b32 	%r17179, %r17175, %r17174, 3;
	mov.b64 	%rd7530, {%r17179, %r17178};
	shr.u64 	%rd7531, %rd7515, 6;
	xor.b64  	%rd7532, %rd7529, %rd7531;
	xor.b64  	%rd7533, %rd7532, %rd7530;
	shf.r.wrap.b32 	%r17180, %r16789, %r16788, 1;
	shf.r.wrap.b32 	%r17181, %r16788, %r16789, 1;
	mov.b64 	%rd7534, {%r17181, %r17180};
	shf.r.wrap.b32 	%r17182, %r16789, %r16788, 8;
	shf.r.wrap.b32 	%r17183, %r16788, %r16789, 8;
	mov.b64 	%rd7535, {%r17183, %r17182};
	shr.u64 	%rd7536, %rd6962, 7;
	xor.b64  	%rd7537, %rd7534, %rd7536;
	xor.b64  	%rd7538, %rd7537, %rd7535;
	add.s64 	%rd7539, %rd7450, %rd6949;
	add.s64 	%rd7540, %rd7539, %rd7533;
	add.s64 	%rd7541, %rd7540, %rd7538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17184,%dummy}, %rd7528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17185}, %rd7528;
	}
	shf.r.wrap.b32 	%r17186, %r17185, %r17184, 19;
	shf.r.wrap.b32 	%r17187, %r17184, %r17185, 19;
	mov.b64 	%rd7542, {%r17187, %r17186};
	shf.l.wrap.b32 	%r17188, %r17184, %r17185, 3;
	shf.l.wrap.b32 	%r17189, %r17185, %r17184, 3;
	mov.b64 	%rd7543, {%r17189, %r17188};
	shr.u64 	%rd7544, %rd7528, 6;
	xor.b64  	%rd7545, %rd7542, %rd7544;
	xor.b64  	%rd7546, %rd7545, %rd7543;
	shf.r.wrap.b32 	%r17190, %r16799, %r16798, 1;
	shf.r.wrap.b32 	%r17191, %r16798, %r16799, 1;
	mov.b64 	%rd7547, {%r17191, %r17190};
	shf.r.wrap.b32 	%r17192, %r16799, %r16798, 8;
	shf.r.wrap.b32 	%r17193, %r16798, %r16799, 8;
	mov.b64 	%rd7548, {%r17193, %r17192};
	shr.u64 	%rd7549, %rd6975, 7;
	xor.b64  	%rd7550, %rd7547, %rd7549;
	xor.b64  	%rd7551, %rd7550, %rd7548;
	add.s64 	%rd7552, %rd7463, %rd6962;
	add.s64 	%rd7553, %rd7552, %rd7546;
	add.s64 	%rd7554, %rd7553, %rd7551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17194,%dummy}, %rd7541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17195}, %rd7541;
	}
	shf.r.wrap.b32 	%r17196, %r17195, %r17194, 19;
	shf.r.wrap.b32 	%r17197, %r17194, %r17195, 19;
	mov.b64 	%rd7555, {%r17197, %r17196};
	shf.l.wrap.b32 	%r17198, %r17194, %r17195, 3;
	shf.l.wrap.b32 	%r17199, %r17195, %r17194, 3;
	mov.b64 	%rd7556, {%r17199, %r17198};
	shr.u64 	%rd7557, %rd7541, 6;
	xor.b64  	%rd7558, %rd7555, %rd7557;
	xor.b64  	%rd7559, %rd7558, %rd7556;
	shf.r.wrap.b32 	%r17200, %r16809, %r16808, 1;
	shf.r.wrap.b32 	%r17201, %r16808, %r16809, 1;
	mov.b64 	%rd7560, {%r17201, %r17200};
	shf.r.wrap.b32 	%r17202, %r16809, %r16808, 8;
	shf.r.wrap.b32 	%r17203, %r16808, %r16809, 8;
	mov.b64 	%rd7561, {%r17203, %r17202};
	shr.u64 	%rd7562, %rd6988, 7;
	xor.b64  	%rd7563, %rd7560, %rd7562;
	xor.b64  	%rd7564, %rd7563, %rd7561;
	add.s64 	%rd7565, %rd7476, %rd6975;
	add.s64 	%rd7566, %rd7565, %rd7559;
	add.s64 	%rd7567, %rd7566, %rd7564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17204,%dummy}, %rd7554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17205}, %rd7554;
	}
	shf.r.wrap.b32 	%r17206, %r17205, %r17204, 19;
	shf.r.wrap.b32 	%r17207, %r17204, %r17205, 19;
	mov.b64 	%rd7568, {%r17207, %r17206};
	shf.l.wrap.b32 	%r17208, %r17204, %r17205, 3;
	shf.l.wrap.b32 	%r17209, %r17205, %r17204, 3;
	mov.b64 	%rd7569, {%r17209, %r17208};
	shr.u64 	%rd7570, %rd7554, 6;
	xor.b64  	%rd7571, %rd7568, %rd7570;
	xor.b64  	%rd7572, %rd7571, %rd7569;
	shf.r.wrap.b32 	%r17210, %r16819, %r16818, 1;
	shf.r.wrap.b32 	%r17211, %r16818, %r16819, 1;
	mov.b64 	%rd7573, {%r17211, %r17210};
	shf.r.wrap.b32 	%r17212, %r16819, %r16818, 8;
	shf.r.wrap.b32 	%r17213, %r16818, %r16819, 8;
	mov.b64 	%rd7574, {%r17213, %r17212};
	shr.u64 	%rd7575, %rd7001, 7;
	xor.b64  	%rd7576, %rd7573, %rd7575;
	xor.b64  	%rd7577, %rd7576, %rd7574;
	add.s64 	%rd7578, %rd7489, %rd6988;
	add.s64 	%rd7579, %rd7578, %rd7572;
	add.s64 	%rd7580, %rd7579, %rd7577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17214,%dummy}, %rd7567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17215}, %rd7567;
	}
	shf.r.wrap.b32 	%r17216, %r17215, %r17214, 19;
	shf.r.wrap.b32 	%r17217, %r17214, %r17215, 19;
	mov.b64 	%rd7581, {%r17217, %r17216};
	shf.l.wrap.b32 	%r17218, %r17214, %r17215, 3;
	shf.l.wrap.b32 	%r17219, %r17215, %r17214, 3;
	mov.b64 	%rd7582, {%r17219, %r17218};
	shr.u64 	%rd7583, %rd7567, 6;
	xor.b64  	%rd7584, %rd7581, %rd7583;
	xor.b64  	%rd7585, %rd7584, %rd7582;
	shf.r.wrap.b32 	%r17220, %r17085, %r17084, 1;
	shf.r.wrap.b32 	%r17221, %r17084, %r17085, 1;
	mov.b64 	%rd7586, {%r17221, %r17220};
	shf.r.wrap.b32 	%r17222, %r17085, %r17084, 8;
	shf.r.wrap.b32 	%r17223, %r17084, %r17085, 8;
	mov.b64 	%rd7587, {%r17223, %r17222};
	shr.u64 	%rd7588, %rd7014, 7;
	xor.b64  	%rd7589, %rd7586, %rd7588;
	xor.b64  	%rd7590, %rd7589, %rd7587;
	add.s64 	%rd7591, %rd7502, %rd7001;
	add.s64 	%rd7592, %rd7591, %rd7585;
	add.s64 	%rd7593, %rd7592, %rd7590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17224,%dummy}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17225}, %rd7580;
	}
	shf.r.wrap.b32 	%r17226, %r17225, %r17224, 19;
	shf.r.wrap.b32 	%r17227, %r17224, %r17225, 19;
	mov.b64 	%rd7594, {%r17227, %r17226};
	shf.l.wrap.b32 	%r17228, %r17224, %r17225, 3;
	shf.l.wrap.b32 	%r17229, %r17225, %r17224, 3;
	mov.b64 	%rd7595, {%r17229, %r17228};
	shr.u64 	%rd7596, %rd7580, 6;
	xor.b64  	%rd7597, %rd7594, %rd7596;
	xor.b64  	%rd7598, %rd7597, %rd7595;
	shf.r.wrap.b32 	%r17230, %r17095, %r17094, 1;
	shf.r.wrap.b32 	%r17231, %r17094, %r17095, 1;
	mov.b64 	%rd7599, {%r17231, %r17230};
	shf.r.wrap.b32 	%r17232, %r17095, %r17094, 8;
	shf.r.wrap.b32 	%r17233, %r17094, %r17095, 8;
	mov.b64 	%rd7600, {%r17233, %r17232};
	shr.u64 	%rd7601, %rd7027, 7;
	xor.b64  	%rd7602, %rd7599, %rd7601;
	xor.b64  	%rd7603, %rd7602, %rd7600;
	add.s64 	%rd7604, %rd7515, %rd7014;
	add.s64 	%rd7605, %rd7604, %rd7598;
	add.s64 	%rd7606, %rd7605, %rd7603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17234,%dummy}, %rd7593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17235}, %rd7593;
	}
	shf.r.wrap.b32 	%r17236, %r17235, %r17234, 19;
	shf.r.wrap.b32 	%r17237, %r17234, %r17235, 19;
	mov.b64 	%rd7607, {%r17237, %r17236};
	shf.l.wrap.b32 	%r17238, %r17234, %r17235, 3;
	shf.l.wrap.b32 	%r17239, %r17235, %r17234, 3;
	mov.b64 	%rd7608, {%r17239, %r17238};
	shr.u64 	%rd7609, %rd7593, 6;
	xor.b64  	%rd7610, %rd7607, %rd7609;
	xor.b64  	%rd7611, %rd7610, %rd7608;
	shf.r.wrap.b32 	%r17240, %r17105, %r17104, 1;
	shf.r.wrap.b32 	%r17241, %r17104, %r17105, 1;
	mov.b64 	%rd7612, {%r17241, %r17240};
	shf.r.wrap.b32 	%r17242, %r17105, %r17104, 8;
	shf.r.wrap.b32 	%r17243, %r17104, %r17105, 8;
	mov.b64 	%rd7613, {%r17243, %r17242};
	shr.u64 	%rd7614, %rd7424, 7;
	xor.b64  	%rd7615, %rd7612, %rd7614;
	xor.b64  	%rd7616, %rd7615, %rd7613;
	add.s64 	%rd7617, %rd7528, %rd7027;
	add.s64 	%rd7618, %rd7617, %rd7611;
	add.s64 	%rd7619, %rd7618, %rd7616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17244,%dummy}, %rd7400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17245}, %rd7400;
	}
	shf.r.wrap.b32 	%r17246, %r17245, %r17244, 14;
	shf.r.wrap.b32 	%r17247, %r17244, %r17245, 14;
	mov.b64 	%rd7620, {%r17247, %r17246};
	shf.r.wrap.b32 	%r17248, %r17245, %r17244, 18;
	shf.r.wrap.b32 	%r17249, %r17244, %r17245, 18;
	mov.b64 	%rd7621, {%r17249, %r17248};
	xor.b64  	%rd7622, %rd7621, %rd7620;
	shf.l.wrap.b32 	%r17250, %r17244, %r17245, 23;
	shf.l.wrap.b32 	%r17251, %r17245, %r17244, 23;
	mov.b64 	%rd7623, {%r17251, %r17250};
	xor.b64  	%rd7624, %rd7622, %rd7623;
	xor.b64  	%rd7625, %rd7376, %rd7352;
	and.b64  	%rd7626, %rd7400, %rd7625;
	xor.b64  	%rd7627, %rd7626, %rd7352;
	add.s64 	%rd7628, %rd7627, %rd7328;
	add.s64 	%rd7629, %rd7628, %rd7424;
	add.s64 	%rd7630, %rd7629, %rd76;
	add.s64 	%rd7631, %rd7630, %rd7624;
	add.s64 	%rd7632, %rd7631, %rd7339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17252,%dummy}, %rd7411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17253}, %rd7411;
	}
	shf.r.wrap.b32 	%r17254, %r17253, %r17252, 28;
	shf.r.wrap.b32 	%r17255, %r17252, %r17253, 28;
	mov.b64 	%rd7633, {%r17255, %r17254};
	shf.l.wrap.b32 	%r17256, %r17252, %r17253, 30;
	shf.l.wrap.b32 	%r17257, %r17253, %r17252, 30;
	mov.b64 	%rd7634, {%r17257, %r17256};
	xor.b64  	%rd7635, %rd7634, %rd7633;
	shf.l.wrap.b32 	%r17258, %r17252, %r17253, 25;
	shf.l.wrap.b32 	%r17259, %r17253, %r17252, 25;
	mov.b64 	%rd7636, {%r17259, %r17258};
	xor.b64  	%rd7637, %rd7635, %rd7636;
	and.b64  	%rd7638, %rd7411, %rd7387;
	xor.b64  	%rd7639, %rd7411, %rd7387;
	and.b64  	%rd7640, %rd7639, %rd7363;
	or.b64  	%rd7641, %rd7640, %rd7638;
	add.s64 	%rd7642, %rd7631, %rd7641;
	add.s64 	%rd7643, %rd7642, %rd7637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17260,%dummy}, %rd7632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17261}, %rd7632;
	}
	shf.r.wrap.b32 	%r17262, %r17261, %r17260, 14;
	shf.r.wrap.b32 	%r17263, %r17260, %r17261, 14;
	mov.b64 	%rd7644, {%r17263, %r17262};
	shf.r.wrap.b32 	%r17264, %r17261, %r17260, 18;
	shf.r.wrap.b32 	%r17265, %r17260, %r17261, 18;
	mov.b64 	%rd7645, {%r17265, %r17264};
	xor.b64  	%rd7646, %rd7645, %rd7644;
	shf.l.wrap.b32 	%r17266, %r17260, %r17261, 23;
	shf.l.wrap.b32 	%r17267, %r17261, %r17260, 23;
	mov.b64 	%rd7647, {%r17267, %r17266};
	xor.b64  	%rd7648, %rd7646, %rd7647;
	xor.b64  	%rd7649, %rd7400, %rd7376;
	and.b64  	%rd7650, %rd7632, %rd7649;
	xor.b64  	%rd7651, %rd7650, %rd7376;
	add.s64 	%rd7652, %rd7437, %rd7352;
	add.s64 	%rd7653, %rd7652, %rd77;
	add.s64 	%rd7654, %rd7653, %rd7651;
	add.s64 	%rd7655, %rd7654, %rd7648;
	add.s64 	%rd7656, %rd7655, %rd7363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17268,%dummy}, %rd7643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17269}, %rd7643;
	}
	shf.r.wrap.b32 	%r17270, %r17269, %r17268, 28;
	shf.r.wrap.b32 	%r17271, %r17268, %r17269, 28;
	mov.b64 	%rd7657, {%r17271, %r17270};
	shf.l.wrap.b32 	%r17272, %r17268, %r17269, 30;
	shf.l.wrap.b32 	%r17273, %r17269, %r17268, 30;
	mov.b64 	%rd7658, {%r17273, %r17272};
	xor.b64  	%rd7659, %rd7658, %rd7657;
	shf.l.wrap.b32 	%r17274, %r17268, %r17269, 25;
	shf.l.wrap.b32 	%r17275, %r17269, %r17268, 25;
	mov.b64 	%rd7660, {%r17275, %r17274};
	xor.b64  	%rd7661, %rd7659, %rd7660;
	and.b64  	%rd7662, %rd7643, %rd7411;
	xor.b64  	%rd7663, %rd7643, %rd7411;
	and.b64  	%rd7664, %rd7663, %rd7387;
	or.b64  	%rd7665, %rd7664, %rd7662;
	add.s64 	%rd7666, %rd7655, %rd7665;
	add.s64 	%rd7667, %rd7666, %rd7661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17276,%dummy}, %rd7656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17277}, %rd7656;
	}
	shf.r.wrap.b32 	%r17278, %r17277, %r17276, 14;
	shf.r.wrap.b32 	%r17279, %r17276, %r17277, 14;
	mov.b64 	%rd7668, {%r17279, %r17278};
	shf.r.wrap.b32 	%r17280, %r17277, %r17276, 18;
	shf.r.wrap.b32 	%r17281, %r17276, %r17277, 18;
	mov.b64 	%rd7669, {%r17281, %r17280};
	xor.b64  	%rd7670, %rd7669, %rd7668;
	shf.l.wrap.b32 	%r17282, %r17276, %r17277, 23;
	shf.l.wrap.b32 	%r17283, %r17277, %r17276, 23;
	mov.b64 	%rd7671, {%r17283, %r17282};
	xor.b64  	%rd7672, %rd7670, %rd7671;
	xor.b64  	%rd7673, %rd7632, %rd7400;
	and.b64  	%rd7674, %rd7656, %rd7673;
	xor.b64  	%rd7675, %rd7674, %rd7400;
	add.s64 	%rd7676, %rd7450, %rd7376;
	add.s64 	%rd7677, %rd7676, %rd78;
	add.s64 	%rd7678, %rd7677, %rd7675;
	add.s64 	%rd7679, %rd7678, %rd7672;
	add.s64 	%rd7680, %rd7679, %rd7387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17284,%dummy}, %rd7667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17285}, %rd7667;
	}
	shf.r.wrap.b32 	%r17286, %r17285, %r17284, 28;
	shf.r.wrap.b32 	%r17287, %r17284, %r17285, 28;
	mov.b64 	%rd7681, {%r17287, %r17286};
	shf.l.wrap.b32 	%r17288, %r17284, %r17285, 30;
	shf.l.wrap.b32 	%r17289, %r17285, %r17284, 30;
	mov.b64 	%rd7682, {%r17289, %r17288};
	xor.b64  	%rd7683, %rd7682, %rd7681;
	shf.l.wrap.b32 	%r17290, %r17284, %r17285, 25;
	shf.l.wrap.b32 	%r17291, %r17285, %r17284, 25;
	mov.b64 	%rd7684, {%r17291, %r17290};
	xor.b64  	%rd7685, %rd7683, %rd7684;
	and.b64  	%rd7686, %rd7667, %rd7643;
	xor.b64  	%rd7687, %rd7667, %rd7643;
	and.b64  	%rd7688, %rd7687, %rd7411;
	or.b64  	%rd7689, %rd7688, %rd7686;
	add.s64 	%rd7690, %rd7679, %rd7689;
	add.s64 	%rd7691, %rd7690, %rd7685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17292,%dummy}, %rd7680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17293}, %rd7680;
	}
	shf.r.wrap.b32 	%r17294, %r17293, %r17292, 14;
	shf.r.wrap.b32 	%r17295, %r17292, %r17293, 14;
	mov.b64 	%rd7692, {%r17295, %r17294};
	shf.r.wrap.b32 	%r17296, %r17293, %r17292, 18;
	shf.r.wrap.b32 	%r17297, %r17292, %r17293, 18;
	mov.b64 	%rd7693, {%r17297, %r17296};
	xor.b64  	%rd7694, %rd7693, %rd7692;
	shf.l.wrap.b32 	%r17298, %r17292, %r17293, 23;
	shf.l.wrap.b32 	%r17299, %r17293, %r17292, 23;
	mov.b64 	%rd7695, {%r17299, %r17298};
	xor.b64  	%rd7696, %rd7694, %rd7695;
	xor.b64  	%rd7697, %rd7656, %rd7632;
	and.b64  	%rd7698, %rd7680, %rd7697;
	xor.b64  	%rd7699, %rd7698, %rd7632;
	add.s64 	%rd7700, %rd7463, %rd7400;
	add.s64 	%rd7701, %rd7700, %rd79;
	add.s64 	%rd7702, %rd7701, %rd7699;
	add.s64 	%rd7703, %rd7702, %rd7696;
	add.s64 	%rd7704, %rd7703, %rd7411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17300,%dummy}, %rd7691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17301}, %rd7691;
	}
	shf.r.wrap.b32 	%r17302, %r17301, %r17300, 28;
	shf.r.wrap.b32 	%r17303, %r17300, %r17301, 28;
	mov.b64 	%rd7705, {%r17303, %r17302};
	shf.l.wrap.b32 	%r17304, %r17300, %r17301, 30;
	shf.l.wrap.b32 	%r17305, %r17301, %r17300, 30;
	mov.b64 	%rd7706, {%r17305, %r17304};
	xor.b64  	%rd7707, %rd7706, %rd7705;
	shf.l.wrap.b32 	%r17306, %r17300, %r17301, 25;
	shf.l.wrap.b32 	%r17307, %r17301, %r17300, 25;
	mov.b64 	%rd7708, {%r17307, %r17306};
	xor.b64  	%rd7709, %rd7707, %rd7708;
	and.b64  	%rd7710, %rd7691, %rd7667;
	xor.b64  	%rd7711, %rd7691, %rd7667;
	and.b64  	%rd7712, %rd7711, %rd7643;
	or.b64  	%rd7713, %rd7712, %rd7710;
	add.s64 	%rd7714, %rd7703, %rd7713;
	add.s64 	%rd7715, %rd7714, %rd7709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17308,%dummy}, %rd7704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17309}, %rd7704;
	}
	shf.r.wrap.b32 	%r17310, %r17309, %r17308, 14;
	shf.r.wrap.b32 	%r17311, %r17308, %r17309, 14;
	mov.b64 	%rd7716, {%r17311, %r17310};
	shf.r.wrap.b32 	%r17312, %r17309, %r17308, 18;
	shf.r.wrap.b32 	%r17313, %r17308, %r17309, 18;
	mov.b64 	%rd7717, {%r17313, %r17312};
	xor.b64  	%rd7718, %rd7717, %rd7716;
	shf.l.wrap.b32 	%r17314, %r17308, %r17309, 23;
	shf.l.wrap.b32 	%r17315, %r17309, %r17308, 23;
	mov.b64 	%rd7719, {%r17315, %r17314};
	xor.b64  	%rd7720, %rd7718, %rd7719;
	xor.b64  	%rd7721, %rd7680, %rd7656;
	and.b64  	%rd7722, %rd7704, %rd7721;
	xor.b64  	%rd7723, %rd7722, %rd7656;
	add.s64 	%rd7724, %rd7632, %rd7476;
	add.s64 	%rd7725, %rd7724, %rd80;
	add.s64 	%rd7726, %rd7725, %rd7723;
	add.s64 	%rd7727, %rd7726, %rd7720;
	add.s64 	%rd7728, %rd7727, %rd7643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17316,%dummy}, %rd7715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17317}, %rd7715;
	}
	shf.r.wrap.b32 	%r17318, %r17317, %r17316, 28;
	shf.r.wrap.b32 	%r17319, %r17316, %r17317, 28;
	mov.b64 	%rd7729, {%r17319, %r17318};
	shf.l.wrap.b32 	%r17320, %r17316, %r17317, 30;
	shf.l.wrap.b32 	%r17321, %r17317, %r17316, 30;
	mov.b64 	%rd7730, {%r17321, %r17320};
	xor.b64  	%rd7731, %rd7730, %rd7729;
	shf.l.wrap.b32 	%r17322, %r17316, %r17317, 25;
	shf.l.wrap.b32 	%r17323, %r17317, %r17316, 25;
	mov.b64 	%rd7732, {%r17323, %r17322};
	xor.b64  	%rd7733, %rd7731, %rd7732;
	and.b64  	%rd7734, %rd7715, %rd7691;
	xor.b64  	%rd7735, %rd7715, %rd7691;
	and.b64  	%rd7736, %rd7735, %rd7667;
	or.b64  	%rd7737, %rd7736, %rd7734;
	add.s64 	%rd7738, %rd7727, %rd7737;
	add.s64 	%rd7739, %rd7738, %rd7733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17324,%dummy}, %rd7728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17325}, %rd7728;
	}
	shf.r.wrap.b32 	%r17326, %r17325, %r17324, 14;
	shf.r.wrap.b32 	%r17327, %r17324, %r17325, 14;
	mov.b64 	%rd7740, {%r17327, %r17326};
	shf.r.wrap.b32 	%r17328, %r17325, %r17324, 18;
	shf.r.wrap.b32 	%r17329, %r17324, %r17325, 18;
	mov.b64 	%rd7741, {%r17329, %r17328};
	xor.b64  	%rd7742, %rd7741, %rd7740;
	shf.l.wrap.b32 	%r17330, %r17324, %r17325, 23;
	shf.l.wrap.b32 	%r17331, %r17325, %r17324, 23;
	mov.b64 	%rd7743, {%r17331, %r17330};
	xor.b64  	%rd7744, %rd7742, %rd7743;
	xor.b64  	%rd7745, %rd7704, %rd7680;
	and.b64  	%rd7746, %rd7728, %rd7745;
	xor.b64  	%rd7747, %rd7746, %rd7680;
	add.s64 	%rd7748, %rd7656, %rd7489;
	add.s64 	%rd7749, %rd7748, %rd81;
	add.s64 	%rd7750, %rd7749, %rd7747;
	add.s64 	%rd7751, %rd7750, %rd7744;
	add.s64 	%rd7752, %rd7751, %rd7667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17332,%dummy}, %rd7739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17333}, %rd7739;
	}
	shf.r.wrap.b32 	%r17334, %r17333, %r17332, 28;
	shf.r.wrap.b32 	%r17335, %r17332, %r17333, 28;
	mov.b64 	%rd7753, {%r17335, %r17334};
	shf.l.wrap.b32 	%r17336, %r17332, %r17333, 30;
	shf.l.wrap.b32 	%r17337, %r17333, %r17332, 30;
	mov.b64 	%rd7754, {%r17337, %r17336};
	xor.b64  	%rd7755, %rd7754, %rd7753;
	shf.l.wrap.b32 	%r17338, %r17332, %r17333, 25;
	shf.l.wrap.b32 	%r17339, %r17333, %r17332, 25;
	mov.b64 	%rd7756, {%r17339, %r17338};
	xor.b64  	%rd7757, %rd7755, %rd7756;
	and.b64  	%rd7758, %rd7739, %rd7715;
	xor.b64  	%rd7759, %rd7739, %rd7715;
	and.b64  	%rd7760, %rd7759, %rd7691;
	or.b64  	%rd7761, %rd7760, %rd7758;
	add.s64 	%rd7762, %rd7751, %rd7761;
	add.s64 	%rd7763, %rd7762, %rd7757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17340,%dummy}, %rd7752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17341}, %rd7752;
	}
	shf.r.wrap.b32 	%r17342, %r17341, %r17340, 14;
	shf.r.wrap.b32 	%r17343, %r17340, %r17341, 14;
	mov.b64 	%rd7764, {%r17343, %r17342};
	shf.r.wrap.b32 	%r17344, %r17341, %r17340, 18;
	shf.r.wrap.b32 	%r17345, %r17340, %r17341, 18;
	mov.b64 	%rd7765, {%r17345, %r17344};
	xor.b64  	%rd7766, %rd7765, %rd7764;
	shf.l.wrap.b32 	%r17346, %r17340, %r17341, 23;
	shf.l.wrap.b32 	%r17347, %r17341, %r17340, 23;
	mov.b64 	%rd7767, {%r17347, %r17346};
	xor.b64  	%rd7768, %rd7766, %rd7767;
	xor.b64  	%rd7769, %rd7728, %rd7704;
	and.b64  	%rd7770, %rd7752, %rd7769;
	xor.b64  	%rd7771, %rd7770, %rd7704;
	add.s64 	%rd7772, %rd7680, %rd7502;
	add.s64 	%rd7773, %rd7772, %rd82;
	add.s64 	%rd7774, %rd7773, %rd7771;
	add.s64 	%rd7775, %rd7774, %rd7768;
	add.s64 	%rd7776, %rd7775, %rd7691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17348,%dummy}, %rd7763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17349}, %rd7763;
	}
	shf.r.wrap.b32 	%r17350, %r17349, %r17348, 28;
	shf.r.wrap.b32 	%r17351, %r17348, %r17349, 28;
	mov.b64 	%rd7777, {%r17351, %r17350};
	shf.l.wrap.b32 	%r17352, %r17348, %r17349, 30;
	shf.l.wrap.b32 	%r17353, %r17349, %r17348, 30;
	mov.b64 	%rd7778, {%r17353, %r17352};
	xor.b64  	%rd7779, %rd7778, %rd7777;
	shf.l.wrap.b32 	%r17354, %r17348, %r17349, 25;
	shf.l.wrap.b32 	%r17355, %r17349, %r17348, 25;
	mov.b64 	%rd7780, {%r17355, %r17354};
	xor.b64  	%rd7781, %rd7779, %rd7780;
	and.b64  	%rd7782, %rd7763, %rd7739;
	xor.b64  	%rd7783, %rd7763, %rd7739;
	and.b64  	%rd7784, %rd7783, %rd7715;
	or.b64  	%rd7785, %rd7784, %rd7782;
	add.s64 	%rd7786, %rd7775, %rd7785;
	add.s64 	%rd7787, %rd7786, %rd7781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17356,%dummy}, %rd7776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17357}, %rd7776;
	}
	shf.r.wrap.b32 	%r17358, %r17357, %r17356, 14;
	shf.r.wrap.b32 	%r17359, %r17356, %r17357, 14;
	mov.b64 	%rd7788, {%r17359, %r17358};
	shf.r.wrap.b32 	%r17360, %r17357, %r17356, 18;
	shf.r.wrap.b32 	%r17361, %r17356, %r17357, 18;
	mov.b64 	%rd7789, {%r17361, %r17360};
	xor.b64  	%rd7790, %rd7789, %rd7788;
	shf.l.wrap.b32 	%r17362, %r17356, %r17357, 23;
	shf.l.wrap.b32 	%r17363, %r17357, %r17356, 23;
	mov.b64 	%rd7791, {%r17363, %r17362};
	xor.b64  	%rd7792, %rd7790, %rd7791;
	xor.b64  	%rd7793, %rd7752, %rd7728;
	and.b64  	%rd7794, %rd7776, %rd7793;
	xor.b64  	%rd7795, %rd7794, %rd7728;
	add.s64 	%rd7796, %rd7704, %rd7515;
	add.s64 	%rd7797, %rd7796, %rd83;
	add.s64 	%rd7798, %rd7797, %rd7795;
	add.s64 	%rd7799, %rd7798, %rd7792;
	add.s64 	%rd7800, %rd7799, %rd7715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17364,%dummy}, %rd7787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17365}, %rd7787;
	}
	shf.r.wrap.b32 	%r17366, %r17365, %r17364, 28;
	shf.r.wrap.b32 	%r17367, %r17364, %r17365, 28;
	mov.b64 	%rd7801, {%r17367, %r17366};
	shf.l.wrap.b32 	%r17368, %r17364, %r17365, 30;
	shf.l.wrap.b32 	%r17369, %r17365, %r17364, 30;
	mov.b64 	%rd7802, {%r17369, %r17368};
	xor.b64  	%rd7803, %rd7802, %rd7801;
	shf.l.wrap.b32 	%r17370, %r17364, %r17365, 25;
	shf.l.wrap.b32 	%r17371, %r17365, %r17364, 25;
	mov.b64 	%rd7804, {%r17371, %r17370};
	xor.b64  	%rd7805, %rd7803, %rd7804;
	and.b64  	%rd7806, %rd7787, %rd7763;
	xor.b64  	%rd7807, %rd7787, %rd7763;
	and.b64  	%rd7808, %rd7807, %rd7739;
	or.b64  	%rd7809, %rd7808, %rd7806;
	add.s64 	%rd7810, %rd7799, %rd7809;
	add.s64 	%rd7811, %rd7810, %rd7805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17372,%dummy}, %rd7800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17373}, %rd7800;
	}
	shf.r.wrap.b32 	%r17374, %r17373, %r17372, 14;
	shf.r.wrap.b32 	%r17375, %r17372, %r17373, 14;
	mov.b64 	%rd7812, {%r17375, %r17374};
	shf.r.wrap.b32 	%r17376, %r17373, %r17372, 18;
	shf.r.wrap.b32 	%r17377, %r17372, %r17373, 18;
	mov.b64 	%rd7813, {%r17377, %r17376};
	xor.b64  	%rd7814, %rd7813, %rd7812;
	shf.l.wrap.b32 	%r17378, %r17372, %r17373, 23;
	shf.l.wrap.b32 	%r17379, %r17373, %r17372, 23;
	mov.b64 	%rd7815, {%r17379, %r17378};
	xor.b64  	%rd7816, %rd7814, %rd7815;
	xor.b64  	%rd7817, %rd7776, %rd7752;
	and.b64  	%rd7818, %rd7800, %rd7817;
	xor.b64  	%rd7819, %rd7818, %rd7752;
	add.s64 	%rd7820, %rd7728, %rd7528;
	add.s64 	%rd7821, %rd7820, %rd84;
	add.s64 	%rd7822, %rd7821, %rd7819;
	add.s64 	%rd7823, %rd7822, %rd7816;
	add.s64 	%rd7824, %rd7823, %rd7739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17380,%dummy}, %rd7811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17381}, %rd7811;
	}
	shf.r.wrap.b32 	%r17382, %r17381, %r17380, 28;
	shf.r.wrap.b32 	%r17383, %r17380, %r17381, 28;
	mov.b64 	%rd7825, {%r17383, %r17382};
	shf.l.wrap.b32 	%r17384, %r17380, %r17381, 30;
	shf.l.wrap.b32 	%r17385, %r17381, %r17380, 30;
	mov.b64 	%rd7826, {%r17385, %r17384};
	xor.b64  	%rd7827, %rd7826, %rd7825;
	shf.l.wrap.b32 	%r17386, %r17380, %r17381, 25;
	shf.l.wrap.b32 	%r17387, %r17381, %r17380, 25;
	mov.b64 	%rd7828, {%r17387, %r17386};
	xor.b64  	%rd7829, %rd7827, %rd7828;
	and.b64  	%rd7830, %rd7811, %rd7787;
	xor.b64  	%rd7831, %rd7811, %rd7787;
	and.b64  	%rd7832, %rd7831, %rd7763;
	or.b64  	%rd7833, %rd7832, %rd7830;
	add.s64 	%rd7834, %rd7823, %rd7833;
	add.s64 	%rd7835, %rd7834, %rd7829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17388,%dummy}, %rd7824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17389}, %rd7824;
	}
	shf.r.wrap.b32 	%r17390, %r17389, %r17388, 14;
	shf.r.wrap.b32 	%r17391, %r17388, %r17389, 14;
	mov.b64 	%rd7836, {%r17391, %r17390};
	shf.r.wrap.b32 	%r17392, %r17389, %r17388, 18;
	shf.r.wrap.b32 	%r17393, %r17388, %r17389, 18;
	mov.b64 	%rd7837, {%r17393, %r17392};
	xor.b64  	%rd7838, %rd7837, %rd7836;
	shf.l.wrap.b32 	%r17394, %r17388, %r17389, 23;
	shf.l.wrap.b32 	%r17395, %r17389, %r17388, 23;
	mov.b64 	%rd7839, {%r17395, %r17394};
	xor.b64  	%rd7840, %rd7838, %rd7839;
	xor.b64  	%rd7841, %rd7800, %rd7776;
	and.b64  	%rd7842, %rd7824, %rd7841;
	xor.b64  	%rd7843, %rd7842, %rd7776;
	add.s64 	%rd7844, %rd7752, %rd7541;
	add.s64 	%rd7845, %rd7844, %rd85;
	add.s64 	%rd7846, %rd7845, %rd7843;
	add.s64 	%rd7847, %rd7846, %rd7840;
	add.s64 	%rd7848, %rd7847, %rd7763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17396,%dummy}, %rd7835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17397}, %rd7835;
	}
	shf.r.wrap.b32 	%r17398, %r17397, %r17396, 28;
	shf.r.wrap.b32 	%r17399, %r17396, %r17397, 28;
	mov.b64 	%rd7849, {%r17399, %r17398};
	shf.l.wrap.b32 	%r17400, %r17396, %r17397, 30;
	shf.l.wrap.b32 	%r17401, %r17397, %r17396, 30;
	mov.b64 	%rd7850, {%r17401, %r17400};
	xor.b64  	%rd7851, %rd7850, %rd7849;
	shf.l.wrap.b32 	%r17402, %r17396, %r17397, 25;
	shf.l.wrap.b32 	%r17403, %r17397, %r17396, 25;
	mov.b64 	%rd7852, {%r17403, %r17402};
	xor.b64  	%rd7853, %rd7851, %rd7852;
	and.b64  	%rd7854, %rd7835, %rd7811;
	xor.b64  	%rd7855, %rd7835, %rd7811;
	and.b64  	%rd7856, %rd7855, %rd7787;
	or.b64  	%rd7857, %rd7856, %rd7854;
	add.s64 	%rd7858, %rd7847, %rd7857;
	add.s64 	%rd7859, %rd7858, %rd7853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17404,%dummy}, %rd7848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17405}, %rd7848;
	}
	shf.r.wrap.b32 	%r17406, %r17405, %r17404, 14;
	shf.r.wrap.b32 	%r17407, %r17404, %r17405, 14;
	mov.b64 	%rd7860, {%r17407, %r17406};
	shf.r.wrap.b32 	%r17408, %r17405, %r17404, 18;
	shf.r.wrap.b32 	%r17409, %r17404, %r17405, 18;
	mov.b64 	%rd7861, {%r17409, %r17408};
	xor.b64  	%rd7862, %rd7861, %rd7860;
	shf.l.wrap.b32 	%r17410, %r17404, %r17405, 23;
	shf.l.wrap.b32 	%r17411, %r17405, %r17404, 23;
	mov.b64 	%rd7863, {%r17411, %r17410};
	xor.b64  	%rd7864, %rd7862, %rd7863;
	xor.b64  	%rd7865, %rd7824, %rd7800;
	and.b64  	%rd7866, %rd7848, %rd7865;
	xor.b64  	%rd7867, %rd7866, %rd7800;
	add.s64 	%rd7868, %rd7776, %rd7554;
	add.s64 	%rd7869, %rd7868, %rd86;
	add.s64 	%rd7870, %rd7869, %rd7867;
	add.s64 	%rd7871, %rd7870, %rd7864;
	add.s64 	%rd7872, %rd7871, %rd7787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17412,%dummy}, %rd7859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17413}, %rd7859;
	}
	shf.r.wrap.b32 	%r17414, %r17413, %r17412, 28;
	shf.r.wrap.b32 	%r17415, %r17412, %r17413, 28;
	mov.b64 	%rd7873, {%r17415, %r17414};
	shf.l.wrap.b32 	%r17416, %r17412, %r17413, 30;
	shf.l.wrap.b32 	%r17417, %r17413, %r17412, 30;
	mov.b64 	%rd7874, {%r17417, %r17416};
	xor.b64  	%rd7875, %rd7874, %rd7873;
	shf.l.wrap.b32 	%r17418, %r17412, %r17413, 25;
	shf.l.wrap.b32 	%r17419, %r17413, %r17412, 25;
	mov.b64 	%rd7876, {%r17419, %r17418};
	xor.b64  	%rd7877, %rd7875, %rd7876;
	and.b64  	%rd7878, %rd7859, %rd7835;
	xor.b64  	%rd7879, %rd7859, %rd7835;
	and.b64  	%rd7880, %rd7879, %rd7811;
	or.b64  	%rd7881, %rd7880, %rd7878;
	add.s64 	%rd7882, %rd7871, %rd7881;
	add.s64 	%rd7883, %rd7882, %rd7877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17420,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17421}, %rd7872;
	}
	shf.r.wrap.b32 	%r17422, %r17421, %r17420, 14;
	shf.r.wrap.b32 	%r17423, %r17420, %r17421, 14;
	mov.b64 	%rd7884, {%r17423, %r17422};
	shf.r.wrap.b32 	%r17424, %r17421, %r17420, 18;
	shf.r.wrap.b32 	%r17425, %r17420, %r17421, 18;
	mov.b64 	%rd7885, {%r17425, %r17424};
	xor.b64  	%rd7886, %rd7885, %rd7884;
	shf.l.wrap.b32 	%r17426, %r17420, %r17421, 23;
	shf.l.wrap.b32 	%r17427, %r17421, %r17420, 23;
	mov.b64 	%rd7887, {%r17427, %r17426};
	xor.b64  	%rd7888, %rd7886, %rd7887;
	xor.b64  	%rd7889, %rd7848, %rd7824;
	and.b64  	%rd7890, %rd7872, %rd7889;
	xor.b64  	%rd7891, %rd7890, %rd7824;
	add.s64 	%rd7892, %rd7800, %rd7567;
	add.s64 	%rd7893, %rd7892, %rd87;
	add.s64 	%rd7894, %rd7893, %rd7891;
	add.s64 	%rd7895, %rd7894, %rd7888;
	add.s64 	%rd7896, %rd7895, %rd7811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17428,%dummy}, %rd7883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17429}, %rd7883;
	}
	shf.r.wrap.b32 	%r17430, %r17429, %r17428, 28;
	shf.r.wrap.b32 	%r17431, %r17428, %r17429, 28;
	mov.b64 	%rd7897, {%r17431, %r17430};
	shf.l.wrap.b32 	%r17432, %r17428, %r17429, 30;
	shf.l.wrap.b32 	%r17433, %r17429, %r17428, 30;
	mov.b64 	%rd7898, {%r17433, %r17432};
	xor.b64  	%rd7899, %rd7898, %rd7897;
	shf.l.wrap.b32 	%r17434, %r17428, %r17429, 25;
	shf.l.wrap.b32 	%r17435, %r17429, %r17428, 25;
	mov.b64 	%rd7900, {%r17435, %r17434};
	xor.b64  	%rd7901, %rd7899, %rd7900;
	and.b64  	%rd7902, %rd7883, %rd7859;
	xor.b64  	%rd7903, %rd7883, %rd7859;
	and.b64  	%rd7904, %rd7903, %rd7835;
	or.b64  	%rd7905, %rd7904, %rd7902;
	add.s64 	%rd7906, %rd7895, %rd7905;
	add.s64 	%rd7907, %rd7906, %rd7901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17436,%dummy}, %rd7896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17437}, %rd7896;
	}
	shf.r.wrap.b32 	%r17438, %r17437, %r17436, 14;
	shf.r.wrap.b32 	%r17439, %r17436, %r17437, 14;
	mov.b64 	%rd7908, {%r17439, %r17438};
	shf.r.wrap.b32 	%r17440, %r17437, %r17436, 18;
	shf.r.wrap.b32 	%r17441, %r17436, %r17437, 18;
	mov.b64 	%rd7909, {%r17441, %r17440};
	xor.b64  	%rd7910, %rd7909, %rd7908;
	shf.l.wrap.b32 	%r17442, %r17436, %r17437, 23;
	shf.l.wrap.b32 	%r17443, %r17437, %r17436, 23;
	mov.b64 	%rd7911, {%r17443, %r17442};
	xor.b64  	%rd7912, %rd7910, %rd7911;
	xor.b64  	%rd7913, %rd7872, %rd7848;
	and.b64  	%rd7914, %rd7896, %rd7913;
	xor.b64  	%rd7915, %rd7914, %rd7848;
	add.s64 	%rd7916, %rd7824, %rd7580;
	add.s64 	%rd7917, %rd7916, %rd88;
	add.s64 	%rd7918, %rd7917, %rd7915;
	add.s64 	%rd7919, %rd7918, %rd7912;
	add.s64 	%rd7920, %rd7919, %rd7835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17444,%dummy}, %rd7907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17445}, %rd7907;
	}
	shf.r.wrap.b32 	%r17446, %r17445, %r17444, 28;
	shf.r.wrap.b32 	%r17447, %r17444, %r17445, 28;
	mov.b64 	%rd7921, {%r17447, %r17446};
	shf.l.wrap.b32 	%r17448, %r17444, %r17445, 30;
	shf.l.wrap.b32 	%r17449, %r17445, %r17444, 30;
	mov.b64 	%rd7922, {%r17449, %r17448};
	xor.b64  	%rd7923, %rd7922, %rd7921;
	shf.l.wrap.b32 	%r17450, %r17444, %r17445, 25;
	shf.l.wrap.b32 	%r17451, %r17445, %r17444, 25;
	mov.b64 	%rd7924, {%r17451, %r17450};
	xor.b64  	%rd7925, %rd7923, %rd7924;
	and.b64  	%rd7926, %rd7907, %rd7883;
	xor.b64  	%rd7927, %rd7907, %rd7883;
	and.b64  	%rd7928, %rd7927, %rd7859;
	or.b64  	%rd7929, %rd7928, %rd7926;
	add.s64 	%rd7930, %rd7919, %rd7929;
	add.s64 	%rd7931, %rd7930, %rd7925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17452,%dummy}, %rd7920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17453}, %rd7920;
	}
	shf.r.wrap.b32 	%r17454, %r17453, %r17452, 14;
	shf.r.wrap.b32 	%r17455, %r17452, %r17453, 14;
	mov.b64 	%rd7932, {%r17455, %r17454};
	shf.r.wrap.b32 	%r17456, %r17453, %r17452, 18;
	shf.r.wrap.b32 	%r17457, %r17452, %r17453, 18;
	mov.b64 	%rd7933, {%r17457, %r17456};
	xor.b64  	%rd7934, %rd7933, %rd7932;
	shf.l.wrap.b32 	%r17458, %r17452, %r17453, 23;
	shf.l.wrap.b32 	%r17459, %r17453, %r17452, 23;
	mov.b64 	%rd7935, {%r17459, %r17458};
	xor.b64  	%rd7936, %rd7934, %rd7935;
	xor.b64  	%rd7937, %rd7896, %rd7872;
	and.b64  	%rd7938, %rd7920, %rd7937;
	xor.b64  	%rd7939, %rd7938, %rd7872;
	add.s64 	%rd7940, %rd7848, %rd7593;
	add.s64 	%rd7941, %rd7940, %rd89;
	add.s64 	%rd7942, %rd7941, %rd7939;
	add.s64 	%rd7943, %rd7942, %rd7936;
	add.s64 	%rd7944, %rd7943, %rd7859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17460,%dummy}, %rd7931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17461}, %rd7931;
	}
	shf.r.wrap.b32 	%r17462, %r17461, %r17460, 28;
	shf.r.wrap.b32 	%r17463, %r17460, %r17461, 28;
	mov.b64 	%rd7945, {%r17463, %r17462};
	shf.l.wrap.b32 	%r17464, %r17460, %r17461, 30;
	shf.l.wrap.b32 	%r17465, %r17461, %r17460, 30;
	mov.b64 	%rd7946, {%r17465, %r17464};
	xor.b64  	%rd7947, %rd7946, %rd7945;
	shf.l.wrap.b32 	%r17466, %r17460, %r17461, 25;
	shf.l.wrap.b32 	%r17467, %r17461, %r17460, 25;
	mov.b64 	%rd7948, {%r17467, %r17466};
	xor.b64  	%rd7949, %rd7947, %rd7948;
	and.b64  	%rd7950, %rd7931, %rd7907;
	xor.b64  	%rd7951, %rd7931, %rd7907;
	and.b64  	%rd7952, %rd7951, %rd7883;
	or.b64  	%rd7953, %rd7952, %rd7950;
	add.s64 	%rd7954, %rd7943, %rd7953;
	add.s64 	%rd7955, %rd7954, %rd7949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17468,%dummy}, %rd7944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17469}, %rd7944;
	}
	shf.r.wrap.b32 	%r17470, %r17469, %r17468, 14;
	shf.r.wrap.b32 	%r17471, %r17468, %r17469, 14;
	mov.b64 	%rd7956, {%r17471, %r17470};
	shf.r.wrap.b32 	%r17472, %r17469, %r17468, 18;
	shf.r.wrap.b32 	%r17473, %r17468, %r17469, 18;
	mov.b64 	%rd7957, {%r17473, %r17472};
	xor.b64  	%rd7958, %rd7957, %rd7956;
	shf.l.wrap.b32 	%r17474, %r17468, %r17469, 23;
	shf.l.wrap.b32 	%r17475, %r17469, %r17468, 23;
	mov.b64 	%rd7959, {%r17475, %r17474};
	xor.b64  	%rd7960, %rd7958, %rd7959;
	xor.b64  	%rd7961, %rd7920, %rd7896;
	and.b64  	%rd7962, %rd7944, %rd7961;
	xor.b64  	%rd7963, %rd7962, %rd7896;
	add.s64 	%rd7964, %rd7872, %rd7606;
	add.s64 	%rd7965, %rd7964, %rd90;
	add.s64 	%rd7966, %rd7965, %rd7963;
	add.s64 	%rd7967, %rd7966, %rd7960;
	add.s64 	%rd7968, %rd7967, %rd7883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17476,%dummy}, %rd7955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17477}, %rd7955;
	}
	shf.r.wrap.b32 	%r17478, %r17477, %r17476, 28;
	shf.r.wrap.b32 	%r17479, %r17476, %r17477, 28;
	mov.b64 	%rd7969, {%r17479, %r17478};
	shf.l.wrap.b32 	%r17480, %r17476, %r17477, 30;
	shf.l.wrap.b32 	%r17481, %r17477, %r17476, 30;
	mov.b64 	%rd7970, {%r17481, %r17480};
	xor.b64  	%rd7971, %rd7970, %rd7969;
	shf.l.wrap.b32 	%r17482, %r17476, %r17477, 25;
	shf.l.wrap.b32 	%r17483, %r17477, %r17476, 25;
	mov.b64 	%rd7972, {%r17483, %r17482};
	xor.b64  	%rd7973, %rd7971, %rd7972;
	and.b64  	%rd7974, %rd7955, %rd7931;
	xor.b64  	%rd7975, %rd7955, %rd7931;
	and.b64  	%rd7976, %rd7975, %rd7907;
	or.b64  	%rd7977, %rd7976, %rd7974;
	add.s64 	%rd7978, %rd7967, %rd7977;
	add.s64 	%rd7979, %rd7978, %rd7973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17484,%dummy}, %rd7968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17485}, %rd7968;
	}
	shf.r.wrap.b32 	%r17486, %r17485, %r17484, 14;
	shf.r.wrap.b32 	%r17487, %r17484, %r17485, 14;
	mov.b64 	%rd7980, {%r17487, %r17486};
	shf.r.wrap.b32 	%r17488, %r17485, %r17484, 18;
	shf.r.wrap.b32 	%r17489, %r17484, %r17485, 18;
	mov.b64 	%rd7981, {%r17489, %r17488};
	xor.b64  	%rd7982, %rd7981, %rd7980;
	shf.l.wrap.b32 	%r17490, %r17484, %r17485, 23;
	shf.l.wrap.b32 	%r17491, %r17485, %r17484, 23;
	mov.b64 	%rd7983, {%r17491, %r17490};
	xor.b64  	%rd7984, %rd7982, %rd7983;
	xor.b64  	%rd7985, %rd7944, %rd7920;
	and.b64  	%rd7986, %rd7968, %rd7985;
	xor.b64  	%rd7987, %rd7986, %rd7920;
	add.s64 	%rd7988, %rd7896, %rd7619;
	add.s64 	%rd7989, %rd7988, %rd91;
	add.s64 	%rd7990, %rd7989, %rd7987;
	add.s64 	%rd7991, %rd7990, %rd7984;
	add.s64 	%rd7992, %rd7991, %rd7907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17492,%dummy}, %rd7979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17493}, %rd7979;
	}
	shf.r.wrap.b32 	%r17494, %r17493, %r17492, 28;
	shf.r.wrap.b32 	%r17495, %r17492, %r17493, 28;
	mov.b64 	%rd7993, {%r17495, %r17494};
	shf.l.wrap.b32 	%r17496, %r17492, %r17493, 30;
	shf.l.wrap.b32 	%r17497, %r17493, %r17492, 30;
	mov.b64 	%rd7994, {%r17497, %r17496};
	xor.b64  	%rd7995, %rd7994, %rd7993;
	shf.l.wrap.b32 	%r17498, %r17492, %r17493, 25;
	shf.l.wrap.b32 	%r17499, %r17493, %r17492, 25;
	mov.b64 	%rd7996, {%r17499, %r17498};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	and.b64  	%rd7998, %rd7979, %rd7955;
	xor.b64  	%rd7999, %rd7979, %rd7955;
	and.b64  	%rd8000, %rd7999, %rd7931;
	or.b64  	%rd8001, %rd8000, %rd7998;
	add.s64 	%rd8002, %rd7991, %rd8001;
	add.s64 	%rd8003, %rd8002, %rd7997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17500,%dummy}, %rd7606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17501}, %rd7606;
	}
	shf.r.wrap.b32 	%r17502, %r17501, %r17500, 19;
	shf.r.wrap.b32 	%r17503, %r17500, %r17501, 19;
	mov.b64 	%rd8004, {%r17503, %r17502};
	shf.l.wrap.b32 	%r17504, %r17500, %r17501, 3;
	shf.l.wrap.b32 	%r17505, %r17501, %r17500, 3;
	mov.b64 	%rd8005, {%r17505, %r17504};
	shr.u64 	%rd8006, %rd7606, 6;
	xor.b64  	%rd8007, %rd8004, %rd8006;
	xor.b64  	%rd8008, %rd8007, %rd8005;
	shf.r.wrap.b32 	%r17506, %r17115, %r17114, 1;
	shf.r.wrap.b32 	%r17507, %r17114, %r17115, 1;
	mov.b64 	%rd8009, {%r17507, %r17506};
	shf.r.wrap.b32 	%r17508, %r17115, %r17114, 8;
	shf.r.wrap.b32 	%r17509, %r17114, %r17115, 8;
	mov.b64 	%rd8010, {%r17509, %r17508};
	shr.u64 	%rd8011, %rd7437, 7;
	xor.b64  	%rd8012, %rd8009, %rd8011;
	xor.b64  	%rd8013, %rd8012, %rd8010;
	add.s64 	%rd8014, %rd7541, %rd7424;
	add.s64 	%rd8015, %rd8014, %rd8008;
	add.s64 	%rd8016, %rd8015, %rd8013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17510,%dummy}, %rd7619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17511}, %rd7619;
	}
	shf.r.wrap.b32 	%r17512, %r17511, %r17510, 19;
	shf.r.wrap.b32 	%r17513, %r17510, %r17511, 19;
	mov.b64 	%rd8017, {%r17513, %r17512};
	shf.l.wrap.b32 	%r17514, %r17510, %r17511, 3;
	shf.l.wrap.b32 	%r17515, %r17511, %r17510, 3;
	mov.b64 	%rd8018, {%r17515, %r17514};
	shr.u64 	%rd8019, %rd7619, 6;
	xor.b64  	%rd8020, %rd8017, %rd8019;
	xor.b64  	%rd8021, %rd8020, %rd8018;
	shf.r.wrap.b32 	%r17516, %r17125, %r17124, 1;
	shf.r.wrap.b32 	%r17517, %r17124, %r17125, 1;
	mov.b64 	%rd8022, {%r17517, %r17516};
	shf.r.wrap.b32 	%r17518, %r17125, %r17124, 8;
	shf.r.wrap.b32 	%r17519, %r17124, %r17125, 8;
	mov.b64 	%rd8023, {%r17519, %r17518};
	shr.u64 	%rd8024, %rd7450, 7;
	xor.b64  	%rd8025, %rd8022, %rd8024;
	xor.b64  	%rd8026, %rd8025, %rd8023;
	add.s64 	%rd8027, %rd7554, %rd7437;
	add.s64 	%rd8028, %rd8027, %rd8021;
	add.s64 	%rd8029, %rd8028, %rd8026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17520,%dummy}, %rd8016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17521}, %rd8016;
	}
	shf.r.wrap.b32 	%r17522, %r17521, %r17520, 19;
	shf.r.wrap.b32 	%r17523, %r17520, %r17521, 19;
	mov.b64 	%rd8030, {%r17523, %r17522};
	shf.l.wrap.b32 	%r17524, %r17520, %r17521, 3;
	shf.l.wrap.b32 	%r17525, %r17521, %r17520, 3;
	mov.b64 	%rd8031, {%r17525, %r17524};
	shr.u64 	%rd8032, %rd8016, 6;
	xor.b64  	%rd8033, %rd8030, %rd8032;
	xor.b64  	%rd8034, %rd8033, %rd8031;
	shf.r.wrap.b32 	%r17526, %r17135, %r17134, 1;
	shf.r.wrap.b32 	%r17527, %r17134, %r17135, 1;
	mov.b64 	%rd8035, {%r17527, %r17526};
	shf.r.wrap.b32 	%r17528, %r17135, %r17134, 8;
	shf.r.wrap.b32 	%r17529, %r17134, %r17135, 8;
	mov.b64 	%rd8036, {%r17529, %r17528};
	shr.u64 	%rd8037, %rd7463, 7;
	xor.b64  	%rd8038, %rd8035, %rd8037;
	xor.b64  	%rd8039, %rd8038, %rd8036;
	add.s64 	%rd8040, %rd7567, %rd7450;
	add.s64 	%rd8041, %rd8040, %rd8034;
	add.s64 	%rd8042, %rd8041, %rd8039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17530,%dummy}, %rd8029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17531}, %rd8029;
	}
	shf.r.wrap.b32 	%r17532, %r17531, %r17530, 19;
	shf.r.wrap.b32 	%r17533, %r17530, %r17531, 19;
	mov.b64 	%rd8043, {%r17533, %r17532};
	shf.l.wrap.b32 	%r17534, %r17530, %r17531, 3;
	shf.l.wrap.b32 	%r17535, %r17531, %r17530, 3;
	mov.b64 	%rd8044, {%r17535, %r17534};
	shr.u64 	%rd8045, %rd8029, 6;
	xor.b64  	%rd8046, %rd8043, %rd8045;
	xor.b64  	%rd8047, %rd8046, %rd8044;
	shf.r.wrap.b32 	%r17536, %r17145, %r17144, 1;
	shf.r.wrap.b32 	%r17537, %r17144, %r17145, 1;
	mov.b64 	%rd8048, {%r17537, %r17536};
	shf.r.wrap.b32 	%r17538, %r17145, %r17144, 8;
	shf.r.wrap.b32 	%r17539, %r17144, %r17145, 8;
	mov.b64 	%rd8049, {%r17539, %r17538};
	shr.u64 	%rd8050, %rd7476, 7;
	xor.b64  	%rd8051, %rd8048, %rd8050;
	xor.b64  	%rd8052, %rd8051, %rd8049;
	add.s64 	%rd8053, %rd7580, %rd7463;
	add.s64 	%rd8054, %rd8053, %rd8047;
	add.s64 	%rd8055, %rd8054, %rd8052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17540,%dummy}, %rd8042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17541}, %rd8042;
	}
	shf.r.wrap.b32 	%r17542, %r17541, %r17540, 19;
	shf.r.wrap.b32 	%r17543, %r17540, %r17541, 19;
	mov.b64 	%rd8056, {%r17543, %r17542};
	shf.l.wrap.b32 	%r17544, %r17540, %r17541, 3;
	shf.l.wrap.b32 	%r17545, %r17541, %r17540, 3;
	mov.b64 	%rd8057, {%r17545, %r17544};
	shr.u64 	%rd8058, %rd8042, 6;
	xor.b64  	%rd8059, %rd8056, %rd8058;
	xor.b64  	%rd8060, %rd8059, %rd8057;
	shf.r.wrap.b32 	%r17546, %r17155, %r17154, 1;
	shf.r.wrap.b32 	%r17547, %r17154, %r17155, 1;
	mov.b64 	%rd8061, {%r17547, %r17546};
	shf.r.wrap.b32 	%r17548, %r17155, %r17154, 8;
	shf.r.wrap.b32 	%r17549, %r17154, %r17155, 8;
	mov.b64 	%rd8062, {%r17549, %r17548};
	shr.u64 	%rd8063, %rd7489, 7;
	xor.b64  	%rd8064, %rd8061, %rd8063;
	xor.b64  	%rd8065, %rd8064, %rd8062;
	add.s64 	%rd8066, %rd7593, %rd7476;
	add.s64 	%rd8067, %rd8066, %rd8060;
	add.s64 	%rd8068, %rd8067, %rd8065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17550,%dummy}, %rd8055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17551}, %rd8055;
	}
	shf.r.wrap.b32 	%r17552, %r17551, %r17550, 19;
	shf.r.wrap.b32 	%r17553, %r17550, %r17551, 19;
	mov.b64 	%rd8069, {%r17553, %r17552};
	shf.l.wrap.b32 	%r17554, %r17550, %r17551, 3;
	shf.l.wrap.b32 	%r17555, %r17551, %r17550, 3;
	mov.b64 	%rd8070, {%r17555, %r17554};
	shr.u64 	%rd8071, %rd8055, 6;
	xor.b64  	%rd8072, %rd8069, %rd8071;
	xor.b64  	%rd8073, %rd8072, %rd8070;
	shf.r.wrap.b32 	%r17556, %r17165, %r17164, 1;
	shf.r.wrap.b32 	%r17557, %r17164, %r17165, 1;
	mov.b64 	%rd8074, {%r17557, %r17556};
	shf.r.wrap.b32 	%r17558, %r17165, %r17164, 8;
	shf.r.wrap.b32 	%r17559, %r17164, %r17165, 8;
	mov.b64 	%rd8075, {%r17559, %r17558};
	shr.u64 	%rd8076, %rd7502, 7;
	xor.b64  	%rd8077, %rd8074, %rd8076;
	xor.b64  	%rd8078, %rd8077, %rd8075;
	add.s64 	%rd8079, %rd7606, %rd7489;
	add.s64 	%rd8080, %rd8079, %rd8073;
	add.s64 	%rd8081, %rd8080, %rd8078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17560,%dummy}, %rd8068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17561}, %rd8068;
	}
	shf.r.wrap.b32 	%r17562, %r17561, %r17560, 19;
	shf.r.wrap.b32 	%r17563, %r17560, %r17561, 19;
	mov.b64 	%rd8082, {%r17563, %r17562};
	shf.l.wrap.b32 	%r17564, %r17560, %r17561, 3;
	shf.l.wrap.b32 	%r17565, %r17561, %r17560, 3;
	mov.b64 	%rd8083, {%r17565, %r17564};
	shr.u64 	%rd8084, %rd8068, 6;
	xor.b64  	%rd8085, %rd8082, %rd8084;
	xor.b64  	%rd8086, %rd8085, %rd8083;
	shf.r.wrap.b32 	%r17566, %r17175, %r17174, 1;
	shf.r.wrap.b32 	%r17567, %r17174, %r17175, 1;
	mov.b64 	%rd8087, {%r17567, %r17566};
	shf.r.wrap.b32 	%r17568, %r17175, %r17174, 8;
	shf.r.wrap.b32 	%r17569, %r17174, %r17175, 8;
	mov.b64 	%rd8088, {%r17569, %r17568};
	shr.u64 	%rd8089, %rd7515, 7;
	xor.b64  	%rd8090, %rd8087, %rd8089;
	xor.b64  	%rd8091, %rd8090, %rd8088;
	add.s64 	%rd8092, %rd7619, %rd7502;
	add.s64 	%rd8093, %rd8092, %rd8086;
	add.s64 	%rd8094, %rd8093, %rd8091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17570,%dummy}, %rd8081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17571}, %rd8081;
	}
	shf.r.wrap.b32 	%r17572, %r17571, %r17570, 19;
	shf.r.wrap.b32 	%r17573, %r17570, %r17571, 19;
	mov.b64 	%rd8095, {%r17573, %r17572};
	shf.l.wrap.b32 	%r17574, %r17570, %r17571, 3;
	shf.l.wrap.b32 	%r17575, %r17571, %r17570, 3;
	mov.b64 	%rd8096, {%r17575, %r17574};
	shr.u64 	%rd8097, %rd8081, 6;
	xor.b64  	%rd8098, %rd8095, %rd8097;
	xor.b64  	%rd8099, %rd8098, %rd8096;
	shf.r.wrap.b32 	%r17576, %r17185, %r17184, 1;
	shf.r.wrap.b32 	%r17577, %r17184, %r17185, 1;
	mov.b64 	%rd8100, {%r17577, %r17576};
	shf.r.wrap.b32 	%r17578, %r17185, %r17184, 8;
	shf.r.wrap.b32 	%r17579, %r17184, %r17185, 8;
	mov.b64 	%rd8101, {%r17579, %r17578};
	shr.u64 	%rd8102, %rd7528, 7;
	xor.b64  	%rd8103, %rd8100, %rd8102;
	xor.b64  	%rd8104, %rd8103, %rd8101;
	add.s64 	%rd8105, %rd8016, %rd7515;
	add.s64 	%rd8106, %rd8105, %rd8099;
	add.s64 	%rd8107, %rd8106, %rd8104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17580,%dummy}, %rd8094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17581}, %rd8094;
	}
	shf.r.wrap.b32 	%r17582, %r17581, %r17580, 19;
	shf.r.wrap.b32 	%r17583, %r17580, %r17581, 19;
	mov.b64 	%rd8108, {%r17583, %r17582};
	shf.l.wrap.b32 	%r17584, %r17580, %r17581, 3;
	shf.l.wrap.b32 	%r17585, %r17581, %r17580, 3;
	mov.b64 	%rd8109, {%r17585, %r17584};
	shr.u64 	%rd8110, %rd8094, 6;
	xor.b64  	%rd8111, %rd8108, %rd8110;
	xor.b64  	%rd8112, %rd8111, %rd8109;
	shf.r.wrap.b32 	%r17586, %r17195, %r17194, 1;
	shf.r.wrap.b32 	%r17587, %r17194, %r17195, 1;
	mov.b64 	%rd8113, {%r17587, %r17586};
	shf.r.wrap.b32 	%r17588, %r17195, %r17194, 8;
	shf.r.wrap.b32 	%r17589, %r17194, %r17195, 8;
	mov.b64 	%rd8114, {%r17589, %r17588};
	shr.u64 	%rd8115, %rd7541, 7;
	xor.b64  	%rd8116, %rd8113, %rd8115;
	xor.b64  	%rd8117, %rd8116, %rd8114;
	add.s64 	%rd8118, %rd8029, %rd7528;
	add.s64 	%rd8119, %rd8118, %rd8112;
	add.s64 	%rd8120, %rd8119, %rd8117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17590,%dummy}, %rd8107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17591}, %rd8107;
	}
	shf.r.wrap.b32 	%r17592, %r17591, %r17590, 19;
	shf.r.wrap.b32 	%r17593, %r17590, %r17591, 19;
	mov.b64 	%rd8121, {%r17593, %r17592};
	shf.l.wrap.b32 	%r17594, %r17590, %r17591, 3;
	shf.l.wrap.b32 	%r17595, %r17591, %r17590, 3;
	mov.b64 	%rd8122, {%r17595, %r17594};
	shr.u64 	%rd8123, %rd8107, 6;
	xor.b64  	%rd8124, %rd8121, %rd8123;
	xor.b64  	%rd8125, %rd8124, %rd8122;
	shf.r.wrap.b32 	%r17596, %r17205, %r17204, 1;
	shf.r.wrap.b32 	%r17597, %r17204, %r17205, 1;
	mov.b64 	%rd8126, {%r17597, %r17596};
	shf.r.wrap.b32 	%r17598, %r17205, %r17204, 8;
	shf.r.wrap.b32 	%r17599, %r17204, %r17205, 8;
	mov.b64 	%rd8127, {%r17599, %r17598};
	shr.u64 	%rd8128, %rd7554, 7;
	xor.b64  	%rd8129, %rd8126, %rd8128;
	xor.b64  	%rd8130, %rd8129, %rd8127;
	add.s64 	%rd8131, %rd8042, %rd7541;
	add.s64 	%rd8132, %rd8131, %rd8125;
	add.s64 	%rd8133, %rd8132, %rd8130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17600,%dummy}, %rd8120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17601}, %rd8120;
	}
	shf.r.wrap.b32 	%r17602, %r17601, %r17600, 19;
	shf.r.wrap.b32 	%r17603, %r17600, %r17601, 19;
	mov.b64 	%rd8134, {%r17603, %r17602};
	shf.l.wrap.b32 	%r17604, %r17600, %r17601, 3;
	shf.l.wrap.b32 	%r17605, %r17601, %r17600, 3;
	mov.b64 	%rd8135, {%r17605, %r17604};
	shr.u64 	%rd8136, %rd8120, 6;
	xor.b64  	%rd8137, %rd8134, %rd8136;
	xor.b64  	%rd8138, %rd8137, %rd8135;
	shf.r.wrap.b32 	%r17606, %r17215, %r17214, 1;
	shf.r.wrap.b32 	%r17607, %r17214, %r17215, 1;
	mov.b64 	%rd8139, {%r17607, %r17606};
	shf.r.wrap.b32 	%r17608, %r17215, %r17214, 8;
	shf.r.wrap.b32 	%r17609, %r17214, %r17215, 8;
	mov.b64 	%rd8140, {%r17609, %r17608};
	shr.u64 	%rd8141, %rd7567, 7;
	xor.b64  	%rd8142, %rd8139, %rd8141;
	xor.b64  	%rd8143, %rd8142, %rd8140;
	add.s64 	%rd8144, %rd8055, %rd7554;
	add.s64 	%rd8145, %rd8144, %rd8138;
	add.s64 	%rd8146, %rd8145, %rd8143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17610,%dummy}, %rd8133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17611}, %rd8133;
	}
	shf.r.wrap.b32 	%r17612, %r17611, %r17610, 19;
	shf.r.wrap.b32 	%r17613, %r17610, %r17611, 19;
	mov.b64 	%rd8147, {%r17613, %r17612};
	shf.l.wrap.b32 	%r17614, %r17610, %r17611, 3;
	shf.l.wrap.b32 	%r17615, %r17611, %r17610, 3;
	mov.b64 	%rd8148, {%r17615, %r17614};
	shr.u64 	%rd8149, %rd8133, 6;
	xor.b64  	%rd8150, %rd8147, %rd8149;
	xor.b64  	%rd8151, %rd8150, %rd8148;
	shf.r.wrap.b32 	%r17616, %r17225, %r17224, 1;
	shf.r.wrap.b32 	%r17617, %r17224, %r17225, 1;
	mov.b64 	%rd8152, {%r17617, %r17616};
	shf.r.wrap.b32 	%r17618, %r17225, %r17224, 8;
	shf.r.wrap.b32 	%r17619, %r17224, %r17225, 8;
	mov.b64 	%rd8153, {%r17619, %r17618};
	shr.u64 	%rd8154, %rd7580, 7;
	xor.b64  	%rd8155, %rd8152, %rd8154;
	xor.b64  	%rd8156, %rd8155, %rd8153;
	add.s64 	%rd8157, %rd8068, %rd7567;
	add.s64 	%rd8158, %rd8157, %rd8151;
	add.s64 	%rd8159, %rd8158, %rd8156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17620,%dummy}, %rd8146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17621}, %rd8146;
	}
	shf.r.wrap.b32 	%r17622, %r17621, %r17620, 19;
	shf.r.wrap.b32 	%r17623, %r17620, %r17621, 19;
	mov.b64 	%rd8160, {%r17623, %r17622};
	shf.l.wrap.b32 	%r17624, %r17620, %r17621, 3;
	shf.l.wrap.b32 	%r17625, %r17621, %r17620, 3;
	mov.b64 	%rd8161, {%r17625, %r17624};
	shr.u64 	%rd8162, %rd8146, 6;
	xor.b64  	%rd8163, %rd8160, %rd8162;
	xor.b64  	%rd8164, %rd8163, %rd8161;
	shf.r.wrap.b32 	%r17626, %r17235, %r17234, 1;
	shf.r.wrap.b32 	%r17627, %r17234, %r17235, 1;
	mov.b64 	%rd8165, {%r17627, %r17626};
	shf.r.wrap.b32 	%r17628, %r17235, %r17234, 8;
	shf.r.wrap.b32 	%r17629, %r17234, %r17235, 8;
	mov.b64 	%rd8166, {%r17629, %r17628};
	shr.u64 	%rd8167, %rd7593, 7;
	xor.b64  	%rd8168, %rd8165, %rd8167;
	xor.b64  	%rd8169, %rd8168, %rd8166;
	add.s64 	%rd8170, %rd8081, %rd7580;
	add.s64 	%rd8171, %rd8170, %rd8164;
	add.s64 	%rd8172, %rd8171, %rd8169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17630,%dummy}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17631}, %rd8159;
	}
	shf.r.wrap.b32 	%r17632, %r17631, %r17630, 19;
	shf.r.wrap.b32 	%r17633, %r17630, %r17631, 19;
	mov.b64 	%rd8173, {%r17633, %r17632};
	shf.l.wrap.b32 	%r17634, %r17630, %r17631, 3;
	shf.l.wrap.b32 	%r17635, %r17631, %r17630, 3;
	mov.b64 	%rd8174, {%r17635, %r17634};
	shr.u64 	%rd8175, %rd8159, 6;
	xor.b64  	%rd8176, %rd8173, %rd8175;
	xor.b64  	%rd8177, %rd8176, %rd8174;
	shf.r.wrap.b32 	%r17636, %r17501, %r17500, 1;
	shf.r.wrap.b32 	%r17637, %r17500, %r17501, 1;
	mov.b64 	%rd8178, {%r17637, %r17636};
	shf.r.wrap.b32 	%r17638, %r17501, %r17500, 8;
	shf.r.wrap.b32 	%r17639, %r17500, %r17501, 8;
	mov.b64 	%rd8179, {%r17639, %r17638};
	shr.u64 	%rd8180, %rd7606, 7;
	xor.b64  	%rd8181, %rd8178, %rd8180;
	xor.b64  	%rd8182, %rd8181, %rd8179;
	add.s64 	%rd8183, %rd8094, %rd7593;
	add.s64 	%rd8184, %rd8183, %rd8177;
	add.s64 	%rd8185, %rd8184, %rd8182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17640,%dummy}, %rd8172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17641}, %rd8172;
	}
	shf.r.wrap.b32 	%r17642, %r17641, %r17640, 19;
	shf.r.wrap.b32 	%r17643, %r17640, %r17641, 19;
	mov.b64 	%rd8186, {%r17643, %r17642};
	shf.l.wrap.b32 	%r17644, %r17640, %r17641, 3;
	shf.l.wrap.b32 	%r17645, %r17641, %r17640, 3;
	mov.b64 	%rd8187, {%r17645, %r17644};
	shr.u64 	%rd8188, %rd8172, 6;
	xor.b64  	%rd8189, %rd8186, %rd8188;
	xor.b64  	%rd8190, %rd8189, %rd8187;
	shf.r.wrap.b32 	%r17646, %r17511, %r17510, 1;
	shf.r.wrap.b32 	%r17647, %r17510, %r17511, 1;
	mov.b64 	%rd8191, {%r17647, %r17646};
	shf.r.wrap.b32 	%r17648, %r17511, %r17510, 8;
	shf.r.wrap.b32 	%r17649, %r17510, %r17511, 8;
	mov.b64 	%rd8192, {%r17649, %r17648};
	shr.u64 	%rd8193, %rd7619, 7;
	xor.b64  	%rd8194, %rd8191, %rd8193;
	xor.b64  	%rd8195, %rd8194, %rd8192;
	add.s64 	%rd8196, %rd8107, %rd7606;
	add.s64 	%rd8197, %rd8196, %rd8190;
	add.s64 	%rd8198, %rd8197, %rd8195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17650,%dummy}, %rd8185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17651}, %rd8185;
	}
	shf.r.wrap.b32 	%r17652, %r17651, %r17650, 19;
	shf.r.wrap.b32 	%r17653, %r17650, %r17651, 19;
	mov.b64 	%rd8199, {%r17653, %r17652};
	shf.l.wrap.b32 	%r17654, %r17650, %r17651, 3;
	shf.l.wrap.b32 	%r17655, %r17651, %r17650, 3;
	mov.b64 	%rd8200, {%r17655, %r17654};
	shr.u64 	%rd8201, %rd8185, 6;
	xor.b64  	%rd8202, %rd8199, %rd8201;
	xor.b64  	%rd8203, %rd8202, %rd8200;
	shf.r.wrap.b32 	%r17656, %r17521, %r17520, 1;
	shf.r.wrap.b32 	%r17657, %r17520, %r17521, 1;
	mov.b64 	%rd8204, {%r17657, %r17656};
	shf.r.wrap.b32 	%r17658, %r17521, %r17520, 8;
	shf.r.wrap.b32 	%r17659, %r17520, %r17521, 8;
	mov.b64 	%rd8205, {%r17659, %r17658};
	shr.u64 	%rd8206, %rd8016, 7;
	xor.b64  	%rd8207, %rd8204, %rd8206;
	xor.b64  	%rd8208, %rd8207, %rd8205;
	add.s64 	%rd8209, %rd8120, %rd7619;
	add.s64 	%rd8210, %rd8209, %rd8203;
	add.s64 	%rd8211, %rd8210, %rd8208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17660,%dummy}, %rd7992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17661}, %rd7992;
	}
	shf.r.wrap.b32 	%r17662, %r17661, %r17660, 14;
	shf.r.wrap.b32 	%r17663, %r17660, %r17661, 14;
	mov.b64 	%rd8212, {%r17663, %r17662};
	shf.r.wrap.b32 	%r17664, %r17661, %r17660, 18;
	shf.r.wrap.b32 	%r17665, %r17660, %r17661, 18;
	mov.b64 	%rd8213, {%r17665, %r17664};
	xor.b64  	%rd8214, %rd8213, %rd8212;
	shf.l.wrap.b32 	%r17666, %r17660, %r17661, 23;
	shf.l.wrap.b32 	%r17667, %r17661, %r17660, 23;
	mov.b64 	%rd8215, {%r17667, %r17666};
	xor.b64  	%rd8216, %rd8214, %rd8215;
	xor.b64  	%rd8217, %rd7968, %rd7944;
	and.b64  	%rd8218, %rd7992, %rd8217;
	xor.b64  	%rd8219, %rd8218, %rd7944;
	add.s64 	%rd8220, %rd8219, %rd7920;
	add.s64 	%rd8221, %rd8220, %rd8016;
	add.s64 	%rd8222, %rd8221, %rd92;
	add.s64 	%rd8223, %rd8222, %rd8216;
	add.s64 	%rd8224, %rd8223, %rd7931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17668,%dummy}, %rd8003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17669}, %rd8003;
	}
	shf.r.wrap.b32 	%r17670, %r17669, %r17668, 28;
	shf.r.wrap.b32 	%r17671, %r17668, %r17669, 28;
	mov.b64 	%rd8225, {%r17671, %r17670};
	shf.l.wrap.b32 	%r17672, %r17668, %r17669, 30;
	shf.l.wrap.b32 	%r17673, %r17669, %r17668, 30;
	mov.b64 	%rd8226, {%r17673, %r17672};
	xor.b64  	%rd8227, %rd8226, %rd8225;
	shf.l.wrap.b32 	%r17674, %r17668, %r17669, 25;
	shf.l.wrap.b32 	%r17675, %r17669, %r17668, 25;
	mov.b64 	%rd8228, {%r17675, %r17674};
	xor.b64  	%rd8229, %rd8227, %rd8228;
	and.b64  	%rd8230, %rd8003, %rd7979;
	xor.b64  	%rd8231, %rd8003, %rd7979;
	and.b64  	%rd8232, %rd8231, %rd7955;
	or.b64  	%rd8233, %rd8232, %rd8230;
	add.s64 	%rd8234, %rd8223, %rd8233;
	add.s64 	%rd8235, %rd8234, %rd8229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17676,%dummy}, %rd8224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17677}, %rd8224;
	}
	shf.r.wrap.b32 	%r17678, %r17677, %r17676, 14;
	shf.r.wrap.b32 	%r17679, %r17676, %r17677, 14;
	mov.b64 	%rd8236, {%r17679, %r17678};
	shf.r.wrap.b32 	%r17680, %r17677, %r17676, 18;
	shf.r.wrap.b32 	%r17681, %r17676, %r17677, 18;
	mov.b64 	%rd8237, {%r17681, %r17680};
	xor.b64  	%rd8238, %rd8237, %rd8236;
	shf.l.wrap.b32 	%r17682, %r17676, %r17677, 23;
	shf.l.wrap.b32 	%r17683, %r17677, %r17676, 23;
	mov.b64 	%rd8239, {%r17683, %r17682};
	xor.b64  	%rd8240, %rd8238, %rd8239;
	xor.b64  	%rd8241, %rd7992, %rd7968;
	and.b64  	%rd8242, %rd8224, %rd8241;
	xor.b64  	%rd8243, %rd8242, %rd7968;
	add.s64 	%rd8244, %rd8029, %rd7944;
	add.s64 	%rd8245, %rd8244, %rd93;
	add.s64 	%rd8246, %rd8245, %rd8243;
	add.s64 	%rd8247, %rd8246, %rd8240;
	add.s64 	%rd8248, %rd8247, %rd7955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17684,%dummy}, %rd8235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17685}, %rd8235;
	}
	shf.r.wrap.b32 	%r17686, %r17685, %r17684, 28;
	shf.r.wrap.b32 	%r17687, %r17684, %r17685, 28;
	mov.b64 	%rd8249, {%r17687, %r17686};
	shf.l.wrap.b32 	%r17688, %r17684, %r17685, 30;
	shf.l.wrap.b32 	%r17689, %r17685, %r17684, 30;
	mov.b64 	%rd8250, {%r17689, %r17688};
	xor.b64  	%rd8251, %rd8250, %rd8249;
	shf.l.wrap.b32 	%r17690, %r17684, %r17685, 25;
	shf.l.wrap.b32 	%r17691, %r17685, %r17684, 25;
	mov.b64 	%rd8252, {%r17691, %r17690};
	xor.b64  	%rd8253, %rd8251, %rd8252;
	and.b64  	%rd8254, %rd8235, %rd8003;
	xor.b64  	%rd8255, %rd8235, %rd8003;
	and.b64  	%rd8256, %rd8255, %rd7979;
	or.b64  	%rd8257, %rd8256, %rd8254;
	add.s64 	%rd8258, %rd8247, %rd8257;
	add.s64 	%rd8259, %rd8258, %rd8253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17692,%dummy}, %rd8248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17693}, %rd8248;
	}
	shf.r.wrap.b32 	%r17694, %r17693, %r17692, 14;
	shf.r.wrap.b32 	%r17695, %r17692, %r17693, 14;
	mov.b64 	%rd8260, {%r17695, %r17694};
	shf.r.wrap.b32 	%r17696, %r17693, %r17692, 18;
	shf.r.wrap.b32 	%r17697, %r17692, %r17693, 18;
	mov.b64 	%rd8261, {%r17697, %r17696};
	xor.b64  	%rd8262, %rd8261, %rd8260;
	shf.l.wrap.b32 	%r17698, %r17692, %r17693, 23;
	shf.l.wrap.b32 	%r17699, %r17693, %r17692, 23;
	mov.b64 	%rd8263, {%r17699, %r17698};
	xor.b64  	%rd8264, %rd8262, %rd8263;
	xor.b64  	%rd8265, %rd8224, %rd7992;
	and.b64  	%rd8266, %rd8248, %rd8265;
	xor.b64  	%rd8267, %rd8266, %rd7992;
	add.s64 	%rd8268, %rd8042, %rd7968;
	add.s64 	%rd8269, %rd8268, %rd94;
	add.s64 	%rd8270, %rd8269, %rd8267;
	add.s64 	%rd8271, %rd8270, %rd8264;
	add.s64 	%rd8272, %rd8271, %rd7979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17700,%dummy}, %rd8259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17701}, %rd8259;
	}
	shf.r.wrap.b32 	%r17702, %r17701, %r17700, 28;
	shf.r.wrap.b32 	%r17703, %r17700, %r17701, 28;
	mov.b64 	%rd8273, {%r17703, %r17702};
	shf.l.wrap.b32 	%r17704, %r17700, %r17701, 30;
	shf.l.wrap.b32 	%r17705, %r17701, %r17700, 30;
	mov.b64 	%rd8274, {%r17705, %r17704};
	xor.b64  	%rd8275, %rd8274, %rd8273;
	shf.l.wrap.b32 	%r17706, %r17700, %r17701, 25;
	shf.l.wrap.b32 	%r17707, %r17701, %r17700, 25;
	mov.b64 	%rd8276, {%r17707, %r17706};
	xor.b64  	%rd8277, %rd8275, %rd8276;
	and.b64  	%rd8278, %rd8259, %rd8235;
	xor.b64  	%rd8279, %rd8259, %rd8235;
	and.b64  	%rd8280, %rd8279, %rd8003;
	or.b64  	%rd8281, %rd8280, %rd8278;
	add.s64 	%rd8282, %rd8271, %rd8281;
	add.s64 	%rd8283, %rd8282, %rd8277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17708,%dummy}, %rd8272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17709}, %rd8272;
	}
	shf.r.wrap.b32 	%r17710, %r17709, %r17708, 14;
	shf.r.wrap.b32 	%r17711, %r17708, %r17709, 14;
	mov.b64 	%rd8284, {%r17711, %r17710};
	shf.r.wrap.b32 	%r17712, %r17709, %r17708, 18;
	shf.r.wrap.b32 	%r17713, %r17708, %r17709, 18;
	mov.b64 	%rd8285, {%r17713, %r17712};
	xor.b64  	%rd8286, %rd8285, %rd8284;
	shf.l.wrap.b32 	%r17714, %r17708, %r17709, 23;
	shf.l.wrap.b32 	%r17715, %r17709, %r17708, 23;
	mov.b64 	%rd8287, {%r17715, %r17714};
	xor.b64  	%rd8288, %rd8286, %rd8287;
	xor.b64  	%rd8289, %rd8248, %rd8224;
	and.b64  	%rd8290, %rd8272, %rd8289;
	xor.b64  	%rd8291, %rd8290, %rd8224;
	add.s64 	%rd8292, %rd8055, %rd7992;
	add.s64 	%rd8293, %rd8292, %rd95;
	add.s64 	%rd8294, %rd8293, %rd8291;
	add.s64 	%rd8295, %rd8294, %rd8288;
	add.s64 	%rd8296, %rd8295, %rd8003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17716,%dummy}, %rd8283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17717}, %rd8283;
	}
	shf.r.wrap.b32 	%r17718, %r17717, %r17716, 28;
	shf.r.wrap.b32 	%r17719, %r17716, %r17717, 28;
	mov.b64 	%rd8297, {%r17719, %r17718};
	shf.l.wrap.b32 	%r17720, %r17716, %r17717, 30;
	shf.l.wrap.b32 	%r17721, %r17717, %r17716, 30;
	mov.b64 	%rd8298, {%r17721, %r17720};
	xor.b64  	%rd8299, %rd8298, %rd8297;
	shf.l.wrap.b32 	%r17722, %r17716, %r17717, 25;
	shf.l.wrap.b32 	%r17723, %r17717, %r17716, 25;
	mov.b64 	%rd8300, {%r17723, %r17722};
	xor.b64  	%rd8301, %rd8299, %rd8300;
	and.b64  	%rd8302, %rd8283, %rd8259;
	xor.b64  	%rd8303, %rd8283, %rd8259;
	and.b64  	%rd8304, %rd8303, %rd8235;
	or.b64  	%rd8305, %rd8304, %rd8302;
	add.s64 	%rd8306, %rd8295, %rd8305;
	add.s64 	%rd8307, %rd8306, %rd8301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17724,%dummy}, %rd8296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17725}, %rd8296;
	}
	shf.r.wrap.b32 	%r17726, %r17725, %r17724, 14;
	shf.r.wrap.b32 	%r17727, %r17724, %r17725, 14;
	mov.b64 	%rd8308, {%r17727, %r17726};
	shf.r.wrap.b32 	%r17728, %r17725, %r17724, 18;
	shf.r.wrap.b32 	%r17729, %r17724, %r17725, 18;
	mov.b64 	%rd8309, {%r17729, %r17728};
	xor.b64  	%rd8310, %rd8309, %rd8308;
	shf.l.wrap.b32 	%r17730, %r17724, %r17725, 23;
	shf.l.wrap.b32 	%r17731, %r17725, %r17724, 23;
	mov.b64 	%rd8311, {%r17731, %r17730};
	xor.b64  	%rd8312, %rd8310, %rd8311;
	xor.b64  	%rd8313, %rd8272, %rd8248;
	and.b64  	%rd8314, %rd8296, %rd8313;
	xor.b64  	%rd8315, %rd8314, %rd8248;
	add.s64 	%rd8316, %rd8224, %rd8068;
	add.s64 	%rd8317, %rd8316, %rd96;
	add.s64 	%rd8318, %rd8317, %rd8315;
	add.s64 	%rd8319, %rd8318, %rd8312;
	add.s64 	%rd8320, %rd8319, %rd8235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17732,%dummy}, %rd8307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17733}, %rd8307;
	}
	shf.r.wrap.b32 	%r17734, %r17733, %r17732, 28;
	shf.r.wrap.b32 	%r17735, %r17732, %r17733, 28;
	mov.b64 	%rd8321, {%r17735, %r17734};
	shf.l.wrap.b32 	%r17736, %r17732, %r17733, 30;
	shf.l.wrap.b32 	%r17737, %r17733, %r17732, 30;
	mov.b64 	%rd8322, {%r17737, %r17736};
	xor.b64  	%rd8323, %rd8322, %rd8321;
	shf.l.wrap.b32 	%r17738, %r17732, %r17733, 25;
	shf.l.wrap.b32 	%r17739, %r17733, %r17732, 25;
	mov.b64 	%rd8324, {%r17739, %r17738};
	xor.b64  	%rd8325, %rd8323, %rd8324;
	and.b64  	%rd8326, %rd8307, %rd8283;
	xor.b64  	%rd8327, %rd8307, %rd8283;
	and.b64  	%rd8328, %rd8327, %rd8259;
	or.b64  	%rd8329, %rd8328, %rd8326;
	add.s64 	%rd8330, %rd8319, %rd8329;
	add.s64 	%rd8331, %rd8330, %rd8325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17740,%dummy}, %rd8320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17741}, %rd8320;
	}
	shf.r.wrap.b32 	%r17742, %r17741, %r17740, 14;
	shf.r.wrap.b32 	%r17743, %r17740, %r17741, 14;
	mov.b64 	%rd8332, {%r17743, %r17742};
	shf.r.wrap.b32 	%r17744, %r17741, %r17740, 18;
	shf.r.wrap.b32 	%r17745, %r17740, %r17741, 18;
	mov.b64 	%rd8333, {%r17745, %r17744};
	xor.b64  	%rd8334, %rd8333, %rd8332;
	shf.l.wrap.b32 	%r17746, %r17740, %r17741, 23;
	shf.l.wrap.b32 	%r17747, %r17741, %r17740, 23;
	mov.b64 	%rd8335, {%r17747, %r17746};
	xor.b64  	%rd8336, %rd8334, %rd8335;
	xor.b64  	%rd8337, %rd8296, %rd8272;
	and.b64  	%rd8338, %rd8320, %rd8337;
	xor.b64  	%rd8339, %rd8338, %rd8272;
	add.s64 	%rd8340, %rd8248, %rd8081;
	add.s64 	%rd8341, %rd8340, %rd97;
	add.s64 	%rd8342, %rd8341, %rd8339;
	add.s64 	%rd8343, %rd8342, %rd8336;
	add.s64 	%rd8344, %rd8343, %rd8259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17748,%dummy}, %rd8331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17749}, %rd8331;
	}
	shf.r.wrap.b32 	%r17750, %r17749, %r17748, 28;
	shf.r.wrap.b32 	%r17751, %r17748, %r17749, 28;
	mov.b64 	%rd8345, {%r17751, %r17750};
	shf.l.wrap.b32 	%r17752, %r17748, %r17749, 30;
	shf.l.wrap.b32 	%r17753, %r17749, %r17748, 30;
	mov.b64 	%rd8346, {%r17753, %r17752};
	xor.b64  	%rd8347, %rd8346, %rd8345;
	shf.l.wrap.b32 	%r17754, %r17748, %r17749, 25;
	shf.l.wrap.b32 	%r17755, %r17749, %r17748, 25;
	mov.b64 	%rd8348, {%r17755, %r17754};
	xor.b64  	%rd8349, %rd8347, %rd8348;
	and.b64  	%rd8350, %rd8331, %rd8307;
	xor.b64  	%rd8351, %rd8331, %rd8307;
	and.b64  	%rd8352, %rd8351, %rd8283;
	or.b64  	%rd8353, %rd8352, %rd8350;
	add.s64 	%rd8354, %rd8343, %rd8353;
	add.s64 	%rd8355, %rd8354, %rd8349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17756,%dummy}, %rd8344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17757}, %rd8344;
	}
	shf.r.wrap.b32 	%r17758, %r17757, %r17756, 14;
	shf.r.wrap.b32 	%r17759, %r17756, %r17757, 14;
	mov.b64 	%rd8356, {%r17759, %r17758};
	shf.r.wrap.b32 	%r17760, %r17757, %r17756, 18;
	shf.r.wrap.b32 	%r17761, %r17756, %r17757, 18;
	mov.b64 	%rd8357, {%r17761, %r17760};
	xor.b64  	%rd8358, %rd8357, %rd8356;
	shf.l.wrap.b32 	%r17762, %r17756, %r17757, 23;
	shf.l.wrap.b32 	%r17763, %r17757, %r17756, 23;
	mov.b64 	%rd8359, {%r17763, %r17762};
	xor.b64  	%rd8360, %rd8358, %rd8359;
	xor.b64  	%rd8361, %rd8320, %rd8296;
	and.b64  	%rd8362, %rd8344, %rd8361;
	xor.b64  	%rd8363, %rd8362, %rd8296;
	add.s64 	%rd8364, %rd8272, %rd8094;
	add.s64 	%rd8365, %rd8364, %rd98;
	add.s64 	%rd8366, %rd8365, %rd8363;
	add.s64 	%rd8367, %rd8366, %rd8360;
	add.s64 	%rd8368, %rd8367, %rd8283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17764,%dummy}, %rd8355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17765}, %rd8355;
	}
	shf.r.wrap.b32 	%r17766, %r17765, %r17764, 28;
	shf.r.wrap.b32 	%r17767, %r17764, %r17765, 28;
	mov.b64 	%rd8369, {%r17767, %r17766};
	shf.l.wrap.b32 	%r17768, %r17764, %r17765, 30;
	shf.l.wrap.b32 	%r17769, %r17765, %r17764, 30;
	mov.b64 	%rd8370, {%r17769, %r17768};
	xor.b64  	%rd8371, %rd8370, %rd8369;
	shf.l.wrap.b32 	%r17770, %r17764, %r17765, 25;
	shf.l.wrap.b32 	%r17771, %r17765, %r17764, 25;
	mov.b64 	%rd8372, {%r17771, %r17770};
	xor.b64  	%rd8373, %rd8371, %rd8372;
	and.b64  	%rd8374, %rd8355, %rd8331;
	xor.b64  	%rd8375, %rd8355, %rd8331;
	and.b64  	%rd8376, %rd8375, %rd8307;
	or.b64  	%rd8377, %rd8376, %rd8374;
	add.s64 	%rd8378, %rd8367, %rd8377;
	add.s64 	%rd8379, %rd8378, %rd8373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17772,%dummy}, %rd8368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17773}, %rd8368;
	}
	shf.r.wrap.b32 	%r17774, %r17773, %r17772, 14;
	shf.r.wrap.b32 	%r17775, %r17772, %r17773, 14;
	mov.b64 	%rd8380, {%r17775, %r17774};
	shf.r.wrap.b32 	%r17776, %r17773, %r17772, 18;
	shf.r.wrap.b32 	%r17777, %r17772, %r17773, 18;
	mov.b64 	%rd8381, {%r17777, %r17776};
	xor.b64  	%rd8382, %rd8381, %rd8380;
	shf.l.wrap.b32 	%r17778, %r17772, %r17773, 23;
	shf.l.wrap.b32 	%r17779, %r17773, %r17772, 23;
	mov.b64 	%rd8383, {%r17779, %r17778};
	xor.b64  	%rd8384, %rd8382, %rd8383;
	xor.b64  	%rd8385, %rd8344, %rd8320;
	and.b64  	%rd8386, %rd8368, %rd8385;
	xor.b64  	%rd8387, %rd8386, %rd8320;
	add.s64 	%rd8388, %rd8296, %rd8107;
	add.s64 	%rd8389, %rd8388, %rd99;
	add.s64 	%rd8390, %rd8389, %rd8387;
	add.s64 	%rd8391, %rd8390, %rd8384;
	add.s64 	%rd8392, %rd8391, %rd8307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17780,%dummy}, %rd8379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17781}, %rd8379;
	}
	shf.r.wrap.b32 	%r17782, %r17781, %r17780, 28;
	shf.r.wrap.b32 	%r17783, %r17780, %r17781, 28;
	mov.b64 	%rd8393, {%r17783, %r17782};
	shf.l.wrap.b32 	%r17784, %r17780, %r17781, 30;
	shf.l.wrap.b32 	%r17785, %r17781, %r17780, 30;
	mov.b64 	%rd8394, {%r17785, %r17784};
	xor.b64  	%rd8395, %rd8394, %rd8393;
	shf.l.wrap.b32 	%r17786, %r17780, %r17781, 25;
	shf.l.wrap.b32 	%r17787, %r17781, %r17780, 25;
	mov.b64 	%rd8396, {%r17787, %r17786};
	xor.b64  	%rd8397, %rd8395, %rd8396;
	and.b64  	%rd8398, %rd8379, %rd8355;
	xor.b64  	%rd8399, %rd8379, %rd8355;
	and.b64  	%rd8400, %rd8399, %rd8331;
	or.b64  	%rd8401, %rd8400, %rd8398;
	add.s64 	%rd8402, %rd8391, %rd8401;
	add.s64 	%rd8403, %rd8402, %rd8397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17788,%dummy}, %rd8392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17789}, %rd8392;
	}
	shf.r.wrap.b32 	%r17790, %r17789, %r17788, 14;
	shf.r.wrap.b32 	%r17791, %r17788, %r17789, 14;
	mov.b64 	%rd8404, {%r17791, %r17790};
	shf.r.wrap.b32 	%r17792, %r17789, %r17788, 18;
	shf.r.wrap.b32 	%r17793, %r17788, %r17789, 18;
	mov.b64 	%rd8405, {%r17793, %r17792};
	xor.b64  	%rd8406, %rd8405, %rd8404;
	shf.l.wrap.b32 	%r17794, %r17788, %r17789, 23;
	shf.l.wrap.b32 	%r17795, %r17789, %r17788, 23;
	mov.b64 	%rd8407, {%r17795, %r17794};
	xor.b64  	%rd8408, %rd8406, %rd8407;
	xor.b64  	%rd8409, %rd8368, %rd8344;
	and.b64  	%rd8410, %rd8392, %rd8409;
	xor.b64  	%rd8411, %rd8410, %rd8344;
	add.s64 	%rd8412, %rd8320, %rd8120;
	add.s64 	%rd8413, %rd8412, %rd100;
	add.s64 	%rd8414, %rd8413, %rd8411;
	add.s64 	%rd8415, %rd8414, %rd8408;
	add.s64 	%rd8416, %rd8415, %rd8331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17796,%dummy}, %rd8403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17797}, %rd8403;
	}
	shf.r.wrap.b32 	%r17798, %r17797, %r17796, 28;
	shf.r.wrap.b32 	%r17799, %r17796, %r17797, 28;
	mov.b64 	%rd8417, {%r17799, %r17798};
	shf.l.wrap.b32 	%r17800, %r17796, %r17797, 30;
	shf.l.wrap.b32 	%r17801, %r17797, %r17796, 30;
	mov.b64 	%rd8418, {%r17801, %r17800};
	xor.b64  	%rd8419, %rd8418, %rd8417;
	shf.l.wrap.b32 	%r17802, %r17796, %r17797, 25;
	shf.l.wrap.b32 	%r17803, %r17797, %r17796, 25;
	mov.b64 	%rd8420, {%r17803, %r17802};
	xor.b64  	%rd8421, %rd8419, %rd8420;
	and.b64  	%rd8422, %rd8403, %rd8379;
	xor.b64  	%rd8423, %rd8403, %rd8379;
	and.b64  	%rd8424, %rd8423, %rd8355;
	or.b64  	%rd8425, %rd8424, %rd8422;
	add.s64 	%rd8426, %rd8415, %rd8425;
	add.s64 	%rd8427, %rd8426, %rd8421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17804,%dummy}, %rd8416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17805}, %rd8416;
	}
	shf.r.wrap.b32 	%r17806, %r17805, %r17804, 14;
	shf.r.wrap.b32 	%r17807, %r17804, %r17805, 14;
	mov.b64 	%rd8428, {%r17807, %r17806};
	shf.r.wrap.b32 	%r17808, %r17805, %r17804, 18;
	shf.r.wrap.b32 	%r17809, %r17804, %r17805, 18;
	mov.b64 	%rd8429, {%r17809, %r17808};
	xor.b64  	%rd8430, %rd8429, %rd8428;
	shf.l.wrap.b32 	%r17810, %r17804, %r17805, 23;
	shf.l.wrap.b32 	%r17811, %r17805, %r17804, 23;
	mov.b64 	%rd8431, {%r17811, %r17810};
	xor.b64  	%rd8432, %rd8430, %rd8431;
	xor.b64  	%rd8433, %rd8392, %rd8368;
	and.b64  	%rd8434, %rd8416, %rd8433;
	xor.b64  	%rd8435, %rd8434, %rd8368;
	add.s64 	%rd8436, %rd8344, %rd8133;
	add.s64 	%rd8437, %rd8436, %rd101;
	add.s64 	%rd8438, %rd8437, %rd8435;
	add.s64 	%rd8439, %rd8438, %rd8432;
	add.s64 	%rd8440, %rd8439, %rd8355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17812,%dummy}, %rd8427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17813}, %rd8427;
	}
	shf.r.wrap.b32 	%r17814, %r17813, %r17812, 28;
	shf.r.wrap.b32 	%r17815, %r17812, %r17813, 28;
	mov.b64 	%rd8441, {%r17815, %r17814};
	shf.l.wrap.b32 	%r17816, %r17812, %r17813, 30;
	shf.l.wrap.b32 	%r17817, %r17813, %r17812, 30;
	mov.b64 	%rd8442, {%r17817, %r17816};
	xor.b64  	%rd8443, %rd8442, %rd8441;
	shf.l.wrap.b32 	%r17818, %r17812, %r17813, 25;
	shf.l.wrap.b32 	%r17819, %r17813, %r17812, 25;
	mov.b64 	%rd8444, {%r17819, %r17818};
	xor.b64  	%rd8445, %rd8443, %rd8444;
	and.b64  	%rd8446, %rd8427, %rd8403;
	xor.b64  	%rd8447, %rd8427, %rd8403;
	and.b64  	%rd8448, %rd8447, %rd8379;
	or.b64  	%rd8449, %rd8448, %rd8446;
	add.s64 	%rd8450, %rd8439, %rd8449;
	add.s64 	%rd8451, %rd8450, %rd8445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17820,%dummy}, %rd8440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17821}, %rd8440;
	}
	shf.r.wrap.b32 	%r17822, %r17821, %r17820, 14;
	shf.r.wrap.b32 	%r17823, %r17820, %r17821, 14;
	mov.b64 	%rd8452, {%r17823, %r17822};
	shf.r.wrap.b32 	%r17824, %r17821, %r17820, 18;
	shf.r.wrap.b32 	%r17825, %r17820, %r17821, 18;
	mov.b64 	%rd8453, {%r17825, %r17824};
	xor.b64  	%rd8454, %rd8453, %rd8452;
	shf.l.wrap.b32 	%r17826, %r17820, %r17821, 23;
	shf.l.wrap.b32 	%r17827, %r17821, %r17820, 23;
	mov.b64 	%rd8455, {%r17827, %r17826};
	xor.b64  	%rd8456, %rd8454, %rd8455;
	xor.b64  	%rd8457, %rd8416, %rd8392;
	and.b64  	%rd8458, %rd8440, %rd8457;
	xor.b64  	%rd8459, %rd8458, %rd8392;
	add.s64 	%rd8460, %rd8368, %rd8146;
	add.s64 	%rd8461, %rd8460, %rd102;
	add.s64 	%rd8462, %rd8461, %rd8459;
	add.s64 	%rd8463, %rd8462, %rd8456;
	add.s64 	%rd8464, %rd8463, %rd8379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17828,%dummy}, %rd8451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17829}, %rd8451;
	}
	shf.r.wrap.b32 	%r17830, %r17829, %r17828, 28;
	shf.r.wrap.b32 	%r17831, %r17828, %r17829, 28;
	mov.b64 	%rd8465, {%r17831, %r17830};
	shf.l.wrap.b32 	%r17832, %r17828, %r17829, 30;
	shf.l.wrap.b32 	%r17833, %r17829, %r17828, 30;
	mov.b64 	%rd8466, {%r17833, %r17832};
	xor.b64  	%rd8467, %rd8466, %rd8465;
	shf.l.wrap.b32 	%r17834, %r17828, %r17829, 25;
	shf.l.wrap.b32 	%r17835, %r17829, %r17828, 25;
	mov.b64 	%rd8468, {%r17835, %r17834};
	xor.b64  	%rd8469, %rd8467, %rd8468;
	and.b64  	%rd8470, %rd8451, %rd8427;
	xor.b64  	%rd8471, %rd8451, %rd8427;
	and.b64  	%rd8472, %rd8471, %rd8403;
	or.b64  	%rd8473, %rd8472, %rd8470;
	add.s64 	%rd8474, %rd8463, %rd8473;
	add.s64 	%rd8475, %rd8474, %rd8469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17836,%dummy}, %rd8464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17837}, %rd8464;
	}
	shf.r.wrap.b32 	%r17838, %r17837, %r17836, 14;
	shf.r.wrap.b32 	%r17839, %r17836, %r17837, 14;
	mov.b64 	%rd8476, {%r17839, %r17838};
	shf.r.wrap.b32 	%r17840, %r17837, %r17836, 18;
	shf.r.wrap.b32 	%r17841, %r17836, %r17837, 18;
	mov.b64 	%rd8477, {%r17841, %r17840};
	xor.b64  	%rd8478, %rd8477, %rd8476;
	shf.l.wrap.b32 	%r17842, %r17836, %r17837, 23;
	shf.l.wrap.b32 	%r17843, %r17837, %r17836, 23;
	mov.b64 	%rd8479, {%r17843, %r17842};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	xor.b64  	%rd8481, %rd8440, %rd8416;
	and.b64  	%rd8482, %rd8464, %rd8481;
	xor.b64  	%rd8483, %rd8482, %rd8416;
	add.s64 	%rd8484, %rd8392, %rd8159;
	add.s64 	%rd8485, %rd8484, %rd103;
	add.s64 	%rd8486, %rd8485, %rd8483;
	add.s64 	%rd8487, %rd8486, %rd8480;
	add.s64 	%rd8488, %rd8487, %rd8403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17844,%dummy}, %rd8475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17845}, %rd8475;
	}
	shf.r.wrap.b32 	%r17846, %r17845, %r17844, 28;
	shf.r.wrap.b32 	%r17847, %r17844, %r17845, 28;
	mov.b64 	%rd8489, {%r17847, %r17846};
	shf.l.wrap.b32 	%r17848, %r17844, %r17845, 30;
	shf.l.wrap.b32 	%r17849, %r17845, %r17844, 30;
	mov.b64 	%rd8490, {%r17849, %r17848};
	xor.b64  	%rd8491, %rd8490, %rd8489;
	shf.l.wrap.b32 	%r17850, %r17844, %r17845, 25;
	shf.l.wrap.b32 	%r17851, %r17845, %r17844, 25;
	mov.b64 	%rd8492, {%r17851, %r17850};
	xor.b64  	%rd8493, %rd8491, %rd8492;
	and.b64  	%rd8494, %rd8475, %rd8451;
	xor.b64  	%rd8495, %rd8475, %rd8451;
	and.b64  	%rd8496, %rd8495, %rd8427;
	or.b64  	%rd8497, %rd8496, %rd8494;
	add.s64 	%rd8498, %rd8487, %rd8497;
	add.s64 	%rd8499, %rd8498, %rd8493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17852,%dummy}, %rd8488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17853}, %rd8488;
	}
	shf.r.wrap.b32 	%r17854, %r17853, %r17852, 14;
	shf.r.wrap.b32 	%r17855, %r17852, %r17853, 14;
	mov.b64 	%rd8500, {%r17855, %r17854};
	shf.r.wrap.b32 	%r17856, %r17853, %r17852, 18;
	shf.r.wrap.b32 	%r17857, %r17852, %r17853, 18;
	mov.b64 	%rd8501, {%r17857, %r17856};
	xor.b64  	%rd8502, %rd8501, %rd8500;
	shf.l.wrap.b32 	%r17858, %r17852, %r17853, 23;
	shf.l.wrap.b32 	%r17859, %r17853, %r17852, 23;
	mov.b64 	%rd8503, {%r17859, %r17858};
	xor.b64  	%rd8504, %rd8502, %rd8503;
	xor.b64  	%rd8505, %rd8464, %rd8440;
	and.b64  	%rd8506, %rd8488, %rd8505;
	xor.b64  	%rd8507, %rd8506, %rd8440;
	add.s64 	%rd8508, %rd8416, %rd8172;
	add.s64 	%rd8509, %rd8508, %rd104;
	add.s64 	%rd8510, %rd8509, %rd8507;
	add.s64 	%rd8511, %rd8510, %rd8504;
	add.s64 	%rd8512, %rd8511, %rd8427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17860,%dummy}, %rd8499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17861}, %rd8499;
	}
	shf.r.wrap.b32 	%r17862, %r17861, %r17860, 28;
	shf.r.wrap.b32 	%r17863, %r17860, %r17861, 28;
	mov.b64 	%rd8513, {%r17863, %r17862};
	shf.l.wrap.b32 	%r17864, %r17860, %r17861, 30;
	shf.l.wrap.b32 	%r17865, %r17861, %r17860, 30;
	mov.b64 	%rd8514, {%r17865, %r17864};
	xor.b64  	%rd8515, %rd8514, %rd8513;
	shf.l.wrap.b32 	%r17866, %r17860, %r17861, 25;
	shf.l.wrap.b32 	%r17867, %r17861, %r17860, 25;
	mov.b64 	%rd8516, {%r17867, %r17866};
	xor.b64  	%rd8517, %rd8515, %rd8516;
	and.b64  	%rd8518, %rd8499, %rd8475;
	xor.b64  	%rd8519, %rd8499, %rd8475;
	and.b64  	%rd8520, %rd8519, %rd8451;
	or.b64  	%rd8521, %rd8520, %rd8518;
	add.s64 	%rd8522, %rd8511, %rd8521;
	add.s64 	%rd8523, %rd8522, %rd8517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17868,%dummy}, %rd8512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17869}, %rd8512;
	}
	shf.r.wrap.b32 	%r17870, %r17869, %r17868, 14;
	shf.r.wrap.b32 	%r17871, %r17868, %r17869, 14;
	mov.b64 	%rd8524, {%r17871, %r17870};
	shf.r.wrap.b32 	%r17872, %r17869, %r17868, 18;
	shf.r.wrap.b32 	%r17873, %r17868, %r17869, 18;
	mov.b64 	%rd8525, {%r17873, %r17872};
	xor.b64  	%rd8526, %rd8525, %rd8524;
	shf.l.wrap.b32 	%r17874, %r17868, %r17869, 23;
	shf.l.wrap.b32 	%r17875, %r17869, %r17868, 23;
	mov.b64 	%rd8527, {%r17875, %r17874};
	xor.b64  	%rd8528, %rd8526, %rd8527;
	xor.b64  	%rd8529, %rd8488, %rd8464;
	and.b64  	%rd8530, %rd8512, %rd8529;
	xor.b64  	%rd8531, %rd8530, %rd8464;
	add.s64 	%rd8532, %rd8440, %rd8185;
	add.s64 	%rd8533, %rd8532, %rd105;
	add.s64 	%rd8534, %rd8533, %rd8531;
	add.s64 	%rd8535, %rd8534, %rd8528;
	add.s64 	%rd8536, %rd8535, %rd8451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17876,%dummy}, %rd8523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17877}, %rd8523;
	}
	shf.r.wrap.b32 	%r17878, %r17877, %r17876, 28;
	shf.r.wrap.b32 	%r17879, %r17876, %r17877, 28;
	mov.b64 	%rd8537, {%r17879, %r17878};
	shf.l.wrap.b32 	%r17880, %r17876, %r17877, 30;
	shf.l.wrap.b32 	%r17881, %r17877, %r17876, 30;
	mov.b64 	%rd8538, {%r17881, %r17880};
	xor.b64  	%rd8539, %rd8538, %rd8537;
	shf.l.wrap.b32 	%r17882, %r17876, %r17877, 25;
	shf.l.wrap.b32 	%r17883, %r17877, %r17876, 25;
	mov.b64 	%rd8540, {%r17883, %r17882};
	xor.b64  	%rd8541, %rd8539, %rd8540;
	and.b64  	%rd8542, %rd8523, %rd8499;
	xor.b64  	%rd8543, %rd8523, %rd8499;
	and.b64  	%rd8544, %rd8543, %rd8475;
	or.b64  	%rd8545, %rd8544, %rd8542;
	add.s64 	%rd8546, %rd8535, %rd8545;
	add.s64 	%rd8547, %rd8546, %rd8541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17884,%dummy}, %rd8536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17885}, %rd8536;
	}
	shf.r.wrap.b32 	%r17886, %r17885, %r17884, 14;
	shf.r.wrap.b32 	%r17887, %r17884, %r17885, 14;
	mov.b64 	%rd8548, {%r17887, %r17886};
	shf.r.wrap.b32 	%r17888, %r17885, %r17884, 18;
	shf.r.wrap.b32 	%r17889, %r17884, %r17885, 18;
	mov.b64 	%rd8549, {%r17889, %r17888};
	xor.b64  	%rd8550, %rd8549, %rd8548;
	shf.l.wrap.b32 	%r17890, %r17884, %r17885, 23;
	shf.l.wrap.b32 	%r17891, %r17885, %r17884, 23;
	mov.b64 	%rd8551, {%r17891, %r17890};
	xor.b64  	%rd8552, %rd8550, %rd8551;
	xor.b64  	%rd8553, %rd8512, %rd8488;
	and.b64  	%rd8554, %rd8536, %rd8553;
	xor.b64  	%rd8555, %rd8554, %rd8488;
	add.s64 	%rd8556, %rd8464, %rd8198;
	add.s64 	%rd8557, %rd8556, %rd106;
	add.s64 	%rd8558, %rd8557, %rd8555;
	add.s64 	%rd8559, %rd8558, %rd8552;
	add.s64 	%rd8560, %rd8559, %rd8475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17892,%dummy}, %rd8547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17893}, %rd8547;
	}
	shf.r.wrap.b32 	%r17894, %r17893, %r17892, 28;
	shf.r.wrap.b32 	%r17895, %r17892, %r17893, 28;
	mov.b64 	%rd8561, {%r17895, %r17894};
	shf.l.wrap.b32 	%r17896, %r17892, %r17893, 30;
	shf.l.wrap.b32 	%r17897, %r17893, %r17892, 30;
	mov.b64 	%rd8562, {%r17897, %r17896};
	xor.b64  	%rd8563, %rd8562, %rd8561;
	shf.l.wrap.b32 	%r17898, %r17892, %r17893, 25;
	shf.l.wrap.b32 	%r17899, %r17893, %r17892, 25;
	mov.b64 	%rd8564, {%r17899, %r17898};
	xor.b64  	%rd8565, %rd8563, %rd8564;
	and.b64  	%rd8566, %rd8547, %rd8523;
	xor.b64  	%rd8567, %rd8547, %rd8523;
	and.b64  	%rd8568, %rd8567, %rd8499;
	or.b64  	%rd8569, %rd8568, %rd8566;
	add.s64 	%rd8570, %rd8559, %rd8569;
	add.s64 	%rd8571, %rd8570, %rd8565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17900,%dummy}, %rd8560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17901}, %rd8560;
	}
	shf.r.wrap.b32 	%r17902, %r17901, %r17900, 14;
	shf.r.wrap.b32 	%r17903, %r17900, %r17901, 14;
	mov.b64 	%rd8572, {%r17903, %r17902};
	shf.r.wrap.b32 	%r17904, %r17901, %r17900, 18;
	shf.r.wrap.b32 	%r17905, %r17900, %r17901, 18;
	mov.b64 	%rd8573, {%r17905, %r17904};
	xor.b64  	%rd8574, %rd8573, %rd8572;
	shf.l.wrap.b32 	%r17906, %r17900, %r17901, 23;
	shf.l.wrap.b32 	%r17907, %r17901, %r17900, 23;
	mov.b64 	%rd8575, {%r17907, %r17906};
	xor.b64  	%rd8576, %rd8574, %rd8575;
	xor.b64  	%rd8577, %rd8536, %rd8512;
	and.b64  	%rd8578, %rd8560, %rd8577;
	xor.b64  	%rd8579, %rd8578, %rd8512;
	add.s64 	%rd8580, %rd8488, %rd8211;
	add.s64 	%rd8581, %rd8580, %rd107;
	add.s64 	%rd8582, %rd8581, %rd8579;
	add.s64 	%rd8583, %rd8582, %rd8576;
	add.s64 	%rd8584, %rd8583, %rd8499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17908,%dummy}, %rd8571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17909}, %rd8571;
	}
	shf.r.wrap.b32 	%r17910, %r17909, %r17908, 28;
	shf.r.wrap.b32 	%r17911, %r17908, %r17909, 28;
	mov.b64 	%rd8585, {%r17911, %r17910};
	shf.l.wrap.b32 	%r17912, %r17908, %r17909, 30;
	shf.l.wrap.b32 	%r17913, %r17909, %r17908, 30;
	mov.b64 	%rd8586, {%r17913, %r17912};
	xor.b64  	%rd8587, %rd8586, %rd8585;
	shf.l.wrap.b32 	%r17914, %r17908, %r17909, 25;
	shf.l.wrap.b32 	%r17915, %r17909, %r17908, 25;
	mov.b64 	%rd8588, {%r17915, %r17914};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	and.b64  	%rd8590, %rd8571, %rd8547;
	xor.b64  	%rd8591, %rd8571, %rd8547;
	and.b64  	%rd8592, %rd8591, %rd8523;
	or.b64  	%rd8593, %rd8592, %rd8590;
	add.s64 	%rd8594, %rd8583, %rd8593;
	add.s64 	%rd8595, %rd8594, %rd8589;
	add.s64 	%rd23216, %rd23216, %rd8595;
	st.local.u64 	[%rd9], %rd23216;
	add.s64 	%rd23215, %rd23215, %rd8571;
	st.local.u64 	[%rd9+8], %rd23215;
	add.s64 	%rd23214, %rd23214, %rd8547;
	st.local.u64 	[%rd9+16], %rd23214;
	add.s64 	%rd23213, %rd23213, %rd8523;
	st.local.u64 	[%rd9+24], %rd23213;
	add.s64 	%rd23212, %rd23212, %rd8584;
	st.local.u64 	[%rd9+32], %rd23212;
	add.s64 	%rd23211, %rd23211, %rd8560;
	st.local.u64 	[%rd9+40], %rd23211;
	add.s64 	%rd23210, %rd23210, %rd8536;
	st.local.u64 	[%rd9+48], %rd23210;
	add.s64 	%rd23209, %rd23209, %rd8512;
	st.local.u64 	[%rd9+56], %rd23209;
	mov.u32 	%r39355, 0;
	st.local.v2.u32 	[%rd9+64], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+72], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+80], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+88], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+96], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+104], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+112], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+120], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+128], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+136], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+144], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+152], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+160], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+168], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+176], {%r39355, %r39355};
	st.local.v2.u32 	[%rd9+184], {%r39355, %r39355};
	mov.u32 	%r39356, %r39355;
	mov.u32 	%r39357, %r39355;
	mov.u32 	%r39358, %r39355;
	mov.u32 	%r39359, %r39355;
	mov.u32 	%r39360, %r39355;
	mov.u32 	%r39361, %r39355;
	mov.u32 	%r39362, %r39355;
	mov.u32 	%r39363, %r39355;
	mov.u32 	%r39364, %r39355;
	mov.u32 	%r39365, %r39355;
	mov.u32 	%r39366, %r39355;
	mov.u32 	%r39367, %r39355;
	mov.u32 	%r39368, %r39355;
	mov.u32 	%r39369, %r39355;
	mov.u32 	%r39370, %r39355;
	mov.u32 	%r39371, %r39355;
	mov.u32 	%r39372, %r39355;
	mov.u32 	%r39373, %r39355;
	mov.u32 	%r39374, %r39355;
	mov.u32 	%r39375, %r39355;
	mov.u32 	%r39376, %r39355;
	mov.u32 	%r39377, %r39355;
	mov.u32 	%r39378, %r39355;
	mov.u32 	%r39379, %r39355;
	mov.u32 	%r39380, %r39355;
	mov.u32 	%r39381, %r39355;
	mov.u32 	%r39382, %r39355;
	mov.u32 	%r39383, %r39355;
	mov.u32 	%r39384, %r39355;

BB1_218:
	ld.param.u64 	%rd23208, [m11300_init_param_4];
	shl.b32 	%r17916, %r1854, 3;
	mov.u32 	%r17917, 0;
	st.local.v2.u32 	[%rd9+184], {%r17917, %r17916};
	mov.b64	%rd8596, {%r39383, %r39384};
	mov.b64	%rd8597, {%r39381, %r39382};
	mov.b64	%rd8598, {%r39379, %r39380};
	mov.b64	%rd8599, {%r39377, %r39378};
	mov.b64	%rd8600, {%r39375, %r39376};
	mov.b64	%rd8601, {%r39373, %r39374};
	mov.b64	%rd8602, {%r39371, %r39372};
	mov.b64	%rd8603, {%r39369, %r39370};
	mov.b64	%rd8604, {%r39367, %r39368};
	mov.b64	%rd8605, {%r39365, %r39366};
	mov.b64	%rd8606, {%r39363, %r39364};
	mov.b64	%rd8607, {%r39361, %r39362};
	mov.b64	%rd8608, {%r39359, %r39360};
	mov.b64	%rd8609, {%r39357, %r39358};
	mov.b64	%rd8610, {%r39355, %r39356};
	mov.b64	%rd8611, {%r17916, %r17917};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17918,%dummy}, %rd23212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17919}, %rd23212;
	}
	shf.r.wrap.b32 	%r17920, %r17919, %r17918, 18;
	shf.r.wrap.b32 	%r17921, %r17918, %r17919, 18;
	mov.b64 	%rd8612, {%r17921, %r17920};
	shf.r.wrap.b32 	%r17922, %r17919, %r17918, 14;
	shf.r.wrap.b32 	%r17923, %r17918, %r17919, 14;
	mov.b64 	%rd8613, {%r17923, %r17922};
	xor.b64  	%rd8614, %rd8612, %rd8613;
	shf.l.wrap.b32 	%r17924, %r17918, %r17919, 23;
	shf.l.wrap.b32 	%r17925, %r17919, %r17918, 23;
	mov.b64 	%rd8615, {%r17925, %r17924};
	xor.b64  	%rd8616, %rd8614, %rd8615;
	xor.b64  	%rd8617, %rd23210, %rd23211;
	and.b64  	%rd8618, %rd8617, %rd23212;
	xor.b64  	%rd8619, %rd8618, %rd23210;
	add.s64 	%rd8620, %rd8619, %rd23209;
	add.s64 	%rd8621, %rd8620, %rd8596;
	add.s64 	%rd8622, %rd8621, %rd28;
	add.s64 	%rd8623, %rd8622, %rd8616;
	add.s64 	%rd8624, %rd8623, %rd23213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17926}, %rd23216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17927,%dummy}, %rd23216;
	}
	shf.l.wrap.b32 	%r17928, %r17927, %r17926, 30;
	shf.l.wrap.b32 	%r17929, %r17926, %r17927, 30;
	mov.b64 	%rd8625, {%r17929, %r17928};
	shf.r.wrap.b32 	%r17930, %r17926, %r17927, 28;
	shf.r.wrap.b32 	%r17931, %r17927, %r17926, 28;
	mov.b64 	%rd8626, {%r17931, %r17930};
	xor.b64  	%rd8627, %rd8625, %rd8626;
	shf.l.wrap.b32 	%r17932, %r17927, %r17926, 25;
	shf.l.wrap.b32 	%r17933, %r17926, %r17927, 25;
	mov.b64 	%rd8628, {%r17933, %r17932};
	xor.b64  	%rd8629, %rd8627, %rd8628;
	xor.b64  	%rd8630, %rd23215, %rd23216;
	and.b64  	%rd8631, %rd23214, %rd8630;
	and.b64  	%rd8632, %rd23215, %rd23216;
	or.b64  	%rd8633, %rd8631, %rd8632;
	add.s64 	%rd8634, %rd8623, %rd8633;
	add.s64 	%rd8635, %rd8634, %rd8629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17934,%dummy}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17935}, %rd8624;
	}
	shf.r.wrap.b32 	%r17936, %r17935, %r17934, 14;
	shf.r.wrap.b32 	%r17937, %r17934, %r17935, 14;
	mov.b64 	%rd8636, {%r17937, %r17936};
	shf.r.wrap.b32 	%r17938, %r17935, %r17934, 18;
	shf.r.wrap.b32 	%r17939, %r17934, %r17935, 18;
	mov.b64 	%rd8637, {%r17939, %r17938};
	xor.b64  	%rd8638, %rd8637, %rd8636;
	shf.l.wrap.b32 	%r17940, %r17934, %r17935, 23;
	shf.l.wrap.b32 	%r17941, %r17935, %r17934, 23;
	mov.b64 	%rd8639, {%r17941, %r17940};
	xor.b64  	%rd8640, %rd8638, %rd8639;
	xor.b64  	%rd8641, %rd23211, %rd23212;
	and.b64  	%rd8642, %rd8624, %rd8641;
	xor.b64  	%rd8643, %rd8642, %rd23211;
	add.s64 	%rd8644, %rd8597, %rd23210;
	add.s64 	%rd8645, %rd8644, %rd29;
	add.s64 	%rd8646, %rd8645, %rd8643;
	add.s64 	%rd8647, %rd8646, %rd8640;
	add.s64 	%rd8648, %rd8647, %rd23214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17942,%dummy}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17943}, %rd8635;
	}
	shf.r.wrap.b32 	%r17944, %r17943, %r17942, 28;
	shf.r.wrap.b32 	%r17945, %r17942, %r17943, 28;
	mov.b64 	%rd8649, {%r17945, %r17944};
	shf.l.wrap.b32 	%r17946, %r17942, %r17943, 30;
	shf.l.wrap.b32 	%r17947, %r17943, %r17942, 30;
	mov.b64 	%rd8650, {%r17947, %r17946};
	xor.b64  	%rd8651, %rd8650, %rd8649;
	shf.l.wrap.b32 	%r17948, %r17942, %r17943, 25;
	shf.l.wrap.b32 	%r17949, %r17943, %r17942, 25;
	mov.b64 	%rd8652, {%r17949, %r17948};
	xor.b64  	%rd8653, %rd8651, %rd8652;
	and.b64  	%rd8654, %rd8635, %rd23216;
	xor.b64  	%rd8655, %rd8635, %rd23216;
	and.b64  	%rd8656, %rd8655, %rd23215;
	or.b64  	%rd8657, %rd8656, %rd8654;
	add.s64 	%rd8658, %rd8647, %rd8657;
	add.s64 	%rd8659, %rd8658, %rd8653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17950,%dummy}, %rd8648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17951}, %rd8648;
	}
	shf.r.wrap.b32 	%r17952, %r17951, %r17950, 14;
	shf.r.wrap.b32 	%r17953, %r17950, %r17951, 14;
	mov.b64 	%rd8660, {%r17953, %r17952};
	shf.r.wrap.b32 	%r17954, %r17951, %r17950, 18;
	shf.r.wrap.b32 	%r17955, %r17950, %r17951, 18;
	mov.b64 	%rd8661, {%r17955, %r17954};
	xor.b64  	%rd8662, %rd8661, %rd8660;
	shf.l.wrap.b32 	%r17956, %r17950, %r17951, 23;
	shf.l.wrap.b32 	%r17957, %r17951, %r17950, 23;
	mov.b64 	%rd8663, {%r17957, %r17956};
	xor.b64  	%rd8664, %rd8662, %rd8663;
	xor.b64  	%rd8665, %rd8624, %rd23212;
	and.b64  	%rd8666, %rd8648, %rd8665;
	xor.b64  	%rd8667, %rd8666, %rd23212;
	add.s64 	%rd8668, %rd8598, %rd23211;
	add.s64 	%rd8669, %rd8668, %rd30;
	add.s64 	%rd8670, %rd8669, %rd8667;
	add.s64 	%rd8671, %rd8670, %rd8664;
	add.s64 	%rd8672, %rd8671, %rd23215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17958,%dummy}, %rd8659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17959}, %rd8659;
	}
	shf.r.wrap.b32 	%r17960, %r17959, %r17958, 28;
	shf.r.wrap.b32 	%r17961, %r17958, %r17959, 28;
	mov.b64 	%rd8673, {%r17961, %r17960};
	shf.l.wrap.b32 	%r17962, %r17958, %r17959, 30;
	shf.l.wrap.b32 	%r17963, %r17959, %r17958, 30;
	mov.b64 	%rd8674, {%r17963, %r17962};
	xor.b64  	%rd8675, %rd8674, %rd8673;
	shf.l.wrap.b32 	%r17964, %r17958, %r17959, 25;
	shf.l.wrap.b32 	%r17965, %r17959, %r17958, 25;
	mov.b64 	%rd8676, {%r17965, %r17964};
	xor.b64  	%rd8677, %rd8675, %rd8676;
	and.b64  	%rd8678, %rd8659, %rd8635;
	xor.b64  	%rd8679, %rd8659, %rd8635;
	and.b64  	%rd8680, %rd8679, %rd23216;
	or.b64  	%rd8681, %rd8680, %rd8678;
	add.s64 	%rd8682, %rd8671, %rd8681;
	add.s64 	%rd8683, %rd8682, %rd8677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17966,%dummy}, %rd8672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17967}, %rd8672;
	}
	shf.r.wrap.b32 	%r17968, %r17967, %r17966, 14;
	shf.r.wrap.b32 	%r17969, %r17966, %r17967, 14;
	mov.b64 	%rd8684, {%r17969, %r17968};
	shf.r.wrap.b32 	%r17970, %r17967, %r17966, 18;
	shf.r.wrap.b32 	%r17971, %r17966, %r17967, 18;
	mov.b64 	%rd8685, {%r17971, %r17970};
	xor.b64  	%rd8686, %rd8685, %rd8684;
	shf.l.wrap.b32 	%r17972, %r17966, %r17967, 23;
	shf.l.wrap.b32 	%r17973, %r17967, %r17966, 23;
	mov.b64 	%rd8687, {%r17973, %r17972};
	xor.b64  	%rd8688, %rd8686, %rd8687;
	xor.b64  	%rd8689, %rd8648, %rd8624;
	and.b64  	%rd8690, %rd8672, %rd8689;
	xor.b64  	%rd8691, %rd8690, %rd8624;
	add.s64 	%rd8692, %rd8599, %rd23212;
	add.s64 	%rd8693, %rd8692, %rd31;
	add.s64 	%rd8694, %rd8693, %rd8691;
	add.s64 	%rd8695, %rd8694, %rd8688;
	add.s64 	%rd8696, %rd8695, %rd23216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17974,%dummy}, %rd8683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17975}, %rd8683;
	}
	shf.r.wrap.b32 	%r17976, %r17975, %r17974, 28;
	shf.r.wrap.b32 	%r17977, %r17974, %r17975, 28;
	mov.b64 	%rd8697, {%r17977, %r17976};
	shf.l.wrap.b32 	%r17978, %r17974, %r17975, 30;
	shf.l.wrap.b32 	%r17979, %r17975, %r17974, 30;
	mov.b64 	%rd8698, {%r17979, %r17978};
	xor.b64  	%rd8699, %rd8698, %rd8697;
	shf.l.wrap.b32 	%r17980, %r17974, %r17975, 25;
	shf.l.wrap.b32 	%r17981, %r17975, %r17974, 25;
	mov.b64 	%rd8700, {%r17981, %r17980};
	xor.b64  	%rd8701, %rd8699, %rd8700;
	and.b64  	%rd8702, %rd8683, %rd8659;
	xor.b64  	%rd8703, %rd8683, %rd8659;
	and.b64  	%rd8704, %rd8703, %rd8635;
	or.b64  	%rd8705, %rd8704, %rd8702;
	add.s64 	%rd8706, %rd8695, %rd8705;
	add.s64 	%rd8707, %rd8706, %rd8701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17982,%dummy}, %rd8696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17983}, %rd8696;
	}
	shf.r.wrap.b32 	%r17984, %r17983, %r17982, 14;
	shf.r.wrap.b32 	%r17985, %r17982, %r17983, 14;
	mov.b64 	%rd8708, {%r17985, %r17984};
	shf.r.wrap.b32 	%r17986, %r17983, %r17982, 18;
	shf.r.wrap.b32 	%r17987, %r17982, %r17983, 18;
	mov.b64 	%rd8709, {%r17987, %r17986};
	xor.b64  	%rd8710, %rd8709, %rd8708;
	shf.l.wrap.b32 	%r17988, %r17982, %r17983, 23;
	shf.l.wrap.b32 	%r17989, %r17983, %r17982, 23;
	mov.b64 	%rd8711, {%r17989, %r17988};
	xor.b64  	%rd8712, %rd8710, %rd8711;
	xor.b64  	%rd8713, %rd8672, %rd8648;
	and.b64  	%rd8714, %rd8696, %rd8713;
	xor.b64  	%rd8715, %rd8714, %rd8648;
	add.s64 	%rd8716, %rd8624, %rd8600;
	add.s64 	%rd8717, %rd8716, %rd32;
	add.s64 	%rd8718, %rd8717, %rd8715;
	add.s64 	%rd8719, %rd8718, %rd8712;
	add.s64 	%rd8720, %rd8719, %rd8635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17990,%dummy}, %rd8707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17991}, %rd8707;
	}
	shf.r.wrap.b32 	%r17992, %r17991, %r17990, 28;
	shf.r.wrap.b32 	%r17993, %r17990, %r17991, 28;
	mov.b64 	%rd8721, {%r17993, %r17992};
	shf.l.wrap.b32 	%r17994, %r17990, %r17991, 30;
	shf.l.wrap.b32 	%r17995, %r17991, %r17990, 30;
	mov.b64 	%rd8722, {%r17995, %r17994};
	xor.b64  	%rd8723, %rd8722, %rd8721;
	shf.l.wrap.b32 	%r17996, %r17990, %r17991, 25;
	shf.l.wrap.b32 	%r17997, %r17991, %r17990, 25;
	mov.b64 	%rd8724, {%r17997, %r17996};
	xor.b64  	%rd8725, %rd8723, %rd8724;
	and.b64  	%rd8726, %rd8707, %rd8683;
	xor.b64  	%rd8727, %rd8707, %rd8683;
	and.b64  	%rd8728, %rd8727, %rd8659;
	or.b64  	%rd8729, %rd8728, %rd8726;
	add.s64 	%rd8730, %rd8719, %rd8729;
	add.s64 	%rd8731, %rd8730, %rd8725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17998,%dummy}, %rd8720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17999}, %rd8720;
	}
	shf.r.wrap.b32 	%r18000, %r17999, %r17998, 14;
	shf.r.wrap.b32 	%r18001, %r17998, %r17999, 14;
	mov.b64 	%rd8732, {%r18001, %r18000};
	shf.r.wrap.b32 	%r18002, %r17999, %r17998, 18;
	shf.r.wrap.b32 	%r18003, %r17998, %r17999, 18;
	mov.b64 	%rd8733, {%r18003, %r18002};
	xor.b64  	%rd8734, %rd8733, %rd8732;
	shf.l.wrap.b32 	%r18004, %r17998, %r17999, 23;
	shf.l.wrap.b32 	%r18005, %r17999, %r17998, 23;
	mov.b64 	%rd8735, {%r18005, %r18004};
	xor.b64  	%rd8736, %rd8734, %rd8735;
	xor.b64  	%rd8737, %rd8696, %rd8672;
	and.b64  	%rd8738, %rd8720, %rd8737;
	xor.b64  	%rd8739, %rd8738, %rd8672;
	add.s64 	%rd8740, %rd8648, %rd8601;
	add.s64 	%rd8741, %rd8740, %rd33;
	add.s64 	%rd8742, %rd8741, %rd8739;
	add.s64 	%rd8743, %rd8742, %rd8736;
	add.s64 	%rd8744, %rd8743, %rd8659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18006,%dummy}, %rd8731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18007}, %rd8731;
	}
	shf.r.wrap.b32 	%r18008, %r18007, %r18006, 28;
	shf.r.wrap.b32 	%r18009, %r18006, %r18007, 28;
	mov.b64 	%rd8745, {%r18009, %r18008};
	shf.l.wrap.b32 	%r18010, %r18006, %r18007, 30;
	shf.l.wrap.b32 	%r18011, %r18007, %r18006, 30;
	mov.b64 	%rd8746, {%r18011, %r18010};
	xor.b64  	%rd8747, %rd8746, %rd8745;
	shf.l.wrap.b32 	%r18012, %r18006, %r18007, 25;
	shf.l.wrap.b32 	%r18013, %r18007, %r18006, 25;
	mov.b64 	%rd8748, {%r18013, %r18012};
	xor.b64  	%rd8749, %rd8747, %rd8748;
	and.b64  	%rd8750, %rd8731, %rd8707;
	xor.b64  	%rd8751, %rd8731, %rd8707;
	and.b64  	%rd8752, %rd8751, %rd8683;
	or.b64  	%rd8753, %rd8752, %rd8750;
	add.s64 	%rd8754, %rd8743, %rd8753;
	add.s64 	%rd8755, %rd8754, %rd8749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18014,%dummy}, %rd8744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18015}, %rd8744;
	}
	shf.r.wrap.b32 	%r18016, %r18015, %r18014, 14;
	shf.r.wrap.b32 	%r18017, %r18014, %r18015, 14;
	mov.b64 	%rd8756, {%r18017, %r18016};
	shf.r.wrap.b32 	%r18018, %r18015, %r18014, 18;
	shf.r.wrap.b32 	%r18019, %r18014, %r18015, 18;
	mov.b64 	%rd8757, {%r18019, %r18018};
	xor.b64  	%rd8758, %rd8757, %rd8756;
	shf.l.wrap.b32 	%r18020, %r18014, %r18015, 23;
	shf.l.wrap.b32 	%r18021, %r18015, %r18014, 23;
	mov.b64 	%rd8759, {%r18021, %r18020};
	xor.b64  	%rd8760, %rd8758, %rd8759;
	xor.b64  	%rd8761, %rd8720, %rd8696;
	and.b64  	%rd8762, %rd8744, %rd8761;
	xor.b64  	%rd8763, %rd8762, %rd8696;
	add.s64 	%rd8764, %rd8672, %rd8602;
	add.s64 	%rd8765, %rd8764, %rd34;
	add.s64 	%rd8766, %rd8765, %rd8763;
	add.s64 	%rd8767, %rd8766, %rd8760;
	add.s64 	%rd8768, %rd8767, %rd8683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18022,%dummy}, %rd8755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18023}, %rd8755;
	}
	shf.r.wrap.b32 	%r18024, %r18023, %r18022, 28;
	shf.r.wrap.b32 	%r18025, %r18022, %r18023, 28;
	mov.b64 	%rd8769, {%r18025, %r18024};
	shf.l.wrap.b32 	%r18026, %r18022, %r18023, 30;
	shf.l.wrap.b32 	%r18027, %r18023, %r18022, 30;
	mov.b64 	%rd8770, {%r18027, %r18026};
	xor.b64  	%rd8771, %rd8770, %rd8769;
	shf.l.wrap.b32 	%r18028, %r18022, %r18023, 25;
	shf.l.wrap.b32 	%r18029, %r18023, %r18022, 25;
	mov.b64 	%rd8772, {%r18029, %r18028};
	xor.b64  	%rd8773, %rd8771, %rd8772;
	and.b64  	%rd8774, %rd8755, %rd8731;
	xor.b64  	%rd8775, %rd8755, %rd8731;
	and.b64  	%rd8776, %rd8775, %rd8707;
	or.b64  	%rd8777, %rd8776, %rd8774;
	add.s64 	%rd8778, %rd8767, %rd8777;
	add.s64 	%rd8779, %rd8778, %rd8773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18030,%dummy}, %rd8768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18031}, %rd8768;
	}
	shf.r.wrap.b32 	%r18032, %r18031, %r18030, 14;
	shf.r.wrap.b32 	%r18033, %r18030, %r18031, 14;
	mov.b64 	%rd8780, {%r18033, %r18032};
	shf.r.wrap.b32 	%r18034, %r18031, %r18030, 18;
	shf.r.wrap.b32 	%r18035, %r18030, %r18031, 18;
	mov.b64 	%rd8781, {%r18035, %r18034};
	xor.b64  	%rd8782, %rd8781, %rd8780;
	shf.l.wrap.b32 	%r18036, %r18030, %r18031, 23;
	shf.l.wrap.b32 	%r18037, %r18031, %r18030, 23;
	mov.b64 	%rd8783, {%r18037, %r18036};
	xor.b64  	%rd8784, %rd8782, %rd8783;
	xor.b64  	%rd8785, %rd8744, %rd8720;
	and.b64  	%rd8786, %rd8768, %rd8785;
	xor.b64  	%rd8787, %rd8786, %rd8720;
	add.s64 	%rd8788, %rd8696, %rd8603;
	add.s64 	%rd8789, %rd8788, %rd35;
	add.s64 	%rd8790, %rd8789, %rd8787;
	add.s64 	%rd8791, %rd8790, %rd8784;
	add.s64 	%rd8792, %rd8791, %rd8707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18038,%dummy}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18039}, %rd8779;
	}
	shf.r.wrap.b32 	%r18040, %r18039, %r18038, 28;
	shf.r.wrap.b32 	%r18041, %r18038, %r18039, 28;
	mov.b64 	%rd8793, {%r18041, %r18040};
	shf.l.wrap.b32 	%r18042, %r18038, %r18039, 30;
	shf.l.wrap.b32 	%r18043, %r18039, %r18038, 30;
	mov.b64 	%rd8794, {%r18043, %r18042};
	xor.b64  	%rd8795, %rd8794, %rd8793;
	shf.l.wrap.b32 	%r18044, %r18038, %r18039, 25;
	shf.l.wrap.b32 	%r18045, %r18039, %r18038, 25;
	mov.b64 	%rd8796, {%r18045, %r18044};
	xor.b64  	%rd8797, %rd8795, %rd8796;
	and.b64  	%rd8798, %rd8779, %rd8755;
	xor.b64  	%rd8799, %rd8779, %rd8755;
	and.b64  	%rd8800, %rd8799, %rd8731;
	or.b64  	%rd8801, %rd8800, %rd8798;
	add.s64 	%rd8802, %rd8791, %rd8801;
	add.s64 	%rd8803, %rd8802, %rd8797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18046,%dummy}, %rd8792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18047}, %rd8792;
	}
	shf.r.wrap.b32 	%r18048, %r18047, %r18046, 14;
	shf.r.wrap.b32 	%r18049, %r18046, %r18047, 14;
	mov.b64 	%rd8804, {%r18049, %r18048};
	shf.r.wrap.b32 	%r18050, %r18047, %r18046, 18;
	shf.r.wrap.b32 	%r18051, %r18046, %r18047, 18;
	mov.b64 	%rd8805, {%r18051, %r18050};
	xor.b64  	%rd8806, %rd8805, %rd8804;
	shf.l.wrap.b32 	%r18052, %r18046, %r18047, 23;
	shf.l.wrap.b32 	%r18053, %r18047, %r18046, 23;
	mov.b64 	%rd8807, {%r18053, %r18052};
	xor.b64  	%rd8808, %rd8806, %rd8807;
	xor.b64  	%rd8809, %rd8768, %rd8744;
	and.b64  	%rd8810, %rd8792, %rd8809;
	xor.b64  	%rd8811, %rd8810, %rd8744;
	add.s64 	%rd8812, %rd8720, %rd8604;
	add.s64 	%rd8813, %rd8812, %rd36;
	add.s64 	%rd8814, %rd8813, %rd8811;
	add.s64 	%rd8815, %rd8814, %rd8808;
	add.s64 	%rd8816, %rd8815, %rd8731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18054,%dummy}, %rd8803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18055}, %rd8803;
	}
	shf.r.wrap.b32 	%r18056, %r18055, %r18054, 28;
	shf.r.wrap.b32 	%r18057, %r18054, %r18055, 28;
	mov.b64 	%rd8817, {%r18057, %r18056};
	shf.l.wrap.b32 	%r18058, %r18054, %r18055, 30;
	shf.l.wrap.b32 	%r18059, %r18055, %r18054, 30;
	mov.b64 	%rd8818, {%r18059, %r18058};
	xor.b64  	%rd8819, %rd8818, %rd8817;
	shf.l.wrap.b32 	%r18060, %r18054, %r18055, 25;
	shf.l.wrap.b32 	%r18061, %r18055, %r18054, 25;
	mov.b64 	%rd8820, {%r18061, %r18060};
	xor.b64  	%rd8821, %rd8819, %rd8820;
	and.b64  	%rd8822, %rd8803, %rd8779;
	xor.b64  	%rd8823, %rd8803, %rd8779;
	and.b64  	%rd8824, %rd8823, %rd8755;
	or.b64  	%rd8825, %rd8824, %rd8822;
	add.s64 	%rd8826, %rd8815, %rd8825;
	add.s64 	%rd8827, %rd8826, %rd8821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18062,%dummy}, %rd8816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18063}, %rd8816;
	}
	shf.r.wrap.b32 	%r18064, %r18063, %r18062, 14;
	shf.r.wrap.b32 	%r18065, %r18062, %r18063, 14;
	mov.b64 	%rd8828, {%r18065, %r18064};
	shf.r.wrap.b32 	%r18066, %r18063, %r18062, 18;
	shf.r.wrap.b32 	%r18067, %r18062, %r18063, 18;
	mov.b64 	%rd8829, {%r18067, %r18066};
	xor.b64  	%rd8830, %rd8829, %rd8828;
	shf.l.wrap.b32 	%r18068, %r18062, %r18063, 23;
	shf.l.wrap.b32 	%r18069, %r18063, %r18062, 23;
	mov.b64 	%rd8831, {%r18069, %r18068};
	xor.b64  	%rd8832, %rd8830, %rd8831;
	xor.b64  	%rd8833, %rd8792, %rd8768;
	and.b64  	%rd8834, %rd8816, %rd8833;
	xor.b64  	%rd8835, %rd8834, %rd8768;
	add.s64 	%rd8836, %rd8744, %rd8605;
	add.s64 	%rd8837, %rd8836, %rd37;
	add.s64 	%rd8838, %rd8837, %rd8835;
	add.s64 	%rd8839, %rd8838, %rd8832;
	add.s64 	%rd8840, %rd8839, %rd8755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18070,%dummy}, %rd8827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18071}, %rd8827;
	}
	shf.r.wrap.b32 	%r18072, %r18071, %r18070, 28;
	shf.r.wrap.b32 	%r18073, %r18070, %r18071, 28;
	mov.b64 	%rd8841, {%r18073, %r18072};
	shf.l.wrap.b32 	%r18074, %r18070, %r18071, 30;
	shf.l.wrap.b32 	%r18075, %r18071, %r18070, 30;
	mov.b64 	%rd8842, {%r18075, %r18074};
	xor.b64  	%rd8843, %rd8842, %rd8841;
	shf.l.wrap.b32 	%r18076, %r18070, %r18071, 25;
	shf.l.wrap.b32 	%r18077, %r18071, %r18070, 25;
	mov.b64 	%rd8844, {%r18077, %r18076};
	xor.b64  	%rd8845, %rd8843, %rd8844;
	and.b64  	%rd8846, %rd8827, %rd8803;
	xor.b64  	%rd8847, %rd8827, %rd8803;
	and.b64  	%rd8848, %rd8847, %rd8779;
	or.b64  	%rd8849, %rd8848, %rd8846;
	add.s64 	%rd8850, %rd8839, %rd8849;
	add.s64 	%rd8851, %rd8850, %rd8845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18078,%dummy}, %rd8840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18079}, %rd8840;
	}
	shf.r.wrap.b32 	%r18080, %r18079, %r18078, 14;
	shf.r.wrap.b32 	%r18081, %r18078, %r18079, 14;
	mov.b64 	%rd8852, {%r18081, %r18080};
	shf.r.wrap.b32 	%r18082, %r18079, %r18078, 18;
	shf.r.wrap.b32 	%r18083, %r18078, %r18079, 18;
	mov.b64 	%rd8853, {%r18083, %r18082};
	xor.b64  	%rd8854, %rd8853, %rd8852;
	shf.l.wrap.b32 	%r18084, %r18078, %r18079, 23;
	shf.l.wrap.b32 	%r18085, %r18079, %r18078, 23;
	mov.b64 	%rd8855, {%r18085, %r18084};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	xor.b64  	%rd8857, %rd8816, %rd8792;
	and.b64  	%rd8858, %rd8840, %rd8857;
	xor.b64  	%rd8859, %rd8858, %rd8792;
	add.s64 	%rd8860, %rd8768, %rd8606;
	add.s64 	%rd8861, %rd8860, %rd38;
	add.s64 	%rd8862, %rd8861, %rd8859;
	add.s64 	%rd8863, %rd8862, %rd8856;
	add.s64 	%rd8864, %rd8863, %rd8779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18086,%dummy}, %rd8851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18087}, %rd8851;
	}
	shf.r.wrap.b32 	%r18088, %r18087, %r18086, 28;
	shf.r.wrap.b32 	%r18089, %r18086, %r18087, 28;
	mov.b64 	%rd8865, {%r18089, %r18088};
	shf.l.wrap.b32 	%r18090, %r18086, %r18087, 30;
	shf.l.wrap.b32 	%r18091, %r18087, %r18086, 30;
	mov.b64 	%rd8866, {%r18091, %r18090};
	xor.b64  	%rd8867, %rd8866, %rd8865;
	shf.l.wrap.b32 	%r18092, %r18086, %r18087, 25;
	shf.l.wrap.b32 	%r18093, %r18087, %r18086, 25;
	mov.b64 	%rd8868, {%r18093, %r18092};
	xor.b64  	%rd8869, %rd8867, %rd8868;
	and.b64  	%rd8870, %rd8851, %rd8827;
	xor.b64  	%rd8871, %rd8851, %rd8827;
	and.b64  	%rd8872, %rd8871, %rd8803;
	or.b64  	%rd8873, %rd8872, %rd8870;
	add.s64 	%rd8874, %rd8863, %rd8873;
	add.s64 	%rd8875, %rd8874, %rd8869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18094,%dummy}, %rd8864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18095}, %rd8864;
	}
	shf.r.wrap.b32 	%r18096, %r18095, %r18094, 14;
	shf.r.wrap.b32 	%r18097, %r18094, %r18095, 14;
	mov.b64 	%rd8876, {%r18097, %r18096};
	shf.r.wrap.b32 	%r18098, %r18095, %r18094, 18;
	shf.r.wrap.b32 	%r18099, %r18094, %r18095, 18;
	mov.b64 	%rd8877, {%r18099, %r18098};
	xor.b64  	%rd8878, %rd8877, %rd8876;
	shf.l.wrap.b32 	%r18100, %r18094, %r18095, 23;
	shf.l.wrap.b32 	%r18101, %r18095, %r18094, 23;
	mov.b64 	%rd8879, {%r18101, %r18100};
	xor.b64  	%rd8880, %rd8878, %rd8879;
	xor.b64  	%rd8881, %rd8840, %rd8816;
	and.b64  	%rd8882, %rd8864, %rd8881;
	xor.b64  	%rd8883, %rd8882, %rd8816;
	add.s64 	%rd8884, %rd8792, %rd8607;
	add.s64 	%rd8885, %rd8884, %rd39;
	add.s64 	%rd8886, %rd8885, %rd8883;
	add.s64 	%rd8887, %rd8886, %rd8880;
	add.s64 	%rd8888, %rd8887, %rd8803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18102,%dummy}, %rd8875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18103}, %rd8875;
	}
	shf.r.wrap.b32 	%r18104, %r18103, %r18102, 28;
	shf.r.wrap.b32 	%r18105, %r18102, %r18103, 28;
	mov.b64 	%rd8889, {%r18105, %r18104};
	shf.l.wrap.b32 	%r18106, %r18102, %r18103, 30;
	shf.l.wrap.b32 	%r18107, %r18103, %r18102, 30;
	mov.b64 	%rd8890, {%r18107, %r18106};
	xor.b64  	%rd8891, %rd8890, %rd8889;
	shf.l.wrap.b32 	%r18108, %r18102, %r18103, 25;
	shf.l.wrap.b32 	%r18109, %r18103, %r18102, 25;
	mov.b64 	%rd8892, {%r18109, %r18108};
	xor.b64  	%rd8893, %rd8891, %rd8892;
	and.b64  	%rd8894, %rd8875, %rd8851;
	xor.b64  	%rd8895, %rd8875, %rd8851;
	and.b64  	%rd8896, %rd8895, %rd8827;
	or.b64  	%rd8897, %rd8896, %rd8894;
	add.s64 	%rd8898, %rd8887, %rd8897;
	add.s64 	%rd8899, %rd8898, %rd8893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18110,%dummy}, %rd8888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18111}, %rd8888;
	}
	shf.r.wrap.b32 	%r18112, %r18111, %r18110, 14;
	shf.r.wrap.b32 	%r18113, %r18110, %r18111, 14;
	mov.b64 	%rd8900, {%r18113, %r18112};
	shf.r.wrap.b32 	%r18114, %r18111, %r18110, 18;
	shf.r.wrap.b32 	%r18115, %r18110, %r18111, 18;
	mov.b64 	%rd8901, {%r18115, %r18114};
	xor.b64  	%rd8902, %rd8901, %rd8900;
	shf.l.wrap.b32 	%r18116, %r18110, %r18111, 23;
	shf.l.wrap.b32 	%r18117, %r18111, %r18110, 23;
	mov.b64 	%rd8903, {%r18117, %r18116};
	xor.b64  	%rd8904, %rd8902, %rd8903;
	xor.b64  	%rd8905, %rd8864, %rd8840;
	and.b64  	%rd8906, %rd8888, %rd8905;
	xor.b64  	%rd8907, %rd8906, %rd8840;
	add.s64 	%rd8908, %rd8816, %rd8608;
	add.s64 	%rd8909, %rd8908, %rd40;
	add.s64 	%rd8910, %rd8909, %rd8907;
	add.s64 	%rd8911, %rd8910, %rd8904;
	add.s64 	%rd8912, %rd8911, %rd8827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18118,%dummy}, %rd8899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18119}, %rd8899;
	}
	shf.r.wrap.b32 	%r18120, %r18119, %r18118, 28;
	shf.r.wrap.b32 	%r18121, %r18118, %r18119, 28;
	mov.b64 	%rd8913, {%r18121, %r18120};
	shf.l.wrap.b32 	%r18122, %r18118, %r18119, 30;
	shf.l.wrap.b32 	%r18123, %r18119, %r18118, 30;
	mov.b64 	%rd8914, {%r18123, %r18122};
	xor.b64  	%rd8915, %rd8914, %rd8913;
	shf.l.wrap.b32 	%r18124, %r18118, %r18119, 25;
	shf.l.wrap.b32 	%r18125, %r18119, %r18118, 25;
	mov.b64 	%rd8916, {%r18125, %r18124};
	xor.b64  	%rd8917, %rd8915, %rd8916;
	and.b64  	%rd8918, %rd8899, %rd8875;
	xor.b64  	%rd8919, %rd8899, %rd8875;
	and.b64  	%rd8920, %rd8919, %rd8851;
	or.b64  	%rd8921, %rd8920, %rd8918;
	add.s64 	%rd8922, %rd8911, %rd8921;
	add.s64 	%rd8923, %rd8922, %rd8917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18126,%dummy}, %rd8912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18127}, %rd8912;
	}
	shf.r.wrap.b32 	%r18128, %r18127, %r18126, 14;
	shf.r.wrap.b32 	%r18129, %r18126, %r18127, 14;
	mov.b64 	%rd8924, {%r18129, %r18128};
	shf.r.wrap.b32 	%r18130, %r18127, %r18126, 18;
	shf.r.wrap.b32 	%r18131, %r18126, %r18127, 18;
	mov.b64 	%rd8925, {%r18131, %r18130};
	xor.b64  	%rd8926, %rd8925, %rd8924;
	shf.l.wrap.b32 	%r18132, %r18126, %r18127, 23;
	shf.l.wrap.b32 	%r18133, %r18127, %r18126, 23;
	mov.b64 	%rd8927, {%r18133, %r18132};
	xor.b64  	%rd8928, %rd8926, %rd8927;
	xor.b64  	%rd8929, %rd8888, %rd8864;
	and.b64  	%rd8930, %rd8912, %rd8929;
	xor.b64  	%rd8931, %rd8930, %rd8864;
	add.s64 	%rd8932, %rd8840, %rd8609;
	add.s64 	%rd8933, %rd8932, %rd41;
	add.s64 	%rd8934, %rd8933, %rd8931;
	add.s64 	%rd8935, %rd8934, %rd8928;
	add.s64 	%rd8936, %rd8935, %rd8851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18134,%dummy}, %rd8923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18135}, %rd8923;
	}
	shf.r.wrap.b32 	%r18136, %r18135, %r18134, 28;
	shf.r.wrap.b32 	%r18137, %r18134, %r18135, 28;
	mov.b64 	%rd8937, {%r18137, %r18136};
	shf.l.wrap.b32 	%r18138, %r18134, %r18135, 30;
	shf.l.wrap.b32 	%r18139, %r18135, %r18134, 30;
	mov.b64 	%rd8938, {%r18139, %r18138};
	xor.b64  	%rd8939, %rd8938, %rd8937;
	shf.l.wrap.b32 	%r18140, %r18134, %r18135, 25;
	shf.l.wrap.b32 	%r18141, %r18135, %r18134, 25;
	mov.b64 	%rd8940, {%r18141, %r18140};
	xor.b64  	%rd8941, %rd8939, %rd8940;
	and.b64  	%rd8942, %rd8923, %rd8899;
	xor.b64  	%rd8943, %rd8923, %rd8899;
	and.b64  	%rd8944, %rd8943, %rd8875;
	or.b64  	%rd8945, %rd8944, %rd8942;
	add.s64 	%rd8946, %rd8935, %rd8945;
	add.s64 	%rd8947, %rd8946, %rd8941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18142,%dummy}, %rd8936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18143}, %rd8936;
	}
	shf.r.wrap.b32 	%r18144, %r18143, %r18142, 14;
	shf.r.wrap.b32 	%r18145, %r18142, %r18143, 14;
	mov.b64 	%rd8948, {%r18145, %r18144};
	shf.r.wrap.b32 	%r18146, %r18143, %r18142, 18;
	shf.r.wrap.b32 	%r18147, %r18142, %r18143, 18;
	mov.b64 	%rd8949, {%r18147, %r18146};
	xor.b64  	%rd8950, %rd8949, %rd8948;
	shf.l.wrap.b32 	%r18148, %r18142, %r18143, 23;
	shf.l.wrap.b32 	%r18149, %r18143, %r18142, 23;
	mov.b64 	%rd8951, {%r18149, %r18148};
	xor.b64  	%rd8952, %rd8950, %rd8951;
	xor.b64  	%rd8953, %rd8912, %rd8888;
	and.b64  	%rd8954, %rd8936, %rd8953;
	xor.b64  	%rd8955, %rd8954, %rd8888;
	add.s64 	%rd8956, %rd8864, %rd8610;
	add.s64 	%rd8957, %rd8956, %rd42;
	add.s64 	%rd8958, %rd8957, %rd8955;
	add.s64 	%rd8959, %rd8958, %rd8952;
	add.s64 	%rd8960, %rd8959, %rd8875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18150,%dummy}, %rd8947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18151}, %rd8947;
	}
	shf.r.wrap.b32 	%r18152, %r18151, %r18150, 28;
	shf.r.wrap.b32 	%r18153, %r18150, %r18151, 28;
	mov.b64 	%rd8961, {%r18153, %r18152};
	shf.l.wrap.b32 	%r18154, %r18150, %r18151, 30;
	shf.l.wrap.b32 	%r18155, %r18151, %r18150, 30;
	mov.b64 	%rd8962, {%r18155, %r18154};
	xor.b64  	%rd8963, %rd8962, %rd8961;
	shf.l.wrap.b32 	%r18156, %r18150, %r18151, 25;
	shf.l.wrap.b32 	%r18157, %r18151, %r18150, 25;
	mov.b64 	%rd8964, {%r18157, %r18156};
	xor.b64  	%rd8965, %rd8963, %rd8964;
	and.b64  	%rd8966, %rd8947, %rd8923;
	xor.b64  	%rd8967, %rd8947, %rd8923;
	and.b64  	%rd8968, %rd8967, %rd8899;
	or.b64  	%rd8969, %rd8968, %rd8966;
	add.s64 	%rd8970, %rd8959, %rd8969;
	add.s64 	%rd8971, %rd8970, %rd8965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18158,%dummy}, %rd8960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18159}, %rd8960;
	}
	shf.r.wrap.b32 	%r18160, %r18159, %r18158, 14;
	shf.r.wrap.b32 	%r18161, %r18158, %r18159, 14;
	mov.b64 	%rd8972, {%r18161, %r18160};
	shf.r.wrap.b32 	%r18162, %r18159, %r18158, 18;
	shf.r.wrap.b32 	%r18163, %r18158, %r18159, 18;
	mov.b64 	%rd8973, {%r18163, %r18162};
	xor.b64  	%rd8974, %rd8973, %rd8972;
	shf.l.wrap.b32 	%r18164, %r18158, %r18159, 23;
	shf.l.wrap.b32 	%r18165, %r18159, %r18158, 23;
	mov.b64 	%rd8975, {%r18165, %r18164};
	xor.b64  	%rd8976, %rd8974, %rd8975;
	xor.b64  	%rd8977, %rd8936, %rd8912;
	and.b64  	%rd8978, %rd8960, %rd8977;
	xor.b64  	%rd8979, %rd8978, %rd8912;
	add.s64 	%rd8980, %rd8888, %rd8611;
	add.s64 	%rd8981, %rd8980, %rd43;
	add.s64 	%rd8982, %rd8981, %rd8979;
	add.s64 	%rd8983, %rd8982, %rd8976;
	add.s64 	%rd8984, %rd8983, %rd8899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18166,%dummy}, %rd8971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18167}, %rd8971;
	}
	shf.r.wrap.b32 	%r18168, %r18167, %r18166, 28;
	shf.r.wrap.b32 	%r18169, %r18166, %r18167, 28;
	mov.b64 	%rd8985, {%r18169, %r18168};
	shf.l.wrap.b32 	%r18170, %r18166, %r18167, 30;
	shf.l.wrap.b32 	%r18171, %r18167, %r18166, 30;
	mov.b64 	%rd8986, {%r18171, %r18170};
	xor.b64  	%rd8987, %rd8986, %rd8985;
	shf.l.wrap.b32 	%r18172, %r18166, %r18167, 25;
	shf.l.wrap.b32 	%r18173, %r18167, %r18166, 25;
	mov.b64 	%rd8988, {%r18173, %r18172};
	xor.b64  	%rd8989, %rd8987, %rd8988;
	and.b64  	%rd8990, %rd8971, %rd8947;
	xor.b64  	%rd8991, %rd8971, %rd8947;
	and.b64  	%rd8992, %rd8991, %rd8923;
	or.b64  	%rd8993, %rd8992, %rd8990;
	add.s64 	%rd8994, %rd8983, %rd8993;
	add.s64 	%rd8995, %rd8994, %rd8989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18174,%dummy}, %rd8610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18175}, %rd8610;
	}
	shf.r.wrap.b32 	%r18176, %r18175, %r18174, 19;
	shf.r.wrap.b32 	%r18177, %r18174, %r18175, 19;
	mov.b64 	%rd8996, {%r18177, %r18176};
	shf.l.wrap.b32 	%r18178, %r18174, %r18175, 3;
	shf.l.wrap.b32 	%r18179, %r18175, %r18174, 3;
	mov.b64 	%rd8997, {%r18179, %r18178};
	shr.u64 	%rd8998, %rd8610, 6;
	xor.b64  	%rd8999, %rd8996, %rd8998;
	xor.b64  	%rd9000, %rd8999, %rd8997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18180,%dummy}, %rd8597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18181}, %rd8597;
	}
	shf.r.wrap.b32 	%r18182, %r18181, %r18180, 1;
	shf.r.wrap.b32 	%r18183, %r18180, %r18181, 1;
	mov.b64 	%rd9001, {%r18183, %r18182};
	shf.r.wrap.b32 	%r18184, %r18181, %r18180, 8;
	shf.r.wrap.b32 	%r18185, %r18180, %r18181, 8;
	mov.b64 	%rd9002, {%r18185, %r18184};
	shr.u64 	%rd9003, %rd8597, 7;
	xor.b64  	%rd9004, %rd9001, %rd9003;
	xor.b64  	%rd9005, %rd9004, %rd9002;
	add.s64 	%rd9006, %rd8605, %rd8596;
	add.s64 	%rd9007, %rd9006, %rd9000;
	add.s64 	%rd9008, %rd9007, %rd9005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18186,%dummy}, %rd8611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18187}, %rd8611;
	}
	shf.r.wrap.b32 	%r18188, %r18187, %r18186, 19;
	shf.r.wrap.b32 	%r18189, %r18186, %r18187, 19;
	mov.b64 	%rd9009, {%r18189, %r18188};
	shf.l.wrap.b32 	%r18190, %r18186, %r18187, 3;
	shf.l.wrap.b32 	%r18191, %r18187, %r18186, 3;
	mov.b64 	%rd9010, {%r18191, %r18190};
	shr.u64 	%rd9011, %rd8611, 6;
	xor.b64  	%rd9012, %rd9009, %rd9011;
	xor.b64  	%rd9013, %rd9012, %rd9010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18192,%dummy}, %rd8598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18193}, %rd8598;
	}
	shf.r.wrap.b32 	%r18194, %r18193, %r18192, 1;
	shf.r.wrap.b32 	%r18195, %r18192, %r18193, 1;
	mov.b64 	%rd9014, {%r18195, %r18194};
	shf.r.wrap.b32 	%r18196, %r18193, %r18192, 8;
	shf.r.wrap.b32 	%r18197, %r18192, %r18193, 8;
	mov.b64 	%rd9015, {%r18197, %r18196};
	shr.u64 	%rd9016, %rd8598, 7;
	xor.b64  	%rd9017, %rd9014, %rd9016;
	xor.b64  	%rd9018, %rd9017, %rd9015;
	add.s64 	%rd9019, %rd8606, %rd8597;
	add.s64 	%rd9020, %rd9019, %rd9013;
	add.s64 	%rd9021, %rd9020, %rd9018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18198,%dummy}, %rd9008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18199}, %rd9008;
	}
	shf.r.wrap.b32 	%r18200, %r18199, %r18198, 19;
	shf.r.wrap.b32 	%r18201, %r18198, %r18199, 19;
	mov.b64 	%rd9022, {%r18201, %r18200};
	shf.l.wrap.b32 	%r18202, %r18198, %r18199, 3;
	shf.l.wrap.b32 	%r18203, %r18199, %r18198, 3;
	mov.b64 	%rd9023, {%r18203, %r18202};
	shr.u64 	%rd9024, %rd9008, 6;
	xor.b64  	%rd9025, %rd9022, %rd9024;
	xor.b64  	%rd9026, %rd9025, %rd9023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18204,%dummy}, %rd8599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18205}, %rd8599;
	}
	shf.r.wrap.b32 	%r18206, %r18205, %r18204, 1;
	shf.r.wrap.b32 	%r18207, %r18204, %r18205, 1;
	mov.b64 	%rd9027, {%r18207, %r18206};
	shf.r.wrap.b32 	%r18208, %r18205, %r18204, 8;
	shf.r.wrap.b32 	%r18209, %r18204, %r18205, 8;
	mov.b64 	%rd9028, {%r18209, %r18208};
	shr.u64 	%rd9029, %rd8599, 7;
	xor.b64  	%rd9030, %rd9027, %rd9029;
	xor.b64  	%rd9031, %rd9030, %rd9028;
	add.s64 	%rd9032, %rd8607, %rd8598;
	add.s64 	%rd9033, %rd9032, %rd9026;
	add.s64 	%rd9034, %rd9033, %rd9031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18210,%dummy}, %rd9021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18211}, %rd9021;
	}
	shf.r.wrap.b32 	%r18212, %r18211, %r18210, 19;
	shf.r.wrap.b32 	%r18213, %r18210, %r18211, 19;
	mov.b64 	%rd9035, {%r18213, %r18212};
	shf.l.wrap.b32 	%r18214, %r18210, %r18211, 3;
	shf.l.wrap.b32 	%r18215, %r18211, %r18210, 3;
	mov.b64 	%rd9036, {%r18215, %r18214};
	shr.u64 	%rd9037, %rd9021, 6;
	xor.b64  	%rd9038, %rd9035, %rd9037;
	xor.b64  	%rd9039, %rd9038, %rd9036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18216,%dummy}, %rd8600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18217}, %rd8600;
	}
	shf.r.wrap.b32 	%r18218, %r18217, %r18216, 1;
	shf.r.wrap.b32 	%r18219, %r18216, %r18217, 1;
	mov.b64 	%rd9040, {%r18219, %r18218};
	shf.r.wrap.b32 	%r18220, %r18217, %r18216, 8;
	shf.r.wrap.b32 	%r18221, %r18216, %r18217, 8;
	mov.b64 	%rd9041, {%r18221, %r18220};
	shr.u64 	%rd9042, %rd8600, 7;
	xor.b64  	%rd9043, %rd9040, %rd9042;
	xor.b64  	%rd9044, %rd9043, %rd9041;
	add.s64 	%rd9045, %rd8608, %rd8599;
	add.s64 	%rd9046, %rd9045, %rd9039;
	add.s64 	%rd9047, %rd9046, %rd9044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18222,%dummy}, %rd9034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18223}, %rd9034;
	}
	shf.r.wrap.b32 	%r18224, %r18223, %r18222, 19;
	shf.r.wrap.b32 	%r18225, %r18222, %r18223, 19;
	mov.b64 	%rd9048, {%r18225, %r18224};
	shf.l.wrap.b32 	%r18226, %r18222, %r18223, 3;
	shf.l.wrap.b32 	%r18227, %r18223, %r18222, 3;
	mov.b64 	%rd9049, {%r18227, %r18226};
	shr.u64 	%rd9050, %rd9034, 6;
	xor.b64  	%rd9051, %rd9048, %rd9050;
	xor.b64  	%rd9052, %rd9051, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18228,%dummy}, %rd8601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18229}, %rd8601;
	}
	shf.r.wrap.b32 	%r18230, %r18229, %r18228, 1;
	shf.r.wrap.b32 	%r18231, %r18228, %r18229, 1;
	mov.b64 	%rd9053, {%r18231, %r18230};
	shf.r.wrap.b32 	%r18232, %r18229, %r18228, 8;
	shf.r.wrap.b32 	%r18233, %r18228, %r18229, 8;
	mov.b64 	%rd9054, {%r18233, %r18232};
	shr.u64 	%rd9055, %rd8601, 7;
	xor.b64  	%rd9056, %rd9053, %rd9055;
	xor.b64  	%rd9057, %rd9056, %rd9054;
	add.s64 	%rd9058, %rd8609, %rd8600;
	add.s64 	%rd9059, %rd9058, %rd9052;
	add.s64 	%rd9060, %rd9059, %rd9057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18234,%dummy}, %rd9047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18235}, %rd9047;
	}
	shf.r.wrap.b32 	%r18236, %r18235, %r18234, 19;
	shf.r.wrap.b32 	%r18237, %r18234, %r18235, 19;
	mov.b64 	%rd9061, {%r18237, %r18236};
	shf.l.wrap.b32 	%r18238, %r18234, %r18235, 3;
	shf.l.wrap.b32 	%r18239, %r18235, %r18234, 3;
	mov.b64 	%rd9062, {%r18239, %r18238};
	shr.u64 	%rd9063, %rd9047, 6;
	xor.b64  	%rd9064, %rd9061, %rd9063;
	xor.b64  	%rd9065, %rd9064, %rd9062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18240,%dummy}, %rd8602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18241}, %rd8602;
	}
	shf.r.wrap.b32 	%r18242, %r18241, %r18240, 1;
	shf.r.wrap.b32 	%r18243, %r18240, %r18241, 1;
	mov.b64 	%rd9066, {%r18243, %r18242};
	shf.r.wrap.b32 	%r18244, %r18241, %r18240, 8;
	shf.r.wrap.b32 	%r18245, %r18240, %r18241, 8;
	mov.b64 	%rd9067, {%r18245, %r18244};
	shr.u64 	%rd9068, %rd8602, 7;
	xor.b64  	%rd9069, %rd9066, %rd9068;
	xor.b64  	%rd9070, %rd9069, %rd9067;
	add.s64 	%rd9071, %rd8610, %rd8601;
	add.s64 	%rd9072, %rd9071, %rd9065;
	add.s64 	%rd9073, %rd9072, %rd9070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18246,%dummy}, %rd9060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18247}, %rd9060;
	}
	shf.r.wrap.b32 	%r18248, %r18247, %r18246, 19;
	shf.r.wrap.b32 	%r18249, %r18246, %r18247, 19;
	mov.b64 	%rd9074, {%r18249, %r18248};
	shf.l.wrap.b32 	%r18250, %r18246, %r18247, 3;
	shf.l.wrap.b32 	%r18251, %r18247, %r18246, 3;
	mov.b64 	%rd9075, {%r18251, %r18250};
	shr.u64 	%rd9076, %rd9060, 6;
	xor.b64  	%rd9077, %rd9074, %rd9076;
	xor.b64  	%rd9078, %rd9077, %rd9075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18252,%dummy}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18253}, %rd8603;
	}
	shf.r.wrap.b32 	%r18254, %r18253, %r18252, 1;
	shf.r.wrap.b32 	%r18255, %r18252, %r18253, 1;
	mov.b64 	%rd9079, {%r18255, %r18254};
	shf.r.wrap.b32 	%r18256, %r18253, %r18252, 8;
	shf.r.wrap.b32 	%r18257, %r18252, %r18253, 8;
	mov.b64 	%rd9080, {%r18257, %r18256};
	shr.u64 	%rd9081, %rd8603, 7;
	xor.b64  	%rd9082, %rd9079, %rd9081;
	xor.b64  	%rd9083, %rd9082, %rd9080;
	add.s64 	%rd9084, %rd8611, %rd8602;
	add.s64 	%rd9085, %rd9084, %rd9078;
	add.s64 	%rd9086, %rd9085, %rd9083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18258,%dummy}, %rd9073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18259}, %rd9073;
	}
	shf.r.wrap.b32 	%r18260, %r18259, %r18258, 19;
	shf.r.wrap.b32 	%r18261, %r18258, %r18259, 19;
	mov.b64 	%rd9087, {%r18261, %r18260};
	shf.l.wrap.b32 	%r18262, %r18258, %r18259, 3;
	shf.l.wrap.b32 	%r18263, %r18259, %r18258, 3;
	mov.b64 	%rd9088, {%r18263, %r18262};
	shr.u64 	%rd9089, %rd9073, 6;
	xor.b64  	%rd9090, %rd9087, %rd9089;
	xor.b64  	%rd9091, %rd9090, %rd9088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18264,%dummy}, %rd8604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18265}, %rd8604;
	}
	shf.r.wrap.b32 	%r18266, %r18265, %r18264, 1;
	shf.r.wrap.b32 	%r18267, %r18264, %r18265, 1;
	mov.b64 	%rd9092, {%r18267, %r18266};
	shf.r.wrap.b32 	%r18268, %r18265, %r18264, 8;
	shf.r.wrap.b32 	%r18269, %r18264, %r18265, 8;
	mov.b64 	%rd9093, {%r18269, %r18268};
	shr.u64 	%rd9094, %rd8604, 7;
	xor.b64  	%rd9095, %rd9092, %rd9094;
	xor.b64  	%rd9096, %rd9095, %rd9093;
	add.s64 	%rd9097, %rd9008, %rd8603;
	add.s64 	%rd9098, %rd9097, %rd9091;
	add.s64 	%rd9099, %rd9098, %rd9096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18270,%dummy}, %rd9086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18271}, %rd9086;
	}
	shf.r.wrap.b32 	%r18272, %r18271, %r18270, 19;
	shf.r.wrap.b32 	%r18273, %r18270, %r18271, 19;
	mov.b64 	%rd9100, {%r18273, %r18272};
	shf.l.wrap.b32 	%r18274, %r18270, %r18271, 3;
	shf.l.wrap.b32 	%r18275, %r18271, %r18270, 3;
	mov.b64 	%rd9101, {%r18275, %r18274};
	shr.u64 	%rd9102, %rd9086, 6;
	xor.b64  	%rd9103, %rd9100, %rd9102;
	xor.b64  	%rd9104, %rd9103, %rd9101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18276,%dummy}, %rd8605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18277}, %rd8605;
	}
	shf.r.wrap.b32 	%r18278, %r18277, %r18276, 1;
	shf.r.wrap.b32 	%r18279, %r18276, %r18277, 1;
	mov.b64 	%rd9105, {%r18279, %r18278};
	shf.r.wrap.b32 	%r18280, %r18277, %r18276, 8;
	shf.r.wrap.b32 	%r18281, %r18276, %r18277, 8;
	mov.b64 	%rd9106, {%r18281, %r18280};
	shr.u64 	%rd9107, %rd8605, 7;
	xor.b64  	%rd9108, %rd9105, %rd9107;
	xor.b64  	%rd9109, %rd9108, %rd9106;
	add.s64 	%rd9110, %rd9021, %rd8604;
	add.s64 	%rd9111, %rd9110, %rd9104;
	add.s64 	%rd9112, %rd9111, %rd9109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18282,%dummy}, %rd9099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18283}, %rd9099;
	}
	shf.r.wrap.b32 	%r18284, %r18283, %r18282, 19;
	shf.r.wrap.b32 	%r18285, %r18282, %r18283, 19;
	mov.b64 	%rd9113, {%r18285, %r18284};
	shf.l.wrap.b32 	%r18286, %r18282, %r18283, 3;
	shf.l.wrap.b32 	%r18287, %r18283, %r18282, 3;
	mov.b64 	%rd9114, {%r18287, %r18286};
	shr.u64 	%rd9115, %rd9099, 6;
	xor.b64  	%rd9116, %rd9113, %rd9115;
	xor.b64  	%rd9117, %rd9116, %rd9114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18288,%dummy}, %rd8606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18289}, %rd8606;
	}
	shf.r.wrap.b32 	%r18290, %r18289, %r18288, 1;
	shf.r.wrap.b32 	%r18291, %r18288, %r18289, 1;
	mov.b64 	%rd9118, {%r18291, %r18290};
	shf.r.wrap.b32 	%r18292, %r18289, %r18288, 8;
	shf.r.wrap.b32 	%r18293, %r18288, %r18289, 8;
	mov.b64 	%rd9119, {%r18293, %r18292};
	shr.u64 	%rd9120, %rd8606, 7;
	xor.b64  	%rd9121, %rd9118, %rd9120;
	xor.b64  	%rd9122, %rd9121, %rd9119;
	add.s64 	%rd9123, %rd9034, %rd8605;
	add.s64 	%rd9124, %rd9123, %rd9117;
	add.s64 	%rd9125, %rd9124, %rd9122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18294,%dummy}, %rd9112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18295}, %rd9112;
	}
	shf.r.wrap.b32 	%r18296, %r18295, %r18294, 19;
	shf.r.wrap.b32 	%r18297, %r18294, %r18295, 19;
	mov.b64 	%rd9126, {%r18297, %r18296};
	shf.l.wrap.b32 	%r18298, %r18294, %r18295, 3;
	shf.l.wrap.b32 	%r18299, %r18295, %r18294, 3;
	mov.b64 	%rd9127, {%r18299, %r18298};
	shr.u64 	%rd9128, %rd9112, 6;
	xor.b64  	%rd9129, %rd9126, %rd9128;
	xor.b64  	%rd9130, %rd9129, %rd9127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18300,%dummy}, %rd8607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18301}, %rd8607;
	}
	shf.r.wrap.b32 	%r18302, %r18301, %r18300, 1;
	shf.r.wrap.b32 	%r18303, %r18300, %r18301, 1;
	mov.b64 	%rd9131, {%r18303, %r18302};
	shf.r.wrap.b32 	%r18304, %r18301, %r18300, 8;
	shf.r.wrap.b32 	%r18305, %r18300, %r18301, 8;
	mov.b64 	%rd9132, {%r18305, %r18304};
	shr.u64 	%rd9133, %rd8607, 7;
	xor.b64  	%rd9134, %rd9131, %rd9133;
	xor.b64  	%rd9135, %rd9134, %rd9132;
	add.s64 	%rd9136, %rd9047, %rd8606;
	add.s64 	%rd9137, %rd9136, %rd9130;
	add.s64 	%rd9138, %rd9137, %rd9135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18306,%dummy}, %rd9125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18307}, %rd9125;
	}
	shf.r.wrap.b32 	%r18308, %r18307, %r18306, 19;
	shf.r.wrap.b32 	%r18309, %r18306, %r18307, 19;
	mov.b64 	%rd9139, {%r18309, %r18308};
	shf.l.wrap.b32 	%r18310, %r18306, %r18307, 3;
	shf.l.wrap.b32 	%r18311, %r18307, %r18306, 3;
	mov.b64 	%rd9140, {%r18311, %r18310};
	shr.u64 	%rd9141, %rd9125, 6;
	xor.b64  	%rd9142, %rd9139, %rd9141;
	xor.b64  	%rd9143, %rd9142, %rd9140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18312,%dummy}, %rd8608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18313}, %rd8608;
	}
	shf.r.wrap.b32 	%r18314, %r18313, %r18312, 1;
	shf.r.wrap.b32 	%r18315, %r18312, %r18313, 1;
	mov.b64 	%rd9144, {%r18315, %r18314};
	shf.r.wrap.b32 	%r18316, %r18313, %r18312, 8;
	shf.r.wrap.b32 	%r18317, %r18312, %r18313, 8;
	mov.b64 	%rd9145, {%r18317, %r18316};
	shr.u64 	%rd9146, %rd8608, 7;
	xor.b64  	%rd9147, %rd9144, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9145;
	add.s64 	%rd9149, %rd9060, %rd8607;
	add.s64 	%rd9150, %rd9149, %rd9143;
	add.s64 	%rd9151, %rd9150, %rd9148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18318,%dummy}, %rd9138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18319}, %rd9138;
	}
	shf.r.wrap.b32 	%r18320, %r18319, %r18318, 19;
	shf.r.wrap.b32 	%r18321, %r18318, %r18319, 19;
	mov.b64 	%rd9152, {%r18321, %r18320};
	shf.l.wrap.b32 	%r18322, %r18318, %r18319, 3;
	shf.l.wrap.b32 	%r18323, %r18319, %r18318, 3;
	mov.b64 	%rd9153, {%r18323, %r18322};
	shr.u64 	%rd9154, %rd9138, 6;
	xor.b64  	%rd9155, %rd9152, %rd9154;
	xor.b64  	%rd9156, %rd9155, %rd9153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18324,%dummy}, %rd8609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18325}, %rd8609;
	}
	shf.r.wrap.b32 	%r18326, %r18325, %r18324, 1;
	shf.r.wrap.b32 	%r18327, %r18324, %r18325, 1;
	mov.b64 	%rd9157, {%r18327, %r18326};
	shf.r.wrap.b32 	%r18328, %r18325, %r18324, 8;
	shf.r.wrap.b32 	%r18329, %r18324, %r18325, 8;
	mov.b64 	%rd9158, {%r18329, %r18328};
	shr.u64 	%rd9159, %rd8609, 7;
	xor.b64  	%rd9160, %rd9157, %rd9159;
	xor.b64  	%rd9161, %rd9160, %rd9158;
	add.s64 	%rd9162, %rd9073, %rd8608;
	add.s64 	%rd9163, %rd9162, %rd9156;
	add.s64 	%rd9164, %rd9163, %rd9161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18330,%dummy}, %rd9151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18331}, %rd9151;
	}
	shf.r.wrap.b32 	%r18332, %r18331, %r18330, 19;
	shf.r.wrap.b32 	%r18333, %r18330, %r18331, 19;
	mov.b64 	%rd9165, {%r18333, %r18332};
	shf.l.wrap.b32 	%r18334, %r18330, %r18331, 3;
	shf.l.wrap.b32 	%r18335, %r18331, %r18330, 3;
	mov.b64 	%rd9166, {%r18335, %r18334};
	shr.u64 	%rd9167, %rd9151, 6;
	xor.b64  	%rd9168, %rd9165, %rd9167;
	xor.b64  	%rd9169, %rd9168, %rd9166;
	shf.r.wrap.b32 	%r18336, %r18175, %r18174, 1;
	shf.r.wrap.b32 	%r18337, %r18174, %r18175, 1;
	mov.b64 	%rd9170, {%r18337, %r18336};
	shf.r.wrap.b32 	%r18338, %r18175, %r18174, 8;
	shf.r.wrap.b32 	%r18339, %r18174, %r18175, 8;
	mov.b64 	%rd9171, {%r18339, %r18338};
	shr.u64 	%rd9172, %rd8610, 7;
	xor.b64  	%rd9173, %rd9170, %rd9172;
	xor.b64  	%rd9174, %rd9173, %rd9171;
	add.s64 	%rd9175, %rd9086, %rd8609;
	add.s64 	%rd9176, %rd9175, %rd9169;
	add.s64 	%rd9177, %rd9176, %rd9174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18340,%dummy}, %rd9164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18341}, %rd9164;
	}
	shf.r.wrap.b32 	%r18342, %r18341, %r18340, 19;
	shf.r.wrap.b32 	%r18343, %r18340, %r18341, 19;
	mov.b64 	%rd9178, {%r18343, %r18342};
	shf.l.wrap.b32 	%r18344, %r18340, %r18341, 3;
	shf.l.wrap.b32 	%r18345, %r18341, %r18340, 3;
	mov.b64 	%rd9179, {%r18345, %r18344};
	shr.u64 	%rd9180, %rd9164, 6;
	xor.b64  	%rd9181, %rd9178, %rd9180;
	xor.b64  	%rd9182, %rd9181, %rd9179;
	shf.r.wrap.b32 	%r18346, %r18187, %r18186, 1;
	shf.r.wrap.b32 	%r18347, %r18186, %r18187, 1;
	mov.b64 	%rd9183, {%r18347, %r18346};
	shf.r.wrap.b32 	%r18348, %r18187, %r18186, 8;
	shf.r.wrap.b32 	%r18349, %r18186, %r18187, 8;
	mov.b64 	%rd9184, {%r18349, %r18348};
	shr.u64 	%rd9185, %rd8611, 7;
	xor.b64  	%rd9186, %rd9183, %rd9185;
	xor.b64  	%rd9187, %rd9186, %rd9184;
	add.s64 	%rd9188, %rd9099, %rd8610;
	add.s64 	%rd9189, %rd9188, %rd9182;
	add.s64 	%rd9190, %rd9189, %rd9187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18350,%dummy}, %rd9177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18351}, %rd9177;
	}
	shf.r.wrap.b32 	%r18352, %r18351, %r18350, 19;
	shf.r.wrap.b32 	%r18353, %r18350, %r18351, 19;
	mov.b64 	%rd9191, {%r18353, %r18352};
	shf.l.wrap.b32 	%r18354, %r18350, %r18351, 3;
	shf.l.wrap.b32 	%r18355, %r18351, %r18350, 3;
	mov.b64 	%rd9192, {%r18355, %r18354};
	shr.u64 	%rd9193, %rd9177, 6;
	xor.b64  	%rd9194, %rd9191, %rd9193;
	xor.b64  	%rd9195, %rd9194, %rd9192;
	shf.r.wrap.b32 	%r18356, %r18199, %r18198, 1;
	shf.r.wrap.b32 	%r18357, %r18198, %r18199, 1;
	mov.b64 	%rd9196, {%r18357, %r18356};
	shf.r.wrap.b32 	%r18358, %r18199, %r18198, 8;
	shf.r.wrap.b32 	%r18359, %r18198, %r18199, 8;
	mov.b64 	%rd9197, {%r18359, %r18358};
	shr.u64 	%rd9198, %rd9008, 7;
	xor.b64  	%rd9199, %rd9196, %rd9198;
	xor.b64  	%rd9200, %rd9199, %rd9197;
	add.s64 	%rd9201, %rd9112, %rd8611;
	add.s64 	%rd9202, %rd9201, %rd9195;
	add.s64 	%rd9203, %rd9202, %rd9200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18360,%dummy}, %rd8984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18361}, %rd8984;
	}
	shf.r.wrap.b32 	%r18362, %r18361, %r18360, 14;
	shf.r.wrap.b32 	%r18363, %r18360, %r18361, 14;
	mov.b64 	%rd9204, {%r18363, %r18362};
	shf.r.wrap.b32 	%r18364, %r18361, %r18360, 18;
	shf.r.wrap.b32 	%r18365, %r18360, %r18361, 18;
	mov.b64 	%rd9205, {%r18365, %r18364};
	xor.b64  	%rd9206, %rd9205, %rd9204;
	shf.l.wrap.b32 	%r18366, %r18360, %r18361, 23;
	shf.l.wrap.b32 	%r18367, %r18361, %r18360, 23;
	mov.b64 	%rd9207, {%r18367, %r18366};
	xor.b64  	%rd9208, %rd9206, %rd9207;
	xor.b64  	%rd9209, %rd8960, %rd8936;
	and.b64  	%rd9210, %rd8984, %rd9209;
	xor.b64  	%rd9211, %rd9210, %rd8936;
	add.s64 	%rd9212, %rd9211, %rd8912;
	add.s64 	%rd9213, %rd9212, %rd9008;
	add.s64 	%rd9214, %rd9213, %rd44;
	add.s64 	%rd9215, %rd9214, %rd9208;
	add.s64 	%rd9216, %rd9215, %rd8923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18368,%dummy}, %rd8995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18369}, %rd8995;
	}
	shf.r.wrap.b32 	%r18370, %r18369, %r18368, 28;
	shf.r.wrap.b32 	%r18371, %r18368, %r18369, 28;
	mov.b64 	%rd9217, {%r18371, %r18370};
	shf.l.wrap.b32 	%r18372, %r18368, %r18369, 30;
	shf.l.wrap.b32 	%r18373, %r18369, %r18368, 30;
	mov.b64 	%rd9218, {%r18373, %r18372};
	xor.b64  	%rd9219, %rd9218, %rd9217;
	shf.l.wrap.b32 	%r18374, %r18368, %r18369, 25;
	shf.l.wrap.b32 	%r18375, %r18369, %r18368, 25;
	mov.b64 	%rd9220, {%r18375, %r18374};
	xor.b64  	%rd9221, %rd9219, %rd9220;
	and.b64  	%rd9222, %rd8995, %rd8971;
	xor.b64  	%rd9223, %rd8995, %rd8971;
	and.b64  	%rd9224, %rd9223, %rd8947;
	or.b64  	%rd9225, %rd9224, %rd9222;
	add.s64 	%rd9226, %rd9215, %rd9225;
	add.s64 	%rd9227, %rd9226, %rd9221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18376,%dummy}, %rd9216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18377}, %rd9216;
	}
	shf.r.wrap.b32 	%r18378, %r18377, %r18376, 14;
	shf.r.wrap.b32 	%r18379, %r18376, %r18377, 14;
	mov.b64 	%rd9228, {%r18379, %r18378};
	shf.r.wrap.b32 	%r18380, %r18377, %r18376, 18;
	shf.r.wrap.b32 	%r18381, %r18376, %r18377, 18;
	mov.b64 	%rd9229, {%r18381, %r18380};
	xor.b64  	%rd9230, %rd9229, %rd9228;
	shf.l.wrap.b32 	%r18382, %r18376, %r18377, 23;
	shf.l.wrap.b32 	%r18383, %r18377, %r18376, 23;
	mov.b64 	%rd9231, {%r18383, %r18382};
	xor.b64  	%rd9232, %rd9230, %rd9231;
	xor.b64  	%rd9233, %rd8984, %rd8960;
	and.b64  	%rd9234, %rd9216, %rd9233;
	xor.b64  	%rd9235, %rd9234, %rd8960;
	add.s64 	%rd9236, %rd9021, %rd8936;
	add.s64 	%rd9237, %rd9236, %rd45;
	add.s64 	%rd9238, %rd9237, %rd9235;
	add.s64 	%rd9239, %rd9238, %rd9232;
	add.s64 	%rd9240, %rd9239, %rd8947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18384,%dummy}, %rd9227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18385}, %rd9227;
	}
	shf.r.wrap.b32 	%r18386, %r18385, %r18384, 28;
	shf.r.wrap.b32 	%r18387, %r18384, %r18385, 28;
	mov.b64 	%rd9241, {%r18387, %r18386};
	shf.l.wrap.b32 	%r18388, %r18384, %r18385, 30;
	shf.l.wrap.b32 	%r18389, %r18385, %r18384, 30;
	mov.b64 	%rd9242, {%r18389, %r18388};
	xor.b64  	%rd9243, %rd9242, %rd9241;
	shf.l.wrap.b32 	%r18390, %r18384, %r18385, 25;
	shf.l.wrap.b32 	%r18391, %r18385, %r18384, 25;
	mov.b64 	%rd9244, {%r18391, %r18390};
	xor.b64  	%rd9245, %rd9243, %rd9244;
	and.b64  	%rd9246, %rd9227, %rd8995;
	xor.b64  	%rd9247, %rd9227, %rd8995;
	and.b64  	%rd9248, %rd9247, %rd8971;
	or.b64  	%rd9249, %rd9248, %rd9246;
	add.s64 	%rd9250, %rd9239, %rd9249;
	add.s64 	%rd9251, %rd9250, %rd9245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18392,%dummy}, %rd9240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18393}, %rd9240;
	}
	shf.r.wrap.b32 	%r18394, %r18393, %r18392, 14;
	shf.r.wrap.b32 	%r18395, %r18392, %r18393, 14;
	mov.b64 	%rd9252, {%r18395, %r18394};
	shf.r.wrap.b32 	%r18396, %r18393, %r18392, 18;
	shf.r.wrap.b32 	%r18397, %r18392, %r18393, 18;
	mov.b64 	%rd9253, {%r18397, %r18396};
	xor.b64  	%rd9254, %rd9253, %rd9252;
	shf.l.wrap.b32 	%r18398, %r18392, %r18393, 23;
	shf.l.wrap.b32 	%r18399, %r18393, %r18392, 23;
	mov.b64 	%rd9255, {%r18399, %r18398};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	xor.b64  	%rd9257, %rd9216, %rd8984;
	and.b64  	%rd9258, %rd9240, %rd9257;
	xor.b64  	%rd9259, %rd9258, %rd8984;
	add.s64 	%rd9260, %rd9034, %rd8960;
	add.s64 	%rd9261, %rd9260, %rd46;
	add.s64 	%rd9262, %rd9261, %rd9259;
	add.s64 	%rd9263, %rd9262, %rd9256;
	add.s64 	%rd9264, %rd9263, %rd8971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18400,%dummy}, %rd9251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18401}, %rd9251;
	}
	shf.r.wrap.b32 	%r18402, %r18401, %r18400, 28;
	shf.r.wrap.b32 	%r18403, %r18400, %r18401, 28;
	mov.b64 	%rd9265, {%r18403, %r18402};
	shf.l.wrap.b32 	%r18404, %r18400, %r18401, 30;
	shf.l.wrap.b32 	%r18405, %r18401, %r18400, 30;
	mov.b64 	%rd9266, {%r18405, %r18404};
	xor.b64  	%rd9267, %rd9266, %rd9265;
	shf.l.wrap.b32 	%r18406, %r18400, %r18401, 25;
	shf.l.wrap.b32 	%r18407, %r18401, %r18400, 25;
	mov.b64 	%rd9268, {%r18407, %r18406};
	xor.b64  	%rd9269, %rd9267, %rd9268;
	and.b64  	%rd9270, %rd9251, %rd9227;
	xor.b64  	%rd9271, %rd9251, %rd9227;
	and.b64  	%rd9272, %rd9271, %rd8995;
	or.b64  	%rd9273, %rd9272, %rd9270;
	add.s64 	%rd9274, %rd9263, %rd9273;
	add.s64 	%rd9275, %rd9274, %rd9269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18408,%dummy}, %rd9264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18409}, %rd9264;
	}
	shf.r.wrap.b32 	%r18410, %r18409, %r18408, 14;
	shf.r.wrap.b32 	%r18411, %r18408, %r18409, 14;
	mov.b64 	%rd9276, {%r18411, %r18410};
	shf.r.wrap.b32 	%r18412, %r18409, %r18408, 18;
	shf.r.wrap.b32 	%r18413, %r18408, %r18409, 18;
	mov.b64 	%rd9277, {%r18413, %r18412};
	xor.b64  	%rd9278, %rd9277, %rd9276;
	shf.l.wrap.b32 	%r18414, %r18408, %r18409, 23;
	shf.l.wrap.b32 	%r18415, %r18409, %r18408, 23;
	mov.b64 	%rd9279, {%r18415, %r18414};
	xor.b64  	%rd9280, %rd9278, %rd9279;
	xor.b64  	%rd9281, %rd9240, %rd9216;
	and.b64  	%rd9282, %rd9264, %rd9281;
	xor.b64  	%rd9283, %rd9282, %rd9216;
	add.s64 	%rd9284, %rd9047, %rd8984;
	add.s64 	%rd9285, %rd9284, %rd47;
	add.s64 	%rd9286, %rd9285, %rd9283;
	add.s64 	%rd9287, %rd9286, %rd9280;
	add.s64 	%rd9288, %rd9287, %rd8995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18416,%dummy}, %rd9275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18417}, %rd9275;
	}
	shf.r.wrap.b32 	%r18418, %r18417, %r18416, 28;
	shf.r.wrap.b32 	%r18419, %r18416, %r18417, 28;
	mov.b64 	%rd9289, {%r18419, %r18418};
	shf.l.wrap.b32 	%r18420, %r18416, %r18417, 30;
	shf.l.wrap.b32 	%r18421, %r18417, %r18416, 30;
	mov.b64 	%rd9290, {%r18421, %r18420};
	xor.b64  	%rd9291, %rd9290, %rd9289;
	shf.l.wrap.b32 	%r18422, %r18416, %r18417, 25;
	shf.l.wrap.b32 	%r18423, %r18417, %r18416, 25;
	mov.b64 	%rd9292, {%r18423, %r18422};
	xor.b64  	%rd9293, %rd9291, %rd9292;
	and.b64  	%rd9294, %rd9275, %rd9251;
	xor.b64  	%rd9295, %rd9275, %rd9251;
	and.b64  	%rd9296, %rd9295, %rd9227;
	or.b64  	%rd9297, %rd9296, %rd9294;
	add.s64 	%rd9298, %rd9287, %rd9297;
	add.s64 	%rd9299, %rd9298, %rd9293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18424,%dummy}, %rd9288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18425}, %rd9288;
	}
	shf.r.wrap.b32 	%r18426, %r18425, %r18424, 14;
	shf.r.wrap.b32 	%r18427, %r18424, %r18425, 14;
	mov.b64 	%rd9300, {%r18427, %r18426};
	shf.r.wrap.b32 	%r18428, %r18425, %r18424, 18;
	shf.r.wrap.b32 	%r18429, %r18424, %r18425, 18;
	mov.b64 	%rd9301, {%r18429, %r18428};
	xor.b64  	%rd9302, %rd9301, %rd9300;
	shf.l.wrap.b32 	%r18430, %r18424, %r18425, 23;
	shf.l.wrap.b32 	%r18431, %r18425, %r18424, 23;
	mov.b64 	%rd9303, {%r18431, %r18430};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	xor.b64  	%rd9305, %rd9264, %rd9240;
	and.b64  	%rd9306, %rd9288, %rd9305;
	xor.b64  	%rd9307, %rd9306, %rd9240;
	add.s64 	%rd9308, %rd9216, %rd9060;
	add.s64 	%rd9309, %rd9308, %rd48;
	add.s64 	%rd9310, %rd9309, %rd9307;
	add.s64 	%rd9311, %rd9310, %rd9304;
	add.s64 	%rd9312, %rd9311, %rd9227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18432,%dummy}, %rd9299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18433}, %rd9299;
	}
	shf.r.wrap.b32 	%r18434, %r18433, %r18432, 28;
	shf.r.wrap.b32 	%r18435, %r18432, %r18433, 28;
	mov.b64 	%rd9313, {%r18435, %r18434};
	shf.l.wrap.b32 	%r18436, %r18432, %r18433, 30;
	shf.l.wrap.b32 	%r18437, %r18433, %r18432, 30;
	mov.b64 	%rd9314, {%r18437, %r18436};
	xor.b64  	%rd9315, %rd9314, %rd9313;
	shf.l.wrap.b32 	%r18438, %r18432, %r18433, 25;
	shf.l.wrap.b32 	%r18439, %r18433, %r18432, 25;
	mov.b64 	%rd9316, {%r18439, %r18438};
	xor.b64  	%rd9317, %rd9315, %rd9316;
	and.b64  	%rd9318, %rd9299, %rd9275;
	xor.b64  	%rd9319, %rd9299, %rd9275;
	and.b64  	%rd9320, %rd9319, %rd9251;
	or.b64  	%rd9321, %rd9320, %rd9318;
	add.s64 	%rd9322, %rd9311, %rd9321;
	add.s64 	%rd9323, %rd9322, %rd9317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18440,%dummy}, %rd9312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18441}, %rd9312;
	}
	shf.r.wrap.b32 	%r18442, %r18441, %r18440, 14;
	shf.r.wrap.b32 	%r18443, %r18440, %r18441, 14;
	mov.b64 	%rd9324, {%r18443, %r18442};
	shf.r.wrap.b32 	%r18444, %r18441, %r18440, 18;
	shf.r.wrap.b32 	%r18445, %r18440, %r18441, 18;
	mov.b64 	%rd9325, {%r18445, %r18444};
	xor.b64  	%rd9326, %rd9325, %rd9324;
	shf.l.wrap.b32 	%r18446, %r18440, %r18441, 23;
	shf.l.wrap.b32 	%r18447, %r18441, %r18440, 23;
	mov.b64 	%rd9327, {%r18447, %r18446};
	xor.b64  	%rd9328, %rd9326, %rd9327;
	xor.b64  	%rd9329, %rd9288, %rd9264;
	and.b64  	%rd9330, %rd9312, %rd9329;
	xor.b64  	%rd9331, %rd9330, %rd9264;
	add.s64 	%rd9332, %rd9240, %rd9073;
	add.s64 	%rd9333, %rd9332, %rd49;
	add.s64 	%rd9334, %rd9333, %rd9331;
	add.s64 	%rd9335, %rd9334, %rd9328;
	add.s64 	%rd9336, %rd9335, %rd9251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18448,%dummy}, %rd9323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18449}, %rd9323;
	}
	shf.r.wrap.b32 	%r18450, %r18449, %r18448, 28;
	shf.r.wrap.b32 	%r18451, %r18448, %r18449, 28;
	mov.b64 	%rd9337, {%r18451, %r18450};
	shf.l.wrap.b32 	%r18452, %r18448, %r18449, 30;
	shf.l.wrap.b32 	%r18453, %r18449, %r18448, 30;
	mov.b64 	%rd9338, {%r18453, %r18452};
	xor.b64  	%rd9339, %rd9338, %rd9337;
	shf.l.wrap.b32 	%r18454, %r18448, %r18449, 25;
	shf.l.wrap.b32 	%r18455, %r18449, %r18448, 25;
	mov.b64 	%rd9340, {%r18455, %r18454};
	xor.b64  	%rd9341, %rd9339, %rd9340;
	and.b64  	%rd9342, %rd9323, %rd9299;
	xor.b64  	%rd9343, %rd9323, %rd9299;
	and.b64  	%rd9344, %rd9343, %rd9275;
	or.b64  	%rd9345, %rd9344, %rd9342;
	add.s64 	%rd9346, %rd9335, %rd9345;
	add.s64 	%rd9347, %rd9346, %rd9341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18456,%dummy}, %rd9336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18457}, %rd9336;
	}
	shf.r.wrap.b32 	%r18458, %r18457, %r18456, 14;
	shf.r.wrap.b32 	%r18459, %r18456, %r18457, 14;
	mov.b64 	%rd9348, {%r18459, %r18458};
	shf.r.wrap.b32 	%r18460, %r18457, %r18456, 18;
	shf.r.wrap.b32 	%r18461, %r18456, %r18457, 18;
	mov.b64 	%rd9349, {%r18461, %r18460};
	xor.b64  	%rd9350, %rd9349, %rd9348;
	shf.l.wrap.b32 	%r18462, %r18456, %r18457, 23;
	shf.l.wrap.b32 	%r18463, %r18457, %r18456, 23;
	mov.b64 	%rd9351, {%r18463, %r18462};
	xor.b64  	%rd9352, %rd9350, %rd9351;
	xor.b64  	%rd9353, %rd9312, %rd9288;
	and.b64  	%rd9354, %rd9336, %rd9353;
	xor.b64  	%rd9355, %rd9354, %rd9288;
	add.s64 	%rd9356, %rd9264, %rd9086;
	add.s64 	%rd9357, %rd9356, %rd50;
	add.s64 	%rd9358, %rd9357, %rd9355;
	add.s64 	%rd9359, %rd9358, %rd9352;
	add.s64 	%rd9360, %rd9359, %rd9275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18464,%dummy}, %rd9347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18465}, %rd9347;
	}
	shf.r.wrap.b32 	%r18466, %r18465, %r18464, 28;
	shf.r.wrap.b32 	%r18467, %r18464, %r18465, 28;
	mov.b64 	%rd9361, {%r18467, %r18466};
	shf.l.wrap.b32 	%r18468, %r18464, %r18465, 30;
	shf.l.wrap.b32 	%r18469, %r18465, %r18464, 30;
	mov.b64 	%rd9362, {%r18469, %r18468};
	xor.b64  	%rd9363, %rd9362, %rd9361;
	shf.l.wrap.b32 	%r18470, %r18464, %r18465, 25;
	shf.l.wrap.b32 	%r18471, %r18465, %r18464, 25;
	mov.b64 	%rd9364, {%r18471, %r18470};
	xor.b64  	%rd9365, %rd9363, %rd9364;
	and.b64  	%rd9366, %rd9347, %rd9323;
	xor.b64  	%rd9367, %rd9347, %rd9323;
	and.b64  	%rd9368, %rd9367, %rd9299;
	or.b64  	%rd9369, %rd9368, %rd9366;
	add.s64 	%rd9370, %rd9359, %rd9369;
	add.s64 	%rd9371, %rd9370, %rd9365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18472,%dummy}, %rd9360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18473}, %rd9360;
	}
	shf.r.wrap.b32 	%r18474, %r18473, %r18472, 14;
	shf.r.wrap.b32 	%r18475, %r18472, %r18473, 14;
	mov.b64 	%rd9372, {%r18475, %r18474};
	shf.r.wrap.b32 	%r18476, %r18473, %r18472, 18;
	shf.r.wrap.b32 	%r18477, %r18472, %r18473, 18;
	mov.b64 	%rd9373, {%r18477, %r18476};
	xor.b64  	%rd9374, %rd9373, %rd9372;
	shf.l.wrap.b32 	%r18478, %r18472, %r18473, 23;
	shf.l.wrap.b32 	%r18479, %r18473, %r18472, 23;
	mov.b64 	%rd9375, {%r18479, %r18478};
	xor.b64  	%rd9376, %rd9374, %rd9375;
	xor.b64  	%rd9377, %rd9336, %rd9312;
	and.b64  	%rd9378, %rd9360, %rd9377;
	xor.b64  	%rd9379, %rd9378, %rd9312;
	add.s64 	%rd9380, %rd9288, %rd9099;
	add.s64 	%rd9381, %rd9380, %rd51;
	add.s64 	%rd9382, %rd9381, %rd9379;
	add.s64 	%rd9383, %rd9382, %rd9376;
	add.s64 	%rd9384, %rd9383, %rd9299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18480,%dummy}, %rd9371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18481}, %rd9371;
	}
	shf.r.wrap.b32 	%r18482, %r18481, %r18480, 28;
	shf.r.wrap.b32 	%r18483, %r18480, %r18481, 28;
	mov.b64 	%rd9385, {%r18483, %r18482};
	shf.l.wrap.b32 	%r18484, %r18480, %r18481, 30;
	shf.l.wrap.b32 	%r18485, %r18481, %r18480, 30;
	mov.b64 	%rd9386, {%r18485, %r18484};
	xor.b64  	%rd9387, %rd9386, %rd9385;
	shf.l.wrap.b32 	%r18486, %r18480, %r18481, 25;
	shf.l.wrap.b32 	%r18487, %r18481, %r18480, 25;
	mov.b64 	%rd9388, {%r18487, %r18486};
	xor.b64  	%rd9389, %rd9387, %rd9388;
	and.b64  	%rd9390, %rd9371, %rd9347;
	xor.b64  	%rd9391, %rd9371, %rd9347;
	and.b64  	%rd9392, %rd9391, %rd9323;
	or.b64  	%rd9393, %rd9392, %rd9390;
	add.s64 	%rd9394, %rd9383, %rd9393;
	add.s64 	%rd9395, %rd9394, %rd9389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18488,%dummy}, %rd9384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18489}, %rd9384;
	}
	shf.r.wrap.b32 	%r18490, %r18489, %r18488, 14;
	shf.r.wrap.b32 	%r18491, %r18488, %r18489, 14;
	mov.b64 	%rd9396, {%r18491, %r18490};
	shf.r.wrap.b32 	%r18492, %r18489, %r18488, 18;
	shf.r.wrap.b32 	%r18493, %r18488, %r18489, 18;
	mov.b64 	%rd9397, {%r18493, %r18492};
	xor.b64  	%rd9398, %rd9397, %rd9396;
	shf.l.wrap.b32 	%r18494, %r18488, %r18489, 23;
	shf.l.wrap.b32 	%r18495, %r18489, %r18488, 23;
	mov.b64 	%rd9399, {%r18495, %r18494};
	xor.b64  	%rd9400, %rd9398, %rd9399;
	xor.b64  	%rd9401, %rd9360, %rd9336;
	and.b64  	%rd9402, %rd9384, %rd9401;
	xor.b64  	%rd9403, %rd9402, %rd9336;
	add.s64 	%rd9404, %rd9312, %rd9112;
	add.s64 	%rd9405, %rd9404, %rd52;
	add.s64 	%rd9406, %rd9405, %rd9403;
	add.s64 	%rd9407, %rd9406, %rd9400;
	add.s64 	%rd9408, %rd9407, %rd9323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18496,%dummy}, %rd9395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18497}, %rd9395;
	}
	shf.r.wrap.b32 	%r18498, %r18497, %r18496, 28;
	shf.r.wrap.b32 	%r18499, %r18496, %r18497, 28;
	mov.b64 	%rd9409, {%r18499, %r18498};
	shf.l.wrap.b32 	%r18500, %r18496, %r18497, 30;
	shf.l.wrap.b32 	%r18501, %r18497, %r18496, 30;
	mov.b64 	%rd9410, {%r18501, %r18500};
	xor.b64  	%rd9411, %rd9410, %rd9409;
	shf.l.wrap.b32 	%r18502, %r18496, %r18497, 25;
	shf.l.wrap.b32 	%r18503, %r18497, %r18496, 25;
	mov.b64 	%rd9412, {%r18503, %r18502};
	xor.b64  	%rd9413, %rd9411, %rd9412;
	and.b64  	%rd9414, %rd9395, %rd9371;
	xor.b64  	%rd9415, %rd9395, %rd9371;
	and.b64  	%rd9416, %rd9415, %rd9347;
	or.b64  	%rd9417, %rd9416, %rd9414;
	add.s64 	%rd9418, %rd9407, %rd9417;
	add.s64 	%rd9419, %rd9418, %rd9413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18504,%dummy}, %rd9408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18505}, %rd9408;
	}
	shf.r.wrap.b32 	%r18506, %r18505, %r18504, 14;
	shf.r.wrap.b32 	%r18507, %r18504, %r18505, 14;
	mov.b64 	%rd9420, {%r18507, %r18506};
	shf.r.wrap.b32 	%r18508, %r18505, %r18504, 18;
	shf.r.wrap.b32 	%r18509, %r18504, %r18505, 18;
	mov.b64 	%rd9421, {%r18509, %r18508};
	xor.b64  	%rd9422, %rd9421, %rd9420;
	shf.l.wrap.b32 	%r18510, %r18504, %r18505, 23;
	shf.l.wrap.b32 	%r18511, %r18505, %r18504, 23;
	mov.b64 	%rd9423, {%r18511, %r18510};
	xor.b64  	%rd9424, %rd9422, %rd9423;
	xor.b64  	%rd9425, %rd9384, %rd9360;
	and.b64  	%rd9426, %rd9408, %rd9425;
	xor.b64  	%rd9427, %rd9426, %rd9360;
	add.s64 	%rd9428, %rd9336, %rd9125;
	add.s64 	%rd9429, %rd9428, %rd53;
	add.s64 	%rd9430, %rd9429, %rd9427;
	add.s64 	%rd9431, %rd9430, %rd9424;
	add.s64 	%rd9432, %rd9431, %rd9347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18512,%dummy}, %rd9419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18513}, %rd9419;
	}
	shf.r.wrap.b32 	%r18514, %r18513, %r18512, 28;
	shf.r.wrap.b32 	%r18515, %r18512, %r18513, 28;
	mov.b64 	%rd9433, {%r18515, %r18514};
	shf.l.wrap.b32 	%r18516, %r18512, %r18513, 30;
	shf.l.wrap.b32 	%r18517, %r18513, %r18512, 30;
	mov.b64 	%rd9434, {%r18517, %r18516};
	xor.b64  	%rd9435, %rd9434, %rd9433;
	shf.l.wrap.b32 	%r18518, %r18512, %r18513, 25;
	shf.l.wrap.b32 	%r18519, %r18513, %r18512, 25;
	mov.b64 	%rd9436, {%r18519, %r18518};
	xor.b64  	%rd9437, %rd9435, %rd9436;
	and.b64  	%rd9438, %rd9419, %rd9395;
	xor.b64  	%rd9439, %rd9419, %rd9395;
	and.b64  	%rd9440, %rd9439, %rd9371;
	or.b64  	%rd9441, %rd9440, %rd9438;
	add.s64 	%rd9442, %rd9431, %rd9441;
	add.s64 	%rd9443, %rd9442, %rd9437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18520,%dummy}, %rd9432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18521}, %rd9432;
	}
	shf.r.wrap.b32 	%r18522, %r18521, %r18520, 14;
	shf.r.wrap.b32 	%r18523, %r18520, %r18521, 14;
	mov.b64 	%rd9444, {%r18523, %r18522};
	shf.r.wrap.b32 	%r18524, %r18521, %r18520, 18;
	shf.r.wrap.b32 	%r18525, %r18520, %r18521, 18;
	mov.b64 	%rd9445, {%r18525, %r18524};
	xor.b64  	%rd9446, %rd9445, %rd9444;
	shf.l.wrap.b32 	%r18526, %r18520, %r18521, 23;
	shf.l.wrap.b32 	%r18527, %r18521, %r18520, 23;
	mov.b64 	%rd9447, {%r18527, %r18526};
	xor.b64  	%rd9448, %rd9446, %rd9447;
	xor.b64  	%rd9449, %rd9408, %rd9384;
	and.b64  	%rd9450, %rd9432, %rd9449;
	xor.b64  	%rd9451, %rd9450, %rd9384;
	add.s64 	%rd9452, %rd9360, %rd9138;
	add.s64 	%rd9453, %rd9452, %rd54;
	add.s64 	%rd9454, %rd9453, %rd9451;
	add.s64 	%rd9455, %rd9454, %rd9448;
	add.s64 	%rd9456, %rd9455, %rd9371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18528,%dummy}, %rd9443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18529}, %rd9443;
	}
	shf.r.wrap.b32 	%r18530, %r18529, %r18528, 28;
	shf.r.wrap.b32 	%r18531, %r18528, %r18529, 28;
	mov.b64 	%rd9457, {%r18531, %r18530};
	shf.l.wrap.b32 	%r18532, %r18528, %r18529, 30;
	shf.l.wrap.b32 	%r18533, %r18529, %r18528, 30;
	mov.b64 	%rd9458, {%r18533, %r18532};
	xor.b64  	%rd9459, %rd9458, %rd9457;
	shf.l.wrap.b32 	%r18534, %r18528, %r18529, 25;
	shf.l.wrap.b32 	%r18535, %r18529, %r18528, 25;
	mov.b64 	%rd9460, {%r18535, %r18534};
	xor.b64  	%rd9461, %rd9459, %rd9460;
	and.b64  	%rd9462, %rd9443, %rd9419;
	xor.b64  	%rd9463, %rd9443, %rd9419;
	and.b64  	%rd9464, %rd9463, %rd9395;
	or.b64  	%rd9465, %rd9464, %rd9462;
	add.s64 	%rd9466, %rd9455, %rd9465;
	add.s64 	%rd9467, %rd9466, %rd9461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18536,%dummy}, %rd9456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18537}, %rd9456;
	}
	shf.r.wrap.b32 	%r18538, %r18537, %r18536, 14;
	shf.r.wrap.b32 	%r18539, %r18536, %r18537, 14;
	mov.b64 	%rd9468, {%r18539, %r18538};
	shf.r.wrap.b32 	%r18540, %r18537, %r18536, 18;
	shf.r.wrap.b32 	%r18541, %r18536, %r18537, 18;
	mov.b64 	%rd9469, {%r18541, %r18540};
	xor.b64  	%rd9470, %rd9469, %rd9468;
	shf.l.wrap.b32 	%r18542, %r18536, %r18537, 23;
	shf.l.wrap.b32 	%r18543, %r18537, %r18536, 23;
	mov.b64 	%rd9471, {%r18543, %r18542};
	xor.b64  	%rd9472, %rd9470, %rd9471;
	xor.b64  	%rd9473, %rd9432, %rd9408;
	and.b64  	%rd9474, %rd9456, %rd9473;
	xor.b64  	%rd9475, %rd9474, %rd9408;
	add.s64 	%rd9476, %rd9384, %rd9151;
	add.s64 	%rd9477, %rd9476, %rd55;
	add.s64 	%rd9478, %rd9477, %rd9475;
	add.s64 	%rd9479, %rd9478, %rd9472;
	add.s64 	%rd9480, %rd9479, %rd9395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18544,%dummy}, %rd9467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18545}, %rd9467;
	}
	shf.r.wrap.b32 	%r18546, %r18545, %r18544, 28;
	shf.r.wrap.b32 	%r18547, %r18544, %r18545, 28;
	mov.b64 	%rd9481, {%r18547, %r18546};
	shf.l.wrap.b32 	%r18548, %r18544, %r18545, 30;
	shf.l.wrap.b32 	%r18549, %r18545, %r18544, 30;
	mov.b64 	%rd9482, {%r18549, %r18548};
	xor.b64  	%rd9483, %rd9482, %rd9481;
	shf.l.wrap.b32 	%r18550, %r18544, %r18545, 25;
	shf.l.wrap.b32 	%r18551, %r18545, %r18544, 25;
	mov.b64 	%rd9484, {%r18551, %r18550};
	xor.b64  	%rd9485, %rd9483, %rd9484;
	and.b64  	%rd9486, %rd9467, %rd9443;
	xor.b64  	%rd9487, %rd9467, %rd9443;
	and.b64  	%rd9488, %rd9487, %rd9419;
	or.b64  	%rd9489, %rd9488, %rd9486;
	add.s64 	%rd9490, %rd9479, %rd9489;
	add.s64 	%rd9491, %rd9490, %rd9485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18552,%dummy}, %rd9480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18553}, %rd9480;
	}
	shf.r.wrap.b32 	%r18554, %r18553, %r18552, 14;
	shf.r.wrap.b32 	%r18555, %r18552, %r18553, 14;
	mov.b64 	%rd9492, {%r18555, %r18554};
	shf.r.wrap.b32 	%r18556, %r18553, %r18552, 18;
	shf.r.wrap.b32 	%r18557, %r18552, %r18553, 18;
	mov.b64 	%rd9493, {%r18557, %r18556};
	xor.b64  	%rd9494, %rd9493, %rd9492;
	shf.l.wrap.b32 	%r18558, %r18552, %r18553, 23;
	shf.l.wrap.b32 	%r18559, %r18553, %r18552, 23;
	mov.b64 	%rd9495, {%r18559, %r18558};
	xor.b64  	%rd9496, %rd9494, %rd9495;
	xor.b64  	%rd9497, %rd9456, %rd9432;
	and.b64  	%rd9498, %rd9480, %rd9497;
	xor.b64  	%rd9499, %rd9498, %rd9432;
	add.s64 	%rd9500, %rd9408, %rd9164;
	add.s64 	%rd9501, %rd9500, %rd56;
	add.s64 	%rd9502, %rd9501, %rd9499;
	add.s64 	%rd9503, %rd9502, %rd9496;
	add.s64 	%rd9504, %rd9503, %rd9419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18560,%dummy}, %rd9491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18561}, %rd9491;
	}
	shf.r.wrap.b32 	%r18562, %r18561, %r18560, 28;
	shf.r.wrap.b32 	%r18563, %r18560, %r18561, 28;
	mov.b64 	%rd9505, {%r18563, %r18562};
	shf.l.wrap.b32 	%r18564, %r18560, %r18561, 30;
	shf.l.wrap.b32 	%r18565, %r18561, %r18560, 30;
	mov.b64 	%rd9506, {%r18565, %r18564};
	xor.b64  	%rd9507, %rd9506, %rd9505;
	shf.l.wrap.b32 	%r18566, %r18560, %r18561, 25;
	shf.l.wrap.b32 	%r18567, %r18561, %r18560, 25;
	mov.b64 	%rd9508, {%r18567, %r18566};
	xor.b64  	%rd9509, %rd9507, %rd9508;
	and.b64  	%rd9510, %rd9491, %rd9467;
	xor.b64  	%rd9511, %rd9491, %rd9467;
	and.b64  	%rd9512, %rd9511, %rd9443;
	or.b64  	%rd9513, %rd9512, %rd9510;
	add.s64 	%rd9514, %rd9503, %rd9513;
	add.s64 	%rd9515, %rd9514, %rd9509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18568,%dummy}, %rd9504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18569}, %rd9504;
	}
	shf.r.wrap.b32 	%r18570, %r18569, %r18568, 14;
	shf.r.wrap.b32 	%r18571, %r18568, %r18569, 14;
	mov.b64 	%rd9516, {%r18571, %r18570};
	shf.r.wrap.b32 	%r18572, %r18569, %r18568, 18;
	shf.r.wrap.b32 	%r18573, %r18568, %r18569, 18;
	mov.b64 	%rd9517, {%r18573, %r18572};
	xor.b64  	%rd9518, %rd9517, %rd9516;
	shf.l.wrap.b32 	%r18574, %r18568, %r18569, 23;
	shf.l.wrap.b32 	%r18575, %r18569, %r18568, 23;
	mov.b64 	%rd9519, {%r18575, %r18574};
	xor.b64  	%rd9520, %rd9518, %rd9519;
	xor.b64  	%rd9521, %rd9480, %rd9456;
	and.b64  	%rd9522, %rd9504, %rd9521;
	xor.b64  	%rd9523, %rd9522, %rd9456;
	add.s64 	%rd9524, %rd9432, %rd9177;
	add.s64 	%rd9525, %rd9524, %rd57;
	add.s64 	%rd9526, %rd9525, %rd9523;
	add.s64 	%rd9527, %rd9526, %rd9520;
	add.s64 	%rd9528, %rd9527, %rd9443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18576,%dummy}, %rd9515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18577}, %rd9515;
	}
	shf.r.wrap.b32 	%r18578, %r18577, %r18576, 28;
	shf.r.wrap.b32 	%r18579, %r18576, %r18577, 28;
	mov.b64 	%rd9529, {%r18579, %r18578};
	shf.l.wrap.b32 	%r18580, %r18576, %r18577, 30;
	shf.l.wrap.b32 	%r18581, %r18577, %r18576, 30;
	mov.b64 	%rd9530, {%r18581, %r18580};
	xor.b64  	%rd9531, %rd9530, %rd9529;
	shf.l.wrap.b32 	%r18582, %r18576, %r18577, 25;
	shf.l.wrap.b32 	%r18583, %r18577, %r18576, 25;
	mov.b64 	%rd9532, {%r18583, %r18582};
	xor.b64  	%rd9533, %rd9531, %rd9532;
	and.b64  	%rd9534, %rd9515, %rd9491;
	xor.b64  	%rd9535, %rd9515, %rd9491;
	and.b64  	%rd9536, %rd9535, %rd9467;
	or.b64  	%rd9537, %rd9536, %rd9534;
	add.s64 	%rd9538, %rd9527, %rd9537;
	add.s64 	%rd9539, %rd9538, %rd9533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18584,%dummy}, %rd9528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18585}, %rd9528;
	}
	shf.r.wrap.b32 	%r18586, %r18585, %r18584, 14;
	shf.r.wrap.b32 	%r18587, %r18584, %r18585, 14;
	mov.b64 	%rd9540, {%r18587, %r18586};
	shf.r.wrap.b32 	%r18588, %r18585, %r18584, 18;
	shf.r.wrap.b32 	%r18589, %r18584, %r18585, 18;
	mov.b64 	%rd9541, {%r18589, %r18588};
	xor.b64  	%rd9542, %rd9541, %rd9540;
	shf.l.wrap.b32 	%r18590, %r18584, %r18585, 23;
	shf.l.wrap.b32 	%r18591, %r18585, %r18584, 23;
	mov.b64 	%rd9543, {%r18591, %r18590};
	xor.b64  	%rd9544, %rd9542, %rd9543;
	xor.b64  	%rd9545, %rd9504, %rd9480;
	and.b64  	%rd9546, %rd9528, %rd9545;
	xor.b64  	%rd9547, %rd9546, %rd9480;
	add.s64 	%rd9548, %rd9456, %rd9190;
	add.s64 	%rd9549, %rd9548, %rd58;
	add.s64 	%rd9550, %rd9549, %rd9547;
	add.s64 	%rd9551, %rd9550, %rd9544;
	add.s64 	%rd9552, %rd9551, %rd9467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18592,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18593}, %rd9539;
	}
	shf.r.wrap.b32 	%r18594, %r18593, %r18592, 28;
	shf.r.wrap.b32 	%r18595, %r18592, %r18593, 28;
	mov.b64 	%rd9553, {%r18595, %r18594};
	shf.l.wrap.b32 	%r18596, %r18592, %r18593, 30;
	shf.l.wrap.b32 	%r18597, %r18593, %r18592, 30;
	mov.b64 	%rd9554, {%r18597, %r18596};
	xor.b64  	%rd9555, %rd9554, %rd9553;
	shf.l.wrap.b32 	%r18598, %r18592, %r18593, 25;
	shf.l.wrap.b32 	%r18599, %r18593, %r18592, 25;
	mov.b64 	%rd9556, {%r18599, %r18598};
	xor.b64  	%rd9557, %rd9555, %rd9556;
	and.b64  	%rd9558, %rd9539, %rd9515;
	xor.b64  	%rd9559, %rd9539, %rd9515;
	and.b64  	%rd9560, %rd9559, %rd9491;
	or.b64  	%rd9561, %rd9560, %rd9558;
	add.s64 	%rd9562, %rd9551, %rd9561;
	add.s64 	%rd9563, %rd9562, %rd9557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18600,%dummy}, %rd9552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18601}, %rd9552;
	}
	shf.r.wrap.b32 	%r18602, %r18601, %r18600, 14;
	shf.r.wrap.b32 	%r18603, %r18600, %r18601, 14;
	mov.b64 	%rd9564, {%r18603, %r18602};
	shf.r.wrap.b32 	%r18604, %r18601, %r18600, 18;
	shf.r.wrap.b32 	%r18605, %r18600, %r18601, 18;
	mov.b64 	%rd9565, {%r18605, %r18604};
	xor.b64  	%rd9566, %rd9565, %rd9564;
	shf.l.wrap.b32 	%r18606, %r18600, %r18601, 23;
	shf.l.wrap.b32 	%r18607, %r18601, %r18600, 23;
	mov.b64 	%rd9567, {%r18607, %r18606};
	xor.b64  	%rd9568, %rd9566, %rd9567;
	xor.b64  	%rd9569, %rd9528, %rd9504;
	and.b64  	%rd9570, %rd9552, %rd9569;
	xor.b64  	%rd9571, %rd9570, %rd9504;
	add.s64 	%rd9572, %rd9480, %rd9203;
	add.s64 	%rd9573, %rd9572, %rd59;
	add.s64 	%rd9574, %rd9573, %rd9571;
	add.s64 	%rd9575, %rd9574, %rd9568;
	add.s64 	%rd9576, %rd9575, %rd9491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18608,%dummy}, %rd9563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18609}, %rd9563;
	}
	shf.r.wrap.b32 	%r18610, %r18609, %r18608, 28;
	shf.r.wrap.b32 	%r18611, %r18608, %r18609, 28;
	mov.b64 	%rd9577, {%r18611, %r18610};
	shf.l.wrap.b32 	%r18612, %r18608, %r18609, 30;
	shf.l.wrap.b32 	%r18613, %r18609, %r18608, 30;
	mov.b64 	%rd9578, {%r18613, %r18612};
	xor.b64  	%rd9579, %rd9578, %rd9577;
	shf.l.wrap.b32 	%r18614, %r18608, %r18609, 25;
	shf.l.wrap.b32 	%r18615, %r18609, %r18608, 25;
	mov.b64 	%rd9580, {%r18615, %r18614};
	xor.b64  	%rd9581, %rd9579, %rd9580;
	and.b64  	%rd9582, %rd9563, %rd9539;
	xor.b64  	%rd9583, %rd9563, %rd9539;
	and.b64  	%rd9584, %rd9583, %rd9515;
	or.b64  	%rd9585, %rd9584, %rd9582;
	add.s64 	%rd9586, %rd9575, %rd9585;
	add.s64 	%rd9587, %rd9586, %rd9581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18616,%dummy}, %rd9190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18617}, %rd9190;
	}
	shf.r.wrap.b32 	%r18618, %r18617, %r18616, 19;
	shf.r.wrap.b32 	%r18619, %r18616, %r18617, 19;
	mov.b64 	%rd9588, {%r18619, %r18618};
	shf.l.wrap.b32 	%r18620, %r18616, %r18617, 3;
	shf.l.wrap.b32 	%r18621, %r18617, %r18616, 3;
	mov.b64 	%rd9589, {%r18621, %r18620};
	shr.u64 	%rd9590, %rd9190, 6;
	xor.b64  	%rd9591, %rd9588, %rd9590;
	xor.b64  	%rd9592, %rd9591, %rd9589;
	shf.r.wrap.b32 	%r18622, %r18211, %r18210, 1;
	shf.r.wrap.b32 	%r18623, %r18210, %r18211, 1;
	mov.b64 	%rd9593, {%r18623, %r18622};
	shf.r.wrap.b32 	%r18624, %r18211, %r18210, 8;
	shf.r.wrap.b32 	%r18625, %r18210, %r18211, 8;
	mov.b64 	%rd9594, {%r18625, %r18624};
	shr.u64 	%rd9595, %rd9021, 7;
	xor.b64  	%rd9596, %rd9593, %rd9595;
	xor.b64  	%rd9597, %rd9596, %rd9594;
	add.s64 	%rd9598, %rd9125, %rd9008;
	add.s64 	%rd9599, %rd9598, %rd9592;
	add.s64 	%rd9600, %rd9599, %rd9597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18626,%dummy}, %rd9203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18627}, %rd9203;
	}
	shf.r.wrap.b32 	%r18628, %r18627, %r18626, 19;
	shf.r.wrap.b32 	%r18629, %r18626, %r18627, 19;
	mov.b64 	%rd9601, {%r18629, %r18628};
	shf.l.wrap.b32 	%r18630, %r18626, %r18627, 3;
	shf.l.wrap.b32 	%r18631, %r18627, %r18626, 3;
	mov.b64 	%rd9602, {%r18631, %r18630};
	shr.u64 	%rd9603, %rd9203, 6;
	xor.b64  	%rd9604, %rd9601, %rd9603;
	xor.b64  	%rd9605, %rd9604, %rd9602;
	shf.r.wrap.b32 	%r18632, %r18223, %r18222, 1;
	shf.r.wrap.b32 	%r18633, %r18222, %r18223, 1;
	mov.b64 	%rd9606, {%r18633, %r18632};
	shf.r.wrap.b32 	%r18634, %r18223, %r18222, 8;
	shf.r.wrap.b32 	%r18635, %r18222, %r18223, 8;
	mov.b64 	%rd9607, {%r18635, %r18634};
	shr.u64 	%rd9608, %rd9034, 7;
	xor.b64  	%rd9609, %rd9606, %rd9608;
	xor.b64  	%rd9610, %rd9609, %rd9607;
	add.s64 	%rd9611, %rd9138, %rd9021;
	add.s64 	%rd9612, %rd9611, %rd9605;
	add.s64 	%rd9613, %rd9612, %rd9610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18636,%dummy}, %rd9600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18637}, %rd9600;
	}
	shf.r.wrap.b32 	%r18638, %r18637, %r18636, 19;
	shf.r.wrap.b32 	%r18639, %r18636, %r18637, 19;
	mov.b64 	%rd9614, {%r18639, %r18638};
	shf.l.wrap.b32 	%r18640, %r18636, %r18637, 3;
	shf.l.wrap.b32 	%r18641, %r18637, %r18636, 3;
	mov.b64 	%rd9615, {%r18641, %r18640};
	shr.u64 	%rd9616, %rd9600, 6;
	xor.b64  	%rd9617, %rd9614, %rd9616;
	xor.b64  	%rd9618, %rd9617, %rd9615;
	shf.r.wrap.b32 	%r18642, %r18235, %r18234, 1;
	shf.r.wrap.b32 	%r18643, %r18234, %r18235, 1;
	mov.b64 	%rd9619, {%r18643, %r18642};
	shf.r.wrap.b32 	%r18644, %r18235, %r18234, 8;
	shf.r.wrap.b32 	%r18645, %r18234, %r18235, 8;
	mov.b64 	%rd9620, {%r18645, %r18644};
	shr.u64 	%rd9621, %rd9047, 7;
	xor.b64  	%rd9622, %rd9619, %rd9621;
	xor.b64  	%rd9623, %rd9622, %rd9620;
	add.s64 	%rd9624, %rd9151, %rd9034;
	add.s64 	%rd9625, %rd9624, %rd9618;
	add.s64 	%rd9626, %rd9625, %rd9623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18646,%dummy}, %rd9613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18647}, %rd9613;
	}
	shf.r.wrap.b32 	%r18648, %r18647, %r18646, 19;
	shf.r.wrap.b32 	%r18649, %r18646, %r18647, 19;
	mov.b64 	%rd9627, {%r18649, %r18648};
	shf.l.wrap.b32 	%r18650, %r18646, %r18647, 3;
	shf.l.wrap.b32 	%r18651, %r18647, %r18646, 3;
	mov.b64 	%rd9628, {%r18651, %r18650};
	shr.u64 	%rd9629, %rd9613, 6;
	xor.b64  	%rd9630, %rd9627, %rd9629;
	xor.b64  	%rd9631, %rd9630, %rd9628;
	shf.r.wrap.b32 	%r18652, %r18247, %r18246, 1;
	shf.r.wrap.b32 	%r18653, %r18246, %r18247, 1;
	mov.b64 	%rd9632, {%r18653, %r18652};
	shf.r.wrap.b32 	%r18654, %r18247, %r18246, 8;
	shf.r.wrap.b32 	%r18655, %r18246, %r18247, 8;
	mov.b64 	%rd9633, {%r18655, %r18654};
	shr.u64 	%rd9634, %rd9060, 7;
	xor.b64  	%rd9635, %rd9632, %rd9634;
	xor.b64  	%rd9636, %rd9635, %rd9633;
	add.s64 	%rd9637, %rd9164, %rd9047;
	add.s64 	%rd9638, %rd9637, %rd9631;
	add.s64 	%rd9639, %rd9638, %rd9636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18656,%dummy}, %rd9626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18657}, %rd9626;
	}
	shf.r.wrap.b32 	%r18658, %r18657, %r18656, 19;
	shf.r.wrap.b32 	%r18659, %r18656, %r18657, 19;
	mov.b64 	%rd9640, {%r18659, %r18658};
	shf.l.wrap.b32 	%r18660, %r18656, %r18657, 3;
	shf.l.wrap.b32 	%r18661, %r18657, %r18656, 3;
	mov.b64 	%rd9641, {%r18661, %r18660};
	shr.u64 	%rd9642, %rd9626, 6;
	xor.b64  	%rd9643, %rd9640, %rd9642;
	xor.b64  	%rd9644, %rd9643, %rd9641;
	shf.r.wrap.b32 	%r18662, %r18259, %r18258, 1;
	shf.r.wrap.b32 	%r18663, %r18258, %r18259, 1;
	mov.b64 	%rd9645, {%r18663, %r18662};
	shf.r.wrap.b32 	%r18664, %r18259, %r18258, 8;
	shf.r.wrap.b32 	%r18665, %r18258, %r18259, 8;
	mov.b64 	%rd9646, {%r18665, %r18664};
	shr.u64 	%rd9647, %rd9073, 7;
	xor.b64  	%rd9648, %rd9645, %rd9647;
	xor.b64  	%rd9649, %rd9648, %rd9646;
	add.s64 	%rd9650, %rd9177, %rd9060;
	add.s64 	%rd9651, %rd9650, %rd9644;
	add.s64 	%rd9652, %rd9651, %rd9649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18666,%dummy}, %rd9639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18667}, %rd9639;
	}
	shf.r.wrap.b32 	%r18668, %r18667, %r18666, 19;
	shf.r.wrap.b32 	%r18669, %r18666, %r18667, 19;
	mov.b64 	%rd9653, {%r18669, %r18668};
	shf.l.wrap.b32 	%r18670, %r18666, %r18667, 3;
	shf.l.wrap.b32 	%r18671, %r18667, %r18666, 3;
	mov.b64 	%rd9654, {%r18671, %r18670};
	shr.u64 	%rd9655, %rd9639, 6;
	xor.b64  	%rd9656, %rd9653, %rd9655;
	xor.b64  	%rd9657, %rd9656, %rd9654;
	shf.r.wrap.b32 	%r18672, %r18271, %r18270, 1;
	shf.r.wrap.b32 	%r18673, %r18270, %r18271, 1;
	mov.b64 	%rd9658, {%r18673, %r18672};
	shf.r.wrap.b32 	%r18674, %r18271, %r18270, 8;
	shf.r.wrap.b32 	%r18675, %r18270, %r18271, 8;
	mov.b64 	%rd9659, {%r18675, %r18674};
	shr.u64 	%rd9660, %rd9086, 7;
	xor.b64  	%rd9661, %rd9658, %rd9660;
	xor.b64  	%rd9662, %rd9661, %rd9659;
	add.s64 	%rd9663, %rd9190, %rd9073;
	add.s64 	%rd9664, %rd9663, %rd9657;
	add.s64 	%rd9665, %rd9664, %rd9662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18676,%dummy}, %rd9652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18677}, %rd9652;
	}
	shf.r.wrap.b32 	%r18678, %r18677, %r18676, 19;
	shf.r.wrap.b32 	%r18679, %r18676, %r18677, 19;
	mov.b64 	%rd9666, {%r18679, %r18678};
	shf.l.wrap.b32 	%r18680, %r18676, %r18677, 3;
	shf.l.wrap.b32 	%r18681, %r18677, %r18676, 3;
	mov.b64 	%rd9667, {%r18681, %r18680};
	shr.u64 	%rd9668, %rd9652, 6;
	xor.b64  	%rd9669, %rd9666, %rd9668;
	xor.b64  	%rd9670, %rd9669, %rd9667;
	shf.r.wrap.b32 	%r18682, %r18283, %r18282, 1;
	shf.r.wrap.b32 	%r18683, %r18282, %r18283, 1;
	mov.b64 	%rd9671, {%r18683, %r18682};
	shf.r.wrap.b32 	%r18684, %r18283, %r18282, 8;
	shf.r.wrap.b32 	%r18685, %r18282, %r18283, 8;
	mov.b64 	%rd9672, {%r18685, %r18684};
	shr.u64 	%rd9673, %rd9099, 7;
	xor.b64  	%rd9674, %rd9671, %rd9673;
	xor.b64  	%rd9675, %rd9674, %rd9672;
	add.s64 	%rd9676, %rd9203, %rd9086;
	add.s64 	%rd9677, %rd9676, %rd9670;
	add.s64 	%rd9678, %rd9677, %rd9675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18686,%dummy}, %rd9665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18687}, %rd9665;
	}
	shf.r.wrap.b32 	%r18688, %r18687, %r18686, 19;
	shf.r.wrap.b32 	%r18689, %r18686, %r18687, 19;
	mov.b64 	%rd9679, {%r18689, %r18688};
	shf.l.wrap.b32 	%r18690, %r18686, %r18687, 3;
	shf.l.wrap.b32 	%r18691, %r18687, %r18686, 3;
	mov.b64 	%rd9680, {%r18691, %r18690};
	shr.u64 	%rd9681, %rd9665, 6;
	xor.b64  	%rd9682, %rd9679, %rd9681;
	xor.b64  	%rd9683, %rd9682, %rd9680;
	shf.r.wrap.b32 	%r18692, %r18295, %r18294, 1;
	shf.r.wrap.b32 	%r18693, %r18294, %r18295, 1;
	mov.b64 	%rd9684, {%r18693, %r18692};
	shf.r.wrap.b32 	%r18694, %r18295, %r18294, 8;
	shf.r.wrap.b32 	%r18695, %r18294, %r18295, 8;
	mov.b64 	%rd9685, {%r18695, %r18694};
	shr.u64 	%rd9686, %rd9112, 7;
	xor.b64  	%rd9687, %rd9684, %rd9686;
	xor.b64  	%rd9688, %rd9687, %rd9685;
	add.s64 	%rd9689, %rd9600, %rd9099;
	add.s64 	%rd9690, %rd9689, %rd9683;
	add.s64 	%rd9691, %rd9690, %rd9688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18696,%dummy}, %rd9678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18697}, %rd9678;
	}
	shf.r.wrap.b32 	%r18698, %r18697, %r18696, 19;
	shf.r.wrap.b32 	%r18699, %r18696, %r18697, 19;
	mov.b64 	%rd9692, {%r18699, %r18698};
	shf.l.wrap.b32 	%r18700, %r18696, %r18697, 3;
	shf.l.wrap.b32 	%r18701, %r18697, %r18696, 3;
	mov.b64 	%rd9693, {%r18701, %r18700};
	shr.u64 	%rd9694, %rd9678, 6;
	xor.b64  	%rd9695, %rd9692, %rd9694;
	xor.b64  	%rd9696, %rd9695, %rd9693;
	shf.r.wrap.b32 	%r18702, %r18307, %r18306, 1;
	shf.r.wrap.b32 	%r18703, %r18306, %r18307, 1;
	mov.b64 	%rd9697, {%r18703, %r18702};
	shf.r.wrap.b32 	%r18704, %r18307, %r18306, 8;
	shf.r.wrap.b32 	%r18705, %r18306, %r18307, 8;
	mov.b64 	%rd9698, {%r18705, %r18704};
	shr.u64 	%rd9699, %rd9125, 7;
	xor.b64  	%rd9700, %rd9697, %rd9699;
	xor.b64  	%rd9701, %rd9700, %rd9698;
	add.s64 	%rd9702, %rd9613, %rd9112;
	add.s64 	%rd9703, %rd9702, %rd9696;
	add.s64 	%rd9704, %rd9703, %rd9701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18706,%dummy}, %rd9691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18707}, %rd9691;
	}
	shf.r.wrap.b32 	%r18708, %r18707, %r18706, 19;
	shf.r.wrap.b32 	%r18709, %r18706, %r18707, 19;
	mov.b64 	%rd9705, {%r18709, %r18708};
	shf.l.wrap.b32 	%r18710, %r18706, %r18707, 3;
	shf.l.wrap.b32 	%r18711, %r18707, %r18706, 3;
	mov.b64 	%rd9706, {%r18711, %r18710};
	shr.u64 	%rd9707, %rd9691, 6;
	xor.b64  	%rd9708, %rd9705, %rd9707;
	xor.b64  	%rd9709, %rd9708, %rd9706;
	shf.r.wrap.b32 	%r18712, %r18319, %r18318, 1;
	shf.r.wrap.b32 	%r18713, %r18318, %r18319, 1;
	mov.b64 	%rd9710, {%r18713, %r18712};
	shf.r.wrap.b32 	%r18714, %r18319, %r18318, 8;
	shf.r.wrap.b32 	%r18715, %r18318, %r18319, 8;
	mov.b64 	%rd9711, {%r18715, %r18714};
	shr.u64 	%rd9712, %rd9138, 7;
	xor.b64  	%rd9713, %rd9710, %rd9712;
	xor.b64  	%rd9714, %rd9713, %rd9711;
	add.s64 	%rd9715, %rd9626, %rd9125;
	add.s64 	%rd9716, %rd9715, %rd9709;
	add.s64 	%rd9717, %rd9716, %rd9714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18716,%dummy}, %rd9704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18717}, %rd9704;
	}
	shf.r.wrap.b32 	%r18718, %r18717, %r18716, 19;
	shf.r.wrap.b32 	%r18719, %r18716, %r18717, 19;
	mov.b64 	%rd9718, {%r18719, %r18718};
	shf.l.wrap.b32 	%r18720, %r18716, %r18717, 3;
	shf.l.wrap.b32 	%r18721, %r18717, %r18716, 3;
	mov.b64 	%rd9719, {%r18721, %r18720};
	shr.u64 	%rd9720, %rd9704, 6;
	xor.b64  	%rd9721, %rd9718, %rd9720;
	xor.b64  	%rd9722, %rd9721, %rd9719;
	shf.r.wrap.b32 	%r18722, %r18331, %r18330, 1;
	shf.r.wrap.b32 	%r18723, %r18330, %r18331, 1;
	mov.b64 	%rd9723, {%r18723, %r18722};
	shf.r.wrap.b32 	%r18724, %r18331, %r18330, 8;
	shf.r.wrap.b32 	%r18725, %r18330, %r18331, 8;
	mov.b64 	%rd9724, {%r18725, %r18724};
	shr.u64 	%rd9725, %rd9151, 7;
	xor.b64  	%rd9726, %rd9723, %rd9725;
	xor.b64  	%rd9727, %rd9726, %rd9724;
	add.s64 	%rd9728, %rd9639, %rd9138;
	add.s64 	%rd9729, %rd9728, %rd9722;
	add.s64 	%rd9730, %rd9729, %rd9727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18726,%dummy}, %rd9717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18727}, %rd9717;
	}
	shf.r.wrap.b32 	%r18728, %r18727, %r18726, 19;
	shf.r.wrap.b32 	%r18729, %r18726, %r18727, 19;
	mov.b64 	%rd9731, {%r18729, %r18728};
	shf.l.wrap.b32 	%r18730, %r18726, %r18727, 3;
	shf.l.wrap.b32 	%r18731, %r18727, %r18726, 3;
	mov.b64 	%rd9732, {%r18731, %r18730};
	shr.u64 	%rd9733, %rd9717, 6;
	xor.b64  	%rd9734, %rd9731, %rd9733;
	xor.b64  	%rd9735, %rd9734, %rd9732;
	shf.r.wrap.b32 	%r18732, %r18341, %r18340, 1;
	shf.r.wrap.b32 	%r18733, %r18340, %r18341, 1;
	mov.b64 	%rd9736, {%r18733, %r18732};
	shf.r.wrap.b32 	%r18734, %r18341, %r18340, 8;
	shf.r.wrap.b32 	%r18735, %r18340, %r18341, 8;
	mov.b64 	%rd9737, {%r18735, %r18734};
	shr.u64 	%rd9738, %rd9164, 7;
	xor.b64  	%rd9739, %rd9736, %rd9738;
	xor.b64  	%rd9740, %rd9739, %rd9737;
	add.s64 	%rd9741, %rd9652, %rd9151;
	add.s64 	%rd9742, %rd9741, %rd9735;
	add.s64 	%rd9743, %rd9742, %rd9740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18736,%dummy}, %rd9730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18737}, %rd9730;
	}
	shf.r.wrap.b32 	%r18738, %r18737, %r18736, 19;
	shf.r.wrap.b32 	%r18739, %r18736, %r18737, 19;
	mov.b64 	%rd9744, {%r18739, %r18738};
	shf.l.wrap.b32 	%r18740, %r18736, %r18737, 3;
	shf.l.wrap.b32 	%r18741, %r18737, %r18736, 3;
	mov.b64 	%rd9745, {%r18741, %r18740};
	shr.u64 	%rd9746, %rd9730, 6;
	xor.b64  	%rd9747, %rd9744, %rd9746;
	xor.b64  	%rd9748, %rd9747, %rd9745;
	shf.r.wrap.b32 	%r18742, %r18351, %r18350, 1;
	shf.r.wrap.b32 	%r18743, %r18350, %r18351, 1;
	mov.b64 	%rd9749, {%r18743, %r18742};
	shf.r.wrap.b32 	%r18744, %r18351, %r18350, 8;
	shf.r.wrap.b32 	%r18745, %r18350, %r18351, 8;
	mov.b64 	%rd9750, {%r18745, %r18744};
	shr.u64 	%rd9751, %rd9177, 7;
	xor.b64  	%rd9752, %rd9749, %rd9751;
	xor.b64  	%rd9753, %rd9752, %rd9750;
	add.s64 	%rd9754, %rd9665, %rd9164;
	add.s64 	%rd9755, %rd9754, %rd9748;
	add.s64 	%rd9756, %rd9755, %rd9753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18746,%dummy}, %rd9743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18747}, %rd9743;
	}
	shf.r.wrap.b32 	%r18748, %r18747, %r18746, 19;
	shf.r.wrap.b32 	%r18749, %r18746, %r18747, 19;
	mov.b64 	%rd9757, {%r18749, %r18748};
	shf.l.wrap.b32 	%r18750, %r18746, %r18747, 3;
	shf.l.wrap.b32 	%r18751, %r18747, %r18746, 3;
	mov.b64 	%rd9758, {%r18751, %r18750};
	shr.u64 	%rd9759, %rd9743, 6;
	xor.b64  	%rd9760, %rd9757, %rd9759;
	xor.b64  	%rd9761, %rd9760, %rd9758;
	shf.r.wrap.b32 	%r18752, %r18617, %r18616, 1;
	shf.r.wrap.b32 	%r18753, %r18616, %r18617, 1;
	mov.b64 	%rd9762, {%r18753, %r18752};
	shf.r.wrap.b32 	%r18754, %r18617, %r18616, 8;
	shf.r.wrap.b32 	%r18755, %r18616, %r18617, 8;
	mov.b64 	%rd9763, {%r18755, %r18754};
	shr.u64 	%rd9764, %rd9190, 7;
	xor.b64  	%rd9765, %rd9762, %rd9764;
	xor.b64  	%rd9766, %rd9765, %rd9763;
	add.s64 	%rd9767, %rd9678, %rd9177;
	add.s64 	%rd9768, %rd9767, %rd9761;
	add.s64 	%rd9769, %rd9768, %rd9766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18756,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18757}, %rd9756;
	}
	shf.r.wrap.b32 	%r18758, %r18757, %r18756, 19;
	shf.r.wrap.b32 	%r18759, %r18756, %r18757, 19;
	mov.b64 	%rd9770, {%r18759, %r18758};
	shf.l.wrap.b32 	%r18760, %r18756, %r18757, 3;
	shf.l.wrap.b32 	%r18761, %r18757, %r18756, 3;
	mov.b64 	%rd9771, {%r18761, %r18760};
	shr.u64 	%rd9772, %rd9756, 6;
	xor.b64  	%rd9773, %rd9770, %rd9772;
	xor.b64  	%rd9774, %rd9773, %rd9771;
	shf.r.wrap.b32 	%r18762, %r18627, %r18626, 1;
	shf.r.wrap.b32 	%r18763, %r18626, %r18627, 1;
	mov.b64 	%rd9775, {%r18763, %r18762};
	shf.r.wrap.b32 	%r18764, %r18627, %r18626, 8;
	shf.r.wrap.b32 	%r18765, %r18626, %r18627, 8;
	mov.b64 	%rd9776, {%r18765, %r18764};
	shr.u64 	%rd9777, %rd9203, 7;
	xor.b64  	%rd9778, %rd9775, %rd9777;
	xor.b64  	%rd9779, %rd9778, %rd9776;
	add.s64 	%rd9780, %rd9691, %rd9190;
	add.s64 	%rd9781, %rd9780, %rd9774;
	add.s64 	%rd9782, %rd9781, %rd9779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18766,%dummy}, %rd9769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18767}, %rd9769;
	}
	shf.r.wrap.b32 	%r18768, %r18767, %r18766, 19;
	shf.r.wrap.b32 	%r18769, %r18766, %r18767, 19;
	mov.b64 	%rd9783, {%r18769, %r18768};
	shf.l.wrap.b32 	%r18770, %r18766, %r18767, 3;
	shf.l.wrap.b32 	%r18771, %r18767, %r18766, 3;
	mov.b64 	%rd9784, {%r18771, %r18770};
	shr.u64 	%rd9785, %rd9769, 6;
	xor.b64  	%rd9786, %rd9783, %rd9785;
	xor.b64  	%rd9787, %rd9786, %rd9784;
	shf.r.wrap.b32 	%r18772, %r18637, %r18636, 1;
	shf.r.wrap.b32 	%r18773, %r18636, %r18637, 1;
	mov.b64 	%rd9788, {%r18773, %r18772};
	shf.r.wrap.b32 	%r18774, %r18637, %r18636, 8;
	shf.r.wrap.b32 	%r18775, %r18636, %r18637, 8;
	mov.b64 	%rd9789, {%r18775, %r18774};
	shr.u64 	%rd9790, %rd9600, 7;
	xor.b64  	%rd9791, %rd9788, %rd9790;
	xor.b64  	%rd9792, %rd9791, %rd9789;
	add.s64 	%rd9793, %rd9704, %rd9203;
	add.s64 	%rd9794, %rd9793, %rd9787;
	add.s64 	%rd9795, %rd9794, %rd9792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18776,%dummy}, %rd9576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18777}, %rd9576;
	}
	shf.r.wrap.b32 	%r18778, %r18777, %r18776, 14;
	shf.r.wrap.b32 	%r18779, %r18776, %r18777, 14;
	mov.b64 	%rd9796, {%r18779, %r18778};
	shf.r.wrap.b32 	%r18780, %r18777, %r18776, 18;
	shf.r.wrap.b32 	%r18781, %r18776, %r18777, 18;
	mov.b64 	%rd9797, {%r18781, %r18780};
	xor.b64  	%rd9798, %rd9797, %rd9796;
	shf.l.wrap.b32 	%r18782, %r18776, %r18777, 23;
	shf.l.wrap.b32 	%r18783, %r18777, %r18776, 23;
	mov.b64 	%rd9799, {%r18783, %r18782};
	xor.b64  	%rd9800, %rd9798, %rd9799;
	xor.b64  	%rd9801, %rd9552, %rd9528;
	and.b64  	%rd9802, %rd9576, %rd9801;
	xor.b64  	%rd9803, %rd9802, %rd9528;
	add.s64 	%rd9804, %rd9803, %rd9504;
	add.s64 	%rd9805, %rd9804, %rd9600;
	add.s64 	%rd9806, %rd9805, %rd60;
	add.s64 	%rd9807, %rd9806, %rd9800;
	add.s64 	%rd9808, %rd9807, %rd9515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18784,%dummy}, %rd9587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18785}, %rd9587;
	}
	shf.r.wrap.b32 	%r18786, %r18785, %r18784, 28;
	shf.r.wrap.b32 	%r18787, %r18784, %r18785, 28;
	mov.b64 	%rd9809, {%r18787, %r18786};
	shf.l.wrap.b32 	%r18788, %r18784, %r18785, 30;
	shf.l.wrap.b32 	%r18789, %r18785, %r18784, 30;
	mov.b64 	%rd9810, {%r18789, %r18788};
	xor.b64  	%rd9811, %rd9810, %rd9809;
	shf.l.wrap.b32 	%r18790, %r18784, %r18785, 25;
	shf.l.wrap.b32 	%r18791, %r18785, %r18784, 25;
	mov.b64 	%rd9812, {%r18791, %r18790};
	xor.b64  	%rd9813, %rd9811, %rd9812;
	and.b64  	%rd9814, %rd9587, %rd9563;
	xor.b64  	%rd9815, %rd9587, %rd9563;
	and.b64  	%rd9816, %rd9815, %rd9539;
	or.b64  	%rd9817, %rd9816, %rd9814;
	add.s64 	%rd9818, %rd9807, %rd9817;
	add.s64 	%rd9819, %rd9818, %rd9813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18792,%dummy}, %rd9808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18793}, %rd9808;
	}
	shf.r.wrap.b32 	%r18794, %r18793, %r18792, 14;
	shf.r.wrap.b32 	%r18795, %r18792, %r18793, 14;
	mov.b64 	%rd9820, {%r18795, %r18794};
	shf.r.wrap.b32 	%r18796, %r18793, %r18792, 18;
	shf.r.wrap.b32 	%r18797, %r18792, %r18793, 18;
	mov.b64 	%rd9821, {%r18797, %r18796};
	xor.b64  	%rd9822, %rd9821, %rd9820;
	shf.l.wrap.b32 	%r18798, %r18792, %r18793, 23;
	shf.l.wrap.b32 	%r18799, %r18793, %r18792, 23;
	mov.b64 	%rd9823, {%r18799, %r18798};
	xor.b64  	%rd9824, %rd9822, %rd9823;
	xor.b64  	%rd9825, %rd9576, %rd9552;
	and.b64  	%rd9826, %rd9808, %rd9825;
	xor.b64  	%rd9827, %rd9826, %rd9552;
	add.s64 	%rd9828, %rd9613, %rd9528;
	add.s64 	%rd9829, %rd9828, %rd61;
	add.s64 	%rd9830, %rd9829, %rd9827;
	add.s64 	%rd9831, %rd9830, %rd9824;
	add.s64 	%rd9832, %rd9831, %rd9539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18800,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18801}, %rd9819;
	}
	shf.r.wrap.b32 	%r18802, %r18801, %r18800, 28;
	shf.r.wrap.b32 	%r18803, %r18800, %r18801, 28;
	mov.b64 	%rd9833, {%r18803, %r18802};
	shf.l.wrap.b32 	%r18804, %r18800, %r18801, 30;
	shf.l.wrap.b32 	%r18805, %r18801, %r18800, 30;
	mov.b64 	%rd9834, {%r18805, %r18804};
	xor.b64  	%rd9835, %rd9834, %rd9833;
	shf.l.wrap.b32 	%r18806, %r18800, %r18801, 25;
	shf.l.wrap.b32 	%r18807, %r18801, %r18800, 25;
	mov.b64 	%rd9836, {%r18807, %r18806};
	xor.b64  	%rd9837, %rd9835, %rd9836;
	and.b64  	%rd9838, %rd9819, %rd9587;
	xor.b64  	%rd9839, %rd9819, %rd9587;
	and.b64  	%rd9840, %rd9839, %rd9563;
	or.b64  	%rd9841, %rd9840, %rd9838;
	add.s64 	%rd9842, %rd9831, %rd9841;
	add.s64 	%rd9843, %rd9842, %rd9837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18808,%dummy}, %rd9832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18809}, %rd9832;
	}
	shf.r.wrap.b32 	%r18810, %r18809, %r18808, 14;
	shf.r.wrap.b32 	%r18811, %r18808, %r18809, 14;
	mov.b64 	%rd9844, {%r18811, %r18810};
	shf.r.wrap.b32 	%r18812, %r18809, %r18808, 18;
	shf.r.wrap.b32 	%r18813, %r18808, %r18809, 18;
	mov.b64 	%rd9845, {%r18813, %r18812};
	xor.b64  	%rd9846, %rd9845, %rd9844;
	shf.l.wrap.b32 	%r18814, %r18808, %r18809, 23;
	shf.l.wrap.b32 	%r18815, %r18809, %r18808, 23;
	mov.b64 	%rd9847, {%r18815, %r18814};
	xor.b64  	%rd9848, %rd9846, %rd9847;
	xor.b64  	%rd9849, %rd9808, %rd9576;
	and.b64  	%rd9850, %rd9832, %rd9849;
	xor.b64  	%rd9851, %rd9850, %rd9576;
	add.s64 	%rd9852, %rd9626, %rd9552;
	add.s64 	%rd9853, %rd9852, %rd62;
	add.s64 	%rd9854, %rd9853, %rd9851;
	add.s64 	%rd9855, %rd9854, %rd9848;
	add.s64 	%rd9856, %rd9855, %rd9563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18816,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18817}, %rd9843;
	}
	shf.r.wrap.b32 	%r18818, %r18817, %r18816, 28;
	shf.r.wrap.b32 	%r18819, %r18816, %r18817, 28;
	mov.b64 	%rd9857, {%r18819, %r18818};
	shf.l.wrap.b32 	%r18820, %r18816, %r18817, 30;
	shf.l.wrap.b32 	%r18821, %r18817, %r18816, 30;
	mov.b64 	%rd9858, {%r18821, %r18820};
	xor.b64  	%rd9859, %rd9858, %rd9857;
	shf.l.wrap.b32 	%r18822, %r18816, %r18817, 25;
	shf.l.wrap.b32 	%r18823, %r18817, %r18816, 25;
	mov.b64 	%rd9860, {%r18823, %r18822};
	xor.b64  	%rd9861, %rd9859, %rd9860;
	and.b64  	%rd9862, %rd9843, %rd9819;
	xor.b64  	%rd9863, %rd9843, %rd9819;
	and.b64  	%rd9864, %rd9863, %rd9587;
	or.b64  	%rd9865, %rd9864, %rd9862;
	add.s64 	%rd9866, %rd9855, %rd9865;
	add.s64 	%rd9867, %rd9866, %rd9861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18824,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18825}, %rd9856;
	}
	shf.r.wrap.b32 	%r18826, %r18825, %r18824, 14;
	shf.r.wrap.b32 	%r18827, %r18824, %r18825, 14;
	mov.b64 	%rd9868, {%r18827, %r18826};
	shf.r.wrap.b32 	%r18828, %r18825, %r18824, 18;
	shf.r.wrap.b32 	%r18829, %r18824, %r18825, 18;
	mov.b64 	%rd9869, {%r18829, %r18828};
	xor.b64  	%rd9870, %rd9869, %rd9868;
	shf.l.wrap.b32 	%r18830, %r18824, %r18825, 23;
	shf.l.wrap.b32 	%r18831, %r18825, %r18824, 23;
	mov.b64 	%rd9871, {%r18831, %r18830};
	xor.b64  	%rd9872, %rd9870, %rd9871;
	xor.b64  	%rd9873, %rd9832, %rd9808;
	and.b64  	%rd9874, %rd9856, %rd9873;
	xor.b64  	%rd9875, %rd9874, %rd9808;
	add.s64 	%rd9876, %rd9639, %rd9576;
	add.s64 	%rd9877, %rd9876, %rd63;
	add.s64 	%rd9878, %rd9877, %rd9875;
	add.s64 	%rd9879, %rd9878, %rd9872;
	add.s64 	%rd9880, %rd9879, %rd9587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18832,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18833}, %rd9867;
	}
	shf.r.wrap.b32 	%r18834, %r18833, %r18832, 28;
	shf.r.wrap.b32 	%r18835, %r18832, %r18833, 28;
	mov.b64 	%rd9881, {%r18835, %r18834};
	shf.l.wrap.b32 	%r18836, %r18832, %r18833, 30;
	shf.l.wrap.b32 	%r18837, %r18833, %r18832, 30;
	mov.b64 	%rd9882, {%r18837, %r18836};
	xor.b64  	%rd9883, %rd9882, %rd9881;
	shf.l.wrap.b32 	%r18838, %r18832, %r18833, 25;
	shf.l.wrap.b32 	%r18839, %r18833, %r18832, 25;
	mov.b64 	%rd9884, {%r18839, %r18838};
	xor.b64  	%rd9885, %rd9883, %rd9884;
	and.b64  	%rd9886, %rd9867, %rd9843;
	xor.b64  	%rd9887, %rd9867, %rd9843;
	and.b64  	%rd9888, %rd9887, %rd9819;
	or.b64  	%rd9889, %rd9888, %rd9886;
	add.s64 	%rd9890, %rd9879, %rd9889;
	add.s64 	%rd9891, %rd9890, %rd9885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18840,%dummy}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18841}, %rd9880;
	}
	shf.r.wrap.b32 	%r18842, %r18841, %r18840, 14;
	shf.r.wrap.b32 	%r18843, %r18840, %r18841, 14;
	mov.b64 	%rd9892, {%r18843, %r18842};
	shf.r.wrap.b32 	%r18844, %r18841, %r18840, 18;
	shf.r.wrap.b32 	%r18845, %r18840, %r18841, 18;
	mov.b64 	%rd9893, {%r18845, %r18844};
	xor.b64  	%rd9894, %rd9893, %rd9892;
	shf.l.wrap.b32 	%r18846, %r18840, %r18841, 23;
	shf.l.wrap.b32 	%r18847, %r18841, %r18840, 23;
	mov.b64 	%rd9895, {%r18847, %r18846};
	xor.b64  	%rd9896, %rd9894, %rd9895;
	xor.b64  	%rd9897, %rd9856, %rd9832;
	and.b64  	%rd9898, %rd9880, %rd9897;
	xor.b64  	%rd9899, %rd9898, %rd9832;
	add.s64 	%rd9900, %rd9808, %rd9652;
	add.s64 	%rd9901, %rd9900, %rd64;
	add.s64 	%rd9902, %rd9901, %rd9899;
	add.s64 	%rd9903, %rd9902, %rd9896;
	add.s64 	%rd9904, %rd9903, %rd9819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18848,%dummy}, %rd9891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18849}, %rd9891;
	}
	shf.r.wrap.b32 	%r18850, %r18849, %r18848, 28;
	shf.r.wrap.b32 	%r18851, %r18848, %r18849, 28;
	mov.b64 	%rd9905, {%r18851, %r18850};
	shf.l.wrap.b32 	%r18852, %r18848, %r18849, 30;
	shf.l.wrap.b32 	%r18853, %r18849, %r18848, 30;
	mov.b64 	%rd9906, {%r18853, %r18852};
	xor.b64  	%rd9907, %rd9906, %rd9905;
	shf.l.wrap.b32 	%r18854, %r18848, %r18849, 25;
	shf.l.wrap.b32 	%r18855, %r18849, %r18848, 25;
	mov.b64 	%rd9908, {%r18855, %r18854};
	xor.b64  	%rd9909, %rd9907, %rd9908;
	and.b64  	%rd9910, %rd9891, %rd9867;
	xor.b64  	%rd9911, %rd9891, %rd9867;
	and.b64  	%rd9912, %rd9911, %rd9843;
	or.b64  	%rd9913, %rd9912, %rd9910;
	add.s64 	%rd9914, %rd9903, %rd9913;
	add.s64 	%rd9915, %rd9914, %rd9909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18856,%dummy}, %rd9904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18857}, %rd9904;
	}
	shf.r.wrap.b32 	%r18858, %r18857, %r18856, 14;
	shf.r.wrap.b32 	%r18859, %r18856, %r18857, 14;
	mov.b64 	%rd9916, {%r18859, %r18858};
	shf.r.wrap.b32 	%r18860, %r18857, %r18856, 18;
	shf.r.wrap.b32 	%r18861, %r18856, %r18857, 18;
	mov.b64 	%rd9917, {%r18861, %r18860};
	xor.b64  	%rd9918, %rd9917, %rd9916;
	shf.l.wrap.b32 	%r18862, %r18856, %r18857, 23;
	shf.l.wrap.b32 	%r18863, %r18857, %r18856, 23;
	mov.b64 	%rd9919, {%r18863, %r18862};
	xor.b64  	%rd9920, %rd9918, %rd9919;
	xor.b64  	%rd9921, %rd9880, %rd9856;
	and.b64  	%rd9922, %rd9904, %rd9921;
	xor.b64  	%rd9923, %rd9922, %rd9856;
	add.s64 	%rd9924, %rd9832, %rd9665;
	add.s64 	%rd9925, %rd9924, %rd65;
	add.s64 	%rd9926, %rd9925, %rd9923;
	add.s64 	%rd9927, %rd9926, %rd9920;
	add.s64 	%rd9928, %rd9927, %rd9843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18864,%dummy}, %rd9915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18865}, %rd9915;
	}
	shf.r.wrap.b32 	%r18866, %r18865, %r18864, 28;
	shf.r.wrap.b32 	%r18867, %r18864, %r18865, 28;
	mov.b64 	%rd9929, {%r18867, %r18866};
	shf.l.wrap.b32 	%r18868, %r18864, %r18865, 30;
	shf.l.wrap.b32 	%r18869, %r18865, %r18864, 30;
	mov.b64 	%rd9930, {%r18869, %r18868};
	xor.b64  	%rd9931, %rd9930, %rd9929;
	shf.l.wrap.b32 	%r18870, %r18864, %r18865, 25;
	shf.l.wrap.b32 	%r18871, %r18865, %r18864, 25;
	mov.b64 	%rd9932, {%r18871, %r18870};
	xor.b64  	%rd9933, %rd9931, %rd9932;
	and.b64  	%rd9934, %rd9915, %rd9891;
	xor.b64  	%rd9935, %rd9915, %rd9891;
	and.b64  	%rd9936, %rd9935, %rd9867;
	or.b64  	%rd9937, %rd9936, %rd9934;
	add.s64 	%rd9938, %rd9927, %rd9937;
	add.s64 	%rd9939, %rd9938, %rd9933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18872,%dummy}, %rd9928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18873}, %rd9928;
	}
	shf.r.wrap.b32 	%r18874, %r18873, %r18872, 14;
	shf.r.wrap.b32 	%r18875, %r18872, %r18873, 14;
	mov.b64 	%rd9940, {%r18875, %r18874};
	shf.r.wrap.b32 	%r18876, %r18873, %r18872, 18;
	shf.r.wrap.b32 	%r18877, %r18872, %r18873, 18;
	mov.b64 	%rd9941, {%r18877, %r18876};
	xor.b64  	%rd9942, %rd9941, %rd9940;
	shf.l.wrap.b32 	%r18878, %r18872, %r18873, 23;
	shf.l.wrap.b32 	%r18879, %r18873, %r18872, 23;
	mov.b64 	%rd9943, {%r18879, %r18878};
	xor.b64  	%rd9944, %rd9942, %rd9943;
	xor.b64  	%rd9945, %rd9904, %rd9880;
	and.b64  	%rd9946, %rd9928, %rd9945;
	xor.b64  	%rd9947, %rd9946, %rd9880;
	add.s64 	%rd9948, %rd9856, %rd9678;
	add.s64 	%rd9949, %rd9948, %rd66;
	add.s64 	%rd9950, %rd9949, %rd9947;
	add.s64 	%rd9951, %rd9950, %rd9944;
	add.s64 	%rd9952, %rd9951, %rd9867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18880,%dummy}, %rd9939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18881}, %rd9939;
	}
	shf.r.wrap.b32 	%r18882, %r18881, %r18880, 28;
	shf.r.wrap.b32 	%r18883, %r18880, %r18881, 28;
	mov.b64 	%rd9953, {%r18883, %r18882};
	shf.l.wrap.b32 	%r18884, %r18880, %r18881, 30;
	shf.l.wrap.b32 	%r18885, %r18881, %r18880, 30;
	mov.b64 	%rd9954, {%r18885, %r18884};
	xor.b64  	%rd9955, %rd9954, %rd9953;
	shf.l.wrap.b32 	%r18886, %r18880, %r18881, 25;
	shf.l.wrap.b32 	%r18887, %r18881, %r18880, 25;
	mov.b64 	%rd9956, {%r18887, %r18886};
	xor.b64  	%rd9957, %rd9955, %rd9956;
	and.b64  	%rd9958, %rd9939, %rd9915;
	xor.b64  	%rd9959, %rd9939, %rd9915;
	and.b64  	%rd9960, %rd9959, %rd9891;
	or.b64  	%rd9961, %rd9960, %rd9958;
	add.s64 	%rd9962, %rd9951, %rd9961;
	add.s64 	%rd9963, %rd9962, %rd9957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18888,%dummy}, %rd9952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18889}, %rd9952;
	}
	shf.r.wrap.b32 	%r18890, %r18889, %r18888, 14;
	shf.r.wrap.b32 	%r18891, %r18888, %r18889, 14;
	mov.b64 	%rd9964, {%r18891, %r18890};
	shf.r.wrap.b32 	%r18892, %r18889, %r18888, 18;
	shf.r.wrap.b32 	%r18893, %r18888, %r18889, 18;
	mov.b64 	%rd9965, {%r18893, %r18892};
	xor.b64  	%rd9966, %rd9965, %rd9964;
	shf.l.wrap.b32 	%r18894, %r18888, %r18889, 23;
	shf.l.wrap.b32 	%r18895, %r18889, %r18888, 23;
	mov.b64 	%rd9967, {%r18895, %r18894};
	xor.b64  	%rd9968, %rd9966, %rd9967;
	xor.b64  	%rd9969, %rd9928, %rd9904;
	and.b64  	%rd9970, %rd9952, %rd9969;
	xor.b64  	%rd9971, %rd9970, %rd9904;
	add.s64 	%rd9972, %rd9880, %rd9691;
	add.s64 	%rd9973, %rd9972, %rd67;
	add.s64 	%rd9974, %rd9973, %rd9971;
	add.s64 	%rd9975, %rd9974, %rd9968;
	add.s64 	%rd9976, %rd9975, %rd9891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18896,%dummy}, %rd9963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18897}, %rd9963;
	}
	shf.r.wrap.b32 	%r18898, %r18897, %r18896, 28;
	shf.r.wrap.b32 	%r18899, %r18896, %r18897, 28;
	mov.b64 	%rd9977, {%r18899, %r18898};
	shf.l.wrap.b32 	%r18900, %r18896, %r18897, 30;
	shf.l.wrap.b32 	%r18901, %r18897, %r18896, 30;
	mov.b64 	%rd9978, {%r18901, %r18900};
	xor.b64  	%rd9979, %rd9978, %rd9977;
	shf.l.wrap.b32 	%r18902, %r18896, %r18897, 25;
	shf.l.wrap.b32 	%r18903, %r18897, %r18896, 25;
	mov.b64 	%rd9980, {%r18903, %r18902};
	xor.b64  	%rd9981, %rd9979, %rd9980;
	and.b64  	%rd9982, %rd9963, %rd9939;
	xor.b64  	%rd9983, %rd9963, %rd9939;
	and.b64  	%rd9984, %rd9983, %rd9915;
	or.b64  	%rd9985, %rd9984, %rd9982;
	add.s64 	%rd9986, %rd9975, %rd9985;
	add.s64 	%rd9987, %rd9986, %rd9981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18904,%dummy}, %rd9976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18905}, %rd9976;
	}
	shf.r.wrap.b32 	%r18906, %r18905, %r18904, 14;
	shf.r.wrap.b32 	%r18907, %r18904, %r18905, 14;
	mov.b64 	%rd9988, {%r18907, %r18906};
	shf.r.wrap.b32 	%r18908, %r18905, %r18904, 18;
	shf.r.wrap.b32 	%r18909, %r18904, %r18905, 18;
	mov.b64 	%rd9989, {%r18909, %r18908};
	xor.b64  	%rd9990, %rd9989, %rd9988;
	shf.l.wrap.b32 	%r18910, %r18904, %r18905, 23;
	shf.l.wrap.b32 	%r18911, %r18905, %r18904, 23;
	mov.b64 	%rd9991, {%r18911, %r18910};
	xor.b64  	%rd9992, %rd9990, %rd9991;
	xor.b64  	%rd9993, %rd9952, %rd9928;
	and.b64  	%rd9994, %rd9976, %rd9993;
	xor.b64  	%rd9995, %rd9994, %rd9928;
	add.s64 	%rd9996, %rd9904, %rd9704;
	add.s64 	%rd9997, %rd9996, %rd68;
	add.s64 	%rd9998, %rd9997, %rd9995;
	add.s64 	%rd9999, %rd9998, %rd9992;
	add.s64 	%rd10000, %rd9999, %rd9915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18912,%dummy}, %rd9987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18913}, %rd9987;
	}
	shf.r.wrap.b32 	%r18914, %r18913, %r18912, 28;
	shf.r.wrap.b32 	%r18915, %r18912, %r18913, 28;
	mov.b64 	%rd10001, {%r18915, %r18914};
	shf.l.wrap.b32 	%r18916, %r18912, %r18913, 30;
	shf.l.wrap.b32 	%r18917, %r18913, %r18912, 30;
	mov.b64 	%rd10002, {%r18917, %r18916};
	xor.b64  	%rd10003, %rd10002, %rd10001;
	shf.l.wrap.b32 	%r18918, %r18912, %r18913, 25;
	shf.l.wrap.b32 	%r18919, %r18913, %r18912, 25;
	mov.b64 	%rd10004, {%r18919, %r18918};
	xor.b64  	%rd10005, %rd10003, %rd10004;
	and.b64  	%rd10006, %rd9987, %rd9963;
	xor.b64  	%rd10007, %rd9987, %rd9963;
	and.b64  	%rd10008, %rd10007, %rd9939;
	or.b64  	%rd10009, %rd10008, %rd10006;
	add.s64 	%rd10010, %rd9999, %rd10009;
	add.s64 	%rd10011, %rd10010, %rd10005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18920,%dummy}, %rd10000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18921}, %rd10000;
	}
	shf.r.wrap.b32 	%r18922, %r18921, %r18920, 14;
	shf.r.wrap.b32 	%r18923, %r18920, %r18921, 14;
	mov.b64 	%rd10012, {%r18923, %r18922};
	shf.r.wrap.b32 	%r18924, %r18921, %r18920, 18;
	shf.r.wrap.b32 	%r18925, %r18920, %r18921, 18;
	mov.b64 	%rd10013, {%r18925, %r18924};
	xor.b64  	%rd10014, %rd10013, %rd10012;
	shf.l.wrap.b32 	%r18926, %r18920, %r18921, 23;
	shf.l.wrap.b32 	%r18927, %r18921, %r18920, 23;
	mov.b64 	%rd10015, {%r18927, %r18926};
	xor.b64  	%rd10016, %rd10014, %rd10015;
	xor.b64  	%rd10017, %rd9976, %rd9952;
	and.b64  	%rd10018, %rd10000, %rd10017;
	xor.b64  	%rd10019, %rd10018, %rd9952;
	add.s64 	%rd10020, %rd9928, %rd9717;
	add.s64 	%rd10021, %rd10020, %rd69;
	add.s64 	%rd10022, %rd10021, %rd10019;
	add.s64 	%rd10023, %rd10022, %rd10016;
	add.s64 	%rd10024, %rd10023, %rd9939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18928,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18929}, %rd10011;
	}
	shf.r.wrap.b32 	%r18930, %r18929, %r18928, 28;
	shf.r.wrap.b32 	%r18931, %r18928, %r18929, 28;
	mov.b64 	%rd10025, {%r18931, %r18930};
	shf.l.wrap.b32 	%r18932, %r18928, %r18929, 30;
	shf.l.wrap.b32 	%r18933, %r18929, %r18928, 30;
	mov.b64 	%rd10026, {%r18933, %r18932};
	xor.b64  	%rd10027, %rd10026, %rd10025;
	shf.l.wrap.b32 	%r18934, %r18928, %r18929, 25;
	shf.l.wrap.b32 	%r18935, %r18929, %r18928, 25;
	mov.b64 	%rd10028, {%r18935, %r18934};
	xor.b64  	%rd10029, %rd10027, %rd10028;
	and.b64  	%rd10030, %rd10011, %rd9987;
	xor.b64  	%rd10031, %rd10011, %rd9987;
	and.b64  	%rd10032, %rd10031, %rd9963;
	or.b64  	%rd10033, %rd10032, %rd10030;
	add.s64 	%rd10034, %rd10023, %rd10033;
	add.s64 	%rd10035, %rd10034, %rd10029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18936,%dummy}, %rd10024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18937}, %rd10024;
	}
	shf.r.wrap.b32 	%r18938, %r18937, %r18936, 14;
	shf.r.wrap.b32 	%r18939, %r18936, %r18937, 14;
	mov.b64 	%rd10036, {%r18939, %r18938};
	shf.r.wrap.b32 	%r18940, %r18937, %r18936, 18;
	shf.r.wrap.b32 	%r18941, %r18936, %r18937, 18;
	mov.b64 	%rd10037, {%r18941, %r18940};
	xor.b64  	%rd10038, %rd10037, %rd10036;
	shf.l.wrap.b32 	%r18942, %r18936, %r18937, 23;
	shf.l.wrap.b32 	%r18943, %r18937, %r18936, 23;
	mov.b64 	%rd10039, {%r18943, %r18942};
	xor.b64  	%rd10040, %rd10038, %rd10039;
	xor.b64  	%rd10041, %rd10000, %rd9976;
	and.b64  	%rd10042, %rd10024, %rd10041;
	xor.b64  	%rd10043, %rd10042, %rd9976;
	add.s64 	%rd10044, %rd9952, %rd9730;
	add.s64 	%rd10045, %rd10044, %rd70;
	add.s64 	%rd10046, %rd10045, %rd10043;
	add.s64 	%rd10047, %rd10046, %rd10040;
	add.s64 	%rd10048, %rd10047, %rd9963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18944,%dummy}, %rd10035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18945}, %rd10035;
	}
	shf.r.wrap.b32 	%r18946, %r18945, %r18944, 28;
	shf.r.wrap.b32 	%r18947, %r18944, %r18945, 28;
	mov.b64 	%rd10049, {%r18947, %r18946};
	shf.l.wrap.b32 	%r18948, %r18944, %r18945, 30;
	shf.l.wrap.b32 	%r18949, %r18945, %r18944, 30;
	mov.b64 	%rd10050, {%r18949, %r18948};
	xor.b64  	%rd10051, %rd10050, %rd10049;
	shf.l.wrap.b32 	%r18950, %r18944, %r18945, 25;
	shf.l.wrap.b32 	%r18951, %r18945, %r18944, 25;
	mov.b64 	%rd10052, {%r18951, %r18950};
	xor.b64  	%rd10053, %rd10051, %rd10052;
	and.b64  	%rd10054, %rd10035, %rd10011;
	xor.b64  	%rd10055, %rd10035, %rd10011;
	and.b64  	%rd10056, %rd10055, %rd9987;
	or.b64  	%rd10057, %rd10056, %rd10054;
	add.s64 	%rd10058, %rd10047, %rd10057;
	add.s64 	%rd10059, %rd10058, %rd10053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18952,%dummy}, %rd10048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18953}, %rd10048;
	}
	shf.r.wrap.b32 	%r18954, %r18953, %r18952, 14;
	shf.r.wrap.b32 	%r18955, %r18952, %r18953, 14;
	mov.b64 	%rd10060, {%r18955, %r18954};
	shf.r.wrap.b32 	%r18956, %r18953, %r18952, 18;
	shf.r.wrap.b32 	%r18957, %r18952, %r18953, 18;
	mov.b64 	%rd10061, {%r18957, %r18956};
	xor.b64  	%rd10062, %rd10061, %rd10060;
	shf.l.wrap.b32 	%r18958, %r18952, %r18953, 23;
	shf.l.wrap.b32 	%r18959, %r18953, %r18952, 23;
	mov.b64 	%rd10063, {%r18959, %r18958};
	xor.b64  	%rd10064, %rd10062, %rd10063;
	xor.b64  	%rd10065, %rd10024, %rd10000;
	and.b64  	%rd10066, %rd10048, %rd10065;
	xor.b64  	%rd10067, %rd10066, %rd10000;
	add.s64 	%rd10068, %rd9976, %rd9743;
	add.s64 	%rd10069, %rd10068, %rd71;
	add.s64 	%rd10070, %rd10069, %rd10067;
	add.s64 	%rd10071, %rd10070, %rd10064;
	add.s64 	%rd10072, %rd10071, %rd9987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18960,%dummy}, %rd10059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18961}, %rd10059;
	}
	shf.r.wrap.b32 	%r18962, %r18961, %r18960, 28;
	shf.r.wrap.b32 	%r18963, %r18960, %r18961, 28;
	mov.b64 	%rd10073, {%r18963, %r18962};
	shf.l.wrap.b32 	%r18964, %r18960, %r18961, 30;
	shf.l.wrap.b32 	%r18965, %r18961, %r18960, 30;
	mov.b64 	%rd10074, {%r18965, %r18964};
	xor.b64  	%rd10075, %rd10074, %rd10073;
	shf.l.wrap.b32 	%r18966, %r18960, %r18961, 25;
	shf.l.wrap.b32 	%r18967, %r18961, %r18960, 25;
	mov.b64 	%rd10076, {%r18967, %r18966};
	xor.b64  	%rd10077, %rd10075, %rd10076;
	and.b64  	%rd10078, %rd10059, %rd10035;
	xor.b64  	%rd10079, %rd10059, %rd10035;
	and.b64  	%rd10080, %rd10079, %rd10011;
	or.b64  	%rd10081, %rd10080, %rd10078;
	add.s64 	%rd10082, %rd10071, %rd10081;
	add.s64 	%rd10083, %rd10082, %rd10077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18968,%dummy}, %rd10072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18969}, %rd10072;
	}
	shf.r.wrap.b32 	%r18970, %r18969, %r18968, 14;
	shf.r.wrap.b32 	%r18971, %r18968, %r18969, 14;
	mov.b64 	%rd10084, {%r18971, %r18970};
	shf.r.wrap.b32 	%r18972, %r18969, %r18968, 18;
	shf.r.wrap.b32 	%r18973, %r18968, %r18969, 18;
	mov.b64 	%rd10085, {%r18973, %r18972};
	xor.b64  	%rd10086, %rd10085, %rd10084;
	shf.l.wrap.b32 	%r18974, %r18968, %r18969, 23;
	shf.l.wrap.b32 	%r18975, %r18969, %r18968, 23;
	mov.b64 	%rd10087, {%r18975, %r18974};
	xor.b64  	%rd10088, %rd10086, %rd10087;
	xor.b64  	%rd10089, %rd10048, %rd10024;
	and.b64  	%rd10090, %rd10072, %rd10089;
	xor.b64  	%rd10091, %rd10090, %rd10024;
	add.s64 	%rd10092, %rd10000, %rd9756;
	add.s64 	%rd10093, %rd10092, %rd72;
	add.s64 	%rd10094, %rd10093, %rd10091;
	add.s64 	%rd10095, %rd10094, %rd10088;
	add.s64 	%rd10096, %rd10095, %rd10011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18976,%dummy}, %rd10083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18977}, %rd10083;
	}
	shf.r.wrap.b32 	%r18978, %r18977, %r18976, 28;
	shf.r.wrap.b32 	%r18979, %r18976, %r18977, 28;
	mov.b64 	%rd10097, {%r18979, %r18978};
	shf.l.wrap.b32 	%r18980, %r18976, %r18977, 30;
	shf.l.wrap.b32 	%r18981, %r18977, %r18976, 30;
	mov.b64 	%rd10098, {%r18981, %r18980};
	xor.b64  	%rd10099, %rd10098, %rd10097;
	shf.l.wrap.b32 	%r18982, %r18976, %r18977, 25;
	shf.l.wrap.b32 	%r18983, %r18977, %r18976, 25;
	mov.b64 	%rd10100, {%r18983, %r18982};
	xor.b64  	%rd10101, %rd10099, %rd10100;
	and.b64  	%rd10102, %rd10083, %rd10059;
	xor.b64  	%rd10103, %rd10083, %rd10059;
	and.b64  	%rd10104, %rd10103, %rd10035;
	or.b64  	%rd10105, %rd10104, %rd10102;
	add.s64 	%rd10106, %rd10095, %rd10105;
	add.s64 	%rd10107, %rd10106, %rd10101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18984,%dummy}, %rd10096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18985}, %rd10096;
	}
	shf.r.wrap.b32 	%r18986, %r18985, %r18984, 14;
	shf.r.wrap.b32 	%r18987, %r18984, %r18985, 14;
	mov.b64 	%rd10108, {%r18987, %r18986};
	shf.r.wrap.b32 	%r18988, %r18985, %r18984, 18;
	shf.r.wrap.b32 	%r18989, %r18984, %r18985, 18;
	mov.b64 	%rd10109, {%r18989, %r18988};
	xor.b64  	%rd10110, %rd10109, %rd10108;
	shf.l.wrap.b32 	%r18990, %r18984, %r18985, 23;
	shf.l.wrap.b32 	%r18991, %r18985, %r18984, 23;
	mov.b64 	%rd10111, {%r18991, %r18990};
	xor.b64  	%rd10112, %rd10110, %rd10111;
	xor.b64  	%rd10113, %rd10072, %rd10048;
	and.b64  	%rd10114, %rd10096, %rd10113;
	xor.b64  	%rd10115, %rd10114, %rd10048;
	add.s64 	%rd10116, %rd10024, %rd9769;
	add.s64 	%rd10117, %rd10116, %rd73;
	add.s64 	%rd10118, %rd10117, %rd10115;
	add.s64 	%rd10119, %rd10118, %rd10112;
	add.s64 	%rd10120, %rd10119, %rd10035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18992,%dummy}, %rd10107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18993}, %rd10107;
	}
	shf.r.wrap.b32 	%r18994, %r18993, %r18992, 28;
	shf.r.wrap.b32 	%r18995, %r18992, %r18993, 28;
	mov.b64 	%rd10121, {%r18995, %r18994};
	shf.l.wrap.b32 	%r18996, %r18992, %r18993, 30;
	shf.l.wrap.b32 	%r18997, %r18993, %r18992, 30;
	mov.b64 	%rd10122, {%r18997, %r18996};
	xor.b64  	%rd10123, %rd10122, %rd10121;
	shf.l.wrap.b32 	%r18998, %r18992, %r18993, 25;
	shf.l.wrap.b32 	%r18999, %r18993, %r18992, 25;
	mov.b64 	%rd10124, {%r18999, %r18998};
	xor.b64  	%rd10125, %rd10123, %rd10124;
	and.b64  	%rd10126, %rd10107, %rd10083;
	xor.b64  	%rd10127, %rd10107, %rd10083;
	and.b64  	%rd10128, %rd10127, %rd10059;
	or.b64  	%rd10129, %rd10128, %rd10126;
	add.s64 	%rd10130, %rd10119, %rd10129;
	add.s64 	%rd10131, %rd10130, %rd10125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19000,%dummy}, %rd10120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19001}, %rd10120;
	}
	shf.r.wrap.b32 	%r19002, %r19001, %r19000, 14;
	shf.r.wrap.b32 	%r19003, %r19000, %r19001, 14;
	mov.b64 	%rd10132, {%r19003, %r19002};
	shf.r.wrap.b32 	%r19004, %r19001, %r19000, 18;
	shf.r.wrap.b32 	%r19005, %r19000, %r19001, 18;
	mov.b64 	%rd10133, {%r19005, %r19004};
	xor.b64  	%rd10134, %rd10133, %rd10132;
	shf.l.wrap.b32 	%r19006, %r19000, %r19001, 23;
	shf.l.wrap.b32 	%r19007, %r19001, %r19000, 23;
	mov.b64 	%rd10135, {%r19007, %r19006};
	xor.b64  	%rd10136, %rd10134, %rd10135;
	xor.b64  	%rd10137, %rd10096, %rd10072;
	and.b64  	%rd10138, %rd10120, %rd10137;
	xor.b64  	%rd10139, %rd10138, %rd10072;
	add.s64 	%rd10140, %rd10048, %rd9782;
	add.s64 	%rd10141, %rd10140, %rd74;
	add.s64 	%rd10142, %rd10141, %rd10139;
	add.s64 	%rd10143, %rd10142, %rd10136;
	add.s64 	%rd10144, %rd10143, %rd10059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19008,%dummy}, %rd10131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19009}, %rd10131;
	}
	shf.r.wrap.b32 	%r19010, %r19009, %r19008, 28;
	shf.r.wrap.b32 	%r19011, %r19008, %r19009, 28;
	mov.b64 	%rd10145, {%r19011, %r19010};
	shf.l.wrap.b32 	%r19012, %r19008, %r19009, 30;
	shf.l.wrap.b32 	%r19013, %r19009, %r19008, 30;
	mov.b64 	%rd10146, {%r19013, %r19012};
	xor.b64  	%rd10147, %rd10146, %rd10145;
	shf.l.wrap.b32 	%r19014, %r19008, %r19009, 25;
	shf.l.wrap.b32 	%r19015, %r19009, %r19008, 25;
	mov.b64 	%rd10148, {%r19015, %r19014};
	xor.b64  	%rd10149, %rd10147, %rd10148;
	and.b64  	%rd10150, %rd10131, %rd10107;
	xor.b64  	%rd10151, %rd10131, %rd10107;
	and.b64  	%rd10152, %rd10151, %rd10083;
	or.b64  	%rd10153, %rd10152, %rd10150;
	add.s64 	%rd10154, %rd10143, %rd10153;
	add.s64 	%rd10155, %rd10154, %rd10149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19016,%dummy}, %rd10144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19017}, %rd10144;
	}
	shf.r.wrap.b32 	%r19018, %r19017, %r19016, 14;
	shf.r.wrap.b32 	%r19019, %r19016, %r19017, 14;
	mov.b64 	%rd10156, {%r19019, %r19018};
	shf.r.wrap.b32 	%r19020, %r19017, %r19016, 18;
	shf.r.wrap.b32 	%r19021, %r19016, %r19017, 18;
	mov.b64 	%rd10157, {%r19021, %r19020};
	xor.b64  	%rd10158, %rd10157, %rd10156;
	shf.l.wrap.b32 	%r19022, %r19016, %r19017, 23;
	shf.l.wrap.b32 	%r19023, %r19017, %r19016, 23;
	mov.b64 	%rd10159, {%r19023, %r19022};
	xor.b64  	%rd10160, %rd10158, %rd10159;
	xor.b64  	%rd10161, %rd10120, %rd10096;
	and.b64  	%rd10162, %rd10144, %rd10161;
	xor.b64  	%rd10163, %rd10162, %rd10096;
	add.s64 	%rd10164, %rd10072, %rd9795;
	add.s64 	%rd10165, %rd10164, %rd75;
	add.s64 	%rd10166, %rd10165, %rd10163;
	add.s64 	%rd10167, %rd10166, %rd10160;
	add.s64 	%rd10168, %rd10167, %rd10083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19024,%dummy}, %rd10155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19025}, %rd10155;
	}
	shf.r.wrap.b32 	%r19026, %r19025, %r19024, 28;
	shf.r.wrap.b32 	%r19027, %r19024, %r19025, 28;
	mov.b64 	%rd10169, {%r19027, %r19026};
	shf.l.wrap.b32 	%r19028, %r19024, %r19025, 30;
	shf.l.wrap.b32 	%r19029, %r19025, %r19024, 30;
	mov.b64 	%rd10170, {%r19029, %r19028};
	xor.b64  	%rd10171, %rd10170, %rd10169;
	shf.l.wrap.b32 	%r19030, %r19024, %r19025, 25;
	shf.l.wrap.b32 	%r19031, %r19025, %r19024, 25;
	mov.b64 	%rd10172, {%r19031, %r19030};
	xor.b64  	%rd10173, %rd10171, %rd10172;
	and.b64  	%rd10174, %rd10155, %rd10131;
	xor.b64  	%rd10175, %rd10155, %rd10131;
	and.b64  	%rd10176, %rd10175, %rd10107;
	or.b64  	%rd10177, %rd10176, %rd10174;
	add.s64 	%rd10178, %rd10167, %rd10177;
	add.s64 	%rd10179, %rd10178, %rd10173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19032,%dummy}, %rd9782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19033}, %rd9782;
	}
	shf.r.wrap.b32 	%r19034, %r19033, %r19032, 19;
	shf.r.wrap.b32 	%r19035, %r19032, %r19033, 19;
	mov.b64 	%rd10180, {%r19035, %r19034};
	shf.l.wrap.b32 	%r19036, %r19032, %r19033, 3;
	shf.l.wrap.b32 	%r19037, %r19033, %r19032, 3;
	mov.b64 	%rd10181, {%r19037, %r19036};
	shr.u64 	%rd10182, %rd9782, 6;
	xor.b64  	%rd10183, %rd10180, %rd10182;
	xor.b64  	%rd10184, %rd10183, %rd10181;
	shf.r.wrap.b32 	%r19038, %r18647, %r18646, 1;
	shf.r.wrap.b32 	%r19039, %r18646, %r18647, 1;
	mov.b64 	%rd10185, {%r19039, %r19038};
	shf.r.wrap.b32 	%r19040, %r18647, %r18646, 8;
	shf.r.wrap.b32 	%r19041, %r18646, %r18647, 8;
	mov.b64 	%rd10186, {%r19041, %r19040};
	shr.u64 	%rd10187, %rd9613, 7;
	xor.b64  	%rd10188, %rd10185, %rd10187;
	xor.b64  	%rd10189, %rd10188, %rd10186;
	add.s64 	%rd10190, %rd9717, %rd9600;
	add.s64 	%rd10191, %rd10190, %rd10184;
	add.s64 	%rd10192, %rd10191, %rd10189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19042,%dummy}, %rd9795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19043}, %rd9795;
	}
	shf.r.wrap.b32 	%r19044, %r19043, %r19042, 19;
	shf.r.wrap.b32 	%r19045, %r19042, %r19043, 19;
	mov.b64 	%rd10193, {%r19045, %r19044};
	shf.l.wrap.b32 	%r19046, %r19042, %r19043, 3;
	shf.l.wrap.b32 	%r19047, %r19043, %r19042, 3;
	mov.b64 	%rd10194, {%r19047, %r19046};
	shr.u64 	%rd10195, %rd9795, 6;
	xor.b64  	%rd10196, %rd10193, %rd10195;
	xor.b64  	%rd10197, %rd10196, %rd10194;
	shf.r.wrap.b32 	%r19048, %r18657, %r18656, 1;
	shf.r.wrap.b32 	%r19049, %r18656, %r18657, 1;
	mov.b64 	%rd10198, {%r19049, %r19048};
	shf.r.wrap.b32 	%r19050, %r18657, %r18656, 8;
	shf.r.wrap.b32 	%r19051, %r18656, %r18657, 8;
	mov.b64 	%rd10199, {%r19051, %r19050};
	shr.u64 	%rd10200, %rd9626, 7;
	xor.b64  	%rd10201, %rd10198, %rd10200;
	xor.b64  	%rd10202, %rd10201, %rd10199;
	add.s64 	%rd10203, %rd9730, %rd9613;
	add.s64 	%rd10204, %rd10203, %rd10197;
	add.s64 	%rd10205, %rd10204, %rd10202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19052,%dummy}, %rd10192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19053}, %rd10192;
	}
	shf.r.wrap.b32 	%r19054, %r19053, %r19052, 19;
	shf.r.wrap.b32 	%r19055, %r19052, %r19053, 19;
	mov.b64 	%rd10206, {%r19055, %r19054};
	shf.l.wrap.b32 	%r19056, %r19052, %r19053, 3;
	shf.l.wrap.b32 	%r19057, %r19053, %r19052, 3;
	mov.b64 	%rd10207, {%r19057, %r19056};
	shr.u64 	%rd10208, %rd10192, 6;
	xor.b64  	%rd10209, %rd10206, %rd10208;
	xor.b64  	%rd10210, %rd10209, %rd10207;
	shf.r.wrap.b32 	%r19058, %r18667, %r18666, 1;
	shf.r.wrap.b32 	%r19059, %r18666, %r18667, 1;
	mov.b64 	%rd10211, {%r19059, %r19058};
	shf.r.wrap.b32 	%r19060, %r18667, %r18666, 8;
	shf.r.wrap.b32 	%r19061, %r18666, %r18667, 8;
	mov.b64 	%rd10212, {%r19061, %r19060};
	shr.u64 	%rd10213, %rd9639, 7;
	xor.b64  	%rd10214, %rd10211, %rd10213;
	xor.b64  	%rd10215, %rd10214, %rd10212;
	add.s64 	%rd10216, %rd9743, %rd9626;
	add.s64 	%rd10217, %rd10216, %rd10210;
	add.s64 	%rd10218, %rd10217, %rd10215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19062,%dummy}, %rd10205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19063}, %rd10205;
	}
	shf.r.wrap.b32 	%r19064, %r19063, %r19062, 19;
	shf.r.wrap.b32 	%r19065, %r19062, %r19063, 19;
	mov.b64 	%rd10219, {%r19065, %r19064};
	shf.l.wrap.b32 	%r19066, %r19062, %r19063, 3;
	shf.l.wrap.b32 	%r19067, %r19063, %r19062, 3;
	mov.b64 	%rd10220, {%r19067, %r19066};
	shr.u64 	%rd10221, %rd10205, 6;
	xor.b64  	%rd10222, %rd10219, %rd10221;
	xor.b64  	%rd10223, %rd10222, %rd10220;
	shf.r.wrap.b32 	%r19068, %r18677, %r18676, 1;
	shf.r.wrap.b32 	%r19069, %r18676, %r18677, 1;
	mov.b64 	%rd10224, {%r19069, %r19068};
	shf.r.wrap.b32 	%r19070, %r18677, %r18676, 8;
	shf.r.wrap.b32 	%r19071, %r18676, %r18677, 8;
	mov.b64 	%rd10225, {%r19071, %r19070};
	shr.u64 	%rd10226, %rd9652, 7;
	xor.b64  	%rd10227, %rd10224, %rd10226;
	xor.b64  	%rd10228, %rd10227, %rd10225;
	add.s64 	%rd10229, %rd9756, %rd9639;
	add.s64 	%rd10230, %rd10229, %rd10223;
	add.s64 	%rd10231, %rd10230, %rd10228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19072,%dummy}, %rd10218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19073}, %rd10218;
	}
	shf.r.wrap.b32 	%r19074, %r19073, %r19072, 19;
	shf.r.wrap.b32 	%r19075, %r19072, %r19073, 19;
	mov.b64 	%rd10232, {%r19075, %r19074};
	shf.l.wrap.b32 	%r19076, %r19072, %r19073, 3;
	shf.l.wrap.b32 	%r19077, %r19073, %r19072, 3;
	mov.b64 	%rd10233, {%r19077, %r19076};
	shr.u64 	%rd10234, %rd10218, 6;
	xor.b64  	%rd10235, %rd10232, %rd10234;
	xor.b64  	%rd10236, %rd10235, %rd10233;
	shf.r.wrap.b32 	%r19078, %r18687, %r18686, 1;
	shf.r.wrap.b32 	%r19079, %r18686, %r18687, 1;
	mov.b64 	%rd10237, {%r19079, %r19078};
	shf.r.wrap.b32 	%r19080, %r18687, %r18686, 8;
	shf.r.wrap.b32 	%r19081, %r18686, %r18687, 8;
	mov.b64 	%rd10238, {%r19081, %r19080};
	shr.u64 	%rd10239, %rd9665, 7;
	xor.b64  	%rd10240, %rd10237, %rd10239;
	xor.b64  	%rd10241, %rd10240, %rd10238;
	add.s64 	%rd10242, %rd9769, %rd9652;
	add.s64 	%rd10243, %rd10242, %rd10236;
	add.s64 	%rd10244, %rd10243, %rd10241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19082,%dummy}, %rd10231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19083}, %rd10231;
	}
	shf.r.wrap.b32 	%r19084, %r19083, %r19082, 19;
	shf.r.wrap.b32 	%r19085, %r19082, %r19083, 19;
	mov.b64 	%rd10245, {%r19085, %r19084};
	shf.l.wrap.b32 	%r19086, %r19082, %r19083, 3;
	shf.l.wrap.b32 	%r19087, %r19083, %r19082, 3;
	mov.b64 	%rd10246, {%r19087, %r19086};
	shr.u64 	%rd10247, %rd10231, 6;
	xor.b64  	%rd10248, %rd10245, %rd10247;
	xor.b64  	%rd10249, %rd10248, %rd10246;
	shf.r.wrap.b32 	%r19088, %r18697, %r18696, 1;
	shf.r.wrap.b32 	%r19089, %r18696, %r18697, 1;
	mov.b64 	%rd10250, {%r19089, %r19088};
	shf.r.wrap.b32 	%r19090, %r18697, %r18696, 8;
	shf.r.wrap.b32 	%r19091, %r18696, %r18697, 8;
	mov.b64 	%rd10251, {%r19091, %r19090};
	shr.u64 	%rd10252, %rd9678, 7;
	xor.b64  	%rd10253, %rd10250, %rd10252;
	xor.b64  	%rd10254, %rd10253, %rd10251;
	add.s64 	%rd10255, %rd9782, %rd9665;
	add.s64 	%rd10256, %rd10255, %rd10249;
	add.s64 	%rd10257, %rd10256, %rd10254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19092,%dummy}, %rd10244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19093}, %rd10244;
	}
	shf.r.wrap.b32 	%r19094, %r19093, %r19092, 19;
	shf.r.wrap.b32 	%r19095, %r19092, %r19093, 19;
	mov.b64 	%rd10258, {%r19095, %r19094};
	shf.l.wrap.b32 	%r19096, %r19092, %r19093, 3;
	shf.l.wrap.b32 	%r19097, %r19093, %r19092, 3;
	mov.b64 	%rd10259, {%r19097, %r19096};
	shr.u64 	%rd10260, %rd10244, 6;
	xor.b64  	%rd10261, %rd10258, %rd10260;
	xor.b64  	%rd10262, %rd10261, %rd10259;
	shf.r.wrap.b32 	%r19098, %r18707, %r18706, 1;
	shf.r.wrap.b32 	%r19099, %r18706, %r18707, 1;
	mov.b64 	%rd10263, {%r19099, %r19098};
	shf.r.wrap.b32 	%r19100, %r18707, %r18706, 8;
	shf.r.wrap.b32 	%r19101, %r18706, %r18707, 8;
	mov.b64 	%rd10264, {%r19101, %r19100};
	shr.u64 	%rd10265, %rd9691, 7;
	xor.b64  	%rd10266, %rd10263, %rd10265;
	xor.b64  	%rd10267, %rd10266, %rd10264;
	add.s64 	%rd10268, %rd9795, %rd9678;
	add.s64 	%rd10269, %rd10268, %rd10262;
	add.s64 	%rd10270, %rd10269, %rd10267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19102,%dummy}, %rd10257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19103}, %rd10257;
	}
	shf.r.wrap.b32 	%r19104, %r19103, %r19102, 19;
	shf.r.wrap.b32 	%r19105, %r19102, %r19103, 19;
	mov.b64 	%rd10271, {%r19105, %r19104};
	shf.l.wrap.b32 	%r19106, %r19102, %r19103, 3;
	shf.l.wrap.b32 	%r19107, %r19103, %r19102, 3;
	mov.b64 	%rd10272, {%r19107, %r19106};
	shr.u64 	%rd10273, %rd10257, 6;
	xor.b64  	%rd10274, %rd10271, %rd10273;
	xor.b64  	%rd10275, %rd10274, %rd10272;
	shf.r.wrap.b32 	%r19108, %r18717, %r18716, 1;
	shf.r.wrap.b32 	%r19109, %r18716, %r18717, 1;
	mov.b64 	%rd10276, {%r19109, %r19108};
	shf.r.wrap.b32 	%r19110, %r18717, %r18716, 8;
	shf.r.wrap.b32 	%r19111, %r18716, %r18717, 8;
	mov.b64 	%rd10277, {%r19111, %r19110};
	shr.u64 	%rd10278, %rd9704, 7;
	xor.b64  	%rd10279, %rd10276, %rd10278;
	xor.b64  	%rd10280, %rd10279, %rd10277;
	add.s64 	%rd10281, %rd10192, %rd9691;
	add.s64 	%rd10282, %rd10281, %rd10275;
	add.s64 	%rd10283, %rd10282, %rd10280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19112,%dummy}, %rd10270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19113}, %rd10270;
	}
	shf.r.wrap.b32 	%r19114, %r19113, %r19112, 19;
	shf.r.wrap.b32 	%r19115, %r19112, %r19113, 19;
	mov.b64 	%rd10284, {%r19115, %r19114};
	shf.l.wrap.b32 	%r19116, %r19112, %r19113, 3;
	shf.l.wrap.b32 	%r19117, %r19113, %r19112, 3;
	mov.b64 	%rd10285, {%r19117, %r19116};
	shr.u64 	%rd10286, %rd10270, 6;
	xor.b64  	%rd10287, %rd10284, %rd10286;
	xor.b64  	%rd10288, %rd10287, %rd10285;
	shf.r.wrap.b32 	%r19118, %r18727, %r18726, 1;
	shf.r.wrap.b32 	%r19119, %r18726, %r18727, 1;
	mov.b64 	%rd10289, {%r19119, %r19118};
	shf.r.wrap.b32 	%r19120, %r18727, %r18726, 8;
	shf.r.wrap.b32 	%r19121, %r18726, %r18727, 8;
	mov.b64 	%rd10290, {%r19121, %r19120};
	shr.u64 	%rd10291, %rd9717, 7;
	xor.b64  	%rd10292, %rd10289, %rd10291;
	xor.b64  	%rd10293, %rd10292, %rd10290;
	add.s64 	%rd10294, %rd10205, %rd9704;
	add.s64 	%rd10295, %rd10294, %rd10288;
	add.s64 	%rd10296, %rd10295, %rd10293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19122,%dummy}, %rd10283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19123}, %rd10283;
	}
	shf.r.wrap.b32 	%r19124, %r19123, %r19122, 19;
	shf.r.wrap.b32 	%r19125, %r19122, %r19123, 19;
	mov.b64 	%rd10297, {%r19125, %r19124};
	shf.l.wrap.b32 	%r19126, %r19122, %r19123, 3;
	shf.l.wrap.b32 	%r19127, %r19123, %r19122, 3;
	mov.b64 	%rd10298, {%r19127, %r19126};
	shr.u64 	%rd10299, %rd10283, 6;
	xor.b64  	%rd10300, %rd10297, %rd10299;
	xor.b64  	%rd10301, %rd10300, %rd10298;
	shf.r.wrap.b32 	%r19128, %r18737, %r18736, 1;
	shf.r.wrap.b32 	%r19129, %r18736, %r18737, 1;
	mov.b64 	%rd10302, {%r19129, %r19128};
	shf.r.wrap.b32 	%r19130, %r18737, %r18736, 8;
	shf.r.wrap.b32 	%r19131, %r18736, %r18737, 8;
	mov.b64 	%rd10303, {%r19131, %r19130};
	shr.u64 	%rd10304, %rd9730, 7;
	xor.b64  	%rd10305, %rd10302, %rd10304;
	xor.b64  	%rd10306, %rd10305, %rd10303;
	add.s64 	%rd10307, %rd10218, %rd9717;
	add.s64 	%rd10308, %rd10307, %rd10301;
	add.s64 	%rd10309, %rd10308, %rd10306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19132,%dummy}, %rd10296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19133}, %rd10296;
	}
	shf.r.wrap.b32 	%r19134, %r19133, %r19132, 19;
	shf.r.wrap.b32 	%r19135, %r19132, %r19133, 19;
	mov.b64 	%rd10310, {%r19135, %r19134};
	shf.l.wrap.b32 	%r19136, %r19132, %r19133, 3;
	shf.l.wrap.b32 	%r19137, %r19133, %r19132, 3;
	mov.b64 	%rd10311, {%r19137, %r19136};
	shr.u64 	%rd10312, %rd10296, 6;
	xor.b64  	%rd10313, %rd10310, %rd10312;
	xor.b64  	%rd10314, %rd10313, %rd10311;
	shf.r.wrap.b32 	%r19138, %r18747, %r18746, 1;
	shf.r.wrap.b32 	%r19139, %r18746, %r18747, 1;
	mov.b64 	%rd10315, {%r19139, %r19138};
	shf.r.wrap.b32 	%r19140, %r18747, %r18746, 8;
	shf.r.wrap.b32 	%r19141, %r18746, %r18747, 8;
	mov.b64 	%rd10316, {%r19141, %r19140};
	shr.u64 	%rd10317, %rd9743, 7;
	xor.b64  	%rd10318, %rd10315, %rd10317;
	xor.b64  	%rd10319, %rd10318, %rd10316;
	add.s64 	%rd10320, %rd10231, %rd9730;
	add.s64 	%rd10321, %rd10320, %rd10314;
	add.s64 	%rd10322, %rd10321, %rd10319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19142,%dummy}, %rd10309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19143}, %rd10309;
	}
	shf.r.wrap.b32 	%r19144, %r19143, %r19142, 19;
	shf.r.wrap.b32 	%r19145, %r19142, %r19143, 19;
	mov.b64 	%rd10323, {%r19145, %r19144};
	shf.l.wrap.b32 	%r19146, %r19142, %r19143, 3;
	shf.l.wrap.b32 	%r19147, %r19143, %r19142, 3;
	mov.b64 	%rd10324, {%r19147, %r19146};
	shr.u64 	%rd10325, %rd10309, 6;
	xor.b64  	%rd10326, %rd10323, %rd10325;
	xor.b64  	%rd10327, %rd10326, %rd10324;
	shf.r.wrap.b32 	%r19148, %r18757, %r18756, 1;
	shf.r.wrap.b32 	%r19149, %r18756, %r18757, 1;
	mov.b64 	%rd10328, {%r19149, %r19148};
	shf.r.wrap.b32 	%r19150, %r18757, %r18756, 8;
	shf.r.wrap.b32 	%r19151, %r18756, %r18757, 8;
	mov.b64 	%rd10329, {%r19151, %r19150};
	shr.u64 	%rd10330, %rd9756, 7;
	xor.b64  	%rd10331, %rd10328, %rd10330;
	xor.b64  	%rd10332, %rd10331, %rd10329;
	add.s64 	%rd10333, %rd10244, %rd9743;
	add.s64 	%rd10334, %rd10333, %rd10327;
	add.s64 	%rd10335, %rd10334, %rd10332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19152,%dummy}, %rd10322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19153}, %rd10322;
	}
	shf.r.wrap.b32 	%r19154, %r19153, %r19152, 19;
	shf.r.wrap.b32 	%r19155, %r19152, %r19153, 19;
	mov.b64 	%rd10336, {%r19155, %r19154};
	shf.l.wrap.b32 	%r19156, %r19152, %r19153, 3;
	shf.l.wrap.b32 	%r19157, %r19153, %r19152, 3;
	mov.b64 	%rd10337, {%r19157, %r19156};
	shr.u64 	%rd10338, %rd10322, 6;
	xor.b64  	%rd10339, %rd10336, %rd10338;
	xor.b64  	%rd10340, %rd10339, %rd10337;
	shf.r.wrap.b32 	%r19158, %r18767, %r18766, 1;
	shf.r.wrap.b32 	%r19159, %r18766, %r18767, 1;
	mov.b64 	%rd10341, {%r19159, %r19158};
	shf.r.wrap.b32 	%r19160, %r18767, %r18766, 8;
	shf.r.wrap.b32 	%r19161, %r18766, %r18767, 8;
	mov.b64 	%rd10342, {%r19161, %r19160};
	shr.u64 	%rd10343, %rd9769, 7;
	xor.b64  	%rd10344, %rd10341, %rd10343;
	xor.b64  	%rd10345, %rd10344, %rd10342;
	add.s64 	%rd10346, %rd10257, %rd9756;
	add.s64 	%rd10347, %rd10346, %rd10340;
	add.s64 	%rd10348, %rd10347, %rd10345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19162,%dummy}, %rd10335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19163}, %rd10335;
	}
	shf.r.wrap.b32 	%r19164, %r19163, %r19162, 19;
	shf.r.wrap.b32 	%r19165, %r19162, %r19163, 19;
	mov.b64 	%rd10349, {%r19165, %r19164};
	shf.l.wrap.b32 	%r19166, %r19162, %r19163, 3;
	shf.l.wrap.b32 	%r19167, %r19163, %r19162, 3;
	mov.b64 	%rd10350, {%r19167, %r19166};
	shr.u64 	%rd10351, %rd10335, 6;
	xor.b64  	%rd10352, %rd10349, %rd10351;
	xor.b64  	%rd10353, %rd10352, %rd10350;
	shf.r.wrap.b32 	%r19168, %r19033, %r19032, 1;
	shf.r.wrap.b32 	%r19169, %r19032, %r19033, 1;
	mov.b64 	%rd10354, {%r19169, %r19168};
	shf.r.wrap.b32 	%r19170, %r19033, %r19032, 8;
	shf.r.wrap.b32 	%r19171, %r19032, %r19033, 8;
	mov.b64 	%rd10355, {%r19171, %r19170};
	shr.u64 	%rd10356, %rd9782, 7;
	xor.b64  	%rd10357, %rd10354, %rd10356;
	xor.b64  	%rd10358, %rd10357, %rd10355;
	add.s64 	%rd10359, %rd10270, %rd9769;
	add.s64 	%rd10360, %rd10359, %rd10353;
	add.s64 	%rd10361, %rd10360, %rd10358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19172,%dummy}, %rd10348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19173}, %rd10348;
	}
	shf.r.wrap.b32 	%r19174, %r19173, %r19172, 19;
	shf.r.wrap.b32 	%r19175, %r19172, %r19173, 19;
	mov.b64 	%rd10362, {%r19175, %r19174};
	shf.l.wrap.b32 	%r19176, %r19172, %r19173, 3;
	shf.l.wrap.b32 	%r19177, %r19173, %r19172, 3;
	mov.b64 	%rd10363, {%r19177, %r19176};
	shr.u64 	%rd10364, %rd10348, 6;
	xor.b64  	%rd10365, %rd10362, %rd10364;
	xor.b64  	%rd10366, %rd10365, %rd10363;
	shf.r.wrap.b32 	%r19178, %r19043, %r19042, 1;
	shf.r.wrap.b32 	%r19179, %r19042, %r19043, 1;
	mov.b64 	%rd10367, {%r19179, %r19178};
	shf.r.wrap.b32 	%r19180, %r19043, %r19042, 8;
	shf.r.wrap.b32 	%r19181, %r19042, %r19043, 8;
	mov.b64 	%rd10368, {%r19181, %r19180};
	shr.u64 	%rd10369, %rd9795, 7;
	xor.b64  	%rd10370, %rd10367, %rd10369;
	xor.b64  	%rd10371, %rd10370, %rd10368;
	add.s64 	%rd10372, %rd10283, %rd9782;
	add.s64 	%rd10373, %rd10372, %rd10366;
	add.s64 	%rd10374, %rd10373, %rd10371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19182,%dummy}, %rd10361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19183}, %rd10361;
	}
	shf.r.wrap.b32 	%r19184, %r19183, %r19182, 19;
	shf.r.wrap.b32 	%r19185, %r19182, %r19183, 19;
	mov.b64 	%rd10375, {%r19185, %r19184};
	shf.l.wrap.b32 	%r19186, %r19182, %r19183, 3;
	shf.l.wrap.b32 	%r19187, %r19183, %r19182, 3;
	mov.b64 	%rd10376, {%r19187, %r19186};
	shr.u64 	%rd10377, %rd10361, 6;
	xor.b64  	%rd10378, %rd10375, %rd10377;
	xor.b64  	%rd10379, %rd10378, %rd10376;
	shf.r.wrap.b32 	%r19188, %r19053, %r19052, 1;
	shf.r.wrap.b32 	%r19189, %r19052, %r19053, 1;
	mov.b64 	%rd10380, {%r19189, %r19188};
	shf.r.wrap.b32 	%r19190, %r19053, %r19052, 8;
	shf.r.wrap.b32 	%r19191, %r19052, %r19053, 8;
	mov.b64 	%rd10381, {%r19191, %r19190};
	shr.u64 	%rd10382, %rd10192, 7;
	xor.b64  	%rd10383, %rd10380, %rd10382;
	xor.b64  	%rd10384, %rd10383, %rd10381;
	add.s64 	%rd10385, %rd10296, %rd9795;
	add.s64 	%rd10386, %rd10385, %rd10379;
	add.s64 	%rd10387, %rd10386, %rd10384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19192,%dummy}, %rd10168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19193}, %rd10168;
	}
	shf.r.wrap.b32 	%r19194, %r19193, %r19192, 14;
	shf.r.wrap.b32 	%r19195, %r19192, %r19193, 14;
	mov.b64 	%rd10388, {%r19195, %r19194};
	shf.r.wrap.b32 	%r19196, %r19193, %r19192, 18;
	shf.r.wrap.b32 	%r19197, %r19192, %r19193, 18;
	mov.b64 	%rd10389, {%r19197, %r19196};
	xor.b64  	%rd10390, %rd10389, %rd10388;
	shf.l.wrap.b32 	%r19198, %r19192, %r19193, 23;
	shf.l.wrap.b32 	%r19199, %r19193, %r19192, 23;
	mov.b64 	%rd10391, {%r19199, %r19198};
	xor.b64  	%rd10392, %rd10390, %rd10391;
	xor.b64  	%rd10393, %rd10144, %rd10120;
	and.b64  	%rd10394, %rd10168, %rd10393;
	xor.b64  	%rd10395, %rd10394, %rd10120;
	add.s64 	%rd10396, %rd10395, %rd10096;
	add.s64 	%rd10397, %rd10396, %rd10192;
	add.s64 	%rd10398, %rd10397, %rd76;
	add.s64 	%rd10399, %rd10398, %rd10392;
	add.s64 	%rd10400, %rd10399, %rd10107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19200,%dummy}, %rd10179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19201}, %rd10179;
	}
	shf.r.wrap.b32 	%r19202, %r19201, %r19200, 28;
	shf.r.wrap.b32 	%r19203, %r19200, %r19201, 28;
	mov.b64 	%rd10401, {%r19203, %r19202};
	shf.l.wrap.b32 	%r19204, %r19200, %r19201, 30;
	shf.l.wrap.b32 	%r19205, %r19201, %r19200, 30;
	mov.b64 	%rd10402, {%r19205, %r19204};
	xor.b64  	%rd10403, %rd10402, %rd10401;
	shf.l.wrap.b32 	%r19206, %r19200, %r19201, 25;
	shf.l.wrap.b32 	%r19207, %r19201, %r19200, 25;
	mov.b64 	%rd10404, {%r19207, %r19206};
	xor.b64  	%rd10405, %rd10403, %rd10404;
	and.b64  	%rd10406, %rd10179, %rd10155;
	xor.b64  	%rd10407, %rd10179, %rd10155;
	and.b64  	%rd10408, %rd10407, %rd10131;
	or.b64  	%rd10409, %rd10408, %rd10406;
	add.s64 	%rd10410, %rd10399, %rd10409;
	add.s64 	%rd10411, %rd10410, %rd10405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19208,%dummy}, %rd10400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19209}, %rd10400;
	}
	shf.r.wrap.b32 	%r19210, %r19209, %r19208, 14;
	shf.r.wrap.b32 	%r19211, %r19208, %r19209, 14;
	mov.b64 	%rd10412, {%r19211, %r19210};
	shf.r.wrap.b32 	%r19212, %r19209, %r19208, 18;
	shf.r.wrap.b32 	%r19213, %r19208, %r19209, 18;
	mov.b64 	%rd10413, {%r19213, %r19212};
	xor.b64  	%rd10414, %rd10413, %rd10412;
	shf.l.wrap.b32 	%r19214, %r19208, %r19209, 23;
	shf.l.wrap.b32 	%r19215, %r19209, %r19208, 23;
	mov.b64 	%rd10415, {%r19215, %r19214};
	xor.b64  	%rd10416, %rd10414, %rd10415;
	xor.b64  	%rd10417, %rd10168, %rd10144;
	and.b64  	%rd10418, %rd10400, %rd10417;
	xor.b64  	%rd10419, %rd10418, %rd10144;
	add.s64 	%rd10420, %rd10205, %rd10120;
	add.s64 	%rd10421, %rd10420, %rd77;
	add.s64 	%rd10422, %rd10421, %rd10419;
	add.s64 	%rd10423, %rd10422, %rd10416;
	add.s64 	%rd10424, %rd10423, %rd10131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19216,%dummy}, %rd10411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19217}, %rd10411;
	}
	shf.r.wrap.b32 	%r19218, %r19217, %r19216, 28;
	shf.r.wrap.b32 	%r19219, %r19216, %r19217, 28;
	mov.b64 	%rd10425, {%r19219, %r19218};
	shf.l.wrap.b32 	%r19220, %r19216, %r19217, 30;
	shf.l.wrap.b32 	%r19221, %r19217, %r19216, 30;
	mov.b64 	%rd10426, {%r19221, %r19220};
	xor.b64  	%rd10427, %rd10426, %rd10425;
	shf.l.wrap.b32 	%r19222, %r19216, %r19217, 25;
	shf.l.wrap.b32 	%r19223, %r19217, %r19216, 25;
	mov.b64 	%rd10428, {%r19223, %r19222};
	xor.b64  	%rd10429, %rd10427, %rd10428;
	and.b64  	%rd10430, %rd10411, %rd10179;
	xor.b64  	%rd10431, %rd10411, %rd10179;
	and.b64  	%rd10432, %rd10431, %rd10155;
	or.b64  	%rd10433, %rd10432, %rd10430;
	add.s64 	%rd10434, %rd10423, %rd10433;
	add.s64 	%rd10435, %rd10434, %rd10429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19224,%dummy}, %rd10424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19225}, %rd10424;
	}
	shf.r.wrap.b32 	%r19226, %r19225, %r19224, 14;
	shf.r.wrap.b32 	%r19227, %r19224, %r19225, 14;
	mov.b64 	%rd10436, {%r19227, %r19226};
	shf.r.wrap.b32 	%r19228, %r19225, %r19224, 18;
	shf.r.wrap.b32 	%r19229, %r19224, %r19225, 18;
	mov.b64 	%rd10437, {%r19229, %r19228};
	xor.b64  	%rd10438, %rd10437, %rd10436;
	shf.l.wrap.b32 	%r19230, %r19224, %r19225, 23;
	shf.l.wrap.b32 	%r19231, %r19225, %r19224, 23;
	mov.b64 	%rd10439, {%r19231, %r19230};
	xor.b64  	%rd10440, %rd10438, %rd10439;
	xor.b64  	%rd10441, %rd10400, %rd10168;
	and.b64  	%rd10442, %rd10424, %rd10441;
	xor.b64  	%rd10443, %rd10442, %rd10168;
	add.s64 	%rd10444, %rd10218, %rd10144;
	add.s64 	%rd10445, %rd10444, %rd78;
	add.s64 	%rd10446, %rd10445, %rd10443;
	add.s64 	%rd10447, %rd10446, %rd10440;
	add.s64 	%rd10448, %rd10447, %rd10155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19232,%dummy}, %rd10435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19233}, %rd10435;
	}
	shf.r.wrap.b32 	%r19234, %r19233, %r19232, 28;
	shf.r.wrap.b32 	%r19235, %r19232, %r19233, 28;
	mov.b64 	%rd10449, {%r19235, %r19234};
	shf.l.wrap.b32 	%r19236, %r19232, %r19233, 30;
	shf.l.wrap.b32 	%r19237, %r19233, %r19232, 30;
	mov.b64 	%rd10450, {%r19237, %r19236};
	xor.b64  	%rd10451, %rd10450, %rd10449;
	shf.l.wrap.b32 	%r19238, %r19232, %r19233, 25;
	shf.l.wrap.b32 	%r19239, %r19233, %r19232, 25;
	mov.b64 	%rd10452, {%r19239, %r19238};
	xor.b64  	%rd10453, %rd10451, %rd10452;
	and.b64  	%rd10454, %rd10435, %rd10411;
	xor.b64  	%rd10455, %rd10435, %rd10411;
	and.b64  	%rd10456, %rd10455, %rd10179;
	or.b64  	%rd10457, %rd10456, %rd10454;
	add.s64 	%rd10458, %rd10447, %rd10457;
	add.s64 	%rd10459, %rd10458, %rd10453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19240,%dummy}, %rd10448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19241}, %rd10448;
	}
	shf.r.wrap.b32 	%r19242, %r19241, %r19240, 14;
	shf.r.wrap.b32 	%r19243, %r19240, %r19241, 14;
	mov.b64 	%rd10460, {%r19243, %r19242};
	shf.r.wrap.b32 	%r19244, %r19241, %r19240, 18;
	shf.r.wrap.b32 	%r19245, %r19240, %r19241, 18;
	mov.b64 	%rd10461, {%r19245, %r19244};
	xor.b64  	%rd10462, %rd10461, %rd10460;
	shf.l.wrap.b32 	%r19246, %r19240, %r19241, 23;
	shf.l.wrap.b32 	%r19247, %r19241, %r19240, 23;
	mov.b64 	%rd10463, {%r19247, %r19246};
	xor.b64  	%rd10464, %rd10462, %rd10463;
	xor.b64  	%rd10465, %rd10424, %rd10400;
	and.b64  	%rd10466, %rd10448, %rd10465;
	xor.b64  	%rd10467, %rd10466, %rd10400;
	add.s64 	%rd10468, %rd10231, %rd10168;
	add.s64 	%rd10469, %rd10468, %rd79;
	add.s64 	%rd10470, %rd10469, %rd10467;
	add.s64 	%rd10471, %rd10470, %rd10464;
	add.s64 	%rd10472, %rd10471, %rd10179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19248,%dummy}, %rd10459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19249}, %rd10459;
	}
	shf.r.wrap.b32 	%r19250, %r19249, %r19248, 28;
	shf.r.wrap.b32 	%r19251, %r19248, %r19249, 28;
	mov.b64 	%rd10473, {%r19251, %r19250};
	shf.l.wrap.b32 	%r19252, %r19248, %r19249, 30;
	shf.l.wrap.b32 	%r19253, %r19249, %r19248, 30;
	mov.b64 	%rd10474, {%r19253, %r19252};
	xor.b64  	%rd10475, %rd10474, %rd10473;
	shf.l.wrap.b32 	%r19254, %r19248, %r19249, 25;
	shf.l.wrap.b32 	%r19255, %r19249, %r19248, 25;
	mov.b64 	%rd10476, {%r19255, %r19254};
	xor.b64  	%rd10477, %rd10475, %rd10476;
	and.b64  	%rd10478, %rd10459, %rd10435;
	xor.b64  	%rd10479, %rd10459, %rd10435;
	and.b64  	%rd10480, %rd10479, %rd10411;
	or.b64  	%rd10481, %rd10480, %rd10478;
	add.s64 	%rd10482, %rd10471, %rd10481;
	add.s64 	%rd10483, %rd10482, %rd10477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19256,%dummy}, %rd10472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19257}, %rd10472;
	}
	shf.r.wrap.b32 	%r19258, %r19257, %r19256, 14;
	shf.r.wrap.b32 	%r19259, %r19256, %r19257, 14;
	mov.b64 	%rd10484, {%r19259, %r19258};
	shf.r.wrap.b32 	%r19260, %r19257, %r19256, 18;
	shf.r.wrap.b32 	%r19261, %r19256, %r19257, 18;
	mov.b64 	%rd10485, {%r19261, %r19260};
	xor.b64  	%rd10486, %rd10485, %rd10484;
	shf.l.wrap.b32 	%r19262, %r19256, %r19257, 23;
	shf.l.wrap.b32 	%r19263, %r19257, %r19256, 23;
	mov.b64 	%rd10487, {%r19263, %r19262};
	xor.b64  	%rd10488, %rd10486, %rd10487;
	xor.b64  	%rd10489, %rd10448, %rd10424;
	and.b64  	%rd10490, %rd10472, %rd10489;
	xor.b64  	%rd10491, %rd10490, %rd10424;
	add.s64 	%rd10492, %rd10400, %rd10244;
	add.s64 	%rd10493, %rd10492, %rd80;
	add.s64 	%rd10494, %rd10493, %rd10491;
	add.s64 	%rd10495, %rd10494, %rd10488;
	add.s64 	%rd10496, %rd10495, %rd10411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19264,%dummy}, %rd10483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19265}, %rd10483;
	}
	shf.r.wrap.b32 	%r19266, %r19265, %r19264, 28;
	shf.r.wrap.b32 	%r19267, %r19264, %r19265, 28;
	mov.b64 	%rd10497, {%r19267, %r19266};
	shf.l.wrap.b32 	%r19268, %r19264, %r19265, 30;
	shf.l.wrap.b32 	%r19269, %r19265, %r19264, 30;
	mov.b64 	%rd10498, {%r19269, %r19268};
	xor.b64  	%rd10499, %rd10498, %rd10497;
	shf.l.wrap.b32 	%r19270, %r19264, %r19265, 25;
	shf.l.wrap.b32 	%r19271, %r19265, %r19264, 25;
	mov.b64 	%rd10500, {%r19271, %r19270};
	xor.b64  	%rd10501, %rd10499, %rd10500;
	and.b64  	%rd10502, %rd10483, %rd10459;
	xor.b64  	%rd10503, %rd10483, %rd10459;
	and.b64  	%rd10504, %rd10503, %rd10435;
	or.b64  	%rd10505, %rd10504, %rd10502;
	add.s64 	%rd10506, %rd10495, %rd10505;
	add.s64 	%rd10507, %rd10506, %rd10501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19272,%dummy}, %rd10496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19273}, %rd10496;
	}
	shf.r.wrap.b32 	%r19274, %r19273, %r19272, 14;
	shf.r.wrap.b32 	%r19275, %r19272, %r19273, 14;
	mov.b64 	%rd10508, {%r19275, %r19274};
	shf.r.wrap.b32 	%r19276, %r19273, %r19272, 18;
	shf.r.wrap.b32 	%r19277, %r19272, %r19273, 18;
	mov.b64 	%rd10509, {%r19277, %r19276};
	xor.b64  	%rd10510, %rd10509, %rd10508;
	shf.l.wrap.b32 	%r19278, %r19272, %r19273, 23;
	shf.l.wrap.b32 	%r19279, %r19273, %r19272, 23;
	mov.b64 	%rd10511, {%r19279, %r19278};
	xor.b64  	%rd10512, %rd10510, %rd10511;
	xor.b64  	%rd10513, %rd10472, %rd10448;
	and.b64  	%rd10514, %rd10496, %rd10513;
	xor.b64  	%rd10515, %rd10514, %rd10448;
	add.s64 	%rd10516, %rd10424, %rd10257;
	add.s64 	%rd10517, %rd10516, %rd81;
	add.s64 	%rd10518, %rd10517, %rd10515;
	add.s64 	%rd10519, %rd10518, %rd10512;
	add.s64 	%rd10520, %rd10519, %rd10435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19280,%dummy}, %rd10507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19281}, %rd10507;
	}
	shf.r.wrap.b32 	%r19282, %r19281, %r19280, 28;
	shf.r.wrap.b32 	%r19283, %r19280, %r19281, 28;
	mov.b64 	%rd10521, {%r19283, %r19282};
	shf.l.wrap.b32 	%r19284, %r19280, %r19281, 30;
	shf.l.wrap.b32 	%r19285, %r19281, %r19280, 30;
	mov.b64 	%rd10522, {%r19285, %r19284};
	xor.b64  	%rd10523, %rd10522, %rd10521;
	shf.l.wrap.b32 	%r19286, %r19280, %r19281, 25;
	shf.l.wrap.b32 	%r19287, %r19281, %r19280, 25;
	mov.b64 	%rd10524, {%r19287, %r19286};
	xor.b64  	%rd10525, %rd10523, %rd10524;
	and.b64  	%rd10526, %rd10507, %rd10483;
	xor.b64  	%rd10527, %rd10507, %rd10483;
	and.b64  	%rd10528, %rd10527, %rd10459;
	or.b64  	%rd10529, %rd10528, %rd10526;
	add.s64 	%rd10530, %rd10519, %rd10529;
	add.s64 	%rd10531, %rd10530, %rd10525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19288,%dummy}, %rd10520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19289}, %rd10520;
	}
	shf.r.wrap.b32 	%r19290, %r19289, %r19288, 14;
	shf.r.wrap.b32 	%r19291, %r19288, %r19289, 14;
	mov.b64 	%rd10532, {%r19291, %r19290};
	shf.r.wrap.b32 	%r19292, %r19289, %r19288, 18;
	shf.r.wrap.b32 	%r19293, %r19288, %r19289, 18;
	mov.b64 	%rd10533, {%r19293, %r19292};
	xor.b64  	%rd10534, %rd10533, %rd10532;
	shf.l.wrap.b32 	%r19294, %r19288, %r19289, 23;
	shf.l.wrap.b32 	%r19295, %r19289, %r19288, 23;
	mov.b64 	%rd10535, {%r19295, %r19294};
	xor.b64  	%rd10536, %rd10534, %rd10535;
	xor.b64  	%rd10537, %rd10496, %rd10472;
	and.b64  	%rd10538, %rd10520, %rd10537;
	xor.b64  	%rd10539, %rd10538, %rd10472;
	add.s64 	%rd10540, %rd10448, %rd10270;
	add.s64 	%rd10541, %rd10540, %rd82;
	add.s64 	%rd10542, %rd10541, %rd10539;
	add.s64 	%rd10543, %rd10542, %rd10536;
	add.s64 	%rd10544, %rd10543, %rd10459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19296,%dummy}, %rd10531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19297}, %rd10531;
	}
	shf.r.wrap.b32 	%r19298, %r19297, %r19296, 28;
	shf.r.wrap.b32 	%r19299, %r19296, %r19297, 28;
	mov.b64 	%rd10545, {%r19299, %r19298};
	shf.l.wrap.b32 	%r19300, %r19296, %r19297, 30;
	shf.l.wrap.b32 	%r19301, %r19297, %r19296, 30;
	mov.b64 	%rd10546, {%r19301, %r19300};
	xor.b64  	%rd10547, %rd10546, %rd10545;
	shf.l.wrap.b32 	%r19302, %r19296, %r19297, 25;
	shf.l.wrap.b32 	%r19303, %r19297, %r19296, 25;
	mov.b64 	%rd10548, {%r19303, %r19302};
	xor.b64  	%rd10549, %rd10547, %rd10548;
	and.b64  	%rd10550, %rd10531, %rd10507;
	xor.b64  	%rd10551, %rd10531, %rd10507;
	and.b64  	%rd10552, %rd10551, %rd10483;
	or.b64  	%rd10553, %rd10552, %rd10550;
	add.s64 	%rd10554, %rd10543, %rd10553;
	add.s64 	%rd10555, %rd10554, %rd10549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19304,%dummy}, %rd10544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19305}, %rd10544;
	}
	shf.r.wrap.b32 	%r19306, %r19305, %r19304, 14;
	shf.r.wrap.b32 	%r19307, %r19304, %r19305, 14;
	mov.b64 	%rd10556, {%r19307, %r19306};
	shf.r.wrap.b32 	%r19308, %r19305, %r19304, 18;
	shf.r.wrap.b32 	%r19309, %r19304, %r19305, 18;
	mov.b64 	%rd10557, {%r19309, %r19308};
	xor.b64  	%rd10558, %rd10557, %rd10556;
	shf.l.wrap.b32 	%r19310, %r19304, %r19305, 23;
	shf.l.wrap.b32 	%r19311, %r19305, %r19304, 23;
	mov.b64 	%rd10559, {%r19311, %r19310};
	xor.b64  	%rd10560, %rd10558, %rd10559;
	xor.b64  	%rd10561, %rd10520, %rd10496;
	and.b64  	%rd10562, %rd10544, %rd10561;
	xor.b64  	%rd10563, %rd10562, %rd10496;
	add.s64 	%rd10564, %rd10472, %rd10283;
	add.s64 	%rd10565, %rd10564, %rd83;
	add.s64 	%rd10566, %rd10565, %rd10563;
	add.s64 	%rd10567, %rd10566, %rd10560;
	add.s64 	%rd10568, %rd10567, %rd10483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19312,%dummy}, %rd10555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19313}, %rd10555;
	}
	shf.r.wrap.b32 	%r19314, %r19313, %r19312, 28;
	shf.r.wrap.b32 	%r19315, %r19312, %r19313, 28;
	mov.b64 	%rd10569, {%r19315, %r19314};
	shf.l.wrap.b32 	%r19316, %r19312, %r19313, 30;
	shf.l.wrap.b32 	%r19317, %r19313, %r19312, 30;
	mov.b64 	%rd10570, {%r19317, %r19316};
	xor.b64  	%rd10571, %rd10570, %rd10569;
	shf.l.wrap.b32 	%r19318, %r19312, %r19313, 25;
	shf.l.wrap.b32 	%r19319, %r19313, %r19312, 25;
	mov.b64 	%rd10572, {%r19319, %r19318};
	xor.b64  	%rd10573, %rd10571, %rd10572;
	and.b64  	%rd10574, %rd10555, %rd10531;
	xor.b64  	%rd10575, %rd10555, %rd10531;
	and.b64  	%rd10576, %rd10575, %rd10507;
	or.b64  	%rd10577, %rd10576, %rd10574;
	add.s64 	%rd10578, %rd10567, %rd10577;
	add.s64 	%rd10579, %rd10578, %rd10573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19320,%dummy}, %rd10568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19321}, %rd10568;
	}
	shf.r.wrap.b32 	%r19322, %r19321, %r19320, 14;
	shf.r.wrap.b32 	%r19323, %r19320, %r19321, 14;
	mov.b64 	%rd10580, {%r19323, %r19322};
	shf.r.wrap.b32 	%r19324, %r19321, %r19320, 18;
	shf.r.wrap.b32 	%r19325, %r19320, %r19321, 18;
	mov.b64 	%rd10581, {%r19325, %r19324};
	xor.b64  	%rd10582, %rd10581, %rd10580;
	shf.l.wrap.b32 	%r19326, %r19320, %r19321, 23;
	shf.l.wrap.b32 	%r19327, %r19321, %r19320, 23;
	mov.b64 	%rd10583, {%r19327, %r19326};
	xor.b64  	%rd10584, %rd10582, %rd10583;
	xor.b64  	%rd10585, %rd10544, %rd10520;
	and.b64  	%rd10586, %rd10568, %rd10585;
	xor.b64  	%rd10587, %rd10586, %rd10520;
	add.s64 	%rd10588, %rd10496, %rd10296;
	add.s64 	%rd10589, %rd10588, %rd84;
	add.s64 	%rd10590, %rd10589, %rd10587;
	add.s64 	%rd10591, %rd10590, %rd10584;
	add.s64 	%rd10592, %rd10591, %rd10507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19328,%dummy}, %rd10579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19329}, %rd10579;
	}
	shf.r.wrap.b32 	%r19330, %r19329, %r19328, 28;
	shf.r.wrap.b32 	%r19331, %r19328, %r19329, 28;
	mov.b64 	%rd10593, {%r19331, %r19330};
	shf.l.wrap.b32 	%r19332, %r19328, %r19329, 30;
	shf.l.wrap.b32 	%r19333, %r19329, %r19328, 30;
	mov.b64 	%rd10594, {%r19333, %r19332};
	xor.b64  	%rd10595, %rd10594, %rd10593;
	shf.l.wrap.b32 	%r19334, %r19328, %r19329, 25;
	shf.l.wrap.b32 	%r19335, %r19329, %r19328, 25;
	mov.b64 	%rd10596, {%r19335, %r19334};
	xor.b64  	%rd10597, %rd10595, %rd10596;
	and.b64  	%rd10598, %rd10579, %rd10555;
	xor.b64  	%rd10599, %rd10579, %rd10555;
	and.b64  	%rd10600, %rd10599, %rd10531;
	or.b64  	%rd10601, %rd10600, %rd10598;
	add.s64 	%rd10602, %rd10591, %rd10601;
	add.s64 	%rd10603, %rd10602, %rd10597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19336,%dummy}, %rd10592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19337}, %rd10592;
	}
	shf.r.wrap.b32 	%r19338, %r19337, %r19336, 14;
	shf.r.wrap.b32 	%r19339, %r19336, %r19337, 14;
	mov.b64 	%rd10604, {%r19339, %r19338};
	shf.r.wrap.b32 	%r19340, %r19337, %r19336, 18;
	shf.r.wrap.b32 	%r19341, %r19336, %r19337, 18;
	mov.b64 	%rd10605, {%r19341, %r19340};
	xor.b64  	%rd10606, %rd10605, %rd10604;
	shf.l.wrap.b32 	%r19342, %r19336, %r19337, 23;
	shf.l.wrap.b32 	%r19343, %r19337, %r19336, 23;
	mov.b64 	%rd10607, {%r19343, %r19342};
	xor.b64  	%rd10608, %rd10606, %rd10607;
	xor.b64  	%rd10609, %rd10568, %rd10544;
	and.b64  	%rd10610, %rd10592, %rd10609;
	xor.b64  	%rd10611, %rd10610, %rd10544;
	add.s64 	%rd10612, %rd10520, %rd10309;
	add.s64 	%rd10613, %rd10612, %rd85;
	add.s64 	%rd10614, %rd10613, %rd10611;
	add.s64 	%rd10615, %rd10614, %rd10608;
	add.s64 	%rd10616, %rd10615, %rd10531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19344,%dummy}, %rd10603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19345}, %rd10603;
	}
	shf.r.wrap.b32 	%r19346, %r19345, %r19344, 28;
	shf.r.wrap.b32 	%r19347, %r19344, %r19345, 28;
	mov.b64 	%rd10617, {%r19347, %r19346};
	shf.l.wrap.b32 	%r19348, %r19344, %r19345, 30;
	shf.l.wrap.b32 	%r19349, %r19345, %r19344, 30;
	mov.b64 	%rd10618, {%r19349, %r19348};
	xor.b64  	%rd10619, %rd10618, %rd10617;
	shf.l.wrap.b32 	%r19350, %r19344, %r19345, 25;
	shf.l.wrap.b32 	%r19351, %r19345, %r19344, 25;
	mov.b64 	%rd10620, {%r19351, %r19350};
	xor.b64  	%rd10621, %rd10619, %rd10620;
	and.b64  	%rd10622, %rd10603, %rd10579;
	xor.b64  	%rd10623, %rd10603, %rd10579;
	and.b64  	%rd10624, %rd10623, %rd10555;
	or.b64  	%rd10625, %rd10624, %rd10622;
	add.s64 	%rd10626, %rd10615, %rd10625;
	add.s64 	%rd10627, %rd10626, %rd10621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19352,%dummy}, %rd10616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19353}, %rd10616;
	}
	shf.r.wrap.b32 	%r19354, %r19353, %r19352, 14;
	shf.r.wrap.b32 	%r19355, %r19352, %r19353, 14;
	mov.b64 	%rd10628, {%r19355, %r19354};
	shf.r.wrap.b32 	%r19356, %r19353, %r19352, 18;
	shf.r.wrap.b32 	%r19357, %r19352, %r19353, 18;
	mov.b64 	%rd10629, {%r19357, %r19356};
	xor.b64  	%rd10630, %rd10629, %rd10628;
	shf.l.wrap.b32 	%r19358, %r19352, %r19353, 23;
	shf.l.wrap.b32 	%r19359, %r19353, %r19352, 23;
	mov.b64 	%rd10631, {%r19359, %r19358};
	xor.b64  	%rd10632, %rd10630, %rd10631;
	xor.b64  	%rd10633, %rd10592, %rd10568;
	and.b64  	%rd10634, %rd10616, %rd10633;
	xor.b64  	%rd10635, %rd10634, %rd10568;
	add.s64 	%rd10636, %rd10544, %rd10322;
	add.s64 	%rd10637, %rd10636, %rd86;
	add.s64 	%rd10638, %rd10637, %rd10635;
	add.s64 	%rd10639, %rd10638, %rd10632;
	add.s64 	%rd10640, %rd10639, %rd10555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19360,%dummy}, %rd10627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19361}, %rd10627;
	}
	shf.r.wrap.b32 	%r19362, %r19361, %r19360, 28;
	shf.r.wrap.b32 	%r19363, %r19360, %r19361, 28;
	mov.b64 	%rd10641, {%r19363, %r19362};
	shf.l.wrap.b32 	%r19364, %r19360, %r19361, 30;
	shf.l.wrap.b32 	%r19365, %r19361, %r19360, 30;
	mov.b64 	%rd10642, {%r19365, %r19364};
	xor.b64  	%rd10643, %rd10642, %rd10641;
	shf.l.wrap.b32 	%r19366, %r19360, %r19361, 25;
	shf.l.wrap.b32 	%r19367, %r19361, %r19360, 25;
	mov.b64 	%rd10644, {%r19367, %r19366};
	xor.b64  	%rd10645, %rd10643, %rd10644;
	and.b64  	%rd10646, %rd10627, %rd10603;
	xor.b64  	%rd10647, %rd10627, %rd10603;
	and.b64  	%rd10648, %rd10647, %rd10579;
	or.b64  	%rd10649, %rd10648, %rd10646;
	add.s64 	%rd10650, %rd10639, %rd10649;
	add.s64 	%rd10651, %rd10650, %rd10645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19368,%dummy}, %rd10640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19369}, %rd10640;
	}
	shf.r.wrap.b32 	%r19370, %r19369, %r19368, 14;
	shf.r.wrap.b32 	%r19371, %r19368, %r19369, 14;
	mov.b64 	%rd10652, {%r19371, %r19370};
	shf.r.wrap.b32 	%r19372, %r19369, %r19368, 18;
	shf.r.wrap.b32 	%r19373, %r19368, %r19369, 18;
	mov.b64 	%rd10653, {%r19373, %r19372};
	xor.b64  	%rd10654, %rd10653, %rd10652;
	shf.l.wrap.b32 	%r19374, %r19368, %r19369, 23;
	shf.l.wrap.b32 	%r19375, %r19369, %r19368, 23;
	mov.b64 	%rd10655, {%r19375, %r19374};
	xor.b64  	%rd10656, %rd10654, %rd10655;
	xor.b64  	%rd10657, %rd10616, %rd10592;
	and.b64  	%rd10658, %rd10640, %rd10657;
	xor.b64  	%rd10659, %rd10658, %rd10592;
	add.s64 	%rd10660, %rd10568, %rd10335;
	add.s64 	%rd10661, %rd10660, %rd87;
	add.s64 	%rd10662, %rd10661, %rd10659;
	add.s64 	%rd10663, %rd10662, %rd10656;
	add.s64 	%rd10664, %rd10663, %rd10579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19376,%dummy}, %rd10651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19377}, %rd10651;
	}
	shf.r.wrap.b32 	%r19378, %r19377, %r19376, 28;
	shf.r.wrap.b32 	%r19379, %r19376, %r19377, 28;
	mov.b64 	%rd10665, {%r19379, %r19378};
	shf.l.wrap.b32 	%r19380, %r19376, %r19377, 30;
	shf.l.wrap.b32 	%r19381, %r19377, %r19376, 30;
	mov.b64 	%rd10666, {%r19381, %r19380};
	xor.b64  	%rd10667, %rd10666, %rd10665;
	shf.l.wrap.b32 	%r19382, %r19376, %r19377, 25;
	shf.l.wrap.b32 	%r19383, %r19377, %r19376, 25;
	mov.b64 	%rd10668, {%r19383, %r19382};
	xor.b64  	%rd10669, %rd10667, %rd10668;
	and.b64  	%rd10670, %rd10651, %rd10627;
	xor.b64  	%rd10671, %rd10651, %rd10627;
	and.b64  	%rd10672, %rd10671, %rd10603;
	or.b64  	%rd10673, %rd10672, %rd10670;
	add.s64 	%rd10674, %rd10663, %rd10673;
	add.s64 	%rd10675, %rd10674, %rd10669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19384,%dummy}, %rd10664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19385}, %rd10664;
	}
	shf.r.wrap.b32 	%r19386, %r19385, %r19384, 14;
	shf.r.wrap.b32 	%r19387, %r19384, %r19385, 14;
	mov.b64 	%rd10676, {%r19387, %r19386};
	shf.r.wrap.b32 	%r19388, %r19385, %r19384, 18;
	shf.r.wrap.b32 	%r19389, %r19384, %r19385, 18;
	mov.b64 	%rd10677, {%r19389, %r19388};
	xor.b64  	%rd10678, %rd10677, %rd10676;
	shf.l.wrap.b32 	%r19390, %r19384, %r19385, 23;
	shf.l.wrap.b32 	%r19391, %r19385, %r19384, 23;
	mov.b64 	%rd10679, {%r19391, %r19390};
	xor.b64  	%rd10680, %rd10678, %rd10679;
	xor.b64  	%rd10681, %rd10640, %rd10616;
	and.b64  	%rd10682, %rd10664, %rd10681;
	xor.b64  	%rd10683, %rd10682, %rd10616;
	add.s64 	%rd10684, %rd10592, %rd10348;
	add.s64 	%rd10685, %rd10684, %rd88;
	add.s64 	%rd10686, %rd10685, %rd10683;
	add.s64 	%rd10687, %rd10686, %rd10680;
	add.s64 	%rd10688, %rd10687, %rd10603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19392,%dummy}, %rd10675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19393}, %rd10675;
	}
	shf.r.wrap.b32 	%r19394, %r19393, %r19392, 28;
	shf.r.wrap.b32 	%r19395, %r19392, %r19393, 28;
	mov.b64 	%rd10689, {%r19395, %r19394};
	shf.l.wrap.b32 	%r19396, %r19392, %r19393, 30;
	shf.l.wrap.b32 	%r19397, %r19393, %r19392, 30;
	mov.b64 	%rd10690, {%r19397, %r19396};
	xor.b64  	%rd10691, %rd10690, %rd10689;
	shf.l.wrap.b32 	%r19398, %r19392, %r19393, 25;
	shf.l.wrap.b32 	%r19399, %r19393, %r19392, 25;
	mov.b64 	%rd10692, {%r19399, %r19398};
	xor.b64  	%rd10693, %rd10691, %rd10692;
	and.b64  	%rd10694, %rd10675, %rd10651;
	xor.b64  	%rd10695, %rd10675, %rd10651;
	and.b64  	%rd10696, %rd10695, %rd10627;
	or.b64  	%rd10697, %rd10696, %rd10694;
	add.s64 	%rd10698, %rd10687, %rd10697;
	add.s64 	%rd10699, %rd10698, %rd10693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19400,%dummy}, %rd10688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19401}, %rd10688;
	}
	shf.r.wrap.b32 	%r19402, %r19401, %r19400, 14;
	shf.r.wrap.b32 	%r19403, %r19400, %r19401, 14;
	mov.b64 	%rd10700, {%r19403, %r19402};
	shf.r.wrap.b32 	%r19404, %r19401, %r19400, 18;
	shf.r.wrap.b32 	%r19405, %r19400, %r19401, 18;
	mov.b64 	%rd10701, {%r19405, %r19404};
	xor.b64  	%rd10702, %rd10701, %rd10700;
	shf.l.wrap.b32 	%r19406, %r19400, %r19401, 23;
	shf.l.wrap.b32 	%r19407, %r19401, %r19400, 23;
	mov.b64 	%rd10703, {%r19407, %r19406};
	xor.b64  	%rd10704, %rd10702, %rd10703;
	xor.b64  	%rd10705, %rd10664, %rd10640;
	and.b64  	%rd10706, %rd10688, %rd10705;
	xor.b64  	%rd10707, %rd10706, %rd10640;
	add.s64 	%rd10708, %rd10616, %rd10361;
	add.s64 	%rd10709, %rd10708, %rd89;
	add.s64 	%rd10710, %rd10709, %rd10707;
	add.s64 	%rd10711, %rd10710, %rd10704;
	add.s64 	%rd10712, %rd10711, %rd10627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19408,%dummy}, %rd10699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19409}, %rd10699;
	}
	shf.r.wrap.b32 	%r19410, %r19409, %r19408, 28;
	shf.r.wrap.b32 	%r19411, %r19408, %r19409, 28;
	mov.b64 	%rd10713, {%r19411, %r19410};
	shf.l.wrap.b32 	%r19412, %r19408, %r19409, 30;
	shf.l.wrap.b32 	%r19413, %r19409, %r19408, 30;
	mov.b64 	%rd10714, {%r19413, %r19412};
	xor.b64  	%rd10715, %rd10714, %rd10713;
	shf.l.wrap.b32 	%r19414, %r19408, %r19409, 25;
	shf.l.wrap.b32 	%r19415, %r19409, %r19408, 25;
	mov.b64 	%rd10716, {%r19415, %r19414};
	xor.b64  	%rd10717, %rd10715, %rd10716;
	and.b64  	%rd10718, %rd10699, %rd10675;
	xor.b64  	%rd10719, %rd10699, %rd10675;
	and.b64  	%rd10720, %rd10719, %rd10651;
	or.b64  	%rd10721, %rd10720, %rd10718;
	add.s64 	%rd10722, %rd10711, %rd10721;
	add.s64 	%rd10723, %rd10722, %rd10717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19416,%dummy}, %rd10712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19417}, %rd10712;
	}
	shf.r.wrap.b32 	%r19418, %r19417, %r19416, 14;
	shf.r.wrap.b32 	%r19419, %r19416, %r19417, 14;
	mov.b64 	%rd10724, {%r19419, %r19418};
	shf.r.wrap.b32 	%r19420, %r19417, %r19416, 18;
	shf.r.wrap.b32 	%r19421, %r19416, %r19417, 18;
	mov.b64 	%rd10725, {%r19421, %r19420};
	xor.b64  	%rd10726, %rd10725, %rd10724;
	shf.l.wrap.b32 	%r19422, %r19416, %r19417, 23;
	shf.l.wrap.b32 	%r19423, %r19417, %r19416, 23;
	mov.b64 	%rd10727, {%r19423, %r19422};
	xor.b64  	%rd10728, %rd10726, %rd10727;
	xor.b64  	%rd10729, %rd10688, %rd10664;
	and.b64  	%rd10730, %rd10712, %rd10729;
	xor.b64  	%rd10731, %rd10730, %rd10664;
	add.s64 	%rd10732, %rd10640, %rd10374;
	add.s64 	%rd10733, %rd10732, %rd90;
	add.s64 	%rd10734, %rd10733, %rd10731;
	add.s64 	%rd10735, %rd10734, %rd10728;
	add.s64 	%rd10736, %rd10735, %rd10651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19424,%dummy}, %rd10723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19425}, %rd10723;
	}
	shf.r.wrap.b32 	%r19426, %r19425, %r19424, 28;
	shf.r.wrap.b32 	%r19427, %r19424, %r19425, 28;
	mov.b64 	%rd10737, {%r19427, %r19426};
	shf.l.wrap.b32 	%r19428, %r19424, %r19425, 30;
	shf.l.wrap.b32 	%r19429, %r19425, %r19424, 30;
	mov.b64 	%rd10738, {%r19429, %r19428};
	xor.b64  	%rd10739, %rd10738, %rd10737;
	shf.l.wrap.b32 	%r19430, %r19424, %r19425, 25;
	shf.l.wrap.b32 	%r19431, %r19425, %r19424, 25;
	mov.b64 	%rd10740, {%r19431, %r19430};
	xor.b64  	%rd10741, %rd10739, %rd10740;
	and.b64  	%rd10742, %rd10723, %rd10699;
	xor.b64  	%rd10743, %rd10723, %rd10699;
	and.b64  	%rd10744, %rd10743, %rd10675;
	or.b64  	%rd10745, %rd10744, %rd10742;
	add.s64 	%rd10746, %rd10735, %rd10745;
	add.s64 	%rd10747, %rd10746, %rd10741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19432,%dummy}, %rd10736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19433}, %rd10736;
	}
	shf.r.wrap.b32 	%r19434, %r19433, %r19432, 14;
	shf.r.wrap.b32 	%r19435, %r19432, %r19433, 14;
	mov.b64 	%rd10748, {%r19435, %r19434};
	shf.r.wrap.b32 	%r19436, %r19433, %r19432, 18;
	shf.r.wrap.b32 	%r19437, %r19432, %r19433, 18;
	mov.b64 	%rd10749, {%r19437, %r19436};
	xor.b64  	%rd10750, %rd10749, %rd10748;
	shf.l.wrap.b32 	%r19438, %r19432, %r19433, 23;
	shf.l.wrap.b32 	%r19439, %r19433, %r19432, 23;
	mov.b64 	%rd10751, {%r19439, %r19438};
	xor.b64  	%rd10752, %rd10750, %rd10751;
	xor.b64  	%rd10753, %rd10712, %rd10688;
	and.b64  	%rd10754, %rd10736, %rd10753;
	xor.b64  	%rd10755, %rd10754, %rd10688;
	add.s64 	%rd10756, %rd10664, %rd10387;
	add.s64 	%rd10757, %rd10756, %rd91;
	add.s64 	%rd10758, %rd10757, %rd10755;
	add.s64 	%rd10759, %rd10758, %rd10752;
	add.s64 	%rd10760, %rd10759, %rd10675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19440,%dummy}, %rd10747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19441}, %rd10747;
	}
	shf.r.wrap.b32 	%r19442, %r19441, %r19440, 28;
	shf.r.wrap.b32 	%r19443, %r19440, %r19441, 28;
	mov.b64 	%rd10761, {%r19443, %r19442};
	shf.l.wrap.b32 	%r19444, %r19440, %r19441, 30;
	shf.l.wrap.b32 	%r19445, %r19441, %r19440, 30;
	mov.b64 	%rd10762, {%r19445, %r19444};
	xor.b64  	%rd10763, %rd10762, %rd10761;
	shf.l.wrap.b32 	%r19446, %r19440, %r19441, 25;
	shf.l.wrap.b32 	%r19447, %r19441, %r19440, 25;
	mov.b64 	%rd10764, {%r19447, %r19446};
	xor.b64  	%rd10765, %rd10763, %rd10764;
	and.b64  	%rd10766, %rd10747, %rd10723;
	xor.b64  	%rd10767, %rd10747, %rd10723;
	and.b64  	%rd10768, %rd10767, %rd10699;
	or.b64  	%rd10769, %rd10768, %rd10766;
	add.s64 	%rd10770, %rd10759, %rd10769;
	add.s64 	%rd10771, %rd10770, %rd10765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19448,%dummy}, %rd10374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19449}, %rd10374;
	}
	shf.r.wrap.b32 	%r19450, %r19449, %r19448, 19;
	shf.r.wrap.b32 	%r19451, %r19448, %r19449, 19;
	mov.b64 	%rd10772, {%r19451, %r19450};
	shf.l.wrap.b32 	%r19452, %r19448, %r19449, 3;
	shf.l.wrap.b32 	%r19453, %r19449, %r19448, 3;
	mov.b64 	%rd10773, {%r19453, %r19452};
	shr.u64 	%rd10774, %rd10374, 6;
	xor.b64  	%rd10775, %rd10772, %rd10774;
	xor.b64  	%rd10776, %rd10775, %rd10773;
	shf.r.wrap.b32 	%r19454, %r19063, %r19062, 1;
	shf.r.wrap.b32 	%r19455, %r19062, %r19063, 1;
	mov.b64 	%rd10777, {%r19455, %r19454};
	shf.r.wrap.b32 	%r19456, %r19063, %r19062, 8;
	shf.r.wrap.b32 	%r19457, %r19062, %r19063, 8;
	mov.b64 	%rd10778, {%r19457, %r19456};
	shr.u64 	%rd10779, %rd10205, 7;
	xor.b64  	%rd10780, %rd10777, %rd10779;
	xor.b64  	%rd10781, %rd10780, %rd10778;
	add.s64 	%rd10782, %rd10309, %rd10192;
	add.s64 	%rd10783, %rd10782, %rd10776;
	add.s64 	%rd10784, %rd10783, %rd10781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19458,%dummy}, %rd10387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19459}, %rd10387;
	}
	shf.r.wrap.b32 	%r19460, %r19459, %r19458, 19;
	shf.r.wrap.b32 	%r19461, %r19458, %r19459, 19;
	mov.b64 	%rd10785, {%r19461, %r19460};
	shf.l.wrap.b32 	%r19462, %r19458, %r19459, 3;
	shf.l.wrap.b32 	%r19463, %r19459, %r19458, 3;
	mov.b64 	%rd10786, {%r19463, %r19462};
	shr.u64 	%rd10787, %rd10387, 6;
	xor.b64  	%rd10788, %rd10785, %rd10787;
	xor.b64  	%rd10789, %rd10788, %rd10786;
	shf.r.wrap.b32 	%r19464, %r19073, %r19072, 1;
	shf.r.wrap.b32 	%r19465, %r19072, %r19073, 1;
	mov.b64 	%rd10790, {%r19465, %r19464};
	shf.r.wrap.b32 	%r19466, %r19073, %r19072, 8;
	shf.r.wrap.b32 	%r19467, %r19072, %r19073, 8;
	mov.b64 	%rd10791, {%r19467, %r19466};
	shr.u64 	%rd10792, %rd10218, 7;
	xor.b64  	%rd10793, %rd10790, %rd10792;
	xor.b64  	%rd10794, %rd10793, %rd10791;
	add.s64 	%rd10795, %rd10322, %rd10205;
	add.s64 	%rd10796, %rd10795, %rd10789;
	add.s64 	%rd10797, %rd10796, %rd10794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19468,%dummy}, %rd10784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19469}, %rd10784;
	}
	shf.r.wrap.b32 	%r19470, %r19469, %r19468, 19;
	shf.r.wrap.b32 	%r19471, %r19468, %r19469, 19;
	mov.b64 	%rd10798, {%r19471, %r19470};
	shf.l.wrap.b32 	%r19472, %r19468, %r19469, 3;
	shf.l.wrap.b32 	%r19473, %r19469, %r19468, 3;
	mov.b64 	%rd10799, {%r19473, %r19472};
	shr.u64 	%rd10800, %rd10784, 6;
	xor.b64  	%rd10801, %rd10798, %rd10800;
	xor.b64  	%rd10802, %rd10801, %rd10799;
	shf.r.wrap.b32 	%r19474, %r19083, %r19082, 1;
	shf.r.wrap.b32 	%r19475, %r19082, %r19083, 1;
	mov.b64 	%rd10803, {%r19475, %r19474};
	shf.r.wrap.b32 	%r19476, %r19083, %r19082, 8;
	shf.r.wrap.b32 	%r19477, %r19082, %r19083, 8;
	mov.b64 	%rd10804, {%r19477, %r19476};
	shr.u64 	%rd10805, %rd10231, 7;
	xor.b64  	%rd10806, %rd10803, %rd10805;
	xor.b64  	%rd10807, %rd10806, %rd10804;
	add.s64 	%rd10808, %rd10335, %rd10218;
	add.s64 	%rd10809, %rd10808, %rd10802;
	add.s64 	%rd10810, %rd10809, %rd10807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19478,%dummy}, %rd10797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19479}, %rd10797;
	}
	shf.r.wrap.b32 	%r19480, %r19479, %r19478, 19;
	shf.r.wrap.b32 	%r19481, %r19478, %r19479, 19;
	mov.b64 	%rd10811, {%r19481, %r19480};
	shf.l.wrap.b32 	%r19482, %r19478, %r19479, 3;
	shf.l.wrap.b32 	%r19483, %r19479, %r19478, 3;
	mov.b64 	%rd10812, {%r19483, %r19482};
	shr.u64 	%rd10813, %rd10797, 6;
	xor.b64  	%rd10814, %rd10811, %rd10813;
	xor.b64  	%rd10815, %rd10814, %rd10812;
	shf.r.wrap.b32 	%r19484, %r19093, %r19092, 1;
	shf.r.wrap.b32 	%r19485, %r19092, %r19093, 1;
	mov.b64 	%rd10816, {%r19485, %r19484};
	shf.r.wrap.b32 	%r19486, %r19093, %r19092, 8;
	shf.r.wrap.b32 	%r19487, %r19092, %r19093, 8;
	mov.b64 	%rd10817, {%r19487, %r19486};
	shr.u64 	%rd10818, %rd10244, 7;
	xor.b64  	%rd10819, %rd10816, %rd10818;
	xor.b64  	%rd10820, %rd10819, %rd10817;
	add.s64 	%rd10821, %rd10348, %rd10231;
	add.s64 	%rd10822, %rd10821, %rd10815;
	add.s64 	%rd10823, %rd10822, %rd10820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19488,%dummy}, %rd10810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19489}, %rd10810;
	}
	shf.r.wrap.b32 	%r19490, %r19489, %r19488, 19;
	shf.r.wrap.b32 	%r19491, %r19488, %r19489, 19;
	mov.b64 	%rd10824, {%r19491, %r19490};
	shf.l.wrap.b32 	%r19492, %r19488, %r19489, 3;
	shf.l.wrap.b32 	%r19493, %r19489, %r19488, 3;
	mov.b64 	%rd10825, {%r19493, %r19492};
	shr.u64 	%rd10826, %rd10810, 6;
	xor.b64  	%rd10827, %rd10824, %rd10826;
	xor.b64  	%rd10828, %rd10827, %rd10825;
	shf.r.wrap.b32 	%r19494, %r19103, %r19102, 1;
	shf.r.wrap.b32 	%r19495, %r19102, %r19103, 1;
	mov.b64 	%rd10829, {%r19495, %r19494};
	shf.r.wrap.b32 	%r19496, %r19103, %r19102, 8;
	shf.r.wrap.b32 	%r19497, %r19102, %r19103, 8;
	mov.b64 	%rd10830, {%r19497, %r19496};
	shr.u64 	%rd10831, %rd10257, 7;
	xor.b64  	%rd10832, %rd10829, %rd10831;
	xor.b64  	%rd10833, %rd10832, %rd10830;
	add.s64 	%rd10834, %rd10361, %rd10244;
	add.s64 	%rd10835, %rd10834, %rd10828;
	add.s64 	%rd10836, %rd10835, %rd10833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19498,%dummy}, %rd10823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19499}, %rd10823;
	}
	shf.r.wrap.b32 	%r19500, %r19499, %r19498, 19;
	shf.r.wrap.b32 	%r19501, %r19498, %r19499, 19;
	mov.b64 	%rd10837, {%r19501, %r19500};
	shf.l.wrap.b32 	%r19502, %r19498, %r19499, 3;
	shf.l.wrap.b32 	%r19503, %r19499, %r19498, 3;
	mov.b64 	%rd10838, {%r19503, %r19502};
	shr.u64 	%rd10839, %rd10823, 6;
	xor.b64  	%rd10840, %rd10837, %rd10839;
	xor.b64  	%rd10841, %rd10840, %rd10838;
	shf.r.wrap.b32 	%r19504, %r19113, %r19112, 1;
	shf.r.wrap.b32 	%r19505, %r19112, %r19113, 1;
	mov.b64 	%rd10842, {%r19505, %r19504};
	shf.r.wrap.b32 	%r19506, %r19113, %r19112, 8;
	shf.r.wrap.b32 	%r19507, %r19112, %r19113, 8;
	mov.b64 	%rd10843, {%r19507, %r19506};
	shr.u64 	%rd10844, %rd10270, 7;
	xor.b64  	%rd10845, %rd10842, %rd10844;
	xor.b64  	%rd10846, %rd10845, %rd10843;
	add.s64 	%rd10847, %rd10374, %rd10257;
	add.s64 	%rd10848, %rd10847, %rd10841;
	add.s64 	%rd10849, %rd10848, %rd10846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19508,%dummy}, %rd10836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19509}, %rd10836;
	}
	shf.r.wrap.b32 	%r19510, %r19509, %r19508, 19;
	shf.r.wrap.b32 	%r19511, %r19508, %r19509, 19;
	mov.b64 	%rd10850, {%r19511, %r19510};
	shf.l.wrap.b32 	%r19512, %r19508, %r19509, 3;
	shf.l.wrap.b32 	%r19513, %r19509, %r19508, 3;
	mov.b64 	%rd10851, {%r19513, %r19512};
	shr.u64 	%rd10852, %rd10836, 6;
	xor.b64  	%rd10853, %rd10850, %rd10852;
	xor.b64  	%rd10854, %rd10853, %rd10851;
	shf.r.wrap.b32 	%r19514, %r19123, %r19122, 1;
	shf.r.wrap.b32 	%r19515, %r19122, %r19123, 1;
	mov.b64 	%rd10855, {%r19515, %r19514};
	shf.r.wrap.b32 	%r19516, %r19123, %r19122, 8;
	shf.r.wrap.b32 	%r19517, %r19122, %r19123, 8;
	mov.b64 	%rd10856, {%r19517, %r19516};
	shr.u64 	%rd10857, %rd10283, 7;
	xor.b64  	%rd10858, %rd10855, %rd10857;
	xor.b64  	%rd10859, %rd10858, %rd10856;
	add.s64 	%rd10860, %rd10387, %rd10270;
	add.s64 	%rd10861, %rd10860, %rd10854;
	add.s64 	%rd10862, %rd10861, %rd10859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19518,%dummy}, %rd10849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19519}, %rd10849;
	}
	shf.r.wrap.b32 	%r19520, %r19519, %r19518, 19;
	shf.r.wrap.b32 	%r19521, %r19518, %r19519, 19;
	mov.b64 	%rd10863, {%r19521, %r19520};
	shf.l.wrap.b32 	%r19522, %r19518, %r19519, 3;
	shf.l.wrap.b32 	%r19523, %r19519, %r19518, 3;
	mov.b64 	%rd10864, {%r19523, %r19522};
	shr.u64 	%rd10865, %rd10849, 6;
	xor.b64  	%rd10866, %rd10863, %rd10865;
	xor.b64  	%rd10867, %rd10866, %rd10864;
	shf.r.wrap.b32 	%r19524, %r19133, %r19132, 1;
	shf.r.wrap.b32 	%r19525, %r19132, %r19133, 1;
	mov.b64 	%rd10868, {%r19525, %r19524};
	shf.r.wrap.b32 	%r19526, %r19133, %r19132, 8;
	shf.r.wrap.b32 	%r19527, %r19132, %r19133, 8;
	mov.b64 	%rd10869, {%r19527, %r19526};
	shr.u64 	%rd10870, %rd10296, 7;
	xor.b64  	%rd10871, %rd10868, %rd10870;
	xor.b64  	%rd10872, %rd10871, %rd10869;
	add.s64 	%rd10873, %rd10784, %rd10283;
	add.s64 	%rd10874, %rd10873, %rd10867;
	add.s64 	%rd10875, %rd10874, %rd10872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19528,%dummy}, %rd10862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19529}, %rd10862;
	}
	shf.r.wrap.b32 	%r19530, %r19529, %r19528, 19;
	shf.r.wrap.b32 	%r19531, %r19528, %r19529, 19;
	mov.b64 	%rd10876, {%r19531, %r19530};
	shf.l.wrap.b32 	%r19532, %r19528, %r19529, 3;
	shf.l.wrap.b32 	%r19533, %r19529, %r19528, 3;
	mov.b64 	%rd10877, {%r19533, %r19532};
	shr.u64 	%rd10878, %rd10862, 6;
	xor.b64  	%rd10879, %rd10876, %rd10878;
	xor.b64  	%rd10880, %rd10879, %rd10877;
	shf.r.wrap.b32 	%r19534, %r19143, %r19142, 1;
	shf.r.wrap.b32 	%r19535, %r19142, %r19143, 1;
	mov.b64 	%rd10881, {%r19535, %r19534};
	shf.r.wrap.b32 	%r19536, %r19143, %r19142, 8;
	shf.r.wrap.b32 	%r19537, %r19142, %r19143, 8;
	mov.b64 	%rd10882, {%r19537, %r19536};
	shr.u64 	%rd10883, %rd10309, 7;
	xor.b64  	%rd10884, %rd10881, %rd10883;
	xor.b64  	%rd10885, %rd10884, %rd10882;
	add.s64 	%rd10886, %rd10797, %rd10296;
	add.s64 	%rd10887, %rd10886, %rd10880;
	add.s64 	%rd10888, %rd10887, %rd10885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19538,%dummy}, %rd10875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19539}, %rd10875;
	}
	shf.r.wrap.b32 	%r19540, %r19539, %r19538, 19;
	shf.r.wrap.b32 	%r19541, %r19538, %r19539, 19;
	mov.b64 	%rd10889, {%r19541, %r19540};
	shf.l.wrap.b32 	%r19542, %r19538, %r19539, 3;
	shf.l.wrap.b32 	%r19543, %r19539, %r19538, 3;
	mov.b64 	%rd10890, {%r19543, %r19542};
	shr.u64 	%rd10891, %rd10875, 6;
	xor.b64  	%rd10892, %rd10889, %rd10891;
	xor.b64  	%rd10893, %rd10892, %rd10890;
	shf.r.wrap.b32 	%r19544, %r19153, %r19152, 1;
	shf.r.wrap.b32 	%r19545, %r19152, %r19153, 1;
	mov.b64 	%rd10894, {%r19545, %r19544};
	shf.r.wrap.b32 	%r19546, %r19153, %r19152, 8;
	shf.r.wrap.b32 	%r19547, %r19152, %r19153, 8;
	mov.b64 	%rd10895, {%r19547, %r19546};
	shr.u64 	%rd10896, %rd10322, 7;
	xor.b64  	%rd10897, %rd10894, %rd10896;
	xor.b64  	%rd10898, %rd10897, %rd10895;
	add.s64 	%rd10899, %rd10810, %rd10309;
	add.s64 	%rd10900, %rd10899, %rd10893;
	add.s64 	%rd10901, %rd10900, %rd10898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19548,%dummy}, %rd10888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19549}, %rd10888;
	}
	shf.r.wrap.b32 	%r19550, %r19549, %r19548, 19;
	shf.r.wrap.b32 	%r19551, %r19548, %r19549, 19;
	mov.b64 	%rd10902, {%r19551, %r19550};
	shf.l.wrap.b32 	%r19552, %r19548, %r19549, 3;
	shf.l.wrap.b32 	%r19553, %r19549, %r19548, 3;
	mov.b64 	%rd10903, {%r19553, %r19552};
	shr.u64 	%rd10904, %rd10888, 6;
	xor.b64  	%rd10905, %rd10902, %rd10904;
	xor.b64  	%rd10906, %rd10905, %rd10903;
	shf.r.wrap.b32 	%r19554, %r19163, %r19162, 1;
	shf.r.wrap.b32 	%r19555, %r19162, %r19163, 1;
	mov.b64 	%rd10907, {%r19555, %r19554};
	shf.r.wrap.b32 	%r19556, %r19163, %r19162, 8;
	shf.r.wrap.b32 	%r19557, %r19162, %r19163, 8;
	mov.b64 	%rd10908, {%r19557, %r19556};
	shr.u64 	%rd10909, %rd10335, 7;
	xor.b64  	%rd10910, %rd10907, %rd10909;
	xor.b64  	%rd10911, %rd10910, %rd10908;
	add.s64 	%rd10912, %rd10823, %rd10322;
	add.s64 	%rd10913, %rd10912, %rd10906;
	add.s64 	%rd10914, %rd10913, %rd10911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19558,%dummy}, %rd10901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19559}, %rd10901;
	}
	shf.r.wrap.b32 	%r19560, %r19559, %r19558, 19;
	shf.r.wrap.b32 	%r19561, %r19558, %r19559, 19;
	mov.b64 	%rd10915, {%r19561, %r19560};
	shf.l.wrap.b32 	%r19562, %r19558, %r19559, 3;
	shf.l.wrap.b32 	%r19563, %r19559, %r19558, 3;
	mov.b64 	%rd10916, {%r19563, %r19562};
	shr.u64 	%rd10917, %rd10901, 6;
	xor.b64  	%rd10918, %rd10915, %rd10917;
	xor.b64  	%rd10919, %rd10918, %rd10916;
	shf.r.wrap.b32 	%r19564, %r19173, %r19172, 1;
	shf.r.wrap.b32 	%r19565, %r19172, %r19173, 1;
	mov.b64 	%rd10920, {%r19565, %r19564};
	shf.r.wrap.b32 	%r19566, %r19173, %r19172, 8;
	shf.r.wrap.b32 	%r19567, %r19172, %r19173, 8;
	mov.b64 	%rd10921, {%r19567, %r19566};
	shr.u64 	%rd10922, %rd10348, 7;
	xor.b64  	%rd10923, %rd10920, %rd10922;
	xor.b64  	%rd10924, %rd10923, %rd10921;
	add.s64 	%rd10925, %rd10836, %rd10335;
	add.s64 	%rd10926, %rd10925, %rd10919;
	add.s64 	%rd10927, %rd10926, %rd10924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19568,%dummy}, %rd10914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19569}, %rd10914;
	}
	shf.r.wrap.b32 	%r19570, %r19569, %r19568, 19;
	shf.r.wrap.b32 	%r19571, %r19568, %r19569, 19;
	mov.b64 	%rd10928, {%r19571, %r19570};
	shf.l.wrap.b32 	%r19572, %r19568, %r19569, 3;
	shf.l.wrap.b32 	%r19573, %r19569, %r19568, 3;
	mov.b64 	%rd10929, {%r19573, %r19572};
	shr.u64 	%rd10930, %rd10914, 6;
	xor.b64  	%rd10931, %rd10928, %rd10930;
	xor.b64  	%rd10932, %rd10931, %rd10929;
	shf.r.wrap.b32 	%r19574, %r19183, %r19182, 1;
	shf.r.wrap.b32 	%r19575, %r19182, %r19183, 1;
	mov.b64 	%rd10933, {%r19575, %r19574};
	shf.r.wrap.b32 	%r19576, %r19183, %r19182, 8;
	shf.r.wrap.b32 	%r19577, %r19182, %r19183, 8;
	mov.b64 	%rd10934, {%r19577, %r19576};
	shr.u64 	%rd10935, %rd10361, 7;
	xor.b64  	%rd10936, %rd10933, %rd10935;
	xor.b64  	%rd10937, %rd10936, %rd10934;
	add.s64 	%rd10938, %rd10849, %rd10348;
	add.s64 	%rd10939, %rd10938, %rd10932;
	add.s64 	%rd10940, %rd10939, %rd10937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19578,%dummy}, %rd10927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19579}, %rd10927;
	}
	shf.r.wrap.b32 	%r19580, %r19579, %r19578, 19;
	shf.r.wrap.b32 	%r19581, %r19578, %r19579, 19;
	mov.b64 	%rd10941, {%r19581, %r19580};
	shf.l.wrap.b32 	%r19582, %r19578, %r19579, 3;
	shf.l.wrap.b32 	%r19583, %r19579, %r19578, 3;
	mov.b64 	%rd10942, {%r19583, %r19582};
	shr.u64 	%rd10943, %rd10927, 6;
	xor.b64  	%rd10944, %rd10941, %rd10943;
	xor.b64  	%rd10945, %rd10944, %rd10942;
	shf.r.wrap.b32 	%r19584, %r19449, %r19448, 1;
	shf.r.wrap.b32 	%r19585, %r19448, %r19449, 1;
	mov.b64 	%rd10946, {%r19585, %r19584};
	shf.r.wrap.b32 	%r19586, %r19449, %r19448, 8;
	shf.r.wrap.b32 	%r19587, %r19448, %r19449, 8;
	mov.b64 	%rd10947, {%r19587, %r19586};
	shr.u64 	%rd10948, %rd10374, 7;
	xor.b64  	%rd10949, %rd10946, %rd10948;
	xor.b64  	%rd10950, %rd10949, %rd10947;
	add.s64 	%rd10951, %rd10862, %rd10361;
	add.s64 	%rd10952, %rd10951, %rd10945;
	add.s64 	%rd10953, %rd10952, %rd10950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19588,%dummy}, %rd10940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19589}, %rd10940;
	}
	shf.r.wrap.b32 	%r19590, %r19589, %r19588, 19;
	shf.r.wrap.b32 	%r19591, %r19588, %r19589, 19;
	mov.b64 	%rd10954, {%r19591, %r19590};
	shf.l.wrap.b32 	%r19592, %r19588, %r19589, 3;
	shf.l.wrap.b32 	%r19593, %r19589, %r19588, 3;
	mov.b64 	%rd10955, {%r19593, %r19592};
	shr.u64 	%rd10956, %rd10940, 6;
	xor.b64  	%rd10957, %rd10954, %rd10956;
	xor.b64  	%rd10958, %rd10957, %rd10955;
	shf.r.wrap.b32 	%r19594, %r19459, %r19458, 1;
	shf.r.wrap.b32 	%r19595, %r19458, %r19459, 1;
	mov.b64 	%rd10959, {%r19595, %r19594};
	shf.r.wrap.b32 	%r19596, %r19459, %r19458, 8;
	shf.r.wrap.b32 	%r19597, %r19458, %r19459, 8;
	mov.b64 	%rd10960, {%r19597, %r19596};
	shr.u64 	%rd10961, %rd10387, 7;
	xor.b64  	%rd10962, %rd10959, %rd10961;
	xor.b64  	%rd10963, %rd10962, %rd10960;
	add.s64 	%rd10964, %rd10875, %rd10374;
	add.s64 	%rd10965, %rd10964, %rd10958;
	add.s64 	%rd10966, %rd10965, %rd10963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19598,%dummy}, %rd10953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19599}, %rd10953;
	}
	shf.r.wrap.b32 	%r19600, %r19599, %r19598, 19;
	shf.r.wrap.b32 	%r19601, %r19598, %r19599, 19;
	mov.b64 	%rd10967, {%r19601, %r19600};
	shf.l.wrap.b32 	%r19602, %r19598, %r19599, 3;
	shf.l.wrap.b32 	%r19603, %r19599, %r19598, 3;
	mov.b64 	%rd10968, {%r19603, %r19602};
	shr.u64 	%rd10969, %rd10953, 6;
	xor.b64  	%rd10970, %rd10967, %rd10969;
	xor.b64  	%rd10971, %rd10970, %rd10968;
	shf.r.wrap.b32 	%r19604, %r19469, %r19468, 1;
	shf.r.wrap.b32 	%r19605, %r19468, %r19469, 1;
	mov.b64 	%rd10972, {%r19605, %r19604};
	shf.r.wrap.b32 	%r19606, %r19469, %r19468, 8;
	shf.r.wrap.b32 	%r19607, %r19468, %r19469, 8;
	mov.b64 	%rd10973, {%r19607, %r19606};
	shr.u64 	%rd10974, %rd10784, 7;
	xor.b64  	%rd10975, %rd10972, %rd10974;
	xor.b64  	%rd10976, %rd10975, %rd10973;
	add.s64 	%rd10977, %rd10888, %rd10387;
	add.s64 	%rd10978, %rd10977, %rd10971;
	add.s64 	%rd10979, %rd10978, %rd10976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19608,%dummy}, %rd10760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19609}, %rd10760;
	}
	shf.r.wrap.b32 	%r19610, %r19609, %r19608, 14;
	shf.r.wrap.b32 	%r19611, %r19608, %r19609, 14;
	mov.b64 	%rd10980, {%r19611, %r19610};
	shf.r.wrap.b32 	%r19612, %r19609, %r19608, 18;
	shf.r.wrap.b32 	%r19613, %r19608, %r19609, 18;
	mov.b64 	%rd10981, {%r19613, %r19612};
	xor.b64  	%rd10982, %rd10981, %rd10980;
	shf.l.wrap.b32 	%r19614, %r19608, %r19609, 23;
	shf.l.wrap.b32 	%r19615, %r19609, %r19608, 23;
	mov.b64 	%rd10983, {%r19615, %r19614};
	xor.b64  	%rd10984, %rd10982, %rd10983;
	xor.b64  	%rd10985, %rd10736, %rd10712;
	and.b64  	%rd10986, %rd10760, %rd10985;
	xor.b64  	%rd10987, %rd10986, %rd10712;
	add.s64 	%rd10988, %rd10987, %rd10688;
	add.s64 	%rd10989, %rd10988, %rd10784;
	add.s64 	%rd10990, %rd10989, %rd92;
	add.s64 	%rd10991, %rd10990, %rd10984;
	add.s64 	%rd10992, %rd10991, %rd10699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19616,%dummy}, %rd10771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19617}, %rd10771;
	}
	shf.r.wrap.b32 	%r19618, %r19617, %r19616, 28;
	shf.r.wrap.b32 	%r19619, %r19616, %r19617, 28;
	mov.b64 	%rd10993, {%r19619, %r19618};
	shf.l.wrap.b32 	%r19620, %r19616, %r19617, 30;
	shf.l.wrap.b32 	%r19621, %r19617, %r19616, 30;
	mov.b64 	%rd10994, {%r19621, %r19620};
	xor.b64  	%rd10995, %rd10994, %rd10993;
	shf.l.wrap.b32 	%r19622, %r19616, %r19617, 25;
	shf.l.wrap.b32 	%r19623, %r19617, %r19616, 25;
	mov.b64 	%rd10996, {%r19623, %r19622};
	xor.b64  	%rd10997, %rd10995, %rd10996;
	and.b64  	%rd10998, %rd10771, %rd10747;
	xor.b64  	%rd10999, %rd10771, %rd10747;
	and.b64  	%rd11000, %rd10999, %rd10723;
	or.b64  	%rd11001, %rd11000, %rd10998;
	add.s64 	%rd11002, %rd10991, %rd11001;
	add.s64 	%rd11003, %rd11002, %rd10997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19624,%dummy}, %rd10992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19625}, %rd10992;
	}
	shf.r.wrap.b32 	%r19626, %r19625, %r19624, 14;
	shf.r.wrap.b32 	%r19627, %r19624, %r19625, 14;
	mov.b64 	%rd11004, {%r19627, %r19626};
	shf.r.wrap.b32 	%r19628, %r19625, %r19624, 18;
	shf.r.wrap.b32 	%r19629, %r19624, %r19625, 18;
	mov.b64 	%rd11005, {%r19629, %r19628};
	xor.b64  	%rd11006, %rd11005, %rd11004;
	shf.l.wrap.b32 	%r19630, %r19624, %r19625, 23;
	shf.l.wrap.b32 	%r19631, %r19625, %r19624, 23;
	mov.b64 	%rd11007, {%r19631, %r19630};
	xor.b64  	%rd11008, %rd11006, %rd11007;
	xor.b64  	%rd11009, %rd10760, %rd10736;
	and.b64  	%rd11010, %rd10992, %rd11009;
	xor.b64  	%rd11011, %rd11010, %rd10736;
	add.s64 	%rd11012, %rd10797, %rd10712;
	add.s64 	%rd11013, %rd11012, %rd93;
	add.s64 	%rd11014, %rd11013, %rd11011;
	add.s64 	%rd11015, %rd11014, %rd11008;
	add.s64 	%rd11016, %rd11015, %rd10723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19632,%dummy}, %rd11003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19633}, %rd11003;
	}
	shf.r.wrap.b32 	%r19634, %r19633, %r19632, 28;
	shf.r.wrap.b32 	%r19635, %r19632, %r19633, 28;
	mov.b64 	%rd11017, {%r19635, %r19634};
	shf.l.wrap.b32 	%r19636, %r19632, %r19633, 30;
	shf.l.wrap.b32 	%r19637, %r19633, %r19632, 30;
	mov.b64 	%rd11018, {%r19637, %r19636};
	xor.b64  	%rd11019, %rd11018, %rd11017;
	shf.l.wrap.b32 	%r19638, %r19632, %r19633, 25;
	shf.l.wrap.b32 	%r19639, %r19633, %r19632, 25;
	mov.b64 	%rd11020, {%r19639, %r19638};
	xor.b64  	%rd11021, %rd11019, %rd11020;
	and.b64  	%rd11022, %rd11003, %rd10771;
	xor.b64  	%rd11023, %rd11003, %rd10771;
	and.b64  	%rd11024, %rd11023, %rd10747;
	or.b64  	%rd11025, %rd11024, %rd11022;
	add.s64 	%rd11026, %rd11015, %rd11025;
	add.s64 	%rd11027, %rd11026, %rd11021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19640,%dummy}, %rd11016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19641}, %rd11016;
	}
	shf.r.wrap.b32 	%r19642, %r19641, %r19640, 14;
	shf.r.wrap.b32 	%r19643, %r19640, %r19641, 14;
	mov.b64 	%rd11028, {%r19643, %r19642};
	shf.r.wrap.b32 	%r19644, %r19641, %r19640, 18;
	shf.r.wrap.b32 	%r19645, %r19640, %r19641, 18;
	mov.b64 	%rd11029, {%r19645, %r19644};
	xor.b64  	%rd11030, %rd11029, %rd11028;
	shf.l.wrap.b32 	%r19646, %r19640, %r19641, 23;
	shf.l.wrap.b32 	%r19647, %r19641, %r19640, 23;
	mov.b64 	%rd11031, {%r19647, %r19646};
	xor.b64  	%rd11032, %rd11030, %rd11031;
	xor.b64  	%rd11033, %rd10992, %rd10760;
	and.b64  	%rd11034, %rd11016, %rd11033;
	xor.b64  	%rd11035, %rd11034, %rd10760;
	add.s64 	%rd11036, %rd10810, %rd10736;
	add.s64 	%rd11037, %rd11036, %rd94;
	add.s64 	%rd11038, %rd11037, %rd11035;
	add.s64 	%rd11039, %rd11038, %rd11032;
	add.s64 	%rd11040, %rd11039, %rd10747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19648,%dummy}, %rd11027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19649}, %rd11027;
	}
	shf.r.wrap.b32 	%r19650, %r19649, %r19648, 28;
	shf.r.wrap.b32 	%r19651, %r19648, %r19649, 28;
	mov.b64 	%rd11041, {%r19651, %r19650};
	shf.l.wrap.b32 	%r19652, %r19648, %r19649, 30;
	shf.l.wrap.b32 	%r19653, %r19649, %r19648, 30;
	mov.b64 	%rd11042, {%r19653, %r19652};
	xor.b64  	%rd11043, %rd11042, %rd11041;
	shf.l.wrap.b32 	%r19654, %r19648, %r19649, 25;
	shf.l.wrap.b32 	%r19655, %r19649, %r19648, 25;
	mov.b64 	%rd11044, {%r19655, %r19654};
	xor.b64  	%rd11045, %rd11043, %rd11044;
	and.b64  	%rd11046, %rd11027, %rd11003;
	xor.b64  	%rd11047, %rd11027, %rd11003;
	and.b64  	%rd11048, %rd11047, %rd10771;
	or.b64  	%rd11049, %rd11048, %rd11046;
	add.s64 	%rd11050, %rd11039, %rd11049;
	add.s64 	%rd11051, %rd11050, %rd11045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19656,%dummy}, %rd11040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19657}, %rd11040;
	}
	shf.r.wrap.b32 	%r19658, %r19657, %r19656, 14;
	shf.r.wrap.b32 	%r19659, %r19656, %r19657, 14;
	mov.b64 	%rd11052, {%r19659, %r19658};
	shf.r.wrap.b32 	%r19660, %r19657, %r19656, 18;
	shf.r.wrap.b32 	%r19661, %r19656, %r19657, 18;
	mov.b64 	%rd11053, {%r19661, %r19660};
	xor.b64  	%rd11054, %rd11053, %rd11052;
	shf.l.wrap.b32 	%r19662, %r19656, %r19657, 23;
	shf.l.wrap.b32 	%r19663, %r19657, %r19656, 23;
	mov.b64 	%rd11055, {%r19663, %r19662};
	xor.b64  	%rd11056, %rd11054, %rd11055;
	xor.b64  	%rd11057, %rd11016, %rd10992;
	and.b64  	%rd11058, %rd11040, %rd11057;
	xor.b64  	%rd11059, %rd11058, %rd10992;
	add.s64 	%rd11060, %rd10823, %rd10760;
	add.s64 	%rd11061, %rd11060, %rd95;
	add.s64 	%rd11062, %rd11061, %rd11059;
	add.s64 	%rd11063, %rd11062, %rd11056;
	add.s64 	%rd11064, %rd11063, %rd10771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19664,%dummy}, %rd11051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19665}, %rd11051;
	}
	shf.r.wrap.b32 	%r19666, %r19665, %r19664, 28;
	shf.r.wrap.b32 	%r19667, %r19664, %r19665, 28;
	mov.b64 	%rd11065, {%r19667, %r19666};
	shf.l.wrap.b32 	%r19668, %r19664, %r19665, 30;
	shf.l.wrap.b32 	%r19669, %r19665, %r19664, 30;
	mov.b64 	%rd11066, {%r19669, %r19668};
	xor.b64  	%rd11067, %rd11066, %rd11065;
	shf.l.wrap.b32 	%r19670, %r19664, %r19665, 25;
	shf.l.wrap.b32 	%r19671, %r19665, %r19664, 25;
	mov.b64 	%rd11068, {%r19671, %r19670};
	xor.b64  	%rd11069, %rd11067, %rd11068;
	and.b64  	%rd11070, %rd11051, %rd11027;
	xor.b64  	%rd11071, %rd11051, %rd11027;
	and.b64  	%rd11072, %rd11071, %rd11003;
	or.b64  	%rd11073, %rd11072, %rd11070;
	add.s64 	%rd11074, %rd11063, %rd11073;
	add.s64 	%rd11075, %rd11074, %rd11069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19672,%dummy}, %rd11064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19673}, %rd11064;
	}
	shf.r.wrap.b32 	%r19674, %r19673, %r19672, 14;
	shf.r.wrap.b32 	%r19675, %r19672, %r19673, 14;
	mov.b64 	%rd11076, {%r19675, %r19674};
	shf.r.wrap.b32 	%r19676, %r19673, %r19672, 18;
	shf.r.wrap.b32 	%r19677, %r19672, %r19673, 18;
	mov.b64 	%rd11077, {%r19677, %r19676};
	xor.b64  	%rd11078, %rd11077, %rd11076;
	shf.l.wrap.b32 	%r19678, %r19672, %r19673, 23;
	shf.l.wrap.b32 	%r19679, %r19673, %r19672, 23;
	mov.b64 	%rd11079, {%r19679, %r19678};
	xor.b64  	%rd11080, %rd11078, %rd11079;
	xor.b64  	%rd11081, %rd11040, %rd11016;
	and.b64  	%rd11082, %rd11064, %rd11081;
	xor.b64  	%rd11083, %rd11082, %rd11016;
	add.s64 	%rd11084, %rd10992, %rd10836;
	add.s64 	%rd11085, %rd11084, %rd96;
	add.s64 	%rd11086, %rd11085, %rd11083;
	add.s64 	%rd11087, %rd11086, %rd11080;
	add.s64 	%rd11088, %rd11087, %rd11003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19680,%dummy}, %rd11075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19681}, %rd11075;
	}
	shf.r.wrap.b32 	%r19682, %r19681, %r19680, 28;
	shf.r.wrap.b32 	%r19683, %r19680, %r19681, 28;
	mov.b64 	%rd11089, {%r19683, %r19682};
	shf.l.wrap.b32 	%r19684, %r19680, %r19681, 30;
	shf.l.wrap.b32 	%r19685, %r19681, %r19680, 30;
	mov.b64 	%rd11090, {%r19685, %r19684};
	xor.b64  	%rd11091, %rd11090, %rd11089;
	shf.l.wrap.b32 	%r19686, %r19680, %r19681, 25;
	shf.l.wrap.b32 	%r19687, %r19681, %r19680, 25;
	mov.b64 	%rd11092, {%r19687, %r19686};
	xor.b64  	%rd11093, %rd11091, %rd11092;
	and.b64  	%rd11094, %rd11075, %rd11051;
	xor.b64  	%rd11095, %rd11075, %rd11051;
	and.b64  	%rd11096, %rd11095, %rd11027;
	or.b64  	%rd11097, %rd11096, %rd11094;
	add.s64 	%rd11098, %rd11087, %rd11097;
	add.s64 	%rd11099, %rd11098, %rd11093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19688,%dummy}, %rd11088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19689}, %rd11088;
	}
	shf.r.wrap.b32 	%r19690, %r19689, %r19688, 14;
	shf.r.wrap.b32 	%r19691, %r19688, %r19689, 14;
	mov.b64 	%rd11100, {%r19691, %r19690};
	shf.r.wrap.b32 	%r19692, %r19689, %r19688, 18;
	shf.r.wrap.b32 	%r19693, %r19688, %r19689, 18;
	mov.b64 	%rd11101, {%r19693, %r19692};
	xor.b64  	%rd11102, %rd11101, %rd11100;
	shf.l.wrap.b32 	%r19694, %r19688, %r19689, 23;
	shf.l.wrap.b32 	%r19695, %r19689, %r19688, 23;
	mov.b64 	%rd11103, {%r19695, %r19694};
	xor.b64  	%rd11104, %rd11102, %rd11103;
	xor.b64  	%rd11105, %rd11064, %rd11040;
	and.b64  	%rd11106, %rd11088, %rd11105;
	xor.b64  	%rd11107, %rd11106, %rd11040;
	add.s64 	%rd11108, %rd11016, %rd10849;
	add.s64 	%rd11109, %rd11108, %rd97;
	add.s64 	%rd11110, %rd11109, %rd11107;
	add.s64 	%rd11111, %rd11110, %rd11104;
	add.s64 	%rd11112, %rd11111, %rd11027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19696,%dummy}, %rd11099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19697}, %rd11099;
	}
	shf.r.wrap.b32 	%r19698, %r19697, %r19696, 28;
	shf.r.wrap.b32 	%r19699, %r19696, %r19697, 28;
	mov.b64 	%rd11113, {%r19699, %r19698};
	shf.l.wrap.b32 	%r19700, %r19696, %r19697, 30;
	shf.l.wrap.b32 	%r19701, %r19697, %r19696, 30;
	mov.b64 	%rd11114, {%r19701, %r19700};
	xor.b64  	%rd11115, %rd11114, %rd11113;
	shf.l.wrap.b32 	%r19702, %r19696, %r19697, 25;
	shf.l.wrap.b32 	%r19703, %r19697, %r19696, 25;
	mov.b64 	%rd11116, {%r19703, %r19702};
	xor.b64  	%rd11117, %rd11115, %rd11116;
	and.b64  	%rd11118, %rd11099, %rd11075;
	xor.b64  	%rd11119, %rd11099, %rd11075;
	and.b64  	%rd11120, %rd11119, %rd11051;
	or.b64  	%rd11121, %rd11120, %rd11118;
	add.s64 	%rd11122, %rd11111, %rd11121;
	add.s64 	%rd11123, %rd11122, %rd11117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19704,%dummy}, %rd11112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19705}, %rd11112;
	}
	shf.r.wrap.b32 	%r19706, %r19705, %r19704, 14;
	shf.r.wrap.b32 	%r19707, %r19704, %r19705, 14;
	mov.b64 	%rd11124, {%r19707, %r19706};
	shf.r.wrap.b32 	%r19708, %r19705, %r19704, 18;
	shf.r.wrap.b32 	%r19709, %r19704, %r19705, 18;
	mov.b64 	%rd11125, {%r19709, %r19708};
	xor.b64  	%rd11126, %rd11125, %rd11124;
	shf.l.wrap.b32 	%r19710, %r19704, %r19705, 23;
	shf.l.wrap.b32 	%r19711, %r19705, %r19704, 23;
	mov.b64 	%rd11127, {%r19711, %r19710};
	xor.b64  	%rd11128, %rd11126, %rd11127;
	xor.b64  	%rd11129, %rd11088, %rd11064;
	and.b64  	%rd11130, %rd11112, %rd11129;
	xor.b64  	%rd11131, %rd11130, %rd11064;
	add.s64 	%rd11132, %rd11040, %rd10862;
	add.s64 	%rd11133, %rd11132, %rd98;
	add.s64 	%rd11134, %rd11133, %rd11131;
	add.s64 	%rd11135, %rd11134, %rd11128;
	add.s64 	%rd11136, %rd11135, %rd11051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19712,%dummy}, %rd11123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19713}, %rd11123;
	}
	shf.r.wrap.b32 	%r19714, %r19713, %r19712, 28;
	shf.r.wrap.b32 	%r19715, %r19712, %r19713, 28;
	mov.b64 	%rd11137, {%r19715, %r19714};
	shf.l.wrap.b32 	%r19716, %r19712, %r19713, 30;
	shf.l.wrap.b32 	%r19717, %r19713, %r19712, 30;
	mov.b64 	%rd11138, {%r19717, %r19716};
	xor.b64  	%rd11139, %rd11138, %rd11137;
	shf.l.wrap.b32 	%r19718, %r19712, %r19713, 25;
	shf.l.wrap.b32 	%r19719, %r19713, %r19712, 25;
	mov.b64 	%rd11140, {%r19719, %r19718};
	xor.b64  	%rd11141, %rd11139, %rd11140;
	and.b64  	%rd11142, %rd11123, %rd11099;
	xor.b64  	%rd11143, %rd11123, %rd11099;
	and.b64  	%rd11144, %rd11143, %rd11075;
	or.b64  	%rd11145, %rd11144, %rd11142;
	add.s64 	%rd11146, %rd11135, %rd11145;
	add.s64 	%rd11147, %rd11146, %rd11141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19720,%dummy}, %rd11136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19721}, %rd11136;
	}
	shf.r.wrap.b32 	%r19722, %r19721, %r19720, 14;
	shf.r.wrap.b32 	%r19723, %r19720, %r19721, 14;
	mov.b64 	%rd11148, {%r19723, %r19722};
	shf.r.wrap.b32 	%r19724, %r19721, %r19720, 18;
	shf.r.wrap.b32 	%r19725, %r19720, %r19721, 18;
	mov.b64 	%rd11149, {%r19725, %r19724};
	xor.b64  	%rd11150, %rd11149, %rd11148;
	shf.l.wrap.b32 	%r19726, %r19720, %r19721, 23;
	shf.l.wrap.b32 	%r19727, %r19721, %r19720, 23;
	mov.b64 	%rd11151, {%r19727, %r19726};
	xor.b64  	%rd11152, %rd11150, %rd11151;
	xor.b64  	%rd11153, %rd11112, %rd11088;
	and.b64  	%rd11154, %rd11136, %rd11153;
	xor.b64  	%rd11155, %rd11154, %rd11088;
	add.s64 	%rd11156, %rd11064, %rd10875;
	add.s64 	%rd11157, %rd11156, %rd99;
	add.s64 	%rd11158, %rd11157, %rd11155;
	add.s64 	%rd11159, %rd11158, %rd11152;
	add.s64 	%rd11160, %rd11159, %rd11075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19728,%dummy}, %rd11147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19729}, %rd11147;
	}
	shf.r.wrap.b32 	%r19730, %r19729, %r19728, 28;
	shf.r.wrap.b32 	%r19731, %r19728, %r19729, 28;
	mov.b64 	%rd11161, {%r19731, %r19730};
	shf.l.wrap.b32 	%r19732, %r19728, %r19729, 30;
	shf.l.wrap.b32 	%r19733, %r19729, %r19728, 30;
	mov.b64 	%rd11162, {%r19733, %r19732};
	xor.b64  	%rd11163, %rd11162, %rd11161;
	shf.l.wrap.b32 	%r19734, %r19728, %r19729, 25;
	shf.l.wrap.b32 	%r19735, %r19729, %r19728, 25;
	mov.b64 	%rd11164, {%r19735, %r19734};
	xor.b64  	%rd11165, %rd11163, %rd11164;
	and.b64  	%rd11166, %rd11147, %rd11123;
	xor.b64  	%rd11167, %rd11147, %rd11123;
	and.b64  	%rd11168, %rd11167, %rd11099;
	or.b64  	%rd11169, %rd11168, %rd11166;
	add.s64 	%rd11170, %rd11159, %rd11169;
	add.s64 	%rd11171, %rd11170, %rd11165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19736,%dummy}, %rd11160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19737}, %rd11160;
	}
	shf.r.wrap.b32 	%r19738, %r19737, %r19736, 14;
	shf.r.wrap.b32 	%r19739, %r19736, %r19737, 14;
	mov.b64 	%rd11172, {%r19739, %r19738};
	shf.r.wrap.b32 	%r19740, %r19737, %r19736, 18;
	shf.r.wrap.b32 	%r19741, %r19736, %r19737, 18;
	mov.b64 	%rd11173, {%r19741, %r19740};
	xor.b64  	%rd11174, %rd11173, %rd11172;
	shf.l.wrap.b32 	%r19742, %r19736, %r19737, 23;
	shf.l.wrap.b32 	%r19743, %r19737, %r19736, 23;
	mov.b64 	%rd11175, {%r19743, %r19742};
	xor.b64  	%rd11176, %rd11174, %rd11175;
	xor.b64  	%rd11177, %rd11136, %rd11112;
	and.b64  	%rd11178, %rd11160, %rd11177;
	xor.b64  	%rd11179, %rd11178, %rd11112;
	add.s64 	%rd11180, %rd11088, %rd10888;
	add.s64 	%rd11181, %rd11180, %rd100;
	add.s64 	%rd11182, %rd11181, %rd11179;
	add.s64 	%rd11183, %rd11182, %rd11176;
	add.s64 	%rd11184, %rd11183, %rd11099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19744,%dummy}, %rd11171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19745}, %rd11171;
	}
	shf.r.wrap.b32 	%r19746, %r19745, %r19744, 28;
	shf.r.wrap.b32 	%r19747, %r19744, %r19745, 28;
	mov.b64 	%rd11185, {%r19747, %r19746};
	shf.l.wrap.b32 	%r19748, %r19744, %r19745, 30;
	shf.l.wrap.b32 	%r19749, %r19745, %r19744, 30;
	mov.b64 	%rd11186, {%r19749, %r19748};
	xor.b64  	%rd11187, %rd11186, %rd11185;
	shf.l.wrap.b32 	%r19750, %r19744, %r19745, 25;
	shf.l.wrap.b32 	%r19751, %r19745, %r19744, 25;
	mov.b64 	%rd11188, {%r19751, %r19750};
	xor.b64  	%rd11189, %rd11187, %rd11188;
	and.b64  	%rd11190, %rd11171, %rd11147;
	xor.b64  	%rd11191, %rd11171, %rd11147;
	and.b64  	%rd11192, %rd11191, %rd11123;
	or.b64  	%rd11193, %rd11192, %rd11190;
	add.s64 	%rd11194, %rd11183, %rd11193;
	add.s64 	%rd11195, %rd11194, %rd11189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19752,%dummy}, %rd11184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19753}, %rd11184;
	}
	shf.r.wrap.b32 	%r19754, %r19753, %r19752, 14;
	shf.r.wrap.b32 	%r19755, %r19752, %r19753, 14;
	mov.b64 	%rd11196, {%r19755, %r19754};
	shf.r.wrap.b32 	%r19756, %r19753, %r19752, 18;
	shf.r.wrap.b32 	%r19757, %r19752, %r19753, 18;
	mov.b64 	%rd11197, {%r19757, %r19756};
	xor.b64  	%rd11198, %rd11197, %rd11196;
	shf.l.wrap.b32 	%r19758, %r19752, %r19753, 23;
	shf.l.wrap.b32 	%r19759, %r19753, %r19752, 23;
	mov.b64 	%rd11199, {%r19759, %r19758};
	xor.b64  	%rd11200, %rd11198, %rd11199;
	xor.b64  	%rd11201, %rd11160, %rd11136;
	and.b64  	%rd11202, %rd11184, %rd11201;
	xor.b64  	%rd11203, %rd11202, %rd11136;
	add.s64 	%rd11204, %rd11112, %rd10901;
	add.s64 	%rd11205, %rd11204, %rd101;
	add.s64 	%rd11206, %rd11205, %rd11203;
	add.s64 	%rd11207, %rd11206, %rd11200;
	add.s64 	%rd11208, %rd11207, %rd11123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19760,%dummy}, %rd11195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19761}, %rd11195;
	}
	shf.r.wrap.b32 	%r19762, %r19761, %r19760, 28;
	shf.r.wrap.b32 	%r19763, %r19760, %r19761, 28;
	mov.b64 	%rd11209, {%r19763, %r19762};
	shf.l.wrap.b32 	%r19764, %r19760, %r19761, 30;
	shf.l.wrap.b32 	%r19765, %r19761, %r19760, 30;
	mov.b64 	%rd11210, {%r19765, %r19764};
	xor.b64  	%rd11211, %rd11210, %rd11209;
	shf.l.wrap.b32 	%r19766, %r19760, %r19761, 25;
	shf.l.wrap.b32 	%r19767, %r19761, %r19760, 25;
	mov.b64 	%rd11212, {%r19767, %r19766};
	xor.b64  	%rd11213, %rd11211, %rd11212;
	and.b64  	%rd11214, %rd11195, %rd11171;
	xor.b64  	%rd11215, %rd11195, %rd11171;
	and.b64  	%rd11216, %rd11215, %rd11147;
	or.b64  	%rd11217, %rd11216, %rd11214;
	add.s64 	%rd11218, %rd11207, %rd11217;
	add.s64 	%rd11219, %rd11218, %rd11213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19768,%dummy}, %rd11208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19769}, %rd11208;
	}
	shf.r.wrap.b32 	%r19770, %r19769, %r19768, 14;
	shf.r.wrap.b32 	%r19771, %r19768, %r19769, 14;
	mov.b64 	%rd11220, {%r19771, %r19770};
	shf.r.wrap.b32 	%r19772, %r19769, %r19768, 18;
	shf.r.wrap.b32 	%r19773, %r19768, %r19769, 18;
	mov.b64 	%rd11221, {%r19773, %r19772};
	xor.b64  	%rd11222, %rd11221, %rd11220;
	shf.l.wrap.b32 	%r19774, %r19768, %r19769, 23;
	shf.l.wrap.b32 	%r19775, %r19769, %r19768, 23;
	mov.b64 	%rd11223, {%r19775, %r19774};
	xor.b64  	%rd11224, %rd11222, %rd11223;
	xor.b64  	%rd11225, %rd11184, %rd11160;
	and.b64  	%rd11226, %rd11208, %rd11225;
	xor.b64  	%rd11227, %rd11226, %rd11160;
	add.s64 	%rd11228, %rd11136, %rd10914;
	add.s64 	%rd11229, %rd11228, %rd102;
	add.s64 	%rd11230, %rd11229, %rd11227;
	add.s64 	%rd11231, %rd11230, %rd11224;
	add.s64 	%rd11232, %rd11231, %rd11147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19776,%dummy}, %rd11219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19777}, %rd11219;
	}
	shf.r.wrap.b32 	%r19778, %r19777, %r19776, 28;
	shf.r.wrap.b32 	%r19779, %r19776, %r19777, 28;
	mov.b64 	%rd11233, {%r19779, %r19778};
	shf.l.wrap.b32 	%r19780, %r19776, %r19777, 30;
	shf.l.wrap.b32 	%r19781, %r19777, %r19776, 30;
	mov.b64 	%rd11234, {%r19781, %r19780};
	xor.b64  	%rd11235, %rd11234, %rd11233;
	shf.l.wrap.b32 	%r19782, %r19776, %r19777, 25;
	shf.l.wrap.b32 	%r19783, %r19777, %r19776, 25;
	mov.b64 	%rd11236, {%r19783, %r19782};
	xor.b64  	%rd11237, %rd11235, %rd11236;
	and.b64  	%rd11238, %rd11219, %rd11195;
	xor.b64  	%rd11239, %rd11219, %rd11195;
	and.b64  	%rd11240, %rd11239, %rd11171;
	or.b64  	%rd11241, %rd11240, %rd11238;
	add.s64 	%rd11242, %rd11231, %rd11241;
	add.s64 	%rd11243, %rd11242, %rd11237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19784,%dummy}, %rd11232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19785}, %rd11232;
	}
	shf.r.wrap.b32 	%r19786, %r19785, %r19784, 14;
	shf.r.wrap.b32 	%r19787, %r19784, %r19785, 14;
	mov.b64 	%rd11244, {%r19787, %r19786};
	shf.r.wrap.b32 	%r19788, %r19785, %r19784, 18;
	shf.r.wrap.b32 	%r19789, %r19784, %r19785, 18;
	mov.b64 	%rd11245, {%r19789, %r19788};
	xor.b64  	%rd11246, %rd11245, %rd11244;
	shf.l.wrap.b32 	%r19790, %r19784, %r19785, 23;
	shf.l.wrap.b32 	%r19791, %r19785, %r19784, 23;
	mov.b64 	%rd11247, {%r19791, %r19790};
	xor.b64  	%rd11248, %rd11246, %rd11247;
	xor.b64  	%rd11249, %rd11208, %rd11184;
	and.b64  	%rd11250, %rd11232, %rd11249;
	xor.b64  	%rd11251, %rd11250, %rd11184;
	add.s64 	%rd11252, %rd11160, %rd10927;
	add.s64 	%rd11253, %rd11252, %rd103;
	add.s64 	%rd11254, %rd11253, %rd11251;
	add.s64 	%rd11255, %rd11254, %rd11248;
	add.s64 	%rd11256, %rd11255, %rd11171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19792,%dummy}, %rd11243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19793}, %rd11243;
	}
	shf.r.wrap.b32 	%r19794, %r19793, %r19792, 28;
	shf.r.wrap.b32 	%r19795, %r19792, %r19793, 28;
	mov.b64 	%rd11257, {%r19795, %r19794};
	shf.l.wrap.b32 	%r19796, %r19792, %r19793, 30;
	shf.l.wrap.b32 	%r19797, %r19793, %r19792, 30;
	mov.b64 	%rd11258, {%r19797, %r19796};
	xor.b64  	%rd11259, %rd11258, %rd11257;
	shf.l.wrap.b32 	%r19798, %r19792, %r19793, 25;
	shf.l.wrap.b32 	%r19799, %r19793, %r19792, 25;
	mov.b64 	%rd11260, {%r19799, %r19798};
	xor.b64  	%rd11261, %rd11259, %rd11260;
	and.b64  	%rd11262, %rd11243, %rd11219;
	xor.b64  	%rd11263, %rd11243, %rd11219;
	and.b64  	%rd11264, %rd11263, %rd11195;
	or.b64  	%rd11265, %rd11264, %rd11262;
	add.s64 	%rd11266, %rd11255, %rd11265;
	add.s64 	%rd11267, %rd11266, %rd11261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19800,%dummy}, %rd11256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19801}, %rd11256;
	}
	shf.r.wrap.b32 	%r19802, %r19801, %r19800, 14;
	shf.r.wrap.b32 	%r19803, %r19800, %r19801, 14;
	mov.b64 	%rd11268, {%r19803, %r19802};
	shf.r.wrap.b32 	%r19804, %r19801, %r19800, 18;
	shf.r.wrap.b32 	%r19805, %r19800, %r19801, 18;
	mov.b64 	%rd11269, {%r19805, %r19804};
	xor.b64  	%rd11270, %rd11269, %rd11268;
	shf.l.wrap.b32 	%r19806, %r19800, %r19801, 23;
	shf.l.wrap.b32 	%r19807, %r19801, %r19800, 23;
	mov.b64 	%rd11271, {%r19807, %r19806};
	xor.b64  	%rd11272, %rd11270, %rd11271;
	xor.b64  	%rd11273, %rd11232, %rd11208;
	and.b64  	%rd11274, %rd11256, %rd11273;
	xor.b64  	%rd11275, %rd11274, %rd11208;
	add.s64 	%rd11276, %rd11184, %rd10940;
	add.s64 	%rd11277, %rd11276, %rd104;
	add.s64 	%rd11278, %rd11277, %rd11275;
	add.s64 	%rd11279, %rd11278, %rd11272;
	add.s64 	%rd11280, %rd11279, %rd11195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19808,%dummy}, %rd11267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19809}, %rd11267;
	}
	shf.r.wrap.b32 	%r19810, %r19809, %r19808, 28;
	shf.r.wrap.b32 	%r19811, %r19808, %r19809, 28;
	mov.b64 	%rd11281, {%r19811, %r19810};
	shf.l.wrap.b32 	%r19812, %r19808, %r19809, 30;
	shf.l.wrap.b32 	%r19813, %r19809, %r19808, 30;
	mov.b64 	%rd11282, {%r19813, %r19812};
	xor.b64  	%rd11283, %rd11282, %rd11281;
	shf.l.wrap.b32 	%r19814, %r19808, %r19809, 25;
	shf.l.wrap.b32 	%r19815, %r19809, %r19808, 25;
	mov.b64 	%rd11284, {%r19815, %r19814};
	xor.b64  	%rd11285, %rd11283, %rd11284;
	and.b64  	%rd11286, %rd11267, %rd11243;
	xor.b64  	%rd11287, %rd11267, %rd11243;
	and.b64  	%rd11288, %rd11287, %rd11219;
	or.b64  	%rd11289, %rd11288, %rd11286;
	add.s64 	%rd11290, %rd11279, %rd11289;
	add.s64 	%rd11291, %rd11290, %rd11285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19816,%dummy}, %rd11280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19817}, %rd11280;
	}
	shf.r.wrap.b32 	%r19818, %r19817, %r19816, 14;
	shf.r.wrap.b32 	%r19819, %r19816, %r19817, 14;
	mov.b64 	%rd11292, {%r19819, %r19818};
	shf.r.wrap.b32 	%r19820, %r19817, %r19816, 18;
	shf.r.wrap.b32 	%r19821, %r19816, %r19817, 18;
	mov.b64 	%rd11293, {%r19821, %r19820};
	xor.b64  	%rd11294, %rd11293, %rd11292;
	shf.l.wrap.b32 	%r19822, %r19816, %r19817, 23;
	shf.l.wrap.b32 	%r19823, %r19817, %r19816, 23;
	mov.b64 	%rd11295, {%r19823, %r19822};
	xor.b64  	%rd11296, %rd11294, %rd11295;
	xor.b64  	%rd11297, %rd11256, %rd11232;
	and.b64  	%rd11298, %rd11280, %rd11297;
	xor.b64  	%rd11299, %rd11298, %rd11232;
	add.s64 	%rd11300, %rd11208, %rd10953;
	add.s64 	%rd11301, %rd11300, %rd105;
	add.s64 	%rd11302, %rd11301, %rd11299;
	add.s64 	%rd11303, %rd11302, %rd11296;
	add.s64 	%rd11304, %rd11303, %rd11219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19824,%dummy}, %rd11291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19825}, %rd11291;
	}
	shf.r.wrap.b32 	%r19826, %r19825, %r19824, 28;
	shf.r.wrap.b32 	%r19827, %r19824, %r19825, 28;
	mov.b64 	%rd11305, {%r19827, %r19826};
	shf.l.wrap.b32 	%r19828, %r19824, %r19825, 30;
	shf.l.wrap.b32 	%r19829, %r19825, %r19824, 30;
	mov.b64 	%rd11306, {%r19829, %r19828};
	xor.b64  	%rd11307, %rd11306, %rd11305;
	shf.l.wrap.b32 	%r19830, %r19824, %r19825, 25;
	shf.l.wrap.b32 	%r19831, %r19825, %r19824, 25;
	mov.b64 	%rd11308, {%r19831, %r19830};
	xor.b64  	%rd11309, %rd11307, %rd11308;
	and.b64  	%rd11310, %rd11291, %rd11267;
	xor.b64  	%rd11311, %rd11291, %rd11267;
	and.b64  	%rd11312, %rd11311, %rd11243;
	or.b64  	%rd11313, %rd11312, %rd11310;
	add.s64 	%rd11314, %rd11303, %rd11313;
	add.s64 	%rd11315, %rd11314, %rd11309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19832,%dummy}, %rd11304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19833}, %rd11304;
	}
	shf.r.wrap.b32 	%r19834, %r19833, %r19832, 14;
	shf.r.wrap.b32 	%r19835, %r19832, %r19833, 14;
	mov.b64 	%rd11316, {%r19835, %r19834};
	shf.r.wrap.b32 	%r19836, %r19833, %r19832, 18;
	shf.r.wrap.b32 	%r19837, %r19832, %r19833, 18;
	mov.b64 	%rd11317, {%r19837, %r19836};
	xor.b64  	%rd11318, %rd11317, %rd11316;
	shf.l.wrap.b32 	%r19838, %r19832, %r19833, 23;
	shf.l.wrap.b32 	%r19839, %r19833, %r19832, 23;
	mov.b64 	%rd11319, {%r19839, %r19838};
	xor.b64  	%rd11320, %rd11318, %rd11319;
	xor.b64  	%rd11321, %rd11280, %rd11256;
	and.b64  	%rd11322, %rd11304, %rd11321;
	xor.b64  	%rd11323, %rd11322, %rd11256;
	add.s64 	%rd11324, %rd11232, %rd10966;
	add.s64 	%rd11325, %rd11324, %rd106;
	add.s64 	%rd11326, %rd11325, %rd11323;
	add.s64 	%rd11327, %rd11326, %rd11320;
	add.s64 	%rd11328, %rd11327, %rd11243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19840,%dummy}, %rd11315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19841}, %rd11315;
	}
	shf.r.wrap.b32 	%r19842, %r19841, %r19840, 28;
	shf.r.wrap.b32 	%r19843, %r19840, %r19841, 28;
	mov.b64 	%rd11329, {%r19843, %r19842};
	shf.l.wrap.b32 	%r19844, %r19840, %r19841, 30;
	shf.l.wrap.b32 	%r19845, %r19841, %r19840, 30;
	mov.b64 	%rd11330, {%r19845, %r19844};
	xor.b64  	%rd11331, %rd11330, %rd11329;
	shf.l.wrap.b32 	%r19846, %r19840, %r19841, 25;
	shf.l.wrap.b32 	%r19847, %r19841, %r19840, 25;
	mov.b64 	%rd11332, {%r19847, %r19846};
	xor.b64  	%rd11333, %rd11331, %rd11332;
	and.b64  	%rd11334, %rd11315, %rd11291;
	xor.b64  	%rd11335, %rd11315, %rd11291;
	and.b64  	%rd11336, %rd11335, %rd11267;
	or.b64  	%rd11337, %rd11336, %rd11334;
	add.s64 	%rd11338, %rd11327, %rd11337;
	add.s64 	%rd11339, %rd11338, %rd11333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19848,%dummy}, %rd11328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19849}, %rd11328;
	}
	shf.r.wrap.b32 	%r19850, %r19849, %r19848, 14;
	shf.r.wrap.b32 	%r19851, %r19848, %r19849, 14;
	mov.b64 	%rd11340, {%r19851, %r19850};
	shf.r.wrap.b32 	%r19852, %r19849, %r19848, 18;
	shf.r.wrap.b32 	%r19853, %r19848, %r19849, 18;
	mov.b64 	%rd11341, {%r19853, %r19852};
	xor.b64  	%rd11342, %rd11341, %rd11340;
	shf.l.wrap.b32 	%r19854, %r19848, %r19849, 23;
	shf.l.wrap.b32 	%r19855, %r19849, %r19848, 23;
	mov.b64 	%rd11343, {%r19855, %r19854};
	xor.b64  	%rd11344, %rd11342, %rd11343;
	xor.b64  	%rd11345, %rd11304, %rd11280;
	and.b64  	%rd11346, %rd11328, %rd11345;
	xor.b64  	%rd11347, %rd11346, %rd11280;
	add.s64 	%rd11348, %rd11256, %rd10979;
	add.s64 	%rd11349, %rd11348, %rd107;
	add.s64 	%rd11350, %rd11349, %rd11347;
	add.s64 	%rd11351, %rd11350, %rd11344;
	add.s64 	%rd11352, %rd11351, %rd11267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19856,%dummy}, %rd11339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19857}, %rd11339;
	}
	shf.r.wrap.b32 	%r19858, %r19857, %r19856, 28;
	shf.r.wrap.b32 	%r19859, %r19856, %r19857, 28;
	mov.b64 	%rd11353, {%r19859, %r19858};
	shf.l.wrap.b32 	%r19860, %r19856, %r19857, 30;
	shf.l.wrap.b32 	%r19861, %r19857, %r19856, 30;
	mov.b64 	%rd11354, {%r19861, %r19860};
	xor.b64  	%rd11355, %rd11354, %rd11353;
	shf.l.wrap.b32 	%r19862, %r19856, %r19857, 25;
	shf.l.wrap.b32 	%r19863, %r19857, %r19856, 25;
	mov.b64 	%rd11356, {%r19863, %r19862};
	xor.b64  	%rd11357, %rd11355, %rd11356;
	and.b64  	%rd11358, %rd11339, %rd11315;
	xor.b64  	%rd11359, %rd11339, %rd11315;
	and.b64  	%rd11360, %rd11359, %rd11291;
	or.b64  	%rd11361, %rd11360, %rd11358;
	add.s64 	%rd11362, %rd11351, %rd11361;
	add.s64 	%rd11363, %rd11362, %rd11357;
	add.s64 	%rd11364, %rd23216, %rd11363;
	st.local.u64 	[%rd9], %rd11364;
	add.s64 	%rd11365, %rd23215, %rd11339;
	st.local.u64 	[%rd9+8], %rd11365;
	add.s64 	%rd11366, %rd23214, %rd11315;
	st.local.u64 	[%rd9+16], %rd11366;
	add.s64 	%rd11367, %rd23213, %rd11291;
	st.local.u64 	[%rd9+24], %rd11367;
	add.s64 	%rd11368, %rd23212, %rd11352;
	st.local.u64 	[%rd9+32], %rd11368;
	add.s64 	%rd11369, %rd23211, %rd11328;
	st.local.u64 	[%rd9+40], %rd11369;
	add.s64 	%rd11370, %rd23210, %rd11304;
	st.local.u64 	[%rd9+48], %rd11370;
	add.s64 	%rd11371, %rd23209, %rd11280;
	st.local.u64 	[%rd9+56], %rd11371;
	mul.wide.s32 	%rd11372, %r1, 64;
	add.s64 	%rd11373, %rd23208, %rd11372;
	st.global.u64 	[%rd11373], %rd11364;
	st.global.u64 	[%rd11373+8], %rd11365;
	st.global.u64 	[%rd11373+16], %rd11366;
	st.global.u64 	[%rd11373+24], %rd11367;
	st.global.u64 	[%rd11373+32], %rd11368;
	st.global.u64 	[%rd11373+40], %rd11369;
	st.global.u64 	[%rd11373+48], %rd11370;
	st.global.u64 	[%rd11373+56], %rd11371;

BB1_219:
	ret;
}

	// .globl	m11300_loop
.entry m11300_loop(
	.param .u64 .ptr .global .align 4 m11300_loop_param_0,
	.param .u64 .ptr .global .align 4 m11300_loop_param_1,
	.param .u64 .ptr .global .align 4 m11300_loop_param_2,
	.param .u64 .ptr .const .align 4 m11300_loop_param_3,
	.param .u64 .ptr .global .align 8 m11300_loop_param_4,
	.param .u64 .ptr .global .align 1 m11300_loop_param_5,
	.param .u64 .ptr .global .align 4 m11300_loop_param_6,
	.param .u64 .ptr .global .align 4 m11300_loop_param_7,
	.param .u64 .ptr .global .align 4 m11300_loop_param_8,
	.param .u64 .ptr .global .align 4 m11300_loop_param_9,
	.param .u64 .ptr .global .align 4 m11300_loop_param_10,
	.param .u64 .ptr .global .align 4 m11300_loop_param_11,
	.param .u64 .ptr .global .align 4 m11300_loop_param_12,
	.param .u64 .ptr .global .align 4 m11300_loop_param_13,
	.param .u64 .ptr .global .align 8 m11300_loop_param_14,
	.param .u64 .ptr .global .align 4 m11300_loop_param_15,
	.param .u64 .ptr .global .align 4 m11300_loop_param_16,
	.param .u64 .ptr .global .align 4 m11300_loop_param_17,
	.param .u64 .ptr .global .align 4 m11300_loop_param_18,
	.param .u64 .ptr .global .align 4 m11300_loop_param_19,
	.param .u64 .ptr .global .align 1 m11300_loop_param_20,
	.param .u64 .ptr .global .align 1 m11300_loop_param_21,
	.param .u64 .ptr .global .align 1 m11300_loop_param_22,
	.param .u64 .ptr .global .align 1 m11300_loop_param_23,
	.param .u64 .ptr .global .align 8 m11300_loop_param_24
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1912>;
	.reg .b64 	%rd<2819>;


	ld.param.u64 	%rd121, [m11300_loop_param_4];
	ld.param.u64 	%rd122, [m11300_loop_param_24];
	mov.b32	%r5, %envreg3;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mad.lo.s32 	%r8, %r6, %r7, %r5;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
	cvt.s64.s32	%rd123, %r1;
	add.s64 	%rd1, %rd122, 56;
	ld.global.u64 	%rd124, [%rd122+56];
	setp.ge.u64	%p1, %rd123, %rd124;
	@%p1 bra 	BB2_5;

	mul.wide.s32 	%rd125, %r1, 64;
	add.s64 	%rd2, %rd121, %rd125;
	ld.global.u64 	%rd2818, [%rd2];
	ld.global.u64 	%rd2817, [%rd2+8];
	ld.global.u64 	%rd2816, [%rd2+16];
	ld.global.u64 	%rd2815, [%rd2+24];
	ld.global.u64 	%rd2814, [%rd2+32];
	ld.global.u64 	%rd2813, [%rd2+40];
	ld.global.u64 	%rd2812, [%rd2+48];
	ld.global.u64 	%rd2811, [%rd2+56];
	ld.global.u32 	%r2, [%rd1+-36];
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB2_4;

	ld.const.u64 	%rd11, [k_sha512];
	ld.const.u64 	%rd12, [k_sha512+8];
	ld.const.u64 	%rd13, [k_sha512+16];
	ld.const.u64 	%rd14, [k_sha512+24];
	ld.const.u64 	%rd15, [k_sha512+32];
	ld.const.u64 	%rd16, [k_sha512+40];
	ld.const.u64 	%rd17, [k_sha512+48];
	ld.const.u64 	%rd18, [k_sha512+56];
	ld.const.u64 	%rd126, [k_sha512+64];
	xor.b64  	%rd19, %rd126, -9223372036854775808;
	mov.u64 	%rd127, -9223372036854775808;
	ld.const.u64 	%rd20, [k_sha512+72];
	ld.const.u64 	%rd21, [k_sha512+80];
	ld.const.u64 	%rd22, [k_sha512+88];
	ld.const.u64 	%rd23, [k_sha512+96];
	ld.const.u64 	%rd24, [k_sha512+104];
	ld.const.u64 	%rd25, [k_sha512+112];
	ld.const.u64 	%rd128, [k_sha512+120];
	add.s64 	%rd26, %rd128, 512;
	mov.u64 	%rd129, 512;
	ld.const.u64 	%rd27, [k_sha512+128];
	ld.const.u64 	%rd28, [k_sha512+136];
	ld.const.u64 	%rd29, [k_sha512+144];
	ld.const.u64 	%rd30, [k_sha512+152];
	ld.const.u64 	%rd31, [k_sha512+160];
	ld.const.u64 	%rd32, [k_sha512+168];
	ld.const.u64 	%rd33, [k_sha512+176];
	ld.const.u64 	%rd34, [k_sha512+184];
	ld.const.u64 	%rd35, [k_sha512+192];
	ld.const.u64 	%rd36, [k_sha512+200];
	ld.const.u64 	%rd37, [k_sha512+208];
	ld.const.u64 	%rd38, [k_sha512+216];
	ld.const.u64 	%rd39, [k_sha512+224];
	ld.const.u64 	%rd40, [k_sha512+232];
	ld.const.u64 	%rd41, [k_sha512+240];
	ld.const.u64 	%rd42, [k_sha512+248];
	ld.const.u64 	%rd43, [k_sha512+256];
	ld.const.u64 	%rd44, [k_sha512+264];
	ld.const.u64 	%rd45, [k_sha512+272];
	ld.const.u64 	%rd46, [k_sha512+280];
	ld.const.u64 	%rd47, [k_sha512+288];
	ld.const.u64 	%rd48, [k_sha512+296];
	ld.const.u64 	%rd49, [k_sha512+304];
	ld.const.u64 	%rd50, [k_sha512+312];
	ld.const.u64 	%rd51, [k_sha512+320];
	ld.const.u64 	%rd52, [k_sha512+328];
	ld.const.u64 	%rd53, [k_sha512+336];
	ld.const.u64 	%rd54, [k_sha512+344];
	ld.const.u64 	%rd55, [k_sha512+352];
	ld.const.u64 	%rd56, [k_sha512+360];
	ld.const.u64 	%rd57, [k_sha512+368];
	ld.const.u64 	%rd58, [k_sha512+376];
	ld.const.u64 	%rd59, [k_sha512+384];
	ld.const.u64 	%rd60, [k_sha512+392];
	ld.const.u64 	%rd61, [k_sha512+400];
	ld.const.u64 	%rd62, [k_sha512+408];
	ld.const.u64 	%rd63, [k_sha512+416];
	ld.const.u64 	%rd64, [k_sha512+424];
	ld.const.u64 	%rd65, [k_sha512+432];
	ld.const.u64 	%rd66, [k_sha512+440];
	ld.const.u64 	%rd67, [k_sha512+448];
	ld.const.u64 	%rd68, [k_sha512+456];
	ld.const.u64 	%rd69, [k_sha512+464];
	ld.const.u64 	%rd70, [k_sha512+472];
	ld.const.u64 	%rd71, [k_sha512+480];
	ld.const.u64 	%rd72, [k_sha512+488];
	ld.const.u64 	%rd73, [k_sha512+496];
	ld.const.u64 	%rd74, [k_sha512+504];
	ld.const.u64 	%rd75, [k_sha512+512];
	ld.const.u64 	%rd76, [k_sha512+520];
	ld.const.u64 	%rd77, [k_sha512+528];
	ld.const.u64 	%rd78, [k_sha512+536];
	ld.const.u64 	%rd79, [k_sha512+544];
	ld.const.u64 	%rd80, [k_sha512+552];
	ld.const.u64 	%rd81, [k_sha512+560];
	ld.const.u64 	%rd82, [k_sha512+568];
	ld.const.u64 	%rd83, [k_sha512+576];
	ld.const.u64 	%rd84, [k_sha512+584];
	ld.const.u64 	%rd85, [k_sha512+592];
	ld.const.u64 	%rd86, [k_sha512+600];
	ld.const.u64 	%rd87, [k_sha512+608];
	ld.const.u64 	%rd88, [k_sha512+616];
	ld.const.u64 	%rd89, [k_sha512+624];
	ld.const.u64 	%rd90, [k_sha512+632];
	mov.u64 	%rd130, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12,%dummy}, %rd130;
	}
	shf.l.wrap.b32 	%r13, %r12, %r11, 3;
	shf.l.wrap.b32 	%r14, %r11, %r12, 3;
	mov.b64 	%rd131, {%r14, %r13};
	shf.r.wrap.b32 	%r15, %r11, %r12, 19;
	shf.r.wrap.b32 	%r16, %r12, %r11, 19;
	mov.b64 	%rd132, {%r16, %r15};
	xor.b64  	%rd91, %rd131, %rd132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17}, %rd129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18,%dummy}, %rd129;
	}
	shf.l.wrap.b32 	%r19, %r18, %r17, 3;
	shf.l.wrap.b32 	%r20, %r17, %r18, 3;
	mov.b64 	%rd133, {%r20, %r19};
	shf.r.wrap.b32 	%r21, %r17, %r18, 19;
	shf.r.wrap.b32 	%r22, %r18, %r17, 19;
	mov.b64 	%rd134, {%r22, %r21};
	xor.b64  	%rd135, %rd133, %rd134;
	xor.b64  	%rd92, %rd135, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r23,%dummy}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r24}, %rd127;
	}
	shf.r.wrap.b32 	%r25, %r24, %r23, 8;
	shf.r.wrap.b32 	%r26, %r23, %r24, 8;
	mov.b64 	%rd136, {%r26, %r25};
	shf.r.wrap.b32 	%r27, %r24, %r23, 1;
	shf.r.wrap.b32 	%r28, %r23, %r24, 1;
	mov.b64 	%rd137, {%r28, %r27};
	xor.b64  	%rd138, %rd136, %rd137;
	xor.b64  	%rd93, %rd138, 72057594037927936;
	shf.r.wrap.b32 	%r29, %r11, %r12, 8;
	shf.r.wrap.b32 	%r30, %r12, %r11, 8;
	mov.b64 	%rd139, {%r30, %r29};
	shf.r.wrap.b32 	%r31, %r11, %r12, 1;
	shf.r.wrap.b32 	%r32, %r12, %r11, 1;
	mov.b64 	%rd140, {%r32, %r31};
	xor.b64  	%rd94, %rd139, %rd140;
	xor.b64  	%rd95, %rd94, -9223372036854775808;
	shf.r.wrap.b32 	%r33, %r17, %r18, 8;
	shf.r.wrap.b32 	%r34, %r18, %r17, 8;
	mov.b64 	%rd141, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r17, %r18, 1;
	shf.r.wrap.b32 	%r36, %r18, %r17, 1;
	mov.b64 	%rd142, {%r36, %r35};
	xor.b64  	%rd143, %rd141, %rd142;
	xor.b64  	%rd96, %rd143, 4;
	mov.u32 	%r1911, 0;

BB2_3:
	add.s64 	%rd144, %rd2818, %rd11;
	add.s64 	%rd145, %rd144, -5413767537554067089;
	add.s64 	%rd146, %rd144, 5963675889510395859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd145;
	}
	shf.r.wrap.b32 	%r39, %r38, %r37, 14;
	shf.r.wrap.b32 	%r40, %r37, %r38, 14;
	mov.b64 	%rd147, {%r40, %r39};
	shf.r.wrap.b32 	%r41, %r38, %r37, 18;
	shf.r.wrap.b32 	%r42, %r37, %r38, 18;
	mov.b64 	%rd148, {%r42, %r41};
	xor.b64  	%rd149, %rd147, %rd148;
	shf.l.wrap.b32 	%r43, %r37, %r38, 23;
	shf.l.wrap.b32 	%r44, %r38, %r37, 23;
	mov.b64 	%rd150, {%r44, %r43};
	xor.b64  	%rd151, %rd149, %rd150;
	and.b64  	%rd152, %rd145, -3887949035690463538;
	xor.b64  	%rd153, %rd152, -7276294671716946913;
	add.s64 	%rd154, %rd2817, %rd12;
	add.s64 	%rd155, %rd154, %rd153;
	add.s64 	%rd156, %rd155, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r45,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r46}, %rd146;
	}
	shf.r.wrap.b32 	%r47, %r46, %r45, 28;
	shf.r.wrap.b32 	%r48, %r45, %r46, 28;
	mov.b64 	%rd157, {%r48, %r47};
	shf.l.wrap.b32 	%r49, %r45, %r46, 30;
	shf.l.wrap.b32 	%r50, %r46, %r45, 30;
	mov.b64 	%rd158, {%r50, %r49};
	xor.b64  	%rd159, %rd157, %rd158;
	shf.l.wrap.b32 	%r51, %r45, %r46, 25;
	shf.l.wrap.b32 	%r52, %r46, %r45, 25;
	mov.b64 	%rd160, {%r52, %r51};
	xor.b64  	%rd161, %rd159, %rd160;
	and.b64  	%rd162, %rd146, 7640891576956012808;
	and.b64  	%rd163, %rd146, -4942790177534073029;
	xor.b64  	%rd164, %rd163, 3026882967131160840;
	or.b64  	%rd165, %rd164, %rd162;
	add.s64 	%rd166, %rd161, %rd165;
	add.s64 	%rd167, %rd156, %rd166;
	add.s64 	%rd168, %rd156, 6625583534739731862;
	add.s64 	%rd169, %rd167, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd168;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 14;
	shf.r.wrap.b32 	%r56, %r53, %r54, 14;
	mov.b64 	%rd170, {%r56, %r55};
	shf.r.wrap.b32 	%r57, %r54, %r53, 18;
	shf.r.wrap.b32 	%r58, %r53, %r54, 18;
	mov.b64 	%rd171, {%r58, %r57};
	xor.b64  	%rd172, %rd170, %rd171;
	shf.l.wrap.b32 	%r59, %r53, %r54, 23;
	shf.l.wrap.b32 	%r60, %r54, %r53, 23;
	mov.b64 	%rd173, {%r60, %r59};
	xor.b64  	%rd174, %rd172, %rd173;
	xor.b64  	%rd175, %rd145, 5840696475078001361;
	and.b64  	%rd176, %rd168, %rd175;
	xor.b64  	%rd177, %rd176, 5840696475078001361;
	add.s64 	%rd178, %rd2816, %rd13;
	add.s64 	%rd179, %rd178, %rd177;
	add.s64 	%rd180, %rd179, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd169;
	}
	shf.r.wrap.b32 	%r63, %r62, %r61, 28;
	shf.r.wrap.b32 	%r64, %r61, %r62, 28;
	mov.b64 	%rd181, {%r64, %r63};
	shf.l.wrap.b32 	%r65, %r61, %r62, 30;
	shf.l.wrap.b32 	%r66, %r62, %r61, 30;
	mov.b64 	%rd182, {%r66, %r65};
	xor.b64  	%rd183, %rd181, %rd182;
	shf.l.wrap.b32 	%r67, %r61, %r62, 25;
	shf.l.wrap.b32 	%r68, %r62, %r61, 25;
	mov.b64 	%rd184, {%r68, %r67};
	xor.b64  	%rd185, %rd183, %rd184;
	and.b64  	%rd186, %rd169, %rd146;
	xor.b64  	%rd187, %rd169, %rd146;
	and.b64  	%rd188, %rd187, 7640891576956012808;
	or.b64  	%rd189, %rd188, %rd186;
	add.s64 	%rd190, %rd185, %rd189;
	add.s64 	%rd191, %rd180, %rd190;
	add.s64 	%rd192, %rd180, 6227659224458531674;
	add.s64 	%rd193, %rd191, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd192;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 14;
	shf.r.wrap.b32 	%r72, %r69, %r70, 14;
	mov.b64 	%rd194, {%r72, %r71};
	shf.r.wrap.b32 	%r73, %r70, %r69, 18;
	shf.r.wrap.b32 	%r74, %r69, %r70, 18;
	mov.b64 	%rd195, {%r74, %r73};
	xor.b64  	%rd196, %rd194, %rd195;
	shf.l.wrap.b32 	%r75, %r69, %r70, 23;
	shf.l.wrap.b32 	%r76, %r70, %r69, 23;
	mov.b64 	%rd197, {%r76, %r75};
	xor.b64  	%rd198, %rd196, %rd197;
	xor.b64  	%rd199, %rd168, %rd145;
	and.b64  	%rd200, %rd192, %rd199;
	xor.b64  	%rd201, %rd200, %rd145;
	add.s64 	%rd202, %rd2815, %rd14;
	add.s64 	%rd203, %rd202, %rd201;
	add.s64 	%rd204, %rd203, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd193;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 28;
	shf.r.wrap.b32 	%r80, %r77, %r78, 28;
	mov.b64 	%rd205, {%r80, %r79};
	shf.l.wrap.b32 	%r81, %r77, %r78, 30;
	shf.l.wrap.b32 	%r82, %r78, %r77, 30;
	mov.b64 	%rd206, {%r82, %r81};
	xor.b64  	%rd207, %rd205, %rd206;
	shf.l.wrap.b32 	%r83, %r77, %r78, 25;
	shf.l.wrap.b32 	%r84, %r78, %r77, 25;
	mov.b64 	%rd208, {%r84, %r83};
	xor.b64  	%rd209, %rd207, %rd208;
	and.b64  	%rd210, %rd193, %rd169;
	xor.b64  	%rd211, %rd193, %rd169;
	and.b64  	%rd212, %rd211, %rd146;
	or.b64  	%rd213, %rd212, %rd210;
	add.s64 	%rd214, %rd209, %rd213;
	add.s64 	%rd215, %rd204, %rd214;
	add.s64 	%rd216, %rd204, -4965156021675537447;
	add.s64 	%rd217, %rd215, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd216;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 14;
	shf.r.wrap.b32 	%r88, %r85, %r86, 14;
	mov.b64 	%rd218, {%r88, %r87};
	shf.r.wrap.b32 	%r89, %r86, %r85, 18;
	shf.r.wrap.b32 	%r90, %r85, %r86, 18;
	mov.b64 	%rd219, {%r90, %r89};
	xor.b64  	%rd220, %rd218, %rd219;
	shf.l.wrap.b32 	%r91, %r85, %r86, 23;
	shf.l.wrap.b32 	%r92, %r86, %r85, 23;
	mov.b64 	%rd221, {%r92, %r91};
	xor.b64  	%rd222, %rd220, %rd221;
	xor.b64  	%rd223, %rd192, %rd168;
	and.b64  	%rd224, %rd216, %rd223;
	xor.b64  	%rd225, %rd224, %rd168;
	add.s64 	%rd226, %rd145, %rd2814;
	add.s64 	%rd227, %rd226, %rd15;
	add.s64 	%rd228, %rd227, %rd225;
	add.s64 	%rd229, %rd228, %rd222;
	add.s64 	%rd230, %rd229, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd217;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 28;
	shf.r.wrap.b32 	%r96, %r93, %r94, 28;
	mov.b64 	%rd231, {%r96, %r95};
	shf.l.wrap.b32 	%r97, %r93, %r94, 30;
	shf.l.wrap.b32 	%r98, %r94, %r93, 30;
	mov.b64 	%rd232, {%r98, %r97};
	xor.b64  	%rd233, %rd231, %rd232;
	shf.l.wrap.b32 	%r99, %r93, %r94, 25;
	shf.l.wrap.b32 	%r100, %r94, %r93, 25;
	mov.b64 	%rd234, {%r100, %r99};
	xor.b64  	%rd235, %rd233, %rd234;
	and.b64  	%rd236, %rd217, %rd193;
	xor.b64  	%rd237, %rd217, %rd193;
	and.b64  	%rd238, %rd237, %rd169;
	or.b64  	%rd239, %rd238, %rd236;
	add.s64 	%rd240, %rd235, %rd239;
	add.s64 	%rd241, %rd240, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd230;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 14;
	shf.r.wrap.b32 	%r104, %r101, %r102, 14;
	mov.b64 	%rd242, {%r104, %r103};
	shf.r.wrap.b32 	%r105, %r102, %r101, 18;
	shf.r.wrap.b32 	%r106, %r101, %r102, 18;
	mov.b64 	%rd243, {%r106, %r105};
	xor.b64  	%rd244, %rd242, %rd243;
	shf.l.wrap.b32 	%r107, %r101, %r102, 23;
	shf.l.wrap.b32 	%r108, %r102, %r101, 23;
	mov.b64 	%rd245, {%r108, %r107};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd216, %rd192;
	and.b64  	%rd248, %rd230, %rd247;
	xor.b64  	%rd249, %rd248, %rd192;
	add.s64 	%rd250, %rd16, %rd2813;
	add.s64 	%rd251, %rd250, %rd168;
	add.s64 	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd252, %rd246;
	add.s64 	%rd254, %rd253, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd241;
	}
	shf.r.wrap.b32 	%r111, %r110, %r109, 28;
	shf.r.wrap.b32 	%r112, %r109, %r110, 28;
	mov.b64 	%rd255, {%r112, %r111};
	shf.l.wrap.b32 	%r113, %r109, %r110, 30;
	shf.l.wrap.b32 	%r114, %r110, %r109, 30;
	mov.b64 	%rd256, {%r114, %r113};
	xor.b64  	%rd257, %rd255, %rd256;
	shf.l.wrap.b32 	%r115, %r109, %r110, 25;
	shf.l.wrap.b32 	%r116, %r110, %r109, 25;
	mov.b64 	%rd258, {%r116, %r115};
	xor.b64  	%rd259, %rd257, %rd258;
	and.b64  	%rd260, %rd241, %rd217;
	xor.b64  	%rd261, %rd241, %rd217;
	and.b64  	%rd262, %rd261, %rd193;
	or.b64  	%rd263, %rd262, %rd260;
	add.s64 	%rd264, %rd259, %rd263;
	add.s64 	%rd265, %rd264, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd254;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 14;
	shf.r.wrap.b32 	%r120, %r117, %r118, 14;
	mov.b64 	%rd266, {%r120, %r119};
	shf.r.wrap.b32 	%r121, %r118, %r117, 18;
	shf.r.wrap.b32 	%r122, %r117, %r118, 18;
	mov.b64 	%rd267, {%r122, %r121};
	xor.b64  	%rd268, %rd266, %rd267;
	shf.l.wrap.b32 	%r123, %r117, %r118, 23;
	shf.l.wrap.b32 	%r124, %r118, %r117, 23;
	mov.b64 	%rd269, {%r124, %r123};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd230, %rd216;
	and.b64  	%rd272, %rd254, %rd271;
	xor.b64  	%rd273, %rd272, %rd216;
	add.s64 	%rd274, %rd17, %rd2812;
	add.s64 	%rd275, %rd274, %rd192;
	add.s64 	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd270;
	add.s64 	%rd278, %rd277, %rd193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd265;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 28;
	shf.r.wrap.b32 	%r128, %r125, %r126, 28;
	mov.b64 	%rd279, {%r128, %r127};
	shf.l.wrap.b32 	%r129, %r125, %r126, 30;
	shf.l.wrap.b32 	%r130, %r126, %r125, 30;
	mov.b64 	%rd280, {%r130, %r129};
	xor.b64  	%rd281, %rd279, %rd280;
	shf.l.wrap.b32 	%r131, %r125, %r126, 25;
	shf.l.wrap.b32 	%r132, %r126, %r125, 25;
	mov.b64 	%rd282, {%r132, %r131};
	xor.b64  	%rd283, %rd281, %rd282;
	and.b64  	%rd284, %rd265, %rd241;
	xor.b64  	%rd285, %rd265, %rd241;
	and.b64  	%rd286, %rd285, %rd217;
	or.b64  	%rd287, %rd286, %rd284;
	add.s64 	%rd288, %rd283, %rd287;
	add.s64 	%rd289, %rd288, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd278;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 14;
	shf.r.wrap.b32 	%r136, %r133, %r134, 14;
	mov.b64 	%rd290, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r134, %r133, 18;
	shf.r.wrap.b32 	%r138, %r133, %r134, 18;
	mov.b64 	%rd291, {%r138, %r137};
	xor.b64  	%rd292, %rd290, %rd291;
	shf.l.wrap.b32 	%r139, %r133, %r134, 23;
	shf.l.wrap.b32 	%r140, %r134, %r133, 23;
	mov.b64 	%rd293, {%r140, %r139};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd230;
	and.b64  	%rd296, %rd278, %rd295;
	xor.b64  	%rd297, %rd296, %rd230;
	add.s64 	%rd298, %rd18, %rd2811;
	add.s64 	%rd299, %rd298, %rd216;
	add.s64 	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd294;
	add.s64 	%rd302, %rd301, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd289;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 28;
	shf.r.wrap.b32 	%r144, %r141, %r142, 28;
	mov.b64 	%rd303, {%r144, %r143};
	shf.l.wrap.b32 	%r145, %r141, %r142, 30;
	shf.l.wrap.b32 	%r146, %r142, %r141, 30;
	mov.b64 	%rd304, {%r146, %r145};
	xor.b64  	%rd305, %rd303, %rd304;
	shf.l.wrap.b32 	%r147, %r141, %r142, 25;
	shf.l.wrap.b32 	%r148, %r142, %r141, 25;
	mov.b64 	%rd306, {%r148, %r147};
	xor.b64  	%rd307, %rd305, %rd306;
	and.b64  	%rd308, %rd289, %rd265;
	xor.b64  	%rd309, %rd289, %rd265;
	and.b64  	%rd310, %rd309, %rd241;
	or.b64  	%rd311, %rd310, %rd308;
	add.s64 	%rd312, %rd307, %rd311;
	add.s64 	%rd313, %rd312, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd302;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 14;
	shf.r.wrap.b32 	%r152, %r149, %r150, 14;
	mov.b64 	%rd314, {%r152, %r151};
	shf.r.wrap.b32 	%r153, %r150, %r149, 18;
	shf.r.wrap.b32 	%r154, %r149, %r150, 18;
	mov.b64 	%rd315, {%r154, %r153};
	xor.b64  	%rd316, %rd314, %rd315;
	shf.l.wrap.b32 	%r155, %r149, %r150, 23;
	shf.l.wrap.b32 	%r156, %r150, %r149, 23;
	mov.b64 	%rd317, {%r156, %r155};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd278, %rd254;
	and.b64  	%rd320, %rd302, %rd319;
	xor.b64  	%rd321, %rd320, %rd254;
	add.s64 	%rd322, %rd19, %rd230;
	add.s64 	%rd323, %rd322, %rd321;
	add.s64 	%rd324, %rd323, %rd318;
	add.s64 	%rd325, %rd324, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd313;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd326, {%r160, %r159};
	shf.l.wrap.b32 	%r161, %r157, %r158, 30;
	shf.l.wrap.b32 	%r162, %r158, %r157, 30;
	mov.b64 	%rd327, {%r162, %r161};
	xor.b64  	%rd328, %rd326, %rd327;
	shf.l.wrap.b32 	%r163, %r157, %r158, 25;
	shf.l.wrap.b32 	%r164, %r158, %r157, 25;
	mov.b64 	%rd329, {%r164, %r163};
	xor.b64  	%rd330, %rd328, %rd329;
	and.b64  	%rd331, %rd313, %rd289;
	xor.b64  	%rd332, %rd313, %rd289;
	and.b64  	%rd333, %rd332, %rd265;
	or.b64  	%rd334, %rd333, %rd331;
	add.s64 	%rd335, %rd330, %rd334;
	add.s64 	%rd336, %rd335, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd325;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 14;
	shf.r.wrap.b32 	%r168, %r165, %r166, 14;
	mov.b64 	%rd337, {%r168, %r167};
	shf.r.wrap.b32 	%r169, %r166, %r165, 18;
	shf.r.wrap.b32 	%r170, %r165, %r166, 18;
	mov.b64 	%rd338, {%r170, %r169};
	xor.b64  	%rd339, %rd337, %rd338;
	shf.l.wrap.b32 	%r171, %r165, %r166, 23;
	shf.l.wrap.b32 	%r172, %r166, %r165, 23;
	mov.b64 	%rd340, {%r172, %r171};
	xor.b64  	%rd341, %rd339, %rd340;
	xor.b64  	%rd342, %rd302, %rd278;
	and.b64  	%rd343, %rd325, %rd342;
	xor.b64  	%rd344, %rd343, %rd278;
	add.s64 	%rd345, %rd254, %rd20;
	add.s64 	%rd346, %rd345, %rd344;
	add.s64 	%rd347, %rd346, %rd341;
	add.s64 	%rd348, %rd347, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd336;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 28;
	shf.r.wrap.b32 	%r176, %r173, %r174, 28;
	mov.b64 	%rd349, {%r176, %r175};
	shf.l.wrap.b32 	%r177, %r173, %r174, 30;
	shf.l.wrap.b32 	%r178, %r174, %r173, 30;
	mov.b64 	%rd350, {%r178, %r177};
	xor.b64  	%rd351, %rd349, %rd350;
	shf.l.wrap.b32 	%r179, %r173, %r174, 25;
	shf.l.wrap.b32 	%r180, %r174, %r173, 25;
	mov.b64 	%rd352, {%r180, %r179};
	xor.b64  	%rd353, %rd351, %rd352;
	and.b64  	%rd354, %rd336, %rd313;
	xor.b64  	%rd355, %rd336, %rd313;
	and.b64  	%rd356, %rd355, %rd289;
	or.b64  	%rd357, %rd356, %rd354;
	add.s64 	%rd358, %rd353, %rd357;
	add.s64 	%rd359, %rd358, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd348;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 14;
	shf.r.wrap.b32 	%r184, %r181, %r182, 14;
	mov.b64 	%rd360, {%r184, %r183};
	shf.r.wrap.b32 	%r185, %r182, %r181, 18;
	shf.r.wrap.b32 	%r186, %r181, %r182, 18;
	mov.b64 	%rd361, {%r186, %r185};
	xor.b64  	%rd362, %rd360, %rd361;
	shf.l.wrap.b32 	%r187, %r181, %r182, 23;
	shf.l.wrap.b32 	%r188, %r182, %r181, 23;
	mov.b64 	%rd363, {%r188, %r187};
	xor.b64  	%rd364, %rd362, %rd363;
	xor.b64  	%rd365, %rd325, %rd302;
	and.b64  	%rd366, %rd348, %rd365;
	xor.b64  	%rd367, %rd366, %rd302;
	add.s64 	%rd368, %rd278, %rd21;
	add.s64 	%rd369, %rd368, %rd367;
	add.s64 	%rd370, %rd369, %rd364;
	add.s64 	%rd371, %rd370, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd359;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 28;
	shf.r.wrap.b32 	%r192, %r189, %r190, 28;
	mov.b64 	%rd372, {%r192, %r191};
	shf.l.wrap.b32 	%r193, %r189, %r190, 30;
	shf.l.wrap.b32 	%r194, %r190, %r189, 30;
	mov.b64 	%rd373, {%r194, %r193};
	xor.b64  	%rd374, %rd372, %rd373;
	shf.l.wrap.b32 	%r195, %r189, %r190, 25;
	shf.l.wrap.b32 	%r196, %r190, %r189, 25;
	mov.b64 	%rd375, {%r196, %r195};
	xor.b64  	%rd376, %rd374, %rd375;
	and.b64  	%rd377, %rd359, %rd336;
	xor.b64  	%rd378, %rd359, %rd336;
	and.b64  	%rd379, %rd378, %rd313;
	or.b64  	%rd380, %rd379, %rd377;
	add.s64 	%rd381, %rd376, %rd380;
	add.s64 	%rd382, %rd381, %rd370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd371;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 14;
	shf.r.wrap.b32 	%r200, %r197, %r198, 14;
	mov.b64 	%rd383, {%r200, %r199};
	shf.r.wrap.b32 	%r201, %r198, %r197, 18;
	shf.r.wrap.b32 	%r202, %r197, %r198, 18;
	mov.b64 	%rd384, {%r202, %r201};
	xor.b64  	%rd385, %rd383, %rd384;
	shf.l.wrap.b32 	%r203, %r197, %r198, 23;
	shf.l.wrap.b32 	%r204, %r198, %r197, 23;
	mov.b64 	%rd386, {%r204, %r203};
	xor.b64  	%rd387, %rd385, %rd386;
	xor.b64  	%rd388, %rd348, %rd325;
	and.b64  	%rd389, %rd371, %rd388;
	xor.b64  	%rd390, %rd389, %rd325;
	add.s64 	%rd391, %rd302, %rd22;
	add.s64 	%rd392, %rd391, %rd390;
	add.s64 	%rd393, %rd392, %rd387;
	add.s64 	%rd394, %rd393, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd382;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 28;
	shf.r.wrap.b32 	%r208, %r205, %r206, 28;
	mov.b64 	%rd395, {%r208, %r207};
	shf.l.wrap.b32 	%r209, %r205, %r206, 30;
	shf.l.wrap.b32 	%r210, %r206, %r205, 30;
	mov.b64 	%rd396, {%r210, %r209};
	xor.b64  	%rd397, %rd395, %rd396;
	shf.l.wrap.b32 	%r211, %r205, %r206, 25;
	shf.l.wrap.b32 	%r212, %r206, %r205, 25;
	mov.b64 	%rd398, {%r212, %r211};
	xor.b64  	%rd399, %rd397, %rd398;
	and.b64  	%rd400, %rd382, %rd359;
	xor.b64  	%rd401, %rd382, %rd359;
	and.b64  	%rd402, %rd401, %rd336;
	or.b64  	%rd403, %rd402, %rd400;
	add.s64 	%rd404, %rd399, %rd403;
	add.s64 	%rd405, %rd404, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd394;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 14;
	shf.r.wrap.b32 	%r216, %r213, %r214, 14;
	mov.b64 	%rd406, {%r216, %r215};
	shf.r.wrap.b32 	%r217, %r214, %r213, 18;
	shf.r.wrap.b32 	%r218, %r213, %r214, 18;
	mov.b64 	%rd407, {%r218, %r217};
	xor.b64  	%rd408, %rd406, %rd407;
	shf.l.wrap.b32 	%r219, %r213, %r214, 23;
	shf.l.wrap.b32 	%r220, %r214, %r213, 23;
	mov.b64 	%rd409, {%r220, %r219};
	xor.b64  	%rd410, %rd408, %rd409;
	xor.b64  	%rd411, %rd371, %rd348;
	and.b64  	%rd412, %rd394, %rd411;
	xor.b64  	%rd413, %rd412, %rd348;
	add.s64 	%rd414, %rd325, %rd23;
	add.s64 	%rd415, %rd414, %rd413;
	add.s64 	%rd416, %rd415, %rd410;
	add.s64 	%rd417, %rd416, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd405;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 28;
	shf.r.wrap.b32 	%r224, %r221, %r222, 28;
	mov.b64 	%rd418, {%r224, %r223};
	shf.l.wrap.b32 	%r225, %r221, %r222, 30;
	shf.l.wrap.b32 	%r226, %r222, %r221, 30;
	mov.b64 	%rd419, {%r226, %r225};
	xor.b64  	%rd420, %rd418, %rd419;
	shf.l.wrap.b32 	%r227, %r221, %r222, 25;
	shf.l.wrap.b32 	%r228, %r222, %r221, 25;
	mov.b64 	%rd421, {%r228, %r227};
	xor.b64  	%rd422, %rd420, %rd421;
	and.b64  	%rd423, %rd405, %rd382;
	xor.b64  	%rd424, %rd405, %rd382;
	and.b64  	%rd425, %rd424, %rd359;
	or.b64  	%rd426, %rd425, %rd423;
	add.s64 	%rd427, %rd422, %rd426;
	add.s64 	%rd428, %rd427, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd417;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 14;
	shf.r.wrap.b32 	%r232, %r229, %r230, 14;
	mov.b64 	%rd429, {%r232, %r231};
	shf.r.wrap.b32 	%r233, %r230, %r229, 18;
	shf.r.wrap.b32 	%r234, %r229, %r230, 18;
	mov.b64 	%rd430, {%r234, %r233};
	xor.b64  	%rd431, %rd429, %rd430;
	shf.l.wrap.b32 	%r235, %r229, %r230, 23;
	shf.l.wrap.b32 	%r236, %r230, %r229, 23;
	mov.b64 	%rd432, {%r236, %r235};
	xor.b64  	%rd433, %rd431, %rd432;
	xor.b64  	%rd434, %rd394, %rd371;
	and.b64  	%rd435, %rd417, %rd434;
	xor.b64  	%rd436, %rd435, %rd371;
	add.s64 	%rd437, %rd348, %rd24;
	add.s64 	%rd438, %rd437, %rd436;
	add.s64 	%rd439, %rd438, %rd433;
	add.s64 	%rd440, %rd439, %rd359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd428;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 28;
	shf.r.wrap.b32 	%r240, %r237, %r238, 28;
	mov.b64 	%rd441, {%r240, %r239};
	shf.l.wrap.b32 	%r241, %r237, %r238, 30;
	shf.l.wrap.b32 	%r242, %r238, %r237, 30;
	mov.b64 	%rd442, {%r242, %r241};
	xor.b64  	%rd443, %rd441, %rd442;
	shf.l.wrap.b32 	%r243, %r237, %r238, 25;
	shf.l.wrap.b32 	%r244, %r238, %r237, 25;
	mov.b64 	%rd444, {%r244, %r243};
	xor.b64  	%rd445, %rd443, %rd444;
	and.b64  	%rd446, %rd428, %rd405;
	xor.b64  	%rd447, %rd428, %rd405;
	and.b64  	%rd448, %rd447, %rd382;
	or.b64  	%rd449, %rd448, %rd446;
	add.s64 	%rd450, %rd445, %rd449;
	add.s64 	%rd451, %rd450, %rd439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd440;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 14;
	shf.r.wrap.b32 	%r248, %r245, %r246, 14;
	mov.b64 	%rd452, {%r248, %r247};
	shf.r.wrap.b32 	%r249, %r246, %r245, 18;
	shf.r.wrap.b32 	%r250, %r245, %r246, 18;
	mov.b64 	%rd453, {%r250, %r249};
	xor.b64  	%rd454, %rd452, %rd453;
	shf.l.wrap.b32 	%r251, %r245, %r246, 23;
	shf.l.wrap.b32 	%r252, %r246, %r245, 23;
	mov.b64 	%rd455, {%r252, %r251};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd417, %rd394;
	and.b64  	%rd458, %rd440, %rd457;
	xor.b64  	%rd459, %rd458, %rd394;
	add.s64 	%rd460, %rd371, %rd25;
	add.s64 	%rd461, %rd460, %rd459;
	add.s64 	%rd462, %rd461, %rd456;
	add.s64 	%rd463, %rd462, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd451;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 28;
	shf.r.wrap.b32 	%r256, %r253, %r254, 28;
	mov.b64 	%rd464, {%r256, %r255};
	shf.l.wrap.b32 	%r257, %r253, %r254, 30;
	shf.l.wrap.b32 	%r258, %r254, %r253, 30;
	mov.b64 	%rd465, {%r258, %r257};
	xor.b64  	%rd466, %rd464, %rd465;
	shf.l.wrap.b32 	%r259, %r253, %r254, 25;
	shf.l.wrap.b32 	%r260, %r254, %r253, 25;
	mov.b64 	%rd467, {%r260, %r259};
	xor.b64  	%rd468, %rd466, %rd467;
	and.b64  	%rd469, %rd451, %rd428;
	xor.b64  	%rd470, %rd451, %rd428;
	and.b64  	%rd471, %rd470, %rd405;
	or.b64  	%rd472, %rd471, %rd469;
	add.s64 	%rd473, %rd468, %rd472;
	add.s64 	%rd474, %rd473, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd463;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 14;
	shf.r.wrap.b32 	%r264, %r261, %r262, 14;
	mov.b64 	%rd475, {%r264, %r263};
	shf.r.wrap.b32 	%r265, %r262, %r261, 18;
	shf.r.wrap.b32 	%r266, %r261, %r262, 18;
	mov.b64 	%rd476, {%r266, %r265};
	xor.b64  	%rd477, %rd475, %rd476;
	shf.l.wrap.b32 	%r267, %r261, %r262, 23;
	shf.l.wrap.b32 	%r268, %r262, %r261, 23;
	mov.b64 	%rd478, {%r268, %r267};
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd440, %rd417;
	and.b64  	%rd481, %rd463, %rd480;
	xor.b64  	%rd482, %rd481, %rd417;
	add.s64 	%rd483, %rd26, %rd394;
	add.s64 	%rd484, %rd483, %rd482;
	add.s64 	%rd485, %rd484, %rd479;
	add.s64 	%rd486, %rd485, %rd405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd474;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 28;
	shf.r.wrap.b32 	%r272, %r269, %r270, 28;
	mov.b64 	%rd487, {%r272, %r271};
	shf.l.wrap.b32 	%r273, %r269, %r270, 30;
	shf.l.wrap.b32 	%r274, %r270, %r269, 30;
	mov.b64 	%rd488, {%r274, %r273};
	xor.b64  	%rd489, %rd487, %rd488;
	shf.l.wrap.b32 	%r275, %r269, %r270, 25;
	shf.l.wrap.b32 	%r276, %r270, %r269, 25;
	mov.b64 	%rd490, {%r276, %r275};
	xor.b64  	%rd491, %rd489, %rd490;
	and.b64  	%rd492, %rd474, %rd451;
	xor.b64  	%rd493, %rd474, %rd451;
	and.b64  	%rd494, %rd493, %rd428;
	or.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd491, %rd495;
	add.s64 	%rd497, %rd496, %rd485;
	shr.u64 	%rd498, %rd2817, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd2817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd2817;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 8;
	shf.r.wrap.b32 	%r280, %r277, %r278, 8;
	mov.b64 	%rd499, {%r280, %r279};
	xor.b64  	%rd500, %rd499, %rd498;
	shf.r.wrap.b32 	%r281, %r278, %r277, 1;
	shf.r.wrap.b32 	%r282, %r277, %r278, 1;
	mov.b64 	%rd501, {%r282, %r281};
	xor.b64  	%rd502, %rd500, %rd501;
	add.s64 	%rd503, %rd502, %rd2818;
	add.s64 	%rd504, %rd503, %rd91;
	shr.u64 	%rd505, %rd2816, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd2816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd2816;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 8;
	shf.r.wrap.b32 	%r286, %r283, %r284, 8;
	mov.b64 	%rd506, {%r286, %r285};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.r.wrap.b32 	%r287, %r284, %r283, 1;
	shf.r.wrap.b32 	%r288, %r283, %r284, 1;
	mov.b64 	%rd508, {%r288, %r287};
	xor.b64  	%rd509, %rd507, %rd508;
	add.s64 	%rd510, %rd509, %rd2817;
	add.s64 	%rd511, %rd510, %rd92;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd504;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 19;
	shf.r.wrap.b32 	%r292, %r289, %r290, 19;
	mov.b64 	%rd512, {%r292, %r291};
	shf.l.wrap.b32 	%r293, %r289, %r290, 3;
	shf.l.wrap.b32 	%r294, %r290, %r289, 3;
	mov.b64 	%rd513, {%r294, %r293};
	shr.u64 	%rd514, %rd504, 6;
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd515, %rd512;
	shr.u64 	%rd517, %rd2815, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd2815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd2815;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 8;
	shf.r.wrap.b32 	%r298, %r295, %r296, 8;
	mov.b64 	%rd518, {%r298, %r297};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.r.wrap.b32 	%r299, %r296, %r295, 1;
	shf.r.wrap.b32 	%r300, %r295, %r296, 1;
	mov.b64 	%rd520, {%r300, %r299};
	xor.b64  	%rd521, %rd519, %rd520;
	add.s64 	%rd522, %rd521, %rd2816;
	add.s64 	%rd523, %rd522, %rd516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd511;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 19;
	shf.r.wrap.b32 	%r304, %r301, %r302, 19;
	mov.b64 	%rd524, {%r304, %r303};
	shf.l.wrap.b32 	%r305, %r301, %r302, 3;
	shf.l.wrap.b32 	%r306, %r302, %r301, 3;
	mov.b64 	%rd525, {%r306, %r305};
	shr.u64 	%rd526, %rd511, 6;
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd527, %rd524;
	shr.u64 	%rd529, %rd2814, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd2814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd2814;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 8;
	shf.r.wrap.b32 	%r310, %r307, %r308, 8;
	mov.b64 	%rd530, {%r310, %r309};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.r.wrap.b32 	%r311, %r308, %r307, 1;
	shf.r.wrap.b32 	%r312, %r307, %r308, 1;
	mov.b64 	%rd532, {%r312, %r311};
	xor.b64  	%rd533, %rd531, %rd532;
	add.s64 	%rd534, %rd533, %rd2815;
	add.s64 	%rd535, %rd534, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd523;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 19;
	shf.r.wrap.b32 	%r316, %r313, %r314, 19;
	mov.b64 	%rd536, {%r316, %r315};
	shf.l.wrap.b32 	%r317, %r313, %r314, 3;
	shf.l.wrap.b32 	%r318, %r314, %r313, 3;
	mov.b64 	%rd537, {%r318, %r317};
	shr.u64 	%rd538, %rd523, 6;
	xor.b64  	%rd539, %rd537, %rd538;
	xor.b64  	%rd540, %rd539, %rd536;
	shr.u64 	%rd541, %rd2813, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd2813;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 8;
	shf.r.wrap.b32 	%r322, %r319, %r320, 8;
	mov.b64 	%rd542, {%r322, %r321};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.r.wrap.b32 	%r323, %r320, %r319, 1;
	shf.r.wrap.b32 	%r324, %r319, %r320, 1;
	mov.b64 	%rd544, {%r324, %r323};
	xor.b64  	%rd545, %rd543, %rd544;
	add.s64 	%rd546, %rd545, %rd2814;
	add.s64 	%rd547, %rd546, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd535;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 19;
	shf.r.wrap.b32 	%r328, %r325, %r326, 19;
	mov.b64 	%rd548, {%r328, %r327};
	shf.l.wrap.b32 	%r329, %r325, %r326, 3;
	shf.l.wrap.b32 	%r330, %r326, %r325, 3;
	mov.b64 	%rd549, {%r330, %r329};
	shr.u64 	%rd550, %rd535, 6;
	xor.b64  	%rd551, %rd549, %rd550;
	xor.b64  	%rd552, %rd551, %rd548;
	shr.u64 	%rd553, %rd2812, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd2812;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 8;
	shf.r.wrap.b32 	%r334, %r331, %r332, 8;
	mov.b64 	%rd554, {%r334, %r333};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.r.wrap.b32 	%r335, %r332, %r331, 1;
	shf.r.wrap.b32 	%r336, %r331, %r332, 1;
	mov.b64 	%rd556, {%r336, %r335};
	xor.b64  	%rd557, %rd555, %rd556;
	add.s64 	%rd558, %rd557, %rd2813;
	add.s64 	%rd559, %rd558, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd547;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 19;
	shf.r.wrap.b32 	%r340, %r337, %r338, 19;
	mov.b64 	%rd560, {%r340, %r339};
	shf.l.wrap.b32 	%r341, %r337, %r338, 3;
	shf.l.wrap.b32 	%r342, %r338, %r337, 3;
	mov.b64 	%rd561, {%r342, %r341};
	shr.u64 	%rd562, %rd547, 6;
	xor.b64  	%rd563, %rd561, %rd562;
	xor.b64  	%rd564, %rd563, %rd560;
	shr.u64 	%rd565, %rd2811, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd2811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd2811;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 8;
	shf.r.wrap.b32 	%r346, %r343, %r344, 8;
	mov.b64 	%rd566, {%r346, %r345};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.r.wrap.b32 	%r347, %r344, %r343, 1;
	shf.r.wrap.b32 	%r348, %r343, %r344, 1;
	mov.b64 	%rd568, {%r348, %r347};
	xor.b64  	%rd569, %rd567, %rd568;
	add.s64 	%rd570, %rd569, %rd2812;
	add.s64 	%rd571, %rd570, %rd564;
	add.s64 	%rd572, %rd571, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd559;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 19;
	shf.r.wrap.b32 	%r352, %r349, %r350, 19;
	mov.b64 	%rd573, {%r352, %r351};
	shf.l.wrap.b32 	%r353, %r349, %r350, 3;
	shf.l.wrap.b32 	%r354, %r350, %r349, 3;
	mov.b64 	%rd574, {%r354, %r353};
	shr.u64 	%rd575, %rd559, 6;
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd576, %rd573;
	add.s64 	%rd578, %rd93, %rd2811;
	add.s64 	%rd579, %rd578, %rd504;
	add.s64 	%rd580, %rd579, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd572;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd581, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd582, {%r360, %r359};
	shr.u64 	%rd583, %rd572, 6;
	xor.b64  	%rd584, %rd582, %rd583;
	xor.b64  	%rd585, %rd584, %rd581;
	add.s64 	%rd586, %rd95, %rd511;
	add.s64 	%rd587, %rd586, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd580;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 19;
	shf.r.wrap.b32 	%r364, %r361, %r362, 19;
	mov.b64 	%rd588, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 3;
	shf.l.wrap.b32 	%r366, %r362, %r361, 3;
	mov.b64 	%rd589, {%r366, %r365};
	shr.u64 	%rd590, %rd580, 6;
	xor.b64  	%rd591, %rd589, %rd590;
	xor.b64  	%rd592, %rd591, %rd588;
	add.s64 	%rd593, %rd94, %rd523;
	add.s64 	%rd594, %rd593, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd587;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd595, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd596, {%r372, %r371};
	shr.u64 	%rd597, %rd587, 6;
	xor.b64  	%rd598, %rd596, %rd597;
	xor.b64  	%rd599, %rd598, %rd595;
	add.s64 	%rd600, %rd94, %rd535;
	add.s64 	%rd601, %rd600, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd594;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 19;
	shf.r.wrap.b32 	%r376, %r373, %r374, 19;
	mov.b64 	%rd602, {%r376, %r375};
	shf.l.wrap.b32 	%r377, %r373, %r374, 3;
	shf.l.wrap.b32 	%r378, %r374, %r373, 3;
	mov.b64 	%rd603, {%r378, %r377};
	shr.u64 	%rd604, %rd594, 6;
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd605, %rd602;
	add.s64 	%rd607, %rd94, %rd547;
	add.s64 	%rd608, %rd607, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd601;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd609, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd610, {%r384, %r383};
	shr.u64 	%rd611, %rd601, 6;
	xor.b64  	%rd612, %rd610, %rd611;
	xor.b64  	%rd613, %rd612, %rd609;
	add.s64 	%rd614, %rd94, %rd559;
	add.s64 	%rd615, %rd614, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd608;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd616, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd617, {%r390, %r389};
	shr.u64 	%rd618, %rd608, 6;
	xor.b64  	%rd619, %rd617, %rd618;
	xor.b64  	%rd620, %rd619, %rd616;
	add.s64 	%rd621, %rd94, %rd572;
	add.s64 	%rd622, %rd621, %rd620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd615;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 19;
	shf.r.wrap.b32 	%r394, %r391, %r392, 19;
	mov.b64 	%rd623, {%r394, %r393};
	shf.l.wrap.b32 	%r395, %r391, %r392, 3;
	shf.l.wrap.b32 	%r396, %r392, %r391, 3;
	mov.b64 	%rd624, {%r396, %r395};
	shr.u64 	%rd625, %rd615, 6;
	xor.b64  	%rd626, %rd624, %rd625;
	xor.b64  	%rd627, %rd626, %rd623;
	add.s64 	%rd628, %rd96, %rd580;
	add.s64 	%rd629, %rd628, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd622;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd630, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd631, {%r402, %r401};
	shr.u64 	%rd632, %rd622, 6;
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd633, %rd630;
	shf.r.wrap.b32 	%r403, %r290, %r289, 1;
	shf.r.wrap.b32 	%r404, %r289, %r290, 1;
	mov.b64 	%rd635, {%r404, %r403};
	shf.r.wrap.b32 	%r405, %r290, %r289, 8;
	shf.r.wrap.b32 	%r406, %r289, %r290, 8;
	mov.b64 	%rd636, {%r406, %r405};
	shr.u64 	%rd637, %rd504, 7;
	xor.b64  	%rd638, %rd636, %rd637;
	xor.b64  	%rd639, %rd638, %rd635;
	add.s64 	%rd640, %rd639, %rd587;
	add.s64 	%rd641, %rd640, %rd634;
	add.s64 	%rd642, %rd641, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd486;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 14;
	shf.r.wrap.b32 	%r410, %r407, %r408, 14;
	mov.b64 	%rd643, {%r410, %r409};
	shf.r.wrap.b32 	%r411, %r408, %r407, 18;
	shf.r.wrap.b32 	%r412, %r407, %r408, 18;
	mov.b64 	%rd644, {%r412, %r411};
	xor.b64  	%rd645, %rd643, %rd644;
	shf.l.wrap.b32 	%r413, %r407, %r408, 23;
	shf.l.wrap.b32 	%r414, %r408, %r407, 23;
	mov.b64 	%rd646, {%r414, %r413};
	xor.b64  	%rd647, %rd645, %rd646;
	xor.b64  	%rd648, %rd463, %rd440;
	and.b64  	%rd649, %rd486, %rd648;
	xor.b64  	%rd650, %rd649, %rd440;
	add.s64 	%rd651, %rd650, %rd417;
	add.s64 	%rd652, %rd651, %rd647;
	add.s64 	%rd653, %rd652, %rd504;
	add.s64 	%rd654, %rd653, %rd27;
	add.s64 	%rd655, %rd654, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd497;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 28;
	shf.r.wrap.b32 	%r418, %r415, %r416, 28;
	mov.b64 	%rd656, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 30;
	shf.l.wrap.b32 	%r420, %r416, %r415, 30;
	mov.b64 	%rd657, {%r420, %r419};
	xor.b64  	%rd658, %rd656, %rd657;
	shf.l.wrap.b32 	%r421, %r415, %r416, 25;
	shf.l.wrap.b32 	%r422, %r416, %r415, 25;
	mov.b64 	%rd659, {%r422, %r421};
	xor.b64  	%rd660, %rd658, %rd659;
	and.b64  	%rd661, %rd497, %rd474;
	xor.b64  	%rd662, %rd497, %rd474;
	and.b64  	%rd663, %rd662, %rd451;
	or.b64  	%rd664, %rd663, %rd661;
	add.s64 	%rd665, %rd660, %rd664;
	add.s64 	%rd666, %rd665, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd655;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 14;
	shf.r.wrap.b32 	%r426, %r423, %r424, 14;
	mov.b64 	%rd667, {%r426, %r425};
	shf.r.wrap.b32 	%r427, %r424, %r423, 18;
	shf.r.wrap.b32 	%r428, %r423, %r424, 18;
	mov.b64 	%rd668, {%r428, %r427};
	xor.b64  	%rd669, %rd667, %rd668;
	shf.l.wrap.b32 	%r429, %r423, %r424, 23;
	shf.l.wrap.b32 	%r430, %r424, %r423, 23;
	mov.b64 	%rd670, {%r430, %r429};
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd486, %rd463;
	and.b64  	%rd673, %rd655, %rd672;
	xor.b64  	%rd674, %rd673, %rd463;
	add.s64 	%rd675, %rd511, %rd440;
	add.s64 	%rd676, %rd675, %rd28;
	add.s64 	%rd677, %rd676, %rd674;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd679, %rd678, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd666;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 28;
	shf.r.wrap.b32 	%r434, %r431, %r432, 28;
	mov.b64 	%rd680, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 30;
	shf.l.wrap.b32 	%r436, %r432, %r431, 30;
	mov.b64 	%rd681, {%r436, %r435};
	xor.b64  	%rd682, %rd680, %rd681;
	shf.l.wrap.b32 	%r437, %r431, %r432, 25;
	shf.l.wrap.b32 	%r438, %r432, %r431, 25;
	mov.b64 	%rd683, {%r438, %r437};
	xor.b64  	%rd684, %rd682, %rd683;
	and.b64  	%rd685, %rd666, %rd497;
	xor.b64  	%rd686, %rd666, %rd497;
	and.b64  	%rd687, %rd686, %rd474;
	or.b64  	%rd688, %rd687, %rd685;
	add.s64 	%rd689, %rd684, %rd688;
	add.s64 	%rd690, %rd689, %rd678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd679;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 14;
	shf.r.wrap.b32 	%r442, %r439, %r440, 14;
	mov.b64 	%rd691, {%r442, %r441};
	shf.r.wrap.b32 	%r443, %r440, %r439, 18;
	shf.r.wrap.b32 	%r444, %r439, %r440, 18;
	mov.b64 	%rd692, {%r444, %r443};
	xor.b64  	%rd693, %rd691, %rd692;
	shf.l.wrap.b32 	%r445, %r439, %r440, 23;
	shf.l.wrap.b32 	%r446, %r440, %r439, 23;
	mov.b64 	%rd694, {%r446, %r445};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd655, %rd486;
	and.b64  	%rd697, %rd679, %rd696;
	xor.b64  	%rd698, %rd697, %rd486;
	add.s64 	%rd699, %rd523, %rd463;
	add.s64 	%rd700, %rd699, %rd29;
	add.s64 	%rd701, %rd700, %rd698;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd703, %rd702, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd690;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 28;
	shf.r.wrap.b32 	%r450, %r447, %r448, 28;
	mov.b64 	%rd704, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 30;
	shf.l.wrap.b32 	%r452, %r448, %r447, 30;
	mov.b64 	%rd705, {%r452, %r451};
	xor.b64  	%rd706, %rd704, %rd705;
	shf.l.wrap.b32 	%r453, %r447, %r448, 25;
	shf.l.wrap.b32 	%r454, %r448, %r447, 25;
	mov.b64 	%rd707, {%r454, %r453};
	xor.b64  	%rd708, %rd706, %rd707;
	and.b64  	%rd709, %rd690, %rd666;
	xor.b64  	%rd710, %rd690, %rd666;
	and.b64  	%rd711, %rd710, %rd497;
	or.b64  	%rd712, %rd711, %rd709;
	add.s64 	%rd713, %rd708, %rd712;
	add.s64 	%rd714, %rd713, %rd702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd703;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 14;
	shf.r.wrap.b32 	%r458, %r455, %r456, 14;
	mov.b64 	%rd715, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r456, %r455, 18;
	shf.r.wrap.b32 	%r460, %r455, %r456, 18;
	mov.b64 	%rd716, {%r460, %r459};
	xor.b64  	%rd717, %rd715, %rd716;
	shf.l.wrap.b32 	%r461, %r455, %r456, 23;
	shf.l.wrap.b32 	%r462, %r456, %r455, 23;
	mov.b64 	%rd718, {%r462, %r461};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd679, %rd655;
	and.b64  	%rd721, %rd703, %rd720;
	xor.b64  	%rd722, %rd721, %rd655;
	add.s64 	%rd723, %rd535, %rd486;
	add.s64 	%rd724, %rd723, %rd30;
	add.s64 	%rd725, %rd724, %rd722;
	add.s64 	%rd726, %rd725, %rd719;
	add.s64 	%rd727, %rd726, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd714;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 28;
	shf.r.wrap.b32 	%r466, %r463, %r464, 28;
	mov.b64 	%rd728, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 30;
	shf.l.wrap.b32 	%r468, %r464, %r463, 30;
	mov.b64 	%rd729, {%r468, %r467};
	xor.b64  	%rd730, %rd728, %rd729;
	shf.l.wrap.b32 	%r469, %r463, %r464, 25;
	shf.l.wrap.b32 	%r470, %r464, %r463, 25;
	mov.b64 	%rd731, {%r470, %r469};
	xor.b64  	%rd732, %rd730, %rd731;
	and.b64  	%rd733, %rd714, %rd690;
	xor.b64  	%rd734, %rd714, %rd690;
	and.b64  	%rd735, %rd734, %rd666;
	or.b64  	%rd736, %rd735, %rd733;
	add.s64 	%rd737, %rd732, %rd736;
	add.s64 	%rd738, %rd737, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd727;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 14;
	shf.r.wrap.b32 	%r474, %r471, %r472, 14;
	mov.b64 	%rd739, {%r474, %r473};
	shf.r.wrap.b32 	%r475, %r472, %r471, 18;
	shf.r.wrap.b32 	%r476, %r471, %r472, 18;
	mov.b64 	%rd740, {%r476, %r475};
	xor.b64  	%rd741, %rd739, %rd740;
	shf.l.wrap.b32 	%r477, %r471, %r472, 23;
	shf.l.wrap.b32 	%r478, %r472, %r471, 23;
	mov.b64 	%rd742, {%r478, %r477};
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd703, %rd679;
	and.b64  	%rd745, %rd727, %rd744;
	xor.b64  	%rd746, %rd745, %rd679;
	add.s64 	%rd747, %rd655, %rd547;
	add.s64 	%rd748, %rd747, %rd31;
	add.s64 	%rd749, %rd748, %rd746;
	add.s64 	%rd750, %rd749, %rd743;
	add.s64 	%rd751, %rd750, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd738;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 28;
	shf.r.wrap.b32 	%r482, %r479, %r480, 28;
	mov.b64 	%rd752, {%r482, %r481};
	shf.l.wrap.b32 	%r483, %r479, %r480, 30;
	shf.l.wrap.b32 	%r484, %r480, %r479, 30;
	mov.b64 	%rd753, {%r484, %r483};
	xor.b64  	%rd754, %rd752, %rd753;
	shf.l.wrap.b32 	%r485, %r479, %r480, 25;
	shf.l.wrap.b32 	%r486, %r480, %r479, 25;
	mov.b64 	%rd755, {%r486, %r485};
	xor.b64  	%rd756, %rd754, %rd755;
	and.b64  	%rd757, %rd738, %rd714;
	xor.b64  	%rd758, %rd738, %rd714;
	and.b64  	%rd759, %rd758, %rd690;
	or.b64  	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd756, %rd760;
	add.s64 	%rd762, %rd761, %rd750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd751;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 14;
	shf.r.wrap.b32 	%r490, %r487, %r488, 14;
	mov.b64 	%rd763, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 18;
	shf.r.wrap.b32 	%r492, %r487, %r488, 18;
	mov.b64 	%rd764, {%r492, %r491};
	xor.b64  	%rd765, %rd763, %rd764;
	shf.l.wrap.b32 	%r493, %r487, %r488, 23;
	shf.l.wrap.b32 	%r494, %r488, %r487, 23;
	mov.b64 	%rd766, {%r494, %r493};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd727, %rd703;
	and.b64  	%rd769, %rd751, %rd768;
	xor.b64  	%rd770, %rd769, %rd703;
	add.s64 	%rd771, %rd32, %rd559;
	add.s64 	%rd772, %rd771, %rd679;
	add.s64 	%rd773, %rd772, %rd770;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd775, %rd774, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd762;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 28;
	shf.r.wrap.b32 	%r498, %r495, %r496, 28;
	mov.b64 	%rd776, {%r498, %r497};
	shf.l.wrap.b32 	%r499, %r495, %r496, 30;
	shf.l.wrap.b32 	%r500, %r496, %r495, 30;
	mov.b64 	%rd777, {%r500, %r499};
	xor.b64  	%rd778, %rd776, %rd777;
	shf.l.wrap.b32 	%r501, %r495, %r496, 25;
	shf.l.wrap.b32 	%r502, %r496, %r495, 25;
	mov.b64 	%rd779, {%r502, %r501};
	xor.b64  	%rd780, %rd778, %rd779;
	and.b64  	%rd781, %rd762, %rd738;
	xor.b64  	%rd782, %rd762, %rd738;
	and.b64  	%rd783, %rd782, %rd714;
	or.b64  	%rd784, %rd783, %rd781;
	add.s64 	%rd785, %rd780, %rd784;
	add.s64 	%rd786, %rd785, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd775;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd787, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd788, {%r508, %r507};
	xor.b64  	%rd789, %rd787, %rd788;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd790, {%r510, %r509};
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd751, %rd727;
	and.b64  	%rd793, %rd775, %rd792;
	xor.b64  	%rd794, %rd793, %rd727;
	add.s64 	%rd795, %rd33, %rd572;
	add.s64 	%rd796, %rd795, %rd703;
	add.s64 	%rd797, %rd796, %rd794;
	add.s64 	%rd798, %rd797, %rd791;
	add.s64 	%rd799, %rd798, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd786;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd800, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd801, {%r516, %r515};
	xor.b64  	%rd802, %rd800, %rd801;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd803, {%r518, %r517};
	xor.b64  	%rd804, %rd802, %rd803;
	and.b64  	%rd805, %rd786, %rd762;
	xor.b64  	%rd806, %rd786, %rd762;
	and.b64  	%rd807, %rd806, %rd738;
	or.b64  	%rd808, %rd807, %rd805;
	add.s64 	%rd809, %rd804, %rd808;
	add.s64 	%rd810, %rd809, %rd798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd799;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 14;
	shf.r.wrap.b32 	%r522, %r519, %r520, 14;
	mov.b64 	%rd811, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 18;
	shf.r.wrap.b32 	%r524, %r519, %r520, 18;
	mov.b64 	%rd812, {%r524, %r523};
	xor.b64  	%rd813, %rd811, %rd812;
	shf.l.wrap.b32 	%r525, %r519, %r520, 23;
	shf.l.wrap.b32 	%r526, %r520, %r519, 23;
	mov.b64 	%rd814, {%r526, %r525};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd775, %rd751;
	and.b64  	%rd817, %rd799, %rd816;
	xor.b64  	%rd818, %rd817, %rd751;
	add.s64 	%rd819, %rd34, %rd580;
	add.s64 	%rd820, %rd819, %rd727;
	add.s64 	%rd821, %rd820, %rd818;
	add.s64 	%rd822, %rd821, %rd815;
	add.s64 	%rd823, %rd822, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd810;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 28;
	shf.r.wrap.b32 	%r530, %r527, %r528, 28;
	mov.b64 	%rd824, {%r530, %r529};
	shf.l.wrap.b32 	%r531, %r527, %r528, 30;
	shf.l.wrap.b32 	%r532, %r528, %r527, 30;
	mov.b64 	%rd825, {%r532, %r531};
	xor.b64  	%rd826, %rd824, %rd825;
	shf.l.wrap.b32 	%r533, %r527, %r528, 25;
	shf.l.wrap.b32 	%r534, %r528, %r527, 25;
	mov.b64 	%rd827, {%r534, %r533};
	xor.b64  	%rd828, %rd826, %rd827;
	and.b64  	%rd829, %rd810, %rd786;
	xor.b64  	%rd830, %rd810, %rd786;
	and.b64  	%rd831, %rd830, %rd762;
	or.b64  	%rd832, %rd831, %rd829;
	add.s64 	%rd833, %rd828, %rd832;
	add.s64 	%rd834, %rd833, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd823;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 14;
	shf.r.wrap.b32 	%r538, %r535, %r536, 14;
	mov.b64 	%rd835, {%r538, %r537};
	shf.r.wrap.b32 	%r539, %r536, %r535, 18;
	shf.r.wrap.b32 	%r540, %r535, %r536, 18;
	mov.b64 	%rd836, {%r540, %r539};
	xor.b64  	%rd837, %rd835, %rd836;
	shf.l.wrap.b32 	%r541, %r535, %r536, 23;
	shf.l.wrap.b32 	%r542, %r536, %r535, 23;
	mov.b64 	%rd838, {%r542, %r541};
	xor.b64  	%rd839, %rd837, %rd838;
	xor.b64  	%rd840, %rd799, %rd775;
	and.b64  	%rd841, %rd823, %rd840;
	xor.b64  	%rd842, %rd841, %rd775;
	add.s64 	%rd843, %rd35, %rd587;
	add.s64 	%rd844, %rd843, %rd751;
	add.s64 	%rd845, %rd844, %rd842;
	add.s64 	%rd846, %rd845, %rd839;
	add.s64 	%rd847, %rd846, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd834;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 28;
	shf.r.wrap.b32 	%r546, %r543, %r544, 28;
	mov.b64 	%rd848, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 30;
	shf.l.wrap.b32 	%r548, %r544, %r543, 30;
	mov.b64 	%rd849, {%r548, %r547};
	xor.b64  	%rd850, %rd848, %rd849;
	shf.l.wrap.b32 	%r549, %r543, %r544, 25;
	shf.l.wrap.b32 	%r550, %r544, %r543, 25;
	mov.b64 	%rd851, {%r550, %r549};
	xor.b64  	%rd852, %rd850, %rd851;
	and.b64  	%rd853, %rd834, %rd810;
	xor.b64  	%rd854, %rd834, %rd810;
	and.b64  	%rd855, %rd854, %rd786;
	or.b64  	%rd856, %rd855, %rd853;
	add.s64 	%rd857, %rd852, %rd856;
	add.s64 	%rd858, %rd857, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd847;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 14;
	shf.r.wrap.b32 	%r554, %r551, %r552, 14;
	mov.b64 	%rd859, {%r554, %r553};
	shf.r.wrap.b32 	%r555, %r552, %r551, 18;
	shf.r.wrap.b32 	%r556, %r551, %r552, 18;
	mov.b64 	%rd860, {%r556, %r555};
	xor.b64  	%rd861, %rd859, %rd860;
	shf.l.wrap.b32 	%r557, %r551, %r552, 23;
	shf.l.wrap.b32 	%r558, %r552, %r551, 23;
	mov.b64 	%rd862, {%r558, %r557};
	xor.b64  	%rd863, %rd861, %rd862;
	xor.b64  	%rd864, %rd823, %rd799;
	and.b64  	%rd865, %rd847, %rd864;
	xor.b64  	%rd866, %rd865, %rd799;
	add.s64 	%rd867, %rd36, %rd594;
	add.s64 	%rd868, %rd867, %rd775;
	add.s64 	%rd869, %rd868, %rd866;
	add.s64 	%rd870, %rd869, %rd863;
	add.s64 	%rd871, %rd870, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd858;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 28;
	shf.r.wrap.b32 	%r562, %r559, %r560, 28;
	mov.b64 	%rd872, {%r562, %r561};
	shf.l.wrap.b32 	%r563, %r559, %r560, 30;
	shf.l.wrap.b32 	%r564, %r560, %r559, 30;
	mov.b64 	%rd873, {%r564, %r563};
	xor.b64  	%rd874, %rd872, %rd873;
	shf.l.wrap.b32 	%r565, %r559, %r560, 25;
	shf.l.wrap.b32 	%r566, %r560, %r559, 25;
	mov.b64 	%rd875, {%r566, %r565};
	xor.b64  	%rd876, %rd874, %rd875;
	and.b64  	%rd877, %rd858, %rd834;
	xor.b64  	%rd878, %rd858, %rd834;
	and.b64  	%rd879, %rd878, %rd810;
	or.b64  	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd876, %rd880;
	add.s64 	%rd882, %rd881, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd871;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 14;
	shf.r.wrap.b32 	%r570, %r567, %r568, 14;
	mov.b64 	%rd883, {%r570, %r569};
	shf.r.wrap.b32 	%r571, %r568, %r567, 18;
	shf.r.wrap.b32 	%r572, %r567, %r568, 18;
	mov.b64 	%rd884, {%r572, %r571};
	xor.b64  	%rd885, %rd883, %rd884;
	shf.l.wrap.b32 	%r573, %r567, %r568, 23;
	shf.l.wrap.b32 	%r574, %r568, %r567, 23;
	mov.b64 	%rd886, {%r574, %r573};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd847, %rd823;
	and.b64  	%rd889, %rd871, %rd888;
	xor.b64  	%rd890, %rd889, %rd823;
	add.s64 	%rd891, %rd37, %rd601;
	add.s64 	%rd892, %rd891, %rd799;
	add.s64 	%rd893, %rd892, %rd890;
	add.s64 	%rd894, %rd893, %rd887;
	add.s64 	%rd895, %rd894, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd882;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 28;
	shf.r.wrap.b32 	%r578, %r575, %r576, 28;
	mov.b64 	%rd896, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 30;
	shf.l.wrap.b32 	%r580, %r576, %r575, 30;
	mov.b64 	%rd897, {%r580, %r579};
	xor.b64  	%rd898, %rd896, %rd897;
	shf.l.wrap.b32 	%r581, %r575, %r576, 25;
	shf.l.wrap.b32 	%r582, %r576, %r575, 25;
	mov.b64 	%rd899, {%r582, %r581};
	xor.b64  	%rd900, %rd898, %rd899;
	and.b64  	%rd901, %rd882, %rd858;
	xor.b64  	%rd902, %rd882, %rd858;
	and.b64  	%rd903, %rd902, %rd834;
	or.b64  	%rd904, %rd903, %rd901;
	add.s64 	%rd905, %rd900, %rd904;
	add.s64 	%rd906, %rd905, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd895;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 14;
	shf.r.wrap.b32 	%r586, %r583, %r584, 14;
	mov.b64 	%rd907, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 18;
	shf.r.wrap.b32 	%r588, %r583, %r584, 18;
	mov.b64 	%rd908, {%r588, %r587};
	xor.b64  	%rd909, %rd907, %rd908;
	shf.l.wrap.b32 	%r589, %r583, %r584, 23;
	shf.l.wrap.b32 	%r590, %r584, %r583, 23;
	mov.b64 	%rd910, {%r590, %r589};
	xor.b64  	%rd911, %rd909, %rd910;
	xor.b64  	%rd912, %rd871, %rd847;
	and.b64  	%rd913, %rd895, %rd912;
	xor.b64  	%rd914, %rd913, %rd847;
	add.s64 	%rd915, %rd38, %rd608;
	add.s64 	%rd916, %rd915, %rd823;
	add.s64 	%rd917, %rd916, %rd914;
	add.s64 	%rd918, %rd917, %rd911;
	add.s64 	%rd919, %rd918, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd906;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 28;
	shf.r.wrap.b32 	%r594, %r591, %r592, 28;
	mov.b64 	%rd920, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 30;
	shf.l.wrap.b32 	%r596, %r592, %r591, 30;
	mov.b64 	%rd921, {%r596, %r595};
	xor.b64  	%rd922, %rd920, %rd921;
	shf.l.wrap.b32 	%r597, %r591, %r592, 25;
	shf.l.wrap.b32 	%r598, %r592, %r591, 25;
	mov.b64 	%rd923, {%r598, %r597};
	xor.b64  	%rd924, %rd922, %rd923;
	and.b64  	%rd925, %rd906, %rd882;
	xor.b64  	%rd926, %rd906, %rd882;
	and.b64  	%rd927, %rd926, %rd858;
	or.b64  	%rd928, %rd927, %rd925;
	add.s64 	%rd929, %rd924, %rd928;
	add.s64 	%rd930, %rd929, %rd918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd919;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 14;
	shf.r.wrap.b32 	%r602, %r599, %r600, 14;
	mov.b64 	%rd931, {%r602, %r601};
	shf.r.wrap.b32 	%r603, %r600, %r599, 18;
	shf.r.wrap.b32 	%r604, %r599, %r600, 18;
	mov.b64 	%rd932, {%r604, %r603};
	xor.b64  	%rd933, %rd931, %rd932;
	shf.l.wrap.b32 	%r605, %r599, %r600, 23;
	shf.l.wrap.b32 	%r606, %r600, %r599, 23;
	mov.b64 	%rd934, {%r606, %r605};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd895, %rd871;
	and.b64  	%rd937, %rd919, %rd936;
	xor.b64  	%rd938, %rd937, %rd871;
	add.s64 	%rd939, %rd39, %rd615;
	add.s64 	%rd940, %rd939, %rd847;
	add.s64 	%rd941, %rd940, %rd938;
	add.s64 	%rd942, %rd941, %rd935;
	add.s64 	%rd943, %rd942, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd930;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 28;
	shf.r.wrap.b32 	%r610, %r607, %r608, 28;
	mov.b64 	%rd944, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 30;
	shf.l.wrap.b32 	%r612, %r608, %r607, 30;
	mov.b64 	%rd945, {%r612, %r611};
	xor.b64  	%rd946, %rd944, %rd945;
	shf.l.wrap.b32 	%r613, %r607, %r608, 25;
	shf.l.wrap.b32 	%r614, %r608, %r607, 25;
	mov.b64 	%rd947, {%r614, %r613};
	xor.b64  	%rd948, %rd946, %rd947;
	and.b64  	%rd949, %rd930, %rd906;
	xor.b64  	%rd950, %rd930, %rd906;
	and.b64  	%rd951, %rd950, %rd882;
	or.b64  	%rd952, %rd951, %rd949;
	add.s64 	%rd953, %rd948, %rd952;
	add.s64 	%rd954, %rd953, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd943;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd955, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd956, {%r620, %r619};
	xor.b64  	%rd957, %rd955, %rd956;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd958, {%r622, %r621};
	xor.b64  	%rd959, %rd957, %rd958;
	xor.b64  	%rd960, %rd919, %rd895;
	and.b64  	%rd961, %rd943, %rd960;
	xor.b64  	%rd962, %rd961, %rd895;
	add.s64 	%rd963, %rd40, %rd622;
	add.s64 	%rd964, %rd963, %rd871;
	add.s64 	%rd965, %rd964, %rd962;
	add.s64 	%rd966, %rd965, %rd959;
	add.s64 	%rd967, %rd966, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd954;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd968, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd969, {%r628, %r627};
	xor.b64  	%rd970, %rd968, %rd969;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd971, {%r630, %r629};
	xor.b64  	%rd972, %rd970, %rd971;
	and.b64  	%rd973, %rd954, %rd930;
	xor.b64  	%rd974, %rd954, %rd930;
	and.b64  	%rd975, %rd974, %rd906;
	or.b64  	%rd976, %rd975, %rd973;
	add.s64 	%rd977, %rd972, %rd976;
	add.s64 	%rd978, %rd977, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd967;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 14;
	shf.r.wrap.b32 	%r634, %r631, %r632, 14;
	mov.b64 	%rd979, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 18;
	shf.r.wrap.b32 	%r636, %r631, %r632, 18;
	mov.b64 	%rd980, {%r636, %r635};
	xor.b64  	%rd981, %rd979, %rd980;
	shf.l.wrap.b32 	%r637, %r631, %r632, 23;
	shf.l.wrap.b32 	%r638, %r632, %r631, 23;
	mov.b64 	%rd982, {%r638, %r637};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd943, %rd919;
	and.b64  	%rd985, %rd967, %rd984;
	xor.b64  	%rd986, %rd985, %rd919;
	add.s64 	%rd987, %rd41, %rd629;
	add.s64 	%rd988, %rd987, %rd895;
	add.s64 	%rd989, %rd988, %rd986;
	add.s64 	%rd990, %rd989, %rd983;
	add.s64 	%rd991, %rd990, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd978;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 28;
	shf.r.wrap.b32 	%r642, %r639, %r640, 28;
	mov.b64 	%rd992, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 30;
	shf.l.wrap.b32 	%r644, %r640, %r639, 30;
	mov.b64 	%rd993, {%r644, %r643};
	xor.b64  	%rd994, %rd992, %rd993;
	shf.l.wrap.b32 	%r645, %r639, %r640, 25;
	shf.l.wrap.b32 	%r646, %r640, %r639, 25;
	mov.b64 	%rd995, {%r646, %r645};
	xor.b64  	%rd996, %rd994, %rd995;
	and.b64  	%rd997, %rd978, %rd954;
	xor.b64  	%rd998, %rd978, %rd954;
	and.b64  	%rd999, %rd998, %rd930;
	or.b64  	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd996, %rd1000;
	add.s64 	%rd1002, %rd1001, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd991;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd1003, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd1004, {%r652, %r651};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd1006, {%r654, %r653};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd967, %rd943;
	and.b64  	%rd1009, %rd991, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd943;
	add.s64 	%rd1011, %rd42, %rd642;
	add.s64 	%rd1012, %rd1011, %rd919;
	add.s64 	%rd1013, %rd1012, %rd1010;
	add.s64 	%rd1014, %rd1013, %rd1007;
	add.s64 	%rd1015, %rd1014, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1002;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd1016, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd1017, {%r660, %r659};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd1019, {%r662, %r661};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	and.b64  	%rd1021, %rd1002, %rd978;
	xor.b64  	%rd1022, %rd1002, %rd978;
	and.b64  	%rd1023, %rd1022, %rd954;
	or.b64  	%rd1024, %rd1023, %rd1021;
	add.s64 	%rd1025, %rd1020, %rd1024;
	add.s64 	%rd1026, %rd1025, %rd1014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd629;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 19;
	shf.r.wrap.b32 	%r666, %r663, %r664, 19;
	mov.b64 	%rd1027, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 3;
	shf.l.wrap.b32 	%r668, %r664, %r663, 3;
	mov.b64 	%rd1028, {%r668, %r667};
	shr.u64 	%rd1029, %rd629, 6;
	xor.b64  	%rd1030, %rd1028, %rd1029;
	xor.b64  	%rd1031, %rd1030, %rd1027;
	shf.r.wrap.b32 	%r669, %r302, %r301, 1;
	shf.r.wrap.b32 	%r670, %r301, %r302, 1;
	mov.b64 	%rd1032, {%r670, %r669};
	shf.r.wrap.b32 	%r671, %r302, %r301, 8;
	shf.r.wrap.b32 	%r672, %r301, %r302, 8;
	mov.b64 	%rd1033, {%r672, %r671};
	shr.u64 	%rd1034, %rd511, 7;
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd1035, %rd1032;
	add.s64 	%rd1037, %rd1036, %rd504;
	add.s64 	%rd1038, %rd1037, %rd594;
	add.s64 	%rd1039, %rd1038, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd642;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 19;
	shf.r.wrap.b32 	%r676, %r673, %r674, 19;
	mov.b64 	%rd1040, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 3;
	shf.l.wrap.b32 	%r678, %r674, %r673, 3;
	mov.b64 	%rd1041, {%r678, %r677};
	shr.u64 	%rd1042, %rd642, 6;
	xor.b64  	%rd1043, %rd1041, %rd1042;
	xor.b64  	%rd1044, %rd1043, %rd1040;
	shf.r.wrap.b32 	%r679, %r314, %r313, 1;
	shf.r.wrap.b32 	%r680, %r313, %r314, 1;
	mov.b64 	%rd1045, {%r680, %r679};
	shf.r.wrap.b32 	%r681, %r314, %r313, 8;
	shf.r.wrap.b32 	%r682, %r313, %r314, 8;
	mov.b64 	%rd1046, {%r682, %r681};
	shr.u64 	%rd1047, %rd523, 7;
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd1045;
	add.s64 	%rd1050, %rd1049, %rd511;
	add.s64 	%rd1051, %rd1050, %rd601;
	add.s64 	%rd1052, %rd1051, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd1039;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 19;
	shf.r.wrap.b32 	%r686, %r683, %r684, 19;
	mov.b64 	%rd1053, {%r686, %r685};
	shf.l.wrap.b32 	%r687, %r683, %r684, 3;
	shf.l.wrap.b32 	%r688, %r684, %r683, 3;
	mov.b64 	%rd1054, {%r688, %r687};
	shr.u64 	%rd1055, %rd1039, 6;
	xor.b64  	%rd1056, %rd1054, %rd1055;
	xor.b64  	%rd1057, %rd1056, %rd1053;
	shf.r.wrap.b32 	%r689, %r326, %r325, 1;
	shf.r.wrap.b32 	%r690, %r325, %r326, 1;
	mov.b64 	%rd1058, {%r690, %r689};
	shf.r.wrap.b32 	%r691, %r326, %r325, 8;
	shf.r.wrap.b32 	%r692, %r325, %r326, 8;
	mov.b64 	%rd1059, {%r692, %r691};
	shr.u64 	%rd1060, %rd535, 7;
	xor.b64  	%rd1061, %rd1059, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1058;
	add.s64 	%rd1063, %rd1062, %rd523;
	add.s64 	%rd1064, %rd1063, %rd608;
	add.s64 	%rd1065, %rd1064, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1052;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 19;
	shf.r.wrap.b32 	%r696, %r693, %r694, 19;
	mov.b64 	%rd1066, {%r696, %r695};
	shf.l.wrap.b32 	%r697, %r693, %r694, 3;
	shf.l.wrap.b32 	%r698, %r694, %r693, 3;
	mov.b64 	%rd1067, {%r698, %r697};
	shr.u64 	%rd1068, %rd1052, 6;
	xor.b64  	%rd1069, %rd1067, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1066;
	shf.r.wrap.b32 	%r699, %r338, %r337, 1;
	shf.r.wrap.b32 	%r700, %r337, %r338, 1;
	mov.b64 	%rd1071, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r338, %r337, 8;
	shf.r.wrap.b32 	%r702, %r337, %r338, 8;
	mov.b64 	%rd1072, {%r702, %r701};
	shr.u64 	%rd1073, %rd547, 7;
	xor.b64  	%rd1074, %rd1072, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1071;
	add.s64 	%rd1076, %rd1075, %rd535;
	add.s64 	%rd1077, %rd1076, %rd615;
	add.s64 	%rd1078, %rd1077, %rd1070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd1065;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 19;
	shf.r.wrap.b32 	%r706, %r703, %r704, 19;
	mov.b64 	%rd1079, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 3;
	shf.l.wrap.b32 	%r708, %r704, %r703, 3;
	mov.b64 	%rd1080, {%r708, %r707};
	shr.u64 	%rd1081, %rd1065, 6;
	xor.b64  	%rd1082, %rd1080, %rd1081;
	xor.b64  	%rd1083, %rd1082, %rd1079;
	shf.r.wrap.b32 	%r709, %r350, %r349, 1;
	shf.r.wrap.b32 	%r710, %r349, %r350, 1;
	mov.b64 	%rd1084, {%r710, %r709};
	shf.r.wrap.b32 	%r711, %r350, %r349, 8;
	shf.r.wrap.b32 	%r712, %r349, %r350, 8;
	mov.b64 	%rd1085, {%r712, %r711};
	shr.u64 	%rd1086, %rd559, 7;
	xor.b64  	%rd1087, %rd1085, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1084;
	add.s64 	%rd1089, %rd1088, %rd547;
	add.s64 	%rd1090, %rd1089, %rd622;
	add.s64 	%rd1091, %rd1090, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd1078;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 19;
	shf.r.wrap.b32 	%r716, %r713, %r714, 19;
	mov.b64 	%rd1092, {%r716, %r715};
	shf.l.wrap.b32 	%r717, %r713, %r714, 3;
	shf.l.wrap.b32 	%r718, %r714, %r713, 3;
	mov.b64 	%rd1093, {%r718, %r717};
	shr.u64 	%rd1094, %rd1078, 6;
	xor.b64  	%rd1095, %rd1093, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1092;
	shf.r.wrap.b32 	%r719, %r356, %r355, 1;
	shf.r.wrap.b32 	%r720, %r355, %r356, 1;
	mov.b64 	%rd1097, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r356, %r355, 8;
	shf.r.wrap.b32 	%r722, %r355, %r356, 8;
	mov.b64 	%rd1098, {%r722, %r721};
	shr.u64 	%rd1099, %rd572, 7;
	xor.b64  	%rd1100, %rd1098, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1097;
	add.s64 	%rd1102, %rd1101, %rd559;
	add.s64 	%rd1103, %rd1102, %rd629;
	add.s64 	%rd1104, %rd1103, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1091;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 19;
	shf.r.wrap.b32 	%r726, %r723, %r724, 19;
	mov.b64 	%rd1105, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 3;
	shf.l.wrap.b32 	%r728, %r724, %r723, 3;
	mov.b64 	%rd1106, {%r728, %r727};
	shr.u64 	%rd1107, %rd1091, 6;
	xor.b64  	%rd1108, %rd1106, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1105;
	shf.r.wrap.b32 	%r729, %r362, %r361, 1;
	shf.r.wrap.b32 	%r730, %r361, %r362, 1;
	mov.b64 	%rd1110, {%r730, %r729};
	shf.r.wrap.b32 	%r731, %r362, %r361, 8;
	shf.r.wrap.b32 	%r732, %r361, %r362, 8;
	mov.b64 	%rd1111, {%r732, %r731};
	shr.u64 	%rd1112, %rd580, 7;
	xor.b64  	%rd1113, %rd1111, %rd1112;
	xor.b64  	%rd1114, %rd1113, %rd1110;
	add.s64 	%rd1115, %rd1114, %rd572;
	add.s64 	%rd1116, %rd1115, %rd642;
	add.s64 	%rd1117, %rd1116, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd1104;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 19;
	shf.r.wrap.b32 	%r736, %r733, %r734, 19;
	mov.b64 	%rd1118, {%r736, %r735};
	shf.l.wrap.b32 	%r737, %r733, %r734, 3;
	shf.l.wrap.b32 	%r738, %r734, %r733, 3;
	mov.b64 	%rd1119, {%r738, %r737};
	shr.u64 	%rd1120, %rd1104, 6;
	xor.b64  	%rd1121, %rd1119, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1118;
	shf.r.wrap.b32 	%r739, %r368, %r367, 1;
	shf.r.wrap.b32 	%r740, %r367, %r368, 1;
	mov.b64 	%rd1123, {%r740, %r739};
	shf.r.wrap.b32 	%r741, %r368, %r367, 8;
	shf.r.wrap.b32 	%r742, %r367, %r368, 8;
	mov.b64 	%rd1124, {%r742, %r741};
	shr.u64 	%rd1125, %rd587, 7;
	xor.b64  	%rd1126, %rd1124, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1123;
	add.s64 	%rd1128, %rd1127, %rd580;
	add.s64 	%rd1129, %rd1128, %rd1039;
	add.s64 	%rd1130, %rd1129, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd1117;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 19;
	shf.r.wrap.b32 	%r746, %r743, %r744, 19;
	mov.b64 	%rd1131, {%r746, %r745};
	shf.l.wrap.b32 	%r747, %r743, %r744, 3;
	shf.l.wrap.b32 	%r748, %r744, %r743, 3;
	mov.b64 	%rd1132, {%r748, %r747};
	shr.u64 	%rd1133, %rd1117, 6;
	xor.b64  	%rd1134, %rd1132, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1131;
	shf.r.wrap.b32 	%r749, %r374, %r373, 1;
	shf.r.wrap.b32 	%r750, %r373, %r374, 1;
	mov.b64 	%rd1136, {%r750, %r749};
	shf.r.wrap.b32 	%r751, %r374, %r373, 8;
	shf.r.wrap.b32 	%r752, %r373, %r374, 8;
	mov.b64 	%rd1137, {%r752, %r751};
	shr.u64 	%rd1138, %rd594, 7;
	xor.b64  	%rd1139, %rd1137, %rd1138;
	xor.b64  	%rd1140, %rd1139, %rd1136;
	add.s64 	%rd1141, %rd1140, %rd587;
	add.s64 	%rd1142, %rd1141, %rd1052;
	add.s64 	%rd1143, %rd1142, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1130;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 19;
	shf.r.wrap.b32 	%r756, %r753, %r754, 19;
	mov.b64 	%rd1144, {%r756, %r755};
	shf.l.wrap.b32 	%r757, %r753, %r754, 3;
	shf.l.wrap.b32 	%r758, %r754, %r753, 3;
	mov.b64 	%rd1145, {%r758, %r757};
	shr.u64 	%rd1146, %rd1130, 6;
	xor.b64  	%rd1147, %rd1145, %rd1146;
	xor.b64  	%rd1148, %rd1147, %rd1144;
	shf.r.wrap.b32 	%r759, %r380, %r379, 1;
	shf.r.wrap.b32 	%r760, %r379, %r380, 1;
	mov.b64 	%rd1149, {%r760, %r759};
	shf.r.wrap.b32 	%r761, %r380, %r379, 8;
	shf.r.wrap.b32 	%r762, %r379, %r380, 8;
	mov.b64 	%rd1150, {%r762, %r761};
	shr.u64 	%rd1151, %rd601, 7;
	xor.b64  	%rd1152, %rd1150, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1149;
	add.s64 	%rd1154, %rd1153, %rd594;
	add.s64 	%rd1155, %rd1154, %rd1065;
	add.s64 	%rd1156, %rd1155, %rd1148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd1143;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 19;
	shf.r.wrap.b32 	%r766, %r763, %r764, 19;
	mov.b64 	%rd1157, {%r766, %r765};
	shf.l.wrap.b32 	%r767, %r763, %r764, 3;
	shf.l.wrap.b32 	%r768, %r764, %r763, 3;
	mov.b64 	%rd1158, {%r768, %r767};
	shr.u64 	%rd1159, %rd1143, 6;
	xor.b64  	%rd1160, %rd1158, %rd1159;
	xor.b64  	%rd1161, %rd1160, %rd1157;
	shf.r.wrap.b32 	%r769, %r386, %r385, 1;
	shf.r.wrap.b32 	%r770, %r385, %r386, 1;
	mov.b64 	%rd1162, {%r770, %r769};
	shf.r.wrap.b32 	%r771, %r386, %r385, 8;
	shf.r.wrap.b32 	%r772, %r385, %r386, 8;
	mov.b64 	%rd1163, {%r772, %r771};
	shr.u64 	%rd1164, %rd608, 7;
	xor.b64  	%rd1165, %rd1163, %rd1164;
	xor.b64  	%rd1166, %rd1165, %rd1162;
	add.s64 	%rd1167, %rd1166, %rd601;
	add.s64 	%rd1168, %rd1167, %rd1078;
	add.s64 	%rd1169, %rd1168, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1156;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 19;
	shf.r.wrap.b32 	%r776, %r773, %r774, 19;
	mov.b64 	%rd1170, {%r776, %r775};
	shf.l.wrap.b32 	%r777, %r773, %r774, 3;
	shf.l.wrap.b32 	%r778, %r774, %r773, 3;
	mov.b64 	%rd1171, {%r778, %r777};
	shr.u64 	%rd1172, %rd1156, 6;
	xor.b64  	%rd1173, %rd1171, %rd1172;
	xor.b64  	%rd1174, %rd1173, %rd1170;
	shf.r.wrap.b32 	%r779, %r392, %r391, 1;
	shf.r.wrap.b32 	%r780, %r391, %r392, 1;
	mov.b64 	%rd1175, {%r780, %r779};
	shf.r.wrap.b32 	%r781, %r392, %r391, 8;
	shf.r.wrap.b32 	%r782, %r391, %r392, 8;
	mov.b64 	%rd1176, {%r782, %r781};
	shr.u64 	%rd1177, %rd615, 7;
	xor.b64  	%rd1178, %rd1176, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1175;
	add.s64 	%rd1180, %rd1179, %rd608;
	add.s64 	%rd1181, %rd1180, %rd1091;
	add.s64 	%rd1182, %rd1181, %rd1174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd1169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd1169;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 19;
	shf.r.wrap.b32 	%r786, %r783, %r784, 19;
	mov.b64 	%rd1183, {%r786, %r785};
	shf.l.wrap.b32 	%r787, %r783, %r784, 3;
	shf.l.wrap.b32 	%r788, %r784, %r783, 3;
	mov.b64 	%rd1184, {%r788, %r787};
	shr.u64 	%rd1185, %rd1169, 6;
	xor.b64  	%rd1186, %rd1184, %rd1185;
	xor.b64  	%rd1187, %rd1186, %rd1183;
	shf.r.wrap.b32 	%r789, %r398, %r397, 1;
	shf.r.wrap.b32 	%r790, %r397, %r398, 1;
	mov.b64 	%rd1188, {%r790, %r789};
	shf.r.wrap.b32 	%r791, %r398, %r397, 8;
	shf.r.wrap.b32 	%r792, %r397, %r398, 8;
	mov.b64 	%rd1189, {%r792, %r791};
	shr.u64 	%rd1190, %rd622, 7;
	xor.b64  	%rd1191, %rd1189, %rd1190;
	xor.b64  	%rd1192, %rd1191, %rd1188;
	add.s64 	%rd1193, %rd1192, %rd615;
	add.s64 	%rd1194, %rd1193, %rd1104;
	add.s64 	%rd1195, %rd1194, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd1182;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 19;
	shf.r.wrap.b32 	%r796, %r793, %r794, 19;
	mov.b64 	%rd1196, {%r796, %r795};
	shf.l.wrap.b32 	%r797, %r793, %r794, 3;
	shf.l.wrap.b32 	%r798, %r794, %r793, 3;
	mov.b64 	%rd1197, {%r798, %r797};
	shr.u64 	%rd1198, %rd1182, 6;
	xor.b64  	%rd1199, %rd1197, %rd1198;
	xor.b64  	%rd1200, %rd1199, %rd1196;
	shf.r.wrap.b32 	%r799, %r664, %r663, 1;
	shf.r.wrap.b32 	%r800, %r663, %r664, 1;
	mov.b64 	%rd1201, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r664, %r663, 8;
	shf.r.wrap.b32 	%r802, %r663, %r664, 8;
	mov.b64 	%rd1202, {%r802, %r801};
	shr.u64 	%rd1203, %rd629, 7;
	xor.b64  	%rd1204, %rd1202, %rd1203;
	xor.b64  	%rd1205, %rd1204, %rd1201;
	add.s64 	%rd1206, %rd1205, %rd622;
	add.s64 	%rd1207, %rd1206, %rd1117;
	add.s64 	%rd1208, %rd1207, %rd1200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd1195;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 19;
	shf.r.wrap.b32 	%r806, %r803, %r804, 19;
	mov.b64 	%rd1209, {%r806, %r805};
	shf.l.wrap.b32 	%r807, %r803, %r804, 3;
	shf.l.wrap.b32 	%r808, %r804, %r803, 3;
	mov.b64 	%rd1210, {%r808, %r807};
	shr.u64 	%rd1211, %rd1195, 6;
	xor.b64  	%rd1212, %rd1210, %rd1211;
	xor.b64  	%rd1213, %rd1212, %rd1209;
	shf.r.wrap.b32 	%r809, %r674, %r673, 1;
	shf.r.wrap.b32 	%r810, %r673, %r674, 1;
	mov.b64 	%rd1214, {%r810, %r809};
	shf.r.wrap.b32 	%r811, %r674, %r673, 8;
	shf.r.wrap.b32 	%r812, %r673, %r674, 8;
	mov.b64 	%rd1215, {%r812, %r811};
	shr.u64 	%rd1216, %rd642, 7;
	xor.b64  	%rd1217, %rd1215, %rd1216;
	xor.b64  	%rd1218, %rd1217, %rd1214;
	add.s64 	%rd1219, %rd1218, %rd629;
	add.s64 	%rd1220, %rd1219, %rd1130;
	add.s64 	%rd1221, %rd1220, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd1208;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 19;
	shf.r.wrap.b32 	%r816, %r813, %r814, 19;
	mov.b64 	%rd1222, {%r816, %r815};
	shf.l.wrap.b32 	%r817, %r813, %r814, 3;
	shf.l.wrap.b32 	%r818, %r814, %r813, 3;
	mov.b64 	%rd1223, {%r818, %r817};
	shr.u64 	%rd1224, %rd1208, 6;
	xor.b64  	%rd1225, %rd1223, %rd1224;
	xor.b64  	%rd1226, %rd1225, %rd1222;
	shf.r.wrap.b32 	%r819, %r684, %r683, 1;
	shf.r.wrap.b32 	%r820, %r683, %r684, 1;
	mov.b64 	%rd1227, {%r820, %r819};
	shf.r.wrap.b32 	%r821, %r684, %r683, 8;
	shf.r.wrap.b32 	%r822, %r683, %r684, 8;
	mov.b64 	%rd1228, {%r822, %r821};
	shr.u64 	%rd1229, %rd1039, 7;
	xor.b64  	%rd1230, %rd1228, %rd1229;
	xor.b64  	%rd1231, %rd1230, %rd1227;
	add.s64 	%rd1232, %rd1231, %rd642;
	add.s64 	%rd1233, %rd1232, %rd1143;
	add.s64 	%rd1234, %rd1233, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r823,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd1015;
	}
	shf.r.wrap.b32 	%r825, %r824, %r823, 14;
	shf.r.wrap.b32 	%r826, %r823, %r824, 14;
	mov.b64 	%rd1235, {%r826, %r825};
	shf.r.wrap.b32 	%r827, %r824, %r823, 18;
	shf.r.wrap.b32 	%r828, %r823, %r824, 18;
	mov.b64 	%rd1236, {%r828, %r827};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	shf.l.wrap.b32 	%r829, %r823, %r824, 23;
	shf.l.wrap.b32 	%r830, %r824, %r823, 23;
	mov.b64 	%rd1238, {%r830, %r829};
	xor.b64  	%rd1239, %rd1237, %rd1238;
	xor.b64  	%rd1240, %rd991, %rd967;
	and.b64  	%rd1241, %rd1015, %rd1240;
	xor.b64  	%rd1242, %rd1241, %rd967;
	add.s64 	%rd1243, %rd1242, %rd943;
	add.s64 	%rd1244, %rd1243, %rd1239;
	add.s64 	%rd1245, %rd1244, %rd1039;
	add.s64 	%rd1246, %rd1245, %rd43;
	add.s64 	%rd1247, %rd1246, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd1026;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 28;
	shf.r.wrap.b32 	%r834, %r831, %r832, 28;
	mov.b64 	%rd1248, {%r834, %r833};
	shf.l.wrap.b32 	%r835, %r831, %r832, 30;
	shf.l.wrap.b32 	%r836, %r832, %r831, 30;
	mov.b64 	%rd1249, {%r836, %r835};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	shf.l.wrap.b32 	%r837, %r831, %r832, 25;
	shf.l.wrap.b32 	%r838, %r832, %r831, 25;
	mov.b64 	%rd1251, {%r838, %r837};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	and.b64  	%rd1253, %rd1026, %rd1002;
	xor.b64  	%rd1254, %rd1026, %rd1002;
	and.b64  	%rd1255, %rd1254, %rd978;
	or.b64  	%rd1256, %rd1255, %rd1253;
	add.s64 	%rd1257, %rd1252, %rd1256;
	add.s64 	%rd1258, %rd1257, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd1247;
	}
	shf.r.wrap.b32 	%r841, %r840, %r839, 14;
	shf.r.wrap.b32 	%r842, %r839, %r840, 14;
	mov.b64 	%rd1259, {%r842, %r841};
	shf.r.wrap.b32 	%r843, %r840, %r839, 18;
	shf.r.wrap.b32 	%r844, %r839, %r840, 18;
	mov.b64 	%rd1260, {%r844, %r843};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shf.l.wrap.b32 	%r845, %r839, %r840, 23;
	shf.l.wrap.b32 	%r846, %r840, %r839, 23;
	mov.b64 	%rd1262, {%r846, %r845};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	xor.b64  	%rd1264, %rd1015, %rd991;
	and.b64  	%rd1265, %rd1247, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd991;
	add.s64 	%rd1267, %rd1052, %rd967;
	add.s64 	%rd1268, %rd1267, %rd44;
	add.s64 	%rd1269, %rd1268, %rd1266;
	add.s64 	%rd1270, %rd1269, %rd1263;
	add.s64 	%rd1271, %rd1270, %rd978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd1258;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 28;
	shf.r.wrap.b32 	%r850, %r847, %r848, 28;
	mov.b64 	%rd1272, {%r850, %r849};
	shf.l.wrap.b32 	%r851, %r847, %r848, 30;
	shf.l.wrap.b32 	%r852, %r848, %r847, 30;
	mov.b64 	%rd1273, {%r852, %r851};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	shf.l.wrap.b32 	%r853, %r847, %r848, 25;
	shf.l.wrap.b32 	%r854, %r848, %r847, 25;
	mov.b64 	%rd1275, {%r854, %r853};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	and.b64  	%rd1277, %rd1258, %rd1026;
	xor.b64  	%rd1278, %rd1258, %rd1026;
	and.b64  	%rd1279, %rd1278, %rd1002;
	or.b64  	%rd1280, %rd1279, %rd1277;
	add.s64 	%rd1281, %rd1276, %rd1280;
	add.s64 	%rd1282, %rd1281, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd1271;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 14;
	shf.r.wrap.b32 	%r858, %r855, %r856, 14;
	mov.b64 	%rd1283, {%r858, %r857};
	shf.r.wrap.b32 	%r859, %r856, %r855, 18;
	shf.r.wrap.b32 	%r860, %r855, %r856, 18;
	mov.b64 	%rd1284, {%r860, %r859};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	shf.l.wrap.b32 	%r861, %r855, %r856, 23;
	shf.l.wrap.b32 	%r862, %r856, %r855, 23;
	mov.b64 	%rd1286, {%r862, %r861};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	xor.b64  	%rd1288, %rd1247, %rd1015;
	and.b64  	%rd1289, %rd1271, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1015;
	add.s64 	%rd1291, %rd1065, %rd991;
	add.s64 	%rd1292, %rd1291, %rd45;
	add.s64 	%rd1293, %rd1292, %rd1290;
	add.s64 	%rd1294, %rd1293, %rd1287;
	add.s64 	%rd1295, %rd1294, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1282;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 28;
	shf.r.wrap.b32 	%r866, %r863, %r864, 28;
	mov.b64 	%rd1296, {%r866, %r865};
	shf.l.wrap.b32 	%r867, %r863, %r864, 30;
	shf.l.wrap.b32 	%r868, %r864, %r863, 30;
	mov.b64 	%rd1297, {%r868, %r867};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r869, %r863, %r864, 25;
	shf.l.wrap.b32 	%r870, %r864, %r863, 25;
	mov.b64 	%rd1299, {%r870, %r869};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	and.b64  	%rd1301, %rd1282, %rd1258;
	xor.b64  	%rd1302, %rd1282, %rd1258;
	and.b64  	%rd1303, %rd1302, %rd1026;
	or.b64  	%rd1304, %rd1303, %rd1301;
	add.s64 	%rd1305, %rd1300, %rd1304;
	add.s64 	%rd1306, %rd1305, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1295;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 14;
	shf.r.wrap.b32 	%r874, %r871, %r872, 14;
	mov.b64 	%rd1307, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r872, %r871, 18;
	shf.r.wrap.b32 	%r876, %r871, %r872, 18;
	mov.b64 	%rd1308, {%r876, %r875};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	shf.l.wrap.b32 	%r877, %r871, %r872, 23;
	shf.l.wrap.b32 	%r878, %r872, %r871, 23;
	mov.b64 	%rd1310, {%r878, %r877};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1271, %rd1247;
	and.b64  	%rd1313, %rd1295, %rd1312;
	xor.b64  	%rd1314, %rd1313, %rd1247;
	add.s64 	%rd1315, %rd1078, %rd1015;
	add.s64 	%rd1316, %rd1315, %rd46;
	add.s64 	%rd1317, %rd1316, %rd1314;
	add.s64 	%rd1318, %rd1317, %rd1311;
	add.s64 	%rd1319, %rd1318, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1306;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 28;
	shf.r.wrap.b32 	%r882, %r879, %r880, 28;
	mov.b64 	%rd1320, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 30;
	shf.l.wrap.b32 	%r884, %r880, %r879, 30;
	mov.b64 	%rd1321, {%r884, %r883};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	shf.l.wrap.b32 	%r885, %r879, %r880, 25;
	shf.l.wrap.b32 	%r886, %r880, %r879, 25;
	mov.b64 	%rd1323, {%r886, %r885};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	and.b64  	%rd1325, %rd1306, %rd1282;
	xor.b64  	%rd1326, %rd1306, %rd1282;
	and.b64  	%rd1327, %rd1326, %rd1258;
	or.b64  	%rd1328, %rd1327, %rd1325;
	add.s64 	%rd1329, %rd1324, %rd1328;
	add.s64 	%rd1330, %rd1329, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1319;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 14;
	shf.r.wrap.b32 	%r890, %r887, %r888, 14;
	mov.b64 	%rd1331, {%r890, %r889};
	shf.r.wrap.b32 	%r891, %r888, %r887, 18;
	shf.r.wrap.b32 	%r892, %r887, %r888, 18;
	mov.b64 	%rd1332, {%r892, %r891};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	shf.l.wrap.b32 	%r893, %r887, %r888, 23;
	shf.l.wrap.b32 	%r894, %r888, %r887, 23;
	mov.b64 	%rd1334, {%r894, %r893};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	xor.b64  	%rd1336, %rd1295, %rd1271;
	and.b64  	%rd1337, %rd1319, %rd1336;
	xor.b64  	%rd1338, %rd1337, %rd1271;
	add.s64 	%rd1339, %rd1247, %rd1091;
	add.s64 	%rd1340, %rd1339, %rd47;
	add.s64 	%rd1341, %rd1340, %rd1338;
	add.s64 	%rd1342, %rd1341, %rd1335;
	add.s64 	%rd1343, %rd1342, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1330;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 28;
	shf.r.wrap.b32 	%r898, %r895, %r896, 28;
	mov.b64 	%rd1344, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 30;
	shf.l.wrap.b32 	%r900, %r896, %r895, 30;
	mov.b64 	%rd1345, {%r900, %r899};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	shf.l.wrap.b32 	%r901, %r895, %r896, 25;
	shf.l.wrap.b32 	%r902, %r896, %r895, 25;
	mov.b64 	%rd1347, {%r902, %r901};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	and.b64  	%rd1349, %rd1330, %rd1306;
	xor.b64  	%rd1350, %rd1330, %rd1306;
	and.b64  	%rd1351, %rd1350, %rd1282;
	or.b64  	%rd1352, %rd1351, %rd1349;
	add.s64 	%rd1353, %rd1348, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1343;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 14;
	shf.r.wrap.b32 	%r906, %r903, %r904, 14;
	mov.b64 	%rd1355, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 18;
	shf.r.wrap.b32 	%r908, %r903, %r904, 18;
	mov.b64 	%rd1356, {%r908, %r907};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	shf.l.wrap.b32 	%r909, %r903, %r904, 23;
	shf.l.wrap.b32 	%r910, %r904, %r903, 23;
	mov.b64 	%rd1358, {%r910, %r909};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1319, %rd1295;
	and.b64  	%rd1361, %rd1343, %rd1360;
	xor.b64  	%rd1362, %rd1361, %rd1295;
	add.s64 	%rd1363, %rd48, %rd1104;
	add.s64 	%rd1364, %rd1363, %rd1271;
	add.s64 	%rd1365, %rd1364, %rd1362;
	add.s64 	%rd1366, %rd1365, %rd1359;
	add.s64 	%rd1367, %rd1366, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1354;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 28;
	shf.r.wrap.b32 	%r914, %r911, %r912, 28;
	mov.b64 	%rd1368, {%r914, %r913};
	shf.l.wrap.b32 	%r915, %r911, %r912, 30;
	shf.l.wrap.b32 	%r916, %r912, %r911, 30;
	mov.b64 	%rd1369, {%r916, %r915};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	shf.l.wrap.b32 	%r917, %r911, %r912, 25;
	shf.l.wrap.b32 	%r918, %r912, %r911, 25;
	mov.b64 	%rd1371, {%r918, %r917};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	and.b64  	%rd1373, %rd1354, %rd1330;
	xor.b64  	%rd1374, %rd1354, %rd1330;
	and.b64  	%rd1375, %rd1374, %rd1306;
	or.b64  	%rd1376, %rd1375, %rd1373;
	add.s64 	%rd1377, %rd1372, %rd1376;
	add.s64 	%rd1378, %rd1377, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1367;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 14;
	shf.r.wrap.b32 	%r922, %r919, %r920, 14;
	mov.b64 	%rd1379, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 18;
	shf.r.wrap.b32 	%r924, %r919, %r920, 18;
	mov.b64 	%rd1380, {%r924, %r923};
	xor.b64  	%rd1381, %rd1379, %rd1380;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd1382, {%r926, %r925};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1343, %rd1319;
	and.b64  	%rd1385, %rd1367, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1319;
	add.s64 	%rd1387, %rd49, %rd1117;
	add.s64 	%rd1388, %rd1387, %rd1295;
	add.s64 	%rd1389, %rd1388, %rd1386;
	add.s64 	%rd1390, %rd1389, %rd1383;
	add.s64 	%rd1391, %rd1390, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1378;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 28;
	shf.r.wrap.b32 	%r930, %r927, %r928, 28;
	mov.b64 	%rd1392, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 30;
	shf.l.wrap.b32 	%r932, %r928, %r927, 30;
	mov.b64 	%rd1393, {%r932, %r931};
	xor.b64  	%rd1394, %rd1392, %rd1393;
	shf.l.wrap.b32 	%r933, %r927, %r928, 25;
	shf.l.wrap.b32 	%r934, %r928, %r927, 25;
	mov.b64 	%rd1395, {%r934, %r933};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	and.b64  	%rd1397, %rd1378, %rd1354;
	xor.b64  	%rd1398, %rd1378, %rd1354;
	and.b64  	%rd1399, %rd1398, %rd1330;
	or.b64  	%rd1400, %rd1399, %rd1397;
	add.s64 	%rd1401, %rd1396, %rd1400;
	add.s64 	%rd1402, %rd1401, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1391;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 14;
	shf.r.wrap.b32 	%r938, %r935, %r936, 14;
	mov.b64 	%rd1403, {%r938, %r937};
	shf.r.wrap.b32 	%r939, %r936, %r935, 18;
	shf.r.wrap.b32 	%r940, %r935, %r936, 18;
	mov.b64 	%rd1404, {%r940, %r939};
	xor.b64  	%rd1405, %rd1403, %rd1404;
	shf.l.wrap.b32 	%r941, %r935, %r936, 23;
	shf.l.wrap.b32 	%r942, %r936, %r935, 23;
	mov.b64 	%rd1406, {%r942, %r941};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1367, %rd1343;
	and.b64  	%rd1409, %rd1391, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1343;
	add.s64 	%rd1411, %rd50, %rd1130;
	add.s64 	%rd1412, %rd1411, %rd1319;
	add.s64 	%rd1413, %rd1412, %rd1410;
	add.s64 	%rd1414, %rd1413, %rd1407;
	add.s64 	%rd1415, %rd1414, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd1402;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 28;
	shf.r.wrap.b32 	%r946, %r943, %r944, 28;
	mov.b64 	%rd1416, {%r946, %r945};
	shf.l.wrap.b32 	%r947, %r943, %r944, 30;
	shf.l.wrap.b32 	%r948, %r944, %r943, 30;
	mov.b64 	%rd1417, {%r948, %r947};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	shf.l.wrap.b32 	%r949, %r943, %r944, 25;
	shf.l.wrap.b32 	%r950, %r944, %r943, 25;
	mov.b64 	%rd1419, {%r950, %r949};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	and.b64  	%rd1421, %rd1402, %rd1378;
	xor.b64  	%rd1422, %rd1402, %rd1378;
	and.b64  	%rd1423, %rd1422, %rd1354;
	or.b64  	%rd1424, %rd1423, %rd1421;
	add.s64 	%rd1425, %rd1420, %rd1424;
	add.s64 	%rd1426, %rd1425, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd1415;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 14;
	shf.r.wrap.b32 	%r954, %r951, %r952, 14;
	mov.b64 	%rd1427, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r952, %r951, 18;
	shf.r.wrap.b32 	%r956, %r951, %r952, 18;
	mov.b64 	%rd1428, {%r956, %r955};
	xor.b64  	%rd1429, %rd1427, %rd1428;
	shf.l.wrap.b32 	%r957, %r951, %r952, 23;
	shf.l.wrap.b32 	%r958, %r952, %r951, 23;
	mov.b64 	%rd1430, {%r958, %r957};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1391, %rd1367;
	and.b64  	%rd1433, %rd1415, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1367;
	add.s64 	%rd1435, %rd51, %rd1143;
	add.s64 	%rd1436, %rd1435, %rd1343;
	add.s64 	%rd1437, %rd1436, %rd1434;
	add.s64 	%rd1438, %rd1437, %rd1431;
	add.s64 	%rd1439, %rd1438, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1426;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 28;
	shf.r.wrap.b32 	%r962, %r959, %r960, 28;
	mov.b64 	%rd1440, {%r962, %r961};
	shf.l.wrap.b32 	%r963, %r959, %r960, 30;
	shf.l.wrap.b32 	%r964, %r960, %r959, 30;
	mov.b64 	%rd1441, {%r964, %r963};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	shf.l.wrap.b32 	%r965, %r959, %r960, 25;
	shf.l.wrap.b32 	%r966, %r960, %r959, 25;
	mov.b64 	%rd1443, {%r966, %r965};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	and.b64  	%rd1445, %rd1426, %rd1402;
	xor.b64  	%rd1446, %rd1426, %rd1402;
	and.b64  	%rd1447, %rd1446, %rd1378;
	or.b64  	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd1444, %rd1448;
	add.s64 	%rd1450, %rd1449, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1439;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 14;
	shf.r.wrap.b32 	%r970, %r967, %r968, 14;
	mov.b64 	%rd1451, {%r970, %r969};
	shf.r.wrap.b32 	%r971, %r968, %r967, 18;
	shf.r.wrap.b32 	%r972, %r967, %r968, 18;
	mov.b64 	%rd1452, {%r972, %r971};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	shf.l.wrap.b32 	%r973, %r967, %r968, 23;
	shf.l.wrap.b32 	%r974, %r968, %r967, 23;
	mov.b64 	%rd1454, {%r974, %r973};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1415, %rd1391;
	and.b64  	%rd1457, %rd1439, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd1391;
	add.s64 	%rd1459, %rd52, %rd1156;
	add.s64 	%rd1460, %rd1459, %rd1367;
	add.s64 	%rd1461, %rd1460, %rd1458;
	add.s64 	%rd1462, %rd1461, %rd1455;
	add.s64 	%rd1463, %rd1462, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1450;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 28;
	shf.r.wrap.b32 	%r978, %r975, %r976, 28;
	mov.b64 	%rd1464, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 30;
	shf.l.wrap.b32 	%r980, %r976, %r975, 30;
	mov.b64 	%rd1465, {%r980, %r979};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	shf.l.wrap.b32 	%r981, %r975, %r976, 25;
	shf.l.wrap.b32 	%r982, %r976, %r975, 25;
	mov.b64 	%rd1467, {%r982, %r981};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	and.b64  	%rd1469, %rd1450, %rd1426;
	xor.b64  	%rd1470, %rd1450, %rd1426;
	and.b64  	%rd1471, %rd1470, %rd1402;
	or.b64  	%rd1472, %rd1471, %rd1469;
	add.s64 	%rd1473, %rd1468, %rd1472;
	add.s64 	%rd1474, %rd1473, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1463;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1475, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1476, {%r988, %r987};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1478, {%r990, %r989};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	xor.b64  	%rd1480, %rd1439, %rd1415;
	and.b64  	%rd1481, %rd1463, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1415;
	add.s64 	%rd1483, %rd53, %rd1169;
	add.s64 	%rd1484, %rd1483, %rd1391;
	add.s64 	%rd1485, %rd1484, %rd1482;
	add.s64 	%rd1486, %rd1485, %rd1479;
	add.s64 	%rd1487, %rd1486, %rd1402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1474;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1488, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1489, {%r996, %r995};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1491, {%r998, %r997};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	and.b64  	%rd1493, %rd1474, %rd1450;
	xor.b64  	%rd1494, %rd1474, %rd1450;
	and.b64  	%rd1495, %rd1494, %rd1426;
	or.b64  	%rd1496, %rd1495, %rd1493;
	add.s64 	%rd1497, %rd1492, %rd1496;
	add.s64 	%rd1498, %rd1497, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1487;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 14;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 14;
	mov.b64 	%rd1499, {%r1002, %r1001};
	shf.r.wrap.b32 	%r1003, %r1000, %r999, 18;
	shf.r.wrap.b32 	%r1004, %r999, %r1000, 18;
	mov.b64 	%rd1500, {%r1004, %r1003};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 23;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 23;
	mov.b64 	%rd1502, {%r1006, %r1005};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1463, %rd1439;
	and.b64  	%rd1505, %rd1487, %rd1504;
	xor.b64  	%rd1506, %rd1505, %rd1439;
	add.s64 	%rd1507, %rd54, %rd1182;
	add.s64 	%rd1508, %rd1507, %rd1415;
	add.s64 	%rd1509, %rd1508, %rd1506;
	add.s64 	%rd1510, %rd1509, %rd1503;
	add.s64 	%rd1511, %rd1510, %rd1426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1498;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 28;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 28;
	mov.b64 	%rd1512, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 30;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 30;
	mov.b64 	%rd1513, {%r1012, %r1011};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 25;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 25;
	mov.b64 	%rd1515, {%r1014, %r1013};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	and.b64  	%rd1517, %rd1498, %rd1474;
	xor.b64  	%rd1518, %rd1498, %rd1474;
	and.b64  	%rd1519, %rd1518, %rd1450;
	or.b64  	%rd1520, %rd1519, %rd1517;
	add.s64 	%rd1521, %rd1516, %rd1520;
	add.s64 	%rd1522, %rd1521, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1511;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 14;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 14;
	mov.b64 	%rd1523, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 18;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 18;
	mov.b64 	%rd1524, {%r1020, %r1019};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 23;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 23;
	mov.b64 	%rd1526, {%r1022, %r1021};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1487, %rd1463;
	and.b64  	%rd1529, %rd1511, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1463;
	add.s64 	%rd1531, %rd55, %rd1195;
	add.s64 	%rd1532, %rd1531, %rd1439;
	add.s64 	%rd1533, %rd1532, %rd1530;
	add.s64 	%rd1534, %rd1533, %rd1527;
	add.s64 	%rd1535, %rd1534, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1522;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 28;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 28;
	mov.b64 	%rd1536, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 30;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 30;
	mov.b64 	%rd1537, {%r1028, %r1027};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	shf.l.wrap.b32 	%r1029, %r1023, %r1024, 25;
	shf.l.wrap.b32 	%r1030, %r1024, %r1023, 25;
	mov.b64 	%rd1539, {%r1030, %r1029};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	and.b64  	%rd1541, %rd1522, %rd1498;
	xor.b64  	%rd1542, %rd1522, %rd1498;
	and.b64  	%rd1543, %rd1542, %rd1474;
	or.b64  	%rd1544, %rd1543, %rd1541;
	add.s64 	%rd1545, %rd1540, %rd1544;
	add.s64 	%rd1546, %rd1545, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1535;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 14;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 14;
	mov.b64 	%rd1547, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 18;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 18;
	mov.b64 	%rd1548, {%r1036, %r1035};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 23;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 23;
	mov.b64 	%rd1550, {%r1038, %r1037};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1511, %rd1487;
	and.b64  	%rd1553, %rd1535, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1487;
	add.s64 	%rd1555, %rd56, %rd1208;
	add.s64 	%rd1556, %rd1555, %rd1463;
	add.s64 	%rd1557, %rd1556, %rd1554;
	add.s64 	%rd1558, %rd1557, %rd1551;
	add.s64 	%rd1559, %rd1558, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1546;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 28;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 28;
	mov.b64 	%rd1560, {%r1042, %r1041};
	shf.l.wrap.b32 	%r1043, %r1039, %r1040, 30;
	shf.l.wrap.b32 	%r1044, %r1040, %r1039, 30;
	mov.b64 	%rd1561, {%r1044, %r1043};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 25;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 25;
	mov.b64 	%rd1563, {%r1046, %r1045};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	and.b64  	%rd1565, %rd1546, %rd1522;
	xor.b64  	%rd1566, %rd1546, %rd1522;
	and.b64  	%rd1567, %rd1566, %rd1498;
	or.b64  	%rd1568, %rd1567, %rd1565;
	add.s64 	%rd1569, %rd1564, %rd1568;
	add.s64 	%rd1570, %rd1569, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1559;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 14;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 14;
	mov.b64 	%rd1571, {%r1050, %r1049};
	shf.r.wrap.b32 	%r1051, %r1048, %r1047, 18;
	shf.r.wrap.b32 	%r1052, %r1047, %r1048, 18;
	mov.b64 	%rd1572, {%r1052, %r1051};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	shf.l.wrap.b32 	%r1053, %r1047, %r1048, 23;
	shf.l.wrap.b32 	%r1054, %r1048, %r1047, 23;
	mov.b64 	%rd1574, {%r1054, %r1053};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1535, %rd1511;
	and.b64  	%rd1577, %rd1559, %rd1576;
	xor.b64  	%rd1578, %rd1577, %rd1511;
	add.s64 	%rd1579, %rd57, %rd1221;
	add.s64 	%rd1580, %rd1579, %rd1487;
	add.s64 	%rd1581, %rd1580, %rd1578;
	add.s64 	%rd1582, %rd1581, %rd1575;
	add.s64 	%rd1583, %rd1582, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1570;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 28;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 28;
	mov.b64 	%rd1584, {%r1058, %r1057};
	shf.l.wrap.b32 	%r1059, %r1055, %r1056, 30;
	shf.l.wrap.b32 	%r1060, %r1056, %r1055, 30;
	mov.b64 	%rd1585, {%r1060, %r1059};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 25;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 25;
	mov.b64 	%rd1587, {%r1062, %r1061};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	and.b64  	%rd1589, %rd1570, %rd1546;
	xor.b64  	%rd1590, %rd1570, %rd1546;
	and.b64  	%rd1591, %rd1590, %rd1522;
	or.b64  	%rd1592, %rd1591, %rd1589;
	add.s64 	%rd1593, %rd1588, %rd1592;
	add.s64 	%rd1594, %rd1593, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1583;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd1595, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 18;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 18;
	mov.b64 	%rd1596, {%r1068, %r1067};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 23;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 23;
	mov.b64 	%rd1598, {%r1070, %r1069};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1559, %rd1535;
	and.b64  	%rd1601, %rd1583, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd1535;
	add.s64 	%rd1603, %rd58, %rd1234;
	add.s64 	%rd1604, %rd1603, %rd1511;
	add.s64 	%rd1605, %rd1604, %rd1602;
	add.s64 	%rd1606, %rd1605, %rd1599;
	add.s64 	%rd1607, %rd1606, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1594;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 28;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 28;
	mov.b64 	%rd1608, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 30;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 30;
	mov.b64 	%rd1609, {%r1076, %r1075};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 25;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 25;
	mov.b64 	%rd1611, {%r1078, %r1077};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	and.b64  	%rd1613, %rd1594, %rd1570;
	xor.b64  	%rd1614, %rd1594, %rd1570;
	and.b64  	%rd1615, %rd1614, %rd1546;
	or.b64  	%rd1616, %rd1615, %rd1613;
	add.s64 	%rd1617, %rd1612, %rd1616;
	add.s64 	%rd1618, %rd1617, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1221;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 19;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 19;
	mov.b64 	%rd1619, {%r1082, %r1081};
	shf.l.wrap.b32 	%r1083, %r1079, %r1080, 3;
	shf.l.wrap.b32 	%r1084, %r1080, %r1079, 3;
	mov.b64 	%rd1620, {%r1084, %r1083};
	shr.u64 	%rd1621, %rd1221, 6;
	xor.b64  	%rd1622, %rd1620, %rd1621;
	xor.b64  	%rd1623, %rd1622, %rd1619;
	shf.r.wrap.b32 	%r1085, %r694, %r693, 1;
	shf.r.wrap.b32 	%r1086, %r693, %r694, 1;
	mov.b64 	%rd1624, {%r1086, %r1085};
	shf.r.wrap.b32 	%r1087, %r694, %r693, 8;
	shf.r.wrap.b32 	%r1088, %r693, %r694, 8;
	mov.b64 	%rd1625, {%r1088, %r1087};
	shr.u64 	%rd1626, %rd1052, 7;
	xor.b64  	%rd1627, %rd1625, %rd1626;
	xor.b64  	%rd1628, %rd1627, %rd1624;
	add.s64 	%rd1629, %rd1628, %rd1039;
	add.s64 	%rd1630, %rd1629, %rd1156;
	add.s64 	%rd1631, %rd1630, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd1234;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 19;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 19;
	mov.b64 	%rd1632, {%r1092, %r1091};
	shf.l.wrap.b32 	%r1093, %r1089, %r1090, 3;
	shf.l.wrap.b32 	%r1094, %r1090, %r1089, 3;
	mov.b64 	%rd1633, {%r1094, %r1093};
	shr.u64 	%rd1634, %rd1234, 6;
	xor.b64  	%rd1635, %rd1633, %rd1634;
	xor.b64  	%rd1636, %rd1635, %rd1632;
	shf.r.wrap.b32 	%r1095, %r704, %r703, 1;
	shf.r.wrap.b32 	%r1096, %r703, %r704, 1;
	mov.b64 	%rd1637, {%r1096, %r1095};
	shf.r.wrap.b32 	%r1097, %r704, %r703, 8;
	shf.r.wrap.b32 	%r1098, %r703, %r704, 8;
	mov.b64 	%rd1638, {%r1098, %r1097};
	shr.u64 	%rd1639, %rd1065, 7;
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1640, %rd1637;
	add.s64 	%rd1642, %rd1641, %rd1052;
	add.s64 	%rd1643, %rd1642, %rd1169;
	add.s64 	%rd1644, %rd1643, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd1631;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 19;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 19;
	mov.b64 	%rd1645, {%r1102, %r1101};
	shf.l.wrap.b32 	%r1103, %r1099, %r1100, 3;
	shf.l.wrap.b32 	%r1104, %r1100, %r1099, 3;
	mov.b64 	%rd1646, {%r1104, %r1103};
	shr.u64 	%rd1647, %rd1631, 6;
	xor.b64  	%rd1648, %rd1646, %rd1647;
	xor.b64  	%rd1649, %rd1648, %rd1645;
	shf.r.wrap.b32 	%r1105, %r714, %r713, 1;
	shf.r.wrap.b32 	%r1106, %r713, %r714, 1;
	mov.b64 	%rd1650, {%r1106, %r1105};
	shf.r.wrap.b32 	%r1107, %r714, %r713, 8;
	shf.r.wrap.b32 	%r1108, %r713, %r714, 8;
	mov.b64 	%rd1651, {%r1108, %r1107};
	shr.u64 	%rd1652, %rd1078, 7;
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1650;
	add.s64 	%rd1655, %rd1654, %rd1065;
	add.s64 	%rd1656, %rd1655, %rd1182;
	add.s64 	%rd1657, %rd1656, %rd1649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1644;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 19;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 19;
	mov.b64 	%rd1658, {%r1112, %r1111};
	shf.l.wrap.b32 	%r1113, %r1109, %r1110, 3;
	shf.l.wrap.b32 	%r1114, %r1110, %r1109, 3;
	mov.b64 	%rd1659, {%r1114, %r1113};
	shr.u64 	%rd1660, %rd1644, 6;
	xor.b64  	%rd1661, %rd1659, %rd1660;
	xor.b64  	%rd1662, %rd1661, %rd1658;
	shf.r.wrap.b32 	%r1115, %r724, %r723, 1;
	shf.r.wrap.b32 	%r1116, %r723, %r724, 1;
	mov.b64 	%rd1663, {%r1116, %r1115};
	shf.r.wrap.b32 	%r1117, %r724, %r723, 8;
	shf.r.wrap.b32 	%r1118, %r723, %r724, 8;
	mov.b64 	%rd1664, {%r1118, %r1117};
	shr.u64 	%rd1665, %rd1091, 7;
	xor.b64  	%rd1666, %rd1664, %rd1665;
	xor.b64  	%rd1667, %rd1666, %rd1663;
	add.s64 	%rd1668, %rd1667, %rd1078;
	add.s64 	%rd1669, %rd1668, %rd1195;
	add.s64 	%rd1670, %rd1669, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd1657;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 19;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 19;
	mov.b64 	%rd1671, {%r1122, %r1121};
	shf.l.wrap.b32 	%r1123, %r1119, %r1120, 3;
	shf.l.wrap.b32 	%r1124, %r1120, %r1119, 3;
	mov.b64 	%rd1672, {%r1124, %r1123};
	shr.u64 	%rd1673, %rd1657, 6;
	xor.b64  	%rd1674, %rd1672, %rd1673;
	xor.b64  	%rd1675, %rd1674, %rd1671;
	shf.r.wrap.b32 	%r1125, %r734, %r733, 1;
	shf.r.wrap.b32 	%r1126, %r733, %r734, 1;
	mov.b64 	%rd1676, {%r1126, %r1125};
	shf.r.wrap.b32 	%r1127, %r734, %r733, 8;
	shf.r.wrap.b32 	%r1128, %r733, %r734, 8;
	mov.b64 	%rd1677, {%r1128, %r1127};
	shr.u64 	%rd1678, %rd1104, 7;
	xor.b64  	%rd1679, %rd1677, %rd1678;
	xor.b64  	%rd1680, %rd1679, %rd1676;
	add.s64 	%rd1681, %rd1680, %rd1091;
	add.s64 	%rd1682, %rd1681, %rd1208;
	add.s64 	%rd1683, %rd1682, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1670;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 19;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 19;
	mov.b64 	%rd1684, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 3;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 3;
	mov.b64 	%rd1685, {%r1134, %r1133};
	shr.u64 	%rd1686, %rd1670, 6;
	xor.b64  	%rd1687, %rd1685, %rd1686;
	xor.b64  	%rd1688, %rd1687, %rd1684;
	shf.r.wrap.b32 	%r1135, %r744, %r743, 1;
	shf.r.wrap.b32 	%r1136, %r743, %r744, 1;
	mov.b64 	%rd1689, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r744, %r743, 8;
	shf.r.wrap.b32 	%r1138, %r743, %r744, 8;
	mov.b64 	%rd1690, {%r1138, %r1137};
	shr.u64 	%rd1691, %rd1117, 7;
	xor.b64  	%rd1692, %rd1690, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1689;
	add.s64 	%rd1694, %rd1693, %rd1104;
	add.s64 	%rd1695, %rd1694, %rd1221;
	add.s64 	%rd1696, %rd1695, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1683;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 19;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 19;
	mov.b64 	%rd1697, {%r1142, %r1141};
	shf.l.wrap.b32 	%r1143, %r1139, %r1140, 3;
	shf.l.wrap.b32 	%r1144, %r1140, %r1139, 3;
	mov.b64 	%rd1698, {%r1144, %r1143};
	shr.u64 	%rd1699, %rd1683, 6;
	xor.b64  	%rd1700, %rd1698, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1697;
	shf.r.wrap.b32 	%r1145, %r754, %r753, 1;
	shf.r.wrap.b32 	%r1146, %r753, %r754, 1;
	mov.b64 	%rd1702, {%r1146, %r1145};
	shf.r.wrap.b32 	%r1147, %r754, %r753, 8;
	shf.r.wrap.b32 	%r1148, %r753, %r754, 8;
	mov.b64 	%rd1703, {%r1148, %r1147};
	shr.u64 	%rd1704, %rd1130, 7;
	xor.b64  	%rd1705, %rd1703, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1702;
	add.s64 	%rd1707, %rd1706, %rd1117;
	add.s64 	%rd1708, %rd1707, %rd1234;
	add.s64 	%rd1709, %rd1708, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1696;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 19;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 19;
	mov.b64 	%rd1710, {%r1152, %r1151};
	shf.l.wrap.b32 	%r1153, %r1149, %r1150, 3;
	shf.l.wrap.b32 	%r1154, %r1150, %r1149, 3;
	mov.b64 	%rd1711, {%r1154, %r1153};
	shr.u64 	%rd1712, %rd1696, 6;
	xor.b64  	%rd1713, %rd1711, %rd1712;
	xor.b64  	%rd1714, %rd1713, %rd1710;
	shf.r.wrap.b32 	%r1155, %r764, %r763, 1;
	shf.r.wrap.b32 	%r1156, %r763, %r764, 1;
	mov.b64 	%rd1715, {%r1156, %r1155};
	shf.r.wrap.b32 	%r1157, %r764, %r763, 8;
	shf.r.wrap.b32 	%r1158, %r763, %r764, 8;
	mov.b64 	%rd1716, {%r1158, %r1157};
	shr.u64 	%rd1717, %rd1143, 7;
	xor.b64  	%rd1718, %rd1716, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1715;
	add.s64 	%rd1720, %rd1719, %rd1130;
	add.s64 	%rd1721, %rd1720, %rd1631;
	add.s64 	%rd1722, %rd1721, %rd1714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1159,%dummy}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1160}, %rd1709;
	}
	shf.r.wrap.b32 	%r1161, %r1160, %r1159, 19;
	shf.r.wrap.b32 	%r1162, %r1159, %r1160, 19;
	mov.b64 	%rd1723, {%r1162, %r1161};
	shf.l.wrap.b32 	%r1163, %r1159, %r1160, 3;
	shf.l.wrap.b32 	%r1164, %r1160, %r1159, 3;
	mov.b64 	%rd1724, {%r1164, %r1163};
	shr.u64 	%rd1725, %rd1709, 6;
	xor.b64  	%rd1726, %rd1724, %rd1725;
	xor.b64  	%rd1727, %rd1726, %rd1723;
	shf.r.wrap.b32 	%r1165, %r774, %r773, 1;
	shf.r.wrap.b32 	%r1166, %r773, %r774, 1;
	mov.b64 	%rd1728, {%r1166, %r1165};
	shf.r.wrap.b32 	%r1167, %r774, %r773, 8;
	shf.r.wrap.b32 	%r1168, %r773, %r774, 8;
	mov.b64 	%rd1729, {%r1168, %r1167};
	shr.u64 	%rd1730, %rd1156, 7;
	xor.b64  	%rd1731, %rd1729, %rd1730;
	xor.b64  	%rd1732, %rd1731, %rd1728;
	add.s64 	%rd1733, %rd1732, %rd1143;
	add.s64 	%rd1734, %rd1733, %rd1644;
	add.s64 	%rd1735, %rd1734, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd1722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd1722;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 19;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 19;
	mov.b64 	%rd1736, {%r1172, %r1171};
	shf.l.wrap.b32 	%r1173, %r1169, %r1170, 3;
	shf.l.wrap.b32 	%r1174, %r1170, %r1169, 3;
	mov.b64 	%rd1737, {%r1174, %r1173};
	shr.u64 	%rd1738, %rd1722, 6;
	xor.b64  	%rd1739, %rd1737, %rd1738;
	xor.b64  	%rd1740, %rd1739, %rd1736;
	shf.r.wrap.b32 	%r1175, %r784, %r783, 1;
	shf.r.wrap.b32 	%r1176, %r783, %r784, 1;
	mov.b64 	%rd1741, {%r1176, %r1175};
	shf.r.wrap.b32 	%r1177, %r784, %r783, 8;
	shf.r.wrap.b32 	%r1178, %r783, %r784, 8;
	mov.b64 	%rd1742, {%r1178, %r1177};
	shr.u64 	%rd1743, %rd1169, 7;
	xor.b64  	%rd1744, %rd1742, %rd1743;
	xor.b64  	%rd1745, %rd1744, %rd1741;
	add.s64 	%rd1746, %rd1745, %rd1156;
	add.s64 	%rd1747, %rd1746, %rd1657;
	add.s64 	%rd1748, %rd1747, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd1735;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 19;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 19;
	mov.b64 	%rd1749, {%r1182, %r1181};
	shf.l.wrap.b32 	%r1183, %r1179, %r1180, 3;
	shf.l.wrap.b32 	%r1184, %r1180, %r1179, 3;
	mov.b64 	%rd1750, {%r1184, %r1183};
	shr.u64 	%rd1751, %rd1735, 6;
	xor.b64  	%rd1752, %rd1750, %rd1751;
	xor.b64  	%rd1753, %rd1752, %rd1749;
	shf.r.wrap.b32 	%r1185, %r794, %r793, 1;
	shf.r.wrap.b32 	%r1186, %r793, %r794, 1;
	mov.b64 	%rd1754, {%r1186, %r1185};
	shf.r.wrap.b32 	%r1187, %r794, %r793, 8;
	shf.r.wrap.b32 	%r1188, %r793, %r794, 8;
	mov.b64 	%rd1755, {%r1188, %r1187};
	shr.u64 	%rd1756, %rd1182, 7;
	xor.b64  	%rd1757, %rd1755, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1754;
	add.s64 	%rd1759, %rd1758, %rd1169;
	add.s64 	%rd1760, %rd1759, %rd1670;
	add.s64 	%rd1761, %rd1760, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1748;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 19;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 19;
	mov.b64 	%rd1762, {%r1192, %r1191};
	shf.l.wrap.b32 	%r1193, %r1189, %r1190, 3;
	shf.l.wrap.b32 	%r1194, %r1190, %r1189, 3;
	mov.b64 	%rd1763, {%r1194, %r1193};
	shr.u64 	%rd1764, %rd1748, 6;
	xor.b64  	%rd1765, %rd1763, %rd1764;
	xor.b64  	%rd1766, %rd1765, %rd1762;
	shf.r.wrap.b32 	%r1195, %r804, %r803, 1;
	shf.r.wrap.b32 	%r1196, %r803, %r804, 1;
	mov.b64 	%rd1767, {%r1196, %r1195};
	shf.r.wrap.b32 	%r1197, %r804, %r803, 8;
	shf.r.wrap.b32 	%r1198, %r803, %r804, 8;
	mov.b64 	%rd1768, {%r1198, %r1197};
	shr.u64 	%rd1769, %rd1195, 7;
	xor.b64  	%rd1770, %rd1768, %rd1769;
	xor.b64  	%rd1771, %rd1770, %rd1767;
	add.s64 	%rd1772, %rd1771, %rd1182;
	add.s64 	%rd1773, %rd1772, %rd1683;
	add.s64 	%rd1774, %rd1773, %rd1766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1761;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 19;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 19;
	mov.b64 	%rd1775, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 3;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 3;
	mov.b64 	%rd1776, {%r1204, %r1203};
	shr.u64 	%rd1777, %rd1761, 6;
	xor.b64  	%rd1778, %rd1776, %rd1777;
	xor.b64  	%rd1779, %rd1778, %rd1775;
	shf.r.wrap.b32 	%r1205, %r814, %r813, 1;
	shf.r.wrap.b32 	%r1206, %r813, %r814, 1;
	mov.b64 	%rd1780, {%r1206, %r1205};
	shf.r.wrap.b32 	%r1207, %r814, %r813, 8;
	shf.r.wrap.b32 	%r1208, %r813, %r814, 8;
	mov.b64 	%rd1781, {%r1208, %r1207};
	shr.u64 	%rd1782, %rd1208, 7;
	xor.b64  	%rd1783, %rd1781, %rd1782;
	xor.b64  	%rd1784, %rd1783, %rd1780;
	add.s64 	%rd1785, %rd1784, %rd1195;
	add.s64 	%rd1786, %rd1785, %rd1696;
	add.s64 	%rd1787, %rd1786, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd1774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd1774;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 19;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 19;
	mov.b64 	%rd1788, {%r1212, %r1211};
	shf.l.wrap.b32 	%r1213, %r1209, %r1210, 3;
	shf.l.wrap.b32 	%r1214, %r1210, %r1209, 3;
	mov.b64 	%rd1789, {%r1214, %r1213};
	shr.u64 	%rd1790, %rd1774, 6;
	xor.b64  	%rd1791, %rd1789, %rd1790;
	xor.b64  	%rd1792, %rd1791, %rd1788;
	shf.r.wrap.b32 	%r1215, %r1080, %r1079, 1;
	shf.r.wrap.b32 	%r1216, %r1079, %r1080, 1;
	mov.b64 	%rd1793, {%r1216, %r1215};
	shf.r.wrap.b32 	%r1217, %r1080, %r1079, 8;
	shf.r.wrap.b32 	%r1218, %r1079, %r1080, 8;
	mov.b64 	%rd1794, {%r1218, %r1217};
	shr.u64 	%rd1795, %rd1221, 7;
	xor.b64  	%rd1796, %rd1794, %rd1795;
	xor.b64  	%rd1797, %rd1796, %rd1793;
	add.s64 	%rd1798, %rd1797, %rd1208;
	add.s64 	%rd1799, %rd1798, %rd1709;
	add.s64 	%rd1800, %rd1799, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1219,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1220}, %rd1787;
	}
	shf.r.wrap.b32 	%r1221, %r1220, %r1219, 19;
	shf.r.wrap.b32 	%r1222, %r1219, %r1220, 19;
	mov.b64 	%rd1801, {%r1222, %r1221};
	shf.l.wrap.b32 	%r1223, %r1219, %r1220, 3;
	shf.l.wrap.b32 	%r1224, %r1220, %r1219, 3;
	mov.b64 	%rd1802, {%r1224, %r1223};
	shr.u64 	%rd1803, %rd1787, 6;
	xor.b64  	%rd1804, %rd1802, %rd1803;
	xor.b64  	%rd1805, %rd1804, %rd1801;
	shf.r.wrap.b32 	%r1225, %r1090, %r1089, 1;
	shf.r.wrap.b32 	%r1226, %r1089, %r1090, 1;
	mov.b64 	%rd1806, {%r1226, %r1225};
	shf.r.wrap.b32 	%r1227, %r1090, %r1089, 8;
	shf.r.wrap.b32 	%r1228, %r1089, %r1090, 8;
	mov.b64 	%rd1807, {%r1228, %r1227};
	shr.u64 	%rd1808, %rd1234, 7;
	xor.b64  	%rd1809, %rd1807, %rd1808;
	xor.b64  	%rd1810, %rd1809, %rd1806;
	add.s64 	%rd1811, %rd1810, %rd1221;
	add.s64 	%rd1812, %rd1811, %rd1722;
	add.s64 	%rd1813, %rd1812, %rd1805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1800;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 19;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 19;
	mov.b64 	%rd1814, {%r1232, %r1231};
	shf.l.wrap.b32 	%r1233, %r1229, %r1230, 3;
	shf.l.wrap.b32 	%r1234, %r1230, %r1229, 3;
	mov.b64 	%rd1815, {%r1234, %r1233};
	shr.u64 	%rd1816, %rd1800, 6;
	xor.b64  	%rd1817, %rd1815, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1814;
	shf.r.wrap.b32 	%r1235, %r1100, %r1099, 1;
	shf.r.wrap.b32 	%r1236, %r1099, %r1100, 1;
	mov.b64 	%rd1819, {%r1236, %r1235};
	shf.r.wrap.b32 	%r1237, %r1100, %r1099, 8;
	shf.r.wrap.b32 	%r1238, %r1099, %r1100, 8;
	mov.b64 	%rd1820, {%r1238, %r1237};
	shr.u64 	%rd1821, %rd1631, 7;
	xor.b64  	%rd1822, %rd1820, %rd1821;
	xor.b64  	%rd1823, %rd1822, %rd1819;
	add.s64 	%rd1824, %rd1823, %rd1234;
	add.s64 	%rd1825, %rd1824, %rd1735;
	add.s64 	%rd1826, %rd1825, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1239,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1240}, %rd1607;
	}
	shf.r.wrap.b32 	%r1241, %r1240, %r1239, 14;
	shf.r.wrap.b32 	%r1242, %r1239, %r1240, 14;
	mov.b64 	%rd1827, {%r1242, %r1241};
	shf.r.wrap.b32 	%r1243, %r1240, %r1239, 18;
	shf.r.wrap.b32 	%r1244, %r1239, %r1240, 18;
	mov.b64 	%rd1828, {%r1244, %r1243};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	shf.l.wrap.b32 	%r1245, %r1239, %r1240, 23;
	shf.l.wrap.b32 	%r1246, %r1240, %r1239, 23;
	mov.b64 	%rd1830, {%r1246, %r1245};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	xor.b64  	%rd1832, %rd1583, %rd1559;
	and.b64  	%rd1833, %rd1607, %rd1832;
	xor.b64  	%rd1834, %rd1833, %rd1559;
	add.s64 	%rd1835, %rd1834, %rd1535;
	add.s64 	%rd1836, %rd1835, %rd1831;
	add.s64 	%rd1837, %rd1836, %rd1631;
	add.s64 	%rd1838, %rd1837, %rd59;
	add.s64 	%rd1839, %rd1838, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd1618;
	}
	shf.r.wrap.b32 	%r1249, %r1248, %r1247, 28;
	shf.r.wrap.b32 	%r1250, %r1247, %r1248, 28;
	mov.b64 	%rd1840, {%r1250, %r1249};
	shf.l.wrap.b32 	%r1251, %r1247, %r1248, 30;
	shf.l.wrap.b32 	%r1252, %r1248, %r1247, 30;
	mov.b64 	%rd1841, {%r1252, %r1251};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	shf.l.wrap.b32 	%r1253, %r1247, %r1248, 25;
	shf.l.wrap.b32 	%r1254, %r1248, %r1247, 25;
	mov.b64 	%rd1843, {%r1254, %r1253};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	and.b64  	%rd1845, %rd1618, %rd1594;
	xor.b64  	%rd1846, %rd1618, %rd1594;
	and.b64  	%rd1847, %rd1846, %rd1570;
	or.b64  	%rd1848, %rd1847, %rd1845;
	add.s64 	%rd1849, %rd1844, %rd1848;
	add.s64 	%rd1850, %rd1849, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1255,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1839;
	}
	shf.r.wrap.b32 	%r1257, %r1256, %r1255, 14;
	shf.r.wrap.b32 	%r1258, %r1255, %r1256, 14;
	mov.b64 	%rd1851, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r1256, %r1255, 18;
	shf.r.wrap.b32 	%r1260, %r1255, %r1256, 18;
	mov.b64 	%rd1852, {%r1260, %r1259};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shf.l.wrap.b32 	%r1261, %r1255, %r1256, 23;
	shf.l.wrap.b32 	%r1262, %r1256, %r1255, 23;
	mov.b64 	%rd1854, {%r1262, %r1261};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	xor.b64  	%rd1856, %rd1607, %rd1583;
	and.b64  	%rd1857, %rd1839, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1583;
	add.s64 	%rd1859, %rd1644, %rd1559;
	add.s64 	%rd1860, %rd1859, %rd60;
	add.s64 	%rd1861, %rd1860, %rd1858;
	add.s64 	%rd1862, %rd1861, %rd1855;
	add.s64 	%rd1863, %rd1862, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1850;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 28;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 28;
	mov.b64 	%rd1864, {%r1266, %r1265};
	shf.l.wrap.b32 	%r1267, %r1263, %r1264, 30;
	shf.l.wrap.b32 	%r1268, %r1264, %r1263, 30;
	mov.b64 	%rd1865, {%r1268, %r1267};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 25;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 25;
	mov.b64 	%rd1867, {%r1270, %r1269};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	and.b64  	%rd1869, %rd1850, %rd1618;
	xor.b64  	%rd1870, %rd1850, %rd1618;
	and.b64  	%rd1871, %rd1870, %rd1594;
	or.b64  	%rd1872, %rd1871, %rd1869;
	add.s64 	%rd1873, %rd1868, %rd1872;
	add.s64 	%rd1874, %rd1873, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1863;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 14;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 14;
	mov.b64 	%rd1875, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1272, %r1271, 18;
	shf.r.wrap.b32 	%r1276, %r1271, %r1272, 18;
	mov.b64 	%rd1876, {%r1276, %r1275};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 23;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 23;
	mov.b64 	%rd1878, {%r1278, %r1277};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	xor.b64  	%rd1880, %rd1839, %rd1607;
	and.b64  	%rd1881, %rd1863, %rd1880;
	xor.b64  	%rd1882, %rd1881, %rd1607;
	add.s64 	%rd1883, %rd1657, %rd1583;
	add.s64 	%rd1884, %rd1883, %rd61;
	add.s64 	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1885, %rd1879;
	add.s64 	%rd1887, %rd1886, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1874;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 28;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 28;
	mov.b64 	%rd1888, {%r1282, %r1281};
	shf.l.wrap.b32 	%r1283, %r1279, %r1280, 30;
	shf.l.wrap.b32 	%r1284, %r1280, %r1279, 30;
	mov.b64 	%rd1889, {%r1284, %r1283};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 25;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 25;
	mov.b64 	%rd1891, {%r1286, %r1285};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	and.b64  	%rd1893, %rd1874, %rd1850;
	xor.b64  	%rd1894, %rd1874, %rd1850;
	and.b64  	%rd1895, %rd1894, %rd1618;
	or.b64  	%rd1896, %rd1895, %rd1893;
	add.s64 	%rd1897, %rd1892, %rd1896;
	add.s64 	%rd1898, %rd1897, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1887;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1899, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1900, {%r1292, %r1291};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1902, {%r1294, %r1293};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	xor.b64  	%rd1904, %rd1863, %rd1839;
	and.b64  	%rd1905, %rd1887, %rd1904;
	xor.b64  	%rd1906, %rd1905, %rd1839;
	add.s64 	%rd1907, %rd1670, %rd1607;
	add.s64 	%rd1908, %rd1907, %rd62;
	add.s64 	%rd1909, %rd1908, %rd1906;
	add.s64 	%rd1910, %rd1909, %rd1903;
	add.s64 	%rd1911, %rd1910, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1898;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1912, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1913, {%r1300, %r1299};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1915, {%r1302, %r1301};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	and.b64  	%rd1917, %rd1898, %rd1874;
	xor.b64  	%rd1918, %rd1898, %rd1874;
	and.b64  	%rd1919, %rd1918, %rd1850;
	or.b64  	%rd1920, %rd1919, %rd1917;
	add.s64 	%rd1921, %rd1916, %rd1920;
	add.s64 	%rd1922, %rd1921, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1911;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1923, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1924, {%r1308, %r1307};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1926, {%r1310, %r1309};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	xor.b64  	%rd1928, %rd1887, %rd1863;
	and.b64  	%rd1929, %rd1911, %rd1928;
	xor.b64  	%rd1930, %rd1929, %rd1863;
	add.s64 	%rd1931, %rd1839, %rd1683;
	add.s64 	%rd1932, %rd1931, %rd63;
	add.s64 	%rd1933, %rd1932, %rd1930;
	add.s64 	%rd1934, %rd1933, %rd1927;
	add.s64 	%rd1935, %rd1934, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1922;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1936, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd1937, {%r1316, %r1315};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd1939, {%r1318, %r1317};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	and.b64  	%rd1941, %rd1922, %rd1898;
	xor.b64  	%rd1942, %rd1922, %rd1898;
	and.b64  	%rd1943, %rd1942, %rd1874;
	or.b64  	%rd1944, %rd1943, %rd1941;
	add.s64 	%rd1945, %rd1940, %rd1944;
	add.s64 	%rd1946, %rd1945, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1935;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1947, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1948, {%r1324, %r1323};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1950, {%r1326, %r1325};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	xor.b64  	%rd1952, %rd1911, %rd1887;
	and.b64  	%rd1953, %rd1935, %rd1952;
	xor.b64  	%rd1954, %rd1953, %rd1887;
	add.s64 	%rd1955, %rd64, %rd1696;
	add.s64 	%rd1956, %rd1955, %rd1863;
	add.s64 	%rd1957, %rd1956, %rd1954;
	add.s64 	%rd1958, %rd1957, %rd1951;
	add.s64 	%rd1959, %rd1958, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1946;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1960, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1961, {%r1332, %r1331};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1963, {%r1334, %r1333};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	and.b64  	%rd1965, %rd1946, %rd1922;
	xor.b64  	%rd1966, %rd1946, %rd1922;
	and.b64  	%rd1967, %rd1966, %rd1898;
	or.b64  	%rd1968, %rd1967, %rd1965;
	add.s64 	%rd1969, %rd1964, %rd1968;
	add.s64 	%rd1970, %rd1969, %rd1958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1959;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 14;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 14;
	mov.b64 	%rd1971, {%r1338, %r1337};
	shf.r.wrap.b32 	%r1339, %r1336, %r1335, 18;
	shf.r.wrap.b32 	%r1340, %r1335, %r1336, 18;
	mov.b64 	%rd1972, {%r1340, %r1339};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 23;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 23;
	mov.b64 	%rd1974, {%r1342, %r1341};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1935, %rd1911;
	and.b64  	%rd1977, %rd1959, %rd1976;
	xor.b64  	%rd1978, %rd1977, %rd1911;
	add.s64 	%rd1979, %rd65, %rd1709;
	add.s64 	%rd1980, %rd1979, %rd1887;
	add.s64 	%rd1981, %rd1980, %rd1978;
	add.s64 	%rd1982, %rd1981, %rd1975;
	add.s64 	%rd1983, %rd1982, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1970;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 28;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 28;
	mov.b64 	%rd1984, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 30;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 30;
	mov.b64 	%rd1985, {%r1348, %r1347};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 25;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 25;
	mov.b64 	%rd1987, {%r1350, %r1349};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	and.b64  	%rd1989, %rd1970, %rd1946;
	xor.b64  	%rd1990, %rd1970, %rd1946;
	and.b64  	%rd1991, %rd1990, %rd1922;
	or.b64  	%rd1992, %rd1991, %rd1989;
	add.s64 	%rd1993, %rd1988, %rd1992;
	add.s64 	%rd1994, %rd1993, %rd1982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1983;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 14;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 14;
	mov.b64 	%rd1995, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 18;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 18;
	mov.b64 	%rd1996, {%r1356, %r1355};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 23;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 23;
	mov.b64 	%rd1998, {%r1358, %r1357};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1959, %rd1935;
	and.b64  	%rd2001, %rd1983, %rd2000;
	xor.b64  	%rd2002, %rd2001, %rd1935;
	add.s64 	%rd2003, %rd66, %rd1722;
	add.s64 	%rd2004, %rd2003, %rd1911;
	add.s64 	%rd2005, %rd2004, %rd2002;
	add.s64 	%rd2006, %rd2005, %rd1999;
	add.s64 	%rd2007, %rd2006, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1994;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 28;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 28;
	mov.b64 	%rd2008, {%r1362, %r1361};
	shf.l.wrap.b32 	%r1363, %r1359, %r1360, 30;
	shf.l.wrap.b32 	%r1364, %r1360, %r1359, 30;
	mov.b64 	%rd2009, {%r1364, %r1363};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 25;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 25;
	mov.b64 	%rd2011, {%r1366, %r1365};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	and.b64  	%rd2013, %rd1994, %rd1970;
	xor.b64  	%rd2014, %rd1994, %rd1970;
	and.b64  	%rd2015, %rd2014, %rd1946;
	or.b64  	%rd2016, %rd2015, %rd2013;
	add.s64 	%rd2017, %rd2012, %rd2016;
	add.s64 	%rd2018, %rd2017, %rd2006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd2007;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 14;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 14;
	mov.b64 	%rd2019, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1368, %r1367, 18;
	shf.r.wrap.b32 	%r1372, %r1367, %r1368, 18;
	mov.b64 	%rd2020, {%r1372, %r1371};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 23;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 23;
	mov.b64 	%rd2022, {%r1374, %r1373};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd1983, %rd1959;
	and.b64  	%rd2025, %rd2007, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd1959;
	add.s64 	%rd2027, %rd67, %rd1735;
	add.s64 	%rd2028, %rd2027, %rd1935;
	add.s64 	%rd2029, %rd2028, %rd2026;
	add.s64 	%rd2030, %rd2029, %rd2023;
	add.s64 	%rd2031, %rd2030, %rd1946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2018;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 28;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 28;
	mov.b64 	%rd2032, {%r1378, %r1377};
	shf.l.wrap.b32 	%r1379, %r1375, %r1376, 30;
	shf.l.wrap.b32 	%r1380, %r1376, %r1375, 30;
	mov.b64 	%rd2033, {%r1380, %r1379};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 25;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 25;
	mov.b64 	%rd2035, {%r1382, %r1381};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	and.b64  	%rd2037, %rd2018, %rd1994;
	xor.b64  	%rd2038, %rd2018, %rd1994;
	and.b64  	%rd2039, %rd2038, %rd1970;
	or.b64  	%rd2040, %rd2039, %rd2037;
	add.s64 	%rd2041, %rd2036, %rd2040;
	add.s64 	%rd2042, %rd2041, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd2031;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 14;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 14;
	mov.b64 	%rd2043, {%r1386, %r1385};
	shf.r.wrap.b32 	%r1387, %r1384, %r1383, 18;
	shf.r.wrap.b32 	%r1388, %r1383, %r1384, 18;
	mov.b64 	%rd2044, {%r1388, %r1387};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 23;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 23;
	mov.b64 	%rd2046, {%r1390, %r1389};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	xor.b64  	%rd2048, %rd2007, %rd1983;
	and.b64  	%rd2049, %rd2031, %rd2048;
	xor.b64  	%rd2050, %rd2049, %rd1983;
	add.s64 	%rd2051, %rd68, %rd1748;
	add.s64 	%rd2052, %rd2051, %rd1959;
	add.s64 	%rd2053, %rd2052, %rd2050;
	add.s64 	%rd2054, %rd2053, %rd2047;
	add.s64 	%rd2055, %rd2054, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd2042;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 28;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 28;
	mov.b64 	%rd2056, {%r1394, %r1393};
	shf.l.wrap.b32 	%r1395, %r1391, %r1392, 30;
	shf.l.wrap.b32 	%r1396, %r1392, %r1391, 30;
	mov.b64 	%rd2057, {%r1396, %r1395};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 25;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 25;
	mov.b64 	%rd2059, {%r1398, %r1397};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	and.b64  	%rd2061, %rd2042, %rd2018;
	xor.b64  	%rd2062, %rd2042, %rd2018;
	and.b64  	%rd2063, %rd2062, %rd1994;
	or.b64  	%rd2064, %rd2063, %rd2061;
	add.s64 	%rd2065, %rd2060, %rd2064;
	add.s64 	%rd2066, %rd2065, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2055;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2067, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2068, {%r1404, %r1403};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2070, {%r1406, %r1405};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	xor.b64  	%rd2072, %rd2031, %rd2007;
	and.b64  	%rd2073, %rd2055, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2007;
	add.s64 	%rd2075, %rd69, %rd1761;
	add.s64 	%rd2076, %rd2075, %rd1983;
	add.s64 	%rd2077, %rd2076, %rd2074;
	add.s64 	%rd2078, %rd2077, %rd2071;
	add.s64 	%rd2079, %rd2078, %rd1994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2066;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2080, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2081, {%r1412, %r1411};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2083, {%r1414, %r1413};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	and.b64  	%rd2085, %rd2066, %rd2042;
	xor.b64  	%rd2086, %rd2066, %rd2042;
	and.b64  	%rd2087, %rd2086, %rd2018;
	or.b64  	%rd2088, %rd2087, %rd2085;
	add.s64 	%rd2089, %rd2084, %rd2088;
	add.s64 	%rd2090, %rd2089, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2079;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 14;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 14;
	mov.b64 	%rd2091, {%r1418, %r1417};
	shf.r.wrap.b32 	%r1419, %r1416, %r1415, 18;
	shf.r.wrap.b32 	%r1420, %r1415, %r1416, 18;
	mov.b64 	%rd2092, {%r1420, %r1419};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 23;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 23;
	mov.b64 	%rd2094, {%r1422, %r1421};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	xor.b64  	%rd2096, %rd2055, %rd2031;
	and.b64  	%rd2097, %rd2079, %rd2096;
	xor.b64  	%rd2098, %rd2097, %rd2031;
	add.s64 	%rd2099, %rd70, %rd1774;
	add.s64 	%rd2100, %rd2099, %rd2007;
	add.s64 	%rd2101, %rd2100, %rd2098;
	add.s64 	%rd2102, %rd2101, %rd2095;
	add.s64 	%rd2103, %rd2102, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2090;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 28;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 28;
	mov.b64 	%rd2104, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 30;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 30;
	mov.b64 	%rd2105, {%r1428, %r1427};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 25;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 25;
	mov.b64 	%rd2107, {%r1430, %r1429};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	and.b64  	%rd2109, %rd2090, %rd2066;
	xor.b64  	%rd2110, %rd2090, %rd2066;
	and.b64  	%rd2111, %rd2110, %rd2042;
	or.b64  	%rd2112, %rd2111, %rd2109;
	add.s64 	%rd2113, %rd2108, %rd2112;
	add.s64 	%rd2114, %rd2113, %rd2102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2103;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 14;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 14;
	mov.b64 	%rd2115, {%r1434, %r1433};
	shf.r.wrap.b32 	%r1435, %r1432, %r1431, 18;
	shf.r.wrap.b32 	%r1436, %r1431, %r1432, 18;
	mov.b64 	%rd2116, {%r1436, %r1435};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 23;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 23;
	mov.b64 	%rd2118, {%r1438, %r1437};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2079, %rd2055;
	and.b64  	%rd2121, %rd2103, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2055;
	add.s64 	%rd2123, %rd71, %rd1787;
	add.s64 	%rd2124, %rd2123, %rd2031;
	add.s64 	%rd2125, %rd2124, %rd2122;
	add.s64 	%rd2126, %rd2125, %rd2119;
	add.s64 	%rd2127, %rd2126, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2114;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 28;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 28;
	mov.b64 	%rd2128, {%r1442, %r1441};
	shf.l.wrap.b32 	%r1443, %r1439, %r1440, 30;
	shf.l.wrap.b32 	%r1444, %r1440, %r1439, 30;
	mov.b64 	%rd2129, {%r1444, %r1443};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 25;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 25;
	mov.b64 	%rd2131, {%r1446, %r1445};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	and.b64  	%rd2133, %rd2114, %rd2090;
	xor.b64  	%rd2134, %rd2114, %rd2090;
	and.b64  	%rd2135, %rd2134, %rd2066;
	or.b64  	%rd2136, %rd2135, %rd2133;
	add.s64 	%rd2137, %rd2132, %rd2136;
	add.s64 	%rd2138, %rd2137, %rd2126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2127;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 14;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 14;
	mov.b64 	%rd2139, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 18;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 18;
	mov.b64 	%rd2140, {%r1452, %r1451};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 23;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 23;
	mov.b64 	%rd2142, {%r1454, %r1453};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	xor.b64  	%rd2144, %rd2103, %rd2079;
	and.b64  	%rd2145, %rd2127, %rd2144;
	xor.b64  	%rd2146, %rd2145, %rd2079;
	add.s64 	%rd2147, %rd72, %rd1800;
	add.s64 	%rd2148, %rd2147, %rd2055;
	add.s64 	%rd2149, %rd2148, %rd2146;
	add.s64 	%rd2150, %rd2149, %rd2143;
	add.s64 	%rd2151, %rd2150, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2138;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 28;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 28;
	mov.b64 	%rd2152, {%r1458, %r1457};
	shf.l.wrap.b32 	%r1459, %r1455, %r1456, 30;
	shf.l.wrap.b32 	%r1460, %r1456, %r1455, 30;
	mov.b64 	%rd2153, {%r1460, %r1459};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 25;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 25;
	mov.b64 	%rd2155, {%r1462, %r1461};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	and.b64  	%rd2157, %rd2138, %rd2114;
	xor.b64  	%rd2158, %rd2138, %rd2114;
	and.b64  	%rd2159, %rd2158, %rd2090;
	or.b64  	%rd2160, %rd2159, %rd2157;
	add.s64 	%rd2161, %rd2156, %rd2160;
	add.s64 	%rd2162, %rd2161, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2151;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 14;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 14;
	mov.b64 	%rd2163, {%r1466, %r1465};
	shf.r.wrap.b32 	%r1467, %r1464, %r1463, 18;
	shf.r.wrap.b32 	%r1468, %r1463, %r1464, 18;
	mov.b64 	%rd2164, {%r1468, %r1467};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 23;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 23;
	mov.b64 	%rd2166, {%r1470, %r1469};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	xor.b64  	%rd2168, %rd2127, %rd2103;
	and.b64  	%rd2169, %rd2151, %rd2168;
	xor.b64  	%rd2170, %rd2169, %rd2103;
	add.s64 	%rd2171, %rd73, %rd1813;
	add.s64 	%rd2172, %rd2171, %rd2079;
	add.s64 	%rd2173, %rd2172, %rd2170;
	add.s64 	%rd2174, %rd2173, %rd2167;
	add.s64 	%rd2175, %rd2174, %rd2090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2162;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 28;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 28;
	mov.b64 	%rd2176, {%r1474, %r1473};
	shf.l.wrap.b32 	%r1475, %r1471, %r1472, 30;
	shf.l.wrap.b32 	%r1476, %r1472, %r1471, 30;
	mov.b64 	%rd2177, {%r1476, %r1475};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 25;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 25;
	mov.b64 	%rd2179, {%r1478, %r1477};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	and.b64  	%rd2181, %rd2162, %rd2138;
	xor.b64  	%rd2182, %rd2162, %rd2138;
	and.b64  	%rd2183, %rd2182, %rd2114;
	or.b64  	%rd2184, %rd2183, %rd2181;
	add.s64 	%rd2185, %rd2180, %rd2184;
	add.s64 	%rd2186, %rd2185, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd2175;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 14;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 14;
	mov.b64 	%rd2187, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1480, %r1479, 18;
	shf.r.wrap.b32 	%r1484, %r1479, %r1480, 18;
	mov.b64 	%rd2188, {%r1484, %r1483};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 23;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 23;
	mov.b64 	%rd2190, {%r1486, %r1485};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2151, %rd2127;
	and.b64  	%rd2193, %rd2175, %rd2192;
	xor.b64  	%rd2194, %rd2193, %rd2127;
	add.s64 	%rd2195, %rd74, %rd1826;
	add.s64 	%rd2196, %rd2195, %rd2103;
	add.s64 	%rd2197, %rd2196, %rd2194;
	add.s64 	%rd2198, %rd2197, %rd2191;
	add.s64 	%rd2199, %rd2198, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd2186;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 28;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 28;
	mov.b64 	%rd2200, {%r1490, %r1489};
	shf.l.wrap.b32 	%r1491, %r1487, %r1488, 30;
	shf.l.wrap.b32 	%r1492, %r1488, %r1487, 30;
	mov.b64 	%rd2201, {%r1492, %r1491};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 25;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 25;
	mov.b64 	%rd2203, {%r1494, %r1493};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	and.b64  	%rd2205, %rd2186, %rd2162;
	xor.b64  	%rd2206, %rd2186, %rd2162;
	and.b64  	%rd2207, %rd2206, %rd2138;
	or.b64  	%rd2208, %rd2207, %rd2205;
	add.s64 	%rd2209, %rd2204, %rd2208;
	add.s64 	%rd2210, %rd2209, %rd2198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd1813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd1813;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 19;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 19;
	mov.b64 	%rd2211, {%r1498, %r1497};
	shf.l.wrap.b32 	%r1499, %r1495, %r1496, 3;
	shf.l.wrap.b32 	%r1500, %r1496, %r1495, 3;
	mov.b64 	%rd2212, {%r1500, %r1499};
	shr.u64 	%rd2213, %rd1813, 6;
	xor.b64  	%rd2214, %rd2212, %rd2213;
	xor.b64  	%rd2215, %rd2214, %rd2211;
	shf.r.wrap.b32 	%r1501, %r1110, %r1109, 1;
	shf.r.wrap.b32 	%r1502, %r1109, %r1110, 1;
	mov.b64 	%rd2216, {%r1502, %r1501};
	shf.r.wrap.b32 	%r1503, %r1110, %r1109, 8;
	shf.r.wrap.b32 	%r1504, %r1109, %r1110, 8;
	mov.b64 	%rd2217, {%r1504, %r1503};
	shr.u64 	%rd2218, %rd1644, 7;
	xor.b64  	%rd2219, %rd2217, %rd2218;
	xor.b64  	%rd2220, %rd2219, %rd2216;
	add.s64 	%rd2221, %rd2220, %rd1631;
	add.s64 	%rd2222, %rd2221, %rd1748;
	add.s64 	%rd2223, %rd2222, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1506}, %rd1826;
	}
	shf.r.wrap.b32 	%r1507, %r1506, %r1505, 19;
	shf.r.wrap.b32 	%r1508, %r1505, %r1506, 19;
	mov.b64 	%rd2224, {%r1508, %r1507};
	shf.l.wrap.b32 	%r1509, %r1505, %r1506, 3;
	shf.l.wrap.b32 	%r1510, %r1506, %r1505, 3;
	mov.b64 	%rd2225, {%r1510, %r1509};
	shr.u64 	%rd2226, %rd1826, 6;
	xor.b64  	%rd2227, %rd2225, %rd2226;
	xor.b64  	%rd2228, %rd2227, %rd2224;
	shf.r.wrap.b32 	%r1511, %r1120, %r1119, 1;
	shf.r.wrap.b32 	%r1512, %r1119, %r1120, 1;
	mov.b64 	%rd2229, {%r1512, %r1511};
	shf.r.wrap.b32 	%r1513, %r1120, %r1119, 8;
	shf.r.wrap.b32 	%r1514, %r1119, %r1120, 8;
	mov.b64 	%rd2230, {%r1514, %r1513};
	shr.u64 	%rd2231, %rd1657, 7;
	xor.b64  	%rd2232, %rd2230, %rd2231;
	xor.b64  	%rd2233, %rd2232, %rd2229;
	add.s64 	%rd2234, %rd2233, %rd1644;
	add.s64 	%rd2235, %rd2234, %rd1761;
	add.s64 	%rd2236, %rd2235, %rd2228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1515,%dummy}, %rd2223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1516}, %rd2223;
	}
	shf.r.wrap.b32 	%r1517, %r1516, %r1515, 19;
	shf.r.wrap.b32 	%r1518, %r1515, %r1516, 19;
	mov.b64 	%rd2237, {%r1518, %r1517};
	shf.l.wrap.b32 	%r1519, %r1515, %r1516, 3;
	shf.l.wrap.b32 	%r1520, %r1516, %r1515, 3;
	mov.b64 	%rd2238, {%r1520, %r1519};
	shr.u64 	%rd2239, %rd2223, 6;
	xor.b64  	%rd2240, %rd2238, %rd2239;
	xor.b64  	%rd2241, %rd2240, %rd2237;
	shf.r.wrap.b32 	%r1521, %r1130, %r1129, 1;
	shf.r.wrap.b32 	%r1522, %r1129, %r1130, 1;
	mov.b64 	%rd2242, {%r1522, %r1521};
	shf.r.wrap.b32 	%r1523, %r1130, %r1129, 8;
	shf.r.wrap.b32 	%r1524, %r1129, %r1130, 8;
	mov.b64 	%rd2243, {%r1524, %r1523};
	shr.u64 	%rd2244, %rd1670, 7;
	xor.b64  	%rd2245, %rd2243, %rd2244;
	xor.b64  	%rd2246, %rd2245, %rd2242;
	add.s64 	%rd2247, %rd2246, %rd1657;
	add.s64 	%rd2248, %rd2247, %rd1774;
	add.s64 	%rd2249, %rd2248, %rd2241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd2236;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 19;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 19;
	mov.b64 	%rd2250, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 3;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 3;
	mov.b64 	%rd2251, {%r1530, %r1529};
	shr.u64 	%rd2252, %rd2236, 6;
	xor.b64  	%rd2253, %rd2251, %rd2252;
	xor.b64  	%rd2254, %rd2253, %rd2250;
	shf.r.wrap.b32 	%r1531, %r1140, %r1139, 1;
	shf.r.wrap.b32 	%r1532, %r1139, %r1140, 1;
	mov.b64 	%rd2255, {%r1532, %r1531};
	shf.r.wrap.b32 	%r1533, %r1140, %r1139, 8;
	shf.r.wrap.b32 	%r1534, %r1139, %r1140, 8;
	mov.b64 	%rd2256, {%r1534, %r1533};
	shr.u64 	%rd2257, %rd1683, 7;
	xor.b64  	%rd2258, %rd2256, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2255;
	add.s64 	%rd2260, %rd2259, %rd1670;
	add.s64 	%rd2261, %rd2260, %rd1787;
	add.s64 	%rd2262, %rd2261, %rd2254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd2249;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 19;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 19;
	mov.b64 	%rd2263, {%r1538, %r1537};
	shf.l.wrap.b32 	%r1539, %r1535, %r1536, 3;
	shf.l.wrap.b32 	%r1540, %r1536, %r1535, 3;
	mov.b64 	%rd2264, {%r1540, %r1539};
	shr.u64 	%rd2265, %rd2249, 6;
	xor.b64  	%rd2266, %rd2264, %rd2265;
	xor.b64  	%rd2267, %rd2266, %rd2263;
	shf.r.wrap.b32 	%r1541, %r1150, %r1149, 1;
	shf.r.wrap.b32 	%r1542, %r1149, %r1150, 1;
	mov.b64 	%rd2268, {%r1542, %r1541};
	shf.r.wrap.b32 	%r1543, %r1150, %r1149, 8;
	shf.r.wrap.b32 	%r1544, %r1149, %r1150, 8;
	mov.b64 	%rd2269, {%r1544, %r1543};
	shr.u64 	%rd2270, %rd1696, 7;
	xor.b64  	%rd2271, %rd2269, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2268;
	add.s64 	%rd2273, %rd2272, %rd1683;
	add.s64 	%rd2274, %rd2273, %rd1800;
	add.s64 	%rd2275, %rd2274, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd2262;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 19;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 19;
	mov.b64 	%rd2276, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 3;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 3;
	mov.b64 	%rd2277, {%r1550, %r1549};
	shr.u64 	%rd2278, %rd2262, 6;
	xor.b64  	%rd2279, %rd2277, %rd2278;
	xor.b64  	%rd2280, %rd2279, %rd2276;
	shf.r.wrap.b32 	%r1551, %r1160, %r1159, 1;
	shf.r.wrap.b32 	%r1552, %r1159, %r1160, 1;
	mov.b64 	%rd2281, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1160, %r1159, 8;
	shf.r.wrap.b32 	%r1554, %r1159, %r1160, 8;
	mov.b64 	%rd2282, {%r1554, %r1553};
	shr.u64 	%rd2283, %rd1709, 7;
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2284, %rd2281;
	add.s64 	%rd2286, %rd2285, %rd1696;
	add.s64 	%rd2287, %rd2286, %rd1813;
	add.s64 	%rd2288, %rd2287, %rd2280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd2275;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 19;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 19;
	mov.b64 	%rd2289, {%r1558, %r1557};
	shf.l.wrap.b32 	%r1559, %r1555, %r1556, 3;
	shf.l.wrap.b32 	%r1560, %r1556, %r1555, 3;
	mov.b64 	%rd2290, {%r1560, %r1559};
	shr.u64 	%rd2291, %rd2275, 6;
	xor.b64  	%rd2292, %rd2290, %rd2291;
	xor.b64  	%rd2293, %rd2292, %rd2289;
	shf.r.wrap.b32 	%r1561, %r1170, %r1169, 1;
	shf.r.wrap.b32 	%r1562, %r1169, %r1170, 1;
	mov.b64 	%rd2294, {%r1562, %r1561};
	shf.r.wrap.b32 	%r1563, %r1170, %r1169, 8;
	shf.r.wrap.b32 	%r1564, %r1169, %r1170, 8;
	mov.b64 	%rd2295, {%r1564, %r1563};
	shr.u64 	%rd2296, %rd1722, 7;
	xor.b64  	%rd2297, %rd2295, %rd2296;
	xor.b64  	%rd2298, %rd2297, %rd2294;
	add.s64 	%rd2299, %rd2298, %rd1709;
	add.s64 	%rd2300, %rd2299, %rd1826;
	add.s64 	%rd2301, %rd2300, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd2288;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 19;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 19;
	mov.b64 	%rd2302, {%r1568, %r1567};
	shf.l.wrap.b32 	%r1569, %r1565, %r1566, 3;
	shf.l.wrap.b32 	%r1570, %r1566, %r1565, 3;
	mov.b64 	%rd2303, {%r1570, %r1569};
	shr.u64 	%rd2304, %rd2288, 6;
	xor.b64  	%rd2305, %rd2303, %rd2304;
	xor.b64  	%rd2306, %rd2305, %rd2302;
	shf.r.wrap.b32 	%r1571, %r1180, %r1179, 1;
	shf.r.wrap.b32 	%r1572, %r1179, %r1180, 1;
	mov.b64 	%rd2307, {%r1572, %r1571};
	shf.r.wrap.b32 	%r1573, %r1180, %r1179, 8;
	shf.r.wrap.b32 	%r1574, %r1179, %r1180, 8;
	mov.b64 	%rd2308, {%r1574, %r1573};
	shr.u64 	%rd2309, %rd1735, 7;
	xor.b64  	%rd2310, %rd2308, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2307;
	add.s64 	%rd2312, %rd2311, %rd1722;
	add.s64 	%rd2313, %rd2312, %rd2223;
	add.s64 	%rd2314, %rd2313, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd2301;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 19;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 19;
	mov.b64 	%rd2315, {%r1578, %r1577};
	shf.l.wrap.b32 	%r1579, %r1575, %r1576, 3;
	shf.l.wrap.b32 	%r1580, %r1576, %r1575, 3;
	mov.b64 	%rd2316, {%r1580, %r1579};
	shr.u64 	%rd2317, %rd2301, 6;
	xor.b64  	%rd2318, %rd2316, %rd2317;
	xor.b64  	%rd2319, %rd2318, %rd2315;
	shf.r.wrap.b32 	%r1581, %r1190, %r1189, 1;
	shf.r.wrap.b32 	%r1582, %r1189, %r1190, 1;
	mov.b64 	%rd2320, {%r1582, %r1581};
	shf.r.wrap.b32 	%r1583, %r1190, %r1189, 8;
	shf.r.wrap.b32 	%r1584, %r1189, %r1190, 8;
	mov.b64 	%rd2321, {%r1584, %r1583};
	shr.u64 	%rd2322, %rd1748, 7;
	xor.b64  	%rd2323, %rd2321, %rd2322;
	xor.b64  	%rd2324, %rd2323, %rd2320;
	add.s64 	%rd2325, %rd2324, %rd1735;
	add.s64 	%rd2326, %rd2325, %rd2236;
	add.s64 	%rd2327, %rd2326, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1586}, %rd2314;
	}
	shf.r.wrap.b32 	%r1587, %r1586, %r1585, 19;
	shf.r.wrap.b32 	%r1588, %r1585, %r1586, 19;
	mov.b64 	%rd2328, {%r1588, %r1587};
	shf.l.wrap.b32 	%r1589, %r1585, %r1586, 3;
	shf.l.wrap.b32 	%r1590, %r1586, %r1585, 3;
	mov.b64 	%rd2329, {%r1590, %r1589};
	shr.u64 	%rd2330, %rd2314, 6;
	xor.b64  	%rd2331, %rd2329, %rd2330;
	xor.b64  	%rd2332, %rd2331, %rd2328;
	shf.r.wrap.b32 	%r1591, %r1200, %r1199, 1;
	shf.r.wrap.b32 	%r1592, %r1199, %r1200, 1;
	mov.b64 	%rd2333, {%r1592, %r1591};
	shf.r.wrap.b32 	%r1593, %r1200, %r1199, 8;
	shf.r.wrap.b32 	%r1594, %r1199, %r1200, 8;
	mov.b64 	%rd2334, {%r1594, %r1593};
	shr.u64 	%rd2335, %rd1761, 7;
	xor.b64  	%rd2336, %rd2334, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2333;
	add.s64 	%rd2338, %rd2337, %rd1748;
	add.s64 	%rd2339, %rd2338, %rd2249;
	add.s64 	%rd2340, %rd2339, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd2327;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 19;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 19;
	mov.b64 	%rd2341, {%r1598, %r1597};
	shf.l.wrap.b32 	%r1599, %r1595, %r1596, 3;
	shf.l.wrap.b32 	%r1600, %r1596, %r1595, 3;
	mov.b64 	%rd2342, {%r1600, %r1599};
	shr.u64 	%rd2343, %rd2327, 6;
	xor.b64  	%rd2344, %rd2342, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2341;
	shf.r.wrap.b32 	%r1601, %r1210, %r1209, 1;
	shf.r.wrap.b32 	%r1602, %r1209, %r1210, 1;
	mov.b64 	%rd2346, {%r1602, %r1601};
	shf.r.wrap.b32 	%r1603, %r1210, %r1209, 8;
	shf.r.wrap.b32 	%r1604, %r1209, %r1210, 8;
	mov.b64 	%rd2347, {%r1604, %r1603};
	shr.u64 	%rd2348, %rd1774, 7;
	xor.b64  	%rd2349, %rd2347, %rd2348;
	xor.b64  	%rd2350, %rd2349, %rd2346;
	add.s64 	%rd2351, %rd2350, %rd1761;
	add.s64 	%rd2352, %rd2351, %rd2262;
	add.s64 	%rd2353, %rd2352, %rd2345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd2340;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 19;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 19;
	mov.b64 	%rd2354, {%r1608, %r1607};
	shf.l.wrap.b32 	%r1609, %r1605, %r1606, 3;
	shf.l.wrap.b32 	%r1610, %r1606, %r1605, 3;
	mov.b64 	%rd2355, {%r1610, %r1609};
	shr.u64 	%rd2356, %rd2340, 6;
	xor.b64  	%rd2357, %rd2355, %rd2356;
	xor.b64  	%rd2358, %rd2357, %rd2354;
	shf.r.wrap.b32 	%r1611, %r1220, %r1219, 1;
	shf.r.wrap.b32 	%r1612, %r1219, %r1220, 1;
	mov.b64 	%rd2359, {%r1612, %r1611};
	shf.r.wrap.b32 	%r1613, %r1220, %r1219, 8;
	shf.r.wrap.b32 	%r1614, %r1219, %r1220, 8;
	mov.b64 	%rd2360, {%r1614, %r1613};
	shr.u64 	%rd2361, %rd1787, 7;
	xor.b64  	%rd2362, %rd2360, %rd2361;
	xor.b64  	%rd2363, %rd2362, %rd2359;
	add.s64 	%rd2364, %rd2363, %rd1774;
	add.s64 	%rd2365, %rd2364, %rd2275;
	add.s64 	%rd2366, %rd2365, %rd2358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2353;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 19;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 19;
	mov.b64 	%rd2367, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 3;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 3;
	mov.b64 	%rd2368, {%r1620, %r1619};
	shr.u64 	%rd2369, %rd2353, 6;
	xor.b64  	%rd2370, %rd2368, %rd2369;
	xor.b64  	%rd2371, %rd2370, %rd2367;
	shf.r.wrap.b32 	%r1621, %r1230, %r1229, 1;
	shf.r.wrap.b32 	%r1622, %r1229, %r1230, 1;
	mov.b64 	%rd2372, {%r1622, %r1621};
	shf.r.wrap.b32 	%r1623, %r1230, %r1229, 8;
	shf.r.wrap.b32 	%r1624, %r1229, %r1230, 8;
	mov.b64 	%rd2373, {%r1624, %r1623};
	shr.u64 	%rd2374, %rd1800, 7;
	xor.b64  	%rd2375, %rd2373, %rd2374;
	xor.b64  	%rd2376, %rd2375, %rd2372;
	add.s64 	%rd2377, %rd2376, %rd1787;
	add.s64 	%rd2378, %rd2377, %rd2288;
	add.s64 	%rd2379, %rd2378, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1625,%dummy}, %rd2366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1626}, %rd2366;
	}
	shf.r.wrap.b32 	%r1627, %r1626, %r1625, 19;
	shf.r.wrap.b32 	%r1628, %r1625, %r1626, 19;
	mov.b64 	%rd2380, {%r1628, %r1627};
	shf.l.wrap.b32 	%r1629, %r1625, %r1626, 3;
	shf.l.wrap.b32 	%r1630, %r1626, %r1625, 3;
	mov.b64 	%rd2381, {%r1630, %r1629};
	shr.u64 	%rd2382, %rd2366, 6;
	xor.b64  	%rd2383, %rd2381, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2380;
	shf.r.wrap.b32 	%r1631, %r1496, %r1495, 1;
	shf.r.wrap.b32 	%r1632, %r1495, %r1496, 1;
	mov.b64 	%rd2385, {%r1632, %r1631};
	shf.r.wrap.b32 	%r1633, %r1496, %r1495, 8;
	shf.r.wrap.b32 	%r1634, %r1495, %r1496, 8;
	mov.b64 	%rd2386, {%r1634, %r1633};
	shr.u64 	%rd2387, %rd1813, 7;
	xor.b64  	%rd2388, %rd2386, %rd2387;
	xor.b64  	%rd2389, %rd2388, %rd2385;
	add.s64 	%rd2390, %rd2389, %rd1800;
	add.s64 	%rd2391, %rd2390, %rd2301;
	add.s64 	%rd2392, %rd2391, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd2379;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 19;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 19;
	mov.b64 	%rd2393, {%r1638, %r1637};
	shf.l.wrap.b32 	%r1639, %r1635, %r1636, 3;
	shf.l.wrap.b32 	%r1640, %r1636, %r1635, 3;
	mov.b64 	%rd2394, {%r1640, %r1639};
	shr.u64 	%rd2395, %rd2379, 6;
	xor.b64  	%rd2396, %rd2394, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2393;
	shf.r.wrap.b32 	%r1641, %r1506, %r1505, 1;
	shf.r.wrap.b32 	%r1642, %r1505, %r1506, 1;
	mov.b64 	%rd2398, {%r1642, %r1641};
	shf.r.wrap.b32 	%r1643, %r1506, %r1505, 8;
	shf.r.wrap.b32 	%r1644, %r1505, %r1506, 8;
	mov.b64 	%rd2399, {%r1644, %r1643};
	shr.u64 	%rd2400, %rd1826, 7;
	xor.b64  	%rd2401, %rd2399, %rd2400;
	xor.b64  	%rd2402, %rd2401, %rd2398;
	add.s64 	%rd2403, %rd2402, %rd1813;
	add.s64 	%rd2404, %rd2403, %rd2314;
	add.s64 	%rd2405, %rd2404, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1645,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1646}, %rd2392;
	}
	shf.r.wrap.b32 	%r1647, %r1646, %r1645, 19;
	shf.r.wrap.b32 	%r1648, %r1645, %r1646, 19;
	mov.b64 	%rd2406, {%r1648, %r1647};
	shf.l.wrap.b32 	%r1649, %r1645, %r1646, 3;
	shf.l.wrap.b32 	%r1650, %r1646, %r1645, 3;
	mov.b64 	%rd2407, {%r1650, %r1649};
	shr.u64 	%rd2408, %rd2392, 6;
	xor.b64  	%rd2409, %rd2407, %rd2408;
	xor.b64  	%rd2410, %rd2409, %rd2406;
	shf.r.wrap.b32 	%r1651, %r1516, %r1515, 1;
	shf.r.wrap.b32 	%r1652, %r1515, %r1516, 1;
	mov.b64 	%rd2411, {%r1652, %r1651};
	shf.r.wrap.b32 	%r1653, %r1516, %r1515, 8;
	shf.r.wrap.b32 	%r1654, %r1515, %r1516, 8;
	mov.b64 	%rd2412, {%r1654, %r1653};
	shr.u64 	%rd2413, %rd2223, 7;
	xor.b64  	%rd2414, %rd2412, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2411;
	add.s64 	%rd2416, %rd2415, %rd1826;
	add.s64 	%rd2417, %rd2416, %rd2327;
	add.s64 	%rd2418, %rd2417, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd2199;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 14;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 14;
	mov.b64 	%rd2419, {%r1658, %r1657};
	shf.r.wrap.b32 	%r1659, %r1656, %r1655, 18;
	shf.r.wrap.b32 	%r1660, %r1655, %r1656, 18;
	mov.b64 	%rd2420, {%r1660, %r1659};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	shf.l.wrap.b32 	%r1661, %r1655, %r1656, 23;
	shf.l.wrap.b32 	%r1662, %r1656, %r1655, 23;
	mov.b64 	%rd2422, {%r1662, %r1661};
	xor.b64  	%rd2423, %rd2421, %rd2422;
	xor.b64  	%rd2424, %rd2175, %rd2151;
	and.b64  	%rd2425, %rd2199, %rd2424;
	xor.b64  	%rd2426, %rd2425, %rd2151;
	add.s64 	%rd2427, %rd2426, %rd2127;
	add.s64 	%rd2428, %rd2427, %rd2423;
	add.s64 	%rd2429, %rd2428, %rd2223;
	add.s64 	%rd2430, %rd2429, %rd75;
	add.s64 	%rd2431, %rd2430, %rd2138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd2210;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 28;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 28;
	mov.b64 	%rd2432, {%r1666, %r1665};
	shf.l.wrap.b32 	%r1667, %r1663, %r1664, 30;
	shf.l.wrap.b32 	%r1668, %r1664, %r1663, 30;
	mov.b64 	%rd2433, {%r1668, %r1667};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	shf.l.wrap.b32 	%r1669, %r1663, %r1664, 25;
	shf.l.wrap.b32 	%r1670, %r1664, %r1663, 25;
	mov.b64 	%rd2435, {%r1670, %r1669};
	xor.b64  	%rd2436, %rd2434, %rd2435;
	and.b64  	%rd2437, %rd2210, %rd2186;
	xor.b64  	%rd2438, %rd2210, %rd2186;
	and.b64  	%rd2439, %rd2438, %rd2162;
	or.b64  	%rd2440, %rd2439, %rd2437;
	add.s64 	%rd2441, %rd2436, %rd2440;
	add.s64 	%rd2442, %rd2441, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd2431;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 14;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 14;
	mov.b64 	%rd2443, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 18;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 18;
	mov.b64 	%rd2444, {%r1676, %r1675};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 23;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 23;
	mov.b64 	%rd2446, {%r1678, %r1677};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	xor.b64  	%rd2448, %rd2199, %rd2175;
	and.b64  	%rd2449, %rd2431, %rd2448;
	xor.b64  	%rd2450, %rd2449, %rd2175;
	add.s64 	%rd2451, %rd2236, %rd2151;
	add.s64 	%rd2452, %rd2451, %rd76;
	add.s64 	%rd2453, %rd2452, %rd2450;
	add.s64 	%rd2454, %rd2453, %rd2447;
	add.s64 	%rd2455, %rd2454, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2442;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 28;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 28;
	mov.b64 	%rd2456, {%r1682, %r1681};
	shf.l.wrap.b32 	%r1683, %r1679, %r1680, 30;
	shf.l.wrap.b32 	%r1684, %r1680, %r1679, 30;
	mov.b64 	%rd2457, {%r1684, %r1683};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 25;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 25;
	mov.b64 	%rd2459, {%r1686, %r1685};
	xor.b64  	%rd2460, %rd2458, %rd2459;
	and.b64  	%rd2461, %rd2442, %rd2210;
	xor.b64  	%rd2462, %rd2442, %rd2210;
	and.b64  	%rd2463, %rd2462, %rd2186;
	or.b64  	%rd2464, %rd2463, %rd2461;
	add.s64 	%rd2465, %rd2460, %rd2464;
	add.s64 	%rd2466, %rd2465, %rd2454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2455;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 14;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 14;
	mov.b64 	%rd2467, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1688, %r1687, 18;
	shf.r.wrap.b32 	%r1692, %r1687, %r1688, 18;
	mov.b64 	%rd2468, {%r1692, %r1691};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 23;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 23;
	mov.b64 	%rd2470, {%r1694, %r1693};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	xor.b64  	%rd2472, %rd2431, %rd2199;
	and.b64  	%rd2473, %rd2455, %rd2472;
	xor.b64  	%rd2474, %rd2473, %rd2199;
	add.s64 	%rd2475, %rd2249, %rd2175;
	add.s64 	%rd2476, %rd2475, %rd77;
	add.s64 	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2477, %rd2471;
	add.s64 	%rd2479, %rd2478, %rd2186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2466;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 28;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 28;
	mov.b64 	%rd2480, {%r1698, %r1697};
	shf.l.wrap.b32 	%r1699, %r1695, %r1696, 30;
	shf.l.wrap.b32 	%r1700, %r1696, %r1695, 30;
	mov.b64 	%rd2481, {%r1700, %r1699};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 25;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 25;
	mov.b64 	%rd2483, {%r1702, %r1701};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	and.b64  	%rd2485, %rd2466, %rd2442;
	xor.b64  	%rd2486, %rd2466, %rd2442;
	and.b64  	%rd2487, %rd2486, %rd2210;
	or.b64  	%rd2488, %rd2487, %rd2485;
	add.s64 	%rd2489, %rd2484, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd2478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2479;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd2491, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd2492, {%r1708, %r1707};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd2494, {%r1710, %r1709};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	xor.b64  	%rd2496, %rd2455, %rd2431;
	and.b64  	%rd2497, %rd2479, %rd2496;
	xor.b64  	%rd2498, %rd2497, %rd2431;
	add.s64 	%rd2499, %rd2262, %rd2199;
	add.s64 	%rd2500, %rd2499, %rd78;
	add.s64 	%rd2501, %rd2500, %rd2498;
	add.s64 	%rd2502, %rd2501, %rd2495;
	add.s64 	%rd2503, %rd2502, %rd2210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2490;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd2504, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd2505, {%r1716, %r1715};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd2507, {%r1718, %r1717};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	and.b64  	%rd2509, %rd2490, %rd2466;
	xor.b64  	%rd2510, %rd2490, %rd2466;
	and.b64  	%rd2511, %rd2510, %rd2442;
	or.b64  	%rd2512, %rd2511, %rd2509;
	add.s64 	%rd2513, %rd2508, %rd2512;
	add.s64 	%rd2514, %rd2513, %rd2502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2503;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd2515, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd2516, {%r1724, %r1723};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd2518, {%r1726, %r1725};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2479, %rd2455;
	and.b64  	%rd2521, %rd2503, %rd2520;
	xor.b64  	%rd2522, %rd2521, %rd2455;
	add.s64 	%rd2523, %rd2431, %rd2275;
	add.s64 	%rd2524, %rd2523, %rd79;
	add.s64 	%rd2525, %rd2524, %rd2522;
	add.s64 	%rd2526, %rd2525, %rd2519;
	add.s64 	%rd2527, %rd2526, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2514;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd2528, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd2529, {%r1732, %r1731};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd2531, {%r1734, %r1733};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	and.b64  	%rd2533, %rd2514, %rd2490;
	xor.b64  	%rd2534, %rd2514, %rd2490;
	and.b64  	%rd2535, %rd2534, %rd2466;
	or.b64  	%rd2536, %rd2535, %rd2533;
	add.s64 	%rd2537, %rd2532, %rd2536;
	add.s64 	%rd2538, %rd2537, %rd2526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2527;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd2539, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd2540, {%r1740, %r1739};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd2542, {%r1742, %r1741};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2503, %rd2479;
	and.b64  	%rd2545, %rd2527, %rd2544;
	xor.b64  	%rd2546, %rd2545, %rd2479;
	add.s64 	%rd2547, %rd80, %rd2288;
	add.s64 	%rd2548, %rd2547, %rd2455;
	add.s64 	%rd2549, %rd2548, %rd2546;
	add.s64 	%rd2550, %rd2549, %rd2543;
	add.s64 	%rd2551, %rd2550, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2538;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd2552, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd2553, {%r1748, %r1747};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd2555, {%r1750, %r1749};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	and.b64  	%rd2557, %rd2538, %rd2514;
	xor.b64  	%rd2558, %rd2538, %rd2514;
	and.b64  	%rd2559, %rd2558, %rd2490;
	or.b64  	%rd2560, %rd2559, %rd2557;
	add.s64 	%rd2561, %rd2556, %rd2560;
	add.s64 	%rd2562, %rd2561, %rd2550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2551;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 14;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 14;
	mov.b64 	%rd2563, {%r1754, %r1753};
	shf.r.wrap.b32 	%r1755, %r1752, %r1751, 18;
	shf.r.wrap.b32 	%r1756, %r1751, %r1752, 18;
	mov.b64 	%rd2564, {%r1756, %r1755};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 23;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 23;
	mov.b64 	%rd2566, {%r1758, %r1757};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	xor.b64  	%rd2568, %rd2527, %rd2503;
	and.b64  	%rd2569, %rd2551, %rd2568;
	xor.b64  	%rd2570, %rd2569, %rd2503;
	add.s64 	%rd2571, %rd81, %rd2301;
	add.s64 	%rd2572, %rd2571, %rd2479;
	add.s64 	%rd2573, %rd2572, %rd2570;
	add.s64 	%rd2574, %rd2573, %rd2567;
	add.s64 	%rd2575, %rd2574, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2562;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 28;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 28;
	mov.b64 	%rd2576, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 30;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 30;
	mov.b64 	%rd2577, {%r1764, %r1763};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 25;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 25;
	mov.b64 	%rd2579, {%r1766, %r1765};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	and.b64  	%rd2581, %rd2562, %rd2538;
	xor.b64  	%rd2582, %rd2562, %rd2538;
	and.b64  	%rd2583, %rd2582, %rd2514;
	or.b64  	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2580, %rd2584;
	add.s64 	%rd2586, %rd2585, %rd2574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2575;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 14;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 14;
	mov.b64 	%rd2587, {%r1770, %r1769};
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 18;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 18;
	mov.b64 	%rd2588, {%r1772, %r1771};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 23;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 23;
	mov.b64 	%rd2590, {%r1774, %r1773};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2551, %rd2527;
	and.b64  	%rd2593, %rd2575, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2527;
	add.s64 	%rd2595, %rd82, %rd2314;
	add.s64 	%rd2596, %rd2595, %rd2503;
	add.s64 	%rd2597, %rd2596, %rd2594;
	add.s64 	%rd2598, %rd2597, %rd2591;
	add.s64 	%rd2599, %rd2598, %rd2514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2586;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 28;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 28;
	mov.b64 	%rd2600, {%r1778, %r1777};
	shf.l.wrap.b32 	%r1779, %r1775, %r1776, 30;
	shf.l.wrap.b32 	%r1780, %r1776, %r1775, 30;
	mov.b64 	%rd2601, {%r1780, %r1779};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 25;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 25;
	mov.b64 	%rd2603, {%r1782, %r1781};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	and.b64  	%rd2605, %rd2586, %rd2562;
	xor.b64  	%rd2606, %rd2586, %rd2562;
	and.b64  	%rd2607, %rd2606, %rd2538;
	or.b64  	%rd2608, %rd2607, %rd2605;
	add.s64 	%rd2609, %rd2604, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2599;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 14;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 14;
	mov.b64 	%rd2611, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1784, %r1783, 18;
	shf.r.wrap.b32 	%r1788, %r1783, %r1784, 18;
	mov.b64 	%rd2612, {%r1788, %r1787};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 23;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 23;
	mov.b64 	%rd2614, {%r1790, %r1789};
	xor.b64  	%rd2615, %rd2613, %rd2614;
	xor.b64  	%rd2616, %rd2575, %rd2551;
	and.b64  	%rd2617, %rd2599, %rd2616;
	xor.b64  	%rd2618, %rd2617, %rd2551;
	add.s64 	%rd2619, %rd83, %rd2327;
	add.s64 	%rd2620, %rd2619, %rd2527;
	add.s64 	%rd2621, %rd2620, %rd2618;
	add.s64 	%rd2622, %rd2621, %rd2615;
	add.s64 	%rd2623, %rd2622, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2610;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 28;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 28;
	mov.b64 	%rd2624, {%r1794, %r1793};
	shf.l.wrap.b32 	%r1795, %r1791, %r1792, 30;
	shf.l.wrap.b32 	%r1796, %r1792, %r1791, 30;
	mov.b64 	%rd2625, {%r1796, %r1795};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 25;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 25;
	mov.b64 	%rd2627, {%r1798, %r1797};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	and.b64  	%rd2629, %rd2610, %rd2586;
	xor.b64  	%rd2630, %rd2610, %rd2586;
	and.b64  	%rd2631, %rd2630, %rd2562;
	or.b64  	%rd2632, %rd2631, %rd2629;
	add.s64 	%rd2633, %rd2628, %rd2632;
	add.s64 	%rd2634, %rd2633, %rd2622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2623;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 14;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 14;
	mov.b64 	%rd2635, {%r1802, %r1801};
	shf.r.wrap.b32 	%r1803, %r1800, %r1799, 18;
	shf.r.wrap.b32 	%r1804, %r1799, %r1800, 18;
	mov.b64 	%rd2636, {%r1804, %r1803};
	xor.b64  	%rd2637, %rd2635, %rd2636;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 23;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 23;
	mov.b64 	%rd2638, {%r1806, %r1805};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2599, %rd2575;
	and.b64  	%rd2641, %rd2623, %rd2640;
	xor.b64  	%rd2642, %rd2641, %rd2575;
	add.s64 	%rd2643, %rd84, %rd2340;
	add.s64 	%rd2644, %rd2643, %rd2551;
	add.s64 	%rd2645, %rd2644, %rd2642;
	add.s64 	%rd2646, %rd2645, %rd2639;
	add.s64 	%rd2647, %rd2646, %rd2562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2634;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 28;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 28;
	mov.b64 	%rd2648, {%r1810, %r1809};
	shf.l.wrap.b32 	%r1811, %r1807, %r1808, 30;
	shf.l.wrap.b32 	%r1812, %r1808, %r1807, 30;
	mov.b64 	%rd2649, {%r1812, %r1811};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 25;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 25;
	mov.b64 	%rd2651, {%r1814, %r1813};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	and.b64  	%rd2653, %rd2634, %rd2610;
	xor.b64  	%rd2654, %rd2634, %rd2610;
	and.b64  	%rd2655, %rd2654, %rd2586;
	or.b64  	%rd2656, %rd2655, %rd2653;
	add.s64 	%rd2657, %rd2652, %rd2656;
	add.s64 	%rd2658, %rd2657, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2647;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2659, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2660, {%r1820, %r1819};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2662, {%r1822, %r1821};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2623, %rd2599;
	and.b64  	%rd2665, %rd2647, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2599;
	add.s64 	%rd2667, %rd85, %rd2353;
	add.s64 	%rd2668, %rd2667, %rd2575;
	add.s64 	%rd2669, %rd2668, %rd2666;
	add.s64 	%rd2670, %rd2669, %rd2663;
	add.s64 	%rd2671, %rd2670, %rd2586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2658;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2672, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2673, {%r1828, %r1827};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2675, {%r1830, %r1829};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	and.b64  	%rd2677, %rd2658, %rd2634;
	xor.b64  	%rd2678, %rd2658, %rd2634;
	and.b64  	%rd2679, %rd2678, %rd2610;
	or.b64  	%rd2680, %rd2679, %rd2677;
	add.s64 	%rd2681, %rd2676, %rd2680;
	add.s64 	%rd2682, %rd2681, %rd2670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2671;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 14;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 14;
	mov.b64 	%rd2683, {%r1834, %r1833};
	shf.r.wrap.b32 	%r1835, %r1832, %r1831, 18;
	shf.r.wrap.b32 	%r1836, %r1831, %r1832, 18;
	mov.b64 	%rd2684, {%r1836, %r1835};
	xor.b64  	%rd2685, %rd2683, %rd2684;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 23;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 23;
	mov.b64 	%rd2686, {%r1838, %r1837};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	xor.b64  	%rd2688, %rd2647, %rd2623;
	and.b64  	%rd2689, %rd2671, %rd2688;
	xor.b64  	%rd2690, %rd2689, %rd2623;
	add.s64 	%rd2691, %rd86, %rd2366;
	add.s64 	%rd2692, %rd2691, %rd2599;
	add.s64 	%rd2693, %rd2692, %rd2690;
	add.s64 	%rd2694, %rd2693, %rd2687;
	add.s64 	%rd2695, %rd2694, %rd2610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2682;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 28;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 28;
	mov.b64 	%rd2696, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 30;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 30;
	mov.b64 	%rd2697, {%r1844, %r1843};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 25;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 25;
	mov.b64 	%rd2699, {%r1846, %r1845};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	and.b64  	%rd2701, %rd2682, %rd2658;
	xor.b64  	%rd2702, %rd2682, %rd2658;
	and.b64  	%rd2703, %rd2702, %rd2634;
	or.b64  	%rd2704, %rd2703, %rd2701;
	add.s64 	%rd2705, %rd2700, %rd2704;
	add.s64 	%rd2706, %rd2705, %rd2694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2695;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 14;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 14;
	mov.b64 	%rd2707, {%r1850, %r1849};
	shf.r.wrap.b32 	%r1851, %r1848, %r1847, 18;
	shf.r.wrap.b32 	%r1852, %r1847, %r1848, 18;
	mov.b64 	%rd2708, {%r1852, %r1851};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 23;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 23;
	mov.b64 	%rd2710, {%r1854, %r1853};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	xor.b64  	%rd2712, %rd2671, %rd2647;
	and.b64  	%rd2713, %rd2695, %rd2712;
	xor.b64  	%rd2714, %rd2713, %rd2647;
	add.s64 	%rd2715, %rd87, %rd2379;
	add.s64 	%rd2716, %rd2715, %rd2623;
	add.s64 	%rd2717, %rd2716, %rd2714;
	add.s64 	%rd2718, %rd2717, %rd2711;
	add.s64 	%rd2719, %rd2718, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2706;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 28;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 28;
	mov.b64 	%rd2720, {%r1858, %r1857};
	shf.l.wrap.b32 	%r1859, %r1855, %r1856, 30;
	shf.l.wrap.b32 	%r1860, %r1856, %r1855, 30;
	mov.b64 	%rd2721, {%r1860, %r1859};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	shf.l.wrap.b32 	%r1861, %r1855, %r1856, 25;
	shf.l.wrap.b32 	%r1862, %r1856, %r1855, 25;
	mov.b64 	%rd2723, {%r1862, %r1861};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	and.b64  	%rd2725, %rd2706, %rd2682;
	xor.b64  	%rd2726, %rd2706, %rd2682;
	and.b64  	%rd2727, %rd2726, %rd2658;
	or.b64  	%rd2728, %rd2727, %rd2725;
	add.s64 	%rd2729, %rd2724, %rd2728;
	add.s64 	%rd2730, %rd2729, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd2719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd2719;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 14;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 14;
	mov.b64 	%rd2731, {%r1866, %r1865};
	shf.r.wrap.b32 	%r1867, %r1864, %r1863, 18;
	shf.r.wrap.b32 	%r1868, %r1863, %r1864, 18;
	mov.b64 	%rd2732, {%r1868, %r1867};
	xor.b64  	%rd2733, %rd2731, %rd2732;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 23;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 23;
	mov.b64 	%rd2734, {%r1870, %r1869};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	xor.b64  	%rd2736, %rd2695, %rd2671;
	and.b64  	%rd2737, %rd2719, %rd2736;
	xor.b64  	%rd2738, %rd2737, %rd2671;
	add.s64 	%rd2739, %rd88, %rd2392;
	add.s64 	%rd2740, %rd2739, %rd2647;
	add.s64 	%rd2741, %rd2740, %rd2738;
	add.s64 	%rd2742, %rd2741, %rd2735;
	add.s64 	%rd2743, %rd2742, %rd2658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2730;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 28;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 28;
	mov.b64 	%rd2744, {%r1874, %r1873};
	shf.l.wrap.b32 	%r1875, %r1871, %r1872, 30;
	shf.l.wrap.b32 	%r1876, %r1872, %r1871, 30;
	mov.b64 	%rd2745, {%r1876, %r1875};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 25;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 25;
	mov.b64 	%rd2747, {%r1878, %r1877};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	and.b64  	%rd2749, %rd2730, %rd2706;
	xor.b64  	%rd2750, %rd2730, %rd2706;
	and.b64  	%rd2751, %rd2750, %rd2682;
	or.b64  	%rd2752, %rd2751, %rd2749;
	add.s64 	%rd2753, %rd2748, %rd2752;
	add.s64 	%rd2754, %rd2753, %rd2742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2743;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 14;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 14;
	mov.b64 	%rd2755, {%r1882, %r1881};
	shf.r.wrap.b32 	%r1883, %r1880, %r1879, 18;
	shf.r.wrap.b32 	%r1884, %r1879, %r1880, 18;
	mov.b64 	%rd2756, {%r1884, %r1883};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	shf.l.wrap.b32 	%r1885, %r1879, %r1880, 23;
	shf.l.wrap.b32 	%r1886, %r1880, %r1879, 23;
	mov.b64 	%rd2758, {%r1886, %r1885};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd2719, %rd2695;
	and.b64  	%rd2761, %rd2743, %rd2760;
	xor.b64  	%rd2762, %rd2761, %rd2695;
	add.s64 	%rd2763, %rd89, %rd2405;
	add.s64 	%rd2764, %rd2763, %rd2671;
	add.s64 	%rd2765, %rd2764, %rd2762;
	add.s64 	%rd2766, %rd2765, %rd2759;
	add.s64 	%rd2767, %rd2766, %rd2682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd2754;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 28;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 28;
	mov.b64 	%rd2768, {%r1890, %r1889};
	shf.l.wrap.b32 	%r1891, %r1887, %r1888, 30;
	shf.l.wrap.b32 	%r1892, %r1888, %r1887, 30;
	mov.b64 	%rd2769, {%r1892, %r1891};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	shf.l.wrap.b32 	%r1893, %r1887, %r1888, 25;
	shf.l.wrap.b32 	%r1894, %r1888, %r1887, 25;
	mov.b64 	%rd2771, {%r1894, %r1893};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	and.b64  	%rd2773, %rd2754, %rd2730;
	xor.b64  	%rd2774, %rd2754, %rd2730;
	and.b64  	%rd2775, %rd2774, %rd2706;
	or.b64  	%rd2776, %rd2775, %rd2773;
	add.s64 	%rd2777, %rd2772, %rd2776;
	add.s64 	%rd2778, %rd2777, %rd2766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd2767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2767;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 14;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 14;
	mov.b64 	%rd2779, {%r1898, %r1897};
	shf.r.wrap.b32 	%r1899, %r1896, %r1895, 18;
	shf.r.wrap.b32 	%r1900, %r1895, %r1896, 18;
	mov.b64 	%rd2780, {%r1900, %r1899};
	xor.b64  	%rd2781, %rd2779, %rd2780;
	shf.l.wrap.b32 	%r1901, %r1895, %r1896, 23;
	shf.l.wrap.b32 	%r1902, %r1896, %r1895, 23;
	mov.b64 	%rd2782, {%r1902, %r1901};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd2743, %rd2719;
	and.b64  	%rd2785, %rd2767, %rd2784;
	xor.b64  	%rd2786, %rd2785, %rd2719;
	add.s64 	%rd2787, %rd90, %rd2418;
	add.s64 	%rd2788, %rd2787, %rd2695;
	add.s64 	%rd2789, %rd2788, %rd2786;
	add.s64 	%rd2790, %rd2789, %rd2783;
	add.s64 	%rd2791, %rd2790, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd2778;
	}
	shf.r.wrap.b32 	%r1905, %r1904, %r1903, 28;
	shf.r.wrap.b32 	%r1906, %r1903, %r1904, 28;
	mov.b64 	%rd2792, {%r1906, %r1905};
	shf.l.wrap.b32 	%r1907, %r1903, %r1904, 30;
	shf.l.wrap.b32 	%r1908, %r1904, %r1903, 30;
	mov.b64 	%rd2793, {%r1908, %r1907};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	shf.l.wrap.b32 	%r1909, %r1903, %r1904, 25;
	shf.l.wrap.b32 	%r1910, %r1904, %r1903, 25;
	mov.b64 	%rd2795, {%r1910, %r1909};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	and.b64  	%rd2797, %rd2778, %rd2754;
	xor.b64  	%rd2798, %rd2778, %rd2754;
	and.b64  	%rd2799, %rd2798, %rd2730;
	or.b64  	%rd2800, %rd2799, %rd2797;
	add.s64 	%rd2801, %rd2796, %rd2800;
	add.s64 	%rd2802, %rd2801, %rd2790;
	add.s64 	%rd2811, %rd2719, 6620516959819538809;
	add.s64 	%rd2812, %rd2743, 2270897969802886507;
	add.s64 	%rd2813, %rd2767, -7276294671716946913;
	add.s64 	%rd2814, %rd2791, 5840696475078001361;
	add.s64 	%rd2815, %rd2730, -6534734903238641935;
	add.s64 	%rd2816, %rd2754, 4354685564936845355;
	add.s64 	%rd2817, %rd2778, -4942790177534073029;
	add.s64 	%rd2818, %rd2802, 7640891576956012808;
	add.s32 	%r1911, %r1911, 1;
	setp.lt.u32	%p3, %r1911, %r2;
	@%p3 bra 	BB2_3;

BB2_4:
	st.global.u64 	[%rd2], %rd2818;
	st.global.u64 	[%rd2+8], %rd2817;
	st.global.u64 	[%rd2+16], %rd2816;
	st.global.u64 	[%rd2+24], %rd2815;
	st.global.u64 	[%rd2+32], %rd2814;
	st.global.u64 	[%rd2+40], %rd2813;
	st.global.u64 	[%rd2+48], %rd2812;
	st.global.u64 	[%rd2+56], %rd2811;

BB2_5:
	ret;
}

	// .globl	m11300_comp
.entry m11300_comp(
	.param .u64 .ptr .global .align 4 m11300_comp_param_0,
	.param .u64 .ptr .global .align 4 m11300_comp_param_1,
	.param .u64 .ptr .global .align 4 m11300_comp_param_2,
	.param .u64 .ptr .const .align 4 m11300_comp_param_3,
	.param .u64 .ptr .global .align 8 m11300_comp_param_4,
	.param .u64 .ptr .global .align 1 m11300_comp_param_5,
	.param .u64 .ptr .global .align 4 m11300_comp_param_6,
	.param .u64 .ptr .global .align 4 m11300_comp_param_7,
	.param .u64 .ptr .global .align 4 m11300_comp_param_8,
	.param .u64 .ptr .global .align 4 m11300_comp_param_9,
	.param .u64 .ptr .global .align 4 m11300_comp_param_10,
	.param .u64 .ptr .global .align 4 m11300_comp_param_11,
	.param .u64 .ptr .global .align 4 m11300_comp_param_12,
	.param .u64 .ptr .global .align 4 m11300_comp_param_13,
	.param .u64 .ptr .global .align 8 m11300_comp_param_14,
	.param .u64 .ptr .global .align 4 m11300_comp_param_15,
	.param .u64 .ptr .global .align 4 m11300_comp_param_16,
	.param .u64 .ptr .global .align 4 m11300_comp_param_17,
	.param .u64 .ptr .global .align 4 m11300_comp_param_18,
	.param .u64 .ptr .global .align 4 m11300_comp_param_19,
	.param .u64 .ptr .global .align 1 m11300_comp_param_20,
	.param .u64 .ptr .global .align 1 m11300_comp_param_21,
	.param .u64 .ptr .global .align 1 m11300_comp_param_22,
	.param .u64 .ptr .global .align 1 m11300_comp_param_23,
	.param .u64 .ptr .global .align 8 m11300_comp_param_24
)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<1776>;
	.reg .b64 	%rd<1412>;
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te3[1024];

	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd11, [m11300_comp_param_4];
	ld.param.u64 	%rd14, [m11300_comp_param_18];
	ld.param.u64 	%rd16, [m11300_comp_param_24];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r14, %envreg3;
	mad.lo.s32 	%r15, %r13, %r1, %r14;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r15, %r2;
	cvt.s64.s32	%rd1, %r3;
	setp.gt.u32	%p1, %r2, 255;
	@%p1 bra 	BB3_3;

	cvt.s64.s32	%rd1411, %r2;
	cvt.s64.s32	%rd3, %r1;

BB3_2:
	and.b64  	%rd17, %rd1411, 4294967295;
	shl.b64 	%rd18, %rd17, 2;
	mov.u64 	%rd19, td0;
	add.s64 	%rd20, %rd19, %rd18;
	ld.const.u32 	%r16, [%rd20];
	mov.u64 	%rd21, m11300_comp$s_td0;
	add.s64 	%rd22, %rd21, %rd18;
	st.shared.u32 	[%rd22], %r16;
	mov.u64 	%rd23, td1;
	add.s64 	%rd24, %rd23, %rd18;
	ld.const.u32 	%r17, [%rd24];
	mov.u64 	%rd25, m11300_comp$s_td1;
	add.s64 	%rd26, %rd25, %rd18;
	st.shared.u32 	[%rd26], %r17;
	mov.u64 	%rd27, td2;
	add.s64 	%rd28, %rd27, %rd18;
	ld.const.u32 	%r18, [%rd28];
	mov.u64 	%rd29, m11300_comp$s_td2;
	add.s64 	%rd30, %rd29, %rd18;
	st.shared.u32 	[%rd30], %r18;
	mov.u64 	%rd31, td3;
	add.s64 	%rd32, %rd31, %rd18;
	ld.const.u32 	%r19, [%rd32];
	mov.u64 	%rd33, m11300_comp$s_td3;
	add.s64 	%rd34, %rd33, %rd18;
	st.shared.u32 	[%rd34], %r19;
	mov.u64 	%rd35, td4;
	add.s64 	%rd36, %rd35, %rd18;
	ld.const.u32 	%r20, [%rd36];
	mov.u64 	%rd37, m11300_comp$s_td4;
	add.s64 	%rd38, %rd37, %rd18;
	st.shared.u32 	[%rd38], %r20;
	mov.u64 	%rd39, te0;
	add.s64 	%rd40, %rd39, %rd18;
	ld.const.u32 	%r21, [%rd40];
	mov.u64 	%rd41, m11300_comp$s_te0;
	add.s64 	%rd42, %rd41, %rd18;
	st.shared.u32 	[%rd42], %r21;
	mov.u64 	%rd43, te1;
	add.s64 	%rd44, %rd43, %rd18;
	ld.const.u32 	%r22, [%rd44];
	mov.u64 	%rd45, m11300_comp$s_te1;
	add.s64 	%rd46, %rd45, %rd18;
	st.shared.u32 	[%rd46], %r22;
	mov.u64 	%rd47, te2;
	add.s64 	%rd48, %rd47, %rd18;
	ld.const.u32 	%r23, [%rd48];
	mov.u64 	%rd49, m11300_comp$s_te2;
	add.s64 	%rd50, %rd49, %rd18;
	st.shared.u32 	[%rd50], %r23;
	mov.u64 	%rd51, te3;
	add.s64 	%rd52, %rd51, %rd18;
	ld.const.u32 	%r24, [%rd52];
	mov.u64 	%rd53, m11300_comp$s_te3;
	add.s64 	%rd54, %rd53, %rd18;
	st.shared.u32 	[%rd54], %r24;
	add.s64 	%rd1411, %rd17, %rd3;
	cvt.u32.u64	%r25, %rd1411;
	setp.lt.u32	%p2, %r25, 256;
	@%p2 bra 	BB3_2;

BB3_3:
	bar.sync 	0;
	add.s64 	%rd6, %rd16, 56;
	ld.global.u64 	%rd55, [%rd16+56];
	setp.ge.u64	%p3, %rd1, %rd55;
	@%p3 bra 	BB3_11;

	mul.wide.s32 	%rd59, %r3, 64;
	add.s64 	%rd60, %rd11, %rd59;
	ld.global.v2.u32 	{%r107, %r108}, [%rd60];
	ld.global.v2.u32 	{%r109, %r110}, [%rd60+8];
	ld.global.v2.u32 	{%r111, %r112}, [%rd60+16];
	ld.global.v2.u32 	{%r113, %r114}, [%rd60+24];
	ld.global.u32 	%r115, [%rd6+-24];
	ld.global.u32 	%r4, [%rd6+-40];
	add.s32 	%r5, %r115, %r4;
	// inline asm
	prmt.b32 %r26, %r108, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r28, %r107, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r30, %r110, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r32, %r109, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r34, %r112, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r36, %r111, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r38, %r114, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r40, %r113, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r42, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r44, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r46, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r48, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r50, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r52, %r36, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r54, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r56, %r40, 0, 0x0123;
	// inline asm
	bfe.u32 	%r116, %r56, 16, 8;
	mul.wide.u32 	%rd61, %r116, 4;
	mov.u64 	%rd62, m11300_comp$s_te2;
	add.s64 	%rd63, %rd62, %rd61;
	ld.shared.u32 	%r117, [%rd63];
	and.b32  	%r118, %r117, -16777216;
	xor.b32  	%r119, %r42, %r118;
	xor.b32  	%r120, %r119, 16777216;
	bfe.u32 	%r121, %r56, 8, 8;
	mul.wide.u32 	%rd64, %r121, 4;
	mov.u64 	%rd65, m11300_comp$s_te3;
	add.s64 	%rd66, %rd65, %rd64;
	ld.shared.u32 	%r122, [%rd66];
	and.b32  	%r123, %r122, 16711680;
	xor.b32  	%r124, %r120, %r123;
	and.b32  	%r125, %r56, 255;
	mul.wide.u32 	%rd67, %r125, 4;
	mov.u64 	%rd68, m11300_comp$s_te0;
	add.s64 	%rd69, %rd68, %rd67;
	ld.shared.u32 	%r126, [%rd69];
	and.b32  	%r127, %r126, 65280;
	xor.b32  	%r128, %r124, %r127;
	shr.u32 	%r129, %r56, 24;
	mul.wide.u32 	%rd70, %r129, 4;
	mov.u64 	%rd71, m11300_comp$s_te1;
	add.s64 	%rd72, %rd71, %rd70;
	ld.shared.u8 	%r130, [%rd72];
	xor.b32  	%r131, %r128, %r130;
	xor.b32  	%r132, %r131, %r44;
	xor.b32  	%r133, %r132, %r46;
	xor.b32  	%r134, %r133, %r48;
	shr.u32 	%r135, %r134, 24;
	mul.wide.u32 	%rd73, %r135, 4;
	add.s64 	%rd74, %rd62, %rd73;
	ld.shared.u32 	%r136, [%rd74];
	and.b32  	%r137, %r136, -16777216;
	xor.b32  	%r138, %r137, %r50;
	bfe.u32 	%r139, %r134, 16, 8;
	mul.wide.u32 	%rd75, %r139, 4;
	add.s64 	%rd76, %rd65, %rd75;
	ld.shared.u32 	%r140, [%rd76];
	and.b32  	%r141, %r140, 16711680;
	xor.b32  	%r142, %r138, %r141;
	bfe.u32 	%r143, %r134, 8, 8;
	mul.wide.u32 	%rd77, %r143, 4;
	add.s64 	%rd78, %rd68, %rd77;
	ld.shared.u32 	%r144, [%rd78];
	and.b32  	%r145, %r144, 65280;
	xor.b32  	%r146, %r142, %r145;
	and.b32  	%r147, %r134, 255;
	mul.wide.u32 	%rd79, %r147, 4;
	add.s64 	%rd80, %rd71, %rd79;
	ld.shared.u8 	%r148, [%rd80];
	xor.b32  	%r149, %r146, %r148;
	xor.b32  	%r150, %r149, %r52;
	xor.b32  	%r151, %r150, %r54;
	xor.b32  	%r152, %r151, %r56;
	bfe.u32 	%r153, %r152, 16, 8;
	mul.wide.u32 	%rd81, %r153, 4;
	add.s64 	%rd82, %rd62, %rd81;
	ld.shared.u32 	%r154, [%rd82];
	and.b32  	%r155, %r154, -16777216;
	xor.b32  	%r156, %r131, %r155;
	xor.b32  	%r157, %r156, 33554432;
	bfe.u32 	%r158, %r152, 8, 8;
	mul.wide.u32 	%rd83, %r158, 4;
	add.s64 	%rd84, %rd65, %rd83;
	ld.shared.u32 	%r159, [%rd84];
	and.b32  	%r160, %r159, 16711680;
	xor.b32  	%r161, %r157, %r160;
	and.b32  	%r162, %r152, 255;
	mul.wide.u32 	%rd85, %r162, 4;
	add.s64 	%rd86, %rd68, %rd85;
	ld.shared.u32 	%r163, [%rd86];
	and.b32  	%r164, %r163, 65280;
	xor.b32  	%r165, %r161, %r164;
	shr.u32 	%r166, %r152, 24;
	mul.wide.u32 	%rd87, %r166, 4;
	add.s64 	%rd88, %rd71, %rd87;
	ld.shared.u8 	%r167, [%rd88];
	xor.b32  	%r168, %r165, %r167;
	xor.b32  	%r169, %r168, %r132;
	xor.b32  	%r170, %r168, %r46;
	xor.b32  	%r171, %r170, %r134;
	shr.u32 	%r172, %r171, 24;
	mul.wide.u32 	%rd89, %r172, 4;
	add.s64 	%rd90, %rd62, %rd89;
	ld.shared.u32 	%r173, [%rd90];
	and.b32  	%r174, %r173, -16777216;
	xor.b32  	%r175, %r174, %r149;
	bfe.u32 	%r176, %r171, 16, 8;
	mul.wide.u32 	%rd91, %r176, 4;
	add.s64 	%rd92, %rd65, %rd91;
	ld.shared.u32 	%r177, [%rd92];
	and.b32  	%r178, %r177, 16711680;
	xor.b32  	%r179, %r175, %r178;
	bfe.u32 	%r180, %r171, 8, 8;
	mul.wide.u32 	%rd93, %r180, 4;
	add.s64 	%rd94, %rd68, %rd93;
	ld.shared.u32 	%r181, [%rd94];
	and.b32  	%r182, %r181, 65280;
	xor.b32  	%r183, %r179, %r182;
	and.b32  	%r184, %r171, 255;
	mul.wide.u32 	%rd95, %r184, 4;
	add.s64 	%rd96, %rd71, %rd95;
	ld.shared.u8 	%r185, [%rd96];
	xor.b32  	%r186, %r183, %r185;
	xor.b32  	%r187, %r186, %r150;
	xor.b32  	%r188, %r186, %r54;
	xor.b32  	%r189, %r188, %r152;
	bfe.u32 	%r190, %r189, 16, 8;
	mul.wide.u32 	%rd97, %r190, 4;
	add.s64 	%rd98, %rd62, %rd97;
	ld.shared.u32 	%r191, [%rd98];
	and.b32  	%r192, %r191, -16777216;
	xor.b32  	%r193, %r168, %r192;
	xor.b32  	%r194, %r193, 67108864;
	bfe.u32 	%r195, %r189, 8, 8;
	mul.wide.u32 	%rd99, %r195, 4;
	add.s64 	%rd100, %rd65, %rd99;
	ld.shared.u32 	%r196, [%rd100];
	and.b32  	%r197, %r196, 16711680;
	xor.b32  	%r198, %r194, %r197;
	and.b32  	%r199, %r189, 255;
	mul.wide.u32 	%rd101, %r199, 4;
	add.s64 	%rd102, %rd68, %rd101;
	ld.shared.u32 	%r200, [%rd102];
	and.b32  	%r201, %r200, 65280;
	xor.b32  	%r202, %r198, %r201;
	shr.u32 	%r203, %r189, 24;
	mul.wide.u32 	%rd103, %r203, 4;
	add.s64 	%rd104, %rd71, %rd103;
	ld.shared.u8 	%r204, [%rd104];
	xor.b32  	%r205, %r202, %r204;
	xor.b32  	%r206, %r205, %r169;
	xor.b32  	%r207, %r206, %r170;
	xor.b32  	%r208, %r206, %r134;
	shr.u32 	%r209, %r208, 24;
	mul.wide.u32 	%rd105, %r209, 4;
	add.s64 	%rd106, %rd62, %rd105;
	ld.shared.u32 	%r210, [%rd106];
	and.b32  	%r211, %r210, -16777216;
	xor.b32  	%r212, %r211, %r186;
	bfe.u32 	%r213, %r208, 16, 8;
	mul.wide.u32 	%rd107, %r213, 4;
	add.s64 	%rd108, %rd65, %rd107;
	ld.shared.u32 	%r214, [%rd108];
	and.b32  	%r215, %r214, 16711680;
	xor.b32  	%r216, %r212, %r215;
	bfe.u32 	%r217, %r208, 8, 8;
	mul.wide.u32 	%rd109, %r217, 4;
	add.s64 	%rd110, %rd68, %rd109;
	ld.shared.u32 	%r218, [%rd110];
	and.b32  	%r219, %r218, 65280;
	xor.b32  	%r220, %r216, %r219;
	and.b32  	%r221, %r208, 255;
	mul.wide.u32 	%rd111, %r221, 4;
	add.s64 	%rd112, %rd71, %rd111;
	ld.shared.u8 	%r222, [%rd112];
	xor.b32  	%r223, %r220, %r222;
	xor.b32  	%r224, %r223, %r187;
	xor.b32  	%r225, %r224, %r188;
	xor.b32  	%r226, %r224, %r152;
	bfe.u32 	%r227, %r226, 16, 8;
	mul.wide.u32 	%rd113, %r227, 4;
	add.s64 	%rd114, %rd62, %rd113;
	ld.shared.u32 	%r228, [%rd114];
	and.b32  	%r229, %r228, -16777216;
	xor.b32  	%r230, %r205, %r229;
	xor.b32  	%r231, %r230, 134217728;
	bfe.u32 	%r232, %r226, 8, 8;
	mul.wide.u32 	%rd115, %r232, 4;
	add.s64 	%rd116, %rd65, %rd115;
	ld.shared.u32 	%r233, [%rd116];
	and.b32  	%r234, %r233, 16711680;
	xor.b32  	%r235, %r231, %r234;
	and.b32  	%r236, %r226, 255;
	mul.wide.u32 	%rd117, %r236, 4;
	add.s64 	%rd118, %rd68, %rd117;
	ld.shared.u32 	%r237, [%rd118];
	and.b32  	%r238, %r237, 65280;
	xor.b32  	%r239, %r235, %r238;
	shr.u32 	%r240, %r226, 24;
	mul.wide.u32 	%rd119, %r240, 4;
	add.s64 	%rd120, %rd71, %rd119;
	ld.shared.u8 	%r241, [%rd120];
	xor.b32  	%r242, %r239, %r241;
	xor.b32  	%r243, %r242, %r206;
	xor.b32  	%r244, %r242, %r170;
	xor.b32  	%r245, %r244, %r208;
	shr.u32 	%r246, %r245, 24;
	mul.wide.u32 	%rd121, %r246, 4;
	add.s64 	%rd122, %rd62, %rd121;
	ld.shared.u32 	%r247, [%rd122];
	and.b32  	%r248, %r247, -16777216;
	xor.b32  	%r249, %r248, %r223;
	bfe.u32 	%r250, %r245, 16, 8;
	mul.wide.u32 	%rd123, %r250, 4;
	add.s64 	%rd124, %rd65, %rd123;
	ld.shared.u32 	%r251, [%rd124];
	and.b32  	%r252, %r251, 16711680;
	xor.b32  	%r253, %r249, %r252;
	bfe.u32 	%r254, %r245, 8, 8;
	mul.wide.u32 	%rd125, %r254, 4;
	add.s64 	%rd126, %rd68, %rd125;
	ld.shared.u32 	%r255, [%rd126];
	and.b32  	%r256, %r255, 65280;
	xor.b32  	%r257, %r253, %r256;
	and.b32  	%r258, %r245, 255;
	mul.wide.u32 	%rd127, %r258, 4;
	add.s64 	%rd128, %rd71, %rd127;
	ld.shared.u8 	%r259, [%rd128];
	xor.b32  	%r260, %r257, %r259;
	xor.b32  	%r261, %r260, %r224;
	xor.b32  	%r262, %r260, %r188;
	xor.b32  	%r263, %r262, %r226;
	bfe.u32 	%r264, %r263, 16, 8;
	mul.wide.u32 	%rd129, %r264, 4;
	add.s64 	%rd130, %rd62, %rd129;
	ld.shared.u32 	%r265, [%rd130];
	and.b32  	%r266, %r265, -16777216;
	xor.b32  	%r267, %r242, %r266;
	xor.b32  	%r268, %r267, 268435456;
	bfe.u32 	%r269, %r263, 8, 8;
	mul.wide.u32 	%rd131, %r269, 4;
	add.s64 	%rd132, %rd65, %rd131;
	ld.shared.u32 	%r270, [%rd132];
	and.b32  	%r271, %r270, 16711680;
	xor.b32  	%r272, %r268, %r271;
	and.b32  	%r273, %r263, 255;
	mul.wide.u32 	%rd133, %r273, 4;
	add.s64 	%rd134, %rd68, %rd133;
	ld.shared.u32 	%r274, [%rd134];
	and.b32  	%r275, %r274, 65280;
	xor.b32  	%r276, %r272, %r275;
	shr.u32 	%r277, %r263, 24;
	mul.wide.u32 	%rd135, %r277, 4;
	add.s64 	%rd136, %rd71, %rd135;
	ld.shared.u8 	%r278, [%rd136];
	xor.b32  	%r279, %r276, %r278;
	xor.b32  	%r280, %r279, %r243;
	xor.b32  	%r281, %r280, %r244;
	xor.b32  	%r282, %r280, %r208;
	shr.u32 	%r283, %r282, 24;
	mul.wide.u32 	%rd137, %r283, 4;
	add.s64 	%rd138, %rd62, %rd137;
	ld.shared.u32 	%r284, [%rd138];
	and.b32  	%r285, %r284, -16777216;
	xor.b32  	%r286, %r285, %r260;
	bfe.u32 	%r287, %r282, 16, 8;
	mul.wide.u32 	%rd139, %r287, 4;
	add.s64 	%rd140, %rd65, %rd139;
	ld.shared.u32 	%r288, [%rd140];
	and.b32  	%r289, %r288, 16711680;
	xor.b32  	%r290, %r286, %r289;
	bfe.u32 	%r291, %r282, 8, 8;
	mul.wide.u32 	%rd141, %r291, 4;
	add.s64 	%rd142, %rd68, %rd141;
	ld.shared.u32 	%r292, [%rd142];
	and.b32  	%r293, %r292, 65280;
	xor.b32  	%r294, %r290, %r293;
	and.b32  	%r295, %r282, 255;
	mul.wide.u32 	%rd143, %r295, 4;
	add.s64 	%rd144, %rd71, %rd143;
	ld.shared.u8 	%r296, [%rd144];
	xor.b32  	%r297, %r294, %r296;
	xor.b32  	%r298, %r297, %r261;
	xor.b32  	%r299, %r298, %r262;
	xor.b32  	%r300, %r298, %r226;
	bfe.u32 	%r301, %r300, 16, 8;
	mul.wide.u32 	%rd145, %r301, 4;
	add.s64 	%rd146, %rd62, %rd145;
	ld.shared.u32 	%r302, [%rd146];
	and.b32  	%r303, %r302, -16777216;
	xor.b32  	%r304, %r279, %r303;
	xor.b32  	%r305, %r304, 536870912;
	bfe.u32 	%r306, %r300, 8, 8;
	mul.wide.u32 	%rd147, %r306, 4;
	add.s64 	%rd148, %rd65, %rd147;
	ld.shared.u32 	%r307, [%rd148];
	and.b32  	%r308, %r307, 16711680;
	xor.b32  	%r309, %r305, %r308;
	and.b32  	%r310, %r300, 255;
	mul.wide.u32 	%rd149, %r310, 4;
	add.s64 	%rd150, %rd68, %rd149;
	ld.shared.u32 	%r311, [%rd150];
	and.b32  	%r312, %r311, 65280;
	xor.b32  	%r313, %r309, %r312;
	shr.u32 	%r314, %r300, 24;
	mul.wide.u32 	%rd151, %r314, 4;
	add.s64 	%rd152, %rd71, %rd151;
	ld.shared.u8 	%r315, [%rd152];
	xor.b32  	%r316, %r313, %r315;
	xor.b32  	%r317, %r316, %r280;
	xor.b32  	%r318, %r316, %r244;
	xor.b32  	%r319, %r318, %r282;
	shr.u32 	%r320, %r319, 24;
	mul.wide.u32 	%rd153, %r320, 4;
	add.s64 	%rd154, %rd62, %rd153;
	ld.shared.u32 	%r321, [%rd154];
	and.b32  	%r322, %r321, -16777216;
	xor.b32  	%r323, %r322, %r297;
	bfe.u32 	%r324, %r319, 16, 8;
	mul.wide.u32 	%rd155, %r324, 4;
	add.s64 	%rd156, %rd65, %rd155;
	ld.shared.u32 	%r325, [%rd156];
	and.b32  	%r326, %r325, 16711680;
	xor.b32  	%r327, %r323, %r326;
	bfe.u32 	%r328, %r319, 8, 8;
	mul.wide.u32 	%rd157, %r328, 4;
	add.s64 	%rd158, %rd68, %rd157;
	ld.shared.u32 	%r329, [%rd158];
	and.b32  	%r330, %r329, 65280;
	xor.b32  	%r331, %r327, %r330;
	and.b32  	%r332, %r319, 255;
	mul.wide.u32 	%rd159, %r332, 4;
	add.s64 	%rd160, %rd71, %rd159;
	ld.shared.u8 	%r333, [%rd160];
	xor.b32  	%r334, %r331, %r333;
	xor.b32  	%r335, %r334, %r298;
	xor.b32  	%r336, %r334, %r262;
	xor.b32  	%r337, %r336, %r300;
	bfe.u32 	%r338, %r337, 16, 8;
	mul.wide.u32 	%rd161, %r338, 4;
	add.s64 	%rd162, %rd62, %rd161;
	ld.shared.u32 	%r339, [%rd162];
	and.b32  	%r340, %r339, -16777216;
	xor.b32  	%r341, %r316, %r340;
	bfe.u32 	%r342, %r337, 8, 8;
	mul.wide.u32 	%rd163, %r342, 4;
	add.s64 	%rd164, %rd65, %rd163;
	ld.shared.u32 	%r343, [%rd164];
	and.b32  	%r344, %r343, 16711680;
	xor.b32  	%r345, %r341, %r344;
	and.b32  	%r346, %r337, 255;
	mul.wide.u32 	%rd165, %r346, 4;
	add.s64 	%rd166, %rd68, %rd165;
	ld.shared.u32 	%r347, [%rd166];
	and.b32  	%r348, %r347, 65280;
	xor.b32  	%r349, %r345, %r348;
	shr.u32 	%r350, %r337, 24;
	mul.wide.u32 	%rd167, %r350, 4;
	add.s64 	%rd168, %rd71, %rd167;
	ld.shared.u8 	%r351, [%rd168];
	xor.b32  	%r352, %r349, %r351;
	xor.b32  	%r353, %r352, 1073741824;
	xor.b32  	%r354, %r353, %r317;
	xor.b32  	%r355, %r354, %r318;
	xor.b32  	%r356, %r354, %r282;
	shr.u32 	%r357, %r323, 24;
	mul.wide.u32 	%rd169, %r357, 4;
	add.s64 	%rd170, %rd71, %rd169;
	ld.shared.u8 	%r358, [%rd170];
	mul.wide.u32 	%rd171, %r358, 4;
	mov.u64 	%rd172, m11300_comp$s_td0;
	add.s64 	%rd173, %rd172, %rd171;
	bfe.u32 	%r359, %r327, 16, 8;
	mul.wide.u32 	%rd174, %r359, 4;
	add.s64 	%rd175, %rd71, %rd174;
	ld.shared.u8 	%r360, [%rd175];
	mul.wide.u32 	%rd176, %r360, 4;
	mov.u64 	%rd177, m11300_comp$s_td1;
	add.s64 	%rd178, %rd177, %rd176;
	ld.shared.u32 	%r361, [%rd178];
	ld.shared.u32 	%r362, [%rd173];
	xor.b32  	%r363, %r361, %r362;
	bfe.u32 	%r364, %r331, 8, 8;
	mul.wide.u32 	%rd179, %r364, 4;
	add.s64 	%rd180, %rd71, %rd179;
	ld.shared.u8 	%r365, [%rd180];
	mul.wide.u32 	%rd181, %r365, 4;
	mov.u64 	%rd182, m11300_comp$s_td2;
	add.s64 	%rd183, %rd182, %rd181;
	ld.shared.u32 	%r366, [%rd183];
	xor.b32  	%r367, %r363, %r366;
	and.b32  	%r368, %r334, 255;
	mul.wide.u32 	%rd184, %r368, 4;
	add.s64 	%rd185, %rd71, %rd184;
	ld.shared.u8 	%r369, [%rd185];
	mul.wide.u32 	%rd186, %r369, 4;
	mov.u64 	%rd187, m11300_comp$s_td3;
	add.s64 	%rd188, %rd187, %rd186;
	ld.shared.u32 	%r370, [%rd188];
	xor.b32  	%r371, %r367, %r370;
	shr.u32 	%r372, %r335, 24;
	mul.wide.u32 	%rd189, %r372, 4;
	add.s64 	%rd190, %rd71, %rd189;
	ld.shared.u8 	%r373, [%rd190];
	mul.wide.u32 	%rd191, %r373, 4;
	add.s64 	%rd192, %rd172, %rd191;
	bfe.u32 	%r374, %r335, 16, 8;
	mul.wide.u32 	%rd193, %r374, 4;
	add.s64 	%rd194, %rd71, %rd193;
	ld.shared.u8 	%r375, [%rd194];
	mul.wide.u32 	%rd195, %r375, 4;
	add.s64 	%rd196, %rd177, %rd195;
	ld.shared.u32 	%r376, [%rd196];
	ld.shared.u32 	%r377, [%rd192];
	xor.b32  	%r378, %r376, %r377;
	bfe.u32 	%r379, %r335, 8, 8;
	mul.wide.u32 	%rd197, %r379, 4;
	add.s64 	%rd198, %rd71, %rd197;
	ld.shared.u8 	%r380, [%rd198];
	mul.wide.u32 	%rd199, %r380, 4;
	add.s64 	%rd200, %rd182, %rd199;
	ld.shared.u32 	%r381, [%rd200];
	xor.b32  	%r382, %r378, %r381;
	and.b32  	%r383, %r335, 255;
	mul.wide.u32 	%rd201, %r383, 4;
	add.s64 	%rd202, %rd71, %rd201;
	ld.shared.u8 	%r384, [%rd202];
	mul.wide.u32 	%rd203, %r384, 4;
	add.s64 	%rd204, %rd187, %rd203;
	ld.shared.u32 	%r385, [%rd204];
	xor.b32  	%r386, %r382, %r385;
	shr.u32 	%r387, %r336, 24;
	mul.wide.u32 	%rd205, %r387, 4;
	add.s64 	%rd206, %rd71, %rd205;
	ld.shared.u8 	%r388, [%rd206];
	mul.wide.u32 	%rd207, %r388, 4;
	add.s64 	%rd208, %rd172, %rd207;
	bfe.u32 	%r389, %r336, 16, 8;
	mul.wide.u32 	%rd209, %r389, 4;
	add.s64 	%rd210, %rd71, %rd209;
	ld.shared.u8 	%r390, [%rd210];
	mul.wide.u32 	%rd211, %r390, 4;
	add.s64 	%rd212, %rd177, %rd211;
	ld.shared.u32 	%r391, [%rd212];
	ld.shared.u32 	%r392, [%rd208];
	xor.b32  	%r393, %r391, %r392;
	bfe.u32 	%r394, %r336, 8, 8;
	mul.wide.u32 	%rd213, %r394, 4;
	add.s64 	%rd214, %rd71, %rd213;
	ld.shared.u8 	%r395, [%rd214];
	mul.wide.u32 	%rd215, %r395, 4;
	add.s64 	%rd216, %rd182, %rd215;
	ld.shared.u32 	%r396, [%rd216];
	xor.b32  	%r397, %r393, %r396;
	and.b32  	%r398, %r336, 255;
	mul.wide.u32 	%rd217, %r398, 4;
	add.s64 	%rd218, %rd71, %rd217;
	ld.shared.u8 	%r399, [%rd218];
	mul.wide.u32 	%rd219, %r399, 4;
	add.s64 	%rd220, %rd187, %rd219;
	ld.shared.u32 	%r400, [%rd220];
	xor.b32  	%r401, %r397, %r400;
	mul.wide.u32 	%rd221, %r351, 4;
	add.s64 	%rd222, %rd172, %rd221;
	add.s64 	%rd223, %rd71, %rd161;
	ld.shared.u8 	%r402, [%rd223];
	mul.wide.u32 	%rd224, %r402, 4;
	add.s64 	%rd225, %rd177, %rd224;
	ld.shared.u32 	%r403, [%rd225];
	ld.shared.u32 	%r404, [%rd222];
	xor.b32  	%r405, %r403, %r404;
	add.s64 	%rd226, %rd71, %rd163;
	ld.shared.u8 	%r406, [%rd226];
	mul.wide.u32 	%rd227, %r406, 4;
	add.s64 	%rd228, %rd182, %rd227;
	ld.shared.u32 	%r407, [%rd228];
	xor.b32  	%r408, %r405, %r407;
	add.s64 	%rd229, %rd71, %rd165;
	ld.shared.u8 	%r409, [%rd229];
	mul.wide.u32 	%rd230, %r409, 4;
	add.s64 	%rd231, %rd187, %rd230;
	ld.shared.u32 	%r410, [%rd231];
	xor.b32  	%r411, %r408, %r410;
	shr.u32 	%r412, %r305, 24;
	mul.wide.u32 	%rd232, %r412, 4;
	add.s64 	%rd233, %rd71, %rd232;
	ld.shared.u8 	%r413, [%rd233];
	mul.wide.u32 	%rd234, %r413, 4;
	add.s64 	%rd235, %rd172, %rd234;
	bfe.u32 	%r414, %r309, 16, 8;
	mul.wide.u32 	%rd236, %r414, 4;
	add.s64 	%rd237, %rd71, %rd236;
	ld.shared.u8 	%r415, [%rd237];
	mul.wide.u32 	%rd238, %r415, 4;
	add.s64 	%rd239, %rd177, %rd238;
	ld.shared.u32 	%r416, [%rd239];
	ld.shared.u32 	%r417, [%rd235];
	xor.b32  	%r418, %r416, %r417;
	bfe.u32 	%r419, %r313, 8, 8;
	mul.wide.u32 	%rd240, %r419, 4;
	add.s64 	%rd241, %rd71, %rd240;
	ld.shared.u8 	%r420, [%rd241];
	mul.wide.u32 	%rd242, %r420, 4;
	add.s64 	%rd243, %rd182, %rd242;
	ld.shared.u32 	%r421, [%rd243];
	xor.b32  	%r422, %r418, %r421;
	and.b32  	%r423, %r316, 255;
	mul.wide.u32 	%rd244, %r423, 4;
	add.s64 	%rd245, %rd71, %rd244;
	ld.shared.u8 	%r424, [%rd245];
	mul.wide.u32 	%rd246, %r424, 4;
	add.s64 	%rd247, %rd187, %rd246;
	ld.shared.u32 	%r425, [%rd247];
	xor.b32  	%r426, %r422, %r425;
	shr.u32 	%r427, %r317, 24;
	mul.wide.u32 	%rd248, %r427, 4;
	add.s64 	%rd249, %rd71, %rd248;
	ld.shared.u8 	%r428, [%rd249];
	mul.wide.u32 	%rd250, %r428, 4;
	add.s64 	%rd251, %rd172, %rd250;
	bfe.u32 	%r429, %r317, 16, 8;
	mul.wide.u32 	%rd252, %r429, 4;
	add.s64 	%rd253, %rd71, %rd252;
	ld.shared.u8 	%r430, [%rd253];
	mul.wide.u32 	%rd254, %r430, 4;
	add.s64 	%rd255, %rd177, %rd254;
	ld.shared.u32 	%r431, [%rd255];
	ld.shared.u32 	%r432, [%rd251];
	xor.b32  	%r433, %r431, %r432;
	bfe.u32 	%r434, %r317, 8, 8;
	mul.wide.u32 	%rd256, %r434, 4;
	add.s64 	%rd257, %rd71, %rd256;
	ld.shared.u8 	%r435, [%rd257];
	mul.wide.u32 	%rd258, %r435, 4;
	add.s64 	%rd259, %rd182, %rd258;
	ld.shared.u32 	%r436, [%rd259];
	xor.b32  	%r437, %r433, %r436;
	and.b32  	%r438, %r317, 255;
	mul.wide.u32 	%rd260, %r438, 4;
	add.s64 	%rd261, %rd71, %rd260;
	ld.shared.u8 	%r439, [%rd261];
	mul.wide.u32 	%rd262, %r439, 4;
	add.s64 	%rd263, %rd187, %rd262;
	ld.shared.u32 	%r440, [%rd263];
	xor.b32  	%r441, %r437, %r440;
	shr.u32 	%r442, %r318, 24;
	mul.wide.u32 	%rd264, %r442, 4;
	add.s64 	%rd265, %rd71, %rd264;
	ld.shared.u8 	%r443, [%rd265];
	mul.wide.u32 	%rd266, %r443, 4;
	add.s64 	%rd267, %rd172, %rd266;
	bfe.u32 	%r444, %r318, 16, 8;
	mul.wide.u32 	%rd268, %r444, 4;
	add.s64 	%rd269, %rd71, %rd268;
	ld.shared.u8 	%r445, [%rd269];
	mul.wide.u32 	%rd270, %r445, 4;
	add.s64 	%rd271, %rd177, %rd270;
	ld.shared.u32 	%r446, [%rd271];
	ld.shared.u32 	%r447, [%rd267];
	xor.b32  	%r448, %r446, %r447;
	bfe.u32 	%r449, %r318, 8, 8;
	mul.wide.u32 	%rd272, %r449, 4;
	add.s64 	%rd273, %rd71, %rd272;
	ld.shared.u8 	%r450, [%rd273];
	mul.wide.u32 	%rd274, %r450, 4;
	add.s64 	%rd275, %rd182, %rd274;
	ld.shared.u32 	%r451, [%rd275];
	xor.b32  	%r452, %r448, %r451;
	and.b32  	%r453, %r318, 255;
	mul.wide.u32 	%rd276, %r453, 4;
	add.s64 	%rd277, %rd71, %rd276;
	ld.shared.u8 	%r454, [%rd277];
	mul.wide.u32 	%rd278, %r454, 4;
	add.s64 	%rd279, %rd187, %rd278;
	ld.shared.u32 	%r455, [%rd279];
	xor.b32  	%r456, %r452, %r455;
	add.s64 	%rd280, %rd71, %rd153;
	ld.shared.u8 	%r457, [%rd280];
	mul.wide.u32 	%rd281, %r457, 4;
	add.s64 	%rd282, %rd172, %rd281;
	add.s64 	%rd283, %rd71, %rd155;
	ld.shared.u8 	%r458, [%rd283];
	mul.wide.u32 	%rd284, %r458, 4;
	add.s64 	%rd285, %rd177, %rd284;
	ld.shared.u32 	%r459, [%rd285];
	ld.shared.u32 	%r460, [%rd282];
	xor.b32  	%r461, %r459, %r460;
	add.s64 	%rd286, %rd71, %rd157;
	ld.shared.u8 	%r462, [%rd286];
	mul.wide.u32 	%rd287, %r462, 4;
	add.s64 	%rd288, %rd182, %rd287;
	ld.shared.u32 	%r463, [%rd288];
	xor.b32  	%r464, %r461, %r463;
	mul.wide.u32 	%rd289, %r333, 4;
	add.s64 	%rd290, %rd187, %rd289;
	ld.shared.u32 	%r465, [%rd290];
	xor.b32  	%r466, %r464, %r465;
	shr.u32 	%r467, %r286, 24;
	mul.wide.u32 	%rd291, %r467, 4;
	add.s64 	%rd292, %rd71, %rd291;
	ld.shared.u8 	%r468, [%rd292];
	mul.wide.u32 	%rd293, %r468, 4;
	add.s64 	%rd294, %rd172, %rd293;
	bfe.u32 	%r469, %r290, 16, 8;
	mul.wide.u32 	%rd295, %r469, 4;
	add.s64 	%rd296, %rd71, %rd295;
	ld.shared.u8 	%r470, [%rd296];
	mul.wide.u32 	%rd297, %r470, 4;
	add.s64 	%rd298, %rd177, %rd297;
	ld.shared.u32 	%r471, [%rd298];
	ld.shared.u32 	%r472, [%rd294];
	xor.b32  	%r473, %r471, %r472;
	bfe.u32 	%r474, %r294, 8, 8;
	mul.wide.u32 	%rd299, %r474, 4;
	add.s64 	%rd300, %rd71, %rd299;
	ld.shared.u8 	%r475, [%rd300];
	mul.wide.u32 	%rd301, %r475, 4;
	add.s64 	%rd302, %rd182, %rd301;
	ld.shared.u32 	%r476, [%rd302];
	xor.b32  	%r477, %r473, %r476;
	and.b32  	%r478, %r297, 255;
	mul.wide.u32 	%rd303, %r478, 4;
	add.s64 	%rd304, %rd71, %rd303;
	ld.shared.u8 	%r479, [%rd304];
	mul.wide.u32 	%rd305, %r479, 4;
	add.s64 	%rd306, %rd187, %rd305;
	ld.shared.u32 	%r480, [%rd306];
	xor.b32  	%r481, %r477, %r480;
	shr.u32 	%r482, %r298, 24;
	mul.wide.u32 	%rd307, %r482, 4;
	add.s64 	%rd308, %rd71, %rd307;
	ld.shared.u8 	%r483, [%rd308];
	mul.wide.u32 	%rd309, %r483, 4;
	add.s64 	%rd310, %rd172, %rd309;
	bfe.u32 	%r484, %r298, 16, 8;
	mul.wide.u32 	%rd311, %r484, 4;
	add.s64 	%rd312, %rd71, %rd311;
	ld.shared.u8 	%r485, [%rd312];
	mul.wide.u32 	%rd313, %r485, 4;
	add.s64 	%rd314, %rd177, %rd313;
	ld.shared.u32 	%r486, [%rd314];
	ld.shared.u32 	%r487, [%rd310];
	xor.b32  	%r488, %r486, %r487;
	bfe.u32 	%r489, %r298, 8, 8;
	mul.wide.u32 	%rd315, %r489, 4;
	add.s64 	%rd316, %rd71, %rd315;
	ld.shared.u8 	%r490, [%rd316];
	mul.wide.u32 	%rd317, %r490, 4;
	add.s64 	%rd318, %rd182, %rd317;
	ld.shared.u32 	%r491, [%rd318];
	xor.b32  	%r492, %r488, %r491;
	and.b32  	%r493, %r298, 255;
	mul.wide.u32 	%rd319, %r493, 4;
	add.s64 	%rd320, %rd71, %rd319;
	ld.shared.u8 	%r494, [%rd320];
	mul.wide.u32 	%rd321, %r494, 4;
	add.s64 	%rd322, %rd187, %rd321;
	ld.shared.u32 	%r495, [%rd322];
	xor.b32  	%r496, %r492, %r495;
	shr.u32 	%r497, %r299, 24;
	mul.wide.u32 	%rd323, %r497, 4;
	add.s64 	%rd324, %rd71, %rd323;
	ld.shared.u8 	%r498, [%rd324];
	mul.wide.u32 	%rd325, %r498, 4;
	add.s64 	%rd326, %rd172, %rd325;
	bfe.u32 	%r499, %r299, 16, 8;
	mul.wide.u32 	%rd327, %r499, 4;
	add.s64 	%rd328, %rd71, %rd327;
	ld.shared.u8 	%r500, [%rd328];
	mul.wide.u32 	%rd329, %r500, 4;
	add.s64 	%rd330, %rd177, %rd329;
	ld.shared.u32 	%r501, [%rd330];
	ld.shared.u32 	%r502, [%rd326];
	xor.b32  	%r503, %r501, %r502;
	bfe.u32 	%r504, %r299, 8, 8;
	mul.wide.u32 	%rd331, %r504, 4;
	add.s64 	%rd332, %rd71, %rd331;
	ld.shared.u8 	%r505, [%rd332];
	mul.wide.u32 	%rd333, %r505, 4;
	add.s64 	%rd334, %rd182, %rd333;
	ld.shared.u32 	%r506, [%rd334];
	xor.b32  	%r507, %r503, %r506;
	and.b32  	%r508, %r299, 255;
	mul.wide.u32 	%rd335, %r508, 4;
	add.s64 	%rd336, %rd71, %rd335;
	ld.shared.u8 	%r509, [%rd336];
	mul.wide.u32 	%rd337, %r509, 4;
	add.s64 	%rd338, %rd187, %rd337;
	ld.shared.u32 	%r510, [%rd338];
	xor.b32  	%r511, %r507, %r510;
	mul.wide.u32 	%rd339, %r315, 4;
	add.s64 	%rd340, %rd172, %rd339;
	add.s64 	%rd341, %rd71, %rd145;
	ld.shared.u8 	%r512, [%rd341];
	mul.wide.u32 	%rd342, %r512, 4;
	add.s64 	%rd343, %rd177, %rd342;
	ld.shared.u32 	%r513, [%rd343];
	ld.shared.u32 	%r514, [%rd340];
	xor.b32  	%r515, %r513, %r514;
	add.s64 	%rd344, %rd71, %rd147;
	ld.shared.u8 	%r516, [%rd344];
	mul.wide.u32 	%rd345, %r516, 4;
	add.s64 	%rd346, %rd182, %rd345;
	ld.shared.u32 	%r517, [%rd346];
	xor.b32  	%r518, %r515, %r517;
	add.s64 	%rd347, %rd71, %rd149;
	ld.shared.u8 	%r519, [%rd347];
	mul.wide.u32 	%rd348, %r519, 4;
	add.s64 	%rd349, %rd187, %rd348;
	ld.shared.u32 	%r520, [%rd349];
	xor.b32  	%r521, %r518, %r520;
	shr.u32 	%r522, %r268, 24;
	mul.wide.u32 	%rd350, %r522, 4;
	add.s64 	%rd351, %rd71, %rd350;
	ld.shared.u8 	%r523, [%rd351];
	mul.wide.u32 	%rd352, %r523, 4;
	add.s64 	%rd353, %rd172, %rd352;
	bfe.u32 	%r524, %r272, 16, 8;
	mul.wide.u32 	%rd354, %r524, 4;
	add.s64 	%rd355, %rd71, %rd354;
	ld.shared.u8 	%r525, [%rd355];
	mul.wide.u32 	%rd356, %r525, 4;
	add.s64 	%rd357, %rd177, %rd356;
	ld.shared.u32 	%r526, [%rd357];
	ld.shared.u32 	%r527, [%rd353];
	xor.b32  	%r528, %r526, %r527;
	bfe.u32 	%r529, %r276, 8, 8;
	mul.wide.u32 	%rd358, %r529, 4;
	add.s64 	%rd359, %rd71, %rd358;
	ld.shared.u8 	%r530, [%rd359];
	mul.wide.u32 	%rd360, %r530, 4;
	add.s64 	%rd361, %rd182, %rd360;
	ld.shared.u32 	%r531, [%rd361];
	xor.b32  	%r532, %r528, %r531;
	and.b32  	%r533, %r279, 255;
	mul.wide.u32 	%rd362, %r533, 4;
	add.s64 	%rd363, %rd71, %rd362;
	ld.shared.u8 	%r534, [%rd363];
	mul.wide.u32 	%rd364, %r534, 4;
	add.s64 	%rd365, %rd187, %rd364;
	ld.shared.u32 	%r535, [%rd365];
	xor.b32  	%r536, %r532, %r535;
	shr.u32 	%r537, %r280, 24;
	mul.wide.u32 	%rd366, %r537, 4;
	add.s64 	%rd367, %rd71, %rd366;
	ld.shared.u8 	%r538, [%rd367];
	mul.wide.u32 	%rd368, %r538, 4;
	add.s64 	%rd369, %rd172, %rd368;
	bfe.u32 	%r539, %r280, 16, 8;
	mul.wide.u32 	%rd370, %r539, 4;
	add.s64 	%rd371, %rd71, %rd370;
	ld.shared.u8 	%r540, [%rd371];
	mul.wide.u32 	%rd372, %r540, 4;
	add.s64 	%rd373, %rd177, %rd372;
	ld.shared.u32 	%r541, [%rd373];
	ld.shared.u32 	%r542, [%rd369];
	xor.b32  	%r543, %r541, %r542;
	bfe.u32 	%r544, %r280, 8, 8;
	mul.wide.u32 	%rd374, %r544, 4;
	add.s64 	%rd375, %rd71, %rd374;
	ld.shared.u8 	%r545, [%rd375];
	mul.wide.u32 	%rd376, %r545, 4;
	add.s64 	%rd377, %rd182, %rd376;
	ld.shared.u32 	%r546, [%rd377];
	xor.b32  	%r547, %r543, %r546;
	and.b32  	%r548, %r280, 255;
	mul.wide.u32 	%rd378, %r548, 4;
	add.s64 	%rd379, %rd71, %rd378;
	ld.shared.u8 	%r549, [%rd379];
	mul.wide.u32 	%rd380, %r549, 4;
	add.s64 	%rd381, %rd187, %rd380;
	ld.shared.u32 	%r550, [%rd381];
	xor.b32  	%r551, %r547, %r550;
	shr.u32 	%r552, %r281, 24;
	mul.wide.u32 	%rd382, %r552, 4;
	add.s64 	%rd383, %rd71, %rd382;
	ld.shared.u8 	%r553, [%rd383];
	mul.wide.u32 	%rd384, %r553, 4;
	add.s64 	%rd385, %rd172, %rd384;
	bfe.u32 	%r554, %r281, 16, 8;
	mul.wide.u32 	%rd386, %r554, 4;
	add.s64 	%rd387, %rd71, %rd386;
	ld.shared.u8 	%r555, [%rd387];
	mul.wide.u32 	%rd388, %r555, 4;
	add.s64 	%rd389, %rd177, %rd388;
	ld.shared.u32 	%r556, [%rd389];
	ld.shared.u32 	%r557, [%rd385];
	xor.b32  	%r558, %r556, %r557;
	bfe.u32 	%r559, %r281, 8, 8;
	mul.wide.u32 	%rd390, %r559, 4;
	add.s64 	%rd391, %rd71, %rd390;
	ld.shared.u8 	%r560, [%rd391];
	mul.wide.u32 	%rd392, %r560, 4;
	add.s64 	%rd393, %rd182, %rd392;
	ld.shared.u32 	%r561, [%rd393];
	xor.b32  	%r562, %r558, %r561;
	and.b32  	%r563, %r281, 255;
	mul.wide.u32 	%rd394, %r563, 4;
	add.s64 	%rd395, %rd71, %rd394;
	ld.shared.u8 	%r564, [%rd395];
	mul.wide.u32 	%rd396, %r564, 4;
	add.s64 	%rd397, %rd187, %rd396;
	ld.shared.u32 	%r565, [%rd397];
	xor.b32  	%r566, %r562, %r565;
	add.s64 	%rd398, %rd71, %rd137;
	ld.shared.u8 	%r567, [%rd398];
	mul.wide.u32 	%rd399, %r567, 4;
	add.s64 	%rd400, %rd172, %rd399;
	add.s64 	%rd401, %rd71, %rd139;
	ld.shared.u8 	%r568, [%rd401];
	mul.wide.u32 	%rd402, %r568, 4;
	add.s64 	%rd403, %rd177, %rd402;
	ld.shared.u32 	%r569, [%rd403];
	ld.shared.u32 	%r570, [%rd400];
	xor.b32  	%r571, %r569, %r570;
	add.s64 	%rd404, %rd71, %rd141;
	ld.shared.u8 	%r572, [%rd404];
	mul.wide.u32 	%rd405, %r572, 4;
	add.s64 	%rd406, %rd182, %rd405;
	ld.shared.u32 	%r573, [%rd406];
	xor.b32  	%r574, %r571, %r573;
	mul.wide.u32 	%rd407, %r296, 4;
	add.s64 	%rd408, %rd187, %rd407;
	ld.shared.u32 	%r575, [%rd408];
	xor.b32  	%r576, %r574, %r575;
	shr.u32 	%r577, %r249, 24;
	mul.wide.u32 	%rd409, %r577, 4;
	add.s64 	%rd410, %rd71, %rd409;
	ld.shared.u8 	%r578, [%rd410];
	mul.wide.u32 	%rd411, %r578, 4;
	add.s64 	%rd412, %rd172, %rd411;
	bfe.u32 	%r579, %r253, 16, 8;
	mul.wide.u32 	%rd413, %r579, 4;
	add.s64 	%rd414, %rd71, %rd413;
	ld.shared.u8 	%r580, [%rd414];
	mul.wide.u32 	%rd415, %r580, 4;
	add.s64 	%rd416, %rd177, %rd415;
	ld.shared.u32 	%r581, [%rd416];
	ld.shared.u32 	%r582, [%rd412];
	xor.b32  	%r583, %r581, %r582;
	bfe.u32 	%r584, %r257, 8, 8;
	mul.wide.u32 	%rd417, %r584, 4;
	add.s64 	%rd418, %rd71, %rd417;
	ld.shared.u8 	%r585, [%rd418];
	mul.wide.u32 	%rd419, %r585, 4;
	add.s64 	%rd420, %rd182, %rd419;
	ld.shared.u32 	%r586, [%rd420];
	xor.b32  	%r587, %r583, %r586;
	and.b32  	%r588, %r260, 255;
	mul.wide.u32 	%rd421, %r588, 4;
	add.s64 	%rd422, %rd71, %rd421;
	ld.shared.u8 	%r589, [%rd422];
	mul.wide.u32 	%rd423, %r589, 4;
	add.s64 	%rd424, %rd187, %rd423;
	ld.shared.u32 	%r590, [%rd424];
	xor.b32  	%r591, %r587, %r590;
	shr.u32 	%r592, %r261, 24;
	mul.wide.u32 	%rd425, %r592, 4;
	add.s64 	%rd426, %rd71, %rd425;
	ld.shared.u8 	%r593, [%rd426];
	mul.wide.u32 	%rd427, %r593, 4;
	add.s64 	%rd428, %rd172, %rd427;
	bfe.u32 	%r594, %r261, 16, 8;
	mul.wide.u32 	%rd429, %r594, 4;
	add.s64 	%rd430, %rd71, %rd429;
	ld.shared.u8 	%r595, [%rd430];
	mul.wide.u32 	%rd431, %r595, 4;
	add.s64 	%rd432, %rd177, %rd431;
	ld.shared.u32 	%r596, [%rd432];
	ld.shared.u32 	%r597, [%rd428];
	xor.b32  	%r598, %r596, %r597;
	bfe.u32 	%r599, %r261, 8, 8;
	mul.wide.u32 	%rd433, %r599, 4;
	add.s64 	%rd434, %rd71, %rd433;
	ld.shared.u8 	%r600, [%rd434];
	mul.wide.u32 	%rd435, %r600, 4;
	add.s64 	%rd436, %rd182, %rd435;
	ld.shared.u32 	%r601, [%rd436];
	xor.b32  	%r602, %r598, %r601;
	and.b32  	%r603, %r261, 255;
	mul.wide.u32 	%rd437, %r603, 4;
	add.s64 	%rd438, %rd71, %rd437;
	ld.shared.u8 	%r604, [%rd438];
	mul.wide.u32 	%rd439, %r604, 4;
	add.s64 	%rd440, %rd187, %rd439;
	ld.shared.u32 	%r605, [%rd440];
	xor.b32  	%r606, %r602, %r605;
	shr.u32 	%r607, %r262, 24;
	mul.wide.u32 	%rd441, %r607, 4;
	add.s64 	%rd442, %rd71, %rd441;
	ld.shared.u8 	%r608, [%rd442];
	mul.wide.u32 	%rd443, %r608, 4;
	add.s64 	%rd444, %rd172, %rd443;
	bfe.u32 	%r609, %r262, 16, 8;
	mul.wide.u32 	%rd445, %r609, 4;
	add.s64 	%rd446, %rd71, %rd445;
	ld.shared.u8 	%r610, [%rd446];
	mul.wide.u32 	%rd447, %r610, 4;
	add.s64 	%rd448, %rd177, %rd447;
	ld.shared.u32 	%r611, [%rd448];
	ld.shared.u32 	%r612, [%rd444];
	xor.b32  	%r613, %r611, %r612;
	bfe.u32 	%r614, %r262, 8, 8;
	mul.wide.u32 	%rd449, %r614, 4;
	add.s64 	%rd450, %rd71, %rd449;
	ld.shared.u8 	%r615, [%rd450];
	mul.wide.u32 	%rd451, %r615, 4;
	add.s64 	%rd452, %rd182, %rd451;
	ld.shared.u32 	%r616, [%rd452];
	xor.b32  	%r617, %r613, %r616;
	and.b32  	%r618, %r262, 255;
	mul.wide.u32 	%rd453, %r618, 4;
	add.s64 	%rd454, %rd71, %rd453;
	ld.shared.u8 	%r619, [%rd454];
	mul.wide.u32 	%rd455, %r619, 4;
	add.s64 	%rd456, %rd187, %rd455;
	ld.shared.u32 	%r620, [%rd456];
	xor.b32  	%r621, %r617, %r620;
	mul.wide.u32 	%rd457, %r278, 4;
	add.s64 	%rd458, %rd172, %rd457;
	add.s64 	%rd459, %rd71, %rd129;
	ld.shared.u8 	%r622, [%rd459];
	mul.wide.u32 	%rd460, %r622, 4;
	add.s64 	%rd461, %rd177, %rd460;
	ld.shared.u32 	%r623, [%rd461];
	ld.shared.u32 	%r624, [%rd458];
	xor.b32  	%r625, %r623, %r624;
	add.s64 	%rd462, %rd71, %rd131;
	ld.shared.u8 	%r626, [%rd462];
	mul.wide.u32 	%rd463, %r626, 4;
	add.s64 	%rd464, %rd182, %rd463;
	ld.shared.u32 	%r627, [%rd464];
	xor.b32  	%r628, %r625, %r627;
	add.s64 	%rd465, %rd71, %rd133;
	ld.shared.u8 	%r629, [%rd465];
	mul.wide.u32 	%rd466, %r629, 4;
	add.s64 	%rd467, %rd187, %rd466;
	ld.shared.u32 	%r630, [%rd467];
	xor.b32  	%r631, %r628, %r630;
	shr.u32 	%r632, %r231, 24;
	mul.wide.u32 	%rd468, %r632, 4;
	add.s64 	%rd469, %rd71, %rd468;
	ld.shared.u8 	%r633, [%rd469];
	mul.wide.u32 	%rd470, %r633, 4;
	add.s64 	%rd471, %rd172, %rd470;
	bfe.u32 	%r634, %r235, 16, 8;
	mul.wide.u32 	%rd472, %r634, 4;
	add.s64 	%rd473, %rd71, %rd472;
	ld.shared.u8 	%r635, [%rd473];
	mul.wide.u32 	%rd474, %r635, 4;
	add.s64 	%rd475, %rd177, %rd474;
	ld.shared.u32 	%r636, [%rd475];
	ld.shared.u32 	%r637, [%rd471];
	xor.b32  	%r638, %r636, %r637;
	bfe.u32 	%r639, %r239, 8, 8;
	mul.wide.u32 	%rd476, %r639, 4;
	add.s64 	%rd477, %rd71, %rd476;
	ld.shared.u8 	%r640, [%rd477];
	mul.wide.u32 	%rd478, %r640, 4;
	add.s64 	%rd479, %rd182, %rd478;
	ld.shared.u32 	%r641, [%rd479];
	xor.b32  	%r642, %r638, %r641;
	and.b32  	%r643, %r242, 255;
	mul.wide.u32 	%rd480, %r643, 4;
	add.s64 	%rd481, %rd71, %rd480;
	ld.shared.u8 	%r644, [%rd481];
	mul.wide.u32 	%rd482, %r644, 4;
	add.s64 	%rd483, %rd187, %rd482;
	ld.shared.u32 	%r645, [%rd483];
	xor.b32  	%r646, %r642, %r645;
	shr.u32 	%r647, %r243, 24;
	mul.wide.u32 	%rd484, %r647, 4;
	add.s64 	%rd485, %rd71, %rd484;
	ld.shared.u8 	%r648, [%rd485];
	mul.wide.u32 	%rd486, %r648, 4;
	add.s64 	%rd487, %rd172, %rd486;
	bfe.u32 	%r649, %r243, 16, 8;
	mul.wide.u32 	%rd488, %r649, 4;
	add.s64 	%rd489, %rd71, %rd488;
	ld.shared.u8 	%r650, [%rd489];
	mul.wide.u32 	%rd490, %r650, 4;
	add.s64 	%rd491, %rd177, %rd490;
	ld.shared.u32 	%r651, [%rd491];
	ld.shared.u32 	%r652, [%rd487];
	xor.b32  	%r653, %r651, %r652;
	bfe.u32 	%r654, %r243, 8, 8;
	mul.wide.u32 	%rd492, %r654, 4;
	add.s64 	%rd493, %rd71, %rd492;
	ld.shared.u8 	%r655, [%rd493];
	mul.wide.u32 	%rd494, %r655, 4;
	add.s64 	%rd495, %rd182, %rd494;
	ld.shared.u32 	%r656, [%rd495];
	xor.b32  	%r657, %r653, %r656;
	and.b32  	%r658, %r243, 255;
	mul.wide.u32 	%rd496, %r658, 4;
	add.s64 	%rd497, %rd71, %rd496;
	ld.shared.u8 	%r659, [%rd497];
	mul.wide.u32 	%rd498, %r659, 4;
	add.s64 	%rd499, %rd187, %rd498;
	ld.shared.u32 	%r660, [%rd499];
	xor.b32  	%r661, %r657, %r660;
	shr.u32 	%r662, %r244, 24;
	mul.wide.u32 	%rd500, %r662, 4;
	add.s64 	%rd501, %rd71, %rd500;
	ld.shared.u8 	%r663, [%rd501];
	mul.wide.u32 	%rd502, %r663, 4;
	add.s64 	%rd503, %rd172, %rd502;
	bfe.u32 	%r664, %r244, 16, 8;
	mul.wide.u32 	%rd504, %r664, 4;
	add.s64 	%rd505, %rd71, %rd504;
	ld.shared.u8 	%r665, [%rd505];
	mul.wide.u32 	%rd506, %r665, 4;
	add.s64 	%rd507, %rd177, %rd506;
	ld.shared.u32 	%r666, [%rd507];
	ld.shared.u32 	%r667, [%rd503];
	xor.b32  	%r668, %r666, %r667;
	bfe.u32 	%r669, %r244, 8, 8;
	mul.wide.u32 	%rd508, %r669, 4;
	add.s64 	%rd509, %rd71, %rd508;
	ld.shared.u8 	%r670, [%rd509];
	mul.wide.u32 	%rd510, %r670, 4;
	add.s64 	%rd511, %rd182, %rd510;
	ld.shared.u32 	%r671, [%rd511];
	xor.b32  	%r672, %r668, %r671;
	and.b32  	%r673, %r244, 255;
	mul.wide.u32 	%rd512, %r673, 4;
	add.s64 	%rd513, %rd71, %rd512;
	ld.shared.u8 	%r674, [%rd513];
	mul.wide.u32 	%rd514, %r674, 4;
	add.s64 	%rd515, %rd187, %rd514;
	ld.shared.u32 	%r675, [%rd515];
	xor.b32  	%r676, %r672, %r675;
	add.s64 	%rd516, %rd71, %rd121;
	ld.shared.u8 	%r677, [%rd516];
	mul.wide.u32 	%rd517, %r677, 4;
	add.s64 	%rd518, %rd172, %rd517;
	add.s64 	%rd519, %rd71, %rd123;
	ld.shared.u8 	%r678, [%rd519];
	mul.wide.u32 	%rd520, %r678, 4;
	add.s64 	%rd521, %rd177, %rd520;
	ld.shared.u32 	%r679, [%rd521];
	ld.shared.u32 	%r680, [%rd518];
	xor.b32  	%r681, %r679, %r680;
	add.s64 	%rd522, %rd71, %rd125;
	ld.shared.u8 	%r682, [%rd522];
	mul.wide.u32 	%rd523, %r682, 4;
	add.s64 	%rd524, %rd182, %rd523;
	ld.shared.u32 	%r683, [%rd524];
	xor.b32  	%r684, %r681, %r683;
	mul.wide.u32 	%rd525, %r259, 4;
	add.s64 	%rd526, %rd187, %rd525;
	ld.shared.u32 	%r685, [%rd526];
	xor.b32  	%r686, %r684, %r685;
	shr.u32 	%r687, %r212, 24;
	mul.wide.u32 	%rd527, %r687, 4;
	add.s64 	%rd528, %rd71, %rd527;
	ld.shared.u8 	%r688, [%rd528];
	mul.wide.u32 	%rd529, %r688, 4;
	add.s64 	%rd530, %rd172, %rd529;
	bfe.u32 	%r689, %r216, 16, 8;
	mul.wide.u32 	%rd531, %r689, 4;
	add.s64 	%rd532, %rd71, %rd531;
	ld.shared.u8 	%r690, [%rd532];
	mul.wide.u32 	%rd533, %r690, 4;
	add.s64 	%rd534, %rd177, %rd533;
	ld.shared.u32 	%r691, [%rd534];
	ld.shared.u32 	%r692, [%rd530];
	xor.b32  	%r693, %r691, %r692;
	bfe.u32 	%r694, %r220, 8, 8;
	mul.wide.u32 	%rd535, %r694, 4;
	add.s64 	%rd536, %rd71, %rd535;
	ld.shared.u8 	%r695, [%rd536];
	mul.wide.u32 	%rd537, %r695, 4;
	add.s64 	%rd538, %rd182, %rd537;
	ld.shared.u32 	%r696, [%rd538];
	xor.b32  	%r697, %r693, %r696;
	and.b32  	%r698, %r223, 255;
	mul.wide.u32 	%rd539, %r698, 4;
	add.s64 	%rd540, %rd71, %rd539;
	ld.shared.u8 	%r699, [%rd540];
	mul.wide.u32 	%rd541, %r699, 4;
	add.s64 	%rd542, %rd187, %rd541;
	ld.shared.u32 	%r700, [%rd542];
	xor.b32  	%r701, %r697, %r700;
	shr.u32 	%r702, %r224, 24;
	mul.wide.u32 	%rd543, %r702, 4;
	add.s64 	%rd544, %rd71, %rd543;
	ld.shared.u8 	%r703, [%rd544];
	mul.wide.u32 	%rd545, %r703, 4;
	add.s64 	%rd546, %rd172, %rd545;
	bfe.u32 	%r704, %r224, 16, 8;
	mul.wide.u32 	%rd547, %r704, 4;
	add.s64 	%rd548, %rd71, %rd547;
	ld.shared.u8 	%r705, [%rd548];
	mul.wide.u32 	%rd549, %r705, 4;
	add.s64 	%rd550, %rd177, %rd549;
	ld.shared.u32 	%r706, [%rd550];
	ld.shared.u32 	%r707, [%rd546];
	xor.b32  	%r708, %r706, %r707;
	bfe.u32 	%r709, %r224, 8, 8;
	mul.wide.u32 	%rd551, %r709, 4;
	add.s64 	%rd552, %rd71, %rd551;
	ld.shared.u8 	%r710, [%rd552];
	mul.wide.u32 	%rd553, %r710, 4;
	add.s64 	%rd554, %rd182, %rd553;
	ld.shared.u32 	%r711, [%rd554];
	xor.b32  	%r712, %r708, %r711;
	and.b32  	%r713, %r224, 255;
	mul.wide.u32 	%rd555, %r713, 4;
	add.s64 	%rd556, %rd71, %rd555;
	ld.shared.u8 	%r714, [%rd556];
	mul.wide.u32 	%rd557, %r714, 4;
	add.s64 	%rd558, %rd187, %rd557;
	ld.shared.u32 	%r715, [%rd558];
	xor.b32  	%r716, %r712, %r715;
	shr.u32 	%r717, %r225, 24;
	mul.wide.u32 	%rd559, %r717, 4;
	add.s64 	%rd560, %rd71, %rd559;
	ld.shared.u8 	%r718, [%rd560];
	mul.wide.u32 	%rd561, %r718, 4;
	add.s64 	%rd562, %rd172, %rd561;
	bfe.u32 	%r719, %r225, 16, 8;
	mul.wide.u32 	%rd563, %r719, 4;
	add.s64 	%rd564, %rd71, %rd563;
	ld.shared.u8 	%r720, [%rd564];
	mul.wide.u32 	%rd565, %r720, 4;
	add.s64 	%rd566, %rd177, %rd565;
	ld.shared.u32 	%r721, [%rd566];
	ld.shared.u32 	%r722, [%rd562];
	xor.b32  	%r723, %r721, %r722;
	bfe.u32 	%r724, %r225, 8, 8;
	mul.wide.u32 	%rd567, %r724, 4;
	add.s64 	%rd568, %rd71, %rd567;
	ld.shared.u8 	%r725, [%rd568];
	mul.wide.u32 	%rd569, %r725, 4;
	add.s64 	%rd570, %rd182, %rd569;
	ld.shared.u32 	%r726, [%rd570];
	xor.b32  	%r727, %r723, %r726;
	and.b32  	%r728, %r225, 255;
	mul.wide.u32 	%rd571, %r728, 4;
	add.s64 	%rd572, %rd71, %rd571;
	ld.shared.u8 	%r729, [%rd572];
	mul.wide.u32 	%rd573, %r729, 4;
	add.s64 	%rd574, %rd187, %rd573;
	ld.shared.u32 	%r730, [%rd574];
	xor.b32  	%r731, %r727, %r730;
	mul.wide.u32 	%rd575, %r241, 4;
	add.s64 	%rd576, %rd172, %rd575;
	add.s64 	%rd577, %rd71, %rd113;
	ld.shared.u8 	%r732, [%rd577];
	mul.wide.u32 	%rd578, %r732, 4;
	add.s64 	%rd579, %rd177, %rd578;
	ld.shared.u32 	%r733, [%rd579];
	ld.shared.u32 	%r734, [%rd576];
	xor.b32  	%r735, %r733, %r734;
	add.s64 	%rd580, %rd71, %rd115;
	ld.shared.u8 	%r736, [%rd580];
	mul.wide.u32 	%rd581, %r736, 4;
	add.s64 	%rd582, %rd182, %rd581;
	ld.shared.u32 	%r737, [%rd582];
	xor.b32  	%r738, %r735, %r737;
	add.s64 	%rd583, %rd71, %rd117;
	ld.shared.u8 	%r739, [%rd583];
	mul.wide.u32 	%rd584, %r739, 4;
	add.s64 	%rd585, %rd187, %rd584;
	ld.shared.u32 	%r740, [%rd585];
	xor.b32  	%r741, %r738, %r740;
	shr.u32 	%r742, %r194, 24;
	mul.wide.u32 	%rd586, %r742, 4;
	add.s64 	%rd587, %rd71, %rd586;
	ld.shared.u8 	%r743, [%rd587];
	mul.wide.u32 	%rd588, %r743, 4;
	add.s64 	%rd589, %rd172, %rd588;
	bfe.u32 	%r744, %r198, 16, 8;
	mul.wide.u32 	%rd590, %r744, 4;
	add.s64 	%rd591, %rd71, %rd590;
	ld.shared.u8 	%r745, [%rd591];
	mul.wide.u32 	%rd592, %r745, 4;
	add.s64 	%rd593, %rd177, %rd592;
	ld.shared.u32 	%r746, [%rd593];
	ld.shared.u32 	%r747, [%rd589];
	xor.b32  	%r748, %r746, %r747;
	bfe.u32 	%r749, %r202, 8, 8;
	mul.wide.u32 	%rd594, %r749, 4;
	add.s64 	%rd595, %rd71, %rd594;
	ld.shared.u8 	%r750, [%rd595];
	mul.wide.u32 	%rd596, %r750, 4;
	add.s64 	%rd597, %rd182, %rd596;
	ld.shared.u32 	%r751, [%rd597];
	xor.b32  	%r752, %r748, %r751;
	and.b32  	%r753, %r205, 255;
	mul.wide.u32 	%rd598, %r753, 4;
	add.s64 	%rd599, %rd71, %rd598;
	ld.shared.u8 	%r754, [%rd599];
	mul.wide.u32 	%rd600, %r754, 4;
	add.s64 	%rd601, %rd187, %rd600;
	ld.shared.u32 	%r755, [%rd601];
	xor.b32  	%r756, %r752, %r755;
	shr.u32 	%r757, %r206, 24;
	mul.wide.u32 	%rd602, %r757, 4;
	add.s64 	%rd603, %rd71, %rd602;
	ld.shared.u8 	%r758, [%rd603];
	mul.wide.u32 	%rd604, %r758, 4;
	add.s64 	%rd605, %rd172, %rd604;
	bfe.u32 	%r759, %r206, 16, 8;
	mul.wide.u32 	%rd606, %r759, 4;
	add.s64 	%rd607, %rd71, %rd606;
	ld.shared.u8 	%r760, [%rd607];
	mul.wide.u32 	%rd608, %r760, 4;
	add.s64 	%rd609, %rd177, %rd608;
	ld.shared.u32 	%r761, [%rd609];
	ld.shared.u32 	%r762, [%rd605];
	xor.b32  	%r763, %r761, %r762;
	bfe.u32 	%r764, %r206, 8, 8;
	mul.wide.u32 	%rd610, %r764, 4;
	add.s64 	%rd611, %rd71, %rd610;
	ld.shared.u8 	%r765, [%rd611];
	mul.wide.u32 	%rd612, %r765, 4;
	add.s64 	%rd613, %rd182, %rd612;
	ld.shared.u32 	%r766, [%rd613];
	xor.b32  	%r767, %r763, %r766;
	and.b32  	%r768, %r206, 255;
	mul.wide.u32 	%rd614, %r768, 4;
	add.s64 	%rd615, %rd71, %rd614;
	ld.shared.u8 	%r769, [%rd615];
	mul.wide.u32 	%rd616, %r769, 4;
	add.s64 	%rd617, %rd187, %rd616;
	ld.shared.u32 	%r770, [%rd617];
	xor.b32  	%r771, %r767, %r770;
	shr.u32 	%r772, %r207, 24;
	mul.wide.u32 	%rd618, %r772, 4;
	add.s64 	%rd619, %rd71, %rd618;
	ld.shared.u8 	%r773, [%rd619];
	mul.wide.u32 	%rd620, %r773, 4;
	add.s64 	%rd621, %rd172, %rd620;
	bfe.u32 	%r774, %r207, 16, 8;
	mul.wide.u32 	%rd622, %r774, 4;
	add.s64 	%rd623, %rd71, %rd622;
	ld.shared.u8 	%r775, [%rd623];
	mul.wide.u32 	%rd624, %r775, 4;
	add.s64 	%rd625, %rd177, %rd624;
	ld.shared.u32 	%r776, [%rd625];
	ld.shared.u32 	%r777, [%rd621];
	xor.b32  	%r778, %r776, %r777;
	bfe.u32 	%r779, %r207, 8, 8;
	mul.wide.u32 	%rd626, %r779, 4;
	add.s64 	%rd627, %rd71, %rd626;
	ld.shared.u8 	%r780, [%rd627];
	mul.wide.u32 	%rd628, %r780, 4;
	add.s64 	%rd629, %rd182, %rd628;
	ld.shared.u32 	%r781, [%rd629];
	xor.b32  	%r782, %r778, %r781;
	and.b32  	%r783, %r207, 255;
	mul.wide.u32 	%rd630, %r783, 4;
	add.s64 	%rd631, %rd71, %rd630;
	ld.shared.u8 	%r784, [%rd631];
	mul.wide.u32 	%rd632, %r784, 4;
	add.s64 	%rd633, %rd187, %rd632;
	ld.shared.u32 	%r785, [%rd633];
	xor.b32  	%r786, %r782, %r785;
	add.s64 	%rd634, %rd71, %rd105;
	ld.shared.u8 	%r787, [%rd634];
	mul.wide.u32 	%rd635, %r787, 4;
	add.s64 	%rd636, %rd172, %rd635;
	add.s64 	%rd637, %rd71, %rd107;
	ld.shared.u8 	%r788, [%rd637];
	mul.wide.u32 	%rd638, %r788, 4;
	add.s64 	%rd639, %rd177, %rd638;
	ld.shared.u32 	%r789, [%rd639];
	ld.shared.u32 	%r790, [%rd636];
	xor.b32  	%r791, %r789, %r790;
	add.s64 	%rd640, %rd71, %rd109;
	ld.shared.u8 	%r792, [%rd640];
	mul.wide.u32 	%rd641, %r792, 4;
	add.s64 	%rd642, %rd182, %rd641;
	ld.shared.u32 	%r793, [%rd642];
	xor.b32  	%r794, %r791, %r793;
	mul.wide.u32 	%rd643, %r222, 4;
	add.s64 	%rd644, %rd187, %rd643;
	ld.shared.u32 	%r795, [%rd644];
	xor.b32  	%r796, %r794, %r795;
	shr.u32 	%r797, %r175, 24;
	mul.wide.u32 	%rd645, %r797, 4;
	add.s64 	%rd646, %rd71, %rd645;
	ld.shared.u8 	%r798, [%rd646];
	mul.wide.u32 	%rd647, %r798, 4;
	add.s64 	%rd648, %rd172, %rd647;
	bfe.u32 	%r799, %r179, 16, 8;
	mul.wide.u32 	%rd649, %r799, 4;
	add.s64 	%rd650, %rd71, %rd649;
	ld.shared.u8 	%r800, [%rd650];
	mul.wide.u32 	%rd651, %r800, 4;
	add.s64 	%rd652, %rd177, %rd651;
	ld.shared.u32 	%r801, [%rd652];
	ld.shared.u32 	%r802, [%rd648];
	xor.b32  	%r803, %r801, %r802;
	bfe.u32 	%r804, %r183, 8, 8;
	mul.wide.u32 	%rd653, %r804, 4;
	add.s64 	%rd654, %rd71, %rd653;
	ld.shared.u8 	%r805, [%rd654];
	mul.wide.u32 	%rd655, %r805, 4;
	add.s64 	%rd656, %rd182, %rd655;
	ld.shared.u32 	%r806, [%rd656];
	xor.b32  	%r807, %r803, %r806;
	and.b32  	%r808, %r186, 255;
	mul.wide.u32 	%rd657, %r808, 4;
	add.s64 	%rd658, %rd71, %rd657;
	ld.shared.u8 	%r809, [%rd658];
	mul.wide.u32 	%rd659, %r809, 4;
	add.s64 	%rd660, %rd187, %rd659;
	ld.shared.u32 	%r810, [%rd660];
	xor.b32  	%r811, %r807, %r810;
	shr.u32 	%r812, %r187, 24;
	mul.wide.u32 	%rd661, %r812, 4;
	add.s64 	%rd662, %rd71, %rd661;
	ld.shared.u8 	%r813, [%rd662];
	mul.wide.u32 	%rd663, %r813, 4;
	add.s64 	%rd664, %rd172, %rd663;
	bfe.u32 	%r814, %r187, 16, 8;
	mul.wide.u32 	%rd665, %r814, 4;
	add.s64 	%rd666, %rd71, %rd665;
	ld.shared.u8 	%r815, [%rd666];
	mul.wide.u32 	%rd667, %r815, 4;
	add.s64 	%rd668, %rd177, %rd667;
	ld.shared.u32 	%r816, [%rd668];
	ld.shared.u32 	%r817, [%rd664];
	xor.b32  	%r818, %r816, %r817;
	bfe.u32 	%r819, %r187, 8, 8;
	mul.wide.u32 	%rd669, %r819, 4;
	add.s64 	%rd670, %rd71, %rd669;
	ld.shared.u8 	%r820, [%rd670];
	mul.wide.u32 	%rd671, %r820, 4;
	add.s64 	%rd672, %rd182, %rd671;
	ld.shared.u32 	%r821, [%rd672];
	xor.b32  	%r822, %r818, %r821;
	and.b32  	%r823, %r187, 255;
	mul.wide.u32 	%rd673, %r823, 4;
	add.s64 	%rd674, %rd71, %rd673;
	ld.shared.u8 	%r824, [%rd674];
	mul.wide.u32 	%rd675, %r824, 4;
	add.s64 	%rd676, %rd187, %rd675;
	ld.shared.u32 	%r825, [%rd676];
	xor.b32  	%r826, %r822, %r825;
	shr.u32 	%r827, %r188, 24;
	mul.wide.u32 	%rd677, %r827, 4;
	add.s64 	%rd678, %rd71, %rd677;
	ld.shared.u8 	%r828, [%rd678];
	mul.wide.u32 	%rd679, %r828, 4;
	add.s64 	%rd680, %rd172, %rd679;
	bfe.u32 	%r829, %r188, 16, 8;
	mul.wide.u32 	%rd681, %r829, 4;
	add.s64 	%rd682, %rd71, %rd681;
	ld.shared.u8 	%r830, [%rd682];
	mul.wide.u32 	%rd683, %r830, 4;
	add.s64 	%rd684, %rd177, %rd683;
	ld.shared.u32 	%r831, [%rd684];
	ld.shared.u32 	%r832, [%rd680];
	xor.b32  	%r833, %r831, %r832;
	bfe.u32 	%r834, %r188, 8, 8;
	mul.wide.u32 	%rd685, %r834, 4;
	add.s64 	%rd686, %rd71, %rd685;
	ld.shared.u8 	%r835, [%rd686];
	mul.wide.u32 	%rd687, %r835, 4;
	add.s64 	%rd688, %rd182, %rd687;
	ld.shared.u32 	%r836, [%rd688];
	xor.b32  	%r837, %r833, %r836;
	and.b32  	%r838, %r188, 255;
	mul.wide.u32 	%rd689, %r838, 4;
	add.s64 	%rd690, %rd71, %rd689;
	ld.shared.u8 	%r839, [%rd690];
	mul.wide.u32 	%rd691, %r839, 4;
	add.s64 	%rd692, %rd187, %rd691;
	ld.shared.u32 	%r840, [%rd692];
	xor.b32  	%r841, %r837, %r840;
	mul.wide.u32 	%rd693, %r204, 4;
	add.s64 	%rd694, %rd172, %rd693;
	add.s64 	%rd695, %rd71, %rd97;
	ld.shared.u8 	%r842, [%rd695];
	mul.wide.u32 	%rd696, %r842, 4;
	add.s64 	%rd697, %rd177, %rd696;
	ld.shared.u32 	%r843, [%rd697];
	ld.shared.u32 	%r844, [%rd694];
	xor.b32  	%r845, %r843, %r844;
	add.s64 	%rd698, %rd71, %rd99;
	ld.shared.u8 	%r846, [%rd698];
	mul.wide.u32 	%rd699, %r846, 4;
	add.s64 	%rd700, %rd182, %rd699;
	ld.shared.u32 	%r847, [%rd700];
	xor.b32  	%r848, %r845, %r847;
	add.s64 	%rd701, %rd71, %rd101;
	ld.shared.u8 	%r849, [%rd701];
	mul.wide.u32 	%rd702, %r849, 4;
	add.s64 	%rd703, %rd187, %rd702;
	ld.shared.u32 	%r850, [%rd703];
	xor.b32  	%r851, %r848, %r850;
	shr.u32 	%r852, %r157, 24;
	mul.wide.u32 	%rd704, %r852, 4;
	add.s64 	%rd705, %rd71, %rd704;
	ld.shared.u8 	%r853, [%rd705];
	mul.wide.u32 	%rd706, %r853, 4;
	add.s64 	%rd707, %rd172, %rd706;
	bfe.u32 	%r854, %r161, 16, 8;
	mul.wide.u32 	%rd708, %r854, 4;
	add.s64 	%rd709, %rd71, %rd708;
	ld.shared.u8 	%r855, [%rd709];
	mul.wide.u32 	%rd710, %r855, 4;
	add.s64 	%rd711, %rd177, %rd710;
	ld.shared.u32 	%r856, [%rd711];
	ld.shared.u32 	%r857, [%rd707];
	xor.b32  	%r858, %r856, %r857;
	bfe.u32 	%r859, %r165, 8, 8;
	mul.wide.u32 	%rd712, %r859, 4;
	add.s64 	%rd713, %rd71, %rd712;
	ld.shared.u8 	%r860, [%rd713];
	mul.wide.u32 	%rd714, %r860, 4;
	add.s64 	%rd715, %rd182, %rd714;
	ld.shared.u32 	%r861, [%rd715];
	xor.b32  	%r862, %r858, %r861;
	and.b32  	%r863, %r168, 255;
	mul.wide.u32 	%rd716, %r863, 4;
	add.s64 	%rd717, %rd71, %rd716;
	ld.shared.u8 	%r864, [%rd717];
	mul.wide.u32 	%rd718, %r864, 4;
	add.s64 	%rd719, %rd187, %rd718;
	ld.shared.u32 	%r865, [%rd719];
	xor.b32  	%r866, %r862, %r865;
	shr.u32 	%r867, %r169, 24;
	mul.wide.u32 	%rd720, %r867, 4;
	add.s64 	%rd721, %rd71, %rd720;
	ld.shared.u8 	%r868, [%rd721];
	mul.wide.u32 	%rd722, %r868, 4;
	add.s64 	%rd723, %rd172, %rd722;
	bfe.u32 	%r869, %r169, 16, 8;
	mul.wide.u32 	%rd724, %r869, 4;
	add.s64 	%rd725, %rd71, %rd724;
	ld.shared.u8 	%r870, [%rd725];
	mul.wide.u32 	%rd726, %r870, 4;
	add.s64 	%rd727, %rd177, %rd726;
	ld.shared.u32 	%r871, [%rd727];
	ld.shared.u32 	%r872, [%rd723];
	xor.b32  	%r873, %r871, %r872;
	bfe.u32 	%r874, %r169, 8, 8;
	mul.wide.u32 	%rd728, %r874, 4;
	add.s64 	%rd729, %rd71, %rd728;
	ld.shared.u8 	%r875, [%rd729];
	mul.wide.u32 	%rd730, %r875, 4;
	add.s64 	%rd731, %rd182, %rd730;
	ld.shared.u32 	%r876, [%rd731];
	xor.b32  	%r877, %r873, %r876;
	and.b32  	%r878, %r169, 255;
	mul.wide.u32 	%rd732, %r878, 4;
	add.s64 	%rd733, %rd71, %rd732;
	ld.shared.u8 	%r879, [%rd733];
	mul.wide.u32 	%rd734, %r879, 4;
	add.s64 	%rd735, %rd187, %rd734;
	ld.shared.u32 	%r880, [%rd735];
	xor.b32  	%r881, %r877, %r880;
	shr.u32 	%r882, %r170, 24;
	mul.wide.u32 	%rd736, %r882, 4;
	add.s64 	%rd737, %rd71, %rd736;
	ld.shared.u8 	%r883, [%rd737];
	mul.wide.u32 	%rd738, %r883, 4;
	add.s64 	%rd739, %rd172, %rd738;
	bfe.u32 	%r884, %r170, 16, 8;
	mul.wide.u32 	%rd740, %r884, 4;
	add.s64 	%rd741, %rd71, %rd740;
	ld.shared.u8 	%r885, [%rd741];
	mul.wide.u32 	%rd742, %r885, 4;
	add.s64 	%rd743, %rd177, %rd742;
	ld.shared.u32 	%r886, [%rd743];
	ld.shared.u32 	%r887, [%rd739];
	xor.b32  	%r888, %r886, %r887;
	bfe.u32 	%r889, %r170, 8, 8;
	mul.wide.u32 	%rd744, %r889, 4;
	add.s64 	%rd745, %rd71, %rd744;
	ld.shared.u8 	%r890, [%rd745];
	mul.wide.u32 	%rd746, %r890, 4;
	add.s64 	%rd747, %rd182, %rd746;
	ld.shared.u32 	%r891, [%rd747];
	xor.b32  	%r892, %r888, %r891;
	and.b32  	%r893, %r170, 255;
	mul.wide.u32 	%rd748, %r893, 4;
	add.s64 	%rd749, %rd71, %rd748;
	ld.shared.u8 	%r894, [%rd749];
	mul.wide.u32 	%rd750, %r894, 4;
	add.s64 	%rd751, %rd187, %rd750;
	ld.shared.u32 	%r895, [%rd751];
	xor.b32  	%r896, %r892, %r895;
	add.s64 	%rd752, %rd71, %rd89;
	ld.shared.u8 	%r897, [%rd752];
	mul.wide.u32 	%rd753, %r897, 4;
	add.s64 	%rd754, %rd172, %rd753;
	add.s64 	%rd755, %rd71, %rd91;
	ld.shared.u8 	%r898, [%rd755];
	mul.wide.u32 	%rd756, %r898, 4;
	add.s64 	%rd757, %rd177, %rd756;
	ld.shared.u32 	%r899, [%rd757];
	ld.shared.u32 	%r900, [%rd754];
	xor.b32  	%r901, %r899, %r900;
	add.s64 	%rd758, %rd71, %rd93;
	ld.shared.u8 	%r902, [%rd758];
	mul.wide.u32 	%rd759, %r902, 4;
	add.s64 	%rd760, %rd182, %rd759;
	ld.shared.u32 	%r903, [%rd760];
	xor.b32  	%r904, %r901, %r903;
	mul.wide.u32 	%rd761, %r185, 4;
	add.s64 	%rd762, %rd187, %rd761;
	ld.shared.u32 	%r905, [%rd762];
	xor.b32  	%r906, %r904, %r905;
	shr.u32 	%r907, %r138, 24;
	mul.wide.u32 	%rd763, %r907, 4;
	add.s64 	%rd764, %rd71, %rd763;
	ld.shared.u8 	%r908, [%rd764];
	mul.wide.u32 	%rd765, %r908, 4;
	add.s64 	%rd766, %rd172, %rd765;
	bfe.u32 	%r909, %r142, 16, 8;
	mul.wide.u32 	%rd767, %r909, 4;
	add.s64 	%rd768, %rd71, %rd767;
	ld.shared.u8 	%r910, [%rd768];
	mul.wide.u32 	%rd769, %r910, 4;
	add.s64 	%rd770, %rd177, %rd769;
	ld.shared.u32 	%r911, [%rd770];
	ld.shared.u32 	%r912, [%rd766];
	xor.b32  	%r913, %r911, %r912;
	bfe.u32 	%r914, %r146, 8, 8;
	mul.wide.u32 	%rd771, %r914, 4;
	add.s64 	%rd772, %rd71, %rd771;
	ld.shared.u8 	%r915, [%rd772];
	mul.wide.u32 	%rd773, %r915, 4;
	add.s64 	%rd774, %rd182, %rd773;
	ld.shared.u32 	%r916, [%rd774];
	xor.b32  	%r917, %r913, %r916;
	and.b32  	%r918, %r149, 255;
	mul.wide.u32 	%rd775, %r918, 4;
	add.s64 	%rd776, %rd71, %rd775;
	ld.shared.u8 	%r919, [%rd776];
	mul.wide.u32 	%rd777, %r919, 4;
	add.s64 	%rd778, %rd187, %rd777;
	ld.shared.u32 	%r920, [%rd778];
	xor.b32  	%r921, %r917, %r920;
	shr.u32 	%r922, %r150, 24;
	mul.wide.u32 	%rd779, %r922, 4;
	add.s64 	%rd780, %rd71, %rd779;
	ld.shared.u8 	%r923, [%rd780];
	mul.wide.u32 	%rd781, %r923, 4;
	add.s64 	%rd782, %rd172, %rd781;
	bfe.u32 	%r924, %r150, 16, 8;
	mul.wide.u32 	%rd783, %r924, 4;
	add.s64 	%rd784, %rd71, %rd783;
	ld.shared.u8 	%r925, [%rd784];
	mul.wide.u32 	%rd785, %r925, 4;
	add.s64 	%rd786, %rd177, %rd785;
	ld.shared.u32 	%r926, [%rd786];
	ld.shared.u32 	%r927, [%rd782];
	xor.b32  	%r928, %r926, %r927;
	bfe.u32 	%r929, %r150, 8, 8;
	mul.wide.u32 	%rd787, %r929, 4;
	add.s64 	%rd788, %rd71, %rd787;
	ld.shared.u8 	%r930, [%rd788];
	mul.wide.u32 	%rd789, %r930, 4;
	add.s64 	%rd790, %rd182, %rd789;
	ld.shared.u32 	%r931, [%rd790];
	xor.b32  	%r932, %r928, %r931;
	and.b32  	%r933, %r150, 255;
	mul.wide.u32 	%rd791, %r933, 4;
	add.s64 	%rd792, %rd71, %rd791;
	ld.shared.u8 	%r934, [%rd792];
	mul.wide.u32 	%rd793, %r934, 4;
	add.s64 	%rd794, %rd187, %rd793;
	ld.shared.u32 	%r935, [%rd794];
	xor.b32  	%r936, %r932, %r935;
	shr.u32 	%r937, %r151, 24;
	mul.wide.u32 	%rd795, %r937, 4;
	add.s64 	%rd796, %rd71, %rd795;
	ld.shared.u8 	%r938, [%rd796];
	mul.wide.u32 	%rd797, %r938, 4;
	add.s64 	%rd798, %rd172, %rd797;
	bfe.u32 	%r939, %r151, 16, 8;
	mul.wide.u32 	%rd799, %r939, 4;
	add.s64 	%rd800, %rd71, %rd799;
	ld.shared.u8 	%r940, [%rd800];
	mul.wide.u32 	%rd801, %r940, 4;
	add.s64 	%rd802, %rd177, %rd801;
	ld.shared.u32 	%r941, [%rd802];
	ld.shared.u32 	%r942, [%rd798];
	xor.b32  	%r943, %r941, %r942;
	bfe.u32 	%r944, %r151, 8, 8;
	mul.wide.u32 	%rd803, %r944, 4;
	add.s64 	%rd804, %rd71, %rd803;
	ld.shared.u8 	%r945, [%rd804];
	mul.wide.u32 	%rd805, %r945, 4;
	add.s64 	%rd806, %rd182, %rd805;
	ld.shared.u32 	%r946, [%rd806];
	xor.b32  	%r947, %r943, %r946;
	and.b32  	%r948, %r151, 255;
	mul.wide.u32 	%rd807, %r948, 4;
	add.s64 	%rd808, %rd71, %rd807;
	ld.shared.u8 	%r949, [%rd808];
	mul.wide.u32 	%rd809, %r949, 4;
	add.s64 	%rd810, %rd187, %rd809;
	ld.shared.u32 	%r950, [%rd810];
	xor.b32  	%r951, %r947, %r950;
	mul.wide.u32 	%rd811, %r167, 4;
	add.s64 	%rd812, %rd172, %rd811;
	add.s64 	%rd813, %rd71, %rd81;
	ld.shared.u8 	%r952, [%rd813];
	mul.wide.u32 	%rd814, %r952, 4;
	add.s64 	%rd815, %rd177, %rd814;
	ld.shared.u32 	%r953, [%rd815];
	ld.shared.u32 	%r954, [%rd812];
	xor.b32  	%r955, %r953, %r954;
	add.s64 	%rd816, %rd71, %rd83;
	ld.shared.u8 	%r956, [%rd816];
	mul.wide.u32 	%rd817, %r956, 4;
	add.s64 	%rd818, %rd182, %rd817;
	ld.shared.u32 	%r957, [%rd818];
	xor.b32  	%r958, %r955, %r957;
	add.s64 	%rd819, %rd71, %rd85;
	ld.shared.u8 	%r959, [%rd819];
	mul.wide.u32 	%rd820, %r959, 4;
	add.s64 	%rd821, %rd187, %rd820;
	ld.shared.u32 	%r960, [%rd821];
	xor.b32  	%r961, %r958, %r960;
	shr.u32 	%r962, %r120, 24;
	mul.wide.u32 	%rd822, %r962, 4;
	add.s64 	%rd823, %rd71, %rd822;
	ld.shared.u8 	%r963, [%rd823];
	mul.wide.u32 	%rd824, %r963, 4;
	add.s64 	%rd825, %rd172, %rd824;
	bfe.u32 	%r964, %r124, 16, 8;
	mul.wide.u32 	%rd826, %r964, 4;
	add.s64 	%rd827, %rd71, %rd826;
	ld.shared.u8 	%r965, [%rd827];
	mul.wide.u32 	%rd828, %r965, 4;
	add.s64 	%rd829, %rd177, %rd828;
	ld.shared.u32 	%r966, [%rd829];
	ld.shared.u32 	%r967, [%rd825];
	xor.b32  	%r968, %r966, %r967;
	bfe.u32 	%r969, %r128, 8, 8;
	mul.wide.u32 	%rd830, %r969, 4;
	add.s64 	%rd831, %rd71, %rd830;
	ld.shared.u8 	%r970, [%rd831];
	mul.wide.u32 	%rd832, %r970, 4;
	add.s64 	%rd833, %rd182, %rd832;
	ld.shared.u32 	%r971, [%rd833];
	xor.b32  	%r972, %r968, %r971;
	and.b32  	%r973, %r131, 255;
	mul.wide.u32 	%rd834, %r973, 4;
	add.s64 	%rd835, %rd71, %rd834;
	ld.shared.u8 	%r974, [%rd835];
	mul.wide.u32 	%rd836, %r974, 4;
	add.s64 	%rd837, %rd187, %rd836;
	ld.shared.u32 	%r975, [%rd837];
	xor.b32  	%r976, %r972, %r975;
	shr.u32 	%r977, %r132, 24;
	mul.wide.u32 	%rd838, %r977, 4;
	add.s64 	%rd839, %rd71, %rd838;
	ld.shared.u8 	%r978, [%rd839];
	mul.wide.u32 	%rd840, %r978, 4;
	add.s64 	%rd841, %rd172, %rd840;
	bfe.u32 	%r979, %r132, 16, 8;
	mul.wide.u32 	%rd842, %r979, 4;
	add.s64 	%rd843, %rd71, %rd842;
	ld.shared.u8 	%r980, [%rd843];
	mul.wide.u32 	%rd844, %r980, 4;
	add.s64 	%rd845, %rd177, %rd844;
	ld.shared.u32 	%r981, [%rd845];
	ld.shared.u32 	%r982, [%rd841];
	xor.b32  	%r983, %r981, %r982;
	bfe.u32 	%r984, %r132, 8, 8;
	mul.wide.u32 	%rd846, %r984, 4;
	add.s64 	%rd847, %rd71, %rd846;
	ld.shared.u8 	%r985, [%rd847];
	mul.wide.u32 	%rd848, %r985, 4;
	add.s64 	%rd849, %rd182, %rd848;
	ld.shared.u32 	%r986, [%rd849];
	xor.b32  	%r987, %r983, %r986;
	and.b32  	%r988, %r132, 255;
	mul.wide.u32 	%rd850, %r988, 4;
	add.s64 	%rd851, %rd71, %rd850;
	ld.shared.u8 	%r989, [%rd851];
	mul.wide.u32 	%rd852, %r989, 4;
	add.s64 	%rd853, %rd187, %rd852;
	ld.shared.u32 	%r990, [%rd853];
	xor.b32  	%r991, %r987, %r990;
	shr.u32 	%r992, %r133, 24;
	mul.wide.u32 	%rd854, %r992, 4;
	add.s64 	%rd855, %rd71, %rd854;
	ld.shared.u8 	%r993, [%rd855];
	mul.wide.u32 	%rd856, %r993, 4;
	add.s64 	%rd857, %rd172, %rd856;
	bfe.u32 	%r994, %r133, 16, 8;
	mul.wide.u32 	%rd858, %r994, 4;
	add.s64 	%rd859, %rd71, %rd858;
	ld.shared.u8 	%r995, [%rd859];
	mul.wide.u32 	%rd860, %r995, 4;
	add.s64 	%rd861, %rd177, %rd860;
	ld.shared.u32 	%r996, [%rd861];
	ld.shared.u32 	%r997, [%rd857];
	xor.b32  	%r998, %r996, %r997;
	bfe.u32 	%r999, %r133, 8, 8;
	mul.wide.u32 	%rd862, %r999, 4;
	add.s64 	%rd863, %rd71, %rd862;
	ld.shared.u8 	%r1000, [%rd863];
	mul.wide.u32 	%rd864, %r1000, 4;
	add.s64 	%rd865, %rd182, %rd864;
	ld.shared.u32 	%r1001, [%rd865];
	xor.b32  	%r1002, %r998, %r1001;
	and.b32  	%r1003, %r133, 255;
	mul.wide.u32 	%rd866, %r1003, 4;
	add.s64 	%rd867, %rd71, %rd866;
	ld.shared.u8 	%r1004, [%rd867];
	mul.wide.u32 	%rd868, %r1004, 4;
	add.s64 	%rd869, %rd187, %rd868;
	ld.shared.u32 	%r1005, [%rd869];
	xor.b32  	%r1006, %r1002, %r1005;
	add.s64 	%rd870, %rd71, %rd73;
	ld.shared.u8 	%r1007, [%rd870];
	mul.wide.u32 	%rd871, %r1007, 4;
	add.s64 	%rd872, %rd172, %rd871;
	add.s64 	%rd873, %rd71, %rd75;
	ld.shared.u8 	%r1008, [%rd873];
	mul.wide.u32 	%rd874, %r1008, 4;
	add.s64 	%rd875, %rd177, %rd874;
	ld.shared.u32 	%r1009, [%rd875];
	ld.shared.u32 	%r1010, [%rd872];
	xor.b32  	%r1011, %r1009, %r1010;
	add.s64 	%rd876, %rd71, %rd77;
	ld.shared.u8 	%r1012, [%rd876];
	mul.wide.u32 	%rd877, %r1012, 4;
	add.s64 	%rd878, %rd182, %rd877;
	ld.shared.u32 	%r1013, [%rd878];
	xor.b32  	%r1014, %r1011, %r1013;
	mul.wide.u32 	%rd879, %r148, 4;
	add.s64 	%rd880, %rd187, %rd879;
	ld.shared.u32 	%r1015, [%rd880];
	xor.b32  	%r1016, %r1014, %r1015;
	shr.u32 	%r1017, %r50, 24;
	mul.wide.u32 	%rd881, %r1017, 4;
	add.s64 	%rd882, %rd71, %rd881;
	ld.shared.u8 	%r1018, [%rd882];
	mul.wide.u32 	%rd883, %r1018, 4;
	add.s64 	%rd884, %rd172, %rd883;
	bfe.u32 	%r1019, %r50, 16, 8;
	mul.wide.u32 	%rd885, %r1019, 4;
	add.s64 	%rd886, %rd71, %rd885;
	ld.shared.u8 	%r1020, [%rd886];
	mul.wide.u32 	%rd887, %r1020, 4;
	add.s64 	%rd888, %rd177, %rd887;
	ld.shared.u32 	%r1021, [%rd888];
	ld.shared.u32 	%r1022, [%rd884];
	xor.b32  	%r1023, %r1021, %r1022;
	bfe.u32 	%r1024, %r50, 8, 8;
	mul.wide.u32 	%rd889, %r1024, 4;
	add.s64 	%rd890, %rd71, %rd889;
	ld.shared.u8 	%r1025, [%rd890];
	mul.wide.u32 	%rd891, %r1025, 4;
	add.s64 	%rd892, %rd182, %rd891;
	ld.shared.u32 	%r1026, [%rd892];
	xor.b32  	%r1027, %r1023, %r1026;
	and.b32  	%r1028, %r50, 255;
	mul.wide.u32 	%rd893, %r1028, 4;
	add.s64 	%rd894, %rd71, %rd893;
	ld.shared.u8 	%r1029, [%rd894];
	mul.wide.u32 	%rd895, %r1029, 4;
	add.s64 	%rd896, %rd187, %rd895;
	ld.shared.u32 	%r1030, [%rd896];
	xor.b32  	%r1031, %r1027, %r1030;
	shr.u32 	%r1032, %r52, 24;
	mul.wide.u32 	%rd897, %r1032, 4;
	add.s64 	%rd898, %rd71, %rd897;
	ld.shared.u8 	%r1033, [%rd898];
	mul.wide.u32 	%rd899, %r1033, 4;
	add.s64 	%rd900, %rd172, %rd899;
	bfe.u32 	%r1034, %r52, 16, 8;
	mul.wide.u32 	%rd901, %r1034, 4;
	add.s64 	%rd902, %rd71, %rd901;
	ld.shared.u8 	%r1035, [%rd902];
	mul.wide.u32 	%rd903, %r1035, 4;
	add.s64 	%rd904, %rd177, %rd903;
	ld.shared.u32 	%r1036, [%rd904];
	ld.shared.u32 	%r1037, [%rd900];
	xor.b32  	%r1038, %r1036, %r1037;
	bfe.u32 	%r1039, %r52, 8, 8;
	mul.wide.u32 	%rd905, %r1039, 4;
	add.s64 	%rd906, %rd71, %rd905;
	ld.shared.u8 	%r1040, [%rd906];
	mul.wide.u32 	%rd907, %r1040, 4;
	add.s64 	%rd908, %rd182, %rd907;
	ld.shared.u32 	%r1041, [%rd908];
	xor.b32  	%r1042, %r1038, %r1041;
	and.b32  	%r1043, %r52, 255;
	mul.wide.u32 	%rd909, %r1043, 4;
	add.s64 	%rd910, %rd71, %rd909;
	ld.shared.u8 	%r1044, [%rd910];
	mul.wide.u32 	%rd911, %r1044, 4;
	add.s64 	%rd912, %rd187, %rd911;
	ld.shared.u32 	%r1045, [%rd912];
	xor.b32  	%r1046, %r1042, %r1045;
	shr.u32 	%r1047, %r54, 24;
	mul.wide.u32 	%rd913, %r1047, 4;
	add.s64 	%rd914, %rd71, %rd913;
	ld.shared.u8 	%r1048, [%rd914];
	mul.wide.u32 	%rd915, %r1048, 4;
	add.s64 	%rd916, %rd172, %rd915;
	bfe.u32 	%r1049, %r54, 16, 8;
	mul.wide.u32 	%rd917, %r1049, 4;
	add.s64 	%rd918, %rd71, %rd917;
	ld.shared.u8 	%r1050, [%rd918];
	mul.wide.u32 	%rd919, %r1050, 4;
	add.s64 	%rd920, %rd177, %rd919;
	ld.shared.u32 	%r1051, [%rd920];
	ld.shared.u32 	%r1052, [%rd916];
	xor.b32  	%r1053, %r1051, %r1052;
	bfe.u32 	%r1054, %r54, 8, 8;
	mul.wide.u32 	%rd921, %r1054, 4;
	add.s64 	%rd922, %rd71, %rd921;
	ld.shared.u8 	%r1055, [%rd922];
	mul.wide.u32 	%rd923, %r1055, 4;
	add.s64 	%rd924, %rd182, %rd923;
	ld.shared.u32 	%r1056, [%rd924];
	xor.b32  	%r1057, %r1053, %r1056;
	and.b32  	%r1058, %r54, 255;
	mul.wide.u32 	%rd925, %r1058, 4;
	add.s64 	%rd926, %rd71, %rd925;
	ld.shared.u8 	%r1059, [%rd926];
	mul.wide.u32 	%rd927, %r1059, 4;
	add.s64 	%rd928, %rd187, %rd927;
	ld.shared.u32 	%r1060, [%rd928];
	xor.b32  	%r1061, %r1057, %r1060;
	mul.wide.u32 	%rd929, %r130, 4;
	add.s64 	%rd930, %rd172, %rd929;
	add.s64 	%rd931, %rd71, %rd61;
	ld.shared.u8 	%r1062, [%rd931];
	mul.wide.u32 	%rd932, %r1062, 4;
	add.s64 	%rd933, %rd177, %rd932;
	ld.shared.u32 	%r1063, [%rd933];
	ld.shared.u32 	%r1064, [%rd930];
	xor.b32  	%r1065, %r1063, %r1064;
	add.s64 	%rd934, %rd71, %rd64;
	ld.shared.u8 	%r1066, [%rd934];
	mul.wide.u32 	%rd935, %r1066, 4;
	add.s64 	%rd936, %rd182, %rd935;
	ld.shared.u32 	%r1067, [%rd936];
	xor.b32  	%r1068, %r1065, %r1067;
	add.s64 	%rd937, %rd71, %rd67;
	ld.shared.u8 	%r1069, [%rd937];
	mul.wide.u32 	%rd938, %r1069, 4;
	add.s64 	%rd939, %rd187, %rd938;
	ld.shared.u32 	%r1070, [%rd939];
	xor.b32  	%r1071, %r1068, %r1070;
	cvt.u64.u32	%rd10, %r5;
	mul.wide.u32 	%rd940, %r5, 328;
	add.s64 	%rd941, %rd14, %rd940;
	ld.global.u32 	%r1072, [%rd941+256];
	add.s32 	%r1073, %r1072, -32;
	and.b32  	%r1074, %r1073, -4;
	cvt.u64.u32	%rd942, %r1074;
	add.s64 	%rd943, %rd941, %rd942;
	ld.global.u32 	%r59, [%rd943];
	// inline asm
	prmt.b32 %r58, %r59, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r61, [%rd943+4];
	// inline asm
	prmt.b32 %r60, %r61, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r63, [%rd943+8];
	// inline asm
	prmt.b32 %r62, %r63, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r65, [%rd943+12];
	// inline asm
	prmt.b32 %r64, %r65, 0, 0x0123;
	// inline asm
	add.s32 	%r1075, %r1072, -16;
	and.b32  	%r1076, %r1075, -4;
	cvt.u64.u32	%rd944, %r1076;
	add.s64 	%rd945, %rd941, %rd944;
	ld.global.u32 	%r67, [%rd945];
	// inline asm
	prmt.b32 %r66, %r67, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r69, [%rd945+4];
	// inline asm
	prmt.b32 %r68, %r69, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r71, [%rd945+8];
	// inline asm
	prmt.b32 %r70, %r71, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r73, [%rd945+12];
	// inline asm
	prmt.b32 %r72, %r73, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r74, %r66, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r76, %r68, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r78, %r70, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r80, %r72, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r82, %r74, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r84, %r76, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r86, %r78, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r88, %r80, 0, 0x0123;
	// inline asm
	xor.b32  	%r1077, %r82, %r353;
	xor.b32  	%r1078, %r84, %r354;
	xor.b32  	%r1079, %r355, %r86;
	xor.b32  	%r1080, %r356, %r88;
	shr.u32 	%r1081, %r1077, 24;
	mul.wide.u32 	%rd946, %r1081, 4;
	add.s64 	%rd947, %rd172, %rd946;
	bfe.u32 	%r1082, %r1080, 16, 8;
	mul.wide.u32 	%rd948, %r1082, 4;
	add.s64 	%rd949, %rd177, %rd948;
	bfe.u32 	%r1083, %r1079, 8, 8;
	mul.wide.u32 	%rd950, %r1083, 4;
	add.s64 	%rd951, %rd182, %rd950;
	and.b32  	%r1084, %r1078, 255;
	mul.wide.u32 	%rd952, %r1084, 4;
	add.s64 	%rd953, %rd187, %rd952;
	ld.shared.u32 	%r1085, [%rd947];
	xor.b32  	%r1086, %r371, %r1085;
	ld.shared.u32 	%r1087, [%rd949];
	xor.b32  	%r1088, %r1086, %r1087;
	ld.shared.u32 	%r1089, [%rd951];
	xor.b32  	%r1090, %r1088, %r1089;
	ld.shared.u32 	%r1091, [%rd953];
	xor.b32  	%r1092, %r1090, %r1091;
	shr.u32 	%r1093, %r1078, 24;
	mul.wide.u32 	%rd954, %r1093, 4;
	add.s64 	%rd955, %rd172, %rd954;
	bfe.u32 	%r1094, %r1077, 16, 8;
	mul.wide.u32 	%rd956, %r1094, 4;
	add.s64 	%rd957, %rd177, %rd956;
	bfe.u32 	%r1095, %r1080, 8, 8;
	mul.wide.u32 	%rd958, %r1095, 4;
	add.s64 	%rd959, %rd182, %rd958;
	and.b32  	%r1096, %r1079, 255;
	mul.wide.u32 	%rd960, %r1096, 4;
	add.s64 	%rd961, %rd187, %rd960;
	ld.shared.u32 	%r1097, [%rd955];
	xor.b32  	%r1098, %r386, %r1097;
	ld.shared.u32 	%r1099, [%rd957];
	xor.b32  	%r1100, %r1098, %r1099;
	ld.shared.u32 	%r1101, [%rd959];
	xor.b32  	%r1102, %r1100, %r1101;
	ld.shared.u32 	%r1103, [%rd961];
	xor.b32  	%r1104, %r1102, %r1103;
	shr.u32 	%r1105, %r1079, 24;
	mul.wide.u32 	%rd962, %r1105, 4;
	add.s64 	%rd963, %rd172, %rd962;
	bfe.u32 	%r1106, %r1078, 16, 8;
	mul.wide.u32 	%rd964, %r1106, 4;
	add.s64 	%rd965, %rd177, %rd964;
	bfe.u32 	%r1107, %r1077, 8, 8;
	mul.wide.u32 	%rd966, %r1107, 4;
	add.s64 	%rd967, %rd182, %rd966;
	and.b32  	%r1108, %r1080, 255;
	mul.wide.u32 	%rd968, %r1108, 4;
	add.s64 	%rd969, %rd187, %rd968;
	ld.shared.u32 	%r1109, [%rd963];
	xor.b32  	%r1110, %r401, %r1109;
	ld.shared.u32 	%r1111, [%rd965];
	xor.b32  	%r1112, %r1110, %r1111;
	ld.shared.u32 	%r1113, [%rd967];
	xor.b32  	%r1114, %r1112, %r1113;
	ld.shared.u32 	%r1115, [%rd969];
	xor.b32  	%r1116, %r1114, %r1115;
	shr.u32 	%r1117, %r1080, 24;
	mul.wide.u32 	%rd970, %r1117, 4;
	add.s64 	%rd971, %rd172, %rd970;
	bfe.u32 	%r1118, %r1079, 16, 8;
	mul.wide.u32 	%rd972, %r1118, 4;
	add.s64 	%rd973, %rd177, %rd972;
	bfe.u32 	%r1119, %r1078, 8, 8;
	mul.wide.u32 	%rd974, %r1119, 4;
	add.s64 	%rd975, %rd182, %rd974;
	and.b32  	%r1120, %r1077, 255;
	mul.wide.u32 	%rd976, %r1120, 4;
	add.s64 	%rd977, %rd187, %rd976;
	ld.shared.u32 	%r1121, [%rd971];
	xor.b32  	%r1122, %r411, %r1121;
	ld.shared.u32 	%r1123, [%rd973];
	xor.b32  	%r1124, %r1122, %r1123;
	ld.shared.u32 	%r1125, [%rd975];
	xor.b32  	%r1126, %r1124, %r1125;
	ld.shared.u32 	%r1127, [%rd977];
	xor.b32  	%r1128, %r1126, %r1127;
	shr.u32 	%r1129, %r1092, 24;
	mul.wide.u32 	%rd978, %r1129, 4;
	add.s64 	%rd979, %rd172, %rd978;
	bfe.u32 	%r1130, %r1128, 16, 8;
	mul.wide.u32 	%rd980, %r1130, 4;
	add.s64 	%rd981, %rd177, %rd980;
	bfe.u32 	%r1131, %r1116, 8, 8;
	mul.wide.u32 	%rd982, %r1131, 4;
	add.s64 	%rd983, %rd182, %rd982;
	and.b32  	%r1132, %r1104, 255;
	mul.wide.u32 	%rd984, %r1132, 4;
	add.s64 	%rd985, %rd187, %rd984;
	ld.shared.u32 	%r1133, [%rd979];
	xor.b32  	%r1134, %r426, %r1133;
	ld.shared.u32 	%r1135, [%rd981];
	xor.b32  	%r1136, %r1134, %r1135;
	ld.shared.u32 	%r1137, [%rd983];
	xor.b32  	%r1138, %r1136, %r1137;
	ld.shared.u32 	%r1139, [%rd985];
	xor.b32  	%r1140, %r1138, %r1139;
	shr.u32 	%r1141, %r1104, 24;
	mul.wide.u32 	%rd986, %r1141, 4;
	add.s64 	%rd987, %rd172, %rd986;
	bfe.u32 	%r1142, %r1092, 16, 8;
	mul.wide.u32 	%rd988, %r1142, 4;
	add.s64 	%rd989, %rd177, %rd988;
	bfe.u32 	%r1143, %r1128, 8, 8;
	mul.wide.u32 	%rd990, %r1143, 4;
	add.s64 	%rd991, %rd182, %rd990;
	and.b32  	%r1144, %r1116, 255;
	mul.wide.u32 	%rd992, %r1144, 4;
	add.s64 	%rd993, %rd187, %rd992;
	ld.shared.u32 	%r1145, [%rd987];
	xor.b32  	%r1146, %r441, %r1145;
	ld.shared.u32 	%r1147, [%rd989];
	xor.b32  	%r1148, %r1146, %r1147;
	ld.shared.u32 	%r1149, [%rd991];
	xor.b32  	%r1150, %r1148, %r1149;
	ld.shared.u32 	%r1151, [%rd993];
	xor.b32  	%r1152, %r1150, %r1151;
	shr.u32 	%r1153, %r1116, 24;
	mul.wide.u32 	%rd994, %r1153, 4;
	add.s64 	%rd995, %rd172, %rd994;
	bfe.u32 	%r1154, %r1104, 16, 8;
	mul.wide.u32 	%rd996, %r1154, 4;
	add.s64 	%rd997, %rd177, %rd996;
	bfe.u32 	%r1155, %r1092, 8, 8;
	mul.wide.u32 	%rd998, %r1155, 4;
	add.s64 	%rd999, %rd182, %rd998;
	and.b32  	%r1156, %r1128, 255;
	mul.wide.u32 	%rd1000, %r1156, 4;
	add.s64 	%rd1001, %rd187, %rd1000;
	ld.shared.u32 	%r1157, [%rd995];
	xor.b32  	%r1158, %r456, %r1157;
	ld.shared.u32 	%r1159, [%rd997];
	xor.b32  	%r1160, %r1158, %r1159;
	ld.shared.u32 	%r1161, [%rd999];
	xor.b32  	%r1162, %r1160, %r1161;
	ld.shared.u32 	%r1163, [%rd1001];
	xor.b32  	%r1164, %r1162, %r1163;
	shr.u32 	%r1165, %r1128, 24;
	mul.wide.u32 	%rd1002, %r1165, 4;
	add.s64 	%rd1003, %rd172, %rd1002;
	bfe.u32 	%r1166, %r1116, 16, 8;
	mul.wide.u32 	%rd1004, %r1166, 4;
	add.s64 	%rd1005, %rd177, %rd1004;
	bfe.u32 	%r1167, %r1104, 8, 8;
	mul.wide.u32 	%rd1006, %r1167, 4;
	add.s64 	%rd1007, %rd182, %rd1006;
	and.b32  	%r1168, %r1092, 255;
	mul.wide.u32 	%rd1008, %r1168, 4;
	add.s64 	%rd1009, %rd187, %rd1008;
	ld.shared.u32 	%r1169, [%rd1003];
	xor.b32  	%r1170, %r466, %r1169;
	ld.shared.u32 	%r1171, [%rd1005];
	xor.b32  	%r1172, %r1170, %r1171;
	ld.shared.u32 	%r1173, [%rd1007];
	xor.b32  	%r1174, %r1172, %r1173;
	ld.shared.u32 	%r1175, [%rd1009];
	xor.b32  	%r1176, %r1174, %r1175;
	shr.u32 	%r1177, %r1140, 24;
	mul.wide.u32 	%rd1010, %r1177, 4;
	add.s64 	%rd1011, %rd172, %rd1010;
	bfe.u32 	%r1178, %r1176, 16, 8;
	mul.wide.u32 	%rd1012, %r1178, 4;
	add.s64 	%rd1013, %rd177, %rd1012;
	bfe.u32 	%r1179, %r1164, 8, 8;
	mul.wide.u32 	%rd1014, %r1179, 4;
	add.s64 	%rd1015, %rd182, %rd1014;
	and.b32  	%r1180, %r1152, 255;
	mul.wide.u32 	%rd1016, %r1180, 4;
	add.s64 	%rd1017, %rd187, %rd1016;
	ld.shared.u32 	%r1181, [%rd1011];
	xor.b32  	%r1182, %r481, %r1181;
	ld.shared.u32 	%r1183, [%rd1013];
	xor.b32  	%r1184, %r1182, %r1183;
	ld.shared.u32 	%r1185, [%rd1015];
	xor.b32  	%r1186, %r1184, %r1185;
	ld.shared.u32 	%r1187, [%rd1017];
	xor.b32  	%r1188, %r1186, %r1187;
	shr.u32 	%r1189, %r1152, 24;
	mul.wide.u32 	%rd1018, %r1189, 4;
	add.s64 	%rd1019, %rd172, %rd1018;
	bfe.u32 	%r1190, %r1140, 16, 8;
	mul.wide.u32 	%rd1020, %r1190, 4;
	add.s64 	%rd1021, %rd177, %rd1020;
	bfe.u32 	%r1191, %r1176, 8, 8;
	mul.wide.u32 	%rd1022, %r1191, 4;
	add.s64 	%rd1023, %rd182, %rd1022;
	and.b32  	%r1192, %r1164, 255;
	mul.wide.u32 	%rd1024, %r1192, 4;
	add.s64 	%rd1025, %rd187, %rd1024;
	ld.shared.u32 	%r1193, [%rd1019];
	xor.b32  	%r1194, %r496, %r1193;
	ld.shared.u32 	%r1195, [%rd1021];
	xor.b32  	%r1196, %r1194, %r1195;
	ld.shared.u32 	%r1197, [%rd1023];
	xor.b32  	%r1198, %r1196, %r1197;
	ld.shared.u32 	%r1199, [%rd1025];
	xor.b32  	%r1200, %r1198, %r1199;
	shr.u32 	%r1201, %r1164, 24;
	mul.wide.u32 	%rd1026, %r1201, 4;
	add.s64 	%rd1027, %rd172, %rd1026;
	bfe.u32 	%r1202, %r1152, 16, 8;
	mul.wide.u32 	%rd1028, %r1202, 4;
	add.s64 	%rd1029, %rd177, %rd1028;
	bfe.u32 	%r1203, %r1140, 8, 8;
	mul.wide.u32 	%rd1030, %r1203, 4;
	add.s64 	%rd1031, %rd182, %rd1030;
	and.b32  	%r1204, %r1176, 255;
	mul.wide.u32 	%rd1032, %r1204, 4;
	add.s64 	%rd1033, %rd187, %rd1032;
	ld.shared.u32 	%r1205, [%rd1027];
	xor.b32  	%r1206, %r511, %r1205;
	ld.shared.u32 	%r1207, [%rd1029];
	xor.b32  	%r1208, %r1206, %r1207;
	ld.shared.u32 	%r1209, [%rd1031];
	xor.b32  	%r1210, %r1208, %r1209;
	ld.shared.u32 	%r1211, [%rd1033];
	xor.b32  	%r1212, %r1210, %r1211;
	shr.u32 	%r1213, %r1176, 24;
	mul.wide.u32 	%rd1034, %r1213, 4;
	add.s64 	%rd1035, %rd172, %rd1034;
	bfe.u32 	%r1214, %r1164, 16, 8;
	mul.wide.u32 	%rd1036, %r1214, 4;
	add.s64 	%rd1037, %rd177, %rd1036;
	bfe.u32 	%r1215, %r1152, 8, 8;
	mul.wide.u32 	%rd1038, %r1215, 4;
	add.s64 	%rd1039, %rd182, %rd1038;
	and.b32  	%r1216, %r1140, 255;
	mul.wide.u32 	%rd1040, %r1216, 4;
	add.s64 	%rd1041, %rd187, %rd1040;
	ld.shared.u32 	%r1217, [%rd1035];
	xor.b32  	%r1218, %r521, %r1217;
	ld.shared.u32 	%r1219, [%rd1037];
	xor.b32  	%r1220, %r1218, %r1219;
	ld.shared.u32 	%r1221, [%rd1039];
	xor.b32  	%r1222, %r1220, %r1221;
	ld.shared.u32 	%r1223, [%rd1041];
	xor.b32  	%r1224, %r1222, %r1223;
	shr.u32 	%r1225, %r1188, 24;
	mul.wide.u32 	%rd1042, %r1225, 4;
	add.s64 	%rd1043, %rd172, %rd1042;
	bfe.u32 	%r1226, %r1224, 16, 8;
	mul.wide.u32 	%rd1044, %r1226, 4;
	add.s64 	%rd1045, %rd177, %rd1044;
	bfe.u32 	%r1227, %r1212, 8, 8;
	mul.wide.u32 	%rd1046, %r1227, 4;
	add.s64 	%rd1047, %rd182, %rd1046;
	and.b32  	%r1228, %r1200, 255;
	mul.wide.u32 	%rd1048, %r1228, 4;
	add.s64 	%rd1049, %rd187, %rd1048;
	ld.shared.u32 	%r1229, [%rd1043];
	xor.b32  	%r1230, %r536, %r1229;
	ld.shared.u32 	%r1231, [%rd1045];
	xor.b32  	%r1232, %r1230, %r1231;
	ld.shared.u32 	%r1233, [%rd1047];
	xor.b32  	%r1234, %r1232, %r1233;
	ld.shared.u32 	%r1235, [%rd1049];
	xor.b32  	%r1236, %r1234, %r1235;
	shr.u32 	%r1237, %r1200, 24;
	mul.wide.u32 	%rd1050, %r1237, 4;
	add.s64 	%rd1051, %rd172, %rd1050;
	bfe.u32 	%r1238, %r1188, 16, 8;
	mul.wide.u32 	%rd1052, %r1238, 4;
	add.s64 	%rd1053, %rd177, %rd1052;
	bfe.u32 	%r1239, %r1224, 8, 8;
	mul.wide.u32 	%rd1054, %r1239, 4;
	add.s64 	%rd1055, %rd182, %rd1054;
	and.b32  	%r1240, %r1212, 255;
	mul.wide.u32 	%rd1056, %r1240, 4;
	add.s64 	%rd1057, %rd187, %rd1056;
	ld.shared.u32 	%r1241, [%rd1051];
	xor.b32  	%r1242, %r551, %r1241;
	ld.shared.u32 	%r1243, [%rd1053];
	xor.b32  	%r1244, %r1242, %r1243;
	ld.shared.u32 	%r1245, [%rd1055];
	xor.b32  	%r1246, %r1244, %r1245;
	ld.shared.u32 	%r1247, [%rd1057];
	xor.b32  	%r1248, %r1246, %r1247;
	shr.u32 	%r1249, %r1212, 24;
	mul.wide.u32 	%rd1058, %r1249, 4;
	add.s64 	%rd1059, %rd172, %rd1058;
	bfe.u32 	%r1250, %r1200, 16, 8;
	mul.wide.u32 	%rd1060, %r1250, 4;
	add.s64 	%rd1061, %rd177, %rd1060;
	bfe.u32 	%r1251, %r1188, 8, 8;
	mul.wide.u32 	%rd1062, %r1251, 4;
	add.s64 	%rd1063, %rd182, %rd1062;
	and.b32  	%r1252, %r1224, 255;
	mul.wide.u32 	%rd1064, %r1252, 4;
	add.s64 	%rd1065, %rd187, %rd1064;
	ld.shared.u32 	%r1253, [%rd1059];
	xor.b32  	%r1254, %r566, %r1253;
	ld.shared.u32 	%r1255, [%rd1061];
	xor.b32  	%r1256, %r1254, %r1255;
	ld.shared.u32 	%r1257, [%rd1063];
	xor.b32  	%r1258, %r1256, %r1257;
	ld.shared.u32 	%r1259, [%rd1065];
	xor.b32  	%r1260, %r1258, %r1259;
	shr.u32 	%r1261, %r1224, 24;
	mul.wide.u32 	%rd1066, %r1261, 4;
	add.s64 	%rd1067, %rd172, %rd1066;
	bfe.u32 	%r1262, %r1212, 16, 8;
	mul.wide.u32 	%rd1068, %r1262, 4;
	add.s64 	%rd1069, %rd177, %rd1068;
	bfe.u32 	%r1263, %r1200, 8, 8;
	mul.wide.u32 	%rd1070, %r1263, 4;
	add.s64 	%rd1071, %rd182, %rd1070;
	and.b32  	%r1264, %r1188, 255;
	mul.wide.u32 	%rd1072, %r1264, 4;
	add.s64 	%rd1073, %rd187, %rd1072;
	ld.shared.u32 	%r1265, [%rd1067];
	xor.b32  	%r1266, %r576, %r1265;
	ld.shared.u32 	%r1267, [%rd1069];
	xor.b32  	%r1268, %r1266, %r1267;
	ld.shared.u32 	%r1269, [%rd1071];
	xor.b32  	%r1270, %r1268, %r1269;
	ld.shared.u32 	%r1271, [%rd1073];
	xor.b32  	%r1272, %r1270, %r1271;
	shr.u32 	%r1273, %r1236, 24;
	mul.wide.u32 	%rd1074, %r1273, 4;
	add.s64 	%rd1075, %rd172, %rd1074;
	bfe.u32 	%r1274, %r1272, 16, 8;
	mul.wide.u32 	%rd1076, %r1274, 4;
	add.s64 	%rd1077, %rd177, %rd1076;
	bfe.u32 	%r1275, %r1260, 8, 8;
	mul.wide.u32 	%rd1078, %r1275, 4;
	add.s64 	%rd1079, %rd182, %rd1078;
	and.b32  	%r1276, %r1248, 255;
	mul.wide.u32 	%rd1080, %r1276, 4;
	add.s64 	%rd1081, %rd187, %rd1080;
	ld.shared.u32 	%r1277, [%rd1075];
	xor.b32  	%r1278, %r591, %r1277;
	ld.shared.u32 	%r1279, [%rd1077];
	xor.b32  	%r1280, %r1278, %r1279;
	ld.shared.u32 	%r1281, [%rd1079];
	xor.b32  	%r1282, %r1280, %r1281;
	ld.shared.u32 	%r1283, [%rd1081];
	xor.b32  	%r1284, %r1282, %r1283;
	shr.u32 	%r1285, %r1248, 24;
	mul.wide.u32 	%rd1082, %r1285, 4;
	add.s64 	%rd1083, %rd172, %rd1082;
	bfe.u32 	%r1286, %r1236, 16, 8;
	mul.wide.u32 	%rd1084, %r1286, 4;
	add.s64 	%rd1085, %rd177, %rd1084;
	bfe.u32 	%r1287, %r1272, 8, 8;
	mul.wide.u32 	%rd1086, %r1287, 4;
	add.s64 	%rd1087, %rd182, %rd1086;
	and.b32  	%r1288, %r1260, 255;
	mul.wide.u32 	%rd1088, %r1288, 4;
	add.s64 	%rd1089, %rd187, %rd1088;
	ld.shared.u32 	%r1289, [%rd1083];
	xor.b32  	%r1290, %r606, %r1289;
	ld.shared.u32 	%r1291, [%rd1085];
	xor.b32  	%r1292, %r1290, %r1291;
	ld.shared.u32 	%r1293, [%rd1087];
	xor.b32  	%r1294, %r1292, %r1293;
	ld.shared.u32 	%r1295, [%rd1089];
	xor.b32  	%r1296, %r1294, %r1295;
	shr.u32 	%r1297, %r1260, 24;
	mul.wide.u32 	%rd1090, %r1297, 4;
	add.s64 	%rd1091, %rd172, %rd1090;
	bfe.u32 	%r1298, %r1248, 16, 8;
	mul.wide.u32 	%rd1092, %r1298, 4;
	add.s64 	%rd1093, %rd177, %rd1092;
	bfe.u32 	%r1299, %r1236, 8, 8;
	mul.wide.u32 	%rd1094, %r1299, 4;
	add.s64 	%rd1095, %rd182, %rd1094;
	and.b32  	%r1300, %r1272, 255;
	mul.wide.u32 	%rd1096, %r1300, 4;
	add.s64 	%rd1097, %rd187, %rd1096;
	ld.shared.u32 	%r1301, [%rd1091];
	xor.b32  	%r1302, %r621, %r1301;
	ld.shared.u32 	%r1303, [%rd1093];
	xor.b32  	%r1304, %r1302, %r1303;
	ld.shared.u32 	%r1305, [%rd1095];
	xor.b32  	%r1306, %r1304, %r1305;
	ld.shared.u32 	%r1307, [%rd1097];
	xor.b32  	%r1308, %r1306, %r1307;
	shr.u32 	%r1309, %r1272, 24;
	mul.wide.u32 	%rd1098, %r1309, 4;
	add.s64 	%rd1099, %rd172, %rd1098;
	bfe.u32 	%r1310, %r1260, 16, 8;
	mul.wide.u32 	%rd1100, %r1310, 4;
	add.s64 	%rd1101, %rd177, %rd1100;
	bfe.u32 	%r1311, %r1248, 8, 8;
	mul.wide.u32 	%rd1102, %r1311, 4;
	add.s64 	%rd1103, %rd182, %rd1102;
	and.b32  	%r1312, %r1236, 255;
	mul.wide.u32 	%rd1104, %r1312, 4;
	add.s64 	%rd1105, %rd187, %rd1104;
	ld.shared.u32 	%r1313, [%rd1099];
	xor.b32  	%r1314, %r631, %r1313;
	ld.shared.u32 	%r1315, [%rd1101];
	xor.b32  	%r1316, %r1314, %r1315;
	ld.shared.u32 	%r1317, [%rd1103];
	xor.b32  	%r1318, %r1316, %r1317;
	ld.shared.u32 	%r1319, [%rd1105];
	xor.b32  	%r1320, %r1318, %r1319;
	shr.u32 	%r1321, %r1284, 24;
	mul.wide.u32 	%rd1106, %r1321, 4;
	add.s64 	%rd1107, %rd172, %rd1106;
	bfe.u32 	%r1322, %r1320, 16, 8;
	mul.wide.u32 	%rd1108, %r1322, 4;
	add.s64 	%rd1109, %rd177, %rd1108;
	bfe.u32 	%r1323, %r1308, 8, 8;
	mul.wide.u32 	%rd1110, %r1323, 4;
	add.s64 	%rd1111, %rd182, %rd1110;
	and.b32  	%r1324, %r1296, 255;
	mul.wide.u32 	%rd1112, %r1324, 4;
	add.s64 	%rd1113, %rd187, %rd1112;
	ld.shared.u32 	%r1325, [%rd1107];
	xor.b32  	%r1326, %r646, %r1325;
	ld.shared.u32 	%r1327, [%rd1109];
	xor.b32  	%r1328, %r1326, %r1327;
	ld.shared.u32 	%r1329, [%rd1111];
	xor.b32  	%r1330, %r1328, %r1329;
	ld.shared.u32 	%r1331, [%rd1113];
	xor.b32  	%r1332, %r1330, %r1331;
	shr.u32 	%r1333, %r1296, 24;
	mul.wide.u32 	%rd1114, %r1333, 4;
	add.s64 	%rd1115, %rd172, %rd1114;
	bfe.u32 	%r1334, %r1284, 16, 8;
	mul.wide.u32 	%rd1116, %r1334, 4;
	add.s64 	%rd1117, %rd177, %rd1116;
	bfe.u32 	%r1335, %r1320, 8, 8;
	mul.wide.u32 	%rd1118, %r1335, 4;
	add.s64 	%rd1119, %rd182, %rd1118;
	and.b32  	%r1336, %r1308, 255;
	mul.wide.u32 	%rd1120, %r1336, 4;
	add.s64 	%rd1121, %rd187, %rd1120;
	ld.shared.u32 	%r1337, [%rd1115];
	xor.b32  	%r1338, %r661, %r1337;
	ld.shared.u32 	%r1339, [%rd1117];
	xor.b32  	%r1340, %r1338, %r1339;
	ld.shared.u32 	%r1341, [%rd1119];
	xor.b32  	%r1342, %r1340, %r1341;
	ld.shared.u32 	%r1343, [%rd1121];
	xor.b32  	%r1344, %r1342, %r1343;
	shr.u32 	%r1345, %r1308, 24;
	mul.wide.u32 	%rd1122, %r1345, 4;
	add.s64 	%rd1123, %rd172, %rd1122;
	bfe.u32 	%r1346, %r1296, 16, 8;
	mul.wide.u32 	%rd1124, %r1346, 4;
	add.s64 	%rd1125, %rd177, %rd1124;
	bfe.u32 	%r1347, %r1284, 8, 8;
	mul.wide.u32 	%rd1126, %r1347, 4;
	add.s64 	%rd1127, %rd182, %rd1126;
	and.b32  	%r1348, %r1320, 255;
	mul.wide.u32 	%rd1128, %r1348, 4;
	add.s64 	%rd1129, %rd187, %rd1128;
	ld.shared.u32 	%r1349, [%rd1123];
	xor.b32  	%r1350, %r676, %r1349;
	ld.shared.u32 	%r1351, [%rd1125];
	xor.b32  	%r1352, %r1350, %r1351;
	ld.shared.u32 	%r1353, [%rd1127];
	xor.b32  	%r1354, %r1352, %r1353;
	ld.shared.u32 	%r1355, [%rd1129];
	xor.b32  	%r1356, %r1354, %r1355;
	shr.u32 	%r1357, %r1320, 24;
	mul.wide.u32 	%rd1130, %r1357, 4;
	add.s64 	%rd1131, %rd172, %rd1130;
	bfe.u32 	%r1358, %r1308, 16, 8;
	mul.wide.u32 	%rd1132, %r1358, 4;
	add.s64 	%rd1133, %rd177, %rd1132;
	bfe.u32 	%r1359, %r1296, 8, 8;
	mul.wide.u32 	%rd1134, %r1359, 4;
	add.s64 	%rd1135, %rd182, %rd1134;
	and.b32  	%r1360, %r1284, 255;
	mul.wide.u32 	%rd1136, %r1360, 4;
	add.s64 	%rd1137, %rd187, %rd1136;
	ld.shared.u32 	%r1361, [%rd1131];
	xor.b32  	%r1362, %r686, %r1361;
	ld.shared.u32 	%r1363, [%rd1133];
	xor.b32  	%r1364, %r1362, %r1363;
	ld.shared.u32 	%r1365, [%rd1135];
	xor.b32  	%r1366, %r1364, %r1365;
	ld.shared.u32 	%r1367, [%rd1137];
	xor.b32  	%r1368, %r1366, %r1367;
	shr.u32 	%r1369, %r1332, 24;
	mul.wide.u32 	%rd1138, %r1369, 4;
	add.s64 	%rd1139, %rd172, %rd1138;
	bfe.u32 	%r1370, %r1368, 16, 8;
	mul.wide.u32 	%rd1140, %r1370, 4;
	add.s64 	%rd1141, %rd177, %rd1140;
	bfe.u32 	%r1371, %r1356, 8, 8;
	mul.wide.u32 	%rd1142, %r1371, 4;
	add.s64 	%rd1143, %rd182, %rd1142;
	and.b32  	%r1372, %r1344, 255;
	mul.wide.u32 	%rd1144, %r1372, 4;
	add.s64 	%rd1145, %rd187, %rd1144;
	ld.shared.u32 	%r1373, [%rd1139];
	xor.b32  	%r1374, %r701, %r1373;
	ld.shared.u32 	%r1375, [%rd1141];
	xor.b32  	%r1376, %r1374, %r1375;
	ld.shared.u32 	%r1377, [%rd1143];
	xor.b32  	%r1378, %r1376, %r1377;
	ld.shared.u32 	%r1379, [%rd1145];
	xor.b32  	%r1380, %r1378, %r1379;
	shr.u32 	%r1381, %r1344, 24;
	mul.wide.u32 	%rd1146, %r1381, 4;
	add.s64 	%rd1147, %rd172, %rd1146;
	bfe.u32 	%r1382, %r1332, 16, 8;
	mul.wide.u32 	%rd1148, %r1382, 4;
	add.s64 	%rd1149, %rd177, %rd1148;
	bfe.u32 	%r1383, %r1368, 8, 8;
	mul.wide.u32 	%rd1150, %r1383, 4;
	add.s64 	%rd1151, %rd182, %rd1150;
	and.b32  	%r1384, %r1356, 255;
	mul.wide.u32 	%rd1152, %r1384, 4;
	add.s64 	%rd1153, %rd187, %rd1152;
	ld.shared.u32 	%r1385, [%rd1147];
	xor.b32  	%r1386, %r716, %r1385;
	ld.shared.u32 	%r1387, [%rd1149];
	xor.b32  	%r1388, %r1386, %r1387;
	ld.shared.u32 	%r1389, [%rd1151];
	xor.b32  	%r1390, %r1388, %r1389;
	ld.shared.u32 	%r1391, [%rd1153];
	xor.b32  	%r1392, %r1390, %r1391;
	shr.u32 	%r1393, %r1356, 24;
	mul.wide.u32 	%rd1154, %r1393, 4;
	add.s64 	%rd1155, %rd172, %rd1154;
	bfe.u32 	%r1394, %r1344, 16, 8;
	mul.wide.u32 	%rd1156, %r1394, 4;
	add.s64 	%rd1157, %rd177, %rd1156;
	bfe.u32 	%r1395, %r1332, 8, 8;
	mul.wide.u32 	%rd1158, %r1395, 4;
	add.s64 	%rd1159, %rd182, %rd1158;
	and.b32  	%r1396, %r1368, 255;
	mul.wide.u32 	%rd1160, %r1396, 4;
	add.s64 	%rd1161, %rd187, %rd1160;
	ld.shared.u32 	%r1397, [%rd1155];
	xor.b32  	%r1398, %r731, %r1397;
	ld.shared.u32 	%r1399, [%rd1157];
	xor.b32  	%r1400, %r1398, %r1399;
	ld.shared.u32 	%r1401, [%rd1159];
	xor.b32  	%r1402, %r1400, %r1401;
	ld.shared.u32 	%r1403, [%rd1161];
	xor.b32  	%r1404, %r1402, %r1403;
	shr.u32 	%r1405, %r1368, 24;
	mul.wide.u32 	%rd1162, %r1405, 4;
	add.s64 	%rd1163, %rd172, %rd1162;
	bfe.u32 	%r1406, %r1356, 16, 8;
	mul.wide.u32 	%rd1164, %r1406, 4;
	add.s64 	%rd1165, %rd177, %rd1164;
	bfe.u32 	%r1407, %r1344, 8, 8;
	mul.wide.u32 	%rd1166, %r1407, 4;
	add.s64 	%rd1167, %rd182, %rd1166;
	and.b32  	%r1408, %r1332, 255;
	mul.wide.u32 	%rd1168, %r1408, 4;
	add.s64 	%rd1169, %rd187, %rd1168;
	ld.shared.u32 	%r1409, [%rd1163];
	xor.b32  	%r1410, %r741, %r1409;
	ld.shared.u32 	%r1411, [%rd1165];
	xor.b32  	%r1412, %r1410, %r1411;
	ld.shared.u32 	%r1413, [%rd1167];
	xor.b32  	%r1414, %r1412, %r1413;
	ld.shared.u32 	%r1415, [%rd1169];
	xor.b32  	%r1416, %r1414, %r1415;
	shr.u32 	%r1417, %r1380, 24;
	mul.wide.u32 	%rd1170, %r1417, 4;
	add.s64 	%rd1171, %rd172, %rd1170;
	bfe.u32 	%r1418, %r1416, 16, 8;
	mul.wide.u32 	%rd1172, %r1418, 4;
	add.s64 	%rd1173, %rd177, %rd1172;
	bfe.u32 	%r1419, %r1404, 8, 8;
	mul.wide.u32 	%rd1174, %r1419, 4;
	add.s64 	%rd1175, %rd182, %rd1174;
	and.b32  	%r1420, %r1392, 255;
	mul.wide.u32 	%rd1176, %r1420, 4;
	add.s64 	%rd1177, %rd187, %rd1176;
	ld.shared.u32 	%r1421, [%rd1171];
	xor.b32  	%r1422, %r756, %r1421;
	ld.shared.u32 	%r1423, [%rd1173];
	xor.b32  	%r1424, %r1422, %r1423;
	ld.shared.u32 	%r1425, [%rd1175];
	xor.b32  	%r1426, %r1424, %r1425;
	ld.shared.u32 	%r1427, [%rd1177];
	xor.b32  	%r1428, %r1426, %r1427;
	shr.u32 	%r1429, %r1392, 24;
	mul.wide.u32 	%rd1178, %r1429, 4;
	add.s64 	%rd1179, %rd172, %rd1178;
	bfe.u32 	%r1430, %r1380, 16, 8;
	mul.wide.u32 	%rd1180, %r1430, 4;
	add.s64 	%rd1181, %rd177, %rd1180;
	bfe.u32 	%r1431, %r1416, 8, 8;
	mul.wide.u32 	%rd1182, %r1431, 4;
	add.s64 	%rd1183, %rd182, %rd1182;
	and.b32  	%r1432, %r1404, 255;
	mul.wide.u32 	%rd1184, %r1432, 4;
	add.s64 	%rd1185, %rd187, %rd1184;
	ld.shared.u32 	%r1433, [%rd1179];
	xor.b32  	%r1434, %r771, %r1433;
	ld.shared.u32 	%r1435, [%rd1181];
	xor.b32  	%r1436, %r1434, %r1435;
	ld.shared.u32 	%r1437, [%rd1183];
	xor.b32  	%r1438, %r1436, %r1437;
	ld.shared.u32 	%r1439, [%rd1185];
	xor.b32  	%r1440, %r1438, %r1439;
	shr.u32 	%r1441, %r1404, 24;
	mul.wide.u32 	%rd1186, %r1441, 4;
	add.s64 	%rd1187, %rd172, %rd1186;
	bfe.u32 	%r1442, %r1392, 16, 8;
	mul.wide.u32 	%rd1188, %r1442, 4;
	add.s64 	%rd1189, %rd177, %rd1188;
	bfe.u32 	%r1443, %r1380, 8, 8;
	mul.wide.u32 	%rd1190, %r1443, 4;
	add.s64 	%rd1191, %rd182, %rd1190;
	and.b32  	%r1444, %r1416, 255;
	mul.wide.u32 	%rd1192, %r1444, 4;
	add.s64 	%rd1193, %rd187, %rd1192;
	ld.shared.u32 	%r1445, [%rd1187];
	xor.b32  	%r1446, %r786, %r1445;
	ld.shared.u32 	%r1447, [%rd1189];
	xor.b32  	%r1448, %r1446, %r1447;
	ld.shared.u32 	%r1449, [%rd1191];
	xor.b32  	%r1450, %r1448, %r1449;
	ld.shared.u32 	%r1451, [%rd1193];
	xor.b32  	%r1452, %r1450, %r1451;
	shr.u32 	%r1453, %r1416, 24;
	mul.wide.u32 	%rd1194, %r1453, 4;
	add.s64 	%rd1195, %rd172, %rd1194;
	bfe.u32 	%r1454, %r1404, 16, 8;
	mul.wide.u32 	%rd1196, %r1454, 4;
	add.s64 	%rd1197, %rd177, %rd1196;
	bfe.u32 	%r1455, %r1392, 8, 8;
	mul.wide.u32 	%rd1198, %r1455, 4;
	add.s64 	%rd1199, %rd182, %rd1198;
	and.b32  	%r1456, %r1380, 255;
	mul.wide.u32 	%rd1200, %r1456, 4;
	add.s64 	%rd1201, %rd187, %rd1200;
	ld.shared.u32 	%r1457, [%rd1195];
	xor.b32  	%r1458, %r796, %r1457;
	ld.shared.u32 	%r1459, [%rd1197];
	xor.b32  	%r1460, %r1458, %r1459;
	ld.shared.u32 	%r1461, [%rd1199];
	xor.b32  	%r1462, %r1460, %r1461;
	ld.shared.u32 	%r1463, [%rd1201];
	xor.b32  	%r1464, %r1462, %r1463;
	shr.u32 	%r1465, %r1428, 24;
	mul.wide.u32 	%rd1202, %r1465, 4;
	add.s64 	%rd1203, %rd172, %rd1202;
	bfe.u32 	%r1466, %r1464, 16, 8;
	mul.wide.u32 	%rd1204, %r1466, 4;
	add.s64 	%rd1205, %rd177, %rd1204;
	bfe.u32 	%r1467, %r1452, 8, 8;
	mul.wide.u32 	%rd1206, %r1467, 4;
	add.s64 	%rd1207, %rd182, %rd1206;
	and.b32  	%r1468, %r1440, 255;
	mul.wide.u32 	%rd1208, %r1468, 4;
	add.s64 	%rd1209, %rd187, %rd1208;
	ld.shared.u32 	%r1469, [%rd1203];
	xor.b32  	%r1470, %r811, %r1469;
	ld.shared.u32 	%r1471, [%rd1205];
	xor.b32  	%r1472, %r1470, %r1471;
	ld.shared.u32 	%r1473, [%rd1207];
	xor.b32  	%r1474, %r1472, %r1473;
	ld.shared.u32 	%r1475, [%rd1209];
	xor.b32  	%r1476, %r1474, %r1475;
	shr.u32 	%r1477, %r1440, 24;
	mul.wide.u32 	%rd1210, %r1477, 4;
	add.s64 	%rd1211, %rd172, %rd1210;
	bfe.u32 	%r1478, %r1428, 16, 8;
	mul.wide.u32 	%rd1212, %r1478, 4;
	add.s64 	%rd1213, %rd177, %rd1212;
	bfe.u32 	%r1479, %r1464, 8, 8;
	mul.wide.u32 	%rd1214, %r1479, 4;
	add.s64 	%rd1215, %rd182, %rd1214;
	and.b32  	%r1480, %r1452, 255;
	mul.wide.u32 	%rd1216, %r1480, 4;
	add.s64 	%rd1217, %rd187, %rd1216;
	ld.shared.u32 	%r1481, [%rd1211];
	xor.b32  	%r1482, %r826, %r1481;
	ld.shared.u32 	%r1483, [%rd1213];
	xor.b32  	%r1484, %r1482, %r1483;
	ld.shared.u32 	%r1485, [%rd1215];
	xor.b32  	%r1486, %r1484, %r1485;
	ld.shared.u32 	%r1487, [%rd1217];
	xor.b32  	%r1488, %r1486, %r1487;
	shr.u32 	%r1489, %r1452, 24;
	mul.wide.u32 	%rd1218, %r1489, 4;
	add.s64 	%rd1219, %rd172, %rd1218;
	bfe.u32 	%r1490, %r1440, 16, 8;
	mul.wide.u32 	%rd1220, %r1490, 4;
	add.s64 	%rd1221, %rd177, %rd1220;
	bfe.u32 	%r1491, %r1428, 8, 8;
	mul.wide.u32 	%rd1222, %r1491, 4;
	add.s64 	%rd1223, %rd182, %rd1222;
	and.b32  	%r1492, %r1464, 255;
	mul.wide.u32 	%rd1224, %r1492, 4;
	add.s64 	%rd1225, %rd187, %rd1224;
	ld.shared.u32 	%r1493, [%rd1219];
	xor.b32  	%r1494, %r841, %r1493;
	ld.shared.u32 	%r1495, [%rd1221];
	xor.b32  	%r1496, %r1494, %r1495;
	ld.shared.u32 	%r1497, [%rd1223];
	xor.b32  	%r1498, %r1496, %r1497;
	ld.shared.u32 	%r1499, [%rd1225];
	xor.b32  	%r1500, %r1498, %r1499;
	shr.u32 	%r1501, %r1464, 24;
	mul.wide.u32 	%rd1226, %r1501, 4;
	add.s64 	%rd1227, %rd172, %rd1226;
	bfe.u32 	%r1502, %r1452, 16, 8;
	mul.wide.u32 	%rd1228, %r1502, 4;
	add.s64 	%rd1229, %rd177, %rd1228;
	bfe.u32 	%r1503, %r1440, 8, 8;
	mul.wide.u32 	%rd1230, %r1503, 4;
	add.s64 	%rd1231, %rd182, %rd1230;
	and.b32  	%r1504, %r1428, 255;
	mul.wide.u32 	%rd1232, %r1504, 4;
	add.s64 	%rd1233, %rd187, %rd1232;
	ld.shared.u32 	%r1505, [%rd1227];
	xor.b32  	%r1506, %r851, %r1505;
	ld.shared.u32 	%r1507, [%rd1229];
	xor.b32  	%r1508, %r1506, %r1507;
	ld.shared.u32 	%r1509, [%rd1231];
	xor.b32  	%r1510, %r1508, %r1509;
	ld.shared.u32 	%r1511, [%rd1233];
	xor.b32  	%r1512, %r1510, %r1511;
	shr.u32 	%r1513, %r1476, 24;
	mul.wide.u32 	%rd1234, %r1513, 4;
	add.s64 	%rd1235, %rd172, %rd1234;
	bfe.u32 	%r1514, %r1512, 16, 8;
	mul.wide.u32 	%rd1236, %r1514, 4;
	add.s64 	%rd1237, %rd177, %rd1236;
	bfe.u32 	%r1515, %r1500, 8, 8;
	mul.wide.u32 	%rd1238, %r1515, 4;
	add.s64 	%rd1239, %rd182, %rd1238;
	and.b32  	%r1516, %r1488, 255;
	mul.wide.u32 	%rd1240, %r1516, 4;
	add.s64 	%rd1241, %rd187, %rd1240;
	ld.shared.u32 	%r1517, [%rd1235];
	xor.b32  	%r1518, %r866, %r1517;
	ld.shared.u32 	%r1519, [%rd1237];
	xor.b32  	%r1520, %r1518, %r1519;
	ld.shared.u32 	%r1521, [%rd1239];
	xor.b32  	%r1522, %r1520, %r1521;
	ld.shared.u32 	%r1523, [%rd1241];
	xor.b32  	%r1524, %r1522, %r1523;
	shr.u32 	%r1525, %r1488, 24;
	mul.wide.u32 	%rd1242, %r1525, 4;
	add.s64 	%rd1243, %rd172, %rd1242;
	bfe.u32 	%r1526, %r1476, 16, 8;
	mul.wide.u32 	%rd1244, %r1526, 4;
	add.s64 	%rd1245, %rd177, %rd1244;
	bfe.u32 	%r1527, %r1512, 8, 8;
	mul.wide.u32 	%rd1246, %r1527, 4;
	add.s64 	%rd1247, %rd182, %rd1246;
	and.b32  	%r1528, %r1500, 255;
	mul.wide.u32 	%rd1248, %r1528, 4;
	add.s64 	%rd1249, %rd187, %rd1248;
	ld.shared.u32 	%r1529, [%rd1243];
	xor.b32  	%r1530, %r881, %r1529;
	ld.shared.u32 	%r1531, [%rd1245];
	xor.b32  	%r1532, %r1530, %r1531;
	ld.shared.u32 	%r1533, [%rd1247];
	xor.b32  	%r1534, %r1532, %r1533;
	ld.shared.u32 	%r1535, [%rd1249];
	xor.b32  	%r1536, %r1534, %r1535;
	shr.u32 	%r1537, %r1500, 24;
	mul.wide.u32 	%rd1250, %r1537, 4;
	add.s64 	%rd1251, %rd172, %rd1250;
	bfe.u32 	%r1538, %r1488, 16, 8;
	mul.wide.u32 	%rd1252, %r1538, 4;
	add.s64 	%rd1253, %rd177, %rd1252;
	bfe.u32 	%r1539, %r1476, 8, 8;
	mul.wide.u32 	%rd1254, %r1539, 4;
	add.s64 	%rd1255, %rd182, %rd1254;
	and.b32  	%r1540, %r1512, 255;
	mul.wide.u32 	%rd1256, %r1540, 4;
	add.s64 	%rd1257, %rd187, %rd1256;
	ld.shared.u32 	%r1541, [%rd1251];
	xor.b32  	%r1542, %r896, %r1541;
	ld.shared.u32 	%r1543, [%rd1253];
	xor.b32  	%r1544, %r1542, %r1543;
	ld.shared.u32 	%r1545, [%rd1255];
	xor.b32  	%r1546, %r1544, %r1545;
	ld.shared.u32 	%r1547, [%rd1257];
	xor.b32  	%r1548, %r1546, %r1547;
	shr.u32 	%r1549, %r1512, 24;
	mul.wide.u32 	%rd1258, %r1549, 4;
	add.s64 	%rd1259, %rd172, %rd1258;
	bfe.u32 	%r1550, %r1500, 16, 8;
	mul.wide.u32 	%rd1260, %r1550, 4;
	add.s64 	%rd1261, %rd177, %rd1260;
	bfe.u32 	%r1551, %r1488, 8, 8;
	mul.wide.u32 	%rd1262, %r1551, 4;
	add.s64 	%rd1263, %rd182, %rd1262;
	and.b32  	%r1552, %r1476, 255;
	mul.wide.u32 	%rd1264, %r1552, 4;
	add.s64 	%rd1265, %rd187, %rd1264;
	ld.shared.u32 	%r1553, [%rd1259];
	xor.b32  	%r1554, %r906, %r1553;
	ld.shared.u32 	%r1555, [%rd1261];
	xor.b32  	%r1556, %r1554, %r1555;
	ld.shared.u32 	%r1557, [%rd1263];
	xor.b32  	%r1558, %r1556, %r1557;
	ld.shared.u32 	%r1559, [%rd1265];
	xor.b32  	%r1560, %r1558, %r1559;
	shr.u32 	%r1561, %r1524, 24;
	mul.wide.u32 	%rd1266, %r1561, 4;
	add.s64 	%rd1267, %rd172, %rd1266;
	bfe.u32 	%r1562, %r1560, 16, 8;
	mul.wide.u32 	%rd1268, %r1562, 4;
	add.s64 	%rd1269, %rd177, %rd1268;
	bfe.u32 	%r1563, %r1548, 8, 8;
	mul.wide.u32 	%rd1270, %r1563, 4;
	add.s64 	%rd1271, %rd182, %rd1270;
	and.b32  	%r1564, %r1536, 255;
	mul.wide.u32 	%rd1272, %r1564, 4;
	add.s64 	%rd1273, %rd187, %rd1272;
	ld.shared.u32 	%r1565, [%rd1267];
	xor.b32  	%r1566, %r921, %r1565;
	ld.shared.u32 	%r1567, [%rd1269];
	xor.b32  	%r1568, %r1566, %r1567;
	ld.shared.u32 	%r1569, [%rd1271];
	xor.b32  	%r1570, %r1568, %r1569;
	ld.shared.u32 	%r1571, [%rd1273];
	xor.b32  	%r1572, %r1570, %r1571;
	shr.u32 	%r1573, %r1536, 24;
	mul.wide.u32 	%rd1274, %r1573, 4;
	add.s64 	%rd1275, %rd172, %rd1274;
	bfe.u32 	%r1574, %r1524, 16, 8;
	mul.wide.u32 	%rd1276, %r1574, 4;
	add.s64 	%rd1277, %rd177, %rd1276;
	bfe.u32 	%r1575, %r1560, 8, 8;
	mul.wide.u32 	%rd1278, %r1575, 4;
	add.s64 	%rd1279, %rd182, %rd1278;
	and.b32  	%r1576, %r1548, 255;
	mul.wide.u32 	%rd1280, %r1576, 4;
	add.s64 	%rd1281, %rd187, %rd1280;
	ld.shared.u32 	%r1577, [%rd1275];
	xor.b32  	%r1578, %r936, %r1577;
	ld.shared.u32 	%r1579, [%rd1277];
	xor.b32  	%r1580, %r1578, %r1579;
	ld.shared.u32 	%r1581, [%rd1279];
	xor.b32  	%r1582, %r1580, %r1581;
	ld.shared.u32 	%r1583, [%rd1281];
	xor.b32  	%r1584, %r1582, %r1583;
	shr.u32 	%r1585, %r1548, 24;
	mul.wide.u32 	%rd1282, %r1585, 4;
	add.s64 	%rd1283, %rd172, %rd1282;
	bfe.u32 	%r1586, %r1536, 16, 8;
	mul.wide.u32 	%rd1284, %r1586, 4;
	add.s64 	%rd1285, %rd177, %rd1284;
	bfe.u32 	%r1587, %r1524, 8, 8;
	mul.wide.u32 	%rd1286, %r1587, 4;
	add.s64 	%rd1287, %rd182, %rd1286;
	and.b32  	%r1588, %r1560, 255;
	mul.wide.u32 	%rd1288, %r1588, 4;
	add.s64 	%rd1289, %rd187, %rd1288;
	ld.shared.u32 	%r1589, [%rd1283];
	xor.b32  	%r1590, %r951, %r1589;
	ld.shared.u32 	%r1591, [%rd1285];
	xor.b32  	%r1592, %r1590, %r1591;
	ld.shared.u32 	%r1593, [%rd1287];
	xor.b32  	%r1594, %r1592, %r1593;
	ld.shared.u32 	%r1595, [%rd1289];
	xor.b32  	%r1596, %r1594, %r1595;
	shr.u32 	%r1597, %r1560, 24;
	mul.wide.u32 	%rd1290, %r1597, 4;
	add.s64 	%rd1291, %rd172, %rd1290;
	bfe.u32 	%r1598, %r1548, 16, 8;
	mul.wide.u32 	%rd1292, %r1598, 4;
	add.s64 	%rd1293, %rd177, %rd1292;
	bfe.u32 	%r1599, %r1536, 8, 8;
	mul.wide.u32 	%rd1294, %r1599, 4;
	add.s64 	%rd1295, %rd182, %rd1294;
	and.b32  	%r1600, %r1524, 255;
	mul.wide.u32 	%rd1296, %r1600, 4;
	add.s64 	%rd1297, %rd187, %rd1296;
	ld.shared.u32 	%r1601, [%rd1291];
	xor.b32  	%r1602, %r961, %r1601;
	ld.shared.u32 	%r1603, [%rd1293];
	xor.b32  	%r1604, %r1602, %r1603;
	ld.shared.u32 	%r1605, [%rd1295];
	xor.b32  	%r1606, %r1604, %r1605;
	ld.shared.u32 	%r1607, [%rd1297];
	xor.b32  	%r1608, %r1606, %r1607;
	shr.u32 	%r1609, %r1572, 24;
	mul.wide.u32 	%rd1298, %r1609, 4;
	add.s64 	%rd1299, %rd172, %rd1298;
	bfe.u32 	%r1610, %r1608, 16, 8;
	mul.wide.u32 	%rd1300, %r1610, 4;
	add.s64 	%rd1301, %rd177, %rd1300;
	bfe.u32 	%r1611, %r1596, 8, 8;
	mul.wide.u32 	%rd1302, %r1611, 4;
	add.s64 	%rd1303, %rd182, %rd1302;
	and.b32  	%r1612, %r1584, 255;
	mul.wide.u32 	%rd1304, %r1612, 4;
	add.s64 	%rd1305, %rd187, %rd1304;
	ld.shared.u32 	%r1613, [%rd1299];
	xor.b32  	%r1614, %r976, %r1613;
	ld.shared.u32 	%r1615, [%rd1301];
	xor.b32  	%r1616, %r1614, %r1615;
	ld.shared.u32 	%r1617, [%rd1303];
	xor.b32  	%r1618, %r1616, %r1617;
	ld.shared.u32 	%r1619, [%rd1305];
	xor.b32  	%r1620, %r1618, %r1619;
	shr.u32 	%r1621, %r1584, 24;
	mul.wide.u32 	%rd1306, %r1621, 4;
	add.s64 	%rd1307, %rd172, %rd1306;
	bfe.u32 	%r1622, %r1572, 16, 8;
	mul.wide.u32 	%rd1308, %r1622, 4;
	add.s64 	%rd1309, %rd177, %rd1308;
	bfe.u32 	%r1623, %r1608, 8, 8;
	mul.wide.u32 	%rd1310, %r1623, 4;
	add.s64 	%rd1311, %rd182, %rd1310;
	and.b32  	%r1624, %r1596, 255;
	mul.wide.u32 	%rd1312, %r1624, 4;
	add.s64 	%rd1313, %rd187, %rd1312;
	ld.shared.u32 	%r1625, [%rd1307];
	xor.b32  	%r1626, %r991, %r1625;
	ld.shared.u32 	%r1627, [%rd1309];
	xor.b32  	%r1628, %r1626, %r1627;
	ld.shared.u32 	%r1629, [%rd1311];
	xor.b32  	%r1630, %r1628, %r1629;
	ld.shared.u32 	%r1631, [%rd1313];
	xor.b32  	%r1632, %r1630, %r1631;
	shr.u32 	%r1633, %r1596, 24;
	mul.wide.u32 	%rd1314, %r1633, 4;
	add.s64 	%rd1315, %rd172, %rd1314;
	bfe.u32 	%r1634, %r1584, 16, 8;
	mul.wide.u32 	%rd1316, %r1634, 4;
	add.s64 	%rd1317, %rd177, %rd1316;
	bfe.u32 	%r1635, %r1572, 8, 8;
	mul.wide.u32 	%rd1318, %r1635, 4;
	add.s64 	%rd1319, %rd182, %rd1318;
	and.b32  	%r1636, %r1608, 255;
	mul.wide.u32 	%rd1320, %r1636, 4;
	add.s64 	%rd1321, %rd187, %rd1320;
	ld.shared.u32 	%r1637, [%rd1315];
	xor.b32  	%r1638, %r1006, %r1637;
	ld.shared.u32 	%r1639, [%rd1317];
	xor.b32  	%r1640, %r1638, %r1639;
	ld.shared.u32 	%r1641, [%rd1319];
	xor.b32  	%r1642, %r1640, %r1641;
	ld.shared.u32 	%r1643, [%rd1321];
	xor.b32  	%r1644, %r1642, %r1643;
	shr.u32 	%r1645, %r1608, 24;
	mul.wide.u32 	%rd1322, %r1645, 4;
	add.s64 	%rd1323, %rd172, %rd1322;
	bfe.u32 	%r1646, %r1596, 16, 8;
	mul.wide.u32 	%rd1324, %r1646, 4;
	add.s64 	%rd1325, %rd177, %rd1324;
	bfe.u32 	%r1647, %r1584, 8, 8;
	mul.wide.u32 	%rd1326, %r1647, 4;
	add.s64 	%rd1327, %rd182, %rd1326;
	and.b32  	%r1648, %r1572, 255;
	mul.wide.u32 	%rd1328, %r1648, 4;
	add.s64 	%rd1329, %rd187, %rd1328;
	ld.shared.u32 	%r1649, [%rd1323];
	xor.b32  	%r1650, %r1016, %r1649;
	ld.shared.u32 	%r1651, [%rd1325];
	xor.b32  	%r1652, %r1650, %r1651;
	ld.shared.u32 	%r1653, [%rd1327];
	xor.b32  	%r1654, %r1652, %r1653;
	ld.shared.u32 	%r1655, [%rd1329];
	xor.b32  	%r1656, %r1654, %r1655;
	shr.u32 	%r1657, %r1620, 24;
	mul.wide.u32 	%rd1330, %r1657, 4;
	add.s64 	%rd1331, %rd172, %rd1330;
	bfe.u32 	%r1658, %r1656, 16, 8;
	mul.wide.u32 	%rd1332, %r1658, 4;
	add.s64 	%rd1333, %rd177, %rd1332;
	bfe.u32 	%r1659, %r1644, 8, 8;
	mul.wide.u32 	%rd1334, %r1659, 4;
	add.s64 	%rd1335, %rd182, %rd1334;
	and.b32  	%r1660, %r1632, 255;
	mul.wide.u32 	%rd1336, %r1660, 4;
	add.s64 	%rd1337, %rd187, %rd1336;
	ld.shared.u32 	%r1661, [%rd1331];
	xor.b32  	%r1662, %r1031, %r1661;
	ld.shared.u32 	%r1663, [%rd1333];
	xor.b32  	%r1664, %r1662, %r1663;
	ld.shared.u32 	%r1665, [%rd1335];
	xor.b32  	%r1666, %r1664, %r1665;
	ld.shared.u32 	%r1667, [%rd1337];
	xor.b32  	%r1668, %r1666, %r1667;
	shr.u32 	%r1669, %r1632, 24;
	mul.wide.u32 	%rd1338, %r1669, 4;
	add.s64 	%rd1339, %rd172, %rd1338;
	bfe.u32 	%r1670, %r1620, 16, 8;
	mul.wide.u32 	%rd1340, %r1670, 4;
	add.s64 	%rd1341, %rd177, %rd1340;
	bfe.u32 	%r1671, %r1656, 8, 8;
	mul.wide.u32 	%rd1342, %r1671, 4;
	add.s64 	%rd1343, %rd182, %rd1342;
	and.b32  	%r1672, %r1644, 255;
	mul.wide.u32 	%rd1344, %r1672, 4;
	add.s64 	%rd1345, %rd187, %rd1344;
	ld.shared.u32 	%r1673, [%rd1339];
	xor.b32  	%r1674, %r1046, %r1673;
	ld.shared.u32 	%r1675, [%rd1341];
	xor.b32  	%r1676, %r1674, %r1675;
	ld.shared.u32 	%r1677, [%rd1343];
	xor.b32  	%r1678, %r1676, %r1677;
	ld.shared.u32 	%r1679, [%rd1345];
	xor.b32  	%r1680, %r1678, %r1679;
	shr.u32 	%r1681, %r1644, 24;
	mul.wide.u32 	%rd1346, %r1681, 4;
	add.s64 	%rd1347, %rd172, %rd1346;
	bfe.u32 	%r1682, %r1632, 16, 8;
	mul.wide.u32 	%rd1348, %r1682, 4;
	add.s64 	%rd1349, %rd177, %rd1348;
	bfe.u32 	%r1683, %r1620, 8, 8;
	mul.wide.u32 	%rd1350, %r1683, 4;
	add.s64 	%rd1351, %rd182, %rd1350;
	and.b32  	%r1684, %r1656, 255;
	mul.wide.u32 	%rd1352, %r1684, 4;
	add.s64 	%rd1353, %rd187, %rd1352;
	ld.shared.u32 	%r1685, [%rd1347];
	xor.b32  	%r1686, %r1061, %r1685;
	ld.shared.u32 	%r1687, [%rd1349];
	xor.b32  	%r1688, %r1686, %r1687;
	ld.shared.u32 	%r1689, [%rd1351];
	xor.b32  	%r1690, %r1688, %r1689;
	ld.shared.u32 	%r1691, [%rd1353];
	xor.b32  	%r1692, %r1690, %r1691;
	shr.u32 	%r1693, %r1656, 24;
	mul.wide.u32 	%rd1354, %r1693, 4;
	add.s64 	%rd1355, %rd172, %rd1354;
	bfe.u32 	%r1694, %r1644, 16, 8;
	mul.wide.u32 	%rd1356, %r1694, 4;
	add.s64 	%rd1357, %rd177, %rd1356;
	bfe.u32 	%r1695, %r1632, 8, 8;
	mul.wide.u32 	%rd1358, %r1695, 4;
	add.s64 	%rd1359, %rd182, %rd1358;
	and.b32  	%r1696, %r1620, 255;
	mul.wide.u32 	%rd1360, %r1696, 4;
	add.s64 	%rd1361, %rd187, %rd1360;
	ld.shared.u32 	%r1697, [%rd1355];
	xor.b32  	%r1698, %r1071, %r1697;
	ld.shared.u32 	%r1699, [%rd1357];
	xor.b32  	%r1700, %r1698, %r1699;
	ld.shared.u32 	%r1701, [%rd1359];
	xor.b32  	%r1702, %r1700, %r1701;
	ld.shared.u32 	%r1703, [%rd1361];
	xor.b32  	%r1704, %r1702, %r1703;
	shr.u32 	%r1705, %r1668, 24;
	mul.wide.u32 	%rd1362, %r1705, 4;
	mov.u64 	%rd1363, m11300_comp$s_td4;
	add.s64 	%rd1364, %rd1363, %rd1362;
	ld.shared.u32 	%r1706, [%rd1364];
	and.b32  	%r1707, %r1706, -16777216;
	bfe.u32 	%r1708, %r1704, 16, 8;
	mul.wide.u32 	%rd1365, %r1708, 4;
	add.s64 	%rd1366, %rd1363, %rd1365;
	ld.shared.u32 	%r1709, [%rd1366];
	and.b32  	%r1710, %r1709, 16711680;
	or.b32  	%r1711, %r1710, %r1707;
	bfe.u32 	%r1712, %r1692, 8, 8;
	mul.wide.u32 	%rd1367, %r1712, 4;
	add.s64 	%rd1368, %rd1363, %rd1367;
	ld.shared.u32 	%r1713, [%rd1368];
	and.b32  	%r1714, %r1713, 65280;
	or.b32  	%r1715, %r1711, %r1714;
	and.b32  	%r1716, %r1680, 255;
	mul.wide.u32 	%rd1369, %r1716, 4;
	add.s64 	%rd1370, %rd1363, %rd1369;
	ld.shared.u8 	%r1717, [%rd1370];
	or.b32  	%r1718, %r1715, %r1717;
	xor.b32  	%r91, %r1718, %r42;
	shr.u32 	%r1719, %r1680, 24;
	mul.wide.u32 	%rd1371, %r1719, 4;
	add.s64 	%rd1372, %rd1363, %rd1371;
	ld.shared.u32 	%r1720, [%rd1372];
	and.b32  	%r1721, %r1720, -16777216;
	bfe.u32 	%r1722, %r1668, 16, 8;
	mul.wide.u32 	%rd1373, %r1722, 4;
	add.s64 	%rd1374, %rd1363, %rd1373;
	ld.shared.u32 	%r1723, [%rd1374];
	and.b32  	%r1724, %r1723, 16711680;
	or.b32  	%r1725, %r1724, %r1721;
	bfe.u32 	%r1726, %r1704, 8, 8;
	mul.wide.u32 	%rd1375, %r1726, 4;
	add.s64 	%rd1376, %rd1363, %rd1375;
	ld.shared.u32 	%r1727, [%rd1376];
	and.b32  	%r1728, %r1727, 65280;
	or.b32  	%r1729, %r1725, %r1728;
	and.b32  	%r1730, %r1692, 255;
	mul.wide.u32 	%rd1377, %r1730, 4;
	add.s64 	%rd1378, %rd1363, %rd1377;
	ld.shared.u8 	%r1731, [%rd1378];
	or.b32  	%r1732, %r1729, %r1731;
	xor.b32  	%r93, %r1732, %r44;
	shr.u32 	%r1733, %r1692, 24;
	mul.wide.u32 	%rd1379, %r1733, 4;
	add.s64 	%rd1380, %rd1363, %rd1379;
	ld.shared.u32 	%r1734, [%rd1380];
	and.b32  	%r1735, %r1734, -16777216;
	bfe.u32 	%r1736, %r1680, 16, 8;
	mul.wide.u32 	%rd1381, %r1736, 4;
	add.s64 	%rd1382, %rd1363, %rd1381;
	ld.shared.u32 	%r1737, [%rd1382];
	and.b32  	%r1738, %r1737, 16711680;
	or.b32  	%r1739, %r1738, %r1735;
	bfe.u32 	%r1740, %r1668, 8, 8;
	mul.wide.u32 	%rd1383, %r1740, 4;
	add.s64 	%rd1384, %rd1363, %rd1383;
	ld.shared.u32 	%r1741, [%rd1384];
	and.b32  	%r1742, %r1741, 65280;
	or.b32  	%r1743, %r1739, %r1742;
	and.b32  	%r1744, %r1704, 255;
	mul.wide.u32 	%rd1385, %r1744, 4;
	add.s64 	%rd1386, %rd1363, %rd1385;
	ld.shared.u8 	%r1745, [%rd1386];
	or.b32  	%r1746, %r1743, %r1745;
	xor.b32  	%r95, %r1746, %r46;
	shr.u32 	%r1747, %r1704, 24;
	mul.wide.u32 	%rd1387, %r1747, 4;
	add.s64 	%rd1388, %rd1363, %rd1387;
	ld.shared.u32 	%r1748, [%rd1388];
	and.b32  	%r1749, %r1748, -16777216;
	bfe.u32 	%r1750, %r1692, 16, 8;
	mul.wide.u32 	%rd1389, %r1750, 4;
	add.s64 	%rd1390, %rd1363, %rd1389;
	ld.shared.u32 	%r1751, [%rd1390];
	and.b32  	%r1752, %r1751, 16711680;
	or.b32  	%r1753, %r1752, %r1749;
	bfe.u32 	%r1754, %r1680, 8, 8;
	mul.wide.u32 	%rd1391, %r1754, 4;
	add.s64 	%rd1392, %rd1363, %rd1391;
	ld.shared.u32 	%r1755, [%rd1392];
	and.b32  	%r1756, %r1755, 65280;
	or.b32  	%r1757, %r1753, %r1756;
	and.b32  	%r1758, %r1668, 255;
	mul.wide.u32 	%rd1393, %r1758, 4;
	add.s64 	%rd1394, %rd1363, %rd1393;
	ld.shared.u8 	%r1759, [%rd1394];
	or.b32  	%r1760, %r1757, %r1759;
	xor.b32  	%r97, %r1760, %r48;
	// inline asm
	prmt.b32 %r90, %r91, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r92, %r93, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r94, %r95, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r96, %r97, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r98, %r90, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r100, %r92, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r102, %r94, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r104, %r96, 0, 0x0123;
	// inline asm
	xor.b32  	%r6, %r98, %r58;
	xor.b32  	%r7, %r100, %r60;
	xor.b32  	%r8, %r102, %r62;
	xor.b32  	%r9, %r104, %r64;
	ld.global.u32 	%r1761, [%rd941+324];
	setp.eq.s32	%p4, %r1761, 18;
	mov.u32 	%r1775, 134744072;
	@%p4 bra 	BB3_6;

	setp.eq.s32	%p5, %r6, 269488144;
	mov.u32 	%r1775, 269488144;
	setp.eq.s32	%p6, %r7, 269488144;
	and.pred  	%p7, %p5, %p6;
	@!%p7 bra 	BB3_11;
	bra.uni 	BB3_6;

BB3_6:
	setp.eq.s32	%p8, %r9, %r1775;
	setp.eq.s32	%p9, %r8, %r1775;
	and.pred  	%p10, %p9, %p8;
	@!%p10 bra 	BB3_11;
	bra.uni 	BB3_7;

BB3_7:
	ld.param.u64 	%rd1406, [m11300_comp_param_16];
	add.u64 	%rd1399, %SPL, 0;
	shl.b64 	%rd1395, %rd10, 2;
	add.s64 	%rd1396, %rd1406, %rd1395;
	mov.u32 	%r1763, 1;
	st.local.u32 	[%rd1399], %r1763;
	ld.local.u32 	%r1764, [%rd1399];
	atom.global.add.u32 	%r1765, [%rd1396], %r1764;
	setp.ne.s32	%p11, %r1765, 0;
	@%p11 bra 	BB3_11;

	ld.param.u64 	%rd1410, [m11300_comp_param_24];
	add.s64 	%rd1409, %rd1410, 56;
	ld.param.u64 	%rd1407, [m11300_comp_param_19];
	add.u64 	%rd1401, %SPL, 8;
	ld.global.u32 	%r11, [%rd1409+-44];
	ld.global.u32 	%r1766, [%rd1409+-28];
	st.local.u32 	[%rd1401], %r1763;
	ld.local.u32 	%r1768, [%rd1401];
	atom.global.add.u32 	%r12, [%rd1407], %r1768;
	setp.lt.u32	%p12, %r12, %r1766;
	@%p12 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_10:
	add.s32 	%r1774, %r115, %r4;
	ld.param.u64 	%rd1405, [m11300_comp_param_14];
	mul.wide.u32 	%rd1397, %r12, 32;
	add.s64 	%rd1398, %rd1405, %rd1397;
	st.global.u32 	[%rd1398+12], %r11;
	st.global.u32 	[%rd1398+16], %r4;
	st.global.u32 	[%rd1398+20], %r1774;
	st.global.u64 	[%rd1398], %rd1;
	mov.u32 	%r1773, 0;
	st.global.u32 	[%rd1398+8], %r1773;
	st.global.u32 	[%rd1398+24], %r1773;
	st.global.u32 	[%rd1398+28], %r1773;
	bra.uni 	BB3_11;

BB3_9:
	ld.param.u64 	%rd1408, [m11300_comp_param_19];
	add.u64 	%rd1403, %SPL, 4;
	st.local.u32 	[%rd1403], %r1763;
	ld.local.u32 	%r1770, [%rd1403];
	neg.s32 	%r1771, %r1770;
	atom.global.add.u32 	%r1772, [%rd1408], %r1771;

BB3_11:
	ret;
}


  